
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x3cfe1]        # 442ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <free@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x3cfe2]        # 443008 <flatcc_builder_padding_base@@Base+0xa958>
  406026:	jmp    QWORD PTR [rip+0x3cfe4]        # 443010 <flatcc_builder_padding_base@@Base+0xa960>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <free@plt>:
  406030:	jmp    QWORD PTR [rip+0x3cfe2]        # 443018 <free@GLIBC_2.2.5>
  406036:	push   0x0
  40603b:	jmp    406020 <free@plt-0x10>

0000000000406040 <strncpy@plt>:
  406040:	jmp    QWORD PTR [rip+0x3cfda]        # 443020 <strncpy@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <free@plt-0x10>

0000000000406050 <strtod@plt>:
  406050:	jmp    QWORD PTR [rip+0x3cfd2]        # 443028 <strtod@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <free@plt-0x10>

0000000000406060 <strlen@plt>:
  406060:	jmp    QWORD PTR [rip+0x3cfca]        # 443030 <strlen@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <free@plt-0x10>

0000000000406070 <__assert_fail@plt>:
  406070:	jmp    QWORD PTR [rip+0x3cfc2]        # 443038 <__assert_fail@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <free@plt-0x10>

0000000000406080 <memset@plt>:
  406080:	jmp    QWORD PTR [rip+0x3cfba]        # 443040 <memset@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <free@plt-0x10>

0000000000406090 <fputc@plt>:
  406090:	jmp    QWORD PTR [rip+0x3cfb2]        # 443048 <fputc@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <free@plt-0x10>

00000000004060a0 <memchr@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x3cfaa]        # 443050 <memchr@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <free@plt-0x10>

00000000004060b0 <strcmp@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x3cfa2]        # 443058 <strcmp@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <free@plt-0x10>

00000000004060c0 <fprintf@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x3cf9a]        # 443060 <fprintf@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <free@plt-0x10>

00000000004060d0 <memcpy@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x3cf92]        # 443068 <memcpy@GLIBC_2.14>
  4060d6:	push   0xa
  4060db:	jmp    406020 <free@plt-0x10>

00000000004060e0 <malloc@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x3cf8a]        # 443070 <malloc@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <free@plt-0x10>

00000000004060f0 <bcmp@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x3cf82]        # 443078 <bcmp@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <free@plt-0x10>

0000000000406100 <realloc@plt>:
  406100:	jmp    QWORD PTR [rip+0x3cf7a]        # 443080 <realloc@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <free@plt-0x10>

0000000000406110 <memmove@plt>:
  406110:	jmp    QWORD PTR [rip+0x3cf72]        # 443088 <memmove@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <free@plt-0x10>

0000000000406120 <sprintf@plt>:
  406120:	jmp    QWORD PTR [rip+0x3cf6a]        # 443090 <sprintf@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <free@plt-0x10>

0000000000406130 <fwrite@plt>:
  406130:	jmp    QWORD PTR [rip+0x3cf62]        # 443098 <fwrite@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <free@plt-0x10>

0000000000406140 <posix_memalign@plt>:
  406140:	jmp    QWORD PTR [rip+0x3cf5a]        # 4430a0 <posix_memalign@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <free@plt-0x10>

Disassembly of section .text:

0000000000406150 <_start@@Base>:
  406150:	endbr64 
  406154:	xor    ebp,ebp
  406156:	mov    r9,rdx
  406159:	pop    rsi
  40615a:	mov    rdx,rsp
  40615d:	and    rsp,0xfffffffffffffff0
  406161:	push   rax
  406162:	push   rsp
  406163:	mov    r8,0x4332e0
  40616a:	mov    rcx,0x433270
  406171:	mov    rdi,0x4070d0
  406178:	call   QWORD PTR [rip+0x3ce6a]        # 442fe8 <__libc_start_main@GLIBC_2.2.5>
  40617e:	hlt    
  40617f:	nop
  406180:	endbr64 
  406184:	ret    
  406185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618f:	nop
  406190:	mov    eax,0x4437b8
  406195:	cmp    rax,0x4437b8
  40619b:	je     4061b0 <_start@@Base+0x60>
  40619d:	mov    eax,0x0
  4061a2:	test   rax,rax
  4061a5:	je     4061b0 <_start@@Base+0x60>
  4061a7:	mov    edi,0x4437b8
  4061ac:	jmp    rax
  4061ae:	xchg   ax,ax
  4061b0:	ret    
  4061b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061bc:	nop    DWORD PTR [rax+0x0]
  4061c0:	mov    esi,0x4437b8
  4061c5:	sub    rsi,0x4437b8
  4061cc:	mov    rax,rsi
  4061cf:	shr    rsi,0x3f
  4061d3:	sar    rax,0x3
  4061d7:	add    rsi,rax
  4061da:	sar    rsi,1
  4061dd:	je     4061f0 <_start@@Base+0xa0>
  4061df:	mov    eax,0x0
  4061e4:	test   rax,rax
  4061e7:	je     4061f0 <_start@@Base+0xa0>
  4061e9:	mov    edi,0x4437b8
  4061ee:	jmp    rax
  4061f0:	ret    
  4061f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061fc:	nop    DWORD PTR [rax+0x0]
  406200:	endbr64 
  406204:	cmp    BYTE PTR [rip+0x3d5ad],0x0        # 4437b8 <__bss_start@@Base>
  40620b:	jne    406220 <_start@@Base+0xd0>
  40620d:	push   rbp
  40620e:	mov    rbp,rsp
  406211:	call   406190 <_start@@Base+0x40>
  406216:	mov    BYTE PTR [rip+0x3d59b],0x1        # 4437b8 <__bss_start@@Base>
  40621d:	pop    rbp
  40621e:	ret    
  40621f:	nop
  406220:	ret    
  406221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40622c:	nop    DWORD PTR [rax+0x0]
  406230:	endbr64 
  406234:	jmp    4061c0 <_start@@Base+0x70>
  406236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406240 <test_json@@Base>:
  406240:	push   rbp
  406241:	push   r15
  406243:	push   r14
  406245:	push   r13
  406247:	push   r12
  406249:	push   rbx
  40624a:	sub    rsp,0x268
  406251:	mov    ebp,r9d
  406254:	mov    r13d,r8d
  406257:	mov    r12d,ecx
  40625a:	mov    r15,rdx
  40625d:	mov    r14,rsi
  406260:	mov    rbx,rdi
  406263:	lea    rdi,[rsp+0xe0]
  40626b:	call   41d690 <flatcc_builder_init@@Base>
  406270:	lea    rdi,[rsp+0x28]
  406275:	xor    esi,esi
  406277:	call   432f50 <flatcc_json_printer_init_dynamic_buffer@@Base>
  40627c:	mov    eax,ebp
  40627e:	and    al,0x1
  406280:	mov    BYTE PTR [rsp+0x5a],al
  406284:	mov    eax,ebp
  406286:	shr    al,1
  406288:	and    al,0x1
  40628a:	mov    BYTE PTR [rsp+0x5b],al
  40628e:	mov    eax,ebp
  406290:	shr    al,0x2
  406293:	and    al,0x1
  406295:	mov    BYTE PTR [rsp+0x5c],al
  406299:	mov    eax,ebp
  40629b:	shr    al,0x3
  40629e:	and    al,0x1
  4062a0:	mov    BYTE PTR [rsp+0x5d],al
  4062a4:	test   bpl,0x10
  4062a8:	je     4062af <test_json@@Base+0x6f>
  4062aa:	mov    BYTE PTR [rsp+0x59],0x2
  4062af:	test   bpl,0x20
  4062b3:	je     4062c1 <test_json@@Base+0x81>
  4062b5:	mov    WORD PTR [rsp+0x59],0x102
  4062bc:	mov    BYTE PTR [rsp+0x5b],0x0
  4062c1:	mov    ebp,DWORD PTR [rsp+0x2a0]
  4062c8:	mov    rdi,r14
  4062cb:	call   406060 <strlen@plt>
  4062d0:	mov    r9,QWORD PTR [rbx]
  4062d3:	mov    rcx,QWORD PTR [rbx+0x8]
  4062d7:	mov    QWORD PTR [rsp],rcx
  4062db:	lea    rdi,[rsp+0xe0]
  4062e3:	lea    rsi,[rsp+0x98]
  4062eb:	mov    rdx,r14
  4062ee:	mov    rcx,rax
  4062f1:	mov    r8d,r13d
  4062f4:	call   4275b0 <flatcc_json_parser_table_as_root@@Base>
  4062f9:	cmp    eax,r12d
  4062fc:	jne    4063b6 <test_json@@Base+0x176>
  406302:	xor    r14d,r14d
  406305:	test   r12d,r12d
  406308:	je     40630e <test_json@@Base+0xce>
  40630a:	xor    ebp,ebp
  40630c:	jmp    406382 <test_json@@Base+0x142>
  40630e:	mov    r13d,ebp
  406311:	lea    rdi,[rsp+0xe0]
  406319:	lea    rsi,[rsp+0x10]
  40631e:	call   421db0 <flatcc_builder_finalize_aligned_buffer@@Base>
  406323:	mov    rbp,rax
  406326:	mov    rsi,QWORD PTR [rsp+0x10]
  40632b:	mov    rdx,QWORD PTR [rbx]
  40632e:	mov    rcx,QWORD PTR [rbx+0x18]
  406332:	mov    rdi,rax
  406335:	call   423130 <flatcc_verify_table_as_root@@Base>
  40633a:	test   eax,eax
  40633c:	jne    406479 <test_json@@Base+0x239>
  406342:	mov    rdx,QWORD PTR [rsp+0x10]
  406347:	mov    rcx,QWORD PTR [rbx]
  40634a:	mov    r8,QWORD PTR [rbx+0x10]
  40634e:	lea    rbx,[rsp+0x28]
  406353:	mov    rdi,rbx
  406356:	mov    rsi,rbp
  406359:	call   432760 <flatcc_json_printer_table_as_root@@Base>
  40635e:	lea    rsi,[rsp+0x78]
  406363:	mov    rdi,rbx
  406366:	call   433070 <flatcc_json_printer_get_buffer@@Base>
  40636b:	mov    rbx,rax
  40636e:	test   rax,rax
  406371:	je     4063ec <test_json@@Base+0x1ac>
  406373:	mov    rdi,r15
  406376:	mov    rsi,rbx
  406379:	call   4060b0 <strcmp@plt>
  40637e:	test   eax,eax
  406380:	jne    4063ec <test_json@@Base+0x1ac>
  406382:	mov    rdi,rbp
  406385:	call   421ee0 <flatcc_builder_aligned_free@@Base>
  40638a:	lea    rdi,[rsp+0xe0]
  406392:	call   41da50 <flatcc_builder_clear@@Base>
  406397:	lea    rdi,[rsp+0x28]
  40639c:	call   4330f0 <flatcc_json_printer_clear@@Base>
  4063a1:	mov    eax,r14d
  4063a4:	add    rsp,0x268
  4063ab:	pop    rbx
  4063ac:	pop    r12
  4063ae:	pop    r13
  4063b0:	pop    r14
  4063b2:	pop    r15
  4063b4:	pop    rbp
  4063b5:	ret    
  4063b6:	test   r12d,r12d
  4063b9:	je     40644d <test_json@@Base+0x20d>
  4063bf:	mov    r15d,ebp
  4063c2:	mov    rbp,QWORD PTR [rip+0x3cc2f]        # 442ff8 <stderr@GLIBC_2.2.5>
  4063c9:	mov    rbx,QWORD PTR [rbp+0x0]
  4063cd:	test   eax,eax
  4063cf:	jne    406504 <test_json@@Base+0x2c4>
  4063d5:	mov    edi,r12d
  4063d8:	call   424070 <flatcc_json_parser_error_string@@Base>
  4063dd:	lea    rsi,[rip+0x2e722]        # 434b06 <_IO_stdin_used@@Base+0xb06>
  4063e4:	mov    rdi,rbx
  4063e7:	mov    edx,r15d
  4063ea:	jmp    40646a <test_json@@Base+0x22a>
  4063ec:	mov    r12,QWORD PTR [rip+0x3cc05]        # 442ff8 <stderr@GLIBC_2.2.5>
  4063f3:	mov    rdi,QWORD PTR [r12]
  4063f7:	lea    rsi,[rip+0x2e7f8]        # 434bf6 <_IO_stdin_used@@Base+0xbf6>
  4063fe:	mov    edx,r13d
  406401:	xor    eax,eax
  406403:	call   4060c0 <fprintf@plt>
  406408:	mov    rdi,QWORD PTR [r12]
  40640c:	lea    r14,[rip+0x31eca]        # 4382dd <_IO_stdin_used@@Base+0x42dd>
  406413:	mov    rsi,r14
  406416:	mov    rdx,rbx
  406419:	xor    eax,eax
  40641b:	call   4060c0 <fprintf@plt>
  406420:	mov    rcx,QWORD PTR [r12]
  406424:	lea    rdi,[rip+0x2e800]        # 434c2b <_IO_stdin_used@@Base+0xc2b>
  40642b:	mov    esi,0xa
  406430:	mov    edx,0x1
  406435:	call   406130 <fwrite@plt>
  40643a:	mov    rdi,QWORD PTR [r12]
  40643e:	mov    rsi,r14
  406441:	mov    rdx,r15
  406444:	xor    eax,eax
  406446:	call   4060c0 <fprintf@plt>
  40644b:	jmp    4064a8 <test_json@@Base+0x268>
  40644d:	mov    rcx,QWORD PTR [rip+0x3cba4]        # 442ff8 <stderr@GLIBC_2.2.5>
  406454:	mov    rbx,QWORD PTR [rcx]
  406457:	mov    edi,eax
  406459:	call   424070 <flatcc_json_parser_error_string@@Base>
  40645e:	lea    rsi,[rip+0x2e6e1]        # 434b46 <_IO_stdin_used@@Base+0xb46>
  406465:	mov    rdi,rbx
  406468:	mov    edx,ebp
  40646a:	mov    rcx,rax
  40646d:	xor    eax,eax
  40646f:	call   4060c0 <fprintf@plt>
  406474:	jmp    406542 <test_json@@Base+0x302>
  406479:	mov    rcx,QWORD PTR [rip+0x3cb78]        # 442ff8 <stderr@GLIBC_2.2.5>
  406480:	mov    rbx,QWORD PTR [rcx]
  406483:	mov    edi,eax
  406485:	call   422600 <flatcc_verify_error_string@@Base>
  40648a:	lea    rsi,[rip+0x2e6d9]        # 434b6a <_IO_stdin_used@@Base+0xb6a>
  406491:	lea    rdx,[rip+0x2e6f9]        # 434b91 <_IO_stdin_used@@Base+0xb91>
  406498:	mov    rdi,rbx
  40649b:	mov    ecx,r13d
  40649e:	mov    r8,rax
  4064a1:	xor    eax,eax
  4064a3:	call   4060c0 <fprintf@plt>
  4064a8:	mov    r14d,0xffffffff
  4064ae:	test   rbp,rbp
  4064b1:	je     40630a <test_json@@Base+0xca>
  4064b7:	mov    r15,QWORD PTR [rsp+0x10]
  4064bc:	mov    rax,QWORD PTR [rip+0x3cb35]        # 442ff8 <stderr@GLIBC_2.2.5>
  4064c3:	mov    rbx,QWORD PTR [rax]
  4064c6:	lea    rsi,[rip+0x31e09]        # 4382d6 <_IO_stdin_used@@Base+0x42d6>
  4064cd:	lea    rdx,[rip+0x2e762]        # 434c36 <_IO_stdin_used@@Base+0xc36>
  4064d4:	mov    rdi,rbx
  4064d7:	xor    eax,eax
  4064d9:	call   4060c0 <fprintf@plt>
  4064de:	test   r15d,r15d
  4064e1:	je     406674 <test_json@@Base+0x434>
  4064e7:	mov    QWORD PTR [rsp+0x18],r15
  4064ec:	mov    eax,r15d
  4064ef:	mov    QWORD PTR [rsp+0x20],rax
  4064f4:	lea    r13,[rsp+0x80]
  4064fc:	xor    r15d,r15d
  4064ff:	jmp    4065ff <test_json@@Base+0x3bf>
  406504:	mov    edi,eax
  406506:	call   424070 <flatcc_json_parser_error_string@@Base>
  40650b:	lea    rsi,[rip+0x2e5ce]        # 434ae0 <_IO_stdin_used@@Base+0xae0>
  406512:	mov    rdi,rbx
  406515:	mov    edx,r15d
  406518:	mov    rcx,rax
  40651b:	xor    eax,eax
  40651d:	call   4060c0 <fprintf@plt>
  406522:	mov    rbx,QWORD PTR [rbp+0x0]
  406526:	mov    edi,r12d
  406529:	call   424070 <flatcc_json_parser_error_string@@Base>
  40652e:	lea    rsi,[rip+0x2e5f2]        # 434b27 <_IO_stdin_used@@Base+0xb27>
  406535:	mov    rdi,rbx
  406538:	mov    rdx,rax
  40653b:	xor    eax,eax
  40653d:	call   4060c0 <fprintf@plt>
  406542:	mov    rbx,QWORD PTR [rip+0x3caaf]        # 442ff8 <stderr@GLIBC_2.2.5>
  406549:	mov    rdi,QWORD PTR [rbx]
  40654c:	lea    rsi,[rip+0x31d8a]        # 4382dd <_IO_stdin_used@@Base+0x42dd>
  406553:	xor    ebp,ebp
  406555:	mov    rdx,r14
  406558:	xor    eax,eax
  40655a:	call   4060c0 <fprintf@plt>
  40655f:	cmp    DWORD PTR [rsp+0xb4],0x2
  406567:	mov    rcx,QWORD PTR [rbx]
  40656a:	jl     40658b <test_json@@Base+0x34b>
  40656c:	mov    edi,0x20
  406571:	mov    rsi,rcx
  406574:	call   406090 <fputc@plt>
  406579:	inc    ebp
  40657b:	mov    eax,DWORD PTR [rsp+0xb4]
  406582:	dec    eax
  406584:	mov    rcx,QWORD PTR [rbx]
  406587:	cmp    ebp,eax
  406589:	jl     40656c <test_json@@Base+0x32c>
  40658b:	lea    rdi,[rip+0x2e5d5]        # 434b67 <_IO_stdin_used@@Base+0xb67>
  406592:	mov    esi,0x2
  406597:	mov    edx,0x1
  40659c:	call   406130 <fwrite@plt>
  4065a1:	mov    r14d,0xffffffff
  4065a7:	jmp    40630a <test_json@@Base+0xca>
  4065ac:	mov    rdi,rbx
  4065af:	lea    rsi,[rip+0x31d2b]        # 4382e1 <_IO_stdin_used@@Base+0x42e1>
  4065b6:	mov    edx,r15d
  4065b9:	xor    eax,eax
  4065bb:	call   4060c0 <fprintf@plt>
  4065c0:	movzx  edx,BYTE PTR [rbp+r15*1+0x0]
  4065c6:	mov    rdi,rbx
  4065c9:	lea    rsi,[rip+0x31d19]        # 4382e9 <_IO_stdin_used@@Base+0x42e9>
  4065d0:	xor    eax,eax
  4065d2:	call   4060c0 <fprintf@plt>
  4065d7:	movzx  eax,BYTE PTR [rbp+r15*1+0x0]
  4065dd:	lea    ecx,[rax-0x20]
  4065e0:	cmp    cl,0x5e
  4065e3:	mov    ecx,0x2e
  4065e8:	cmova  eax,ecx
  4065eb:	mov    BYTE PTR [r12+r13*1],al
  4065ef:	mov    BYTE PTR [r12+r13*1+0x1],0x0
  4065f5:	inc    r15
  4065f8:	cmp    QWORD PTR [rsp+0x20],r15
  4065fd:	je     40663b <test_json@@Base+0x3fb>
  4065ff:	mov    r12d,r15d
  406602:	and    r12d,0xf
  406606:	test   r12d,r12d
  406609:	jne    406626 <test_json@@Base+0x3e6>
  40660b:	test   r15,r15
  40660e:	je     4065ac <test_json@@Base+0x36c>
  406610:	mov    rdi,rbx
  406613:	lea    rsi,[rip+0x31cc1]        # 4382db <_IO_stdin_used@@Base+0x42db>
  40661a:	mov    rdx,r13
  40661d:	xor    eax,eax
  40661f:	call   4060c0 <fprintf@plt>
  406624:	jmp    4065ac <test_json@@Base+0x36c>
  406626:	test   r15b,0x7
  40662a:	jne    4065c0 <test_json@@Base+0x380>
  40662c:	mov    edi,0x20
  406631:	mov    rsi,rbx
  406634:	call   406090 <fputc@plt>
  406639:	jmp    4065c0 <test_json@@Base+0x380>
  40663b:	mov    r13,QWORD PTR [rsp+0x18]
  406640:	test   r13b,0xf
  406644:	je     406674 <test_json@@Base+0x434>
  406646:	inc    r13d
  406649:	lea    r15,[rip+0x31c9f]        # 4382ef <_IO_stdin_used@@Base+0x42ef>
  406650:	mov    r12d,r13d
  406653:	mov    esi,0x3
  406658:	mov    edx,0x1
  40665d:	mov    rdi,r15
  406660:	mov    rcx,rbx
  406663:	call   406130 <fwrite@plt>
  406668:	inc    r12d
  40666b:	test   r13b,0xf
  40666f:	mov    r13d,r12d
  406672:	jne    406653 <test_json@@Base+0x413>
  406674:	lea    rsi,[rip+0x31c60]        # 4382db <_IO_stdin_used@@Base+0x42db>
  40667b:	lea    rdx,[rsp+0x80]
  406683:	mov    rdi,rbx
  406686:	xor    eax,eax
  406688:	call   4060c0 <fprintf@plt>
  40668d:	jmp    406382 <test_json@@Base+0x142>
  406692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40669c:	nop    DWORD PTR [rax+0x0]

00000000004066a0 <edge_case_tests@@Base>:
  4066a0:	push   rbp
  4066a1:	push   r15
  4066a3:	push   r14
  4066a5:	push   r13
  4066a7:	push   r12
  4066a9:	push   rbx
  4066aa:	push   rax
  4066ab:	mov    DWORD PTR [rsp],0x9b
  4066b2:	lea    r12,[rip+0x3c447]        # 442b00 <flatcc_builder_padding_base@@Base+0xa450>
  4066b9:	lea    rsi,[rip+0x2e584]        # 434c44 <_IO_stdin_used@@Base+0xc44>
  4066c0:	lea    rdx,[rip+0x2e5ae]        # 434c75 <_IO_stdin_used@@Base+0xc75>
  4066c7:	mov    rdi,r12
  4066ca:	xor    ecx,ecx
  4066cc:	xor    r8d,r8d
  4066cf:	xor    r9d,r9d
  4066d2:	call   406240 <test_json@@Base>
  4066d7:	mov    ebp,eax
  4066d9:	mov    DWORD PTR [rsp],0xa8
  4066e0:	lea    r15,[rip+0x2e5ac]        # 434c93 <_IO_stdin_used@@Base+0xc93>
  4066e7:	lea    r14,[rip+0x2e5c6]        # 434cb4 <_IO_stdin_used@@Base+0xcb4>
  4066ee:	mov    rdi,r12
  4066f1:	mov    rsi,r15
  4066f4:	mov    rdx,r14
  4066f7:	xor    ecx,ecx
  4066f9:	mov    r8d,0x2
  4066ff:	xor    r9d,r9d
  406702:	call   406240 <test_json@@Base>
  406707:	mov    ebx,eax
  406709:	or     ebx,ebp
  40670b:	mov    DWORD PTR [rsp],0xac
  406712:	lea    rsi,[rip+0x2e5bd]        # 434cd6 <_IO_stdin_used@@Base+0xcd6>
  406719:	lea    rdx,[rip+0x2e5dd]        # 434cfd <_IO_stdin_used@@Base+0xcfd>
  406720:	mov    rdi,r12
  406723:	xor    ecx,ecx
  406725:	xor    r8d,r8d
  406728:	mov    r9d,0x2
  40672e:	call   406240 <test_json@@Base>
  406733:	mov    r13d,eax
  406736:	mov    DWORD PTR [rsp],0xb0
  40673d:	lea    rdx,[rip+0x2e5d6]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  406744:	mov    rdi,r12
  406747:	mov    rsi,r15
  40674a:	xor    ecx,ecx
  40674c:	mov    r8d,0x2
  406752:	mov    r9d,0x4
  406758:	call   406240 <test_json@@Base>
  40675d:	mov    ebp,eax
  40675f:	or     ebp,r13d
  406762:	or     ebp,ebx
  406764:	mov    DWORD PTR [rsp],0xb4
  40676b:	lea    rsi,[rip+0x2e5bb]        # 434d2d <_IO_stdin_used@@Base+0xd2d>
  406772:	lea    rdx,[rip+0x2e5d6]        # 434d4f <_IO_stdin_used@@Base+0xd4f>
  406779:	mov    rdi,r12
  40677c:	xor    ecx,ecx
  40677e:	xor    r8d,r8d
  406781:	mov    r9d,0x8
  406787:	call   406240 <test_json@@Base>
  40678c:	mov    ebx,eax
  40678e:	mov    DWORD PTR [rsp],0xc3
  406795:	lea    rsi,[rip+0x2e6c5]        # 434e61 <_IO_stdin_used@@Base+0xe61>
  40679c:	mov    rdi,r12
  40679f:	mov    rdx,r14
  4067a2:	xor    ecx,ecx
  4067a4:	mov    r8d,0x2
  4067aa:	xor    r9d,r9d
  4067ad:	call   406240 <test_json@@Base>
  4067b2:	mov    r14d,eax
  4067b5:	or     r14d,ebx
  4067b8:	mov    DWORD PTR [rsp],0xc7
  4067bf:	lea    rbx,[rip+0x2e6c1]        # 434e87 <_IO_stdin_used@@Base+0xe87>
  4067c6:	lea    r15,[rip+0x2e6ec]        # 434eb9 <_IO_stdin_used@@Base+0xeb9>
  4067cd:	mov    rdi,r12
  4067d0:	mov    rsi,rbx
  4067d3:	mov    rdx,r15
  4067d6:	xor    ecx,ecx
  4067d8:	mov    r8d,0x1
  4067de:	xor    r9d,r9d
  4067e1:	call   406240 <test_json@@Base>
  4067e6:	mov    r13d,eax
  4067e9:	or     r13d,r14d
  4067ec:	or     r13d,ebp
  4067ef:	mov    DWORD PTR [rsp],0xcb
  4067f6:	lea    rdx,[rip+0x2e6d7]        # 434ed4 <_IO_stdin_used@@Base+0xed4>
  4067fd:	mov    rdi,r12
  406800:	mov    rsi,rbx
  406803:	xor    ecx,ecx
  406805:	mov    r8d,0x1
  40680b:	mov    r9d,0x1
  406811:	call   406240 <test_json@@Base>
  406816:	mov    ebx,eax
  406818:	mov    DWORD PTR [rsp],0xd1
  40681f:	lea    rsi,[rip+0x2e6c5]        # 434eeb <_IO_stdin_used@@Base+0xeeb>
  406826:	mov    rdi,r12
  406829:	mov    rdx,r15
  40682c:	xor    ecx,ecx
  40682e:	mov    r8d,0x1
  406834:	xor    r9d,r9d
  406837:	call   406240 <test_json@@Base>
  40683c:	mov    ebp,eax
  40683e:	or     ebp,ebx
  406840:	mov    DWORD PTR [rsp],0xd9
  406847:	lea    rbx,[rip+0x2e70e]        # 434f5c <_IO_stdin_used@@Base+0xf5c>
  40684e:	mov    rdi,r12
  406851:	mov    rsi,rbx
  406854:	lea    rdx,[rip+0x2e459]        # 434cb4 <_IO_stdin_used@@Base+0xcb4>
  40685b:	xor    ecx,ecx
  40685d:	mov    r8d,0x2
  406863:	xor    r9d,r9d
  406866:	call   406240 <test_json@@Base>
  40686b:	mov    r14d,eax
  40686e:	or     r14d,ebp
  406871:	mov    DWORD PTR [rsp],0xdd
  406878:	lea    rsi,[rip+0x2e6fa]        # 434f79 <_IO_stdin_used@@Base+0xf79>
  40687f:	mov    rdi,r12
  406882:	lea    rdx,[rip+0x2e474]        # 434cfd <_IO_stdin_used@@Base+0xcfd>
  406889:	xor    ecx,ecx
  40688b:	xor    r8d,r8d
  40688e:	mov    r9d,0x2
  406894:	call   406240 <test_json@@Base>
  406899:	mov    r15d,eax
  40689c:	or     r15d,r14d
  40689f:	or     r15d,r13d
  4068a2:	mov    DWORD PTR [rsp],0xe1
  4068a9:	mov    rdi,r12
  4068ac:	mov    rsi,rbx
  4068af:	lea    rdx,[rip+0x2e464]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  4068b6:	xor    ecx,ecx
  4068b8:	mov    r8d,0x2
  4068be:	mov    r9d,0x4
  4068c4:	call   406240 <test_json@@Base>
  4068c9:	mov    r14d,eax
  4068cc:	mov    DWORD PTR [rsp],0xe5
  4068d3:	lea    rsi,[rip+0x2e6c0]        # 434f9a <_IO_stdin_used@@Base+0xf9a>
  4068da:	lea    rdx,[rip+0x2e6cc]        # 434fad <_IO_stdin_used@@Base+0xfad>
  4068e1:	mov    rdi,r12
  4068e4:	xor    ecx,ecx
  4068e6:	xor    r8d,r8d
  4068e9:	mov    r9d,0x8
  4068ef:	call   406240 <test_json@@Base>
  4068f4:	mov    ebx,eax
  4068f6:	or     ebx,r14d
  4068f9:	mov    DWORD PTR [rsp],0xe9
  406900:	lea    rsi,[rip+0x2e7bd]        # 4350c4 <_IO_stdin_used@@Base+0x10c4>
  406907:	mov    rdi,r12
  40690a:	lea    rdx,[rip+0x2e3a3]        # 434cb4 <_IO_stdin_used@@Base+0xcb4>
  406911:	xor    ecx,ecx
  406913:	mov    r8d,0x2
  406919:	xor    r9d,r9d
  40691c:	call   406240 <test_json@@Base>
  406921:	mov    ebp,eax
  406923:	or     ebp,ebx
  406925:	mov    DWORD PTR [rsp],0xed
  40692c:	lea    r14,[rip+0x2e7b1]        # 4350e4 <_IO_stdin_used@@Base+0x10e4>
  406933:	mov    rdi,r12
  406936:	mov    rsi,r14
  406939:	lea    r13,[rip+0x2e579]        # 434eb9 <_IO_stdin_used@@Base+0xeb9>
  406940:	mov    rdx,r13
  406943:	xor    ecx,ecx
  406945:	mov    r8d,0x1
  40694b:	xor    r9d,r9d
  40694e:	call   406240 <test_json@@Base>
  406953:	mov    ebx,eax
  406955:	or     ebx,ebp
  406957:	mov    DWORD PTR [rsp],0xf1
  40695e:	mov    rdi,r12
  406961:	mov    rsi,r14
  406964:	lea    rdx,[rip+0x2e569]        # 434ed4 <_IO_stdin_used@@Base+0xed4>
  40696b:	xor    ecx,ecx
  40696d:	mov    r8d,0x1
  406973:	mov    r9d,0x1
  406979:	call   406240 <test_json@@Base>
  40697e:	mov    ebp,eax
  406980:	or     ebp,ebx
  406982:	or     ebp,r15d
  406985:	mov    DWORD PTR [rsp],0xf7
  40698c:	lea    rsi,[rip+0x2e77b]        # 43510e <_IO_stdin_used@@Base+0x110e>
  406993:	mov    rdi,r12
  406996:	mov    rdx,r13
  406999:	xor    ecx,ecx
  40699b:	mov    r8d,0x1
  4069a1:	xor    r9d,r9d
  4069a4:	call   406240 <test_json@@Base>
  4069a9:	or     eax,ebp
  4069ab:	add    rsp,0x8
  4069af:	pop    rbx
  4069b0:	pop    r12
  4069b2:	pop    r13
  4069b4:	pop    r14
  4069b6:	pop    r15
  4069b8:	pop    rbp
  4069b9:	ret    
  4069ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004069c0 <error_case_tests@@Base>:
  4069c0:	push   rbp
  4069c1:	push   r15
  4069c3:	push   r14
  4069c5:	push   r12
  4069c7:	push   rbx
  4069c8:	sub    rsp,0x10
  4069cc:	mov    DWORD PTR [rsp],0x11d
  4069d3:	lea    r14,[rip+0x3c126]        # 442b00 <flatcc_builder_padding_base@@Base+0xa450>
  4069da:	lea    rsi,[rip+0x2e78c]        # 43516d <_IO_stdin_used@@Base+0x116d>
  4069e1:	mov    rdi,r14
  4069e4:	xor    edx,edx
  4069e6:	mov    ecx,0xd
  4069eb:	xor    r8d,r8d
  4069ee:	xor    r9d,r9d
  4069f1:	call   406240 <test_json@@Base>
  4069f6:	mov    ebp,eax
  4069f8:	mov    DWORD PTR [rsp],0x11f
  4069ff:	lea    rsi,[rip+0x2e781]        # 435187 <_IO_stdin_used@@Base+0x1187>
  406a06:	mov    rdi,r14
  406a09:	xor    edx,edx
  406a0b:	mov    ecx,0xd
  406a10:	xor    r8d,r8d
  406a13:	xor    r9d,r9d
  406a16:	call   406240 <test_json@@Base>
  406a1b:	mov    ebx,eax
  406a1d:	or     ebx,ebp
  406a1f:	mov    DWORD PTR [rsp],0x121
  406a26:	lea    rsi,[rip+0x2e7bb]        # 4351e8 <_IO_stdin_used@@Base+0x11e8>
  406a2d:	mov    rdi,r14
  406a30:	xor    edx,edx
  406a32:	mov    ecx,0xd
  406a37:	xor    r8d,r8d
  406a3a:	xor    r9d,r9d
  406a3d:	call   406240 <test_json@@Base>
  406a42:	mov    r15d,eax
  406a45:	mov    DWORD PTR [rsp],0x123
  406a4c:	lea    rsi,[rip+0x2e7f3]        # 435246 <_IO_stdin_used@@Base+0x1246>
  406a53:	mov    rdi,r14
  406a56:	xor    edx,edx
  406a58:	mov    ecx,0xd
  406a5d:	xor    r8d,r8d
  406a60:	xor    r9d,r9d
  406a63:	call   406240 <test_json@@Base>
  406a68:	mov    ebp,eax
  406a6a:	or     ebp,r15d
  406a6d:	or     ebp,ebx
  406a6f:	mov    DWORD PTR [rsp],0x125
  406a76:	lea    rsi,[rip+0x2e821]        # 43529e <_IO_stdin_used@@Base+0x129e>
  406a7d:	mov    rdi,r14
  406a80:	xor    edx,edx
  406a82:	mov    ecx,0xd
  406a87:	xor    r8d,r8d
  406a8a:	xor    r9d,r9d
  406a8d:	call   406240 <test_json@@Base>
  406a92:	mov    r15d,eax
  406a95:	mov    DWORD PTR [rsp],0x128
  406a9c:	lea    rsi,[rip+0x2e850]        # 4352f3 <_IO_stdin_used@@Base+0x12f3>
  406aa3:	mov    rdi,r14
  406aa6:	xor    edx,edx
  406aa8:	mov    ecx,0xd
  406aad:	xor    r8d,r8d
  406ab0:	xor    r9d,r9d
  406ab3:	call   406240 <test_json@@Base>
  406ab8:	mov    ebx,eax
  406aba:	or     ebx,r15d
  406abd:	mov    DWORD PTR [rsp],0x12b
  406ac4:	lea    rsi,[rip+0x2e8c6]        # 435391 <_IO_stdin_used@@Base+0x1391>
  406acb:	mov    rdi,r14
  406ace:	xor    edx,edx
  406ad0:	mov    ecx,0xd
  406ad5:	xor    r8d,r8d
  406ad8:	xor    r9d,r9d
  406adb:	call   406240 <test_json@@Base>
  406ae0:	mov    r15d,eax
  406ae3:	or     r15d,ebx
  406ae6:	or     r15d,ebp
  406ae9:	mov    DWORD PTR [rsp],0x12f
  406af0:	lea    rsi,[rip+0x2e935]        # 43542c <_IO_stdin_used@@Base+0x142c>
  406af7:	mov    rdi,r14
  406afa:	xor    edx,edx
  406afc:	mov    ecx,0xd
  406b01:	xor    r8d,r8d
  406b04:	xor    r9d,r9d
  406b07:	call   406240 <test_json@@Base>
  406b0c:	mov    ebx,eax
  406b0e:	mov    DWORD PTR [rsp],0x133
  406b15:	lea    rsi,[rip+0x2e9d7]        # 4354f3 <_IO_stdin_used@@Base+0x14f3>
  406b1c:	mov    rdi,r14
  406b1f:	xor    edx,edx
  406b21:	mov    ecx,0xd
  406b26:	xor    r8d,r8d
  406b29:	xor    r9d,r9d
  406b2c:	call   406240 <test_json@@Base>
  406b31:	mov    ebp,eax
  406b33:	or     ebp,ebx
  406b35:	mov    DWORD PTR [rsp],0x142
  406b3c:	lea    rsi,[rip+0x2ea77]        # 4355ba <_IO_stdin_used@@Base+0x15ba>
  406b43:	mov    rdi,r14
  406b46:	xor    edx,edx
  406b48:	mov    ecx,0xd
  406b4d:	xor    r8d,r8d
  406b50:	xor    r9d,r9d
  406b53:	call   406240 <test_json@@Base>
  406b58:	mov    ebx,eax
  406b5a:	or     ebx,ebp
  406b5c:	mov    DWORD PTR [rsp],0x144
  406b63:	lea    rsi,[rip+0x2ea68]        # 4355d2 <_IO_stdin_used@@Base+0x15d2>
  406b6a:	mov    rdi,r14
  406b6d:	xor    edx,edx
  406b6f:	mov    ecx,0xd
  406b74:	xor    r8d,r8d
  406b77:	xor    r9d,r9d
  406b7a:	call   406240 <test_json@@Base>
  406b7f:	mov    r12d,eax
  406b82:	or     r12d,ebx
  406b85:	or     r12d,r15d
  406b88:	mov    DWORD PTR [rsp],0x146
  406b8f:	lea    rsi,[rip+0x2ea91]        # 435627 <_IO_stdin_used@@Base+0x1627>
  406b96:	mov    rdi,r14
  406b99:	xor    edx,edx
  406b9b:	mov    ecx,0xd
  406ba0:	xor    r8d,r8d
  406ba3:	xor    r9d,r9d
  406ba6:	call   406240 <test_json@@Base>
  406bab:	mov    r15d,eax
  406bae:	mov    DWORD PTR [rsp],0x148
  406bb5:	lea    rsi,[rip+0x2eabd]        # 435679 <_IO_stdin_used@@Base+0x1679>
  406bbc:	mov    rdi,r14
  406bbf:	xor    edx,edx
  406bc1:	mov    ecx,0xd
  406bc6:	xor    r8d,r8d
  406bc9:	xor    r9d,r9d
  406bcc:	call   406240 <test_json@@Base>
  406bd1:	mov    ebx,eax
  406bd3:	or     ebx,r15d
  406bd6:	mov    DWORD PTR [rsp],0x14a
  406bdd:	lea    rsi,[rip+0x2eae5]        # 4356c9 <_IO_stdin_used@@Base+0x16c9>
  406be4:	mov    rdi,r14
  406be7:	xor    edx,edx
  406be9:	mov    ecx,0xd
  406bee:	xor    r8d,r8d
  406bf1:	xor    r9d,r9d
  406bf4:	call   406240 <test_json@@Base>
  406bf9:	mov    ebp,eax
  406bfb:	or     ebp,ebx
  406bfd:	mov    DWORD PTR [rsp],0x14d
  406c04:	lea    rsi,[rip+0x2eb0b]        # 435716 <_IO_stdin_used@@Base+0x1716>
  406c0b:	mov    rdi,r14
  406c0e:	xor    edx,edx
  406c10:	mov    ecx,0xd
  406c15:	xor    r8d,r8d
  406c18:	xor    r9d,r9d
  406c1b:	call   406240 <test_json@@Base>
  406c20:	mov    r15d,eax
  406c23:	or     r15d,ebp
  406c26:	mov    DWORD PTR [rsp],0x150
  406c2d:	lea    rsi,[rip+0x2eb6e]        # 4357a2 <_IO_stdin_used@@Base+0x17a2>
  406c34:	mov    rdi,r14
  406c37:	xor    edx,edx
  406c39:	mov    ecx,0xd
  406c3e:	xor    r8d,r8d
  406c41:	xor    r9d,r9d
  406c44:	call   406240 <test_json@@Base>
  406c49:	mov    ebx,eax
  406c4b:	or     ebx,r15d
  406c4e:	or     ebx,r12d
  406c51:	mov    DWORD PTR [rsp],0x154
  406c58:	lea    rsi,[rip+0x2ebcc]        # 43582b <_IO_stdin_used@@Base+0x182b>
  406c5f:	mov    rdi,r14
  406c62:	xor    edx,edx
  406c64:	mov    ecx,0xd
  406c69:	xor    r8d,r8d
  406c6c:	xor    r9d,r9d
  406c6f:	call   406240 <test_json@@Base>
  406c74:	mov    ebp,eax
  406c76:	mov    DWORD PTR [rsp],0x158
  406c7d:	lea    rsi,[rip+0x2ec56]        # 4358da <_IO_stdin_used@@Base+0x18da>
  406c84:	mov    rdi,r14
  406c87:	xor    edx,edx
  406c89:	mov    ecx,0xd
  406c8e:	xor    r8d,r8d
  406c91:	xor    r9d,r9d
  406c94:	call   406240 <test_json@@Base>
  406c99:	or     eax,ebp
  406c9b:	or     eax,ebx
  406c9d:	add    rsp,0x10
  406ca1:	pop    rbx
  406ca2:	pop    r12
  406ca4:	pop    r14
  406ca6:	pop    r15
  406ca8:	pop    rbp
  406ca9:	ret    
  406caa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406cb0 <base64_tests@@Base>:
  406cb0:	push   rbp
  406cb1:	push   r15
  406cb3:	push   r14
  406cb5:	push   r13
  406cb7:	push   r12
  406cb9:	push   rbx
  406cba:	push   rax
  406cbb:	mov    DWORD PTR [rsp],0x171
  406cc2:	lea    r14,[rip+0x3be37]        # 442b00 <flatcc_builder_padding_base@@Base+0xa450>
  406cc9:	lea    rsi,[rip+0x2ecb9]        # 435989 <_IO_stdin_used@@Base+0x1989>
  406cd0:	lea    rdx,[rip+0x2e043]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  406cd7:	mov    rdi,r14
  406cda:	xor    ecx,ecx
  406cdc:	xor    r8d,r8d
  406cdf:	xor    r9d,r9d
  406ce2:	call   406240 <test_json@@Base>
  406ce7:	mov    ebp,eax
  406ce9:	mov    DWORD PTR [rsp],0x174
  406cf0:	lea    rsi,[rip+0x2eca8]        # 43599f <_IO_stdin_used@@Base+0x199f>
  406cf7:	lea    rdx,[rip+0x2ecc8]        # 4359c6 <_IO_stdin_used@@Base+0x19c6>
  406cfe:	mov    rdi,r14
  406d01:	xor    ecx,ecx
  406d03:	xor    r8d,r8d
  406d06:	xor    r9d,r9d
  406d09:	call   406240 <test_json@@Base>
  406d0e:	mov    ebx,eax
  406d10:	or     ebx,ebp
  406d12:	mov    DWORD PTR [rsp],0x178
  406d19:	lea    rsi,[rip+0x2ecc9]        # 4359e9 <_IO_stdin_used@@Base+0x19e9>
  406d20:	lea    r15,[rip+0x2ed7b]        # 435aa2 <_IO_stdin_used@@Base+0x1aa2>
  406d27:	mov    rdi,r14
  406d2a:	mov    rdx,r15
  406d2d:	xor    ecx,ecx
  406d2f:	xor    r8d,r8d
  406d32:	xor    r9d,r9d
  406d35:	call   406240 <test_json@@Base>
  406d3a:	mov    r12d,eax
  406d3d:	mov    DWORD PTR [rsp],0x17b
  406d44:	lea    rsi,[rip+0x2ee0b]        # 435b56 <_IO_stdin_used@@Base+0x1b56>
  406d4b:	lea    r13,[rip+0x2eec0]        # 435c12 <_IO_stdin_used@@Base+0x1c12>
  406d52:	mov    rdi,r14
  406d55:	mov    rdx,r13
  406d58:	xor    ecx,ecx
  406d5a:	xor    r8d,r8d
  406d5d:	xor    r9d,r9d
  406d60:	call   406240 <test_json@@Base>
  406d65:	mov    ebp,eax
  406d67:	or     ebp,r12d
  406d6a:	or     ebp,ebx
  406d6c:	mov    DWORD PTR [rsp],0x17e
  406d73:	lea    rsi,[rip+0x2ef4f]        # 435cc9 <_IO_stdin_used@@Base+0x1cc9>
  406d7a:	mov    rdi,r14
  406d7d:	mov    rdx,r15
  406d80:	xor    ecx,ecx
  406d82:	xor    r8d,r8d
  406d85:	xor    r9d,r9d
  406d88:	call   406240 <test_json@@Base>
  406d8d:	mov    r15d,eax
  406d90:	mov    DWORD PTR [rsp],0x181
  406d97:	lea    rsi,[rip+0x2efe2]        # 435d80 <_IO_stdin_used@@Base+0x1d80>
  406d9e:	mov    rdi,r14
  406da1:	mov    rdx,r13
  406da4:	xor    ecx,ecx
  406da6:	xor    r8d,r8d
  406da9:	xor    r9d,r9d
  406dac:	call   406240 <test_json@@Base>
  406db1:	mov    ebx,eax
  406db3:	or     ebx,r15d
  406db6:	mov    DWORD PTR [rsp],0x184
  406dbd:	lea    rsi,[rip+0x2f076]        # 435e3a <_IO_stdin_used@@Base+0x1e3a>
  406dc4:	mov    rdi,r14
  406dc7:	xor    edx,edx
  406dc9:	mov    ecx,0x1f
  406dce:	xor    r8d,r8d
  406dd1:	xor    r9d,r9d
  406dd4:	call   406240 <test_json@@Base>
  406dd9:	mov    r15d,eax
  406ddc:	or     r15d,ebx
  406ddf:	or     r15d,ebp
  406de2:	mov    DWORD PTR [rsp],0x187
  406de9:	lea    rsi,[rip+0x2f103]        # 435ef3 <_IO_stdin_used@@Base+0x1ef3>
  406df0:	mov    rdi,r14
  406df3:	xor    edx,edx
  406df5:	mov    ecx,0x20
  406dfa:	xor    r8d,r8d
  406dfd:	xor    r9d,r9d
  406e00:	call   406240 <test_json@@Base>
  406e05:	mov    ebx,eax
  406e07:	mov    DWORD PTR [rsp],0x196
  406e0e:	lea    rsi,[rip+0x2f19a]        # 435faf <_IO_stdin_used@@Base+0x1faf>
  406e15:	lea    r12,[rip+0x2f263]        # 43607f <_IO_stdin_used@@Base+0x207f>
  406e1c:	mov    rdi,r14
  406e1f:	mov    rdx,r12
  406e22:	xor    ecx,ecx
  406e24:	xor    r8d,r8d
  406e27:	xor    r9d,r9d
  406e2a:	call   406240 <test_json@@Base>
  406e2f:	mov    ebp,eax
  406e31:	or     ebp,ebx
  406e33:	mov    DWORD PTR [rsp],0x1a3
  406e3a:	lea    rsi,[rip+0x2f313]        # 436154 <_IO_stdin_used@@Base+0x2154>
  406e41:	mov    rdi,r14
  406e44:	mov    rdx,r12
  406e47:	xor    ecx,ecx
  406e49:	xor    r8d,r8d
  406e4c:	xor    r9d,r9d
  406e4f:	call   406240 <test_json@@Base>
  406e54:	or     eax,ebp
  406e56:	or     eax,r15d
  406e59:	add    rsp,0x8
  406e5d:	pop    rbx
  406e5e:	pop    r12
  406e60:	pop    r13
  406e62:	pop    r14
  406e64:	pop    r15
  406e66:	pop    rbp
  406e67:	ret    
  406e68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e70 <mixed_type_union_tests@@Base>:
  406e70:	push   rbp
  406e71:	push   r15
  406e73:	push   r14
  406e75:	push   r12
  406e77:	push   rbx
  406e78:	sub    rsp,0x10
  406e7c:	mov    DWORD PTR [rsp],0x1b0
  406e83:	lea    r15,[rip+0x3bc96]        # 442b20 <flatcc_builder_padding_base@@Base+0xa470>
  406e8a:	lea    rsi,[rip+0x2f38f]        # 436220 <_IO_stdin_used@@Base+0x2220>
  406e91:	lea    rdx,[rip+0x2f3d7]        # 43626f <_IO_stdin_used@@Base+0x226f>
  406e98:	mov    rdi,r15
  406e9b:	xor    ecx,ecx
  406e9d:	xor    r8d,r8d
  406ea0:	xor    r9d,r9d
  406ea3:	call   406240 <test_json@@Base>
  406ea8:	mov    ebp,eax
  406eaa:	mov    DWORD PTR [rsp],0x1b5
  406eb1:	lea    rsi,[rip+0x2f3fe]        # 4362b6 <_IO_stdin_used@@Base+0x22b6>
  406eb8:	lea    r14,[rip+0x2f47a]        # 436339 <_IO_stdin_used@@Base+0x2339>
  406ebf:	mov    rdi,r15
  406ec2:	mov    rdx,r14
  406ec5:	xor    ecx,ecx
  406ec7:	xor    r8d,r8d
  406eca:	xor    r9d,r9d
  406ecd:	call   406240 <test_json@@Base>
  406ed2:	mov    ebx,eax
  406ed4:	or     ebx,ebp
  406ed6:	mov    DWORD PTR [rsp],0x1ba
  406edd:	lea    rsi,[rip+0x2f4cc]        # 4363b0 <_IO_stdin_used@@Base+0x23b0>
  406ee4:	mov    rdi,r15
  406ee7:	mov    rdx,r14
  406eea:	xor    ecx,ecx
  406eec:	xor    r8d,r8d
  406eef:	xor    r9d,r9d
  406ef2:	call   406240 <test_json@@Base>
  406ef7:	mov    r12d,eax
  406efa:	mov    DWORD PTR [rsp],0x1c1
  406f01:	lea    rsi,[rip+0x2f53e]        # 436446 <_IO_stdin_used@@Base+0x2446>
  406f08:	lea    rdx,[rip+0x2f614]        # 436523 <_IO_stdin_used@@Base+0x2523>
  406f0f:	mov    rdi,r15
  406f12:	xor    ecx,ecx
  406f14:	xor    r8d,r8d
  406f17:	xor    r9d,r9d
  406f1a:	call   406240 <test_json@@Base>
  406f1f:	mov    ebp,eax
  406f21:	or     ebp,r12d
  406f24:	or     ebp,ebx
  406f26:	mov    DWORD PTR [rsp],0x1ca
  406f2d:	lea    rsi,[rip+0x2f6a8]        # 4365dc <_IO_stdin_used@@Base+0x25dc>
  406f34:	lea    rdx,[rip+0x2f7a7]        # 4366e2 <_IO_stdin_used@@Base+0x26e2>
  406f3b:	mov    rdi,r15
  406f3e:	xor    ecx,ecx
  406f40:	xor    r8d,r8d
  406f43:	xor    r9d,r9d
  406f46:	call   406240 <test_json@@Base>
  406f4b:	mov    r12d,eax
  406f4e:	mov    DWORD PTR [rsp],0x1d5
  406f55:	lea    rsi,[rip+0x2f864]        # 4367c0 <_IO_stdin_used@@Base+0x27c0>
  406f5c:	lea    rdx,[rip+0x2f9de]        # 436941 <_IO_stdin_used@@Base+0x2941>
  406f63:	mov    rdi,r15
  406f66:	xor    ecx,ecx
  406f68:	xor    r8d,r8d
  406f6b:	xor    r9d,r9d
  406f6e:	call   406240 <test_json@@Base>
  406f73:	mov    ebx,eax
  406f75:	or     ebx,r12d
  406f78:	mov    DWORD PTR [rsp],0x1da
  406f7f:	lea    rsi,[rip+0x2fb01]        # 436a87 <_IO_stdin_used@@Base+0x2a87>
  406f86:	mov    rdi,r15
  406f89:	mov    rdx,r14
  406f8c:	xor    ecx,ecx
  406f8e:	xor    r8d,r8d
  406f91:	xor    r9d,r9d
  406f94:	call   406240 <test_json@@Base>
  406f99:	or     eax,ebx
  406f9b:	or     eax,ebp
  406f9d:	add    rsp,0x10
  406fa1:	pop    rbx
  406fa2:	pop    r12
  406fa4:	pop    r14
  406fa6:	pop    r15
  406fa8:	pop    rbp
  406fa9:	ret    
  406faa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406fb0 <union_vector_tests@@Base>:
  406fb0:	push   rbp
  406fb1:	push   r15
  406fb3:	push   r14
  406fb5:	push   r12
  406fb7:	push   rbx
  406fb8:	sub    rsp,0x10
  406fbc:	mov    DWORD PTR [rsp],0x1e5
  406fc3:	lea    r15,[rip+0x3bb76]        # 442b40 <flatcc_builder_padding_base@@Base+0xa490>
  406fca:	lea    rsi,[rip+0x2fb43]        # 436b14 <_IO_stdin_used@@Base+0x2b14>
  406fd1:	lea    r14,[rip+0x2fb7c]        # 436b54 <_IO_stdin_used@@Base+0x2b54>
  406fd8:	mov    rdi,r15
  406fdb:	mov    rdx,r14
  406fde:	xor    ecx,ecx
  406fe0:	xor    r8d,r8d
  406fe3:	xor    r9d,r9d
  406fe6:	call   406240 <test_json@@Base>
  406feb:	mov    ebp,eax
  406fed:	mov    DWORD PTR [rsp],0x1e8
  406ff4:	lea    rsi,[rip+0x2fb91]        # 436b8c <_IO_stdin_used@@Base+0x2b8c>
  406ffb:	lea    rdx,[rip+0x2fbbd]        # 436bbf <_IO_stdin_used@@Base+0x2bbf>
  407002:	mov    rdi,r15
  407005:	xor    ecx,ecx
  407007:	xor    r8d,r8d
  40700a:	xor    r9d,r9d
  40700d:	call   406240 <test_json@@Base>
  407012:	mov    ebx,eax
  407014:	or     ebx,ebp
  407016:	mov    DWORD PTR [rsp],0x1eb
  40701d:	lea    rsi,[rip+0x2fbc6]        # 436bea <_IO_stdin_used@@Base+0x2bea>
  407024:	lea    rdx,[rip+0x2fc0c]        # 436c37 <_IO_stdin_used@@Base+0x2c37>
  40702b:	mov    rdi,r15
  40702e:	xor    ecx,ecx
  407030:	xor    r8d,r8d
  407033:	xor    r9d,r9d
  407036:	call   406240 <test_json@@Base>
  40703b:	mov    r12d,eax
  40703e:	mov    DWORD PTR [rsp],0x1ee
  407045:	lea    rsi,[rip+0x2fc2f]        # 436c7b <_IO_stdin_used@@Base+0x2c7b>
  40704c:	lea    rdx,[rip+0x2fca5]        # 436cf8 <_IO_stdin_used@@Base+0x2cf8>
  407053:	mov    rdi,r15
  407056:	xor    ecx,ecx
  407058:	xor    r8d,r8d
  40705b:	xor    r9d,r9d
  40705e:	call   406240 <test_json@@Base>
  407063:	mov    ebp,eax
  407065:	or     ebp,r12d
  407068:	or     ebp,ebx
  40706a:	mov    DWORD PTR [rsp],0x1f1
  407071:	lea    rsi,[rip+0x2fcec]        # 436d64 <_IO_stdin_used@@Base+0x2d64>
  407078:	mov    rdi,r15
  40707b:	mov    rdx,r14
  40707e:	xor    ecx,ecx
  407080:	xor    r8d,r8d
  407083:	xor    r9d,r9d
  407086:	call   406240 <test_json@@Base>
  40708b:	mov    ebx,eax
  40708d:	mov    DWORD PTR [rsp],0x1f4
  407094:	lea    rsi,[rip+0x2fd08]        # 436da3 <_IO_stdin_used@@Base+0x2da3>
  40709b:	lea    rdx,[rip+0x2fd67]        # 436e09 <_IO_stdin_used@@Base+0x2e09>
  4070a2:	mov    rdi,r15
  4070a5:	xor    ecx,ecx
  4070a7:	xor    r8d,r8d
  4070aa:	xor    r9d,r9d
  4070ad:	call   406240 <test_json@@Base>
  4070b2:	or     eax,ebx
  4070b4:	or     eax,ebp
  4070b6:	add    rsp,0x10
  4070ba:	pop    rbx
  4070bb:	pop    r12
  4070bd:	pop    r14
  4070bf:	pop    r15
  4070c1:	pop    rbp
  4070c2:	ret    
  4070c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070cd:	nop    DWORD PTR [rax]

00000000004070d0 <main@@Base>:
  4070d0:	push   rbp
  4070d1:	push   r15
  4070d3:	push   r14
  4070d5:	push   r13
  4070d7:	push   r12
  4070d9:	push   rbx
  4070da:	sub    rsp,0x18
  4070de:	call   4066a0 <edge_case_tests@@Base>
  4070e3:	mov    ebx,eax
  4070e5:	call   4069c0 <error_case_tests@@Base>
  4070ea:	mov    ebp,eax
  4070ec:	or     ebp,ebx
  4070ee:	call   406fb0 <union_vector_tests@@Base>
  4070f3:	mov    r14d,eax
  4070f6:	call   406cb0 <base64_tests@@Base>
  4070fb:	mov    ebx,eax
  4070fd:	or     ebx,r14d
  407100:	or     ebx,ebp
  407102:	call   406e70 <mixed_type_union_tests@@Base>
  407107:	mov    r14d,eax
  40710a:	mov    DWORD PTR [rsp],0x20d
  407111:	lea    r12,[rip+0x3b9e8]        # 442b00 <flatcc_builder_padding_base@@Base+0xa450>
  407118:	lea    rsi,[rip+0x2fd46]        # 436e65 <_IO_stdin_used@@Base+0x2e65>
  40711f:	lea    rdx,[rip+0x2dbf4]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  407126:	mov    rdi,r12
  407129:	xor    ecx,ecx
  40712b:	xor    r8d,r8d
  40712e:	xor    r9d,r9d
  407131:	call   406240 <test_json@@Base>
  407136:	mov    ebp,eax
  407138:	or     ebp,r14d
  40713b:	or     ebp,ebx
  40713d:	mov    DWORD PTR [rsp],0x210
  407144:	lea    rsi,[rip+0x2fd31]        # 436e7c <_IO_stdin_used@@Base+0x2e7c>
  40714b:	lea    r15,[rip+0x2fd51]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  407152:	mov    rdi,r12
  407155:	mov    rdx,r15
  407158:	xor    ecx,ecx
  40715a:	xor    r8d,r8d
  40715d:	xor    r9d,r9d
  407160:	call   406240 <test_json@@Base>
  407165:	mov    r14d,eax
  407168:	mov    DWORD PTR [rsp],0x213
  40716f:	lea    rsi,[rip+0x2fd4e]        # 436ec4 <_IO_stdin_used@@Base+0x2ec4>
  407176:	lea    rdx,[rip+0x2fd6f]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  40717d:	mov    rdi,r12
  407180:	xor    ecx,ecx
  407182:	xor    r8d,r8d
  407185:	xor    r9d,r9d
  407188:	call   406240 <test_json@@Base>
  40718d:	mov    ebx,eax
  40718f:	or     ebx,r14d
  407192:	mov    DWORD PTR [rsp],0x216
  407199:	lea    rsi,[rip+0x2fd6f]        # 436f0f <_IO_stdin_used@@Base+0x2f0f>
  4071a0:	lea    r13,[rip+0x2fd99]        # 436f40 <_IO_stdin_used@@Base+0x2f40>
  4071a7:	mov    rdi,r12
  4071aa:	mov    rdx,r13
  4071ad:	xor    ecx,ecx
  4071af:	xor    r8d,r8d
  4071b2:	xor    r9d,r9d
  4071b5:	call   406240 <test_json@@Base>
  4071ba:	mov    r14d,eax
  4071bd:	or     r14d,ebx
  4071c0:	or     r14d,ebp
  4071c3:	mov    DWORD PTR [rsp],0x219
  4071ca:	lea    rsi,[rip+0x2fd9b]        # 436f6c <_IO_stdin_used@@Base+0x2f6c>
  4071d1:	mov    rdi,r12
  4071d4:	mov    rdx,r13
  4071d7:	xor    ecx,ecx
  4071d9:	xor    r8d,r8d
  4071dc:	xor    r9d,r9d
  4071df:	call   406240 <test_json@@Base>
  4071e4:	mov    ebx,eax
  4071e6:	mov    DWORD PTR [rsp],0x21c
  4071ed:	lea    rsi,[rip+0x2fdb2]        # 436fa6 <_IO_stdin_used@@Base+0x2fa6>
  4071f4:	mov    rdi,r12
  4071f7:	mov    rdx,r15
  4071fa:	xor    ecx,ecx
  4071fc:	xor    r8d,r8d
  4071ff:	xor    r9d,r9d
  407202:	call   406240 <test_json@@Base>
  407207:	mov    ebp,eax
  407209:	or     ebp,ebx
  40720b:	mov    DWORD PTR [rsp],0x21f
  407212:	lea    rsi,[rip+0x2fdb3]        # 436fcc <_IO_stdin_used@@Base+0x2fcc>
  407219:	mov    rdi,r12
  40721c:	lea    rdx,[rip+0x2fcc9]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  407223:	xor    ecx,ecx
  407225:	xor    r8d,r8d
  407228:	xor    r9d,r9d
  40722b:	call   406240 <test_json@@Base>
  407230:	mov    ebx,eax
  407232:	or     ebx,ebp
  407234:	mov    DWORD PTR [rsp],0x223
  40723b:	lea    rsi,[rip+0x2fdb3]        # 436ff5 <_IO_stdin_used@@Base+0x2ff5>
  407242:	mov    rdi,r12
  407245:	lea    r15,[rip+0x2dace]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  40724c:	mov    rdx,r15
  40724f:	xor    ecx,ecx
  407251:	xor    r8d,r8d
  407254:	xor    r9d,r9d
  407257:	call   406240 <test_json@@Base>
  40725c:	mov    r13d,eax
  40725f:	or     r13d,ebx
  407262:	or     r13d,r14d
  407265:	mov    DWORD PTR [rsp],0x227
  40726c:	lea    rsi,[rip+0x2da20]        # 434c93 <_IO_stdin_used@@Base+0xc93>
  407273:	mov    rdi,r12
  407276:	mov    rdx,r15
  407279:	xor    ecx,ecx
  40727b:	xor    r8d,r8d
  40727e:	xor    r9d,r9d
  407281:	call   406240 <test_json@@Base>
  407286:	mov    r14d,eax
  407289:	mov    DWORD PTR [rsp],0x22b
  407290:	lea    rsi,[rip+0x2fd85]        # 43701c <_IO_stdin_used@@Base+0x301c>
  407297:	mov    rdi,r12
  40729a:	mov    rdx,r15
  40729d:	xor    ecx,ecx
  40729f:	xor    r8d,r8d
  4072a2:	xor    r9d,r9d
  4072a5:	call   406240 <test_json@@Base>
  4072aa:	mov    ebx,eax
  4072ac:	or     ebx,r14d
  4072af:	mov    DWORD PTR [rsp],0x22e
  4072b6:	lea    rsi,[rip+0x2fd74]        # 437031 <_IO_stdin_used@@Base+0x3031>
  4072bd:	mov    rdi,r12
  4072c0:	lea    rax,[rip+0x2fbdc]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  4072c7:	mov    rdx,rax
  4072ca:	xor    ecx,ecx
  4072cc:	xor    r8d,r8d
  4072cf:	xor    r9d,r9d
  4072d2:	call   406240 <test_json@@Base>
  4072d7:	mov    ebp,eax
  4072d9:	or     ebp,ebx
  4072db:	mov    DWORD PTR [rsp],0x231
  4072e2:	lea    rsi,[rip+0x2fd6b]        # 437054 <_IO_stdin_used@@Base+0x3054>
  4072e9:	mov    rdi,r12
  4072ec:	lea    rax,[rip+0x2fbf9]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  4072f3:	mov    rdx,rax
  4072f6:	xor    ecx,ecx
  4072f8:	xor    r8d,r8d
  4072fb:	xor    r9d,r9d
  4072fe:	call   406240 <test_json@@Base>
  407303:	mov    ebx,eax
  407305:	or     ebx,ebp
  407307:	mov    DWORD PTR [rsp],0x234
  40730e:	lea    rsi,[rip+0x2fd63]        # 437078 <_IO_stdin_used@@Base+0x3078>
  407315:	mov    rdi,r12
  407318:	lea    rbp,[rip+0x2fc21]        # 436f40 <_IO_stdin_used@@Base+0x2f40>
  40731f:	mov    rdx,rbp
  407322:	xor    ecx,ecx
  407324:	xor    r8d,r8d
  407327:	xor    r9d,r9d
  40732a:	call   406240 <test_json@@Base>
  40732f:	mov    r15d,eax
  407332:	or     r15d,ebx
  407335:	or     r15d,r13d
  407338:	mov    DWORD PTR [rsp],0x237
  40733f:	lea    rsi,[rip+0x2fd5f]        # 4370a5 <_IO_stdin_used@@Base+0x30a5>
  407346:	mov    rdi,r12
  407349:	mov    rdx,rbp
  40734c:	xor    ecx,ecx
  40734e:	xor    r8d,r8d
  407351:	xor    r9d,r9d
  407354:	call   406240 <test_json@@Base>
  407359:	mov    r14d,eax
  40735c:	mov    DWORD PTR [rsp],0x23a
  407363:	lea    rsi,[rip+0x2fd71]        # 4370db <_IO_stdin_used@@Base+0x30db>
  40736a:	mov    rdi,r12
  40736d:	lea    rdx,[rip+0x2fb2f]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  407374:	xor    ecx,ecx
  407376:	xor    r8d,r8d
  407379:	xor    r9d,r9d
  40737c:	call   406240 <test_json@@Base>
  407381:	mov    ebx,eax
  407383:	or     ebx,r14d
  407386:	mov    DWORD PTR [rsp],0x23d
  40738d:	lea    rsi,[rip+0x2fd67]        # 4370fb <_IO_stdin_used@@Base+0x30fb>
  407394:	mov    rdi,r12
  407397:	lea    rdx,[rip+0x2fb4e]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  40739e:	xor    ecx,ecx
  4073a0:	xor    r8d,r8d
  4073a3:	xor    r9d,r9d
  4073a6:	call   406240 <test_json@@Base>
  4073ab:	mov    ebp,eax
  4073ad:	or     ebp,ebx
  4073af:	mov    DWORD PTR [rsp],0x241
  4073b6:	lea    rsi,[rip+0x2fd60]        # 43711d <_IO_stdin_used@@Base+0x311d>
  4073bd:	mov    rdi,r12
  4073c0:	lea    r14,[rip+0x2d953]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  4073c7:	mov    rdx,r14
  4073ca:	xor    ecx,ecx
  4073cc:	xor    r8d,r8d
  4073cf:	xor    r9d,r9d
  4073d2:	call   406240 <test_json@@Base>
  4073d7:	mov    ebx,eax
  4073d9:	or     ebx,ebp
  4073db:	mov    DWORD PTR [rsp],0x245
  4073e2:	lea    rsi,[rip+0x2db73]        # 434f5c <_IO_stdin_used@@Base+0xf5c>
  4073e9:	mov    rdi,r12
  4073ec:	mov    rdx,r14
  4073ef:	xor    ecx,ecx
  4073f1:	xor    r8d,r8d
  4073f4:	xor    r9d,r9d
  4073f7:	call   406240 <test_json@@Base>
  4073fc:	mov    ebp,eax
  4073fe:	or     ebp,ebx
  407400:	mov    DWORD PTR [rsp],0x249
  407407:	lea    rsi,[rip+0x2fd30]        # 43713e <_IO_stdin_used@@Base+0x313e>
  40740e:	lea    r14,[rip+0x2fd4f]        # 437164 <_IO_stdin_used@@Base+0x3164>
  407415:	mov    rdi,r12
  407418:	mov    rdx,r14
  40741b:	xor    ecx,ecx
  40741d:	xor    r8d,r8d
  407420:	xor    r9d,r9d
  407423:	call   406240 <test_json@@Base>
  407428:	mov    r13d,eax
  40742b:	or     r13d,ebp
  40742e:	or     r13d,r15d
  407431:	mov    DWORD PTR [rsp],0x24f
  407438:	lea    rsi,[rip+0x2fd4c]        # 43718b <_IO_stdin_used@@Base+0x318b>
  40743f:	mov    rdi,r12
  407442:	mov    rdx,r14
  407445:	xor    ecx,ecx
  407447:	xor    r8d,r8d
  40744a:	xor    r9d,r9d
  40744d:	call   406240 <test_json@@Base>
  407452:	mov    ebp,eax
  407454:	mov    DWORD PTR [rsp],0x252
  40745b:	lea    rsi,[rip+0x2fd4e]        # 4371b0 <_IO_stdin_used@@Base+0x31b0>
  407462:	mov    rdi,r12
  407465:	mov    rdx,r14
  407468:	xor    ecx,ecx
  40746a:	xor    r8d,r8d
  40746d:	xor    r9d,r9d
  407470:	call   406240 <test_json@@Base>
  407475:	mov    ebx,eax
  407477:	or     ebx,ebp
  407479:	mov    DWORD PTR [rsp],0x255
  407480:	lea    rsi,[rip+0x2fd4e]        # 4371d5 <_IO_stdin_used@@Base+0x31d5>
  407487:	mov    rdi,r12
  40748a:	lea    r14,[rip+0x2faaf]        # 436f40 <_IO_stdin_used@@Base+0x2f40>
  407491:	mov    rdx,r14
  407494:	xor    ecx,ecx
  407496:	xor    r8d,r8d
  407499:	xor    r9d,r9d
  40749c:	call   406240 <test_json@@Base>
  4074a1:	mov    ebp,eax
  4074a3:	or     ebp,ebx
  4074a5:	mov    DWORD PTR [rsp],0x259
  4074ac:	lea    rsi,[rip+0x2fd50]        # 437203 <_IO_stdin_used@@Base+0x3203>
  4074b3:	mov    rdi,r12
  4074b6:	lea    rdx,[rip+0x2f9e6]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  4074bd:	xor    ecx,ecx
  4074bf:	xor    r8d,r8d
  4074c2:	xor    r9d,r9d
  4074c5:	call   406240 <test_json@@Base>
  4074ca:	mov    ebx,eax
  4074cc:	or     ebx,ebp
  4074ce:	mov    DWORD PTR [rsp],0x25c
  4074d5:	lea    rsi,[rip+0x2fd48]        # 437224 <_IO_stdin_used@@Base+0x3224>
  4074dc:	mov    rdi,r12
  4074df:	lea    rdx,[rip+0x2fa06]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  4074e6:	xor    ecx,ecx
  4074e8:	xor    r8d,r8d
  4074eb:	xor    r9d,r9d
  4074ee:	call   406240 <test_json@@Base>
  4074f3:	mov    ebp,eax
  4074f5:	or     ebp,ebx
  4074f7:	mov    DWORD PTR [rsp],0x25f
  4074fe:	lea    rsi,[rip+0x2fd40]        # 437245 <_IO_stdin_used@@Base+0x3245>
  407505:	lea    rdx,[rip+0x2fd5a]        # 437266 <_IO_stdin_used@@Base+0x3266>
  40750c:	mov    rdi,r12
  40750f:	xor    ecx,ecx
  407511:	xor    r8d,r8d
  407514:	xor    r9d,r9d
  407517:	call   406240 <test_json@@Base>
  40751c:	mov    ebx,eax
  40751e:	or     ebx,ebp
  407520:	mov    DWORD PTR [rsp],0x262
  407527:	lea    rsi,[rip+0x2fd5e]        # 43728c <_IO_stdin_used@@Base+0x328c>
  40752e:	mov    rdi,r12
  407531:	mov    rdx,r14
  407534:	xor    ecx,ecx
  407536:	xor    r8d,r8d
  407539:	xor    r9d,r9d
  40753c:	call   406240 <test_json@@Base>
  407541:	mov    r15d,eax
  407544:	or     r15d,ebx
  407547:	or     r15d,r13d
  40754a:	mov    DWORD PTR [rsp],0x265
  407551:	lea    rsi,[rip+0x2fd56]        # 4372ae <_IO_stdin_used@@Base+0x32ae>
  407558:	lea    rdx,[rip+0x2fd71]        # 4372d0 <_IO_stdin_used@@Base+0x32d0>
  40755f:	mov    rdi,r12
  407562:	xor    ecx,ecx
  407564:	xor    r8d,r8d
  407567:	xor    r9d,r9d
  40756a:	call   406240 <test_json@@Base>
  40756f:	mov    ebx,eax
  407571:	mov    DWORD PTR [rsp],0x268
  407578:	lea    rsi,[rip+0x2fd6f]        # 4372ee <_IO_stdin_used@@Base+0x32ee>
  40757f:	lea    rdx,[rip+0x2fd8a]        # 437310 <_IO_stdin_used@@Base+0x3310>
  407586:	mov    rdi,r12
  407589:	xor    ecx,ecx
  40758b:	xor    r8d,r8d
  40758e:	xor    r9d,r9d
  407591:	call   406240 <test_json@@Base>
  407596:	mov    ebp,eax
  407598:	or     ebp,ebx
  40759a:	mov    DWORD PTR [rsp],0x26b
  4075a1:	lea    rsi,[rip+0x2fd86]        # 43732e <_IO_stdin_used@@Base+0x332e>
  4075a8:	lea    rdx,[rip+0x2fda0]        # 43734f <_IO_stdin_used@@Base+0x334f>
  4075af:	mov    rdi,r12
  4075b2:	xor    ecx,ecx
  4075b4:	xor    r8d,r8d
  4075b7:	xor    r9d,r9d
  4075ba:	call   406240 <test_json@@Base>
  4075bf:	mov    ebx,eax
  4075c1:	or     ebx,ebp
  4075c3:	mov    DWORD PTR [rsp],0x26e
  4075ca:	lea    rsi,[rip+0x2fd9b]        # 43736c <_IO_stdin_used@@Base+0x336c>
  4075d1:	mov    rdi,r12
  4075d4:	lea    r14,[rip+0x2f8c8]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  4075db:	mov    rdx,r14
  4075de:	xor    ecx,ecx
  4075e0:	xor    r8d,r8d
  4075e3:	xor    r9d,r9d
  4075e6:	call   406240 <test_json@@Base>
  4075eb:	mov    ebp,eax
  4075ed:	or     ebp,ebx
  4075ef:	mov    DWORD PTR [rsp],0x271
  4075f6:	lea    rsi,[rip+0x2fd9a]        # 437397 <_IO_stdin_used@@Base+0x3397>
  4075fd:	mov    rdi,r12
  407600:	mov    rdx,r14
  407603:	xor    ecx,ecx
  407605:	xor    r8d,r8d
  407608:	xor    r9d,r9d
  40760b:	call   406240 <test_json@@Base>
  407610:	mov    ebx,eax
  407612:	or     ebx,ebp
  407614:	mov    DWORD PTR [rsp],0x274
  40761b:	lea    r14,[rip+0x2fdaf]        # 4373d1 <_IO_stdin_used@@Base+0x33d1>
  407622:	lea    r13,[rip+0x2fdd2]        # 4373fb <_IO_stdin_used@@Base+0x33fb>
  407629:	mov    rdi,r12
  40762c:	mov    rsi,r14
  40762f:	mov    rdx,r13
  407632:	xor    ecx,ecx
  407634:	xor    r8d,r8d
  407637:	xor    r9d,r9d
  40763a:	call   406240 <test_json@@Base>
  40763f:	mov    ebp,eax
  407641:	or     ebp,ebx
  407643:	mov    DWORD PTR [rsp],0x277
  40764a:	mov    rdi,r12
  40764d:	mov    rsi,r14
  407650:	mov    rdx,r13
  407653:	xor    ecx,ecx
  407655:	xor    r8d,r8d
  407658:	xor    r9d,r9d
  40765b:	call   406240 <test_json@@Base>
  407660:	mov    ebx,eax
  407662:	or     ebx,ebp
  407664:	mov    DWORD PTR [rsp],0x27a
  40766b:	lea    rsi,[rip+0x2fda3]        # 437415 <_IO_stdin_used@@Base+0x3415>
  407672:	lea    rdx,[rip+0x2fded]        # 437466 <_IO_stdin_used@@Base+0x3466>
  407679:	mov    rdi,r12
  40767c:	xor    ecx,ecx
  40767e:	xor    r8d,r8d
  407681:	xor    r9d,r9d
  407684:	call   406240 <test_json@@Base>
  407689:	mov    r14d,eax
  40768c:	or     r14d,ebx
  40768f:	or     r14d,r15d
  407692:	mov    DWORD PTR [rsp],0x27e
  407699:	lea    rsi,[rip+0x2fe0d]        # 4374ad <_IO_stdin_used@@Base+0x34ad>
  4076a0:	lea    rdx,[rip+0x2fe5b]        # 437502 <_IO_stdin_used@@Base+0x3502>
  4076a7:	mov    rdi,r12
  4076aa:	xor    ecx,ecx
  4076ac:	xor    r8d,r8d
  4076af:	xor    r9d,r9d
  4076b2:	call   406240 <test_json@@Base>
  4076b7:	mov    ebx,eax
  4076b9:	mov    DWORD PTR [rsp],0x282
  4076c0:	lea    rsi,[rip+0x2fe85]        # 43754c <_IO_stdin_used@@Base+0x354c>
  4076c7:	lea    rdx,[rip+0x2feed]        # 4375bb <_IO_stdin_used@@Base+0x35bb>
  4076ce:	mov    rdi,r12
  4076d1:	xor    ecx,ecx
  4076d3:	xor    r8d,r8d
  4076d6:	xor    r9d,r9d
  4076d9:	call   406240 <test_json@@Base>
  4076de:	mov    ebp,eax
  4076e0:	or     ebp,ebx
  4076e2:	mov    DWORD PTR [rsp],0x286
  4076e9:	lea    rsi,[rip+0x2ff2d]        # 43761d <_IO_stdin_used@@Base+0x361d>
  4076f0:	mov    rdi,r12
  4076f3:	lea    r15,[rip+0x2d620]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  4076fa:	mov    rdx,r15
  4076fd:	xor    ecx,ecx
  4076ff:	xor    r8d,r8d
  407702:	xor    r9d,r9d
  407705:	call   406240 <test_json@@Base>
  40770a:	mov    ebx,eax
  40770c:	or     ebx,ebp
  40770e:	mov    DWORD PTR [rsp],0x289
  407715:	lea    rsi,[rip+0x2ff2c]        # 437648 <_IO_stdin_used@@Base+0x3648>
  40771c:	mov    rdi,r12
  40771f:	mov    rdx,r15
  407722:	xor    ecx,ecx
  407724:	xor    r8d,r8d
  407727:	xor    r9d,r9d
  40772a:	call   406240 <test_json@@Base>
  40772f:	mov    ebp,eax
  407731:	or     ebp,ebx
  407733:	mov    DWORD PTR [rsp],0x28d
  40773a:	lea    rsi,[rip+0x2ff2d]        # 43766e <_IO_stdin_used@@Base+0x366e>
  407741:	mov    rdi,r12
  407744:	lea    rdx,[rip+0x2f758]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  40774b:	xor    ecx,ecx
  40774d:	xor    r8d,r8d
  407750:	xor    r9d,r9d
  407753:	call   406240 <test_json@@Base>
  407758:	mov    ebx,eax
  40775a:	or     ebx,ebp
  40775c:	mov    DWORD PTR [rsp],0x290
  407763:	lea    rsi,[rip+0x2ff21]        # 43768b <_IO_stdin_used@@Base+0x368b>
  40776a:	mov    rdi,r12
  40776d:	lea    rdx,[rip+0x2f778]        # 436eec <_IO_stdin_used@@Base+0x2eec>
  407774:	xor    ecx,ecx
  407776:	xor    r8d,r8d
  407779:	xor    r9d,r9d
  40777c:	call   406240 <test_json@@Base>
  407781:	mov    ebp,eax
  407783:	or     ebp,ebx
  407785:	mov    DWORD PTR [rsp],0x293
  40778c:	lea    rsi,[rip+0x2ff15]        # 4376a8 <_IO_stdin_used@@Base+0x36a8>
  407793:	mov    rdi,r12
  407796:	lea    rdx,[rip+0x2fac9]        # 437266 <_IO_stdin_used@@Base+0x3266>
  40779d:	xor    ecx,ecx
  40779f:	xor    r8d,r8d
  4077a2:	xor    r9d,r9d
  4077a5:	call   406240 <test_json@@Base>
  4077aa:	mov    ebx,eax
  4077ac:	or     ebx,ebp
  4077ae:	mov    DWORD PTR [rsp],0x296
  4077b5:	lea    rsi,[rip+0x2ff09]        # 4376c5 <_IO_stdin_used@@Base+0x36c5>
  4077bc:	mov    rdi,r12
  4077bf:	lea    rdx,[rip+0x2f77a]        # 436f40 <_IO_stdin_used@@Base+0x2f40>
  4077c6:	xor    ecx,ecx
  4077c8:	xor    r8d,r8d
  4077cb:	xor    r9d,r9d
  4077ce:	call   406240 <test_json@@Base>
  4077d3:	mov    ebp,eax
  4077d5:	or     ebp,ebx
  4077d7:	mov    DWORD PTR [rsp],0x299
  4077de:	lea    rsi,[rip+0x2fefe]        # 4376e3 <_IO_stdin_used@@Base+0x36e3>
  4077e5:	mov    r15,r12
  4077e8:	mov    rdi,r12
  4077eb:	lea    rdx,[rip+0x2fade]        # 4372d0 <_IO_stdin_used@@Base+0x32d0>
  4077f2:	xor    ecx,ecx
  4077f4:	xor    r8d,r8d
  4077f7:	xor    r9d,r9d
  4077fa:	call   406240 <test_json@@Base>
  4077ff:	mov    r13d,eax
  407802:	or     r13d,ebp
  407805:	or     r13d,r14d
  407808:	mov    DWORD PTR [rsp],0x29c
  40780f:	lea    rsi,[rip+0x2feeb]        # 437701 <_IO_stdin_used@@Base+0x3701>
  407816:	mov    rdi,r12
  407819:	lea    rdx,[rip+0x2faf0]        # 437310 <_IO_stdin_used@@Base+0x3310>
  407820:	xor    ecx,ecx
  407822:	xor    r8d,r8d
  407825:	xor    r9d,r9d
  407828:	call   406240 <test_json@@Base>
  40782d:	mov    ebp,eax
  40782f:	mov    DWORD PTR [rsp],0x29f
  407836:	lea    rsi,[rip+0x2fee2]        # 43771f <_IO_stdin_used@@Base+0x371f>
  40783d:	mov    rdi,r12
  407840:	lea    rdx,[rip+0x2fb08]        # 43734f <_IO_stdin_used@@Base+0x334f>
  407847:	xor    ecx,ecx
  407849:	xor    r8d,r8d
  40784c:	xor    r9d,r9d
  40784f:	call   406240 <test_json@@Base>
  407854:	mov    ebx,eax
  407856:	or     ebx,ebp
  407858:	mov    DWORD PTR [rsp],0x2a2
  40785f:	lea    rsi,[rip+0x2fed6]        # 43773c <_IO_stdin_used@@Base+0x373c>
  407866:	mov    rdi,r12
  407869:	lea    r14,[rip+0x2f633]        # 436ea3 <_IO_stdin_used@@Base+0x2ea3>
  407870:	mov    rdx,r14
  407873:	xor    ecx,ecx
  407875:	xor    r8d,r8d
  407878:	xor    r9d,r9d
  40787b:	call   406240 <test_json@@Base>
  407880:	mov    ebp,eax
  407882:	or     ebp,ebx
  407884:	mov    DWORD PTR [rsp],0x2a5
  40788b:	lea    rsi,[rip+0x2fecf]        # 437761 <_IO_stdin_used@@Base+0x3761>
  407892:	mov    rdi,r12
  407895:	mov    rdx,r14
  407898:	xor    ecx,ecx
  40789a:	xor    r8d,r8d
  40789d:	xor    r9d,r9d
  4078a0:	call   406240 <test_json@@Base>
  4078a5:	mov    ebx,eax
  4078a7:	or     ebx,ebp
  4078a9:	mov    DWORD PTR [rsp],0x2a8
  4078b0:	lea    r14,[rip+0x2fede]        # 437795 <_IO_stdin_used@@Base+0x3795>
  4078b7:	mov    rdi,r12
  4078ba:	mov    rsi,r14
  4078bd:	lea    r12,[rip+0x2fb37]        # 4373fb <_IO_stdin_used@@Base+0x33fb>
  4078c4:	mov    rdx,r12
  4078c7:	xor    ecx,ecx
  4078c9:	xor    r8d,r8d
  4078cc:	xor    r9d,r9d
  4078cf:	call   406240 <test_json@@Base>
  4078d4:	mov    ebp,eax
  4078d6:	or     ebp,ebx
  4078d8:	mov    DWORD PTR [rsp],0x2ab
  4078df:	mov    rdi,r15
  4078e2:	mov    rsi,r14
  4078e5:	mov    rdx,r12
  4078e8:	xor    ecx,ecx
  4078ea:	xor    r8d,r8d
  4078ed:	xor    r9d,r9d
  4078f0:	call   406240 <test_json@@Base>
  4078f5:	mov    ebx,eax
  4078f7:	or     ebx,ebp
  4078f9:	mov    DWORD PTR [rsp],0x2ae
  407900:	lea    rsi,[rip+0x2feb2]        # 4377b9 <_IO_stdin_used@@Base+0x37b9>
  407907:	mov    rdi,r15
  40790a:	lea    rdx,[rip+0x2fb55]        # 437466 <_IO_stdin_used@@Base+0x3466>
  407911:	xor    ecx,ecx
  407913:	xor    r8d,r8d
  407916:	xor    r9d,r9d
  407919:	call   406240 <test_json@@Base>
  40791e:	mov    ebp,eax
  407920:	or     ebp,ebx
  407922:	mov    DWORD PTR [rsp],0x2b2
  407929:	lea    rsi,[rip+0x2fed0]        # 437800 <_IO_stdin_used@@Base+0x3800>
  407930:	mov    rdi,r15
  407933:	lea    rdx,[rip+0x2fbc8]        # 437502 <_IO_stdin_used@@Base+0x3502>
  40793a:	xor    ecx,ecx
  40793c:	xor    r8d,r8d
  40793f:	xor    r9d,r9d
  407942:	call   406240 <test_json@@Base>
  407947:	mov    ebx,eax
  407949:	or     ebx,ebp
  40794b:	mov    DWORD PTR [rsp],0x2b6
  407952:	lea    rsi,[rip+0x2fef2]        # 43784b <_IO_stdin_used@@Base+0x384b>
  407959:	mov    rdi,r15
  40795c:	lea    rdx,[rip+0x2fc58]        # 4375bb <_IO_stdin_used@@Base+0x35bb>
  407963:	xor    ecx,ecx
  407965:	xor    r8d,r8d
  407968:	xor    r9d,r9d
  40796b:	call   406240 <test_json@@Base>
  407970:	mov    ebp,eax
  407972:	or     ebp,ebx
  407974:	mov    DWORD PTR [rsp],0x2ba
  40797b:	lea    rsi,[rip+0x2ff28]        # 4378aa <_IO_stdin_used@@Base+0x38aa>
  407982:	mov    rdi,r15
  407985:	lea    rbx,[rip+0x2d38e]        # 434d1a <_IO_stdin_used@@Base+0xd1a>
  40798c:	mov    rdx,rbx
  40798f:	xor    ecx,ecx
  407991:	xor    r8d,r8d
  407994:	xor    r9d,r9d
  407997:	call   406240 <test_json@@Base>
  40799c:	or     eax,ebp
  40799e:	or     eax,r13d
  4079a1:	mov    DWORD PTR [rsp+0x14],eax
  4079a5:	mov    DWORD PTR [rsp],0x2bd
  4079ac:	lea    rsi,[rip+0x2ff1c]        # 4378cf <_IO_stdin_used@@Base+0x38cf>
  4079b3:	mov    rdi,r15
  4079b6:	mov    rdx,rbx
  4079b9:	mov    r13,rbx
  4079bc:	xor    ecx,ecx
  4079be:	xor    r8d,r8d
  4079c1:	xor    r9d,r9d
  4079c4:	call   406240 <test_json@@Base>
  4079c9:	mov    ebx,eax
  4079cb:	mov    DWORD PTR [rsp],0x2c7
  4079d2:	lea    rsi,[rip+0x2ff18]        # 4378f1 <_IO_stdin_used@@Base+0x38f1>
  4079d9:	lea    r14,[rip+0x2ff6e]        # 43794e <_IO_stdin_used@@Base+0x394e>
  4079e0:	mov    rdi,r15
  4079e3:	mov    rdx,r14
  4079e6:	xor    ecx,ecx
  4079e8:	xor    r8d,r8d
  4079eb:	xor    r9d,r9d
  4079ee:	call   406240 <test_json@@Base>
  4079f3:	mov    ebp,eax
  4079f5:	or     ebp,ebx
  4079f7:	mov    DWORD PTR [rsp],0x2cc
  4079fe:	lea    rsi,[rip+0x2ffa7]        # 4379ac <_IO_stdin_used@@Base+0x39ac>
  407a05:	mov    rdi,r15
  407a08:	mov    rdx,r14
  407a0b:	xor    ecx,ecx
  407a0d:	xor    r8d,r8d
  407a10:	xor    r9d,r9d
  407a13:	call   406240 <test_json@@Base>
  407a18:	mov    ebx,eax
  407a1a:	or     ebx,ebp
  407a1c:	mov    DWORD PTR [rsp],0x2db
  407a23:	lea    rsi,[rip+0x2ffef]        # 437a19 <_IO_stdin_used@@Base+0x3a19>
  407a2a:	lea    rdx,[rip+0x30025]        # 437a56 <_IO_stdin_used@@Base+0x3a56>
  407a31:	mov    rdi,r15
  407a34:	xor    ecx,ecx
  407a36:	xor    r8d,r8d
  407a39:	xor    r9d,r9d
  407a3c:	call   406240 <test_json@@Base>
  407a41:	mov    ebp,eax
  407a43:	or     ebp,ebx
  407a45:	mov    DWORD PTR [rsp],0x2de
  407a4c:	lea    rsi,[rip+0x30033]        # 437a86 <_IO_stdin_used@@Base+0x3a86>
  407a53:	lea    rdx,[rip+0x30046]        # 437aa0 <_IO_stdin_used@@Base+0x3aa0>
  407a5a:	mov    rdi,r15
  407a5d:	xor    ecx,ecx
  407a5f:	xor    r8d,r8d
  407a62:	xor    r9d,r9d
  407a65:	call   406240 <test_json@@Base>
  407a6a:	mov    ebx,eax
  407a6c:	or     ebx,ebp
  407a6e:	mov    DWORD PTR [rsp],0x2e2
  407a75:	lea    rsi,[rip+0x30036]        # 437ab2 <_IO_stdin_used@@Base+0x3ab2>
  407a7c:	lea    r14,[rip+0x30077]        # 437afa <_IO_stdin_used@@Base+0x3afa>
  407a83:	mov    rdi,r15
  407a86:	mov    rdx,r14
  407a89:	xor    ecx,ecx
  407a8b:	xor    r8d,r8d
  407a8e:	xor    r9d,r9d
  407a91:	call   406240 <test_json@@Base>
  407a96:	mov    ebp,eax
  407a98:	or     ebp,ebx
  407a9a:	mov    DWORD PTR [rsp],0x2ee
  407aa1:	lea    rsi,[rip+0x30093]        # 437b3b <_IO_stdin_used@@Base+0x3b3b>
  407aa8:	mov    rdi,r15
  407aab:	mov    rdx,r14
  407aae:	xor    ecx,ecx
  407ab0:	xor    r8d,r8d
  407ab3:	xor    r9d,r9d
  407ab6:	call   406240 <test_json@@Base>
  407abb:	mov    ebx,eax
  407abd:	or     ebx,ebp
  407abf:	mov    DWORD PTR [rsp],0x2fe
  407ac6:	lea    rsi,[rip+0x3010b]        # 437bd8 <_IO_stdin_used@@Base+0x3bd8>
  407acd:	lea    rdx,[rip+0x3012b]        # 437bff <_IO_stdin_used@@Base+0x3bff>
  407ad4:	mov    rdi,r15
  407ad7:	xor    ecx,ecx
  407ad9:	xor    r8d,r8d
  407adc:	xor    r9d,r9d
  407adf:	call   406240 <test_json@@Base>
  407ae4:	mov    ebp,eax
  407ae6:	or     ebp,ebx
  407ae8:	mov    DWORD PTR [rsp],0x302
  407aef:	lea    rsi,[rip+0x3012b]        # 437c21 <_IO_stdin_used@@Base+0x3c21>
  407af6:	lea    rdx,[rip+0x30153]        # 437c50 <_IO_stdin_used@@Base+0x3c50>
  407afd:	mov    rdi,r15
  407b00:	xor    ecx,ecx
  407b02:	xor    r8d,r8d
  407b05:	xor    r9d,r9d
  407b08:	call   406240 <test_json@@Base>
  407b0d:	mov    ebx,eax
  407b0f:	or     ebx,ebp
  407b11:	mov    DWORD PTR [rsp],0x308
  407b18:	lea    rsi,[rip+0x3015b]        # 437c7a <_IO_stdin_used@@Base+0x3c7a>
  407b1f:	lea    rdx,[rip+0x301cf]        # 437cf5 <_IO_stdin_used@@Base+0x3cf5>
  407b26:	mov    rdi,r15
  407b29:	xor    ecx,ecx
  407b2b:	xor    r8d,r8d
  407b2e:	xor    r9d,r9d
  407b31:	call   406240 <test_json@@Base>
  407b36:	mov    ebp,eax
  407b38:	or     ebp,ebx
  407b3a:	mov    DWORD PTR [rsp],0x30d
  407b41:	lea    rsi,[rip+0x3021d]        # 437d65 <_IO_stdin_used@@Base+0x3d65>
  407b48:	mov    rdi,r15
  407b4b:	mov    rdx,r13
  407b4e:	xor    ecx,ecx
  407b50:	xor    r8d,r8d
  407b53:	xor    r9d,r9d
  407b56:	call   406240 <test_json@@Base>
  407b5b:	mov    r13d,eax
  407b5e:	or     r13d,ebp
  407b61:	or     r13d,DWORD PTR [rsp+0x14]
  407b66:	mov    DWORD PTR [rsp],0x312
  407b6d:	lea    rsi,[rip+0x30269]        # 437ddd <_IO_stdin_used@@Base+0x3ddd>
  407b74:	lea    rdx,[rip+0x302dc]        # 437e57 <_IO_stdin_used@@Base+0x3e57>
  407b7b:	mov    rdi,r15
  407b7e:	xor    ecx,ecx
  407b80:	xor    r8d,r8d
  407b83:	xor    r9d,r9d
  407b86:	call   406240 <test_json@@Base>
  407b8b:	mov    r14d,eax
  407b8e:	mov    DWORD PTR [rsp],0x317
  407b95:	lea    rsi,[rip+0x3032a]        # 437ec6 <_IO_stdin_used@@Base+0x3ec6>
  407b9c:	lea    rdx,[rip+0x303ae]        # 437f51 <_IO_stdin_used@@Base+0x3f51>
  407ba3:	mov    rdi,r15
  407ba6:	xor    ecx,ecx
  407ba8:	xor    r8d,r8d
  407bab:	xor    r9d,r9d
  407bae:	call   406240 <test_json@@Base>
  407bb3:	mov    ebp,eax
  407bb5:	or     ebp,r14d
  407bb8:	mov    DWORD PTR [rsp],0x31c
  407bbf:	lea    rsi,[rip+0x30409]        # 437fcf <_IO_stdin_used@@Base+0x3fcf>
  407bc6:	lea    rdx,[rip+0x3047d]        # 43804a <_IO_stdin_used@@Base+0x404a>
  407bcd:	mov    rdi,r15
  407bd0:	xor    ecx,ecx
  407bd2:	xor    r8d,r8d
  407bd5:	xor    r9d,r9d
  407bd8:	call   406240 <test_json@@Base>
  407bdd:	mov    ebx,eax
  407bdf:	or     ebx,ebp
  407be1:	mov    DWORD PTR [rsp],0x321
  407be8:	lea    rsi,[rip+0x304cb]        # 4380ba <_IO_stdin_used@@Base+0x40ba>
  407bef:	lea    rdx,[rip+0x3054e]        # 438144 <_IO_stdin_used@@Base+0x4144>
  407bf6:	mov    rdi,r15
  407bf9:	xor    ecx,ecx
  407bfb:	xor    r8d,r8d
  407bfe:	xor    r9d,r9d
  407c01:	call   406240 <test_json@@Base>
  407c06:	mov    ebp,eax
  407c08:	or     ebp,ebx
  407c0a:	or     ebp,r13d
  407c0d:	mov    DWORD PTR [rsp],0x326
  407c14:	lea    rsi,[rip+0x305a8]        # 4381c3 <_IO_stdin_used@@Base+0x41c3>
  407c1b:	lea    rdx,[rip+0x30630]        # 438252 <_IO_stdin_used@@Base+0x4252>
  407c22:	mov    rdi,r15
  407c25:	xor    ecx,ecx
  407c27:	xor    r8d,r8d
  407c2a:	xor    r9d,r9d
  407c2d:	call   406240 <test_json@@Base>
  407c32:	xor    ecx,ecx
  407c34:	or     eax,ebp
  407c36:	setne  cl
  407c39:	neg    ecx
  407c3b:	mov    eax,ecx
  407c3d:	add    rsp,0x18
  407c41:	pop    rbx
  407c42:	pop    r12
  407c44:	pop    r13
  407c46:	pop    r14
  407c48:	pop    r15
  407c4a:	pop    rbp
  407c4b:	ret    
  407c4c:	nop    DWORD PTR [rax+0x0]
  407c50:	push   rbp
  407c51:	push   r15
  407c53:	push   r14
  407c55:	push   r13
  407c57:	push   r12
  407c59:	push   rbx
  407c5a:	sub    rsp,0x58
  407c5e:	mov    rbp,rcx
  407c61:	mov    r15,rdx
  407c64:	mov    rbx,rsi
  407c67:	mov    r14,rdi
  407c6a:	mov    DWORD PTR [rcx],0x0
  407c70:	mov    rdi,QWORD PTR [rdi]
  407c73:	mov    esi,0x24
  407c78:	call   41f6c0 <flatcc_builder_start_table@@Base>
  407c7d:	test   eax,eax
  407c7f:	je     407ca9 <main@@Base+0xbd9>
  407c81:	mov    rdi,r14
  407c84:	mov    rsi,rbx
  407c87:	mov    rdx,r15
  407c8a:	mov    ecx,0x21
  407c8f:	call   424090 <flatcc_json_parser_set_error@@Base>
  407c94:	mov    rbx,rax
  407c97:	mov    rax,rbx
  407c9a:	add    rsp,0x58
  407c9e:	pop    rbx
  407c9f:	pop    r12
  407ca1:	pop    r13
  407ca3:	pop    r14
  407ca5:	pop    r15
  407ca7:	pop    rbp
  407ca8:	ret    
  407ca9:	lea    r8,[rsp+0x40]
  407cae:	mov    ecx,0x1
  407cb3:	mov    rdi,r14
  407cb6:	mov    rsi,rbx
  407cb9:	mov    rdx,r15
  407cbc:	call   4263c0 <flatcc_json_parser_prepare_unions@@Base>
  407cc1:	cmp    rax,r15
  407cc4:	je     407c81 <main@@Base+0xbb1>
  407cc6:	cmp    rbx,r15
  407cc9:	je     407cf6 <main@@Base+0xc26>
  407ccb:	cmp    BYTE PTR [rbx],0x7b
  407cce:	jne    407cf6 <main@@Base+0xc26>
  407cd0:	lea    rax,[rbx+0x1]
  407cd4:	mov    rcx,r15
  407cd7:	sub    rcx,rax
  407cda:	cmp    rcx,0x2
  407cde:	jl     407d56 <main@@Base+0xc86>
  407ce0:	cmp    BYTE PTR [rax],0x20
  407ce3:	jg     407d64 <main@@Base+0xc94>
  407ce5:	jne    407d56 <main@@Base+0xc86>
  407ce7:	cmp    BYTE PTR [rbx+0x2],0x20
  407ceb:	jle    407d56 <main@@Base+0xc86>
  407ced:	add    rbx,0x2
  407cf1:	mov    rax,rbx
  407cf4:	jmp    407d64 <main@@Base+0xc94>
  407cf6:	mov    rdi,r14
  407cf9:	mov    rsi,rbx
  407cfc:	mov    rdx,r15
  407cff:	mov    ecx,0x15
  407d04:	call   424090 <flatcc_json_parser_set_error@@Base>
  407d09:	mov    rbx,rax
  407d0c:	cmp    DWORD PTR [r14+0x20],0x0
  407d11:	jne    407c81 <main@@Base+0xbb1>
  407d17:	mov    rdi,QWORD PTR [r14]
  407d1a:	mov    esi,0x3
  407d1f:	call   41ff90 <flatcc_builder_check_required_field@@Base>
  407d24:	test   eax,eax
  407d26:	je     407da3 <main@@Base+0xcd3>
  407d28:	mov    rcx,QWORD PTR [rsp+0x40]
  407d2d:	mov    rdi,r14
  407d30:	mov    rsi,rbx
  407d33:	mov    rdx,r15
  407d36:	call   426440 <flatcc_json_parser_finalize_unions@@Base>
  407d3b:	mov    rbx,rax
  407d3e:	mov    rdi,QWORD PTR [r14]
  407d41:	call   4200d0 <flatcc_builder_end_table@@Base>
  407d46:	mov    DWORD PTR [rbp+0x0],eax
  407d49:	test   eax,eax
  407d4b:	jne    407c97 <main@@Base+0xbc7>
  407d51:	jmp    407c81 <main@@Base+0xbb1>
  407d56:	mov    rdi,r14
  407d59:	mov    rsi,rax
  407d5c:	mov    rdx,r15
  407d5f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  407d64:	mov    rsi,r15
  407d67:	cmp    rax,r15
  407d6a:	je     407dc1 <main@@Base+0xcf1>
  407d6c:	cmp    BYTE PTR [rax],0x7d
  407d6f:	jne    407dbe <main@@Base+0xcee>
  407d71:	lea    rbx,[rax+0x1]
  407d75:	mov    rcx,r15
  407d78:	sub    rcx,rbx
  407d7b:	cmp    rcx,0x2
  407d7f:	jl     410cbd <main@@Base+0x9bed>
  407d85:	cmp    BYTE PTR [rbx],0x20
  407d88:	jg     407d0c <main@@Base+0xc3c>
  407d8a:	jne    410cbd <main@@Base+0x9bed>
  407d90:	cmp    BYTE PTR [rax+0x2],0x20
  407d94:	jle    410cbd <main@@Base+0x9bed>
  407d9a:	add    rax,0x2
  407d9e:	jmp    407d09 <main@@Base+0xc39>
  407da3:	mov    rdi,r14
  407da6:	mov    rsi,rbx
  407da9:	mov    rdx,r15
  407dac:	mov    ecx,0x1d
  407db1:	call   424090 <flatcc_json_parser_set_error@@Base>
  407db6:	mov    rbx,rax
  407db9:	jmp    407c81 <main@@Base+0xbb1>
  407dbe:	mov    rsi,rax
  407dc1:	movabs rax,0x7465737400000000
  407dcb:	lea    rcx,[r14+0x14]
  407dcf:	mov    QWORD PTR [rsp+0x8],rcx
  407dd4:	add    rax,0x61727261
  407dda:	mov    QWORD PTR [rsp+0x48],rax
  407ddf:	mov    QWORD PTR [rsp+0x30],rbp
  407de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dee:	xchg   ax,ax
  407df0:	mov    r13,r15
  407df3:	cmp    rsi,r15
  407df6:	je     407e35 <main@@Base+0xd65>
  407df8:	mov    al,BYTE PTR [rsi]
  407dfa:	cmp    al,0x2e
  407dfc:	je     407e12 <main@@Base+0xd42>
  407dfe:	cmp    al,0x22
  407e00:	jne    407e27 <main@@Base+0xd57>
  407e02:	inc    rsi
  407e05:	mov    rax,QWORD PTR [rsp+0x8]
  407e0a:	mov    DWORD PTR [rax],0x0
  407e10:	jmp    407e32 <main@@Base+0xd62>
  407e12:	mov    rdi,r14
  407e15:	mov    rdx,r15
  407e18:	mov    ecx,0x5
  407e1d:	call   424090 <flatcc_json_parser_set_error@@Base>
  407e22:	mov    r13,rax
  407e25:	jmp    407e35 <main@@Base+0xd65>
  407e27:	mov    rax,QWORD PTR [rsp+0x8]
  407e2c:	mov    DWORD PTR [rax],0x1
  407e32:	mov    r13,rsi
  407e35:	mov    r12,r15
  407e38:	sub    r12,r13
  407e3b:	cmp    r12,0x8
  407e3f:	jb     407e49 <main@@Base+0xd79>
  407e41:	movbe  rbp,QWORD PTR [r13+0x0]
  407e47:	jmp    407ec5 <main@@Base+0xdf5>
  407e49:	lea    rax,[r12-0x1]
  407e4e:	cmp    rax,0x6
  407e52:	ja     40cfc1 <main@@Base+0x5ef1>
  407e58:	lea    rcx,[rip+0x2c1b5]        # 434014 <_IO_stdin_used@@Base+0x14>
  407e5f:	movsxd rbp,DWORD PTR [rcx+rax*4]
  407e63:	add    rbp,rcx
  407e66:	xor    ecx,ecx
  407e68:	xor    eax,eax
  407e6a:	xor    edx,edx
  407e6c:	xor    esi,esi
  407e6e:	xor    edi,edi
  407e70:	xor    ebx,ebx
  407e72:	jmp    rbp
  407e74:	movsx  rcx,BYTE PTR [r13+0x6]
  407e79:	shl    rcx,0x8
  407e7d:	movsx  rax,BYTE PTR [r13+0x5]
  407e82:	shl    rax,0x10
  407e86:	or     rax,rcx
  407e89:	movsx  rdx,BYTE PTR [r13+0x4]
  407e8e:	shl    rdx,0x18
  407e92:	or     rdx,rax
  407e95:	movsx  rsi,BYTE PTR [r13+0x3]
  407e9a:	shl    rsi,0x20
  407e9e:	or     rsi,rdx
  407ea1:	movsx  rdi,BYTE PTR [r13+0x2]
  407ea6:	shl    rdi,0x28
  407eaa:	or     rdi,rsi
  407ead:	movsx  rbx,BYTE PTR [r13+0x1]
  407eb2:	shl    rbx,0x30
  407eb6:	or     rbx,rdi
  407eb9:	movzx  ebp,BYTE PTR [r13+0x0]
  407ebe:	shl    rbp,0x38
  407ec2:	or     rbp,rbx
  407ec5:	movabs rdx,0x7465737400000000
  407ecf:	cmp    rbp,QWORD PTR [rsp+0x48]
  407ed4:	jae    407f71 <main@@Base+0xea1>
  407eda:	movabs rax,0x6e616d6500000000
  407ee4:	cmp    rbp,rax
  407ee7:	jae    407fab <main@@Base+0xedb>
  407eed:	movabs rax,0x666c657800000000
  407ef7:	cmp    rbp,rax
  407efa:	jae    40808d <main@@Base+0xfbd>
  407f00:	and    rbp,0xffffffffff000000
  407f07:	movabs rax,0x636f6c6f72000000
  407f11:	cmp    rbp,rax
  407f14:	je     408480 <main@@Base+0x13b0>
  407f1a:	movabs rax,0x656e656d79000000
  407f24:	cmp    rbp,rax
  407f27:	jne    40cfc1 <main@@Base+0x5ef1>
  407f2d:	mov    rax,r13
  407f30:	cmp    r12,0x6
  407f34:	jl     409fb9 <main@@Base+0x2ee9>
  407f3a:	mov    rax,QWORD PTR [rsp+0x8]
  407f3f:	cmp    DWORD PTR [rax],0x0
  407f42:	mov    cl,BYTE PTR [r13+0x5]
  407f46:	je     408e11 <main@@Base+0x1d41>
  407f4c:	cmp    cl,0x21
  407f4f:	jl     407f5d <main@@Base+0xe8d>
  407f51:	mov    rax,r13
  407f54:	cmp    cl,0x3a
  407f57:	jne    409fb9 <main@@Base+0x2ee9>
  407f5d:	lea    rsi,[r13+0x5]
  407f61:	mov    rax,QWORD PTR [rsp+0x8]
  407f66:	mov    DWORD PTR [rax],0x0
  407f6c:	jmp    408e21 <main@@Base+0x1d51>
  407f71:	lea    rax,[rdx+0x66330000]
  407f78:	cmp    rbp,rax
  407f7b:	jae    40802b <main@@Base+0xf5b>
  407f81:	cmp    rbp,QWORD PTR [rsp+0x48]
  407f86:	jne    408102 <main@@Base+0x1032>
  407f8c:	lea    r12,[r13+0x8]
  407f90:	mov    rax,r15
  407f93:	sub    rax,r12
  407f96:	cmp    rax,0x8
  407f9a:	jb     4081d8 <main@@Base+0x1108>
  407fa0:	movbe  rcx,QWORD PTR [r12]
  407fa6:	jmp    408257 <main@@Base+0x1187>
  407fab:	cmp    rbp,rdx
  407fae:	jae    408157 <main@@Base+0x1087>
  407fb4:	movabs rax,0x706172656e745f6e
  407fbe:	cmp    rbp,rax
  407fc1:	jae    4082cc <main@@Base+0x11fc>
  407fc7:	movabs rax,0xffffffff00000000
  407fd1:	and    rbp,rax
  407fd4:	movabs rax,0x6e616d6500000000
  407fde:	cmp    rbp,rax
  407fe1:	jne    40cfc1 <main@@Base+0x5ef1>
  407fe7:	mov    rax,r13
  407fea:	cmp    r12,0x5
  407fee:	jl     40a247 <main@@Base+0x3177>
  407ff4:	mov    rax,QWORD PTR [rsp+0x8]
  407ff9:	cmp    DWORD PTR [rax],0x0
  407ffc:	mov    cl,BYTE PTR [r13+0x4]
  408000:	je     4093ad <main@@Base+0x22dd>
  408006:	cmp    cl,0x21
  408009:	jl     408017 <main@@Base+0xf47>
  40800b:	mov    rax,r13
  40800e:	cmp    cl,0x3a
  408011:	jne    40a247 <main@@Base+0x3177>
  408017:	lea    rsi,[r13+0x4]
  40801b:	mov    rax,QWORD PTR [rsp+0x8]
  408020:	mov    DWORD PTR [rax],0x0
  408026:	jmp    4093bd <main@@Base+0x22ed>
  40802b:	lea    rcx,[rdx+0x68617368]
  408032:	cmp    rbp,rcx
  408035:	jae    4081b3 <main@@Base+0x10e3>
  40803b:	and    rbp,0xffffffffffff0000
  408042:	cmp    rbp,rax
  408045:	jne    40cfc1 <main@@Base+0x5ef1>
  40804b:	mov    rbx,r13
  40804e:	cmp    r12,0x7
  408052:	jl     4098d9 <main@@Base+0x2809>
  408058:	mov    rax,QWORD PTR [rsp+0x8]
  40805d:	cmp    DWORD PTR [rax],0x0
  408060:	mov    al,BYTE PTR [r13+0x6]
  408064:	je     408942 <main@@Base+0x1872>
  40806a:	cmp    al,0x21
  40806c:	jl     408079 <main@@Base+0xfa9>
  40806e:	mov    rbx,r13
  408071:	cmp    al,0x3a
  408073:	jne    4098d9 <main@@Base+0x2809>
  408079:	lea    rsi,[r13+0x6]
  40807d:	mov    rax,QWORD PTR [rsp+0x8]
  408082:	mov    DWORD PTR [rax],0x0
  408088:	jmp    408951 <main@@Base+0x1881>
  40808d:	mov    rax,rbp
  408090:	shr    rax,0x34
  408094:	cmp    rax,0x686
  40809a:	ja     4082f0 <main@@Base+0x1220>
  4080a0:	movabs rax,0xffffffff00000000
  4080aa:	and    rbp,rax
  4080ad:	movabs rax,0x666c657800000000
  4080b7:	cmp    rbp,rax
  4080ba:	jne    40cfc1 <main@@Base+0x5ef1>
  4080c0:	mov    rbx,r13
  4080c3:	cmp    r12,0x5
  4080c7:	jl     40a28f <main@@Base+0x31bf>
  4080cd:	mov    rax,QWORD PTR [rsp+0x8]
  4080d2:	cmp    DWORD PTR [rax],0x0
  4080d5:	mov    al,BYTE PTR [r13+0x4]
  4080d9:	je     4093f7 <main@@Base+0x2327>
  4080df:	cmp    al,0x21
  4080e1:	jl     4080ee <main@@Base+0x101e>
  4080e3:	mov    rbx,r13
  4080e6:	cmp    al,0x3a
  4080e8:	jne    40a28f <main@@Base+0x31bf>
  4080ee:	lea    rsi,[r13+0x4]
  4080f2:	mov    rax,QWORD PTR [rsp+0x8]
  4080f7:	mov    DWORD PTR [rax],0x0
  4080fd:	jmp    409406 <main@@Base+0x2336>
  408102:	lea    rcx,[rdx+0x656d7074]
  408109:	cmp    rbp,rcx
  40810c:	jae    408365 <main@@Base+0x1295>
  408112:	movabs rax,0x74657374626f6f6c
  40811c:	cmp    rbp,rax
  40811f:	je     4086fe <main@@Base+0x162e>
  408125:	movabs rax,0x7465737462617365
  40812f:	cmp    rbp,rax
  408132:	jne    40cfc1 <main@@Base+0x5ef1>
  408138:	lea    r12,[r13+0x8]
  40813c:	mov    rax,r15
  40813f:	sub    rax,r12
  408142:	cmp    rax,0x8
  408146:	jb     408a91 <main@@Base+0x19c1>
  40814c:	movbe  rcx,QWORD PTR [r12]
  408152:	jmp    408b10 <main@@Base+0x1a40>
  408157:	mov    rbx,rbp
  40815a:	and    rbx,0xffffffffff000000
  408161:	lea    rax,[rdx+0x34000000]
  408168:	cmp    rbx,rax
  40816b:	jne    40839d <main@@Base+0x12cd>
  408171:	mov    rbx,r13
  408174:	cmp    r12,0x6
  408178:	jl     409995 <main@@Base+0x28c5>
  40817e:	mov    rax,QWORD PTR [rsp+0x8]
  408183:	cmp    DWORD PTR [rax],0x0
  408186:	mov    al,BYTE PTR [r13+0x5]
  40818a:	je     408977 <main@@Base+0x18a7>
  408190:	cmp    al,0x21
  408192:	jl     40819f <main@@Base+0x10cf>
  408194:	mov    rbx,r13
  408197:	cmp    al,0x3a
  408199:	jne    409995 <main@@Base+0x28c5>
  40819f:	lea    rsi,[r13+0x5]
  4081a3:	mov    rax,QWORD PTR [rsp+0x8]
  4081a8:	mov    DWORD PTR [rax],0x0
  4081ae:	jmp    408986 <main@@Base+0x18b6>
  4081b3:	jne    4083fa <main@@Base+0x132a>
  4081b9:	lea    r12,[r13+0x8]
  4081bd:	mov    rax,r15
  4081c0:	sub    rax,r12
  4081c3:	cmp    rax,0x8
  4081c7:	jb     4084c2 <main@@Base+0x13f2>
  4081cd:	movbe  rcx,QWORD PTR [r12]
  4081d3:	jmp    408541 <main@@Base+0x1471>
  4081d8:	lea    rcx,[rax-0x1]
  4081dc:	cmp    rcx,0x6
  4081e0:	ja     41043a <main@@Base+0x936a>
  4081e6:	lea    rdx,[rip+0x2bfaf]        # 43419c <_IO_stdin_used@@Base+0x19c>
  4081ed:	mov    rsi,rdx
  4081f0:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4081f4:	add    rdx,rsi
  4081f7:	xor    r8d,r8d
  4081fa:	xor    ecx,ecx
  4081fc:	xor    esi,esi
  4081fe:	xor    edi,edi
  408200:	xor    ebx,ebx
  408202:	xor    ebp,ebp
  408204:	jmp    rdx
  408206:	movsx  r8,BYTE PTR [r13+0xe]
  40820b:	shl    r8,0x8
  40820f:	movsx  rcx,BYTE PTR [r13+0xd]
  408214:	shl    rcx,0x10
  408218:	or     rcx,r8
  40821b:	movsx  rsi,BYTE PTR [r13+0xc]
  408220:	shl    rsi,0x18
  408224:	or     rsi,rcx
  408227:	movsx  rdi,BYTE PTR [r13+0xb]
  40822c:	shl    rdi,0x20
  408230:	or     rdi,rsi
  408233:	movsx  rbx,BYTE PTR [r13+0xa]
  408238:	shl    rbx,0x28
  40823c:	or     rbx,rdi
  40823f:	movsx  rbp,BYTE PTR [r13+0x9]
  408244:	shl    rbp,0x30
  408248:	or     rbp,rbx
  40824b:	movzx  ecx,BYTE PTR [r12]
  408250:	shl    rcx,0x38
  408254:	or     rcx,rbp
  408257:	movabs rdx,0x796f66737472696d
  408261:	cmp    rcx,rdx
  408264:	ja     40843b <main@@Base+0x136b>
  40826a:	movabs rdx,0x796f66736f727465
  408274:	cmp    rcx,rdx
  408277:	je     408740 <main@@Base+0x1670>
  40827d:	movabs rdx,0x796f66626f6f6c73
  408287:	cmp    rcx,rdx
  40828a:	jne    41043a <main@@Base+0x936a>
  408290:	cmp    rax,0x9
  408294:	jl     41043a <main@@Base+0x936a>
  40829a:	mov    rax,QWORD PTR [rsp+0x8]
  40829f:	cmp    DWORD PTR [rax],0x0
  4082a2:	mov    al,BYTE PTR [r13+0x10]
  4082a6:	je     40966c <main@@Base+0x259c>
  4082ac:	cmp    al,0x21
  4082ae:	jl     4082b8 <main@@Base+0x11e8>
  4082b0:	cmp    al,0x3a
  4082b2:	jne    41043a <main@@Base+0x936a>
  4082b8:	add    r13,0x10
  4082bc:	mov    rax,QWORD PTR [rsp+0x8]
  4082c1:	mov    DWORD PTR [rax],0x0
  4082c7:	jmp    409678 <main@@Base+0x25a8>
  4082cc:	jne    4085a3 <main@@Base+0x14d3>
  4082d2:	lea    rsi,[r13+0x8]
  4082d6:	mov    rax,r15
  4082d9:	sub    rax,rsi
  4082dc:	cmp    rax,0x8
  4082e0:	jb     40877e <main@@Base+0x16ae>
  4082e6:	movbe  rax,QWORD PTR [rsi]
  4082eb:	jmp    4087fa <main@@Base+0x172a>
  4082f0:	movabs rax,0x696e76656e746f72
  4082fa:	cmp    rbp,rax
  4082fd:	jae    4085f6 <main@@Base+0x1526>
  408303:	movabs rax,0xffff000000000000
  40830d:	and    rbp,rax
  408310:	movabs rax,0x6870000000000000
  40831a:	cmp    rbp,rax
  40831d:	jne    40cfc1 <main@@Base+0x5ef1>
  408323:	mov    rbx,r13
  408326:	cmp    r12,0x3
  40832a:	jl     40b55d <main@@Base+0x448d>
  408330:	mov    rax,QWORD PTR [rsp+0x8]
  408335:	cmp    DWORD PTR [rax],0x0
  408338:	mov    al,BYTE PTR [r13+0x2]
  40833c:	je     409bda <main@@Base+0x2b0a>
  408342:	cmp    al,0x21
  408344:	jl     408351 <main@@Base+0x1281>
  408346:	mov    rbx,r13
  408349:	cmp    al,0x3a
  40834b:	jne    40b55d <main@@Base+0x448d>
  408351:	lea    rsi,[r13+0x2]
  408355:	mov    rax,QWORD PTR [rsp+0x8]
  40835a:	mov    DWORD PTR [rax],0x0
  408360:	jmp    409be9 <main@@Base+0x2b19>
  408365:	lea    rax,[rdx+0x66000000]
  40836c:	cmp    rbp,rax
  40836f:	jae    40861b <main@@Base+0x154b>
  408375:	cmp    rbp,rcx
  408378:	jne    40cfc1 <main@@Base+0x5ef1>
  40837e:	lea    r12,[r13+0x8]
  408382:	mov    rax,r15
  408385:	sub    rax,r12
  408388:	cmp    rax,0x8
  40838c:	jb     408e5b <main@@Base+0x1d8b>
  408392:	movbe  rcx,QWORD PTR [r12]
  408398:	jmp    408eda <main@@Base+0x1e0a>
  40839d:	mov    rax,rbp
  4083a0:	movabs rcx,0xffffffff00000000
  4083aa:	and    rax,rcx
  4083ad:	cmp    rax,rdx
  4083b0:	jne    40a565 <main@@Base+0x3495>
  4083b6:	mov    rax,r13
  4083b9:	cmp    r12,0x5
  4083bd:	jl     40a52d <main@@Base+0x345d>
  4083c3:	mov    rax,QWORD PTR [rsp+0x8]
  4083c8:	cmp    DWORD PTR [rax],0x0
  4083cb:	mov    cl,BYTE PTR [r13+0x4]
  4083cf:	je     409440 <main@@Base+0x2370>
  4083d5:	cmp    cl,0x21
  4083d8:	jl     4083e6 <main@@Base+0x1316>
  4083da:	mov    rax,r13
  4083dd:	cmp    cl,0x3a
  4083e0:	jne    40a52d <main@@Base+0x345d>
  4083e6:	lea    rsi,[r13+0x4]
  4083ea:	mov    rax,QWORD PTR [rsp+0x8]
  4083ef:	mov    DWORD PTR [rax],0x0
  4083f5:	jmp    409450 <main@@Base+0x2380>
  4083fa:	movabs rax,0x766563746f725f6f
  408404:	cmp    rbp,rax
  408407:	jae    408677 <main@@Base+0x15a7>
  40840d:	lea    rax,[rdx+0x6e657374]
  408414:	cmp    rbp,rax
  408417:	jne    40cfc1 <main@@Base+0x5ef1>
  40841d:	lea    rsi,[r13+0x8]
  408421:	mov    rax,r15
  408424:	sub    rax,rsi
  408427:	cmp    rax,0x8
  40842b:	jb     408f24 <main@@Base+0x1e54>
  408431:	movbe  rax,QWORD PTR [rsi]
  408436:	jmp    408fa0 <main@@Base+0x1ed0>
  40843b:	movabs rax,0x796f667461626c65
  408445:	cmp    rcx,rax
  408448:	je     40875f <main@@Base+0x168f>
  40844e:	movabs rax,0x796f66737472696e
  408458:	cmp    rcx,rax
  40845b:	jne    41043a <main@@Base+0x936a>
  408461:	lea    r12,[r13+0x10]
  408465:	mov    rax,r15
  408468:	sub    rax,r12
  40846b:	cmp    rax,0x8
  40846f:	jb     408b5d <main@@Base+0x1a8d>
  408475:	movbe  rcx,QWORD PTR [r12]
  40847b:	jmp    408bdc <main@@Base+0x1b0c>
  408480:	mov    rbx,r13
  408483:	cmp    r12,0x6
  408487:	jl     40a001 <main@@Base+0x2f31>
  40848d:	mov    rax,QWORD PTR [rsp+0x8]
  408492:	cmp    DWORD PTR [rax],0x0
  408495:	mov    al,BYTE PTR [r13+0x5]
  408499:	je     408fd6 <main@@Base+0x1f06>
  40849f:	cmp    al,0x21
  4084a1:	jl     4084ae <main@@Base+0x13de>
  4084a3:	mov    rbx,r13
  4084a6:	cmp    al,0x3a
  4084a8:	jne    40a001 <main@@Base+0x2f31>
  4084ae:	lea    rsi,[r13+0x5]
  4084b2:	mov    rax,QWORD PTR [rsp+0x8]
  4084b7:	mov    DWORD PTR [rax],0x0
  4084bd:	jmp    408fe5 <main@@Base+0x1f15>
  4084c2:	lea    rcx,[rax-0x1]
  4084c6:	cmp    rcx,0x6
  4084ca:	ja     41043a <main@@Base+0x936a>
  4084d0:	lea    rdx,[rip+0x2bbc9]        # 4340a0 <_IO_stdin_used@@Base+0xa0>
  4084d7:	mov    rsi,rdx
  4084da:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4084de:	add    rdx,rsi
  4084e1:	xor    r8d,r8d
  4084e4:	xor    ecx,ecx
  4084e6:	xor    esi,esi
  4084e8:	xor    edi,edi
  4084ea:	xor    ebp,ebp
  4084ec:	xor    ebx,ebx
  4084ee:	jmp    rdx
  4084f0:	movsx  r8,BYTE PTR [r13+0xe]
  4084f5:	shl    r8,0x8
  4084f9:	movsx  rcx,BYTE PTR [r13+0xd]
  4084fe:	shl    rcx,0x10
  408502:	or     rcx,r8
  408505:	movsx  rsi,BYTE PTR [r13+0xc]
  40850a:	shl    rsi,0x18
  40850e:	or     rsi,rcx
  408511:	movsx  rdi,BYTE PTR [r13+0xb]
  408516:	shl    rdi,0x20
  40851a:	or     rdi,rsi
  40851d:	movsx  rbp,BYTE PTR [r13+0xa]
  408522:	shl    rbp,0x28
  408526:	or     rbp,rdi
  408529:	movsx  rbx,BYTE PTR [r13+0x9]
  40852e:	shl    rbx,0x30
  408532:	or     rbx,rbp
  408535:	movzx  ecx,BYTE PTR [r12]
  40853a:	shl    rcx,0x38
  40853e:	or     rcx,rbx
  408541:	movabs rdx,0x7336345f666e7631
  40854b:	cmp    rcx,rdx
  40854e:	jae    40869c <main@@Base+0x15cc>
  408554:	movabs rdx,0x7333325f666e7631
  40855e:	cmp    rcx,rdx
  408561:	jne    41043a <main@@Base+0x936a>
  408567:	cmp    rax,0x9
  40856b:	jl     409eb5 <main@@Base+0x2de5>
  408571:	mov    rax,QWORD PTR [rsp+0x8]
  408576:	cmp    DWORD PTR [rax],0x0
  408579:	mov    al,BYTE PTR [r13+0x10]
  40857d:	je     409cb5 <main@@Base+0x2be5>
  408583:	cmp    al,0x21
  408585:	jl     40858f <main@@Base+0x14bf>
  408587:	cmp    al,0x3a
  408589:	jne    409eb5 <main@@Base+0x2de5>
  40858f:	lea    rsi,[r13+0x10]
  408593:	mov    rax,QWORD PTR [rsp+0x8]
  408598:	mov    DWORD PTR [rax],0x0
  40859e:	jmp    409cc1 <main@@Base+0x2bf1>
  4085a3:	shr    rbp,0x28
  4085a7:	cmp    rbp,0x706f73
  4085ae:	jne    40cfc1 <main@@Base+0x5ef1>
  4085b4:	mov    rbx,r13
  4085b7:	cmp    r12,0x4
  4085bb:	jl     40b671 <main@@Base+0x45a1>
  4085c1:	mov    rax,QWORD PTR [rsp+0x8]
  4085c6:	cmp    DWORD PTR [rax],0x0
  4085c9:	mov    al,BYTE PTR [r13+0x3]
  4085cd:	je     409c23 <main@@Base+0x2b53>
  4085d3:	cmp    al,0x21
  4085d5:	jl     4085e2 <main@@Base+0x1512>
  4085d7:	mov    rbx,r13
  4085da:	cmp    al,0x3a
  4085dc:	jne    40b671 <main@@Base+0x45a1>
  4085e2:	lea    rsi,[r13+0x3]
  4085e6:	mov    rax,QWORD PTR [rsp+0x8]
  4085eb:	mov    DWORD PTR [rax],0x0
  4085f1:	jmp    409c32 <main@@Base+0x2b62>
  4085f6:	jne    40882c <main@@Base+0x175c>
  4085fc:	lea    r12,[r13+0x8]
  408600:	mov    rax,r15
  408603:	sub    rax,r12
  408606:	cmp    rax,0x8
  40860a:	jb     40901f <main@@Base+0x1f4f>
  408610:	movbe  rcx,QWORD PTR [r12]
  408616:	jmp    40909e <main@@Base+0x1fce>
  40861b:	mov    rcx,rbp
  40861e:	and    rcx,0xffffffffffff0000
  408625:	add    rdx,0x66320000
  40862c:	cmp    rcx,rdx
  40862f:	jne    40888e <main@@Base+0x17be>
  408635:	mov    rbx,r13
  408638:	cmp    r12,0x7
  40863c:	jl     40c24f <main@@Base+0x517f>
  408642:	mov    rax,QWORD PTR [rsp+0x8]
  408647:	cmp    DWORD PTR [rax],0x0
  40864a:	mov    al,BYTE PTR [r13+0x6]
  40864e:	je     409c6c <main@@Base+0x2b9c>
  408654:	cmp    al,0x21
  408656:	jl     408663 <main@@Base+0x1593>
  408658:	mov    rbx,r13
  40865b:	cmp    al,0x3a
  40865d:	jne    40c24f <main@@Base+0x517f>
  408663:	lea    rsi,[r13+0x6]
  408667:	mov    rax,QWORD PTR [rsp+0x8]
  40866c:	mov    DWORD PTR [rax],0x0
  408672:	jmp    409c7b <main@@Base+0x2bab>
  408677:	jne    40cfc1 <main@@Base+0x5ef1>
  40867d:	lea    r12,[r13+0x8]
  408681:	mov    rax,r15
  408684:	sub    rax,r12
  408687:	cmp    rax,0x8
  40868b:	jb     4090e8 <main@@Base+0x2018>
  408691:	movbe  rcx,QWORD PTR [r12]
  408697:	jmp    409167 <main@@Base+0x2097>
  40869c:	movabs rdx,0x7533325f666e7630
  4086a6:	cmp    rcx,rdx
  4086a9:	ja     4088e0 <main@@Base+0x1810>
  4086af:	movabs rdx,0x7336345f666e7631
  4086b9:	cmp    rcx,rdx
  4086bc:	jne    41043a <main@@Base+0x936a>
  4086c2:	cmp    rax,0x9
  4086c6:	jl     40ab7d <main@@Base+0x3aad>
  4086cc:	mov    rax,QWORD PTR [rsp+0x8]
  4086d1:	cmp    DWORD PTR [rax],0x0
  4086d4:	mov    al,BYTE PTR [r13+0x10]
  4086d8:	je     40a919 <main@@Base+0x3849>
  4086de:	cmp    al,0x21
  4086e0:	jl     4086ea <main@@Base+0x161a>
  4086e2:	cmp    al,0x3a
  4086e4:	jne    40ab7d <main@@Base+0x3aad>
  4086ea:	lea    rsi,[r13+0x10]
  4086ee:	mov    rax,QWORD PTR [rsp+0x8]
  4086f3:	mov    DWORD PTR [rax],0x0
  4086f9:	jmp    40a925 <main@@Base+0x3855>
  4086fe:	mov    rbx,r13
  408701:	cmp    r12,0x9
  408705:	jl     40b1b7 <main@@Base+0x40e7>
  40870b:	mov    rax,QWORD PTR [rsp+0x8]
  408710:	cmp    DWORD PTR [rax],0x0
  408713:	mov    al,BYTE PTR [r13+0x8]
  408717:	je     409623 <main@@Base+0x2553>
  40871d:	cmp    al,0x21
  40871f:	jl     40872c <main@@Base+0x165c>
  408721:	mov    rbx,r13
  408724:	cmp    al,0x3a
  408726:	jne    40b1b7 <main@@Base+0x40e7>
  40872c:	lea    rsi,[r13+0x8]
  408730:	mov    rax,QWORD PTR [rsp+0x8]
  408735:	mov    DWORD PTR [rax],0x0
  40873b:	jmp    409632 <main@@Base+0x2562>
  408740:	lea    r12,[r13+0x10]
  408744:	mov    rax,r15
  408747:	sub    rax,r12
  40874a:	cmp    rax,0x8
  40874e:	jb     408c2c <main@@Base+0x1b5c>
  408754:	movbe  rcx,QWORD PTR [r12]
  40875a:	jmp    408cab <main@@Base+0x1bdb>
  40875f:	lea    r12,[r13+0x10]
  408763:	mov    rax,r15
  408766:	sub    rax,r12
  408769:	cmp    rax,0x8
  40876d:	jb     408cfe <main@@Base+0x1c2e>
  408773:	movbe  rcx,QWORD PTR [r12]
  408779:	jmp    408d7d <main@@Base+0x1cad>
  40877e:	dec    rax
  408781:	cmp    rax,0x6
  408785:	ja     408fce <main@@Base+0x1efe>
  40878b:	lea    rcx,[rip+0x2bace]        # 434260 <_IO_stdin_used@@Base+0x260>
  408792:	mov    rdx,rcx
  408795:	movsxd rcx,DWORD PTR [rcx+rax*4]
  408799:	add    rcx,rdx
  40879c:	xor    r8d,r8d
  40879f:	xor    eax,eax
  4087a1:	xor    edx,edx
  4087a3:	xor    edi,edi
  4087a5:	xor    ebp,ebp
  4087a7:	xor    ebx,ebx
  4087a9:	jmp    rcx
  4087ab:	movsx  r8,BYTE PTR [r13+0xe]
  4087b0:	shl    r8,0x8
  4087b4:	movsx  rax,BYTE PTR [r13+0xd]
  4087b9:	shl    rax,0x10
  4087bd:	or     rax,r8
  4087c0:	movsx  rdx,BYTE PTR [r13+0xc]
  4087c5:	shl    rdx,0x18
  4087c9:	or     rdx,rax
  4087cc:	movsx  rdi,BYTE PTR [r13+0xb]
  4087d1:	shl    rdi,0x20
  4087d5:	or     rdi,rdx
  4087d8:	movsx  rbp,BYTE PTR [r13+0xa]
  4087dd:	shl    rbp,0x28
  4087e1:	or     rbp,rdi
  4087e4:	movsx  rbx,BYTE PTR [r13+0x9]
  4087e9:	shl    rbx,0x30
  4087ed:	or     rbx,rbp
  4087f0:	movzx  eax,BYTE PTR [rsi]
  4087f3:	shl    rax,0x38
  4087f7:	or     rax,rbx
  4087fa:	movabs rcx,0x616d657370616365
  408804:	cmp    rax,rcx
  408807:	jne    408fce <main@@Base+0x1efe>
  40880d:	lea    r12,[r13+0x10]
  408811:	mov    rax,r15
  408814:	sub    rax,r12
  408817:	cmp    rax,0x8
  40881b:	jb     409199 <main@@Base+0x20c9>
  408821:	movbe  rcx,QWORD PTR [r12]
  408827:	jmp    409218 <main@@Base+0x2148>
  40882c:	movabs rax,0xffffffff00000000
  408836:	and    rbp,rax
  408839:	movabs rax,0x6d616e6100000000
  408843:	cmp    rbp,rax
  408846:	jne    40cfc1 <main@@Base+0x5ef1>
  40884c:	mov    rbx,r13
  40884f:	cmp    r12,0x5
  408853:	jl     40ce08 <main@@Base+0x5d38>
  408859:	mov    rax,QWORD PTR [rsp+0x8]
  40885e:	cmp    DWORD PTR [rax],0x0
  408861:	mov    al,BYTE PTR [r13+0x4]
  408865:	je     40a887 <main@@Base+0x37b7>
  40886b:	cmp    al,0x21
  40886d:	jl     40887a <main@@Base+0x17aa>
  40886f:	mov    rbx,r13
  408872:	cmp    al,0x3a
  408874:	jne    40ce08 <main@@Base+0x5d38>
  40887a:	lea    rsi,[r13+0x4]
  40887e:	mov    rax,QWORD PTR [rsp+0x8]
  408883:	mov    DWORD PTR [rax],0x0
  408889:	jmp    40a896 <main@@Base+0x37c6>
  40888e:	and    rbp,0xffffffffff000000
  408895:	cmp    rbp,rax
  408898:	jne    40cfc1 <main@@Base+0x5ef1>
  40889e:	mov    rbx,r13
  4088a1:	cmp    r12,0x6
  4088a5:	jl     40cf37 <main@@Base+0x5e67>
  4088ab:	mov    rax,QWORD PTR [rsp+0x8]
  4088b0:	cmp    DWORD PTR [rax],0x0
  4088b3:	mov    al,BYTE PTR [r13+0x5]
  4088b7:	je     40a8d0 <main@@Base+0x3800>
  4088bd:	cmp    al,0x21
  4088bf:	jl     4088cc <main@@Base+0x17fc>
  4088c1:	mov    rbx,r13
  4088c4:	cmp    al,0x3a
  4088c6:	jne    40cf37 <main@@Base+0x5e67>
  4088cc:	lea    rsi,[r13+0x5]
  4088d0:	mov    rax,QWORD PTR [rsp+0x8]
  4088d5:	mov    DWORD PTR [rax],0x0
  4088db:	jmp    40a8df <main@@Base+0x380f>
  4088e0:	movabs rdx,0x7536345f666e7631
  4088ea:	cmp    rcx,rdx
  4088ed:	je     4095e7 <main@@Base+0x2517>
  4088f3:	movabs rdx,0x7533325f666e7631
  4088fd:	cmp    rcx,rdx
  408900:	jne    41043a <main@@Base+0x936a>
  408906:	cmp    rax,0x9
  40890a:	jl     40c336 <main@@Base+0x5266>
  408910:	mov    rax,QWORD PTR [rsp+0x8]
  408915:	cmp    DWORD PTR [rax],0x0
  408918:	mov    al,BYTE PTR [r13+0x10]
  40891c:	je     40b477 <main@@Base+0x43a7>
  408922:	cmp    al,0x21
  408924:	jl     40892e <main@@Base+0x185e>
  408926:	cmp    al,0x3a
  408928:	jne    40c336 <main@@Base+0x5266>
  40892e:	lea    rsi,[r13+0x10]
  408932:	mov    rax,QWORD PTR [rsp+0x8]
  408937:	mov    DWORD PTR [rax],0x0
  40893d:	jmp    40b483 <main@@Base+0x43b3>
  408942:	mov    rbx,r13
  408945:	cmp    al,0x22
  408947:	jne    4098d9 <main@@Base+0x2809>
  40894d:	lea    rsi,[r13+0x7]
  408951:	mov    rax,r15
  408954:	sub    rax,rsi
  408957:	cmp    rax,0x2
  40895b:	jl     4089b4 <main@@Base+0x18e4>
  40895d:	cmp    BYTE PTR [rsi],0x20
  408960:	jg     4089c2 <main@@Base+0x18f2>
  408962:	jne    4089b4 <main@@Base+0x18e4>
  408964:	cmp    BYTE PTR [rsi+0x1],0x20
  408968:	jle    4089b4 <main@@Base+0x18e4>
  40896a:	inc    rsi
  40896d:	cmp    rsi,r15
  408970:	jne    4089cb <main@@Base+0x18fb>
  408972:	jmp    408a67 <main@@Base+0x1997>
  408977:	mov    rbx,r13
  40897a:	cmp    al,0x22
  40897c:	jne    409995 <main@@Base+0x28c5>
  408982:	lea    rsi,[r13+0x6]
  408986:	mov    rax,r15
  408989:	sub    rax,rsi
  40898c:	cmp    rax,0x2
  408990:	jl     408a16 <main@@Base+0x1946>
  408996:	cmp    BYTE PTR [rsi],0x20
  408999:	jg     408a24 <main@@Base+0x1954>
  40899f:	jne    408a16 <main@@Base+0x1946>
  4089a1:	cmp    BYTE PTR [rsi+0x1],0x20
  4089a5:	jle    408a16 <main@@Base+0x1946>
  4089a7:	inc    rsi
  4089aa:	cmp    rsi,r15
  4089ad:	jne    408a29 <main@@Base+0x1959>
  4089af:	jmp    408a7c <main@@Base+0x19ac>
  4089b4:	mov    rdi,r14
  4089b7:	mov    rdx,r15
  4089ba:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4089bf:	mov    rsi,rax
  4089c2:	cmp    rsi,r15
  4089c5:	je     408a67 <main@@Base+0x1997>
  4089cb:	cmp    BYTE PTR [rsi],0x3a
  4089ce:	jne    408a67 <main@@Base+0x1997>
  4089d4:	lea    rbx,[rsi+0x1]
  4089d8:	mov    rax,r15
  4089db:	sub    rax,rbx
  4089de:	cmp    rax,0x2
  4089e2:	jl     4098c8 <main@@Base+0x27f8>
  4089e8:	cmp    BYTE PTR [rbx],0x20
  4089eb:	jg     4098d9 <main@@Base+0x2809>
  4089f1:	jne    4098c8 <main@@Base+0x27f8>
  4089f7:	cmp    BYTE PTR [rsi+0x2],0x20
  4089fb:	jle    4098c8 <main@@Base+0x27f8>
  408a01:	add    rsi,0x2
  408a05:	mov    rbx,rsi
  408a08:	cmp    r13,rbx
  408a0b:	jne    4098e2 <main@@Base+0x2812>
  408a11:	jmp    40cfc1 <main@@Base+0x5ef1>
  408a16:	mov    rdi,r14
  408a19:	mov    rdx,r15
  408a1c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  408a21:	mov    rsi,rax
  408a24:	cmp    rsi,r15
  408a27:	je     408a7c <main@@Base+0x19ac>
  408a29:	cmp    BYTE PTR [rsi],0x3a
  408a2c:	jne    408a7c <main@@Base+0x19ac>
  408a2e:	lea    rbx,[rsi+0x1]
  408a32:	mov    rax,r15
  408a35:	sub    rax,rbx
  408a38:	cmp    rax,0x2
  408a3c:	jl     40997a <main@@Base+0x28aa>
  408a42:	cmp    BYTE PTR [rbx],0x20
  408a45:	jg     40998b <main@@Base+0x28bb>
  408a4b:	jne    40997a <main@@Base+0x28aa>
  408a51:	cmp    BYTE PTR [rsi+0x2],0x20
  408a55:	jle    40997a <main@@Base+0x28aa>
  408a5b:	add    rsi,0x2
  408a5f:	mov    rbx,rsi
  408a62:	jmp    40998b <main@@Base+0x28bb>
  408a67:	mov    rdi,r14
  408a6a:	mov    rdx,r15
  408a6d:	mov    ecx,0x4
  408a72:	call   424090 <flatcc_json_parser_set_error@@Base>
  408a77:	jmp    4098d6 <main@@Base+0x2806>
  408a7c:	mov    rdi,r14
  408a7f:	mov    rdx,r15
  408a82:	mov    ecx,0x4
  408a87:	call   424090 <flatcc_json_parser_set_error@@Base>
  408a8c:	jmp    409988 <main@@Base+0x28b8>
  408a91:	lea    rcx,[rax-0x1]
  408a95:	cmp    rcx,0x6
  408a99:	ja     41043a <main@@Base+0x936a>
  408a9f:	lea    rdx,[rip+0x2b6be]        # 434164 <_IO_stdin_used@@Base+0x164>
  408aa6:	mov    rsi,rdx
  408aa9:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408aad:	add    rdx,rsi
  408ab0:	xor    r8d,r8d
  408ab3:	xor    ecx,ecx
  408ab5:	xor    esi,esi
  408ab7:	xor    edi,edi
  408ab9:	xor    ebx,ebx
  408abb:	xor    ebp,ebp
  408abd:	jmp    rdx
  408abf:	movsx  r8,BYTE PTR [r13+0xe]
  408ac4:	shl    r8,0x8
  408ac8:	movsx  rcx,BYTE PTR [r13+0xd]
  408acd:	shl    rcx,0x10
  408ad1:	or     rcx,r8
  408ad4:	movsx  rsi,BYTE PTR [r13+0xc]
  408ad9:	shl    rsi,0x18
  408add:	or     rsi,rcx
  408ae0:	movsx  rdi,BYTE PTR [r13+0xb]
  408ae5:	shl    rdi,0x20
  408ae9:	or     rdi,rsi
  408aec:	movsx  rbx,BYTE PTR [r13+0xa]
  408af1:	shl    rbx,0x28
  408af5:	or     rbx,rdi
  408af8:	movsx  rbp,BYTE PTR [r13+0x9]
  408afd:	shl    rbp,0x30
  408b01:	or     rbp,rbx
  408b04:	movzx  ecx,BYTE PTR [r12]
  408b09:	shl    rcx,0x38
  408b0d:	or     rcx,rbp
  408b10:	shr    rcx,0x30
  408b14:	cmp    rcx,0x3634
  408b1b:	jne    41043a <main@@Base+0x936a>
  408b21:	cmp    rax,0x3
  408b25:	jl     41043a <main@@Base+0x936a>
  408b2b:	mov    rax,QWORD PTR [rsp+0x8]
  408b30:	cmp    DWORD PTR [rax],0x0
  408b33:	mov    al,BYTE PTR [r13+0xa]
  408b37:	je     40a115 <main@@Base+0x3045>
  408b3d:	cmp    al,0x21
  408b3f:	jl     408b49 <main@@Base+0x1a79>
  408b41:	cmp    al,0x3a
  408b43:	jne    41043a <main@@Base+0x936a>
  408b49:	add    r13,0xa
  408b4d:	mov    rax,QWORD PTR [rsp+0x8]
  408b52:	mov    DWORD PTR [rax],0x0
  408b58:	jmp    40a121 <main@@Base+0x3051>
  408b5d:	lea    rcx,[rax-0x1]
  408b61:	cmp    rcx,0x6
  408b65:	ja     41043a <main@@Base+0x936a>
  408b6b:	lea    rdx,[rip+0x2b662]        # 4341d4 <_IO_stdin_used@@Base+0x1d4>
  408b72:	mov    rsi,rdx
  408b75:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408b79:	add    rdx,rsi
  408b7c:	xor    r8d,r8d
  408b7f:	xor    ecx,ecx
  408b81:	xor    esi,esi
  408b83:	xor    edi,edi
  408b85:	xor    ebx,ebx
  408b87:	xor    ebp,ebp
  408b89:	jmp    rdx
  408b8b:	movsx  r8,BYTE PTR [r13+0x16]
  408b90:	shl    r8,0x8
  408b94:	movsx  rcx,BYTE PTR [r13+0x15]
  408b99:	shl    rcx,0x10
  408b9d:	or     rcx,r8
  408ba0:	movsx  rsi,BYTE PTR [r13+0x14]
  408ba5:	shl    rsi,0x18
  408ba9:	or     rsi,rcx
  408bac:	movsx  rdi,BYTE PTR [r13+0x13]
  408bb1:	shl    rdi,0x20
  408bb5:	or     rdi,rsi
  408bb8:	movsx  rbx,BYTE PTR [r13+0x12]
  408bbd:	shl    rbx,0x28
  408bc1:	or     rbx,rdi
  408bc4:	movsx  rbp,BYTE PTR [r13+0x11]
  408bc9:	shl    rbp,0x30
  408bcd:	or     rbp,rbx
  408bd0:	movzx  ecx,BYTE PTR [r12]
  408bd5:	shl    rcx,0x38
  408bd9:	or     rcx,rbp
  408bdc:	mov    rdx,rcx
  408bdf:	shr    rdx,0x30
  408be3:	cmp    rdx,0x6732
  408bea:	jne    408dc7 <main@@Base+0x1cf7>
  408bf0:	cmp    rax,0x3
  408bf4:	jl     41043a <main@@Base+0x936a>
  408bfa:	mov    rax,QWORD PTR [rsp+0x8]
  408bff:	cmp    DWORD PTR [rax],0x0
  408c02:	mov    al,BYTE PTR [r13+0x12]
  408c06:	je     40a15e <main@@Base+0x308e>
  408c0c:	cmp    al,0x21
  408c0e:	jl     408c18 <main@@Base+0x1b48>
  408c10:	cmp    al,0x3a
  408c12:	jne    41043a <main@@Base+0x936a>
  408c18:	add    r13,0x12
  408c1c:	mov    rax,QWORD PTR [rsp+0x8]
  408c21:	mov    DWORD PTR [rax],0x0
  408c27:	jmp    40a16a <main@@Base+0x309a>
  408c2c:	lea    rcx,[rax-0x1]
  408c30:	cmp    rcx,0x6
  408c34:	ja     41043a <main@@Base+0x936a>
  408c3a:	lea    rdx,[rip+0x2b5af]        # 4341f0 <_IO_stdin_used@@Base+0x1f0>
  408c41:	mov    rsi,rdx
  408c44:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408c48:	add    rdx,rsi
  408c4b:	xor    r8d,r8d
  408c4e:	xor    ecx,ecx
  408c50:	xor    esi,esi
  408c52:	xor    edi,edi
  408c54:	xor    ebx,ebx
  408c56:	xor    ebp,ebp
  408c58:	jmp    rdx
  408c5a:	movsx  r8,BYTE PTR [r13+0x16]
  408c5f:	shl    r8,0x8
  408c63:	movsx  rcx,BYTE PTR [r13+0x15]
  408c68:	shl    rcx,0x10
  408c6c:	or     rcx,r8
  408c6f:	movsx  rsi,BYTE PTR [r13+0x14]
  408c74:	shl    rsi,0x18
  408c78:	or     rsi,rcx
  408c7b:	movsx  rdi,BYTE PTR [r13+0x13]
  408c80:	shl    rdi,0x20
  408c84:	or     rdi,rsi
  408c87:	movsx  rbx,BYTE PTR [r13+0x12]
  408c8c:	shl    rbx,0x28
  408c90:	or     rbx,rdi
  408c93:	movsx  rbp,BYTE PTR [r13+0x11]
  408c98:	shl    rbp,0x30
  408c9c:	or     rbp,rbx
  408c9f:	movzx  ecx,BYTE PTR [r12]
  408ca4:	shl    rcx,0x38
  408ca8:	or     rcx,rbp
  408cab:	shr    rcx,0x8
  408caf:	movabs rdx,0x64737472756374
  408cb9:	cmp    rcx,rdx
  408cbc:	jne    41043a <main@@Base+0x936a>
  408cc2:	cmp    rax,0x8
  408cc6:	jl     41043a <main@@Base+0x936a>
  408ccc:	mov    rax,QWORD PTR [rsp+0x8]
  408cd1:	cmp    DWORD PTR [rax],0x0
  408cd4:	mov    al,BYTE PTR [r13+0x17]
  408cd8:	je     40a1a7 <main@@Base+0x30d7>
  408cde:	cmp    al,0x21
  408ce0:	jl     408cea <main@@Base+0x1c1a>
  408ce2:	cmp    al,0x3a
  408ce4:	jne    41043a <main@@Base+0x936a>
  408cea:	add    r13,0x17
  408cee:	mov    rax,QWORD PTR [rsp+0x8]
  408cf3:	mov    DWORD PTR [rax],0x0
  408cf9:	jmp    40a1b3 <main@@Base+0x30e3>
  408cfe:	lea    rcx,[rax-0x1]
  408d02:	cmp    rcx,0x6
  408d06:	ja     41043a <main@@Base+0x936a>
  408d0c:	lea    rdx,[rip+0x2b4a5]        # 4341b8 <_IO_stdin_used@@Base+0x1b8>
  408d13:	mov    rsi,rdx
  408d16:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408d1a:	add    rdx,rsi
  408d1d:	xor    r8d,r8d
  408d20:	xor    ecx,ecx
  408d22:	xor    esi,esi
  408d24:	xor    edi,edi
  408d26:	xor    ebx,ebx
  408d28:	xor    ebp,ebp
  408d2a:	jmp    rdx
  408d2c:	movsx  r8,BYTE PTR [r13+0x16]
  408d31:	shl    r8,0x8
  408d35:	movsx  rcx,BYTE PTR [r13+0x15]
  408d3a:	shl    rcx,0x10
  408d3e:	or     rcx,r8
  408d41:	movsx  rsi,BYTE PTR [r13+0x14]
  408d46:	shl    rsi,0x18
  408d4a:	or     rsi,rcx
  408d4d:	movsx  rdi,BYTE PTR [r13+0x13]
  408d52:	shl    rdi,0x20
  408d56:	or     rdi,rsi
  408d59:	movsx  rbx,BYTE PTR [r13+0x12]
  408d5e:	shl    rbx,0x28
  408d62:	or     rbx,rdi
  408d65:	movsx  rbp,BYTE PTR [r13+0x11]
  408d6a:	shl    rbp,0x30
  408d6e:	or     rbp,rbx
  408d71:	movzx  ecx,BYTE PTR [r12]
  408d76:	shl    rcx,0x38
  408d7a:	or     rcx,rbp
  408d7d:	shr    rcx,0x38
  408d81:	cmp    rcx,0x73
  408d85:	jne    41043a <main@@Base+0x936a>
  408d8b:	cmp    rax,0x2
  408d8f:	jl     41043a <main@@Base+0x936a>
  408d95:	mov    rax,QWORD PTR [rsp+0x8]
  408d9a:	cmp    DWORD PTR [rax],0x0
  408d9d:	mov    al,BYTE PTR [r13+0x11]
  408da1:	je     40a1f0 <main@@Base+0x3120>
  408da7:	cmp    al,0x21
  408da9:	jl     408db3 <main@@Base+0x1ce3>
  408dab:	cmp    al,0x3a
  408dad:	jne    41043a <main@@Base+0x936a>
  408db3:	add    r13,0x11
  408db7:	mov    rax,QWORD PTR [rsp+0x8]
  408dbc:	mov    DWORD PTR [rax],0x0
  408dc2:	jmp    40a1fc <main@@Base+0x312c>
  408dc7:	shr    rcx,0x38
  408dcb:	cmp    rcx,0x67
  408dcf:	jne    41043a <main@@Base+0x936a>
  408dd5:	cmp    rax,0x2
  408dd9:	jl     41043a <main@@Base+0x936a>
  408ddf:	mov    rax,QWORD PTR [rsp+0x8]
  408de4:	cmp    DWORD PTR [rax],0x0
  408de7:	mov    al,BYTE PTR [r13+0x11]
  408deb:	je     40b503 <main@@Base+0x4433>
  408df1:	cmp    al,0x21
  408df3:	jl     408dfd <main@@Base+0x1d2d>
  408df5:	cmp    al,0x3a
  408df7:	jne    41043a <main@@Base+0x936a>
  408dfd:	add    r13,0x11
  408e01:	mov    rax,QWORD PTR [rsp+0x8]
  408e06:	mov    DWORD PTR [rax],0x0
  408e0c:	jmp    40b50f <main@@Base+0x443f>
  408e11:	mov    rax,r13
  408e14:	cmp    cl,0x22
  408e17:	jne    409fb9 <main@@Base+0x2ee9>
  408e1d:	lea    rsi,[r13+0x6]
  408e21:	mov    rax,r15
  408e24:	sub    rax,rsi
  408e27:	cmp    rax,0x2
  408e2b:	jl     4092be <main@@Base+0x21ee>
  408e31:	cmp    BYTE PTR [rsi],0x20
  408e34:	jg     4092cc <main@@Base+0x21fc>
  408e3a:	jne    4092be <main@@Base+0x21ee>
  408e40:	cmp    BYTE PTR [rsi+0x1],0x20
  408e44:	jle    4092be <main@@Base+0x21ee>
  408e4a:	inc    rsi
  408e4d:	cmp    rsi,r15
  408e50:	jne    4092d5 <main@@Base+0x2205>
  408e56:	jmp    40937a <main@@Base+0x22aa>
  408e5b:	lea    rcx,[rax-0x1]
  408e5f:	cmp    rcx,0x6
  408e63:	ja     41043a <main@@Base+0x936a>
  408e69:	lea    rdx,[rip+0x2b2bc]        # 43412c <_IO_stdin_used@@Base+0x12c>
  408e70:	mov    rsi,rdx
  408e73:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408e77:	add    rdx,rsi
  408e7a:	xor    r8d,r8d
  408e7d:	xor    ecx,ecx
  408e7f:	xor    esi,esi
  408e81:	xor    edi,edi
  408e83:	xor    ebx,ebx
  408e85:	xor    ebp,ebp
  408e87:	jmp    rdx
  408e89:	movsx  r8,BYTE PTR [r13+0xe]
  408e8e:	shl    r8,0x8
  408e92:	movsx  rcx,BYTE PTR [r13+0xd]
  408e97:	shl    rcx,0x10
  408e9b:	or     rcx,r8
  408e9e:	movsx  rsi,BYTE PTR [r13+0xc]
  408ea3:	shl    rsi,0x18
  408ea7:	or     rsi,rcx
  408eaa:	movsx  rdi,BYTE PTR [r13+0xb]
  408eaf:	shl    rdi,0x20
  408eb3:	or     rdi,rsi
  408eb6:	movsx  rbx,BYTE PTR [r13+0xa]
  408ebb:	shl    rbx,0x28
  408ebf:	or     rbx,rdi
  408ec2:	movsx  rbp,BYTE PTR [r13+0x9]
  408ec7:	shl    rbp,0x30
  408ecb:	or     rbp,rbx
  408ece:	movzx  ecx,BYTE PTR [r12]
  408ed3:	shl    rcx,0x38
  408ed7:	or     rcx,rbp
  408eda:	shr    rcx,0x38
  408ede:	cmp    rcx,0x79
  408ee2:	jne    41043a <main@@Base+0x936a>
  408ee8:	cmp    rax,0x2
  408eec:	jl     41043a <main@@Base+0x936a>
  408ef2:	mov    rax,QWORD PTR [rsp+0x8]
  408ef7:	cmp    DWORD PTR [rax],0x0
  408efa:	mov    al,BYTE PTR [r13+0x9]
  408efe:	je     40a95f <main@@Base+0x388f>
  408f04:	cmp    al,0x21
  408f06:	jl     408f10 <main@@Base+0x1e40>
  408f08:	cmp    al,0x3a
  408f0a:	jne    41043a <main@@Base+0x936a>
  408f10:	add    r13,0x9
  408f14:	mov    rax,QWORD PTR [rsp+0x8]
  408f19:	mov    DWORD PTR [rax],0x0
  408f1f:	jmp    40a96b <main@@Base+0x389b>
  408f24:	dec    rax
  408f27:	cmp    rax,0x6
  408f2b:	ja     408fce <main@@Base+0x1efe>
  408f31:	lea    rcx,[rip+0x2b130]        # 434068 <_IO_stdin_used@@Base+0x68>
  408f38:	mov    rdx,rcx
  408f3b:	movsxd rcx,DWORD PTR [rcx+rax*4]
  408f3f:	add    rcx,rdx
  408f42:	xor    r8d,r8d
  408f45:	xor    eax,eax
  408f47:	xor    edx,edx
  408f49:	xor    edi,edi
  408f4b:	xor    ebp,ebp
  408f4d:	xor    ebx,ebx
  408f4f:	jmp    rcx
  408f51:	movsx  r8,BYTE PTR [r13+0xe]
  408f56:	shl    r8,0x8
  408f5a:	movsx  rax,BYTE PTR [r13+0xd]
  408f5f:	shl    rax,0x10
  408f63:	or     rax,r8
  408f66:	movsx  rdx,BYTE PTR [r13+0xc]
  408f6b:	shl    rdx,0x18
  408f6f:	or     rdx,rax
  408f72:	movsx  rdi,BYTE PTR [r13+0xb]
  408f77:	shl    rdi,0x20
  408f7b:	or     rdi,rdx
  408f7e:	movsx  rbp,BYTE PTR [r13+0xa]
  408f83:	shl    rbp,0x28
  408f87:	or     rbp,rdi
  408f8a:	movsx  rbx,BYTE PTR [r13+0x9]
  408f8f:	shl    rbx,0x30
  408f93:	or     rbx,rbp
  408f96:	movzx  eax,BYTE PTR [rsi]
  408f99:	shl    rax,0x38
  408f9d:	or     rax,rbx
  408fa0:	movabs rcx,0x6564666c61746275
  408faa:	cmp    rax,rcx
  408fad:	jne    408fce <main@@Base+0x1efe>
  408faf:	lea    r12,[r13+0x10]
  408fb3:	mov    rax,r15
  408fb6:	sub    rax,r12
  408fb9:	cmp    rax,0x8
  408fbd:	jb     4096b5 <main@@Base+0x25e5>
  408fc3:	movbe  rcx,QWORD PTR [r12]
  408fc9:	jmp    409734 <main@@Base+0x2664>
  408fce:	mov    rdi,r14
  408fd1:	jmp    410440 <main@@Base+0x9370>
  408fd6:	mov    rbx,r13
  408fd9:	cmp    al,0x22
  408fdb:	jne    40a001 <main@@Base+0x2f31>
  408fe1:	lea    rsi,[r13+0x6]
  408fe5:	mov    rax,r15
  408fe8:	sub    rax,rsi
  408feb:	cmp    rax,0x2
  408fef:	jl     409320 <main@@Base+0x2250>
  408ff5:	cmp    BYTE PTR [rsi],0x20
  408ff8:	jg     40932e <main@@Base+0x225e>
  408ffe:	jne    409320 <main@@Base+0x2250>
  409004:	cmp    BYTE PTR [rsi+0x1],0x20
  409008:	jle    409320 <main@@Base+0x2250>
  40900e:	inc    rsi
  409011:	cmp    rsi,r15
  409014:	jne    409333 <main@@Base+0x2263>
  40901a:	jmp    409398 <main@@Base+0x22c8>
  40901f:	lea    rcx,[rax-0x1]
  409023:	cmp    rcx,0x6
  409027:	ja     41043a <main@@Base+0x936a>
  40902d:	lea    rdx,[rip+0x2b264]        # 434298 <_IO_stdin_used@@Base+0x298>
  409034:	mov    rsi,rdx
  409037:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40903b:	add    rdx,rsi
  40903e:	xor    r8d,r8d
  409041:	xor    ecx,ecx
  409043:	xor    esi,esi
  409045:	xor    edi,edi
  409047:	xor    ebx,ebx
  409049:	xor    ebp,ebp
  40904b:	jmp    rdx
  40904d:	movsx  r8,BYTE PTR [r13+0xe]
  409052:	shl    r8,0x8
  409056:	movsx  rcx,BYTE PTR [r13+0xd]
  40905b:	shl    rcx,0x10
  40905f:	or     rcx,r8
  409062:	movsx  rsi,BYTE PTR [r13+0xc]
  409067:	shl    rsi,0x18
  40906b:	or     rsi,rcx
  40906e:	movsx  rdi,BYTE PTR [r13+0xb]
  409073:	shl    rdi,0x20
  409077:	or     rdi,rsi
  40907a:	movsx  rbx,BYTE PTR [r13+0xa]
  40907f:	shl    rbx,0x28
  409083:	or     rbx,rdi
  409086:	movsx  rbp,BYTE PTR [r13+0x9]
  40908b:	shl    rbp,0x30
  40908f:	or     rbp,rbx
  409092:	movzx  ecx,BYTE PTR [r12]
  409097:	shl    rcx,0x38
  40909b:	or     rcx,rbp
  40909e:	shr    rcx,0x38
  4090a2:	cmp    rcx,0x79
  4090a6:	jne    41043a <main@@Base+0x936a>
  4090ac:	cmp    rax,0x2
  4090b0:	jl     41043a <main@@Base+0x936a>
  4090b6:	mov    rax,QWORD PTR [rsp+0x8]
  4090bb:	cmp    DWORD PTR [rax],0x0
  4090be:	mov    al,BYTE PTR [r13+0x9]
  4090c2:	je     40a9a8 <main@@Base+0x38d8>
  4090c8:	cmp    al,0x21
  4090ca:	jl     4090d4 <main@@Base+0x2004>
  4090cc:	cmp    al,0x3a
  4090ce:	jne    41043a <main@@Base+0x936a>
  4090d4:	add    r13,0x9
  4090d8:	mov    rax,QWORD PTR [rsp+0x8]
  4090dd:	mov    DWORD PTR [rax],0x0
  4090e3:	jmp    40a9b4 <main@@Base+0x38e4>
  4090e8:	lea    rcx,[rax-0x1]
  4090ec:	cmp    rcx,0x6
  4090f0:	ja     41043a <main@@Base+0x936a>
  4090f6:	lea    rdx,[rip+0x2af33]        # 434030 <_IO_stdin_used@@Base+0x30>
  4090fd:	mov    rsi,rdx
  409100:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  409104:	add    rdx,rsi
  409107:	xor    r8d,r8d
  40910a:	xor    ecx,ecx
  40910c:	xor    esi,esi
  40910e:	xor    edi,edi
  409110:	xor    ebx,ebx
  409112:	xor    ebp,ebp
  409114:	jmp    rdx
  409116:	movsx  r8,BYTE PTR [r13+0xe]
  40911b:	shl    r8,0x8
  40911f:	movsx  rcx,BYTE PTR [r13+0xd]
  409124:	shl    rcx,0x10
  409128:	or     rcx,r8
  40912b:	movsx  rsi,BYTE PTR [r13+0xc]
  409130:	shl    rsi,0x18
  409134:	or     rsi,rcx
  409137:	movsx  rdi,BYTE PTR [r13+0xb]
  40913c:	shl    rdi,0x20
  409140:	or     rdi,rsi
  409143:	movsx  rbx,BYTE PTR [r13+0xa]
  409148:	shl    rbx,0x28
  40914c:	or     rbx,rdi
  40914f:	movsx  rbp,BYTE PTR [r13+0x9]
  409154:	shl    rbp,0x30
  409158:	or     rbp,rbx
  40915b:	movzx  ecx,BYTE PTR [r12]
  409160:	shl    rcx,0x38
  409164:	or     rcx,rbp
  409167:	movabs rdx,0x665f646f75626c65
  409171:	cmp    rcx,rdx
  409174:	jne    40926b <main@@Base+0x219b>
  40917a:	lea    r12,[r13+0x10]
  40917e:	mov    rax,r15
  409181:	sub    rax,r12
  409184:	cmp    rax,0x8
  409188:	jb     409790 <main@@Base+0x26c0>
  40918e:	movbe  rcx,QWORD PTR [r12]
  409194:	jmp    40980f <main@@Base+0x273f>
  409199:	lea    rcx,[rax-0x1]
  40919d:	cmp    rcx,0x6
  4091a1:	ja     41043a <main@@Base+0x936a>
  4091a7:	lea    rdx,[rip+0x2b0ce]        # 43427c <_IO_stdin_used@@Base+0x27c>
  4091ae:	mov    rsi,rdx
  4091b1:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4091b5:	add    rdx,rsi
  4091b8:	xor    r8d,r8d
  4091bb:	xor    ecx,ecx
  4091bd:	xor    esi,esi
  4091bf:	xor    edi,edi
  4091c1:	xor    ebp,ebp
  4091c3:	xor    ebx,ebx
  4091c5:	jmp    rdx
  4091c7:	movsx  r8,BYTE PTR [r13+0x16]
  4091cc:	shl    r8,0x8
  4091d0:	movsx  rcx,BYTE PTR [r13+0x15]
  4091d5:	shl    rcx,0x10
  4091d9:	or     rcx,r8
  4091dc:	movsx  rsi,BYTE PTR [r13+0x14]
  4091e1:	shl    rsi,0x18
  4091e5:	or     rsi,rcx
  4091e8:	movsx  rdi,BYTE PTR [r13+0x13]
  4091ed:	shl    rdi,0x20
  4091f1:	or     rdi,rsi
  4091f4:	movsx  rbp,BYTE PTR [r13+0x12]
  4091f9:	shl    rbp,0x28
  4091fd:	or     rbp,rdi
  409200:	movsx  rbx,BYTE PTR [r13+0x11]
  409205:	shl    rbx,0x30
  409209:	or     rbx,rbp
  40920c:	movzx  ecx,BYTE PTR [r12]
  409211:	shl    rcx,0x38
  409215:	or     rcx,rbx
  409218:	shr    rcx,0x18
  40921c:	movabs rdx,0x5f74657374
  409226:	cmp    rcx,rdx
  409229:	jne    41043a <main@@Base+0x936a>
  40922f:	cmp    rax,0x6
  409233:	jl     41043a <main@@Base+0x936a>
  409239:	mov    rax,QWORD PTR [rsp+0x8]
  40923e:	cmp    DWORD PTR [rax],0x0
  409241:	mov    al,BYTE PTR [r13+0x15]
  409245:	je     40aad7 <main@@Base+0x3a07>
  40924b:	cmp    al,0x21
  40924d:	jl     409257 <main@@Base+0x2187>
  40924f:	cmp    al,0x3a
  409251:	jne    41043a <main@@Base+0x936a>
  409257:	add    r13,0x15
  40925b:	mov    rax,QWORD PTR [rsp+0x8]
  409260:	mov    DWORD PTR [rax],0x0
  409266:	jmp    40aae3 <main@@Base+0x3a13>
  40926b:	shr    rcx,0x8
  40926f:	movabs rdx,0x665f6c6f6e6773
  409279:	cmp    rcx,rdx
  40927c:	jne    41043a <main@@Base+0x936a>
  409282:	cmp    rax,0x8
  409286:	jl     41043a <main@@Base+0x936a>
  40928c:	mov    rax,QWORD PTR [rsp+0x8]
  409291:	cmp    DWORD PTR [rax],0x0
  409294:	mov    al,BYTE PTR [r13+0xf]
  409298:	je     40c727 <main@@Base+0x5657>
  40929e:	cmp    al,0x21
  4092a0:	jl     4092aa <main@@Base+0x21da>
  4092a2:	cmp    al,0x3a
  4092a4:	jne    41043a <main@@Base+0x936a>
  4092aa:	add    r13,0xf
  4092ae:	mov    rax,QWORD PTR [rsp+0x8]
  4092b3:	mov    DWORD PTR [rax],0x0
  4092b9:	jmp    40c733 <main@@Base+0x5663>
  4092be:	mov    rdi,r14
  4092c1:	mov    rdx,r15
  4092c4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4092c9:	mov    rsi,rax
  4092cc:	cmp    rsi,r15
  4092cf:	je     40937a <main@@Base+0x22aa>
  4092d5:	cmp    BYTE PTR [rsi],0x3a
  4092d8:	jne    40937a <main@@Base+0x22aa>
  4092de:	lea    rax,[rsi+0x1]
  4092e2:	mov    rcx,r15
  4092e5:	sub    rcx,rax
  4092e8:	cmp    rcx,0x2
  4092ec:	jl     409fab <main@@Base+0x2edb>
  4092f2:	cmp    BYTE PTR [rax],0x20
  4092f5:	jg     409fb9 <main@@Base+0x2ee9>
  4092fb:	jne    409fab <main@@Base+0x2edb>
  409301:	cmp    BYTE PTR [rsi+0x2],0x20
  409305:	jle    409fab <main@@Base+0x2edb>
  40930b:	add    rsi,0x2
  40930f:	mov    rax,rsi
  409312:	cmp    r13,rax
  409315:	jne    409fc2 <main@@Base+0x2ef2>
  40931b:	jmp    40cfc1 <main@@Base+0x5ef1>
  409320:	mov    rdi,r14
  409323:	mov    rdx,r15
  409326:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40932b:	mov    rsi,rax
  40932e:	cmp    rsi,r15
  409331:	je     409398 <main@@Base+0x22c8>
  409333:	cmp    BYTE PTR [rsi],0x3a
  409336:	jne    409398 <main@@Base+0x22c8>
  409338:	lea    rbx,[rsi+0x1]
  40933c:	mov    rax,r15
  40933f:	sub    rax,rbx
  409342:	cmp    rax,0x2
  409346:	jl     409ff0 <main@@Base+0x2f20>
  40934c:	cmp    BYTE PTR [rbx],0x20
  40934f:	jg     40a001 <main@@Base+0x2f31>
  409355:	jne    409ff0 <main@@Base+0x2f20>
  40935b:	cmp    BYTE PTR [rsi+0x2],0x20
  40935f:	jle    409ff0 <main@@Base+0x2f20>
  409365:	add    rsi,0x2
  409369:	mov    rbx,rsi
  40936c:	cmp    r13,rbx
  40936f:	jne    40a00a <main@@Base+0x2f3a>
  409375:	jmp    40cfc1 <main@@Base+0x5ef1>
  40937a:	mov    rdi,r14
  40937d:	mov    rdx,r15
  409380:	mov    ecx,0x4
  409385:	call   424090 <flatcc_json_parser_set_error@@Base>
  40938a:	cmp    r13,rax
  40938d:	jne    409fc2 <main@@Base+0x2ef2>
  409393:	jmp    40cfc1 <main@@Base+0x5ef1>
  409398:	mov    rdi,r14
  40939b:	mov    rdx,r15
  40939e:	mov    ecx,0x4
  4093a3:	call   424090 <flatcc_json_parser_set_error@@Base>
  4093a8:	jmp    409ffe <main@@Base+0x2f2e>
  4093ad:	mov    rax,r13
  4093b0:	cmp    cl,0x22
  4093b3:	jne    40a247 <main@@Base+0x3177>
  4093b9:	lea    rsi,[r13+0x5]
  4093bd:	mov    rax,r15
  4093c0:	sub    rax,rsi
  4093c3:	cmp    rax,0x2
  4093c7:	jl     40948a <main@@Base+0x23ba>
  4093cd:	cmp    BYTE PTR [rsi],0x20
  4093d0:	jg     409498 <main@@Base+0x23c8>
  4093d6:	jne    40948a <main@@Base+0x23ba>
  4093dc:	cmp    BYTE PTR [rsi+0x1],0x20
  4093e0:	jle    40948a <main@@Base+0x23ba>
  4093e6:	inc    rsi
  4093e9:	cmp    rsi,r15
  4093ec:	jne    4094a1 <main@@Base+0x23d1>
  4093f2:	jmp    40959f <main@@Base+0x24cf>
  4093f7:	mov    rbx,r13
  4093fa:	cmp    al,0x22
  4093fc:	jne    40a28f <main@@Base+0x31bf>
  409402:	lea    rsi,[r13+0x5]
  409406:	mov    rax,r15
  409409:	sub    rax,rsi
  40940c:	cmp    rax,0x2
  409410:	jl     4094ec <main@@Base+0x241c>
  409416:	cmp    BYTE PTR [rsi],0x20
  409419:	jg     4094fa <main@@Base+0x242a>
  40941f:	jne    4094ec <main@@Base+0x241c>
  409425:	cmp    BYTE PTR [rsi+0x1],0x20
  409429:	jle    4094ec <main@@Base+0x241c>
  40942f:	inc    rsi
  409432:	cmp    rsi,r15
  409435:	jne    409503 <main@@Base+0x2433>
  40943b:	jmp    4095bd <main@@Base+0x24ed>
  409440:	mov    rax,r13
  409443:	cmp    cl,0x22
  409446:	jne    40a52d <main@@Base+0x345d>
  40944c:	lea    rsi,[r13+0x5]
  409450:	mov    rax,r15
  409453:	sub    rax,rsi
  409456:	cmp    rax,0x2
  40945a:	jl     40954e <main@@Base+0x247e>
  409460:	cmp    BYTE PTR [rsi],0x20
  409463:	jg     40955c <main@@Base+0x248c>
  409469:	jne    40954e <main@@Base+0x247e>
  40946f:	cmp    BYTE PTR [rsi+0x1],0x20
  409473:	jle    40954e <main@@Base+0x247e>
  409479:	inc    rsi
  40947c:	cmp    rsi,r15
  40947f:	jne    409561 <main@@Base+0x2491>
  409485:	jmp    4095d2 <main@@Base+0x2502>
  40948a:	mov    rdi,r14
  40948d:	mov    rdx,r15
  409490:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409495:	mov    rsi,rax
  409498:	cmp    rsi,r15
  40949b:	je     40959f <main@@Base+0x24cf>
  4094a1:	cmp    BYTE PTR [rsi],0x3a
  4094a4:	jne    40959f <main@@Base+0x24cf>
  4094aa:	lea    rax,[rsi+0x1]
  4094ae:	mov    rcx,r15
  4094b1:	sub    rcx,rax
  4094b4:	cmp    rcx,0x2
  4094b8:	jl     40a239 <main@@Base+0x3169>
  4094be:	cmp    BYTE PTR [rax],0x20
  4094c1:	jg     40a247 <main@@Base+0x3177>
  4094c7:	jne    40a239 <main@@Base+0x3169>
  4094cd:	cmp    BYTE PTR [rsi+0x2],0x20
  4094d1:	jle    40a239 <main@@Base+0x3169>
  4094d7:	add    rsi,0x2
  4094db:	mov    rax,rsi
  4094de:	cmp    r13,rax
  4094e1:	jne    40a250 <main@@Base+0x3180>
  4094e7:	jmp    40cfc1 <main@@Base+0x5ef1>
  4094ec:	mov    rdi,r14
  4094ef:	mov    rdx,r15
  4094f2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4094f7:	mov    rsi,rax
  4094fa:	cmp    rsi,r15
  4094fd:	je     4095bd <main@@Base+0x24ed>
  409503:	cmp    BYTE PTR [rsi],0x3a
  409506:	jne    4095bd <main@@Base+0x24ed>
  40950c:	lea    rbx,[rsi+0x1]
  409510:	mov    rax,r15
  409513:	sub    rax,rbx
  409516:	cmp    rax,0x2
  40951a:	jl     40a27e <main@@Base+0x31ae>
  409520:	cmp    BYTE PTR [rbx],0x20
  409523:	jg     40a28f <main@@Base+0x31bf>
  409529:	jne    40a27e <main@@Base+0x31ae>
  40952f:	cmp    BYTE PTR [rsi+0x2],0x20
  409533:	jle    40a27e <main@@Base+0x31ae>
  409539:	add    rsi,0x2
  40953d:	mov    rbx,rsi
  409540:	cmp    r13,rbx
  409543:	jne    40a298 <main@@Base+0x31c8>
  409549:	jmp    40cfc1 <main@@Base+0x5ef1>
  40954e:	mov    rdi,r14
  409551:	mov    rdx,r15
  409554:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409559:	mov    rsi,rax
  40955c:	cmp    rsi,r15
  40955f:	je     4095d2 <main@@Base+0x2502>
  409561:	cmp    BYTE PTR [rsi],0x3a
  409564:	jne    4095d2 <main@@Base+0x2502>
  409566:	lea    rax,[rsi+0x1]
  40956a:	mov    rcx,r15
  40956d:	sub    rcx,rax
  409570:	cmp    rcx,0x2
  409574:	jl     40a515 <main@@Base+0x3445>
  40957a:	cmp    BYTE PTR [rax],0x20
  40957d:	jg     40a523 <main@@Base+0x3453>
  409583:	jne    40a515 <main@@Base+0x3445>
  409589:	cmp    BYTE PTR [rsi+0x2],0x20
  40958d:	jle    40a515 <main@@Base+0x3445>
  409593:	add    rsi,0x2
  409597:	mov    rax,rsi
  40959a:	jmp    40a523 <main@@Base+0x3453>
  40959f:	mov    rdi,r14
  4095a2:	mov    rdx,r15
  4095a5:	mov    ecx,0x4
  4095aa:	call   424090 <flatcc_json_parser_set_error@@Base>
  4095af:	cmp    r13,rax
  4095b2:	jne    40a250 <main@@Base+0x3180>
  4095b8:	jmp    40cfc1 <main@@Base+0x5ef1>
  4095bd:	mov    rdi,r14
  4095c0:	mov    rdx,r15
  4095c3:	mov    ecx,0x4
  4095c8:	call   424090 <flatcc_json_parser_set_error@@Base>
  4095cd:	jmp    40a28c <main@@Base+0x31bc>
  4095d2:	mov    rdi,r14
  4095d5:	mov    rdx,r15
  4095d8:	mov    ecx,0x4
  4095dd:	call   424090 <flatcc_json_parser_set_error@@Base>
  4095e2:	jmp    40a523 <main@@Base+0x3453>
  4095e7:	cmp    rax,0x9
  4095eb:	jl     40c474 <main@@Base+0x53a4>
  4095f1:	mov    rax,QWORD PTR [rsp+0x8]
  4095f6:	cmp    DWORD PTR [rax],0x0
  4095f9:	mov    al,BYTE PTR [r13+0x10]
  4095fd:	je     40b4bd <main@@Base+0x43ed>
  409603:	cmp    al,0x21
  409605:	jl     40960f <main@@Base+0x253f>
  409607:	cmp    al,0x3a
  409609:	jne    40c474 <main@@Base+0x53a4>
  40960f:	lea    rsi,[r13+0x10]
  409613:	mov    rax,QWORD PTR [rsp+0x8]
  409618:	mov    DWORD PTR [rax],0x0
  40961e:	jmp    40b4c9 <main@@Base+0x43f9>
  409623:	mov    rbx,r13
  409626:	cmp    al,0x22
  409628:	jne    40b1b7 <main@@Base+0x40e7>
  40962e:	lea    rsi,[r13+0x9]
  409632:	mov    rax,r15
  409635:	sub    rax,rsi
  409638:	cmp    rax,0x2
  40963c:	jl     409859 <main@@Base+0x2789>
  409642:	cmp    BYTE PTR [rsi],0x20
  409645:	jg     409867 <main@@Base+0x2797>
  40964b:	jne    409859 <main@@Base+0x2789>
  409651:	cmp    BYTE PTR [rsi+0x1],0x20
  409655:	jle    409859 <main@@Base+0x2789>
  40965b:	inc    rsi
  40965e:	cmp    rsi,r15
  409661:	jne    40986c <main@@Base+0x279c>
  409667:	jmp    4098b3 <main@@Base+0x27e3>
  40966c:	cmp    al,0x22
  40966e:	jne    41043a <main@@Base+0x936a>
  409674:	add    r13,0x11
  409678:	mov    rax,r15
  40967b:	sub    rax,r13
  40967e:	cmp    rax,0x2
  409682:	jl     409b62 <main@@Base+0x2a92>
  409688:	cmp    BYTE PTR [r13+0x0],0x20
  40968d:	jg     409b73 <main@@Base+0x2aa3>
  409693:	jne    409b62 <main@@Base+0x2a92>
  409699:	cmp    BYTE PTR [r13+0x1],0x20
  40969e:	jle    409b62 <main@@Base+0x2a92>
  4096a4:	inc    r13
  4096a7:	cmp    r13,r15
  4096aa:	jne    409b78 <main@@Base+0x2aa8>
  4096b0:	jmp    409bc2 <main@@Base+0x2af2>
  4096b5:	lea    rcx,[rax-0x1]
  4096b9:	cmp    rcx,0x6
  4096bd:	ja     41043a <main@@Base+0x936a>
  4096c3:	lea    rdx,[rip+0x2a9ba]        # 434084 <_IO_stdin_used@@Base+0x84>
  4096ca:	mov    rsi,rdx
  4096cd:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4096d1:	add    rdx,rsi
  4096d4:	xor    r8d,r8d
  4096d7:	xor    ecx,ecx
  4096d9:	xor    esi,esi
  4096db:	xor    edi,edi
  4096dd:	xor    ebx,ebx
  4096df:	xor    ebp,ebp
  4096e1:	jmp    rdx
  4096e3:	movsx  r8,BYTE PTR [r13+0x16]
  4096e8:	shl    r8,0x8
  4096ec:	movsx  rcx,BYTE PTR [r13+0x15]
  4096f1:	shl    rcx,0x10
  4096f5:	or     rcx,r8
  4096f8:	movsx  rsi,BYTE PTR [r13+0x14]
  4096fd:	shl    rsi,0x18
  409701:	or     rsi,rcx
  409704:	movsx  rdi,BYTE PTR [r13+0x13]
  409709:	shl    rdi,0x20
  40970d:	or     rdi,rsi
  409710:	movsx  rbx,BYTE PTR [r13+0x12]
  409715:	shl    rbx,0x28
  409719:	or     rbx,rdi
  40971c:	movsx  rbp,BYTE PTR [r13+0x11]
  409721:	shl    rbp,0x30
  409725:	or     rbp,rbx
  409728:	movzx  ecx,BYTE PTR [r12]
  40972d:	shl    rcx,0x38
  409731:	or     rcx,rbp
  409734:	movabs rdx,0xffffffff00000000
  40973e:	and    rcx,rdx
  409741:	movabs rdx,0x6666657200000000
  40974b:	cmp    rcx,rdx
  40974e:	jne    41043a <main@@Base+0x936a>
  409754:	cmp    rax,0x5
  409758:	jl     41043a <main@@Base+0x936a>
  40975e:	mov    rax,QWORD PTR [rsp+0x8]
  409763:	cmp    DWORD PTR [rax],0x0
  409766:	mov    al,BYTE PTR [r13+0x14]
  40976a:	je     40c7be <main@@Base+0x56ee>
  409770:	cmp    al,0x21
  409772:	jl     40977c <main@@Base+0x26ac>
  409774:	cmp    al,0x3a
  409776:	jne    41043a <main@@Base+0x936a>
  40977c:	add    r13,0x14
  409780:	mov    rax,QWORD PTR [rsp+0x8]
  409785:	mov    DWORD PTR [rax],0x0
  40978b:	jmp    40c7ca <main@@Base+0x56fa>
  409790:	lea    rcx,[rax-0x1]
  409794:	cmp    rcx,0x6
  409798:	ja     41043a <main@@Base+0x936a>
  40979e:	lea    rdx,[rip+0x2a8a7]        # 43404c <_IO_stdin_used@@Base+0x4c>
  4097a5:	mov    rsi,rdx
  4097a8:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  4097ac:	add    rdx,rsi
  4097af:	xor    r8d,r8d
  4097b2:	xor    ecx,ecx
  4097b4:	xor    esi,esi
  4097b6:	xor    edi,edi
  4097b8:	xor    ebx,ebx
  4097ba:	xor    ebp,ebp
  4097bc:	jmp    rdx
  4097be:	movsx  r8,BYTE PTR [r13+0x16]
  4097c3:	shl    r8,0x8
  4097c7:	movsx  rcx,BYTE PTR [r13+0x15]
  4097cc:	shl    rcx,0x10
  4097d0:	or     rcx,r8
  4097d3:	movsx  rsi,BYTE PTR [r13+0x14]
  4097d8:	shl    rsi,0x18
  4097dc:	or     rsi,rcx
  4097df:	movsx  rdi,BYTE PTR [r13+0x13]
  4097e4:	shl    rdi,0x20
  4097e8:	or     rdi,rsi
  4097eb:	movsx  rbx,BYTE PTR [r13+0x12]
  4097f0:	shl    rbx,0x28
  4097f4:	or     rbx,rdi
  4097f7:	movsx  rbp,BYTE PTR [r13+0x11]
  4097fc:	shl    rbp,0x30
  409800:	or     rbp,rbx
  409803:	movzx  ecx,BYTE PTR [r12]
  409808:	shl    rcx,0x38
  40980c:	or     rcx,rbp
  40980f:	shr    rcx,0x38
  409813:	cmp    rcx,0x73
  409817:	jne    41043a <main@@Base+0x936a>
  40981d:	cmp    rax,0x2
  409821:	jl     41043a <main@@Base+0x936a>
  409827:	mov    rax,QWORD PTR [rsp+0x8]
  40982c:	cmp    DWORD PTR [rax],0x0
  40982f:	mov    al,BYTE PTR [r13+0x11]
  409833:	je     40c807 <main@@Base+0x5737>
  409839:	cmp    al,0x21
  40983b:	jl     409845 <main@@Base+0x2775>
  40983d:	cmp    al,0x3a
  40983f:	jne    41043a <main@@Base+0x936a>
  409845:	add    r13,0x11
  409849:	mov    rax,QWORD PTR [rsp+0x8]
  40984e:	mov    DWORD PTR [rax],0x0
  409854:	jmp    40c813 <main@@Base+0x5743>
  409859:	mov    rdi,r14
  40985c:	mov    rdx,r15
  40985f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409864:	mov    rsi,rax
  409867:	cmp    rsi,r15
  40986a:	je     4098b3 <main@@Base+0x27e3>
  40986c:	cmp    BYTE PTR [rsi],0x3a
  40986f:	jne    4098b3 <main@@Base+0x27e3>
  409871:	lea    rbx,[rsi+0x1]
  409875:	mov    rax,r15
  409878:	sub    rax,rbx
  40987b:	cmp    rax,0x2
  40987f:	jl     40b1a6 <main@@Base+0x40d6>
  409885:	cmp    BYTE PTR [rbx],0x20
  409888:	jg     40b1b7 <main@@Base+0x40e7>
  40988e:	jne    40b1a6 <main@@Base+0x40d6>
  409894:	cmp    BYTE PTR [rsi+0x2],0x20
  409898:	jle    40b1a6 <main@@Base+0x40d6>
  40989e:	add    rsi,0x2
  4098a2:	mov    rbx,rsi
  4098a5:	cmp    r13,rbx
  4098a8:	jne    40b1c0 <main@@Base+0x40f0>
  4098ae:	jmp    40cfc1 <main@@Base+0x5ef1>
  4098b3:	mov    rdi,r14
  4098b6:	mov    rdx,r15
  4098b9:	mov    ecx,0x4
  4098be:	call   424090 <flatcc_json_parser_set_error@@Base>
  4098c3:	jmp    40b1b4 <main@@Base+0x40e4>
  4098c8:	mov    rdi,r14
  4098cb:	mov    rsi,rbx
  4098ce:	mov    rdx,r15
  4098d1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4098d6:	mov    rbx,rax
  4098d9:	cmp    r13,rbx
  4098dc:	je     40cfc1 <main@@Base+0x5ef1>
  4098e2:	mov    DWORD PTR [rsp+0x10],0x0
  4098ea:	mov    rdi,r14
  4098ed:	mov    rsi,rbx
  4098f0:	mov    rdx,r15
  4098f3:	lea    rcx,[rsp+0x10]
  4098f8:	call   425b30 <flatcc_json_parser_float@@Base>
  4098fd:	mov    rbp,rax
  409900:	cmp    rbx,rax
  409903:	jne    409934 <main@@Base+0x2864>
  409905:	mov    rdi,r14
  409908:	mov    rsi,rbx
  40990b:	mov    rdx,r15
  40990e:	lea    rcx,[rip+0x398eb]        # 443200 <__data_start@@Base+0x150>
  409915:	lea    r8,[rsp+0x10]
  40991a:	call   4149c0 <main@@Base+0xd8f0>
  40991f:	mov    rbp,rax
  409922:	cmp    rax,rbx
  409925:	je     410ce5 <main@@Base+0x9c15>
  40992b:	cmp    rbp,r15
  40992e:	je     410ce5 <main@@Base+0x9c15>
  409934:	vmovss xmm0,DWORD PTR [rsp+0x10]
  40993a:	vucomiss xmm0,DWORD PTR [rip+0x2a6ca]        # 43400c <_IO_stdin_used@@Base+0xc>
  409942:	jne    409951 <main@@Base+0x2881>
  409944:	jp     409951 <main@@Base+0x2881>
  409946:	test   BYTE PTR [r14+0x10],0x2
  40994b:	je     41044b <main@@Base+0x937b>
  409951:	mov    rdi,QWORD PTR [r14]
  409954:	mov    edx,0x4
  409959:	mov    esi,0x1b
  40995e:	mov    ecx,0x4
  409963:	call   420a40 <flatcc_builder_table_add@@Base>
  409968:	test   rax,rax
  40996b:	je     410ce5 <main@@Base+0x9c15>
  409971:	mov    ecx,DWORD PTR [rsp+0x10]
  409975:	jmp    40afa3 <main@@Base+0x3ed3>
  40997a:	mov    rdi,r14
  40997d:	mov    rsi,rbx
  409980:	mov    rdx,r15
  409983:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409988:	mov    rbx,rax
  40998b:	movabs rdx,0x7465737400000000
  409995:	cmp    r13,rbx
  409998:	je     40ae6e <main@@Base+0x3d9e>
  40999e:	mov    rdi,QWORD PTR [r14]
  4099a1:	mov    esi,0x4
  4099a6:	mov    ecx,0x3fffffff
  4099ab:	mov    edx,0x2
  4099b0:	call   41f250 <flatcc_builder_start_vector@@Base>
  4099b5:	test   eax,eax
  4099b7:	jne    407c81 <main@@Base+0xbb1>
  4099bd:	cmp    rbx,r15
  4099c0:	je     4099ed <main@@Base+0x291d>
  4099c2:	cmp    BYTE PTR [rbx],0x5b
  4099c5:	jne    4099ed <main@@Base+0x291d>
  4099c7:	lea    rax,[rbx+0x1]
  4099cb:	mov    rcx,r15
  4099ce:	sub    rcx,rax
  4099d1:	cmp    rcx,0x2
  4099d5:	jl     409a24 <main@@Base+0x2954>
  4099d7:	cmp    BYTE PTR [rax],0x20
  4099da:	jg     409a32 <main@@Base+0x2962>
  4099dc:	jne    409a24 <main@@Base+0x2954>
  4099de:	cmp    BYTE PTR [rbx+0x2],0x20
  4099e2:	jle    409a24 <main@@Base+0x2954>
  4099e4:	add    rbx,0x2
  4099e8:	mov    rax,rbx
  4099eb:	jmp    409a32 <main@@Base+0x2962>
  4099ed:	mov    rdi,r14
  4099f0:	mov    rsi,rbx
  4099f3:	mov    rdx,r15
  4099f6:	mov    ecx,0x16
  4099fb:	call   424090 <flatcc_json_parser_set_error@@Base>
  409a00:	mov    rbp,rax
  409a03:	mov    rdi,QWORD PTR [r14]
  409a06:	call   4203e0 <flatcc_builder_end_vector@@Base>
  409a0b:	mov    DWORD PTR [rsp+0x1c],eax
  409a0f:	test   eax,eax
  409a11:	je     410ce5 <main@@Base+0x9c15>
  409a17:	mov    rdi,QWORD PTR [r14]
  409a1a:	mov    esi,0x9
  409a1f:	jmp    40af91 <main@@Base+0x3ec1>
  409a24:	mov    rdi,r14
  409a27:	mov    rsi,rax
  409a2a:	mov    rdx,r15
  409a2d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409a32:	mov    rbx,r15
  409a35:	cmp    rax,r15
  409a38:	je     409a72 <main@@Base+0x29a2>
  409a3a:	cmp    BYTE PTR [rax],0x5d
  409a3d:	jne    409a6f <main@@Base+0x299f>
  409a3f:	lea    rbp,[rax+0x1]
  409a43:	mov    rcx,r15
  409a46:	sub    rcx,rbp
  409a49:	cmp    rcx,0x2
  409a4d:	jl     40a6f1 <main@@Base+0x3621>
  409a53:	cmp    BYTE PTR [rbp+0x0],0x20
  409a57:	jg     409a03 <main@@Base+0x2933>
  409a59:	jne    40a6f1 <main@@Base+0x3621>
  409a5f:	cmp    BYTE PTR [rax+0x2],0x20
  409a63:	jle    40a6f1 <main@@Base+0x3621>
  409a69:	add    rax,0x2
  409a6d:	jmp    409a00 <main@@Base+0x2930>
  409a6f:	mov    rbx,rax
  409a72:	mov    rdi,QWORD PTR [r14]
  409a75:	mov    esi,0x1
  409a7a:	call   41e900 <flatcc_builder_extend_vector@@Base>
  409a7f:	test   rax,rax
  409a82:	je     407c81 <main@@Base+0xbb1>
  409a88:	mov    rdi,r14
  409a8b:	mov    rsi,rbx
  409a8e:	mov    rdx,r15
  409a91:	mov    rcx,rax
  409a94:	call   412fa0 <main@@Base+0xbed0>
  409a99:	mov    rcx,r15
  409a9c:	sub    rcx,rax
  409a9f:	cmp    rcx,0x2
  409aa3:	jl     409abf <main@@Base+0x29ef>
  409aa5:	cmp    BYTE PTR [rax],0x20
  409aa8:	jg     409acd <main@@Base+0x29fd>
  409aaa:	jne    409abf <main@@Base+0x29ef>
  409aac:	cmp    BYTE PTR [rax+0x1],0x20
  409ab0:	jle    409abf <main@@Base+0x29ef>
  409ab2:	inc    rax
  409ab5:	cmp    rax,r15
  409ab8:	jne    409ad6 <main@@Base+0x2a06>
  409aba:	jmp    40a6c0 <main@@Base+0x35f0>
  409abf:	mov    rdi,r14
  409ac2:	mov    rsi,rax
  409ac5:	mov    rdx,r15
  409ac8:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409acd:	cmp    rax,r15
  409ad0:	je     40a6c0 <main@@Base+0x35f0>
  409ad6:	movzx  ecx,BYTE PTR [rax]
  409ad9:	cmp    cl,0x2c
  409adc:	jne    40a6c8 <main@@Base+0x35f8>
  409ae2:	lea    rbx,[rax+0x1]
  409ae6:	mov    rcx,r15
  409ae9:	sub    rcx,rbx
  409aec:	cmp    rcx,0x2
  409af0:	jl     409b05 <main@@Base+0x2a35>
  409af2:	cmp    BYTE PTR [rbx],0x20
  409af5:	jg     409b16 <main@@Base+0x2a46>
  409af7:	jne    409b05 <main@@Base+0x2a35>
  409af9:	cmp    BYTE PTR [rax+0x2],0x20
  409afd:	jle    409b05 <main@@Base+0x2a35>
  409aff:	add    rax,0x2
  409b03:	jmp    409b13 <main@@Base+0x2a43>
  409b05:	mov    rdi,r14
  409b08:	mov    rsi,rbx
  409b0b:	mov    rdx,r15
  409b0e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409b13:	mov    rbx,rax
  409b16:	cmp    rbx,r15
  409b19:	je     40a704 <main@@Base+0x3634>
  409b1f:	cmp    BYTE PTR [rbx],0x5d
  409b22:	jne    409a72 <main@@Base+0x29a2>
  409b28:	lea    rbp,[rbx+0x1]
  409b2c:	mov    rax,r15
  409b2f:	sub    rax,rbp
  409b32:	cmp    rax,0x2
  409b36:	jl     40a6f1 <main@@Base+0x3621>
  409b3c:	cmp    BYTE PTR [rbp+0x0],0x20
  409b40:	jg     409a03 <main@@Base+0x2933>
  409b46:	jne    40a6f1 <main@@Base+0x3621>
  409b4c:	cmp    BYTE PTR [rbx+0x2],0x20
  409b50:	jle    40a6f1 <main@@Base+0x3621>
  409b56:	add    rbx,0x2
  409b5a:	mov    rbp,rbx
  409b5d:	jmp    409a03 <main@@Base+0x2933>
  409b62:	mov    rdi,r14
  409b65:	mov    rsi,r13
  409b68:	mov    rdx,r15
  409b6b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409b70:	mov    r13,rax
  409b73:	cmp    r13,r15
  409b76:	je     409bc2 <main@@Base+0x2af2>
  409b78:	cmp    BYTE PTR [r13+0x0],0x3a
  409b7d:	jne    409bc2 <main@@Base+0x2af2>
  409b7f:	lea    rbx,[r13+0x1]
  409b83:	mov    rax,r15
  409b86:	sub    rax,rbx
  409b89:	cmp    rax,0x2
  409b8d:	jl     40b349 <main@@Base+0x4279>
  409b93:	cmp    BYTE PTR [rbx],0x20
  409b96:	jg     40b35a <main@@Base+0x428a>
  409b9c:	jne    40b349 <main@@Base+0x4279>
  409ba2:	cmp    BYTE PTR [r13+0x2],0x20
  409ba7:	jle    40b349 <main@@Base+0x4279>
  409bad:	add    r13,0x2
  409bb1:	mov    rbx,r13
  409bb4:	cmp    r12,rbx
  409bb7:	jne    40b363 <main@@Base+0x4293>
  409bbd:	jmp    41043a <main@@Base+0x936a>
  409bc2:	mov    rdi,r14
  409bc5:	mov    rsi,r13
  409bc8:	mov    rdx,r15
  409bcb:	mov    ecx,0x4
  409bd0:	call   424090 <flatcc_json_parser_set_error@@Base>
  409bd5:	jmp    40b357 <main@@Base+0x4287>
  409bda:	mov    rbx,r13
  409bdd:	cmp    al,0x22
  409bdf:	jne    40b55d <main@@Base+0x448d>
  409be5:	lea    rsi,[r13+0x3]
  409be9:	mov    rax,r15
  409bec:	sub    rax,rsi
  409bef:	cmp    rax,0x2
  409bf3:	jl     409cfb <main@@Base+0x2c2b>
  409bf9:	cmp    BYTE PTR [rsi],0x20
  409bfc:	jg     409d09 <main@@Base+0x2c39>
  409c02:	jne    409cfb <main@@Base+0x2c2b>
  409c08:	cmp    BYTE PTR [rsi+0x1],0x20
  409c0c:	jle    409cfb <main@@Base+0x2c2b>
  409c12:	inc    rsi
  409c15:	cmp    rsi,r15
  409c18:	jne    409d12 <main@@Base+0x2c42>
  409c1e:	jmp    409e19 <main@@Base+0x2d49>
  409c23:	mov    rbx,r13
  409c26:	cmp    al,0x22
  409c28:	jne    40b671 <main@@Base+0x45a1>
  409c2e:	lea    rsi,[r13+0x4]
  409c32:	mov    rax,r15
  409c35:	sub    rax,rsi
  409c38:	cmp    rax,0x2
  409c3c:	jl     409d5d <main@@Base+0x2c8d>
  409c42:	cmp    BYTE PTR [rsi],0x20
  409c45:	jg     409d6b <main@@Base+0x2c9b>
  409c4b:	jne    409d5d <main@@Base+0x2c8d>
  409c51:	cmp    BYTE PTR [rsi+0x1],0x20
  409c55:	jle    409d5d <main@@Base+0x2c8d>
  409c5b:	inc    rsi
  409c5e:	cmp    rsi,r15
  409c61:	jne    409d74 <main@@Base+0x2ca4>
  409c67:	jmp    409e2e <main@@Base+0x2d5e>
  409c6c:	mov    rbx,r13
  409c6f:	cmp    al,0x22
  409c71:	jne    40c24f <main@@Base+0x517f>
  409c77:	lea    rsi,[r13+0x7]
  409c7b:	mov    rax,r15
  409c7e:	sub    rax,rsi
  409c81:	cmp    rax,0x2
  409c85:	jl     409dbf <main@@Base+0x2cef>
  409c8b:	cmp    BYTE PTR [rsi],0x20
  409c8e:	jg     409dcd <main@@Base+0x2cfd>
  409c94:	jne    409dbf <main@@Base+0x2cef>
  409c9a:	cmp    BYTE PTR [rsi+0x1],0x20
  409c9e:	jle    409dbf <main@@Base+0x2cef>
  409ca4:	inc    rsi
  409ca7:	cmp    rsi,r15
  409caa:	jne    409dd2 <main@@Base+0x2d02>
  409cb0:	jmp    409e43 <main@@Base+0x2d73>
  409cb5:	cmp    al,0x22
  409cb7:	jne    409eb5 <main@@Base+0x2de5>
  409cbd:	lea    rsi,[r13+0x11]
  409cc1:	mov    rax,r15
  409cc4:	sub    rax,rsi
  409cc7:	cmp    rax,0x2
  409ccb:	jl     409e58 <main@@Base+0x2d88>
  409cd1:	cmp    BYTE PTR [rsi],0x20
  409cd4:	jg     409e66 <main@@Base+0x2d96>
  409cda:	jne    409e58 <main@@Base+0x2d88>
  409ce0:	cmp    BYTE PTR [rsi+0x1],0x20
  409ce4:	jle    409e58 <main@@Base+0x2d88>
  409cea:	inc    rsi
  409ced:	cmp    rsi,r15
  409cf0:	jne    409e6f <main@@Base+0x2d9f>
  409cf6:	jmp    409f96 <main@@Base+0x2ec6>
  409cfb:	mov    rdi,r14
  409cfe:	mov    rdx,r15
  409d01:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409d06:	mov    rsi,rax
  409d09:	cmp    rsi,r15
  409d0c:	je     409e19 <main@@Base+0x2d49>
  409d12:	cmp    BYTE PTR [rsi],0x3a
  409d15:	jne    409e19 <main@@Base+0x2d49>
  409d1b:	lea    rbx,[rsi+0x1]
  409d1f:	mov    rax,r15
  409d22:	sub    rax,rbx
  409d25:	cmp    rax,0x2
  409d29:	jl     40b54c <main@@Base+0x447c>
  409d2f:	cmp    BYTE PTR [rbx],0x20
  409d32:	jg     40b55d <main@@Base+0x448d>
  409d38:	jne    40b54c <main@@Base+0x447c>
  409d3e:	cmp    BYTE PTR [rsi+0x2],0x20
  409d42:	jle    40b54c <main@@Base+0x447c>
  409d48:	add    rsi,0x2
  409d4c:	mov    rbx,rsi
  409d4f:	cmp    r13,rbx
  409d52:	jne    40b566 <main@@Base+0x4496>
  409d58:	jmp    40cfc1 <main@@Base+0x5ef1>
  409d5d:	mov    rdi,r14
  409d60:	mov    rdx,r15
  409d63:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409d68:	mov    rsi,rax
  409d6b:	cmp    rsi,r15
  409d6e:	je     409e2e <main@@Base+0x2d5e>
  409d74:	cmp    BYTE PTR [rsi],0x3a
  409d77:	jne    409e2e <main@@Base+0x2d5e>
  409d7d:	lea    rbx,[rsi+0x1]
  409d81:	mov    rax,r15
  409d84:	sub    rax,rbx
  409d87:	cmp    rax,0x2
  409d8b:	jl     40b660 <main@@Base+0x4590>
  409d91:	cmp    BYTE PTR [rbx],0x20
  409d94:	jg     40b671 <main@@Base+0x45a1>
  409d9a:	jne    40b660 <main@@Base+0x4590>
  409da0:	cmp    BYTE PTR [rsi+0x2],0x20
  409da4:	jle    40b660 <main@@Base+0x4590>
  409daa:	add    rsi,0x2
  409dae:	mov    rbx,rsi
  409db1:	cmp    r13,rbx
  409db4:	jne    40b67a <main@@Base+0x45aa>
  409dba:	jmp    40cfc1 <main@@Base+0x5ef1>
  409dbf:	mov    rdi,r14
  409dc2:	mov    rdx,r15
  409dc5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409dca:	mov    rsi,rax
  409dcd:	cmp    rsi,r15
  409dd0:	je     409e43 <main@@Base+0x2d73>
  409dd2:	cmp    BYTE PTR [rsi],0x3a
  409dd5:	jne    409e43 <main@@Base+0x2d73>
  409dd7:	lea    rbx,[rsi+0x1]
  409ddb:	mov    rax,r15
  409dde:	sub    rax,rbx
  409de1:	cmp    rax,0x2
  409de5:	jl     40c23e <main@@Base+0x516e>
  409deb:	cmp    BYTE PTR [rbx],0x20
  409dee:	jg     40c24f <main@@Base+0x517f>
  409df4:	jne    40c23e <main@@Base+0x516e>
  409dfa:	cmp    BYTE PTR [rsi+0x2],0x20
  409dfe:	jle    40c23e <main@@Base+0x516e>
  409e04:	add    rsi,0x2
  409e08:	mov    rbx,rsi
  409e0b:	cmp    r13,rbx
  409e0e:	jne    40c258 <main@@Base+0x5188>
  409e14:	jmp    40cfc1 <main@@Base+0x5ef1>
  409e19:	mov    rdi,r14
  409e1c:	mov    rdx,r15
  409e1f:	mov    ecx,0x4
  409e24:	call   424090 <flatcc_json_parser_set_error@@Base>
  409e29:	jmp    40b55a <main@@Base+0x448a>
  409e2e:	mov    rdi,r14
  409e31:	mov    rdx,r15
  409e34:	mov    ecx,0x4
  409e39:	call   424090 <flatcc_json_parser_set_error@@Base>
  409e3e:	jmp    40b66e <main@@Base+0x459e>
  409e43:	mov    rdi,r14
  409e46:	mov    rdx,r15
  409e49:	mov    ecx,0x4
  409e4e:	call   424090 <flatcc_json_parser_set_error@@Base>
  409e53:	jmp    40c24c <main@@Base+0x517c>
  409e58:	mov    rdi,r14
  409e5b:	mov    rdx,r15
  409e5e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409e63:	mov    rsi,rax
  409e66:	cmp    rsi,r15
  409e69:	je     409f96 <main@@Base+0x2ec6>
  409e6f:	cmp    BYTE PTR [rsi],0x3a
  409e72:	jne    409f96 <main@@Base+0x2ec6>
  409e78:	lea    rbx,[rsi+0x1]
  409e7c:	mov    rax,r15
  409e7f:	sub    rax,rbx
  409e82:	cmp    rax,0x2
  409e86:	jl     40c592 <main@@Base+0x54c2>
  409e8c:	cmp    BYTE PTR [rbx],0x20
  409e8f:	jg     40c5a3 <main@@Base+0x54d3>
  409e95:	jne    40c592 <main@@Base+0x54c2>
  409e9b:	cmp    BYTE PTR [rsi+0x2],0x20
  409e9f:	jle    40c592 <main@@Base+0x54c2>
  409ea5:	add    rsi,0x2
  409ea9:	mov    rbx,rsi
  409eac:	cmp    r12,rbx
  409eaf:	jne    40c5ac <main@@Base+0x54dc>
  409eb5:	lea    r12,[r13+0x10]
  409eb9:	mov    rax,r15
  409ebc:	sub    rax,r12
  409ebf:	cmp    rax,0x8
  409ec3:	jb     409ecd <main@@Base+0x2dfd>
  409ec5:	movbe  rcx,QWORD PTR [r12]
  409ecb:	jmp    409f4c <main@@Base+0x2e7c>
  409ecd:	lea    rcx,[rax-0x1]
  409ed1:	cmp    rcx,0x6
  409ed5:	ja     41043a <main@@Base+0x936a>
  409edb:	lea    rdx,[rip+0x2a22e]        # 434110 <_IO_stdin_used@@Base+0x110>
  409ee2:	mov    rsi,rdx
  409ee5:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  409ee9:	add    rdx,rsi
  409eec:	xor    r8d,r8d
  409eef:	xor    ecx,ecx
  409ef1:	xor    esi,esi
  409ef3:	xor    edi,edi
  409ef5:	xor    ebp,ebp
  409ef7:	xor    ebx,ebx
  409ef9:	jmp    rdx
  409efb:	movsx  r8,BYTE PTR [r13+0x16]
  409f00:	shl    r8,0x8
  409f04:	movsx  rcx,BYTE PTR [r13+0x15]
  409f09:	shl    rcx,0x10
  409f0d:	or     rcx,r8
  409f10:	movsx  rsi,BYTE PTR [r13+0x14]
  409f15:	shl    rsi,0x18
  409f19:	or     rsi,rcx
  409f1c:	movsx  rdi,BYTE PTR [r13+0x13]
  409f21:	shl    rdi,0x20
  409f25:	or     rdi,rsi
  409f28:	movsx  rbp,BYTE PTR [r13+0x12]
  409f2d:	shl    rbp,0x28
  409f31:	or     rbp,rdi
  409f34:	movsx  rbx,BYTE PTR [r13+0x11]
  409f39:	shl    rbx,0x30
  409f3d:	or     rbx,rbp
  409f40:	movzx  ecx,BYTE PTR [r12]
  409f45:	shl    rcx,0x38
  409f49:	or     rcx,rbx
  409f4c:	shr    rcx,0x38
  409f50:	cmp    rcx,0x61
  409f54:	jne    41043a <main@@Base+0x936a>
  409f5a:	cmp    rax,0x2
  409f5e:	jl     41043a <main@@Base+0x936a>
  409f64:	mov    rax,QWORD PTR [rsp+0x8]
  409f69:	cmp    DWORD PTR [rax],0x0
  409f6c:	mov    al,BYTE PTR [r13+0x11]
  409f70:	je     40b300 <main@@Base+0x4230>
  409f76:	cmp    al,0x21
  409f78:	jl     409f82 <main@@Base+0x2eb2>
  409f7a:	cmp    al,0x3a
  409f7c:	jne    41043a <main@@Base+0x936a>
  409f82:	add    r13,0x11
  409f86:	mov    rax,QWORD PTR [rsp+0x8]
  409f8b:	mov    DWORD PTR [rax],0x0
  409f91:	jmp    40b30c <main@@Base+0x423c>
  409f96:	mov    rdi,r14
  409f99:	mov    rdx,r15
  409f9c:	mov    ecx,0x4
  409fa1:	call   424090 <flatcc_json_parser_set_error@@Base>
  409fa6:	jmp    40c5a0 <main@@Base+0x54d0>
  409fab:	mov    rdi,r14
  409fae:	mov    rsi,rax
  409fb1:	mov    rdx,r15
  409fb4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409fb9:	cmp    r13,rax
  409fbc:	je     40cfc1 <main@@Base+0x5ef1>
  409fc2:	mov    rdi,r14
  409fc5:	mov    rsi,rax
  409fc8:	mov    rdx,r15
  409fcb:	lea    rcx,[rsp+0x1c]
  409fd0:	call   407c50 <main@@Base+0xb80>
  409fd5:	mov    rbp,rax
  409fd8:	cmp    DWORD PTR [rsp+0x1c],0x0
  409fdd:	je     410ce5 <main@@Base+0x9c15>
  409fe3:	mov    rdi,QWORD PTR [r14]
  409fe6:	mov    esi,0xc
  409feb:	jmp    40af91 <main@@Base+0x3ec1>
  409ff0:	mov    rdi,r14
  409ff3:	mov    rsi,rbx
  409ff6:	mov    rdx,r15
  409ff9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  409ffe:	mov    rbx,rax
  40a001:	cmp    r13,rbx
  40a004:	je     40cfc1 <main@@Base+0x5ef1>
  40a00a:	mov    QWORD PTR [rsp+0x10],0x0
  40a013:	mov    DWORD PTR [rsp+0x20],0x0
  40a01b:	mov    BYTE PTR [rsp+0x4],0x0
  40a020:	cmp    rbx,r15
  40a023:	je     40a067 <main@@Base+0x2f97>
  40a025:	mov    rdi,r14
  40a028:	mov    rsi,rbx
  40a02b:	mov    rdx,r15
  40a02e:	lea    rcx,[rsp+0x20]
  40a033:	lea    r8,[rsp+0x10]
  40a038:	call   425c50 <flatcc_json_parser_integer@@Base>
  40a03d:	cmp    rax,rbx
  40a040:	je     40a06f <main@@Base+0x2f9f>
  40a042:	mov    r12,QWORD PTR [rsp+0x10]
  40a047:	cmp    DWORD PTR [rsp+0x20],0x0
  40a04c:	je     40a077 <main@@Base+0x2fa7>
  40a04e:	cmp    r12,0x81
  40a055:	jb     40a098 <main@@Base+0x2fc8>
  40a057:	mov    rdi,r14
  40a05a:	mov    rsi,rax
  40a05d:	mov    rdx,r15
  40a060:	mov    ecx,0x8
  40a065:	jmp    40a08e <main@@Base+0x2fbe>
  40a067:	xor    r12d,r12d
  40a06a:	mov    rax,r15
  40a06d:	jmp    40a0a0 <main@@Base+0x2fd0>
  40a06f:	xor    r12d,r12d
  40a072:	mov    rax,rbx
  40a075:	jmp    40a0a0 <main@@Base+0x2fd0>
  40a077:	cmp    r12,0x80
  40a07e:	jb     40a09b <main@@Base+0x2fcb>
  40a080:	mov    rdi,r14
  40a083:	mov    rsi,rax
  40a086:	mov    rdx,r15
  40a089:	mov    ecx,0x7
  40a08e:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a093:	xor    r12d,r12d
  40a096:	jmp    40a0a0 <main@@Base+0x2fd0>
  40a098:	neg    r12
  40a09b:	mov    BYTE PTR [rsp+0x4],r12b
  40a0a0:	mov    rbp,rax
  40a0a3:	cmp    rbx,rax
  40a0a6:	jne    40a0dc <main@@Base+0x300c>
  40a0a8:	mov    rdi,r14
  40a0ab:	mov    rsi,rbx
  40a0ae:	mov    rdx,r15
  40a0b1:	lea    rcx,[rip+0x39008]        # 4430c0 <__data_start@@Base+0x10>
  40a0b8:	lea    r8,[rsp+0x4]
  40a0bd:	call   412a10 <main@@Base+0xb940>
  40a0c2:	mov    rbp,rax
  40a0c5:	cmp    rax,rbx
  40a0c8:	je     410ce5 <main@@Base+0x9c15>
  40a0ce:	cmp    rbp,r15
  40a0d1:	je     410ce5 <main@@Base+0x9c15>
  40a0d7:	mov    r12b,BYTE PTR [rsp+0x4]
  40a0dc:	cmp    r12b,0x8
  40a0e0:	jne    40a0ed <main@@Base+0x301d>
  40a0e2:	test   BYTE PTR [r14+0x10],0x2
  40a0e7:	je     41044b <main@@Base+0x937b>
  40a0ed:	mov    rdi,QWORD PTR [r14]
  40a0f0:	mov    edx,0x1
  40a0f5:	mov    esi,0x6
  40a0fa:	mov    ecx,0x1
  40a0ff:	call   420a40 <flatcc_builder_table_add@@Base>
  40a104:	test   rax,rax
  40a107:	je     410ce5 <main@@Base+0x9c15>
  40a10d:	mov    BYTE PTR [rax],r12b
  40a110:	jmp    41044b <main@@Base+0x937b>
  40a115:	cmp    al,0x22
  40a117:	jne    41043a <main@@Base+0x936a>
  40a11d:	add    r13,0xb
  40a121:	mov    rax,r15
  40a124:	sub    rax,r13
  40a127:	cmp    rax,0x2
  40a12b:	jl     40a648 <main@@Base+0x3578>
  40a131:	cmp    BYTE PTR [r13+0x0],0x20
  40a136:	jg     40a659 <main@@Base+0x3589>
  40a13c:	jne    40a648 <main@@Base+0x3578>
  40a142:	cmp    BYTE PTR [r13+0x1],0x20
  40a147:	jle    40a648 <main@@Base+0x3578>
  40a14d:	inc    r13
  40a150:	cmp    r13,r15
  40a153:	jne    40a65e <main@@Base+0x358e>
  40a159:	jmp    40a6a8 <main@@Base+0x35d8>
  40a15e:	cmp    al,0x22
  40a160:	jne    41043a <main@@Base+0x936a>
  40a166:	add    r13,0x13
  40a16a:	mov    rax,r15
  40a16d:	sub    rax,r13
  40a170:	cmp    rax,0x2
  40a174:	jl     40a70f <main@@Base+0x363f>
  40a17a:	cmp    BYTE PTR [r13+0x0],0x20
  40a17f:	jg     40a720 <main@@Base+0x3650>
  40a185:	jne    40a70f <main@@Base+0x363f>
  40a18b:	cmp    BYTE PTR [r13+0x1],0x20
  40a190:	jle    40a70f <main@@Base+0x363f>
  40a196:	inc    r13
  40a199:	cmp    r13,r15
  40a19c:	jne    40a729 <main@@Base+0x3659>
  40a1a2:	jmp    40a83f <main@@Base+0x376f>
  40a1a7:	cmp    al,0x22
  40a1a9:	jne    41043a <main@@Base+0x936a>
  40a1af:	add    r13,0x18
  40a1b3:	mov    rax,r15
  40a1b6:	sub    rax,r13
  40a1b9:	cmp    rax,0x2
  40a1bd:	jl     40a777 <main@@Base+0x36a7>
  40a1c3:	cmp    BYTE PTR [r13+0x0],0x20
  40a1c8:	jg     40a788 <main@@Base+0x36b8>
  40a1ce:	jne    40a777 <main@@Base+0x36a7>
  40a1d4:	cmp    BYTE PTR [r13+0x1],0x20
  40a1d9:	jle    40a777 <main@@Base+0x36a7>
  40a1df:	inc    r13
  40a1e2:	cmp    r13,r15
  40a1e5:	jne    40a791 <main@@Base+0x36c1>
  40a1eb:	jmp    40a857 <main@@Base+0x3787>
  40a1f0:	cmp    al,0x22
  40a1f2:	jne    41043a <main@@Base+0x936a>
  40a1f8:	add    r13,0x12
  40a1fc:	mov    rax,r15
  40a1ff:	sub    rax,r13
  40a202:	cmp    rax,0x2
  40a206:	jl     40a7df <main@@Base+0x370f>
  40a20c:	cmp    BYTE PTR [r13+0x0],0x20
  40a211:	jg     40a7f0 <main@@Base+0x3720>
  40a217:	jne    40a7df <main@@Base+0x370f>
  40a21d:	cmp    BYTE PTR [r13+0x1],0x20
  40a222:	jle    40a7df <main@@Base+0x370f>
  40a228:	inc    r13
  40a22b:	cmp    r13,r15
  40a22e:	jne    40a7f5 <main@@Base+0x3725>
  40a234:	jmp    40a86f <main@@Base+0x379f>
  40a239:	mov    rdi,r14
  40a23c:	mov    rsi,rax
  40a23f:	mov    rdx,r15
  40a242:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a247:	cmp    r13,rax
  40a24a:	je     40cfc1 <main@@Base+0x5ef1>
  40a250:	mov    rdi,r14
  40a253:	mov    rsi,rax
  40a256:	mov    rdx,r15
  40a259:	lea    rcx,[rsp+0x1c]
  40a25e:	call   426120 <flatcc_json_parser_build_string@@Base>
  40a263:	mov    rbp,rax
  40a266:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a26b:	je     410ce5 <main@@Base+0x9c15>
  40a271:	mov    rdi,QWORD PTR [r14]
  40a274:	mov    esi,0x3
  40a279:	jmp    40af91 <main@@Base+0x3ec1>
  40a27e:	mov    rdi,r14
  40a281:	mov    rsi,rbx
  40a284:	mov    rdx,r15
  40a287:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a28c:	mov    rbx,rax
  40a28f:	cmp    r13,rbx
  40a292:	je     40cfc1 <main@@Base+0x5ef1>
  40a298:	mov    rdi,QWORD PTR [r14]
  40a29b:	mov    esi,0x1
  40a2a0:	mov    ecx,0xffffffff
  40a2a5:	mov    edx,0x1
  40a2aa:	call   41f250 <flatcc_builder_start_vector@@Base>
  40a2af:	test   eax,eax
  40a2b1:	jne    407c81 <main@@Base+0xbb1>
  40a2b7:	cmp    rbx,r15
  40a2ba:	je     40a2e7 <main@@Base+0x3217>
  40a2bc:	cmp    BYTE PTR [rbx],0x5b
  40a2bf:	jne    40a2e7 <main@@Base+0x3217>
  40a2c1:	lea    rax,[rbx+0x1]
  40a2c5:	mov    rcx,r15
  40a2c8:	sub    rcx,rax
  40a2cb:	cmp    rcx,0x2
  40a2cf:	jl     40a31e <main@@Base+0x324e>
  40a2d1:	cmp    BYTE PTR [rax],0x20
  40a2d4:	jg     40a32c <main@@Base+0x325c>
  40a2d6:	jne    40a31e <main@@Base+0x324e>
  40a2d8:	cmp    BYTE PTR [rbx+0x2],0x20
  40a2dc:	jle    40a31e <main@@Base+0x324e>
  40a2de:	add    rbx,0x2
  40a2e2:	mov    rax,rbx
  40a2e5:	jmp    40a32c <main@@Base+0x325c>
  40a2e7:	mov    rdi,r14
  40a2ea:	mov    rsi,rbx
  40a2ed:	mov    rdx,r15
  40a2f0:	mov    ecx,0x16
  40a2f5:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a2fa:	mov    rbp,rax
  40a2fd:	mov    rdi,QWORD PTR [r14]
  40a300:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40a305:	mov    DWORD PTR [rsp+0x1c],eax
  40a309:	test   eax,eax
  40a30b:	je     410ce5 <main@@Base+0x9c15>
  40a311:	mov    rdi,QWORD PTR [r14]
  40a314:	mov    esi,0x1e
  40a319:	jmp    40af91 <main@@Base+0x3ec1>
  40a31e:	mov    rdi,r14
  40a321:	mov    rsi,rax
  40a324:	mov    rdx,r15
  40a327:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a32c:	mov    rbx,r15
  40a32f:	cmp    rax,r15
  40a332:	je     40a36c <main@@Base+0x329c>
  40a334:	cmp    BYTE PTR [rax],0x5d
  40a337:	jne    40a369 <main@@Base+0x3299>
  40a339:	lea    rbp,[rax+0x1]
  40a33d:	mov    rcx,r15
  40a340:	sub    rcx,rbp
  40a343:	cmp    rcx,0x2
  40a347:	jl     40c714 <main@@Base+0x5644>
  40a34d:	cmp    BYTE PTR [rbp+0x0],0x20
  40a351:	jg     40a2fd <main@@Base+0x322d>
  40a353:	jne    40c714 <main@@Base+0x5644>
  40a359:	cmp    BYTE PTR [rax+0x2],0x20
  40a35d:	jle    40c714 <main@@Base+0x5644>
  40a363:	add    rax,0x2
  40a367:	jmp    40a2fa <main@@Base+0x322a>
  40a369:	mov    rbx,rax
  40a36c:	mov    BYTE PTR [rsp+0x4],0x0
  40a371:	mov    rdi,QWORD PTR [r14]
  40a374:	mov    esi,0x1
  40a379:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40a37e:	test   rax,rax
  40a381:	je     407c81 <main@@Base+0xbb1>
  40a387:	mov    rbp,rax
  40a38a:	mov    QWORD PTR [rsp+0x10],0x0
  40a393:	mov    DWORD PTR [rsp+0x20],0x0
  40a39b:	mov    BYTE PTR [rsp+0x4],0x0
  40a3a0:	cmp    rbx,r15
  40a3a3:	je     40a3d9 <main@@Base+0x3309>
  40a3a5:	mov    rdi,r14
  40a3a8:	mov    rsi,rbx
  40a3ab:	mov    rdx,r15
  40a3ae:	lea    rcx,[rsp+0x20]
  40a3b3:	lea    r8,[rsp+0x10]
  40a3b8:	call   425c50 <flatcc_json_parser_integer@@Base>
  40a3bd:	cmp    rax,rbx
  40a3c0:	je     40a3e5 <main@@Base+0x3315>
  40a3c2:	cmp    DWORD PTR [rsp+0x20],0x0
  40a3c7:	je     40a3f1 <main@@Base+0x3321>
  40a3c9:	mov    rdi,r14
  40a3cc:	mov    rsi,rax
  40a3cf:	mov    rdx,r15
  40a3d2:	mov    ecx,0x8
  40a3d7:	jmp    40a411 <main@@Base+0x3341>
  40a3d9:	xor    ecx,ecx
  40a3db:	mov    rax,r15
  40a3de:	cmp    rbx,rax
  40a3e1:	jne    40a44e <main@@Base+0x337e>
  40a3e3:	jmp    40a41d <main@@Base+0x334d>
  40a3e5:	xor    ecx,ecx
  40a3e7:	mov    rax,rbx
  40a3ea:	cmp    rbx,rax
  40a3ed:	jne    40a44e <main@@Base+0x337e>
  40a3ef:	jmp    40a41d <main@@Base+0x334d>
  40a3f1:	mov    rcx,QWORD PTR [rsp+0x10]
  40a3f6:	cmp    rcx,0x100
  40a3fd:	jb     40a503 <main@@Base+0x3433>
  40a403:	mov    rdi,r14
  40a406:	mov    rsi,rax
  40a409:	mov    rdx,r15
  40a40c:	mov    ecx,0x7
  40a411:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a416:	xor    ecx,ecx
  40a418:	cmp    rbx,rax
  40a41b:	jne    40a44e <main@@Base+0x337e>
  40a41d:	mov    rdi,r14
  40a420:	mov    rsi,rbx
  40a423:	mov    rdx,r15
  40a426:	lea    rcx,[rip+0x38cb3]        # 4430e0 <__data_start@@Base+0x30>
  40a42d:	lea    r8,[rsp+0x4]
  40a432:	call   412be0 <main@@Base+0xbb10>
  40a437:	cmp    rax,rbx
  40a43a:	je     410d13 <main@@Base+0x9c43>
  40a440:	cmp    rax,r15
  40a443:	je     410d13 <main@@Base+0x9c43>
  40a449:	movzx  ecx,BYTE PTR [rsp+0x4]
  40a44e:	mov    BYTE PTR [rbp+0x0],cl
  40a451:	mov    rcx,r15
  40a454:	sub    rcx,rax
  40a457:	cmp    rcx,0x2
  40a45b:	jl     40a477 <main@@Base+0x33a7>
  40a45d:	cmp    BYTE PTR [rax],0x20
  40a460:	jg     40a485 <main@@Base+0x33b5>
  40a462:	jne    40a477 <main@@Base+0x33a7>
  40a464:	cmp    BYTE PTR [rax+0x1],0x20
  40a468:	jle    40a477 <main@@Base+0x33a7>
  40a46a:	inc    rax
  40a46d:	cmp    rax,r15
  40a470:	jne    40a48e <main@@Base+0x33be>
  40a472:	jmp    40c6a9 <main@@Base+0x55d9>
  40a477:	mov    rdi,r14
  40a47a:	mov    rsi,rax
  40a47d:	mov    rdx,r15
  40a480:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a485:	cmp    rax,r15
  40a488:	je     40c6a9 <main@@Base+0x55d9>
  40a48e:	movzx  ecx,BYTE PTR [rax]
  40a491:	cmp    cl,0x2c
  40a494:	jne    40c6c2 <main@@Base+0x55f2>
  40a49a:	lea    rbx,[rax+0x1]
  40a49e:	mov    rcx,r15
  40a4a1:	sub    rcx,rbx
  40a4a4:	cmp    rcx,0x2
  40a4a8:	jl     40a4bd <main@@Base+0x33ed>
  40a4aa:	cmp    BYTE PTR [rbx],0x20
  40a4ad:	jg     40a4ce <main@@Base+0x33fe>
  40a4af:	jne    40a4bd <main@@Base+0x33ed>
  40a4b1:	cmp    BYTE PTR [rax+0x2],0x20
  40a4b5:	jle    40a4bd <main@@Base+0x33ed>
  40a4b7:	add    rax,0x2
  40a4bb:	jmp    40a4cb <main@@Base+0x33fb>
  40a4bd:	mov    rdi,r14
  40a4c0:	mov    rsi,rbx
  40a4c3:	mov    rdx,r15
  40a4c6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a4cb:	mov    rbx,rax
  40a4ce:	cmp    rbx,r15
  40a4d1:	je     40c6d3 <main@@Base+0x5603>
  40a4d7:	cmp    BYTE PTR [rbx],0x5d
  40a4da:	je     40c6e6 <main@@Base+0x5616>
  40a4e0:	mov    BYTE PTR [rsp+0x4],0x0
  40a4e5:	mov    rdi,QWORD PTR [r14]
  40a4e8:	mov    esi,0x1
  40a4ed:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40a4f2:	mov    rbp,rax
  40a4f5:	test   rax,rax
  40a4f8:	jne    40a38a <main@@Base+0x32ba>
  40a4fe:	jmp    407c81 <main@@Base+0xbb1>
  40a503:	mov    BYTE PTR [rsp+0x4],cl
  40a507:	cmp    rbx,rax
  40a50a:	jne    40a44e <main@@Base+0x337e>
  40a510:	jmp    40a41d <main@@Base+0x334d>
  40a515:	mov    rdi,r14
  40a518:	mov    rsi,rax
  40a51b:	mov    rdx,r15
  40a51e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a523:	movabs rdx,0x7465737400000000
  40a52d:	cmp    r13,rax
  40a530:	je     40a565 <main@@Base+0x3495>
  40a532:	mov    r9,QWORD PTR [rsp+0x40]
  40a537:	sub    rsp,0x8
  40a53b:	mov    rdi,r14
  40a53e:	mov    rsi,rax
  40a541:	mov    rdx,r15
  40a544:	mov    ecx,0x0
  40a549:	mov    r8d,0x8
  40a54f:	lea    rax,[rip+0x913a]        # 413690 <main@@Base+0xc5c0>
  40a556:	push   rax
  40a557:	call   4264b0 <flatcc_json_parser_union@@Base>
  40a55c:	add    rsp,0x10
  40a560:	jmp    410448 <main@@Base+0x9378>
  40a565:	lea    rax,[rdx+0x35000000]
  40a56c:	cmp    rbx,rax
  40a56f:	jne    40ae6e <main@@Base+0x3d9e>
  40a575:	mov    rbx,r13
  40a578:	cmp    r12,0x6
  40a57c:	jl     40adff <main@@Base+0x3d2f>
  40a582:	mov    rax,QWORD PTR [rsp+0x8]
  40a587:	cmp    DWORD PTR [rax],0x0
  40a58a:	mov    al,BYTE PTR [r13+0x5]
  40a58e:	je     40a5b0 <main@@Base+0x34e0>
  40a590:	cmp    al,0x21
  40a592:	jl     40a59f <main@@Base+0x34cf>
  40a594:	mov    rbx,r13
  40a597:	cmp    al,0x3a
  40a599:	jne    40adff <main@@Base+0x3d2f>
  40a59f:	lea    rsi,[r13+0x5]
  40a5a3:	mov    rax,QWORD PTR [rsp+0x8]
  40a5a8:	mov    DWORD PTR [rax],0x0
  40a5ae:	jmp    40a5bf <main@@Base+0x34ef>
  40a5b0:	mov    rbx,r13
  40a5b3:	cmp    al,0x22
  40a5b5:	jne    40adff <main@@Base+0x3d2f>
  40a5bb:	lea    rsi,[r13+0x6]
  40a5bf:	mov    rax,r15
  40a5c2:	sub    rax,rsi
  40a5c5:	cmp    rax,0x2
  40a5c9:	jl     40a5e2 <main@@Base+0x3512>
  40a5cb:	cmp    BYTE PTR [rsi],0x20
  40a5ce:	jg     40a5f0 <main@@Base+0x3520>
  40a5d0:	jne    40a5e2 <main@@Base+0x3512>
  40a5d2:	cmp    BYTE PTR [rsi+0x1],0x20
  40a5d6:	jle    40a5e2 <main@@Base+0x3512>
  40a5d8:	inc    rsi
  40a5db:	cmp    rsi,r15
  40a5de:	jne    40a5f5 <main@@Base+0x3525>
  40a5e0:	jmp    40a633 <main@@Base+0x3563>
  40a5e2:	mov    rdi,r14
  40a5e5:	mov    rdx,r15
  40a5e8:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a5ed:	mov    rsi,rax
  40a5f0:	cmp    rsi,r15
  40a5f3:	je     40a633 <main@@Base+0x3563>
  40a5f5:	cmp    BYTE PTR [rsi],0x3a
  40a5f8:	jne    40a633 <main@@Base+0x3563>
  40a5fa:	lea    rbx,[rsi+0x1]
  40a5fe:	mov    rax,r15
  40a601:	sub    rax,rbx
  40a604:	cmp    rax,0x2
  40a608:	jl     40ade4 <main@@Base+0x3d14>
  40a60e:	cmp    BYTE PTR [rbx],0x20
  40a611:	jg     40adf5 <main@@Base+0x3d25>
  40a617:	jne    40ade4 <main@@Base+0x3d14>
  40a61d:	cmp    BYTE PTR [rsi+0x2],0x20
  40a621:	jle    40ade4 <main@@Base+0x3d14>
  40a627:	add    rsi,0x2
  40a62b:	mov    rbx,rsi
  40a62e:	jmp    40adf5 <main@@Base+0x3d25>
  40a633:	mov    rdi,r14
  40a636:	mov    rdx,r15
  40a639:	mov    ecx,0x4
  40a63e:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a643:	jmp    40adf2 <main@@Base+0x3d22>
  40a648:	mov    rdi,r14
  40a64b:	mov    rsi,r13
  40a64e:	mov    rdx,r15
  40a651:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a656:	mov    r13,rax
  40a659:	cmp    r13,r15
  40a65c:	je     40a6a8 <main@@Base+0x35d8>
  40a65e:	cmp    BYTE PTR [r13+0x0],0x3a
  40a663:	jne    40a6a8 <main@@Base+0x35d8>
  40a665:	lea    rbx,[r13+0x1]
  40a669:	mov    rax,r15
  40a66c:	sub    rax,rbx
  40a66f:	cmp    rax,0x2
  40a673:	jl     40caba <main@@Base+0x59ea>
  40a679:	cmp    BYTE PTR [rbx],0x20
  40a67c:	jg     40cacb <main@@Base+0x59fb>
  40a682:	jne    40caba <main@@Base+0x59ea>
  40a688:	cmp    BYTE PTR [r13+0x2],0x20
  40a68d:	jle    40caba <main@@Base+0x59ea>
  40a693:	add    r13,0x2
  40a697:	mov    rbx,r13
  40a69a:	cmp    r12,rbx
  40a69d:	jne    40cad4 <main@@Base+0x5a04>
  40a6a3:	jmp    41043a <main@@Base+0x936a>
  40a6a8:	mov    rdi,r14
  40a6ab:	mov    rsi,r13
  40a6ae:	mov    rdx,r15
  40a6b1:	mov    ecx,0x4
  40a6b6:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a6bb:	jmp    40cac8 <main@@Base+0x59f8>
  40a6c0:	mov    rbp,r15
  40a6c3:	jmp    409a03 <main@@Base+0x2933>
  40a6c8:	cmp    cl,0x5d
  40a6cb:	jne    40c57f <main@@Base+0x54af>
  40a6d1:	lea    rbp,[rax+0x1]
  40a6d5:	mov    rcx,r15
  40a6d8:	sub    rcx,rbp
  40a6db:	cmp    rcx,0x2
  40a6df:	jl     40a6f1 <main@@Base+0x3621>
  40a6e1:	cmp    BYTE PTR [rbp+0x0],0x20
  40a6e5:	jg     409a03 <main@@Base+0x2933>
  40a6eb:	je     409a5f <main@@Base+0x298f>
  40a6f1:	mov    rdi,r14
  40a6f4:	mov    rsi,rbp
  40a6f7:	mov    rdx,r15
  40a6fa:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a6ff:	jmp    409a00 <main@@Base+0x2930>
  40a704:	mov    rdi,r14
  40a707:	mov    rsi,r15
  40a70a:	jmp    40c585 <main@@Base+0x54b5>
  40a70f:	mov    rdi,r14
  40a712:	mov    rsi,r13
  40a715:	mov    rdx,r15
  40a718:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a71d:	mov    r13,rax
  40a720:	cmp    r13,r15
  40a723:	je     40a83f <main@@Base+0x376f>
  40a729:	cmp    BYTE PTR [r13+0x0],0x3a
  40a72e:	jne    40a83f <main@@Base+0x376f>
  40a734:	lea    rbx,[r13+0x1]
  40a738:	mov    rax,r15
  40a73b:	sub    rax,rbx
  40a73e:	cmp    rax,0x2
  40a742:	jl     40cbf1 <main@@Base+0x5b21>
  40a748:	cmp    BYTE PTR [rbx],0x20
  40a74b:	jg     40cc02 <main@@Base+0x5b32>
  40a751:	jne    40cbf1 <main@@Base+0x5b21>
  40a757:	cmp    BYTE PTR [r13+0x2],0x20
  40a75c:	jle    40cbf1 <main@@Base+0x5b21>
  40a762:	add    r13,0x2
  40a766:	mov    rbx,r13
  40a769:	cmp    r12,rbx
  40a76c:	jne    40cc0b <main@@Base+0x5b3b>
  40a772:	jmp    41043a <main@@Base+0x936a>
  40a777:	mov    rdi,r14
  40a77a:	mov    rsi,r13
  40a77d:	mov    rdx,r15
  40a780:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a785:	mov    r13,rax
  40a788:	cmp    r13,r15
  40a78b:	je     40a857 <main@@Base+0x3787>
  40a791:	cmp    BYTE PTR [r13+0x0],0x3a
  40a796:	jne    40a857 <main@@Base+0x3787>
  40a79c:	lea    rbx,[r13+0x1]
  40a7a0:	mov    rax,r15
  40a7a3:	sub    rax,rbx
  40a7a6:	cmp    rax,0x2
  40a7aa:	jl     40cc95 <main@@Base+0x5bc5>
  40a7b0:	cmp    BYTE PTR [rbx],0x20
  40a7b3:	jg     40cca6 <main@@Base+0x5bd6>
  40a7b9:	jne    40cc95 <main@@Base+0x5bc5>
  40a7bf:	cmp    BYTE PTR [r13+0x2],0x20
  40a7c4:	jle    40cc95 <main@@Base+0x5bc5>
  40a7ca:	add    r13,0x2
  40a7ce:	mov    rbx,r13
  40a7d1:	cmp    r12,rbx
  40a7d4:	jne    40ccaf <main@@Base+0x5bdf>
  40a7da:	jmp    41043a <main@@Base+0x936a>
  40a7df:	mov    rdi,r14
  40a7e2:	mov    rsi,r13
  40a7e5:	mov    rdx,r15
  40a7e8:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a7ed:	mov    r13,rax
  40a7f0:	cmp    r13,r15
  40a7f3:	je     40a86f <main@@Base+0x379f>
  40a7f5:	cmp    BYTE PTR [r13+0x0],0x3a
  40a7fa:	jne    40a86f <main@@Base+0x379f>
  40a7fc:	lea    rbx,[r13+0x1]
  40a800:	mov    rax,r15
  40a803:	sub    rax,rbx
  40a806:	cmp    rax,0x2
  40a80a:	jl     40cd48 <main@@Base+0x5c78>
  40a810:	cmp    BYTE PTR [rbx],0x20
  40a813:	jg     40cd59 <main@@Base+0x5c89>
  40a819:	jne    40cd48 <main@@Base+0x5c78>
  40a81f:	cmp    BYTE PTR [r13+0x2],0x20
  40a824:	jle    40cd48 <main@@Base+0x5c78>
  40a82a:	add    r13,0x2
  40a82e:	mov    rbx,r13
  40a831:	cmp    r12,rbx
  40a834:	jne    40cd62 <main@@Base+0x5c92>
  40a83a:	jmp    41043a <main@@Base+0x936a>
  40a83f:	mov    rdi,r14
  40a842:	mov    rsi,r13
  40a845:	mov    rdx,r15
  40a848:	mov    ecx,0x4
  40a84d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a852:	jmp    40cbff <main@@Base+0x5b2f>
  40a857:	mov    rdi,r14
  40a85a:	mov    rsi,r13
  40a85d:	mov    rdx,r15
  40a860:	mov    ecx,0x4
  40a865:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a86a:	jmp    40cca3 <main@@Base+0x5bd3>
  40a86f:	mov    rdi,r14
  40a872:	mov    rsi,r13
  40a875:	mov    rdx,r15
  40a878:	mov    ecx,0x4
  40a87d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40a882:	jmp    40cd56 <main@@Base+0x5c86>
  40a887:	mov    rbx,r13
  40a88a:	cmp    al,0x22
  40a88c:	jne    40ce08 <main@@Base+0x5d38>
  40a892:	lea    rsi,[r13+0x5]
  40a896:	mov    rax,r15
  40a899:	sub    rax,rsi
  40a89c:	cmp    rax,0x2
  40a8a0:	jl     40a9f1 <main@@Base+0x3921>
  40a8a6:	cmp    BYTE PTR [rsi],0x20
  40a8a9:	jg     40a9ff <main@@Base+0x392f>
  40a8af:	jne    40a9f1 <main@@Base+0x3921>
  40a8b5:	cmp    BYTE PTR [rsi+0x1],0x20
  40a8b9:	jle    40a9f1 <main@@Base+0x3921>
  40a8bf:	inc    rsi
  40a8c2:	cmp    rsi,r15
  40a8c5:	jne    40aa08 <main@@Base+0x3938>
  40a8cb:	jmp    40aaad <main@@Base+0x39dd>
  40a8d0:	mov    rbx,r13
  40a8d3:	cmp    al,0x22
  40a8d5:	jne    40cf37 <main@@Base+0x5e67>
  40a8db:	lea    rsi,[r13+0x6]
  40a8df:	mov    rax,r15
  40a8e2:	sub    rax,rsi
  40a8e5:	cmp    rax,0x2
  40a8e9:	jl     40aa53 <main@@Base+0x3983>
  40a8ef:	cmp    BYTE PTR [rsi],0x20
  40a8f2:	jg     40aa61 <main@@Base+0x3991>
  40a8f8:	jne    40aa53 <main@@Base+0x3983>
  40a8fe:	cmp    BYTE PTR [rsi+0x1],0x20
  40a902:	jle    40aa53 <main@@Base+0x3983>
  40a908:	inc    rsi
  40a90b:	cmp    rsi,r15
  40a90e:	jne    40aa66 <main@@Base+0x3996>
  40a914:	jmp    40aac2 <main@@Base+0x39f2>
  40a919:	cmp    al,0x22
  40a91b:	jne    40ab7d <main@@Base+0x3aad>
  40a921:	lea    rsi,[r13+0x11]
  40a925:	mov    rax,r15
  40a928:	sub    rax,rsi
  40a92b:	cmp    rax,0x2
  40a92f:	jl     40ab20 <main@@Base+0x3a50>
  40a935:	cmp    BYTE PTR [rsi],0x20
  40a938:	jg     40ab2e <main@@Base+0x3a5e>
  40a93e:	jne    40ab20 <main@@Base+0x3a50>
  40a944:	cmp    BYTE PTR [rsi+0x1],0x20
  40a948:	jle    40ab20 <main@@Base+0x3a50>
  40a94e:	inc    rsi
  40a951:	cmp    rsi,r15
  40a954:	jne    40ab37 <main@@Base+0x3a67>
  40a95a:	jmp    40ad26 <main@@Base+0x3c56>
  40a95f:	cmp    al,0x22
  40a961:	jne    41043a <main@@Base+0x936a>
  40a967:	add    r13,0xa
  40a96b:	mov    rax,r15
  40a96e:	sub    rax,r13
  40a971:	cmp    rax,0x2
  40a975:	jl     40ac5e <main@@Base+0x3b8e>
  40a97b:	cmp    BYTE PTR [r13+0x0],0x20
  40a980:	jg     40ac6f <main@@Base+0x3b9f>
  40a986:	jne    40ac5e <main@@Base+0x3b8e>
  40a98c:	cmp    BYTE PTR [r13+0x1],0x20
  40a991:	jle    40ac5e <main@@Base+0x3b8e>
  40a997:	inc    r13
  40a99a:	cmp    r13,r15
  40a99d:	jne    40ac78 <main@@Base+0x3ba8>
  40a9a3:	jmp    40ad3b <main@@Base+0x3c6b>
  40a9a8:	cmp    al,0x22
  40a9aa:	jne    41043a <main@@Base+0x936a>
  40a9b0:	add    r13,0xa
  40a9b4:	mov    rax,r15
  40a9b7:	sub    rax,r13
  40a9ba:	cmp    rax,0x2
  40a9be:	jl     40acc6 <main@@Base+0x3bf6>
  40a9c4:	cmp    BYTE PTR [r13+0x0],0x20
  40a9c9:	jg     40acd7 <main@@Base+0x3c07>
  40a9cf:	jne    40acc6 <main@@Base+0x3bf6>
  40a9d5:	cmp    BYTE PTR [r13+0x1],0x20
  40a9da:	jle    40acc6 <main@@Base+0x3bf6>
  40a9e0:	inc    r13
  40a9e3:	cmp    r13,r15
  40a9e6:	jne    40acdc <main@@Base+0x3c0c>
  40a9ec:	jmp    40ad53 <main@@Base+0x3c83>
  40a9f1:	mov    rdi,r14
  40a9f4:	mov    rdx,r15
  40a9f7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40a9fc:	mov    rsi,rax
  40a9ff:	cmp    rsi,r15
  40aa02:	je     40aaad <main@@Base+0x39dd>
  40aa08:	cmp    BYTE PTR [rsi],0x3a
  40aa0b:	jne    40aaad <main@@Base+0x39dd>
  40aa11:	lea    rbx,[rsi+0x1]
  40aa15:	mov    rax,r15
  40aa18:	sub    rax,rbx
  40aa1b:	cmp    rax,0x2
  40aa1f:	jl     40cdf7 <main@@Base+0x5d27>
  40aa25:	cmp    BYTE PTR [rbx],0x20
  40aa28:	jg     40ce08 <main@@Base+0x5d38>
  40aa2e:	jne    40cdf7 <main@@Base+0x5d27>
  40aa34:	cmp    BYTE PTR [rsi+0x2],0x20
  40aa38:	jle    40cdf7 <main@@Base+0x5d27>
  40aa3e:	add    rsi,0x2
  40aa42:	mov    rbx,rsi
  40aa45:	cmp    r13,rbx
  40aa48:	jne    40ce11 <main@@Base+0x5d41>
  40aa4e:	jmp    40cfc1 <main@@Base+0x5ef1>
  40aa53:	mov    rdi,r14
  40aa56:	mov    rdx,r15
  40aa59:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40aa5e:	mov    rsi,rax
  40aa61:	cmp    rsi,r15
  40aa64:	je     40aac2 <main@@Base+0x39f2>
  40aa66:	cmp    BYTE PTR [rsi],0x3a
  40aa69:	jne    40aac2 <main@@Base+0x39f2>
  40aa6b:	lea    rbx,[rsi+0x1]
  40aa6f:	mov    rax,r15
  40aa72:	sub    rax,rbx
  40aa75:	cmp    rax,0x2
  40aa79:	jl     40cf26 <main@@Base+0x5e56>
  40aa7f:	cmp    BYTE PTR [rbx],0x20
  40aa82:	jg     40cf37 <main@@Base+0x5e67>
  40aa88:	jne    40cf26 <main@@Base+0x5e56>
  40aa8e:	cmp    BYTE PTR [rsi+0x2],0x20
  40aa92:	jle    40cf26 <main@@Base+0x5e56>
  40aa98:	add    rsi,0x2
  40aa9c:	mov    rbx,rsi
  40aa9f:	cmp    r13,rbx
  40aaa2:	jne    40cf40 <main@@Base+0x5e70>
  40aaa8:	jmp    40cfc1 <main@@Base+0x5ef1>
  40aaad:	mov    rdi,r14
  40aab0:	mov    rdx,r15
  40aab3:	mov    ecx,0x4
  40aab8:	call   424090 <flatcc_json_parser_set_error@@Base>
  40aabd:	jmp    40ce05 <main@@Base+0x5d35>
  40aac2:	mov    rdi,r14
  40aac5:	mov    rdx,r15
  40aac8:	mov    ecx,0x4
  40aacd:	call   424090 <flatcc_json_parser_set_error@@Base>
  40aad2:	jmp    40cf34 <main@@Base+0x5e64>
  40aad7:	cmp    al,0x22
  40aad9:	jne    41043a <main@@Base+0x936a>
  40aadf:	add    r13,0x16
  40aae3:	mov    rax,r15
  40aae6:	sub    rax,r13
  40aae9:	cmp    rax,0x2
  40aaed:	jl     40ad6b <main@@Base+0x3c9b>
  40aaf3:	cmp    BYTE PTR [r13+0x0],0x20
  40aaf8:	jg     40ad7c <main@@Base+0x3cac>
  40aafe:	jne    40ad6b <main@@Base+0x3c9b>
  40ab04:	cmp    BYTE PTR [r13+0x1],0x20
  40ab09:	jle    40ad6b <main@@Base+0x3c9b>
  40ab0f:	inc    r13
  40ab12:	cmp    r13,r15
  40ab15:	jne    40ad81 <main@@Base+0x3cb1>
  40ab1b:	jmp    40adcc <main@@Base+0x3cfc>
  40ab20:	mov    rdi,r14
  40ab23:	mov    rdx,r15
  40ab26:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ab2b:	mov    rsi,rax
  40ab2e:	cmp    rsi,r15
  40ab31:	je     40ad26 <main@@Base+0x3c56>
  40ab37:	cmp    BYTE PTR [rsi],0x3a
  40ab3a:	jne    40ad26 <main@@Base+0x3c56>
  40ab40:	lea    rcx,[rsi+0x1]
  40ab44:	mov    rax,r15
  40ab47:	sub    rax,rcx
  40ab4a:	cmp    rax,0x2
  40ab4e:	jl     40cfcc <main@@Base+0x5efc>
  40ab54:	cmp    BYTE PTR [rcx],0x20
  40ab57:	jg     40cfdd <main@@Base+0x5f0d>
  40ab5d:	jne    40cfcc <main@@Base+0x5efc>
  40ab63:	cmp    BYTE PTR [rsi+0x2],0x20
  40ab67:	jle    40cfcc <main@@Base+0x5efc>
  40ab6d:	add    rsi,0x2
  40ab71:	mov    rcx,rsi
  40ab74:	cmp    r12,rcx
  40ab77:	jne    40cfe6 <main@@Base+0x5f16>
  40ab7d:	lea    r12,[r13+0x10]
  40ab81:	mov    rax,r15
  40ab84:	sub    rax,r12
  40ab87:	cmp    rax,0x8
  40ab8b:	jb     40ab95 <main@@Base+0x3ac5>
  40ab8d:	movbe  rcx,QWORD PTR [r12]
  40ab93:	jmp    40ac14 <main@@Base+0x3b44>
  40ab95:	lea    rcx,[rax-0x1]
  40ab99:	cmp    rcx,0x6
  40ab9d:	ja     41043a <main@@Base+0x936a>
  40aba3:	lea    rdx,[rip+0x2954a]        # 4340f4 <_IO_stdin_used@@Base+0xf4>
  40abaa:	mov    rsi,rdx
  40abad:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40abb1:	add    rdx,rsi
  40abb4:	xor    r8d,r8d
  40abb7:	xor    ecx,ecx
  40abb9:	xor    esi,esi
  40abbb:	xor    edi,edi
  40abbd:	xor    ebp,ebp
  40abbf:	xor    ebx,ebx
  40abc1:	jmp    rdx
  40abc3:	movsx  r8,BYTE PTR [r13+0x16]
  40abc8:	shl    r8,0x8
  40abcc:	movsx  rcx,BYTE PTR [r13+0x15]
  40abd1:	shl    rcx,0x10
  40abd5:	or     rcx,r8
  40abd8:	movsx  rsi,BYTE PTR [r13+0x14]
  40abdd:	shl    rsi,0x18
  40abe1:	or     rsi,rcx
  40abe4:	movsx  rdi,BYTE PTR [r13+0x13]
  40abe9:	shl    rdi,0x20
  40abed:	or     rdi,rsi
  40abf0:	movsx  rbp,BYTE PTR [r13+0x12]
  40abf5:	shl    rbp,0x28
  40abf9:	or     rbp,rdi
  40abfc:	movsx  rbx,BYTE PTR [r13+0x11]
  40ac01:	shl    rbx,0x30
  40ac05:	or     rbx,rbp
  40ac08:	movzx  ecx,BYTE PTR [r12]
  40ac0d:	shl    rcx,0x38
  40ac11:	or     rcx,rbx
  40ac14:	shr    rcx,0x38
  40ac18:	cmp    rcx,0x61
  40ac1c:	jne    41043a <main@@Base+0x936a>
  40ac22:	cmp    rax,0x2
  40ac26:	jl     41043a <main@@Base+0x936a>
  40ac2c:	mov    rax,QWORD PTR [rsp+0x8]
  40ac31:	cmp    DWORD PTR [rax],0x0
  40ac34:	mov    al,BYTE PTR [r13+0x11]
  40ac38:	je     40ca5e <main@@Base+0x598e>
  40ac3e:	cmp    al,0x21
  40ac40:	jl     40ac4a <main@@Base+0x3b7a>
  40ac42:	cmp    al,0x3a
  40ac44:	jne    41043a <main@@Base+0x936a>
  40ac4a:	add    r13,0x11
  40ac4e:	mov    rax,QWORD PTR [rsp+0x8]
  40ac53:	mov    DWORD PTR [rax],0x0
  40ac59:	jmp    40ca6a <main@@Base+0x599a>
  40ac5e:	mov    rdi,r14
  40ac61:	mov    rsi,r13
  40ac64:	mov    rdx,r15
  40ac67:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ac6c:	mov    r13,rax
  40ac6f:	cmp    r13,r15
  40ac72:	je     40ad3b <main@@Base+0x3c6b>
  40ac78:	cmp    BYTE PTR [r13+0x0],0x3a
  40ac7d:	jne    40ad3b <main@@Base+0x3c6b>
  40ac83:	lea    rbx,[r13+0x1]
  40ac87:	mov    rax,r15
  40ac8a:	sub    rax,rbx
  40ac8d:	cmp    rax,0x2
  40ac91:	jl     40d076 <main@@Base+0x5fa6>
  40ac97:	cmp    BYTE PTR [rbx],0x20
  40ac9a:	jg     40d087 <main@@Base+0x5fb7>
  40aca0:	jne    40d076 <main@@Base+0x5fa6>
  40aca6:	cmp    BYTE PTR [r13+0x2],0x20
  40acab:	jle    40d076 <main@@Base+0x5fa6>
  40acb1:	add    r13,0x2
  40acb5:	mov    rbx,r13
  40acb8:	cmp    r12,rbx
  40acbb:	jne    40d090 <main@@Base+0x5fc0>
  40acc1:	jmp    41043a <main@@Base+0x936a>
  40acc6:	mov    rdi,r14
  40acc9:	mov    rsi,r13
  40accc:	mov    rdx,r15
  40accf:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40acd4:	mov    r13,rax
  40acd7:	cmp    r13,r15
  40acda:	je     40ad53 <main@@Base+0x3c83>
  40acdc:	cmp    BYTE PTR [r13+0x0],0x3a
  40ace1:	jne    40ad53 <main@@Base+0x3c83>
  40ace3:	lea    rbx,[r13+0x1]
  40ace7:	mov    rax,r15
  40acea:	sub    rax,rbx
  40aced:	cmp    rax,0x2
  40acf1:	jl     40d0f8 <main@@Base+0x6028>
  40acf7:	cmp    BYTE PTR [rbx],0x20
  40acfa:	jg     40d109 <main@@Base+0x6039>
  40ad00:	jne    40d0f8 <main@@Base+0x6028>
  40ad06:	cmp    BYTE PTR [r13+0x2],0x20
  40ad0b:	jle    40d0f8 <main@@Base+0x6028>
  40ad11:	add    r13,0x2
  40ad15:	mov    rbx,r13
  40ad18:	cmp    r12,rbx
  40ad1b:	jne    40d112 <main@@Base+0x6042>
  40ad21:	jmp    41043a <main@@Base+0x936a>
  40ad26:	mov    rdi,r14
  40ad29:	mov    rdx,r15
  40ad2c:	mov    ecx,0x4
  40ad31:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ad36:	jmp    40cfda <main@@Base+0x5f0a>
  40ad3b:	mov    rdi,r14
  40ad3e:	mov    rsi,r13
  40ad41:	mov    rdx,r15
  40ad44:	mov    ecx,0x4
  40ad49:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ad4e:	jmp    40d084 <main@@Base+0x5fb4>
  40ad53:	mov    rdi,r14
  40ad56:	mov    rsi,r13
  40ad59:	mov    rdx,r15
  40ad5c:	mov    ecx,0x4
  40ad61:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ad66:	jmp    40d106 <main@@Base+0x6036>
  40ad6b:	mov    rdi,r14
  40ad6e:	mov    rsi,r13
  40ad71:	mov    rdx,r15
  40ad74:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ad79:	mov    r13,rax
  40ad7c:	cmp    r13,r15
  40ad7f:	je     40adcc <main@@Base+0x3cfc>
  40ad81:	cmp    BYTE PTR [r13+0x0],0x3a
  40ad86:	jne    40adcc <main@@Base+0x3cfc>
  40ad88:	lea    rbp,[r13+0x1]
  40ad8c:	mov    rax,r15
  40ad8f:	sub    rax,rbp
  40ad92:	cmp    rax,0x2
  40ad96:	jl     40d200 <main@@Base+0x6130>
  40ad9c:	cmp    BYTE PTR [rbp+0x0],0x20
  40ada0:	jg     40d211 <main@@Base+0x6141>
  40ada6:	jne    40d200 <main@@Base+0x6130>
  40adac:	cmp    BYTE PTR [r13+0x2],0x20
  40adb1:	jle    40d200 <main@@Base+0x6130>
  40adb7:	add    r13,0x2
  40adbb:	mov    rbp,r13
  40adbe:	cmp    r12,rbp
  40adc1:	jne    40d21a <main@@Base+0x614a>
  40adc7:	jmp    41043a <main@@Base+0x936a>
  40adcc:	mov    rdi,r14
  40adcf:	mov    rsi,r13
  40add2:	mov    rdx,r15
  40add5:	mov    ecx,0x4
  40adda:	call   424090 <flatcc_json_parser_set_error@@Base>
  40addf:	jmp    40d20e <main@@Base+0x613e>
  40ade4:	mov    rdi,r14
  40ade7:	mov    rsi,rbx
  40adea:	mov    rdx,r15
  40aded:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40adf2:	mov    rbx,rax
  40adf5:	movabs rdx,0x7465737400000000
  40adff:	cmp    r13,rbx
  40ae02:	je     40ae6e <main@@Base+0x3d9e>
  40ae04:	mov    rdi,QWORD PTR [r14]
  40ae07:	mov    esi,0x4
  40ae0c:	mov    ecx,0x3fffffff
  40ae11:	mov    edx,0x2
  40ae16:	call   41f250 <flatcc_builder_start_vector@@Base>
  40ae1b:	test   eax,eax
  40ae1d:	jne    407c81 <main@@Base+0xbb1>
  40ae23:	cmp    rbx,r15
  40ae26:	je     40af5f <main@@Base+0x3e8f>
  40ae2c:	cmp    BYTE PTR [rbx],0x5b
  40ae2f:	jne    40af5f <main@@Base+0x3e8f>
  40ae35:	lea    rax,[rbx+0x1]
  40ae39:	mov    rcx,r15
  40ae3c:	sub    rcx,rax
  40ae3f:	cmp    rcx,0x2
  40ae43:	jl     40afaa <main@@Base+0x3eda>
  40ae49:	cmp    BYTE PTR [rax],0x20
  40ae4c:	jg     40afb8 <main@@Base+0x3ee8>
  40ae52:	jne    40afaa <main@@Base+0x3eda>
  40ae58:	cmp    BYTE PTR [rbx+0x2],0x20
  40ae5c:	jle    40afaa <main@@Base+0x3eda>
  40ae62:	add    rbx,0x2
  40ae66:	mov    rax,rbx
  40ae69:	jmp    40afb8 <main@@Base+0x3ee8>
  40ae6e:	lea    rax,[rdx+0x5f747970]
  40ae75:	cmp    rbp,rax
  40ae78:	jne    40cfc1 <main@@Base+0x5ef1>
  40ae7e:	lea    r12,[r13+0x8]
  40ae82:	mov    rax,r15
  40ae85:	sub    rax,r12
  40ae88:	cmp    rax,0x8
  40ae8c:	jb     40ae96 <main@@Base+0x3dc6>
  40ae8e:	movbe  rcx,QWORD PTR [r12]
  40ae94:	jmp    40af15 <main@@Base+0x3e45>
  40ae96:	lea    rcx,[rax-0x1]
  40ae9a:	cmp    rcx,0x6
  40ae9e:	ja     41043a <main@@Base+0x936a>
  40aea4:	lea    rdx,[rip+0x2937d]        # 434228 <_IO_stdin_used@@Base+0x228>
  40aeab:	mov    rsi,rdx
  40aeae:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40aeb2:	add    rdx,rsi
  40aeb5:	xor    r8d,r8d
  40aeb8:	xor    ecx,ecx
  40aeba:	xor    esi,esi
  40aebc:	xor    edi,edi
  40aebe:	xor    ebp,ebp
  40aec0:	xor    ebx,ebx
  40aec2:	jmp    rdx
  40aec4:	movsx  r8,BYTE PTR [r13+0xe]
  40aec9:	shl    r8,0x8
  40aecd:	movsx  rcx,BYTE PTR [r13+0xd]
  40aed2:	shl    rcx,0x10
  40aed6:	or     rcx,r8
  40aed9:	movsx  rsi,BYTE PTR [r13+0xc]
  40aede:	shl    rsi,0x18
  40aee2:	or     rsi,rcx
  40aee5:	movsx  rdi,BYTE PTR [r13+0xb]
  40aeea:	shl    rdi,0x20
  40aeee:	or     rdi,rsi
  40aef1:	movsx  rbp,BYTE PTR [r13+0xa]
  40aef6:	shl    rbp,0x28
  40aefa:	or     rbp,rdi
  40aefd:	movsx  rbx,BYTE PTR [r13+0x9]
  40af02:	shl    rbx,0x30
  40af06:	or     rbx,rbp
  40af09:	movzx  ecx,BYTE PTR [r12]
  40af0e:	shl    rcx,0x38
  40af12:	or     rcx,rbx
  40af15:	shr    rcx,0x38
  40af19:	cmp    rcx,0x65
  40af1d:	jne    41043a <main@@Base+0x936a>
  40af23:	cmp    rax,0x2
  40af27:	jl     41043a <main@@Base+0x936a>
  40af2d:	mov    rax,QWORD PTR [rsp+0x8]
  40af32:	cmp    DWORD PTR [rax],0x0
  40af35:	mov    al,BYTE PTR [r13+0x9]
  40af39:	je     40b000 <main@@Base+0x3f30>
  40af3f:	cmp    al,0x21
  40af41:	jl     40af4b <main@@Base+0x3e7b>
  40af43:	cmp    al,0x3a
  40af45:	jne    41043a <main@@Base+0x936a>
  40af4b:	add    r13,0x9
  40af4f:	mov    rax,QWORD PTR [rsp+0x8]
  40af54:	mov    DWORD PTR [rax],0x0
  40af5a:	jmp    40b00c <main@@Base+0x3f3c>
  40af5f:	mov    rdi,r14
  40af62:	mov    rsi,rbx
  40af65:	mov    rdx,r15
  40af68:	mov    ecx,0x16
  40af6d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40af72:	mov    rbp,rax
  40af75:	mov    rdi,QWORD PTR [r14]
  40af78:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40af7d:	mov    DWORD PTR [rsp+0x1c],eax
  40af81:	test   eax,eax
  40af83:	je     410ce5 <main@@Base+0x9c15>
  40af89:	mov    rdi,QWORD PTR [r14]
  40af8c:	mov    esi,0x1f
  40af91:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  40af96:	test   rax,rax
  40af99:	je     410ce5 <main@@Base+0x9c15>
  40af9f:	mov    ecx,DWORD PTR [rsp+0x1c]
  40afa3:	mov    DWORD PTR [rax],ecx
  40afa5:	jmp    41044b <main@@Base+0x937b>
  40afaa:	mov    rdi,r14
  40afad:	mov    rsi,rax
  40afb0:	mov    rdx,r15
  40afb3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40afb8:	mov    rbx,r15
  40afbb:	cmp    rax,r15
  40afbe:	je     40b0b6 <main@@Base+0x3fe6>
  40afc4:	cmp    BYTE PTR [rax],0x5d
  40afc7:	jne    40b0b3 <main@@Base+0x3fe3>
  40afcd:	lea    rbp,[rax+0x1]
  40afd1:	mov    rcx,r15
  40afd4:	sub    rcx,rbp
  40afd7:	cmp    rcx,0x2
  40afdb:	jl     40ca4b <main@@Base+0x597b>
  40afe1:	cmp    BYTE PTR [rbp+0x0],0x20
  40afe5:	jg     40af75 <main@@Base+0x3ea5>
  40afe7:	jne    40ca4b <main@@Base+0x597b>
  40afed:	cmp    BYTE PTR [rax+0x2],0x20
  40aff1:	jle    40ca4b <main@@Base+0x597b>
  40aff7:	add    rax,0x2
  40affb:	jmp    40af72 <main@@Base+0x3ea2>
  40b000:	cmp    al,0x22
  40b002:	jne    41043a <main@@Base+0x936a>
  40b008:	add    r13,0xa
  40b00c:	mov    rax,r15
  40b00f:	sub    rax,r13
  40b012:	cmp    rax,0x2
  40b016:	jl     40b032 <main@@Base+0x3f62>
  40b018:	cmp    BYTE PTR [r13+0x0],0x20
  40b01d:	jg     40b043 <main@@Base+0x3f73>
  40b01f:	jne    40b032 <main@@Base+0x3f62>
  40b021:	cmp    BYTE PTR [r13+0x1],0x20
  40b026:	jle    40b032 <main@@Base+0x3f62>
  40b028:	inc    r13
  40b02b:	cmp    r13,r15
  40b02e:	jne    40b048 <main@@Base+0x3f78>
  40b030:	jmp    40b092 <main@@Base+0x3fc2>
  40b032:	mov    rdi,r14
  40b035:	mov    rsi,r13
  40b038:	mov    rdx,r15
  40b03b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b040:	mov    r13,rax
  40b043:	cmp    r13,r15
  40b046:	je     40b092 <main@@Base+0x3fc2>
  40b048:	cmp    BYTE PTR [r13+0x0],0x3a
  40b04d:	jne    40b092 <main@@Base+0x3fc2>
  40b04f:	lea    rax,[r13+0x1]
  40b053:	mov    rcx,r15
  40b056:	sub    rcx,rax
  40b059:	cmp    rcx,0x2
  40b05d:	jl     40c770 <main@@Base+0x56a0>
  40b063:	cmp    BYTE PTR [rax],0x20
  40b066:	jg     40c77e <main@@Base+0x56ae>
  40b06c:	jne    40c770 <main@@Base+0x56a0>
  40b072:	cmp    BYTE PTR [r13+0x2],0x20
  40b077:	jle    40c770 <main@@Base+0x56a0>
  40b07d:	add    r13,0x2
  40b081:	mov    rax,r13
  40b084:	cmp    r12,rax
  40b087:	jne    40c787 <main@@Base+0x56b7>
  40b08d:	jmp    41043a <main@@Base+0x936a>
  40b092:	mov    rdi,r14
  40b095:	mov    rsi,r13
  40b098:	mov    rdx,r15
  40b09b:	mov    ecx,0x4
  40b0a0:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b0a5:	cmp    r12,rax
  40b0a8:	jne    40c787 <main@@Base+0x56b7>
  40b0ae:	jmp    41043a <main@@Base+0x936a>
  40b0b3:	mov    rbx,rax
  40b0b6:	mov    rdi,QWORD PTR [r14]
  40b0b9:	mov    esi,0x1
  40b0be:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40b0c3:	test   rax,rax
  40b0c6:	je     407c81 <main@@Base+0xbb1>
  40b0cc:	mov    rdi,r14
  40b0cf:	mov    rsi,rbx
  40b0d2:	mov    rdx,r15
  40b0d5:	mov    rcx,rax
  40b0d8:	call   412fa0 <main@@Base+0xbed0>
  40b0dd:	mov    rcx,r15
  40b0e0:	sub    rcx,rax
  40b0e3:	cmp    rcx,0x2
  40b0e7:	jl     40b103 <main@@Base+0x4033>
  40b0e9:	cmp    BYTE PTR [rax],0x20
  40b0ec:	jg     40b111 <main@@Base+0x4041>
  40b0ee:	jne    40b103 <main@@Base+0x4033>
  40b0f0:	cmp    BYTE PTR [rax+0x1],0x20
  40b0f4:	jle    40b103 <main@@Base+0x4033>
  40b0f6:	inc    rax
  40b0f9:	cmp    rax,r15
  40b0fc:	jne    40b11a <main@@Base+0x404a>
  40b0fe:	jmp    40ca1a <main@@Base+0x594a>
  40b103:	mov    rdi,r14
  40b106:	mov    rsi,rax
  40b109:	mov    rdx,r15
  40b10c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b111:	cmp    rax,r15
  40b114:	je     40ca1a <main@@Base+0x594a>
  40b11a:	movzx  ecx,BYTE PTR [rax]
  40b11d:	cmp    cl,0x2c
  40b120:	jne    40ca22 <main@@Base+0x5952>
  40b126:	lea    rbx,[rax+0x1]
  40b12a:	mov    rcx,r15
  40b12d:	sub    rcx,rbx
  40b130:	cmp    rcx,0x2
  40b134:	jl     40b149 <main@@Base+0x4079>
  40b136:	cmp    BYTE PTR [rbx],0x20
  40b139:	jg     40b15a <main@@Base+0x408a>
  40b13b:	jne    40b149 <main@@Base+0x4079>
  40b13d:	cmp    BYTE PTR [rax+0x2],0x20
  40b141:	jle    40b149 <main@@Base+0x4079>
  40b143:	add    rax,0x2
  40b147:	jmp    40b157 <main@@Base+0x4087>
  40b149:	mov    rdi,r14
  40b14c:	mov    rsi,rbx
  40b14f:	mov    rdx,r15
  40b152:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b157:	mov    rbx,rax
  40b15a:	cmp    rbx,r15
  40b15d:	je     40caa7 <main@@Base+0x59d7>
  40b163:	cmp    BYTE PTR [rbx],0x5d
  40b166:	jne    40b0b6 <main@@Base+0x3fe6>
  40b16c:	lea    rbp,[rbx+0x1]
  40b170:	mov    rax,r15
  40b173:	sub    rax,rbp
  40b176:	cmp    rax,0x2
  40b17a:	jl     40ca4b <main@@Base+0x597b>
  40b180:	cmp    BYTE PTR [rbp+0x0],0x20
  40b184:	jg     40af75 <main@@Base+0x3ea5>
  40b18a:	jne    40ca4b <main@@Base+0x597b>
  40b190:	cmp    BYTE PTR [rbx+0x2],0x20
  40b194:	jle    40ca4b <main@@Base+0x597b>
  40b19a:	add    rbx,0x2
  40b19e:	mov    rbp,rbx
  40b1a1:	jmp    40af75 <main@@Base+0x3ea5>
  40b1a6:	mov    rdi,r14
  40b1a9:	mov    rsi,rbx
  40b1ac:	mov    rdx,r15
  40b1af:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b1b4:	mov    rbx,rax
  40b1b7:	cmp    r13,rbx
  40b1ba:	je     40cfc1 <main@@Base+0x5ef1>
  40b1c0:	mov    BYTE PTR [rsp+0x4],0x0
  40b1c5:	mov    rax,r15
  40b1c8:	sub    rax,rbx
  40b1cb:	cmp    rax,0x4
  40b1cf:	jl     40b1f7 <main@@Base+0x4127>
  40b1d1:	cmp    DWORD PTR [rbx],0x65757274
  40b1d7:	je     40b248 <main@@Base+0x4178>
  40b1d9:	cmp    rax,0x5
  40b1dd:	jl     40b1f7 <main@@Base+0x4127>
  40b1df:	mov    eax,DWORD PTR [rbx]
  40b1e1:	mov    ecx,0x736c6166
  40b1e6:	xor    eax,ecx
  40b1e8:	movzx  ecx,BYTE PTR [rbx+0x4]
  40b1ec:	xor    ecx,0x65
  40b1ef:	or     ecx,eax
  40b1f1:	je     40c6b1 <main@@Base+0x55e1>
  40b1f7:	mov    QWORD PTR [rsp+0x10],0x0
  40b200:	mov    DWORD PTR [rsp+0x20],0x0
  40b208:	cmp    rbx,r15
  40b20b:	je     40b241 <main@@Base+0x4171>
  40b20d:	mov    rdi,r14
  40b210:	mov    rsi,rbx
  40b213:	mov    rdx,r15
  40b216:	lea    rcx,[rsp+0x20]
  40b21b:	lea    r8,[rsp+0x10]
  40b220:	call   425c50 <flatcc_json_parser_integer@@Base>
  40b225:	cmp    rax,rbx
  40b228:	je     40b256 <main@@Base+0x4186>
  40b22a:	cmp    DWORD PTR [rsp+0x20],0x0
  40b22f:	je     40b25d <main@@Base+0x418d>
  40b231:	mov    rdi,r14
  40b234:	mov    rsi,rax
  40b237:	mov    rdx,r15
  40b23a:	mov    ecx,0x8
  40b23f:	jmp    40b279 <main@@Base+0x41a9>
  40b241:	xor    ecx,ecx
  40b243:	mov    rax,r15
  40b246:	jmp    40b280 <main@@Base+0x41b0>
  40b248:	mov    BYTE PTR [rsp+0x4],0x1
  40b24d:	lea    rax,[rbx+0x4]
  40b251:	mov    r12b,0x1
  40b254:	jmp    40b28b <main@@Base+0x41bb>
  40b256:	xor    ecx,ecx
  40b258:	mov    rax,rbx
  40b25b:	jmp    40b280 <main@@Base+0x41b0>
  40b25d:	mov    rcx,QWORD PTR [rsp+0x10]
  40b262:	cmp    rcx,0x100
  40b269:	jb     40b280 <main@@Base+0x41b0>
  40b26b:	mov    rdi,r14
  40b26e:	mov    rsi,rax
  40b271:	mov    rdx,r15
  40b274:	mov    ecx,0x7
  40b279:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b27e:	xor    ecx,ecx
  40b280:	test   cl,cl
  40b282:	setne  r12b
  40b286:	setne  BYTE PTR [rsp+0x4]
  40b28b:	mov    rbp,rax
  40b28e:	cmp    rbx,rax
  40b291:	jne    40b2c7 <main@@Base+0x41f7>
  40b293:	mov    rdi,r14
  40b296:	mov    rsi,rbx
  40b299:	mov    rdx,r15
  40b29c:	lea    rcx,[rip+0x37efd]        # 4431a0 <__data_start@@Base+0xf0>
  40b2a3:	lea    r8,[rsp+0x4]
  40b2a8:	call   414810 <main@@Base+0xd740>
  40b2ad:	mov    rbp,rax
  40b2b0:	cmp    rax,rbx
  40b2b3:	je     410ce5 <main@@Base+0x9c15>
  40b2b9:	cmp    rbp,r15
  40b2bc:	je     410ce5 <main@@Base+0x9c15>
  40b2c2:	mov    r12b,BYTE PTR [rsp+0x4]
  40b2c7:	cmp    r12b,0x1
  40b2cb:	jne    40b2d8 <main@@Base+0x4208>
  40b2cd:	test   BYTE PTR [r14+0x10],0x2
  40b2d2:	je     41044b <main@@Base+0x937b>
  40b2d8:	mov    rdi,QWORD PTR [r14]
  40b2db:	mov    edx,0x1
  40b2e0:	mov    esi,0xf
  40b2e5:	mov    ecx,0x1
  40b2ea:	call   420a40 <flatcc_builder_table_add@@Base>
  40b2ef:	test   rax,rax
  40b2f2:	je     410ce5 <main@@Base+0x9c15>
  40b2f8:	mov    BYTE PTR [rax],r12b
  40b2fb:	jmp    41044b <main@@Base+0x937b>
  40b300:	cmp    al,0x22
  40b302:	jne    41043a <main@@Base+0x936a>
  40b308:	add    r13,0x12
  40b30c:	mov    rax,r15
  40b30f:	sub    rax,r13
  40b312:	cmp    rax,0x2
  40b316:	jl     40b3fc <main@@Base+0x432c>
  40b31c:	cmp    BYTE PTR [r13+0x0],0x20
  40b321:	jg     40b40d <main@@Base+0x433d>
  40b327:	jne    40b3fc <main@@Base+0x432c>
  40b32d:	cmp    BYTE PTR [r13+0x1],0x20
  40b332:	jle    40b3fc <main@@Base+0x432c>
  40b338:	inc    r13
  40b33b:	cmp    r13,r15
  40b33e:	jne    40b412 <main@@Base+0x4342>
  40b344:	jmp    40b45f <main@@Base+0x438f>
  40b349:	mov    rdi,r14
  40b34c:	mov    rsi,rbx
  40b34f:	mov    rdx,r15
  40b352:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b357:	mov    rbx,rax
  40b35a:	cmp    r12,rbx
  40b35d:	je     41043a <main@@Base+0x936a>
  40b363:	mov    rdi,QWORD PTR [r14]
  40b366:	mov    esi,0x1
  40b36b:	mov    ecx,0xffffffff
  40b370:	mov    edx,0x1
  40b375:	call   41f250 <flatcc_builder_start_vector@@Base>
  40b37a:	test   eax,eax
  40b37c:	jne    407c81 <main@@Base+0xbb1>
  40b382:	cmp    rbx,r15
  40b385:	je     40b3c5 <main@@Base+0x42f5>
  40b387:	cmp    BYTE PTR [rbx],0x5b
  40b38a:	jne    40b3c5 <main@@Base+0x42f5>
  40b38c:	lea    rax,[rbx+0x1]
  40b390:	mov    rcx,r15
  40b393:	sub    rcx,rax
  40b396:	cmp    rcx,0x2
  40b39a:	jl     40c850 <main@@Base+0x5780>
  40b3a0:	cmp    BYTE PTR [rax],0x20
  40b3a3:	jg     40c85e <main@@Base+0x578e>
  40b3a9:	jne    40c850 <main@@Base+0x5780>
  40b3af:	cmp    BYTE PTR [rbx+0x2],0x20
  40b3b3:	jle    40c850 <main@@Base+0x5780>
  40b3b9:	add    rbx,0x2
  40b3bd:	mov    rax,rbx
  40b3c0:	jmp    40c85e <main@@Base+0x578e>
  40b3c5:	mov    rdi,r14
  40b3c8:	mov    rsi,rbx
  40b3cb:	mov    rdx,r15
  40b3ce:	mov    ecx,0x16
  40b3d3:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b3d8:	mov    rbp,rax
  40b3db:	mov    rdi,QWORD PTR [r14]
  40b3de:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40b3e3:	mov    DWORD PTR [rsp+0x1c],eax
  40b3e7:	test   eax,eax
  40b3e9:	je     410ce5 <main@@Base+0x9c15>
  40b3ef:	mov    rdi,QWORD PTR [r14]
  40b3f2:	mov    esi,0x18
  40b3f7:	jmp    40af91 <main@@Base+0x3ec1>
  40b3fc:	mov    rdi,r14
  40b3ff:	mov    rsi,r13
  40b402:	mov    rdx,r15
  40b405:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b40a:	mov    r13,rax
  40b40d:	cmp    r13,r15
  40b410:	je     40b45f <main@@Base+0x438f>
  40b412:	cmp    BYTE PTR [r13+0x0],0x3a
  40b417:	jne    40b45f <main@@Base+0x438f>
  40b419:	lea    rsi,[r13+0x1]
  40b41d:	mov    rax,r15
  40b420:	sub    rax,rsi
  40b423:	cmp    rax,0x2
  40b427:	jl     40d40a <main@@Base+0x633a>
  40b42d:	mov    rax,rsi
  40b430:	cmp    BYTE PTR [rsi],0x20
  40b433:	jg     40d415 <main@@Base+0x6345>
  40b439:	mov    rsi,rax
  40b43c:	jne    40d40a <main@@Base+0x633a>
  40b442:	cmp    BYTE PTR [r13+0x2],0x20
  40b447:	jle    40d40a <main@@Base+0x633a>
  40b44d:	add    r13,0x2
  40b451:	cmp    r12,r13
  40b454:	jne    40d421 <main@@Base+0x6351>
  40b45a:	jmp    41043a <main@@Base+0x936a>
  40b45f:	mov    rdi,r14
  40b462:	mov    rsi,r13
  40b465:	mov    rdx,r15
  40b468:	mov    ecx,0x4
  40b46d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b472:	jmp    40d415 <main@@Base+0x6345>
  40b477:	cmp    al,0x22
  40b479:	jne    40c336 <main@@Base+0x5266>
  40b47f:	lea    rsi,[r13+0x11]
  40b483:	mov    rax,r15
  40b486:	sub    rax,rsi
  40b489:	cmp    rax,0x2
  40b48d:	jl     40c2d9 <main@@Base+0x5209>
  40b493:	cmp    BYTE PTR [rsi],0x20
  40b496:	jg     40c2e7 <main@@Base+0x5217>
  40b49c:	jne    40c2d9 <main@@Base+0x5209>
  40b4a2:	cmp    BYTE PTR [rsi+0x1],0x20
  40b4a6:	jle    40c2d9 <main@@Base+0x5209>
  40b4ac:	inc    rsi
  40b4af:	cmp    rsi,r15
  40b4b2:	jne    40c2f0 <main@@Base+0x5220>
  40b4b8:	jmp    40c555 <main@@Base+0x5485>
  40b4bd:	cmp    al,0x22
  40b4bf:	jne    40c474 <main@@Base+0x53a4>
  40b4c5:	lea    rsi,[r13+0x11]
  40b4c9:	mov    rax,r15
  40b4cc:	sub    rax,rsi
  40b4cf:	cmp    rax,0x2
  40b4d3:	jl     40c417 <main@@Base+0x5347>
  40b4d9:	cmp    BYTE PTR [rsi],0x20
  40b4dc:	jg     40c425 <main@@Base+0x5355>
  40b4e2:	jne    40c417 <main@@Base+0x5347>
  40b4e8:	cmp    BYTE PTR [rsi+0x1],0x20
  40b4ec:	jle    40c417 <main@@Base+0x5347>
  40b4f2:	inc    rsi
  40b4f5:	cmp    rsi,r15
  40b4f8:	jne    40c42e <main@@Base+0x535e>
  40b4fe:	jmp    40c56a <main@@Base+0x549a>
  40b503:	cmp    al,0x22
  40b505:	jne    41043a <main@@Base+0x936a>
  40b50b:	add    r13,0x12
  40b50f:	mov    rax,r15
  40b512:	sub    rax,r13
  40b515:	cmp    rax,0x2
  40b519:	jl     40c631 <main@@Base+0x5561>
  40b51f:	cmp    BYTE PTR [r13+0x0],0x20
  40b524:	jg     40c642 <main@@Base+0x5572>
  40b52a:	jne    40c631 <main@@Base+0x5561>
  40b530:	cmp    BYTE PTR [r13+0x1],0x20
  40b535:	jle    40c631 <main@@Base+0x5561>
  40b53b:	inc    r13
  40b53e:	cmp    r13,r15
  40b541:	jne    40c647 <main@@Base+0x5577>
  40b547:	jmp    40c691 <main@@Base+0x55c1>
  40b54c:	mov    rdi,r14
  40b54f:	mov    rsi,rbx
  40b552:	mov    rdx,r15
  40b555:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b55a:	mov    rbx,rax
  40b55d:	cmp    r13,rbx
  40b560:	je     40cfc1 <main@@Base+0x5ef1>
  40b566:	mov    QWORD PTR [rsp+0x10],0x0
  40b56f:	mov    DWORD PTR [rsp+0x20],0x0
  40b577:	mov    WORD PTR [rsp+0x4],0x0
  40b57e:	cmp    rbx,r15
  40b581:	je     40b5c5 <main@@Base+0x44f5>
  40b583:	mov    rdi,r14
  40b586:	mov    rsi,rbx
  40b589:	mov    rdx,r15
  40b58c:	lea    rcx,[rsp+0x20]
  40b591:	lea    r8,[rsp+0x10]
  40b596:	call   425c50 <flatcc_json_parser_integer@@Base>
  40b59b:	cmp    rax,rbx
  40b59e:	je     40b5cd <main@@Base+0x44fd>
  40b5a0:	mov    r12,QWORD PTR [rsp+0x10]
  40b5a5:	cmp    DWORD PTR [rsp+0x20],0x0
  40b5aa:	je     40b5d5 <main@@Base+0x4505>
  40b5ac:	cmp    r12,0x8001
  40b5b3:	jb     40b5f6 <main@@Base+0x4526>
  40b5b5:	mov    rdi,r14
  40b5b8:	mov    rsi,rax
  40b5bb:	mov    rdx,r15
  40b5be:	mov    ecx,0x8
  40b5c3:	jmp    40b5ec <main@@Base+0x451c>
  40b5c5:	xor    r12d,r12d
  40b5c8:	mov    rax,r15
  40b5cb:	jmp    40b5ff <main@@Base+0x452f>
  40b5cd:	xor    r12d,r12d
  40b5d0:	mov    rax,rbx
  40b5d3:	jmp    40b5ff <main@@Base+0x452f>
  40b5d5:	cmp    r12,0x8000
  40b5dc:	jb     40b5f9 <main@@Base+0x4529>
  40b5de:	mov    rdi,r14
  40b5e1:	mov    rsi,rax
  40b5e4:	mov    rdx,r15
  40b5e7:	mov    ecx,0x7
  40b5ec:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b5f1:	xor    r12d,r12d
  40b5f4:	jmp    40b5ff <main@@Base+0x452f>
  40b5f6:	neg    r12
  40b5f9:	mov    WORD PTR [rsp+0x4],r12w
  40b5ff:	mov    rbp,rax
  40b602:	cmp    rbx,rax
  40b605:	jne    40b63c <main@@Base+0x456c>
  40b607:	mov    rdi,r14
  40b60a:	mov    rsi,rbx
  40b60d:	mov    rdx,r15
  40b610:	lea    rcx,[rip+0x37ae9]        # 443100 <__data_start@@Base+0x50>
  40b617:	lea    r8,[rsp+0x4]
  40b61c:	call   412dc0 <main@@Base+0xbcf0>
  40b621:	mov    rbp,rax
  40b624:	cmp    rax,rbx
  40b627:	je     410ce5 <main@@Base+0x9c15>
  40b62d:	cmp    rbp,r15
  40b630:	je     410ce5 <main@@Base+0x9c15>
  40b636:	movzx  r12d,WORD PTR [rsp+0x4]
  40b63c:	cmp    r12w,0x64
  40b641:	jne    40b64e <main@@Base+0x457e>
  40b643:	test   BYTE PTR [r14+0x10],0x2
  40b648:	je     41044b <main@@Base+0x937b>
  40b64e:	mov    rdi,QWORD PTR [r14]
  40b651:	mov    edx,0x2
  40b656:	mov    esi,0x2
  40b65b:	jmp    40cf0a <main@@Base+0x5e3a>
  40b660:	mov    rdi,r14
  40b663:	mov    rsi,rbx
  40b666:	mov    rdx,r15
  40b669:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b66e:	mov    rbx,rax
  40b671:	cmp    r13,rbx
  40b674:	je     40cfc1 <main@@Base+0x5ef1>
  40b67a:	mov    rdi,QWORD PTR [r14]
  40b67d:	mov    edx,0x20
  40b682:	xor    esi,esi
  40b684:	mov    ecx,0x10
  40b689:	call   420a40 <flatcc_builder_table_add@@Base>
  40b68e:	test   rax,rax
  40b691:	je     407c81 <main@@Base+0xbb1>
  40b697:	cmp    rbx,r15
  40b69a:	je     40b6ca <main@@Base+0x45fa>
  40b69c:	cmp    BYTE PTR [rbx],0x7b
  40b69f:	jne    40b6ca <main@@Base+0x45fa>
  40b6a1:	mov    r13,rax
  40b6a4:	lea    rax,[rbx+0x1]
  40b6a8:	mov    rcx,r15
  40b6ab:	sub    rcx,rax
  40b6ae:	cmp    rcx,0x2
  40b6b2:	jl     40b6e2 <main@@Base+0x4612>
  40b6b4:	cmp    BYTE PTR [rax],0x20
  40b6b7:	jg     40b6f0 <main@@Base+0x4620>
  40b6b9:	jne    40b6e2 <main@@Base+0x4612>
  40b6bb:	cmp    BYTE PTR [rbx+0x2],0x20
  40b6bf:	jle    40b6e2 <main@@Base+0x4612>
  40b6c1:	add    rbx,0x2
  40b6c5:	mov    rax,rbx
  40b6c8:	jmp    40b6f0 <main@@Base+0x4620>
  40b6ca:	mov    rdi,r14
  40b6cd:	mov    rsi,rbx
  40b6d0:	mov    rdx,r15
  40b6d3:	mov    ecx,0x15
  40b6d8:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b6dd:	jmp    410448 <main@@Base+0x9378>
  40b6e2:	mov    rdi,r14
  40b6e5:	mov    rsi,rax
  40b6e8:	mov    rdx,r15
  40b6eb:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40b6f0:	mov    rsi,r15
  40b6f3:	cmp    rax,r15
  40b6f6:	je     40b704 <main@@Base+0x4634>
  40b6f8:	cmp    BYTE PTR [rax],0x7d
  40b6fb:	je     40cb4d <main@@Base+0x5a7d>
  40b701:	mov    rsi,rax
  40b704:	mov    rax,r13
  40b707:	add    rax,0x1a
  40b70b:	mov    QWORD PTR [rsp+0x50],rax
  40b710:	mov    QWORD PTR [rsp+0x28],r13
  40b715:	mov    r12,r15
  40b718:	cmp    rsi,r15
  40b71b:	je     40b75b <main@@Base+0x468b>
  40b71d:	movzx  eax,BYTE PTR [rsi]
  40b720:	cmp    al,0x2e
  40b722:	je     40b738 <main@@Base+0x4668>
  40b724:	cmp    al,0x22
  40b726:	jne    40b74d <main@@Base+0x467d>
  40b728:	inc    rsi
  40b72b:	mov    rax,QWORD PTR [rsp+0x8]
  40b730:	mov    DWORD PTR [rax],0x0
  40b736:	jmp    40b758 <main@@Base+0x4688>
  40b738:	mov    rdi,r14
  40b73b:	mov    rdx,r15
  40b73e:	mov    ecx,0x5
  40b743:	call   424090 <flatcc_json_parser_set_error@@Base>
  40b748:	mov    r12,rax
  40b74b:	jmp    40b75b <main@@Base+0x468b>
  40b74d:	mov    rax,QWORD PTR [rsp+0x8]
  40b752:	mov    DWORD PTR [rax],0x1
  40b758:	mov    r12,rsi
  40b75b:	mov    rcx,r15
  40b75e:	sub    rcx,r12
  40b761:	cmp    rcx,0x8
  40b765:	jb     40b772 <main@@Base+0x46a2>
  40b767:	movbe  rax,QWORD PTR [r12]
  40b76d:	jmp    40b7f7 <main@@Base+0x4727>
  40b772:	lea    rax,[rcx-0x1]
  40b776:	cmp    rax,0x6
  40b77a:	ja     40c16a <main@@Base+0x509a>
  40b780:	lea    rdx,[rip+0x28abd]        # 434244 <_IO_stdin_used@@Base+0x244>
  40b787:	mov    rsi,rdx
  40b78a:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40b78e:	add    rdx,rsi
  40b791:	xor    r8d,r8d
  40b794:	xor    eax,eax
  40b796:	xor    esi,esi
  40b798:	xor    edi,edi
  40b79a:	xor    ebp,ebp
  40b79c:	xor    ebx,ebx
  40b79e:	jmp    rdx
  40b7a0:	movsx  r8,BYTE PTR [r12+0x6]
  40b7a6:	shl    r8,0x8
  40b7aa:	movsx  rax,BYTE PTR [r12+0x5]
  40b7b0:	shl    rax,0x10
  40b7b4:	or     rax,r8
  40b7b7:	movsx  rsi,BYTE PTR [r12+0x4]
  40b7bd:	shl    rsi,0x18
  40b7c1:	or     rsi,rax
  40b7c4:	movsx  rdi,BYTE PTR [r12+0x3]
  40b7ca:	shl    rdi,0x20
  40b7ce:	or     rdi,rsi
  40b7d1:	movsx  rbp,BYTE PTR [r12+0x2]
  40b7d7:	shl    rbp,0x28
  40b7db:	or     rbp,rdi
  40b7de:	movsx  rbx,BYTE PTR [r12+0x1]
  40b7e4:	shl    rbx,0x30
  40b7e8:	or     rbx,rbp
  40b7eb:	movzx  eax,BYTE PTR [r12]
  40b7f0:	shl    rax,0x38
  40b7f4:	or     rax,rbx
  40b7f7:	movabs rdx,0x7465737400000000
  40b801:	add    rdx,0x33000000
  40b808:	cmp    rax,rdx
  40b80b:	jae    40b87e <main@@Base+0x47ae>
  40b80d:	and    rax,0xffffffffff000000
  40b813:	movabs rdx,0x7465737431000000
  40b81d:	cmp    rax,rdx
  40b820:	je     40b95e <main@@Base+0x488e>
  40b826:	movabs rdx,0x7465737432000000
  40b830:	cmp    rax,rdx
  40b833:	jne    40c16a <main@@Base+0x509a>
  40b839:	mov    r13,r12
  40b83c:	cmp    rcx,0x6
  40b840:	jl     40bcf4 <main@@Base+0x4c24>
  40b846:	mov    rax,QWORD PTR [rsp+0x8]
  40b84b:	cmp    DWORD PTR [rax],0x0
  40b84e:	movzx  eax,BYTE PTR [r12+0x5]
  40b854:	je     40ba45 <main@@Base+0x4975>
  40b85a:	cmp    al,0x21
  40b85c:	jl     40b869 <main@@Base+0x4799>
  40b85e:	mov    r13,r12
  40b861:	cmp    al,0x3a
  40b863:	jne    40bcf4 <main@@Base+0x4c24>
  40b869:	lea    rsi,[r12+0x5]
  40b86e:	mov    rax,QWORD PTR [rsp+0x8]
  40b873:	mov    DWORD PTR [rax],0x0
  40b879:	jmp    40ba55 <main@@Base+0x4985>
  40b87e:	movabs rsi,0x7800000000000000
  40b888:	cmp    rax,rsi
  40b88b:	jae    40b8e3 <main@@Base+0x4813>
  40b88d:	and    rax,0xffffffffff000000
  40b893:	cmp    rax,rdx
  40b896:	jne    40c16a <main@@Base+0x509a>
  40b89c:	mov    rax,r12
  40b89f:	cmp    rcx,0x6
  40b8a3:	jl     40c056 <main@@Base+0x4f86>
  40b8a9:	mov    rax,QWORD PTR [rsp+0x8]
  40b8ae:	cmp    DWORD PTR [rax],0x0
  40b8b1:	movzx  ecx,BYTE PTR [r12+0x5]
  40b8b7:	je     40bbaf <main@@Base+0x4adf>
  40b8bd:	cmp    cl,0x21
  40b8c0:	jl     40b8ce <main@@Base+0x47fe>
  40b8c2:	mov    rax,r12
  40b8c5:	cmp    cl,0x3a
  40b8c8:	jne    40c056 <main@@Base+0x4f86>
  40b8ce:	lea    rsi,[r12+0x5]
  40b8d3:	mov    rax,QWORD PTR [rsp+0x8]
  40b8d8:	mov    DWORD PTR [rax],0x0
  40b8de:	jmp    40bbc0 <main@@Base+0x4af0>
  40b8e3:	mov    rdx,rax
  40b8e6:	movabs rsi,0xff00000000000000
  40b8f0:	and    rdx,rsi
  40b8f3:	movabs rsi,0x7900000000000000
  40b8fd:	cmp    rax,rsi
  40b900:	jae    40b9a3 <main@@Base+0x48d3>
  40b906:	movabs rax,0x7800000000000000
  40b910:	cmp    rdx,rax
  40b913:	jne    40c16a <main@@Base+0x509a>
  40b919:	mov    rbp,r12
  40b91c:	cmp    rcx,0x2
  40b920:	jl     40bf3a <main@@Base+0x4e6a>
  40b926:	mov    rax,QWORD PTR [rsp+0x8]
  40b92b:	cmp    DWORD PTR [rax],0x0
  40b92e:	movzx  eax,BYTE PTR [r12+0x1]
  40b934:	je     40bc49 <main@@Base+0x4b79>
  40b93a:	cmp    al,0x21
  40b93c:	jl     40b949 <main@@Base+0x4879>
  40b93e:	mov    rbp,r12
  40b941:	cmp    al,0x3a
  40b943:	jne    40bf3a <main@@Base+0x4e6a>
  40b949:	lea    rsi,[r12+0x1]
  40b94e:	mov    rax,QWORD PTR [rsp+0x8]
  40b953:	mov    DWORD PTR [rax],0x0
  40b959:	jmp    40bc59 <main@@Base+0x4b89>
  40b95e:	mov    rbp,r12
  40b961:	cmp    rcx,0x6
  40b965:	jl     40bfcb <main@@Base+0x4efb>
  40b96b:	mov    rax,QWORD PTR [rsp+0x8]
  40b970:	cmp    DWORD PTR [rax],0x0
  40b973:	movzx  eax,BYTE PTR [r12+0x5]
  40b979:	je     40ba7b <main@@Base+0x49ab>
  40b97f:	cmp    al,0x21
  40b981:	jl     40b98e <main@@Base+0x48be>
  40b983:	mov    rbp,r12
  40b986:	cmp    al,0x3a
  40b988:	jne    40bfcb <main@@Base+0x4efb>
  40b98e:	lea    rsi,[r12+0x5]
  40b993:	mov    rax,QWORD PTR [rsp+0x8]
  40b998:	mov    DWORD PTR [rax],0x0
  40b99e:	jmp    40ba8b <main@@Base+0x49bb>
  40b9a3:	cmp    rdx,rsi
  40b9a6:	je     40ba00 <main@@Base+0x4930>
  40b9a8:	movabs rax,0x7a00000000000000
  40b9b2:	cmp    rdx,rax
  40b9b5:	jne    40c16a <main@@Base+0x509a>
  40b9bb:	mov    rbp,r12
  40b9be:	cmp    rcx,0x2
  40b9c2:	jl     40c08d <main@@Base+0x4fbd>
  40b9c8:	mov    rax,QWORD PTR [rsp+0x8]
  40b9cd:	cmp    DWORD PTR [rax],0x0
  40b9d0:	movzx  eax,BYTE PTR [r12+0x1]
  40b9d6:	je     40bde2 <main@@Base+0x4d12>
  40b9dc:	cmp    al,0x21
  40b9de:	jl     40b9eb <main@@Base+0x491b>
  40b9e0:	mov    rbp,r12
  40b9e3:	cmp    al,0x3a
  40b9e5:	jne    40c08d <main@@Base+0x4fbd>
  40b9eb:	lea    rsi,[r12+0x1]
  40b9f0:	mov    rax,QWORD PTR [rsp+0x8]
  40b9f5:	mov    DWORD PTR [rax],0x0
  40b9fb:	jmp    40bdf2 <main@@Base+0x4d22>
  40ba00:	mov    rbp,r12
  40ba03:	cmp    rcx,0x2
  40ba07:	jl     40c10a <main@@Base+0x503a>
  40ba0d:	mov    rax,QWORD PTR [rsp+0x8]
  40ba12:	cmp    DWORD PTR [rax],0x0
  40ba15:	movzx  eax,BYTE PTR [r12+0x1]
  40ba1b:	je     40be18 <main@@Base+0x4d48>
  40ba21:	cmp    al,0x21
  40ba23:	jl     40ba30 <main@@Base+0x4960>
  40ba25:	mov    rbp,r12
  40ba28:	cmp    al,0x3a
  40ba2a:	jne    40c10a <main@@Base+0x503a>
  40ba30:	lea    rsi,[r12+0x1]
  40ba35:	mov    rax,QWORD PTR [rsp+0x8]
  40ba3a:	mov    DWORD PTR [rax],0x0
  40ba40:	jmp    40be28 <main@@Base+0x4d58>
  40ba45:	mov    r13,r12
  40ba48:	cmp    al,0x22
  40ba4a:	jne    40bcf4 <main@@Base+0x4c24>
  40ba50:	lea    rsi,[r12+0x6]
  40ba55:	mov    rax,r15
  40ba58:	sub    rax,rsi
  40ba5b:	cmp    rax,0x2
  40ba5f:	jl     40bac5 <main@@Base+0x49f5>
  40ba61:	cmp    BYTE PTR [rsi],0x20
  40ba64:	jg     40bad3 <main@@Base+0x4a03>
  40ba66:	jne    40bac5 <main@@Base+0x49f5>
  40ba68:	cmp    BYTE PTR [rsi+0x1],0x20
  40ba6c:	jle    40bac5 <main@@Base+0x49f5>
  40ba6e:	inc    rsi
  40ba71:	cmp    rsi,r15
  40ba74:	jne    40badc <main@@Base+0x4a0c>
  40ba76:	jmp    40bb85 <main@@Base+0x4ab5>
  40ba7b:	mov    rbp,r12
  40ba7e:	cmp    al,0x22
  40ba80:	jne    40bfcb <main@@Base+0x4efb>
  40ba86:	lea    rsi,[r12+0x6]
  40ba8b:	mov    rax,r15
  40ba8e:	sub    rax,rsi
  40ba91:	cmp    rax,0x2
  40ba95:	jl     40bb3c <main@@Base+0x4a6c>
  40ba9b:	cmp    BYTE PTR [rsi],0x20
  40ba9e:	jg     40bb4a <main@@Base+0x4a7a>
  40baa4:	jne    40bb3c <main@@Base+0x4a6c>
  40baaa:	cmp    BYTE PTR [rsi+0x1],0x20
  40baae:	jle    40bb3c <main@@Base+0x4a6c>
  40bab4:	inc    rsi
  40bab7:	cmp    rsi,r15
  40baba:	jne    40bb4f <main@@Base+0x4a7f>
  40bac0:	jmp    40bb9a <main@@Base+0x4aca>
  40bac5:	mov    rdi,r14
  40bac8:	mov    rdx,r15
  40bacb:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bad0:	mov    rsi,rax
  40bad3:	cmp    rsi,r15
  40bad6:	je     40bb85 <main@@Base+0x4ab5>
  40badc:	cmp    BYTE PTR [rsi],0x3a
  40badf:	jne    40bb85 <main@@Base+0x4ab5>
  40bae5:	lea    r13,[rsi+0x1]
  40bae9:	mov    rax,r15
  40baec:	sub    rax,r13
  40baef:	cmp    rax,0x2
  40baf3:	jl     40bce3 <main@@Base+0x4c13>
  40baf9:	cmp    BYTE PTR [r13+0x0],0x20
  40bafe:	jg     40bcf4 <main@@Base+0x4c24>
  40bb04:	jne    40bce3 <main@@Base+0x4c13>
  40bb0a:	cmp    BYTE PTR [rsi+0x2],0x20
  40bb0e:	jle    40bce3 <main@@Base+0x4c13>
  40bb14:	add    rsi,0x2
  40bb18:	mov    r13,rsi
  40bb1b:	cmp    r12,r13
  40bb1e:	jne    40bcfd <main@@Base+0x4c2d>
  40bb24:	mov    rdi,r14
  40bb27:	mov    rsi,r12
  40bb2a:	mov    rdx,r15
  40bb2d:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  40bb32:	mov    r13,QWORD PTR [rsp+0x28]
  40bb37:	jmp    40c178 <main@@Base+0x50a8>
  40bb3c:	mov    rdi,r14
  40bb3f:	mov    rdx,r15
  40bb42:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bb47:	mov    rsi,rax
  40bb4a:	cmp    rsi,r15
  40bb4d:	je     40bb9a <main@@Base+0x4aca>
  40bb4f:	cmp    BYTE PTR [rsi],0x3a
  40bb52:	jne    40bb9a <main@@Base+0x4aca>
  40bb54:	lea    rbp,[rsi+0x1]
  40bb58:	mov    rax,r15
  40bb5b:	sub    rax,rbp
  40bb5e:	cmp    rax,0x2
  40bb62:	jl     40bfba <main@@Base+0x4eea>
  40bb68:	cmp    BYTE PTR [rbp+0x0],0x20
  40bb6c:	jle    40bf9c <main@@Base+0x4ecc>
  40bb72:	mov    r13,QWORD PTR [rsp+0x28]
  40bb77:	cmp    r12,rbp
  40bb7a:	jne    40bfd4 <main@@Base+0x4f04>
  40bb80:	jmp    40c16a <main@@Base+0x509a>
  40bb85:	mov    rdi,r14
  40bb88:	mov    rdx,r15
  40bb8b:	mov    ecx,0x4
  40bb90:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bb95:	jmp    40bcf1 <main@@Base+0x4c21>
  40bb9a:	mov    rdi,r14
  40bb9d:	mov    rdx,r15
  40bba0:	mov    ecx,0x4
  40bba5:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bbaa:	jmp    40bfc8 <main@@Base+0x4ef8>
  40bbaf:	mov    rax,r12
  40bbb2:	cmp    cl,0x22
  40bbb5:	jne    40c056 <main@@Base+0x4f86>
  40bbbb:	lea    rsi,[r12+0x6]
  40bbc0:	mov    rax,r15
  40bbc3:	sub    rax,rsi
  40bbc6:	cmp    rax,0x2
  40bbca:	jl     40bbe3 <main@@Base+0x4b13>
  40bbcc:	cmp    BYTE PTR [rsi],0x20
  40bbcf:	jg     40bbf1 <main@@Base+0x4b21>
  40bbd1:	jne    40bbe3 <main@@Base+0x4b13>
  40bbd3:	cmp    BYTE PTR [rsi+0x1],0x20
  40bbd7:	jle    40bbe3 <main@@Base+0x4b13>
  40bbd9:	inc    rsi
  40bbdc:	cmp    rsi,r15
  40bbdf:	jne    40bbf6 <main@@Base+0x4b26>
  40bbe1:	jmp    40bc2b <main@@Base+0x4b5b>
  40bbe3:	mov    rdi,r14
  40bbe6:	mov    rdx,r15
  40bbe9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bbee:	mov    rsi,rax
  40bbf1:	cmp    rsi,r15
  40bbf4:	je     40bc2b <main@@Base+0x4b5b>
  40bbf6:	cmp    BYTE PTR [rsi],0x3a
  40bbf9:	jne    40bc2b <main@@Base+0x4b5b>
  40bbfb:	lea    rax,[rsi+0x1]
  40bbff:	mov    rcx,r15
  40bc02:	sub    rcx,rax
  40bc05:	cmp    rcx,0x2
  40bc09:	jl     40c043 <main@@Base+0x4f73>
  40bc0f:	cmp    BYTE PTR [rax],0x20
  40bc12:	jle    40c02f <main@@Base+0x4f5f>
  40bc18:	mov    r13,QWORD PTR [rsp+0x28]
  40bc1d:	cmp    r12,rax
  40bc20:	jne    40c05f <main@@Base+0x4f8f>
  40bc26:	jmp    40c16a <main@@Base+0x509a>
  40bc2b:	mov    rdi,r14
  40bc2e:	mov    rdx,r15
  40bc31:	mov    ecx,0x4
  40bc36:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bc3b:	cmp    r12,rax
  40bc3e:	jne    40c05f <main@@Base+0x4f8f>
  40bc44:	jmp    40c16a <main@@Base+0x509a>
  40bc49:	mov    rbp,r12
  40bc4c:	cmp    al,0x22
  40bc4e:	jne    40bf3a <main@@Base+0x4e6a>
  40bc54:	lea    rsi,[r12+0x2]
  40bc59:	mov    rax,r15
  40bc5c:	sub    rax,rsi
  40bc5f:	cmp    rax,0x2
  40bc63:	jl     40bc7c <main@@Base+0x4bac>
  40bc65:	cmp    BYTE PTR [rsi],0x20
  40bc68:	jg     40bc8a <main@@Base+0x4bba>
  40bc6a:	jne    40bc7c <main@@Base+0x4bac>
  40bc6c:	cmp    BYTE PTR [rsi+0x1],0x20
  40bc70:	jle    40bc7c <main@@Base+0x4bac>
  40bc72:	inc    rsi
  40bc75:	cmp    rsi,r15
  40bc78:	jne    40bc8f <main@@Base+0x4bbf>
  40bc7a:	jmp    40bcce <main@@Base+0x4bfe>
  40bc7c:	mov    rdi,r14
  40bc7f:	mov    rdx,r15
  40bc82:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bc87:	mov    rsi,rax
  40bc8a:	cmp    rsi,r15
  40bc8d:	je     40bcce <main@@Base+0x4bfe>
  40bc8f:	cmp    BYTE PTR [rsi],0x3a
  40bc92:	jne    40bcce <main@@Base+0x4bfe>
  40bc94:	lea    rbp,[rsi+0x1]
  40bc98:	mov    rax,r15
  40bc9b:	sub    rax,rbp
  40bc9e:	cmp    rax,0x2
  40bca2:	jl     40bf24 <main@@Base+0x4e54>
  40bca8:	cmp    BYTE PTR [rbp+0x0],0x20
  40bcac:	jg     40bf35 <main@@Base+0x4e65>
  40bcb2:	jne    40bf24 <main@@Base+0x4e54>
  40bcb8:	cmp    BYTE PTR [rsi+0x2],0x20
  40bcbc:	jle    40bf24 <main@@Base+0x4e54>
  40bcc2:	add    rsi,0x2
  40bcc6:	mov    rbp,rsi
  40bcc9:	jmp    40bf35 <main@@Base+0x4e65>
  40bcce:	mov    rdi,r14
  40bcd1:	mov    rdx,r15
  40bcd4:	mov    ecx,0x4
  40bcd9:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bcde:	jmp    40bf32 <main@@Base+0x4e62>
  40bce3:	mov    rdi,r14
  40bce6:	mov    rsi,r13
  40bce9:	mov    rdx,r15
  40bcec:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bcf1:	mov    r13,rax
  40bcf4:	cmp    r12,r13
  40bcf7:	je     40bb24 <main@@Base+0x4a54>
  40bcfd:	mov    QWORD PTR [rsp+0x10],0x0
  40bd06:	mov    DWORD PTR [rsp+0x20],0x0
  40bd0e:	mov    BYTE PTR [rsp+0x4],0x0
  40bd13:	cmp    r13,r15
  40bd16:	je     40bd5a <main@@Base+0x4c8a>
  40bd18:	mov    rdi,r14
  40bd1b:	mov    rsi,r13
  40bd1e:	mov    rdx,r15
  40bd21:	lea    rcx,[rsp+0x20]
  40bd26:	lea    r8,[rsp+0x10]
  40bd2b:	call   425c50 <flatcc_json_parser_integer@@Base>
  40bd30:	cmp    rax,r13
  40bd33:	je     40bd66 <main@@Base+0x4c96>
  40bd35:	mov    rcx,QWORD PTR [rsp+0x10]
  40bd3a:	cmp    DWORD PTR [rsp+0x20],0x0
  40bd3f:	je     40bd72 <main@@Base+0x4ca2>
  40bd41:	cmp    rcx,0x81
  40bd48:	jb     40bd97 <main@@Base+0x4cc7>
  40bd4a:	mov    rdi,r14
  40bd4d:	mov    rsi,rax
  40bd50:	mov    rdx,r15
  40bd53:	mov    ecx,0x8
  40bd58:	jmp    40bd89 <main@@Base+0x4cb9>
  40bd5a:	xor    ecx,ecx
  40bd5c:	mov    rax,r15
  40bd5f:	cmp    r13,rax
  40bd62:	jne    40bdd4 <main@@Base+0x4d04>
  40bd64:	jmp    40bda3 <main@@Base+0x4cd3>
  40bd66:	xor    ecx,ecx
  40bd68:	mov    rax,r13
  40bd6b:	cmp    r13,rax
  40bd6e:	jne    40bdd4 <main@@Base+0x4d04>
  40bd70:	jmp    40bda3 <main@@Base+0x4cd3>
  40bd72:	cmp    rcx,0x80
  40bd79:	jb     40bd9a <main@@Base+0x4cca>
  40bd7b:	mov    rdi,r14
  40bd7e:	mov    rsi,rax
  40bd81:	mov    rdx,r15
  40bd84:	mov    ecx,0x7
  40bd89:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bd8e:	xor    ecx,ecx
  40bd90:	cmp    r13,rax
  40bd93:	jne    40bdd4 <main@@Base+0x4d04>
  40bd95:	jmp    40bda3 <main@@Base+0x4cd3>
  40bd97:	neg    rcx
  40bd9a:	mov    BYTE PTR [rsp+0x4],cl
  40bd9e:	cmp    r13,rax
  40bda1:	jne    40bdd4 <main@@Base+0x4d04>
  40bda3:	mov    rdi,r14
  40bda6:	mov    rsi,r13
  40bda9:	mov    rdx,r15
  40bdac:	lea    rcx,[rip+0x375cd]        # 443380 <__data_start@@Base+0x2d0>
  40bdb3:	lea    r8,[rsp+0x4]
  40bdb8:	call   412a10 <main@@Base+0xb940>
  40bdbd:	cmp    rax,r13
  40bdc0:	je     40f741 <main@@Base+0x8671>
  40bdc6:	cmp    rax,r15
  40bdc9:	je     40f741 <main@@Base+0x8671>
  40bdcf:	movzx  ecx,BYTE PTR [rsp+0x4]
  40bdd4:	mov    r13,QWORD PTR [rsp+0x28]
  40bdd9:	mov    BYTE PTR [r13+0x18],cl
  40bddd:	jmp    40c178 <main@@Base+0x50a8>
  40bde2:	mov    rbp,r12
  40bde5:	cmp    al,0x22
  40bde7:	jne    40c08d <main@@Base+0x4fbd>
  40bded:	lea    rsi,[r12+0x2]
  40bdf2:	mov    rax,r15
  40bdf5:	sub    rax,rsi
  40bdf8:	cmp    rax,0x2
  40bdfc:	jl     40be4e <main@@Base+0x4d7e>
  40bdfe:	cmp    BYTE PTR [rsi],0x20
  40be01:	jg     40be5c <main@@Base+0x4d8c>
  40be03:	jne    40be4e <main@@Base+0x4d7e>
  40be05:	cmp    BYTE PTR [rsi+0x1],0x20
  40be09:	jle    40be4e <main@@Base+0x4d7e>
  40be0b:	inc    rsi
  40be0e:	cmp    rsi,r15
  40be11:	jne    40be65 <main@@Base+0x4d95>
  40be13:	jmp    40befa <main@@Base+0x4e2a>
  40be18:	mov    rbp,r12
  40be1b:	cmp    al,0x22
  40be1d:	jne    40c10a <main@@Base+0x503a>
  40be23:	lea    rsi,[r12+0x2]
  40be28:	mov    rax,r15
  40be2b:	sub    rax,rsi
  40be2e:	cmp    rax,0x2
  40be32:	jl     40bea8 <main@@Base+0x4dd8>
  40be34:	cmp    BYTE PTR [rsi],0x20
  40be37:	jg     40beb6 <main@@Base+0x4de6>
  40be39:	jne    40bea8 <main@@Base+0x4dd8>
  40be3b:	cmp    BYTE PTR [rsi+0x1],0x20
  40be3f:	jle    40bea8 <main@@Base+0x4dd8>
  40be41:	inc    rsi
  40be44:	cmp    rsi,r15
  40be47:	jne    40bebb <main@@Base+0x4deb>
  40be49:	jmp    40bf0f <main@@Base+0x4e3f>
  40be4e:	mov    rdi,r14
  40be51:	mov    rdx,r15
  40be54:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40be59:	mov    rsi,rax
  40be5c:	cmp    rsi,r15
  40be5f:	je     40befa <main@@Base+0x4e2a>
  40be65:	cmp    BYTE PTR [rsi],0x3a
  40be68:	jne    40befa <main@@Base+0x4e2a>
  40be6e:	lea    rbp,[rsi+0x1]
  40be72:	mov    rax,r15
  40be75:	sub    rax,rbp
  40be78:	cmp    rax,0x2
  40be7c:	jl     40c077 <main@@Base+0x4fa7>
  40be82:	cmp    BYTE PTR [rbp+0x0],0x20
  40be86:	jg     40c088 <main@@Base+0x4fb8>
  40be8c:	jne    40c077 <main@@Base+0x4fa7>
  40be92:	cmp    BYTE PTR [rsi+0x2],0x20
  40be96:	jle    40c077 <main@@Base+0x4fa7>
  40be9c:	add    rsi,0x2
  40bea0:	mov    rbp,rsi
  40bea3:	jmp    40c088 <main@@Base+0x4fb8>
  40bea8:	mov    rdi,r14
  40beab:	mov    rdx,r15
  40beae:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40beb3:	mov    rsi,rax
  40beb6:	cmp    rsi,r15
  40beb9:	je     40bf0f <main@@Base+0x4e3f>
  40bebb:	cmp    BYTE PTR [rsi],0x3a
  40bebe:	jne    40bf0f <main@@Base+0x4e3f>
  40bec0:	lea    rbp,[rsi+0x1]
  40bec4:	mov    rax,r15
  40bec7:	sub    rax,rbp
  40beca:	cmp    rax,0x2
  40bece:	jl     40c0f4 <main@@Base+0x5024>
  40bed4:	cmp    BYTE PTR [rbp+0x0],0x20
  40bed8:	jg     40c105 <main@@Base+0x5035>
  40bede:	jne    40c0f4 <main@@Base+0x5024>
  40bee4:	cmp    BYTE PTR [rsi+0x2],0x20
  40bee8:	jle    40c0f4 <main@@Base+0x5024>
  40beee:	add    rsi,0x2
  40bef2:	mov    rbp,rsi
  40bef5:	jmp    40c105 <main@@Base+0x5035>
  40befa:	mov    rdi,r14
  40befd:	mov    rdx,r15
  40bf00:	mov    ecx,0x4
  40bf05:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bf0a:	jmp    40c085 <main@@Base+0x4fb5>
  40bf0f:	mov    rdi,r14
  40bf12:	mov    rdx,r15
  40bf15:	mov    ecx,0x4
  40bf1a:	call   424090 <flatcc_json_parser_set_error@@Base>
  40bf1f:	jmp    40c102 <main@@Base+0x5032>
  40bf24:	mov    rdi,r14
  40bf27:	mov    rsi,rbp
  40bf2a:	mov    rdx,r15
  40bf2d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bf32:	mov    rbp,rax
  40bf35:	mov    r13,QWORD PTR [rsp+0x28]
  40bf3a:	cmp    r12,rbp
  40bf3d:	je     40c16a <main@@Base+0x509a>
  40bf43:	mov    DWORD PTR [rsp+0x10],0x0
  40bf4b:	mov    rdi,r14
  40bf4e:	mov    rsi,rbp
  40bf51:	mov    rdx,r15
  40bf54:	lea    rcx,[rsp+0x10]
  40bf59:	call   425b30 <flatcc_json_parser_float@@Base>
  40bf5e:	cmp    rbp,rax
  40bf61:	jne    40bf8f <main@@Base+0x4ebf>
  40bf63:	mov    rdi,r14
  40bf66:	mov    rsi,rbp
  40bf69:	mov    rdx,r15
  40bf6c:	lea    rcx,[rip+0x3744d]        # 4433c0 <__data_start@@Base+0x310>
  40bf73:	lea    r8,[rsp+0x10]
  40bf78:	call   4149c0 <main@@Base+0xd8f0>
  40bf7d:	cmp    rax,rbp
  40bf80:	je     40f741 <main@@Base+0x8671>
  40bf86:	cmp    rax,r15
  40bf89:	je     40f741 <main@@Base+0x8671>
  40bf8f:	mov    ecx,DWORD PTR [rsp+0x10]
  40bf93:	mov    DWORD PTR [r13+0x0],ecx
  40bf97:	jmp    40c178 <main@@Base+0x50a8>
  40bf9c:	mov    r13,QWORD PTR [rsp+0x28]
  40bfa1:	jne    40bfba <main@@Base+0x4eea>
  40bfa3:	cmp    BYTE PTR [rsi+0x2],0x20
  40bfa7:	jle    40bfba <main@@Base+0x4eea>
  40bfa9:	add    rsi,0x2
  40bfad:	mov    rbp,rsi
  40bfb0:	cmp    r12,rbp
  40bfb3:	jne    40bfd4 <main@@Base+0x4f04>
  40bfb5:	jmp    40c16a <main@@Base+0x509a>
  40bfba:	mov    rdi,r14
  40bfbd:	mov    rsi,rbp
  40bfc0:	mov    rdx,r15
  40bfc3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40bfc8:	mov    rbp,rax
  40bfcb:	cmp    r12,rbp
  40bfce:	je     40c16a <main@@Base+0x509a>
  40bfd4:	mov    QWORD PTR [rsp+0x10],0x0
  40bfdd:	mov    rdi,r14
  40bfe0:	mov    rsi,rbp
  40bfe3:	mov    rdx,r15
  40bfe6:	lea    rcx,[rsp+0x10]
  40bfeb:	call   425390 <flatcc_json_parser_double@@Base>
  40bff0:	cmp    rbp,rax
  40bff3:	jne    40c021 <main@@Base+0x4f51>
  40bff5:	mov    rdi,r14
  40bff8:	mov    rsi,rbp
  40bffb:	mov    rdx,r15
  40bffe:	lea    rcx,[rip+0x3739b]        # 4433a0 <__data_start@@Base+0x2f0>
  40c005:	lea    r8,[rsp+0x10]
  40c00a:	call   4152e0 <main@@Base+0xe210>
  40c00f:	cmp    rax,rbp
  40c012:	je     40f741 <main@@Base+0x8671>
  40c018:	cmp    rax,r15
  40c01b:	je     40f741 <main@@Base+0x8671>
  40c021:	mov    rcx,QWORD PTR [rsp+0x10]
  40c026:	mov    QWORD PTR [r13+0x10],rcx
  40c02a:	jmp    40c178 <main@@Base+0x50a8>
  40c02f:	jne    40c043 <main@@Base+0x4f73>
  40c031:	cmp    BYTE PTR [rsi+0x2],0x20
  40c035:	jle    40c043 <main@@Base+0x4f73>
  40c037:	add    rsi,0x2
  40c03b:	mov    rax,rsi
  40c03e:	jmp    40bc18 <main@@Base+0x4b48>
  40c043:	mov    rdi,r14
  40c046:	mov    rsi,rax
  40c049:	mov    rdx,r15
  40c04c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c051:	mov    r13,QWORD PTR [rsp+0x28]
  40c056:	cmp    r12,rax
  40c059:	je     40c16a <main@@Base+0x509a>
  40c05f:	mov    rdi,r14
  40c062:	mov    rsi,rax
  40c065:	mov    rdx,r15
  40c068:	mov    rcx,QWORD PTR [rsp+0x50]
  40c06d:	call   412fa0 <main@@Base+0xbed0>
  40c072:	jmp    40c178 <main@@Base+0x50a8>
  40c077:	mov    rdi,r14
  40c07a:	mov    rsi,rbp
  40c07d:	mov    rdx,r15
  40c080:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c085:	mov    rbp,rax
  40c088:	mov    r13,QWORD PTR [rsp+0x28]
  40c08d:	cmp    r12,rbp
  40c090:	je     40c16a <main@@Base+0x509a>
  40c096:	mov    DWORD PTR [rsp+0x10],0x0
  40c09e:	mov    rdi,r14
  40c0a1:	mov    rsi,rbp
  40c0a4:	mov    rdx,r15
  40c0a7:	lea    rcx,[rsp+0x10]
  40c0ac:	call   425b30 <flatcc_json_parser_float@@Base>
  40c0b1:	cmp    rbp,rax
  40c0b4:	jne    40c0e7 <main@@Base+0x5017>
  40c0b6:	mov    rdi,r14
  40c0b9:	mov    rsi,rbp
  40c0bc:	mov    rdx,r15
  40c0bf:	lea    rcx,[rip+0x3731a]        # 4433e0 <__data_start@@Base+0x330>
  40c0c6:	lea    r8,[rsp+0x10]
  40c0cb:	call   4149c0 <main@@Base+0xd8f0>
  40c0d0:	cmp    rax,rbp
  40c0d3:	je     40f741 <main@@Base+0x8671>
  40c0d9:	cmp    rax,r15
  40c0dc:	je     40f741 <main@@Base+0x8671>
  40c0e2:	mov    r13,QWORD PTR [rsp+0x28]
  40c0e7:	mov    ecx,DWORD PTR [rsp+0x10]
  40c0eb:	mov    DWORD PTR [r13+0x8],ecx
  40c0ef:	jmp    40c178 <main@@Base+0x50a8>
  40c0f4:	mov    rdi,r14
  40c0f7:	mov    rsi,rbp
  40c0fa:	mov    rdx,r15
  40c0fd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c102:	mov    rbp,rax
  40c105:	mov    r13,QWORD PTR [rsp+0x28]
  40c10a:	cmp    r12,rbp
  40c10d:	je     40c16a <main@@Base+0x509a>
  40c10f:	mov    DWORD PTR [rsp+0x10],0x0
  40c117:	mov    rdi,r14
  40c11a:	mov    rsi,rbp
  40c11d:	mov    rdx,r15
  40c120:	lea    rcx,[rsp+0x10]
  40c125:	call   425b30 <flatcc_json_parser_float@@Base>
  40c12a:	cmp    rbp,rax
  40c12d:	jne    40c160 <main@@Base+0x5090>
  40c12f:	mov    rdi,r14
  40c132:	mov    rsi,rbp
  40c135:	mov    rdx,r15
  40c138:	lea    rcx,[rip+0x372c1]        # 443400 <__data_start@@Base+0x350>
  40c13f:	lea    r8,[rsp+0x10]
  40c144:	call   4149c0 <main@@Base+0xd8f0>
  40c149:	cmp    rax,rbp
  40c14c:	je     40f741 <main@@Base+0x8671>
  40c152:	cmp    rax,r15
  40c155:	je     40f741 <main@@Base+0x8671>
  40c15b:	mov    r13,QWORD PTR [rsp+0x28]
  40c160:	mov    ecx,DWORD PTR [rsp+0x10]
  40c164:	mov    DWORD PTR [r13+0x4],ecx
  40c168:	jmp    40c178 <main@@Base+0x50a8>
  40c16a:	mov    rdi,r14
  40c16d:	mov    rsi,r12
  40c170:	mov    rdx,r15
  40c173:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  40c178:	mov    rcx,r15
  40c17b:	sub    rcx,rax
  40c17e:	cmp    rcx,0x2
  40c182:	jl     40c19e <main@@Base+0x50ce>
  40c184:	cmp    BYTE PTR [rax],0x20
  40c187:	jg     40c1ac <main@@Base+0x50dc>
  40c189:	jne    40c19e <main@@Base+0x50ce>
  40c18b:	cmp    BYTE PTR [rax+0x1],0x20
  40c18f:	jle    40c19e <main@@Base+0x50ce>
  40c191:	inc    rax
  40c194:	cmp    rax,r15
  40c197:	jne    40c1b5 <main@@Base+0x50e5>
  40c199:	jmp    40cb3c <main@@Base+0x5a6c>
  40c19e:	mov    rdi,r14
  40c1a1:	mov    rsi,rax
  40c1a4:	mov    rdx,r15
  40c1a7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c1ac:	cmp    rax,r15
  40c1af:	je     40cb3c <main@@Base+0x5a6c>
  40c1b5:	movzx  ecx,BYTE PTR [rax]
  40c1b8:	cmp    cl,0x2c
  40c1bb:	jne    40cb44 <main@@Base+0x5a74>
  40c1c1:	lea    rsi,[rax+0x1]
  40c1c5:	mov    rcx,r15
  40c1c8:	sub    rcx,rsi
  40c1cb:	cmp    rcx,0x2
  40c1cf:	jl     40c1e4 <main@@Base+0x5114>
  40c1d1:	cmp    BYTE PTR [rsi],0x20
  40c1d4:	jg     40c1f2 <main@@Base+0x5122>
  40c1d6:	jne    40c1e4 <main@@Base+0x5114>
  40c1d8:	cmp    BYTE PTR [rax+0x2],0x20
  40c1dc:	jle    40c1e4 <main@@Base+0x5114>
  40c1de:	add    rax,0x2
  40c1e2:	jmp    40c1ef <main@@Base+0x511f>
  40c1e4:	mov    rdi,r14
  40c1e7:	mov    rdx,r15
  40c1ea:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c1ef:	mov    rsi,rax
  40c1f2:	cmp    rsi,r15
  40c1f5:	je     40cdec <main@@Base+0x5d1c>
  40c1fb:	cmp    BYTE PTR [rsi],0x7d
  40c1fe:	jne    40b715 <main@@Base+0x4645>
  40c204:	lea    rbp,[rsi+0x1]
  40c208:	mov    rax,r15
  40c20b:	sub    rax,rbp
  40c20e:	cmp    rax,0x2
  40c212:	jl     40cb78 <main@@Base+0x5aa8>
  40c218:	cmp    BYTE PTR [rbp+0x0],0x20
  40c21c:	jg     41044b <main@@Base+0x937b>
  40c222:	jne    40cb78 <main@@Base+0x5aa8>
  40c228:	cmp    BYTE PTR [rsi+0x2],0x20
  40c22c:	jle    40cb78 <main@@Base+0x5aa8>
  40c232:	add    rsi,0x2
  40c236:	mov    rbp,rsi
  40c239:	jmp    41044b <main@@Base+0x937b>
  40c23e:	mov    rdi,r14
  40c241:	mov    rsi,rbx
  40c244:	mov    rdx,r15
  40c247:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c24c:	mov    rbx,rax
  40c24f:	cmp    r13,rbx
  40c252:	je     40cfc1 <main@@Base+0x5ef1>
  40c258:	mov    DWORD PTR [rsp+0x10],0x0
  40c260:	mov    rdi,r14
  40c263:	mov    rsi,rbx
  40c266:	mov    rdx,r15
  40c269:	lea    rcx,[rsp+0x10]
  40c26e:	call   425b30 <flatcc_json_parser_float@@Base>
  40c273:	mov    rbp,rax
  40c276:	cmp    rbx,rax
  40c279:	jne    40c2aa <main@@Base+0x51da>
  40c27b:	mov    rdi,r14
  40c27e:	mov    rsi,rbx
  40c281:	mov    rdx,r15
  40c284:	lea    rcx,[rip+0x36f35]        # 4431c0 <__data_start@@Base+0x110>
  40c28b:	lea    r8,[rsp+0x10]
  40c290:	call   4149c0 <main@@Base+0xd8f0>
  40c295:	mov    rbp,rax
  40c298:	cmp    rax,rbx
  40c29b:	je     410ce5 <main@@Base+0x9c15>
  40c2a1:	cmp    rbp,r15
  40c2a4:	je     410ce5 <main@@Base+0x9c15>
  40c2aa:	vmovss xmm0,DWORD PTR [rsp+0x10]
  40c2b0:	vucomiss xmm0,DWORD PTR [rip+0x27d50]        # 434008 <_IO_stdin_used@@Base+0x8>
  40c2b8:	jne    40c2c7 <main@@Base+0x51f7>
  40c2ba:	jp     40c2c7 <main@@Base+0x51f7>
  40c2bc:	test   BYTE PTR [r14+0x10],0x2
  40c2c1:	je     41044b <main@@Base+0x937b>
  40c2c7:	mov    rdi,QWORD PTR [r14]
  40c2ca:	mov    edx,0x4
  40c2cf:	mov    esi,0x1a
  40c2d4:	jmp    40995e <main@@Base+0x288e>
  40c2d9:	mov    rdi,r14
  40c2dc:	mov    rdx,r15
  40c2df:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c2e4:	mov    rsi,rax
  40c2e7:	cmp    rsi,r15
  40c2ea:	je     40c555 <main@@Base+0x5485>
  40c2f0:	cmp    BYTE PTR [rsi],0x3a
  40c2f3:	jne    40c555 <main@@Base+0x5485>
  40c2f9:	lea    rcx,[rsi+0x1]
  40c2fd:	mov    rax,r15
  40c300:	sub    rax,rcx
  40c303:	cmp    rax,0x2
  40c307:	jl     40d8e5 <main@@Base+0x6815>
  40c30d:	cmp    BYTE PTR [rcx],0x20
  40c310:	jg     40d8f6 <main@@Base+0x6826>
  40c316:	jne    40d8e5 <main@@Base+0x6815>
  40c31c:	cmp    BYTE PTR [rsi+0x2],0x20
  40c320:	jle    40d8e5 <main@@Base+0x6815>
  40c326:	add    rsi,0x2
  40c32a:	mov    rcx,rsi
  40c32d:	cmp    r12,rcx
  40c330:	jne    40d8ff <main@@Base+0x682f>
  40c336:	lea    r12,[r13+0x10]
  40c33a:	mov    rax,r15
  40c33d:	sub    rax,r12
  40c340:	cmp    rax,0x8
  40c344:	jb     40c34e <main@@Base+0x527e>
  40c346:	movbe  rcx,QWORD PTR [r12]
  40c34c:	jmp    40c3cd <main@@Base+0x52fd>
  40c34e:	lea    rcx,[rax-0x1]
  40c352:	cmp    rcx,0x6
  40c356:	ja     41043a <main@@Base+0x936a>
  40c35c:	lea    rdx,[rip+0x27d75]        # 4340d8 <_IO_stdin_used@@Base+0xd8>
  40c363:	mov    rsi,rdx
  40c366:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40c36a:	add    rdx,rsi
  40c36d:	xor    r8d,r8d
  40c370:	xor    ecx,ecx
  40c372:	xor    esi,esi
  40c374:	xor    edi,edi
  40c376:	xor    ebp,ebp
  40c378:	xor    ebx,ebx
  40c37a:	jmp    rdx
  40c37c:	movsx  r8,BYTE PTR [r13+0x16]
  40c381:	shl    r8,0x8
  40c385:	movsx  rcx,BYTE PTR [r13+0x15]
  40c38a:	shl    rcx,0x10
  40c38e:	or     rcx,r8
  40c391:	movsx  rsi,BYTE PTR [r13+0x14]
  40c396:	shl    rsi,0x18
  40c39a:	or     rsi,rcx
  40c39d:	movsx  rdi,BYTE PTR [r13+0x13]
  40c3a2:	shl    rdi,0x20
  40c3a6:	or     rdi,rsi
  40c3a9:	movsx  rbp,BYTE PTR [r13+0x12]
  40c3ae:	shl    rbp,0x28
  40c3b2:	or     rbp,rdi
  40c3b5:	movsx  rbx,BYTE PTR [r13+0x11]
  40c3ba:	shl    rbx,0x30
  40c3be:	or     rbx,rbp
  40c3c1:	movzx  ecx,BYTE PTR [r12]
  40c3c6:	shl    rcx,0x38
  40c3ca:	or     rcx,rbx
  40c3cd:	shr    rcx,0x38
  40c3d1:	cmp    rcx,0x61
  40c3d5:	jne    41043a <main@@Base+0x936a>
  40c3db:	cmp    rax,0x2
  40c3df:	jl     41043a <main@@Base+0x936a>
  40c3e5:	mov    rax,QWORD PTR [rsp+0x8]
  40c3ea:	cmp    DWORD PTR [rax],0x0
  40c3ed:	mov    al,BYTE PTR [r13+0x11]
  40c3f1:	je     40d280 <main@@Base+0x61b0>
  40c3f7:	cmp    al,0x21
  40c3f9:	jl     40c403 <main@@Base+0x5333>
  40c3fb:	cmp    al,0x3a
  40c3fd:	jne    41043a <main@@Base+0x936a>
  40c403:	add    r13,0x11
  40c407:	mov    rax,QWORD PTR [rsp+0x8]
  40c40c:	mov    DWORD PTR [rax],0x0
  40c412:	jmp    40d28c <main@@Base+0x61bc>
  40c417:	mov    rdi,r14
  40c41a:	mov    rdx,r15
  40c41d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c422:	mov    rsi,rax
  40c425:	cmp    rsi,r15
  40c428:	je     40c56a <main@@Base+0x549a>
  40c42e:	cmp    BYTE PTR [rsi],0x3a
  40c431:	jne    40c56a <main@@Base+0x549a>
  40c437:	lea    rcx,[rsi+0x1]
  40c43b:	mov    rax,r15
  40c43e:	sub    rax,rcx
  40c441:	cmp    rax,0x2
  40c445:	jl     40d96e <main@@Base+0x689e>
  40c44b:	cmp    BYTE PTR [rcx],0x20
  40c44e:	jg     40d97f <main@@Base+0x68af>
  40c454:	jne    40d96e <main@@Base+0x689e>
  40c45a:	cmp    BYTE PTR [rsi+0x2],0x20
  40c45e:	jle    40d96e <main@@Base+0x689e>
  40c464:	add    rsi,0x2
  40c468:	mov    rcx,rsi
  40c46b:	cmp    r12,rcx
  40c46e:	jne    40d988 <main@@Base+0x68b8>
  40c474:	lea    r12,[r13+0x10]
  40c478:	mov    rax,r15
  40c47b:	sub    rax,r12
  40c47e:	cmp    rax,0x8
  40c482:	jb     40c48c <main@@Base+0x53bc>
  40c484:	movbe  rcx,QWORD PTR [r12]
  40c48a:	jmp    40c50b <main@@Base+0x543b>
  40c48c:	lea    rcx,[rax-0x1]
  40c490:	cmp    rcx,0x6
  40c494:	ja     41043a <main@@Base+0x936a>
  40c49a:	lea    rdx,[rip+0x27c1b]        # 4340bc <_IO_stdin_used@@Base+0xbc>
  40c4a1:	mov    rsi,rdx
  40c4a4:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  40c4a8:	add    rdx,rsi
  40c4ab:	xor    r8d,r8d
  40c4ae:	xor    ecx,ecx
  40c4b0:	xor    esi,esi
  40c4b2:	xor    edi,edi
  40c4b4:	xor    ebp,ebp
  40c4b6:	xor    ebx,ebx
  40c4b8:	jmp    rdx
  40c4ba:	movsx  r8,BYTE PTR [r13+0x16]
  40c4bf:	shl    r8,0x8
  40c4c3:	movsx  rcx,BYTE PTR [r13+0x15]
  40c4c8:	shl    rcx,0x10
  40c4cc:	or     rcx,r8
  40c4cf:	movsx  rsi,BYTE PTR [r13+0x14]
  40c4d4:	shl    rsi,0x18
  40c4d8:	or     rsi,rcx
  40c4db:	movsx  rdi,BYTE PTR [r13+0x13]
  40c4e0:	shl    rdi,0x20
  40c4e4:	or     rdi,rsi
  40c4e7:	movsx  rbp,BYTE PTR [r13+0x12]
  40c4ec:	shl    rbp,0x28
  40c4f0:	or     rbp,rdi
  40c4f3:	movsx  rbx,BYTE PTR [r13+0x11]
  40c4f8:	shl    rbx,0x30
  40c4fc:	or     rbx,rbp
  40c4ff:	movzx  ecx,BYTE PTR [r12]
  40c504:	shl    rcx,0x38
  40c508:	or     rcx,rbx
  40c50b:	shr    rcx,0x38
  40c50f:	cmp    rcx,0x61
  40c513:	jne    41043a <main@@Base+0x936a>
  40c519:	cmp    rax,0x2
  40c51d:	jl     41043a <main@@Base+0x936a>
  40c523:	mov    rax,QWORD PTR [rsp+0x8]
  40c528:	cmp    DWORD PTR [rax],0x0
  40c52b:	mov    al,BYTE PTR [r13+0x11]
  40c52f:	je     40d2c9 <main@@Base+0x61f9>
  40c535:	cmp    al,0x21
  40c537:	jl     40c541 <main@@Base+0x5471>
  40c539:	cmp    al,0x3a
  40c53b:	jne    41043a <main@@Base+0x936a>
  40c541:	add    r13,0x11
  40c545:	mov    rax,QWORD PTR [rsp+0x8]
  40c54a:	mov    DWORD PTR [rax],0x0
  40c550:	jmp    40d2d5 <main@@Base+0x6205>
  40c555:	mov    rdi,r14
  40c558:	mov    rdx,r15
  40c55b:	mov    ecx,0x4
  40c560:	call   424090 <flatcc_json_parser_set_error@@Base>
  40c565:	jmp    40d8f3 <main@@Base+0x6823>
  40c56a:	mov    rdi,r14
  40c56d:	mov    rdx,r15
  40c570:	mov    ecx,0x4
  40c575:	call   424090 <flatcc_json_parser_set_error@@Base>
  40c57a:	jmp    40d97c <main@@Base+0x68ac>
  40c57f:	mov    rdi,r14
  40c582:	mov    rsi,rax
  40c585:	mov    rdx,r15
  40c588:	mov    ecx,0x9
  40c58d:	jmp    4099fb <main@@Base+0x292b>
  40c592:	mov    rdi,r14
  40c595:	mov    rsi,rbx
  40c598:	mov    rdx,r15
  40c59b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c5a0:	mov    rbx,rax
  40c5a3:	cmp    r12,rbx
  40c5a6:	je     409eb5 <main@@Base+0x2de5>
  40c5ac:	mov    QWORD PTR [rsp+0x10],0x0
  40c5b5:	mov    DWORD PTR [rsp+0x20],0x0
  40c5bd:	mov    DWORD PTR [rsp+0x4],0x0
  40c5c5:	xor    r12d,r12d
  40c5c8:	cmp    rbx,r15
  40c5cb:	je     40c629 <main@@Base+0x5559>
  40c5cd:	mov    rdi,r14
  40c5d0:	mov    rsi,rbx
  40c5d3:	mov    rdx,r15
  40c5d6:	lea    rcx,[rsp+0x20]
  40c5db:	mov    rbp,rbx
  40c5de:	lea    r8,[rsp+0x10]
  40c5e3:	call   425c50 <flatcc_json_parser_integer@@Base>
  40c5e8:	cmp    rax,rbx
  40c5eb:	je     40cab2 <main@@Base+0x59e2>
  40c5f1:	mov    rcx,QWORD PTR [rsp+0x10]
  40c5f6:	cmp    DWORD PTR [rsp+0x20],0x0
  40c5fb:	je     40d312 <main@@Base+0x6242>
  40c601:	mov    edx,0xffffffff
  40c606:	add    rdx,0xffffffff80000001
  40c60d:	cmp    rcx,rdx
  40c610:	jbe    40d7f8 <main@@Base+0x6728>
  40c616:	mov    rdi,r14
  40c619:	mov    rsi,rax
  40c61c:	mov    rdx,r15
  40c61f:	mov    ecx,0x8
  40c624:	jmp    40d32d <main@@Base+0x625d>
  40c629:	mov    rax,r15
  40c62c:	jmp    40d802 <main@@Base+0x6732>
  40c631:	mov    rdi,r14
  40c634:	mov    rsi,r13
  40c637:	mov    rdx,r15
  40c63a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c63f:	mov    r13,rax
  40c642:	cmp    r13,r15
  40c645:	je     40c691 <main@@Base+0x55c1>
  40c647:	cmp    BYTE PTR [r13+0x0],0x3a
  40c64c:	jne    40c691 <main@@Base+0x55c1>
  40c64e:	lea    rbx,[r13+0x1]
  40c652:	mov    rax,r15
  40c655:	sub    rax,rbx
  40c658:	cmp    rax,0x2
  40c65c:	jl     40da12 <main@@Base+0x6942>
  40c662:	cmp    BYTE PTR [rbx],0x20
  40c665:	jg     40da23 <main@@Base+0x6953>
  40c66b:	jne    40da12 <main@@Base+0x6942>
  40c671:	cmp    BYTE PTR [r13+0x2],0x20
  40c676:	jle    40da12 <main@@Base+0x6942>
  40c67c:	add    r13,0x2
  40c680:	mov    rbx,r13
  40c683:	cmp    r12,rbx
  40c686:	jne    40da2c <main@@Base+0x695c>
  40c68c:	jmp    41043a <main@@Base+0x936a>
  40c691:	mov    rdi,r14
  40c694:	mov    rsi,r13
  40c697:	mov    rdx,r15
  40c69a:	mov    ecx,0x4
  40c69f:	call   424090 <flatcc_json_parser_set_error@@Base>
  40c6a4:	jmp    40da20 <main@@Base+0x6950>
  40c6a9:	mov    rbp,r15
  40c6ac:	jmp    40a2fd <main@@Base+0x322d>
  40c6b1:	mov    BYTE PTR [rsp+0x4],0x0
  40c6b6:	lea    rax,[rbx+0x5]
  40c6ba:	xor    r12d,r12d
  40c6bd:	jmp    40b28b <main@@Base+0x41bb>
  40c6c2:	cmp    cl,0x5d
  40c6c5:	je     40a339 <main@@Base+0x3269>
  40c6cb:	mov    rdi,r14
  40c6ce:	mov    rsi,rax
  40c6d1:	jmp    40c6d9 <main@@Base+0x5609>
  40c6d3:	mov    rdi,r14
  40c6d6:	mov    rsi,r15
  40c6d9:	mov    rdx,r15
  40c6dc:	mov    ecx,0x9
  40c6e1:	jmp    40a2f5 <main@@Base+0x3225>
  40c6e6:	lea    rbp,[rbx+0x1]
  40c6ea:	mov    rax,r15
  40c6ed:	sub    rax,rbp
  40c6f0:	cmp    rax,0x2
  40c6f4:	jl     40c714 <main@@Base+0x5644>
  40c6f6:	cmp    BYTE PTR [rbp+0x0],0x20
  40c6fa:	jg     40a2fd <main@@Base+0x322d>
  40c700:	jne    40c714 <main@@Base+0x5644>
  40c702:	cmp    BYTE PTR [rbx+0x2],0x20
  40c706:	jle    40c714 <main@@Base+0x5644>
  40c708:	add    rbx,0x2
  40c70c:	mov    rbp,rbx
  40c70f:	jmp    40a2fd <main@@Base+0x322d>
  40c714:	mov    rdi,r14
  40c717:	mov    rsi,rbp
  40c71a:	mov    rdx,r15
  40c71d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c722:	jmp    40a2fa <main@@Base+0x322a>
  40c727:	cmp    al,0x22
  40c729:	jne    41043a <main@@Base+0x936a>
  40c72f:	add    r13,0x10
  40c733:	mov    rax,r15
  40c736:	sub    rax,r13
  40c739:	cmp    rax,0x2
  40c73d:	jl     40c8aa <main@@Base+0x57da>
  40c743:	cmp    BYTE PTR [r13+0x0],0x20
  40c748:	jg     40c8bb <main@@Base+0x57eb>
  40c74e:	jne    40c8aa <main@@Base+0x57da>
  40c754:	cmp    BYTE PTR [r13+0x1],0x20
  40c759:	jle    40c8aa <main@@Base+0x57da>
  40c75f:	inc    r13
  40c762:	cmp    r13,r15
  40c765:	jne    40c8c0 <main@@Base+0x57f0>
  40c76b:	jmp    40c90a <main@@Base+0x583a>
  40c770:	mov    rdi,r14
  40c773:	mov    rsi,rax
  40c776:	mov    rdx,r15
  40c779:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c77e:	cmp    r12,rax
  40c781:	je     41043a <main@@Base+0x936a>
  40c787:	mov    r9,QWORD PTR [rsp+0x40]
  40c78c:	mov    rdi,r14
  40c78f:	mov    rsi,rax
  40c792:	mov    rdx,r15
  40c795:	mov    ecx,0x0
  40c79a:	mov    r8d,0x8
  40c7a0:	lea    rax,[rip+0x6ee9]        # 413690 <main@@Base+0xc5c0>
  40c7a7:	push   rax
  40c7a8:	lea    rax,[rip+0x369b1]        # 443160 <__data_start@@Base+0xb0>
  40c7af:	push   rax
  40c7b0:	call   4265c0 <flatcc_json_parser_union_type@@Base>
  40c7b5:	add    rsp,0x10
  40c7b9:	jmp    410448 <main@@Base+0x9378>
  40c7be:	cmp    al,0x22
  40c7c0:	jne    41043a <main@@Base+0x936a>
  40c7c6:	add    r13,0x15
  40c7ca:	mov    rax,r15
  40c7cd:	sub    rax,r13
  40c7d0:	cmp    rax,0x2
  40c7d4:	jl     40c922 <main@@Base+0x5852>
  40c7da:	cmp    BYTE PTR [r13+0x0],0x20
  40c7df:	jg     40c933 <main@@Base+0x5863>
  40c7e5:	jne    40c922 <main@@Base+0x5852>
  40c7eb:	cmp    BYTE PTR [r13+0x1],0x20
  40c7f0:	jle    40c922 <main@@Base+0x5852>
  40c7f6:	inc    r13
  40c7f9:	cmp    r13,r15
  40c7fc:	jne    40c93c <main@@Base+0x586c>
  40c802:	jmp    40c9ea <main@@Base+0x591a>
  40c807:	cmp    al,0x22
  40c809:	jne    41043a <main@@Base+0x936a>
  40c80f:	add    r13,0x12
  40c813:	mov    rax,r15
  40c816:	sub    rax,r13
  40c819:	cmp    rax,0x2
  40c81d:	jl     40c98a <main@@Base+0x58ba>
  40c823:	cmp    BYTE PTR [r13+0x0],0x20
  40c828:	jg     40c99b <main@@Base+0x58cb>
  40c82e:	jne    40c98a <main@@Base+0x58ba>
  40c834:	cmp    BYTE PTR [r13+0x1],0x20
  40c839:	jle    40c98a <main@@Base+0x58ba>
  40c83f:	inc    r13
  40c842:	cmp    r13,r15
  40c845:	jne    40c9a0 <main@@Base+0x58d0>
  40c84b:	jmp    40ca02 <main@@Base+0x5932>
  40c850:	mov    rdi,r14
  40c853:	mov    rsi,rax
  40c856:	mov    rdx,r15
  40c859:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c85e:	mov    rbx,r15
  40c861:	cmp    rax,r15
  40c864:	je     40d60d <main@@Base+0x653d>
  40c86a:	cmp    BYTE PTR [rax],0x5d
  40c86d:	jne    40d60a <main@@Base+0x653a>
  40c873:	lea    rbp,[rax+0x1]
  40c877:	mov    rcx,r15
  40c87a:	sub    rcx,rbp
  40c87d:	cmp    rcx,0x2
  40c881:	jl     40ea2b <main@@Base+0x795b>
  40c887:	cmp    BYTE PTR [rbp+0x0],0x20
  40c88b:	jg     40b3db <main@@Base+0x430b>
  40c891:	jne    40ea2b <main@@Base+0x795b>
  40c897:	cmp    BYTE PTR [rax+0x2],0x20
  40c89b:	jle    40ea2b <main@@Base+0x795b>
  40c8a1:	add    rax,0x2
  40c8a5:	jmp    40b3d8 <main@@Base+0x4308>
  40c8aa:	mov    rdi,r14
  40c8ad:	mov    rsi,r13
  40c8b0:	mov    rdx,r15
  40c8b3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c8b8:	mov    r13,rax
  40c8bb:	cmp    r13,r15
  40c8be:	je     40c90a <main@@Base+0x583a>
  40c8c0:	cmp    BYTE PTR [r13+0x0],0x3a
  40c8c5:	jne    40c90a <main@@Base+0x583a>
  40c8c7:	lea    rbx,[r13+0x1]
  40c8cb:	mov    rax,r15
  40c8ce:	sub    rax,rbx
  40c8d1:	cmp    rax,0x2
  40c8d5:	jl     40db18 <main@@Base+0x6a48>
  40c8db:	cmp    BYTE PTR [rbx],0x20
  40c8de:	jg     40db29 <main@@Base+0x6a59>
  40c8e4:	jne    40db18 <main@@Base+0x6a48>
  40c8ea:	cmp    BYTE PTR [r13+0x2],0x20
  40c8ef:	jle    40db18 <main@@Base+0x6a48>
  40c8f5:	add    r13,0x2
  40c8f9:	mov    rbx,r13
  40c8fc:	cmp    r12,rbx
  40c8ff:	jne    40db32 <main@@Base+0x6a62>
  40c905:	jmp    41043a <main@@Base+0x936a>
  40c90a:	mov    rdi,r14
  40c90d:	mov    rsi,r13
  40c910:	mov    rdx,r15
  40c913:	mov    ecx,0x4
  40c918:	call   424090 <flatcc_json_parser_set_error@@Base>
  40c91d:	jmp    40db26 <main@@Base+0x6a56>
  40c922:	mov    rdi,r14
  40c925:	mov    rsi,r13
  40c928:	mov    rdx,r15
  40c92b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c930:	mov    r13,rax
  40c933:	cmp    r13,r15
  40c936:	je     40c9ea <main@@Base+0x591a>
  40c93c:	cmp    BYTE PTR [r13+0x0],0x3a
  40c941:	jne    40c9ea <main@@Base+0x591a>
  40c947:	lea    rbx,[r13+0x1]
  40c94b:	mov    rax,r15
  40c94e:	sub    rax,rbx
  40c951:	cmp    rax,0x2
  40c955:	jl     40dbcb <main@@Base+0x6afb>
  40c95b:	cmp    BYTE PTR [rbx],0x20
  40c95e:	jg     40dbdc <main@@Base+0x6b0c>
  40c964:	jne    40dbcb <main@@Base+0x6afb>
  40c96a:	cmp    BYTE PTR [r13+0x2],0x20
  40c96f:	jle    40dbcb <main@@Base+0x6afb>
  40c975:	add    r13,0x2
  40c979:	mov    rbx,r13
  40c97c:	cmp    r12,rbx
  40c97f:	jne    40dbe5 <main@@Base+0x6b15>
  40c985:	jmp    41043a <main@@Base+0x936a>
  40c98a:	mov    rdi,r14
  40c98d:	mov    rsi,r13
  40c990:	mov    rdx,r15
  40c993:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40c998:	mov    r13,rax
  40c99b:	cmp    r13,r15
  40c99e:	je     40ca02 <main@@Base+0x5932>
  40c9a0:	cmp    BYTE PTR [r13+0x0],0x3a
  40c9a5:	jne    40ca02 <main@@Base+0x5932>
  40c9a7:	lea    rbx,[r13+0x1]
  40c9ab:	mov    rax,r15
  40c9ae:	sub    rax,rbx
  40c9b1:	cmp    rax,0x2
  40c9b5:	jl     40dc95 <main@@Base+0x6bc5>
  40c9bb:	cmp    BYTE PTR [rbx],0x20
  40c9be:	jg     40dca6 <main@@Base+0x6bd6>
  40c9c4:	jne    40dc95 <main@@Base+0x6bc5>
  40c9ca:	cmp    BYTE PTR [r13+0x2],0x20
  40c9cf:	jle    40dc95 <main@@Base+0x6bc5>
  40c9d5:	add    r13,0x2
  40c9d9:	mov    rbx,r13
  40c9dc:	cmp    r12,rbx
  40c9df:	jne    40dcaf <main@@Base+0x6bdf>
  40c9e5:	jmp    41043a <main@@Base+0x936a>
  40c9ea:	mov    rdi,r14
  40c9ed:	mov    rsi,r13
  40c9f0:	mov    rdx,r15
  40c9f3:	mov    ecx,0x4
  40c9f8:	call   424090 <flatcc_json_parser_set_error@@Base>
  40c9fd:	jmp    40dbd9 <main@@Base+0x6b09>
  40ca02:	mov    rdi,r14
  40ca05:	mov    rsi,r13
  40ca08:	mov    rdx,r15
  40ca0b:	mov    ecx,0x4
  40ca10:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ca15:	jmp    40dca3 <main@@Base+0x6bd3>
  40ca1a:	mov    rbp,r15
  40ca1d:	jmp    40af75 <main@@Base+0x3ea5>
  40ca22:	cmp    cl,0x5d
  40ca25:	jne    40d876 <main@@Base+0x67a6>
  40ca2b:	lea    rbp,[rax+0x1]
  40ca2f:	mov    rcx,r15
  40ca32:	sub    rcx,rbp
  40ca35:	cmp    rcx,0x2
  40ca39:	jl     40ca4b <main@@Base+0x597b>
  40ca3b:	cmp    BYTE PTR [rbp+0x0],0x20
  40ca3f:	jg     40af75 <main@@Base+0x3ea5>
  40ca45:	je     40afed <main@@Base+0x3f1d>
  40ca4b:	mov    rdi,r14
  40ca4e:	mov    rsi,rbp
  40ca51:	mov    rdx,r15
  40ca54:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ca59:	jmp    40af72 <main@@Base+0x3ea2>
  40ca5e:	cmp    al,0x22
  40ca60:	jne    41043a <main@@Base+0x936a>
  40ca66:	add    r13,0x12
  40ca6a:	mov    rax,r15
  40ca6d:	sub    rax,r13
  40ca70:	cmp    rax,0x2
  40ca74:	jl     40cb8b <main@@Base+0x5abb>
  40ca7a:	cmp    BYTE PTR [r13+0x0],0x20
  40ca7f:	jg     40cb9c <main@@Base+0x5acc>
  40ca85:	jne    40cb8b <main@@Base+0x5abb>
  40ca8b:	cmp    BYTE PTR [r13+0x1],0x20
  40ca90:	jle    40cb8b <main@@Base+0x5abb>
  40ca96:	inc    r13
  40ca99:	cmp    r13,r15
  40ca9c:	jne    40cba1 <main@@Base+0x5ad1>
  40caa2:	jmp    40cbd9 <main@@Base+0x5b09>
  40caa7:	mov    rdi,r14
  40caaa:	mov    rsi,r15
  40caad:	jmp    40d87c <main@@Base+0x67ac>
  40cab2:	mov    rax,rbx
  40cab5:	jmp    40d802 <main@@Base+0x6732>
  40caba:	mov    rdi,r14
  40cabd:	mov    rsi,rbx
  40cac0:	mov    rdx,r15
  40cac3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cac8:	mov    rbx,rax
  40cacb:	cmp    r12,rbx
  40cace:	je     41043a <main@@Base+0x936a>
  40cad4:	mov    DWORD PTR [rsp+0x1c],0x0
  40cadc:	mov    rdi,QWORD PTR [r14]
  40cadf:	mov    esi,0x3
  40cae4:	call   41f6c0 <flatcc_builder_start_table@@Base>
  40cae9:	test   eax,eax
  40caeb:	jne    40d1cf <main@@Base+0x60ff>
  40caf1:	cmp    rbx,r15
  40caf4:	je     40d1ab <main@@Base+0x60db>
  40cafa:	cmp    BYTE PTR [rbx],0x7b
  40cafd:	jne    40d1ab <main@@Base+0x60db>
  40cb03:	lea    rax,[rbx+0x1]
  40cb07:	mov    rcx,r15
  40cb0a:	sub    rcx,rax
  40cb0d:	cmp    rcx,0x2
  40cb11:	jl     40e7c6 <main@@Base+0x76f6>
  40cb17:	cmp    BYTE PTR [rax],0x20
  40cb1a:	jg     40e7d4 <main@@Base+0x7704>
  40cb20:	jne    40e7c6 <main@@Base+0x76f6>
  40cb26:	cmp    BYTE PTR [rbx+0x2],0x20
  40cb2a:	jle    40e7c6 <main@@Base+0x76f6>
  40cb30:	add    rbx,0x2
  40cb34:	mov    rax,rbx
  40cb37:	jmp    40e7d4 <main@@Base+0x7704>
  40cb3c:	mov    rbp,r15
  40cb3f:	jmp    41044b <main@@Base+0x937b>
  40cb44:	cmp    cl,0x7d
  40cb47:	jne    40d9fa <main@@Base+0x692a>
  40cb4d:	lea    rbp,[rax+0x1]
  40cb51:	mov    rcx,r15
  40cb54:	sub    rcx,rbp
  40cb57:	cmp    rcx,0x2
  40cb5b:	jl     40cb78 <main@@Base+0x5aa8>
  40cb5d:	cmp    BYTE PTR [rbp+0x0],0x20
  40cb61:	jg     41044b <main@@Base+0x937b>
  40cb67:	jne    40cb78 <main@@Base+0x5aa8>
  40cb69:	cmp    BYTE PTR [rax+0x2],0x20
  40cb6d:	jle    40cb78 <main@@Base+0x5aa8>
  40cb6f:	add    rax,0x2
  40cb73:	jmp    410448 <main@@Base+0x9378>
  40cb78:	mov    rdi,r14
  40cb7b:	mov    rsi,rbp
  40cb7e:	mov    rdx,r15
  40cb81:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cb86:	jmp    410448 <main@@Base+0x9378>
  40cb8b:	mov    rdi,r14
  40cb8e:	mov    rsi,r13
  40cb91:	mov    rdx,r15
  40cb94:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cb99:	mov    r13,rax
  40cb9c:	cmp    r13,r15
  40cb9f:	je     40cbd9 <main@@Base+0x5b09>
  40cba1:	cmp    BYTE PTR [r13+0x0],0x3a
  40cba6:	jne    40cbd9 <main@@Base+0x5b09>
  40cba8:	lea    rcx,[r13+0x1]
  40cbac:	mov    rax,r15
  40cbaf:	mov    rsi,rcx
  40cbb2:	sub    rax,rcx
  40cbb5:	cmp    rax,0x2
  40cbb9:	jl     40ef1c <main@@Base+0x7e4c>
  40cbbf:	cmp    BYTE PTR [rsi],0x20
  40cbc2:	jle    40ef05 <main@@Base+0x7e35>
  40cbc8:	mov    r13,rsi
  40cbcb:	cmp    r12,r13
  40cbce:	jne    40ef33 <main@@Base+0x7e63>
  40cbd4:	jmp    41043a <main@@Base+0x936a>
  40cbd9:	mov    rdi,r14
  40cbdc:	mov    rsi,r13
  40cbdf:	mov    rdx,r15
  40cbe2:	mov    ecx,0x4
  40cbe7:	call   424090 <flatcc_json_parser_set_error@@Base>
  40cbec:	jmp    40ef27 <main@@Base+0x7e57>
  40cbf1:	mov    rdi,r14
  40cbf4:	mov    rsi,rbx
  40cbf7:	mov    rdx,r15
  40cbfa:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cbff:	mov    rbx,rax
  40cc02:	cmp    r12,rbx
  40cc05:	je     41043a <main@@Base+0x936a>
  40cc0b:	mov    rdi,QWORD PTR [r14]
  40cc0e:	call   41f2d0 <flatcc_builder_start_offset_vector@@Base>
  40cc13:	test   eax,eax
  40cc15:	jne    407c81 <main@@Base+0xbb1>
  40cc1b:	cmp    rbx,r15
  40cc1e:	je     40cc5e <main@@Base+0x5b8e>
  40cc20:	cmp    BYTE PTR [rbx],0x5b
  40cc23:	jne    40cc5e <main@@Base+0x5b8e>
  40cc25:	lea    rax,[rbx+0x1]
  40cc29:	mov    rcx,r15
  40cc2c:	sub    rcx,rax
  40cc2f:	cmp    rcx,0x2
  40cc33:	jl     40d4a7 <main@@Base+0x63d7>
  40cc39:	cmp    BYTE PTR [rax],0x20
  40cc3c:	jg     40d4b5 <main@@Base+0x63e5>
  40cc42:	jne    40d4a7 <main@@Base+0x63d7>
  40cc48:	cmp    BYTE PTR [rbx+0x2],0x20
  40cc4c:	jle    40d4a7 <main@@Base+0x63d7>
  40cc52:	add    rbx,0x2
  40cc56:	mov    rax,rbx
  40cc59:	jmp    40d4b5 <main@@Base+0x63e5>
  40cc5e:	mov    rdi,r14
  40cc61:	mov    rsi,rbx
  40cc64:	mov    rdx,r15
  40cc67:	mov    ecx,0x16
  40cc6c:	call   424090 <flatcc_json_parser_set_error@@Base>
  40cc71:	mov    rbp,rax
  40cc74:	mov    rdi,QWORD PTR [r14]
  40cc77:	call   41f490 <flatcc_builder_end_offset_vector@@Base>
  40cc7c:	mov    DWORD PTR [rsp+0x1c],eax
  40cc80:	test   eax,eax
  40cc82:	je     410ce5 <main@@Base+0x9c15>
  40cc88:	mov    rdi,QWORD PTR [r14]
  40cc8b:	mov    esi,0x1c
  40cc90:	jmp    40af91 <main@@Base+0x3ec1>
  40cc95:	mov    rdi,r14
  40cc98:	mov    rsi,rbx
  40cc9b:	mov    rdx,r15
  40cc9e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cca3:	mov    rbx,rax
  40cca6:	cmp    r12,rbx
  40cca9:	je     41043a <main@@Base+0x936a>
  40ccaf:	mov    rdi,QWORD PTR [r14]
  40ccb2:	mov    esi,0x8
  40ccb7:	mov    ecx,0x1fffffff
  40ccbc:	mov    edx,0x4
  40ccc1:	call   41f250 <flatcc_builder_start_vector@@Base>
  40ccc6:	test   eax,eax
  40ccc8:	jne    407c81 <main@@Base+0xbb1>
  40ccce:	cmp    rbx,r15
  40ccd1:	je     40cd11 <main@@Base+0x5c41>
  40ccd3:	cmp    BYTE PTR [rbx],0x5b
  40ccd6:	jne    40cd11 <main@@Base+0x5c41>
  40ccd8:	lea    rax,[rbx+0x1]
  40ccdc:	mov    rcx,r15
  40ccdf:	sub    rcx,rax
  40cce2:	cmp    rcx,0x2
  40cce6:	jl     40d501 <main@@Base+0x6431>
  40ccec:	cmp    BYTE PTR [rax],0x20
  40ccef:	jg     40d50f <main@@Base+0x643f>
  40ccf5:	jne    40d501 <main@@Base+0x6431>
  40ccfb:	cmp    BYTE PTR [rbx+0x2],0x20
  40ccff:	jle    40d501 <main@@Base+0x6431>
  40cd05:	add    rbx,0x2
  40cd09:	mov    rax,rbx
  40cd0c:	jmp    40d50f <main@@Base+0x643f>
  40cd11:	mov    rdi,r14
  40cd14:	mov    rsi,rbx
  40cd17:	mov    rdx,r15
  40cd1a:	mov    ecx,0x16
  40cd1f:	call   424090 <flatcc_json_parser_set_error@@Base>
  40cd24:	mov    rbp,rax
  40cd27:	mov    rdi,QWORD PTR [r14]
  40cd2a:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40cd2f:	mov    DWORD PTR [rsp+0x1c],eax
  40cd33:	test   eax,eax
  40cd35:	je     410ce5 <main@@Base+0x9c15>
  40cd3b:	mov    rdi,QWORD PTR [r14]
  40cd3e:	mov    esi,0x1d
  40cd43:	jmp    40af91 <main@@Base+0x3ec1>
  40cd48:	mov    rdi,r14
  40cd4b:	mov    rsi,rbx
  40cd4e:	mov    rdx,r15
  40cd51:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cd56:	mov    rbx,rax
  40cd59:	cmp    r12,rbx
  40cd5c:	je     41043a <main@@Base+0x936a>
  40cd62:	mov    rdi,QWORD PTR [r14]
  40cd65:	call   41f2d0 <flatcc_builder_start_offset_vector@@Base>
  40cd6a:	test   eax,eax
  40cd6c:	jne    407c81 <main@@Base+0xbb1>
  40cd72:	cmp    rbx,r15
  40cd75:	je     40cdb5 <main@@Base+0x5ce5>
  40cd77:	cmp    BYTE PTR [rbx],0x5b
  40cd7a:	jne    40cdb5 <main@@Base+0x5ce5>
  40cd7c:	lea    rax,[rbx+0x1]
  40cd80:	mov    rcx,r15
  40cd83:	sub    rcx,rax
  40cd86:	cmp    rcx,0x2
  40cd8a:	jl     40d55b <main@@Base+0x648b>
  40cd90:	cmp    BYTE PTR [rax],0x20
  40cd93:	jg     40d569 <main@@Base+0x6499>
  40cd99:	jne    40d55b <main@@Base+0x648b>
  40cd9f:	cmp    BYTE PTR [rbx+0x2],0x20
  40cda3:	jle    40d55b <main@@Base+0x648b>
  40cda9:	add    rbx,0x2
  40cdad:	mov    rax,rbx
  40cdb0:	jmp    40d569 <main@@Base+0x6499>
  40cdb5:	mov    rdi,r14
  40cdb8:	mov    rsi,rbx
  40cdbb:	mov    rdx,r15
  40cdbe:	mov    ecx,0x16
  40cdc3:	call   424090 <flatcc_json_parser_set_error@@Base>
  40cdc8:	mov    rbp,rax
  40cdcb:	mov    rdi,QWORD PTR [r14]
  40cdce:	call   41f490 <flatcc_builder_end_offset_vector@@Base>
  40cdd3:	mov    DWORD PTR [rsp+0x1c],eax
  40cdd7:	test   eax,eax
  40cdd9:	je     410ce5 <main@@Base+0x9c15>
  40cddf:	mov    rdi,QWORD PTR [r14]
  40cde2:	mov    esi,0xb
  40cde7:	jmp    40af91 <main@@Base+0x3ec1>
  40cdec:	mov    rdi,r14
  40cdef:	mov    rsi,r15
  40cdf2:	jmp    40da00 <main@@Base+0x6930>
  40cdf7:	mov    rdi,r14
  40cdfa:	mov    rsi,rbx
  40cdfd:	mov    rdx,r15
  40ce00:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ce05:	mov    rbx,rax
  40ce08:	cmp    r13,rbx
  40ce0b:	je     40cfc1 <main@@Base+0x5ef1>
  40ce11:	mov    QWORD PTR [rsp+0x10],0x0
  40ce1a:	mov    DWORD PTR [rsp+0x20],0x0
  40ce22:	mov    WORD PTR [rsp+0x4],0x0
  40ce29:	cmp    rbx,r15
  40ce2c:	je     40ce70 <main@@Base+0x5da0>
  40ce2e:	mov    rdi,r14
  40ce31:	mov    rsi,rbx
  40ce34:	mov    rdx,r15
  40ce37:	lea    rcx,[rsp+0x20]
  40ce3c:	lea    r8,[rsp+0x10]
  40ce41:	call   425c50 <flatcc_json_parser_integer@@Base>
  40ce46:	cmp    rax,rbx
  40ce49:	je     40ce78 <main@@Base+0x5da8>
  40ce4b:	mov    r12,QWORD PTR [rsp+0x10]
  40ce50:	cmp    DWORD PTR [rsp+0x20],0x0
  40ce55:	je     40ce80 <main@@Base+0x5db0>
  40ce57:	cmp    r12,0x8001
  40ce5e:	jb     40cea1 <main@@Base+0x5dd1>
  40ce60:	mov    rdi,r14
  40ce63:	mov    rsi,rax
  40ce66:	mov    rdx,r15
  40ce69:	mov    ecx,0x8
  40ce6e:	jmp    40ce97 <main@@Base+0x5dc7>
  40ce70:	xor    r12d,r12d
  40ce73:	mov    rax,r15
  40ce76:	jmp    40ceaa <main@@Base+0x5dda>
  40ce78:	xor    r12d,r12d
  40ce7b:	mov    rax,rbx
  40ce7e:	jmp    40ceaa <main@@Base+0x5dda>
  40ce80:	cmp    r12,0x8000
  40ce87:	jb     40cea4 <main@@Base+0x5dd4>
  40ce89:	mov    rdi,r14
  40ce8c:	mov    rsi,rax
  40ce8f:	mov    rdx,r15
  40ce92:	mov    ecx,0x7
  40ce97:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ce9c:	xor    r12d,r12d
  40ce9f:	jmp    40ceaa <main@@Base+0x5dda>
  40cea1:	neg    r12
  40cea4:	mov    WORD PTR [rsp+0x4],r12w
  40ceaa:	mov    rbp,rax
  40cead:	cmp    rbx,rax
  40ceb0:	jne    40cee7 <main@@Base+0x5e17>
  40ceb2:	mov    rdi,r14
  40ceb5:	mov    rsi,rbx
  40ceb8:	mov    rdx,r15
  40cebb:	lea    rcx,[rip+0x3627e]        # 443140 <__data_start@@Base+0x90>
  40cec2:	lea    r8,[rsp+0x4]
  40cec7:	call   412dc0 <main@@Base+0xbcf0>
  40cecc:	mov    rbp,rax
  40cecf:	cmp    rax,rbx
  40ced2:	je     410ce5 <main@@Base+0x9c15>
  40ced8:	cmp    rbp,r15
  40cedb:	je     410ce5 <main@@Base+0x9c15>
  40cee1:	movzx  r12d,WORD PTR [rsp+0x4]
  40cee7:	movzx  eax,r12w
  40ceeb:	cmp    eax,0x96
  40cef0:	jne    40cefd <main@@Base+0x5e2d>
  40cef2:	test   BYTE PTR [r14+0x10],0x2
  40cef7:	je     41044b <main@@Base+0x937b>
  40cefd:	mov    rdi,QWORD PTR [r14]
  40cf00:	mov    edx,0x2
  40cf05:	mov    esi,0x1
  40cf0a:	mov    ecx,0x2
  40cf0f:	call   420a40 <flatcc_builder_table_add@@Base>
  40cf14:	test   rax,rax
  40cf17:	je     410ce5 <main@@Base+0x9c15>
  40cf1d:	mov    WORD PTR [rax],r12w
  40cf21:	jmp    41044b <main@@Base+0x937b>
  40cf26:	mov    rdi,r14
  40cf29:	mov    rsi,rbx
  40cf2c:	mov    rdx,r15
  40cf2f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cf34:	mov    rbx,rax
  40cf37:	cmp    r13,rbx
  40cf3a:	je     40cfc1 <main@@Base+0x5ef1>
  40cf40:	mov    DWORD PTR [rsp+0x10],0x0
  40cf48:	mov    rdi,r14
  40cf4b:	mov    rsi,rbx
  40cf4e:	mov    rdx,r15
  40cf51:	lea    rcx,[rsp+0x10]
  40cf56:	call   425b30 <flatcc_json_parser_float@@Base>
  40cf5b:	mov    rbp,rax
  40cf5e:	cmp    rbx,rax
  40cf61:	jne    40cf92 <main@@Base+0x5ec2>
  40cf63:	mov    rdi,r14
  40cf66:	mov    rsi,rbx
  40cf69:	mov    rdx,r15
  40cf6c:	lea    rcx,[rip+0x3626d]        # 4431e0 <__data_start@@Base+0x130>
  40cf73:	lea    r8,[rsp+0x10]
  40cf78:	call   4149c0 <main@@Base+0xd8f0>
  40cf7d:	mov    rbp,rax
  40cf80:	cmp    rax,rbx
  40cf83:	je     410ce5 <main@@Base+0x9c15>
  40cf89:	cmp    rbp,r15
  40cf8c:	je     410ce5 <main@@Base+0x9c15>
  40cf92:	vmovss xmm0,DWORD PTR [rsp+0x10]
  40cf98:	vucomiss xmm0,DWORD PTR [rip+0x27064]        # 434004 <_IO_stdin_used@@Base+0x4>
  40cfa0:	jne    40cfaf <main@@Base+0x5edf>
  40cfa2:	jp     40cfaf <main@@Base+0x5edf>
  40cfa4:	test   BYTE PTR [r14+0x10],0x2
  40cfa9:	je     41044b <main@@Base+0x937b>
  40cfaf:	mov    rdi,QWORD PTR [r14]
  40cfb2:	mov    edx,0x4
  40cfb7:	mov    esi,0x19
  40cfbc:	jmp    40995e <main@@Base+0x288e>
  40cfc1:	mov    rdi,r14
  40cfc4:	mov    rsi,r13
  40cfc7:	jmp    410440 <main@@Base+0x9370>
  40cfcc:	mov    rdi,r14
  40cfcf:	mov    rsi,rcx
  40cfd2:	mov    rdx,r15
  40cfd5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40cfda:	mov    rcx,rax
  40cfdd:	cmp    r12,rcx
  40cfe0:	je     40ab7d <main@@Base+0x3aad>
  40cfe6:	mov    QWORD PTR [rsp+0x10],0x0
  40cfef:	mov    DWORD PTR [rsp+0x4],0x0
  40cff7:	mov    QWORD PTR [rsp+0x20],0x0
  40d000:	cmp    rcx,r15
  40d003:	je     40d06c <main@@Base+0x5f9c>
  40d005:	mov    rdi,r14
  40d008:	mov    rsi,rcx
  40d00b:	mov    rbp,rcx
  40d00e:	mov    rdx,r15
  40d011:	lea    rcx,[rsp+0x4]
  40d016:	lea    r8,[rsp+0x10]
  40d01b:	call   425c50 <flatcc_json_parser_integer@@Base>
  40d020:	mov    rcx,rbp
  40d023:	cmp    rax,rbp
  40d026:	je     40d8db <main@@Base+0x680b>
  40d02c:	mov    rbx,QWORD PTR [rsp+0x10]
  40d031:	cmp    DWORD PTR [rsp+0x4],0x0
  40d036:	je     40dd60 <main@@Base+0x6c90>
  40d03c:	movabs rcx,0x8000000000000000
  40d046:	cmp    rbx,rcx
  40d049:	jbe    40ddd9 <main@@Base+0x6d09>
  40d04f:	mov    rdi,r14
  40d052:	mov    rsi,rax
  40d055:	mov    rdx,r15
  40d058:	mov    ecx,0x8
  40d05d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d062:	xor    ebx,ebx
  40d064:	mov    rcx,rbp
  40d067:	jmp    40dde4 <main@@Base+0x6d14>
  40d06c:	xor    ebx,ebx
  40d06e:	mov    rax,r15
  40d071:	jmp    40dde4 <main@@Base+0x6d14>
  40d076:	mov    rdi,r14
  40d079:	mov    rsi,rbx
  40d07c:	mov    rdx,r15
  40d07f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d084:	mov    rbx,rax
  40d087:	cmp    r12,rbx
  40d08a:	je     41043a <main@@Base+0x936a>
  40d090:	mov    DWORD PTR [rsp+0x1c],0x0
  40d098:	mov    rdi,QWORD PTR [r14]
  40d09b:	mov    esi,0x3
  40d0a0:	call   41f6c0 <flatcc_builder_start_table@@Base>
  40d0a5:	test   eax,eax
  40d0a7:	jne    40d5d9 <main@@Base+0x6509>
  40d0ad:	cmp    rbx,r15
  40d0b0:	je     40d5b5 <main@@Base+0x64e5>
  40d0b6:	cmp    BYTE PTR [rbx],0x7b
  40d0b9:	jne    40d5b5 <main@@Base+0x64e5>
  40d0bf:	lea    rax,[rbx+0x1]
  40d0c3:	mov    rcx,r15
  40d0c6:	sub    rcx,rax
  40d0c9:	cmp    rcx,0x2
  40d0cd:	jl     40ebea <main@@Base+0x7b1a>
  40d0d3:	cmp    BYTE PTR [rax],0x20
  40d0d6:	jg     40ebf8 <main@@Base+0x7b28>
  40d0dc:	jne    40ebea <main@@Base+0x7b1a>
  40d0e2:	cmp    BYTE PTR [rbx+0x2],0x20
  40d0e6:	jle    40ebea <main@@Base+0x7b1a>
  40d0ec:	add    rbx,0x2
  40d0f0:	mov    rax,rbx
  40d0f3:	jmp    40ebf8 <main@@Base+0x7b28>
  40d0f8:	mov    rdi,r14
  40d0fb:	mov    rsi,rbx
  40d0fe:	mov    rdx,r15
  40d101:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d106:	mov    rbx,rax
  40d109:	cmp    r12,rbx
  40d10c:	je     41043a <main@@Base+0x936a>
  40d112:	mov    rdi,QWORD PTR [r14]
  40d115:	mov    esi,0x1
  40d11a:	mov    ecx,0xffffffff
  40d11f:	mov    edx,0x1
  40d124:	call   41f250 <flatcc_builder_start_vector@@Base>
  40d129:	test   eax,eax
  40d12b:	jne    407c81 <main@@Base+0xbb1>
  40d131:	cmp    rbx,r15
  40d134:	je     40d174 <main@@Base+0x60a4>
  40d136:	cmp    BYTE PTR [rbx],0x5b
  40d139:	jne    40d174 <main@@Base+0x60a4>
  40d13b:	lea    rax,[rbx+0x1]
  40d13f:	mov    rcx,r15
  40d142:	sub    rcx,rax
  40d145:	cmp    rcx,0x2
  40d149:	jl     40dab6 <main@@Base+0x69e6>
  40d14f:	cmp    BYTE PTR [rax],0x20
  40d152:	jg     40dac4 <main@@Base+0x69f4>
  40d158:	jne    40dab6 <main@@Base+0x69e6>
  40d15e:	cmp    BYTE PTR [rbx+0x2],0x20
  40d162:	jle    40dab6 <main@@Base+0x69e6>
  40d168:	add    rbx,0x2
  40d16c:	mov    rax,rbx
  40d16f:	jmp    40dac4 <main@@Base+0x69f4>
  40d174:	mov    rdi,r14
  40d177:	mov    rsi,rbx
  40d17a:	mov    rdx,r15
  40d17d:	mov    ecx,0x16
  40d182:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d187:	mov    rbp,rax
  40d18a:	mov    rdi,QWORD PTR [r14]
  40d18d:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40d192:	mov    DWORD PTR [rsp+0x1c],eax
  40d196:	test   eax,eax
  40d198:	je     410ce5 <main@@Base+0x9c15>
  40d19e:	mov    rdi,QWORD PTR [r14]
  40d1a1:	mov    esi,0x5
  40d1a6:	jmp    40af91 <main@@Base+0x3ec1>
  40d1ab:	mov    rdi,r14
  40d1ae:	mov    rsi,rbx
  40d1b1:	mov    rdx,r15
  40d1b4:	mov    ecx,0x15
  40d1b9:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d1be:	mov    rbp,rax
  40d1c1:	cmp    DWORD PTR [r14+0x20],0x0
  40d1c6:	je     410621 <main@@Base+0x9551>
  40d1cc:	mov    rbx,rbp
  40d1cf:	mov    rdi,r14
  40d1d2:	mov    rsi,rbx
  40d1d5:	mov    rdx,r15
  40d1d8:	mov    ecx,0x21
  40d1dd:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d1e2:	mov    rbp,rax
  40d1e5:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d1ea:	mov    rbx,rax
  40d1ed:	je     407c81 <main@@Base+0xbb1>
  40d1f3:	mov    rdi,QWORD PTR [r14]
  40d1f6:	mov    esi,0x23
  40d1fb:	jmp    40af91 <main@@Base+0x3ec1>
  40d200:	mov    rdi,r14
  40d203:	mov    rsi,rbp
  40d206:	mov    rdx,r15
  40d209:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d20e:	mov    rbp,rax
  40d211:	cmp    r12,rbp
  40d214:	je     41043a <main@@Base+0x936a>
  40d21a:	mov    DWORD PTR [rsp+0x1c],0x0
  40d222:	mov    rdi,QWORD PTR [r14]
  40d225:	xor    esi,esi
  40d227:	call   41f6c0 <flatcc_builder_start_table@@Base>
  40d22c:	test   eax,eax
  40d22e:	jne    40d8aa <main@@Base+0x67da>
  40d234:	cmp    rbp,r15
  40d237:	je     40d889 <main@@Base+0x67b9>
  40d23d:	cmp    BYTE PTR [rbp+0x0],0x7b
  40d241:	jne    40d889 <main@@Base+0x67b9>
  40d247:	lea    rax,[rbp+0x1]
  40d24b:	mov    rcx,r15
  40d24e:	sub    rcx,rax
  40d251:	cmp    rcx,0x2
  40d255:	jl     40ec44 <main@@Base+0x7b74>
  40d25b:	cmp    BYTE PTR [rax],0x20
  40d25e:	jg     40ec52 <main@@Base+0x7b82>
  40d264:	jne    40ec44 <main@@Base+0x7b74>
  40d26a:	cmp    BYTE PTR [rbp+0x2],0x20
  40d26e:	jle    40ec44 <main@@Base+0x7b74>
  40d274:	mov    rax,rbp
  40d277:	add    rax,0x2
  40d27b:	jmp    40ec52 <main@@Base+0x7b82>
  40d280:	cmp    al,0x22
  40d282:	jne    41043a <main@@Base+0x936a>
  40d288:	add    r13,0x12
  40d28c:	mov    rax,r15
  40d28f:	sub    rax,r13
  40d292:	cmp    rax,0x2
  40d296:	jl     40d33a <main@@Base+0x626a>
  40d29c:	cmp    BYTE PTR [r13+0x0],0x20
  40d2a1:	jg     40d34b <main@@Base+0x627b>
  40d2a7:	jne    40d33a <main@@Base+0x626a>
  40d2ad:	cmp    BYTE PTR [r13+0x1],0x20
  40d2b2:	jle    40d33a <main@@Base+0x626a>
  40d2b8:	inc    r13
  40d2bb:	cmp    r13,r15
  40d2be:	jne    40d354 <main@@Base+0x6284>
  40d2c4:	jmp    40d3da <main@@Base+0x630a>
  40d2c9:	cmp    al,0x22
  40d2cb:	jne    41043a <main@@Base+0x936a>
  40d2d1:	add    r13,0x12
  40d2d5:	mov    rax,r15
  40d2d8:	sub    rax,r13
  40d2db:	cmp    rax,0x2
  40d2df:	jl     40d38c <main@@Base+0x62bc>
  40d2e5:	cmp    BYTE PTR [r13+0x0],0x20
  40d2ea:	jg     40d39d <main@@Base+0x62cd>
  40d2f0:	jne    40d38c <main@@Base+0x62bc>
  40d2f6:	cmp    BYTE PTR [r13+0x1],0x20
  40d2fb:	jle    40d38c <main@@Base+0x62bc>
  40d301:	inc    r13
  40d304:	cmp    r13,r15
  40d307:	jne    40d3a2 <main@@Base+0x62d2>
  40d30d:	jmp    40d3f2 <main@@Base+0x6322>
  40d312:	test   rcx,0xffffffff80000000
  40d319:	je     40d7fb <main@@Base+0x672b>
  40d31f:	mov    rdi,r14
  40d322:	mov    rsi,rax
  40d325:	mov    rdx,r15
  40d328:	mov    ecx,0x7
  40d32d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d332:	mov    rbx,rbp
  40d335:	jmp    40d802 <main@@Base+0x6732>
  40d33a:	mov    rdi,r14
  40d33d:	mov    rsi,r13
  40d340:	mov    rdx,r15
  40d343:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d348:	mov    r13,rax
  40d34b:	cmp    r13,r15
  40d34e:	je     40d3da <main@@Base+0x630a>
  40d354:	cmp    BYTE PTR [r13+0x0],0x3a
  40d359:	jne    40d3da <main@@Base+0x630a>
  40d35b:	lea    rcx,[r13+0x1]
  40d35f:	mov    rax,r15
  40d362:	mov    rsi,rcx
  40d365:	sub    rax,rcx
  40d368:	cmp    rax,0x2
  40d36c:	jl     410369 <main@@Base+0x9299>
  40d372:	cmp    BYTE PTR [rsi],0x20
  40d375:	jle    410352 <main@@Base+0x9282>
  40d37b:	mov    r13,rsi
  40d37e:	cmp    r12,r13
  40d381:	jne    410380 <main@@Base+0x92b0>
  40d387:	jmp    41043a <main@@Base+0x936a>
  40d38c:	mov    rdi,r14
  40d38f:	mov    rsi,r13
  40d392:	mov    rdx,r15
  40d395:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d39a:	mov    r13,rax
  40d39d:	cmp    r13,r15
  40d3a0:	je     40d3f2 <main@@Base+0x6322>
  40d3a2:	cmp    BYTE PTR [r13+0x0],0x3a
  40d3a7:	jne    40d3f2 <main@@Base+0x6322>
  40d3a9:	lea    rcx,[r13+0x1]
  40d3ad:	mov    rax,r15
  40d3b0:	mov    rsi,rcx
  40d3b3:	sub    rax,rcx
  40d3b6:	cmp    rax,0x2
  40d3ba:	jl     4104fa <main@@Base+0x942a>
  40d3c0:	cmp    BYTE PTR [rsi],0x20
  40d3c3:	jle    41041c <main@@Base+0x934c>
  40d3c9:	mov    r13,rsi
  40d3cc:	cmp    r12,r13
  40d3cf:	jne    410511 <main@@Base+0x9441>
  40d3d5:	jmp    41043a <main@@Base+0x936a>
  40d3da:	mov    rdi,r14
  40d3dd:	mov    rsi,r13
  40d3e0:	mov    rdx,r15
  40d3e3:	mov    ecx,0x4
  40d3e8:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d3ed:	jmp    410374 <main@@Base+0x92a4>
  40d3f2:	mov    rdi,r14
  40d3f5:	mov    rsi,r13
  40d3f8:	mov    rdx,r15
  40d3fb:	mov    ecx,0x4
  40d400:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d405:	jmp    410505 <main@@Base+0x9435>
  40d40a:	mov    rdi,r14
  40d40d:	mov    rdx,r15
  40d410:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d415:	mov    r13,rax
  40d418:	cmp    r12,r13
  40d41b:	je     41043a <main@@Base+0x936a>
  40d421:	mov    QWORD PTR [rsp+0x10],0x0
  40d42a:	mov    DWORD PTR [rsp+0x20],0x0
  40d432:	mov    DWORD PTR [rsp+0x4],0x0
  40d43a:	xor    ebx,ebx
  40d43c:	cmp    r13,r15
  40d43f:	je     40d49f <main@@Base+0x63cf>
  40d441:	mov    rdi,r14
  40d444:	mov    rsi,r13
  40d447:	mov    rdx,r15
  40d44a:	lea    rcx,[rsp+0x20]
  40d44f:	lea    r8,[rsp+0x10]
  40d454:	call   425c50 <flatcc_json_parser_integer@@Base>
  40d459:	cmp    rax,r13
  40d45c:	je     40db10 <main@@Base+0x6a40>
  40d462:	mov    rcx,QWORD PTR [rsp+0x10]
  40d467:	cmp    DWORD PTR [rsp+0x20],0x0
  40d46c:	je     40e7a1 <main@@Base+0x76d1>
  40d472:	mov    edx,0xffffffff
  40d477:	add    rdx,0xffffffff80000001
  40d47e:	cmp    rcx,rdx
  40d481:	jbe    40e998 <main@@Base+0x78c8>
  40d487:	mov    rdi,r14
  40d48a:	mov    rsi,rax
  40d48d:	mov    rdx,r15
  40d490:	mov    ecx,0x8
  40d495:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d49a:	jmp    40e9a1 <main@@Base+0x78d1>
  40d49f:	mov    rax,r15
  40d4a2:	jmp    40e9a1 <main@@Base+0x78d1>
  40d4a7:	mov    rdi,r14
  40d4aa:	mov    rsi,rax
  40d4ad:	mov    rdx,r15
  40d4b0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d4b5:	mov    rsi,r15
  40d4b8:	cmp    rax,r15
  40d4bb:	je     40de48 <main@@Base+0x6d78>
  40d4c1:	cmp    BYTE PTR [rax],0x5d
  40d4c4:	jne    40de45 <main@@Base+0x6d75>
  40d4ca:	lea    rbp,[rax+0x1]
  40d4ce:	mov    rcx,r15
  40d4d1:	sub    rcx,rbp
  40d4d4:	cmp    rcx,0x2
  40d4d8:	jl     40fa9e <main@@Base+0x89ce>
  40d4de:	cmp    BYTE PTR [rbp+0x0],0x20
  40d4e2:	jg     40cc74 <main@@Base+0x5ba4>
  40d4e8:	jne    40fa9e <main@@Base+0x89ce>
  40d4ee:	cmp    BYTE PTR [rax+0x2],0x20
  40d4f2:	jle    40fa9e <main@@Base+0x89ce>
  40d4f8:	add    rax,0x2
  40d4fc:	jmp    40cc71 <main@@Base+0x5ba1>
  40d501:	mov    rdi,r14
  40d504:	mov    rsi,rax
  40d507:	mov    rdx,r15
  40d50a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d50f:	mov    rbx,r15
  40d512:	cmp    rax,r15
  40d515:	je     40df58 <main@@Base+0x6e88>
  40d51b:	cmp    BYTE PTR [rax],0x5d
  40d51e:	jne    40df55 <main@@Base+0x6e85>
  40d524:	lea    rbp,[rax+0x1]
  40d528:	mov    rcx,r15
  40d52b:	sub    rcx,rbp
  40d52e:	cmp    rcx,0x2
  40d532:	jl     40f6c8 <main@@Base+0x85f8>
  40d538:	cmp    BYTE PTR [rbp+0x0],0x20
  40d53c:	jg     40cd27 <main@@Base+0x5c57>
  40d542:	jne    40f6c8 <main@@Base+0x85f8>
  40d548:	cmp    BYTE PTR [rax+0x2],0x20
  40d54c:	jle    40f6c8 <main@@Base+0x85f8>
  40d552:	add    rax,0x2
  40d556:	jmp    40cd24 <main@@Base+0x5c54>
  40d55b:	mov    rdi,r14
  40d55e:	mov    rsi,rax
  40d561:	mov    rdx,r15
  40d564:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d569:	mov    rsi,r15
  40d56c:	cmp    rax,r15
  40d56f:	je     40e694 <main@@Base+0x75c4>
  40d575:	cmp    BYTE PTR [rax],0x5d
  40d578:	jne    40e691 <main@@Base+0x75c1>
  40d57e:	lea    rbp,[rax+0x1]
  40d582:	mov    rcx,r15
  40d585:	sub    rcx,rbp
  40d588:	cmp    rcx,0x2
  40d58c:	jl     40fae7 <main@@Base+0x8a17>
  40d592:	cmp    BYTE PTR [rbp+0x0],0x20
  40d596:	jg     40cdcb <main@@Base+0x5cfb>
  40d59c:	jne    40fae7 <main@@Base+0x8a17>
  40d5a2:	cmp    BYTE PTR [rax+0x2],0x20
  40d5a6:	jle    40fae7 <main@@Base+0x8a17>
  40d5ac:	add    rax,0x2
  40d5b0:	jmp    40cdc8 <main@@Base+0x5cf8>
  40d5b5:	mov    rdi,r14
  40d5b8:	mov    rsi,rbx
  40d5bb:	mov    rdx,r15
  40d5be:	mov    ecx,0x15
  40d5c3:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d5c8:	mov    rbp,rax
  40d5cb:	cmp    DWORD PTR [r14+0x20],0x0
  40d5d0:	je     4109bf <main@@Base+0x98ef>
  40d5d6:	mov    rbx,rbp
  40d5d9:	mov    rdi,r14
  40d5dc:	mov    rsi,rbx
  40d5df:	mov    rdx,r15
  40d5e2:	mov    ecx,0x21
  40d5e7:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d5ec:	mov    rbx,rax
  40d5ef:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d5f4:	mov    rbp,rax
  40d5f7:	je     407c81 <main@@Base+0xbb1>
  40d5fd:	mov    rdi,QWORD PTR [r14]
  40d600:	mov    esi,0xe
  40d605:	jmp    40af91 <main@@Base+0x3ec1>
  40d60a:	mov    rbx,rax
  40d60d:	mov    BYTE PTR [rsp+0x4],0x0
  40d612:	mov    rdi,QWORD PTR [r14]
  40d615:	mov    esi,0x1
  40d61a:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40d61f:	test   rax,rax
  40d622:	je     407c81 <main@@Base+0xbb1>
  40d628:	mov    rbp,rax
  40d62b:	mov    rax,r15
  40d62e:	sub    rax,rbx
  40d631:	cmp    rax,0x4
  40d635:	jl     40d65d <main@@Base+0x658d>
  40d637:	cmp    DWORD PTR [rbx],0x65757274
  40d63d:	je     40d6ae <main@@Base+0x65de>
  40d63f:	cmp    rax,0x5
  40d643:	jl     40d65d <main@@Base+0x658d>
  40d645:	mov    eax,DWORD PTR [rbx]
  40d647:	mov    ecx,0x736c6166
  40d64c:	xor    eax,ecx
  40d64e:	movzx  ecx,BYTE PTR [rbx+0x4]
  40d652:	xor    ecx,0x65
  40d655:	or     ecx,eax
  40d657:	je     40d7df <main@@Base+0x670f>
  40d65d:	mov    QWORD PTR [rsp+0x10],0x0
  40d666:	mov    DWORD PTR [rsp+0x20],0x0
  40d66e:	cmp    rbx,r15
  40d671:	je     40d6a7 <main@@Base+0x65d7>
  40d673:	mov    rdi,r14
  40d676:	mov    rsi,rbx
  40d679:	mov    rdx,r15
  40d67c:	lea    rcx,[rsp+0x20]
  40d681:	lea    r8,[rsp+0x10]
  40d686:	call   425c50 <flatcc_json_parser_integer@@Base>
  40d68b:	cmp    rax,rbx
  40d68e:	je     40d6c0 <main@@Base+0x65f0>
  40d690:	cmp    DWORD PTR [rsp+0x20],0x0
  40d695:	je     40d6c7 <main@@Base+0x65f7>
  40d697:	mov    rdi,r14
  40d69a:	mov    rsi,rax
  40d69d:	mov    rdx,r15
  40d6a0:	mov    ecx,0x8
  40d6a5:	jmp    40d6e3 <main@@Base+0x6613>
  40d6a7:	xor    ecx,ecx
  40d6a9:	mov    rax,r15
  40d6ac:	jmp    40d6ea <main@@Base+0x661a>
  40d6ae:	mov    BYTE PTR [rsp+0x4],0x1
  40d6b3:	lea    rax,[rbx+0x4]
  40d6b7:	mov    cl,0x1
  40d6b9:	cmp    rbx,rax
  40d6bc:	jne    40d72a <main@@Base+0x665a>
  40d6be:	jmp    40d6f9 <main@@Base+0x6629>
  40d6c0:	xor    ecx,ecx
  40d6c2:	mov    rax,rbx
  40d6c5:	jmp    40d6ea <main@@Base+0x661a>
  40d6c7:	mov    rcx,QWORD PTR [rsp+0x10]
  40d6cc:	cmp    rcx,0x100
  40d6d3:	jb     40d6ea <main@@Base+0x661a>
  40d6d5:	mov    rdi,r14
  40d6d8:	mov    rsi,rax
  40d6db:	mov    rdx,r15
  40d6de:	mov    ecx,0x7
  40d6e3:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d6e8:	xor    ecx,ecx
  40d6ea:	test   cl,cl
  40d6ec:	setne  cl
  40d6ef:	setne  BYTE PTR [rsp+0x4]
  40d6f4:	cmp    rbx,rax
  40d6f7:	jne    40d72a <main@@Base+0x665a>
  40d6f9:	mov    rdi,r14
  40d6fc:	mov    rsi,rbx
  40d6ff:	mov    rdx,r15
  40d702:	lea    rcx,[rip+0x35a77]        # 443180 <__data_start@@Base+0xd0>
  40d709:	lea    r8,[rsp+0x4]
  40d70e:	call   414810 <main@@Base+0xd740>
  40d713:	cmp    rax,rbx
  40d716:	je     410d13 <main@@Base+0x9c43>
  40d71c:	cmp    rax,r15
  40d71f:	je     410d13 <main@@Base+0x9c43>
  40d725:	movzx  ecx,BYTE PTR [rsp+0x4]
  40d72a:	mov    BYTE PTR [rbp+0x0],cl
  40d72d:	mov    rcx,r15
  40d730:	sub    rcx,rax
  40d733:	cmp    rcx,0x2
  40d737:	jl     40d753 <main@@Base+0x6683>
  40d739:	cmp    BYTE PTR [rax],0x20
  40d73c:	jg     40d761 <main@@Base+0x6691>
  40d73e:	jne    40d753 <main@@Base+0x6683>
  40d740:	cmp    BYTE PTR [rax+0x1],0x20
  40d744:	jle    40d753 <main@@Base+0x6683>
  40d746:	inc    rax
  40d749:	cmp    rax,r15
  40d74c:	jne    40d76a <main@@Base+0x669a>
  40d74e:	jmp    40e820 <main@@Base+0x7750>
  40d753:	mov    rdi,r14
  40d756:	mov    rsi,rax
  40d759:	mov    rdx,r15
  40d75c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d761:	cmp    rax,r15
  40d764:	je     40e820 <main@@Base+0x7750>
  40d76a:	movzx  ecx,BYTE PTR [rax]
  40d76d:	cmp    cl,0x2c
  40d770:	jne    40e882 <main@@Base+0x77b2>
  40d776:	lea    rbx,[rax+0x1]
  40d77a:	mov    rcx,r15
  40d77d:	sub    rcx,rbx
  40d780:	cmp    rcx,0x2
  40d784:	jl     40d799 <main@@Base+0x66c9>
  40d786:	cmp    BYTE PTR [rbx],0x20
  40d789:	jg     40d7aa <main@@Base+0x66da>
  40d78b:	jne    40d799 <main@@Base+0x66c9>
  40d78d:	cmp    BYTE PTR [rax+0x2],0x20
  40d791:	jle    40d799 <main@@Base+0x66c9>
  40d793:	add    rax,0x2
  40d797:	jmp    40d7a7 <main@@Base+0x66d7>
  40d799:	mov    rdi,r14
  40d79c:	mov    rsi,rbx
  40d79f:	mov    rdx,r15
  40d7a2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d7a7:	mov    rbx,rax
  40d7aa:	cmp    rbx,r15
  40d7ad:	je     40e893 <main@@Base+0x77c3>
  40d7b3:	cmp    BYTE PTR [rbx],0x5d
  40d7b6:	je     40e9fd <main@@Base+0x792d>
  40d7bc:	mov    BYTE PTR [rsp+0x4],0x0
  40d7c1:	mov    rdi,QWORD PTR [r14]
  40d7c4:	mov    esi,0x1
  40d7c9:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40d7ce:	mov    rbp,rax
  40d7d1:	test   rax,rax
  40d7d4:	jne    40d62b <main@@Base+0x655b>
  40d7da:	jmp    407c81 <main@@Base+0xbb1>
  40d7df:	mov    BYTE PTR [rsp+0x4],0x0
  40d7e4:	lea    rax,[rbx+0x5]
  40d7e8:	xor    ecx,ecx
  40d7ea:	cmp    rbx,rax
  40d7ed:	jne    40d72a <main@@Base+0x665a>
  40d7f3:	jmp    40d6f9 <main@@Base+0x6629>
  40d7f8:	neg    rcx
  40d7fb:	mov    DWORD PTR [rsp+0x4],ecx
  40d7ff:	mov    r12d,ecx
  40d802:	mov    rbp,rax
  40d805:	cmp    rbx,rax
  40d808:	jne    40d83e <main@@Base+0x676e>
  40d80a:	mov    rdi,r14
  40d80d:	mov    rsi,rbx
  40d810:	mov    rdx,r15
  40d813:	lea    rcx,[rip+0x35a06]        # 443220 <__data_start@@Base+0x170>
  40d81a:	lea    r8,[rsp+0x4]
  40d81f:	call   414b90 <main@@Base+0xdac0>
  40d824:	mov    rbp,rax
  40d827:	cmp    rax,rbx
  40d82a:	je     410ce5 <main@@Base+0x9c15>
  40d830:	cmp    rbp,r15
  40d833:	je     410ce5 <main@@Base+0x9c15>
  40d839:	mov    r12d,DWORD PTR [rsp+0x4]
  40d83e:	test   r12d,r12d
  40d841:	jne    40d84e <main@@Base+0x677e>
  40d843:	test   BYTE PTR [r14+0x10],0x2
  40d848:	je     41044b <main@@Base+0x937b>
  40d84e:	mov    rdi,QWORD PTR [r14]
  40d851:	mov    edx,0x4
  40d856:	mov    esi,0x10
  40d85b:	mov    ecx,0x4
  40d860:	call   420a40 <flatcc_builder_table_add@@Base>
  40d865:	test   rax,rax
  40d868:	je     410ce5 <main@@Base+0x9c15>
  40d86e:	mov    DWORD PTR [rax],r12d
  40d871:	jmp    41044b <main@@Base+0x937b>
  40d876:	mov    rdi,r14
  40d879:	mov    rsi,rax
  40d87c:	mov    rdx,r15
  40d87f:	mov    ecx,0x9
  40d884:	jmp    40af6d <main@@Base+0x3e9d>
  40d889:	mov    rdi,r14
  40d88c:	mov    rsi,rbp
  40d88f:	mov    rdx,r15
  40d892:	mov    ecx,0x15
  40d897:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d89c:	mov    rbp,rax
  40d89f:	cmp    DWORD PTR [r14+0x20],0x0
  40d8a4:	je     410b65 <main@@Base+0x9a95>
  40d8aa:	mov    rdi,r14
  40d8ad:	mov    rsi,rbp
  40d8b0:	mov    rdx,r15
  40d8b3:	mov    ecx,0x21
  40d8b8:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d8bd:	mov    rbx,rax
  40d8c0:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d8c5:	mov    rbp,rax
  40d8c8:	je     407c81 <main@@Base+0xbb1>
  40d8ce:	mov    rdi,QWORD PTR [r14]
  40d8d1:	mov    esi,0x22
  40d8d6:	jmp    40af91 <main@@Base+0x3ec1>
  40d8db:	xor    ebx,ebx
  40d8dd:	mov    rax,rcx
  40d8e0:	jmp    40dde4 <main@@Base+0x6d14>
  40d8e5:	mov    rdi,r14
  40d8e8:	mov    rsi,rcx
  40d8eb:	mov    rdx,r15
  40d8ee:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d8f3:	mov    rcx,rax
  40d8f6:	cmp    r12,rcx
  40d8f9:	je     40c336 <main@@Base+0x5266>
  40d8ff:	mov    QWORD PTR [rsp+0x10],0x0
  40d908:	mov    DWORD PTR [rsp+0x20],0x0
  40d910:	mov    DWORD PTR [rsp+0x4],0x0
  40d918:	xor    ebx,ebx
  40d91a:	cmp    rcx,r15
  40d91d:	je     40d966 <main@@Base+0x6896>
  40d91f:	mov    rdi,r14
  40d922:	mov    rsi,rcx
  40d925:	mov    rdx,r15
  40d928:	mov    rbp,rcx
  40d92b:	lea    rcx,[rsp+0x20]
  40d930:	lea    r8,[rsp+0x10]
  40d935:	call   425c50 <flatcc_json_parser_integer@@Base>
  40d93a:	cmp    rax,rbp
  40d93d:	je     40dd48 <main@@Base+0x6c78>
  40d943:	cmp    DWORD PTR [rsp+0x20],0x0
  40d948:	je     40e8a6 <main@@Base+0x77d6>
  40d94e:	mov    rdi,r14
  40d951:	mov    rsi,rax
  40d954:	mov    rdx,r15
  40d957:	mov    ecx,0x8
  40d95c:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d961:	jmp    40f5de <main@@Base+0x850e>
  40d966:	mov    rax,r15
  40d969:	jmp    40f5e1 <main@@Base+0x8511>
  40d96e:	mov    rdi,r14
  40d971:	mov    rsi,rcx
  40d974:	mov    rdx,r15
  40d977:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40d97c:	mov    rcx,rax
  40d97f:	cmp    r12,rcx
  40d982:	je     40c474 <main@@Base+0x53a4>
  40d988:	mov    QWORD PTR [rsp+0x10],0x0
  40d991:	mov    DWORD PTR [rsp+0x4],0x0
  40d999:	mov    QWORD PTR [rsp+0x20],0x0
  40d9a2:	cmp    rcx,r15
  40d9a5:	je     40d9f0 <main@@Base+0x6920>
  40d9a7:	mov    rdi,r14
  40d9aa:	mov    rsi,rcx
  40d9ad:	mov    rdx,r15
  40d9b0:	mov    rbp,rcx
  40d9b3:	lea    rcx,[rsp+0x4]
  40d9b8:	lea    r8,[rsp+0x10]
  40d9bd:	call   425c50 <flatcc_json_parser_integer@@Base>
  40d9c2:	cmp    rax,rbp
  40d9c5:	je     40dd53 <main@@Base+0x6c83>
  40d9cb:	cmp    DWORD PTR [rsp+0x4],0x0
  40d9d0:	je     40e8d0 <main@@Base+0x7800>
  40d9d6:	mov    rdi,r14
  40d9d9:	mov    rsi,rax
  40d9dc:	mov    rdx,r15
  40d9df:	mov    ecx,0x8
  40d9e4:	call   424090 <flatcc_json_parser_set_error@@Base>
  40d9e9:	xor    ebx,ebx
  40d9eb:	jmp    40e8da <main@@Base+0x780a>
  40d9f0:	xor    ebx,ebx
  40d9f2:	mov    rax,r15
  40d9f5:	jmp    40e8dd <main@@Base+0x780d>
  40d9fa:	mov    rdi,r14
  40d9fd:	mov    rsi,rax
  40da00:	mov    rdx,r15
  40da03:	mov    ecx,0xa
  40da08:	call   424090 <flatcc_json_parser_set_error@@Base>
  40da0d:	jmp    410448 <main@@Base+0x9378>
  40da12:	mov    rdi,r14
  40da15:	mov    rsi,rbx
  40da18:	mov    rdx,r15
  40da1b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40da20:	mov    rbx,rax
  40da23:	cmp    r12,rbx
  40da26:	je     41043a <main@@Base+0x936a>
  40da2c:	mov    rdi,QWORD PTR [r14]
  40da2f:	call   41f2d0 <flatcc_builder_start_offset_vector@@Base>
  40da34:	test   eax,eax
  40da36:	jne    407c81 <main@@Base+0xbb1>
  40da3c:	cmp    rbx,r15
  40da3f:	je     40da7f <main@@Base+0x69af>
  40da41:	cmp    BYTE PTR [rbx],0x5b
  40da44:	jne    40da7f <main@@Base+0x69af>
  40da46:	lea    rax,[rbx+0x1]
  40da4a:	mov    rcx,r15
  40da4d:	sub    rcx,rax
  40da50:	cmp    rcx,0x2
  40da54:	jl     40dd7f <main@@Base+0x6caf>
  40da5a:	cmp    BYTE PTR [rax],0x20
  40da5d:	jg     40dd8d <main@@Base+0x6cbd>
  40da63:	jne    40dd7f <main@@Base+0x6caf>
  40da69:	cmp    BYTE PTR [rbx+0x2],0x20
  40da6d:	jle    40dd7f <main@@Base+0x6caf>
  40da73:	add    rbx,0x2
  40da77:	mov    rax,rbx
  40da7a:	jmp    40dd8d <main@@Base+0x6cbd>
  40da7f:	mov    rdi,r14
  40da82:	mov    rsi,rbx
  40da85:	mov    rdx,r15
  40da88:	mov    ecx,0x16
  40da8d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40da92:	mov    rbp,rax
  40da95:	mov    rdi,QWORD PTR [r14]
  40da98:	call   41f490 <flatcc_builder_end_offset_vector@@Base>
  40da9d:	mov    DWORD PTR [rsp+0x1c],eax
  40daa1:	test   eax,eax
  40daa3:	je     410ce5 <main@@Base+0x9c15>
  40daa9:	mov    rdi,QWORD PTR [r14]
  40daac:	mov    esi,0xa
  40dab1:	jmp    40af91 <main@@Base+0x3ec1>
  40dab6:	mov    rdi,r14
  40dab9:	mov    rsi,rax
  40dabc:	mov    rdx,r15
  40dabf:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40dac4:	mov    rbx,r15
  40dac7:	cmp    rax,r15
  40daca:	je     40ea41 <main@@Base+0x7971>
  40dad0:	cmp    BYTE PTR [rax],0x5d
  40dad3:	jne    40ea3e <main@@Base+0x796e>
  40dad9:	lea    rbp,[rax+0x1]
  40dadd:	mov    rcx,r15
  40dae0:	sub    rcx,rbp
  40dae3:	cmp    rcx,0x2
  40dae7:	jl     41033f <main@@Base+0x926f>
  40daed:	cmp    BYTE PTR [rbp+0x0],0x20
  40daf1:	jg     40d18a <main@@Base+0x60ba>
  40daf7:	jne    41033f <main@@Base+0x926f>
  40dafd:	cmp    BYTE PTR [rax+0x2],0x20
  40db01:	jle    41033f <main@@Base+0x926f>
  40db07:	add    rax,0x2
  40db0b:	jmp    40d187 <main@@Base+0x60b7>
  40db10:	mov    rax,r13
  40db13:	jmp    40e9a1 <main@@Base+0x78d1>
  40db18:	mov    rdi,r14
  40db1b:	mov    rsi,rbx
  40db1e:	mov    rdx,r15
  40db21:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40db26:	mov    rbx,rax
  40db29:	cmp    r12,rbx
  40db2c:	je     41043a <main@@Base+0x936a>
  40db32:	mov    rdi,QWORD PTR [r14]
  40db35:	mov    esi,0x8
  40db3a:	mov    ecx,0x1fffffff
  40db3f:	mov    edx,0x8
  40db44:	call   41f250 <flatcc_builder_start_vector@@Base>
  40db49:	test   eax,eax
  40db4b:	jne    407c81 <main@@Base+0xbb1>
  40db51:	cmp    rbx,r15
  40db54:	je     40db94 <main@@Base+0x6ac4>
  40db56:	cmp    BYTE PTR [rbx],0x5b
  40db59:	jne    40db94 <main@@Base+0x6ac4>
  40db5b:	lea    rax,[rbx+0x1]
  40db5f:	mov    rcx,r15
  40db62:	sub    rcx,rax
  40db65:	cmp    rcx,0x2
  40db69:	jl     40e828 <main@@Base+0x7758>
  40db6f:	cmp    BYTE PTR [rax],0x20
  40db72:	jg     40e836 <main@@Base+0x7766>
  40db78:	jne    40e828 <main@@Base+0x7758>
  40db7e:	cmp    BYTE PTR [rbx+0x2],0x20
  40db82:	jle    40e828 <main@@Base+0x7758>
  40db88:	add    rbx,0x2
  40db8c:	mov    rax,rbx
  40db8f:	jmp    40e836 <main@@Base+0x7766>
  40db94:	mov    rdi,r14
  40db97:	mov    rsi,rbx
  40db9a:	mov    rdx,r15
  40db9d:	mov    ecx,0x16
  40dba2:	call   424090 <flatcc_json_parser_set_error@@Base>
  40dba7:	mov    rbp,rax
  40dbaa:	mov    rdi,QWORD PTR [r14]
  40dbad:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40dbb2:	mov    DWORD PTR [rsp+0x1c],eax
  40dbb6:	test   eax,eax
  40dbb8:	je     410ce5 <main@@Base+0x9c15>
  40dbbe:	mov    rdi,QWORD PTR [r14]
  40dbc1:	mov    esi,0x20
  40dbc6:	jmp    40af91 <main@@Base+0x3ec1>
  40dbcb:	mov    rdi,r14
  40dbce:	mov    rsi,rbx
  40dbd1:	mov    rdx,r15
  40dbd4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40dbd9:	mov    rbx,rax
  40dbdc:	cmp    r12,rbx
  40dbdf:	je     41043a <main@@Base+0x936a>
  40dbe5:	cmp    rbx,r15
  40dbe8:	je     40dc50 <main@@Base+0x6b80>
  40dbea:	cmp    BYTE PTR [rbx],0x5b
  40dbed:	jne    40dc50 <main@@Base+0x6b80>
  40dbef:	mov    rdi,QWORD PTR [r14]
  40dbf2:	mov    esi,0x1
  40dbf7:	mov    ecx,0xffffffff
  40dbfc:	mov    edx,0x1
  40dc01:	call   41f250 <flatcc_builder_start_vector@@Base>
  40dc06:	test   eax,eax
  40dc08:	jne    407c81 <main@@Base+0xbb1>
  40dc0e:	cmp    BYTE PTR [rbx],0x5b
  40dc11:	jne    40ed88 <main@@Base+0x7cb8>
  40dc17:	lea    rax,[rbx+0x1]
  40dc1b:	mov    rcx,r15
  40dc1e:	sub    rcx,rax
  40dc21:	cmp    rcx,0x2
  40dc25:	jl     40f640 <main@@Base+0x8570>
  40dc2b:	cmp    BYTE PTR [rax],0x20
  40dc2e:	jg     40f64e <main@@Base+0x857e>
  40dc34:	jne    40f640 <main@@Base+0x8570>
  40dc3a:	cmp    BYTE PTR [rbx+0x2],0x20
  40dc3e:	jle    40f640 <main@@Base+0x8570>
  40dc44:	add    rbx,0x2
  40dc48:	mov    rax,rbx
  40dc4b:	jmp    40f64e <main@@Base+0x857e>
  40dc50:	mov    rdi,QWORD PTR [r14]
  40dc53:	xor    esi,esi
  40dc55:	xor    edx,edx
  40dc57:	xor    ecx,ecx
  40dc59:	call   41e420 <flatcc_builder_start_buffer@@Base>
  40dc5e:	test   eax,eax
  40dc60:	jne    407c81 <main@@Base+0xbb1>
  40dc66:	mov    rdi,r14
  40dc69:	mov    rsi,rbx
  40dc6c:	mov    rdx,r15
  40dc6f:	lea    rcx,[rsp+0x1c]
  40dc74:	call   407c50 <main@@Base+0xb80>
  40dc79:	mov    rbp,rax
  40dc7c:	mov    esi,DWORD PTR [rsp+0x1c]
  40dc80:	test   esi,esi
  40dc82:	je     410ce5 <main@@Base+0x9c15>
  40dc88:	mov    rdi,QWORD PTR [r14]
  40dc8b:	call   41e640 <flatcc_builder_end_buffer@@Base>
  40dc90:	jmp    410c10 <main@@Base+0x9b40>
  40dc95:	mov    rdi,r14
  40dc98:	mov    rsi,rbx
  40dc9b:	mov    rdx,r15
  40dc9e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40dca3:	mov    rbx,rax
  40dca6:	cmp    r12,rbx
  40dca9:	je     41043a <main@@Base+0x936a>
  40dcaf:	mov    rdi,QWORD PTR [r14]
  40dcb2:	mov    esi,0x8
  40dcb7:	mov    ecx,0x1fffffff
  40dcbc:	mov    edx,0x8
  40dcc1:	call   41f250 <flatcc_builder_start_vector@@Base>
  40dcc6:	test   eax,eax
  40dcc8:	jne    407c81 <main@@Base+0xbb1>
  40dcce:	cmp    rbx,r15
  40dcd1:	je     40dd11 <main@@Base+0x6c41>
  40dcd3:	cmp    BYTE PTR [rbx],0x5b
  40dcd6:	jne    40dd11 <main@@Base+0x6c41>
  40dcd8:	lea    rax,[rbx+0x1]
  40dcdc:	mov    rcx,r15
  40dcdf:	sub    rcx,rax
  40dce2:	cmp    rcx,0x2
  40dce6:	jl     40e93e <main@@Base+0x786e>
  40dcec:	cmp    BYTE PTR [rax],0x20
  40dcef:	jg     40e94c <main@@Base+0x787c>
  40dcf5:	jne    40e93e <main@@Base+0x786e>
  40dcfb:	cmp    BYTE PTR [rbx+0x2],0x20
  40dcff:	jle    40e93e <main@@Base+0x786e>
  40dd05:	add    rbx,0x2
  40dd09:	mov    rax,rbx
  40dd0c:	jmp    40e94c <main@@Base+0x787c>
  40dd11:	mov    rdi,r14
  40dd14:	mov    rsi,rbx
  40dd17:	mov    rdx,r15
  40dd1a:	mov    ecx,0x16
  40dd1f:	call   424090 <flatcc_json_parser_set_error@@Base>
  40dd24:	mov    rbp,rax
  40dd27:	mov    rdi,QWORD PTR [r14]
  40dd2a:	call   4203e0 <flatcc_builder_end_vector@@Base>
  40dd2f:	mov    DWORD PTR [rsp+0x1c],eax
  40dd33:	test   eax,eax
  40dd35:	je     410ce5 <main@@Base+0x9c15>
  40dd3b:	mov    rdi,QWORD PTR [r14]
  40dd3e:	mov    esi,0x21
  40dd43:	jmp    40af91 <main@@Base+0x3ec1>
  40dd48:	mov    rcx,rbp
  40dd4b:	mov    rax,rbp
  40dd4e:	jmp    40f5e1 <main@@Base+0x8511>
  40dd53:	mov    rcx,rbp
  40dd56:	xor    ebx,ebx
  40dd58:	mov    rax,rbp
  40dd5b:	jmp    40e8dd <main@@Base+0x780d>
  40dd60:	test   rbx,rbx
  40dd63:	jns    40dddf <main@@Base+0x6d0f>
  40dd65:	mov    rdi,r14
  40dd68:	mov    rsi,rax
  40dd6b:	mov    rdx,r15
  40dd6e:	mov    ecx,0x7
  40dd73:	call   424090 <flatcc_json_parser_set_error@@Base>
  40dd78:	mov    rcx,rbp
  40dd7b:	xor    ebx,ebx
  40dd7d:	jmp    40dde4 <main@@Base+0x6d14>
  40dd7f:	mov    rdi,r14
  40dd82:	mov    rsi,rax
  40dd85:	mov    rdx,r15
  40dd88:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40dd8d:	mov    rsi,r15
  40dd90:	cmp    rax,r15
  40dd93:	je     40eda3 <main@@Base+0x7cd3>
  40dd99:	cmp    BYTE PTR [rax],0x5d
  40dd9c:	jne    40eda0 <main@@Base+0x7cd0>
  40dda2:	lea    rbp,[rax+0x1]
  40dda6:	mov    rcx,r15
  40dda9:	sub    rcx,rbp
  40ddac:	cmp    rcx,0x2
  40ddb0:	jl     410880 <main@@Base+0x97b0>
  40ddb6:	cmp    BYTE PTR [rbp+0x0],0x20
  40ddba:	jg     40da95 <main@@Base+0x69c5>
  40ddc0:	jne    410880 <main@@Base+0x97b0>
  40ddc6:	cmp    BYTE PTR [rax+0x2],0x20
  40ddca:	jle    410880 <main@@Base+0x97b0>
  40ddd0:	add    rax,0x2
  40ddd4:	jmp    40da92 <main@@Base+0x69c2>
  40ddd9:	neg    rbx
  40dddc:	mov    rcx,rbp
  40dddf:	mov    QWORD PTR [rsp+0x20],rbx
  40dde4:	mov    rbp,rax
  40dde7:	cmp    rcx,rax
  40ddea:	jne    40de23 <main@@Base+0x6d53>
  40ddec:	mov    rdi,r14
  40ddef:	mov    rsi,rcx
  40ddf2:	mov    rbx,rcx
  40ddf5:	mov    rdx,r15
  40ddf8:	lea    rcx,[rip+0x35461]        # 443260 <__data_start@@Base+0x1b0>
  40ddff:	lea    r8,[rsp+0x20]
  40de04:	call   414d70 <main@@Base+0xdca0>
  40de09:	mov    rbp,rax
  40de0c:	cmp    rax,rbx
  40de0f:	je     410ce5 <main@@Base+0x9c15>
  40de15:	cmp    rbp,r15
  40de18:	je     410ce5 <main@@Base+0x9c15>
  40de1e:	mov    rbx,QWORD PTR [rsp+0x20]
  40de23:	test   rbx,rbx
  40de26:	jne    40de33 <main@@Base+0x6d63>
  40de28:	test   BYTE PTR [r14+0x10],0x2
  40de2d:	je     41044b <main@@Base+0x937b>
  40de33:	mov    rdi,QWORD PTR [r14]
  40de36:	mov    edx,0x8
  40de3b:	mov    esi,0x12
  40de40:	jmp    4105e5 <main@@Base+0x9515>
  40de45:	mov    rsi,rax
  40de48:	mov    rdi,r14
  40de4b:	mov    rdx,r15
  40de4e:	lea    rcx,[rsp+0x1c]
  40de53:	call   426120 <flatcc_json_parser_build_string@@Base>
  40de58:	mov    rbx,rax
  40de5b:	cmp    DWORD PTR [rsp+0x1c],0x0
  40de60:	je     407c81 <main@@Base+0xbb1>
  40de66:	mov    rdi,QWORD PTR [r14]
  40de69:	mov    esi,0x1
  40de6e:	call   41ebe0 <flatcc_builder_extend_offset_vector@@Base>
  40de73:	test   rax,rax
  40de76:	je     407c81 <main@@Base+0xbb1>
  40de7c:	mov    ecx,DWORD PTR [rsp+0x1c]
  40de80:	mov    DWORD PTR [rax],ecx
  40de82:	mov    rax,r15
  40de85:	sub    rax,rbx
  40de88:	cmp    rax,0x2
  40de8c:	jl     40dea8 <main@@Base+0x6dd8>
  40de8e:	cmp    BYTE PTR [rbx],0x20
  40de91:	jg     40deb9 <main@@Base+0x6de9>
  40de93:	jne    40dea8 <main@@Base+0x6dd8>
  40de95:	cmp    BYTE PTR [rbx+0x1],0x20
  40de99:	jle    40dea8 <main@@Base+0x6dd8>
  40de9b:	inc    rbx
  40de9e:	cmp    rbx,r15
  40dea1:	jne    40dec2 <main@@Base+0x6df2>
  40dea3:	jmp    40fa58 <main@@Base+0x8988>
  40dea8:	mov    rdi,r14
  40deab:	mov    rsi,rbx
  40deae:	mov    rdx,r15
  40deb1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40deb6:	mov    rbx,rax
  40deb9:	cmp    rbx,r15
  40debc:	je     40fa58 <main@@Base+0x8988>
  40dec2:	movzx  eax,BYTE PTR [rbx]
  40dec5:	cmp    al,0x2c
  40dec7:	jne    40fa68 <main@@Base+0x8998>
  40decd:	lea    rsi,[rbx+0x1]
  40ded1:	mov    rax,r15
  40ded4:	sub    rax,rsi
  40ded7:	cmp    rax,0x2
  40dedb:	jl     40defb <main@@Base+0x6e2b>
  40dedd:	cmp    BYTE PTR [rsi],0x20
  40dee0:	jg     40df09 <main@@Base+0x6e39>
  40dee2:	jne    40defb <main@@Base+0x6e2b>
  40dee4:	cmp    BYTE PTR [rbx+0x2],0x20
  40dee8:	jle    40defb <main@@Base+0x6e2b>
  40deea:	add    rbx,0x2
  40deee:	mov    rsi,rbx
  40def1:	cmp    rsi,r15
  40def4:	jne    40df12 <main@@Base+0x6e42>
  40def6:	jmp    40fafa <main@@Base+0x8a2a>
  40defb:	mov    rdi,r14
  40defe:	mov    rdx,r15
  40df01:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40df06:	mov    rsi,rax
  40df09:	cmp    rsi,r15
  40df0c:	je     40fafa <main@@Base+0x8a2a>
  40df12:	cmp    BYTE PTR [rsi],0x5d
  40df15:	jne    40de48 <main@@Base+0x6d78>
  40df1b:	lea    rbp,[rsi+0x1]
  40df1f:	mov    rax,r15
  40df22:	sub    rax,rbp
  40df25:	cmp    rax,0x2
  40df29:	jl     40fa9e <main@@Base+0x89ce>
  40df2f:	cmp    BYTE PTR [rbp+0x0],0x20
  40df33:	jg     40cc74 <main@@Base+0x5ba4>
  40df39:	jne    40fa9e <main@@Base+0x89ce>
  40df3f:	cmp    BYTE PTR [rsi+0x2],0x20
  40df43:	jle    40fa9e <main@@Base+0x89ce>
  40df49:	add    rsi,0x2
  40df4d:	mov    rbp,rsi
  40df50:	jmp    40cc74 <main@@Base+0x5ba4>
  40df55:	mov    rbx,rax
  40df58:	mov    rdi,QWORD PTR [r14]
  40df5b:	mov    esi,0x1
  40df60:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40df65:	test   rax,rax
  40df68:	je     407c81 <main@@Base+0xbb1>
  40df6e:	mov    r13,rax
  40df71:	cmp    rbx,r15
  40df74:	je     40dfb4 <main@@Base+0x6ee4>
  40df76:	cmp    BYTE PTR [rbx],0x7b
  40df79:	jne    40dfb4 <main@@Base+0x6ee4>
  40df7b:	lea    rax,[rbx+0x1]
  40df7f:	mov    rcx,r15
  40df82:	sub    rcx,rax
  40df85:	cmp    rcx,0x2
  40df89:	jl     40e083 <main@@Base+0x6fb3>
  40df8f:	cmp    BYTE PTR [rax],0x20
  40df92:	jg     40e091 <main@@Base+0x6fc1>
  40df98:	jne    40e083 <main@@Base+0x6fb3>
  40df9e:	cmp    BYTE PTR [rbx+0x2],0x20
  40dfa2:	jle    40e083 <main@@Base+0x6fb3>
  40dfa8:	add    rbx,0x2
  40dfac:	mov    rax,rbx
  40dfaf:	jmp    40e091 <main@@Base+0x6fc1>
  40dfb4:	mov    rdi,r14
  40dfb7:	mov    rsi,rbx
  40dfba:	mov    rdx,r15
  40dfbd:	mov    ecx,0x15
  40dfc2:	call   424090 <flatcc_json_parser_set_error@@Base>
  40dfc7:	mov    rcx,rax
  40dfca:	mov    rax,r15
  40dfcd:	sub    rax,rcx
  40dfd0:	cmp    rax,0x2
  40dfd4:	jl     40dff0 <main@@Base+0x6f20>
  40dfd6:	cmp    BYTE PTR [rcx],0x20
  40dfd9:	jg     40e001 <main@@Base+0x6f31>
  40dfdb:	jne    40dff0 <main@@Base+0x6f20>
  40dfdd:	cmp    BYTE PTR [rcx+0x1],0x20
  40dfe1:	jle    40dff0 <main@@Base+0x6f20>
  40dfe3:	inc    rcx
  40dfe6:	cmp    rcx,r15
  40dfe9:	jne    40e00a <main@@Base+0x6f3a>
  40dfeb:	jmp    40eeb0 <main@@Base+0x7de0>
  40dff0:	mov    rdi,r14
  40dff3:	mov    rsi,rcx
  40dff6:	mov    rdx,r15
  40dff9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40dffe:	mov    rcx,rax
  40e001:	cmp    rcx,r15
  40e004:	je     40eeb0 <main@@Base+0x7de0>
  40e00a:	mov    al,BYTE PTR [rcx]
  40e00c:	cmp    al,0x2c
  40e00e:	jne    40eeb8 <main@@Base+0x7de8>
  40e014:	lea    rbx,[rcx+0x1]
  40e018:	mov    rax,r15
  40e01b:	sub    rax,rbx
  40e01e:	cmp    rax,0x2
  40e022:	jl     40e042 <main@@Base+0x6f72>
  40e024:	cmp    BYTE PTR [rbx],0x20
  40e027:	jg     40e053 <main@@Base+0x6f83>
  40e029:	jne    40e042 <main@@Base+0x6f72>
  40e02b:	cmp    BYTE PTR [rcx+0x2],0x20
  40e02f:	jle    40e042 <main@@Base+0x6f72>
  40e031:	add    rcx,0x2
  40e035:	mov    rbx,rcx
  40e038:	cmp    rbx,r15
  40e03b:	jne    40e05c <main@@Base+0x6f8c>
  40e03d:	jmp    40eefa <main@@Base+0x7e2a>
  40e042:	mov    rdi,r14
  40e045:	mov    rsi,rbx
  40e048:	mov    rdx,r15
  40e04b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e050:	mov    rbx,rax
  40e053:	cmp    rbx,r15
  40e056:	je     40eefa <main@@Base+0x7e2a>
  40e05c:	cmp    BYTE PTR [rbx],0x5d
  40e05f:	je     40f69a <main@@Base+0x85ca>
  40e065:	mov    rdi,QWORD PTR [r14]
  40e068:	mov    esi,0x1
  40e06d:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40e072:	mov    r13,rax
  40e075:	test   rax,rax
  40e078:	jne    40df71 <main@@Base+0x6ea1>
  40e07e:	jmp    407c81 <main@@Base+0xbb1>
  40e083:	mov    rdi,r14
  40e086:	mov    rsi,rax
  40e089:	mov    rdx,r15
  40e08c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e091:	mov    rsi,r15
  40e094:	cmp    rax,r15
  40e097:	je     40e0a5 <main@@Base+0x6fd5>
  40e099:	cmp    BYTE PTR [rax],0x7d
  40e09c:	je     40e5f9 <main@@Base+0x7529>
  40e0a2:	mov    rsi,rax
  40e0a5:	mov    r12,r15
  40e0a8:	cmp    rsi,r15
  40e0ab:	je     40e0eb <main@@Base+0x701b>
  40e0ad:	movzx  eax,BYTE PTR [rsi]
  40e0b0:	cmp    al,0x2e
  40e0b2:	je     40e0c8 <main@@Base+0x6ff8>
  40e0b4:	cmp    al,0x22
  40e0b6:	jne    40e0dd <main@@Base+0x700d>
  40e0b8:	inc    rsi
  40e0bb:	mov    rax,QWORD PTR [rsp+0x8]
  40e0c0:	mov    DWORD PTR [rax],0x0
  40e0c6:	jmp    40e0e8 <main@@Base+0x7018>
  40e0c8:	mov    rdi,r14
  40e0cb:	mov    rdx,r15
  40e0ce:	mov    ecx,0x5
  40e0d3:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e0d8:	mov    r12,rax
  40e0db:	jmp    40e0eb <main@@Base+0x701b>
  40e0dd:	mov    rax,QWORD PTR [rsp+0x8]
  40e0e2:	mov    DWORD PTR [rax],0x1
  40e0e8:	mov    r12,rsi
  40e0eb:	mov    rax,r15
  40e0ee:	sub    rax,r12
  40e0f1:	cmp    rax,0x8
  40e0f5:	jb     40e102 <main@@Base+0x7032>
  40e0f7:	movbe  rcx,QWORD PTR [r12]
  40e0fd:	jmp    40e184 <main@@Base+0x70b4>
  40e102:	lea    rcx,[rax-0x1]
  40e106:	cmp    rcx,0x6
  40e10a:	ja     40e4d7 <main@@Base+0x7407>
  40e110:	lea    rdx,[rip+0x260f5]        # 43420c <_IO_stdin_used@@Base+0x20c>
  40e117:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40e11b:	add    rbx,rdx
  40e11e:	xor    r8d,r8d
  40e121:	xor    ecx,ecx
  40e123:	xor    esi,esi
  40e125:	xor    edi,edi
  40e127:	xor    ebp,ebp
  40e129:	xor    edx,edx
  40e12b:	jmp    rbx
  40e12d:	movsx  r8,BYTE PTR [r12+0x6]
  40e133:	shl    r8,0x8
  40e137:	movsx  rcx,BYTE PTR [r12+0x5]
  40e13d:	shl    rcx,0x10
  40e141:	or     rcx,r8
  40e144:	movsx  rsi,BYTE PTR [r12+0x4]
  40e14a:	shl    rsi,0x18
  40e14e:	or     rsi,rcx
  40e151:	movsx  rdi,BYTE PTR [r12+0x3]
  40e157:	shl    rdi,0x20
  40e15b:	or     rdi,rsi
  40e15e:	movsx  rbp,BYTE PTR [r12+0x2]
  40e164:	shl    rbp,0x28
  40e168:	or     rbp,rdi
  40e16b:	movsx  rdx,BYTE PTR [r12+0x1]
  40e171:	shl    rdx,0x30
  40e175:	or     rdx,rbp
  40e178:	movzx  ecx,BYTE PTR [r12]
  40e17d:	shl    rcx,0x38
  40e181:	or     rcx,rdx
  40e184:	mov    rdx,rcx
  40e187:	movabs rsi,0xffff000000000000
  40e191:	and    rdx,rsi
  40e194:	movabs rsi,0x6964000000000000
  40e19e:	cmp    rdx,rsi
  40e1a1:	jne    40e1e1 <main@@Base+0x7111>
  40e1a3:	mov    rbp,r12
  40e1a6:	cmp    rax,0x3
  40e1aa:	jl     40e390 <main@@Base+0x72c0>
  40e1b0:	mov    rax,QWORD PTR [rsp+0x8]
  40e1b5:	cmp    DWORD PTR [rax],0x0
  40e1b8:	movzx  eax,BYTE PTR [r12+0x2]
  40e1be:	je     40e239 <main@@Base+0x7169>
  40e1c0:	cmp    al,0x21
  40e1c2:	jl     40e1cf <main@@Base+0x70ff>
  40e1c4:	mov    rbp,r12
  40e1c7:	cmp    al,0x3a
  40e1c9:	jne    40e390 <main@@Base+0x72c0>
  40e1cf:	lea    rsi,[r12+0x2]
  40e1d4:	mov    rax,QWORD PTR [rsp+0x8]
  40e1d9:	mov    DWORD PTR [rax],0x0
  40e1df:	jmp    40e249 <main@@Base+0x7179>
  40e1e1:	movabs rdx,0x64697374616e6365
  40e1eb:	cmp    rcx,rdx
  40e1ee:	jne    40e4d7 <main@@Base+0x7407>
  40e1f4:	mov    rbp,r12
  40e1f7:	cmp    rax,0x9
  40e1fb:	jl     40e47e <main@@Base+0x73ae>
  40e201:	mov    rax,QWORD PTR [rsp+0x8]
  40e206:	cmp    DWORD PTR [rax],0x0
  40e209:	movzx  eax,BYTE PTR [r12+0x8]
  40e20f:	je     40e2dc <main@@Base+0x720c>
  40e215:	cmp    al,0x21
  40e217:	jl     40e224 <main@@Base+0x7154>
  40e219:	mov    rbp,r12
  40e21c:	cmp    al,0x3a
  40e21e:	jne    40e47e <main@@Base+0x73ae>
  40e224:	lea    rsi,[r12+0x8]
  40e229:	mov    rax,QWORD PTR [rsp+0x8]
  40e22e:	mov    DWORD PTR [rax],0x0
  40e234:	jmp    40e2ec <main@@Base+0x721c>
  40e239:	mov    rbp,r12
  40e23c:	cmp    al,0x22
  40e23e:	jne    40e390 <main@@Base+0x72c0>
  40e244:	lea    rsi,[r12+0x3]
  40e249:	mov    rax,r15
  40e24c:	sub    rax,rsi
  40e24f:	cmp    rax,0x2
  40e253:	jl     40e26c <main@@Base+0x719c>
  40e255:	cmp    BYTE PTR [rsi],0x20
  40e258:	jg     40e27a <main@@Base+0x71aa>
  40e25a:	jne    40e26c <main@@Base+0x719c>
  40e25c:	cmp    BYTE PTR [rsi+0x1],0x20
  40e260:	jle    40e26c <main@@Base+0x719c>
  40e262:	inc    rsi
  40e265:	cmp    rsi,r15
  40e268:	jne    40e27f <main@@Base+0x71af>
  40e26a:	jmp    40e2c7 <main@@Base+0x71f7>
  40e26c:	mov    rdi,r14
  40e26f:	mov    rdx,r15
  40e272:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e277:	mov    rsi,rax
  40e27a:	cmp    rsi,r15
  40e27d:	je     40e2c7 <main@@Base+0x71f7>
  40e27f:	cmp    BYTE PTR [rsi],0x3a
  40e282:	jne    40e2c7 <main@@Base+0x71f7>
  40e284:	lea    rbp,[rsi+0x1]
  40e288:	mov    rax,r15
  40e28b:	sub    rax,rbp
  40e28e:	cmp    rax,0x2
  40e292:	jl     40e37f <main@@Base+0x72af>
  40e298:	cmp    BYTE PTR [rbp+0x0],0x20
  40e29c:	jg     40e390 <main@@Base+0x72c0>
  40e2a2:	jne    40e37f <main@@Base+0x72af>
  40e2a8:	cmp    BYTE PTR [rsi+0x2],0x20
  40e2ac:	jle    40e37f <main@@Base+0x72af>
  40e2b2:	add    rsi,0x2
  40e2b6:	mov    rbp,rsi
  40e2b9:	cmp    r12,rbp
  40e2bc:	jne    40e399 <main@@Base+0x72c9>
  40e2c2:	jmp    40e4d7 <main@@Base+0x7407>
  40e2c7:	mov    rdi,r14
  40e2ca:	mov    rdx,r15
  40e2cd:	mov    ecx,0x4
  40e2d2:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e2d7:	jmp    40e38d <main@@Base+0x72bd>
  40e2dc:	mov    rbp,r12
  40e2df:	cmp    al,0x22
  40e2e1:	jne    40e47e <main@@Base+0x73ae>
  40e2e7:	lea    rsi,[r12+0x9]
  40e2ec:	mov    rax,r15
  40e2ef:	sub    rax,rsi
  40e2f2:	cmp    rax,0x2
  40e2f6:	jl     40e30f <main@@Base+0x723f>
  40e2f8:	cmp    BYTE PTR [rsi],0x20
  40e2fb:	jg     40e31d <main@@Base+0x724d>
  40e2fd:	jne    40e30f <main@@Base+0x723f>
  40e2ff:	cmp    BYTE PTR [rsi+0x1],0x20
  40e303:	jle    40e30f <main@@Base+0x723f>
  40e305:	inc    rsi
  40e308:	cmp    rsi,r15
  40e30b:	jne    40e322 <main@@Base+0x7252>
  40e30d:	jmp    40e36a <main@@Base+0x729a>
  40e30f:	mov    rdi,r14
  40e312:	mov    rdx,r15
  40e315:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e31a:	mov    rsi,rax
  40e31d:	cmp    rsi,r15
  40e320:	je     40e36a <main@@Base+0x729a>
  40e322:	cmp    BYTE PTR [rsi],0x3a
  40e325:	jne    40e36a <main@@Base+0x729a>
  40e327:	lea    rbp,[rsi+0x1]
  40e32b:	mov    rax,r15
  40e32e:	sub    rax,rbp
  40e331:	cmp    rax,0x2
  40e335:	jl     40e46d <main@@Base+0x739d>
  40e33b:	cmp    BYTE PTR [rbp+0x0],0x20
  40e33f:	jg     40e47e <main@@Base+0x73ae>
  40e345:	jne    40e46d <main@@Base+0x739d>
  40e34b:	cmp    BYTE PTR [rsi+0x2],0x20
  40e34f:	jle    40e46d <main@@Base+0x739d>
  40e355:	add    rsi,0x2
  40e359:	mov    rbp,rsi
  40e35c:	cmp    r12,rbp
  40e35f:	jne    40e483 <main@@Base+0x73b3>
  40e365:	jmp    40e4d7 <main@@Base+0x7407>
  40e36a:	mov    rdi,r14
  40e36d:	mov    rdx,r15
  40e370:	mov    ecx,0x4
  40e375:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e37a:	jmp    40e47b <main@@Base+0x73ab>
  40e37f:	mov    rdi,r14
  40e382:	mov    rsi,rbp
  40e385:	mov    rdx,r15
  40e388:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e38d:	mov    rbp,rax
  40e390:	cmp    r12,rbp
  40e393:	je     40e4d7 <main@@Base+0x7407>
  40e399:	mov    QWORD PTR [rsp+0x10],0x0
  40e3a2:	mov    DWORD PTR [rsp+0x20],0x0
  40e3aa:	mov    DWORD PTR [rsp+0x4],0x0
  40e3b2:	xor    ebx,ebx
  40e3b4:	cmp    rbp,r15
  40e3b7:	je     40e3ed <main@@Base+0x731d>
  40e3b9:	mov    rdi,r14
  40e3bc:	mov    rsi,rbp
  40e3bf:	mov    rdx,r15
  40e3c2:	lea    rcx,[rsp+0x20]
  40e3c7:	lea    r8,[rsp+0x10]
  40e3cc:	call   425c50 <flatcc_json_parser_integer@@Base>
  40e3d1:	cmp    rax,rbp
  40e3d4:	je     40e3f7 <main@@Base+0x7327>
  40e3d6:	cmp    DWORD PTR [rsp+0x20],0x0
  40e3db:	je     40e401 <main@@Base+0x7331>
  40e3dd:	mov    rdi,r14
  40e3e0:	mov    rsi,rax
  40e3e3:	mov    rdx,r15
  40e3e6:	mov    ecx,0x8
  40e3eb:	jmp    40e41d <main@@Base+0x734d>
  40e3ed:	mov    rax,r15
  40e3f0:	cmp    rbp,rax
  40e3f3:	jne    40e457 <main@@Base+0x7387>
  40e3f5:	jmp    40e427 <main@@Base+0x7357>
  40e3f7:	mov    rax,rbp
  40e3fa:	cmp    rbp,rax
  40e3fd:	jne    40e457 <main@@Base+0x7387>
  40e3ff:	jmp    40e427 <main@@Base+0x7357>
  40e401:	mov    rcx,QWORD PTR [rsp+0x10]
  40e406:	mov    rdx,rcx
  40e409:	shr    rdx,0x20
  40e40d:	je     40e460 <main@@Base+0x7390>
  40e40f:	mov    rdi,r14
  40e412:	mov    rsi,rax
  40e415:	mov    rdx,r15
  40e418:	mov    ecx,0x7
  40e41d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e422:	cmp    rbp,rax
  40e425:	jne    40e457 <main@@Base+0x7387>
  40e427:	mov    rdi,r14
  40e42a:	mov    rsi,rbp
  40e42d:	mov    rdx,r15
  40e430:	lea    rcx,[rip+0x35309]        # 443740 <__data_start@@Base+0x690>
  40e437:	lea    r8,[rsp+0x4]
  40e43c:	call   414f50 <main@@Base+0xde80>
  40e441:	cmp    rax,rbp
  40e444:	je     40e67e <main@@Base+0x75ae>
  40e44a:	cmp    rax,r15
  40e44d:	je     40e67e <main@@Base+0x75ae>
  40e453:	mov    ebx,DWORD PTR [rsp+0x4]
  40e457:	mov    DWORD PTR [r13+0x0],ebx
  40e45b:	jmp    40e559 <main@@Base+0x7489>
  40e460:	mov    DWORD PTR [rsp+0x4],ecx
  40e464:	mov    ebx,ecx
  40e466:	cmp    rbp,rax
  40e469:	jne    40e457 <main@@Base+0x7387>
  40e46b:	jmp    40e427 <main@@Base+0x7357>
  40e46d:	mov    rdi,r14
  40e470:	mov    rsi,rbp
  40e473:	mov    rdx,r15
  40e476:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e47b:	mov    rbp,rax
  40e47e:	cmp    r12,rbp
  40e481:	je     40e4d7 <main@@Base+0x7407>
  40e483:	mov    QWORD PTR [rsp+0x10],0x0
  40e48c:	mov    DWORD PTR [rsp+0x20],0x0
  40e494:	mov    DWORD PTR [rsp+0x4],0x0
  40e49c:	xor    ebx,ebx
  40e49e:	cmp    rbp,r15
  40e4a1:	je     40e4e7 <main@@Base+0x7417>
  40e4a3:	mov    rdi,r14
  40e4a6:	mov    rsi,rbp
  40e4a9:	mov    rdx,r15
  40e4ac:	lea    rcx,[rsp+0x20]
  40e4b1:	lea    r8,[rsp+0x10]
  40e4b6:	call   425c50 <flatcc_json_parser_integer@@Base>
  40e4bb:	cmp    rax,rbp
  40e4be:	je     40e4f1 <main@@Base+0x7421>
  40e4c0:	cmp    DWORD PTR [rsp+0x20],0x0
  40e4c5:	je     40e4fb <main@@Base+0x742b>
  40e4c7:	mov    rdi,r14
  40e4ca:	mov    rsi,rax
  40e4cd:	mov    rdx,r15
  40e4d0:	mov    ecx,0x8
  40e4d5:	jmp    40e51b <main@@Base+0x744b>
  40e4d7:	mov    rdi,r14
  40e4da:	mov    rsi,r12
  40e4dd:	mov    rdx,r15
  40e4e0:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  40e4e5:	jmp    40e559 <main@@Base+0x7489>
  40e4e7:	mov    rax,r15
  40e4ea:	cmp    rbp,rax
  40e4ed:	jne    40e555 <main@@Base+0x7485>
  40e4ef:	jmp    40e525 <main@@Base+0x7455>
  40e4f1:	mov    rax,rbp
  40e4f4:	cmp    rbp,rax
  40e4f7:	jne    40e555 <main@@Base+0x7485>
  40e4f9:	jmp    40e525 <main@@Base+0x7455>
  40e4fb:	mov    rcx,QWORD PTR [rsp+0x10]
  40e500:	mov    rdx,rcx
  40e503:	shr    rdx,0x20
  40e507:	je     40e5d8 <main@@Base+0x7508>
  40e50d:	mov    rdi,r14
  40e510:	mov    rsi,rax
  40e513:	mov    rdx,r15
  40e516:	mov    ecx,0x7
  40e51b:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e520:	cmp    rbp,rax
  40e523:	jne    40e555 <main@@Base+0x7485>
  40e525:	mov    rdi,r14
  40e528:	mov    rsi,rbp
  40e52b:	mov    rdx,r15
  40e52e:	lea    rcx,[rip+0x3522b]        # 443760 <__data_start@@Base+0x6b0>
  40e535:	lea    r8,[rsp+0x4]
  40e53a:	call   414f50 <main@@Base+0xde80>
  40e53f:	cmp    rax,rbp
  40e542:	je     40e67e <main@@Base+0x75ae>
  40e548:	cmp    rax,r15
  40e54b:	je     40e67e <main@@Base+0x75ae>
  40e551:	mov    ebx,DWORD PTR [rsp+0x4]
  40e555:	mov    DWORD PTR [r13+0x4],ebx
  40e559:	mov    rcx,r15
  40e55c:	sub    rcx,rax
  40e55f:	cmp    rcx,0x2
  40e563:	jl     40e57c <main@@Base+0x74ac>
  40e565:	cmp    BYTE PTR [rax],0x20
  40e568:	jg     40e58a <main@@Base+0x74ba>
  40e56a:	jne    40e57c <main@@Base+0x74ac>
  40e56c:	cmp    BYTE PTR [rax+0x1],0x20
  40e570:	jle    40e57c <main@@Base+0x74ac>
  40e572:	inc    rax
  40e575:	cmp    rax,r15
  40e578:	jne    40e58f <main@@Base+0x74bf>
  40e57a:	jmp    40e5ec <main@@Base+0x751c>
  40e57c:	mov    rdi,r14
  40e57f:	mov    rsi,rax
  40e582:	mov    rdx,r15
  40e585:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e58a:	cmp    rax,r15
  40e58d:	je     40e5ec <main@@Base+0x751c>
  40e58f:	movzx  ecx,BYTE PTR [rax]
  40e592:	cmp    cl,0x2c
  40e595:	jne    40e5f4 <main@@Base+0x7524>
  40e597:	lea    rsi,[rax+0x1]
  40e59b:	mov    rcx,r15
  40e59e:	sub    rcx,rsi
  40e5a1:	cmp    rcx,0x2
  40e5a5:	jl     40e5ba <main@@Base+0x74ea>
  40e5a7:	cmp    BYTE PTR [rsi],0x20
  40e5aa:	jg     40e5c8 <main@@Base+0x74f8>
  40e5ac:	jne    40e5ba <main@@Base+0x74ea>
  40e5ae:	cmp    BYTE PTR [rax+0x2],0x20
  40e5b2:	jle    40e5ba <main@@Base+0x74ea>
  40e5b4:	add    rax,0x2
  40e5b8:	jmp    40e5c5 <main@@Base+0x74f5>
  40e5ba:	mov    rdi,r14
  40e5bd:	mov    rdx,r15
  40e5c0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e5c5:	mov    rsi,rax
  40e5c8:	cmp    rsi,r15
  40e5cb:	je     40e623 <main@@Base+0x7553>
  40e5cd:	cmp    BYTE PTR [rsi],0x7d
  40e5d0:	jne    40e0a5 <main@@Base+0x6fd5>
  40e5d6:	jmp    40e62b <main@@Base+0x755b>
  40e5d8:	mov    DWORD PTR [rsp+0x4],ecx
  40e5dc:	mov    ebx,ecx
  40e5de:	cmp    rbp,rax
  40e5e1:	jne    40e555 <main@@Base+0x7485>
  40e5e7:	jmp    40e525 <main@@Base+0x7455>
  40e5ec:	mov    rcx,r15
  40e5ef:	jmp    40dfca <main@@Base+0x6efa>
  40e5f4:	cmp    cl,0x7d
  40e5f7:	jne    40e66b <main@@Base+0x759b>
  40e5f9:	lea    rcx,[rax+0x1]
  40e5fd:	mov    rdx,r15
  40e600:	sub    rdx,rcx
  40e603:	cmp    rdx,0x2
  40e607:	jl     40e658 <main@@Base+0x7588>
  40e609:	cmp    BYTE PTR [rcx],0x20
  40e60c:	jg     40dfca <main@@Base+0x6efa>
  40e612:	jne    40e658 <main@@Base+0x7588>
  40e614:	cmp    BYTE PTR [rax+0x2],0x20
  40e618:	jle    40e658 <main@@Base+0x7588>
  40e61a:	add    rax,0x2
  40e61e:	jmp    40dfc7 <main@@Base+0x6ef7>
  40e623:	mov    rdi,r14
  40e626:	mov    rsi,r15
  40e629:	jmp    40e671 <main@@Base+0x75a1>
  40e62b:	lea    rcx,[rsi+0x1]
  40e62f:	mov    rax,r15
  40e632:	sub    rax,rcx
  40e635:	cmp    rax,0x2
  40e639:	jl     40e658 <main@@Base+0x7588>
  40e63b:	cmp    BYTE PTR [rcx],0x20
  40e63e:	jg     40dfca <main@@Base+0x6efa>
  40e644:	jne    40e658 <main@@Base+0x7588>
  40e646:	cmp    BYTE PTR [rsi+0x2],0x20
  40e64a:	jle    40e658 <main@@Base+0x7588>
  40e64c:	add    rsi,0x2
  40e650:	mov    rcx,rsi
  40e653:	jmp    40dfca <main@@Base+0x6efa>
  40e658:	mov    rdi,r14
  40e65b:	mov    rsi,rcx
  40e65e:	mov    rdx,r15
  40e661:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e666:	jmp    40dfc7 <main@@Base+0x6ef7>
  40e66b:	mov    rdi,r14
  40e66e:	mov    rsi,rax
  40e671:	mov    rdx,r15
  40e674:	mov    ecx,0xa
  40e679:	jmp    40dfc2 <main@@Base+0x6ef2>
  40e67e:	mov    rdi,r14
  40e681:	mov    rsi,rax
  40e684:	mov    rdx,r15
  40e687:	mov    ecx,0x21
  40e68c:	jmp    40dfc2 <main@@Base+0x6ef2>
  40e691:	mov    rsi,rax
  40e694:	mov    rdi,r14
  40e697:	mov    rdx,r15
  40e69a:	lea    rcx,[rsp+0x1c]
  40e69f:	call   407c50 <main@@Base+0xb80>
  40e6a4:	mov    rbx,rax
  40e6a7:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e6ac:	je     407c81 <main@@Base+0xbb1>
  40e6b2:	mov    rdi,QWORD PTR [r14]
  40e6b5:	mov    esi,0x1
  40e6ba:	call   41ebe0 <flatcc_builder_extend_offset_vector@@Base>
  40e6bf:	test   rax,rax
  40e6c2:	je     407c81 <main@@Base+0xbb1>
  40e6c8:	mov    ecx,DWORD PTR [rsp+0x1c]
  40e6cc:	mov    DWORD PTR [rax],ecx
  40e6ce:	mov    rax,r15
  40e6d1:	sub    rax,rbx
  40e6d4:	cmp    rax,0x2
  40e6d8:	jl     40e6f4 <main@@Base+0x7624>
  40e6da:	cmp    BYTE PTR [rbx],0x20
  40e6dd:	jg     40e705 <main@@Base+0x7635>
  40e6df:	jne    40e6f4 <main@@Base+0x7624>
  40e6e1:	cmp    BYTE PTR [rbx+0x1],0x20
  40e6e5:	jle    40e6f4 <main@@Base+0x7624>
  40e6e7:	inc    rbx
  40e6ea:	cmp    rbx,r15
  40e6ed:	jne    40e70e <main@@Base+0x763e>
  40e6ef:	jmp    40fa60 <main@@Base+0x8990>
  40e6f4:	mov    rdi,r14
  40e6f7:	mov    rsi,rbx
  40e6fa:	mov    rdx,r15
  40e6fd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e702:	mov    rbx,rax
  40e705:	cmp    rbx,r15
  40e708:	je     40fa60 <main@@Base+0x8990>
  40e70e:	movzx  eax,BYTE PTR [rbx]
  40e711:	cmp    al,0x2c
  40e713:	jne    40fab1 <main@@Base+0x89e1>
  40e719:	lea    rsi,[rbx+0x1]
  40e71d:	mov    rax,r15
  40e720:	sub    rax,rsi
  40e723:	cmp    rax,0x2
  40e727:	jl     40e747 <main@@Base+0x7677>
  40e729:	cmp    BYTE PTR [rsi],0x20
  40e72c:	jg     40e755 <main@@Base+0x7685>
  40e72e:	jne    40e747 <main@@Base+0x7677>
  40e730:	cmp    BYTE PTR [rbx+0x2],0x20
  40e734:	jle    40e747 <main@@Base+0x7677>
  40e736:	add    rbx,0x2
  40e73a:	mov    rsi,rbx
  40e73d:	cmp    rsi,r15
  40e740:	jne    40e75e <main@@Base+0x768e>
  40e742:	jmp    40fb05 <main@@Base+0x8a35>
  40e747:	mov    rdi,r14
  40e74a:	mov    rdx,r15
  40e74d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e752:	mov    rsi,rax
  40e755:	cmp    rsi,r15
  40e758:	je     40fb05 <main@@Base+0x8a35>
  40e75e:	cmp    BYTE PTR [rsi],0x5d
  40e761:	jne    40e694 <main@@Base+0x75c4>
  40e767:	lea    rbp,[rsi+0x1]
  40e76b:	mov    rax,r15
  40e76e:	sub    rax,rbp
  40e771:	cmp    rax,0x2
  40e775:	jl     40fae7 <main@@Base+0x8a17>
  40e77b:	cmp    BYTE PTR [rbp+0x0],0x20
  40e77f:	jg     40cdcb <main@@Base+0x5cfb>
  40e785:	jne    40fae7 <main@@Base+0x8a17>
  40e78b:	cmp    BYTE PTR [rsi+0x2],0x20
  40e78f:	jle    40fae7 <main@@Base+0x8a17>
  40e795:	add    rsi,0x2
  40e799:	mov    rbp,rsi
  40e79c:	jmp    40cdcb <main@@Base+0x5cfb>
  40e7a1:	test   rcx,0xffffffff80000000
  40e7a8:	je     40e99b <main@@Base+0x78cb>
  40e7ae:	mov    rdi,r14
  40e7b1:	mov    rsi,rax
  40e7b4:	mov    rdx,r15
  40e7b7:	mov    ecx,0x7
  40e7bc:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e7c1:	jmp    40e9a1 <main@@Base+0x78d1>
  40e7c6:	mov    rdi,r14
  40e7c9:	mov    rsi,rax
  40e7cc:	mov    rdx,r15
  40e7cf:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e7d4:	mov    rsi,r15
  40e7d7:	cmp    rax,r15
  40e7da:	je     40efd8 <main@@Base+0x7f08>
  40e7e0:	cmp    BYTE PTR [rax],0x7d
  40e7e3:	jne    40efd5 <main@@Base+0x7f05>
  40e7e9:	lea    rbp,[rax+0x1]
  40e7ed:	mov    rcx,r15
  40e7f0:	sub    rcx,rbp
  40e7f3:	cmp    rcx,0x2
  40e7f7:	jl     410678 <main@@Base+0x95a8>
  40e7fd:	cmp    BYTE PTR [rbp+0x0],0x20
  40e801:	jg     40d1c1 <main@@Base+0x60f1>
  40e807:	jne    410678 <main@@Base+0x95a8>
  40e80d:	cmp    BYTE PTR [rax+0x2],0x20
  40e811:	jle    410678 <main@@Base+0x95a8>
  40e817:	add    rax,0x2
  40e81b:	jmp    40d1be <main@@Base+0x60ee>
  40e820:	mov    rbp,r15
  40e823:	jmp    40b3db <main@@Base+0x430b>
  40e828:	mov    rdi,r14
  40e82b:	mov    rsi,rax
  40e82e:	mov    rdx,r15
  40e831:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e836:	mov    rbx,r15
  40e839:	cmp    rax,r15
  40e83c:	je     40f75c <main@@Base+0x868c>
  40e842:	cmp    BYTE PTR [rax],0x5d
  40e845:	jne    40f759 <main@@Base+0x8689>
  40e84b:	lea    rbp,[rax+0x1]
  40e84f:	mov    rcx,r15
  40e852:	sub    rcx,rbp
  40e855:	cmp    rcx,0x2
  40e859:	jl     410a7d <main@@Base+0x99ad>
  40e85f:	cmp    BYTE PTR [rbp+0x0],0x20
  40e863:	jg     40dbaa <main@@Base+0x6ada>
  40e869:	jne    410a7d <main@@Base+0x99ad>
  40e86f:	cmp    BYTE PTR [rax+0x2],0x20
  40e873:	jle    410a7d <main@@Base+0x99ad>
  40e879:	add    rax,0x2
  40e87d:	jmp    40dba7 <main@@Base+0x6ad7>
  40e882:	cmp    cl,0x5d
  40e885:	je     40c873 <main@@Base+0x57a3>
  40e88b:	mov    rdi,r14
  40e88e:	mov    rsi,rax
  40e891:	jmp    40e899 <main@@Base+0x77c9>
  40e893:	mov    rdi,r14
  40e896:	mov    rsi,r15
  40e899:	mov    rdx,r15
  40e89c:	mov    ecx,0x9
  40e8a1:	jmp    40b3d3 <main@@Base+0x4303>
  40e8a6:	mov    rcx,QWORD PTR [rsp+0x10]
  40e8ab:	mov    rdx,rcx
  40e8ae:	shr    rdx,0x20
  40e8b2:	je     40f5d8 <main@@Base+0x8508>
  40e8b8:	mov    rdi,r14
  40e8bb:	mov    rsi,rax
  40e8be:	mov    rdx,r15
  40e8c1:	mov    ecx,0x7
  40e8c6:	call   424090 <flatcc_json_parser_set_error@@Base>
  40e8cb:	jmp    40f5de <main@@Base+0x850e>
  40e8d0:	mov    rbx,QWORD PTR [rsp+0x10]
  40e8d5:	mov    QWORD PTR [rsp+0x20],rbx
  40e8da:	mov    rcx,rbp
  40e8dd:	mov    rbp,rax
  40e8e0:	cmp    rcx,rax
  40e8e3:	jne    40e91c <main@@Base+0x784c>
  40e8e5:	mov    rdi,r14
  40e8e8:	mov    rsi,rcx
  40e8eb:	mov    rdx,r15
  40e8ee:	mov    rbx,rcx
  40e8f1:	lea    rcx,[rip+0x349e8]        # 4432e0 <__data_start@@Base+0x230>
  40e8f8:	lea    r8,[rsp+0x20]
  40e8fd:	call   415130 <main@@Base+0xe060>
  40e902:	mov    rbp,rax
  40e905:	cmp    rax,rbx
  40e908:	je     410ce5 <main@@Base+0x9c15>
  40e90e:	cmp    rbp,r15
  40e911:	je     410ce5 <main@@Base+0x9c15>
  40e917:	mov    rbx,QWORD PTR [rsp+0x20]
  40e91c:	test   rbx,rbx
  40e91f:	jne    40e92c <main@@Base+0x785c>
  40e921:	test   BYTE PTR [r14+0x10],0x2
  40e926:	je     41044b <main@@Base+0x937b>
  40e92c:	mov    rdi,QWORD PTR [r14]
  40e92f:	mov    edx,0x8
  40e934:	mov    esi,0x13
  40e939:	jmp    4105e5 <main@@Base+0x9515>
  40e93e:	mov    rdi,r14
  40e941:	mov    rsi,rax
  40e944:	mov    rdx,r15
  40e947:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40e94c:	mov    r13,r15
  40e94f:	cmp    rax,r15
  40e952:	je     40f919 <main@@Base+0x8849>
  40e958:	cmp    BYTE PTR [rax],0x5d
  40e95b:	jne    40f916 <main@@Base+0x8846>
  40e961:	lea    rbp,[rax+0x1]
  40e965:	mov    rcx,r15
  40e968:	sub    rcx,rbp
  40e96b:	cmp    rcx,0x2
  40e96f:	jl     410b0b <main@@Base+0x9a3b>
  40e975:	cmp    BYTE PTR [rbp+0x0],0x20
  40e979:	jg     40dd27 <main@@Base+0x6c57>
  40e97f:	jne    410b0b <main@@Base+0x9a3b>
  40e985:	cmp    BYTE PTR [rax+0x2],0x20
  40e989:	jle    410b0b <main@@Base+0x9a3b>
  40e98f:	add    rax,0x2
  40e993:	jmp    40dd24 <main@@Base+0x6c54>
  40e998:	neg    rcx
  40e99b:	mov    DWORD PTR [rsp+0x4],ecx
  40e99f:	mov    ebx,ecx
  40e9a1:	mov    rbp,rax
  40e9a4:	cmp    r13,rax
  40e9a7:	jne    40e9dc <main@@Base+0x790c>
  40e9a9:	mov    rdi,r14
  40e9ac:	mov    rsi,r13
  40e9af:	mov    rdx,r15
  40e9b2:	lea    rcx,[rip+0x34887]        # 443240 <__data_start@@Base+0x190>
  40e9b9:	lea    r8,[rsp+0x4]
  40e9be:	call   414b90 <main@@Base+0xdac0>
  40e9c3:	mov    rbp,rax
  40e9c6:	cmp    rax,r13
  40e9c9:	je     410ce5 <main@@Base+0x9c15>
  40e9cf:	cmp    rbp,r15
  40e9d2:	je     410ce5 <main@@Base+0x9c15>
  40e9d8:	mov    ebx,DWORD PTR [rsp+0x4]
  40e9dc:	test   ebx,ebx
  40e9de:	jne    40e9eb <main@@Base+0x791b>
  40e9e0:	test   BYTE PTR [r14+0x10],0x2
  40e9e5:	je     41044b <main@@Base+0x937b>
  40e9eb:	mov    rdi,QWORD PTR [r14]
  40e9ee:	mov    edx,0x4
  40e9f3:	mov    esi,0x14
  40e9f8:	jmp    41093f <main@@Base+0x986f>
  40e9fd:	lea    rbp,[rbx+0x1]
  40ea01:	mov    rax,r15
  40ea04:	sub    rax,rbp
  40ea07:	cmp    rax,0x2
  40ea0b:	jl     40ea2b <main@@Base+0x795b>
  40ea0d:	cmp    BYTE PTR [rbp+0x0],0x20
  40ea11:	jg     40b3db <main@@Base+0x430b>
  40ea17:	jne    40ea2b <main@@Base+0x795b>
  40ea19:	cmp    BYTE PTR [rbx+0x2],0x20
  40ea1d:	jle    40ea2b <main@@Base+0x795b>
  40ea1f:	add    rbx,0x2
  40ea23:	mov    rbp,rbx
  40ea26:	jmp    40b3db <main@@Base+0x430b>
  40ea2b:	mov    rdi,r14
  40ea2e:	mov    rsi,rbp
  40ea31:	mov    rdx,r15
  40ea34:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ea39:	jmp    40b3d8 <main@@Base+0x4308>
  40ea3e:	mov    rbx,rax
  40ea41:	mov    BYTE PTR [rsp+0x4],0x0
  40ea46:	mov    rdi,QWORD PTR [r14]
  40ea49:	mov    esi,0x1
  40ea4e:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40ea53:	test   rax,rax
  40ea56:	je     407c81 <main@@Base+0xbb1>
  40ea5c:	mov    rbp,rax
  40ea5f:	mov    QWORD PTR [rsp+0x10],0x0
  40ea68:	mov    DWORD PTR [rsp+0x20],0x0
  40ea70:	mov    BYTE PTR [rsp+0x4],0x0
  40ea75:	cmp    rbx,r15
  40ea78:	je     40eaae <main@@Base+0x79de>
  40ea7a:	mov    rdi,r14
  40ea7d:	mov    rsi,rbx
  40ea80:	mov    rdx,r15
  40ea83:	lea    rcx,[rsp+0x20]
  40ea88:	lea    r8,[rsp+0x10]
  40ea8d:	call   425c50 <flatcc_json_parser_integer@@Base>
  40ea92:	cmp    rax,rbx
  40ea95:	je     40eaba <main@@Base+0x79ea>
  40ea97:	cmp    DWORD PTR [rsp+0x20],0x0
  40ea9c:	je     40eac6 <main@@Base+0x79f6>
  40ea9e:	mov    rdi,r14
  40eaa1:	mov    rsi,rax
  40eaa4:	mov    rdx,r15
  40eaa7:	mov    ecx,0x8
  40eaac:	jmp    40eae6 <main@@Base+0x7a16>
  40eaae:	xor    ecx,ecx
  40eab0:	mov    rax,r15
  40eab3:	cmp    rbx,rax
  40eab6:	jne    40eb23 <main@@Base+0x7a53>
  40eab8:	jmp    40eaf2 <main@@Base+0x7a22>
  40eaba:	xor    ecx,ecx
  40eabc:	mov    rax,rbx
  40eabf:	cmp    rbx,rax
  40eac2:	jne    40eb23 <main@@Base+0x7a53>
  40eac4:	jmp    40eaf2 <main@@Base+0x7a22>
  40eac6:	mov    rcx,QWORD PTR [rsp+0x10]
  40eacb:	cmp    rcx,0x100
  40ead2:	jb     40ebd8 <main@@Base+0x7b08>
  40ead8:	mov    rdi,r14
  40eadb:	mov    rsi,rax
  40eade:	mov    rdx,r15
  40eae1:	mov    ecx,0x7
  40eae6:	call   424090 <flatcc_json_parser_set_error@@Base>
  40eaeb:	xor    ecx,ecx
  40eaed:	cmp    rbx,rax
  40eaf0:	jne    40eb23 <main@@Base+0x7a53>
  40eaf2:	mov    rdi,r14
  40eaf5:	mov    rsi,rbx
  40eaf8:	mov    rdx,r15
  40eafb:	lea    rcx,[rip+0x3461e]        # 443120 <__data_start@@Base+0x70>
  40eb02:	lea    r8,[rsp+0x4]
  40eb07:	call   412be0 <main@@Base+0xbb10>
  40eb0c:	cmp    rax,rbx
  40eb0f:	je     410d13 <main@@Base+0x9c43>
  40eb15:	cmp    rax,r15
  40eb18:	je     410d13 <main@@Base+0x9c43>
  40eb1e:	movzx  ecx,BYTE PTR [rsp+0x4]
  40eb23:	mov    BYTE PTR [rbp+0x0],cl
  40eb26:	mov    rcx,r15
  40eb29:	sub    rcx,rax
  40eb2c:	cmp    rcx,0x2
  40eb30:	jl     40eb4c <main@@Base+0x7a7c>
  40eb32:	cmp    BYTE PTR [rax],0x20
  40eb35:	jg     40eb5a <main@@Base+0x7a8a>
  40eb37:	jne    40eb4c <main@@Base+0x7a7c>
  40eb39:	cmp    BYTE PTR [rax+0x1],0x20
  40eb3d:	jle    40eb4c <main@@Base+0x7a7c>
  40eb3f:	inc    rax
  40eb42:	cmp    rax,r15
  40eb45:	jne    40eb63 <main@@Base+0x7a93>
  40eb47:	jmp    40fb10 <main@@Base+0x8a40>
  40eb4c:	mov    rdi,r14
  40eb4f:	mov    rsi,rax
  40eb52:	mov    rdx,r15
  40eb55:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40eb5a:	cmp    rax,r15
  40eb5d:	je     40fb10 <main@@Base+0x8a40>
  40eb63:	movzx  ecx,BYTE PTR [rax]
  40eb66:	cmp    cl,0x2c
  40eb69:	jne    40fb18 <main@@Base+0x8a48>
  40eb6f:	lea    rbx,[rax+0x1]
  40eb73:	mov    rcx,r15
  40eb76:	sub    rcx,rbx
  40eb79:	cmp    rcx,0x2
  40eb7d:	jl     40eb92 <main@@Base+0x7ac2>
  40eb7f:	cmp    BYTE PTR [rbx],0x20
  40eb82:	jg     40eba3 <main@@Base+0x7ad3>
  40eb84:	jne    40eb92 <main@@Base+0x7ac2>
  40eb86:	cmp    BYTE PTR [rax+0x2],0x20
  40eb8a:	jle    40eb92 <main@@Base+0x7ac2>
  40eb8c:	add    rax,0x2
  40eb90:	jmp    40eba0 <main@@Base+0x7ad0>
  40eb92:	mov    rdi,r14
  40eb95:	mov    rsi,rbx
  40eb98:	mov    rdx,r15
  40eb9b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40eba0:	mov    rbx,rax
  40eba3:	cmp    rbx,r15
  40eba6:	je     40fb29 <main@@Base+0x8a59>
  40ebac:	cmp    BYTE PTR [rbx],0x5d
  40ebaf:	je     410311 <main@@Base+0x9241>
  40ebb5:	mov    BYTE PTR [rsp+0x4],0x0
  40ebba:	mov    rdi,QWORD PTR [r14]
  40ebbd:	mov    esi,0x1
  40ebc2:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40ebc7:	mov    rbp,rax
  40ebca:	test   rax,rax
  40ebcd:	jne    40ea5f <main@@Base+0x798f>
  40ebd3:	jmp    407c81 <main@@Base+0xbb1>
  40ebd8:	mov    BYTE PTR [rsp+0x4],cl
  40ebdc:	cmp    rbx,rax
  40ebdf:	jne    40eb23 <main@@Base+0x7a53>
  40ebe5:	jmp    40eaf2 <main@@Base+0x7a22>
  40ebea:	mov    rdi,r14
  40ebed:	mov    rsi,rax
  40ebf0:	mov    rdx,r15
  40ebf3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ebf8:	mov    rsi,r15
  40ebfb:	cmp    rax,r15
  40ebfe:	je     40fb3f <main@@Base+0x8a6f>
  40ec04:	cmp    BYTE PTR [rax],0x7d
  40ec07:	jne    40fb3c <main@@Base+0x8a6c>
  40ec0d:	lea    rbp,[rax+0x1]
  40ec11:	mov    rcx,r15
  40ec14:	sub    rcx,rbp
  40ec17:	cmp    rcx,0x2
  40ec1b:	jl     410a3c <main@@Base+0x996c>
  40ec21:	cmp    BYTE PTR [rbp+0x0],0x20
  40ec25:	jg     40d5cb <main@@Base+0x64fb>
  40ec2b:	jne    410a3c <main@@Base+0x996c>
  40ec31:	cmp    BYTE PTR [rax+0x2],0x20
  40ec35:	jle    410a3c <main@@Base+0x996c>
  40ec3b:	add    rax,0x2
  40ec3f:	jmp    40d5c8 <main@@Base+0x64f8>
  40ec44:	mov    rdi,r14
  40ec47:	mov    rsi,rax
  40ec4a:	mov    rdx,r15
  40ec4d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ec52:	mov    rsi,r15
  40ec55:	cmp    rax,r15
  40ec58:	je     40ec66 <main@@Base+0x7b96>
  40ec5a:	cmp    BYTE PTR [rax],0x7d
  40ec5d:	je     410973 <main@@Base+0x98a3>
  40ec63:	mov    rsi,rax
  40ec66:	mov    rax,r15
  40ec69:	cmp    rsi,r15
  40ec6c:	je     40eca9 <main@@Base+0x7bd9>
  40ec6e:	movzx  eax,BYTE PTR [rsi]
  40ec71:	cmp    al,0x2e
  40ec73:	je     40ec89 <main@@Base+0x7bb9>
  40ec75:	cmp    al,0x22
  40ec77:	jne    40ec9b <main@@Base+0x7bcb>
  40ec79:	inc    rsi
  40ec7c:	mov    rax,QWORD PTR [rsp+0x8]
  40ec81:	mov    DWORD PTR [rax],0x0
  40ec87:	jmp    40eca6 <main@@Base+0x7bd6>
  40ec89:	mov    rdi,r14
  40ec8c:	mov    rdx,r15
  40ec8f:	mov    ecx,0x5
  40ec94:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ec99:	jmp    40eca9 <main@@Base+0x7bd9>
  40ec9b:	mov    rax,QWORD PTR [rsp+0x8]
  40eca0:	mov    DWORD PTR [rax],0x1
  40eca6:	mov    rax,rsi
  40eca9:	mov    rdi,r14
  40ecac:	mov    rsi,rax
  40ecaf:	mov    rdx,r15
  40ecb2:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  40ecb7:	mov    rcx,r15
  40ecba:	sub    rcx,rax
  40ecbd:	cmp    rcx,0x2
  40ecc1:	jl     40ecdd <main@@Base+0x7c0d>
  40ecc3:	cmp    BYTE PTR [rax],0x20
  40ecc6:	jg     40eceb <main@@Base+0x7c1b>
  40ecc8:	jne    40ecdd <main@@Base+0x7c0d>
  40ecca:	cmp    BYTE PTR [rax+0x1],0x20
  40ecce:	jle    40ecdd <main@@Base+0x7c0d>
  40ecd0:	inc    rax
  40ecd3:	cmp    rax,r15
  40ecd6:	jne    40ecf4 <main@@Base+0x7c24>
  40ecd8:	jmp    4108cc <main@@Base+0x97fc>
  40ecdd:	mov    rdi,r14
  40ece0:	mov    rsi,rax
  40ece3:	mov    rdx,r15
  40ece6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40eceb:	cmp    rax,r15
  40ecee:	je     4108cc <main@@Base+0x97fc>
  40ecf4:	movzx  ecx,BYTE PTR [rax]
  40ecf7:	cmp    cl,0x2c
  40ecfa:	jne    41096a <main@@Base+0x989a>
  40ed00:	lea    rsi,[rax+0x1]
  40ed04:	mov    rcx,r15
  40ed07:	sub    rcx,rsi
  40ed0a:	cmp    rcx,0x2
  40ed0e:	jl     40ed23 <main@@Base+0x7c53>
  40ed10:	cmp    BYTE PTR [rsi],0x20
  40ed13:	jg     40ed31 <main@@Base+0x7c61>
  40ed15:	jne    40ed23 <main@@Base+0x7c53>
  40ed17:	cmp    BYTE PTR [rax+0x2],0x20
  40ed1b:	jle    40ed23 <main@@Base+0x7c53>
  40ed1d:	add    rax,0x2
  40ed21:	jmp    40ed2e <main@@Base+0x7c5e>
  40ed23:	mov    rdi,r14
  40ed26:	mov    rdx,r15
  40ed29:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ed2e:	mov    rsi,rax
  40ed31:	cmp    rsi,r15
  40ed34:	je     4109f3 <main@@Base+0x9923>
  40ed3a:	cmp    BYTE PTR [rsi],0x7d
  40ed3d:	jne    40ec66 <main@@Base+0x7b96>
  40ed43:	lea    rbp,[rsi+0x1]
  40ed47:	mov    rax,r15
  40ed4a:	sub    rax,rbp
  40ed4d:	cmp    rax,0x2
  40ed51:	jl     41099e <main@@Base+0x98ce>
  40ed57:	cmp    BYTE PTR [rbp+0x0],0x20
  40ed5b:	jg     40d89f <main@@Base+0x67cf>
  40ed61:	jne    41099e <main@@Base+0x98ce>
  40ed67:	cmp    BYTE PTR [rsi+0x2],0x20
  40ed6b:	jle    41099e <main@@Base+0x98ce>
  40ed71:	add    rsi,0x2
  40ed75:	mov    rbp,rsi
  40ed78:	cmp    DWORD PTR [r14+0x20],0x0
  40ed7d:	jne    40d8aa <main@@Base+0x67da>
  40ed83:	jmp    410b65 <main@@Base+0x9a95>
  40ed88:	mov    rdi,r14
  40ed8b:	mov    rsi,rbx
  40ed8e:	mov    rdx,r15
  40ed91:	mov    ecx,0x16
  40ed96:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ed9b:	jmp    410c05 <main@@Base+0x9b35>
  40eda0:	mov    rsi,rax
  40eda3:	mov    rdi,r14
  40eda6:	mov    rdx,r15
  40eda9:	lea    rcx,[rsp+0x1c]
  40edae:	call   426120 <flatcc_json_parser_build_string@@Base>
  40edb3:	mov    rbx,rax
  40edb6:	cmp    DWORD PTR [rsp+0x1c],0x0
  40edbb:	je     407c81 <main@@Base+0xbb1>
  40edc1:	mov    rdi,QWORD PTR [r14]
  40edc4:	mov    esi,0x1
  40edc9:	call   41ebe0 <flatcc_builder_extend_offset_vector@@Base>
  40edce:	test   rax,rax
  40edd1:	je     407c81 <main@@Base+0xbb1>
  40edd7:	mov    ecx,DWORD PTR [rsp+0x1c]
  40eddb:	mov    DWORD PTR [rax],ecx
  40eddd:	mov    rax,r15
  40ede0:	sub    rax,rbx
  40ede3:	cmp    rax,0x2
  40ede7:	jl     40ee03 <main@@Base+0x7d33>
  40ede9:	cmp    BYTE PTR [rbx],0x20
  40edec:	jg     40ee14 <main@@Base+0x7d44>
  40edee:	jne    40ee03 <main@@Base+0x7d33>
  40edf0:	cmp    BYTE PTR [rbx+0x1],0x20
  40edf4:	jle    40ee03 <main@@Base+0x7d33>
  40edf6:	inc    rbx
  40edf9:	cmp    rbx,r15
  40edfc:	jne    40ee1d <main@@Base+0x7d4d>
  40edfe:	jmp    410842 <main@@Base+0x9772>
  40ee03:	mov    rdi,r14
  40ee06:	mov    rsi,rbx
  40ee09:	mov    rdx,r15
  40ee0c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ee11:	mov    rbx,rax
  40ee14:	cmp    rbx,r15
  40ee17:	je     410842 <main@@Base+0x9772>
  40ee1d:	movzx  eax,BYTE PTR [rbx]
  40ee20:	cmp    al,0x2c
  40ee22:	jne    41084a <main@@Base+0x977a>
  40ee28:	lea    rsi,[rbx+0x1]
  40ee2c:	mov    rax,r15
  40ee2f:	sub    rax,rsi
  40ee32:	cmp    rax,0x2
  40ee36:	jl     40ee56 <main@@Base+0x7d86>
  40ee38:	cmp    BYTE PTR [rsi],0x20
  40ee3b:	jg     40ee64 <main@@Base+0x7d94>
  40ee3d:	jne    40ee56 <main@@Base+0x7d86>
  40ee3f:	cmp    BYTE PTR [rbx+0x2],0x20
  40ee43:	jle    40ee56 <main@@Base+0x7d86>
  40ee45:	add    rbx,0x2
  40ee49:	mov    rsi,rbx
  40ee4c:	cmp    rsi,r15
  40ee4f:	jne    40ee6d <main@@Base+0x7d9d>
  40ee51:	jmp    4108b9 <main@@Base+0x97e9>
  40ee56:	mov    rdi,r14
  40ee59:	mov    rdx,r15
  40ee5c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ee61:	mov    rsi,rax
  40ee64:	cmp    rsi,r15
  40ee67:	je     4108b9 <main@@Base+0x97e9>
  40ee6d:	cmp    BYTE PTR [rsi],0x5d
  40ee70:	jne    40eda3 <main@@Base+0x7cd3>
  40ee76:	lea    rbp,[rsi+0x1]
  40ee7a:	mov    rax,r15
  40ee7d:	sub    rax,rbp
  40ee80:	cmp    rax,0x2
  40ee84:	jl     410880 <main@@Base+0x97b0>
  40ee8a:	cmp    BYTE PTR [rbp+0x0],0x20
  40ee8e:	jg     40da95 <main@@Base+0x69c5>
  40ee94:	jne    410880 <main@@Base+0x97b0>
  40ee9a:	cmp    BYTE PTR [rsi+0x2],0x20
  40ee9e:	jle    410880 <main@@Base+0x97b0>
  40eea4:	add    rsi,0x2
  40eea8:	mov    rbp,rsi
  40eeab:	jmp    40da95 <main@@Base+0x69c5>
  40eeb0:	mov    rbp,r15
  40eeb3:	jmp    40cd27 <main@@Base+0x5c57>
  40eeb8:	cmp    al,0x5d
  40eeba:	jne    410600 <main@@Base+0x9530>
  40eec0:	lea    rbp,[rcx+0x1]
  40eec4:	mov    rax,r15
  40eec7:	sub    rax,rbp
  40eeca:	cmp    rax,0x2
  40eece:	jl     40f6c8 <main@@Base+0x85f8>
  40eed4:	cmp    BYTE PTR [rbp+0x0],0x20
  40eed8:	jg     40cd27 <main@@Base+0x5c57>
  40eede:	jne    40f6c8 <main@@Base+0x85f8>
  40eee4:	cmp    BYTE PTR [rcx+0x2],0x20
  40eee8:	jle    40f6c8 <main@@Base+0x85f8>
  40eeee:	add    rcx,0x2
  40eef2:	mov    rbp,rcx
  40eef5:	jmp    40cd27 <main@@Base+0x5c57>
  40eefa:	mov    rdi,r14
  40eefd:	mov    rsi,r15
  40ef00:	jmp    410606 <main@@Base+0x9536>
  40ef05:	jne    40ef1c <main@@Base+0x7e4c>
  40ef07:	cmp    BYTE PTR [r13+0x2],0x20
  40ef0c:	jle    40ef1c <main@@Base+0x7e4c>
  40ef0e:	add    r13,0x2
  40ef12:	cmp    r12,r13
  40ef15:	jne    40ef33 <main@@Base+0x7e63>
  40ef17:	jmp    41043a <main@@Base+0x936a>
  40ef1c:	mov    rdi,r14
  40ef1f:	mov    rdx,r15
  40ef22:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ef27:	mov    r13,rax
  40ef2a:	cmp    r12,r13
  40ef2d:	je     41043a <main@@Base+0x936a>
  40ef33:	mov    QWORD PTR [rsp+0x10],0x0
  40ef3c:	mov    DWORD PTR [rsp+0x4],0x0
  40ef44:	mov    QWORD PTR [rsp+0x20],0x0
  40ef4d:	cmp    r13,r15
  40ef50:	je     40ef9e <main@@Base+0x7ece>
  40ef52:	mov    rdi,r14
  40ef55:	mov    rsi,r13
  40ef58:	mov    rdx,r15
  40ef5b:	lea    rcx,[rsp+0x4]
  40ef60:	lea    r8,[rsp+0x10]
  40ef65:	call   425c50 <flatcc_json_parser_integer@@Base>
  40ef6a:	cmp    rax,r13
  40ef6d:	je     40efa8 <main@@Base+0x7ed8>
  40ef6f:	mov    rbx,QWORD PTR [rsp+0x10]
  40ef74:	cmp    DWORD PTR [rsp+0x4],0x0
  40ef79:	je     40efb2 <main@@Base+0x7ee2>
  40ef7b:	movabs rcx,0x8000000000000000
  40ef85:	cmp    rbx,rcx
  40ef88:	jbe    40f6db <main@@Base+0x860b>
  40ef8e:	mov    rdi,r14
  40ef91:	mov    rsi,rax
  40ef94:	mov    rdx,r15
  40ef97:	mov    ecx,0x8
  40ef9c:	jmp    40efc9 <main@@Base+0x7ef9>
  40ef9e:	xor    ebx,ebx
  40efa0:	mov    rax,r15
  40efa3:	jmp    40f6e3 <main@@Base+0x8613>
  40efa8:	xor    ebx,ebx
  40efaa:	mov    rax,r13
  40efad:	jmp    40f6e3 <main@@Base+0x8613>
  40efb2:	test   rbx,rbx
  40efb5:	jns    40f6de <main@@Base+0x860e>
  40efbb:	mov    rdi,r14
  40efbe:	mov    rsi,rax
  40efc1:	mov    rdx,r15
  40efc4:	mov    ecx,0x7
  40efc9:	call   424090 <flatcc_json_parser_set_error@@Base>
  40efce:	xor    ebx,ebx
  40efd0:	jmp    40f6e3 <main@@Base+0x8613>
  40efd5:	mov    rsi,rax
  40efd8:	mov    r12,r15
  40efdb:	cmp    rsi,r15
  40efde:	je     40f01e <main@@Base+0x7f4e>
  40efe0:	movzx  eax,BYTE PTR [rsi]
  40efe3:	cmp    al,0x2e
  40efe5:	je     40effb <main@@Base+0x7f2b>
  40efe7:	cmp    al,0x22
  40efe9:	jne    40f010 <main@@Base+0x7f40>
  40efeb:	inc    rsi
  40efee:	mov    rax,QWORD PTR [rsp+0x8]
  40eff3:	mov    DWORD PTR [rax],0x0
  40eff9:	jmp    40f01b <main@@Base+0x7f4b>
  40effb:	mov    rdi,r14
  40effe:	mov    rdx,r15
  40f001:	mov    ecx,0x5
  40f006:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f00b:	mov    r12,rax
  40f00e:	jmp    40f01e <main@@Base+0x7f4e>
  40f010:	mov    rax,QWORD PTR [rsp+0x8]
  40f015:	mov    DWORD PTR [rax],0x1
  40f01b:	mov    r12,rsi
  40f01e:	mov    rcx,r15
  40f021:	sub    rcx,r12
  40f024:	cmp    rcx,0x8
  40f028:	jb     40f035 <main@@Base+0x7f65>
  40f02a:	movbe  rax,QWORD PTR [r12]
  40f030:	jmp    40f0ba <main@@Base+0x7fea>
  40f035:	lea    rax,[rcx-0x1]
  40f039:	cmp    rax,0x6
  40f03d:	ja     40f4e9 <main@@Base+0x8419>
  40f043:	lea    rdx,[rip+0x25136]        # 434180 <_IO_stdin_used@@Base+0x180>
  40f04a:	mov    rsi,rdx
  40f04d:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40f051:	add    rdx,rsi
  40f054:	xor    r8d,r8d
  40f057:	xor    eax,eax
  40f059:	xor    esi,esi
  40f05b:	xor    edi,edi
  40f05d:	xor    ebp,ebp
  40f05f:	xor    ebx,ebx
  40f061:	jmp    rdx
  40f063:	movsx  r8,BYTE PTR [r12+0x6]
  40f069:	shl    r8,0x8
  40f06d:	movsx  rax,BYTE PTR [r12+0x5]
  40f073:	shl    rax,0x10
  40f077:	or     rax,r8
  40f07a:	movsx  rsi,BYTE PTR [r12+0x4]
  40f080:	shl    rsi,0x18
  40f084:	or     rsi,rax
  40f087:	movsx  rdi,BYTE PTR [r12+0x3]
  40f08d:	shl    rdi,0x20
  40f091:	or     rdi,rsi
  40f094:	movsx  rbp,BYTE PTR [r12+0x2]
  40f09a:	shl    rbp,0x28
  40f09e:	or     rbp,rdi
  40f0a1:	movsx  rbx,BYTE PTR [r12+0x1]
  40f0a7:	shl    rbx,0x30
  40f0ab:	or     rbx,rbp
  40f0ae:	movzx  eax,BYTE PTR [r12]
  40f0b3:	shl    rax,0x38
  40f0b7:	or     rax,rbx
  40f0ba:	movabs rdx,0x6e65737465640000
  40f0c4:	cmp    rax,rdx
  40f0c7:	jae    40f130 <main@@Base+0x8060>
  40f0c9:	movabs rdx,0xffffffff00000000
  40f0d3:	and    rax,rdx
  40f0d6:	movabs rdx,0x6461746100000000
  40f0e0:	cmp    rax,rdx
  40f0e3:	jne    40f4e9 <main@@Base+0x8419>
  40f0e9:	mov    rax,r12
  40f0ec:	cmp    rcx,0x5
  40f0f0:	jl     40f415 <main@@Base+0x8345>
  40f0f6:	mov    rax,QWORD PTR [rsp+0x8]
  40f0fb:	cmp    DWORD PTR [rax],0x0
  40f0fe:	movzx  ecx,BYTE PTR [r12+0x4]
  40f104:	je     40f1ed <main@@Base+0x811d>
  40f10a:	cmp    cl,0x21
  40f10d:	jl     40f11b <main@@Base+0x804b>
  40f10f:	mov    rax,r12
  40f112:	cmp    cl,0x3a
  40f115:	jne    40f415 <main@@Base+0x8345>
  40f11b:	lea    rsi,[r12+0x4]
  40f120:	mov    rax,QWORD PTR [rsp+0x8]
  40f125:	mov    DWORD PTR [rax],0x0
  40f12b:	jmp    40f1fe <main@@Base+0x812e>
  40f130:	mov    rdx,rax
  40f133:	shr    rdx,0x8
  40f137:	movabs rsi,0x75726c64617461
  40f141:	cmp    rdx,rsi
  40f144:	jne    40f18d <main@@Base+0x80bd>
  40f146:	mov    rax,r12
  40f149:	cmp    rcx,0x8
  40f14d:	jl     40f45a <main@@Base+0x838a>
  40f153:	mov    rax,QWORD PTR [rsp+0x8]
  40f158:	cmp    DWORD PTR [rax],0x0
  40f15b:	movzx  ecx,BYTE PTR [r12+0x7]
  40f161:	je     40f224 <main@@Base+0x8154>
  40f167:	cmp    cl,0x21
  40f16a:	jl     40f178 <main@@Base+0x80a8>
  40f16c:	mov    rax,r12
  40f16f:	cmp    cl,0x3a
  40f172:	jne    40f45a <main@@Base+0x838a>
  40f178:	lea    rsi,[r12+0x7]
  40f17d:	mov    rax,QWORD PTR [rsp+0x8]
  40f182:	mov    DWORD PTR [rax],0x0
  40f188:	jmp    40f235 <main@@Base+0x8165>
  40f18d:	and    rax,0xffffffffffff0000
  40f193:	movabs rdx,0x6e65737465640000
  40f19d:	cmp    rax,rdx
  40f1a0:	jne    40f4e9 <main@@Base+0x8419>
  40f1a6:	mov    rax,r12
  40f1a9:	cmp    rcx,0x7
  40f1ad:	jl     40f4a2 <main@@Base+0x83d2>
  40f1b3:	mov    rax,QWORD PTR [rsp+0x8]
  40f1b8:	cmp    DWORD PTR [rax],0x0
  40f1bb:	movzx  ecx,BYTE PTR [r12+0x6]
  40f1c1:	je     40f35b <main@@Base+0x828b>
  40f1c7:	cmp    cl,0x21
  40f1ca:	jl     40f1d8 <main@@Base+0x8108>
  40f1cc:	mov    rax,r12
  40f1cf:	cmp    cl,0x3a
  40f1d2:	jne    40f4a2 <main@@Base+0x83d2>
  40f1d8:	lea    rsi,[r12+0x6]
  40f1dd:	mov    rax,QWORD PTR [rsp+0x8]
  40f1e2:	mov    DWORD PTR [rax],0x0
  40f1e8:	jmp    40f36c <main@@Base+0x829c>
  40f1ed:	mov    rax,r12
  40f1f0:	cmp    cl,0x22
  40f1f3:	jne    40f415 <main@@Base+0x8345>
  40f1f9:	lea    rsi,[r12+0x5]
  40f1fe:	mov    rax,r15
  40f201:	sub    rax,rsi
  40f204:	cmp    rax,0x2
  40f208:	jl     40f263 <main@@Base+0x8193>
  40f20a:	cmp    BYTE PTR [rsi],0x20
  40f20d:	jg     40f271 <main@@Base+0x81a1>
  40f20f:	jne    40f263 <main@@Base+0x8193>
  40f211:	cmp    BYTE PTR [rsi+0x1],0x20
  40f215:	jle    40f263 <main@@Base+0x8193>
  40f217:	inc    rsi
  40f21a:	cmp    rsi,r15
  40f21d:	jne    40f27a <main@@Base+0x81aa>
  40f21f:	jmp    40f31f <main@@Base+0x824f>
  40f224:	mov    rax,r12
  40f227:	cmp    cl,0x22
  40f22a:	jne    40f45a <main@@Base+0x838a>
  40f230:	lea    rsi,[r12+0x8]
  40f235:	mov    rax,r15
  40f238:	sub    rax,rsi
  40f23b:	cmp    rax,0x2
  40f23f:	jl     40f2c5 <main@@Base+0x81f5>
  40f245:	cmp    BYTE PTR [rsi],0x20
  40f248:	jg     40f2d3 <main@@Base+0x8203>
  40f24e:	jne    40f2c5 <main@@Base+0x81f5>
  40f250:	cmp    BYTE PTR [rsi+0x1],0x20
  40f254:	jle    40f2c5 <main@@Base+0x81f5>
  40f256:	inc    rsi
  40f259:	cmp    rsi,r15
  40f25c:	jne    40f2d8 <main@@Base+0x8208>
  40f25e:	jmp    40f33d <main@@Base+0x826d>
  40f263:	mov    rdi,r14
  40f266:	mov    rdx,r15
  40f269:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f26e:	mov    rsi,rax
  40f271:	cmp    rsi,r15
  40f274:	je     40f31f <main@@Base+0x824f>
  40f27a:	cmp    BYTE PTR [rsi],0x3a
  40f27d:	jne    40f31f <main@@Base+0x824f>
  40f283:	lea    rax,[rsi+0x1]
  40f287:	mov    rcx,r15
  40f28a:	sub    rcx,rax
  40f28d:	cmp    rcx,0x2
  40f291:	jl     40f407 <main@@Base+0x8337>
  40f297:	cmp    BYTE PTR [rax],0x20
  40f29a:	jg     40f415 <main@@Base+0x8345>
  40f2a0:	jne    40f407 <main@@Base+0x8337>
  40f2a6:	cmp    BYTE PTR [rsi+0x2],0x20
  40f2aa:	jle    40f407 <main@@Base+0x8337>
  40f2b0:	add    rsi,0x2
  40f2b4:	mov    rax,rsi
  40f2b7:	cmp    r12,rax
  40f2ba:	jne    40f41e <main@@Base+0x834e>
  40f2c0:	jmp    40f4e9 <main@@Base+0x8419>
  40f2c5:	mov    rdi,r14
  40f2c8:	mov    rdx,r15
  40f2cb:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f2d0:	mov    rsi,rax
  40f2d3:	cmp    rsi,r15
  40f2d6:	je     40f33d <main@@Base+0x826d>
  40f2d8:	cmp    BYTE PTR [rsi],0x3a
  40f2db:	jne    40f33d <main@@Base+0x826d>
  40f2dd:	lea    rax,[rsi+0x1]
  40f2e1:	mov    rcx,r15
  40f2e4:	sub    rcx,rax
  40f2e7:	cmp    rcx,0x2
  40f2eb:	jl     40f44c <main@@Base+0x837c>
  40f2f1:	cmp    BYTE PTR [rax],0x20
  40f2f4:	jg     40f45a <main@@Base+0x838a>
  40f2fa:	jne    40f44c <main@@Base+0x837c>
  40f300:	cmp    BYTE PTR [rsi+0x2],0x20
  40f304:	jle    40f44c <main@@Base+0x837c>
  40f30a:	add    rsi,0x2
  40f30e:	mov    rax,rsi
  40f311:	cmp    r12,rax
  40f314:	jne    40f463 <main@@Base+0x8393>
  40f31a:	jmp    40f4e9 <main@@Base+0x8419>
  40f31f:	mov    rdi,r14
  40f322:	mov    rdx,r15
  40f325:	mov    ecx,0x4
  40f32a:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f32f:	cmp    r12,rax
  40f332:	jne    40f41e <main@@Base+0x834e>
  40f338:	jmp    40f4e9 <main@@Base+0x8419>
  40f33d:	mov    rdi,r14
  40f340:	mov    rdx,r15
  40f343:	mov    ecx,0x4
  40f348:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f34d:	cmp    r12,rax
  40f350:	jne    40f463 <main@@Base+0x8393>
  40f356:	jmp    40f4e9 <main@@Base+0x8419>
  40f35b:	mov    rax,r12
  40f35e:	cmp    cl,0x22
  40f361:	jne    40f4a2 <main@@Base+0x83d2>
  40f367:	lea    rsi,[r12+0x7]
  40f36c:	mov    rax,r15
  40f36f:	sub    rax,rsi
  40f372:	cmp    rax,0x2
  40f376:	jl     40f38f <main@@Base+0x82bf>
  40f378:	cmp    BYTE PTR [rsi],0x20
  40f37b:	jg     40f39d <main@@Base+0x82cd>
  40f37d:	jne    40f38f <main@@Base+0x82bf>
  40f37f:	cmp    BYTE PTR [rsi+0x1],0x20
  40f383:	jle    40f38f <main@@Base+0x82bf>
  40f385:	inc    rsi
  40f388:	cmp    rsi,r15
  40f38b:	jne    40f3a2 <main@@Base+0x82d2>
  40f38d:	jmp    40f3e9 <main@@Base+0x8319>
  40f38f:	mov    rdi,r14
  40f392:	mov    rdx,r15
  40f395:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f39a:	mov    rsi,rax
  40f39d:	cmp    rsi,r15
  40f3a0:	je     40f3e9 <main@@Base+0x8319>
  40f3a2:	cmp    BYTE PTR [rsi],0x3a
  40f3a5:	jne    40f3e9 <main@@Base+0x8319>
  40f3a7:	lea    rax,[rsi+0x1]
  40f3ab:	mov    rcx,r15
  40f3ae:	sub    rcx,rax
  40f3b1:	cmp    rcx,0x2
  40f3b5:	jl     40f494 <main@@Base+0x83c4>
  40f3bb:	cmp    BYTE PTR [rax],0x20
  40f3be:	jg     40f4a2 <main@@Base+0x83d2>
  40f3c4:	jne    40f494 <main@@Base+0x83c4>
  40f3ca:	cmp    BYTE PTR [rsi+0x2],0x20
  40f3ce:	jle    40f494 <main@@Base+0x83c4>
  40f3d4:	add    rsi,0x2
  40f3d8:	mov    rax,rsi
  40f3db:	cmp    r12,rax
  40f3de:	jne    40f4a7 <main@@Base+0x83d7>
  40f3e4:	jmp    40f4e9 <main@@Base+0x8419>
  40f3e9:	mov    rdi,r14
  40f3ec:	mov    rdx,r15
  40f3ef:	mov    ecx,0x4
  40f3f4:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f3f9:	cmp    r12,rax
  40f3fc:	jne    40f4a7 <main@@Base+0x83d7>
  40f402:	jmp    40f4e9 <main@@Base+0x8419>
  40f407:	mov    rdi,r14
  40f40a:	mov    rsi,rax
  40f40d:	mov    rdx,r15
  40f410:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f415:	cmp    r12,rax
  40f418:	je     40f4e9 <main@@Base+0x8419>
  40f41e:	mov    rdi,r14
  40f421:	mov    rsi,rax
  40f424:	mov    rdx,r15
  40f427:	lea    rcx,[rsp+0x10]
  40f42c:	xor    r8d,r8d
  40f42f:	call   425d40 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f434:	mov    rbx,rax
  40f437:	cmp    DWORD PTR [rsp+0x10],0x0
  40f43c:	je     40d1cf <main@@Base+0x60ff>
  40f442:	mov    rdi,QWORD PTR [r14]
  40f445:	xor    esi,esi
  40f447:	jmp    40f4d3 <main@@Base+0x8403>
  40f44c:	mov    rdi,r14
  40f44f:	mov    rsi,rax
  40f452:	mov    rdx,r15
  40f455:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f45a:	cmp    r12,rax
  40f45d:	je     40f4e9 <main@@Base+0x8419>
  40f463:	mov    rdi,r14
  40f466:	mov    rsi,rax
  40f469:	mov    rdx,r15
  40f46c:	lea    rcx,[rsp+0x10]
  40f471:	mov    r8d,0x1
  40f477:	call   425d40 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f47c:	mov    rbx,rax
  40f47f:	cmp    DWORD PTR [rsp+0x10],0x0
  40f484:	je     40d1cf <main@@Base+0x60ff>
  40f48a:	mov    rdi,QWORD PTR [r14]
  40f48d:	mov    esi,0x1
  40f492:	jmp    40f4d3 <main@@Base+0x8403>
  40f494:	mov    rdi,r14
  40f497:	mov    rsi,rax
  40f49a:	mov    rdx,r15
  40f49d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f4a2:	cmp    r12,rax
  40f4a5:	je     40f4e9 <main@@Base+0x8419>
  40f4a7:	mov    rdi,r14
  40f4aa:	mov    rsi,rax
  40f4ad:	mov    rdx,r15
  40f4b0:	lea    rcx,[rsp+0x10]
  40f4b5:	xor    r8d,r8d
  40f4b8:	call   425d40 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40f4bd:	mov    rbx,rax
  40f4c0:	cmp    DWORD PTR [rsp+0x10],0x0
  40f4c5:	je     40d1cf <main@@Base+0x60ff>
  40f4cb:	mov    rdi,QWORD PTR [r14]
  40f4ce:	mov    esi,0x2
  40f4d3:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  40f4d8:	test   rax,rax
  40f4db:	je     40d1cf <main@@Base+0x60ff>
  40f4e1:	mov    ecx,DWORD PTR [rsp+0x10]
  40f4e5:	mov    DWORD PTR [rax],ecx
  40f4e7:	jmp    40f4fa <main@@Base+0x842a>
  40f4e9:	mov    rdi,r14
  40f4ec:	mov    rsi,r12
  40f4ef:	mov    rdx,r15
  40f4f2:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  40f4f7:	mov    rbx,rax
  40f4fa:	mov    rax,r15
  40f4fd:	sub    rax,rbx
  40f500:	cmp    rax,0x2
  40f504:	jl     40f520 <main@@Base+0x8450>
  40f506:	cmp    BYTE PTR [rbx],0x20
  40f509:	jg     40f531 <main@@Base+0x8461>
  40f50b:	jne    40f520 <main@@Base+0x8450>
  40f50d:	cmp    BYTE PTR [rbx+0x1],0x20
  40f511:	jle    40f520 <main@@Base+0x8450>
  40f513:	inc    rbx
  40f516:	cmp    rbx,r15
  40f519:	jne    40f53a <main@@Base+0x846a>
  40f51b:	jmp    410613 <main@@Base+0x9543>
  40f520:	mov    rdi,r14
  40f523:	mov    rsi,rbx
  40f526:	mov    rdx,r15
  40f529:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f52e:	mov    rbx,rax
  40f531:	cmp    rbx,r15
  40f534:	je     410613 <main@@Base+0x9543>
  40f53a:	movzx  eax,BYTE PTR [rbx]
  40f53d:	cmp    al,0x2c
  40f53f:	jne    41063a <main@@Base+0x956a>
  40f545:	lea    rsi,[rbx+0x1]
  40f549:	mov    rax,r15
  40f54c:	sub    rax,rsi
  40f54f:	cmp    rax,0x2
  40f553:	jl     40f573 <main@@Base+0x84a3>
  40f555:	cmp    BYTE PTR [rsi],0x20
  40f558:	jg     40f581 <main@@Base+0x84b1>
  40f55a:	jne    40f573 <main@@Base+0x84a3>
  40f55c:	cmp    BYTE PTR [rbx+0x2],0x20
  40f560:	jle    40f573 <main@@Base+0x84a3>
  40f562:	add    rbx,0x2
  40f566:	mov    rsi,rbx
  40f569:	cmp    rsi,r15
  40f56c:	jne    40f58a <main@@Base+0x84ba>
  40f56e:	jmp    41068b <main@@Base+0x95bb>
  40f573:	mov    rdi,r14
  40f576:	mov    rdx,r15
  40f579:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f57e:	mov    rsi,rax
  40f581:	cmp    rsi,r15
  40f584:	je     41068b <main@@Base+0x95bb>
  40f58a:	cmp    BYTE PTR [rsi],0x7d
  40f58d:	jne    40efd8 <main@@Base+0x7f08>
  40f593:	lea    rbp,[rsi+0x1]
  40f597:	mov    rax,r15
  40f59a:	sub    rax,rbp
  40f59d:	cmp    rax,0x2
  40f5a1:	jl     410678 <main@@Base+0x95a8>
  40f5a7:	cmp    BYTE PTR [rbp+0x0],0x20
  40f5ab:	jg     40d1c1 <main@@Base+0x60f1>
  40f5b1:	jne    410678 <main@@Base+0x95a8>
  40f5b7:	cmp    BYTE PTR [rsi+0x2],0x20
  40f5bb:	jle    410678 <main@@Base+0x95a8>
  40f5c1:	add    rsi,0x2
  40f5c5:	mov    rbp,rsi
  40f5c8:	cmp    DWORD PTR [r14+0x20],0x0
  40f5cd:	jne    40d1cc <main@@Base+0x60fc>
  40f5d3:	jmp    410621 <main@@Base+0x9551>
  40f5d8:	mov    DWORD PTR [rsp+0x4],ecx
  40f5dc:	mov    ebx,ecx
  40f5de:	mov    rcx,rbp
  40f5e1:	mov    rbp,rax
  40f5e4:	cmp    rcx,rax
  40f5e7:	jne    40f61f <main@@Base+0x854f>
  40f5e9:	mov    rdi,r14
  40f5ec:	mov    rsi,rcx
  40f5ef:	mov    rdx,r15
  40f5f2:	mov    rbx,rcx
  40f5f5:	lea    rcx,[rip+0x33ca4]        # 4432a0 <__data_start@@Base+0x1f0>
  40f5fc:	lea    r8,[rsp+0x4]
  40f601:	call   414f50 <main@@Base+0xde80>
  40f606:	mov    rbp,rax
  40f609:	cmp    rax,rbx
  40f60c:	je     410ce5 <main@@Base+0x9c15>
  40f612:	cmp    rbp,r15
  40f615:	je     410ce5 <main@@Base+0x9c15>
  40f61b:	mov    ebx,DWORD PTR [rsp+0x4]
  40f61f:	test   ebx,ebx
  40f621:	jne    40f62e <main@@Base+0x855e>
  40f623:	test   BYTE PTR [r14+0x10],0x2
  40f628:	je     41044b <main@@Base+0x937b>
  40f62e:	mov    rdi,QWORD PTR [r14]
  40f631:	mov    edx,0x4
  40f636:	mov    esi,0x11
  40f63b:	jmp    41093f <main@@Base+0x986f>
  40f640:	mov    rdi,r14
  40f643:	mov    rsi,rax
  40f646:	mov    rdx,r15
  40f649:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f64e:	mov    rbx,r15
  40f651:	cmp    rax,r15
  40f654:	je     410699 <main@@Base+0x95c9>
  40f65a:	cmp    BYTE PTR [rax],0x5d
  40f65d:	jne    410696 <main@@Base+0x95c6>
  40f663:	lea    rbp,[rax+0x1]
  40f667:	mov    rcx,r15
  40f66a:	sub    rcx,rbp
  40f66d:	cmp    rcx,0x2
  40f671:	jl     410bf7 <main@@Base+0x9b27>
  40f677:	cmp    BYTE PTR [rbp+0x0],0x20
  40f67b:	jg     410c08 <main@@Base+0x9b38>
  40f681:	jne    410bf7 <main@@Base+0x9b27>
  40f687:	cmp    BYTE PTR [rax+0x2],0x20
  40f68b:	jle    410bf7 <main@@Base+0x9b27>
  40f691:	add    rax,0x2
  40f695:	jmp    410c05 <main@@Base+0x9b35>
  40f69a:	lea    rbp,[rbx+0x1]
  40f69e:	mov    rax,r15
  40f6a1:	sub    rax,rbp
  40f6a4:	cmp    rax,0x2
  40f6a8:	jl     40f6c8 <main@@Base+0x85f8>
  40f6aa:	cmp    BYTE PTR [rbp+0x0],0x20
  40f6ae:	jg     40cd27 <main@@Base+0x5c57>
  40f6b4:	jne    40f6c8 <main@@Base+0x85f8>
  40f6b6:	cmp    BYTE PTR [rbx+0x2],0x20
  40f6ba:	jle    40f6c8 <main@@Base+0x85f8>
  40f6bc:	add    rbx,0x2
  40f6c0:	mov    rbp,rbx
  40f6c3:	jmp    40cd27 <main@@Base+0x5c57>
  40f6c8:	mov    rdi,r14
  40f6cb:	mov    rsi,rbp
  40f6ce:	mov    rdx,r15
  40f6d1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f6d6:	jmp    40cd24 <main@@Base+0x5c54>
  40f6db:	neg    rbx
  40f6de:	mov    QWORD PTR [rsp+0x20],rbx
  40f6e3:	mov    rbp,rax
  40f6e6:	cmp    r13,rax
  40f6e9:	jne    40f71f <main@@Base+0x864f>
  40f6eb:	mov    rdi,r14
  40f6ee:	mov    rsi,r13
  40f6f1:	mov    rdx,r15
  40f6f4:	lea    rcx,[rip+0x33b85]        # 443280 <__data_start@@Base+0x1d0>
  40f6fb:	lea    r8,[rsp+0x20]
  40f700:	call   414d70 <main@@Base+0xdca0>
  40f705:	mov    rbp,rax
  40f708:	cmp    rax,r13
  40f70b:	je     410ce5 <main@@Base+0x9c15>
  40f711:	cmp    rbp,r15
  40f714:	je     410ce5 <main@@Base+0x9c15>
  40f71a:	mov    rbx,QWORD PTR [rsp+0x20]
  40f71f:	test   rbx,rbx
  40f722:	jne    40f72f <main@@Base+0x865f>
  40f724:	test   BYTE PTR [r14+0x10],0x2
  40f729:	je     41044b <main@@Base+0x937b>
  40f72f:	mov    rdi,QWORD PTR [r14]
  40f732:	mov    edx,0x8
  40f737:	mov    esi,0x16
  40f73c:	jmp    4105e5 <main@@Base+0x9515>
  40f741:	mov    rdi,r14
  40f744:	mov    rsi,rax
  40f747:	mov    rdx,r15
  40f74a:	mov    ecx,0x21
  40f74f:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f754:	jmp    410448 <main@@Base+0x9378>
  40f759:	mov    rbx,rax
  40f75c:	mov    QWORD PTR [rsp+0x20],0x0
  40f765:	mov    rdi,QWORD PTR [r14]
  40f768:	mov    esi,0x1
  40f76d:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40f772:	test   rax,rax
  40f775:	je     407c81 <main@@Base+0xbb1>
  40f77b:	mov    rbp,rax
  40f77e:	mov    QWORD PTR [rsp+0x10],0x0
  40f787:	mov    DWORD PTR [rsp+0x4],0x0
  40f78f:	mov    QWORD PTR [rsp+0x20],0x0
  40f798:	cmp    rbx,r15
  40f79b:	je     40f7e5 <main@@Base+0x8715>
  40f79d:	mov    rdi,r14
  40f7a0:	mov    rsi,rbx
  40f7a3:	mov    rdx,r15
  40f7a6:	lea    rcx,[rsp+0x4]
  40f7ab:	lea    r8,[rsp+0x10]
  40f7b0:	call   425c50 <flatcc_json_parser_integer@@Base>
  40f7b5:	cmp    rax,rbx
  40f7b8:	je     40f7f1 <main@@Base+0x8721>
  40f7ba:	mov    rcx,QWORD PTR [rsp+0x10]
  40f7bf:	cmp    DWORD PTR [rsp+0x4],0x0
  40f7c4:	je     40f7fd <main@@Base+0x872d>
  40f7c6:	movabs rdx,0x8000000000000000
  40f7d0:	cmp    rcx,rdx
  40f7d3:	jbe    40f81e <main@@Base+0x874e>
  40f7d5:	mov    rdi,r14
  40f7d8:	mov    rsi,rax
  40f7db:	mov    rdx,r15
  40f7de:	mov    ecx,0x8
  40f7e3:	jmp    40f810 <main@@Base+0x8740>
  40f7e5:	xor    ecx,ecx
  40f7e7:	mov    rax,r15
  40f7ea:	cmp    rbx,rax
  40f7ed:	jne    40f85c <main@@Base+0x878c>
  40f7ef:	jmp    40f82b <main@@Base+0x875b>
  40f7f1:	xor    ecx,ecx
  40f7f3:	mov    rax,rbx
  40f7f6:	cmp    rbx,rax
  40f7f9:	jne    40f85c <main@@Base+0x878c>
  40f7fb:	jmp    40f82b <main@@Base+0x875b>
  40f7fd:	test   rcx,rcx
  40f800:	jns    40f821 <main@@Base+0x8751>
  40f802:	mov    rdi,r14
  40f805:	mov    rsi,rax
  40f808:	mov    rdx,r15
  40f80b:	mov    ecx,0x7
  40f810:	call   424090 <flatcc_json_parser_set_error@@Base>
  40f815:	xor    ecx,ecx
  40f817:	cmp    rbx,rax
  40f81a:	jne    40f85c <main@@Base+0x878c>
  40f81c:	jmp    40f82b <main@@Base+0x875b>
  40f81e:	neg    rcx
  40f821:	mov    QWORD PTR [rsp+0x20],rcx
  40f826:	cmp    rbx,rax
  40f829:	jne    40f85c <main@@Base+0x878c>
  40f82b:	mov    rdi,r14
  40f82e:	mov    rsi,rbx
  40f831:	mov    rdx,r15
  40f834:	lea    rcx,[rip+0x33b25]        # 443360 <__data_start@@Base+0x2b0>
  40f83b:	lea    r8,[rsp+0x20]
  40f840:	call   414d70 <main@@Base+0xdca0>
  40f845:	cmp    rax,rbx
  40f848:	je     410d13 <main@@Base+0x9c43>
  40f84e:	cmp    rax,r15
  40f851:	je     410d13 <main@@Base+0x9c43>
  40f857:	mov    rcx,QWORD PTR [rsp+0x20]
  40f85c:	mov    QWORD PTR [rbp+0x0],rcx
  40f860:	mov    rcx,r15
  40f863:	sub    rcx,rax
  40f866:	cmp    rcx,0x2
  40f86a:	jl     40f886 <main@@Base+0x87b6>
  40f86c:	cmp    BYTE PTR [rax],0x20
  40f86f:	jg     40f894 <main@@Base+0x87c4>
  40f871:	jne    40f886 <main@@Base+0x87b6>
  40f873:	cmp    BYTE PTR [rax+0x1],0x20
  40f877:	jle    40f886 <main@@Base+0x87b6>
  40f879:	inc    rax
  40f87c:	cmp    rax,r15
  40f87f:	jne    40f89d <main@@Base+0x87cd>
  40f881:	jmp    4108c4 <main@@Base+0x97f4>
  40f886:	mov    rdi,r14
  40f889:	mov    rsi,rax
  40f88c:	mov    rdx,r15
  40f88f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f894:	cmp    rax,r15
  40f897:	je     4108c4 <main@@Base+0x97f4>
  40f89d:	movzx  ecx,BYTE PTR [rax]
  40f8a0:	cmp    cl,0x2c
  40f8a3:	jne    410959 <main@@Base+0x9889>
  40f8a9:	lea    rbx,[rax+0x1]
  40f8ad:	mov    rcx,r15
  40f8b0:	sub    rcx,rbx
  40f8b3:	cmp    rcx,0x2
  40f8b7:	jl     40f8cc <main@@Base+0x87fc>
  40f8b9:	cmp    BYTE PTR [rbx],0x20
  40f8bc:	jg     40f8dd <main@@Base+0x880d>
  40f8be:	jne    40f8cc <main@@Base+0x87fc>
  40f8c0:	cmp    BYTE PTR [rax+0x2],0x20
  40f8c4:	jle    40f8cc <main@@Base+0x87fc>
  40f8c6:	add    rax,0x2
  40f8ca:	jmp    40f8da <main@@Base+0x880a>
  40f8cc:	mov    rdi,r14
  40f8cf:	mov    rsi,rbx
  40f8d2:	mov    rdx,r15
  40f8d5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f8da:	mov    rbx,rax
  40f8dd:	cmp    rbx,r15
  40f8e0:	je     4109d8 <main@@Base+0x9908>
  40f8e6:	cmp    BYTE PTR [rbx],0x5d
  40f8e9:	je     410a4f <main@@Base+0x997f>
  40f8ef:	mov    QWORD PTR [rsp+0x20],0x0
  40f8f8:	mov    rdi,QWORD PTR [r14]
  40f8fb:	mov    esi,0x1
  40f900:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40f905:	mov    rbp,rax
  40f908:	test   rax,rax
  40f90b:	jne    40f77e <main@@Base+0x86ae>
  40f911:	jmp    407c81 <main@@Base+0xbb1>
  40f916:	mov    r13,rax
  40f919:	mov    QWORD PTR [rsp+0x10],0x0
  40f922:	mov    rdi,QWORD PTR [r14]
  40f925:	mov    esi,0x1
  40f92a:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40f92f:	test   rax,rax
  40f932:	je     410d1b <main@@Base+0x9c4b>
  40f938:	mov    rbp,rax
  40f93b:	mov    rdi,r14
  40f93e:	mov    rsi,r13
  40f941:	mov    rdx,r15
  40f944:	lea    rcx,[rsp+0x10]
  40f949:	call   425390 <flatcc_json_parser_double@@Base>
  40f94e:	mov    rbx,rax
  40f951:	cmp    r13,rax
  40f954:	jne    40f985 <main@@Base+0x88b5>
  40f956:	mov    rdi,r14
  40f959:	mov    rsi,r13
  40f95c:	mov    rdx,r15
  40f95f:	lea    rcx,[rip+0x339da]        # 443340 <__data_start@@Base+0x290>
  40f966:	lea    r8,[rsp+0x10]
  40f96b:	call   4152e0 <main@@Base+0xe210>
  40f970:	mov    rbx,rax
  40f973:	cmp    rax,r13
  40f976:	je     407c81 <main@@Base+0xbb1>
  40f97c:	cmp    rbx,r15
  40f97f:	je     407c81 <main@@Base+0xbb1>
  40f985:	mov    rax,QWORD PTR [rsp+0x10]
  40f98a:	mov    QWORD PTR [rbp+0x0],rax
  40f98e:	mov    rax,r15
  40f991:	sub    rax,rbx
  40f994:	cmp    rax,0x2
  40f998:	jl     40f9b4 <main@@Base+0x88e4>
  40f99a:	cmp    BYTE PTR [rbx],0x20
  40f99d:	jg     40f9c5 <main@@Base+0x88f5>
  40f99f:	jne    40f9b4 <main@@Base+0x88e4>
  40f9a1:	cmp    BYTE PTR [rbx+0x1],0x20
  40f9a5:	jle    40f9b4 <main@@Base+0x88e4>
  40f9a7:	inc    rbx
  40f9aa:	cmp    rbx,r15
  40f9ad:	jne    40f9ce <main@@Base+0x88fe>
  40f9af:	jmp    4109eb <main@@Base+0x991b>
  40f9b4:	mov    rdi,r14
  40f9b7:	mov    rsi,rbx
  40f9ba:	mov    rdx,r15
  40f9bd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40f9c2:	mov    rbx,rax
  40f9c5:	cmp    rbx,r15
  40f9c8:	je     4109eb <main@@Base+0x991b>
  40f9ce:	movzx  eax,BYTE PTR [rbx]
  40f9d1:	cmp    al,0x2c
  40f9d3:	jne    410a90 <main@@Base+0x99c0>
  40f9d9:	lea    r13,[rbx+0x1]
  40f9dd:	mov    rax,r15
  40f9e0:	sub    rax,r13
  40f9e3:	cmp    rax,0x2
  40f9e7:	jl     40fa09 <main@@Base+0x8939>
  40f9e9:	cmp    BYTE PTR [r13+0x0],0x20
  40f9ee:	jg     40fa1a <main@@Base+0x894a>
  40f9f0:	jne    40fa09 <main@@Base+0x8939>
  40f9f2:	cmp    BYTE PTR [rbx+0x2],0x20
  40f9f6:	jle    40fa09 <main@@Base+0x8939>
  40f9f8:	add    rbx,0x2
  40f9fc:	mov    r13,rbx
  40f9ff:	cmp    r13,r15
  40fa02:	jne    40fa23 <main@@Base+0x8953>
  40fa04:	jmp    410ad1 <main@@Base+0x9a01>
  40fa09:	mov    rdi,r14
  40fa0c:	mov    rsi,r13
  40fa0f:	mov    rdx,r15
  40fa12:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40fa17:	mov    r13,rax
  40fa1a:	cmp    r13,r15
  40fa1d:	je     410ad1 <main@@Base+0x9a01>
  40fa23:	cmp    BYTE PTR [r13+0x0],0x5d
  40fa28:	je     410adc <main@@Base+0x9a0c>
  40fa2e:	mov    QWORD PTR [rsp+0x10],0x0
  40fa37:	mov    rdi,QWORD PTR [r14]
  40fa3a:	mov    esi,0x1
  40fa3f:	call   41e900 <flatcc_builder_extend_vector@@Base>
  40fa44:	mov    rbp,rax
  40fa47:	mov    rbx,r13
  40fa4a:	test   rax,rax
  40fa4d:	jne    40f93b <main@@Base+0x886b>
  40fa53:	jmp    407c81 <main@@Base+0xbb1>
  40fa58:	mov    rbp,r15
  40fa5b:	jmp    40cc74 <main@@Base+0x5ba4>
  40fa60:	mov    rbp,r15
  40fa63:	jmp    40cdcb <main@@Base+0x5cfb>
  40fa68:	cmp    al,0x5d
  40fa6a:	jne    410893 <main@@Base+0x97c3>
  40fa70:	lea    rbp,[rbx+0x1]
  40fa74:	mov    rax,r15
  40fa77:	sub    rax,rbp
  40fa7a:	cmp    rax,0x2
  40fa7e:	jl     40fa9e <main@@Base+0x89ce>
  40fa80:	cmp    BYTE PTR [rbp+0x0],0x20
  40fa84:	jg     40cc74 <main@@Base+0x5ba4>
  40fa8a:	jne    40fa9e <main@@Base+0x89ce>
  40fa8c:	cmp    BYTE PTR [rbx+0x2],0x20
  40fa90:	jle    40fa9e <main@@Base+0x89ce>
  40fa92:	add    rbx,0x2
  40fa96:	mov    rbp,rbx
  40fa99:	jmp    40cc74 <main@@Base+0x5ba4>
  40fa9e:	mov    rdi,r14
  40faa1:	mov    rsi,rbp
  40faa4:	mov    rdx,r15
  40faa7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40faac:	jmp    40cc71 <main@@Base+0x5ba1>
  40fab1:	cmp    al,0x5d
  40fab3:	jne    4108a6 <main@@Base+0x97d6>
  40fab9:	lea    rbp,[rbx+0x1]
  40fabd:	mov    rax,r15
  40fac0:	sub    rax,rbp
  40fac3:	cmp    rax,0x2
  40fac7:	jl     40fae7 <main@@Base+0x8a17>
  40fac9:	cmp    BYTE PTR [rbp+0x0],0x20
  40facd:	jg     40cdcb <main@@Base+0x5cfb>
  40fad3:	jne    40fae7 <main@@Base+0x8a17>
  40fad5:	cmp    BYTE PTR [rbx+0x2],0x20
  40fad9:	jle    40fae7 <main@@Base+0x8a17>
  40fadb:	add    rbx,0x2
  40fadf:	mov    rbp,rbx
  40fae2:	jmp    40cdcb <main@@Base+0x5cfb>
  40fae7:	mov    rdi,r14
  40faea:	mov    rsi,rbp
  40faed:	mov    rdx,r15
  40faf0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40faf5:	jmp    40cdc8 <main@@Base+0x5cf8>
  40fafa:	mov    rdi,r14
  40fafd:	mov    rsi,r15
  40fb00:	jmp    410899 <main@@Base+0x97c9>
  40fb05:	mov    rdi,r14
  40fb08:	mov    rsi,r15
  40fb0b:	jmp    4108ac <main@@Base+0x97dc>
  40fb10:	mov    rbp,r15
  40fb13:	jmp    40d18a <main@@Base+0x60ba>
  40fb18:	cmp    cl,0x5d
  40fb1b:	je     40dad9 <main@@Base+0x6a09>
  40fb21:	mov    rdi,r14
  40fb24:	mov    rsi,rax
  40fb27:	jmp    40fb2f <main@@Base+0x8a5f>
  40fb29:	mov    rdi,r14
  40fb2c:	mov    rsi,r15
  40fb2f:	mov    rdx,r15
  40fb32:	mov    ecx,0x9
  40fb37:	jmp    40d182 <main@@Base+0x60b2>
  40fb3c:	mov    rsi,rax
  40fb3f:	mov    r12,r15
  40fb42:	cmp    rsi,r15
  40fb45:	je     40fb85 <main@@Base+0x8ab5>
  40fb47:	movzx  eax,BYTE PTR [rsi]
  40fb4a:	cmp    al,0x2e
  40fb4c:	je     40fb62 <main@@Base+0x8a92>
  40fb4e:	cmp    al,0x22
  40fb50:	jne    40fb77 <main@@Base+0x8aa7>
  40fb52:	inc    rsi
  40fb55:	mov    rax,QWORD PTR [rsp+0x8]
  40fb5a:	mov    DWORD PTR [rax],0x0
  40fb60:	jmp    40fb82 <main@@Base+0x8ab2>
  40fb62:	mov    rdi,r14
  40fb65:	mov    rdx,r15
  40fb68:	mov    ecx,0x5
  40fb6d:	call   424090 <flatcc_json_parser_set_error@@Base>
  40fb72:	mov    r12,rax
  40fb75:	jmp    40fb85 <main@@Base+0x8ab5>
  40fb77:	mov    rax,QWORD PTR [rsp+0x8]
  40fb7c:	mov    DWORD PTR [rax],0x1
  40fb82:	mov    r12,rsi
  40fb85:	mov    rcx,r15
  40fb88:	sub    rcx,r12
  40fb8b:	cmp    rcx,0x8
  40fb8f:	jb     40fb9c <main@@Base+0x8acc>
  40fb91:	movbe  rax,QWORD PTR [r12]
  40fb97:	jmp    40fc21 <main@@Base+0x8b51>
  40fb9c:	lea    rax,[rcx-0x1]
  40fba0:	cmp    rax,0x6
  40fba4:	ja     410222 <main@@Base+0x9152>
  40fbaa:	lea    rdx,[rip+0x24597]        # 434148 <_IO_stdin_used@@Base+0x148>
  40fbb1:	mov    rsi,rdx
  40fbb4:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40fbb8:	add    rdx,rsi
  40fbbb:	xor    r8d,r8d
  40fbbe:	xor    eax,eax
  40fbc0:	xor    esi,esi
  40fbc2:	xor    edi,edi
  40fbc4:	xor    ebp,ebp
  40fbc6:	xor    ebx,ebx
  40fbc8:	jmp    rdx
  40fbca:	movsx  r8,BYTE PTR [r12+0x6]
  40fbd0:	shl    r8,0x8
  40fbd4:	movsx  rax,BYTE PTR [r12+0x5]
  40fbda:	shl    rax,0x10
  40fbde:	or     rax,r8
  40fbe1:	movsx  rsi,BYTE PTR [r12+0x4]
  40fbe7:	shl    rsi,0x18
  40fbeb:	or     rsi,rax
  40fbee:	movsx  rdi,BYTE PTR [r12+0x3]
  40fbf4:	shl    rdi,0x20
  40fbf8:	or     rdi,rsi
  40fbfb:	movsx  rbp,BYTE PTR [r12+0x2]
  40fc01:	shl    rbp,0x28
  40fc05:	or     rbp,rdi
  40fc08:	movsx  rbx,BYTE PTR [r12+0x1]
  40fc0e:	shl    rbx,0x30
  40fc12:	or     rbx,rbp
  40fc15:	movzx  eax,BYTE PTR [r12]
  40fc1a:	shl    rax,0x38
  40fc1e:	or     rax,rbx
  40fc21:	movabs rdx,0x6964000000000000
  40fc2b:	cmp    rax,rdx
  40fc2e:	jae    40fc8c <main@@Base+0x8bbc>
  40fc30:	shr    rax,0x18
  40fc34:	movabs rdx,0x636f756e74
  40fc3e:	cmp    rax,rdx
  40fc41:	jne    410222 <main@@Base+0x9152>
  40fc47:	mov    rbp,r12
  40fc4a:	cmp    rcx,0x6
  40fc4e:	jl     40ff70 <main@@Base+0x8ea0>
  40fc54:	mov    rax,QWORD PTR [rsp+0x8]
  40fc59:	cmp    DWORD PTR [rax],0x0
  40fc5c:	movzx  eax,BYTE PTR [r12+0x5]
  40fc62:	je     40fd57 <main@@Base+0x8c87>
  40fc68:	cmp    al,0x21
  40fc6a:	jl     40fc77 <main@@Base+0x8ba7>
  40fc6c:	mov    rbp,r12
  40fc6f:	cmp    al,0x3a
  40fc71:	jne    40ff70 <main@@Base+0x8ea0>
  40fc77:	lea    rsi,[r12+0x5]
  40fc7c:	mov    rax,QWORD PTR [rsp+0x8]
  40fc81:	mov    DWORD PTR [rax],0x0
  40fc87:	jmp    40fd67 <main@@Base+0x8c97>
  40fc8c:	mov    rdx,rax
  40fc8f:	movabs rsi,0xffffff0000000000
  40fc99:	and    rdx,rsi
  40fc9c:	movabs rsi,0x76616c0000000000
  40fca6:	cmp    rdx,rsi
  40fca9:	jne    40fcf0 <main@@Base+0x8c20>
  40fcab:	mov    rbp,r12
  40fcae:	cmp    rcx,0x4
  40fcb2:	jl     410097 <main@@Base+0x8fc7>
  40fcb8:	mov    rax,QWORD PTR [rsp+0x8]
  40fcbd:	cmp    DWORD PTR [rax],0x0
  40fcc0:	movzx  eax,BYTE PTR [r12+0x3]
  40fcc6:	je     40fd8d <main@@Base+0x8cbd>
  40fccc:	cmp    al,0x21
  40fcce:	jl     40fcdb <main@@Base+0x8c0b>
  40fcd0:	mov    rbp,r12
  40fcd3:	cmp    al,0x3a
  40fcd5:	jne    410097 <main@@Base+0x8fc7>
  40fcdb:	lea    rsi,[r12+0x3]
  40fce0:	mov    rax,QWORD PTR [rsp+0x8]
  40fce5:	mov    DWORD PTR [rax],0x0
  40fceb:	jmp    40fd9d <main@@Base+0x8ccd>
  40fcf0:	movabs rdx,0xffff000000000000
  40fcfa:	and    rax,rdx
  40fcfd:	movabs rdx,0x6964000000000000
  40fd07:	cmp    rax,rdx
  40fd0a:	jne    410222 <main@@Base+0x9152>
  40fd10:	mov    rax,r12
  40fd13:	cmp    rcx,0x3
  40fd17:	jl     4101e1 <main@@Base+0x9111>
  40fd1d:	mov    rax,QWORD PTR [rsp+0x8]
  40fd22:	cmp    DWORD PTR [rax],0x0
  40fd25:	movzx  ecx,BYTE PTR [r12+0x2]
  40fd2b:	je     40feb3 <main@@Base+0x8de3>
  40fd31:	cmp    cl,0x21
  40fd34:	jl     40fd42 <main@@Base+0x8c72>
  40fd36:	mov    rax,r12
  40fd39:	cmp    cl,0x3a
  40fd3c:	jne    4101e1 <main@@Base+0x9111>
  40fd42:	lea    rsi,[r12+0x2]
  40fd47:	mov    rax,QWORD PTR [rsp+0x8]
  40fd4c:	mov    DWORD PTR [rax],0x0
  40fd52:	jmp    40fec4 <main@@Base+0x8df4>
  40fd57:	mov    rbp,r12
  40fd5a:	cmp    al,0x22
  40fd5c:	jne    40ff70 <main@@Base+0x8ea0>
  40fd62:	lea    rsi,[r12+0x6]
  40fd67:	mov    rax,r15
  40fd6a:	sub    rax,rsi
  40fd6d:	cmp    rax,0x2
  40fd71:	jl     40fdcb <main@@Base+0x8cfb>
  40fd73:	cmp    BYTE PTR [rsi],0x20
  40fd76:	jg     40fdd9 <main@@Base+0x8d09>
  40fd78:	jne    40fdcb <main@@Base+0x8cfb>
  40fd7a:	cmp    BYTE PTR [rsi+0x1],0x20
  40fd7e:	jle    40fdcb <main@@Base+0x8cfb>
  40fd80:	inc    rsi
  40fd83:	cmp    rsi,r15
  40fd86:	jne    40fde2 <main@@Base+0x8d12>
  40fd88:	jmp    40fe89 <main@@Base+0x8db9>
  40fd8d:	mov    rbp,r12
  40fd90:	cmp    al,0x22
  40fd92:	jne    410097 <main@@Base+0x8fc7>
  40fd98:	lea    rsi,[r12+0x4]
  40fd9d:	mov    rax,r15
  40fda0:	sub    rax,rsi
  40fda3:	cmp    rax,0x2
  40fda7:	jl     40fe2e <main@@Base+0x8d5e>
  40fdad:	cmp    BYTE PTR [rsi],0x20
  40fdb0:	jg     40fe3c <main@@Base+0x8d6c>
  40fdb6:	jne    40fe2e <main@@Base+0x8d5e>
  40fdb8:	cmp    BYTE PTR [rsi+0x1],0x20
  40fdbc:	jle    40fe2e <main@@Base+0x8d5e>
  40fdbe:	inc    rsi
  40fdc1:	cmp    rsi,r15
  40fdc4:	jne    40fe41 <main@@Base+0x8d71>
  40fdc6:	jmp    40fe9e <main@@Base+0x8dce>
  40fdcb:	mov    rdi,r14
  40fdce:	mov    rdx,r15
  40fdd1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40fdd6:	mov    rsi,rax
  40fdd9:	cmp    rsi,r15
  40fddc:	je     40fe89 <main@@Base+0x8db9>
  40fde2:	cmp    BYTE PTR [rsi],0x3a
  40fde5:	jne    40fe89 <main@@Base+0x8db9>
  40fdeb:	lea    rbp,[rsi+0x1]
  40fdef:	mov    rax,r15
  40fdf2:	sub    rax,rbp
  40fdf5:	cmp    rax,0x2
  40fdf9:	jl     40ff5f <main@@Base+0x8e8f>
  40fdff:	cmp    BYTE PTR [rbp+0x0],0x20
  40fe03:	jg     40ff70 <main@@Base+0x8ea0>
  40fe09:	jne    40ff5f <main@@Base+0x8e8f>
  40fe0f:	cmp    BYTE PTR [rsi+0x2],0x20
  40fe13:	jle    40ff5f <main@@Base+0x8e8f>
  40fe19:	add    rsi,0x2
  40fe1d:	mov    rbp,rsi
  40fe20:	cmp    r12,rbp
  40fe23:	jne    40ff79 <main@@Base+0x8ea9>
  40fe29:	jmp    410222 <main@@Base+0x9152>
  40fe2e:	mov    rdi,r14
  40fe31:	mov    rdx,r15
  40fe34:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40fe39:	mov    rsi,rax
  40fe3c:	cmp    rsi,r15
  40fe3f:	je     40fe9e <main@@Base+0x8dce>
  40fe41:	cmp    BYTE PTR [rsi],0x3a
  40fe44:	jne    40fe9e <main@@Base+0x8dce>
  40fe46:	lea    rbp,[rsi+0x1]
  40fe4a:	mov    rax,r15
  40fe4d:	sub    rax,rbp
  40fe50:	cmp    rax,0x2
  40fe54:	jl     410086 <main@@Base+0x8fb6>
  40fe5a:	cmp    BYTE PTR [rbp+0x0],0x20
  40fe5e:	jg     410097 <main@@Base+0x8fc7>
  40fe64:	jne    410086 <main@@Base+0x8fb6>
  40fe6a:	cmp    BYTE PTR [rsi+0x2],0x20
  40fe6e:	jle    410086 <main@@Base+0x8fb6>
  40fe74:	add    rsi,0x2
  40fe78:	mov    rbp,rsi
  40fe7b:	cmp    r12,rbp
  40fe7e:	jne    4100a0 <main@@Base+0x8fd0>
  40fe84:	jmp    410222 <main@@Base+0x9152>
  40fe89:	mov    rdi,r14
  40fe8c:	mov    rdx,r15
  40fe8f:	mov    ecx,0x4
  40fe94:	call   424090 <flatcc_json_parser_set_error@@Base>
  40fe99:	jmp    40ff6d <main@@Base+0x8e9d>
  40fe9e:	mov    rdi,r14
  40fea1:	mov    rdx,r15
  40fea4:	mov    ecx,0x4
  40fea9:	call   424090 <flatcc_json_parser_set_error@@Base>
  40feae:	jmp    410094 <main@@Base+0x8fc4>
  40feb3:	mov    rax,r12
  40feb6:	cmp    cl,0x22
  40feb9:	jne    4101e1 <main@@Base+0x9111>
  40febf:	lea    rsi,[r12+0x3]
  40fec4:	mov    rax,r15
  40fec7:	sub    rax,rsi
  40feca:	cmp    rax,0x2
  40fece:	jl     40fee7 <main@@Base+0x8e17>
  40fed0:	cmp    BYTE PTR [rsi],0x20
  40fed3:	jg     40fef5 <main@@Base+0x8e25>
  40fed5:	jne    40fee7 <main@@Base+0x8e17>
  40fed7:	cmp    BYTE PTR [rsi+0x1],0x20
  40fedb:	jle    40fee7 <main@@Base+0x8e17>
  40fedd:	inc    rsi
  40fee0:	cmp    rsi,r15
  40fee3:	jne    40fefa <main@@Base+0x8e2a>
  40fee5:	jmp    40ff41 <main@@Base+0x8e71>
  40fee7:	mov    rdi,r14
  40feea:	mov    rdx,r15
  40feed:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40fef2:	mov    rsi,rax
  40fef5:	cmp    rsi,r15
  40fef8:	je     40ff41 <main@@Base+0x8e71>
  40fefa:	cmp    BYTE PTR [rsi],0x3a
  40fefd:	jne    40ff41 <main@@Base+0x8e71>
  40feff:	lea    rax,[rsi+0x1]
  40ff03:	mov    rcx,r15
  40ff06:	sub    rcx,rax
  40ff09:	cmp    rcx,0x2
  40ff0d:	jl     4101d3 <main@@Base+0x9103>
  40ff13:	cmp    BYTE PTR [rax],0x20
  40ff16:	jg     4101e1 <main@@Base+0x9111>
  40ff1c:	jne    4101d3 <main@@Base+0x9103>
  40ff22:	cmp    BYTE PTR [rsi+0x2],0x20
  40ff26:	jle    4101d3 <main@@Base+0x9103>
  40ff2c:	add    rsi,0x2
  40ff30:	mov    rax,rsi
  40ff33:	cmp    r12,rax
  40ff36:	jne    4101e6 <main@@Base+0x9116>
  40ff3c:	jmp    410222 <main@@Base+0x9152>
  40ff41:	mov    rdi,r14
  40ff44:	mov    rdx,r15
  40ff47:	mov    ecx,0x4
  40ff4c:	call   424090 <flatcc_json_parser_set_error@@Base>
  40ff51:	cmp    r12,rax
  40ff54:	jne    4101e6 <main@@Base+0x9116>
  40ff5a:	jmp    410222 <main@@Base+0x9152>
  40ff5f:	mov    rdi,r14
  40ff62:	mov    rsi,rbp
  40ff65:	mov    rdx,r15
  40ff68:	call   424110 <flatcc_json_parser_space_ext@@Base>
  40ff6d:	mov    rbp,rax
  40ff70:	cmp    r12,rbp
  40ff73:	je     410222 <main@@Base+0x9152>
  40ff79:	mov    QWORD PTR [rsp+0x10],0x0
  40ff82:	mov    DWORD PTR [rsp+0x20],0x0
  40ff8a:	mov    WORD PTR [rsp+0x4],0x0
  40ff91:	cmp    rbp,r15
  40ff94:	je     40ffcd <main@@Base+0x8efd>
  40ff96:	mov    rdi,r14
  40ff99:	mov    rsi,rbp
  40ff9c:	mov    rdx,r15
  40ff9f:	lea    rcx,[rsp+0x20]
  40ffa4:	lea    r8,[rsp+0x10]
  40ffa9:	call   425c50 <flatcc_json_parser_integer@@Base>
  40ffae:	cmp    rax,rbp
  40ffb1:	je     40ffda <main@@Base+0x8f0a>
  40ffb3:	mov    rbx,rax
  40ffb6:	cmp    DWORD PTR [rsp+0x20],0x0
  40ffbb:	je     40ffe7 <main@@Base+0x8f17>
  40ffbd:	mov    rdi,r14
  40ffc0:	mov    rsi,rbx
  40ffc3:	mov    rdx,r15
  40ffc6:	mov    ecx,0x8
  40ffcb:	jmp    410007 <main@@Base+0x8f37>
  40ffcd:	xor    r12d,r12d
  40ffd0:	mov    rbx,r15
  40ffd3:	cmp    rbp,rbx
  40ffd6:	jne    41004c <main@@Base+0x8f7c>
  40ffd8:	jmp    410017 <main@@Base+0x8f47>
  40ffda:	xor    r12d,r12d
  40ffdd:	mov    rbx,rbp
  40ffe0:	cmp    rbp,rbx
  40ffe3:	jne    41004c <main@@Base+0x8f7c>
  40ffe5:	jmp    410017 <main@@Base+0x8f47>
  40ffe7:	mov    r12,QWORD PTR [rsp+0x10]
  40ffec:	cmp    r12,0x10000
  40fff3:	jb     4101bf <main@@Base+0x90ef>
  40fff9:	mov    rdi,r14
  40fffc:	mov    rsi,rbx
  40ffff:	mov    rdx,r15
  410002:	mov    ecx,0x7
  410007:	call   424090 <flatcc_json_parser_set_error@@Base>
  41000c:	mov    rbx,rax
  41000f:	xor    r12d,r12d
  410012:	cmp    rbp,rbx
  410015:	jne    41004c <main@@Base+0x8f7c>
  410017:	mov    rdi,r14
  41001a:	mov    rsi,rbp
  41001d:	mov    rdx,r15
  410020:	lea    rcx,[rip+0x33759]        # 443780 <__data_start@@Base+0x6d0>
  410027:	lea    r8,[rsp+0x4]
  41002c:	call   41c4c0 <main@@Base+0x153f0>
  410031:	mov    rbx,rax
  410034:	cmp    rax,rbp
  410037:	je     40d5d9 <main@@Base+0x6509>
  41003d:	cmp    rbx,r15
  410040:	je     40d5d9 <main@@Base+0x6509>
  410046:	movzx  r12d,WORD PTR [rsp+0x4]
  41004c:	test   r12w,r12w
  410050:	jne    41005d <main@@Base+0x8f8d>
  410052:	test   BYTE PTR [r14+0x10],0x2
  410057:	je     410233 <main@@Base+0x9163>
  41005d:	mov    rdi,QWORD PTR [r14]
  410060:	mov    edx,0x2
  410065:	mov    esi,0x2
  41006a:	mov    ecx,0x2
  41006f:	call   420a40 <flatcc_builder_table_add@@Base>
  410074:	test   rax,rax
  410077:	je     40d5d9 <main@@Base+0x6509>
  41007d:	mov    WORD PTR [rax],r12w
  410081:	jmp    410233 <main@@Base+0x9163>
  410086:	mov    rdi,r14
  410089:	mov    rsi,rbp
  41008c:	mov    rdx,r15
  41008f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410094:	mov    rbp,rax
  410097:	cmp    r12,rbp
  41009a:	je     410222 <main@@Base+0x9152>
  4100a0:	mov    QWORD PTR [rsp+0x10],0x0
  4100a9:	mov    DWORD PTR [rsp+0x4],0x0
  4100b1:	mov    QWORD PTR [rsp+0x20],0x0
  4100ba:	cmp    rbp,r15
  4100bd:	je     41010a <main@@Base+0x903a>
  4100bf:	mov    rdi,r14
  4100c2:	mov    rsi,rbp
  4100c5:	mov    rdx,r15
  4100c8:	lea    rcx,[rsp+0x4]
  4100cd:	lea    r8,[rsp+0x10]
  4100d2:	call   425c50 <flatcc_json_parser_integer@@Base>
  4100d7:	cmp    rax,rbp
  4100da:	je     410117 <main@@Base+0x9047>
  4100dc:	mov    rbx,rax
  4100df:	mov    r12,QWORD PTR [rsp+0x10]
  4100e4:	cmp    DWORD PTR [rsp+0x4],0x0
  4100e9:	je     410124 <main@@Base+0x9054>
  4100eb:	movabs rax,0x8000000000000000
  4100f5:	cmp    r12,rax
  4100f8:	jbe    410149 <main@@Base+0x9079>
  4100fa:	mov    rdi,r14
  4100fd:	mov    rsi,rbx
  410100:	mov    rdx,r15
  410103:	mov    ecx,0x8
  410108:	jmp    410137 <main@@Base+0x9067>
  41010a:	xor    r12d,r12d
  41010d:	mov    rbx,r15
  410110:	cmp    rbp,rbx
  410113:	jne    41018a <main@@Base+0x90ba>
  410115:	jmp    410156 <main@@Base+0x9086>
  410117:	xor    r12d,r12d
  41011a:	mov    rbx,rbp
  41011d:	cmp    rbp,rbx
  410120:	jne    41018a <main@@Base+0x90ba>
  410122:	jmp    410156 <main@@Base+0x9086>
  410124:	test   r12,r12
  410127:	jns    41014c <main@@Base+0x907c>
  410129:	mov    rdi,r14
  41012c:	mov    rsi,rbx
  41012f:	mov    rdx,r15
  410132:	mov    ecx,0x7
  410137:	call   424090 <flatcc_json_parser_set_error@@Base>
  41013c:	mov    rbx,rax
  41013f:	xor    r12d,r12d
  410142:	cmp    rbp,rbx
  410145:	jne    41018a <main@@Base+0x90ba>
  410147:	jmp    410156 <main@@Base+0x9086>
  410149:	neg    r12
  41014c:	mov    QWORD PTR [rsp+0x20],r12
  410151:	cmp    rbp,rbx
  410154:	jne    41018a <main@@Base+0x90ba>
  410156:	mov    rdi,r14
  410159:	mov    rsi,rbp
  41015c:	mov    rdx,r15
  41015f:	lea    rcx,[rip+0x3363a]        # 4437a0 <__data_start@@Base+0x6f0>
  410166:	lea    r8,[rsp+0x20]
  41016b:	call   414d70 <main@@Base+0xdca0>
  410170:	mov    rbx,rax
  410173:	cmp    rax,rbp
  410176:	je     40d5d9 <main@@Base+0x6509>
  41017c:	cmp    rbx,r15
  41017f:	je     40d5d9 <main@@Base+0x6509>
  410185:	mov    r12,QWORD PTR [rsp+0x20]
  41018a:	test   r12,r12
  41018d:	jne    41019a <main@@Base+0x90ca>
  41018f:	test   BYTE PTR [r14+0x10],0x2
  410194:	je     410233 <main@@Base+0x9163>
  41019a:	mov    rdi,QWORD PTR [r14]
  41019d:	mov    edx,0x8
  4101a2:	mov    esi,0x1
  4101a7:	mov    ecx,0x8
  4101ac:	call   420a40 <flatcc_builder_table_add@@Base>
  4101b1:	test   rax,rax
  4101b4:	je     40d5d9 <main@@Base+0x6509>
  4101ba:	mov    QWORD PTR [rax],r12
  4101bd:	jmp    410233 <main@@Base+0x9163>
  4101bf:	mov    WORD PTR [rsp+0x4],r12w
  4101c5:	cmp    rbp,rbx
  4101c8:	jne    41004c <main@@Base+0x8f7c>
  4101ce:	jmp    410017 <main@@Base+0x8f47>
  4101d3:	mov    rdi,r14
  4101d6:	mov    rsi,rax
  4101d9:	mov    rdx,r15
  4101dc:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4101e1:	cmp    r12,rax
  4101e4:	je     410222 <main@@Base+0x9152>
  4101e6:	mov    rdi,r14
  4101e9:	mov    rsi,rax
  4101ec:	mov    rdx,r15
  4101ef:	lea    rcx,[rsp+0x3c]
  4101f4:	call   426120 <flatcc_json_parser_build_string@@Base>
  4101f9:	mov    rbx,rax
  4101fc:	cmp    DWORD PTR [rsp+0x3c],0x0
  410201:	je     40d5d9 <main@@Base+0x6509>
  410207:	mov    rdi,QWORD PTR [r14]
  41020a:	xor    esi,esi
  41020c:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  410211:	test   rax,rax
  410214:	je     40d5d9 <main@@Base+0x6509>
  41021a:	mov    ecx,DWORD PTR [rsp+0x3c]
  41021e:	mov    DWORD PTR [rax],ecx
  410220:	jmp    410233 <main@@Base+0x9163>
  410222:	mov    rdi,r14
  410225:	mov    rsi,r12
  410228:	mov    rdx,r15
  41022b:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  410230:	mov    rbx,rax
  410233:	mov    rax,r15
  410236:	sub    rax,rbx
  410239:	cmp    rax,0x2
  41023d:	jl     410259 <main@@Base+0x9189>
  41023f:	cmp    BYTE PTR [rbx],0x20
  410242:	jg     41026a <main@@Base+0x919a>
  410244:	jne    410259 <main@@Base+0x9189>
  410246:	cmp    BYTE PTR [rbx+0x1],0x20
  41024a:	jle    410259 <main@@Base+0x9189>
  41024c:	inc    rbx
  41024f:	cmp    rbx,r15
  410252:	jne    410273 <main@@Base+0x91a3>
  410254:	jmp    4109b1 <main@@Base+0x98e1>
  410259:	mov    rdi,r14
  41025c:	mov    rsi,rbx
  41025f:	mov    rdx,r15
  410262:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410267:	mov    rbx,rax
  41026a:	cmp    rbx,r15
  41026d:	je     4109b1 <main@@Base+0x98e1>
  410273:	movzx  eax,BYTE PTR [rbx]
  410276:	cmp    al,0x2c
  410278:	jne    4109fe <main@@Base+0x992e>
  41027e:	lea    rsi,[rbx+0x1]
  410282:	mov    rax,r15
  410285:	sub    rax,rsi
  410288:	cmp    rax,0x2
  41028c:	jl     4102ac <main@@Base+0x91dc>
  41028e:	cmp    BYTE PTR [rsi],0x20
  410291:	jg     4102ba <main@@Base+0x91ea>
  410293:	jne    4102ac <main@@Base+0x91dc>
  410295:	cmp    BYTE PTR [rbx+0x2],0x20
  410299:	jle    4102ac <main@@Base+0x91dc>
  41029b:	add    rbx,0x2
  41029f:	mov    rsi,rbx
  4102a2:	cmp    rsi,r15
  4102a5:	jne    4102c3 <main@@Base+0x91f3>
  4102a7:	jmp    410ac6 <main@@Base+0x99f6>
  4102ac:	mov    rdi,r14
  4102af:	mov    rdx,r15
  4102b2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4102b7:	mov    rsi,rax
  4102ba:	cmp    rsi,r15
  4102bd:	je     410ac6 <main@@Base+0x99f6>
  4102c3:	cmp    BYTE PTR [rsi],0x7d
  4102c6:	jne    40fb3f <main@@Base+0x8a6f>
  4102cc:	lea    rbp,[rsi+0x1]
  4102d0:	mov    rax,r15
  4102d3:	sub    rax,rbp
  4102d6:	cmp    rax,0x2
  4102da:	jl     410a3c <main@@Base+0x996c>
  4102e0:	cmp    BYTE PTR [rbp+0x0],0x20
  4102e4:	jg     40d5cb <main@@Base+0x64fb>
  4102ea:	jne    410a3c <main@@Base+0x996c>
  4102f0:	cmp    BYTE PTR [rsi+0x2],0x20
  4102f4:	jle    410a3c <main@@Base+0x996c>
  4102fa:	add    rsi,0x2
  4102fe:	mov    rbp,rsi
  410301:	cmp    DWORD PTR [r14+0x20],0x0
  410306:	jne    40d5d6 <main@@Base+0x6506>
  41030c:	jmp    4109bf <main@@Base+0x98ef>
  410311:	lea    rbp,[rbx+0x1]
  410315:	mov    rax,r15
  410318:	sub    rax,rbp
  41031b:	cmp    rax,0x2
  41031f:	jl     41033f <main@@Base+0x926f>
  410321:	cmp    BYTE PTR [rbp+0x0],0x20
  410325:	jg     40d18a <main@@Base+0x60ba>
  41032b:	jne    41033f <main@@Base+0x926f>
  41032d:	cmp    BYTE PTR [rbx+0x2],0x20
  410331:	jle    41033f <main@@Base+0x926f>
  410333:	add    rbx,0x2
  410337:	mov    rbp,rbx
  41033a:	jmp    40d18a <main@@Base+0x60ba>
  41033f:	mov    rdi,r14
  410342:	mov    rsi,rbp
  410345:	mov    rdx,r15
  410348:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41034d:	jmp    40d187 <main@@Base+0x60b7>
  410352:	jne    410369 <main@@Base+0x9299>
  410354:	cmp    BYTE PTR [r13+0x2],0x20
  410359:	jle    410369 <main@@Base+0x9299>
  41035b:	add    r13,0x2
  41035f:	cmp    r12,r13
  410362:	jne    410380 <main@@Base+0x92b0>
  410364:	jmp    41043a <main@@Base+0x936a>
  410369:	mov    rdi,r14
  41036c:	mov    rdx,r15
  41036f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410374:	mov    r13,rax
  410377:	cmp    r12,r13
  41037a:	je     41043a <main@@Base+0x936a>
  410380:	mov    QWORD PTR [rsp+0x10],0x0
  410389:	mov    DWORD PTR [rsp+0x20],0x0
  410391:	mov    DWORD PTR [rsp+0x4],0x0
  410399:	xor    ebx,ebx
  41039b:	cmp    r13,r15
  41039e:	je     4103df <main@@Base+0x930f>
  4103a0:	mov    rdi,r14
  4103a3:	mov    rsi,r13
  4103a6:	mov    rdx,r15
  4103a9:	lea    rcx,[rsp+0x20]
  4103ae:	lea    r8,[rsp+0x10]
  4103b3:	call   425c50 <flatcc_json_parser_integer@@Base>
  4103b8:	mov    rbp,r13
  4103bb:	cmp    rax,r13
  4103be:	je     4103e7 <main@@Base+0x9317>
  4103c0:	cmp    DWORD PTR [rsp+0x20],0x0
  4103c5:	je     4103f2 <main@@Base+0x9322>
  4103c7:	mov    rdi,r14
  4103ca:	mov    rsi,rax
  4103cd:	mov    rdx,r15
  4103d0:	mov    ecx,0x8
  4103d5:	call   424090 <flatcc_json_parser_set_error@@Base>
  4103da:	jmp    4108e5 <main@@Base+0x9815>
  4103df:	mov    rax,r15
  4103e2:	jmp    4108e8 <main@@Base+0x9818>
  4103e7:	mov    r13,rbp
  4103ea:	mov    rax,rbp
  4103ed:	jmp    4108e8 <main@@Base+0x9818>
  4103f2:	mov    rcx,QWORD PTR [rsp+0x10]
  4103f7:	mov    rdx,rcx
  4103fa:	shr    rdx,0x20
  4103fe:	je     4108df <main@@Base+0x980f>
  410404:	mov    rdi,r14
  410407:	mov    rsi,rax
  41040a:	mov    rdx,r15
  41040d:	mov    ecx,0x7
  410412:	call   424090 <flatcc_json_parser_set_error@@Base>
  410417:	jmp    4108e5 <main@@Base+0x9815>
  41041c:	jne    4104fa <main@@Base+0x942a>
  410422:	cmp    BYTE PTR [r13+0x2],0x20
  410427:	jle    4104fa <main@@Base+0x942a>
  41042d:	add    r13,0x2
  410431:	cmp    r12,r13
  410434:	jne    410511 <main@@Base+0x9441>
  41043a:	mov    rdi,r14
  41043d:	mov    rsi,r12
  410440:	mov    rdx,r15
  410443:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  410448:	mov    rbp,rax
  41044b:	mov    rax,r15
  41044e:	sub    rax,rbp
  410451:	cmp    rax,0x2
  410455:	jl     410480 <main@@Base+0x93b0>
  410457:	cmp    BYTE PTR [rbp+0x0],0x20
  41045b:	jg     410491 <main@@Base+0x93c1>
  41045d:	jne    410480 <main@@Base+0x93b0>
  41045f:	cmp    BYTE PTR [rbp+0x1],0x20
  410463:	jle    410480 <main@@Base+0x93b0>
  410465:	inc    rbp
  410468:	cmp    rbp,r15
  41046b:	jne    41049a <main@@Base+0x93ca>
  41046d:	jmp    410c29 <main@@Base+0x9b59>
  410472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41047c:	nop    DWORD PTR [rax+0x0]
  410480:	mov    rdi,r14
  410483:	mov    rsi,rbp
  410486:	mov    rdx,r15
  410489:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41048e:	mov    rbp,rax
  410491:	cmp    rbp,r15
  410494:	je     410c29 <main@@Base+0x9b59>
  41049a:	mov    al,BYTE PTR [rbp+0x0]
  41049d:	cmp    al,0x2c
  41049f:	jne    410c31 <main@@Base+0x9b61>
  4104a5:	lea    rsi,[rbp+0x1]
  4104a9:	mov    rax,r15
  4104ac:	sub    rax,rsi
  4104af:	cmp    rax,0x2
  4104b3:	jl     4104d0 <main@@Base+0x9400>
  4104b5:	cmp    BYTE PTR [rsi],0x20
  4104b8:	jg     4104de <main@@Base+0x940e>
  4104ba:	jne    4104d0 <main@@Base+0x9400>
  4104bc:	cmp    BYTE PTR [rbp+0x2],0x20
  4104c0:	jle    4104d0 <main@@Base+0x9400>
  4104c2:	mov    rsi,rbp
  4104c5:	add    rsi,0x2
  4104c9:	jmp    4104de <main@@Base+0x940e>
  4104cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4104d0:	mov    rdi,r14
  4104d3:	mov    rdx,r15
  4104d6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4104db:	mov    rsi,rax
  4104de:	cmp    rsi,r15
  4104e1:	mov    rbp,QWORD PTR [rsp+0x30]
  4104e6:	je     410c72 <main@@Base+0x9ba2>
  4104ec:	cmp    BYTE PTR [rsi],0x7d
  4104ef:	jne    407df0 <main@@Base+0xd20>
  4104f5:	jmp    410c85 <main@@Base+0x9bb5>
  4104fa:	mov    rdi,r14
  4104fd:	mov    rdx,r15
  410500:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410505:	mov    r13,rax
  410508:	cmp    r12,r13
  41050b:	je     41043a <main@@Base+0x936a>
  410511:	mov    QWORD PTR [rsp+0x10],0x0
  41051a:	mov    DWORD PTR [rsp+0x4],0x0
  410522:	mov    QWORD PTR [rsp+0x20],0x0
  41052b:	cmp    r13,r15
  41052e:	je     41056e <main@@Base+0x949e>
  410530:	mov    rdi,r14
  410533:	mov    rsi,r13
  410536:	mov    rdx,r15
  410539:	lea    rcx,[rsp+0x4]
  41053e:	lea    r8,[rsp+0x10]
  410543:	call   425c50 <flatcc_json_parser_integer@@Base>
  410548:	mov    rbp,r13
  41054b:	cmp    rax,r13
  41054e:	je     410575 <main@@Base+0x94a5>
  410550:	cmp    DWORD PTR [rsp+0x4],0x0
  410555:	je     41057f <main@@Base+0x94af>
  410557:	mov    rdi,r14
  41055a:	mov    rsi,rax
  41055d:	mov    rdx,r15
  410560:	mov    ecx,0x8
  410565:	call   424090 <flatcc_json_parser_set_error@@Base>
  41056a:	xor    ebx,ebx
  41056c:	jmp    410589 <main@@Base+0x94b9>
  41056e:	xor    ebx,ebx
  410570:	mov    rax,r15
  410573:	jmp    41058c <main@@Base+0x94bc>
  410575:	xor    ebx,ebx
  410577:	mov    r13,rbp
  41057a:	mov    rax,rbp
  41057d:	jmp    41058c <main@@Base+0x94bc>
  41057f:	mov    rbx,QWORD PTR [rsp+0x10]
  410584:	mov    QWORD PTR [rsp+0x20],rbx
  410589:	mov    r13,rbp
  41058c:	mov    rbp,rax
  41058f:	cmp    r13,rax
  410592:	jne    4105c8 <main@@Base+0x94f8>
  410594:	mov    rdi,r14
  410597:	mov    rsi,r13
  41059a:	mov    rdx,r15
  41059d:	lea    rcx,[rip+0x32d5c]        # 443300 <__data_start@@Base+0x250>
  4105a4:	lea    r8,[rsp+0x20]
  4105a9:	call   415130 <main@@Base+0xe060>
  4105ae:	mov    rbp,rax
  4105b1:	cmp    rax,r13
  4105b4:	je     410ce5 <main@@Base+0x9c15>
  4105ba:	cmp    rbp,r15
  4105bd:	je     410ce5 <main@@Base+0x9c15>
  4105c3:	mov    rbx,QWORD PTR [rsp+0x20]
  4105c8:	test   rbx,rbx
  4105cb:	jne    4105d8 <main@@Base+0x9508>
  4105cd:	test   BYTE PTR [r14+0x10],0x2
  4105d2:	je     41044b <main@@Base+0x937b>
  4105d8:	mov    rdi,QWORD PTR [r14]
  4105db:	mov    edx,0x8
  4105e0:	mov    esi,0x17
  4105e5:	mov    ecx,0x8
  4105ea:	call   420a40 <flatcc_builder_table_add@@Base>
  4105ef:	test   rax,rax
  4105f2:	je     410ce5 <main@@Base+0x9c15>
  4105f8:	mov    QWORD PTR [rax],rbx
  4105fb:	jmp    41044b <main@@Base+0x937b>
  410600:	mov    rdi,r14
  410603:	mov    rsi,rcx
  410606:	mov    rdx,r15
  410609:	mov    ecx,0x9
  41060e:	jmp    40cd1f <main@@Base+0x5c4f>
  410613:	mov    rbp,r15
  410616:	cmp    DWORD PTR [r14+0x20],0x0
  41061b:	jne    40d1cc <main@@Base+0x60fc>
  410621:	mov    rdi,QWORD PTR [r14]
  410624:	call   4200d0 <flatcc_builder_end_table@@Base>
  410629:	mov    DWORD PTR [rsp+0x1c],eax
  41062d:	test   eax,eax
  41062f:	jne    40d1f3 <main@@Base+0x6123>
  410635:	jmp    40d1cc <main@@Base+0x60fc>
  41063a:	cmp    al,0x7d
  41063c:	jne    410b1e <main@@Base+0x9a4e>
  410642:	lea    rbp,[rbx+0x1]
  410646:	mov    rax,r15
  410649:	sub    rax,rbp
  41064c:	cmp    rax,0x2
  410650:	jl     410678 <main@@Base+0x95a8>
  410652:	cmp    BYTE PTR [rbp+0x0],0x20
  410656:	jg     40d1c1 <main@@Base+0x60f1>
  41065c:	jne    410678 <main@@Base+0x95a8>
  41065e:	cmp    BYTE PTR [rbx+0x2],0x20
  410662:	jle    410678 <main@@Base+0x95a8>
  410664:	add    rbx,0x2
  410668:	mov    rbp,rbx
  41066b:	cmp    DWORD PTR [r14+0x20],0x0
  410670:	jne    40d1cc <main@@Base+0x60fc>
  410676:	jmp    410621 <main@@Base+0x9551>
  410678:	mov    rdi,r14
  41067b:	mov    rsi,rbp
  41067e:	mov    rdx,r15
  410681:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410686:	jmp    40d1be <main@@Base+0x60ee>
  41068b:	mov    rdi,r14
  41068e:	mov    rsi,r15
  410691:	jmp    410b24 <main@@Base+0x9a54>
  410696:	mov    rbx,rax
  410699:	mov    BYTE PTR [rsp+0x4],0x0
  41069e:	mov    rdi,QWORD PTR [r14]
  4106a1:	mov    esi,0x1
  4106a6:	call   41e900 <flatcc_builder_extend_vector@@Base>
  4106ab:	test   rax,rax
  4106ae:	je     407c81 <main@@Base+0xbb1>
  4106b4:	mov    rbp,rax
  4106b7:	mov    QWORD PTR [rsp+0x10],0x0
  4106c0:	mov    DWORD PTR [rsp+0x20],0x0
  4106c8:	mov    BYTE PTR [rsp+0x4],0x0
  4106cd:	cmp    rbx,r15
  4106d0:	je     410706 <main@@Base+0x9636>
  4106d2:	mov    rdi,r14
  4106d5:	mov    rsi,rbx
  4106d8:	mov    rdx,r15
  4106db:	lea    rcx,[rsp+0x20]
  4106e0:	lea    r8,[rsp+0x10]
  4106e5:	call   425c50 <flatcc_json_parser_integer@@Base>
  4106ea:	cmp    rax,rbx
  4106ed:	je     410712 <main@@Base+0x9642>
  4106ef:	cmp    DWORD PTR [rsp+0x20],0x0
  4106f4:	je     41071e <main@@Base+0x964e>
  4106f6:	mov    rdi,r14
  4106f9:	mov    rsi,rax
  4106fc:	mov    rdx,r15
  4106ff:	mov    ecx,0x8
  410704:	jmp    41073e <main@@Base+0x966e>
  410706:	xor    ecx,ecx
  410708:	mov    rax,r15
  41070b:	cmp    rbx,rax
  41070e:	jne    41077b <main@@Base+0x96ab>
  410710:	jmp    41074a <main@@Base+0x967a>
  410712:	xor    ecx,ecx
  410714:	mov    rax,rbx
  410717:	cmp    rbx,rax
  41071a:	jne    41077b <main@@Base+0x96ab>
  41071c:	jmp    41074a <main@@Base+0x967a>
  41071e:	mov    rcx,QWORD PTR [rsp+0x10]
  410723:	cmp    rcx,0x100
  41072a:	jb     410830 <main@@Base+0x9760>
  410730:	mov    rdi,r14
  410733:	mov    rsi,rax
  410736:	mov    rdx,r15
  410739:	mov    ecx,0x7
  41073e:	call   424090 <flatcc_json_parser_set_error@@Base>
  410743:	xor    ecx,ecx
  410745:	cmp    rbx,rax
  410748:	jne    41077b <main@@Base+0x96ab>
  41074a:	mov    rdi,r14
  41074d:	mov    rsi,rbx
  410750:	mov    rdx,r15
  410753:	lea    rcx,[rip+0x32bc6]        # 443320 <__data_start@@Base+0x270>
  41075a:	lea    r8,[rsp+0x4]
  41075f:	call   412be0 <main@@Base+0xbb10>
  410764:	cmp    rax,rbx
  410767:	je     410d13 <main@@Base+0x9c43>
  41076d:	cmp    rax,r15
  410770:	je     410d13 <main@@Base+0x9c43>
  410776:	movzx  ecx,BYTE PTR [rsp+0x4]
  41077b:	mov    BYTE PTR [rbp+0x0],cl
  41077e:	mov    rcx,r15
  410781:	sub    rcx,rax
  410784:	cmp    rcx,0x2
  410788:	jl     4107a4 <main@@Base+0x96d4>
  41078a:	cmp    BYTE PTR [rax],0x20
  41078d:	jg     4107b2 <main@@Base+0x96e2>
  41078f:	jne    4107a4 <main@@Base+0x96d4>
  410791:	cmp    BYTE PTR [rax+0x1],0x20
  410795:	jle    4107a4 <main@@Base+0x96d4>
  410797:	inc    rax
  41079a:	cmp    rax,r15
  41079d:	jne    4107bb <main@@Base+0x96eb>
  41079f:	jmp    410b7e <main@@Base+0x9aae>
  4107a4:	mov    rdi,r14
  4107a7:	mov    rsi,rax
  4107aa:	mov    rdx,r15
  4107ad:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4107b2:	cmp    rax,r15
  4107b5:	je     410b7e <main@@Base+0x9aae>
  4107bb:	movzx  ecx,BYTE PTR [rax]
  4107be:	cmp    cl,0x2c
  4107c1:	jne    410b99 <main@@Base+0x9ac9>
  4107c7:	lea    rbx,[rax+0x1]
  4107cb:	mov    rcx,r15
  4107ce:	sub    rcx,rbx
  4107d1:	cmp    rcx,0x2
  4107d5:	jl     4107ea <main@@Base+0x971a>
  4107d7:	cmp    BYTE PTR [rbx],0x20
  4107da:	jg     4107fb <main@@Base+0x972b>
  4107dc:	jne    4107ea <main@@Base+0x971a>
  4107de:	cmp    BYTE PTR [rax+0x2],0x20
  4107e2:	jle    4107ea <main@@Base+0x971a>
  4107e4:	add    rax,0x2
  4107e8:	jmp    4107f8 <main@@Base+0x9728>
  4107ea:	mov    rdi,r14
  4107ed:	mov    rsi,rbx
  4107f0:	mov    rdx,r15
  4107f3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4107f8:	mov    rbx,rax
  4107fb:	cmp    rbx,r15
  4107fe:	je     410bbd <main@@Base+0x9aed>
  410804:	cmp    BYTE PTR [rbx],0x5d
  410807:	je     410bd0 <main@@Base+0x9b00>
  41080d:	mov    BYTE PTR [rsp+0x4],0x0
  410812:	mov    rdi,QWORD PTR [r14]
  410815:	mov    esi,0x1
  41081a:	call   41e900 <flatcc_builder_extend_vector@@Base>
  41081f:	mov    rbp,rax
  410822:	test   rax,rax
  410825:	jne    4106b7 <main@@Base+0x95e7>
  41082b:	jmp    407c81 <main@@Base+0xbb1>
  410830:	mov    BYTE PTR [rsp+0x4],cl
  410834:	cmp    rbx,rax
  410837:	jne    41077b <main@@Base+0x96ab>
  41083d:	jmp    41074a <main@@Base+0x967a>
  410842:	mov    rbp,r15
  410845:	jmp    40da95 <main@@Base+0x69c5>
  41084a:	cmp    al,0x5d
  41084c:	jne    410b31 <main@@Base+0x9a61>
  410852:	lea    rbp,[rbx+0x1]
  410856:	mov    rax,r15
  410859:	sub    rax,rbp
  41085c:	cmp    rax,0x2
  410860:	jl     410880 <main@@Base+0x97b0>
  410862:	cmp    BYTE PTR [rbp+0x0],0x20
  410866:	jg     40da95 <main@@Base+0x69c5>
  41086c:	jne    410880 <main@@Base+0x97b0>
  41086e:	cmp    BYTE PTR [rbx+0x2],0x20
  410872:	jle    410880 <main@@Base+0x97b0>
  410874:	add    rbx,0x2
  410878:	mov    rbp,rbx
  41087b:	jmp    40da95 <main@@Base+0x69c5>
  410880:	mov    rdi,r14
  410883:	mov    rsi,rbp
  410886:	mov    rdx,r15
  410889:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41088e:	jmp    40da92 <main@@Base+0x69c2>
  410893:	mov    rdi,r14
  410896:	mov    rsi,rbx
  410899:	mov    rdx,r15
  41089c:	mov    ecx,0x9
  4108a1:	jmp    40cc6c <main@@Base+0x5b9c>
  4108a6:	mov    rdi,r14
  4108a9:	mov    rsi,rbx
  4108ac:	mov    rdx,r15
  4108af:	mov    ecx,0x9
  4108b4:	jmp    40cdc3 <main@@Base+0x5cf3>
  4108b9:	mov    rdi,r14
  4108bc:	mov    rsi,r15
  4108bf:	jmp    410b37 <main@@Base+0x9a67>
  4108c4:	mov    rbp,r15
  4108c7:	jmp    40dbaa <main@@Base+0x6ada>
  4108cc:	mov    rbp,r15
  4108cf:	cmp    DWORD PTR [r14+0x20],0x0
  4108d4:	jne    40d8aa <main@@Base+0x67da>
  4108da:	jmp    410b65 <main@@Base+0x9a95>
  4108df:	mov    DWORD PTR [rsp+0x4],ecx
  4108e3:	mov    ebx,ecx
  4108e5:	mov    r13,rbp
  4108e8:	mov    rbp,rax
  4108eb:	cmp    r13,rax
  4108ee:	jne    410923 <main@@Base+0x9853>
  4108f0:	mov    rdi,r14
  4108f3:	mov    rsi,r13
  4108f6:	mov    rdx,r15
  4108f9:	lea    rcx,[rip+0x329c0]        # 4432c0 <__data_start@@Base+0x210>
  410900:	lea    r8,[rsp+0x4]
  410905:	call   414f50 <main@@Base+0xde80>
  41090a:	mov    rbp,rax
  41090d:	cmp    rax,r13
  410910:	je     410ce5 <main@@Base+0x9c15>
  410916:	cmp    rbp,r15
  410919:	je     410ce5 <main@@Base+0x9c15>
  41091f:	mov    ebx,DWORD PTR [rsp+0x4]
  410923:	test   ebx,ebx
  410925:	jne    410932 <main@@Base+0x9862>
  410927:	test   BYTE PTR [r14+0x10],0x2
  41092c:	je     41044b <main@@Base+0x937b>
  410932:	mov    rdi,QWORD PTR [r14]
  410935:	mov    edx,0x4
  41093a:	mov    esi,0x15
  41093f:	mov    ecx,0x4
  410944:	call   420a40 <flatcc_builder_table_add@@Base>
  410949:	test   rax,rax
  41094c:	je     410ce5 <main@@Base+0x9c15>
  410952:	mov    DWORD PTR [rax],ebx
  410954:	jmp    41044b <main@@Base+0x937b>
  410959:	cmp    cl,0x5d
  41095c:	je     40e84b <main@@Base+0x777b>
  410962:	mov    rdi,r14
  410965:	mov    rsi,rax
  410968:	jmp    4109de <main@@Base+0x990e>
  41096a:	cmp    cl,0x7d
  41096d:	jne    410b44 <main@@Base+0x9a74>
  410973:	lea    rbp,[rax+0x1]
  410977:	mov    rcx,r15
  41097a:	sub    rcx,rbp
  41097d:	cmp    rcx,0x2
  410981:	jl     41099e <main@@Base+0x98ce>
  410983:	cmp    BYTE PTR [rbp+0x0],0x20
  410987:	jg     40d89f <main@@Base+0x67cf>
  41098d:	jne    41099e <main@@Base+0x98ce>
  41098f:	cmp    BYTE PTR [rax+0x2],0x20
  410993:	jle    41099e <main@@Base+0x98ce>
  410995:	add    rax,0x2
  410999:	jmp    410b57 <main@@Base+0x9a87>
  41099e:	mov    rdi,r14
  4109a1:	mov    rsi,rbp
  4109a4:	mov    rdx,r15
  4109a7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4109ac:	jmp    410b57 <main@@Base+0x9a87>
  4109b1:	mov    rbp,r15
  4109b4:	cmp    DWORD PTR [r14+0x20],0x0
  4109b9:	jne    40d5d6 <main@@Base+0x6506>
  4109bf:	mov    rdi,QWORD PTR [r14]
  4109c2:	call   4200d0 <flatcc_builder_end_table@@Base>
  4109c7:	mov    DWORD PTR [rsp+0x1c],eax
  4109cb:	test   eax,eax
  4109cd:	jne    40d5fd <main@@Base+0x652d>
  4109d3:	jmp    40d5d6 <main@@Base+0x6506>
  4109d8:	mov    rdi,r14
  4109db:	mov    rsi,r15
  4109de:	mov    rdx,r15
  4109e1:	mov    ecx,0x9
  4109e6:	jmp    40dba2 <main@@Base+0x6ad2>
  4109eb:	mov    rbp,r15
  4109ee:	jmp    40dd27 <main@@Base+0x6c57>
  4109f3:	mov    rdi,r14
  4109f6:	mov    rsi,r15
  4109f9:	jmp    410b4a <main@@Base+0x9a7a>
  4109fe:	cmp    al,0x7d
  410a00:	jne    410b86 <main@@Base+0x9ab6>
  410a06:	lea    rbp,[rbx+0x1]
  410a0a:	mov    rax,r15
  410a0d:	sub    rax,rbp
  410a10:	cmp    rax,0x2
  410a14:	jl     410a3c <main@@Base+0x996c>
  410a16:	cmp    BYTE PTR [rbp+0x0],0x20
  410a1a:	jg     40d5cb <main@@Base+0x64fb>
  410a20:	jne    410a3c <main@@Base+0x996c>
  410a22:	cmp    BYTE PTR [rbx+0x2],0x20
  410a26:	jle    410a3c <main@@Base+0x996c>
  410a28:	add    rbx,0x2
  410a2c:	mov    rbp,rbx
  410a2f:	cmp    DWORD PTR [r14+0x20],0x0
  410a34:	jne    40d5d6 <main@@Base+0x6506>
  410a3a:	jmp    4109bf <main@@Base+0x98ef>
  410a3c:	mov    rdi,r14
  410a3f:	mov    rsi,rbp
  410a42:	mov    rdx,r15
  410a45:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410a4a:	jmp    40d5c8 <main@@Base+0x64f8>
  410a4f:	lea    rbp,[rbx+0x1]
  410a53:	mov    rax,r15
  410a56:	sub    rax,rbp
  410a59:	cmp    rax,0x2
  410a5d:	jl     410a7d <main@@Base+0x99ad>
  410a5f:	cmp    BYTE PTR [rbp+0x0],0x20
  410a63:	jg     40dbaa <main@@Base+0x6ada>
  410a69:	jne    410a7d <main@@Base+0x99ad>
  410a6b:	cmp    BYTE PTR [rbx+0x2],0x20
  410a6f:	jle    410a7d <main@@Base+0x99ad>
  410a71:	add    rbx,0x2
  410a75:	mov    rbp,rbx
  410a78:	jmp    40dbaa <main@@Base+0x6ada>
  410a7d:	mov    rdi,r14
  410a80:	mov    rsi,rbp
  410a83:	mov    rdx,r15
  410a86:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410a8b:	jmp    40dba7 <main@@Base+0x6ad7>
  410a90:	cmp    al,0x5d
  410a92:	jne    410baa <main@@Base+0x9ada>
  410a98:	lea    rbp,[rbx+0x1]
  410a9c:	mov    rcx,r15
  410a9f:	sub    rcx,rbp
  410aa2:	cmp    rcx,0x2
  410aa6:	jl     410b0b <main@@Base+0x9a3b>
  410aa8:	cmp    BYTE PTR [rbp+0x0],0x20
  410aac:	jg     40dd27 <main@@Base+0x6c57>
  410ab2:	jne    410b0b <main@@Base+0x9a3b>
  410ab4:	cmp    BYTE PTR [rbx+0x2],0x20
  410ab8:	jle    410b0b <main@@Base+0x9a3b>
  410aba:	add    rbx,0x2
  410abe:	mov    rbp,rbx
  410ac1:	jmp    40dd27 <main@@Base+0x6c57>
  410ac6:	mov    rdi,r14
  410ac9:	mov    rsi,r15
  410acc:	jmp    410b8c <main@@Base+0x9abc>
  410ad1:	mov    rdi,r14
  410ad4:	mov    rsi,r15
  410ad7:	jmp    410bb0 <main@@Base+0x9ae0>
  410adc:	lea    rbp,[r13+0x1]
  410ae0:	mov    rcx,r15
  410ae3:	sub    rcx,rbp
  410ae6:	cmp    rcx,0x2
  410aea:	jl     410b0b <main@@Base+0x9a3b>
  410aec:	cmp    BYTE PTR [rbp+0x0],0x20
  410af0:	jg     40dd27 <main@@Base+0x6c57>
  410af6:	jne    410b0b <main@@Base+0x9a3b>
  410af8:	cmp    BYTE PTR [r13+0x2],0x20
  410afd:	jle    410b0b <main@@Base+0x9a3b>
  410aff:	add    r13,0x2
  410b03:	mov    rbp,r13
  410b06:	jmp    40dd27 <main@@Base+0x6c57>
  410b0b:	mov    rdi,r14
  410b0e:	mov    rsi,rbp
  410b11:	mov    rdx,r15
  410b14:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410b19:	jmp    40dd24 <main@@Base+0x6c54>
  410b1e:	mov    rdi,r14
  410b21:	mov    rsi,rbx
  410b24:	mov    rdx,r15
  410b27:	mov    ecx,0xa
  410b2c:	jmp    40d1b9 <main@@Base+0x60e9>
  410b31:	mov    rdi,r14
  410b34:	mov    rsi,rbx
  410b37:	mov    rdx,r15
  410b3a:	mov    ecx,0x9
  410b3f:	jmp    40da8d <main@@Base+0x69bd>
  410b44:	mov    rdi,r14
  410b47:	mov    rsi,rax
  410b4a:	mov    rdx,r15
  410b4d:	mov    ecx,0xa
  410b52:	call   424090 <flatcc_json_parser_set_error@@Base>
  410b57:	mov    rbp,rax
  410b5a:	cmp    DWORD PTR [r14+0x20],0x0
  410b5f:	jne    40d8aa <main@@Base+0x67da>
  410b65:	mov    rdi,QWORD PTR [r14]
  410b68:	call   4200d0 <flatcc_builder_end_table@@Base>
  410b6d:	mov    DWORD PTR [rsp+0x1c],eax
  410b71:	test   eax,eax
  410b73:	jne    40d8ce <main@@Base+0x67fe>
  410b79:	jmp    40d8aa <main@@Base+0x67da>
  410b7e:	mov    rbp,r15
  410b81:	jmp    410c08 <main@@Base+0x9b38>
  410b86:	mov    rdi,r14
  410b89:	mov    rsi,rbx
  410b8c:	mov    rdx,r15
  410b8f:	mov    ecx,0xa
  410b94:	jmp    40d5c3 <main@@Base+0x64f3>
  410b99:	cmp    cl,0x5d
  410b9c:	je     40f663 <main@@Base+0x8593>
  410ba2:	mov    rdi,r14
  410ba5:	mov    rsi,rax
  410ba8:	jmp    410bc3 <main@@Base+0x9af3>
  410baa:	mov    rdi,r14
  410bad:	mov    rsi,rbx
  410bb0:	mov    rdx,r15
  410bb3:	mov    ecx,0x9
  410bb8:	jmp    40dd1f <main@@Base+0x6c4f>
  410bbd:	mov    rdi,r14
  410bc0:	mov    rsi,r15
  410bc3:	mov    rdx,r15
  410bc6:	mov    ecx,0x9
  410bcb:	jmp    40ed96 <main@@Base+0x7cc6>
  410bd0:	lea    rbp,[rbx+0x1]
  410bd4:	mov    rax,r15
  410bd7:	sub    rax,rbp
  410bda:	cmp    rax,0x2
  410bde:	jl     410bf7 <main@@Base+0x9b27>
  410be0:	cmp    BYTE PTR [rbp+0x0],0x20
  410be4:	jg     410c08 <main@@Base+0x9b38>
  410be6:	jne    410bf7 <main@@Base+0x9b27>
  410be8:	cmp    BYTE PTR [rbx+0x2],0x20
  410bec:	jle    410bf7 <main@@Base+0x9b27>
  410bee:	add    rbx,0x2
  410bf2:	mov    rbp,rbx
  410bf5:	jmp    410c08 <main@@Base+0x9b38>
  410bf7:	mov    rdi,r14
  410bfa:	mov    rsi,rbp
  410bfd:	mov    rdx,r15
  410c00:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410c05:	mov    rbp,rax
  410c08:	mov    rdi,QWORD PTR [r14]
  410c0b:	call   4203e0 <flatcc_builder_end_vector@@Base>
  410c10:	mov    DWORD PTR [rsp+0x1c],eax
  410c14:	test   eax,eax
  410c16:	je     410ce5 <main@@Base+0x9c15>
  410c1c:	mov    rdi,QWORD PTR [r14]
  410c1f:	mov    esi,0xd
  410c24:	jmp    40af91 <main@@Base+0x3ec1>
  410c29:	mov    rbx,r15
  410c2c:	jmp    410cfe <main@@Base+0x9c2e>
  410c31:	cmp    al,0x7d
  410c33:	jne    410cd0 <main@@Base+0x9c00>
  410c39:	lea    rbx,[rbp+0x1]
  410c3d:	mov    rax,r15
  410c40:	sub    rax,rbx
  410c43:	cmp    rax,0x2
  410c47:	jl     410ced <main@@Base+0x9c1d>
  410c4d:	cmp    BYTE PTR [rbx],0x20
  410c50:	jg     410cfe <main@@Base+0x9c2e>
  410c56:	jne    410ced <main@@Base+0x9c1d>
  410c5c:	cmp    BYTE PTR [rbp+0x2],0x20
  410c60:	jle    410ced <main@@Base+0x9c1d>
  410c66:	mov    rbx,rbp
  410c69:	add    rbx,0x2
  410c6d:	jmp    410cfe <main@@Base+0x9c2e>
  410c72:	mov    rdi,r14
  410c75:	mov    rsi,r15
  410c78:	mov    rdx,r15
  410c7b:	mov    ecx,0xa
  410c80:	jmp    407d04 <main@@Base+0xc34>
  410c85:	lea    rbx,[rsi+0x1]
  410c89:	mov    rax,r15
  410c8c:	sub    rax,rbx
  410c8f:	cmp    rax,0x2
  410c93:	jl     410cbd <main@@Base+0x9bed>
  410c95:	cmp    BYTE PTR [rbx],0x20
  410c98:	jg     407d0c <main@@Base+0xc3c>
  410c9e:	jne    410cbd <main@@Base+0x9bed>
  410ca0:	cmp    BYTE PTR [rsi+0x2],0x20
  410ca4:	jle    410cbd <main@@Base+0x9bed>
  410ca6:	add    rsi,0x2
  410caa:	mov    rbx,rsi
  410cad:	cmp    DWORD PTR [r14+0x20],0x0
  410cb2:	jne    407c81 <main@@Base+0xbb1>
  410cb8:	jmp    407d17 <main@@Base+0xc47>
  410cbd:	mov    rdi,r14
  410cc0:	mov    rsi,rbx
  410cc3:	mov    rdx,r15
  410cc6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410ccb:	jmp    407d09 <main@@Base+0xc39>
  410cd0:	mov    rdi,r14
  410cd3:	mov    rsi,rbp
  410cd6:	mov    rdx,r15
  410cd9:	mov    ecx,0xa
  410cde:	call   424090 <flatcc_json_parser_set_error@@Base>
  410ce3:	jmp    410cfb <main@@Base+0x9c2b>
  410ce5:	mov    rbx,rbp
  410ce8:	jmp    407c81 <main@@Base+0xbb1>
  410ced:	mov    rdi,r14
  410cf0:	mov    rsi,rbx
  410cf3:	mov    rdx,r15
  410cf6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  410cfb:	mov    rbx,rax
  410cfe:	mov    rbp,QWORD PTR [rsp+0x30]
  410d03:	cmp    DWORD PTR [r14+0x20],0x0
  410d08:	jne    407c81 <main@@Base+0xbb1>
  410d0e:	jmp    407d17 <main@@Base+0xc47>
  410d13:	mov    rbx,rax
  410d16:	jmp    407c81 <main@@Base+0xbb1>
  410d1b:	mov    rbx,r13
  410d1e:	jmp    407c81 <main@@Base+0xbb1>
  410d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d2d:	nop    DWORD PTR [rax]
  410d30:	push   r15
  410d32:	push   r14
  410d34:	push   r12
  410d36:	push   rbx
  410d37:	push   rax
  410d38:	mov    r14,rsi
  410d3b:	mov    rbx,rdi
  410d3e:	lea    rcx,[rip+0x275be]        # 438303 <_IO_stdin_used@@Base+0x4303>
  410d45:	lea    r9,[rip+0xb954]        # 41c6a0 <main@@Base+0x155d0>
  410d4c:	xor    edx,edx
  410d4e:	mov    r8d,0x3
  410d54:	call   432440 <flatcc_json_printer_struct_field@@Base>
  410d59:	lea    rcx,[rip+0x275a7]        # 438307 <_IO_stdin_used@@Base+0x4307>
  410d60:	mov    rdi,rbx
  410d63:	mov    rsi,r14
  410d66:	mov    edx,0x1
  410d6b:	mov    r8d,0x4
  410d71:	mov    r9d,0x96
  410d77:	call   429ed0 <flatcc_json_printer_int16_field@@Base>
  410d7c:	lea    rcx,[rip+0x27589]        # 43830c <_IO_stdin_used@@Base+0x430c>
  410d83:	mov    rdi,rbx
  410d86:	mov    rsi,r14
  410d89:	mov    edx,0x2
  410d8e:	mov    r8d,0x2
  410d94:	mov    r9d,0x64
  410d9a:	call   429ed0 <flatcc_json_printer_int16_field@@Base>
  410d9f:	lea    rcx,[rip+0x27569]        # 43830f <_IO_stdin_used@@Base+0x430f>
  410da6:	mov    rdi,rbx
  410da9:	mov    rsi,r14
  410dac:	mov    edx,0x3
  410db1:	mov    r8d,0x4
  410db7:	call   4295f0 <flatcc_json_printer_string_field@@Base>
  410dbc:	lea    rcx,[rip+0x27551]        # 438314 <_IO_stdin_used@@Base+0x4314>
  410dc3:	mov    rdi,rbx
  410dc6:	mov    rsi,r14
  410dc9:	mov    edx,0x5
  410dce:	mov    r8d,0x9
  410dd4:	call   42bf80 <flatcc_json_printer_uint8_vector_field@@Base>
  410dd9:	lea    rax,[rip+0xb9b0]        # 41c790 <main@@Base+0x156c0>
  410de0:	mov    QWORD PTR [rsp],rax
  410de4:	lea    rcx,[rip+0x27533]        # 43831e <_IO_stdin_used@@Base+0x431e>
  410deb:	mov    rdi,rbx
  410dee:	mov    rsi,r14
  410df1:	mov    edx,0x6
  410df6:	mov    r8d,0x5
  410dfc:	mov    r9d,0x8
  410e02:	call   42a800 <flatcc_json_printer_int8_enum_field@@Base>
  410e07:	lea    rax,[rip+0xbae2]        # 41c8f0 <main@@Base+0x15820>
  410e0e:	mov    QWORD PTR [rsp],rax
  410e12:	lea    rcx,[rip+0x2767d]        # 438496 <_IO_stdin_used@@Base+0x4496>
  410e19:	lea    r9,[rip+0xba50]        # 41c870 <main@@Base+0x157a0>
  410e20:	mov    rdi,rbx
  410e23:	mov    rsi,r14
  410e26:	mov    edx,0x8
  410e2b:	mov    r8d,0x4
  410e31:	call   431ce0 <flatcc_json_printer_union_field@@Base>
  410e36:	lea    r12,[rip+0xbad3]        # 41c910 <main@@Base+0x15840>
  410e3d:	mov    QWORD PTR [rsp],r12
  410e41:	lea    rcx,[rip+0x274dc]        # 438324 <_IO_stdin_used@@Base+0x4324>
  410e48:	mov    r9d,0x4
  410e4e:	mov    rdi,rbx
  410e51:	mov    rsi,r14
  410e54:	mov    edx,0x9
  410e59:	mov    r8d,0x5
  410e5f:	call   430c10 <flatcc_json_printer_struct_vector_field@@Base>
  410e64:	lea    rcx,[rip+0x274bf]        # 43832a <_IO_stdin_used@@Base+0x432a>
  410e6b:	mov    rdi,rbx
  410e6e:	mov    rsi,r14
  410e71:	mov    edx,0xa
  410e76:	mov    r8d,0x11
  410e7c:	call   4310d0 <flatcc_json_printer_string_vector_field@@Base>
  410e81:	lea    rcx,[rip+0x274b4]        # 43833c <_IO_stdin_used@@Base+0x433c>
  410e88:	lea    r15,[rip+0xfffffffffffffea1]        # 410d30 <main@@Base+0x9c60>
  410e8f:	mov    rdi,rbx
  410e92:	mov    rsi,r14
  410e95:	mov    edx,0xb
  410e9a:	mov    r8d,0x11
  410ea0:	mov    r9,r15
  410ea3:	call   4313f0 <flatcc_json_printer_table_vector_field@@Base>
  410ea8:	lea    rcx,[rip+0x2749f]        # 43834e <_IO_stdin_used@@Base+0x434e>
  410eaf:	mov    rdi,rbx
  410eb2:	mov    rsi,r14
  410eb5:	mov    edx,0xc
  410eba:	mov    r8d,0x5
  410ec0:	mov    r9,r15
  410ec3:	call   431b50 <flatcc_json_printer_table_field@@Base>
  410ec8:	mov    QWORD PTR [rsp],r15
  410ecc:	lea    rcx,[rip+0x27481]        # 438354 <_IO_stdin_used@@Base+0x4354>
  410ed3:	mov    rdi,rbx
  410ed6:	mov    rsi,r14
  410ed9:	mov    edx,0xd
  410ede:	mov    r8d,0x14
  410ee4:	xor    r9d,r9d
  410ee7:	call   432b60 <flatcc_json_printer_table_as_nested_root@@Base>
  410eec:	lea    rcx,[rip+0x27476]        # 438369 <_IO_stdin_used@@Base+0x4369>
  410ef3:	lea    r9,[rip+0xba66]        # 41c960 <main@@Base+0x15890>
  410efa:	mov    rdi,rbx
  410efd:	mov    rsi,r14
  410f00:	mov    edx,0xe
  410f05:	mov    r8d,0x9
  410f0b:	call   431b50 <flatcc_json_printer_table_field@@Base>
  410f10:	lea    rcx,[rip+0x2745c]        # 438373 <_IO_stdin_used@@Base+0x4373>
  410f17:	mov    rdi,rbx
  410f1a:	mov    rsi,r14
  410f1d:	mov    edx,0xf
  410f22:	mov    r8d,0x8
  410f28:	mov    r9d,0x1
  410f2e:	call   42a1d0 <flatcc_json_printer_bool_field@@Base>
  410f33:	lea    rcx,[rip+0x27442]        # 43837c <_IO_stdin_used@@Base+0x437c>
  410f3a:	mov    rdi,rbx
  410f3d:	mov    rsi,r14
  410f40:	mov    edx,0x10
  410f45:	mov    r8d,0x10
  410f4b:	xor    r9d,r9d
  410f4e:	call   42a090 <flatcc_json_printer_int32_field@@Base>
  410f53:	lea    rcx,[rip+0x27433]        # 43838d <_IO_stdin_used@@Base+0x438d>
  410f5a:	mov    rdi,rbx
  410f5d:	mov    rsi,r14
  410f60:	mov    edx,0x11
  410f65:	mov    r8d,0x10
  410f6b:	xor    r9d,r9d
  410f6e:	call   429c90 <flatcc_json_printer_uint32_field@@Base>
  410f73:	lea    rcx,[rip+0x27424]        # 43839e <_IO_stdin_used@@Base+0x439e>
  410f7a:	mov    rdi,rbx
  410f7d:	mov    rsi,r14
  410f80:	mov    edx,0x12
  410f85:	mov    r8d,0x10
  410f8b:	xor    r9d,r9d
  410f8e:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  410f93:	lea    rcx,[rip+0x27415]        # 4383af <_IO_stdin_used@@Base+0x43af>
  410f9a:	mov    rdi,rbx
  410f9d:	mov    rsi,r14
  410fa0:	mov    edx,0x13
  410fa5:	mov    r8d,0x10
  410fab:	xor    r9d,r9d
  410fae:	call   429d20 <flatcc_json_printer_uint64_field@@Base>
  410fb3:	lea    rcx,[rip+0x27406]        # 4383c0 <_IO_stdin_used@@Base+0x43c0>
  410fba:	mov    rdi,rbx
  410fbd:	mov    rsi,r14
  410fc0:	mov    edx,0x14
  410fc5:	mov    r8d,0x11
  410fcb:	xor    r9d,r9d
  410fce:	call   42a090 <flatcc_json_printer_int32_field@@Base>
  410fd3:	lea    rcx,[rip+0x273f8]        # 4383d2 <_IO_stdin_used@@Base+0x43d2>
  410fda:	mov    rdi,rbx
  410fdd:	mov    rsi,r14
  410fe0:	mov    edx,0x15
  410fe5:	mov    r8d,0x11
  410feb:	xor    r9d,r9d
  410fee:	call   429c90 <flatcc_json_printer_uint32_field@@Base>
  410ff3:	lea    rcx,[rip+0x273ea]        # 4383e4 <_IO_stdin_used@@Base+0x43e4>
  410ffa:	mov    rdi,rbx
  410ffd:	mov    rsi,r14
  411000:	mov    edx,0x16
  411005:	mov    r8d,0x11
  41100b:	xor    r9d,r9d
  41100e:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  411013:	lea    rcx,[rip+0x273dc]        # 4383f6 <_IO_stdin_used@@Base+0x43f6>
  41101a:	mov    rdi,rbx
  41101d:	mov    rsi,r14
  411020:	mov    edx,0x17
  411025:	mov    r8d,0x11
  41102b:	xor    r9d,r9d
  41102e:	call   429d20 <flatcc_json_printer_uint64_field@@Base>
  411033:	lea    rcx,[rip+0x273ce]        # 438408 <_IO_stdin_used@@Base+0x4408>
  41103a:	mov    rdi,rbx
  41103d:	mov    rsi,r14
  411040:	mov    edx,0x18
  411045:	mov    r8d,0x10
  41104b:	call   42e060 <flatcc_json_printer_bool_vector_field@@Base>
  411050:	lea    rcx,[rip+0x273c2]        # 438419 <_IO_stdin_used@@Base+0x4419>
  411057:	vmovss xmm0,DWORD PTR [rip+0x22fa5]        # 434004 <_IO_stdin_used@@Base+0x4>
  41105f:	mov    rdi,rbx
  411062:	mov    rsi,r14
  411065:	mov    edx,0x19
  41106a:	mov    r8d,0x5
  411070:	call   42a280 <flatcc_json_printer_float_field@@Base>
  411075:	lea    rcx,[rip+0x273a3]        # 43841f <_IO_stdin_used@@Base+0x441f>
  41107c:	vmovss xmm0,DWORD PTR [rip+0x22f84]        # 434008 <_IO_stdin_used@@Base+0x8>
  411084:	mov    rdi,rbx
  411087:	mov    rsi,r14
  41108a:	mov    edx,0x1a
  41108f:	mov    r8d,0x6
  411095:	call   42a280 <flatcc_json_printer_float_field@@Base>
  41109a:	lea    rcx,[rip+0x27385]        # 438426 <_IO_stdin_used@@Base+0x4426>
  4110a1:	vxorps xmm0,xmm0,xmm0
  4110a5:	mov    rdi,rbx
  4110a8:	mov    rsi,r14
  4110ab:	mov    edx,0x1b
  4110b0:	mov    r8d,0x6
  4110b6:	call   42a280 <flatcc_json_printer_float_field@@Base>
  4110bb:	lea    rcx,[rip+0x2736b]        # 43842d <_IO_stdin_used@@Base+0x442d>
  4110c2:	mov    rdi,rbx
  4110c5:	mov    rsi,r14
  4110c8:	mov    edx,0x1c
  4110cd:	mov    r8d,0x12
  4110d3:	call   4310d0 <flatcc_json_printer_string_vector_field@@Base>
  4110d8:	lea    rax,[rip+0xb8f1]        # 41c9d0 <main@@Base+0x15900>
  4110df:	mov    QWORD PTR [rsp],rax
  4110e3:	lea    rcx,[rip+0x27356]        # 438440 <_IO_stdin_used@@Base+0x4440>
  4110ea:	mov    r9d,0x8
  4110f0:	mov    rdi,rbx
  4110f3:	mov    rsi,r14
  4110f6:	mov    edx,0x1d
  4110fb:	mov    r8d,0x17
  411101:	call   430c10 <flatcc_json_printer_struct_vector_field@@Base>
  411106:	lea    rcx,[rip+0x2734b]        # 438458 <_IO_stdin_used@@Base+0x4458>
  41110d:	mov    rdi,rbx
  411110:	mov    rsi,r14
  411113:	mov    edx,0x1e
  411118:	mov    r8d,0x4
  41111e:	call   42bf80 <flatcc_json_printer_uint8_vector_field@@Base>
  411123:	mov    QWORD PTR [rsp],r12
  411127:	lea    rcx,[rip+0x2732f]        # 43845d <_IO_stdin_used@@Base+0x445d>
  41112e:	mov    r9d,0x4
  411134:	mov    rdi,rbx
  411137:	mov    rsi,r14
  41113a:	mov    edx,0x1f
  41113f:	mov    r8d,0x5
  411145:	call   430c10 <flatcc_json_printer_struct_vector_field@@Base>
  41114a:	lea    rcx,[rip+0x27312]        # 438463 <_IO_stdin_used@@Base+0x4463>
  411151:	mov    rdi,rbx
  411154:	mov    rsi,r14
  411157:	mov    edx,0x20
  41115c:	mov    r8d,0xf
  411162:	call   42dcf0 <flatcc_json_printer_int64_vector_field@@Base>
  411167:	lea    rcx,[rip+0x27305]        # 438473 <_IO_stdin_used@@Base+0x4473>
  41116e:	mov    rdi,rbx
  411171:	mov    rsi,r14
  411174:	mov    edx,0x21
  411179:	mov    r8d,0x11
  41117f:	call   42e720 <flatcc_json_printer_double_vector_field@@Base>
  411184:	lea    rcx,[rip+0x272fa]        # 438485 <_IO_stdin_used@@Base+0x4485>
  41118b:	lea    r9,[rip+0xb88e]        # 41ca20 <main@@Base+0x15950>
  411192:	mov    rdi,rbx
  411195:	mov    rsi,r14
  411198:	mov    edx,0x22
  41119d:	mov    r8d,0x15
  4111a3:	call   431b50 <flatcc_json_printer_table_field@@Base>
  4111a8:	lea    rcx,[rip+0x272ec]        # 43849b <_IO_stdin_used@@Base+0x449b>
  4111af:	lea    r9,[rip+0xb87a]        # 41ca30 <main@@Base+0x15960>
  4111b6:	mov    rdi,rbx
  4111b9:	mov    rsi,r14
  4111bc:	mov    edx,0x23
  4111c1:	mov    r8d,0xa
  4111c7:	add    rsp,0x8
  4111cb:	pop    rbx
  4111cc:	pop    r12
  4111ce:	pop    r14
  4111d0:	pop    r15
  4111d2:	jmp    431b50 <flatcc_json_printer_table_field@@Base>
  4111d7:	nop    WORD PTR [rax+rax*1+0x0]
  4111e0:	push   rbx
  4111e1:	mov    rbx,rdi
  4111e4:	mov    edx,0x20
  4111e9:	xor    esi,esi
  4111eb:	mov    ecx,0x10
  4111f0:	call   422620 <flatcc_verify_field@@Base>
  4111f5:	test   eax,eax
  4111f7:	jne    411602 <main@@Base+0xa532>
  4111fd:	mov    edx,0x2
  411202:	mov    rdi,rbx
  411205:	mov    esi,0x2
  41120a:	mov    ecx,0x2
  41120f:	call   422620 <flatcc_verify_field@@Base>
  411214:	test   eax,eax
  411216:	jne    411602 <main@@Base+0xa532>
  41121c:	mov    edx,0x2
  411221:	mov    rdi,rbx
  411224:	mov    esi,0x1
  411229:	mov    ecx,0x2
  41122e:	call   422620 <flatcc_verify_field@@Base>
  411233:	test   eax,eax
  411235:	jne    411602 <main@@Base+0xa532>
  41123b:	mov    rdi,rbx
  41123e:	mov    esi,0x3
  411243:	mov    edx,0x1
  411248:	call   422680 <flatcc_verify_string_field@@Base>
  41124d:	test   eax,eax
  41124f:	jne    411602 <main@@Base+0xa532>
  411255:	mov    edx,0x1
  41125a:	mov    rdi,rbx
  41125d:	mov    esi,0x6
  411262:	mov    ecx,0x1
  411267:	call   422620 <flatcc_verify_field@@Base>
  41126c:	test   eax,eax
  41126e:	jne    411602 <main@@Base+0xa532>
  411274:	mov    ecx,0x1
  411279:	mov    r9d,0xffffffff
  41127f:	mov    rdi,rbx
  411282:	mov    esi,0x5
  411287:	xor    edx,edx
  411289:	mov    r8d,0x1
  41128f:	call   422730 <flatcc_verify_vector_field@@Base>
  411294:	test   eax,eax
  411296:	jne    411602 <main@@Base+0xa532>
  41129c:	lea    rcx,[rip+0xffffffffffffff3d]        # 4111e0 <main@@Base+0xa110>
  4112a3:	mov    rdi,rbx
  4112a6:	mov    esi,0xb
  4112ab:	xor    edx,edx
  4112ad:	call   422aa0 <flatcc_verify_table_vector_field@@Base>
  4112b2:	test   eax,eax
  4112b4:	jne    411602 <main@@Base+0xa532>
  4112ba:	mov    rdi,rbx
  4112bd:	mov    esi,0xa
  4112c2:	xor    edx,edx
  4112c4:	call   422800 <flatcc_verify_string_vector_field@@Base>
  4112c9:	test   eax,eax
  4112cb:	jne    411602 <main@@Base+0xa532>
  4112d1:	mov    rdi,rbx
  4112d4:	mov    esi,0x1c
  4112d9:	xor    edx,edx
  4112db:	call   422800 <flatcc_verify_string_vector_field@@Base>
  4112e0:	test   eax,eax
  4112e2:	jne    411602 <main@@Base+0xa532>
  4112e8:	mov    ecx,0x1
  4112ed:	mov    r9d,0xffffffff
  4112f3:	mov    rdi,rbx
  4112f6:	mov    esi,0x18
  4112fb:	xor    edx,edx
  4112fd:	mov    r8d,0x1
  411303:	call   422730 <flatcc_verify_vector_field@@Base>
  411308:	test   eax,eax
  41130a:	jne    411602 <main@@Base+0xa532>
  411310:	mov    ecx,0x8
  411315:	mov    r9d,0x1fffffff
  41131b:	mov    rdi,rbx
  41131e:	mov    esi,0x1d
  411323:	xor    edx,edx
  411325:	mov    r8d,0x4
  41132b:	call   422730 <flatcc_verify_vector_field@@Base>
  411330:	test   eax,eax
  411332:	jne    411602 <main@@Base+0xa532>
  411338:	lea    rcx,[rip+0xfffffffffffffea1]        # 4111e0 <main@@Base+0xa110>
  41133f:	mov    rdi,rbx
  411342:	mov    esi,0xc
  411347:	xor    edx,edx
  411349:	call   422960 <flatcc_verify_table_field@@Base>
  41134e:	test   eax,eax
  411350:	jne    411602 <main@@Base+0xa532>
  411356:	lea    rcx,[rip+0xbcf3]        # 41d050 <main@@Base+0x15f80>
  41135d:	mov    rdi,rbx
  411360:	mov    esi,0x8
  411365:	xor    edx,edx
  411367:	call   423810 <flatcc_verify_union_field@@Base>
  41136c:	test   eax,eax
  41136e:	jne    411602 <main@@Base+0xa532>
  411374:	mov    ecx,0x4
  411379:	mov    r9d,0x3fffffff
  41137f:	mov    rdi,rbx
  411382:	mov    esi,0x9
  411387:	xor    edx,edx
  411389:	mov    r8d,0x2
  41138f:	call   422730 <flatcc_verify_vector_field@@Base>
  411394:	test   eax,eax
  411396:	jne    411602 <main@@Base+0xa532>
  41139c:	mov    ecx,0x4
  4113a1:	mov    r9d,0x3fffffff
  4113a7:	mov    rdi,rbx
  4113aa:	mov    esi,0x1f
  4113af:	xor    edx,edx
  4113b1:	mov    r8d,0x2
  4113b7:	call   422730 <flatcc_verify_vector_field@@Base>
  4113bc:	test   eax,eax
  4113be:	jne    411602 <main@@Base+0xa532>
  4113c4:	lea    r9,[rip+0xfffffffffffffe15]        # 4111e0 <main@@Base+0xa110>
  4113cb:	mov    rdi,rbx
  4113ce:	mov    esi,0xd
  4113d3:	xor    edx,edx
  4113d5:	xor    ecx,ecx
  4113d7:	mov    r8d,0x1
  4113dd:	call   423530 <flatcc_verify_table_as_nested_root@@Base>
  4113e2:	test   eax,eax
  4113e4:	jne    411602 <main@@Base+0xa532>
  4113ea:	lea    rcx,[rip+0xbc7f]        # 41d070 <main@@Base+0x15fa0>
  4113f1:	mov    rdi,rbx
  4113f4:	mov    esi,0xe
  4113f9:	xor    edx,edx
  4113fb:	call   422960 <flatcc_verify_table_field@@Base>
  411400:	test   eax,eax
  411402:	jne    411602 <main@@Base+0xa532>
  411408:	mov    edx,0x1
  41140d:	mov    rdi,rbx
  411410:	mov    esi,0xf
  411415:	mov    ecx,0x1
  41141a:	call   422620 <flatcc_verify_field@@Base>
  41141f:	test   eax,eax
  411421:	jne    411602 <main@@Base+0xa532>
  411427:	mov    edx,0x4
  41142c:	mov    rdi,rbx
  41142f:	mov    esi,0x10
  411434:	mov    ecx,0x4
  411439:	call   422620 <flatcc_verify_field@@Base>
  41143e:	test   eax,eax
  411440:	jne    411602 <main@@Base+0xa532>
  411446:	mov    edx,0x4
  41144b:	mov    rdi,rbx
  41144e:	mov    esi,0x11
  411453:	mov    ecx,0x4
  411458:	call   422620 <flatcc_verify_field@@Base>
  41145d:	test   eax,eax
  41145f:	jne    411602 <main@@Base+0xa532>
  411465:	mov    edx,0x8
  41146a:	mov    rdi,rbx
  41146d:	mov    esi,0x12
  411472:	mov    ecx,0x8
  411477:	call   422620 <flatcc_verify_field@@Base>
  41147c:	test   eax,eax
  41147e:	jne    411602 <main@@Base+0xa532>
  411484:	mov    edx,0x8
  411489:	mov    rdi,rbx
  41148c:	mov    esi,0x13
  411491:	mov    ecx,0x8
  411496:	call   422620 <flatcc_verify_field@@Base>
  41149b:	test   eax,eax
  41149d:	jne    411602 <main@@Base+0xa532>
  4114a3:	mov    edx,0x4
  4114a8:	mov    rdi,rbx
  4114ab:	mov    esi,0x14
  4114b0:	mov    ecx,0x4
  4114b5:	call   422620 <flatcc_verify_field@@Base>
  4114ba:	test   eax,eax
  4114bc:	jne    411602 <main@@Base+0xa532>
  4114c2:	mov    edx,0x4
  4114c7:	mov    rdi,rbx
  4114ca:	mov    esi,0x15
  4114cf:	mov    ecx,0x4
  4114d4:	call   422620 <flatcc_verify_field@@Base>
  4114d9:	test   eax,eax
  4114db:	jne    411602 <main@@Base+0xa532>
  4114e1:	mov    edx,0x8
  4114e6:	mov    rdi,rbx
  4114e9:	mov    esi,0x16
  4114ee:	mov    ecx,0x8
  4114f3:	call   422620 <flatcc_verify_field@@Base>
  4114f8:	test   eax,eax
  4114fa:	jne    411602 <main@@Base+0xa532>
  411500:	mov    edx,0x8
  411505:	mov    rdi,rbx
  411508:	mov    esi,0x17
  41150d:	mov    ecx,0x8
  411512:	call   422620 <flatcc_verify_field@@Base>
  411517:	test   eax,eax
  411519:	jne    411602 <main@@Base+0xa532>
  41151f:	mov    edx,0x4
  411524:	mov    rdi,rbx
  411527:	mov    esi,0x19
  41152c:	mov    ecx,0x4
  411531:	call   422620 <flatcc_verify_field@@Base>
  411536:	test   eax,eax
  411538:	jne    411602 <main@@Base+0xa532>
  41153e:	mov    edx,0x4
  411543:	mov    rdi,rbx
  411546:	mov    esi,0x1a
  41154b:	mov    ecx,0x4
  411550:	call   422620 <flatcc_verify_field@@Base>
  411555:	test   eax,eax
  411557:	jne    411602 <main@@Base+0xa532>
  41155d:	mov    edx,0x4
  411562:	mov    rdi,rbx
  411565:	mov    esi,0x1b
  41156a:	mov    ecx,0x4
  41156f:	call   422620 <flatcc_verify_field@@Base>
  411574:	test   eax,eax
  411576:	jne    411602 <main@@Base+0xa532>
  41157c:	mov    ecx,0x1
  411581:	mov    r9d,0xffffffff
  411587:	mov    rdi,rbx
  41158a:	mov    esi,0x1e
  41158f:	xor    edx,edx
  411591:	mov    r8d,0x1
  411597:	call   422730 <flatcc_verify_vector_field@@Base>
  41159c:	test   eax,eax
  41159e:	jne    411602 <main@@Base+0xa532>
  4115a0:	mov    ecx,0x8
  4115a5:	mov    r9d,0x1fffffff
  4115ab:	mov    rdi,rbx
  4115ae:	mov    esi,0x20
  4115b3:	xor    edx,edx
  4115b5:	mov    r8d,0x8
  4115bb:	call   422730 <flatcc_verify_vector_field@@Base>
  4115c0:	test   eax,eax
  4115c2:	jne    411602 <main@@Base+0xa532>
  4115c4:	mov    ecx,0x8
  4115c9:	mov    r9d,0x1fffffff
  4115cf:	mov    rdi,rbx
  4115d2:	mov    esi,0x21
  4115d7:	xor    edx,edx
  4115d9:	mov    r8d,0x8
  4115df:	call   422730 <flatcc_verify_vector_field@@Base>
  4115e4:	test   eax,eax
  4115e6:	jne    411602 <main@@Base+0xa532>
  4115e8:	lea    rcx,[rip+0xbad1]        # 41d0c0 <main@@Base+0x15ff0>
  4115ef:	mov    rdi,rbx
  4115f2:	mov    esi,0x22
  4115f7:	xor    edx,edx
  4115f9:	call   422960 <flatcc_verify_table_field@@Base>
  4115fe:	test   eax,eax
  411600:	je     411604 <main@@Base+0xa534>
  411602:	pop    rbx
  411603:	ret    
  411604:	lea    rcx,[rip+0xbac5]        # 41d0d0 <main@@Base+0x16000>
  41160b:	mov    rdi,rbx
  41160e:	mov    esi,0x23
  411613:	xor    edx,edx
  411615:	pop    rbx
  411616:	jmp    422960 <flatcc_verify_table_field@@Base>
  41161b:	nop    DWORD PTR [rax+rax*1+0x0]
  411620:	push   r15
  411622:	push   r14
  411624:	push   rbx
  411625:	mov    r15,r8
  411628:	mov    r14,rcx
  41162b:	mov    rbx,rsi
  41162e:	mov    rcx,rdx
  411631:	sub    rcx,rsi
  411634:	cmp    rcx,0x8
  411638:	jb     411641 <main@@Base+0xa571>
  41163a:	movbe  rcx,QWORD PTR [rbx]
  41163f:	jmp    4116af <main@@Base+0xa5df>
  411641:	dec    rcx
  411644:	cmp    rcx,0x6
  411648:	ja     411749 <main@@Base+0xa679>
  41164e:	xor    eax,eax
  411650:	lea    rsi,[rip+0x22c5d]        # 4342b4 <_IO_stdin_used@@Base+0x2b4>
  411657:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41165b:	add    rcx,rsi
  41165e:	jmp    rcx
  411660:	movsx  rax,BYTE PTR [rbx+0x6]
  411665:	shl    rax,0x8
  411669:	movsx  rcx,BYTE PTR [rbx+0x5]
  41166e:	shl    rcx,0x10
  411672:	or     rax,rcx
  411675:	movsx  rcx,BYTE PTR [rbx+0x4]
  41167a:	shl    rcx,0x18
  41167e:	or     rax,rcx
  411681:	movsx  rcx,BYTE PTR [rbx+0x3]
  411686:	shl    rcx,0x20
  41168a:	or     rax,rcx
  41168d:	movsx  rcx,BYTE PTR [rbx+0x2]
  411692:	shl    rcx,0x28
  411696:	or     rax,rcx
  411699:	movsx  rcx,BYTE PTR [rbx+0x1]
  41169e:	shl    rcx,0x30
  4116a2:	or     rax,rcx
  4116a5:	movzx  ecx,BYTE PTR [rbx]
  4116a8:	shl    rcx,0x38
  4116ac:	or     rcx,rax
  4116af:	movabs rax,0x477265656e000000
  4116b9:	cmp    rcx,rax
  4116bc:	jae    4116e9 <main@@Base+0xa619>
  4116be:	shr    rcx,0x20
  4116c2:	cmp    rcx,0x426c7565
  4116c9:	jne    411749 <main@@Base+0xa679>
  4116cb:	mov    rsi,rbx
  4116ce:	mov    ecx,0x4
  4116d3:	mov    r8,r9
  4116d6:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4116db:	cmp    rax,rbx
  4116de:	je     411749 <main@@Base+0xa679>
  4116e0:	mov    QWORD PTR [r15],0x8
  4116e7:	jmp    41173f <main@@Base+0xa66f>
  4116e9:	mov    rsi,rcx
  4116ec:	shr    rsi,0x28
  4116f0:	cmp    rsi,0x526564
  4116f7:	jne    411717 <main@@Base+0xa647>
  4116f9:	mov    rsi,rbx
  4116fc:	mov    ecx,0x3
  411701:	mov    r8,r9
  411704:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  411709:	cmp    rax,rbx
  41170c:	je     411749 <main@@Base+0xa679>
  41170e:	mov    QWORD PTR [r15],0x1
  411715:	jmp    41173f <main@@Base+0xa66f>
  411717:	and    rcx,0xffffffffff000000
  41171e:	cmp    rcx,rax
  411721:	jne    411749 <main@@Base+0xa679>
  411723:	mov    rsi,rbx
  411726:	mov    ecx,0x5
  41172b:	mov    r8,r9
  41172e:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  411733:	cmp    rax,rbx
  411736:	je     411749 <main@@Base+0xa679>
  411738:	mov    QWORD PTR [r15],0x2
  41173f:	mov    DWORD PTR [r14],0x0
  411746:	mov    rbx,rax
  411749:	mov    rax,rbx
  41174c:	pop    rbx
  41174d:	pop    r14
  41174f:	pop    r15
  411751:	ret    
  411752:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41175c:	nop    DWORD PTR [rax+0x0]
  411760:	push   r15
  411762:	push   r14
  411764:	push   r12
  411766:	push   rbx
  411767:	push   rax
  411768:	mov    r14,r8
  41176b:	mov    r12,rcx
  41176e:	mov    r10,rdx
  411771:	sub    r10,rsi
  411774:	cmp    r10,0x8
  411778:	jb     411781 <main@@Base+0xa6b1>
  41177a:	movbe  rbx,QWORD PTR [rsi]
  41177f:	jmp    4117f0 <main@@Base+0xa720>
  411781:	lea    rbx,[r10-0x1]
  411785:	cmp    rbx,0x6
  411789:	ja     411b89 <main@@Base+0xaab9>
  41178f:	xor    ecx,ecx
  411791:	lea    r8,[rip+0x22b38]        # 4342d0 <_IO_stdin_used@@Base+0x2d0>
  411798:	movsxd rbx,DWORD PTR [r8+rbx*4]
  41179c:	add    rbx,r8
  41179f:	jmp    rbx
  4117a1:	movsx  rcx,BYTE PTR [rsi+0x6]
  4117a6:	shl    rcx,0x8
  4117aa:	movsx  rbx,BYTE PTR [rsi+0x5]
  4117af:	shl    rbx,0x10
  4117b3:	or     rcx,rbx
  4117b6:	movsx  rbx,BYTE PTR [rsi+0x4]
  4117bb:	shl    rbx,0x18
  4117bf:	or     rcx,rbx
  4117c2:	movsx  rbx,BYTE PTR [rsi+0x3]
  4117c7:	shl    rbx,0x20
  4117cb:	or     rcx,rbx
  4117ce:	movsx  rbx,BYTE PTR [rsi+0x2]
  4117d3:	shl    rbx,0x28
  4117d7:	or     rcx,rbx
  4117da:	movsx  rbx,BYTE PTR [rsi+0x1]
  4117df:	shl    rbx,0x30
  4117e3:	or     rcx,rbx
  4117e6:	movzx  ebx,BYTE PTR [rsi]
  4117e9:	shl    rbx,0x38
  4117ed:	or     rbx,rcx
  4117f0:	movabs rcx,0x6865785f656e756d
  4117fa:	cmp    rbx,rcx
  4117fd:	jae    41186a <main@@Base+0xa79a>
  4117ff:	movabs r8,0x436f6c6f72000000
  411809:	movabs rcx,0xffffff0000000000
  411813:	and    rcx,rbx
  411816:	cmp    rbx,r8
  411819:	jae    4118be <main@@Base+0xa7ee>
  41181f:	cmp    r10,0x4
  411823:	jl     411b89 <main@@Base+0xaab9>
  411829:	movabs rax,0x416e790000000000
  411833:	cmp    rcx,rax
  411836:	jne    411b89 <main@@Base+0xaab9>
  41183c:	lea    rax,[rsi+0x4]
  411840:	cmp    BYTE PTR [rsi+0x3],0x2e
  411844:	cmovne rax,rsi
  411848:	cmp    rax,rsi
  41184b:	je     411b89 <main@@Base+0xaab9>
  411851:	mov    rsi,rax
  411854:	mov    rcx,r12
  411857:	mov    r8,r14
  41185a:	add    rsp,0x8
  41185e:	pop    rbx
  41185f:	pop    r12
  411861:	pop    r14
  411863:	pop    r15
  411865:	jmp    4144e0 <main@@Base+0xd410>
  41186a:	movabs r8,0x696e745f656e756d
  411874:	cmp    rbx,r8
  411877:	jae    411909 <main@@Base+0xa839>
  41187d:	cmp    r10,0x9
  411881:	jl     411b89 <main@@Base+0xaab9>
  411887:	cmp    rbx,rcx
  41188a:	jne    411b89 <main@@Base+0xaab9>
  411890:	lea    rax,[rsi+0x9]
  411894:	cmp    BYTE PTR [rsi+0x8],0x2e
  411898:	cmovne rax,rsi
  41189c:	cmp    rax,rsi
  41189f:	je     411b89 <main@@Base+0xaab9>
  4118a5:	mov    rsi,rax
  4118a8:	mov    rcx,r12
  4118ab:	mov    r8,r14
  4118ae:	add    rsp,0x8
  4118b2:	pop    rbx
  4118b3:	pop    r12
  4118b5:	pop    r14
  4118b7:	pop    r15
  4118b9:	jmp    4156c0 <main@@Base+0xe5f0>
  4118be:	movabs rax,0x466f6f0000000000
  4118c8:	cmp    rcx,rax
  4118cb:	jne    41195d <main@@Base+0xa88d>
  4118d1:	cmp    r10,0x4
  4118d5:	jl     411b89 <main@@Base+0xaab9>
  4118db:	lea    rax,[rsi+0x4]
  4118df:	cmp    BYTE PTR [rsi+0x3],0x2e
  4118e3:	cmovne rax,rsi
  4118e7:	cmp    rax,rsi
  4118ea:	je     411b89 <main@@Base+0xaab9>
  4118f0:	mov    rsi,rax
  4118f3:	mov    rcx,r12
  4118f6:	mov    r8,r14
  4118f9:	add    rsp,0x8
  4118fd:	pop    rbx
  4118fe:	pop    r12
  411900:	pop    r14
  411902:	pop    r15
  411904:	jmp    415480 <main@@Base+0xe3b0>
  411909:	movabs rax,0x6e65675f656e756c
  411913:	cmp    rbx,rax
  411916:	ja     4119a5 <main@@Base+0xa8d5>
  41191c:	cmp    r10,0x9
  411920:	jl     411b89 <main@@Base+0xaab9>
  411926:	cmp    rbx,r8
  411929:	jne    411b89 <main@@Base+0xaab9>
  41192f:	lea    rax,[rsi+0x9]
  411933:	cmp    BYTE PTR [rsi+0x8],0x2e
  411937:	cmovne rax,rsi
  41193b:	cmp    rax,rsi
  41193e:	je     411b89 <main@@Base+0xaab9>
  411944:	mov    rsi,rax
  411947:	mov    rcx,r12
  41194a:	mov    r8,r14
  41194d:	add    rsp,0x8
  411951:	pop    rbx
  411952:	pop    r12
  411954:	pop    r14
  411956:	pop    r15
  411958:	jmp    415820 <main@@Base+0xe750>
  41195d:	cmp    r10,0x6
  411961:	jl     411b89 <main@@Base+0xaab9>
  411967:	and    rbx,0xffffffffff000000
  41196e:	cmp    rbx,r8
  411971:	jne    411b89 <main@@Base+0xaab9>
  411977:	lea    rax,[rsi+0x6]
  41197b:	cmp    BYTE PTR [rsi+0x5],0x2e
  41197f:	cmovne rax,rsi
  411983:	cmp    rax,rsi
  411986:	je     411b89 <main@@Base+0xaab9>
  41198c:	mov    rsi,rax
  41198f:	mov    rcx,r12
  411992:	mov    r8,r14
  411995:	add    rsp,0x8
  411999:	pop    rbx
  41199a:	pop    r12
  41199c:	pop    r14
  41199e:	pop    r15
  4119a0:	jmp    411620 <main@@Base+0xa550>
  4119a5:	movabs rax,0x6e6f74656d707479
  4119af:	cmp    rbx,rax
  4119b2:	je     4119ff <main@@Base+0xa92f>
  4119b4:	movabs rax,0x6e65675f656e756d
  4119be:	cmp    rbx,rax
  4119c1:	jne    411b89 <main@@Base+0xaab9>
  4119c7:	cmp    r10,0x9
  4119cb:	jl     411b89 <main@@Base+0xaab9>
  4119d1:	lea    rax,[rsi+0x9]
  4119d5:	cmp    BYTE PTR [rsi+0x8],0x2e
  4119d9:	cmovne rax,rsi
  4119dd:	cmp    rax,rsi
  4119e0:	je     411b89 <main@@Base+0xaab9>
  4119e6:	mov    rsi,rax
  4119e9:	mov    rcx,r12
  4119ec:	mov    r8,r14
  4119ef:	add    rsp,0x8
  4119f3:	pop    rbx
  4119f4:	pop    r12
  4119f6:	pop    r14
  4119f8:	pop    r15
  4119fa:	jmp    4159c0 <main@@Base+0xe8f0>
  4119ff:	lea    r8,[rsi+0x8]
  411a03:	mov    rcx,rdx
  411a06:	sub    rcx,r8
  411a09:	cmp    rcx,0x8
  411a0d:	jb     411a1f <main@@Base+0xa94f>
  411a0f:	movbe  rbx,QWORD PTR [r8]
  411a14:	cmp    rcx,0x5
  411a18:	jge    411a99 <main@@Base+0xa9c9>
  411a1a:	jmp    411b89 <main@@Base+0xaab9>
  411a1f:	lea    rbx,[rcx-0x1]
  411a23:	cmp    rbx,0x6
  411a27:	ja     411b89 <main@@Base+0xaab9>
  411a2d:	xor    eax,eax
  411a2f:	lea    r10,[rip+0x228b6]        # 4342ec <_IO_stdin_used@@Base+0x2ec>
  411a36:	movsxd rbx,DWORD PTR [r10+rbx*4]
  411a3a:	add    rbx,r10
  411a3d:	jmp    rbx
  411a3f:	movsx  rax,BYTE PTR [rsi+0xe]
  411a44:	shl    rax,0x8
  411a48:	movsx  rbx,BYTE PTR [rsi+0xd]
  411a4d:	shl    rbx,0x10
  411a51:	or     rax,rbx
  411a54:	movsx  rbx,BYTE PTR [rsi+0xc]
  411a59:	shl    rbx,0x18
  411a5d:	or     rax,rbx
  411a60:	movsx  rbx,BYTE PTR [rsi+0xb]
  411a65:	shl    rbx,0x20
  411a69:	or     rax,rbx
  411a6c:	movsx  rbx,BYTE PTR [rsi+0xa]
  411a71:	shl    rbx,0x28
  411a75:	or     rax,rbx
  411a78:	movsx  rbx,BYTE PTR [rsi+0x9]
  411a7d:	shl    rbx,0x30
  411a81:	or     rax,rbx
  411a84:	movzx  ebx,BYTE PTR [r8]
  411a88:	shl    rbx,0x38
  411a8c:	or     rbx,rax
  411a8f:	cmp    rcx,0x5
  411a93:	jl     411b89 <main@@Base+0xaab9>
  411a99:	movabs rax,0xffffffff00000000
  411aa3:	and    rbx,rax
  411aa6:	movabs rax,0x656e756d00000000
  411ab0:	cmp    rbx,rax
  411ab3:	jne    411b89 <main@@Base+0xaab9>
  411ab9:	lea    r15,[rsi+0xd]
  411abd:	cmp    BYTE PTR [rsi+0xc],0x2e
  411ac1:	cmovne r15,r8
  411ac5:	cmp    r15,r8
  411ac8:	je     411b89 <main@@Base+0xaab9>
  411ace:	mov    rcx,rdx
  411ad1:	sub    rcx,r15
  411ad4:	cmp    rcx,0x8
  411ad8:	jb     411ae1 <main@@Base+0xaa11>
  411ada:	movbe  rcx,QWORD PTR [r15]
  411adf:	jmp    411b50 <main@@Base+0xaa80>
  411ae1:	dec    rcx
  411ae4:	cmp    rcx,0x6
  411ae8:	ja     411b86 <main@@Base+0xaab6>
  411aee:	xor    eax,eax
  411af0:	lea    rsi,[rip+0x22811]        # 434308 <_IO_stdin_used@@Base+0x308>
  411af7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  411afb:	add    rcx,rsi
  411afe:	jmp    rcx
  411b00:	movsx  rax,BYTE PTR [r15+0x6]
  411b05:	shl    rax,0x8
  411b09:	movsx  rcx,BYTE PTR [r15+0x5]
  411b0e:	shl    rcx,0x10
  411b12:	or     rax,rcx
  411b15:	movsx  rcx,BYTE PTR [r15+0x4]
  411b1a:	shl    rcx,0x18
  411b1e:	or     rax,rcx
  411b21:	movsx  rcx,BYTE PTR [r15+0x3]
  411b26:	shl    rcx,0x20
  411b2a:	or     rax,rcx
  411b2d:	movsx  rcx,BYTE PTR [r15+0x2]
  411b32:	shl    rcx,0x28
  411b36:	or     rax,rcx
  411b39:	movsx  rcx,BYTE PTR [r15+0x1]
  411b3e:	shl    rcx,0x30
  411b42:	or     rax,rcx
  411b45:	movzx  ecx,BYTE PTR [r15]
  411b49:	shl    rcx,0x38
  411b4d:	or     rcx,rax
  411b50:	shr    rcx,0x38
  411b54:	cmp    rcx,0x78
  411b58:	jne    411b86 <main@@Base+0xaab6>
  411b5a:	mov    rsi,r15
  411b5d:	mov    ecx,0x1
  411b62:	mov    r8,r9
  411b65:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  411b6a:	mov    rsi,r15
  411b6d:	cmp    rax,r15
  411b70:	je     411b89 <main@@Base+0xaab9>
  411b72:	mov    QWORD PTR [r14],0x0
  411b79:	mov    DWORD PTR [r12],0x0
  411b81:	mov    rsi,rax
  411b84:	jmp    411b89 <main@@Base+0xaab9>
  411b86:	mov    rsi,r15
  411b89:	mov    rax,rsi
  411b8c:	add    rsp,0x8
  411b90:	pop    rbx
  411b91:	pop    r12
  411b93:	pop    r14
  411b95:	pop    r15
  411b97:	ret    
  411b98:	nop    DWORD PTR [rax+rax*1+0x0]
  411ba0:	push   rbp
  411ba1:	push   r15
  411ba3:	push   r14
  411ba5:	push   r13
  411ba7:	push   r12
  411ba9:	push   rbx
  411baa:	push   rax
  411bab:	mov    r12,r9
  411bae:	mov    r14,r8
  411bb1:	mov    r15,rcx
  411bb4:	mov    rbx,rdx
  411bb7:	mov    r13,rdi
  411bba:	mov    rcx,rdx
  411bbd:	sub    rcx,rsi
  411bc0:	cmp    rcx,0x8
  411bc4:	jb     411bcd <main@@Base+0xaafd>
  411bc6:	movbe  rcx,QWORD PTR [rsi]
  411bcb:	jmp    411c3b <main@@Base+0xab6b>
  411bcd:	dec    rcx
  411bd0:	cmp    rcx,0x6
  411bd4:	ja     412940 <main@@Base+0xb870>
  411bda:	xor    eax,eax
  411bdc:	lea    rdx,[rip+0x22741]        # 434324 <_IO_stdin_used@@Base+0x324>
  411be3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  411be7:	add    rcx,rdx
  411bea:	jmp    rcx
  411bec:	movsx  rax,BYTE PTR [rsi+0x6]
  411bf1:	shl    rax,0x8
  411bf5:	movsx  rcx,BYTE PTR [rsi+0x5]
  411bfa:	shl    rcx,0x10
  411bfe:	or     rax,rcx
  411c01:	movsx  rcx,BYTE PTR [rsi+0x4]
  411c06:	shl    rcx,0x18
  411c0a:	or     rax,rcx
  411c0d:	movsx  rcx,BYTE PTR [rsi+0x3]
  411c12:	shl    rcx,0x20
  411c16:	or     rax,rcx
  411c19:	movsx  rcx,BYTE PTR [rsi+0x2]
  411c1e:	shl    rcx,0x28
  411c22:	or     rax,rcx
  411c25:	movsx  rcx,BYTE PTR [rsi+0x1]
  411c2a:	shl    rcx,0x30
  411c2e:	or     rax,rcx
  411c31:	movzx  ecx,BYTE PTR [rsi]
  411c34:	shl    rcx,0x38
  411c38:	or     rcx,rax
  411c3b:	movabs rax,0x4d7947616d652e44
  411c45:	cmp    rcx,rax
  411c48:	ja     411c77 <main@@Base+0xaba7>
  411c4a:	movabs rax,0x46616e746173792e
  411c54:	cmp    rcx,rax
  411c57:	jne    412940 <main@@Base+0xb870>
  411c5d:	lea    rax,[rsi+0x8]
  411c61:	mov    rdx,rbx
  411c64:	sub    rdx,rax
  411c67:	cmp    rdx,0x8
  411c6b:	jb     411cd5 <main@@Base+0xac05>
  411c6d:	movbe  rax,QWORD PTR [rax]
  411c72:	jmp    411d43 <main@@Base+0xac73>
  411c77:	movabs rax,0x4d7947616d652e4f
  411c81:	cmp    rcx,rax
  411c84:	je     411cb7 <main@@Base+0xabe7>
  411c86:	movabs rax,0x4d7947616d652e45
  411c90:	cmp    rcx,rax
  411c93:	jne    412940 <main@@Base+0xb870>
  411c99:	lea    rax,[rsi+0x8]
  411c9d:	mov    rdx,rbx
  411ca0:	sub    rdx,rax
  411ca3:	cmp    rdx,0x8
  411ca7:	jb     411d7e <main@@Base+0xacae>
  411cad:	movbe  rax,QWORD PTR [rax]
  411cb2:	jmp    411dec <main@@Base+0xad1c>
  411cb7:	lea    rax,[rsi+0x8]
  411cbb:	mov    rdx,rbx
  411cbe:	sub    rdx,rax
  411cc1:	cmp    rdx,0x8
  411cc5:	jb     411e41 <main@@Base+0xad71>
  411ccb:	movbe  rax,QWORD PTR [rax]
  411cd0:	jmp    411eaf <main@@Base+0xaddf>
  411cd5:	dec    rdx
  411cd8:	cmp    rdx,0x6
  411cdc:	ja     412940 <main@@Base+0xb870>
  411ce2:	xor    ecx,ecx
  411ce4:	lea    rdi,[rip+0x227c1]        # 4344ac <_IO_stdin_used@@Base+0x4ac>
  411ceb:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411cef:	add    rdx,rdi
  411cf2:	jmp    rdx
  411cf4:	movsx  rcx,BYTE PTR [rsi+0xe]
  411cf9:	shl    rcx,0x8
  411cfd:	movsx  rdx,BYTE PTR [rsi+0xd]
  411d02:	shl    rdx,0x10
  411d06:	or     rcx,rdx
  411d09:	movsx  rdx,BYTE PTR [rsi+0xc]
  411d0e:	shl    rdx,0x18
  411d12:	or     rcx,rdx
  411d15:	movsx  rdx,BYTE PTR [rsi+0xb]
  411d1a:	shl    rdx,0x20
  411d1e:	or     rcx,rdx
  411d21:	movsx  rdx,BYTE PTR [rsi+0xa]
  411d26:	shl    rdx,0x28
  411d2a:	or     rcx,rdx
  411d2d:	movsx  rdx,BYTE PTR [rsi+0x9]
  411d32:	shl    rdx,0x30
  411d36:	or     rcx,rdx
  411d39:	movzx  eax,BYTE PTR [rax]
  411d3c:	shl    rax,0x38
  411d40:	or     rax,rcx
  411d43:	movabs rcx,0x4368617261637465
  411d4d:	cmp    rax,rcx
  411d50:	jne    412940 <main@@Base+0xb870>
  411d56:	lea    rcx,[rsi+0x10]
  411d5a:	mov    rax,rbx
  411d5d:	sub    rax,rcx
  411d60:	cmp    rax,0x8
  411d64:	jb     411f5f <main@@Base+0xae8f>
  411d6a:	movbe  rdi,QWORD PTR [rcx]
  411d6f:	cmp    rax,0x2
  411d73:	jge    411fd9 <main@@Base+0xaf09>
  411d79:	jmp    412940 <main@@Base+0xb870>
  411d7e:	dec    rdx
  411d81:	cmp    rdx,0x6
  411d85:	ja     412940 <main@@Base+0xb870>
  411d8b:	xor    ecx,ecx
  411d8d:	lea    rdi,[rip+0x22654]        # 4343e8 <_IO_stdin_used@@Base+0x3e8>
  411d94:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411d98:	add    rdx,rdi
  411d9b:	jmp    rdx
  411d9d:	movsx  rcx,BYTE PTR [rsi+0xe]
  411da2:	shl    rcx,0x8
  411da6:	movsx  rdx,BYTE PTR [rsi+0xd]
  411dab:	shl    rdx,0x10
  411daf:	or     rcx,rdx
  411db2:	movsx  rdx,BYTE PTR [rsi+0xc]
  411db7:	shl    rdx,0x18
  411dbb:	or     rcx,rdx
  411dbe:	movsx  rdx,BYTE PTR [rsi+0xb]
  411dc3:	shl    rdx,0x20
  411dc7:	or     rcx,rdx
  411dca:	movsx  rdx,BYTE PTR [rsi+0xa]
  411dcf:	shl    rdx,0x28
  411dd3:	or     rcx,rdx
  411dd6:	movsx  rdx,BYTE PTR [rsi+0x9]
  411ddb:	shl    rdx,0x30
  411ddf:	or     rcx,rdx
  411de2:	movzx  eax,BYTE PTR [rax]
  411de5:	shl    rax,0x38
  411de9:	or     rax,rcx
  411dec:	movabs rcx,0x78616d706c652e68
  411df6:	cmp    rax,rcx
  411df9:	jae    411ee0 <main@@Base+0xae10>
  411dff:	lea    rdx,[rcx-0x25]
  411e03:	cmp    rax,rdx
  411e06:	jae    412033 <main@@Base+0xaf63>
  411e0c:	add    rcx,0xffffffffffffffd9
  411e10:	cmp    rax,rcx
  411e13:	jne    412940 <main@@Base+0xb870>
  411e19:	lea    rcx,[rsi+0x10]
  411e1d:	mov    rax,rbx
  411e20:	sub    rax,rcx
  411e23:	cmp    rax,0x8
  411e27:	jb     4122f7 <main@@Base+0xb227>
  411e2d:	movbe  rdi,QWORD PTR [rcx]
  411e32:	cmp    rax,0x3
  411e36:	jge    412371 <main@@Base+0xb2a1>
  411e3c:	jmp    412940 <main@@Base+0xb870>
  411e41:	dec    rdx
  411e44:	cmp    rdx,0x6
  411e48:	ja     412940 <main@@Base+0xb870>
  411e4e:	xor    ecx,ecx
  411e50:	lea    rdi,[rip+0x224e9]        # 434340 <_IO_stdin_used@@Base+0x340>
  411e57:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  411e5b:	add    rdx,rdi
  411e5e:	jmp    rdx
  411e60:	movsx  rcx,BYTE PTR [rsi+0xe]
  411e65:	shl    rcx,0x8
  411e69:	movsx  rdx,BYTE PTR [rsi+0xd]
  411e6e:	shl    rdx,0x10
  411e72:	or     rcx,rdx
  411e75:	movsx  rdx,BYTE PTR [rsi+0xc]
  411e7a:	shl    rdx,0x18
  411e7e:	or     rcx,rdx
  411e81:	movsx  rdx,BYTE PTR [rsi+0xb]
  411e86:	shl    rdx,0x20
  411e8a:	or     rcx,rdx
  411e8d:	movsx  rdx,BYTE PTR [rsi+0xa]
  411e92:	shl    rdx,0x28
  411e96:	or     rcx,rdx
  411e99:	movsx  rdx,BYTE PTR [rsi+0x9]
  411e9e:	shl    rdx,0x30
  411ea2:	or     rcx,rdx
  411ea5:	movzx  eax,BYTE PTR [rax]
  411ea8:	shl    rax,0x38
  411eac:	or     rax,rcx
  411eaf:	movabs rcx,0x746865724e616d65
  411eb9:	cmp    rax,rcx
  411ebc:	jne    412940 <main@@Base+0xb870>
  411ec2:	lea    rax,[rsi+0x10]
  411ec6:	mov    rdx,rbx
  411ec9:	sub    rdx,rax
  411ecc:	cmp    rdx,0x8
  411ed0:	jb     412081 <main@@Base+0xafb1>
  411ed6:	movbe  rax,QWORD PTR [rax]
  411edb:	jmp    4120ef <main@@Base+0xb01f>
  411ee0:	jne    412120 <main@@Base+0xb050>
  411ee6:	lea    rcx,[rsi+0x10]
  411eea:	mov    rax,rbx
  411eed:	sub    rax,rcx
  411ef0:	cmp    rax,0x8
  411ef4:	jb     412940 <main@@Base+0xb870>
  411efa:	cmp    rax,0x8
  411efe:	jl     412940 <main@@Base+0xb870>
  411f04:	mov    al,0x38
  411f06:	bzhi   rax,QWORD PTR [rcx],rax
  411f0b:	movabs rdx,0x6d756e655f746e
  411f15:	add    rdx,0x3f7
  411f1c:	cmp    rax,rdx
  411f1f:	jne    412940 <main@@Base+0xb870>
  411f25:	lea    rax,[rsi+0x18]
  411f29:	cmp    BYTE PTR [rsi+0x17],0x2e
  411f2d:	cmovne rax,rcx
  411f31:	cmp    rax,rcx
  411f34:	je     412940 <main@@Base+0xb870>
  411f3a:	mov    rdi,r13
  411f3d:	mov    rsi,rax
  411f40:	mov    rdx,rbx
  411f43:	mov    rcx,r15
  411f46:	mov    r8,r14
  411f49:	mov    r9,r12
  411f4c:	add    rsp,0x8
  411f50:	pop    rbx
  411f51:	pop    r12
  411f53:	pop    r13
  411f55:	pop    r14
  411f57:	pop    r15
  411f59:	pop    rbp
  411f5a:	jmp    4156c0 <main@@Base+0xe5f0>
  411f5f:	lea    rdi,[rax-0x1]
  411f63:	cmp    rdi,0x6
  411f67:	ja     412940 <main@@Base+0xb870>
  411f6d:	xor    edx,edx
  411f6f:	lea    rbp,[rip+0x22552]        # 4344c8 <_IO_stdin_used@@Base+0x4c8>
  411f76:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411f7b:	add    rdi,rbp
  411f7e:	jmp    rdi
  411f80:	movsx  rdx,BYTE PTR [rsi+0x16]
  411f85:	shl    rdx,0x8
  411f89:	movsx  rdi,BYTE PTR [rsi+0x15]
  411f8e:	shl    rdi,0x10
  411f92:	or     rdx,rdi
  411f95:	movsx  rdi,BYTE PTR [rsi+0x14]
  411f9a:	shl    rdi,0x18
  411f9e:	or     rdx,rdi
  411fa1:	movsx  rdi,BYTE PTR [rsi+0x13]
  411fa6:	shl    rdi,0x20
  411faa:	or     rdx,rdi
  411fad:	movsx  rdi,BYTE PTR [rsi+0x12]
  411fb2:	shl    rdi,0x28
  411fb6:	or     rdx,rdi
  411fb9:	movsx  rdi,BYTE PTR [rsi+0x11]
  411fbe:	shl    rdi,0x30
  411fc2:	or     rdx,rdi
  411fc5:	movzx  edi,BYTE PTR [rcx]
  411fc8:	shl    rdi,0x38
  411fcc:	or     rdi,rdx
  411fcf:	cmp    rax,0x2
  411fd3:	jl     412940 <main@@Base+0xb870>
  411fd9:	movabs rax,0xff00000000000000
  411fe3:	and    rdi,rax
  411fe6:	movabs rax,0x7200000000000000
  411ff0:	cmp    rdi,rax
  411ff3:	jne    412940 <main@@Base+0xb870>
  411ff9:	lea    rax,[rsi+0x12]
  411ffd:	cmp    BYTE PTR [rsi+0x11],0x2e
  412001:	cmovne rax,rcx
  412005:	cmp    rax,rcx
  412008:	je     412940 <main@@Base+0xb870>
  41200e:	mov    rdi,r13
  412011:	mov    rsi,rax
  412014:	mov    rdx,rbx
  412017:	mov    rcx,r15
  41201a:	mov    r8,r14
  41201d:	mov    r9,r12
  412020:	add    rsp,0x8
  412024:	pop    rbx
  412025:	pop    r12
  412027:	pop    r13
  412029:	pop    r14
  41202b:	pop    r15
  41202d:	pop    rbp
  41202e:	jmp    415b10 <main@@Base+0xea40>
  412033:	movabs rcx,0x78616d706c652e46
  41203d:	cmp    rax,rcx
  412040:	je     4122cf <main@@Base+0xb1ff>
  412046:	movabs rcx,0x78616d706c652e43
  412050:	cmp    rax,rcx
  412053:	jne    412940 <main@@Base+0xb870>
  412059:	lea    rcx,[rsi+0x10]
  41205d:	mov    rax,rbx
  412060:	sub    rax,rcx
  412063:	cmp    rax,0x8
  412067:	jb     412494 <main@@Base+0xb3c4>
  41206d:	movbe  rdi,QWORD PTR [rcx]
  412072:	cmp    rax,0x5
  412076:	jge    41250e <main@@Base+0xb43e>
  41207c:	jmp    412940 <main@@Base+0xb870>
  412081:	dec    rdx
  412084:	cmp    rdx,0x6
  412088:	ja     412940 <main@@Base+0xb870>
  41208e:	xor    ecx,ecx
  412090:	lea    rdi,[rip+0x222c5]        # 43435c <_IO_stdin_used@@Base+0x35c>
  412097:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  41209b:	add    rdx,rdi
  41209e:	jmp    rdx
  4120a0:	movsx  rcx,BYTE PTR [rsi+0x16]
  4120a5:	shl    rcx,0x8
  4120a9:	movsx  rdx,BYTE PTR [rsi+0x15]
  4120ae:	shl    rdx,0x10
  4120b2:	or     rcx,rdx
  4120b5:	movsx  rdx,BYTE PTR [rsi+0x14]
  4120ba:	shl    rdx,0x18
  4120be:	or     rcx,rdx
  4120c1:	movsx  rdx,BYTE PTR [rsi+0x13]
  4120c6:	shl    rdx,0x20
  4120ca:	or     rcx,rdx
  4120cd:	movsx  rdx,BYTE PTR [rsi+0x12]
  4120d2:	shl    rdx,0x28
  4120d6:	or     rcx,rdx
  4120d9:	movsx  rdx,BYTE PTR [rsi+0x11]
  4120de:	shl    rdx,0x30
  4120e2:	or     rcx,rdx
  4120e5:	movzx  eax,BYTE PTR [rax]
  4120e8:	shl    rax,0x38
  4120ec:	or     rax,rcx
  4120ef:	movabs rcx,0x53706163652e4672
  4120f9:	cmp    rax,rcx
  4120fc:	jne    412940 <main@@Base+0xb870>
  412102:	lea    rax,[rsi+0x18]
  412106:	mov    rdx,rbx
  412109:	sub    rdx,rax
  41210c:	cmp    rdx,0x8
  412110:	jb     412226 <main@@Base+0xb156>
  412116:	movbe  rax,QWORD PTR [rax]
  41211b:	jmp    412294 <main@@Base+0xb1c4>
  412120:	lea    rdx,[rcx+0x6]
  412124:	cmp    rax,rdx
  412127:	jae    4121a7 <main@@Base+0xb0d7>
  412129:	inc    rcx
  41212c:	cmp    rax,rcx
  41212f:	jne    412940 <main@@Base+0xb870>
  412135:	lea    rcx,[rsi+0x10]
  412139:	mov    rax,rbx
  41213c:	sub    rax,rcx
  41213f:	cmp    rax,0x8
  412143:	jb     412940 <main@@Base+0xb870>
  412149:	cmp    rax,0x8
  41214d:	jl     412940 <main@@Base+0xb870>
  412153:	mov    al,0x38
  412155:	bzhi   rax,QWORD PTR [rcx],rax
  41215a:	movabs rdx,0x6d756e655f746e
  412164:	cmp    rax,rdx
  412167:	jne    412940 <main@@Base+0xb870>
  41216d:	lea    rax,[rsi+0x18]
  412171:	cmp    BYTE PTR [rsi+0x17],0x2e
  412175:	cmovne rax,rcx
  412179:	cmp    rax,rcx
  41217c:	je     412940 <main@@Base+0xb870>
  412182:	mov    rdi,r13
  412185:	mov    rsi,rax
  412188:	mov    rdx,rbx
  41218b:	mov    rcx,r15
  41218e:	mov    r8,r14
  412191:	mov    r9,r12
  412194:	add    rsp,0x8
  412198:	pop    rbx
  412199:	pop    r12
  41219b:	pop    r13
  41219d:	pop    r14
  41219f:	pop    r15
  4121a1:	pop    rbp
  4121a2:	jmp    415820 <main@@Base+0xe750>
  4121a7:	jne    412940 <main@@Base+0xb870>
  4121ad:	lea    rcx,[rsi+0x10]
  4121b1:	mov    rdi,rbx
  4121b4:	sub    rdi,rcx
  4121b7:	cmp    rdi,0x7
  4121bb:	jbe    41263c <main@@Base+0xb56c>
  4121c1:	movbe  rdx,QWORD PTR [rcx]
  4121c6:	cmp    rdi,0x8
  4121ca:	jl     4126aa <main@@Base+0xb5da>
  4121d0:	mov    rax,rdx
  4121d3:	and    rax,0xffffffffffffff00
  4121d9:	movabs rdi,0x65675f656e756d00
  4121e3:	cmp    rax,rdi
  4121e6:	jne    4126aa <main@@Base+0xb5da>
  4121ec:	lea    rax,[rsi+0x18]
  4121f0:	cmp    BYTE PTR [rsi+0x17],0x2e
  4121f4:	cmovne rax,rcx
  4121f8:	cmp    rax,rcx
  4121fb:	je     4126aa <main@@Base+0xb5da>
  412201:	mov    rdi,r13
  412204:	mov    rsi,rax
  412207:	mov    rdx,rbx
  41220a:	mov    rcx,r15
  41220d:	mov    r8,r14
  412210:	mov    r9,r12
  412213:	add    rsp,0x8
  412217:	pop    rbx
  412218:	pop    r12
  41221a:	pop    r13
  41221c:	pop    r14
  41221e:	pop    r15
  412220:	pop    rbp
  412221:	jmp    4159c0 <main@@Base+0xe8f0>
  412226:	dec    rdx
  412229:	cmp    rdx,0x6
  41222d:	ja     412940 <main@@Base+0xb870>
  412233:	xor    ecx,ecx
  412235:	lea    rdi,[rip+0x2213c]        # 434378 <_IO_stdin_used@@Base+0x378>
  41223c:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  412240:	add    rdx,rdi
  412243:	jmp    rdx
  412245:	movsx  rcx,BYTE PTR [rsi+0x1e]
  41224a:	shl    rcx,0x8
  41224e:	movsx  rdx,BYTE PTR [rsi+0x1d]
  412253:	shl    rdx,0x10
  412257:	or     rcx,rdx
  41225a:	movsx  rdx,BYTE PTR [rsi+0x1c]
  41225f:	shl    rdx,0x18
  412263:	or     rcx,rdx
  412266:	movsx  rdx,BYTE PTR [rsi+0x1b]
  41226b:	shl    rdx,0x20
  41226f:	or     rcx,rdx
  412272:	movsx  rdx,BYTE PTR [rsi+0x1a]
  412277:	shl    rdx,0x28
  41227b:	or     rcx,rdx
  41227e:	movsx  rdx,BYTE PTR [rsi+0x19]
  412283:	shl    rdx,0x30
  412287:	or     rcx,rdx
  41228a:	movzx  eax,BYTE PTR [rax]
  41228d:	shl    rax,0x38
  412291:	or     rax,rcx
  412294:	movabs rcx,0x6f6d496e636c7564
  41229e:	cmp    rax,rcx
  4122a1:	jne    412940 <main@@Base+0xb870>
  4122a7:	lea    rax,[rsi+0x20]
  4122ab:	mov    rcx,rbx
  4122ae:	sub    rcx,rax
  4122b1:	cmp    rcx,0x8
  4122b5:	jb     4123cb <main@@Base+0xb2fb>
  4122bb:	movbe  rdi,QWORD PTR [rax]
  4122c0:	cmp    rcx,0x2
  4122c4:	jge    412445 <main@@Base+0xb375>
  4122ca:	jmp    412940 <main@@Base+0xb870>
  4122cf:	lea    rcx,[rsi+0x10]
  4122d3:	mov    rax,rbx
  4122d6:	sub    rax,rcx
  4122d9:	cmp    rax,0x8
  4122dd:	jb     412568 <main@@Base+0xb498>
  4122e3:	movbe  rdi,QWORD PTR [rcx]
  4122e8:	cmp    rax,0x3
  4122ec:	jge    4125e2 <main@@Base+0xb512>
  4122f2:	jmp    412940 <main@@Base+0xb870>
  4122f7:	lea    rdi,[rax-0x1]
  4122fb:	cmp    rdi,0x6
  4122ff:	ja     412940 <main@@Base+0xb870>
  412305:	xor    edx,edx
  412307:	lea    rbp,[rip+0x22182]        # 434490 <_IO_stdin_used@@Base+0x490>
  41230e:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  412313:	add    rdi,rbp
  412316:	jmp    rdi
  412318:	movsx  rdx,BYTE PTR [rsi+0x16]
  41231d:	shl    rdx,0x8
  412321:	movsx  rdi,BYTE PTR [rsi+0x15]
  412326:	shl    rdi,0x10
  41232a:	or     rdx,rdi
  41232d:	movsx  rdi,BYTE PTR [rsi+0x14]
  412332:	shl    rdi,0x18
  412336:	or     rdx,rdi
  412339:	movsx  rdi,BYTE PTR [rsi+0x13]
  41233e:	shl    rdi,0x20
  412342:	or     rdx,rdi
  412345:	movsx  rdi,BYTE PTR [rsi+0x12]
  41234a:	shl    rdi,0x28
  41234e:	or     rdx,rdi
  412351:	movsx  rdi,BYTE PTR [rsi+0x11]
  412356:	shl    rdi,0x30
  41235a:	or     rdx,rdi
  41235d:	movzx  edi,BYTE PTR [rcx]
  412360:	shl    rdi,0x38
  412364:	or     rdi,rdx
  412367:	cmp    rax,0x3
  41236b:	jl     412940 <main@@Base+0xb870>
  412371:	movabs rax,0xffff000000000000
  41237b:	and    rdi,rax
  41237e:	movabs rax,0x6e79000000000000
  412388:	cmp    rdi,rax
  41238b:	jne    412940 <main@@Base+0xb870>
  412391:	lea    rax,[rsi+0x13]
  412395:	cmp    BYTE PTR [rsi+0x12],0x2e
  412399:	cmovne rax,rcx
  41239d:	cmp    rax,rcx
  4123a0:	je     412940 <main@@Base+0xb870>
  4123a6:	mov    rdi,r13
  4123a9:	mov    rsi,rax
  4123ac:	mov    rdx,rbx
  4123af:	mov    rcx,r15
  4123b2:	mov    r8,r14
  4123b5:	mov    r9,r12
  4123b8:	add    rsp,0x8
  4123bc:	pop    rbx
  4123bd:	pop    r12
  4123bf:	pop    r13
  4123c1:	pop    r14
  4123c3:	pop    r15
  4123c5:	pop    rbp
  4123c6:	jmp    4144e0 <main@@Base+0xd410>
  4123cb:	lea    rdi,[rcx-0x1]
  4123cf:	cmp    rdi,0x6
  4123d3:	ja     412940 <main@@Base+0xb870>
  4123d9:	xor    edx,edx
  4123db:	lea    rbp,[rip+0x21fb2]        # 434394 <_IO_stdin_used@@Base+0x394>
  4123e2:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  4123e7:	add    rdi,rbp
  4123ea:	jmp    rdi
  4123ec:	movsx  rdx,BYTE PTR [rsi+0x26]
  4123f1:	shl    rdx,0x8
  4123f5:	movsx  rdi,BYTE PTR [rsi+0x25]
  4123fa:	shl    rdi,0x10
  4123fe:	or     rdx,rdi
  412401:	movsx  rdi,BYTE PTR [rsi+0x24]
  412406:	shl    rdi,0x18
  41240a:	or     rdx,rdi
  41240d:	movsx  rdi,BYTE PTR [rsi+0x23]
  412412:	shl    rdi,0x20
  412416:	or     rdx,rdi
  412419:	movsx  rdi,BYTE PTR [rsi+0x22]
  41241e:	shl    rdi,0x28
  412422:	or     rdx,rdi
  412425:	movsx  rdi,BYTE PTR [rsi+0x21]
  41242a:	shl    rdi,0x30
  41242e:	or     rdx,rdi
  412431:	movzx  edi,BYTE PTR [rax]
  412434:	shl    rdi,0x38
  412438:	or     rdi,rdx
  41243b:	cmp    rcx,0x2
  41243f:	jl     412940 <main@@Base+0xb870>
  412445:	movabs rcx,0xff00000000000000
  41244f:	and    rdi,rcx
  412452:	movabs rcx,0x6500000000000000
  41245c:	cmp    rdi,rcx
  41245f:	jne    412940 <main@@Base+0xb870>
  412465:	lea    r8,[rsi+0x22]
  412469:	cmp    BYTE PTR [rsi+0x21],0x2e
  41246d:	cmovne r8,rax
  412471:	cmp    r8,rax
  412474:	je     412940 <main@@Base+0xb870>
  41247a:	mov    rcx,rbx
  41247d:	sub    rcx,r8
  412480:	cmp    rcx,0x8
  412484:	jb     4126e5 <main@@Base+0xb615>
  41248a:	movbe  rbp,QWORD PTR [r8]
  41248f:	jmp    412754 <main@@Base+0xb684>
  412494:	lea    rdi,[rax-0x1]
  412498:	cmp    rdi,0x6
  41249c:	ja     412940 <main@@Base+0xb870>
  4124a2:	xor    edx,edx
  4124a4:	lea    rbp,[rip+0x21fc9]        # 434474 <_IO_stdin_used@@Base+0x474>
  4124ab:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  4124b0:	add    rdi,rbp
  4124b3:	jmp    rdi
  4124b5:	movsx  rdx,BYTE PTR [rsi+0x16]
  4124ba:	shl    rdx,0x8
  4124be:	movsx  rdi,BYTE PTR [rsi+0x15]
  4124c3:	shl    rdi,0x10
  4124c7:	or     rdx,rdi
  4124ca:	movsx  rdi,BYTE PTR [rsi+0x14]
  4124cf:	shl    rdi,0x18
  4124d3:	or     rdx,rdi
  4124d6:	movsx  rdi,BYTE PTR [rsi+0x13]
  4124db:	shl    rdi,0x20
  4124df:	or     rdx,rdi
  4124e2:	movsx  rdi,BYTE PTR [rsi+0x12]
  4124e7:	shl    rdi,0x28
  4124eb:	or     rdx,rdi
  4124ee:	movsx  rdi,BYTE PTR [rsi+0x11]
  4124f3:	shl    rdi,0x30
  4124f7:	or     rdx,rdi
  4124fa:	movzx  edi,BYTE PTR [rcx]
  4124fd:	shl    rdi,0x38
  412501:	or     rdi,rdx
  412504:	cmp    rax,0x5
  412508:	jl     412940 <main@@Base+0xb870>
  41250e:	movabs rax,0xffffffff00000000
  412518:	and    rdi,rax
  41251b:	movabs rax,0x6f6c6f7200000000
  412525:	cmp    rdi,rax
  412528:	jne    412940 <main@@Base+0xb870>
  41252e:	lea    rax,[rsi+0x15]
  412532:	cmp    BYTE PTR [rsi+0x14],0x2e
  412536:	cmovne rax,rcx
  41253a:	cmp    rax,rcx
  41253d:	je     412940 <main@@Base+0xb870>
  412543:	mov    rdi,r13
  412546:	mov    rsi,rax
  412549:	mov    rdx,rbx
  41254c:	mov    rcx,r15
  41254f:	mov    r8,r14
  412552:	mov    r9,r12
  412555:	add    rsp,0x8
  412559:	pop    rbx
  41255a:	pop    r12
  41255c:	pop    r13
  41255e:	pop    r14
  412560:	pop    r15
  412562:	pop    rbp
  412563:	jmp    411620 <main@@Base+0xa550>
  412568:	lea    rdi,[rax-0x1]
  41256c:	cmp    rdi,0x6
  412570:	ja     412940 <main@@Base+0xb870>
  412576:	xor    edx,edx
  412578:	lea    rbp,[rip+0x21ed9]        # 434458 <_IO_stdin_used@@Base+0x458>
  41257f:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  412584:	add    rdi,rbp
  412587:	jmp    rdi
  412589:	movsx  rdx,BYTE PTR [rsi+0x16]
  41258e:	shl    rdx,0x8
  412592:	movsx  rdi,BYTE PTR [rsi+0x15]
  412597:	shl    rdi,0x10
  41259b:	or     rdx,rdi
  41259e:	movsx  rdi,BYTE PTR [rsi+0x14]
  4125a3:	shl    rdi,0x18
  4125a7:	or     rdx,rdi
  4125aa:	movsx  rdi,BYTE PTR [rsi+0x13]
  4125af:	shl    rdi,0x20
  4125b3:	or     rdx,rdi
  4125b6:	movsx  rdi,BYTE PTR [rsi+0x12]
  4125bb:	shl    rdi,0x28
  4125bf:	or     rdx,rdi
  4125c2:	movsx  rdi,BYTE PTR [rsi+0x11]
  4125c7:	shl    rdi,0x30
  4125cb:	or     rdx,rdi
  4125ce:	movzx  edi,BYTE PTR [rcx]
  4125d1:	shl    rdi,0x38
  4125d5:	or     rdi,rdx
  4125d8:	cmp    rax,0x3
  4125dc:	jl     412940 <main@@Base+0xb870>
  4125e2:	movabs rax,0xffff000000000000
  4125ec:	and    rdi,rax
  4125ef:	movabs rax,0x6f6f000000000000
  4125f9:	cmp    rdi,rax
  4125fc:	jne    412940 <main@@Base+0xb870>
  412602:	lea    rax,[rsi+0x13]
  412606:	cmp    BYTE PTR [rsi+0x12],0x2e
  41260a:	cmovne rax,rcx
  41260e:	cmp    rax,rcx
  412611:	je     412940 <main@@Base+0xb870>
  412617:	mov    rdi,r13
  41261a:	mov    rsi,rax
  41261d:	mov    rdx,rbx
  412620:	mov    rcx,r15
  412623:	mov    r8,r14
  412626:	mov    r9,r12
  412629:	add    rsp,0x8
  41262d:	pop    rbx
  41262e:	pop    r12
  412630:	pop    r13
  412632:	pop    r14
  412634:	pop    r15
  412636:	pop    rbp
  412637:	jmp    415480 <main@@Base+0xe3b0>
  41263c:	dec    rdi
  41263f:	cmp    rdi,0x6
  412643:	ja     412940 <main@@Base+0xb870>
  412649:	xor    eax,eax
  41264b:	lea    rdx,[rip+0x21db2]        # 434404 <_IO_stdin_used@@Base+0x404>
  412652:	movsxd rdi,DWORD PTR [rdx+rdi*4]
  412656:	add    rdi,rdx
  412659:	jmp    rdi
  41265b:	movsx  rax,BYTE PTR [rsi+0x16]
  412660:	shl    rax,0x8
  412664:	movsx  rdx,BYTE PTR [rsi+0x15]
  412669:	shl    rdx,0x10
  41266d:	or     rax,rdx
  412670:	movsx  rdx,BYTE PTR [rsi+0x14]
  412675:	shl    rdx,0x18
  412679:	or     rax,rdx
  41267c:	movsx  rdx,BYTE PTR [rsi+0x13]
  412681:	shl    rdx,0x20
  412685:	or     rax,rdx
  412688:	movsx  rdx,BYTE PTR [rsi+0x12]
  41268d:	shl    rdx,0x28
  412691:	or     rax,rdx
  412694:	movsx  rdx,BYTE PTR [rsi+0x11]
  412699:	shl    rdx,0x30
  41269d:	or     rax,rdx
  4126a0:	movzx  edx,BYTE PTR [rcx]
  4126a3:	shl    rdx,0x38
  4126a7:	or     rdx,rax
  4126aa:	movabs rax,0x6f74656d70747965
  4126b4:	cmp    rdx,rax
  4126b7:	jne    412940 <main@@Base+0xb870>
  4126bd:	lea    rax,[rsi+0x18]
  4126c1:	mov    rcx,rbx
  4126c4:	sub    rcx,rax
  4126c7:	cmp    rcx,0x8
  4126cb:	jb     4127c5 <main@@Base+0xb6f5>
  4126d1:	movbe  rdi,QWORD PTR [rax]
  4126d6:	cmp    rcx,0x4
  4126da:	jge    41283f <main@@Base+0xb76f>
  4126e0:	jmp    412940 <main@@Base+0xb870>
  4126e5:	dec    rcx
  4126e8:	cmp    rcx,0x6
  4126ec:	ja     41293d <main@@Base+0xb86d>
  4126f2:	xor    eax,eax
  4126f4:	lea    rdx,[rip+0x21cb5]        # 4343b0 <_IO_stdin_used@@Base+0x3b0>
  4126fb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4126ff:	add    rcx,rdx
  412702:	jmp    rcx
  412704:	movsx  rax,BYTE PTR [r8+0x6]
  412709:	shl    rax,0x8
  41270d:	movsx  rcx,BYTE PTR [r8+0x5]
  412712:	shl    rcx,0x10
  412716:	or     rax,rcx
  412719:	movsx  rcx,BYTE PTR [r8+0x4]
  41271e:	shl    rcx,0x18
  412722:	or     rax,rcx
  412725:	movsx  rcx,BYTE PTR [r8+0x3]
  41272a:	shl    rcx,0x20
  41272e:	or     rax,rcx
  412731:	movsx  rcx,BYTE PTR [r8+0x2]
  412736:	shl    rcx,0x28
  41273a:	or     rax,rcx
  41273d:	movsx  rcx,BYTE PTR [r8+0x1]
  412742:	shl    rcx,0x30
  412746:	or     rax,rcx
  412749:	movzx  ebp,BYTE PTR [r8]
  41274d:	shl    rbp,0x38
  412751:	or     rbp,rax
  412754:	mov    rax,rbp
  412757:	shr    rax,0x28
  41275b:	cmp    rax,0x466f6f
  412761:	jne    412793 <main@@Base+0xb6c3>
  412763:	mov    rdi,r13
  412766:	mov    rsi,r8
  412769:	mov    rdx,rbx
  41276c:	mov    ecx,0x3
  412771:	mov    QWORD PTR [rsp],r8
  412775:	mov    r8,r12
  412778:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41277d:	mov    r8,QWORD PTR [rsp]
  412781:	cmp    rax,r8
  412784:	je     412793 <main@@Base+0xb6c3>
  412786:	mov    rsi,rax
  412789:	mov    ecx,0x11
  41278e:	jmp    412931 <main@@Base+0xb861>
  412793:	movabs rax,0x496e636c75646556
  41279d:	cmp    rbp,rax
  4127a0:	jne    41293d <main@@Base+0xb86d>
  4127a6:	lea    rbp,[r8+0x8]
  4127aa:	mov    rcx,rbx
  4127ad:	sub    rcx,rbp
  4127b0:	cmp    rcx,0x8
  4127b4:	jb     41288f <main@@Base+0xb7bf>
  4127ba:	movbe  rcx,QWORD PTR [rbp+0x0]
  4127c0:	jmp    4128fe <main@@Base+0xb82e>
  4127c5:	lea    rdi,[rcx-0x1]
  4127c9:	cmp    rdi,0x6
  4127cd:	ja     412940 <main@@Base+0xb870>
  4127d3:	xor    edx,edx
  4127d5:	lea    rbp,[rip+0x21c44]        # 434420 <_IO_stdin_used@@Base+0x420>
  4127dc:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  4127e1:	add    rdi,rbp
  4127e4:	jmp    rdi
  4127e6:	movsx  rdx,BYTE PTR [rsi+0x1e]
  4127eb:	shl    rdx,0x8
  4127ef:	movsx  rdi,BYTE PTR [rsi+0x1d]
  4127f4:	shl    rdi,0x10
  4127f8:	or     rdx,rdi
  4127fb:	movsx  rdi,BYTE PTR [rsi+0x1c]
  412800:	shl    rdi,0x18
  412804:	or     rdx,rdi
  412807:	movsx  rdi,BYTE PTR [rsi+0x1b]
  41280c:	shl    rdi,0x20
  412810:	or     rdx,rdi
  412813:	movsx  rdi,BYTE PTR [rsi+0x1a]
  412818:	shl    rdi,0x28
  41281c:	or     rdx,rdi
  41281f:	movsx  rdi,BYTE PTR [rsi+0x19]
  412824:	shl    rdi,0x30
  412828:	or     rdx,rdi
  41282b:	movzx  edi,BYTE PTR [rax]
  41282e:	shl    rdi,0x38
  412832:	or     rdi,rdx
  412835:	cmp    rcx,0x4
  412839:	jl     412940 <main@@Base+0xb870>
  41283f:	movabs rcx,0xffffff0000000000
  412849:	and    rdi,rcx
  41284c:	movabs rcx,0x6e756d0000000000
  412856:	cmp    rdi,rcx
  412859:	jne    412940 <main@@Base+0xb870>
  41285f:	lea    rbp,[rsi+0x1c]
  412863:	cmp    BYTE PTR [rsi+0x1b],0x2e
  412867:	cmovne rbp,rax
  41286b:	cmp    rbp,rax
  41286e:	je     412940 <main@@Base+0xb870>
  412874:	mov    rcx,rbx
  412877:	sub    rcx,rbp
  41287a:	cmp    rcx,0x8
  41287e:	jb     412952 <main@@Base+0xb882>
  412884:	movbe  rcx,QWORD PTR [rbp+0x0]
  41288a:	jmp    4129c1 <main@@Base+0xb8f1>
  41288f:	dec    rcx
  412892:	cmp    rcx,0x6
  412896:	ja     41293d <main@@Base+0xb86d>
  41289c:	xor    eax,eax
  41289e:	lea    rdx,[rip+0x21b27]        # 4343cc <_IO_stdin_used@@Base+0x3cc>
  4128a5:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4128a9:	add    rcx,rdx
  4128ac:	jmp    rcx
  4128ae:	movsx  rax,BYTE PTR [r8+0xe]
  4128b3:	shl    rax,0x8
  4128b7:	movsx  rcx,BYTE PTR [r8+0xd]
  4128bc:	shl    rcx,0x10
  4128c0:	or     rax,rcx
  4128c3:	movsx  rcx,BYTE PTR [r8+0xc]
  4128c8:	shl    rcx,0x18
  4128cc:	or     rax,rcx
  4128cf:	movsx  rcx,BYTE PTR [r8+0xb]
  4128d4:	shl    rcx,0x20
  4128d8:	or     rax,rcx
  4128db:	movsx  rcx,BYTE PTR [r8+0xa]
  4128e0:	shl    rcx,0x28
  4128e4:	or     rax,rcx
  4128e7:	movsx  rcx,BYTE PTR [r8+0x9]
  4128ec:	shl    rcx,0x30
  4128f0:	or     rax,rcx
  4128f3:	movzx  ecx,BYTE PTR [rbp+0x0]
  4128f7:	shl    rcx,0x38
  4128fb:	or     rcx,rax
  4128fe:	shr    rcx,0x30
  412902:	cmp    rcx,0x616c
  412909:	jne    41293d <main@@Base+0xb86d>
  41290b:	mov    rdi,r13
  41290e:	mov    rsi,rbp
  412911:	mov    rdx,rbx
  412914:	mov    ecx,0x2
  412919:	mov    rbx,r8
  41291c:	mov    r8,r12
  41291f:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  412924:	mov    rsi,rbx
  412927:	cmp    rax,rbp
  41292a:	je     412940 <main@@Base+0xb870>
  41292c:	xor    ecx,ecx
  41292e:	mov    rsi,rax
  412931:	mov    QWORD PTR [r14],rcx
  412934:	mov    DWORD PTR [r15],0x0
  41293b:	jmp    412940 <main@@Base+0xb870>
  41293d:	mov    rsi,r8
  412940:	mov    rax,rsi
  412943:	add    rsp,0x8
  412947:	pop    rbx
  412948:	pop    r12
  41294a:	pop    r13
  41294c:	pop    r14
  41294e:	pop    r15
  412950:	pop    rbp
  412951:	ret    
  412952:	dec    rcx
  412955:	cmp    rcx,0x6
  412959:	ja     412a03 <main@@Base+0xb933>
  41295f:	xor    eax,eax
  412961:	lea    rdx,[rip+0x21ad4]        # 43443c <_IO_stdin_used@@Base+0x43c>
  412968:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41296c:	add    rcx,rdx
  41296f:	jmp    rcx
  412971:	movsx  rax,BYTE PTR [rbp+0x6]
  412976:	shl    rax,0x8
  41297a:	movsx  rcx,BYTE PTR [rbp+0x5]
  41297f:	shl    rcx,0x10
  412983:	or     rax,rcx
  412986:	movsx  rcx,BYTE PTR [rbp+0x4]
  41298b:	shl    rcx,0x18
  41298f:	or     rax,rcx
  412992:	movsx  rcx,BYTE PTR [rbp+0x3]
  412997:	shl    rcx,0x20
  41299b:	or     rax,rcx
  41299e:	movsx  rcx,BYTE PTR [rbp+0x2]
  4129a3:	shl    rcx,0x28
  4129a7:	or     rax,rcx
  4129aa:	movsx  rcx,BYTE PTR [rbp+0x1]
  4129af:	shl    rcx,0x30
  4129b3:	or     rax,rcx
  4129b6:	movzx  ecx,BYTE PTR [rbp+0x0]
  4129ba:	shl    rcx,0x38
  4129be:	or     rcx,rax
  4129c1:	shr    rcx,0x38
  4129c5:	cmp    rcx,0x78
  4129c9:	jne    412a03 <main@@Base+0xb933>
  4129cb:	mov    rdi,r13
  4129ce:	mov    rsi,rbp
  4129d1:	mov    rdx,rbx
  4129d4:	mov    ecx,0x1
  4129d9:	mov    r8,r12
  4129dc:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4129e1:	mov    rsi,rbp
  4129e4:	cmp    rax,rbp
  4129e7:	je     412940 <main@@Base+0xb870>
  4129ed:	mov    QWORD PTR [r14],0x0
  4129f4:	mov    DWORD PTR [r15],0x0
  4129fb:	mov    rsi,rax
  4129fe:	jmp    412940 <main@@Base+0xb870>
  412a03:	mov    rsi,rbp
  412a06:	jmp    412940 <main@@Base+0xb870>
  412a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  412a10:	push   rbp
  412a11:	push   r15
  412a13:	push   r14
  412a15:	push   r13
  412a17:	push   r12
  412a19:	push   rbx
  412a1a:	sub    rsp,0x38
  412a1e:	mov    r14,r8
  412a21:	mov    rbp,rcx
  412a24:	mov    r12,rdx
  412a27:	mov    rbx,rsi
  412a2a:	mov    r15,rdi
  412a2d:	mov    BYTE PTR [r8],0x0
  412a31:	cmp    rsi,rdx
  412a34:	je     412a4b <main@@Base+0xb97b>
  412a36:	mov    al,BYTE PTR [rbx]
  412a38:	cmp    al,0x2e
  412a3a:	je     412a5c <main@@Base+0xb98c>
  412a3c:	cmp    al,0x22
  412a3e:	jne    412a7b <main@@Base+0xb9ab>
  412a40:	inc    rbx
  412a43:	mov    DWORD PTR [r15+0x14],0x0
  412a4b:	cmp    DWORD PTR [r15+0x14],0x0
  412a50:	je     412a8a <main@@Base+0xb9ba>
  412a52:	cmp    rbx,r12
  412a55:	jne    412aca <main@@Base+0xb9fa>
  412a57:	jmp    412bb3 <main@@Base+0xbae3>
  412a5c:	mov    rdi,r15
  412a5f:	mov    rsi,rbx
  412a62:	mov    rdx,r12
  412a65:	mov    ecx,0x5
  412a6a:	call   424090 <flatcc_json_parser_set_error@@Base>
  412a6f:	mov    rbx,rax
  412a72:	cmp    DWORD PTR [r15+0x14],0x0
  412a77:	jne    412a52 <main@@Base+0xb982>
  412a79:	jmp    412a8a <main@@Base+0xb9ba>
  412a7b:	mov    DWORD PTR [r15+0x14],0x1
  412a83:	cmp    DWORD PTR [r15+0x14],0x0
  412a88:	jne    412a52 <main@@Base+0xb982>
  412a8a:	mov    rax,r12
  412a8d:	sub    rax,rbx
  412a90:	cmp    rax,0x2
  412a94:	jl     412ab0 <main@@Base+0xb9e0>
  412a96:	cmp    BYTE PTR [rbx],0x20
  412a99:	jg     412a52 <main@@Base+0xb982>
  412a9b:	jne    412ab0 <main@@Base+0xb9e0>
  412a9d:	cmp    BYTE PTR [rbx+0x1],0x20
  412aa1:	jle    412ab0 <main@@Base+0xb9e0>
  412aa3:	inc    rbx
  412aa6:	cmp    rbx,r12
  412aa9:	jne    412aca <main@@Base+0xb9fa>
  412aab:	jmp    412bb3 <main@@Base+0xbae3>
  412ab0:	mov    rdi,r15
  412ab3:	mov    rsi,rbx
  412ab6:	mov    rdx,r12
  412ab9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  412abe:	mov    rbx,rax
  412ac1:	cmp    rbx,r12
  412ac4:	je     412bb3 <main@@Base+0xbae3>
  412aca:	lea    rax,[rbp+0x8]
  412ace:	xor    ecx,ecx
  412ad0:	mov    QWORD PTR [rsp+0x20],r14
  412ad5:	mov    QWORD PTR [rsp+0x18],rbp
  412ada:	mov    QWORD PTR [rsp+0x28],rax
  412adf:	mov    DWORD PTR [rsp+0xc],ecx
  412ae3:	mov    rbp,QWORD PTR [rbp+0x0]
  412ae7:	mov    r14,rax
  412aea:	nop    WORD PTR [rax+rax*1+0x0]
  412af0:	mov    rdi,r15
  412af3:	mov    rsi,rbx
  412af6:	mov    rdx,r12
  412af9:	lea    rcx,[rsp+0x14]
  412afe:	lea    r8,[rsp+0x30]
  412b03:	lea    r9,[rsp+0x10]
  412b08:	call   rbp
  412b0a:	cmp    rax,r12
  412b0d:	je     412bb3 <main@@Base+0xbae3>
  412b13:	mov    r13,rax
  412b16:	cmp    rax,rbx
  412b19:	jne    412b30 <main@@Base+0xba60>
  412b1b:	mov    rbp,QWORD PTR [r14]
  412b1e:	add    r14,0x8
  412b22:	test   rbp,rbp
  412b25:	jne    412af0 <main@@Base+0xba20>
  412b27:	jmp    412bb8 <main@@Base+0xbae8>
  412b2c:	nop    DWORD PTR [rax+0x0]
  412b30:	mov    rax,QWORD PTR [rsp+0x30]
  412b35:	cmp    DWORD PTR [rsp+0x14],0x0
  412b3a:	je     412b5e <main@@Base+0xba8e>
  412b3c:	cmp    rax,0x81
  412b42:	mov    r14,QWORD PTR [rsp+0x20]
  412b47:	mov    rbp,QWORD PTR [rsp+0x18]
  412b4c:	jb     412b8e <main@@Base+0xbabe>
  412b4e:	mov    rdi,r15
  412b51:	mov    rsi,r13
  412b54:	mov    rdx,r12
  412b57:	mov    ecx,0x8
  412b5c:	jmp    412b7e <main@@Base+0xbaae>
  412b5e:	cmp    rax,0x80
  412b64:	mov    r14,QWORD PTR [rsp+0x20]
  412b69:	mov    rbp,QWORD PTR [rsp+0x18]
  412b6e:	jb     412b91 <main@@Base+0xbac1>
  412b70:	mov    rdi,r15
  412b73:	mov    rsi,r13
  412b76:	mov    rdx,r12
  412b79:	mov    ecx,0x7
  412b7e:	call   424090 <flatcc_json_parser_set_error@@Base>
  412b83:	mov    ecx,DWORD PTR [rsp+0xc]
  412b87:	cmp    rax,r12
  412b8a:	jne    412b9b <main@@Base+0xbacb>
  412b8c:	jmp    412bb3 <main@@Base+0xbae3>
  412b8e:	neg    rax
  412b91:	mov    ecx,eax
  412b93:	mov    rax,r13
  412b96:	cmp    rax,r12
  412b99:	je     412bb3 <main@@Base+0xbae3>
  412b9b:	add    BYTE PTR [r14],cl
  412b9e:	cmp    DWORD PTR [rsp+0x10],0x0
  412ba3:	mov    rbx,r13
  412ba6:	mov    rax,QWORD PTR [rsp+0x28]
  412bab:	jne    412adf <main@@Base+0xba0f>
  412bb1:	jmp    412bce <main@@Base+0xbafe>
  412bb3:	mov    r13,r12
  412bb6:	jmp    412bce <main@@Base+0xbafe>
  412bb8:	mov    rdi,r15
  412bbb:	mov    rsi,rbx
  412bbe:	mov    rdx,r12
  412bc1:	mov    ecx,0x17
  412bc6:	call   424090 <flatcc_json_parser_set_error@@Base>
  412bcb:	mov    r13,rax
  412bce:	mov    rax,r13
  412bd1:	add    rsp,0x38
  412bd5:	pop    rbx
  412bd6:	pop    r12
  412bd8:	pop    r13
  412bda:	pop    r14
  412bdc:	pop    r15
  412bde:	pop    rbp
  412bdf:	ret    
  412be0:	push   rbp
  412be1:	push   r15
  412be3:	push   r14
  412be5:	push   r13
  412be7:	push   r12
  412be9:	push   rbx
  412bea:	sub    rsp,0x38
  412bee:	mov    r14,r8
  412bf1:	mov    rbp,rcx
  412bf4:	mov    r12,rdx
  412bf7:	mov    rbx,rsi
  412bfa:	mov    r15,rdi
  412bfd:	mov    BYTE PTR [r8],0x0
  412c01:	cmp    rsi,rdx
  412c04:	je     412c1b <main@@Base+0xbb4b>
  412c06:	mov    al,BYTE PTR [rbx]
  412c08:	cmp    al,0x2e
  412c0a:	je     412c2c <main@@Base+0xbb5c>
  412c0c:	cmp    al,0x22
  412c0e:	jne    412c4b <main@@Base+0xbb7b>
  412c10:	inc    rbx
  412c13:	mov    DWORD PTR [r15+0x14],0x0
  412c1b:	cmp    DWORD PTR [r15+0x14],0x0
  412c20:	je     412c5a <main@@Base+0xbb8a>
  412c22:	cmp    rbx,r12
  412c25:	jne    412c9a <main@@Base+0xbbca>
  412c27:	jmp    412d8c <main@@Base+0xbcbc>
  412c2c:	mov    rdi,r15
  412c2f:	mov    rsi,rbx
  412c32:	mov    rdx,r12
  412c35:	mov    ecx,0x5
  412c3a:	call   424090 <flatcc_json_parser_set_error@@Base>
  412c3f:	mov    rbx,rax
  412c42:	cmp    DWORD PTR [r15+0x14],0x0
  412c47:	jne    412c22 <main@@Base+0xbb52>
  412c49:	jmp    412c5a <main@@Base+0xbb8a>
  412c4b:	mov    DWORD PTR [r15+0x14],0x1
  412c53:	cmp    DWORD PTR [r15+0x14],0x0
  412c58:	jne    412c22 <main@@Base+0xbb52>
  412c5a:	mov    rax,r12
  412c5d:	sub    rax,rbx
  412c60:	cmp    rax,0x2
  412c64:	jl     412c80 <main@@Base+0xbbb0>
  412c66:	cmp    BYTE PTR [rbx],0x20
  412c69:	jg     412c22 <main@@Base+0xbb52>
  412c6b:	jne    412c80 <main@@Base+0xbbb0>
  412c6d:	cmp    BYTE PTR [rbx+0x1],0x20
  412c71:	jle    412c80 <main@@Base+0xbbb0>
  412c73:	inc    rbx
  412c76:	cmp    rbx,r12
  412c79:	jne    412c9a <main@@Base+0xbbca>
  412c7b:	jmp    412d8c <main@@Base+0xbcbc>
  412c80:	mov    rdi,r15
  412c83:	mov    rsi,rbx
  412c86:	mov    rdx,r12
  412c89:	call   424110 <flatcc_json_parser_space_ext@@Base>
  412c8e:	mov    rbx,rax
  412c91:	cmp    rbx,r12
  412c94:	je     412d8c <main@@Base+0xbcbc>
  412c9a:	lea    rax,[rbp+0x8]
  412c9e:	mov    DWORD PTR [rsp+0xc],0x0
  412ca6:	mov    QWORD PTR [rsp+0x20],r14
  412cab:	mov    QWORD PTR [rsp+0x18],rbp
  412cb0:	mov    QWORD PTR [rsp+0x28],rax
  412cb5:	mov    rbp,QWORD PTR [rbp+0x0]
  412cb9:	mov    r14,rax
  412cbc:	nop    DWORD PTR [rax+0x0]
  412cc0:	mov    rdi,r15
  412cc3:	mov    rsi,rbx
  412cc6:	mov    rdx,r12
  412cc9:	lea    rcx,[rsp+0x14]
  412cce:	lea    r8,[rsp+0x30]
  412cd3:	lea    r9,[rsp+0x10]
  412cd8:	call   rbp
  412cda:	cmp    rax,r12
  412cdd:	je     412d8c <main@@Base+0xbcbc>
  412ce3:	mov    r13,rax
  412ce6:	cmp    rax,rbx
  412ce9:	jne    412d00 <main@@Base+0xbc30>
  412ceb:	mov    rbp,QWORD PTR [r14]
  412cee:	add    r14,0x8
  412cf2:	test   rbp,rbp
  412cf5:	jne    412cc0 <main@@Base+0xbbf0>
  412cf7:	jmp    412d91 <main@@Base+0xbcc1>
  412cfc:	nop    DWORD PTR [rax+0x0]
  412d00:	cmp    DWORD PTR [rsp+0x14],0x0
  412d05:	je     412d2b <main@@Base+0xbc5b>
  412d07:	mov    rdi,r15
  412d0a:	mov    rsi,r13
  412d0d:	mov    rdx,r12
  412d10:	mov    ecx,0x8
  412d15:	call   424090 <flatcc_json_parser_set_error@@Base>
  412d1a:	mov    r14,QWORD PTR [rsp+0x20]
  412d1f:	mov    rbp,QWORD PTR [rsp+0x18]
  412d24:	cmp    rax,r12
  412d27:	jne    412d70 <main@@Base+0xbca0>
  412d29:	jmp    412d8c <main@@Base+0xbcbc>
  412d2b:	mov    rax,QWORD PTR [rsp+0x30]
  412d30:	cmp    rax,0x100
  412d36:	mov    r14,QWORD PTR [rsp+0x20]
  412d3b:	mov    rbp,QWORD PTR [rsp+0x18]
  412d40:	jb     412d5c <main@@Base+0xbc8c>
  412d42:	mov    rdi,r15
  412d45:	mov    rsi,r13
  412d48:	mov    rdx,r12
  412d4b:	mov    ecx,0x7
  412d50:	call   424090 <flatcc_json_parser_set_error@@Base>
  412d55:	cmp    rax,r12
  412d58:	jne    412d70 <main@@Base+0xbca0>
  412d5a:	jmp    412d8c <main@@Base+0xbcbc>
  412d5c:	mov    DWORD PTR [rsp+0xc],eax
  412d60:	mov    rax,r13
  412d63:	cmp    rax,r12
  412d66:	je     412d8c <main@@Base+0xbcbc>
  412d68:	nop    DWORD PTR [rax+rax*1+0x0]
  412d70:	mov    eax,DWORD PTR [rsp+0xc]
  412d74:	add    BYTE PTR [r14],al
  412d77:	cmp    DWORD PTR [rsp+0x10],0x0
  412d7c:	mov    rbx,r13
  412d7f:	mov    rax,QWORD PTR [rsp+0x28]
  412d84:	jne    412cb5 <main@@Base+0xbbe5>
  412d8a:	jmp    412da7 <main@@Base+0xbcd7>
  412d8c:	mov    r13,r12
  412d8f:	jmp    412da7 <main@@Base+0xbcd7>
  412d91:	mov    rdi,r15
  412d94:	mov    rsi,rbx
  412d97:	mov    rdx,r12
  412d9a:	mov    ecx,0x17
  412d9f:	call   424090 <flatcc_json_parser_set_error@@Base>
  412da4:	mov    r13,rax
  412da7:	mov    rax,r13
  412daa:	add    rsp,0x38
  412dae:	pop    rbx
  412daf:	pop    r12
  412db1:	pop    r13
  412db3:	pop    r14
  412db5:	pop    r15
  412db7:	pop    rbp
  412db8:	ret    
  412db9:	nop    DWORD PTR [rax+0x0]
  412dc0:	push   rbp
  412dc1:	push   r15
  412dc3:	push   r14
  412dc5:	push   r13
  412dc7:	push   r12
  412dc9:	push   rbx
  412dca:	sub    rsp,0x38
  412dce:	mov    r14,r8
  412dd1:	mov    rbp,rcx
  412dd4:	mov    r12,rdx
  412dd7:	mov    rbx,rsi
  412dda:	mov    r15,rdi
  412ddd:	mov    WORD PTR [r8],0x0
  412de3:	cmp    rsi,rdx
  412de6:	je     412dfd <main@@Base+0xbd2d>
  412de8:	mov    al,BYTE PTR [rbx]
  412dea:	cmp    al,0x2e
  412dec:	je     412e0e <main@@Base+0xbd3e>
  412dee:	cmp    al,0x22
  412df0:	jne    412e2d <main@@Base+0xbd5d>
  412df2:	inc    rbx
  412df5:	mov    DWORD PTR [r15+0x14],0x0
  412dfd:	cmp    DWORD PTR [r15+0x14],0x0
  412e02:	je     412e3c <main@@Base+0xbd6c>
  412e04:	cmp    rbx,r12
  412e07:	jne    412e7c <main@@Base+0xbdac>
  412e09:	jmp    412f64 <main@@Base+0xbe94>
  412e0e:	mov    rdi,r15
  412e11:	mov    rsi,rbx
  412e14:	mov    rdx,r12
  412e17:	mov    ecx,0x5
  412e1c:	call   424090 <flatcc_json_parser_set_error@@Base>
  412e21:	mov    rbx,rax
  412e24:	cmp    DWORD PTR [r15+0x14],0x0
  412e29:	jne    412e04 <main@@Base+0xbd34>
  412e2b:	jmp    412e3c <main@@Base+0xbd6c>
  412e2d:	mov    DWORD PTR [r15+0x14],0x1
  412e35:	cmp    DWORD PTR [r15+0x14],0x0
  412e3a:	jne    412e04 <main@@Base+0xbd34>
  412e3c:	mov    rax,r12
  412e3f:	sub    rax,rbx
  412e42:	cmp    rax,0x2
  412e46:	jl     412e62 <main@@Base+0xbd92>
  412e48:	cmp    BYTE PTR [rbx],0x20
  412e4b:	jg     412e04 <main@@Base+0xbd34>
  412e4d:	jne    412e62 <main@@Base+0xbd92>
  412e4f:	cmp    BYTE PTR [rbx+0x1],0x20
  412e53:	jle    412e62 <main@@Base+0xbd92>
  412e55:	inc    rbx
  412e58:	cmp    rbx,r12
  412e5b:	jne    412e7c <main@@Base+0xbdac>
  412e5d:	jmp    412f64 <main@@Base+0xbe94>
  412e62:	mov    rdi,r15
  412e65:	mov    rsi,rbx
  412e68:	mov    rdx,r12
  412e6b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  412e70:	mov    rbx,rax
  412e73:	cmp    rbx,r12
  412e76:	je     412f64 <main@@Base+0xbe94>
  412e7c:	lea    rax,[rbp+0x8]
  412e80:	xor    ecx,ecx
  412e82:	mov    QWORD PTR [rsp+0x20],r14
  412e87:	mov    QWORD PTR [rsp+0x18],rbp
  412e8c:	mov    QWORD PTR [rsp+0x28],rax
  412e91:	mov    DWORD PTR [rsp+0xc],ecx
  412e95:	mov    rbp,QWORD PTR [rbp+0x0]
  412e99:	mov    r14,rax
  412e9c:	nop    DWORD PTR [rax+0x0]
  412ea0:	mov    rdi,r15
  412ea3:	mov    rsi,rbx
  412ea6:	mov    rdx,r12
  412ea9:	lea    rcx,[rsp+0x14]
  412eae:	lea    r8,[rsp+0x30]
  412eb3:	lea    r9,[rsp+0x10]
  412eb8:	call   rbp
  412eba:	cmp    rax,r12
  412ebd:	je     412f64 <main@@Base+0xbe94>
  412ec3:	mov    r13,rax
  412ec6:	cmp    rax,rbx
  412ec9:	jne    412ee0 <main@@Base+0xbe10>
  412ecb:	mov    rbp,QWORD PTR [r14]
  412ece:	add    r14,0x8
  412ed2:	test   rbp,rbp
  412ed5:	jne    412ea0 <main@@Base+0xbdd0>
  412ed7:	jmp    412f69 <main@@Base+0xbe99>
  412edc:	nop    DWORD PTR [rax+0x0]
  412ee0:	mov    rax,QWORD PTR [rsp+0x30]
  412ee5:	cmp    DWORD PTR [rsp+0x14],0x0
  412eea:	je     412f0e <main@@Base+0xbe3e>
  412eec:	cmp    rax,0x8001
  412ef2:	mov    r14,QWORD PTR [rsp+0x20]
  412ef7:	mov    rbp,QWORD PTR [rsp+0x18]
  412efc:	jb     412f3e <main@@Base+0xbe6e>
  412efe:	mov    rdi,r15
  412f01:	mov    rsi,r13
  412f04:	mov    rdx,r12
  412f07:	mov    ecx,0x8
  412f0c:	jmp    412f2e <main@@Base+0xbe5e>
  412f0e:	cmp    rax,0x8000
  412f14:	mov    r14,QWORD PTR [rsp+0x20]
  412f19:	mov    rbp,QWORD PTR [rsp+0x18]
  412f1e:	jb     412f41 <main@@Base+0xbe71>
  412f20:	mov    rdi,r15
  412f23:	mov    rsi,r13
  412f26:	mov    rdx,r12
  412f29:	mov    ecx,0x7
  412f2e:	call   424090 <flatcc_json_parser_set_error@@Base>
  412f33:	mov    ecx,DWORD PTR [rsp+0xc]
  412f37:	cmp    rax,r12
  412f3a:	jne    412f4b <main@@Base+0xbe7b>
  412f3c:	jmp    412f64 <main@@Base+0xbe94>
  412f3e:	neg    rax
  412f41:	mov    ecx,eax
  412f43:	mov    rax,r13
  412f46:	cmp    rax,r12
  412f49:	je     412f64 <main@@Base+0xbe94>
  412f4b:	add    WORD PTR [r14],cx
  412f4f:	cmp    DWORD PTR [rsp+0x10],0x0
  412f54:	mov    rbx,r13
  412f57:	mov    rax,QWORD PTR [rsp+0x28]
  412f5c:	jne    412e91 <main@@Base+0xbdc1>
  412f62:	jmp    412f7f <main@@Base+0xbeaf>
  412f64:	mov    r13,r12
  412f67:	jmp    412f7f <main@@Base+0xbeaf>
  412f69:	mov    rdi,r15
  412f6c:	mov    rsi,rbx
  412f6f:	mov    rdx,r12
  412f72:	mov    ecx,0x17
  412f77:	call   424090 <flatcc_json_parser_set_error@@Base>
  412f7c:	mov    r13,rax
  412f7f:	mov    rax,r13
  412f82:	add    rsp,0x38
  412f86:	pop    rbx
  412f87:	pop    r12
  412f89:	pop    r13
  412f8b:	pop    r14
  412f8d:	pop    r15
  412f8f:	pop    rbp
  412f90:	ret    
  412f91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  412fa0:	push   rbp
  412fa1:	push   r15
  412fa3:	push   r14
  412fa5:	push   r13
  412fa7:	push   r12
  412fa9:	push   rbx
  412faa:	sub    rsp,0x18
  412fae:	mov    r12,rdx
  412fb1:	mov    r14,rdi
  412fb4:	cmp    rsi,rdx
  412fb7:	je     412fe7 <main@@Base+0xbf17>
  412fb9:	cmp    BYTE PTR [rsi],0x7b
  412fbc:	jne    412fe7 <main@@Base+0xbf17>
  412fbe:	mov    r15,rcx
  412fc1:	lea    rax,[rsi+0x1]
  412fc5:	mov    rcx,r12
  412fc8:	sub    rcx,rax
  412fcb:	cmp    rcx,0x2
  412fcf:	jl     413005 <main@@Base+0xbf35>
  412fd1:	cmp    BYTE PTR [rax],0x20
  412fd4:	jg     413013 <main@@Base+0xbf43>
  412fd6:	jne    413005 <main@@Base+0xbf35>
  412fd8:	cmp    BYTE PTR [rsi+0x2],0x20
  412fdc:	jle    413005 <main@@Base+0xbf35>
  412fde:	add    rsi,0x2
  412fe2:	mov    rax,rsi
  412fe5:	jmp    413013 <main@@Base+0xbf43>
  412fe7:	mov    rdi,r14
  412fea:	mov    rdx,r12
  412fed:	mov    ecx,0x15
  412ff2:	add    rsp,0x18
  412ff6:	pop    rbx
  412ff7:	pop    r12
  412ff9:	pop    r13
  412ffb:	pop    r14
  412ffd:	pop    r15
  412fff:	pop    rbp
  413000:	jmp    424090 <flatcc_json_parser_set_error@@Base>
  413005:	mov    rdi,r14
  413008:	mov    rsi,rax
  41300b:	mov    rdx,r12
  41300e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413013:	mov    rsi,r12
  413016:	cmp    rax,r12
  413019:	je     413064 <main@@Base+0xbf94>
  41301b:	cmp    BYTE PTR [rax],0x7d
  41301e:	jne    413061 <main@@Base+0xbf91>
  413020:	lea    rcx,[rax+0x1]
  413024:	mov    rdx,r12
  413027:	sub    rdx,rcx
  41302a:	cmp    rdx,0x2
  41302e:	jl     413045 <main@@Base+0xbf75>
  413030:	cmp    BYTE PTR [rcx],0x20
  413033:	jg     41366d <main@@Base+0xc59d>
  413039:	jne    413045 <main@@Base+0xbf75>
  41303b:	cmp    BYTE PTR [rax+0x2],0x20
  41303f:	jg     413639 <main@@Base+0xc569>
  413045:	mov    rdi,r14
  413048:	mov    rsi,rcx
  41304b:	mov    rdx,r12
  41304e:	add    rsp,0x18
  413052:	pop    rbx
  413053:	pop    r12
  413055:	pop    r13
  413057:	pop    r14
  413059:	pop    r15
  41305b:	pop    rbp
  41305c:	jmp    424110 <flatcc_json_parser_space_ext@@Base>
  413061:	mov    rsi,rax
  413064:	movabs rbx,0xff00000000000000
  41306e:	xchg   ax,ax
  413070:	mov    r13,r12
  413073:	cmp    rsi,r12
  413076:	je     4130bb <main@@Base+0xbfeb>
  413078:	movzx  eax,BYTE PTR [rsi]
  41307b:	cmp    al,0x2e
  41307d:	je     413090 <main@@Base+0xbfc0>
  41307f:	cmp    al,0x22
  413081:	jne    4130b0 <main@@Base+0xbfe0>
  413083:	inc    rsi
  413086:	mov    DWORD PTR [r14+0x14],0x0
  41308e:	jmp    4130b8 <main@@Base+0xbfe8>
  413090:	mov    rdi,r14
  413093:	mov    rdx,r12
  413096:	mov    ecx,0x5
  41309b:	call   424090 <flatcc_json_parser_set_error@@Base>
  4130a0:	mov    r13,rax
  4130a3:	jmp    4130bb <main@@Base+0xbfeb>
  4130a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130af:	nop
  4130b0:	mov    DWORD PTR [r14+0x14],0x1
  4130b8:	mov    r13,rsi
  4130bb:	mov    rax,r12
  4130be:	sub    rax,r13
  4130c1:	cmp    rax,0x8
  4130c5:	jb     4130e0 <main@@Base+0xc010>
  4130c7:	movbe  rcx,QWORD PTR [r13+0x0]
  4130cd:	jmp    413162 <main@@Base+0xc092>
  4130d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130dc:	nop    DWORD PTR [rax+0x0]
  4130e0:	lea    rcx,[rax-0x1]
  4130e4:	cmp    rcx,0x6
  4130e8:	ja     4134c0 <main@@Base+0xc3f0>
  4130ee:	mov    r9,rbx
  4130f1:	lea    rdx,[rip+0x213ec]        # 4344e4 <_IO_stdin_used@@Base+0x4e4>
  4130f8:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  4130fc:	add    rbx,rdx
  4130ff:	xor    r8d,r8d
  413102:	xor    ecx,ecx
  413104:	xor    esi,esi
  413106:	xor    edi,edi
  413108:	xor    ebp,ebp
  41310a:	xor    edx,edx
  41310c:	jmp    rbx
  41310e:	movsx  r8,BYTE PTR [r13+0x6]
  413113:	shl    r8,0x8
  413117:	movsx  rcx,BYTE PTR [r13+0x5]
  41311c:	shl    rcx,0x10
  413120:	or     rcx,r8
  413123:	movsx  rsi,BYTE PTR [r13+0x4]
  413128:	shl    rsi,0x18
  41312c:	or     rsi,rcx
  41312f:	movsx  rdi,BYTE PTR [r13+0x3]
  413134:	shl    rdi,0x20
  413138:	or     rdi,rsi
  41313b:	movsx  rbp,BYTE PTR [r13+0x2]
  413140:	shl    rbp,0x28
  413144:	or     rbp,rdi
  413147:	movsx  rdx,BYTE PTR [r13+0x1]
  41314c:	shl    rdx,0x30
  413150:	or     rdx,rbp
  413153:	movzx  ecx,BYTE PTR [r13+0x0]
  413158:	shl    rcx,0x38
  41315c:	or     rcx,rdx
  41315f:	mov    rbx,r9
  413162:	and    rcx,rbx
  413165:	movabs rdx,0x6100000000000000
  41316f:	cmp    rcx,rdx
  413172:	je     4131c0 <main@@Base+0xc0f0>
  413174:	movabs rdx,0x6200000000000000
  41317e:	cmp    rcx,rdx
  413181:	jne    4134c0 <main@@Base+0xc3f0>
  413187:	mov    rbp,r13
  41318a:	cmp    rax,0x2
  41318e:	jl     41335e <main@@Base+0xc28e>
  413194:	cmp    DWORD PTR [r14+0x14],0x0
  413199:	movzx  eax,BYTE PTR [r13+0x1]
  41319e:	je     4131f6 <main@@Base+0xc126>
  4131a0:	cmp    al,0x21
  4131a2:	jl     4131af <main@@Base+0xc0df>
  4131a4:	mov    rbp,r13
  4131a7:	cmp    al,0x3a
  4131a9:	jne    41335e <main@@Base+0xc28e>
  4131af:	lea    rsi,[r13+0x1]
  4131b3:	mov    DWORD PTR [r14+0x14],0x0
  4131bb:	jmp    413205 <main@@Base+0xc135>
  4131bd:	nop    DWORD PTR [rax]
  4131c0:	mov    rbp,r13
  4131c3:	cmp    rax,0x2
  4131c7:	jl     413458 <main@@Base+0xc388>
  4131cd:	cmp    DWORD PTR [r14+0x14],0x0
  4131d2:	movzx  eax,BYTE PTR [r13+0x1]
  4131d7:	je     41322b <main@@Base+0xc15b>
  4131d9:	cmp    al,0x21
  4131db:	jl     4131e8 <main@@Base+0xc118>
  4131dd:	mov    rbp,r13
  4131e0:	cmp    al,0x3a
  4131e2:	jne    413458 <main@@Base+0xc388>
  4131e8:	lea    rsi,[r13+0x1]
  4131ec:	mov    DWORD PTR [r14+0x14],0x0
  4131f4:	jmp    41323a <main@@Base+0xc16a>
  4131f6:	mov    rbp,r13
  4131f9:	cmp    al,0x22
  4131fb:	jne    41335e <main@@Base+0xc28e>
  413201:	lea    rsi,[r13+0x2]
  413205:	mov    rax,r12
  413208:	sub    rax,rsi
  41320b:	cmp    rax,0x2
  41320f:	jl     413268 <main@@Base+0xc198>
  413211:	cmp    BYTE PTR [rsi],0x20
  413214:	jg     413276 <main@@Base+0xc1a6>
  413216:	jne    413268 <main@@Base+0xc198>
  413218:	cmp    BYTE PTR [rsi+0x1],0x20
  41321c:	jle    413268 <main@@Base+0xc198>
  41321e:	inc    rsi
  413221:	cmp    rsi,r12
  413224:	jne    41327f <main@@Base+0xc1af>
  413226:	jmp    413326 <main@@Base+0xc256>
  41322b:	mov    rbp,r13
  41322e:	cmp    al,0x22
  413230:	jne    413458 <main@@Base+0xc388>
  413236:	lea    rsi,[r13+0x2]
  41323a:	mov    rax,r12
  41323d:	sub    rax,rsi
  413240:	cmp    rax,0x2
  413244:	jl     4132cb <main@@Base+0xc1fb>
  41324a:	cmp    BYTE PTR [rsi],0x20
  41324d:	jg     4132d9 <main@@Base+0xc209>
  413253:	jne    4132cb <main@@Base+0xc1fb>
  413255:	cmp    BYTE PTR [rsi+0x1],0x20
  413259:	jle    4132cb <main@@Base+0xc1fb>
  41325b:	inc    rsi
  41325e:	cmp    rsi,r12
  413261:	jne    4132de <main@@Base+0xc20e>
  413263:	jmp    413338 <main@@Base+0xc268>
  413268:	mov    rdi,r14
  41326b:	mov    rdx,r12
  41326e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413273:	mov    rsi,rax
  413276:	cmp    rsi,r12
  413279:	je     413326 <main@@Base+0xc256>
  41327f:	cmp    BYTE PTR [rsi],0x3a
  413282:	jne    413326 <main@@Base+0xc256>
  413288:	lea    rbp,[rsi+0x1]
  41328c:	mov    rax,r12
  41328f:	sub    rax,rbp
  413292:	cmp    rax,0x2
  413296:	jl     41334d <main@@Base+0xc27d>
  41329c:	cmp    BYTE PTR [rbp+0x0],0x20
  4132a0:	jg     41335e <main@@Base+0xc28e>
  4132a6:	jne    41334d <main@@Base+0xc27d>
  4132ac:	cmp    BYTE PTR [rsi+0x2],0x20
  4132b0:	jle    41334d <main@@Base+0xc27d>
  4132b6:	add    rsi,0x2
  4132ba:	mov    rbp,rsi
  4132bd:	cmp    r13,rbp
  4132c0:	jne    413367 <main@@Base+0xc297>
  4132c6:	jmp    4134c0 <main@@Base+0xc3f0>
  4132cb:	mov    rdi,r14
  4132ce:	mov    rdx,r12
  4132d1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4132d6:	mov    rsi,rax
  4132d9:	cmp    rsi,r12
  4132dc:	je     413338 <main@@Base+0xc268>
  4132de:	cmp    BYTE PTR [rsi],0x3a
  4132e1:	jne    413338 <main@@Base+0xc268>
  4132e3:	lea    rbp,[rsi+0x1]
  4132e7:	mov    rax,r12
  4132ea:	sub    rax,rbp
  4132ed:	cmp    rax,0x2
  4132f1:	jl     413447 <main@@Base+0xc377>
  4132f7:	cmp    BYTE PTR [rbp+0x0],0x20
  4132fb:	jg     413458 <main@@Base+0xc388>
  413301:	jne    413447 <main@@Base+0xc377>
  413307:	cmp    BYTE PTR [rsi+0x2],0x20
  41330b:	jle    413447 <main@@Base+0xc377>
  413311:	add    rsi,0x2
  413315:	mov    rbp,rsi
  413318:	cmp    r13,rbp
  41331b:	jne    41345d <main@@Base+0xc38d>
  413321:	jmp    4134c0 <main@@Base+0xc3f0>
  413326:	mov    rdi,r14
  413329:	mov    rdx,r12
  41332c:	mov    ecx,0x4
  413331:	call   424090 <flatcc_json_parser_set_error@@Base>
  413336:	jmp    41335b <main@@Base+0xc28b>
  413338:	mov    rdi,r14
  41333b:	mov    rdx,r12
  41333e:	mov    ecx,0x4
  413343:	call   424090 <flatcc_json_parser_set_error@@Base>
  413348:	jmp    413455 <main@@Base+0xc385>
  41334d:	mov    rdi,r14
  413350:	mov    rsi,rbp
  413353:	mov    rdx,r12
  413356:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41335b:	mov    rbp,rax
  41335e:	cmp    r13,rbp
  413361:	je     4134c0 <main@@Base+0xc3f0>
  413367:	mov    QWORD PTR [rsp+0x10],0x0
  413370:	mov    DWORD PTR [rsp+0xc],0x0
  413378:	mov    BYTE PTR [rsp+0xa],0x0
  41337d:	cmp    rbp,r12
  413380:	je     4133c4 <main@@Base+0xc2f4>
  413382:	mov    rdi,r14
  413385:	mov    rsi,rbp
  413388:	mov    rdx,r12
  41338b:	lea    rcx,[rsp+0xc]
  413390:	lea    r8,[rsp+0x10]
  413395:	call   425c50 <flatcc_json_parser_integer@@Base>
  41339a:	cmp    rax,rbp
  41339d:	je     4133d0 <main@@Base+0xc300>
  41339f:	mov    rcx,QWORD PTR [rsp+0x10]
  4133a4:	cmp    DWORD PTR [rsp+0xc],0x0
  4133a9:	je     4133dc <main@@Base+0xc30c>
  4133ab:	cmp    rcx,0x81
  4133b2:	jb     413401 <main@@Base+0xc331>
  4133b4:	mov    rdi,r14
  4133b7:	mov    rsi,rax
  4133ba:	mov    rdx,r12
  4133bd:	mov    ecx,0x8
  4133c2:	jmp    4133f3 <main@@Base+0xc323>
  4133c4:	xor    ecx,ecx
  4133c6:	mov    rax,r12
  4133c9:	cmp    rbp,rax
  4133cc:	jne    41343e <main@@Base+0xc36e>
  4133ce:	jmp    41340d <main@@Base+0xc33d>
  4133d0:	xor    ecx,ecx
  4133d2:	mov    rax,rbp
  4133d5:	cmp    rbp,rax
  4133d8:	jne    41343e <main@@Base+0xc36e>
  4133da:	jmp    41340d <main@@Base+0xc33d>
  4133dc:	cmp    rcx,0x80
  4133e3:	jb     413404 <main@@Base+0xc334>
  4133e5:	mov    rdi,r14
  4133e8:	mov    rsi,rax
  4133eb:	mov    rdx,r12
  4133ee:	mov    ecx,0x7
  4133f3:	call   424090 <flatcc_json_parser_set_error@@Base>
  4133f8:	xor    ecx,ecx
  4133fa:	cmp    rbp,rax
  4133fd:	jne    41343e <main@@Base+0xc36e>
  4133ff:	jmp    41340d <main@@Base+0xc33d>
  413401:	neg    rcx
  413404:	mov    BYTE PTR [rsp+0xa],cl
  413408:	cmp    rbp,rax
  41340b:	jne    41343e <main@@Base+0xc36e>
  41340d:	mov    rdi,r14
  413410:	mov    rsi,rbp
  413413:	mov    rdx,r12
  413416:	lea    rcx,[rip+0x30003]        # 443420 <__data_start@@Base+0x370>
  41341d:	lea    r8,[rsp+0xa]
  413422:	call   412a10 <main@@Base+0xb940>
  413427:	cmp    rax,rbp
  41342a:	je     41367f <main@@Base+0xc5af>
  413430:	cmp    rax,r12
  413433:	je     41367f <main@@Base+0xc5af>
  413439:	movzx  ecx,BYTE PTR [rsp+0xa]
  41343e:	mov    BYTE PTR [r15+0x2],cl
  413442:	jmp    413560 <main@@Base+0xc490>
  413447:	mov    rdi,r14
  41344a:	mov    rsi,rbp
  41344d:	mov    rdx,r12
  413450:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413455:	mov    rbp,rax
  413458:	cmp    r13,rbp
  41345b:	je     4134c0 <main@@Base+0xc3f0>
  41345d:	mov    QWORD PTR [rsp+0x10],0x0
  413466:	mov    DWORD PTR [rsp+0xc],0x0
  41346e:	mov    WORD PTR [rsp+0xa],0x0
  413475:	cmp    rbp,r12
  413478:	je     4134d3 <main@@Base+0xc403>
  41347a:	mov    rdi,r14
  41347d:	mov    rsi,rbp
  413480:	mov    rdx,r12
  413483:	lea    rcx,[rsp+0xc]
  413488:	lea    r8,[rsp+0x10]
  41348d:	call   425c50 <flatcc_json_parser_integer@@Base>
  413492:	cmp    rax,rbp
  413495:	je     4134df <main@@Base+0xc40f>
  413497:	mov    rcx,QWORD PTR [rsp+0x10]
  41349c:	cmp    DWORD PTR [rsp+0xc],0x0
  4134a1:	je     4134eb <main@@Base+0xc41b>
  4134a3:	cmp    rcx,0x8001
  4134aa:	jb     413510 <main@@Base+0xc440>
  4134ac:	mov    rdi,r14
  4134af:	mov    rsi,rax
  4134b2:	mov    rdx,r12
  4134b5:	mov    ecx,0x8
  4134ba:	jmp    413502 <main@@Base+0xc432>
  4134bc:	nop    DWORD PTR [rax+0x0]
  4134c0:	mov    rdi,r14
  4134c3:	mov    rsi,r13
  4134c6:	mov    rdx,r12
  4134c9:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  4134ce:	jmp    413560 <main@@Base+0xc490>
  4134d3:	xor    ecx,ecx
  4134d5:	mov    rax,r12
  4134d8:	cmp    rbp,rax
  4134db:	jne    41354e <main@@Base+0xc47e>
  4134dd:	jmp    41351d <main@@Base+0xc44d>
  4134df:	xor    ecx,ecx
  4134e1:	mov    rax,rbp
  4134e4:	cmp    rbp,rax
  4134e7:	jne    41354e <main@@Base+0xc47e>
  4134e9:	jmp    41351d <main@@Base+0xc44d>
  4134eb:	cmp    rcx,0x8000
  4134f2:	jb     413513 <main@@Base+0xc443>
  4134f4:	mov    rdi,r14
  4134f7:	mov    rsi,rax
  4134fa:	mov    rdx,r12
  4134fd:	mov    ecx,0x7
  413502:	call   424090 <flatcc_json_parser_set_error@@Base>
  413507:	xor    ecx,ecx
  413509:	cmp    rbp,rax
  41350c:	jne    41354e <main@@Base+0xc47e>
  41350e:	jmp    41351d <main@@Base+0xc44d>
  413510:	neg    rcx
  413513:	mov    WORD PTR [rsp+0xa],cx
  413518:	cmp    rbp,rax
  41351b:	jne    41354e <main@@Base+0xc47e>
  41351d:	mov    rdi,r14
  413520:	mov    rsi,rbp
  413523:	mov    rdx,r12
  413526:	lea    rcx,[rip+0x2ff13]        # 443440 <__data_start@@Base+0x390>
  41352d:	lea    r8,[rsp+0xa]
  413532:	call   412dc0 <main@@Base+0xbcf0>
  413537:	cmp    rax,rbp
  41353a:	je     41367f <main@@Base+0xc5af>
  413540:	cmp    rax,r12
  413543:	je     41367f <main@@Base+0xc5af>
  413549:	movzx  ecx,WORD PTR [rsp+0xa]
  41354e:	mov    WORD PTR [r15],cx
  413552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41355c:	nop    DWORD PTR [rax+0x0]
  413560:	mov    rcx,r12
  413563:	sub    rcx,rax
  413566:	cmp    rcx,0x2
  41356a:	jl     413590 <main@@Base+0xc4c0>
  41356c:	cmp    BYTE PTR [rax],0x20
  41356f:	jg     41359e <main@@Base+0xc4ce>
  413571:	jne    413590 <main@@Base+0xc4c0>
  413573:	cmp    BYTE PTR [rax+0x1],0x20
  413577:	jle    413590 <main@@Base+0xc4c0>
  413579:	inc    rax
  41357c:	cmp    rax,r12
  41357f:	jne    4135a3 <main@@Base+0xc4d3>
  413581:	jmp    413612 <main@@Base+0xc542>
  413586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413590:	mov    rdi,r14
  413593:	mov    rsi,rax
  413596:	mov    rdx,r12
  413599:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41359e:	cmp    rax,r12
  4135a1:	je     413612 <main@@Base+0xc542>
  4135a3:	movzx  ecx,BYTE PTR [rax]
  4135a6:	cmp    cl,0x2c
  4135a9:	jne    413617 <main@@Base+0xc547>
  4135ab:	lea    rsi,[rax+0x1]
  4135af:	mov    rcx,r12
  4135b2:	sub    rcx,rsi
  4135b5:	cmp    rcx,0x2
  4135b9:	jl     4135d0 <main@@Base+0xc500>
  4135bb:	cmp    BYTE PTR [rsi],0x20
  4135be:	jg     4135de <main@@Base+0xc50e>
  4135c0:	jne    4135d0 <main@@Base+0xc500>
  4135c2:	cmp    BYTE PTR [rax+0x2],0x20
  4135c6:	jle    4135d0 <main@@Base+0xc500>
  4135c8:	add    rax,0x2
  4135cc:	jmp    4135db <main@@Base+0xc50b>
  4135ce:	xchg   ax,ax
  4135d0:	mov    rdi,r14
  4135d3:	mov    rdx,r12
  4135d6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4135db:	mov    rsi,rax
  4135de:	cmp    rsi,r12
  4135e1:	je     41364f <main@@Base+0xc57f>
  4135e3:	cmp    BYTE PTR [rsi],0x7d
  4135e6:	jne    413070 <main@@Base+0xbfa0>
  4135ec:	lea    rcx,[rsi+0x1]
  4135f0:	mov    rax,r12
  4135f3:	sub    rax,rcx
  4135f6:	cmp    rax,0x2
  4135fa:	jl     41363f <main@@Base+0xc56f>
  4135fc:	cmp    BYTE PTR [rcx],0x20
  4135ff:	jg     41366d <main@@Base+0xc59d>
  413601:	jne    41363f <main@@Base+0xc56f>
  413603:	cmp    BYTE PTR [rsi+0x2],0x20
  413607:	jle    41363f <main@@Base+0xc56f>
  413609:	add    rsi,0x2
  41360d:	mov    rcx,rsi
  413610:	jmp    41366d <main@@Base+0xc59d>
  413612:	mov    rcx,r12
  413615:	jmp    41366d <main@@Base+0xc59d>
  413617:	cmp    cl,0x7d
  41361a:	jne    413657 <main@@Base+0xc587>
  41361c:	lea    rcx,[rax+0x1]
  413620:	mov    rdx,r12
  413623:	sub    rdx,rcx
  413626:	cmp    rdx,0x2
  41362a:	jl     41363f <main@@Base+0xc56f>
  41362c:	cmp    BYTE PTR [rcx],0x20
  41362f:	jg     41366d <main@@Base+0xc59d>
  413631:	jne    41363f <main@@Base+0xc56f>
  413633:	cmp    BYTE PTR [rax+0x2],0x20
  413637:	jle    41363f <main@@Base+0xc56f>
  413639:	add    rax,0x2
  41363d:	jmp    41366a <main@@Base+0xc59a>
  41363f:	mov    rdi,r14
  413642:	mov    rsi,rcx
  413645:	mov    rdx,r12
  413648:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41364d:	jmp    41366a <main@@Base+0xc59a>
  41364f:	mov    rdi,r14
  413652:	mov    rsi,r12
  413655:	jmp    41365d <main@@Base+0xc58d>
  413657:	mov    rdi,r14
  41365a:	mov    rsi,rax
  41365d:	mov    rdx,r12
  413660:	mov    ecx,0xa
  413665:	call   424090 <flatcc_json_parser_set_error@@Base>
  41366a:	mov    rcx,rax
  41366d:	mov    rax,rcx
  413670:	add    rsp,0x18
  413674:	pop    rbx
  413675:	pop    r12
  413677:	pop    r13
  413679:	pop    r14
  41367b:	pop    r15
  41367d:	pop    rbp
  41367e:	ret    
  41367f:	mov    rdi,r14
  413682:	mov    rsi,rax
  413685:	mov    rdx,r12
  413688:	mov    ecx,0x21
  41368d:	jmp    413665 <main@@Base+0xc595>
  41368f:	nop
  413690:	push   rbp
  413691:	push   r15
  413693:	push   r14
  413695:	push   r13
  413697:	push   r12
  413699:	push   rbx
  41369a:	sub    rsp,0x28
  41369e:	mov    r13,rdx
  4136a1:	mov    rbx,rsi
  4136a4:	mov    r14,rdi
  4136a7:	mov    DWORD PTR [r8],0x0
  4136ae:	cmp    cl,0x4
  4136b1:	ja     4136f0 <main@@Base+0xc620>
  4136b3:	mov    r15,r8
  4136b6:	mov    eax,ecx
  4136b8:	lea    rcx,[rip+0x20e41]        # 434500 <_IO_stdin_used@@Base+0x500>
  4136bf:	movsxd rax,DWORD PTR [rcx+rax*4]
  4136c3:	add    rax,rcx
  4136c6:	jmp    rax
  4136c8:	mov    rax,r13
  4136cb:	sub    rax,rbx
  4136ce:	cmp    rax,0x4
  4136d2:	jl     4136e0 <main@@Base+0xc610>
  4136d4:	cmp    DWORD PTR [rbx],0x6c6c756e
  4136da:	je     41387c <main@@Base+0xc7ac>
  4136e0:	mov    rdi,r14
  4136e3:	mov    rsi,rbx
  4136e6:	mov    rdx,r13
  4136e9:	mov    ecx,0x1a
  4136ee:	jmp    413709 <main@@Base+0xc639>
  4136f0:	test   BYTE PTR [r14+0x10],0x1
  4136f5:	jne    413860 <main@@Base+0xc790>
  4136fb:	mov    rdi,r14
  4136fe:	mov    rsi,rbx
  413701:	mov    rdx,r13
  413704:	mov    ecx,0xf
  413709:	add    rsp,0x28
  41370d:	pop    rbx
  41370e:	pop    r12
  413710:	pop    r13
  413712:	pop    r14
  413714:	pop    r15
  413716:	pop    rbp
  413717:	jmp    424090 <flatcc_json_parser_set_error@@Base>
  41371c:	mov    rdi,r14
  41371f:	mov    rsi,rbx
  413722:	mov    rdx,r13
  413725:	mov    rcx,r15
  413728:	call   407c50 <main@@Base+0xb80>
  41372d:	jmp    413838 <main@@Base+0xc768>
  413732:	mov    DWORD PTR [r15],0x0
  413739:	mov    rdi,QWORD PTR [r14]
  41373c:	mov    esi,0x4
  413741:	call   41f6c0 <flatcc_builder_start_table@@Base>
  413746:	test   eax,eax
  413748:	jne    413825 <main@@Base+0xc755>
  41374e:	cmp    rbx,r13
  413751:	je     413804 <main@@Base+0xc734>
  413757:	cmp    BYTE PTR [rbx],0x7b
  41375a:	jne    413804 <main@@Base+0xc734>
  413760:	lea    rax,[rbx+0x1]
  413764:	mov    rcx,r13
  413767:	sub    rcx,rax
  41376a:	cmp    rcx,0x2
  41376e:	jl     413892 <main@@Base+0xc7c2>
  413774:	cmp    BYTE PTR [rax],0x20
  413777:	jg     4138a0 <main@@Base+0xc7d0>
  41377d:	jne    413892 <main@@Base+0xc7c2>
  413783:	cmp    BYTE PTR [rbx+0x2],0x20
  413787:	jle    413892 <main@@Base+0xc7c2>
  41378d:	add    rbx,0x2
  413791:	mov    rax,rbx
  413794:	jmp    4138a0 <main@@Base+0xc7d0>
  413799:	mov    DWORD PTR [r15],0x0
  4137a0:	mov    rdi,QWORD PTR [r14]
  4137a3:	xor    esi,esi
  4137a5:	call   41f6c0 <flatcc_builder_start_table@@Base>
  4137aa:	test   eax,eax
  4137ac:	jne    413825 <main@@Base+0xc755>
  4137ae:	cmp    rbx,r13
  4137b1:	je     413804 <main@@Base+0xc734>
  4137b3:	cmp    BYTE PTR [rbx],0x7b
  4137b6:	jne    413804 <main@@Base+0xc734>
  4137b8:	lea    rax,[rbx+0x1]
  4137bc:	mov    rcx,r13
  4137bf:	sub    rcx,rax
  4137c2:	cmp    rcx,0x2
  4137c6:	jl     4138e7 <main@@Base+0xc817>
  4137cc:	cmp    BYTE PTR [rax],0x20
  4137cf:	jg     4138f5 <main@@Base+0xc825>
  4137d5:	jne    4138e7 <main@@Base+0xc817>
  4137db:	cmp    BYTE PTR [rbx+0x2],0x20
  4137df:	jle    4138e7 <main@@Base+0xc817>
  4137e5:	add    rbx,0x2
  4137e9:	mov    rax,rbx
  4137ec:	jmp    4138f5 <main@@Base+0xc825>
  4137f1:	mov    rdi,r14
  4137f4:	mov    rsi,rbx
  4137f7:	mov    rdx,r13
  4137fa:	mov    rcx,r15
  4137fd:	call   415d60 <main@@Base+0xec90>
  413802:	jmp    413838 <main@@Base+0xc768>
  413804:	mov    rdi,r14
  413807:	mov    rsi,rbx
  41380a:	mov    rdx,r13
  41380d:	mov    ecx,0x15
  413812:	call   424090 <flatcc_json_parser_set_error@@Base>
  413817:	mov    rbx,rax
  41381a:	cmp    DWORD PTR [r14+0x20],0x0
  41381f:	je     4143d0 <main@@Base+0xd300>
  413825:	mov    rdi,r14
  413828:	mov    rsi,rbx
  41382b:	mov    rdx,r13
  41382e:	mov    ecx,0x21
  413833:	call   424090 <flatcc_json_parser_set_error@@Base>
  413838:	mov    rbx,rax
  41383b:	cmp    DWORD PTR [r14+0x20],0x0
  413840:	jne    413880 <main@@Base+0xc7b0>
  413842:	cmp    DWORD PTR [r15],0x0
  413846:	jne    413880 <main@@Base+0xc7b0>
  413848:	mov    rdi,r14
  41384b:	mov    rsi,rbx
  41384e:	mov    rdx,r13
  413851:	mov    ecx,0x21
  413856:	call   424090 <flatcc_json_parser_set_error@@Base>
  41385b:	mov    rbx,rax
  41385e:	jmp    413880 <main@@Base+0xc7b0>
  413860:	mov    rdi,r14
  413863:	mov    rsi,rbx
  413866:	mov    rdx,r13
  413869:	add    rsp,0x28
  41386d:	pop    rbx
  41386e:	pop    r12
  413870:	pop    r13
  413872:	pop    r14
  413874:	pop    r15
  413876:	pop    rbp
  413877:	jmp    424810 <flatcc_json_parser_generic_json@@Base>
  41387c:	add    rbx,0x4
  413880:	mov    rax,rbx
  413883:	add    rsp,0x28
  413887:	pop    rbx
  413888:	pop    r12
  41388a:	pop    r13
  41388c:	pop    r14
  41388e:	pop    r15
  413890:	pop    rbp
  413891:	ret    
  413892:	mov    rdi,r14
  413895:	mov    rsi,rax
  413898:	mov    rdx,r13
  41389b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4138a0:	mov    rsi,r13
  4138a3:	cmp    rax,r13
  4138a6:	je     4139e8 <main@@Base+0xc918>
  4138ac:	cmp    BYTE PTR [rax],0x7d
  4138af:	jne    4139e5 <main@@Base+0xc915>
  4138b5:	lea    rbx,[rax+0x1]
  4138b9:	mov    rcx,r13
  4138bc:	sub    rcx,rbx
  4138bf:	cmp    rcx,0x2
  4138c3:	jl     4144a3 <main@@Base+0xd3d3>
  4138c9:	cmp    BYTE PTR [rbx],0x20
  4138cc:	jg     41381a <main@@Base+0xc74a>
  4138d2:	jne    4144a3 <main@@Base+0xd3d3>
  4138d8:	cmp    BYTE PTR [rax+0x2],0x20
  4138dc:	jle    4144a3 <main@@Base+0xd3d3>
  4138e2:	jmp    41445e <main@@Base+0xd38e>
  4138e7:	mov    rdi,r14
  4138ea:	mov    rsi,rax
  4138ed:	mov    rdx,r13
  4138f0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4138f5:	mov    rsi,r13
  4138f8:	cmp    rax,r13
  4138fb:	je     413909 <main@@Base+0xc839>
  4138fd:	cmp    BYTE PTR [rax],0x7d
  413900:	je     41443d <main@@Base+0xd36d>
  413906:	mov    rsi,rax
  413909:	mov    rax,r13
  41390c:	cmp    rsi,r13
  41390f:	je     413946 <main@@Base+0xc876>
  413911:	movzx  eax,BYTE PTR [rsi]
  413914:	cmp    al,0x2e
  413916:	je     413929 <main@@Base+0xc859>
  413918:	cmp    al,0x22
  41391a:	jne    41393b <main@@Base+0xc86b>
  41391c:	inc    rsi
  41391f:	mov    DWORD PTR [r14+0x14],0x0
  413927:	jmp    413943 <main@@Base+0xc873>
  413929:	mov    rdi,r14
  41392c:	mov    rdx,r13
  41392f:	mov    ecx,0x5
  413934:	call   424090 <flatcc_json_parser_set_error@@Base>
  413939:	jmp    413946 <main@@Base+0xc876>
  41393b:	mov    DWORD PTR [r14+0x14],0x1
  413943:	mov    rax,rsi
  413946:	mov    rdi,r14
  413949:	mov    rsi,rax
  41394c:	mov    rdx,r13
  41394f:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  413954:	mov    rcx,r13
  413957:	sub    rcx,rax
  41395a:	cmp    rcx,0x2
  41395e:	jl     41397a <main@@Base+0xc8aa>
  413960:	cmp    BYTE PTR [rax],0x20
  413963:	jg     413988 <main@@Base+0xc8b8>
  413965:	jne    41397a <main@@Base+0xc8aa>
  413967:	cmp    BYTE PTR [rax+0x1],0x20
  41396b:	jle    41397a <main@@Base+0xc8aa>
  41396d:	inc    rax
  413970:	cmp    rax,r13
  413973:	jne    413991 <main@@Base+0xc8c1>
  413975:	jmp    4143c2 <main@@Base+0xd2f2>
  41397a:	mov    rdi,r14
  41397d:	mov    rsi,rax
  413980:	mov    rdx,r13
  413983:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413988:	cmp    rax,r13
  41398b:	je     4143c2 <main@@Base+0xd2f2>
  413991:	movzx  ecx,BYTE PTR [rax]
  413994:	cmp    cl,0x2c
  413997:	jne    414434 <main@@Base+0xd364>
  41399d:	lea    rsi,[rax+0x1]
  4139a1:	mov    rcx,r13
  4139a4:	sub    rcx,rsi
  4139a7:	cmp    rcx,0x2
  4139ab:	jl     4139c0 <main@@Base+0xc8f0>
  4139ad:	cmp    BYTE PTR [rsi],0x20
  4139b0:	jg     4139ce <main@@Base+0xc8fe>
  4139b2:	jne    4139c0 <main@@Base+0xc8f0>
  4139b4:	cmp    BYTE PTR [rax+0x2],0x20
  4139b8:	jle    4139c0 <main@@Base+0xc8f0>
  4139ba:	add    rax,0x2
  4139be:	jmp    4139cb <main@@Base+0xc8fb>
  4139c0:	mov    rdi,r14
  4139c3:	mov    rdx,r13
  4139c6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4139cb:	mov    rsi,rax
  4139ce:	cmp    rsi,r13
  4139d1:	je     4143e8 <main@@Base+0xd318>
  4139d7:	cmp    BYTE PTR [rsi],0x7d
  4139da:	jne    413909 <main@@Base+0xc839>
  4139e0:	jmp    4143f3 <main@@Base+0xd323>
  4139e5:	mov    rsi,rax
  4139e8:	movabs rax,0x636f6c6f72000000
  4139f2:	add    rax,0x320000
  4139f8:	mov    QWORD PTR [rsp+0x20],rax
  4139fd:	mov    r8,r13
  413a00:	cmp    rsi,r13
  413a03:	je     413a3d <main@@Base+0xc96d>
  413a05:	movzx  eax,BYTE PTR [rsi]
  413a08:	cmp    al,0x2e
  413a0a:	je     413a1d <main@@Base+0xc94d>
  413a0c:	cmp    al,0x22
  413a0e:	jne    413a32 <main@@Base+0xc962>
  413a10:	inc    rsi
  413a13:	mov    DWORD PTR [r14+0x14],0x0
  413a1b:	jmp    413a3a <main@@Base+0xc96a>
  413a1d:	mov    rdi,r14
  413a20:	mov    rdx,r13
  413a23:	mov    ecx,0x5
  413a28:	call   424090 <flatcc_json_parser_set_error@@Base>
  413a2d:	mov    r8,rax
  413a30:	jmp    413a3d <main@@Base+0xc96d>
  413a32:	mov    DWORD PTR [r14+0x14],0x1
  413a3a:	mov    r8,rsi
  413a3d:	mov    r12,r13
  413a40:	sub    r12,r8
  413a43:	cmp    r12,0x8
  413a47:	jb     413a50 <main@@Base+0xc980>
  413a49:	movbe  rbp,QWORD PTR [r8]
  413a4e:	jmp    413acb <main@@Base+0xc9fb>
  413a50:	lea    rax,[r12-0x1]
  413a55:	cmp    rax,0x6
  413a59:	ja     41425b <main@@Base+0xd18b>
  413a5f:	lea    rcx,[rip+0x20aae]        # 434514 <_IO_stdin_used@@Base+0x514>
  413a66:	movsxd rbp,DWORD PTR [rcx+rax*4]
  413a6a:	add    rbp,rcx
  413a6d:	xor    ecx,ecx
  413a6f:	xor    eax,eax
  413a71:	xor    edx,edx
  413a73:	xor    esi,esi
  413a75:	xor    edi,edi
  413a77:	xor    ebx,ebx
  413a79:	jmp    rbp
  413a7b:	movsx  rcx,BYTE PTR [r8+0x6]
  413a80:	shl    rcx,0x8
  413a84:	movsx  rax,BYTE PTR [r8+0x5]
  413a89:	shl    rax,0x10
  413a8d:	or     rax,rcx
  413a90:	movsx  rdx,BYTE PTR [r8+0x4]
  413a95:	shl    rdx,0x18
  413a99:	or     rdx,rax
  413a9c:	movsx  rsi,BYTE PTR [r8+0x3]
  413aa1:	shl    rsi,0x20
  413aa5:	or     rsi,rdx
  413aa8:	movsx  rdi,BYTE PTR [r8+0x2]
  413aad:	shl    rdi,0x28
  413ab1:	or     rdi,rsi
  413ab4:	movsx  rbx,BYTE PTR [r8+0x1]
  413ab9:	shl    rbx,0x30
  413abd:	or     rbx,rdi
  413ac0:	movzx  ebp,BYTE PTR [r8]
  413ac4:	shl    rbp,0x38
  413ac8:	or     rbp,rbx
  413acb:	mov    rax,rbp
  413ace:	and    rax,0xffffffffffff0000
  413ad4:	cmp    rax,QWORD PTR [rsp+0x20]
  413ad9:	jne    413b11 <main@@Base+0xca41>
  413adb:	mov    rbx,r8
  413ade:	cmp    r12,0x7
  413ae2:	jl     413cba <main@@Base+0xcbea>
  413ae8:	cmp    DWORD PTR [r14+0x14],0x0
  413aed:	movzx  eax,BYTE PTR [r8+0x6]
  413af2:	je     413b6a <main@@Base+0xca9a>
  413af4:	cmp    al,0x21
  413af6:	jl     413b03 <main@@Base+0xca33>
  413af8:	mov    rbx,r8
  413afb:	cmp    al,0x3a
  413afd:	jne    413cba <main@@Base+0xcbea>
  413b03:	lea    rsi,[r8+0x6]
  413b07:	mov    DWORD PTR [r14+0x14],0x0
  413b0f:	jmp    413b79 <main@@Base+0xcaa9>
  413b11:	mov    rax,rbp
  413b14:	and    rax,0xffffffffff000000
  413b1a:	movabs rcx,0x636f6c6f72000000
  413b24:	cmp    rax,rcx
  413b27:	jne    413e59 <main@@Base+0xcd89>
  413b2d:	mov    rbx,r8
  413b30:	cmp    r12,0x6
  413b34:	jl     413de1 <main@@Base+0xcd11>
  413b3a:	cmp    DWORD PTR [r14+0x14],0x0
  413b3f:	movzx  eax,BYTE PTR [r8+0x5]
  413b44:	je     413c07 <main@@Base+0xcb37>
  413b4a:	cmp    al,0x21
  413b4c:	jl     413b59 <main@@Base+0xca89>
  413b4e:	mov    rbx,r8
  413b51:	cmp    al,0x3a
  413b53:	jne    413de1 <main@@Base+0xcd11>
  413b59:	lea    rsi,[r8+0x5]
  413b5d:	mov    DWORD PTR [r14+0x14],0x0
  413b65:	jmp    413c16 <main@@Base+0xcb46>
  413b6a:	mov    rbx,r8
  413b6d:	cmp    al,0x22
  413b6f:	jne    413cba <main@@Base+0xcbea>
  413b75:	lea    rsi,[r8+0x7]
  413b79:	mov    rax,r13
  413b7c:	sub    rax,rsi
  413b7f:	cmp    rax,0x2
  413b83:	mov    QWORD PTR [rsp+0x18],r8
  413b88:	jl     413ba1 <main@@Base+0xcad1>
  413b8a:	cmp    BYTE PTR [rsi],0x20
  413b8d:	jg     413baf <main@@Base+0xcadf>
  413b8f:	jne    413ba1 <main@@Base+0xcad1>
  413b91:	cmp    BYTE PTR [rsi+0x1],0x20
  413b95:	jle    413ba1 <main@@Base+0xcad1>
  413b97:	inc    rsi
  413b9a:	cmp    rsi,r13
  413b9d:	jne    413bb4 <main@@Base+0xcae4>
  413b9f:	jmp    413bf2 <main@@Base+0xcb22>
  413ba1:	mov    rdi,r14
  413ba4:	mov    rdx,r13
  413ba7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413bac:	mov    rsi,rax
  413baf:	cmp    rsi,r13
  413bb2:	je     413bf2 <main@@Base+0xcb22>
  413bb4:	cmp    BYTE PTR [rsi],0x3a
  413bb7:	jne    413bf2 <main@@Base+0xcb22>
  413bb9:	lea    rbx,[rsi+0x1]
  413bbd:	mov    rax,r13
  413bc0:	sub    rax,rbx
  413bc3:	cmp    rax,0x2
  413bc7:	jl     413ca4 <main@@Base+0xcbd4>
  413bcd:	cmp    BYTE PTR [rbx],0x20
  413bd0:	jg     413cb5 <main@@Base+0xcbe5>
  413bd6:	jne    413ca4 <main@@Base+0xcbd4>
  413bdc:	cmp    BYTE PTR [rsi+0x2],0x20
  413be0:	jle    413ca4 <main@@Base+0xcbd4>
  413be6:	add    rsi,0x2
  413bea:	mov    rbx,rsi
  413bed:	jmp    413cb5 <main@@Base+0xcbe5>
  413bf2:	mov    rdi,r14
  413bf5:	mov    rdx,r13
  413bf8:	mov    ecx,0x4
  413bfd:	call   424090 <flatcc_json_parser_set_error@@Base>
  413c02:	jmp    413cb2 <main@@Base+0xcbe2>
  413c07:	mov    rbx,r8
  413c0a:	cmp    al,0x22
  413c0c:	jne    413de1 <main@@Base+0xcd11>
  413c12:	lea    rsi,[r8+0x6]
  413c16:	mov    rax,r13
  413c19:	sub    rax,rsi
  413c1c:	cmp    rax,0x2
  413c20:	mov    QWORD PTR [rsp+0x18],r8
  413c25:	jl     413c3e <main@@Base+0xcb6e>
  413c27:	cmp    BYTE PTR [rsi],0x20
  413c2a:	jg     413c4c <main@@Base+0xcb7c>
  413c2c:	jne    413c3e <main@@Base+0xcb6e>
  413c2e:	cmp    BYTE PTR [rsi+0x1],0x20
  413c32:	jle    413c3e <main@@Base+0xcb6e>
  413c34:	inc    rsi
  413c37:	cmp    rsi,r13
  413c3a:	jne    413c51 <main@@Base+0xcb81>
  413c3c:	jmp    413c8f <main@@Base+0xcbbf>
  413c3e:	mov    rdi,r14
  413c41:	mov    rdx,r13
  413c44:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413c49:	mov    rsi,rax
  413c4c:	cmp    rsi,r13
  413c4f:	je     413c8f <main@@Base+0xcbbf>
  413c51:	cmp    BYTE PTR [rsi],0x3a
  413c54:	jne    413c8f <main@@Base+0xcbbf>
  413c56:	lea    rbx,[rsi+0x1]
  413c5a:	mov    rax,r13
  413c5d:	sub    rax,rbx
  413c60:	cmp    rax,0x2
  413c64:	jl     413dcb <main@@Base+0xccfb>
  413c6a:	cmp    BYTE PTR [rbx],0x20
  413c6d:	jg     413ddc <main@@Base+0xcd0c>
  413c73:	jne    413dcb <main@@Base+0xccfb>
  413c79:	cmp    BYTE PTR [rsi+0x2],0x20
  413c7d:	jle    413dcb <main@@Base+0xccfb>
  413c83:	add    rsi,0x2
  413c87:	mov    rbx,rsi
  413c8a:	jmp    413ddc <main@@Base+0xcd0c>
  413c8f:	mov    rdi,r14
  413c92:	mov    rdx,r13
  413c95:	mov    ecx,0x4
  413c9a:	call   424090 <flatcc_json_parser_set_error@@Base>
  413c9f:	jmp    413dd9 <main@@Base+0xcd09>
  413ca4:	mov    rdi,r14
  413ca7:	mov    rsi,rbx
  413caa:	mov    rdx,r13
  413cad:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413cb2:	mov    rbx,rax
  413cb5:	mov    r8,QWORD PTR [rsp+0x18]
  413cba:	cmp    r8,rbx
  413cbd:	je     413e59 <main@@Base+0xcd89>
  413cc3:	mov    QWORD PTR [rsp+0x10],0x0
  413ccc:	mov    DWORD PTR [rsp+0xc],0x0
  413cd4:	mov    BYTE PTR [rsp+0xb],0x0
  413cd9:	cmp    rbx,r13
  413cdc:	je     413d23 <main@@Base+0xcc53>
  413cde:	mov    rdi,r14
  413ce1:	mov    rsi,rbx
  413ce4:	mov    rdx,r13
  413ce7:	lea    rcx,[rsp+0xc]
  413cec:	lea    r8,[rsp+0x10]
  413cf1:	call   425c50 <flatcc_json_parser_integer@@Base>
  413cf6:	cmp    rax,rbx
  413cf9:	je     413d30 <main@@Base+0xcc60>
  413cfb:	mov    rbp,rax
  413cfe:	mov    r12,QWORD PTR [rsp+0x10]
  413d03:	cmp    DWORD PTR [rsp+0xc],0x0
  413d08:	je     413d3d <main@@Base+0xcc6d>
  413d0a:	cmp    r12,0x81
  413d11:	jb     413d66 <main@@Base+0xcc96>
  413d13:	mov    rdi,r14
  413d16:	mov    rsi,rbp
  413d19:	mov    rdx,r13
  413d1c:	mov    ecx,0x8
  413d21:	jmp    413d54 <main@@Base+0xcc84>
  413d23:	xor    r12d,r12d
  413d26:	mov    rbp,r13
  413d29:	cmp    rbx,rbp
  413d2c:	jne    413da8 <main@@Base+0xccd8>
  413d2e:	jmp    413d73 <main@@Base+0xcca3>
  413d30:	xor    r12d,r12d
  413d33:	mov    rbp,rbx
  413d36:	cmp    rbx,rbp
  413d39:	jne    413da8 <main@@Base+0xccd8>
  413d3b:	jmp    413d73 <main@@Base+0xcca3>
  413d3d:	cmp    r12,0x80
  413d44:	jb     413d69 <main@@Base+0xcc99>
  413d46:	mov    rdi,r14
  413d49:	mov    rsi,rbp
  413d4c:	mov    rdx,r13
  413d4f:	mov    ecx,0x7
  413d54:	call   424090 <flatcc_json_parser_set_error@@Base>
  413d59:	mov    rbp,rax
  413d5c:	xor    r12d,r12d
  413d5f:	cmp    rbx,rbp
  413d62:	jne    413da8 <main@@Base+0xccd8>
  413d64:	jmp    413d73 <main@@Base+0xcca3>
  413d66:	neg    r12
  413d69:	mov    BYTE PTR [rsp+0xb],r12b
  413d6e:	cmp    rbx,rbp
  413d71:	jne    413da8 <main@@Base+0xccd8>
  413d73:	mov    rdi,r14
  413d76:	mov    rsi,rbx
  413d79:	mov    rdx,r13
  413d7c:	lea    rcx,[rip+0x2f6dd]        # 443460 <__data_start@@Base+0x3b0>
  413d83:	lea    r8,[rsp+0xb]
  413d88:	call   412a10 <main@@Base+0xb940>
  413d8d:	mov    rbp,rax
  413d90:	cmp    rax,rbx
  413d93:	je     4144b6 <main@@Base+0xd3e6>
  413d99:	cmp    rbp,r13
  413d9c:	je     4144b6 <main@@Base+0xd3e6>
  413da2:	movzx  r12d,BYTE PTR [rsp+0xb]
  413da8:	cmp    r12b,0x2
  413dac:	jne    413db9 <main@@Base+0xcce9>
  413dae:	test   BYTE PTR [r14+0x10],0x2
  413db3:	je     414320 <main@@Base+0xd250>
  413db9:	mov    rdi,QWORD PTR [r14]
  413dbc:	mov    edx,0x1
  413dc1:	mov    esi,0x1
  413dc6:	jmp    41430a <main@@Base+0xd23a>
  413dcb:	mov    rdi,r14
  413dce:	mov    rsi,rbx
  413dd1:	mov    rdx,r13
  413dd4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  413dd9:	mov    rbx,rax
  413ddc:	mov    r8,QWORD PTR [rsp+0x18]
  413de1:	cmp    r8,rbx
  413de4:	je     413e59 <main@@Base+0xcd89>
  413de6:	mov    QWORD PTR [rsp+0x10],0x0
  413def:	mov    DWORD PTR [rsp+0xc],0x0
  413df7:	mov    BYTE PTR [rsp+0xb],0x0
  413dfc:	cmp    rbx,r13
  413dff:	je     413ee5 <main@@Base+0xce15>
  413e05:	mov    rdi,r14
  413e08:	mov    rsi,rbx
  413e0b:	mov    rdx,r13
  413e0e:	lea    rcx,[rsp+0xc]
  413e13:	lea    r8,[rsp+0x10]
  413e18:	call   425c50 <flatcc_json_parser_integer@@Base>
  413e1d:	cmp    rax,rbx
  413e20:	je     413f32 <main@@Base+0xce62>
  413e26:	mov    rbp,rax
  413e29:	mov    r12,QWORD PTR [rsp+0x10]
  413e2e:	cmp    DWORD PTR [rsp+0xc],0x0
  413e33:	je     413f7c <main@@Base+0xceac>
  413e39:	cmp    r12,0x81
  413e40:	jb     413fa5 <main@@Base+0xced5>
  413e46:	mov    rdi,r14
  413e49:	mov    rsi,rbp
  413e4c:	mov    rdx,r13
  413e4f:	mov    ecx,0x8
  413e54:	jmp    413f93 <main@@Base+0xcec3>
  413e59:	mov    rax,rbp
  413e5c:	shr    rax,0x28
  413e60:	cmp    rax,0x756332
  413e66:	jne    413e9e <main@@Base+0xcdce>
  413e68:	mov    rbx,r8
  413e6b:	cmp    r12,0x4
  413e6f:	jl     414083 <main@@Base+0xcfb3>
  413e75:	cmp    DWORD PTR [r14+0x14],0x0
  413e7a:	movzx  eax,BYTE PTR [r8+0x3]
  413e7f:	je     413ef9 <main@@Base+0xce29>
  413e81:	cmp    al,0x21
  413e83:	jl     413e90 <main@@Base+0xcdc0>
  413e85:	mov    rbx,r8
  413e88:	cmp    al,0x3a
  413e8a:	jne    414083 <main@@Base+0xcfb3>
  413e90:	lea    rsi,[r8+0x3]
  413e94:	mov    DWORD PTR [r14+0x14],0x0
  413e9c:	jmp    413f08 <main@@Base+0xce38>
  413e9e:	shr    rbp,0x30
  413ea2:	cmp    rbp,0x7563
  413ea9:	jne    41425b <main@@Base+0xd18b>
  413eaf:	mov    rbx,r8
  413eb2:	cmp    r12,0x3
  413eb6:	jl     414204 <main@@Base+0xd134>
  413ebc:	cmp    DWORD PTR [r14+0x14],0x0
  413ec1:	movzx  eax,BYTE PTR [r8+0x2]
  413ec6:	je     413f43 <main@@Base+0xce73>
  413ec8:	cmp    al,0x21
  413eca:	jl     413ed7 <main@@Base+0xce07>
  413ecc:	mov    rbx,r8
  413ecf:	cmp    al,0x3a
  413ed1:	jne    414204 <main@@Base+0xd134>
  413ed7:	lea    rsi,[r8+0x2]
  413edb:	mov    DWORD PTR [r14+0x14],0x0
  413ee3:	jmp    413f52 <main@@Base+0xce82>
  413ee5:	xor    r12d,r12d
  413ee8:	mov    rbp,r13
  413eeb:	cmp    rbx,rbp
  413eee:	jne    413fe7 <main@@Base+0xcf17>
  413ef4:	jmp    413fb2 <main@@Base+0xcee2>
  413ef9:	mov    rbx,r8
  413efc:	cmp    al,0x22
  413efe:	jne    414083 <main@@Base+0xcfb3>
  413f04:	lea    rsi,[r8+0x4]
  413f08:	mov    rax,r13
  413f0b:	sub    rax,rsi
  413f0e:	cmp    rax,0x2
  413f12:	jl     41401c <main@@Base+0xcf4c>
  413f18:	cmp    BYTE PTR [rsi],0x20
  413f1b:	jle    414007 <main@@Base+0xcf37>
  413f21:	mov    rbp,r8
  413f24:	cmp    rsi,r13
  413f27:	jne    414032 <main@@Base+0xcf62>
  413f2d:	jmp    41405d <main@@Base+0xcf8d>
  413f32:	xor    r12d,r12d
  413f35:	mov    rbp,rbx
  413f38:	cmp    rbx,rbp
  413f3b:	jne    413fe7 <main@@Base+0xcf17>
  413f41:	jmp    413fb2 <main@@Base+0xcee2>
  413f43:	mov    rbx,r8
  413f46:	cmp    al,0x22
  413f48:	jne    414204 <main@@Base+0xd134>
  413f4e:	lea    rsi,[r8+0x3]
  413f52:	mov    rax,r13
  413f55:	sub    rax,rsi
  413f58:	cmp    rax,0x2
  413f5c:	jl     41419d <main@@Base+0xd0cd>
  413f62:	cmp    BYTE PTR [rsi],0x20
  413f65:	jle    414188 <main@@Base+0xd0b8>
  413f6b:	mov    rbp,r8
  413f6e:	cmp    rsi,r13
  413f71:	jne    4141b3 <main@@Base+0xd0e3>
  413f77:	jmp    4141de <main@@Base+0xd10e>
  413f7c:	cmp    r12,0x80
  413f83:	jb     413fa8 <main@@Base+0xced8>
  413f85:	mov    rdi,r14
  413f88:	mov    rsi,rbp
  413f8b:	mov    rdx,r13
  413f8e:	mov    ecx,0x7
  413f93:	call   424090 <flatcc_json_parser_set_error@@Base>
  413f98:	mov    rbp,rax
  413f9b:	xor    r12d,r12d
  413f9e:	cmp    rbx,rbp
  413fa1:	jne    413fe7 <main@@Base+0xcf17>
  413fa3:	jmp    413fb2 <main@@Base+0xcee2>
  413fa5:	neg    r12
  413fa8:	mov    BYTE PTR [rsp+0xb],r12b
  413fad:	cmp    rbx,rbp
  413fb0:	jne    413fe7 <main@@Base+0xcf17>
  413fb2:	mov    rdi,r14
  413fb5:	mov    rsi,rbx
  413fb8:	mov    rdx,r13
  413fbb:	lea    rcx,[rip+0x2f4be]        # 443480 <__data_start@@Base+0x3d0>
  413fc2:	lea    r8,[rsp+0xb]
  413fc7:	call   412a10 <main@@Base+0xb940>
  413fcc:	mov    rbp,rax
  413fcf:	cmp    rax,rbx
  413fd2:	je     4144b6 <main@@Base+0xd3e6>
  413fd8:	cmp    rbp,r13
  413fdb:	je     4144b6 <main@@Base+0xd3e6>
  413fe1:	movzx  r12d,BYTE PTR [rsp+0xb]
  413fe7:	cmp    r12b,0x2
  413feb:	jne    413ff8 <main@@Base+0xcf28>
  413fed:	test   BYTE PTR [r14+0x10],0x2
  413ff2:	je     414320 <main@@Base+0xd250>
  413ff8:	mov    rdi,QWORD PTR [r14]
  413ffb:	mov    edx,0x1
  414000:	xor    esi,esi
  414002:	jmp    41430a <main@@Base+0xd23a>
  414007:	jne    41401c <main@@Base+0xcf4c>
  414009:	cmp    BYTE PTR [rsi+0x1],0x20
  41400d:	jle    41401c <main@@Base+0xcf4c>
  41400f:	mov    rbp,r8
  414012:	inc    rsi
  414015:	cmp    rsi,r13
  414018:	jne    414032 <main@@Base+0xcf62>
  41401a:	jmp    41405d <main@@Base+0xcf8d>
  41401c:	mov    rbp,r8
  41401f:	mov    rdi,r14
  414022:	mov    rdx,r13
  414025:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41402a:	mov    rsi,rax
  41402d:	cmp    rsi,r13
  414030:	je     41405d <main@@Base+0xcf8d>
  414032:	cmp    BYTE PTR [rsi],0x3a
  414035:	jne    41405d <main@@Base+0xcf8d>
  414037:	lea    rbx,[rsi+0x1]
  41403b:	mov    rax,r13
  41403e:	sub    rax,rbx
  414041:	cmp    rax,0x2
  414045:	jl     41406f <main@@Base+0xcf9f>
  414047:	cmp    BYTE PTR [rbx],0x20
  41404a:	jg     414080 <main@@Base+0xcfb0>
  41404c:	jne    41406f <main@@Base+0xcf9f>
  41404e:	cmp    BYTE PTR [rsi+0x2],0x20
  414052:	jle    41406f <main@@Base+0xcf9f>
  414054:	add    rsi,0x2
  414058:	mov    rbx,rsi
  41405b:	jmp    414080 <main@@Base+0xcfb0>
  41405d:	mov    rdi,r14
  414060:	mov    rdx,r13
  414063:	mov    ecx,0x4
  414068:	call   424090 <flatcc_json_parser_set_error@@Base>
  41406d:	jmp    41407d <main@@Base+0xcfad>
  41406f:	mov    rdi,r14
  414072:	mov    rsi,rbx
  414075:	mov    rdx,r13
  414078:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41407d:	mov    rbx,rax
  414080:	mov    r8,rbp
  414083:	cmp    r8,rbx
  414086:	je     41425b <main@@Base+0xd18b>
  41408c:	mov    QWORD PTR [rsp+0x10],0x0
  414095:	mov    DWORD PTR [rsp+0xc],0x0
  41409d:	mov    BYTE PTR [rsp+0xb],0x0
  4140a2:	cmp    rbx,r13
  4140a5:	je     4140de <main@@Base+0xd00e>
  4140a7:	mov    rdi,r14
  4140aa:	mov    rsi,rbx
  4140ad:	mov    rdx,r13
  4140b0:	lea    rcx,[rsp+0xc]
  4140b5:	lea    r8,[rsp+0x10]
  4140ba:	call   425c50 <flatcc_json_parser_integer@@Base>
  4140bf:	cmp    rax,rbx
  4140c2:	je     4140eb <main@@Base+0xd01b>
  4140c4:	mov    rbp,rax
  4140c7:	cmp    DWORD PTR [rsp+0xc],0x0
  4140cc:	je     4140f8 <main@@Base+0xd028>
  4140ce:	mov    rdi,r14
  4140d1:	mov    rsi,rbp
  4140d4:	mov    rdx,r13
  4140d7:	mov    ecx,0x8
  4140dc:	jmp    414114 <main@@Base+0xd044>
  4140de:	xor    r12d,r12d
  4140e1:	mov    rbp,r13
  4140e4:	cmp    rbx,rbp
  4140e7:	jne    414159 <main@@Base+0xd089>
  4140e9:	jmp    414124 <main@@Base+0xd054>
  4140eb:	xor    r12d,r12d
  4140ee:	mov    rbp,rbx
  4140f1:	cmp    rbx,rbp
  4140f4:	jne    414159 <main@@Base+0xd089>
  4140f6:	jmp    414124 <main@@Base+0xd054>
  4140f8:	mov    r12,QWORD PTR [rsp+0x10]
  4140fd:	cmp    r12,0x100
  414104:	jb     41417c <main@@Base+0xd0ac>
  414106:	mov    rdi,r14
  414109:	mov    rsi,rbp
  41410c:	mov    rdx,r13
  41410f:	mov    ecx,0x7
  414114:	call   424090 <flatcc_json_parser_set_error@@Base>
  414119:	mov    rbp,rax
  41411c:	xor    r12d,r12d
  41411f:	cmp    rbx,rbp
  414122:	jne    414159 <main@@Base+0xd089>
  414124:	mov    rdi,r14
  414127:	mov    rsi,rbx
  41412a:	mov    rdx,r13
  41412d:	lea    rcx,[rip+0x2f36c]        # 4434a0 <__data_start@@Base+0x3f0>
  414134:	lea    r8,[rsp+0xb]
  414139:	call   412be0 <main@@Base+0xbb10>
  41413e:	mov    rbp,rax
  414141:	cmp    rax,rbx
  414144:	je     4144b6 <main@@Base+0xd3e6>
  41414a:	cmp    rbp,r13
  41414d:	je     4144b6 <main@@Base+0xd3e6>
  414153:	movzx  r12d,BYTE PTR [rsp+0xb]
  414159:	cmp    r12b,0x2
  41415d:	jne    41416a <main@@Base+0xd09a>
  41415f:	test   BYTE PTR [r14+0x10],0x2
  414164:	je     414320 <main@@Base+0xd250>
  41416a:	mov    rdi,QWORD PTR [r14]
  41416d:	mov    edx,0x1
  414172:	mov    esi,0x3
  414177:	jmp    41430a <main@@Base+0xd23a>
  41417c:	mov    BYTE PTR [rsp+0xb],r12b
  414181:	cmp    rbx,rbp
  414184:	jne    414159 <main@@Base+0xd089>
  414186:	jmp    414124 <main@@Base+0xd054>
  414188:	jne    41419d <main@@Base+0xd0cd>
  41418a:	cmp    BYTE PTR [rsi+0x1],0x20
  41418e:	jle    41419d <main@@Base+0xd0cd>
  414190:	mov    rbp,r8
  414193:	inc    rsi
  414196:	cmp    rsi,r13
  414199:	jne    4141b3 <main@@Base+0xd0e3>
  41419b:	jmp    4141de <main@@Base+0xd10e>
  41419d:	mov    rbp,r8
  4141a0:	mov    rdi,r14
  4141a3:	mov    rdx,r13
  4141a6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4141ab:	mov    rsi,rax
  4141ae:	cmp    rsi,r13
  4141b1:	je     4141de <main@@Base+0xd10e>
  4141b3:	cmp    BYTE PTR [rsi],0x3a
  4141b6:	jne    4141de <main@@Base+0xd10e>
  4141b8:	lea    rbx,[rsi+0x1]
  4141bc:	mov    rax,r13
  4141bf:	sub    rax,rbx
  4141c2:	cmp    rax,0x2
  4141c6:	jl     4141f0 <main@@Base+0xd120>
  4141c8:	cmp    BYTE PTR [rbx],0x20
  4141cb:	jg     414201 <main@@Base+0xd131>
  4141cd:	jne    4141f0 <main@@Base+0xd120>
  4141cf:	cmp    BYTE PTR [rsi+0x2],0x20
  4141d3:	jle    4141f0 <main@@Base+0xd120>
  4141d5:	add    rsi,0x2
  4141d9:	mov    rbx,rsi
  4141dc:	jmp    414201 <main@@Base+0xd131>
  4141de:	mov    rdi,r14
  4141e1:	mov    rdx,r13
  4141e4:	mov    ecx,0x4
  4141e9:	call   424090 <flatcc_json_parser_set_error@@Base>
  4141ee:	jmp    4141fe <main@@Base+0xd12e>
  4141f0:	mov    rdi,r14
  4141f3:	mov    rsi,rbx
  4141f6:	mov    rdx,r13
  4141f9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4141fe:	mov    rbx,rax
  414201:	mov    r8,rbp
  414204:	cmp    r8,rbx
  414207:	je     41425b <main@@Base+0xd18b>
  414209:	mov    QWORD PTR [rsp+0x10],0x0
  414212:	mov    DWORD PTR [rsp+0xc],0x0
  41421a:	mov    BYTE PTR [rsp+0xb],0x0
  41421f:	cmp    rbx,r13
  414222:	je     414271 <main@@Base+0xd1a1>
  414224:	mov    rdi,r14
  414227:	mov    rsi,rbx
  41422a:	mov    rdx,r13
  41422d:	lea    rcx,[rsp+0xc]
  414232:	lea    r8,[rsp+0x10]
  414237:	call   425c50 <flatcc_json_parser_integer@@Base>
  41423c:	cmp    rax,rbx
  41423f:	je     41427e <main@@Base+0xd1ae>
  414241:	mov    rbp,rax
  414244:	cmp    DWORD PTR [rsp+0xc],0x0
  414249:	je     41428b <main@@Base+0xd1bb>
  41424b:	mov    rdi,r14
  41424e:	mov    rsi,rbp
  414251:	mov    rdx,r13
  414254:	mov    ecx,0x8
  414259:	jmp    4142ab <main@@Base+0xd1db>
  41425b:	mov    rdi,r14
  41425e:	mov    rsi,r8
  414261:	mov    rdx,r13
  414264:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  414269:	mov    rbp,rax
  41426c:	jmp    414320 <main@@Base+0xd250>
  414271:	xor    r12d,r12d
  414274:	mov    rbp,r13
  414277:	cmp    rbx,rbp
  41427a:	jne    4142f0 <main@@Base+0xd220>
  41427c:	jmp    4142bb <main@@Base+0xd1eb>
  41427e:	xor    r12d,r12d
  414281:	mov    rbp,rbx
  414284:	cmp    rbx,rbp
  414287:	jne    4142f0 <main@@Base+0xd220>
  414289:	jmp    4142bb <main@@Base+0xd1eb>
  41428b:	mov    r12,QWORD PTR [rsp+0x10]
  414290:	cmp    r12,0x100
  414297:	jb     4143af <main@@Base+0xd2df>
  41429d:	mov    rdi,r14
  4142a0:	mov    rsi,rbp
  4142a3:	mov    rdx,r13
  4142a6:	mov    ecx,0x7
  4142ab:	call   424090 <flatcc_json_parser_set_error@@Base>
  4142b0:	mov    rbp,rax
  4142b3:	xor    r12d,r12d
  4142b6:	cmp    rbx,rbp
  4142b9:	jne    4142f0 <main@@Base+0xd220>
  4142bb:	mov    rdi,r14
  4142be:	mov    rsi,rbx
  4142c1:	mov    rdx,r13
  4142c4:	lea    rcx,[rip+0x2f1f5]        # 4434c0 <__data_start@@Base+0x410>
  4142cb:	lea    r8,[rsp+0xb]
  4142d0:	call   412be0 <main@@Base+0xbb10>
  4142d5:	mov    rbp,rax
  4142d8:	cmp    rax,rbx
  4142db:	je     4144b6 <main@@Base+0xd3e6>
  4142e1:	cmp    rbp,r13
  4142e4:	je     4144b6 <main@@Base+0xd3e6>
  4142ea:	movzx  r12d,BYTE PTR [rsp+0xb]
  4142f0:	cmp    r12b,0x2
  4142f4:	jne    4142fd <main@@Base+0xd22d>
  4142f6:	test   BYTE PTR [r14+0x10],0x2
  4142fb:	je     414320 <main@@Base+0xd250>
  4142fd:	mov    rdi,QWORD PTR [r14]
  414300:	mov    edx,0x1
  414305:	mov    esi,0x2
  41430a:	mov    ecx,0x1
  41430f:	call   420a40 <flatcc_builder_table_add@@Base>
  414314:	test   rax,rax
  414317:	je     4144b6 <main@@Base+0xd3e6>
  41431d:	mov    BYTE PTR [rax],r12b
  414320:	mov    rax,r13
  414323:	sub    rax,rbp
  414326:	cmp    rax,0x2
  41432a:	jl     414344 <main@@Base+0xd274>
  41432c:	cmp    BYTE PTR [rbp+0x0],0x20
  414330:	jg     414355 <main@@Base+0xd285>
  414332:	jne    414344 <main@@Base+0xd274>
  414334:	cmp    BYTE PTR [rbp+0x1],0x20
  414338:	jle    414344 <main@@Base+0xd274>
  41433a:	inc    rbp
  41433d:	cmp    rbp,r13
  414340:	jne    41435a <main@@Base+0xd28a>
  414342:	jmp    4143c2 <main@@Base+0xd2f2>
  414344:	mov    rdi,r14
  414347:	mov    rsi,rbp
  41434a:	mov    rdx,r13
  41434d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  414352:	mov    rbp,rax
  414355:	cmp    rbp,r13
  414358:	je     4143c2 <main@@Base+0xd2f2>
  41435a:	movzx  eax,BYTE PTR [rbp+0x0]
  41435e:	cmp    al,0x2c
  414360:	jne    414467 <main@@Base+0xd397>
  414366:	lea    rsi,[rbp+0x1]
  41436a:	mov    rax,r13
  41436d:	sub    rax,rsi
  414370:	cmp    rax,0x2
  414374:	jl     414391 <main@@Base+0xd2c1>
  414376:	cmp    BYTE PTR [rsi],0x20
  414379:	jg     41439f <main@@Base+0xd2cf>
  41437b:	jne    414391 <main@@Base+0xd2c1>
  41437d:	cmp    BYTE PTR [rbp+0x2],0x20
  414381:	jle    414391 <main@@Base+0xd2c1>
  414383:	add    rbp,0x2
  414387:	mov    rsi,rbp
  41438a:	cmp    rsi,r13
  41438d:	jne    4143a4 <main@@Base+0xd2d4>
  41438f:	jmp    4143e8 <main@@Base+0xd318>
  414391:	mov    rdi,r14
  414394:	mov    rdx,r13
  414397:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41439c:	mov    rsi,rax
  41439f:	cmp    rsi,r13
  4143a2:	je     4143e8 <main@@Base+0xd318>
  4143a4:	cmp    BYTE PTR [rsi],0x7d
  4143a7:	jne    4139fd <main@@Base+0xc92d>
  4143ad:	jmp    4143f3 <main@@Base+0xd323>
  4143af:	mov    BYTE PTR [rsp+0xb],r12b
  4143b4:	cmp    rbx,rbp
  4143b7:	jne    4142f0 <main@@Base+0xd220>
  4143bd:	jmp    4142bb <main@@Base+0xd1eb>
  4143c2:	mov    rbx,r13
  4143c5:	cmp    DWORD PTR [r14+0x20],0x0
  4143ca:	jne    413825 <main@@Base+0xc755>
  4143d0:	mov    rdi,QWORD PTR [r14]
  4143d3:	call   4200d0 <flatcc_builder_end_table@@Base>
  4143d8:	mov    DWORD PTR [r15],eax
  4143db:	test   eax,eax
  4143dd:	jne    41383b <main@@Base+0xc76b>
  4143e3:	jmp    413825 <main@@Base+0xc755>
  4143e8:	mov    rdi,r14
  4143eb:	mov    rsi,r13
  4143ee:	jmp    4144cc <main@@Base+0xd3fc>
  4143f3:	lea    rbx,[rsi+0x1]
  4143f7:	mov    rax,r13
  4143fa:	sub    rax,rbx
  4143fd:	cmp    rax,0x2
  414401:	jl     4144a3 <main@@Base+0xd3d3>
  414407:	cmp    BYTE PTR [rbx],0x20
  41440a:	jg     41381a <main@@Base+0xc74a>
  414410:	jne    4144a3 <main@@Base+0xd3d3>
  414416:	cmp    BYTE PTR [rsi+0x2],0x20
  41441a:	jle    4144a3 <main@@Base+0xd3d3>
  414420:	add    rsi,0x2
  414424:	mov    rbx,rsi
  414427:	cmp    DWORD PTR [r14+0x20],0x0
  41442c:	jne    413825 <main@@Base+0xc755>
  414432:	jmp    4143d0 <main@@Base+0xd300>
  414434:	cmp    cl,0x7d
  414437:	jne    4144be <main@@Base+0xd3ee>
  41443d:	lea    rbx,[rax+0x1]
  414441:	mov    rcx,r13
  414444:	sub    rcx,rbx
  414447:	cmp    rcx,0x2
  41444b:	jl     4144a3 <main@@Base+0xd3d3>
  41444d:	cmp    BYTE PTR [rbx],0x20
  414450:	jg     41381a <main@@Base+0xc74a>
  414456:	jne    4144a3 <main@@Base+0xd3d3>
  414458:	cmp    BYTE PTR [rax+0x2],0x20
  41445c:	jle    4144a3 <main@@Base+0xd3d3>
  41445e:	add    rax,0x2
  414462:	jmp    413817 <main@@Base+0xc747>
  414467:	cmp    al,0x7d
  414469:	jne    4144c6 <main@@Base+0xd3f6>
  41446b:	lea    rbx,[rbp+0x1]
  41446f:	mov    rax,r13
  414472:	sub    rax,rbx
  414475:	cmp    rax,0x2
  414479:	jl     4144a3 <main@@Base+0xd3d3>
  41447b:	cmp    BYTE PTR [rbx],0x20
  41447e:	jg     41381a <main@@Base+0xc74a>
  414484:	jne    4144a3 <main@@Base+0xd3d3>
  414486:	cmp    BYTE PTR [rbp+0x2],0x20
  41448a:	jle    4144a3 <main@@Base+0xd3d3>
  41448c:	add    rbp,0x2
  414490:	mov    rbx,rbp
  414493:	cmp    DWORD PTR [r14+0x20],0x0
  414498:	jne    413825 <main@@Base+0xc755>
  41449e:	jmp    4143d0 <main@@Base+0xd300>
  4144a3:	mov    rdi,r14
  4144a6:	mov    rsi,rbx
  4144a9:	mov    rdx,r13
  4144ac:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4144b1:	jmp    413817 <main@@Base+0xc747>
  4144b6:	mov    rbx,rbp
  4144b9:	jmp    413825 <main@@Base+0xc755>
  4144be:	mov    rdi,r14
  4144c1:	mov    rsi,rax
  4144c4:	jmp    4144cc <main@@Base+0xd3fc>
  4144c6:	mov    rdi,r14
  4144c9:	mov    rsi,rbp
  4144cc:	mov    rdx,r13
  4144cf:	mov    ecx,0xa
  4144d4:	jmp    413812 <main@@Base+0xc742>
  4144d9:	nop    DWORD PTR [rax+0x0]
  4144e0:	push   rbp
  4144e1:	push   r15
  4144e3:	push   r14
  4144e5:	push   r13
  4144e7:	push   r12
  4144e9:	push   rbx
  4144ea:	push   rax
  4144eb:	mov    rbp,rcx
  4144ee:	mov    rbx,rsi
  4144f1:	mov    rcx,rdx
  4144f4:	sub    rcx,rsi
  4144f7:	cmp    rcx,0x8
  4144fb:	jb     414504 <main@@Base+0xd434>
  4144fd:	movbe  r14,QWORD PTR [rbx]
  414502:	jmp    414573 <main@@Base+0xd4a3>
  414504:	dec    rcx
  414507:	cmp    rcx,0x6
  41450b:	ja     41468e <main@@Base+0xd5be>
  414511:	xor    eax,eax
  414513:	lea    rsi,[rip+0x20016]        # 434530 <_IO_stdin_used@@Base+0x530>
  41451a:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41451e:	add    rcx,rsi
  414521:	jmp    rcx
  414523:	movsx  rax,BYTE PTR [rbx+0x6]
  414528:	shl    rax,0x8
  41452c:	movsx  rcx,BYTE PTR [rbx+0x5]
  414531:	shl    rcx,0x10
  414535:	or     rax,rcx
  414538:	movsx  rcx,BYTE PTR [rbx+0x4]
  41453d:	shl    rcx,0x18
  414541:	or     rax,rcx
  414544:	movsx  rcx,BYTE PTR [rbx+0x3]
  414549:	shl    rcx,0x20
  41454d:	or     rax,rcx
  414550:	movsx  rcx,BYTE PTR [rbx+0x2]
  414555:	shl    rcx,0x28
  414559:	or     rax,rcx
  41455c:	movsx  rcx,BYTE PTR [rbx+0x1]
  414561:	shl    rcx,0x30
  414565:	or     rax,rcx
  414568:	movzx  r14d,BYTE PTR [rbx]
  41456c:	shl    r14,0x38
  414570:	or     r14,rax
  414573:	movabs rax,0x4d6f6e7374657200
  41457d:	cmp    r14,rax
  414580:	jae    4145bb <main@@Base+0xd4eb>
  414582:	shr    r14,0x28
  414586:	cmp    r14,0x416c74
  41458d:	jne    41468e <main@@Base+0xd5be>
  414593:	mov    r14,r8
  414596:	mov    rsi,rbx
  414599:	mov    ecx,0x3
  41459e:	mov    r8,r9
  4145a1:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4145a6:	cmp    rax,rbx
  4145a9:	je     41468e <main@@Base+0xd5be>
  4145af:	mov    QWORD PTR [r14],0x4
  4145b6:	jmp    414684 <main@@Base+0xd5b4>
  4145bb:	lea    rcx,[rax+0x32]
  4145bf:	cmp    r14,rcx
  4145c2:	jne    4145ec <main@@Base+0xd51c>
  4145c4:	mov    r14,r8
  4145c7:	mov    rsi,rbx
  4145ca:	mov    ecx,0x8
  4145cf:	mov    r8,r9
  4145d2:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4145d7:	cmp    rax,rbx
  4145da:	je     41468e <main@@Base+0xd5be>
  4145e0:	mov    QWORD PTR [r14],0x3
  4145e7:	jmp    414684 <main@@Base+0xd5b4>
  4145ec:	mov    rcx,r14
  4145ef:	and    rcx,0xffffffffffffff00
  4145f6:	cmp    rcx,rax
  4145f9:	jne    414639 <main@@Base+0xd569>
  4145fb:	mov    r13,rdi
  4145fe:	mov    rsi,rbx
  414601:	mov    ecx,0x7
  414606:	mov    QWORD PTR [rsp],rbp
  41460a:	mov    rbp,r8
  41460d:	mov    r8,r9
  414610:	mov    r15,r9
  414613:	mov    r12,rdx
  414616:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41461b:	mov    rdx,r12
  41461e:	mov    rdi,r13
  414621:	mov    r9,r15
  414624:	mov    r8,rbp
  414627:	mov    rbp,QWORD PTR [rsp]
  41462b:	cmp    rax,rbx
  41462e:	je     414639 <main@@Base+0xd569>
  414630:	mov    QWORD PTR [r8],0x1
  414637:	jmp    414684 <main@@Base+0xd5b4>
  414639:	mov    rax,r14
  41463c:	shr    rax,0x20
  414640:	cmp    rax,0x4e4f4e45
  414646:	jne    4146a0 <main@@Base+0xd5d0>
  414648:	mov    r13,rdi
  41464b:	mov    rsi,rbx
  41464e:	mov    ecx,0x4
  414653:	mov    QWORD PTR [rsp],rbp
  414657:	mov    rbp,r8
  41465a:	mov    r8,r9
  41465d:	mov    r15,r9
  414660:	mov    r12,rdx
  414663:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  414668:	mov    rdx,r12
  41466b:	mov    rdi,r13
  41466e:	mov    r9,r15
  414671:	mov    r8,rbp
  414674:	mov    rbp,QWORD PTR [rsp]
  414678:	cmp    rax,rbx
  41467b:	je     4146a0 <main@@Base+0xd5d0>
  41467d:	mov    QWORD PTR [r8],0x0
  414684:	mov    DWORD PTR [rbp+0x0],0x0
  41468b:	mov    rbx,rax
  41468e:	mov    rax,rbx
  414691:	add    rsp,0x8
  414695:	pop    rbx
  414696:	pop    r12
  414698:	pop    r13
  41469a:	pop    r14
  41469c:	pop    r15
  41469e:	pop    rbp
  41469f:	ret    
  4146a0:	movabs rax,0x5465737453696d70
  4146aa:	cmp    r14,rax
  4146ad:	jne    41468e <main@@Base+0xd5be>
  4146af:	lea    rax,[rbx+0x8]
  4146b3:	mov    rsi,rdx
  4146b6:	sub    rsi,rax
  4146b9:	cmp    rsi,0x8
  4146bd:	jb     4146c6 <main@@Base+0xd5f6>
  4146bf:	movbe  rax,QWORD PTR [rax]
  4146c4:	jmp    414730 <main@@Base+0xd660>
  4146c6:	dec    rsi
  4146c9:	cmp    rsi,0x6
  4146cd:	ja     41468e <main@@Base+0xd5be>
  4146cf:	xor    ecx,ecx
  4146d1:	lea    r10,[rip+0x1fe74]        # 43454c <_IO_stdin_used@@Base+0x54c>
  4146d8:	movsxd rsi,DWORD PTR [r10+rsi*4]
  4146dc:	add    rsi,r10
  4146df:	jmp    rsi
  4146e1:	movsx  rcx,BYTE PTR [rbx+0xe]
  4146e6:	shl    rcx,0x8
  4146ea:	movsx  rsi,BYTE PTR [rbx+0xd]
  4146ef:	shl    rsi,0x10
  4146f3:	or     rcx,rsi
  4146f6:	movsx  rsi,BYTE PTR [rbx+0xc]
  4146fb:	shl    rsi,0x18
  4146ff:	or     rcx,rsi
  414702:	movsx  rsi,BYTE PTR [rbx+0xb]
  414707:	shl    rsi,0x20
  41470b:	or     rcx,rsi
  41470e:	movsx  rsi,BYTE PTR [rbx+0xa]
  414713:	shl    rsi,0x28
  414717:	or     rcx,rsi
  41471a:	movsx  rsi,BYTE PTR [rbx+0x9]
  41471f:	shl    rsi,0x30
  414723:	or     rcx,rsi
  414726:	movzx  eax,BYTE PTR [rax]
  414729:	shl    rax,0x38
  41472d:	or     rax,rcx
  414730:	movabs rcx,0x6c655461626c6557
  41473a:	cmp    rax,rcx
  41473d:	jne    41468e <main@@Base+0xd5be>
  414743:	lea    r15,[rbx+0x10]
  414747:	mov    rcx,rdx
  41474a:	sub    rcx,r15
  41474d:	cmp    rcx,0x8
  414751:	jb     41475a <main@@Base+0xd68a>
  414753:	movbe  rcx,QWORD PTR [r15]
  414758:	jmp    4147c9 <main@@Base+0xd6f9>
  41475a:	dec    rcx
  41475d:	cmp    rcx,0x6
  414761:	ja     41468e <main@@Base+0xd5be>
  414767:	xor    eax,eax
  414769:	lea    rsi,[rip+0x1fdf8]        # 434568 <_IO_stdin_used@@Base+0x568>
  414770:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414774:	add    rcx,rsi
  414777:	jmp    rcx
  414779:	movsx  rax,BYTE PTR [rbx+0x16]
  41477e:	shl    rax,0x8
  414782:	movsx  rcx,BYTE PTR [rbx+0x15]
  414787:	shl    rcx,0x10
  41478b:	or     rax,rcx
  41478e:	movsx  rcx,BYTE PTR [rbx+0x14]
  414793:	shl    rcx,0x18
  414797:	or     rax,rcx
  41479a:	movsx  rcx,BYTE PTR [rbx+0x13]
  41479f:	shl    rcx,0x20
  4147a3:	or     rax,rcx
  4147a6:	movsx  rcx,BYTE PTR [rbx+0x12]
  4147ab:	shl    rcx,0x28
  4147af:	or     rax,rcx
  4147b2:	movsx  rcx,BYTE PTR [rbx+0x11]
  4147b7:	shl    rcx,0x30
  4147bb:	or     rax,rcx
  4147be:	movzx  ecx,BYTE PTR [r15]
  4147c2:	shl    rcx,0x38
  4147c6:	or     rcx,rax
  4147c9:	shr    rcx,0x8
  4147cd:	movabs rax,0x697468456e756d
  4147d7:	cmp    rcx,rax
  4147da:	jne    41468e <main@@Base+0xd5be>
  4147e0:	mov    r14,r8
  4147e3:	mov    rsi,r15
  4147e6:	mov    ecx,0x7
  4147eb:	mov    r8,r9
  4147ee:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4147f3:	cmp    rax,r15
  4147f6:	je     41468e <main@@Base+0xd5be>
  4147fc:	mov    QWORD PTR [r14],0x2
  414803:	jmp    414684 <main@@Base+0xd5b4>
  414808:	nop    DWORD PTR [rax+rax*1+0x0]
  414810:	push   rbp
  414811:	push   r15
  414813:	push   r14
  414815:	push   r13
  414817:	push   r12
  414819:	push   rbx
  41481a:	sub    rsp,0x38
  41481e:	mov    r14,r8
  414821:	mov    rbp,rcx
  414824:	mov    r12,rdx
  414827:	mov    rbx,rsi
  41482a:	mov    r15,rdi
  41482d:	mov    BYTE PTR [r8],0x0
  414831:	cmp    rsi,rdx
  414834:	je     41484b <main@@Base+0xd77b>
  414836:	mov    al,BYTE PTR [rbx]
  414838:	cmp    al,0x2e
  41483a:	je     41485c <main@@Base+0xd78c>
  41483c:	cmp    al,0x22
  41483e:	jne    41487b <main@@Base+0xd7ab>
  414840:	inc    rbx
  414843:	mov    DWORD PTR [r15+0x14],0x0
  41484b:	cmp    DWORD PTR [r15+0x14],0x0
  414850:	je     41488a <main@@Base+0xd7ba>
  414852:	cmp    rbx,r12
  414855:	jne    4148ca <main@@Base+0xd7fa>
  414857:	jmp    414987 <main@@Base+0xd8b7>
  41485c:	mov    rdi,r15
  41485f:	mov    rsi,rbx
  414862:	mov    rdx,r12
  414865:	mov    ecx,0x5
  41486a:	call   424090 <flatcc_json_parser_set_error@@Base>
  41486f:	mov    rbx,rax
  414872:	cmp    DWORD PTR [r15+0x14],0x0
  414877:	jne    414852 <main@@Base+0xd782>
  414879:	jmp    41488a <main@@Base+0xd7ba>
  41487b:	mov    DWORD PTR [r15+0x14],0x1
  414883:	cmp    DWORD PTR [r15+0x14],0x0
  414888:	jne    414852 <main@@Base+0xd782>
  41488a:	mov    rax,r12
  41488d:	sub    rax,rbx
  414890:	cmp    rax,0x2
  414894:	jl     4148b0 <main@@Base+0xd7e0>
  414896:	cmp    BYTE PTR [rbx],0x20
  414899:	jg     414852 <main@@Base+0xd782>
  41489b:	jne    4148b0 <main@@Base+0xd7e0>
  41489d:	cmp    BYTE PTR [rbx+0x1],0x20
  4148a1:	jle    4148b0 <main@@Base+0xd7e0>
  4148a3:	inc    rbx
  4148a6:	cmp    rbx,r12
  4148a9:	jne    4148ca <main@@Base+0xd7fa>
  4148ab:	jmp    414987 <main@@Base+0xd8b7>
  4148b0:	mov    rdi,r15
  4148b3:	mov    rsi,rbx
  4148b6:	mov    rdx,r12
  4148b9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4148be:	mov    rbx,rax
  4148c1:	cmp    rbx,r12
  4148c4:	je     414987 <main@@Base+0xd8b7>
  4148ca:	lea    rax,[rbp+0x8]
  4148ce:	mov    DWORD PTR [rsp+0xc],0x0
  4148d6:	mov    QWORD PTR [rsp+0x20],r14
  4148db:	mov    QWORD PTR [rsp+0x18],rbp
  4148e0:	mov    QWORD PTR [rsp+0x28],rax
  4148e5:	mov    rbp,QWORD PTR [rbp+0x0]
  4148e9:	mov    r14,rax
  4148ec:	nop    DWORD PTR [rax+0x0]
  4148f0:	mov    rdi,r15
  4148f3:	mov    rsi,rbx
  4148f6:	mov    rdx,r12
  4148f9:	lea    rcx,[rsp+0x14]
  4148fe:	lea    r8,[rsp+0x30]
  414903:	lea    r9,[rsp+0x10]
  414908:	call   rbp
  41490a:	cmp    rax,r12
  41490d:	je     414987 <main@@Base+0xd8b7>
  41490f:	mov    r13,rax
  414912:	cmp    rax,rbx
  414915:	jne    414930 <main@@Base+0xd860>
  414917:	mov    rbp,QWORD PTR [r14]
  41491a:	add    r14,0x8
  41491e:	test   rbp,rbp
  414921:	jne    4148f0 <main@@Base+0xd820>
  414923:	jmp    41498c <main@@Base+0xd8bc>
  414925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41492f:	nop
  414930:	cmp    DWORD PTR [rsp+0x14],0x0
  414935:	je     41494c <main@@Base+0xd87c>
  414937:	mov    rdi,r15
  41493a:	mov    rsi,r13
  41493d:	mov    rdx,r12
  414940:	mov    ecx,0x8
  414945:	call   424090 <flatcc_json_parser_set_error@@Base>
  41494a:	jmp    41495c <main@@Base+0xd88c>
  41494c:	cmp    QWORD PTR [rsp+0x30],0x0
  414952:	setne  al
  414955:	mov    DWORD PTR [rsp+0xc],eax
  414959:	mov    rax,r13
  41495c:	mov    r14,QWORD PTR [rsp+0x20]
  414961:	mov    rbp,QWORD PTR [rsp+0x18]
  414966:	cmp    rax,r12
  414969:	je     414987 <main@@Base+0xd8b7>
  41496b:	mov    eax,DWORD PTR [rsp+0xc]
  41496f:	add    BYTE PTR [r14],al
  414972:	cmp    DWORD PTR [rsp+0x10],0x0
  414977:	mov    rbx,r13
  41497a:	mov    rax,QWORD PTR [rsp+0x28]
  41497f:	jne    4148e5 <main@@Base+0xd815>
  414985:	jmp    4149a2 <main@@Base+0xd8d2>
  414987:	mov    r13,r12
  41498a:	jmp    4149a2 <main@@Base+0xd8d2>
  41498c:	mov    rdi,r15
  41498f:	mov    rsi,rbx
  414992:	mov    rdx,r12
  414995:	mov    ecx,0x17
  41499a:	call   424090 <flatcc_json_parser_set_error@@Base>
  41499f:	mov    r13,rax
  4149a2:	mov    rax,r13
  4149a5:	add    rsp,0x38
  4149a9:	pop    rbx
  4149aa:	pop    r12
  4149ac:	pop    r13
  4149ae:	pop    r14
  4149b0:	pop    r15
  4149b2:	pop    rbp
  4149b3:	ret    
  4149b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149be:	xchg   ax,ax
  4149c0:	push   rbp
  4149c1:	push   r15
  4149c3:	push   r14
  4149c5:	push   r13
  4149c7:	push   r12
  4149c9:	push   rbx
  4149ca:	sub    rsp,0x48
  4149ce:	mov    rbx,r8
  4149d1:	mov    rbp,rcx
  4149d4:	mov    r13,rdx
  4149d7:	mov    r12,rsi
  4149da:	mov    r15,rdi
  4149dd:	mov    DWORD PTR [r8],0x0
  4149e4:	cmp    rsi,rdx
  4149e7:	je     414a00 <main@@Base+0xd930>
  4149e9:	mov    al,BYTE PTR [r12]
  4149ed:	cmp    al,0x2e
  4149ef:	je     414a11 <main@@Base+0xd941>
  4149f1:	cmp    al,0x22
  4149f3:	jne    414a30 <main@@Base+0xd960>
  4149f5:	inc    r12
  4149f8:	mov    DWORD PTR [r15+0x14],0x0
  414a00:	cmp    DWORD PTR [r15+0x14],0x0
  414a05:	je     414a3f <main@@Base+0xd96f>
  414a07:	cmp    r12,r13
  414a0a:	jne    414a83 <main@@Base+0xd9b3>
  414a0c:	jmp    414b5a <main@@Base+0xda8a>
  414a11:	mov    rdi,r15
  414a14:	mov    rsi,r12
  414a17:	mov    rdx,r13
  414a1a:	mov    ecx,0x5
  414a1f:	call   424090 <flatcc_json_parser_set_error@@Base>
  414a24:	mov    r12,rax
  414a27:	cmp    DWORD PTR [r15+0x14],0x0
  414a2c:	jne    414a07 <main@@Base+0xd937>
  414a2e:	jmp    414a3f <main@@Base+0xd96f>
  414a30:	mov    DWORD PTR [r15+0x14],0x1
  414a38:	cmp    DWORD PTR [r15+0x14],0x0
  414a3d:	jne    414a07 <main@@Base+0xd937>
  414a3f:	mov    rax,r13
  414a42:	sub    rax,r12
  414a45:	cmp    rax,0x2
  414a49:	jl     414a69 <main@@Base+0xd999>
  414a4b:	cmp    BYTE PTR [r12],0x20
  414a50:	jg     414a07 <main@@Base+0xd937>
  414a52:	jne    414a69 <main@@Base+0xd999>
  414a54:	cmp    BYTE PTR [r12+0x1],0x20
  414a5a:	jle    414a69 <main@@Base+0xd999>
  414a5c:	inc    r12
  414a5f:	cmp    r12,r13
  414a62:	jne    414a83 <main@@Base+0xd9b3>
  414a64:	jmp    414b5a <main@@Base+0xda8a>
  414a69:	mov    rdi,r15
  414a6c:	mov    rsi,r12
  414a6f:	mov    rdx,r13
  414a72:	call   424110 <flatcc_json_parser_space_ext@@Base>
  414a77:	mov    r12,rax
  414a7a:	cmp    r12,r13
  414a7d:	je     414b5a <main@@Base+0xda8a>
  414a83:	lea    rcx,[rbp+0x8]
  414a87:	lea    r14,[rsp+0x8]
  414a8c:	vbroadcastss xmm0,DWORD PTR [rip+0x1f57b]        # 434010 <_IO_stdin_used@@Base+0x10>
  414a95:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  414a9b:	mov    QWORD PTR [rsp+0x18],rbx
  414aa0:	mov    QWORD PTR [rsp+0x10],rbp
  414aa5:	mov    QWORD PTR [rsp+0x20],rcx
  414aaa:	mov    rbx,QWORD PTR [rbp+0x0]
  414aae:	mov    rbp,rcx
  414ab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414abb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ac0:	mov    rdi,r15
  414ac3:	mov    rsi,r12
  414ac6:	mov    rdx,r13
  414ac9:	lea    rcx,[rsp+0xc]
  414ace:	lea    r8,[rsp+0x28]
  414ad3:	mov    r9,r14
  414ad6:	call   rbx
  414ad8:	cmp    rax,r13
  414adb:	je     414b5a <main@@Base+0xda8a>
  414add:	cmp    rax,r12
  414ae0:	jne    414b00 <main@@Base+0xda30>
  414ae2:	mov    rbx,QWORD PTR [rbp+0x0]
  414ae6:	add    rbp,0x8
  414aea:	test   rbx,rbx
  414aed:	jne    414ac0 <main@@Base+0xd9f0>
  414aef:	jmp    414b5f <main@@Base+0xda8f>
  414af1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414afb:	nop    DWORD PTR [rax+rax*1+0x0]
  414b00:	mov    rcx,QWORD PTR [rsp+0x28]
  414b05:	test   rcx,rcx
  414b08:	js     414b11 <main@@Base+0xda41>
  414b0a:	vcvtsi2ss xmm0,xmm1,rcx
  414b0f:	jmp    414b26 <main@@Base+0xda56>
  414b11:	mov    rdx,rcx
  414b14:	shr    rdx,1
  414b17:	and    ecx,0x1
  414b1a:	or     rcx,rdx
  414b1d:	vcvtsi2ss xmm0,xmm1,rcx
  414b22:	vaddss xmm0,xmm0,xmm0
  414b26:	mov    rbx,QWORD PTR [rsp+0x18]
  414b2b:	mov    rbp,QWORD PTR [rsp+0x10]
  414b30:	cmp    DWORD PTR [rsp+0xc],0x0
  414b35:	mov    rcx,QWORD PTR [rsp+0x20]
  414b3a:	je     414b42 <main@@Base+0xda72>
  414b3c:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  414b42:	vaddss xmm0,xmm0,DWORD PTR [rbx]
  414b46:	vmovss DWORD PTR [rbx],xmm0
  414b4a:	cmp    DWORD PTR [rsp+0x8],0x0
  414b4f:	mov    r12,rax
  414b52:	jne    414aaa <main@@Base+0xd9da>
  414b58:	jmp    414b72 <main@@Base+0xdaa2>
  414b5a:	mov    rax,r13
  414b5d:	jmp    414b72 <main@@Base+0xdaa2>
  414b5f:	mov    rdi,r15
  414b62:	mov    rsi,r12
  414b65:	mov    rdx,r13
  414b68:	mov    ecx,0x17
  414b6d:	call   424090 <flatcc_json_parser_set_error@@Base>
  414b72:	add    rsp,0x48
  414b76:	pop    rbx
  414b77:	pop    r12
  414b79:	pop    r13
  414b7b:	pop    r14
  414b7d:	pop    r15
  414b7f:	pop    rbp
  414b80:	ret    
  414b81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b90:	push   rbp
  414b91:	push   r15
  414b93:	push   r14
  414b95:	push   r13
  414b97:	push   r12
  414b99:	push   rbx
  414b9a:	sub    rsp,0x38
  414b9e:	mov    r14,r8
  414ba1:	mov    rbp,rcx
  414ba4:	mov    r12,rdx
  414ba7:	mov    rbx,rsi
  414baa:	mov    r15,rdi
  414bad:	mov    DWORD PTR [r8],0x0
  414bb4:	cmp    rsi,rdx
  414bb7:	je     414bce <main@@Base+0xdafe>
  414bb9:	mov    al,BYTE PTR [rbx]
  414bbb:	cmp    al,0x2e
  414bbd:	je     414bdf <main@@Base+0xdb0f>
  414bbf:	cmp    al,0x22
  414bc1:	jne    414bfe <main@@Base+0xdb2e>
  414bc3:	inc    rbx
  414bc6:	mov    DWORD PTR [r15+0x14],0x0
  414bce:	cmp    DWORD PTR [r15+0x14],0x0
  414bd3:	je     414c0d <main@@Base+0xdb3d>
  414bd5:	cmp    rbx,r12
  414bd8:	jne    414c4d <main@@Base+0xdb7d>
  414bda:	jmp    414d35 <main@@Base+0xdc65>
  414bdf:	mov    rdi,r15
  414be2:	mov    rsi,rbx
  414be5:	mov    rdx,r12
  414be8:	mov    ecx,0x5
  414bed:	call   424090 <flatcc_json_parser_set_error@@Base>
  414bf2:	mov    rbx,rax
  414bf5:	cmp    DWORD PTR [r15+0x14],0x0
  414bfa:	jne    414bd5 <main@@Base+0xdb05>
  414bfc:	jmp    414c0d <main@@Base+0xdb3d>
  414bfe:	mov    DWORD PTR [r15+0x14],0x1
  414c06:	cmp    DWORD PTR [r15+0x14],0x0
  414c0b:	jne    414bd5 <main@@Base+0xdb05>
  414c0d:	mov    rax,r12
  414c10:	sub    rax,rbx
  414c13:	cmp    rax,0x2
  414c17:	jl     414c33 <main@@Base+0xdb63>
  414c19:	cmp    BYTE PTR [rbx],0x20
  414c1c:	jg     414bd5 <main@@Base+0xdb05>
  414c1e:	jne    414c33 <main@@Base+0xdb63>
  414c20:	cmp    BYTE PTR [rbx+0x1],0x20
  414c24:	jle    414c33 <main@@Base+0xdb63>
  414c26:	inc    rbx
  414c29:	cmp    rbx,r12
  414c2c:	jne    414c4d <main@@Base+0xdb7d>
  414c2e:	jmp    414d35 <main@@Base+0xdc65>
  414c33:	mov    rdi,r15
  414c36:	mov    rsi,rbx
  414c39:	mov    rdx,r12
  414c3c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  414c41:	mov    rbx,rax
  414c44:	cmp    rbx,r12
  414c47:	je     414d35 <main@@Base+0xdc65>
  414c4d:	lea    rax,[rbp+0x8]
  414c51:	xor    ecx,ecx
  414c53:	mov    QWORD PTR [rsp+0x20],r14
  414c58:	mov    QWORD PTR [rsp+0x18],rbp
  414c5d:	mov    QWORD PTR [rsp+0x28],rax
  414c62:	mov    DWORD PTR [rsp+0xc],ecx
  414c66:	mov    rbp,QWORD PTR [rbp+0x0]
  414c6a:	mov    r14,rax
  414c6d:	nop    DWORD PTR [rax]
  414c70:	mov    rdi,r15
  414c73:	mov    rsi,rbx
  414c76:	mov    rdx,r12
  414c79:	lea    rcx,[rsp+0x14]
  414c7e:	lea    r8,[rsp+0x30]
  414c83:	lea    r9,[rsp+0x10]
  414c88:	call   rbp
  414c8a:	cmp    rax,r12
  414c8d:	je     414d35 <main@@Base+0xdc65>
  414c93:	mov    r13,rax
  414c96:	cmp    rax,rbx
  414c99:	jne    414cb0 <main@@Base+0xdbe0>
  414c9b:	mov    rbp,QWORD PTR [r14]
  414c9e:	add    r14,0x8
  414ca2:	test   rbp,rbp
  414ca5:	jne    414c70 <main@@Base+0xdba0>
  414ca7:	jmp    414d3a <main@@Base+0xdc6a>
  414cac:	nop    DWORD PTR [rax+0x0]
  414cb0:	mov    rax,QWORD PTR [rsp+0x30]
  414cb5:	cmp    DWORD PTR [rsp+0x14],0x0
  414cba:	je     414ce0 <main@@Base+0xdc10>
  414cbc:	mov    ecx,0x80000001
  414cc1:	cmp    rax,rcx
  414cc4:	mov    r14,QWORD PTR [rsp+0x20]
  414cc9:	mov    rbp,QWORD PTR [rsp+0x18]
  414cce:	jb     414d10 <main@@Base+0xdc40>
  414cd0:	mov    rdi,r15
  414cd3:	mov    rsi,r13
  414cd6:	mov    rdx,r12
  414cd9:	mov    ecx,0x8
  414cde:	jmp    414d00 <main@@Base+0xdc30>
  414ce0:	test   rax,0xffffffff80000000
  414ce6:	mov    r14,QWORD PTR [rsp+0x20]
  414ceb:	mov    rbp,QWORD PTR [rsp+0x18]
  414cf0:	je     414d13 <main@@Base+0xdc43>
  414cf2:	mov    rdi,r15
  414cf5:	mov    rsi,r13
  414cf8:	mov    rdx,r12
  414cfb:	mov    ecx,0x7
  414d00:	call   424090 <flatcc_json_parser_set_error@@Base>
  414d05:	mov    ecx,DWORD PTR [rsp+0xc]
  414d09:	cmp    rax,r12
  414d0c:	jne    414d1d <main@@Base+0xdc4d>
  414d0e:	jmp    414d35 <main@@Base+0xdc65>
  414d10:	neg    rax
  414d13:	mov    ecx,eax
  414d15:	mov    rax,r13
  414d18:	cmp    rax,r12
  414d1b:	je     414d35 <main@@Base+0xdc65>
  414d1d:	add    DWORD PTR [r14],ecx
  414d20:	cmp    DWORD PTR [rsp+0x10],0x0
  414d25:	mov    rbx,r13
  414d28:	mov    rax,QWORD PTR [rsp+0x28]
  414d2d:	jne    414c62 <main@@Base+0xdb92>
  414d33:	jmp    414d50 <main@@Base+0xdc80>
  414d35:	mov    r13,r12
  414d38:	jmp    414d50 <main@@Base+0xdc80>
  414d3a:	mov    rdi,r15
  414d3d:	mov    rsi,rbx
  414d40:	mov    rdx,r12
  414d43:	mov    ecx,0x17
  414d48:	call   424090 <flatcc_json_parser_set_error@@Base>
  414d4d:	mov    r13,rax
  414d50:	mov    rax,r13
  414d53:	add    rsp,0x38
  414d57:	pop    rbx
  414d58:	pop    r12
  414d5a:	pop    r13
  414d5c:	pop    r14
  414d5e:	pop    r15
  414d60:	pop    rbp
  414d61:	ret    
  414d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d6c:	nop    DWORD PTR [rax+0x0]
  414d70:	push   rbp
  414d71:	push   r15
  414d73:	push   r14
  414d75:	push   r13
  414d77:	push   r12
  414d79:	push   rbx
  414d7a:	sub    rsp,0x38
  414d7e:	mov    r14,r8
  414d81:	mov    rbp,rcx
  414d84:	mov    r12,rdx
  414d87:	mov    rbx,rsi
  414d8a:	mov    r15,rdi
  414d8d:	mov    QWORD PTR [r8],0x0
  414d94:	cmp    rsi,rdx
  414d97:	je     414dae <main@@Base+0xdcde>
  414d99:	mov    al,BYTE PTR [rbx]
  414d9b:	cmp    al,0x2e
  414d9d:	je     414dbf <main@@Base+0xdcef>
  414d9f:	cmp    al,0x22
  414da1:	jne    414dde <main@@Base+0xdd0e>
  414da3:	inc    rbx
  414da6:	mov    DWORD PTR [r15+0x14],0x0
  414dae:	cmp    DWORD PTR [r15+0x14],0x0
  414db3:	je     414ded <main@@Base+0xdd1d>
  414db5:	cmp    rbx,r12
  414db8:	jne    414e2d <main@@Base+0xdd5d>
  414dba:	jmp    414f19 <main@@Base+0xde49>
  414dbf:	mov    rdi,r15
  414dc2:	mov    rsi,rbx
  414dc5:	mov    rdx,r12
  414dc8:	mov    ecx,0x5
  414dcd:	call   424090 <flatcc_json_parser_set_error@@Base>
  414dd2:	mov    rbx,rax
  414dd5:	cmp    DWORD PTR [r15+0x14],0x0
  414dda:	jne    414db5 <main@@Base+0xdce5>
  414ddc:	jmp    414ded <main@@Base+0xdd1d>
  414dde:	mov    DWORD PTR [r15+0x14],0x1
  414de6:	cmp    DWORD PTR [r15+0x14],0x0
  414deb:	jne    414db5 <main@@Base+0xdce5>
  414ded:	mov    rax,r12
  414df0:	sub    rax,rbx
  414df3:	cmp    rax,0x2
  414df7:	jl     414e13 <main@@Base+0xdd43>
  414df9:	cmp    BYTE PTR [rbx],0x20
  414dfc:	jg     414db5 <main@@Base+0xdce5>
  414dfe:	jne    414e13 <main@@Base+0xdd43>
  414e00:	cmp    BYTE PTR [rbx+0x1],0x20
  414e04:	jle    414e13 <main@@Base+0xdd43>
  414e06:	inc    rbx
  414e09:	cmp    rbx,r12
  414e0c:	jne    414e2d <main@@Base+0xdd5d>
  414e0e:	jmp    414f19 <main@@Base+0xde49>
  414e13:	mov    rdi,r15
  414e16:	mov    rsi,rbx
  414e19:	mov    rdx,r12
  414e1c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  414e21:	mov    rbx,rax
  414e24:	cmp    rbx,r12
  414e27:	je     414f19 <main@@Base+0xde49>
  414e2d:	lea    rax,[rbp+0x8]
  414e31:	xor    ecx,ecx
  414e33:	mov    QWORD PTR [rsp+0x18],r14
  414e38:	mov    QWORD PTR [rsp+0x10],rbp
  414e3d:	mov    QWORD PTR [rsp+0x28],rax
  414e42:	mov    QWORD PTR [rsp+0x20],rcx
  414e47:	mov    rbp,QWORD PTR [rbp+0x0]
  414e4b:	mov    r14,rax
  414e4e:	xchg   ax,ax
  414e50:	mov    rdi,r15
  414e53:	mov    rsi,rbx
  414e56:	mov    rdx,r12
  414e59:	lea    rcx,[rsp+0xc]
  414e5e:	lea    r8,[rsp+0x30]
  414e63:	lea    r9,[rsp+0x8]
  414e68:	call   rbp
  414e6a:	cmp    rax,r12
  414e6d:	je     414f19 <main@@Base+0xde49>
  414e73:	mov    r13,rax
  414e76:	cmp    rax,rbx
  414e79:	jne    414e90 <main@@Base+0xddc0>
  414e7b:	mov    rbp,QWORD PTR [r14]
  414e7e:	add    r14,0x8
  414e82:	test   rbp,rbp
  414e85:	jne    414e50 <main@@Base+0xdd80>
  414e87:	jmp    414f1e <main@@Base+0xde4e>
  414e8c:	nop    DWORD PTR [rax+0x0]
  414e90:	mov    rcx,QWORD PTR [rsp+0x30]
  414e95:	cmp    DWORD PTR [rsp+0xc],0x0
  414e9a:	je     414ec5 <main@@Base+0xddf5>
  414e9c:	movabs rax,0x8000000000000001
  414ea6:	cmp    rcx,rax
  414ea9:	mov    r14,QWORD PTR [rsp+0x18]
  414eae:	mov    rbp,QWORD PTR [rsp+0x10]
  414eb3:	jb     414ef6 <main@@Base+0xde26>
  414eb5:	mov    rdi,r15
  414eb8:	mov    rsi,r13
  414ebb:	mov    rdx,r12
  414ebe:	mov    ecx,0x8
  414ec3:	jmp    414ee5 <main@@Base+0xde15>
  414ec5:	mov    rax,r13
  414ec8:	test   rcx,rcx
  414ecb:	mov    r14,QWORD PTR [rsp+0x18]
  414ed0:	mov    rbp,QWORD PTR [rsp+0x10]
  414ed5:	jns    414eef <main@@Base+0xde1f>
  414ed7:	mov    rdi,r15
  414eda:	mov    rsi,r13
  414edd:	mov    rdx,r12
  414ee0:	mov    ecx,0x7
  414ee5:	call   424090 <flatcc_json_parser_set_error@@Base>
  414eea:	mov    rcx,QWORD PTR [rsp+0x20]
  414eef:	cmp    rax,r12
  414ef2:	jne    414f01 <main@@Base+0xde31>
  414ef4:	jmp    414f19 <main@@Base+0xde49>
  414ef6:	neg    rcx
  414ef9:	mov    rax,r13
  414efc:	cmp    rax,r12
  414eff:	je     414f19 <main@@Base+0xde49>
  414f01:	add    QWORD PTR [r14],rcx
  414f04:	cmp    DWORD PTR [rsp+0x8],0x0
  414f09:	mov    rbx,r13
  414f0c:	mov    rax,QWORD PTR [rsp+0x28]
  414f11:	jne    414e42 <main@@Base+0xdd72>
  414f17:	jmp    414f34 <main@@Base+0xde64>
  414f19:	mov    r13,r12
  414f1c:	jmp    414f34 <main@@Base+0xde64>
  414f1e:	mov    rdi,r15
  414f21:	mov    rsi,rbx
  414f24:	mov    rdx,r12
  414f27:	mov    ecx,0x17
  414f2c:	call   424090 <flatcc_json_parser_set_error@@Base>
  414f31:	mov    r13,rax
  414f34:	mov    rax,r13
  414f37:	add    rsp,0x38
  414f3b:	pop    rbx
  414f3c:	pop    r12
  414f3e:	pop    r13
  414f40:	pop    r14
  414f42:	pop    r15
  414f44:	pop    rbp
  414f45:	ret    
  414f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f50:	push   rbp
  414f51:	push   r15
  414f53:	push   r14
  414f55:	push   r13
  414f57:	push   r12
  414f59:	push   rbx
  414f5a:	sub    rsp,0x38
  414f5e:	mov    r14,r8
  414f61:	mov    rbp,rcx
  414f64:	mov    r12,rdx
  414f67:	mov    rbx,rsi
  414f6a:	mov    r15,rdi
  414f6d:	mov    DWORD PTR [r8],0x0
  414f74:	cmp    rsi,rdx
  414f77:	je     414f8e <main@@Base+0xdebe>
  414f79:	mov    al,BYTE PTR [rbx]
  414f7b:	cmp    al,0x2e
  414f7d:	je     414f9f <main@@Base+0xdecf>
  414f7f:	cmp    al,0x22
  414f81:	jne    414fbe <main@@Base+0xdeee>
  414f83:	inc    rbx
  414f86:	mov    DWORD PTR [r15+0x14],0x0
  414f8e:	cmp    DWORD PTR [r15+0x14],0x0
  414f93:	je     414fcd <main@@Base+0xdefd>
  414f95:	cmp    rbx,r12
  414f98:	jne    41500d <main@@Base+0xdf3d>
  414f9a:	jmp    4150fc <main@@Base+0xe02c>
  414f9f:	mov    rdi,r15
  414fa2:	mov    rsi,rbx
  414fa5:	mov    rdx,r12
  414fa8:	mov    ecx,0x5
  414fad:	call   424090 <flatcc_json_parser_set_error@@Base>
  414fb2:	mov    rbx,rax
  414fb5:	cmp    DWORD PTR [r15+0x14],0x0
  414fba:	jne    414f95 <main@@Base+0xdec5>
  414fbc:	jmp    414fcd <main@@Base+0xdefd>
  414fbe:	mov    DWORD PTR [r15+0x14],0x1
  414fc6:	cmp    DWORD PTR [r15+0x14],0x0
  414fcb:	jne    414f95 <main@@Base+0xdec5>
  414fcd:	mov    rax,r12
  414fd0:	sub    rax,rbx
  414fd3:	cmp    rax,0x2
  414fd7:	jl     414ff3 <main@@Base+0xdf23>
  414fd9:	cmp    BYTE PTR [rbx],0x20
  414fdc:	jg     414f95 <main@@Base+0xdec5>
  414fde:	jne    414ff3 <main@@Base+0xdf23>
  414fe0:	cmp    BYTE PTR [rbx+0x1],0x20
  414fe4:	jle    414ff3 <main@@Base+0xdf23>
  414fe6:	inc    rbx
  414fe9:	cmp    rbx,r12
  414fec:	jne    41500d <main@@Base+0xdf3d>
  414fee:	jmp    4150fc <main@@Base+0xe02c>
  414ff3:	mov    rdi,r15
  414ff6:	mov    rsi,rbx
  414ff9:	mov    rdx,r12
  414ffc:	call   424110 <flatcc_json_parser_space_ext@@Base>
  415001:	mov    rbx,rax
  415004:	cmp    rbx,r12
  415007:	je     4150fc <main@@Base+0xe02c>
  41500d:	lea    rax,[rbp+0x8]
  415011:	mov    DWORD PTR [rsp+0xc],0x0
  415019:	mov    QWORD PTR [rsp+0x20],r14
  41501e:	mov    QWORD PTR [rsp+0x18],rbp
  415023:	mov    QWORD PTR [rsp+0x28],rax
  415028:	mov    rbp,QWORD PTR [rbp+0x0]
  41502c:	mov    r14,rax
  41502f:	nop
  415030:	mov    rdi,r15
  415033:	mov    rsi,rbx
  415036:	mov    rdx,r12
  415039:	lea    rcx,[rsp+0x14]
  41503e:	lea    r8,[rsp+0x30]
  415043:	lea    r9,[rsp+0x10]
  415048:	call   rbp
  41504a:	cmp    rax,r12
  41504d:	je     4150fc <main@@Base+0xe02c>
  415053:	mov    r13,rax
  415056:	cmp    rax,rbx
  415059:	jne    415070 <main@@Base+0xdfa0>
  41505b:	mov    rbp,QWORD PTR [r14]
  41505e:	add    r14,0x8
  415062:	test   rbp,rbp
  415065:	jne    415030 <main@@Base+0xdf60>
  415067:	jmp    415101 <main@@Base+0xe031>
  41506c:	nop    DWORD PTR [rax+0x0]
  415070:	cmp    DWORD PTR [rsp+0x14],0x0
  415075:	je     41509b <main@@Base+0xdfcb>
  415077:	mov    rdi,r15
  41507a:	mov    rsi,r13
  41507d:	mov    rdx,r12
  415080:	mov    ecx,0x8
  415085:	call   424090 <flatcc_json_parser_set_error@@Base>
  41508a:	mov    r14,QWORD PTR [rsp+0x20]
  41508f:	mov    rbp,QWORD PTR [rsp+0x18]
  415094:	cmp    rax,r12
  415097:	jne    4150e0 <main@@Base+0xe010>
  415099:	jmp    4150fc <main@@Base+0xe02c>
  41509b:	mov    rax,QWORD PTR [rsp+0x30]
  4150a0:	mov    rcx,rax
  4150a3:	shr    rcx,0x20
  4150a7:	mov    r14,QWORD PTR [rsp+0x20]
  4150ac:	mov    rbp,QWORD PTR [rsp+0x18]
  4150b1:	je     4150cd <main@@Base+0xdffd>
  4150b3:	mov    rdi,r15
  4150b6:	mov    rsi,r13
  4150b9:	mov    rdx,r12
  4150bc:	mov    ecx,0x7
  4150c1:	call   424090 <flatcc_json_parser_set_error@@Base>
  4150c6:	cmp    rax,r12
  4150c9:	jne    4150e0 <main@@Base+0xe010>
  4150cb:	jmp    4150fc <main@@Base+0xe02c>
  4150cd:	mov    DWORD PTR [rsp+0xc],eax
  4150d1:	mov    rax,r13
  4150d4:	cmp    rax,r12
  4150d7:	je     4150fc <main@@Base+0xe02c>
  4150d9:	nop    DWORD PTR [rax+0x0]
  4150e0:	mov    eax,DWORD PTR [rsp+0xc]
  4150e4:	add    DWORD PTR [r14],eax
  4150e7:	cmp    DWORD PTR [rsp+0x10],0x0
  4150ec:	mov    rbx,r13
  4150ef:	mov    rax,QWORD PTR [rsp+0x28]
  4150f4:	jne    415028 <main@@Base+0xdf58>
  4150fa:	jmp    415117 <main@@Base+0xe047>
  4150fc:	mov    r13,r12
  4150ff:	jmp    415117 <main@@Base+0xe047>
  415101:	mov    rdi,r15
  415104:	mov    rsi,rbx
  415107:	mov    rdx,r12
  41510a:	mov    ecx,0x17
  41510f:	call   424090 <flatcc_json_parser_set_error@@Base>
  415114:	mov    r13,rax
  415117:	mov    rax,r13
  41511a:	add    rsp,0x38
  41511e:	pop    rbx
  41511f:	pop    r12
  415121:	pop    r13
  415123:	pop    r14
  415125:	pop    r15
  415127:	pop    rbp
  415128:	ret    
  415129:	nop    DWORD PTR [rax+0x0]
  415130:	push   rbp
  415131:	push   r15
  415133:	push   r14
  415135:	push   r13
  415137:	push   r12
  415139:	push   rbx
  41513a:	sub    rsp,0x38
  41513e:	mov    r14,r8
  415141:	mov    rbp,rcx
  415144:	mov    r12,rdx
  415147:	mov    rbx,rsi
  41514a:	mov    r15,rdi
  41514d:	mov    QWORD PTR [r8],0x0
  415154:	cmp    rsi,rdx
  415157:	je     41516e <main@@Base+0xe09e>
  415159:	mov    al,BYTE PTR [rbx]
  41515b:	cmp    al,0x2e
  41515d:	je     41517f <main@@Base+0xe0af>
  41515f:	cmp    al,0x22
  415161:	jne    41519e <main@@Base+0xe0ce>
  415163:	inc    rbx
  415166:	mov    DWORD PTR [r15+0x14],0x0
  41516e:	cmp    DWORD PTR [r15+0x14],0x0
  415173:	je     4151ad <main@@Base+0xe0dd>
  415175:	cmp    rbx,r12
  415178:	jne    4151ed <main@@Base+0xe11d>
  41517a:	jmp    4152a5 <main@@Base+0xe1d5>
  41517f:	mov    rdi,r15
  415182:	mov    rsi,rbx
  415185:	mov    rdx,r12
  415188:	mov    ecx,0x5
  41518d:	call   424090 <flatcc_json_parser_set_error@@Base>
  415192:	mov    rbx,rax
  415195:	cmp    DWORD PTR [r15+0x14],0x0
  41519a:	jne    415175 <main@@Base+0xe0a5>
  41519c:	jmp    4151ad <main@@Base+0xe0dd>
  41519e:	mov    DWORD PTR [r15+0x14],0x1
  4151a6:	cmp    DWORD PTR [r15+0x14],0x0
  4151ab:	jne    415175 <main@@Base+0xe0a5>
  4151ad:	mov    rax,r12
  4151b0:	sub    rax,rbx
  4151b3:	cmp    rax,0x2
  4151b7:	jl     4151d3 <main@@Base+0xe103>
  4151b9:	cmp    BYTE PTR [rbx],0x20
  4151bc:	jg     415175 <main@@Base+0xe0a5>
  4151be:	jne    4151d3 <main@@Base+0xe103>
  4151c0:	cmp    BYTE PTR [rbx+0x1],0x20
  4151c4:	jle    4151d3 <main@@Base+0xe103>
  4151c6:	inc    rbx
  4151c9:	cmp    rbx,r12
  4151cc:	jne    4151ed <main@@Base+0xe11d>
  4151ce:	jmp    4152a5 <main@@Base+0xe1d5>
  4151d3:	mov    rdi,r15
  4151d6:	mov    rsi,rbx
  4151d9:	mov    rdx,r12
  4151dc:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4151e1:	mov    rbx,rax
  4151e4:	cmp    rbx,r12
  4151e7:	je     4152a5 <main@@Base+0xe1d5>
  4151ed:	lea    rax,[rbp+0x8]
  4151f1:	xor    ecx,ecx
  4151f3:	mov    QWORD PTR [rsp+0x20],rcx
  4151f8:	mov    QWORD PTR [rsp+0x18],r14
  4151fd:	mov    QWORD PTR [rsp+0x10],rbp
  415202:	mov    QWORD PTR [rsp+0x28],rax
  415207:	mov    rbp,QWORD PTR [rbp+0x0]
  41520b:	mov    r14,rax
  41520e:	xchg   ax,ax
  415210:	mov    rdi,r15
  415213:	mov    rsi,rbx
  415216:	mov    rdx,r12
  415219:	lea    rcx,[rsp+0xc]
  41521e:	lea    r8,[rsp+0x30]
  415223:	lea    r9,[rsp+0x8]
  415228:	call   rbp
  41522a:	cmp    rax,r12
  41522d:	je     4152a5 <main@@Base+0xe1d5>
  41522f:	mov    r13,rax
  415232:	cmp    rax,rbx
  415235:	jne    415250 <main@@Base+0xe180>
  415237:	mov    rbp,QWORD PTR [r14]
  41523a:	add    r14,0x8
  41523e:	test   rbp,rbp
  415241:	jne    415210 <main@@Base+0xe140>
  415243:	jmp    4152aa <main@@Base+0xe1da>
  415245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41524f:	nop
  415250:	cmp    DWORD PTR [rsp+0xc],0x0
  415255:	je     41526c <main@@Base+0xe19c>
  415257:	mov    rdi,r15
  41525a:	mov    rsi,r13
  41525d:	mov    rdx,r12
  415260:	mov    ecx,0x8
  415265:	call   424090 <flatcc_json_parser_set_error@@Base>
  41526a:	jmp    415279 <main@@Base+0xe1a9>
  41526c:	mov    rax,QWORD PTR [rsp+0x30]
  415271:	mov    QWORD PTR [rsp+0x20],rax
  415276:	mov    rax,r13
  415279:	mov    r14,QWORD PTR [rsp+0x18]
  41527e:	mov    rbp,QWORD PTR [rsp+0x10]
  415283:	cmp    rax,r12
  415286:	je     4152a5 <main@@Base+0xe1d5>
  415288:	mov    rax,QWORD PTR [rsp+0x20]
  41528d:	add    QWORD PTR [r14],rax
  415290:	cmp    DWORD PTR [rsp+0x8],0x0
  415295:	mov    rbx,r13
  415298:	mov    rax,QWORD PTR [rsp+0x28]
  41529d:	jne    415207 <main@@Base+0xe137>
  4152a3:	jmp    4152c0 <main@@Base+0xe1f0>
  4152a5:	mov    r13,r12
  4152a8:	jmp    4152c0 <main@@Base+0xe1f0>
  4152aa:	mov    rdi,r15
  4152ad:	mov    rsi,rbx
  4152b0:	mov    rdx,r12
  4152b3:	mov    ecx,0x17
  4152b8:	call   424090 <flatcc_json_parser_set_error@@Base>
  4152bd:	mov    r13,rax
  4152c0:	mov    rax,r13
  4152c3:	add    rsp,0x38
  4152c7:	pop    rbx
  4152c8:	pop    r12
  4152ca:	pop    r13
  4152cc:	pop    r14
  4152ce:	pop    r15
  4152d0:	pop    rbp
  4152d1:	ret    
  4152d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4152dc:	nop    DWORD PTR [rax+0x0]
  4152e0:	push   rbp
  4152e1:	push   r15
  4152e3:	push   r14
  4152e5:	push   r13
  4152e7:	push   r12
  4152e9:	push   rbx
  4152ea:	sub    rsp,0x28
  4152ee:	mov    rbx,r8
  4152f1:	mov    rbp,rcx
  4152f4:	mov    r13,rdx
  4152f7:	mov    r12,rsi
  4152fa:	mov    r15,rdi
  4152fd:	mov    QWORD PTR [r8],0x0
  415304:	cmp    rsi,rdx
  415307:	je     415320 <main@@Base+0xe250>
  415309:	mov    al,BYTE PTR [r12]
  41530d:	cmp    al,0x2e
  41530f:	je     415331 <main@@Base+0xe261>
  415311:	cmp    al,0x22
  415313:	jne    415350 <main@@Base+0xe280>
  415315:	inc    r12
  415318:	mov    DWORD PTR [r15+0x14],0x0
  415320:	cmp    DWORD PTR [r15+0x14],0x0
  415325:	je     41535f <main@@Base+0xe28f>
  415327:	cmp    r12,r13
  41532a:	jne    4153a3 <main@@Base+0xe2d3>
  41532c:	jmp    41544f <main@@Base+0xe37f>
  415331:	mov    rdi,r15
  415334:	mov    rsi,r12
  415337:	mov    rdx,r13
  41533a:	mov    ecx,0x5
  41533f:	call   424090 <flatcc_json_parser_set_error@@Base>
  415344:	mov    r12,rax
  415347:	cmp    DWORD PTR [r15+0x14],0x0
  41534c:	jne    415327 <main@@Base+0xe257>
  41534e:	jmp    41535f <main@@Base+0xe28f>
  415350:	mov    DWORD PTR [r15+0x14],0x1
  415358:	cmp    DWORD PTR [r15+0x14],0x0
  41535d:	jne    415327 <main@@Base+0xe257>
  41535f:	mov    rax,r13
  415362:	sub    rax,r12
  415365:	cmp    rax,0x2
  415369:	jl     415389 <main@@Base+0xe2b9>
  41536b:	cmp    BYTE PTR [r12],0x20
  415370:	jg     415327 <main@@Base+0xe257>
  415372:	jne    415389 <main@@Base+0xe2b9>
  415374:	cmp    BYTE PTR [r12+0x1],0x20
  41537a:	jle    415389 <main@@Base+0xe2b9>
  41537c:	inc    r12
  41537f:	cmp    r12,r13
  415382:	jne    4153a3 <main@@Base+0xe2d3>
  415384:	jmp    41544f <main@@Base+0xe37f>
  415389:	mov    rdi,r15
  41538c:	mov    rsi,r12
  41538f:	mov    rdx,r13
  415392:	call   424110 <flatcc_json_parser_space_ext@@Base>
  415397:	mov    r12,rax
  41539a:	cmp    r12,r13
  41539d:	je     41544f <main@@Base+0xe37f>
  4153a3:	lea    rcx,[rbp+0x8]
  4153a7:	mov    r14,rsp
  4153aa:	mov    QWORD PTR [rsp+0x18],rbx
  4153af:	mov    QWORD PTR [rsp+0x10],rbp
  4153b4:	mov    QWORD PTR [rsp+0x8],rcx
  4153b9:	mov    rbx,QWORD PTR [rbp+0x0]
  4153bd:	mov    rbp,rcx
  4153c0:	mov    rdi,r15
  4153c3:	mov    rsi,r12
  4153c6:	mov    rdx,r13
  4153c9:	lea    rcx,[rsp+0x4]
  4153ce:	lea    r8,[rsp+0x20]
  4153d3:	mov    r9,r14
  4153d6:	call   rbx
  4153d8:	cmp    rax,r13
  4153db:	je     41544f <main@@Base+0xe37f>
  4153dd:	cmp    rax,r12
  4153e0:	jne    415400 <main@@Base+0xe330>
  4153e2:	mov    rbx,QWORD PTR [rbp+0x0]
  4153e6:	add    rbp,0x8
  4153ea:	test   rbx,rbx
  4153ed:	jne    4153c0 <main@@Base+0xe2f0>
  4153ef:	jmp    415454 <main@@Base+0xe384>
  4153f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153fb:	nop    DWORD PTR [rax+rax*1+0x0]
  415400:	cmp    DWORD PTR [rsp+0x4],0x0
  415405:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  41540b:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x1f69d]        # 434ab0 <_IO_stdin_used@@Base+0xab0>
  415413:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1f6a5]        # 434ac0 <_IO_stdin_used@@Base+0xac0>
  41541b:	vhaddpd xmm0,xmm0,xmm0
  41541f:	je     415429 <main@@Base+0xe359>
  415421:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x1f6a7]        # 434ad0 <_IO_stdin_used@@Base+0xad0>
  415429:	mov    rbx,QWORD PTR [rsp+0x18]
  41542e:	vaddsd xmm0,xmm0,QWORD PTR [rbx]
  415432:	vmovsd QWORD PTR [rbx],xmm0
  415436:	cmp    DWORD PTR [rsp],0x0
  41543a:	mov    r12,rax
  41543d:	mov    rbp,QWORD PTR [rsp+0x10]
  415442:	mov    rcx,QWORD PTR [rsp+0x8]
  415447:	jne    4153b9 <main@@Base+0xe2e9>
  41544d:	jmp    415467 <main@@Base+0xe397>
  41544f:	mov    rax,r13
  415452:	jmp    415467 <main@@Base+0xe397>
  415454:	mov    rdi,r15
  415457:	mov    rsi,r12
  41545a:	mov    rdx,r13
  41545d:	mov    ecx,0x17
  415462:	call   424090 <flatcc_json_parser_set_error@@Base>
  415467:	add    rsp,0x28
  41546b:	pop    rbx
  41546c:	pop    r12
  41546e:	pop    r13
  415470:	pop    r14
  415472:	pop    r15
  415474:	pop    rbp
  415475:	ret    
  415476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415480:	push   r15
  415482:	push   r14
  415484:	push   r12
  415486:	push   rbx
  415487:	push   rax
  415488:	mov    r15,r8
  41548b:	mov    r14,rcx
  41548e:	mov    rbx,rsi
  415491:	mov    rcx,rdx
  415494:	sub    rcx,rsi
  415497:	cmp    rcx,0x8
  41549b:	jb     4154a4 <main@@Base+0xe3d4>
  41549d:	movbe  rcx,QWORD PTR [rbx]
  4154a2:	jmp    415512 <main@@Base+0xe442>
  4154a4:	dec    rcx
  4154a7:	cmp    rcx,0x6
  4154ab:	ja     4156a6 <main@@Base+0xe5d6>
  4154b1:	xor    eax,eax
  4154b3:	lea    rsi,[rip+0x1f0ca]        # 434584 <_IO_stdin_used@@Base+0x584>
  4154ba:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4154be:	add    rcx,rsi
  4154c1:	jmp    rcx
  4154c3:	movsx  rax,BYTE PTR [rbx+0x6]
  4154c8:	shl    rax,0x8
  4154cc:	movsx  rcx,BYTE PTR [rbx+0x5]
  4154d1:	shl    rcx,0x10
  4154d5:	or     rax,rcx
  4154d8:	movsx  rcx,BYTE PTR [rbx+0x4]
  4154dd:	shl    rcx,0x18
  4154e1:	or     rax,rcx
  4154e4:	movsx  rcx,BYTE PTR [rbx+0x3]
  4154e9:	shl    rcx,0x20
  4154ed:	or     rax,rcx
  4154f0:	movsx  rcx,BYTE PTR [rbx+0x2]
  4154f5:	shl    rcx,0x28
  4154f9:	or     rax,rcx
  4154fc:	movsx  rcx,BYTE PTR [rbx+0x1]
  415501:	shl    rcx,0x30
  415505:	or     rax,rcx
  415508:	movzx  ecx,BYTE PTR [rbx]
  41550b:	shl    rcx,0x38
  41550f:	or     rcx,rax
  415512:	movabs rax,0x496e506172656e74
  41551c:	cmp    rcx,rax
  41551f:	jne    41553b <main@@Base+0xe46b>
  415521:	lea    rax,[rbx+0x8]
  415525:	mov    rsi,rdx
  415528:	sub    rsi,rax
  41552b:	cmp    rsi,0x8
  41552f:	jb     41556c <main@@Base+0xe49c>
  415531:	movbe  rax,QWORD PTR [rax]
  415536:	jmp    4155da <main@@Base+0xe50a>
  41553b:	shr    rcx,0x20
  41553f:	cmp    rcx,0x4e4f4e45
  415546:	jne    4156a6 <main@@Base+0xe5d6>
  41554c:	mov    rsi,rbx
  41554f:	mov    ecx,0x4
  415554:	mov    r8,r9
  415557:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41555c:	cmp    rax,rbx
  41555f:	je     4156a6 <main@@Base+0xe5d6>
  415565:	xor    ecx,ecx
  415567:	jmp    415699 <main@@Base+0xe5c9>
  41556c:	dec    rsi
  41556f:	cmp    rsi,0x6
  415573:	ja     4156a6 <main@@Base+0xe5d6>
  415579:	xor    ecx,ecx
  41557b:	lea    r8,[rip+0x1f01e]        # 4345a0 <_IO_stdin_used@@Base+0x5a0>
  415582:	movsxd rsi,DWORD PTR [r8+rsi*4]
  415586:	add    rsi,r8
  415589:	jmp    rsi
  41558b:	movsx  rcx,BYTE PTR [rbx+0xe]
  415590:	shl    rcx,0x8
  415594:	movsx  rsi,BYTE PTR [rbx+0xd]
  415599:	shl    rsi,0x10
  41559d:	or     rcx,rsi
  4155a0:	movsx  rsi,BYTE PTR [rbx+0xc]
  4155a5:	shl    rsi,0x18
  4155a9:	or     rcx,rsi
  4155ac:	movsx  rsi,BYTE PTR [rbx+0xb]
  4155b1:	shl    rsi,0x20
  4155b5:	or     rcx,rsi
  4155b8:	movsx  rsi,BYTE PTR [rbx+0xa]
  4155bd:	shl    rsi,0x28
  4155c1:	or     rcx,rsi
  4155c4:	movsx  rsi,BYTE PTR [rbx+0x9]
  4155c9:	shl    rsi,0x30
  4155cd:	or     rcx,rsi
  4155d0:	movzx  eax,BYTE PTR [rax]
  4155d3:	shl    rax,0x38
  4155d7:	or     rax,rcx
  4155da:	movabs rcx,0x4e616d6573706163
  4155e4:	cmp    rax,rcx
  4155e7:	jne    4156a6 <main@@Base+0xe5d6>
  4155ed:	lea    r12,[rbx+0x10]
  4155f1:	mov    rcx,rdx
  4155f4:	sub    rcx,r12
  4155f7:	cmp    rcx,0x8
  4155fb:	jb     415605 <main@@Base+0xe535>
  4155fd:	movbe  rcx,QWORD PTR [r12]
  415603:	jmp    415675 <main@@Base+0xe5a5>
  415605:	dec    rcx
  415608:	cmp    rcx,0x6
  41560c:	ja     4156a6 <main@@Base+0xe5d6>
  415612:	xor    eax,eax
  415614:	lea    rsi,[rip+0x1efa1]        # 4345bc <_IO_stdin_used@@Base+0x5bc>
  41561b:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41561f:	add    rcx,rsi
  415622:	jmp    rcx
  415624:	movsx  rax,BYTE PTR [rbx+0x16]
  415629:	shl    rax,0x8
  41562d:	movsx  rcx,BYTE PTR [rbx+0x15]
  415632:	shl    rcx,0x10
  415636:	or     rax,rcx
  415639:	movsx  rcx,BYTE PTR [rbx+0x14]
  41563e:	shl    rcx,0x18
  415642:	or     rax,rcx
  415645:	movsx  rcx,BYTE PTR [rbx+0x13]
  41564a:	shl    rcx,0x20
  41564e:	or     rax,rcx
  415651:	movsx  rcx,BYTE PTR [rbx+0x12]
  415656:	shl    rcx,0x28
  41565a:	or     rax,rcx
  41565d:	movsx  rcx,BYTE PTR [rbx+0x11]
  415662:	shl    rcx,0x30
  415666:	or     rax,rcx
  415669:	movzx  ecx,BYTE PTR [r12]
  41566e:	shl    rcx,0x38
  415672:	or     rcx,rax
  415675:	shr    rcx,0x38
  415679:	cmp    rcx,0x65
  41567d:	jne    4156a6 <main@@Base+0xe5d6>
  41567f:	mov    rsi,r12
  415682:	mov    ecx,0x1
  415687:	mov    r8,r9
  41568a:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41568f:	cmp    rax,r12
  415692:	je     4156a6 <main@@Base+0xe5d6>
  415694:	mov    ecx,0x1
  415699:	mov    rbx,rax
  41569c:	mov    QWORD PTR [r15],rcx
  41569f:	mov    DWORD PTR [r14],0x0
  4156a6:	mov    rax,rbx
  4156a9:	add    rsp,0x8
  4156ad:	pop    rbx
  4156ae:	pop    r12
  4156b0:	pop    r14
  4156b2:	pop    r15
  4156b4:	ret    
  4156b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4156bf:	nop
  4156c0:	push   r15
  4156c2:	push   r14
  4156c4:	push   rbx
  4156c5:	mov    r15,r8
  4156c8:	mov    r14,rcx
  4156cb:	mov    rbx,rsi
  4156ce:	mov    rcx,rdx
  4156d1:	sub    rcx,rsi
  4156d4:	cmp    rcx,0x8
  4156d8:	jb     4156e1 <main@@Base+0xe611>
  4156da:	movbe  rcx,QWORD PTR [rbx]
  4156df:	jmp    41574f <main@@Base+0xe67f>
  4156e1:	dec    rcx
  4156e4:	cmp    rcx,0x6
  4156e8:	ja     41580e <main@@Base+0xe73e>
  4156ee:	xor    eax,eax
  4156f0:	lea    rsi,[rip+0x1eee1]        # 4345d8 <_IO_stdin_used@@Base+0x5d8>
  4156f7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4156fb:	add    rcx,rsi
  4156fe:	jmp    rcx
  415700:	movsx  rax,BYTE PTR [rbx+0x6]
  415705:	shl    rax,0x8
  415709:	movsx  rcx,BYTE PTR [rbx+0x5]
  41570e:	shl    rcx,0x10
  415712:	or     rax,rcx
  415715:	movsx  rcx,BYTE PTR [rbx+0x4]
  41571a:	shl    rcx,0x18
  41571e:	or     rax,rcx
  415721:	movsx  rcx,BYTE PTR [rbx+0x3]
  415726:	shl    rcx,0x20
  41572a:	or     rax,rcx
  41572d:	movsx  rcx,BYTE PTR [rbx+0x2]
  415732:	shl    rcx,0x28
  415736:	or     rax,rcx
  415739:	movsx  rcx,BYTE PTR [rbx+0x1]
  41573e:	shl    rcx,0x30
  415742:	or     rax,rcx
  415745:	movzx  ecx,BYTE PTR [rbx]
  415748:	shl    rcx,0x38
  41574c:	or     rcx,rax
  41574f:	mov    rax,rcx
  415752:	shr    rax,0x21
  415756:	cmp    rax,0x3432bc18
  41575c:	ja     415791 <main@@Base+0xe6c1>
  41575e:	shr    rcx,0x20
  415762:	cmp    rcx,0x68657831
  415769:	jne    41580e <main@@Base+0xe73e>
  41576f:	mov    rsi,rbx
  415772:	mov    ecx,0x4
  415777:	mov    r8,r9
  41577a:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41577f:	cmp    rax,rbx
  415782:	je     41580e <main@@Base+0xe73e>
  415788:	mov    QWORD PTR [r15],0x3
  41578f:	jmp    415804 <main@@Base+0xe734>
  415791:	mov    rax,rcx
  415794:	shr    rax,0x10
  415798:	movabs rsi,0x6865786e6567
  4157a2:	cmp    rax,rsi
  4157a5:	jne    4157cc <main@@Base+0xe6fc>
  4157a7:	mov    rsi,rbx
  4157aa:	mov    ecx,0x6
  4157af:	mov    r8,r9
  4157b2:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4157b7:	cmp    rax,rbx
  4157ba:	je     41580e <main@@Base+0xe73e>
  4157bc:	mov    QWORD PTR [r15],0xfffffffffffffffe
  4157c3:	mov    DWORD PTR [r14],0x1
  4157ca:	jmp    41580b <main@@Base+0xe73b>
  4157cc:	movabs rax,0x6865783200000000
  4157d6:	movabs rsi,0xffffffff00000000
  4157e0:	and    rcx,rsi
  4157e3:	cmp    rcx,rax
  4157e6:	jne    41580e <main@@Base+0xe73e>
  4157e8:	mov    rsi,rbx
  4157eb:	mov    ecx,0x4
  4157f0:	mov    r8,r9
  4157f3:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4157f8:	cmp    rax,rbx
  4157fb:	je     41580e <main@@Base+0xe73e>
  4157fd:	mov    QWORD PTR [r15],0x7eafbeaf
  415804:	mov    DWORD PTR [r14],0x0
  41580b:	mov    rbx,rax
  41580e:	mov    rax,rbx
  415811:	pop    rbx
  415812:	pop    r14
  415814:	pop    r15
  415816:	ret    
  415817:	nop    WORD PTR [rax+rax*1+0x0]
  415820:	push   r15
  415822:	push   r14
  415824:	push   rbx
  415825:	mov    r15,r8
  415828:	mov    r14,rcx
  41582b:	mov    rbx,rsi
  41582e:	mov    rcx,rdx
  415831:	sub    rcx,rsi
  415834:	cmp    rcx,0x8
  415838:	jb     415841 <main@@Base+0xe771>
  41583a:	movbe  rcx,QWORD PTR [rbx]
  41583f:	jmp    4158af <main@@Base+0xe7df>
  415841:	dec    rcx
  415844:	cmp    rcx,0x6
  415848:	ja     4159b5 <main@@Base+0xe8e5>
  41584e:	xor    eax,eax
  415850:	lea    rsi,[rip+0x1ed9d]        # 4345f4 <_IO_stdin_used@@Base+0x5f4>
  415857:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41585b:	add    rcx,rsi
  41585e:	jmp    rcx
  415860:	movsx  rax,BYTE PTR [rbx+0x6]
  415865:	shl    rax,0x8
  415869:	movsx  rcx,BYTE PTR [rbx+0x5]
  41586e:	shl    rcx,0x10
  415872:	or     rax,rcx
  415875:	movsx  rcx,BYTE PTR [rbx+0x4]
  41587a:	shl    rcx,0x18
  41587e:	or     rax,rcx
  415881:	movsx  rcx,BYTE PTR [rbx+0x3]
  415886:	shl    rcx,0x20
  41588a:	or     rax,rcx
  41588d:	movsx  rcx,BYTE PTR [rbx+0x2]
  415892:	shl    rcx,0x28
  415896:	or     rax,rcx
  415899:	movsx  rcx,BYTE PTR [rbx+0x1]
  41589e:	shl    rcx,0x30
  4158a2:	or     rax,rcx
  4158a5:	movzx  ecx,BYTE PTR [rbx]
  4158a8:	shl    rcx,0x38
  4158ac:	or     rcx,rax
  4158af:	mov    rax,rcx
  4158b2:	shr    rax,0x21
  4158b6:	cmp    rax,0x34b73a18
  4158bc:	ja     4158fb <main@@Base+0xe82b>
  4158be:	shr    rcx,0x20
  4158c2:	cmp    rcx,0x696e7431
  4158c9:	jne    4159b5 <main@@Base+0xe8e5>
  4158cf:	mov    rsi,rbx
  4158d2:	mov    ecx,0x4
  4158d7:	mov    r8,r9
  4158da:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  4158df:	cmp    rax,rbx
  4158e2:	je     4159b5 <main@@Base+0xe8e5>
  4158e8:	mov    QWORD PTR [r15],0x2
  4158ef:	mov    DWORD PTR [r14],0x0
  4158f6:	jmp    4159b2 <main@@Base+0xe8e2>
  4158fb:	movabs r8,0x696e746e65670000
  415905:	cmp    rcx,r8
  415908:	jae    41594f <main@@Base+0xe87f>
  41590a:	movabs rax,0x696e743200000000
  415914:	movabs rsi,0xffffffff00000000
  41591e:	and    rcx,rsi
  415921:	cmp    rcx,rax
  415924:	jne    4159b5 <main@@Base+0xe8e5>
  41592a:	mov    rsi,rbx
  41592d:	mov    ecx,0x4
  415932:	mov    r8,r9
  415935:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41593a:	cmp    rax,rbx
  41593d:	je     4159b5 <main@@Base+0xe8e5>
  41593f:	mov    QWORD PTR [r15],0x2a
  415946:	mov    DWORD PTR [r14],0x0
  41594d:	jmp    4159b2 <main@@Base+0xe8e2>
  41594f:	mov    rsi,rcx
  415952:	and    rsi,0xffffffffffffff00
  415959:	lea    rax,[r8+0x3200]
  415960:	cmp    rsi,rax
  415963:	jne    415983 <main@@Base+0xe8b3>
  415965:	mov    rsi,rbx
  415968:	mov    ecx,0x7
  41596d:	mov    r8,r9
  415970:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415975:	cmp    rax,rbx
  415978:	je     4159b5 <main@@Base+0xe8e5>
  41597a:	mov    QWORD PTR [r15],0xffffffffffffffff
  415981:	jmp    4159ab <main@@Base+0xe8db>
  415983:	and    rcx,0xffffffffffff0000
  41598a:	cmp    rcx,r8
  41598d:	jne    4159b5 <main@@Base+0xe8e5>
  41598f:	mov    rsi,rbx
  415992:	mov    ecx,0x6
  415997:	mov    r8,r9
  41599a:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  41599f:	cmp    rax,rbx
  4159a2:	je     4159b5 <main@@Base+0xe8e5>
  4159a4:	mov    QWORD PTR [r15],0xfffffffffffffffe
  4159ab:	mov    DWORD PTR [r14],0x1
  4159b2:	mov    rbx,rax
  4159b5:	mov    rax,rbx
  4159b8:	pop    rbx
  4159b9:	pop    r14
  4159bb:	pop    r15
  4159bd:	ret    
  4159be:	xchg   ax,ax
  4159c0:	push   r15
  4159c2:	push   r14
  4159c4:	push   rbx
  4159c5:	mov    r15,r8
  4159c8:	mov    r14,rcx
  4159cb:	mov    rbx,rsi
  4159ce:	mov    rcx,rdx
  4159d1:	sub    rcx,rsi
  4159d4:	cmp    rcx,0x8
  4159d8:	jb     4159e1 <main@@Base+0xe911>
  4159da:	movbe  rcx,QWORD PTR [rbx]
  4159df:	jmp    415a4f <main@@Base+0xe97f>
  4159e1:	dec    rcx
  4159e4:	cmp    rcx,0x6
  4159e8:	ja     415aff <main@@Base+0xea2f>
  4159ee:	xor    eax,eax
  4159f0:	lea    rsi,[rip+0x1ec19]        # 434610 <_IO_stdin_used@@Base+0x610>
  4159f7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4159fb:	add    rcx,rsi
  4159fe:	jmp    rcx
  415a00:	movsx  rax,BYTE PTR [rbx+0x6]
  415a05:	shl    rax,0x8
  415a09:	movsx  rcx,BYTE PTR [rbx+0x5]
  415a0e:	shl    rcx,0x10
  415a12:	or     rax,rcx
  415a15:	movsx  rcx,BYTE PTR [rbx+0x4]
  415a1a:	shl    rcx,0x18
  415a1e:	or     rax,rcx
  415a21:	movsx  rcx,BYTE PTR [rbx+0x3]
  415a26:	shl    rcx,0x20
  415a2a:	or     rax,rcx
  415a2d:	movsx  rcx,BYTE PTR [rbx+0x2]
  415a32:	shl    rcx,0x28
  415a36:	or     rax,rcx
  415a39:	movsx  rcx,BYTE PTR [rbx+0x1]
  415a3e:	shl    rcx,0x30
  415a42:	or     rax,rcx
  415a45:	movzx  ecx,BYTE PTR [rbx]
  415a48:	shl    rcx,0x38
  415a4c:	or     rcx,rax
  415a4f:	mov    rsi,rcx
  415a52:	shr    rsi,0x21
  415a56:	movabs rax,0xffffffff00000000
  415a60:	and    rax,rcx
  415a63:	cmp    rsi,0x3732b398
  415a6a:	ja     415a9d <main@@Base+0xe9cd>
  415a6c:	movabs rcx,0x6e65673100000000
  415a76:	cmp    rax,rcx
  415a79:	jne    415aff <main@@Base+0xea2f>
  415a7f:	mov    rsi,rbx
  415a82:	mov    ecx,0x4
  415a87:	mov    r8,r9
  415a8a:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415a8f:	cmp    rax,rbx
  415a92:	je     415aff <main@@Base+0xea2f>
  415a94:	mov    QWORD PTR [r15],0xfffffffffffffff4
  415a9b:	jmp    415af5 <main@@Base+0xea25>
  415a9d:	movabs rcx,0x6e65673200000000
  415aa7:	cmp    rax,rcx
  415aaa:	je     415ad9 <main@@Base+0xea09>
  415aac:	movabs rcx,0x6e65673300000000
  415ab6:	cmp    rax,rcx
  415ab9:	jne    415aff <main@@Base+0xea2f>
  415abb:	mov    rsi,rbx
  415abe:	mov    ecx,0x4
  415ac3:	mov    r8,r9
  415ac6:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415acb:	cmp    rax,rbx
  415ace:	je     415aff <main@@Base+0xea2f>
  415ad0:	mov    QWORD PTR [r15],0xfffffffffffffff6
  415ad7:	jmp    415af5 <main@@Base+0xea25>
  415ad9:	mov    rsi,rbx
  415adc:	mov    ecx,0x4
  415ae1:	mov    r8,r9
  415ae4:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415ae9:	cmp    rax,rbx
  415aec:	je     415aff <main@@Base+0xea2f>
  415aee:	mov    QWORD PTR [r15],0xfffffffffffffff5
  415af5:	mov    DWORD PTR [r14],0x1
  415afc:	mov    rbx,rax
  415aff:	mov    rax,rbx
  415b02:	pop    rbx
  415b03:	pop    r14
  415b05:	pop    r15
  415b07:	ret    
  415b08:	nop    DWORD PTR [rax+rax*1+0x0]
  415b10:	push   r15
  415b12:	push   r14
  415b14:	push   rbx
  415b15:	mov    r15,r8
  415b18:	mov    r14,rcx
  415b1b:	mov    rbx,rsi
  415b1e:	mov    rcx,rdx
  415b21:	sub    rcx,rsi
  415b24:	cmp    rcx,0x8
  415b28:	jb     415b31 <main@@Base+0xea61>
  415b2a:	movbe  rcx,QWORD PTR [rbx]
  415b2f:	jmp    415b9f <main@@Base+0xeacf>
  415b31:	dec    rcx
  415b34:	cmp    rcx,0x6
  415b38:	ja     415d55 <main@@Base+0xec85>
  415b3e:	xor    eax,eax
  415b40:	lea    rsi,[rip+0x1eae5]        # 43462c <_IO_stdin_used@@Base+0x62c>
  415b47:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415b4b:	add    rcx,rsi
  415b4e:	jmp    rcx
  415b50:	movsx  rax,BYTE PTR [rbx+0x6]
  415b55:	shl    rax,0x8
  415b59:	movsx  rcx,BYTE PTR [rbx+0x5]
  415b5e:	shl    rcx,0x10
  415b62:	or     rax,rcx
  415b65:	movsx  rcx,BYTE PTR [rbx+0x4]
  415b6a:	shl    rcx,0x18
  415b6e:	or     rax,rcx
  415b71:	movsx  rcx,BYTE PTR [rbx+0x3]
  415b76:	shl    rcx,0x20
  415b7a:	or     rax,rcx
  415b7d:	movsx  rcx,BYTE PTR [rbx+0x2]
  415b82:	shl    rcx,0x28
  415b86:	or     rax,rcx
  415b89:	movsx  rcx,BYTE PTR [rbx+0x1]
  415b8e:	shl    rcx,0x30
  415b92:	or     rax,rcx
  415b95:	movzx  ecx,BYTE PTR [rbx]
  415b98:	shl    rcx,0x38
  415b9c:	or     rcx,rax
  415b9f:	mov    rax,rcx
  415ba2:	shr    rax,0x20
  415ba6:	cmp    rax,0x4e4f4e44
  415bac:	ja     415c03 <main@@Base+0xeb33>
  415bae:	movabs r8,0x426f6f6b46616e00
  415bb8:	mov    rsi,rcx
  415bbb:	and    rsi,0xffffffffff000000
  415bc2:	cmp    rcx,r8
  415bc5:	jae    415c57 <main@@Base+0xeb87>
  415bcb:	movabs rax,0x42656c6c65000000
  415bd5:	cmp    rsi,rax
  415bd8:	jne    415d55 <main@@Base+0xec85>
  415bde:	mov    rsi,rbx
  415be1:	mov    ecx,0x5
  415be6:	mov    r8,r9
  415be9:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415bee:	cmp    rax,rbx
  415bf1:	je     415d55 <main@@Base+0xec85>
  415bf7:	mov    QWORD PTR [r15],0x9
  415bfe:	jmp    415d4b <main@@Base+0xec7b>
  415c03:	movabs rax,0x4f74686572000000
  415c0d:	cmp    rcx,rax
  415c10:	jae    415c8b <main@@Base+0xebbb>
  415c12:	movabs rax,0x4e4f4e4500000000
  415c1c:	movabs rsi,0xffffffff00000000
  415c26:	and    rcx,rsi
  415c29:	cmp    rcx,rax
  415c2c:	jne    415d55 <main@@Base+0xec85>
  415c32:	mov    rsi,rbx
  415c35:	mov    ecx,0x4
  415c3a:	mov    r8,r9
  415c3d:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415c42:	cmp    rax,rbx
  415c45:	je     415d55 <main@@Base+0xec85>
  415c4b:	mov    QWORD PTR [r15],0x0
  415c52:	jmp    415d4b <main@@Base+0xec7b>
  415c57:	movabs rax,0x4d754c616e000000
  415c61:	cmp    rsi,rax
  415c64:	jne    415ccc <main@@Base+0xebfc>
  415c66:	mov    rsi,rbx
  415c69:	mov    ecx,0x5
  415c6e:	mov    r8,r9
  415c71:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415c76:	cmp    rax,rbx
  415c79:	je     415d55 <main@@Base+0xec85>
  415c7f:	mov    QWORD PTR [r15],0x2
  415c86:	jmp    415d4b <main@@Base+0xec7b>
  415c8b:	movabs r8,0x526170756e7a656c
  415c95:	cmp    rcx,r8
  415c98:	jae    415cf6 <main@@Base+0xec26>
  415c9a:	and    rcx,0xffffffffff000000
  415ca1:	cmp    rcx,rax
  415ca4:	jne    415d55 <main@@Base+0xec85>
  415caa:	mov    rsi,rbx
  415cad:	mov    ecx,0x5
  415cb2:	mov    r8,r9
  415cb5:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415cba:	cmp    rax,rbx
  415cbd:	je     415d55 <main@@Base+0xec85>
  415cc3:	mov    QWORD PTR [r15],0xb
  415cca:	jmp    415d4b <main@@Base+0xec7b>
  415ccc:	and    rcx,0xffffffffffffff00
  415cd3:	cmp    rcx,r8
  415cd6:	jne    415d55 <main@@Base+0xec85>
  415cd8:	mov    rsi,rbx
  415cdb:	mov    ecx,0x7
  415ce0:	mov    r8,r9
  415ce3:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415ce8:	cmp    rax,rbx
  415ceb:	je     415d55 <main@@Base+0xec85>
  415ced:	mov    QWORD PTR [r15],0xa
  415cf4:	jmp    415d4b <main@@Base+0xec7b>
  415cf6:	mov    rax,rcx
  415cf9:	shr    rax,0x10
  415cfd:	movabs rsi,0x556e75736564
  415d07:	cmp    rax,rsi
  415d0a:	jne    415d2a <main@@Base+0xec5a>
  415d0c:	mov    rsi,rbx
  415d0f:	mov    ecx,0x6
  415d14:	mov    r8,r9
  415d17:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415d1c:	cmp    rax,rbx
  415d1f:	je     415d55 <main@@Base+0xec85>
  415d21:	mov    QWORD PTR [r15],0xff
  415d28:	jmp    415d4b <main@@Base+0xec7b>
  415d2a:	cmp    rcx,r8
  415d2d:	jne    415d55 <main@@Base+0xec85>
  415d2f:	mov    rsi,rbx
  415d32:	mov    ecx,0x8
  415d37:	mov    r8,r9
  415d3a:	call   4244d0 <flatcc_json_parser_match_constant@@Base>
  415d3f:	cmp    rax,rbx
  415d42:	je     415d55 <main@@Base+0xec85>
  415d44:	mov    QWORD PTR [r15],0x8
  415d4b:	mov    DWORD PTR [r14],0x0
  415d52:	mov    rbx,rax
  415d55:	mov    rax,rbx
  415d58:	pop    rbx
  415d59:	pop    r14
  415d5b:	pop    r15
  415d5d:	ret    
  415d5e:	xchg   ax,ax
  415d60:	push   rbp
  415d61:	push   r15
  415d63:	push   r14
  415d65:	push   r13
  415d67:	push   r12
  415d69:	push   rbx
  415d6a:	sub    rsp,0x28
  415d6e:	mov    rbp,rcx
  415d71:	mov    r13,rdx
  415d74:	mov    rbx,rsi
  415d77:	mov    r14,rdi
  415d7a:	mov    DWORD PTR [rcx],0x0
  415d80:	mov    rdi,QWORD PTR [rdi]
  415d83:	mov    esi,0x4
  415d88:	call   41f6c0 <flatcc_builder_start_table@@Base>
  415d8d:	test   eax,eax
  415d8f:	je     415db9 <main@@Base+0xece9>
  415d91:	mov    rdi,r14
  415d94:	mov    rsi,rbx
  415d97:	mov    rdx,r13
  415d9a:	mov    ecx,0x21
  415d9f:	call   424090 <flatcc_json_parser_set_error@@Base>
  415da4:	mov    rbx,rax
  415da7:	mov    rax,rbx
  415daa:	add    rsp,0x28
  415dae:	pop    rbx
  415daf:	pop    r12
  415db1:	pop    r13
  415db3:	pop    r14
  415db5:	pop    r15
  415db7:	pop    rbp
  415db8:	ret    
  415db9:	lea    r8,[rsp+0x10]
  415dbe:	mov    ecx,0x1
  415dc3:	mov    rdi,r14
  415dc6:	mov    rsi,rbx
  415dc9:	mov    rdx,r13
  415dcc:	call   4263c0 <flatcc_json_parser_prepare_unions@@Base>
  415dd1:	cmp    rax,r13
  415dd4:	je     415d91 <main@@Base+0xecc1>
  415dd6:	cmp    rbx,r13
  415dd9:	je     415e06 <main@@Base+0xed36>
  415ddb:	cmp    BYTE PTR [rbx],0x7b
  415dde:	jne    415e06 <main@@Base+0xed36>
  415de0:	lea    rcx,[rbx+0x1]
  415de4:	mov    rax,r13
  415de7:	sub    rax,rcx
  415dea:	cmp    rax,0x2
  415dee:	jl     415e2c <main@@Base+0xed5c>
  415df0:	cmp    BYTE PTR [rcx],0x20
  415df3:	jg     415e3d <main@@Base+0xed6d>
  415df5:	jne    415e2c <main@@Base+0xed5c>
  415df7:	cmp    BYTE PTR [rbx+0x2],0x20
  415dfb:	jle    415e2c <main@@Base+0xed5c>
  415dfd:	add    rbx,0x2
  415e01:	mov    rcx,rbx
  415e04:	jmp    415e3d <main@@Base+0xed6d>
  415e06:	mov    rdi,r14
  415e09:	mov    rsi,rbx
  415e0c:	mov    rdx,r13
  415e0f:	mov    ecx,0x15
  415e14:	call   424090 <flatcc_json_parser_set_error@@Base>
  415e19:	cmp    DWORD PTR [r14+0x20],0x0
  415e1e:	je     4166dc <main@@Base+0xf60c>
  415e24:	mov    rbx,rax
  415e27:	jmp    415d91 <main@@Base+0xecc1>
  415e2c:	mov    rdi,r14
  415e2f:	mov    rsi,rcx
  415e32:	mov    rdx,r13
  415e35:	call   424110 <flatcc_json_parser_space_ext@@Base>
  415e3a:	mov    rcx,rax
  415e3d:	mov    rsi,r13
  415e40:	cmp    rcx,r13
  415e43:	je     415e89 <main@@Base+0xedb9>
  415e45:	cmp    BYTE PTR [rcx],0x7d
  415e48:	jne    415e86 <main@@Base+0xedb6>
  415e4a:	lea    rax,[rcx+0x1]
  415e4e:	mov    rdx,r13
  415e51:	sub    rdx,rax
  415e54:	cmp    rdx,0x2
  415e58:	jl     4166c3 <main@@Base+0xf5f3>
  415e5e:	cmp    BYTE PTR [rax],0x20
  415e61:	jg     415e19 <main@@Base+0xed49>
  415e63:	jne    4166c3 <main@@Base+0xf5f3>
  415e69:	cmp    BYTE PTR [rcx+0x2],0x20
  415e6d:	jle    4166c3 <main@@Base+0xf5f3>
  415e73:	add    rcx,0x2
  415e77:	mov    rax,rcx
  415e7a:	cmp    DWORD PTR [r14+0x20],0x0
  415e7f:	jne    415e24 <main@@Base+0xed54>
  415e81:	jmp    4166dc <main@@Base+0xf60c>
  415e86:	mov    rsi,rcx
  415e89:	movabs rax,0x6d616e79616e7900
  415e93:	add    rax,0x5f
  415e97:	mov    QWORD PTR [rsp+0x20],rax
  415e9c:	mov    QWORD PTR [rsp+0x18],rbp
  415ea1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415eab:	nop    DWORD PTR [rax+rax*1+0x0]
  415eb0:	mov    r15,r13
  415eb3:	cmp    rsi,r13
  415eb6:	je     415ef0 <main@@Base+0xee20>
  415eb8:	movzx  eax,BYTE PTR [rsi]
  415ebb:	cmp    al,0x2e
  415ebd:	je     415ed0 <main@@Base+0xee00>
  415ebf:	cmp    al,0x22
  415ec1:	jne    415ee5 <main@@Base+0xee15>
  415ec3:	inc    rsi
  415ec6:	mov    DWORD PTR [r14+0x14],0x0
  415ece:	jmp    415eed <main@@Base+0xee1d>
  415ed0:	mov    rdi,r14
  415ed3:	mov    rdx,r13
  415ed6:	mov    ecx,0x5
  415edb:	call   424090 <flatcc_json_parser_set_error@@Base>
  415ee0:	mov    r15,rax
  415ee3:	jmp    415ef0 <main@@Base+0xee20>
  415ee5:	mov    DWORD PTR [r14+0x14],0x1
  415eed:	mov    r15,rsi
  415ef0:	mov    rbx,r13
  415ef3:	sub    rbx,r15
  415ef6:	cmp    rbx,0x8
  415efa:	jb     415f2b <main@@Base+0xee5b>
  415efc:	movbe  r12,QWORD PTR [r15]
  415f01:	cmp    r12,QWORD PTR [rsp+0x20]
  415f06:	jne    415fb9 <main@@Base+0xeee9>
  415f0c:	lea    r12,[r15+0x8]
  415f10:	mov    rax,r13
  415f13:	sub    rax,r12
  415f16:	cmp    rax,0x8
  415f1a:	jb     416014 <main@@Base+0xef44>
  415f20:	movbe  rcx,QWORD PTR [r12]
  415f26:	jmp    416098 <main@@Base+0xefc8>
  415f2b:	lea    rax,[rbx-0x1]
  415f2f:	cmp    rax,0x6
  415f33:	ja     41657f <main@@Base+0xf4af>
  415f39:	lea    rcx,[rip+0x1e708]        # 434648 <_IO_stdin_used@@Base+0x648>
  415f40:	mov    rdx,rcx
  415f43:	movsxd rcx,DWORD PTR [rcx+rax*4]
  415f47:	add    rcx,rdx
  415f4a:	xor    r8d,r8d
  415f4d:	xor    eax,eax
  415f4f:	xor    edx,edx
  415f51:	xor    esi,esi
  415f53:	xor    edi,edi
  415f55:	xor    ebp,ebp
  415f57:	jmp    rcx
  415f59:	movsx  r8,BYTE PTR [r15+0x6]
  415f5e:	shl    r8,0x8
  415f62:	movsx  rax,BYTE PTR [r15+0x5]
  415f67:	shl    rax,0x10
  415f6b:	or     rax,r8
  415f6e:	movsx  rdx,BYTE PTR [r15+0x4]
  415f73:	shl    rdx,0x18
  415f77:	or     rdx,rax
  415f7a:	movsx  rsi,BYTE PTR [r15+0x3]
  415f7f:	shl    rsi,0x20
  415f83:	or     rsi,rdx
  415f86:	movsx  rdi,BYTE PTR [r15+0x2]
  415f8b:	shl    rdi,0x28
  415f8f:	or     rdi,rsi
  415f92:	movsx  rbp,BYTE PTR [r15+0x1]
  415f97:	shl    rbp,0x30
  415f9b:	or     rbp,rdi
  415f9e:	movzx  r12d,BYTE PTR [r15]
  415fa2:	shl    r12,0x38
  415fa6:	or     r12,rbp
  415fa9:	mov    rbp,QWORD PTR [rsp+0x18]
  415fae:	cmp    r12,QWORD PTR [rsp+0x20]
  415fb3:	je     415f0c <main@@Base+0xee3c>
  415fb9:	mov    rax,r12
  415fbc:	and    rax,0xffffffffffffff00
  415fc2:	movabs rcx,0x6d616e79616e7900
  415fcc:	cmp    rax,rcx
  415fcf:	jne    4161c7 <main@@Base+0xf0f7>
  415fd5:	mov    rax,r15
  415fd8:	cmp    rbx,0x8
  415fdc:	jl     416459 <main@@Base+0xf389>
  415fe2:	cmp    DWORD PTR [r14+0x14],0x0
  415fe7:	movzx  ecx,BYTE PTR [r15+0x7]
  415fec:	je     4160d9 <main@@Base+0xf009>
  415ff2:	cmp    cl,0x21
  415ff5:	jl     416003 <main@@Base+0xef33>
  415ff7:	mov    rax,r15
  415ffa:	cmp    cl,0x3a
  415ffd:	jne    416459 <main@@Base+0xf389>
  416003:	lea    rsi,[r15+0x7]
  416007:	mov    DWORD PTR [r14+0x14],0x0
  41600f:	jmp    4160e9 <main@@Base+0xf019>
  416014:	lea    rcx,[rax-0x1]
  416018:	cmp    rcx,0x6
  41601c:	ja     4162ea <main@@Base+0xf21a>
  416022:	lea    rdx,[rip+0x1e63b]        # 434664 <_IO_stdin_used@@Base+0x664>
  416029:	mov    rsi,rdx
  41602c:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  416030:	add    rdx,rsi
  416033:	xor    r8d,r8d
  416036:	xor    ecx,ecx
  416038:	xor    esi,esi
  41603a:	xor    edi,edi
  41603c:	xor    ebp,ebp
  41603e:	xor    ebx,ebx
  416040:	jmp    rdx
  416042:	movsx  r8,BYTE PTR [r15+0xe]
  416047:	shl    r8,0x8
  41604b:	movsx  rcx,BYTE PTR [r15+0xd]
  416050:	shl    rcx,0x10
  416054:	or     rcx,r8
  416057:	movsx  rsi,BYTE PTR [r15+0xc]
  41605c:	shl    rsi,0x18
  416060:	or     rsi,rcx
  416063:	movsx  rdi,BYTE PTR [r15+0xb]
  416068:	shl    rdi,0x20
  41606c:	or     rdi,rsi
  41606f:	movsx  rbp,BYTE PTR [r15+0xa]
  416074:	shl    rbp,0x28
  416078:	or     rbp,rdi
  41607b:	movsx  rbx,BYTE PTR [r15+0x9]
  416080:	shl    rbx,0x30
  416084:	or     rbx,rbp
  416087:	movzx  ecx,BYTE PTR [r12]
  41608c:	shl    rcx,0x38
  416090:	or     rcx,rbx
  416093:	mov    rbp,QWORD PTR [rsp+0x18]
  416098:	shr    rcx,0x20
  41609c:	cmp    rcx,0x74797065
  4160a3:	jne    4162ea <main@@Base+0xf21a>
  4160a9:	cmp    rax,0x5
  4160ad:	jl     4162ea <main@@Base+0xf21a>
  4160b3:	cmp    DWORD PTR [r14+0x14],0x0
  4160b8:	movzx  eax,BYTE PTR [r15+0xc]
  4160bd:	je     41610f <main@@Base+0xf03f>
  4160bf:	cmp    al,0x21
  4160c1:	jl     4160cb <main@@Base+0xeffb>
  4160c3:	cmp    al,0x3a
  4160c5:	jne    4162ea <main@@Base+0xf21a>
  4160cb:	add    r15,0xc
  4160cf:	mov    DWORD PTR [r14+0x14],0x0
  4160d7:	jmp    41611b <main@@Base+0xf04b>
  4160d9:	mov    rax,r15
  4160dc:	cmp    cl,0x22
  4160df:	jne    416459 <main@@Base+0xf389>
  4160e5:	lea    rsi,[r15+0x8]
  4160e9:	mov    rax,r13
  4160ec:	sub    rax,rsi
  4160ef:	cmp    rax,0x2
  4160f3:	jl     416157 <main@@Base+0xf087>
  4160f5:	cmp    BYTE PTR [rsi],0x20
  4160f8:	jg     416165 <main@@Base+0xf095>
  4160fa:	jne    416157 <main@@Base+0xf087>
  4160fc:	cmp    BYTE PTR [rsi+0x1],0x20
  416100:	jle    416157 <main@@Base+0xf087>
  416102:	inc    rsi
  416105:	cmp    rsi,r13
  416108:	jne    41616a <main@@Base+0xf09a>
  41610a:	jmp    4161ae <main@@Base+0xf0de>
  41610f:	cmp    al,0x22
  416111:	jne    4162ea <main@@Base+0xf21a>
  416117:	add    r15,0xd
  41611b:	mov    rax,r13
  41611e:	sub    rax,r15
  416121:	cmp    rax,0x2
  416125:	jl     416272 <main@@Base+0xf1a2>
  41612b:	cmp    BYTE PTR [r15],0x20
  41612f:	jg     416283 <main@@Base+0xf1b3>
  416135:	jne    416272 <main@@Base+0xf1a2>
  41613b:	cmp    BYTE PTR [r15+0x1],0x20
  416140:	jle    416272 <main@@Base+0xf1a2>
  416146:	inc    r15
  416149:	cmp    r15,r13
  41614c:	jne    416288 <main@@Base+0xf1b8>
  416152:	jmp    4162ce <main@@Base+0xf1fe>
  416157:	mov    rdi,r14
  41615a:	mov    rdx,r13
  41615d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416162:	mov    rsi,rax
  416165:	cmp    rsi,r13
  416168:	je     4161ae <main@@Base+0xf0de>
  41616a:	cmp    BYTE PTR [rsi],0x3a
  41616d:	jne    4161ae <main@@Base+0xf0de>
  41616f:	lea    rax,[rsi+0x1]
  416173:	mov    rcx,r13
  416176:	sub    rcx,rax
  416179:	cmp    rcx,0x2
  41617d:	jl     41644b <main@@Base+0xf37b>
  416183:	cmp    BYTE PTR [rax],0x20
  416186:	jg     416459 <main@@Base+0xf389>
  41618c:	jne    41644b <main@@Base+0xf37b>
  416192:	cmp    BYTE PTR [rsi+0x2],0x20
  416196:	jle    41644b <main@@Base+0xf37b>
  41619c:	add    rsi,0x2
  4161a0:	mov    rax,rsi
  4161a3:	cmp    r15,rax
  4161a6:	jne    416462 <main@@Base+0xf392>
  4161ac:	jmp    4161c7 <main@@Base+0xf0f7>
  4161ae:	mov    rdi,r14
  4161b1:	mov    rdx,r13
  4161b4:	mov    ecx,0x4
  4161b9:	call   424090 <flatcc_json_parser_set_error@@Base>
  4161be:	cmp    r15,rax
  4161c1:	jne    416462 <main@@Base+0xf392>
  4161c7:	mov    rax,r12
  4161ca:	shr    rax,0x10
  4161ce:	movabs rcx,0x707265666978
  4161d8:	cmp    rax,rcx
  4161db:	jne    41621c <main@@Base+0xf14c>
  4161dd:	mov    rax,r15
  4161e0:	cmp    rbx,0x7
  4161e4:	jl     4164fd <main@@Base+0xf42d>
  4161ea:	cmp    DWORD PTR [r14+0x14],0x0
  4161ef:	movzx  ecx,BYTE PTR [r15+0x6]
  4161f4:	je     4162f5 <main@@Base+0xf225>
  4161fa:	cmp    cl,0x21
  4161fd:	jl     41620b <main@@Base+0xf13b>
  4161ff:	mov    rax,r15
  416202:	cmp    cl,0x3a
  416205:	jne    4164fd <main@@Base+0xf42d>
  41620b:	lea    rsi,[r15+0x6]
  41620f:	mov    DWORD PTR [r14+0x14],0x0
  416217:	jmp    416305 <main@@Base+0xf235>
  41621c:	shr    r12,0x18
  416220:	movabs rax,0x6d6f766965
  41622a:	cmp    r12,rax
  41622d:	jne    41657f <main@@Base+0xf4af>
  416233:	mov    rax,r15
  416236:	cmp    rbx,0x6
  41623a:	jl     41653b <main@@Base+0xf46b>
  416240:	cmp    DWORD PTR [r14+0x14],0x0
  416245:	movzx  ecx,BYTE PTR [r15+0x5]
  41624a:	je     4163a0 <main@@Base+0xf2d0>
  416250:	cmp    cl,0x21
  416253:	jl     416261 <main@@Base+0xf191>
  416255:	mov    rax,r15
  416258:	cmp    cl,0x3a
  41625b:	jne    41653b <main@@Base+0xf46b>
  416261:	lea    rsi,[r15+0x5]
  416265:	mov    DWORD PTR [r14+0x14],0x0
  41626d:	jmp    4163b0 <main@@Base+0xf2e0>
  416272:	mov    rdi,r14
  416275:	mov    rsi,r15
  416278:	mov    rdx,r13
  41627b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416280:	mov    r15,rax
  416283:	cmp    r15,r13
  416286:	je     4162ce <main@@Base+0xf1fe>
  416288:	cmp    BYTE PTR [r15],0x3a
  41628c:	jne    4162ce <main@@Base+0xf1fe>
  41628e:	lea    rax,[r15+0x1]
  416292:	mov    rcx,r13
  416295:	sub    rcx,rax
  416298:	cmp    rcx,0x2
  41629c:	jl     416495 <main@@Base+0xf3c5>
  4162a2:	cmp    BYTE PTR [rax],0x20
  4162a5:	jg     4164a3 <main@@Base+0xf3d3>
  4162ab:	jne    416495 <main@@Base+0xf3c5>
  4162b1:	cmp    BYTE PTR [r15+0x2],0x20
  4162b6:	jle    416495 <main@@Base+0xf3c5>
  4162bc:	add    r15,0x2
  4162c0:	mov    rax,r15
  4162c3:	cmp    r12,rax
  4162c6:	jne    4164ac <main@@Base+0xf3dc>
  4162cc:	jmp    4162ea <main@@Base+0xf21a>
  4162ce:	mov    rdi,r14
  4162d1:	mov    rsi,r15
  4162d4:	mov    rdx,r13
  4162d7:	mov    ecx,0x4
  4162dc:	call   424090 <flatcc_json_parser_set_error@@Base>
  4162e1:	cmp    r12,rax
  4162e4:	jne    4164ac <main@@Base+0xf3dc>
  4162ea:	mov    rdi,r14
  4162ed:	mov    rsi,r12
  4162f0:	jmp    416585 <main@@Base+0xf4b5>
  4162f5:	mov    rax,r15
  4162f8:	cmp    cl,0x22
  4162fb:	jne    4164fd <main@@Base+0xf42d>
  416301:	lea    rsi,[r15+0x7]
  416305:	mov    rax,r13
  416308:	sub    rax,rsi
  41630b:	cmp    rax,0x2
  41630f:	jl     416328 <main@@Base+0xf258>
  416311:	cmp    BYTE PTR [rsi],0x20
  416314:	jg     416336 <main@@Base+0xf266>
  416316:	jne    416328 <main@@Base+0xf258>
  416318:	cmp    BYTE PTR [rsi+0x1],0x20
  41631c:	jle    416328 <main@@Base+0xf258>
  41631e:	inc    rsi
  416321:	cmp    rsi,r13
  416324:	jne    41633b <main@@Base+0xf26b>
  416326:	jmp    416382 <main@@Base+0xf2b2>
  416328:	mov    rdi,r14
  41632b:	mov    rdx,r13
  41632e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416333:	mov    rsi,rax
  416336:	cmp    rsi,r13
  416339:	je     416382 <main@@Base+0xf2b2>
  41633b:	cmp    BYTE PTR [rsi],0x3a
  41633e:	jne    416382 <main@@Base+0xf2b2>
  416340:	lea    rax,[rsi+0x1]
  416344:	mov    rcx,r13
  416347:	sub    rcx,rax
  41634a:	cmp    rcx,0x2
  41634e:	jl     4164ef <main@@Base+0xf41f>
  416354:	cmp    BYTE PTR [rax],0x20
  416357:	jg     4164fd <main@@Base+0xf42d>
  41635d:	jne    4164ef <main@@Base+0xf41f>
  416363:	cmp    BYTE PTR [rsi+0x2],0x20
  416367:	jle    4164ef <main@@Base+0xf41f>
  41636d:	add    rsi,0x2
  416371:	mov    rax,rsi
  416374:	cmp    r15,rax
  416377:	jne    416502 <main@@Base+0xf432>
  41637d:	jmp    41657f <main@@Base+0xf4af>
  416382:	mov    rdi,r14
  416385:	mov    rdx,r13
  416388:	mov    ecx,0x4
  41638d:	call   424090 <flatcc_json_parser_set_error@@Base>
  416392:	cmp    r15,rax
  416395:	jne    416502 <main@@Base+0xf432>
  41639b:	jmp    41657f <main@@Base+0xf4af>
  4163a0:	mov    rax,r15
  4163a3:	cmp    cl,0x22
  4163a6:	jne    41653b <main@@Base+0xf46b>
  4163ac:	lea    rsi,[r15+0x6]
  4163b0:	mov    rax,r13
  4163b3:	sub    rax,rsi
  4163b6:	cmp    rax,0x2
  4163ba:	jl     4163d3 <main@@Base+0xf303>
  4163bc:	cmp    BYTE PTR [rsi],0x20
  4163bf:	jg     4163e1 <main@@Base+0xf311>
  4163c1:	jne    4163d3 <main@@Base+0xf303>
  4163c3:	cmp    BYTE PTR [rsi+0x1],0x20
  4163c7:	jle    4163d3 <main@@Base+0xf303>
  4163c9:	inc    rsi
  4163cc:	cmp    rsi,r13
  4163cf:	jne    4163e6 <main@@Base+0xf316>
  4163d1:	jmp    41642d <main@@Base+0xf35d>
  4163d3:	mov    rdi,r14
  4163d6:	mov    rdx,r13
  4163d9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4163de:	mov    rsi,rax
  4163e1:	cmp    rsi,r13
  4163e4:	je     41642d <main@@Base+0xf35d>
  4163e6:	cmp    BYTE PTR [rsi],0x3a
  4163e9:	jne    41642d <main@@Base+0xf35d>
  4163eb:	lea    rax,[rsi+0x1]
  4163ef:	mov    rcx,r13
  4163f2:	sub    rcx,rax
  4163f5:	cmp    rcx,0x2
  4163f9:	jl     41652d <main@@Base+0xf45d>
  4163ff:	cmp    BYTE PTR [rax],0x20
  416402:	jg     41653b <main@@Base+0xf46b>
  416408:	jne    41652d <main@@Base+0xf45d>
  41640e:	cmp    BYTE PTR [rsi+0x2],0x20
  416412:	jle    41652d <main@@Base+0xf45d>
  416418:	add    rsi,0x2
  41641c:	mov    rax,rsi
  41641f:	cmp    r15,rax
  416422:	jne    416540 <main@@Base+0xf470>
  416428:	jmp    41657f <main@@Base+0xf4af>
  41642d:	mov    rdi,r14
  416430:	mov    rdx,r13
  416433:	mov    ecx,0x4
  416438:	call   424090 <flatcc_json_parser_set_error@@Base>
  41643d:	cmp    r15,rax
  416440:	jne    416540 <main@@Base+0xf470>
  416446:	jmp    41657f <main@@Base+0xf4af>
  41644b:	mov    rdi,r14
  41644e:	mov    rsi,rax
  416451:	mov    rdx,r13
  416454:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416459:	cmp    r15,rax
  41645c:	je     4161c7 <main@@Base+0xf0f7>
  416462:	mov    r9,QWORD PTR [rsp+0x10]
  416467:	sub    rsp,0x8
  41646b:	mov    rdi,r14
  41646e:	mov    rsi,rax
  416471:	mov    rdx,r13
  416474:	mov    ecx,0x0
  416479:	mov    r8d,0x3
  41647f:	lea    rax,[rip+0xffffffffffffd20a]        # 413690 <main@@Base+0xc5c0>
  416486:	push   rax
  416487:	call   426a40 <flatcc_json_parser_union_vector@@Base>
  41648c:	add    rsp,0x10
  416490:	jmp    41658d <main@@Base+0xf4bd>
  416495:	mov    rdi,r14
  416498:	mov    rsi,rax
  41649b:	mov    rdx,r13
  41649e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4164a3:	cmp    r12,rax
  4164a6:	je     4162ea <main@@Base+0xf21a>
  4164ac:	mov    r9,QWORD PTR [rsp+0x10]
  4164b1:	sub    rsp,0x8
  4164b5:	mov    rdi,r14
  4164b8:	mov    rsi,rax
  4164bb:	mov    rdx,r13
  4164be:	mov    ecx,0x0
  4164c3:	mov    r8d,0x3
  4164c9:	lea    rax,[rip+0x260]        # 416730 <main@@Base+0xf660>
  4164d0:	push   rax
  4164d1:	lea    rax,[rip+0xffffffffffffd1b8]        # 413690 <main@@Base+0xc5c0>
  4164d8:	push   rax
  4164d9:	lea    rax,[rip+0x2d000]        # 4434e0 <__data_start@@Base+0x430>
  4164e0:	push   rax
  4164e1:	call   426ee0 <flatcc_json_parser_union_type_vector@@Base>
  4164e6:	add    rsp,0x20
  4164ea:	jmp    41658d <main@@Base+0xf4bd>
  4164ef:	mov    rdi,r14
  4164f2:	mov    rsi,rax
  4164f5:	mov    rdx,r13
  4164f8:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4164fd:	cmp    r15,rax
  416500:	je     41657f <main@@Base+0xf4af>
  416502:	mov    rdi,r14
  416505:	mov    rsi,rax
  416508:	mov    rdx,r13
  41650b:	lea    rcx,[rsp+0xc]
  416510:	call   416740 <main@@Base+0xf670>
  416515:	mov    rbx,rax
  416518:	mov    r12d,DWORD PTR [rsp+0xc]
  41651d:	test   r12d,r12d
  416520:	je     415d91 <main@@Base+0xecc1>
  416526:	mov    rdi,QWORD PTR [r14]
  416529:	xor    esi,esi
  41652b:	jmp    41656c <main@@Base+0xf49c>
  41652d:	mov    rdi,r14
  416530:	mov    rsi,rax
  416533:	mov    rdx,r13
  416536:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41653b:	cmp    r15,rax
  41653e:	je     41657f <main@@Base+0xf4af>
  416540:	mov    rdi,r14
  416543:	mov    rsi,rax
  416546:	mov    rdx,r13
  416549:	lea    rcx,[rsp+0xc]
  41654e:	call   4199f0 <main@@Base+0x12920>
  416553:	mov    rbx,rax
  416556:	mov    r12d,DWORD PTR [rsp+0xc]
  41655b:	test   r12d,r12d
  41655e:	je     415d91 <main@@Base+0xecc1>
  416564:	mov    rdi,QWORD PTR [r14]
  416567:	mov    esi,0x1
  41656c:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  416571:	test   rax,rax
  416574:	je     415d91 <main@@Base+0xecc1>
  41657a:	mov    DWORD PTR [rax],r12d
  41657d:	jmp    416590 <main@@Base+0xf4c0>
  41657f:	mov    rdi,r14
  416582:	mov    rsi,r15
  416585:	mov    rdx,r13
  416588:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41658d:	mov    rbx,rax
  416590:	mov    rax,r13
  416593:	sub    rax,rbx
  416596:	cmp    rax,0x2
  41659a:	jl     4165c0 <main@@Base+0xf4f0>
  41659c:	cmp    BYTE PTR [rbx],0x20
  41659f:	jg     4165d1 <main@@Base+0xf501>
  4165a1:	jne    4165c0 <main@@Base+0xf4f0>
  4165a3:	cmp    BYTE PTR [rbx+0x1],0x20
  4165a7:	jle    4165c0 <main@@Base+0xf4f0>
  4165a9:	inc    rbx
  4165ac:	cmp    rbx,r13
  4165af:	jne    4165d6 <main@@Base+0xf506>
  4165b1:	jmp    41663e <main@@Base+0xf56e>
  4165b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4165c0:	mov    rdi,r14
  4165c3:	mov    rsi,rbx
  4165c6:	mov    rdx,r13
  4165c9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4165ce:	mov    rbx,rax
  4165d1:	cmp    rbx,r13
  4165d4:	je     41663e <main@@Base+0xf56e>
  4165d6:	movzx  eax,BYTE PTR [rbx]
  4165d9:	cmp    al,0x2c
  4165db:	jne    416651 <main@@Base+0xf581>
  4165dd:	lea    rsi,[rbx+0x1]
  4165e1:	mov    rax,r13
  4165e4:	sub    rax,rsi
  4165e7:	cmp    rax,0x2
  4165eb:	jl     416620 <main@@Base+0xf550>
  4165ed:	cmp    BYTE PTR [rsi],0x20
  4165f0:	jg     41662e <main@@Base+0xf55e>
  4165f2:	jne    416620 <main@@Base+0xf550>
  4165f4:	cmp    BYTE PTR [rbx+0x2],0x20
  4165f8:	jle    416620 <main@@Base+0xf550>
  4165fa:	add    rbx,0x2
  4165fe:	mov    rsi,rbx
  416601:	cmp    rsi,r13
  416604:	je     416633 <main@@Base+0xf563>
  416606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416610:	cmp    BYTE PTR [rsi],0x7d
  416613:	jne    415eb0 <main@@Base+0xede0>
  416619:	jmp    41668e <main@@Base+0xf5be>
  41661b:	nop    DWORD PTR [rax+rax*1+0x0]
  416620:	mov    rdi,r14
  416623:	mov    rdx,r13
  416626:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41662b:	mov    rsi,rax
  41662e:	cmp    rsi,r13
  416631:	jne    416610 <main@@Base+0xf540>
  416633:	mov    rdi,r14
  416636:	mov    rsi,r13
  416639:	jmp    416710 <main@@Base+0xf640>
  41663e:	mov    rax,r13
  416641:	cmp    DWORD PTR [r14+0x20],0x0
  416646:	jne    415e24 <main@@Base+0xed54>
  41664c:	jmp    4166dc <main@@Base+0xf60c>
  416651:	cmp    al,0x7d
  416653:	jne    41670a <main@@Base+0xf63a>
  416659:	lea    rax,[rbx+0x1]
  41665d:	mov    rcx,r13
  416660:	sub    rcx,rax
  416663:	cmp    rcx,0x2
  416667:	jl     4166c3 <main@@Base+0xf5f3>
  416669:	cmp    BYTE PTR [rax],0x20
  41666c:	jg     415e19 <main@@Base+0xed49>
  416672:	jne    4166c3 <main@@Base+0xf5f3>
  416674:	cmp    BYTE PTR [rbx+0x2],0x20
  416678:	jle    4166c3 <main@@Base+0xf5f3>
  41667a:	add    rbx,0x2
  41667e:	mov    rax,rbx
  416681:	cmp    DWORD PTR [r14+0x20],0x0
  416686:	jne    415e24 <main@@Base+0xed54>
  41668c:	jmp    4166dc <main@@Base+0xf60c>
  41668e:	lea    rax,[rsi+0x1]
  416692:	mov    rcx,r13
  416695:	sub    rcx,rax
  416698:	cmp    rcx,0x2
  41669c:	jl     4166c3 <main@@Base+0xf5f3>
  41669e:	cmp    BYTE PTR [rax],0x20
  4166a1:	jg     415e19 <main@@Base+0xed49>
  4166a7:	jne    4166c3 <main@@Base+0xf5f3>
  4166a9:	cmp    BYTE PTR [rsi+0x2],0x20
  4166ad:	jle    4166c3 <main@@Base+0xf5f3>
  4166af:	add    rsi,0x2
  4166b3:	mov    rax,rsi
  4166b6:	cmp    DWORD PTR [r14+0x20],0x0
  4166bb:	jne    415e24 <main@@Base+0xed54>
  4166c1:	jmp    4166dc <main@@Base+0xf60c>
  4166c3:	mov    rdi,r14
  4166c6:	mov    rsi,rax
  4166c9:	mov    rdx,r13
  4166cc:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4166d1:	cmp    DWORD PTR [r14+0x20],0x0
  4166d6:	jne    415e24 <main@@Base+0xed54>
  4166dc:	mov    rcx,QWORD PTR [rsp+0x10]
  4166e1:	mov    rdi,r14
  4166e4:	mov    rsi,rax
  4166e7:	mov    rdx,r13
  4166ea:	call   426440 <flatcc_json_parser_finalize_unions@@Base>
  4166ef:	mov    rbx,rax
  4166f2:	mov    rdi,QWORD PTR [r14]
  4166f5:	call   4200d0 <flatcc_builder_end_table@@Base>
  4166fa:	mov    DWORD PTR [rbp+0x0],eax
  4166fd:	test   eax,eax
  4166ff:	jne    415da7 <main@@Base+0xecd7>
  416705:	jmp    415d91 <main@@Base+0xecc1>
  41670a:	mov    rdi,r14
  41670d:	mov    rsi,rbx
  416710:	mov    rdx,r13
  416713:	mov    ecx,0xa
  416718:	call   424090 <flatcc_json_parser_set_error@@Base>
  41671d:	cmp    DWORD PTR [r14+0x20],0x0
  416722:	jne    415e24 <main@@Base+0xed54>
  416728:	jmp    4166dc <main@@Base+0xf60c>
  41672a:	nop    WORD PTR [rax+rax*1+0x0]
  416730:	xor    eax,eax
  416732:	cmp    dil,0x5
  416736:	setb   al
  416739:	ret    
  41673a:	nop    WORD PTR [rax+rax*1+0x0]
  416740:	push   rbp
  416741:	push   r15
  416743:	push   r14
  416745:	push   r13
  416747:	push   r12
  416749:	push   rbx
  41674a:	sub    rsp,0x38
  41674e:	mov    r14,rcx
  416751:	mov    r12,rdx
  416754:	mov    rbp,rsi
  416757:	mov    r15,rdi
  41675a:	mov    DWORD PTR [rcx],0x0
  416760:	mov    rdi,QWORD PTR [rdi]
  416763:	mov    esi,0x3
  416768:	call   41f6c0 <flatcc_builder_start_table@@Base>
  41676d:	test   eax,eax
  41676f:	jne    4167c3 <main@@Base+0xf6f3>
  416771:	cmp    rbp,r12
  416774:	je     4167a2 <main@@Base+0xf6d2>
  416776:	cmp    BYTE PTR [rbp+0x0],0x7b
  41677a:	jne    4167a2 <main@@Base+0xf6d2>
  41677c:	lea    rax,[rbp+0x1]
  416780:	mov    rcx,r12
  416783:	sub    rcx,rax
  416786:	cmp    rcx,0x2
  41678a:	jl     4167eb <main@@Base+0xf71b>
  41678c:	cmp    BYTE PTR [rax],0x20
  41678f:	jg     4167f9 <main@@Base+0xf729>
  416791:	jne    4167eb <main@@Base+0xf71b>
  416793:	cmp    BYTE PTR [rbp+0x2],0x20
  416797:	jle    4167eb <main@@Base+0xf71b>
  416799:	add    rbp,0x2
  41679d:	mov    rax,rbp
  4167a0:	jmp    4167f9 <main@@Base+0xf729>
  4167a2:	mov    rdi,r15
  4167a5:	mov    rsi,rbp
  4167a8:	mov    rdx,r12
  4167ab:	mov    ecx,0x15
  4167b0:	call   424090 <flatcc_json_parser_set_error@@Base>
  4167b5:	mov    rbp,rax
  4167b8:	cmp    DWORD PTR [r15+0x20],0x0
  4167bd:	je     4198df <main@@Base+0x1280f>
  4167c3:	mov    rdi,r15
  4167c6:	mov    rsi,rbp
  4167c9:	mov    rdx,r12
  4167cc:	mov    ecx,0x21
  4167d1:	call   424090 <flatcc_json_parser_set_error@@Base>
  4167d6:	mov    rbp,rax
  4167d9:	mov    rax,rbp
  4167dc:	add    rsp,0x38
  4167e0:	pop    rbx
  4167e1:	pop    r12
  4167e3:	pop    r13
  4167e5:	pop    r14
  4167e7:	pop    r15
  4167e9:	pop    rbp
  4167ea:	ret    
  4167eb:	mov    rdi,r15
  4167ee:	mov    rsi,rax
  4167f1:	mov    rdx,r12
  4167f4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4167f9:	mov    rsi,r12
  4167fc:	cmp    rax,r12
  4167ff:	je     41683c <main@@Base+0xf76c>
  416801:	cmp    BYTE PTR [rax],0x7d
  416804:	jne    416839 <main@@Base+0xf769>
  416806:	lea    rbp,[rax+0x1]
  41680a:	mov    rcx,r12
  41680d:	sub    rcx,rbp
  416810:	cmp    rcx,0x2
  416814:	jl     419976 <main@@Base+0x128a6>
  41681a:	cmp    BYTE PTR [rbp+0x0],0x20
  41681e:	jg     4167b8 <main@@Base+0xf6e8>
  416820:	jne    419976 <main@@Base+0x128a6>
  416826:	cmp    BYTE PTR [rax+0x2],0x20
  41682a:	jle    419976 <main@@Base+0x128a6>
  416830:	add    rax,0x2
  416834:	jmp    4167b5 <main@@Base+0xf6e5>
  416839:	mov    rsi,rax
  41683c:	lea    rax,[r15+0x14]
  416840:	mov    QWORD PTR [rsp+0x18],rax
  416845:	movabs rbp,0x625f73746172745f
  41684f:	mov    QWORD PTR [rsp+0x8],r15
  416854:	mov    QWORD PTR [rsp+0x10],r14
  416859:	nop    DWORD PTR [rax+0x0]
  416860:	mov    r13,r12
  416863:	cmp    rsi,r12
  416866:	je     4168a5 <main@@Base+0xf7d5>
  416868:	mov    al,BYTE PTR [rsi]
  41686a:	cmp    al,0x2e
  41686c:	je     416882 <main@@Base+0xf7b2>
  41686e:	cmp    al,0x22
  416870:	jne    416897 <main@@Base+0xf7c7>
  416872:	inc    rsi
  416875:	mov    rax,QWORD PTR [rsp+0x18]
  41687a:	mov    DWORD PTR [rax],0x0
  416880:	jmp    4168a2 <main@@Base+0xf7d2>
  416882:	mov    rdi,r15
  416885:	mov    rdx,r12
  416888:	mov    ecx,0x5
  41688d:	call   424090 <flatcc_json_parser_set_error@@Base>
  416892:	mov    r13,rax
  416895:	jmp    4168a5 <main@@Base+0xf7d5>
  416897:	mov    rax,QWORD PTR [rsp+0x18]
  41689c:	mov    DWORD PTR [rax],0x1
  4168a2:	mov    r13,rsi
  4168a5:	mov    rax,r12
  4168a8:	sub    rax,r13
  4168ab:	cmp    rax,0x8
  4168af:	jb     4168c0 <main@@Base+0xf7f0>
  4168b1:	movbe  rax,QWORD PTR [r13+0x0]
  4168b7:	jmp    416944 <main@@Base+0xf874>
  4168bc:	nop    DWORD PTR [rax+0x0]
  4168c0:	dec    rax
  4168c3:	cmp    rax,0x6
  4168c7:	ja     416970 <main@@Base+0xf8a0>
  4168cd:	lea    rcx,[rip+0x1ddac]        # 434680 <_IO_stdin_used@@Base+0x680>
  4168d4:	movsxd rbx,DWORD PTR [rcx+rax*4]
  4168d8:	add    rbx,rcx
  4168db:	xor    ecx,ecx
  4168dd:	xor    eax,eax
  4168df:	xor    edx,edx
  4168e1:	xor    esi,esi
  4168e3:	xor    edi,edi
  4168e5:	xor    ebp,ebp
  4168e7:	jmp    rbx
  4168e9:	movsx  rcx,BYTE PTR [r13+0x6]
  4168ee:	shl    rcx,0x8
  4168f2:	movsx  rax,BYTE PTR [r13+0x5]
  4168f7:	shl    rax,0x10
  4168fb:	or     rax,rcx
  4168fe:	movsx  rdx,BYTE PTR [r13+0x4]
  416903:	shl    rdx,0x18
  416907:	or     rdx,rax
  41690a:	movsx  rsi,BYTE PTR [r13+0x3]
  41690f:	shl    rsi,0x20
  416913:	or     rsi,rdx
  416916:	movsx  rdi,BYTE PTR [r13+0x2]
  41691b:	shl    rdi,0x28
  41691f:	or     rdi,rsi
  416922:	movsx  rbp,BYTE PTR [r13+0x1]
  416927:	shl    rbp,0x30
  41692b:	or     rbp,rdi
  41692e:	movzx  eax,BYTE PTR [r13+0x0]
  416933:	shl    rax,0x38
  416937:	or     rax,rbp
  41693a:	movabs rbp,0x625f73746172745f
  416944:	movabs rcx,0x746573746a736f6e
  41694e:	cmp    rax,rcx
  416951:	jne    416970 <main@@Base+0xf8a0>
  416953:	lea    rsi,[r13+0x8]
  416957:	mov    rax,r12
  41695a:	sub    rax,rsi
  41695d:	cmp    rax,0x8
  416961:	jb     41697b <main@@Base+0xf8ab>
  416963:	movbe  rax,QWORD PTR [rsi]
  416968:	jmp    416a01 <main@@Base+0xf931>
  41696d:	nop    DWORD PTR [rax]
  416970:	mov    rdi,r15
  416973:	mov    rsi,r13
  416976:	jmp    416a31 <main@@Base+0xf961>
  41697b:	dec    rax
  41697e:	cmp    rax,0x6
  416982:	ja     416a2e <main@@Base+0xf95e>
  416988:	lea    rcx,[rip+0x1dd0d]        # 43469c <_IO_stdin_used@@Base+0x69c>
  41698f:	mov    rdx,rcx
  416992:	movsxd rcx,DWORD PTR [rcx+rax*4]
  416996:	add    rcx,rdx
  416999:	xor    r8d,r8d
  41699c:	xor    eax,eax
  41699e:	xor    edx,edx
  4169a0:	xor    edi,edi
  4169a2:	xor    ebp,ebp
  4169a4:	xor    ebx,ebx
  4169a6:	jmp    rcx
  4169a8:	movsx  r8,BYTE PTR [r13+0xe]
  4169ad:	shl    r8,0x8
  4169b1:	movsx  rax,BYTE PTR [r13+0xd]
  4169b6:	shl    rax,0x10
  4169ba:	or     rax,r8
  4169bd:	movsx  rdx,BYTE PTR [r13+0xc]
  4169c2:	shl    rdx,0x18
  4169c6:	or     rdx,rax
  4169c9:	movsx  rdi,BYTE PTR [r13+0xb]
  4169ce:	shl    rdi,0x20
  4169d2:	or     rdi,rdx
  4169d5:	movsx  rbp,BYTE PTR [r13+0xa]
  4169da:	shl    rbp,0x28
  4169de:	or     rbp,rdi
  4169e1:	movsx  rbx,BYTE PTR [r13+0x9]
  4169e6:	shl    rbx,0x30
  4169ea:	or     rbx,rbp
  4169ed:	movzx  eax,BYTE PTR [rsi]
  4169f0:	shl    rax,0x38
  4169f4:	or     rax,rbx
  4169f7:	movabs rbp,0x625f73746172745f
  416a01:	movabs rcx,0x7072656669787061
  416a0b:	cmp    rax,rcx
  416a0e:	jne    416a2e <main@@Base+0xf95e>
  416a10:	lea    r14,[r13+0x10]
  416a14:	mov    rbx,r12
  416a17:	sub    rbx,r14
  416a1a:	cmp    rbx,0x8
  416a1e:	jb     416af8 <main@@Base+0xfa28>
  416a24:	movbe  rax,QWORD PTR [r14]
  416a29:	jmp    416b80 <main@@Base+0xfab0>
  416a2e:	mov    rdi,r15
  416a31:	mov    rdx,r12
  416a34:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  416a39:	mov    rbx,rax
  416a3c:	mov    rax,r12
  416a3f:	sub    rax,rbx
  416a42:	cmp    rax,0x2
  416a46:	jl     416a70 <main@@Base+0xf9a0>
  416a48:	cmp    BYTE PTR [rbx],0x20
  416a4b:	jg     416a81 <main@@Base+0xf9b1>
  416a4d:	jne    416a70 <main@@Base+0xf9a0>
  416a4f:	cmp    BYTE PTR [rbx+0x1],0x20
  416a53:	jle    416a70 <main@@Base+0xf9a0>
  416a55:	inc    rbx
  416a58:	cmp    rbx,r12
  416a5b:	jne    416a8a <main@@Base+0xf9ba>
  416a5d:	jmp    4198d1 <main@@Base+0x12801>
  416a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a6c:	nop    DWORD PTR [rax+0x0]
  416a70:	mov    rdi,r15
  416a73:	mov    rsi,rbx
  416a76:	mov    rdx,r12
  416a79:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416a7e:	mov    rbx,rax
  416a81:	cmp    rbx,r12
  416a84:	je     4198d1 <main@@Base+0x12801>
  416a8a:	mov    al,BYTE PTR [rbx]
  416a8c:	cmp    al,0x2c
  416a8e:	jne    4198f7 <main@@Base+0x12827>
  416a94:	lea    rsi,[rbx+0x1]
  416a98:	mov    rax,r12
  416a9b:	sub    rax,rsi
  416a9e:	cmp    rax,0x2
  416aa2:	jl     416ae0 <main@@Base+0xfa10>
  416aa4:	cmp    BYTE PTR [rsi],0x20
  416aa7:	jg     416aee <main@@Base+0xfa1e>
  416aa9:	jne    416ae0 <main@@Base+0xfa10>
  416aab:	cmp    BYTE PTR [rbx+0x2],0x20
  416aaf:	jle    416ae0 <main@@Base+0xfa10>
  416ab1:	add    rbx,0x2
  416ab5:	mov    rsi,rbx
  416ab8:	cmp    rsi,r12
  416abb:	je     419935 <main@@Base+0x12865>
  416ac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416acb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ad0:	cmp    BYTE PTR [rsi],0x7d
  416ad3:	jne    416860 <main@@Base+0xf790>
  416ad9:	jmp    41993d <main@@Base+0x1286d>
  416ade:	xchg   ax,ax
  416ae0:	mov    rdi,r15
  416ae3:	mov    rdx,r12
  416ae6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416aeb:	mov    rsi,rax
  416aee:	cmp    rsi,r12
  416af1:	jne    416ad0 <main@@Base+0xfa00>
  416af3:	jmp    419935 <main@@Base+0x12865>
  416af8:	lea    rax,[rbx-0x1]
  416afc:	cmp    rax,0x6
  416b00:	ja     41710a <main@@Base+0x1003a>
  416b06:	lea    rcx,[rip+0x1dbab]        # 4346b8 <_IO_stdin_used@@Base+0x6b8>
  416b0d:	mov    rdx,rcx
  416b10:	movsxd rcx,DWORD PTR [rcx+rax*4]
  416b14:	add    rcx,rdx
  416b17:	xor    r8d,r8d
  416b1a:	xor    eax,eax
  416b1c:	xor    edx,edx
  416b1e:	xor    esi,esi
  416b20:	xor    edi,edi
  416b22:	xor    ebp,ebp
  416b24:	jmp    rcx
  416b26:	movsx  r8,BYTE PTR [r13+0x16]
  416b2b:	shl    r8,0x8
  416b2f:	movsx  rax,BYTE PTR [r13+0x15]
  416b34:	shl    rax,0x10
  416b38:	or     rax,r8
  416b3b:	movsx  rdx,BYTE PTR [r13+0x14]
  416b40:	shl    rdx,0x18
  416b44:	or     rdx,rax
  416b47:	movsx  rsi,BYTE PTR [r13+0x13]
  416b4c:	shl    rsi,0x20
  416b50:	or     rsi,rdx
  416b53:	movsx  rdi,BYTE PTR [r13+0x12]
  416b58:	shl    rdi,0x28
  416b5c:	or     rdi,rsi
  416b5f:	movsx  rbp,BYTE PTR [r13+0x11]
  416b64:	shl    rbp,0x30
  416b68:	or     rbp,rdi
  416b6b:	movzx  eax,BYTE PTR [r14]
  416b6f:	shl    rax,0x38
  416b73:	or     rax,rbp
  416b76:	movabs rbp,0x625f73746172745f
  416b80:	mov    r15,rax
  416b83:	and    r15,0xffffffffffff0000
  416b8a:	movabs rcx,0x7273696e67000000
  416b94:	add    rcx,0x320000
  416b9b:	cmp    r15,rcx
  416b9e:	jne    416bda <main@@Base+0xfb0a>
  416ba0:	cmp    rbx,0x7
  416ba4:	mov    r15,QWORD PTR [rsp+0x8]
  416ba9:	jl     41710a <main@@Base+0x1003a>
  416baf:	mov    rax,QWORD PTR [rsp+0x18]
  416bb4:	cmp    DWORD PTR [rax],0x0
  416bb7:	mov    al,BYTE PTR [r13+0x16]
  416bbb:	je     416c28 <main@@Base+0xfb58>
  416bbd:	cmp    al,0x21
  416bbf:	jl     416bc9 <main@@Base+0xfaf9>
  416bc1:	cmp    al,0x3a
  416bc3:	jne    41710a <main@@Base+0x1003a>
  416bc9:	add    r13,0x16
  416bcd:	mov    rax,QWORD PTR [rsp+0x18]
  416bd2:	mov    DWORD PTR [rax],0x0
  416bd8:	jmp    416c34 <main@@Base+0xfb64>
  416bda:	cmp    rbx,0x6
  416bde:	jl     416d8f <main@@Base+0xfcbf>
  416be4:	and    rax,0xffffffffff000000
  416bea:	movabs rcx,0x7273696e67000000
  416bf4:	cmp    rax,rcx
  416bf7:	jne    416d8f <main@@Base+0xfcbf>
  416bfd:	mov    rax,QWORD PTR [rsp+0x18]
  416c02:	cmp    DWORD PTR [rax],0x0
  416c05:	mov    al,BYTE PTR [r13+0x15]
  416c09:	je     416c5d <main@@Base+0xfb8d>
  416c0b:	cmp    al,0x21
  416c0d:	jl     416c17 <main@@Base+0xfb47>
  416c0f:	cmp    al,0x3a
  416c11:	jne    416d8f <main@@Base+0xfcbf>
  416c17:	lea    rsi,[r13+0x15]
  416c1b:	mov    rax,QWORD PTR [rsp+0x18]
  416c20:	mov    DWORD PTR [rax],0x0
  416c26:	jmp    416c69 <main@@Base+0xfb99>
  416c28:	cmp    al,0x22
  416c2a:	jne    41710a <main@@Base+0x1003a>
  416c30:	add    r13,0x17
  416c34:	mov    rax,r12
  416c37:	sub    rax,r13
  416c3a:	cmp    rax,0x2
  416c3e:	jl     416c9b <main@@Base+0xfbcb>
  416c40:	cmp    BYTE PTR [r13+0x0],0x20
  416c45:	jg     416cac <main@@Base+0xfbdc>
  416c47:	jne    416c9b <main@@Base+0xfbcb>
  416c49:	cmp    BYTE PTR [r13+0x1],0x20
  416c4e:	jle    416c9b <main@@Base+0xfbcb>
  416c50:	inc    r13
  416c53:	cmp    r13,r12
  416c56:	jne    416cb5 <main@@Base+0xfbe5>
  416c58:	jmp    416d5c <main@@Base+0xfc8c>
  416c5d:	cmp    al,0x22
  416c5f:	jne    416d8f <main@@Base+0xfcbf>
  416c65:	lea    rsi,[r13+0x16]
  416c69:	mov    rax,r12
  416c6c:	sub    rax,rsi
  416c6f:	cmp    rax,0x2
  416c73:	jl     416d03 <main@@Base+0xfc33>
  416c79:	cmp    BYTE PTR [rsi],0x20
  416c7c:	jg     416d13 <main@@Base+0xfc43>
  416c82:	jne    416d03 <main@@Base+0xfc33>
  416c84:	cmp    BYTE PTR [rsi+0x1],0x20
  416c88:	jle    416d03 <main@@Base+0xfc33>
  416c8a:	inc    rsi
  416c8d:	cmp    rsi,r12
  416c90:	jne    416d18 <main@@Base+0xfc48>
  416c96:	jmp    416d74 <main@@Base+0xfca4>
  416c9b:	mov    rdi,r15
  416c9e:	mov    rsi,r13
  416ca1:	mov    rdx,r12
  416ca4:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416ca9:	mov    r13,rax
  416cac:	cmp    r13,r12
  416caf:	je     416d5c <main@@Base+0xfc8c>
  416cb5:	cmp    BYTE PTR [r13+0x0],0x3a
  416cba:	jne    416d5c <main@@Base+0xfc8c>
  416cc0:	lea    rbx,[r13+0x1]
  416cc4:	mov    rax,r12
  416cc7:	sub    rax,rbx
  416cca:	cmp    rax,0x2
  416cce:	jl     416e8c <main@@Base+0xfdbc>
  416cd4:	cmp    BYTE PTR [rbx],0x20
  416cd7:	jg     416e9d <main@@Base+0xfdcd>
  416cdd:	jne    416e8c <main@@Base+0xfdbc>
  416ce3:	cmp    BYTE PTR [r13+0x2],0x20
  416ce8:	jle    416e8c <main@@Base+0xfdbc>
  416cee:	add    r13,0x2
  416cf2:	mov    rbx,r13
  416cf5:	cmp    r14,rbx
  416cf8:	jne    416ea6 <main@@Base+0xfdd6>
  416cfe:	jmp    41710a <main@@Base+0x1003a>
  416d03:	mov    rdi,QWORD PTR [rsp+0x8]
  416d08:	mov    rdx,r12
  416d0b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416d10:	mov    rsi,rax
  416d13:	cmp    rsi,r12
  416d16:	je     416d74 <main@@Base+0xfca4>
  416d18:	cmp    BYTE PTR [rsi],0x3a
  416d1b:	jne    416d74 <main@@Base+0xfca4>
  416d1d:	lea    rax,[rsi+0x1]
  416d21:	mov    rcx,r12
  416d24:	sub    rcx,rax
  416d27:	cmp    rcx,0x2
  416d2b:	jl     416f2e <main@@Base+0xfe5e>
  416d31:	cmp    BYTE PTR [rax],0x20
  416d34:	jg     416f3e <main@@Base+0xfe6e>
  416d3a:	jne    416f2e <main@@Base+0xfe5e>
  416d40:	cmp    BYTE PTR [rsi+0x2],0x20
  416d44:	jle    416f2e <main@@Base+0xfe5e>
  416d4a:	add    rsi,0x2
  416d4e:	mov    rax,rsi
  416d51:	cmp    r14,rax
  416d54:	jne    416f47 <main@@Base+0xfe77>
  416d5a:	jmp    416d8f <main@@Base+0xfcbf>
  416d5c:	mov    rdi,r15
  416d5f:	mov    rsi,r13
  416d62:	mov    rdx,r12
  416d65:	mov    ecx,0x4
  416d6a:	call   424090 <flatcc_json_parser_set_error@@Base>
  416d6f:	jmp    416e9a <main@@Base+0xfdca>
  416d74:	mov    rdi,QWORD PTR [rsp+0x8]
  416d79:	mov    rdx,r12
  416d7c:	mov    ecx,0x4
  416d81:	call   424090 <flatcc_json_parser_set_error@@Base>
  416d86:	cmp    r14,rax
  416d89:	jne    416f47 <main@@Base+0xfe77>
  416d8f:	movabs rax,0x7273696e67000000
  416d99:	add    rax,0x330000
  416d9f:	cmp    r15,rax
  416da2:	mov    r15,QWORD PTR [rsp+0x8]
  416da7:	jne    41710a <main@@Base+0x1003a>
  416dad:	cmp    rbx,0x7
  416db1:	jl     41710a <main@@Base+0x1003a>
  416db7:	mov    rax,QWORD PTR [rsp+0x18]
  416dbc:	cmp    DWORD PTR [rax],0x0
  416dbf:	mov    al,BYTE PTR [r13+0x16]
  416dc3:	je     416de2 <main@@Base+0xfd12>
  416dc5:	cmp    al,0x21
  416dc7:	jl     416dd1 <main@@Base+0xfd01>
  416dc9:	cmp    al,0x3a
  416dcb:	jne    41710a <main@@Base+0x1003a>
  416dd1:	add    r13,0x16
  416dd5:	mov    rax,QWORD PTR [rsp+0x18]
  416dda:	mov    DWORD PTR [rax],0x0
  416de0:	jmp    416dee <main@@Base+0xfd1e>
  416de2:	cmp    al,0x22
  416de4:	jne    41710a <main@@Base+0x1003a>
  416dea:	add    r13,0x17
  416dee:	mov    rax,r12
  416df1:	sub    rax,r13
  416df4:	cmp    rax,0x2
  416df8:	jl     416e14 <main@@Base+0xfd44>
  416dfa:	cmp    BYTE PTR [r13+0x0],0x20
  416dff:	jg     416e25 <main@@Base+0xfd55>
  416e01:	jne    416e14 <main@@Base+0xfd44>
  416e03:	cmp    BYTE PTR [r13+0x1],0x20
  416e08:	jle    416e14 <main@@Base+0xfd44>
  416e0a:	inc    r13
  416e0d:	cmp    r13,r12
  416e10:	jne    416e2a <main@@Base+0xfd5a>
  416e12:	jmp    416e74 <main@@Base+0xfda4>
  416e14:	mov    rdi,r15
  416e17:	mov    rsi,r13
  416e1a:	mov    rdx,r12
  416e1d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416e22:	mov    r13,rax
  416e25:	cmp    r13,r12
  416e28:	je     416e74 <main@@Base+0xfda4>
  416e2a:	cmp    BYTE PTR [r13+0x0],0x3a
  416e2f:	jne    416e74 <main@@Base+0xfda4>
  416e31:	lea    rbx,[r13+0x1]
  416e35:	mov    rax,r12
  416e38:	sub    rax,rbx
  416e3b:	cmp    rax,0x2
  416e3f:	jl     417097 <main@@Base+0xffc7>
  416e45:	cmp    BYTE PTR [rbx],0x20
  416e48:	jg     4170a8 <main@@Base+0xffd8>
  416e4e:	jne    417097 <main@@Base+0xffc7>
  416e54:	cmp    BYTE PTR [r13+0x2],0x20
  416e59:	jle    417097 <main@@Base+0xffc7>
  416e5f:	add    r13,0x2
  416e63:	mov    rbx,r13
  416e66:	cmp    r14,rbx
  416e69:	jne    4170ad <main@@Base+0xffdd>
  416e6f:	jmp    41710a <main@@Base+0x1003a>
  416e74:	mov    rdi,r15
  416e77:	mov    rsi,r13
  416e7a:	mov    rdx,r12
  416e7d:	mov    ecx,0x4
  416e82:	call   424090 <flatcc_json_parser_set_error@@Base>
  416e87:	jmp    4170a5 <main@@Base+0xffd5>
  416e8c:	mov    rdi,r15
  416e8f:	mov    rsi,rbx
  416e92:	mov    rdx,r12
  416e95:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416e9a:	mov    rbx,rax
  416e9d:	cmp    r14,rbx
  416ea0:	je     41710a <main@@Base+0x1003a>
  416ea6:	mov    rdi,QWORD PTR [r15]
  416ea9:	mov    esi,0x2
  416eae:	call   41f6c0 <flatcc_builder_start_table@@Base>
  416eb3:	test   eax,eax
  416eb5:	jne    4199ac <main@@Base+0x128dc>
  416ebb:	cmp    rbx,r12
  416ebe:	je     416f03 <main@@Base+0xfe33>
  416ec0:	cmp    BYTE PTR [rbx],0x7b
  416ec3:	jne    416f03 <main@@Base+0xfe33>
  416ec5:	lea    rsi,[rbx+0x1]
  416ec9:	mov    rax,r12
  416ecc:	sub    rax,rsi
  416ecf:	cmp    rax,0x2
  416ed3:	mov    r14,QWORD PTR [rsp+0x10]
  416ed8:	jl     416fd7 <main@@Base+0xff07>
  416ede:	cmp    BYTE PTR [rsi],0x20
  416ee1:	jg     416fe5 <main@@Base+0xff15>
  416ee7:	jne    416fd7 <main@@Base+0xff07>
  416eed:	cmp    BYTE PTR [rbx+0x2],0x20
  416ef1:	jle    416fd7 <main@@Base+0xff07>
  416ef7:	add    rbx,0x2
  416efb:	mov    rsi,rbx
  416efe:	jmp    416fe5 <main@@Base+0xff15>
  416f03:	mov    rdi,r15
  416f06:	mov    rsi,rbx
  416f09:	mov    rdx,r12
  416f0c:	mov    ecx,0x15
  416f11:	call   424090 <flatcc_json_parser_set_error@@Base>
  416f16:	mov    rbx,rax
  416f19:	mov    r14,QWORD PTR [rsp+0x10]
  416f1e:	cmp    DWORD PTR [r15+0x20],0x0
  416f23:	je     419785 <main@@Base+0x126b5>
  416f29:	jmp    4199ac <main@@Base+0x128dc>
  416f2e:	mov    rdi,QWORD PTR [rsp+0x8]
  416f33:	mov    rsi,rax
  416f36:	mov    rdx,r12
  416f39:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416f3e:	cmp    r14,rax
  416f41:	je     416d8f <main@@Base+0xfcbf>
  416f47:	mov    rbx,rax
  416f4a:	mov    r15,QWORD PTR [rsp+0x8]
  416f4f:	mov    rdi,QWORD PTR [r15]
  416f52:	mov    esi,0x9
  416f57:	call   41f6c0 <flatcc_builder_start_table@@Base>
  416f5c:	test   eax,eax
  416f5e:	jne    4199c1 <main@@Base+0x128f1>
  416f64:	mov    rsi,rbx
  416f67:	cmp    rbx,r12
  416f6a:	je     416faf <main@@Base+0xfedf>
  416f6c:	cmp    BYTE PTR [rsi],0x7b
  416f6f:	jne    416faf <main@@Base+0xfedf>
  416f71:	lea    rax,[rsi+0x1]
  416f75:	mov    rcx,r12
  416f78:	sub    rcx,rax
  416f7b:	cmp    rcx,0x2
  416f7f:	mov    r14,QWORD PTR [rsp+0x10]
  416f84:	jl     41703e <main@@Base+0xff6e>
  416f8a:	cmp    BYTE PTR [rax],0x20
  416f8d:	jg     41704c <main@@Base+0xff7c>
  416f93:	jne    41703e <main@@Base+0xff6e>
  416f99:	cmp    BYTE PTR [rsi+0x2],0x20
  416f9d:	jle    41703e <main@@Base+0xff6e>
  416fa3:	add    rsi,0x2
  416fa7:	mov    rax,rsi
  416faa:	jmp    41704c <main@@Base+0xff7c>
  416faf:	mov    rdi,r15
  416fb2:	mov    rdx,r12
  416fb5:	mov    ecx,0x15
  416fba:	call   424090 <flatcc_json_parser_set_error@@Base>
  416fbf:	mov    rbx,rax
  416fc2:	mov    r14,QWORD PTR [rsp+0x10]
  416fc7:	cmp    DWORD PTR [r15+0x20],0x0
  416fcc:	je     4197d8 <main@@Base+0x12708>
  416fd2:	jmp    4199c1 <main@@Base+0x128f1>
  416fd7:	mov    rdi,r15
  416fda:	mov    rdx,r12
  416fdd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  416fe2:	mov    rsi,rax
  416fe5:	mov    rax,r12
  416fe8:	cmp    rsi,r12
  416feb:	je     417153 <main@@Base+0x10083>
  416ff1:	cmp    BYTE PTR [rsi],0x7d
  416ff4:	jne    417150 <main@@Base+0x10080>
  416ffa:	lea    rbx,[rsi+0x1]
  416ffe:	mov    rax,r12
  417001:	sub    rax,rbx
  417004:	cmp    rax,0x2
  417008:	jl     418ef1 <main@@Base+0x11e21>
  41700e:	cmp    BYTE PTR [rbx],0x20
  417011:	jg     41977a <main@@Base+0x126aa>
  417017:	jne    418ef1 <main@@Base+0x11e21>
  41701d:	cmp    BYTE PTR [rsi+0x2],0x20
  417021:	jle    418ef1 <main@@Base+0x11e21>
  417027:	add    rsi,0x2
  41702b:	mov    rbx,rsi
  41702e:	cmp    DWORD PTR [r15+0x20],0x0
  417033:	je     419785 <main@@Base+0x126b5>
  417039:	jmp    4199ac <main@@Base+0x128dc>
  41703e:	mov    rdi,r15
  417041:	mov    rsi,rax
  417044:	mov    rdx,r12
  417047:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41704c:	mov    rsi,r12
  41704f:	cmp    rax,r12
  417052:	je     417820 <main@@Base+0x10750>
  417058:	cmp    BYTE PTR [rax],0x7d
  41705b:	jne    41781d <main@@Base+0x1074d>
  417061:	lea    rbx,[rax+0x1]
  417065:	mov    rcx,r12
  417068:	sub    rcx,rbx
  41706b:	cmp    rcx,0x2
  41706f:	jl     418f9a <main@@Base+0x11eca>
  417075:	cmp    BYTE PTR [rbx],0x20
  417078:	jg     4197cd <main@@Base+0x126fd>
  41707e:	jne    418f9a <main@@Base+0x11eca>
  417084:	cmp    BYTE PTR [rax+0x2],0x20
  417088:	jle    418f9a <main@@Base+0x11eca>
  41708e:	add    rax,0x2
  417092:	jmp    4197ca <main@@Base+0x126fa>
  417097:	mov    rdi,r15
  41709a:	mov    rsi,rbx
  41709d:	mov    rdx,r12
  4170a0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4170a5:	mov    rbx,rax
  4170a8:	cmp    r14,rbx
  4170ab:	je     41710a <main@@Base+0x1003a>
  4170ad:	mov    rdi,QWORD PTR [r15]
  4170b0:	mov    esi,0x2
  4170b5:	call   41f6c0 <flatcc_builder_start_table@@Base>
  4170ba:	test   eax,eax
  4170bc:	jne    4199ac <main@@Base+0x128dc>
  4170c2:	cmp    rbx,r12
  4170c5:	je     417125 <main@@Base+0x10055>
  4170c7:	cmp    BYTE PTR [rbx],0x7b
  4170ca:	jne    417125 <main@@Base+0x10055>
  4170cc:	lea    rsi,[rbx+0x1]
  4170d0:	mov    rax,r12
  4170d3:	sub    rax,rsi
  4170d6:	cmp    rax,0x2
  4170da:	mov    r14,QWORD PTR [rsp+0x10]
  4170df:	jl     418e02 <main@@Base+0x11d32>
  4170e5:	cmp    BYTE PTR [rsi],0x20
  4170e8:	jg     418e10 <main@@Base+0x11d40>
  4170ee:	jne    418e02 <main@@Base+0x11d32>
  4170f4:	cmp    BYTE PTR [rbx+0x2],0x20
  4170f8:	jle    418e02 <main@@Base+0x11d32>
  4170fe:	add    rbx,0x2
  417102:	mov    rsi,rbx
  417105:	jmp    418e10 <main@@Base+0x11d40>
  41710a:	mov    rdi,r15
  41710d:	mov    rsi,r14
  417110:	mov    rdx,r12
  417113:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  417118:	mov    rbx,rax
  41711b:	mov    r14,QWORD PTR [rsp+0x10]
  417120:	jmp    416a3c <main@@Base+0xf96c>
  417125:	mov    rdi,r15
  417128:	mov    rsi,rbx
  41712b:	mov    rdx,r12
  41712e:	mov    ecx,0x15
  417133:	call   424090 <flatcc_json_parser_set_error@@Base>
  417138:	mov    rbx,rax
  41713b:	mov    r14,QWORD PTR [rsp+0x10]
  417140:	cmp    DWORD PTR [r15+0x20],0x0
  417145:	je     419898 <main@@Base+0x127c8>
  41714b:	jmp    4199ac <main@@Base+0x128dc>
  417150:	mov    rax,rsi
  417153:	mov    rsi,r12
  417156:	cmp    rax,r12
  417159:	je     41719b <main@@Base+0x100cb>
  41715b:	movzx  ecx,BYTE PTR [rax]
  41715e:	cmp    cl,0x2e
  417161:	je     417178 <main@@Base+0x100a8>
  417163:	cmp    cl,0x22
  417166:	jne    41718d <main@@Base+0x100bd>
  417168:	inc    rax
  41716b:	mov    rcx,QWORD PTR [rsp+0x18]
  417170:	mov    DWORD PTR [rcx],0x0
  417176:	jmp    417198 <main@@Base+0x100c8>
  417178:	mov    rdi,r15
  41717b:	mov    rsi,rax
  41717e:	mov    rdx,r12
  417181:	mov    ecx,0x5
  417186:	call   424090 <flatcc_json_parser_set_error@@Base>
  41718b:	jmp    417198 <main@@Base+0x100c8>
  41718d:	mov    rcx,QWORD PTR [rsp+0x18]
  417192:	mov    DWORD PTR [rcx],0x1
  417198:	mov    rsi,rax
  41719b:	mov    rax,r12
  41719e:	sub    rax,rsi
  4171a1:	cmp    rax,0x8
  4171a5:	jb     4171b1 <main@@Base+0x100e1>
  4171a7:	movbe  rax,QWORD PTR [rsi]
  4171ac:	jmp    417237 <main@@Base+0x10167>
  4171b1:	dec    rax
  4171b4:	cmp    rax,0x6
  4171b8:	ja     417260 <main@@Base+0x10190>
  4171be:	lea    rcx,[rip+0x1d5d3]        # 434798 <_IO_stdin_used@@Base+0x798>
  4171c5:	mov    rdx,rcx
  4171c8:	movsxd rcx,DWORD PTR [rcx+rax*4]
  4171cc:	add    rcx,rdx
  4171cf:	xor    r8d,r8d
  4171d2:	xor    eax,eax
  4171d4:	xor    edx,edx
  4171d6:	xor    edi,edi
  4171d8:	xor    ebp,ebp
  4171da:	xor    ebx,ebx
  4171dc:	jmp    rcx
  4171de:	movsx  r8,BYTE PTR [rsi+0x6]
  4171e3:	shl    r8,0x8
  4171e7:	movsx  rax,BYTE PTR [rsi+0x5]
  4171ec:	shl    rax,0x10
  4171f0:	or     rax,r8
  4171f3:	movsx  rdx,BYTE PTR [rsi+0x4]
  4171f8:	shl    rdx,0x18
  4171fc:	or     rdx,rax
  4171ff:	movsx  rdi,BYTE PTR [rsi+0x3]
  417204:	shl    rdi,0x20
  417208:	or     rdi,rdx
  41720b:	movsx  rbp,BYTE PTR [rsi+0x2]
  417210:	shl    rbp,0x28
  417214:	or     rbp,rdi
  417217:	movsx  rbx,BYTE PTR [rsi+0x1]
  41721c:	shl    rbx,0x30
  417220:	or     rbx,rbp
  417223:	movzx  eax,BYTE PTR [rsi]
  417226:	shl    rax,0x38
  41722a:	or     rax,rbx
  41722d:	movabs rbp,0x625f73746172745f
  417237:	movabs rcx,0x616161615f626262
  417241:	cmp    rax,rcx
  417244:	jne    417260 <main@@Base+0x10190>
  417246:	lea    r14,[rsi+0x8]
  41724a:	mov    rax,r12
  41724d:	sub    rax,r14
  417250:	cmp    rax,0x8
  417254:	jb     417273 <main@@Base+0x101a3>
  417256:	movbe  rcx,QWORD PTR [r14]
  41725b:	jmp    4172f9 <main@@Base+0x10229>
  417260:	mov    rdi,r15
  417263:	mov    rdx,r12
  417266:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41726b:	mov    rbp,rax
  41726e:	jmp    41761a <main@@Base+0x1054a>
  417273:	lea    rcx,[rax-0x1]
  417277:	cmp    rcx,0x6
  41727b:	ja     417604 <main@@Base+0x10534>
  417281:	lea    rdx,[rip+0x1d52c]        # 4347b4 <_IO_stdin_used@@Base+0x7b4>
  417288:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41728c:	add    rcx,rdx
  41728f:	xor    r8d,r8d
  417292:	xor    r9d,r9d
  417295:	xor    edi,edi
  417297:	xor    ebp,ebp
  417299:	xor    ebx,ebx
  41729b:	xor    edx,edx
  41729d:	jmp    rcx
  41729f:	movsx  r8,BYTE PTR [rsi+0xe]
  4172a4:	shl    r8,0x8
  4172a8:	movsx  r9,BYTE PTR [rsi+0xd]
  4172ad:	shl    r9,0x10
  4172b1:	or     r9,r8
  4172b4:	movsx  rdi,BYTE PTR [rsi+0xc]
  4172b9:	shl    rdi,0x18
  4172bd:	or     rdi,r9
  4172c0:	movsx  rbp,BYTE PTR [rsi+0xb]
  4172c5:	shl    rbp,0x20
  4172c9:	or     rbp,rdi
  4172cc:	movsx  rbx,BYTE PTR [rsi+0xa]
  4172d1:	shl    rbx,0x28
  4172d5:	or     rbx,rbp
  4172d8:	movsx  rdx,BYTE PTR [rsi+0x9]
  4172dd:	shl    rdx,0x30
  4172e1:	or     rdx,rbx
  4172e4:	movzx  ecx,BYTE PTR [r14]
  4172e8:	shl    rcx,0x38
  4172ec:	or     rcx,rdx
  4172ef:	movabs rbp,0x625f73746172745f
  4172f9:	mov    rdx,rcx
  4172fc:	and    rdx,0xffffffffffffff00
  417303:	lea    rdi,[rbp+0x3fdfea1]
  41730a:	cmp    rdx,rdi
  41730d:	jne    417344 <main@@Base+0x10274>
  41730f:	cmp    rax,0x8
  417313:	jl     417604 <main@@Base+0x10534>
  417319:	mov    rax,QWORD PTR [rsp+0x18]
  41731e:	cmp    DWORD PTR [rax],0x0
  417321:	movzx  eax,BYTE PTR [rsi+0xf]
  417325:	je     417389 <main@@Base+0x102b9>
  417327:	cmp    al,0x21
  417329:	jl     417333 <main@@Base+0x10263>
  41732b:	cmp    al,0x3a
  41732d:	jne    417604 <main@@Base+0x10534>
  417333:	add    rsi,0xf
  417337:	mov    rax,QWORD PTR [rsp+0x18]
  41733c:	mov    DWORD PTR [rax],0x0
  417342:	jmp    417395 <main@@Base+0x102c5>
  417344:	cmp    rcx,rbp
  417347:	jne    417604 <main@@Base+0x10534>
  41734d:	cmp    rax,0x9
  417351:	jl     417604 <main@@Base+0x10534>
  417357:	mov    rax,QWORD PTR [rsp+0x18]
  41735c:	cmp    DWORD PTR [rax],0x0
  41735f:	movzx  eax,BYTE PTR [rsi+0x10]
  417363:	je     417429 <main@@Base+0x10359>
  417369:	cmp    al,0x21
  41736b:	jl     417375 <main@@Base+0x102a5>
  41736d:	cmp    al,0x3a
  41736f:	jne    417604 <main@@Base+0x10534>
  417375:	add    rsi,0x10
  417379:	mov    rax,QWORD PTR [rsp+0x18]
  41737e:	mov    DWORD PTR [rax],0x0
  417384:	jmp    417435 <main@@Base+0x10365>
  417389:	cmp    al,0x22
  41738b:	jne    417604 <main@@Base+0x10534>
  417391:	add    rsi,0x10
  417395:	mov    rax,r12
  417398:	sub    rax,rsi
  41739b:	cmp    rax,0x2
  41739f:	jl     4173b8 <main@@Base+0x102e8>
  4173a1:	cmp    BYTE PTR [rsi],0x20
  4173a4:	jg     4173c6 <main@@Base+0x102f6>
  4173a6:	jne    4173b8 <main@@Base+0x102e8>
  4173a8:	cmp    BYTE PTR [rsi+0x1],0x20
  4173ac:	jle    4173b8 <main@@Base+0x102e8>
  4173ae:	inc    rsi
  4173b1:	cmp    rsi,r12
  4173b4:	jne    4173cb <main@@Base+0x102fb>
  4173b6:	jmp    417414 <main@@Base+0x10344>
  4173b8:	mov    rdi,r15
  4173bb:	mov    rdx,r12
  4173be:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4173c3:	mov    rsi,rax
  4173c6:	cmp    rsi,r12
  4173c9:	je     417414 <main@@Base+0x10344>
  4173cb:	cmp    BYTE PTR [rsi],0x3a
  4173ce:	jne    417414 <main@@Base+0x10344>
  4173d0:	lea    r13,[rsi+0x1]
  4173d4:	mov    rax,r12
  4173d7:	sub    rax,r13
  4173da:	cmp    rax,0x2
  4173de:	jl     4174c9 <main@@Base+0x103f9>
  4173e4:	cmp    BYTE PTR [r13+0x0],0x20
  4173e9:	jg     4174da <main@@Base+0x1040a>
  4173ef:	jne    4174c9 <main@@Base+0x103f9>
  4173f5:	cmp    BYTE PTR [rsi+0x2],0x20
  4173f9:	jle    4174c9 <main@@Base+0x103f9>
  4173ff:	add    rsi,0x2
  417403:	mov    r13,rsi
  417406:	cmp    r14,r13
  417409:	jne    4174e3 <main@@Base+0x10413>
  41740f:	jmp    417604 <main@@Base+0x10534>
  417414:	mov    rdi,r15
  417417:	mov    rdx,r12
  41741a:	mov    ecx,0x4
  41741f:	call   424090 <flatcc_json_parser_set_error@@Base>
  417424:	jmp    4174d7 <main@@Base+0x10407>
  417429:	cmp    al,0x22
  41742b:	jne    417604 <main@@Base+0x10534>
  417431:	add    rsi,0x11
  417435:	mov    rax,r12
  417438:	sub    rax,rsi
  41743b:	cmp    rax,0x2
  41743f:	jl     417458 <main@@Base+0x10388>
  417441:	cmp    BYTE PTR [rsi],0x20
  417444:	jg     417466 <main@@Base+0x10396>
  417446:	jne    417458 <main@@Base+0x10388>
  417448:	cmp    BYTE PTR [rsi+0x1],0x20
  41744c:	jle    417458 <main@@Base+0x10388>
  41744e:	inc    rsi
  417451:	cmp    rsi,r12
  417454:	jne    41746b <main@@Base+0x1039b>
  417456:	jmp    4174b4 <main@@Base+0x103e4>
  417458:	mov    rdi,r15
  41745b:	mov    rdx,r12
  41745e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417463:	mov    rsi,rax
  417466:	cmp    rsi,r12
  417469:	je     4174b4 <main@@Base+0x103e4>
  41746b:	cmp    BYTE PTR [rsi],0x3a
  41746e:	jne    4174b4 <main@@Base+0x103e4>
  417470:	lea    r13,[rsi+0x1]
  417474:	mov    rax,r12
  417477:	sub    rax,r13
  41747a:	cmp    rax,0x2
  41747e:	jl     417588 <main@@Base+0x104b8>
  417484:	cmp    BYTE PTR [r13+0x0],0x20
  417489:	jg     417599 <main@@Base+0x104c9>
  41748f:	jne    417588 <main@@Base+0x104b8>
  417495:	cmp    BYTE PTR [rsi+0x2],0x20
  417499:	jle    417588 <main@@Base+0x104b8>
  41749f:	add    rsi,0x2
  4174a3:	mov    r13,rsi
  4174a6:	cmp    r14,r13
  4174a9:	jne    41759e <main@@Base+0x104ce>
  4174af:	jmp    417604 <main@@Base+0x10534>
  4174b4:	mov    rdi,r15
  4174b7:	mov    rdx,r12
  4174ba:	mov    ecx,0x4
  4174bf:	call   424090 <flatcc_json_parser_set_error@@Base>
  4174c4:	jmp    417596 <main@@Base+0x104c6>
  4174c9:	mov    rdi,r15
  4174cc:	mov    rsi,r13
  4174cf:	mov    rdx,r12
  4174d2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4174d7:	mov    r13,rax
  4174da:	cmp    r14,r13
  4174dd:	je     417604 <main@@Base+0x10534>
  4174e3:	mov    QWORD PTR [rsp+0x28],0x0
  4174ec:	mov    DWORD PTR [rsp+0x4],0x0
  4174f4:	mov    QWORD PTR [rsp+0x20],0x0
  4174fd:	cmp    r13,r12
  417500:	je     41755d <main@@Base+0x1048d>
  417502:	mov    rdi,r15
  417505:	mov    rsi,r13
  417508:	mov    rdx,r12
  41750b:	lea    rcx,[rsp+0x4]
  417510:	lea    r8,[rsp+0x28]
  417515:	call   425c50 <flatcc_json_parser_integer@@Base>
  41751a:	cmp    rax,r13
  41751d:	mov    r14,QWORD PTR [rsp+0x10]
  417522:	je     417575 <main@@Base+0x104a5>
  417524:	mov    rbp,rax
  417527:	mov    rbx,QWORD PTR [rsp+0x28]
  41752c:	cmp    DWORD PTR [rsp+0x4],0x0
  417531:	je     4176c4 <main@@Base+0x105f4>
  417537:	movabs rax,0x8000000000000000
  417541:	cmp    rbx,rax
  417544:	jbe    4176e8 <main@@Base+0x10618>
  41754a:	mov    rdi,r15
  41754d:	mov    rsi,rbp
  417550:	mov    rdx,r12
  417553:	mov    ecx,0x8
  417558:	jmp    4176d7 <main@@Base+0x10607>
  41755d:	xor    ebx,ebx
  41755f:	mov    rbp,r12
  417562:	mov    r14,QWORD PTR [rsp+0x10]
  417567:	cmp    r13,rbp
  41756a:	jne    417729 <main@@Base+0x10659>
  417570:	jmp    4176f5 <main@@Base+0x10625>
  417575:	xor    ebx,ebx
  417577:	mov    rbp,r13
  41757a:	cmp    r13,rbp
  41757d:	jne    417729 <main@@Base+0x10659>
  417583:	jmp    4176f5 <main@@Base+0x10625>
  417588:	mov    rdi,r15
  41758b:	mov    rsi,r13
  41758e:	mov    rdx,r12
  417591:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417596:	mov    r13,rax
  417599:	cmp    r14,r13
  41759c:	je     417604 <main@@Base+0x10534>
  41759e:	mov    QWORD PTR [rsp+0x28],0x0
  4175a7:	mov    DWORD PTR [rsp+0x20],0x0
  4175af:	mov    DWORD PTR [rsp+0x4],0x0
  4175b7:	xor    ebx,ebx
  4175b9:	cmp    r13,r12
  4175bc:	je     4176bc <main@@Base+0x105ec>
  4175c2:	mov    rdi,r15
  4175c5:	mov    rsi,r13
  4175c8:	mov    rdx,r12
  4175cb:	lea    rcx,[rsp+0x20]
  4175d0:	lea    r8,[rsp+0x28]
  4175d5:	call   425c50 <flatcc_json_parser_integer@@Base>
  4175da:	cmp    rax,r13
  4175dd:	je     41775e <main@@Base+0x1068e>
  4175e3:	mov    rbp,rax
  4175e6:	cmp    DWORD PTR [rsp+0x20],0x0
  4175eb:	je     417763 <main@@Base+0x10693>
  4175f1:	mov    rdi,r15
  4175f4:	mov    rsi,rbp
  4175f7:	mov    rdx,r12
  4175fa:	mov    ecx,0x8
  4175ff:	jmp    417788 <main@@Base+0x106b8>
  417604:	mov    rdi,r15
  417607:	mov    rsi,r14
  41760a:	mov    rdx,r12
  41760d:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  417612:	mov    rbp,rax
  417615:	mov    r14,QWORD PTR [rsp+0x10]
  41761a:	mov    rax,r12
  41761d:	sub    rax,rbp
  417620:	cmp    rax,0x2
  417624:	jl     417641 <main@@Base+0x10571>
  417626:	cmp    BYTE PTR [rbp+0x0],0x20
  41762a:	jg     417652 <main@@Base+0x10582>
  41762c:	jne    417641 <main@@Base+0x10571>
  41762e:	cmp    BYTE PTR [rbp+0x1],0x20
  417632:	jle    417641 <main@@Base+0x10571>
  417634:	inc    rbp
  417637:	cmp    rbp,r12
  41763a:	jne    41765b <main@@Base+0x1058b>
  41763c:	jmp    418e69 <main@@Base+0x11d99>
  417641:	mov    rdi,r15
  417644:	mov    rsi,rbp
  417647:	mov    rdx,r12
  41764a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41764f:	mov    rbp,rax
  417652:	cmp    rbp,r12
  417655:	je     418e69 <main@@Base+0x11d99>
  41765b:	movzx  eax,BYTE PTR [rbp+0x0]
  41765f:	cmp    al,0x2c
  417661:	jne    418e7c <main@@Base+0x11dac>
  417667:	lea    rax,[rbp+0x1]
  41766b:	mov    rcx,r12
  41766e:	sub    rcx,rax
  417671:	cmp    rcx,0x2
  417675:	jl     41768d <main@@Base+0x105bd>
  417677:	cmp    BYTE PTR [rax],0x20
  41767a:	jg     41769b <main@@Base+0x105cb>
  41767c:	jne    41768d <main@@Base+0x105bd>
  41767e:	cmp    BYTE PTR [rbp+0x2],0x20
  417682:	jle    41768d <main@@Base+0x105bd>
  417684:	add    rbp,0x2
  417688:	mov    rax,rbp
  41768b:	jmp    41769b <main@@Base+0x105cb>
  41768d:	mov    rdi,r15
  417690:	mov    rsi,rax
  417693:	mov    rdx,r12
  417696:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41769b:	cmp    rax,r12
  41769e:	movabs rbp,0x625f73746172745f
  4176a8:	je     418ebc <main@@Base+0x11dec>
  4176ae:	cmp    BYTE PTR [rax],0x7d
  4176b1:	jne    417153 <main@@Base+0x10083>
  4176b7:	jmp    418ec7 <main@@Base+0x11df7>
  4176bc:	mov    rbp,r12
  4176bf:	jmp    417790 <main@@Base+0x106c0>
  4176c4:	test   rbx,rbx
  4176c7:	jns    4176eb <main@@Base+0x1061b>
  4176c9:	mov    rdi,r15
  4176cc:	mov    rsi,rbp
  4176cf:	mov    rdx,r12
  4176d2:	mov    ecx,0x7
  4176d7:	call   424090 <flatcc_json_parser_set_error@@Base>
  4176dc:	mov    rbp,rax
  4176df:	xor    ebx,ebx
  4176e1:	cmp    r13,rbp
  4176e4:	jne    417729 <main@@Base+0x10659>
  4176e6:	jmp    4176f5 <main@@Base+0x10625>
  4176e8:	neg    rbx
  4176eb:	mov    QWORD PTR [rsp+0x20],rbx
  4176f0:	cmp    r13,rbp
  4176f3:	jne    417729 <main@@Base+0x10659>
  4176f5:	mov    rdi,r15
  4176f8:	mov    rsi,r13
  4176fb:	mov    rdx,r12
  4176fe:	lea    rcx,[rip+0x2bdfb]        # 443500 <__data_start@@Base+0x450>
  417705:	lea    r8,[rsp+0x20]
  41770a:	call   414d70 <main@@Base+0xdca0>
  41770f:	mov    rbp,rax
  417712:	cmp    rax,r13
  417715:	je     4199a4 <main@@Base+0x128d4>
  41771b:	cmp    rbp,r12
  41771e:	je     4199a4 <main@@Base+0x128d4>
  417724:	mov    rbx,QWORD PTR [rsp+0x20]
  417729:	test   rbx,rbx
  41772c:	jne    417739 <main@@Base+0x10669>
  41772e:	test   BYTE PTR [r15+0x10],0x2
  417733:	je     41761a <main@@Base+0x1054a>
  417739:	mov    rdi,QWORD PTR [r15]
  41773c:	mov    edx,0x8
  417741:	xor    esi,esi
  417743:	mov    ecx,0x8
  417748:	call   420a40 <flatcc_builder_table_add@@Base>
  41774d:	test   rax,rax
  417750:	je     4199a4 <main@@Base+0x128d4>
  417756:	mov    QWORD PTR [rax],rbx
  417759:	jmp    41761a <main@@Base+0x1054a>
  41775e:	mov    rbp,r13
  417761:	jmp    417790 <main@@Base+0x106c0>
  417763:	mov    rax,QWORD PTR [rsp+0x28]
  417768:	mov    rcx,rax
  41776b:	shr    rcx,0x20
  41776f:	je     41780d <main@@Base+0x1073d>
  417775:	mov    r15,QWORD PTR [rsp+0x8]
  41777a:	mov    rdi,r15
  41777d:	mov    rsi,rbp
  417780:	mov    rdx,r12
  417783:	mov    ecx,0x7
  417788:	call   424090 <flatcc_json_parser_set_error@@Base>
  41778d:	mov    rbp,rax
  417790:	mov    r14,QWORD PTR [rsp+0x10]
  417795:	cmp    r13,rbp
  417798:	jne    4177d7 <main@@Base+0x10707>
  41779a:	mov    rdi,r15
  41779d:	mov    rsi,r13
  4177a0:	mov    rdx,r12
  4177a3:	lea    rcx,[rip+0x2bd76]        # 443520 <__data_start@@Base+0x470>
  4177aa:	lea    r8,[rsp+0x4]
  4177af:	call   414f50 <main@@Base+0xde80>
  4177b4:	mov    rbp,rax
  4177b7:	cmp    rax,r13
  4177ba:	je     4199a4 <main@@Base+0x128d4>
  4177c0:	cmp    rbp,r12
  4177c3:	je     4199a4 <main@@Base+0x128d4>
  4177c9:	mov    ebx,DWORD PTR [rsp+0x4]
  4177cd:	mov    r15,QWORD PTR [rsp+0x8]
  4177d2:	mov    r14,QWORD PTR [rsp+0x10]
  4177d7:	test   ebx,ebx
  4177d9:	jne    4177e6 <main@@Base+0x10716>
  4177db:	test   BYTE PTR [r15+0x10],0x2
  4177e0:	je     41761a <main@@Base+0x1054a>
  4177e6:	mov    rdi,QWORD PTR [r15]
  4177e9:	mov    edx,0x4
  4177ee:	mov    esi,0x1
  4177f3:	mov    ecx,0x4
  4177f8:	call   420a40 <flatcc_builder_table_add@@Base>
  4177fd:	test   rax,rax
  417800:	je     4199a4 <main@@Base+0x128d4>
  417806:	mov    DWORD PTR [rax],ebx
  417808:	jmp    41761a <main@@Base+0x1054a>
  41780d:	mov    DWORD PTR [rsp+0x4],eax
  417811:	mov    ebx,eax
  417813:	mov    r15,QWORD PTR [rsp+0x8]
  417818:	jmp    417790 <main@@Base+0x106c0>
  41781d:	mov    rsi,rax
  417820:	mov    r9,r12
  417823:	cmp    rsi,r12
  417826:	je     417866 <main@@Base+0x10796>
  417828:	movzx  eax,BYTE PTR [rsi]
  41782b:	cmp    al,0x2e
  41782d:	je     417843 <main@@Base+0x10773>
  41782f:	cmp    al,0x22
  417831:	jne    417858 <main@@Base+0x10788>
  417833:	inc    rsi
  417836:	mov    rax,QWORD PTR [rsp+0x18]
  41783b:	mov    DWORD PTR [rax],0x0
  417841:	jmp    417863 <main@@Base+0x10793>
  417843:	mov    rdi,r15
  417846:	mov    rdx,r12
  417849:	mov    ecx,0x5
  41784e:	call   424090 <flatcc_json_parser_set_error@@Base>
  417853:	mov    r9,rax
  417856:	jmp    417866 <main@@Base+0x10796>
  417858:	mov    rax,QWORD PTR [rsp+0x18]
  41785d:	mov    DWORD PTR [rax],0x1
  417863:	mov    r9,rsi
  417866:	mov    r14,r12
  417869:	sub    r14,r9
  41786c:	cmp    r14,0x8
  417870:	jb     417879 <main@@Base+0x107a9>
  417872:	movbe  rbx,QWORD PTR [r9]
  417877:	jmp    4178f3 <main@@Base+0x10823>
  417879:	lea    rax,[r14-0x1]
  41787d:	cmp    rax,0x6
  417881:	ja     41834b <main@@Base+0x1127b>
  417887:	lea    rcx,[rip+0x1ce46]        # 4346d4 <_IO_stdin_used@@Base+0x6d4>
  41788e:	movsxd rbx,DWORD PTR [rcx+rax*4]
  417892:	add    rbx,rcx
  417895:	xor    ecx,ecx
  417897:	xor    eax,eax
  417899:	xor    edx,edx
  41789b:	xor    esi,esi
  41789d:	xor    edi,edi
  41789f:	xor    ebp,ebp
  4178a1:	jmp    rbx
  4178a3:	movsx  rcx,BYTE PTR [r9+0x6]
  4178a8:	shl    rcx,0x8
  4178ac:	movsx  rax,BYTE PTR [r9+0x5]
  4178b1:	shl    rax,0x10
  4178b5:	or     rax,rcx
  4178b8:	movsx  rdx,BYTE PTR [r9+0x4]
  4178bd:	shl    rdx,0x18
  4178c1:	or     rdx,rax
  4178c4:	movsx  rsi,BYTE PTR [r9+0x3]
  4178c9:	shl    rsi,0x20
  4178cd:	or     rsi,rdx
  4178d0:	movsx  rdi,BYTE PTR [r9+0x2]
  4178d5:	shl    rdi,0x28
  4178d9:	or     rdi,rsi
  4178dc:	movsx  rbp,BYTE PTR [r9+0x1]
  4178e1:	shl    rbp,0x30
  4178e5:	or     rbp,rdi
  4178e8:	movzx  ebx,BYTE PTR [r9]
  4178ec:	shl    rbx,0x38
  4178f0:	or     rbx,rbp
  4178f3:	movabs rdx,0x6363636300000000
  4178fd:	movabs rsi,0x6262626200000000
  417907:	cmp    rbx,rdx
  41790a:	movabs rcx,0x616161615f626262
  417914:	jae    417940 <main@@Base+0x10870>
  417916:	lea    rax,[rcx-0x2e302f2e]
  41791d:	cmp    rbx,rax
  417920:	jne    417998 <main@@Base+0x108c8>
  417922:	lea    r14,[r9+0x8]
  417926:	mov    rax,r12
  417929:	sub    rax,r14
  41792c:	cmp    rax,0x8
  417930:	jb     417a5b <main@@Base+0x1098b>
  417936:	movbe  rcx,QWORD PTR [r14]
  41793b:	jmp    417ad9 <main@@Base+0x10a09>
  417940:	lea    rax,[rdx+0x31323334]
  417947:	cmp    rbx,rax
  41794a:	jne    4179fd <main@@Base+0x1092d>
  417950:	mov    rbx,r9
  417953:	cmp    r14,0x9
  417957:	mov    r14,QWORD PTR [rsp+0x10]
  41795c:	jl     417d08 <main@@Base+0x10c38>
  417962:	mov    rax,QWORD PTR [rsp+0x18]
  417967:	cmp    DWORD PTR [rax],0x0
  41796a:	movzx  eax,BYTE PTR [r9+0x8]
  41796f:	je     417b36 <main@@Base+0x10a66>
  417975:	cmp    al,0x21
  417977:	jl     417984 <main@@Base+0x108b4>
  417979:	mov    rbx,r9
  41797c:	cmp    al,0x3a
  41797e:	jne    417d08 <main@@Base+0x10c38>
  417984:	lea    rsi,[r9+0x8]
  417988:	mov    rax,QWORD PTR [rsp+0x18]
  41798d:	mov    DWORD PTR [rax],0x0
  417993:	jmp    417b45 <main@@Base+0x10a75>
  417998:	mov    r13,rbx
  41799b:	movabs rax,0xffffffff00000000
  4179a5:	and    r13,rax
  4179a8:	lea    rax,[rcx-0x5f626262]
  4179af:	cmp    r13,rax
  4179b2:	jne    418142 <main@@Base+0x11072>
  4179b8:	mov    rax,r9
  4179bb:	cmp    r14,0x5
  4179bf:	jl     418112 <main@@Base+0x11042>
  4179c5:	mov    rax,QWORD PTR [rsp+0x18]
  4179ca:	cmp    DWORD PTR [rax],0x0
  4179cd:	movzx  ecx,BYTE PTR [r9+0x4]
  4179d2:	je     417b6f <main@@Base+0x10a9f>
  4179d8:	cmp    cl,0x21
  4179db:	jl     4179e9 <main@@Base+0x10919>
  4179dd:	mov    rax,r9
  4179e0:	cmp    cl,0x3a
  4179e3:	jne    418112 <main@@Base+0x11042>
  4179e9:	lea    rsi,[r9+0x4]
  4179ed:	mov    rax,QWORD PTR [rsp+0x18]
  4179f2:	mov    DWORD PTR [rax],0x0
  4179f8:	jmp    417b7f <main@@Base+0x10aaf>
  4179fd:	mov    rax,rbx
  417a00:	movabs rcx,0xffffffff00000000
  417a0a:	and    rax,rcx
  417a0d:	cmp    rax,rdx
  417a10:	jne    418300 <main@@Base+0x11230>
  417a16:	mov    rax,r9
  417a19:	cmp    r14,0x5
  417a1d:	jl     4182b4 <main@@Base+0x111e4>
  417a23:	mov    rax,QWORD PTR [rsp+0x18]
  417a28:	cmp    DWORD PTR [rax],0x0
  417a2b:	movzx  ecx,BYTE PTR [r9+0x4]
  417a30:	je     417ba9 <main@@Base+0x10ad9>
  417a36:	cmp    cl,0x21
  417a39:	jl     417a47 <main@@Base+0x10977>
  417a3b:	mov    rax,r9
  417a3e:	cmp    cl,0x3a
  417a41:	jne    4182b4 <main@@Base+0x111e4>
  417a47:	lea    rsi,[r9+0x4]
  417a4b:	mov    rax,QWORD PTR [rsp+0x18]
  417a50:	mov    DWORD PTR [rax],0x0
  417a56:	jmp    417bb9 <main@@Base+0x10ae9>
  417a5b:	lea    rcx,[rax-0x1]
  417a5f:	cmp    rcx,0x6
  417a63:	ja     418be7 <main@@Base+0x11b17>
  417a69:	lea    rdx,[rip+0x1ccb8]        # 434728 <_IO_stdin_used@@Base+0x728>
  417a70:	mov    rsi,rdx
  417a73:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  417a77:	add    rdx,rsi
  417a7a:	xor    r8d,r8d
  417a7d:	xor    ecx,ecx
  417a7f:	xor    esi,esi
  417a81:	xor    edi,edi
  417a83:	xor    ebp,ebp
  417a85:	xor    ebx,ebx
  417a87:	jmp    rdx
  417a89:	movsx  r8,BYTE PTR [r9+0xe]
  417a8e:	shl    r8,0x8
  417a92:	movsx  rcx,BYTE PTR [r9+0xd]
  417a97:	shl    rcx,0x10
  417a9b:	or     rcx,r8
  417a9e:	movsx  rsi,BYTE PTR [r9+0xc]
  417aa3:	shl    rsi,0x18
  417aa7:	or     rsi,rcx
  417aaa:	movsx  rdi,BYTE PTR [r9+0xb]
  417aaf:	shl    rdi,0x20
  417ab3:	or     rdi,rsi
  417ab6:	movsx  rbp,BYTE PTR [r9+0xa]
  417abb:	shl    rbp,0x28
  417abf:	or     rbp,rdi
  417ac2:	movsx  rbx,BYTE PTR [r9+0x9]
  417ac7:	shl    rbx,0x30
  417acb:	or     rbx,rbp
  417ace:	movzx  ecx,BYTE PTR [r14]
  417ad2:	shl    rcx,0x38
  417ad6:	or     rcx,rbx
  417ad9:	movabs rdx,0xff00000000000000
  417ae3:	and    rcx,rdx
  417ae6:	movabs rdx,0x3500000000000000
  417af0:	cmp    rcx,rdx
  417af3:	jne    418be7 <main@@Base+0x11b17>
  417af9:	cmp    rax,0x2
  417afd:	jl     418be7 <main@@Base+0x11b17>
  417b03:	mov    rax,QWORD PTR [rsp+0x18]
  417b08:	cmp    DWORD PTR [rax],0x0
  417b0b:	movzx  eax,BYTE PTR [r9+0x9]
  417b10:	je     417be3 <main@@Base+0x10b13>
  417b16:	cmp    al,0x21
  417b18:	jl     417b22 <main@@Base+0x10a52>
  417b1a:	cmp    al,0x3a
  417b1c:	jne    418be7 <main@@Base+0x11b17>
  417b22:	add    r9,0x9
  417b26:	mov    rax,QWORD PTR [rsp+0x18]
  417b2b:	mov    DWORD PTR [rax],0x0
  417b31:	jmp    417bef <main@@Base+0x10b1f>
  417b36:	mov    rbx,r9
  417b39:	cmp    al,0x22
  417b3b:	jne    417d08 <main@@Base+0x10c38>
  417b41:	lea    rsi,[r9+0x9]
  417b45:	mov    rax,r12
  417b48:	sub    rax,rsi
  417b4b:	cmp    rax,0x2
  417b4f:	jl     417ca1 <main@@Base+0x10bd1>
  417b55:	cmp    BYTE PTR [rsi],0x20
  417b58:	jle    417c8c <main@@Base+0x10bbc>
  417b5e:	mov    rbp,r9
  417b61:	cmp    rsi,r12
  417b64:	jne    417cb7 <main@@Base+0x10be7>
  417b6a:	jmp    417ce2 <main@@Base+0x10c12>
  417b6f:	mov    rax,r9
  417b72:	cmp    cl,0x22
  417b75:	jne    418112 <main@@Base+0x11042>
  417b7b:	lea    rsi,[r9+0x5]
  417b7f:	mov    rax,r12
  417b82:	sub    rax,rsi
  417b85:	cmp    rax,0x2
  417b89:	jl     417f94 <main@@Base+0x10ec4>
  417b8f:	cmp    BYTE PTR [rsi],0x20
  417b92:	jle    417f7f <main@@Base+0x10eaf>
  417b98:	mov    rbp,r9
  417b9b:	cmp    rsi,r12
  417b9e:	jne    417faa <main@@Base+0x10eda>
  417ba4:	jmp    417fe8 <main@@Base+0x10f18>
  417ba9:	mov    rax,r9
  417bac:	cmp    cl,0x22
  417baf:	jne    4182b4 <main@@Base+0x111e4>
  417bb5:	lea    rsi,[r9+0x5]
  417bb9:	mov    rax,r12
  417bbc:	sub    rax,rsi
  417bbf:	cmp    rax,0x2
  417bc3:	jl     418012 <main@@Base+0x10f42>
  417bc9:	cmp    BYTE PTR [rsi],0x20
  417bcc:	jle    417ffd <main@@Base+0x10f2d>
  417bd2:	mov    rbp,r9
  417bd5:	cmp    rsi,r12
  417bd8:	jne    418028 <main@@Base+0x10f58>
  417bde:	jmp    418066 <main@@Base+0x10f96>
  417be3:	cmp    al,0x22
  417be5:	jne    418be7 <main@@Base+0x11b17>
  417beb:	add    r9,0xa
  417bef:	mov    rax,r12
  417bf2:	sub    rax,r9
  417bf5:	cmp    rax,0x2
  417bf9:	jl     417c14 <main@@Base+0x10b44>
  417bfb:	cmp    BYTE PTR [r9],0x20
  417bff:	jg     417c25 <main@@Base+0x10b55>
  417c01:	jne    417c14 <main@@Base+0x10b44>
  417c03:	cmp    BYTE PTR [r9+0x1],0x20
  417c08:	jle    417c14 <main@@Base+0x10b44>
  417c0a:	inc    r9
  417c0d:	cmp    r9,r12
  417c10:	jne    417c2a <main@@Base+0x10b5a>
  417c12:	jmp    417c74 <main@@Base+0x10ba4>
  417c14:	mov    rdi,r15
  417c17:	mov    rsi,r9
  417c1a:	mov    rdx,r12
  417c1d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417c22:	mov    r9,rax
  417c25:	cmp    r9,r12
  417c28:	je     417c74 <main@@Base+0x10ba4>
  417c2a:	cmp    BYTE PTR [r9],0x3a
  417c2e:	jne    417c74 <main@@Base+0x10ba4>
  417c30:	lea    rbp,[r9+0x1]
  417c34:	mov    rax,r12
  417c37:	sub    rax,rbp
  417c3a:	cmp    rax,0x2
  417c3e:	jl     41838f <main@@Base+0x112bf>
  417c44:	cmp    BYTE PTR [rbp+0x0],0x20
  417c48:	jg     4183a0 <main@@Base+0x112d0>
  417c4e:	jne    41838f <main@@Base+0x112bf>
  417c54:	cmp    BYTE PTR [r9+0x2],0x20
  417c59:	jle    41838f <main@@Base+0x112bf>
  417c5f:	add    r9,0x2
  417c63:	mov    rbp,r9
  417c66:	cmp    r14,rbp
  417c69:	jne    4183a9 <main@@Base+0x112d9>
  417c6f:	jmp    418be7 <main@@Base+0x11b17>
  417c74:	mov    rdi,r15
  417c77:	mov    rsi,r9
  417c7a:	mov    rdx,r12
  417c7d:	mov    ecx,0x4
  417c82:	call   424090 <flatcc_json_parser_set_error@@Base>
  417c87:	jmp    41839d <main@@Base+0x112cd>
  417c8c:	jne    417ca1 <main@@Base+0x10bd1>
  417c8e:	cmp    BYTE PTR [rsi+0x1],0x20
  417c92:	jle    417ca1 <main@@Base+0x10bd1>
  417c94:	mov    rbp,r9
  417c97:	inc    rsi
  417c9a:	cmp    rsi,r12
  417c9d:	jne    417cb7 <main@@Base+0x10be7>
  417c9f:	jmp    417ce2 <main@@Base+0x10c12>
  417ca1:	mov    rbp,r9
  417ca4:	mov    rdi,r15
  417ca7:	mov    rdx,r12
  417caa:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417caf:	mov    rsi,rax
  417cb2:	cmp    rsi,r12
  417cb5:	je     417ce2 <main@@Base+0x10c12>
  417cb7:	cmp    BYTE PTR [rsi],0x3a
  417cba:	jne    417ce2 <main@@Base+0x10c12>
  417cbc:	lea    rbx,[rsi+0x1]
  417cc0:	mov    rax,r12
  417cc3:	sub    rax,rbx
  417cc6:	cmp    rax,0x2
  417cca:	jl     417cf4 <main@@Base+0x10c24>
  417ccc:	cmp    BYTE PTR [rbx],0x20
  417ccf:	jg     417d05 <main@@Base+0x10c35>
  417cd1:	jne    417cf4 <main@@Base+0x10c24>
  417cd3:	cmp    BYTE PTR [rsi+0x2],0x20
  417cd7:	jle    417cf4 <main@@Base+0x10c24>
  417cd9:	add    rsi,0x2
  417cdd:	mov    rbx,rsi
  417ce0:	jmp    417d05 <main@@Base+0x10c35>
  417ce2:	mov    rdi,r15
  417ce5:	mov    rdx,r12
  417ce8:	mov    ecx,0x4
  417ced:	call   424090 <flatcc_json_parser_set_error@@Base>
  417cf2:	jmp    417d02 <main@@Base+0x10c32>
  417cf4:	mov    rdi,r15
  417cf7:	mov    rsi,rbx
  417cfa:	mov    rdx,r12
  417cfd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417d02:	mov    rbx,rax
  417d05:	mov    r9,rbp
  417d08:	cmp    r9,rbx
  417d0b:	je     417d86 <main@@Base+0x10cb6>
  417d0d:	mov    QWORD PTR [rsp+0x28],0x0
  417d16:	mov    DWORD PTR [rsp+0x4],0x0
  417d1e:	mov    QWORD PTR [rsp+0x20],0x0
  417d27:	cmp    rbx,r12
  417d2a:	je     417da0 <main@@Base+0x10cd0>
  417d2c:	mov    rdi,r15
  417d2f:	mov    rsi,rbx
  417d32:	mov    rdx,r12
  417d35:	lea    rcx,[rsp+0x4]
  417d3a:	lea    r8,[rsp+0x28]
  417d3f:	call   425c50 <flatcc_json_parser_integer@@Base>
  417d44:	cmp    rax,rbx
  417d47:	je     417e8e <main@@Base+0x10dbe>
  417d4d:	mov    rcx,rax
  417d50:	mov    rbp,QWORD PTR [rsp+0x28]
  417d55:	cmp    DWORD PTR [rsp+0x4],0x0
  417d5a:	je     417e9a <main@@Base+0x10dca>
  417d60:	movabs rax,0x8000000000000000
  417d6a:	cmp    rbp,rax
  417d6d:	jbe    417ebe <main@@Base+0x10dee>
  417d73:	mov    rdi,r15
  417d76:	mov    rsi,rcx
  417d79:	mov    rdx,r12
  417d7c:	mov    ecx,0x8
  417d81:	jmp    417ead <main@@Base+0x10ddd>
  417d86:	lea    r14,[r9+0x8]
  417d8a:	mov    rax,r12
  417d8d:	sub    rax,r14
  417d90:	cmp    rax,0x8
  417d94:	jb     417db3 <main@@Base+0x10ce3>
  417d96:	movbe  rcx,QWORD PTR [r14]
  417d9b:	jmp    417e31 <main@@Base+0x10d61>
  417da0:	xor    ebp,ebp
  417da2:	mov    rcx,r12
  417da5:	cmp    rbx,rcx
  417da8:	jne    417eff <main@@Base+0x10e2f>
  417dae:	jmp    417ecb <main@@Base+0x10dfb>
  417db3:	lea    rcx,[rax-0x1]
  417db7:	cmp    rcx,0x6
  417dbb:	ja     418be7 <main@@Base+0x11b17>
  417dc1:	lea    rdx,[rip+0x1c944]        # 43470c <_IO_stdin_used@@Base+0x70c>
  417dc8:	mov    rsi,rdx
  417dcb:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  417dcf:	add    rdx,rsi
  417dd2:	xor    r8d,r8d
  417dd5:	xor    ecx,ecx
  417dd7:	xor    esi,esi
  417dd9:	xor    edi,edi
  417ddb:	xor    ebp,ebp
  417ddd:	xor    ebx,ebx
  417ddf:	jmp    rdx
  417de1:	movsx  r8,BYTE PTR [r9+0xe]
  417de6:	shl    r8,0x8
  417dea:	movsx  rcx,BYTE PTR [r9+0xd]
  417def:	shl    rcx,0x10
  417df3:	or     rcx,r8
  417df6:	movsx  rsi,BYTE PTR [r9+0xc]
  417dfb:	shl    rsi,0x18
  417dff:	or     rsi,rcx
  417e02:	movsx  rdi,BYTE PTR [r9+0xb]
  417e07:	shl    rdi,0x20
  417e0b:	or     rdi,rsi
  417e0e:	movsx  rbp,BYTE PTR [r9+0xa]
  417e13:	shl    rbp,0x28
  417e17:	or     rbp,rdi
  417e1a:	movsx  rbx,BYTE PTR [r9+0x9]
  417e1f:	shl    rbx,0x30
  417e23:	or     rbx,rbp
  417e26:	movzx  ecx,BYTE PTR [r14]
  417e2a:	shl    rcx,0x38
  417e2e:	or     rcx,rbx
  417e31:	movabs rdx,0xff00000000000000
  417e3b:	and    rcx,rdx
  417e3e:	movabs rdx,0x3500000000000000
  417e48:	cmp    rcx,rdx
  417e4b:	jne    418be7 <main@@Base+0x11b17>
  417e51:	cmp    rax,0x2
  417e55:	jl     418be7 <main@@Base+0x11b17>
  417e5b:	mov    rax,QWORD PTR [rsp+0x18]
  417e60:	cmp    DWORD PTR [rax],0x0
  417e63:	movzx  eax,BYTE PTR [r9+0x9]
  417e68:	je     417f37 <main@@Base+0x10e67>
  417e6e:	cmp    al,0x21
  417e70:	jl     417e7a <main@@Base+0x10daa>
  417e72:	cmp    al,0x3a
  417e74:	jne    418be7 <main@@Base+0x11b17>
  417e7a:	add    r9,0x9
  417e7e:	mov    rax,QWORD PTR [rsp+0x18]
  417e83:	mov    DWORD PTR [rax],0x0
  417e89:	jmp    417f43 <main@@Base+0x10e73>
  417e8e:	xor    ebp,ebp
  417e90:	mov    rcx,rbx
  417e93:	cmp    rbx,rcx
  417e96:	jne    417eff <main@@Base+0x10e2f>
  417e98:	jmp    417ecb <main@@Base+0x10dfb>
  417e9a:	test   rbp,rbp
  417e9d:	jns    417ec1 <main@@Base+0x10df1>
  417e9f:	mov    rdi,r15
  417ea2:	mov    rsi,rcx
  417ea5:	mov    rdx,r12
  417ea8:	mov    ecx,0x7
  417ead:	call   424090 <flatcc_json_parser_set_error@@Base>
  417eb2:	mov    rcx,rax
  417eb5:	xor    ebp,ebp
  417eb7:	cmp    rbx,rcx
  417eba:	jne    417eff <main@@Base+0x10e2f>
  417ebc:	jmp    417ecb <main@@Base+0x10dfb>
  417ebe:	neg    rbp
  417ec1:	mov    QWORD PTR [rsp+0x20],rbp
  417ec6:	cmp    rbx,rcx
  417ec9:	jne    417eff <main@@Base+0x10e2f>
  417ecb:	mov    rdi,r15
  417ece:	mov    rsi,rbx
  417ed1:	mov    rdx,r12
  417ed4:	lea    rcx,[rip+0x2b6a5]        # 443580 <__data_start@@Base+0x4d0>
  417edb:	lea    r8,[rsp+0x20]
  417ee0:	call   414d70 <main@@Base+0xdca0>
  417ee5:	mov    rcx,rax
  417ee8:	cmp    rax,rbx
  417eeb:	je     4199b4 <main@@Base+0x128e4>
  417ef1:	cmp    rcx,r12
  417ef4:	je     4199b4 <main@@Base+0x128e4>
  417efa:	mov    rbp,QWORD PTR [rsp+0x20]
  417eff:	test   rbp,rbp
  417f02:	jne    417f0f <main@@Base+0x10e3f>
  417f04:	test   BYTE PTR [r15+0x10],0x2
  417f09:	je     418bfd <main@@Base+0x11b2d>
  417f0f:	mov    rbx,rcx
  417f12:	mov    rdi,QWORD PTR [r15]
  417f15:	mov    edx,0x8
  417f1a:	mov    esi,0x5
  417f1f:	mov    ecx,0x8
  417f24:	call   420a40 <flatcc_builder_table_add@@Base>
  417f29:	test   rax,rax
  417f2c:	jne    4189d0 <main@@Base+0x11900>
  417f32:	jmp    4199c1 <main@@Base+0x128f1>
  417f37:	cmp    al,0x22
  417f39:	jne    418be7 <main@@Base+0x11b17>
  417f3f:	add    r9,0xa
  417f43:	mov    rax,r12
  417f46:	sub    rax,r9
  417f49:	cmp    rax,0x2
  417f4d:	jl     41807b <main@@Base+0x10fab>
  417f53:	cmp    BYTE PTR [r9],0x20
  417f57:	jg     41808c <main@@Base+0x10fbc>
  417f5d:	jne    41807b <main@@Base+0x10fab>
  417f63:	cmp    BYTE PTR [r9+0x1],0x20
  417f68:	jle    41807b <main@@Base+0x10fab>
  417f6e:	inc    r9
  417f71:	cmp    r9,r12
  417f74:	jne    418091 <main@@Base+0x10fc1>
  417f7a:	jmp    4180df <main@@Base+0x1100f>
  417f7f:	jne    417f94 <main@@Base+0x10ec4>
  417f81:	cmp    BYTE PTR [rsi+0x1],0x20
  417f85:	jle    417f94 <main@@Base+0x10ec4>
  417f87:	mov    rbp,r9
  417f8a:	inc    rsi
  417f8d:	cmp    rsi,r12
  417f90:	jne    417faa <main@@Base+0x10eda>
  417f92:	jmp    417fe8 <main@@Base+0x10f18>
  417f94:	mov    rbp,r9
  417f97:	mov    rdi,r15
  417f9a:	mov    rdx,r12
  417f9d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  417fa2:	mov    rsi,rax
  417fa5:	cmp    rsi,r12
  417fa8:	je     417fe8 <main@@Base+0x10f18>
  417faa:	cmp    BYTE PTR [rsi],0x3a
  417fad:	jne    417fe8 <main@@Base+0x10f18>
  417faf:	lea    rax,[rsi+0x1]
  417fb3:	mov    rcx,r12
  417fb6:	sub    rcx,rax
  417fb9:	cmp    rcx,0x2
  417fbd:	jl     4180f7 <main@@Base+0x11027>
  417fc3:	cmp    BYTE PTR [rax],0x20
  417fc6:	jg     418105 <main@@Base+0x11035>
  417fcc:	jne    4180f7 <main@@Base+0x11027>
  417fd2:	cmp    BYTE PTR [rsi+0x2],0x20
  417fd6:	jle    4180f7 <main@@Base+0x11027>
  417fdc:	add    rsi,0x2
  417fe0:	mov    rax,rsi
  417fe3:	jmp    418105 <main@@Base+0x11035>
  417fe8:	mov    rdi,r15
  417feb:	mov    rdx,r12
  417fee:	mov    ecx,0x4
  417ff3:	call   424090 <flatcc_json_parser_set_error@@Base>
  417ff8:	jmp    418105 <main@@Base+0x11035>
  417ffd:	jne    418012 <main@@Base+0x10f42>
  417fff:	cmp    BYTE PTR [rsi+0x1],0x20
  418003:	jle    418012 <main@@Base+0x10f42>
  418005:	mov    rbp,r9
  418008:	inc    rsi
  41800b:	cmp    rsi,r12
  41800e:	jne    418028 <main@@Base+0x10f58>
  418010:	jmp    418066 <main@@Base+0x10f96>
  418012:	mov    rbp,r9
  418015:	mov    rdi,r15
  418018:	mov    rdx,r12
  41801b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418020:	mov    rsi,rax
  418023:	cmp    rsi,r12
  418026:	je     418066 <main@@Base+0x10f96>
  418028:	cmp    BYTE PTR [rsi],0x3a
  41802b:	jne    418066 <main@@Base+0x10f96>
  41802d:	lea    rax,[rsi+0x1]
  418031:	mov    rcx,r12
  418034:	sub    rcx,rax
  418037:	cmp    rcx,0x2
  41803b:	jl     4182a3 <main@@Base+0x111d3>
  418041:	cmp    BYTE PTR [rax],0x20
  418044:	jg     4182b1 <main@@Base+0x111e1>
  41804a:	jne    4182a3 <main@@Base+0x111d3>
  418050:	cmp    BYTE PTR [rsi+0x2],0x20
  418054:	jle    4182a3 <main@@Base+0x111d3>
  41805a:	add    rsi,0x2
  41805e:	mov    rax,rsi
  418061:	jmp    4182b1 <main@@Base+0x111e1>
  418066:	mov    rdi,r15
  418069:	mov    rdx,r12
  41806c:	mov    ecx,0x4
  418071:	call   424090 <flatcc_json_parser_set_error@@Base>
  418076:	jmp    4182b1 <main@@Base+0x111e1>
  41807b:	mov    rdi,r15
  41807e:	mov    rsi,r9
  418081:	mov    rdx,r12
  418084:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418089:	mov    r9,rax
  41808c:	cmp    r9,r12
  41808f:	je     4180df <main@@Base+0x1100f>
  418091:	cmp    BYTE PTR [r9],0x3a
  418095:	jne    4180df <main@@Base+0x1100f>
  418097:	lea    rbp,[r9+0x1]
  41809b:	mov    rax,r12
  41809e:	sub    rax,rbp
  4180a1:	cmp    rax,0x2
  4180a5:	jl     4185a2 <main@@Base+0x114d2>
  4180ab:	cmp    BYTE PTR [rbp+0x0],0x20
  4180af:	jg     4180cc <main@@Base+0x10ffc>
  4180b1:	jne    4185a2 <main@@Base+0x114d2>
  4180b7:	mov    rcx,r9
  4180ba:	cmp    BYTE PTR [r9+0x2],0x20
  4180bf:	jle    4185a2 <main@@Base+0x114d2>
  4180c5:	mov    rbp,rcx
  4180c8:	add    rbp,0x2
  4180cc:	mov    r15,QWORD PTR [rsp+0x8]
  4180d1:	cmp    r14,rbp
  4180d4:	jne    4185c1 <main@@Base+0x114f1>
  4180da:	jmp    418be7 <main@@Base+0x11b17>
  4180df:	mov    rdi,r15
  4180e2:	mov    rsi,r9
  4180e5:	mov    rdx,r12
  4180e8:	mov    ecx,0x4
  4180ed:	call   424090 <flatcc_json_parser_set_error@@Base>
  4180f2:	jmp    4185b5 <main@@Base+0x114e5>
  4180f7:	mov    rdi,r15
  4180fa:	mov    rsi,rax
  4180fd:	mov    rdx,r12
  418100:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418105:	movabs rsi,0x6262626200000000
  41810f:	mov    r9,rbp
  418112:	cmp    r9,rax
  418115:	je     418142 <main@@Base+0x11072>
  418117:	mov    rdi,r15
  41811a:	mov    rsi,rax
  41811d:	mov    rdx,r12
  418120:	lea    rcx,[rsp+0x34]
  418125:	call   426120 <flatcc_json_parser_build_string@@Base>
  41812a:	mov    rbx,rax
  41812d:	cmp    DWORD PTR [rsp+0x34],0x0
  418132:	je     4199c1 <main@@Base+0x128f1>
  418138:	mov    rdi,QWORD PTR [r15]
  41813b:	xor    esi,esi
  41813d:	jmp    4182e2 <main@@Base+0x11212>
  418142:	lea    rax,[rsi+0x31323334]
  418149:	cmp    rbx,rax
  41814c:	jne    41818f <main@@Base+0x110bf>
  41814e:	mov    rbx,r9
  418151:	cmp    r14,0x9
  418155:	mov    r14,QWORD PTR [rsp+0x10]
  41815a:	jl     418662 <main@@Base+0x11592>
  418160:	mov    rax,QWORD PTR [rsp+0x18]
  418165:	cmp    DWORD PTR [rax],0x0
  418168:	movzx  eax,BYTE PTR [r9+0x8]
  41816d:	je     4181d6 <main@@Base+0x11106>
  41816f:	cmp    al,0x21
  418171:	jl     41817e <main@@Base+0x110ae>
  418173:	mov    rbx,r9
  418176:	cmp    al,0x3a
  418178:	jne    418662 <main@@Base+0x11592>
  41817e:	lea    rsi,[r9+0x8]
  418182:	mov    rax,QWORD PTR [rsp+0x18]
  418187:	mov    DWORD PTR [rax],0x0
  41818d:	jmp    4181e5 <main@@Base+0x11115>
  41818f:	cmp    r13,rsi
  418192:	jne    41834b <main@@Base+0x1127b>
  418198:	mov    rax,r9
  41819b:	cmp    r14,0x5
  41819f:	jl     418b03 <main@@Base+0x11a33>
  4181a5:	mov    rax,QWORD PTR [rsp+0x18]
  4181aa:	cmp    DWORD PTR [rax],0x0
  4181ad:	movzx  ecx,BYTE PTR [r9+0x4]
  4181b2:	je     41820f <main@@Base+0x1113f>
  4181b4:	cmp    cl,0x21
  4181b7:	jl     4181c5 <main@@Base+0x110f5>
  4181b9:	mov    rax,r9
  4181bc:	cmp    cl,0x3a
  4181bf:	jne    418b03 <main@@Base+0x11a33>
  4181c5:	lea    rsi,[r9+0x4]
  4181c9:	mov    rax,QWORD PTR [rsp+0x18]
  4181ce:	mov    DWORD PTR [rax],0x0
  4181d4:	jmp    41821f <main@@Base+0x1114f>
  4181d6:	mov    rbx,r9
  4181d9:	cmp    al,0x22
  4181db:	jne    418662 <main@@Base+0x11592>
  4181e1:	lea    rsi,[r9+0x9]
  4181e5:	mov    rax,r12
  4181e8:	sub    rax,rsi
  4181eb:	cmp    rax,0x2
  4181ef:	jl     418425 <main@@Base+0x11355>
  4181f5:	cmp    BYTE PTR [rsi],0x20
  4181f8:	jle    418410 <main@@Base+0x11340>
  4181fe:	mov    rbp,r9
  418201:	cmp    rsi,r12
  418204:	jne    41843b <main@@Base+0x1136b>
  41820a:	jmp    41846c <main@@Base+0x1139c>
  41820f:	mov    rax,r9
  418212:	cmp    cl,0x22
  418215:	jne    418b03 <main@@Base+0x11a33>
  41821b:	lea    rsi,[r9+0x5]
  41821f:	mov    rbx,r9
  418222:	mov    rax,r12
  418225:	sub    rax,rsi
  418228:	cmp    rax,0x2
  41822c:	jl     41824a <main@@Base+0x1117a>
  41822e:	cmp    BYTE PTR [rsi],0x20
  418231:	jg     418258 <main@@Base+0x11188>
  418233:	mov    r15,QWORD PTR [rsp+0x8]
  418238:	jne    41824a <main@@Base+0x1117a>
  41823a:	cmp    BYTE PTR [rsi+0x1],0x20
  41823e:	jle    41824a <main@@Base+0x1117a>
  418240:	inc    rsi
  418243:	cmp    rsi,r12
  418246:	jne    41825d <main@@Base+0x1118d>
  418248:	jmp    418289 <main@@Base+0x111b9>
  41824a:	mov    rdi,r15
  41824d:	mov    rdx,r12
  418250:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418255:	mov    rsi,rax
  418258:	cmp    rsi,r12
  41825b:	je     418289 <main@@Base+0x111b9>
  41825d:	cmp    BYTE PTR [rsi],0x3a
  418260:	jne    418289 <main@@Base+0x111b9>
  418262:	lea    rax,[rsi+0x1]
  418266:	mov    rcx,r12
  418269:	sub    rcx,rax
  41826c:	cmp    rcx,0x2
  418270:	jl     418aed <main@@Base+0x11a1d>
  418276:	cmp    BYTE PTR [rax],0x20
  418279:	jle    418ad7 <main@@Base+0x11a07>
  41827f:	mov    r15,QWORD PTR [rsp+0x8]
  418284:	jmp    418b00 <main@@Base+0x11a30>
  418289:	mov    r15,QWORD PTR [rsp+0x8]
  41828e:	mov    rdi,r15
  418291:	mov    rdx,r12
  418294:	mov    ecx,0x4
  418299:	call   424090 <flatcc_json_parser_set_error@@Base>
  41829e:	jmp    418b00 <main@@Base+0x11a30>
  4182a3:	mov    rdi,r15
  4182a6:	mov    rsi,rax
  4182a9:	mov    rdx,r12
  4182ac:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4182b1:	mov    r9,rbp
  4182b4:	cmp    r9,rax
  4182b7:	je     418300 <main@@Base+0x11230>
  4182b9:	mov    rdi,r15
  4182bc:	mov    rsi,rax
  4182bf:	mov    rdx,r12
  4182c2:	lea    rcx,[rsp+0x34]
  4182c7:	call   426120 <flatcc_json_parser_build_string@@Base>
  4182cc:	mov    rbx,rax
  4182cf:	cmp    DWORD PTR [rsp+0x34],0x0
  4182d4:	je     4199c1 <main@@Base+0x128f1>
  4182da:	mov    rdi,QWORD PTR [r15]
  4182dd:	mov    esi,0x4
  4182e2:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  4182e7:	test   rax,rax
  4182ea:	mov    r14,QWORD PTR [rsp+0x10]
  4182ef:	je     4199c1 <main@@Base+0x128f1>
  4182f5:	mov    ecx,DWORD PTR [rsp+0x34]
  4182f9:	mov    DWORD PTR [rax],ecx
  4182fb:	jmp    4189d3 <main@@Base+0x11903>
  418300:	movabs rax,0x6464646431323334
  41830a:	cmp    rbx,rax
  41830d:	jne    41834b <main@@Base+0x1127b>
  41830f:	mov    rbx,r9
  418312:	cmp    r14,0x9
  418316:	jl     4187a1 <main@@Base+0x116d1>
  41831c:	mov    rax,QWORD PTR [rsp+0x18]
  418321:	cmp    DWORD PTR [rax],0x0
  418324:	movzx  eax,BYTE PTR [r9+0x8]
  418329:	je     418356 <main@@Base+0x11286>
  41832b:	cmp    al,0x21
  41832d:	jl     41833a <main@@Base+0x1126a>
  41832f:	mov    rbx,r9
  418332:	cmp    al,0x3a
  418334:	jne    4187a1 <main@@Base+0x116d1>
  41833a:	lea    rsi,[r9+0x8]
  41833e:	mov    rax,QWORD PTR [rsp+0x18]
  418343:	mov    DWORD PTR [rax],0x0
  418349:	jmp    418365 <main@@Base+0x11295>
  41834b:	mov    rdi,r15
  41834e:	mov    rsi,r9
  418351:	jmp    418bed <main@@Base+0x11b1d>
  418356:	mov    rbx,r9
  418359:	cmp    al,0x22
  41835b:	jne    4187a1 <main@@Base+0x116d1>
  418361:	lea    rsi,[r9+0x9]
  418365:	mov    rax,r12
  418368:	sub    rax,rsi
  41836b:	cmp    rax,0x2
  41836f:	jl     418496 <main@@Base+0x113c6>
  418375:	cmp    BYTE PTR [rsi],0x20
  418378:	jle    418481 <main@@Base+0x113b1>
  41837e:	mov    rbp,r9
  418381:	cmp    rsi,r12
  418384:	jne    4184ac <main@@Base+0x113dc>
  41838a:	jmp    4184d8 <main@@Base+0x11408>
  41838f:	mov    rdi,r15
  418392:	mov    rsi,rbp
  418395:	mov    rdx,r12
  418398:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41839d:	mov    rbp,rax
  4183a0:	cmp    r14,rbp
  4183a3:	je     418be7 <main@@Base+0x11b17>
  4183a9:	mov    QWORD PTR [rsp+0x28],0x0
  4183b2:	mov    DWORD PTR [rsp+0x20],0x0
  4183ba:	mov    DWORD PTR [rsp+0x4],0x0
  4183c2:	xor    ebx,ebx
  4183c4:	cmp    rbp,r12
  4183c7:	je     418408 <main@@Base+0x11338>
  4183c9:	mov    rdi,r15
  4183cc:	mov    rsi,rbp
  4183cf:	mov    rdx,r12
  4183d2:	lea    rcx,[rsp+0x20]
  4183d7:	lea    r8,[rsp+0x28]
  4183dc:	call   425c50 <flatcc_json_parser_integer@@Base>
  4183e1:	cmp    rax,rbp
  4183e4:	je     4184ed <main@@Base+0x1141d>
  4183ea:	cmp    DWORD PTR [rsp+0x20],0x0
  4183ef:	je     4184f2 <main@@Base+0x11422>
  4183f5:	mov    rdi,r15
  4183f8:	mov    rsi,rax
  4183fb:	mov    rdx,r12
  4183fe:	mov    ecx,0x8
  418403:	jmp    418517 <main@@Base+0x11447>
  418408:	mov    rcx,r12
  41840b:	jmp    41851f <main@@Base+0x1144f>
  418410:	jne    418425 <main@@Base+0x11355>
  418412:	cmp    BYTE PTR [rsi+0x1],0x20
  418416:	jle    418425 <main@@Base+0x11355>
  418418:	mov    rbp,r9
  41841b:	inc    rsi
  41841e:	cmp    rsi,r12
  418421:	jne    41843b <main@@Base+0x1136b>
  418423:	jmp    41846c <main@@Base+0x1139c>
  418425:	mov    rbp,r9
  418428:	mov    rdi,r15
  41842b:	mov    rdx,r12
  41842e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418433:	mov    rsi,rax
  418436:	cmp    rsi,r12
  418439:	je     41846c <main@@Base+0x1139c>
  41843b:	cmp    BYTE PTR [rsi],0x3a
  41843e:	jne    41846c <main@@Base+0x1139c>
  418440:	lea    rbx,[rsi+0x1]
  418444:	mov    rax,r12
  418447:	sub    rax,rbx
  41844a:	cmp    rax,0x2
  41844e:	jl     41864e <main@@Base+0x1157e>
  418454:	cmp    BYTE PTR [rbx],0x20
  418457:	jle    418633 <main@@Base+0x11563>
  41845d:	mov    r15,QWORD PTR [rsp+0x8]
  418462:	mov    r14,QWORD PTR [rsp+0x10]
  418467:	jmp    41865f <main@@Base+0x1158f>
  41846c:	mov    rdi,r15
  41846f:	mov    rdx,r12
  418472:	mov    ecx,0x4
  418477:	call   424090 <flatcc_json_parser_set_error@@Base>
  41847c:	jmp    41865c <main@@Base+0x1158c>
  418481:	jne    418496 <main@@Base+0x113c6>
  418483:	cmp    BYTE PTR [rsi+0x1],0x20
  418487:	jle    418496 <main@@Base+0x113c6>
  418489:	mov    rbp,r9
  41848c:	inc    rsi
  41848f:	cmp    rsi,r12
  418492:	jne    4184ac <main@@Base+0x113dc>
  418494:	jmp    4184d8 <main@@Base+0x11408>
  418496:	mov    rbp,r9
  418499:	mov    rdi,r15
  41849c:	mov    rdx,r12
  41849f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4184a4:	mov    rsi,rax
  4184a7:	cmp    rsi,r12
  4184aa:	je     4184d8 <main@@Base+0x11408>
  4184ac:	cmp    BYTE PTR [rsi],0x3a
  4184af:	jne    4184d8 <main@@Base+0x11408>
  4184b1:	lea    rbx,[rsi+0x1]
  4184b5:	mov    rax,r12
  4184b8:	sub    rax,rbx
  4184bb:	cmp    rax,0x2
  4184bf:	jl     41878d <main@@Base+0x116bd>
  4184c5:	cmp    BYTE PTR [rbx],0x20
  4184c8:	jle    418777 <main@@Base+0x116a7>
  4184ce:	mov    r15,QWORD PTR [rsp+0x8]
  4184d3:	jmp    41879e <main@@Base+0x116ce>
  4184d8:	mov    rdi,r15
  4184db:	mov    rdx,r12
  4184de:	mov    ecx,0x4
  4184e3:	call   424090 <flatcc_json_parser_set_error@@Base>
  4184e8:	jmp    41879b <main@@Base+0x116cb>
  4184ed:	mov    rcx,rbp
  4184f0:	jmp    41851f <main@@Base+0x1144f>
  4184f2:	mov    rsi,rax
  4184f5:	mov    rax,QWORD PTR [rsp+0x28]
  4184fa:	mov    rcx,rax
  4184fd:	shr    rcx,0x20
  418501:	je     418a8a <main@@Base+0x119ba>
  418507:	mov    r15,QWORD PTR [rsp+0x8]
  41850c:	mov    rdi,r15
  41850f:	mov    rdx,r12
  418512:	mov    ecx,0x7
  418517:	call   424090 <flatcc_json_parser_set_error@@Base>
  41851c:	mov    rcx,rax
  41851f:	mov    r14,QWORD PTR [rsp+0x10]
  418524:	cmp    rbp,rcx
  418527:	jne    418566 <main@@Base+0x11496>
  418529:	mov    rdi,r15
  41852c:	mov    rsi,rbp
  41852f:	mov    rdx,r12
  418532:	lea    rcx,[rip+0x2b007]        # 443540 <__data_start@@Base+0x490>
  418539:	lea    r8,[rsp+0x4]
  41853e:	call   414f50 <main@@Base+0xde80>
  418543:	mov    rcx,rax
  418546:	cmp    rax,rbp
  418549:	je     4199dc <main@@Base+0x1290c>
  41854f:	cmp    rcx,r12
  418552:	je     4199dc <main@@Base+0x1290c>
  418558:	mov    ebx,DWORD PTR [rsp+0x4]
  41855c:	mov    r15,QWORD PTR [rsp+0x8]
  418561:	mov    r14,QWORD PTR [rsp+0x10]
  418566:	test   ebx,ebx
  418568:	jne    418575 <main@@Base+0x114a5>
  41856a:	test   BYTE PTR [r15+0x10],0x2
  41856f:	je     418bfd <main@@Base+0x11b2d>
  418575:	mov    rbp,rcx
  418578:	mov    rdi,QWORD PTR [r15]
  41857b:	mov    edx,0x4
  418580:	mov    esi,0x1
  418585:	mov    ecx,0x4
  41858a:	call   420a40 <flatcc_builder_table_add@@Base>
  41858f:	test   rax,rax
  418592:	je     4199df <main@@Base+0x1290f>
  418598:	mov    DWORD PTR [rax],ebx
  41859a:	mov    rcx,rbp
  41859d:	jmp    418bfd <main@@Base+0x11b2d>
  4185a2:	mov    r15,QWORD PTR [rsp+0x8]
  4185a7:	mov    rdi,r15
  4185aa:	mov    rsi,rbp
  4185ad:	mov    rdx,r12
  4185b0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4185b5:	mov    rbp,rax
  4185b8:	cmp    r14,rbp
  4185bb:	je     418be7 <main@@Base+0x11b17>
  4185c1:	mov    QWORD PTR [rsp+0x28],0x0
  4185ca:	mov    DWORD PTR [rsp+0x20],0x0
  4185d2:	mov    DWORD PTR [rsp+0x4],0x0
  4185da:	xor    r14d,r14d
  4185dd:	cmp    rbp,r12
  4185e0:	je     41862b <main@@Base+0x1155b>
  4185e2:	mov    rdi,r15
  4185e5:	mov    rsi,rbp
  4185e8:	mov    rdx,r12
  4185eb:	lea    rcx,[rsp+0x20]
  4185f0:	lea    r8,[rsp+0x28]
  4185f5:	call   425c50 <flatcc_json_parser_integer@@Base>
  4185fa:	cmp    rax,rbp
  4185fd:	je     418a7d <main@@Base+0x119ad>
  418603:	mov    rsi,rax
  418606:	cmp    DWORD PTR [rsp+0x20],0x0
  41860b:	je     418aab <main@@Base+0x119db>
  418611:	mov    r15,QWORD PTR [rsp+0x8]
  418616:	mov    rdi,r15
  418619:	mov    rdx,r12
  41861c:	mov    ecx,0x8
  418621:	call   424090 <flatcc_json_parser_set_error@@Base>
  418626:	jmp    418ccc <main@@Base+0x11bfc>
  41862b:	mov    rax,r12
  41862e:	jmp    418ccc <main@@Base+0x11bfc>
  418633:	mov    r15,QWORD PTR [rsp+0x8]
  418638:	mov    r14,QWORD PTR [rsp+0x10]
  41863d:	jne    41864e <main@@Base+0x1157e>
  41863f:	cmp    BYTE PTR [rsi+0x2],0x20
  418643:	jle    41864e <main@@Base+0x1157e>
  418645:	add    rsi,0x2
  418649:	mov    rbx,rsi
  41864c:	jmp    41865f <main@@Base+0x1158f>
  41864e:	mov    rdi,r15
  418651:	mov    rsi,rbx
  418654:	mov    rdx,r12
  418657:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41865c:	mov    rbx,rax
  41865f:	mov    r9,rbp
  418662:	cmp    r9,rbx
  418665:	je     418b49 <main@@Base+0x11a79>
  41866b:	mov    QWORD PTR [rsp+0x28],0x0
  418674:	mov    DWORD PTR [rsp+0x4],0x0
  41867c:	mov    QWORD PTR [rsp+0x20],0x0
  418685:	cmp    rbx,r12
  418688:	je     4186d5 <main@@Base+0x11605>
  41868a:	mov    rdi,r15
  41868d:	mov    rsi,rbx
  418690:	mov    rdx,r12
  418693:	lea    rcx,[rsp+0x4]
  418698:	lea    r8,[rsp+0x28]
  41869d:	call   425c50 <flatcc_json_parser_integer@@Base>
  4186a2:	cmp    rax,rbx
  4186a5:	je     4186e1 <main@@Base+0x11611>
  4186a7:	mov    rcx,rax
  4186aa:	mov    rbp,QWORD PTR [rsp+0x28]
  4186af:	cmp    DWORD PTR [rsp+0x4],0x0
  4186b4:	je     4186ed <main@@Base+0x1161d>
  4186b6:	movabs rax,0x8000000000000000
  4186c0:	cmp    rbp,rax
  4186c3:	jbe    418711 <main@@Base+0x11641>
  4186c5:	mov    rdi,r15
  4186c8:	mov    rsi,rcx
  4186cb:	mov    rdx,r12
  4186ce:	mov    ecx,0x8
  4186d3:	jmp    418700 <main@@Base+0x11630>
  4186d5:	xor    ebp,ebp
  4186d7:	mov    rcx,r12
  4186da:	cmp    rbx,rcx
  4186dd:	jne    418752 <main@@Base+0x11682>
  4186df:	jmp    41871e <main@@Base+0x1164e>
  4186e1:	xor    ebp,ebp
  4186e3:	mov    rcx,rbx
  4186e6:	cmp    rbx,rcx
  4186e9:	jne    418752 <main@@Base+0x11682>
  4186eb:	jmp    41871e <main@@Base+0x1164e>
  4186ed:	test   rbp,rbp
  4186f0:	jns    418714 <main@@Base+0x11644>
  4186f2:	mov    rdi,r15
  4186f5:	mov    rsi,rcx
  4186f8:	mov    rdx,r12
  4186fb:	mov    ecx,0x7
  418700:	call   424090 <flatcc_json_parser_set_error@@Base>
  418705:	mov    rcx,rax
  418708:	xor    ebp,ebp
  41870a:	cmp    rbx,rcx
  41870d:	jne    418752 <main@@Base+0x11682>
  41870f:	jmp    41871e <main@@Base+0x1164e>
  418711:	neg    rbp
  418714:	mov    QWORD PTR [rsp+0x20],rbp
  418719:	cmp    rbx,rcx
  41871c:	jne    418752 <main@@Base+0x11682>
  41871e:	mov    rdi,r15
  418721:	mov    rsi,rbx
  418724:	mov    rdx,r12
  418727:	lea    rcx,[rip+0x2ae32]        # 443560 <__data_start@@Base+0x4b0>
  41872e:	lea    r8,[rsp+0x20]
  418733:	call   414d70 <main@@Base+0xdca0>
  418738:	mov    rcx,rax
  41873b:	cmp    rax,rbx
  41873e:	je     4199b9 <main@@Base+0x128e9>
  418744:	cmp    rcx,r12
  418747:	je     4199b9 <main@@Base+0x128e9>
  41874d:	mov    rbp,QWORD PTR [rsp+0x20]
  418752:	test   rbp,rbp
  418755:	jne    418762 <main@@Base+0x11692>
  418757:	test   BYTE PTR [r15+0x10],0x2
  41875c:	je     418bfd <main@@Base+0x11b2d>
  418762:	mov    rbx,rcx
  418765:	mov    rdi,QWORD PTR [r15]
  418768:	mov    edx,0x8
  41876d:	mov    esi,0x3
  418772:	jmp    4189bd <main@@Base+0x118ed>
  418777:	mov    r15,QWORD PTR [rsp+0x8]
  41877c:	jne    41878d <main@@Base+0x116bd>
  41877e:	cmp    BYTE PTR [rsi+0x2],0x20
  418782:	jle    41878d <main@@Base+0x116bd>
  418784:	add    rsi,0x2
  418788:	mov    rbx,rsi
  41878b:	jmp    41879e <main@@Base+0x116ce>
  41878d:	mov    rdi,r15
  418790:	mov    rsi,rbx
  418793:	mov    rdx,r12
  418796:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41879b:	mov    rbx,rax
  41879e:	mov    r9,rbp
  4187a1:	cmp    r9,rbx
  4187a4:	mov    r14,QWORD PTR [rsp+0x10]
  4187a9:	je     418824 <main@@Base+0x11754>
  4187ab:	mov    QWORD PTR [rsp+0x28],0x0
  4187b4:	mov    DWORD PTR [rsp+0x4],0x0
  4187bc:	mov    QWORD PTR [rsp+0x20],0x0
  4187c5:	cmp    rbx,r12
  4187c8:	je     41883e <main@@Base+0x1176e>
  4187ca:	mov    rdi,r15
  4187cd:	mov    rsi,rbx
  4187d0:	mov    rdx,r12
  4187d3:	lea    rcx,[rsp+0x4]
  4187d8:	lea    r8,[rsp+0x28]
  4187dd:	call   425c50 <flatcc_json_parser_integer@@Base>
  4187e2:	cmp    rax,rbx
  4187e5:	je     41892c <main@@Base+0x1185c>
  4187eb:	mov    rcx,rax
  4187ee:	mov    rbp,QWORD PTR [rsp+0x28]
  4187f3:	cmp    DWORD PTR [rsp+0x4],0x0
  4187f8:	je     418938 <main@@Base+0x11868>
  4187fe:	movabs rax,0x8000000000000000
  418808:	cmp    rbp,rax
  41880b:	jbe    41895c <main@@Base+0x1188c>
  418811:	mov    rdi,r15
  418814:	mov    rsi,rcx
  418817:	mov    rdx,r12
  41881a:	mov    ecx,0x8
  41881f:	jmp    41894b <main@@Base+0x1187b>
  418824:	lea    r14,[r9+0x8]
  418828:	mov    rax,r12
  41882b:	sub    rax,r14
  41882e:	cmp    rax,0x8
  418832:	jb     418851 <main@@Base+0x11781>
  418834:	movbe  rcx,QWORD PTR [r14]
  418839:	jmp    4188cf <main@@Base+0x117ff>
  41883e:	xor    ebp,ebp
  418840:	mov    rcx,r12
  418843:	cmp    rbx,rcx
  418846:	jne    41899d <main@@Base+0x118cd>
  41884c:	jmp    418969 <main@@Base+0x11899>
  418851:	lea    rcx,[rax-0x1]
  418855:	cmp    rcx,0x6
  418859:	ja     418be7 <main@@Base+0x11b17>
  41885f:	lea    rdx,[rip+0x1be8a]        # 4346f0 <_IO_stdin_used@@Base+0x6f0>
  418866:	mov    rsi,rdx
  418869:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41886d:	add    rdx,rsi
  418870:	xor    r8d,r8d
  418873:	xor    ecx,ecx
  418875:	xor    esi,esi
  418877:	xor    edi,edi
  418879:	xor    ebp,ebp
  41887b:	xor    ebx,ebx
  41887d:	jmp    rdx
  41887f:	movsx  r8,BYTE PTR [r9+0xe]
  418884:	shl    r8,0x8
  418888:	movsx  rcx,BYTE PTR [r9+0xd]
  41888d:	shl    rcx,0x10
  418891:	or     rcx,r8
  418894:	movsx  rsi,BYTE PTR [r9+0xc]
  418899:	shl    rsi,0x18
  41889d:	or     rsi,rcx
  4188a0:	movsx  rdi,BYTE PTR [r9+0xb]
  4188a5:	shl    rdi,0x20
  4188a9:	or     rdi,rsi
  4188ac:	movsx  rbp,BYTE PTR [r9+0xa]
  4188b1:	shl    rbp,0x28
  4188b5:	or     rbp,rdi
  4188b8:	movsx  rbx,BYTE PTR [r9+0x9]
  4188bd:	shl    rbx,0x30
  4188c1:	or     rbx,rbp
  4188c4:	movzx  ecx,BYTE PTR [r14]
  4188c8:	shl    rcx,0x38
  4188cc:	or     rcx,rbx
  4188cf:	movabs rdx,0xff00000000000000
  4188d9:	and    rcx,rdx
  4188dc:	movabs rdx,0x3500000000000000
  4188e6:	cmp    rcx,rdx
  4188e9:	jne    418be7 <main@@Base+0x11b17>
  4188ef:	cmp    rax,0x2
  4188f3:	jl     418be7 <main@@Base+0x11b17>
  4188f9:	mov    rax,QWORD PTR [rsp+0x18]
  4188fe:	cmp    DWORD PTR [rax],0x0
  418901:	movzx  eax,BYTE PTR [r9+0x9]
  418906:	je     4189db <main@@Base+0x1190b>
  41890c:	cmp    al,0x21
  41890e:	jl     418918 <main@@Base+0x11848>
  418910:	cmp    al,0x3a
  418912:	jne    418be7 <main@@Base+0x11b17>
  418918:	add    r9,0x9
  41891c:	mov    rax,QWORD PTR [rsp+0x18]
  418921:	mov    DWORD PTR [rax],0x0
  418927:	jmp    4189e7 <main@@Base+0x11917>
  41892c:	xor    ebp,ebp
  41892e:	mov    rcx,rbx
  418931:	cmp    rbx,rcx
  418934:	jne    41899d <main@@Base+0x118cd>
  418936:	jmp    418969 <main@@Base+0x11899>
  418938:	test   rbp,rbp
  41893b:	jns    41895f <main@@Base+0x1188f>
  41893d:	mov    rdi,r15
  418940:	mov    rsi,rcx
  418943:	mov    rdx,r12
  418946:	mov    ecx,0x7
  41894b:	call   424090 <flatcc_json_parser_set_error@@Base>
  418950:	mov    rcx,rax
  418953:	xor    ebp,ebp
  418955:	cmp    rbx,rcx
  418958:	jne    41899d <main@@Base+0x118cd>
  41895a:	jmp    418969 <main@@Base+0x11899>
  41895c:	neg    rbp
  41895f:	mov    QWORD PTR [rsp+0x20],rbp
  418964:	cmp    rbx,rcx
  418967:	jne    41899d <main@@Base+0x118cd>
  418969:	mov    rdi,r15
  41896c:	mov    rsi,rbx
  41896f:	mov    rdx,r12
  418972:	lea    rcx,[rip+0x2ac47]        # 4435c0 <__data_start@@Base+0x510>
  418979:	lea    r8,[rsp+0x20]
  41897e:	call   414d70 <main@@Base+0xdca0>
  418983:	mov    rcx,rax
  418986:	cmp    rax,rbx
  418989:	je     4199b9 <main@@Base+0x128e9>
  41898f:	cmp    rcx,r12
  418992:	je     4199b9 <main@@Base+0x128e9>
  418998:	mov    rbp,QWORD PTR [rsp+0x20]
  41899d:	test   rbp,rbp
  4189a0:	jne    4189ad <main@@Base+0x118dd>
  4189a2:	test   BYTE PTR [r15+0x10],0x2
  4189a7:	je     418bfd <main@@Base+0x11b2d>
  4189ad:	mov    rbx,rcx
  4189b0:	mov    rdi,QWORD PTR [r15]
  4189b3:	mov    edx,0x8
  4189b8:	mov    esi,0x7
  4189bd:	mov    ecx,0x8
  4189c2:	call   420a40 <flatcc_builder_table_add@@Base>
  4189c7:	test   rax,rax
  4189ca:	je     4199bc <main@@Base+0x128ec>
  4189d0:	mov    QWORD PTR [rax],rbp
  4189d3:	mov    rcx,rbx
  4189d6:	jmp    418bfd <main@@Base+0x11b2d>
  4189db:	cmp    al,0x22
  4189dd:	jne    418be7 <main@@Base+0x11b17>
  4189e3:	add    r9,0xa
  4189e7:	mov    rax,r12
  4189ea:	mov    rsi,r9
  4189ed:	sub    rax,r9
  4189f0:	cmp    rax,0x2
  4189f4:	jl     418a0e <main@@Base+0x1193e>
  4189f6:	cmp    BYTE PTR [rsi],0x20
  4189f9:	jg     418a1e <main@@Base+0x1194e>
  4189fb:	mov    rsi,r9
  4189fe:	jne    418a0e <main@@Base+0x1193e>
  418a00:	cmp    BYTE PTR [rsi+0x1],0x20
  418a04:	jle    418a0e <main@@Base+0x1193e>
  418a06:	inc    rsi
  418a09:	mov    r9,rsi
  418a0c:	jmp    418a1e <main@@Base+0x1194e>
  418a0e:	mov    rdi,QWORD PTR [rsp+0x8]
  418a13:	mov    rdx,r12
  418a16:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418a1b:	mov    r9,rax
  418a1e:	mov    rsi,r9
  418a21:	cmp    r9,r12
  418a24:	je     418a66 <main@@Base+0x11996>
  418a26:	cmp    BYTE PTR [rsi],0x3a
  418a29:	jne    418a66 <main@@Base+0x11996>
  418a2b:	lea    rbp,[rsi+0x1]
  418a2f:	mov    rax,r12
  418a32:	sub    rax,rbp
  418a35:	cmp    rax,0x2
  418a39:	jl     418b5f <main@@Base+0x11a8f>
  418a3f:	cmp    BYTE PTR [rbp+0x0],0x20
  418a43:	jg     418b72 <main@@Base+0x11aa2>
  418a49:	jne    418b5f <main@@Base+0x11a8f>
  418a4f:	cmp    BYTE PTR [r9+0x2],0x20
  418a54:	jle    418b5f <main@@Base+0x11a8f>
  418a5a:	add    r9,0x2
  418a5e:	mov    rbp,r9
  418a61:	jmp    418b72 <main@@Base+0x11aa2>
  418a66:	mov    rdi,QWORD PTR [rsp+0x8]
  418a6b:	mov    rdx,r12
  418a6e:	mov    ecx,0x4
  418a73:	call   424090 <flatcc_json_parser_set_error@@Base>
  418a78:	jmp    418b6f <main@@Base+0x11a9f>
  418a7d:	mov    rax,rbp
  418a80:	mov    r15,QWORD PTR [rsp+0x8]
  418a85:	jmp    418ccc <main@@Base+0x11bfc>
  418a8a:	mov    DWORD PTR [rsp+0x4],eax
  418a8e:	mov    ebx,eax
  418a90:	mov    r15,QWORD PTR [rsp+0x8]
  418a95:	mov    r14,QWORD PTR [rsp+0x10]
  418a9a:	mov    rcx,rsi
  418a9d:	cmp    rbp,rcx
  418aa0:	jne    418566 <main@@Base+0x11496>
  418aa6:	jmp    418529 <main@@Base+0x11459>
  418aab:	mov    rax,QWORD PTR [rsp+0x28]
  418ab0:	mov    rcx,rax
  418ab3:	shr    rcx,0x20
  418ab7:	je     418cbd <main@@Base+0x11bed>
  418abd:	mov    r15,QWORD PTR [rsp+0x8]
  418ac2:	mov    rdi,r15
  418ac5:	mov    rdx,r12
  418ac8:	mov    ecx,0x7
  418acd:	call   424090 <flatcc_json_parser_set_error@@Base>
  418ad2:	jmp    418ccc <main@@Base+0x11bfc>
  418ad7:	jne    418aed <main@@Base+0x11a1d>
  418ad9:	cmp    BYTE PTR [rsi+0x2],0x20
  418add:	jle    418aed <main@@Base+0x11a1d>
  418adf:	add    rsi,0x2
  418ae3:	mov    rax,rsi
  418ae6:	mov    r15,QWORD PTR [rsp+0x8]
  418aeb:	jmp    418b00 <main@@Base+0x11a30>
  418aed:	mov    r15,QWORD PTR [rsp+0x8]
  418af2:	mov    rdi,r15
  418af5:	mov    rsi,rax
  418af8:	mov    rdx,r12
  418afb:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418b00:	mov    r9,rbx
  418b03:	cmp    r9,rax
  418b06:	mov    r14,QWORD PTR [rsp+0x10]
  418b0b:	je     418b49 <main@@Base+0x11a79>
  418b0d:	mov    rdi,r15
  418b10:	mov    rsi,rax
  418b13:	mov    rdx,r12
  418b16:	lea    rcx,[rsp+0x34]
  418b1b:	call   426120 <flatcc_json_parser_build_string@@Base>
  418b20:	mov    rbx,rax
  418b23:	cmp    DWORD PTR [rsp+0x34],0x0
  418b28:	je     4199c1 <main@@Base+0x128f1>
  418b2e:	mov    rdi,QWORD PTR [r15]
  418b31:	mov    esi,0x2
  418b36:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  418b3b:	test   rax,rax
  418b3e:	jne    4182f5 <main@@Base+0x11225>
  418b44:	jmp    4199c1 <main@@Base+0x128f1>
  418b49:	mov    rdi,r15
  418b4c:	mov    rsi,r9
  418b4f:	mov    rdx,r12
  418b52:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  418b57:	mov    rcx,rax
  418b5a:	jmp    418bfd <main@@Base+0x11b2d>
  418b5f:	mov    rdi,QWORD PTR [rsp+0x8]
  418b64:	mov    rsi,rbp
  418b67:	mov    rdx,r12
  418b6a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418b6f:	mov    rbp,rax
  418b72:	cmp    r14,rbp
  418b75:	mov    r15,QWORD PTR [rsp+0x8]
  418b7a:	je     418be7 <main@@Base+0x11b17>
  418b7c:	mov    QWORD PTR [rsp+0x28],0x0
  418b85:	mov    DWORD PTR [rsp+0x20],0x0
  418b8d:	mov    DWORD PTR [rsp+0x4],0x0
  418b95:	xor    r14d,r14d
  418b98:	cmp    rbp,r12
  418b9b:	je     418c9b <main@@Base+0x11bcb>
  418ba1:	mov    rdi,QWORD PTR [rsp+0x8]
  418ba6:	mov    rsi,rbp
  418ba9:	mov    rdx,r12
  418bac:	lea    rcx,[rsp+0x20]
  418bb1:	lea    r8,[rsp+0x28]
  418bb6:	call   425c50 <flatcc_json_parser_integer@@Base>
  418bbb:	cmp    rax,rbp
  418bbe:	je     418cac <main@@Base+0x11bdc>
  418bc4:	mov    rbx,rax
  418bc7:	cmp    DWORD PTR [rsp+0x20],0x0
  418bcc:	je     418d45 <main@@Base+0x11c75>
  418bd2:	mov    rdi,QWORD PTR [rsp+0x8]
  418bd7:	mov    rsi,rbx
  418bda:	mov    rdx,r12
  418bdd:	mov    ecx,0x8
  418be2:	jmp    418d67 <main@@Base+0x11c97>
  418be7:	mov    rdi,r15
  418bea:	mov    rsi,r14
  418bed:	mov    rdx,r12
  418bf0:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  418bf5:	mov    rcx,rax
  418bf8:	mov    r14,QWORD PTR [rsp+0x10]
  418bfd:	mov    rax,r12
  418c00:	sub    rax,rcx
  418c03:	cmp    rax,0x2
  418c07:	jl     418c23 <main@@Base+0x11b53>
  418c09:	cmp    BYTE PTR [rcx],0x20
  418c0c:	jg     418c34 <main@@Base+0x11b64>
  418c0e:	jne    418c23 <main@@Base+0x11b53>
  418c10:	cmp    BYTE PTR [rcx+0x1],0x20
  418c14:	jle    418c23 <main@@Base+0x11b53>
  418c16:	inc    rcx
  418c19:	cmp    rcx,r12
  418c1c:	jne    418c3d <main@@Base+0x11b6d>
  418c1e:	jmp    418f04 <main@@Base+0x11e34>
  418c23:	mov    rdi,r15
  418c26:	mov    rsi,rcx
  418c29:	mov    rdx,r12
  418c2c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418c31:	mov    rcx,rax
  418c34:	cmp    rcx,r12
  418c37:	je     418f04 <main@@Base+0x11e34>
  418c3d:	movzx  eax,BYTE PTR [rcx]
  418c40:	cmp    al,0x2c
  418c42:	jne    418f17 <main@@Base+0x11e47>
  418c48:	lea    rsi,[rcx+0x1]
  418c4c:	mov    rax,r12
  418c4f:	sub    rax,rsi
  418c52:	cmp    rax,0x2
  418c56:	jl     418c76 <main@@Base+0x11ba6>
  418c58:	cmp    BYTE PTR [rsi],0x20
  418c5b:	jg     418c84 <main@@Base+0x11bb4>
  418c5d:	jne    418c76 <main@@Base+0x11ba6>
  418c5f:	cmp    BYTE PTR [rcx+0x2],0x20
  418c63:	jle    418c76 <main@@Base+0x11ba6>
  418c65:	add    rcx,0x2
  418c69:	mov    rsi,rcx
  418c6c:	cmp    rsi,r12
  418c6f:	jne    418c8d <main@@Base+0x11bbd>
  418c71:	jmp    418f57 <main@@Base+0x11e87>
  418c76:	mov    rdi,r15
  418c79:	mov    rdx,r12
  418c7c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418c81:	mov    rsi,rax
  418c84:	cmp    rsi,r12
  418c87:	je     418f57 <main@@Base+0x11e87>
  418c8d:	cmp    BYTE PTR [rsi],0x7d
  418c90:	jne    417820 <main@@Base+0x10750>
  418c96:	jmp    418f62 <main@@Base+0x11e92>
  418c9b:	mov    rbx,r12
  418c9e:	cmp    rbp,rbx
  418ca1:	jne    418daa <main@@Base+0x11cda>
  418ca7:	jmp    418d74 <main@@Base+0x11ca4>
  418cac:	mov    rbx,rbp
  418caf:	cmp    rbp,rbx
  418cb2:	jne    418daa <main@@Base+0x11cda>
  418cb8:	jmp    418d74 <main@@Base+0x11ca4>
  418cbd:	mov    DWORD PTR [rsp+0x4],eax
  418cc1:	mov    r14d,eax
  418cc4:	mov    r15,QWORD PTR [rsp+0x8]
  418cc9:	mov    rax,rsi
  418ccc:	mov    rbx,rax
  418ccf:	cmp    rbp,rax
  418cd2:	jne    418d0d <main@@Base+0x11c3d>
  418cd4:	mov    rdi,r15
  418cd7:	mov    rsi,rbp
  418cda:	mov    rdx,r12
  418cdd:	lea    rcx,[rip+0x2a8bc]        # 4435a0 <__data_start@@Base+0x4f0>
  418ce4:	lea    r8,[rsp+0x4]
  418ce9:	call   414f50 <main@@Base+0xde80>
  418cee:	mov    rbx,rax
  418cf1:	cmp    rax,rbp
  418cf4:	je     4199bc <main@@Base+0x128ec>
  418cfa:	cmp    rbx,r12
  418cfd:	je     4199bc <main@@Base+0x128ec>
  418d03:	mov    r14d,DWORD PTR [rsp+0x4]
  418d08:	mov    r15,QWORD PTR [rsp+0x8]
  418d0d:	test   r14d,r14d
  418d10:	jne    418d1d <main@@Base+0x11c4d>
  418d12:	test   BYTE PTR [r15+0x10],0x2
  418d17:	je     418de7 <main@@Base+0x11d17>
  418d1d:	mov    rdi,QWORD PTR [r15]
  418d20:	mov    edx,0x4
  418d25:	mov    esi,0x6
  418d2a:	mov    ecx,0x4
  418d2f:	call   420a40 <flatcc_builder_table_add@@Base>
  418d34:	test   rax,rax
  418d37:	je     4199bc <main@@Base+0x128ec>
  418d3d:	mov    DWORD PTR [rax],r14d
  418d40:	jmp    418de7 <main@@Base+0x11d17>
  418d45:	mov    rax,QWORD PTR [rsp+0x28]
  418d4a:	mov    rcx,rax
  418d4d:	shr    rcx,0x20
  418d51:	je     418df1 <main@@Base+0x11d21>
  418d57:	mov    rdi,QWORD PTR [rsp+0x8]
  418d5c:	mov    rsi,rbx
  418d5f:	mov    rdx,r12
  418d62:	mov    ecx,0x7
  418d67:	call   424090 <flatcc_json_parser_set_error@@Base>
  418d6c:	mov    rbx,rax
  418d6f:	cmp    rbp,rbx
  418d72:	jne    418daa <main@@Base+0x11cda>
  418d74:	mov    rdi,QWORD PTR [rsp+0x8]
  418d79:	mov    rsi,rbp
  418d7c:	mov    rdx,r12
  418d7f:	lea    rcx,[rip+0x2a85a]        # 4435e0 <__data_start@@Base+0x530>
  418d86:	lea    r8,[rsp+0x4]
  418d8b:	call   414f50 <main@@Base+0xde80>
  418d90:	mov    rbx,rax
  418d93:	cmp    rax,rbp
  418d96:	je     4199bc <main@@Base+0x128ec>
  418d9c:	cmp    rbx,r12
  418d9f:	je     4199bc <main@@Base+0x128ec>
  418da5:	mov    r14d,DWORD PTR [rsp+0x4]
  418daa:	test   r14d,r14d
  418dad:	jne    418dba <main@@Base+0x11cea>
  418daf:	mov    rax,QWORD PTR [rsp+0x8]
  418db4:	test   BYTE PTR [rax+0x10],0x2
  418db8:	je     418de2 <main@@Base+0x11d12>
  418dba:	mov    rax,QWORD PTR [rsp+0x8]
  418dbf:	mov    rdi,QWORD PTR [rax]
  418dc2:	mov    edx,0x4
  418dc7:	mov    esi,0x8
  418dcc:	mov    ecx,0x4
  418dd1:	call   420a40 <flatcc_builder_table_add@@Base>
  418dd6:	test   rax,rax
  418dd9:	je     4199bc <main@@Base+0x128ec>
  418ddf:	mov    DWORD PTR [rax],r14d
  418de2:	mov    r15,QWORD PTR [rsp+0x8]
  418de7:	mov    r14,QWORD PTR [rsp+0x10]
  418dec:	jmp    4189d3 <main@@Base+0x11903>
  418df1:	mov    DWORD PTR [rsp+0x4],eax
  418df5:	mov    r14d,eax
  418df8:	cmp    rbp,rbx
  418dfb:	jne    418daa <main@@Base+0x11cda>
  418dfd:	jmp    418d74 <main@@Base+0x11ca4>
  418e02:	mov    rdi,r15
  418e05:	mov    rdx,r12
  418e08:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418e0d:	mov    rsi,rax
  418e10:	mov    rax,r12
  418e13:	cmp    rsi,r12
  418e16:	je     418fb0 <main@@Base+0x11ee0>
  418e1c:	cmp    BYTE PTR [rsi],0x7d
  418e1f:	jne    418fad <main@@Base+0x11edd>
  418e25:	lea    rbx,[rsi+0x1]
  418e29:	mov    rax,r12
  418e2c:	sub    rax,rbx
  418e2f:	cmp    rax,0x2
  418e33:	jl     41987c <main@@Base+0x127ac>
  418e39:	cmp    BYTE PTR [rbx],0x20
  418e3c:	jg     41988d <main@@Base+0x127bd>
  418e42:	jne    41987c <main@@Base+0x127ac>
  418e48:	cmp    BYTE PTR [rsi+0x2],0x20
  418e4c:	jle    41987c <main@@Base+0x127ac>
  418e52:	add    rsi,0x2
  418e56:	mov    rbx,rsi
  418e59:	cmp    DWORD PTR [r15+0x20],0x0
  418e5e:	je     419898 <main@@Base+0x127c8>
  418e64:	jmp    4199ac <main@@Base+0x128dc>
  418e69:	mov    rbx,r12
  418e6c:	cmp    DWORD PTR [r15+0x20],0x0
  418e71:	je     419785 <main@@Base+0x126b5>
  418e77:	jmp    4199ac <main@@Base+0x128dc>
  418e7c:	cmp    al,0x7d
  418e7e:	jne    419764 <main@@Base+0x12694>
  418e84:	lea    rbx,[rbp+0x1]
  418e88:	mov    rax,r12
  418e8b:	sub    rax,rbx
  418e8e:	cmp    rax,0x2
  418e92:	jl     418ef1 <main@@Base+0x11e21>
  418e94:	cmp    BYTE PTR [rbx],0x20
  418e97:	jg     41977a <main@@Base+0x126aa>
  418e9d:	jne    418ef1 <main@@Base+0x11e21>
  418e9f:	cmp    BYTE PTR [rbp+0x2],0x20
  418ea3:	jle    418ef1 <main@@Base+0x11e21>
  418ea5:	add    rbp,0x2
  418ea9:	mov    rbx,rbp
  418eac:	cmp    DWORD PTR [r15+0x20],0x0
  418eb1:	je     419785 <main@@Base+0x126b5>
  418eb7:	jmp    4199ac <main@@Base+0x128dc>
  418ebc:	mov    rdi,r15
  418ebf:	mov    rsi,r12
  418ec2:	jmp    41976a <main@@Base+0x1269a>
  418ec7:	lea    rbx,[rax+0x1]
  418ecb:	mov    rcx,r12
  418ece:	sub    rcx,rbx
  418ed1:	cmp    rcx,0x2
  418ed5:	jl     418ef1 <main@@Base+0x11e21>
  418ed7:	cmp    BYTE PTR [rbx],0x20
  418eda:	jg     41977a <main@@Base+0x126aa>
  418ee0:	jne    418ef1 <main@@Base+0x11e21>
  418ee2:	cmp    BYTE PTR [rax+0x2],0x20
  418ee6:	jle    418ef1 <main@@Base+0x11e21>
  418ee8:	add    rax,0x2
  418eec:	jmp    419777 <main@@Base+0x126a7>
  418ef1:	mov    rdi,r15
  418ef4:	mov    rsi,rbx
  418ef7:	mov    rdx,r12
  418efa:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418eff:	jmp    419777 <main@@Base+0x126a7>
  418f04:	mov    rbx,r12
  418f07:	cmp    DWORD PTR [r15+0x20],0x0
  418f0c:	je     4197d8 <main@@Base+0x12708>
  418f12:	jmp    4199c1 <main@@Base+0x128f1>
  418f17:	cmp    al,0x7d
  418f19:	jne    4197b7 <main@@Base+0x126e7>
  418f1f:	lea    rbx,[rcx+0x1]
  418f23:	mov    rax,r12
  418f26:	sub    rax,rbx
  418f29:	cmp    rax,0x2
  418f2d:	jl     418f9a <main@@Base+0x11eca>
  418f2f:	cmp    BYTE PTR [rbx],0x20
  418f32:	jg     4197cd <main@@Base+0x126fd>
  418f38:	jne    418f9a <main@@Base+0x11eca>
  418f3a:	cmp    BYTE PTR [rcx+0x2],0x20
  418f3e:	jle    418f9a <main@@Base+0x11eca>
  418f40:	add    rcx,0x2
  418f44:	mov    rbx,rcx
  418f47:	cmp    DWORD PTR [r15+0x20],0x0
  418f4c:	je     4197d8 <main@@Base+0x12708>
  418f52:	jmp    4199c1 <main@@Base+0x128f1>
  418f57:	mov    rdi,r15
  418f5a:	mov    rsi,r12
  418f5d:	jmp    4197bd <main@@Base+0x126ed>
  418f62:	lea    rbx,[rsi+0x1]
  418f66:	mov    rax,r12
  418f69:	sub    rax,rbx
  418f6c:	cmp    rax,0x2
  418f70:	jl     418f9a <main@@Base+0x11eca>
  418f72:	cmp    BYTE PTR [rbx],0x20
  418f75:	jg     4197cd <main@@Base+0x126fd>
  418f7b:	jne    418f9a <main@@Base+0x11eca>
  418f7d:	cmp    BYTE PTR [rsi+0x2],0x20
  418f81:	jle    418f9a <main@@Base+0x11eca>
  418f83:	add    rsi,0x2
  418f87:	mov    rbx,rsi
  418f8a:	cmp    DWORD PTR [r15+0x20],0x0
  418f8f:	je     4197d8 <main@@Base+0x12708>
  418f95:	jmp    4199c1 <main@@Base+0x128f1>
  418f9a:	mov    rdi,r15
  418f9d:	mov    rsi,rbx
  418fa0:	mov    rdx,r12
  418fa3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  418fa8:	jmp    4197ca <main@@Base+0x126fa>
  418fad:	mov    rax,rsi
  418fb0:	mov    rsi,r12
  418fb3:	cmp    rax,r12
  418fb6:	je     418ff8 <main@@Base+0x11f28>
  418fb8:	movzx  ecx,BYTE PTR [rax]
  418fbb:	cmp    cl,0x2e
  418fbe:	je     418fd5 <main@@Base+0x11f05>
  418fc0:	cmp    cl,0x22
  418fc3:	jne    418fea <main@@Base+0x11f1a>
  418fc5:	inc    rax
  418fc8:	mov    rcx,QWORD PTR [rsp+0x18]
  418fcd:	mov    DWORD PTR [rcx],0x0
  418fd3:	jmp    418ff5 <main@@Base+0x11f25>
  418fd5:	mov    rdi,r15
  418fd8:	mov    rsi,rax
  418fdb:	mov    rdx,r12
  418fde:	mov    ecx,0x5
  418fe3:	call   424090 <flatcc_json_parser_set_error@@Base>
  418fe8:	jmp    418ff5 <main@@Base+0x11f25>
  418fea:	mov    rcx,QWORD PTR [rsp+0x18]
  418fef:	mov    DWORD PTR [rcx],0x1
  418ff5:	mov    rsi,rax
  418ff8:	mov    rax,r12
  418ffb:	sub    rax,rsi
  418ffe:	cmp    rax,0x8
  419002:	jb     41900e <main@@Base+0x11f3e>
  419004:	movbe  rax,QWORD PTR [rsi]
  419009:	jmp    419094 <main@@Base+0x11fc4>
  41900e:	dec    rax
  419011:	cmp    rax,0x6
  419015:	ja     4190df <main@@Base+0x1200f>
  41901b:	lea    rcx,[rip+0x1b722]        # 434744 <_IO_stdin_used@@Base+0x744>
  419022:	mov    rdx,rcx
  419025:	movsxd rcx,DWORD PTR [rcx+rax*4]
  419029:	add    rcx,rdx
  41902c:	xor    r8d,r8d
  41902f:	xor    eax,eax
  419031:	xor    edx,edx
  419033:	xor    edi,edi
  419035:	xor    ebp,ebp
  419037:	xor    ebx,ebx
  419039:	jmp    rcx
  41903b:	movsx  r8,BYTE PTR [rsi+0x6]
  419040:	shl    r8,0x8
  419044:	movsx  rax,BYTE PTR [rsi+0x5]
  419049:	shl    rax,0x10
  41904d:	or     rax,r8
  419050:	movsx  rdx,BYTE PTR [rsi+0x4]
  419055:	shl    rdx,0x18
  419059:	or     rdx,rax
  41905c:	movsx  rdi,BYTE PTR [rsi+0x3]
  419061:	shl    rdi,0x20
  419065:	or     rdi,rdx
  419068:	movsx  rbp,BYTE PTR [rsi+0x2]
  41906d:	shl    rbp,0x28
  419071:	or     rbp,rdi
  419074:	movsx  rbx,BYTE PTR [rsi+0x1]
  419079:	shl    rbx,0x30
  41907d:	or     rbx,rbp
  419080:	movzx  eax,BYTE PTR [rsi]
  419083:	shl    rax,0x38
  419087:	or     rax,rbx
  41908a:	movabs rbp,0x625f73746172745f
  419094:	movabs rcx,0x616161615f626262
  41909e:	cmp    rax,rcx
  4190a1:	jne    4190df <main@@Base+0x1200f>
  4190a3:	lea    r14,[rsi+0x8]
  4190a7:	mov    rax,r12
  4190aa:	sub    rax,r14
  4190ad:	cmp    rax,0x8
  4190b1:	jb     4190f2 <main@@Base+0x12022>
  4190b3:	movbe  rcx,QWORD PTR [r14]
  4190b8:	cmp    rcx,rbp
  4190bb:	jne    419181 <main@@Base+0x120b1>
  4190c1:	lea    r14,[rsi+0x10]
  4190c5:	mov    rax,r12
  4190c8:	sub    rax,r14
  4190cb:	cmp    rax,0x8
  4190cf:	jb     4191d4 <main@@Base+0x12104>
  4190d5:	movbe  rcx,QWORD PTR [r14]
  4190da:	jmp    419250 <main@@Base+0x12180>
  4190df:	mov    rdi,r15
  4190e2:	mov    rdx,r12
  4190e5:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  4190ea:	mov    rbp,rax
  4190ed:	jmp    41953b <main@@Base+0x1246b>
  4190f2:	lea    rcx,[rax-0x1]
  4190f6:	cmp    rcx,0x6
  4190fa:	ja     419525 <main@@Base+0x12455>
  419100:	lea    rdx,[rip+0x1b659]        # 434760 <_IO_stdin_used@@Base+0x760>
  419107:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41910b:	add    rcx,rdx
  41910e:	xor    r8d,r8d
  419111:	xor    r9d,r9d
  419114:	xor    edi,edi
  419116:	xor    ebp,ebp
  419118:	xor    ebx,ebx
  41911a:	xor    edx,edx
  41911c:	jmp    rcx
  41911e:	movsx  r8,BYTE PTR [rsi+0xe]
  419123:	shl    r8,0x8
  419127:	movsx  r9,BYTE PTR [rsi+0xd]
  41912c:	shl    r9,0x10
  419130:	or     r9,r8
  419133:	movsx  rdi,BYTE PTR [rsi+0xc]
  419138:	shl    rdi,0x18
  41913c:	or     rdi,r9
  41913f:	movsx  rbp,BYTE PTR [rsi+0xb]
  419144:	shl    rbp,0x20
  419148:	or     rbp,rdi
  41914b:	movsx  rbx,BYTE PTR [rsi+0xa]
  419150:	shl    rbx,0x28
  419154:	or     rbx,rbp
  419157:	movsx  rdx,BYTE PTR [rsi+0x9]
  41915c:	shl    rdx,0x30
  419160:	or     rdx,rbx
  419163:	movzx  ecx,BYTE PTR [r14]
  419167:	shl    rcx,0x38
  41916b:	or     rcx,rdx
  41916e:	movabs rbp,0x625f73746172745f
  419178:	cmp    rcx,rbp
  41917b:	je     4190c1 <main@@Base+0x11ff1>
  419181:	and    rcx,0xffffffffffffff00
  419188:	lea    rdx,[rbp+0x3fdfea1]
  41918f:	cmp    rcx,rdx
  419192:	jne    419525 <main@@Base+0x12455>
  419198:	cmp    rax,0x8
  41919c:	jl     419525 <main@@Base+0x12455>
  4191a2:	mov    rax,QWORD PTR [rsp+0x18]
  4191a7:	cmp    DWORD PTR [rax],0x0
  4191aa:	movzx  eax,BYTE PTR [rsi+0xf]
  4191ae:	je     41929c <main@@Base+0x121cc>
  4191b4:	cmp    al,0x21
  4191b6:	jl     4191c0 <main@@Base+0x120f0>
  4191b8:	cmp    al,0x3a
  4191ba:	jne    419525 <main@@Base+0x12455>
  4191c0:	add    rsi,0xf
  4191c4:	mov    rax,QWORD PTR [rsp+0x18]
  4191c9:	mov    DWORD PTR [rax],0x0
  4191cf:	jmp    4192a8 <main@@Base+0x121d8>
  4191d4:	lea    rcx,[rax-0x1]
  4191d8:	cmp    rcx,0x6
  4191dc:	ja     419525 <main@@Base+0x12455>
  4191e2:	lea    rdx,[rip+0x1b593]        # 43477c <_IO_stdin_used@@Base+0x77c>
  4191e9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4191ed:	add    rcx,rdx
  4191f0:	xor    r8d,r8d
  4191f3:	xor    r9d,r9d
  4191f6:	xor    edi,edi
  4191f8:	xor    ebp,ebp
  4191fa:	xor    ebx,ebx
  4191fc:	xor    edx,edx
  4191fe:	jmp    rcx
  419200:	movsx  r8,BYTE PTR [rsi+0x16]
  419205:	shl    r8,0x8
  419209:	movsx  r9,BYTE PTR [rsi+0x15]
  41920e:	shl    r9,0x10
  419212:	or     r9,r8
  419215:	movsx  rdi,BYTE PTR [rsi+0x14]
  41921a:	shl    rdi,0x18
  41921e:	or     rdi,r9
  419221:	movsx  rbp,BYTE PTR [rsi+0x13]
  419226:	shl    rbp,0x20
  41922a:	or     rbp,rdi
  41922d:	movsx  rbx,BYTE PTR [rsi+0x12]
  419232:	shl    rbx,0x28
  419236:	or     rbx,rbp
  419239:	movsx  rdx,BYTE PTR [rsi+0x11]
  41923e:	shl    rdx,0x30
  419242:	or     rdx,rbx
  419245:	movzx  ecx,BYTE PTR [r14]
  419249:	shl    rcx,0x38
  41924d:	or     rcx,rdx
  419250:	shr    rcx,0x18
  419254:	movabs rdx,0x7374657073
  41925e:	cmp    rcx,rdx
  419261:	jne    419525 <main@@Base+0x12455>
  419267:	cmp    rax,0x6
  41926b:	jl     419525 <main@@Base+0x12455>
  419271:	mov    rax,QWORD PTR [rsp+0x18]
  419276:	cmp    DWORD PTR [rax],0x0
  419279:	movzx  eax,BYTE PTR [rsi+0x15]
  41927d:	je     4192ce <main@@Base+0x121fe>
  41927f:	cmp    al,0x21
  419281:	jl     41928b <main@@Base+0x121bb>
  419283:	cmp    al,0x3a
  419285:	jne    419525 <main@@Base+0x12455>
  41928b:	add    rsi,0x15
  41928f:	mov    rax,QWORD PTR [rsp+0x18]
  419294:	mov    DWORD PTR [rax],0x0
  41929a:	jmp    4192da <main@@Base+0x1220a>
  41929c:	cmp    al,0x22
  41929e:	jne    419525 <main@@Base+0x12455>
  4192a4:	add    rsi,0x10
  4192a8:	mov    rax,r12
  4192ab:	sub    rax,rsi
  4192ae:	cmp    rax,0x2
  4192b2:	jl     419314 <main@@Base+0x12244>
  4192b4:	cmp    BYTE PTR [rsi],0x20
  4192b7:	jg     419322 <main@@Base+0x12252>
  4192b9:	jne    419314 <main@@Base+0x12244>
  4192bb:	cmp    BYTE PTR [rsi+0x1],0x20
  4192bf:	jle    419314 <main@@Base+0x12244>
  4192c1:	inc    rsi
  4192c4:	cmp    rsi,r12
  4192c7:	jne    419327 <main@@Base+0x12257>
  4192c9:	jmp    419371 <main@@Base+0x122a1>
  4192ce:	cmp    al,0x22
  4192d0:	jne    419525 <main@@Base+0x12455>
  4192d6:	add    rsi,0x16
  4192da:	mov    rax,r12
  4192dd:	sub    rax,rsi
  4192e0:	cmp    rax,0x2
  4192e4:	jl     419386 <main@@Base+0x122b6>
  4192ea:	cmp    BYTE PTR [rsi],0x20
  4192ed:	jg     419394 <main@@Base+0x122c4>
  4192f3:	jne    419386 <main@@Base+0x122b6>
  4192f9:	cmp    BYTE PTR [rsi+0x1],0x20
  4192fd:	jle    419386 <main@@Base+0x122b6>
  419303:	inc    rsi
  419306:	cmp    rsi,r12
  419309:	jne    419399 <main@@Base+0x122c9>
  41930f:	jmp    4193e3 <main@@Base+0x12313>
  419314:	mov    rdi,r15
  419317:	mov    rdx,r12
  41931a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41931f:	mov    rsi,rax
  419322:	cmp    rsi,r12
  419325:	je     419371 <main@@Base+0x122a1>
  419327:	cmp    BYTE PTR [rsi],0x3a
  41932a:	jne    419371 <main@@Base+0x122a1>
  41932c:	lea    r13,[rsi+0x1]
  419330:	mov    rax,r12
  419333:	sub    rax,r13
  419336:	cmp    rax,0x2
  41933a:	jl     4193f8 <main@@Base+0x12328>
  419340:	cmp    BYTE PTR [r13+0x0],0x20
  419345:	jg     41935e <main@@Base+0x1228e>
  419347:	jne    4193f8 <main@@Base+0x12328>
  41934d:	cmp    BYTE PTR [rsi+0x2],0x20
  419351:	jle    4193f8 <main@@Base+0x12328>
  419357:	add    rsi,0x2
  41935b:	mov    r13,rsi
  41935e:	mov    r15,QWORD PTR [rsp+0x8]
  419363:	cmp    r14,r13
  419366:	jne    419417 <main@@Base+0x12347>
  41936c:	jmp    419525 <main@@Base+0x12455>
  419371:	mov    rdi,r15
  419374:	mov    rdx,r12
  419377:	mov    ecx,0x4
  41937c:	call   424090 <flatcc_json_parser_set_error@@Base>
  419381:	jmp    41940b <main@@Base+0x1233b>
  419386:	mov    rdi,r15
  419389:	mov    rdx,r12
  41938c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  419391:	mov    rsi,rax
  419394:	cmp    rsi,r12
  419397:	je     4193e3 <main@@Base+0x12313>
  419399:	cmp    BYTE PTR [rsi],0x3a
  41939c:	jne    4193e3 <main@@Base+0x12313>
  41939e:	lea    r13,[rsi+0x1]
  4193a2:	mov    rax,r12
  4193a5:	sub    rax,r13
  4193a8:	cmp    rax,0x2
  4193ac:	jl     41949f <main@@Base+0x123cf>
  4193b2:	cmp    BYTE PTR [r13+0x0],0x20
  4193b7:	jg     4193d0 <main@@Base+0x12300>
  4193b9:	jne    41949f <main@@Base+0x123cf>
  4193bf:	cmp    BYTE PTR [rsi+0x2],0x20
  4193c3:	jle    41949f <main@@Base+0x123cf>
  4193c9:	add    rsi,0x2
  4193cd:	mov    r13,rsi
  4193d0:	mov    r15,QWORD PTR [rsp+0x8]
  4193d5:	cmp    r14,r13
  4193d8:	jne    4194ba <main@@Base+0x123ea>
  4193de:	jmp    419525 <main@@Base+0x12455>
  4193e3:	mov    rdi,r15
  4193e6:	mov    rdx,r12
  4193e9:	mov    ecx,0x4
  4193ee:	call   424090 <flatcc_json_parser_set_error@@Base>
  4193f3:	jmp    4194b2 <main@@Base+0x123e2>
  4193f8:	mov    r15,QWORD PTR [rsp+0x8]
  4193fd:	mov    rdi,r15
  419400:	mov    rsi,r13
  419403:	mov    rdx,r12
  419406:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41940b:	mov    r13,rax
  41940e:	cmp    r14,r13
  419411:	je     419525 <main@@Base+0x12455>
  419417:	mov    QWORD PTR [rsp+0x28],0x0
  419420:	mov    DWORD PTR [rsp+0x4],0x0
  419428:	mov    QWORD PTR [rsp+0x20],0x0
  419431:	cmp    r13,r12
  419434:	je     419495 <main@@Base+0x123c5>
  419436:	mov    rdi,r15
  419439:	mov    rsi,r13
  41943c:	mov    rdx,r12
  41943f:	lea    rcx,[rsp+0x4]
  419444:	lea    r8,[rsp+0x28]
  419449:	call   425c50 <flatcc_json_parser_integer@@Base>
  41944e:	cmp    rax,r13
  419451:	je     4195ee <main@@Base+0x1251e>
  419457:	mov    rbp,rax
  41945a:	mov    rbx,QWORD PTR [rsp+0x28]
  41945f:	cmp    DWORD PTR [rsp+0x4],0x0
  419464:	je     4195fd <main@@Base+0x1252d>
  41946a:	movabs rax,0x8000000000000000
  419474:	cmp    rbx,rax
  419477:	jbe    41965c <main@@Base+0x1258c>
  41947d:	mov    r15,QWORD PTR [rsp+0x8]
  419482:	mov    rdi,r15
  419485:	mov    rsi,rbp
  419488:	mov    rdx,r12
  41948b:	mov    ecx,0x8
  419490:	jmp    419615 <main@@Base+0x12545>
  419495:	xor    ebx,ebx
  419497:	mov    rbp,r12
  41949a:	jmp    419669 <main@@Base+0x12599>
  41949f:	mov    r15,QWORD PTR [rsp+0x8]
  4194a4:	mov    rdi,r15
  4194a7:	mov    rsi,r13
  4194aa:	mov    rdx,r12
  4194ad:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4194b2:	mov    r13,rax
  4194b5:	cmp    r14,r13
  4194b8:	je     419525 <main@@Base+0x12455>
  4194ba:	mov    QWORD PTR [rsp+0x28],0x0
  4194c3:	mov    DWORD PTR [rsp+0x20],0x0
  4194cb:	mov    DWORD PTR [rsp+0x4],0x0
  4194d3:	xor    ebx,ebx
  4194d5:	cmp    r13,r12
  4194d8:	je     4195dd <main@@Base+0x1250d>
  4194de:	mov    rdi,r15
  4194e1:	mov    rsi,r13
  4194e4:	mov    rdx,r12
  4194e7:	lea    rcx,[rsp+0x20]
  4194ec:	lea    r8,[rsp+0x28]
  4194f1:	call   425c50 <flatcc_json_parser_integer@@Base>
  4194f6:	cmp    rax,r13
  4194f9:	je     4195f5 <main@@Base+0x12525>
  4194ff:	mov    rbp,rax
  419502:	cmp    DWORD PTR [rsp+0x20],0x0
  419507:	je     419621 <main@@Base+0x12551>
  41950d:	mov    r15,QWORD PTR [rsp+0x8]
  419512:	mov    rdi,r15
  419515:	mov    rsi,rbp
  419518:	mov    rdx,r12
  41951b:	mov    ecx,0x8
  419520:	jmp    419646 <main@@Base+0x12576>
  419525:	mov    rdi,r15
  419528:	mov    rsi,r14
  41952b:	mov    rdx,r12
  41952e:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  419533:	mov    rbp,rax
  419536:	mov    r14,QWORD PTR [rsp+0x10]
  41953b:	mov    rax,r12
  41953e:	sub    rax,rbp
  419541:	cmp    rax,0x2
  419545:	jl     419562 <main@@Base+0x12492>
  419547:	cmp    BYTE PTR [rbp+0x0],0x20
  41954b:	jg     419573 <main@@Base+0x124a3>
  41954d:	jne    419562 <main@@Base+0x12492>
  41954f:	cmp    BYTE PTR [rbp+0x1],0x20
  419553:	jle    419562 <main@@Base+0x12492>
  419555:	inc    rbp
  419558:	cmp    rbp,r12
  41955b:	jne    41957c <main@@Base+0x124ac>
  41955d:	jmp    4197a4 <main@@Base+0x126d4>
  419562:	mov    rdi,r15
  419565:	mov    rsi,rbp
  419568:	mov    rdx,r12
  41956b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  419570:	mov    rbp,rax
  419573:	cmp    rbp,r12
  419576:	je     4197a4 <main@@Base+0x126d4>
  41957c:	movzx  eax,BYTE PTR [rbp+0x0]
  419580:	cmp    al,0x2c
  419582:	jne    4197f4 <main@@Base+0x12724>
  419588:	lea    rax,[rbp+0x1]
  41958c:	mov    rcx,r12
  41958f:	sub    rcx,rax
  419592:	cmp    rcx,0x2
  419596:	jl     4195ae <main@@Base+0x124de>
  419598:	cmp    BYTE PTR [rax],0x20
  41959b:	jg     4195bc <main@@Base+0x124ec>
  41959d:	jne    4195ae <main@@Base+0x124de>
  41959f:	cmp    BYTE PTR [rbp+0x2],0x20
  4195a3:	jle    4195ae <main@@Base+0x124de>
  4195a5:	add    rbp,0x2
  4195a9:	mov    rax,rbp
  4195ac:	jmp    4195bc <main@@Base+0x124ec>
  4195ae:	mov    rdi,r15
  4195b1:	mov    rsi,rax
  4195b4:	mov    rdx,r12
  4195b7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4195bc:	cmp    rax,r12
  4195bf:	movabs rbp,0x625f73746172745f
  4195c9:	je     419817 <main@@Base+0x12747>
  4195cf:	cmp    BYTE PTR [rax],0x7d
  4195d2:	jne    418fb0 <main@@Base+0x11ee0>
  4195d8:	jmp    41981f <main@@Base+0x1274f>
  4195dd:	mov    rbp,r12
  4195e0:	cmp    r13,rbp
  4195e3:	jne    41972e <main@@Base+0x1265e>
  4195e9:	jmp    4196f6 <main@@Base+0x12626>
  4195ee:	xor    ebx,ebx
  4195f0:	mov    rbp,r13
  4195f3:	jmp    419664 <main@@Base+0x12594>
  4195f5:	mov    rbp,r13
  4195f8:	jmp    4196ec <main@@Base+0x1261c>
  4195fd:	test   rbx,rbx
  419600:	jns    41965f <main@@Base+0x1258f>
  419602:	mov    r15,QWORD PTR [rsp+0x8]
  419607:	mov    rdi,r15
  41960a:	mov    rsi,rbp
  41960d:	mov    rdx,r12
  419610:	mov    ecx,0x7
  419615:	call   424090 <flatcc_json_parser_set_error@@Base>
  41961a:	mov    rbp,rax
  41961d:	xor    ebx,ebx
  41961f:	jmp    419669 <main@@Base+0x12599>
  419621:	mov    rax,QWORD PTR [rsp+0x28]
  419626:	mov    rcx,rax
  419629:	shr    rcx,0x20
  41962d:	je     4196e6 <main@@Base+0x12616>
  419633:	mov    r15,QWORD PTR [rsp+0x8]
  419638:	mov    rdi,r15
  41963b:	mov    rsi,rbp
  41963e:	mov    rdx,r12
  419641:	mov    ecx,0x7
  419646:	call   424090 <flatcc_json_parser_set_error@@Base>
  41964b:	mov    rbp,rax
  41964e:	cmp    r13,rbp
  419651:	jne    41972e <main@@Base+0x1265e>
  419657:	jmp    4196f6 <main@@Base+0x12626>
  41965c:	neg    rbx
  41965f:	mov    QWORD PTR [rsp+0x20],rbx
  419664:	mov    r15,QWORD PTR [rsp+0x8]
  419669:	mov    r14,QWORD PTR [rsp+0x10]
  41966e:	cmp    r13,rbp
  419671:	jne    4196b1 <main@@Base+0x125e1>
  419673:	mov    rdi,r15
  419676:	mov    rsi,r13
  419679:	mov    rdx,r12
  41967c:	lea    rcx,[rip+0x29f9d]        # 443620 <__data_start@@Base+0x570>
  419683:	lea    r8,[rsp+0x20]
  419688:	call   414d70 <main@@Base+0xdca0>
  41968d:	mov    rbp,rax
  419690:	cmp    rax,r13
  419693:	je     4199a4 <main@@Base+0x128d4>
  419699:	cmp    rbp,r12
  41969c:	je     4199a4 <main@@Base+0x128d4>
  4196a2:	mov    rbx,QWORD PTR [rsp+0x20]
  4196a7:	mov    r15,QWORD PTR [rsp+0x8]
  4196ac:	mov    r14,QWORD PTR [rsp+0x10]
  4196b1:	test   rbx,rbx
  4196b4:	jne    4196c1 <main@@Base+0x125f1>
  4196b6:	test   BYTE PTR [r15+0x10],0x2
  4196bb:	je     41953b <main@@Base+0x1246b>
  4196c1:	mov    rdi,QWORD PTR [r15]
  4196c4:	mov    edx,0x8
  4196c9:	xor    esi,esi
  4196cb:	mov    ecx,0x8
  4196d0:	call   420a40 <flatcc_builder_table_add@@Base>
  4196d5:	test   rax,rax
  4196d8:	je     4199a4 <main@@Base+0x128d4>
  4196de:	mov    QWORD PTR [rax],rbx
  4196e1:	jmp    41953b <main@@Base+0x1246b>
  4196e6:	mov    DWORD PTR [rsp+0x4],eax
  4196ea:	mov    ebx,eax
  4196ec:	mov    r15,QWORD PTR [rsp+0x8]
  4196f1:	cmp    r13,rbp
  4196f4:	jne    41972e <main@@Base+0x1265e>
  4196f6:	mov    rdi,r15
  4196f9:	mov    rsi,r13
  4196fc:	mov    rdx,r12
  4196ff:	lea    rcx,[rip+0x29efa]        # 443600 <__data_start@@Base+0x550>
  419706:	lea    r8,[rsp+0x4]
  41970b:	call   414f50 <main@@Base+0xde80>
  419710:	mov    rbp,rax
  419713:	cmp    rax,r13
  419716:	je     4199a4 <main@@Base+0x128d4>
  41971c:	cmp    rbp,r12
  41971f:	je     4199a4 <main@@Base+0x128d4>
  419725:	mov    ebx,DWORD PTR [rsp+0x4]
  419729:	mov    r15,QWORD PTR [rsp+0x8]
  41972e:	test   ebx,ebx
  419730:	jne    41973d <main@@Base+0x1266d>
  419732:	test   BYTE PTR [r15+0x10],0x2
  419737:	je     419536 <main@@Base+0x12466>
  41973d:	mov    rdi,QWORD PTR [r15]
  419740:	mov    edx,0x4
  419745:	mov    esi,0x1
  41974a:	mov    ecx,0x4
  41974f:	call   420a40 <flatcc_builder_table_add@@Base>
  419754:	test   rax,rax
  419757:	je     4199a4 <main@@Base+0x128d4>
  41975d:	mov    DWORD PTR [rax],ebx
  41975f:	jmp    419536 <main@@Base+0x12466>
  419764:	mov    rdi,r15
  419767:	mov    rsi,rbp
  41976a:	mov    rdx,r12
  41976d:	mov    ecx,0xa
  419772:	call   424090 <flatcc_json_parser_set_error@@Base>
  419777:	mov    rbx,rax
  41977a:	cmp    DWORD PTR [r15+0x20],0x0
  41977f:	jne    4199ac <main@@Base+0x128dc>
  419785:	mov    rdi,QWORD PTR [r15]
  419788:	call   4200d0 <flatcc_builder_end_table@@Base>
  41978d:	test   eax,eax
  41978f:	je     4199ac <main@@Base+0x128dc>
  419795:	mov    ebp,eax
  419797:	mov    rdi,QWORD PTR [r15]
  41979a:	mov    esi,0x1
  41979f:	jmp    4198b2 <main@@Base+0x127e2>
  4197a4:	mov    rbx,r12
  4197a7:	cmp    DWORD PTR [r15+0x20],0x0
  4197ac:	je     419898 <main@@Base+0x127c8>
  4197b2:	jmp    4199ac <main@@Base+0x128dc>
  4197b7:	mov    rdi,r15
  4197ba:	mov    rsi,rcx
  4197bd:	mov    rdx,r12
  4197c0:	mov    ecx,0xa
  4197c5:	call   424090 <flatcc_json_parser_set_error@@Base>
  4197ca:	mov    rbx,rax
  4197cd:	cmp    DWORD PTR [r15+0x20],0x0
  4197d2:	jne    4199c1 <main@@Base+0x128f1>
  4197d8:	mov    rdi,QWORD PTR [r15]
  4197db:	call   4200d0 <flatcc_builder_end_table@@Base>
  4197e0:	test   eax,eax
  4197e2:	je     4199c1 <main@@Base+0x128f1>
  4197e8:	mov    ebp,eax
  4197ea:	mov    rdi,QWORD PTR [r15]
  4197ed:	xor    esi,esi
  4197ef:	jmp    4198b2 <main@@Base+0x127e2>
  4197f4:	cmp    al,0x7d
  4197f6:	jne    419842 <main@@Base+0x12772>
  4197f8:	lea    rbx,[rbp+0x1]
  4197fc:	mov    rax,r12
  4197ff:	sub    rax,rbx
  419802:	cmp    rax,0x2
  419806:	jl     41987c <main@@Base+0x127ac>
  419808:	cmp    BYTE PTR [rbx],0x20
  41980b:	jle    419857 <main@@Base+0x12787>
  41980d:	mov    r15,QWORD PTR [rsp+0x8]
  419812:	jmp    41713b <main@@Base+0x1006b>
  419817:	mov    rdi,r15
  41981a:	mov    rsi,r12
  41981d:	jmp    419848 <main@@Base+0x12778>
  41981f:	lea    rbx,[rax+0x1]
  419823:	mov    rcx,r12
  419826:	sub    rcx,rbx
  419829:	cmp    rcx,0x2
  41982d:	jl     41987c <main@@Base+0x127ac>
  41982f:	cmp    BYTE PTR [rbx],0x20
  419832:	jg     41988d <main@@Base+0x127bd>
  419834:	jne    41987c <main@@Base+0x127ac>
  419836:	cmp    BYTE PTR [rax+0x2],0x20
  41983a:	jle    41987c <main@@Base+0x127ac>
  41983c:	add    rax,0x2
  419840:	jmp    41988a <main@@Base+0x127ba>
  419842:	mov    rdi,r15
  419845:	mov    rsi,rbp
  419848:	mov    rdx,r12
  41984b:	mov    ecx,0xa
  419850:	call   424090 <flatcc_json_parser_set_error@@Base>
  419855:	jmp    41988a <main@@Base+0x127ba>
  419857:	mov    r15,QWORD PTR [rsp+0x8]
  41985c:	mov    r14,QWORD PTR [rsp+0x10]
  419861:	jne    41987c <main@@Base+0x127ac>
  419863:	cmp    BYTE PTR [rbp+0x2],0x20
  419867:	jle    41987c <main@@Base+0x127ac>
  419869:	add    rbp,0x2
  41986d:	mov    rbx,rbp
  419870:	cmp    DWORD PTR [r15+0x20],0x0
  419875:	je     419898 <main@@Base+0x127c8>
  419877:	jmp    4199ac <main@@Base+0x128dc>
  41987c:	mov    rdi,r15
  41987f:	mov    rsi,rbx
  419882:	mov    rdx,r12
  419885:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41988a:	mov    rbx,rax
  41988d:	cmp    DWORD PTR [r15+0x20],0x0
  419892:	jne    4199ac <main@@Base+0x128dc>
  419898:	mov    rdi,QWORD PTR [r15]
  41989b:	call   4200d0 <flatcc_builder_end_table@@Base>
  4198a0:	test   eax,eax
  4198a2:	je     4199ac <main@@Base+0x128dc>
  4198a8:	mov    ebp,eax
  4198aa:	mov    rdi,QWORD PTR [r15]
  4198ad:	mov    esi,0x2
  4198b2:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  4198b7:	test   rax,rax
  4198ba:	je     41999c <main@@Base+0x128cc>
  4198c0:	mov    DWORD PTR [rax],ebp
  4198c2:	movabs rbp,0x625f73746172745f
  4198cc:	jmp    416a3c <main@@Base+0xf96c>
  4198d1:	mov    rbp,r12
  4198d4:	cmp    DWORD PTR [r15+0x20],0x0
  4198d9:	jne    4167c3 <main@@Base+0xf6f3>
  4198df:	mov    rdi,QWORD PTR [r15]
  4198e2:	call   4200d0 <flatcc_builder_end_table@@Base>
  4198e7:	mov    DWORD PTR [r14],eax
  4198ea:	test   eax,eax
  4198ec:	jne    4167d9 <main@@Base+0xf709>
  4198f2:	jmp    4167c3 <main@@Base+0xf6f3>
  4198f7:	cmp    al,0x7d
  4198f9:	jne    419989 <main@@Base+0x128b9>
  4198ff:	lea    rbp,[rbx+0x1]
  419903:	mov    rax,r12
  419906:	sub    rax,rbp
  419909:	cmp    rax,0x2
  41990d:	jl     419976 <main@@Base+0x128a6>
  41990f:	cmp    BYTE PTR [rbp+0x0],0x20
  419913:	jg     4167b8 <main@@Base+0xf6e8>
  419919:	jne    419976 <main@@Base+0x128a6>
  41991b:	cmp    BYTE PTR [rbx+0x2],0x20
  41991f:	jle    419976 <main@@Base+0x128a6>
  419921:	add    rbx,0x2
  419925:	mov    rbp,rbx
  419928:	cmp    DWORD PTR [r15+0x20],0x0
  41992d:	jne    4167c3 <main@@Base+0xf6f3>
  419933:	jmp    4198df <main@@Base+0x1280f>
  419935:	mov    rdi,r15
  419938:	mov    rsi,r12
  41993b:	jmp    41998f <main@@Base+0x128bf>
  41993d:	lea    rbp,[rsi+0x1]
  419941:	mov    rax,r12
  419944:	sub    rax,rbp
  419947:	cmp    rax,0x2
  41994b:	jl     419976 <main@@Base+0x128a6>
  41994d:	cmp    BYTE PTR [rbp+0x0],0x20
  419951:	jg     4167b8 <main@@Base+0xf6e8>
  419957:	jne    419976 <main@@Base+0x128a6>
  419959:	cmp    BYTE PTR [rsi+0x2],0x20
  41995d:	jle    419976 <main@@Base+0x128a6>
  41995f:	add    rsi,0x2
  419963:	mov    rbp,rsi
  419966:	cmp    DWORD PTR [r15+0x20],0x0
  41996b:	jne    4167c3 <main@@Base+0xf6f3>
  419971:	jmp    4198df <main@@Base+0x1280f>
  419976:	mov    rdi,r15
  419979:	mov    rsi,rbp
  41997c:	mov    rdx,r12
  41997f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  419984:	jmp    4167b5 <main@@Base+0xf6e5>
  419989:	mov    rdi,r15
  41998c:	mov    rsi,rbx
  41998f:	mov    rdx,r12
  419992:	mov    ecx,0xa
  419997:	jmp    4167b0 <main@@Base+0xf6e0>
  41999c:	mov    rbp,rbx
  41999f:	jmp    4167c3 <main@@Base+0xf6f3>
  4199a4:	mov    rbx,rbp
  4199a7:	mov    r15,QWORD PTR [rsp+0x8]
  4199ac:	mov    rdi,r15
  4199af:	mov    rsi,rbx
  4199b2:	jmp    4199c7 <main@@Base+0x128f7>
  4199b4:	mov    rbx,rcx
  4199b7:	jmp    4199c1 <main@@Base+0x128f1>
  4199b9:	mov    rbx,rcx
  4199bc:	mov    r15,QWORD PTR [rsp+0x8]
  4199c1:	mov    rsi,rbx
  4199c4:	mov    rdi,r15
  4199c7:	mov    rdx,r12
  4199ca:	mov    ecx,0x21
  4199cf:	call   424090 <flatcc_json_parser_set_error@@Base>
  4199d4:	mov    rbp,rax
  4199d7:	jmp    4167c3 <main@@Base+0xf6f3>
  4199dc:	mov    rbp,rcx
  4199df:	mov    r15,QWORD PTR [rsp+0x8]
  4199e4:	mov    rsi,rbp
  4199e7:	jmp    4199c4 <main@@Base+0x128f4>
  4199e9:	nop    DWORD PTR [rax+0x0]
  4199f0:	push   rbp
  4199f1:	push   r15
  4199f3:	push   r14
  4199f5:	push   r13
  4199f7:	push   r12
  4199f9:	push   rbx
  4199fa:	sub    rsp,0x18
  4199fe:	mov    r13,rcx
  419a01:	mov    r12,rdx
  419a04:	mov    rbx,rsi
  419a07:	mov    r14,rdi
  419a0a:	mov    DWORD PTR [rcx],0x0
  419a10:	mov    rdi,QWORD PTR [rdi]
  419a13:	mov    esi,0xa
  419a18:	call   41f6c0 <flatcc_builder_start_table@@Base>
  419a1d:	test   eax,eax
  419a1f:	je     419a49 <main@@Base+0x12979>
  419a21:	mov    rdi,r14
  419a24:	mov    rsi,rbx
  419a27:	mov    rdx,r12
  419a2a:	mov    ecx,0x21
  419a2f:	call   424090 <flatcc_json_parser_set_error@@Base>
  419a34:	mov    rbx,rax
  419a37:	mov    rax,rbx
  419a3a:	add    rsp,0x18
  419a3e:	pop    rbx
  419a3f:	pop    r12
  419a41:	pop    r13
  419a43:	pop    r14
  419a45:	pop    r15
  419a47:	pop    rbp
  419a48:	ret    
  419a49:	lea    r8,[rsp+0x10]
  419a4e:	mov    ecx,0x5
  419a53:	mov    rdi,r14
  419a56:	mov    rsi,rbx
  419a59:	mov    rdx,r12
  419a5c:	call   4263c0 <flatcc_json_parser_prepare_unions@@Base>
  419a61:	cmp    rax,r12
  419a64:	je     419a21 <main@@Base+0x12951>
  419a66:	cmp    rbx,r12
  419a69:	je     419a96 <main@@Base+0x129c6>
  419a6b:	cmp    BYTE PTR [rbx],0x7b
  419a6e:	jne    419a96 <main@@Base+0x129c6>
  419a70:	lea    rax,[rbx+0x1]
  419a74:	mov    rcx,r12
  419a77:	sub    rcx,rax
  419a7a:	cmp    rcx,0x2
  419a7e:	jl     419ae6 <main@@Base+0x12a16>
  419a80:	cmp    BYTE PTR [rax],0x20
  419a83:	jg     419af4 <main@@Base+0x12a24>
  419a85:	jne    419ae6 <main@@Base+0x12a16>
  419a87:	cmp    BYTE PTR [rbx+0x2],0x20
  419a8b:	jle    419ae6 <main@@Base+0x12a16>
  419a8d:	add    rbx,0x2
  419a91:	mov    rax,rbx
  419a94:	jmp    419af4 <main@@Base+0x12a24>
  419a96:	mov    rdi,r14
  419a99:	mov    rsi,rbx
  419a9c:	mov    rdx,r12
  419a9f:	mov    ecx,0x15
  419aa4:	call   424090 <flatcc_json_parser_set_error@@Base>
  419aa9:	mov    rbx,rax
  419aac:	cmp    DWORD PTR [r14+0x20],0x0
  419ab1:	jne    419a21 <main@@Base+0x12951>
  419ab7:	mov    rcx,QWORD PTR [rsp+0x10]
  419abc:	mov    rdi,r14
  419abf:	mov    rsi,rbx
  419ac2:	mov    rdx,r12
  419ac5:	call   426440 <flatcc_json_parser_finalize_unions@@Base>
  419aca:	mov    rbx,rax
  419acd:	mov    rdi,QWORD PTR [r14]
  419ad0:	call   4200d0 <flatcc_builder_end_table@@Base>
  419ad5:	mov    DWORD PTR [r13+0x0],eax
  419ad9:	test   eax,eax
  419adb:	jne    419a37 <main@@Base+0x12967>
  419ae1:	jmp    419a21 <main@@Base+0x12951>
  419ae6:	mov    rdi,r14
  419ae9:	mov    rsi,rax
  419aec:	mov    rdx,r12
  419aef:	call   424110 <flatcc_json_parser_space_ext@@Base>
  419af4:	mov    rsi,r12
  419af7:	cmp    rax,r12
  419afa:	je     419b08 <main@@Base+0x12a38>
  419afc:	cmp    BYTE PTR [rax],0x7d
  419aff:	je     41af30 <main@@Base+0x13e60>
  419b05:	mov    rsi,rax
  419b08:	lea    rax,[r14+0x14]
  419b0c:	mov    QWORD PTR [rsp+0x8],rax
  419b11:	movabs rbx,0x7261637465720000
  419b1b:	mov    QWORD PTR [rsp],r13
  419b1f:	nop
  419b20:	mov    r15,r12
  419b23:	cmp    rsi,r12
  419b26:	je     419b66 <main@@Base+0x12a96>
  419b28:	movzx  eax,BYTE PTR [rsi]
  419b2b:	cmp    al,0x2e
  419b2d:	je     419b43 <main@@Base+0x12a73>
  419b2f:	cmp    al,0x22
  419b31:	jne    419b58 <main@@Base+0x12a88>
  419b33:	inc    rsi
  419b36:	mov    rax,QWORD PTR [rsp+0x8]
  419b3b:	mov    DWORD PTR [rax],0x0
  419b41:	jmp    419b63 <main@@Base+0x12a93>
  419b43:	mov    rdi,r14
  419b46:	mov    rdx,r12
  419b49:	mov    ecx,0x5
  419b4e:	call   424090 <flatcc_json_parser_set_error@@Base>
  419b53:	mov    r15,rax
  419b56:	jmp    419b66 <main@@Base+0x12a96>
  419b58:	mov    rax,QWORD PTR [rsp+0x8]
  419b5d:	mov    DWORD PTR [rax],0x1
  419b63:	mov    r15,rsi
  419b66:	mov    rcx,r12
  419b69:	sub    rcx,r15
  419b6c:	cmp    rcx,0x8
  419b70:	jb     419b80 <main@@Base+0x12ab0>
  419b72:	movbe  rax,QWORD PTR [r15]
  419b77:	jmp    419c08 <main@@Base+0x12b38>
  419b7c:	nop    DWORD PTR [rax+0x0]
  419b80:	lea    rax,[rcx-0x1]
  419b84:	cmp    rax,0x6
  419b88:	ja     41a529 <main@@Base+0x13459>
  419b8e:	lea    rdx,[rip+0x1ac3b]        # 4347d0 <_IO_stdin_used@@Base+0x7d0>
  419b95:	mov    rsi,rdx
  419b98:	movsxd rdx,DWORD PTR [rdx+rax*4]
  419b9c:	add    rdx,rsi
  419b9f:	xor    r8d,r8d
  419ba2:	xor    eax,eax
  419ba4:	xor    esi,esi
  419ba6:	xor    edi,edi
  419ba8:	xor    ebx,ebx
  419baa:	xor    ebp,ebp
  419bac:	jmp    rdx
  419bae:	movsx  r8,BYTE PTR [r15+0x6]
  419bb3:	shl    r8,0x8
  419bb7:	movsx  rax,BYTE PTR [r15+0x5]
  419bbc:	shl    rax,0x10
  419bc0:	or     rax,r8
  419bc3:	movsx  rsi,BYTE PTR [r15+0x4]
  419bc8:	shl    rsi,0x18
  419bcc:	or     rsi,rax
  419bcf:	movsx  rdi,BYTE PTR [r15+0x3]
  419bd4:	shl    rdi,0x20
  419bd8:	or     rdi,rsi
  419bdb:	movsx  rbx,BYTE PTR [r15+0x2]
  419be0:	shl    rbx,0x28
  419be4:	or     rbx,rdi
  419be7:	movsx  rbp,BYTE PTR [r15+0x1]
  419bec:	shl    rbp,0x30
  419bf0:	or     rbp,rbx
  419bf3:	movzx  eax,BYTE PTR [r15]
  419bf7:	shl    rax,0x38
  419bfb:	or     rax,rbp
  419bfe:	movabs rbx,0x7261637465720000
  419c08:	movabs rdx,0x6368617261637465
  419c12:	cmp    rax,rdx
  419c15:	jae    419c5c <main@@Base+0x12b8c>
  419c17:	movabs rdx,0x63616d656f5f7479
  419c21:	cmp    rax,rdx
  419c24:	je     419ce2 <main@@Base+0x12c12>
  419c2a:	movabs rdx,0x616e7461676f6e69
  419c34:	cmp    rax,rdx
  419c37:	jne    419d01 <main@@Base+0x12c31>
  419c3d:	lea    r13,[r15+0x8]
  419c41:	mov    rax,r12
  419c44:	sub    rax,r13
  419c47:	cmp    rax,0x8
  419c4b:	jb     419d5d <main@@Base+0x12c8d>
  419c51:	movbe  rcx,QWORD PTR [r13+0x0]
  419c57:	jmp    419de6 <main@@Base+0x12d16>
  419c5c:	movabs rcx,0x6d61696e5f636860
  419c66:	cmp    rax,rcx
  419c69:	ja     419c9d <main@@Base+0x12bcd>
  419c6b:	movabs rcx,0x6368617261637465
  419c75:	cmp    rax,rcx
  419c78:	jne    41a529 <main@@Base+0x13459>
  419c7e:	lea    r13,[r15+0x8]
  419c82:	mov    rax,r12
  419c85:	sub    rax,r13
  419c88:	cmp    rax,0x8
  419c8c:	jb     419f9f <main@@Base+0x12ecf>
  419c92:	movbe  rcx,QWORD PTR [r13+0x0]
  419c98:	jmp    41a028 <main@@Base+0x12f58>
  419c9d:	movabs rcx,0x736964655f6b6963
  419ca7:	cmp    rax,rcx
  419caa:	je     419e3d <main@@Base+0x12d6d>
  419cb0:	movabs rcx,0x6d61696e5f636861
  419cba:	cmp    rax,rcx
  419cbd:	jne    41a529 <main@@Base+0x13459>
  419cc3:	lea    r13,[r15+0x8]
  419cc7:	mov    rax,r12
  419cca:	sub    rax,r13
  419ccd:	cmp    rax,0x8
  419cd1:	jb     41a0d8 <main@@Base+0x13008>
  419cd7:	movbe  rcx,QWORD PTR [r13+0x0]
  419cdd:	jmp    41a161 <main@@Base+0x13091>
  419ce2:	lea    r13,[r15+0x8]
  419ce6:	mov    rax,r12
  419ce9:	sub    rax,r13
  419cec:	cmp    rax,0x8
  419cf0:	jb     419e5c <main@@Base+0x12d8c>
  419cf6:	movbe  rcx,QWORD PTR [r13+0x0]
  419cfc:	jmp    419ee5 <main@@Base+0x12e15>
  419d01:	shr    rax,0x18
  419d05:	movabs rdx,0x63616d656f
  419d0f:	cmp    rax,rdx
  419d12:	jne    41a529 <main@@Base+0x13459>
  419d18:	mov    rax,r15
  419d1b:	cmp    rcx,0x6
  419d1f:	jl     41a930 <main@@Base+0x13860>
  419d25:	mov    rax,QWORD PTR [rsp+0x8]
  419d2a:	cmp    DWORD PTR [rax],0x0
  419d2d:	movzx  ecx,BYTE PTR [r15+0x5]
  419d32:	je     41a3df <main@@Base+0x1330f>
  419d38:	cmp    cl,0x21
  419d3b:	jl     419d49 <main@@Base+0x12c79>
  419d3d:	mov    rax,r15
  419d40:	cmp    cl,0x3a
  419d43:	jne    41a930 <main@@Base+0x13860>
  419d49:	lea    rsi,[r15+0x5]
  419d4d:	mov    rax,QWORD PTR [rsp+0x8]
  419d52:	mov    DWORD PTR [rax],0x0
  419d58:	jmp    41a3ef <main@@Base+0x1331f>
  419d5d:	lea    rcx,[rax-0x1]
  419d61:	cmp    rcx,0x6
  419d65:	ja     41ae30 <main@@Base+0x13d60>
  419d6b:	lea    rdx,[rip+0x1ab06]        # 434878 <_IO_stdin_used@@Base+0x878>
  419d72:	mov    rsi,rdx
  419d75:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  419d79:	add    rdx,rsi
  419d7c:	xor    r8d,r8d
  419d7f:	xor    ecx,ecx
  419d81:	xor    esi,esi
  419d83:	xor    edi,edi
  419d85:	xor    ebp,ebp
  419d87:	xor    ebx,ebx
  419d89:	jmp    rdx
  419d8b:	movsx  r8,BYTE PTR [r15+0xe]
  419d90:	shl    r8,0x8
  419d94:	movsx  rcx,BYTE PTR [r15+0xd]
  419d99:	shl    rcx,0x10
  419d9d:	or     rcx,r8
  419da0:	movsx  rsi,BYTE PTR [r15+0xc]
  419da5:	shl    rsi,0x18
  419da9:	or     rsi,rcx
  419dac:	movsx  rdi,BYTE PTR [r15+0xb]
  419db1:	shl    rdi,0x20
  419db5:	or     rdi,rsi
  419db8:	movsx  rbp,BYTE PTR [r15+0xa]
  419dbd:	shl    rbp,0x28
  419dc1:	or     rbp,rdi
  419dc4:	movsx  rbx,BYTE PTR [r15+0x9]
  419dc9:	shl    rbx,0x30
  419dcd:	or     rbx,rbp
  419dd0:	movzx  ecx,BYTE PTR [r13+0x0]
  419dd5:	shl    rcx,0x38
  419dd9:	or     rcx,rbx
  419ddc:	movabs rbx,0x7261637465720000
  419de6:	mov    rdx,rcx
  419de9:	shr    rdx,0x8
  419ded:	movabs rsi,0x73745f74797065
  419df7:	cmp    rdx,rsi
  419dfa:	jne    419f42 <main@@Base+0x12e72>
  419e00:	cmp    rax,0x8
  419e04:	jl     41ae30 <main@@Base+0x13d60>
  419e0a:	mov    rax,QWORD PTR [rsp+0x8]
  419e0f:	cmp    DWORD PTR [rax],0x0
  419e12:	movzx  eax,BYTE PTR [r15+0xf]
  419e17:	je     41a429 <main@@Base+0x13359>
  419e1d:	cmp    al,0x21
  419e1f:	jl     419e29 <main@@Base+0x12d59>
  419e21:	cmp    al,0x3a
  419e23:	jne    41ae30 <main@@Base+0x13d60>
  419e29:	add    r15,0xf
  419e2d:	mov    rax,QWORD PTR [rsp+0x8]
  419e32:	mov    DWORD PTR [rax],0x0
  419e38:	jmp    41a435 <main@@Base+0x13365>
  419e3d:	lea    r13,[r15+0x8]
  419e41:	mov    rax,r12
  419e44:	sub    rax,r13
  419e47:	cmp    rax,0x8
  419e4b:	jb     41a190 <main@@Base+0x130c0>
  419e51:	movbe  rcx,QWORD PTR [r13+0x0]
  419e57:	jmp    41a219 <main@@Base+0x13149>
  419e5c:	lea    rcx,[rax-0x1]
  419e60:	cmp    rcx,0x6
  419e64:	ja     41ae30 <main@@Base+0x13d60>
  419e6a:	lea    rdx,[rip+0x1a9eb]        # 43485c <_IO_stdin_used@@Base+0x85c>
  419e71:	mov    rsi,rdx
  419e74:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  419e78:	add    rdx,rsi
  419e7b:	xor    r8d,r8d
  419e7e:	xor    ecx,ecx
  419e80:	xor    esi,esi
  419e82:	xor    edi,edi
  419e84:	xor    ebp,ebp
  419e86:	xor    ebx,ebx
  419e88:	jmp    rdx
  419e8a:	movsx  r8,BYTE PTR [r15+0xe]
  419e8f:	shl    r8,0x8
  419e93:	movsx  rcx,BYTE PTR [r15+0xd]
  419e98:	shl    rcx,0x10
  419e9c:	or     rcx,r8
  419e9f:	movsx  rsi,BYTE PTR [r15+0xc]
  419ea4:	shl    rsi,0x18
  419ea8:	or     rsi,rcx
  419eab:	movsx  rdi,BYTE PTR [r15+0xb]
  419eb0:	shl    rdi,0x20
  419eb4:	or     rdi,rsi
  419eb7:	movsx  rbp,BYTE PTR [r15+0xa]
  419ebc:	shl    rbp,0x28
  419ec0:	or     rbp,rdi
  419ec3:	movsx  rbx,BYTE PTR [r15+0x9]
  419ec8:	shl    rbx,0x30
  419ecc:	or     rbx,rbp
  419ecf:	movzx  ecx,BYTE PTR [r13+0x0]
  419ed4:	shl    rcx,0x38
  419ed8:	or     rcx,rbx
  419edb:	movabs rbx,0x7261637465720000
  419ee5:	movabs rdx,0xffff000000000000
  419eef:	and    rcx,rdx
  419ef2:	movabs rdx,0x7065000000000000
  419efc:	cmp    rcx,rdx
  419eff:	jne    41ae30 <main@@Base+0x13d60>
  419f05:	cmp    rax,0x3
  419f09:	jl     41ae30 <main@@Base+0x13d60>
  419f0f:	mov    rax,QWORD PTR [rsp+0x8]
  419f14:	cmp    DWORD PTR [rax],0x0
  419f17:	movzx  eax,BYTE PTR [r15+0xa]
  419f1c:	je     41a471 <main@@Base+0x133a1>
  419f22:	cmp    al,0x21
  419f24:	jl     419f2e <main@@Base+0x12e5e>
  419f26:	cmp    al,0x3a
  419f28:	jne    41ae30 <main@@Base+0x13d60>
  419f2e:	add    r15,0xa
  419f32:	mov    rax,QWORD PTR [rsp+0x8]
  419f37:	mov    DWORD PTR [rax],0x0
  419f3d:	jmp    41a47d <main@@Base+0x133ad>
  419f42:	movabs rdx,0xffff000000000000
  419f4c:	and    rcx,rdx
  419f4f:	movabs rdx,0x7374000000000000
  419f59:	cmp    rcx,rdx
  419f5c:	jne    41ae30 <main@@Base+0x13d60>
  419f62:	cmp    rax,0x3
  419f66:	jl     41ae30 <main@@Base+0x13d60>
  419f6c:	mov    rax,QWORD PTR [rsp+0x8]
  419f71:	cmp    DWORD PTR [rax],0x0
  419f74:	movzx  eax,BYTE PTR [r15+0xa]
  419f79:	je     41a6f5 <main@@Base+0x13625>
  419f7f:	cmp    al,0x21
  419f81:	jl     419f8b <main@@Base+0x12ebb>
  419f83:	cmp    al,0x3a
  419f85:	jne    41ae30 <main@@Base+0x13d60>
  419f8b:	add    r15,0xa
  419f8f:	mov    rax,QWORD PTR [rsp+0x8]
  419f94:	mov    DWORD PTR [rax],0x0
  419f9a:	jmp    41a701 <main@@Base+0x13631>
  419f9f:	lea    rcx,[rax-0x1]
  419fa3:	cmp    rcx,0x6
  419fa7:	ja     41ae30 <main@@Base+0x13d60>
  419fad:	lea    rdx,[rip+0x1a88c]        # 434840 <_IO_stdin_used@@Base+0x840>
  419fb4:	mov    rsi,rdx
  419fb7:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  419fbb:	add    rdx,rsi
  419fbe:	xor    r8d,r8d
  419fc1:	xor    ecx,ecx
  419fc3:	xor    esi,esi
  419fc5:	xor    edi,edi
  419fc7:	xor    ebp,ebp
  419fc9:	xor    ebx,ebx
  419fcb:	jmp    rdx
  419fcd:	movsx  r8,BYTE PTR [r15+0xe]
  419fd2:	shl    r8,0x8
  419fd6:	movsx  rcx,BYTE PTR [r15+0xd]
  419fdb:	shl    rcx,0x10
  419fdf:	or     rcx,r8
  419fe2:	movsx  rsi,BYTE PTR [r15+0xc]
  419fe7:	shl    rsi,0x18
  419feb:	or     rsi,rcx
  419fee:	movsx  rdi,BYTE PTR [r15+0xb]
  419ff3:	shl    rdi,0x20
  419ff7:	or     rdi,rsi
  419ffa:	movsx  rbp,BYTE PTR [r15+0xa]
  419fff:	shl    rbp,0x28
  41a003:	or     rbp,rdi
  41a006:	movsx  rbx,BYTE PTR [r15+0x9]
  41a00b:	shl    rbx,0x30
  41a00f:	or     rbx,rbp
  41a012:	movzx  ecx,BYTE PTR [r13+0x0]
  41a017:	shl    rcx,0x38
  41a01b:	or     rcx,rbx
  41a01e:	movabs rbx,0x7261637465720000
  41a028:	mov    rdx,rcx
  41a02b:	shr    rdx,0x8
  41a02f:	movabs rsi,0x72735f74797065
  41a039:	cmp    rdx,rsi
  41a03c:	jne    41a07b <main@@Base+0x12fab>
  41a03e:	cmp    rax,0x8
  41a042:	jl     41ae30 <main@@Base+0x13d60>
  41a048:	mov    rax,QWORD PTR [rsp+0x8]
  41a04d:	cmp    DWORD PTR [rax],0x0
  41a050:	movzx  eax,BYTE PTR [r15+0xf]
  41a055:	je     41a644 <main@@Base+0x13574>
  41a05b:	cmp    al,0x21
  41a05d:	jl     41a067 <main@@Base+0x12f97>
  41a05f:	cmp    al,0x3a
  41a061:	jne    41ae30 <main@@Base+0x13d60>
  41a067:	add    r15,0xf
  41a06b:	mov    rax,QWORD PTR [rsp+0x8]
  41a070:	mov    DWORD PTR [rax],0x0
  41a076:	jmp    41a650 <main@@Base+0x13580>
  41a07b:	movabs rdx,0xffff000000000000
  41a085:	and    rcx,rdx
  41a088:	movabs rdx,0x7273000000000000
  41a092:	cmp    rcx,rdx
  41a095:	jne    41ae30 <main@@Base+0x13d60>
  41a09b:	cmp    rax,0x3
  41a09f:	jl     41ae30 <main@@Base+0x13d60>
  41a0a5:	mov    rax,QWORD PTR [rsp+0x8]
  41a0aa:	cmp    DWORD PTR [rax],0x0
  41a0ad:	movzx  eax,BYTE PTR [r15+0xa]
  41a0b2:	je     41a871 <main@@Base+0x137a1>
  41a0b8:	cmp    al,0x21
  41a0ba:	jl     41a0c4 <main@@Base+0x12ff4>
  41a0bc:	cmp    al,0x3a
  41a0be:	jne    41ae30 <main@@Base+0x13d60>
  41a0c4:	add    r15,0xa
  41a0c8:	mov    rax,QWORD PTR [rsp+0x8]
  41a0cd:	mov    DWORD PTR [rax],0x0
  41a0d3:	jmp    41a87d <main@@Base+0x137ad>
  41a0d8:	lea    rcx,[rax-0x1]
  41a0dc:	cmp    rcx,0x6
  41a0e0:	ja     41ae30 <main@@Base+0x13d60>
  41a0e6:	lea    rdx,[rip+0x1a71b]        # 434808 <_IO_stdin_used@@Base+0x808>
  41a0ed:	mov    rsi,rdx
  41a0f0:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41a0f4:	add    rdx,rsi
  41a0f7:	xor    r8d,r8d
  41a0fa:	xor    ecx,ecx
  41a0fc:	xor    esi,esi
  41a0fe:	xor    edi,edi
  41a100:	xor    ebp,ebp
  41a102:	xor    ebx,ebx
  41a104:	jmp    rdx
  41a106:	movsx  r8,BYTE PTR [r15+0xe]
  41a10b:	shl    r8,0x8
  41a10f:	movsx  rcx,BYTE PTR [r15+0xd]
  41a114:	shl    rcx,0x10
  41a118:	or     rcx,r8
  41a11b:	movsx  rsi,BYTE PTR [r15+0xc]
  41a120:	shl    rsi,0x18
  41a124:	or     rsi,rcx
  41a127:	movsx  rdi,BYTE PTR [r15+0xb]
  41a12c:	shl    rdi,0x20
  41a130:	or     rdi,rsi
  41a133:	movsx  rbp,BYTE PTR [r15+0xa]
  41a138:	shl    rbp,0x28
  41a13c:	or     rbp,rdi
  41a13f:	movsx  rbx,BYTE PTR [r15+0x9]
  41a144:	shl    rbx,0x30
  41a148:	or     rbx,rbp
  41a14b:	movzx  ecx,BYTE PTR [r13+0x0]
  41a150:	shl    rcx,0x38
  41a154:	or     rcx,rbx
  41a157:	movabs rbx,0x7261637465720000
  41a161:	lea    rdx,[rbx+0x5f74]
  41a168:	cmp    rcx,rdx
  41a16b:	jne    41a270 <main@@Base+0x131a0>
  41a171:	lea    r13,[r15+0x10]
  41a175:	mov    rax,r12
  41a178:	sub    rax,r13
  41a17b:	cmp    rax,0x8
  41a17f:	jb     41a308 <main@@Base+0x13238>
  41a185:	movbe  rcx,QWORD PTR [r13+0x0]
  41a18b:	jmp    41a391 <main@@Base+0x132c1>
  41a190:	lea    rcx,[rax-0x1]
  41a194:	cmp    rcx,0x6
  41a198:	ja     41ae30 <main@@Base+0x13d60>
  41a19e:	lea    rdx,[rip+0x1a647]        # 4347ec <_IO_stdin_used@@Base+0x7ec>
  41a1a5:	mov    rsi,rdx
  41a1a8:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41a1ac:	add    rdx,rsi
  41a1af:	xor    r8d,r8d
  41a1b2:	xor    ecx,ecx
  41a1b4:	xor    esi,esi
  41a1b6:	xor    edi,edi
  41a1b8:	xor    ebp,ebp
  41a1ba:	xor    ebx,ebx
  41a1bc:	jmp    rdx
  41a1be:	movsx  r8,BYTE PTR [r15+0xe]
  41a1c3:	shl    r8,0x8
  41a1c7:	movsx  rcx,BYTE PTR [r15+0xd]
  41a1cc:	shl    rcx,0x10
  41a1d0:	or     rcx,r8
  41a1d3:	movsx  rsi,BYTE PTR [r15+0xc]
  41a1d8:	shl    rsi,0x18
  41a1dc:	or     rsi,rcx
  41a1df:	movsx  rdi,BYTE PTR [r15+0xb]
  41a1e4:	shl    rdi,0x20
  41a1e8:	or     rdi,rsi
  41a1eb:	movsx  rbp,BYTE PTR [r15+0xa]
  41a1f0:	shl    rbp,0x28
  41a1f4:	or     rbp,rdi
  41a1f7:	movsx  rbx,BYTE PTR [r15+0x9]
  41a1fc:	shl    rbx,0x30
  41a200:	or     rbx,rbp
  41a203:	movzx  ecx,BYTE PTR [r13+0x0]
  41a208:	shl    rcx,0x38
  41a20c:	or     rcx,rbx
  41a20f:	movabs rbx,0x7261637465720000
  41a219:	mov    rdx,rcx
  41a21c:	shr    rdx,0x10
  41a220:	movabs rsi,0x6b5f74797065
  41a22a:	cmp    rdx,rsi
  41a22d:	jne    41a2bd <main@@Base+0x131ed>
  41a233:	cmp    rax,0x7
  41a237:	jl     41ae30 <main@@Base+0x13d60>
  41a23d:	mov    rax,QWORD PTR [rsp+0x8]
  41a242:	cmp    DWORD PTR [rax],0x0
  41a245:	movzx  eax,BYTE PTR [r15+0xe]
  41a24a:	je     41a729 <main@@Base+0x13659>
  41a250:	cmp    al,0x21
  41a252:	jl     41a25c <main@@Base+0x1318c>
  41a254:	cmp    al,0x3a
  41a256:	jne    41ae30 <main@@Base+0x13d60>
  41a25c:	add    r15,0xe
  41a260:	mov    rax,QWORD PTR [rsp+0x8]
  41a265:	mov    DWORD PTR [rax],0x0
  41a26b:	jmp    41a735 <main@@Base+0x13665>
  41a270:	and    rcx,0xffffffffffff0000
  41a277:	cmp    rcx,rbx
  41a27a:	jne    41ae30 <main@@Base+0x13d60>
  41a280:	cmp    rax,0x7
  41a284:	jl     41ae30 <main@@Base+0x13d60>
  41a28a:	mov    rax,QWORD PTR [rsp+0x8]
  41a28f:	cmp    DWORD PTR [rax],0x0
  41a292:	movzx  eax,BYTE PTR [r15+0xe]
  41a297:	je     41a9f4 <main@@Base+0x13924>
  41a29d:	cmp    al,0x21
  41a29f:	jl     41a2a9 <main@@Base+0x131d9>
  41a2a1:	cmp    al,0x3a
  41a2a3:	jne    41ae30 <main@@Base+0x13d60>
  41a2a9:	add    r15,0xe
  41a2ad:	mov    rax,QWORD PTR [rsp+0x8]
  41a2b2:	mov    DWORD PTR [rax],0x0
  41a2b8:	jmp    41aa00 <main@@Base+0x13930>
  41a2bd:	shr    rcx,0x38
  41a2c1:	cmp    rcx,0x6b
  41a2c5:	jne    41ae30 <main@@Base+0x13d60>
  41a2cb:	cmp    rax,0x2
  41a2cf:	jl     41ae30 <main@@Base+0x13d60>
  41a2d5:	mov    rax,QWORD PTR [rsp+0x8]
  41a2da:	cmp    DWORD PTR [rax],0x0
  41a2dd:	movzx  eax,BYTE PTR [r15+0x9]
  41a2e2:	je     41aa3c <main@@Base+0x1396c>
  41a2e8:	cmp    al,0x21
  41a2ea:	jl     41a2f4 <main@@Base+0x13224>
  41a2ec:	cmp    al,0x3a
  41a2ee:	jne    41ae30 <main@@Base+0x13d60>
  41a2f4:	add    r15,0x9
  41a2f8:	mov    rax,QWORD PTR [rsp+0x8]
  41a2fd:	mov    DWORD PTR [rax],0x0
  41a303:	jmp    41aa48 <main@@Base+0x13978>
  41a308:	lea    rcx,[rax-0x1]
  41a30c:	cmp    rcx,0x6
  41a310:	ja     41ae30 <main@@Base+0x13d60>
  41a316:	lea    rdx,[rip+0x1a507]        # 434824 <_IO_stdin_used@@Base+0x824>
  41a31d:	mov    rsi,rdx
  41a320:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41a324:	add    rdx,rsi
  41a327:	xor    r8d,r8d
  41a32a:	xor    ecx,ecx
  41a32c:	xor    esi,esi
  41a32e:	xor    edi,edi
  41a330:	xor    ebp,ebp
  41a332:	xor    ebx,ebx
  41a334:	jmp    rdx
  41a336:	movsx  r8,BYTE PTR [r15+0x16]
  41a33b:	shl    r8,0x8
  41a33f:	movsx  rcx,BYTE PTR [r15+0x15]
  41a344:	shl    rcx,0x10
  41a348:	or     rcx,r8
  41a34b:	movsx  rsi,BYTE PTR [r15+0x14]
  41a350:	shl    rsi,0x18
  41a354:	or     rsi,rcx
  41a357:	movsx  rdi,BYTE PTR [r15+0x13]
  41a35c:	shl    rdi,0x20
  41a360:	or     rdi,rsi
  41a363:	movsx  rbp,BYTE PTR [r15+0x12]
  41a368:	shl    rbp,0x28
  41a36c:	or     rbp,rdi
  41a36f:	movsx  rbx,BYTE PTR [r15+0x11]
  41a374:	shl    rbx,0x30
  41a378:	or     rbx,rbp
  41a37b:	movzx  ecx,BYTE PTR [r13+0x0]
  41a380:	shl    rcx,0x38
  41a384:	or     rcx,rbx
  41a387:	movabs rbx,0x7261637465720000
  41a391:	shr    rcx,0x28
  41a395:	cmp    rcx,0x797065
  41a39c:	jne    41ae30 <main@@Base+0x13d60>
  41a3a2:	cmp    rax,0x4
  41a3a6:	jl     41ae30 <main@@Base+0x13d60>
  41a3ac:	mov    rax,QWORD PTR [rsp+0x8]
  41a3b1:	cmp    DWORD PTR [rax],0x0
  41a3b4:	movzx  eax,BYTE PTR [r15+0x13]
  41a3b9:	je     41aa84 <main@@Base+0x139b4>
  41a3bf:	cmp    al,0x21
  41a3c1:	jl     41a3cb <main@@Base+0x132fb>
  41a3c3:	cmp    al,0x3a
  41a3c5:	jne    41ae30 <main@@Base+0x13d60>
  41a3cb:	add    r15,0x13
  41a3cf:	mov    rax,QWORD PTR [rsp+0x8]
  41a3d4:	mov    DWORD PTR [rax],0x0
  41a3da:	jmp    41aa90 <main@@Base+0x139c0>
  41a3df:	mov    rax,r15
  41a3e2:	cmp    cl,0x22
  41a3e5:	jne    41a930 <main@@Base+0x13860>
  41a3eb:	lea    rsi,[r15+0x6]
  41a3ef:	mov    rax,r12
  41a3f2:	sub    rax,rsi
  41a3f5:	cmp    rax,0x2
  41a3f9:	jl     41a4b9 <main@@Base+0x133e9>
  41a3ff:	cmp    BYTE PTR [rsi],0x20
  41a402:	jg     41a4c7 <main@@Base+0x133f7>
  41a408:	jne    41a4b9 <main@@Base+0x133e9>
  41a40e:	cmp    BYTE PTR [rsi+0x1],0x20
  41a412:	jle    41a4b9 <main@@Base+0x133e9>
  41a418:	inc    rsi
  41a41b:	cmp    rsi,r12
  41a41e:	jne    41a4cc <main@@Base+0x133fc>
  41a424:	jmp    41a510 <main@@Base+0x13440>
  41a429:	cmp    al,0x22
  41a42b:	jne    41ae30 <main@@Base+0x13d60>
  41a431:	add    r15,0x10
  41a435:	mov    rax,r12
  41a438:	sub    rax,r15
  41a43b:	cmp    rax,0x2
  41a43f:	jl     41a53c <main@@Base+0x1346c>
  41a445:	cmp    BYTE PTR [r15],0x20
  41a449:	jg     41a54d <main@@Base+0x1347d>
  41a44f:	jne    41a53c <main@@Base+0x1346c>
  41a455:	cmp    BYTE PTR [r15+0x1],0x20
  41a45a:	jle    41a53c <main@@Base+0x1346c>
  41a460:	inc    r15
  41a463:	cmp    r15,r12
  41a466:	jne    41a556 <main@@Base+0x13486>
  41a46c:	jmp    41a602 <main@@Base+0x13532>
  41a471:	cmp    al,0x22
  41a473:	jne    41ae30 <main@@Base+0x13d60>
  41a479:	add    r15,0xb
  41a47d:	mov    rax,r12
  41a480:	sub    rax,r15
  41a483:	cmp    rax,0x2
  41a487:	jl     41a5a3 <main@@Base+0x134d3>
  41a48d:	cmp    BYTE PTR [r15],0x20
  41a491:	jg     41a5b4 <main@@Base+0x134e4>
  41a497:	jne    41a5a3 <main@@Base+0x134d3>
  41a49d:	cmp    BYTE PTR [r15+0x1],0x20
  41a4a2:	jle    41a5a3 <main@@Base+0x134d3>
  41a4a8:	inc    r15
  41a4ab:	cmp    r15,r12
  41a4ae:	jne    41a5b9 <main@@Base+0x134e9>
  41a4b4:	jmp    41a623 <main@@Base+0x13553>
  41a4b9:	mov    rdi,r14
  41a4bc:	mov    rdx,r12
  41a4bf:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a4c4:	mov    rsi,rax
  41a4c7:	cmp    rsi,r12
  41a4ca:	je     41a510 <main@@Base+0x13440>
  41a4cc:	cmp    BYTE PTR [rsi],0x3a
  41a4cf:	jne    41a510 <main@@Base+0x13440>
  41a4d1:	lea    rax,[rsi+0x1]
  41a4d5:	mov    rcx,r12
  41a4d8:	sub    rcx,rax
  41a4db:	cmp    rcx,0x2
  41a4df:	jl     41a922 <main@@Base+0x13852>
  41a4e5:	cmp    BYTE PTR [rax],0x20
  41a4e8:	jg     41a930 <main@@Base+0x13860>
  41a4ee:	jne    41a922 <main@@Base+0x13852>
  41a4f4:	cmp    BYTE PTR [rsi+0x2],0x20
  41a4f8:	jle    41a922 <main@@Base+0x13852>
  41a4fe:	add    rsi,0x2
  41a502:	mov    rax,rsi
  41a505:	cmp    r15,rax
  41a508:	jne    41a939 <main@@Base+0x13869>
  41a50e:	jmp    41a529 <main@@Base+0x13459>
  41a510:	mov    rdi,r14
  41a513:	mov    rdx,r12
  41a516:	mov    ecx,0x4
  41a51b:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a520:	cmp    r15,rax
  41a523:	jne    41a939 <main@@Base+0x13869>
  41a529:	mov    rdi,r14
  41a52c:	mov    rsi,r15
  41a52f:	mov    rdx,r12
  41a532:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41a537:	jmp    41ae42 <main@@Base+0x13d72>
  41a53c:	mov    rdi,r14
  41a53f:	mov    rsi,r15
  41a542:	mov    rdx,r12
  41a545:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a54a:	mov    r15,rax
  41a54d:	cmp    r15,r12
  41a550:	je     41a602 <main@@Base+0x13532>
  41a556:	cmp    BYTE PTR [r15],0x3a
  41a55a:	jne    41a602 <main@@Base+0x13532>
  41a560:	lea    rax,[r15+0x1]
  41a564:	mov    rcx,r12
  41a567:	sub    rcx,rax
  41a56a:	cmp    rcx,0x2
  41a56e:	jl     41a96c <main@@Base+0x1389c>
  41a574:	cmp    BYTE PTR [rax],0x20
  41a577:	jg     41a97a <main@@Base+0x138aa>
  41a57d:	jne    41a96c <main@@Base+0x1389c>
  41a583:	cmp    BYTE PTR [r15+0x2],0x20
  41a588:	jle    41a96c <main@@Base+0x1389c>
  41a58e:	add    r15,0x2
  41a592:	mov    rax,r15
  41a595:	cmp    r13,rax
  41a598:	jne    41a983 <main@@Base+0x138b3>
  41a59e:	jmp    41ae30 <main@@Base+0x13d60>
  41a5a3:	mov    rdi,r14
  41a5a6:	mov    rsi,r15
  41a5a9:	mov    rdx,r12
  41a5ac:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a5b1:	mov    r15,rax
  41a5b4:	cmp    r15,r12
  41a5b7:	je     41a623 <main@@Base+0x13553>
  41a5b9:	cmp    BYTE PTR [r15],0x3a
  41a5bd:	jne    41a623 <main@@Base+0x13553>
  41a5bf:	lea    rax,[r15+0x1]
  41a5c3:	mov    rcx,r12
  41a5c6:	sub    rcx,rax
  41a5c9:	cmp    rcx,0x2
  41a5cd:	jl     41a9b0 <main@@Base+0x138e0>
  41a5d3:	cmp    BYTE PTR [rax],0x20
  41a5d6:	jg     41a9be <main@@Base+0x138ee>
  41a5dc:	jne    41a9b0 <main@@Base+0x138e0>
  41a5e2:	cmp    BYTE PTR [r15+0x2],0x20
  41a5e7:	jle    41a9b0 <main@@Base+0x138e0>
  41a5ed:	add    r15,0x2
  41a5f1:	mov    rax,r15
  41a5f4:	cmp    r13,rax
  41a5f7:	jne    41a9c7 <main@@Base+0x138f7>
  41a5fd:	jmp    41ae30 <main@@Base+0x13d60>
  41a602:	mov    rdi,r14
  41a605:	mov    rsi,r15
  41a608:	mov    rdx,r12
  41a60b:	mov    ecx,0x4
  41a610:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a615:	cmp    r13,rax
  41a618:	jne    41a983 <main@@Base+0x138b3>
  41a61e:	jmp    41ae30 <main@@Base+0x13d60>
  41a623:	mov    rdi,r14
  41a626:	mov    rsi,r15
  41a629:	mov    rdx,r12
  41a62c:	mov    ecx,0x4
  41a631:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a636:	cmp    r13,rax
  41a639:	jne    41a9c7 <main@@Base+0x138f7>
  41a63f:	jmp    41ae30 <main@@Base+0x13d60>
  41a644:	cmp    al,0x22
  41a646:	jne    41ae30 <main@@Base+0x13d60>
  41a64c:	add    r15,0x10
  41a650:	mov    rax,r12
  41a653:	sub    rax,r15
  41a656:	cmp    rax,0x2
  41a65a:	jl     41a675 <main@@Base+0x135a5>
  41a65c:	cmp    BYTE PTR [r15],0x20
  41a660:	jg     41a686 <main@@Base+0x135b6>
  41a662:	jne    41a675 <main@@Base+0x135a5>
  41a664:	cmp    BYTE PTR [r15+0x1],0x20
  41a669:	jle    41a675 <main@@Base+0x135a5>
  41a66b:	inc    r15
  41a66e:	cmp    r15,r12
  41a671:	jne    41a68b <main@@Base+0x135bb>
  41a673:	jmp    41a6d4 <main@@Base+0x13604>
  41a675:	mov    rdi,r14
  41a678:	mov    rsi,r15
  41a67b:	mov    rdx,r12
  41a67e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a683:	mov    r15,rax
  41a686:	cmp    r15,r12
  41a689:	je     41a6d4 <main@@Base+0x13604>
  41a68b:	cmp    BYTE PTR [r15],0x3a
  41a68f:	jne    41a6d4 <main@@Base+0x13604>
  41a691:	lea    rax,[r15+0x1]
  41a695:	mov    rcx,r12
  41a698:	sub    rcx,rax
  41a69b:	cmp    rcx,0x2
  41a69f:	jl     41abd4 <main@@Base+0x13b04>
  41a6a5:	cmp    BYTE PTR [rax],0x20
  41a6a8:	jg     41abe2 <main@@Base+0x13b12>
  41a6ae:	jne    41abd4 <main@@Base+0x13b04>
  41a6b4:	cmp    BYTE PTR [r15+0x2],0x20
  41a6b9:	jle    41abd4 <main@@Base+0x13b04>
  41a6bf:	add    r15,0x2
  41a6c3:	mov    rax,r15
  41a6c6:	cmp    r13,rax
  41a6c9:	jne    41abeb <main@@Base+0x13b1b>
  41a6cf:	jmp    41ae30 <main@@Base+0x13d60>
  41a6d4:	mov    rdi,r14
  41a6d7:	mov    rsi,r15
  41a6da:	mov    rdx,r12
  41a6dd:	mov    ecx,0x4
  41a6e2:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a6e7:	cmp    r13,rax
  41a6ea:	jne    41abeb <main@@Base+0x13b1b>
  41a6f0:	jmp    41ae30 <main@@Base+0x13d60>
  41a6f5:	cmp    al,0x22
  41a6f7:	jne    41ae30 <main@@Base+0x13d60>
  41a6fd:	add    r15,0xb
  41a701:	mov    rax,r12
  41a704:	sub    rax,r15
  41a707:	cmp    rax,0x2
  41a70b:	jl     41a769 <main@@Base+0x13699>
  41a70d:	cmp    BYTE PTR [r15],0x20
  41a711:	jg     41a77a <main@@Base+0x136aa>
  41a713:	jne    41a769 <main@@Base+0x13699>
  41a715:	cmp    BYTE PTR [r15+0x1],0x20
  41a71a:	jle    41a769 <main@@Base+0x13699>
  41a71c:	inc    r15
  41a71f:	cmp    r15,r12
  41a722:	jne    41a783 <main@@Base+0x136b3>
  41a724:	jmp    41a82f <main@@Base+0x1375f>
  41a729:	cmp    al,0x22
  41a72b:	jne    41ae30 <main@@Base+0x13d60>
  41a731:	add    r15,0xf
  41a735:	mov    rax,r12
  41a738:	sub    rax,r15
  41a73b:	cmp    rax,0x2
  41a73f:	jl     41a7d0 <main@@Base+0x13700>
  41a745:	cmp    BYTE PTR [r15],0x20
  41a749:	jg     41a7e1 <main@@Base+0x13711>
  41a74f:	jne    41a7d0 <main@@Base+0x13700>
  41a751:	cmp    BYTE PTR [r15+0x1],0x20
  41a756:	jle    41a7d0 <main@@Base+0x13700>
  41a758:	inc    r15
  41a75b:	cmp    r15,r12
  41a75e:	jne    41a7e6 <main@@Base+0x13716>
  41a764:	jmp    41a850 <main@@Base+0x13780>
  41a769:	mov    rdi,r14
  41a76c:	mov    rsi,r15
  41a76f:	mov    rdx,r12
  41a772:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a777:	mov    r15,rax
  41a77a:	cmp    r15,r12
  41a77d:	je     41a82f <main@@Base+0x1375f>
  41a783:	cmp    BYTE PTR [r15],0x3a
  41a787:	jne    41a82f <main@@Base+0x1375f>
  41a78d:	lea    rax,[r15+0x1]
  41a791:	mov    rcx,r12
  41a794:	sub    rcx,rax
  41a797:	cmp    rcx,0x2
  41a79b:	jl     41acae <main@@Base+0x13bde>
  41a7a1:	cmp    BYTE PTR [rax],0x20
  41a7a4:	jg     41acbc <main@@Base+0x13bec>
  41a7aa:	jne    41acae <main@@Base+0x13bde>
  41a7b0:	cmp    BYTE PTR [r15+0x2],0x20
  41a7b5:	jle    41acae <main@@Base+0x13bde>
  41a7bb:	add    r15,0x2
  41a7bf:	mov    rax,r15
  41a7c2:	cmp    r13,rax
  41a7c5:	jne    41acc5 <main@@Base+0x13bf5>
  41a7cb:	jmp    41ae30 <main@@Base+0x13d60>
  41a7d0:	mov    rdi,r14
  41a7d3:	mov    rsi,r15
  41a7d6:	mov    rdx,r12
  41a7d9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a7de:	mov    r15,rax
  41a7e1:	cmp    r15,r12
  41a7e4:	je     41a850 <main@@Base+0x13780>
  41a7e6:	cmp    BYTE PTR [r15],0x3a
  41a7ea:	jne    41a850 <main@@Base+0x13780>
  41a7ec:	lea    rax,[r15+0x1]
  41a7f0:	mov    rcx,r12
  41a7f3:	sub    rcx,rax
  41a7f6:	cmp    rcx,0x2
  41a7fa:	jl     41ace7 <main@@Base+0x13c17>
  41a800:	cmp    BYTE PTR [rax],0x20
  41a803:	jg     41acf5 <main@@Base+0x13c25>
  41a809:	jne    41ace7 <main@@Base+0x13c17>
  41a80f:	cmp    BYTE PTR [r15+0x2],0x20
  41a814:	jle    41ace7 <main@@Base+0x13c17>
  41a81a:	add    r15,0x2
  41a81e:	mov    rax,r15
  41a821:	cmp    r13,rax
  41a824:	jne    41acfe <main@@Base+0x13c2e>
  41a82a:	jmp    41ae30 <main@@Base+0x13d60>
  41a82f:	mov    rdi,r14
  41a832:	mov    rsi,r15
  41a835:	mov    rdx,r12
  41a838:	mov    ecx,0x4
  41a83d:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a842:	cmp    r13,rax
  41a845:	jne    41acc5 <main@@Base+0x13bf5>
  41a84b:	jmp    41ae30 <main@@Base+0x13d60>
  41a850:	mov    rdi,r14
  41a853:	mov    rsi,r15
  41a856:	mov    rdx,r12
  41a859:	mov    ecx,0x4
  41a85e:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a863:	cmp    r13,rax
  41a866:	jne    41acfe <main@@Base+0x13c2e>
  41a86c:	jmp    41ae30 <main@@Base+0x13d60>
  41a871:	cmp    al,0x22
  41a873:	jne    41ae30 <main@@Base+0x13d60>
  41a879:	add    r15,0xb
  41a87d:	mov    rax,r12
  41a880:	sub    rax,r15
  41a883:	cmp    rax,0x2
  41a887:	jl     41a8a2 <main@@Base+0x137d2>
  41a889:	cmp    BYTE PTR [r15],0x20
  41a88d:	jg     41a8b3 <main@@Base+0x137e3>
  41a88f:	jne    41a8a2 <main@@Base+0x137d2>
  41a891:	cmp    BYTE PTR [r15+0x1],0x20
  41a896:	jle    41a8a2 <main@@Base+0x137d2>
  41a898:	inc    r15
  41a89b:	cmp    r15,r12
  41a89e:	jne    41a8b8 <main@@Base+0x137e8>
  41a8a0:	jmp    41a901 <main@@Base+0x13831>
  41a8a2:	mov    rdi,r14
  41a8a5:	mov    rsi,r15
  41a8a8:	mov    rdx,r12
  41a8ab:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a8b0:	mov    r15,rax
  41a8b3:	cmp    r15,r12
  41a8b6:	je     41a901 <main@@Base+0x13831>
  41a8b8:	cmp    BYTE PTR [r15],0x3a
  41a8bc:	jne    41a901 <main@@Base+0x13831>
  41a8be:	lea    rax,[r15+0x1]
  41a8c2:	mov    rcx,r12
  41a8c5:	sub    rcx,rax
  41a8c8:	cmp    rcx,0x2
  41a8cc:	jl     41ad2b <main@@Base+0x13c5b>
  41a8d2:	cmp    BYTE PTR [rax],0x20
  41a8d5:	jg     41ad39 <main@@Base+0x13c69>
  41a8db:	jne    41ad2b <main@@Base+0x13c5b>
  41a8e1:	cmp    BYTE PTR [r15+0x2],0x20
  41a8e6:	jle    41ad2b <main@@Base+0x13c5b>
  41a8ec:	add    r15,0x2
  41a8f0:	mov    rax,r15
  41a8f3:	cmp    r13,rax
  41a8f6:	jne    41ad42 <main@@Base+0x13c72>
  41a8fc:	jmp    41ae30 <main@@Base+0x13d60>
  41a901:	mov    rdi,r14
  41a904:	mov    rsi,r15
  41a907:	mov    rdx,r12
  41a90a:	mov    ecx,0x4
  41a90f:	call   424090 <flatcc_json_parser_set_error@@Base>
  41a914:	cmp    r13,rax
  41a917:	jne    41ad42 <main@@Base+0x13c72>
  41a91d:	jmp    41ae30 <main@@Base+0x13d60>
  41a922:	mov    rdi,r14
  41a925:	mov    rsi,rax
  41a928:	mov    rdx,r12
  41a92b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a930:	cmp    r15,rax
  41a933:	je     41a529 <main@@Base+0x13459>
  41a939:	mov    r9,QWORD PTR [rsp+0x10]
  41a93e:	sub    rsp,0x8
  41a942:	mov    ecx,0x3
  41a947:	mov    rdi,r14
  41a94a:	mov    rsi,rax
  41a94d:	mov    rdx,r12
  41a950:	mov    r8d,0x7
  41a956:	lea    rax,[rip+0x7b3]        # 41b110 <main@@Base+0x14040>
  41a95d:	push   rax
  41a95e:	call   4264b0 <flatcc_json_parser_union@@Base>
  41a963:	add    rsp,0x10
  41a967:	jmp    41ae42 <main@@Base+0x13d72>
  41a96c:	mov    rdi,r14
  41a96f:	mov    rsi,rax
  41a972:	mov    rdx,r12
  41a975:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a97a:	cmp    r13,rax
  41a97d:	je     41ae30 <main@@Base+0x13d60>
  41a983:	mov    r9,QWORD PTR [rsp+0x10]
  41a988:	mov    ecx,0x1
  41a98d:	mov    rdi,r14
  41a990:	mov    rsi,rax
  41a993:	mov    rdx,r12
  41a996:	mov    r8d,0x3
  41a99c:	lea    rax,[rip+0x76d]        # 41b110 <main@@Base+0x14040>
  41a9a3:	push   rax
  41a9a4:	lea    rax,[rip+0x28c95]        # 443640 <__data_start@@Base+0x590>
  41a9ab:	jmp    41ae21 <main@@Base+0x13d51>
  41a9b0:	mov    rdi,r14
  41a9b3:	mov    rsi,rax
  41a9b6:	mov    rdx,r12
  41a9b9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41a9be:	cmp    r13,rax
  41a9c1:	je     41ae30 <main@@Base+0x13d60>
  41a9c7:	mov    r9,QWORD PTR [rsp+0x10]
  41a9cc:	mov    ecx,0x3
  41a9d1:	mov    rdi,r14
  41a9d4:	mov    rsi,rax
  41a9d7:	mov    rdx,r12
  41a9da:	mov    r8d,0x7
  41a9e0:	lea    rax,[rip+0x729]        # 41b110 <main@@Base+0x14040>
  41a9e7:	push   rax
  41a9e8:	lea    rax,[rip+0x28c71]        # 443660 <__data_start@@Base+0x5b0>
  41a9ef:	jmp    41ae21 <main@@Base+0x13d51>
  41a9f4:	cmp    al,0x22
  41a9f6:	jne    41ae30 <main@@Base+0x13d60>
  41a9fc:	add    r15,0xf
  41aa00:	mov    rax,r12
  41aa03:	sub    rax,r15
  41aa06:	cmp    rax,0x2
  41aa0a:	jl     41aacc <main@@Base+0x139fc>
  41aa10:	cmp    BYTE PTR [r15],0x20
  41aa14:	jg     41aadd <main@@Base+0x13a0d>
  41aa1a:	jne    41aacc <main@@Base+0x139fc>
  41aa20:	cmp    BYTE PTR [r15+0x1],0x20
  41aa25:	jle    41aacc <main@@Base+0x139fc>
  41aa2b:	inc    r15
  41aa2e:	cmp    r15,r12
  41aa31:	jne    41aae6 <main@@Base+0x13a16>
  41aa37:	jmp    41ab92 <main@@Base+0x13ac2>
  41aa3c:	cmp    al,0x22
  41aa3e:	jne    41ae30 <main@@Base+0x13d60>
  41aa44:	add    r15,0xa
  41aa48:	mov    rax,r12
  41aa4b:	sub    rax,r15
  41aa4e:	cmp    rax,0x2
  41aa52:	jl     41ab33 <main@@Base+0x13a63>
  41aa58:	cmp    BYTE PTR [r15],0x20
  41aa5c:	jg     41ab44 <main@@Base+0x13a74>
  41aa62:	jne    41ab33 <main@@Base+0x13a63>
  41aa68:	cmp    BYTE PTR [r15+0x1],0x20
  41aa6d:	jle    41ab33 <main@@Base+0x13a63>
  41aa73:	inc    r15
  41aa76:	cmp    r15,r12
  41aa79:	jne    41ab49 <main@@Base+0x13a79>
  41aa7f:	jmp    41abb3 <main@@Base+0x13ae3>
  41aa84:	cmp    al,0x22
  41aa86:	jne    41ae30 <main@@Base+0x13d60>
  41aa8c:	add    r15,0x14
  41aa90:	mov    rax,r12
  41aa93:	sub    rax,r15
  41aa96:	cmp    rax,0x2
  41aa9a:	jl     41ac2e <main@@Base+0x13b5e>
  41aaa0:	cmp    BYTE PTR [r15],0x20
  41aaa4:	jg     41ac3f <main@@Base+0x13b6f>
  41aaaa:	jne    41ac2e <main@@Base+0x13b5e>
  41aab0:	cmp    BYTE PTR [r15+0x1],0x20
  41aab5:	jle    41ac2e <main@@Base+0x13b5e>
  41aabb:	inc    r15
  41aabe:	cmp    r15,r12
  41aac1:	jne    41ac44 <main@@Base+0x13b74>
  41aac7:	jmp    41ac8d <main@@Base+0x13bbd>
  41aacc:	mov    rdi,r14
  41aacf:	mov    rsi,r15
  41aad2:	mov    rdx,r12
  41aad5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41aada:	mov    r15,rax
  41aadd:	cmp    r15,r12
  41aae0:	je     41ab92 <main@@Base+0x13ac2>
  41aae6:	cmp    BYTE PTR [r15],0x3a
  41aaea:	jne    41ab92 <main@@Base+0x13ac2>
  41aaf0:	lea    rax,[r15+0x1]
  41aaf4:	mov    rcx,r12
  41aaf7:	sub    rcx,rax
  41aafa:	cmp    rcx,0x2
  41aafe:	jl     41ad71 <main@@Base+0x13ca1>
  41ab04:	cmp    BYTE PTR [rax],0x20
  41ab07:	jg     41ad7f <main@@Base+0x13caf>
  41ab0d:	jne    41ad71 <main@@Base+0x13ca1>
  41ab13:	cmp    BYTE PTR [r15+0x2],0x20
  41ab18:	jle    41ad71 <main@@Base+0x13ca1>
  41ab1e:	add    r15,0x2
  41ab22:	mov    rax,r15
  41ab25:	cmp    r13,rax
  41ab28:	jne    41ad88 <main@@Base+0x13cb8>
  41ab2e:	jmp    41ae30 <main@@Base+0x13d60>
  41ab33:	mov    rdi,r14
  41ab36:	mov    rsi,r15
  41ab39:	mov    rdx,r12
  41ab3c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41ab41:	mov    r15,rax
  41ab44:	cmp    r15,r12
  41ab47:	je     41abb3 <main@@Base+0x13ae3>
  41ab49:	cmp    BYTE PTR [r15],0x3a
  41ab4d:	jne    41abb3 <main@@Base+0x13ae3>
  41ab4f:	lea    rax,[r15+0x1]
  41ab53:	mov    rcx,r12
  41ab56:	sub    rcx,rax
  41ab59:	cmp    rcx,0x2
  41ab5d:	jl     41ada7 <main@@Base+0x13cd7>
  41ab63:	cmp    BYTE PTR [rax],0x20
  41ab66:	jg     41adb5 <main@@Base+0x13ce5>
  41ab6c:	jne    41ada7 <main@@Base+0x13cd7>
  41ab72:	cmp    BYTE PTR [r15+0x2],0x20
  41ab77:	jle    41ada7 <main@@Base+0x13cd7>
  41ab7d:	add    r15,0x2
  41ab81:	mov    rax,r15
  41ab84:	cmp    r13,rax
  41ab87:	jne    41adba <main@@Base+0x13cea>
  41ab8d:	jmp    41ae30 <main@@Base+0x13d60>
  41ab92:	mov    rdi,r14
  41ab95:	mov    rsi,r15
  41ab98:	mov    rdx,r12
  41ab9b:	mov    ecx,0x4
  41aba0:	call   424090 <flatcc_json_parser_set_error@@Base>
  41aba5:	cmp    r13,rax
  41aba8:	jne    41ad88 <main@@Base+0x13cb8>
  41abae:	jmp    41ae30 <main@@Base+0x13d60>
  41abb3:	mov    rdi,r14
  41abb6:	mov    rsi,r15
  41abb9:	mov    rdx,r12
  41abbc:	mov    ecx,0x4
  41abc1:	call   424090 <flatcc_json_parser_set_error@@Base>
  41abc6:	cmp    r13,rax
  41abc9:	jne    41adba <main@@Base+0x13cea>
  41abcf:	jmp    41ae30 <main@@Base+0x13d60>
  41abd4:	mov    rdi,r14
  41abd7:	mov    rsi,rax
  41abda:	mov    rdx,r12
  41abdd:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41abe2:	cmp    r13,rax
  41abe5:	je     41ae30 <main@@Base+0x13d60>
  41abeb:	mov    r9,QWORD PTR [rsp+0x10]
  41abf0:	sub    rsp,0x8
  41abf4:	mov    ecx,0x4
  41abf9:	mov    rdi,r14
  41abfc:	mov    rsi,rax
  41abff:	mov    rdx,r12
  41ac02:	mov    r8d,0x9
  41ac08:	lea    rax,[rip+0x12a1]        # 41beb0 <main@@Base+0x14de0>
  41ac0f:	push   rax
  41ac10:	lea    rax,[rip+0x4f9]        # 41b110 <main@@Base+0x14040>
  41ac17:	push   rax
  41ac18:	lea    rax,[rip+0x28a61]        # 443680 <__data_start@@Base+0x5d0>
  41ac1f:	push   rax
  41ac20:	call   426ee0 <flatcc_json_parser_union_type_vector@@Base>
  41ac25:	add    rsp,0x20
  41ac29:	jmp    41ae3e <main@@Base+0x13d6e>
  41ac2e:	mov    rdi,r14
  41ac31:	mov    rsi,r15
  41ac34:	mov    rdx,r12
  41ac37:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41ac3c:	mov    r15,rax
  41ac3f:	cmp    r15,r12
  41ac42:	je     41ac8d <main@@Base+0x13bbd>
  41ac44:	cmp    BYTE PTR [r15],0x3a
  41ac48:	jne    41ac8d <main@@Base+0x13bbd>
  41ac4a:	lea    rax,[r15+0x1]
  41ac4e:	mov    rcx,r12
  41ac51:	sub    rcx,rax
  41ac54:	cmp    rcx,0x2
  41ac58:	jl     41ade6 <main@@Base+0x13d16>
  41ac5e:	cmp    BYTE PTR [rax],0x20
  41ac61:	jg     41adf4 <main@@Base+0x13d24>
  41ac67:	jne    41ade6 <main@@Base+0x13d16>
  41ac6d:	cmp    BYTE PTR [r15+0x2],0x20
  41ac72:	jle    41ade6 <main@@Base+0x13d16>
  41ac78:	add    r15,0x2
  41ac7c:	mov    rax,r15
  41ac7f:	cmp    r13,rax
  41ac82:	jne    41adf9 <main@@Base+0x13d29>
  41ac88:	jmp    41ae30 <main@@Base+0x13d60>
  41ac8d:	mov    rdi,r14
  41ac90:	mov    rsi,r15
  41ac93:	mov    rdx,r12
  41ac96:	mov    ecx,0x4
  41ac9b:	call   424090 <flatcc_json_parser_set_error@@Base>
  41aca0:	cmp    r13,rax
  41aca3:	jne    41adf9 <main@@Base+0x13d29>
  41aca9:	jmp    41ae30 <main@@Base+0x13d60>
  41acae:	mov    rdi,r14
  41acb1:	mov    rsi,rax
  41acb4:	mov    rdx,r12
  41acb7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41acbc:	cmp    r13,rax
  41acbf:	je     41ae30 <main@@Base+0x13d60>
  41acc5:	mov    r9,QWORD PTR [rsp+0x10]
  41acca:	sub    rsp,0x8
  41acce:	mov    ecx,0x1
  41acd3:	mov    rdi,r14
  41acd6:	mov    rsi,rax
  41acd9:	mov    rdx,r12
  41acdc:	mov    r8d,0x3
  41ace2:	jmp    41add7 <main@@Base+0x13d07>
  41ace7:	mov    rdi,r14
  41acea:	mov    rsi,rax
  41aced:	mov    rdx,r12
  41acf0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41acf5:	cmp    r13,rax
  41acf8:	je     41ae30 <main@@Base+0x13d60>
  41acfe:	mov    r9,QWORD PTR [rsp+0x10]
  41ad03:	mov    ecx,0x2
  41ad08:	mov    rdi,r14
  41ad0b:	mov    rsi,rax
  41ad0e:	mov    rdx,r12
  41ad11:	mov    r8d,0x5
  41ad17:	lea    rax,[rip+0x3f2]        # 41b110 <main@@Base+0x14040>
  41ad1e:	push   rax
  41ad1f:	lea    rax,[rip+0x2899a]        # 4436c0 <__data_start@@Base+0x610>
  41ad26:	jmp    41ae21 <main@@Base+0x13d51>
  41ad2b:	mov    rdi,r14
  41ad2e:	mov    rsi,rax
  41ad31:	mov    rdx,r12
  41ad34:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41ad39:	cmp    r13,rax
  41ad3c:	je     41ae30 <main@@Base+0x13d60>
  41ad42:	mov    r9,QWORD PTR [rsp+0x10]
  41ad47:	sub    rsp,0x8
  41ad4b:	mov    ecx,0x4
  41ad50:	mov    rdi,r14
  41ad53:	mov    rsi,rax
  41ad56:	mov    rdx,r12
  41ad59:	mov    r8d,0x9
  41ad5f:	lea    rax,[rip+0x3aa]        # 41b110 <main@@Base+0x14040>
  41ad66:	push   rax
  41ad67:	call   426a40 <flatcc_json_parser_union_vector@@Base>
  41ad6c:	jmp    41ae27 <main@@Base+0x13d57>
  41ad71:	mov    rdi,r14
  41ad74:	mov    rsi,rax
  41ad77:	mov    rdx,r12
  41ad7a:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41ad7f:	cmp    r13,rax
  41ad82:	je     41ae30 <main@@Base+0x13d60>
  41ad88:	mov    r9,QWORD PTR [rsp+0x10]
  41ad8d:	sub    rsp,0x8
  41ad91:	mov    rdi,r14
  41ad94:	mov    rsi,rax
  41ad97:	mov    rdx,r12
  41ad9a:	mov    ecx,0x0
  41ad9f:	mov    r8d,0x1
  41ada5:	jmp    41add7 <main@@Base+0x13d07>
  41ada7:	mov    rdi,r14
  41adaa:	mov    rsi,rax
  41adad:	mov    rdx,r12
  41adb0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41adb5:	cmp    r13,rax
  41adb8:	je     41ae30 <main@@Base+0x13d60>
  41adba:	mov    r9,QWORD PTR [rsp+0x10]
  41adbf:	sub    rsp,0x8
  41adc3:	mov    ecx,0x2
  41adc8:	mov    rdi,r14
  41adcb:	mov    rsi,rax
  41adce:	mov    rdx,r12
  41add1:	mov    r8d,0x5
  41add7:	lea    rax,[rip+0x332]        # 41b110 <main@@Base+0x14040>
  41adde:	push   rax
  41addf:	call   4264b0 <flatcc_json_parser_union@@Base>
  41ade4:	jmp    41ae27 <main@@Base+0x13d57>
  41ade6:	mov    rdi,r14
  41ade9:	mov    rsi,rax
  41adec:	mov    rdx,r12
  41adef:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41adf4:	cmp    r13,rax
  41adf7:	je     41ae30 <main@@Base+0x13d60>
  41adf9:	mov    r9,QWORD PTR [rsp+0x10]
  41adfe:	mov    rdi,r14
  41ae01:	mov    rsi,rax
  41ae04:	mov    rdx,r12
  41ae07:	mov    ecx,0x0
  41ae0c:	mov    r8d,0x1
  41ae12:	lea    rax,[rip+0x2f7]        # 41b110 <main@@Base+0x14040>
  41ae19:	push   rax
  41ae1a:	lea    rax,[rip+0x2887f]        # 4436a0 <__data_start@@Base+0x5f0>
  41ae21:	push   rax
  41ae22:	call   4265c0 <flatcc_json_parser_union_type@@Base>
  41ae27:	add    rsp,0x10
  41ae2b:	jmp    41ae3e <main@@Base+0x13d6e>
  41ae2d:	nop    DWORD PTR [rax]
  41ae30:	mov    rdi,r14
  41ae33:	mov    rsi,r13
  41ae36:	mov    rdx,r12
  41ae39:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41ae3e:	mov    r13,QWORD PTR [rsp]
  41ae42:	mov    rcx,r12
  41ae45:	sub    rcx,rax
  41ae48:	cmp    rcx,0x2
  41ae4c:	jl     41ae70 <main@@Base+0x13da0>
  41ae4e:	cmp    BYTE PTR [rax],0x20
  41ae51:	jg     41ae7e <main@@Base+0x13dae>
  41ae53:	jne    41ae70 <main@@Base+0x13da0>
  41ae55:	cmp    BYTE PTR [rax+0x1],0x20
  41ae59:	jle    41ae70 <main@@Base+0x13da0>
  41ae5b:	inc    rax
  41ae5e:	cmp    rax,r12
  41ae61:	jne    41ae87 <main@@Base+0x13db7>
  41ae63:	jmp    41af18 <main@@Base+0x13e48>
  41ae68:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae70:	mov    rdi,r14
  41ae73:	mov    rsi,rax
  41ae76:	mov    rdx,r12
  41ae79:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41ae7e:	cmp    rax,r12
  41ae81:	je     41af18 <main@@Base+0x13e48>
  41ae87:	movzx  ecx,BYTE PTR [rax]
  41ae8a:	cmp    cl,0x2c
  41ae8d:	jne    41af2b <main@@Base+0x13e5b>
  41ae93:	lea    rsi,[rax+0x1]
  41ae97:	mov    rcx,r12
  41ae9a:	sub    rcx,rsi
  41ae9d:	cmp    rcx,0x2
  41aea1:	jl     41aec0 <main@@Base+0x13df0>
  41aea3:	cmp    BYTE PTR [rsi],0x20
  41aea6:	jg     41aece <main@@Base+0x13dfe>
  41aea8:	jne    41aec0 <main@@Base+0x13df0>
  41aeaa:	cmp    BYTE PTR [rax+0x2],0x20
  41aeae:	jle    41aec0 <main@@Base+0x13df0>
  41aeb0:	add    rax,0x2
  41aeb4:	jmp    41aecb <main@@Base+0x13dfb>
  41aeb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aec0:	mov    rdi,r14
  41aec3:	mov    rdx,r12
  41aec6:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41aecb:	mov    rsi,rax
  41aece:	cmp    rsi,r12
  41aed1:	je     41af67 <main@@Base+0x13e97>
  41aed7:	cmp    BYTE PTR [rsi],0x7d
  41aeda:	jne    419b20 <main@@Base+0x12a50>
  41aee0:	lea    rbx,[rsi+0x1]
  41aee4:	mov    rax,r12
  41aee7:	sub    rax,rbx
  41aeea:	cmp    rax,0x2
  41aeee:	jl     41af57 <main@@Base+0x13e87>
  41aef0:	cmp    BYTE PTR [rbx],0x20
  41aef3:	jg     419aac <main@@Base+0x129dc>
  41aef9:	jne    41af57 <main@@Base+0x13e87>
  41aefb:	cmp    BYTE PTR [rsi+0x2],0x20
  41aeff:	jle    41af57 <main@@Base+0x13e87>
  41af01:	add    rsi,0x2
  41af05:	mov    rbx,rsi
  41af08:	cmp    DWORD PTR [r14+0x20],0x0
  41af0d:	jne    419a21 <main@@Base+0x12951>
  41af13:	jmp    419ab7 <main@@Base+0x129e7>
  41af18:	mov    rbx,r12
  41af1b:	cmp    DWORD PTR [r14+0x20],0x0
  41af20:	jne    419a21 <main@@Base+0x12951>
  41af26:	jmp    419ab7 <main@@Base+0x129e7>
  41af2b:	cmp    cl,0x7d
  41af2e:	jne    41af6f <main@@Base+0x13e9f>
  41af30:	lea    rbx,[rax+0x1]
  41af34:	mov    rcx,r12
  41af37:	sub    rcx,rbx
  41af3a:	cmp    rcx,0x2
  41af3e:	jl     41af57 <main@@Base+0x13e87>
  41af40:	cmp    BYTE PTR [rbx],0x20
  41af43:	jg     419aac <main@@Base+0x129dc>
  41af49:	jne    41af57 <main@@Base+0x13e87>
  41af4b:	cmp    BYTE PTR [rax+0x2],0x20
  41af4f:	jle    41af57 <main@@Base+0x13e87>
  41af51:	add    rax,0x2
  41af55:	jmp    41af82 <main@@Base+0x13eb2>
  41af57:	mov    rdi,r14
  41af5a:	mov    rsi,rbx
  41af5d:	mov    rdx,r12
  41af60:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41af65:	jmp    41af82 <main@@Base+0x13eb2>
  41af67:	mov    rdi,r14
  41af6a:	mov    rsi,r12
  41af6d:	jmp    41af75 <main@@Base+0x13ea5>
  41af6f:	mov    rdi,r14
  41af72:	mov    rsi,rax
  41af75:	mov    rdx,r12
  41af78:	mov    ecx,0xa
  41af7d:	call   424090 <flatcc_json_parser_set_error@@Base>
  41af82:	mov    rbx,rax
  41af85:	cmp    DWORD PTR [r14+0x20],0x0
  41af8a:	jne    419a21 <main@@Base+0x12951>
  41af90:	jmp    419ab7 <main@@Base+0x129e7>
  41af95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af9f:	nop
  41afa0:	push   r14
  41afa2:	push   rbx
  41afa3:	mov    rbx,rdx
  41afa6:	sub    rbx,rsi
  41afa9:	cmp    rbx,0x8
  41afad:	jb     41afb6 <main@@Base+0x13ee6>
  41afaf:	movbe  rbx,QWORD PTR [rsi]
  41afb4:	jmp    41b024 <main@@Base+0x13f54>
  41afb6:	dec    rbx
  41afb9:	cmp    rbx,0x6
  41afbd:	ja     41b106 <main@@Base+0x14036>
  41afc3:	xor    eax,eax
  41afc5:	lea    r10,[rip+0x198c8]        # 434894 <_IO_stdin_used@@Base+0x894>
  41afcc:	movsxd rbx,DWORD PTR [r10+rbx*4]
  41afd0:	add    rbx,r10
  41afd3:	jmp    rbx
  41afd5:	movsx  rax,BYTE PTR [rsi+0x6]
  41afda:	shl    rax,0x8
  41afde:	movsx  rbx,BYTE PTR [rsi+0x5]
  41afe3:	shl    rbx,0x10
  41afe7:	or     rax,rbx
  41afea:	movsx  rbx,BYTE PTR [rsi+0x4]
  41afef:	shl    rbx,0x18
  41aff3:	or     rax,rbx
  41aff6:	movsx  rbx,BYTE PTR [rsi+0x3]
  41affb:	shl    rbx,0x20
  41afff:	or     rax,rbx
  41b002:	movsx  rbx,BYTE PTR [rsi+0x2]
  41b007:	shl    rbx,0x28
  41b00b:	or     rax,rbx
  41b00e:	movsx  rbx,BYTE PTR [rsi+0x1]
  41b013:	shl    rbx,0x30
  41b017:	or     rax,rbx
  41b01a:	movzx  ebx,BYTE PTR [rsi]
  41b01d:	shl    rbx,0x38
  41b021:	or     rbx,rax
  41b024:	movabs rax,0x4368617261637465
  41b02e:	cmp    rbx,rax
  41b031:	jne    41b106 <main@@Base+0x14036>
  41b037:	lea    r10,[rsi+0x8]
  41b03b:	mov    rax,rdx
  41b03e:	sub    rax,r10
  41b041:	cmp    rax,0x8
  41b045:	jb     41b057 <main@@Base+0x13f87>
  41b047:	movbe  rbx,QWORD PTR [r10]
  41b04c:	cmp    rax,0x2
  41b050:	jge    41b0ce <main@@Base+0x13ffe>
  41b052:	jmp    41b106 <main@@Base+0x14036>
  41b057:	lea    rbx,[rax-0x1]
  41b05b:	cmp    rbx,0x6
  41b05f:	ja     41b106 <main@@Base+0x14036>
  41b065:	xor    r11d,r11d
  41b068:	lea    r14,[rip+0x19841]        # 4348b0 <_IO_stdin_used@@Base+0x8b0>
  41b06f:	movsxd rbx,DWORD PTR [r14+rbx*4]
  41b073:	add    rbx,r14
  41b076:	jmp    rbx
  41b078:	movsx  r11,BYTE PTR [rsi+0xe]
  41b07d:	shl    r11,0x8
  41b081:	movsx  rbx,BYTE PTR [rsi+0xd]
  41b086:	shl    rbx,0x10
  41b08a:	or     r11,rbx
  41b08d:	movsx  rbx,BYTE PTR [rsi+0xc]
  41b092:	shl    rbx,0x18
  41b096:	or     r11,rbx
  41b099:	movsx  rbx,BYTE PTR [rsi+0xb]
  41b09e:	shl    rbx,0x20
  41b0a2:	or     r11,rbx
  41b0a5:	movsx  rbx,BYTE PTR [rsi+0xa]
  41b0aa:	shl    rbx,0x28
  41b0ae:	or     r11,rbx
  41b0b1:	movsx  rbx,BYTE PTR [rsi+0x9]
  41b0b6:	shl    rbx,0x30
  41b0ba:	or     r11,rbx
  41b0bd:	movzx  ebx,BYTE PTR [r10]
  41b0c1:	shl    rbx,0x38
  41b0c5:	or     rbx,r11
  41b0c8:	cmp    rax,0x2
  41b0cc:	jl     41b106 <main@@Base+0x14036>
  41b0ce:	movabs rax,0xff00000000000000
  41b0d8:	and    rbx,rax
  41b0db:	movabs rax,0x7200000000000000
  41b0e5:	cmp    rbx,rax
  41b0e8:	jne    41b106 <main@@Base+0x14036>
  41b0ea:	lea    rax,[rsi+0xa]
  41b0ee:	cmp    BYTE PTR [rsi+0x9],0x2e
  41b0f2:	cmovne rax,r10
  41b0f6:	cmp    rax,r10
  41b0f9:	je     41b106 <main@@Base+0x14036>
  41b0fb:	mov    rsi,rax
  41b0fe:	pop    rbx
  41b0ff:	pop    r14
  41b101:	jmp    415b10 <main@@Base+0xea40>
  41b106:	mov    rax,rsi
  41b109:	pop    rbx
  41b10a:	pop    r14
  41b10c:	ret    
  41b10d:	nop    DWORD PTR [rax]
  41b110:	push   rbp
  41b111:	push   r15
  41b113:	push   r14
  41b115:	push   r13
  41b117:	push   r12
  41b119:	push   rbx
  41b11a:	sub    rsp,0x18
  41b11e:	mov    r12,rdx
  41b121:	mov    rbx,rsi
  41b124:	mov    r14,rdi
  41b127:	mov    DWORD PTR [r8],0x0
  41b12e:	inc    cl
  41b130:	cmp    cl,0xc
  41b133:	ja     41b19f <main@@Base+0x140cf>
  41b135:	mov    r15,r8
  41b138:	movzx  eax,cl
  41b13b:	lea    rcx,[rip+0x1978a]        # 4348cc <_IO_stdin_used@@Base+0x8cc>
  41b142:	movsxd rax,DWORD PTR [rcx+rax*4]
  41b146:	add    rax,rcx
  41b149:	jmp    rax
  41b14b:	mov    rdi,r14
  41b14e:	mov    rsi,rbx
  41b151:	mov    rdx,r12
  41b154:	mov    rcx,r15
  41b157:	call   426120 <flatcc_json_parser_build_string@@Base>
  41b15c:	jmp    41b326 <main@@Base+0x14256>
  41b161:	mov    rdi,r14
  41b164:	mov    rsi,rbx
  41b167:	mov    rdx,r12
  41b16a:	mov    rcx,r15
  41b16d:	call   41bed0 <main@@Base+0x14e00>
  41b172:	jmp    41b326 <main@@Base+0x14256>
  41b177:	mov    rax,r12
  41b17a:	sub    rax,rbx
  41b17d:	cmp    rax,0x4
  41b181:	jl     41b18f <main@@Base+0x140bf>
  41b183:	cmp    DWORD PTR [rbx],0x6c6c756e
  41b189:	je     41b35e <main@@Base+0x1428e>
  41b18f:	mov    rdi,r14
  41b192:	mov    rsi,rbx
  41b195:	mov    rdx,r12
  41b198:	mov    ecx,0x1a
  41b19d:	jmp    41b1b8 <main@@Base+0x140e8>
  41b19f:	test   BYTE PTR [r14+0x10],0x1
  41b1a4:	jne    41b29c <main@@Base+0x141cc>
  41b1aa:	mov    rdi,r14
  41b1ad:	mov    rsi,rbx
  41b1b0:	mov    rdx,r12
  41b1b3:	mov    ecx,0xf
  41b1b8:	add    rsp,0x18
  41b1bc:	pop    rbx
  41b1bd:	pop    r12
  41b1bf:	pop    r13
  41b1c1:	pop    r14
  41b1c3:	pop    r15
  41b1c5:	pop    rbp
  41b1c6:	jmp    424090 <flatcc_json_parser_set_error@@Base>
  41b1cb:	mov    DWORD PTR [r15],0x0
  41b1d2:	mov    rdi,QWORD PTR [r14]
  41b1d5:	mov    esi,0x1
  41b1da:	call   41f6c0 <flatcc_builder_start_table@@Base>
  41b1df:	test   eax,eax
  41b1e1:	jne    41b313 <main@@Base+0x14243>
  41b1e7:	cmp    rbx,r12
  41b1ea:	je     41b2f2 <main@@Base+0x14222>
  41b1f0:	cmp    BYTE PTR [rbx],0x7b
  41b1f3:	jne    41b2f2 <main@@Base+0x14222>
  41b1f9:	lea    rsi,[rbx+0x1]
  41b1fd:	mov    rax,r12
  41b200:	sub    rax,rsi
  41b203:	cmp    rax,0x2
  41b207:	jl     41b7bc <main@@Base+0x146ec>
  41b20d:	cmp    BYTE PTR [rsi],0x20
  41b210:	jg     41b7ca <main@@Base+0x146fa>
  41b216:	jne    41b7bc <main@@Base+0x146ec>
  41b21c:	cmp    BYTE PTR [rbx+0x2],0x20
  41b220:	jle    41b7bc <main@@Base+0x146ec>
  41b226:	add    rbx,0x2
  41b22a:	mov    rsi,rbx
  41b22d:	jmp    41b7ca <main@@Base+0x146fa>
  41b232:	mov    DWORD PTR [r15],0x0
  41b239:	mov    rdi,QWORD PTR [r14]
  41b23c:	mov    esi,0x2
  41b241:	mov    edx,0x2
  41b246:	call   41e770 <flatcc_builder_start_struct@@Base>
  41b24b:	test   rax,rax
  41b24e:	je     41b2ea <main@@Base+0x1421a>
  41b254:	cmp    rbx,r12
  41b257:	je     41b2b8 <main@@Base+0x141e8>
  41b259:	cmp    BYTE PTR [rbx],0x7b
  41b25c:	jne    41b2b8 <main@@Base+0x141e8>
  41b25e:	mov    QWORD PTR [rsp+0x10],rax
  41b263:	lea    rax,[rbx+0x1]
  41b267:	mov    rcx,r12
  41b26a:	sub    rcx,rax
  41b26d:	cmp    rcx,0x2
  41b271:	jl     41b364 <main@@Base+0x14294>
  41b277:	cmp    BYTE PTR [rax],0x20
  41b27a:	jg     41b372 <main@@Base+0x142a2>
  41b280:	jne    41b364 <main@@Base+0x14294>
  41b286:	cmp    BYTE PTR [rbx+0x2],0x20
  41b28a:	jle    41b364 <main@@Base+0x14294>
  41b290:	add    rbx,0x2
  41b294:	mov    rax,rbx
  41b297:	jmp    41b372 <main@@Base+0x142a2>
  41b29c:	mov    rdi,r14
  41b29f:	mov    rsi,rbx
  41b2a2:	mov    rdx,r12
  41b2a5:	add    rsp,0x18
  41b2a9:	pop    rbx
  41b2aa:	pop    r12
  41b2ac:	pop    r13
  41b2ae:	pop    r14
  41b2b0:	pop    r15
  41b2b2:	pop    rbp
  41b2b3:	jmp    424810 <flatcc_json_parser_generic_json@@Base>
  41b2b8:	mov    rdi,r14
  41b2bb:	mov    rsi,rbx
  41b2be:	mov    rdx,r12
  41b2c1:	mov    ecx,0x15
  41b2c6:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b2cb:	mov    rbx,rax
  41b2ce:	mov    rsi,r12
  41b2d1:	cmp    rbx,r12
  41b2d4:	je     41b2ed <main@@Base+0x1421d>
  41b2d6:	mov    rdi,QWORD PTR [r14]
  41b2d9:	call   41e840 <flatcc_builder_end_struct@@Base>
  41b2de:	mov    DWORD PTR [r15],eax
  41b2e1:	mov    rsi,rbx
  41b2e4:	test   eax,eax
  41b2e6:	jne    41b329 <main@@Base+0x14259>
  41b2e8:	jmp    41b2ed <main@@Base+0x1421d>
  41b2ea:	mov    rsi,rbx
  41b2ed:	mov    rdi,r14
  41b2f0:	jmp    41b319 <main@@Base+0x14249>
  41b2f2:	mov    rdi,r14
  41b2f5:	mov    rsi,rbx
  41b2f8:	mov    rdx,r12
  41b2fb:	mov    ecx,0x15
  41b300:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b305:	mov    rbx,rax
  41b308:	cmp    DWORD PTR [r14+0x20],0x0
  41b30d:	je     41bdcf <main@@Base+0x14cff>
  41b313:	mov    rdi,r14
  41b316:	mov    rsi,rbx
  41b319:	mov    rdx,r12
  41b31c:	mov    ecx,0x21
  41b321:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b326:	mov    rbx,rax
  41b329:	cmp    DWORD PTR [r14+0x20],0x0
  41b32e:	jne    41b34c <main@@Base+0x1427c>
  41b330:	cmp    DWORD PTR [r15],0x0
  41b334:	jne    41b34c <main@@Base+0x1427c>
  41b336:	mov    rdi,r14
  41b339:	mov    rsi,rbx
  41b33c:	mov    rdx,r12
  41b33f:	mov    ecx,0x21
  41b344:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b349:	mov    rbx,rax
  41b34c:	mov    rax,rbx
  41b34f:	add    rsp,0x18
  41b353:	pop    rbx
  41b354:	pop    r12
  41b356:	pop    r13
  41b358:	pop    r14
  41b35a:	pop    r15
  41b35c:	pop    rbp
  41b35d:	ret    
  41b35e:	add    rbx,0x4
  41b362:	jmp    41b34c <main@@Base+0x1427c>
  41b364:	mov    rdi,r14
  41b367:	mov    rsi,rax
  41b36a:	mov    rdx,r12
  41b36d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b372:	mov    rcx,r12
  41b375:	cmp    rax,r12
  41b378:	je     41b386 <main@@Base+0x142b6>
  41b37a:	cmp    BYTE PTR [rax],0x7d
  41b37d:	je     41bd4c <main@@Base+0x14c7c>
  41b383:	mov    rcx,rax
  41b386:	movabs r13,0x686169725f6c656e
  41b390:	mov    rsi,r12
  41b393:	cmp    rcx,r12
  41b396:	je     41b3d3 <main@@Base+0x14303>
  41b398:	movzx  eax,BYTE PTR [rcx]
  41b39b:	cmp    al,0x2e
  41b39d:	je     41b3b0 <main@@Base+0x142e0>
  41b39f:	cmp    al,0x22
  41b3a1:	jne    41b3c8 <main@@Base+0x142f8>
  41b3a3:	inc    rcx
  41b3a6:	mov    DWORD PTR [r14+0x14],0x0
  41b3ae:	jmp    41b3d0 <main@@Base+0x14300>
  41b3b0:	mov    rdi,r14
  41b3b3:	mov    rsi,rcx
  41b3b6:	mov    rdx,r12
  41b3b9:	mov    ecx,0x5
  41b3be:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b3c3:	mov    rsi,rax
  41b3c6:	jmp    41b3d3 <main@@Base+0x14303>
  41b3c8:	mov    DWORD PTR [r14+0x14],0x1
  41b3d0:	mov    rsi,rcx
  41b3d3:	mov    rax,r12
  41b3d6:	sub    rax,rsi
  41b3d9:	cmp    rax,0x8
  41b3dd:	jb     41b3f2 <main@@Base+0x14322>
  41b3df:	movbe  rax,QWORD PTR [rsi]
  41b3e4:	cmp    rax,r13
  41b3e7:	je     41b473 <main@@Base+0x143a3>
  41b3ed:	jmp    41b48e <main@@Base+0x143be>
  41b3f2:	dec    rax
  41b3f5:	cmp    rax,0x6
  41b3f9:	ja     41b48e <main@@Base+0x143be>
  41b3ff:	lea    rcx,[rip+0x194fa]        # 434900 <_IO_stdin_used@@Base+0x900>
  41b406:	mov    rdx,rcx
  41b409:	movsxd rcx,DWORD PTR [rcx+rax*4]
  41b40d:	add    rcx,rdx
  41b410:	xor    r8d,r8d
  41b413:	xor    eax,eax
  41b415:	xor    edx,edx
  41b417:	xor    edi,edi
  41b419:	xor    ebp,ebp
  41b41b:	xor    ebx,ebx
  41b41d:	jmp    rcx
  41b41f:	movsx  r8,BYTE PTR [rsi+0x6]
  41b424:	shl    r8,0x8
  41b428:	movsx  rax,BYTE PTR [rsi+0x5]
  41b42d:	shl    rax,0x10
  41b431:	or     rax,r8
  41b434:	movsx  rdx,BYTE PTR [rsi+0x4]
  41b439:	shl    rdx,0x18
  41b43d:	or     rdx,rax
  41b440:	movsx  rdi,BYTE PTR [rsi+0x3]
  41b445:	shl    rdi,0x20
  41b449:	or     rdi,rdx
  41b44c:	movsx  rbp,BYTE PTR [rsi+0x2]
  41b451:	shl    rbp,0x28
  41b455:	or     rbp,rdi
  41b458:	movsx  rbx,BYTE PTR [rsi+0x1]
  41b45d:	shl    rbx,0x30
  41b461:	or     rbx,rbp
  41b464:	movzx  eax,BYTE PTR [rsi]
  41b467:	shl    rax,0x38
  41b46b:	or     rax,rbx
  41b46e:	cmp    rax,r13
  41b471:	jne    41b48e <main@@Base+0x143be>
  41b473:	lea    r13,[rsi+0x8]
  41b477:	mov    rax,r12
  41b47a:	sub    rax,r13
  41b47d:	cmp    rax,0x8
  41b481:	jb     41b49e <main@@Base+0x143ce>
  41b483:	movbe  rcx,QWORD PTR [r13+0x0]
  41b489:	jmp    41b51b <main@@Base+0x1444b>
  41b48e:	mov    rdi,r14
  41b491:	mov    rdx,r12
  41b494:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41b499:	jmp    41b612 <main@@Base+0x14542>
  41b49e:	lea    rcx,[rax-0x1]
  41b4a2:	cmp    rcx,0x6
  41b4a6:	ja     41b5fa <main@@Base+0x1452a>
  41b4ac:	lea    rdx,[rip+0x19469]        # 43491c <_IO_stdin_used@@Base+0x91c>
  41b4b3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b4b7:	add    rcx,rdx
  41b4ba:	xor    r8d,r8d
  41b4bd:	xor    r9d,r9d
  41b4c0:	xor    edi,edi
  41b4c2:	xor    ebp,ebp
  41b4c4:	xor    ebx,ebx
  41b4c6:	xor    edx,edx
  41b4c8:	jmp    rcx
  41b4ca:	movsx  r8,BYTE PTR [rsi+0xe]
  41b4cf:	shl    r8,0x8
  41b4d3:	movsx  r9,BYTE PTR [rsi+0xd]
  41b4d8:	shl    r9,0x10
  41b4dc:	or     r9,r8
  41b4df:	movsx  rdi,BYTE PTR [rsi+0xc]
  41b4e4:	shl    rdi,0x18
  41b4e8:	or     rdi,r9
  41b4eb:	movsx  rbp,BYTE PTR [rsi+0xb]
  41b4f0:	shl    rbp,0x20
  41b4f4:	or     rbp,rdi
  41b4f7:	movsx  rbx,BYTE PTR [rsi+0xa]
  41b4fc:	shl    rbx,0x28
  41b500:	or     rbx,rbp
  41b503:	movsx  rdx,BYTE PTR [rsi+0x9]
  41b508:	shl    rdx,0x30
  41b50c:	or     rdx,rbx
  41b50f:	movzx  ecx,BYTE PTR [r13+0x0]
  41b514:	shl    rcx,0x38
  41b518:	or     rcx,rdx
  41b51b:	movabs rdx,0xffffff0000000000
  41b525:	and    rcx,rdx
  41b528:	movabs rdx,0x6774680000000000
  41b532:	cmp    rcx,rdx
  41b535:	jne    41b5fa <main@@Base+0x1452a>
  41b53b:	cmp    rax,0x4
  41b53f:	jl     41b5fa <main@@Base+0x1452a>
  41b545:	cmp    DWORD PTR [r14+0x14],0x0
  41b54a:	movzx  eax,BYTE PTR [rsi+0xb]
  41b54e:	je     41b56a <main@@Base+0x1449a>
  41b550:	cmp    al,0x21
  41b552:	jl     41b55c <main@@Base+0x1448c>
  41b554:	cmp    al,0x3a
  41b556:	jne    41b5fa <main@@Base+0x1452a>
  41b55c:	add    rsi,0xb
  41b560:	mov    DWORD PTR [r14+0x14],0x0
  41b568:	jmp    41b576 <main@@Base+0x144a6>
  41b56a:	cmp    al,0x22
  41b56c:	jne    41b5fa <main@@Base+0x1452a>
  41b572:	add    rsi,0xc
  41b576:	mov    rax,r12
  41b579:	sub    rax,rsi
  41b57c:	cmp    rax,0x2
  41b580:	jl     41b59c <main@@Base+0x144cc>
  41b582:	cmp    BYTE PTR [rsi],0x20
  41b585:	jg     41b5aa <main@@Base+0x144da>
  41b587:	jne    41b59c <main@@Base+0x144cc>
  41b589:	cmp    BYTE PTR [rsi+0x1],0x20
  41b58d:	jle    41b59c <main@@Base+0x144cc>
  41b58f:	inc    rsi
  41b592:	cmp    rsi,r12
  41b595:	jne    41b5b3 <main@@Base+0x144e3>
  41b597:	jmp    41b6a6 <main@@Base+0x145d6>
  41b59c:	mov    rdi,r14
  41b59f:	mov    rdx,r12
  41b5a2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b5a7:	mov    rsi,rax
  41b5aa:	cmp    rsi,r12
  41b5ad:	je     41b6a6 <main@@Base+0x145d6>
  41b5b3:	cmp    BYTE PTR [rsi],0x3a
  41b5b6:	jne    41b6a6 <main@@Base+0x145d6>
  41b5bc:	lea    rbp,[rsi+0x1]
  41b5c0:	mov    rax,r12
  41b5c3:	sub    rax,rbp
  41b5c6:	cmp    rax,0x2
  41b5ca:	jl     41b6b8 <main@@Base+0x145e8>
  41b5d0:	cmp    BYTE PTR [rbp+0x0],0x20
  41b5d4:	jg     41b6c9 <main@@Base+0x145f9>
  41b5da:	jne    41b6b8 <main@@Base+0x145e8>
  41b5e0:	cmp    BYTE PTR [rsi+0x2],0x20
  41b5e4:	jle    41b6b8 <main@@Base+0x145e8>
  41b5ea:	add    rsi,0x2
  41b5ee:	mov    rbp,rsi
  41b5f1:	cmp    r13,rbp
  41b5f4:	jne    41b6d2 <main@@Base+0x14602>
  41b5fa:	mov    rdi,r14
  41b5fd:	mov    rsi,r13
  41b600:	mov    rdx,r12
  41b603:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41b608:	movabs r13,0x686169725f6c656e
  41b612:	mov    rcx,r12
  41b615:	sub    rcx,rax
  41b618:	cmp    rcx,0x2
  41b61c:	jl     41b638 <main@@Base+0x14568>
  41b61e:	cmp    BYTE PTR [rax],0x20
  41b621:	jg     41b646 <main@@Base+0x14576>
  41b623:	jne    41b638 <main@@Base+0x14568>
  41b625:	cmp    BYTE PTR [rax+0x1],0x20
  41b629:	jle    41b638 <main@@Base+0x14568>
  41b62b:	inc    rax
  41b62e:	cmp    rax,r12
  41b631:	jne    41b64f <main@@Base+0x1457f>
  41b633:	jmp    41bd3b <main@@Base+0x14c6b>
  41b638:	mov    rdi,r14
  41b63b:	mov    rsi,rax
  41b63e:	mov    rdx,r12
  41b641:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b646:	cmp    rax,r12
  41b649:	je     41bd3b <main@@Base+0x14c6b>
  41b64f:	movzx  ecx,BYTE PTR [rax]
  41b652:	cmp    cl,0x2c
  41b655:	jne    41bd43 <main@@Base+0x14c73>
  41b65b:	lea    rcx,[rax+0x1]
  41b65f:	mov    rdx,r12
  41b662:	sub    rdx,rcx
  41b665:	cmp    rdx,0x2
  41b669:	jl     41b67e <main@@Base+0x145ae>
  41b66b:	cmp    BYTE PTR [rcx],0x20
  41b66e:	jg     41b68f <main@@Base+0x145bf>
  41b670:	jne    41b67e <main@@Base+0x145ae>
  41b672:	cmp    BYTE PTR [rax+0x2],0x20
  41b676:	jle    41b67e <main@@Base+0x145ae>
  41b678:	add    rax,0x2
  41b67c:	jmp    41b68c <main@@Base+0x145bc>
  41b67e:	mov    rdi,r14
  41b681:	mov    rsi,rcx
  41b684:	mov    rdx,r12
  41b687:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b68c:	mov    rcx,rax
  41b68f:	cmp    rcx,r12
  41b692:	je     41bd76 <main@@Base+0x14ca6>
  41b698:	cmp    BYTE PTR [rcx],0x7d
  41b69b:	jne    41b390 <main@@Base+0x142c0>
  41b6a1:	jmp    41bd81 <main@@Base+0x14cb1>
  41b6a6:	mov    rdi,r14
  41b6a9:	mov    rdx,r12
  41b6ac:	mov    ecx,0x4
  41b6b1:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b6b6:	jmp    41b6c6 <main@@Base+0x145f6>
  41b6b8:	mov    rdi,r14
  41b6bb:	mov    rsi,rbp
  41b6be:	mov    rdx,r12
  41b6c1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b6c6:	mov    rbp,rax
  41b6c9:	cmp    r13,rbp
  41b6cc:	je     41b5fa <main@@Base+0x1452a>
  41b6d2:	mov    QWORD PTR [rsp+0x8],0x0
  41b6db:	mov    DWORD PTR [rsp+0x4],0x0
  41b6e3:	mov    WORD PTR [rsp],0x0
  41b6e9:	cmp    rbp,r12
  41b6ec:	je     41b72c <main@@Base+0x1465c>
  41b6ee:	mov    rdi,r14
  41b6f1:	mov    rsi,rbp
  41b6f4:	mov    rdx,r12
  41b6f7:	lea    rcx,[rsp+0x4]
  41b6fc:	lea    r8,[rsp+0x8]
  41b701:	call   425c50 <flatcc_json_parser_integer@@Base>
  41b706:	cmp    rax,rbp
  41b709:	movabs r13,0x686169725f6c656e
  41b713:	je     41b742 <main@@Base+0x14672>
  41b715:	cmp    DWORD PTR [rsp+0x4],0x0
  41b71a:	je     41b74e <main@@Base+0x1467e>
  41b71c:	mov    rdi,r14
  41b71f:	mov    rsi,rax
  41b722:	mov    rdx,r12
  41b725:	mov    ecx,0x8
  41b72a:	jmp    41b76a <main@@Base+0x1469a>
  41b72c:	xor    ecx,ecx
  41b72e:	mov    rax,r12
  41b731:	movabs r13,0x686169725f6c656e
  41b73b:	cmp    rbp,rax
  41b73e:	jne    41b7a4 <main@@Base+0x146d4>
  41b740:	jmp    41b776 <main@@Base+0x146a6>
  41b742:	xor    ecx,ecx
  41b744:	mov    rax,rbp
  41b747:	cmp    rbp,rax
  41b74a:	jne    41b7a4 <main@@Base+0x146d4>
  41b74c:	jmp    41b776 <main@@Base+0x146a6>
  41b74e:	mov    rcx,QWORD PTR [rsp+0x8]
  41b753:	cmp    rcx,0x10000
  41b75a:	jb     41b7b1 <main@@Base+0x146e1>
  41b75c:	mov    rdi,r14
  41b75f:	mov    rsi,rax
  41b762:	mov    rdx,r12
  41b765:	mov    ecx,0x7
  41b76a:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b76f:	xor    ecx,ecx
  41b771:	cmp    rbp,rax
  41b774:	jne    41b7a4 <main@@Base+0x146d4>
  41b776:	mov    rdi,r14
  41b779:	mov    rsi,rbp
  41b77c:	mov    rdx,r12
  41b77f:	lea    rcx,[rip+0x27f7a]        # 443700 <__data_start@@Base+0x650>
  41b786:	mov    r8,rsp
  41b789:	call   41c4c0 <main@@Base+0x153f0>
  41b78e:	cmp    rax,rbp
  41b791:	je     41be8f <main@@Base+0x14dbf>
  41b797:	cmp    rax,r12
  41b79a:	je     41be8f <main@@Base+0x14dbf>
  41b7a0:	movzx  ecx,WORD PTR [rsp]
  41b7a4:	mov    rdx,QWORD PTR [rsp+0x10]
  41b7a9:	mov    WORD PTR [rdx],cx
  41b7ac:	jmp    41b612 <main@@Base+0x14542>
  41b7b1:	mov    WORD PTR [rsp],cx
  41b7b5:	cmp    rbp,rax
  41b7b8:	jne    41b7a4 <main@@Base+0x146d4>
  41b7ba:	jmp    41b776 <main@@Base+0x146a6>
  41b7bc:	mov    rdi,r14
  41b7bf:	mov    rdx,r12
  41b7c2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41b7c7:	mov    rsi,rax
  41b7ca:	mov    rax,r12
  41b7cd:	cmp    rsi,r12
  41b7d0:	je     41b81e <main@@Base+0x1474e>
  41b7d2:	cmp    BYTE PTR [rsi],0x7d
  41b7d5:	jne    41b81b <main@@Base+0x1474b>
  41b7d7:	lea    rbx,[rsi+0x1]
  41b7db:	mov    rax,r12
  41b7de:	sub    rax,rbx
  41b7e1:	cmp    rax,0x2
  41b7e5:	jl     41be56 <main@@Base+0x14d86>
  41b7eb:	cmp    BYTE PTR [rbx],0x20
  41b7ee:	jg     41b308 <main@@Base+0x14238>
  41b7f4:	jne    41be56 <main@@Base+0x14d86>
  41b7fa:	cmp    BYTE PTR [rsi+0x2],0x20
  41b7fe:	jle    41be56 <main@@Base+0x14d86>
  41b804:	add    rsi,0x2
  41b808:	mov    rbx,rsi
  41b80b:	cmp    DWORD PTR [r14+0x20],0x0
  41b810:	jne    41b313 <main@@Base+0x14243>
  41b816:	jmp    41bdcf <main@@Base+0x14cff>
  41b81b:	mov    rax,rsi
  41b81e:	movabs r13,0x73776f72645f6174
  41b828:	mov    rsi,r12
  41b82b:	cmp    rax,r12
  41b82e:	je     41b86a <main@@Base+0x1479a>
  41b830:	movzx  ecx,BYTE PTR [rax]
  41b833:	cmp    cl,0x2e
  41b836:	je     41b84a <main@@Base+0x1477a>
  41b838:	cmp    cl,0x22
  41b83b:	jne    41b85f <main@@Base+0x1478f>
  41b83d:	inc    rax
  41b840:	mov    DWORD PTR [r14+0x14],0x0
  41b848:	jmp    41b867 <main@@Base+0x14797>
  41b84a:	mov    rdi,r14
  41b84d:	mov    rsi,rax
  41b850:	mov    rdx,r12
  41b853:	mov    ecx,0x5
  41b858:	call   424090 <flatcc_json_parser_set_error@@Base>
  41b85d:	jmp    41b867 <main@@Base+0x14797>
  41b85f:	mov    DWORD PTR [r14+0x14],0x1
  41b867:	mov    rsi,rax
  41b86a:	mov    rax,r12
  41b86d:	sub    rax,rsi
  41b870:	cmp    rax,0x8
  41b874:	jb     41b889 <main@@Base+0x147b9>
  41b876:	movbe  rax,QWORD PTR [rsi]
  41b87b:	cmp    rax,r13
  41b87e:	je     41b90a <main@@Base+0x1483a>
  41b884:	jmp    41b924 <main@@Base+0x14854>
  41b889:	dec    rax
  41b88c:	cmp    rax,0x6
  41b890:	ja     41b924 <main@@Base+0x14854>
  41b896:	lea    rcx,[rip+0x1909b]        # 434938 <_IO_stdin_used@@Base+0x938>
  41b89d:	mov    rdx,rcx
  41b8a0:	movsxd rcx,DWORD PTR [rcx+rax*4]
  41b8a4:	add    rcx,rdx
  41b8a7:	xor    r8d,r8d
  41b8aa:	xor    eax,eax
  41b8ac:	xor    edx,edx
  41b8ae:	xor    edi,edi
  41b8b0:	xor    ebp,ebp
  41b8b2:	xor    ebx,ebx
  41b8b4:	jmp    rcx
  41b8b6:	movsx  r8,BYTE PTR [rsi+0x6]
  41b8bb:	shl    r8,0x8
  41b8bf:	movsx  rax,BYTE PTR [rsi+0x5]
  41b8c4:	shl    rax,0x10
  41b8c8:	or     rax,r8
  41b8cb:	movsx  rdx,BYTE PTR [rsi+0x4]
  41b8d0:	shl    rdx,0x18
  41b8d4:	or     rdx,rax
  41b8d7:	movsx  rdi,BYTE PTR [rsi+0x3]
  41b8dc:	shl    rdi,0x20
  41b8e0:	or     rdi,rdx
  41b8e3:	movsx  rbp,BYTE PTR [rsi+0x2]
  41b8e8:	shl    rbp,0x28
  41b8ec:	or     rbp,rdi
  41b8ef:	movsx  rbx,BYTE PTR [rsi+0x1]
  41b8f4:	shl    rbx,0x30
  41b8f8:	or     rbx,rbp
  41b8fb:	movzx  eax,BYTE PTR [rsi]
  41b8fe:	shl    rax,0x38
  41b902:	or     rax,rbx
  41b905:	cmp    rax,r13
  41b908:	jne    41b924 <main@@Base+0x14854>
  41b90a:	lea    rax,[rsi+0x8]
  41b90e:	mov    rcx,r12
  41b911:	sub    rcx,rax
  41b914:	cmp    rcx,0x8
  41b918:	jb     41b92c <main@@Base+0x1485c>
  41b91a:	movbe  rcx,QWORD PTR [rax]
  41b91f:	jmp    41b9a6 <main@@Base+0x148d6>
  41b924:	mov    rdi,r14
  41b927:	jmp    41b9d6 <main@@Base+0x14906>
  41b92c:	dec    rcx
  41b92f:	cmp    rcx,0x6
  41b933:	ja     41b9d0 <main@@Base+0x14900>
  41b939:	lea    rdx,[rip+0x19014]        # 434954 <_IO_stdin_used@@Base+0x954>
  41b940:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b944:	add    rcx,rdx
  41b947:	xor    r8d,r8d
  41b94a:	xor    r9d,r9d
  41b94d:	xor    edi,edi
  41b94f:	xor    ebp,ebp
  41b951:	xor    ebx,ebx
  41b953:	xor    edx,edx
  41b955:	jmp    rcx
  41b957:	movsx  r8,BYTE PTR [rsi+0xe]
  41b95c:	shl    r8,0x8
  41b960:	movsx  r9,BYTE PTR [rsi+0xd]
  41b965:	shl    r9,0x10
  41b969:	or     r9,r8
  41b96c:	movsx  rdi,BYTE PTR [rsi+0xc]
  41b971:	shl    rdi,0x18
  41b975:	or     rdi,r9
  41b978:	movsx  rbp,BYTE PTR [rsi+0xb]
  41b97d:	shl    rbp,0x20
  41b981:	or     rbp,rdi
  41b984:	movsx  rbx,BYTE PTR [rsi+0xa]
  41b989:	shl    rbx,0x28
  41b98d:	or     rbx,rbp
  41b990:	movsx  rdx,BYTE PTR [rsi+0x9]
  41b995:	shl    rdx,0x30
  41b999:	or     rdx,rbx
  41b99c:	movzx  ecx,BYTE PTR [rax]
  41b99f:	shl    rcx,0x38
  41b9a3:	or     rcx,rdx
  41b9a6:	movabs rdx,0x7461636b5f64616d
  41b9b0:	cmp    rcx,rdx
  41b9b3:	jne    41b9d0 <main@@Base+0x14900>
  41b9b5:	lea    r13,[rsi+0x10]
  41b9b9:	mov    rax,r12
  41b9bc:	sub    rax,r13
  41b9bf:	cmp    rax,0x8
  41b9c3:	jb     41b9e6 <main@@Base+0x14916>
  41b9c5:	movbe  rcx,QWORD PTR [r13+0x0]
  41b9cb:	jmp    41ba63 <main@@Base+0x14993>
  41b9d0:	mov    rdi,r14
  41b9d3:	mov    rsi,rax
  41b9d6:	mov    rdx,r12
  41b9d9:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41b9de:	mov    rbp,rax
  41b9e1:	jmp    41bb5c <main@@Base+0x14a8c>
  41b9e6:	lea    rcx,[rax-0x1]
  41b9ea:	cmp    rcx,0x6
  41b9ee:	ja     41bb41 <main@@Base+0x14a71>
  41b9f4:	lea    rdx,[rip+0x18f75]        # 434970 <_IO_stdin_used@@Base+0x970>
  41b9fb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b9ff:	add    rcx,rdx
  41ba02:	xor    r8d,r8d
  41ba05:	xor    r9d,r9d
  41ba08:	xor    edi,edi
  41ba0a:	xor    ebp,ebp
  41ba0c:	xor    ebx,ebx
  41ba0e:	xor    edx,edx
  41ba10:	jmp    rcx
  41ba12:	movsx  r8,BYTE PTR [rsi+0x16]
  41ba17:	shl    r8,0x8
  41ba1b:	movsx  r9,BYTE PTR [rsi+0x15]
  41ba20:	shl    r9,0x10
  41ba24:	or     r9,r8
  41ba27:	movsx  rdi,BYTE PTR [rsi+0x14]
  41ba2c:	shl    rdi,0x18
  41ba30:	or     rdi,r9
  41ba33:	movsx  rbp,BYTE PTR [rsi+0x13]
  41ba38:	shl    rbp,0x20
  41ba3c:	or     rbp,rdi
  41ba3f:	movsx  rbx,BYTE PTR [rsi+0x12]
  41ba44:	shl    rbx,0x28
  41ba48:	or     rbx,rbp
  41ba4b:	movsx  rdx,BYTE PTR [rsi+0x11]
  41ba50:	shl    rdx,0x30
  41ba54:	or     rdx,rbx
  41ba57:	movzx  ecx,BYTE PTR [r13+0x0]
  41ba5c:	shl    rcx,0x38
  41ba60:	or     rcx,rdx
  41ba63:	movabs rdx,0xffffff0000000000
  41ba6d:	and    rcx,rdx
  41ba70:	movabs rdx,0x6167650000000000
  41ba7a:	cmp    rcx,rdx
  41ba7d:	jne    41bb41 <main@@Base+0x14a71>
  41ba83:	cmp    rax,0x4
  41ba87:	jl     41bb41 <main@@Base+0x14a71>
  41ba8d:	cmp    DWORD PTR [r14+0x14],0x0
  41ba92:	movzx  eax,BYTE PTR [rsi+0x13]
  41ba96:	je     41bab2 <main@@Base+0x149e2>
  41ba98:	cmp    al,0x21
  41ba9a:	jl     41baa4 <main@@Base+0x149d4>
  41ba9c:	cmp    al,0x3a
  41ba9e:	jne    41bb41 <main@@Base+0x14a71>
  41baa4:	add    rsi,0x13
  41baa8:	mov    DWORD PTR [r14+0x14],0x0
  41bab0:	jmp    41babe <main@@Base+0x149ee>
  41bab2:	cmp    al,0x22
  41bab4:	jne    41bb41 <main@@Base+0x14a71>
  41baba:	add    rsi,0x14
  41babe:	mov    rax,r12
  41bac1:	sub    rax,rsi
  41bac4:	cmp    rax,0x2
  41bac8:	jl     41bae4 <main@@Base+0x14a14>
  41baca:	cmp    BYTE PTR [rsi],0x20
  41bacd:	jg     41baf2 <main@@Base+0x14a22>
  41bacf:	jne    41bae4 <main@@Base+0x14a14>
  41bad1:	cmp    BYTE PTR [rsi+0x1],0x20
  41bad5:	jle    41bae4 <main@@Base+0x14a14>
  41bad7:	inc    rsi
  41bada:	cmp    rsi,r12
  41badd:	jne    41bafb <main@@Base+0x14a2b>
  41badf:	jmp    41bbfc <main@@Base+0x14b2c>
  41bae4:	mov    rdi,r14
  41bae7:	mov    rdx,r12
  41baea:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41baef:	mov    rsi,rax
  41baf2:	cmp    rsi,r12
  41baf5:	je     41bbfc <main@@Base+0x14b2c>
  41bafb:	cmp    BYTE PTR [rsi],0x3a
  41bafe:	jne    41bbfc <main@@Base+0x14b2c>
  41bb04:	lea    rbx,[rsi+0x1]
  41bb08:	mov    rax,r12
  41bb0b:	sub    rax,rbx
  41bb0e:	cmp    rax,0x2
  41bb12:	jl     41bc0e <main@@Base+0x14b3e>
  41bb18:	cmp    BYTE PTR [rbx],0x20
  41bb1b:	jg     41bc1f <main@@Base+0x14b4f>
  41bb21:	jne    41bc0e <main@@Base+0x14b3e>
  41bb27:	cmp    BYTE PTR [rsi+0x2],0x20
  41bb2b:	jle    41bc0e <main@@Base+0x14b3e>
  41bb31:	add    rsi,0x2
  41bb35:	mov    rbx,rsi
  41bb38:	cmp    r13,rbx
  41bb3b:	jne    41bc28 <main@@Base+0x14b58>
  41bb41:	mov    rdi,r14
  41bb44:	mov    rsi,r13
  41bb47:	mov    rdx,r12
  41bb4a:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41bb4f:	mov    rbp,rax
  41bb52:	movabs r13,0x73776f72645f6174
  41bb5c:	mov    rax,r12
  41bb5f:	sub    rax,rbp
  41bb62:	cmp    rax,0x2
  41bb66:	jl     41bb83 <main@@Base+0x14ab3>
  41bb68:	cmp    BYTE PTR [rbp+0x0],0x20
  41bb6c:	jg     41bb94 <main@@Base+0x14ac4>
  41bb6e:	jne    41bb83 <main@@Base+0x14ab3>
  41bb70:	cmp    BYTE PTR [rbp+0x1],0x20
  41bb74:	jle    41bb83 <main@@Base+0x14ab3>
  41bb76:	inc    rbp
  41bb79:	cmp    rbp,r12
  41bb7c:	jne    41bb9d <main@@Base+0x14acd>
  41bb7e:	jmp    41bdc1 <main@@Base+0x14cf1>
  41bb83:	mov    rdi,r14
  41bb86:	mov    rsi,rbp
  41bb89:	mov    rdx,r12
  41bb8c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41bb91:	mov    rbp,rax
  41bb94:	cmp    rbp,r12
  41bb97:	je     41bdc1 <main@@Base+0x14cf1>
  41bb9d:	movzx  eax,BYTE PTR [rbp+0x0]
  41bba1:	cmp    al,0x2c
  41bba3:	jne    41bde7 <main@@Base+0x14d17>
  41bba9:	lea    rax,[rbp+0x1]
  41bbad:	mov    rcx,r12
  41bbb0:	sub    rcx,rax
  41bbb3:	cmp    rcx,0x2
  41bbb7:	jl     41bbd7 <main@@Base+0x14b07>
  41bbb9:	cmp    BYTE PTR [rax],0x20
  41bbbc:	jg     41bbe5 <main@@Base+0x14b15>
  41bbbe:	jne    41bbd7 <main@@Base+0x14b07>
  41bbc0:	cmp    BYTE PTR [rbp+0x2],0x20
  41bbc4:	jle    41bbd7 <main@@Base+0x14b07>
  41bbc6:	add    rbp,0x2
  41bbca:	mov    rax,rbp
  41bbcd:	cmp    rax,r12
  41bbd0:	jne    41bbee <main@@Base+0x14b1e>
  41bbd2:	jmp    41be24 <main@@Base+0x14d54>
  41bbd7:	mov    rdi,r14
  41bbda:	mov    rsi,rax
  41bbdd:	mov    rdx,r12
  41bbe0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41bbe5:	cmp    rax,r12
  41bbe8:	je     41be24 <main@@Base+0x14d54>
  41bbee:	cmp    BYTE PTR [rax],0x7d
  41bbf1:	jne    41b828 <main@@Base+0x14758>
  41bbf7:	jmp    41be2c <main@@Base+0x14d5c>
  41bbfc:	mov    rdi,r14
  41bbff:	mov    rdx,r12
  41bc02:	mov    ecx,0x4
  41bc07:	call   424090 <flatcc_json_parser_set_error@@Base>
  41bc0c:	jmp    41bc1c <main@@Base+0x14b4c>
  41bc0e:	mov    rdi,r14
  41bc11:	mov    rsi,rbx
  41bc14:	mov    rdx,r12
  41bc17:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41bc1c:	mov    rbx,rax
  41bc1f:	cmp    r13,rbx
  41bc22:	je     41bb41 <main@@Base+0x14a71>
  41bc28:	mov    QWORD PTR [rsp+0x8],0x0
  41bc31:	mov    DWORD PTR [rsp+0x4],0x0
  41bc39:	mov    DWORD PTR [rsp],0x0
  41bc40:	xor    r13d,r13d
  41bc43:	cmp    rbx,r12
  41bc46:	je     41bc8e <main@@Base+0x14bbe>
  41bc48:	mov    rdi,r14
  41bc4b:	mov    rsi,rbx
  41bc4e:	mov    rdx,r12
  41bc51:	lea    rcx,[rsp+0x4]
  41bc56:	lea    r8,[rsp+0x8]
  41bc5b:	call   425c50 <flatcc_json_parser_integer@@Base>
  41bc60:	cmp    rax,rbx
  41bc63:	je     41bc98 <main@@Base+0x14bc8>
  41bc65:	mov    rbp,rax
  41bc68:	mov    rax,QWORD PTR [rsp+0x8]
  41bc6d:	cmp    DWORD PTR [rsp+0x4],0x0
  41bc72:	je     41bca2 <main@@Base+0x14bd2>
  41bc74:	mov    ecx,0x80000001
  41bc79:	cmp    rax,rcx
  41bc7c:	jb     41bcc7 <main@@Base+0x14bf7>
  41bc7e:	mov    rdi,r14
  41bc81:	mov    rsi,rbp
  41bc84:	mov    rdx,r12
  41bc87:	mov    ecx,0x8
  41bc8c:	jmp    41bcb8 <main@@Base+0x14be8>
  41bc8e:	mov    rbp,r12
  41bc91:	cmp    rbx,rbp
  41bc94:	jne    41bd06 <main@@Base+0x14c36>
  41bc96:	jmp    41bcd5 <main@@Base+0x14c05>
  41bc98:	mov    rbp,rbx
  41bc9b:	cmp    rbx,rbp
  41bc9e:	jne    41bd06 <main@@Base+0x14c36>
  41bca0:	jmp    41bcd5 <main@@Base+0x14c05>
  41bca2:	test   rax,0xffffffff80000000
  41bca8:	je     41bcca <main@@Base+0x14bfa>
  41bcaa:	mov    rdi,r14
  41bcad:	mov    rsi,rbp
  41bcb0:	mov    rdx,r12
  41bcb3:	mov    ecx,0x7
  41bcb8:	call   424090 <flatcc_json_parser_set_error@@Base>
  41bcbd:	mov    rbp,rax
  41bcc0:	cmp    rbx,rbp
  41bcc3:	jne    41bd06 <main@@Base+0x14c36>
  41bcc5:	jmp    41bcd5 <main@@Base+0x14c05>
  41bcc7:	neg    rax
  41bcca:	mov    DWORD PTR [rsp],eax
  41bccd:	mov    r13d,eax
  41bcd0:	cmp    rbx,rbp
  41bcd3:	jne    41bd06 <main@@Base+0x14c36>
  41bcd5:	mov    rdi,r14
  41bcd8:	mov    rsi,rbx
  41bcdb:	mov    rdx,r12
  41bcde:	lea    rcx,[rip+0x279fb]        # 4436e0 <__data_start@@Base+0x630>
  41bce5:	mov    r8,rsp
  41bce8:	call   414b90 <main@@Base+0xdac0>
  41bced:	mov    rbp,rax
  41bcf0:	cmp    rax,rbx
  41bcf3:	je     41bea2 <main@@Base+0x14dd2>
  41bcf9:	cmp    rbp,r12
  41bcfc:	je     41bea2 <main@@Base+0x14dd2>
  41bd02:	mov    r13d,DWORD PTR [rsp]
  41bd06:	test   r13d,r13d
  41bd09:	jne    41bd16 <main@@Base+0x14c46>
  41bd0b:	test   BYTE PTR [r14+0x10],0x2
  41bd10:	je     41bb52 <main@@Base+0x14a82>
  41bd16:	mov    rdi,QWORD PTR [r14]
  41bd19:	mov    edx,0x4
  41bd1e:	xor    esi,esi
  41bd20:	mov    ecx,0x4
  41bd25:	call   420a40 <flatcc_builder_table_add@@Base>
  41bd2a:	test   rax,rax
  41bd2d:	je     41bea2 <main@@Base+0x14dd2>
  41bd33:	mov    DWORD PTR [rax],r13d
  41bd36:	jmp    41bb52 <main@@Base+0x14a82>
  41bd3b:	mov    rsi,r12
  41bd3e:	jmp    41b2ed <main@@Base+0x1421d>
  41bd43:	cmp    cl,0x7d
  41bd46:	jne    41be69 <main@@Base+0x14d99>
  41bd4c:	lea    rbx,[rax+0x1]
  41bd50:	mov    rcx,r12
  41bd53:	sub    rcx,rbx
  41bd56:	cmp    rcx,0x2
  41bd5a:	jl     41bdae <main@@Base+0x14cde>
  41bd5c:	cmp    BYTE PTR [rbx],0x20
  41bd5f:	jg     41b2ce <main@@Base+0x141fe>
  41bd65:	jne    41bdae <main@@Base+0x14cde>
  41bd67:	cmp    BYTE PTR [rax+0x2],0x20
  41bd6b:	jle    41bdae <main@@Base+0x14cde>
  41bd6d:	add    rax,0x2
  41bd71:	jmp    41b2cb <main@@Base+0x141fb>
  41bd76:	mov    rdi,r14
  41bd79:	mov    rsi,r12
  41bd7c:	jmp    41be6f <main@@Base+0x14d9f>
  41bd81:	lea    rbx,[rcx+0x1]
  41bd85:	mov    rax,r12
  41bd88:	sub    rax,rbx
  41bd8b:	cmp    rax,0x2
  41bd8f:	jl     41bdae <main@@Base+0x14cde>
  41bd91:	cmp    BYTE PTR [rbx],0x20
  41bd94:	jg     41b2ce <main@@Base+0x141fe>
  41bd9a:	jne    41bdae <main@@Base+0x14cde>
  41bd9c:	cmp    BYTE PTR [rcx+0x2],0x20
  41bda0:	jle    41bdae <main@@Base+0x14cde>
  41bda2:	add    rcx,0x2
  41bda6:	mov    rbx,rcx
  41bda9:	jmp    41b2ce <main@@Base+0x141fe>
  41bdae:	mov    rdi,r14
  41bdb1:	mov    rsi,rbx
  41bdb4:	mov    rdx,r12
  41bdb7:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41bdbc:	jmp    41b2cb <main@@Base+0x141fb>
  41bdc1:	mov    rbx,r12
  41bdc4:	cmp    DWORD PTR [r14+0x20],0x0
  41bdc9:	jne    41b313 <main@@Base+0x14243>
  41bdcf:	mov    rdi,QWORD PTR [r14]
  41bdd2:	call   4200d0 <flatcc_builder_end_table@@Base>
  41bdd7:	mov    DWORD PTR [r15],eax
  41bdda:	test   eax,eax
  41bddc:	jne    41b329 <main@@Base+0x14259>
  41bde2:	jmp    41b313 <main@@Base+0x14243>
  41bde7:	cmp    al,0x7d
  41bde9:	jne    41be7c <main@@Base+0x14dac>
  41bdef:	lea    rbx,[rbp+0x1]
  41bdf3:	mov    rax,r12
  41bdf6:	sub    rax,rbx
  41bdf9:	cmp    rax,0x2
  41bdfd:	jl     41be56 <main@@Base+0x14d86>
  41bdff:	cmp    BYTE PTR [rbx],0x20
  41be02:	jg     41b308 <main@@Base+0x14238>
  41be08:	jne    41be56 <main@@Base+0x14d86>
  41be0a:	cmp    BYTE PTR [rbp+0x2],0x20
  41be0e:	jle    41be56 <main@@Base+0x14d86>
  41be10:	add    rbp,0x2
  41be14:	mov    rbx,rbp
  41be17:	cmp    DWORD PTR [r14+0x20],0x0
  41be1c:	jne    41b313 <main@@Base+0x14243>
  41be22:	jmp    41bdcf <main@@Base+0x14cff>
  41be24:	mov    rdi,r14
  41be27:	mov    rsi,r12
  41be2a:	jmp    41be82 <main@@Base+0x14db2>
  41be2c:	lea    rbx,[rax+0x1]
  41be30:	mov    rcx,r12
  41be33:	sub    rcx,rbx
  41be36:	cmp    rcx,0x2
  41be3a:	jl     41be56 <main@@Base+0x14d86>
  41be3c:	cmp    BYTE PTR [rbx],0x20
  41be3f:	jg     41b308 <main@@Base+0x14238>
  41be45:	jne    41be56 <main@@Base+0x14d86>
  41be47:	cmp    BYTE PTR [rax+0x2],0x20
  41be4b:	jle    41be56 <main@@Base+0x14d86>
  41be4d:	add    rax,0x2
  41be51:	jmp    41b305 <main@@Base+0x14235>
  41be56:	mov    rdi,r14
  41be59:	mov    rsi,rbx
  41be5c:	mov    rdx,r12
  41be5f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41be64:	jmp    41b305 <main@@Base+0x14235>
  41be69:	mov    rdi,r14
  41be6c:	mov    rsi,rax
  41be6f:	mov    rdx,r12
  41be72:	mov    ecx,0xa
  41be77:	jmp    41b2c6 <main@@Base+0x141f6>
  41be7c:	mov    rdi,r14
  41be7f:	mov    rsi,rbp
  41be82:	mov    rdx,r12
  41be85:	mov    ecx,0xa
  41be8a:	jmp    41b300 <main@@Base+0x14230>
  41be8f:	mov    rdi,r14
  41be92:	mov    rsi,rax
  41be95:	mov    rdx,r12
  41be98:	mov    ecx,0x21
  41be9d:	jmp    41b2c6 <main@@Base+0x141f6>
  41bea2:	mov    rbx,rbp
  41bea5:	jmp    41b313 <main@@Base+0x14243>
  41beaa:	nop    WORD PTR [rax+rax*1+0x0]
  41beb0:	inc    dil
  41beb3:	cmp    dil,0xc
  41beb7:	ja     41bec8 <main@@Base+0x14df8>
  41beb9:	movsx  rax,dil
  41bebd:	lea    rcx,[rip+0x18bac]        # 434a70 <_IO_stdin_used@@Base+0xa70>
  41bec4:	mov    eax,DWORD PTR [rcx+rax*4]
  41bec7:	ret    
  41bec8:	xor    eax,eax
  41beca:	ret    
  41becb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bed0:	push   rbp
  41bed1:	push   r15
  41bed3:	push   r14
  41bed5:	push   r13
  41bed7:	push   r12
  41bed9:	push   rbx
  41beda:	sub    rsp,0x18
  41bede:	mov    r13,rcx
  41bee1:	mov    r15,rdx
  41bee4:	mov    rbx,rsi
  41bee7:	mov    r14,rdi
  41beea:	mov    DWORD PTR [rcx],0x0
  41bef0:	mov    rdi,QWORD PTR [rdi]
  41bef3:	mov    esi,0x4
  41bef8:	mov    edx,0x4
  41befd:	call   41e770 <flatcc_builder_start_struct@@Base>
  41bf02:	test   rax,rax
  41bf05:	je     41c3e6 <main@@Base+0x15316>
  41bf0b:	cmp    rbx,r15
  41bf0e:	je     41bf3e <main@@Base+0x14e6e>
  41bf10:	cmp    BYTE PTR [rbx],0x7b
  41bf13:	jne    41bf3e <main@@Base+0x14e6e>
  41bf15:	mov    r12,rax
  41bf18:	lea    rax,[rbx+0x1]
  41bf1c:	mov    rcx,r15
  41bf1f:	sub    rcx,rax
  41bf22:	cmp    rcx,0x2
  41bf26:	jl     41bf7c <main@@Base+0x14eac>
  41bf28:	cmp    BYTE PTR [rax],0x20
  41bf2b:	jg     41bf8a <main@@Base+0x14eba>
  41bf2d:	jne    41bf7c <main@@Base+0x14eac>
  41bf2f:	cmp    BYTE PTR [rbx+0x2],0x20
  41bf33:	jle    41bf7c <main@@Base+0x14eac>
  41bf35:	add    rbx,0x2
  41bf39:	mov    rax,rbx
  41bf3c:	jmp    41bf8a <main@@Base+0x14eba>
  41bf3e:	mov    rdi,r14
  41bf41:	mov    rsi,rbx
  41bf44:	mov    rdx,r15
  41bf47:	mov    ecx,0x15
  41bf4c:	call   424090 <flatcc_json_parser_set_error@@Base>
  41bf51:	mov    rbp,rax
  41bf54:	mov    rbx,r15
  41bf57:	cmp    rbp,r15
  41bf5a:	je     41c3e6 <main@@Base+0x15316>
  41bf60:	mov    rdi,QWORD PTR [r14]
  41bf63:	call   41e840 <flatcc_builder_end_struct@@Base>
  41bf68:	mov    DWORD PTR [r13+0x0],eax
  41bf6c:	mov    rbx,rbp
  41bf6f:	test   eax,eax
  41bf71:	jne    41c3fc <main@@Base+0x1532c>
  41bf77:	jmp    41c3e6 <main@@Base+0x15316>
  41bf7c:	mov    rdi,r14
  41bf7f:	mov    rsi,rax
  41bf82:	mov    rdx,r15
  41bf85:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41bf8a:	mov    rcx,r15
  41bf8d:	cmp    rax,r15
  41bf90:	je     41bf9e <main@@Base+0x14ece>
  41bf92:	cmp    BYTE PTR [rax],0x7d
  41bf95:	je     41c413 <main@@Base+0x15343>
  41bf9b:	mov    rcx,rax
  41bf9e:	mov    QWORD PTR [rsp+0x8],r13
  41bfa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bfad:	nop    DWORD PTR [rax]
  41bfb0:	mov    rsi,r15
  41bfb3:	cmp    rcx,r15
  41bfb6:	je     41bffb <main@@Base+0x14f2b>
  41bfb8:	movzx  eax,BYTE PTR [rcx]
  41bfbb:	cmp    al,0x2e
  41bfbd:	je     41bfd0 <main@@Base+0x14f00>
  41bfbf:	cmp    al,0x22
  41bfc1:	jne    41bff0 <main@@Base+0x14f20>
  41bfc3:	inc    rcx
  41bfc6:	mov    DWORD PTR [r14+0x14],0x0
  41bfce:	jmp    41bff8 <main@@Base+0x14f28>
  41bfd0:	mov    rdi,r14
  41bfd3:	mov    rsi,rcx
  41bfd6:	mov    rdx,r15
  41bfd9:	mov    ecx,0x5
  41bfde:	call   424090 <flatcc_json_parser_set_error@@Base>
  41bfe3:	mov    rsi,rax
  41bfe6:	jmp    41bffb <main@@Base+0x14f2b>
  41bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bff0:	mov    DWORD PTR [r14+0x14],0x1
  41bff8:	mov    rsi,rcx
  41bffb:	mov    rax,r15
  41bffe:	sub    rax,rsi
  41c001:	cmp    rax,0x8
  41c005:	jb     41c010 <main@@Base+0x14f40>
  41c007:	movbe  rax,QWORD PTR [rsi]
  41c00c:	jmp    41c08c <main@@Base+0x14fbc>
  41c00e:	xchg   ax,ax
  41c010:	dec    rax
  41c013:	cmp    rax,0x6
  41c017:	ja     41c0c0 <main@@Base+0x14ff0>
  41c01d:	lea    rcx,[rip+0x18968]        # 43498c <_IO_stdin_used@@Base+0x98c>
  41c024:	mov    rdx,rcx
  41c027:	movsxd rcx,DWORD PTR [rcx+rax*4]
  41c02b:	add    rcx,rdx
  41c02e:	xor    r8d,r8d
  41c031:	xor    eax,eax
  41c033:	xor    edx,edx
  41c035:	xor    edi,edi
  41c037:	xor    ebp,ebp
  41c039:	xor    ebx,ebx
  41c03b:	jmp    rcx
  41c03d:	movsx  r8,BYTE PTR [rsi+0x6]
  41c042:	shl    r8,0x8
  41c046:	movsx  rax,BYTE PTR [rsi+0x5]
  41c04b:	shl    rax,0x10
  41c04f:	or     rax,r8
  41c052:	movsx  rdx,BYTE PTR [rsi+0x4]
  41c057:	shl    rdx,0x18
  41c05b:	or     rdx,rax
  41c05e:	movsx  rdi,BYTE PTR [rsi+0x3]
  41c063:	shl    rdi,0x20
  41c067:	or     rdi,rdx
  41c06a:	movsx  rbp,BYTE PTR [rsi+0x2]
  41c06f:	shl    rbp,0x28
  41c073:	or     rbp,rdi
  41c076:	movsx  rbx,BYTE PTR [rsi+0x1]
  41c07b:	shl    rbx,0x30
  41c07f:	or     rbx,rbp
  41c082:	movzx  eax,BYTE PTR [rsi]
  41c085:	shl    rax,0x38
  41c089:	or     rax,rbx
  41c08c:	movabs rcx,0x626f6f6b735f7265
  41c096:	cmp    rax,rcx
  41c099:	jne    41c0c0 <main@@Base+0x14ff0>
  41c09b:	lea    r13,[rsi+0x8]
  41c09f:	mov    rax,r15
  41c0a2:	sub    rax,r13
  41c0a5:	cmp    rax,0x8
  41c0a9:	jb     41c0d0 <main@@Base+0x15000>
  41c0ab:	movbe  rcx,QWORD PTR [r13+0x0]
  41c0b1:	jmp    41c14d <main@@Base+0x1507d>
  41c0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c0c0:	mov    rdi,r14
  41c0c3:	mov    rdx,r15
  41c0c6:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41c0cb:	jmp    41c233 <main@@Base+0x15163>
  41c0d0:	lea    rcx,[rax-0x1]
  41c0d4:	cmp    rcx,0x6
  41c0d8:	ja     41c220 <main@@Base+0x15150>
  41c0de:	lea    rdx,[rip+0x188c3]        # 4349a8 <_IO_stdin_used@@Base+0x9a8>
  41c0e5:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41c0e9:	add    rcx,rdx
  41c0ec:	xor    r8d,r8d
  41c0ef:	xor    r9d,r9d
  41c0f2:	xor    edi,edi
  41c0f4:	xor    ebp,ebp
  41c0f6:	xor    ebx,ebx
  41c0f8:	xor    edx,edx
  41c0fa:	jmp    rcx
  41c0fc:	movsx  r8,BYTE PTR [rsi+0xe]
  41c101:	shl    r8,0x8
  41c105:	movsx  r9,BYTE PTR [rsi+0xd]
  41c10a:	shl    r9,0x10
  41c10e:	or     r9,r8
  41c111:	movsx  rdi,BYTE PTR [rsi+0xc]
  41c116:	shl    rdi,0x18
  41c11a:	or     rdi,r9
  41c11d:	movsx  rbp,BYTE PTR [rsi+0xb]
  41c122:	shl    rbp,0x20
  41c126:	or     rbp,rdi
  41c129:	movsx  rbx,BYTE PTR [rsi+0xa]
  41c12e:	shl    rbx,0x28
  41c132:	or     rbx,rbp
  41c135:	movsx  rdx,BYTE PTR [rsi+0x9]
  41c13a:	shl    rdx,0x30
  41c13e:	or     rdx,rbx
  41c141:	movzx  ecx,BYTE PTR [r13+0x0]
  41c146:	shl    rcx,0x38
  41c14a:	or     rcx,rdx
  41c14d:	shr    rcx,0x30
  41c151:	cmp    rcx,0x6164
  41c158:	jne    41c220 <main@@Base+0x15150>
  41c15e:	cmp    rax,0x3
  41c162:	jl     41c220 <main@@Base+0x15150>
  41c168:	cmp    DWORD PTR [r14+0x14],0x0
  41c16d:	movzx  eax,BYTE PTR [rsi+0xa]
  41c171:	je     41c18d <main@@Base+0x150bd>
  41c173:	cmp    al,0x21
  41c175:	jl     41c17f <main@@Base+0x150af>
  41c177:	cmp    al,0x3a
  41c179:	jne    41c220 <main@@Base+0x15150>
  41c17f:	add    rsi,0xa
  41c183:	mov    DWORD PTR [r14+0x14],0x0
  41c18b:	jmp    41c199 <main@@Base+0x150c9>
  41c18d:	cmp    al,0x22
  41c18f:	jne    41c220 <main@@Base+0x15150>
  41c195:	add    rsi,0xb
  41c199:	mov    rax,r15
  41c19c:	sub    rax,rsi
  41c19f:	cmp    rax,0x2
  41c1a3:	jl     41c1bf <main@@Base+0x150ef>
  41c1a5:	cmp    BYTE PTR [rsi],0x20
  41c1a8:	jg     41c1cd <main@@Base+0x150fd>
  41c1aa:	jne    41c1bf <main@@Base+0x150ef>
  41c1ac:	cmp    BYTE PTR [rsi+0x1],0x20
  41c1b0:	jle    41c1bf <main@@Base+0x150ef>
  41c1b2:	inc    rsi
  41c1b5:	cmp    rsi,r15
  41c1b8:	jne    41c1d6 <main@@Base+0x15106>
  41c1ba:	jmp    41c2d8 <main@@Base+0x15208>
  41c1bf:	mov    rdi,r14
  41c1c2:	mov    rdx,r15
  41c1c5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c1ca:	mov    rsi,rax
  41c1cd:	cmp    rsi,r15
  41c1d0:	je     41c2d8 <main@@Base+0x15208>
  41c1d6:	cmp    BYTE PTR [rsi],0x3a
  41c1d9:	jne    41c2d8 <main@@Base+0x15208>
  41c1df:	lea    rbp,[rsi+0x1]
  41c1e3:	mov    rax,r15
  41c1e6:	sub    rax,rbp
  41c1e9:	cmp    rax,0x2
  41c1ed:	jl     41c2ea <main@@Base+0x1521a>
  41c1f3:	cmp    BYTE PTR [rbp+0x0],0x20
  41c1f7:	jg     41c2fb <main@@Base+0x1522b>
  41c1fd:	jne    41c2ea <main@@Base+0x1521a>
  41c203:	cmp    BYTE PTR [rsi+0x2],0x20
  41c207:	jle    41c2ea <main@@Base+0x1521a>
  41c20d:	add    rsi,0x2
  41c211:	mov    rbp,rsi
  41c214:	cmp    r13,rbp
  41c217:	jne    41c304 <main@@Base+0x15234>
  41c21d:	nop    DWORD PTR [rax]
  41c220:	mov    rdi,r14
  41c223:	mov    rsi,r13
  41c226:	mov    rdx,r15
  41c229:	call   424650 <flatcc_json_parser_unmatched_symbol@@Base>
  41c22e:	mov    r13,QWORD PTR [rsp+0x8]
  41c233:	mov    rcx,r15
  41c236:	sub    rcx,rax
  41c239:	cmp    rcx,0x2
  41c23d:	jl     41c260 <main@@Base+0x15190>
  41c23f:	cmp    BYTE PTR [rax],0x20
  41c242:	jg     41c26e <main@@Base+0x1519e>
  41c244:	jne    41c260 <main@@Base+0x15190>
  41c246:	cmp    BYTE PTR [rax+0x1],0x20
  41c24a:	jle    41c260 <main@@Base+0x15190>
  41c24c:	inc    rax
  41c24f:	cmp    rax,r15
  41c252:	jne    41c277 <main@@Base+0x151a7>
  41c254:	jmp    41c3e3 <main@@Base+0x15313>
  41c259:	nop    DWORD PTR [rax+0x0]
  41c260:	mov    rdi,r14
  41c263:	mov    rsi,rax
  41c266:	mov    rdx,r15
  41c269:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c26e:	cmp    rax,r15
  41c271:	je     41c3e3 <main@@Base+0x15313>
  41c277:	movzx  ecx,BYTE PTR [rax]
  41c27a:	cmp    cl,0x2c
  41c27d:	jne    41c40e <main@@Base+0x1533e>
  41c283:	lea    rcx,[rax+0x1]
  41c287:	mov    rdx,r15
  41c28a:	sub    rdx,rcx
  41c28d:	cmp    rdx,0x2
  41c291:	jl     41c2b0 <main@@Base+0x151e0>
  41c293:	cmp    BYTE PTR [rcx],0x20
  41c296:	jg     41c2c1 <main@@Base+0x151f1>
  41c298:	jne    41c2b0 <main@@Base+0x151e0>
  41c29a:	cmp    BYTE PTR [rax+0x2],0x20
  41c29e:	jle    41c2b0 <main@@Base+0x151e0>
  41c2a0:	add    rax,0x2
  41c2a4:	jmp    41c2be <main@@Base+0x151ee>
  41c2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2b0:	mov    rdi,r14
  41c2b3:	mov    rsi,rcx
  41c2b6:	mov    rdx,r15
  41c2b9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c2be:	mov    rcx,rax
  41c2c1:	cmp    rcx,r15
  41c2c4:	je     41c43e <main@@Base+0x1536e>
  41c2ca:	cmp    BYTE PTR [rcx],0x7d
  41c2cd:	jne    41bfb0 <main@@Base+0x14ee0>
  41c2d3:	jmp    41c446 <main@@Base+0x15376>
  41c2d8:	mov    rdi,r14
  41c2db:	mov    rdx,r15
  41c2de:	mov    ecx,0x4
  41c2e3:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c2e8:	jmp    41c2f8 <main@@Base+0x15228>
  41c2ea:	mov    rdi,r14
  41c2ed:	mov    rsi,rbp
  41c2f0:	mov    rdx,r15
  41c2f3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c2f8:	mov    rbp,rax
  41c2fb:	cmp    r13,rbp
  41c2fe:	je     41c220 <main@@Base+0x15150>
  41c304:	mov    QWORD PTR [rsp+0x10],0x0
  41c30d:	mov    DWORD PTR [rsp+0x4],0x0
  41c315:	mov    DWORD PTR [rsp],0x0
  41c31c:	xor    r13d,r13d
  41c31f:	cmp    rbp,r15
  41c322:	je     41c367 <main@@Base+0x15297>
  41c324:	mov    rdi,r14
  41c327:	mov    rsi,rbp
  41c32a:	mov    rdx,r15
  41c32d:	lea    rcx,[rsp+0x4]
  41c332:	lea    r8,[rsp+0x10]
  41c337:	call   425c50 <flatcc_json_parser_integer@@Base>
  41c33c:	cmp    rax,rbp
  41c33f:	je     41c371 <main@@Base+0x152a1>
  41c341:	mov    rcx,QWORD PTR [rsp+0x10]
  41c346:	cmp    DWORD PTR [rsp+0x4],0x0
  41c34b:	je     41c37b <main@@Base+0x152ab>
  41c34d:	mov    edx,0x80000001
  41c352:	cmp    rcx,rdx
  41c355:	jb     41c39e <main@@Base+0x152ce>
  41c357:	mov    rdi,r14
  41c35a:	mov    rsi,rax
  41c35d:	mov    rdx,r15
  41c360:	mov    ecx,0x8
  41c365:	jmp    41c392 <main@@Base+0x152c2>
  41c367:	mov    rax,r15
  41c36a:	cmp    rbp,rax
  41c36d:	jne    41c3da <main@@Base+0x1530a>
  41c36f:	jmp    41c3ac <main@@Base+0x152dc>
  41c371:	mov    rax,rbp
  41c374:	cmp    rbp,rax
  41c377:	jne    41c3da <main@@Base+0x1530a>
  41c379:	jmp    41c3ac <main@@Base+0x152dc>
  41c37b:	test   rcx,0xffffffff80000000
  41c382:	je     41c3a1 <main@@Base+0x152d1>
  41c384:	mov    rdi,r14
  41c387:	mov    rsi,rax
  41c38a:	mov    rdx,r15
  41c38d:	mov    ecx,0x7
  41c392:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c397:	cmp    rbp,rax
  41c39a:	jne    41c3da <main@@Base+0x1530a>
  41c39c:	jmp    41c3ac <main@@Base+0x152dc>
  41c39e:	neg    rcx
  41c3a1:	mov    DWORD PTR [rsp],ecx
  41c3a4:	mov    r13d,ecx
  41c3a7:	cmp    rbp,rax
  41c3aa:	jne    41c3da <main@@Base+0x1530a>
  41c3ac:	mov    rdi,r14
  41c3af:	mov    rsi,rbp
  41c3b2:	mov    rdx,r15
  41c3b5:	lea    rcx,[rip+0x27364]        # 443720 <__data_start@@Base+0x670>
  41c3bc:	mov    r8,rsp
  41c3bf:	call   414b90 <main@@Base+0xdac0>
  41c3c4:	cmp    rax,rbp
  41c3c7:	je     41c49a <main@@Base+0x153ca>
  41c3cd:	cmp    rax,r15
  41c3d0:	je     41c49a <main@@Base+0x153ca>
  41c3d6:	mov    r13d,DWORD PTR [rsp]
  41c3da:	mov    DWORD PTR [r12],r13d
  41c3de:	jmp    41c22e <main@@Base+0x1515e>
  41c3e3:	mov    rbx,r15
  41c3e6:	mov    rdi,r14
  41c3e9:	mov    rsi,rbx
  41c3ec:	mov    rdx,r15
  41c3ef:	mov    ecx,0x21
  41c3f4:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c3f9:	mov    rbp,rax
  41c3fc:	mov    rax,rbp
  41c3ff:	add    rsp,0x18
  41c403:	pop    rbx
  41c404:	pop    r12
  41c406:	pop    r13
  41c408:	pop    r14
  41c40a:	pop    r15
  41c40c:	pop    rbp
  41c40d:	ret    
  41c40e:	cmp    cl,0x7d
  41c411:	jne    41c487 <main@@Base+0x153b7>
  41c413:	lea    rbp,[rax+0x1]
  41c417:	mov    rcx,r15
  41c41a:	sub    rcx,rbp
  41c41d:	cmp    rcx,0x2
  41c421:	jl     41c474 <main@@Base+0x153a4>
  41c423:	cmp    BYTE PTR [rbp+0x0],0x20
  41c427:	jg     41bf54 <main@@Base+0x14e84>
  41c42d:	jne    41c474 <main@@Base+0x153a4>
  41c42f:	cmp    BYTE PTR [rax+0x2],0x20
  41c433:	jle    41c474 <main@@Base+0x153a4>
  41c435:	add    rax,0x2
  41c439:	jmp    41bf51 <main@@Base+0x14e81>
  41c43e:	mov    rdi,r14
  41c441:	mov    rsi,r15
  41c444:	jmp    41c48d <main@@Base+0x153bd>
  41c446:	lea    rbp,[rcx+0x1]
  41c44a:	mov    rax,r15
  41c44d:	sub    rax,rbp
  41c450:	cmp    rax,0x2
  41c454:	jl     41c474 <main@@Base+0x153a4>
  41c456:	cmp    BYTE PTR [rbp+0x0],0x20
  41c45a:	jg     41bf54 <main@@Base+0x14e84>
  41c460:	jne    41c474 <main@@Base+0x153a4>
  41c462:	cmp    BYTE PTR [rcx+0x2],0x20
  41c466:	jle    41c474 <main@@Base+0x153a4>
  41c468:	add    rcx,0x2
  41c46c:	mov    rbp,rcx
  41c46f:	jmp    41bf54 <main@@Base+0x14e84>
  41c474:	mov    rdi,r14
  41c477:	mov    rsi,rbp
  41c47a:	mov    rdx,r15
  41c47d:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c482:	jmp    41bf51 <main@@Base+0x14e81>
  41c487:	mov    rdi,r14
  41c48a:	mov    rsi,rax
  41c48d:	mov    rdx,r15
  41c490:	mov    ecx,0xa
  41c495:	jmp    41bf4c <main@@Base+0x14e7c>
  41c49a:	mov    rdi,r14
  41c49d:	mov    rsi,rax
  41c4a0:	mov    rdx,r15
  41c4a3:	mov    ecx,0x21
  41c4a8:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c4ad:	mov    rbp,rax
  41c4b0:	mov    r13,QWORD PTR [rsp+0x8]
  41c4b5:	jmp    41bf54 <main@@Base+0x14e84>
  41c4ba:	nop    WORD PTR [rax+rax*1+0x0]
  41c4c0:	push   rbp
  41c4c1:	push   r15
  41c4c3:	push   r14
  41c4c5:	push   r13
  41c4c7:	push   r12
  41c4c9:	push   rbx
  41c4ca:	sub    rsp,0x38
  41c4ce:	mov    r14,r8
  41c4d1:	mov    rbp,rcx
  41c4d4:	mov    r12,rdx
  41c4d7:	mov    rbx,rsi
  41c4da:	mov    r15,rdi
  41c4dd:	mov    WORD PTR [r8],0x0
  41c4e3:	cmp    rsi,rdx
  41c4e6:	je     41c4fd <main@@Base+0x1542d>
  41c4e8:	mov    al,BYTE PTR [rbx]
  41c4ea:	cmp    al,0x2e
  41c4ec:	je     41c50e <main@@Base+0x1543e>
  41c4ee:	cmp    al,0x22
  41c4f0:	jne    41c52d <main@@Base+0x1545d>
  41c4f2:	inc    rbx
  41c4f5:	mov    DWORD PTR [r15+0x14],0x0
  41c4fd:	cmp    DWORD PTR [r15+0x14],0x0
  41c502:	je     41c53c <main@@Base+0x1546c>
  41c504:	cmp    rbx,r12
  41c507:	jne    41c57c <main@@Base+0x154ac>
  41c509:	jmp    41c66d <main@@Base+0x1559d>
  41c50e:	mov    rdi,r15
  41c511:	mov    rsi,rbx
  41c514:	mov    rdx,r12
  41c517:	mov    ecx,0x5
  41c51c:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c521:	mov    rbx,rax
  41c524:	cmp    DWORD PTR [r15+0x14],0x0
  41c529:	jne    41c504 <main@@Base+0x15434>
  41c52b:	jmp    41c53c <main@@Base+0x1546c>
  41c52d:	mov    DWORD PTR [r15+0x14],0x1
  41c535:	cmp    DWORD PTR [r15+0x14],0x0
  41c53a:	jne    41c504 <main@@Base+0x15434>
  41c53c:	mov    rax,r12
  41c53f:	sub    rax,rbx
  41c542:	cmp    rax,0x2
  41c546:	jl     41c562 <main@@Base+0x15492>
  41c548:	cmp    BYTE PTR [rbx],0x20
  41c54b:	jg     41c504 <main@@Base+0x15434>
  41c54d:	jne    41c562 <main@@Base+0x15492>
  41c54f:	cmp    BYTE PTR [rbx+0x1],0x20
  41c553:	jle    41c562 <main@@Base+0x15492>
  41c555:	inc    rbx
  41c558:	cmp    rbx,r12
  41c55b:	jne    41c57c <main@@Base+0x154ac>
  41c55d:	jmp    41c66d <main@@Base+0x1559d>
  41c562:	mov    rdi,r15
  41c565:	mov    rsi,rbx
  41c568:	mov    rdx,r12
  41c56b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  41c570:	mov    rbx,rax
  41c573:	cmp    rbx,r12
  41c576:	je     41c66d <main@@Base+0x1559d>
  41c57c:	lea    rax,[rbp+0x8]
  41c580:	mov    DWORD PTR [rsp+0xc],0x0
  41c588:	mov    QWORD PTR [rsp+0x20],r14
  41c58d:	mov    QWORD PTR [rsp+0x18],rbp
  41c592:	mov    QWORD PTR [rsp+0x28],rax
  41c597:	mov    rbp,QWORD PTR [rbp+0x0]
  41c59b:	mov    r14,rax
  41c59e:	xchg   ax,ax
  41c5a0:	mov    rdi,r15
  41c5a3:	mov    rsi,rbx
  41c5a6:	mov    rdx,r12
  41c5a9:	lea    rcx,[rsp+0x14]
  41c5ae:	lea    r8,[rsp+0x30]
  41c5b3:	lea    r9,[rsp+0x10]
  41c5b8:	call   rbp
  41c5ba:	cmp    rax,r12
  41c5bd:	je     41c66d <main@@Base+0x1559d>
  41c5c3:	mov    r13,rax
  41c5c6:	cmp    rax,rbx
  41c5c9:	jne    41c5e0 <main@@Base+0x15510>
  41c5cb:	mov    rbp,QWORD PTR [r14]
  41c5ce:	add    r14,0x8
  41c5d2:	test   rbp,rbp
  41c5d5:	jne    41c5a0 <main@@Base+0x154d0>
  41c5d7:	jmp    41c672 <main@@Base+0x155a2>
  41c5dc:	nop    DWORD PTR [rax+0x0]
  41c5e0:	cmp    DWORD PTR [rsp+0x14],0x0
  41c5e5:	je     41c60b <main@@Base+0x1553b>
  41c5e7:	mov    rdi,r15
  41c5ea:	mov    rsi,r13
  41c5ed:	mov    rdx,r12
  41c5f0:	mov    ecx,0x8
  41c5f5:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c5fa:	mov    r14,QWORD PTR [rsp+0x20]
  41c5ff:	mov    rbp,QWORD PTR [rsp+0x18]
  41c604:	cmp    rax,r12
  41c607:	jne    41c650 <main@@Base+0x15580>
  41c609:	jmp    41c66d <main@@Base+0x1559d>
  41c60b:	mov    rax,QWORD PTR [rsp+0x30]
  41c610:	cmp    rax,0x10000
  41c616:	mov    r14,QWORD PTR [rsp+0x20]
  41c61b:	mov    rbp,QWORD PTR [rsp+0x18]
  41c620:	jb     41c63c <main@@Base+0x1556c>
  41c622:	mov    rdi,r15
  41c625:	mov    rsi,r13
  41c628:	mov    rdx,r12
  41c62b:	mov    ecx,0x7
  41c630:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c635:	cmp    rax,r12
  41c638:	jne    41c650 <main@@Base+0x15580>
  41c63a:	jmp    41c66d <main@@Base+0x1559d>
  41c63c:	mov    DWORD PTR [rsp+0xc],eax
  41c640:	mov    rax,r13
  41c643:	cmp    rax,r12
  41c646:	je     41c66d <main@@Base+0x1559d>
  41c648:	nop    DWORD PTR [rax+rax*1+0x0]
  41c650:	mov    eax,DWORD PTR [rsp+0xc]
  41c654:	add    WORD PTR [r14],ax
  41c658:	cmp    DWORD PTR [rsp+0x10],0x0
  41c65d:	mov    rbx,r13
  41c660:	mov    rax,QWORD PTR [rsp+0x28]
  41c665:	jne    41c597 <main@@Base+0x154c7>
  41c66b:	jmp    41c688 <main@@Base+0x155b8>
  41c66d:	mov    r13,r12
  41c670:	jmp    41c688 <main@@Base+0x155b8>
  41c672:	mov    rdi,r15
  41c675:	mov    rsi,rbx
  41c678:	mov    rdx,r12
  41c67b:	mov    ecx,0x17
  41c680:	call   424090 <flatcc_json_parser_set_error@@Base>
  41c685:	mov    r13,rax
  41c688:	mov    rax,r13
  41c68b:	add    rsp,0x38
  41c68f:	pop    rbx
  41c690:	pop    r12
  41c692:	pop    r13
  41c694:	pop    r14
  41c696:	pop    r15
  41c698:	pop    rbp
  41c699:	ret    
  41c69a:	nop    WORD PTR [rax+rax*1+0x0]
  41c6a0:	push   r14
  41c6a2:	push   rbx
  41c6a3:	push   rax
  41c6a4:	mov    r14,rsi
  41c6a7:	mov    rbx,rdi
  41c6aa:	lea    r8,[rip+0x1bc3c]        # 4382ed <_IO_stdin_used@@Base+0x42ed>
  41c6b1:	xor    esi,esi
  41c6b3:	mov    rdx,r14
  41c6b6:	xor    ecx,ecx
  41c6b8:	mov    r9d,0x1
  41c6be:	call   42b3a0 <flatcc_json_printer_float_struct_field@@Base>
  41c6c3:	lea    r8,[rip+0x1e567]        # 43ac31 <flatcc_builder_padding_base@@Base+0x2581>
  41c6ca:	mov    ecx,0x4
  41c6cf:	mov    rdi,rbx
  41c6d2:	mov    esi,0x1
  41c6d7:	mov    rdx,r14
  41c6da:	mov    r9d,0x1
  41c6e0:	call   42b3a0 <flatcc_json_printer_float_struct_field@@Base>
  41c6e5:	lea    r8,[rip+0x1bdba]        # 4384a6 <_IO_stdin_used@@Base+0x44a6>
  41c6ec:	mov    ecx,0x8
  41c6f1:	mov    rdi,rbx
  41c6f4:	mov    esi,0x2
  41c6f9:	mov    rdx,r14
  41c6fc:	mov    r9d,0x1
  41c702:	call   42b3a0 <flatcc_json_printer_float_struct_field@@Base>
  41c707:	lea    r8,[rip+0x1bd9a]        # 4384a8 <_IO_stdin_used@@Base+0x44a8>
  41c70e:	mov    ecx,0x10
  41c713:	mov    rdi,rbx
  41c716:	mov    esi,0x3
  41c71b:	mov    rdx,r14
  41c71e:	mov    r9d,0x5
  41c724:	call   42b400 <flatcc_json_printer_double_struct_field@@Base>
  41c729:	lea    rax,[rip+0x60]        # 41c790 <main@@Base+0x156c0>
  41c730:	mov    QWORD PTR [rsp],rax
  41c734:	lea    r8,[rip+0x1bd73]        # 4384ae <_IO_stdin_used@@Base+0x44ae>
  41c73b:	mov    ecx,0x18
  41c740:	mov    rdi,rbx
  41c743:	mov    esi,0x4
  41c748:	mov    rdx,r14
  41c74b:	mov    r9d,0x5
  41c751:	call   42b760 <flatcc_json_printer_int8_enum_struct_field@@Base>
  41c756:	lea    rax,[rip+0x1b3]        # 41c910 <main@@Base+0x15840>
  41c75d:	mov    QWORD PTR [rsp],rax
  41c761:	lea    r8,[rip+0x1bd4c]        # 4384b4 <_IO_stdin_used@@Base+0x44b4>
  41c768:	mov    ecx,0x1a
  41c76d:	mov    rdi,rbx
  41c770:	mov    esi,0x5
  41c775:	mov    rdx,r14
  41c778:	mov    r9d,0x5
  41c77e:	call   432320 <flatcc_json_printer_embedded_struct_field@@Base>
  41c783:	add    rsp,0x8
  41c787:	pop    rbx
  41c788:	pop    r14
  41c78a:	ret    
  41c78b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c790:	push   rbp
  41c791:	push   r15
  41c793:	push   r14
  41c795:	push   rbx
  41c796:	push   rax
  41c797:	mov    ebp,esi
  41c799:	mov    rbx,rdi
  41c79c:	movzx  ecx,bpl
  41c7a0:	xor    r14d,r14d
  41c7a3:	blsr   eax,ecx
  41c7a8:	setne  al
  41c7ab:	test   cl,cl
  41c7ad:	je     41c804 <main@@Base+0x15734>
  41c7af:	mov    ecx,ebp
  41c7b1:	and    ecx,0xf4
  41c7b7:	jne    41c804 <main@@Base+0x15734>
  41c7b9:	mov    r14b,al
  41c7bc:	mov    rdi,rbx
  41c7bf:	mov    esi,r14d
  41c7c2:	call   429520 <flatcc_json_printer_delimit_enum_flags@@Base>
  41c7c7:	xor    esi,esi
  41c7c9:	test   bpl,0x1
  41c7cd:	jne    41c81a <main@@Base+0x1574a>
  41c7cf:	test   bpl,0x2
  41c7d3:	jne    41c83b <main@@Base+0x1576b>
  41c7d5:	test   bpl,0x8
  41c7d9:	je     41c7ef <main@@Base+0x1571f>
  41c7db:	lea    rdx,[rip+0x1bce2]        # 4384c4 <_IO_stdin_used@@Base+0x44c4>
  41c7e2:	mov    rdi,rbx
  41c7e5:	mov    ecx,0x4
  41c7ea:	call   429540 <flatcc_json_printer_enum_flag@@Base>
  41c7ef:	mov    rdi,rbx
  41c7f2:	mov    esi,r14d
  41c7f5:	add    rsp,0x8
  41c7f9:	pop    rbx
  41c7fa:	pop    r14
  41c7fc:	pop    r15
  41c7fe:	pop    rbp
  41c7ff:	jmp    429520 <flatcc_json_printer_delimit_enum_flags@@Base>
  41c804:	movsx  esi,bpl
  41c808:	mov    rdi,rbx
  41c80b:	add    rsp,0x8
  41c80f:	pop    rbx
  41c810:	pop    r14
  41c812:	pop    r15
  41c814:	pop    rbp
  41c815:	jmp    429190 <flatcc_json_printer_int8@@Base>
  41c81a:	lea    rdx,[rip+0x1bc99]        # 4384ba <_IO_stdin_used@@Base+0x44ba>
  41c821:	mov    rdi,rbx
  41c824:	xor    esi,esi
  41c826:	mov    ecx,0x3
  41c82b:	call   429540 <flatcc_json_printer_enum_flag@@Base>
  41c830:	mov    esi,0x1
  41c835:	test   bpl,0x2
  41c839:	je     41c7d5 <main@@Base+0x15705>
  41c83b:	lea    r15d,[rsi+0x1]
  41c83f:	lea    rdx,[rip+0x1bc78]        # 4384be <_IO_stdin_used@@Base+0x44be>
  41c846:	mov    rdi,rbx
  41c849:	mov    ecx,0x5
  41c84e:	call   429540 <flatcc_json_printer_enum_flag@@Base>
  41c853:	mov    esi,r15d
  41c856:	test   bpl,0x8
  41c85a:	jne    41c7db <main@@Base+0x1570b>
  41c860:	jmp    41c7ef <main@@Base+0x1571f>
  41c862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c86c:	nop    DWORD PTR [rax+0x0]
  41c870:	dec    sil
  41c873:	cmp    sil,0x3
  41c877:	ja     41c89e <main@@Base+0x157ce>
  41c879:	movzx  eax,sil
  41c87d:	lea    rcx,[rip+0x18140]        # 4349c4 <_IO_stdin_used@@Base+0x9c4>
  41c884:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c888:	add    rax,rcx
  41c88b:	jmp    rax
  41c88d:	lea    rsi,[rip+0x1bc35]        # 4384c9 <_IO_stdin_used@@Base+0x44c9>
  41c894:	mov    edx,0x7
  41c899:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41c89e:	lea    rsi,[rip+0x1d595]        # 439e3a <flatcc_builder_padding_base@@Base+0x178a>
  41c8a5:	mov    edx,0x4
  41c8aa:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41c8af:	lea    rsi,[rip+0x1bc1b]        # 4384d1 <_IO_stdin_used@@Base+0x44d1>
  41c8b6:	mov    edx,0x17
  41c8bb:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41c8c0:	lea    rsi,[rip+0x1bc22]        # 4384e9 <_IO_stdin_used@@Base+0x44e9>
  41c8c7:	mov    edx,0x8
  41c8cc:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41c8d1:	lea    rsi,[rip+0x1bc1a]        # 4384f2 <_IO_stdin_used@@Base+0x44f2>
  41c8d8:	mov    edx,0x3
  41c8dd:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41c8e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8ec:	nop    DWORD PTR [rax+0x0]
  41c8f0:	mov    al,BYTE PTR [rsi+0xc]
  41c8f3:	dec    al
  41c8f5:	cmp    al,0x3
  41c8f7:	ja     41c90d <main@@Base+0x1583d>
  41c8f9:	movsx  rax,al
  41c8fd:	lea    rcx,[rip+0x2625c]        # 442b60 <flatcc_builder_padding_base@@Base+0xa4b0>
  41c904:	mov    rdx,QWORD PTR [rcx+rax*8]
  41c908:	jmp    4320e0 <flatcc_json_printer_union_table@@Base>
  41c90d:	ret    
  41c90e:	xchg   ax,ax
  41c910:	push   r14
  41c912:	push   rbx
  41c913:	push   rax
  41c914:	mov    r14,rsi
  41c917:	mov    rbx,rdi
  41c91a:	lea    r8,[rip+0x1baaf]        # 4383d0 <_IO_stdin_used@@Base+0x43d0>
  41c921:	xor    esi,esi
  41c923:	mov    rdx,r14
  41c926:	xor    ecx,ecx
  41c928:	mov    r9d,0x1
  41c92e:	call   42b0f0 <flatcc_json_printer_int16_struct_field@@Base>
  41c933:	lea    r8,[rip+0x1bc35]        # 43856f <_IO_stdin_used@@Base+0x456f>
  41c93a:	mov    ecx,0x2
  41c93f:	mov    rdi,rbx
  41c942:	mov    esi,0x1
  41c947:	mov    rdx,r14
  41c94a:	mov    r9d,0x1
  41c950:	add    rsp,0x8
  41c954:	pop    rbx
  41c955:	pop    r14
  41c957:	jmp    42b020 <flatcc_json_printer_int8_struct_field@@Base>
  41c95c:	nop    DWORD PTR [rax+0x0]
  41c960:	push   r14
  41c962:	push   rbx
  41c963:	push   rax
  41c964:	mov    r14,rsi
  41c967:	mov    rbx,rdi
  41c96a:	lea    rcx,[rip+0x1bcf5]        # 438666 <_IO_stdin_used@@Base+0x4666>
  41c971:	xor    edx,edx
  41c973:	mov    r8d,0x2
  41c979:	call   4295f0 <flatcc_json_printer_string_field@@Base>
  41c97e:	lea    rcx,[rip+0x1bce4]        # 438669 <_IO_stdin_used@@Base+0x4669>
  41c985:	mov    rdi,rbx
  41c988:	mov    rsi,r14
  41c98b:	mov    edx,0x1
  41c990:	mov    r8d,0x3
  41c996:	xor    r9d,r9d
  41c999:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41c99e:	lea    rcx,[rip+0x1c5f1]        # 438f96 <flatcc_builder_padding_base@@Base+0x8e6>
  41c9a5:	mov    rdi,rbx
  41c9a8:	mov    rsi,r14
  41c9ab:	mov    edx,0x2
  41c9b0:	mov    r8d,0x5
  41c9b6:	xor    r9d,r9d
  41c9b9:	add    rsp,0x8
  41c9bd:	pop    rbx
  41c9be:	pop    r14
  41c9c0:	jmp    429ae0 <flatcc_json_printer_uint16_field@@Base>
  41c9c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9cf:	nop
  41c9d0:	push   r14
  41c9d2:	push   rbx
  41c9d3:	push   rax
  41c9d4:	mov    r14,rsi
  41c9d7:	mov    rbx,rdi
  41c9da:	lea    r8,[rip+0x1bc85]        # 438666 <_IO_stdin_used@@Base+0x4666>
  41c9e1:	xor    esi,esi
  41c9e3:	mov    rdx,r14
  41c9e6:	xor    ecx,ecx
  41c9e8:	mov    r9d,0x2
  41c9ee:	call   42af80 <flatcc_json_printer_uint32_struct_field@@Base>
  41c9f3:	lea    r8,[rip+0x1bc73]        # 43866d <_IO_stdin_used@@Base+0x466d>
  41c9fa:	mov    ecx,0x4
  41c9ff:	mov    rdi,rbx
  41ca02:	mov    esi,0x1
  41ca07:	mov    rdx,r14
  41ca0a:	mov    r9d,0x8
  41ca10:	add    rsp,0x8
  41ca14:	pop    rbx
  41ca15:	pop    r14
  41ca17:	jmp    42af80 <flatcc_json_printer_uint32_struct_field@@Base>
  41ca1c:	nop    DWORD PTR [rax+0x0]
  41ca20:	ret    
  41ca21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca30:	push   r14
  41ca32:	push   rbx
  41ca33:	push   rax
  41ca34:	mov    r14,rsi
  41ca37:	mov    rbx,rdi
  41ca3a:	lea    rcx,[rip+0x1bc38]        # 438679 <_IO_stdin_used@@Base+0x4679>
  41ca41:	xor    edx,edx
  41ca43:	mov    r8d,0x4
  41ca49:	xor    r9d,r9d
  41ca4c:	call   429800 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41ca51:	lea    rcx,[rip+0x1bc1e]        # 438676 <_IO_stdin_used@@Base+0x4676>
  41ca58:	mov    rdi,rbx
  41ca5b:	mov    rsi,r14
  41ca5e:	mov    edx,0x1
  41ca63:	mov    r8d,0x7
  41ca69:	mov    r9d,0x1
  41ca6f:	call   429800 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41ca74:	lea    rcx,[rip+0x1bc03]        # 43867e <_IO_stdin_used@@Base+0x467e>
  41ca7b:	mov    rdi,rbx
  41ca7e:	mov    rsi,r14
  41ca81:	mov    edx,0x2
  41ca86:	mov    r8d,0x6
  41ca8c:	xor    r9d,r9d
  41ca8f:	add    rsp,0x8
  41ca93:	pop    rbx
  41ca94:	pop    r14
  41ca96:	jmp    429800 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41ca9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41caa0:	push   r15
  41caa2:	push   r14
  41caa4:	push   rbx
  41caa5:	sub    rsp,0x10
  41caa9:	mov    r14,rsi
  41caac:	mov    rbx,rdi
  41caaf:	lea    r15,[rip+0xfffffffffffffcda]        # 41c790 <main@@Base+0x156c0>
  41cab6:	mov    QWORD PTR [rsp],r15
  41caba:	lea    rcx,[rip+0x1b85d]        # 43831e <_IO_stdin_used@@Base+0x431e>
  41cac1:	xor    edx,edx
  41cac3:	mov    r8d,0x5
  41cac9:	mov    r9d,0x2
  41cacf:	call   42a800 <flatcc_json_printer_int8_enum_field@@Base>
  41cad4:	mov    QWORD PTR [rsp],r15
  41cad8:	lea    rcx,[rip+0x1ba17]        # 4384f6 <_IO_stdin_used@@Base+0x44f6>
  41cadf:	mov    rdi,rbx
  41cae2:	mov    rsi,r14
  41cae5:	mov    edx,0x1
  41caea:	mov    r8d,0x6
  41caf0:	mov    r9d,0x2
  41caf6:	call   42a800 <flatcc_json_printer_int8_enum_field@@Base>
  41cafb:	lea    rcx,[rip+0x1b9fb]        # 4384fd <_IO_stdin_used@@Base+0x44fd>
  41cb02:	mov    rdi,rbx
  41cb05:	mov    rsi,r14
  41cb08:	mov    edx,0x2
  41cb0d:	mov    r8d,0x2
  41cb13:	mov    r9d,0x2
  41cb19:	call   4299e0 <flatcc_json_printer_uint8_field@@Base>
  41cb1e:	lea    rcx,[rip+0x1b9db]        # 438500 <_IO_stdin_used@@Base+0x4500>
  41cb25:	mov    rdi,rbx
  41cb28:	mov    rsi,r14
  41cb2b:	mov    edx,0x3
  41cb30:	mov    r8d,0x3
  41cb36:	mov    r9d,0x2
  41cb3c:	add    rsp,0x10
  41cb40:	pop    rbx
  41cb41:	pop    r14
  41cb43:	pop    r15
  41cb45:	jmp    4299e0 <flatcc_json_printer_uint8_field@@Base>
  41cb4a:	nop    WORD PTR [rax+rax*1+0x0]
  41cb50:	ret    
  41cb51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb60:	push   r14
  41cb62:	push   rbx
  41cb63:	push   rax
  41cb64:	mov    r14,rsi
  41cb67:	mov    rbx,rdi
  41cb6a:	lea    rcx,[rip+0x1b993]        # 438504 <_IO_stdin_used@@Base+0x4504>
  41cb71:	lea    r9,[rip+0x68]        # 41cbe0 <main@@Base+0x15b10>
  41cb78:	xor    edx,edx
  41cb7a:	mov    r8d,0x6
  41cb80:	call   431b50 <flatcc_json_printer_table_field@@Base>
  41cb85:	lea    rcx,[rip+0x1b97f]        # 43850b <_IO_stdin_used@@Base+0x450b>
  41cb8c:	lea    r9,[rip+0xcd]        # 41cc60 <main@@Base+0x15b90>
  41cb93:	mov    rdi,rbx
  41cb96:	mov    rsi,r14
  41cb99:	mov    edx,0x1
  41cb9e:	mov    r8d,0x5
  41cba4:	call   431b50 <flatcc_json_printer_table_field@@Base>
  41cba9:	lea    rax,[rip+0xfffffffffffffd40]        # 41c8f0 <main@@Base+0x15820>
  41cbb0:	mov    QWORD PTR [rsp],rax
  41cbb4:	lea    rcx,[rip+0x1b956]        # 438511 <_IO_stdin_used@@Base+0x4511>
  41cbbb:	lea    r9,[rip+0xfffffffffffffcae]        # 41c870 <main@@Base+0x157a0>
  41cbc2:	mov    rdi,rbx
  41cbc5:	mov    rsi,r14
  41cbc8:	mov    edx,0x3
  41cbcd:	mov    r8d,0x7
  41cbd3:	call   431810 <flatcc_json_printer_union_vector_field@@Base>
  41cbd8:	add    rsp,0x8
  41cbdc:	pop    rbx
  41cbdd:	pop    r14
  41cbdf:	ret    
  41cbe0:	push   r14
  41cbe2:	push   rbx
  41cbe3:	push   rax
  41cbe4:	mov    r14,rsi
  41cbe7:	mov    rbx,rdi
  41cbea:	lea    rcx,[rip+0x1b928]        # 438519 <_IO_stdin_used@@Base+0x4519>
  41cbf1:	lea    r9,[rip+0x148]        # 41cd40 <main@@Base+0x15c70>
  41cbf8:	xor    edx,edx
  41cbfa:	mov    r8d,0x15
  41cc00:	call   431b50 <flatcc_json_printer_table_field@@Base>
  41cc05:	lea    rcx,[rip+0x1b923]        # 43852f <_IO_stdin_used@@Base+0x452f>
  41cc0c:	lea    r9,[rip+0x24d]        # 41ce60 <main@@Base+0x15d90>
  41cc13:	mov    rdi,rbx
  41cc16:	mov    rsi,r14
  41cc19:	mov    edx,0x1
  41cc1e:	mov    r8d,0x16
  41cc24:	call   431b50 <flatcc_json_printer_table_field@@Base>
  41cc29:	lea    rcx,[rip+0x1b916]        # 438546 <_IO_stdin_used@@Base+0x4546>
  41cc30:	lea    r9,[rip+0x279]        # 41ceb0 <main@@Base+0x15de0>
  41cc37:	mov    rdi,rbx
  41cc3a:	mov    rsi,r14
  41cc3d:	mov    edx,0x2
  41cc42:	mov    r8d,0x16
  41cc48:	add    rsp,0x8
  41cc4c:	pop    rbx
  41cc4d:	pop    r14
  41cc4f:	jmp    431b50 <flatcc_json_printer_table_field@@Base>
  41cc54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc5e:	xchg   ax,ax
  41cc60:	push   r15
  41cc62:	push   r14
  41cc64:	push   r12
  41cc66:	push   rbx
  41cc67:	push   rax
  41cc68:	mov    r14,rsi
  41cc6b:	mov    rbx,rdi
  41cc6e:	lea    r12,[rip+0x32b]        # 41cfa0 <main@@Base+0x15ed0>
  41cc75:	mov    QWORD PTR [rsp],r12
  41cc79:	lea    rcx,[rip+0x1b95c]        # 4385dc <_IO_stdin_used@@Base+0x45dc>
  41cc80:	lea    r15,[rip+0x279]        # 41cf00 <main@@Base+0x15e30>
  41cc87:	mov    edx,0x1
  41cc8c:	mov    r8d,0xe
  41cc92:	mov    r9,r15
  41cc95:	call   431ce0 <flatcc_json_printer_union_field@@Base>
  41cc9a:	mov    QWORD PTR [rsp],r12
  41cc9e:	lea    rcx,[rip+0x1b946]        # 4385eb <_IO_stdin_used@@Base+0x45eb>
  41cca5:	mov    rdi,rbx
  41cca8:	mov    rsi,r14
  41ccab:	mov    edx,0x3
  41ccb0:	mov    r8d,0xa
  41ccb6:	mov    r9,r15
  41ccb9:	call   431ce0 <flatcc_json_printer_union_field@@Base>
  41ccbe:	mov    QWORD PTR [rsp],r12
  41ccc2:	lea    rcx,[rip+0x1b92d]        # 4385f6 <_IO_stdin_used@@Base+0x45f6>
  41ccc9:	mov    rdi,rbx
  41cccc:	mov    rsi,r14
  41cccf:	mov    edx,0x5
  41ccd4:	mov    r8d,0x9
  41ccda:	mov    r9,r15
  41ccdd:	call   431ce0 <flatcc_json_printer_union_field@@Base>
  41cce2:	mov    QWORD PTR [rsp],r12
  41cce6:	lea    rcx,[rip+0x1b913]        # 438600 <_IO_stdin_used@@Base+0x4600>
  41cced:	mov    rdi,rbx
  41ccf0:	mov    rsi,r14
  41ccf3:	mov    edx,0x7
  41ccf8:	mov    r8d,0x5
  41ccfe:	mov    r9,r15
  41cd01:	call   431ce0 <flatcc_json_printer_union_field@@Base>
  41cd06:	mov    QWORD PTR [rsp],r12
  41cd0a:	lea    rcx,[rip+0x1b8f5]        # 438606 <_IO_stdin_used@@Base+0x4606>
  41cd11:	mov    rdi,rbx
  41cd14:	mov    rsi,r14
  41cd17:	mov    edx,0x9
  41cd1c:	mov    r8d,0xa
  41cd22:	mov    r9,r15
  41cd25:	call   431810 <flatcc_json_printer_union_vector_field@@Base>
  41cd2a:	add    rsp,0x8
  41cd2e:	pop    rbx
  41cd2f:	pop    r12
  41cd31:	pop    r14
  41cd33:	pop    r15
  41cd35:	ret    
  41cd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd40:	push   r14
  41cd42:	push   rbx
  41cd43:	push   rax
  41cd44:	mov    r14,rsi
  41cd47:	mov    rbx,rdi
  41cd4a:	lea    rcx,[rip+0x1b80c]        # 43855d <_IO_stdin_used@@Base+0x455d>
  41cd51:	xor    edx,edx
  41cd53:	mov    r8d,0x4
  41cd59:	call   4295f0 <flatcc_json_printer_string_field@@Base>
  41cd5e:	lea    rcx,[rip+0x1b7fd]        # 438562 <_IO_stdin_used@@Base+0x4562>
  41cd65:	mov    rdi,rbx
  41cd68:	mov    rsi,r14
  41cd6b:	mov    edx,0x1
  41cd70:	mov    r8d,0x9
  41cd76:	xor    r9d,r9d
  41cd79:	call   429c90 <flatcc_json_printer_uint32_field@@Base>
  41cd7e:	lea    rcx,[rip+0x1b7e7]        # 43856c <_IO_stdin_used@@Base+0x456c>
  41cd85:	mov    rdi,rbx
  41cd88:	mov    rsi,r14
  41cd8b:	mov    edx,0x2
  41cd90:	mov    r8d,0x4
  41cd96:	call   4295f0 <flatcc_json_printer_string_field@@Base>
  41cd9b:	lea    rcx,[rip+0x1b7cf]        # 438571 <_IO_stdin_used@@Base+0x4571>
  41cda2:	mov    rdi,rbx
  41cda5:	mov    rsi,r14
  41cda8:	mov    edx,0x3
  41cdad:	mov    r8d,0x8
  41cdb3:	xor    r9d,r9d
  41cdb6:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41cdbb:	lea    rcx,[rip+0x1b7b8]        # 43857a <_IO_stdin_used@@Base+0x457a>
  41cdc2:	mov    rdi,rbx
  41cdc5:	mov    rsi,r14
  41cdc8:	mov    edx,0x4
  41cdcd:	mov    r8d,0x4
  41cdd3:	call   4295f0 <flatcc_json_printer_string_field@@Base>
  41cdd8:	lea    rcx,[rip+0x1b7a0]        # 43857f <_IO_stdin_used@@Base+0x457f>
  41cddf:	mov    rdi,rbx
  41cde2:	mov    rsi,r14
  41cde5:	mov    edx,0x5
  41cdea:	mov    r8d,0x8
  41cdf0:	xor    r9d,r9d
  41cdf3:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41cdf8:	lea    rcx,[rip+0x1b789]        # 438588 <_IO_stdin_used@@Base+0x4588>
  41cdff:	mov    rdi,rbx
  41ce02:	mov    rsi,r14
  41ce05:	mov    edx,0x6
  41ce0a:	mov    r8d,0x9
  41ce10:	xor    r9d,r9d
  41ce13:	call   429c90 <flatcc_json_printer_uint32_field@@Base>
  41ce18:	lea    rcx,[rip+0x1b773]        # 438592 <_IO_stdin_used@@Base+0x4592>
  41ce1f:	mov    rdi,rbx
  41ce22:	mov    rsi,r14
  41ce25:	mov    edx,0x7
  41ce2a:	mov    r8d,0x8
  41ce30:	xor    r9d,r9d
  41ce33:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41ce38:	lea    rcx,[rip+0x1b75c]        # 43859b <_IO_stdin_used@@Base+0x459b>
  41ce3f:	mov    rdi,rbx
  41ce42:	mov    rsi,r14
  41ce45:	mov    edx,0x8
  41ce4a:	mov    r8d,0x9
  41ce50:	xor    r9d,r9d
  41ce53:	add    rsp,0x8
  41ce57:	pop    rbx
  41ce58:	pop    r14
  41ce5a:	jmp    429c90 <flatcc_json_printer_uint32_field@@Base>
  41ce5f:	nop
  41ce60:	push   r14
  41ce62:	push   rbx
  41ce63:	push   rax
  41ce64:	mov    r14,rsi
  41ce67:	mov    rbx,rdi
  41ce6a:	lea    rcx,[rip+0x1b734]        # 4385a5 <_IO_stdin_used@@Base+0x45a5>
  41ce71:	xor    edx,edx
  41ce73:	mov    r8d,0xf
  41ce79:	xor    r9d,r9d
  41ce7c:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41ce81:	lea    rcx,[rip+0x1b72d]        # 4385b5 <_IO_stdin_used@@Base+0x45b5>
  41ce88:	mov    rdi,rbx
  41ce8b:	mov    rsi,r14
  41ce8e:	mov    edx,0x1
  41ce93:	mov    r8d,0x10
  41ce99:	xor    r9d,r9d
  41ce9c:	add    rsp,0x8
  41cea0:	pop    rbx
  41cea1:	pop    r14
  41cea3:	jmp    429c90 <flatcc_json_printer_uint32_field@@Base>
  41cea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ceb0:	push   r14
  41ceb2:	push   rbx
  41ceb3:	push   rax
  41ceb4:	mov    r14,rsi
  41ceb7:	mov    rbx,rdi
  41ceba:	lea    rcx,[rip+0x1b6e4]        # 4385a5 <_IO_stdin_used@@Base+0x45a5>
  41cec1:	xor    edx,edx
  41cec3:	mov    r8d,0xf
  41cec9:	xor    r9d,r9d
  41cecc:	call   42a130 <flatcc_json_printer_int64_field@@Base>
  41ced1:	lea    rcx,[rip+0x1b6ee]        # 4385c6 <_IO_stdin_used@@Base+0x45c6>
  41ced8:	mov    rdi,rbx
  41cedb:	mov    rsi,r14
  41cede:	mov    edx,0x1
  41cee3:	mov    r8d,0x15
  41cee9:	xor    r9d,r9d
  41ceec:	add    rsp,0x8
  41cef0:	pop    rbx
  41cef1:	pop    r14
  41cef3:	jmp    429c90 <flatcc_json_printer_uint32_field@@Base>
  41cef8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf00:	inc    sil
  41cf03:	cmp    sil,0xc
  41cf07:	ja     41cf2e <main@@Base+0x15e5e>
  41cf09:	movzx  eax,sil
  41cf0d:	lea    rcx,[rip+0x17ac0]        # 4349d4 <_IO_stdin_used@@Base+0x9d4>
  41cf14:	movsxd rax,DWORD PTR [rcx+rax*4]
  41cf18:	add    rax,rcx
  41cf1b:	jmp    rax
  41cf1d:	lea    rsi,[rip+0x1b710]        # 438634 <_IO_stdin_used@@Base+0x4634>
  41cf24:	mov    edx,0x6
  41cf29:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf2e:	lea    rsi,[rip+0x1cf05]        # 439e3a <flatcc_builder_padding_base@@Base+0x178a>
  41cf35:	mov    edx,0x4
  41cf3a:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf3f:	lea    rsi,[rip+0x1b6cb]        # 438611 <_IO_stdin_used@@Base+0x4611>
  41cf46:	mov    edx,0x5
  41cf4b:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf50:	lea    rsi,[rip+0x1b6c0]        # 438617 <_IO_stdin_used@@Base+0x4617>
  41cf57:	mov    edx,0x8
  41cf5c:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf61:	lea    rsi,[rip+0x1b6b8]        # 438620 <_IO_stdin_used@@Base+0x4620>
  41cf68:	mov    edx,0x5
  41cf6d:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf72:	lea    rsi,[rip+0x1b6ad]        # 438626 <_IO_stdin_used@@Base+0x4626>
  41cf79:	mov    edx,0x7
  41cf7e:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf83:	lea    rsi,[rip+0x1b6a4]        # 43862e <_IO_stdin_used@@Base+0x462e>
  41cf8a:	mov    edx,0x5
  41cf8f:	jmp    429460 <flatcc_json_printer_enum@@Base>
  41cf94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf9e:	xchg   ax,ax
  41cfa0:	mov    al,BYTE PTR [rsi+0xc]
  41cfa3:	inc    al
  41cfa5:	cmp    al,0xc
  41cfa7:	ja     41cfcd <main@@Base+0x15efd>
  41cfa9:	movzx  eax,al
  41cfac:	lea    rcx,[rip+0x17a55]        # 434a08 <_IO_stdin_used@@Base+0xa08>
  41cfb3:	movsxd rax,DWORD PTR [rcx+rax*4]
  41cfb7:	add    rax,rcx
  41cfba:	jmp    rax
  41cfbc:	jmp    432300 <flatcc_json_printer_union_string@@Base>
  41cfc1:	lea    rdx,[rip+0x68]        # 41d030 <main@@Base+0x15f60>
  41cfc8:	jmp    432210 <flatcc_json_printer_union_struct@@Base>
  41cfcd:	ret    
  41cfce:	lea    rdx,[rip+0x1b]        # 41cff0 <main@@Base+0x15f20>
  41cfd5:	jmp    4320e0 <flatcc_json_printer_union_table@@Base>
  41cfda:	lea    rdx,[rip+0x2f]        # 41d010 <main@@Base+0x15f40>
  41cfe1:	jmp    432210 <flatcc_json_printer_union_struct@@Base>
  41cfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cff0:	lea    rcx,[rip+0x1b644]        # 43863b <_IO_stdin_used@@Base+0x463b>
  41cff7:	xor    edx,edx
  41cff9:	mov    r8d,0x13
  41cfff:	xor    r9d,r9d
  41d002:	jmp    42a090 <flatcc_json_printer_int32_field@@Base>
  41d007:	nop    WORD PTR [rax+rax*1+0x0]
  41d010:	mov    rdx,rsi
  41d013:	lea    r8,[rip+0x1b635]        # 43864f <_IO_stdin_used@@Base+0x464f>
  41d01a:	xor    esi,esi
  41d01c:	xor    ecx,ecx
  41d01e:	mov    r9d,0xb
  41d024:	jmp    42ae20 <flatcc_json_printer_uint16_struct_field@@Base>
  41d029:	nop    DWORD PTR [rax+0x0]
  41d030:	mov    rdx,rsi
  41d033:	lea    r8,[rip+0x1b621]        # 43865b <_IO_stdin_used@@Base+0x465b>
  41d03a:	xor    esi,esi
  41d03c:	xor    ecx,ecx
  41d03e:	mov    r9d,0xa
  41d044:	jmp    42b270 <flatcc_json_printer_int32_struct_field@@Base>
  41d049:	nop    DWORD PTR [rax+0x0]
  41d050:	mov    al,BYTE PTR [rdi+0x10]
  41d053:	dec    al
  41d055:	cmp    al,0x3
  41d057:	ja     41d06d <main@@Base+0x15f9d>
  41d059:	movsx  rax,al
  41d05d:	lea    rcx,[rip+0x25b1c]        # 442b80 <flatcc_builder_padding_base@@Base+0xa4d0>
  41d064:	mov    rsi,QWORD PTR [rcx+rax*8]
  41d068:	jmp    422da0 <flatcc_verify_union_table@@Base>
  41d06d:	xor    eax,eax
  41d06f:	ret    
  41d070:	push   rbx
  41d071:	mov    rbx,rdi
  41d074:	xor    esi,esi
  41d076:	xor    edx,edx
  41d078:	call   422680 <flatcc_verify_string_field@@Base>
  41d07d:	test   eax,eax
  41d07f:	jne    41d09c <main@@Base+0x15fcc>
  41d081:	mov    edx,0x8
  41d086:	mov    rdi,rbx
  41d089:	mov    esi,0x1
  41d08e:	mov    ecx,0x8
  41d093:	call   422620 <flatcc_verify_field@@Base>
  41d098:	test   eax,eax
  41d09a:	je     41d09e <main@@Base+0x15fce>
  41d09c:	pop    rbx
  41d09d:	ret    
  41d09e:	mov    edx,0x2
  41d0a3:	mov    rdi,rbx
  41d0a6:	mov    esi,0x2
  41d0ab:	mov    ecx,0x2
  41d0b0:	pop    rbx
  41d0b1:	jmp    422620 <flatcc_verify_field@@Base>
  41d0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0c0:	xor    eax,eax
  41d0c2:	ret    
  41d0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0cd:	nop    DWORD PTR [rax]
  41d0d0:	push   rbx
  41d0d1:	mov    rbx,rdi
  41d0d4:	mov    ecx,0x1
  41d0d9:	mov    r9d,0xffffffff
  41d0df:	mov    esi,0x0
  41d0e4:	xor    edx,edx
  41d0e6:	mov    r8d,0x1
  41d0ec:	call   422730 <flatcc_verify_vector_field@@Base>
  41d0f1:	test   eax,eax
  41d0f3:	jne    41d119 <main@@Base+0x16049>
  41d0f5:	mov    ecx,0x1
  41d0fa:	mov    r9d,0xffffffff
  41d100:	mov    rdi,rbx
  41d103:	mov    esi,0x1
  41d108:	xor    edx,edx
  41d10a:	mov    r8d,0x1
  41d110:	call   422730 <flatcc_verify_vector_field@@Base>
  41d115:	test   eax,eax
  41d117:	je     41d11b <main@@Base+0x1604b>
  41d119:	pop    rbx
  41d11a:	ret    
  41d11b:	lea    r9,[rip+0xffffffffffff40be]        # 4111e0 <main@@Base+0xa110>
  41d122:	mov    rdi,rbx
  41d125:	mov    esi,0x2
  41d12a:	xor    edx,edx
  41d12c:	xor    ecx,ecx
  41d12e:	mov    r8d,0x1
  41d134:	pop    rbx
  41d135:	jmp    423530 <flatcc_verify_table_as_nested_root@@Base>
  41d13a:	nop    WORD PTR [rax+rax*1+0x0]
  41d140:	push   rbx
  41d141:	mov    rbx,rdi
  41d144:	mov    edx,0x1
  41d149:	xor    esi,esi
  41d14b:	mov    ecx,0x1
  41d150:	call   422620 <flatcc_verify_field@@Base>
  41d155:	test   eax,eax
  41d157:	jne    41d18f <main@@Base+0x160bf>
  41d159:	mov    edx,0x1
  41d15e:	mov    rdi,rbx
  41d161:	mov    esi,0x1
  41d166:	mov    ecx,0x1
  41d16b:	call   422620 <flatcc_verify_field@@Base>
  41d170:	test   eax,eax
  41d172:	jne    41d18f <main@@Base+0x160bf>
  41d174:	mov    edx,0x1
  41d179:	mov    rdi,rbx
  41d17c:	mov    esi,0x2
  41d181:	mov    ecx,0x1
  41d186:	call   422620 <flatcc_verify_field@@Base>
  41d18b:	test   eax,eax
  41d18d:	je     41d191 <main@@Base+0x160c1>
  41d18f:	pop    rbx
  41d190:	ret    
  41d191:	mov    edx,0x1
  41d196:	mov    rdi,rbx
  41d199:	mov    esi,0x3
  41d19e:	mov    ecx,0x1
  41d1a3:	pop    rbx
  41d1a4:	jmp    422620 <flatcc_verify_field@@Base>
  41d1a9:	nop    DWORD PTR [rax+0x0]
  41d1b0:	xor    eax,eax
  41d1b2:	ret    
  41d1b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1bd:	nop    DWORD PTR [rax]
  41d1c0:	push   rbx
  41d1c1:	mov    rbx,rdi
  41d1c4:	lea    rcx,[rip+0x45]        # 41d210 <main@@Base+0x16140>
  41d1cb:	xor    esi,esi
  41d1cd:	xor    edx,edx
  41d1cf:	call   422960 <flatcc_verify_table_field@@Base>
  41d1d4:	test   eax,eax
  41d1d6:	jne    41d1f2 <main@@Base+0x16122>
  41d1d8:	lea    rcx,[rip+0x81]        # 41d260 <main@@Base+0x16190>
  41d1df:	mov    rdi,rbx
  41d1e2:	mov    esi,0x1
  41d1e7:	xor    edx,edx
  41d1e9:	call   422960 <flatcc_verify_table_field@@Base>
  41d1ee:	test   eax,eax
  41d1f0:	je     41d1f4 <main@@Base+0x16124>
  41d1f2:	pop    rbx
  41d1f3:	ret    
  41d1f4:	lea    rcx,[rip+0xfffffffffffffe55]        # 41d050 <main@@Base+0x15f80>
  41d1fb:	mov    rdi,rbx
  41d1fe:	mov    esi,0x3
  41d203:	xor    edx,edx
  41d205:	pop    rbx
  41d206:	jmp    423950 <flatcc_verify_union_vector_field@@Base>
  41d20b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d210:	push   rbx
  41d211:	mov    rbx,rdi
  41d214:	lea    rcx,[rip+0xd5]        # 41d2f0 <main@@Base+0x16220>
  41d21b:	xor    esi,esi
  41d21d:	xor    edx,edx
  41d21f:	call   422960 <flatcc_verify_table_field@@Base>
  41d224:	test   eax,eax
  41d226:	jne    41d242 <main@@Base+0x16172>
  41d228:	lea    rcx,[rip+0x1a1]        # 41d3d0 <main@@Base+0x16300>
  41d22f:	mov    rdi,rbx
  41d232:	mov    esi,0x1
  41d237:	xor    edx,edx
  41d239:	call   422960 <flatcc_verify_table_field@@Base>
  41d23e:	test   eax,eax
  41d240:	je     41d244 <main@@Base+0x16174>
  41d242:	pop    rbx
  41d243:	ret    
  41d244:	lea    rcx,[rip+0x1c5]        # 41d410 <main@@Base+0x16340>
  41d24b:	mov    rdi,rbx
  41d24e:	mov    esi,0x2
  41d253:	xor    edx,edx
  41d255:	pop    rbx
  41d256:	jmp    422960 <flatcc_verify_table_field@@Base>
  41d25b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d260:	push   rbx
  41d261:	mov    rbx,rdi
  41d264:	lea    rcx,[rip+0x1e5]        # 41d450 <main@@Base+0x16380>
  41d26b:	mov    esi,0x1
  41d270:	xor    edx,edx
  41d272:	call   423810 <flatcc_verify_union_field@@Base>
  41d277:	test   eax,eax
  41d279:	jne    41d2c9 <main@@Base+0x161f9>
  41d27b:	lea    rcx,[rip+0x1ce]        # 41d450 <main@@Base+0x16380>
  41d282:	mov    rdi,rbx
  41d285:	mov    esi,0x3
  41d28a:	xor    edx,edx
  41d28c:	call   423810 <flatcc_verify_union_field@@Base>
  41d291:	test   eax,eax
  41d293:	jne    41d2c9 <main@@Base+0x161f9>
  41d295:	lea    rcx,[rip+0x1b4]        # 41d450 <main@@Base+0x16380>
  41d29c:	mov    rdi,rbx
  41d29f:	mov    esi,0x5
  41d2a4:	xor    edx,edx
  41d2a6:	call   423810 <flatcc_verify_union_field@@Base>
  41d2ab:	test   eax,eax
  41d2ad:	jne    41d2c9 <main@@Base+0x161f9>
  41d2af:	lea    rcx,[rip+0x19a]        # 41d450 <main@@Base+0x16380>
  41d2b6:	mov    rdi,rbx
  41d2b9:	mov    esi,0x7
  41d2be:	xor    edx,edx
  41d2c0:	call   423810 <flatcc_verify_union_field@@Base>
  41d2c5:	test   eax,eax
  41d2c7:	je     41d2cb <main@@Base+0x161fb>
  41d2c9:	pop    rbx
  41d2ca:	ret    
  41d2cb:	lea    rcx,[rip+0x17e]        # 41d450 <main@@Base+0x16380>
  41d2d2:	mov    rdi,rbx
  41d2d5:	mov    esi,0x9
  41d2da:	xor    edx,edx
  41d2dc:	pop    rbx
  41d2dd:	jmp    423950 <flatcc_verify_union_vector_field@@Base>
  41d2e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d2ec:	nop    DWORD PTR [rax+0x0]
  41d2f0:	push   rbx
  41d2f1:	mov    rbx,rdi
  41d2f4:	xor    esi,esi
  41d2f6:	xor    edx,edx
  41d2f8:	call   422680 <flatcc_verify_string_field@@Base>
  41d2fd:	test   eax,eax
  41d2ff:	jne    41d3b6 <main@@Base+0x162e6>
  41d305:	mov    edx,0x4
  41d30a:	mov    rdi,rbx
  41d30d:	mov    esi,0x1
  41d312:	mov    ecx,0x4
  41d317:	call   422620 <flatcc_verify_field@@Base>
  41d31c:	test   eax,eax
  41d31e:	jne    41d3b6 <main@@Base+0x162e6>
  41d324:	mov    rdi,rbx
  41d327:	mov    esi,0x2
  41d32c:	xor    edx,edx
  41d32e:	call   422680 <flatcc_verify_string_field@@Base>
  41d333:	test   eax,eax
  41d335:	jne    41d3b6 <main@@Base+0x162e6>
  41d337:	mov    edx,0x8
  41d33c:	mov    rdi,rbx
  41d33f:	mov    esi,0x3
  41d344:	mov    ecx,0x8
  41d349:	call   422620 <flatcc_verify_field@@Base>
  41d34e:	test   eax,eax
  41d350:	jne    41d3b6 <main@@Base+0x162e6>
  41d352:	mov    rdi,rbx
  41d355:	mov    esi,0x4
  41d35a:	xor    edx,edx
  41d35c:	call   422680 <flatcc_verify_string_field@@Base>
  41d361:	test   eax,eax
  41d363:	jne    41d3b6 <main@@Base+0x162e6>
  41d365:	mov    edx,0x8
  41d36a:	mov    rdi,rbx
  41d36d:	mov    esi,0x5
  41d372:	mov    ecx,0x8
  41d377:	call   422620 <flatcc_verify_field@@Base>
  41d37c:	test   eax,eax
  41d37e:	jne    41d3b6 <main@@Base+0x162e6>
  41d380:	mov    edx,0x4
  41d385:	mov    rdi,rbx
  41d388:	mov    esi,0x6
  41d38d:	mov    ecx,0x4
  41d392:	call   422620 <flatcc_verify_field@@Base>
  41d397:	test   eax,eax
  41d399:	jne    41d3b6 <main@@Base+0x162e6>
  41d39b:	mov    edx,0x8
  41d3a0:	mov    rdi,rbx
  41d3a3:	mov    esi,0x7
  41d3a8:	mov    ecx,0x8
  41d3ad:	call   422620 <flatcc_verify_field@@Base>
  41d3b2:	test   eax,eax
  41d3b4:	je     41d3b8 <main@@Base+0x162e8>
  41d3b6:	pop    rbx
  41d3b7:	ret    
  41d3b8:	mov    edx,0x4
  41d3bd:	mov    rdi,rbx
  41d3c0:	mov    esi,0x8
  41d3c5:	mov    ecx,0x4
  41d3ca:	pop    rbx
  41d3cb:	jmp    422620 <flatcc_verify_field@@Base>
  41d3d0:	push   rbx
  41d3d1:	mov    rbx,rdi
  41d3d4:	mov    edx,0x8
  41d3d9:	xor    esi,esi
  41d3db:	mov    ecx,0x8
  41d3e0:	call   422620 <flatcc_verify_field@@Base>
  41d3e5:	test   eax,eax
  41d3e7:	je     41d3eb <main@@Base+0x1631b>
  41d3e9:	pop    rbx
  41d3ea:	ret    
  41d3eb:	mov    edx,0x4
  41d3f0:	mov    rdi,rbx
  41d3f3:	mov    esi,0x1
  41d3f8:	mov    ecx,0x4
  41d3fd:	pop    rbx
  41d3fe:	jmp    422620 <flatcc_verify_field@@Base>
  41d403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d40d:	nop    DWORD PTR [rax]
  41d410:	push   rbx
  41d411:	mov    rbx,rdi
  41d414:	mov    edx,0x8
  41d419:	xor    esi,esi
  41d41b:	mov    ecx,0x8
  41d420:	call   422620 <flatcc_verify_field@@Base>
  41d425:	test   eax,eax
  41d427:	je     41d42b <main@@Base+0x1635b>
  41d429:	pop    rbx
  41d42a:	ret    
  41d42b:	mov    edx,0x4
  41d430:	mov    rdi,rbx
  41d433:	mov    esi,0x1
  41d438:	mov    ecx,0x4
  41d43d:	pop    rbx
  41d43e:	jmp    422620 <flatcc_verify_field@@Base>
  41d443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d44d:	nop    DWORD PTR [rax]
  41d450:	mov    al,BYTE PTR [rdi+0x10]
  41d453:	inc    al
  41d455:	cmp    al,0xc
  41d457:	ja     41d480 <main@@Base+0x163b0>
  41d459:	movzx  eax,al
  41d45c:	lea    rcx,[rip+0x175d9]        # 434a3c <_IO_stdin_used@@Base+0xa3c>
  41d463:	movsxd rax,DWORD PTR [rcx+rax*4]
  41d467:	add    rax,rcx
  41d46a:	jmp    rax
  41d46c:	jmp    422ec0 <flatcc_verify_union_string@@Base>
  41d471:	mov    esi,0x4
  41d476:	mov    edx,0x4
  41d47b:	jmp    422e80 <flatcc_verify_union_struct@@Base>
  41d480:	xor    eax,eax
  41d482:	ret    
  41d483:	lea    rsi,[rip+0x16]        # 41d4a0 <main@@Base+0x163d0>
  41d48a:	jmp    422da0 <flatcc_verify_union_table@@Base>
  41d48f:	mov    esi,0x2
  41d494:	mov    edx,0x2
  41d499:	jmp    422e80 <flatcc_verify_union_struct@@Base>
  41d49e:	xchg   ax,ax
  41d4a0:	mov    edx,0x4
  41d4a5:	xor    esi,esi
  41d4a7:	mov    ecx,0x4
  41d4ac:	jmp    422620 <flatcc_verify_field@@Base>
  41d4b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d4c0 <flatcc_builder_default_alloc@@Base>:
  41d4c0:	push   rbp
  41d4c1:	push   r15
  41d4c3:	push   r14
  41d4c5:	push   r12
  41d4c7:	push   rbx
  41d4c8:	mov    rbx,rsi
  41d4cb:	test   rdx,rdx
  41d4ce:	je     41d4f8 <flatcc_builder_default_alloc@@Base+0x38>
  41d4d0:	mov    r14d,ecx
  41d4d3:	dec    r8d
  41d4d6:	cmp    r8d,0x6
  41d4da:	ja     41d516 <flatcc_builder_default_alloc@@Base+0x56>
  41d4dc:	mov    eax,0x100
  41d4e1:	lea    rcx,[rip+0x1b1a8]        # 438690 <_IO_stdin_used@@Base+0x4690>
  41d4e8:	movsxd rsi,DWORD PTR [rcx+r8*4]
  41d4ec:	add    rsi,rcx
  41d4ef:	jmp    rsi
  41d4f1:	mov    eax,0x120
  41d4f6:	jmp    41d530 <flatcc_builder_default_alloc@@Base+0x70>
  41d4f8:	mov    rdi,QWORD PTR [rbx]
  41d4fb:	xor    r15d,r15d
  41d4fe:	test   rdi,rdi
  41d501:	je     41d58f <flatcc_builder_default_alloc@@Base+0xcf>
  41d507:	call   406030 <free@plt>
  41d50c:	vxorps xmm0,xmm0,xmm0
  41d510:	vmovups XMMWORD PTR [rbx],xmm0
  41d514:	jmp    41d58f <flatcc_builder_default_alloc@@Base+0xcf>
  41d516:	mov    eax,0x20
  41d51b:	jmp    41d530 <flatcc_builder_default_alloc@@Base+0x70>
  41d51d:	mov    rax,rdx
  41d520:	jmp    41d530 <flatcc_builder_default_alloc@@Base+0x70>
  41d522:	mov    eax,0x40
  41d527:	nop    WORD PTR [rax+rax*1+0x0]
  41d530:	mov    rbp,rax
  41d533:	add    rax,rax
  41d536:	cmp    rbp,rdx
  41d539:	jb     41d530 <flatcc_builder_default_alloc@@Base+0x70>
  41d53b:	mov    rax,QWORD PTR [rbx+0x8]
  41d53f:	xor    r15d,r15d
  41d542:	cmp    rax,rdx
  41d545:	jb     41d54f <flatcc_builder_default_alloc@@Base+0x8f>
  41d547:	shr    rax,1
  41d54a:	cmp    rax,rbp
  41d54d:	jae    41d58f <flatcc_builder_default_alloc@@Base+0xcf>
  41d54f:	mov    rdi,QWORD PTR [rbx]
  41d552:	mov    rsi,rbp
  41d555:	call   406100 <realloc@plt>
  41d55a:	test   rax,rax
  41d55d:	je     41d589 <flatcc_builder_default_alloc@@Base+0xc9>
  41d55f:	mov    r12,rax
  41d562:	test   r14d,r14d
  41d565:	je     41d580 <flatcc_builder_default_alloc@@Base+0xc0>
  41d567:	mov    rax,QWORD PTR [rbx+0x8]
  41d56b:	mov    rdx,rbp
  41d56e:	sub    rdx,rax
  41d571:	jbe    41d580 <flatcc_builder_default_alloc@@Base+0xc0>
  41d573:	mov    rdi,r12
  41d576:	add    rdi,rax
  41d579:	xor    esi,esi
  41d57b:	call   406080 <memset@plt>
  41d580:	mov    QWORD PTR [rbx],r12
  41d583:	mov    QWORD PTR [rbx+0x8],rbp
  41d587:	jmp    41d58f <flatcc_builder_default_alloc@@Base+0xcf>
  41d589:	mov    r15d,0xffffffff
  41d58f:	mov    eax,r15d
  41d592:	pop    rbx
  41d593:	pop    r12
  41d595:	pop    r14
  41d597:	pop    r15
  41d599:	pop    rbp
  41d59a:	ret    
  41d59b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d5a0 <flatcc_builder_flush_vtable_cache@@Base>:
  41d5a0:	push   rbx
  41d5a1:	cmp    QWORD PTR [rdi+0xd8],0x0
  41d5a9:	je     41d5d4 <flatcc_builder_flush_vtable_cache@@Base+0x34>
  41d5ab:	mov    rbx,rdi
  41d5ae:	mov    rdi,QWORD PTR [rdi+0xa8]
  41d5b5:	mov    rdx,QWORD PTR [rbx+0xb0]
  41d5bc:	xor    esi,esi
  41d5be:	call   406080 <memset@plt>
  41d5c3:	movabs rax,0x1000000000
  41d5cd:	mov    QWORD PTR [rbx+0xe0],rax
  41d5d4:	pop    rbx
  41d5d5:	ret    
  41d5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041d5e0 <flatcc_builder_custom_init@@Base>:
  41d5e0:	vxorps xmm0,xmm0,xmm0
  41d5e4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41d5ec:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41d5f4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41d5fc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41d604:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41d60c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41d614:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41d61c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41d624:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41d629:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41d62e:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41d633:	vmovups YMMWORD PTR [rdi],ymm0
  41d637:	mov    QWORD PTR [rdi+0x180],0x0
  41d642:	test   rsi,rsi
  41d645:	je     41d669 <flatcc_builder_custom_init@@Base+0x89>
  41d647:	test   rcx,rcx
  41d64a:	jne    41d653 <flatcc_builder_custom_init@@Base+0x73>
  41d64c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 41d4c0 <flatcc_builder_default_alloc@@Base>
  41d653:	mov    QWORD PTR [rdi+0x40],r8
  41d657:	mov    QWORD PTR [rdi+0x50],rcx
  41d65b:	mov    QWORD PTR [rdi+0x38],rdx
  41d65f:	mov    QWORD PTR [rdi+0x48],rsi
  41d663:	xor    eax,eax
  41d665:	vzeroupper 
  41d668:	ret    
  41d669:	mov    DWORD PTR [rdi+0x128],0x1
  41d673:	lea    rdx,[rdi+0x130]
  41d67a:	lea    rsi,[rip+0x4a6f]        # 4220f0 <flatcc_emitter@@Base>
  41d681:	test   rcx,rcx
  41d684:	je     41d64c <flatcc_builder_custom_init@@Base+0x6c>
  41d686:	jmp    41d653 <flatcc_builder_custom_init@@Base+0x73>
  41d688:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d690 <flatcc_builder_init@@Base>:
  41d690:	vxorps xmm0,xmm0,xmm0
  41d694:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41d69c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41d6a1:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41d6a6:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41d6ae:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41d6b6:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41d6be:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41d6c6:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41d6ce:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41d6d6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41d6de:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41d6e3:	vmovups YMMWORD PTR [rdi],ymm0
  41d6e7:	mov    QWORD PTR [rdi+0x180],0x0
  41d6f2:	mov    DWORD PTR [rdi+0x128],0x1
  41d6fc:	lea    rax,[rdi+0x130]
  41d703:	mov    QWORD PTR [rdi+0x40],0x0
  41d70b:	lea    rcx,[rip+0xfffffffffffffdae]        # 41d4c0 <flatcc_builder_default_alloc@@Base>
  41d712:	mov    QWORD PTR [rdi+0x50],rcx
  41d716:	mov    QWORD PTR [rdi+0x38],rax
  41d71a:	lea    rax,[rip+0x49cf]        # 4220f0 <flatcc_emitter@@Base>
  41d721:	mov    QWORD PTR [rdi+0x48],rax
  41d725:	xor    eax,eax
  41d727:	vzeroupper 
  41d72a:	ret    
  41d72b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d730 <flatcc_builder_custom_reset@@Base>:
  41d730:	push   rbp
  41d731:	push   r15
  41d733:	push   r14
  41d735:	push   r12
  41d737:	push   rbx
  41d738:	mov    r15d,edx
  41d73b:	mov    r14d,esi
  41d73e:	mov    r12,rdi
  41d741:	lea    rbp,[rdi+0x58]
  41d745:	xor    ebx,ebx
  41d747:	jmp    41d768 <flatcc_builder_custom_reset@@Base+0x38>
  41d749:	nop    DWORD PTR [rax+0x0]
  41d750:	cmp    QWORD PTR [rbp+0x8],0x0
  41d755:	jne    41d866 <flatcc_builder_custom_reset@@Base+0x136>
  41d75b:	inc    rbx
  41d75e:	add    rbp,0x10
  41d762:	cmp    rbx,0x8
  41d766:	je     41d7af <flatcc_builder_custom_reset@@Base+0x7f>
  41d768:	mov    rdi,QWORD PTR [rbp+0x0]
  41d76c:	test   rdi,rdi
  41d76f:	je     41d750 <flatcc_builder_custom_reset@@Base+0x20>
  41d771:	test   r15d,r15d
  41d774:	je     41d7a2 <flatcc_builder_custom_reset@@Base+0x72>
  41d776:	cmp    rbx,0x5
  41d77a:	je     41d7a2 <flatcc_builder_custom_reset@@Base+0x72>
  41d77c:	mov    rdi,QWORD PTR [r12+0x40]
  41d781:	mov    edx,0x1
  41d786:	mov    rsi,rbp
  41d789:	mov    ecx,0x1
  41d78e:	mov    r8d,ebx
  41d791:	call   QWORD PTR [r12+0x50]
  41d796:	test   eax,eax
  41d798:	jne    41d856 <flatcc_builder_custom_reset@@Base+0x126>
  41d79e:	mov    rdi,QWORD PTR [rbp+0x0]
  41d7a2:	mov    rdx,QWORD PTR [rbp+0x8]
  41d7a6:	xor    esi,esi
  41d7a8:	call   406080 <memset@plt>
  41d7ad:	jmp    41d75b <flatcc_builder_custom_reset@@Base+0x2b>
  41d7af:	mov    DWORD PTR [r12+0xe0],0x0
  41d7bb:	cmp    DWORD PTR [r12+0xe4],0x0
  41d7c4:	je     41d7d2 <flatcc_builder_custom_reset@@Base+0xa2>
  41d7c6:	mov    DWORD PTR [r12+0xe4],0x10
  41d7d2:	mov    WORD PTR [r12+0xe8],0x0
  41d7dd:	mov    QWORD PTR [r12+0xf0],0x0
  41d7e9:	mov    QWORD PTR [r12+0x20],0x0
  41d7f2:	vxorps xmm0,xmm0,xmm0
  41d7f6:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  41d800:	mov    rax,QWORD PTR [r12+0x58]
  41d805:	mov    rcx,QWORD PTR [r12+0x68]
  41d80a:	mov    QWORD PTR [r12+0x18],rcx
  41d80f:	mov    rcx,QWORD PTR [r12+0x88]
  41d817:	mov    QWORD PTR [r12],rcx
  41d81b:	mov    QWORD PTR [r12+0x8],rax
  41d820:	mov    QWORD PTR [r12+0x30],0x0
  41d829:	test   r14d,r14d
  41d82c:	je     41d838 <flatcc_builder_custom_reset@@Base+0x108>
  41d82e:	vmovups XMMWORD PTR [r12+0x118],xmm0
  41d838:	xor    ebx,ebx
  41d83a:	cmp    DWORD PTR [r12+0x128],0x0
  41d843:	je     41d85b <flatcc_builder_custom_reset@@Base+0x12b>
  41d845:	add    r12,0x130
  41d84c:	mov    rdi,r12
  41d84f:	call   421f70 <flatcc_emitter_reset@@Base>
  41d854:	jmp    41d85b <flatcc_builder_custom_reset@@Base+0x12b>
  41d856:	mov    ebx,0xffffffff
  41d85b:	mov    eax,ebx
  41d85d:	pop    rbx
  41d85e:	pop    r12
  41d860:	pop    r14
  41d862:	pop    r15
  41d864:	pop    rbp
  41d865:	ret    
  41d866:	lea    rdi,[rip+0x1b0c3]        # 438930 <flatcc_builder_padding_base@@Base+0x280>
  41d86d:	lea    rsi,[rip+0x1b0ce]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41d874:	lea    rcx,[rip+0x1b127]        # 4389a2 <flatcc_builder_padding_base@@Base+0x2f2>
  41d87b:	mov    edx,0x1b2
  41d880:	call   406070 <__assert_fail@plt>
  41d885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d88f:	nop

000000000041d890 <flatcc_builder_reset@@Base>:
  41d890:	push   rbx
  41d891:	mov    rbx,rdi
  41d894:	mov    rdi,QWORD PTR [rdi+0x58]
  41d898:	mov    rdx,QWORD PTR [rbx+0x60]
  41d89c:	test   rdi,rdi
  41d89f:	je     41d8aa <flatcc_builder_reset@@Base+0x1a>
  41d8a1:	xor    esi,esi
  41d8a3:	call   406080 <memset@plt>
  41d8a8:	jmp    41d8b3 <flatcc_builder_reset@@Base+0x23>
  41d8aa:	test   rdx,rdx
  41d8ad:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d8b3:	mov    rdi,QWORD PTR [rbx+0x68]
  41d8b7:	mov    rdx,QWORD PTR [rbx+0x70]
  41d8bb:	test   rdi,rdi
  41d8be:	je     41d8c9 <flatcc_builder_reset@@Base+0x39>
  41d8c0:	xor    esi,esi
  41d8c2:	call   406080 <memset@plt>
  41d8c7:	jmp    41d8d2 <flatcc_builder_reset@@Base+0x42>
  41d8c9:	test   rdx,rdx
  41d8cc:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d8d2:	mov    rdi,QWORD PTR [rbx+0x78]
  41d8d6:	mov    rdx,QWORD PTR [rbx+0x80]
  41d8dd:	test   rdi,rdi
  41d8e0:	je     41d8eb <flatcc_builder_reset@@Base+0x5b>
  41d8e2:	xor    esi,esi
  41d8e4:	call   406080 <memset@plt>
  41d8e9:	jmp    41d8f4 <flatcc_builder_reset@@Base+0x64>
  41d8eb:	test   rdx,rdx
  41d8ee:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d8f4:	mov    rdi,QWORD PTR [rbx+0x88]
  41d8fb:	mov    rdx,QWORD PTR [rbx+0x90]
  41d902:	test   rdi,rdi
  41d905:	je     41d910 <flatcc_builder_reset@@Base+0x80>
  41d907:	xor    esi,esi
  41d909:	call   406080 <memset@plt>
  41d90e:	jmp    41d919 <flatcc_builder_reset@@Base+0x89>
  41d910:	test   rdx,rdx
  41d913:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d919:	mov    rdi,QWORD PTR [rbx+0x98]
  41d920:	mov    rdx,QWORD PTR [rbx+0xa0]
  41d927:	test   rdi,rdi
  41d92a:	je     41d935 <flatcc_builder_reset@@Base+0xa5>
  41d92c:	xor    esi,esi
  41d92e:	call   406080 <memset@plt>
  41d933:	jmp    41d93e <flatcc_builder_reset@@Base+0xae>
  41d935:	test   rdx,rdx
  41d938:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d93e:	mov    rdi,QWORD PTR [rbx+0xa8]
  41d945:	mov    rdx,QWORD PTR [rbx+0xb0]
  41d94c:	test   rdi,rdi
  41d94f:	je     41d95a <flatcc_builder_reset@@Base+0xca>
  41d951:	xor    esi,esi
  41d953:	call   406080 <memset@plt>
  41d958:	jmp    41d963 <flatcc_builder_reset@@Base+0xd3>
  41d95a:	test   rdx,rdx
  41d95d:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d963:	mov    rdi,QWORD PTR [rbx+0xb8]
  41d96a:	mov    rdx,QWORD PTR [rbx+0xc0]
  41d971:	test   rdi,rdi
  41d974:	je     41d97f <flatcc_builder_reset@@Base+0xef>
  41d976:	xor    esi,esi
  41d978:	call   406080 <memset@plt>
  41d97d:	jmp    41d988 <flatcc_builder_reset@@Base+0xf8>
  41d97f:	test   rdx,rdx
  41d982:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d988:	mov    rdi,QWORD PTR [rbx+0xc8]
  41d98f:	mov    rdx,QWORD PTR [rbx+0xd0]
  41d996:	test   rdi,rdi
  41d999:	je     41d9a4 <flatcc_builder_reset@@Base+0x114>
  41d99b:	xor    esi,esi
  41d99d:	call   406080 <memset@plt>
  41d9a2:	jmp    41d9ad <flatcc_builder_reset@@Base+0x11d>
  41d9a4:	test   rdx,rdx
  41d9a7:	jne    41da30 <flatcc_builder_reset@@Base+0x1a0>
  41d9ad:	mov    DWORD PTR [rbx+0xe0],0x0
  41d9b7:	cmp    DWORD PTR [rbx+0xe4],0x0
  41d9be:	je     41d9ca <flatcc_builder_reset@@Base+0x13a>
  41d9c0:	mov    DWORD PTR [rbx+0xe4],0x10
  41d9ca:	mov    WORD PTR [rbx+0xe8],0x0
  41d9d3:	mov    QWORD PTR [rbx+0xf0],0x0
  41d9de:	mov    QWORD PTR [rbx+0x20],0x0
  41d9e6:	vxorps xmm0,xmm0,xmm0
  41d9ea:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  41d9f2:	mov    rax,QWORD PTR [rbx+0x58]
  41d9f6:	mov    rcx,QWORD PTR [rbx+0x68]
  41d9fa:	mov    QWORD PTR [rbx+0x18],rcx
  41d9fe:	mov    rcx,QWORD PTR [rbx+0x88]
  41da05:	mov    QWORD PTR [rbx],rcx
  41da08:	mov    QWORD PTR [rbx+0x8],rax
  41da0c:	mov    QWORD PTR [rbx+0x30],0x0
  41da14:	cmp    DWORD PTR [rbx+0x128],0x0
  41da1b:	je     41da2c <flatcc_builder_reset@@Base+0x19c>
  41da1d:	add    rbx,0x130
  41da24:	mov    rdi,rbx
  41da27:	call   421f70 <flatcc_emitter_reset@@Base>
  41da2c:	xor    eax,eax
  41da2e:	pop    rbx
  41da2f:	ret    
  41da30:	lea    rdi,[rip+0x1aef9]        # 438930 <flatcc_builder_padding_base@@Base+0x280>
  41da37:	lea    rsi,[rip+0x1af04]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41da3e:	lea    rcx,[rip+0x1af5d]        # 4389a2 <flatcc_builder_padding_base@@Base+0x2f2>
  41da45:	mov    edx,0x1b2
  41da4a:	call   406070 <__assert_fail@plt>
  41da4f:	nop

000000000041da50 <flatcc_builder_clear@@Base>:
  41da50:	push   rbx
  41da51:	mov    rbx,rdi
  41da54:	lea    rsi,[rdi+0x58]
  41da58:	mov    rdi,QWORD PTR [rdi+0x40]
  41da5c:	xor    edx,edx
  41da5e:	xor    ecx,ecx
  41da60:	xor    r8d,r8d
  41da63:	call   QWORD PTR [rbx+0x50]
  41da66:	lea    rsi,[rbx+0x68]
  41da6a:	mov    rdi,QWORD PTR [rbx+0x40]
  41da6e:	xor    edx,edx
  41da70:	xor    ecx,ecx
  41da72:	mov    r8d,0x1
  41da78:	call   QWORD PTR [rbx+0x50]
  41da7b:	lea    rsi,[rbx+0x78]
  41da7f:	mov    rdi,QWORD PTR [rbx+0x40]
  41da83:	xor    edx,edx
  41da85:	xor    ecx,ecx
  41da87:	mov    r8d,0x2
  41da8d:	call   QWORD PTR [rbx+0x50]
  41da90:	lea    rsi,[rbx+0x88]
  41da97:	mov    rdi,QWORD PTR [rbx+0x40]
  41da9b:	xor    edx,edx
  41da9d:	xor    ecx,ecx
  41da9f:	mov    r8d,0x3
  41daa5:	call   QWORD PTR [rbx+0x50]
  41daa8:	lea    rsi,[rbx+0x98]
  41daaf:	mov    rdi,QWORD PTR [rbx+0x40]
  41dab3:	xor    edx,edx
  41dab5:	xor    ecx,ecx
  41dab7:	mov    r8d,0x4
  41dabd:	call   QWORD PTR [rbx+0x50]
  41dac0:	lea    rsi,[rbx+0xa8]
  41dac7:	mov    rdi,QWORD PTR [rbx+0x40]
  41dacb:	xor    edx,edx
  41dacd:	xor    ecx,ecx
  41dacf:	mov    r8d,0x5
  41dad5:	call   QWORD PTR [rbx+0x50]
  41dad8:	lea    rsi,[rbx+0xb8]
  41dadf:	mov    rdi,QWORD PTR [rbx+0x40]
  41dae3:	xor    edx,edx
  41dae5:	xor    ecx,ecx
  41dae7:	mov    r8d,0x6
  41daed:	call   QWORD PTR [rbx+0x50]
  41daf0:	lea    rsi,[rbx+0xc8]
  41daf7:	mov    rdi,QWORD PTR [rbx+0x40]
  41dafb:	xor    edx,edx
  41dafd:	xor    ecx,ecx
  41daff:	mov    r8d,0x7
  41db05:	call   QWORD PTR [rbx+0x50]
  41db08:	cmp    DWORD PTR [rbx+0x128],0x0
  41db0f:	je     41db1d <flatcc_builder_clear@@Base+0xcd>
  41db11:	lea    rdi,[rbx+0x130]
  41db18:	call   422070 <flatcc_emitter_clear@@Base>
  41db1d:	vxorps xmm0,xmm0,xmm0
  41db21:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  41db29:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  41db31:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  41db39:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  41db41:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  41db49:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  41db51:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  41db59:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  41db61:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  41db66:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41db6b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41db70:	vmovups YMMWORD PTR [rbx],ymm0
  41db74:	mov    QWORD PTR [rbx+0x180],0x0
  41db7f:	pop    rbx
  41db80:	vzeroupper 
  41db83:	ret    
  41db84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db8e:	xchg   ax,ax

000000000041db90 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41db90:	push   r15
  41db92:	push   r14
  41db94:	push   r12
  41db96:	push   rbx
  41db97:	push   rax
  41db98:	mov    r14,rsi
  41db9b:	mov    r15,rdi
  41db9e:	add    r14,0xf
  41dba2:	and    r14,0xfffffffffffffff8
  41dba6:	mov    rbx,QWORD PTR [rdi+0x180]
  41dbad:	lea    r12,[rdi+0xc8]
  41dbb4:	lea    rdx,[rbx+r14*1]
  41dbb8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41dbbf:	jbe    41dbd8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  41dbc1:	mov    rdi,QWORD PTR [r15+0x40]
  41dbc5:	mov    rsi,r12
  41dbc8:	xor    ecx,ecx
  41dbca:	mov    r8d,0x7
  41dbd0:	call   QWORD PTR [r15+0x50]
  41dbd4:	test   eax,eax
  41dbd6:	jne    41dc28 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  41dbd8:	add    rbx,QWORD PTR [r12]
  41dbdc:	je     41dc17 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  41dbde:	mov    rdi,rbx
  41dbe1:	xor    esi,esi
  41dbe3:	mov    rdx,r14
  41dbe6:	call   406080 <memset@plt>
  41dbeb:	mov    rax,QWORD PTR [r15+0x178]
  41dbf2:	mov    QWORD PTR [rbx],rax
  41dbf5:	add    rbx,0x8
  41dbf9:	mov    rax,QWORD PTR [r15+0x180]
  41dc00:	lea    rcx,[rax+0x8]
  41dc04:	mov    QWORD PTR [r15+0x178],rcx
  41dc0b:	add    rax,r14
  41dc0e:	mov    QWORD PTR [r15+0x180],rax
  41dc15:	jmp    41dc19 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  41dc17:	xor    ebx,ebx
  41dc19:	mov    rax,rbx
  41dc1c:	add    rsp,0x8
  41dc20:	pop    rbx
  41dc21:	pop    r12
  41dc23:	pop    r14
  41dc25:	pop    r15
  41dc27:	ret    
  41dc28:	lea    rdi,[rip+0x1bed3]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41dc2f:	lea    rsi,[rip+0x1ad0c]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41dc36:	lea    rcx,[rip+0x1bcff]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41dc3d:	mov    edx,0x134
  41dc42:	call   406070 <__assert_fail@plt>
  41dc47:	nop    WORD PTR [rax+rax*1+0x0]

000000000041dc50 <flatcc_builder_enter_user_frame@@Base>:
  41dc50:	push   r15
  41dc52:	push   r14
  41dc54:	push   r12
  41dc56:	push   rbx
  41dc57:	push   rax
  41dc58:	mov    r14,rsi
  41dc5b:	mov    rbx,rdi
  41dc5e:	add    r14,0xf
  41dc62:	and    r14,0xfffffffffffffff8
  41dc66:	mov    r15,QWORD PTR [rdi+0x180]
  41dc6d:	lea    r12,[rdi+0xc8]
  41dc74:	lea    rdx,[r15+r14*1]
  41dc78:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41dc7f:	jbe    41dc97 <flatcc_builder_enter_user_frame@@Base+0x47>
  41dc81:	mov    rdi,QWORD PTR [rbx+0x40]
  41dc85:	mov    rsi,r12
  41dc88:	xor    ecx,ecx
  41dc8a:	mov    r8d,0x7
  41dc90:	call   QWORD PTR [rbx+0x50]
  41dc93:	test   eax,eax
  41dc95:	jne    41dce0 <flatcc_builder_enter_user_frame@@Base+0x90>
  41dc97:	add    r15,QWORD PTR [r12]
  41dc9b:	je     41dcd2 <flatcc_builder_enter_user_frame@@Base+0x82>
  41dc9d:	mov    rdi,r15
  41dca0:	xor    esi,esi
  41dca2:	mov    rdx,r14
  41dca5:	call   406080 <memset@plt>
  41dcaa:	mov    rax,QWORD PTR [rbx+0x178]
  41dcb1:	mov    QWORD PTR [r15],rax
  41dcb4:	mov    rcx,QWORD PTR [rbx+0x180]
  41dcbb:	lea    rax,[rcx+0x8]
  41dcbf:	mov    QWORD PTR [rbx+0x178],rax
  41dcc6:	add    rcx,r14
  41dcc9:	mov    QWORD PTR [rbx+0x180],rcx
  41dcd0:	jmp    41dcd4 <flatcc_builder_enter_user_frame@@Base+0x84>
  41dcd2:	xor    eax,eax
  41dcd4:	add    rsp,0x8
  41dcd8:	pop    rbx
  41dcd9:	pop    r12
  41dcdb:	pop    r14
  41dcdd:	pop    r15
  41dcdf:	ret    
  41dce0:	lea    rdi,[rip+0x1be1b]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41dce7:	lea    rsi,[rip+0x1ac54]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41dcee:	lea    rcx,[rip+0x1bc47]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41dcf5:	mov    edx,0x134
  41dcfa:	call   406070 <__assert_fail@plt>
  41dcff:	nop

000000000041dd00 <flatcc_builder_exit_user_frame@@Base>:
  41dd00:	push   rax
  41dd01:	mov    rax,QWORD PTR [rdi+0x178]
  41dd08:	test   rax,rax
  41dd0b:	je     41dd2f <flatcc_builder_exit_user_frame@@Base+0x2f>
  41dd0d:	mov    rcx,QWORD PTR [rdi+0xc8]
  41dd14:	mov    edx,eax
  41dd16:	add    rax,0xfffffffffffffff8
  41dd1a:	mov    QWORD PTR [rdi+0x180],rax
  41dd21:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  41dd26:	mov    QWORD PTR [rdi+0x178],rax
  41dd2d:	pop    rcx
  41dd2e:	ret    
  41dd2f:	lea    rdi,[rip+0x1acaa]        # 4389e0 <flatcc_builder_padding_base@@Base+0x330>
  41dd36:	lea    rsi,[rip+0x1ac05]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41dd3d:	lea    rcx,[rip+0x1acb5]        # 4389f9 <flatcc_builder_padding_base@@Base+0x349>
  41dd44:	mov    edx,0x21e
  41dd49:	call   406070 <__assert_fail@plt>
  41dd4e:	xchg   ax,ax

000000000041dd50 <flatcc_builder_exit_user_frame_at@@Base>:
  41dd50:	push   rax
  41dd51:	cmp    QWORD PTR [rdi+0x178],rsi
  41dd58:	jb     41dd88 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41dd5a:	mov    QWORD PTR [rdi+0x178],rsi
  41dd61:	test   rsi,rsi
  41dd64:	je     41dda7 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  41dd66:	mov    rax,QWORD PTR [rdi+0xc8]
  41dd6d:	mov    ecx,esi
  41dd6f:	add    rsi,0xfffffffffffffff8
  41dd73:	mov    QWORD PTR [rdi+0x180],rsi
  41dd7a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41dd7f:	mov    QWORD PTR [rdi+0x178],rax
  41dd86:	pop    rcx
  41dd87:	ret    
  41dd88:	lea    rdi,[rip+0x1aca4]        # 438a33 <flatcc_builder_padding_base@@Base+0x383>
  41dd8f:	lea    rsi,[rip+0x1abac]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41dd96:	lea    rcx,[rip+0x1acb5]        # 438a52 <flatcc_builder_padding_base@@Base+0x3a2>
  41dd9d:	mov    edx,0x227
  41dda2:	call   406070 <__assert_fail@plt>
  41dda7:	lea    rdi,[rip+0x1ac32]        # 4389e0 <flatcc_builder_padding_base@@Base+0x330>
  41ddae:	lea    rsi,[rip+0x1ab8d]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ddb5:	lea    rcx,[rip+0x1ac3d]        # 4389f9 <flatcc_builder_padding_base@@Base+0x349>
  41ddbc:	mov    edx,0x21e
  41ddc1:	call   406070 <__assert_fail@plt>
  41ddc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041ddd0 <flatcc_builder_get_current_user_frame@@Base>:
  41ddd0:	mov    rax,QWORD PTR [rdi+0x178]
  41ddd7:	ret    
  41ddd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dde0 <flatcc_builder_get_user_frame_ptr@@Base>:
  41dde0:	mov    eax,esi
  41dde2:	add    rax,QWORD PTR [rdi+0xc8]
  41dde9:	ret    
  41ddea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ddf0 <flatcc_builder_embed_buffer@@Base>:
  41ddf0:	push   rbp
  41ddf1:	push   r15
  41ddf3:	push   r14
  41ddf5:	push   r12
  41ddf7:	push   rbx
  41ddf8:	sub    rsp,0xa0
  41ddff:	mov    ebx,r9d
  41de02:	mov    rbp,rcx
  41de05:	mov    r15,rdx
  41de08:	mov    edx,esi
  41de0a:	mov    r12,rdi
  41de0d:	mov    WORD PTR [rsp+0xa],r8w
  41de13:	xor    ecx,ecx
  41de15:	cmp    DWORD PTR [rdi+0x100],0x0
  41de1c:	setne  cl
  41de1f:	lea    rsi,[rsp+0xa]
  41de24:	call   41df90 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41de29:	and    ebx,0x2
  41de2c:	movzx  eax,WORD PTR [rsp+0xa]
  41de31:	mov    r14d,DWORD PTR [r12+0xf0]
  41de39:	lea    ecx,[rbp+rbx*2+0x0]
  41de3d:	mov    edx,r14d
  41de40:	sub    edx,ecx
  41de42:	dec    eax
  41de44:	and    eax,edx
  41de46:	lea    ecx,[rax+rbp*1]
  41de49:	mov    DWORD PTR [rsp+0xc],ecx
  41de4d:	mov    QWORD PTR [rsp+0x10],0x0
  41de56:	mov    DWORD PTR [rsp+0x18],0x0
  41de5e:	cmp    DWORD PTR [r12+0x100],0x0
  41de67:	je     41df39 <flatcc_builder_embed_buffer@@Base+0x149>
  41de6d:	mov    QWORD PTR [rsp+0x10],0x4
  41de76:	lea    rcx,[rsp+0xc]
  41de7b:	mov    QWORD PTR [rsp+0x20],rcx
  41de80:	mov    QWORD PTR [rsp+0x28],0x4
  41de89:	mov    DWORD PTR [rsp+0x18],0x1
  41de91:	mov    r8d,0x4
  41de97:	mov    edx,0x1
  41de9c:	test   rbp,rbp
  41de9f:	je     41debf <flatcc_builder_embed_buffer@@Base+0xcf>
  41dea1:	add    r8,rbp
  41dea4:	mov    QWORD PTR [rsp+0x10],r8
  41dea9:	mov    ecx,edx
  41deab:	shl    rcx,0x4
  41deaf:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  41deb4:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  41deb9:	inc    edx
  41debb:	mov    DWORD PTR [rsp+0x18],edx
  41debf:	test   eax,eax
  41dec1:	je     41deea <flatcc_builder_embed_buffer@@Base+0xfa>
  41dec3:	mov    eax,eax
  41dec5:	add    r8,rax
  41dec8:	mov    QWORD PTR [rsp+0x10],r8
  41decd:	mov    ecx,edx
  41decf:	shl    rcx,0x4
  41ded3:	lea    rsi,[rip+0x1a7d6]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41deda:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41dedf:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41dee4:	inc    edx
  41dee6:	mov    DWORD PTR [rsp+0x18],edx
  41deea:	cmp    r8,0x11
  41deee:	setb   al
  41def1:	lea    rcx,[r8-0x10]
  41def5:	shr    rcx,0x20
  41def9:	sete   cl
  41defc:	test   r8d,r8d
  41deff:	jle    41df4c <flatcc_builder_embed_buffer@@Base+0x15c>
  41df01:	or     al,cl
  41df03:	je     41df4c <flatcc_builder_embed_buffer@@Base+0x15c>
  41df05:	sub    r14d,r8d
  41df08:	mov    rdi,QWORD PTR [r12+0x38]
  41df0d:	lea    rsi,[rsp+0x20]
  41df12:	mov    ecx,r14d
  41df15:	call   QWORD PTR [r12+0x48]
  41df1a:	test   eax,eax
  41df1c:	jne    41df6b <flatcc_builder_embed_buffer@@Base+0x17b>
  41df1e:	mov    DWORD PTR [r12+0xf0],r14d
  41df26:	mov    eax,r14d
  41df29:	add    rsp,0xa0
  41df30:	pop    rbx
  41df31:	pop    r12
  41df33:	pop    r14
  41df35:	pop    r15
  41df37:	pop    rbp
  41df38:	ret    
  41df39:	xor    edx,edx
  41df3b:	xor    r8d,r8d
  41df3e:	test   rbp,rbp
  41df41:	jne    41dea1 <flatcc_builder_embed_buffer@@Base+0xb1>
  41df47:	jmp    41debf <flatcc_builder_embed_buffer@@Base+0xcf>
  41df4c:	lea    rdi,[rip+0x1bbaf]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41df53:	lea    rsi,[rip+0x1a9e8]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41df5a:	lea    rcx,[rip+0x1ba60]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41df61:	mov    edx,0x287
  41df66:	call   406070 <__assert_fail@plt>
  41df6b:	lea    rdi,[rip+0x1bb90]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41df72:	lea    rsi,[rip+0x1a9c9]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41df79:	lea    rcx,[rip+0x1ba41]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41df80:	mov    edx,0x28b
  41df85:	call   406070 <__assert_fail@plt>
  41df8a:	nop    WORD PTR [rax+rax*1+0x0]
  41df90:	push   rbx
  41df91:	sub    rsp,0x90
  41df98:	mov    rax,rdi
  41df9b:	test   dx,dx
  41df9e:	jne    41dfb1 <flatcc_builder_embed_buffer@@Base+0x1c1>
  41dfa0:	mov    edi,DWORD PTR [rax+0xec]
  41dfa6:	test   di,di
  41dfa9:	mov    edx,0x1
  41dfae:	cmovne edx,edi
  41dfb1:	movzx  ebx,WORD PTR [rsi]
  41dfb4:	mov    edi,0x4
  41dfb9:	cmp    bx,0x4
  41dfbd:	cmovae edi,ebx
  41dfc0:	jb     41dfcd <flatcc_builder_embed_buffer@@Base+0x1dd>
  41dfc2:	cmp    di,dx
  41dfc5:	jb     41dfcd <flatcc_builder_embed_buffer@@Base+0x1dd>
  41dfc7:	test   ecx,ecx
  41dfc9:	jne    41e034 <flatcc_builder_embed_buffer@@Base+0x244>
  41dfcb:	jmp    41dfda <flatcc_builder_embed_buffer@@Base+0x1ea>
  41dfcd:	cmp    di,dx
  41dfd0:	cmovb  edi,edx
  41dfd3:	mov    WORD PTR [rsi],di
  41dfd6:	test   ecx,ecx
  41dfd8:	jne    41e034 <flatcc_builder_embed_buffer@@Base+0x244>
  41dfda:	mov    ebx,DWORD PTR [rax+0xf4]
  41dfe0:	movzx  r8d,dx
  41dfe4:	dec    r8d
  41dfe7:	and    r8d,ebx
  41dfea:	je     41e034 <flatcc_builder_embed_buffer@@Base+0x244>
  41dfec:	mov    QWORD PTR [rsp],r8
  41dff0:	lea    rcx,[rip+0x1a6b9]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41dff7:	mov    QWORD PTR [rsp+0x10],rcx
  41dffc:	mov    QWORD PTR [rsp+0x18],r8
  41e001:	mov    DWORD PTR [rsp+0x8],0x1
  41e009:	lea    ecx,[r8+rbx*1]
  41e00d:	mov    DWORD PTR [rax+0xf4],ecx
  41e013:	test   r8d,r8d
  41e016:	js     41e03d <flatcc_builder_embed_buffer@@Base+0x24d>
  41e018:	mov    rdi,QWORD PTR [rax+0x38]
  41e01c:	lea    rsi,[rsp+0x10]
  41e021:	mov    edx,0x1
  41e026:	mov    ecx,ebx
  41e028:	call   QWORD PTR [rax+0x48]
  41e02b:	test   eax,eax
  41e02d:	jne    41e05c <flatcc_builder_embed_buffer@@Base+0x26c>
  41e02f:	cmp    ebx,0xffffffff
  41e032:	je     41e07b <flatcc_builder_embed_buffer@@Base+0x28b>
  41e034:	add    rsp,0x90
  41e03b:	pop    rbx
  41e03c:	ret    
  41e03d:	lea    rdi,[rip+0x1babe]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e044:	lea    rsi,[rip+0x1a8f7]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e04b:	lea    rcx,[rip+0x1ba2b]        # 439a7d <flatcc_builder_padding_base@@Base+0x13cd>
  41e052:	mov    edx,0x2a1
  41e057:	call   406070 <__assert_fail@plt>
  41e05c:	lea    rdi,[rip+0x1ba9f]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e063:	lea    rsi,[rip+0x1a8d8]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e06a:	lea    rcx,[rip+0x1ba0c]        # 439a7d <flatcc_builder_padding_base@@Base+0x13cd>
  41e071:	mov    edx,0x2a5
  41e076:	call   406070 <__assert_fail@plt>
  41e07b:	lea    rdi,[rip+0x1ba80]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e082:	lea    rsi,[rip+0x1a8b9]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e089:	lea    rcx,[rip+0x1b8ef]        # 43997f <flatcc_builder_padding_base@@Base+0x12cf>
  41e090:	mov    edx,0x2be
  41e095:	call   406070 <__assert_fail@plt>
  41e09a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e0a0 <flatcc_builder_create_buffer@@Base>:
  41e0a0:	push   rbp
  41e0a1:	push   r15
  41e0a3:	push   r14
  41e0a5:	push   r13
  41e0a7:	push   r12
  41e0a9:	push   rbx
  41e0aa:	sub    rsp,0xa8
  41e0b1:	mov    r12d,r9d
  41e0b4:	mov    r14d,ecx
  41e0b7:	mov    rbp,rsi
  41e0ba:	mov    r13,rdi
  41e0bd:	mov    WORD PTR [rsp+0xa],r8w
  41e0c3:	mov    DWORD PTR [rsp+0xc],0x0
  41e0cb:	mov    r15d,r9d
  41e0ce:	and    r15d,0x1
  41e0d2:	lea    rsi,[rsp+0xa]
  41e0d7:	mov    ecx,r15d
  41e0da:	call   41df90 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41e0df:	movzx  eax,WORD PTR [rsp+0xa]
  41e0e4:	cmp    WORD PTR [r13+0xe8],ax
  41e0ec:	jae    41e0f6 <flatcc_builder_create_buffer@@Base+0x56>
  41e0ee:	mov    WORD PTR [r13+0xe8],ax
  41e0f6:	movzx  edx,ax
  41e0f9:	xor    eax,eax
  41e0fb:	test   rbp,rbp
  41e0fe:	je     41e118 <flatcc_builder_create_buffer@@Base+0x78>
  41e100:	mov    ecx,DWORD PTR [rbp+0x0]
  41e103:	mov    DWORD PTR [rsp+0xc],ecx
  41e107:	xor    edi,edi
  41e109:	test   ecx,ecx
  41e10b:	setne  dil
  41e10f:	mov    rsi,rdi
  41e112:	shl    rsi,0x2
  41e116:	jmp    41e11c <flatcc_builder_create_buffer@@Base+0x7c>
  41e118:	xor    edi,edi
  41e11a:	xor    esi,esi
  41e11c:	lea    ebx,[r12+r12*1]
  41e120:	and    ebx,0x4
  41e123:	mov    ebp,DWORD PTR [r13+0xf0]
  41e12a:	mov    ecx,ebp
  41e12c:	sub    ecx,ebx
  41e12e:	sub    ecx,esi
  41e130:	add    ecx,0xfffffffc
  41e133:	dec    edx
  41e135:	mov    QWORD PTR [rsp+0x18],0x0
  41e13e:	mov    DWORD PTR [rsp+0x20],0x0
  41e146:	test   r12b,0x3
  41e14a:	je     41e17d <flatcc_builder_create_buffer@@Base+0xdd>
  41e14c:	mov    QWORD PTR [rsp+0x18],0x4
  41e155:	lea    rax,[rsp+0x10]
  41e15a:	mov    QWORD PTR [rsp+0x28],rax
  41e15f:	mov    QWORD PTR [rsp+0x30],0x4
  41e168:	mov    DWORD PTR [rsp+0x20],0x1
  41e170:	mov    r8d,0x8
  41e176:	mov    eax,0x1
  41e17b:	jmp    41e183 <flatcc_builder_create_buffer@@Base+0xe3>
  41e17d:	mov    r8d,0x4
  41e183:	and    ecx,edx
  41e185:	mov    QWORD PTR [rsp+0x18],r8
  41e18a:	mov    edx,eax
  41e18c:	shl    rdx,0x4
  41e190:	lea    rbx,[rsp+0x14]
  41e195:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  41e19a:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  41e1a3:	lea    edx,[rax+0x1]
  41e1a6:	mov    DWORD PTR [rsp+0x20],edx
  41e1aa:	test   dil,dil
  41e1ad:	je     41e1d5 <flatcc_builder_create_buffer@@Base+0x135>
  41e1af:	add    r8,rsi
  41e1b2:	mov    QWORD PTR [rsp+0x18],r8
  41e1b7:	mov    edx,edx
  41e1b9:	shl    rdx,0x4
  41e1bd:	lea    rdi,[rsp+0xc]
  41e1c2:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  41e1c7:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  41e1cc:	or     eax,0x2
  41e1cf:	mov    DWORD PTR [rsp+0x20],eax
  41e1d3:	mov    edx,eax
  41e1d5:	test   ecx,ecx
  41e1d7:	je     41e200 <flatcc_builder_create_buffer@@Base+0x160>
  41e1d9:	mov    eax,ecx
  41e1db:	add    r8,rax
  41e1de:	mov    QWORD PTR [rsp+0x18],r8
  41e1e3:	mov    ecx,edx
  41e1e5:	shl    rcx,0x4
  41e1e9:	lea    rsi,[rip+0x1a4c0]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41e1f0:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  41e1f5:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  41e1fa:	inc    edx
  41e1fc:	mov    DWORD PTR [rsp+0x20],edx
  41e200:	xor    eax,eax
  41e202:	test   r12b,0x3
  41e206:	setne  al
  41e209:	sub    ebp,r8d
  41e20c:	lea    eax,[rbp+rax*4+0x0]
  41e210:	mov    ecx,r15d
  41e213:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  41e21b:	sub    ecx,eax
  41e21d:	mov    DWORD PTR [rsp+0x10],ecx
  41e221:	sub    r14d,eax
  41e224:	mov    DWORD PTR [rsp+0x14],r14d
  41e229:	cmp    r8,0x11
  41e22d:	setb   al
  41e230:	lea    rcx,[r8-0x10]
  41e234:	shr    rcx,0x20
  41e238:	sete   cl
  41e23b:	test   r8d,r8d
  41e23e:	jle    41e276 <flatcc_builder_create_buffer@@Base+0x1d6>
  41e240:	or     al,cl
  41e242:	je     41e276 <flatcc_builder_create_buffer@@Base+0x1d6>
  41e244:	mov    rdi,QWORD PTR [r13+0x38]
  41e248:	lea    rsi,[rsp+0x28]
  41e24d:	mov    ecx,ebp
  41e24f:	call   QWORD PTR [r13+0x48]
  41e253:	test   eax,eax
  41e255:	jne    41e295 <flatcc_builder_create_buffer@@Base+0x1f5>
  41e257:	mov    DWORD PTR [r13+0xf0],ebp
  41e25e:	test   ebp,ebp
  41e260:	je     41e2b4 <flatcc_builder_create_buffer@@Base+0x214>
  41e262:	mov    eax,ebp
  41e264:	add    rsp,0xa8
  41e26b:	pop    rbx
  41e26c:	pop    r12
  41e26e:	pop    r13
  41e270:	pop    r14
  41e272:	pop    r15
  41e274:	pop    rbp
  41e275:	ret    
  41e276:	lea    rdi,[rip+0x1b885]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e27d:	lea    rsi,[rip+0x1a6be]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e284:	lea    rcx,[rip+0x1b736]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41e28b:	mov    edx,0x287
  41e290:	call   406070 <__assert_fail@plt>
  41e295:	lea    rdi,[rip+0x1b866]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e29c:	lea    rsi,[rip+0x1a69f]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e2a3:	lea    rcx,[rip+0x1b717]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41e2aa:	mov    edx,0x28b
  41e2af:	call   406070 <__assert_fail@plt>
  41e2b4:	lea    rdi,[rip+0x1b847]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e2bb:	lea    rsi,[rip+0x1a680]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e2c2:	lea    rcx,[rip+0x1a7ce]        # 438a97 <flatcc_builder_padding_base@@Base+0x3e7>
  41e2c9:	mov    edx,0x304
  41e2ce:	call   406070 <__assert_fail@plt>
  41e2d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2dd:	nop    DWORD PTR [rax]

000000000041e2e0 <flatcc_builder_create_struct@@Base>:
  41e2e0:	push   rbp
  41e2e1:	push   rbx
  41e2e2:	sub    rsp,0x98
  41e2e9:	test   cx,cx
  41e2ec:	je     41e3e2 <flatcc_builder_create_struct@@Base+0x102>
  41e2f2:	mov    r8,rdx
  41e2f5:	mov    rbx,rdi
  41e2f8:	cmp    WORD PTR [rdi+0xe8],cx
  41e2ff:	jae    41e308 <flatcc_builder_create_struct@@Base+0x28>
  41e301:	mov    WORD PTR [rbx+0xe8],cx
  41e308:	mov    ebp,DWORD PTR [rbx+0xf0]
  41e30e:	mov    edx,ebp
  41e310:	sub    edx,r8d
  41e313:	movzx  eax,cx
  41e316:	dec    eax
  41e318:	and    eax,edx
  41e31a:	mov    QWORD PTR [rsp+0x8],0x0
  41e323:	mov    DWORD PTR [rsp+0x10],0x0
  41e32b:	test   r8,r8
  41e32e:	je     41e3bb <flatcc_builder_create_struct@@Base+0xdb>
  41e334:	mov    QWORD PTR [rsp+0x8],r8
  41e339:	mov    QWORD PTR [rsp+0x18],rsi
  41e33e:	mov    QWORD PTR [rsp+0x20],r8
  41e343:	mov    DWORD PTR [rsp+0x10],0x1
  41e34b:	mov    edx,0x1
  41e350:	test   eax,eax
  41e352:	je     41e379 <flatcc_builder_create_struct@@Base+0x99>
  41e354:	add    r8,rax
  41e357:	mov    QWORD PTR [rsp+0x8],r8
  41e35c:	mov    ecx,edx
  41e35e:	shl    rcx,0x4
  41e362:	lea    rsi,[rip+0x1a347]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41e369:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41e36e:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41e373:	inc    edx
  41e375:	mov    DWORD PTR [rsp+0x10],edx
  41e379:	cmp    r8,0x11
  41e37d:	setb   al
  41e380:	lea    rcx,[r8-0x10]
  41e384:	shr    rcx,0x20
  41e388:	sete   cl
  41e38b:	test   r8d,r8d
  41e38e:	jle    41e3c3 <flatcc_builder_create_struct@@Base+0xe3>
  41e390:	or     al,cl
  41e392:	je     41e3c3 <flatcc_builder_create_struct@@Base+0xe3>
  41e394:	sub    ebp,r8d
  41e397:	mov    rdi,QWORD PTR [rbx+0x38]
  41e39b:	lea    rsi,[rsp+0x18]
  41e3a0:	mov    ecx,ebp
  41e3a2:	call   QWORD PTR [rbx+0x48]
  41e3a5:	test   eax,eax
  41e3a7:	jne    41e401 <flatcc_builder_create_struct@@Base+0x121>
  41e3a9:	mov    DWORD PTR [rbx+0xf0],ebp
  41e3af:	mov    eax,ebp
  41e3b1:	add    rsp,0x98
  41e3b8:	pop    rbx
  41e3b9:	pop    rbp
  41e3ba:	ret    
  41e3bb:	xor    edx,edx
  41e3bd:	test   eax,eax
  41e3bf:	jne    41e354 <flatcc_builder_create_struct@@Base+0x74>
  41e3c1:	jmp    41e379 <flatcc_builder_create_struct@@Base+0x99>
  41e3c3:	lea    rdi,[rip+0x1b738]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e3ca:	lea    rsi,[rip+0x1a571]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e3d1:	lea    rcx,[rip+0x1b5e9]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41e3d8:	mov    edx,0x287
  41e3dd:	call   406070 <__assert_fail@plt>
  41e3e2:	lea    rdi,[rip+0x1a731]        # 438b1a <flatcc_builder_padding_base@@Base+0x46a>
  41e3e9:	lea    rsi,[rip+0x1a552]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e3f0:	lea    rcx,[rip+0x1a72e]        # 438b25 <flatcc_builder_padding_base@@Base+0x475>
  41e3f7:	mov    edx,0x30f
  41e3fc:	call   406070 <__assert_fail@plt>
  41e401:	lea    rdi,[rip+0x1b6fa]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e408:	lea    rsi,[rip+0x1a533]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e40f:	lea    rcx,[rip+0x1b5ab]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41e416:	mov    edx,0x28b
  41e41b:	call   406070 <__assert_fail@plt>

000000000041e420 <flatcc_builder_start_buffer@@Base>:
  41e420:	push   rbp
  41e421:	push   r15
  41e423:	push   r14
  41e425:	push   rbx
  41e426:	push   rax
  41e427:	mov    r15d,ecx
  41e42a:	mov    ebp,edx
  41e42c:	mov    r14,rsi
  41e42f:	mov    rbx,rdi
  41e432:	movzx  esi,WORD PTR [rdi+0xe8]
  41e439:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41e43e:	mov    ecx,eax
  41e440:	mov    eax,0xffffffff
  41e445:	test   ecx,ecx
  41e447:	jne    41e4ec <flatcc_builder_start_buffer@@Base+0xcc>
  41e44d:	mov    WORD PTR [rbx+0xe8],0x1
  41e456:	movzx  eax,WORD PTR [rbx+0xec]
  41e45d:	mov    rcx,QWORD PTR [rbx+0x30]
  41e461:	mov    WORD PTR [rcx+0x22],ax
  41e465:	mov    WORD PTR [rbx+0xec],bp
  41e46c:	movzx  eax,WORD PTR [rbx+0x10c]
  41e473:	mov    rcx,QWORD PTR [rbx+0x30]
  41e477:	mov    WORD PTR [rcx+0x20],ax
  41e47b:	mov    WORD PTR [rbx+0x10c],r15w
  41e483:	mov    eax,DWORD PTR [rbx+0xf8]
  41e489:	mov    rcx,QWORD PTR [rbx+0x30]
  41e48d:	mov    DWORD PTR [rcx+0x14],eax
  41e490:	mov    eax,DWORD PTR [rbx+0x100]
  41e496:	mov    rcx,QWORD PTR [rbx+0x30]
  41e49a:	mov    DWORD PTR [rcx+0x1c],eax
  41e49d:	mov    eax,DWORD PTR [rbx+0xf0]
  41e4a3:	mov    DWORD PTR [rbx+0xf8],eax
  41e4a9:	mov    eax,DWORD PTR [rbx+0xfc]
  41e4af:	lea    ecx,[rax+0x1]
  41e4b2:	mov    DWORD PTR [rbx+0xfc],ecx
  41e4b8:	mov    DWORD PTR [rbx+0x100],eax
  41e4be:	mov    eax,DWORD PTR [rbx+0x110]
  41e4c4:	mov    rcx,QWORD PTR [rbx+0x30]
  41e4c8:	mov    DWORD PTR [rcx+0x10],eax
  41e4cb:	test   r14,r14
  41e4ce:	jne    41e4d7 <flatcc_builder_start_buffer@@Base+0xb7>
  41e4d0:	lea    r14,[rip+0x1a1d9]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41e4d7:	mov    eax,DWORD PTR [r14]
  41e4da:	mov    DWORD PTR [rbx+0x110],eax
  41e4e0:	mov    rax,QWORD PTR [rbx+0x30]
  41e4e4:	mov    WORD PTR [rax+0xe],0x1
  41e4ea:	xor    eax,eax
  41e4ec:	add    rsp,0x8
  41e4f0:	pop    rbx
  41e4f1:	pop    r14
  41e4f3:	pop    r15
  41e4f5:	pop    rbp
  41e4f6:	ret    
  41e4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41e500:	push   rbp
  41e501:	push   r15
  41e503:	push   r14
  41e505:	push   rbx
  41e506:	push   rax
  41e507:	mov    r14d,esi
  41e50a:	mov    rbx,rdi
  41e50d:	movsxd rbp,DWORD PTR [rdi+0x104]
  41e514:	lea    eax,[rbp+0x1]
  41e517:	mov    DWORD PTR [rdi+0x104],eax
  41e51d:	cmp    ebp,DWORD PTR [rdi+0x108]
  41e523:	jge    41e536 <flatcc_builder_start_buffer@@Base+0x116>
  41e525:	mov    rcx,QWORD PTR [rbx+0x30]
  41e529:	add    rcx,0x24
  41e52d:	mov    QWORD PTR [rbx+0x30],rcx
  41e531:	jmp    41e5c9 <flatcc_builder_start_buffer@@Base+0x1a9>
  41e536:	mov    eax,DWORD PTR [rbx+0x120]
  41e53c:	mov    r15d,0xffffffff
  41e542:	test   eax,eax
  41e544:	jle    41e54e <flatcc_builder_start_buffer@@Base+0x12e>
  41e546:	cmp    ebp,eax
  41e548:	jge    41e604 <flatcc_builder_start_buffer@@Base+0x1e4>
  41e54e:	shl    rbp,0x2
  41e552:	lea    rdx,[rbp*8+0x24]
  41e55a:	add    rdx,rbp
  41e55d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41e564:	jbe    41e584 <flatcc_builder_start_buffer@@Base+0x164>
  41e566:	lea    rsi,[rbx+0x98]
  41e56d:	mov    rdi,QWORD PTR [rbx+0x40]
  41e571:	xor    ecx,ecx
  41e573:	mov    r8d,0x4
  41e579:	call   QWORD PTR [rbx+0x50]
  41e57c:	test   eax,eax
  41e57e:	jne    41e612 <flatcc_builder_start_buffer@@Base+0x1f2>
  41e584:	lea    rcx,[rbp*8+0x0]
  41e58c:	add    rcx,rbp
  41e58f:	add    rcx,QWORD PTR [rbx+0x98]
  41e596:	mov    QWORD PTR [rbx+0x30],rcx
  41e59a:	je     41e604 <flatcc_builder_start_buffer@@Base+0x1e4>
  41e59c:	movabs rax,0xe38e38e38e38e38f
  41e5a6:	mul    QWORD PTR [rbx+0xa0]
  41e5ad:	shr    rdx,0x5
  41e5b1:	mov    eax,DWORD PTR [rbx+0x120]
  41e5b7:	cmp    eax,edx
  41e5b9:	mov    esi,edx
  41e5bb:	cmovle esi,eax
  41e5be:	test   eax,eax
  41e5c0:	cmovle esi,edx
  41e5c3:	mov    DWORD PTR [rbx+0x108],esi
  41e5c9:	mov    eax,DWORD PTR [rbx+0x20]
  41e5cc:	mov    DWORD PTR [rcx+0x8],eax
  41e5cf:	movzx  edx,WORD PTR [rbx+0xea]
  41e5d6:	mov    WORD PTR [rcx+0xc],dx
  41e5da:	mov    WORD PTR [rbx+0xea],r14w
  41e5e2:	mov    edx,DWORD PTR [rbx+0x28]
  41e5e5:	mov    DWORD PTR [rcx],edx
  41e5e7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e5ee:	lea    eax,[rax+rdx*1]
  41e5f1:	add    eax,0x7
  41e5f4:	and    eax,0xfffffff8
  41e5f7:	mov    DWORD PTR [rbx+0x28],eax
  41e5fa:	mov    DWORD PTR [rbx+0x20],0x0
  41e601:	xor    r15d,r15d
  41e604:	mov    eax,r15d
  41e607:	add    rsp,0x8
  41e60b:	pop    rbx
  41e60c:	pop    r14
  41e60e:	pop    r15
  41e610:	pop    rbp
  41e611:	ret    
  41e612:	lea    rdi,[rip+0x1b4e9]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41e619:	lea    rsi,[rip+0x1a322]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e620:	lea    rcx,[rip+0x1b315]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41e627:	mov    edx,0x134
  41e62c:	call   406070 <__assert_fail@plt>
  41e631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e63b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e640 <flatcc_builder_end_buffer@@Base>:
  41e640:	push   rbp
  41e641:	push   rbx
  41e642:	push   rax
  41e643:	mov    rax,QWORD PTR [rdi+0x30]
  41e647:	cmp    WORD PTR [rax+0xe],0x1
  41e64c:	jne    41e749 <flatcc_builder_end_buffer@@Base+0x109>
  41e652:	mov    ecx,esi
  41e654:	mov    rbx,rdi
  41e657:	movzx  eax,WORD PTR [rdi+0x10c]
  41e65e:	and    eax,0x2
  41e661:	xor    r9d,r9d
  41e664:	cmp    DWORD PTR [rdi+0x100],0x0
  41e66b:	setne  r9b
  41e66f:	or     r9d,eax
  41e672:	movzx  edi,WORD PTR [rdi+0xe8]
  41e679:	movzx  eax,WORD PTR [rbx+0xec]
  41e680:	cmp    di,ax
  41e683:	jae    41e68e <flatcc_builder_end_buffer@@Base+0x4e>
  41e685:	mov    WORD PTR [rbx+0xe8],ax
  41e68c:	mov    edi,eax
  41e68e:	lea    rsi,[rbx+0x110]
  41e695:	movzx  edx,ax
  41e698:	movzx  r8d,di
  41e69c:	mov    rdi,rbx
  41e69f:	call   41e0a0 <flatcc_builder_create_buffer@@Base>
  41e6a4:	mov    ebp,eax
  41e6a6:	test   eax,eax
  41e6a8:	je     41e740 <flatcc_builder_end_buffer@@Base+0x100>
  41e6ae:	mov    rax,QWORD PTR [rbx+0x30]
  41e6b2:	mov    ecx,DWORD PTR [rax+0x14]
  41e6b5:	mov    DWORD PTR [rbx+0xf8],ecx
  41e6bb:	mov    ecx,DWORD PTR [rax+0x1c]
  41e6be:	mov    DWORD PTR [rbx+0x100],ecx
  41e6c4:	mov    ecx,DWORD PTR [rax+0x10]
  41e6c7:	mov    DWORD PTR [rbx+0x110],ecx
  41e6cd:	movzx  eax,WORD PTR [rax+0x20]
  41e6d1:	mov    WORD PTR [rbx+0x10c],ax
  41e6d8:	mov    rdi,QWORD PTR [rbx+0x18]
  41e6dc:	mov    edx,DWORD PTR [rbx+0x20]
  41e6df:	xor    esi,esi
  41e6e1:	call   406080 <memset@plt>
  41e6e6:	mov    rax,QWORD PTR [rbx+0x30]
  41e6ea:	mov    ecx,DWORD PTR [rax+0x8]
  41e6ed:	mov    DWORD PTR [rbx+0x20],ecx
  41e6f0:	mov    ecx,DWORD PTR [rax]
  41e6f2:	mov    DWORD PTR [rbx+0x28],ecx
  41e6f5:	mov    edx,DWORD PTR [rax+0x4]
  41e6f8:	mov    rsi,rcx
  41e6fb:	add    rsi,QWORD PTR [rbx+0x68]
  41e6ff:	mov    QWORD PTR [rbx+0x18],rsi
  41e703:	mov    esi,DWORD PTR [rbx+0x70]
  41e706:	sub    esi,ecx
  41e708:	cmp    esi,edx
  41e70a:	cmova  esi,edx
  41e70d:	mov    DWORD PTR [rbx+0x24],esi
  41e710:	movzx  ecx,WORD PTR [rbx+0xea]
  41e717:	cmp    WORD PTR [rbx+0xe8],cx
  41e71e:	jae    41e727 <flatcc_builder_end_buffer@@Base+0xe7>
  41e720:	mov    WORD PTR [rbx+0xe8],cx
  41e727:	movzx  ecx,WORD PTR [rax+0xc]
  41e72b:	mov    WORD PTR [rbx+0xea],cx
  41e732:	add    rax,0xffffffffffffffdc
  41e736:	mov    QWORD PTR [rbx+0x30],rax
  41e73a:	dec    DWORD PTR [rbx+0x104]
  41e740:	mov    eax,ebp
  41e742:	add    rsp,0x8
  41e746:	pop    rbx
  41e747:	pop    rbp
  41e748:	ret    
  41e749:	lea    rdi,[rip+0x1a43b]        # 438b8b <flatcc_builder_padding_base@@Base+0x4db>
  41e750:	lea    rsi,[rip+0x1a1eb]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e757:	lea    rcx,[rip+0x1a459]        # 438bb7 <flatcc_builder_padding_base@@Base+0x507>
  41e75e:	mov    edx,0x346
  41e763:	call   406070 <__assert_fail@plt>
  41e768:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e770 <flatcc_builder_start_struct@@Base>:
  41e770:	push   r15
  41e772:	push   r14
  41e774:	push   rbx
  41e775:	mov    r14,rsi
  41e778:	mov    rbx,rdi
  41e77b:	mov    esi,edx
  41e77d:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41e782:	test   eax,eax
  41e784:	je     41e78d <flatcc_builder_start_struct@@Base+0x1d>
  41e786:	xor    eax,eax
  41e788:	jmp    41e821 <flatcc_builder_start_struct@@Base+0xb1>
  41e78d:	mov    rdx,QWORD PTR [rbx+0x30]
  41e791:	mov    WORD PTR [rdx+0xe],0x2
  41e797:	mov    ecx,DWORD PTR [rbx+0x28]
  41e79a:	mov    esi,DWORD PTR [rbx+0x70]
  41e79d:	mov    rax,QWORD PTR [rbx+0x68]
  41e7a1:	add    rax,rcx
  41e7a4:	mov    QWORD PTR [rbx+0x18],rax
  41e7a8:	sub    esi,ecx
  41e7aa:	cmp    esi,0xfffffffc
  41e7ad:	mov    edi,0xfffffffc
  41e7b2:	cmovb  edi,esi
  41e7b5:	mov    DWORD PTR [rbx+0x24],edi
  41e7b8:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41e7bf:	mov    r15d,DWORD PTR [rbx+0x20]
  41e7c3:	add    r14d,r15d
  41e7c6:	mov    DWORD PTR [rbx+0x20],r14d
  41e7ca:	cmp    r14d,edi
  41e7cd:	jb     41e81e <flatcc_builder_start_struct@@Base+0xae>
  41e7cf:	inc    r14d
  41e7d2:	lea    rsi,[rbx+0x68]
  41e7d6:	mov    rdi,QWORD PTR [rbx+0x40]
  41e7da:	add    r14,rcx
  41e7dd:	mov    rdx,r14
  41e7e0:	mov    ecx,0x1
  41e7e5:	mov    r8d,0x1
  41e7eb:	call   QWORD PTR [rbx+0x50]
  41e7ee:	test   eax,eax
  41e7f0:	jne    41e786 <flatcc_builder_start_struct@@Base+0x16>
  41e7f2:	mov    ecx,DWORD PTR [rbx+0x28]
  41e7f5:	mov    rax,rcx
  41e7f8:	add    rax,QWORD PTR [rbx+0x68]
  41e7fc:	mov    QWORD PTR [rbx+0x18],rax
  41e800:	mov    edx,DWORD PTR [rbx+0x70]
  41e803:	sub    edx,ecx
  41e805:	cmp    edx,0xfffffffc
  41e808:	mov    ecx,0xfffffffc
  41e80d:	cmovb  ecx,edx
  41e810:	mov    DWORD PTR [rbx+0x24],ecx
  41e813:	mov    rcx,QWORD PTR [rbx+0x30]
  41e817:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e81e:	add    rax,r15
  41e821:	pop    rbx
  41e822:	pop    r14
  41e824:	pop    r15
  41e826:	ret    
  41e827:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e830 <flatcc_builder_struct_edit@@Base>:
  41e830:	mov    rax,QWORD PTR [rdi+0x18]
  41e834:	ret    
  41e835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e83f:	nop

000000000041e840 <flatcc_builder_end_struct@@Base>:
  41e840:	push   rbp
  41e841:	push   rbx
  41e842:	push   rax
  41e843:	mov    rax,QWORD PTR [rdi+0x30]
  41e847:	cmp    WORD PTR [rax+0xe],0x2
  41e84c:	jne    41e8df <flatcc_builder_end_struct@@Base+0x9f>
  41e852:	mov    rbx,rdi
  41e855:	mov    rsi,QWORD PTR [rdi+0x18]
  41e859:	mov    edx,DWORD PTR [rdi+0x20]
  41e85c:	movzx  ecx,WORD PTR [rdi+0xea]
  41e863:	call   41e2e0 <flatcc_builder_create_struct@@Base>
  41e868:	mov    ebp,eax
  41e86a:	test   eax,eax
  41e86c:	je     41e8d6 <flatcc_builder_end_struct@@Base+0x96>
  41e86e:	mov    rdi,QWORD PTR [rbx+0x18]
  41e872:	mov    edx,DWORD PTR [rbx+0x20]
  41e875:	xor    esi,esi
  41e877:	call   406080 <memset@plt>
  41e87c:	mov    rax,QWORD PTR [rbx+0x30]
  41e880:	mov    ecx,DWORD PTR [rax+0x8]
  41e883:	mov    DWORD PTR [rbx+0x20],ecx
  41e886:	mov    ecx,DWORD PTR [rax]
  41e888:	mov    DWORD PTR [rbx+0x28],ecx
  41e88b:	mov    edx,DWORD PTR [rax+0x4]
  41e88e:	mov    rsi,rcx
  41e891:	add    rsi,QWORD PTR [rbx+0x68]
  41e895:	mov    QWORD PTR [rbx+0x18],rsi
  41e899:	mov    esi,DWORD PTR [rbx+0x70]
  41e89c:	sub    esi,ecx
  41e89e:	cmp    esi,edx
  41e8a0:	cmova  esi,edx
  41e8a3:	mov    DWORD PTR [rbx+0x24],esi
  41e8a6:	movzx  ecx,WORD PTR [rbx+0xea]
  41e8ad:	cmp    WORD PTR [rbx+0xe8],cx
  41e8b4:	jae    41e8bd <flatcc_builder_end_struct@@Base+0x7d>
  41e8b6:	mov    WORD PTR [rbx+0xe8],cx
  41e8bd:	movzx  ecx,WORD PTR [rax+0xc]
  41e8c1:	mov    WORD PTR [rbx+0xea],cx
  41e8c8:	add    rax,0xffffffffffffffdc
  41e8cc:	mov    QWORD PTR [rbx+0x30],rax
  41e8d0:	dec    DWORD PTR [rbx+0x104]
  41e8d6:	mov    eax,ebp
  41e8d8:	add    rsp,0x8
  41e8dc:	pop    rbx
  41e8dd:	pop    rbp
  41e8de:	ret    
  41e8df:	lea    rdi,[rip+0x1a32a]        # 438c10 <flatcc_builder_padding_base@@Base+0x560>
  41e8e6:	lea    rsi,[rip+0x1a055]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e8ed:	lea    rcx,[rip+0x1a348]        # 438c3c <flatcc_builder_padding_base@@Base+0x58c>
  41e8f4:	mov    edx,0x368
  41e8f9:	call   406070 <__assert_fail@plt>
  41e8fe:	xchg   ax,ax

000000000041e900 <flatcc_builder_extend_vector@@Base>:
  41e900:	push   r14
  41e902:	push   rbx
  41e903:	push   rax
  41e904:	mov    rax,QWORD PTR [rdi+0x30]
  41e908:	mov    ecx,DWORD PTR [rax+0x14]
  41e90b:	add    ecx,esi
  41e90d:	jb     41e99f <flatcc_builder_extend_vector@@Base+0x9f>
  41e913:	cmp    ecx,DWORD PTR [rax+0x18]
  41e916:	ja     41e99f <flatcc_builder_extend_vector@@Base+0x9f>
  41e91c:	mov    rbx,rdi
  41e91f:	mov    DWORD PTR [rax+0x14],ecx
  41e922:	mov    rax,QWORD PTR [rdi+0x30]
  41e926:	imul   esi,DWORD PTR [rax+0x10]
  41e92a:	mov    r14d,DWORD PTR [rdi+0x20]
  41e92e:	add    esi,r14d
  41e931:	mov    DWORD PTR [rdi+0x20],esi
  41e934:	cmp    esi,DWORD PTR [rdi+0x24]
  41e937:	jae    41e93f <flatcc_builder_extend_vector@@Base+0x3f>
  41e939:	mov    rax,QWORD PTR [rbx+0x18]
  41e93d:	jmp    41e994 <flatcc_builder_extend_vector@@Base+0x94>
  41e93f:	inc    esi
  41e941:	lea    rax,[rbx+0x68]
  41e945:	mov    rdi,QWORD PTR [rbx+0x40]
  41e949:	mov    edx,DWORD PTR [rbx+0x28]
  41e94c:	add    rdx,rsi
  41e94f:	mov    rsi,rax
  41e952:	mov    ecx,0x1
  41e957:	mov    r8d,0x1
  41e95d:	call   QWORD PTR [rbx+0x50]
  41e960:	test   eax,eax
  41e962:	je     41e968 <flatcc_builder_extend_vector@@Base+0x68>
  41e964:	xor    eax,eax
  41e966:	jmp    41e997 <flatcc_builder_extend_vector@@Base+0x97>
  41e968:	mov    ecx,DWORD PTR [rbx+0x28]
  41e96b:	mov    rax,rcx
  41e96e:	add    rax,QWORD PTR [rbx+0x68]
  41e972:	mov    QWORD PTR [rbx+0x18],rax
  41e976:	mov    edx,DWORD PTR [rbx+0x70]
  41e979:	sub    edx,ecx
  41e97b:	cmp    edx,0xfffffffc
  41e97e:	mov    ecx,0xfffffffc
  41e983:	cmovb  ecx,edx
  41e986:	mov    DWORD PTR [rbx+0x24],ecx
  41e989:	mov    rcx,QWORD PTR [rbx+0x30]
  41e98d:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e994:	add    rax,r14
  41e997:	add    rsp,0x8
  41e99b:	pop    rbx
  41e99c:	pop    r14
  41e99e:	ret    
  41e99f:	lea    rdi,[rip+0x1b065]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41e9a6:	lea    rsi,[rip+0x19f95]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41e9ad:	lea    rcx,[rip+0x1b072]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41e9b4:	mov    edx,0x37c
  41e9b9:	call   406070 <__assert_fail@plt>
  41e9be:	xchg   ax,ax

000000000041e9c0 <flatcc_builder_vector_push@@Base>:
  41e9c0:	push   r15
  41e9c2:	push   r14
  41e9c4:	push   r13
  41e9c6:	push   r12
  41e9c8:	push   rbx
  41e9c9:	mov    rax,QWORD PTR [rdi+0x30]
  41e9cd:	cmp    WORD PTR [rax+0xe],0x4
  41e9d2:	jne    41ea85 <flatcc_builder_vector_push@@Base+0xc5>
  41e9d8:	mov    ecx,DWORD PTR [rax+0x14]
  41e9db:	cmp    ecx,DWORD PTR [rax+0x18]
  41e9de:	ja     41eaa4 <flatcc_builder_vector_push@@Base+0xe4>
  41e9e4:	mov    r14,rsi
  41e9e7:	mov    rbx,rdi
  41e9ea:	inc    ecx
  41e9ec:	mov    DWORD PTR [rax+0x14],ecx
  41e9ef:	mov    rax,QWORD PTR [rdi+0x30]
  41e9f3:	mov    r15d,DWORD PTR [rax+0x10]
  41e9f7:	mov    r13d,DWORD PTR [rdi+0x20]
  41e9fb:	lea    eax,[r15+r13*1]
  41e9ff:	mov    DWORD PTR [rdi+0x20],eax
  41ea02:	cmp    eax,DWORD PTR [rdi+0x24]
  41ea05:	jae    41ea12 <flatcc_builder_vector_push@@Base+0x52>
  41ea07:	mov    r12,QWORD PTR [rbx+0x18]
  41ea0b:	add    r12,r13
  41ea0e:	jne    41ea6a <flatcc_builder_vector_push@@Base+0xaa>
  41ea10:	jmp    41ea34 <flatcc_builder_vector_push@@Base+0x74>
  41ea12:	inc    eax
  41ea14:	lea    rsi,[rbx+0x68]
  41ea18:	mov    rdi,QWORD PTR [rbx+0x40]
  41ea1c:	mov    edx,DWORD PTR [rbx+0x28]
  41ea1f:	add    rdx,rax
  41ea22:	mov    ecx,0x1
  41ea27:	mov    r8d,0x1
  41ea2d:	call   QWORD PTR [rbx+0x50]
  41ea30:	test   eax,eax
  41ea32:	je     41ea39 <flatcc_builder_vector_push@@Base+0x79>
  41ea34:	xor    r12d,r12d
  41ea37:	jmp    41ea78 <flatcc_builder_vector_push@@Base+0xb8>
  41ea39:	mov    eax,DWORD PTR [rbx+0x28]
  41ea3c:	mov    r12,rax
  41ea3f:	add    r12,QWORD PTR [rbx+0x68]
  41ea43:	mov    QWORD PTR [rbx+0x18],r12
  41ea47:	mov    ecx,DWORD PTR [rbx+0x70]
  41ea4a:	sub    ecx,eax
  41ea4c:	cmp    ecx,0xfffffffc
  41ea4f:	mov    eax,0xfffffffc
  41ea54:	cmovb  eax,ecx
  41ea57:	mov    DWORD PTR [rbx+0x24],eax
  41ea5a:	mov    rax,QWORD PTR [rbx+0x30]
  41ea5e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ea65:	add    r12,r13
  41ea68:	je     41ea34 <flatcc_builder_vector_push@@Base+0x74>
  41ea6a:	mov    rdi,r12
  41ea6d:	mov    rsi,r14
  41ea70:	mov    rdx,r15
  41ea73:	call   4060d0 <memcpy@plt>
  41ea78:	mov    rax,r12
  41ea7b:	pop    rbx
  41ea7c:	pop    r12
  41ea7e:	pop    r13
  41ea80:	pop    r14
  41ea82:	pop    r15
  41ea84:	ret    
  41ea85:	lea    rdi,[rip+0x1a1f3]        # 438c7f <flatcc_builder_padding_base@@Base+0x5cf>
  41ea8c:	lea    rsi,[rip+0x19eaf]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ea93:	lea    rcx,[rip+0x1a211]        # 438cab <flatcc_builder_padding_base@@Base+0x5fb>
  41ea9a:	mov    edx,0x38b
  41ea9f:	call   406070 <__assert_fail@plt>
  41eaa4:	lea    rdi,[rip+0x1a243]        # 438cee <flatcc_builder_padding_base@@Base+0x63e>
  41eaab:	lea    rsi,[rip+0x19e90]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41eab2:	lea    rcx,[rip+0x1a1f2]        # 438cab <flatcc_builder_padding_base@@Base+0x5fb>
  41eab9:	mov    edx,0x38c
  41eabe:	call   406070 <__assert_fail@plt>
  41eac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eacd:	nop    DWORD PTR [rax]

000000000041ead0 <flatcc_builder_append_vector@@Base>:
  41ead0:	push   r15
  41ead2:	push   r14
  41ead4:	push   r13
  41ead6:	push   r12
  41ead8:	push   rbx
  41ead9:	mov    rax,QWORD PTR [rdi+0x30]
  41eadd:	cmp    WORD PTR [rax+0xe],0x4
  41eae2:	jne    41ebbf <flatcc_builder_append_vector@@Base+0xef>
  41eae8:	mov    r15,rdx
  41eaeb:	mov    ecx,DWORD PTR [rax+0x14]
  41eaee:	add    ecx,r15d
  41eaf1:	jb     41eba0 <flatcc_builder_append_vector@@Base+0xd0>
  41eaf7:	cmp    ecx,DWORD PTR [rax+0x18]
  41eafa:	ja     41eba0 <flatcc_builder_append_vector@@Base+0xd0>
  41eb00:	mov    r14,rsi
  41eb03:	mov    rbx,rdi
  41eb06:	mov    DWORD PTR [rax+0x14],ecx
  41eb09:	mov    rax,QWORD PTR [rdi+0x30]
  41eb0d:	imul   r15d,DWORD PTR [rax+0x10]
  41eb12:	mov    r13d,DWORD PTR [rdi+0x20]
  41eb16:	lea    eax,[r15+r13*1]
  41eb1a:	mov    DWORD PTR [rdi+0x20],eax
  41eb1d:	cmp    eax,DWORD PTR [rdi+0x24]
  41eb20:	jae    41eb2d <flatcc_builder_append_vector@@Base+0x5d>
  41eb22:	mov    r12,QWORD PTR [rbx+0x18]
  41eb26:	add    r12,r13
  41eb29:	jne    41eb85 <flatcc_builder_append_vector@@Base+0xb5>
  41eb2b:	jmp    41eb4f <flatcc_builder_append_vector@@Base+0x7f>
  41eb2d:	inc    eax
  41eb2f:	lea    rsi,[rbx+0x68]
  41eb33:	mov    rdi,QWORD PTR [rbx+0x40]
  41eb37:	mov    edx,DWORD PTR [rbx+0x28]
  41eb3a:	add    rdx,rax
  41eb3d:	mov    ecx,0x1
  41eb42:	mov    r8d,0x1
  41eb48:	call   QWORD PTR [rbx+0x50]
  41eb4b:	test   eax,eax
  41eb4d:	je     41eb54 <flatcc_builder_append_vector@@Base+0x84>
  41eb4f:	xor    r12d,r12d
  41eb52:	jmp    41eb93 <flatcc_builder_append_vector@@Base+0xc3>
  41eb54:	mov    eax,DWORD PTR [rbx+0x28]
  41eb57:	mov    r12,rax
  41eb5a:	add    r12,QWORD PTR [rbx+0x68]
  41eb5e:	mov    QWORD PTR [rbx+0x18],r12
  41eb62:	mov    ecx,DWORD PTR [rbx+0x70]
  41eb65:	sub    ecx,eax
  41eb67:	cmp    ecx,0xfffffffc
  41eb6a:	mov    eax,0xfffffffc
  41eb6f:	cmovb  eax,ecx
  41eb72:	mov    DWORD PTR [rbx+0x24],eax
  41eb75:	mov    rax,QWORD PTR [rbx+0x30]
  41eb79:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41eb80:	add    r12,r13
  41eb83:	je     41eb4f <flatcc_builder_append_vector@@Base+0x7f>
  41eb85:	mov    edx,r15d
  41eb88:	mov    rdi,r12
  41eb8b:	mov    rsi,r14
  41eb8e:	call   4060d0 <memcpy@plt>
  41eb93:	mov    rax,r12
  41eb96:	pop    rbx
  41eb97:	pop    r12
  41eb99:	pop    r13
  41eb9b:	pop    r14
  41eb9d:	pop    r15
  41eb9f:	ret    
  41eba0:	lea    rdi,[rip+0x1ae64]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41eba7:	lea    rsi,[rip+0x19d94]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ebae:	lea    rcx,[rip+0x1ae71]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41ebb5:	mov    edx,0x37c
  41ebba:	call   406070 <__assert_fail@plt>
  41ebbf:	lea    rdi,[rip+0x1a0b9]        # 438c7f <flatcc_builder_padding_base@@Base+0x5cf>
  41ebc6:	lea    rsi,[rip+0x19d75]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ebcd:	lea    rcx,[rip+0x1a157]        # 438d2b <flatcc_builder_padding_base@@Base+0x67b>
  41ebd4:	mov    edx,0x393
  41ebd9:	call   406070 <__assert_fail@plt>
  41ebde:	xchg   ax,ax

000000000041ebe0 <flatcc_builder_extend_offset_vector@@Base>:
  41ebe0:	push   r14
  41ebe2:	push   rbx
  41ebe3:	push   rax
  41ebe4:	mov    rax,QWORD PTR [rdi+0x30]
  41ebe8:	mov    ecx,DWORD PTR [rax+0x14]
  41ebeb:	add    ecx,esi
  41ebed:	jb     41ec74 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41ebf3:	cmp    ecx,0x40000000
  41ebf9:	jae    41ec74 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41ebfb:	mov    rbx,rdi
  41ebfe:	mov    DWORD PTR [rax+0x14],ecx
  41ec01:	mov    r14d,DWORD PTR [rdi+0x20]
  41ec05:	lea    eax,[r14+rsi*4]
  41ec09:	mov    DWORD PTR [rdi+0x20],eax
  41ec0c:	cmp    eax,DWORD PTR [rdi+0x24]
  41ec0f:	jae    41ec17 <flatcc_builder_extend_offset_vector@@Base+0x37>
  41ec11:	mov    rax,QWORD PTR [rbx+0x18]
  41ec15:	jmp    41ec69 <flatcc_builder_extend_offset_vector@@Base+0x89>
  41ec17:	inc    eax
  41ec19:	lea    rsi,[rbx+0x68]
  41ec1d:	mov    rdi,QWORD PTR [rbx+0x40]
  41ec21:	mov    edx,DWORD PTR [rbx+0x28]
  41ec24:	add    rdx,rax
  41ec27:	mov    ecx,0x1
  41ec2c:	mov    r8d,0x1
  41ec32:	call   QWORD PTR [rbx+0x50]
  41ec35:	test   eax,eax
  41ec37:	je     41ec3d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  41ec39:	xor    eax,eax
  41ec3b:	jmp    41ec6c <flatcc_builder_extend_offset_vector@@Base+0x8c>
  41ec3d:	mov    ecx,DWORD PTR [rbx+0x28]
  41ec40:	mov    rax,rcx
  41ec43:	add    rax,QWORD PTR [rbx+0x68]
  41ec47:	mov    QWORD PTR [rbx+0x18],rax
  41ec4b:	mov    edx,DWORD PTR [rbx+0x70]
  41ec4e:	sub    edx,ecx
  41ec50:	cmp    edx,0xfffffffc
  41ec53:	mov    ecx,0xfffffffc
  41ec58:	cmovb  ecx,edx
  41ec5b:	mov    DWORD PTR [rbx+0x24],ecx
  41ec5e:	mov    rcx,QWORD PTR [rbx+0x30]
  41ec62:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ec69:	add    rax,r14
  41ec6c:	add    rsp,0x8
  41ec70:	pop    rbx
  41ec71:	pop    r14
  41ec73:	ret    
  41ec74:	lea    rdi,[rip+0x1ad90]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41ec7b:	lea    rsi,[rip+0x19cc0]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ec82:	lea    rcx,[rip+0x1ad9d]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41ec89:	mov    edx,0x37c
  41ec8e:	call   406070 <__assert_fail@plt>
  41ec93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec9d:	nop    DWORD PTR [rax]

000000000041eca0 <flatcc_builder_offset_vector_push@@Base>:
  41eca0:	push   rbp
  41eca1:	push   r14
  41eca3:	push   rbx
  41eca4:	mov    rax,QWORD PTR [rdi+0x30]
  41eca8:	cmp    WORD PTR [rax+0xe],0x5
  41ecad:	jne    41ed42 <flatcc_builder_offset_vector_push@@Base+0xa2>
  41ecb3:	mov    ecx,DWORD PTR [rax+0x14]
  41ecb6:	cmp    ecx,0x3fffffff
  41ecbc:	je     41ed05 <flatcc_builder_offset_vector_push@@Base+0x65>
  41ecbe:	mov    r14d,esi
  41ecc1:	mov    rbx,rdi
  41ecc4:	inc    ecx
  41ecc6:	mov    DWORD PTR [rax+0x14],ecx
  41ecc9:	mov    ebp,DWORD PTR [rdi+0x20]
  41eccc:	lea    eax,[rbp+0x4]
  41eccf:	mov    DWORD PTR [rdi+0x20],eax
  41ecd2:	cmp    eax,DWORD PTR [rdi+0x24]
  41ecd5:	jae    41ece2 <flatcc_builder_offset_vector_push@@Base+0x42>
  41ecd7:	mov    rax,QWORD PTR [rbx+0x18]
  41ecdb:	add    rax,rbp
  41ecde:	jne    41ed3a <flatcc_builder_offset_vector_push@@Base+0x9a>
  41ece0:	jmp    41ed05 <flatcc_builder_offset_vector_push@@Base+0x65>
  41ece2:	lea    eax,[rbp+0x5]
  41ece5:	lea    rsi,[rbx+0x68]
  41ece9:	mov    rdi,QWORD PTR [rbx+0x40]
  41eced:	mov    edx,DWORD PTR [rbx+0x28]
  41ecf0:	add    rdx,rax
  41ecf3:	mov    ecx,0x1
  41ecf8:	mov    r8d,0x1
  41ecfe:	call   QWORD PTR [rbx+0x50]
  41ed01:	test   eax,eax
  41ed03:	je     41ed09 <flatcc_builder_offset_vector_push@@Base+0x69>
  41ed05:	xor    eax,eax
  41ed07:	jmp    41ed3d <flatcc_builder_offset_vector_push@@Base+0x9d>
  41ed09:	mov    ecx,DWORD PTR [rbx+0x28]
  41ed0c:	mov    rax,rcx
  41ed0f:	add    rax,QWORD PTR [rbx+0x68]
  41ed13:	mov    QWORD PTR [rbx+0x18],rax
  41ed17:	mov    edx,DWORD PTR [rbx+0x70]
  41ed1a:	sub    edx,ecx
  41ed1c:	cmp    edx,0xfffffffc
  41ed1f:	mov    ecx,0xfffffffc
  41ed24:	cmovb  ecx,edx
  41ed27:	mov    DWORD PTR [rbx+0x24],ecx
  41ed2a:	mov    rcx,QWORD PTR [rbx+0x30]
  41ed2e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ed35:	add    rax,rbp
  41ed38:	je     41ed05 <flatcc_builder_offset_vector_push@@Base+0x65>
  41ed3a:	mov    DWORD PTR [rax],r14d
  41ed3d:	pop    rbx
  41ed3e:	pop    r14
  41ed40:	pop    rbp
  41ed41:	ret    
  41ed42:	lea    rdi,[rip+0x1a02f]        # 438d78 <flatcc_builder_padding_base@@Base+0x6c8>
  41ed49:	lea    rsi,[rip+0x19bf2]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ed50:	lea    rcx,[rip+0x1a054]        # 438dab <flatcc_builder_padding_base@@Base+0x6fb>
  41ed57:	mov    edx,0x3a6
  41ed5c:	call   406070 <__assert_fail@plt>
  41ed61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed6b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ed70 <flatcc_builder_append_offset_vector@@Base>:
  41ed70:	push   r15
  41ed72:	push   r14
  41ed74:	push   r13
  41ed76:	push   r12
  41ed78:	push   rbx
  41ed79:	mov    rax,QWORD PTR [rdi+0x30]
  41ed7d:	cmp    WORD PTR [rax+0xe],0x5
  41ed82:	jne    41ee5e <flatcc_builder_append_offset_vector@@Base+0xee>
  41ed88:	mov    r15,rdx
  41ed8b:	mov    ecx,DWORD PTR [rax+0x14]
  41ed8e:	add    ecx,r15d
  41ed91:	jb     41ee3f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41ed97:	cmp    ecx,0x40000000
  41ed9d:	jae    41ee3f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41eda3:	mov    r14,rsi
  41eda6:	mov    rbx,rdi
  41eda9:	mov    DWORD PTR [rax+0x14],ecx
  41edac:	mov    r13d,DWORD PTR [rdi+0x20]
  41edb0:	lea    eax,[r13+r15*4+0x0]
  41edb5:	mov    DWORD PTR [rdi+0x20],eax
  41edb8:	cmp    eax,DWORD PTR [rdi+0x24]
  41edbb:	jae    41edc8 <flatcc_builder_append_offset_vector@@Base+0x58>
  41edbd:	mov    r12,QWORD PTR [rbx+0x18]
  41edc1:	add    r12,r13
  41edc4:	jne    41ee20 <flatcc_builder_append_offset_vector@@Base+0xb0>
  41edc6:	jmp    41edea <flatcc_builder_append_offset_vector@@Base+0x7a>
  41edc8:	inc    eax
  41edca:	lea    rsi,[rbx+0x68]
  41edce:	mov    rdi,QWORD PTR [rbx+0x40]
  41edd2:	mov    edx,DWORD PTR [rbx+0x28]
  41edd5:	add    rdx,rax
  41edd8:	mov    ecx,0x1
  41eddd:	mov    r8d,0x1
  41ede3:	call   QWORD PTR [rbx+0x50]
  41ede6:	test   eax,eax
  41ede8:	je     41edef <flatcc_builder_append_offset_vector@@Base+0x7f>
  41edea:	xor    r12d,r12d
  41eded:	jmp    41ee32 <flatcc_builder_append_offset_vector@@Base+0xc2>
  41edef:	mov    eax,DWORD PTR [rbx+0x28]
  41edf2:	mov    r12,rax
  41edf5:	add    r12,QWORD PTR [rbx+0x68]
  41edf9:	mov    QWORD PTR [rbx+0x18],r12
  41edfd:	mov    ecx,DWORD PTR [rbx+0x70]
  41ee00:	sub    ecx,eax
  41ee02:	cmp    ecx,0xfffffffc
  41ee05:	mov    eax,0xfffffffc
  41ee0a:	cmovb  eax,ecx
  41ee0d:	mov    DWORD PTR [rbx+0x24],eax
  41ee10:	mov    rax,QWORD PTR [rbx+0x30]
  41ee14:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ee1b:	add    r12,r13
  41ee1e:	je     41edea <flatcc_builder_append_offset_vector@@Base+0x7a>
  41ee20:	shl    r15d,0x2
  41ee24:	mov    edx,r15d
  41ee27:	mov    rdi,r12
  41ee2a:	mov    rsi,r14
  41ee2d:	call   4060d0 <memcpy@plt>
  41ee32:	mov    rax,r12
  41ee35:	pop    rbx
  41ee36:	pop    r12
  41ee38:	pop    r13
  41ee3a:	pop    r14
  41ee3c:	pop    r15
  41ee3e:	ret    
  41ee3f:	lea    rdi,[rip+0x1abc5]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41ee46:	lea    rsi,[rip+0x19af5]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ee4d:	lea    rcx,[rip+0x1abd2]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41ee54:	mov    edx,0x37c
  41ee59:	call   406070 <__assert_fail@plt>
  41ee5e:	lea    rdi,[rip+0x19f13]        # 438d78 <flatcc_builder_padding_base@@Base+0x6c8>
  41ee65:	lea    rsi,[rip+0x19ad6]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ee6c:	lea    rcx,[rip+0x19f9a]        # 438e0d <flatcc_builder_padding_base@@Base+0x75d>
  41ee73:	mov    edx,0x3b4
  41ee78:	call   406070 <__assert_fail@plt>
  41ee7d:	nop    DWORD PTR [rax]

000000000041ee80 <flatcc_builder_extend_string@@Base>:
  41ee80:	push   r14
  41ee82:	push   rbx
  41ee83:	push   rax
  41ee84:	mov    rax,QWORD PTR [rdi+0x30]
  41ee88:	cmp    WORD PTR [rax+0xe],0x6
  41ee8d:	jne    41ef19 <flatcc_builder_extend_string@@Base+0x99>
  41ee93:	mov    ecx,DWORD PTR [rax+0x14]
  41ee96:	add    ecx,esi
  41ee98:	jb     41ef38 <flatcc_builder_extend_string@@Base+0xb8>
  41ee9e:	mov    rbx,rdi
  41eea1:	mov    DWORD PTR [rax+0x14],ecx
  41eea4:	mov    r14d,DWORD PTR [rdi+0x20]
  41eea8:	add    esi,r14d
  41eeab:	mov    DWORD PTR [rdi+0x20],esi
  41eeae:	cmp    esi,DWORD PTR [rdi+0x24]
  41eeb1:	jae    41eeb9 <flatcc_builder_extend_string@@Base+0x39>
  41eeb3:	mov    rax,QWORD PTR [rbx+0x18]
  41eeb7:	jmp    41ef0e <flatcc_builder_extend_string@@Base+0x8e>
  41eeb9:	inc    esi
  41eebb:	lea    rax,[rbx+0x68]
  41eebf:	mov    rdi,QWORD PTR [rbx+0x40]
  41eec3:	mov    edx,DWORD PTR [rbx+0x28]
  41eec6:	add    rdx,rsi
  41eec9:	mov    rsi,rax
  41eecc:	mov    ecx,0x1
  41eed1:	mov    r8d,0x1
  41eed7:	call   QWORD PTR [rbx+0x50]
  41eeda:	test   eax,eax
  41eedc:	je     41eee2 <flatcc_builder_extend_string@@Base+0x62>
  41eede:	xor    eax,eax
  41eee0:	jmp    41ef11 <flatcc_builder_extend_string@@Base+0x91>
  41eee2:	mov    ecx,DWORD PTR [rbx+0x28]
  41eee5:	mov    rax,rcx
  41eee8:	add    rax,QWORD PTR [rbx+0x68]
  41eeec:	mov    QWORD PTR [rbx+0x18],rax
  41eef0:	mov    edx,DWORD PTR [rbx+0x70]
  41eef3:	sub    edx,ecx
  41eef5:	cmp    edx,0xfffffffc
  41eef8:	mov    ecx,0xfffffffc
  41eefd:	cmovb  ecx,edx
  41ef00:	mov    DWORD PTR [rbx+0x24],ecx
  41ef03:	mov    rcx,QWORD PTR [rbx+0x30]
  41ef07:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ef0e:	add    rax,r14
  41ef11:	add    rsp,0x8
  41ef15:	pop    rbx
  41ef16:	pop    r14
  41ef18:	ret    
  41ef19:	lea    rdi,[rip+0x19f61]        # 438e81 <flatcc_builder_padding_base@@Base+0x7d1>
  41ef20:	lea    rsi,[rip+0x19a1b]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ef27:	lea    rcx,[rip+0x19f7f]        # 438ead <flatcc_builder_padding_base@@Base+0x7fd>
  41ef2e:	mov    edx,0x3bd
  41ef33:	call   406070 <__assert_fail@plt>
  41ef38:	lea    rdi,[rip+0x1aacc]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41ef3f:	lea    rsi,[rip+0x199fc]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ef46:	lea    rcx,[rip+0x1aad9]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41ef4d:	mov    edx,0x37c
  41ef52:	call   406070 <__assert_fail@plt>
  41ef57:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ef60 <flatcc_builder_append_string@@Base>:
  41ef60:	push   r15
  41ef62:	push   r14
  41ef64:	push   r13
  41ef66:	push   r12
  41ef68:	push   rbx
  41ef69:	mov    rax,QWORD PTR [rdi+0x30]
  41ef6d:	cmp    WORD PTR [rax+0xe],0x6
  41ef72:	jne    41f01e <flatcc_builder_append_string@@Base+0xbe>
  41ef78:	mov    r15,rdx
  41ef7b:	mov    ecx,DWORD PTR [rax+0x14]
  41ef7e:	add    ecx,r15d
  41ef81:	jb     41f03d <flatcc_builder_append_string@@Base+0xdd>
  41ef87:	mov    r14,rsi
  41ef8a:	mov    rbx,rdi
  41ef8d:	mov    DWORD PTR [rax+0x14],ecx
  41ef90:	mov    r13d,DWORD PTR [rdi+0x20]
  41ef94:	lea    eax,[r15+r13*1]
  41ef98:	mov    DWORD PTR [rdi+0x20],eax
  41ef9b:	cmp    eax,DWORD PTR [rdi+0x24]
  41ef9e:	jae    41efab <flatcc_builder_append_string@@Base+0x4b>
  41efa0:	mov    r12,QWORD PTR [rbx+0x18]
  41efa4:	add    r12,r13
  41efa7:	jne    41f003 <flatcc_builder_append_string@@Base+0xa3>
  41efa9:	jmp    41efcd <flatcc_builder_append_string@@Base+0x6d>
  41efab:	inc    eax
  41efad:	lea    rsi,[rbx+0x68]
  41efb1:	mov    rdi,QWORD PTR [rbx+0x40]
  41efb5:	mov    edx,DWORD PTR [rbx+0x28]
  41efb8:	add    rdx,rax
  41efbb:	mov    ecx,0x1
  41efc0:	mov    r8d,0x1
  41efc6:	call   QWORD PTR [rbx+0x50]
  41efc9:	test   eax,eax
  41efcb:	je     41efd2 <flatcc_builder_append_string@@Base+0x72>
  41efcd:	xor    r12d,r12d
  41efd0:	jmp    41f011 <flatcc_builder_append_string@@Base+0xb1>
  41efd2:	mov    eax,DWORD PTR [rbx+0x28]
  41efd5:	mov    r12,rax
  41efd8:	add    r12,QWORD PTR [rbx+0x68]
  41efdc:	mov    QWORD PTR [rbx+0x18],r12
  41efe0:	mov    ecx,DWORD PTR [rbx+0x70]
  41efe3:	sub    ecx,eax
  41efe5:	cmp    ecx,0xfffffffc
  41efe8:	mov    eax,0xfffffffc
  41efed:	cmovb  eax,ecx
  41eff0:	mov    DWORD PTR [rbx+0x24],eax
  41eff3:	mov    rax,QWORD PTR [rbx+0x30]
  41eff7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41effe:	add    r12,r13
  41f001:	je     41efcd <flatcc_builder_append_string@@Base+0x6d>
  41f003:	mov    edx,r15d
  41f006:	mov    rdi,r12
  41f009:	mov    rsi,r14
  41f00c:	call   4060d0 <memcpy@plt>
  41f011:	mov    rax,r12
  41f014:	pop    rbx
  41f015:	pop    r12
  41f017:	pop    r13
  41f019:	pop    r14
  41f01b:	pop    r15
  41f01d:	ret    
  41f01e:	lea    rdi,[rip+0x19e5c]        # 438e81 <flatcc_builder_padding_base@@Base+0x7d1>
  41f025:	lea    rsi,[rip+0x19916]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f02c:	lea    rcx,[rip+0x19eb9]        # 438eec <flatcc_builder_padding_base@@Base+0x83c>
  41f033:	mov    edx,0x3c6
  41f038:	call   406070 <__assert_fail@plt>
  41f03d:	lea    rdi,[rip+0x1a9c7]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41f044:	lea    rsi,[rip+0x198f7]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f04b:	lea    rcx,[rip+0x1a9d4]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41f052:	mov    edx,0x37c
  41f057:	call   406070 <__assert_fail@plt>
  41f05c:	nop    DWORD PTR [rax+0x0]

000000000041f060 <flatcc_builder_append_string_str@@Base>:
  41f060:	push   r14
  41f062:	push   rbx
  41f063:	push   rax
  41f064:	mov    rbx,rsi
  41f067:	mov    r14,rdi
  41f06a:	mov    rdi,rsi
  41f06d:	call   406060 <strlen@plt>
  41f072:	mov    rdi,r14
  41f075:	mov    rsi,rbx
  41f078:	mov    rdx,rax
  41f07b:	add    rsp,0x8
  41f07f:	pop    rbx
  41f080:	pop    r14
  41f082:	jmp    41ef60 <flatcc_builder_append_string@@Base>
  41f087:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f090 <flatcc_builder_append_string_strn@@Base>:
  41f090:	push   r15
  41f092:	push   r14
  41f094:	push   rbx
  41f095:	mov    rbx,rdx
  41f098:	mov    r14,rsi
  41f09b:	mov    r15,rdi
  41f09e:	mov    rdi,rsi
  41f0a1:	xor    esi,esi
  41f0a3:	call   4060a0 <memchr@plt>
  41f0a8:	mov    rcx,rax
  41f0ab:	sub    rcx,r14
  41f0ae:	test   rax,rax
  41f0b1:	cmovne rbx,rcx
  41f0b5:	mov    rdi,r15
  41f0b8:	mov    rsi,r14
  41f0bb:	mov    rdx,rbx
  41f0be:	pop    rbx
  41f0bf:	pop    r14
  41f0c1:	pop    r15
  41f0c3:	jmp    41ef60 <flatcc_builder_append_string@@Base>
  41f0c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f0d0 <flatcc_builder_truncate_vector@@Base>:
  41f0d0:	push   rax
  41f0d1:	mov    rax,QWORD PTR [rdi+0x30]
  41f0d5:	cmp    WORD PTR [rax+0xe],0x4
  41f0da:	jne    41f10e <flatcc_builder_truncate_vector@@Base+0x3e>
  41f0dc:	mov    rdx,rsi
  41f0df:	mov    ecx,DWORD PTR [rax+0x14]
  41f0e2:	cmp    rcx,rsi
  41f0e5:	jb     41f12d <flatcc_builder_truncate_vector@@Base+0x5d>
  41f0e7:	sub    ecx,edx
  41f0e9:	mov    DWORD PTR [rax+0x14],ecx
  41f0ec:	mov    rax,QWORD PTR [rdi+0x30]
  41f0f0:	imul   edx,DWORD PTR [rax+0x10]
  41f0f4:	mov    eax,DWORD PTR [rdi+0x20]
  41f0f7:	sub    eax,edx
  41f0f9:	mov    DWORD PTR [rdi+0x20],eax
  41f0fc:	add    rax,QWORD PTR [rdi+0x18]
  41f100:	mov    rdi,rax
  41f103:	xor    esi,esi
  41f105:	call   406080 <memset@plt>
  41f10a:	xor    eax,eax
  41f10c:	pop    rcx
  41f10d:	ret    
  41f10e:	lea    rdi,[rip+0x19b6a]        # 438c7f <flatcc_builder_padding_base@@Base+0x5cf>
  41f115:	lea    rsi,[rip+0x19826]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f11c:	lea    rcx,[rip+0x19e16]        # 438f39 <flatcc_builder_padding_base@@Base+0x889>
  41f123:	mov    edx,0x3d9
  41f128:	call   406070 <__assert_fail@plt>
  41f12d:	lea    rdi,[rip+0x19e44]        # 438f78 <flatcc_builder_padding_base@@Base+0x8c8>
  41f134:	lea    rsi,[rip+0x19807]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f13b:	lea    rcx,[rip+0x19df7]        # 438f39 <flatcc_builder_padding_base@@Base+0x889>
  41f142:	mov    edx,0x3da
  41f147:	call   406070 <__assert_fail@plt>
  41f14c:	nop    DWORD PTR [rax+0x0]

000000000041f150 <flatcc_builder_truncate_offset_vector@@Base>:
  41f150:	push   rax
  41f151:	mov    rax,QWORD PTR [rdi+0x30]
  41f155:	cmp    WORD PTR [rax+0xe],0x5
  41f15a:	jne    41f18b <flatcc_builder_truncate_offset_vector@@Base+0x3b>
  41f15c:	mov    rdx,rsi
  41f15f:	mov    ecx,DWORD PTR [rax+0x14]
  41f162:	sub    ecx,edx
  41f164:	jb     41f1aa <flatcc_builder_truncate_offset_vector@@Base+0x5a>
  41f166:	mov    DWORD PTR [rax+0x14],ecx
  41f169:	mov    rax,QWORD PTR [rdi+0x30]
  41f16d:	imul   edx,DWORD PTR [rax+0x10]
  41f171:	mov    eax,DWORD PTR [rdi+0x20]
  41f174:	sub    eax,edx
  41f176:	mov    DWORD PTR [rdi+0x20],eax
  41f179:	add    rax,QWORD PTR [rdi+0x18]
  41f17d:	mov    rdi,rax
  41f180:	xor    esi,esi
  41f182:	call   406080 <memset@plt>
  41f187:	xor    eax,eax
  41f189:	pop    rcx
  41f18a:	ret    
  41f18b:	lea    rdi,[rip+0x19be6]        # 438d78 <flatcc_builder_padding_base@@Base+0x6c8>
  41f192:	lea    rsi,[rip+0x197a9]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f199:	lea    rcx,[rip+0x19dfc]        # 438f9c <flatcc_builder_padding_base@@Base+0x8ec>
  41f1a0:	mov    edx,0x3e2
  41f1a5:	call   406070 <__assert_fail@plt>
  41f1aa:	lea    rdi,[rip+0x19e31]        # 438fe2 <flatcc_builder_padding_base@@Base+0x932>
  41f1b1:	lea    rsi,[rip+0x1978a]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f1b8:	lea    rcx,[rip+0x19ddd]        # 438f9c <flatcc_builder_padding_base@@Base+0x8ec>
  41f1bf:	mov    edx,0x3e3
  41f1c4:	call   406070 <__assert_fail@plt>
  41f1c9:	nop    DWORD PTR [rax+0x0]

000000000041f1d0 <flatcc_builder_truncate_string@@Base>:
  41f1d0:	push   rax
  41f1d1:	mov    rax,QWORD PTR [rdi+0x30]
  41f1d5:	cmp    WORD PTR [rax+0xe],0x6
  41f1da:	jne    41f205 <flatcc_builder_truncate_string@@Base+0x35>
  41f1dc:	mov    ecx,DWORD PTR [rax+0x14]
  41f1df:	cmp    rcx,rsi
  41f1e2:	jb     41f224 <flatcc_builder_truncate_string@@Base+0x54>
  41f1e4:	sub    ecx,esi
  41f1e6:	mov    DWORD PTR [rax+0x14],ecx
  41f1e9:	mov    eax,DWORD PTR [rdi+0x20]
  41f1ec:	sub    eax,esi
  41f1ee:	mov    DWORD PTR [rdi+0x20],eax
  41f1f1:	add    rax,QWORD PTR [rdi+0x18]
  41f1f5:	mov    edx,esi
  41f1f7:	mov    rdi,rax
  41f1fa:	xor    esi,esi
  41f1fc:	call   406080 <memset@plt>
  41f201:	xor    eax,eax
  41f203:	pop    rcx
  41f204:	ret    
  41f205:	lea    rdi,[rip+0x19c75]        # 438e81 <flatcc_builder_padding_base@@Base+0x7d1>
  41f20c:	lea    rsi,[rip+0x1972f]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f213:	lea    rcx,[rip+0x19e03]        # 43901d <flatcc_builder_padding_base@@Base+0x96d>
  41f21a:	mov    edx,0x3eb
  41f21f:	call   406070 <__assert_fail@plt>
  41f224:	lea    rdi,[rip+0x19e31]        # 43905c <flatcc_builder_padding_base@@Base+0x9ac>
  41f22b:	lea    rsi,[rip+0x19710]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f232:	lea    rcx,[rip+0x19de4]        # 43901d <flatcc_builder_padding_base@@Base+0x96d>
  41f239:	mov    edx,0x3ec
  41f23e:	call   406070 <__assert_fail@plt>
  41f243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f24d:	nop    DWORD PTR [rax]

000000000041f250 <flatcc_builder_start_vector@@Base>:
  41f250:	push   r15
  41f252:	push   r14
  41f254:	push   rbx
  41f255:	mov    r14,rcx
  41f258:	mov    r15,rsi
  41f25b:	mov    rbx,rdi
  41f25e:	cmp    dx,0x4
  41f262:	mov    esi,0x4
  41f267:	cmova  esi,edx
  41f26a:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41f26f:	mov    ecx,eax
  41f271:	mov    eax,0xffffffff
  41f276:	test   ecx,ecx
  41f278:	jne    41f2c6 <flatcc_builder_start_vector@@Base+0x76>
  41f27a:	mov    rax,QWORD PTR [rbx+0x30]
  41f27e:	mov    DWORD PTR [rax+0x10],r15d
  41f282:	mov    rax,QWORD PTR [rbx+0x30]
  41f286:	mov    DWORD PTR [rax+0x14],0x0
  41f28d:	mov    rax,QWORD PTR [rbx+0x30]
  41f291:	mov    DWORD PTR [rax+0x18],r14d
  41f295:	mov    rax,QWORD PTR [rbx+0x30]
  41f299:	mov    WORD PTR [rax+0xe],0x4
  41f29f:	mov    ecx,DWORD PTR [rbx+0x28]
  41f2a2:	mov    edx,DWORD PTR [rbx+0x70]
  41f2a5:	sub    edx,ecx
  41f2a7:	add    rcx,QWORD PTR [rbx+0x68]
  41f2ab:	mov    QWORD PTR [rbx+0x18],rcx
  41f2af:	cmp    edx,0xfffffffc
  41f2b2:	mov    ecx,0xfffffffc
  41f2b7:	cmovb  ecx,edx
  41f2ba:	mov    DWORD PTR [rbx+0x24],ecx
  41f2bd:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f2c4:	xor    eax,eax
  41f2c6:	pop    rbx
  41f2c7:	pop    r14
  41f2c9:	pop    r15
  41f2cb:	ret    
  41f2cc:	nop    DWORD PTR [rax+0x0]

000000000041f2d0 <flatcc_builder_start_offset_vector@@Base>:
  41f2d0:	push   rbx
  41f2d1:	mov    rbx,rdi
  41f2d4:	mov    esi,0x4
  41f2d9:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41f2de:	mov    ecx,eax
  41f2e0:	mov    eax,0xffffffff
  41f2e5:	test   ecx,ecx
  41f2e7:	je     41f2eb <flatcc_builder_start_offset_vector@@Base+0x1b>
  41f2e9:	pop    rbx
  41f2ea:	ret    
  41f2eb:	mov    rax,QWORD PTR [rbx+0x30]
  41f2ef:	mov    DWORD PTR [rax+0x10],0x4
  41f2f6:	mov    rax,QWORD PTR [rbx+0x30]
  41f2fa:	mov    DWORD PTR [rax+0x14],0x0
  41f301:	mov    rax,QWORD PTR [rbx+0x30]
  41f305:	mov    WORD PTR [rax+0xe],0x5
  41f30b:	mov    ecx,DWORD PTR [rbx+0x28]
  41f30e:	mov    edx,DWORD PTR [rbx+0x70]
  41f311:	sub    edx,ecx
  41f313:	add    rcx,QWORD PTR [rbx+0x68]
  41f317:	mov    QWORD PTR [rbx+0x18],rcx
  41f31b:	cmp    edx,0xfffffffc
  41f31e:	mov    ecx,0xfffffffc
  41f323:	cmovb  ecx,edx
  41f326:	mov    DWORD PTR [rbx+0x24],ecx
  41f329:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f330:	xor    eax,eax
  41f332:	pop    rbx
  41f333:	ret    
  41f334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f33e:	xchg   ax,ax

000000000041f340 <flatcc_builder_create_offset_vector@@Base>:
  41f340:	push   r15
  41f342:	push   r14
  41f344:	push   r12
  41f346:	push   rbx
  41f347:	push   rax
  41f348:	mov    r14,rdx
  41f34b:	mov    r15,rsi
  41f34e:	mov    rbx,rdi
  41f351:	mov    esi,0x4
  41f356:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41f35b:	test   eax,eax
  41f35d:	je     41f36d <flatcc_builder_create_offset_vector@@Base+0x2d>
  41f35f:	xor    eax,eax
  41f361:	add    rsp,0x8
  41f365:	pop    rbx
  41f366:	pop    r12
  41f368:	pop    r14
  41f36a:	pop    r15
  41f36c:	ret    
  41f36d:	mov    rax,QWORD PTR [rbx+0x30]
  41f371:	mov    DWORD PTR [rax+0x10],0x4
  41f378:	mov    rax,QWORD PTR [rbx+0x30]
  41f37c:	mov    DWORD PTR [rax+0x14],0x0
  41f383:	mov    rax,QWORD PTR [rbx+0x30]
  41f387:	mov    WORD PTR [rax+0xe],0x5
  41f38d:	mov    ecx,DWORD PTR [rbx+0x28]
  41f390:	mov    edx,DWORD PTR [rbx+0x70]
  41f393:	sub    edx,ecx
  41f395:	add    rcx,QWORD PTR [rbx+0x68]
  41f399:	mov    QWORD PTR [rbx+0x18],rcx
  41f39d:	cmp    edx,0xfffffffc
  41f3a0:	mov    ecx,0xfffffffc
  41f3a5:	cmovb  ecx,edx
  41f3a8:	mov    DWORD PTR [rbx+0x24],ecx
  41f3ab:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f3b2:	mov    ecx,DWORD PTR [rax+0x14]
  41f3b5:	add    ecx,r14d
  41f3b8:	jb     41f468 <flatcc_builder_create_offset_vector@@Base+0x128>
  41f3be:	cmp    ecx,0x40000000
  41f3c4:	jae    41f468 <flatcc_builder_create_offset_vector@@Base+0x128>
  41f3ca:	mov    DWORD PTR [rax+0x14],ecx
  41f3cd:	mov    r12d,DWORD PTR [rbx+0x20]
  41f3d1:	lea    eax,[r12+r14*4]
  41f3d5:	mov    DWORD PTR [rbx+0x20],eax
  41f3d8:	cmp    eax,DWORD PTR [rbx+0x24]
  41f3db:	jae    41f3eb <flatcc_builder_create_offset_vector@@Base+0xab>
  41f3dd:	mov    rdi,QWORD PTR [rbx+0x18]
  41f3e1:	add    rdi,r12
  41f3e4:	jne    41f446 <flatcc_builder_create_offset_vector@@Base+0x106>
  41f3e6:	jmp    41f35f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41f3eb:	inc    eax
  41f3ed:	lea    rsi,[rbx+0x68]
  41f3f1:	mov    rdi,QWORD PTR [rbx+0x40]
  41f3f5:	mov    edx,DWORD PTR [rbx+0x28]
  41f3f8:	add    rdx,rax
  41f3fb:	mov    ecx,0x1
  41f400:	mov    r8d,0x1
  41f406:	call   QWORD PTR [rbx+0x50]
  41f409:	test   eax,eax
  41f40b:	jne    41f35f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41f411:	mov    eax,DWORD PTR [rbx+0x28]
  41f414:	mov    rdi,rax
  41f417:	add    rdi,QWORD PTR [rbx+0x68]
  41f41b:	mov    QWORD PTR [rbx+0x18],rdi
  41f41f:	mov    ecx,DWORD PTR [rbx+0x70]
  41f422:	sub    ecx,eax
  41f424:	cmp    ecx,0xfffffffc
  41f427:	mov    eax,0xfffffffc
  41f42c:	cmovb  eax,ecx
  41f42f:	mov    DWORD PTR [rbx+0x24],eax
  41f432:	mov    rax,QWORD PTR [rbx+0x30]
  41f436:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f43d:	add    rdi,r12
  41f440:	je     41f35f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41f446:	shl    r14,0x2
  41f44a:	mov    rsi,r15
  41f44d:	mov    rdx,r14
  41f450:	call   4060d0 <memcpy@plt>
  41f455:	mov    rdi,rbx
  41f458:	add    rsp,0x8
  41f45c:	pop    rbx
  41f45d:	pop    r12
  41f45f:	pop    r14
  41f461:	pop    r15
  41f463:	jmp    41f490 <flatcc_builder_end_offset_vector@@Base>
  41f468:	lea    rdi,[rip+0x1a59c]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  41f46f:	lea    rsi,[rip+0x194cc]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f476:	lea    rcx,[rip+0x1a5a9]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  41f47d:	mov    edx,0x37c
  41f482:	call   406070 <__assert_fail@plt>
  41f487:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f490 <flatcc_builder_end_offset_vector@@Base>:
  41f490:	push   rbp
  41f491:	push   rbx
  41f492:	push   rax
  41f493:	mov    rax,QWORD PTR [rdi+0x30]
  41f497:	cmp    WORD PTR [rax+0xe],0x5
  41f49c:	jne    41f52a <flatcc_builder_end_offset_vector@@Base+0x9a>
  41f4a2:	mov    rbx,rdi
  41f4a5:	mov    rsi,QWORD PTR [rdi+0x18]
  41f4a9:	mov    edx,DWORD PTR [rax+0x14]
  41f4ac:	xor    ecx,ecx
  41f4ae:	call   4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41f4b3:	mov    ebp,eax
  41f4b5:	test   eax,eax
  41f4b7:	je     41f521 <flatcc_builder_end_offset_vector@@Base+0x91>
  41f4b9:	mov    rdi,QWORD PTR [rbx+0x18]
  41f4bd:	mov    edx,DWORD PTR [rbx+0x20]
  41f4c0:	xor    esi,esi
  41f4c2:	call   406080 <memset@plt>
  41f4c7:	mov    rax,QWORD PTR [rbx+0x30]
  41f4cb:	mov    ecx,DWORD PTR [rax+0x8]
  41f4ce:	mov    DWORD PTR [rbx+0x20],ecx
  41f4d1:	mov    ecx,DWORD PTR [rax]
  41f4d3:	mov    DWORD PTR [rbx+0x28],ecx
  41f4d6:	mov    edx,DWORD PTR [rax+0x4]
  41f4d9:	mov    rsi,rcx
  41f4dc:	add    rsi,QWORD PTR [rbx+0x68]
  41f4e0:	mov    QWORD PTR [rbx+0x18],rsi
  41f4e4:	mov    esi,DWORD PTR [rbx+0x70]
  41f4e7:	sub    esi,ecx
  41f4e9:	cmp    esi,edx
  41f4eb:	cmova  esi,edx
  41f4ee:	mov    DWORD PTR [rbx+0x24],esi
  41f4f1:	movzx  ecx,WORD PTR [rbx+0xea]
  41f4f8:	cmp    WORD PTR [rbx+0xe8],cx
  41f4ff:	jae    41f508 <flatcc_builder_end_offset_vector@@Base+0x78>
  41f501:	mov    WORD PTR [rbx+0xe8],cx
  41f508:	movzx  ecx,WORD PTR [rax+0xc]
  41f50c:	mov    WORD PTR [rbx+0xea],cx
  41f513:	add    rax,0xffffffffffffffdc
  41f517:	mov    QWORD PTR [rbx+0x30],rax
  41f51b:	dec    DWORD PTR [rbx+0x104]
  41f521:	mov    eax,ebp
  41f523:	add    rsp,0x8
  41f527:	pop    rbx
  41f528:	pop    rbp
  41f529:	ret    
  41f52a:	lea    rdi,[rip+0x19847]        # 438d78 <flatcc_builder_padding_base@@Base+0x6c8>
  41f531:	lea    rsi,[rip+0x1940a]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f538:	lea    rcx,[rip+0x19e68]        # 4393a7 <flatcc_builder_padding_base@@Base+0xcf7>
  41f53f:	mov    edx,0x5c8
  41f544:	call   406070 <__assert_fail@plt>
  41f549:	nop    DWORD PTR [rax+0x0]

000000000041f550 <flatcc_builder_start_string@@Base>:
  41f550:	push   rbx
  41f551:	mov    rbx,rdi
  41f554:	mov    esi,0x1
  41f559:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41f55e:	mov    ecx,eax
  41f560:	mov    eax,0xffffffff
  41f565:	test   ecx,ecx
  41f567:	je     41f56b <flatcc_builder_start_string@@Base+0x1b>
  41f569:	pop    rbx
  41f56a:	ret    
  41f56b:	mov    rax,QWORD PTR [rbx+0x30]
  41f56f:	mov    DWORD PTR [rax+0x10],0x1
  41f576:	mov    rax,QWORD PTR [rbx+0x30]
  41f57a:	mov    DWORD PTR [rax+0x14],0x0
  41f581:	mov    rax,QWORD PTR [rbx+0x30]
  41f585:	mov    WORD PTR [rax+0xe],0x6
  41f58b:	mov    ecx,DWORD PTR [rbx+0x28]
  41f58e:	mov    edx,DWORD PTR [rbx+0x70]
  41f591:	sub    edx,ecx
  41f593:	add    rcx,QWORD PTR [rbx+0x68]
  41f597:	mov    QWORD PTR [rbx+0x18],rcx
  41f59b:	cmp    edx,0xfffffffc
  41f59e:	mov    ecx,0xfffffffc
  41f5a3:	cmovb  ecx,edx
  41f5a6:	mov    DWORD PTR [rbx+0x24],ecx
  41f5a9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f5b0:	xor    eax,eax
  41f5b2:	pop    rbx
  41f5b3:	ret    
  41f5b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f5be:	xchg   ax,ax

000000000041f5c0 <flatcc_builder_reserve_table@@Base>:
  41f5c0:	push   r15
  41f5c2:	push   r14
  41f5c4:	push   rbx
  41f5c5:	test   esi,esi
  41f5c7:	js     41f674 <flatcc_builder_reserve_table@@Base+0xb4>
  41f5cd:	mov    r14d,esi
  41f5d0:	mov    r15,rdi
  41f5d3:	mov    rax,QWORD PTR [rdi+0x30]
  41f5d7:	movzx  ebx,WORD PTR [rax+0x1c]
  41f5db:	add    ebx,ebx
  41f5dd:	add    ebx,DWORD PTR [rax+0x10]
  41f5e0:	lea    edx,[r14+r14*1]
  41f5e4:	add    edx,0x4
  41f5e7:	add    rdx,rbx
  41f5ea:	cmp    rdx,QWORD PTR [rdi+0x60]
  41f5ee:	jbe    41f60c <flatcc_builder_reserve_table@@Base+0x4c>
  41f5f0:	lea    rsi,[r15+0x58]
  41f5f4:	mov    rdi,QWORD PTR [r15+0x40]
  41f5f8:	mov    ecx,0x1
  41f5fd:	xor    r8d,r8d
  41f600:	call   QWORD PTR [r15+0x50]
  41f604:	test   eax,eax
  41f606:	jne    41f693 <flatcc_builder_reserve_table@@Base+0xd3>
  41f60c:	add    rbx,QWORD PTR [r15+0x58]
  41f610:	mov    QWORD PTR [r15+0x8],rbx
  41f614:	je     41f669 <flatcc_builder_reserve_table@@Base+0xa9>
  41f616:	add    r14d,r14d
  41f619:	add    rbx,0x4
  41f61d:	mov    QWORD PTR [r15+0x8],rbx
  41f621:	mov    rax,QWORD PTR [r15+0x30]
  41f625:	mov    ebx,DWORD PTR [rax+0x14]
  41f628:	or     r14d,0x1
  41f62c:	add    r14,rbx
  41f62f:	cmp    r14,QWORD PTR [r15+0x90]
  41f636:	jbe    41f656 <flatcc_builder_reserve_table@@Base+0x96>
  41f638:	lea    rsi,[r15+0x88]
  41f63f:	mov    rdi,QWORD PTR [r15+0x40]
  41f643:	mov    rdx,r14
  41f646:	xor    ecx,ecx
  41f648:	mov    r8d,0x3
  41f64e:	call   QWORD PTR [r15+0x50]
  41f652:	test   eax,eax
  41f654:	jne    41f693 <flatcc_builder_reserve_table@@Base+0xd3>
  41f656:	xor    eax,eax
  41f658:	add    rbx,QWORD PTR [r15+0x88]
  41f65f:	mov    QWORD PTR [r15],rbx
  41f662:	sete   al
  41f665:	neg    eax
  41f667:	jmp    41f66e <flatcc_builder_reserve_table@@Base+0xae>
  41f669:	mov    eax,0xffffffff
  41f66e:	pop    rbx
  41f66f:	pop    r14
  41f671:	pop    r15
  41f673:	ret    
  41f674:	lea    rdi,[rip+0x19a44]        # 4390bf <flatcc_builder_padding_base@@Base+0xa0f>
  41f67b:	lea    rsi,[rip+0x192c0]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f682:	lea    rcx,[rip+0x199f5]        # 43907e <flatcc_builder_padding_base@@Base+0x9ce>
  41f689:	mov    edx,0x429
  41f68e:	call   406070 <__assert_fail@plt>
  41f693:	lea    rdi,[rip+0x1a468]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41f69a:	lea    rsi,[rip+0x192a1]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f6a1:	lea    rcx,[rip+0x1a294]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41f6a8:	mov    edx,0x134
  41f6ad:	call   406070 <__assert_fail@plt>
  41f6b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6bc:	nop    DWORD PTR [rax+0x0]

000000000041f6c0 <flatcc_builder_start_table@@Base>:
  41f6c0:	push   rbp
  41f6c1:	push   r15
  41f6c3:	push   r14
  41f6c5:	push   rbx
  41f6c6:	push   rax
  41f6c7:	mov    r15d,esi
  41f6ca:	mov    rbx,rdi
  41f6cd:	mov    esi,0x4
  41f6d2:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  41f6d7:	mov    r14d,0xffffffff
  41f6dd:	test   eax,eax
  41f6df:	je     41f6ef <flatcc_builder_start_table@@Base+0x2f>
  41f6e1:	mov    eax,r14d
  41f6e4:	add    rsp,0x8
  41f6e8:	pop    rbx
  41f6e9:	pop    r14
  41f6eb:	pop    r15
  41f6ed:	pop    rbp
  41f6ee:	ret    
  41f6ef:	mov    eax,DWORD PTR [rbx+0x8]
  41f6f2:	sub    eax,DWORD PTR [rbx+0x58]
  41f6f5:	mov    rcx,QWORD PTR [rbx+0x30]
  41f6f9:	mov    DWORD PTR [rcx+0x10],eax
  41f6fc:	mov    eax,DWORD PTR [rbx]
  41f6fe:	sub    eax,DWORD PTR [rbx+0x88]
  41f704:	mov    rcx,QWORD PTR [rbx+0x30]
  41f708:	mov    DWORD PTR [rcx+0x14],eax
  41f70b:	mov    eax,DWORD PTR [rbx+0x14]
  41f70e:	mov    rcx,QWORD PTR [rbx+0x30]
  41f712:	mov    DWORD PTR [rcx+0x18],eax
  41f715:	movzx  eax,WORD PTR [rbx+0x10]
  41f719:	mov    rcx,QWORD PTR [rbx+0x30]
  41f71d:	mov    WORD PTR [rcx+0x1c],ax
  41f721:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  41f728:	mov    WORD PTR [rbx+0x10],0x0
  41f72e:	mov    rax,QWORD PTR [rbx+0x30]
  41f732:	mov    WORD PTR [rax+0xe],0x3
  41f738:	movzx  ebp,WORD PTR [rax+0x1c]
  41f73c:	add    ebp,ebp
  41f73e:	add    ebp,DWORD PTR [rax+0x10]
  41f741:	lea    edx,[r15+r15*1]
  41f745:	add    edx,0x4
  41f748:	add    rdx,rbp
  41f74b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41f74f:	jbe    41f76c <flatcc_builder_start_table@@Base+0xac>
  41f751:	lea    rsi,[rbx+0x58]
  41f755:	mov    rdi,QWORD PTR [rbx+0x40]
  41f759:	mov    ecx,0x1
  41f75e:	xor    r8d,r8d
  41f761:	call   QWORD PTR [rbx+0x50]
  41f764:	test   eax,eax
  41f766:	jne    41f800 <flatcc_builder_start_table@@Base+0x140>
  41f76c:	add    rbp,QWORD PTR [rbx+0x58]
  41f770:	mov    QWORD PTR [rbx+0x8],rbp
  41f774:	je     41f6e1 <flatcc_builder_start_table@@Base+0x21>
  41f77a:	add    r15d,r15d
  41f77d:	add    rbp,0x4
  41f781:	mov    QWORD PTR [rbx+0x8],rbp
  41f785:	mov    rax,QWORD PTR [rbx+0x30]
  41f789:	mov    ebp,DWORD PTR [rax+0x14]
  41f78c:	or     r15d,0x1
  41f790:	add    r15,rbp
  41f793:	cmp    r15,QWORD PTR [rbx+0x90]
  41f79a:	jbe    41f7b9 <flatcc_builder_start_table@@Base+0xf9>
  41f79c:	lea    rsi,[rbx+0x88]
  41f7a3:	mov    rdi,QWORD PTR [rbx+0x40]
  41f7a7:	mov    rdx,r15
  41f7aa:	xor    ecx,ecx
  41f7ac:	mov    r8d,0x3
  41f7b2:	call   QWORD PTR [rbx+0x50]
  41f7b5:	test   eax,eax
  41f7b7:	jne    41f800 <flatcc_builder_start_table@@Base+0x140>
  41f7b9:	add    rbp,QWORD PTR [rbx+0x88]
  41f7c0:	mov    QWORD PTR [rbx],rbp
  41f7c3:	je     41f6e1 <flatcc_builder_start_table@@Base+0x21>
  41f7c9:	mov    eax,DWORD PTR [rbx+0x28]
  41f7cc:	mov    rcx,rax
  41f7cf:	add    rcx,QWORD PTR [rbx+0x68]
  41f7d3:	mov    QWORD PTR [rbx+0x18],rcx
  41f7d7:	mov    ecx,DWORD PTR [rbx+0x70]
  41f7da:	sub    ecx,eax
  41f7dc:	cmp    ecx,0xfffc
  41f7e2:	mov    eax,0xfffc
  41f7e7:	cmovb  eax,ecx
  41f7ea:	mov    DWORD PTR [rbx+0x24],eax
  41f7ed:	mov    rax,QWORD PTR [rbx+0x30]
  41f7f1:	mov    DWORD PTR [rax+0x4],0xfffc
  41f7f8:	xor    r14d,r14d
  41f7fb:	jmp    41f6e1 <flatcc_builder_start_table@@Base+0x21>
  41f800:	lea    rdi,[rip+0x1a2fb]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41f807:	lea    rsi,[rip+0x19134]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f80e:	lea    rcx,[rip+0x1a127]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41f815:	mov    edx,0x134
  41f81a:	call   406070 <__assert_fail@plt>
  41f81f:	nop

000000000041f820 <flatcc_builder_create_vtable@@Base>:
  41f820:	push   r14
  41f822:	push   rbx
  41f823:	sub    rsp,0x98
  41f82a:	mov    r14,rdi
  41f82d:	mov    QWORD PTR [rsp+0x8],0x0
  41f836:	mov    DWORD PTR [rsp+0x10],0x0
  41f83e:	test   dx,dx
  41f841:	je     41f8a8 <flatcc_builder_create_vtable@@Base+0x88>
  41f843:	movzx  r8d,dx
  41f847:	mov    QWORD PTR [rsp+0x8],r8
  41f84c:	mov    QWORD PTR [rsp+0x18],rsi
  41f851:	mov    QWORD PTR [rsp+0x20],r8
  41f856:	mov    DWORD PTR [rsp+0x10],0x1
  41f85e:	mov    edx,0x1
  41f863:	cmp    DWORD PTR [r14+0x100],0x0
  41f86b:	jne    41f8b7 <flatcc_builder_create_vtable@@Base+0x97>
  41f86d:	cmp    DWORD PTR [r14+0x124],0x0
  41f875:	jne    41f8b7 <flatcc_builder_create_vtable@@Base+0x97>
  41f877:	mov    ebx,DWORD PTR [r14+0xf4]
  41f87e:	lea    eax,[r8+rbx*1]
  41f882:	mov    DWORD PTR [r14+0xf4],eax
  41f889:	mov    rdi,QWORD PTR [r14+0x38]
  41f88d:	lea    rsi,[rsp+0x18]
  41f892:	mov    ecx,ebx
  41f894:	call   QWORD PTR [r14+0x48]
  41f898:	test   eax,eax
  41f89a:	jne    41f94b <flatcc_builder_create_vtable@@Base+0x12b>
  41f8a0:	xor    eax,eax
  41f8a2:	inc    ebx
  41f8a4:	jne    41f8fc <flatcc_builder_create_vtable@@Base+0xdc>
  41f8a6:	jmp    41f902 <flatcc_builder_create_vtable@@Base+0xe2>
  41f8a8:	xor    edx,edx
  41f8aa:	xor    r8d,r8d
  41f8ad:	cmp    DWORD PTR [r14+0x100],0x0
  41f8b5:	je     41f86d <flatcc_builder_create_vtable@@Base+0x4d>
  41f8b7:	cmp    r8,0x11
  41f8bb:	setb   al
  41f8be:	lea    rcx,[r8-0x10]
  41f8c2:	shr    rcx,0x20
  41f8c6:	sete   cl
  41f8c9:	test   r8d,r8d
  41f8cc:	je     41f90d <flatcc_builder_create_vtable@@Base+0xed>
  41f8ce:	or     al,cl
  41f8d0:	je     41f90d <flatcc_builder_create_vtable@@Base+0xed>
  41f8d2:	mov    ebx,DWORD PTR [r14+0xf0]
  41f8d9:	sub    ebx,r8d
  41f8dc:	mov    rdi,QWORD PTR [r14+0x38]
  41f8e0:	lea    rsi,[rsp+0x18]
  41f8e5:	mov    ecx,ebx
  41f8e7:	call   QWORD PTR [r14+0x48]
  41f8eb:	test   eax,eax
  41f8ed:	jne    41f92c <flatcc_builder_create_vtable@@Base+0x10c>
  41f8ef:	mov    DWORD PTR [r14+0xf0],ebx
  41f8f6:	test   ebx,ebx
  41f8f8:	je     41f900 <flatcc_builder_create_vtable@@Base+0xe0>
  41f8fa:	inc    ebx
  41f8fc:	mov    eax,ebx
  41f8fe:	jmp    41f902 <flatcc_builder_create_vtable@@Base+0xe2>
  41f900:	xor    eax,eax
  41f902:	add    rsp,0x98
  41f909:	pop    rbx
  41f90a:	pop    r14
  41f90c:	ret    
  41f90d:	lea    rdi,[rip+0x1a1ee]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41f914:	lea    rsi,[rip+0x19027]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f91b:	lea    rcx,[rip+0x1a09f]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41f922:	mov    edx,0x287
  41f927:	call   406070 <__assert_fail@plt>
  41f92c:	lea    rdi,[rip+0x1a1cf]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41f933:	lea    rsi,[rip+0x19008]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f93a:	lea    rcx,[rip+0x1a080]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41f941:	mov    edx,0x28b
  41f946:	call   406070 <__assert_fail@plt>
  41f94b:	lea    rdi,[rip+0x1a1b0]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41f952:	lea    rsi,[rip+0x18fe9]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41f959:	lea    rcx,[rip+0x1a11d]        # 439a7d <flatcc_builder_padding_base@@Base+0x13cd>
  41f960:	mov    edx,0x2a5
  41f965:	call   406070 <__assert_fail@plt>
  41f96a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f970 <flatcc_builder_create_cached_vtable@@Base>:
  41f970:	push   rbp
  41f971:	push   r15
  41f973:	push   r14
  41f975:	push   r13
  41f977:	push   r12
  41f979:	push   rbx
  41f97a:	sub    rsp,0x28
  41f97e:	mov    r15d,ecx
  41f981:	mov    r12d,edx
  41f984:	mov    QWORD PTR [rsp+0x18],rsi
  41f989:	mov    r14,rdi
  41f98c:	mov    rax,QWORD PTR [rdi+0xd8]
  41f993:	test   rax,rax
  41f996:	je     41fa66 <flatcc_builder_create_cached_vtable@@Base+0xf6>
  41f99c:	neg    al
  41f99e:	shrx   r13d,r15d,eax
  41f9a3:	shl    r13,0x2
  41f9a7:	add    r13,QWORD PTR [r14+0xa8]
  41f9ae:	je     41fb3a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  41f9b4:	mov    ebx,DWORD PTR [r13+0x0]
  41f9b8:	movzx  eax,r12w
  41f9bc:	mov    QWORD PTR [rsp],rax
  41f9c0:	test   ebx,ebx
  41f9c2:	je     41fb41 <flatcc_builder_create_cached_vtable@@Base+0x1d1>
  41f9c8:	mov    rbp,QWORD PTR [r14+0x78]
  41f9cc:	mov    QWORD PTR [rsp+0x10],r14
  41f9d1:	mov    r15,QWORD PTR [r14+0xb8]
  41f9d8:	xor    eax,eax
  41f9da:	mov    QWORD PTR [rsp+0x20],rax
  41f9df:	mov    QWORD PTR [rsp+0x8],r13
  41f9e4:	jmp    41fa03 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41f9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9f0:	mov    ebx,DWORD PTR [r14+0xc]
  41f9f4:	add    r14,0xc
  41f9f8:	mov    r13,r14
  41f9fb:	test   ebx,ebx
  41f9fd:	je     41fb29 <flatcc_builder_create_cached_vtable@@Base+0x1b9>
  41fa03:	mov    eax,ebx
  41fa05:	lea    r14,[r15+rax*1]
  41fa09:	mov    esi,DWORD PTR [r15+rax*1+0x8]
  41fa0e:	cmp    WORD PTR [rbp+rsi*1+0x0],r12w
  41fa14:	jne    41f9f0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41fa16:	add    rsi,rbp
  41fa19:	mov    rdi,QWORD PTR [rsp+0x18]
  41fa1e:	mov    rdx,QWORD PTR [rsp]
  41fa22:	call   4060f0 <bcmp@plt>
  41fa27:	test   eax,eax
  41fa29:	jne    41f9f0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41fa2b:	mov    eax,DWORD PTR [r14+0x4]
  41fa2f:	mov    rcx,QWORD PTR [rsp+0x10]
  41fa34:	cmp    eax,DWORD PTR [rcx+0x100]
  41fa3a:	je     41fcaa <flatcc_builder_create_cached_vtable@@Base+0x33a>
  41fa40:	lea    r13,[r14+0xc]
  41fa44:	mov    ebx,DWORD PTR [r14+0xc]
  41fa48:	mov    rax,r14
  41fa4b:	mov    QWORD PTR [rsp+0x20],r14
  41fa50:	test   ebx,ebx
  41fa52:	jne    41fa03 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41fa54:	mov    r15,r14
  41fa57:	mov    r14,QWORD PTR [rsp+0x10]
  41fa5c:	mov    r13,QWORD PTR [rsp+0x8]
  41fa61:	jmp    41fb44 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41fa66:	cmp    DWORD PTR [r14+0xe4],0x0
  41fa6e:	jne    41fce8 <flatcc_builder_create_cached_vtable@@Base+0x378>
  41fa74:	lea    r13,[r14+0xb8]
  41fa7b:	cmp    QWORD PTR [r14+0xc0],0xf
  41fa83:	ja     41faa5 <flatcc_builder_create_cached_vtable@@Base+0x135>
  41fa85:	mov    rdi,QWORD PTR [r14+0x40]
  41fa89:	mov    edx,0x10
  41fa8e:	mov    rsi,r13
  41fa91:	xor    ecx,ecx
  41fa93:	mov    r8d,0x6
  41fa99:	call   QWORD PTR [r14+0x50]
  41fa9d:	test   eax,eax
  41fa9f:	jne    41fcc9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41faa5:	xor    ebx,ebx
  41faa7:	cmp    QWORD PTR [r13+0x0],0x0
  41faac:	je     41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fab2:	lea    rsi,[r14+0xa8]
  41fab9:	mov    DWORD PTR [r14+0xe4],0x10
  41fac4:	mov    rdi,QWORD PTR [r14+0x40]
  41fac8:	mov    ebp,0x100
  41facd:	mov    edx,0x100
  41fad2:	mov    ecx,0x1
  41fad7:	mov    r8d,0x5
  41fadd:	call   QWORD PTR [r14+0x50]
  41fae1:	test   eax,eax
  41fae3:	jne    41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fae9:	mov    rax,QWORD PTR [r14+0xb0]
  41faf0:	mov    rcx,rbp
  41faf3:	add    rbp,rbp
  41faf6:	cmp    rbp,rax
  41faf9:	jbe    41faf0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  41fafb:	shr    rcx,0x2
  41faff:	mov    rax,0xffffffffffffffff
  41fb06:	mov    edx,0x1
  41fb0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb10:	inc    rax
  41fb13:	shlx   rsi,rdx,rax
  41fb18:	cmp    rsi,rcx
  41fb1b:	jb     41fb10 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41fb1d:	mov    QWORD PTR [r14+0xd8],rax
  41fb24:	jmp    41f99c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  41fb29:	mov    r14,QWORD PTR [rsp+0x10]
  41fb2e:	mov    r13,QWORD PTR [rsp+0x8]
  41fb33:	mov    r15,QWORD PTR [rsp+0x20]
  41fb38:	jmp    41fb44 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41fb3a:	xor    ebx,ebx
  41fb3c:	jmp    41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fb41:	xor    r15d,r15d
  41fb44:	mov    r12d,DWORD PTR [r14+0xe4]
  41fb4b:	lea    rbp,[r14+0xb8]
  41fb52:	lea    rdx,[r12+0x10]
  41fb57:	cmp    rdx,QWORD PTR [r14+0xc0]
  41fb5e:	jbe    41fb7b <flatcc_builder_create_cached_vtable@@Base+0x20b>
  41fb60:	mov    rdi,QWORD PTR [r14+0x40]
  41fb64:	mov    rsi,rbp
  41fb67:	xor    ecx,ecx
  41fb69:	mov    r8d,0x6
  41fb6f:	call   QWORD PTR [r14+0x50]
  41fb73:	test   eax,eax
  41fb75:	jne    41fcc9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41fb7b:	xor    ebx,ebx
  41fb7d:	add    r12,QWORD PTR [rbp+0x0]
  41fb81:	je     41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fb87:	mov    eax,DWORD PTR [r14+0xe4]
  41fb8e:	mov    ecx,DWORD PTR [r14+0x100]
  41fb95:	lea    edx,[rax+0x10]
  41fb98:	mov    DWORD PTR [r14+0xe4],edx
  41fb9f:	mov    DWORD PTR [r12+0x4],ecx
  41fba4:	mov    ecx,DWORD PTR [r13+0x0]
  41fba8:	mov    DWORD PTR [r12+0xc],ecx
  41fbad:	mov    DWORD PTR [r13+0x0],eax
  41fbb1:	mov    rdi,r14
  41fbb4:	mov    rsi,QWORD PTR [rsp+0x18]
  41fbb9:	mov    rdx,QWORD PTR [rsp]
  41fbbd:	call   41f820 <flatcc_builder_create_vtable@@Base>
  41fbc2:	mov    DWORD PTR [r12],eax
  41fbc6:	test   eax,eax
  41fbc8:	je     41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fbce:	test   r15,r15
  41fbd1:	je     41fbe1 <flatcc_builder_create_cached_vtable@@Base+0x271>
  41fbd3:	mov    eax,DWORD PTR [r15+0x8]
  41fbd7:	mov    DWORD PTR [r12+0x8],eax
  41fbdc:	jmp    41fc8e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41fbe1:	mov    rax,QWORD PTR [r14+0x118]
  41fbe8:	mov    ebp,DWORD PTR [r14+0xe0]
  41fbef:	test   rax,rax
  41fbf2:	je     41fc35 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41fbf4:	mov    rcx,QWORD PTR [rsp]
  41fbf8:	add    ecx,ebp
  41fbfa:	cmp    rax,rcx
  41fbfd:	jae    41fc35 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41fbff:	cmp    QWORD PTR [r14+0xd8],0x0
  41fc07:	je     41fc8e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41fc0d:	mov    rdi,QWORD PTR [r14+0xa8]
  41fc14:	mov    rdx,QWORD PTR [r14+0xb0]
  41fc1b:	xor    esi,esi
  41fc1d:	call   406080 <memset@plt>
  41fc22:	movabs rax,0x1000000000
  41fc2c:	mov    QWORD PTR [r14+0xe0],rax
  41fc33:	jmp    41fc8e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41fc35:	lea    rbx,[r14+0x78]
  41fc39:	mov    rax,QWORD PTR [rsp]
  41fc3d:	lea    rdx,[rax+rbp*1]
  41fc41:	cmp    rdx,QWORD PTR [r14+0x80]
  41fc48:	jbe    41fc61 <flatcc_builder_create_cached_vtable@@Base+0x2f1>
  41fc4a:	mov    rdi,QWORD PTR [r14+0x40]
  41fc4e:	mov    rsi,rbx
  41fc51:	xor    ecx,ecx
  41fc53:	mov    r8d,0x2
  41fc59:	call   QWORD PTR [r14+0x50]
  41fc5d:	test   eax,eax
  41fc5f:	jne    41fcc9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41fc61:	add    rbp,QWORD PTR [rbx]
  41fc64:	je     41fca3 <flatcc_builder_create_cached_vtable@@Base+0x333>
  41fc66:	mov    eax,DWORD PTR [r14+0xe0]
  41fc6d:	mov    DWORD PTR [r12+0x8],eax
  41fc72:	mov    rdx,QWORD PTR [rsp]
  41fc76:	mov    ecx,edx
  41fc78:	add    ecx,eax
  41fc7a:	mov    DWORD PTR [r14+0xe0],ecx
  41fc81:	mov    rdi,rbp
  41fc84:	mov    rsi,QWORD PTR [rsp+0x18]
  41fc89:	call   4060d0 <memcpy@plt>
  41fc8e:	mov    ebx,DWORD PTR [r12]
  41fc92:	mov    eax,ebx
  41fc94:	add    rsp,0x28
  41fc98:	pop    rbx
  41fc99:	pop    r12
  41fc9b:	pop    r13
  41fc9d:	pop    r14
  41fc9f:	pop    r15
  41fca1:	pop    rbp
  41fca2:	ret    
  41fca3:	mov    ebx,0xffffffff
  41fca8:	jmp    41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fcaa:	mov    rcx,QWORD PTR [rsp+0x8]
  41fcaf:	cmp    r13,rcx
  41fcb2:	je     41fcc4 <flatcc_builder_create_cached_vtable@@Base+0x354>
  41fcb4:	mov    eax,DWORD PTR [r14+0xc]
  41fcb8:	mov    DWORD PTR [r13+0x0],eax
  41fcbc:	mov    eax,DWORD PTR [rcx]
  41fcbe:	mov    DWORD PTR [r14+0xc],eax
  41fcc2:	mov    DWORD PTR [rcx],ebx
  41fcc4:	mov    ebx,DWORD PTR [r14]
  41fcc7:	jmp    41fc92 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41fcc9:	lea    rdi,[rip+0x19e32]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41fcd0:	lea    rsi,[rip+0x18c6b]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41fcd7:	lea    rcx,[rip+0x19c5e]        # 43993c <flatcc_builder_padding_base@@Base+0x128c>
  41fcde:	mov    edx,0x134
  41fce3:	call   406070 <__assert_fail@plt>
  41fce8:	lea    rdi,[rip+0x19dd7]        # 439ac6 <flatcc_builder_padding_base@@Base+0x1416>
  41fcef:	lea    rsi,[rip+0x18c4c]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41fcf6:	lea    rcx,[rip+0x19dd8]        # 439ad5 <flatcc_builder_padding_base@@Base+0x1425>
  41fcfd:	mov    edx,0x156
  41fd02:	call   406070 <__assert_fail@plt>
  41fd07:	nop    WORD PTR [rax+rax*1+0x0]

000000000041fd10 <flatcc_builder_create_table@@Base>:
  41fd10:	push   rbp
  41fd11:	push   r14
  41fd13:	push   rbx
  41fd14:	sub    rsp,0xa0
  41fd1b:	test   r9d,r9d
  41fd1e:	js     41ff33 <flatcc_builder_create_table@@Base+0x223>
  41fd24:	mov    r14,rdi
  41fd27:	mov    edi,DWORD PTR [rsp+0xc0]
  41fd2e:	test   dil,0x1
  41fd32:	je     41ff52 <flatcc_builder_create_table@@Base+0x242>
  41fd38:	cmp    cx,0x4
  41fd3c:	mov    eax,0x4
  41fd41:	cmova  eax,ecx
  41fd44:	cmp    WORD PTR [r14+0xe8],ax
  41fd4c:	jae    41fd56 <flatcc_builder_create_table@@Base+0x46>
  41fd4e:	mov    WORD PTR [r14+0xe8],ax
  41fd56:	mov    ebp,DWORD PTR [r14+0xf0]
  41fd5d:	sub    ebp,edx
  41fd5f:	movzx  r10d,ax
  41fd63:	dec    r10d
  41fd66:	and    r10d,ebp
  41fd69:	add    edi,r10d
  41fd6c:	neg    edi
  41fd6e:	lea    ecx,[rdi+rbp*1]
  41fd71:	add    ecx,0xfffffffd
  41fd74:	mov    DWORD PTR [rsp+0xc],ecx
  41fd78:	test   r9d,r9d
  41fd7b:	jle    41fe36 <flatcc_builder_create_table@@Base+0x126>
  41fd81:	add    ebp,0xfffffffc
  41fd84:	sub    ebp,r10d
  41fd87:	mov    ecx,0xfffffffc
  41fd8c:	sub    ecx,ebp
  41fd8e:	mov    edi,r9d
  41fd91:	lea    rbx,[rdi-0x1]
  41fd95:	mov    r9d,edi
  41fd98:	and    r9d,0x3
  41fd9c:	cmp    rbx,0x3
  41fda0:	jae    41fdae <flatcc_builder_create_table@@Base+0x9e>
  41fda2:	xor    ebx,ebx
  41fda4:	test   r9,r9
  41fda7:	jne    41fe0d <flatcc_builder_create_table@@Base+0xfd>
  41fda9:	jmp    41fe36 <flatcc_builder_create_table@@Base+0x126>
  41fdae:	sub    rdi,r9
  41fdb1:	xor    ebx,ebx
  41fdb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdbd:	nop    DWORD PTR [rax]
  41fdc0:	movzx  eax,WORD PTR [r8+rbx*2]
  41fdc5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41fdc8:	add    ebp,ecx
  41fdca:	sub    ebp,eax
  41fdcc:	mov    DWORD PTR [rax+rsi*1],ebp
  41fdcf:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  41fdd5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41fdd8:	add    ebp,ecx
  41fdda:	sub    ebp,eax
  41fddc:	mov    DWORD PTR [rax+rsi*1],ebp
  41fddf:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  41fde5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41fde8:	add    ebp,ecx
  41fdea:	sub    ebp,eax
  41fdec:	mov    DWORD PTR [rax+rsi*1],ebp
  41fdef:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  41fdf5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41fdf8:	add    ebp,ecx
  41fdfa:	sub    ebp,eax
  41fdfc:	mov    DWORD PTR [rax+rsi*1],ebp
  41fdff:	add    rbx,0x4
  41fe03:	cmp    rdi,rbx
  41fe06:	jne    41fdc0 <flatcc_builder_create_table@@Base+0xb0>
  41fe08:	test   r9,r9
  41fe0b:	je     41fe36 <flatcc_builder_create_table@@Base+0x126>
  41fe0d:	lea    rdi,[r8+rbx*2]
  41fe11:	xor    ebx,ebx
  41fe13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe1d:	nop    DWORD PTR [rax]
  41fe20:	movzx  eax,WORD PTR [rdi+rbx*2]
  41fe24:	mov    ebp,DWORD PTR [rax+rsi*1]
  41fe27:	add    ebp,ecx
  41fe29:	sub    ebp,eax
  41fe2b:	mov    DWORD PTR [rax+rsi*1],ebp
  41fe2e:	inc    rbx
  41fe31:	cmp    r9,rbx
  41fe34:	jne    41fe20 <flatcc_builder_create_table@@Base+0x110>
  41fe36:	mov    QWORD PTR [rsp+0x10],0x4
  41fe3f:	lea    rax,[rsp+0xc]
  41fe44:	mov    QWORD PTR [rsp+0x20],rax
  41fe49:	mov    QWORD PTR [rsp+0x28],0x4
  41fe52:	mov    DWORD PTR [rsp+0x18],0x1
  41fe5a:	test   rdx,rdx
  41fe5d:	je     41fefe <flatcc_builder_create_table@@Base+0x1ee>
  41fe63:	lea    r8,[rdx+0x4]
  41fe67:	mov    QWORD PTR [rsp+0x10],r8
  41fe6c:	mov    QWORD PTR [rsp+0x30],rsi
  41fe71:	mov    QWORD PTR [rsp+0x38],rdx
  41fe76:	mov    DWORD PTR [rsp+0x18],0x2
  41fe7e:	mov    edx,0x2
  41fe83:	test   r10d,r10d
  41fe86:	je     41fead <flatcc_builder_create_table@@Base+0x19d>
  41fe88:	add    r8,r10
  41fe8b:	mov    QWORD PTR [rsp+0x10],r8
  41fe90:	mov    eax,edx
  41fe92:	shl    rax,0x4
  41fe96:	lea    rcx,[rip+0x18813]        # 4386b0 <flatcc_builder_padding_base@@Base>
  41fe9d:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  41fea2:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  41fea7:	inc    edx
  41fea9:	mov    DWORD PTR [rsp+0x18],edx
  41fead:	cmp    r8,0x11
  41feb1:	setb   al
  41feb4:	lea    rcx,[r8-0x10]
  41feb8:	shr    rcx,0x20
  41febc:	sete   cl
  41febf:	test   r8d,r8d
  41fec2:	jle    41ff14 <flatcc_builder_create_table@@Base+0x204>
  41fec4:	or     al,cl
  41fec6:	je     41ff14 <flatcc_builder_create_table@@Base+0x204>
  41fec8:	mov    ebp,DWORD PTR [r14+0xf0]
  41fecf:	sub    ebp,r8d
  41fed2:	mov    rdi,QWORD PTR [r14+0x38]
  41fed6:	lea    rsi,[rsp+0x20]
  41fedb:	mov    ecx,ebp
  41fedd:	call   QWORD PTR [r14+0x48]
  41fee1:	test   eax,eax
  41fee3:	jne    41ff71 <flatcc_builder_create_table@@Base+0x261>
  41fee9:	mov    DWORD PTR [r14+0xf0],ebp
  41fef0:	mov    eax,ebp
  41fef2:	add    rsp,0xa0
  41fef9:	pop    rbx
  41fefa:	pop    r14
  41fefc:	pop    rbp
  41fefd:	ret    
  41fefe:	mov    r8d,0x4
  41ff04:	mov    edx,0x1
  41ff09:	test   r10d,r10d
  41ff0c:	jne    41fe88 <flatcc_builder_create_table@@Base+0x178>
  41ff12:	jmp    41fead <flatcc_builder_create_table@@Base+0x19d>
  41ff14:	lea    rdi,[rip+0x19be7]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41ff1b:	lea    rsi,[rip+0x18a20]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ff22:	lea    rcx,[rip+0x19a98]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41ff29:	mov    edx,0x287
  41ff2e:	call   406070 <__assert_fail@plt>
  41ff33:	lea    rdi,[rip+0x1917e]        # 4390b8 <flatcc_builder_padding_base@@Base+0xa08>
  41ff3a:	lea    rsi,[rip+0x18a01]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ff41:	lea    rcx,[rip+0x19182]        # 4390ca <flatcc_builder_padding_base@@Base+0xa1a>
  41ff48:	mov    edx,0x4d5
  41ff4d:	call   406070 <__assert_fail@plt>
  41ff52:	lea    rdi,[rip+0x1920d]        # 439166 <flatcc_builder_padding_base@@Base+0xab6>
  41ff59:	lea    rsi,[rip+0x189e2]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ff60:	lea    rcx,[rip+0x19163]        # 4390ca <flatcc_builder_padding_base@@Base+0xa1a>
  41ff67:	mov    edx,0x4db
  41ff6c:	call   406070 <__assert_fail@plt>
  41ff71:	lea    rdi,[rip+0x19b8a]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  41ff78:	lea    rsi,[rip+0x189c3]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ff7f:	lea    rcx,[rip+0x19a3b]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  41ff86:	mov    edx,0x28b
  41ff8b:	call   406070 <__assert_fail@plt>

000000000041ff90 <flatcc_builder_check_required_field@@Base>:
  41ff90:	push   rax
  41ff91:	mov    rax,QWORD PTR [rdi+0x30]
  41ff95:	cmp    WORD PTR [rax+0xe],0x3
  41ff9a:	jne    41ffb7 <flatcc_builder_check_required_field@@Base+0x27>
  41ff9c:	xor    eax,eax
  41ff9e:	cmp    WORD PTR [rdi+0x10],si
  41ffa2:	jbe    41ffb5 <flatcc_builder_check_required_field@@Base+0x25>
  41ffa4:	mov    rcx,QWORD PTR [rdi+0x8]
  41ffa8:	movzx  edx,si
  41ffab:	xor    eax,eax
  41ffad:	cmp    WORD PTR [rcx+rdx*2],0x0
  41ffb2:	setne  al
  41ffb5:	pop    rcx
  41ffb6:	ret    
  41ffb7:	lea    rdi,[rip+0x191b3]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  41ffbe:	lea    rsi,[rip+0x1897d]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  41ffc5:	lea    rcx,[rip+0x191d0]        # 43919c <flatcc_builder_padding_base@@Base+0xaec>
  41ffcc:	mov    edx,0x4f8
  41ffd1:	call   406070 <__assert_fail@plt>
  41ffd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041ffe0 <flatcc_builder_check_union_field@@Base>:
  41ffe0:	push   rax
  41ffe1:	mov    rax,QWORD PTR [rdi+0x30]
  41ffe5:	cmp    WORD PTR [rax+0xe],0x3
  41ffea:	jne    420034 <flatcc_builder_check_union_field@@Base+0x54>
  41ffec:	test   si,si
  41ffef:	je     42001e <flatcc_builder_check_union_field@@Base+0x3e>
  41fff1:	cmp    WORD PTR [rdi+0x10],si
  41fff5:	jbe    42001e <flatcc_builder_check_union_field@@Base+0x3e>
  41fff7:	movzx  eax,si
  41fffa:	mov    rcx,QWORD PTR [rdi+0x8]
  41fffe:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  420003:	test   rdx,rdx
  420006:	je     420022 <flatcc_builder_check_union_field@@Base+0x42>
  420008:	mov    rsi,QWORD PTR [rdi+0x18]
  42000c:	cmp    BYTE PTR [rsi+rdx*1],0x0
  420010:	movzx  eax,WORD PTR [rcx+rax*2]
  420014:	je     420029 <flatcc_builder_check_union_field@@Base+0x49>
  420016:	test   ax,ax
  420019:	setne  al
  42001c:	jmp    42002f <flatcc_builder_check_union_field@@Base+0x4f>
  42001e:	xor    eax,eax
  420020:	jmp    42002f <flatcc_builder_check_union_field@@Base+0x4f>
  420022:	cmp    WORD PTR [rcx+rax*2],0x0
  420027:	jmp    42002c <flatcc_builder_check_union_field@@Base+0x4c>
  420029:	test   ax,ax
  42002c:	sete   al
  42002f:	movzx  eax,al
  420032:	pop    rcx
  420033:	ret    
  420034:	lea    rdi,[rip+0x19136]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  42003b:	lea    rsi,[rip+0x18900]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420042:	lea    rcx,[rip+0x191a6]        # 4391ef <flatcc_builder_padding_base@@Base+0xb3f>
  420049:	mov    edx,0x4ff
  42004e:	call   406070 <__assert_fail@plt>
  420053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42005d:	nop    DWORD PTR [rax]

0000000000420060 <flatcc_builder_check_required@@Base>:
  420060:	push   rax
  420061:	mov    rax,QWORD PTR [rdi+0x30]
  420065:	cmp    WORD PTR [rax+0xe],0x3
  42006a:	jne    4200a9 <flatcc_builder_check_required@@Base+0x49>
  42006c:	movzx  ecx,WORD PTR [rdi+0x10]
  420070:	xor    eax,eax
  420072:	cmp    ecx,edx
  420074:	jl     4200a3 <flatcc_builder_check_required@@Base+0x43>
  420076:	mov    eax,0x1
  42007b:	test   edx,edx
  42007d:	jle    4200a3 <flatcc_builder_check_required@@Base+0x43>
  42007f:	mov    rcx,QWORD PTR [rdi+0x8]
  420083:	mov    r8d,edx
  420086:	xor    edi,edi
  420088:	nop    DWORD PTR [rax+rax*1+0x0]
  420090:	movzx  edx,WORD PTR [rsi+rdi*2]
  420094:	cmp    WORD PTR [rcx+rdx*2],0x0
  420099:	je     4200a5 <flatcc_builder_check_required@@Base+0x45>
  42009b:	inc    rdi
  42009e:	cmp    r8,rdi
  4200a1:	jne    420090 <flatcc_builder_check_required@@Base+0x30>
  4200a3:	pop    rcx
  4200a4:	ret    
  4200a5:	xor    eax,eax
  4200a7:	pop    rcx
  4200a8:	ret    
  4200a9:	lea    rdi,[rip+0x190c1]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  4200b0:	lea    rsi,[rip+0x1888b]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4200b7:	lea    rcx,[rip+0x19181]        # 43923f <flatcc_builder_padding_base@@Base+0xb8f>
  4200be:	mov    edx,0x511
  4200c3:	call   406070 <__assert_fail@plt>
  4200c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004200d0 <flatcc_builder_end_table@@Base>:
  4200d0:	push   rbp
  4200d1:	push   r15
  4200d3:	push   r14
  4200d5:	push   r12
  4200d7:	push   rbx
  4200d8:	sub    rsp,0x10
  4200dc:	mov    rax,QWORD PTR [rdi+0x30]
  4200e0:	cmp    WORD PTR [rax+0xe],0x3
  4200e5:	jne    420235 <flatcc_builder_end_table@@Base+0x165>
  4200eb:	mov    rbx,rdi
  4200ee:	mov    rax,QWORD PTR [rdi+0x8]
  4200f2:	mov    ecx,DWORD PTR [rdi+0x10]
  4200f5:	lea    ecx,[rcx+rcx*1]
  4200f8:	add    ecx,0x4
  4200fb:	mov    WORD PTR [rax-0x4],cx
  4200ff:	mov    edx,DWORD PTR [rdi+0x20]
  420102:	add    edx,0x4
  420105:	mov    WORD PTR [rax-0x2],dx
  420109:	lea    r12,[rax-0x4]
  42010d:	movzx  ebp,cx
  420110:	mov    eax,DWORD PTR [rdi+0x14]
  420113:	xor    eax,ebp
  420115:	imul   eax,eax,0x9e3779b1
  42011b:	movzx  ecx,dx
  42011e:	xor    ecx,eax
  420120:	imul   ecx,ecx,0x9e3779b1
  420126:	mov    DWORD PTR [rdi+0x14],ecx
  420129:	mov    rsi,r12
  42012c:	mov    edx,ebp
  42012e:	call   41f970 <flatcc_builder_create_cached_vtable@@Base>
  420133:	test   eax,eax
  420135:	je     420222 <flatcc_builder_end_table@@Base+0x152>
  42013b:	mov    r14d,eax
  42013e:	xor    r15d,r15d
  420141:	mov    rdi,r12
  420144:	xor    esi,esi
  420146:	mov    rdx,rbp
  420149:	call   406080 <memset@plt>
  42014e:	mov    rax,QWORD PTR [rbx+0x30]
  420152:	mov    r8d,DWORD PTR [rax+0x14]
  420156:	add    r8,QWORD PTR [rbx+0x88]
  42015d:	mov    r9,QWORD PTR [rbx]
  420160:	mov    rsi,QWORD PTR [rbx+0x18]
  420164:	sub    r9,r8
  420167:	shr    r9,1
  42016a:	mov    edx,DWORD PTR [rbx+0x20]
  42016d:	movzx  ecx,WORD PTR [rbx+0xea]
  420174:	mov    DWORD PTR [rsp],r14d
  420178:	mov    rdi,rbx
  42017b:	call   41fd10 <flatcc_builder_create_table@@Base>
  420180:	test   eax,eax
  420182:	je     420225 <flatcc_builder_end_table@@Base+0x155>
  420188:	mov    r14d,eax
  42018b:	mov    rax,QWORD PTR [rbx+0x30]
  42018f:	mov    ecx,DWORD PTR [rax+0x18]
  420192:	mov    DWORD PTR [rbx+0x14],ecx
  420195:	movzx  ecx,WORD PTR [rax+0x1c]
  420199:	mov    WORD PTR [rbx+0x10],cx
  42019d:	mov    ecx,DWORD PTR [rax+0x10]
  4201a0:	add    rcx,QWORD PTR [rbx+0x58]
  4201a4:	mov    QWORD PTR [rbx+0x8],rcx
  4201a8:	mov    eax,DWORD PTR [rax+0x14]
  4201ab:	add    rax,QWORD PTR [rbx+0x88]
  4201b2:	mov    QWORD PTR [rbx],rax
  4201b5:	mov    rdi,QWORD PTR [rbx+0x18]
  4201b9:	mov    edx,DWORD PTR [rbx+0x20]
  4201bc:	xor    esi,esi
  4201be:	call   406080 <memset@plt>
  4201c3:	mov    rax,QWORD PTR [rbx+0x30]
  4201c7:	mov    ecx,DWORD PTR [rax+0x8]
  4201ca:	mov    DWORD PTR [rbx+0x20],ecx
  4201cd:	mov    ecx,DWORD PTR [rax]
  4201cf:	mov    DWORD PTR [rbx+0x28],ecx
  4201d2:	mov    edx,DWORD PTR [rax+0x4]
  4201d5:	mov    rsi,rcx
  4201d8:	add    rsi,QWORD PTR [rbx+0x68]
  4201dc:	mov    QWORD PTR [rbx+0x18],rsi
  4201e0:	mov    esi,DWORD PTR [rbx+0x70]
  4201e3:	sub    esi,ecx
  4201e5:	cmp    esi,edx
  4201e7:	cmova  esi,edx
  4201ea:	mov    DWORD PTR [rbx+0x24],esi
  4201ed:	movzx  ecx,WORD PTR [rbx+0xea]
  4201f4:	cmp    WORD PTR [rbx+0xe8],cx
  4201fb:	jae    420204 <flatcc_builder_end_table@@Base+0x134>
  4201fd:	mov    WORD PTR [rbx+0xe8],cx
  420204:	movzx  ecx,WORD PTR [rax+0xc]
  420208:	mov    WORD PTR [rbx+0xea],cx
  42020f:	add    rax,0xffffffffffffffdc
  420213:	mov    QWORD PTR [rbx+0x30],rax
  420217:	dec    DWORD PTR [rbx+0x104]
  42021d:	mov    r15d,r14d
  420220:	jmp    420225 <flatcc_builder_end_table@@Base+0x155>
  420222:	xor    r15d,r15d
  420225:	mov    eax,r15d
  420228:	add    rsp,0x10
  42022c:	pop    rbx
  42022d:	pop    r12
  42022f:	pop    r14
  420231:	pop    r15
  420233:	pop    rbp
  420234:	ret    
  420235:	lea    rdi,[rip+0x18f35]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  42023c:	lea    rsi,[rip+0x186ff]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420243:	lea    rcx,[rip+0x1904f]        # 439299 <flatcc_builder_padding_base@@Base+0xbe9>
  42024a:	mov    edx,0x525
  42024f:	call   406070 <__assert_fail@plt>
  420254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42025e:	xchg   ax,ax

0000000000420260 <flatcc_builder_create_vector@@Base>:
  420260:	push   rbp
  420261:	push   rbx
  420262:	sub    rsp,0x98
  420269:	cmp    rdx,r9
  42026c:	ja     420396 <flatcc_builder_create_vector@@Base+0x136>
  420272:	mov    rbx,rdi
  420275:	cmp    r8w,0x4
  42027a:	mov    eax,0x4
  42027f:	cmova  eax,r8d
  420283:	cmp    WORD PTR [rdi+0xe8],ax
  42028a:	jae    420293 <flatcc_builder_create_vector@@Base+0x33>
  42028c:	mov    WORD PTR [rbx+0xe8],ax
  420293:	imul   ecx,edx
  420296:	mov    DWORD PTR [rsp+0x4],edx
  42029a:	mov    ebp,DWORD PTR [rbx+0xf0]
  4202a0:	mov    edx,ebp
  4202a2:	sub    edx,ecx
  4202a4:	movzx  eax,ax
  4202a7:	dec    eax
  4202a9:	and    eax,edx
  4202ab:	mov    QWORD PTR [rsp+0x8],0x4
  4202b4:	lea    rdx,[rsp+0x4]
  4202b9:	mov    QWORD PTR [rsp+0x18],rdx
  4202be:	mov    QWORD PTR [rsp+0x20],0x4
  4202c7:	mov    DWORD PTR [rsp+0x10],0x1
  4202cf:	test   ecx,ecx
  4202d1:	je     420366 <flatcc_builder_create_vector@@Base+0x106>
  4202d7:	mov    ecx,ecx
  4202d9:	lea    r8,[rcx+0x4]
  4202dd:	mov    QWORD PTR [rsp+0x8],r8
  4202e2:	mov    QWORD PTR [rsp+0x28],rsi
  4202e7:	mov    QWORD PTR [rsp+0x30],rcx
  4202ec:	mov    DWORD PTR [rsp+0x10],0x2
  4202f4:	mov    edx,0x2
  4202f9:	test   eax,eax
  4202fb:	je     420324 <flatcc_builder_create_vector@@Base+0xc4>
  4202fd:	mov    eax,eax
  4202ff:	add    r8,rax
  420302:	mov    QWORD PTR [rsp+0x8],r8
  420307:	mov    ecx,edx
  420309:	shl    rcx,0x4
  42030d:	lea    rsi,[rip+0x1839c]        # 4386b0 <flatcc_builder_padding_base@@Base>
  420314:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  420319:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  42031e:	inc    edx
  420320:	mov    DWORD PTR [rsp+0x10],edx
  420324:	cmp    r8,0x11
  420328:	setb   al
  42032b:	lea    rcx,[r8-0x10]
  42032f:	shr    rcx,0x20
  420333:	sete   cl
  420336:	test   r8d,r8d
  420339:	jle    420377 <flatcc_builder_create_vector@@Base+0x117>
  42033b:	or     al,cl
  42033d:	je     420377 <flatcc_builder_create_vector@@Base+0x117>
  42033f:	sub    ebp,r8d
  420342:	mov    rdi,QWORD PTR [rbx+0x38]
  420346:	lea    rsi,[rsp+0x18]
  42034b:	mov    ecx,ebp
  42034d:	call   QWORD PTR [rbx+0x48]
  420350:	test   eax,eax
  420352:	jne    4203b5 <flatcc_builder_create_vector@@Base+0x155>
  420354:	mov    DWORD PTR [rbx+0xf0],ebp
  42035a:	mov    eax,ebp
  42035c:	add    rsp,0x98
  420363:	pop    rbx
  420364:	pop    rbp
  420365:	ret    
  420366:	mov    r8d,0x4
  42036c:	mov    edx,0x1
  420371:	test   eax,eax
  420373:	jne    4202fd <flatcc_builder_create_vector@@Base+0x9d>
  420375:	jmp    420324 <flatcc_builder_create_vector@@Base+0xc4>
  420377:	lea    rdi,[rip+0x19784]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  42037e:	lea    rsi,[rip+0x185bd]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420385:	lea    rcx,[rip+0x19635]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  42038c:	mov    edx,0x287
  420391:	call   406070 <__assert_fail@plt>
  420396:	lea    rdi,[rip+0x18f3e]        # 4392db <flatcc_builder_padding_base@@Base+0xc2b>
  42039d:	lea    rsi,[rip+0x1859e]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4203a4:	lea    rcx,[rip+0x18f43]        # 4392ee <flatcc_builder_padding_base@@Base+0xc3e>
  4203ab:	mov    edx,0x555
  4203b0:	call   406070 <__assert_fail@plt>
  4203b5:	lea    rdi,[rip+0x19746]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4203bc:	lea    rsi,[rip+0x1857f]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4203c3:	lea    rcx,[rip+0x195f7]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  4203ca:	mov    edx,0x28b
  4203cf:	call   406070 <__assert_fail@plt>
  4203d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203de:	xchg   ax,ax

00000000004203e0 <flatcc_builder_end_vector@@Base>:
  4203e0:	push   rbp
  4203e1:	push   rbx
  4203e2:	push   rax
  4203e3:	mov    rax,QWORD PTR [rdi+0x30]
  4203e7:	cmp    WORD PTR [rax+0xe],0x4
  4203ec:	jne    420487 <flatcc_builder_end_vector@@Base+0xa7>
  4203f2:	mov    rbx,rdi
  4203f5:	mov    rsi,QWORD PTR [rdi+0x18]
  4203f9:	mov    ecx,DWORD PTR [rax+0x10]
  4203fc:	mov    edx,DWORD PTR [rax+0x14]
  4203ff:	movzx  r8d,WORD PTR [rdi+0xea]
  420407:	mov    r9d,DWORD PTR [rax+0x18]
  42040b:	call   420260 <flatcc_builder_create_vector@@Base>
  420410:	mov    ebp,eax
  420412:	test   eax,eax
  420414:	je     42047e <flatcc_builder_end_vector@@Base+0x9e>
  420416:	mov    rdi,QWORD PTR [rbx+0x18]
  42041a:	mov    edx,DWORD PTR [rbx+0x20]
  42041d:	xor    esi,esi
  42041f:	call   406080 <memset@plt>
  420424:	mov    rax,QWORD PTR [rbx+0x30]
  420428:	mov    ecx,DWORD PTR [rax+0x8]
  42042b:	mov    DWORD PTR [rbx+0x20],ecx
  42042e:	mov    ecx,DWORD PTR [rax]
  420430:	mov    DWORD PTR [rbx+0x28],ecx
  420433:	mov    edx,DWORD PTR [rax+0x4]
  420436:	mov    rsi,rcx
  420439:	add    rsi,QWORD PTR [rbx+0x68]
  42043d:	mov    QWORD PTR [rbx+0x18],rsi
  420441:	mov    esi,DWORD PTR [rbx+0x70]
  420444:	sub    esi,ecx
  420446:	cmp    esi,edx
  420448:	cmova  esi,edx
  42044b:	mov    DWORD PTR [rbx+0x24],esi
  42044e:	movzx  ecx,WORD PTR [rbx+0xea]
  420455:	cmp    WORD PTR [rbx+0xe8],cx
  42045c:	jae    420465 <flatcc_builder_end_vector@@Base+0x85>
  42045e:	mov    WORD PTR [rbx+0xe8],cx
  420465:	movzx  ecx,WORD PTR [rax+0xc]
  420469:	mov    WORD PTR [rbx+0xea],cx
  420470:	add    rax,0xffffffffffffffdc
  420474:	mov    QWORD PTR [rbx+0x30],rax
  420478:	dec    DWORD PTR [rbx+0x104]
  42047e:	mov    eax,ebp
  420480:	add    rsp,0x8
  420484:	pop    rbx
  420485:	pop    rbp
  420486:	ret    
  420487:	lea    rdi,[rip+0x187f1]        # 438c7f <flatcc_builder_padding_base@@Base+0x5cf>
  42048e:	lea    rsi,[rip+0x184ad]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420495:	lea    rcx,[rip+0x18ec8]        # 439364 <flatcc_builder_padding_base@@Base+0xcb4>
  42049c:	mov    edx,0x578
  4204a1:	call   406070 <__assert_fail@plt>
  4204a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004204b0 <flatcc_builder_vector_count@@Base>:
  4204b0:	mov    rax,QWORD PTR [rdi+0x30]
  4204b4:	mov    eax,DWORD PTR [rax+0x14]
  4204b7:	ret    
  4204b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004204c0 <flatcc_builder_vector_edit@@Base>:
  4204c0:	mov    rax,QWORD PTR [rdi+0x18]
  4204c4:	ret    
  4204c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204cf:	nop

00000000004204d0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4204d0:	xor    ecx,ecx
  4204d2:	jmp    4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4204d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204de:	xchg   ax,ax
  4204e0:	push   r14
  4204e2:	push   rbx
  4204e3:	sub    rsp,0x98
  4204ea:	mov    r10,rdx
  4204ed:	xor    ebx,ebx
  4204ef:	test   r10d,0xc0000000
  4204f6:	jne    420669 <flatcc_builder_create_offset_vector_direct@@Base+0x199>
  4204fc:	mov    r14,rdi
  4204ff:	cmp    WORD PTR [rdi+0xe8],0x3
  420507:	ja     420513 <flatcc_builder_create_offset_vector_direct@@Base+0x43>
  420509:	mov    WORD PTR [r14+0xe8],0x4
  420513:	lea    r8d,[r10*4+0x0]
  42051b:	mov    DWORD PTR [rsp+0x4],r10d
  420520:	mov    ebx,DWORD PTR [r14+0xf0]
  420527:	mov    r9d,ebx
  42052a:	and    r9d,0x3
  42052e:	mov    QWORD PTR [rsp+0x8],0x4
  420537:	lea    rdx,[rsp+0x4]
  42053c:	mov    QWORD PTR [rsp+0x18],rdx
  420541:	mov    QWORD PTR [rsp+0x20],0x4
  42054a:	mov    DWORD PTR [rsp+0x10],0x1
  420552:	test   r8d,r8d
  420555:	je     420676 <flatcc_builder_create_offset_vector_direct@@Base+0x1a6>
  42055b:	mov    edx,r8d
  42055e:	lea    r8,[rdx+0x4]
  420562:	mov    QWORD PTR [rsp+0x8],r8
  420567:	mov    QWORD PTR [rsp+0x28],rsi
  42056c:	mov    QWORD PTR [rsp+0x30],rdx
  420571:	mov    DWORD PTR [rsp+0x10],0x2
  420579:	mov    edx,0x2
  42057e:	test   r9d,r9d
  420581:	je     4205a8 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  420583:	add    r8,r9
  420586:	mov    QWORD PTR [rsp+0x8],r8
  42058b:	mov    edi,edx
  42058d:	shl    rdi,0x4
  420591:	lea    rax,[rip+0x18118]        # 4386b0 <flatcc_builder_padding_base@@Base>
  420598:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  42059d:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  4205a2:	inc    edx
  4205a4:	mov    DWORD PTR [rsp+0x10],edx
  4205a8:	test   r10d,r10d
  4205ab:	je     420625 <flatcc_builder_create_offset_vector_direct@@Base+0x155>
  4205ad:	mov    edi,r8d
  4205b0:	sub    edi,ebx
  4205b2:	add    edi,0xfffffffc
  4205b5:	mov    r9d,r10d
  4205b8:	xor    ebx,ebx
  4205ba:	jmp    4205cb <flatcc_builder_create_offset_vector_direct@@Base+0xfb>
  4205bc:	nop    DWORD PTR [rax+0x0]
  4205c0:	inc    rbx
  4205c3:	add    edi,0xfffffffc
  4205c6:	cmp    r9,rbx
  4205c9:	je     42061e <flatcc_builder_create_offset_vector_direct@@Base+0x14e>
  4205cb:	mov    eax,DWORD PTR [rsi+rbx*4]
  4205ce:	test   eax,eax
  4205d0:	je     4205f0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
  4205d2:	add    eax,edi
  4205d4:	mov    DWORD PTR [rsi+rbx*4],eax
  4205d7:	test   rcx,rcx
  4205da:	je     4205c0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4205dc:	cmp    BYTE PTR [rcx+rbx*1],0x0
  4205e0:	jne    4205c0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4205e2:	jmp    42068f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  4205e7:	nop    WORD PTR [rax+rax*1+0x0]
  4205f0:	test   rcx,rcx
  4205f3:	je     4206ae <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  4205f9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  4205fd:	je     4205c0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4205ff:	lea    rdi,[rip+0x19581]        # 439b87 <flatcc_builder_padding_base@@Base+0x14d7>
  420606:	lea    rsi,[rip+0x18335]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  42060d:	lea    rcx,[rip+0x194f0]        # 439b04 <flatcc_builder_padding_base@@Base+0x1454>
  420614:	mov    edx,0x5b5
  420619:	call   406070 <__assert_fail@plt>
  42061e:	mov    ebx,DWORD PTR [r14+0xf0]
  420625:	cmp    r8,0x11
  420629:	setb   al
  42062c:	lea    rcx,[r8-0x10]
  420630:	shr    rcx,0x20
  420634:	sete   cl
  420637:	test   r8d,r8d
  42063a:	jle    4206cd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  420640:	or     al,cl
  420642:	je     4206cd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  420648:	sub    ebx,r8d
  42064b:	mov    rdi,QWORD PTR [r14+0x38]
  42064f:	lea    rsi,[rsp+0x18]
  420654:	mov    ecx,ebx
  420656:	call   QWORD PTR [r14+0x48]
  42065a:	test   eax,eax
  42065c:	jne    4206ec <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  420662:	mov    DWORD PTR [r14+0xf0],ebx
  420669:	mov    eax,ebx
  42066b:	add    rsp,0x98
  420672:	pop    rbx
  420673:	pop    r14
  420675:	ret    
  420676:	mov    r8d,0x4
  42067c:	mov    edx,0x1
  420681:	test   r9d,r9d
  420684:	jne    420583 <flatcc_builder_create_offset_vector_direct@@Base+0xb3>
  42068a:	jmp    4205a8 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  42068f:	lea    rdi,[rip+0x19460]        # 439af6 <flatcc_builder_padding_base@@Base+0x1446>
  420696:	lea    rsi,[rip+0x182a5]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  42069d:	lea    rcx,[rip+0x19460]        # 439b04 <flatcc_builder_padding_base@@Base+0x1454>
  4206a4:	mov    edx,0x5b1
  4206a9:	call   406070 <__assert_fail@plt>
  4206ae:	lea    rdi,[rip+0x1944d]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4206b5:	lea    rsi,[rip+0x18286]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4206bc:	lea    rcx,[rip+0x19441]        # 439b04 <flatcc_builder_padding_base@@Base+0x1454>
  4206c3:	mov    edx,0x5b7
  4206c8:	call   406070 <__assert_fail@plt>
  4206cd:	lea    rdi,[rip+0x1942e]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4206d4:	lea    rsi,[rip+0x18267]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4206db:	lea    rcx,[rip+0x192df]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  4206e2:	mov    edx,0x287
  4206e7:	call   406070 <__assert_fail@plt>
  4206ec:	lea    rdi,[rip+0x1940f]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4206f3:	lea    rsi,[rip+0x18248]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4206fa:	lea    rcx,[rip+0x192c0]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  420701:	mov    edx,0x28b
  420706:	call   406070 <__assert_fail@plt>
  42070b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420710 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  420710:	push   rbp
  420711:	push   rbx
  420712:	push   rax
  420713:	mov    rax,QWORD PTR [rdi+0x30]
  420717:	cmp    WORD PTR [rax+0xe],0x5
  42071c:	jne    4207ab <flatcc_builder_end_offset_vector_for_unions@@Base+0x9b>
  420722:	mov    rcx,rsi
  420725:	mov    rbx,rdi
  420728:	mov    rsi,QWORD PTR [rdi+0x18]
  42072c:	mov    edx,DWORD PTR [rax+0x14]
  42072f:	call   4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  420734:	mov    ebp,eax
  420736:	test   eax,eax
  420738:	je     4207a2 <flatcc_builder_end_offset_vector_for_unions@@Base+0x92>
  42073a:	mov    rdi,QWORD PTR [rbx+0x18]
  42073e:	mov    edx,DWORD PTR [rbx+0x20]
  420741:	xor    esi,esi
  420743:	call   406080 <memset@plt>
  420748:	mov    rax,QWORD PTR [rbx+0x30]
  42074c:	mov    ecx,DWORD PTR [rax+0x8]
  42074f:	mov    DWORD PTR [rbx+0x20],ecx
  420752:	mov    ecx,DWORD PTR [rax]
  420754:	mov    DWORD PTR [rbx+0x28],ecx
  420757:	mov    edx,DWORD PTR [rax+0x4]
  42075a:	mov    rsi,rcx
  42075d:	add    rsi,QWORD PTR [rbx+0x68]
  420761:	mov    QWORD PTR [rbx+0x18],rsi
  420765:	mov    esi,DWORD PTR [rbx+0x70]
  420768:	sub    esi,ecx
  42076a:	cmp    esi,edx
  42076c:	cmova  esi,edx
  42076f:	mov    DWORD PTR [rbx+0x24],esi
  420772:	movzx  ecx,WORD PTR [rbx+0xea]
  420779:	cmp    WORD PTR [rbx+0xe8],cx
  420780:	jae    420789 <flatcc_builder_end_offset_vector_for_unions@@Base+0x79>
  420782:	mov    WORD PTR [rbx+0xe8],cx
  420789:	movzx  ecx,WORD PTR [rax+0xc]
  42078d:	mov    WORD PTR [rbx+0xea],cx
  420794:	add    rax,0xffffffffffffffdc
  420798:	mov    QWORD PTR [rbx+0x30],rax
  42079c:	dec    DWORD PTR [rbx+0x104]
  4207a2:	mov    eax,ebp
  4207a4:	add    rsp,0x8
  4207a8:	pop    rbx
  4207a9:	pop    rbp
  4207aa:	ret    
  4207ab:	lea    rdi,[rip+0x185c6]        # 438d78 <flatcc_builder_padding_base@@Base+0x6c8>
  4207b2:	lea    rsi,[rip+0x18189]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4207b9:	lea    rcx,[rip+0x18c31]        # 4393f1 <flatcc_builder_padding_base@@Base+0xd41>
  4207c0:	mov    edx,0x5d5
  4207c5:	call   406070 <__assert_fail@plt>
  4207ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004207d0 <flatcc_builder_offset_vector_edit@@Base>:
  4207d0:	mov    rax,QWORD PTR [rdi+0x18]
  4207d4:	ret    
  4207d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4207df:	nop

00000000004207e0 <flatcc_builder_offset_vector_count@@Base>:
  4207e0:	mov    rax,QWORD PTR [rdi+0x30]
  4207e4:	mov    eax,DWORD PTR [rax+0x14]
  4207e7:	ret    
  4207e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004207f0 <flatcc_builder_table_add_union@@Base>:
  4207f0:	push   rbp
  4207f1:	push   r15
  4207f3:	push   r14
  4207f5:	push   rbx
  4207f6:	push   rax
  4207f7:	mov    rax,QWORD PTR [rdi+0x30]
  4207fb:	cmp    WORD PTR [rax+0xe],0x3
  420800:	jne    42085e <flatcc_builder_table_add_union@@Base+0x6e>
  420802:	mov    r14,rdx
  420805:	mov    ebp,esi
  420807:	mov    r15,rdi
  42080a:	mov    rbx,rdx
  42080d:	shr    rbx,0x20
  420811:	test   r14b,r14b
  420814:	jne    42081a <flatcc_builder_table_add_union@@Base+0x2a>
  420816:	test   ebx,ebx
  420818:	jne    42087d <flatcc_builder_table_add_union@@Base+0x8d>
  42081a:	test   ebx,ebx
  42081c:	je     420833 <flatcc_builder_table_add_union@@Base+0x43>
  42081e:	mov    rdi,r15
  420821:	mov    esi,ebp
  420823:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  420828:	test   rax,rax
  42082b:	je     4208bb <flatcc_builder_table_add_union@@Base+0xcb>
  420831:	mov    DWORD PTR [rax],ebx
  420833:	dec    ebp
  420835:	mov    edx,0x1
  42083a:	mov    rdi,r15
  42083d:	mov    esi,ebp
  42083f:	mov    ecx,0x1
  420844:	call   420a40 <flatcc_builder_table_add@@Base>
  420849:	test   rax,rax
  42084c:	je     42089c <flatcc_builder_table_add_union@@Base+0xac>
  42084e:	mov    BYTE PTR [rax],r14b
  420851:	xor    eax,eax
  420853:	add    rsp,0x8
  420857:	pop    rbx
  420858:	pop    r14
  42085a:	pop    r15
  42085c:	pop    rbp
  42085d:	ret    
  42085e:	lea    rdi,[rip+0x1890c]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  420865:	lea    rsi,[rip+0x180d6]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  42086c:	lea    rcx,[rip+0x18bf0]        # 439463 <flatcc_builder_padding_base@@Base+0xdb3>
  420873:	mov    edx,0x5ee
  420878:	call   406070 <__assert_fail@plt>
  42087d:	lea    rdi,[rip+0x18c37]        # 4394bb <flatcc_builder_padding_base@@Base+0xe0b>
  420884:	lea    rsi,[rip+0x180b7]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  42088b:	lea    rcx,[rip+0x18bd1]        # 439463 <flatcc_builder_padding_base@@Base+0xdb3>
  420892:	mov    edx,0x5ef
  420897:	call   406070 <__assert_fail@plt>
  42089c:	lea    rdi,[rip+0x18c44]        # 4394e7 <flatcc_builder_padding_base@@Base+0xe37>
  4208a3:	lea    rsi,[rip+0x18098]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4208aa:	lea    rcx,[rip+0x18bb2]        # 439463 <flatcc_builder_padding_base@@Base+0xdb3>
  4208b1:	mov    edx,0x5f6
  4208b6:	call   406070 <__assert_fail@plt>
  4208bb:	lea    rdi,[rip+0x18c1b]        # 4394dd <flatcc_builder_padding_base@@Base+0xe2d>
  4208c2:	lea    rsi,[rip+0x18079]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4208c9:	lea    rcx,[rip+0x18b93]        # 439463 <flatcc_builder_padding_base@@Base+0xdb3>
  4208d0:	mov    edx,0x5f2
  4208d5:	call   406070 <__assert_fail@plt>
  4208da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004208e0 <flatcc_builder_table_add_offset@@Base>:
  4208e0:	push   rbp
  4208e1:	push   r15
  4208e3:	push   r14
  4208e5:	push   rbx
  4208e6:	push   rax
  4208e7:	mov    rax,QWORD PTR [rdi+0x30]
  4208eb:	cmp    WORD PTR [rax+0xe],0x3
  4208f0:	jne    4209de <flatcc_builder_table_add_offset@@Base+0xfe>
  4208f6:	mov    r14d,esi
  4208f9:	cmp    esi,0x7ffd
  4208ff:	jae    4209fd <flatcc_builder_table_add_offset@@Base+0x11d>
  420905:	mov    rbx,rdi
  420908:	mov    rax,QWORD PTR [rdi+0x8]
  42090c:	movsxd rcx,r14d
  42090f:	cmp    WORD PTR [rax+rcx*2],0x0
  420914:	jne    420a1c <flatcc_builder_table_add_offset@@Base+0x13c>
  42091a:	mov    ecx,DWORD PTR [rbx+0x14]
  42091d:	xor    ecx,r14d
  420920:	imul   ecx,ecx,0x9e3779b1
  420926:	xor    ecx,0x4
  420929:	imul   ecx,ecx,0x9e3779b1
  42092f:	mov    DWORD PTR [rbx+0x14],ecx
  420932:	mov    ebp,DWORD PTR [rbx+0x20]
  420935:	mov    ecx,DWORD PTR [rbx+0x24]
  420938:	add    ebp,0x3
  42093b:	and    ebp,0xfffffffc
  42093e:	lea    r15,[rbp+0x4]
  420942:	mov    DWORD PTR [rbx+0x20],r15d
  420946:	cmp    ecx,r15d
  420949:	jae    4209a8 <flatcc_builder_table_add_offset@@Base+0xc8>
  42094b:	mov    eax,r15d
  42094e:	and    eax,0xfffffffc
  420951:	lea    rsi,[rbx+0x68]
  420955:	mov    rdi,QWORD PTR [rbx+0x40]
  420959:	mov    edx,DWORD PTR [rbx+0x28]
  42095c:	add    rdx,rax
  42095f:	mov    ecx,0x1
  420964:	mov    r8d,0x1
  42096a:	call   QWORD PTR [rbx+0x50]
  42096d:	test   eax,eax
  42096f:	je     420975 <flatcc_builder_table_add_offset@@Base+0x95>
  420971:	xor    ebp,ebp
  420973:	jmp    4209d0 <flatcc_builder_table_add_offset@@Base+0xf0>
  420975:	mov    eax,DWORD PTR [rbx+0x28]
  420978:	mov    rcx,rax
  42097b:	add    rcx,QWORD PTR [rbx+0x68]
  42097f:	mov    QWORD PTR [rbx+0x18],rcx
  420983:	mov    ecx,DWORD PTR [rbx+0x70]
  420986:	sub    ecx,eax
  420988:	cmp    ecx,0xfffc
  42098e:	mov    eax,0xfffc
  420993:	cmovb  eax,ecx
  420996:	mov    DWORD PTR [rbx+0x24],eax
  420999:	mov    rax,QWORD PTR [rbx+0x30]
  42099d:	mov    DWORD PTR [rax+0x4],0xfffc
  4209a4:	mov    rax,QWORD PTR [rbx+0x8]
  4209a8:	movzx  ecx,r14w
  4209ac:	mov    WORD PTR [rax+rcx*2],r15w
  4209b1:	cmp    WORD PTR [rbx+0x10],cx
  4209b5:	ja     4209bf <flatcc_builder_table_add_offset@@Base+0xdf>
  4209b7:	inc    r14d
  4209ba:	mov    WORD PTR [rbx+0x10],r14w
  4209bf:	mov    rax,QWORD PTR [rbx]
  4209c2:	lea    rcx,[rax+0x2]
  4209c6:	mov    QWORD PTR [rbx],rcx
  4209c9:	mov    WORD PTR [rax],bp
  4209cc:	add    rbp,QWORD PTR [rbx+0x18]
  4209d0:	mov    rax,rbp
  4209d3:	add    rsp,0x8
  4209d7:	pop    rbx
  4209d8:	pop    r14
  4209da:	pop    r15
  4209dc:	pop    rbp
  4209dd:	ret    
  4209de:	lea    rdi,[rip+0x1878c]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  4209e5:	lea    rsi,[rip+0x17f56]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4209ec:	lea    rcx,[rip+0x18e72]        # 439865 <flatcc_builder_padding_base@@Base+0x11b5>
  4209f3:	mov    edx,0x713
  4209f8:	call   406070 <__assert_fail@plt>
  4209fd:	lea    rdi,[rip+0x18de1]        # 4397e5 <flatcc_builder_padding_base@@Base+0x1135>
  420a04:	lea    rsi,[rip+0x17f37]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420a0b:	lea    rcx,[rip+0x18e53]        # 439865 <flatcc_builder_padding_base@@Base+0x11b5>
  420a12:	mov    edx,0x714
  420a17:	call   406070 <__assert_fail@plt>
  420a1c:	lea    rdi,[rip+0x190df]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  420a23:	lea    rsi,[rip+0x17f18]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420a2a:	lea    rcx,[rip+0x18e34]        # 439865 <flatcc_builder_padding_base@@Base+0x11b5>
  420a31:	mov    edx,0x71b
  420a36:	call   406070 <__assert_fail@plt>
  420a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420a40 <flatcc_builder_table_add@@Base>:
  420a40:	push   rbp
  420a41:	push   r14
  420a43:	push   rbx
  420a44:	mov    rax,QWORD PTR [rdi+0x30]
  420a48:	cmp    WORD PTR [rax+0xe],0x3
  420a4d:	jne    420b38 <flatcc_builder_table_add@@Base+0xf8>
  420a53:	mov    r14d,esi
  420a56:	cmp    esi,0x7ffd
  420a5c:	jae    420b57 <flatcc_builder_table_add@@Base+0x117>
  420a62:	mov    rbx,rdi
  420a65:	cmp    WORD PTR [rdi+0xea],cx
  420a6c:	jae    420a75 <flatcc_builder_table_add@@Base+0x35>
  420a6e:	mov    WORD PTR [rbx+0xea],cx
  420a75:	mov    rsi,QWORD PTR [rbx+0x8]
  420a79:	movsxd rax,r14d
  420a7c:	cmp    WORD PTR [rsi+rax*2],0x0
  420a81:	jne    420b76 <flatcc_builder_table_add@@Base+0x136>
  420a87:	mov    eax,DWORD PTR [rbx+0x14]
  420a8a:	xor    eax,r14d
  420a8d:	imul   eax,eax,0x9e3779b1
  420a93:	xor    eax,edx
  420a95:	imul   eax,eax,0x9e3779b1
  420a9b:	mov    DWORD PTR [rbx+0x14],eax
  420a9e:	mov    eax,DWORD PTR [rbx+0x20]
  420aa1:	movzx  ebp,cx
  420aa4:	lea    eax,[rax+rbp*1]
  420aa7:	add    eax,0xffffffff
  420aaa:	neg    ebp
  420aac:	and    ebp,eax
  420aae:	add    edx,ebp
  420ab0:	mov    DWORD PTR [rbx+0x20],edx
  420ab3:	cmp    edx,DWORD PTR [rbx+0x24]
  420ab6:	jb     420b14 <flatcc_builder_table_add@@Base+0xd4>
  420ab8:	inc    edx
  420aba:	lea    rsi,[rbx+0x68]
  420abe:	mov    rdi,QWORD PTR [rbx+0x40]
  420ac2:	mov    eax,DWORD PTR [rbx+0x28]
  420ac5:	add    rax,rdx
  420ac8:	mov    rdx,rax
  420acb:	mov    ecx,0x1
  420ad0:	mov    r8d,0x1
  420ad6:	call   QWORD PTR [rbx+0x50]
  420ad9:	test   eax,eax
  420adb:	je     420ae1 <flatcc_builder_table_add@@Base+0xa1>
  420add:	xor    eax,eax
  420adf:	jmp    420b33 <flatcc_builder_table_add@@Base+0xf3>
  420ae1:	mov    eax,DWORD PTR [rbx+0x28]
  420ae4:	mov    rcx,rax
  420ae7:	add    rcx,QWORD PTR [rbx+0x68]
  420aeb:	mov    QWORD PTR [rbx+0x18],rcx
  420aef:	mov    ecx,DWORD PTR [rbx+0x70]
  420af2:	sub    ecx,eax
  420af4:	cmp    ecx,0xfffc
  420afa:	mov    eax,0xfffc
  420aff:	cmovb  eax,ecx
  420b02:	mov    DWORD PTR [rbx+0x24],eax
  420b05:	mov    rax,QWORD PTR [rbx+0x30]
  420b09:	mov    DWORD PTR [rax+0x4],0xfffc
  420b10:	mov    rsi,QWORD PTR [rbx+0x8]
  420b14:	mov    eax,ebp
  420b16:	add    ebp,0x4
  420b19:	movzx  ecx,r14w
  420b1d:	mov    WORD PTR [rsi+rcx*2],bp
  420b21:	cmp    WORD PTR [rbx+0x10],cx
  420b25:	ja     420b2f <flatcc_builder_table_add@@Base+0xef>
  420b27:	inc    r14d
  420b2a:	mov    WORD PTR [rbx+0x10],r14w
  420b2f:	add    rax,QWORD PTR [rbx+0x18]
  420b33:	pop    rbx
  420b34:	pop    r14
  420b36:	pop    rbp
  420b37:	ret    
  420b38:	lea    rdi,[rip+0x18632]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  420b3f:	lea    rsi,[rip+0x17dfc]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420b46:	lea    rcx,[rip+0x18c4e]        # 43979b <flatcc_builder_padding_base@@Base+0x10eb>
  420b4d:	mov    edx,0x6ed
  420b52:	call   406070 <__assert_fail@plt>
  420b57:	lea    rdi,[rip+0x18c87]        # 4397e5 <flatcc_builder_padding_base@@Base+0x1135>
  420b5e:	lea    rsi,[rip+0x17ddd]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420b65:	lea    rcx,[rip+0x18c2f]        # 43979b <flatcc_builder_padding_base@@Base+0x10eb>
  420b6c:	mov    edx,0x6ee
  420b71:	call   406070 <__assert_fail@plt>
  420b76:	lea    rdi,[rip+0x18f85]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  420b7d:	lea    rsi,[rip+0x17dbe]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420b84:	lea    rcx,[rip+0x18c10]        # 43979b <flatcc_builder_padding_base@@Base+0x10eb>
  420b8b:	mov    edx,0x6f8
  420b90:	call   406070 <__assert_fail@plt>
  420b95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b9f:	nop

0000000000420ba0 <flatcc_builder_table_add_union_vector@@Base>:
  420ba0:	push   r15
  420ba2:	push   r14
  420ba4:	push   r12
  420ba6:	push   rbx
  420ba7:	push   rax
  420ba8:	mov    rax,QWORD PTR [rdi+0x30]
  420bac:	cmp    WORD PTR [rax+0xe],0x3
  420bb1:	jne    420c07 <flatcc_builder_table_add_union_vector@@Base+0x67>
  420bb3:	mov    rbx,rdx
  420bb6:	mov    r12,rdx
  420bb9:	shr    r12,0x20
  420bbd:	test   ebx,ebx
  420bbf:	setne  al
  420bc2:	test   r12d,r12d
  420bc5:	sete   cl
  420bc8:	xor    cl,al
  420bca:	je     420c26 <flatcc_builder_table_add_union_vector@@Base+0x86>
  420bcc:	test   ebx,ebx
  420bce:	je     420bf9 <flatcc_builder_table_add_union_vector@@Base+0x59>
  420bd0:	mov    r14d,esi
  420bd3:	mov    r15,rdi
  420bd6:	lea    esi,[r14-0x1]
  420bda:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  420bdf:	test   rax,rax
  420be2:	je     420c45 <flatcc_builder_table_add_union_vector@@Base+0xa5>
  420be4:	mov    DWORD PTR [rax],ebx
  420be6:	mov    rdi,r15
  420be9:	mov    esi,r14d
  420bec:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  420bf1:	test   rax,rax
  420bf4:	je     420c64 <flatcc_builder_table_add_union_vector@@Base+0xc4>
  420bf6:	mov    DWORD PTR [rax],r12d
  420bf9:	xor    eax,eax
  420bfb:	add    rsp,0x8
  420bff:	pop    rbx
  420c00:	pop    r12
  420c02:	pop    r14
  420c04:	pop    r15
  420c06:	ret    
  420c07:	lea    rdi,[rip+0x18563]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  420c0e:	lea    rsi,[rip+0x17d2d]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420c15:	lea    rcx,[rip+0x188d7]        # 4394f3 <flatcc_builder_padding_base@@Base+0xe43>
  420c1c:	mov    edx,0x600
  420c21:	call   406070 <__assert_fail@plt>
  420c26:	lea    rdi,[rip+0x18929]        # 439556 <flatcc_builder_padding_base@@Base+0xea6>
  420c2d:	lea    rsi,[rip+0x17d0e]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420c34:	lea    rcx,[rip+0x188b8]        # 4394f3 <flatcc_builder_padding_base@@Base+0xe43>
  420c3b:	mov    edx,0x601
  420c40:	call   406070 <__assert_fail@plt>
  420c45:	lea    rdi,[rip+0x18891]        # 4394dd <flatcc_builder_padding_base@@Base+0xe2d>
  420c4c:	lea    rsi,[rip+0x17cef]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420c53:	lea    rcx,[rip+0x18899]        # 4394f3 <flatcc_builder_padding_base@@Base+0xe43>
  420c5a:	mov    edx,0x604
  420c5f:	call   406070 <__assert_fail@plt>
  420c64:	lea    rdi,[rip+0x18872]        # 4394dd <flatcc_builder_padding_base@@Base+0xe2d>
  420c6b:	lea    rsi,[rip+0x17cd0]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420c72:	lea    rcx,[rip+0x1887a]        # 4394f3 <flatcc_builder_padding_base@@Base+0xe43>
  420c79:	mov    edx,0x608
  420c7e:	call   406070 <__assert_fail@plt>
  420c83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c8d:	nop    DWORD PTR [rax]

0000000000420c90 <flatcc_builder_create_union_vector@@Base>:
  420c90:	push   r15
  420c92:	push   r14
  420c94:	push   r13
  420c96:	push   r12
  420c98:	push   rbx
  420c99:	mov    r14,rdx
  420c9c:	mov    r15,rsi
  420c9f:	mov    rbx,rdi
  420ca2:	mov    esi,0x4
  420ca7:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  420cac:	test   eax,eax
  420cae:	je     420cc0 <flatcc_builder_create_union_vector@@Base+0x30>
  420cb0:	xor    r14d,r14d
  420cb3:	mov    rax,r14
  420cb6:	pop    rbx
  420cb7:	pop    r12
  420cb9:	pop    r13
  420cbb:	pop    r14
  420cbd:	pop    r15
  420cbf:	ret    
  420cc0:	mov    rax,QWORD PTR [rbx+0x30]
  420cc4:	mov    DWORD PTR [rax+0x10],0x4
  420ccb:	mov    rax,QWORD PTR [rbx+0x30]
  420ccf:	mov    DWORD PTR [rax+0x14],0x0
  420cd6:	mov    rax,QWORD PTR [rbx+0x30]
  420cda:	mov    WORD PTR [rax+0xe],0x5
  420ce0:	mov    ecx,DWORD PTR [rbx+0x28]
  420ce3:	mov    edx,DWORD PTR [rbx+0x70]
  420ce6:	sub    edx,ecx
  420ce8:	add    rcx,QWORD PTR [rbx+0x68]
  420cec:	mov    QWORD PTR [rbx+0x18],rcx
  420cf0:	cmp    edx,0xfffffffc
  420cf3:	mov    ecx,0xfffffffc
  420cf8:	cmovb  ecx,edx
  420cfb:	mov    DWORD PTR [rbx+0x24],ecx
  420cfe:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420d05:	mov    ecx,DWORD PTR [rax+0x14]
  420d08:	add    ecx,r14d
  420d0b:	jb     420f78 <flatcc_builder_create_union_vector@@Base+0x2e8>
  420d11:	cmp    ecx,0x40000000
  420d17:	jae    420f78 <flatcc_builder_create_union_vector@@Base+0x2e8>
  420d1d:	mov    DWORD PTR [rax+0x14],ecx
  420d20:	mov    r12d,DWORD PTR [rbx+0x20]
  420d24:	mov    eax,DWORD PTR [rbx+0x24]
  420d27:	lea    ecx,[r12+r14*4]
  420d2b:	mov    DWORD PTR [rbx+0x20],ecx
  420d2e:	cmp    ecx,eax
  420d30:	jae    420d40 <flatcc_builder_create_union_vector@@Base+0xb0>
  420d32:	mov    rsi,QWORD PTR [rbx+0x18]
  420d36:	add    r12,rsi
  420d39:	jne    420d9b <flatcc_builder_create_union_vector@@Base+0x10b>
  420d3b:	jmp    420cb0 <flatcc_builder_create_union_vector@@Base+0x20>
  420d40:	inc    ecx
  420d42:	lea    rsi,[rbx+0x68]
  420d46:	mov    rdi,QWORD PTR [rbx+0x40]
  420d4a:	mov    edx,DWORD PTR [rbx+0x28]
  420d4d:	add    rdx,rcx
  420d50:	mov    ecx,0x1
  420d55:	mov    r8d,0x1
  420d5b:	call   QWORD PTR [rbx+0x50]
  420d5e:	test   eax,eax
  420d60:	jne    420cb0 <flatcc_builder_create_union_vector@@Base+0x20>
  420d66:	mov    eax,DWORD PTR [rbx+0x28]
  420d69:	mov    rsi,rax
  420d6c:	add    rsi,QWORD PTR [rbx+0x68]
  420d70:	mov    QWORD PTR [rbx+0x18],rsi
  420d74:	mov    ecx,DWORD PTR [rbx+0x70]
  420d77:	sub    ecx,eax
  420d79:	cmp    ecx,0xfffffffc
  420d7c:	mov    eax,0xfffffffc
  420d81:	cmovb  eax,ecx
  420d84:	mov    DWORD PTR [rbx+0x24],eax
  420d87:	mov    rcx,QWORD PTR [rbx+0x30]
  420d8b:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  420d92:	add    r12,rsi
  420d95:	je     420cb0 <flatcc_builder_create_union_vector@@Base+0x20>
  420d9b:	mov    r13d,DWORD PTR [rbx+0x20]
  420d9f:	lea    ecx,[r14+r13*1]
  420da3:	mov    DWORD PTR [rbx+0x20],ecx
  420da6:	cmp    ecx,eax
  420da8:	jb     420dfc <flatcc_builder_create_union_vector@@Base+0x16c>
  420daa:	inc    ecx
  420dac:	lea    rsi,[rbx+0x68]
  420db0:	mov    rdi,QWORD PTR [rbx+0x40]
  420db4:	mov    edx,DWORD PTR [rbx+0x28]
  420db7:	add    rdx,rcx
  420dba:	mov    ecx,0x1
  420dbf:	mov    r8d,0x1
  420dc5:	call   QWORD PTR [rbx+0x50]
  420dc8:	test   eax,eax
  420dca:	jne    420cb0 <flatcc_builder_create_union_vector@@Base+0x20>
  420dd0:	mov    eax,DWORD PTR [rbx+0x28]
  420dd3:	mov    rsi,rax
  420dd6:	add    rsi,QWORD PTR [rbx+0x68]
  420dda:	mov    QWORD PTR [rbx+0x18],rsi
  420dde:	mov    ecx,DWORD PTR [rbx+0x70]
  420de1:	sub    ecx,eax
  420de3:	cmp    ecx,0xfffffffc
  420de6:	mov    eax,0xfffffffc
  420deb:	cmovb  eax,ecx
  420dee:	mov    DWORD PTR [rbx+0x24],eax
  420df1:	mov    rax,QWORD PTR [rbx+0x30]
  420df5:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420dfc:	mov    r12,rsi
  420dff:	add    r12,r13
  420e02:	je     420cb0 <flatcc_builder_create_union_vector@@Base+0x20>
  420e08:	test   r14,r14
  420e0b:	je     420ec8 <flatcc_builder_create_union_vector@@Base+0x238>
  420e11:	lea    rcx,[r14-0x1]
  420e15:	mov    r8d,r14d
  420e18:	and    r8d,0x3
  420e1c:	cmp    rcx,0x3
  420e20:	jae    420e2e <flatcc_builder_create_union_vector@@Base+0x19e>
  420e22:	xor    ecx,ecx
  420e24:	test   r8,r8
  420e27:	jne    420e97 <flatcc_builder_create_union_vector@@Base+0x207>
  420e29:	jmp    420ec8 <flatcc_builder_create_union_vector@@Base+0x238>
  420e2e:	mov    rdx,r14
  420e31:	sub    rdx,r8
  420e34:	lea    rdi,[rsi+r13*1]
  420e38:	add    rdi,0x3
  420e3c:	xor    ecx,ecx
  420e3e:	xchg   ax,ax
  420e40:	movzx  eax,BYTE PTR [r15+rcx*8]
  420e45:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  420e49:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  420e4e:	mov    DWORD PTR [rsi+rcx*4],eax
  420e51:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  420e57:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  420e5b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  420e60:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  420e64:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  420e6a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  420e6e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  420e73:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  420e77:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  420e7d:	mov    BYTE PTR [rdi+rcx*1],al
  420e80:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  420e85:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  420e89:	add    rcx,0x4
  420e8d:	cmp    rdx,rcx
  420e90:	jne    420e40 <flatcc_builder_create_union_vector@@Base+0x1b0>
  420e92:	test   r8,r8
  420e95:	je     420ec8 <flatcc_builder_create_union_vector@@Base+0x238>
  420e97:	lea    rdx,[rsi+rcx*4]
  420e9b:	lea    rdi,[r15+rcx*8]
  420e9f:	add    rdi,0x4
  420ea3:	add    r13,rcx
  420ea6:	add    r13,rsi
  420ea9:	xor    ecx,ecx
  420eab:	nop    DWORD PTR [rax+rax*1+0x0]
  420eb0:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  420eb5:	mov    BYTE PTR [r13+rcx*1+0x0],al
  420eba:	mov    eax,DWORD PTR [rdi+rcx*8]
  420ebd:	mov    DWORD PTR [rdx+rcx*4],eax
  420ec0:	inc    rcx
  420ec3:	cmp    r8,rcx
  420ec6:	jne    420eb0 <flatcc_builder_create_union_vector@@Base+0x220>
  420ec8:	mov    rdi,rbx
  420ecb:	mov    rdx,r14
  420ece:	mov    rcx,r12
  420ed1:	call   4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  420ed6:	mov    r15d,eax
  420ed9:	test   eax,eax
  420edb:	je     420f01 <flatcc_builder_create_union_vector@@Base+0x271>
  420edd:	mov    ecx,0x1
  420ee2:	mov    r9d,0xffffffff
  420ee8:	mov    rdi,rbx
  420eeb:	mov    rsi,r12
  420eee:	mov    rdx,r14
  420ef1:	mov    r8d,0x1
  420ef7:	call   420260 <flatcc_builder_create_vector@@Base>
  420efc:	mov    r14d,eax
  420eff:	jmp    420f04 <flatcc_builder_create_union_vector@@Base+0x274>
  420f01:	xor    r14d,r14d
  420f04:	shl    r15,0x20
  420f08:	mov    rdi,QWORD PTR [rbx+0x18]
  420f0c:	mov    edx,DWORD PTR [rbx+0x20]
  420f0f:	xor    esi,esi
  420f11:	call   406080 <memset@plt>
  420f16:	mov    rax,QWORD PTR [rbx+0x30]
  420f1a:	mov    ecx,DWORD PTR [rax+0x8]
  420f1d:	mov    DWORD PTR [rbx+0x20],ecx
  420f20:	mov    ecx,DWORD PTR [rax]
  420f22:	mov    DWORD PTR [rbx+0x28],ecx
  420f25:	mov    edx,DWORD PTR [rax+0x4]
  420f28:	mov    rsi,rcx
  420f2b:	add    rsi,QWORD PTR [rbx+0x68]
  420f2f:	mov    QWORD PTR [rbx+0x18],rsi
  420f33:	mov    esi,DWORD PTR [rbx+0x70]
  420f36:	sub    esi,ecx
  420f38:	cmp    esi,edx
  420f3a:	cmova  esi,edx
  420f3d:	mov    DWORD PTR [rbx+0x24],esi
  420f40:	movzx  ecx,WORD PTR [rbx+0xea]
  420f47:	cmp    WORD PTR [rbx+0xe8],cx
  420f4e:	jae    420f57 <flatcc_builder_create_union_vector@@Base+0x2c7>
  420f50:	mov    WORD PTR [rbx+0xe8],cx
  420f57:	or     r14,r15
  420f5a:	movzx  ecx,WORD PTR [rax+0xc]
  420f5e:	mov    WORD PTR [rbx+0xea],cx
  420f65:	add    rax,0xffffffffffffffdc
  420f69:	mov    QWORD PTR [rbx+0x30],rax
  420f6d:	dec    DWORD PTR [rbx+0x104]
  420f73:	jmp    420cb3 <flatcc_builder_create_union_vector@@Base+0x23>
  420f78:	lea    rdi,[rip+0x18a8c]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  420f7f:	lea    rsi,[rip+0x179bc]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  420f86:	lea    rcx,[rip+0x18a99]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  420f8d:	mov    edx,0x37c
  420f92:	call   406070 <__assert_fail@plt>
  420f97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420fa0 <flatcc_builder_create_union_vector_direct@@Base>:
  420fa0:	push   r15
  420fa2:	push   r14
  420fa4:	push   r12
  420fa6:	push   rbx
  420fa7:	push   rax
  420fa8:	mov    r14,rcx
  420fab:	mov    r15,rsi
  420fae:	mov    r12,rdi
  420fb1:	mov    rsi,rdx
  420fb4:	mov    rdx,rcx
  420fb7:	mov    rcx,r15
  420fba:	call   4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  420fbf:	mov    ebx,eax
  420fc1:	test   eax,eax
  420fc3:	je     420fe8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  420fc5:	mov    ecx,0x1
  420fca:	mov    r9d,0xffffffff
  420fd0:	mov    rdi,r12
  420fd3:	mov    rsi,r15
  420fd6:	mov    rdx,r14
  420fd9:	mov    r8d,0x1
  420fdf:	call   420260 <flatcc_builder_create_vector@@Base>
  420fe4:	mov    eax,eax
  420fe6:	jmp    420fea <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  420fe8:	xor    eax,eax
  420fea:	shl    rbx,0x20
  420fee:	or     rbx,rax
  420ff1:	mov    rax,rbx
  420ff4:	add    rsp,0x8
  420ff8:	pop    rbx
  420ff9:	pop    r12
  420ffb:	pop    r14
  420ffd:	pop    r15
  420fff:	ret    

0000000000421000 <flatcc_builder_start_union_vector@@Base>:
  421000:	push   rbx
  421001:	mov    rbx,rdi
  421004:	mov    esi,0x4
  421009:	call   41e500 <flatcc_builder_start_buffer@@Base+0xe0>
  42100e:	mov    ecx,eax
  421010:	mov    eax,0xffffffff
  421015:	test   ecx,ecx
  421017:	je     42101b <flatcc_builder_start_union_vector@@Base+0x1b>
  421019:	pop    rbx
  42101a:	ret    
  42101b:	mov    rax,QWORD PTR [rbx+0x30]
  42101f:	mov    DWORD PTR [rax+0x10],0x8
  421026:	mov    rax,QWORD PTR [rbx+0x30]
  42102a:	mov    DWORD PTR [rax+0x14],0x0
  421031:	mov    rax,QWORD PTR [rbx+0x30]
  421035:	mov    WORD PTR [rax+0xe],0x7
  42103b:	mov    ecx,DWORD PTR [rbx+0x28]
  42103e:	mov    edx,DWORD PTR [rbx+0x70]
  421041:	sub    edx,ecx
  421043:	add    rcx,QWORD PTR [rbx+0x68]
  421047:	mov    QWORD PTR [rbx+0x18],rcx
  42104b:	cmp    edx,0xfffffffc
  42104e:	mov    ecx,0xfffffffc
  421053:	cmovb  ecx,edx
  421056:	mov    DWORD PTR [rbx+0x24],ecx
  421059:	mov    DWORD PTR [rax+0x4],0xfffffffc
  421060:	xor    eax,eax
  421062:	pop    rbx
  421063:	ret    
  421064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42106e:	xchg   ax,ax

0000000000421070 <flatcc_builder_end_union_vector@@Base>:
  421070:	push   rbp
  421071:	push   r15
  421073:	push   r14
  421075:	push   r13
  421077:	push   r12
  421079:	push   rbx
  42107a:	push   rax
  42107b:	mov    rax,QWORD PTR [rdi+0x30]
  42107f:	cmp    WORD PTR [rax+0xe],0x7
  421084:	jne    421474 <flatcc_builder_end_union_vector@@Base+0x404>
  42108a:	mov    r13,rdi
  42108d:	mov    r14d,DWORD PTR [rax+0x14]
  421091:	lea    eax,[r14+r14*4]
  421095:	mov    r12d,DWORD PTR [rdi+0x20]
  421099:	add    eax,r12d
  42109c:	mov    DWORD PTR [rdi+0x20],eax
  42109f:	cmp    eax,DWORD PTR [rdi+0x24]
  4210a2:	jae    4210aa <flatcc_builder_end_union_vector@@Base+0x3a>
  4210a4:	mov    r8,QWORD PTR [r13+0x18]
  4210a8:	jmp    421101 <flatcc_builder_end_union_vector@@Base+0x91>
  4210aa:	inc    eax
  4210ac:	lea    rsi,[r13+0x68]
  4210b0:	mov    rdi,QWORD PTR [r13+0x40]
  4210b4:	mov    edx,DWORD PTR [r13+0x28]
  4210b8:	add    rdx,rax
  4210bb:	mov    ecx,0x1
  4210c0:	mov    r8d,0x1
  4210c6:	call   QWORD PTR [r13+0x50]
  4210ca:	test   eax,eax
  4210cc:	jne    421236 <flatcc_builder_end_union_vector@@Base+0x1c6>
  4210d2:	mov    eax,DWORD PTR [r13+0x28]
  4210d6:	mov    r8,rax
  4210d9:	add    r8,QWORD PTR [r13+0x68]
  4210dd:	mov    QWORD PTR [r13+0x18],r8
  4210e1:	mov    ecx,DWORD PTR [r13+0x70]
  4210e5:	sub    ecx,eax
  4210e7:	cmp    ecx,0xfffffffc
  4210ea:	mov    eax,0xfffffffc
  4210ef:	cmovb  eax,ecx
  4210f2:	mov    DWORD PTR [r13+0x24],eax
  4210f6:	mov    rax,QWORD PTR [r13+0x30]
  4210fa:	mov    DWORD PTR [rax+0x4],0xfffffffc
  421101:	mov    rsi,r8
  421104:	add    rsi,r12
  421107:	je     421236 <flatcc_builder_end_union_vector@@Base+0x1c6>
  42110d:	lea    r15,[rsi+r14*4]
  421111:	test   r14d,r14d
  421114:	je     4211fa <flatcc_builder_end_union_vector@@Base+0x18a>
  42111a:	cmp    r14d,0x9
  42111e:	jae    4212c9 <flatcc_builder_end_union_vector@@Base+0x259>
  421124:	xor    r9d,r9d
  421127:	mov    r11d,r14d
  42112a:	sub    r11d,r9d
  42112d:	mov    r10,r9
  421130:	not    r10
  421133:	add    r10,r14
  421136:	and    r11,0x3
  42113a:	je     421180 <flatcc_builder_end_union_vector@@Base+0x110>
  42113c:	mov    rdx,r9
  42113f:	neg    rdx
  421142:	lea    rbp,[r12+r9*4]
  421146:	add    rbp,r8
  421149:	lea    rbx,[r8+r9*8]
  42114d:	add    rbx,0x4
  421151:	lea    rax,[r9+r14*4]
  421155:	add    rax,r12
  421158:	add    rax,r8
  42115b:	xor    edi,edi
  42115d:	nop    DWORD PTR [rax]
  421160:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  421165:	mov    BYTE PTR [rax+rdi*1],cl
  421168:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42116b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42116f:	dec    rdx
  421172:	inc    rdi
  421175:	cmp    r11,rdi
  421178:	jne    421160 <flatcc_builder_end_union_vector@@Base+0xf0>
  42117a:	neg    rdx
  42117d:	mov    r9,rdx
  421180:	cmp    r10,0x3
  421184:	jb     4211fa <flatcc_builder_end_union_vector@@Base+0x18a>
  421186:	mov    rbp,r14
  421189:	sub    rbp,r9
  42118c:	lea    rcx,[r12+r9*4]
  421190:	lea    rdx,[r8+rcx*1]
  421194:	add    rdx,0xc
  421198:	lea    rdi,[r8+r9*8]
  42119c:	add    rdi,0x1c
  4211a0:	lea    rcx,[r9+r14*4]
  4211a4:	add    rcx,r12
  4211a7:	add    rcx,r8
  4211aa:	add    rcx,0x3
  4211ae:	xor    ebx,ebx
  4211b0:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  4211b5:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  4211b9:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  4211bd:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  4211c1:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  4211c6:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  4211ca:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  4211ce:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  4211d2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  4211d7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  4211db:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  4211df:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  4211e3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  4211e8:	mov    BYTE PTR [rcx+rbx*1],al
  4211eb:	mov    eax,DWORD PTR [rdi+rbx*8]
  4211ee:	mov    DWORD PTR [rdx+rbx*4],eax
  4211f1:	add    rbx,0x4
  4211f5:	cmp    rbp,rbx
  4211f8:	jne    4211b0 <flatcc_builder_end_union_vector@@Base+0x140>
  4211fa:	mov    rdi,r13
  4211fd:	mov    rdx,r14
  421200:	mov    rcx,r15
  421203:	vzeroupper 
  421206:	call   4204e0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42120b:	mov    r12d,eax
  42120e:	test   eax,eax
  421210:	je     42123b <flatcc_builder_end_union_vector@@Base+0x1cb>
  421212:	mov    ecx,0x1
  421217:	mov    r9d,0xffffffff
  42121d:	mov    rdi,r13
  421220:	mov    rsi,r15
  421223:	mov    rdx,r14
  421226:	mov    r8d,0x1
  42122c:	call   420260 <flatcc_builder_create_vector@@Base>
  421231:	mov    r14d,eax
  421234:	jmp    42123e <flatcc_builder_end_union_vector@@Base+0x1ce>
  421236:	xor    r14d,r14d
  421239:	jmp    4212b7 <flatcc_builder_end_union_vector@@Base+0x247>
  42123b:	xor    r14d,r14d
  42123e:	shl    r12,0x20
  421242:	mov    rdi,QWORD PTR [r13+0x18]
  421246:	mov    edx,DWORD PTR [r13+0x20]
  42124a:	xor    esi,esi
  42124c:	call   406080 <memset@plt>
  421251:	mov    rax,QWORD PTR [r13+0x30]
  421255:	mov    ecx,DWORD PTR [rax+0x8]
  421258:	mov    DWORD PTR [r13+0x20],ecx
  42125c:	mov    ecx,DWORD PTR [rax]
  42125e:	mov    DWORD PTR [r13+0x28],ecx
  421262:	mov    edx,DWORD PTR [rax+0x4]
  421265:	mov    rsi,rcx
  421268:	add    rsi,QWORD PTR [r13+0x68]
  42126c:	mov    QWORD PTR [r13+0x18],rsi
  421270:	mov    esi,DWORD PTR [r13+0x70]
  421274:	sub    esi,ecx
  421276:	cmp    esi,edx
  421278:	cmova  esi,edx
  42127b:	mov    DWORD PTR [r13+0x24],esi
  42127f:	movzx  ecx,WORD PTR [r13+0xea]
  421287:	cmp    WORD PTR [r13+0xe8],cx
  42128f:	jae    421299 <flatcc_builder_end_union_vector@@Base+0x229>
  421291:	mov    WORD PTR [r13+0xe8],cx
  421299:	or     r14,r12
  42129c:	movzx  ecx,WORD PTR [rax+0xc]
  4212a0:	mov    WORD PTR [r13+0xea],cx
  4212a8:	add    rax,0xffffffffffffffdc
  4212ac:	mov    QWORD PTR [r13+0x30],rax
  4212b0:	dec    DWORD PTR [r13+0x104]
  4212b7:	mov    rax,r14
  4212ba:	add    rsp,0x8
  4212be:	pop    rbx
  4212bf:	pop    r12
  4212c1:	pop    r13
  4212c3:	pop    r14
  4212c5:	pop    r15
  4212c7:	pop    rbp
  4212c8:	ret    
  4212c9:	lea    rax,[r14-0x1]
  4212cd:	mov    ecx,0x8
  4212d2:	mul    rcx
  4212d5:	seto   cl
  4212d8:	mov    rdx,r8
  4212db:	not    rdx
  4212de:	xor    r9d,r9d
  4212e1:	cmp    rax,rdx
  4212e4:	ja     421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  4212ea:	test   cl,cl
  4212ec:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  4212f2:	lea    rdx,[r8+0x4]
  4212f6:	mov    rdi,rdx
  4212f9:	not    rdi
  4212fc:	cmp    rax,rdi
  4212ff:	ja     421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  421305:	test   cl,cl
  421307:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  42130d:	lea    rcx,[r14+r14*4]
  421311:	add    rcx,r12
  421314:	add    rcx,r8
  421317:	lea    rbx,[r8+r14*8]
  42131b:	add    rbx,0xfffffffffffffff9
  42131f:	cmp    rbx,r15
  421322:	seta   r11b
  421326:	lea    rdi,[r8+r14*8]
  42132a:	cmp    r8,rcx
  42132d:	setb   r10b
  421331:	cmp    rdi,r15
  421334:	seta   al
  421337:	cmp    rdx,rcx
  42133a:	setb   bpl
  42133e:	cmp    rsi,rbx
  421341:	setb   cl
  421344:	cmp    r8,r15
  421347:	setb   BYTE PTR [rsp+0x7]
  42134c:	cmp    rsi,rdi
  42134f:	setb   bl
  421352:	cmp    rdx,r15
  421355:	setb   dl
  421358:	xor    r9d,r9d
  42135b:	test   r11b,r10b
  42135e:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  421364:	and    al,bpl
  421367:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  42136d:	and    cl,BYTE PTR [rsp+0x7]
  421371:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  421377:	and    bl,dl
  421379:	jne    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  42137f:	mov    eax,r14d
  421382:	and    eax,0x7
  421385:	test   rax,rax
  421388:	mov    ecx,0x8
  42138d:	cmovne rcx,rax
  421391:	mov    r9,r14
  421394:	sub    r9,rcx
  421397:	vmovdqa ymm0,YMMWORD PTR [rip+0x17521]        # 4388c0 <flatcc_builder_padding_base@@Base+0x210>
  42139f:	vmovdqa ymm1,YMMWORD PTR [rip+0x17539]        # 4388e0 <flatcc_builder_padding_base@@Base+0x230>
  4213a7:	xor    eax,eax
  4213a9:	vmovdqa xmm8,XMMWORD PTR [rip+0x1754f]        # 438900 <flatcc_builder_padding_base@@Base+0x250>
  4213b1:	vmovdqa xmm9,XMMWORD PTR [rip+0x17557]        # 438910 <flatcc_builder_padding_base@@Base+0x260>
  4213b9:	vpbroadcastq ymm4,QWORD PTR [rip+0x1755e]        # 438920 <flatcc_builder_padding_base@@Base+0x270>
  4213c2:	vpbroadcastq ymm5,QWORD PTR [rip+0x1755d]        # 438928 <flatcc_builder_padding_base@@Base+0x278>
  4213cb:	mov    rdi,r8
  4213ce:	xchg   ax,ax
  4213d0:	vmovdqu xmm6,XMMWORD PTR [rdi]
  4213d4:	vmovdqu xmm7,XMMWORD PTR [rdi+0x10]
  4213d9:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  4213de:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  4213e3:	vpshufb xmm3,xmm3,xmm8
  4213e8:	vpshufb xmm2,xmm2,xmm8
  4213ed:	vpunpcklwd xmm2,xmm2,xmm3
  4213f1:	vpshufb xmm3,xmm7,xmm9
  4213f6:	vpshufb xmm6,xmm6,xmm9
  4213fb:	vpunpcklwd xmm3,xmm6,xmm3
  4213ff:	vpblendd xmm2,xmm3,xmm2,0x2
  421405:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42140b:	vpsllq ymm2,ymm0,0x3
  421410:	vmovq  xmm3,r8
  421415:	vpbroadcastq ymm3,xmm3
  42141a:	vpaddq ymm2,ymm3,ymm2
  42141e:	vpaddq ymm2,ymm2,ymm4
  421422:	vpsllq ymm6,ymm1,0x3
  421427:	vpaddq ymm3,ymm3,ymm6
  42142b:	vpaddq ymm3,ymm3,ymm4
  42142f:	vpcmpeqd xmm6,xmm6,xmm6
  421433:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  42143d:	vpcmpeqd xmm3,xmm3,xmm3
  421441:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm3
  42144b:	vmovdqu XMMWORD PTR [rsi+rax*4+0x10],xmm6
  421451:	vmovdqu XMMWORD PTR [rsi+rax*4],xmm7
  421456:	add    rax,0x8
  42145a:	vpaddq ymm1,ymm1,ymm5
  42145e:	vpaddq ymm0,ymm0,ymm5
  421462:	add    rdi,0x40
  421466:	cmp    r9,rax
  421469:	jne    4213d0 <flatcc_builder_end_union_vector@@Base+0x360>
  42146f:	jmp    421127 <flatcc_builder_end_union_vector@@Base+0xb7>
  421474:	lea    rdi,[rip+0x18103]        # 43957e <flatcc_builder_padding_base@@Base+0xece>
  42147b:	lea    rsi,[rip+0x174c0]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421482:	lea    rcx,[rip+0x18127]        # 4395b0 <flatcc_builder_padding_base@@Base+0xf00>
  421489:	mov    edx,0x651
  42148e:	call   406070 <__assert_fail@plt>
  421493:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42149d:	nop    DWORD PTR [rax]

00000000004214a0 <flatcc_builder_union_vector_count@@Base>:
  4214a0:	mov    rax,QWORD PTR [rdi+0x30]
  4214a4:	mov    eax,DWORD PTR [rax+0x14]
  4214a7:	ret    
  4214a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004214b0 <flatcc_builder_union_vector_edit@@Base>:
  4214b0:	mov    rax,QWORD PTR [rdi+0x18]
  4214b4:	ret    
  4214b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4214bf:	nop

00000000004214c0 <flatcc_builder_extend_union_vector@@Base>:
  4214c0:	push   r14
  4214c2:	push   rbx
  4214c3:	push   rax
  4214c4:	mov    rax,QWORD PTR [rdi+0x30]
  4214c8:	mov    ecx,DWORD PTR [rax+0x14]
  4214cb:	add    ecx,esi
  4214cd:	jb     421554 <flatcc_builder_extend_union_vector@@Base+0x94>
  4214d3:	cmp    ecx,0x20000000
  4214d9:	jae    421554 <flatcc_builder_extend_union_vector@@Base+0x94>
  4214db:	mov    rbx,rdi
  4214de:	mov    DWORD PTR [rax+0x14],ecx
  4214e1:	mov    r14d,DWORD PTR [rdi+0x20]
  4214e5:	lea    eax,[r14+rsi*8]
  4214e9:	mov    DWORD PTR [rdi+0x20],eax
  4214ec:	cmp    eax,DWORD PTR [rdi+0x24]
  4214ef:	jae    4214f7 <flatcc_builder_extend_union_vector@@Base+0x37>
  4214f1:	mov    rax,QWORD PTR [rbx+0x18]
  4214f5:	jmp    421549 <flatcc_builder_extend_union_vector@@Base+0x89>
  4214f7:	inc    eax
  4214f9:	lea    rsi,[rbx+0x68]
  4214fd:	mov    rdi,QWORD PTR [rbx+0x40]
  421501:	mov    edx,DWORD PTR [rbx+0x28]
  421504:	add    rdx,rax
  421507:	mov    ecx,0x1
  42150c:	mov    r8d,0x1
  421512:	call   QWORD PTR [rbx+0x50]
  421515:	test   eax,eax
  421517:	je     42151d <flatcc_builder_extend_union_vector@@Base+0x5d>
  421519:	xor    eax,eax
  42151b:	jmp    42154c <flatcc_builder_extend_union_vector@@Base+0x8c>
  42151d:	mov    ecx,DWORD PTR [rbx+0x28]
  421520:	mov    rax,rcx
  421523:	add    rax,QWORD PTR [rbx+0x68]
  421527:	mov    QWORD PTR [rbx+0x18],rax
  42152b:	mov    edx,DWORD PTR [rbx+0x70]
  42152e:	sub    edx,ecx
  421530:	cmp    edx,0xfffffffc
  421533:	mov    ecx,0xfffffffc
  421538:	cmovb  ecx,edx
  42153b:	mov    DWORD PTR [rbx+0x24],ecx
  42153e:	mov    rcx,QWORD PTR [rbx+0x30]
  421542:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  421549:	add    rax,r14
  42154c:	add    rsp,0x8
  421550:	pop    rbx
  421551:	pop    r14
  421553:	ret    
  421554:	lea    rdi,[rip+0x184b0]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  42155b:	lea    rsi,[rip+0x173e0]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421562:	lea    rcx,[rip+0x184bd]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  421569:	mov    edx,0x37c
  42156e:	call   406070 <__assert_fail@plt>
  421573:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42157d:	nop    DWORD PTR [rax]

0000000000421580 <flatcc_builder_truncate_union_vector@@Base>:
  421580:	push   rax
  421581:	mov    rax,QWORD PTR [rdi+0x30]
  421585:	cmp    WORD PTR [rax+0xe],0x7
  42158a:	jne    4215bb <flatcc_builder_truncate_union_vector@@Base+0x3b>
  42158c:	mov    rdx,rsi
  42158f:	mov    ecx,DWORD PTR [rax+0x14]
  421592:	sub    ecx,edx
  421594:	jb     4215da <flatcc_builder_truncate_union_vector@@Base+0x5a>
  421596:	mov    DWORD PTR [rax+0x14],ecx
  421599:	mov    rax,QWORD PTR [rdi+0x30]
  42159d:	imul   edx,DWORD PTR [rax+0x10]
  4215a1:	mov    eax,DWORD PTR [rdi+0x20]
  4215a4:	sub    eax,edx
  4215a6:	mov    DWORD PTR [rdi+0x20],eax
  4215a9:	add    rax,QWORD PTR [rdi+0x18]
  4215ad:	mov    rdi,rax
  4215b0:	xor    esi,esi
  4215b2:	call   406080 <memset@plt>
  4215b7:	xor    eax,eax
  4215b9:	pop    rcx
  4215ba:	ret    
  4215bb:	lea    rdi,[rip+0x17fbc]        # 43957e <flatcc_builder_padding_base@@Base+0xece>
  4215c2:	lea    rsi,[rip+0x17379]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4215c9:	lea    rcx,[rip+0x18033]        # 439603 <flatcc_builder_padding_base@@Base+0xf53>
  4215d0:	mov    edx,0x681
  4215d5:	call   406070 <__assert_fail@plt>
  4215da:	lea    rdi,[rip+0x17a01]        # 438fe2 <flatcc_builder_padding_base@@Base+0x932>
  4215e1:	lea    rsi,[rip+0x1735a]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4215e8:	lea    rcx,[rip+0x18014]        # 439603 <flatcc_builder_padding_base@@Base+0xf53>
  4215ef:	mov    edx,0x682
  4215f4:	call   406070 <__assert_fail@plt>
  4215f9:	nop    DWORD PTR [rax+0x0]

0000000000421600 <flatcc_builder_union_vector_push@@Base>:
  421600:	push   r15
  421602:	push   r14
  421604:	push   rbx
  421605:	mov    rax,QWORD PTR [rdi+0x30]
  421609:	cmp    WORD PTR [rax+0xe],0x7
  42160e:	jne    4216a7 <flatcc_builder_union_vector_push@@Base+0xa7>
  421614:	mov    ecx,DWORD PTR [rax+0x14]
  421617:	cmp    ecx,0x1fffffff
  42161d:	je     421669 <flatcc_builder_union_vector_push@@Base+0x69>
  42161f:	mov    r14,rsi
  421622:	mov    rbx,rdi
  421625:	inc    ecx
  421627:	mov    DWORD PTR [rax+0x14],ecx
  42162a:	mov    r15d,DWORD PTR [rdi+0x20]
  42162e:	lea    eax,[r15+0x8]
  421632:	mov    DWORD PTR [rdi+0x20],eax
  421635:	cmp    eax,DWORD PTR [rdi+0x24]
  421638:	jae    421645 <flatcc_builder_union_vector_push@@Base+0x45>
  42163a:	mov    rax,QWORD PTR [rbx+0x18]
  42163e:	add    rax,r15
  421641:	jne    42169e <flatcc_builder_union_vector_push@@Base+0x9e>
  421643:	jmp    421669 <flatcc_builder_union_vector_push@@Base+0x69>
  421645:	lea    eax,[r15+0x9]
  421649:	lea    rsi,[rbx+0x68]
  42164d:	mov    rdi,QWORD PTR [rbx+0x40]
  421651:	mov    edx,DWORD PTR [rbx+0x28]
  421654:	add    rdx,rax
  421657:	mov    ecx,0x1
  42165c:	mov    r8d,0x1
  421662:	call   QWORD PTR [rbx+0x50]
  421665:	test   eax,eax
  421667:	je     42166d <flatcc_builder_union_vector_push@@Base+0x6d>
  421669:	xor    eax,eax
  42166b:	jmp    4216a1 <flatcc_builder_union_vector_push@@Base+0xa1>
  42166d:	mov    ecx,DWORD PTR [rbx+0x28]
  421670:	mov    rax,rcx
  421673:	add    rax,QWORD PTR [rbx+0x68]
  421677:	mov    QWORD PTR [rbx+0x18],rax
  42167b:	mov    edx,DWORD PTR [rbx+0x70]
  42167e:	sub    edx,ecx
  421680:	cmp    edx,0xfffffffc
  421683:	mov    ecx,0xfffffffc
  421688:	cmovb  ecx,edx
  42168b:	mov    DWORD PTR [rbx+0x24],ecx
  42168e:	mov    rcx,QWORD PTR [rbx+0x30]
  421692:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  421699:	add    rax,r15
  42169c:	je     421669 <flatcc_builder_union_vector_push@@Base+0x69>
  42169e:	mov    QWORD PTR [rax],r14
  4216a1:	pop    rbx
  4216a2:	pop    r14
  4216a4:	pop    r15
  4216a6:	ret    
  4216a7:	lea    rdi,[rip+0x17ed0]        # 43957e <flatcc_builder_padding_base@@Base+0xece>
  4216ae:	lea    rsi,[rip+0x1728d]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4216b5:	lea    rcx,[rip+0x17f8c]        # 439648 <flatcc_builder_padding_base@@Base+0xf98>
  4216bc:	mov    edx,0x68d
  4216c1:	call   406070 <__assert_fail@plt>
  4216c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004216d0 <flatcc_builder_append_union_vector@@Base>:
  4216d0:	push   r15
  4216d2:	push   r14
  4216d4:	push   r13
  4216d6:	push   r12
  4216d8:	push   rbx
  4216d9:	mov    rax,QWORD PTR [rdi+0x30]
  4216dd:	cmp    WORD PTR [rax+0xe],0x7
  4216e2:	jne    4217be <flatcc_builder_append_union_vector@@Base+0xee>
  4216e8:	mov    r15,rdx
  4216eb:	mov    ecx,DWORD PTR [rax+0x14]
  4216ee:	add    ecx,r15d
  4216f1:	jb     42179f <flatcc_builder_append_union_vector@@Base+0xcf>
  4216f7:	cmp    ecx,0x20000000
  4216fd:	jae    42179f <flatcc_builder_append_union_vector@@Base+0xcf>
  421703:	mov    r14,rsi
  421706:	mov    rbx,rdi
  421709:	mov    DWORD PTR [rax+0x14],ecx
  42170c:	mov    r13d,DWORD PTR [rdi+0x20]
  421710:	lea    eax,[r13+r15*8+0x0]
  421715:	mov    DWORD PTR [rdi+0x20],eax
  421718:	cmp    eax,DWORD PTR [rdi+0x24]
  42171b:	jae    421728 <flatcc_builder_append_union_vector@@Base+0x58>
  42171d:	mov    r12,QWORD PTR [rbx+0x18]
  421721:	add    r12,r13
  421724:	jne    421780 <flatcc_builder_append_union_vector@@Base+0xb0>
  421726:	jmp    42174a <flatcc_builder_append_union_vector@@Base+0x7a>
  421728:	inc    eax
  42172a:	lea    rsi,[rbx+0x68]
  42172e:	mov    rdi,QWORD PTR [rbx+0x40]
  421732:	mov    edx,DWORD PTR [rbx+0x28]
  421735:	add    rdx,rax
  421738:	mov    ecx,0x1
  42173d:	mov    r8d,0x1
  421743:	call   QWORD PTR [rbx+0x50]
  421746:	test   eax,eax
  421748:	je     42174f <flatcc_builder_append_union_vector@@Base+0x7f>
  42174a:	xor    r12d,r12d
  42174d:	jmp    421792 <flatcc_builder_append_union_vector@@Base+0xc2>
  42174f:	mov    eax,DWORD PTR [rbx+0x28]
  421752:	mov    r12,rax
  421755:	add    r12,QWORD PTR [rbx+0x68]
  421759:	mov    QWORD PTR [rbx+0x18],r12
  42175d:	mov    ecx,DWORD PTR [rbx+0x70]
  421760:	sub    ecx,eax
  421762:	cmp    ecx,0xfffffffc
  421765:	mov    eax,0xfffffffc
  42176a:	cmovb  eax,ecx
  42176d:	mov    DWORD PTR [rbx+0x24],eax
  421770:	mov    rax,QWORD PTR [rbx+0x30]
  421774:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42177b:	add    r12,r13
  42177e:	je     42174a <flatcc_builder_append_union_vector@@Base+0x7a>
  421780:	shl    r15d,0x3
  421784:	mov    edx,r15d
  421787:	mov    rdi,r12
  42178a:	mov    rsi,r14
  42178d:	call   4060d0 <memcpy@plt>
  421792:	mov    rax,r12
  421795:	pop    rbx
  421796:	pop    r12
  421798:	pop    r13
  42179a:	pop    r14
  42179c:	pop    r15
  42179e:	ret    
  42179f:	lea    rdi,[rip+0x18265]        # 439a0b <flatcc_builder_padding_base@@Base+0x135b>
  4217a6:	lea    rsi,[rip+0x17195]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4217ad:	lea    rcx,[rip+0x18272]        # 439a26 <flatcc_builder_padding_base@@Base+0x1376>
  4217b4:	mov    edx,0x37c
  4217b9:	call   406070 <__assert_fail@plt>
  4217be:	lea    rdi,[rip+0x17db9]        # 43957e <flatcc_builder_padding_base@@Base+0xece>
  4217c5:	lea    rsi,[rip+0x17176]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4217cc:	lea    rcx,[rip+0x17ee2]        # 4396b5 <flatcc_builder_padding_base@@Base+0x1005>
  4217d3:	mov    edx,0x69c
  4217d8:	call   406070 <__assert_fail@plt>
  4217dd:	nop    DWORD PTR [rax]

00000000004217e0 <flatcc_builder_create_string@@Base>:
  4217e0:	push   rbp
  4217e1:	push   rbx
  4217e2:	sub    rsp,0x98
  4217e9:	xor    ebp,ebp
  4217eb:	mov    rax,rdx
  4217ee:	shr    rax,0x20
  4217f2:	jne    4218c6 <flatcc_builder_create_string@@Base+0xe6>
  4217f8:	mov    rbx,rdi
  4217fb:	mov    DWORD PTR [rsp+0x4],edx
  4217ff:	mov    ebp,DWORD PTR [rdi+0xf0]
  421805:	mov    eax,edx
  421807:	not    eax
  421809:	add    eax,ebp
  42180b:	and    eax,0x3
  42180e:	inc    eax
  421810:	mov    QWORD PTR [rsp+0x8],0x4
  421819:	lea    rcx,[rsp+0x4]
  42181e:	mov    QWORD PTR [rsp+0x18],rcx
  421823:	mov    QWORD PTR [rsp+0x20],0x4
  42182c:	mov    DWORD PTR [rsp+0x10],0x1
  421834:	test   rdx,rdx
  421837:	je     42185b <flatcc_builder_create_string@@Base+0x7b>
  421839:	lea    rcx,[rdx+0x4]
  42183d:	mov    QWORD PTR [rsp+0x8],rcx
  421842:	mov    QWORD PTR [rsp+0x28],rsi
  421847:	mov    QWORD PTR [rsp+0x30],rdx
  42184c:	mov    DWORD PTR [rsp+0x10],0x2
  421854:	mov    edx,0x2
  421859:	jmp    421865 <flatcc_builder_create_string@@Base+0x85>
  42185b:	mov    ecx,0x4
  421860:	mov    edx,0x1
  421865:	mov    esi,eax
  421867:	lea    r8,[rcx+rsi*1]
  42186b:	mov    QWORD PTR [rsp+0x8],r8
  421870:	mov    eax,edx
  421872:	shl    rax,0x4
  421876:	lea    rdi,[rip+0x16e33]        # 4386b0 <flatcc_builder_padding_base@@Base>
  42187d:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  421882:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  421887:	inc    edx
  421889:	mov    DWORD PTR [rsp+0x10],edx
  42188d:	cmp    r8,0x11
  421891:	setb   al
  421894:	add    rcx,rsi
  421897:	add    rcx,0xfffffffffffffff0
  42189b:	shr    rcx,0x20
  42189f:	sete   cl
  4218a2:	test   r8d,r8d
  4218a5:	jle    4218d2 <flatcc_builder_create_string@@Base+0xf2>
  4218a7:	or     al,cl
  4218a9:	je     4218d2 <flatcc_builder_create_string@@Base+0xf2>
  4218ab:	sub    ebp,r8d
  4218ae:	mov    rdi,QWORD PTR [rbx+0x38]
  4218b2:	lea    rsi,[rsp+0x18]
  4218b7:	mov    ecx,ebp
  4218b9:	call   QWORD PTR [rbx+0x48]
  4218bc:	test   eax,eax
  4218be:	jne    4218f1 <flatcc_builder_create_string@@Base+0x111>
  4218c0:	mov    DWORD PTR [rbx+0xf0],ebp
  4218c6:	mov    eax,ebp
  4218c8:	add    rsp,0x98
  4218cf:	pop    rbx
  4218d0:	pop    rbp
  4218d1:	ret    
  4218d2:	lea    rdi,[rip+0x18229]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4218d9:	lea    rsi,[rip+0x17062]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4218e0:	lea    rcx,[rip+0x180da]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  4218e7:	mov    edx,0x287
  4218ec:	call   406070 <__assert_fail@plt>
  4218f1:	lea    rdi,[rip+0x1820a]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  4218f8:	lea    rsi,[rip+0x17043]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  4218ff:	lea    rcx,[rip+0x180bb]        # 4399c1 <flatcc_builder_padding_base@@Base+0x1311>
  421906:	mov    edx,0x28b
  42190b:	call   406070 <__assert_fail@plt>

0000000000421910 <flatcc_builder_create_string_str@@Base>:
  421910:	push   r14
  421912:	push   rbx
  421913:	push   rax
  421914:	mov    rbx,rsi
  421917:	mov    r14,rdi
  42191a:	mov    rdi,rsi
  42191d:	call   406060 <strlen@plt>
  421922:	mov    rdi,r14
  421925:	mov    rsi,rbx
  421928:	mov    rdx,rax
  42192b:	add    rsp,0x8
  42192f:	pop    rbx
  421930:	pop    r14
  421932:	jmp    4217e0 <flatcc_builder_create_string@@Base>
  421937:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421940 <flatcc_builder_create_string_strn@@Base>:
  421940:	push   r15
  421942:	push   r14
  421944:	push   rbx
  421945:	mov    rbx,rdx
  421948:	mov    r14,rsi
  42194b:	mov    r15,rdi
  42194e:	mov    rdi,rsi
  421951:	xor    esi,esi
  421953:	call   4060a0 <memchr@plt>
  421958:	mov    rcx,rax
  42195b:	sub    rcx,r14
  42195e:	test   rax,rax
  421961:	cmovne rbx,rcx
  421965:	mov    rdi,r15
  421968:	mov    rsi,r14
  42196b:	mov    rdx,rbx
  42196e:	pop    rbx
  42196f:	pop    r14
  421971:	pop    r15
  421973:	jmp    4217e0 <flatcc_builder_create_string@@Base>
  421978:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421980 <flatcc_builder_end_string@@Base>:
  421980:	push   rbp
  421981:	push   rbx
  421982:	push   rax
  421983:	mov    rax,QWORD PTR [rdi+0x30]
  421987:	cmp    WORD PTR [rax+0xe],0x6
  42198c:	jne    421a24 <flatcc_builder_end_string@@Base+0xa4>
  421992:	mov    rbx,rdi
  421995:	mov    edx,DWORD PTR [rax+0x14]
  421998:	cmp    edx,DWORD PTR [rdi+0x20]
  42199b:	jne    421a43 <flatcc_builder_end_string@@Base+0xc3>
  4219a1:	mov    rsi,QWORD PTR [rbx+0x18]
  4219a5:	mov    rdi,rbx
  4219a8:	call   4217e0 <flatcc_builder_create_string@@Base>
  4219ad:	mov    ebp,eax
  4219af:	test   eax,eax
  4219b1:	je     421a1b <flatcc_builder_end_string@@Base+0x9b>
  4219b3:	mov    rdi,QWORD PTR [rbx+0x18]
  4219b7:	mov    edx,DWORD PTR [rbx+0x20]
  4219ba:	xor    esi,esi
  4219bc:	call   406080 <memset@plt>
  4219c1:	mov    rax,QWORD PTR [rbx+0x30]
  4219c5:	mov    ecx,DWORD PTR [rax+0x8]
  4219c8:	mov    DWORD PTR [rbx+0x20],ecx
  4219cb:	mov    ecx,DWORD PTR [rax]
  4219cd:	mov    DWORD PTR [rbx+0x28],ecx
  4219d0:	mov    edx,DWORD PTR [rax+0x4]
  4219d3:	mov    rsi,rcx
  4219d6:	add    rsi,QWORD PTR [rbx+0x68]
  4219da:	mov    QWORD PTR [rbx+0x18],rsi
  4219de:	mov    esi,DWORD PTR [rbx+0x70]
  4219e1:	sub    esi,ecx
  4219e3:	cmp    esi,edx
  4219e5:	cmova  esi,edx
  4219e8:	mov    DWORD PTR [rbx+0x24],esi
  4219eb:	movzx  ecx,WORD PTR [rbx+0xea]
  4219f2:	cmp    WORD PTR [rbx+0xe8],cx
  4219f9:	jae    421a02 <flatcc_builder_end_string@@Base+0x82>
  4219fb:	mov    WORD PTR [rbx+0xe8],cx
  421a02:	movzx  ecx,WORD PTR [rax+0xc]
  421a06:	mov    WORD PTR [rbx+0xea],cx
  421a0d:	add    rax,0xffffffffffffffdc
  421a11:	mov    QWORD PTR [rbx+0x30],rax
  421a15:	dec    DWORD PTR [rbx+0x104]
  421a1b:	mov    eax,ebp
  421a1d:	add    rsp,0x8
  421a21:	pop    rbx
  421a22:	pop    rbp
  421a23:	ret    
  421a24:	lea    rdi,[rip+0x17456]        # 438e81 <flatcc_builder_padding_base@@Base+0x7d1>
  421a2b:	lea    rsi,[rip+0x16f10]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421a32:	lea    rcx,[rip+0x17cfb]        # 439734 <flatcc_builder_padding_base@@Base+0x1084>
  421a39:	mov    edx,0x6c4
  421a3e:	call   406070 <__assert_fail@plt>
  421a43:	lea    rdi,[rip+0x17d2d]        # 439777 <flatcc_builder_padding_base@@Base+0x10c7>
  421a4a:	lea    rsi,[rip+0x16ef1]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421a51:	lea    rcx,[rip+0x17cdc]        # 439734 <flatcc_builder_padding_base@@Base+0x1084>
  421a58:	mov    edx,0x6c5
  421a5d:	call   406070 <__assert_fail@plt>
  421a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a6c:	nop    DWORD PTR [rax+0x0]

0000000000421a70 <flatcc_builder_string_edit@@Base>:
  421a70:	mov    rax,QWORD PTR [rdi+0x18]
  421a74:	ret    
  421a75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a7f:	nop

0000000000421a80 <flatcc_builder_string_len@@Base>:
  421a80:	mov    rax,QWORD PTR [rdi+0x30]
  421a84:	mov    eax,DWORD PTR [rax+0x14]
  421a87:	ret    
  421a88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421a90 <flatcc_builder_table_edit@@Base>:
  421a90:	push   rax
  421a91:	mov    rax,QWORD PTR [rdi+0x30]
  421a95:	cmp    WORD PTR [rax+0xe],0x3
  421a9a:	jne    421aa8 <flatcc_builder_table_edit@@Base+0x18>
  421a9c:	mov    eax,DWORD PTR [rdi+0x20]
  421a9f:	add    rax,QWORD PTR [rdi+0x18]
  421aa3:	sub    rax,rsi
  421aa6:	pop    rcx
  421aa7:	ret    
  421aa8:	lea    rdi,[rip+0x176c2]        # 439171 <flatcc_builder_padding_base@@Base+0xac1>
  421aaf:	lea    rsi,[rip+0x16e8c]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421ab6:	lea    rcx,[rip+0x17d6c]        # 439829 <flatcc_builder_padding_base@@Base+0x1179>
  421abd:	mov    edx,0x702
  421ac2:	call   406070 <__assert_fail@plt>
  421ac7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421ad0 <flatcc_builder_table_add_copy@@Base>:
  421ad0:	push   r15
  421ad2:	push   r14
  421ad4:	push   rbx
  421ad5:	mov    r15,rcx
  421ad8:	mov    r14,rdx
  421adb:	mov    rdx,rcx
  421ade:	mov    ecx,r8d
  421ae1:	call   420a40 <flatcc_builder_table_add@@Base>
  421ae6:	mov    rbx,rax
  421ae9:	test   rax,rax
  421aec:	je     421afc <flatcc_builder_table_add_copy@@Base+0x2c>
  421aee:	mov    rdi,rbx
  421af1:	mov    rsi,r14
  421af4:	mov    rdx,r15
  421af7:	call   4060d0 <memcpy@plt>
  421afc:	mov    rax,rbx
  421aff:	pop    rbx
  421b00:	pop    r14
  421b02:	pop    r15
  421b04:	ret    
  421b05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b0f:	nop

0000000000421b10 <flatcc_builder_push_buffer_alignment@@Base>:
  421b10:	movzx  eax,WORD PTR [rdi+0xe8]
  421b17:	mov    WORD PTR [rdi+0xe8],0x4
  421b20:	ret    
  421b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421b30 <flatcc_builder_pop_buffer_alignment@@Base>:
  421b30:	cmp    WORD PTR [rdi+0xe8],si
  421b37:	jae    421b40 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  421b39:	mov    WORD PTR [rdi+0xe8],si
  421b40:	ret    
  421b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421b50 <flatcc_builder_get_buffer_alignment@@Base>:
  421b50:	movzx  eax,WORD PTR [rdi+0xe8]
  421b57:	ret    
  421b58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421b60 <flatcc_builder_set_vtable_clustering@@Base>:
  421b60:	xor    eax,eax
  421b62:	test   esi,esi
  421b64:	sete   al
  421b67:	mov    DWORD PTR [rdi+0x124],eax
  421b6d:	ret    
  421b6e:	xchg   ax,ax

0000000000421b70 <flatcc_builder_set_block_align@@Base>:
  421b70:	mov    WORD PTR [rdi+0xec],si
  421b77:	ret    
  421b78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421b80 <flatcc_builder_get_level@@Base>:
  421b80:	mov    eax,DWORD PTR [rdi+0x104]
  421b86:	ret    
  421b87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421b90 <flatcc_builder_set_max_level@@Base>:
  421b90:	mov    DWORD PTR [rdi+0x120],esi
  421b96:	cmp    DWORD PTR [rdi+0x108],esi
  421b9c:	jge    421ba4 <flatcc_builder_set_max_level@@Base+0x14>
  421b9e:	mov    DWORD PTR [rdi+0x108],esi
  421ba4:	ret    
  421ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421baf:	nop

0000000000421bb0 <flatcc_builder_get_buffer_size@@Base>:
  421bb0:	movsxd rax,DWORD PTR [rdi+0xf4]
  421bb7:	movsxd rcx,DWORD PTR [rdi+0xf0]
  421bbe:	sub    rax,rcx
  421bc1:	ret    
  421bc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421bcc:	nop    DWORD PTR [rax+0x0]

0000000000421bd0 <flatcc_builder_get_buffer_start@@Base>:
  421bd0:	mov    eax,DWORD PTR [rdi+0xf0]
  421bd6:	ret    
  421bd7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421be0 <flatcc_builder_get_buffer_end@@Base>:
  421be0:	mov    eax,DWORD PTR [rdi+0xf4]
  421be6:	ret    
  421be7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421bf0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  421bf0:	mov    QWORD PTR [rdi+0x118],rsi
  421bf7:	ret    
  421bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421c00 <flatcc_builder_set_identifier@@Base>:
  421c00:	test   rsi,rsi
  421c03:	jne    421c0c <flatcc_builder_set_identifier@@Base+0xc>
  421c05:	lea    rsi,[rip+0x16aa4]        # 4386b0 <flatcc_builder_padding_base@@Base>
  421c0c:	mov    eax,DWORD PTR [rsi]
  421c0e:	mov    DWORD PTR [rdi+0x110],eax
  421c14:	ret    
  421c15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c1f:	nop

0000000000421c20 <flatcc_builder_get_type@@Base>:
  421c20:	mov    rax,QWORD PTR [rdi+0x30]
  421c24:	test   rax,rax
  421c27:	je     421c2e <flatcc_builder_get_type@@Base+0xe>
  421c29:	movzx  eax,WORD PTR [rax+0xe]
  421c2d:	ret    
  421c2e:	xor    eax,eax
  421c30:	ret    
  421c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421c40 <flatcc_builder_get_type_at@@Base>:
  421c40:	xor    eax,eax
  421c42:	test   esi,esi
  421c44:	jle    421c62 <flatcc_builder_get_type_at@@Base+0x22>
  421c46:	mov    ecx,DWORD PTR [rdi+0x104]
  421c4c:	cmp    ecx,esi
  421c4e:	jl     421c62 <flatcc_builder_get_type_at@@Base+0x22>
  421c50:	mov    rax,QWORD PTR [rdi+0x30]
  421c54:	sub    esi,ecx
  421c56:	movsxd rcx,esi
  421c59:	lea    rcx,[rcx+rcx*8]
  421c5d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  421c62:	ret    
  421c63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c6d:	nop    DWORD PTR [rax]

0000000000421c70 <flatcc_builder_get_direct_buffer@@Base>:
  421c70:	cmp    DWORD PTR [rdi+0x128],0x0
  421c77:	je     421c89 <flatcc_builder_get_direct_buffer@@Base+0x19>
  421c79:	mov    rax,QWORD PTR [rdi+0x130]
  421c80:	cmp    rax,QWORD PTR [rdi+0x138]
  421c87:	je     421c98 <flatcc_builder_get_direct_buffer@@Base+0x28>
  421c89:	test   rsi,rsi
  421c8c:	je     421c95 <flatcc_builder_get_direct_buffer@@Base+0x25>
  421c8e:	mov    QWORD PTR [rsi],0x0
  421c95:	xor    eax,eax
  421c97:	ret    
  421c98:	test   rsi,rsi
  421c9b:	je     421ca7 <flatcc_builder_get_direct_buffer@@Base+0x37>
  421c9d:	mov    rax,QWORD PTR [rdi+0x160]
  421ca4:	mov    QWORD PTR [rsi],rax
  421ca7:	mov    rax,QWORD PTR [rdi+0x140]
  421cae:	ret    
  421caf:	nop

0000000000421cb0 <flatcc_builder_copy_buffer@@Base>:
  421cb0:	push   rax
  421cb1:	cmp    DWORD PTR [rdi+0x128],0x0
  421cb8:	je     421ccd <flatcc_builder_copy_buffer@@Base+0x1d>
  421cba:	add    rdi,0x130
  421cc1:	call   422530 <flatcc_emitter_copy_buffer@@Base>
  421cc6:	test   rax,rax
  421cc9:	je     421cd1 <flatcc_builder_copy_buffer@@Base+0x21>
  421ccb:	pop    rcx
  421ccc:	ret    
  421ccd:	xor    eax,eax
  421ccf:	pop    rcx
  421cd0:	ret    
  421cd1:	lea    rdi,[rip+0x12f65]        # 434c3d <_IO_stdin_used@@Base+0xc3d>
  421cd8:	lea    rsi,[rip+0x16c63]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421cdf:	lea    rcx,[rip+0x17bce]        # 4398b4 <flatcc_builder_padding_base@@Base+0x1204>
  421ce6:	mov    edx,0x786
  421ceb:	call   406070 <__assert_fail@plt>

0000000000421cf0 <flatcc_builder_finalize_buffer@@Base>:
  421cf0:	push   r15
  421cf2:	push   r14
  421cf4:	push   rbx
  421cf5:	mov    rbx,rdi
  421cf8:	movsxd r14,DWORD PTR [rdi+0xf4]
  421cff:	movsxd rax,DWORD PTR [rdi+0xf0]
  421d06:	sub    r14,rax
  421d09:	test   rsi,rsi
  421d0c:	je     421d11 <flatcc_builder_finalize_buffer@@Base+0x21>
  421d0e:	mov    QWORD PTR [rsi],r14
  421d11:	mov    rdi,r14
  421d14:	call   4060e0 <malloc@plt>
  421d19:	test   rax,rax
  421d1c:	je     421d4d <flatcc_builder_finalize_buffer@@Base+0x5d>
  421d1e:	cmp    DWORD PTR [rbx+0x128],0x0
  421d25:	je     421d6c <flatcc_builder_finalize_buffer@@Base+0x7c>
  421d27:	mov    r15,rax
  421d2a:	add    rbx,0x130
  421d31:	mov    rdi,rbx
  421d34:	mov    rsi,rax
  421d37:	mov    rdx,r14
  421d3a:	call   422530 <flatcc_emitter_copy_buffer@@Base>
  421d3f:	test   rax,rax
  421d42:	je     421d8b <flatcc_builder_finalize_buffer@@Base+0x9b>
  421d44:	mov    rax,r15
  421d47:	pop    rbx
  421d48:	pop    r14
  421d4a:	pop    r15
  421d4c:	ret    
  421d4d:	lea    rdi,[rip+0x17dae]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  421d54:	lea    rsi,[rip+0x16be7]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421d5b:	lea    rcx,[rip+0x17b97]        # 4398f9 <flatcc_builder_padding_base@@Base+0x1249>
  421d62:	mov    edx,0x798
  421d67:	call   406070 <__assert_fail@plt>
  421d6c:	lea    rdi,[rip+0x17d8f]        # 439b02 <flatcc_builder_padding_base@@Base+0x1452>
  421d73:	lea    rsi,[rip+0x16bc8]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421d7a:	lea    rcx,[rip+0x17b78]        # 4398f9 <flatcc_builder_padding_base@@Base+0x1249>
  421d81:	mov    edx,0x79c
  421d86:	call   406070 <__assert_fail@plt>
  421d8b:	lea    rdi,[rip+0x12eab]        # 434c3d <_IO_stdin_used@@Base+0xc3d>
  421d92:	lea    rsi,[rip+0x16ba9]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421d99:	lea    rcx,[rip+0x17b14]        # 4398b4 <flatcc_builder_padding_base@@Base+0x1204>
  421da0:	mov    edx,0x786
  421da5:	call   406070 <__assert_fail@plt>
  421daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421db0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  421db0:	push   r15
  421db2:	push   r14
  421db4:	push   r12
  421db6:	push   rbx
  421db7:	push   rax
  421db8:	mov    r14,rsi
  421dbb:	mov    r15,rdi
  421dbe:	movsxd rax,DWORD PTR [rdi+0xf4]
  421dc5:	movsxd rcx,DWORD PTR [rdi+0xf0]
  421dcc:	sub    rax,rcx
  421dcf:	test   rsi,rsi
  421dd2:	je     421dd7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  421dd4:	mov    QWORD PTR [r14],rax
  421dd7:	movzx  ecx,WORD PTR [r15+0xe8]
  421ddf:	add    rax,rcx
  421de2:	add    rax,0xffffffffffffffff
  421de6:	mov    rbx,rcx
  421de9:	neg    rbx
  421dec:	and    rbx,rax
  421def:	cmp    rcx,0x8
  421df3:	mov    QWORD PTR [rsp],0x0
  421dfb:	mov    esi,0x8
  421e00:	cmova  rsi,rcx
  421e04:	mov    rdi,rsp
  421e07:	mov    rdx,rbx
  421e0a:	call   406140 <posix_memalign@plt>
  421e0f:	mov    r12,QWORD PTR [rsp]
  421e13:	test   eax,eax
  421e15:	je     421e26 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  421e17:	test   r12,r12
  421e1a:	je     421e26 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  421e1c:	mov    rdi,r12
  421e1f:	call   406030 <free@plt>
  421e24:	jmp    421e6e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  421e26:	test   r12,r12
  421e29:	je     421e6e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  421e2b:	cmp    DWORD PTR [r15+0x128],0x0
  421e33:	je     421e1c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  421e35:	add    r15,0x130
  421e3c:	mov    rdi,r15
  421e3f:	mov    rsi,r12
  421e42:	mov    rdx,rbx
  421e45:	call   422530 <flatcc_emitter_copy_buffer@@Base>
  421e4a:	test   rax,rax
  421e4d:	jne    421e7d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  421e4f:	lea    rdi,[rip+0x12de7]        # 434c3d <_IO_stdin_used@@Base+0xc3d>
  421e56:	lea    rsi,[rip+0x16ae5]        # 438942 <flatcc_builder_padding_base@@Base+0x292>
  421e5d:	lea    rcx,[rip+0x17a50]        # 4398b4 <flatcc_builder_padding_base@@Base+0x1204>
  421e64:	mov    edx,0x786
  421e69:	call   406070 <__assert_fail@plt>
  421e6e:	test   r14,r14
  421e71:	je     421e7a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  421e73:	mov    QWORD PTR [r14],0x0
  421e7a:	xor    r12d,r12d
  421e7d:	mov    rax,r12
  421e80:	add    rsp,0x8
  421e84:	pop    rbx
  421e85:	pop    r12
  421e87:	pop    r14
  421e89:	pop    r15
  421e8b:	ret    
  421e8c:	nop    DWORD PTR [rax+0x0]

0000000000421e90 <flatcc_builder_aligned_alloc@@Base>:
  421e90:	push   rax
  421e91:	mov    rdx,rsi
  421e94:	mov    QWORD PTR [rsp],0x0
  421e9c:	cmp    rdi,0x8
  421ea0:	mov    esi,0x8
  421ea5:	cmova  rsi,rdi
  421ea9:	mov    rdi,rsp
  421eac:	call   406140 <posix_memalign@plt>
  421eb1:	mov    ecx,eax
  421eb3:	mov    rax,QWORD PTR [rsp]
  421eb7:	test   ecx,ecx
  421eb9:	je     421ed2 <flatcc_builder_aligned_alloc@@Base+0x42>
  421ebb:	test   rax,rax
  421ebe:	je     421ed2 <flatcc_builder_aligned_alloc@@Base+0x42>
  421ec0:	mov    rdi,rax
  421ec3:	call   406030 <free@plt>
  421ec8:	mov    QWORD PTR [rsp],0x0
  421ed0:	xor    eax,eax
  421ed2:	pop    rcx
  421ed3:	ret    
  421ed4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421ede:	xchg   ax,ax

0000000000421ee0 <flatcc_builder_aligned_free@@Base>:
  421ee0:	jmp    406030 <free@plt>
  421ee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421eef:	nop

0000000000421ef0 <flatcc_builder_get_emit_context@@Base>:
  421ef0:	mov    rax,QWORD PTR [rdi+0x38]
  421ef4:	ret    
  421ef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421eff:	nop

0000000000421f00 <flatcc_emitter_recycle_page@@Base>:
  421f00:	mov    rcx,QWORD PTR [rdi]
  421f03:	mov    eax,0xffffffff
  421f08:	cmp    rcx,rsi
  421f0b:	je     421f62 <flatcc_emitter_recycle_page@@Base+0x62>
  421f0d:	cmp    QWORD PTR [rdi+0x8],rsi
  421f11:	je     421f62 <flatcc_emitter_recycle_page@@Base+0x62>
  421f13:	mov    rax,QWORD PTR [rsi+0xb80]
  421f1a:	mov    rdx,QWORD PTR [rsi+0xb88]
  421f21:	mov    QWORD PTR [rax+0xb88],rdx
  421f28:	mov    rdx,QWORD PTR [rsi+0xb88]
  421f2f:	mov    QWORD PTR [rdx+0xb80],rax
  421f36:	mov    rax,QWORD PTR [rcx+0xb88]
  421f3d:	mov    QWORD PTR [rsi+0xb88],rax
  421f44:	mov    QWORD PTR [rsi+0xb80],rcx
  421f4b:	mov    QWORD PTR [rax+0xb80],rsi
  421f52:	mov    rax,QWORD PTR [rsi+0xb80]
  421f59:	mov    QWORD PTR [rax+0xb88],rsi
  421f60:	xor    eax,eax
  421f62:	ret    
  421f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f6d:	nop    DWORD PTR [rax]

0000000000421f70 <flatcc_emitter_reset@@Base>:
  421f70:	push   r14
  421f72:	push   rbx
  421f73:	push   rax
  421f74:	mov    rax,QWORD PTR [rdi]
  421f77:	test   rax,rax
  421f7a:	je     42205b <flatcc_emitter_reset@@Base+0xeb>
  421f80:	mov    rbx,rdi
  421f83:	mov    QWORD PTR [rdi+0x8],rax
  421f87:	lea    rcx,[rax+0x5c0]
  421f8e:	mov    QWORD PTR [rdi+0x10],rcx
  421f92:	mov    QWORD PTR [rdi+0x20],rcx
  421f96:	mov    QWORD PTR [rdi+0x18],0x5c0
  421f9e:	mov    QWORD PTR [rdi+0x28],0x5c0
  421fa6:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  421fb0:	mov    rcx,QWORD PTR [rdi+0x30]
  421fb4:	mov    rdx,QWORD PTR [rdi+0x40]
  421fb8:	test   rdx,rdx
  421fbb:	jne    421fc4 <flatcc_emitter_reset@@Base+0x54>
  421fbd:	mov    QWORD PTR [rbx+0x40],rcx
  421fc1:	mov    rdx,rcx
  421fc4:	lea    rdx,[rdx+rdx*2]
  421fc8:	shr    rdx,0x2
  421fcc:	shr    rcx,0x2
  421fd0:	add    rcx,rdx
  421fd3:	mov    QWORD PTR [rbx+0x40],rcx
  421fd7:	mov    QWORD PTR [rbx+0x30],0x0
  421fdf:	add    rcx,rcx
  421fe2:	cmp    rcx,QWORD PTR [rbx+0x38]
  421fe6:	jae    42205b <flatcc_emitter_reset@@Base+0xeb>
  421fe8:	mov    rdi,QWORD PTR [rax+0xb80]
  421fef:	cmp    rdi,rax
  421ff2:	je     42205b <flatcc_emitter_reset@@Base+0xeb>
  421ff4:	lea    rcx,[rax+0xb80]
  421ffb:	mov    r14,0xfffffffffffff480
  422002:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42200c:	nop    DWORD PTR [rax+0x0]
  422010:	mov    rdx,QWORD PTR [rdi+0xb80]
  422017:	mov    QWORD PTR [rcx],rdx
  42201a:	mov    rcx,QWORD PTR [rdi+0xb80]
  422021:	mov    QWORD PTR [rcx+0xb88],rax
  422028:	call   406030 <free@plt>
  42202d:	mov    rax,QWORD PTR [rbx+0x38]
  422031:	add    rax,r14
  422034:	mov    QWORD PTR [rbx+0x38],rax
  422038:	mov    rcx,QWORD PTR [rbx+0x40]
  42203c:	add    rcx,rcx
  42203f:	cmp    rcx,rax
  422042:	jae    42205b <flatcc_emitter_reset@@Base+0xeb>
  422044:	mov    rax,QWORD PTR [rbx+0x8]
  422048:	lea    rcx,[rax+0xb80]
  42204f:	mov    rdi,QWORD PTR [rax+0xb80]
  422056:	cmp    rdi,QWORD PTR [rbx]
  422059:	jne    422010 <flatcc_emitter_reset@@Base+0xa0>
  42205b:	add    rsp,0x8
  42205f:	pop    rbx
  422060:	pop    r14
  422062:	ret    
  422063:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42206d:	nop    DWORD PTR [rax]

0000000000422070 <flatcc_emitter_clear@@Base>:
  422070:	push   r14
  422072:	push   rbx
  422073:	push   rax
  422074:	mov    rbx,QWORD PTR [rdi]
  422077:	test   rbx,rbx
  42207a:	je     4220dc <flatcc_emitter_clear@@Base+0x6c>
  42207c:	mov    r14,rdi
  42207f:	mov    rax,QWORD PTR [rbx+0xb88]
  422086:	mov    QWORD PTR [rax+0xb80],0x0
  422091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42209b:	nop    DWORD PTR [rax+rax*1+0x0]
  4220a0:	mov    rax,QWORD PTR [rbx+0xb80]
  4220a7:	test   rax,rax
  4220aa:	je     4220bd <flatcc_emitter_clear@@Base+0x4d>
  4220ac:	mov    rbx,rax
  4220af:	mov    rdi,QWORD PTR [rax+0xb88]
  4220b6:	call   406030 <free@plt>
  4220bb:	jmp    4220a0 <flatcc_emitter_clear@@Base+0x30>
  4220bd:	mov    rdi,rbx
  4220c0:	call   406030 <free@plt>
  4220c5:	vxorps xmm0,xmm0,xmm0
  4220c9:	vmovups YMMWORD PTR [r14+0x20],ymm0
  4220cf:	vmovups YMMWORD PTR [r14],ymm0
  4220d4:	mov    QWORD PTR [r14+0x40],0x0
  4220dc:	add    rsp,0x8
  4220e0:	pop    rbx
  4220e1:	pop    r14
  4220e3:	vzeroupper 
  4220e6:	ret    
  4220e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004220f0 <flatcc_emitter@@Base>:
  4220f0:	push   rbp
  4220f1:	push   r15
  4220f3:	push   r14
  4220f5:	push   r13
  4220f7:	push   r12
  4220f9:	push   rbx
  4220fa:	push   rax
  4220fb:	mov    r14d,edx
  4220fe:	mov    r12,rsi
  422101:	mov    rbp,rdi
  422104:	add    QWORD PTR [rdi+0x30],r8
  422108:	test   ecx,ecx
  42210a:	js     422285 <flatcc_emitter@@Base+0x195>
  422110:	mov    rdx,QWORD PTR [rbp+0x28]
  422114:	cmp    rdx,r8
  422117:	jae    422438 <flatcc_emitter@@Base+0x348>
  42211d:	xor    eax,eax
  42211f:	test   r14d,r14d
  422122:	je     422517 <flatcc_emitter@@Base+0x427>
  422128:	mov    r15,QWORD PTR [r12+0x8]
  42212d:	test   r15,r15
  422130:	je     422270 <flatcc_emitter@@Base+0x180>
  422136:	mov    r13,QWORD PTR [r12]
  42213a:	jmp    422169 <flatcc_emitter@@Base+0x79>
  42213c:	mov    rbx,r15
  42213f:	mov    rdi,QWORD PTR [rbp+0x20]
  422143:	mov    rsi,r13
  422146:	mov    rdx,rbx
  422149:	call   4060d0 <memcpy@plt>
  42214e:	add    QWORD PTR [rbp+0x20],rbx
  422152:	add    r13,rbx
  422155:	mov    rdx,QWORD PTR [rbp+0x28]
  422159:	sub    rdx,rbx
  42215c:	mov    QWORD PTR [rbp+0x28],rdx
  422160:	sub    r15,rbx
  422163:	je     422270 <flatcc_emitter@@Base+0x180>
  422169:	mov    rbx,r15
  42216c:	cmp    r15,rdx
  42216f:	jbe    42213f <flatcc_emitter@@Base+0x4f>
  422171:	mov    rbx,rdx
  422174:	test   rbx,rbx
  422177:	je     4221e1 <flatcc_emitter@@Base+0xf1>
  422179:	jmp    42213f <flatcc_emitter@@Base+0x4f>
  42217b:	nop    DWORD PTR [rax+rax*1+0x0]
  422180:	mov    QWORD PTR [rax+0xb88],rbx
  422187:	mov    rcx,QWORD PTR [rbp+0x0]
  42218b:	mov    QWORD PTR [rax+0xb80],rcx
  422192:	mov    QWORD PTR [rcx+0xb88],rax
  422199:	mov    QWORD PTR [rbx+0xb80],rax
  4221a0:	mov    QWORD PTR [rbp+0x8],rax
  4221a4:	mov    QWORD PTR [rbp+0x20],rax
  4221a8:	mov    QWORD PTR [rbp+0x28],0xb80
  4221b0:	mov    rcx,QWORD PTR [rax+0xb88]
  4221b7:	mov    ecx,DWORD PTR [rcx+0xb90]
  4221bd:	mov    edx,0xb80
  4221c2:	add    ecx,edx
  4221c4:	mov    DWORD PTR [rax+0xb90],ecx
  4221ca:	mov    ebx,0xb80
  4221cf:	cmp    r15,rbx
  4221d2:	jbe    42213c <flatcc_emitter@@Base+0x4c>
  4221d8:	test   rbx,rbx
  4221db:	jne    42213f <flatcc_emitter@@Base+0x4f>
  4221e1:	mov    rbx,QWORD PTR [rbp+0x8]
  4221e5:	test   rbx,rbx
  4221e8:	je     4221f7 <flatcc_emitter@@Base+0x107>
  4221ea:	mov    rax,QWORD PTR [rbx+0xb80]
  4221f1:	cmp    rax,QWORD PTR [rbp+0x0]
  4221f5:	jne    4221a0 <flatcc_emitter@@Base+0xb0>
  4221f7:	mov    edi,0xb98
  4221fc:	call   4060e0 <malloc@plt>
  422201:	test   rax,rax
  422204:	je     42244a <flatcc_emitter@@Base+0x35a>
  42220a:	add    QWORD PTR [rbp+0x38],0xb80
  422212:	test   rbx,rbx
  422215:	jne    422180 <flatcc_emitter@@Base+0x90>
  42221b:	mov    QWORD PTR [rbp+0x0],rax
  42221f:	mov    QWORD PTR [rbp+0x8],rax
  422223:	mov    QWORD PTR [rax+0xb80],rax
  42222a:	mov    QWORD PTR [rax+0xb88],rax
  422231:	mov    rcx,rax
  422234:	add    rcx,0x5c0
  42223b:	mov    QWORD PTR [rbp+0x10],rcx
  42223f:	mov    QWORD PTR [rbp+0x20],rcx
  422243:	mov    QWORD PTR [rbp+0x18],0x5c0
  42224b:	mov    QWORD PTR [rbp+0x28],0x5c0
  422253:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42225d:	mov    ebx,0x5c0
  422262:	cmp    r15,rbx
  422265:	ja     4221d8 <flatcc_emitter@@Base+0xe8>
  42226b:	jmp    42213c <flatcc_emitter@@Base+0x4c>
  422270:	dec    r14d
  422273:	add    r12,0x10
  422277:	test   r14d,r14d
  42227a:	jne    422128 <flatcc_emitter@@Base+0x38>
  422280:	jmp    422515 <flatcc_emitter@@Base+0x425>
  422285:	lea    rsi,[rbp+0x18]
  422289:	mov    rdx,QWORD PTR [rbp+0x18]
  42228d:	cmp    rdx,r8
  422290:	jae    422454 <flatcc_emitter@@Base+0x364>
  422296:	xor    eax,eax
  422298:	test   r14d,r14d
  42229b:	je     422517 <flatcc_emitter@@Base+0x427>
  4222a1:	mov    QWORD PTR [rsp],rsi
  4222a5:	movsxd rax,r14d
  4222a8:	shl    rax,0x4
  4222ac:	add    r12,rax
  4222af:	mov    edx,0xfffff480
  4222b4:	mov    r15,QWORD PTR [r12-0x8]
  4222b9:	add    r12,0xfffffffffffffff0
  4222bd:	test   r15,r15
  4222c0:	je     42242a <flatcc_emitter@@Base+0x33a>
  4222c6:	mov    r13,QWORD PTR [r12]
  4222ca:	add    r13,r15
  4222cd:	jmp    422301 <flatcc_emitter@@Base+0x211>
  4222cf:	nop
  4222d0:	mov    rbx,r15
  4222d3:	mov    rdi,QWORD PTR [rbp+0x10]
  4222d7:	sub    rdi,rbx
  4222da:	mov    QWORD PTR [rbp+0x10],rdi
  4222de:	sub    rax,rbx
  4222e1:	mov    QWORD PTR [rbp+0x18],rax
  4222e5:	sub    r13,rbx
  4222e8:	mov    rsi,r13
  4222eb:	mov    rdx,rbx
  4222ee:	call   4060d0 <memcpy@plt>
  4222f3:	mov    edx,0xfffff480
  4222f8:	sub    r15,rbx
  4222fb:	je     42242a <flatcc_emitter@@Base+0x33a>
  422301:	mov    rax,QWORD PTR [rsp]
  422305:	mov    rax,QWORD PTR [rax]
  422308:	cmp    r15,rax
  42230b:	ja     422358 <flatcc_emitter@@Base+0x268>
  42230d:	jmp    4222d0 <flatcc_emitter@@Base+0x1e0>
  42230f:	nop
  422310:	mov    ecx,DWORD PTR [rbx+0xb90]
  422316:	add    ecx,edx
  422318:	mov    DWORD PTR [rax+0xb90],ecx
  42231e:	mov    QWORD PTR [rbp+0x0],rax
  422322:	lea    rcx,[rax+0xb80]
  422329:	mov    QWORD PTR [rbp+0x10],rcx
  42232d:	mov    QWORD PTR [rbp+0x18],0xb80
  422335:	mov    rcx,QWORD PTR [rax+0xb80]
  42233c:	mov    ecx,DWORD PTR [rcx+0xb90]
  422342:	add    ecx,edx
  422344:	mov    DWORD PTR [rax+0xb90],ecx
  42234a:	mov    eax,0xb80
  42234f:	cmp    r15,rax
  422352:	jbe    4222d0 <flatcc_emitter@@Base+0x1e0>
  422358:	mov    rbx,rax
  42235b:	test   rax,rax
  42235e:	jne    4222d3 <flatcc_emitter@@Base+0x1e3>
  422364:	mov    rbx,QWORD PTR [rbp+0x0]
  422368:	test   rbx,rbx
  42236b:	je     42237a <flatcc_emitter@@Base+0x28a>
  42236d:	mov    rax,QWORD PTR [rbx+0xb88]
  422374:	cmp    rax,QWORD PTR [rbp+0x8]
  422378:	jne    422310 <flatcc_emitter@@Base+0x220>
  42237a:	mov    edi,0xb98
  42237f:	call   4060e0 <malloc@plt>
  422384:	test   rax,rax
  422387:	je     42244a <flatcc_emitter@@Base+0x35a>
  42238d:	add    QWORD PTR [rbp+0x38],0xb80
  422395:	test   rbx,rbx
  422398:	je     4223d0 <flatcc_emitter@@Base+0x2e0>
  42239a:	mov    rcx,QWORD PTR [rbp+0x8]
  42239e:	mov    QWORD PTR [rax+0xb88],rcx
  4223a5:	mov    QWORD PTR [rax+0xb80],rbx
  4223ac:	mov    QWORD PTR [rbx+0xb88],rax
  4223b3:	mov    QWORD PTR [rcx+0xb80],rax
  4223ba:	mov    QWORD PTR [rbp+0x0],rax
  4223be:	mov    edx,0xfffff480
  4223c3:	jmp    422322 <flatcc_emitter@@Base+0x232>
  4223c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4223d0:	mov    QWORD PTR [rbp+0x0],rax
  4223d4:	mov    QWORD PTR [rbp+0x8],rax
  4223d8:	mov    QWORD PTR [rax+0xb80],rax
  4223df:	mov    QWORD PTR [rax+0xb88],rax
  4223e6:	mov    rcx,rax
  4223e9:	add    rcx,0x5c0
  4223f0:	mov    QWORD PTR [rbp+0x10],rcx
  4223f4:	mov    QWORD PTR [rbp+0x20],rcx
  4223f8:	mov    QWORD PTR [rbp+0x18],0x5c0
  422400:	mov    QWORD PTR [rbp+0x28],0x5c0
  422408:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  422412:	mov    eax,0x5c0
  422417:	mov    edx,0xfffff480
  42241c:	cmp    r15,rax
  42241f:	ja     422358 <flatcc_emitter@@Base+0x268>
  422425:	jmp    4222d0 <flatcc_emitter@@Base+0x1e0>
  42242a:	dec    r14d
  42242d:	jne    4222b4 <flatcc_emitter@@Base+0x1c4>
  422433:	jmp    422515 <flatcc_emitter@@Base+0x425>
  422438:	lea    rsi,[rbp+0x28]
  42243c:	mov    rbx,QWORD PTR [rbp+0x20]
  422440:	lea    rcx,[rbx+r8*1]
  422444:	mov    QWORD PTR [rbp+0x20],rcx
  422448:	jmp    42245f <flatcc_emitter@@Base+0x36f>
  42244a:	mov    eax,0xffffffff
  42244f:	jmp    422517 <flatcc_emitter@@Base+0x427>
  422454:	mov    rbx,QWORD PTR [rbp+0x10]
  422458:	sub    rbx,r8
  42245b:	mov    QWORD PTR [rbp+0x10],rbx
  42245f:	sub    rdx,r8
  422462:	mov    QWORD PTR [rsi],rdx
  422465:	xor    eax,eax
  422467:	test   r14d,r14d
  42246a:	je     422517 <flatcc_emitter@@Base+0x427>
  422470:	lea    r15d,[r14-0x1]
  422474:	mov    r13d,r14d
  422477:	and    r13d,0x3
  42247b:	je     4224a4 <flatcc_emitter@@Base+0x3b4>
  42247d:	xor    ebp,ebp
  42247f:	nop
  422480:	mov    rsi,QWORD PTR [r12]
  422484:	mov    rdx,QWORD PTR [r12+0x8]
  422489:	mov    rdi,rbx
  42248c:	call   4060d0 <memcpy@plt>
  422491:	add    rbx,QWORD PTR [r12+0x8]
  422496:	add    r12,0x10
  42249a:	inc    ebp
  42249c:	cmp    r13d,ebp
  42249f:	jne    422480 <flatcc_emitter@@Base+0x390>
  4224a1:	sub    r14d,ebp
  4224a4:	cmp    r15d,0x3
  4224a8:	jb     422515 <flatcc_emitter@@Base+0x425>
  4224aa:	nop    WORD PTR [rax+rax*1+0x0]
  4224b0:	mov    rsi,QWORD PTR [r12]
  4224b4:	mov    rdx,QWORD PTR [r12+0x8]
  4224b9:	mov    rdi,rbx
  4224bc:	call   4060d0 <memcpy@plt>
  4224c1:	add    rbx,QWORD PTR [r12+0x8]
  4224c6:	mov    rsi,QWORD PTR [r12+0x10]
  4224cb:	mov    rdx,QWORD PTR [r12+0x18]
  4224d0:	mov    rdi,rbx
  4224d3:	call   4060d0 <memcpy@plt>
  4224d8:	add    rbx,QWORD PTR [r12+0x18]
  4224dd:	mov    rsi,QWORD PTR [r12+0x20]
  4224e2:	mov    rdx,QWORD PTR [r12+0x28]
  4224e7:	mov    rdi,rbx
  4224ea:	call   4060d0 <memcpy@plt>
  4224ef:	add    rbx,QWORD PTR [r12+0x28]
  4224f4:	mov    rsi,QWORD PTR [r12+0x30]
  4224f9:	mov    rdx,QWORD PTR [r12+0x38]
  4224fe:	mov    rdi,rbx
  422501:	call   4060d0 <memcpy@plt>
  422506:	add    rbx,QWORD PTR [r12+0x38]
  42250b:	add    r12,0x40
  42250f:	add    r14d,0xfffffffc
  422513:	jne    4224b0 <flatcc_emitter@@Base+0x3c0>
  422515:	xor    eax,eax
  422517:	add    rsp,0x8
  42251b:	pop    rbx
  42251c:	pop    r12
  42251e:	pop    r13
  422520:	pop    r14
  422522:	pop    r15
  422524:	pop    rbp
  422525:	ret    
  422526:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000422530 <flatcc_emitter_copy_buffer@@Base>:
  422530:	push   r15
  422532:	push   r14
  422534:	push   r13
  422536:	push   r12
  422538:	push   rbx
  422539:	mov    rax,rdx
  42253c:	mov    rdx,QWORD PTR [rdi+0x30]
  422540:	cmp    rdx,rax
  422543:	ja     4225db <flatcc_emitter_copy_buffer@@Base+0xab>
  422549:	mov    r14,rdi
  42254c:	mov    rax,QWORD PTR [rdi]
  42254f:	test   rax,rax
  422552:	je     4225db <flatcc_emitter_copy_buffer@@Base+0xab>
  422558:	mov    r12,rsi
  42255b:	cmp    rax,QWORD PTR [r14+0x8]
  42255f:	je     4225eb <flatcc_emitter_copy_buffer@@Base+0xbb>
  422565:	mov    r15d,0xb80
  42256b:	mov    r13d,0xb80
  422571:	sub    r13,QWORD PTR [r14+0x18]
  422575:	mov    rsi,QWORD PTR [r14+0x10]
  422579:	mov    rdi,r12
  42257c:	mov    rdx,r13
  42257f:	call   4060d0 <memcpy@plt>
  422584:	add    r13,r12
  422587:	mov    rax,QWORD PTR [r14]
  42258a:	mov    rbx,QWORD PTR [rax+0xb80]
  422591:	cmp    rbx,QWORD PTR [r14+0x8]
  422595:	je     4225c4 <flatcc_emitter_copy_buffer@@Base+0x94>
  422597:	nop    WORD PTR [rax+rax*1+0x0]
  4225a0:	mov    edx,0xb80
  4225a5:	mov    rdi,r13
  4225a8:	mov    rsi,rbx
  4225ab:	call   4060d0 <memcpy@plt>
  4225b0:	add    r13,0xb80
  4225b7:	mov    rbx,QWORD PTR [rbx+0xb80]
  4225be:	cmp    rbx,QWORD PTR [r14+0x8]
  4225c2:	jne    4225a0 <flatcc_emitter_copy_buffer@@Base+0x70>
  4225c4:	sub    r15,QWORD PTR [r14+0x28]
  4225c8:	mov    rdi,r13
  4225cb:	mov    rsi,rbx
  4225ce:	mov    rdx,r15
  4225d1:	call   4060d0 <memcpy@plt>
  4225d6:	mov    r12,r13
  4225d9:	jmp    4225de <flatcc_emitter_copy_buffer@@Base+0xae>
  4225db:	xor    r12d,r12d
  4225de:	mov    rax,r12
  4225e1:	pop    rbx
  4225e2:	pop    r12
  4225e4:	pop    r13
  4225e6:	pop    r14
  4225e8:	pop    r15
  4225ea:	ret    
  4225eb:	mov    rsi,QWORD PTR [r14+0x10]
  4225ef:	mov    rdi,r12
  4225f2:	call   4060d0 <memcpy@plt>
  4225f7:	jmp    4225de <flatcc_emitter_copy_buffer@@Base+0xae>
  4225f9:	nop    DWORD PTR [rax+0x0]

0000000000422600 <flatcc_verify_error_string@@Base>:
  422600:	cmp    edi,0x24
  422603:	ja     422614 <flatcc_verify_error_string@@Base+0x14>
  422605:	movsxd rax,edi
  422608:	lea    rcx,[rip+0x20591]        # 442ba0 <flatcc_builder_padding_base@@Base+0xa4f0>
  42260f:	mov    rax,QWORD PTR [rcx+rax*8]
  422613:	ret    
  422614:	lea    rax,[rip+0x179a5]        # 439fc0 <flatcc_builder_padding_base@@Base+0x1910>
  42261b:	ret    
  42261c:	nop    DWORD PTR [rax+0x0]

0000000000422620 <flatcc_verify_field@@Base>:
  422620:	lea    esi,[rsi+rsi*1]
  422623:	add    esi,0x4
  422626:	xor    eax,eax
  422628:	cmp    si,WORD PTR [rdi+0x1e]
  42262c:	jae    422671 <flatcc_verify_field@@Base+0x51>
  42262e:	mov    r8,QWORD PTR [rdi+0x10]
  422632:	movzx  esi,si
  422635:	movzx  esi,WORD PTR [r8+rsi*1]
  42263a:	test   esi,esi
  42263c:	je     422671 <flatcc_verify_field@@Base+0x51>
  42263e:	add    edx,esi
  422640:	movzx  r8d,WORD PTR [rdi+0x1c]
  422645:	mov    eax,0xd
  42264a:	cmp    edx,r8d
  42264d:	ja     422671 <flatcc_verify_field@@Base+0x51>
  42264f:	add    esi,DWORD PTR [rdi]
  422651:	mov    edx,DWORD PTR [rdi+0x18]
  422654:	add    edx,esi
  422656:	movzx  ecx,cx
  422659:	dec    ecx
  42265b:	mov    eax,0x0
  422660:	test   edx,ecx
  422662:	je     422671 <flatcc_verify_field@@Base+0x51>
  422664:	add    esi,DWORD PTR [rdi+0x18]
  422667:	and    esi,ecx
  422669:	mov    eax,0xc
  42266e:	cmove  eax,esi
  422671:	ret    
  422672:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42267c:	nop    DWORD PTR [rax+0x0]

0000000000422680 <flatcc_verify_string_field@@Base>:
  422680:	lea    eax,[rsi+rsi*1]
  422683:	add    eax,0x4
  422686:	cmp    ax,WORD PTR [rdi+0x1e]
  42268a:	jae    4226ba <flatcc_verify_string_field@@Base+0x3a>
  42268c:	mov    rcx,QWORD PTR [rdi+0x10]
  422690:	movzx  eax,ax
  422693:	movzx  esi,WORD PTR [rcx+rax*1]
  422697:	test   esi,esi
  422699:	je     4226ba <flatcc_verify_string_field@@Base+0x3a>
  42269b:	lea    ecx,[rsi+0x4]
  42269e:	movzx  edx,WORD PTR [rdi+0x1c]
  4226a2:	mov    eax,0xd
  4226a7:	cmp    ecx,edx
  4226a9:	ja     4226b9 <flatcc_verify_string_field@@Base+0x39>
  4226ab:	add    esi,DWORD PTR [rdi+0x18]
  4226ae:	mov    eax,0xc
  4226b3:	test   sil,0x3
  4226b7:	je     4226c5 <flatcc_verify_string_field@@Base+0x45>
  4226b9:	ret    
  4226ba:	xor    eax,eax
  4226bc:	test   edx,edx
  4226be:	setne  al
  4226c1:	shl    eax,0x2
  4226c4:	ret    
  4226c5:	test   esi,esi
  4226c7:	je     42271f <flatcc_verify_string_field@@Base+0x9f>
  4226c9:	mov    rcx,QWORD PTR [rdi]
  4226cc:	mov    eax,esi
  4226ce:	mov    edx,DWORD PTR [rcx+rax*1]
  4226d1:	add    edx,esi
  4226d3:	mov    eax,0x11
  4226d8:	cmp    edx,esi
  4226da:	jbe    4226b9 <flatcc_verify_string_field@@Base+0x39>
  4226dc:	mov    r8d,DWORD PTR [rdi+0x8]
  4226e0:	mov    edi,edx
  4226e2:	lea    rsi,[rdi+0x4]
  4226e6:	cmp    rsi,r8
  4226e9:	ja     4226b9 <flatcc_verify_string_field@@Base+0x39>
  4226eb:	mov    esi,edi
  4226ed:	and    esi,0x3
  4226f0:	test   rsi,rsi
  4226f3:	jne    4226b9 <flatcc_verify_string_field@@Base+0x39>
  4226f5:	mov    edi,DWORD PTR [rcx+rdi*1]
  4226f8:	add    edx,0x4
  4226fb:	sub    r8d,edx
  4226fe:	lea    esi,[rdi+0x1]
  422701:	mov    eax,0x8
  422706:	cmp    r8d,esi
  422709:	jb     4226b9 <flatcc_verify_string_field@@Base+0x39>
  42270b:	mov    eax,edx
  42270d:	add    rcx,rax
  422710:	xor    edx,edx
  422712:	cmp    BYTE PTR [rdi+rcx*1],0x0
  422716:	mov    eax,0x7
  42271b:	cmove  eax,edx
  42271e:	ret    
  42271f:	xor    eax,eax
  422721:	ret    
  422722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42272c:	nop    DWORD PTR [rax+0x0]

0000000000422730 <flatcc_verify_vector_field@@Base>:
  422730:	push   rbx
  422731:	lea    eax,[rsi+rsi*1]
  422734:	add    eax,0x4
  422737:	cmp    ax,WORD PTR [rdi+0x1e]
  42273b:	jae    42276e <flatcc_verify_vector_field@@Base+0x3e>
  42273d:	mov    rsi,QWORD PTR [rdi+0x10]
  422741:	movzx  eax,ax
  422744:	movzx  esi,WORD PTR [rsi+rax*1]
  422748:	test   esi,esi
  42274a:	je     42276e <flatcc_verify_vector_field@@Base+0x3e>
  42274c:	lea    r10d,[rsi+0x4]
  422750:	movzx  edx,WORD PTR [rdi+0x1c]
  422754:	mov    eax,0xd
  422759:	cmp    r10d,edx
  42275c:	ja     42276c <flatcc_verify_vector_field@@Base+0x3c>
  42275e:	add    esi,DWORD PTR [rdi+0x18]
  422761:	mov    eax,0xc
  422766:	test   sil,0x3
  42276a:	je     42277a <flatcc_verify_vector_field@@Base+0x4a>
  42276c:	pop    rbx
  42276d:	ret    
  42276e:	xor    eax,eax
  422770:	test   edx,edx
  422772:	setne  al
  422775:	shl    eax,0x2
  422778:	pop    rbx
  422779:	ret    
  42277a:	test   esi,esi
  42277c:	je     4227f2 <flatcc_verify_vector_field@@Base+0xc2>
  42277e:	mov    r10,QWORD PTR [rdi]
  422781:	mov    eax,esi
  422783:	mov    r11d,DWORD PTR [r10+rax*1]
  422787:	add    r11d,esi
  42278a:	cmp    r8w,0x4
  42278f:	mov    edx,0x4
  422794:	cmova  edx,r8d
  422798:	mov    eax,0x10
  42279d:	cmp    r11d,esi
  4227a0:	jbe    42276c <flatcc_verify_vector_field@@Base+0x3c>
  4227a2:	mov    r8d,DWORD PTR [rdi+0x8]
  4227a6:	mov    edi,r11d
  4227a9:	lea    rsi,[rdi+0x4]
  4227ad:	cmp    rsi,r8
  4227b0:	ja     42276c <flatcc_verify_vector_field@@Base+0x3c>
  4227b2:	movzx  edx,dx
  4227b5:	movabs rbx,0x1ffffffff
  4227bf:	add    rbx,rdx
  4227c2:	or     rbx,0x3
  4227c6:	test   rsi,rbx
  4227c9:	jne    42276c <flatcc_verify_vector_field@@Base+0x3c>
  4227cb:	mov    edx,DWORD PTR [r10+rdi*1]
  4227cf:	mov    eax,0x19
  4227d4:	cmp    edx,r9d
  4227d7:	ja     42276c <flatcc_verify_vector_field@@Base+0x3c>
  4227d9:	sub    r8d,r11d
  4227dc:	add    r8d,0xfffffffc
  4227e0:	imul   edx,ecx
  4227e3:	xor    ecx,ecx
  4227e5:	cmp    r8d,edx
  4227e8:	mov    eax,0x1a
  4227ed:	cmovae eax,ecx
  4227f0:	pop    rbx
  4227f1:	ret    
  4227f2:	xor    eax,eax
  4227f4:	pop    rbx
  4227f5:	ret    
  4227f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000422800 <flatcc_verify_string_vector_field@@Base>:
  422800:	push   r14
  422802:	push   rbx
  422803:	lea    eax,[rsi+rsi*1]
  422806:	add    eax,0x4
  422809:	cmp    ax,WORD PTR [rdi+0x1e]
  42280d:	jae    422939 <flatcc_verify_string_vector_field@@Base+0x139>
  422813:	mov    rcx,QWORD PTR [rdi+0x10]
  422817:	movzx  eax,ax
  42281a:	movzx  esi,WORD PTR [rcx+rax*1]
  42281e:	test   esi,esi
  422820:	je     422939 <flatcc_verify_string_vector_field@@Base+0x139>
  422826:	lea    ecx,[rsi+0x4]
  422829:	movzx  edx,WORD PTR [rdi+0x1c]
  42282d:	mov    eax,0xd
  422832:	cmp    ecx,edx
  422834:	ja     422943 <flatcc_verify_string_vector_field@@Base+0x143>
  42283a:	mov    edx,DWORD PTR [rdi+0x18]
  42283d:	lea    ebx,[rdx+rsi*1]
  422840:	mov    eax,0xc
  422845:	test   bl,0x3
  422848:	jne    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  42284e:	test   ebx,ebx
  422850:	je     422935 <flatcc_verify_string_vector_field@@Base+0x135>
  422856:	mov    r10,QWORD PTR [rdi]
  422859:	mov    eax,ebx
  42285b:	mov    r14d,DWORD PTR [r10+rax*1]
  42285f:	lea    ecx,[r14+rbx*1]
  422863:	mov    eax,0x10
  422868:	cmp    ecx,ebx
  42286a:	jbe    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  422870:	mov    r8d,DWORD PTR [rdi+0x8]
  422874:	mov    edi,ecx
  422876:	lea    rbx,[rdi+0x4]
  42287a:	cmp    rbx,r8
  42287d:	ja     422943 <flatcc_verify_string_vector_field@@Base+0x143>
  422883:	and    ebx,0x3
  422886:	test   rbx,rbx
  422889:	jne    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  42288f:	mov    r9d,DWORD PTR [r10+rdi*1]
  422893:	mov    eax,0x19
  422898:	cmp    r9d,0x3fffffff
  42289f:	ja     422943 <flatcc_verify_string_vector_field@@Base+0x143>
  4228a5:	mov    edi,r8d
  4228a8:	sub    edi,ecx
  4228aa:	add    edi,0xfffffffc
  4228ad:	lea    ecx,[r9*4+0x0]
  4228b5:	mov    eax,0x1a
  4228ba:	cmp    edi,ecx
  4228bc:	jb     422943 <flatcc_verify_string_vector_field@@Base+0x143>
  4228c2:	test   r9d,r9d
  4228c5:	je     422935 <flatcc_verify_string_vector_field@@Base+0x135>
  4228c7:	lea    eax,[r14+rdx*1]
  4228cb:	lea    edi,[rsi+rax*1]
  4228ce:	add    edi,0x4
  4228d1:	mov    r11d,r8d
  4228d4:	sub    r11d,r14d
  4228d7:	sub    r11d,edx
  4228da:	sub    r11d,esi
  4228dd:	add    r11d,0xfffffff8
  4228e1:	mov    eax,edi
  4228e3:	mov    ecx,DWORD PTR [r10+rax*1]
  4228e7:	lea    edx,[rdi+rcx*1]
  4228ea:	mov    eax,0x11
  4228ef:	cmp    edx,edi
  4228f1:	jbe    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  4228f3:	mov    edx,edx
  4228f5:	lea    rsi,[rdx+0x4]
  4228f9:	cmp    rsi,r8
  4228fc:	ja     422943 <flatcc_verify_string_vector_field@@Base+0x143>
  4228fe:	mov    esi,edx
  422900:	and    esi,0x3
  422903:	test   rsi,rsi
  422906:	jne    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  422908:	mov    eax,DWORD PTR [r10+rdx*1]
  42290c:	mov    edx,r11d
  42290f:	sub    edx,ecx
  422911:	lea    esi,[rax+0x1]
  422914:	cmp    edx,esi
  422916:	jb     422947 <flatcc_verify_string_vector_field@@Base+0x147>
  422918:	lea    ecx,[rdi+rcx*1]
  42291b:	add    ecx,0x4
  42291e:	mov    ecx,ecx
  422920:	add    rcx,r10
  422923:	cmp    BYTE PTR [rax+rcx*1],0x0
  422927:	jne    42294e <flatcc_verify_string_vector_field@@Base+0x14e>
  422929:	add    edi,0x4
  42292c:	add    r11d,0xfffffffc
  422930:	dec    r9d
  422933:	jne    4228e1 <flatcc_verify_string_vector_field@@Base+0xe1>
  422935:	xor    eax,eax
  422937:	jmp    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  422939:	xor    eax,eax
  42293b:	test   edx,edx
  42293d:	setne  al
  422940:	shl    eax,0x2
  422943:	pop    rbx
  422944:	pop    r14
  422946:	ret    
  422947:	mov    eax,0x8
  42294c:	jmp    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  42294e:	mov    eax,0x7
  422953:	jmp    422943 <flatcc_verify_string_vector_field@@Base+0x143>
  422955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42295f:	nop

0000000000422960 <flatcc_verify_table_field@@Base>:
  422960:	sub    rsp,0x28
  422964:	lea    eax,[rsi+rsi*1]
  422967:	add    eax,0x4
  42296a:	cmp    ax,WORD PTR [rdi+0x1e]
  42296e:	jae    4229a4 <flatcc_verify_table_field@@Base+0x44>
  422970:	mov    rsi,QWORD PTR [rdi+0x10]
  422974:	movzx  eax,ax
  422977:	movzx  esi,WORD PTR [rsi+rax*1]
  42297b:	test   esi,esi
  42297d:	je     4229a4 <flatcc_verify_table_field@@Base+0x44>
  42297f:	lea    r8d,[rsi+0x4]
  422983:	movzx  edx,WORD PTR [rdi+0x1c]
  422987:	mov    eax,0xd
  42298c:	cmp    r8d,edx
  42298f:	ja     42299f <flatcc_verify_table_field@@Base+0x3f>
  422991:	add    esi,DWORD PTR [rdi+0x18]
  422994:	mov    eax,0xc
  422999:	test   sil,0x3
  42299d:	je     4229b3 <flatcc_verify_table_field@@Base+0x53>
  42299f:	add    rsp,0x28
  4229a3:	ret    
  4229a4:	xor    eax,eax
  4229a6:	test   edx,edx
  4229a8:	setne  al
  4229ab:	shl    eax,0x2
  4229ae:	add    rsp,0x28
  4229b2:	ret    
  4229b3:	test   esi,esi
  4229b5:	je     422a8f <flatcc_verify_table_field@@Base+0x12f>
  4229bb:	mov    r9,QWORD PTR [rdi]
  4229be:	mov    r8d,DWORD PTR [rdi+0x8]
  4229c2:	mov    eax,esi
  4229c4:	mov    edx,DWORD PTR [r9+rax*1]
  4229c8:	mov    eax,DWORD PTR [rdi+0xc]
  4229cb:	dec    eax
  4229cd:	mov    DWORD PTR [rsp+0x14],eax
  4229d1:	je     422a96 <flatcc_verify_table_field@@Base+0x136>
  4229d7:	add    edx,esi
  4229d9:	mov    eax,0xf
  4229de:	cmp    edx,esi
  4229e0:	jbe    42299f <flatcc_verify_table_field@@Base+0x3f>
  4229e2:	mov    esi,edx
  4229e4:	lea    rdi,[rsi+0x4]
  4229e8:	cmp    rdi,r8
  4229eb:	ja     42299f <flatcc_verify_table_field@@Base+0x3f>
  4229ed:	mov    edi,esi
  4229ef:	and    edi,0x3
  4229f2:	test   rdi,rdi
  4229f5:	jne    42299f <flatcc_verify_table_field@@Base+0x3f>
  4229f7:	mov    DWORD PTR [rsp+0x20],edx
  4229fb:	mov    edi,edx
  4229fd:	sub    edi,DWORD PTR [r9+rsi*1]
  422a01:	mov    eax,0x1d
  422a06:	test   edi,0x80000001
  422a0c:	jne    42299f <flatcc_verify_table_field@@Base+0x3f>
  422a0e:	mov    r10d,edi
  422a11:	lea    r11,[r10+0x2]
  422a15:	mov    eax,0x1b
  422a1a:	cmp    r11,r8
  422a1d:	ja     42299f <flatcc_verify_table_field@@Base+0x3f>
  422a1f:	movzx  esi,WORD PTR [r9+r10*1]
  422a24:	mov    WORD PTR [rsp+0x26],si
  422a29:	mov    eax,0x1e
  422a2e:	test   sil,0x1
  422a32:	jne    42299f <flatcc_verify_table_field@@Base+0x3f>
  422a38:	add    edi,esi
  422a3a:	cmp    edi,r8d
  422a3d:	ja     42299f <flatcc_verify_table_field@@Base+0x3f>
  422a43:	mov    eax,0x1c
  422a48:	cmp    si,0x4
  422a4c:	jb     42299f <flatcc_verify_table_field@@Base+0x3f>
  422a52:	mov    eax,r11d
  422a55:	movzx  esi,WORD PTR [r9+rax*1]
  422a5a:	mov    WORD PTR [rsp+0x24],si
  422a5f:	mov    edi,r8d
  422a62:	sub    edi,edx
  422a64:	mov    eax,0x14
  422a69:	cmp    edi,esi
  422a6b:	jb     42299f <flatcc_verify_table_field@@Base+0x3f>
  422a71:	add    r10,r9
  422a74:	mov    QWORD PTR [rsp+0x18],r10
  422a79:	mov    QWORD PTR [rsp+0x8],r9
  422a7e:	mov    DWORD PTR [rsp+0x10],r8d
  422a83:	lea    rdi,[rsp+0x8]
  422a88:	call   rcx
  422a8a:	add    rsp,0x28
  422a8e:	ret    
  422a8f:	xor    eax,eax
  422a91:	add    rsp,0x28
  422a95:	ret    
  422a96:	mov    eax,0x3
  422a9b:	add    rsp,0x28
  422a9f:	ret    

0000000000422aa0 <flatcc_verify_table_vector_field@@Base>:
  422aa0:	push   rbp
  422aa1:	push   r15
  422aa3:	push   r14
  422aa5:	push   r13
  422aa7:	push   r12
  422aa9:	push   rbx
  422aaa:	sub    rsp,0x28
  422aae:	lea    eax,[rsi+rsi*1]
  422ab1:	add    eax,0x4
  422ab4:	cmp    ax,WORD PTR [rdi+0x1e]
  422ab8:	jae    422c90 <flatcc_verify_table_vector_field@@Base+0x1f0>
  422abe:	mov    rbx,rcx
  422ac1:	mov    rcx,QWORD PTR [rdi+0x10]
  422ac5:	movzx  eax,ax
  422ac8:	movzx  ecx,WORD PTR [rcx+rax*1]
  422acc:	test   ecx,ecx
  422ace:	je     422c90 <flatcc_verify_table_vector_field@@Base+0x1f0>
  422ad4:	lea    edx,[rcx+0x4]
  422ad7:	movzx  esi,WORD PTR [rdi+0x1c]
  422adb:	mov    eax,0xd
  422ae0:	cmp    edx,esi
  422ae2:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422ae8:	mov    edx,DWORD PTR [rdi+0x18]
  422aeb:	lea    esi,[rdx+rcx*1]
  422aee:	mov    eax,0xc
  422af3:	test   sil,0x3
  422af7:	jne    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422afd:	test   esi,esi
  422aff:	je     422c8c <flatcc_verify_table_vector_field@@Base+0x1ec>
  422b05:	mov    r13d,DWORD PTR [rdi+0xc]
  422b09:	test   r13d,r13d
  422b0c:	jle    422ca9 <flatcc_verify_table_vector_field@@Base+0x209>
  422b12:	mov    r15,QWORD PTR [rdi]
  422b15:	mov    eax,esi
  422b17:	mov    r8d,DWORD PTR [r15+rax*1]
  422b1b:	lea    ebp,[r8+rsi*1]
  422b1f:	mov    eax,0x10
  422b24:	cmp    ebp,esi
  422b26:	jbe    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422b2c:	mov    r9d,DWORD PTR [rdi+0x8]
  422b30:	mov    esi,ebp
  422b32:	lea    rdi,[rsi+0x4]
  422b36:	cmp    rdi,r9
  422b39:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422b3f:	and    edi,0x3
  422b42:	test   rdi,rdi
  422b45:	jne    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422b4b:	mov    r12d,DWORD PTR [r15+rsi*1]
  422b4f:	mov    eax,0x19
  422b54:	cmp    r12d,0x3fffffff
  422b5b:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422b61:	mov    esi,r9d
  422b64:	sub    esi,ebp
  422b66:	add    esi,0xfffffffc
  422b69:	lea    edi,[r12*4+0x0]
  422b71:	mov    eax,0x1a
  422b76:	cmp    esi,edi
  422b78:	jb     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422b7e:	test   r12d,r12d
  422b81:	je     422c8c <flatcc_verify_table_vector_field@@Base+0x1ec>
  422b87:	add    r13d,0xfffffffe
  422b8b:	lea    eax,[r8+rdx*1]
  422b8f:	lea    r14d,[rcx+rax*1]
  422b93:	add    r14d,0x4
  422b97:	mov    r11d,r9d
  422b9a:	sub    r11d,r8d
  422b9d:	sub    r11d,edx
  422ba0:	sub    r11d,ecx
  422ba3:	add    r11d,0xfffffffc
  422ba7:	mov    QWORD PTR [rsp+0x20],r9
  422bac:	mov    r14d,r14d
  422baf:	mov    ecx,DWORD PTR [r15+r14*1]
  422bb3:	mov    DWORD PTR [rsp+0xc],r13d
  422bb8:	test   r13d,r13d
  422bbb:	je     422d69 <flatcc_verify_table_vector_field@@Base+0x2c9>
  422bc1:	lea    eax,[r14+rcx*1]
  422bc5:	cmp    eax,r14d
  422bc8:	jbe    422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422bce:	mov    edx,eax
  422bd0:	lea    rsi,[rdx+0x4]
  422bd4:	cmp    rsi,r9
  422bd7:	ja     422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422bdd:	mov    esi,edx
  422bdf:	and    esi,0x3
  422be2:	test   rsi,rsi
  422be5:	jne    422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422beb:	mov    DWORD PTR [rsp+0x18],eax
  422bef:	mov    edx,DWORD PTR [r15+rdx*1]
  422bf3:	mov    eax,ecx
  422bf5:	sub    eax,edx
  422bf7:	add    eax,r14d
  422bfa:	test   eax,0x80000001
  422bff:	jne    422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c05:	mov    eax,eax
  422c07:	lea    rsi,[rax+0x2]
  422c0b:	cmp    rsi,r9
  422c0e:	ja     422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c14:	movzx  ebp,WORD PTR [r15+rax*1]
  422c19:	mov    WORD PTR [rsp+0x1e],bp
  422c1e:	cmp    ebp,0x4
  422c21:	jb     422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c27:	mov    edi,ebp
  422c29:	and    edi,0x1
  422c2c:	test   di,di
  422c2f:	jne    422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c31:	add    ebp,ecx
  422c33:	sub    ebp,edx
  422c35:	add    ebp,r14d
  422c38:	cmp    ebp,r9d
  422c3b:	ja     422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c3d:	mov    edx,esi
  422c3f:	movzx  edx,WORD PTR [r15+rdx*1]
  422c44:	mov    WORD PTR [rsp+0x1c],dx
  422c49:	mov    esi,r11d
  422c4c:	sub    esi,ecx
  422c4e:	cmp    esi,edx
  422c50:	jb     422cb0 <flatcc_verify_table_vector_field@@Base+0x210>
  422c52:	mov    ebp,r11d
  422c55:	add    rax,r15
  422c58:	mov    QWORD PTR [rsp+0x10],rax
  422c5d:	mov    QWORD PTR [rsp],r15
  422c61:	mov    DWORD PTR [rsp+0x8],r9d
  422c66:	mov    rdi,rsp
  422c69:	call   rbx
  422c6b:	test   eax,eax
  422c6d:	jne    422d7b <flatcc_verify_table_vector_field@@Base+0x2db>
  422c73:	add    r14d,0x4
  422c77:	mov    r11d,ebp
  422c7a:	add    r11d,0xfffffffc
  422c7e:	dec    r12d
  422c81:	mov    r9,QWORD PTR [rsp+0x20]
  422c86:	jne    422bac <flatcc_verify_table_vector_field@@Base+0x10c>
  422c8c:	xor    eax,eax
  422c8e:	jmp    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422c90:	xor    eax,eax
  422c92:	test   edx,edx
  422c94:	setne  al
  422c97:	shl    eax,0x2
  422c9a:	add    rsp,0x28
  422c9e:	pop    rbx
  422c9f:	pop    r12
  422ca1:	pop    r13
  422ca3:	pop    r14
  422ca5:	pop    r15
  422ca7:	pop    rbp
  422ca8:	ret    
  422ca9:	mov    eax,0x3
  422cae:	jmp    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422cb0:	mov    DWORD PTR [rsp+0xc],r13d
  422cb5:	add    ecx,r14d
  422cb8:	mov    eax,0xf
  422cbd:	cmp    ecx,r14d
  422cc0:	jbe    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422cc2:	mov    edx,ecx
  422cc4:	lea    rsi,[rdx+0x4]
  422cc8:	cmp    rsi,r9
  422ccb:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422ccd:	mov    esi,edx
  422ccf:	and    esi,0x3
  422cd2:	test   rsi,rsi
  422cd5:	jne    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422cd7:	mov    DWORD PTR [rsp+0x18],ecx
  422cdb:	mov    edi,ecx
  422cdd:	sub    edi,DWORD PTR [r15+rdx*1]
  422ce1:	mov    eax,0x1d
  422ce6:	test   edi,0x80000001
  422cec:	jne    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422cee:	mov    edx,edi
  422cf0:	lea    rsi,[rdx+0x2]
  422cf4:	mov    eax,0x1b
  422cf9:	cmp    rsi,r9
  422cfc:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422cfe:	movzx  ebp,WORD PTR [r15+rdx*1]
  422d03:	mov    WORD PTR [rsp+0x1e],bp
  422d08:	mov    eax,0x1e
  422d0d:	test   bpl,0x1
  422d11:	jne    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d13:	add    edi,ebp
  422d15:	mov    r8,r9
  422d18:	cmp    edi,r8d
  422d1b:	ja     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d21:	mov    eax,0x1c
  422d26:	cmp    bp,0x4
  422d2a:	jb     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d30:	mov    eax,esi
  422d32:	movzx  esi,WORD PTR [r15+rax*1]
  422d37:	mov    WORD PTR [rsp+0x1c],si
  422d3c:	mov    edi,r8d
  422d3f:	sub    edi,ecx
  422d41:	mov    eax,0x14
  422d46:	cmp    edi,esi
  422d48:	jb     422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d4e:	add    rdx,r15
  422d51:	mov    QWORD PTR [rsp+0x10],rdx
  422d56:	mov    QWORD PTR [rsp],r15
  422d5a:	mov    DWORD PTR [rsp+0x8],r8d
  422d5f:	mov    rdi,rsp
  422d62:	call   rbx
  422d64:	jmp    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d69:	mov    DWORD PTR [rsp+0xc],0x0
  422d71:	mov    eax,0x3
  422d76:	jmp    422c9a <flatcc_verify_table_vector_field@@Base+0x1fa>
  422d7b:	mov    ecx,DWORD PTR [r15+r14*1]
  422d7f:	add    ecx,r14d
  422d82:	mov    DWORD PTR [rsp+0xc],r13d
  422d87:	mov    r9,QWORD PTR [rsp+0x20]
  422d8c:	jmp    422cb8 <flatcc_verify_table_vector_field@@Base+0x218>
  422d91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422da0 <flatcc_verify_union_table@@Base>:
  422da0:	sub    rsp,0x28
  422da4:	mov    r8,QWORD PTR [rdi]
  422da7:	mov    r11d,DWORD PTR [rdi+0x8]
  422dab:	mov    edx,DWORD PTR [rdi+0x14]
  422dae:	mov    ecx,DWORD PTR [rdi+0x18]
  422db1:	mov    eax,DWORD PTR [rdi+0xc]
  422db4:	dec    eax
  422db6:	mov    DWORD PTR [rsp+0x14],eax
  422dba:	je     422e73 <flatcc_verify_union_table@@Base+0xd3>
  422dc0:	add    ecx,edx
  422dc2:	mov    eax,0xf
  422dc7:	cmp    ecx,edx
  422dc9:	jbe    422e6e <flatcc_verify_union_table@@Base+0xce>
  422dcf:	mov    edx,ecx
  422dd1:	lea    rdi,[rdx+0x4]
  422dd5:	cmp    rdi,r11
  422dd8:	ja     422e6e <flatcc_verify_union_table@@Base+0xce>
  422dde:	mov    edi,edx
  422de0:	and    edi,0x3
  422de3:	test   rdi,rdi
  422de6:	jne    422e6e <flatcc_verify_union_table@@Base+0xce>
  422dec:	mov    DWORD PTR [rsp+0x20],ecx
  422df0:	mov    edi,ecx
  422df2:	sub    edi,DWORD PTR [r8+rdx*1]
  422df6:	mov    eax,0x1d
  422dfb:	test   edi,0x80000001
  422e01:	jne    422e6e <flatcc_verify_union_table@@Base+0xce>
  422e03:	mov    r9d,edi
  422e06:	lea    r10,[r9+0x2]
  422e0a:	mov    eax,0x1b
  422e0f:	cmp    r10,r11
  422e12:	ja     422e6e <flatcc_verify_union_table@@Base+0xce>
  422e14:	movzx  edx,WORD PTR [r8+r9*1]
  422e19:	mov    WORD PTR [rsp+0x26],dx
  422e1e:	mov    eax,0x1e
  422e23:	test   dl,0x1
  422e26:	jne    422e6e <flatcc_verify_union_table@@Base+0xce>
  422e28:	add    edi,edx
  422e2a:	cmp    edi,r11d
  422e2d:	ja     422e6e <flatcc_verify_union_table@@Base+0xce>
  422e2f:	mov    eax,0x1c
  422e34:	cmp    dx,0x4
  422e38:	jb     422e6e <flatcc_verify_union_table@@Base+0xce>
  422e3a:	mov    eax,r10d
  422e3d:	movzx  edx,WORD PTR [r8+rax*1]
  422e42:	mov    WORD PTR [rsp+0x24],dx
  422e47:	mov    edi,r11d
  422e4a:	sub    edi,ecx
  422e4c:	mov    eax,0x14
  422e51:	cmp    edi,edx
  422e53:	jb     422e6e <flatcc_verify_union_table@@Base+0xce>
  422e55:	add    r9,r8
  422e58:	mov    QWORD PTR [rsp+0x18],r9
  422e5d:	mov    QWORD PTR [rsp+0x8],r8
  422e62:	mov    DWORD PTR [rsp+0x10],r11d
  422e67:	lea    rdi,[rsp+0x8]
  422e6c:	call   rsi
  422e6e:	add    rsp,0x28
  422e72:	ret    
  422e73:	mov    eax,0x3
  422e78:	add    rsp,0x28
  422e7c:	ret    
  422e7d:	nop    DWORD PTR [rax]

0000000000422e80 <flatcc_verify_union_struct@@Base>:
  422e80:	mov    ecx,DWORD PTR [rdi+0x18]
  422e83:	mov    eax,0x12
  422e88:	test   ecx,ecx
  422e8a:	je     422eba <flatcc_verify_union_struct@@Base+0x3a>
  422e8c:	mov    r8d,DWORD PTR [rdi+0x8]
  422e90:	add    ecx,DWORD PTR [rdi+0x14]
  422e93:	cmp    ecx,r8d
  422e96:	ja     422eba <flatcc_verify_union_struct@@Base+0x3a>
  422e98:	mov    eax,0xa
  422e9d:	add    esi,ecx
  422e9f:	jb     422eba <flatcc_verify_union_struct@@Base+0x3a>
  422ea1:	mov    eax,0x9
  422ea6:	cmp    esi,r8d
  422ea9:	ja     422eba <flatcc_verify_union_struct@@Base+0x3a>
  422eab:	movzx  eax,dx
  422eae:	dec    eax
  422eb0:	and    ecx,eax
  422eb2:	mov    eax,0xb
  422eb7:	cmove  eax,ecx
  422eba:	ret    
  422ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422ec0 <flatcc_verify_union_string@@Base>:
  422ec0:	mov    edx,DWORD PTR [rdi+0x14]
  422ec3:	mov    ecx,DWORD PTR [rdi+0x18]
  422ec6:	add    ecx,edx
  422ec8:	mov    eax,0x11
  422ecd:	cmp    ecx,edx
  422ecf:	jbe    422f16 <flatcc_verify_union_string@@Base+0x56>
  422ed1:	mov    r8d,DWORD PTR [rdi+0x8]
  422ed5:	mov    esi,ecx
  422ed7:	lea    rdx,[rsi+0x4]
  422edb:	cmp    rdx,r8
  422ede:	ja     422f16 <flatcc_verify_union_string@@Base+0x56>
  422ee0:	mov    edx,esi
  422ee2:	and    edx,0x3
  422ee5:	test   rdx,rdx
  422ee8:	jne    422f16 <flatcc_verify_union_string@@Base+0x56>
  422eea:	mov    rdi,QWORD PTR [rdi]
  422eed:	mov    esi,DWORD PTR [rdi+rsi*1]
  422ef0:	add    ecx,0x4
  422ef3:	sub    r8d,ecx
  422ef6:	lea    edx,[rsi+0x1]
  422ef9:	mov    eax,0x8
  422efe:	cmp    r8d,edx
  422f01:	jb     422f16 <flatcc_verify_union_string@@Base+0x56>
  422f03:	mov    eax,ecx
  422f05:	add    rdi,rax
  422f08:	xor    ecx,ecx
  422f0a:	cmp    BYTE PTR [rsi+rdi*1],0x0
  422f0e:	mov    eax,0x7
  422f13:	cmove  eax,ecx
  422f16:	ret    
  422f17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000422f20 <flatcc_verify_buffer_header@@Base>:
  422f20:	push   rbx
  422f21:	sub    rsp,0x10
  422f25:	mov    rbx,rdi
  422f28:	mov    eax,0x5
  422f2d:	test   bl,0x3
  422f30:	jne    422f88 <flatcc_verify_buffer_header@@Base+0x68>
  422f32:	mov    rcx,rdx
  422f35:	mov    rdx,rsi
  422f38:	shr    rdx,0x3
  422f3c:	mov    eax,0x6
  422f41:	cmp    rdx,0x1ffffffe
  422f48:	ja     422f88 <flatcc_verify_buffer_header@@Base+0x68>
  422f4a:	mov    eax,0x1
  422f4f:	cmp    rsi,0x8
  422f53:	jb     422f88 <flatcc_verify_buffer_header@@Base+0x68>
  422f55:	test   rcx,rcx
  422f58:	je     422f86 <flatcc_verify_buffer_header@@Base+0x66>
  422f5a:	mov    DWORD PTR [rsp+0xc],0x0
  422f62:	lea    rdi,[rsp+0xc]
  422f67:	mov    edx,0x4
  422f6c:	mov    rsi,rcx
  422f6f:	call   406040 <strncpy@plt>
  422f74:	mov    ecx,DWORD PTR [rsp+0xc]
  422f78:	test   ecx,ecx
  422f7a:	je     422f86 <flatcc_verify_buffer_header@@Base+0x66>
  422f7c:	mov    eax,0x2
  422f81:	cmp    DWORD PTR [rbx+0x4],ecx
  422f84:	jne    422f88 <flatcc_verify_buffer_header@@Base+0x68>
  422f86:	xor    eax,eax
  422f88:	add    rsp,0x10
  422f8c:	pop    rbx
  422f8d:	ret    
  422f8e:	xchg   ax,ax

0000000000422f90 <flatcc_verify_typed_buffer_header@@Base>:
  422f90:	mov    eax,0x5
  422f95:	test   dil,0x3
  422f99:	jne    422fcb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  422f9b:	mov    rcx,rsi
  422f9e:	shr    rcx,0x3
  422fa2:	mov    eax,0x6
  422fa7:	cmp    rcx,0x1ffffffe
  422fae:	ja     422fcb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  422fb0:	mov    eax,0x1
  422fb5:	cmp    rsi,0x8
  422fb9:	jb     422fcb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  422fbb:	test   edx,edx
  422fbd:	je     422fc9 <flatcc_verify_typed_buffer_header@@Base+0x39>
  422fbf:	mov    eax,0x2
  422fc4:	cmp    DWORD PTR [rdi+0x4],edx
  422fc7:	jne    422fcb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  422fc9:	xor    eax,eax
  422fcb:	ret    
  422fcc:	nop    DWORD PTR [rax+0x0]

0000000000422fd0 <flatcc_verify_struct_as_root@@Base>:
  422fd0:	push   rbp
  422fd1:	push   r15
  422fd3:	push   r14
  422fd5:	push   r12
  422fd7:	push   rbx
  422fd8:	sub    rsp,0x10
  422fdc:	mov    rbx,rdi
  422fdf:	mov    eax,0x5
  422fe4:	test   bl,0x3
  422fe7:	jne    4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  422fed:	mov    r15,rcx
  422ff0:	mov    rbp,rsi
  422ff3:	mov    rcx,rsi
  422ff6:	shr    rcx,0x3
  422ffa:	mov    eax,0x6
  422fff:	cmp    rcx,0x1ffffffe
  423006:	ja     4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  42300c:	mov    eax,0x1
  423011:	cmp    rbp,0x8
  423015:	jb     4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  42301b:	mov    r14d,r8d
  42301e:	mov    r12,rdx
  423021:	test   rdx,rdx
  423024:	je     42307c <flatcc_verify_struct_as_root@@Base+0xac>
  423026:	mov    DWORD PTR [rsp+0x8],0x0
  42302e:	lea    rdi,[rsp+0x8]
  423033:	mov    edx,0x4
  423038:	mov    rsi,r12
  42303b:	call   406040 <strncpy@plt>
  423040:	mov    eax,DWORD PTR [rsp+0x8]
  423044:	test   eax,eax
  423046:	je     42307c <flatcc_verify_struct_as_root@@Base+0xac>
  423048:	cmp    DWORD PTR [rbx+0x4],eax
  42304b:	je     42307c <flatcc_verify_struct_as_root@@Base+0xac>
  42304d:	mov    DWORD PTR [rsp+0xc],0x0
  423055:	lea    rdi,[rsp+0xc]
  42305a:	mov    edx,0x4
  42305f:	mov    rsi,r12
  423062:	call   406040 <strncpy@plt>
  423067:	mov    ecx,DWORD PTR [rsp+0xc]
  42306b:	xor    eax,eax
  42306d:	cmp    DWORD PTR [rbx+0x4],ecx
  423070:	setne  al
  423073:	add    eax,eax
  423075:	test   ecx,ecx
  423077:	cmove  eax,ecx
  42307a:	jmp    4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  42307c:	mov    ecx,DWORD PTR [rbx]
  42307e:	lea    edx,[rcx-0x1]
  423081:	mov    eax,0x12
  423086:	cmp    edx,ebp
  423088:	jae    4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  42308a:	mov    eax,0xa
  42308f:	add    r15d,ecx
  423092:	jb     4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  423094:	mov    eax,0x9
  423099:	cmp    r15d,ebp
  42309c:	ja     4230ae <flatcc_verify_struct_as_root@@Base+0xde>
  42309e:	movzx  eax,r14w
  4230a2:	dec    eax
  4230a4:	and    ecx,eax
  4230a6:	mov    eax,0xb
  4230ab:	cmove  eax,ecx
  4230ae:	add    rsp,0x10
  4230b2:	pop    rbx
  4230b3:	pop    r12
  4230b5:	pop    r14
  4230b7:	pop    r15
  4230b9:	pop    rbp
  4230ba:	ret    
  4230bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004230c0 <flatcc_verify_struct_as_typed_root@@Base>:
  4230c0:	mov    eax,0x5
  4230c5:	test   dil,0x3
  4230c9:	jne    423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4230cb:	mov    r9,rsi
  4230ce:	shr    r9,0x3
  4230d2:	mov    eax,0x6
  4230d7:	cmp    r9,0x1ffffffe
  4230de:	ja     423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4230e0:	mov    eax,0x1
  4230e5:	cmp    rsi,0x8
  4230e9:	jb     423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4230eb:	test   edx,edx
  4230ed:	je     4230f9 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  4230ef:	mov    eax,0x2
  4230f4:	cmp    DWORD PTR [rdi+0x4],edx
  4230f7:	jne    423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4230f9:	mov    edx,DWORD PTR [rdi]
  4230fb:	lea    edi,[rdx-0x1]
  4230fe:	mov    eax,0x12
  423103:	cmp    edi,esi
  423105:	jae    423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  423107:	mov    eax,0xa
  42310c:	add    ecx,edx
  42310e:	jb     423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  423110:	mov    eax,0x9
  423115:	cmp    ecx,esi
  423117:	ja     423129 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  423119:	movzx  eax,r8w
  42311d:	dec    eax
  42311f:	and    edx,eax
  423121:	mov    eax,0xb
  423126:	cmove  eax,edx
  423129:	ret    
  42312a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000423130 <flatcc_verify_table_as_root@@Base>:
  423130:	push   r15
  423132:	push   r14
  423134:	push   r13
  423136:	push   r12
  423138:	push   rbx
  423139:	sub    rsp,0x20
  42313d:	mov    r12,rdi
  423140:	mov    eax,0x5
  423145:	test   r12b,0x3
  423149:	jne    42328c <flatcc_verify_table_as_root@@Base+0x15c>
  42314f:	mov    r14,rcx
  423152:	mov    r15,rsi
  423155:	mov    r13d,r15d
  423158:	mov    rcx,r13
  42315b:	shr    rcx,0x3
  42315f:	mov    eax,0x6
  423164:	cmp    rcx,0x1ffffffe
  42316b:	ja     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423171:	mov    eax,0x1
  423176:	cmp    r13,0x8
  42317a:	jb     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423180:	mov    rbx,rdx
  423183:	test   rdx,rdx
  423186:	je     4231dd <flatcc_verify_table_as_root@@Base+0xad>
  423188:	mov    DWORD PTR [rsp],0x0
  42318f:	mov    rdi,rsp
  423192:	mov    edx,0x4
  423197:	mov    rsi,rbx
  42319a:	call   406040 <strncpy@plt>
  42319f:	mov    eax,DWORD PTR [rsp]
  4231a2:	test   eax,eax
  4231a4:	je     4231dd <flatcc_verify_table_as_root@@Base+0xad>
  4231a6:	cmp    DWORD PTR [r12+0x4],eax
  4231ab:	je     4231dd <flatcc_verify_table_as_root@@Base+0xad>
  4231ad:	mov    DWORD PTR [rsp],0x0
  4231b4:	mov    rdi,rsp
  4231b7:	mov    edx,0x4
  4231bc:	mov    rsi,rbx
  4231bf:	call   406040 <strncpy@plt>
  4231c4:	mov    ecx,DWORD PTR [rsp]
  4231c7:	xor    eax,eax
  4231c9:	cmp    DWORD PTR [r12+0x4],ecx
  4231ce:	setne  al
  4231d1:	add    eax,eax
  4231d3:	test   ecx,ecx
  4231d5:	cmove  eax,ecx
  4231d8:	jmp    42328c <flatcc_verify_table_as_root@@Base+0x15c>
  4231dd:	mov    ecx,DWORD PTR [r12]
  4231e1:	mov    DWORD PTR [rsp+0xc],0x63
  4231e9:	mov    eax,0xf
  4231ee:	test   rcx,rcx
  4231f1:	je     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  4231f7:	lea    rdx,[rcx+0x4]
  4231fb:	cmp    rdx,r13
  4231fe:	ja     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423204:	mov    edx,ecx
  423206:	and    edx,0x3
  423209:	test   rdx,rdx
  42320c:	jne    42328c <flatcc_verify_table_as_root@@Base+0x15c>
  42320e:	mov    DWORD PTR [rsp+0x18],ecx
  423212:	mov    edi,ecx
  423214:	sub    edi,DWORD PTR [r12+rcx*1]
  423218:	mov    eax,0x1d
  42321d:	test   edi,0x80000001
  423223:	jne    42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423225:	mov    edx,edi
  423227:	lea    rsi,[rdx+0x2]
  42322b:	mov    eax,0x1b
  423230:	cmp    rsi,r13
  423233:	ja     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423235:	movzx  ebx,WORD PTR [r12+rdx*1]
  42323a:	mov    WORD PTR [rsp+0x1e],bx
  42323f:	mov    eax,0x1e
  423244:	test   bl,0x1
  423247:	jne    42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423249:	add    edi,ebx
  42324b:	cmp    edi,r15d
  42324e:	ja     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423250:	mov    eax,0x1c
  423255:	cmp    bx,0x4
  423259:	jb     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  42325b:	mov    eax,esi
  42325d:	movzx  esi,WORD PTR [r12+rax*1]
  423262:	mov    WORD PTR [rsp+0x1c],si
  423267:	mov    edi,r15d
  42326a:	sub    edi,ecx
  42326c:	mov    eax,0x14
  423271:	cmp    edi,esi
  423273:	jb     42328c <flatcc_verify_table_as_root@@Base+0x15c>
  423275:	add    rdx,r12
  423278:	mov    QWORD PTR [rsp+0x10],rdx
  42327d:	mov    QWORD PTR [rsp],r12
  423281:	mov    DWORD PTR [rsp+0x8],r15d
  423286:	mov    rdi,rsp
  423289:	call   r14
  42328c:	add    rsp,0x20
  423290:	pop    rbx
  423291:	pop    r12
  423293:	pop    r13
  423295:	pop    r14
  423297:	pop    r15
  423299:	ret    
  42329a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004232a0 <flatcc_verify_table_as_typed_root@@Base>:
  4232a0:	push   rbx
  4232a1:	sub    rsp,0x20
  4232a5:	mov    eax,0x5
  4232aa:	test   dil,0x3
  4232ae:	jne    4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4232b4:	mov    r8d,esi
  4232b7:	mov    r9,r8
  4232ba:	shr    r9,0x3
  4232be:	mov    eax,0x6
  4232c3:	cmp    r9,0x1ffffffe
  4232ca:	ja     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4232d0:	mov    eax,0x1
  4232d5:	cmp    r8,0x8
  4232d9:	jb     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4232df:	test   edx,edx
  4232e1:	je     4232f1 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4232e3:	mov    eax,0x2
  4232e8:	cmp    DWORD PTR [rdi+0x4],edx
  4232eb:	jne    4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4232f1:	mov    ebx,DWORD PTR [rdi]
  4232f3:	mov    DWORD PTR [rsp+0xc],0x63
  4232fb:	mov    eax,0xf
  423300:	test   rbx,rbx
  423303:	je     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423309:	lea    rdx,[rbx+0x4]
  42330d:	cmp    rdx,r8
  423310:	ja     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423316:	mov    edx,ebx
  423318:	and    edx,0x3
  42331b:	test   rdx,rdx
  42331e:	jne    4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423324:	mov    DWORD PTR [rsp+0x18],ebx
  423328:	mov    r11d,ebx
  42332b:	sub    r11d,DWORD PTR [rdi+rbx*1]
  42332f:	mov    eax,0x1d
  423334:	test   r11d,0x80000001
  42333b:	jne    4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42333d:	mov    r9d,r11d
  423340:	lea    r10,[r9+0x2]
  423344:	mov    eax,0x1b
  423349:	cmp    r10,r8
  42334c:	ja     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42334e:	movzx  r8d,WORD PTR [rdi+r9*1]
  423353:	mov    WORD PTR [rsp+0x1e],r8w
  423359:	mov    eax,0x1e
  42335e:	test   r8b,0x1
  423362:	jne    4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423364:	add    r11d,r8d
  423367:	cmp    r11d,esi
  42336a:	ja     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42336c:	mov    eax,0x1c
  423371:	cmp    r8w,0x4
  423376:	jb     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423378:	mov    eax,r10d
  42337b:	movzx  r8d,WORD PTR [rdi+rax*1]
  423380:	mov    WORD PTR [rsp+0x1c],r8w
  423386:	mov    edx,esi
  423388:	sub    edx,ebx
  42338a:	mov    eax,0x14
  42338f:	cmp    edx,r8d
  423392:	jb     4233a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  423394:	add    r9,rdi
  423397:	mov    QWORD PTR [rsp+0x10],r9
  42339c:	mov    QWORD PTR [rsp],rdi
  4233a0:	mov    DWORD PTR [rsp+0x8],esi
  4233a4:	mov    rdi,rsp
  4233a7:	call   rcx
  4233a9:	add    rsp,0x20
  4233ad:	pop    rbx
  4233ae:	ret    
  4233af:	nop

00000000004233b0 <flatcc_verify_struct_as_nested_root@@Base>:
  4233b0:	push   r15
  4233b2:	push   r14
  4233b4:	push   rbx
  4233b5:	lea    esi,[rsi+rsi*1]
  4233b8:	add    esi,0x4
  4233bb:	movzx  ebx,WORD PTR [rdi+0x1e]
  4233bf:	cmp    si,bx
  4233c2:	jae    42342c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4233c4:	mov    r10,QWORD PTR [rdi+0x10]
  4233c8:	movzx  r11d,si
  4233cc:	movzx  eax,WORD PTR [r10+r11*1]
  4233d1:	test   eax,eax
  4233d3:	je     42342c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4233d5:	lea    esi,[rax+0x4]
  4233d8:	movzx  ebx,WORD PTR [rdi+0x1c]
  4233dc:	cmp    esi,ebx
  4233de:	ja     423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4233e0:	add    eax,DWORD PTR [rdi+0x18]
  4233e3:	test   al,0x3
  4233e5:	jne    423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4233e7:	test   eax,eax
  4233e9:	je     4234df <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  4233ef:	mov    r15,QWORD PTR [rdi]
  4233f2:	mov    esi,eax
  4233f4:	mov    ebx,DWORD PTR [r15+rsi*1]
  4233f8:	add    ebx,eax
  4233fa:	cmp    ebx,eax
  4233fc:	jbe    423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4233fe:	mov    eax,DWORD PTR [rdi+0x8]
  423401:	mov    r14d,ebx
  423404:	lea    rsi,[r14+0x4]
  423408:	cmp    rsi,rax
  42340b:	ja     423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  42340d:	and    esi,0x3
  423410:	test   rsi,rsi
  423413:	jne    423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  423415:	movzx  esi,r9w
  423419:	sub    eax,ebx
  42341b:	add    eax,0xfffffffc
  42341e:	imul   esi,DWORD PTR [r15+r14*1]
  423423:	cmp    eax,esi
  423425:	jb     423445 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  423427:	jmp    4234df <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  42342c:	test   edx,edx
  42342e:	je     4234d0 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  423434:	cmp    si,bx
  423437:	jae    4234c4 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  42343d:	mov    r10,QWORD PTR [rdi+0x10]
  423441:	movzx  r11d,si
  423445:	movzx  esi,WORD PTR [r10+r11*1]
  42344a:	test   esi,esi
  42344c:	je     4234c4 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  42344e:	lea    ecx,[rsi+0x4]
  423451:	movzx  edx,WORD PTR [rdi+0x1c]
  423455:	mov    eax,0xd
  42345a:	cmp    ecx,edx
  42345c:	ja     42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  423462:	add    esi,DWORD PTR [rdi+0x18]
  423465:	mov    eax,0xc
  42346a:	test   sil,0x3
  42346e:	jne    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  423474:	test   esi,esi
  423476:	je     42351a <flatcc_verify_struct_as_nested_root@@Base+0x16a>
  42347c:	mov    rcx,QWORD PTR [rdi]
  42347f:	mov    eax,esi
  423481:	mov    edx,DWORD PTR [rcx+rax*1]
  423484:	add    edx,esi
  423486:	mov    eax,0x10
  42348b:	cmp    edx,esi
  42348d:	jbe    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  423493:	mov    esi,DWORD PTR [rdi+0x8]
  423496:	mov    edi,edx
  423498:	lea    rbx,[rdi+0x4]
  42349c:	cmp    rbx,rsi
  42349f:	ja     42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234a1:	and    ebx,0x3
  4234a4:	test   rbx,rbx
  4234a7:	jne    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234a9:	movzx  eax,r9w
  4234ad:	sub    esi,edx
  4234af:	add    esi,0xfffffffc
  4234b2:	imul   eax,DWORD PTR [rcx+rdi*1]
  4234b6:	xor    ecx,ecx
  4234b8:	cmp    esi,eax
  4234ba:	mov    eax,0x1a
  4234bf:	cmovae eax,ecx
  4234c2:	jmp    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234c4:	xor    eax,eax
  4234c6:	test   edx,edx
  4234c8:	setne  al
  4234cb:	shl    eax,0x2
  4234ce:	jmp    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234d0:	xor    eax,eax
  4234d2:	cmp    si,bx
  4234d5:	jae    42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234d7:	mov    r10,QWORD PTR [rdi+0x10]
  4234db:	movzx  r11d,si
  4234df:	movzx  esi,WORD PTR [r10+r11*1]
  4234e4:	xor    eax,eax
  4234e6:	test   rsi,rsi
  4234e9:	je     42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234eb:	mov    edx,DWORD PTR [rdi+0x18]
  4234ee:	add    rdx,QWORD PTR [rdi]
  4234f1:	add    rdx,rsi
  4234f4:	je     42351c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  4234f6:	mov    eax,DWORD PTR [rdx]
  4234f8:	mov    esi,DWORD PTR [rax+rdx*1]
  4234fb:	lea    rdi,[rax+rdx*1]
  4234ff:	add    rdi,0x4
  423503:	movzx  eax,r9w
  423507:	mov    rdx,rcx
  42350a:	mov    rcx,r8
  42350d:	mov    r8d,eax
  423510:	pop    rbx
  423511:	pop    r14
  423513:	pop    r15
  423515:	jmp    422fd0 <flatcc_verify_struct_as_root@@Base>
  42351a:	xor    eax,eax
  42351c:	pop    rbx
  42351d:	pop    r14
  42351f:	pop    r15
  423521:	ret    
  423522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42352c:	nop    DWORD PTR [rax+0x0]

0000000000423530 <flatcc_verify_table_as_nested_root@@Base>:
  423530:	push   rbp
  423531:	push   r15
  423533:	push   r14
  423535:	push   r13
  423537:	push   r12
  423539:	push   rbx
  42353a:	sub    rsp,0x28
  42353e:	mov    r14,r9
  423541:	mov    r15,rcx
  423544:	mov    rbx,rdi
  423547:	lea    esi,[rsi+rsi*1]
  42354a:	add    esi,0x4
  42354d:	movzx  ebp,WORD PTR [rdi+0x1e]
  423551:	cmp    si,bp
  423554:	jae    4235be <flatcc_verify_table_as_nested_root@@Base+0x8e>
  423556:	mov    rax,QWORD PTR [rbx+0x10]
  42355a:	movzx  ecx,si
  42355d:	movzx  edi,WORD PTR [rax+rcx*1]
  423561:	test   edi,edi
  423563:	je     4235be <flatcc_verify_table_as_nested_root@@Base+0x8e>
  423565:	lea    esi,[rdi+0x4]
  423568:	movzx  ebp,WORD PTR [rbx+0x1c]
  42356c:	cmp    esi,ebp
  42356e:	ja     4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  423570:	add    edi,DWORD PTR [rbx+0x18]
  423573:	test   dil,0x3
  423577:	jne    4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  423579:	test   edi,edi
  42357b:	je     423684 <flatcc_verify_table_as_nested_root@@Base+0x154>
  423581:	mov    r10,QWORD PTR [rbx]
  423584:	mov    esi,edi
  423586:	mov    ebp,DWORD PTR [r10+rsi*1]
  42358a:	add    ebp,edi
  42358c:	cmp    ebp,edi
  42358e:	jbe    4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  423590:	mov    edi,DWORD PTR [rbx+0x8]
  423593:	mov    r9d,ebp
  423596:	lea    rsi,[r9+0x4]
  42359a:	cmp    rsi,rdi
  42359d:	ja     4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  42359f:	and    esi,0x3
  4235a2:	test   rsi,rsi
  4235a5:	jne    4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4235a7:	movzx  esi,r8w
  4235ab:	sub    edi,ebp
  4235ad:	add    edi,0xfffffffc
  4235b0:	imul   esi,DWORD PTR [r10+r9*1]
  4235b5:	cmp    edi,esi
  4235b7:	jb     4235d6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  4235b9:	jmp    423684 <flatcc_verify_table_as_nested_root@@Base+0x154>
  4235be:	test   edx,edx
  4235c0:	je     423672 <flatcc_verify_table_as_nested_root@@Base+0x142>
  4235c6:	cmp    si,bp
  4235c9:	jae    423663 <flatcc_verify_table_as_nested_root@@Base+0x133>
  4235cf:	mov    rax,QWORD PTR [rbx+0x10]
  4235d3:	movzx  ecx,si
  4235d6:	movzx  esi,WORD PTR [rax+rcx*1]
  4235da:	test   esi,esi
  4235dc:	je     423663 <flatcc_verify_table_as_nested_root@@Base+0x133>
  4235e2:	lea    ecx,[rsi+0x4]
  4235e5:	movzx  edx,WORD PTR [rbx+0x1c]
  4235e9:	mov    eax,0xd
  4235ee:	cmp    ecx,edx
  4235f0:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4235f6:	add    esi,DWORD PTR [rbx+0x18]
  4235f9:	mov    eax,0xc
  4235fe:	test   sil,0x3
  423602:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423608:	test   esi,esi
  42360a:	je     423736 <flatcc_verify_table_as_nested_root@@Base+0x206>
  423610:	mov    rcx,QWORD PTR [rbx]
  423613:	mov    eax,esi
  423615:	mov    edx,DWORD PTR [rcx+rax*1]
  423618:	add    edx,esi
  42361a:	mov    eax,0x10
  42361f:	cmp    edx,esi
  423621:	jbe    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423627:	mov    esi,DWORD PTR [rbx+0x8]
  42362a:	mov    edi,edx
  42362c:	lea    rbp,[rdi+0x4]
  423630:	cmp    rbp,rsi
  423633:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423639:	and    ebp,0x3
  42363c:	test   rbp,rbp
  42363f:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423645:	movzx  eax,r8w
  423649:	sub    esi,edx
  42364b:	add    esi,0xfffffffc
  42364e:	imul   eax,DWORD PTR [rcx+rdi*1]
  423652:	xor    ecx,ecx
  423654:	cmp    esi,eax
  423656:	mov    eax,0x1a
  42365b:	cmovae eax,ecx
  42365e:	jmp    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423663:	xor    eax,eax
  423665:	test   edx,edx
  423667:	setne  al
  42366a:	shl    eax,0x2
  42366d:	jmp    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423672:	xor    eax,eax
  423674:	cmp    si,bp
  423677:	jae    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  42367d:	mov    rax,QWORD PTR [rbx+0x10]
  423681:	movzx  ecx,si
  423684:	movzx  ecx,WORD PTR [rax+rcx*1]
  423688:	xor    eax,eax
  42368a:	test   rcx,rcx
  42368d:	je     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423693:	mov    r13d,DWORD PTR [rbx+0x18]
  423697:	add    r13,QWORD PTR [rbx]
  42369a:	add    r13,rcx
  42369d:	je     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4236a3:	mov    ebp,DWORD PTR [r13+0x0]
  4236a7:	lea    r12,[r13*1+0x4]
  4236af:	add    r12,rbp
  4236b2:	mov    eax,0x5
  4236b7:	test   r12b,0x3
  4236bb:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4236bd:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  4236c2:	mov    eax,0x6
  4236c7:	cmp    ecx,0xfffffff7
  4236ca:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4236cc:	mov    eax,0x1
  4236d1:	cmp    ecx,0x8
  4236d4:	jb     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4236d6:	test   r15,r15
  4236d9:	je     423747 <flatcc_verify_table_as_nested_root@@Base+0x217>
  4236db:	mov    DWORD PTR [rsp],0x0
  4236e2:	mov    rdi,rsp
  4236e5:	mov    edx,0x4
  4236ea:	mov    rsi,r15
  4236ed:	mov    QWORD PTR [rsp+0x20],rcx
  4236f2:	call   406040 <strncpy@plt>
  4236f7:	mov    rcx,QWORD PTR [rsp+0x20]
  4236fc:	mov    eax,DWORD PTR [rsp]
  4236ff:	test   eax,eax
  423701:	je     423747 <flatcc_verify_table_as_nested_root@@Base+0x217>
  423703:	add    rbp,r13
  423706:	cmp    DWORD PTR [rbp+0x8],eax
  423709:	je     423747 <flatcc_verify_table_as_nested_root@@Base+0x217>
  42370b:	mov    DWORD PTR [rsp],0x0
  423712:	mov    rdi,rsp
  423715:	mov    edx,0x4
  42371a:	mov    rsi,r15
  42371d:	call   406040 <strncpy@plt>
  423722:	mov    ecx,DWORD PTR [rsp]
  423725:	xor    eax,eax
  423727:	cmp    DWORD PTR [rbp+0x8],ecx
  42372a:	setne  al
  42372d:	add    eax,eax
  42372f:	test   ecx,ecx
  423731:	cmove  eax,ecx
  423734:	jmp    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423736:	xor    eax,eax
  423738:	add    rsp,0x28
  42373c:	pop    rbx
  42373d:	pop    r12
  42373f:	pop    r13
  423741:	pop    r14
  423743:	pop    r15
  423745:	pop    rbp
  423746:	ret    
  423747:	mov    esi,DWORD PTR [r12]
  42374b:	mov    eax,DWORD PTR [rbx+0xc]
  42374e:	dec    eax
  423750:	mov    DWORD PTR [rsp+0xc],eax
  423754:	je     4237ff <flatcc_verify_table_as_nested_root@@Base+0x2cf>
  42375a:	mov    eax,0xf
  42375f:	test   esi,esi
  423761:	je     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423763:	lea    rdx,[rsi+0x4]
  423767:	cmp    rdx,rcx
  42376a:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  42376c:	mov    edx,esi
  42376e:	and    edx,0x3
  423771:	test   rdx,rdx
  423774:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423776:	mov    DWORD PTR [rsp+0x18],esi
  42377a:	mov    edi,esi
  42377c:	sub    edi,DWORD PTR [r12+rsi*1]
  423780:	mov    eax,0x1d
  423785:	test   edi,0x80000001
  42378b:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  42378d:	mov    edx,edi
  42378f:	lea    rbx,[rdx+0x2]
  423793:	mov    eax,0x1b
  423798:	cmp    rbx,rcx
  42379b:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  42379d:	movzx  ebp,WORD PTR [r12+rdx*1]
  4237a2:	mov    WORD PTR [rsp+0x1e],bp
  4237a7:	mov    eax,0x1e
  4237ac:	test   bpl,0x1
  4237b0:	jne    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4237b2:	add    edi,ebp
  4237b4:	cmp    edi,ecx
  4237b6:	ja     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4237b8:	mov    eax,0x1c
  4237bd:	cmp    bp,0x4
  4237c1:	jb     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4237c7:	mov    eax,ebx
  4237c9:	movzx  ebp,WORD PTR [r12+rax*1]
  4237ce:	mov    WORD PTR [rsp+0x1c],bp
  4237d3:	mov    edi,ecx
  4237d5:	sub    edi,esi
  4237d7:	mov    eax,0x14
  4237dc:	cmp    edi,ebp
  4237de:	jb     423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4237e4:	add    rdx,r12
  4237e7:	mov    QWORD PTR [rsp+0x10],rdx
  4237ec:	mov    QWORD PTR [rsp],r12
  4237f0:	mov    DWORD PTR [rsp+0x8],ecx
  4237f4:	mov    rdi,rsp
  4237f7:	call   r14
  4237fa:	jmp    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  4237ff:	mov    eax,0x3
  423804:	jmp    423738 <flatcc_verify_table_as_nested_root@@Base+0x208>
  423809:	nop    DWORD PTR [rax+0x0]

0000000000423810 <flatcc_verify_union_field@@Base>:
  423810:	push   rbp
  423811:	push   r14
  423813:	push   rbx
  423814:	sub    rsp,0x20
  423818:	lea    eax,[rsi+rsi*1]
  42381b:	add    eax,0x2
  42381e:	add    esi,esi
  423820:	movzx  r10d,WORD PTR [rdi+0x1e]
  423825:	cmp    ax,r10w
  423829:	jae    423908 <flatcc_verify_union_field@@Base+0xf8>
  42382f:	mov    rbx,QWORD PTR [rdi+0x10]
  423833:	movzx  eax,ax
  423836:	movzx  r9d,WORD PTR [rbx+rax*1]
  42383b:	test   r9,r9
  42383e:	je     423908 <flatcc_verify_union_field@@Base+0xf8>
  423844:	mov    eax,0xd
  423849:	cmp    r9w,WORD PTR [rdi+0x1c]
  42384e:	jae    42392e <flatcc_verify_union_field@@Base+0x11e>
  423854:	mov    r8,QWORD PTR [rdi]
  423857:	add    esi,0x4
  42385a:	mov    al,0x1
  42385c:	cmp    si,r10w
  423860:	jae    42386d <flatcc_verify_union_field@@Base+0x5d>
  423862:	movzx  eax,si
  423865:	cmp    WORD PTR [rbx+rax*1],0x0
  42386a:	sete   al
  42386d:	mov    r14d,DWORD PTR [rdi+0x18]
  423871:	lea    r11,[r8+r14*1]
  423875:	mov    bpl,BYTE PTR [r9+r11*1]
  423879:	test   al,al
  42387b:	jne    42388b <flatcc_verify_union_field@@Base+0x7b>
  42387d:	mov    eax,0x18
  423882:	test   bpl,bpl
  423885:	je     42392e <flatcc_verify_union_field@@Base+0x11e>
  42388b:	xor    eax,eax
  42388d:	test   bpl,bpl
  423890:	je     42392e <flatcc_verify_union_field@@Base+0x11e>
  423896:	cmp    si,r10w
  42389a:	jae    423937 <flatcc_verify_union_field@@Base+0x127>
  4238a0:	movzx  eax,si
  4238a3:	movzx  esi,WORD PTR [rbx+rax*1]
  4238a7:	test   esi,esi
  4238a9:	je     423937 <flatcc_verify_union_field@@Base+0x127>
  4238af:	lea    edx,[rsi+0x4]
  4238b2:	movzx  ebp,WORD PTR [rdi+0x1c]
  4238b6:	mov    eax,0xd
  4238bb:	cmp    edx,ebp
  4238bd:	ja     42392e <flatcc_verify_union_field@@Base+0x11e>
  4238bf:	add    r14d,esi
  4238c2:	mov    eax,0xc
  4238c7:	test   r14b,0x3
  4238cb:	jne    42392e <flatcc_verify_union_field@@Base+0x11e>
  4238cd:	mov    eax,0x0
  4238d2:	test   r14d,r14d
  4238d5:	je     42392e <flatcc_verify_union_field@@Base+0x11e>
  4238d7:	mov    QWORD PTR [rsp],r8
  4238db:	mov    eax,DWORD PTR [rdi+0x8]
  4238de:	mov    DWORD PTR [rsp+0x8],eax
  4238e2:	mov    eax,DWORD PTR [rdi+0xc]
  4238e5:	mov    DWORD PTR [rsp+0xc],eax
  4238e9:	mov    DWORD PTR [rsp+0x14],r14d
  4238ee:	mov    eax,r14d
  4238f1:	mov    eax,DWORD PTR [r8+rax*1]
  4238f5:	mov    DWORD PTR [rsp+0x18],eax
  4238f9:	mov    al,BYTE PTR [r11+r9*1]
  4238fd:	mov    BYTE PTR [rsp+0x10],al
  423901:	mov    rdi,rsp
  423904:	call   rcx
  423906:	jmp    42392e <flatcc_verify_union_field@@Base+0x11e>
  423908:	add    esi,0x4
  42390b:	cmp    si,r10w
  42390f:	jae    423924 <flatcc_verify_union_field@@Base+0x114>
  423911:	mov    rcx,QWORD PTR [rdi+0x10]
  423915:	movzx  esi,si
  423918:	mov    eax,0x17
  42391d:	cmp    WORD PTR [rcx+rsi*1],0x0
  423922:	jne    42392e <flatcc_verify_union_field@@Base+0x11e>
  423924:	test   edx,edx
  423926:	mov    eax,0x15
  42392b:	cmove  eax,edx
  42392e:	add    rsp,0x20
  423932:	pop    rbx
  423933:	pop    r14
  423935:	pop    rbp
  423936:	ret    
  423937:	xor    eax,eax
  423939:	test   edx,edx
  42393b:	setne  al
  42393e:	shl    eax,0x2
  423941:	jmp    42392e <flatcc_verify_union_field@@Base+0x11e>
  423943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42394d:	nop    DWORD PTR [rax]

0000000000423950 <flatcc_verify_union_vector_field@@Base>:
  423950:	push   rbp
  423951:	push   r15
  423953:	push   r14
  423955:	push   r13
  423957:	push   r12
  423959:	push   rbx
  42395a:	sub    rsp,0x28
  42395e:	mov    r12,rcx
  423961:	lea    ebx,[rsi+rsi*1]
  423964:	add    ebx,0x2
  423967:	add    esi,esi
  423969:	movzx  ecx,WORD PTR [rdi+0x1e]
  42396d:	cmp    bx,cx
  423970:	jae    423982 <flatcc_verify_union_vector_field@@Base+0x32>
  423972:	mov    r10,QWORD PTR [rdi+0x10]
  423976:	movzx  r14d,bx
  42397a:	cmp    WORD PTR [r10+r14*1],0x0
  423980:	jne    4239b7 <flatcc_verify_union_vector_field@@Base+0x67>
  423982:	lea    eax,[rsi+0x4]
  423985:	cmp    ax,cx
  423988:	jae    423a15 <flatcc_verify_union_vector_field@@Base+0xc5>
  42398e:	test   edx,edx
  423990:	je     4239aa <flatcc_verify_union_vector_field@@Base+0x5a>
  423992:	mov    r8,QWORD PTR [rdi+0x10]
  423996:	movzx  ebp,ax
  423999:	mov    eax,0x16
  42399e:	cmp    WORD PTR [r8+rbp*1],0x0
  4239a4:	je     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  4239aa:	cmp    bx,cx
  4239ad:	jae    423a24 <flatcc_verify_union_vector_field@@Base+0xd4>
  4239af:	mov    r10,QWORD PTR [rdi+0x10]
  4239b3:	movzx  r14d,bx
  4239b7:	movzx  ebp,WORD PTR [r10+r14*1]
  4239bc:	test   ebp,ebp
  4239be:	je     423a24 <flatcc_verify_union_vector_field@@Base+0xd4>
  4239c0:	lea    ebx,[rbp+0x4]
  4239c3:	movzx  eax,WORD PTR [rdi+0x1c]
  4239c7:	cmp    ebx,eax
  4239c9:	ja     423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  4239cb:	add    ebp,DWORD PTR [rdi+0x18]
  4239ce:	test   bpl,0x3
  4239d2:	jne    423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  4239d4:	test   ebp,ebp
  4239d6:	je     423ad7 <flatcc_verify_union_vector_field@@Base+0x187>
  4239dc:	mov    r8,QWORD PTR [rdi]
  4239df:	mov    eax,ebp
  4239e1:	mov    ebx,DWORD PTR [r8+rax*1]
  4239e5:	add    ebx,ebp
  4239e7:	cmp    ebx,ebp
  4239e9:	jbe    423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  4239eb:	mov    r11d,DWORD PTR [rdi+0x8]
  4239ef:	mov    r9d,ebx
  4239f2:	lea    rbp,[r9+0x4]
  4239f6:	cmp    rbp,r11
  4239f9:	ja     423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  4239fb:	and    ebp,0x3
  4239fe:	test   rbp,rbp
  423a01:	jne    423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  423a03:	sub    r11d,ebx
  423a06:	add    r11d,0xfffffffc
  423a0a:	cmp    r11d,DWORD PTR [r8+r9*1]
  423a0e:	jb     423a3d <flatcc_verify_union_vector_field@@Base+0xed>
  423a10:	jmp    423ad7 <flatcc_verify_union_vector_field@@Base+0x187>
  423a15:	mov    eax,0x16
  423a1a:	test   edx,edx
  423a1c:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423a22:	jmp    4239aa <flatcc_verify_union_vector_field@@Base+0x5a>
  423a24:	test   edx,edx
  423a26:	je     423ac4 <flatcc_verify_union_vector_field@@Base+0x174>
  423a2c:	cmp    bx,cx
  423a2f:	jae    423be4 <flatcc_verify_union_vector_field@@Base+0x294>
  423a35:	mov    r10,QWORD PTR [rdi+0x10]
  423a39:	movzx  r14d,bx
  423a3d:	movzx  esi,WORD PTR [r10+r14*1]
  423a42:	test   esi,esi
  423a44:	je     423be4 <flatcc_verify_union_vector_field@@Base+0x294>
  423a4a:	lea    ecx,[rsi+0x4]
  423a4d:	movzx  edx,WORD PTR [rdi+0x1c]
  423a51:	mov    eax,0xd
  423a56:	cmp    ecx,edx
  423a58:	ja     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423a5e:	add    esi,DWORD PTR [rdi+0x18]
  423a61:	mov    eax,0xc
  423a66:	test   sil,0x3
  423a6a:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423a70:	test   esi,esi
  423a72:	je     423bfd <flatcc_verify_union_vector_field@@Base+0x2ad>
  423a78:	mov    rcx,QWORD PTR [rdi]
  423a7b:	mov    eax,esi
  423a7d:	mov    edx,DWORD PTR [rcx+rax*1]
  423a80:	add    edx,esi
  423a82:	mov    eax,0x10
  423a87:	cmp    edx,esi
  423a89:	jbe    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423a8f:	mov    esi,DWORD PTR [rdi+0x8]
  423a92:	mov    edi,edx
  423a94:	lea    rbp,[rdi+0x4]
  423a98:	cmp    rbp,rsi
  423a9b:	ja     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423aa1:	and    ebp,0x3
  423aa4:	test   rbp,rbp
  423aa7:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423aad:	sub    esi,edx
  423aaf:	add    esi,0xfffffffc
  423ab2:	xor    edx,edx
  423ab4:	cmp    esi,DWORD PTR [rcx+rdi*1]
  423ab7:	mov    eax,0x1a
  423abc:	cmovae eax,edx
  423abf:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423ac4:	xor    eax,eax
  423ac6:	cmp    bx,cx
  423ac9:	jae    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423acf:	mov    r10,QWORD PTR [rdi+0x10]
  423ad3:	movzx  r14d,bx
  423ad7:	movzx  ebp,WORD PTR [r10+r14*1]
  423adc:	xor    eax,eax
  423ade:	test   rbp,rbp
  423ae1:	je     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423ae7:	mov    r15,QWORD PTR [rdi]
  423aea:	mov    r8d,DWORD PTR [rdi+0x18]
  423aee:	lea    r9,[r15+r8*1]
  423af2:	add    r9,rbp
  423af5:	je     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423afb:	add    esi,0x4
  423afe:	cmp    si,cx
  423b01:	jae    423be4 <flatcc_verify_union_vector_field@@Base+0x294>
  423b07:	movzx  eax,si
  423b0a:	movzx  ecx,WORD PTR [r10+rax*1]
  423b0f:	test   ecx,ecx
  423b11:	je     423be4 <flatcc_verify_union_vector_field@@Base+0x294>
  423b17:	lea    edx,[rcx+0x4]
  423b1a:	movzx  esi,WORD PTR [rdi+0x1c]
  423b1e:	mov    eax,0xd
  423b23:	cmp    edx,esi
  423b25:	ja     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b2b:	lea    ebx,[r8+rcx*1]
  423b2f:	mov    eax,0xc
  423b34:	test   bl,0x3
  423b37:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b3d:	mov    eax,0x0
  423b42:	test   ebx,ebx
  423b44:	je     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b4a:	mov    esi,DWORD PTR [rdi+0xc]
  423b4d:	test   esi,esi
  423b4f:	jle    423c01 <flatcc_verify_union_vector_field@@Base+0x2b1>
  423b55:	mov    eax,ebx
  423b57:	mov    edx,DWORD PTR [r15+rax*1]
  423b5b:	lea    ebp,[rdx+rbx*1]
  423b5e:	mov    eax,0x10
  423b63:	cmp    ebp,ebx
  423b65:	jbe    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b6b:	mov    r10d,DWORD PTR [rdi+0x8]
  423b6f:	mov    ebx,ebp
  423b71:	lea    rdi,[rbx+0x4]
  423b75:	cmp    rdi,r10
  423b78:	ja     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b7a:	and    edi,0x3
  423b7d:	test   rdi,rdi
  423b80:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b82:	mov    ebx,DWORD PTR [r15+rbx*1]
  423b86:	mov    eax,0x19
  423b8b:	cmp    ebx,0x3fffffff
  423b91:	ja     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423b93:	mov    edi,r10d
  423b96:	sub    edi,ebp
  423b98:	add    edi,0xfffffffc
  423b9b:	lea    ebp,[rbx*4+0x0]
  423ba2:	mov    eax,0x1a
  423ba7:	cmp    edi,ebp
  423ba9:	jb     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423bab:	mov    r13d,DWORD PTR [r9]
  423bae:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  423bb3:	mov    eax,0x22
  423bb8:	cmp    ebx,edi
  423bba:	jne    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423bbc:	dec    esi
  423bbe:	mov    QWORD PTR [rsp+0x8],r15
  423bc3:	mov    DWORD PTR [rsp+0x10],r10d
  423bc8:	mov    DWORD PTR [rsp+0x14],esi
  423bcc:	test   edi,edi
  423bce:	je     423bfd <flatcc_verify_union_vector_field@@Base+0x2ad>
  423bd0:	mov    rbx,rdi
  423bd3:	add    r13,r9
  423bd6:	add    edx,r8d
  423bd9:	lea    ebp,[rcx+rdx*1]
  423bdc:	add    ebp,0x4
  423bdf:	xor    r14d,r14d
  423be2:	jmp    423c19 <flatcc_verify_union_vector_field@@Base+0x2c9>
  423be4:	xor    eax,eax
  423be6:	test   edx,edx
  423be8:	setne  al
  423beb:	shl    eax,0x2
  423bee:	add    rsp,0x28
  423bf2:	pop    rbx
  423bf3:	pop    r12
  423bf5:	pop    r13
  423bf7:	pop    r14
  423bf9:	pop    r15
  423bfb:	pop    rbp
  423bfc:	ret    
  423bfd:	xor    eax,eax
  423bff:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c01:	mov    eax,0x3
  423c06:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c08:	test   cl,cl
  423c0a:	jne    423c56 <flatcc_verify_union_vector_field@@Base+0x306>
  423c0c:	inc    r14
  423c0f:	add    ebp,0x4
  423c12:	xor    eax,eax
  423c14:	cmp    rbx,r14
  423c17:	je     423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c19:	mov    eax,ebp
  423c1b:	mov    eax,DWORD PTR [r15+rax*1]
  423c1f:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  423c25:	test   eax,eax
  423c27:	je     423c08 <flatcc_verify_union_vector_field@@Base+0x2b8>
  423c29:	test   cl,cl
  423c2b:	je     423c4f <flatcc_verify_union_vector_field@@Base+0x2ff>
  423c2d:	mov    BYTE PTR [rsp+0x18],cl
  423c31:	mov    DWORD PTR [rsp+0x1c],ebp
  423c35:	mov    DWORD PTR [rsp+0x20],eax
  423c39:	lea    rdi,[rsp+0x8]
  423c3e:	call   r12
  423c41:	test   eax,eax
  423c43:	je     423c0c <flatcc_verify_union_vector_field@@Base+0x2bc>
  423c45:	lea    rdi,[rsp+0x8]
  423c4a:	call   r12
  423c4d:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c4f:	mov    eax,0x21
  423c54:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c56:	mov    eax,0x20
  423c5b:	jmp    423bee <flatcc_verify_union_vector_field@@Base+0x29e>
  423c5d:	nop    DWORD PTR [rax]

0000000000423c60 <grisu3_diy_fp_encode_double@@Base>:
  423c60:	push   rbp
  423c61:	push   r15
  423c63:	push   r14
  423c65:	push   r13
  423c67:	push   r12
  423c69:	push   rbx
  423c6a:	push   rax
  423c6b:	xor    ebx,ebx
  423c6d:	test   ecx,ecx
  423c6f:	setne  r10b
  423c73:	test   rdi,rdi
  423c76:	je     423fb4 <grisu3_diy_fp_encode_double@@Base+0x354>
  423c7c:	movabs r9,0x40000000000000
  423c86:	xor    eax,eax
  423c88:	mov    rcx,rdi
  423c8b:	shr    rcx,0x36
  423c8f:	jne    423cac <grisu3_diy_fp_encode_double@@Base+0x4c>
  423c91:	xor    eax,eax
  423c93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c9d:	nop    DWORD PTR [rax]
  423ca0:	shl    rdi,0xa
  423ca4:	add    eax,0xfffffff6
  423ca7:	cmp    rdi,r9
  423caa:	jb     423ca0 <grisu3_diy_fp_encode_double@@Base+0x40>
  423cac:	sub    esi,edx
  423cae:	test   rdi,rdi
  423cb1:	js     423cca <grisu3_diy_fp_encode_double@@Base+0x6a>
  423cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cbd:	nop    DWORD PTR [rax]
  423cc0:	add    rdi,rdi
  423cc3:	dec    eax
  423cc5:	test   rdi,rdi
  423cc8:	jns    423cc0 <grisu3_diy_fp_encode_double@@Base+0x60>
  423cca:	cmp    esi,0xfffffea3
  423cd0:	jle    423fd3 <grisu3_diy_fp_encode_double@@Base+0x373>
  423cd6:	cmp    esi,0x15c
  423cdc:	jge    423ff2 <grisu3_diy_fp_encode_double@@Base+0x392>
  423ce2:	lea    ecx,[rsi+0x15c]
  423ce8:	sar    ecx,0x1f
  423ceb:	shr    ecx,0x1d
  423cee:	lea    ecx,[rsi+rcx*1]
  423cf1:	add    ecx,0x15c
  423cf7:	sar    ecx,0x3
  423cfa:	movsxd r11,ecx
  423cfd:	shl    r11,0x4
  423d01:	lea    r14,[rip+0x165a8]        # 43a2b0 <flatcc_builder_padding_base@@Base+0x1c00>
  423d08:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  423d0e:	cmp    esi,ecx
  423d10:	jl     424011 <grisu3_diy_fp_encode_double@@Base+0x3b1>
  423d16:	lea    ebp,[rcx+0x8]
  423d19:	cmp    ebp,esi
  423d1b:	jle    424030 <grisu3_diy_fp_encode_double@@Base+0x3d0>
  423d21:	mov    bl,r10b
  423d24:	shl    ebx,0x2
  423d27:	mov    ebp,eax
  423d29:	neg    bpl
  423d2c:	shlx   r10d,ebx,ebp
  423d31:	cmp    esi,ecx
  423d33:	je     423dc5 <grisu3_diy_fp_encode_double@@Base+0x165>
  423d39:	not    ecx
  423d3b:	add    esi,ecx
  423d3d:	cmp    esi,0x7
  423d40:	jae    42404f <grisu3_diy_fp_encode_double@@Base+0x3ef>
  423d46:	movsxd rcx,esi
  423d49:	shl    rcx,0x4
  423d4d:	lea    rbx,[rip+0x164ec]        # 43a240 <flatcc_builder_padding_base@@Base+0x1b90>
  423d54:	mov    rbp,QWORD PTR [rcx+rbx*1]
  423d58:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  423d5d:	mov    rbx,rdi
  423d60:	shr    rbx,0x20
  423d64:	mov    r12d,edi
  423d67:	mov    edi,ebp
  423d69:	mov    rcx,rbp
  423d6c:	shr    rcx,0x20
  423d70:	mov    r13,rcx
  423d73:	imul   r13,rbx
  423d77:	imul   rcx,r12
  423d7b:	imul   rbx,rdi
  423d7f:	imul   rdi,r12
  423d83:	shr    rdi,0x20
  423d87:	mov    ebp,ebx
  423d89:	add    rbp,rdi
  423d8c:	mov    edi,ecx
  423d8e:	add    rdi,rbp
  423d91:	sub    rdi,0xffffffff80000000
  423d98:	shr    rbx,0x20
  423d9c:	add    rbx,r13
  423d9f:	shr    rcx,0x20
  423da3:	add    rcx,rbx
  423da6:	shr    rdi,0x20
  423daa:	add    rdi,rcx
  423dad:	lea    eax,[rax+r15*1]
  423db1:	add    eax,0x40
  423db4:	lea    ecx,[rdx+rsi*1]
  423db7:	add    ecx,0x1
  423dba:	lea    edx,[r10+0x4]
  423dbe:	cmp    ecx,0x13
  423dc1:	cmovg  r10d,edx
  423dc5:	mov    rsi,QWORD PTR [r11+r14*1]
  423dc9:	mov    rdx,rdi
  423dcc:	shr    rdx,0x20
  423dd0:	mov    ecx,edi
  423dd2:	mov    edi,esi
  423dd4:	shr    rsi,0x20
  423dd8:	mov    rbx,rdx
  423ddb:	imul   rbx,rsi
  423ddf:	imul   rsi,rcx
  423de3:	imul   rdx,rdi
  423de7:	imul   rcx,rdi
  423deb:	shr    rcx,0x20
  423def:	mov    edi,edx
  423df1:	add    rdi,rcx
  423df4:	mov    ecx,esi
  423df6:	add    rcx,rdi
  423df9:	sub    rcx,0xffffffff80000000
  423e00:	shr    rdx,0x20
  423e04:	add    rdx,rbx
  423e07:	shr    rsi,0x20
  423e0b:	add    rsi,rdx
  423e0e:	shr    rcx,0x20
  423e12:	cmp    r10d,0x1
  423e16:	sbb    r10d,0x0
  423e1a:	add    rcx,rsi
  423e1d:	je     423fb4 <grisu3_diy_fp_encode_double@@Base+0x354>
  423e23:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  423e29:	lea    eax,[rdx+rax*1]
  423e2c:	add    eax,0x40
  423e2f:	mov    edx,eax
  423e31:	cmp    rcx,r9
  423e34:	jae    423e4c <grisu3_diy_fp_encode_double@@Base+0x1ec>
  423e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e40:	shl    rcx,0xa
  423e44:	add    edx,0xfffffff6
  423e47:	cmp    rcx,r9
  423e4a:	jb     423e40 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  423e4c:	add    r10d,0x9
  423e50:	test   rcx,rcx
  423e53:	js     423e6a <grisu3_diy_fp_encode_double@@Base+0x20a>
  423e55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e5f:	nop
  423e60:	add    rcx,rcx
  423e63:	dec    edx
  423e65:	test   rcx,rcx
  423e68:	jns    423e60 <grisu3_diy_fp_encode_double@@Base+0x200>
  423e6a:	sub    eax,edx
  423e6c:	shlx   r14d,r10d,eax
  423e71:	lea    eax,[rdx+0x40]
  423e74:	xor    ebx,ebx
  423e76:	cmp    eax,0xfffffc0d
  423e7b:	jg     423eb1 <grisu3_diy_fp_encode_double@@Base+0x251>
  423e7d:	mov    ebx,0x40
  423e82:	cmp    eax,0xfffffbcf
  423e87:	jl     423e95 <grisu3_diy_fp_encode_double@@Base+0x235>
  423e89:	mov    ebx,0xfffffbce
  423e8e:	sub    ebx,edx
  423e90:	cmp    ebx,0x3d
  423e93:	jl     423eb1 <grisu3_diy_fp_encode_double@@Base+0x251>
  423e95:	lea    eax,[rbx-0x3e]
  423e98:	shrx   rcx,rcx,rax
  423e9d:	lea    edx,[rbx+rdx*1]
  423ea0:	add    edx,0xffffffc2
  423ea3:	sarx   r14d,r14d,eax
  423ea8:	add    r14d,0x9
  423eac:	mov    ebx,0x3e
  423eb1:	movabs r11,0x1fffffffffffff
  423ebb:	shrx   rdi,rcx,rbx
  423ec0:	add    edx,ebx
  423ec2:	lea    eax,[rbx-0x1]
  423ec5:	mov    esi,0x1
  423eca:	shlx   rsi,rsi,rax
  423ecf:	lea    r10d,[r14+rsi*8]
  423ed3:	cmp    ebx,r10d
  423ed6:	jl     423ee9 <grisu3_diy_fp_encode_double@@Base+0x289>
  423ed8:	inc    rdi
  423edb:	lea    rax,[r11+0x1]
  423edf:	test   rdi,rax
  423ee2:	je     423ee9 <grisu3_diy_fp_encode_double@@Base+0x289>
  423ee4:	shr    rdi,1
  423ee7:	inc    edx
  423ee9:	and    ecx,esi
  423eeb:	cmp    rdi,r11
  423eee:	jbe    423f0f <grisu3_diy_fp_encode_double@@Base+0x2af>
  423ef0:	dec    r9
  423ef3:	mov    rbx,rdi
  423ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f00:	shr    rbx,1
  423f03:	inc    edx
  423f05:	cmp    rdi,r9
  423f08:	mov    rdi,rbx
  423f0b:	ja     423f00 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  423f0d:	jmp    423f12 <grisu3_diy_fp_encode_double@@Base+0x2b2>
  423f0f:	mov    rbx,rdi
  423f12:	shl    ecx,0x3
  423f15:	shl    esi,0x3
  423f18:	vpxor  xmm0,xmm0,xmm0
  423f1c:	cmp    edx,0xfffffbce
  423f22:	jl     423f8d <grisu3_diy_fp_encode_double@@Base+0x32d>
  423f24:	movabs r9,0xfffffffffffff
  423f2e:	lea    rdi,[r9+0x1]
  423f32:	and    rdi,rbx
  423f35:	sete   al
  423f38:	cmp    edx,0xfffffbce
  423f3e:	je     423f66 <grisu3_diy_fp_encode_double@@Base+0x306>
  423f40:	test   rdi,rdi
  423f43:	jne    423f66 <grisu3_diy_fp_encode_double@@Base+0x306>
  423f45:	movabs rdi,0x8000000000000
  423f4f:	nop
  423f50:	dec    edx
  423f52:	test   rbx,rdi
  423f55:	lea    rbx,[rbx+rbx*1]
  423f59:	sete   al
  423f5c:	jne    423f66 <grisu3_diy_fp_encode_double@@Base+0x306>
  423f5e:	cmp    edx,0xfffffbce
  423f64:	jg     423f50 <grisu3_diy_fp_encode_double@@Base+0x2f0>
  423f66:	lea    edi,[rdx+0x433]
  423f6c:	shl    rdi,0x34
  423f70:	xor    ebp,ebp
  423f72:	test   al,al
  423f74:	cmove  rbp,rdi
  423f78:	cmp    edx,0xfffffbce
  423f7e:	cmovne rbp,rdi
  423f82:	and    rbx,r9
  423f85:	or     rbx,rbp
  423f88:	vmovq  xmm0,rbx
  423f8d:	vmovq  QWORD PTR [r8],xmm0
  423f92:	sub    esi,r14d
  423f95:	cmp    esi,ecx
  423f97:	setge  al
  423f9a:	cmp    ecx,r10d
  423f9d:	setge  cl
  423fa0:	or     cl,al
  423fa2:	movzx  eax,cl
  423fa5:	add    rsp,0x8
  423fa9:	pop    rbx
  423faa:	pop    r12
  423fac:	pop    r13
  423fae:	pop    r14
  423fb0:	pop    r15
  423fb2:	pop    rbp
  423fb3:	ret    
  423fb4:	lea    rdi,[rip+0x17093]        # 43b04e <flatcc_builder_padding_base@@Base+0x299e>
  423fbb:	lea    rsi,[rip+0x17095]        # 43b057 <flatcc_builder_padding_base@@Base+0x29a7>
  423fc2:	lea    rcx,[rip+0x170fe]        # 43b0c7 <flatcc_builder_padding_base@@Base+0x2a17>
  423fc9:	mov    edx,0x104
  423fce:	call   406070 <__assert_fail@plt>
  423fd3:	lea    rdi,[rip+0x17126]        # 43b100 <flatcc_builder_padding_base@@Base+0x2a50>
  423fda:	lea    rsi,[rip+0x16b2f]        # 43ab10 <flatcc_builder_padding_base@@Base+0x2460>
  423fe1:	lea    rcx,[rip+0x17137]        # 43b11f <flatcc_builder_padding_base@@Base+0x2a6f>
  423fe8:	mov    edx,0x50
  423fed:	call   406070 <__assert_fail@plt>
  423ff2:	lea    rdi,[rip+0x1715f]        # 43b158 <flatcc_builder_padding_base@@Base+0x2aa8>
  423ff9:	lea    rsi,[rip+0x16b10]        # 43ab10 <flatcc_builder_padding_base@@Base+0x2460>
  424000:	lea    rcx,[rip+0x17118]        # 43b11f <flatcc_builder_padding_base@@Base+0x2a6f>
  424007:	mov    edx,0x51
  42400c:	call   406070 <__assert_fail@plt>
  424011:	lea    rdi,[rip+0x1716b]        # 43b183 <flatcc_builder_padding_base@@Base+0x2ad3>
  424018:	lea    rsi,[rip+0x16af1]        # 43ab10 <flatcc_builder_padding_base@@Base+0x2460>
  42401f:	lea    rcx,[rip+0x170f9]        # 43b11f <flatcc_builder_padding_base@@Base+0x2a6f>
  424026:	mov    edx,0x58
  42402b:	call   406070 <__assert_fail@plt>
  424030:	lea    rdi,[rip+0x1715b]        # 43b192 <flatcc_builder_padding_base@@Base+0x2ae2>
  424037:	lea    rsi,[rip+0x16ad2]        # 43ab10 <flatcc_builder_padding_base@@Base+0x2460>
  42403e:	lea    rcx,[rip+0x170da]        # 43b11f <flatcc_builder_padding_base@@Base+0x2a6f>
  424045:	mov    edx,0x59
  42404a:	call   406070 <__assert_fail@plt>
  42404f:	lea    rdi,[rip+0x16a9e]        # 43aaf4 <flatcc_builder_padding_base@@Base+0x2444>
  424056:	lea    rsi,[rip+0x16ab3]        # 43ab10 <flatcc_builder_padding_base@@Base+0x2460>
  42405d:	lea    rcx,[rip+0x16b1d]        # 43ab81 <flatcc_builder_padding_base@@Base+0x24d1>
  424064:	mov    edx,0xb9
  424069:	call   406070 <__assert_fail@plt>
  42406e:	xchg   ax,ax

0000000000424070 <flatcc_json_parser_error_string@@Base>:
  424070:	cmp    edi,0x22
  424073:	ja     424084 <flatcc_json_parser_error_string@@Base+0x14>
  424075:	movsxd rax,edi
  424078:	lea    rcx,[rip+0x1ec49]        # 442cc8 <flatcc_builder_padding_base@@Base+0xa618>
  42407f:	mov    rax,QWORD PTR [rcx+rax*8]
  424083:	ret    
  424084:	lea    rax,[rip+0x15f35]        # 439fc0 <flatcc_builder_padding_base@@Base+0x1910>
  42408b:	ret    
  42408c:	nop    DWORD PTR [rax+0x0]

0000000000424090 <flatcc_json_parser_set_error@@Base>:
  424090:	mov    rax,rdx
  424093:	cmp    DWORD PTR [rdi+0x20],0x0
  424097:	je     42409a <flatcc_json_parser_set_error@@Base+0xa>
  424099:	ret    
  42409a:	mov    DWORD PTR [rdi+0x20],ecx
  42409d:	mov    ecx,DWORD PTR [rdi+0x8]
  4240a0:	mov    edx,esi
  4240a2:	sub    edx,ecx
  4240a4:	inc    edx
  4240a6:	mov    DWORD PTR [rdi+0x1c],edx
  4240a9:	mov    QWORD PTR [rdi+0x38],rsi
  4240ad:	ret    
  4240ae:	xchg   ax,ax

00000000004240b0 <flatcc_json_parser_string_part@@Base>:
  4240b0:	mov    rax,rsi
  4240b3:	cmp    rsi,rdx
  4240b6:	je     4240dd <flatcc_json_parser_string_part@@Base+0x2d>
  4240b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4240c0:	movzx  ecx,BYTE PTR [rax]
  4240c3:	cmp    cl,0x20
  4240c6:	jb     4240ec <flatcc_json_parser_string_part@@Base+0x3c>
  4240c8:	cmp    cl,0x22
  4240cb:	je     42410c <flatcc_json_parser_string_part@@Base+0x5c>
  4240cd:	cmp    cl,0x5c
  4240d0:	je     42410c <flatcc_json_parser_string_part@@Base+0x5c>
  4240d2:	inc    rax
  4240d5:	cmp    rdx,rax
  4240d8:	jne    4240c0 <flatcc_json_parser_string_part@@Base+0x10>
  4240da:	mov    rax,rdx
  4240dd:	cmp    DWORD PTR [rdi+0x20],0x0
  4240e1:	jne    424109 <flatcc_json_parser_string_part@@Base+0x59>
  4240e3:	mov    DWORD PTR [rdi+0x20],0x14
  4240ea:	jmp    4240f9 <flatcc_json_parser_string_part@@Base+0x49>
  4240ec:	cmp    DWORD PTR [rdi+0x20],0x0
  4240f0:	jne    424109 <flatcc_json_parser_string_part@@Base+0x59>
  4240f2:	mov    DWORD PTR [rdi+0x20],0x11
  4240f9:	mov    ecx,DWORD PTR [rdi+0x8]
  4240fc:	mov    esi,eax
  4240fe:	sub    esi,ecx
  424100:	inc    esi
  424102:	mov    DWORD PTR [rdi+0x1c],esi
  424105:	mov    QWORD PTR [rdi+0x38],rax
  424109:	mov    rax,rdx
  42410c:	ret    
  42410d:	nop    DWORD PTR [rax]

0000000000424110 <flatcc_json_parser_space_ext@@Base>:
  424110:	mov    rax,rsi
  424113:	lea    rcx,[rip+0x15eb6]        # 439fd0 <flatcc_builder_padding_base@@Base+0x1920>
  42411a:	mov    rsi,rdx
  42411d:	sub    rsi,rax
  424120:	cmp    rsi,0x10
  424124:	jl     424156 <flatcc_json_parser_space_ext@@Base+0x46>
  424126:	cmp    BYTE PTR [rax],0x20
  424129:	jg     4241f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  42412f:	movzx  r8d,WORD PTR [rax]
  424133:	lea    rsi,[rax+0x2]
  424137:	cmp    r8d,0x2020
  42413e:	cmovne rsi,rax
  424142:	lea    rax,[rsi+0x1]
  424146:	cmp    BYTE PTR [rsi],0x20
  424149:	cmovne rax,rsi
  42414d:	cmp    BYTE PTR [rax],0x20
  424150:	jg     4241f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  424156:	cmp    rax,rdx
  424159:	je     4241ed <flatcc_json_parser_space_ext@@Base+0xdd>
  42415f:	nop
  424160:	cmp    BYTE PTR [rax],0x20
  424163:	jne    424170 <flatcc_json_parser_space_ext@@Base+0x60>
  424165:	inc    rax
  424168:	cmp    rdx,rax
  42416b:	jne    424160 <flatcc_json_parser_space_ext@@Base+0x50>
  42416d:	jmp    4241ed <flatcc_json_parser_space_ext@@Base+0xdd>
  42416f:	nop
  424170:	cmp    rdx,rax
  424173:	jne    424195 <flatcc_json_parser_space_ext@@Base+0x85>
  424175:	jmp    4241ed <flatcc_json_parser_space_ext@@Base+0xdd>
  424177:	cmp    BYTE PTR [rax+0x1],0xa
  42417b:	sete   sil
  42417f:	movzx  esi,sil
  424183:	add    rax,rsi
  424186:	inc    DWORD PTR [rdi+0x18]
  424189:	inc    rax
  42418c:	mov    QWORD PTR [rdi+0x8],rax
  424190:	cmp    rax,rdx
  424193:	je     4241ed <flatcc_json_parser_space_ext@@Base+0xdd>
  424195:	movsx  esi,BYTE PTR [rax]
  424198:	cmp    esi,0x20
  42419b:	jg     4241f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  42419d:	add    esi,0xfffffff7
  4241a0:	cmp    esi,0x17
  4241a3:	ja     4241d0 <flatcc_json_parser_space_ext@@Base+0xc0>
  4241a5:	movsxd rsi,DWORD PTR [rcx+rsi*4]
  4241a9:	add    rsi,rcx
  4241ac:	jmp    rsi
  4241ae:	inc    rax
  4241b1:	jmp    424190 <flatcc_json_parser_space_ext@@Base+0x80>
  4241b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241bd:	nop    DWORD PTR [rax]
  4241c0:	mov    rsi,rdx
  4241c3:	sub    rsi,rax
  4241c6:	cmp    rsi,0x2
  4241ca:	jge    424177 <flatcc_json_parser_space_ext@@Base+0x67>
  4241cc:	xor    esi,esi
  4241ce:	jmp    42417f <flatcc_json_parser_space_ext@@Base+0x6f>
  4241d0:	cmp    DWORD PTR [rdi+0x20],0x0
  4241d4:	jne    4241ed <flatcc_json_parser_space_ext@@Base+0xdd>
  4241d6:	mov    DWORD PTR [rdi+0x20],0x5
  4241dd:	mov    ecx,DWORD PTR [rdi+0x8]
  4241e0:	mov    esi,eax
  4241e2:	sub    esi,ecx
  4241e4:	inc    esi
  4241e6:	mov    DWORD PTR [rdi+0x1c],esi
  4241e9:	mov    QWORD PTR [rdi+0x38],rax
  4241ed:	mov    rax,rdx
  4241f0:	ret    
  4241f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424200 <flatcc_json_parser_string_escape@@Base>:
  424200:	push   rbp
  424201:	push   r14
  424203:	push   rbx
  424204:	mov    rax,rdx
  424207:	sub    rdx,rsi
  42420a:	cmp    rdx,0x2
  42420e:	jl     424298 <flatcc_json_parser_string_escape@@Base+0x98>
  424214:	cmp    BYTE PTR [rsi],0x5c
  424217:	jne    424298 <flatcc_json_parser_string_escape@@Base+0x98>
  424219:	movsx  ebp,BYTE PTR [rsi+0x1]
  42421d:	add    ebp,0xffffffde
  424220:	cmp    ebp,0x56
  424223:	ja     424298 <flatcc_json_parser_string_escape@@Base+0x98>
  424225:	lea    rbx,[rip+0x15e04]        # 43a030 <flatcc_builder_padding_base@@Base+0x1980>
  42422c:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  424230:	add    rbp,rbx
  424233:	jmp    rbp
  424235:	mov    WORD PTR [rcx],0x2201
  42423a:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  42423c:	mov    WORD PTR [rcx],0x2f01
  424241:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  424243:	mov    WORD PTR [rcx],0x5c01
  424248:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  42424a:	mov    WORD PTR [rcx],0x801
  42424f:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  424251:	mov    WORD PTR [rcx],0xc01
  424256:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  424258:	mov    WORD PTR [rcx],0xa01
  42425d:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  42425f:	mov    WORD PTR [rcx],0xd01
  424264:	jmp    42426b <flatcc_json_parser_string_escape@@Base+0x6b>
  424266:	mov    WORD PTR [rcx],0x901
  42426b:	add    rsi,0x2
  42426f:	mov    rax,rsi
  424272:	jmp    4242b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  424274:	cmp    rdx,0x5
  424278:	jle    424298 <flatcc_json_parser_string_escape@@Base+0x98>
  42427a:	movzx  edx,BYTE PTR [rsi+0x2]
  42427e:	lea    ebp,[rdx-0x30]
  424281:	cmp    bpl,0x9
  424285:	ja     4242d5 <flatcc_json_parser_string_escape@@Base+0xd5>
  424287:	movzx  edx,dx
  42428a:	shl    edx,0xc
  42428d:	jmp    4242ee <flatcc_json_parser_string_escape@@Base+0xee>
  42428f:	mov    BYTE PTR [rcx],0x1
  424292:	cmp    rdx,0x3
  424296:	jg     4242bd <flatcc_json_parser_string_escape@@Base+0xbd>
  424298:	mov    BYTE PTR [rcx],0x0
  42429b:	cmp    DWORD PTR [rdi+0x20],0x0
  42429f:	jne    4242b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  4242a1:	mov    DWORD PTR [rdi+0x20],0x12
  4242a8:	mov    ecx,DWORD PTR [rdi+0x8]
  4242ab:	mov    edx,esi
  4242ad:	sub    edx,ecx
  4242af:	inc    edx
  4242b1:	mov    DWORD PTR [rdi+0x1c],edx
  4242b4:	mov    QWORD PTR [rdi+0x38],rsi
  4242b8:	pop    rbx
  4242b9:	pop    r14
  4242bb:	pop    rbp
  4242bc:	ret    
  4242bd:	mov    dl,BYTE PTR [rsi+0x2]
  4242c0:	lea    ebp,[rdx-0x30]
  4242c3:	cmp    bpl,0x9
  4242c7:	ja     42439c <flatcc_json_parser_string_escape@@Base+0x19c>
  4242cd:	shl    dl,0x4
  4242d0:	jmp    4243b3 <flatcc_json_parser_string_escape@@Base+0x1b3>
  4242d5:	mov    ebx,edx
  4242d7:	or     bl,0x20
  4242da:	add    bl,0x9f
  4242dd:	cmp    bl,0x5
  4242e0:	ja     424298 <flatcc_json_parser_string_escape@@Base+0x98>
  4242e2:	movzx  edx,dx
  4242e5:	shl    edx,0xc
  4242e8:	add    edx,0xffff9000
  4242ee:	mov    r8b,BYTE PTR [rsi+0x3]
  4242f2:	lea    ebp,[r8-0x30]
  4242f6:	mov    r9w,0xd000
  4242fb:	cmp    bpl,0xa
  4242ff:	jb     424314 <flatcc_json_parser_string_escape@@Base+0x114>
  424301:	or     r8b,0x20
  424305:	lea    ebp,[r8-0x61]
  424309:	mov    r9w,0xa900
  42430e:	cmp    bpl,0x6
  424312:	jae    424298 <flatcc_json_parser_string_escape@@Base+0x98>
  424314:	mov    r10b,BYTE PTR [rsi+0x4]
  424318:	lea    ebx,[r10-0x30]
  42431c:	mov    r11w,0xfd00
  424321:	cmp    bl,0xa
  424324:	jb     42433c <flatcc_json_parser_string_escape@@Base+0x13c>
  424326:	or     r10b,0x20
  42432a:	lea    ebx,[r10-0x61]
  42432e:	mov    r11w,0xfa90
  424333:	cmp    bl,0x6
  424336:	jae    424298 <flatcc_json_parser_string_escape@@Base+0x98>
  42433c:	mov    bl,BYTE PTR [rsi+0x5]
  42433f:	lea    ebp,[rbx-0x30]
  424342:	mov    r14w,0xffd0
  424347:	cmp    bpl,0xa
  42434b:	jb     424362 <flatcc_json_parser_string_escape@@Base+0x162>
  42434d:	or     bl,0x20
  424350:	lea    ebp,[rbx-0x61]
  424353:	mov    r14w,0xffa9
  424358:	cmp    bpl,0x6
  42435c:	jae    424298 <flatcc_json_parser_string_escape@@Base+0x98>
  424362:	movzx  eax,r8b
  424366:	shl    eax,0x8
  424369:	add    r9d,eax
  42436c:	or     edx,r9d
  42436f:	movsx  eax,r10b
  424373:	shl    eax,0x4
  424376:	movsx  edi,r11w
  42437a:	add    edi,eax
  42437c:	or     edx,edi
  42437e:	movsx  eax,bl
  424381:	movsx  edi,r14w
  424385:	add    edi,eax
  424387:	or     edx,edi
  424389:	cmp    dx,0x7f
  42438d:	ja     4243e6 <flatcc_json_parser_string_escape@@Base+0x1e6>
  42438f:	mov    BYTE PTR [rcx],0x1
  424392:	mov    eax,0x1
  424397:	jmp    42442c <flatcc_json_parser_string_escape@@Base+0x22c>
  42439c:	mov    ebx,edx
  42439e:	or     bl,0x20
  4243a1:	add    bl,0x9f
  4243a4:	cmp    bl,0x5
  4243a7:	ja     424298 <flatcc_json_parser_string_escape@@Base+0x98>
  4243ad:	shl    dl,0x4
  4243b0:	add    dl,0x90
  4243b3:	mov    bpl,BYTE PTR [rsi+0x3]
  4243b7:	lea    ebx,[rbp-0x30]
  4243ba:	cmp    bl,0xa
  4243bd:	jb     4243d5 <flatcc_json_parser_string_escape@@Base+0x1d5>
  4243bf:	or     bpl,0x20
  4243c3:	lea    ebx,[rbp-0x61]
  4243c6:	cmp    bl,0x5
  4243c9:	ja     424298 <flatcc_json_parser_string_escape@@Base+0x98>
  4243cf:	add    bpl,0xa9
  4243d3:	mov    ebx,ebp
  4243d5:	or     bl,dl
  4243d7:	mov    BYTE PTR [rcx+0x1],bl
  4243da:	add    rsi,0x4
  4243de:	mov    rax,rsi
  4243e1:	jmp    4242b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  4243e6:	movzx  eax,dx
  4243e9:	cmp    eax,0x7ff
  4243ee:	ja     42440a <flatcc_json_parser_string_escape@@Base+0x20a>
  4243f0:	mov    BYTE PTR [rcx],0x2
  4243f3:	mov    eax,edx
  4243f5:	shr    eax,0x6
  4243f8:	or     al,0xc0
  4243fa:	mov    BYTE PTR [rcx+0x1],al
  4243fd:	and    dl,0x3f
  424400:	or     dl,0x80
  424403:	mov    eax,0x2
  424408:	jmp    42442c <flatcc_json_parser_string_escape@@Base+0x22c>
  42440a:	mov    BYTE PTR [rcx],0x3
  42440d:	shr    eax,0xc
  424410:	or     al,0xe0
  424412:	mov    BYTE PTR [rcx+0x1],al
  424415:	mov    eax,edx
  424417:	shr    eax,0x6
  42441a:	and    al,0x3f
  42441c:	or     al,0x80
  42441e:	mov    BYTE PTR [rcx+0x2],al
  424421:	and    dl,0x3f
  424424:	or     dl,0x80
  424427:	mov    eax,0x3
  42442c:	mov    BYTE PTR [rcx+rax*1],dl
  42442f:	add    rsi,0x6
  424433:	mov    rax,rsi
  424436:	jmp    4242b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  42443b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424440 <flatcc_json_parser_skip_constant@@Base>:
  424440:	push   r15
  424442:	push   r14
  424444:	push   rbx
  424445:	mov    rbx,rsi
  424448:	cmp    rsi,rdx
  42444b:	je     4244c2 <flatcc_json_parser_skip_constant@@Base+0x82>
  42444d:	mov    r14,rdx
  424450:	mov    r15,rdi
  424453:	jmp    42446e <flatcc_json_parser_skip_constant@@Base+0x2e>
  424455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42445f:	nop
  424460:	inc    rbx
  424463:	mov    rax,rbx
  424466:	mov    rbx,rax
  424469:	cmp    rax,r14
  42446c:	je     4244bf <flatcc_json_parser_skip_constant@@Base+0x7f>
  42446e:	movzx  eax,BYTE PTR [rbx]
  424471:	test   al,al
  424473:	js     424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  424475:	cmp    al,0x5f
  424477:	je     424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  424479:	cmp    al,0x2e
  42447b:	je     424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  42447d:	lea    ecx,[rax-0x30]
  424480:	cmp    cl,0x9
  424483:	jbe    424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  424485:	mov    ecx,eax
  424487:	or     cl,0x20
  42448a:	add    cl,0x9f
  42448d:	cmp    cl,0x19
  424490:	jbe    424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  424492:	mov    rcx,r14
  424495:	sub    rcx,rbx
  424498:	cmp    rcx,0x2
  42449c:	jl     4244aa <flatcc_json_parser_skip_constant@@Base+0x6a>
  42449e:	cmp    al,0x20
  4244a0:	jg     4244c2 <flatcc_json_parser_skip_constant@@Base+0x82>
  4244a2:	jne    4244aa <flatcc_json_parser_skip_constant@@Base+0x6a>
  4244a4:	cmp    BYTE PTR [rbx+0x1],0x20
  4244a8:	jg     424460 <flatcc_json_parser_skip_constant@@Base+0x20>
  4244aa:	mov    rdi,r15
  4244ad:	mov    rsi,rbx
  4244b0:	mov    rdx,r14
  4244b3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4244b8:	cmp    rax,rbx
  4244bb:	jne    424466 <flatcc_json_parser_skip_constant@@Base+0x26>
  4244bd:	jmp    4244c2 <flatcc_json_parser_skip_constant@@Base+0x82>
  4244bf:	mov    rbx,r14
  4244c2:	mov    rax,rbx
  4244c5:	pop    rbx
  4244c6:	pop    r14
  4244c8:	pop    r15
  4244ca:	ret    
  4244cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004244d0 <flatcc_json_parser_match_constant@@Base>:
  4244d0:	push   r15
  4244d2:	push   r14
  4244d4:	push   r12
  4244d6:	push   rbx
  4244d7:	push   rax
  4244d8:	mov    r14,r8
  4244db:	mov    r15,rsi
  4244de:	movsxd rbx,ecx
  4244e1:	mov    rax,rdx
  4244e4:	sub    rax,rsi
  4244e7:	cmp    rax,rbx
  4244ea:	jle    4245d4 <flatcc_json_parser_match_constant@@Base+0x104>
  4244f0:	mov    r12,rdx
  4244f3:	add    rbx,r15
  4244f6:	cmp    DWORD PTR [rdi+0x14],0x0
  4244fa:	je     42455a <flatcc_json_parser_match_constant@@Base+0x8a>
  4244fc:	mov    rax,r12
  4244ff:	sub    rax,rbx
  424502:	cmp    rax,0x2
  424506:	jl     424523 <flatcc_json_parser_match_constant@@Base+0x53>
  424508:	cmp    BYTE PTR [rbx],0x20
  42450b:	mov    rax,rbx
  42450e:	jg     42452e <flatcc_json_parser_match_constant@@Base+0x5e>
  424510:	jne    424523 <flatcc_json_parser_match_constant@@Base+0x53>
  424512:	cmp    BYTE PTR [rbx+0x1],0x20
  424516:	jle    424523 <flatcc_json_parser_match_constant@@Base+0x53>
  424518:	lea    rax,[rbx+0x1]
  42451c:	cmp    rax,r12
  42451f:	jne    424533 <flatcc_json_parser_match_constant@@Base+0x63>
  424521:	jmp    424592 <flatcc_json_parser_match_constant@@Base+0xc2>
  424523:	mov    rsi,rbx
  424526:	mov    rdx,r12
  424529:	call   424110 <flatcc_json_parser_space_ext@@Base>
  42452e:	cmp    rax,r12
  424531:	je     424592 <flatcc_json_parser_match_constant@@Base+0xc2>
  424533:	cmp    rax,rbx
  424536:	je     42459e <flatcc_json_parser_match_constant@@Base+0xce>
  424538:	mov    cl,BYTE PTR [rax]
  42453a:	cmp    cl,0x5f
  42453d:	je     42454e <flatcc_json_parser_match_constant@@Base+0x7e>
  42453f:	test   cl,cl
  424541:	js     42454e <flatcc_json_parser_match_constant@@Base+0x7e>
  424543:	or     cl,0x20
  424546:	add    cl,0x9f
  424549:	cmp    cl,0x19
  42454c:	ja     42459e <flatcc_json_parser_match_constant@@Base+0xce>
  42454e:	mov    DWORD PTR [r14],0x1
  424555:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  42455a:	movsx  eax,BYTE PTR [rbx]
  42455d:	cmp    eax,0x20
  424560:	jne    4245b8 <flatcc_json_parser_match_constant@@Base+0xe8>
  424562:	lea    rax,[r12-0x1]
  424567:	nop    WORD PTR [rax+rax*1+0x0]
  424570:	cmp    rax,rbx
  424573:	je     424592 <flatcc_json_parser_match_constant@@Base+0xc2>
  424575:	movzx  ecx,BYTE PTR [rbx+0x1]
  424579:	inc    rbx
  42457c:	cmp    cl,0x20
  42457f:	je     424570 <flatcc_json_parser_match_constant@@Base+0xa0>
  424581:	cmp    cl,0x22
  424584:	je     4245ea <flatcc_json_parser_match_constant@@Base+0x11a>
  424586:	mov    DWORD PTR [r14],0x1
  42458d:	mov    rax,rbx
  424590:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  424592:	mov    DWORD PTR [r14],0x0
  424599:	mov    rax,r12
  42459c:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  42459e:	mov    DWORD PTR [r14],0x0
  4245a5:	mov    cl,BYTE PTR [rax]
  4245a7:	cmp    cl,0x2c
  4245aa:	je     4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  4245ac:	cmp    cl,0x5d
  4245af:	je     4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  4245b1:	cmp    cl,0x7d
  4245b4:	jne    4245db <flatcc_json_parser_match_constant@@Base+0x10b>
  4245b6:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  4245b8:	cmp    eax,0x22
  4245bb:	je     4245ea <flatcc_json_parser_match_constant@@Base+0x11a>
  4245bd:	cmp    eax,0x5c
  4245c0:	jne    4245d4 <flatcc_json_parser_match_constant@@Base+0x104>
  4245c2:	mov    DWORD PTR [r14],0x0
  4245c9:	cmp    DWORD PTR [rdi+0x20],0x0
  4245cd:	je     42462a <flatcc_json_parser_match_constant@@Base+0x15a>
  4245cf:	mov    rax,r12
  4245d2:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  4245d4:	mov    DWORD PTR [r14],0x0
  4245db:	mov    rax,r15
  4245de:	add    rsp,0x8
  4245e2:	pop    rbx
  4245e3:	pop    r12
  4245e5:	pop    r14
  4245e7:	pop    r15
  4245e9:	ret    
  4245ea:	lea    rax,[rbx+0x1]
  4245ee:	mov    rcx,rbx
  4245f1:	not    rcx
  4245f4:	cmp    rcx,0x2
  4245f8:	jl     424617 <flatcc_json_parser_match_constant@@Base+0x147>
  4245fa:	cmp    BYTE PTR [rax],0x20
  4245fd:	jg     424621 <flatcc_json_parser_match_constant@@Base+0x151>
  4245ff:	jne    424617 <flatcc_json_parser_match_constant@@Base+0x147>
  424601:	cmp    BYTE PTR [rbx+0x2],0x20
  424605:	jle    424617 <flatcc_json_parser_match_constant@@Base+0x147>
  424607:	add    rbx,0x2
  42460b:	mov    rax,rbx
  42460e:	mov    DWORD PTR [r14],0x0
  424615:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  424617:	mov    rsi,rax
  42461a:	xor    edx,edx
  42461c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424621:	mov    DWORD PTR [r14],0x0
  424628:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  42462a:	mov    DWORD PTR [rdi+0x20],0x12
  424631:	mov    eax,DWORD PTR [rdi+0x8]
  424634:	mov    ecx,ebx
  424636:	sub    ecx,eax
  424638:	inc    ecx
  42463a:	mov    DWORD PTR [rdi+0x1c],ecx
  42463d:	mov    QWORD PTR [rdi+0x38],rbx
  424641:	mov    rax,r12
  424644:	jmp    4245de <flatcc_json_parser_match_constant@@Base+0x10e>
  424646:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000424650 <flatcc_json_parser_unmatched_symbol@@Base>:
  424650:	push   r14
  424652:	push   rbx
  424653:	push   rax
  424654:	mov    rbx,rdx
  424657:	mov    r14,rdi
  42465a:	test   BYTE PTR [rdi+0x10],0x1
  42465e:	jne    42468a <flatcc_json_parser_unmatched_symbol@@Base+0x3a>
  424660:	cmp    DWORD PTR [r14+0x20],0x0
  424665:	jne    4247e2 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  42466b:	mov    DWORD PTR [r14+0x20],0xd
  424673:	mov    eax,DWORD PTR [r14+0x8]
  424677:	mov    ecx,esi
  424679:	sub    ecx,eax
  42467b:	inc    ecx
  42467d:	mov    DWORD PTR [r14+0x1c],ecx
  424681:	mov    QWORD PTR [r14+0x38],rsi
  424685:	jmp    4247e2 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  42468a:	cmp    DWORD PTR [r14+0x14],0x0
  42468f:	je     4246e7 <flatcc_json_parser_unmatched_symbol@@Base+0x97>
  424691:	cmp    rsi,rbx
  424694:	je     424734 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  42469a:	mov    dl,BYTE PTR [rsi]
  42469c:	cmp    dl,0x21
  42469f:	jl     424734 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  4246a5:	lea    rcx,[rbx-0x1]
  4246a9:	nop    DWORD PTR [rax+0x0]
  4246b0:	mov    eax,edx
  4246b2:	cmp    dl,0x2e
  4246b5:	je     4246d0 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  4246b7:	cmp    al,0x5f
  4246b9:	je     4246d0 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  4246bb:	lea    edx,[rax-0x30]
  4246be:	cmp    dl,0x9
  4246c1:	jbe    4246d0 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
  4246c3:	mov    edx,eax
  4246c5:	or     dl,0x20
  4246c8:	add    dl,0x9f
  4246cb:	cmp    dl,0x1a
  4246ce:	jae    4246e1 <flatcc_json_parser_unmatched_symbol@@Base+0x91>
  4246d0:	cmp    rcx,rsi
  4246d3:	je     424719 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  4246d5:	movzx  edx,BYTE PTR [rsi+0x1]
  4246d9:	inc    rsi
  4246dc:	cmp    dl,0x21
  4246df:	jge    4246b0 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
  4246e1:	cmp    al,0x2e
  4246e3:	je     424720 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  4246e5:	jmp    424734 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  4246e7:	cmp    rsi,rbx
  4246ea:	jne    4246fc <flatcc_json_parser_unmatched_symbol@@Base+0xac>
  4246ec:	jmp    42473c <flatcc_json_parser_unmatched_symbol@@Base+0xec>
  4246ee:	xchg   ax,ax
  4246f0:	cmp    al,0x22
  4246f2:	je     424714 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
  4246f4:	inc    rsi
  4246f7:	cmp    rsi,rbx
  4246fa:	je     424739 <flatcc_json_parser_unmatched_symbol@@Base+0xe9>
  4246fc:	movzx  eax,BYTE PTR [rsi]
  4246ff:	cmp    al,0x5c
  424701:	jne    4246f0 <flatcc_json_parser_unmatched_symbol@@Base+0xa0>
  424703:	mov    rax,rbx
  424706:	sub    rax,rsi
  424709:	cmp    rax,0x2
  42470d:	jl     42473c <flatcc_json_parser_unmatched_symbol@@Base+0xec>
  42470f:	inc    rsi
  424712:	jmp    4246f4 <flatcc_json_parser_unmatched_symbol@@Base+0xa4>
  424714:	inc    rsi
  424717:	jmp    424734 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  424719:	mov    rsi,rbx
  42471c:	cmp    al,0x2e
  42471e:	jne    424734 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
  424720:	cmp    DWORD PTR [r14+0x20],0x0
  424725:	mov    rax,rbx
  424728:	jne    424763 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  42472a:	mov    DWORD PTR [r14+0x20],0x5
  424732:	jmp    42474e <flatcc_json_parser_unmatched_symbol@@Base+0xfe>
  424734:	mov    rax,rsi
  424737:	jmp    424763 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  424739:	mov    rsi,rbx
  42473c:	cmp    DWORD PTR [r14+0x20],0x0
  424741:	mov    rax,rbx
  424744:	jne    424763 <flatcc_json_parser_unmatched_symbol@@Base+0x113>
  424746:	mov    DWORD PTR [r14+0x20],0x14
  42474e:	mov    eax,DWORD PTR [r14+0x8]
  424752:	mov    ecx,esi
  424754:	sub    ecx,eax
  424756:	inc    ecx
  424758:	mov    DWORD PTR [r14+0x1c],ecx
  42475c:	mov    QWORD PTR [r14+0x38],rsi
  424760:	mov    rax,rbx
  424763:	mov    rcx,rbx
  424766:	sub    rcx,rax
  424769:	cmp    rcx,0x2
  42476d:	jl     424786 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  42476f:	cmp    BYTE PTR [rax],0x20
  424772:	jg     424794 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
  424774:	jne    424786 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  424776:	cmp    BYTE PTR [rax+0x1],0x20
  42477a:	jle    424786 <flatcc_json_parser_unmatched_symbol@@Base+0x136>
  42477c:	inc    rax
  42477f:	cmp    rax,rbx
  424782:	jne    424799 <flatcc_json_parser_unmatched_symbol@@Base+0x149>
  424784:	jmp    4247c1 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  424786:	mov    rdi,r14
  424789:	mov    rsi,rax
  42478c:	mov    rdx,rbx
  42478f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424794:	cmp    rax,rbx
  424797:	je     4247c1 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  424799:	cmp    BYTE PTR [rax],0x3a
  42479c:	jne    4247c1 <flatcc_json_parser_unmatched_symbol@@Base+0x171>
  42479e:	lea    rsi,[rax+0x1]
  4247a2:	mov    rcx,rbx
  4247a5:	sub    rcx,rsi
  4247a8:	cmp    rcx,0x2
  4247ac:	jl     4247ed <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  4247ae:	cmp    BYTE PTR [rsi],0x20
  4247b1:	jg     4247fb <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  4247b3:	jne    4247ed <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  4247b5:	cmp    BYTE PTR [rax+0x2],0x20
  4247b9:	jle    4247ed <flatcc_json_parser_unmatched_symbol@@Base+0x19d>
  4247bb:	add    rax,0x2
  4247bf:	jmp    4247f8 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
  4247c1:	cmp    DWORD PTR [r14+0x20],0x0
  4247c6:	jne    4247e2 <flatcc_json_parser_unmatched_symbol@@Base+0x192>
  4247c8:	mov    DWORD PTR [r14+0x20],0x4
  4247d0:	mov    ecx,DWORD PTR [r14+0x8]
  4247d4:	mov    edx,eax
  4247d6:	sub    edx,ecx
  4247d8:	inc    edx
  4247da:	mov    DWORD PTR [r14+0x1c],edx
  4247de:	mov    QWORD PTR [r14+0x38],rax
  4247e2:	mov    rax,rbx
  4247e5:	add    rsp,0x8
  4247e9:	pop    rbx
  4247ea:	pop    r14
  4247ec:	ret    
  4247ed:	mov    rdi,r14
  4247f0:	mov    rdx,rbx
  4247f3:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4247f8:	mov    rsi,rax
  4247fb:	mov    rdi,r14
  4247fe:	mov    rdx,rbx
  424801:	add    rsp,0x8
  424805:	pop    rbx
  424806:	pop    r14
  424808:	jmp    424810 <flatcc_json_parser_generic_json@@Base>
  42480d:	nop    DWORD PTR [rax]

0000000000424810 <flatcc_json_parser_generic_json@@Base>:
  424810:	push   rbp
  424811:	push   r15
  424813:	push   r14
  424815:	push   r13
  424817:	push   r12
  424819:	push   rbx
  42481a:	sub    rsp,0x238
  424821:	mov    rbx,rsi
  424824:	cmp    rsi,rdx
  424827:	je     4252fa <flatcc_json_parser_generic_json@@Base+0xaea>
  42482d:	mov    r12,rdx
  424830:	mov    r14,rdi
  424833:	lea    rax,[rsp+0x30]
  424838:	lea    r15,[rdi+0x20]
  42483c:	lea    rcx,[rdi+0x8]
  424840:	mov    QWORD PTR [rsp+0x8],rcx
  424845:	lea    rcx,[rdi+0x1c]
  424849:	mov    QWORD PTR [rsp+0x10],rcx
  42484e:	lea    rcx,[rdi+0x38]
  424852:	mov    QWORD PTR [rsp+0x18],rcx
  424857:	lea    rcx,[rdx-0x1]
  42485b:	mov    QWORD PTR [rsp+0x20],rcx
  424860:	xor    ebp,ebp
  424862:	test   rbp,rbp
  424865:	je     424a73 <flatcc_json_parser_generic_json@@Base+0x263>
  42486b:	cmp    BYTE PTR [rax-0x1],0x7d
  42486f:	jne    424a73 <flatcc_json_parser_generic_json@@Base+0x263>
  424875:	mov    al,BYTE PTR [rbx]
  424877:	cmp    al,0x2e
  424879:	je     4248d0 <flatcc_json_parser_generic_json@@Base+0xc0>
  42487b:	cmp    al,0x22
  42487d:	jne    42490f <flatcc_json_parser_generic_json@@Base+0xff>
  424883:	inc    rbx
  424886:	mov    DWORD PTR [r14+0x14],0x0
  42488e:	mov    rcx,r12
  424891:	cmp    rbx,r12
  424894:	jne    4248b4 <flatcc_json_parser_generic_json@@Base+0xa4>
  424896:	jmp    4249bc <flatcc_json_parser_generic_json@@Base+0x1ac>
  42489b:	nop    DWORD PTR [rax+rax*1+0x0]
  4248a0:	cmp    al,0x22
  4248a2:	je     424975 <flatcc_json_parser_generic_json@@Base+0x165>
  4248a8:	inc    rbx
  4248ab:	cmp    rbx,r12
  4248ae:	je     42497a <flatcc_json_parser_generic_json@@Base+0x16a>
  4248b4:	movzx  eax,BYTE PTR [rbx]
  4248b7:	cmp    al,0x5c
  4248b9:	jne    4248a0 <flatcc_json_parser_generic_json@@Base+0x90>
  4248bb:	mov    rax,r12
  4248be:	sub    rax,rbx
  4248c1:	cmp    rax,0x2
  4248c5:	jl     4249b9 <flatcc_json_parser_generic_json@@Base+0x1a9>
  4248cb:	inc    rbx
  4248ce:	jmp    4248a8 <flatcc_json_parser_generic_json@@Base+0x98>
  4248d0:	cmp    DWORD PTR [r15],0x0
  4248d4:	jne    4248f9 <flatcc_json_parser_generic_json@@Base+0xe9>
  4248d6:	mov    DWORD PTR [r15],0x5
  4248dd:	mov    rax,QWORD PTR [rsp+0x8]
  4248e2:	mov    eax,DWORD PTR [rax]
  4248e4:	mov    ecx,ebx
  4248e6:	sub    ecx,eax
  4248e8:	inc    ecx
  4248ea:	mov    rax,QWORD PTR [rsp+0x10]
  4248ef:	mov    DWORD PTR [rax],ecx
  4248f1:	mov    rax,QWORD PTR [rsp+0x18]
  4248f6:	mov    QWORD PTR [rax],rbx
  4248f9:	cmp    DWORD PTR [r14+0x14],0x0
  4248fe:	mov    rcx,r12
  424901:	mov    rax,r12
  424904:	jne    4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  42490a:	jmp    4249bc <flatcc_json_parser_generic_json@@Base+0x1ac>
  42490f:	mov    DWORD PTR [r14+0x14],0x1
  424917:	mov    rax,r12
  42491a:	cmp    rbx,r12
  42491d:	je     4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  424923:	mov    cl,BYTE PTR [rbx]
  424925:	mov    rax,rbx
  424928:	cmp    cl,0x21
  42492b:	jl     4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  424931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42493b:	nop    DWORD PTR [rax+rax*1+0x0]
  424940:	mov    eax,ecx
  424942:	cmp    cl,0x2e
  424945:	je     424960 <flatcc_json_parser_generic_json@@Base+0x150>
  424947:	cmp    al,0x5f
  424949:	je     424960 <flatcc_json_parser_generic_json@@Base+0x150>
  42494b:	lea    ecx,[rax-0x30]
  42494e:	cmp    cl,0x9
  424951:	jbe    424960 <flatcc_json_parser_generic_json@@Base+0x150>
  424953:	mov    ecx,eax
  424955:	or     cl,0x20
  424958:	add    cl,0x9f
  42495b:	cmp    cl,0x1a
  42495e:	jae    424982 <flatcc_json_parser_generic_json@@Base+0x172>
  424960:	cmp    QWORD PTR [rsp+0x20],rbx
  424965:	je     42497f <flatcc_json_parser_generic_json@@Base+0x16f>
  424967:	movzx  ecx,BYTE PTR [rbx+0x1]
  42496b:	inc    rbx
  42496e:	cmp    cl,0x21
  424971:	jge    424940 <flatcc_json_parser_generic_json@@Base+0x130>
  424973:	jmp    424982 <flatcc_json_parser_generic_json@@Base+0x172>
  424975:	inc    rbx
  424978:	jmp    4249b4 <flatcc_json_parser_generic_json@@Base+0x1a4>
  42497a:	mov    rcx,r12
  42497d:	jmp    4249bc <flatcc_json_parser_generic_json@@Base+0x1ac>
  42497f:	mov    rbx,r12
  424982:	cmp    al,0x2e
  424984:	jne    4249b4 <flatcc_json_parser_generic_json@@Base+0x1a4>
  424986:	cmp    DWORD PTR [r15],0x0
  42498a:	mov    rax,r12
  42498d:	jne    4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  42498f:	mov    DWORD PTR [r15],0x5
  424996:	mov    rax,QWORD PTR [rsp+0x8]
  42499b:	mov    eax,DWORD PTR [rax]
  42499d:	mov    ecx,ebx
  42499f:	sub    ecx,eax
  4249a1:	inc    ecx
  4249a3:	mov    rax,QWORD PTR [rsp+0x10]
  4249a8:	mov    DWORD PTR [rax],ecx
  4249aa:	mov    rax,QWORD PTR [rsp+0x18]
  4249af:	mov    QWORD PTR [rax],rbx
  4249b2:	jmp    4249e8 <flatcc_json_parser_generic_json@@Base+0x1d8>
  4249b4:	mov    rax,rbx
  4249b7:	jmp    4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  4249b9:	mov    rcx,rbx
  4249bc:	cmp    DWORD PTR [r15],0x0
  4249c0:	mov    rax,r12
  4249c3:	jne    4249f0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  4249c5:	mov    DWORD PTR [r15],0x14
  4249cc:	mov    rax,QWORD PTR [rsp+0x8]
  4249d1:	mov    eax,DWORD PTR [rax]
  4249d3:	mov    edx,ecx
  4249d5:	sub    edx,eax
  4249d7:	inc    edx
  4249d9:	mov    rax,QWORD PTR [rsp+0x10]
  4249de:	mov    DWORD PTR [rax],edx
  4249e0:	mov    rax,QWORD PTR [rsp+0x18]
  4249e5:	mov    QWORD PTR [rax],rcx
  4249e8:	mov    rax,r12
  4249eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4249f0:	mov    rcx,r12
  4249f3:	sub    rcx,rax
  4249f6:	cmp    rcx,0x2
  4249fa:	jl     424a16 <flatcc_json_parser_generic_json@@Base+0x206>
  4249fc:	cmp    BYTE PTR [rax],0x20
  4249ff:	jg     424a24 <flatcc_json_parser_generic_json@@Base+0x214>
  424a01:	jne    424a16 <flatcc_json_parser_generic_json@@Base+0x206>
  424a03:	cmp    BYTE PTR [rax+0x1],0x20
  424a07:	jle    424a16 <flatcc_json_parser_generic_json@@Base+0x206>
  424a09:	inc    rax
  424a0c:	cmp    rax,r12
  424a0f:	jne    424a2d <flatcc_json_parser_generic_json@@Base+0x21d>
  424a11:	jmp    42530f <flatcc_json_parser_generic_json@@Base+0xaff>
  424a16:	mov    rdi,r14
  424a19:	mov    rsi,rax
  424a1c:	mov    rdx,r12
  424a1f:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424a24:	cmp    rax,r12
  424a27:	je     42530f <flatcc_json_parser_generic_json@@Base+0xaff>
  424a2d:	cmp    BYTE PTR [rax],0x3a
  424a30:	jne    42531e <flatcc_json_parser_generic_json@@Base+0xb0e>
  424a36:	lea    r13,[rax+0x1]
  424a3a:	mov    rcx,r12
  424a3d:	sub    rcx,r13
  424a40:	cmp    rcx,0x2
  424a44:	jl     424a62 <flatcc_json_parser_generic_json@@Base+0x252>
  424a46:	mov    cl,BYTE PTR [r13+0x0]
  424a4a:	cmp    cl,0x20
  424a4d:	jg     424a78 <flatcc_json_parser_generic_json@@Base+0x268>
  424a4f:	jne    424a62 <flatcc_json_parser_generic_json@@Base+0x252>
  424a51:	mov    cl,BYTE PTR [rax+0x2]
  424a54:	cmp    cl,0x20
  424a57:	jle    424a62 <flatcc_json_parser_generic_json@@Base+0x252>
  424a59:	add    rax,0x2
  424a5d:	mov    r13,rax
  424a60:	jmp    424a78 <flatcc_json_parser_generic_json@@Base+0x268>
  424a62:	mov    rdi,r14
  424a65:	mov    rsi,r13
  424a68:	mov    rdx,r12
  424a6b:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424a70:	mov    rbx,rax
  424a73:	mov    cl,BYTE PTR [rbx]
  424a75:	mov    r13,rbx
  424a78:	movsx  eax,cl
  424a7b:	lea    edx,[rax-0x30]
  424a7e:	cmp    edx,0xa
  424a81:	jae    424ae0 <flatcc_json_parser_generic_json@@Base+0x2d0>
  424a83:	cmp    r13,r12
  424a86:	je     425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424a8c:	cmp    cl,0x2d
  424a8f:	jne    424aa1 <flatcc_json_parser_generic_json@@Base+0x291>
  424a91:	inc    r13
  424a94:	cmp    r13,r12
  424a97:	je     424ee6 <flatcc_json_parser_generic_json@@Base+0x6d6>
  424a9d:	mov    cl,BYTE PTR [r13+0x0]
  424aa1:	cmp    cl,0x30
  424aa4:	jne    424af8 <flatcc_json_parser_generic_json@@Base+0x2e8>
  424aa6:	inc    r13
  424aa9:	mov    rcx,r12
  424aac:	cmp    r13,r12
  424aaf:	je     424fd5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  424ab5:	mov    al,BYTE PTR [r13+0x0]
  424ab9:	cmp    al,0x2e
  424abb:	jne    424e57 <flatcc_json_parser_generic_json@@Base+0x647>
  424ac1:	mov    al,BYTE PTR [r13+0x1]
  424ac5:	add    al,0xd0
  424ac7:	cmp    al,0xa
  424ac9:	jb     424e12 <flatcc_json_parser_generic_json@@Base+0x602>
  424acf:	cmp    DWORD PTR [r15],0x0
  424ad3:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424ad9:	inc    r13
  424adc:	jmp    424b0e <flatcc_json_parser_generic_json@@Base+0x2fe>
  424ade:	xchg   ax,ax
  424ae0:	cmp    eax,0x5a
  424ae3:	jg     424b37 <flatcc_json_parser_generic_json@@Base+0x327>
  424ae5:	cmp    eax,0x22
  424ae8:	je     424bcc <flatcc_json_parser_generic_json@@Base+0x3bc>
  424aee:	cmp    eax,0x2d
  424af1:	je     424a83 <flatcc_json_parser_generic_json@@Base+0x273>
  424af3:	jmp    424d1e <flatcc_json_parser_generic_json@@Base+0x50e>
  424af8:	add    cl,0xcf
  424afb:	cmp    cl,0x8
  424afe:	jbe    424b9e <flatcc_json_parser_generic_json@@Base+0x38e>
  424b04:	cmp    DWORD PTR [r15],0x0
  424b08:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424b0e:	mov    DWORD PTR [r15],0x6
  424b15:	mov    rax,QWORD PTR [rsp+0x8]
  424b1a:	mov    eax,DWORD PTR [rax]
  424b1c:	mov    ecx,r13d
  424b1f:	sub    ecx,eax
  424b21:	inc    ecx
  424b23:	mov    rax,QWORD PTR [rsp+0x10]
  424b28:	mov    DWORD PTR [rax],ecx
  424b2a:	mov    rax,QWORD PTR [rsp+0x18]
  424b2f:	mov    QWORD PTR [rax],r13
  424b32:	jmp    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424b37:	cmp    eax,0x5b
  424b3a:	je     424cc9 <flatcc_json_parser_generic_json@@Base+0x4b9>
  424b40:	cmp    eax,0x7b
  424b43:	jne    424d1e <flatcc_json_parser_generic_json@@Base+0x50e>
  424b49:	cmp    rbp,0x200
  424b50:	je     425349 <flatcc_json_parser_generic_json@@Base+0xb39>
  424b56:	mov    BYTE PTR [rsp+rbp*1+0x30],0x7d
  424b5b:	lea    rbx,[r13+0x1]
  424b5f:	mov    rax,r12
  424b62:	sub    rax,rbx
  424b65:	cmp    rax,0x2
  424b69:	jl     424dbc <flatcc_json_parser_generic_json@@Base+0x5ac>
  424b6f:	cmp    BYTE PTR [rbx],0x20
  424b72:	jg     424dcd <flatcc_json_parser_generic_json@@Base+0x5bd>
  424b78:	jne    424dbc <flatcc_json_parser_generic_json@@Base+0x5ac>
  424b7e:	cmp    BYTE PTR [r13+0x2],0x20
  424b83:	jle    424dbc <flatcc_json_parser_generic_json@@Base+0x5ac>
  424b89:	add    r13,0x2
  424b8d:	mov    rbx,r13
  424b90:	cmp    rbx,r12
  424b93:	jne    424dd6 <flatcc_json_parser_generic_json@@Base+0x5c6>
  424b99:	jmp    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  424b9e:	mov    rcx,QWORD PTR [rsp+0x20]
  424ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bad:	nop    DWORD PTR [rax]
  424bb0:	cmp    rcx,r13
  424bb3:	je     424e45 <flatcc_json_parser_generic_json@@Base+0x635>
  424bb9:	movzx  eax,BYTE PTR [r13+0x1]
  424bbe:	inc    r13
  424bc1:	add    al,0xd0
  424bc3:	cmp    al,0xa
  424bc5:	jb     424bb0 <flatcc_json_parser_generic_json@@Base+0x3a0>
  424bc7:	jmp    424aa9 <flatcc_json_parser_generic_json@@Base+0x299>
  424bcc:	cmp    cl,0x22
  424bcf:	jne    424f19 <flatcc_json_parser_generic_json@@Base+0x709>
  424bd5:	cmp    r13,r12
  424bd8:	je     424f19 <flatcc_json_parser_generic_json@@Base+0x709>
  424bde:	inc    r13
  424be1:	mov    rax,r12
  424be4:	cmp    r13,r12
  424be7:	jne    424c13 <flatcc_json_parser_generic_json@@Base+0x403>
  424be9:	jmp    424fa7 <flatcc_json_parser_generic_json@@Base+0x797>
  424bee:	cmp    DWORD PTR [r15],0x0
  424bf2:	mov    rsi,r12
  424bf5:	je     424c4b <flatcc_json_parser_generic_json@@Base+0x43b>
  424bf7:	mov    rdi,r14
  424bfa:	mov    rdx,r12
  424bfd:	lea    rcx,[rsp+0x2c]
  424c02:	call   424200 <flatcc_json_parser_string_escape@@Base>
  424c07:	mov    r13,rax
  424c0a:	cmp    rax,r12
  424c0d:	je     424f47 <flatcc_json_parser_generic_json@@Base+0x737>
  424c13:	mov    al,BYTE PTR [r13+0x0]
  424c17:	cmp    al,0x22
  424c19:	je     424f90 <flatcc_json_parser_generic_json@@Base+0x780>
  424c1f:	cmp    al,0x20
  424c21:	mov    rcx,QWORD PTR [rsp+0x20]
  424c26:	jb     424bee <flatcc_json_parser_generic_json@@Base+0x3de>
  424c28:	nop    DWORD PTR [rax+rax*1+0x0]
  424c30:	cmp    al,0x22
  424c32:	je     424c74 <flatcc_json_parser_generic_json@@Base+0x464>
  424c34:	cmp    al,0x5c
  424c36:	je     424c74 <flatcc_json_parser_generic_json@@Base+0x464>
  424c38:	cmp    rcx,r13
  424c3b:	je     424c90 <flatcc_json_parser_generic_json@@Base+0x480>
  424c3d:	movzx  eax,BYTE PTR [r13+0x1]
  424c42:	inc    r13
  424c45:	cmp    al,0x20
  424c47:	jae    424c30 <flatcc_json_parser_generic_json@@Base+0x420>
  424c49:	jmp    424bee <flatcc_json_parser_generic_json@@Base+0x3de>
  424c4b:	mov    DWORD PTR [r15],0x11
  424c52:	mov    rax,QWORD PTR [rsp+0x8]
  424c57:	mov    eax,DWORD PTR [rax]
  424c59:	mov    ecx,r13d
  424c5c:	sub    ecx,eax
  424c5e:	inc    ecx
  424c60:	mov    rax,QWORD PTR [rsp+0x10]
  424c65:	mov    DWORD PTR [rax],ecx
  424c67:	mov    rax,QWORD PTR [rsp+0x18]
  424c6c:	mov    QWORD PTR [rax],r13
  424c6f:	mov    rsi,r12
  424c72:	jmp    424bf7 <flatcc_json_parser_generic_json@@Base+0x3e7>
  424c74:	mov    rsi,r12
  424c77:	cmp    r12,r13
  424c7a:	je     424bf7 <flatcc_json_parser_generic_json@@Base+0x3e7>
  424c80:	mov    rsi,r13
  424c83:	cmp    al,0x22
  424c85:	jne    424bf7 <flatcc_json_parser_generic_json@@Base+0x3e7>
  424c8b:	jmp    424f90 <flatcc_json_parser_generic_json@@Base+0x780>
  424c90:	cmp    DWORD PTR [r15],0x0
  424c94:	mov    rsi,r12
  424c97:	jne    424bf7 <flatcc_json_parser_generic_json@@Base+0x3e7>
  424c9d:	mov    DWORD PTR [r15],0x14
  424ca4:	mov    rax,QWORD PTR [rsp+0x8]
  424ca9:	mov    eax,DWORD PTR [rax]
  424cab:	mov    ecx,r12d
  424cae:	sub    ecx,eax
  424cb0:	inc    ecx
  424cb2:	mov    rax,QWORD PTR [rsp+0x10]
  424cb7:	mov    DWORD PTR [rax],ecx
  424cb9:	mov    rax,QWORD PTR [rsp+0x18]
  424cbe:	mov    QWORD PTR [rax],r12
  424cc1:	mov    rsi,r12
  424cc4:	jmp    424bf7 <flatcc_json_parser_generic_json@@Base+0x3e7>
  424cc9:	cmp    rbp,0x200
  424cd0:	je     425349 <flatcc_json_parser_generic_json@@Base+0xb39>
  424cd6:	mov    BYTE PTR [rsp+rbp*1+0x30],0x5d
  424cdb:	lea    rbx,[r13+0x1]
  424cdf:	mov    rax,r12
  424ce2:	sub    rax,rbx
  424ce5:	cmp    rax,0x2
  424ce9:	jl     424de7 <flatcc_json_parser_generic_json@@Base+0x5d7>
  424cef:	cmp    BYTE PTR [rbx],0x20
  424cf2:	jg     424df8 <flatcc_json_parser_generic_json@@Base+0x5e8>
  424cf8:	jne    424de7 <flatcc_json_parser_generic_json@@Base+0x5d7>
  424cfe:	cmp    BYTE PTR [r13+0x2],0x20
  424d03:	jle    424de7 <flatcc_json_parser_generic_json@@Base+0x5d7>
  424d09:	add    r13,0x2
  424d0d:	mov    rbx,r13
  424d10:	cmp    rbx,r12
  424d13:	jne    424e01 <flatcc_json_parser_generic_json@@Base+0x5f1>
  424d19:	jmp    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  424d1e:	mov    rbx,r12
  424d21:	cmp    r13,r12
  424d24:	je     424dae <flatcc_json_parser_generic_json@@Base+0x59e>
  424d2a:	mov    rbx,r13
  424d2d:	test   cl,cl
  424d2f:	jns    424d49 <flatcc_json_parser_generic_json@@Base+0x539>
  424d31:	jmp    424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d3d:	nop    DWORD PTR [rax]
  424d40:	mov    cl,BYTE PTR [rax]
  424d42:	mov    rbx,rax
  424d45:	test   cl,cl
  424d47:	js     424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d49:	cmp    cl,0x5f
  424d4c:	je     424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d4e:	cmp    cl,0x2e
  424d51:	je     424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d53:	lea    eax,[rcx-0x30]
  424d56:	cmp    al,0x9
  424d58:	jbe    424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d5a:	mov    eax,ecx
  424d5c:	or     al,0x20
  424d5e:	add    al,0x9f
  424d60:	cmp    al,0x19
  424d62:	jbe    424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d64:	mov    rax,r12
  424d67:	sub    rax,rbx
  424d6a:	cmp    rax,0x2
  424d6e:	jl     424d7d <flatcc_json_parser_generic_json@@Base+0x56d>
  424d70:	cmp    cl,0x20
  424d73:	jg     424dae <flatcc_json_parser_generic_json@@Base+0x59e>
  424d75:	jne    424d7d <flatcc_json_parser_generic_json@@Base+0x56d>
  424d77:	cmp    BYTE PTR [rbx+0x1],0x20
  424d7b:	jg     424da0 <flatcc_json_parser_generic_json@@Base+0x590>
  424d7d:	mov    rdi,r14
  424d80:	mov    rsi,rbx
  424d83:	mov    rdx,r12
  424d86:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424d8b:	cmp    rax,rbx
  424d8e:	jne    424da6 <flatcc_json_parser_generic_json@@Base+0x596>
  424d90:	jmp    424dae <flatcc_json_parser_generic_json@@Base+0x59e>
  424d92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d9c:	nop    DWORD PTR [rax+0x0]
  424da0:	inc    rbx
  424da3:	mov    rax,rbx
  424da6:	cmp    rax,r12
  424da9:	jne    424d40 <flatcc_json_parser_generic_json@@Base+0x530>
  424dab:	mov    rbx,r12
  424dae:	cmp    r13,rbx
  424db1:	jne    425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424db7:	jmp    425358 <flatcc_json_parser_generic_json@@Base+0xb48>
  424dbc:	mov    rdi,r14
  424dbf:	mov    rsi,rbx
  424dc2:	mov    rdx,r12
  424dc5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424dca:	mov    rbx,rax
  424dcd:	cmp    rbx,r12
  424dd0:	je     4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  424dd6:	inc    rbp
  424dd9:	cmp    BYTE PTR [rbx],0x7d
  424ddc:	je     425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424de2:	jmp    4252a5 <flatcc_json_parser_generic_json@@Base+0xa95>
  424de7:	mov    rdi,r14
  424dea:	mov    rsi,rbx
  424ded:	mov    rdx,r12
  424df0:	call   424110 <flatcc_json_parser_space_ext@@Base>
  424df5:	mov    rbx,rax
  424df8:	cmp    rbx,r12
  424dfb:	je     4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  424e01:	inc    rbp
  424e04:	cmp    BYTE PTR [rbx],0x5d
  424e07:	je     425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424e0d:	jmp    4252a5 <flatcc_json_parser_generic_json@@Base+0xa95>
  424e12:	add    r13,0x2
  424e16:	mov    rcx,r12
  424e19:	cmp    r13,r12
  424e1c:	je     424fd5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  424e22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e2c:	nop    DWORD PTR [rax+0x0]
  424e30:	movzx  eax,BYTE PTR [r13+0x0]
  424e35:	lea    ecx,[rax-0x30]
  424e38:	cmp    cl,0x9
  424e3b:	ja     424e57 <flatcc_json_parser_generic_json@@Base+0x647>
  424e3d:	inc    r13
  424e40:	cmp    r12,r13
  424e43:	jne    424e30 <flatcc_json_parser_generic_json@@Base+0x620>
  424e45:	mov    rcx,r12
  424e48:	cmp    DWORD PTR [r15],0x0
  424e4c:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424e52:	jmp    424fdb <flatcc_json_parser_generic_json@@Base+0x7cb>
  424e57:	mov    rcx,r12
  424e5a:	cmp    r13,r12
  424e5d:	je     424fd5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  424e63:	mov    ecx,eax
  424e65:	or     cl,0x20
  424e68:	cmp    cl,0x65
  424e6b:	jne    424f56 <flatcc_json_parser_generic_json@@Base+0x746>
  424e71:	lea    rbx,[r13+0x1]
  424e75:	cmp    rbx,r12
  424e78:	je     424ee6 <flatcc_json_parser_generic_json@@Base+0x6d6>
  424e7a:	mov    al,BYTE PTR [rbx]
  424e7c:	cmp    al,0x2d
  424e7e:	je     424e84 <flatcc_json_parser_generic_json@@Base+0x674>
  424e80:	cmp    al,0x2b
  424e82:	jne    424e8b <flatcc_json_parser_generic_json@@Base+0x67b>
  424e84:	add    r13,0x2
  424e88:	mov    rbx,r13
  424e8b:	cmp    rbx,r12
  424e8e:	je     424e98 <flatcc_json_parser_generic_json@@Base+0x688>
  424e90:	mov    al,BYTE PTR [rbx]
  424e92:	add    al,0xd0
  424e94:	cmp    al,0x9
  424e96:	jbe    424eca <flatcc_json_parser_generic_json@@Base+0x6ba>
  424e98:	cmp    DWORD PTR [r15],0x0
  424e9c:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424ea2:	mov    DWORD PTR [r15],0x6
  424ea9:	mov    rax,QWORD PTR [rsp+0x8]
  424eae:	mov    eax,DWORD PTR [rax]
  424eb0:	mov    ecx,ebx
  424eb2:	sub    ecx,eax
  424eb4:	inc    ecx
  424eb6:	mov    rax,QWORD PTR [rsp+0x10]
  424ebb:	mov    DWORD PTR [rax],ecx
  424ebd:	mov    rax,QWORD PTR [rsp+0x18]
  424ec2:	mov    QWORD PTR [rax],rbx
  424ec5:	jmp    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424eca:	cmp    QWORD PTR [rsp+0x20],rbx
  424ecf:	je     424fd2 <flatcc_json_parser_generic_json@@Base+0x7c2>
  424ed5:	movzx  eax,BYTE PTR [rbx+0x1]
  424ed9:	inc    rbx
  424edc:	lea    ecx,[rax-0x30]
  424edf:	cmp    cl,0xa
  424ee2:	jb     424eca <flatcc_json_parser_generic_json@@Base+0x6ba>
  424ee4:	jmp    424f59 <flatcc_json_parser_generic_json@@Base+0x749>
  424ee6:	cmp    DWORD PTR [r15],0x0
  424eea:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424ef0:	mov    DWORD PTR [r15],0x6
  424ef7:	mov    rax,QWORD PTR [rsp+0x8]
  424efc:	mov    eax,DWORD PTR [rax]
  424efe:	mov    ecx,r12d
  424f01:	sub    ecx,eax
  424f03:	inc    ecx
  424f05:	mov    rax,QWORD PTR [rsp+0x10]
  424f0a:	mov    DWORD PTR [rax],ecx
  424f0c:	mov    rax,QWORD PTR [rsp+0x18]
  424f11:	mov    QWORD PTR [rax],r12
  424f14:	jmp    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424f19:	cmp    DWORD PTR [r15],0x0
  424f1d:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424f23:	mov    DWORD PTR [r15],0x10
  424f2a:	mov    rax,QWORD PTR [rsp+0x8]
  424f2f:	mov    eax,DWORD PTR [rax]
  424f31:	mov    ecx,r13d
  424f34:	sub    ecx,eax
  424f36:	inc    ecx
  424f38:	mov    rax,QWORD PTR [rsp+0x10]
  424f3d:	mov    DWORD PTR [rax],ecx
  424f3f:	mov    rax,QWORD PTR [rsp+0x18]
  424f44:	mov    QWORD PTR [rax],r13
  424f47:	mov    rax,r12
  424f4a:	cmp    DWORD PTR [r15],0x0
  424f4e:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424f54:	jmp    424fad <flatcc_json_parser_generic_json@@Base+0x79d>
  424f56:	mov    rbx,r13
  424f59:	mov    rcx,r12
  424f5c:	cmp    rbx,r12
  424f5f:	je     424fd5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  424f61:	movsx  eax,al
  424f64:	cmp    eax,0x3a
  424f67:	ja     424f7d <flatcc_json_parser_generic_json@@Base+0x76d>
  424f69:	movabs rcx,0x400100100002e00
  424f73:	bt     rcx,rax
  424f77:	jb     425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424f7d:	cmp    eax,0x5d
  424f80:	je     425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424f86:	mov    rcx,rbx
  424f89:	cmp    eax,0x7d
  424f8c:	je     425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424f8e:	jmp    424fd5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  424f90:	cmp    r13,r12
  424f93:	je     424fa4 <flatcc_json_parser_generic_json@@Base+0x794>
  424f95:	cmp    BYTE PTR [r13+0x0],0x22
  424f9a:	jne    424fa4 <flatcc_json_parser_generic_json@@Base+0x794>
  424f9c:	inc    r13
  424f9f:	mov    rbx,r13
  424fa2:	jmp    425003 <flatcc_json_parser_generic_json@@Base+0x7f3>
  424fa4:	mov    rax,r13
  424fa7:	cmp    DWORD PTR [r15],0x0
  424fab:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424fad:	mov    DWORD PTR [r15],0x14
  424fb4:	mov    rcx,QWORD PTR [rsp+0x8]
  424fb9:	mov    ecx,DWORD PTR [rcx]
  424fbb:	mov    edx,eax
  424fbd:	sub    edx,ecx
  424fbf:	inc    edx
  424fc1:	mov    rcx,QWORD PTR [rsp+0x10]
  424fc6:	mov    DWORD PTR [rcx],edx
  424fc8:	mov    rcx,QWORD PTR [rsp+0x18]
  424fcd:	mov    QWORD PTR [rcx],rax
  424fd0:	jmp    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424fd2:	mov    rcx,r12
  424fd5:	cmp    DWORD PTR [r15],0x0
  424fd9:	jne    425000 <flatcc_json_parser_generic_json@@Base+0x7f0>
  424fdb:	mov    DWORD PTR [r15],0x6
  424fe2:	mov    rax,QWORD PTR [rsp+0x8]
  424fe7:	mov    eax,DWORD PTR [rax]
  424fe9:	mov    edx,ecx
  424feb:	sub    edx,eax
  424fed:	inc    edx
  424fef:	mov    rax,QWORD PTR [rsp+0x10]
  424ff4:	mov    DWORD PTR [rax],edx
  424ff6:	mov    rax,QWORD PTR [rsp+0x18]
  424ffb:	mov    QWORD PTR [rax],rcx
  424ffe:	xchg   ax,ax
  425000:	mov    rbx,r12
  425003:	cmp    rbx,r12
  425006:	setne  al
  425009:	test   rbp,rbp
  42500c:	setne  cl
  42500f:	jne    425057 <flatcc_json_parser_generic_json@@Base+0x847>
  425011:	jmp    4252b8 <flatcc_json_parser_generic_json@@Base+0xaa8>
  425016:	mov    rcx,QWORD PTR [rsp+0x8]
  42501b:	mov    ecx,DWORD PTR [rcx]
  42501d:	mov    edx,eax
  42501f:	sub    edx,ecx
  425021:	inc    edx
  425023:	mov    rcx,QWORD PTR [rsp+0x10]
  425028:	mov    DWORD PTR [rcx],edx
  42502a:	mov    rcx,QWORD PTR [rsp+0x18]
  42502f:	mov    QWORD PTR [rcx],rax
  425032:	mov    rbx,r12
  425035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42503f:	nop
  425040:	cmp    rbx,r12
  425043:	setne  al
  425046:	cmp    rbp,0x1
  42504a:	lea    rbp,[rbp-0x1]
  42504e:	setne  cl
  425051:	je     4252b8 <flatcc_json_parser_generic_json@@Base+0xaa8>
  425057:	cmp    rbx,r12
  42505a:	je     4252b8 <flatcc_json_parser_generic_json@@Base+0xaa8>
  425060:	mov    rax,r12
  425063:	sub    rax,rbx
  425066:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  42506b:	jne    425080 <flatcc_json_parser_generic_json@@Base+0x870>
  42506d:	cmp    rax,0x2
  425071:	jl     4250a0 <flatcc_json_parser_generic_json@@Base+0x890>
  425073:	cmp    BYTE PTR [rbx],0x20
  425076:	jle    425090 <flatcc_json_parser_generic_json@@Base+0x880>
  425078:	mov    rax,rbx
  42507b:	jmp    4250ae <flatcc_json_parser_generic_json@@Base+0x89e>
  42507d:	nop    DWORD PTR [rax]
  425080:	cmp    rax,0x2
  425084:	jl     4250f0 <flatcc_json_parser_generic_json@@Base+0x8e0>
  425086:	cmp    BYTE PTR [rbx],0x20
  425089:	jle    4250e0 <flatcc_json_parser_generic_json@@Base+0x8d0>
  42508b:	mov    rax,rbx
  42508e:	jmp    4250fe <flatcc_json_parser_generic_json@@Base+0x8ee>
  425090:	jne    4250a0 <flatcc_json_parser_generic_json@@Base+0x890>
  425092:	cmp    BYTE PTR [rbx+0x1],0x20
  425096:	jle    4250a0 <flatcc_json_parser_generic_json@@Base+0x890>
  425098:	inc    rbx
  42509b:	mov    rax,rbx
  42509e:	jmp    4250ae <flatcc_json_parser_generic_json@@Base+0x89e>
  4250a0:	mov    rdi,r14
  4250a3:	mov    rsi,rbx
  4250a6:	mov    rdx,r12
  4250a9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4250ae:	mov    rbx,r12
  4250b1:	cmp    rax,r12
  4250b4:	je     425040 <flatcc_json_parser_generic_json@@Base+0x830>
  4250b6:	movzx  ecx,BYTE PTR [rax]
  4250b9:	cmp    cl,0x2c
  4250bc:	je     425151 <flatcc_json_parser_generic_json@@Base+0x941>
  4250c2:	cmp    cl,0x5d
  4250c5:	je     42511b <flatcc_json_parser_generic_json@@Base+0x90b>
  4250c7:	cmp    DWORD PTR [r15],0x0
  4250cb:	mov    rbx,r12
  4250ce:	jne    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  4250d4:	mov    DWORD PTR [r15],0x9
  4250db:	jmp    425016 <flatcc_json_parser_generic_json@@Base+0x806>
  4250e0:	jne    4250f0 <flatcc_json_parser_generic_json@@Base+0x8e0>
  4250e2:	cmp    BYTE PTR [rbx+0x1],0x20
  4250e6:	jle    4250f0 <flatcc_json_parser_generic_json@@Base+0x8e0>
  4250e8:	inc    rbx
  4250eb:	mov    rax,rbx
  4250ee:	jmp    4250fe <flatcc_json_parser_generic_json@@Base+0x8ee>
  4250f0:	mov    rdi,r14
  4250f3:	mov    rsi,rbx
  4250f6:	mov    rdx,r12
  4250f9:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4250fe:	mov    rbx,r12
  425101:	cmp    rax,r12
  425104:	je     425040 <flatcc_json_parser_generic_json@@Base+0x830>
  42510a:	movzx  ecx,BYTE PTR [rax]
  42510d:	cmp    cl,0x2c
  425110:	je     425174 <flatcc_json_parser_generic_json@@Base+0x964>
  425112:	cmp    cl,0x7d
  425115:	jne    42519b <flatcc_json_parser_generic_json@@Base+0x98b>
  42511b:	lea    rbx,[rax+0x1]
  42511f:	mov    rcx,r12
  425122:	sub    rcx,rbx
  425125:	cmp    rcx,0x2
  425129:	jl     425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  42512f:	cmp    BYTE PTR [rbx],0x20
  425132:	jg     425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425138:	jne    425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  42513e:	cmp    BYTE PTR [rax+0x2],0x20
  425142:	jle    425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  425148:	add    rax,0x2
  42514c:	jmp    42524e <flatcc_json_parser_generic_json@@Base+0xa3e>
  425151:	lea    rsi,[rax+0x1]
  425155:	mov    rcx,r12
  425158:	sub    rcx,rsi
  42515b:	cmp    rcx,0x2
  42515f:	jl     4251b4 <flatcc_json_parser_generic_json@@Base+0x9a4>
  425161:	cmp    BYTE PTR [rsi],0x20
  425164:	jg     4251c2 <flatcc_json_parser_generic_json@@Base+0x9b2>
  425166:	jne    4251b4 <flatcc_json_parser_generic_json@@Base+0x9a4>
  425168:	cmp    BYTE PTR [rax+0x2],0x20
  42516c:	jle    4251b4 <flatcc_json_parser_generic_json@@Base+0x9a4>
  42516e:	add    rax,0x2
  425172:	jmp    4251bf <flatcc_json_parser_generic_json@@Base+0x9af>
  425174:	lea    rsi,[rax+0x1]
  425178:	mov    rcx,r12
  42517b:	sub    rcx,rsi
  42517e:	cmp    rcx,0x2
  425182:	jl     425201 <flatcc_json_parser_generic_json@@Base+0x9f1>
  425184:	cmp    BYTE PTR [rsi],0x20
  425187:	jg     42520f <flatcc_json_parser_generic_json@@Base+0x9ff>
  42518d:	jne    425201 <flatcc_json_parser_generic_json@@Base+0x9f1>
  42518f:	cmp    BYTE PTR [rax+0x2],0x20
  425193:	jle    425201 <flatcc_json_parser_generic_json@@Base+0x9f1>
  425195:	add    rax,0x2
  425199:	jmp    42520c <flatcc_json_parser_generic_json@@Base+0x9fc>
  42519b:	cmp    DWORD PTR [r15],0x0
  42519f:	mov    rbx,r12
  4251a2:	jne    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  4251a8:	mov    DWORD PTR [r15],0xa
  4251af:	jmp    425016 <flatcc_json_parser_generic_json@@Base+0x806>
  4251b4:	mov    rdi,r14
  4251b7:	mov    rdx,r12
  4251ba:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4251bf:	mov    rsi,rax
  4251c2:	cmp    rsi,r12
  4251c5:	je     425256 <flatcc_json_parser_generic_json@@Base+0xa46>
  4251cb:	cmp    BYTE PTR [rsi],0x5d
  4251ce:	jne    4252a2 <flatcc_json_parser_generic_json@@Base+0xa92>
  4251d4:	lea    rbx,[rsi+0x1]
  4251d8:	mov    rax,r12
  4251db:	sub    rax,rbx
  4251de:	cmp    rax,0x2
  4251e2:	jl     425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  4251e4:	cmp    BYTE PTR [rbx],0x20
  4251e7:	jg     425040 <flatcc_json_parser_generic_json@@Base+0x830>
  4251ed:	jne    425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  4251ef:	cmp    BYTE PTR [rsi+0x2],0x20
  4251f3:	jle    425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  4251f5:	add    rsi,0x2
  4251f9:	mov    rbx,rsi
  4251fc:	jmp    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425201:	mov    rdi,r14
  425204:	mov    rdx,r12
  425207:	call   424110 <flatcc_json_parser_space_ext@@Base>
  42520c:	mov    rsi,rax
  42520f:	cmp    rsi,r12
  425212:	je     42526c <flatcc_json_parser_generic_json@@Base+0xa5c>
  425214:	cmp    BYTE PTR [rsi],0x7d
  425217:	jne    4252a2 <flatcc_json_parser_generic_json@@Base+0xa92>
  42521d:	lea    rbx,[rsi+0x1]
  425221:	mov    rax,r12
  425224:	sub    rax,rbx
  425227:	cmp    rax,0x2
  42522b:	jl     425240 <flatcc_json_parser_generic_json@@Base+0xa30>
  42522d:	cmp    BYTE PTR [rbx],0x20
  425230:	jg     425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425236:	je     4251ef <flatcc_json_parser_generic_json@@Base+0x9df>
  425238:	nop    DWORD PTR [rax+rax*1+0x0]
  425240:	mov    rdi,r14
  425243:	mov    rsi,rbx
  425246:	mov    rdx,r12
  425249:	call   424110 <flatcc_json_parser_space_ext@@Base>
  42524e:	mov    rbx,rax
  425251:	jmp    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425256:	cmp    DWORD PTR [r15],0x0
  42525a:	mov    rbx,r12
  42525d:	jne    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425263:	mov    DWORD PTR [r15],0x9
  42526a:	jmp    425280 <flatcc_json_parser_generic_json@@Base+0xa70>
  42526c:	cmp    DWORD PTR [r15],0x0
  425270:	mov    rbx,r12
  425273:	jne    425040 <flatcc_json_parser_generic_json@@Base+0x830>
  425279:	mov    DWORD PTR [r15],0xa
  425280:	mov    rax,QWORD PTR [rsp+0x8]
  425285:	mov    eax,DWORD PTR [rax]
  425287:	mov    ecx,r12d
  42528a:	sub    ecx,eax
  42528c:	inc    ecx
  42528e:	mov    rax,QWORD PTR [rsp+0x10]
  425293:	mov    DWORD PTR [rax],ecx
  425295:	mov    rax,QWORD PTR [rsp+0x18]
  42529a:	mov    QWORD PTR [rax],r12
  42529d:	jmp    425032 <flatcc_json_parser_generic_json@@Base+0x822>
  4252a2:	mov    rbx,rsi
  4252a5:	lea    rax,[rsp+rbp*1]
  4252a9:	add    rax,0x30
  4252ad:	cmp    rbx,r12
  4252b0:	jne    424862 <flatcc_json_parser_generic_json@@Base+0x52>
  4252b6:	jmp    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  4252b8:	test   al,al
  4252ba:	jne    4252fa <flatcc_json_parser_generic_json@@Base+0xaea>
  4252bc:	test   cl,cl
  4252be:	je     4252fa <flatcc_json_parser_generic_json@@Base+0xaea>
  4252c0:	cmp    DWORD PTR [r15],0x0
  4252c4:	jne    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  4252c6:	xor    eax,eax
  4252c8:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  4252cd:	sete   al
  4252d0:	mov    ecx,0xa
  4252d5:	sub    ecx,eax
  4252d7:	mov    DWORD PTR [r15],ecx
  4252da:	mov    rax,QWORD PTR [rsp+0x8]
  4252df:	mov    eax,DWORD PTR [rax]
  4252e1:	mov    ecx,r12d
  4252e4:	sub    ecx,eax
  4252e6:	inc    ecx
  4252e8:	mov    rax,QWORD PTR [rsp+0x10]
  4252ed:	mov    DWORD PTR [rax],ecx
  4252ef:	mov    rax,QWORD PTR [rsp+0x18]
  4252f4:	mov    QWORD PTR [rax],r12
  4252f7:	mov    rbx,r12
  4252fa:	mov    rax,rbx
  4252fd:	add    rsp,0x238
  425304:	pop    rbx
  425305:	pop    r12
  425307:	pop    r13
  425309:	pop    r14
  42530b:	pop    r15
  42530d:	pop    rbp
  42530e:	ret    
  42530f:	cmp    DWORD PTR [r15],0x0
  425313:	jne    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  425315:	mov    DWORD PTR [r15],0xa
  42531c:	jmp    4252da <flatcc_json_parser_generic_json@@Base+0xaca>
  42531e:	cmp    DWORD PTR [r15],0x0
  425322:	jne    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  425324:	mov    DWORD PTR [r15],0x4
  42532b:	mov    rcx,QWORD PTR [rsp+0x8]
  425330:	mov    ecx,DWORD PTR [rcx]
  425332:	mov    edx,eax
  425334:	sub    edx,ecx
  425336:	inc    edx
  425338:	mov    rcx,QWORD PTR [rsp+0x10]
  42533d:	mov    DWORD PTR [rcx],edx
  42533f:	mov    rcx,QWORD PTR [rsp+0x18]
  425344:	mov    QWORD PTR [rcx],rax
  425347:	jmp    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  425349:	cmp    DWORD PTR [r15],0x0
  42534d:	jne    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  42534f:	mov    DWORD PTR [r15],0x2
  425356:	jmp    425365 <flatcc_json_parser_generic_json@@Base+0xb55>
  425358:	cmp    DWORD PTR [r15],0x0
  42535c:	jne    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  42535e:	mov    DWORD PTR [r15],0x5
  425365:	mov    rax,QWORD PTR [rsp+0x8]
  42536a:	mov    eax,DWORD PTR [rax]
  42536c:	mov    ecx,r13d
  42536f:	sub    ecx,eax
  425371:	inc    ecx
  425373:	mov    rax,QWORD PTR [rsp+0x10]
  425378:	mov    DWORD PTR [rax],ecx
  42537a:	mov    rax,QWORD PTR [rsp+0x18]
  42537f:	mov    QWORD PTR [rax],r13
  425382:	jmp    4252f7 <flatcc_json_parser_generic_json@@Base+0xae7>
  425387:	nop    WORD PTR [rax+rax*1+0x0]

0000000000425390 <flatcc_json_parser_double@@Base>:
  425390:	push   r15
  425392:	push   r14
  425394:	push   r12
  425396:	push   rbx
  425397:	push   rax
  425398:	mov    rbx,rsi
  42539b:	mov    QWORD PTR [rcx],0x0
  4253a2:	cmp    rsi,rdx
  4253a5:	je     425432 <flatcc_json_parser_double@@Base+0xa2>
  4253ab:	mov    r12,rcx
  4253ae:	mov    r14,rdx
  4253b1:	mov    r15,rdi
  4253b4:	lea    rax,[rbx+0x1]
  4253b8:	xor    ecx,ecx
  4253ba:	cmp    BYTE PTR [rbx],0x2d
  4253bd:	sete   dl
  4253c0:	cmovne rax,rbx
  4253c4:	mov    rsi,r14
  4253c7:	sub    rsi,rax
  4253ca:	cmp    rsi,0x2
  4253ce:	jl     4253ee <flatcc_json_parser_double@@Base+0x5e>
  4253d0:	mov    cl,dl
  4253d2:	mov    cl,BYTE PTR [rbx+rcx*1]
  4253d5:	cmp    cl,0x2e
  4253d8:	je     4253e5 <flatcc_json_parser_double@@Base+0x55>
  4253da:	cmp    cl,0x30
  4253dd:	jne    4253ee <flatcc_json_parser_double@@Base+0x5e>
  4253df:	cmp    BYTE PTR [rax+0x1],0x30
  4253e3:	jne    4253ee <flatcc_json_parser_double@@Base+0x5e>
  4253e5:	cmp    DWORD PTR [r15+0x20],0x0
  4253ea:	jne    425455 <flatcc_json_parser_double@@Base+0xc5>
  4253ec:	jmp    42543b <flatcc_json_parser_double@@Base+0xab>
  4253ee:	mov    esi,r14d
  4253f1:	sub    esi,ebx
  4253f3:	mov    rdi,rbx
  4253f6:	mov    rdx,r12
  4253f9:	call   425470 <flatcc_json_parser_double@@Base+0xe0>
  4253fe:	test   rax,rax
  425401:	je     425408 <flatcc_json_parser_double@@Base+0x78>
  425403:	cmp    rax,rbx
  425406:	jne    425458 <flatcc_json_parser_double@@Base+0xc8>
  425408:	vmovsd xmm0,QWORD PTR [r12]
  42540e:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x1560a]        # 43aa20 <flatcc_builder_padding_base@@Base+0x2370>
  425416:	vucomisd xmm0,QWORD PTR [rip+0x15612]        # 43aa30 <flatcc_builder_padding_base@@Base+0x2380>
  42541e:	mov    eax,DWORD PTR [r15+0x20]
  425422:	jb     425437 <flatcc_json_parser_double@@Base+0xa7>
  425424:	test   eax,eax
  425426:	jne    425455 <flatcc_json_parser_double@@Base+0xc5>
  425428:	mov    DWORD PTR [r15+0x20],0x7
  425430:	jmp    425443 <flatcc_json_parser_double@@Base+0xb3>
  425432:	mov    rax,rbx
  425435:	jmp    425458 <flatcc_json_parser_double@@Base+0xc8>
  425437:	test   eax,eax
  425439:	jne    425455 <flatcc_json_parser_double@@Base+0xc5>
  42543b:	mov    DWORD PTR [r15+0x20],0x6
  425443:	mov    eax,DWORD PTR [r15+0x8]
  425447:	mov    ecx,ebx
  425449:	sub    ecx,eax
  42544b:	inc    ecx
  42544d:	mov    DWORD PTR [r15+0x1c],ecx
  425451:	mov    QWORD PTR [r15+0x38],rbx
  425455:	mov    rax,r14
  425458:	add    rsp,0x8
  42545c:	pop    rbx
  42545d:	pop    r12
  42545f:	pop    r14
  425461:	pop    r15
  425463:	ret    
  425464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42546e:	xchg   ax,ax
  425470:	push   rbp
  425471:	push   r15
  425473:	push   r14
  425475:	push   r13
  425477:	push   r12
  425479:	push   rbx
  42547a:	sub    rsp,0x18
  42547e:	mov    r14,rdx
  425481:	mov    r15,rdi
  425484:	mov    QWORD PTR [rdx],0x0
  42548b:	cmp    esi,0x3e9
  425491:	mov    edx,0x3e8
  425496:	cmovl  edx,esi
  425499:	movsxd r13,edx
  42549c:	lea    r12,[rdi+r13*1]
  4254a0:	add    r12,0x1
  4254a4:	cmp    r12,rdi
  4254a7:	je     4258b5 <flatcc_json_parser_double@@Base+0x525>
  4254ad:	mov    cl,BYTE PTR [r15]
  4254b0:	xor    r11d,r11d
  4254b3:	mov    rax,r15
  4254b6:	cmp    cl,0x2d
  4254b9:	jne    4254cf <flatcc_json_parser_double@@Base+0x13f>
  4254bb:	test   edx,edx
  4254bd:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  4254c3:	lea    rax,[r15+0x1]
  4254c7:	mov    cl,BYTE PTR [rax]
  4254c9:	mov    r11d,0x1
  4254cf:	lea    r8,[r15+r13*1]
  4254d3:	cmp    cl,0x30
  4254d6:	jne    4254f9 <flatcc_json_parser_double@@Base+0x169>
  4254d8:	lea    rsi,[rax+0x1]
  4254dc:	cmp    rax,r8
  4254df:	je     425544 <flatcc_json_parser_double@@Base+0x1b4>
  4254e1:	mov    al,BYTE PTR [rsi]
  4254e3:	mov    ecx,eax
  4254e5:	or     cl,0x20
  4254e8:	cmp    cl,0x78
  4254eb:	jne    42551c <flatcc_json_parser_double@@Base+0x18c>
  4254ed:	mov    QWORD PTR [r14],0x0
  4254f4:	jmp    4258b5 <flatcc_json_parser_double@@Base+0x525>
  4254f9:	lea    edx,[rcx-0x31]
  4254fc:	cmp    dl,0x9
  4254ff:	jb     42550f <flatcc_json_parser_double@@Base+0x17f>
  425501:	xor    eax,eax
  425503:	test   r11d,r11d
  425506:	cmovne r15,rax
  42550a:	jmp    4258b5 <flatcc_json_parser_double@@Base+0x525>
  42550f:	movsx  rdi,cl
  425513:	inc    rax
  425516:	add    rdi,0xffffffffffffffd0
  42551a:	jmp    425537 <flatcc_json_parser_double@@Base+0x1a7>
  42551c:	cmp    al,0x30
  42551e:	jne    425544 <flatcc_json_parser_double@@Base+0x1b4>
  425520:	mov    rax,rsi
  425523:	cmp    r8,rsi
  425526:	je     425532 <flatcc_json_parser_double@@Base+0x1a2>
  425528:	lea    rsi,[rax+0x1]
  42552c:	cmp    BYTE PTR [rax+0x1],0x30
  425530:	je     425520 <flatcc_json_parser_double@@Base+0x190>
  425532:	inc    rax
  425535:	xor    edi,edi
  425537:	mov    rsi,rax
  42553a:	cmp    rsi,r12
  42553d:	jne    42554f <flatcc_json_parser_double@@Base+0x1bf>
  42553f:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  425544:	xor    edi,edi
  425546:	cmp    rsi,r12
  425549:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  42554f:	movabs r10,0x1999999999999998
  425559:	mov    rbx,rsi
  42555c:	xor    ecx,ecx
  42555e:	xchg   ax,ax
  425560:	movsx  rax,BYTE PTR [rbx]
  425564:	lea    edx,[rax-0x30]
  425567:	cmp    dl,0x9
  42556a:	ja     425585 <flatcc_json_parser_double@@Base+0x1f5>
  42556c:	cmp    rdi,r10
  42556f:	ja     42558f <flatcc_json_parser_double@@Base+0x1ff>
  425571:	lea    rdx,[rdi+rdi*4]
  425575:	inc    rbx
  425578:	lea    rdi,[rax+rdx*2]
  42557c:	add    rdi,0xffffffffffffffd0
  425580:	cmp    r12,rbx
  425583:	jne    425560 <flatcc_json_parser_double@@Base+0x1d0>
  425585:	cmp    rbx,r12
  425588:	jne    4255a7 <flatcc_json_parser_double@@Base+0x217>
  42558a:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  42558f:	xor    ecx,ecx
  425591:	cmp    al,0x34
  425593:	setg   cl
  425596:	add    rdi,rcx
  425599:	mov    ecx,0x1
  42559e:	cmp    rbx,r12
  4255a1:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  4255a7:	mov    r9d,ebx
  4255aa:	sub    r9d,esi
  4255ad:	mov    rbp,r13
  4255b0:	sub    rbp,rbx
  4255b3:	lea    rdx,[r15+rbp*1]
  4255b7:	add    rdx,0x1
  4255bb:	xor    esi,esi
  4255bd:	nop    DWORD PTR [rax]
  4255c0:	movzx  eax,BYTE PTR [rbx+rsi*1]
  4255c4:	cmp    al,0x30
  4255c6:	jne    4255d2 <flatcc_json_parser_double@@Base+0x242>
  4255c8:	inc    rsi
  4255cb:	cmp    rdx,rsi
  4255ce:	jne    4255c0 <flatcc_json_parser_double@@Base+0x230>
  4255d0:	jmp    425624 <flatcc_json_parser_double@@Base+0x294>
  4255d2:	add    al,0xcf
  4255d4:	cmp    al,0x9
  4255d6:	jae    425624 <flatcc_json_parser_double@@Base+0x294>
  4255d8:	lea    rcx,[rsi+0x1]
  4255dc:	not    rsi
  4255df:	add    rbp,r15
  4255e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4255ec:	nop    DWORD PTR [rax+0x0]
  4255f0:	mov    rdx,rsi
  4255f3:	lea    rax,[rsi+rbp*1]
  4255f7:	cmp    rax,0xffffffffffffffff
  4255fb:	je     42560e <flatcc_json_parser_double@@Base+0x27e>
  4255fd:	movzx  eax,BYTE PTR [rbx+rcx*1]
  425601:	add    al,0xd0
  425603:	lea    rsi,[rdx-0x1]
  425607:	inc    rcx
  42560a:	cmp    al,0xa
  42560c:	jb     4255f0 <flatcc_json_parser_double@@Base+0x260>
  42560e:	mov    esi,edx
  425610:	neg    esi
  425612:	sub    rbx,rdx
  425615:	mov    ecx,0x1
  42561a:	cmp    rbx,r12
  42561d:	jne    425630 <flatcc_json_parser_double@@Base+0x2a0>
  42561f:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  425624:	add    rbx,rsi
  425627:	cmp    rbx,r12
  42562a:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  425630:	cmp    BYTE PTR [rbx],0x2e
  425633:	jne    4256ad <flatcc_json_parser_double@@Base+0x31d>
  425635:	mov    al,BYTE PTR [rbx+0x1]
  425638:	lea    edx,[rax-0x30]
  42563b:	cmp    dl,0x9
  42563e:	ja     4258b2 <flatcc_json_parser_double@@Base+0x522>
  425644:	lea    rdx,[rbx+0x1]
  425648:	cmp    rbx,r8
  42564b:	je     425764 <flatcc_json_parser_double@@Base+0x3d4>
  425651:	mov    QWORD PTR [rsp+0x8],rdx
  425656:	mov    DWORD PTR [rsp+0x4],r11d
  42565b:	sub    r13,rbx
  42565e:	add    r13,r15
  425661:	add    r13,0xffffffffffffffff
  425665:	xor    r11d,r11d
  425668:	mov    rdx,r11
  42566b:	cmp    rdi,r10
  42566e:	ja     425774 <flatcc_json_parser_double@@Base+0x3e4>
  425674:	lea    rdi,[rdi+rdi*4]
  425678:	movsx  rax,al
  42567c:	lea    rdi,[rax+rdi*2]
  425680:	add    rdi,0xffffffffffffffd0
  425684:	cmp    r13,rdx
  425687:	je     42569b <flatcc_json_parser_double@@Base+0x30b>
  425689:	movzx  eax,BYTE PTR [rbx+rdx*1+0x2]
  42568e:	lea    ebp,[rax-0x30]
  425691:	lea    r11,[rdx+0x1]
  425695:	cmp    bpl,0xa
  425699:	jb     425668 <flatcc_json_parser_double@@Base+0x2d8>
  42569b:	add    rbx,rdx
  42569e:	add    rbx,0x2
  4256a2:	not    edx
  4256a4:	add    edx,esi
  4256a6:	mov    esi,edx
  4256a8:	jmp    425793 <flatcc_json_parser_double@@Base+0x403>
  4256ad:	mov    edx,r9d
  4256b0:	xor    r9d,r9d
  4256b3:	cmp    rbx,r12
  4256b6:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  4256bc:	mov    al,BYTE PTR [rbx]
  4256be:	or     al,0x20
  4256c0:	cmp    al,0x65
  4256c2:	jne    4256ff <flatcc_json_parser_double@@Base+0x36f>
  4256c4:	mov    rax,r12
  4256c7:	sub    rax,rbx
  4256ca:	xor    r9d,r9d
  4256cd:	cmp    rax,0x2
  4256d1:	jl     4258b2 <flatcc_json_parser_double@@Base+0x522>
  4256d7:	mov    al,BYTE PTR [rbx+0x1]
  4256da:	cmp    al,0x2d
  4256dc:	je     42584f <flatcc_json_parser_double@@Base+0x4bf>
  4256e2:	cmp    al,0x2b
  4256e4:	jne    425860 <flatcc_json_parser_double@@Base+0x4d0>
  4256ea:	add    rbx,0x2
  4256ee:	xor    r9d,r9d
  4256f1:	cmp    rbx,r12
  4256f4:	jne    425863 <flatcc_json_parser_double@@Base+0x4d3>
  4256fa:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  4256ff:	xor    r10d,r10d
  425702:	cmp    rbx,r12
  425705:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  42570b:	mov    eax,r10d
  42570e:	neg    eax
  425710:	test   r9d,r9d
  425713:	cmove  eax,r10d
  425717:	vxorpd xmm0,xmm0,xmm0
  42571b:	test   rdi,rdi
  42571e:	je     425740 <flatcc_json_parser_double@@Base+0x3b0>
  425720:	add    esi,edx
  425722:	add    esi,eax
  425724:	cmp    esi,0xfffffebc
  42572a:	jl     425740 <flatcc_json_parser_double@@Base+0x3b0>
  42572c:	cmp    esi,0x136
  425732:	jle    4257f5 <flatcc_json_parser_double@@Base+0x465>
  425738:	vmovsd xmm0,QWORD PTR [rip+0x152f0]        # 43aa30 <flatcc_builder_padding_base@@Base+0x2380>
  425740:	vmovsd QWORD PTR [r14],xmm0
  425745:	test   r11d,r11d
  425748:	je     42575c <flatcc_json_parser_double@@Base+0x3cc>
  42574a:	vmovsd xmm0,QWORD PTR [r14]
  42574f:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xf379]        # 434ad0 <_IO_stdin_used@@Base+0xad0>
  425757:	vmovlpd QWORD PTR [r14],xmm0
  42575c:	mov    r15,rbx
  42575f:	jmp    4258b5 <flatcc_json_parser_double@@Base+0x525>
  425764:	mov    rbx,rdx
  425767:	mov    rax,rdx
  42576a:	cmp    rbx,r12
  42576d:	jne    4257a6 <flatcc_json_parser_double@@Base+0x416>
  42576f:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  425774:	mov    esi,esi
  425776:	sub    rsi,rdx
  425779:	add    rbx,rdx
  42577c:	add    rbx,0x1
  425780:	test   ecx,ecx
  425782:	jne    425793 <flatcc_json_parser_double@@Base+0x403>
  425784:	xor    ecx,ecx
  425786:	cmp    al,0x34
  425788:	setg   cl
  42578b:	add    rdi,rcx
  42578e:	mov    ecx,0x1
  425793:	mov    r11d,DWORD PTR [rsp+0x4]
  425798:	mov    rax,QWORD PTR [rsp+0x8]
  42579d:	cmp    rbx,r12
  4257a0:	je     4258b2 <flatcc_json_parser_double@@Base+0x522>
  4257a6:	mov    edx,ebx
  4257a8:	sub    edx,eax
  4257aa:	add    edx,r9d
  4257ad:	movzx  eax,BYTE PTR [rbx]
  4257b0:	cmp    al,0x30
  4257b2:	jne    4257c3 <flatcc_json_parser_double@@Base+0x433>
  4257b4:	inc    esi
  4257b6:	inc    rbx
  4257b9:	cmp    r12,rbx
  4257bc:	jne    4257ad <flatcc_json_parser_double@@Base+0x41d>
  4257be:	jmp    4256b0 <flatcc_json_parser_double@@Base+0x320>
  4257c3:	add    al,0xcf
  4257c5:	cmp    al,0x8
  4257c7:	ja     4256b0 <flatcc_json_parser_double@@Base+0x320>
  4257cd:	mov    rax,rbx
  4257d0:	cmp    r8,rbx
  4257d3:	je     4257e5 <flatcc_json_parser_double@@Base+0x455>
  4257d5:	lea    rbx,[rax+0x1]
  4257d9:	movzx  ecx,BYTE PTR [rax+0x1]
  4257dd:	add    cl,0xd0
  4257e0:	cmp    cl,0xa
  4257e3:	jb     4257cd <flatcc_json_parser_double@@Base+0x43d>
  4257e5:	inc    rax
  4257e8:	mov    ecx,0x1
  4257ed:	mov    rbx,rax
  4257f0:	jmp    4256b0 <flatcc_json_parser_double@@Base+0x320>
  4257f5:	mov    rax,rdi
  4257f8:	shr    rax,0x35
  4257fc:	jne    4258c7 <flatcc_json_parser_double@@Base+0x537>
  425802:	cmp    esi,0x16
  425805:	ja     4258c7 <flatcc_json_parser_double@@Base+0x537>
  42580b:	vmovq  xmm0,rdi
  425810:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xf298]        # 434ab0 <_IO_stdin_used@@Base+0xab0>
  425818:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xf2a0]        # 434ac0 <_IO_stdin_used@@Base+0xac0>
  425820:	vhaddpd xmm0,xmm0,xmm0
  425824:	sub    esi,edx
  425826:	add    esi,0x16
  425829:	cmp    esi,0x2c
  42582c:	ja     425740 <flatcc_json_parser_double@@Base+0x3b0>
  425832:	lea    rax,[rip+0x14953]        # 43a18c <flatcc_builder_padding_base@@Base+0x1adc>
  425839:	movsxd rcx,DWORD PTR [rax+rsi*4]
  42583d:	add    rcx,rax
  425840:	jmp    rcx
  425842:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15296]        # 43aae0 <flatcc_builder_padding_base@@Base+0x2430>
  42584a:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42584f:	add    rbx,0x2
  425853:	mov    r9d,0x1
  425859:	cmp    rbx,r12
  42585c:	jne    425863 <flatcc_json_parser_double@@Base+0x4d3>
  42585e:	jmp    4258b2 <flatcc_json_parser_double@@Base+0x522>
  425860:	inc    rbx
  425863:	movsx  r10d,BYTE PTR [rbx]
  425867:	lea    eax,[r10-0x30]
  42586b:	cmp    al,0x9
  42586d:	ja     4258b2 <flatcc_json_parser_double@@Base+0x522>
  42586f:	add    r10d,0xffffffd0
  425873:	cmp    rbx,r8
  425876:	jne    425882 <flatcc_json_parser_double@@Base+0x4f2>
  425878:	jmp    4258a6 <flatcc_json_parser_double@@Base+0x516>
  42587a:	inc    rbx
  42587d:	cmp    r8,rbx
  425880:	je     4258a6 <flatcc_json_parser_double@@Base+0x516>
  425882:	movsx  eax,BYTE PTR [rbx+0x1]
  425886:	lea    ebp,[rax-0x30]
  425889:	cmp    bpl,0x9
  42588d:	ja     4258a6 <flatcc_json_parser_double@@Base+0x516>
  42588f:	cmp    r10d,0x7fff
  425896:	jg     42587a <flatcc_json_parser_double@@Base+0x4ea>
  425898:	lea    ebp,[r10+r10*4]
  42589c:	lea    r10d,[rax+rbp*2]
  4258a0:	add    r10d,0xffffffd0
  4258a4:	jmp    42587a <flatcc_json_parser_double@@Base+0x4ea>
  4258a6:	inc    rbx
  4258a9:	cmp    rbx,r12
  4258ac:	jne    42570b <flatcc_json_parser_double@@Base+0x37b>
  4258b2:	xor    r15d,r15d
  4258b5:	mov    rax,r15
  4258b8:	add    rsp,0x18
  4258bc:	pop    rbx
  4258bd:	pop    r12
  4258bf:	pop    r13
  4258c1:	pop    r14
  4258c3:	pop    r15
  4258c5:	pop    rbp
  4258c6:	ret    
  4258c7:	mov    r8,r14
  4258ca:	mov    ebp,r11d
  4258cd:	call   423c60 <grisu3_diy_fp_encode_double@@Base>
  4258d2:	mov    r11d,ebp
  4258d5:	test   eax,eax
  4258d7:	jne    425745 <flatcc_json_parser_double@@Base+0x3b5>
  4258dd:	lea    rsi,[rsp+0x10]
  4258e2:	mov    rdi,r15
  4258e5:	call   406050 <strtod@plt>
  4258ea:	vmovsd QWORD PTR [r14],xmm0
  4258ef:	mov    rax,QWORD PTR [rsp+0x10]
  4258f4:	cmp    rax,rbx
  4258f7:	cmovb  rbx,rax
  4258fb:	jmp    42575c <flatcc_json_parser_double@@Base+0x3cc>
  425900:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15130]        # 43aa38 <flatcc_builder_padding_base@@Base+0x2388>
  425908:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42590d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1512b]        # 43aa40 <flatcc_builder_padding_base@@Base+0x2390>
  425915:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42591a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15126]        # 43aa48 <flatcc_builder_padding_base@@Base+0x2398>
  425922:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425927:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15121]        # 43aa50 <flatcc_builder_padding_base@@Base+0x23a0>
  42592f:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425934:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1511c]        # 43aa58 <flatcc_builder_padding_base@@Base+0x23a8>
  42593c:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425941:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15117]        # 43aa60 <flatcc_builder_padding_base@@Base+0x23b0>
  425949:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42594e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15112]        # 43aa68 <flatcc_builder_padding_base@@Base+0x23b8>
  425956:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42595b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1510d]        # 43aa70 <flatcc_builder_padding_base@@Base+0x23c0>
  425963:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425968:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15108]        # 43aa78 <flatcc_builder_padding_base@@Base+0x23c8>
  425970:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425975:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15103]        # 43aa80 <flatcc_builder_padding_base@@Base+0x23d0>
  42597d:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425982:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150fe]        # 43aa88 <flatcc_builder_padding_base@@Base+0x23d8>
  42598a:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42598f:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150f9]        # 43aa90 <flatcc_builder_padding_base@@Base+0x23e0>
  425997:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  42599c:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150f4]        # 43aa98 <flatcc_builder_padding_base@@Base+0x23e8>
  4259a4:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259a9:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150ef]        # 43aaa0 <flatcc_builder_padding_base@@Base+0x23f0>
  4259b1:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259b6:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150ea]        # 43aaa8 <flatcc_builder_padding_base@@Base+0x23f8>
  4259be:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259c3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150e5]        # 43aab0 <flatcc_builder_padding_base@@Base+0x2400>
  4259cb:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259d0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150e0]        # 43aab8 <flatcc_builder_padding_base@@Base+0x2408>
  4259d8:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259dd:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150db]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2410>
  4259e5:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259ea:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150d6]        # 43aac8 <flatcc_builder_padding_base@@Base+0x2418>
  4259f2:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  4259f7:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150d1]        # 43aad0 <flatcc_builder_padding_base@@Base+0x2420>
  4259ff:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a04:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150cc]        # 43aad8 <flatcc_builder_padding_base@@Base+0x2428>
  425a0c:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a11:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x150bf]        # 43aad8 <flatcc_builder_padding_base@@Base+0x2428>
  425a19:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a1e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x150aa]        # 43aad0 <flatcc_builder_padding_base@@Base+0x2420>
  425a26:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a2b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15095]        # 43aac8 <flatcc_builder_padding_base@@Base+0x2418>
  425a33:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a38:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15080]        # 43aac0 <flatcc_builder_padding_base@@Base+0x2410>
  425a40:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a45:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1506b]        # 43aab8 <flatcc_builder_padding_base@@Base+0x2408>
  425a4d:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a52:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15056]        # 43aab0 <flatcc_builder_padding_base@@Base+0x2400>
  425a5a:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a5f:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15041]        # 43aaa8 <flatcc_builder_padding_base@@Base+0x23f8>
  425a67:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a6c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1502c]        # 43aaa0 <flatcc_builder_padding_base@@Base+0x23f0>
  425a74:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a79:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15017]        # 43aa98 <flatcc_builder_padding_base@@Base+0x23e8>
  425a81:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a86:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15002]        # 43aa90 <flatcc_builder_padding_base@@Base+0x23e0>
  425a8e:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425a93:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14fed]        # 43aa88 <flatcc_builder_padding_base@@Base+0x23d8>
  425a9b:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425aa0:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14fd8]        # 43aa80 <flatcc_builder_padding_base@@Base+0x23d0>
  425aa8:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425aad:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14fc3]        # 43aa78 <flatcc_builder_padding_base@@Base+0x23c8>
  425ab5:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425aba:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14fae]        # 43aa70 <flatcc_builder_padding_base@@Base+0x23c0>
  425ac2:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425ac7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f99]        # 43aa68 <flatcc_builder_padding_base@@Base+0x23b8>
  425acf:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425ad4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f84]        # 43aa60 <flatcc_builder_padding_base@@Base+0x23b0>
  425adc:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425ae1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f6f]        # 43aa58 <flatcc_builder_padding_base@@Base+0x23a8>
  425ae9:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425aee:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f5a]        # 43aa50 <flatcc_builder_padding_base@@Base+0x23a0>
  425af6:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425afb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f45]        # 43aa48 <flatcc_builder_padding_base@@Base+0x2398>
  425b03:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425b08:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f30]        # 43aa40 <flatcc_builder_padding_base@@Base+0x2390>
  425b10:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425b15:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14f1b]        # 43aa38 <flatcc_builder_padding_base@@Base+0x2388>
  425b1d:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425b22:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14fb6]        # 43aae0 <flatcc_builder_padding_base@@Base+0x2430>
  425b2a:	jmp    425740 <flatcc_json_parser_double@@Base+0x3b0>
  425b2f:	nop

0000000000425b30 <flatcc_json_parser_float@@Base>:
  425b30:	push   r15
  425b32:	push   r14
  425b34:	push   r12
  425b36:	push   rbx
  425b37:	push   rax
  425b38:	mov    rbx,rsi
  425b3b:	mov    DWORD PTR [rcx],0x0
  425b41:	cmp    rsi,rdx
  425b44:	je     425bd8 <flatcc_json_parser_float@@Base+0xa8>
  425b4a:	mov    r12,rcx
  425b4d:	mov    r14,rdx
  425b50:	mov    r15,rdi
  425b53:	lea    rax,[rbx+0x1]
  425b57:	xor    ecx,ecx
  425b59:	cmp    BYTE PTR [rbx],0x2d
  425b5c:	sete   dl
  425b5f:	cmovne rax,rbx
  425b63:	mov    rsi,r14
  425b66:	sub    rsi,rax
  425b69:	cmp    rsi,0x2
  425b6d:	jl     425b94 <flatcc_json_parser_float@@Base+0x64>
  425b6f:	mov    cl,dl
  425b71:	mov    cl,BYTE PTR [rbx+rcx*1]
  425b74:	cmp    cl,0x2e
  425b77:	je     425b84 <flatcc_json_parser_float@@Base+0x54>
  425b79:	cmp    cl,0x30
  425b7c:	jne    425b94 <flatcc_json_parser_float@@Base+0x64>
  425b7e:	cmp    BYTE PTR [rax+0x1],0x30
  425b82:	jne    425b94 <flatcc_json_parser_float@@Base+0x64>
  425b84:	cmp    DWORD PTR [r15+0x20],0x0
  425b89:	jne    425c41 <flatcc_json_parser_float@@Base+0x111>
  425b8f:	jmp    425c27 <flatcc_json_parser_float@@Base+0xf7>
  425b94:	mov    esi,r14d
  425b97:	sub    esi,ebx
  425b99:	mov    rdx,rsp
  425b9c:	mov    rdi,rbx
  425b9f:	call   425470 <flatcc_json_parser_double@@Base+0xe0>
  425ba4:	vmovsd xmm1,QWORD PTR [rsp]
  425ba9:	vcvtsd2ss xmm2,xmm1,xmm1
  425bad:	vbroadcastss xmm0,DWORD PTR [rip+0x14f32]        # 43aae8 <flatcc_builder_padding_base@@Base+0x2438>
  425bb6:	vandps xmm3,xmm2,xmm0
  425bba:	vxorps xmm4,xmm4,xmm4
  425bbe:	vucomisd xmm4,xmm1
  425bc2:	vmovss xmm4,DWORD PTR [rip+0x14f26]        # 43aaf0 <flatcc_builder_padding_base@@Base+0x2440>
  425bca:	ja     425bdd <flatcc_json_parser_float@@Base+0xad>
  425bcc:	vmovaps xmm1,xmm4
  425bd0:	vucomiss xmm3,xmm4
  425bd4:	jb     425beb <flatcc_json_parser_float@@Base+0xbb>
  425bd6:	jmp    425bef <flatcc_json_parser_float@@Base+0xbf>
  425bd8:	mov    rax,rbx
  425bdb:	jmp    425c44 <flatcc_json_parser_float@@Base+0x114>
  425bdd:	vmovss xmm1,DWORD PTR [rip+0x14f07]        # 43aaec <flatcc_builder_padding_base@@Base+0x243c>
  425be5:	vucomiss xmm3,xmm4
  425be9:	jae    425bef <flatcc_json_parser_float@@Base+0xbf>
  425beb:	vmovaps xmm1,xmm2
  425bef:	cmovae rax,rbx
  425bf3:	vmovss DWORD PTR [r12],xmm1
  425bf9:	test   rax,rax
  425bfc:	je     425c03 <flatcc_json_parser_float@@Base+0xd3>
  425bfe:	cmp    rax,rbx
  425c01:	jne    425c44 <flatcc_json_parser_float@@Base+0x114>
  425c03:	vandps xmm0,xmm1,xmm0
  425c07:	vucomiss xmm0,DWORD PTR [rip+0x14ee1]        # 43aaf0 <flatcc_builder_padding_base@@Base+0x2440>
  425c0f:	mov    eax,DWORD PTR [r15+0x20]
  425c13:	jb     425c23 <flatcc_json_parser_float@@Base+0xf3>
  425c15:	test   eax,eax
  425c17:	jne    425c41 <flatcc_json_parser_float@@Base+0x111>
  425c19:	mov    DWORD PTR [r15+0x20],0x7
  425c21:	jmp    425c2f <flatcc_json_parser_float@@Base+0xff>
  425c23:	test   eax,eax
  425c25:	jne    425c41 <flatcc_json_parser_float@@Base+0x111>
  425c27:	mov    DWORD PTR [r15+0x20],0x6
  425c2f:	mov    eax,DWORD PTR [r15+0x8]
  425c33:	mov    ecx,ebx
  425c35:	sub    ecx,eax
  425c37:	inc    ecx
  425c39:	mov    DWORD PTR [r15+0x1c],ecx
  425c3d:	mov    QWORD PTR [r15+0x38],rbx
  425c41:	mov    rax,r14
  425c44:	add    rsp,0x8
  425c48:	pop    rbx
  425c49:	pop    r12
  425c4b:	pop    r14
  425c4d:	pop    r15
  425c4f:	ret    

0000000000425c50 <flatcc_json_parser_integer@@Base>:
  425c50:	mov    rax,rsi
  425c53:	cmp    rsi,rdx
  425c56:	je     425ceb <flatcc_json_parser_integer@@Base+0x9b>
  425c5c:	xor    r10d,r10d
  425c5f:	cmp    BYTE PTR [rax],0x2d
  425c62:	sete   r10b
  425c66:	mov    DWORD PTR [rcx],r10d
  425c69:	add    r10,rax
  425c6c:	xor    r9d,r9d
  425c6f:	cmp    r10,rdx
  425c72:	je     425ce1 <flatcc_json_parser_integer@@Base+0x91>
  425c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c7e:	xchg   ax,ax
  425c80:	movsx  r11,BYTE PTR [r10]
  425c84:	lea    esi,[r11-0x30]
  425c88:	cmp    sil,0x9
  425c8c:	ja     425cf3 <flatcc_json_parser_integer@@Base+0xa3>
  425c8e:	lea    rsi,[r9+r9*4]
  425c92:	lea    rsi,[r11+rsi*2]
  425c96:	add    rsi,0xffffffffffffffd0
  425c9a:	cmp    r9,rsi
  425c9d:	ja     425cfc <flatcc_json_parser_integer@@Base+0xac>
  425c9f:	inc    r10
  425ca2:	mov    r9,rsi
  425ca5:	cmp    rdx,r10
  425ca8:	jne    425c80 <flatcc_json_parser_integer@@Base+0x30>
  425caa:	xor    ecx,ecx
  425cac:	mov    r10,rdx
  425caf:	mov    r9,rsi
  425cb2:	cmp    r10,rax
  425cb5:	je     425ceb <flatcc_json_parser_integer@@Base+0x9b>
  425cb7:	test   cl,cl
  425cb9:	je     425cec <flatcc_json_parser_integer@@Base+0x9c>
  425cbb:	mov    al,BYTE PTR [r10]
  425cbe:	add    al,0xd2
  425cc0:	cmp    al,0x37
  425cc2:	ja     425cec <flatcc_json_parser_integer@@Base+0x9c>
  425cc4:	movzx  eax,al
  425cc7:	movabs rcx,0x80000000800001
  425cd1:	bt     rcx,rax
  425cd5:	jae    425cec <flatcc_json_parser_integer@@Base+0x9c>
  425cd7:	cmp    DWORD PTR [rdi+0x20],0x0
  425cdb:	je     425d06 <flatcc_json_parser_integer@@Base+0xb6>
  425cdd:	mov    rax,rdx
  425ce0:	ret    
  425ce1:	mov    r10,rdx
  425ce4:	xor    ecx,ecx
  425ce6:	cmp    r10,rax
  425ce9:	jne    425cb7 <flatcc_json_parser_integer@@Base+0x67>
  425ceb:	ret    
  425cec:	mov    QWORD PTR [r8],r9
  425cef:	mov    rax,r10
  425cf2:	ret    
  425cf3:	mov    cl,0x1
  425cf5:	cmp    r10,rax
  425cf8:	jne    425cb7 <flatcc_json_parser_integer@@Base+0x67>
  425cfa:	jmp    425ceb <flatcc_json_parser_integer@@Base+0x9b>
  425cfc:	cmp    DWORD PTR [rdi+0x20],0x0
  425d00:	je     425d0f <flatcc_json_parser_integer@@Base+0xbf>
  425d02:	mov    rax,rdx
  425d05:	ret    
  425d06:	mov    DWORD PTR [rdi+0x20],0xc
  425d0d:	jmp    425d1e <flatcc_json_parser_integer@@Base+0xce>
  425d0f:	cmp    rcx,0x1
  425d13:	mov    eax,0x8
  425d18:	sbb    eax,0x0
  425d1b:	mov    DWORD PTR [rdi+0x20],eax
  425d1e:	mov    eax,DWORD PTR [rdi+0x8]
  425d21:	mov    ecx,r10d
  425d24:	sub    ecx,eax
  425d26:	inc    ecx
  425d28:	mov    DWORD PTR [rdi+0x1c],ecx
  425d2b:	mov    QWORD PTR [rdi+0x38],r10
  425d2f:	mov    rax,rdx
  425d32:	ret    
  425d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d3d:	nop    DWORD PTR [rax]

0000000000425d40 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  425d40:	push   rbp
  425d41:	push   r15
  425d43:	push   r14
  425d45:	push   r13
  425d47:	push   r12
  425d49:	push   rbx
  425d4a:	sub    rsp,0x28
  425d4e:	mov    r12d,r8d
  425d51:	mov    r15,rcx
  425d54:	mov    r14,rdx
  425d57:	mov    r13,rsi
  425d5a:	mov    rbx,rdi
  425d5d:	cmp    rsi,rdx
  425d60:	je     425da9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  425d62:	cmp    BYTE PTR [r13+0x0],0x22
  425d67:	jne    425da9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  425d69:	inc    r13
  425d6c:	cmp    r13,r14
  425d6f:	je     425dc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  425d71:	mov    rbp,r13
  425d74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d7e:	xchg   ax,ax
  425d80:	movzx  ecx,BYTE PTR [rbp+0x0]
  425d84:	cmp    cl,0x20
  425d87:	jb     425e29 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xe9>
  425d8d:	cmp    cl,0x22
  425d90:	je     425e4b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  425d96:	cmp    cl,0x5c
  425d99:	je     425e4b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  425d9f:	inc    rbp
  425da2:	cmp    r14,rbp
  425da5:	jne    425d80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  425da7:	jmp    425dc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  425da9:	cmp    DWORD PTR [rbx+0x20],0x0
  425dad:	jne    425dc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  425daf:	mov    DWORD PTR [rbx+0x20],0x10
  425db6:	mov    eax,DWORD PTR [rbx+0x8]
  425db9:	mov    ecx,r13d
  425dbc:	sub    ecx,eax
  425dbe:	inc    ecx
  425dc0:	mov    DWORD PTR [rbx+0x1c],ecx
  425dc3:	mov    QWORD PTR [rbx+0x38],r13
  425dc7:	cmp    DWORD PTR [rbx+0x20],0x0
  425dcb:	mov    rax,r14
  425dce:	jne    425deb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  425dd0:	mov    DWORD PTR [rbx+0x20],0x14
  425dd7:	mov    eax,DWORD PTR [rbx+0x8]
  425dda:	mov    ecx,r14d
  425ddd:	sub    ecx,eax
  425ddf:	inc    ecx
  425de1:	mov    DWORD PTR [rbx+0x1c],ecx
  425de4:	mov    QWORD PTR [rbx+0x38],r14
  425de8:	mov    rax,r14
  425deb:	mov    DWORD PTR [r15],0x0
  425df2:	cmp    DWORD PTR [rbx+0x20],0x0
  425df6:	jne    425e17 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  425df8:	cmp    r12d,0x1
  425dfc:	mov    ecx,0x1f
  425e01:	sbb    ecx,0xffffffff
  425e04:	mov    DWORD PTR [rbx+0x20],ecx
  425e07:	mov    ecx,DWORD PTR [rbx+0x8]
  425e0a:	mov    edx,eax
  425e0c:	sub    edx,ecx
  425e0e:	inc    edx
  425e10:	mov    DWORD PTR [rbx+0x1c],edx
  425e13:	mov    QWORD PTR [rbx+0x38],rax
  425e17:	mov    rax,r14
  425e1a:	add    rsp,0x28
  425e1e:	pop    rbx
  425e1f:	pop    r12
  425e21:	pop    r13
  425e23:	pop    r14
  425e25:	pop    r15
  425e27:	pop    rbp
  425e28:	ret    
  425e29:	cmp    DWORD PTR [rbx+0x20],0x0
  425e2d:	mov    rax,r14
  425e30:	jne    425deb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  425e32:	mov    DWORD PTR [rbx+0x20],0x11
  425e39:	mov    eax,DWORD PTR [rbx+0x8]
  425e3c:	mov    ecx,ebp
  425e3e:	sub    ecx,eax
  425e40:	inc    ecx
  425e42:	mov    DWORD PTR [rbx+0x1c],ecx
  425e45:	mov    QWORD PTR [rbx+0x38],rbp
  425e49:	jmp    425de8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xa8>
  425e4b:	mov    rax,r14
  425e4e:	cmp    r14,rbp
  425e51:	je     425deb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  425e53:	cmp    cl,0x22
  425e56:	jne    425e82 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x142>
  425e58:	mov    rcx,rbp
  425e5b:	sub    rcx,r13
  425e5e:	mov    eax,ecx
  425e60:	and    eax,0x3
  425e63:	mov    QWORD PTR [rsp+0x18],rcx
  425e68:	shr    rcx,0x2
  425e6c:	lea    rcx,[rcx+rcx*2]
  425e70:	cmp    rax,0x2
  425e74:	je     425e8a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14a>
  425e76:	cmp    rax,0x3
  425e7a:	jne    425e8d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  425e7c:	add    rcx,0x2
  425e80:	jmp    425e8d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  425e82:	mov    rax,rbp
  425e85:	jmp    425deb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  425e8a:	inc    rcx
  425e8d:	mov    QWORD PTR [rsp+0x8],rcx
  425e92:	mov    rdi,QWORD PTR [rbx]
  425e95:	mov    esi,0x1
  425e9a:	mov    ecx,0xffffffff
  425e9f:	mov    edx,0x1
  425ea4:	call   41f250 <flatcc_builder_start_vector@@Base>
  425ea9:	test   eax,eax
  425eab:	je     425eda <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19a>
  425ead:	mov    DWORD PTR [r15],0x0
  425eb4:	cmp    DWORD PTR [rbx+0x20],0x0
  425eb8:	jne    425e17 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  425ebe:	mov    DWORD PTR [rbx+0x20],0x21
  425ec5:	mov    eax,DWORD PTR [rbx+0x8]
  425ec8:	mov    ecx,ebp
  425eca:	sub    ecx,eax
  425ecc:	inc    ecx
  425ece:	mov    DWORD PTR [rbx+0x1c],ecx
  425ed1:	mov    QWORD PTR [rbx+0x38],rbp
  425ed5:	jmp    425e17 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  425eda:	mov    rdi,QWORD PTR [rbx]
  425edd:	mov    rsi,QWORD PTR [rsp+0x8]
  425ee2:	call   41e900 <flatcc_builder_extend_vector@@Base>
  425ee7:	test   rax,rax
  425eea:	je     425ead <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  425eec:	test   r12d,r12d
  425eef:	lea    rcx,[rip+0x14a2a]        # 43a920 <flatcc_builder_padding_base@@Base+0x2270>
  425ef6:	lea    r11,[rip+0x14923]        # 43a820 <flatcc_builder_padding_base@@Base+0x2170>
  425efd:	cmovne r11,rcx
  425f01:	xor    r10d,r10d
  425f04:	mov    rcx,QWORD PTR [rsp+0x8]
  425f09:	cmp    rcx,0x1
  425f0d:	sbb    r10,r10
  425f10:	or     r10,rcx
  425f13:	mov    QWORD PTR [rsp+0x20],rax
  425f18:	mov    r9,rax
  425f1b:	mov    rsi,QWORD PTR [rsp+0x18]
  425f20:	mov    r8,r13
  425f23:	mov    rdi,rsi
  425f26:	xor    edx,edx
  425f28:	cmp    rdi,rdx
  425f2b:	jne    425f44 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
  425f2d:	jmp    425fc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  425f32:	inc    rdx
  425f35:	cmp    rdx,0x4
  425f39:	jae    425f6b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  425f3b:	cmp    rdi,rdx
  425f3e:	je     425fc7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  425f44:	movzx  ecx,BYTE PTR [r8+rdx*1]
  425f49:	movzx  ecx,BYTE PTR [r11+rcx*1]
  425f4e:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  425f52:	cmp    cl,0x40
  425f55:	jb     425f32 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  425f57:	cmp    cl,0x41
  425f5a:	jne    42601c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
  425f60:	inc    r8
  425f63:	dec    rdi
  425f66:	dec    rdx
  425f69:	jmp    425f32 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  425f6b:	cmp    r10,0x3
  425f6f:	jb     42609e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  425f75:	mov    al,BYTE PTR [rsp+0x4]
  425f79:	mov    cl,BYTE PTR [rsp+0x5]
  425f7d:	shl    al,0x2
  425f80:	mov    edx,ecx
  425f82:	shr    dl,0x4
  425f85:	or     dl,al
  425f87:	mov    BYTE PTR [r9],dl
  425f8a:	shl    cl,0x4
  425f8d:	mov    al,BYTE PTR [rsp+0x6]
  425f91:	shr    al,0x2
  425f94:	or     al,cl
  425f96:	mov    BYTE PTR [r9+0x1],al
  425f9a:	mov    al,BYTE PTR [rsp+0x6]
  425f9e:	shl    al,0x6
  425fa1:	or     al,BYTE PTR [rsp+0x7]
  425fa5:	mov    BYTE PTR [r9+0x2],al
  425fa9:	add    r9,0x3
  425fad:	add    r8,0x4
  425fb1:	add    rdi,0xfffffffffffffffc
  425fb5:	mov    rsi,rdi
  425fb8:	add    r10,0xfffffffffffffffd
  425fbc:	jne    425f26 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  425fc2:	jmp    42608f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  425fc7:	mov    QWORD PTR [rsp+0x10],rsi
  425fcc:	mov    rdx,rdi
  425fcf:	mov    rsi,rdi
  425fd2:	sub    rdi,rsi
  425fd5:	test   rdx,rdx
  425fd8:	je     42608f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  425fde:	cmp    rdx,0x3
  425fe2:	je     426052 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x312>
  425fe4:	cmp    rdx,0x2
  425fe8:	mov    rsi,QWORD PTR [rsp+0x10]
  425fed:	jne    42609e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  425ff3:	mov    cl,BYTE PTR [rsp+0x5]
  425ff7:	test   cl,0xf
  425ffa:	jne    42609e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  426000:	mov    al,BYTE PTR [rsp+0x4]
  426004:	shl    al,0x2
  426007:	shr    cl,0x4
  42600a:	or     cl,al
  42600c:	mov    BYTE PTR [r9],cl
  42600f:	inc    r9
  426012:	test   rdi,rdi
  426015:	jne    426094 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
  426017:	jmp    4260b1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  42601c:	mov    QWORD PTR [rsp+0x10],rsi
  426021:	cmp    cl,0x42
  426024:	jne    4260f6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b6>
  42602a:	lea    rcx,[rdx+0x1]
  42602e:	mov    rsi,rcx
  426031:	cmp    rcx,rdi
  426034:	jae    425fd2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  426036:	cmp    rsi,0x7
  42603a:	ja     425fd2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  42603c:	movzx  ecx,BYTE PTR [r8+rsi*1]
  426041:	movzx  eax,BYTE PTR [r11+rcx*1]
  426046:	add    al,0xbf
  426048:	lea    rcx,[rsi+0x1]
  42604c:	cmp    al,0x2
  42604e:	jb     42602e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ee>
  426050:	jmp    425fd2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  426052:	cmp    r10,0x2
  426056:	mov    rsi,QWORD PTR [rsp+0x10]
  42605b:	jb     42609e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  42605d:	mov    cl,BYTE PTR [rsp+0x6]
  426061:	mov    eax,ecx
  426063:	and    al,0x3
  426065:	jne    42609e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  426067:	mov    sil,BYTE PTR [rsp+0x4]
  42606c:	mov    al,BYTE PTR [rsp+0x5]
  426070:	shl    sil,0x2
  426074:	mov    edx,eax
  426076:	shr    dl,0x4
  426079:	or     dl,sil
  42607c:	mov    BYTE PTR [r9],dl
  42607f:	shl    al,0x4
  426082:	shr    cl,0x2
  426085:	or     cl,al
  426087:	mov    BYTE PTR [r9+0x1],cl
  42608b:	add    r9,0x2
  42608f:	test   rdi,rdi
  426092:	je     4260b1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  426094:	mov    rax,QWORD PTR [rsp+0x18]
  426099:	sub    rax,rdi
  42609c:	jmp    4260a6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x366>
  42609e:	mov    rax,QWORD PTR [rsp+0x18]
  4260a3:	sub    rax,rsi
  4260a6:	add    r13,rax
  4260a9:	mov    rax,r13
  4260ac:	jmp    425deb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4260b1:	sub    r9,QWORD PTR [rsp+0x20]
  4260b6:	sub    QWORD PTR [rsp+0x8],r9
  4260bb:	jbe    4260d2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x392>
  4260bd:	mov    rdi,QWORD PTR [rbx]
  4260c0:	mov    rsi,QWORD PTR [rsp+0x8]
  4260c5:	call   41f0d0 <flatcc_builder_truncate_vector@@Base>
  4260ca:	test   eax,eax
  4260cc:	jne    425ead <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  4260d2:	mov    rdi,QWORD PTR [rbx]
  4260d5:	call   4203e0 <flatcc_builder_end_vector@@Base>
  4260da:	mov    DWORD PTR [r15],eax
  4260dd:	test   eax,eax
  4260df:	je     425ead <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  4260e5:	cmp    BYTE PTR [rbp+0x0],0x22
  4260e9:	jne    4260fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3be>
  4260eb:	inc    rbp
  4260ee:	mov    r14,rbp
  4260f1:	jmp    425e17 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  4260f6:	mov    rsi,rdx
  4260f9:	jmp    425fd2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  4260fe:	cmp    DWORD PTR [rbx+0x20],0x0
  426102:	jne    425e17 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  426108:	mov    DWORD PTR [rbx+0x20],0x14
  42610f:	jmp    425ec5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x185>
  426114:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42611e:	xchg   ax,ax

0000000000426120 <flatcc_json_parser_build_string@@Base>:
  426120:	push   rbp
  426121:	push   r15
  426123:	push   r14
  426125:	push   r13
  426127:	push   r12
  426129:	push   rbx
  42612a:	push   rax
  42612b:	mov    r15,rcx
  42612e:	mov    r12,rdx
  426131:	mov    r14,rdi
  426134:	cmp    rsi,rdx
  426137:	je     42617f <flatcc_json_parser_build_string@@Base+0x5f>
  426139:	cmp    BYTE PTR [rsi],0x22
  42613c:	jne    42617f <flatcc_json_parser_build_string@@Base+0x5f>
  42613e:	inc    rsi
  426141:	mov    rbp,r12
  426144:	cmp    rsi,r12
  426147:	je     42618d <flatcc_json_parser_build_string@@Base+0x6d>
  426149:	mov    rbx,rsi
  42614c:	nop    DWORD PTR [rax+0x0]
  426150:	movzx  eax,BYTE PTR [rbx]
  426153:	cmp    al,0x20
  426155:	jb     4262ce <flatcc_json_parser_build_string@@Base+0x1ae>
  42615b:	cmp    al,0x22
  42615d:	je     4262f1 <flatcc_json_parser_build_string@@Base+0x1d1>
  426163:	cmp    al,0x5c
  426165:	je     4262f1 <flatcc_json_parser_build_string@@Base+0x1d1>
  42616b:	inc    rbx
  42616e:	cmp    r12,rbx
  426171:	jne    426150 <flatcc_json_parser_build_string@@Base+0x30>
  426173:	mov    rbp,rsi
  426176:	cmp    DWORD PTR [r14+0x20],0x0
  42617b:	jne    4261af <flatcc_json_parser_build_string@@Base+0x8f>
  42617d:	jmp    426194 <flatcc_json_parser_build_string@@Base+0x74>
  42617f:	cmp    DWORD PTR [r14+0x20],0x0
  426184:	mov    rbp,r12
  426187:	je     4262a1 <flatcc_json_parser_build_string@@Base+0x181>
  42618d:	cmp    DWORD PTR [r14+0x20],0x0
  426192:	jne    4261af <flatcc_json_parser_build_string@@Base+0x8f>
  426194:	mov    DWORD PTR [r14+0x20],0x14
  42619c:	mov    eax,DWORD PTR [r14+0x8]
  4261a0:	mov    ecx,r12d
  4261a3:	sub    ecx,eax
  4261a5:	inc    ecx
  4261a7:	mov    DWORD PTR [r14+0x1c],ecx
  4261ab:	mov    QWORD PTR [r14+0x38],r12
  4261af:	mov    rbx,r12
  4261b2:	mov    rdi,QWORD PTR [r14]
  4261b5:	call   41f550 <flatcc_builder_start_string@@Base>
  4261ba:	test   eax,eax
  4261bc:	je     4261da <flatcc_json_parser_build_string@@Base+0xba>
  4261be:	mov    DWORD PTR [r15],0x0
  4261c5:	mov    r12,rbx
  4261c8:	mov    rax,r12
  4261cb:	add    rsp,0x8
  4261cf:	pop    rbx
  4261d0:	pop    r12
  4261d2:	pop    r13
  4261d4:	pop    r14
  4261d6:	pop    r15
  4261d8:	pop    rbp
  4261d9:	ret    
  4261da:	mov    rdi,QWORD PTR [r14]
  4261dd:	mov    rdx,rbx
  4261e0:	sub    rdx,rbp
  4261e3:	mov    rsi,rbp
  4261e6:	call   41ef60 <flatcc_builder_append_string@@Base>
  4261eb:	test   rax,rax
  4261ee:	je     4261be <flatcc_json_parser_build_string@@Base+0x9e>
  4261f0:	mov    rbp,r12
  4261f3:	cmp    rbx,r12
  4261f6:	je     426363 <flatcc_json_parser_build_string@@Base+0x243>
  4261fc:	lea    rbp,[rsp+0x4]
  426201:	cmp    BYTE PTR [rbx],0x22
  426204:	je     4263ad <flatcc_json_parser_build_string@@Base+0x28d>
  42620a:	mov    rdi,r14
  42620d:	mov    rsi,rbx
  426210:	mov    rdx,r12
  426213:	mov    rcx,rbp
  426216:	call   424200 <flatcc_json_parser_string_escape@@Base>
  42621b:	mov    r13,rax
  42621e:	mov    rdi,QWORD PTR [r14]
  426221:	movsx  rdx,BYTE PTR [rsp+0x4]
  426227:	lea    rsi,[rsp+0x5]
  42622c:	call   41ef60 <flatcc_builder_append_string@@Base>
  426231:	test   rax,rax
  426234:	je     4263b2 <flatcc_json_parser_build_string@@Base+0x292>
  42623a:	cmp    r13,r12
  42623d:	je     426315 <flatcc_json_parser_build_string@@Base+0x1f5>
  426243:	mov    rbx,r13
  426246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426250:	movzx  eax,BYTE PTR [rbx]
  426253:	cmp    al,0x20
  426255:	jb     42633c <flatcc_json_parser_build_string@@Base+0x21c>
  42625b:	cmp    al,0x22
  42625d:	je     426270 <flatcc_json_parser_build_string@@Base+0x150>
  42625f:	cmp    al,0x5c
  426261:	je     426270 <flatcc_json_parser_build_string@@Base+0x150>
  426263:	inc    rbx
  426266:	cmp    r12,rbx
  426269:	jne    426250 <flatcc_json_parser_build_string@@Base+0x130>
  42626b:	jmp    426315 <flatcc_json_parser_build_string@@Base+0x1f5>
  426270:	cmp    r12,rbx
  426273:	je     426360 <flatcc_json_parser_build_string@@Base+0x240>
  426279:	mov    rdi,QWORD PTR [r14]
  42627c:	mov    rdx,rbx
  42627f:	sub    rdx,r13
  426282:	mov    rsi,r13
  426285:	call   41ef60 <flatcc_builder_append_string@@Base>
  42628a:	test   rax,rax
  42628d:	je     4261be <flatcc_json_parser_build_string@@Base+0x9e>
  426293:	cmp    r12,rbx
  426296:	jne    426201 <flatcc_json_parser_build_string@@Base+0xe1>
  42629c:	jmp    426360 <flatcc_json_parser_build_string@@Base+0x240>
  4262a1:	mov    DWORD PTR [r14+0x20],0x10
  4262a9:	mov    eax,DWORD PTR [r14+0x8]
  4262ad:	mov    ecx,esi
  4262af:	sub    ecx,eax
  4262b1:	inc    ecx
  4262b3:	mov    DWORD PTR [r14+0x1c],ecx
  4262b7:	mov    QWORD PTR [r14+0x38],rsi
  4262bb:	mov    rbp,r12
  4262be:	cmp    DWORD PTR [r14+0x20],0x0
  4262c3:	jne    4261af <flatcc_json_parser_build_string@@Base+0x8f>
  4262c9:	jmp    426194 <flatcc_json_parser_build_string@@Base+0x74>
  4262ce:	cmp    DWORD PTR [r14+0x20],0x0
  4262d3:	jne    42630a <flatcc_json_parser_build_string@@Base+0x1ea>
  4262d5:	mov    DWORD PTR [r14+0x20],0x11
  4262dd:	mov    eax,DWORD PTR [r14+0x8]
  4262e1:	mov    ecx,ebx
  4262e3:	sub    ecx,eax
  4262e5:	inc    ecx
  4262e7:	mov    DWORD PTR [r14+0x1c],ecx
  4262eb:	mov    QWORD PTR [r14+0x38],rbx
  4262ef:	jmp    42630a <flatcc_json_parser_build_string@@Base+0x1ea>
  4262f1:	cmp    r12,rbx
  4262f4:	je     42630a <flatcc_json_parser_build_string@@Base+0x1ea>
  4262f6:	cmp    al,0x22
  4262f8:	jne    42630d <flatcc_json_parser_build_string@@Base+0x1ed>
  4262fa:	mov    rdi,QWORD PTR [r14]
  4262fd:	mov    rdx,rbx
  426300:	sub    rdx,rsi
  426303:	call   4217e0 <flatcc_builder_create_string@@Base>
  426308:	jmp    42636e <flatcc_json_parser_build_string@@Base+0x24e>
  42630a:	mov    rbx,r12
  42630d:	mov    rbp,rsi
  426310:	jmp    4261b2 <flatcc_json_parser_build_string@@Base+0x92>
  426315:	cmp    DWORD PTR [r14+0x20],0x0
  42631a:	mov    rbp,r12
  42631d:	jne    426363 <flatcc_json_parser_build_string@@Base+0x243>
  42631f:	mov    DWORD PTR [r14+0x20],0x14
  426327:	mov    eax,DWORD PTR [r14+0x8]
  42632b:	mov    ecx,r12d
  42632e:	sub    ecx,eax
  426330:	inc    ecx
  426332:	mov    DWORD PTR [r14+0x1c],ecx
  426336:	mov    QWORD PTR [r14+0x38],r12
  42633a:	jmp    426360 <flatcc_json_parser_build_string@@Base+0x240>
  42633c:	cmp    DWORD PTR [r14+0x20],0x0
  426341:	mov    rbp,r12
  426344:	jne    426363 <flatcc_json_parser_build_string@@Base+0x243>
  426346:	mov    DWORD PTR [r14+0x20],0x11
  42634e:	mov    eax,DWORD PTR [r14+0x8]
  426352:	mov    ecx,ebx
  426354:	sub    ecx,eax
  426356:	inc    ecx
  426358:	mov    DWORD PTR [r14+0x1c],ecx
  42635c:	mov    QWORD PTR [r14+0x38],rbx
  426360:	mov    rbp,r12
  426363:	mov    rdi,QWORD PTR [r14]
  426366:	call   421980 <flatcc_builder_end_string@@Base>
  42636b:	mov    rbx,rbp
  42636e:	mov    DWORD PTR [r15],eax
  426371:	cmp    rbx,r12
  426374:	je     426383 <flatcc_json_parser_build_string@@Base+0x263>
  426376:	cmp    BYTE PTR [rbx],0x22
  426379:	jne    426383 <flatcc_json_parser_build_string@@Base+0x263>
  42637b:	inc    rbx
  42637e:	jmp    4261c5 <flatcc_json_parser_build_string@@Base+0xa5>
  426383:	cmp    DWORD PTR [r14+0x20],0x0
  426388:	jne    4261c8 <flatcc_json_parser_build_string@@Base+0xa8>
  42638e:	mov    DWORD PTR [r14+0x20],0x14
  426396:	mov    eax,DWORD PTR [r14+0x8]
  42639a:	mov    ecx,ebx
  42639c:	sub    ecx,eax
  42639e:	inc    ecx
  4263a0:	mov    DWORD PTR [r14+0x1c],ecx
  4263a4:	mov    QWORD PTR [r14+0x38],rbx
  4263a8:	jmp    4261c8 <flatcc_json_parser_build_string@@Base+0xa8>
  4263ad:	mov    rbp,rbx
  4263b0:	jmp    426363 <flatcc_json_parser_build_string@@Base+0x243>
  4263b2:	mov    rbx,r13
  4263b5:	jmp    4261be <flatcc_json_parser_build_string@@Base+0x9e>
  4263ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004263c0 <flatcc_json_parser_prepare_unions@@Base>:
  4263c0:	push   r15
  4263c2:	push   r14
  4263c4:	push   r13
  4263c6:	push   r12
  4263c8:	push   rbx
  4263c9:	mov    r13,r8
  4263cc:	mov    r12,rcx
  4263cf:	mov    r15,rdx
  4263d2:	mov    r14,rsi
  4263d5:	mov    rbx,rdi
  4263d8:	mov    rdi,QWORD PTR [rdi]
  4263db:	lea    rax,[rcx+rcx*4]
  4263df:	lea    rsi,[rax*8+0x10]
  4263e7:	call   41dc50 <flatcc_builder_enter_user_frame@@Base>
  4263ec:	mov    QWORD PTR [r13+0x0],rax
  4263f0:	test   rax,rax
  4263f3:	je     426408 <flatcc_json_parser_prepare_unions@@Base+0x48>
  4263f5:	mov    rdi,QWORD PTR [rbx]
  4263f8:	mov    rsi,rax
  4263fb:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  426400:	mov    QWORD PTR [rax],r12
  426403:	mov    r15,r14
  426406:	jmp    426426 <flatcc_json_parser_prepare_unions@@Base+0x66>
  426408:	cmp    DWORD PTR [rbx+0x20],0x0
  42640c:	jne    426426 <flatcc_json_parser_prepare_unions@@Base+0x66>
  42640e:	mov    DWORD PTR [rbx+0x20],0x21
  426415:	mov    eax,DWORD PTR [rbx+0x8]
  426418:	mov    ecx,r14d
  42641b:	sub    ecx,eax
  42641d:	inc    ecx
  42641f:	mov    DWORD PTR [rbx+0x1c],ecx
  426422:	mov    QWORD PTR [rbx+0x38],r14
  426426:	mov    rax,r15
  426429:	pop    rbx
  42642a:	pop    r12
  42642c:	pop    r13
  42642e:	pop    r14
  426430:	pop    r15
  426432:	ret    
  426433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42643d:	nop    DWORD PTR [rax]

0000000000426440 <flatcc_json_parser_finalize_unions@@Base>:
  426440:	push   r15
  426442:	push   r14
  426444:	push   r12
  426446:	push   rbx
  426447:	push   rax
  426448:	mov    r15,rcx
  42644b:	mov    r14,rdx
  42644e:	mov    r12,rsi
  426451:	mov    rbx,rdi
  426454:	mov    rdi,QWORD PTR [rdi]
  426457:	mov    rsi,rcx
  42645a:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  42645f:	cmp    QWORD PTR [rax+0x8],0x0
  426464:	je     426486 <flatcc_json_parser_finalize_unions@@Base+0x46>
  426466:	cmp    DWORD PTR [rbx+0x20],0x0
  42646a:	jne    426489 <flatcc_json_parser_finalize_unions@@Base+0x49>
  42646c:	mov    DWORD PTR [rbx+0x20],0x1b
  426473:	mov    eax,DWORD PTR [rbx+0x8]
  426476:	mov    ecx,r12d
  426479:	sub    ecx,eax
  42647b:	inc    ecx
  42647d:	mov    DWORD PTR [rbx+0x1c],ecx
  426480:	mov    QWORD PTR [rbx+0x38],r12
  426484:	jmp    426489 <flatcc_json_parser_finalize_unions@@Base+0x49>
  426486:	mov    r14,r12
  426489:	mov    rdi,QWORD PTR [rbx]
  42648c:	mov    rsi,r15
  42648f:	call   41dd50 <flatcc_builder_exit_user_frame_at@@Base>
  426494:	mov    rax,r14
  426497:	add    rsp,0x8
  42649b:	pop    rbx
  42649c:	pop    r12
  42649e:	pop    r14
  4264a0:	pop    r15
  4264a2:	ret    
  4264a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4264ad:	nop    DWORD PTR [rax]

00000000004264b0 <flatcc_json_parser_union@@Base>:
  4264b0:	push   rbp
  4264b1:	push   r15
  4264b3:	push   r14
  4264b5:	push   r12
  4264b7:	push   rbx
  4264b8:	sub    rsp,0x10
  4264bc:	mov    r12d,r8d
  4264bf:	mov    rbp,rcx
  4264c2:	mov    r14,rdx
  4264c5:	mov    r15,rsi
  4264c8:	mov    rbx,rdi
  4264cb:	mov    rdi,QWORD PTR [rdi]
  4264ce:	mov    rsi,r9
  4264d1:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  4264d6:	lea    rcx,[rbp*4+0x0]
  4264de:	add    rcx,rbp
  4264e1:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  4264e7:	je     426510 <flatcc_json_parser_union@@Base+0x60>
  4264e9:	cmp    DWORD PTR [rbx+0x20],0x0
  4264ed:	jne    42659d <flatcc_json_parser_union@@Base+0xed>
  4264f3:	mov    DWORD PTR [rbx+0x20],0x1c
  4264fa:	mov    eax,DWORD PTR [rbx+0x8]
  4264fd:	mov    ecx,r15d
  426500:	sub    ecx,eax
  426502:	inc    ecx
  426504:	mov    DWORD PTR [rbx+0x1c],ecx
  426507:	mov    QWORD PTR [rbx+0x38],r15
  42650b:	jmp    42659d <flatcc_json_parser_union@@Base+0xed>
  426510:	lea    rdx,[rax+0x10]
  426514:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  426519:	je     426565 <flatcc_json_parser_union@@Base+0xb5>
  42651b:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  42651f:	mov    BYTE PTR [rsp+0x8],cl
  426523:	test   cl,cl
  426525:	je     426597 <flatcc_json_parser_union@@Base+0xe7>
  426527:	mov    rbp,QWORD PTR [rsp+0x40]
  42652c:	dec    QWORD PTR [rax+0x8]
  426530:	lea    r8,[rsp+0xc]
  426535:	movzx  ecx,cl
  426538:	mov    rdi,rbx
  42653b:	mov    rsi,r15
  42653e:	mov    rdx,r14
  426541:	call   rbp
  426543:	cmp    rax,r14
  426546:	je     42659d <flatcc_json_parser_union@@Base+0xed>
  426548:	mov    r15,rax
  42654b:	mov    rdi,QWORD PTR [rbx]
  42654e:	movzx  esi,r12w
  426552:	mov    rdx,QWORD PTR [rsp+0x8]
  426557:	call   4207f0 <flatcc_builder_table_add_union@@Base>
  42655c:	test   eax,eax
  42655e:	jne    4264e9 <flatcc_json_parser_union@@Base+0x39>
  426560:	mov    r14,r15
  426563:	jmp    42659d <flatcc_json_parser_union@@Base+0xed>
  426565:	inc    QWORD PTR [rax+0x8]
  426569:	lea    rax,[rax+rcx*8]
  42656d:	add    rax,0x10
  426571:	mov    esi,DWORD PTR [rbx+0x18]
  426574:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  426578:	mov    rsi,QWORD PTR [rbx+0x8]
  42657c:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  426581:	mov    QWORD PTR [rax],r15
  426584:	mov    rdi,rbx
  426587:	mov    rsi,r15
  42658a:	mov    rdx,r14
  42658d:	call   424810 <flatcc_json_parser_generic_json@@Base>
  426592:	mov    r14,rax
  426595:	jmp    42659d <flatcc_json_parser_union@@Base+0xed>
  426597:	cmp    DWORD PTR [rbx+0x20],0x0
  42659b:	je     4265ad <flatcc_json_parser_union@@Base+0xfd>
  42659d:	mov    rax,r14
  4265a0:	add    rsp,0x10
  4265a4:	pop    rbx
  4265a5:	pop    r12
  4265a7:	pop    r14
  4265a9:	pop    r15
  4265ab:	pop    rbp
  4265ac:	ret    
  4265ad:	mov    DWORD PTR [rbx+0x20],0x19
  4265b4:	jmp    4264fa <flatcc_json_parser_union@@Base+0x4a>
  4265b9:	nop    DWORD PTR [rax+0x0]

00000000004265c0 <flatcc_json_parser_union_type@@Base>:
  4265c0:	push   rbp
  4265c1:	push   r15
  4265c3:	push   r14
  4265c5:	push   r13
  4265c7:	push   r12
  4265c9:	push   rbx
  4265ca:	sub    rsp,0x18
  4265ce:	mov    ebx,r8d
  4265d1:	mov    rbp,rcx
  4265d4:	mov    r14,rdx
  4265d7:	mov    r12,rsi
  4265da:	mov    r15,rdi
  4265dd:	mov    rdi,QWORD PTR [rdi]
  4265e0:	mov    rsi,r9
  4265e3:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  4265e8:	lea    r13,[rbp*4+0x0]
  4265f0:	add    r13,rbp
  4265f3:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  4265f9:	je     426626 <flatcc_json_parser_union_type@@Base+0x66>
  4265fb:	cmp    DWORD PTR [r15+0x20],0x0
  426600:	jne    42684f <flatcc_json_parser_union_type@@Base+0x28f>
  426606:	mov    DWORD PTR [r15+0x20],0x1c
  42660e:	mov    eax,DWORD PTR [r15+0x8]
  426612:	mov    ecx,r12d
  426615:	sub    ecx,eax
  426617:	inc    ecx
  426619:	mov    DWORD PTR [r15+0x1c],ecx
  42661d:	mov    QWORD PTR [r15+0x38],r12
  426621:	jmp    42684f <flatcc_json_parser_union_type@@Base+0x28f>
  426626:	mov    r11,rax
  426629:	mov    DWORD PTR [rsp+0xc],ebx
  42662d:	lea    r10,[rax+0x10]
  426631:	lea    rax,[rax+r13*8]
  426635:	add    rax,0x24
  426639:	mov    BYTE PTR [rax],0x1
  42663c:	lea    r8,[r10+r13*8]
  426640:	add    r8,0x15
  426644:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  42664a:	cmp    r12,r14
  42664d:	je     42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  426653:	mov    r9b,BYTE PTR [r12]
  426657:	xor    eax,eax
  426659:	cmp    r9b,0x2d
  42665d:	sete   al
  426660:	add    rax,r12
  426663:	xor    edx,edx
  426665:	cmp    rax,r14
  426668:	je     4266aa <flatcc_json_parser_union_type@@Base+0xea>
  42666a:	nop    WORD PTR [rax+rax*1+0x0]
  426670:	movsx  rdi,BYTE PTR [rax]
  426674:	lea    ecx,[rdi-0x30]
  426677:	cmp    cl,0x9
  42667a:	ja     4266ea <flatcc_json_parser_union_type@@Base+0x12a>
  42667c:	lea    rcx,[rdx+rdx*4]
  426680:	lea    rdi,[rdi+rcx*2]
  426684:	add    rdi,0xffffffffffffffd0
  426688:	cmp    rdx,rdi
  42668b:	ja     4266f6 <flatcc_json_parser_union_type@@Base+0x136>
  42668d:	inc    rax
  426690:	mov    rdx,rdi
  426693:	cmp    r14,rax
  426696:	jne    426670 <flatcc_json_parser_union_type@@Base+0xb0>
  426698:	xor    ecx,ecx
  42669a:	mov    rax,r14
  42669d:	mov    rdx,rdi
  4266a0:	cmp    rax,r12
  4266a3:	jne    4266b8 <flatcc_json_parser_union_type@@Base+0xf8>
  4266a5:	jmp    42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  4266aa:	mov    rax,r14
  4266ad:	xor    ecx,ecx
  4266af:	cmp    rax,r12
  4266b2:	je     42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  4266b8:	test   cl,cl
  4266ba:	je     42671c <flatcc_json_parser_union_type@@Base+0x15c>
  4266bc:	mov    cl,BYTE PTR [rax]
  4266be:	add    cl,0xd2
  4266c1:	cmp    cl,0x37
  4266c4:	ja     42671c <flatcc_json_parser_union_type@@Base+0x15c>
  4266c6:	movzx  ecx,cl
  4266c9:	movabs rdi,0x80000000800001
  4266d3:	bt     rdi,rcx
  4266d7:	jae    42671c <flatcc_json_parser_union_type@@Base+0x15c>
  4266d9:	cmp    DWORD PTR [r15+0x20],0x0
  4266de:	jne    426717 <flatcc_json_parser_union_type@@Base+0x157>
  4266e0:	mov    DWORD PTR [r15+0x20],0xc
  4266e8:	jmp    426705 <flatcc_json_parser_union_type@@Base+0x145>
  4266ea:	mov    cl,0x1
  4266ec:	cmp    rax,r12
  4266ef:	jne    4266b8 <flatcc_json_parser_union_type@@Base+0xf8>
  4266f1:	jmp    42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  4266f6:	cmp    DWORD PTR [r15+0x20],0x0
  4266fb:	jne    426717 <flatcc_json_parser_union_type@@Base+0x157>
  4266fd:	mov    DWORD PTR [r15+0x20],0x8
  426705:	mov    ecx,DWORD PTR [r15+0x8]
  426709:	mov    edx,eax
  42670b:	sub    edx,ecx
  42670d:	inc    edx
  42670f:	mov    DWORD PTR [r15+0x1c],edx
  426713:	mov    QWORD PTR [r15+0x38],rax
  426717:	xor    edx,edx
  426719:	mov    rax,r14
  42671c:	cmp    rax,r12
  42671f:	je     42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  426721:	cmp    r9b,0x2d
  426725:	jne    42673b <flatcc_json_parser_union_type@@Base+0x17b>
  426727:	cmp    DWORD PTR [r15+0x20],0x0
  42672c:	mov    rbp,r14
  42672f:	jne    426778 <flatcc_json_parser_union_type@@Base+0x1b8>
  426731:	mov    DWORD PTR [r15+0x20],0x8
  426739:	jmp    426756 <flatcc_json_parser_union_type@@Base+0x196>
  42673b:	cmp    rdx,0x100
  426742:	jb     426772 <flatcc_json_parser_union_type@@Base+0x1b2>
  426744:	cmp    DWORD PTR [r15+0x20],0x0
  426749:	mov    rbp,r14
  42674c:	jne    426778 <flatcc_json_parser_union_type@@Base+0x1b8>
  42674e:	mov    DWORD PTR [r15+0x20],0x7
  426756:	mov    ecx,DWORD PTR [r15+0x8]
  42675a:	mov    edx,eax
  42675c:	sub    edx,ecx
  42675e:	inc    edx
  426760:	mov    DWORD PTR [r15+0x1c],edx
  426764:	mov    QWORD PTR [r15+0x38],rax
  426768:	mov    rbp,r14
  42676b:	cmp    rbp,r12
  42676e:	jne    4267a5 <flatcc_json_parser_union_type@@Base+0x1e5>
  426770:	jmp    42677d <flatcc_json_parser_union_type@@Base+0x1bd>
  426772:	mov    BYTE PTR [r8],dl
  426775:	mov    rbp,rax
  426778:	cmp    rbp,r12
  42677b:	jne    4267a5 <flatcc_json_parser_union_type@@Base+0x1e5>
  42677d:	mov    rcx,QWORD PTR [rsp+0x50]
  426782:	mov    rdi,r15
  426785:	mov    rsi,r12
  426788:	mov    rdx,r14
  42678b:	mov    rbx,r8
  42678e:	mov    rbp,r10
  426791:	mov    r12,r11
  426794:	call   426880 <flatcc_json_parser_union_type@@Base+0x2c0>
  426799:	mov    r11,r12
  42679c:	mov    r10,rbp
  42679f:	mov    r8,rbx
  4267a2:	mov    rbp,rax
  4267a5:	mov    rsi,QWORD PTR [r10+r13*8]
  4267a9:	test   rsi,rsi
  4267ac:	je     426839 <flatcc_json_parser_union_type@@Base+0x279>
  4267b2:	mov    rax,QWORD PTR [r11+0x8]
  4267b6:	test   rax,rax
  4267b9:	je     426861 <flatcc_json_parser_union_type@@Base+0x2a1>
  4267bf:	mov    r9,QWORD PTR [rsp+0x58]
  4267c4:	dec    rax
  4267c7:	mov    QWORD PTR [r11+0x8],rax
  4267cb:	mov    r12d,DWORD PTR [r15+0x18]
  4267cf:	mov    rbx,QWORD PTR [r15+0x8]
  4267d3:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  4267d8:	mov    DWORD PTR [r15+0x18],eax
  4267dc:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  4267e1:	mov    QWORD PTR [r15+0x8],rax
  4267e5:	movzx  ecx,BYTE PTR [r8]
  4267e9:	mov    BYTE PTR [rsp+0x10],cl
  4267ed:	lea    r8,[rsp+0x14]
  4267f2:	mov    rdi,r15
  4267f5:	mov    rdx,r14
  4267f8:	call   r9
  4267fb:	cmp    rax,r14
  4267fe:	je     42684f <flatcc_json_parser_union_type@@Base+0x28f>
  426800:	mov    rdi,QWORD PTR [r15]
  426803:	movzx  esi,WORD PTR [rsp+0xc]
  426808:	mov    rdx,QWORD PTR [rsp+0x10]
  42680d:	call   4207f0 <flatcc_builder_table_add_union@@Base>
  426812:	test   eax,eax
  426814:	je     426844 <flatcc_json_parser_union_type@@Base+0x284>
  426816:	cmp    DWORD PTR [r15+0x20],0x0
  42681b:	jne    42684f <flatcc_json_parser_union_type@@Base+0x28f>
  42681d:	mov    DWORD PTR [r15+0x20],0x1c
  426825:	mov    eax,DWORD PTR [r15+0x8]
  426829:	mov    ecx,ebp
  42682b:	sub    ecx,eax
  42682d:	inc    ecx
  42682f:	mov    DWORD PTR [r15+0x1c],ecx
  426833:	mov    QWORD PTR [r15+0x38],rbp
  426837:	jmp    42684f <flatcc_json_parser_union_type@@Base+0x28f>
  426839:	cmp    BYTE PTR [r8],0x1
  42683d:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  426842:	jmp    42684c <flatcc_json_parser_union_type@@Base+0x28c>
  426844:	mov    DWORD PTR [r15+0x18],r12d
  426848:	mov    QWORD PTR [r15+0x8],rbx
  42684c:	mov    r14,rbp
  42684f:	mov    rax,r14
  426852:	add    rsp,0x18
  426856:	pop    rbx
  426857:	pop    r12
  426859:	pop    r13
  42685b:	pop    r14
  42685d:	pop    r15
  42685f:	pop    rbp
  426860:	ret    
  426861:	lea    rdi,[rip+0x145ae]        # 43ae16 <flatcc_builder_padding_base@@Base+0x2766>
  426868:	lea    rsi,[rip+0x145b6]        # 43ae25 <flatcc_builder_padding_base@@Base+0x2775>
  42686f:	lea    rcx,[rip+0x14613]        # 43ae89 <flatcc_builder_padding_base@@Base+0x27d9>
  426876:	mov    edx,0x3c5
  42687b:	call   406070 <__assert_fail@plt>
  426880:	push   rbp
  426881:	push   r15
  426883:	push   r14
  426885:	push   r13
  426887:	push   r12
  426889:	push   rbx
  42688a:	sub    rsp,0x28
  42688e:	mov    rbx,r8
  426891:	mov    rbp,rcx
  426894:	mov    r15,rdx
  426897:	mov    r14,rdi
  42689a:	mov    BYTE PTR [r8],0x0
  42689e:	cmp    rsi,rdx
  4268a1:	je     4268f2 <flatcc_json_parser_union_type@@Base+0x332>
  4268a3:	mov    al,BYTE PTR [rsi]
  4268a5:	cmp    al,0x2e
  4268a7:	je     4268ba <flatcc_json_parser_union_type@@Base+0x2fa>
  4268a9:	cmp    al,0x22
  4268ab:	jne    4268ea <flatcc_json_parser_union_type@@Base+0x32a>
  4268ad:	inc    rsi
  4268b0:	mov    DWORD PTR [r14+0x14],0x0
  4268b8:	jmp    4268f2 <flatcc_json_parser_union_type@@Base+0x332>
  4268ba:	cmp    DWORD PTR [r14+0x20],0x0
  4268bf:	mov    r13,r15
  4268c2:	jne    4268f5 <flatcc_json_parser_union_type@@Base+0x335>
  4268c4:	mov    DWORD PTR [r14+0x20],0x5
  4268cc:	mov    eax,DWORD PTR [r14+0x8]
  4268d0:	mov    ecx,esi
  4268d2:	sub    ecx,eax
  4268d4:	inc    ecx
  4268d6:	mov    DWORD PTR [r14+0x1c],ecx
  4268da:	mov    QWORD PTR [r14+0x38],rsi
  4268de:	mov    r13,r15
  4268e1:	cmp    DWORD PTR [r14+0x14],0x0
  4268e6:	jne    426936 <flatcc_json_parser_union_type@@Base+0x376>
  4268e8:	jmp    4268fc <flatcc_json_parser_union_type@@Base+0x33c>
  4268ea:	mov    DWORD PTR [r14+0x14],0x1
  4268f2:	mov    r13,rsi
  4268f5:	cmp    DWORD PTR [r14+0x14],0x0
  4268fa:	jne    426936 <flatcc_json_parser_union_type@@Base+0x376>
  4268fc:	mov    rax,r15
  4268ff:	sub    rax,r13
  426902:	cmp    rax,0x2
  426906:	jl     426925 <flatcc_json_parser_union_type@@Base+0x365>
  426908:	cmp    BYTE PTR [r13+0x0],0x20
  42690d:	jg     426936 <flatcc_json_parser_union_type@@Base+0x376>
  42690f:	jne    426925 <flatcc_json_parser_union_type@@Base+0x365>
  426911:	cmp    BYTE PTR [r13+0x1],0x20
  426916:	jle    426925 <flatcc_json_parser_union_type@@Base+0x365>
  426918:	inc    r13
  42691b:	cmp    r13,r15
  42691e:	jne    42693f <flatcc_json_parser_union_type@@Base+0x37f>
  426920:	jmp    4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  426925:	mov    rdi,r14
  426928:	mov    rsi,r13
  42692b:	mov    rdx,r15
  42692e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426933:	mov    r13,rax
  426936:	cmp    r13,r15
  426939:	je     4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  42693f:	lea    rcx,[rbp+0x8]
  426943:	mov    r12,rsp
  426946:	mov    QWORD PTR [rsp+0x18],rbx
  42694b:	mov    QWORD PTR [rsp+0x10],rbp
  426950:	mov    QWORD PTR [rsp+0x8],rcx
  426955:	mov    rbx,QWORD PTR [rbp+0x0]
  426959:	mov    rbp,rcx
  42695c:	nop    DWORD PTR [rax+0x0]
  426960:	mov    rdi,r14
  426963:	mov    rsi,r13
  426966:	mov    rdx,r15
  426969:	lea    rcx,[rsp+0x4]
  42696e:	lea    r8,[rsp+0x20]
  426973:	mov    r9,r12
  426976:	call   rbx
  426978:	cmp    rax,r15
  42697b:	je     4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  42697d:	cmp    rax,r13
  426980:	jne    4269a0 <flatcc_json_parser_union_type@@Base+0x3e0>
  426982:	mov    rbx,QWORD PTR [rbp+0x0]
  426986:	add    rbp,0x8
  42698a:	test   rbx,rbx
  42698d:	jne    426960 <flatcc_json_parser_union_type@@Base+0x3a0>
  42698f:	jmp    4269d5 <flatcc_json_parser_union_type@@Base+0x415>
  426991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42699b:	nop    DWORD PTR [rax+rax*1+0x0]
  4269a0:	cmp    DWORD PTR [rsp+0x4],0x0
  4269a5:	jne    426a09 <flatcc_json_parser_union_type@@Base+0x449>
  4269a7:	mov    rcx,QWORD PTR [rsp+0x20]
  4269ac:	cmp    rcx,0x100
  4269b3:	jae    426a1a <flatcc_json_parser_union_type@@Base+0x45a>
  4269b5:	mov    rbx,QWORD PTR [rsp+0x18]
  4269ba:	add    BYTE PTR [rbx],cl
  4269bc:	cmp    DWORD PTR [rsp],0x0
  4269c0:	mov    r13,rax
  4269c3:	mov    rbp,QWORD PTR [rsp+0x10]
  4269c8:	mov    rcx,QWORD PTR [rsp+0x8]
  4269cd:	jne    426955 <flatcc_json_parser_union_type@@Base+0x395>
  4269d3:	jmp    4269fa <flatcc_json_parser_union_type@@Base+0x43a>
  4269d5:	cmp    DWORD PTR [r14+0x20],0x0
  4269da:	jne    4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  4269dc:	mov    DWORD PTR [r14+0x20],0x17
  4269e4:	mov    eax,DWORD PTR [r14+0x8]
  4269e8:	mov    ecx,r13d
  4269eb:	sub    ecx,eax
  4269ed:	inc    ecx
  4269ef:	mov    DWORD PTR [r14+0x1c],ecx
  4269f3:	mov    QWORD PTR [r14+0x38],r13
  4269f7:	mov    rax,r15
  4269fa:	add    rsp,0x28
  4269fe:	pop    rbx
  4269ff:	pop    r12
  426a01:	pop    r13
  426a03:	pop    r14
  426a05:	pop    r15
  426a07:	pop    rbp
  426a08:	ret    
  426a09:	cmp    DWORD PTR [r14+0x20],0x0
  426a0e:	jne    4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  426a10:	mov    DWORD PTR [r14+0x20],0x8
  426a18:	jmp    426a29 <flatcc_json_parser_union_type@@Base+0x469>
  426a1a:	cmp    DWORD PTR [r14+0x20],0x0
  426a1f:	jne    4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  426a21:	mov    DWORD PTR [r14+0x20],0x7
  426a29:	mov    ecx,DWORD PTR [r14+0x8]
  426a2d:	mov    edx,eax
  426a2f:	sub    edx,ecx
  426a31:	inc    edx
  426a33:	mov    DWORD PTR [r14+0x1c],edx
  426a37:	mov    QWORD PTR [r14+0x38],rax
  426a3b:	jmp    4269f7 <flatcc_json_parser_union_type@@Base+0x437>
  426a3d:	nop    DWORD PTR [rax]

0000000000426a40 <flatcc_json_parser_union_vector@@Base>:
  426a40:	push   rbp
  426a41:	push   r15
  426a43:	push   r14
  426a45:	push   r12
  426a47:	push   rbx
  426a48:	mov    r12d,r8d
  426a4b:	mov    rbp,rcx
  426a4e:	mov    r14,rdx
  426a51:	mov    r15,rsi
  426a54:	mov    rbx,rdi
  426a57:	mov    rdi,QWORD PTR [rdi]
  426a5a:	mov    rsi,r9
  426a5d:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  426a62:	lea    rdx,[rbp*4+0x0]
  426a6a:	add    rdx,rbp
  426a6d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  426a73:	je     426a9f <flatcc_json_parser_union_vector@@Base+0x5f>
  426a75:	cmp    DWORD PTR [rbx+0x20],0x0
  426a79:	jne    426a93 <flatcc_json_parser_union_vector@@Base+0x53>
  426a7b:	mov    DWORD PTR [rbx+0x20],0x1c
  426a82:	mov    eax,DWORD PTR [rbx+0x8]
  426a85:	mov    ecx,r15d
  426a88:	sub    ecx,eax
  426a8a:	inc    ecx
  426a8c:	mov    DWORD PTR [rbx+0x1c],ecx
  426a8f:	mov    QWORD PTR [rbx+0x38],r15
  426a93:	mov    rax,r14
  426a96:	pop    rbx
  426a97:	pop    r12
  426a99:	pop    r14
  426a9b:	pop    r15
  426a9d:	pop    rbp
  426a9e:	ret    
  426a9f:	lea    rsi,[rax+0x10]
  426aa3:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  426aa8:	mov    rcx,QWORD PTR [rax+0x8]
  426aac:	je     426ad6 <flatcc_json_parser_union_vector@@Base+0x96>
  426aae:	dec    rcx
  426ab1:	mov    QWORD PTR [rax+0x8],rcx
  426ab5:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  426aba:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  426abf:	movzx  r9d,r12w
  426ac3:	mov    rdi,rbx
  426ac6:	mov    rsi,r15
  426ac9:	mov    rdx,r14
  426acc:	pop    rbx
  426acd:	pop    r12
  426acf:	pop    r14
  426ad1:	pop    r15
  426ad3:	pop    rbp
  426ad4:	jmp    426b10 <flatcc_json_parser_union_vector@@Base+0xd0>
  426ad6:	lea    rdi,[rax+rdx*8]
  426ada:	add    rdi,0x10
  426ade:	inc    rcx
  426ae1:	mov    QWORD PTR [rax+0x8],rcx
  426ae5:	mov    eax,DWORD PTR [rbx+0x18]
  426ae8:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  426aec:	mov    rax,QWORD PTR [rbx+0x8]
  426af0:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  426af5:	mov    QWORD PTR [rdi],r15
  426af8:	mov    rdi,rbx
  426afb:	mov    rsi,r15
  426afe:	mov    rdx,r14
  426b01:	pop    rbx
  426b02:	pop    r12
  426b04:	pop    r14
  426b06:	pop    r15
  426b08:	pop    rbp
  426b09:	jmp    424810 <flatcc_json_parser_generic_json@@Base>
  426b0e:	xchg   ax,ax
  426b10:	push   rbp
  426b11:	push   r15
  426b13:	push   r14
  426b15:	push   r13
  426b17:	push   r12
  426b19:	push   rbx
  426b1a:	sub    rsp,0x18
  426b1e:	mov    r14d,r9d
  426b21:	mov    r13d,r8d
  426b24:	mov    r12,rcx
  426b27:	mov    r15,rdx
  426b2a:	mov    rbp,rsi
  426b2d:	mov    rbx,rdi
  426b30:	mov    DWORD PTR [rsp+0xc],0x0
  426b38:	mov    rdi,QWORD PTR [rdi]
  426b3b:	call   41f2d0 <flatcc_builder_start_offset_vector@@Base>
  426b40:	test   eax,eax
  426b42:	je     426b5a <flatcc_json_parser_union_vector@@Base+0x11a>
  426b44:	cmp    DWORD PTR [rbx+0x20],0x0
  426b48:	jne    426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426b4e:	mov    DWORD PTR [rbx+0x20],0x21
  426b55:	jmp    426d74 <flatcc_json_parser_union_vector@@Base+0x334>
  426b5a:	cmp    rbp,r15
  426b5d:	je     426b90 <flatcc_json_parser_union_vector@@Base+0x150>
  426b5f:	cmp    BYTE PTR [rbp+0x0],0x5b
  426b63:	jne    426b90 <flatcc_json_parser_union_vector@@Base+0x150>
  426b65:	lea    rax,[rbp+0x1]
  426b69:	mov    rcx,r15
  426b6c:	sub    rcx,rax
  426b6f:	cmp    rcx,0x2
  426b73:	mov    DWORD PTR [rsp+0x8],r14d
  426b78:	jl     426bbc <flatcc_json_parser_union_vector@@Base+0x17c>
  426b7a:	cmp    BYTE PTR [rax],0x20
  426b7d:	jg     426bca <flatcc_json_parser_union_vector@@Base+0x18a>
  426b7f:	jne    426bbc <flatcc_json_parser_union_vector@@Base+0x17c>
  426b81:	cmp    BYTE PTR [rbp+0x2],0x20
  426b85:	jle    426bbc <flatcc_json_parser_union_vector@@Base+0x17c>
  426b87:	add    rbp,0x2
  426b8b:	mov    rax,rbp
  426b8e:	jmp    426bca <flatcc_json_parser_union_vector@@Base+0x18a>
  426b90:	cmp    DWORD PTR [rbx+0x20],0x0
  426b94:	mov    rsi,r15
  426b97:	jne    426d5b <flatcc_json_parser_union_vector@@Base+0x31b>
  426b9d:	mov    DWORD PTR [rbx+0x20],0x16
  426ba4:	mov    eax,DWORD PTR [rbx+0x8]
  426ba7:	mov    ecx,ebp
  426ba9:	sub    ecx,eax
  426bab:	inc    ecx
  426bad:	mov    DWORD PTR [rbx+0x1c],ecx
  426bb0:	mov    QWORD PTR [rbx+0x38],rbp
  426bb4:	mov    rsi,r15
  426bb7:	jmp    426d5b <flatcc_json_parser_union_vector@@Base+0x31b>
  426bbc:	mov    rdi,rbx
  426bbf:	mov    rsi,rax
  426bc2:	mov    rdx,r15
  426bc5:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426bca:	mov    r14,r15
  426bcd:	cmp    rax,r15
  426bd0:	je     426c15 <flatcc_json_parser_union_vector@@Base+0x1d5>
  426bd2:	cmp    BYTE PTR [rax],0x5d
  426bd5:	jne    426c12 <flatcc_json_parser_union_vector@@Base+0x1d2>
  426bd7:	lea    rsi,[rax+0x1]
  426bdb:	mov    rcx,r15
  426bde:	sub    rcx,rsi
  426be1:	cmp    rcx,0x2
  426be5:	mov    r14d,DWORD PTR [rsp+0x8]
  426bea:	jl     426d4d <flatcc_json_parser_union_vector@@Base+0x30d>
  426bf0:	cmp    BYTE PTR [rsi],0x20
  426bf3:	jg     426d5b <flatcc_json_parser_union_vector@@Base+0x31b>
  426bf9:	jne    426d4d <flatcc_json_parser_union_vector@@Base+0x30d>
  426bff:	cmp    BYTE PTR [rax+0x2],0x20
  426c03:	jle    426d4d <flatcc_json_parser_union_vector@@Base+0x30d>
  426c09:	add    rax,0x2
  426c0d:	jmp    426d58 <flatcc_json_parser_union_vector@@Base+0x318>
  426c12:	mov    r14,rax
  426c15:	test   r13d,r13d
  426c18:	je     426d2d <flatcc_json_parser_union_vector@@Base+0x2ed>
  426c1e:	mov    eax,r13d
  426c21:	mov    QWORD PTR [rsp+0x10],rax
  426c26:	xor    r13d,r13d
  426c29:	nop    DWORD PTR [rax+0x0]
  426c30:	mov    rdi,QWORD PTR [rbx]
  426c33:	mov    rsi,r12
  426c36:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  426c3b:	movzx  ecx,BYTE PTR [rax+r13*1]
  426c40:	mov    rdi,rbx
  426c43:	mov    rsi,r14
  426c46:	mov    rdx,r15
  426c49:	lea    r8,[rsp+0xc]
  426c4e:	call   QWORD PTR [rsp+0x50]
  426c52:	cmp    rax,r15
  426c55:	je     426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426c5b:	mov    rbp,rax
  426c5e:	mov    rdi,QWORD PTR [rbx]
  426c61:	mov    esi,0x1
  426c66:	call   41ebe0 <flatcc_builder_extend_offset_vector@@Base>
  426c6b:	test   rax,rax
  426c6e:	je     426b44 <flatcc_json_parser_union_vector@@Base+0x104>
  426c74:	mov    ecx,DWORD PTR [rsp+0xc]
  426c78:	mov    DWORD PTR [rax],ecx
  426c7a:	mov    rax,r15
  426c7d:	sub    rax,rbp
  426c80:	cmp    rax,0x2
  426c84:	mov    r14d,DWORD PTR [rsp+0x8]
  426c89:	jl     426ca6 <flatcc_json_parser_union_vector@@Base+0x266>
  426c8b:	cmp    BYTE PTR [rbp+0x0],0x20
  426c8f:	jg     426cb7 <flatcc_json_parser_union_vector@@Base+0x277>
  426c91:	jne    426ca6 <flatcc_json_parser_union_vector@@Base+0x266>
  426c93:	cmp    BYTE PTR [rbp+0x1],0x20
  426c97:	jle    426ca6 <flatcc_json_parser_union_vector@@Base+0x266>
  426c99:	inc    rbp
  426c9c:	cmp    rbp,r15
  426c9f:	jne    426cc0 <flatcc_json_parser_union_vector@@Base+0x280>
  426ca1:	jmp    426d96 <flatcc_json_parser_union_vector@@Base+0x356>
  426ca6:	mov    rdi,rbx
  426ca9:	mov    rsi,rbp
  426cac:	mov    rdx,r15
  426caf:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426cb4:	mov    rbp,rax
  426cb7:	cmp    rbp,r15
  426cba:	je     426d96 <flatcc_json_parser_union_vector@@Base+0x356>
  426cc0:	movzx  eax,BYTE PTR [rbp+0x0]
  426cc4:	cmp    al,0x2c
  426cc6:	jne    426d9e <flatcc_json_parser_union_vector@@Base+0x35e>
  426ccc:	lea    r14,[rbp+0x1]
  426cd0:	mov    rax,r15
  426cd3:	sub    rax,r14
  426cd6:	cmp    rax,0x2
  426cda:	jl     426cfb <flatcc_json_parser_union_vector@@Base+0x2bb>
  426cdc:	cmp    BYTE PTR [r14],0x20
  426ce0:	jg     426d0c <flatcc_json_parser_union_vector@@Base+0x2cc>
  426ce2:	jne    426cfb <flatcc_json_parser_union_vector@@Base+0x2bb>
  426ce4:	cmp    BYTE PTR [rbp+0x2],0x20
  426ce8:	jle    426cfb <flatcc_json_parser_union_vector@@Base+0x2bb>
  426cea:	add    rbp,0x2
  426cee:	mov    r14,rbp
  426cf1:	cmp    r14,r15
  426cf4:	jne    426d15 <flatcc_json_parser_union_vector@@Base+0x2d5>
  426cf6:	jmp    426ddf <flatcc_json_parser_union_vector@@Base+0x39f>
  426cfb:	mov    rdi,rbx
  426cfe:	mov    rsi,r14
  426d01:	mov    rdx,r15
  426d04:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426d09:	mov    r14,rax
  426d0c:	cmp    r14,r15
  426d0f:	je     426ddf <flatcc_json_parser_union_vector@@Base+0x39f>
  426d15:	cmp    BYTE PTR [r14],0x5d
  426d19:	je     426e0e <flatcc_json_parser_union_vector@@Base+0x3ce>
  426d1f:	inc    r13
  426d22:	cmp    QWORD PTR [rsp+0x10],r13
  426d27:	jne    426c30 <flatcc_json_parser_union_vector@@Base+0x1f0>
  426d2d:	cmp    DWORD PTR [rbx+0x20],0x0
  426d31:	jne    426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426d33:	mov    DWORD PTR [rbx+0x20],0x1e
  426d3a:	mov    eax,DWORD PTR [rbx+0x8]
  426d3d:	mov    ecx,r14d
  426d40:	sub    ecx,eax
  426d42:	inc    ecx
  426d44:	mov    DWORD PTR [rbx+0x1c],ecx
  426d47:	mov    QWORD PTR [rbx+0x38],r14
  426d4b:	jmp    426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426d4d:	mov    rdi,rbx
  426d50:	mov    rdx,r15
  426d53:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426d58:	mov    rsi,rax
  426d5b:	mov    rbp,rsi
  426d5e:	test   r13d,r13d
  426d61:	je     426e91 <flatcc_json_parser_union_vector@@Base+0x451>
  426d67:	cmp    DWORD PTR [rbx+0x20],0x0
  426d6b:	jne    426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426d6d:	mov    DWORD PTR [rbx+0x20],0x1e
  426d74:	mov    eax,DWORD PTR [rbx+0x8]
  426d77:	mov    ecx,ebp
  426d79:	sub    ecx,eax
  426d7b:	inc    ecx
  426d7d:	mov    DWORD PTR [rbx+0x1c],ecx
  426d80:	mov    QWORD PTR [rbx+0x38],rbp
  426d84:	mov    rax,r15
  426d87:	add    rsp,0x18
  426d8b:	pop    rbx
  426d8c:	pop    r12
  426d8e:	pop    r13
  426d90:	pop    r14
  426d92:	pop    r15
  426d94:	pop    rbp
  426d95:	ret    
  426d96:	mov    rax,r15
  426d99:	jmp    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426d9e:	cmp    al,0x5d
  426da0:	jne    426e4a <flatcc_json_parser_union_vector@@Base+0x40a>
  426da6:	lea    rax,[rbp+0x1]
  426daa:	mov    rcx,r15
  426dad:	sub    rcx,rax
  426db0:	cmp    rcx,0x2
  426db4:	jl     426e6f <flatcc_json_parser_union_vector@@Base+0x42f>
  426dba:	cmp    BYTE PTR [rax],0x20
  426dbd:	jg     426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426dc3:	jne    426e6f <flatcc_json_parser_union_vector@@Base+0x42f>
  426dc9:	cmp    BYTE PTR [rbp+0x2],0x20
  426dcd:	jle    426e6f <flatcc_json_parser_union_vector@@Base+0x42f>
  426dd3:	add    rbp,0x2
  426dd7:	mov    rax,rbp
  426dda:	jmp    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426ddf:	cmp    DWORD PTR [rbx+0x20],0x0
  426de3:	mov    rax,r15
  426de6:	mov    r14d,DWORD PTR [rsp+0x8]
  426deb:	jne    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426df1:	mov    DWORD PTR [rbx+0x20],0x9
  426df8:	mov    eax,DWORD PTR [rbx+0x8]
  426dfb:	mov    ecx,r15d
  426dfe:	sub    ecx,eax
  426e00:	inc    ecx
  426e02:	mov    DWORD PTR [rbx+0x1c],ecx
  426e05:	mov    QWORD PTR [rbx+0x38],r15
  426e09:	mov    rax,r15
  426e0c:	jmp    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426e0e:	lea    rax,[r14+0x1]
  426e12:	mov    rcx,r15
  426e15:	sub    rcx,rax
  426e18:	cmp    rcx,0x2
  426e1c:	jl     426e35 <flatcc_json_parser_union_vector@@Base+0x3f5>
  426e1e:	cmp    BYTE PTR [rax],0x20
  426e21:	jg     426e43 <flatcc_json_parser_union_vector@@Base+0x403>
  426e23:	jne    426e35 <flatcc_json_parser_union_vector@@Base+0x3f5>
  426e25:	cmp    BYTE PTR [r14+0x2],0x20
  426e2a:	jle    426e35 <flatcc_json_parser_union_vector@@Base+0x3f5>
  426e2c:	add    r14,0x2
  426e30:	mov    rax,r14
  426e33:	jmp    426e43 <flatcc_json_parser_union_vector@@Base+0x403>
  426e35:	mov    rdi,rbx
  426e38:	mov    rsi,rax
  426e3b:	mov    rdx,r15
  426e3e:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426e43:	mov    r14d,DWORD PTR [rsp+0x8]
  426e48:	jmp    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426e4a:	cmp    DWORD PTR [rbx+0x20],0x0
  426e4e:	mov    rax,r15
  426e51:	jne    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426e53:	mov    DWORD PTR [rbx+0x20],0x9
  426e5a:	mov    eax,DWORD PTR [rbx+0x8]
  426e5d:	mov    ecx,ebp
  426e5f:	sub    ecx,eax
  426e61:	inc    ecx
  426e63:	mov    DWORD PTR [rbx+0x1c],ecx
  426e66:	mov    QWORD PTR [rbx+0x38],rbp
  426e6a:	mov    rax,r15
  426e6d:	jmp    426e7d <flatcc_json_parser_union_vector@@Base+0x43d>
  426e6f:	mov    rdi,rbx
  426e72:	mov    rsi,rax
  426e75:	mov    rdx,r15
  426e78:	call   424110 <flatcc_json_parser_space_ext@@Base>
  426e7d:	mov    rcx,QWORD PTR [rsp+0x10]
  426e82:	dec    rcx
  426e85:	mov    rbp,rax
  426e88:	cmp    rcx,r13
  426e8b:	jne    426d67 <flatcc_json_parser_union_vector@@Base+0x327>
  426e91:	mov    rdi,QWORD PTR [rbx]
  426e94:	mov    rsi,r12
  426e97:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  426e9c:	mov    rdi,QWORD PTR [rbx]
  426e9f:	mov    rsi,rax
  426ea2:	call   420710 <flatcc_builder_end_offset_vector_for_unions@@Base>
  426ea7:	mov    DWORD PTR [rsp+0xc],eax
  426eab:	test   eax,eax
  426ead:	je     426b44 <flatcc_json_parser_union_vector@@Base+0x104>
  426eb3:	mov    rdi,QWORD PTR [rbx]
  426eb6:	movzx  esi,r14w
  426eba:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  426ebf:	test   rax,rax
  426ec2:	je     426b44 <flatcc_json_parser_union_vector@@Base+0x104>
  426ec8:	mov    ecx,DWORD PTR [rsp+0xc]
  426ecc:	mov    DWORD PTR [rax],ecx
  426ece:	mov    r15,rbp
  426ed1:	jmp    426d84 <flatcc_json_parser_union_vector@@Base+0x344>
  426ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000426ee0 <flatcc_json_parser_union_type_vector@@Base>:
  426ee0:	push   rbp
  426ee1:	push   r15
  426ee3:	push   r14
  426ee5:	push   r13
  426ee7:	push   r12
  426ee9:	push   rbx
  426eea:	sub    rsp,0x48
  426eee:	mov    r13,r9
  426ef1:	mov    r12d,r8d
  426ef4:	mov    rbx,rcx
  426ef7:	mov    r14,rdx
  426efa:	mov    r15,rsi
  426efd:	mov    rbp,rdi
  426f00:	mov    rdi,QWORD PTR [rdi]
  426f03:	mov    rsi,r9
  426f06:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  426f0b:	lea    rbx,[rbx+rbx*4]
  426f0f:	cmp    BYTE PTR [rax+rbx*8+0x24],0x0
  426f14:	je     426f24 <flatcc_json_parser_union_type_vector@@Base+0x44>
  426f16:	cmp    DWORD PTR [rbp+0x20],0x0
  426f1a:	je     426f70 <flatcc_json_parser_union_type_vector@@Base+0x90>
  426f1c:	mov    r12,r14
  426f1f:	jmp    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  426f24:	mov    DWORD PTR [rsp+0x28],r12d
  426f29:	mov    r12,rax
  426f2c:	lea    rax,[rax+rbx*8]
  426f30:	add    rax,0x24
  426f34:	mov    BYTE PTR [rax],0x1
  426f37:	mov    QWORD PTR [rsp+0x18],rbp
  426f3c:	mov    rdi,QWORD PTR [rbp+0x0]
  426f40:	mov    esi,0x1
  426f45:	mov    ecx,0xffffffff
  426f4a:	mov    edx,0x1
  426f4f:	call   41f250 <flatcc_builder_start_vector@@Base>
  426f54:	test   eax,eax
  426f56:	je     426f90 <flatcc_json_parser_union_type_vector@@Base+0xb0>
  426f58:	mov    r12,r14
  426f5b:	mov    r13,QWORD PTR [rsp+0x18]
  426f60:	cmp    DWORD PTR [r13+0x20],0x0
  426f65:	jne    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  426f6b:	jmp    4274f3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  426f70:	mov    DWORD PTR [rbp+0x20],0x1c
  426f77:	mov    eax,DWORD PTR [rbp+0x8]
  426f7a:	mov    ecx,r15d
  426f7d:	sub    ecx,eax
  426f7f:	inc    ecx
  426f81:	mov    DWORD PTR [rbp+0x1c],ecx
  426f84:	mov    QWORD PTR [rbp+0x38],r15
  426f88:	mov    r12,r14
  426f8b:	jmp    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  426f90:	mov    QWORD PTR [rsp+0x40],r12
  426f95:	cmp    r15,r14
  426f98:	mov    QWORD PTR [rsp+0x20],rbx
  426f9d:	mov    QWORD PTR [rsp+0x30],r13
  426fa2:	je     426fc7 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  426fa4:	cmp    BYTE PTR [r15],0x5b
  426fa8:	jne    426fc7 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  426faa:	lea    rax,[r15+0x1]
  426fae:	mov    rcx,r14
  426fb1:	sub    rcx,rax
  426fb4:	cmp    rcx,0x2
  426fb8:	jl     42701b <flatcc_json_parser_union_type_vector@@Base+0x13b>
  426fba:	cmp    BYTE PTR [rax],0x20
  426fbd:	jle    427003 <flatcc_json_parser_union_type_vector@@Base+0x123>
  426fbf:	mov    rbp,rbx
  426fc2:	mov    rbx,r14
  426fc5:	jmp    427031 <flatcc_json_parser_union_type_vector@@Base+0x151>
  426fc7:	mov    rbp,rbx
  426fca:	mov    r13,QWORD PTR [rsp+0x18]
  426fcf:	cmp    DWORD PTR [r13+0x20],0x0
  426fd4:	mov    r12,r14
  426fd7:	mov    rdx,r14
  426fda:	jne    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  426fe0:	mov    DWORD PTR [r13+0x20],0x16
  426fe8:	mov    eax,DWORD PTR [r13+0x8]
  426fec:	mov    ecx,r15d
  426fef:	sub    ecx,eax
  426ff1:	inc    ecx
  426ff3:	mov    DWORD PTR [r13+0x1c],ecx
  426ff7:	mov    QWORD PTR [r13+0x38],r15
  426ffb:	mov    rdx,r12
  426ffe:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427003:	jne    42701b <flatcc_json_parser_union_type_vector@@Base+0x13b>
  427005:	cmp    BYTE PTR [r15+0x2],0x20
  42700a:	jle    42701b <flatcc_json_parser_union_type_vector@@Base+0x13b>
  42700c:	mov    rbp,rbx
  42700f:	add    r15,0x2
  427013:	mov    rax,r15
  427016:	mov    rbx,r14
  427019:	jmp    427031 <flatcc_json_parser_union_type_vector@@Base+0x151>
  42701b:	mov    rbp,rbx
  42701e:	mov    rdi,QWORD PTR [rsp+0x18]
  427023:	mov    rsi,rax
  427026:	mov    rbx,r14
  427029:	mov    rdx,r14
  42702c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  427031:	mov    r15,rbx
  427034:	cmp    rax,rbx
  427037:	mov    rbx,QWORD PTR [rsp+0x18]
  42703c:	je     427082 <flatcc_json_parser_union_type_vector@@Base+0x1a2>
  42703e:	cmp    BYTE PTR [rax],0x5d
  427041:	jne    42707f <flatcc_json_parser_union_type_vector@@Base+0x19f>
  427043:	lea    rdx,[rax+0x1]
  427047:	mov    r12,r14
  42704a:	mov    rcx,r14
  42704d:	sub    rcx,rdx
  427050:	cmp    rcx,0x2
  427054:	mov    r13,rbx
  427057:	jl     4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42705d:	cmp    BYTE PTR [rdx],0x20
  427060:	jg     4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427066:	jne    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42706c:	cmp    BYTE PTR [rax+0x2],0x20
  427070:	jle    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  427076:	add    rax,0x2
  42707a:	jmp    4273c7 <flatcc_json_parser_union_type_vector@@Base+0x4e7>
  42707f:	mov    r15,rax
  427082:	mov    rdi,QWORD PTR [rbx]
  427085:	mov    esi,0x1
  42708a:	call   41e900 <flatcc_builder_extend_vector@@Base>
  42708f:	test   rax,rax
  427092:	je     42731b <flatcc_json_parser_union_type_vector@@Base+0x43b>
  427098:	mov    rcx,QWORD PTR [rsp+0x90]
  4270a0:	mov    r12,r14
  4270a3:	mov    r13,rbx
  4270a6:	mov    rbx,rcx
  4270a9:	mov    BYTE PTR [rsp+0x17],0x0
  4270ae:	cmp    r15,r12
  4270b1:	mov    QWORD PTR [rsp+0x38],rax
  4270b6:	je     4271e3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  4270bc:	mov    al,BYTE PTR [r15]
  4270bf:	xor    r14d,r14d
  4270c2:	cmp    al,0x2d
  4270c4:	sete   r14b
  4270c8:	add    r14,r15
  4270cb:	xor    ebp,ebp
  4270cd:	cmp    r14,r12
  4270d0:	je     427121 <flatcc_json_parser_union_type_vector@@Base+0x241>
  4270d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4270dc:	nop    DWORD PTR [rax+0x0]
  4270e0:	movsx  rcx,BYTE PTR [r14]
  4270e4:	lea    edx,[rcx-0x30]
  4270e7:	cmp    dl,0x9
  4270ea:	ja     42712d <flatcc_json_parser_union_type_vector@@Base+0x24d>
  4270ec:	lea    rdx,[rbp*4+0x0]
  4270f4:	add    rdx,rbp
  4270f7:	lea    rdx,[rcx+rdx*2]
  4270fb:	add    rdx,0xffffffffffffffd0
  4270ff:	cmp    rbp,rdx
  427102:	ja     427167 <flatcc_json_parser_union_type_vector@@Base+0x287>
  427104:	inc    r14
  427107:	mov    rbp,rdx
  42710a:	cmp    r12,r14
  42710d:	jne    4270e0 <flatcc_json_parser_union_type_vector@@Base+0x200>
  42710f:	xor    ecx,ecx
  427111:	mov    r14,r12
  427114:	mov    rbp,rdx
  427117:	cmp    r14,r15
  42711a:	jne    427134 <flatcc_json_parser_union_type_vector@@Base+0x254>
  42711c:	jmp    4271a8 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  427121:	mov    r14,r12
  427124:	xor    ecx,ecx
  427126:	cmp    r14,r15
  427129:	jne    427134 <flatcc_json_parser_union_type_vector@@Base+0x254>
  42712b:	jmp    4271a8 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  42712d:	mov    cl,0x1
  42712f:	cmp    r14,r15
  427132:	je     4271a8 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  427134:	test   cl,cl
  427136:	je     42718e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  427138:	mov    cl,BYTE PTR [r14]
  42713b:	add    cl,0xd2
  42713e:	cmp    cl,0x37
  427141:	ja     42718e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  427143:	movzx  ecx,cl
  427146:	movabs rdx,0x80000000800001
  427150:	bt     rdx,rcx
  427154:	jae    42718e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  427156:	cmp    DWORD PTR [r13+0x20],0x0
  42715b:	jne    427189 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42715d:	mov    DWORD PTR [r13+0x20],0xc
  427165:	jmp    427176 <flatcc_json_parser_union_type_vector@@Base+0x296>
  427167:	cmp    DWORD PTR [r13+0x20],0x0
  42716c:	jne    427189 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42716e:	mov    DWORD PTR [r13+0x20],0x8
  427176:	mov    ecx,DWORD PTR [r13+0x8]
  42717a:	mov    edx,r14d
  42717d:	sub    edx,ecx
  42717f:	inc    edx
  427181:	mov    DWORD PTR [r13+0x1c],edx
  427185:	mov    QWORD PTR [r13+0x38],r14
  427189:	xor    ebp,ebp
  42718b:	mov    r14,r12
  42718e:	cmp    r14,r15
  427191:	je     4271a8 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  427193:	cmp    al,0x2d
  427195:	jne    4271b4 <flatcc_json_parser_union_type_vector@@Base+0x2d4>
  427197:	cmp    DWORD PTR [r13+0x20],0x0
  42719c:	jne    4271e3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  42719e:	mov    DWORD PTR [r13+0x20],0x8
  4271a6:	jmp    4271d0 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
  4271a8:	xor    ebp,ebp
  4271aa:	mov    r14,r15
  4271ad:	cmp    r15,r14
  4271b0:	jne    427222 <flatcc_json_parser_union_type_vector@@Base+0x342>
  4271b2:	jmp    4271ed <flatcc_json_parser_union_type_vector@@Base+0x30d>
  4271b4:	cmp    rbp,0x100
  4271bb:	jb     427308 <flatcc_json_parser_union_type_vector@@Base+0x428>
  4271c1:	cmp    DWORD PTR [r13+0x20],0x0
  4271c6:	jne    4271e3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  4271c8:	mov    DWORD PTR [r13+0x20],0x7
  4271d0:	mov    eax,DWORD PTR [r13+0x8]
  4271d4:	mov    ecx,r14d
  4271d7:	sub    ecx,eax
  4271d9:	inc    ecx
  4271db:	mov    DWORD PTR [r13+0x1c],ecx
  4271df:	mov    QWORD PTR [r13+0x38],r14
  4271e3:	xor    ebp,ebp
  4271e5:	mov    r14,r12
  4271e8:	cmp    r15,r14
  4271eb:	jne    427222 <flatcc_json_parser_union_type_vector@@Base+0x342>
  4271ed:	mov    rdi,r13
  4271f0:	mov    rsi,r15
  4271f3:	mov    rdx,r12
  4271f6:	mov    rcx,QWORD PTR [rsp+0x80]
  4271fe:	lea    r8,[rsp+0x17]
  427203:	call   426880 <flatcc_json_parser_union_type@@Base+0x2c0>
  427208:	mov    r14,rax
  42720b:	cmp    rax,r15
  42720e:	je     42755f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  427214:	cmp    r14,r12
  427217:	je     42755f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  42721d:	mov    bpl,BYTE PTR [rsp+0x17]
  427222:	movzx  edi,bpl
  427226:	call   rbx
  427228:	test   eax,eax
  42722a:	jne    42723e <flatcc_json_parser_union_type_vector@@Base+0x35e>
  42722c:	test   BYTE PTR [r13+0x10],0x1
  427231:	je     42756b <flatcc_json_parser_union_type_vector@@Base+0x68b>
  427237:	mov    BYTE PTR [rsp+0x17],0x0
  42723c:	xor    ebp,ebp
  42723e:	mov    rax,QWORD PTR [rsp+0x38]
  427243:	mov    BYTE PTR [rax],bpl
  427246:	mov    rax,r12
  427249:	sub    rax,r14
  42724c:	cmp    rax,0x2
  427250:	mov    rbp,QWORD PTR [rsp+0x20]
  427255:	jl     427273 <flatcc_json_parser_union_type_vector@@Base+0x393>
  427257:	cmp    BYTE PTR [r14],0x20
  42725b:	jg     427284 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
  42725d:	jne    427273 <flatcc_json_parser_union_type_vector@@Base+0x393>
  42725f:	cmp    BYTE PTR [r14+0x1],0x20
  427264:	jle    427273 <flatcc_json_parser_union_type_vector@@Base+0x393>
  427266:	inc    r14
  427269:	cmp    r14,r12
  42726c:	jne    42728d <flatcc_json_parser_union_type_vector@@Base+0x3ad>
  42726e:	jmp    427331 <flatcc_json_parser_union_type_vector@@Base+0x451>
  427273:	mov    rdi,r13
  427276:	mov    rsi,r14
  427279:	mov    rdx,r12
  42727c:	call   424110 <flatcc_json_parser_space_ext@@Base>
  427281:	mov    r14,rax
  427284:	cmp    r14,r12
  427287:	je     427331 <flatcc_json_parser_union_type_vector@@Base+0x451>
  42728d:	mov    al,BYTE PTR [r14]
  427290:	cmp    al,0x2c
  427292:	jne    427339 <flatcc_json_parser_union_type_vector@@Base+0x459>
  427298:	lea    r15,[r14+0x1]
  42729c:	mov    rax,r12
  42729f:	sub    rax,r15
  4272a2:	cmp    rax,0x2
  4272a6:	jl     4272c8 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  4272a8:	cmp    BYTE PTR [r15],0x20
  4272ac:	jg     4272d9 <flatcc_json_parser_union_type_vector@@Base+0x3f9>
  4272ae:	jne    4272c8 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  4272b0:	cmp    BYTE PTR [r14+0x2],0x20
  4272b5:	jle    4272c8 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  4272b7:	add    r14,0x2
  4272bb:	mov    r15,r14
  4272be:	cmp    r15,r12
  4272c1:	jne    4272e2 <flatcc_json_parser_union_type_vector@@Base+0x402>
  4272c3:	jmp    427368 <flatcc_json_parser_union_type_vector@@Base+0x488>
  4272c8:	mov    rdi,r13
  4272cb:	mov    rsi,r15
  4272ce:	mov    rdx,r12
  4272d1:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4272d6:	mov    r15,rax
  4272d9:	cmp    r15,r12
  4272dc:	je     427368 <flatcc_json_parser_union_type_vector@@Base+0x488>
  4272e2:	cmp    BYTE PTR [r15],0x5d
  4272e6:	je     427392 <flatcc_json_parser_union_type_vector@@Base+0x4b2>
  4272ec:	mov    rdi,QWORD PTR [r13+0x0]
  4272f0:	mov    esi,0x1
  4272f5:	call   41e900 <flatcc_builder_extend_vector@@Base>
  4272fa:	test   rax,rax
  4272fd:	jne    4270a9 <flatcc_json_parser_union_type_vector@@Base+0x1c9>
  427303:	jmp    4274ec <flatcc_json_parser_union_type_vector@@Base+0x60c>
  427308:	mov    BYTE PTR [rsp+0x17],bpl
  42730d:	cmp    r15,r14
  427310:	jne    427222 <flatcc_json_parser_union_type_vector@@Base+0x342>
  427316:	jmp    4271ed <flatcc_json_parser_union_type_vector@@Base+0x30d>
  42731b:	mov    r12,r14
  42731e:	mov    r13,rbx
  427321:	cmp    DWORD PTR [r13+0x20],0x0
  427326:	jne    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42732c:	jmp    4274f3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  427331:	mov    rdx,r12
  427334:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427339:	cmp    al,0x5d
  42733b:	jne    42752e <flatcc_json_parser_union_type_vector@@Base+0x64e>
  427341:	lea    rdx,[r14+0x1]
  427345:	mov    rax,r12
  427348:	sub    rax,rdx
  42734b:	cmp    rax,0x2
  42734f:	jl     4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  427351:	cmp    BYTE PTR [rdx],0x20
  427354:	jg     4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427356:	jne    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  427358:	cmp    BYTE PTR [r14+0x2],0x20
  42735d:	jle    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42735f:	add    r14,0x2
  427363:	mov    rdx,r14
  427366:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427368:	cmp    DWORD PTR [r13+0x20],0x0
  42736d:	mov    rdx,r12
  427370:	jne    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427372:	mov    DWORD PTR [r13+0x20],0x9
  42737a:	mov    eax,DWORD PTR [r13+0x8]
  42737e:	mov    ecx,r12d
  427381:	sub    ecx,eax
  427383:	inc    ecx
  427385:	mov    DWORD PTR [r13+0x1c],ecx
  427389:	mov    QWORD PTR [r13+0x38],r12
  42738d:	mov    rdx,r12
  427390:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  427392:	lea    rdx,[r15+0x1]
  427396:	mov    rax,r12
  427399:	sub    rax,rdx
  42739c:	cmp    rax,0x2
  4273a0:	jl     4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  4273a2:	cmp    BYTE PTR [rdx],0x20
  4273a5:	jg     4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4273a7:	jne    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  4273a9:	cmp    BYTE PTR [r15+0x2],0x20
  4273ae:	jle    4273b9 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  4273b0:	add    r15,0x2
  4273b4:	mov    rdx,r15
  4273b7:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4273b9:	mov    rdi,r13
  4273bc:	mov    rsi,rdx
  4273bf:	mov    rdx,r12
  4273c2:	call   424110 <flatcc_json_parser_space_ext@@Base>
  4273c7:	mov    rdx,rax
  4273ca:	mov    QWORD PTR [rsp+0x18],rdx
  4273cf:	mov    rbx,QWORD PTR [rsp+0x40]
  4273d4:	add    rbx,0x10
  4273d8:	mov    rdi,QWORD PTR [r13+0x0]
  4273dc:	call   4204b0 <flatcc_builder_vector_count@@Base>
  4273e1:	mov    r14,rax
  4273e4:	mov    DWORD PTR [rbx+rbp*8+0x18],r14d
  4273e9:	mov    rbx,r13
  4273ec:	mov    r13d,r14d
  4273ef:	mov    rdi,QWORD PTR [rbx]
  4273f2:	mov    rsi,r13
  4273f5:	call   41dc50 <flatcc_builder_enter_user_frame@@Base>
  4273fa:	mov    r15,rax
  4273fd:	mov    rdi,QWORD PTR [rbx]
  427400:	mov    rsi,rax
  427403:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  427408:	mov    rbp,rax
  42740b:	mov    rdi,QWORD PTR [rbx]
  42740e:	call   4204c0 <flatcc_builder_vector_edit@@Base>
  427413:	mov    rdi,rbp
  427416:	mov    rsi,rax
  427419:	mov    rdx,r13
  42741c:	call   4060d0 <memcpy@plt>
  427421:	mov    rdi,QWORD PTR [rbx]
  427424:	call   4203e0 <flatcc_builder_end_vector@@Base>
  427429:	test   eax,eax
  42742b:	je     4274e4 <flatcc_json_parser_union_type_vector@@Base+0x604>
  427431:	mov    r13d,eax
  427434:	mov    rdi,QWORD PTR [rbx]
  427437:	movzx  ebp,WORD PTR [rsp+0x28]
  42743c:	lea    esi,[rbp-0x1]
  42743f:	call   4208e0 <flatcc_builder_table_add_offset@@Base>
  427444:	test   rax,rax
  427447:	je     4274e4 <flatcc_json_parser_union_type_vector@@Base+0x604>
  42744d:	mov    QWORD PTR [rsp+0x28],rbp
  427452:	mov    DWORD PTR [rax],r13d
  427455:	mov    rdi,QWORD PTR [rbx]
  427458:	mov    rsi,QWORD PTR [rsp+0x30]
  42745d:	call   41dde0 <flatcc_builder_get_user_frame_ptr@@Base>
  427462:	mov    rcx,QWORD PTR [rsp+0x20]
  427467:	mov    QWORD PTR [rax+rcx*8+0x30],r15
  42746c:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  427471:	mov    rcx,QWORD PTR [rax+0x8]
  427475:	test   rsi,rsi
  427478:	je     427510 <flatcc_json_parser_union_type_vector@@Base+0x630>
  42747e:	test   rcx,rcx
  427481:	je     42758f <flatcc_json_parser_union_type_vector@@Base+0x6af>
  427487:	mov    rbp,rbx
  42748a:	mov    rdx,QWORD PTR [rsp+0x88]
  427492:	mov    rdi,rax
  427495:	add    rdi,0x10
  427499:	dec    rcx
  42749c:	mov    QWORD PTR [rax+0x8],rcx
  4274a0:	mov    ebx,DWORD PTR [rbx+0x18]
  4274a3:	mov    r13,QWORD PTR [rbp+0x8]
  4274a7:	mov    rcx,QWORD PTR [rsp+0x20]
  4274ac:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  4274b0:	mov    DWORD PTR [rbp+0x18],eax
  4274b3:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  4274b8:	mov    QWORD PTR [rbp+0x8],rax
  4274bc:	mov    QWORD PTR [rsp],rdx
  4274c0:	mov    rdi,rbp
  4274c3:	mov    rdx,r12
  4274c6:	mov    rcx,r15
  4274c9:	mov    r8d,r14d
  4274cc:	mov    r9,QWORD PTR [rsp+0x28]
  4274d1:	call   426b10 <flatcc_json_parser_union_vector@@Base+0xd0>
  4274d6:	cmp    rax,r12
  4274d9:	je     42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4274db:	mov    DWORD PTR [rbp+0x18],ebx
  4274de:	mov    QWORD PTR [rbp+0x8],r13
  4274e2:	jmp    427517 <flatcc_json_parser_union_type_vector@@Base+0x637>
  4274e4:	mov    r15,QWORD PTR [rsp+0x18]
  4274e9:	mov    r13,rbx
  4274ec:	cmp    DWORD PTR [r13+0x20],0x0
  4274f1:	jne    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4274f3:	mov    DWORD PTR [r13+0x20],0x21
  4274fb:	mov    eax,DWORD PTR [r13+0x8]
  4274ff:	mov    ecx,r15d
  427502:	sub    ecx,eax
  427504:	inc    ecx
  427506:	mov    DWORD PTR [r13+0x1c],ecx
  42750a:	mov    QWORD PTR [r13+0x38],r15
  42750e:	jmp    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  427510:	inc    rcx
  427513:	mov    QWORD PTR [rax+0x8],rcx
  427517:	mov    r12,QWORD PTR [rsp+0x18]
  42751c:	mov    rax,r12
  42751f:	add    rsp,0x48
  427523:	pop    rbx
  427524:	pop    r12
  427526:	pop    r13
  427528:	pop    r14
  42752a:	pop    r15
  42752c:	pop    rbp
  42752d:	ret    
  42752e:	cmp    DWORD PTR [r13+0x20],0x0
  427533:	mov    rdx,r12
  427536:	jne    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  42753c:	mov    DWORD PTR [r13+0x20],0x9
  427544:	mov    eax,DWORD PTR [r13+0x8]
  427548:	mov    ecx,r14d
  42754b:	sub    ecx,eax
  42754d:	inc    ecx
  42754f:	mov    DWORD PTR [r13+0x1c],ecx
  427553:	mov    QWORD PTR [r13+0x38],r14
  427557:	mov    rdx,r12
  42755a:	jmp    4273ca <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  42755f:	mov    r15,r14
  427562:	cmp    DWORD PTR [r13+0x20],0x0
  427567:	jne    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  427569:	jmp    4274f3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  42756b:	cmp    DWORD PTR [r13+0x20],0x0
  427570:	jne    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  427572:	mov    DWORD PTR [r13+0x20],0xf
  42757a:	mov    eax,DWORD PTR [r13+0x8]
  42757e:	mov    ecx,r14d
  427581:	sub    ecx,eax
  427583:	inc    ecx
  427585:	mov    DWORD PTR [r13+0x1c],ecx
  427589:	mov    QWORD PTR [r13+0x38],r14
  42758d:	jmp    42751c <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42758f:	lea    rdi,[rip+0x13880]        # 43ae16 <flatcc_builder_padding_base@@Base+0x2766>
  427596:	lea    rsi,[rip+0x13888]        # 43ae25 <flatcc_builder_padding_base@@Base+0x2775>
  42759d:	lea    rcx,[rip+0x139b1]        # 43af55 <flatcc_builder_padding_base@@Base+0x28a5>
  4275a4:	mov    edx,0x462
  4275a9:	call   406070 <__assert_fail@plt>
  4275ae:	xchg   ax,ax

00000000004275b0 <flatcc_json_parser_table_as_root@@Base>:
  4275b0:	push   r15
  4275b2:	push   r14
  4275b4:	push   r12
  4275b6:	push   rbx
  4275b7:	sub    rsp,0x58
  4275bb:	mov    r12,rcx
  4275be:	mov    r14,rdx
  4275c1:	mov    r15,rdi
  4275c4:	mov    ecx,r8d
  4275c7:	shr    ecx,1
  4275c9:	and    ecx,0x2
  4275cc:	test   rsi,rsi
  4275cf:	lea    rbx,[rsp+0x10]
  4275d4:	cmovne rbx,rsi
  4275d8:	add    r12,rdx
  4275db:	vxorps xmm0,xmm0,xmm0
  4275df:	vmovups YMMWORD PTR [rbx],ymm0
  4275e3:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4275e8:	mov    QWORD PTR [rbx+0x40],0x0
  4275f0:	mov    QWORD PTR [rbx],rdi
  4275f3:	mov    QWORD PTR [rbx+0x8],rdx
  4275f7:	mov    DWORD PTR [rbx+0x18],0x1
  4275fe:	mov    DWORD PTR [rbx+0x10],r8d
  427602:	mov    QWORD PTR [rbx+0x28],rdx
  427606:	mov    QWORD PTR [rbx+0x30],r12
  42760a:	mov    QWORD PTR [rbx+0x38],rdx
  42760e:	mov    rsi,r9
  427611:	xor    edx,edx
  427613:	vzeroupper 
  427616:	call   41e420 <flatcc_builder_start_buffer@@Base>
  42761b:	mov    ecx,eax
  42761d:	mov    eax,0xffffffff
  427622:	test   ecx,ecx
  427624:	jne    42765f <flatcc_json_parser_table_as_root@@Base+0xaf>
  427626:	lea    rcx,[rsp+0xc]
  42762b:	mov    rdi,rbx
  42762e:	mov    rsi,r14
  427631:	mov    rdx,r12
  427634:	call   QWORD PTR [rsp+0x80]
  42763b:	mov    eax,DWORD PTR [rbx+0x20]
  42763e:	test   eax,eax
  427640:	jne    42765f <flatcc_json_parser_table_as_root@@Base+0xaf>
  427642:	mov    esi,DWORD PTR [rsp+0xc]
  427646:	mov    rdi,r15
  427649:	call   41e640 <flatcc_builder_end_buffer@@Base>
  42764e:	mov    ecx,eax
  427650:	mov    eax,0xffffffff
  427655:	test   ecx,ecx
  427657:	je     42765f <flatcc_json_parser_table_as_root@@Base+0xaf>
  427659:	mov    QWORD PTR [rbx+0x40],r14
  42765d:	xor    eax,eax
  42765f:	add    rsp,0x58
  427663:	pop    rbx
  427664:	pop    r12
  427666:	pop    r14
  427668:	pop    r15
  42766a:	ret    
  42766b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427670 <flatcc_json_parser_struct_as_root@@Base>:
  427670:	push   r15
  427672:	push   r14
  427674:	push   r12
  427676:	push   rbx
  427677:	sub    rsp,0x58
  42767b:	mov    r12,rcx
  42767e:	mov    r14,rdx
  427681:	mov    r15,rdi
  427684:	mov    ecx,r8d
  427687:	shr    ecx,1
  427689:	and    ecx,0x2
  42768c:	test   rsi,rsi
  42768f:	lea    rbx,[rsp+0x10]
  427694:	cmovne rbx,rsi
  427698:	add    r12,rdx
  42769b:	vxorps xmm0,xmm0,xmm0
  42769f:	vmovups YMMWORD PTR [rbx],ymm0
  4276a3:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4276a8:	mov    QWORD PTR [rbx+0x40],0x0
  4276b0:	mov    QWORD PTR [rbx],rdi
  4276b3:	mov    QWORD PTR [rbx+0x8],rdx
  4276b7:	mov    DWORD PTR [rbx+0x18],0x1
  4276be:	mov    DWORD PTR [rbx+0x10],r8d
  4276c2:	mov    QWORD PTR [rbx+0x28],rdx
  4276c6:	mov    QWORD PTR [rbx+0x30],r12
  4276ca:	mov    QWORD PTR [rbx+0x38],rdx
  4276ce:	mov    rsi,r9
  4276d1:	xor    edx,edx
  4276d3:	vzeroupper 
  4276d6:	call   41e420 <flatcc_builder_start_buffer@@Base>
  4276db:	mov    ecx,eax
  4276dd:	mov    eax,0xffffffff
  4276e2:	test   ecx,ecx
  4276e4:	jne    42771f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  4276e6:	lea    rcx,[rsp+0xc]
  4276eb:	mov    rdi,rbx
  4276ee:	mov    rsi,r14
  4276f1:	mov    rdx,r12
  4276f4:	call   QWORD PTR [rsp+0x80]
  4276fb:	mov    eax,DWORD PTR [rbx+0x20]
  4276fe:	test   eax,eax
  427700:	jne    42771f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  427702:	mov    esi,DWORD PTR [rsp+0xc]
  427706:	mov    rdi,r15
  427709:	call   41e640 <flatcc_builder_end_buffer@@Base>
  42770e:	mov    ecx,eax
  427710:	mov    eax,0xffffffff
  427715:	test   ecx,ecx
  427717:	je     42771f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  427719:	mov    QWORD PTR [rbx+0x40],r14
  42771d:	xor    eax,eax
  42771f:	add    rsp,0x58
  427723:	pop    rbx
  427724:	pop    r12
  427726:	pop    r14
  427728:	pop    r15
  42772a:	ret    
  42772b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427730 <flatcc_json_printer_error_string@@Base>:
  427730:	cmp    edi,0x3
  427733:	ja     427744 <flatcc_json_printer_error_string@@Base+0x14>
  427735:	movsxd rax,edi
  427738:	lea    rcx,[rip+0x1b6a1]        # 442de0 <flatcc_builder_padding_base@@Base+0xa730>
  42773f:	mov    rax,QWORD PTR [rcx+rax*8]
  427743:	ret    
  427744:	lea    rax,[rip+0x12875]        # 439fc0 <flatcc_builder_padding_base@@Base+0x1910>
  42774b:	ret    
  42774c:	nop    DWORD PTR [rax+0x0]

0000000000427750 <flatcc_json_printer_fmt_float@@Base>:
  427750:	vcvtss2sd xmm0,xmm0,xmm0
  427754:	jmp    427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  427756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427760:	push   rbp
  427761:	push   r15
  427763:	push   r14
  427765:	push   r13
  427767:	push   r12
  427769:	push   rbx
  42776a:	sub    rsp,0x98
  427771:	test   rdi,rdi
  427774:	je     42843a <flatcc_json_printer_fmt_float@@Base+0xcea>
  42777a:	vmovq  rcx,xmm0
  42777f:	lea    rax,[rcx+rcx*1]
  427783:	movabs rdx,0xffe0000000000001
  42778d:	cmp    rax,rdx
  427790:	jb     4277b8 <flatcc_json_printer_fmt_float@@Base+0x68>
  427792:	mov    rdx,rcx
  427795:	shr    rdx,0x20
  427799:	lea    rsi,[rip+0x14355]        # 43baf5 <flatcc_builder_padding_base@@Base+0x3445>
  4277a0:	xor    eax,eax
  4277a2:	add    rsp,0x98
  4277a9:	pop    rbx
  4277aa:	pop    r12
  4277ac:	pop    r13
  4277ae:	pop    r14
  4277b0:	pop    r15
  4277b2:	pop    rbp
  4277b3:	jmp    406120 <sprintf@plt>
  4277b8:	test   rcx,rcx
  4277bb:	js     4277c2 <flatcc_json_printer_fmt_float@@Base+0x72>
  4277bd:	mov    rdx,rdi
  4277c0:	jmp    4277de <flatcc_json_printer_fmt_float@@Base+0x8e>
  4277c2:	lea    rdx,[rdi+0x1]
  4277c6:	mov    BYTE PTR [rdi],0x2d
  4277c9:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0xd2ff]        # 434ad0 <_IO_stdin_used@@Base+0xad0>
  4277d1:	movabs rax,0x8000000000000000
  4277db:	xor    rcx,rax
  4277de:	movabs r11,0x7ff0000000000000
  4277e8:	cmp    rcx,r11
  4277eb:	je     427800 <flatcc_json_printer_fmt_float@@Base+0xb0>
  4277ed:	test   rcx,rcx
  4277f0:	jne    427810 <flatcc_json_printer_fmt_float@@Base+0xc0>
  4277f2:	mov    WORD PTR [rdx],0x30
  4277f7:	sub    edx,edi
  4277f9:	inc    edx
  4277fb:	jmp    427e98 <flatcc_json_printer_fmt_float@@Base+0x748>
  427800:	mov    DWORD PTR [rdx],0x666e69
  427806:	sub    edx,edi
  427808:	add    edx,0x3
  42780b:	jmp    427e98 <flatcc_json_printer_fmt_float@@Base+0x748>
  427810:	mov    QWORD PTR [rsp],rdx
  427814:	vmovq  rax,xmm0
  427819:	mov    cl,0x34
  42781b:	bzhi   r8,rax,rcx
  427820:	and    r11,rax
  427823:	je     427844 <flatcc_json_printer_fmt_float@@Base+0xf4>
  427825:	movabs r10,0xfffffffffffff
  42782f:	inc    r10
  427832:	or     r10,r8
  427835:	mov    rsi,r11
  427838:	shr    rsi,0x34
  42783c:	add    esi,0xfffffbcd
  427842:	jmp    427855 <flatcc_json_printer_fmt_float@@Base+0x105>
  427844:	mov    esi,0xfffffbce
  427849:	mov    r10,r8
  42784c:	test   r8,r8
  42784f:	je     428497 <flatcc_json_printer_fmt_float@@Base+0xd47>
  427855:	movabs rbp,0x40000000000000
  42785f:	mov    rdx,r10
  427862:	mov    eax,esi
  427864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42786e:	xchg   ax,ax
  427870:	shl    rdx,0xa
  427874:	add    eax,0xfffffff6
  427877:	cmp    rdx,rbp
  42787a:	jb     427870 <flatcc_json_printer_fmt_float@@Base+0x120>
  42787c:	jmp    427885 <flatcc_json_printer_fmt_float@@Base+0x135>
  42787e:	xchg   ax,ax
  427880:	add    rdx,rdx
  427883:	dec    eax
  427885:	test   rdx,rdx
  427888:	jns    427880 <flatcc_json_printer_fmt_float@@Base+0x130>
  42788a:	lea    rcx,[r10+r10*1]
  42788e:	add    rcx,0x1
  427892:	lea    r9d,[rsi-0x1]
  427896:	mov    ebx,r9d
  427899:	cmp    rcx,rbp
  42789c:	jae    4278b5 <flatcc_json_printer_fmt_float@@Base+0x165>
  42789e:	xchg   ax,ax
  4278a0:	shl    rcx,0xa
  4278a4:	add    ebx,0xfffffff6
  4278a7:	cmp    rcx,rbp
  4278aa:	jb     4278a0 <flatcc_json_printer_fmt_float@@Base+0x150>
  4278ac:	jmp    4278b5 <flatcc_json_printer_fmt_float@@Base+0x165>
  4278ae:	xchg   ax,ax
  4278b0:	add    rcx,rcx
  4278b3:	dec    ebx
  4278b5:	test   rcx,rcx
  4278b8:	jns    4278b0 <flatcc_json_printer_fmt_float@@Base+0x160>
  4278ba:	vxorps xmm1,xmm1,xmm1
  4278be:	vucomisd xmm0,xmm1
  4278c2:	jbe    428478 <flatcc_json_printer_fmt_float@@Base+0xd28>
  4278c8:	vmovsd xmm1,QWORD PTR [rip+0x138f0]        # 43b1c0 <flatcc_builder_padding_base@@Base+0x2b10>
  4278d0:	vucomisd xmm1,xmm0
  4278d4:	jb     428478 <flatcc_json_printer_fmt_float@@Base+0xd28>
  4278da:	test   r11,r11
  4278dd:	sete   r11b
  4278e1:	test   r8,r8
  4278e4:	setne  r8b
  4278e8:	or     r8b,r11b
  4278eb:	lea    r11,[r10+r10*1]
  4278ef:	lea    rbp,[r10*4+0x0]
  4278f7:	add    esi,0xfffffffe
  4278fa:	test   r8b,r8b
  4278fd:	cmovne rbp,r11
  427901:	cmovne esi,r9d
  427905:	dec    rbp
  427908:	sub    esi,ebx
  42790a:	shlx   r8,rbp,rsi
  42790f:	mov    esi,0xffffffc3
  427914:	sub    esi,eax
  427916:	vcvtsi2sd xmm1,xmm2,esi
  42791a:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x138a6]        # 43b1c8 <flatcc_builder_padding_base@@Base+0x2b18>
  427922:	vcvttsd2si esi,xmm1
  427926:	vxorpd xmm2,xmm2,xmm2
  42792a:	vucomisd xmm2,xmm1
  42792e:	ja     427949 <flatcc_json_printer_fmt_float@@Base+0x1f9>
  427930:	vcvtsi2sd xmm3,xmm3,esi
  427934:	vsubsd xmm1,xmm1,xmm3
  427938:	vcmpneqsd xmm1,xmm1,xmm2
  42793d:	vmovq  rbp,xmm1
  427942:	and    ebp,0x1
  427945:	add    ebp,esi
  427947:	mov    esi,ebp
  427949:	mov    ebp,esi
  42794b:	add    ebp,0x15b
  427951:	sar    ebp,0x1f
  427954:	shr    ebp,0x1d
  427957:	lea    esi,[rsi+rbp*1]
  42795a:	add    esi,0x15b
  427960:	sar    esi,0x3
  427963:	movsxd rsi,esi
  427966:	shl    rsi,0x4
  42796a:	lea    rbp,[rip+0x1395f]        # 43b2d0 <flatcc_builder_padding_base@@Base+0x2c20>
  427971:	mov    QWORD PTR [rsp+0x60],rsi
  427976:	mov    r14,QWORD PTR [rsi+rbp*1+0x10]
  42797b:	mov    r12d,r14d
  42797e:	shr    r14,0x20
  427982:	mov    rbp,r8
  427985:	shr    rbp,0x20
  427989:	mov    esi,r8d
  42798c:	mov    r8,r14
  42798f:	imul   r8,rbp
  427993:	mov    r15,r14
  427996:	imul   r15,rsi
  42799a:	mov    r9,r12
  42799d:	mov    QWORD PTR [rsp+0x80],rbp
  4279a5:	imul   r9,rbp
  4279a9:	imul   rsi,r12
  4279ad:	shr    rsi,0x20
  4279b1:	mov    ebp,r9d
  4279b4:	add    rbp,rsi
  4279b7:	mov    r10d,r15d
  4279ba:	add    r10,rbp
  4279bd:	sub    r10,0xffffffff80000000
  4279c4:	shr    r9,0x20
  4279c8:	shr    r15,0x20
  4279cc:	shr    r10,0x20
  4279d0:	mov    rsi,rcx
  4279d3:	shr    rsi,0x20
  4279d7:	mov    ecx,ecx
  4279d9:	mov    r13,r14
  4279dc:	imul   r13,rsi
  4279e0:	mov    r11,r14
  4279e3:	imul   r11,rcx
  4279e7:	mov    rbp,r12
  4279ea:	mov    QWORD PTR [rsp+0x70],rsi
  4279ef:	imul   rbp,rsi
  4279f3:	imul   rcx,r12
  4279f7:	shr    rcx,0x20
  4279fb:	mov    esi,ebp
  4279fd:	add    rsi,rcx
  427a00:	mov    ecx,r11d
  427a03:	add    rcx,rsi
  427a06:	sub    rcx,0xffffffff80000000
  427a0d:	shr    rbp,0x20
  427a11:	shr    r11,0x20
  427a15:	shr    rcx,0x20
  427a19:	mov    QWORD PTR [rsp+0x78],r9
  427a1e:	add    r8,r9
  427a21:	mov    QWORD PTR [rsp+0x88],r15
  427a29:	add    r8,r15
  427a2c:	mov    QWORD PTR [rsp+0x68],r10
  427a31:	add    r8,r10
  427a34:	add    r8,0xffffffffffffffff
  427a38:	mov    QWORD PTR [rsp+0x30],rbp
  427a3d:	mov    rsi,r13
  427a40:	add    rsi,rbp
  427a43:	mov    QWORD PTR [rsp+0x28],r11
  427a48:	add    rsi,r11
  427a4b:	mov    QWORD PTR [rsp+0x20],rcx
  427a50:	lea    r15,[rcx+rsi*1]
  427a54:	add    r15,0x1
  427a58:	mov    r11,r15
  427a5b:	sub    r11,r8
  427a5e:	jb     428459 <flatcc_json_printer_fmt_float@@Base+0xd09>
  427a64:	mov    QWORD PTR [rsp+0x50],r13
  427a69:	mov    rcx,QWORD PTR [rsp+0x60]
  427a6e:	lea    rsi,[rip+0x1385b]        # 43b2d0 <flatcc_builder_padding_base@@Base+0x2c20>
  427a75:	movsx  r9d,WORD PTR [rcx+rsi*1+0x18]
  427a7b:	mov    r8,rdx
  427a7e:	shr    r8,0x20
  427a82:	and    edx,0xfffffffe
  427a85:	mov    r13,r14
  427a88:	imul   r13,r8
  427a8c:	mov    QWORD PTR [rsp+0x90],r14
  427a94:	imul   r14,rdx
  427a98:	mov    rcx,r12
  427a9b:	imul   rcx,r8
  427a9f:	imul   r12,rdx
  427aa3:	shr    r12,0x20
  427aa7:	mov    edx,ecx
  427aa9:	add    rdx,r12
  427aac:	mov    ebp,r14d
  427aaf:	add    rbp,rdx
  427ab2:	sub    rbp,0xffffffff80000000
  427ab9:	shr    rcx,0x20
  427abd:	mov    QWORD PTR [rsp+0x40],r13
  427ac2:	mov    QWORD PTR [rsp+0x18],rcx
  427ac7:	add    rcx,r13
  427aca:	shr    r14,0x20
  427ace:	mov    QWORD PTR [rsp+0x48],r14
  427ad3:	add    rcx,r14
  427ad6:	shr    rbp,0x20
  427ada:	mov    QWORD PTR [rsp+0x38],rbp
  427adf:	add    rcx,rbp
  427ae2:	mov    QWORD PTR [rsp+0x58],rcx
  427ae7:	lea    eax,[r9+rax*1]
  427aeb:	add    eax,0x40
  427aee:	lea    ecx,[r9+rbx*1]
  427af2:	add    ecx,0x40
  427af5:	mov    DWORD PTR [rsp+0x10],ecx
  427af9:	mov    ebx,eax
  427afb:	neg    ebx
  427afd:	shrx   rdx,r15,rbx
  427b02:	bzhi   r9,r15,rbx
  427b07:	mov    DWORD PTR [rsp+0x14],eax
  427b0b:	imul   ecx,eax,0x4d1
  427b11:	add    ecx,0x13911
  427b17:	sar    ecx,0xc
  427b1a:	movsxd r13,ecx
  427b1d:	inc    ecx
  427b1f:	lea    rax,[rip+0x13d1a]        # 43b840 <flatcc_builder_padding_base@@Base+0x3190>
  427b26:	cmp    DWORD PTR [rax+r13*4+0x4],edx
  427b2b:	cmovbe r13d,ecx
  427b2f:	test   r13d,r13d
  427b32:	mov    QWORD PTR [rsp+0x8],rdi
  427b37:	jle    427b9f <flatcc_json_printer_fmt_float@@Base+0x44f>
  427b39:	movsxd rcx,r13d
  427b3c:	mov    esi,DWORD PTR [rax+rcx*4]
  427b3f:	lea    ebp,[r13-0x1]
  427b43:	neg    rbp
  427b46:	mov    r12d,0x1
  427b4c:	mov    edi,0xcccccccd
  427b51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  427b60:	mov    rcx,QWORD PTR [rsp]
  427b64:	mov    eax,edx
  427b66:	xor    edx,edx
  427b68:	div    esi
  427b6a:	add    al,0x30
  427b6c:	mov    BYTE PTR [rcx+r12*1-0x1],al
  427b71:	shlx   r14,rdx,rbx
  427b76:	lea    rcx,[r14+r9*1]
  427b7a:	mov    r10,r11
  427b7d:	sub    r10,rcx
  427b80:	ja     427ba7 <flatcc_json_printer_fmt_float@@Base+0x457>
  427b82:	lea    rax,[r12+rbp*1]
  427b86:	cmp    rax,0x1
  427b8a:	je     427cce <flatcc_json_printer_fmt_float@@Base+0x57e>
  427b90:	mov    esi,esi
  427b92:	imul   rsi,rdi
  427b96:	shr    rsi,0x23
  427b9a:	inc    r12
  427b9d:	jmp    427b60 <flatcc_json_printer_fmt_float@@Base+0x410>
  427b9f:	xor    r12d,r12d
  427ba2:	jmp    427cd1 <flatcc_json_printer_fmt_float@@Base+0x581>
  427ba7:	mov    eax,DWORD PTR [rsp+0x10]
  427bab:	cmp    eax,DWORD PTR [rsp+0x14]
  427baf:	jne    428459 <flatcc_json_printer_fmt_float@@Base+0xd09>
  427bb5:	sub    r15,QWORD PTR [rsp+0x58]
  427bba:	jb     428459 <flatcc_json_printer_fmt_float@@Base+0xd09>
  427bc0:	mov    eax,esi
  427bc2:	shlx   rax,rax,rbx
  427bc7:	lea    rbx,[r15-0x1]
  427bcb:	inc    r15
  427bce:	cmp    r10,rax
  427bd1:	setb   dil
  427bd5:	cmp    rbx,rcx
  427bd8:	mov    rdx,QWORD PTR [rsp+0x90]
  427be0:	jbe    427dfd <flatcc_json_printer_fmt_float@@Base+0x6ad>
  427be6:	cmp    r10,rax
  427be9:	jb     427dfd <flatcc_json_printer_fmt_float@@Base+0x6ad>
  427bef:	mov    rdi,QWORD PTR [rsp+0x70]
  427bf4:	mov    rbp,rdi
  427bf7:	sub    rbp,QWORD PTR [rsp+0x80]
  427bff:	mov    r10,rdx
  427c02:	mov    rdx,QWORD PTR [rsp+0x28]
  427c07:	mov    rsi,QWORD PTR [rsp+0x30]
  427c0c:	add    rsi,rdx
  427c0f:	add    rsi,QWORD PTR [rsp+0x20]
  427c14:	imul   rbp,r10
  427c18:	add    rbp,rsi
  427c1b:	sub    rbp,QWORD PTR [rsp+0x78]
  427c20:	sub    rbp,QWORD PTR [rsp+0x88]
  427c28:	sub    rbp,QWORD PTR [rsp+0x68]
  427c2d:	lea    rdx,[r9+rax*1]
  427c31:	add    rdx,r14
  427c34:	sub    rbp,rdx
  427c37:	sub    r8,rdi
  427c3a:	imul   r8,r10
  427c3e:	mov    rdi,QWORD PTR [rsp+0x48]
  427c43:	lea    rdx,[r9+rdi*1]
  427c47:	add    rdx,QWORD PTR [rsp+0x18]
  427c4c:	mov    r10,QWORD PTR [rsp+0x38]
  427c51:	add    rdx,r10
  427c54:	add    r8,rdx
  427c57:	sub    r8,QWORD PTR [rsp+0x30]
  427c5c:	sub    r8,QWORD PTR [rsp+0x28]
  427c61:	sub    r8,QWORD PTR [rsp+0x20]
  427c66:	add    rsi,QWORD PTR [rsp+0x50]
  427c6b:	add    rdi,QWORD PTR [rsp+0x18]
  427c70:	add    rdi,r10
  427c73:	add    rdi,QWORD PTR [rsp+0x40]
  427c78:	sub    rsi,rdi
  427c7b:	add    r8,r14
  427c7e:	add    r14,r9
  427c81:	sub    rsi,r14
  427c84:	add    rbp,0x2
  427c88:	mov    r10,QWORD PTR [rsp]
  427c8c:	nop    DWORD PTR [rax+0x0]
  427c90:	lea    rdx,[rcx+rax*1]
  427c94:	cmp    rdx,rbx
  427c97:	jb     427ca6 <flatcc_json_printer_fmt_float@@Base+0x556>
  427c99:	lea    rdi,[rax+r8*1]
  427c9d:	cmp    rsi,rdi
  427ca0:	jb     427e47 <flatcc_json_printer_fmt_float@@Base+0x6f7>
  427ca6:	dec    BYTE PTR [r10+r12*1-0x1]
  427cab:	sub    rbp,rax
  427cae:	setb   dil
  427cb2:	cmp    rdx,rbx
  427cb5:	jae    427e4c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  427cbb:	add    r8,rax
  427cbe:	sub    rsi,rax
  427cc1:	mov    rcx,rdx
  427cc4:	test   dil,dil
  427cc7:	je     427c90 <flatcc_json_printer_fmt_float@@Base+0x540>
  427cc9:	jmp    427e4c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  427cce:	sub    r13d,r12d
  427cd1:	mov    r10,QWORD PTR [rsp]
  427cd5:	mov    esi,0x1
  427cda:	shlx   r14,rsi,rbx
  427cdf:	lea    rax,[r14-0x1]
  427ce3:	mov    r8d,0xffffffff
  427ce9:	mov    r12d,r12d
  427cec:	mov    rdx,r12
  427cef:	shl    rdx,0x20
  427cf3:	movabs rcx,0xffffffff00000000
  427cfd:	add    rcx,rdx
  427d00:	mov    rdx,rsi
  427d03:	add    r9,r9
  427d06:	lea    r9,[r9+r9*4]
  427d0a:	add    rsi,rsi
  427d0d:	lea    rsi,[rsi+rsi*4]
  427d11:	mov    rdi,r11
  427d14:	add    rdi,r11
  427d17:	lea    r11,[rdi+rdi*4]
  427d1b:	shrx   rbp,r9,rbx
  427d20:	add    bpl,0x30
  427d24:	mov    BYTE PTR [r10+r12*1],bpl
  427d28:	inc    r12
  427d2b:	and    r9,rax
  427d2e:	dec    r13d
  427d31:	mov    rbp,r11
  427d34:	add    rcx,r8
  427d37:	add    rcx,0x1
  427d3b:	sub    rbp,r9
  427d3e:	jbe    427d00 <flatcc_json_printer_fmt_float@@Base+0x5b0>
  427d40:	mov    eax,DWORD PTR [rsp+0x10]
  427d44:	cmp    eax,DWORD PTR [rsp+0x14]
  427d48:	jne    428459 <flatcc_json_printer_fmt_float@@Base+0xd09>
  427d4e:	sub    r15,QWORD PTR [rsp+0x58]
  427d53:	jb     428459 <flatcc_json_printer_fmt_float@@Base+0xd09>
  427d59:	imul   r15,rsi
  427d5d:	lea    r8,[r15+rsi*1]
  427d61:	cmp    rbp,r14
  427d64:	setb   bl
  427d67:	jb     427e08 <flatcc_json_printer_fmt_float@@Base+0x6b8>
  427d6d:	sub    r15,rsi
  427d70:	mov    rbp,r15
  427d73:	sub    rbp,r9
  427d76:	jbe    427e08 <flatcc_json_printer_fmt_float@@Base+0x6b8>
  427d7c:	sar    rcx,0x20
  427d80:	lea    rax,[rdi+rdi*4]
  427d84:	lea    rsi,[r14+r9*1]
  427d88:	sub    rax,rsi
  427d8b:	mov    rsi,QWORD PTR [rsp+0x30]
  427d90:	add    rsi,QWORD PTR [rsp+0x28]
  427d95:	add    rsi,QWORD PTR [rsp+0x20]
  427d9a:	add    rsi,QWORD PTR [rsp+0x50]
  427d9f:	add    rsi,rsi
  427da2:	lea    rsi,[rsi+rsi*4]
  427da6:	mov    rdi,QWORD PTR [rsp+0x48]
  427dab:	add    rdi,QWORD PTR [rsp+0x18]
  427db0:	add    rdi,QWORD PTR [rsp+0x38]
  427db5:	add    rdi,QWORD PTR [rsp+0x40]
  427dba:	add    rdi,rdi
  427dbd:	lea    rdi,[rdi+rdi*4]
  427dc1:	sub    rdi,rsi
  427dc4:	imul   rdi,rdx
  427dc8:	add    rdi,r14
  427dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  427dd0:	lea    rsi,[r9+r14*1]
  427dd4:	cmp    rsi,r15
  427dd7:	jb     427de2 <flatcc_json_printer_fmt_float@@Base+0x692>
  427dd9:	lea    rbx,[rdi+r9*1]
  427ddd:	cmp    rbp,rbx
  427de0:	jb     427e06 <flatcc_json_printer_fmt_float@@Base+0x6b6>
  427de2:	dec    BYTE PTR [r10+rcx*1]
  427de6:	sub    rax,r14
  427de9:	setb   bl
  427dec:	cmp    rsi,r15
  427def:	jae    427e0b <flatcc_json_printer_fmt_float@@Base+0x6bb>
  427df1:	sub    rbp,r14
  427df4:	mov    r9,rsi
  427df7:	test   bl,bl
  427df9:	je     427dd0 <flatcc_json_printer_fmt_float@@Base+0x680>
  427dfb:	jmp    427e0b <flatcc_json_printer_fmt_float@@Base+0x6bb>
  427dfd:	mov    rdx,rcx
  427e00:	mov    r10,QWORD PTR [rsp]
  427e04:	jmp    427e4c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  427e06:	xor    ebx,ebx
  427e08:	mov    rsi,r9
  427e0b:	mov    rax,r8
  427e0e:	sub    rax,rsi
  427e11:	jbe    427e24 <flatcc_json_printer_fmt_float@@Base+0x6d4>
  427e13:	test   bl,bl
  427e15:	jne    427e24 <flatcc_json_printer_fmt_float@@Base+0x6d4>
  427e17:	add    r14,rsi
  427e1a:	sub    r14,r8
  427e1d:	jb     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e1f:	cmp    rax,r14
  427e22:	ja     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e24:	lea    rax,[rdx*4+0x0]
  427e2c:	lea    rax,[rax+rax*4]
  427e30:	cmp    rax,rsi
  427e33:	ja     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e35:	shl    rdx,0x3
  427e39:	lea    rax,[rdx+rdx*4]
  427e3d:	sub    r11,rax
  427e40:	cmp    rsi,r11
  427e43:	ja     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e45:	jmp    427eb5 <flatcc_json_printer_fmt_float@@Base+0x765>
  427e47:	xor    edi,edi
  427e49:	mov    rdx,rcx
  427e4c:	mov    rcx,r15
  427e4f:	sub    rcx,rdx
  427e52:	jbe    427e6e <flatcc_json_printer_fmt_float@@Base+0x71e>
  427e54:	test   dil,dil
  427e57:	jne    427e6e <flatcc_json_printer_fmt_float@@Base+0x71e>
  427e59:	add    rax,rdx
  427e5c:	sub    rax,r15
  427e5f:	jb     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e61:	cmp    rdx,0x2
  427e65:	jb     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e67:	cmp    rcx,rax
  427e6a:	jbe    427e74 <flatcc_json_printer_fmt_float@@Base+0x724>
  427e6c:	jmp    427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e6e:	cmp    rdx,0x2
  427e72:	jb     427e7d <flatcc_json_printer_fmt_float@@Base+0x72d>
  427e74:	add    r11,0xfffffffffffffffc
  427e78:	cmp    rdx,r11
  427e7b:	jbe    427eaf <flatcc_json_printer_fmt_float@@Base+0x75f>
  427e7d:	lea    rsi,[rip+0x13c7f]        # 43bb03 <flatcc_builder_padding_base@@Base+0x3453>
  427e84:	mov    rdi,r10
  427e87:	mov    al,0x1
  427e89:	call   406120 <sprintf@plt>
  427e8e:	mov    rdx,QWORD PTR [rsp]
  427e92:	sub    edx,DWORD PTR [rsp+0x8]
  427e96:	add    edx,eax
  427e98:	mov    eax,edx
  427e9a:	add    rsp,0x98
  427ea1:	pop    rbx
  427ea2:	pop    r12
  427ea4:	pop    r13
  427ea6:	pop    r14
  427ea8:	pop    r15
  427eaa:	pop    rbp
  427eab:	vzeroupper 
  427eae:	ret    
  427eaf:	mov    r13d,r13d
  427eb2:	sub    r13,r12
  427eb5:	mov    rax,QWORD PTR [rsp+0x60]
  427eba:	lea    rcx,[rip+0x1340f]        # 43b2d0 <flatcc_builder_padding_base@@Base+0x2c20>
  427ec1:	movsx  ebp,WORD PTR [rax+rcx*1+0x1a]
  427ec6:	mov    ebx,r13d
  427ec9:	sub    ebx,ebp
  427ecb:	mov    edx,ebx
  427ecd:	neg    edx
  427ecf:	lea    ecx,[r12-0x1]
  427ed4:	cmp    r12d,0x3
  427ed8:	mov    eax,0x1
  427edd:	cmovge eax,ecx
  427ee0:	cmp    eax,edx
  427ee2:	cmovg  eax,edx
  427ee5:	test   ebx,ebx
  427ee7:	js     427f10 <flatcc_json_printer_fmt_float@@Base+0x7c0>
  427ee9:	cmp    ebx,0x3
  427eec:	jb     427fc3 <flatcc_json_printer_fmt_float@@Base+0x873>
  427ef2:	movsxd rax,r12d
  427ef5:	mov    BYTE PTR [r10+rax*1],0x65
  427efa:	movsxd rax,r12d
  427efd:	inc    r12d
  427f00:	lea    r8,[rax+r10*1]
  427f04:	add    r8,0x1
  427f08:	mov    rcx,r8
  427f0b:	jmp    42809b <flatcc_json_printer_fmt_float@@Base+0x94b>
  427f10:	cmp    r12d,edx
  427f13:	jg     427ffa <flatcc_json_printer_fmt_float@@Base+0x8aa>
  427f19:	lea    r15d,[rbx+r12*1]
  427f1d:	cmp    r15d,0xfffffffe
  427f21:	jl     427ffa <flatcc_json_printer_fmt_float@@Base+0x8aa>
  427f27:	movsxd rax,ebx
  427f2a:	neg    rax
  427f2d:	lea    rdi,[r10+rax*1]
  427f31:	add    rdi,0x2
  427f35:	movsxd rdx,r12d
  427f38:	sub    rdi,rdx
  427f3b:	mov    rsi,r10
  427f3e:	call   406110 <memmove@plt>
  427f43:	mov    r10,QWORD PTR [rsp]
  427f47:	mov    WORD PTR [r10],0x2e30
  427f4d:	mov    eax,0x2
  427f52:	mov    r14d,0x2
  427f58:	sub    r14d,r15d
  427f5b:	cmp    r14d,0x3
  427f5f:	jl     427fb3 <flatcc_json_printer_fmt_float@@Base+0x863>
  427f61:	lea    rdi,[r10+0x2]
  427f65:	mov    ebx,r14d
  427f68:	not    r13d
  427f6b:	add    r13d,ebp
  427f6e:	sub    r13d,r12d
  427f71:	inc    r13
  427f74:	mov    esi,0x30
  427f79:	mov    rdx,r13
  427f7c:	call   406080 <memset@plt>
  427f81:	lea    eax,[r14-0x2]
  427f85:	lea    rcx,[rbx-0x3]
  427f89:	and    eax,0x7
  427f8c:	cmp    rcx,0x7
  427f90:	jb     427fa2 <flatcc_json_printer_fmt_float@@Base+0x852>
  427f92:	mov    rcx,rax
  427f95:	sub    rcx,rbx
  427f98:	add    rcx,0x2
  427f9c:	add    rcx,0x8
  427fa0:	jne    427f9c <flatcc_json_printer_fmt_float@@Base+0x84c>
  427fa2:	test   rax,rax
  427fa5:	mov    r10,QWORD PTR [rsp]
  427fa9:	je     427fb0 <flatcc_json_printer_fmt_float@@Base+0x860>
  427fab:	dec    rax
  427fae:	jne    427fab <flatcc_json_printer_fmt_float@@Base+0x85b>
  427fb0:	mov    eax,r14d
  427fb3:	add    eax,r12d
  427fb6:	mov    r12d,eax
  427fb9:	mov    r14,QWORD PTR [rsp+0x8]
  427fbe:	jmp    42825e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  427fc3:	test   ebx,ebx
  427fc5:	mov    r14,QWORD PTR [rsp+0x8]
  427fca:	je     42825e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  427fd0:	movsxd r12,r12d
  427fd3:	lea    rdi,[r10+r12*1]
  427fd7:	not    ebp
  427fd9:	add    r13d,ebp
  427fdc:	inc    r13
  427fdf:	mov    esi,0x30
  427fe4:	mov    rdx,r13
  427fe7:	call   406080 <memset@plt>
  427fec:	cmp    ebx,0x10
  427fef:	jae    428035 <flatcc_json_printer_fmt_float@@Base+0x8e5>
  427ff1:	mov    r10,QWORD PTR [rsp]
  427ff5:	jmp    428257 <flatcc_json_printer_fmt_float@@Base+0xb07>
  427ffa:	cmp    r12d,0x2
  427ffe:	jl     428074 <flatcc_json_printer_fmt_float@@Base+0x924>
  428000:	test   eax,eax
  428002:	mov    r14,QWORD PTR [rsp+0x8]
  428007:	jle    4282cc <flatcc_json_printer_fmt_float@@Base+0xb7c>
  42800d:	movsxd rdx,eax
  428010:	lea    rsi,[rdx-0x1]
  428014:	mov    r8d,eax
  428017:	and    r8d,0x7
  42801b:	cmp    rsi,0x7
  42801f:	jae    428273 <flatcc_json_printer_fmt_float@@Base+0xb23>
  428025:	xor    edx,edx
  428027:	test   r8,r8
  42802a:	jne    4282ae <flatcc_json_printer_fmt_float@@Base+0xb5e>
  428030:	jmp    4282cc <flatcc_json_printer_fmt_float@@Base+0xb7c>
  428035:	mov    eax,ebx
  428037:	and    eax,0xfffffff0
  42803a:	vmovq  xmm0,r12
  42803f:	lea    edx,[rax-0x10]
  428042:	mov    esi,edx
  428044:	shr    esi,0x4
  428047:	inc    esi
  428049:	mov    ecx,esi
  42804b:	and    ecx,0x7
  42804e:	cmp    edx,0x70
  428051:	jae    4281dd <flatcc_json_printer_fmt_float@@Base+0xa8d>
  428057:	vpxor  xmm1,xmm1,xmm1
  42805b:	vxorpd xmm2,xmm2,xmm2
  42805f:	vxorpd xmm3,xmm3,xmm3
  428063:	mov    r10,QWORD PTR [rsp]
  428067:	test   ecx,ecx
  428069:	jne    428213 <flatcc_json_printer_fmt_float@@Base+0xac3>
  42806f:	jmp    42822d <flatcc_json_printer_fmt_float@@Base+0xadd>
  428074:	movsxd rax,r12d
  428077:	movsxd rcx,r12d
  42807a:	lea    r12,[rax+0x1]
  42807e:	mov    BYTE PTR [r10+rcx*1],0x65
  428083:	lea    r8,[r10+rax*1]
  428087:	add    r8,0x1
  42808b:	lea    rcx,[r10+rax*1]
  42808f:	add    rcx,0x2
  428093:	mov    BYTE PTR [r10+rax*1+0x1],0x2d
  428099:	mov    ebx,edx
  42809b:	mov    r14,QWORD PTR [rsp+0x8]
  4280a0:	mov    rdx,rcx
  4280a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280ad:	nop    DWORD PTR [rax]
  4280b0:	movsxd rax,ebx
  4280b3:	imul   rbx,rax,0x66666667
  4280ba:	mov    rsi,rbx
  4280bd:	shr    rsi,0x3f
  4280c1:	sar    rbx,0x22
  4280c5:	add    ebx,esi
  4280c7:	lea    esi,[rbx+rbx*1]
  4280ca:	lea    esi,[rsi+rsi*4]
  4280cd:	mov    edi,eax
  4280cf:	sub    edi,esi
  4280d1:	add    dil,0x30
  4280d5:	mov    BYTE PTR [rdx],dil
  4280d8:	inc    rdx
  4280db:	add    eax,0x9
  4280de:	cmp    eax,0x12
  4280e1:	ja     4280b0 <flatcc_json_printer_fmt_float@@Base+0x960>
  4280e3:	mov    BYTE PTR [rdx],0x0
  4280e6:	mov    rbp,rdx
  4280e9:	sub    rbp,rcx
  4280ec:	cmp    ebp,0x2
  4280ef:	jl     4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4280f5:	mov    r10d,0xffffffff
  4280fb:	mov    rsi,rbp
  4280fe:	shr    rsi,1
  428101:	mov    r9d,esi
  428104:	and    r9d,0x7fffffff
  42810b:	lea    rbx,[r9-0x1]
  42810f:	and    esi,0x3
  428112:	cmp    rbx,0x3
  428116:	jae    428128 <flatcc_json_printer_fmt_float@@Base+0x9d8>
  428118:	xor    ebx,ebx
  42811a:	test   rsi,rsi
  42811d:	jne    4281ac <flatcc_json_printer_fmt_float@@Base+0xa5c>
  428123:	jmp    4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  428128:	sub    r9,rsi
  42812b:	xor    ebx,ebx
  42812d:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  428132:	mov    edi,ebx
  428134:	xor    edi,r10d
  428137:	add    edi,ebp
  428139:	movsxd rdi,edi
  42813c:	movzx  eax,BYTE PTR [rcx+rdi*1]
  428140:	mov    BYTE PTR [rcx+rbx*1],al
  428143:	mov    BYTE PTR [rcx+rdi*1],r11b
  428147:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  42814d:	lea    edi,[r10-0x1]
  428151:	xor    edi,ebx
  428153:	add    edi,ebp
  428155:	movsxd rdi,edi
  428158:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42815c:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  428160:	mov    BYTE PTR [rcx+rdi*1],r11b
  428164:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  42816a:	lea    edi,[r10-0x2]
  42816e:	xor    edi,ebx
  428170:	add    edi,ebp
  428172:	movsxd rdi,edi
  428175:	movzx  eax,BYTE PTR [rcx+rdi*1]
  428179:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  42817d:	mov    BYTE PTR [rcx+rdi*1],r11b
  428181:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  428187:	lea    edi,[r10-0x3]
  42818b:	xor    edi,ebx
  42818d:	add    edi,ebp
  42818f:	movsxd rdi,edi
  428192:	movzx  eax,BYTE PTR [rcx+rdi*1]
  428196:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  42819a:	mov    BYTE PTR [rcx+rdi*1],r11b
  42819e:	add    rbx,0x4
  4281a2:	cmp    r9,rbx
  4281a5:	jne    42812d <flatcc_json_printer_fmt_float@@Base+0x9dd>
  4281a7:	test   rsi,rsi
  4281aa:	je     4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4281ac:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  4281b1:	mov    edi,ebx
  4281b3:	xor    edi,r10d
  4281b6:	add    edi,ebp
  4281b8:	movsxd rdi,edi
  4281bb:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4281bf:	mov    BYTE PTR [rcx+rbx*1],al
  4281c2:	mov    BYTE PTR [rcx+rdi*1],r9b
  4281c6:	inc    rbx
  4281c9:	dec    rsi
  4281cc:	jne    4281ac <flatcc_json_printer_fmt_float@@Base+0xa5c>
  4281ce:	sub    edx,r8d
  4281d1:	add    r12d,edx
  4281d4:	mov    r10,QWORD PTR [rsp]
  4281d8:	jmp    42825e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  4281dd:	mov    edx,ecx
  4281df:	sub    edx,esi
  4281e1:	vpxor  xmm1,xmm1,xmm1
  4281e5:	vpbroadcastq ymm4,QWORD PTR [rip+0x1073a]        # 438928 <flatcc_builder_padding_base@@Base+0x278>
  4281ee:	vxorpd xmm2,xmm2,xmm2
  4281f2:	vxorpd xmm3,xmm3,xmm3
  4281f6:	mov    r10,QWORD PTR [rsp]
  4281fa:	vpaddq ymm0,ymm0,ymm4
  4281fe:	vpaddq ymm1,ymm1,ymm4
  428202:	vpaddq ymm2,ymm2,ymm4
  428206:	vpaddq ymm3,ymm3,ymm4
  42820a:	add    edx,0x8
  42820d:	jne    4281fa <flatcc_json_printer_fmt_float@@Base+0xaaa>
  42820f:	test   ecx,ecx
  428211:	je     42822d <flatcc_json_printer_fmt_float@@Base+0xadd>
  428213:	neg    ecx
  428215:	vpcmpeqd ymm4,ymm4,ymm4
  428219:	vpsubq ymm0,ymm0,ymm4
  42821d:	vpsubq ymm1,ymm1,ymm4
  428221:	vpsubq ymm2,ymm2,ymm4
  428225:	vpsubq ymm3,ymm3,ymm4
  428229:	inc    ecx
  42822b:	jne    428219 <flatcc_json_printer_fmt_float@@Base+0xac9>
  42822d:	vpaddq ymm1,ymm1,ymm3
  428231:	vpaddq ymm0,ymm0,ymm2
  428235:	vpaddq ymm0,ymm0,ymm1
  428239:	vextracti128 xmm1,ymm0,0x1
  42823f:	vpaddq xmm0,xmm0,xmm1
  428243:	vpshufd xmm1,xmm0,0x4e
  428248:	vpaddq xmm0,xmm0,xmm1
  42824c:	vmovq  r12,xmm0
  428251:	cmp    ebx,eax
  428253:	je     42825e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  428255:	sub    ebx,eax
  428257:	inc    r12
  42825a:	dec    ebx
  42825c:	jg     428257 <flatcc_json_printer_fmt_float@@Base+0xb07>
  42825e:	movsxd rax,r12d
  428261:	mov    BYTE PTR [r10+rax*1],0x0
  428266:	add    rax,r10
  428269:	sub    eax,r14d
  42826c:	mov    edx,eax
  42826e:	jmp    427e98 <flatcc_json_printer_fmt_float@@Base+0x748>
  428273:	movsxd rsi,r12d
  428276:	add    rsi,r10
  428279:	mov    rdi,r8
  42827c:	sub    rdi,rdx
  42827f:	xor    edx,edx
  428281:	mov    ebp,DWORD PTR [rsi+rdx*1-0x4]
  428285:	mov    DWORD PTR [rsi+rdx*1-0x3],ebp
  428289:	movzx  ebp,WORD PTR [rsi+rdx*1-0x8]
  42828e:	movzx  ecx,WORD PTR [rsi+rdx*1-0x6]
  428293:	mov    WORD PTR [rsi+rdx*1-0x5],cx
  428298:	mov    WORD PTR [rsi+rdx*1-0x7],bp
  42829d:	add    rdx,0xfffffffffffffff8
  4282a1:	cmp    rdi,rdx
  4282a4:	jne    428281 <flatcc_json_printer_fmt_float@@Base+0xb31>
  4282a6:	neg    rdx
  4282a9:	test   r8,r8
  4282ac:	je     4282cc <flatcc_json_printer_fmt_float@@Base+0xb7c>
  4282ae:	movsxd rsi,r12d
  4282b1:	sub    rsi,rdx
  4282b4:	add    rsi,r10
  4282b7:	neg    r8
  4282ba:	xor    edx,edx
  4282bc:	movzx  ecx,BYTE PTR [rsi+rdx*1-0x1]
  4282c1:	mov    BYTE PTR [rsi+rdx*1],cl
  4282c4:	dec    rdx
  4282c7:	cmp    r8,rdx
  4282ca:	jne    4282bc <flatcc_json_printer_fmt_float@@Base+0xb6c>
  4282cc:	movsxd rdx,r12d
  4282cf:	lea    rcx,[rdx+0x1]
  4282d3:	mov    esi,r12d
  4282d6:	sub    esi,eax
  4282d8:	movsxd rsi,esi
  4282db:	mov    BYTE PTR [r10+rsi*1],0x2e
  4282e0:	add    ebx,eax
  4282e2:	je     4282fa <flatcc_json_printer_fmt_float@@Base+0xbaa>
  4282e4:	mov    BYTE PTR [r10+rcx*1],0x65
  4282e9:	lea    r8,[rdx+r10*1]
  4282ed:	add    r8,0x2
  4282f1:	test   ebx,ebx
  4282f3:	js     428302 <flatcc_json_printer_fmt_float@@Base+0xbb2>
  4282f5:	mov    rcx,r8
  4282f8:	jmp    42830c <flatcc_json_printer_fmt_float@@Base+0xbbc>
  4282fa:	mov    r12d,ecx
  4282fd:	jmp    42825e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  428302:	lea    rcx,[r8+0x1]
  428306:	mov    BYTE PTR [r8],0x2d
  42830a:	neg    ebx
  42830c:	add    r12d,0x2
  428310:	mov    rdx,rcx
  428313:	movsxd rax,ebx
  428316:	imul   rbx,rax,0x66666667
  42831d:	mov    rsi,rbx
  428320:	shr    rsi,0x3f
  428324:	sar    rbx,0x22
  428328:	add    ebx,esi
  42832a:	lea    esi,[rbx+rbx*1]
  42832d:	lea    esi,[rsi+rsi*4]
  428330:	mov    edi,eax
  428332:	sub    edi,esi
  428334:	add    dil,0x30
  428338:	mov    BYTE PTR [rdx],dil
  42833b:	inc    rdx
  42833e:	add    eax,0x9
  428341:	cmp    eax,0x12
  428344:	ja     428313 <flatcc_json_printer_fmt_float@@Base+0xbc3>
  428346:	mov    BYTE PTR [rdx],0x0
  428349:	mov    rbp,rdx
  42834c:	sub    rbp,rcx
  42834f:	cmp    ebp,0x2
  428352:	jl     4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  428358:	mov    r10d,0xffffffff
  42835e:	mov    rsi,rbp
  428361:	shr    rsi,1
  428364:	mov    r9d,esi
  428367:	and    r9d,0x7fffffff
  42836e:	lea    rbx,[r9-0x1]
  428372:	and    esi,0x3
  428375:	cmp    rbx,0x3
  428379:	jae    42838b <flatcc_json_printer_fmt_float@@Base+0xc3b>
  42837b:	xor    ebx,ebx
  42837d:	test   rsi,rsi
  428380:	jne    428413 <flatcc_json_printer_fmt_float@@Base+0xcc3>
  428386:	jmp    4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  42838b:	sub    r9,rsi
  42838e:	xor    ebx,ebx
  428390:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  428395:	mov    edi,ebx
  428397:	xor    edi,r10d
  42839a:	add    edi,ebp
  42839c:	movsxd rdi,edi
  42839f:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4283a3:	mov    BYTE PTR [rcx+rbx*1],al
  4283a6:	mov    BYTE PTR [rcx+rdi*1],r11b
  4283aa:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  4283b0:	lea    edi,[r10-0x1]
  4283b4:	xor    edi,ebx
  4283b6:	add    edi,ebp
  4283b8:	movsxd rdi,edi
  4283bb:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4283bf:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  4283c3:	mov    BYTE PTR [rcx+rdi*1],r11b
  4283c7:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  4283cd:	lea    edi,[r10-0x2]
  4283d1:	xor    edi,ebx
  4283d3:	add    edi,ebp
  4283d5:	movsxd rdi,edi
  4283d8:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4283dc:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  4283e0:	mov    BYTE PTR [rcx+rdi*1],r11b
  4283e4:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  4283ea:	lea    edi,[r10-0x3]
  4283ee:	xor    edi,ebx
  4283f0:	add    edi,ebp
  4283f2:	movsxd rdi,edi
  4283f5:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4283f9:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  4283fd:	mov    BYTE PTR [rcx+rdi*1],r11b
  428401:	add    rbx,0x4
  428405:	cmp    r9,rbx
  428408:	jne    428390 <flatcc_json_printer_fmt_float@@Base+0xc40>
  42840a:	test   rsi,rsi
  42840d:	je     4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  428413:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  428418:	mov    edi,ebx
  42841a:	xor    edi,r10d
  42841d:	add    edi,ebp
  42841f:	movsxd rdi,edi
  428422:	movzx  eax,BYTE PTR [rcx+rdi*1]
  428426:	mov    BYTE PTR [rcx+rbx*1],al
  428429:	mov    BYTE PTR [rcx+rdi*1],r9b
  42842d:	inc    rbx
  428430:	dec    rsi
  428433:	jne    428413 <flatcc_json_printer_fmt_float@@Base+0xcc3>
  428435:	jmp    4281ce <flatcc_json_printer_fmt_float@@Base+0xa7e>
  42843a:	lea    rdi,[rip+0x13617]        # 43ba58 <flatcc_builder_padding_base@@Base+0x33a8>
  428441:	lea    rsi,[rip+0x13614]        # 43ba5c <flatcc_builder_padding_base@@Base+0x33ac>
  428448:	lea    rcx,[rip+0x1367e]        # 43bacd <flatcc_builder_padding_base@@Base+0x341d>
  42844f:	mov    edx,0xbd
  428454:	call   406070 <__assert_fail@plt>
  428459:	lea    rdi,[rip+0x136f7]        # 43bb57 <flatcc_builder_padding_base@@Base+0x34a7>
  428460:	lea    rsi,[rip+0x12bf0]        # 43b057 <flatcc_builder_padding_base@@Base+0x29a7>
  428467:	lea    rcx,[rip+0x13702]        # 43bb70 <flatcc_builder_padding_base@@Base+0x34c0>
  42846e:	mov    edx,0xef
  428473:	call   406070 <__assert_fail@plt>
  428478:	lea    rdi,[rip+0x1368a]        # 43bb09 <flatcc_builder_padding_base@@Base+0x3459>
  42847f:	lea    rsi,[rip+0x135d6]        # 43ba5c <flatcc_builder_padding_base@@Base+0x33ac>
  428486:	lea    rcx,[rip+0x136a1]        # 43bb2e <flatcc_builder_padding_base@@Base+0x347e>
  42848d:	mov    edx,0x8a
  428492:	call   406070 <__assert_fail@plt>
  428497:	lea    rdi,[rip+0x12bb0]        # 43b04e <flatcc_builder_padding_base@@Base+0x299e>
  42849e:	lea    rsi,[rip+0x12bb2]        # 43b057 <flatcc_builder_padding_base@@Base+0x29a7>
  4284a5:	lea    rcx,[rip+0x12c1b]        # 43b0c7 <flatcc_builder_padding_base@@Base+0x2a17>
  4284ac:	mov    edx,0x104
  4284b1:	call   406070 <__assert_fail@plt>
  4284b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004284c0 <flatcc_json_printer_fmt_double@@Base>:
  4284c0:	jmp    427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  4284c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284cf:	nop

00000000004284d0 <flatcc_json_printer_fmt_bool@@Base>:
  4284d0:	test   esi,esi
  4284d2:	je     4284e0 <flatcc_json_printer_fmt_bool@@Base+0x10>
  4284d4:	mov    DWORD PTR [rdi],0x65757274
  4284da:	mov    eax,0x4
  4284df:	ret    
  4284e0:	mov    BYTE PTR [rdi+0x4],0x65
  4284e4:	mov    DWORD PTR [rdi],0x736c6166
  4284ea:	mov    eax,0x5
  4284ef:	ret    

00000000004284f0 <flatcc_json_printer_string@@Base>:
  4284f0:	movsxd rdx,edx
  4284f3:	jmp    428500 <flatcc_json_printer_string@@Base+0x10>
  4284f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4284ff:	nop
  428500:	push   rbp
  428501:	push   r15
  428503:	push   r14
  428505:	push   r13
  428507:	push   r12
  428509:	push   rbx
  42850a:	sub    rsp,0x18
  42850e:	mov    r8,rdx
  428511:	mov    r13,rsi
  428514:	mov    r15,rdi
  428517:	lea    rax,[rdi+0x28]
  42851b:	mov    QWORD PTR [rsp],rax
  42851f:	mov    rax,QWORD PTR [rdi+0x28]
  428523:	lea    rcx,[rax+0x1]
  428527:	mov    QWORD PTR [rdi+0x28],rcx
  42852b:	mov    BYTE PTR [rax],0x22
  42852e:	jmp    4285a9 <flatcc_json_printer_string@@Base+0xb9>
  428530:	mov    rax,QWORD PTR [rsi]
  428533:	lea    rcx,[rax+0x1]
  428537:	mov    QWORD PTR [rsi],rcx
  42853a:	mov    BYTE PTR [rax],0x75
  42853d:	mov    rax,QWORD PTR [rsi]
  428540:	lea    rcx,[rax+0x1]
  428544:	mov    QWORD PTR [rsi],rcx
  428547:	mov    BYTE PTR [rax],0x30
  42854a:	mov    rax,QWORD PTR [rsi]
  42854d:	lea    rcx,[rax+0x1]
  428551:	mov    QWORD PTR [rsi],rcx
  428554:	mov    BYTE PTR [rax],0x30
  428557:	mov    eax,r14d
  42855a:	shr    al,0x4
  42855d:	cmp    r14b,0xa0
  428561:	mov    ecx,0x57
  428566:	mov    edi,0x30
  42856b:	cmovb  ecx,edi
  42856e:	add    cl,al
  428570:	mov    rax,QWORD PTR [rsi]
  428573:	lea    rdx,[rax+0x1]
  428577:	mov    QWORD PTR [rsi],rdx
  42857a:	mov    BYTE PTR [rax],cl
  42857c:	and    r14b,0xf
  428580:	cmp    r14b,0xa
  428584:	mov    eax,0x57
  428589:	cmovb  eax,edi
  42858c:	add    al,r14b
  42858f:	mov    rcx,QWORD PTR [rsi]
  428592:	lea    rdx,[rcx+0x1]
  428596:	mov    QWORD PTR [rsi],rdx
  428599:	mov    BYTE PTR [rcx],al
  42859b:	nop    DWORD PTR [rax+rax*1+0x0]
  4285a0:	inc    r12
  4285a3:	dec    r8
  4285a6:	mov    r13,r12
  4285a9:	mov    r14b,BYTE PTR [r13+0x0]
  4285ad:	mov    r12,r13
  4285b0:	cmp    r14b,0x20
  4285b4:	jb     4285db <flatcc_json_printer_string@@Base+0xeb>
  4285b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4285c0:	cmp    r14b,0x22
  4285c4:	je     4285db <flatcc_json_printer_string@@Base+0xeb>
  4285c6:	cmp    r14b,0x5c
  4285ca:	je     4285db <flatcc_json_printer_string@@Base+0xeb>
  4285cc:	movzx  r14d,BYTE PTR [r12+0x1]
  4285d2:	inc    r12
  4285d5:	cmp    r14b,0x1f
  4285d9:	ja     4285c0 <flatcc_json_printer_string@@Base+0xd0>
  4285db:	mov    rbx,r12
  4285de:	sub    rbx,r13
  4285e1:	mov    rbp,QWORD PTR [r15+0x20]
  4285e5:	mov    rdi,QWORD PTR [r15+0x28]
  4285e9:	lea    rax,[rdi+rbx*1]
  4285ed:	cmp    rax,rbp
  4285f0:	jae    428610 <flatcc_json_printer_string@@Base+0x120>
  4285f2:	mov    rsi,r13
  4285f5:	mov    rdx,rbx
  4285f8:	mov    rbp,r8
  4285fb:	call   4060d0 <memcpy@plt>
  428600:	mov    rdx,rbx
  428603:	mov    rsi,QWORD PTR [rsp]
  428607:	mov    r8,rbp
  42860a:	jmp    428687 <flatcc_json_printer_string@@Base+0x197>
  42860c:	nop    DWORD PTR [rax+0x0]
  428610:	cmp    rdi,rbp
  428613:	mov    QWORD PTR [rsp+0x10],r8
  428618:	jb     42862b <flatcc_json_printer_string@@Base+0x13b>
  42861a:	mov    rdi,r15
  42861d:	xor    esi,esi
  42861f:	call   QWORD PTR [r15+0x48]
  428623:	mov    rbp,QWORD PTR [r15+0x20]
  428627:	mov    rdi,QWORD PTR [r15+0x28]
  42862b:	sub    rbp,rdi
  42862e:	cmp    rbp,rbx
  428631:	mov    QWORD PTR [rsp+0x8],rbx
  428636:	jae    42866e <flatcc_json_printer_string@@Base+0x17e>
  428638:	nop    DWORD PTR [rax+rax*1+0x0]
  428640:	mov    rsi,r13
  428643:	mov    rdx,rbp
  428646:	call   4060d0 <memcpy@plt>
  42864b:	add    QWORD PTR [r15+0x28],rbp
  42864f:	add    r13,rbp
  428652:	sub    rbx,rbp
  428655:	mov    rdi,r15
  428658:	xor    esi,esi
  42865a:	call   QWORD PTR [r15+0x48]
  42865e:	mov    rbp,QWORD PTR [r15+0x20]
  428662:	mov    rdi,QWORD PTR [r15+0x28]
  428666:	sub    rbp,rdi
  428669:	cmp    rbx,rbp
  42866c:	ja     428640 <flatcc_json_printer_string@@Base+0x150>
  42866e:	mov    rsi,r13
  428671:	mov    rdx,rbx
  428674:	call   4060d0 <memcpy@plt>
  428679:	mov    r8,QWORD PTR [rsp+0x10]
  42867e:	mov    rsi,QWORD PTR [rsp]
  428682:	mov    rdx,QWORD PTR [rsp+0x8]
  428687:	mov    rcx,QWORD PTR [rsi]
  42868a:	lea    rax,[rcx+rbx*1]
  42868e:	add    rcx,rbx
  428691:	add    rcx,0x1
  428695:	mov    QWORD PTR [rsi],rcx
  428698:	sub    r8,rdx
  42869b:	je     428747 <flatcc_json_printer_string@@Base+0x257>
  4286a1:	mov    BYTE PTR [rax],0x5c
  4286a4:	lea    eax,[r14-0x8]
  4286a8:	cmp    al,0x1a
  4286aa:	ja     4286d1 <flatcc_json_printer_string@@Base+0x1e1>
  4286ac:	movzx  eax,al
  4286af:	lea    rcx,[rip+0x12b1a]        # 43b1d0 <flatcc_builder_padding_base@@Base+0x2b20>
  4286b6:	movsxd rax,DWORD PTR [rcx+rax*4]
  4286ba:	add    rax,rcx
  4286bd:	jmp    rax
  4286bf:	mov    rax,QWORD PTR [rsi]
  4286c2:	lea    rcx,[rax+0x1]
  4286c6:	mov    QWORD PTR [rsi],rcx
  4286c9:	mov    BYTE PTR [rax],0x62
  4286cc:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  4286d1:	cmp    r14b,0x5c
  4286d5:	jne    428530 <flatcc_json_printer_string@@Base+0x40>
  4286db:	mov    rax,QWORD PTR [rsi]
  4286de:	lea    rcx,[rax+0x1]
  4286e2:	mov    QWORD PTR [rsi],rcx
  4286e5:	mov    BYTE PTR [rax],0x5c
  4286e8:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  4286ed:	mov    rax,QWORD PTR [rsi]
  4286f0:	lea    rcx,[rax+0x1]
  4286f4:	mov    QWORD PTR [rsi],rcx
  4286f7:	mov    BYTE PTR [rax],0x74
  4286fa:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  4286ff:	mov    rax,QWORD PTR [rsi]
  428702:	lea    rcx,[rax+0x1]
  428706:	mov    QWORD PTR [rsi],rcx
  428709:	mov    BYTE PTR [rax],0x6e
  42870c:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  428711:	mov    rax,QWORD PTR [rsi]
  428714:	lea    rcx,[rax+0x1]
  428718:	mov    QWORD PTR [rsi],rcx
  42871b:	mov    BYTE PTR [rax],0x66
  42871e:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  428723:	mov    rax,QWORD PTR [rsi]
  428726:	lea    rcx,[rax+0x1]
  42872a:	mov    QWORD PTR [rsi],rcx
  42872d:	mov    BYTE PTR [rax],0x72
  428730:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  428735:	mov    rax,QWORD PTR [rsi]
  428738:	lea    rcx,[rax+0x1]
  42873c:	mov    QWORD PTR [rsi],rcx
  42873f:	mov    BYTE PTR [rax],0x22
  428742:	jmp    4285a0 <flatcc_json_printer_string@@Base+0xb0>
  428747:	mov    BYTE PTR [rax],0x22
  42874a:	add    rsp,0x18
  42874e:	pop    rbx
  42874f:	pop    r12
  428751:	pop    r13
  428753:	pop    r14
  428755:	pop    r15
  428757:	pop    rbp
  428758:	ret    
  428759:	nop    DWORD PTR [rax+0x0]

0000000000428760 <flatcc_json_printer_write@@Base>:
  428760:	push   r15
  428762:	push   r14
  428764:	push   r12
  428766:	push   rbx
  428767:	push   rax
  428768:	mov    r12,rsi
  42876b:	mov    r14,rdi
  42876e:	movsxd r15,edx
  428771:	mov    rbx,QWORD PTR [rdi+0x20]
  428775:	mov    rdi,QWORD PTR [rdi+0x28]
  428779:	lea    rax,[rdi+r15*1]
  42877d:	cmp    rax,rbx
  428780:	jb     4287ce <flatcc_json_printer_write@@Base+0x6e>
  428782:	cmp    rdi,rbx
  428785:	jb     428798 <flatcc_json_printer_write@@Base+0x38>
  428787:	mov    rdi,r14
  42878a:	xor    esi,esi
  42878c:	call   QWORD PTR [r14+0x48]
  428790:	mov    rbx,QWORD PTR [r14+0x20]
  428794:	mov    rdi,QWORD PTR [r14+0x28]
  428798:	sub    rbx,rdi
  42879b:	cmp    rbx,r15
  42879e:	jae    4287ce <flatcc_json_printer_write@@Base+0x6e>
  4287a0:	mov    rsi,r12
  4287a3:	mov    rdx,rbx
  4287a6:	call   4060d0 <memcpy@plt>
  4287ab:	add    QWORD PTR [r14+0x28],rbx
  4287af:	add    r12,rbx
  4287b2:	sub    r15,rbx
  4287b5:	mov    rdi,r14
  4287b8:	xor    esi,esi
  4287ba:	call   QWORD PTR [r14+0x48]
  4287be:	mov    rbx,QWORD PTR [r14+0x20]
  4287c2:	mov    rdi,QWORD PTR [r14+0x28]
  4287c6:	sub    rbx,rdi
  4287c9:	cmp    r15,rbx
  4287cc:	ja     4287a0 <flatcc_json_printer_write@@Base+0x40>
  4287ce:	mov    rsi,r12
  4287d1:	mov    rdx,r15
  4287d4:	call   4060d0 <memcpy@plt>
  4287d9:	add    QWORD PTR [r14+0x28],r15
  4287dd:	add    rsp,0x8
  4287e1:	pop    rbx
  4287e2:	pop    r12
  4287e4:	pop    r14
  4287e6:	pop    r15
  4287e8:	ret    
  4287e9:	nop    DWORD PTR [rax+0x0]

00000000004287f0 <flatcc_json_printer_nl@@Base>:
  4287f0:	mov    rax,QWORD PTR [rdi+0x28]
  4287f4:	lea    rcx,[rax+0x1]
  4287f8:	mov    QWORD PTR [rdi+0x28],rcx
  4287fc:	mov    BYTE PTR [rax],0xa
  4287ff:	mov    rax,QWORD PTR [rdi+0x28]
  428803:	cmp    rax,QWORD PTR [rdi+0x20]
  428807:	jae    42880a <flatcc_json_printer_nl@@Base+0x1a>
  428809:	ret    
  42880a:	mov    rax,QWORD PTR [rdi+0x48]
  42880e:	xor    esi,esi
  428810:	jmp    rax
  428812:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42881c:	nop    DWORD PTR [rax+0x0]

0000000000428820 <flatcc_json_printer_char@@Base>:
  428820:	mov    rax,QWORD PTR [rdi+0x28]
  428824:	lea    rcx,[rax+0x1]
  428828:	mov    QWORD PTR [rdi+0x28],rcx
  42882c:	mov    BYTE PTR [rax],sil
  42882f:	ret    

0000000000428830 <flatcc_json_printer_indent@@Base>:
  428830:	push   r15
  428832:	push   r14
  428834:	push   rbx
  428835:	mov    r14,rdi
  428838:	movsxd rax,DWORD PTR [rdi+0x38]
  42883c:	movzx  r15d,BYTE PTR [rdi+0x31]
  428841:	imul   r15,rax
  428845:	mov    rbx,QWORD PTR [rdi+0x20]
  428849:	mov    rdi,QWORD PTR [rdi+0x28]
  42884d:	lea    rax,[rdi+r15*1]
  428851:	cmp    rax,rbx
  428854:	jbe    4288ad <flatcc_json_printer_indent@@Base+0x7d>
  428856:	cmp    rdi,rbx
  428859:	jb     42886c <flatcc_json_printer_indent@@Base+0x3c>
  42885b:	mov    rdi,r14
  42885e:	xor    esi,esi
  428860:	call   QWORD PTR [r14+0x48]
  428864:	mov    rbx,QWORD PTR [r14+0x20]
  428868:	mov    rdi,QWORD PTR [r14+0x28]
  42886c:	sub    rbx,rdi
  42886f:	cmp    rbx,r15
  428872:	jae    4288ad <flatcc_json_printer_indent@@Base+0x7d>
  428874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42887e:	xchg   ax,ax
  428880:	mov    esi,0x20
  428885:	mov    rdx,rbx
  428888:	call   406080 <memset@plt>
  42888d:	add    QWORD PTR [r14+0x28],rbx
  428891:	sub    r15,rbx
  428894:	mov    rdi,r14
  428897:	xor    esi,esi
  428899:	call   QWORD PTR [r14+0x48]
  42889d:	mov    rbx,QWORD PTR [r14+0x20]
  4288a1:	mov    rdi,QWORD PTR [r14+0x28]
  4288a5:	sub    rbx,rdi
  4288a8:	cmp    r15,rbx
  4288ab:	ja     428880 <flatcc_json_printer_indent@@Base+0x50>
  4288ad:	mov    esi,0x20
  4288b2:	mov    rdx,r15
  4288b5:	call   406080 <memset@plt>
  4288ba:	add    QWORD PTR [r14+0x28],r15
  4288be:	pop    rbx
  4288bf:	pop    r14
  4288c1:	pop    r15
  4288c3:	ret    
  4288c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4288ce:	xchg   ax,ax

00000000004288d0 <flatcc_json_printer_add_level@@Base>:
  4288d0:	add    DWORD PTR [rdi+0x38],esi
  4288d3:	ret    
  4288d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4288de:	xchg   ax,ax

00000000004288e0 <flatcc_json_printer_get_level@@Base>:
  4288e0:	mov    eax,DWORD PTR [rdi+0x38]
  4288e3:	ret    
  4288e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4288ee:	xchg   ax,ax

00000000004288f0 <flatcc_json_printer_uint8@@Base>:
  4288f0:	mov    rax,QWORD PTR [rdi+0x28]
  4288f4:	cmp    sil,0x64
  4288f8:	jb     428933 <flatcc_json_printer_uint8@@Base+0x43>
  4288fa:	mov    BYTE PTR [rax+0x3],0x0
  4288fe:	movzx  ecx,sil
  428902:	lea    edx,[rcx+rcx*4]
  428905:	lea    ecx,[rcx+rdx*8]
  428908:	shr    ecx,0xc
  42890b:	imul   edx,ecx,0x64
  42890e:	sub    sil,dl
  428911:	movzx  edx,sil
  428915:	lea    rsi,[rip+0x13404]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42891c:	movzx  edx,WORD PTR [rsi+rdx*2]
  428920:	mov    WORD PTR [rax+0x1],dx
  428924:	or     cl,0x30
  428927:	mov    BYTE PTR [rax],cl
  428929:	mov    eax,0x3
  42892e:	add    QWORD PTR [rdi+0x28],rax
  428932:	ret    
  428933:	cmp    sil,0xa
  428937:	jb     42896c <flatcc_json_printer_uint8@@Base+0x7c>
  428939:	mov    BYTE PTR [rax+0x2],0x0
  42893d:	movzx  ecx,sil
  428941:	lea    edx,[rcx+rcx*4]
  428944:	lea    ecx,[rcx+rdx*8]
  428947:	shr    ecx,0xc
  42894a:	imul   ecx,ecx,0x64
  42894d:	sub    sil,cl
  428950:	movzx  ecx,sil
  428954:	lea    rdx,[rip+0x133c5]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42895b:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42895f:	mov    WORD PTR [rax],cx
  428962:	mov    eax,0x2
  428967:	add    QWORD PTR [rdi+0x28],rax
  42896b:	ret    
  42896c:	mov    BYTE PTR [rax+0x1],0x0
  428970:	add    sil,0x30
  428974:	mov    BYTE PTR [rax],sil
  428977:	mov    eax,0x1
  42897c:	add    QWORD PTR [rdi+0x28],rax
  428980:	ret    
  428981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42898b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428990 <flatcc_json_printer_uint16@@Base>:
  428990:	mov    rdx,QWORD PTR [rdi+0x28]
  428994:	cmp    esi,0x3e8
  42899a:	jb     4289af <flatcc_json_printer_uint16@@Base+0x1f>
  42899c:	movzx  ecx,si
  42899f:	xor    eax,eax
  4289a1:	cmp    ecx,0x270f
  4289a7:	seta   al
  4289aa:	or     eax,0x4
  4289ad:	jmp    4289d5 <flatcc_json_printer_uint16@@Base+0x45>
  4289af:	cmp    si,0x64
  4289b3:	jb     4289ca <flatcc_json_printer_uint16@@Base+0x3a>
  4289b5:	mov    BYTE PTR [rdx+0x3],0x0
  4289b9:	add    rdx,0x3
  4289bd:	mov    eax,0x3
  4289c2:	mov    r8,rdx
  4289c5:	jmp    428a8a <flatcc_json_printer_uint16@@Base+0xfa>
  4289ca:	xor    eax,eax
  4289cc:	cmp    si,0x9
  4289d0:	seta   al
  4289d3:	inc    eax
  4289d5:	mov    ecx,eax
  4289d7:	lea    r8,[rdx+rcx*1]
  4289db:	mov    BYTE PTR [rdx+rcx*1],0x0
  4289df:	test   al,0x1
  4289e1:	jne    428a49 <flatcc_json_printer_uint16@@Base+0xb9>
  4289e3:	cmp    eax,0x2
  4289e6:	je     428a1e <flatcc_json_printer_uint16@@Base+0x8e>
  4289e8:	cmp    eax,0x4
  4289eb:	jne    428abf <flatcc_json_printer_uint16@@Base+0x12f>
  4289f1:	movzx  ecx,si
  4289f4:	mov    edx,ecx
  4289f6:	shr    edx,0x2
  4289f9:	imul   esi,edx,0x147b
  4289ff:	shr    esi,0x11
  428a02:	imul   edx,esi,0x64
  428a05:	sub    ecx,edx
  428a07:	movzx  ecx,cx
  428a0a:	lea    rdx,[rip+0x1330f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428a11:	movzx  ecx,WORD PTR [rdx+rcx*2]
  428a15:	mov    WORD PTR [r8-0x2],cx
  428a1a:	add    r8,0xfffffffffffffffe
  428a1e:	movzx  ecx,si
  428a21:	mov    edx,ecx
  428a23:	shr    edx,0x2
  428a26:	imul   edx,edx,0x147b
  428a2c:	shr    edx,0x11
  428a2f:	imul   edx,edx,0x64
  428a32:	sub    ecx,edx
  428a34:	movzx  ecx,cx
  428a37:	lea    rdx,[rip+0x132e2]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428a3e:	movzx  ecx,WORD PTR [rdx+rcx*2]
  428a42:	mov    WORD PTR [r8-0x2],cx
  428a47:	jmp    428abf <flatcc_json_printer_uint16@@Base+0x12f>
  428a49:	cmp    eax,0x1
  428a4c:	je     428ab7 <flatcc_json_printer_uint16@@Base+0x127>
  428a4e:	cmp    eax,0x3
  428a51:	je     428a8a <flatcc_json_printer_uint16@@Base+0xfa>
  428a53:	cmp    eax,0x5
  428a56:	jne    428abf <flatcc_json_printer_uint16@@Base+0x12f>
  428a58:	movzx  eax,si
  428a5b:	mov    ecx,eax
  428a5d:	shr    ecx,0x2
  428a60:	imul   esi,ecx,0x147b
  428a66:	shr    esi,0x11
  428a69:	imul   ecx,esi,0x64
  428a6c:	sub    eax,ecx
  428a6e:	movzx  eax,ax
  428a71:	lea    rcx,[rip+0x132a8]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428a78:	movzx  eax,WORD PTR [rcx+rax*2]
  428a7c:	mov    WORD PTR [r8-0x2],ax
  428a81:	add    r8,0xfffffffffffffffe
  428a85:	mov    eax,0x5
  428a8a:	movzx  ecx,si
  428a8d:	mov    edx,ecx
  428a8f:	shr    edx,0x2
  428a92:	imul   esi,edx,0x147b
  428a98:	shr    esi,0x11
  428a9b:	imul   edx,esi,0x64
  428a9e:	sub    ecx,edx
  428aa0:	movzx  ecx,cx
  428aa3:	lea    rdx,[rip+0x13276]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428aaa:	movzx  ecx,WORD PTR [rdx+rcx*2]
  428aae:	mov    WORD PTR [r8-0x2],cx
  428ab3:	add    r8,0xfffffffffffffffe
  428ab7:	add    sil,0x30
  428abb:	mov    BYTE PTR [r8-0x1],sil
  428abf:	mov    eax,eax
  428ac1:	add    QWORD PTR [rdi+0x28],rax
  428ac5:	ret    
  428ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428ad0 <flatcc_json_printer_uint32@@Base>:
  428ad0:	push   rbx
  428ad1:	mov    eax,esi
  428ad3:	mov    rbx,rdi
  428ad6:	mov    rsi,QWORD PTR [rdi+0x28]
  428ada:	mov    edi,eax
  428adc:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  428ae1:	cdqe   
  428ae3:	add    QWORD PTR [rbx+0x28],rax
  428ae7:	pop    rbx
  428ae8:	ret    
  428ae9:	nop    DWORD PTR [rax+0x0]
  428af0:	cmp    edi,0x2710
  428af6:	jb     428b39 <flatcc_json_printer_uint32@@Base+0x69>
  428af8:	cmp    edi,0x989680
  428afe:	jb     428b4e <flatcc_json_printer_uint32@@Base+0x7e>
  428b00:	cmp    edi,0x3b9aca00
  428b06:	jb     428b75 <flatcc_json_printer_uint32@@Base+0xa5>
  428b08:	mov    BYTE PTR [rsi+0xa],0x0
  428b0c:	mov    eax,edi
  428b0e:	imul   rcx,rax,0x51eb851f
  428b15:	shr    rcx,0x25
  428b19:	imul   eax,ecx,0x64
  428b1c:	sub    edi,eax
  428b1e:	lea    rax,[rip+0x131fb]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428b25:	movzx  eax,WORD PTR [rax+rdi*2]
  428b29:	mov    WORD PTR [rsi+0x8],ax
  428b2d:	mov    eax,0xa
  428b32:	mov    edi,ecx
  428b34:	jmp    428bc1 <flatcc_json_printer_uint32@@Base+0xf1>
  428b39:	xor    eax,eax
  428b3b:	cmp    edi,0x64
  428b3e:	jb     428b6b <flatcc_json_printer_uint32@@Base+0x9b>
  428b40:	cmp    edi,0x3e7
  428b46:	seta   al
  428b49:	add    eax,0x3
  428b4c:	jmp    428b93 <flatcc_json_printer_uint32@@Base+0xc3>
  428b4e:	cmp    edi,0xf4240
  428b54:	jb     428b85 <flatcc_json_printer_uint32@@Base+0xb5>
  428b56:	mov    BYTE PTR [rsi+0x7],0x0
  428b5a:	add    rsi,0x7
  428b5e:	mov    eax,0x7
  428b63:	mov    r8,rsi
  428b66:	jmp    428cab <flatcc_json_printer_uint32@@Base+0x1db>
  428b6b:	cmp    edi,0x9
  428b6e:	seta   al
  428b71:	inc    eax
  428b73:	jmp    428b93 <flatcc_json_printer_uint32@@Base+0xc3>
  428b75:	xor    eax,eax
  428b77:	cmp    edi,0x5f5e0ff
  428b7d:	seta   al
  428b80:	or     eax,0x8
  428b83:	jmp    428b93 <flatcc_json_printer_uint32@@Base+0xc3>
  428b85:	xor    eax,eax
  428b87:	cmp    edi,0x1869f
  428b8d:	seta   al
  428b90:	add    eax,0x5
  428b93:	mov    edx,eax
  428b95:	lea    r8,[rsi+rdx*1]
  428b99:	mov    BYTE PTR [rsi+rdx*1],0x0
  428b9d:	test   al,0x1
  428b9f:	jne    428c62 <flatcc_json_printer_uint32@@Base+0x192>
  428ba5:	lea    ecx,[rax-0x2]
  428ba8:	cmp    ecx,0x6
  428bab:	ja     428d2b <flatcc_json_printer_uint32@@Base+0x25b>
  428bb1:	lea    r9,[rip+0x126a8]        # 43b260 <flatcc_builder_padding_base@@Base+0x2bb0>
  428bb8:	movsxd rcx,DWORD PTR [r9+rcx*4]
  428bbc:	add    rcx,r9
  428bbf:	jmp    rcx
  428bc1:	mov    ecx,edi
  428bc3:	imul   rcx,rcx,0x51eb851f
  428bca:	shr    rcx,0x25
  428bce:	imul   edx,ecx,0x64
  428bd1:	sub    edi,edx
  428bd3:	lea    rdx,[rip+0x13146]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428bda:	movzx  edx,WORD PTR [rdx+rdi*2]
  428bde:	mov    WORD PTR [rsi+0x6],dx
  428be2:	mov    edx,0x6
  428be7:	mov    edi,ecx
  428be9:	lea    r8,[rsi+rdx*1]
  428bed:	add    r8,0xfffffffffffffffe
  428bf1:	mov    ecx,edi
  428bf3:	imul   r9,rcx,0x51eb851f
  428bfa:	shr    r9,0x25
  428bfe:	imul   ecx,r9d,0x64
  428c02:	sub    edi,ecx
  428c04:	lea    rcx,[rip+0x13115]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428c0b:	movzx  ecx,WORD PTR [rcx+rdi*2]
  428c0f:	mov    WORD PTR [rsi+rdx*1-0x2],cx
  428c14:	mov    edi,r9d
  428c17:	mov    ecx,edi
  428c19:	imul   rcx,rcx,0x51eb851f
  428c20:	shr    rcx,0x25
  428c24:	imul   edx,ecx,0x64
  428c27:	sub    edi,edx
  428c29:	lea    rdx,[rip+0x130f0]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428c30:	movzx  edx,WORD PTR [rdx+rdi*2]
  428c34:	mov    WORD PTR [r8-0x2],dx
  428c39:	add    r8,0xfffffffffffffffe
  428c3d:	mov    edi,ecx
  428c3f:	mov    ecx,edi
  428c41:	imul   rcx,rcx,0x51eb851f
  428c48:	shr    rcx,0x25
  428c4c:	imul   ecx,ecx,0x64
  428c4f:	sub    edi,ecx
  428c51:	lea    rcx,[rip+0x130c8]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428c58:	movzx  ecx,WORD PTR [rcx+rdi*2]
  428c5c:	mov    WORD PTR [r8-0x2],cx
  428c61:	ret    
  428c62:	lea    edx,[rax-0x1]
  428c65:	cmp    edx,0x8
  428c68:	ja     428d2b <flatcc_json_printer_uint32@@Base+0x25b>
  428c6e:	lea    rcx,[rip+0x125c7]        # 43b23c <flatcc_builder_padding_base@@Base+0x2b8c>
  428c75:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  428c79:	add    rdx,rcx
  428c7c:	jmp    rdx
  428c7e:	mov    eax,edi
  428c80:	imul   rcx,rax,0x51eb851f
  428c87:	shr    rcx,0x25
  428c8b:	imul   eax,ecx,0x64
  428c8e:	sub    edi,eax
  428c90:	lea    rax,[rip+0x13089]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428c97:	movzx  eax,WORD PTR [rax+rdi*2]
  428c9b:	mov    WORD PTR [r8-0x2],ax
  428ca0:	add    r8,0xfffffffffffffffe
  428ca4:	mov    eax,0x9
  428ca9:	mov    edi,ecx
  428cab:	mov    ecx,edi
  428cad:	imul   rcx,rcx,0x51eb851f
  428cb4:	shr    rcx,0x25
  428cb8:	imul   edx,ecx,0x64
  428cbb:	sub    edi,edx
  428cbd:	lea    rdx,[rip+0x1305c]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428cc4:	movzx  edx,WORD PTR [rdx+rdi*2]
  428cc8:	mov    WORD PTR [r8-0x2],dx
  428ccd:	add    r8,0xfffffffffffffffe
  428cd1:	mov    edi,ecx
  428cd3:	mov    ecx,edi
  428cd5:	imul   rcx,rcx,0x51eb851f
  428cdc:	shr    rcx,0x25
  428ce0:	imul   edx,ecx,0x64
  428ce3:	sub    edi,edx
  428ce5:	lea    rdx,[rip+0x13034]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428cec:	movzx  edx,WORD PTR [rdx+rdi*2]
  428cf0:	mov    WORD PTR [r8-0x2],dx
  428cf5:	add    r8,0xfffffffffffffffe
  428cf9:	mov    edi,ecx
  428cfb:	mov    ecx,edi
  428cfd:	imul   rcx,rcx,0x51eb851f
  428d04:	shr    rcx,0x25
  428d08:	imul   edx,ecx,0x64
  428d0b:	sub    edi,edx
  428d0d:	lea    rdx,[rip+0x1300c]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428d14:	movzx  edx,WORD PTR [rdx+rdi*2]
  428d18:	mov    WORD PTR [r8-0x2],dx
  428d1d:	add    r8,0xfffffffffffffffe
  428d21:	mov    edi,ecx
  428d23:	add    dil,0x30
  428d27:	mov    BYTE PTR [r8-0x1],dil
  428d2b:	ret    
  428d2c:	nop    DWORD PTR [rax+0x0]

0000000000428d30 <flatcc_json_printer_uint64@@Base>:
  428d30:	push   rbx
  428d31:	mov    rax,rsi
  428d34:	mov    rbx,rdi
  428d37:	mov    rsi,QWORD PTR [rdi+0x28]
  428d3b:	mov    rdi,rax
  428d3e:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  428d43:	cdqe   
  428d45:	add    QWORD PTR [rbx+0x28],rax
  428d49:	pop    rbx
  428d4a:	ret    
  428d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  428d50:	cmp    rdi,0x3b9ac9ff
  428d57:	ja     428d5e <flatcc_json_printer_uint64@@Base+0x2e>
  428d59:	jmp    428af0 <flatcc_json_printer_uint32@@Base+0x20>
  428d5e:	mov    rax,rdi
  428d61:	shr    rax,0xd
  428d65:	movabs r8,0x28f5c28f5c28f5c3
  428d6f:	cmp    rax,0x48c27395
  428d75:	jb     428db6 <flatcc_json_printer_uint64@@Base+0x86>
  428d77:	movabs rax,0x2386f26fc10000
  428d81:	cmp    rdi,rax
  428d84:	jb     428ddf <flatcc_json_printer_uint64@@Base+0xaf>
  428d86:	movabs rax,0xde0b6b3a7640000
  428d90:	cmp    rdi,rax
  428d93:	jb     428e1e <flatcc_json_printer_uint64@@Base+0xee>
  428d99:	movabs rax,0x8ac7230489e7ffff
  428da3:	xor    r9d,r9d
  428da6:	cmp    rdi,rax
  428da9:	seta   r9b
  428dad:	add    r9d,0x13
  428db1:	jmp    428e50 <flatcc_json_printer_uint64@@Base+0x120>
  428db6:	mov    rax,rdi
  428db9:	shr    rax,0xb
  428dbd:	cmp    rax,0x2e90edd
  428dc3:	jb     428e04 <flatcc_json_printer_uint64@@Base+0xd4>
  428dc5:	mov    rax,rdi
  428dc8:	shr    rax,0xc
  428dcc:	xor    r9d,r9d
  428dcf:	cmp    rax,0xe8d4a50
  428dd5:	seta   r9b
  428dd9:	or     r9d,0xc
  428ddd:	jmp    428e50 <flatcc_json_printer_uint64@@Base+0x120>
  428ddf:	movabs rax,0x38d7ea4c68000
  428de9:	cmp    rdi,rax
  428dec:	jb     428e38 <flatcc_json_printer_uint64@@Base+0x108>
  428dee:	mov    BYTE PTR [rsi+0x10],0x0
  428df2:	add    rsi,0x10
  428df6:	mov    r9d,0x10
  428dfc:	mov    r11,rsi
  428dff:	jmp    428eda <flatcc_json_printer_uint64@@Base+0x1aa>
  428e04:	mov    rax,rdi
  428e07:	shr    rax,0xa
  428e0b:	xor    r9d,r9d
  428e0e:	cmp    rax,0x9502f8
  428e14:	seta   r9b
  428e18:	or     r9d,0xa
  428e1c:	jmp    428e50 <flatcc_json_printer_uint64@@Base+0x120>
  428e1e:	movabs rax,0x16345785d89ffff
  428e28:	xor    r9d,r9d
  428e2b:	cmp    rdi,rax
  428e2e:	seta   r9b
  428e32:	add    r9d,0x11
  428e36:	jmp    428e50 <flatcc_json_printer_uint64@@Base+0x120>
  428e38:	movabs rax,0x5af3107a3fff
  428e42:	xor    r9d,r9d
  428e45:	cmp    rdi,rax
  428e48:	seta   r9b
  428e4c:	or     r9d,0xe
  428e50:	mov    eax,r9d
  428e53:	lea    r11,[rsi+rax*1]
  428e57:	mov    BYTE PTR [rsi+rax*1],0x0
  428e5b:	test   r9b,0x1
  428e5f:	jne    428f8f <flatcc_json_printer_uint64@@Base+0x25f>
  428e65:	lea    eax,[r9-0xa]
  428e69:	cmp    eax,0xa
  428e6c:	ja     4290ca <flatcc_json_printer_uint64@@Base+0x39a>
  428e72:	lea    rdx,[rip+0x12427]        # 43b2a0 <flatcc_builder_padding_base@@Base+0x2bf0>
  428e79:	movsxd rax,DWORD PTR [rdx+rax*4]
  428e7d:	add    rax,rdx
  428e80:	jmp    rax
  428e82:	lea    rsi,[rip+0x12e97]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428e89:	mov    rax,rdi
  428e8c:	shr    rax,0x2
  428e90:	mul    r8
  428e93:	shr    rdx,0x2
  428e97:	imul   rax,rdx,0x64
  428e9b:	sub    rdi,rax
  428e9e:	movzx  eax,WORD PTR [rsi+rdi*2]
  428ea2:	mov    WORD PTR [r11-0x2],ax
  428ea7:	add    r11,0xfffffffffffffffe
  428eab:	mov    rdi,rdx
  428eae:	lea    rsi,[rip+0x12e6b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428eb5:	mov    rax,rdi
  428eb8:	shr    rax,0x2
  428ebc:	mul    r8
  428ebf:	shr    rdx,0x2
  428ec3:	imul   rax,rdx,0x64
  428ec7:	sub    rdi,rax
  428eca:	movzx  eax,WORD PTR [rsi+rdi*2]
  428ece:	mov    WORD PTR [r11-0x2],ax
  428ed3:	add    r11,0xfffffffffffffffe
  428ed7:	mov    rdi,rdx
  428eda:	lea    rsi,[rip+0x12e3f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428ee1:	mov    rax,rdi
  428ee4:	shr    rax,0x2
  428ee8:	mul    r8
  428eeb:	shr    rdx,0x2
  428eef:	imul   rax,rdx,0x64
  428ef3:	sub    rdi,rax
  428ef6:	movzx  eax,WORD PTR [rsi+rdi*2]
  428efa:	mov    WORD PTR [r11-0x2],ax
  428eff:	add    r11,0xfffffffffffffffe
  428f03:	mov    rdi,rdx
  428f06:	lea    rsi,[rip+0x12e13]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428f0d:	mov    rax,rdi
  428f10:	shr    rax,0x2
  428f14:	mul    r8
  428f17:	shr    rdx,0x2
  428f1b:	imul   rax,rdx,0x64
  428f1f:	sub    rdi,rax
  428f22:	movzx  eax,WORD PTR [rsi+rdi*2]
  428f26:	mov    WORD PTR [r11-0x2],ax
  428f2b:	add    r11,0xfffffffffffffffe
  428f2f:	mov    rdi,rdx
  428f32:	lea    rsi,[rip+0x12de7]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428f39:	mov    rax,rdi
  428f3c:	shr    rax,0x2
  428f40:	mul    r8
  428f43:	shr    rdx,0x2
  428f47:	imul   rax,rdx,0x64
  428f4b:	sub    rdi,rax
  428f4e:	movzx  eax,WORD PTR [rsi+rdi*2]
  428f52:	mov    WORD PTR [r11-0x2],ax
  428f57:	add    r11,0xfffffffffffffffe
  428f5b:	mov    rdi,rdx
  428f5e:	lea    rsi,[rip+0x12dbb]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428f65:	mov    rax,rdi
  428f68:	shr    rax,0x2
  428f6c:	mul    r8
  428f6f:	shr    rdx,0x2
  428f73:	imul   rax,rdx,0x64
  428f77:	sub    rdi,rax
  428f7a:	movzx  eax,WORD PTR [rsi+rdi*2]
  428f7e:	mov    WORD PTR [r11-0x2],ax
  428f83:	add    r11,0xfffffffffffffffe
  428f87:	mov    rdi,rdx
  428f8a:	jmp    4290ca <flatcc_json_printer_uint64@@Base+0x39a>
  428f8f:	lea    eax,[r9-0xb]
  428f93:	cmp    eax,0x8
  428f96:	ja     4290ca <flatcc_json_printer_uint64@@Base+0x39a>
  428f9c:	lea    rdx,[rip+0x122d9]        # 43b27c <flatcc_builder_padding_base@@Base+0x2bcc>
  428fa3:	movsxd rax,DWORD PTR [rdx+rax*4]
  428fa7:	add    rax,rdx
  428faa:	jmp    rax
  428fac:	lea    rsi,[rip+0x12d6d]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428fb3:	mov    rax,rdi
  428fb6:	shr    rax,0x2
  428fba:	mul    r8
  428fbd:	shr    rdx,0x2
  428fc1:	imul   rax,rdx,0x64
  428fc5:	sub    rdi,rax
  428fc8:	movzx  eax,WORD PTR [rsi+rdi*2]
  428fcc:	mov    WORD PTR [r11-0x2],ax
  428fd1:	add    r11,0xfffffffffffffffe
  428fd5:	mov    rdi,rdx
  428fd8:	lea    rsi,[rip+0x12d41]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  428fdf:	mov    rax,rdi
  428fe2:	shr    rax,0x2
  428fe6:	mul    r8
  428fe9:	shr    rdx,0x2
  428fed:	imul   rax,rdx,0x64
  428ff1:	sub    rdi,rax
  428ff4:	movzx  eax,WORD PTR [rsi+rdi*2]
  428ff8:	mov    WORD PTR [r11-0x2],ax
  428ffd:	add    r11,0xfffffffffffffffe
  429001:	mov    rdi,rdx
  429004:	lea    rsi,[rip+0x12d15]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42900b:	mov    rax,rdi
  42900e:	shr    rax,0x2
  429012:	mul    r8
  429015:	shr    rdx,0x2
  429019:	imul   rax,rdx,0x64
  42901d:	sub    rdi,rax
  429020:	movzx  eax,WORD PTR [rsi+rdi*2]
  429024:	mov    WORD PTR [r11-0x2],ax
  429029:	add    r11,0xfffffffffffffffe
  42902d:	mov    rdi,rdx
  429030:	lea    rsi,[rip+0x12ce9]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429037:	mov    rax,rdi
  42903a:	shr    rax,0x2
  42903e:	mul    r8
  429041:	shr    rdx,0x2
  429045:	imul   rax,rdx,0x64
  429049:	sub    rdi,rax
  42904c:	movzx  eax,WORD PTR [rsi+rdi*2]
  429050:	mov    WORD PTR [r11-0x2],ax
  429055:	add    r11,0xfffffffffffffffe
  429059:	mov    rdi,rdx
  42905c:	lea    r10,[rip+0x12cbd]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429063:	mov    rax,rdi
  429066:	shr    rax,0x2
  42906a:	mul    r8
  42906d:	mov    rsi,rdx
  429070:	shr    rsi,0x2
  429074:	imul   rax,rsi,0x64
  429078:	mov    rdx,rdi
  42907b:	sub    rdx,rax
  42907e:	movzx  eax,WORD PTR [r10+rdx*2]
  429083:	mov    WORD PTR [r11-0x2],ax
  429088:	movabs rdx,0xcccccccccccccccd
  429092:	mov    rax,rsi
  429095:	mul    rdx
  429098:	shr    edx,0x2
  42909b:	and    edx,0xfffffffe
  42909e:	lea    eax,[rdx+rdx*4]
  4290a1:	sub    esi,eax
  4290a3:	or     sil,0x30
  4290a7:	mov    BYTE PTR [r11-0x3],sil
  4290ab:	add    r11,0xfffffffffffffffd
  4290af:	shr    rdi,0x3
  4290b3:	movabs rdx,0x20c49ba5e353f7cf
  4290bd:	mov    rax,rdi
  4290c0:	mul    rdx
  4290c3:	mov    rdi,rdx
  4290c6:	shr    rdi,0x4
  4290ca:	lea    r10,[rip+0x12c4f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  4290d1:	mov    rax,rdi
  4290d4:	shr    rax,0x2
  4290d8:	mul    r8
  4290db:	mov    rax,rdx
  4290de:	mov    rsi,rdx
  4290e1:	shr    rsi,0x2
  4290e5:	imul   rdx,rsi,0x64
  4290e9:	mov    rcx,rdi
  4290ec:	sub    rcx,rdx
  4290ef:	movzx  ecx,WORD PTR [r10+rcx*2]
  4290f4:	shr    rax,0x4
  4290f8:	mul    r8
  4290fb:	mov    WORD PTR [r11-0x2],cx
  429100:	shr    rdx,0x2
  429104:	imul   rcx,rdx,0x64
  429108:	movabs rdx,0x346dc5d63886594b
  429112:	mov    rax,rdi
  429115:	mul    rdx
  429118:	mov    rax,rdx
  42911b:	sub    rsi,rcx
  42911e:	mov    rcx,rdx
  429121:	shr    rcx,0xb
  429125:	movzx  esi,WORD PTR [r10+rsi*2]
  42912a:	shr    rax,0xd
  42912e:	mul    r8
  429131:	mov    WORD PTR [r11-0x4],si
  429136:	shr    rdx,0x2
  42913a:	imul   rsi,rdx,0x64
  42913e:	movabs rdx,0x431bde82d7b634db
  429148:	mov    rax,rdi
  42914b:	mul    rdx
  42914e:	mov    rax,rdx
  429151:	sub    rcx,rsi
  429154:	mov    rsi,rdx
  429157:	shr    rsi,0x12
  42915b:	movzx  ecx,WORD PTR [r10+rcx*2]
  429160:	shr    rax,0x14
  429164:	mul    r8
  429167:	mov    WORD PTR [r11-0x6],cx
  42916c:	shr    rdx,0x2
  429170:	imul   rax,rdx,0x64
  429174:	sub    rsi,rax
  429177:	movzx  eax,WORD PTR [r10+rsi*2]
  42917c:	mov    WORD PTR [r11-0x8],ax
  429181:	mov    eax,r9d
  429184:	ret    
  429185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42918f:	nop

0000000000429190 <flatcc_json_printer_int8@@Base>:
  429190:	mov    rcx,QWORD PTR [rdi+0x28]
  429194:	mov    eax,esi
  429196:	shr    al,0x7
  429199:	movzx  r8d,al
  42919d:	test   sil,sil
  4291a0:	js     4291dd <flatcc_json_printer_int8@@Base+0x4d>
  4291a2:	cmp    sil,0x64
  4291a6:	jb     4291ec <flatcc_json_printer_int8@@Base+0x5c>
  4291a8:	mov    BYTE PTR [rcx+0x3],0x0
  4291ac:	movzx  edx,sil
  4291b0:	lea    eax,[rdx+rdx*4]
  4291b3:	lea    eax,[rdx+rax*8]
  4291b6:	shr    eax,0xc
  4291b9:	imul   edx,eax,0x64
  4291bc:	sub    sil,dl
  4291bf:	movzx  edx,sil
  4291c3:	lea    rsi,[rip+0x12b56]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  4291ca:	movzx  edx,WORD PTR [rsi+rdx*2]
  4291ce:	mov    WORD PTR [rcx+0x1],dx
  4291d2:	or     al,0x30
  4291d4:	mov    BYTE PTR [rcx],al
  4291d6:	mov    ecx,0x3
  4291db:	jmp    429232 <flatcc_json_printer_int8@@Base+0xa2>
  4291dd:	mov    BYTE PTR [rcx],0x2d
  4291e0:	inc    rcx
  4291e3:	neg    sil
  4291e6:	cmp    sil,0x64
  4291ea:	jae    4291a8 <flatcc_json_printer_int8@@Base+0x18>
  4291ec:	cmp    sil,0xa
  4291f0:	jb     429222 <flatcc_json_printer_int8@@Base+0x92>
  4291f2:	mov    BYTE PTR [rcx+0x2],0x0
  4291f6:	movzx  eax,sil
  4291fa:	lea    edx,[rax+rax*4]
  4291fd:	lea    eax,[rax+rdx*8]
  429200:	shr    eax,0xc
  429203:	imul   eax,eax,0x64
  429206:	sub    sil,al
  429209:	movzx  eax,sil
  42920d:	lea    rdx,[rip+0x12b0c]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429214:	movzx  eax,WORD PTR [rdx+rax*2]
  429218:	mov    WORD PTR [rcx],ax
  42921b:	mov    ecx,0x2
  429220:	jmp    429232 <flatcc_json_printer_int8@@Base+0xa2>
  429222:	mov    BYTE PTR [rcx+0x1],0x0
  429226:	add    sil,0x30
  42922a:	mov    BYTE PTR [rcx],sil
  42922d:	mov    ecx,0x1
  429232:	add    rcx,r8
  429235:	add    QWORD PTR [rdi+0x28],rcx
  429239:	ret    
  42923a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429240 <flatcc_json_printer_int16@@Base>:
  429240:	movzx  r8d,si
  429244:	mov    rdx,QWORD PTR [rdi+0x28]
  429248:	test   r8w,r8w
  42924c:	jns    429256 <flatcc_json_printer_int16@@Base+0x16>
  42924e:	mov    BYTE PTR [rdx],0x2d
  429251:	inc    rdx
  429254:	neg    esi
  429256:	shr    r8d,0xf
  42925a:	movzx  r10d,si
  42925e:	cmp    r10d,0x3e8
  429265:	jb     429278 <flatcc_json_printer_int16@@Base+0x38>
  429267:	xor    ecx,ecx
  429269:	cmp    r10d,0x270f
  429270:	seta   cl
  429273:	or     ecx,0x4
  429276:	jmp    42929e <flatcc_json_printer_int16@@Base+0x5e>
  429278:	cmp    si,0x64
  42927c:	jb     429293 <flatcc_json_printer_int16@@Base+0x53>
  42927e:	mov    BYTE PTR [rdx+0x3],0x0
  429282:	add    rdx,0x3
  429286:	mov    ecx,0x3
  42928b:	mov    r9,rdx
  42928e:	jmp    429354 <flatcc_json_printer_int16@@Base+0x114>
  429293:	xor    ecx,ecx
  429295:	cmp    si,0x9
  429299:	seta   cl
  42929c:	inc    ecx
  42929e:	mov    eax,ecx
  4292a0:	lea    r9,[rdx+rax*1]
  4292a4:	mov    BYTE PTR [rdx+rax*1],0x0
  4292a8:	test   cl,0x1
  4292ab:	jne    429313 <flatcc_json_printer_int16@@Base+0xd3>
  4292ad:	cmp    ecx,0x2
  4292b0:	je     4292e8 <flatcc_json_printer_int16@@Base+0xa8>
  4292b2:	cmp    ecx,0x4
  4292b5:	jne    429389 <flatcc_json_printer_int16@@Base+0x149>
  4292bb:	mov    eax,r10d
  4292be:	shr    eax,0x2
  4292c1:	imul   esi,eax,0x147b
  4292c7:	shr    esi,0x11
  4292ca:	imul   eax,esi,0x64
  4292cd:	sub    r10d,eax
  4292d0:	movzx  eax,r10w
  4292d4:	lea    rdx,[rip+0x12a45]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  4292db:	movzx  eax,WORD PTR [rdx+rax*2]
  4292df:	mov    WORD PTR [r9-0x2],ax
  4292e4:	add    r9,0xfffffffffffffffe
  4292e8:	movzx  eax,si
  4292eb:	mov    edx,eax
  4292ed:	shr    edx,0x2
  4292f0:	imul   edx,edx,0x147b
  4292f6:	shr    edx,0x11
  4292f9:	imul   edx,edx,0x64
  4292fc:	sub    eax,edx
  4292fe:	movzx  eax,ax
  429301:	lea    rdx,[rip+0x12a18]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429308:	movzx  eax,WORD PTR [rdx+rax*2]
  42930c:	mov    WORD PTR [r9-0x2],ax
  429311:	jmp    429389 <flatcc_json_printer_int16@@Base+0x149>
  429313:	cmp    ecx,0x1
  429316:	je     429381 <flatcc_json_printer_int16@@Base+0x141>
  429318:	cmp    ecx,0x3
  42931b:	je     429354 <flatcc_json_printer_int16@@Base+0x114>
  42931d:	cmp    ecx,0x5
  429320:	jne    429389 <flatcc_json_printer_int16@@Base+0x149>
  429322:	mov    eax,r10d
  429325:	shr    eax,0x2
  429328:	imul   esi,eax,0x147b
  42932e:	shr    esi,0x11
  429331:	imul   eax,esi,0x64
  429334:	sub    r10d,eax
  429337:	movzx  eax,r10w
  42933b:	lea    rcx,[rip+0x129de]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429342:	movzx  eax,WORD PTR [rcx+rax*2]
  429346:	mov    WORD PTR [r9-0x2],ax
  42934b:	add    r9,0xfffffffffffffffe
  42934f:	mov    ecx,0x5
  429354:	movzx  eax,si
  429357:	mov    edx,eax
  429359:	shr    edx,0x2
  42935c:	imul   esi,edx,0x147b
  429362:	shr    esi,0x11
  429365:	imul   edx,esi,0x64
  429368:	sub    eax,edx
  42936a:	movzx  eax,ax
  42936d:	lea    rdx,[rip+0x129ac]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429374:	movzx  eax,WORD PTR [rdx+rax*2]
  429378:	mov    WORD PTR [r9-0x2],ax
  42937d:	add    r9,0xfffffffffffffffe
  429381:	add    sil,0x30
  429385:	mov    BYTE PTR [r9-0x1],sil
  429389:	add    ecx,r8d
  42938c:	add    QWORD PTR [rdi+0x28],rcx
  429390:	ret    
  429391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42939b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004293a0 <flatcc_json_printer_int32@@Base>:
  4293a0:	push   rbp
  4293a1:	push   rbx
  4293a2:	push   rax
  4293a3:	mov    eax,esi
  4293a5:	mov    rbx,rdi
  4293a8:	mov    rsi,QWORD PTR [rdi+0x28]
  4293ac:	mov    ebp,eax
  4293ae:	shr    ebp,0x1f
  4293b1:	test   eax,eax
  4293b3:	jns    4293bd <flatcc_json_printer_int32@@Base+0x1d>
  4293b5:	mov    BYTE PTR [rsi],0x2d
  4293b8:	inc    rsi
  4293bb:	neg    eax
  4293bd:	mov    edi,eax
  4293bf:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  4293c4:	add    eax,ebp
  4293c6:	cdqe   
  4293c8:	add    QWORD PTR [rbx+0x28],rax
  4293cc:	add    rsp,0x8
  4293d0:	pop    rbx
  4293d1:	pop    rbp
  4293d2:	ret    
  4293d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293dd:	nop    DWORD PTR [rax]

00000000004293e0 <flatcc_json_printer_int64@@Base>:
  4293e0:	push   r14
  4293e2:	push   rbx
  4293e3:	push   rax
  4293e4:	mov    rax,rsi
  4293e7:	mov    r14,rdi
  4293ea:	mov    rsi,QWORD PTR [rdi+0x28]
  4293ee:	mov    rbx,rax
  4293f1:	shr    rbx,0x3f
  4293f5:	test   rax,rax
  4293f8:	jns    429403 <flatcc_json_printer_int64@@Base+0x23>
  4293fa:	mov    BYTE PTR [rsi],0x2d
  4293fd:	inc    rsi
  429400:	neg    rax
  429403:	mov    rdi,rax
  429406:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42940b:	add    eax,ebx
  42940d:	cdqe   
  42940f:	add    QWORD PTR [r14+0x28],rax
  429413:	add    rsp,0x8
  429417:	pop    rbx
  429418:	pop    r14
  42941a:	ret    
  42941b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429420 <flatcc_json_printer_float@@Base>:
  429420:	push   rbx
  429421:	mov    rbx,rdi
  429424:	vcvtss2sd xmm0,xmm0,xmm0
  429428:	mov    rdi,QWORD PTR [rdi+0x28]
  42942c:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  429431:	cdqe   
  429433:	add    QWORD PTR [rbx+0x28],rax
  429437:	pop    rbx
  429438:	ret    
  429439:	nop    DWORD PTR [rax+0x0]

0000000000429440 <flatcc_json_printer_double@@Base>:
  429440:	push   rbx
  429441:	mov    rbx,rdi
  429444:	mov    rdi,QWORD PTR [rdi+0x28]
  429448:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42944d:	cdqe   
  42944f:	add    QWORD PTR [rbx+0x28],rax
  429453:	pop    rbx
  429454:	ret    
  429455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42945f:	nop

0000000000429460 <flatcc_json_printer_enum@@Base>:
  429460:	push   r15
  429462:	push   r14
  429464:	push   r12
  429466:	push   rbx
  429467:	push   rax
  429468:	mov    r12,rsi
  42946b:	mov    r14,rdi
  42946e:	movsxd r15,edx
  429471:	mov    rax,QWORD PTR [rdi+0x28]
  429475:	mov    BYTE PTR [rax],0x22
  429478:	mov    rbx,QWORD PTR [rdi+0x20]
  42947c:	mov    rdi,QWORD PTR [rdi+0x28]
  429480:	cmp    BYTE PTR [r14+0x32],0x1
  429485:	adc    rdi,0x0
  429489:	mov    QWORD PTR [r14+0x28],rdi
  42948d:	lea    rax,[rdi+r15*1]
  429491:	cmp    rax,rbx
  429494:	jb     4294ee <flatcc_json_printer_enum@@Base+0x8e>
  429496:	cmp    rdi,rbx
  429499:	jb     4294ac <flatcc_json_printer_enum@@Base+0x4c>
  42949b:	mov    rdi,r14
  42949e:	xor    esi,esi
  4294a0:	call   QWORD PTR [r14+0x48]
  4294a4:	mov    rbx,QWORD PTR [r14+0x20]
  4294a8:	mov    rdi,QWORD PTR [r14+0x28]
  4294ac:	sub    rbx,rdi
  4294af:	cmp    rbx,r15
  4294b2:	jae    4294ee <flatcc_json_printer_enum@@Base+0x8e>
  4294b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294be:	xchg   ax,ax
  4294c0:	mov    rsi,r12
  4294c3:	mov    rdx,rbx
  4294c6:	call   4060d0 <memcpy@plt>
  4294cb:	add    QWORD PTR [r14+0x28],rbx
  4294cf:	add    r12,rbx
  4294d2:	sub    r15,rbx
  4294d5:	mov    rdi,r14
  4294d8:	xor    esi,esi
  4294da:	call   QWORD PTR [r14+0x48]
  4294de:	mov    rbx,QWORD PTR [r14+0x20]
  4294e2:	mov    rdi,QWORD PTR [r14+0x28]
  4294e6:	sub    rbx,rdi
  4294e9:	cmp    r15,rbx
  4294ec:	ja     4294c0 <flatcc_json_printer_enum@@Base+0x60>
  4294ee:	mov    rsi,r12
  4294f1:	mov    rdx,r15
  4294f4:	call   4060d0 <memcpy@plt>
  4294f9:	mov    rax,QWORD PTR [r14+0x28]
  4294fd:	lea    rcx,[rax+r15*1]
  429501:	mov    QWORD PTR [r14+0x28],rcx
  429505:	mov    BYTE PTR [rax+r15*1],0x22
  42950a:	cmp    BYTE PTR [r14+0x32],0x1
  42950f:	adc    QWORD PTR [r14+0x28],0x0
  429514:	add    rsp,0x8
  429518:	pop    rbx
  429519:	pop    r12
  42951b:	pop    r14
  42951d:	pop    r15
  42951f:	ret    

0000000000429520 <flatcc_json_printer_delimit_enum_flags@@Base>:
  429520:	cmp    BYTE PTR [rdi+0x32],0x0
  429524:	sete   al
  429527:	test   esi,esi
  429529:	setne  cl
  42952c:	or     cl,al
  42952e:	mov    rax,QWORD PTR [rdi+0x28]
  429532:	mov    BYTE PTR [rax],0x22
  429535:	movzx  eax,cl
  429538:	add    QWORD PTR [rdi+0x28],rax
  42953c:	ret    
  42953d:	nop    DWORD PTR [rax]

0000000000429540 <flatcc_json_printer_enum_flag@@Base>:
  429540:	push   r15
  429542:	push   r14
  429544:	push   r12
  429546:	push   rbx
  429547:	push   rax
  429548:	mov    r14,rdi
  42954b:	mov    rax,QWORD PTR [rdi+0x28]
  42954f:	mov    BYTE PTR [rax],0x20
  429552:	xor    edi,edi
  429554:	test   esi,esi
  429556:	setg   dil
  42955a:	add    rdi,QWORD PTR [r14+0x28]
  42955e:	mov    r12,rdx
  429561:	mov    QWORD PTR [r14+0x28],rdi
  429565:	movsxd r15,ecx
  429568:	lea    rax,[rdi+r15*1]
  42956c:	mov    rbx,QWORD PTR [r14+0x20]
  429570:	cmp    rax,rbx
  429573:	jb     4295ce <flatcc_json_printer_enum_flag@@Base+0x8e>
  429575:	cmp    rdi,rbx
  429578:	jb     42958b <flatcc_json_printer_enum_flag@@Base+0x4b>
  42957a:	mov    rdi,r14
  42957d:	xor    esi,esi
  42957f:	call   QWORD PTR [r14+0x48]
  429583:	mov    rbx,QWORD PTR [r14+0x20]
  429587:	mov    rdi,QWORD PTR [r14+0x28]
  42958b:	sub    rbx,rdi
  42958e:	cmp    rbx,r15
  429591:	jae    4295ce <flatcc_json_printer_enum_flag@@Base+0x8e>
  429593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42959d:	nop    DWORD PTR [rax]
  4295a0:	mov    rsi,r12
  4295a3:	mov    rdx,rbx
  4295a6:	call   4060d0 <memcpy@plt>
  4295ab:	add    QWORD PTR [r14+0x28],rbx
  4295af:	add    r12,rbx
  4295b2:	sub    r15,rbx
  4295b5:	mov    rdi,r14
  4295b8:	xor    esi,esi
  4295ba:	call   QWORD PTR [r14+0x48]
  4295be:	mov    rbx,QWORD PTR [r14+0x20]
  4295c2:	mov    rdi,QWORD PTR [r14+0x28]
  4295c6:	sub    rbx,rdi
  4295c9:	cmp    r15,rbx
  4295cc:	ja     4295a0 <flatcc_json_printer_enum_flag@@Base+0x60>
  4295ce:	mov    rsi,r12
  4295d1:	mov    rdx,r15
  4295d4:	call   4060d0 <memcpy@plt>
  4295d9:	add    QWORD PTR [r14+0x28],r15
  4295dd:	add    rsp,0x8
  4295e1:	pop    rbx
  4295e2:	pop    r12
  4295e4:	pop    r14
  4295e6:	pop    r15
  4295e8:	ret    
  4295e9:	nop    DWORD PTR [rax+0x0]

00000000004295f0 <flatcc_json_printer_string_field@@Base>:
  4295f0:	push   r14
  4295f2:	push   rbx
  4295f3:	push   rax
  4295f4:	lea    eax,[rdx+rdx*1]
  4295f7:	add    eax,0x4
  4295fa:	cmp    eax,DWORD PTR [rsi+0x10]
  4295fd:	jge    42965c <flatcc_json_printer_string_field@@Base+0x6c>
  4295ff:	mov    rdx,QWORD PTR [rsi+0x8]
  429603:	mov    eax,eax
  429605:	movzx  ebx,WORD PTR [rdx+rax*1]
  429609:	test   rbx,rbx
  42960c:	je     42965c <flatcc_json_printer_string_field@@Base+0x6c>
  42960e:	add    rbx,QWORD PTR [rsi]
  429611:	je     42965c <flatcc_json_printer_string_field@@Base+0x6c>
  429613:	mov    r14,rdi
  429616:	mov    eax,DWORD PTR [rsi+0x18]
  429619:	lea    edx,[rax+0x1]
  42961c:	mov    DWORD PTR [rsi+0x18],edx
  42961f:	test   eax,eax
  429621:	je     429632 <flatcc_json_printer_string_field@@Base+0x42>
  429623:	mov    rax,QWORD PTR [r14+0x28]
  429627:	lea    rdx,[rax+0x1]
  42962b:	mov    QWORD PTR [r14+0x28],rdx
  42962f:	mov    BYTE PTR [rax],0x2c
  429632:	movsxd rdx,r8d
  429635:	mov    rdi,r14
  429638:	mov    rsi,rcx
  42963b:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429640:	mov    eax,DWORD PTR [rbx]
  429642:	mov    edx,DWORD PTR [rbx+rax*1]
  429645:	lea    rsi,[rbx+rax*1]
  429649:	add    rsi,0x4
  42964d:	mov    rdi,r14
  429650:	add    rsp,0x8
  429654:	pop    rbx
  429655:	pop    r14
  429657:	jmp    428500 <flatcc_json_printer_string@@Base+0x10>
  42965c:	add    rsp,0x8
  429660:	pop    rbx
  429661:	pop    r14
  429663:	ret    
  429664:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42966e:	xchg   ax,ax
  429670:	push   r15
  429672:	push   r14
  429674:	push   r13
  429676:	push   r12
  429678:	push   rbx
  429679:	mov    r14,rdx
  42967c:	mov    r15,rsi
  42967f:	mov    r13,rdi
  429682:	cmp    BYTE PTR [rdi+0x31],0x0
  429686:	mov    r12,QWORD PTR [rdi+0x28]
  42968a:	je     429724 <flatcc_json_printer_string_field@@Base+0x134>
  429690:	lea    rax,[r12+0x1]
  429695:	mov    QWORD PTR [r13+0x28],rax
  429699:	mov    BYTE PTR [r12],0xa
  42969e:	movsxd rax,DWORD PTR [r13+0x38]
  4296a2:	movzx  r12d,BYTE PTR [r13+0x31]
  4296a7:	imul   r12,rax
  4296ab:	mov    rbx,QWORD PTR [r13+0x20]
  4296af:	mov    rdi,QWORD PTR [r13+0x28]
  4296b3:	lea    rax,[rdi+r12*1]
  4296b7:	cmp    rax,rbx
  4296ba:	jbe    42970d <flatcc_json_printer_string_field@@Base+0x11d>
  4296bc:	cmp    rdi,rbx
  4296bf:	jb     4296d2 <flatcc_json_printer_string_field@@Base+0xe2>
  4296c1:	mov    rdi,r13
  4296c4:	xor    esi,esi
  4296c6:	call   QWORD PTR [r13+0x48]
  4296ca:	mov    rbx,QWORD PTR [r13+0x20]
  4296ce:	mov    rdi,QWORD PTR [r13+0x28]
  4296d2:	sub    rbx,rdi
  4296d5:	cmp    rbx,r12
  4296d8:	jae    42970d <flatcc_json_printer_string_field@@Base+0x11d>
  4296da:	nop    WORD PTR [rax+rax*1+0x0]
  4296e0:	mov    esi,0x20
  4296e5:	mov    rdx,rbx
  4296e8:	call   406080 <memset@plt>
  4296ed:	add    QWORD PTR [r13+0x28],rbx
  4296f1:	sub    r12,rbx
  4296f4:	mov    rdi,r13
  4296f7:	xor    esi,esi
  4296f9:	call   QWORD PTR [r13+0x48]
  4296fd:	mov    rbx,QWORD PTR [r13+0x20]
  429701:	mov    rdi,QWORD PTR [r13+0x28]
  429705:	sub    rbx,rdi
  429708:	cmp    r12,rbx
  42970b:	ja     4296e0 <flatcc_json_printer_string_field@@Base+0xf0>
  42970d:	mov    esi,0x20
  429712:	mov    rdx,r12
  429715:	call   406080 <memset@plt>
  42971a:	add    r12,QWORD PTR [r13+0x28]
  42971e:	mov    QWORD PTR [r13+0x28],r12
  429722:	jmp    429737 <flatcc_json_printer_string_field@@Base+0x147>
  429724:	cmp    r12,QWORD PTR [r13+0x20]
  429728:	jb     429737 <flatcc_json_printer_string_field@@Base+0x147>
  42972a:	mov    rdi,r13
  42972d:	xor    esi,esi
  42972f:	call   QWORD PTR [r13+0x48]
  429733:	mov    r12,QWORD PTR [r13+0x28]
  429737:	mov    BYTE PTR [r12],0x22
  42973c:	mov    rbx,QWORD PTR [r13+0x20]
  429740:	mov    rdi,QWORD PTR [r13+0x28]
  429744:	cmp    BYTE PTR [r13+0x32],0x1
  429749:	adc    rdi,0x0
  42974d:	mov    QWORD PTR [r13+0x28],rdi
  429751:	lea    rax,[rdi+r14*1]
  429755:	cmp    rax,rbx
  429758:	jb     4297ae <flatcc_json_printer_string_field@@Base+0x1be>
  42975a:	cmp    rdi,rbx
  42975d:	jb     429770 <flatcc_json_printer_string_field@@Base+0x180>
  42975f:	mov    rdi,r13
  429762:	xor    esi,esi
  429764:	call   QWORD PTR [r13+0x48]
  429768:	mov    rbx,QWORD PTR [r13+0x20]
  42976c:	mov    rdi,QWORD PTR [r13+0x28]
  429770:	sub    rbx,rdi
  429773:	cmp    rbx,r14
  429776:	jae    4297ae <flatcc_json_printer_string_field@@Base+0x1be>
  429778:	nop    DWORD PTR [rax+rax*1+0x0]
  429780:	mov    rsi,r15
  429783:	mov    rdx,rbx
  429786:	call   4060d0 <memcpy@plt>
  42978b:	add    QWORD PTR [r13+0x28],rbx
  42978f:	add    r15,rbx
  429792:	sub    r14,rbx
  429795:	mov    rdi,r13
  429798:	xor    esi,esi
  42979a:	call   QWORD PTR [r13+0x48]
  42979e:	mov    rbx,QWORD PTR [r13+0x20]
  4297a2:	mov    rdi,QWORD PTR [r13+0x28]
  4297a6:	sub    rbx,rdi
  4297a9:	cmp    r14,rbx
  4297ac:	ja     429780 <flatcc_json_printer_string_field@@Base+0x190>
  4297ae:	mov    rsi,r15
  4297b1:	mov    rdx,r14
  4297b4:	call   4060d0 <memcpy@plt>
  4297b9:	mov    rax,QWORD PTR [r13+0x28]
  4297bd:	lea    rcx,[rax+r14*1]
  4297c1:	mov    QWORD PTR [r13+0x28],rcx
  4297c5:	mov    BYTE PTR [rax+r14*1],0x22
  4297ca:	mov    rax,QWORD PTR [r13+0x28]
  4297ce:	cmp    BYTE PTR [r13+0x32],0x1
  4297d3:	adc    rax,0x0
  4297d7:	lea    rcx,[rax+0x1]
  4297db:	mov    QWORD PTR [r13+0x28],rcx
  4297df:	mov    BYTE PTR [rax],0x3a
  4297e2:	mov    rax,QWORD PTR [r13+0x28]
  4297e6:	mov    BYTE PTR [rax],0x20
  4297e9:	cmp    BYTE PTR [r13+0x31],0x1
  4297ee:	sbb    QWORD PTR [r13+0x28],0xffffffffffffffff
  4297f3:	pop    rbx
  4297f4:	pop    r12
  4297f6:	pop    r13
  4297f8:	pop    r14
  4297fa:	pop    r15
  4297fc:	ret    
  4297fd:	nop    DWORD PTR [rax]

0000000000429800 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  429800:	push   rbp
  429801:	push   r15
  429803:	push   r14
  429805:	push   r13
  429807:	push   r12
  429809:	push   rbx
  42980a:	sub    rsp,0x18
  42980e:	lea    eax,[rdx+rdx*1]
  429811:	add    eax,0x4
  429814:	cmp    eax,DWORD PTR [rsi+0x10]
  429817:	jge    4299a7 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  42981d:	mov    rdx,QWORD PTR [rsi+0x8]
  429821:	mov    eax,eax
  429823:	movzx  ebp,WORD PTR [rdx+rax*1]
  429827:	test   rbp,rbp
  42982a:	je     4299a7 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  429830:	xor    r14d,r14d
  429833:	test   r9d,r9d
  429836:	setne  al
  429839:	add    rbp,QWORD PTR [rsi]
  42983c:	je     4299a7 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  429842:	mov    r15,rdi
  429845:	mov    BYTE PTR [rsp+0x7],al
  429849:	mov    eax,DWORD PTR [rsi+0x18]
  42984c:	lea    edx,[rax+0x1]
  42984f:	mov    DWORD PTR [rsi+0x18],edx
  429852:	test   eax,eax
  429854:	je     429865 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x65>
  429856:	mov    rax,QWORD PTR [r15+0x28]
  42985a:	lea    rdx,[rax+0x1]
  42985e:	mov    QWORD PTR [r15+0x28],rdx
  429862:	mov    BYTE PTR [rax],0x2c
  429865:	movsxd rdx,r8d
  429868:	mov    rdi,r15
  42986b:	mov    rsi,rcx
  42986e:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429873:	mov    r12d,DWORD PTR [rbp+0x0]
  429877:	mov    eax,DWORD PTR [rbp+r12*1+0x0]
  42987c:	mov    QWORD PTR [rsp+0x8],rax
  429881:	mov    rax,QWORD PTR [r15+0x28]
  429885:	lea    rcx,[rax+0x1]
  429889:	mov    QWORD PTR [r15+0x28],rcx
  42988d:	mov    BYTE PTR [rax],0x22
  429890:	mov    rax,QWORD PTR [rsp+0x8]
  429895:	shl    rax,0x2
  429899:	movabs rcx,0xaaaaaaaaaaaaaaab
  4298a3:	mul    rcx
  4298a6:	mov    rbx,rdx
  4298a9:	shr    rbx,1
  4298ac:	add    rbx,0x3
  4298b0:	and    rbx,0xfffffffffffffffc
  4298b4:	mov    r13,QWORD PTR [r15+0x20]
  4298b8:	mov    rdi,QWORD PTR [r15+0x28]
  4298bc:	lea    rax,[rdi+rbx*1]
  4298c0:	cmp    rax,r13
  4298c3:	jb     4298d6 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd6>
  4298c5:	mov    rdi,r15
  4298c8:	xor    esi,esi
  4298ca:	call   QWORD PTR [r15+0x48]
  4298ce:	mov    r13,QWORD PTR [r15+0x20]
  4298d2:	mov    rdi,QWORD PTR [r15+0x28]
  4298d6:	mov    al,BYTE PTR [rsp+0x7]
  4298da:	mov    r14b,al
  4298dd:	add    rbp,r12
  4298e0:	add    rbp,0x4
  4298e4:	lea    rax,[rdi+rbx*1]
  4298e8:	cmp    rax,r13
  4298eb:	jbe    42997c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x17c>
  4298f1:	lea    r12,[rsp+0x10]
  4298f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429900:	sub    r13,rdi
  429903:	and    r13,0xfffffffffffffffc
  429907:	lea    rbx,[r13*2+0x0]
  42990f:	add    rbx,r13
  429912:	test   rbx,rbx
  429915:	je     4299b6 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b6>
  42991b:	shr    rbx,0x2
  42991f:	mov    QWORD PTR [rsp+0x10],rbx
  429924:	mov    rsi,rbp
  429927:	mov    rdx,r12
  42992a:	mov    ecx,r14d
  42992d:	call   433120 <flatcc_json_printer_clear@@Base+0x30>
  429932:	add    QWORD PTR [r15+0x28],r13
  429936:	add    rbp,rbx
  429939:	sub    QWORD PTR [rsp+0x8],rbx
  42993e:	mov    rdi,r15
  429941:	xor    esi,esi
  429943:	call   QWORD PTR [r15+0x48]
  429947:	mov    rax,QWORD PTR [rsp+0x8]
  42994c:	shl    rax,0x2
  429950:	movabs rcx,0xaaaaaaaaaaaaaaab
  42995a:	mul    rcx
  42995d:	mov    rbx,rdx
  429960:	shr    rbx,1
  429963:	add    rbx,0x3
  429967:	and    rbx,0xfffffffffffffffc
  42996b:	mov    r13,QWORD PTR [r15+0x20]
  42996f:	mov    rdi,QWORD PTR [r15+0x28]
  429973:	lea    rax,[rdi+rbx*1]
  429977:	cmp    rax,r13
  42997a:	ja     429900 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
  42997c:	or     r14d,0x80
  429983:	lea    rdx,[rsp+0x8]
  429988:	mov    rsi,rbp
  42998b:	mov    ecx,r14d
  42998e:	call   433120 <flatcc_json_printer_clear@@Base+0x30>
  429993:	mov    rax,QWORD PTR [r15+0x28]
  429997:	lea    rcx,[rax+rbx*1]
  42999b:	add    rcx,0x1
  42999f:	mov    QWORD PTR [r15+0x28],rcx
  4299a3:	mov    BYTE PTR [rax+rbx*1],0x22
  4299a7:	add    rsp,0x18
  4299ab:	pop    rbx
  4299ac:	pop    r12
  4299ae:	pop    r13
  4299b0:	pop    r14
  4299b2:	pop    r15
  4299b4:	pop    rbp
  4299b5:	ret    
  4299b6:	lea    rdi,[rip+0x121f9]        # 43bbb6 <flatcc_builder_padding_base@@Base+0x3506>
  4299bd:	lea    rsi,[rip+0x11ee9]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  4299c4:	lea    rcx,[rip+0x121f1]        # 43bbbc <flatcc_builder_padding_base@@Base+0x350c>
  4299cb:	mov    edx,0x115
  4299d0:	call   406070 <__assert_fail@plt>
  4299d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4299df:	nop

00000000004299e0 <flatcc_json_printer_uint8_field@@Base>:
  4299e0:	push   r14
  4299e2:	push   rbx
  4299e3:	push   rax
  4299e4:	mov    r14,rdi
  4299e7:	lea    eax,[rdx+rdx*1]
  4299ea:	add    eax,0x4
  4299ed:	cmp    eax,DWORD PTR [rsi+0x10]
  4299f0:	jge    429a1d <flatcc_json_printer_uint8_field@@Base+0x3d>
  4299f2:	mov    rdx,QWORD PTR [rsi+0x8]
  4299f6:	mov    eax,eax
  4299f8:	movzx  eax,WORD PTR [rdx+rax*1]
  4299fc:	test   rax,rax
  4299ff:	je     429a1d <flatcc_json_printer_uint8_field@@Base+0x3d>
  429a01:	add    rax,QWORD PTR [rsi]
  429a04:	je     429a1d <flatcc_json_printer_uint8_field@@Base+0x3d>
  429a06:	mov    bl,BYTE PTR [rax]
  429a08:	cmp    bl,r9b
  429a0b:	jne    429a2b <flatcc_json_printer_uint8_field@@Base+0x4b>
  429a0d:	cmp    BYTE PTR [r14+0x34],0x0
  429a12:	mov    ebx,r9d
  429a15:	jne    429ad5 <flatcc_json_printer_uint8_field@@Base+0xf5>
  429a1b:	jmp    429a2b <flatcc_json_printer_uint8_field@@Base+0x4b>
  429a1d:	cmp    BYTE PTR [r14+0x35],0x0
  429a22:	mov    ebx,r9d
  429a25:	je     429ad5 <flatcc_json_printer_uint8_field@@Base+0xf5>
  429a2b:	mov    eax,DWORD PTR [rsi+0x18]
  429a2e:	lea    edx,[rax+0x1]
  429a31:	mov    DWORD PTR [rsi+0x18],edx
  429a34:	test   eax,eax
  429a36:	je     429a47 <flatcc_json_printer_uint8_field@@Base+0x67>
  429a38:	mov    rax,QWORD PTR [r14+0x28]
  429a3c:	lea    rdx,[rax+0x1]
  429a40:	mov    QWORD PTR [r14+0x28],rdx
  429a44:	mov    BYTE PTR [rax],0x2c
  429a47:	movsxd rdx,r8d
  429a4a:	mov    rdi,r14
  429a4d:	mov    rsi,rcx
  429a50:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429a55:	mov    rax,QWORD PTR [r14+0x28]
  429a59:	cmp    bl,0x64
  429a5c:	jb     429a91 <flatcc_json_printer_uint8_field@@Base+0xb1>
  429a5e:	mov    BYTE PTR [rax+0x3],0x0
  429a62:	movzx  ecx,bl
  429a65:	lea    edx,[rcx+rcx*4]
  429a68:	lea    ecx,[rcx+rdx*8]
  429a6b:	shr    ecx,0xc
  429a6e:	imul   edx,ecx,0x64
  429a71:	sub    bl,dl
  429a73:	movzx  edx,bl
  429a76:	lea    rsi,[rip+0x122a3]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429a7d:	movzx  edx,WORD PTR [rsi+rdx*2]
  429a81:	mov    WORD PTR [rax+0x1],dx
  429a85:	or     cl,0x30
  429a88:	mov    BYTE PTR [rax],cl
  429a8a:	mov    eax,0x3
  429a8f:	jmp    429ad1 <flatcc_json_printer_uint8_field@@Base+0xf1>
  429a91:	cmp    bl,0xa
  429a94:	jb     429ac3 <flatcc_json_printer_uint8_field@@Base+0xe3>
  429a96:	mov    BYTE PTR [rax+0x2],0x0
  429a9a:	movzx  ecx,bl
  429a9d:	lea    edx,[rcx+rcx*4]
  429aa0:	lea    ecx,[rcx+rdx*8]
  429aa3:	shr    ecx,0xc
  429aa6:	imul   ecx,ecx,0x64
  429aa9:	sub    bl,cl
  429aab:	movzx  ecx,bl
  429aae:	lea    rdx,[rip+0x1226b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429ab5:	movzx  ecx,WORD PTR [rdx+rcx*2]
  429ab9:	mov    WORD PTR [rax],cx
  429abc:	mov    eax,0x2
  429ac1:	jmp    429ad1 <flatcc_json_printer_uint8_field@@Base+0xf1>
  429ac3:	mov    BYTE PTR [rax+0x1],0x0
  429ac7:	add    bl,0x30
  429aca:	mov    BYTE PTR [rax],bl
  429acc:	mov    eax,0x1
  429ad1:	add    QWORD PTR [r14+0x28],rax
  429ad5:	add    rsp,0x8
  429ad9:	pop    rbx
  429ada:	pop    r14
  429adc:	ret    
  429add:	nop    DWORD PTR [rax]

0000000000429ae0 <flatcc_json_printer_uint16_field@@Base>:
  429ae0:	push   rbp
  429ae1:	push   rbx
  429ae2:	push   rax
  429ae3:	mov    rbx,rdi
  429ae6:	lea    eax,[rdx+rdx*1]
  429ae9:	add    eax,0x4
  429aec:	cmp    eax,DWORD PTR [rsi+0x10]
  429aef:	jge    429b1d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429af1:	mov    rdx,QWORD PTR [rsi+0x8]
  429af5:	mov    eax,eax
  429af7:	movzx  eax,WORD PTR [rdx+rax*1]
  429afb:	test   rax,rax
  429afe:	je     429b1d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429b00:	add    rax,QWORD PTR [rsi]
  429b03:	je     429b1d <flatcc_json_printer_uint16_field@@Base+0x3d>
  429b05:	movzx  ebp,WORD PTR [rax]
  429b08:	cmp    bp,r9w
  429b0c:	jne    429b2a <flatcc_json_printer_uint16_field@@Base+0x4a>
  429b0e:	cmp    BYTE PTR [rbx+0x34],0x0
  429b12:	mov    ebp,r9d
  429b15:	jne    429c7f <flatcc_json_printer_uint16_field@@Base+0x19f>
  429b1b:	jmp    429b2a <flatcc_json_printer_uint16_field@@Base+0x4a>
  429b1d:	cmp    BYTE PTR [rbx+0x35],0x0
  429b21:	mov    ebp,r9d
  429b24:	je     429c7f <flatcc_json_printer_uint16_field@@Base+0x19f>
  429b2a:	mov    eax,DWORD PTR [rsi+0x18]
  429b2d:	lea    edx,[rax+0x1]
  429b30:	mov    DWORD PTR [rsi+0x18],edx
  429b33:	test   eax,eax
  429b35:	je     429b46 <flatcc_json_printer_uint16_field@@Base+0x66>
  429b37:	mov    rax,QWORD PTR [rbx+0x28]
  429b3b:	lea    rdx,[rax+0x1]
  429b3f:	mov    QWORD PTR [rbx+0x28],rdx
  429b43:	mov    BYTE PTR [rax],0x2c
  429b46:	movsxd rdx,r8d
  429b49:	mov    rdi,rbx
  429b4c:	mov    rsi,rcx
  429b4f:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429b54:	mov    rsi,QWORD PTR [rbx+0x28]
  429b58:	movzx  edx,bp
  429b5b:	cmp    edx,0x3e8
  429b61:	jb     429b73 <flatcc_json_printer_uint16_field@@Base+0x93>
  429b63:	xor    eax,eax
  429b65:	cmp    edx,0x270f
  429b6b:	seta   al
  429b6e:	or     eax,0x4
  429b71:	jmp    429b99 <flatcc_json_printer_uint16_field@@Base+0xb9>
  429b73:	cmp    bp,0x64
  429b77:	jb     429b8e <flatcc_json_printer_uint16_field@@Base+0xae>
  429b79:	mov    BYTE PTR [rsi+0x3],0x0
  429b7d:	add    rsi,0x3
  429b81:	mov    eax,0x3
  429b86:	mov    rcx,rsi
  429b89:	jmp    429c45 <flatcc_json_printer_uint16_field@@Base+0x165>
  429b8e:	xor    eax,eax
  429b90:	cmp    bp,0x9
  429b94:	seta   al
  429b97:	inc    eax
  429b99:	mov    edi,eax
  429b9b:	lea    rcx,[rsi+rdi*1]
  429b9f:	mov    BYTE PTR [rsi+rdi*1],0x0
  429ba3:	test   al,0x1
  429ba5:	jne    429c08 <flatcc_json_printer_uint16_field@@Base+0x128>
  429ba7:	cmp    eax,0x2
  429baa:	je     429bde <flatcc_json_printer_uint16_field@@Base+0xfe>
  429bac:	cmp    eax,0x4
  429baf:	jne    429c79 <flatcc_json_printer_uint16_field@@Base+0x199>
  429bb5:	mov    esi,edx
  429bb7:	shr    esi,0x2
  429bba:	imul   ebp,esi,0x147b
  429bc0:	shr    ebp,0x11
  429bc3:	imul   esi,ebp,0x64
  429bc6:	sub    edx,esi
  429bc8:	movzx  edx,dx
  429bcb:	lea    rsi,[rip+0x1214e]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429bd2:	movzx  edx,WORD PTR [rsi+rdx*2]
  429bd6:	mov    WORD PTR [rcx-0x2],dx
  429bda:	add    rcx,0xfffffffffffffffe
  429bde:	movzx  edx,bp
  429be1:	mov    esi,edx
  429be3:	shr    esi,0x2
  429be6:	imul   esi,esi,0x147b
  429bec:	shr    esi,0x11
  429bef:	imul   esi,esi,0x64
  429bf2:	sub    edx,esi
  429bf4:	movzx  edx,dx
  429bf7:	lea    rsi,[rip+0x12122]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429bfe:	movzx  edx,WORD PTR [rsi+rdx*2]
  429c02:	mov    WORD PTR [rcx-0x2],dx
  429c06:	jmp    429c79 <flatcc_json_printer_uint16_field@@Base+0x199>
  429c08:	cmp    eax,0x1
  429c0b:	je     429c71 <flatcc_json_printer_uint16_field@@Base+0x191>
  429c0d:	cmp    eax,0x3
  429c10:	je     429c45 <flatcc_json_printer_uint16_field@@Base+0x165>
  429c12:	cmp    eax,0x5
  429c15:	jne    429c79 <flatcc_json_printer_uint16_field@@Base+0x199>
  429c17:	mov    eax,edx
  429c19:	shr    eax,0x2
  429c1c:	imul   ebp,eax,0x147b
  429c22:	shr    ebp,0x11
  429c25:	imul   eax,ebp,0x64
  429c28:	sub    edx,eax
  429c2a:	movzx  eax,dx
  429c2d:	lea    rdx,[rip+0x120ec]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429c34:	movzx  eax,WORD PTR [rdx+rax*2]
  429c38:	mov    WORD PTR [rcx-0x2],ax
  429c3c:	add    rcx,0xfffffffffffffffe
  429c40:	mov    eax,0x5
  429c45:	movzx  edx,bp
  429c48:	mov    esi,edx
  429c4a:	shr    esi,0x2
  429c4d:	imul   ebp,esi,0x147b
  429c53:	shr    ebp,0x11
  429c56:	imul   esi,ebp,0x64
  429c59:	sub    edx,esi
  429c5b:	movzx  edx,dx
  429c5e:	lea    rsi,[rip+0x120bb]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429c65:	movzx  edx,WORD PTR [rsi+rdx*2]
  429c69:	mov    WORD PTR [rcx-0x2],dx
  429c6d:	add    rcx,0xfffffffffffffffe
  429c71:	add    bpl,0x30
  429c75:	mov    BYTE PTR [rcx-0x1],bpl
  429c79:	mov    eax,eax
  429c7b:	add    QWORD PTR [rbx+0x28],rax
  429c7f:	add    rsp,0x8
  429c83:	pop    rbx
  429c84:	pop    rbp
  429c85:	ret    
  429c86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429c90 <flatcc_json_printer_uint32_field@@Base>:
  429c90:	push   rbp
  429c91:	push   rbx
  429c92:	push   rax
  429c93:	mov    rbx,rdi
  429c96:	lea    eax,[rdx+rdx*1]
  429c99:	add    eax,0x4
  429c9c:	cmp    eax,DWORD PTR [rsi+0x10]
  429c9f:	jge    429cc7 <flatcc_json_printer_uint32_field@@Base+0x37>
  429ca1:	mov    rdx,QWORD PTR [rsi+0x8]
  429ca5:	mov    eax,eax
  429ca7:	movzx  eax,WORD PTR [rdx+rax*1]
  429cab:	test   rax,rax
  429cae:	je     429cc7 <flatcc_json_printer_uint32_field@@Base+0x37>
  429cb0:	add    rax,QWORD PTR [rsi]
  429cb3:	je     429cc7 <flatcc_json_printer_uint32_field@@Base+0x37>
  429cb5:	mov    ebp,DWORD PTR [rax]
  429cb7:	cmp    ebp,r9d
  429cba:	jne    429cd0 <flatcc_json_printer_uint32_field@@Base+0x40>
  429cbc:	cmp    BYTE PTR [rbx+0x34],0x0
  429cc0:	mov    ebp,r9d
  429cc3:	jne    429d0b <flatcc_json_printer_uint32_field@@Base+0x7b>
  429cc5:	jmp    429cd0 <flatcc_json_printer_uint32_field@@Base+0x40>
  429cc7:	cmp    BYTE PTR [rbx+0x35],0x0
  429ccb:	mov    ebp,r9d
  429cce:	je     429d0b <flatcc_json_printer_uint32_field@@Base+0x7b>
  429cd0:	mov    eax,DWORD PTR [rsi+0x18]
  429cd3:	lea    edx,[rax+0x1]
  429cd6:	mov    DWORD PTR [rsi+0x18],edx
  429cd9:	test   eax,eax
  429cdb:	je     429cec <flatcc_json_printer_uint32_field@@Base+0x5c>
  429cdd:	mov    rax,QWORD PTR [rbx+0x28]
  429ce1:	lea    rdx,[rax+0x1]
  429ce5:	mov    QWORD PTR [rbx+0x28],rdx
  429ce9:	mov    BYTE PTR [rax],0x2c
  429cec:	movsxd rdx,r8d
  429cef:	mov    rdi,rbx
  429cf2:	mov    rsi,rcx
  429cf5:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429cfa:	mov    rsi,QWORD PTR [rbx+0x28]
  429cfe:	mov    edi,ebp
  429d00:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  429d05:	cdqe   
  429d07:	add    QWORD PTR [rbx+0x28],rax
  429d0b:	add    rsp,0x8
  429d0f:	pop    rbx
  429d10:	pop    rbp
  429d11:	ret    
  429d12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d1c:	nop    DWORD PTR [rax+0x0]

0000000000429d20 <flatcc_json_printer_uint64_field@@Base>:
  429d20:	push   r14
  429d22:	push   rbx
  429d23:	push   rax
  429d24:	mov    rbx,rdi
  429d27:	lea    eax,[rdx+rdx*1]
  429d2a:	add    eax,0x4
  429d2d:	cmp    eax,DWORD PTR [rsi+0x10]
  429d30:	jge    429d59 <flatcc_json_printer_uint64_field@@Base+0x39>
  429d32:	mov    rdx,QWORD PTR [rsi+0x8]
  429d36:	mov    eax,eax
  429d38:	movzx  eax,WORD PTR [rdx+rax*1]
  429d3c:	test   rax,rax
  429d3f:	je     429d59 <flatcc_json_printer_uint64_field@@Base+0x39>
  429d41:	add    rax,QWORD PTR [rsi]
  429d44:	je     429d59 <flatcc_json_printer_uint64_field@@Base+0x39>
  429d46:	mov    r14,QWORD PTR [rax]
  429d49:	cmp    r14,r9
  429d4c:	jne    429d62 <flatcc_json_printer_uint64_field@@Base+0x42>
  429d4e:	cmp    BYTE PTR [rbx+0x34],0x0
  429d52:	mov    r14,r9
  429d55:	jne    429d9e <flatcc_json_printer_uint64_field@@Base+0x7e>
  429d57:	jmp    429d62 <flatcc_json_printer_uint64_field@@Base+0x42>
  429d59:	cmp    BYTE PTR [rbx+0x35],0x0
  429d5d:	mov    r14,r9
  429d60:	je     429d9e <flatcc_json_printer_uint64_field@@Base+0x7e>
  429d62:	mov    eax,DWORD PTR [rsi+0x18]
  429d65:	lea    edx,[rax+0x1]
  429d68:	mov    DWORD PTR [rsi+0x18],edx
  429d6b:	test   eax,eax
  429d6d:	je     429d7e <flatcc_json_printer_uint64_field@@Base+0x5e>
  429d6f:	mov    rax,QWORD PTR [rbx+0x28]
  429d73:	lea    rdx,[rax+0x1]
  429d77:	mov    QWORD PTR [rbx+0x28],rdx
  429d7b:	mov    BYTE PTR [rax],0x2c
  429d7e:	movsxd rdx,r8d
  429d81:	mov    rdi,rbx
  429d84:	mov    rsi,rcx
  429d87:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429d8c:	mov    rsi,QWORD PTR [rbx+0x28]
  429d90:	mov    rdi,r14
  429d93:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  429d98:	cdqe   
  429d9a:	add    QWORD PTR [rbx+0x28],rax
  429d9e:	add    rsp,0x8
  429da2:	pop    rbx
  429da3:	pop    r14
  429da5:	ret    
  429da6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429db0 <flatcc_json_printer_int8_field@@Base>:
  429db0:	push   r14
  429db2:	push   rbx
  429db3:	push   rax
  429db4:	mov    r14,rdi
  429db7:	lea    eax,[rdx+rdx*1]
  429dba:	add    eax,0x4
  429dbd:	cmp    eax,DWORD PTR [rsi+0x10]
  429dc0:	jge    429ded <flatcc_json_printer_int8_field@@Base+0x3d>
  429dc2:	mov    rdx,QWORD PTR [rsi+0x8]
  429dc6:	mov    eax,eax
  429dc8:	movzx  eax,WORD PTR [rdx+rax*1]
  429dcc:	test   rax,rax
  429dcf:	je     429ded <flatcc_json_printer_int8_field@@Base+0x3d>
  429dd1:	add    rax,QWORD PTR [rsi]
  429dd4:	je     429ded <flatcc_json_printer_int8_field@@Base+0x3d>
  429dd6:	mov    bl,BYTE PTR [rax]
  429dd8:	cmp    bl,r9b
  429ddb:	jne    429dfb <flatcc_json_printer_int8_field@@Base+0x4b>
  429ddd:	cmp    BYTE PTR [r14+0x34],0x0
  429de2:	mov    ebx,r9d
  429de5:	jne    429ec2 <flatcc_json_printer_int8_field@@Base+0x112>
  429deb:	jmp    429dfb <flatcc_json_printer_int8_field@@Base+0x4b>
  429ded:	cmp    BYTE PTR [r14+0x35],0x0
  429df2:	mov    ebx,r9d
  429df5:	je     429ec2 <flatcc_json_printer_int8_field@@Base+0x112>
  429dfb:	mov    eax,DWORD PTR [rsi+0x18]
  429dfe:	lea    edx,[rax+0x1]
  429e01:	mov    DWORD PTR [rsi+0x18],edx
  429e04:	test   eax,eax
  429e06:	je     429e17 <flatcc_json_printer_int8_field@@Base+0x67>
  429e08:	mov    rax,QWORD PTR [r14+0x28]
  429e0c:	lea    rdx,[rax+0x1]
  429e10:	mov    QWORD PTR [r14+0x28],rdx
  429e14:	mov    BYTE PTR [rax],0x2c
  429e17:	movsxd rdx,r8d
  429e1a:	mov    rdi,r14
  429e1d:	mov    rsi,rcx
  429e20:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429e25:	mov    rcx,QWORD PTR [r14+0x28]
  429e29:	mov    eax,ebx
  429e2b:	shr    al,0x7
  429e2e:	movzx  eax,al
  429e31:	test   bl,bl
  429e33:	js     429e6e <flatcc_json_printer_int8_field@@Base+0xbe>
  429e35:	cmp    bl,0x64
  429e38:	jb     429e7b <flatcc_json_printer_int8_field@@Base+0xcb>
  429e3a:	mov    BYTE PTR [rcx+0x3],0x0
  429e3e:	movzx  edx,bl
  429e41:	lea    esi,[rdx+rdx*4]
  429e44:	lea    edx,[rdx+rsi*8]
  429e47:	shr    edx,0xc
  429e4a:	imul   esi,edx,0x64
  429e4d:	sub    bl,sil
  429e50:	movzx  esi,bl
  429e53:	lea    rdi,[rip+0x11ec6]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429e5a:	movzx  esi,WORD PTR [rdi+rsi*2]
  429e5e:	mov    WORD PTR [rcx+0x1],si
  429e62:	or     dl,0x30
  429e65:	mov    BYTE PTR [rcx],dl
  429e67:	mov    ecx,0x3
  429e6c:	jmp    429ebb <flatcc_json_printer_int8_field@@Base+0x10b>
  429e6e:	mov    BYTE PTR [rcx],0x2d
  429e71:	inc    rcx
  429e74:	neg    bl
  429e76:	cmp    bl,0x64
  429e79:	jae    429e3a <flatcc_json_printer_int8_field@@Base+0x8a>
  429e7b:	cmp    bl,0xa
  429e7e:	jb     429ead <flatcc_json_printer_int8_field@@Base+0xfd>
  429e80:	mov    BYTE PTR [rcx+0x2],0x0
  429e84:	movzx  edx,bl
  429e87:	lea    esi,[rdx+rdx*4]
  429e8a:	lea    edx,[rdx+rsi*8]
  429e8d:	shr    edx,0xc
  429e90:	imul   edx,edx,0x64
  429e93:	sub    bl,dl
  429e95:	movzx  edx,bl
  429e98:	lea    rsi,[rip+0x11e81]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429e9f:	movzx  edx,WORD PTR [rsi+rdx*2]
  429ea3:	mov    WORD PTR [rcx],dx
  429ea6:	mov    ecx,0x2
  429eab:	jmp    429ebb <flatcc_json_printer_int8_field@@Base+0x10b>
  429ead:	mov    BYTE PTR [rcx+0x1],0x0
  429eb1:	add    bl,0x30
  429eb4:	mov    BYTE PTR [rcx],bl
  429eb6:	mov    ecx,0x1
  429ebb:	add    rcx,rax
  429ebe:	add    QWORD PTR [r14+0x28],rcx
  429ec2:	add    rsp,0x8
  429ec6:	pop    rbx
  429ec7:	pop    r14
  429ec9:	ret    
  429eca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429ed0 <flatcc_json_printer_int16_field@@Base>:
  429ed0:	push   rbp
  429ed1:	push   rbx
  429ed2:	push   rax
  429ed3:	mov    rbx,rdi
  429ed6:	lea    eax,[rdx+rdx*1]
  429ed9:	add    eax,0x4
  429edc:	cmp    eax,DWORD PTR [rsi+0x10]
  429edf:	jge    429f0d <flatcc_json_printer_int16_field@@Base+0x3d>
  429ee1:	mov    rdx,QWORD PTR [rsi+0x8]
  429ee5:	mov    eax,eax
  429ee7:	movzx  eax,WORD PTR [rdx+rax*1]
  429eeb:	test   rax,rax
  429eee:	je     429f0d <flatcc_json_printer_int16_field@@Base+0x3d>
  429ef0:	add    rax,QWORD PTR [rsi]
  429ef3:	je     429f0d <flatcc_json_printer_int16_field@@Base+0x3d>
  429ef5:	movzx  ebp,WORD PTR [rax]
  429ef8:	cmp    bp,r9w
  429efc:	jne    429f1a <flatcc_json_printer_int16_field@@Base+0x4a>
  429efe:	cmp    BYTE PTR [rbx+0x34],0x0
  429f02:	mov    ebp,r9d
  429f05:	jne    42a087 <flatcc_json_printer_int16_field@@Base+0x1b7>
  429f0b:	jmp    429f1a <flatcc_json_printer_int16_field@@Base+0x4a>
  429f0d:	cmp    BYTE PTR [rbx+0x35],0x0
  429f11:	mov    ebp,r9d
  429f14:	je     42a087 <flatcc_json_printer_int16_field@@Base+0x1b7>
  429f1a:	mov    eax,DWORD PTR [rsi+0x18]
  429f1d:	lea    edx,[rax+0x1]
  429f20:	mov    DWORD PTR [rsi+0x18],edx
  429f23:	test   eax,eax
  429f25:	je     429f36 <flatcc_json_printer_int16_field@@Base+0x66>
  429f27:	mov    rax,QWORD PTR [rbx+0x28]
  429f2b:	lea    rdx,[rax+0x1]
  429f2f:	mov    QWORD PTR [rbx+0x28],rdx
  429f33:	mov    BYTE PTR [rax],0x2c
  429f36:	movsxd rdx,r8d
  429f39:	mov    rdi,rbx
  429f3c:	mov    rsi,rcx
  429f3f:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  429f44:	mov    rdi,QWORD PTR [rbx+0x28]
  429f48:	movzx  r8d,bp
  429f4c:	test   r8w,r8w
  429f50:	jns    429f5a <flatcc_json_printer_int16_field@@Base+0x8a>
  429f52:	mov    BYTE PTR [rdi],0x2d
  429f55:	inc    rdi
  429f58:	neg    ebp
  429f5a:	shr    r8d,0xf
  429f5e:	movzx  esi,bp
  429f61:	cmp    esi,0x3e8
  429f67:	jb     429f79 <flatcc_json_printer_int16_field@@Base+0xa9>
  429f69:	xor    ecx,ecx
  429f6b:	cmp    esi,0x270f
  429f71:	seta   cl
  429f74:	or     ecx,0x4
  429f77:	jmp    429f9f <flatcc_json_printer_int16_field@@Base+0xcf>
  429f79:	cmp    bp,0x64
  429f7d:	jb     429f94 <flatcc_json_printer_int16_field@@Base+0xc4>
  429f7f:	mov    BYTE PTR [rdi+0x3],0x0
  429f83:	add    rdi,0x3
  429f87:	mov    ecx,0x3
  429f8c:	mov    rdx,rdi
  429f8f:	jmp    42a04c <flatcc_json_printer_int16_field@@Base+0x17c>
  429f94:	xor    ecx,ecx
  429f96:	cmp    bp,0x9
  429f9a:	seta   cl
  429f9d:	inc    ecx
  429f9f:	mov    eax,ecx
  429fa1:	lea    rdx,[rdi+rax*1]
  429fa5:	mov    BYTE PTR [rdi+rax*1],0x0
  429fa9:	test   cl,0x1
  429fac:	jne    42a00f <flatcc_json_printer_int16_field@@Base+0x13f>
  429fae:	cmp    ecx,0x2
  429fb1:	je     429fe5 <flatcc_json_printer_int16_field@@Base+0x115>
  429fb3:	cmp    ecx,0x4
  429fb6:	jne    42a080 <flatcc_json_printer_int16_field@@Base+0x1b0>
  429fbc:	mov    eax,esi
  429fbe:	shr    eax,0x2
  429fc1:	imul   ebp,eax,0x147b
  429fc7:	shr    ebp,0x11
  429fca:	imul   eax,ebp,0x64
  429fcd:	sub    esi,eax
  429fcf:	movzx  eax,si
  429fd2:	lea    rsi,[rip+0x11d47]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  429fd9:	movzx  eax,WORD PTR [rsi+rax*2]
  429fdd:	mov    WORD PTR [rdx-0x2],ax
  429fe1:	add    rdx,0xfffffffffffffffe
  429fe5:	movzx  eax,bp
  429fe8:	mov    esi,eax
  429fea:	shr    esi,0x2
  429fed:	imul   esi,esi,0x147b
  429ff3:	shr    esi,0x11
  429ff6:	imul   esi,esi,0x64
  429ff9:	sub    eax,esi
  429ffb:	movzx  eax,ax
  429ffe:	lea    rsi,[rip+0x11d1b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a005:	movzx  eax,WORD PTR [rsi+rax*2]
  42a009:	mov    WORD PTR [rdx-0x2],ax
  42a00d:	jmp    42a080 <flatcc_json_printer_int16_field@@Base+0x1b0>
  42a00f:	cmp    ecx,0x1
  42a012:	je     42a078 <flatcc_json_printer_int16_field@@Base+0x1a8>
  42a014:	cmp    ecx,0x3
  42a017:	je     42a04c <flatcc_json_printer_int16_field@@Base+0x17c>
  42a019:	cmp    ecx,0x5
  42a01c:	jne    42a080 <flatcc_json_printer_int16_field@@Base+0x1b0>
  42a01e:	mov    eax,esi
  42a020:	shr    eax,0x2
  42a023:	imul   ebp,eax,0x147b
  42a029:	shr    ebp,0x11
  42a02c:	imul   eax,ebp,0x64
  42a02f:	sub    esi,eax
  42a031:	movzx  eax,si
  42a034:	lea    rcx,[rip+0x11ce5]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a03b:	movzx  eax,WORD PTR [rcx+rax*2]
  42a03f:	mov    WORD PTR [rdx-0x2],ax
  42a043:	add    rdx,0xfffffffffffffffe
  42a047:	mov    ecx,0x5
  42a04c:	movzx  eax,bp
  42a04f:	mov    esi,eax
  42a051:	shr    esi,0x2
  42a054:	imul   ebp,esi,0x147b
  42a05a:	shr    ebp,0x11
  42a05d:	imul   esi,ebp,0x64
  42a060:	sub    eax,esi
  42a062:	movzx  eax,ax
  42a065:	lea    rsi,[rip+0x11cb4]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a06c:	movzx  eax,WORD PTR [rsi+rax*2]
  42a070:	mov    WORD PTR [rdx-0x2],ax
  42a074:	add    rdx,0xfffffffffffffffe
  42a078:	add    bpl,0x30
  42a07c:	mov    BYTE PTR [rdx-0x1],bpl
  42a080:	add    ecx,r8d
  42a083:	add    QWORD PTR [rbx+0x28],rcx
  42a087:	add    rsp,0x8
  42a08b:	pop    rbx
  42a08c:	pop    rbp
  42a08d:	ret    
  42a08e:	xchg   ax,ax

000000000042a090 <flatcc_json_printer_int32_field@@Base>:
  42a090:	push   rbp
  42a091:	push   r14
  42a093:	push   rbx
  42a094:	mov    r14,rdi
  42a097:	lea    eax,[rdx+rdx*1]
  42a09a:	add    eax,0x4
  42a09d:	cmp    eax,DWORD PTR [rsi+0x10]
  42a0a0:	jge    42a0c9 <flatcc_json_printer_int32_field@@Base+0x39>
  42a0a2:	mov    rdx,QWORD PTR [rsi+0x8]
  42a0a6:	mov    eax,eax
  42a0a8:	movzx  eax,WORD PTR [rdx+rax*1]
  42a0ac:	test   rax,rax
  42a0af:	je     42a0c9 <flatcc_json_printer_int32_field@@Base+0x39>
  42a0b1:	add    rax,QWORD PTR [rsi]
  42a0b4:	je     42a0c9 <flatcc_json_printer_int32_field@@Base+0x39>
  42a0b6:	mov    ebx,DWORD PTR [rax]
  42a0b8:	cmp    ebx,r9d
  42a0bb:	jne    42a0d3 <flatcc_json_printer_int32_field@@Base+0x43>
  42a0bd:	cmp    BYTE PTR [r14+0x34],0x0
  42a0c2:	mov    ebx,r9d
  42a0c5:	jne    42a121 <flatcc_json_printer_int32_field@@Base+0x91>
  42a0c7:	jmp    42a0d3 <flatcc_json_printer_int32_field@@Base+0x43>
  42a0c9:	cmp    BYTE PTR [r14+0x35],0x0
  42a0ce:	mov    ebx,r9d
  42a0d1:	je     42a121 <flatcc_json_printer_int32_field@@Base+0x91>
  42a0d3:	mov    eax,DWORD PTR [rsi+0x18]
  42a0d6:	lea    edx,[rax+0x1]
  42a0d9:	mov    DWORD PTR [rsi+0x18],edx
  42a0dc:	test   eax,eax
  42a0de:	je     42a0ef <flatcc_json_printer_int32_field@@Base+0x5f>
  42a0e0:	mov    rax,QWORD PTR [r14+0x28]
  42a0e4:	lea    rdx,[rax+0x1]
  42a0e8:	mov    QWORD PTR [r14+0x28],rdx
  42a0ec:	mov    BYTE PTR [rax],0x2c
  42a0ef:	movsxd rdx,r8d
  42a0f2:	mov    rdi,r14
  42a0f5:	mov    rsi,rcx
  42a0f8:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a0fd:	mov    rsi,QWORD PTR [r14+0x28]
  42a101:	mov    ebp,ebx
  42a103:	shr    ebp,0x1f
  42a106:	test   ebx,ebx
  42a108:	jns    42a112 <flatcc_json_printer_int32_field@@Base+0x82>
  42a10a:	mov    BYTE PTR [rsi],0x2d
  42a10d:	inc    rsi
  42a110:	neg    ebx
  42a112:	mov    edi,ebx
  42a114:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42a119:	add    eax,ebp
  42a11b:	cdqe   
  42a11d:	add    QWORD PTR [r14+0x28],rax
  42a121:	pop    rbx
  42a122:	pop    r14
  42a124:	pop    rbp
  42a125:	ret    
  42a126:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a130 <flatcc_json_printer_int64_field@@Base>:
  42a130:	push   r15
  42a132:	push   r14
  42a134:	push   rbx
  42a135:	mov    r14,rdi
  42a138:	lea    eax,[rdx+rdx*1]
  42a13b:	add    eax,0x4
  42a13e:	cmp    eax,DWORD PTR [rsi+0x10]
  42a141:	jge    42a16b <flatcc_json_printer_int64_field@@Base+0x3b>
  42a143:	mov    rdx,QWORD PTR [rsi+0x8]
  42a147:	mov    eax,eax
  42a149:	movzx  eax,WORD PTR [rdx+rax*1]
  42a14d:	test   rax,rax
  42a150:	je     42a16b <flatcc_json_printer_int64_field@@Base+0x3b>
  42a152:	add    rax,QWORD PTR [rsi]
  42a155:	je     42a16b <flatcc_json_printer_int64_field@@Base+0x3b>
  42a157:	mov    r15,QWORD PTR [rax]
  42a15a:	cmp    r15,r9
  42a15d:	jne    42a175 <flatcc_json_printer_int64_field@@Base+0x45>
  42a15f:	cmp    BYTE PTR [r14+0x34],0x0
  42a164:	mov    r15,r9
  42a167:	jne    42a1c8 <flatcc_json_printer_int64_field@@Base+0x98>
  42a169:	jmp    42a175 <flatcc_json_printer_int64_field@@Base+0x45>
  42a16b:	cmp    BYTE PTR [r14+0x35],0x0
  42a170:	mov    r15,r9
  42a173:	je     42a1c8 <flatcc_json_printer_int64_field@@Base+0x98>
  42a175:	mov    eax,DWORD PTR [rsi+0x18]
  42a178:	lea    edx,[rax+0x1]
  42a17b:	mov    DWORD PTR [rsi+0x18],edx
  42a17e:	test   eax,eax
  42a180:	je     42a191 <flatcc_json_printer_int64_field@@Base+0x61>
  42a182:	mov    rax,QWORD PTR [r14+0x28]
  42a186:	lea    rdx,[rax+0x1]
  42a18a:	mov    QWORD PTR [r14+0x28],rdx
  42a18e:	mov    BYTE PTR [rax],0x2c
  42a191:	movsxd rdx,r8d
  42a194:	mov    rdi,r14
  42a197:	mov    rsi,rcx
  42a19a:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a19f:	mov    rsi,QWORD PTR [r14+0x28]
  42a1a3:	mov    rbx,r15
  42a1a6:	shr    rbx,0x3f
  42a1aa:	test   r15,r15
  42a1ad:	jns    42a1b8 <flatcc_json_printer_int64_field@@Base+0x88>
  42a1af:	mov    BYTE PTR [rsi],0x2d
  42a1b2:	inc    rsi
  42a1b5:	neg    r15
  42a1b8:	mov    rdi,r15
  42a1bb:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42a1c0:	add    eax,ebx
  42a1c2:	cdqe   
  42a1c4:	add    QWORD PTR [r14+0x28],rax
  42a1c8:	pop    rbx
  42a1c9:	pop    r14
  42a1cb:	pop    r15
  42a1cd:	ret    
  42a1ce:	xchg   ax,ax

000000000042a1d0 <flatcc_json_printer_bool_field@@Base>:
  42a1d0:	push   rbp
  42a1d1:	push   rbx
  42a1d2:	push   rax
  42a1d3:	mov    rbx,rdi
  42a1d6:	lea    eax,[rdx+rdx*1]
  42a1d9:	add    eax,0x4
  42a1dc:	cmp    eax,DWORD PTR [rsi+0x10]
  42a1df:	jge    42a208 <flatcc_json_printer_bool_field@@Base+0x38>
  42a1e1:	mov    rdx,QWORD PTR [rsi+0x8]
  42a1e5:	mov    eax,eax
  42a1e7:	movzx  eax,WORD PTR [rdx+rax*1]
  42a1eb:	test   rax,rax
  42a1ee:	je     42a208 <flatcc_json_printer_bool_field@@Base+0x38>
  42a1f0:	add    rax,QWORD PTR [rsi]
  42a1f3:	je     42a208 <flatcc_json_printer_bool_field@@Base+0x38>
  42a1f5:	mov    bpl,BYTE PTR [rax]
  42a1f8:	cmp    bpl,r9b
  42a1fb:	jne    42a211 <flatcc_json_printer_bool_field@@Base+0x41>
  42a1fd:	cmp    BYTE PTR [rbx+0x34],0x0
  42a201:	mov    ebp,r9d
  42a204:	jne    42a26a <flatcc_json_printer_bool_field@@Base+0x9a>
  42a206:	jmp    42a211 <flatcc_json_printer_bool_field@@Base+0x41>
  42a208:	cmp    BYTE PTR [rbx+0x35],0x0
  42a20c:	mov    ebp,r9d
  42a20f:	je     42a26a <flatcc_json_printer_bool_field@@Base+0x9a>
  42a211:	mov    eax,DWORD PTR [rsi+0x18]
  42a214:	lea    edx,[rax+0x1]
  42a217:	mov    DWORD PTR [rsi+0x18],edx
  42a21a:	test   eax,eax
  42a21c:	je     42a22d <flatcc_json_printer_bool_field@@Base+0x5d>
  42a21e:	mov    rax,QWORD PTR [rbx+0x28]
  42a222:	lea    rdx,[rax+0x1]
  42a226:	mov    QWORD PTR [rbx+0x28],rdx
  42a22a:	mov    BYTE PTR [rax],0x2c
  42a22d:	movsxd rdx,r8d
  42a230:	mov    rdi,rbx
  42a233:	mov    rsi,rcx
  42a236:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a23b:	mov    rax,QWORD PTR [rbx+0x28]
  42a23f:	test   bpl,bpl
  42a242:	je     42a255 <flatcc_json_printer_bool_field@@Base+0x85>
  42a244:	mov    BYTE PTR [rax+0x4],0x0
  42a248:	mov    DWORD PTR [rax],0x65757274
  42a24e:	mov    eax,0x4
  42a253:	jmp    42a266 <flatcc_json_printer_bool_field@@Base+0x96>
  42a255:	mov    WORD PTR [rax+0x4],0x65
  42a25b:	mov    DWORD PTR [rax],0x736c6166
  42a261:	mov    eax,0x5
  42a266:	add    QWORD PTR [rbx+0x28],rax
  42a26a:	add    rsp,0x8
  42a26e:	pop    rbx
  42a26f:	pop    rbp
  42a270:	ret    
  42a271:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a27b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a280 <flatcc_json_printer_float_field@@Base>:
  42a280:	push   rbx
  42a281:	sub    rsp,0x10
  42a285:	mov    rbx,rdi
  42a288:	lea    eax,[rdx+rdx*1]
  42a28b:	add    eax,0x4
  42a28e:	cmp    eax,DWORD PTR [rsi+0x10]
  42a291:	jge    42a2bf <flatcc_json_printer_float_field@@Base+0x3f>
  42a293:	mov    rdx,QWORD PTR [rsi+0x8]
  42a297:	mov    eax,eax
  42a299:	movzx  eax,WORD PTR [rdx+rax*1]
  42a29d:	test   rax,rax
  42a2a0:	je     42a2bf <flatcc_json_printer_float_field@@Base+0x3f>
  42a2a2:	add    rax,QWORD PTR [rsi]
  42a2a5:	je     42a2bf <flatcc_json_printer_float_field@@Base+0x3f>
  42a2a7:	vmovss xmm1,DWORD PTR [rax]
  42a2ab:	vucomiss xmm1,xmm0
  42a2af:	jne    42a314 <flatcc_json_printer_float_field@@Base+0x94>
  42a2b1:	jp     42a314 <flatcc_json_printer_float_field@@Base+0x94>
  42a2b3:	cmp    BYTE PTR [rbx+0x34],0x0
  42a2b7:	vmovaps xmm0,xmm1
  42a2bb:	jne    42a30e <flatcc_json_printer_float_field@@Base+0x8e>
  42a2bd:	jmp    42a2c5 <flatcc_json_printer_float_field@@Base+0x45>
  42a2bf:	cmp    BYTE PTR [rbx+0x35],0x0
  42a2c3:	je     42a30e <flatcc_json_printer_float_field@@Base+0x8e>
  42a2c5:	vmovss DWORD PTR [rsp+0xc],xmm0
  42a2cb:	mov    eax,DWORD PTR [rsi+0x18]
  42a2ce:	lea    edx,[rax+0x1]
  42a2d1:	mov    DWORD PTR [rsi+0x18],edx
  42a2d4:	test   eax,eax
  42a2d6:	je     42a2e7 <flatcc_json_printer_float_field@@Base+0x67>
  42a2d8:	mov    rax,QWORD PTR [rbx+0x28]
  42a2dc:	lea    rdx,[rax+0x1]
  42a2e0:	mov    QWORD PTR [rbx+0x28],rdx
  42a2e4:	mov    BYTE PTR [rax],0x2c
  42a2e7:	movsxd rdx,r8d
  42a2ea:	mov    rdi,rbx
  42a2ed:	mov    rsi,rcx
  42a2f0:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a2f5:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42a2fb:	vcvtss2sd xmm0,xmm0,xmm0
  42a2ff:	mov    rdi,QWORD PTR [rbx+0x28]
  42a303:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42a308:	cdqe   
  42a30a:	add    QWORD PTR [rbx+0x28],rax
  42a30e:	add    rsp,0x10
  42a312:	pop    rbx
  42a313:	ret    
  42a314:	vmovaps xmm0,xmm1
  42a318:	jmp    42a2c5 <flatcc_json_printer_float_field@@Base+0x45>
  42a31a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a320 <flatcc_json_printer_double_field@@Base>:
  42a320:	push   rbx
  42a321:	sub    rsp,0x10
  42a325:	mov    rbx,rdi
  42a328:	lea    eax,[rdx+rdx*1]
  42a32b:	add    eax,0x4
  42a32e:	cmp    eax,DWORD PTR [rsi+0x10]
  42a331:	jge    42a35f <flatcc_json_printer_double_field@@Base+0x3f>
  42a333:	mov    rdx,QWORD PTR [rsi+0x8]
  42a337:	mov    eax,eax
  42a339:	movzx  eax,WORD PTR [rdx+rax*1]
  42a33d:	test   rax,rax
  42a340:	je     42a35f <flatcc_json_printer_double_field@@Base+0x3f>
  42a342:	add    rax,QWORD PTR [rsi]
  42a345:	je     42a35f <flatcc_json_printer_double_field@@Base+0x3f>
  42a347:	vmovsd xmm1,QWORD PTR [rax]
  42a34b:	vucomisd xmm1,xmm0
  42a34f:	jne    42a3b0 <flatcc_json_printer_double_field@@Base+0x90>
  42a351:	jp     42a3b0 <flatcc_json_printer_double_field@@Base+0x90>
  42a353:	cmp    BYTE PTR [rbx+0x34],0x0
  42a357:	vmovaps xmm0,xmm1
  42a35b:	jne    42a3aa <flatcc_json_printer_double_field@@Base+0x8a>
  42a35d:	jmp    42a365 <flatcc_json_printer_double_field@@Base+0x45>
  42a35f:	cmp    BYTE PTR [rbx+0x35],0x0
  42a363:	je     42a3aa <flatcc_json_printer_double_field@@Base+0x8a>
  42a365:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42a36b:	mov    eax,DWORD PTR [rsi+0x18]
  42a36e:	lea    edx,[rax+0x1]
  42a371:	mov    DWORD PTR [rsi+0x18],edx
  42a374:	test   eax,eax
  42a376:	je     42a387 <flatcc_json_printer_double_field@@Base+0x67>
  42a378:	mov    rax,QWORD PTR [rbx+0x28]
  42a37c:	lea    rdx,[rax+0x1]
  42a380:	mov    QWORD PTR [rbx+0x28],rdx
  42a384:	mov    BYTE PTR [rax],0x2c
  42a387:	movsxd rdx,r8d
  42a38a:	mov    rdi,rbx
  42a38d:	mov    rsi,rcx
  42a390:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a395:	mov    rdi,QWORD PTR [rbx+0x28]
  42a399:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42a39f:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42a3a4:	cdqe   
  42a3a6:	add    QWORD PTR [rbx+0x28],rax
  42a3aa:	add    rsp,0x10
  42a3ae:	pop    rbx
  42a3af:	ret    
  42a3b0:	vmovaps xmm0,xmm1
  42a3b4:	jmp    42a365 <flatcc_json_printer_double_field@@Base+0x45>
  42a3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a3c0 <flatcc_json_printer_uint8_enum_field@@Base>:
  42a3c0:	push   r15
  42a3c2:	push   r14
  42a3c4:	push   rbx
  42a3c5:	mov    r14,rdi
  42a3c8:	mov    rdi,QWORD PTR [rsp+0x20]
  42a3cd:	lea    eax,[rdx+rdx*1]
  42a3d0:	add    eax,0x4
  42a3d3:	cmp    eax,DWORD PTR [rsi+0x10]
  42a3d6:	jge    42a403 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42a3d8:	mov    rdx,QWORD PTR [rsi+0x8]
  42a3dc:	mov    eax,eax
  42a3de:	movzx  eax,WORD PTR [rdx+rax*1]
  42a3e2:	test   rax,rax
  42a3e5:	je     42a403 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42a3e7:	add    rax,QWORD PTR [rsi]
  42a3ea:	je     42a403 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42a3ec:	mov    bl,BYTE PTR [rax]
  42a3ee:	cmp    bl,r9b
  42a3f1:	jne    42a411 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  42a3f3:	cmp    BYTE PTR [r14+0x34],0x0
  42a3f8:	mov    ebx,r9d
  42a3fb:	jne    42a4d5 <flatcc_json_printer_uint8_enum_field@@Base+0x115>
  42a401:	jmp    42a411 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  42a403:	cmp    BYTE PTR [r14+0x35],0x0
  42a408:	mov    ebx,r9d
  42a40b:	je     42a4d5 <flatcc_json_printer_uint8_enum_field@@Base+0x115>
  42a411:	mov    r15,rdi
  42a414:	mov    eax,DWORD PTR [rsi+0x18]
  42a417:	lea    edx,[rax+0x1]
  42a41a:	mov    DWORD PTR [rsi+0x18],edx
  42a41d:	test   eax,eax
  42a41f:	je     42a430 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
  42a421:	mov    rax,QWORD PTR [r14+0x28]
  42a425:	lea    rdx,[rax+0x1]
  42a429:	mov    QWORD PTR [r14+0x28],rdx
  42a42d:	mov    BYTE PTR [rax],0x2c
  42a430:	movsxd rdx,r8d
  42a433:	mov    rdi,r14
  42a436:	mov    rsi,rcx
  42a439:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a43e:	cmp    BYTE PTR [r14+0x33],0x0
  42a443:	je     42a481 <flatcc_json_printer_uint8_enum_field@@Base+0xc1>
  42a445:	mov    rax,QWORD PTR [r14+0x28]
  42a449:	cmp    bl,0x64
  42a44c:	jb     42a491 <flatcc_json_printer_uint8_enum_field@@Base+0xd1>
  42a44e:	mov    BYTE PTR [rax+0x3],0x0
  42a452:	movzx  ecx,bl
  42a455:	lea    edx,[rcx+rcx*4]
  42a458:	lea    ecx,[rcx+rdx*8]
  42a45b:	shr    ecx,0xc
  42a45e:	imul   edx,ecx,0x64
  42a461:	sub    bl,dl
  42a463:	movzx  edx,bl
  42a466:	lea    rsi,[rip+0x118b3]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a46d:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a471:	mov    WORD PTR [rax+0x1],dx
  42a475:	or     cl,0x30
  42a478:	mov    BYTE PTR [rax],cl
  42a47a:	mov    eax,0x3
  42a47f:	jmp    42a4d1 <flatcc_json_printer_uint8_enum_field@@Base+0x111>
  42a481:	movzx  esi,bl
  42a484:	mov    rdi,r14
  42a487:	mov    rax,r15
  42a48a:	pop    rbx
  42a48b:	pop    r14
  42a48d:	pop    r15
  42a48f:	jmp    rax
  42a491:	cmp    bl,0xa
  42a494:	jb     42a4c3 <flatcc_json_printer_uint8_enum_field@@Base+0x103>
  42a496:	mov    BYTE PTR [rax+0x2],0x0
  42a49a:	movzx  ecx,bl
  42a49d:	lea    edx,[rcx+rcx*4]
  42a4a0:	lea    ecx,[rcx+rdx*8]
  42a4a3:	shr    ecx,0xc
  42a4a6:	imul   ecx,ecx,0x64
  42a4a9:	sub    bl,cl
  42a4ab:	movzx  ecx,bl
  42a4ae:	lea    rdx,[rip+0x1186b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a4b5:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42a4b9:	mov    WORD PTR [rax],cx
  42a4bc:	mov    eax,0x2
  42a4c1:	jmp    42a4d1 <flatcc_json_printer_uint8_enum_field@@Base+0x111>
  42a4c3:	mov    BYTE PTR [rax+0x1],0x0
  42a4c7:	add    bl,0x30
  42a4ca:	mov    BYTE PTR [rax],bl
  42a4cc:	mov    eax,0x1
  42a4d1:	add    QWORD PTR [r14+0x28],rax
  42a4d5:	pop    rbx
  42a4d6:	pop    r14
  42a4d8:	pop    r15
  42a4da:	ret    
  42a4db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a4e0 <flatcc_json_printer_uint16_enum_field@@Base>:
  42a4e0:	push   rbp
  42a4e1:	push   r14
  42a4e3:	push   rbx
  42a4e4:	mov    rbx,rdi
  42a4e7:	mov    rdi,QWORD PTR [rsp+0x20]
  42a4ec:	lea    eax,[rdx+rdx*1]
  42a4ef:	add    eax,0x4
  42a4f2:	cmp    eax,DWORD PTR [rsi+0x10]
  42a4f5:	jge    42a523 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42a4f7:	mov    rdx,QWORD PTR [rsi+0x8]
  42a4fb:	mov    eax,eax
  42a4fd:	movzx  eax,WORD PTR [rdx+rax*1]
  42a501:	test   rax,rax
  42a504:	je     42a523 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42a506:	add    rax,QWORD PTR [rsi]
  42a509:	je     42a523 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42a50b:	movzx  ebp,WORD PTR [rax]
  42a50e:	cmp    bp,r9w
  42a512:	jne    42a530 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  42a514:	cmp    BYTE PTR [rbx+0x34],0x0
  42a518:	mov    ebp,r9d
  42a51b:	jne    42a69d <flatcc_json_printer_uint16_enum_field@@Base+0x1bd>
  42a521:	jmp    42a530 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  42a523:	cmp    BYTE PTR [rbx+0x35],0x0
  42a527:	mov    ebp,r9d
  42a52a:	je     42a69d <flatcc_json_printer_uint16_enum_field@@Base+0x1bd>
  42a530:	mov    r14,rdi
  42a533:	mov    eax,DWORD PTR [rsi+0x18]
  42a536:	lea    edx,[rax+0x1]
  42a539:	mov    DWORD PTR [rsi+0x18],edx
  42a53c:	test   eax,eax
  42a53e:	je     42a54f <flatcc_json_printer_uint16_enum_field@@Base+0x6f>
  42a540:	mov    rax,QWORD PTR [rbx+0x28]
  42a544:	lea    rdx,[rax+0x1]
  42a548:	mov    QWORD PTR [rbx+0x28],rdx
  42a54c:	mov    BYTE PTR [rax],0x2c
  42a54f:	movsxd rdx,r8d
  42a552:	mov    rdi,rbx
  42a555:	mov    rsi,rcx
  42a558:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a55d:	cmp    BYTE PTR [rbx+0x33],0x0
  42a561:	je     42a582 <flatcc_json_printer_uint16_enum_field@@Base+0xa2>
  42a563:	mov    rsi,QWORD PTR [rbx+0x28]
  42a567:	movzx  edx,bp
  42a56a:	cmp    edx,0x3e8
  42a570:	jb     42a591 <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  42a572:	xor    eax,eax
  42a574:	cmp    edx,0x270f
  42a57a:	seta   al
  42a57d:	or     eax,0x4
  42a580:	jmp    42a5b7 <flatcc_json_printer_uint16_enum_field@@Base+0xd7>
  42a582:	movzx  esi,bp
  42a585:	mov    rdi,rbx
  42a588:	mov    rax,r14
  42a58b:	pop    rbx
  42a58c:	pop    r14
  42a58e:	pop    rbp
  42a58f:	jmp    rax
  42a591:	cmp    bp,0x64
  42a595:	jb     42a5ac <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
  42a597:	mov    BYTE PTR [rsi+0x3],0x0
  42a59b:	add    rsi,0x3
  42a59f:	mov    eax,0x3
  42a5a4:	mov    rcx,rsi
  42a5a7:	jmp    42a663 <flatcc_json_printer_uint16_enum_field@@Base+0x183>
  42a5ac:	xor    eax,eax
  42a5ae:	cmp    bp,0x9
  42a5b2:	seta   al
  42a5b5:	inc    eax
  42a5b7:	mov    edi,eax
  42a5b9:	lea    rcx,[rsi+rdi*1]
  42a5bd:	mov    BYTE PTR [rsi+rdi*1],0x0
  42a5c1:	test   al,0x1
  42a5c3:	jne    42a626 <flatcc_json_printer_uint16_enum_field@@Base+0x146>
  42a5c5:	cmp    eax,0x2
  42a5c8:	je     42a5fc <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  42a5ca:	cmp    eax,0x4
  42a5cd:	jne    42a697 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  42a5d3:	mov    esi,edx
  42a5d5:	shr    esi,0x2
  42a5d8:	imul   ebp,esi,0x147b
  42a5de:	shr    ebp,0x11
  42a5e1:	imul   esi,ebp,0x64
  42a5e4:	sub    edx,esi
  42a5e6:	movzx  edx,dx
  42a5e9:	lea    rsi,[rip+0x11730]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a5f0:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a5f4:	mov    WORD PTR [rcx-0x2],dx
  42a5f8:	add    rcx,0xfffffffffffffffe
  42a5fc:	movzx  edx,bp
  42a5ff:	mov    esi,edx
  42a601:	shr    esi,0x2
  42a604:	imul   esi,esi,0x147b
  42a60a:	shr    esi,0x11
  42a60d:	imul   esi,esi,0x64
  42a610:	sub    edx,esi
  42a612:	movzx  edx,dx
  42a615:	lea    rsi,[rip+0x11704]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a61c:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a620:	mov    WORD PTR [rcx-0x2],dx
  42a624:	jmp    42a697 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  42a626:	cmp    eax,0x1
  42a629:	je     42a68f <flatcc_json_printer_uint16_enum_field@@Base+0x1af>
  42a62b:	cmp    eax,0x3
  42a62e:	je     42a663 <flatcc_json_printer_uint16_enum_field@@Base+0x183>
  42a630:	cmp    eax,0x5
  42a633:	jne    42a697 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  42a635:	mov    eax,edx
  42a637:	shr    eax,0x2
  42a63a:	imul   ebp,eax,0x147b
  42a640:	shr    ebp,0x11
  42a643:	imul   eax,ebp,0x64
  42a646:	sub    edx,eax
  42a648:	movzx  eax,dx
  42a64b:	lea    rdx,[rip+0x116ce]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a652:	movzx  eax,WORD PTR [rdx+rax*2]
  42a656:	mov    WORD PTR [rcx-0x2],ax
  42a65a:	add    rcx,0xfffffffffffffffe
  42a65e:	mov    eax,0x5
  42a663:	movzx  edx,bp
  42a666:	mov    esi,edx
  42a668:	shr    esi,0x2
  42a66b:	imul   ebp,esi,0x147b
  42a671:	shr    ebp,0x11
  42a674:	imul   esi,ebp,0x64
  42a677:	sub    edx,esi
  42a679:	movzx  edx,dx
  42a67c:	lea    rsi,[rip+0x1169d]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a683:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a687:	mov    WORD PTR [rcx-0x2],dx
  42a68b:	add    rcx,0xfffffffffffffffe
  42a68f:	add    bpl,0x30
  42a693:	mov    BYTE PTR [rcx-0x1],bpl
  42a697:	mov    eax,eax
  42a699:	add    QWORD PTR [rbx+0x28],rax
  42a69d:	pop    rbx
  42a69e:	pop    r14
  42a6a0:	pop    rbp
  42a6a1:	ret    
  42a6a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a6ac:	nop    DWORD PTR [rax+0x0]

000000000042a6b0 <flatcc_json_printer_uint32_enum_field@@Base>:
  42a6b0:	push   rbp
  42a6b1:	push   r14
  42a6b3:	push   rbx
  42a6b4:	mov    rbx,rdi
  42a6b7:	mov    rdi,QWORD PTR [rsp+0x20]
  42a6bc:	lea    eax,[rdx+rdx*1]
  42a6bf:	add    eax,0x4
  42a6c2:	cmp    eax,DWORD PTR [rsi+0x10]
  42a6c5:	jge    42a6ed <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42a6c7:	mov    rdx,QWORD PTR [rsi+0x8]
  42a6cb:	mov    eax,eax
  42a6cd:	movzx  eax,WORD PTR [rdx+rax*1]
  42a6d1:	test   rax,rax
  42a6d4:	je     42a6ed <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42a6d6:	add    rax,QWORD PTR [rsi]
  42a6d9:	je     42a6ed <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42a6db:	mov    ebp,DWORD PTR [rax]
  42a6dd:	cmp    ebp,r9d
  42a6e0:	jne    42a6f6 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  42a6e2:	cmp    BYTE PTR [rbx+0x34],0x0
  42a6e6:	mov    ebp,r9d
  42a6e9:	jne    42a73a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  42a6eb:	jmp    42a6f6 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  42a6ed:	cmp    BYTE PTR [rbx+0x35],0x0
  42a6f1:	mov    ebp,r9d
  42a6f4:	je     42a73a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  42a6f6:	mov    r14,rdi
  42a6f9:	mov    eax,DWORD PTR [rsi+0x18]
  42a6fc:	lea    edx,[rax+0x1]
  42a6ff:	mov    DWORD PTR [rsi+0x18],edx
  42a702:	test   eax,eax
  42a704:	je     42a715 <flatcc_json_printer_uint32_enum_field@@Base+0x65>
  42a706:	mov    rax,QWORD PTR [rbx+0x28]
  42a70a:	lea    rdx,[rax+0x1]
  42a70e:	mov    QWORD PTR [rbx+0x28],rdx
  42a712:	mov    BYTE PTR [rax],0x2c
  42a715:	movsxd rdx,r8d
  42a718:	mov    rdi,rbx
  42a71b:	mov    rsi,rcx
  42a71e:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a723:	cmp    BYTE PTR [rbx+0x33],0x0
  42a727:	je     42a73f <flatcc_json_printer_uint32_enum_field@@Base+0x8f>
  42a729:	mov    rsi,QWORD PTR [rbx+0x28]
  42a72d:	mov    edi,ebp
  42a72f:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42a734:	cdqe   
  42a736:	add    QWORD PTR [rbx+0x28],rax
  42a73a:	pop    rbx
  42a73b:	pop    r14
  42a73d:	pop    rbp
  42a73e:	ret    
  42a73f:	mov    rdi,rbx
  42a742:	mov    esi,ebp
  42a744:	mov    rax,r14
  42a747:	pop    rbx
  42a748:	pop    r14
  42a74a:	pop    rbp
  42a74b:	jmp    rax
  42a74d:	nop    DWORD PTR [rax]

000000000042a750 <flatcc_json_printer_uint64_enum_field@@Base>:
  42a750:	push   r15
  42a752:	push   r14
  42a754:	push   rbx
  42a755:	mov    rbx,rdi
  42a758:	mov    rdi,QWORD PTR [rsp+0x20]
  42a75d:	lea    eax,[rdx+rdx*1]
  42a760:	add    eax,0x4
  42a763:	cmp    eax,DWORD PTR [rsi+0x10]
  42a766:	jge    42a78f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42a768:	mov    rdx,QWORD PTR [rsi+0x8]
  42a76c:	mov    eax,eax
  42a76e:	movzx  eax,WORD PTR [rdx+rax*1]
  42a772:	test   rax,rax
  42a775:	je     42a78f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42a777:	add    rax,QWORD PTR [rsi]
  42a77a:	je     42a78f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42a77c:	mov    r14,QWORD PTR [rax]
  42a77f:	cmp    r14,r9
  42a782:	jne    42a798 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  42a784:	cmp    BYTE PTR [rbx+0x34],0x0
  42a788:	mov    r14,r9
  42a78b:	jne    42a7dd <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  42a78d:	jmp    42a798 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  42a78f:	cmp    BYTE PTR [rbx+0x35],0x0
  42a793:	mov    r14,r9
  42a796:	je     42a7dd <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  42a798:	mov    r15,rdi
  42a79b:	mov    eax,DWORD PTR [rsi+0x18]
  42a79e:	lea    edx,[rax+0x1]
  42a7a1:	mov    DWORD PTR [rsi+0x18],edx
  42a7a4:	test   eax,eax
  42a7a6:	je     42a7b7 <flatcc_json_printer_uint64_enum_field@@Base+0x67>
  42a7a8:	mov    rax,QWORD PTR [rbx+0x28]
  42a7ac:	lea    rdx,[rax+0x1]
  42a7b0:	mov    QWORD PTR [rbx+0x28],rdx
  42a7b4:	mov    BYTE PTR [rax],0x2c
  42a7b7:	movsxd rdx,r8d
  42a7ba:	mov    rdi,rbx
  42a7bd:	mov    rsi,rcx
  42a7c0:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a7c5:	cmp    BYTE PTR [rbx+0x33],0x0
  42a7c9:	je     42a7e3 <flatcc_json_printer_uint64_enum_field@@Base+0x93>
  42a7cb:	mov    rsi,QWORD PTR [rbx+0x28]
  42a7cf:	mov    rdi,r14
  42a7d2:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42a7d7:	cdqe   
  42a7d9:	add    QWORD PTR [rbx+0x28],rax
  42a7dd:	pop    rbx
  42a7de:	pop    r14
  42a7e0:	pop    r15
  42a7e2:	ret    
  42a7e3:	mov    rdi,rbx
  42a7e6:	mov    rsi,r14
  42a7e9:	mov    rax,r15
  42a7ec:	pop    rbx
  42a7ed:	pop    r14
  42a7ef:	pop    r15
  42a7f1:	jmp    rax
  42a7f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a7fd:	nop    DWORD PTR [rax]

000000000042a800 <flatcc_json_printer_int8_enum_field@@Base>:
  42a800:	push   r15
  42a802:	push   r14
  42a804:	push   rbx
  42a805:	mov    r14,rdi
  42a808:	mov    rdi,QWORD PTR [rsp+0x20]
  42a80d:	lea    eax,[rdx+rdx*1]
  42a810:	add    eax,0x4
  42a813:	cmp    eax,DWORD PTR [rsi+0x10]
  42a816:	jge    42a843 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42a818:	mov    rdx,QWORD PTR [rsi+0x8]
  42a81c:	mov    eax,eax
  42a81e:	movzx  eax,WORD PTR [rdx+rax*1]
  42a822:	test   rax,rax
  42a825:	je     42a843 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42a827:	add    rax,QWORD PTR [rsi]
  42a82a:	je     42a843 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42a82c:	mov    bl,BYTE PTR [rax]
  42a82e:	cmp    bl,r9b
  42a831:	jne    42a851 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  42a833:	cmp    BYTE PTR [r14+0x34],0x0
  42a838:	mov    ebx,r9d
  42a83b:	jne    42a932 <flatcc_json_printer_int8_enum_field@@Base+0x132>
  42a841:	jmp    42a851 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  42a843:	cmp    BYTE PTR [r14+0x35],0x0
  42a848:	mov    ebx,r9d
  42a84b:	je     42a932 <flatcc_json_printer_int8_enum_field@@Base+0x132>
  42a851:	mov    r15,rdi
  42a854:	mov    eax,DWORD PTR [rsi+0x18]
  42a857:	lea    edx,[rax+0x1]
  42a85a:	mov    DWORD PTR [rsi+0x18],edx
  42a85d:	test   eax,eax
  42a85f:	je     42a870 <flatcc_json_printer_int8_enum_field@@Base+0x70>
  42a861:	mov    rax,QWORD PTR [r14+0x28]
  42a865:	lea    rdx,[rax+0x1]
  42a869:	mov    QWORD PTR [r14+0x28],rdx
  42a86d:	mov    BYTE PTR [rax],0x2c
  42a870:	movsxd rdx,r8d
  42a873:	mov    rdi,r14
  42a876:	mov    rsi,rcx
  42a879:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a87e:	cmp    BYTE PTR [r14+0x33],0x0
  42a883:	je     42a8ce <flatcc_json_printer_int8_enum_field@@Base+0xce>
  42a885:	mov    rcx,QWORD PTR [r14+0x28]
  42a889:	mov    eax,ebx
  42a88b:	shr    al,0x7
  42a88e:	movzx  eax,al
  42a891:	test   bl,bl
  42a893:	js     42a8de <flatcc_json_printer_int8_enum_field@@Base+0xde>
  42a895:	cmp    bl,0x64
  42a898:	jb     42a8eb <flatcc_json_printer_int8_enum_field@@Base+0xeb>
  42a89a:	mov    BYTE PTR [rcx+0x3],0x0
  42a89e:	movzx  edx,bl
  42a8a1:	lea    esi,[rdx+rdx*4]
  42a8a4:	lea    edx,[rdx+rsi*8]
  42a8a7:	shr    edx,0xc
  42a8aa:	imul   esi,edx,0x64
  42a8ad:	sub    bl,sil
  42a8b0:	movzx  esi,bl
  42a8b3:	lea    rdi,[rip+0x11466]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a8ba:	movzx  esi,WORD PTR [rdi+rsi*2]
  42a8be:	mov    WORD PTR [rcx+0x1],si
  42a8c2:	or     dl,0x30
  42a8c5:	mov    BYTE PTR [rcx],dl
  42a8c7:	mov    ecx,0x3
  42a8cc:	jmp    42a92b <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  42a8ce:	movsx  esi,bl
  42a8d1:	mov    rdi,r14
  42a8d4:	mov    rax,r15
  42a8d7:	pop    rbx
  42a8d8:	pop    r14
  42a8da:	pop    r15
  42a8dc:	jmp    rax
  42a8de:	mov    BYTE PTR [rcx],0x2d
  42a8e1:	inc    rcx
  42a8e4:	neg    bl
  42a8e6:	cmp    bl,0x64
  42a8e9:	jae    42a89a <flatcc_json_printer_int8_enum_field@@Base+0x9a>
  42a8eb:	cmp    bl,0xa
  42a8ee:	jb     42a91d <flatcc_json_printer_int8_enum_field@@Base+0x11d>
  42a8f0:	mov    BYTE PTR [rcx+0x2],0x0
  42a8f4:	movzx  edx,bl
  42a8f7:	lea    esi,[rdx+rdx*4]
  42a8fa:	lea    edx,[rdx+rsi*8]
  42a8fd:	shr    edx,0xc
  42a900:	imul   edx,edx,0x64
  42a903:	sub    bl,dl
  42a905:	movzx  edx,bl
  42a908:	lea    rsi,[rip+0x11411]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42a90f:	movzx  edx,WORD PTR [rsi+rdx*2]
  42a913:	mov    WORD PTR [rcx],dx
  42a916:	mov    ecx,0x2
  42a91b:	jmp    42a92b <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  42a91d:	mov    BYTE PTR [rcx+0x1],0x0
  42a921:	add    bl,0x30
  42a924:	mov    BYTE PTR [rcx],bl
  42a926:	mov    ecx,0x1
  42a92b:	add    rcx,rax
  42a92e:	add    QWORD PTR [r14+0x28],rcx
  42a932:	pop    rbx
  42a933:	pop    r14
  42a935:	pop    r15
  42a937:	ret    
  42a938:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a940 <flatcc_json_printer_int16_enum_field@@Base>:
  42a940:	push   rbp
  42a941:	push   r14
  42a943:	push   rbx
  42a944:	mov    rbx,rdi
  42a947:	mov    rdi,QWORD PTR [rsp+0x20]
  42a94c:	lea    eax,[rdx+rdx*1]
  42a94f:	add    eax,0x4
  42a952:	cmp    eax,DWORD PTR [rsi+0x10]
  42a955:	jge    42a983 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42a957:	mov    rdx,QWORD PTR [rsi+0x8]
  42a95b:	mov    eax,eax
  42a95d:	movzx  eax,WORD PTR [rdx+rax*1]
  42a961:	test   rax,rax
  42a964:	je     42a983 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42a966:	add    rax,QWORD PTR [rsi]
  42a969:	je     42a983 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42a96b:	movzx  ebp,WORD PTR [rax]
  42a96e:	cmp    bp,r9w
  42a972:	jne    42a990 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  42a974:	cmp    BYTE PTR [rbx+0x34],0x0
  42a978:	mov    ebp,r9d
  42a97b:	jne    42ab15 <flatcc_json_printer_int16_enum_field@@Base+0x1d5>
  42a981:	jmp    42a990 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  42a983:	cmp    BYTE PTR [rbx+0x35],0x0
  42a987:	mov    ebp,r9d
  42a98a:	je     42ab15 <flatcc_json_printer_int16_enum_field@@Base+0x1d5>
  42a990:	mov    r14,rdi
  42a993:	mov    eax,DWORD PTR [rsi+0x18]
  42a996:	lea    edx,[rax+0x1]
  42a999:	mov    DWORD PTR [rsi+0x18],edx
  42a99c:	test   eax,eax
  42a99e:	je     42a9af <flatcc_json_printer_int16_enum_field@@Base+0x6f>
  42a9a0:	mov    rax,QWORD PTR [rbx+0x28]
  42a9a4:	lea    rdx,[rax+0x1]
  42a9a8:	mov    QWORD PTR [rbx+0x28],rdx
  42a9ac:	mov    BYTE PTR [rax],0x2c
  42a9af:	movsxd rdx,r8d
  42a9b2:	mov    rdi,rbx
  42a9b5:	mov    rsi,rcx
  42a9b8:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42a9bd:	cmp    BYTE PTR [rbx+0x33],0x0
  42a9c1:	je     42a9f8 <flatcc_json_printer_int16_enum_field@@Base+0xb8>
  42a9c3:	mov    rdi,QWORD PTR [rbx+0x28]
  42a9c7:	movzx  r8d,bp
  42a9cb:	test   r8w,r8w
  42a9cf:	jns    42a9d9 <flatcc_json_printer_int16_enum_field@@Base+0x99>
  42a9d1:	mov    BYTE PTR [rdi],0x2d
  42a9d4:	inc    rdi
  42a9d7:	neg    ebp
  42a9d9:	shr    r8d,0xf
  42a9dd:	movzx  esi,bp
  42a9e0:	cmp    esi,0x3e8
  42a9e6:	jb     42aa07 <flatcc_json_printer_int16_enum_field@@Base+0xc7>
  42a9e8:	xor    ecx,ecx
  42a9ea:	cmp    esi,0x270f
  42a9f0:	seta   cl
  42a9f3:	or     ecx,0x4
  42a9f6:	jmp    42aa2d <flatcc_json_printer_int16_enum_field@@Base+0xed>
  42a9f8:	movsx  esi,bp
  42a9fb:	mov    rdi,rbx
  42a9fe:	mov    rax,r14
  42aa01:	pop    rbx
  42aa02:	pop    r14
  42aa04:	pop    rbp
  42aa05:	jmp    rax
  42aa07:	cmp    bp,0x64
  42aa0b:	jb     42aa22 <flatcc_json_printer_int16_enum_field@@Base+0xe2>
  42aa0d:	mov    BYTE PTR [rdi+0x3],0x0
  42aa11:	add    rdi,0x3
  42aa15:	mov    ecx,0x3
  42aa1a:	mov    rdx,rdi
  42aa1d:	jmp    42aada <flatcc_json_printer_int16_enum_field@@Base+0x19a>
  42aa22:	xor    ecx,ecx
  42aa24:	cmp    bp,0x9
  42aa28:	seta   cl
  42aa2b:	inc    ecx
  42aa2d:	mov    eax,ecx
  42aa2f:	lea    rdx,[rdi+rax*1]
  42aa33:	mov    BYTE PTR [rdi+rax*1],0x0
  42aa37:	test   cl,0x1
  42aa3a:	jne    42aa9d <flatcc_json_printer_int16_enum_field@@Base+0x15d>
  42aa3c:	cmp    ecx,0x2
  42aa3f:	je     42aa73 <flatcc_json_printer_int16_enum_field@@Base+0x133>
  42aa41:	cmp    ecx,0x4
  42aa44:	jne    42ab0e <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  42aa4a:	mov    eax,esi
  42aa4c:	shr    eax,0x2
  42aa4f:	imul   ebp,eax,0x147b
  42aa55:	shr    ebp,0x11
  42aa58:	imul   eax,ebp,0x64
  42aa5b:	sub    esi,eax
  42aa5d:	movzx  eax,si
  42aa60:	lea    rsi,[rip+0x112b9]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aa67:	movzx  eax,WORD PTR [rsi+rax*2]
  42aa6b:	mov    WORD PTR [rdx-0x2],ax
  42aa6f:	add    rdx,0xfffffffffffffffe
  42aa73:	movzx  eax,bp
  42aa76:	mov    esi,eax
  42aa78:	shr    esi,0x2
  42aa7b:	imul   esi,esi,0x147b
  42aa81:	shr    esi,0x11
  42aa84:	imul   esi,esi,0x64
  42aa87:	sub    eax,esi
  42aa89:	movzx  eax,ax
  42aa8c:	lea    rsi,[rip+0x1128d]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aa93:	movzx  eax,WORD PTR [rsi+rax*2]
  42aa97:	mov    WORD PTR [rdx-0x2],ax
  42aa9b:	jmp    42ab0e <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  42aa9d:	cmp    ecx,0x1
  42aaa0:	je     42ab06 <flatcc_json_printer_int16_enum_field@@Base+0x1c6>
  42aaa2:	cmp    ecx,0x3
  42aaa5:	je     42aada <flatcc_json_printer_int16_enum_field@@Base+0x19a>
  42aaa7:	cmp    ecx,0x5
  42aaaa:	jne    42ab0e <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  42aaac:	mov    eax,esi
  42aaae:	shr    eax,0x2
  42aab1:	imul   ebp,eax,0x147b
  42aab7:	shr    ebp,0x11
  42aaba:	imul   eax,ebp,0x64
  42aabd:	sub    esi,eax
  42aabf:	movzx  eax,si
  42aac2:	lea    rcx,[rip+0x11257]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aac9:	movzx  eax,WORD PTR [rcx+rax*2]
  42aacd:	mov    WORD PTR [rdx-0x2],ax
  42aad1:	add    rdx,0xfffffffffffffffe
  42aad5:	mov    ecx,0x5
  42aada:	movzx  eax,bp
  42aadd:	mov    esi,eax
  42aadf:	shr    esi,0x2
  42aae2:	imul   ebp,esi,0x147b
  42aae8:	shr    ebp,0x11
  42aaeb:	imul   esi,ebp,0x64
  42aaee:	sub    eax,esi
  42aaf0:	movzx  eax,ax
  42aaf3:	lea    rsi,[rip+0x11226]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aafa:	movzx  eax,WORD PTR [rsi+rax*2]
  42aafe:	mov    WORD PTR [rdx-0x2],ax
  42ab02:	add    rdx,0xfffffffffffffffe
  42ab06:	add    bpl,0x30
  42ab0a:	mov    BYTE PTR [rdx-0x1],bpl
  42ab0e:	add    ecx,r8d
  42ab11:	add    QWORD PTR [rbx+0x28],rcx
  42ab15:	pop    rbx
  42ab16:	pop    r14
  42ab18:	pop    rbp
  42ab19:	ret    
  42ab1a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ab20 <flatcc_json_printer_int32_enum_field@@Base>:
  42ab20:	push   rbp
  42ab21:	push   r14
  42ab23:	push   rbx
  42ab24:	mov    rbx,rdi
  42ab27:	mov    rdi,QWORD PTR [rsp+0x20]
  42ab2c:	lea    eax,[rdx+rdx*1]
  42ab2f:	add    eax,0x4
  42ab32:	cmp    eax,DWORD PTR [rsi+0x10]
  42ab35:	jge    42ab5d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42ab37:	mov    rdx,QWORD PTR [rsi+0x8]
  42ab3b:	mov    eax,eax
  42ab3d:	movzx  eax,WORD PTR [rdx+rax*1]
  42ab41:	test   rax,rax
  42ab44:	je     42ab5d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42ab46:	add    rax,QWORD PTR [rsi]
  42ab49:	je     42ab5d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42ab4b:	mov    ebp,DWORD PTR [rax]
  42ab4d:	cmp    ebp,r9d
  42ab50:	jne    42ab66 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42ab52:	cmp    BYTE PTR [rbx+0x34],0x0
  42ab56:	mov    ebp,r9d
  42ab59:	jne    42abc0 <flatcc_json_printer_int32_enum_field@@Base+0xa0>
  42ab5b:	jmp    42ab66 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42ab5d:	cmp    BYTE PTR [rbx+0x35],0x0
  42ab61:	mov    ebp,r9d
  42ab64:	je     42abc0 <flatcc_json_printer_int32_enum_field@@Base+0xa0>
  42ab66:	mov    r14,rdi
  42ab69:	mov    eax,DWORD PTR [rsi+0x18]
  42ab6c:	lea    edx,[rax+0x1]
  42ab6f:	mov    DWORD PTR [rsi+0x18],edx
  42ab72:	test   eax,eax
  42ab74:	je     42ab85 <flatcc_json_printer_int32_enum_field@@Base+0x65>
  42ab76:	mov    rax,QWORD PTR [rbx+0x28]
  42ab7a:	lea    rdx,[rax+0x1]
  42ab7e:	mov    QWORD PTR [rbx+0x28],rdx
  42ab82:	mov    BYTE PTR [rax],0x2c
  42ab85:	movsxd rdx,r8d
  42ab88:	mov    rdi,rbx
  42ab8b:	mov    rsi,rcx
  42ab8e:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ab93:	cmp    BYTE PTR [rbx+0x33],0x0
  42ab97:	je     42abc5 <flatcc_json_printer_int32_enum_field@@Base+0xa5>
  42ab99:	mov    rsi,QWORD PTR [rbx+0x28]
  42ab9d:	mov    r14d,ebp
  42aba0:	shr    r14d,0x1f
  42aba4:	test   ebp,ebp
  42aba6:	jns    42abb0 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  42aba8:	mov    BYTE PTR [rsi],0x2d
  42abab:	inc    rsi
  42abae:	neg    ebp
  42abb0:	mov    edi,ebp
  42abb2:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42abb7:	add    eax,r14d
  42abba:	cdqe   
  42abbc:	add    QWORD PTR [rbx+0x28],rax
  42abc0:	pop    rbx
  42abc1:	pop    r14
  42abc3:	pop    rbp
  42abc4:	ret    
  42abc5:	mov    rdi,rbx
  42abc8:	mov    esi,ebp
  42abca:	mov    rax,r14
  42abcd:	pop    rbx
  42abce:	pop    r14
  42abd0:	pop    rbp
  42abd1:	jmp    rax
  42abd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42abdd:	nop    DWORD PTR [rax]

000000000042abe0 <flatcc_json_printer_int64_enum_field@@Base>:
  42abe0:	push   r15
  42abe2:	push   r14
  42abe4:	push   rbx
  42abe5:	mov    rbx,rdi
  42abe8:	mov    rdi,QWORD PTR [rsp+0x20]
  42abed:	lea    eax,[rdx+rdx*1]
  42abf0:	add    eax,0x4
  42abf3:	cmp    eax,DWORD PTR [rsi+0x10]
  42abf6:	jge    42ac1f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42abf8:	mov    rdx,QWORD PTR [rsi+0x8]
  42abfc:	mov    eax,eax
  42abfe:	movzx  eax,WORD PTR [rdx+rax*1]
  42ac02:	test   rax,rax
  42ac05:	je     42ac1f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42ac07:	add    rax,QWORD PTR [rsi]
  42ac0a:	je     42ac1f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42ac0c:	mov    r14,QWORD PTR [rax]
  42ac0f:	cmp    r14,r9
  42ac12:	jne    42ac28 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42ac14:	cmp    BYTE PTR [rbx+0x34],0x0
  42ac18:	mov    r14,r9
  42ac1b:	jne    42ac85 <flatcc_json_printer_int64_enum_field@@Base+0xa5>
  42ac1d:	jmp    42ac28 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42ac1f:	cmp    BYTE PTR [rbx+0x35],0x0
  42ac23:	mov    r14,r9
  42ac26:	je     42ac85 <flatcc_json_printer_int64_enum_field@@Base+0xa5>
  42ac28:	mov    r15,rdi
  42ac2b:	mov    eax,DWORD PTR [rsi+0x18]
  42ac2e:	lea    edx,[rax+0x1]
  42ac31:	mov    DWORD PTR [rsi+0x18],edx
  42ac34:	test   eax,eax
  42ac36:	je     42ac47 <flatcc_json_printer_int64_enum_field@@Base+0x67>
  42ac38:	mov    rax,QWORD PTR [rbx+0x28]
  42ac3c:	lea    rdx,[rax+0x1]
  42ac40:	mov    QWORD PTR [rbx+0x28],rdx
  42ac44:	mov    BYTE PTR [rax],0x2c
  42ac47:	movsxd rdx,r8d
  42ac4a:	mov    rdi,rbx
  42ac4d:	mov    rsi,rcx
  42ac50:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ac55:	cmp    BYTE PTR [rbx+0x33],0x0
  42ac59:	je     42ac8b <flatcc_json_printer_int64_enum_field@@Base+0xab>
  42ac5b:	mov    rsi,QWORD PTR [rbx+0x28]
  42ac5f:	mov    r15,r14
  42ac62:	shr    r15,0x3f
  42ac66:	test   r14,r14
  42ac69:	jns    42ac74 <flatcc_json_printer_int64_enum_field@@Base+0x94>
  42ac6b:	mov    BYTE PTR [rsi],0x2d
  42ac6e:	inc    rsi
  42ac71:	neg    r14
  42ac74:	mov    rdi,r14
  42ac77:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42ac7c:	add    eax,r15d
  42ac7f:	cdqe   
  42ac81:	add    QWORD PTR [rbx+0x28],rax
  42ac85:	pop    rbx
  42ac86:	pop    r14
  42ac88:	pop    r15
  42ac8a:	ret    
  42ac8b:	mov    rdi,rbx
  42ac8e:	mov    rsi,r14
  42ac91:	mov    rax,r15
  42ac94:	pop    rbx
  42ac95:	pop    r14
  42ac97:	pop    r15
  42ac99:	jmp    rax
  42ac9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042aca0 <flatcc_json_printer_bool_enum_field@@Base>:
  42aca0:	push   rbp
  42aca1:	push   r14
  42aca3:	push   rbx
  42aca4:	mov    rbx,rdi
  42aca7:	mov    rdi,QWORD PTR [rsp+0x20]
  42acac:	lea    eax,[rdx+rdx*1]
  42acaf:	add    eax,0x4
  42acb2:	cmp    eax,DWORD PTR [rsi+0x10]
  42acb5:	jge    42acde <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42acb7:	mov    rdx,QWORD PTR [rsi+0x8]
  42acbb:	mov    eax,eax
  42acbd:	movzx  eax,WORD PTR [rdx+rax*1]
  42acc1:	test   rax,rax
  42acc4:	je     42acde <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42acc6:	add    rax,QWORD PTR [rsi]
  42acc9:	je     42acde <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42accb:	mov    bpl,BYTE PTR [rax]
  42acce:	cmp    bpl,r9b
  42acd1:	jne    42ace7 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42acd3:	cmp    BYTE PTR [rbx+0x34],0x0
  42acd7:	mov    ebp,r9d
  42acda:	jne    42ad59 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42acdc:	jmp    42ace7 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42acde:	cmp    BYTE PTR [rbx+0x35],0x0
  42ace2:	mov    ebp,r9d
  42ace5:	je     42ad59 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42ace7:	mov    r14,rdi
  42acea:	mov    eax,DWORD PTR [rsi+0x18]
  42aced:	lea    edx,[rax+0x1]
  42acf0:	mov    DWORD PTR [rsi+0x18],edx
  42acf3:	test   eax,eax
  42acf5:	je     42ad06 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  42acf7:	mov    rax,QWORD PTR [rbx+0x28]
  42acfb:	lea    rdx,[rax+0x1]
  42acff:	mov    QWORD PTR [rbx+0x28],rdx
  42ad03:	mov    BYTE PTR [rax],0x2c
  42ad06:	movsxd rdx,r8d
  42ad09:	mov    rdi,rbx
  42ad0c:	mov    rsi,rcx
  42ad0f:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ad14:	cmp    BYTE PTR [rbx+0x33],0x0
  42ad18:	je     42ad34 <flatcc_json_printer_bool_enum_field@@Base+0x94>
  42ad1a:	mov    rax,QWORD PTR [rbx+0x28]
  42ad1e:	test   bpl,bpl
  42ad21:	je     42ad44 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
  42ad23:	mov    BYTE PTR [rax+0x4],0x0
  42ad27:	mov    DWORD PTR [rax],0x65757274
  42ad2d:	mov    eax,0x4
  42ad32:	jmp    42ad55 <flatcc_json_printer_bool_enum_field@@Base+0xb5>
  42ad34:	movzx  esi,bpl
  42ad38:	mov    rdi,rbx
  42ad3b:	mov    rax,r14
  42ad3e:	pop    rbx
  42ad3f:	pop    r14
  42ad41:	pop    rbp
  42ad42:	jmp    rax
  42ad44:	mov    WORD PTR [rax+0x4],0x65
  42ad4a:	mov    DWORD PTR [rax],0x736c6166
  42ad50:	mov    eax,0x5
  42ad55:	add    QWORD PTR [rbx+0x28],rax
  42ad59:	pop    rbx
  42ad5a:	pop    r14
  42ad5c:	pop    rbp
  42ad5d:	ret    
  42ad5e:	xchg   ax,ax

000000000042ad60 <flatcc_json_printer_uint8_struct_field@@Base>:
  42ad60:	push   r14
  42ad62:	push   rbx
  42ad63:	push   rax
  42ad64:	mov    r14,rdi
  42ad67:	mov    bl,BYTE PTR [rdx+rcx*1]
  42ad6a:	test   esi,esi
  42ad6c:	je     42ad7d <flatcc_json_printer_uint8_struct_field@@Base+0x1d>
  42ad6e:	mov    rax,QWORD PTR [r14+0x28]
  42ad72:	lea    rcx,[rax+0x1]
  42ad76:	mov    QWORD PTR [r14+0x28],rcx
  42ad7a:	mov    BYTE PTR [rax],0x2c
  42ad7d:	movsxd rdx,r9d
  42ad80:	mov    rdi,r14
  42ad83:	mov    rsi,r8
  42ad86:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ad8b:	mov    rax,QWORD PTR [r14+0x28]
  42ad8f:	cmp    bl,0x64
  42ad92:	jb     42adc7 <flatcc_json_printer_uint8_struct_field@@Base+0x67>
  42ad94:	mov    BYTE PTR [rax+0x3],0x0
  42ad98:	movzx  ecx,bl
  42ad9b:	lea    edx,[rcx+rcx*4]
  42ad9e:	lea    ecx,[rcx+rdx*8]
  42ada1:	shr    ecx,0xc
  42ada4:	imul   edx,ecx,0x64
  42ada7:	sub    bl,dl
  42ada9:	movzx  edx,bl
  42adac:	lea    rsi,[rip+0x10f6d]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42adb3:	movzx  edx,WORD PTR [rsi+rdx*2]
  42adb7:	mov    WORD PTR [rax+0x1],dx
  42adbb:	or     cl,0x30
  42adbe:	mov    BYTE PTR [rax],cl
  42adc0:	mov    eax,0x3
  42adc5:	jmp    42ae07 <flatcc_json_printer_uint8_struct_field@@Base+0xa7>
  42adc7:	cmp    bl,0xa
  42adca:	jb     42adf9 <flatcc_json_printer_uint8_struct_field@@Base+0x99>
  42adcc:	mov    BYTE PTR [rax+0x2],0x0
  42add0:	movzx  ecx,bl
  42add3:	lea    edx,[rcx+rcx*4]
  42add6:	lea    ecx,[rcx+rdx*8]
  42add9:	shr    ecx,0xc
  42addc:	imul   ecx,ecx,0x64
  42addf:	sub    bl,cl
  42ade1:	movzx  ecx,bl
  42ade4:	lea    rdx,[rip+0x10f35]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42adeb:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42adef:	mov    WORD PTR [rax],cx
  42adf2:	mov    eax,0x2
  42adf7:	jmp    42ae07 <flatcc_json_printer_uint8_struct_field@@Base+0xa7>
  42adf9:	mov    BYTE PTR [rax+0x1],0x0
  42adfd:	add    bl,0x30
  42ae00:	mov    BYTE PTR [rax],bl
  42ae02:	mov    eax,0x1
  42ae07:	add    QWORD PTR [r14+0x28],rax
  42ae0b:	add    rsp,0x8
  42ae0f:	pop    rbx
  42ae10:	pop    r14
  42ae12:	ret    
  42ae13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae1d:	nop    DWORD PTR [rax]

000000000042ae20 <flatcc_json_printer_uint16_struct_field@@Base>:
  42ae20:	push   rbp
  42ae21:	push   rbx
  42ae22:	push   rax
  42ae23:	mov    rbx,rdi
  42ae26:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42ae2a:	test   esi,esi
  42ae2c:	je     42ae3d <flatcc_json_printer_uint16_struct_field@@Base+0x1d>
  42ae2e:	mov    rax,QWORD PTR [rbx+0x28]
  42ae32:	lea    rcx,[rax+0x1]
  42ae36:	mov    QWORD PTR [rbx+0x28],rcx
  42ae3a:	mov    BYTE PTR [rax],0x2c
  42ae3d:	movsxd rdx,r9d
  42ae40:	mov    rdi,rbx
  42ae43:	mov    rsi,r8
  42ae46:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ae4b:	mov    rsi,QWORD PTR [rbx+0x28]
  42ae4f:	movzx  edx,bp
  42ae52:	cmp    edx,0x3e8
  42ae58:	jb     42ae6a <flatcc_json_printer_uint16_struct_field@@Base+0x4a>
  42ae5a:	xor    eax,eax
  42ae5c:	cmp    edx,0x270f
  42ae62:	seta   al
  42ae65:	or     eax,0x4
  42ae68:	jmp    42ae90 <flatcc_json_printer_uint16_struct_field@@Base+0x70>
  42ae6a:	cmp    bp,0x64
  42ae6e:	jb     42ae85 <flatcc_json_printer_uint16_struct_field@@Base+0x65>
  42ae70:	mov    BYTE PTR [rsi+0x3],0x0
  42ae74:	add    rsi,0x3
  42ae78:	mov    eax,0x3
  42ae7d:	mov    rcx,rsi
  42ae80:	jmp    42af3c <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
  42ae85:	xor    eax,eax
  42ae87:	cmp    bp,0x9
  42ae8b:	seta   al
  42ae8e:	inc    eax
  42ae90:	mov    edi,eax
  42ae92:	lea    rcx,[rsi+rdi*1]
  42ae96:	mov    BYTE PTR [rsi+rdi*1],0x0
  42ae9a:	test   al,0x1
  42ae9c:	jne    42aeff <flatcc_json_printer_uint16_struct_field@@Base+0xdf>
  42ae9e:	cmp    eax,0x2
  42aea1:	je     42aed5 <flatcc_json_printer_uint16_struct_field@@Base+0xb5>
  42aea3:	cmp    eax,0x4
  42aea6:	jne    42af70 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  42aeac:	mov    esi,edx
  42aeae:	shr    esi,0x2
  42aeb1:	imul   ebp,esi,0x147b
  42aeb7:	shr    ebp,0x11
  42aeba:	imul   esi,ebp,0x64
  42aebd:	sub    edx,esi
  42aebf:	movzx  edx,dx
  42aec2:	lea    rsi,[rip+0x10e57]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aec9:	movzx  edx,WORD PTR [rsi+rdx*2]
  42aecd:	mov    WORD PTR [rcx-0x2],dx
  42aed1:	add    rcx,0xfffffffffffffffe
  42aed5:	movzx  edx,bp
  42aed8:	mov    esi,edx
  42aeda:	shr    esi,0x2
  42aedd:	imul   esi,esi,0x147b
  42aee3:	shr    esi,0x11
  42aee6:	imul   esi,esi,0x64
  42aee9:	sub    edx,esi
  42aeeb:	movzx  edx,dx
  42aeee:	lea    rsi,[rip+0x10e2b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42aef5:	movzx  edx,WORD PTR [rsi+rdx*2]
  42aef9:	mov    WORD PTR [rcx-0x2],dx
  42aefd:	jmp    42af70 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  42aeff:	cmp    eax,0x1
  42af02:	je     42af68 <flatcc_json_printer_uint16_struct_field@@Base+0x148>
  42af04:	cmp    eax,0x3
  42af07:	je     42af3c <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
  42af09:	cmp    eax,0x5
  42af0c:	jne    42af70 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  42af0e:	mov    eax,edx
  42af10:	shr    eax,0x2
  42af13:	imul   ebp,eax,0x147b
  42af19:	shr    ebp,0x11
  42af1c:	imul   eax,ebp,0x64
  42af1f:	sub    edx,eax
  42af21:	movzx  eax,dx
  42af24:	lea    rdx,[rip+0x10df5]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42af2b:	movzx  eax,WORD PTR [rdx+rax*2]
  42af2f:	mov    WORD PTR [rcx-0x2],ax
  42af33:	add    rcx,0xfffffffffffffffe
  42af37:	mov    eax,0x5
  42af3c:	movzx  edx,bp
  42af3f:	mov    esi,edx
  42af41:	shr    esi,0x2
  42af44:	imul   ebp,esi,0x147b
  42af4a:	shr    ebp,0x11
  42af4d:	imul   esi,ebp,0x64
  42af50:	sub    edx,esi
  42af52:	movzx  edx,dx
  42af55:	lea    rsi,[rip+0x10dc4]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42af5c:	movzx  edx,WORD PTR [rsi+rdx*2]
  42af60:	mov    WORD PTR [rcx-0x2],dx
  42af64:	add    rcx,0xfffffffffffffffe
  42af68:	add    bpl,0x30
  42af6c:	mov    BYTE PTR [rcx-0x1],bpl
  42af70:	mov    eax,eax
  42af72:	add    QWORD PTR [rbx+0x28],rax
  42af76:	add    rsp,0x8
  42af7a:	pop    rbx
  42af7b:	pop    rbp
  42af7c:	ret    
  42af7d:	nop    DWORD PTR [rax]

000000000042af80 <flatcc_json_printer_uint32_struct_field@@Base>:
  42af80:	push   rbp
  42af81:	push   rbx
  42af82:	push   rax
  42af83:	mov    rbx,rdi
  42af86:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42af89:	test   esi,esi
  42af8b:	je     42af9c <flatcc_json_printer_uint32_struct_field@@Base+0x1c>
  42af8d:	mov    rax,QWORD PTR [rbx+0x28]
  42af91:	lea    rcx,[rax+0x1]
  42af95:	mov    QWORD PTR [rbx+0x28],rcx
  42af99:	mov    BYTE PTR [rax],0x2c
  42af9c:	movsxd rdx,r9d
  42af9f:	mov    rdi,rbx
  42afa2:	mov    rsi,r8
  42afa5:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42afaa:	mov    rsi,QWORD PTR [rbx+0x28]
  42afae:	mov    edi,ebp
  42afb0:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42afb5:	cdqe   
  42afb7:	add    QWORD PTR [rbx+0x28],rax
  42afbb:	add    rsp,0x8
  42afbf:	pop    rbx
  42afc0:	pop    rbp
  42afc1:	ret    
  42afc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42afcc:	nop    DWORD PTR [rax+0x0]

000000000042afd0 <flatcc_json_printer_uint64_struct_field@@Base>:
  42afd0:	push   r14
  42afd2:	push   rbx
  42afd3:	push   rax
  42afd4:	mov    rbx,rdi
  42afd7:	mov    r14,QWORD PTR [rdx+rcx*1]
  42afdb:	test   esi,esi
  42afdd:	je     42afee <flatcc_json_printer_uint64_struct_field@@Base+0x1e>
  42afdf:	mov    rax,QWORD PTR [rbx+0x28]
  42afe3:	lea    rcx,[rax+0x1]
  42afe7:	mov    QWORD PTR [rbx+0x28],rcx
  42afeb:	mov    BYTE PTR [rax],0x2c
  42afee:	movsxd rdx,r9d
  42aff1:	mov    rdi,rbx
  42aff4:	mov    rsi,r8
  42aff7:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42affc:	mov    rsi,QWORD PTR [rbx+0x28]
  42b000:	mov    rdi,r14
  42b003:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42b008:	cdqe   
  42b00a:	add    QWORD PTR [rbx+0x28],rax
  42b00e:	add    rsp,0x8
  42b012:	pop    rbx
  42b013:	pop    r14
  42b015:	ret    
  42b016:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042b020 <flatcc_json_printer_int8_struct_field@@Base>:
  42b020:	push   r15
  42b022:	push   r14
  42b024:	push   rbx
  42b025:	mov    r15,rdi
  42b028:	mov    bl,BYTE PTR [rdx+rcx*1]
  42b02b:	movzx  r14d,bl
  42b02f:	test   esi,esi
  42b031:	je     42b042 <flatcc_json_printer_int8_struct_field@@Base+0x22>
  42b033:	mov    rax,QWORD PTR [r15+0x28]
  42b037:	lea    rcx,[rax+0x1]
  42b03b:	mov    QWORD PTR [r15+0x28],rcx
  42b03f:	mov    BYTE PTR [rax],0x2c
  42b042:	movsxd rdx,r9d
  42b045:	mov    rdi,r15
  42b048:	mov    rsi,r8
  42b04b:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b050:	mov    rax,QWORD PTR [r15+0x28]
  42b054:	test   r14b,r14b
  42b057:	jns    42b061 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  42b059:	mov    BYTE PTR [rax],0x2d
  42b05c:	inc    rax
  42b05f:	neg    bl
  42b061:	shr    r14,0x7
  42b065:	cmp    bl,0x64
  42b068:	jb     42b09d <flatcc_json_printer_int8_struct_field@@Base+0x7d>
  42b06a:	mov    BYTE PTR [rax+0x3],0x0
  42b06e:	movzx  ecx,bl
  42b071:	lea    edx,[rcx+rcx*4]
  42b074:	lea    ecx,[rcx+rdx*8]
  42b077:	shr    ecx,0xc
  42b07a:	imul   edx,ecx,0x64
  42b07d:	sub    bl,dl
  42b07f:	movzx  edx,bl
  42b082:	lea    rsi,[rip+0x10c97]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b089:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b08d:	mov    WORD PTR [rax+0x1],dx
  42b091:	or     cl,0x30
  42b094:	mov    BYTE PTR [rax],cl
  42b096:	mov    eax,0x3
  42b09b:	jmp    42b0dd <flatcc_json_printer_int8_struct_field@@Base+0xbd>
  42b09d:	cmp    bl,0xa
  42b0a0:	jb     42b0cf <flatcc_json_printer_int8_struct_field@@Base+0xaf>
  42b0a2:	mov    BYTE PTR [rax+0x2],0x0
  42b0a6:	movzx  ecx,bl
  42b0a9:	lea    edx,[rcx+rcx*4]
  42b0ac:	lea    ecx,[rcx+rdx*8]
  42b0af:	shr    ecx,0xc
  42b0b2:	imul   ecx,ecx,0x64
  42b0b5:	sub    bl,cl
  42b0b7:	movzx  ecx,bl
  42b0ba:	lea    rdx,[rip+0x10c5f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b0c1:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42b0c5:	mov    WORD PTR [rax],cx
  42b0c8:	mov    eax,0x2
  42b0cd:	jmp    42b0dd <flatcc_json_printer_int8_struct_field@@Base+0xbd>
  42b0cf:	mov    BYTE PTR [rax+0x1],0x0
  42b0d3:	add    bl,0x30
  42b0d6:	mov    BYTE PTR [rax],bl
  42b0d8:	mov    eax,0x1
  42b0dd:	add    rax,r14
  42b0e0:	add    QWORD PTR [r15+0x28],rax
  42b0e4:	pop    rbx
  42b0e5:	pop    r14
  42b0e7:	pop    r15
  42b0e9:	ret    
  42b0ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b0f0 <flatcc_json_printer_int16_struct_field@@Base>:
  42b0f0:	push   rbp
  42b0f1:	push   r14
  42b0f3:	push   rbx
  42b0f4:	mov    rbx,rdi
  42b0f7:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42b0fb:	test   esi,esi
  42b0fd:	je     42b10e <flatcc_json_printer_int16_struct_field@@Base+0x1e>
  42b0ff:	mov    rax,QWORD PTR [rbx+0x28]
  42b103:	lea    rcx,[rax+0x1]
  42b107:	mov    QWORD PTR [rbx+0x28],rcx
  42b10b:	mov    BYTE PTR [rax],0x2c
  42b10e:	movzx  r14d,bp
  42b112:	movsxd rdx,r9d
  42b115:	mov    rdi,rbx
  42b118:	mov    rsi,r8
  42b11b:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b120:	mov    rsi,QWORD PTR [rbx+0x28]
  42b124:	test   r14w,r14w
  42b128:	jns    42b132 <flatcc_json_printer_int16_struct_field@@Base+0x42>
  42b12a:	mov    BYTE PTR [rsi],0x2d
  42b12d:	inc    rsi
  42b130:	neg    ebp
  42b132:	shr    r14d,0xf
  42b136:	movzx  edx,bp
  42b139:	cmp    edx,0x3e8
  42b13f:	jb     42b151 <flatcc_json_printer_int16_struct_field@@Base+0x61>
  42b141:	xor    eax,eax
  42b143:	cmp    edx,0x270f
  42b149:	seta   al
  42b14c:	or     eax,0x4
  42b14f:	jmp    42b177 <flatcc_json_printer_int16_struct_field@@Base+0x87>
  42b151:	cmp    bp,0x64
  42b155:	jb     42b16c <flatcc_json_printer_int16_struct_field@@Base+0x7c>
  42b157:	mov    BYTE PTR [rsi+0x3],0x0
  42b15b:	add    rsi,0x3
  42b15f:	mov    eax,0x3
  42b164:	mov    rcx,rsi
  42b167:	jmp    42b223 <flatcc_json_printer_int16_struct_field@@Base+0x133>
  42b16c:	xor    eax,eax
  42b16e:	cmp    bp,0x9
  42b172:	seta   al
  42b175:	inc    eax
  42b177:	mov    edi,eax
  42b179:	lea    rcx,[rsi+rdi*1]
  42b17d:	mov    BYTE PTR [rsi+rdi*1],0x0
  42b181:	test   al,0x1
  42b183:	jne    42b1e6 <flatcc_json_printer_int16_struct_field@@Base+0xf6>
  42b185:	cmp    eax,0x2
  42b188:	je     42b1bc <flatcc_json_printer_int16_struct_field@@Base+0xcc>
  42b18a:	cmp    eax,0x4
  42b18d:	jne    42b257 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  42b193:	mov    esi,edx
  42b195:	shr    esi,0x2
  42b198:	imul   ebp,esi,0x147b
  42b19e:	shr    ebp,0x11
  42b1a1:	imul   esi,ebp,0x64
  42b1a4:	sub    edx,esi
  42b1a6:	movzx  edx,dx
  42b1a9:	lea    rsi,[rip+0x10b70]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b1b0:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b1b4:	mov    WORD PTR [rcx-0x2],dx
  42b1b8:	add    rcx,0xfffffffffffffffe
  42b1bc:	movzx  edx,bp
  42b1bf:	mov    esi,edx
  42b1c1:	shr    esi,0x2
  42b1c4:	imul   esi,esi,0x147b
  42b1ca:	shr    esi,0x11
  42b1cd:	imul   esi,esi,0x64
  42b1d0:	sub    edx,esi
  42b1d2:	movzx  edx,dx
  42b1d5:	lea    rsi,[rip+0x10b44]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b1dc:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b1e0:	mov    WORD PTR [rcx-0x2],dx
  42b1e4:	jmp    42b257 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  42b1e6:	cmp    eax,0x1
  42b1e9:	je     42b24f <flatcc_json_printer_int16_struct_field@@Base+0x15f>
  42b1eb:	cmp    eax,0x3
  42b1ee:	je     42b223 <flatcc_json_printer_int16_struct_field@@Base+0x133>
  42b1f0:	cmp    eax,0x5
  42b1f3:	jne    42b257 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  42b1f5:	mov    eax,edx
  42b1f7:	shr    eax,0x2
  42b1fa:	imul   ebp,eax,0x147b
  42b200:	shr    ebp,0x11
  42b203:	imul   eax,ebp,0x64
  42b206:	sub    edx,eax
  42b208:	movzx  eax,dx
  42b20b:	lea    rdx,[rip+0x10b0e]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b212:	movzx  eax,WORD PTR [rdx+rax*2]
  42b216:	mov    WORD PTR [rcx-0x2],ax
  42b21a:	add    rcx,0xfffffffffffffffe
  42b21e:	mov    eax,0x5
  42b223:	movzx  edx,bp
  42b226:	mov    esi,edx
  42b228:	shr    esi,0x2
  42b22b:	imul   ebp,esi,0x147b
  42b231:	shr    ebp,0x11
  42b234:	imul   esi,ebp,0x64
  42b237:	sub    edx,esi
  42b239:	movzx  edx,dx
  42b23c:	lea    rsi,[rip+0x10add]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b243:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b247:	mov    WORD PTR [rcx-0x2],dx
  42b24b:	add    rcx,0xfffffffffffffffe
  42b24f:	add    bpl,0x30
  42b253:	mov    BYTE PTR [rcx-0x1],bpl
  42b257:	add    eax,r14d
  42b25a:	add    QWORD PTR [rbx+0x28],rax
  42b25e:	pop    rbx
  42b25f:	pop    r14
  42b261:	pop    rbp
  42b262:	ret    
  42b263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b26d:	nop    DWORD PTR [rax]

000000000042b270 <flatcc_json_printer_int32_struct_field@@Base>:
  42b270:	push   rbp
  42b271:	push   r14
  42b273:	push   rbx
  42b274:	mov    r14,rdi
  42b277:	mov    ebx,DWORD PTR [rdx+rcx*1]
  42b27a:	test   esi,esi
  42b27c:	je     42b28d <flatcc_json_printer_int32_struct_field@@Base+0x1d>
  42b27e:	mov    rax,QWORD PTR [r14+0x28]
  42b282:	lea    rcx,[rax+0x1]
  42b286:	mov    QWORD PTR [r14+0x28],rcx
  42b28a:	mov    BYTE PTR [rax],0x2c
  42b28d:	movsxd rdx,r9d
  42b290:	mov    rdi,r14
  42b293:	mov    rsi,r8
  42b296:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b29b:	mov    rsi,QWORD PTR [r14+0x28]
  42b29f:	mov    ebp,ebx
  42b2a1:	shr    ebp,0x1f
  42b2a4:	test   ebx,ebx
  42b2a6:	jns    42b2b0 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  42b2a8:	mov    BYTE PTR [rsi],0x2d
  42b2ab:	inc    rsi
  42b2ae:	neg    ebx
  42b2b0:	mov    edi,ebx
  42b2b2:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42b2b7:	add    eax,ebp
  42b2b9:	cdqe   
  42b2bb:	add    QWORD PTR [r14+0x28],rax
  42b2bf:	pop    rbx
  42b2c0:	pop    r14
  42b2c2:	pop    rbp
  42b2c3:	ret    
  42b2c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b2ce:	xchg   ax,ax

000000000042b2d0 <flatcc_json_printer_int64_struct_field@@Base>:
  42b2d0:	push   r15
  42b2d2:	push   r14
  42b2d4:	push   rbx
  42b2d5:	mov    r14,rdi
  42b2d8:	mov    r15,QWORD PTR [rdx+rcx*1]
  42b2dc:	test   esi,esi
  42b2de:	je     42b2ef <flatcc_json_printer_int64_struct_field@@Base+0x1f>
  42b2e0:	mov    rax,QWORD PTR [r14+0x28]
  42b2e4:	lea    rcx,[rax+0x1]
  42b2e8:	mov    QWORD PTR [r14+0x28],rcx
  42b2ec:	mov    BYTE PTR [rax],0x2c
  42b2ef:	movsxd rdx,r9d
  42b2f2:	mov    rdi,r14
  42b2f5:	mov    rsi,r8
  42b2f8:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b2fd:	mov    rsi,QWORD PTR [r14+0x28]
  42b301:	mov    rbx,r15
  42b304:	shr    rbx,0x3f
  42b308:	test   r15,r15
  42b30b:	jns    42b316 <flatcc_json_printer_int64_struct_field@@Base+0x46>
  42b30d:	mov    BYTE PTR [rsi],0x2d
  42b310:	inc    rsi
  42b313:	neg    r15
  42b316:	mov    rdi,r15
  42b319:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42b31e:	add    eax,ebx
  42b320:	cdqe   
  42b322:	add    QWORD PTR [r14+0x28],rax
  42b326:	pop    rbx
  42b327:	pop    r14
  42b329:	pop    r15
  42b32b:	ret    
  42b32c:	nop    DWORD PTR [rax+0x0]

000000000042b330 <flatcc_json_printer_bool_struct_field@@Base>:
  42b330:	push   rbp
  42b331:	push   rbx
  42b332:	push   rax
  42b333:	mov    rbx,rdi
  42b336:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42b33a:	test   esi,esi
  42b33c:	je     42b34d <flatcc_json_printer_bool_struct_field@@Base+0x1d>
  42b33e:	mov    rax,QWORD PTR [rbx+0x28]
  42b342:	lea    rcx,[rax+0x1]
  42b346:	mov    QWORD PTR [rbx+0x28],rcx
  42b34a:	mov    BYTE PTR [rax],0x2c
  42b34d:	movsxd rdx,r9d
  42b350:	mov    rdi,rbx
  42b353:	mov    rsi,r8
  42b356:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b35b:	mov    rax,QWORD PTR [rbx+0x28]
  42b35f:	test   bpl,bpl
  42b362:	je     42b375 <flatcc_json_printer_bool_struct_field@@Base+0x45>
  42b364:	mov    BYTE PTR [rax+0x4],0x0
  42b368:	mov    DWORD PTR [rax],0x65757274
  42b36e:	mov    eax,0x4
  42b373:	jmp    42b386 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  42b375:	mov    WORD PTR [rax+0x4],0x65
  42b37b:	mov    DWORD PTR [rax],0x736c6166
  42b381:	mov    eax,0x5
  42b386:	add    QWORD PTR [rbx+0x28],rax
  42b38a:	add    rsp,0x8
  42b38e:	pop    rbx
  42b38f:	pop    rbp
  42b390:	ret    
  42b391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b39b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b3a0 <flatcc_json_printer_float_struct_field@@Base>:
  42b3a0:	push   rbx
  42b3a1:	sub    rsp,0x10
  42b3a5:	mov    rbx,rdi
  42b3a8:	vmovss xmm0,DWORD PTR [rdx+rcx*1]
  42b3ad:	vmovss DWORD PTR [rsp+0xc],xmm0
  42b3b3:	test   esi,esi
  42b3b5:	je     42b3c6 <flatcc_json_printer_float_struct_field@@Base+0x26>
  42b3b7:	mov    rax,QWORD PTR [rbx+0x28]
  42b3bb:	lea    rcx,[rax+0x1]
  42b3bf:	mov    QWORD PTR [rbx+0x28],rcx
  42b3c3:	mov    BYTE PTR [rax],0x2c
  42b3c6:	movsxd rdx,r9d
  42b3c9:	mov    rdi,rbx
  42b3cc:	mov    rsi,r8
  42b3cf:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b3d4:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42b3da:	vcvtss2sd xmm0,xmm0,xmm0
  42b3de:	mov    rdi,QWORD PTR [rbx+0x28]
  42b3e2:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42b3e7:	cdqe   
  42b3e9:	add    QWORD PTR [rbx+0x28],rax
  42b3ed:	add    rsp,0x10
  42b3f1:	pop    rbx
  42b3f2:	ret    
  42b3f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3fd:	nop    DWORD PTR [rax]

000000000042b400 <flatcc_json_printer_double_struct_field@@Base>:
  42b400:	push   rbx
  42b401:	sub    rsp,0x10
  42b405:	mov    rbx,rdi
  42b408:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  42b40d:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42b413:	test   esi,esi
  42b415:	je     42b426 <flatcc_json_printer_double_struct_field@@Base+0x26>
  42b417:	mov    rax,QWORD PTR [rbx+0x28]
  42b41b:	lea    rcx,[rax+0x1]
  42b41f:	mov    QWORD PTR [rbx+0x28],rcx
  42b423:	mov    BYTE PTR [rax],0x2c
  42b426:	movsxd rdx,r9d
  42b429:	mov    rdi,rbx
  42b42c:	mov    rsi,r8
  42b42f:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b434:	mov    rdi,QWORD PTR [rbx+0x28]
  42b438:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42b43e:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42b443:	cdqe   
  42b445:	add    QWORD PTR [rbx+0x28],rax
  42b449:	add    rsp,0x10
  42b44d:	pop    rbx
  42b44e:	ret    
  42b44f:	nop

000000000042b450 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  42b450:	push   r15
  42b452:	push   r14
  42b454:	push   rbx
  42b455:	mov    r14,rdi
  42b458:	mov    r15,QWORD PTR [rsp+0x20]
  42b45d:	mov    bl,BYTE PTR [rdx+rcx*1]
  42b460:	test   esi,esi
  42b462:	je     42b473 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x23>
  42b464:	mov    rax,QWORD PTR [r14+0x28]
  42b468:	lea    rcx,[rax+0x1]
  42b46c:	mov    QWORD PTR [r14+0x28],rcx
  42b470:	mov    BYTE PTR [rax],0x2c
  42b473:	movsxd rdx,r9d
  42b476:	mov    rdi,r14
  42b479:	mov    rsi,r8
  42b47c:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b481:	cmp    BYTE PTR [r14+0x33],0x0
  42b486:	je     42b4c4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x74>
  42b488:	mov    rax,QWORD PTR [r14+0x28]
  42b48c:	cmp    bl,0x64
  42b48f:	jb     42b4d4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x84>
  42b491:	mov    BYTE PTR [rax+0x3],0x0
  42b495:	movzx  ecx,bl
  42b498:	lea    edx,[rcx+rcx*4]
  42b49b:	lea    ecx,[rcx+rdx*8]
  42b49e:	shr    ecx,0xc
  42b4a1:	imul   edx,ecx,0x64
  42b4a4:	sub    bl,dl
  42b4a6:	movzx  edx,bl
  42b4a9:	lea    rsi,[rip+0x10870]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b4b0:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b4b4:	mov    WORD PTR [rax+0x1],dx
  42b4b8:	or     cl,0x30
  42b4bb:	mov    BYTE PTR [rax],cl
  42b4bd:	mov    eax,0x3
  42b4c2:	jmp    42b514 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
  42b4c4:	movzx  esi,bl
  42b4c7:	mov    rdi,r14
  42b4ca:	mov    rax,r15
  42b4cd:	pop    rbx
  42b4ce:	pop    r14
  42b4d0:	pop    r15
  42b4d2:	jmp    rax
  42b4d4:	cmp    bl,0xa
  42b4d7:	jb     42b506 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb6>
  42b4d9:	mov    BYTE PTR [rax+0x2],0x0
  42b4dd:	movzx  ecx,bl
  42b4e0:	lea    edx,[rcx+rcx*4]
  42b4e3:	lea    ecx,[rcx+rdx*8]
  42b4e6:	shr    ecx,0xc
  42b4e9:	imul   ecx,ecx,0x64
  42b4ec:	sub    bl,cl
  42b4ee:	movzx  ecx,bl
  42b4f1:	lea    rdx,[rip+0x10828]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b4f8:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42b4fc:	mov    WORD PTR [rax],cx
  42b4ff:	mov    eax,0x2
  42b504:	jmp    42b514 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
  42b506:	mov    BYTE PTR [rax+0x1],0x0
  42b50a:	add    bl,0x30
  42b50d:	mov    BYTE PTR [rax],bl
  42b50f:	mov    eax,0x1
  42b514:	add    QWORD PTR [r14+0x28],rax
  42b518:	pop    rbx
  42b519:	pop    r14
  42b51b:	pop    r15
  42b51d:	ret    
  42b51e:	xchg   ax,ax

000000000042b520 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  42b520:	push   rbp
  42b521:	push   r14
  42b523:	push   rbx
  42b524:	mov    r14,rdi
  42b527:	mov    rbx,QWORD PTR [rsp+0x20]
  42b52c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42b530:	test   esi,esi
  42b532:	je     42b543 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x23>
  42b534:	mov    rax,QWORD PTR [r14+0x28]
  42b538:	lea    rcx,[rax+0x1]
  42b53c:	mov    QWORD PTR [r14+0x28],rcx
  42b540:	mov    BYTE PTR [rax],0x2c
  42b543:	movsxd rdx,r9d
  42b546:	mov    rdi,r14
  42b549:	mov    rsi,r8
  42b54c:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b551:	cmp    BYTE PTR [r14+0x33],0x0
  42b556:	je     42b577 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  42b558:	mov    rsi,QWORD PTR [r14+0x28]
  42b55c:	movzx  edx,bp
  42b55f:	cmp    edx,0x3e8
  42b565:	jb     42b586 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x66>
  42b567:	xor    eax,eax
  42b569:	cmp    edx,0x270f
  42b56f:	seta   al
  42b572:	or     eax,0x4
  42b575:	jmp    42b5ac <flatcc_json_printer_uint16_enum_struct_field@@Base+0x8c>
  42b577:	movzx  esi,bp
  42b57a:	mov    rdi,r14
  42b57d:	mov    rax,rbx
  42b580:	pop    rbx
  42b581:	pop    r14
  42b583:	pop    rbp
  42b584:	jmp    rax
  42b586:	cmp    bp,0x64
  42b58a:	jb     42b5a1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x81>
  42b58c:	mov    BYTE PTR [rsi+0x3],0x0
  42b590:	add    rsi,0x3
  42b594:	mov    eax,0x3
  42b599:	mov    rcx,rsi
  42b59c:	jmp    42b658 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  42b5a1:	xor    eax,eax
  42b5a3:	cmp    bp,0x9
  42b5a7:	seta   al
  42b5aa:	inc    eax
  42b5ac:	mov    edi,eax
  42b5ae:	lea    rcx,[rsi+rdi*1]
  42b5b2:	mov    BYTE PTR [rsi+rdi*1],0x0
  42b5b6:	test   al,0x1
  42b5b8:	jne    42b61b <flatcc_json_printer_uint16_enum_struct_field@@Base+0xfb>
  42b5ba:	cmp    eax,0x2
  42b5bd:	je     42b5f1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd1>
  42b5bf:	cmp    eax,0x4
  42b5c2:	jne    42b68c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  42b5c8:	mov    esi,edx
  42b5ca:	shr    esi,0x2
  42b5cd:	imul   ebp,esi,0x147b
  42b5d3:	shr    ebp,0x11
  42b5d6:	imul   esi,ebp,0x64
  42b5d9:	sub    edx,esi
  42b5db:	movzx  edx,dx
  42b5de:	lea    rsi,[rip+0x1073b]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b5e5:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b5e9:	mov    WORD PTR [rcx-0x2],dx
  42b5ed:	add    rcx,0xfffffffffffffffe
  42b5f1:	movzx  edx,bp
  42b5f4:	mov    esi,edx
  42b5f6:	shr    esi,0x2
  42b5f9:	imul   esi,esi,0x147b
  42b5ff:	shr    esi,0x11
  42b602:	imul   esi,esi,0x64
  42b605:	sub    edx,esi
  42b607:	movzx  edx,dx
  42b60a:	lea    rsi,[rip+0x1070f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b611:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b615:	mov    WORD PTR [rcx-0x2],dx
  42b619:	jmp    42b68c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  42b61b:	cmp    eax,0x1
  42b61e:	je     42b684 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x164>
  42b620:	cmp    eax,0x3
  42b623:	je     42b658 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  42b625:	cmp    eax,0x5
  42b628:	jne    42b68c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  42b62a:	mov    eax,edx
  42b62c:	shr    eax,0x2
  42b62f:	imul   ebp,eax,0x147b
  42b635:	shr    ebp,0x11
  42b638:	imul   eax,ebp,0x64
  42b63b:	sub    edx,eax
  42b63d:	movzx  eax,dx
  42b640:	lea    rdx,[rip+0x106d9]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b647:	movzx  eax,WORD PTR [rdx+rax*2]
  42b64b:	mov    WORD PTR [rcx-0x2],ax
  42b64f:	add    rcx,0xfffffffffffffffe
  42b653:	mov    eax,0x5
  42b658:	movzx  edx,bp
  42b65b:	mov    esi,edx
  42b65d:	shr    esi,0x2
  42b660:	imul   ebp,esi,0x147b
  42b666:	shr    ebp,0x11
  42b669:	imul   esi,ebp,0x64
  42b66c:	sub    edx,esi
  42b66e:	movzx  edx,dx
  42b671:	lea    rsi,[rip+0x106a8]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b678:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b67c:	mov    WORD PTR [rcx-0x2],dx
  42b680:	add    rcx,0xfffffffffffffffe
  42b684:	add    bpl,0x30
  42b688:	mov    BYTE PTR [rcx-0x1],bpl
  42b68c:	mov    eax,eax
  42b68e:	add    QWORD PTR [r14+0x28],rax
  42b692:	pop    rbx
  42b693:	pop    r14
  42b695:	pop    rbp
  42b696:	ret    
  42b697:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b6a0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  42b6a0:	push   rbp
  42b6a1:	push   r14
  42b6a3:	push   rbx
  42b6a4:	mov    rbx,rdi
  42b6a7:	mov    r14,QWORD PTR [rsp+0x20]
  42b6ac:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42b6af:	test   esi,esi
  42b6b1:	je     42b6c2 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x22>
  42b6b3:	mov    rax,QWORD PTR [rbx+0x28]
  42b6b7:	lea    rcx,[rax+0x1]
  42b6bb:	mov    QWORD PTR [rbx+0x28],rcx
  42b6bf:	mov    BYTE PTR [rax],0x2c
  42b6c2:	movsxd rdx,r9d
  42b6c5:	mov    rdi,rbx
  42b6c8:	mov    rsi,r8
  42b6cb:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b6d0:	cmp    BYTE PTR [rbx+0x33],0x0
  42b6d4:	je     42b6ec <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
  42b6d6:	mov    rsi,QWORD PTR [rbx+0x28]
  42b6da:	mov    edi,ebp
  42b6dc:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42b6e1:	cdqe   
  42b6e3:	add    QWORD PTR [rbx+0x28],rax
  42b6e7:	pop    rbx
  42b6e8:	pop    r14
  42b6ea:	pop    rbp
  42b6eb:	ret    
  42b6ec:	mov    rdi,rbx
  42b6ef:	mov    esi,ebp
  42b6f1:	mov    rax,r14
  42b6f4:	pop    rbx
  42b6f5:	pop    r14
  42b6f7:	pop    rbp
  42b6f8:	jmp    rax
  42b6fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b700 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  42b700:	push   r15
  42b702:	push   r14
  42b704:	push   rbx
  42b705:	mov    rbx,rdi
  42b708:	mov    r15,QWORD PTR [rsp+0x20]
  42b70d:	mov    r14,QWORD PTR [rdx+rcx*1]
  42b711:	test   esi,esi
  42b713:	je     42b724 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x24>
  42b715:	mov    rax,QWORD PTR [rbx+0x28]
  42b719:	lea    rcx,[rax+0x1]
  42b71d:	mov    QWORD PTR [rbx+0x28],rcx
  42b721:	mov    BYTE PTR [rax],0x2c
  42b724:	movsxd rdx,r9d
  42b727:	mov    rdi,rbx
  42b72a:	mov    rsi,r8
  42b72d:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b732:	cmp    BYTE PTR [rbx+0x33],0x0
  42b736:	je     42b750 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
  42b738:	mov    rsi,QWORD PTR [rbx+0x28]
  42b73c:	mov    rdi,r14
  42b73f:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42b744:	cdqe   
  42b746:	add    QWORD PTR [rbx+0x28],rax
  42b74a:	pop    rbx
  42b74b:	pop    r14
  42b74d:	pop    r15
  42b74f:	ret    
  42b750:	mov    rdi,rbx
  42b753:	mov    rsi,r14
  42b756:	mov    rax,r15
  42b759:	pop    rbx
  42b75a:	pop    r14
  42b75c:	pop    r15
  42b75e:	jmp    rax

000000000042b760 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  42b760:	push   r15
  42b762:	push   r14
  42b764:	push   rbx
  42b765:	mov    r14,rdi
  42b768:	mov    r15,QWORD PTR [rsp+0x20]
  42b76d:	mov    bl,BYTE PTR [rdx+rcx*1]
  42b770:	test   esi,esi
  42b772:	je     42b783 <flatcc_json_printer_int8_enum_struct_field@@Base+0x23>
  42b774:	mov    rax,QWORD PTR [r14+0x28]
  42b778:	lea    rcx,[rax+0x1]
  42b77c:	mov    QWORD PTR [r14+0x28],rcx
  42b780:	mov    BYTE PTR [rax],0x2c
  42b783:	movsxd rdx,r9d
  42b786:	mov    rdi,r14
  42b789:	mov    rsi,r8
  42b78c:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b791:	cmp    BYTE PTR [r14+0x33],0x0
  42b796:	je     42b7e8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
  42b798:	movzx  eax,bl
  42b79b:	mov    rcx,QWORD PTR [r14+0x28]
  42b79f:	test   al,al
  42b7a1:	jns    42b7ab <flatcc_json_printer_int8_enum_struct_field@@Base+0x4b>
  42b7a3:	mov    BYTE PTR [rcx],0x2d
  42b7a6:	inc    rcx
  42b7a9:	neg    bl
  42b7ab:	shr    rax,0x7
  42b7af:	cmp    bl,0x64
  42b7b2:	jb     42b7f8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x98>
  42b7b4:	mov    BYTE PTR [rcx+0x3],0x0
  42b7b8:	movzx  edx,bl
  42b7bb:	lea    esi,[rdx+rdx*4]
  42b7be:	lea    edx,[rdx+rsi*8]
  42b7c1:	shr    edx,0xc
  42b7c4:	imul   esi,edx,0x64
  42b7c7:	sub    bl,sil
  42b7ca:	movzx  esi,bl
  42b7cd:	lea    rdi,[rip+0x1054c]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b7d4:	movzx  esi,WORD PTR [rdi+rsi*2]
  42b7d8:	mov    WORD PTR [rcx+0x1],si
  42b7dc:	or     dl,0x30
  42b7df:	mov    BYTE PTR [rcx],dl
  42b7e1:	mov    ecx,0x3
  42b7e6:	jmp    42b838 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
  42b7e8:	movsx  esi,bl
  42b7eb:	mov    rdi,r14
  42b7ee:	mov    rax,r15
  42b7f1:	pop    rbx
  42b7f2:	pop    r14
  42b7f4:	pop    r15
  42b7f6:	jmp    rax
  42b7f8:	cmp    bl,0xa
  42b7fb:	jb     42b82a <flatcc_json_printer_int8_enum_struct_field@@Base+0xca>
  42b7fd:	mov    BYTE PTR [rcx+0x2],0x0
  42b801:	movzx  edx,bl
  42b804:	lea    esi,[rdx+rdx*4]
  42b807:	lea    edx,[rdx+rsi*8]
  42b80a:	shr    edx,0xc
  42b80d:	imul   edx,edx,0x64
  42b810:	sub    bl,dl
  42b812:	movzx  edx,bl
  42b815:	lea    rsi,[rip+0x10504]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b81c:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b820:	mov    WORD PTR [rcx],dx
  42b823:	mov    ecx,0x2
  42b828:	jmp    42b838 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
  42b82a:	mov    BYTE PTR [rcx+0x1],0x0
  42b82e:	add    bl,0x30
  42b831:	mov    BYTE PTR [rcx],bl
  42b833:	mov    ecx,0x1
  42b838:	add    rcx,rax
  42b83b:	add    QWORD PTR [r14+0x28],rcx
  42b83f:	pop    rbx
  42b840:	pop    r14
  42b842:	pop    r15
  42b844:	ret    
  42b845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b84f:	nop

000000000042b850 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  42b850:	push   rbp
  42b851:	push   r14
  42b853:	push   rbx
  42b854:	mov    r14,rdi
  42b857:	mov    rbx,QWORD PTR [rsp+0x20]
  42b85c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42b860:	test   esi,esi
  42b862:	je     42b873 <flatcc_json_printer_int16_enum_struct_field@@Base+0x23>
  42b864:	mov    rax,QWORD PTR [r14+0x28]
  42b868:	lea    rcx,[rax+0x1]
  42b86c:	mov    QWORD PTR [r14+0x28],rcx
  42b870:	mov    BYTE PTR [rax],0x2c
  42b873:	movsxd rdx,r9d
  42b876:	mov    rdi,r14
  42b879:	mov    rsi,r8
  42b87c:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42b881:	cmp    BYTE PTR [r14+0x33],0x0
  42b886:	je     42b8bd <flatcc_json_printer_int16_enum_struct_field@@Base+0x6d>
  42b888:	movzx  r8d,bp
  42b88c:	mov    rdi,QWORD PTR [r14+0x28]
  42b890:	test   r8w,r8w
  42b894:	jns    42b89e <flatcc_json_printer_int16_enum_struct_field@@Base+0x4e>
  42b896:	mov    BYTE PTR [rdi],0x2d
  42b899:	inc    rdi
  42b89c:	neg    ebp
  42b89e:	shr    r8d,0xf
  42b8a2:	movzx  esi,bp
  42b8a5:	cmp    esi,0x3e8
  42b8ab:	jb     42b8cc <flatcc_json_printer_int16_enum_struct_field@@Base+0x7c>
  42b8ad:	xor    ecx,ecx
  42b8af:	cmp    esi,0x270f
  42b8b5:	seta   cl
  42b8b8:	or     ecx,0x4
  42b8bb:	jmp    42b8f2 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa2>
  42b8bd:	movsx  esi,bp
  42b8c0:	mov    rdi,r14
  42b8c3:	mov    rax,rbx
  42b8c6:	pop    rbx
  42b8c7:	pop    r14
  42b8c9:	pop    rbp
  42b8ca:	jmp    rax
  42b8cc:	cmp    bp,0x64
  42b8d0:	jb     42b8e7 <flatcc_json_printer_int16_enum_struct_field@@Base+0x97>
  42b8d2:	mov    BYTE PTR [rdi+0x3],0x0
  42b8d6:	add    rdi,0x3
  42b8da:	mov    ecx,0x3
  42b8df:	mov    rdx,rdi
  42b8e2:	jmp    42b99f <flatcc_json_printer_int16_enum_struct_field@@Base+0x14f>
  42b8e7:	xor    ecx,ecx
  42b8e9:	cmp    bp,0x9
  42b8ed:	seta   cl
  42b8f0:	inc    ecx
  42b8f2:	mov    eax,ecx
  42b8f4:	lea    rdx,[rdi+rax*1]
  42b8f8:	mov    BYTE PTR [rdi+rax*1],0x0
  42b8fc:	test   cl,0x1
  42b8ff:	jne    42b962 <flatcc_json_printer_int16_enum_struct_field@@Base+0x112>
  42b901:	cmp    ecx,0x2
  42b904:	je     42b938 <flatcc_json_printer_int16_enum_struct_field@@Base+0xe8>
  42b906:	cmp    ecx,0x4
  42b909:	jne    42b9d3 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  42b90f:	mov    eax,esi
  42b911:	shr    eax,0x2
  42b914:	imul   ebp,eax,0x147b
  42b91a:	shr    ebp,0x11
  42b91d:	imul   eax,ebp,0x64
  42b920:	sub    esi,eax
  42b922:	movzx  eax,si
  42b925:	lea    rsi,[rip+0x103f4]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b92c:	movzx  eax,WORD PTR [rsi+rax*2]
  42b930:	mov    WORD PTR [rdx-0x2],ax
  42b934:	add    rdx,0xfffffffffffffffe
  42b938:	movzx  eax,bp
  42b93b:	mov    esi,eax
  42b93d:	shr    esi,0x2
  42b940:	imul   esi,esi,0x147b
  42b946:	shr    esi,0x11
  42b949:	imul   esi,esi,0x64
  42b94c:	sub    eax,esi
  42b94e:	movzx  eax,ax
  42b951:	lea    rsi,[rip+0x103c8]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b958:	movzx  eax,WORD PTR [rsi+rax*2]
  42b95c:	mov    WORD PTR [rdx-0x2],ax
  42b960:	jmp    42b9d3 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  42b962:	cmp    ecx,0x1
  42b965:	je     42b9cb <flatcc_json_printer_int16_enum_struct_field@@Base+0x17b>
  42b967:	cmp    ecx,0x3
  42b96a:	je     42b99f <flatcc_json_printer_int16_enum_struct_field@@Base+0x14f>
  42b96c:	cmp    ecx,0x5
  42b96f:	jne    42b9d3 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  42b971:	mov    eax,esi
  42b973:	shr    eax,0x2
  42b976:	imul   ebp,eax,0x147b
  42b97c:	shr    ebp,0x11
  42b97f:	imul   eax,ebp,0x64
  42b982:	sub    esi,eax
  42b984:	movzx  eax,si
  42b987:	lea    rcx,[rip+0x10392]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b98e:	movzx  eax,WORD PTR [rcx+rax*2]
  42b992:	mov    WORD PTR [rdx-0x2],ax
  42b996:	add    rdx,0xfffffffffffffffe
  42b99a:	mov    ecx,0x5
  42b99f:	movzx  eax,bp
  42b9a2:	mov    esi,eax
  42b9a4:	shr    esi,0x2
  42b9a7:	imul   ebp,esi,0x147b
  42b9ad:	shr    ebp,0x11
  42b9b0:	imul   esi,ebp,0x64
  42b9b3:	sub    eax,esi
  42b9b5:	movzx  eax,ax
  42b9b8:	lea    rsi,[rip+0x10361]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42b9bf:	movzx  eax,WORD PTR [rsi+rax*2]
  42b9c3:	mov    WORD PTR [rdx-0x2],ax
  42b9c7:	add    rdx,0xfffffffffffffffe
  42b9cb:	add    bpl,0x30
  42b9cf:	mov    BYTE PTR [rdx-0x1],bpl
  42b9d3:	add    ecx,r8d
  42b9d6:	add    QWORD PTR [r14+0x28],rcx
  42b9da:	pop    rbx
  42b9db:	pop    r14
  42b9dd:	pop    rbp
  42b9de:	ret    
  42b9df:	nop

000000000042b9e0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  42b9e0:	push   rbp
  42b9e1:	push   r14
  42b9e3:	push   rbx
  42b9e4:	mov    rbx,rdi
  42b9e7:	mov    r14,QWORD PTR [rsp+0x20]
  42b9ec:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42b9ef:	test   esi,esi
  42b9f1:	je     42ba02 <flatcc_json_printer_int32_enum_struct_field@@Base+0x22>
  42b9f3:	mov    rax,QWORD PTR [rbx+0x28]
  42b9f7:	lea    rcx,[rax+0x1]
  42b9fb:	mov    QWORD PTR [rbx+0x28],rcx
  42b9ff:	mov    BYTE PTR [rax],0x2c
  42ba02:	movsxd rdx,r9d
  42ba05:	mov    rdi,rbx
  42ba08:	mov    rsi,r8
  42ba0b:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ba10:	cmp    BYTE PTR [rbx+0x33],0x0
  42ba14:	je     42ba42 <flatcc_json_printer_int32_enum_struct_field@@Base+0x62>
  42ba16:	mov    rsi,QWORD PTR [rbx+0x28]
  42ba1a:	mov    r14d,ebp
  42ba1d:	shr    r14d,0x1f
  42ba21:	test   ebp,ebp
  42ba23:	jns    42ba2d <flatcc_json_printer_int32_enum_struct_field@@Base+0x4d>
  42ba25:	mov    BYTE PTR [rsi],0x2d
  42ba28:	inc    rsi
  42ba2b:	neg    ebp
  42ba2d:	mov    edi,ebp
  42ba2f:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42ba34:	add    eax,r14d
  42ba37:	cdqe   
  42ba39:	add    QWORD PTR [rbx+0x28],rax
  42ba3d:	pop    rbx
  42ba3e:	pop    r14
  42ba40:	pop    rbp
  42ba41:	ret    
  42ba42:	mov    rdi,rbx
  42ba45:	mov    esi,ebp
  42ba47:	mov    rax,r14
  42ba4a:	pop    rbx
  42ba4b:	pop    r14
  42ba4d:	pop    rbp
  42ba4e:	jmp    rax

000000000042ba50 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  42ba50:	push   r15
  42ba52:	push   r14
  42ba54:	push   rbx
  42ba55:	mov    rbx,rdi
  42ba58:	mov    r15,QWORD PTR [rsp+0x20]
  42ba5d:	mov    r14,QWORD PTR [rdx+rcx*1]
  42ba61:	test   esi,esi
  42ba63:	je     42ba74 <flatcc_json_printer_int64_enum_struct_field@@Base+0x24>
  42ba65:	mov    rax,QWORD PTR [rbx+0x28]
  42ba69:	lea    rcx,[rax+0x1]
  42ba6d:	mov    QWORD PTR [rbx+0x28],rcx
  42ba71:	mov    BYTE PTR [rax],0x2c
  42ba74:	movsxd rdx,r9d
  42ba77:	mov    rdi,rbx
  42ba7a:	mov    rsi,r8
  42ba7d:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ba82:	cmp    BYTE PTR [rbx+0x33],0x0
  42ba86:	je     42bab8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x68>
  42ba88:	mov    rsi,QWORD PTR [rbx+0x28]
  42ba8c:	mov    r15,r14
  42ba8f:	shr    r15,0x3f
  42ba93:	test   r14,r14
  42ba96:	jns    42baa1 <flatcc_json_printer_int64_enum_struct_field@@Base+0x51>
  42ba98:	mov    BYTE PTR [rsi],0x2d
  42ba9b:	inc    rsi
  42ba9e:	neg    r14
  42baa1:	mov    rdi,r14
  42baa4:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42baa9:	add    eax,r15d
  42baac:	cdqe   
  42baae:	add    QWORD PTR [rbx+0x28],rax
  42bab2:	pop    rbx
  42bab3:	pop    r14
  42bab5:	pop    r15
  42bab7:	ret    
  42bab8:	mov    rdi,rbx
  42babb:	mov    rsi,r14
  42babe:	mov    rax,r15
  42bac1:	pop    rbx
  42bac2:	pop    r14
  42bac4:	pop    r15
  42bac6:	jmp    rax
  42bac8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bad0 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  42bad0:	push   rbp
  42bad1:	push   r14
  42bad3:	push   rbx
  42bad4:	mov    rbx,rdi
  42bad7:	mov    r14,QWORD PTR [rsp+0x20]
  42badc:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42bae0:	test   esi,esi
  42bae2:	je     42baf3 <flatcc_json_printer_bool_enum_struct_field@@Base+0x23>
  42bae4:	mov    rax,QWORD PTR [rbx+0x28]
  42bae8:	lea    rcx,[rax+0x1]
  42baec:	mov    QWORD PTR [rbx+0x28],rcx
  42baf0:	mov    BYTE PTR [rax],0x2c
  42baf3:	movsxd rdx,r9d
  42baf6:	mov    rdi,rbx
  42baf9:	mov    rsi,r8
  42bafc:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42bb01:	cmp    BYTE PTR [rbx+0x33],0x0
  42bb05:	je     42bb21 <flatcc_json_printer_bool_enum_struct_field@@Base+0x51>
  42bb07:	mov    rax,QWORD PTR [rbx+0x28]
  42bb0b:	test   bpl,bpl
  42bb0e:	je     42bb31 <flatcc_json_printer_bool_enum_struct_field@@Base+0x61>
  42bb10:	mov    BYTE PTR [rax+0x4],0x0
  42bb14:	mov    DWORD PTR [rax],0x65757274
  42bb1a:	mov    eax,0x4
  42bb1f:	jmp    42bb42 <flatcc_json_printer_bool_enum_struct_field@@Base+0x72>
  42bb21:	movzx  esi,bpl
  42bb25:	mov    rdi,rbx
  42bb28:	mov    rax,r14
  42bb2b:	pop    rbx
  42bb2c:	pop    r14
  42bb2e:	pop    rbp
  42bb2f:	jmp    rax
  42bb31:	mov    WORD PTR [rax+0x4],0x65
  42bb37:	mov    DWORD PTR [rax],0x736c6166
  42bb3d:	mov    eax,0x5
  42bb42:	add    QWORD PTR [rbx+0x28],rax
  42bb46:	pop    rbx
  42bb47:	pop    r14
  42bb49:	pop    rbp
  42bb4a:	ret    
  42bb4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bb50 <flatcc_json_printer_utype_vector_field@@Base>:
  42bb50:	push   rbp
  42bb51:	push   r15
  42bb53:	push   r14
  42bb55:	push   r13
  42bb57:	push   r12
  42bb59:	push   rbx
  42bb5a:	push   rax
  42bb5b:	lea    eax,[rdx+rdx*1]
  42bb5e:	add    eax,0x4
  42bb61:	cmp    eax,DWORD PTR [rsi+0x10]
  42bb64:	jge    42bf6e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42bb6a:	mov    rdx,QWORD PTR [rsi+0x8]
  42bb6e:	mov    eax,eax
  42bb70:	movzx  r12d,WORD PTR [rdx+rax*1]
  42bb75:	test   r12,r12
  42bb78:	je     42bf6e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42bb7e:	add    r12,QWORD PTR [rsi]
  42bb81:	je     42bf6e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42bb87:	mov    r15,rdi
  42bb8a:	mov    eax,DWORD PTR [rsi+0x18]
  42bb8d:	lea    edx,[rax+0x1]
  42bb90:	mov    DWORD PTR [rsi+0x18],edx
  42bb93:	test   eax,eax
  42bb95:	je     42bba6 <flatcc_json_printer_utype_vector_field@@Base+0x56>
  42bb97:	mov    rax,QWORD PTR [r15+0x28]
  42bb9b:	lea    rdx,[rax+0x1]
  42bb9f:	mov    QWORD PTR [r15+0x28],rdx
  42bba3:	mov    BYTE PTR [rax],0x2c
  42bba6:	mov    ebx,DWORD PTR [r12]
  42bbaa:	mov    ebp,DWORD PTR [r12+rbx*1]
  42bbae:	movsxd rdx,r8d
  42bbb1:	mov    rdi,r15
  42bbb4:	mov    rsi,rcx
  42bbb7:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42bbbc:	inc    DWORD PTR [r15+0x38]
  42bbc0:	mov    rax,QWORD PTR [r15+0x28]
  42bbc4:	lea    rcx,[rax+0x1]
  42bbc8:	mov    QWORD PTR [r15+0x28],rcx
  42bbcc:	mov    BYTE PTR [rax],0x5b
  42bbcf:	test   ebp,ebp
  42bbd1:	je     42beb4 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42bbd7:	add    r12,rbx
  42bbda:	cmp    BYTE PTR [r15+0x31],0x0
  42bbdf:	mov    r14,QWORD PTR [r15+0x28]
  42bbe3:	je     42bc84 <flatcc_json_printer_utype_vector_field@@Base+0x134>
  42bbe9:	lea    rax,[r14+0x1]
  42bbed:	mov    QWORD PTR [r15+0x28],rax
  42bbf1:	mov    BYTE PTR [r14],0xa
  42bbf5:	movsxd rax,DWORD PTR [r15+0x38]
  42bbf9:	movzx  r14d,BYTE PTR [r15+0x31]
  42bbfe:	imul   r14,rax
  42bc02:	mov    rbx,QWORD PTR [r15+0x20]
  42bc06:	mov    rdi,QWORD PTR [r15+0x28]
  42bc0a:	lea    rax,[rdi+r14*1]
  42bc0e:	cmp    rax,rbx
  42bc11:	jbe    42bc6d <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42bc13:	cmp    rdi,rbx
  42bc16:	jb     42bc29 <flatcc_json_printer_utype_vector_field@@Base+0xd9>
  42bc18:	mov    rdi,r15
  42bc1b:	xor    esi,esi
  42bc1d:	call   QWORD PTR [r15+0x48]
  42bc21:	mov    rbx,QWORD PTR [r15+0x20]
  42bc25:	mov    rdi,QWORD PTR [r15+0x28]
  42bc29:	sub    rbx,rdi
  42bc2c:	cmp    rbx,r14
  42bc2f:	jae    42bc6d <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42bc31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc3b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc40:	mov    esi,0x20
  42bc45:	mov    rdx,rbx
  42bc48:	call   406080 <memset@plt>
  42bc4d:	add    QWORD PTR [r15+0x28],rbx
  42bc51:	sub    r14,rbx
  42bc54:	mov    rdi,r15
  42bc57:	xor    esi,esi
  42bc59:	call   QWORD PTR [r15+0x48]
  42bc5d:	mov    rbx,QWORD PTR [r15+0x20]
  42bc61:	mov    rdi,QWORD PTR [r15+0x28]
  42bc65:	sub    rbx,rdi
  42bc68:	cmp    r14,rbx
  42bc6b:	ja     42bc40 <flatcc_json_printer_utype_vector_field@@Base+0xf0>
  42bc6d:	mov    esi,0x20
  42bc72:	mov    rdx,r14
  42bc75:	call   406080 <memset@plt>
  42bc7a:	add    r14,QWORD PTR [r15+0x28]
  42bc7e:	mov    QWORD PTR [r15+0x28],r14
  42bc82:	jmp    42bc97 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42bc84:	cmp    r14,QWORD PTR [r15+0x20]
  42bc88:	jb     42bc97 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42bc8a:	mov    rdi,r15
  42bc8d:	xor    esi,esi
  42bc8f:	call   QWORD PTR [r15+0x48]
  42bc93:	mov    r14,QWORD PTR [r15+0x28]
  42bc97:	mov    al,BYTE PTR [r12+0x4]
  42bc9c:	cmp    al,0x64
  42bc9e:	jb     42bcd6 <flatcc_json_printer_utype_vector_field@@Base+0x186>
  42bca0:	mov    BYTE PTR [r14+0x3],0x0
  42bca5:	movzx  ecx,al
  42bca8:	lea    edx,[rcx+rcx*4]
  42bcab:	lea    ecx,[rcx+rdx*8]
  42bcae:	shr    ecx,0xc
  42bcb1:	imul   edx,ecx,0x64
  42bcb4:	sub    al,dl
  42bcb6:	movzx  eax,al
  42bcb9:	lea    rdx,[rip+0x10060]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42bcc0:	movzx  eax,WORD PTR [rdx+rax*2]
  42bcc4:	mov    WORD PTR [r14+0x1],ax
  42bcc9:	or     cl,0x30
  42bccc:	mov    BYTE PTR [r14],cl
  42bccf:	mov    eax,0x3
  42bcd4:	jmp    42bd18 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
  42bcd6:	cmp    al,0xa
  42bcd8:	jb     42bd09 <flatcc_json_printer_utype_vector_field@@Base+0x1b9>
  42bcda:	mov    BYTE PTR [r14+0x2],0x0
  42bcdf:	movzx  ecx,al
  42bce2:	lea    edx,[rcx+rcx*4]
  42bce5:	lea    ecx,[rcx+rdx*8]
  42bce8:	shr    ecx,0xc
  42bceb:	imul   ecx,ecx,0x64
  42bcee:	sub    al,cl
  42bcf0:	movzx  eax,al
  42bcf3:	lea    rcx,[rip+0x10026]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42bcfa:	movzx  eax,WORD PTR [rcx+rax*2]
  42bcfe:	mov    WORD PTR [r14],ax
  42bd02:	mov    eax,0x2
  42bd07:	jmp    42bd18 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
  42bd09:	mov    BYTE PTR [r14+0x1],0x0
  42bd0e:	add    al,0x30
  42bd10:	mov    BYTE PTR [r14],al
  42bd13:	mov    eax,0x1
  42bd18:	add    QWORD PTR [r15+0x28],rax
  42bd1c:	dec    ebp
  42bd1e:	je     42beb4 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42bd24:	add    r12,0x5
  42bd28:	mov    rax,QWORD PTR [r15+0x28]
  42bd2c:	lea    r13,[rip+0xffed]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42bd33:	jmp    42bd82 <flatcc_json_printer_utype_vector_field@@Base+0x232>
  42bd35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd3f:	nop
  42bd40:	mov    BYTE PTR [r14+0x3],0x0
  42bd45:	movzx  ecx,al
  42bd48:	lea    edx,[rcx+rcx*4]
  42bd4b:	lea    ecx,[rcx+rdx*8]
  42bd4e:	shr    ecx,0xc
  42bd51:	imul   edx,ecx,0x64
  42bd54:	sub    al,dl
  42bd56:	movzx  eax,al
  42bd59:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42bd5f:	mov    WORD PTR [r14+0x1],ax
  42bd64:	or     cl,0x30
  42bd67:	mov    BYTE PTR [r14],cl
  42bd6a:	mov    eax,0x3
  42bd6f:	add    rax,QWORD PTR [r15+0x28]
  42bd73:	mov    QWORD PTR [r15+0x28],rax
  42bd77:	inc    r12
  42bd7a:	test   ebp,ebp
  42bd7c:	je     42beb4 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42bd82:	lea    rcx,[rax+0x1]
  42bd86:	mov    QWORD PTR [r15+0x28],rcx
  42bd8a:	mov    BYTE PTR [rax],0x2c
  42bd8d:	cmp    BYTE PTR [r15+0x31],0x0
  42bd92:	mov    r14,QWORD PTR [r15+0x28]
  42bd96:	je     42be40 <flatcc_json_printer_utype_vector_field@@Base+0x2f0>
  42bd9c:	lea    rax,[r14+0x1]
  42bda0:	mov    QWORD PTR [r15+0x28],rax
  42bda4:	mov    BYTE PTR [r14],0xa
  42bda8:	movsxd rax,DWORD PTR [r15+0x38]
  42bdac:	movzx  r14d,BYTE PTR [r15+0x31]
  42bdb1:	imul   r14,rax
  42bdb5:	mov    rbx,QWORD PTR [r15+0x20]
  42bdb9:	mov    rdi,QWORD PTR [r15+0x28]
  42bdbd:	lea    rax,[rdi+r14*1]
  42bdc1:	cmp    rax,rbx
  42bdc4:	jbe    42be1d <flatcc_json_printer_utype_vector_field@@Base+0x2cd>
  42bdc6:	cmp    rdi,rbx
  42bdc9:	jb     42bddc <flatcc_json_printer_utype_vector_field@@Base+0x28c>
  42bdcb:	mov    rdi,r15
  42bdce:	xor    esi,esi
  42bdd0:	call   QWORD PTR [r15+0x48]
  42bdd4:	mov    rbx,QWORD PTR [r15+0x20]
  42bdd8:	mov    rdi,QWORD PTR [r15+0x28]
  42bddc:	sub    rbx,rdi
  42bddf:	cmp    rbx,r14
  42bde2:	jae    42be1d <flatcc_json_printer_utype_vector_field@@Base+0x2cd>
  42bde4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bdee:	xchg   ax,ax
  42bdf0:	mov    esi,0x20
  42bdf5:	mov    rdx,rbx
  42bdf8:	call   406080 <memset@plt>
  42bdfd:	add    QWORD PTR [r15+0x28],rbx
  42be01:	sub    r14,rbx
  42be04:	mov    rdi,r15
  42be07:	xor    esi,esi
  42be09:	call   QWORD PTR [r15+0x48]
  42be0d:	mov    rbx,QWORD PTR [r15+0x20]
  42be11:	mov    rdi,QWORD PTR [r15+0x28]
  42be15:	sub    rbx,rdi
  42be18:	cmp    r14,rbx
  42be1b:	ja     42bdf0 <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
  42be1d:	mov    esi,0x20
  42be22:	mov    rdx,r14
  42be25:	call   406080 <memset@plt>
  42be2a:	add    r14,QWORD PTR [r15+0x28]
  42be2e:	mov    QWORD PTR [r15+0x28],r14
  42be32:	jmp    42be60 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42be34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be3e:	xchg   ax,ax
  42be40:	cmp    r14,QWORD PTR [r15+0x20]
  42be44:	jb     42be60 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42be46:	mov    rdi,r15
  42be49:	xor    esi,esi
  42be4b:	call   QWORD PTR [r15+0x48]
  42be4f:	mov    r14,QWORD PTR [r15+0x28]
  42be53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be5d:	nop    DWORD PTR [rax]
  42be60:	dec    ebp
  42be62:	mov    al,BYTE PTR [r12]
  42be66:	cmp    al,0x64
  42be68:	jae    42bd40 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
  42be6e:	cmp    al,0xa
  42be70:	jb     42bea0 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42be72:	mov    BYTE PTR [r14+0x2],0x0
  42be77:	movzx  ecx,al
  42be7a:	lea    edx,[rcx+rcx*4]
  42be7d:	lea    ecx,[rcx+rdx*8]
  42be80:	shr    ecx,0xc
  42be83:	imul   ecx,ecx,0x64
  42be86:	sub    al,cl
  42be88:	movzx  eax,al
  42be8b:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42be91:	mov    WORD PTR [r14],ax
  42be95:	mov    eax,0x2
  42be9a:	jmp    42bd6f <flatcc_json_printer_utype_vector_field@@Base+0x21f>
  42be9f:	nop
  42bea0:	mov    BYTE PTR [r14+0x1],0x0
  42bea5:	add    al,0x30
  42bea7:	mov    BYTE PTR [r14],al
  42beaa:	mov    eax,0x1
  42beaf:	jmp    42bd6f <flatcc_json_printer_utype_vector_field@@Base+0x21f>
  42beb4:	cmp    BYTE PTR [r15+0x31],0x0
  42beb9:	mov    r14,QWORD PTR [r15+0x28]
  42bebd:	je     42bf62 <flatcc_json_printer_utype_vector_field@@Base+0x412>
  42bec3:	lea    rax,[r14+0x1]
  42bec7:	mov    QWORD PTR [r15+0x28],rax
  42becb:	mov    BYTE PTR [r14],0xa
  42becf:	movsxd rax,DWORD PTR [r15+0x38]
  42bed3:	dec    rax
  42bed6:	mov    DWORD PTR [r15+0x38],eax
  42beda:	movzx  r14d,BYTE PTR [r15+0x31]
  42bedf:	imul   r14,rax
  42bee3:	mov    rbx,QWORD PTR [r15+0x20]
  42bee7:	mov    rdi,QWORD PTR [r15+0x28]
  42beeb:	lea    rax,[rdi+r14*1]
  42beef:	cmp    rax,rbx
  42bef2:	jbe    42bf4d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42bef4:	cmp    rdi,rbx
  42bef7:	jb     42bf0a <flatcc_json_printer_utype_vector_field@@Base+0x3ba>
  42bef9:	mov    rdi,r15
  42befc:	xor    esi,esi
  42befe:	call   QWORD PTR [r15+0x48]
  42bf02:	mov    rbx,QWORD PTR [r15+0x20]
  42bf06:	mov    rdi,QWORD PTR [r15+0x28]
  42bf0a:	sub    rbx,rdi
  42bf0d:	cmp    rbx,r14
  42bf10:	jae    42bf4d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42bf12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf1c:	nop    DWORD PTR [rax+0x0]
  42bf20:	mov    esi,0x20
  42bf25:	mov    rdx,rbx
  42bf28:	call   406080 <memset@plt>
  42bf2d:	add    QWORD PTR [r15+0x28],rbx
  42bf31:	sub    r14,rbx
  42bf34:	mov    rdi,r15
  42bf37:	xor    esi,esi
  42bf39:	call   QWORD PTR [r15+0x48]
  42bf3d:	mov    rbx,QWORD PTR [r15+0x20]
  42bf41:	mov    rdi,QWORD PTR [r15+0x28]
  42bf45:	sub    rbx,rdi
  42bf48:	cmp    r14,rbx
  42bf4b:	ja     42bf20 <flatcc_json_printer_utype_vector_field@@Base+0x3d0>
  42bf4d:	mov    esi,0x20
  42bf52:	mov    rdx,r14
  42bf55:	call   406080 <memset@plt>
  42bf5a:	add    r14,QWORD PTR [r15+0x28]
  42bf5e:	mov    QWORD PTR [r15+0x28],r14
  42bf62:	lea    rax,[r14+0x1]
  42bf66:	mov    QWORD PTR [r15+0x28],rax
  42bf6a:	mov    BYTE PTR [r14],0x5d
  42bf6e:	add    rsp,0x8
  42bf72:	pop    rbx
  42bf73:	pop    r12
  42bf75:	pop    r13
  42bf77:	pop    r14
  42bf79:	pop    r15
  42bf7b:	pop    rbp
  42bf7c:	ret    
  42bf7d:	nop    DWORD PTR [rax]

000000000042bf80 <flatcc_json_printer_uint8_vector_field@@Base>:
  42bf80:	push   rbp
  42bf81:	push   r15
  42bf83:	push   r14
  42bf85:	push   r13
  42bf87:	push   r12
  42bf89:	push   rbx
  42bf8a:	push   rax
  42bf8b:	lea    eax,[rdx+rdx*1]
  42bf8e:	add    eax,0x4
  42bf91:	cmp    eax,DWORD PTR [rsi+0x10]
  42bf94:	jge    42c39e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42bf9a:	mov    rdx,QWORD PTR [rsi+0x8]
  42bf9e:	mov    eax,eax
  42bfa0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42bfa5:	test   r12,r12
  42bfa8:	je     42c39e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42bfae:	add    r12,QWORD PTR [rsi]
  42bfb1:	je     42c39e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42bfb7:	mov    r15,rdi
  42bfba:	mov    eax,DWORD PTR [rsi+0x18]
  42bfbd:	lea    edx,[rax+0x1]
  42bfc0:	mov    DWORD PTR [rsi+0x18],edx
  42bfc3:	test   eax,eax
  42bfc5:	je     42bfd6 <flatcc_json_printer_uint8_vector_field@@Base+0x56>
  42bfc7:	mov    rax,QWORD PTR [r15+0x28]
  42bfcb:	lea    rdx,[rax+0x1]
  42bfcf:	mov    QWORD PTR [r15+0x28],rdx
  42bfd3:	mov    BYTE PTR [rax],0x2c
  42bfd6:	mov    ebx,DWORD PTR [r12]
  42bfda:	mov    ebp,DWORD PTR [r12+rbx*1]
  42bfde:	movsxd rdx,r8d
  42bfe1:	mov    rdi,r15
  42bfe4:	mov    rsi,rcx
  42bfe7:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42bfec:	inc    DWORD PTR [r15+0x38]
  42bff0:	mov    rax,QWORD PTR [r15+0x28]
  42bff4:	lea    rcx,[rax+0x1]
  42bff8:	mov    QWORD PTR [r15+0x28],rcx
  42bffc:	mov    BYTE PTR [rax],0x5b
  42bfff:	test   ebp,ebp
  42c001:	je     42c2e4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42c007:	add    r12,rbx
  42c00a:	cmp    BYTE PTR [r15+0x31],0x0
  42c00f:	mov    r14,QWORD PTR [r15+0x28]
  42c013:	je     42c0b4 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
  42c019:	lea    rax,[r14+0x1]
  42c01d:	mov    QWORD PTR [r15+0x28],rax
  42c021:	mov    BYTE PTR [r14],0xa
  42c025:	movsxd rax,DWORD PTR [r15+0x38]
  42c029:	movzx  r14d,BYTE PTR [r15+0x31]
  42c02e:	imul   r14,rax
  42c032:	mov    rbx,QWORD PTR [r15+0x20]
  42c036:	mov    rdi,QWORD PTR [r15+0x28]
  42c03a:	lea    rax,[rdi+r14*1]
  42c03e:	cmp    rax,rbx
  42c041:	jbe    42c09d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42c043:	cmp    rdi,rbx
  42c046:	jb     42c059 <flatcc_json_printer_uint8_vector_field@@Base+0xd9>
  42c048:	mov    rdi,r15
  42c04b:	xor    esi,esi
  42c04d:	call   QWORD PTR [r15+0x48]
  42c051:	mov    rbx,QWORD PTR [r15+0x20]
  42c055:	mov    rdi,QWORD PTR [r15+0x28]
  42c059:	sub    rbx,rdi
  42c05c:	cmp    rbx,r14
  42c05f:	jae    42c09d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42c061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c06b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c070:	mov    esi,0x20
  42c075:	mov    rdx,rbx
  42c078:	call   406080 <memset@plt>
  42c07d:	add    QWORD PTR [r15+0x28],rbx
  42c081:	sub    r14,rbx
  42c084:	mov    rdi,r15
  42c087:	xor    esi,esi
  42c089:	call   QWORD PTR [r15+0x48]
  42c08d:	mov    rbx,QWORD PTR [r15+0x20]
  42c091:	mov    rdi,QWORD PTR [r15+0x28]
  42c095:	sub    rbx,rdi
  42c098:	cmp    r14,rbx
  42c09b:	ja     42c070 <flatcc_json_printer_uint8_vector_field@@Base+0xf0>
  42c09d:	mov    esi,0x20
  42c0a2:	mov    rdx,r14
  42c0a5:	call   406080 <memset@plt>
  42c0aa:	add    r14,QWORD PTR [r15+0x28]
  42c0ae:	mov    QWORD PTR [r15+0x28],r14
  42c0b2:	jmp    42c0c7 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42c0b4:	cmp    r14,QWORD PTR [r15+0x20]
  42c0b8:	jb     42c0c7 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42c0ba:	mov    rdi,r15
  42c0bd:	xor    esi,esi
  42c0bf:	call   QWORD PTR [r15+0x48]
  42c0c3:	mov    r14,QWORD PTR [r15+0x28]
  42c0c7:	mov    al,BYTE PTR [r12+0x4]
  42c0cc:	cmp    al,0x64
  42c0ce:	jb     42c106 <flatcc_json_printer_uint8_vector_field@@Base+0x186>
  42c0d0:	mov    BYTE PTR [r14+0x3],0x0
  42c0d5:	movzx  ecx,al
  42c0d8:	lea    edx,[rcx+rcx*4]
  42c0db:	lea    ecx,[rcx+rdx*8]
  42c0de:	shr    ecx,0xc
  42c0e1:	imul   edx,ecx,0x64
  42c0e4:	sub    al,dl
  42c0e6:	movzx  eax,al
  42c0e9:	lea    rdx,[rip+0xfc30]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c0f0:	movzx  eax,WORD PTR [rdx+rax*2]
  42c0f4:	mov    WORD PTR [r14+0x1],ax
  42c0f9:	or     cl,0x30
  42c0fc:	mov    BYTE PTR [r14],cl
  42c0ff:	mov    eax,0x3
  42c104:	jmp    42c148 <flatcc_json_printer_uint8_vector_field@@Base+0x1c8>
  42c106:	cmp    al,0xa
  42c108:	jb     42c139 <flatcc_json_printer_uint8_vector_field@@Base+0x1b9>
  42c10a:	mov    BYTE PTR [r14+0x2],0x0
  42c10f:	movzx  ecx,al
  42c112:	lea    edx,[rcx+rcx*4]
  42c115:	lea    ecx,[rcx+rdx*8]
  42c118:	shr    ecx,0xc
  42c11b:	imul   ecx,ecx,0x64
  42c11e:	sub    al,cl
  42c120:	movzx  eax,al
  42c123:	lea    rcx,[rip+0xfbf6]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c12a:	movzx  eax,WORD PTR [rcx+rax*2]
  42c12e:	mov    WORD PTR [r14],ax
  42c132:	mov    eax,0x2
  42c137:	jmp    42c148 <flatcc_json_printer_uint8_vector_field@@Base+0x1c8>
  42c139:	mov    BYTE PTR [r14+0x1],0x0
  42c13e:	add    al,0x30
  42c140:	mov    BYTE PTR [r14],al
  42c143:	mov    eax,0x1
  42c148:	add    QWORD PTR [r15+0x28],rax
  42c14c:	dec    ebp
  42c14e:	je     42c2e4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42c154:	add    r12,0x5
  42c158:	mov    rax,QWORD PTR [r15+0x28]
  42c15c:	lea    r13,[rip+0xfbbd]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c163:	jmp    42c1b2 <flatcc_json_printer_uint8_vector_field@@Base+0x232>
  42c165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c16f:	nop
  42c170:	mov    BYTE PTR [r14+0x3],0x0
  42c175:	movzx  ecx,al
  42c178:	lea    edx,[rcx+rcx*4]
  42c17b:	lea    ecx,[rcx+rdx*8]
  42c17e:	shr    ecx,0xc
  42c181:	imul   edx,ecx,0x64
  42c184:	sub    al,dl
  42c186:	movzx  eax,al
  42c189:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42c18f:	mov    WORD PTR [r14+0x1],ax
  42c194:	or     cl,0x30
  42c197:	mov    BYTE PTR [r14],cl
  42c19a:	mov    eax,0x3
  42c19f:	add    rax,QWORD PTR [r15+0x28]
  42c1a3:	mov    QWORD PTR [r15+0x28],rax
  42c1a7:	inc    r12
  42c1aa:	test   ebp,ebp
  42c1ac:	je     42c2e4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42c1b2:	lea    rcx,[rax+0x1]
  42c1b6:	mov    QWORD PTR [r15+0x28],rcx
  42c1ba:	mov    BYTE PTR [rax],0x2c
  42c1bd:	cmp    BYTE PTR [r15+0x31],0x0
  42c1c2:	mov    r14,QWORD PTR [r15+0x28]
  42c1c6:	je     42c270 <flatcc_json_printer_uint8_vector_field@@Base+0x2f0>
  42c1cc:	lea    rax,[r14+0x1]
  42c1d0:	mov    QWORD PTR [r15+0x28],rax
  42c1d4:	mov    BYTE PTR [r14],0xa
  42c1d8:	movsxd rax,DWORD PTR [r15+0x38]
  42c1dc:	movzx  r14d,BYTE PTR [r15+0x31]
  42c1e1:	imul   r14,rax
  42c1e5:	mov    rbx,QWORD PTR [r15+0x20]
  42c1e9:	mov    rdi,QWORD PTR [r15+0x28]
  42c1ed:	lea    rax,[rdi+r14*1]
  42c1f1:	cmp    rax,rbx
  42c1f4:	jbe    42c24d <flatcc_json_printer_uint8_vector_field@@Base+0x2cd>
  42c1f6:	cmp    rdi,rbx
  42c1f9:	jb     42c20c <flatcc_json_printer_uint8_vector_field@@Base+0x28c>
  42c1fb:	mov    rdi,r15
  42c1fe:	xor    esi,esi
  42c200:	call   QWORD PTR [r15+0x48]
  42c204:	mov    rbx,QWORD PTR [r15+0x20]
  42c208:	mov    rdi,QWORD PTR [r15+0x28]
  42c20c:	sub    rbx,rdi
  42c20f:	cmp    rbx,r14
  42c212:	jae    42c24d <flatcc_json_printer_uint8_vector_field@@Base+0x2cd>
  42c214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c21e:	xchg   ax,ax
  42c220:	mov    esi,0x20
  42c225:	mov    rdx,rbx
  42c228:	call   406080 <memset@plt>
  42c22d:	add    QWORD PTR [r15+0x28],rbx
  42c231:	sub    r14,rbx
  42c234:	mov    rdi,r15
  42c237:	xor    esi,esi
  42c239:	call   QWORD PTR [r15+0x48]
  42c23d:	mov    rbx,QWORD PTR [r15+0x20]
  42c241:	mov    rdi,QWORD PTR [r15+0x28]
  42c245:	sub    rbx,rdi
  42c248:	cmp    r14,rbx
  42c24b:	ja     42c220 <flatcc_json_printer_uint8_vector_field@@Base+0x2a0>
  42c24d:	mov    esi,0x20
  42c252:	mov    rdx,r14
  42c255:	call   406080 <memset@plt>
  42c25a:	add    r14,QWORD PTR [r15+0x28]
  42c25e:	mov    QWORD PTR [r15+0x28],r14
  42c262:	jmp    42c290 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42c264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c26e:	xchg   ax,ax
  42c270:	cmp    r14,QWORD PTR [r15+0x20]
  42c274:	jb     42c290 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42c276:	mov    rdi,r15
  42c279:	xor    esi,esi
  42c27b:	call   QWORD PTR [r15+0x48]
  42c27f:	mov    r14,QWORD PTR [r15+0x28]
  42c283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c28d:	nop    DWORD PTR [rax]
  42c290:	dec    ebp
  42c292:	mov    al,BYTE PTR [r12]
  42c296:	cmp    al,0x64
  42c298:	jae    42c170 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  42c29e:	cmp    al,0xa
  42c2a0:	jb     42c2d0 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42c2a2:	mov    BYTE PTR [r14+0x2],0x0
  42c2a7:	movzx  ecx,al
  42c2aa:	lea    edx,[rcx+rcx*4]
  42c2ad:	lea    ecx,[rcx+rdx*8]
  42c2b0:	shr    ecx,0xc
  42c2b3:	imul   ecx,ecx,0x64
  42c2b6:	sub    al,cl
  42c2b8:	movzx  eax,al
  42c2bb:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42c2c1:	mov    WORD PTR [r14],ax
  42c2c5:	mov    eax,0x2
  42c2ca:	jmp    42c19f <flatcc_json_printer_uint8_vector_field@@Base+0x21f>
  42c2cf:	nop
  42c2d0:	mov    BYTE PTR [r14+0x1],0x0
  42c2d5:	add    al,0x30
  42c2d7:	mov    BYTE PTR [r14],al
  42c2da:	mov    eax,0x1
  42c2df:	jmp    42c19f <flatcc_json_printer_uint8_vector_field@@Base+0x21f>
  42c2e4:	cmp    BYTE PTR [r15+0x31],0x0
  42c2e9:	mov    r14,QWORD PTR [r15+0x28]
  42c2ed:	je     42c392 <flatcc_json_printer_uint8_vector_field@@Base+0x412>
  42c2f3:	lea    rax,[r14+0x1]
  42c2f7:	mov    QWORD PTR [r15+0x28],rax
  42c2fb:	mov    BYTE PTR [r14],0xa
  42c2ff:	movsxd rax,DWORD PTR [r15+0x38]
  42c303:	dec    rax
  42c306:	mov    DWORD PTR [r15+0x38],eax
  42c30a:	movzx  r14d,BYTE PTR [r15+0x31]
  42c30f:	imul   r14,rax
  42c313:	mov    rbx,QWORD PTR [r15+0x20]
  42c317:	mov    rdi,QWORD PTR [r15+0x28]
  42c31b:	lea    rax,[rdi+r14*1]
  42c31f:	cmp    rax,rbx
  42c322:	jbe    42c37d <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42c324:	cmp    rdi,rbx
  42c327:	jb     42c33a <flatcc_json_printer_uint8_vector_field@@Base+0x3ba>
  42c329:	mov    rdi,r15
  42c32c:	xor    esi,esi
  42c32e:	call   QWORD PTR [r15+0x48]
  42c332:	mov    rbx,QWORD PTR [r15+0x20]
  42c336:	mov    rdi,QWORD PTR [r15+0x28]
  42c33a:	sub    rbx,rdi
  42c33d:	cmp    rbx,r14
  42c340:	jae    42c37d <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42c342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c34c:	nop    DWORD PTR [rax+0x0]
  42c350:	mov    esi,0x20
  42c355:	mov    rdx,rbx
  42c358:	call   406080 <memset@plt>
  42c35d:	add    QWORD PTR [r15+0x28],rbx
  42c361:	sub    r14,rbx
  42c364:	mov    rdi,r15
  42c367:	xor    esi,esi
  42c369:	call   QWORD PTR [r15+0x48]
  42c36d:	mov    rbx,QWORD PTR [r15+0x20]
  42c371:	mov    rdi,QWORD PTR [r15+0x28]
  42c375:	sub    rbx,rdi
  42c378:	cmp    r14,rbx
  42c37b:	ja     42c350 <flatcc_json_printer_uint8_vector_field@@Base+0x3d0>
  42c37d:	mov    esi,0x20
  42c382:	mov    rdx,r14
  42c385:	call   406080 <memset@plt>
  42c38a:	add    r14,QWORD PTR [r15+0x28]
  42c38e:	mov    QWORD PTR [r15+0x28],r14
  42c392:	lea    rax,[r14+0x1]
  42c396:	mov    QWORD PTR [r15+0x28],rax
  42c39a:	mov    BYTE PTR [r14],0x5d
  42c39e:	add    rsp,0x8
  42c3a2:	pop    rbx
  42c3a3:	pop    r12
  42c3a5:	pop    r13
  42c3a7:	pop    r14
  42c3a9:	pop    r15
  42c3ab:	pop    rbp
  42c3ac:	ret    
  42c3ad:	nop    DWORD PTR [rax]

000000000042c3b0 <flatcc_json_printer_uint16_vector_field@@Base>:
  42c3b0:	push   rbp
  42c3b1:	push   r15
  42c3b3:	push   r14
  42c3b5:	push   r13
  42c3b7:	push   r12
  42c3b9:	push   rbx
  42c3ba:	push   rax
  42c3bb:	lea    eax,[rdx+rdx*1]
  42c3be:	add    eax,0x4
  42c3c1:	cmp    eax,DWORD PTR [rsi+0x10]
  42c3c4:	jge    42c92e <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42c3ca:	mov    rdx,QWORD PTR [rsi+0x8]
  42c3ce:	mov    eax,eax
  42c3d0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c3d5:	test   r12,r12
  42c3d8:	je     42c92e <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42c3de:	add    r12,QWORD PTR [rsi]
  42c3e1:	je     42c92e <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42c3e7:	mov    r15,rdi
  42c3ea:	mov    eax,DWORD PTR [rsi+0x18]
  42c3ed:	lea    edx,[rax+0x1]
  42c3f0:	mov    DWORD PTR [rsi+0x18],edx
  42c3f3:	test   eax,eax
  42c3f5:	je     42c406 <flatcc_json_printer_uint16_vector_field@@Base+0x56>
  42c3f7:	mov    rax,QWORD PTR [r15+0x28]
  42c3fb:	lea    rdx,[rax+0x1]
  42c3ff:	mov    QWORD PTR [r15+0x28],rdx
  42c403:	mov    BYTE PTR [rax],0x2c
  42c406:	mov    ebx,DWORD PTR [r12]
  42c40a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c40e:	movsxd rdx,r8d
  42c411:	mov    rdi,r15
  42c414:	mov    rsi,rcx
  42c417:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42c41c:	inc    DWORD PTR [r15+0x38]
  42c420:	mov    rax,QWORD PTR [r15+0x28]
  42c424:	lea    rcx,[rax+0x1]
  42c428:	mov    QWORD PTR [r15+0x28],rcx
  42c42c:	mov    BYTE PTR [rax],0x5b
  42c42f:	test   ebp,ebp
  42c431:	je     42c880 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42c437:	add    r12,rbx
  42c43a:	cmp    BYTE PTR [r15+0x31],0x0
  42c43f:	mov    r14,QWORD PTR [r15+0x28]
  42c443:	je     42c4e4 <flatcc_json_printer_uint16_vector_field@@Base+0x134>
  42c449:	lea    rax,[r14+0x1]
  42c44d:	mov    QWORD PTR [r15+0x28],rax
  42c451:	mov    BYTE PTR [r14],0xa
  42c455:	movsxd rax,DWORD PTR [r15+0x38]
  42c459:	movzx  r14d,BYTE PTR [r15+0x31]
  42c45e:	imul   r14,rax
  42c462:	mov    rbx,QWORD PTR [r15+0x20]
  42c466:	mov    rdi,QWORD PTR [r15+0x28]
  42c46a:	lea    rax,[rdi+r14*1]
  42c46e:	cmp    rax,rbx
  42c471:	jbe    42c4cd <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42c473:	cmp    rdi,rbx
  42c476:	jb     42c489 <flatcc_json_printer_uint16_vector_field@@Base+0xd9>
  42c478:	mov    rdi,r15
  42c47b:	xor    esi,esi
  42c47d:	call   QWORD PTR [r15+0x48]
  42c481:	mov    rbx,QWORD PTR [r15+0x20]
  42c485:	mov    rdi,QWORD PTR [r15+0x28]
  42c489:	sub    rbx,rdi
  42c48c:	cmp    rbx,r14
  42c48f:	jae    42c4cd <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42c491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c49b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c4a0:	mov    esi,0x20
  42c4a5:	mov    rdx,rbx
  42c4a8:	call   406080 <memset@plt>
  42c4ad:	add    QWORD PTR [r15+0x28],rbx
  42c4b1:	sub    r14,rbx
  42c4b4:	mov    rdi,r15
  42c4b7:	xor    esi,esi
  42c4b9:	call   QWORD PTR [r15+0x48]
  42c4bd:	mov    rbx,QWORD PTR [r15+0x20]
  42c4c1:	mov    rdi,QWORD PTR [r15+0x28]
  42c4c5:	sub    rbx,rdi
  42c4c8:	cmp    r14,rbx
  42c4cb:	ja     42c4a0 <flatcc_json_printer_uint16_vector_field@@Base+0xf0>
  42c4cd:	mov    esi,0x20
  42c4d2:	mov    rdx,r14
  42c4d5:	call   406080 <memset@plt>
  42c4da:	add    r14,QWORD PTR [r15+0x28]
  42c4de:	mov    QWORD PTR [r15+0x28],r14
  42c4e2:	jmp    42c4f7 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42c4e4:	cmp    r14,QWORD PTR [r15+0x20]
  42c4e8:	jb     42c4f7 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42c4ea:	mov    rdi,r15
  42c4ed:	xor    esi,esi
  42c4ef:	call   QWORD PTR [r15+0x48]
  42c4f3:	mov    r14,QWORD PTR [r15+0x28]
  42c4f7:	movzx  eax,WORD PTR [r12+0x4]
  42c4fd:	cmp    eax,0x3e8
  42c502:	jb     42c517 <flatcc_json_printer_uint16_vector_field@@Base+0x167>
  42c504:	movzx  edx,ax
  42c507:	xor    ecx,ecx
  42c509:	cmp    edx,0x270f
  42c50f:	seta   cl
  42c512:	or     ecx,0x4
  42c515:	jmp    42c53e <flatcc_json_printer_uint16_vector_field@@Base+0x18e>
  42c517:	cmp    ax,0x64
  42c51b:	jb     42c533 <flatcc_json_printer_uint16_vector_field@@Base+0x183>
  42c51d:	mov    BYTE PTR [r14+0x3],0x0
  42c522:	add    r14,0x3
  42c526:	mov    ecx,0x3
  42c52b:	mov    rdx,r14
  42c52e:	jmp    42c5f2 <flatcc_json_printer_uint16_vector_field@@Base+0x242>
  42c533:	xor    ecx,ecx
  42c535:	cmp    ax,0x9
  42c539:	seta   cl
  42c53c:	inc    ecx
  42c53e:	mov    esi,ecx
  42c540:	lea    rdx,[r14+rsi*1]
  42c544:	mov    BYTE PTR [r14+rsi*1],0x0
  42c549:	test   cl,0x1
  42c54c:	jne    42c5b2 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  42c54e:	cmp    ecx,0x2
  42c551:	je     42c588 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
  42c553:	cmp    ecx,0x4
  42c556:	jne    42c623 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42c55c:	movzx  esi,ax
  42c55f:	mov    eax,esi
  42c561:	shr    eax,0x2
  42c564:	imul   eax,eax,0x147b
  42c56a:	shr    eax,0x11
  42c56d:	imul   edi,eax,0x64
  42c570:	sub    esi,edi
  42c572:	movzx  esi,si
  42c575:	lea    rdi,[rip+0xf7a4]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c57c:	movzx  esi,WORD PTR [rdi+rsi*2]
  42c580:	mov    WORD PTR [rdx-0x2],si
  42c584:	add    rdx,0xfffffffffffffffe
  42c588:	movzx  eax,ax
  42c58b:	mov    esi,eax
  42c58d:	shr    esi,0x2
  42c590:	imul   esi,esi,0x147b
  42c596:	shr    esi,0x11
  42c599:	imul   esi,esi,0x64
  42c59c:	sub    eax,esi
  42c59e:	movzx  eax,ax
  42c5a1:	lea    rsi,[rip+0xf778]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c5a8:	movzx  eax,WORD PTR [rsi+rax*2]
  42c5ac:	mov    WORD PTR [rdx-0x2],ax
  42c5b0:	jmp    42c623 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42c5b2:	cmp    ecx,0x1
  42c5b5:	je     42c61e <flatcc_json_printer_uint16_vector_field@@Base+0x26e>
  42c5b7:	cmp    ecx,0x3
  42c5ba:	je     42c5f2 <flatcc_json_printer_uint16_vector_field@@Base+0x242>
  42c5bc:	cmp    ecx,0x5
  42c5bf:	jne    42c623 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42c5c1:	movzx  ecx,ax
  42c5c4:	mov    eax,ecx
  42c5c6:	shr    eax,0x2
  42c5c9:	imul   eax,eax,0x147b
  42c5cf:	shr    eax,0x11
  42c5d2:	imul   esi,eax,0x64
  42c5d5:	sub    ecx,esi
  42c5d7:	movzx  ecx,cx
  42c5da:	lea    rsi,[rip+0xf73f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c5e1:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42c5e5:	mov    WORD PTR [rdx-0x2],cx
  42c5e9:	add    rdx,0xfffffffffffffffe
  42c5ed:	mov    ecx,0x5
  42c5f2:	movzx  esi,ax
  42c5f5:	mov    eax,esi
  42c5f7:	shr    eax,0x2
  42c5fa:	imul   eax,eax,0x147b
  42c600:	shr    eax,0x11
  42c603:	imul   edi,eax,0x64
  42c606:	sub    esi,edi
  42c608:	movzx  esi,si
  42c60b:	lea    rdi,[rip+0xf70e]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c612:	movzx  esi,WORD PTR [rdi+rsi*2]
  42c616:	mov    WORD PTR [rdx-0x2],si
  42c61a:	add    rdx,0xfffffffffffffffe
  42c61e:	add    al,0x30
  42c620:	mov    BYTE PTR [rdx-0x1],al
  42c623:	mov    eax,ecx
  42c625:	add    QWORD PTR [r15+0x28],rax
  42c629:	dec    ebp
  42c62b:	je     42c880 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42c631:	add    r12,0x6
  42c635:	mov    rax,QWORD PTR [r15+0x28]
  42c639:	lea    r13,[rip+0xf6e0]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42c640:	jmp    42c689 <flatcc_json_printer_uint16_vector_field@@Base+0x2d9>
  42c642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c64c:	nop    DWORD PTR [rax+0x0]
  42c650:	movzx  eax,ax
  42c653:	mov    esi,eax
  42c655:	shr    esi,0x2
  42c658:	imul   esi,esi,0x147b
  42c65e:	shr    esi,0x11
  42c661:	imul   esi,esi,0x64
  42c664:	sub    eax,esi
  42c666:	movzx  eax,ax
  42c669:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42c66f:	mov    WORD PTR [rdx-0x2],ax
  42c673:	mov    eax,ecx
  42c675:	add    rax,QWORD PTR [r15+0x28]
  42c679:	mov    QWORD PTR [r15+0x28],rax
  42c67d:	add    r12,0x2
  42c681:	test   ebp,ebp
  42c683:	je     42c880 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42c689:	lea    rcx,[rax+0x1]
  42c68d:	mov    QWORD PTR [r15+0x28],rcx
  42c691:	mov    BYTE PTR [rax],0x2c
  42c694:	cmp    BYTE PTR [r15+0x31],0x0
  42c699:	mov    r14,QWORD PTR [r15+0x28]
  42c69d:	je     42c740 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
  42c6a3:	lea    rax,[r14+0x1]
  42c6a7:	mov    QWORD PTR [r15+0x28],rax
  42c6ab:	mov    BYTE PTR [r14],0xa
  42c6af:	movsxd rax,DWORD PTR [r15+0x38]
  42c6b3:	movzx  r14d,BYTE PTR [r15+0x31]
  42c6b8:	imul   r14,rax
  42c6bc:	mov    rbx,QWORD PTR [r15+0x20]
  42c6c0:	mov    rdi,QWORD PTR [r15+0x28]
  42c6c4:	lea    rax,[rdi+r14*1]
  42c6c8:	cmp    rax,rbx
  42c6cb:	jbe    42c71d <flatcc_json_printer_uint16_vector_field@@Base+0x36d>
  42c6cd:	cmp    rdi,rbx
  42c6d0:	jb     42c6e3 <flatcc_json_printer_uint16_vector_field@@Base+0x333>
  42c6d2:	mov    rdi,r15
  42c6d5:	xor    esi,esi
  42c6d7:	call   QWORD PTR [r15+0x48]
  42c6db:	mov    rbx,QWORD PTR [r15+0x20]
  42c6df:	mov    rdi,QWORD PTR [r15+0x28]
  42c6e3:	sub    rbx,rdi
  42c6e6:	cmp    rbx,r14
  42c6e9:	jae    42c71d <flatcc_json_printer_uint16_vector_field@@Base+0x36d>
  42c6eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6f0:	mov    esi,0x20
  42c6f5:	mov    rdx,rbx
  42c6f8:	call   406080 <memset@plt>
  42c6fd:	add    QWORD PTR [r15+0x28],rbx
  42c701:	sub    r14,rbx
  42c704:	mov    rdi,r15
  42c707:	xor    esi,esi
  42c709:	call   QWORD PTR [r15+0x48]
  42c70d:	mov    rbx,QWORD PTR [r15+0x20]
  42c711:	mov    rdi,QWORD PTR [r15+0x28]
  42c715:	sub    rbx,rdi
  42c718:	cmp    r14,rbx
  42c71b:	ja     42c6f0 <flatcc_json_printer_uint16_vector_field@@Base+0x340>
  42c71d:	mov    esi,0x20
  42c722:	mov    rdx,r14
  42c725:	call   406080 <memset@plt>
  42c72a:	add    r14,QWORD PTR [r15+0x28]
  42c72e:	mov    QWORD PTR [r15+0x28],r14
  42c732:	jmp    42c760 <flatcc_json_printer_uint16_vector_field@@Base+0x3b0>
  42c734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c73e:	xchg   ax,ax
  42c740:	cmp    r14,QWORD PTR [r15+0x20]
  42c744:	jb     42c760 <flatcc_json_printer_uint16_vector_field@@Base+0x3b0>
  42c746:	mov    rdi,r15
  42c749:	xor    esi,esi
  42c74b:	call   QWORD PTR [r15+0x48]
  42c74f:	mov    r14,QWORD PTR [r15+0x28]
  42c753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c75d:	nop    DWORD PTR [rax]
  42c760:	dec    ebp
  42c762:	movzx  eax,WORD PTR [r12]
  42c767:	cmp    eax,0x3e8
  42c76c:	jb     42c790 <flatcc_json_printer_uint16_vector_field@@Base+0x3e0>
  42c76e:	movzx  edx,ax
  42c771:	xor    ecx,ecx
  42c773:	cmp    edx,0x270f
  42c779:	seta   cl
  42c77c:	or     ecx,0x4
  42c77f:	jmp    42c7bb <flatcc_json_printer_uint16_vector_field@@Base+0x40b>
  42c781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c78b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c790:	cmp    ax,0x64
  42c794:	jb     42c7b0 <flatcc_json_printer_uint16_vector_field@@Base+0x400>
  42c796:	mov    BYTE PTR [r14+0x3],0x0
  42c79b:	add    r14,0x3
  42c79f:	mov    ecx,0x3
  42c7a4:	mov    rdx,r14
  42c7a7:	jmp    42c84f <flatcc_json_printer_uint16_vector_field@@Base+0x49f>
  42c7ac:	nop    DWORD PTR [rax+0x0]
  42c7b0:	xor    ecx,ecx
  42c7b2:	cmp    ax,0x9
  42c7b6:	seta   cl
  42c7b9:	inc    ecx
  42c7bb:	mov    esi,ecx
  42c7bd:	lea    rdx,[r14+rsi*1]
  42c7c1:	mov    BYTE PTR [r14+rsi*1],0x0
  42c7c6:	test   cl,0x1
  42c7c9:	jne    42c810 <flatcc_json_printer_uint16_vector_field@@Base+0x460>
  42c7cb:	cmp    ecx,0x2
  42c7ce:	je     42c650 <flatcc_json_printer_uint16_vector_field@@Base+0x2a0>
  42c7d4:	cmp    ecx,0x4
  42c7d7:	jne    42c673 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42c7dd:	movzx  esi,ax
  42c7e0:	mov    eax,esi
  42c7e2:	shr    eax,0x2
  42c7e5:	imul   eax,eax,0x147b
  42c7eb:	shr    eax,0x11
  42c7ee:	imul   edi,eax,0x64
  42c7f1:	sub    esi,edi
  42c7f3:	movzx  esi,si
  42c7f6:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42c7fc:	mov    WORD PTR [rdx-0x2],si
  42c800:	add    rdx,0xfffffffffffffffe
  42c804:	jmp    42c650 <flatcc_json_printer_uint16_vector_field@@Base+0x2a0>
  42c809:	nop    DWORD PTR [rax+0x0]
  42c810:	cmp    ecx,0x1
  42c813:	je     42c876 <flatcc_json_printer_uint16_vector_field@@Base+0x4c6>
  42c815:	cmp    ecx,0x3
  42c818:	je     42c84f <flatcc_json_printer_uint16_vector_field@@Base+0x49f>
  42c81a:	cmp    ecx,0x5
  42c81d:	jne    42c673 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42c823:	movzx  ecx,ax
  42c826:	mov    eax,ecx
  42c828:	shr    eax,0x2
  42c82b:	imul   eax,eax,0x147b
  42c831:	shr    eax,0x11
  42c834:	imul   esi,eax,0x64
  42c837:	sub    ecx,esi
  42c839:	movzx  ecx,cx
  42c83c:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42c842:	mov    WORD PTR [rdx-0x2],cx
  42c846:	add    rdx,0xfffffffffffffffe
  42c84a:	mov    ecx,0x5
  42c84f:	movzx  esi,ax
  42c852:	mov    eax,esi
  42c854:	shr    eax,0x2
  42c857:	imul   eax,eax,0x147b
  42c85d:	shr    eax,0x11
  42c860:	imul   edi,eax,0x64
  42c863:	sub    esi,edi
  42c865:	movzx  esi,si
  42c868:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42c86e:	mov    WORD PTR [rdx-0x2],si
  42c872:	add    rdx,0xfffffffffffffffe
  42c876:	add    al,0x30
  42c878:	mov    BYTE PTR [rdx-0x1],al
  42c87b:	jmp    42c673 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42c880:	cmp    BYTE PTR [r15+0x31],0x0
  42c885:	mov    r14,QWORD PTR [r15+0x28]
  42c889:	je     42c922 <flatcc_json_printer_uint16_vector_field@@Base+0x572>
  42c88f:	lea    rax,[r14+0x1]
  42c893:	mov    QWORD PTR [r15+0x28],rax
  42c897:	mov    BYTE PTR [r14],0xa
  42c89b:	movsxd rax,DWORD PTR [r15+0x38]
  42c89f:	dec    rax
  42c8a2:	mov    DWORD PTR [r15+0x38],eax
  42c8a6:	movzx  r14d,BYTE PTR [r15+0x31]
  42c8ab:	imul   r14,rax
  42c8af:	mov    rbx,QWORD PTR [r15+0x20]
  42c8b3:	mov    rdi,QWORD PTR [r15+0x28]
  42c8b7:	lea    rax,[rdi+r14*1]
  42c8bb:	cmp    rax,rbx
  42c8be:	jbe    42c90d <flatcc_json_printer_uint16_vector_field@@Base+0x55d>
  42c8c0:	cmp    rdi,rbx
  42c8c3:	jb     42c8d6 <flatcc_json_printer_uint16_vector_field@@Base+0x526>
  42c8c5:	mov    rdi,r15
  42c8c8:	xor    esi,esi
  42c8ca:	call   QWORD PTR [r15+0x48]
  42c8ce:	mov    rbx,QWORD PTR [r15+0x20]
  42c8d2:	mov    rdi,QWORD PTR [r15+0x28]
  42c8d6:	sub    rbx,rdi
  42c8d9:	cmp    rbx,r14
  42c8dc:	jae    42c90d <flatcc_json_printer_uint16_vector_field@@Base+0x55d>
  42c8de:	xchg   ax,ax
  42c8e0:	mov    esi,0x20
  42c8e5:	mov    rdx,rbx
  42c8e8:	call   406080 <memset@plt>
  42c8ed:	add    QWORD PTR [r15+0x28],rbx
  42c8f1:	sub    r14,rbx
  42c8f4:	mov    rdi,r15
  42c8f7:	xor    esi,esi
  42c8f9:	call   QWORD PTR [r15+0x48]
  42c8fd:	mov    rbx,QWORD PTR [r15+0x20]
  42c901:	mov    rdi,QWORD PTR [r15+0x28]
  42c905:	sub    rbx,rdi
  42c908:	cmp    r14,rbx
  42c90b:	ja     42c8e0 <flatcc_json_printer_uint16_vector_field@@Base+0x530>
  42c90d:	mov    esi,0x20
  42c912:	mov    rdx,r14
  42c915:	call   406080 <memset@plt>
  42c91a:	add    r14,QWORD PTR [r15+0x28]
  42c91e:	mov    QWORD PTR [r15+0x28],r14
  42c922:	lea    rax,[r14+0x1]
  42c926:	mov    QWORD PTR [r15+0x28],rax
  42c92a:	mov    BYTE PTR [r14],0x5d
  42c92e:	add    rsp,0x8
  42c932:	pop    rbx
  42c933:	pop    r12
  42c935:	pop    r13
  42c937:	pop    r14
  42c939:	pop    r15
  42c93b:	pop    rbp
  42c93c:	ret    
  42c93d:	nop    DWORD PTR [rax]

000000000042c940 <flatcc_json_printer_uint32_vector_field@@Base>:
  42c940:	push   rbp
  42c941:	push   r15
  42c943:	push   r14
  42c945:	push   r12
  42c947:	push   rbx
  42c948:	lea    eax,[rdx+rdx*1]
  42c94b:	add    eax,0x4
  42c94e:	cmp    eax,DWORD PTR [rsi+0x10]
  42c951:	jge    42cc4e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42c957:	mov    rdx,QWORD PTR [rsi+0x8]
  42c95b:	mov    eax,eax
  42c95d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c962:	test   r12,r12
  42c965:	je     42cc4e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42c96b:	add    r12,QWORD PTR [rsi]
  42c96e:	je     42cc4e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42c974:	mov    r15,rdi
  42c977:	mov    eax,DWORD PTR [rsi+0x18]
  42c97a:	lea    edx,[rax+0x1]
  42c97d:	mov    DWORD PTR [rsi+0x18],edx
  42c980:	test   eax,eax
  42c982:	je     42c993 <flatcc_json_printer_uint32_vector_field@@Base+0x53>
  42c984:	mov    rax,QWORD PTR [r15+0x28]
  42c988:	lea    rdx,[rax+0x1]
  42c98c:	mov    QWORD PTR [r15+0x28],rdx
  42c990:	mov    BYTE PTR [rax],0x2c
  42c993:	mov    ebx,DWORD PTR [r12]
  42c997:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c99b:	movsxd rdx,r8d
  42c99e:	mov    rdi,r15
  42c9a1:	mov    rsi,rcx
  42c9a4:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42c9a9:	inc    DWORD PTR [r15+0x38]
  42c9ad:	mov    rax,QWORD PTR [r15+0x28]
  42c9b1:	lea    rcx,[rax+0x1]
  42c9b5:	mov    QWORD PTR [r15+0x28],rcx
  42c9b9:	mov    BYTE PTR [rax],0x5b
  42c9bc:	test   ebp,ebp
  42c9be:	je     42cb9c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42c9c4:	add    r12,rbx
  42c9c7:	cmp    BYTE PTR [r15+0x31],0x0
  42c9cc:	mov    r14,QWORD PTR [r15+0x28]
  42c9d0:	je     42ca64 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
  42c9d6:	lea    rax,[r14+0x1]
  42c9da:	mov    QWORD PTR [r15+0x28],rax
  42c9de:	mov    BYTE PTR [r14],0xa
  42c9e2:	movsxd rax,DWORD PTR [r15+0x38]
  42c9e6:	movzx  r14d,BYTE PTR [r15+0x31]
  42c9eb:	imul   r14,rax
  42c9ef:	mov    rbx,QWORD PTR [r15+0x20]
  42c9f3:	mov    rdi,QWORD PTR [r15+0x28]
  42c9f7:	lea    rax,[rdi+r14*1]
  42c9fb:	cmp    rax,rbx
  42c9fe:	jbe    42ca4d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42ca00:	cmp    rdi,rbx
  42ca03:	jb     42ca16 <flatcc_json_printer_uint32_vector_field@@Base+0xd6>
  42ca05:	mov    rdi,r15
  42ca08:	xor    esi,esi
  42ca0a:	call   QWORD PTR [r15+0x48]
  42ca0e:	mov    rbx,QWORD PTR [r15+0x20]
  42ca12:	mov    rdi,QWORD PTR [r15+0x28]
  42ca16:	sub    rbx,rdi
  42ca19:	cmp    rbx,r14
  42ca1c:	jae    42ca4d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42ca1e:	xchg   ax,ax
  42ca20:	mov    esi,0x20
  42ca25:	mov    rdx,rbx
  42ca28:	call   406080 <memset@plt>
  42ca2d:	add    QWORD PTR [r15+0x28],rbx
  42ca31:	sub    r14,rbx
  42ca34:	mov    rdi,r15
  42ca37:	xor    esi,esi
  42ca39:	call   QWORD PTR [r15+0x48]
  42ca3d:	mov    rbx,QWORD PTR [r15+0x20]
  42ca41:	mov    rdi,QWORD PTR [r15+0x28]
  42ca45:	sub    rbx,rdi
  42ca48:	cmp    r14,rbx
  42ca4b:	ja     42ca20 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
  42ca4d:	mov    esi,0x20
  42ca52:	mov    rdx,r14
  42ca55:	call   406080 <memset@plt>
  42ca5a:	add    r14,QWORD PTR [r15+0x28]
  42ca5e:	mov    QWORD PTR [r15+0x28],r14
  42ca62:	jmp    42ca77 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42ca64:	cmp    r14,QWORD PTR [r15+0x20]
  42ca68:	jb     42ca77 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42ca6a:	mov    rdi,r15
  42ca6d:	xor    esi,esi
  42ca6f:	call   QWORD PTR [r15+0x48]
  42ca73:	mov    r14,QWORD PTR [r15+0x28]
  42ca77:	mov    edi,DWORD PTR [r12+0x4]
  42ca7c:	mov    rsi,r14
  42ca7f:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42ca84:	cdqe   
  42ca86:	add    QWORD PTR [r15+0x28],rax
  42ca8a:	dec    ebp
  42ca8c:	je     42cb9c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42ca92:	add    r12,0x8
  42ca96:	mov    rax,QWORD PTR [r15+0x28]
  42ca9a:	jmp    42cad7 <flatcc_json_printer_uint32_vector_field@@Base+0x197>
  42ca9c:	nop    DWORD PTR [rax+0x0]
  42caa0:	mov    esi,0x20
  42caa5:	mov    rdx,r14
  42caa8:	call   406080 <memset@plt>
  42caad:	add    r14,QWORD PTR [r15+0x28]
  42cab1:	mov    QWORD PTR [r15+0x28],r14
  42cab5:	mov    edi,DWORD PTR [r12]
  42cab9:	mov    rsi,r14
  42cabc:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42cac1:	cdqe   
  42cac3:	add    rax,QWORD PTR [r15+0x28]
  42cac7:	mov    QWORD PTR [r15+0x28],rax
  42cacb:	add    r12,0x4
  42cacf:	test   ebp,ebp
  42cad1:	je     42cb9c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42cad7:	dec    ebp
  42cad9:	lea    rcx,[rax+0x1]
  42cadd:	mov    QWORD PTR [r15+0x28],rcx
  42cae1:	mov    BYTE PTR [rax],0x2c
  42cae4:	cmp    BYTE PTR [r15+0x31],0x0
  42cae9:	mov    r14,QWORD PTR [r15+0x28]
  42caed:	je     42cb80 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42caf3:	lea    rax,[r14+0x1]
  42caf7:	mov    QWORD PTR [r15+0x28],rax
  42cafb:	mov    BYTE PTR [r14],0xa
  42caff:	movsxd rax,DWORD PTR [r15+0x38]
  42cb03:	movzx  r14d,BYTE PTR [r15+0x31]
  42cb08:	imul   r14,rax
  42cb0c:	mov    rbx,QWORD PTR [r15+0x20]
  42cb10:	mov    rdi,QWORD PTR [r15+0x28]
  42cb14:	lea    rax,[rdi+r14*1]
  42cb18:	cmp    rax,rbx
  42cb1b:	jbe    42caa0 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42cb1d:	cmp    rdi,rbx
  42cb20:	jb     42cb33 <flatcc_json_printer_uint32_vector_field@@Base+0x1f3>
  42cb22:	mov    rdi,r15
  42cb25:	xor    esi,esi
  42cb27:	call   QWORD PTR [r15+0x48]
  42cb2b:	mov    rbx,QWORD PTR [r15+0x20]
  42cb2f:	mov    rdi,QWORD PTR [r15+0x28]
  42cb33:	sub    rbx,rdi
  42cb36:	cmp    rbx,r14
  42cb39:	jae    42caa0 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42cb3f:	nop
  42cb40:	mov    esi,0x20
  42cb45:	mov    rdx,rbx
  42cb48:	call   406080 <memset@plt>
  42cb4d:	add    QWORD PTR [r15+0x28],rbx
  42cb51:	sub    r14,rbx
  42cb54:	mov    rdi,r15
  42cb57:	xor    esi,esi
  42cb59:	call   QWORD PTR [r15+0x48]
  42cb5d:	mov    rbx,QWORD PTR [r15+0x20]
  42cb61:	mov    rdi,QWORD PTR [r15+0x28]
  42cb65:	sub    rbx,rdi
  42cb68:	cmp    r14,rbx
  42cb6b:	ja     42cb40 <flatcc_json_printer_uint32_vector_field@@Base+0x200>
  42cb6d:	jmp    42caa0 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42cb72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb7c:	nop    DWORD PTR [rax+0x0]
  42cb80:	cmp    r14,QWORD PTR [r15+0x20]
  42cb84:	jb     42cab5 <flatcc_json_printer_uint32_vector_field@@Base+0x175>
  42cb8a:	mov    rdi,r15
  42cb8d:	xor    esi,esi
  42cb8f:	call   QWORD PTR [r15+0x48]
  42cb93:	mov    r14,QWORD PTR [r15+0x28]
  42cb97:	jmp    42cab5 <flatcc_json_printer_uint32_vector_field@@Base+0x175>
  42cb9c:	cmp    BYTE PTR [r15+0x31],0x0
  42cba1:	mov    r14,QWORD PTR [r15+0x28]
  42cba5:	je     42cc42 <flatcc_json_printer_uint32_vector_field@@Base+0x302>
  42cbab:	lea    rax,[r14+0x1]
  42cbaf:	mov    QWORD PTR [r15+0x28],rax
  42cbb3:	mov    BYTE PTR [r14],0xa
  42cbb7:	movsxd rax,DWORD PTR [r15+0x38]
  42cbbb:	dec    rax
  42cbbe:	mov    DWORD PTR [r15+0x38],eax
  42cbc2:	movzx  r14d,BYTE PTR [r15+0x31]
  42cbc7:	imul   r14,rax
  42cbcb:	mov    rbx,QWORD PTR [r15+0x20]
  42cbcf:	mov    rdi,QWORD PTR [r15+0x28]
  42cbd3:	lea    rax,[rdi+r14*1]
  42cbd7:	cmp    rax,rbx
  42cbda:	jbe    42cc2d <flatcc_json_printer_uint32_vector_field@@Base+0x2ed>
  42cbdc:	cmp    rdi,rbx
  42cbdf:	jb     42cbf2 <flatcc_json_printer_uint32_vector_field@@Base+0x2b2>
  42cbe1:	mov    rdi,r15
  42cbe4:	xor    esi,esi
  42cbe6:	call   QWORD PTR [r15+0x48]
  42cbea:	mov    rbx,QWORD PTR [r15+0x20]
  42cbee:	mov    rdi,QWORD PTR [r15+0x28]
  42cbf2:	sub    rbx,rdi
  42cbf5:	cmp    rbx,r14
  42cbf8:	jae    42cc2d <flatcc_json_printer_uint32_vector_field@@Base+0x2ed>
  42cbfa:	nop    WORD PTR [rax+rax*1+0x0]
  42cc00:	mov    esi,0x20
  42cc05:	mov    rdx,rbx
  42cc08:	call   406080 <memset@plt>
  42cc0d:	add    QWORD PTR [r15+0x28],rbx
  42cc11:	sub    r14,rbx
  42cc14:	mov    rdi,r15
  42cc17:	xor    esi,esi
  42cc19:	call   QWORD PTR [r15+0x48]
  42cc1d:	mov    rbx,QWORD PTR [r15+0x20]
  42cc21:	mov    rdi,QWORD PTR [r15+0x28]
  42cc25:	sub    rbx,rdi
  42cc28:	cmp    r14,rbx
  42cc2b:	ja     42cc00 <flatcc_json_printer_uint32_vector_field@@Base+0x2c0>
  42cc2d:	mov    esi,0x20
  42cc32:	mov    rdx,r14
  42cc35:	call   406080 <memset@plt>
  42cc3a:	add    r14,QWORD PTR [r15+0x28]
  42cc3e:	mov    QWORD PTR [r15+0x28],r14
  42cc42:	lea    rax,[r14+0x1]
  42cc46:	mov    QWORD PTR [r15+0x28],rax
  42cc4a:	mov    BYTE PTR [r14],0x5d
  42cc4e:	pop    rbx
  42cc4f:	pop    r12
  42cc51:	pop    r14
  42cc53:	pop    r15
  42cc55:	pop    rbp
  42cc56:	ret    
  42cc57:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cc60 <flatcc_json_printer_uint64_vector_field@@Base>:
  42cc60:	push   rbp
  42cc61:	push   r15
  42cc63:	push   r14
  42cc65:	push   r12
  42cc67:	push   rbx
  42cc68:	lea    eax,[rdx+rdx*1]
  42cc6b:	add    eax,0x4
  42cc6e:	cmp    eax,DWORD PTR [rsi+0x10]
  42cc71:	jge    42cf6e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42cc77:	mov    rdx,QWORD PTR [rsi+0x8]
  42cc7b:	mov    eax,eax
  42cc7d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42cc82:	test   r12,r12
  42cc85:	je     42cf6e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42cc8b:	add    r12,QWORD PTR [rsi]
  42cc8e:	je     42cf6e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42cc94:	mov    r15,rdi
  42cc97:	mov    eax,DWORD PTR [rsi+0x18]
  42cc9a:	lea    edx,[rax+0x1]
  42cc9d:	mov    DWORD PTR [rsi+0x18],edx
  42cca0:	test   eax,eax
  42cca2:	je     42ccb3 <flatcc_json_printer_uint64_vector_field@@Base+0x53>
  42cca4:	mov    rax,QWORD PTR [r15+0x28]
  42cca8:	lea    rdx,[rax+0x1]
  42ccac:	mov    QWORD PTR [r15+0x28],rdx
  42ccb0:	mov    BYTE PTR [rax],0x2c
  42ccb3:	mov    ebx,DWORD PTR [r12]
  42ccb7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ccbb:	movsxd rdx,r8d
  42ccbe:	mov    rdi,r15
  42ccc1:	mov    rsi,rcx
  42ccc4:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ccc9:	inc    DWORD PTR [r15+0x38]
  42cccd:	mov    rax,QWORD PTR [r15+0x28]
  42ccd1:	lea    rcx,[rax+0x1]
  42ccd5:	mov    QWORD PTR [r15+0x28],rcx
  42ccd9:	mov    BYTE PTR [rax],0x5b
  42ccdc:	test   ebp,ebp
  42ccde:	je     42cebc <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42cce4:	add    r12,rbx
  42cce7:	cmp    BYTE PTR [r15+0x31],0x0
  42ccec:	mov    r14,QWORD PTR [r15+0x28]
  42ccf0:	je     42cd84 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
  42ccf6:	lea    rax,[r14+0x1]
  42ccfa:	mov    QWORD PTR [r15+0x28],rax
  42ccfe:	mov    BYTE PTR [r14],0xa
  42cd02:	movsxd rax,DWORD PTR [r15+0x38]
  42cd06:	movzx  r14d,BYTE PTR [r15+0x31]
  42cd0b:	imul   r14,rax
  42cd0f:	mov    rbx,QWORD PTR [r15+0x20]
  42cd13:	mov    rdi,QWORD PTR [r15+0x28]
  42cd17:	lea    rax,[rdi+r14*1]
  42cd1b:	cmp    rax,rbx
  42cd1e:	jbe    42cd6d <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42cd20:	cmp    rdi,rbx
  42cd23:	jb     42cd36 <flatcc_json_printer_uint64_vector_field@@Base+0xd6>
  42cd25:	mov    rdi,r15
  42cd28:	xor    esi,esi
  42cd2a:	call   QWORD PTR [r15+0x48]
  42cd2e:	mov    rbx,QWORD PTR [r15+0x20]
  42cd32:	mov    rdi,QWORD PTR [r15+0x28]
  42cd36:	sub    rbx,rdi
  42cd39:	cmp    rbx,r14
  42cd3c:	jae    42cd6d <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42cd3e:	xchg   ax,ax
  42cd40:	mov    esi,0x20
  42cd45:	mov    rdx,rbx
  42cd48:	call   406080 <memset@plt>
  42cd4d:	add    QWORD PTR [r15+0x28],rbx
  42cd51:	sub    r14,rbx
  42cd54:	mov    rdi,r15
  42cd57:	xor    esi,esi
  42cd59:	call   QWORD PTR [r15+0x48]
  42cd5d:	mov    rbx,QWORD PTR [r15+0x20]
  42cd61:	mov    rdi,QWORD PTR [r15+0x28]
  42cd65:	sub    rbx,rdi
  42cd68:	cmp    r14,rbx
  42cd6b:	ja     42cd40 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  42cd6d:	mov    esi,0x20
  42cd72:	mov    rdx,r14
  42cd75:	call   406080 <memset@plt>
  42cd7a:	add    r14,QWORD PTR [r15+0x28]
  42cd7e:	mov    QWORD PTR [r15+0x28],r14
  42cd82:	jmp    42cd97 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42cd84:	cmp    r14,QWORD PTR [r15+0x20]
  42cd88:	jb     42cd97 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42cd8a:	mov    rdi,r15
  42cd8d:	xor    esi,esi
  42cd8f:	call   QWORD PTR [r15+0x48]
  42cd93:	mov    r14,QWORD PTR [r15+0x28]
  42cd97:	mov    rdi,QWORD PTR [r12+0x4]
  42cd9c:	mov    rsi,r14
  42cd9f:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42cda4:	cdqe   
  42cda6:	add    QWORD PTR [r15+0x28],rax
  42cdaa:	dec    ebp
  42cdac:	je     42cebc <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42cdb2:	add    r12,0xc
  42cdb6:	mov    rax,QWORD PTR [r15+0x28]
  42cdba:	jmp    42cdf7 <flatcc_json_printer_uint64_vector_field@@Base+0x197>
  42cdbc:	nop    DWORD PTR [rax+0x0]
  42cdc0:	mov    esi,0x20
  42cdc5:	mov    rdx,r14
  42cdc8:	call   406080 <memset@plt>
  42cdcd:	add    r14,QWORD PTR [r15+0x28]
  42cdd1:	mov    QWORD PTR [r15+0x28],r14
  42cdd5:	mov    rdi,QWORD PTR [r12]
  42cdd9:	mov    rsi,r14
  42cddc:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42cde1:	cdqe   
  42cde3:	add    rax,QWORD PTR [r15+0x28]
  42cde7:	mov    QWORD PTR [r15+0x28],rax
  42cdeb:	add    r12,0x8
  42cdef:	test   ebp,ebp
  42cdf1:	je     42cebc <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42cdf7:	dec    ebp
  42cdf9:	lea    rcx,[rax+0x1]
  42cdfd:	mov    QWORD PTR [r15+0x28],rcx
  42ce01:	mov    BYTE PTR [rax],0x2c
  42ce04:	cmp    BYTE PTR [r15+0x31],0x0
  42ce09:	mov    r14,QWORD PTR [r15+0x28]
  42ce0d:	je     42cea0 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42ce13:	lea    rax,[r14+0x1]
  42ce17:	mov    QWORD PTR [r15+0x28],rax
  42ce1b:	mov    BYTE PTR [r14],0xa
  42ce1f:	movsxd rax,DWORD PTR [r15+0x38]
  42ce23:	movzx  r14d,BYTE PTR [r15+0x31]
  42ce28:	imul   r14,rax
  42ce2c:	mov    rbx,QWORD PTR [r15+0x20]
  42ce30:	mov    rdi,QWORD PTR [r15+0x28]
  42ce34:	lea    rax,[rdi+r14*1]
  42ce38:	cmp    rax,rbx
  42ce3b:	jbe    42cdc0 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42ce3d:	cmp    rdi,rbx
  42ce40:	jb     42ce53 <flatcc_json_printer_uint64_vector_field@@Base+0x1f3>
  42ce42:	mov    rdi,r15
  42ce45:	xor    esi,esi
  42ce47:	call   QWORD PTR [r15+0x48]
  42ce4b:	mov    rbx,QWORD PTR [r15+0x20]
  42ce4f:	mov    rdi,QWORD PTR [r15+0x28]
  42ce53:	sub    rbx,rdi
  42ce56:	cmp    rbx,r14
  42ce59:	jae    42cdc0 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42ce5f:	nop
  42ce60:	mov    esi,0x20
  42ce65:	mov    rdx,rbx
  42ce68:	call   406080 <memset@plt>
  42ce6d:	add    QWORD PTR [r15+0x28],rbx
  42ce71:	sub    r14,rbx
  42ce74:	mov    rdi,r15
  42ce77:	xor    esi,esi
  42ce79:	call   QWORD PTR [r15+0x48]
  42ce7d:	mov    rbx,QWORD PTR [r15+0x20]
  42ce81:	mov    rdi,QWORD PTR [r15+0x28]
  42ce85:	sub    rbx,rdi
  42ce88:	cmp    r14,rbx
  42ce8b:	ja     42ce60 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
  42ce8d:	jmp    42cdc0 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42ce92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce9c:	nop    DWORD PTR [rax+0x0]
  42cea0:	cmp    r14,QWORD PTR [r15+0x20]
  42cea4:	jb     42cdd5 <flatcc_json_printer_uint64_vector_field@@Base+0x175>
  42ceaa:	mov    rdi,r15
  42cead:	xor    esi,esi
  42ceaf:	call   QWORD PTR [r15+0x48]
  42ceb3:	mov    r14,QWORD PTR [r15+0x28]
  42ceb7:	jmp    42cdd5 <flatcc_json_printer_uint64_vector_field@@Base+0x175>
  42cebc:	cmp    BYTE PTR [r15+0x31],0x0
  42cec1:	mov    r14,QWORD PTR [r15+0x28]
  42cec5:	je     42cf62 <flatcc_json_printer_uint64_vector_field@@Base+0x302>
  42cecb:	lea    rax,[r14+0x1]
  42cecf:	mov    QWORD PTR [r15+0x28],rax
  42ced3:	mov    BYTE PTR [r14],0xa
  42ced7:	movsxd rax,DWORD PTR [r15+0x38]
  42cedb:	dec    rax
  42cede:	mov    DWORD PTR [r15+0x38],eax
  42cee2:	movzx  r14d,BYTE PTR [r15+0x31]
  42cee7:	imul   r14,rax
  42ceeb:	mov    rbx,QWORD PTR [r15+0x20]
  42ceef:	mov    rdi,QWORD PTR [r15+0x28]
  42cef3:	lea    rax,[rdi+r14*1]
  42cef7:	cmp    rax,rbx
  42cefa:	jbe    42cf4d <flatcc_json_printer_uint64_vector_field@@Base+0x2ed>
  42cefc:	cmp    rdi,rbx
  42ceff:	jb     42cf12 <flatcc_json_printer_uint64_vector_field@@Base+0x2b2>
  42cf01:	mov    rdi,r15
  42cf04:	xor    esi,esi
  42cf06:	call   QWORD PTR [r15+0x48]
  42cf0a:	mov    rbx,QWORD PTR [r15+0x20]
  42cf0e:	mov    rdi,QWORD PTR [r15+0x28]
  42cf12:	sub    rbx,rdi
  42cf15:	cmp    rbx,r14
  42cf18:	jae    42cf4d <flatcc_json_printer_uint64_vector_field@@Base+0x2ed>
  42cf1a:	nop    WORD PTR [rax+rax*1+0x0]
  42cf20:	mov    esi,0x20
  42cf25:	mov    rdx,rbx
  42cf28:	call   406080 <memset@plt>
  42cf2d:	add    QWORD PTR [r15+0x28],rbx
  42cf31:	sub    r14,rbx
  42cf34:	mov    rdi,r15
  42cf37:	xor    esi,esi
  42cf39:	call   QWORD PTR [r15+0x48]
  42cf3d:	mov    rbx,QWORD PTR [r15+0x20]
  42cf41:	mov    rdi,QWORD PTR [r15+0x28]
  42cf45:	sub    rbx,rdi
  42cf48:	cmp    r14,rbx
  42cf4b:	ja     42cf20 <flatcc_json_printer_uint64_vector_field@@Base+0x2c0>
  42cf4d:	mov    esi,0x20
  42cf52:	mov    rdx,r14
  42cf55:	call   406080 <memset@plt>
  42cf5a:	add    r14,QWORD PTR [r15+0x28]
  42cf5e:	mov    QWORD PTR [r15+0x28],r14
  42cf62:	lea    rax,[r14+0x1]
  42cf66:	mov    QWORD PTR [r15+0x28],rax
  42cf6a:	mov    BYTE PTR [r14],0x5d
  42cf6e:	pop    rbx
  42cf6f:	pop    r12
  42cf71:	pop    r14
  42cf73:	pop    r15
  42cf75:	pop    rbp
  42cf76:	ret    
  42cf77:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cf80 <flatcc_json_printer_int8_vector_field@@Base>:
  42cf80:	push   rbp
  42cf81:	push   r15
  42cf83:	push   r14
  42cf85:	push   r13
  42cf87:	push   r12
  42cf89:	push   rbx
  42cf8a:	push   rax
  42cf8b:	lea    eax,[rdx+rdx*1]
  42cf8e:	add    eax,0x4
  42cf91:	cmp    eax,DWORD PTR [rsi+0x10]
  42cf94:	jge    42d3de <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42cf9a:	mov    rdx,QWORD PTR [rsi+0x8]
  42cf9e:	mov    eax,eax
  42cfa0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42cfa5:	test   r12,r12
  42cfa8:	je     42d3de <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42cfae:	add    r12,QWORD PTR [rsi]
  42cfb1:	je     42d3de <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42cfb7:	mov    r15,rdi
  42cfba:	mov    eax,DWORD PTR [rsi+0x18]
  42cfbd:	lea    edx,[rax+0x1]
  42cfc0:	mov    DWORD PTR [rsi+0x18],edx
  42cfc3:	test   eax,eax
  42cfc5:	je     42cfd6 <flatcc_json_printer_int8_vector_field@@Base+0x56>
  42cfc7:	mov    rax,QWORD PTR [r15+0x28]
  42cfcb:	lea    rdx,[rax+0x1]
  42cfcf:	mov    QWORD PTR [r15+0x28],rdx
  42cfd3:	mov    BYTE PTR [rax],0x2c
  42cfd6:	mov    ebx,DWORD PTR [r12]
  42cfda:	mov    ebp,DWORD PTR [r12+rbx*1]
  42cfde:	movsxd rdx,r8d
  42cfe1:	mov    rdi,r15
  42cfe4:	mov    rsi,rcx
  42cfe7:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42cfec:	inc    DWORD PTR [r15+0x38]
  42cff0:	mov    rax,QWORD PTR [r15+0x28]
  42cff4:	lea    rcx,[rax+0x1]
  42cff8:	mov    QWORD PTR [r15+0x28],rcx
  42cffc:	mov    BYTE PTR [rax],0x5b
  42cfff:	test   ebp,ebp
  42d001:	je     42d325 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42d007:	add    r12,rbx
  42d00a:	cmp    BYTE PTR [r15+0x31],0x0
  42d00f:	mov    r14,QWORD PTR [r15+0x28]
  42d013:	je     42d0b4 <flatcc_json_printer_int8_vector_field@@Base+0x134>
  42d019:	lea    rax,[r14+0x1]
  42d01d:	mov    QWORD PTR [r15+0x28],rax
  42d021:	mov    BYTE PTR [r14],0xa
  42d025:	movsxd rax,DWORD PTR [r15+0x38]
  42d029:	movzx  r14d,BYTE PTR [r15+0x31]
  42d02e:	imul   r14,rax
  42d032:	mov    rbx,QWORD PTR [r15+0x20]
  42d036:	mov    rdi,QWORD PTR [r15+0x28]
  42d03a:	lea    rax,[rdi+r14*1]
  42d03e:	cmp    rax,rbx
  42d041:	jbe    42d09d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42d043:	cmp    rdi,rbx
  42d046:	jb     42d059 <flatcc_json_printer_int8_vector_field@@Base+0xd9>
  42d048:	mov    rdi,r15
  42d04b:	xor    esi,esi
  42d04d:	call   QWORD PTR [r15+0x48]
  42d051:	mov    rbx,QWORD PTR [r15+0x20]
  42d055:	mov    rdi,QWORD PTR [r15+0x28]
  42d059:	sub    rbx,rdi
  42d05c:	cmp    rbx,r14
  42d05f:	jae    42d09d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42d061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d06b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d070:	mov    esi,0x20
  42d075:	mov    rdx,rbx
  42d078:	call   406080 <memset@plt>
  42d07d:	add    QWORD PTR [r15+0x28],rbx
  42d081:	sub    r14,rbx
  42d084:	mov    rdi,r15
  42d087:	xor    esi,esi
  42d089:	call   QWORD PTR [r15+0x48]
  42d08d:	mov    rbx,QWORD PTR [r15+0x20]
  42d091:	mov    rdi,QWORD PTR [r15+0x28]
  42d095:	sub    rbx,rdi
  42d098:	cmp    r14,rbx
  42d09b:	ja     42d070 <flatcc_json_printer_int8_vector_field@@Base+0xf0>
  42d09d:	mov    esi,0x20
  42d0a2:	mov    rdx,r14
  42d0a5:	call   406080 <memset@plt>
  42d0aa:	add    r14,QWORD PTR [r15+0x28]
  42d0ae:	mov    QWORD PTR [r15+0x28],r14
  42d0b2:	jmp    42d0c7 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42d0b4:	cmp    r14,QWORD PTR [r15+0x20]
  42d0b8:	jb     42d0c7 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42d0ba:	mov    rdi,r15
  42d0bd:	xor    esi,esi
  42d0bf:	call   QWORD PTR [r15+0x48]
  42d0c3:	mov    r14,QWORD PTR [r15+0x28]
  42d0c7:	movzx  eax,BYTE PTR [r12+0x4]
  42d0cd:	test   al,al
  42d0cf:	js     42d0d5 <flatcc_json_printer_int8_vector_field@@Base+0x155>
  42d0d1:	mov    ecx,eax
  42d0d3:	jmp    42d0e0 <flatcc_json_printer_int8_vector_field@@Base+0x160>
  42d0d5:	mov    BYTE PTR [r14],0x2d
  42d0d9:	inc    r14
  42d0dc:	mov    ecx,eax
  42d0de:	neg    cl
  42d0e0:	shr    rax,0x7
  42d0e4:	cmp    cl,0x64
  42d0e7:	jb     42d120 <flatcc_json_printer_int8_vector_field@@Base+0x1a0>
  42d0e9:	mov    BYTE PTR [r14+0x3],0x0
  42d0ee:	movzx  edx,cl
  42d0f1:	lea    esi,[rdx+rdx*4]
  42d0f4:	lea    edx,[rdx+rsi*8]
  42d0f7:	shr    edx,0xc
  42d0fa:	imul   esi,edx,0x64
  42d0fd:	sub    cl,sil
  42d100:	movzx  ecx,cl
  42d103:	lea    rsi,[rip+0xec16]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d10a:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42d10e:	mov    WORD PTR [r14+0x1],cx
  42d113:	or     dl,0x30
  42d116:	mov    BYTE PTR [r14],dl
  42d119:	mov    ecx,0x3
  42d11e:	jmp    42d164 <flatcc_json_printer_int8_vector_field@@Base+0x1e4>
  42d120:	cmp    cl,0xa
  42d123:	jb     42d154 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
  42d125:	mov    BYTE PTR [r14+0x2],0x0
  42d12a:	movzx  edx,cl
  42d12d:	lea    esi,[rdx+rdx*4]
  42d130:	lea    edx,[rdx+rsi*8]
  42d133:	shr    edx,0xc
  42d136:	imul   edx,edx,0x64
  42d139:	sub    cl,dl
  42d13b:	movzx  ecx,cl
  42d13e:	lea    rdx,[rip+0xebdb]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d145:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42d149:	mov    WORD PTR [r14],cx
  42d14d:	mov    ecx,0x2
  42d152:	jmp    42d164 <flatcc_json_printer_int8_vector_field@@Base+0x1e4>
  42d154:	mov    BYTE PTR [r14+0x1],0x0
  42d159:	add    cl,0x30
  42d15c:	mov    BYTE PTR [r14],cl
  42d15f:	mov    ecx,0x1
  42d164:	add    rcx,rax
  42d167:	add    QWORD PTR [r15+0x28],rcx
  42d16b:	dec    ebp
  42d16d:	je     42d325 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42d173:	add    r12,0x5
  42d177:	mov    rcx,QWORD PTR [r15+0x28]
  42d17b:	lea    r13,[rip+0xeb9e]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d182:	jmp    42d1d6 <flatcc_json_printer_int8_vector_field@@Base+0x256>
  42d184:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d18e:	xchg   ax,ax
  42d190:	mov    BYTE PTR [r14+0x3],0x0
  42d195:	movzx  edx,cl
  42d198:	lea    esi,[rdx+rdx*4]
  42d19b:	lea    edx,[rdx+rsi*8]
  42d19e:	shr    edx,0xc
  42d1a1:	imul   esi,edx,0x64
  42d1a4:	sub    cl,sil
  42d1a7:	movzx  ecx,cl
  42d1aa:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42d1b0:	mov    WORD PTR [r14+0x1],cx
  42d1b5:	or     dl,0x30
  42d1b8:	mov    BYTE PTR [r14],dl
  42d1bb:	mov    ecx,0x3
  42d1c0:	add    rcx,rax
  42d1c3:	add    rcx,QWORD PTR [r15+0x28]
  42d1c7:	mov    QWORD PTR [r15+0x28],rcx
  42d1cb:	inc    r12
  42d1ce:	test   ebp,ebp
  42d1d0:	je     42d325 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42d1d6:	lea    rax,[rcx+0x1]
  42d1da:	mov    QWORD PTR [r15+0x28],rax
  42d1de:	mov    BYTE PTR [rcx],0x2c
  42d1e1:	cmp    BYTE PTR [r15+0x31],0x0
  42d1e6:	mov    r14,QWORD PTR [r15+0x28]
  42d1ea:	je     42d290 <flatcc_json_printer_int8_vector_field@@Base+0x310>
  42d1f0:	lea    rax,[r14+0x1]
  42d1f4:	mov    QWORD PTR [r15+0x28],rax
  42d1f8:	mov    BYTE PTR [r14],0xa
  42d1fc:	movsxd rax,DWORD PTR [r15+0x38]
  42d200:	movzx  r14d,BYTE PTR [r15+0x31]
  42d205:	imul   r14,rax
  42d209:	mov    rbx,QWORD PTR [r15+0x20]
  42d20d:	mov    rdi,QWORD PTR [r15+0x28]
  42d211:	lea    rax,[rdi+r14*1]
  42d215:	cmp    rax,rbx
  42d218:	jbe    42d26d <flatcc_json_printer_int8_vector_field@@Base+0x2ed>
  42d21a:	cmp    rdi,rbx
  42d21d:	jb     42d230 <flatcc_json_printer_int8_vector_field@@Base+0x2b0>
  42d21f:	mov    rdi,r15
  42d222:	xor    esi,esi
  42d224:	call   QWORD PTR [r15+0x48]
  42d228:	mov    rbx,QWORD PTR [r15+0x20]
  42d22c:	mov    rdi,QWORD PTR [r15+0x28]
  42d230:	sub    rbx,rdi
  42d233:	cmp    rbx,r14
  42d236:	jae    42d26d <flatcc_json_printer_int8_vector_field@@Base+0x2ed>
  42d238:	nop    DWORD PTR [rax+rax*1+0x0]
  42d240:	mov    esi,0x20
  42d245:	mov    rdx,rbx
  42d248:	call   406080 <memset@plt>
  42d24d:	add    QWORD PTR [r15+0x28],rbx
  42d251:	sub    r14,rbx
  42d254:	mov    rdi,r15
  42d257:	xor    esi,esi
  42d259:	call   QWORD PTR [r15+0x48]
  42d25d:	mov    rbx,QWORD PTR [r15+0x20]
  42d261:	mov    rdi,QWORD PTR [r15+0x28]
  42d265:	sub    rbx,rdi
  42d268:	cmp    r14,rbx
  42d26b:	ja     42d240 <flatcc_json_printer_int8_vector_field@@Base+0x2c0>
  42d26d:	mov    esi,0x20
  42d272:	mov    rdx,r14
  42d275:	call   406080 <memset@plt>
  42d27a:	add    r14,QWORD PTR [r15+0x28]
  42d27e:	mov    QWORD PTR [r15+0x28],r14
  42d282:	jmp    42d2b0 <flatcc_json_printer_int8_vector_field@@Base+0x330>
  42d284:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d28e:	xchg   ax,ax
  42d290:	cmp    r14,QWORD PTR [r15+0x20]
  42d294:	jb     42d2b0 <flatcc_json_printer_int8_vector_field@@Base+0x330>
  42d296:	mov    rdi,r15
  42d299:	xor    esi,esi
  42d29b:	call   QWORD PTR [r15+0x48]
  42d29f:	mov    r14,QWORD PTR [r15+0x28]
  42d2a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d2ad:	nop    DWORD PTR [rax]
  42d2b0:	movzx  eax,BYTE PTR [r12]
  42d2b5:	test   al,al
  42d2b7:	js     42d2c0 <flatcc_json_printer_int8_vector_field@@Base+0x340>
  42d2b9:	mov    ecx,eax
  42d2bb:	jmp    42d2cb <flatcc_json_printer_int8_vector_field@@Base+0x34b>
  42d2bd:	nop    DWORD PTR [rax]
  42d2c0:	mov    BYTE PTR [r14],0x2d
  42d2c4:	inc    r14
  42d2c7:	mov    ecx,eax
  42d2c9:	neg    cl
  42d2cb:	dec    ebp
  42d2cd:	shr    rax,0x7
  42d2d1:	cmp    cl,0x64
  42d2d4:	jae    42d190 <flatcc_json_printer_int8_vector_field@@Base+0x210>
  42d2da:	cmp    cl,0xa
  42d2dd:	jb     42d310 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42d2df:	mov    BYTE PTR [r14+0x2],0x0
  42d2e4:	movzx  edx,cl
  42d2e7:	lea    esi,[rdx+rdx*4]
  42d2ea:	lea    edx,[rdx+rsi*8]
  42d2ed:	shr    edx,0xc
  42d2f0:	imul   edx,edx,0x64
  42d2f3:	sub    cl,dl
  42d2f5:	movzx  ecx,cl
  42d2f8:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42d2fe:	mov    WORD PTR [r14],cx
  42d302:	mov    ecx,0x2
  42d307:	jmp    42d1c0 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  42d30c:	nop    DWORD PTR [rax+0x0]
  42d310:	mov    BYTE PTR [r14+0x1],0x0
  42d315:	add    cl,0x30
  42d318:	mov    BYTE PTR [r14],cl
  42d31b:	mov    ecx,0x1
  42d320:	jmp    42d1c0 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  42d325:	cmp    BYTE PTR [r15+0x31],0x0
  42d32a:	mov    r14,QWORD PTR [r15+0x28]
  42d32e:	je     42d3d2 <flatcc_json_printer_int8_vector_field@@Base+0x452>
  42d334:	lea    rax,[r14+0x1]
  42d338:	mov    QWORD PTR [r15+0x28],rax
  42d33c:	mov    BYTE PTR [r14],0xa
  42d340:	movsxd rax,DWORD PTR [r15+0x38]
  42d344:	dec    rax
  42d347:	mov    DWORD PTR [r15+0x38],eax
  42d34b:	movzx  r14d,BYTE PTR [r15+0x31]
  42d350:	imul   r14,rax
  42d354:	mov    rbx,QWORD PTR [r15+0x20]
  42d358:	mov    rdi,QWORD PTR [r15+0x28]
  42d35c:	lea    rax,[rdi+r14*1]
  42d360:	cmp    rax,rbx
  42d363:	jbe    42d3bd <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42d365:	cmp    rdi,rbx
  42d368:	jb     42d37b <flatcc_json_printer_int8_vector_field@@Base+0x3fb>
  42d36a:	mov    rdi,r15
  42d36d:	xor    esi,esi
  42d36f:	call   QWORD PTR [r15+0x48]
  42d373:	mov    rbx,QWORD PTR [r15+0x20]
  42d377:	mov    rdi,QWORD PTR [r15+0x28]
  42d37b:	sub    rbx,rdi
  42d37e:	cmp    rbx,r14
  42d381:	jae    42d3bd <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42d383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d38d:	nop    DWORD PTR [rax]
  42d390:	mov    esi,0x20
  42d395:	mov    rdx,rbx
  42d398:	call   406080 <memset@plt>
  42d39d:	add    QWORD PTR [r15+0x28],rbx
  42d3a1:	sub    r14,rbx
  42d3a4:	mov    rdi,r15
  42d3a7:	xor    esi,esi
  42d3a9:	call   QWORD PTR [r15+0x48]
  42d3ad:	mov    rbx,QWORD PTR [r15+0x20]
  42d3b1:	mov    rdi,QWORD PTR [r15+0x28]
  42d3b5:	sub    rbx,rdi
  42d3b8:	cmp    r14,rbx
  42d3bb:	ja     42d390 <flatcc_json_printer_int8_vector_field@@Base+0x410>
  42d3bd:	mov    esi,0x20
  42d3c2:	mov    rdx,r14
  42d3c5:	call   406080 <memset@plt>
  42d3ca:	add    r14,QWORD PTR [r15+0x28]
  42d3ce:	mov    QWORD PTR [r15+0x28],r14
  42d3d2:	lea    rax,[r14+0x1]
  42d3d6:	mov    QWORD PTR [r15+0x28],rax
  42d3da:	mov    BYTE PTR [r14],0x5d
  42d3de:	add    rsp,0x8
  42d3e2:	pop    rbx
  42d3e3:	pop    r12
  42d3e5:	pop    r13
  42d3e7:	pop    r14
  42d3e9:	pop    r15
  42d3eb:	pop    rbp
  42d3ec:	ret    
  42d3ed:	nop    DWORD PTR [rax]

000000000042d3f0 <flatcc_json_printer_int16_vector_field@@Base>:
  42d3f0:	push   rbp
  42d3f1:	push   r15
  42d3f3:	push   r14
  42d3f5:	push   r13
  42d3f7:	push   r12
  42d3f9:	push   rbx
  42d3fa:	push   rax
  42d3fb:	lea    eax,[rdx+rdx*1]
  42d3fe:	add    eax,0x4
  42d401:	cmp    eax,DWORD PTR [rsi+0x10]
  42d404:	jge    42d98e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42d40a:	mov    rdx,QWORD PTR [rsi+0x8]
  42d40e:	mov    eax,eax
  42d410:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d415:	test   r12,r12
  42d418:	je     42d98e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42d41e:	add    r12,QWORD PTR [rsi]
  42d421:	je     42d98e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42d427:	mov    r15,rdi
  42d42a:	mov    eax,DWORD PTR [rsi+0x18]
  42d42d:	lea    edx,[rax+0x1]
  42d430:	mov    DWORD PTR [rsi+0x18],edx
  42d433:	test   eax,eax
  42d435:	je     42d446 <flatcc_json_printer_int16_vector_field@@Base+0x56>
  42d437:	mov    rax,QWORD PTR [r15+0x28]
  42d43b:	lea    rdx,[rax+0x1]
  42d43f:	mov    QWORD PTR [r15+0x28],rdx
  42d443:	mov    BYTE PTR [rax],0x2c
  42d446:	mov    ebx,DWORD PTR [r12]
  42d44a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d44e:	movsxd rdx,r8d
  42d451:	mov    rdi,r15
  42d454:	mov    rsi,rcx
  42d457:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42d45c:	inc    DWORD PTR [r15+0x38]
  42d460:	mov    rax,QWORD PTR [r15+0x28]
  42d464:	lea    rcx,[rax+0x1]
  42d468:	mov    QWORD PTR [r15+0x28],rcx
  42d46c:	mov    BYTE PTR [rax],0x5b
  42d46f:	test   ebp,ebp
  42d471:	je     42d8de <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42d477:	add    r12,rbx
  42d47a:	cmp    BYTE PTR [r15+0x31],0x0
  42d47f:	mov    r14,QWORD PTR [r15+0x28]
  42d483:	je     42d524 <flatcc_json_printer_int16_vector_field@@Base+0x134>
  42d489:	lea    rax,[r14+0x1]
  42d48d:	mov    QWORD PTR [r15+0x28],rax
  42d491:	mov    BYTE PTR [r14],0xa
  42d495:	movsxd rax,DWORD PTR [r15+0x38]
  42d499:	movzx  r14d,BYTE PTR [r15+0x31]
  42d49e:	imul   r14,rax
  42d4a2:	mov    rbx,QWORD PTR [r15+0x20]
  42d4a6:	mov    rdi,QWORD PTR [r15+0x28]
  42d4aa:	lea    rax,[rdi+r14*1]
  42d4ae:	cmp    rax,rbx
  42d4b1:	jbe    42d50d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42d4b3:	cmp    rdi,rbx
  42d4b6:	jb     42d4c9 <flatcc_json_printer_int16_vector_field@@Base+0xd9>
  42d4b8:	mov    rdi,r15
  42d4bb:	xor    esi,esi
  42d4bd:	call   QWORD PTR [r15+0x48]
  42d4c1:	mov    rbx,QWORD PTR [r15+0x20]
  42d4c5:	mov    rdi,QWORD PTR [r15+0x28]
  42d4c9:	sub    rbx,rdi
  42d4cc:	cmp    rbx,r14
  42d4cf:	jae    42d50d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42d4d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4db:	nop    DWORD PTR [rax+rax*1+0x0]
  42d4e0:	mov    esi,0x20
  42d4e5:	mov    rdx,rbx
  42d4e8:	call   406080 <memset@plt>
  42d4ed:	add    QWORD PTR [r15+0x28],rbx
  42d4f1:	sub    r14,rbx
  42d4f4:	mov    rdi,r15
  42d4f7:	xor    esi,esi
  42d4f9:	call   QWORD PTR [r15+0x48]
  42d4fd:	mov    rbx,QWORD PTR [r15+0x20]
  42d501:	mov    rdi,QWORD PTR [r15+0x28]
  42d505:	sub    rbx,rdi
  42d508:	cmp    r14,rbx
  42d50b:	ja     42d4e0 <flatcc_json_printer_int16_vector_field@@Base+0xf0>
  42d50d:	mov    esi,0x20
  42d512:	mov    rdx,r14
  42d515:	call   406080 <memset@plt>
  42d51a:	add    r14,QWORD PTR [r15+0x28]
  42d51e:	mov    QWORD PTR [r15+0x28],r14
  42d522:	jmp    42d537 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42d524:	cmp    r14,QWORD PTR [r15+0x20]
  42d528:	jb     42d537 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42d52a:	mov    rdi,r15
  42d52d:	xor    esi,esi
  42d52f:	call   QWORD PTR [r15+0x48]
  42d533:	mov    r14,QWORD PTR [r15+0x28]
  42d537:	movzx  eax,WORD PTR [r12+0x4]
  42d53d:	test   ax,ax
  42d540:	js     42d546 <flatcc_json_printer_int16_vector_field@@Base+0x156>
  42d542:	mov    edx,eax
  42d544:	jmp    42d551 <flatcc_json_printer_int16_vector_field@@Base+0x161>
  42d546:	mov    BYTE PTR [r14],0x2d
  42d54a:	inc    r14
  42d54d:	mov    edx,eax
  42d54f:	neg    edx
  42d551:	shr    eax,0xf
  42d554:	movzx  edi,dx
  42d557:	cmp    edi,0x3e8
  42d55d:	jb     42d56f <flatcc_json_printer_int16_vector_field@@Base+0x17f>
  42d55f:	xor    ecx,ecx
  42d561:	cmp    edi,0x270f
  42d567:	seta   cl
  42d56a:	or     ecx,0x4
  42d56d:	jmp    42d596 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  42d56f:	cmp    dx,0x64
  42d573:	jb     42d58b <flatcc_json_printer_int16_vector_field@@Base+0x19b>
  42d575:	mov    BYTE PTR [r14+0x3],0x0
  42d57a:	add    r14,0x3
  42d57e:	mov    ecx,0x3
  42d583:	mov    rsi,r14
  42d586:	jmp    42d644 <flatcc_json_printer_int16_vector_field@@Base+0x254>
  42d58b:	xor    ecx,ecx
  42d58d:	cmp    dx,0x9
  42d591:	seta   cl
  42d594:	inc    ecx
  42d596:	mov    ebx,ecx
  42d598:	lea    rsi,[r14+rbx*1]
  42d59c:	mov    BYTE PTR [r14+rbx*1],0x0
  42d5a1:	test   cl,0x1
  42d5a4:	jne    42d607 <flatcc_json_printer_int16_vector_field@@Base+0x217>
  42d5a6:	cmp    ecx,0x2
  42d5a9:	je     42d5dd <flatcc_json_printer_int16_vector_field@@Base+0x1ed>
  42d5ab:	cmp    ecx,0x4
  42d5ae:	jne    42d676 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42d5b4:	mov    edx,edi
  42d5b6:	shr    edx,0x2
  42d5b9:	imul   edx,edx,0x147b
  42d5bf:	shr    edx,0x11
  42d5c2:	imul   ebx,edx,0x64
  42d5c5:	sub    edi,ebx
  42d5c7:	movzx  edi,di
  42d5ca:	lea    rbx,[rip+0xe74f]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d5d1:	movzx  edi,WORD PTR [rbx+rdi*2]
  42d5d5:	mov    WORD PTR [rsi-0x2],di
  42d5d9:	add    rsi,0xfffffffffffffffe
  42d5dd:	movzx  edx,dx
  42d5e0:	mov    edi,edx
  42d5e2:	shr    edi,0x2
  42d5e5:	imul   edi,edi,0x147b
  42d5eb:	shr    edi,0x11
  42d5ee:	imul   edi,edi,0x64
  42d5f1:	sub    edx,edi
  42d5f3:	movzx  edx,dx
  42d5f6:	lea    rdi,[rip+0xe723]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d5fd:	movzx  edx,WORD PTR [rdi+rdx*2]
  42d601:	mov    WORD PTR [rsi-0x2],dx
  42d605:	jmp    42d676 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42d607:	cmp    ecx,0x1
  42d60a:	je     42d670 <flatcc_json_printer_int16_vector_field@@Base+0x280>
  42d60c:	cmp    ecx,0x3
  42d60f:	je     42d644 <flatcc_json_printer_int16_vector_field@@Base+0x254>
  42d611:	cmp    ecx,0x5
  42d614:	jne    42d676 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42d616:	mov    ecx,edi
  42d618:	shr    ecx,0x2
  42d61b:	imul   edx,ecx,0x147b
  42d621:	shr    edx,0x11
  42d624:	imul   ecx,edx,0x64
  42d627:	sub    edi,ecx
  42d629:	movzx  ecx,di
  42d62c:	lea    rdi,[rip+0xe6ed]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d633:	movzx  ecx,WORD PTR [rdi+rcx*2]
  42d637:	mov    WORD PTR [rsi-0x2],cx
  42d63b:	add    rsi,0xfffffffffffffffe
  42d63f:	mov    ecx,0x5
  42d644:	movzx  edi,dx
  42d647:	mov    edx,edi
  42d649:	shr    edx,0x2
  42d64c:	imul   edx,edx,0x147b
  42d652:	shr    edx,0x11
  42d655:	imul   ebx,edx,0x64
  42d658:	sub    edi,ebx
  42d65a:	movzx  edi,di
  42d65d:	lea    rbx,[rip+0xe6bc]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d664:	movzx  edi,WORD PTR [rbx+rdi*2]
  42d668:	mov    WORD PTR [rsi-0x2],di
  42d66c:	add    rsi,0xfffffffffffffffe
  42d670:	add    dl,0x30
  42d673:	mov    BYTE PTR [rsi-0x1],dl
  42d676:	add    ecx,eax
  42d678:	add    QWORD PTR [r15+0x28],rcx
  42d67c:	dec    ebp
  42d67e:	je     42d8de <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42d684:	add    r12,0x6
  42d688:	mov    rcx,QWORD PTR [r15+0x28]
  42d68c:	lea    r13,[rip+0xe68d]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  42d693:	jmp    42d6d9 <flatcc_json_printer_int16_vector_field@@Base+0x2e9>
  42d695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d69f:	nop
  42d6a0:	movzx  edx,dx
  42d6a3:	mov    edi,edx
  42d6a5:	shr    edi,0x2
  42d6a8:	imul   edi,edi,0x147b
  42d6ae:	shr    edi,0x11
  42d6b1:	imul   edi,edi,0x64
  42d6b4:	sub    edx,edi
  42d6b6:	movzx  edx,dx
  42d6b9:	movzx  edx,WORD PTR [r13+rdx*2+0x0]
  42d6bf:	mov    WORD PTR [rsi-0x2],dx
  42d6c3:	add    ecx,eax
  42d6c5:	add    rcx,QWORD PTR [r15+0x28]
  42d6c9:	mov    QWORD PTR [r15+0x28],rcx
  42d6cd:	add    r12,0x2
  42d6d1:	test   ebp,ebp
  42d6d3:	je     42d8de <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42d6d9:	lea    rax,[rcx+0x1]
  42d6dd:	mov    QWORD PTR [r15+0x28],rax
  42d6e1:	mov    BYTE PTR [rcx],0x2c
  42d6e4:	cmp    BYTE PTR [r15+0x31],0x0
  42d6e9:	mov    r14,QWORD PTR [r15+0x28]
  42d6ed:	je     42d790 <flatcc_json_printer_int16_vector_field@@Base+0x3a0>
  42d6f3:	lea    rax,[r14+0x1]
  42d6f7:	mov    QWORD PTR [r15+0x28],rax
  42d6fb:	mov    BYTE PTR [r14],0xa
  42d6ff:	movsxd rax,DWORD PTR [r15+0x38]
  42d703:	movzx  r14d,BYTE PTR [r15+0x31]
  42d708:	imul   r14,rax
  42d70c:	mov    rbx,QWORD PTR [r15+0x20]
  42d710:	mov    rdi,QWORD PTR [r15+0x28]
  42d714:	lea    rax,[rdi+r14*1]
  42d718:	cmp    rax,rbx
  42d71b:	jbe    42d76d <flatcc_json_printer_int16_vector_field@@Base+0x37d>
  42d71d:	cmp    rdi,rbx
  42d720:	jb     42d733 <flatcc_json_printer_int16_vector_field@@Base+0x343>
  42d722:	mov    rdi,r15
  42d725:	xor    esi,esi
  42d727:	call   QWORD PTR [r15+0x48]
  42d72b:	mov    rbx,QWORD PTR [r15+0x20]
  42d72f:	mov    rdi,QWORD PTR [r15+0x28]
  42d733:	sub    rbx,rdi
  42d736:	cmp    rbx,r14
  42d739:	jae    42d76d <flatcc_json_printer_int16_vector_field@@Base+0x37d>
  42d73b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d740:	mov    esi,0x20
  42d745:	mov    rdx,rbx
  42d748:	call   406080 <memset@plt>
  42d74d:	add    QWORD PTR [r15+0x28],rbx
  42d751:	sub    r14,rbx
  42d754:	mov    rdi,r15
  42d757:	xor    esi,esi
  42d759:	call   QWORD PTR [r15+0x48]
  42d75d:	mov    rbx,QWORD PTR [r15+0x20]
  42d761:	mov    rdi,QWORD PTR [r15+0x28]
  42d765:	sub    rbx,rdi
  42d768:	cmp    r14,rbx
  42d76b:	ja     42d740 <flatcc_json_printer_int16_vector_field@@Base+0x350>
  42d76d:	mov    esi,0x20
  42d772:	mov    rdx,r14
  42d775:	call   406080 <memset@plt>
  42d77a:	add    r14,QWORD PTR [r15+0x28]
  42d77e:	mov    QWORD PTR [r15+0x28],r14
  42d782:	jmp    42d7b0 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42d784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d78e:	xchg   ax,ax
  42d790:	cmp    r14,QWORD PTR [r15+0x20]
  42d794:	jb     42d7b0 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42d796:	mov    rdi,r15
  42d799:	xor    esi,esi
  42d79b:	call   QWORD PTR [r15+0x48]
  42d79f:	mov    r14,QWORD PTR [r15+0x28]
  42d7a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d7ad:	nop    DWORD PTR [rax]
  42d7b0:	movzx  eax,WORD PTR [r12]
  42d7b5:	test   ax,ax
  42d7b8:	js     42d7c0 <flatcc_json_printer_int16_vector_field@@Base+0x3d0>
  42d7ba:	mov    edx,eax
  42d7bc:	jmp    42d7cb <flatcc_json_printer_int16_vector_field@@Base+0x3db>
  42d7be:	xchg   ax,ax
  42d7c0:	mov    BYTE PTR [r14],0x2d
  42d7c4:	inc    r14
  42d7c7:	mov    edx,eax
  42d7c9:	neg    edx
  42d7cb:	dec    ebp
  42d7cd:	shr    eax,0xf
  42d7d0:	movzx  edi,dx
  42d7d3:	cmp    edi,0x3e8
  42d7d9:	jb     42d7f0 <flatcc_json_printer_int16_vector_field@@Base+0x400>
  42d7db:	xor    ecx,ecx
  42d7dd:	cmp    edi,0x270f
  42d7e3:	seta   cl
  42d7e6:	or     ecx,0x4
  42d7e9:	jmp    42d81b <flatcc_json_printer_int16_vector_field@@Base+0x42b>
  42d7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d7f0:	cmp    dx,0x64
  42d7f4:	jb     42d810 <flatcc_json_printer_int16_vector_field@@Base+0x420>
  42d7f6:	mov    BYTE PTR [r14+0x3],0x0
  42d7fb:	add    r14,0x3
  42d7ff:	mov    ecx,0x3
  42d804:	mov    rsi,r14
  42d807:	jmp    42d8ac <flatcc_json_printer_int16_vector_field@@Base+0x4bc>
  42d80c:	nop    DWORD PTR [rax+0x0]
  42d810:	xor    ecx,ecx
  42d812:	cmp    dx,0x9
  42d816:	seta   cl
  42d819:	inc    ecx
  42d81b:	mov    ebx,ecx
  42d81d:	lea    rsi,[r14+rbx*1]
  42d821:	mov    BYTE PTR [r14+rbx*1],0x0
  42d826:	test   cl,0x1
  42d829:	jne    42d870 <flatcc_json_printer_int16_vector_field@@Base+0x480>
  42d82b:	cmp    ecx,0x2
  42d82e:	je     42d6a0 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
  42d834:	cmp    ecx,0x4
  42d837:	jne    42d6c3 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42d83d:	mov    edx,edi
  42d83f:	shr    edx,0x2
  42d842:	imul   edx,edx,0x147b
  42d848:	shr    edx,0x11
  42d84b:	imul   ebx,edx,0x64
  42d84e:	sub    edi,ebx
  42d850:	movzx  edi,di
  42d853:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42d859:	mov    WORD PTR [rsi-0x2],di
  42d85d:	add    rsi,0xfffffffffffffffe
  42d861:	jmp    42d6a0 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
  42d866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d870:	cmp    ecx,0x1
  42d873:	je     42d8d3 <flatcc_json_printer_int16_vector_field@@Base+0x4e3>
  42d875:	cmp    ecx,0x3
  42d878:	je     42d8ac <flatcc_json_printer_int16_vector_field@@Base+0x4bc>
  42d87a:	cmp    ecx,0x5
  42d87d:	jne    42d6c3 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42d883:	mov    ecx,edi
  42d885:	shr    ecx,0x2
  42d888:	imul   edx,ecx,0x147b
  42d88e:	shr    edx,0x11
  42d891:	imul   ecx,edx,0x64
  42d894:	sub    edi,ecx
  42d896:	movzx  ecx,di
  42d899:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42d89f:	mov    WORD PTR [rsi-0x2],cx
  42d8a3:	add    rsi,0xfffffffffffffffe
  42d8a7:	mov    ecx,0x5
  42d8ac:	movzx  edi,dx
  42d8af:	mov    edx,edi
  42d8b1:	shr    edx,0x2
  42d8b4:	imul   edx,edx,0x147b
  42d8ba:	shr    edx,0x11
  42d8bd:	imul   ebx,edx,0x64
  42d8c0:	sub    edi,ebx
  42d8c2:	movzx  edi,di
  42d8c5:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42d8cb:	mov    WORD PTR [rsi-0x2],di
  42d8cf:	add    rsi,0xfffffffffffffffe
  42d8d3:	add    dl,0x30
  42d8d6:	mov    BYTE PTR [rsi-0x1],dl
  42d8d9:	jmp    42d6c3 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42d8de:	cmp    BYTE PTR [r15+0x31],0x0
  42d8e3:	mov    r14,QWORD PTR [r15+0x28]
  42d8e7:	je     42d982 <flatcc_json_printer_int16_vector_field@@Base+0x592>
  42d8ed:	lea    rax,[r14+0x1]
  42d8f1:	mov    QWORD PTR [r15+0x28],rax
  42d8f5:	mov    BYTE PTR [r14],0xa
  42d8f9:	movsxd rax,DWORD PTR [r15+0x38]
  42d8fd:	dec    rax
  42d900:	mov    DWORD PTR [r15+0x38],eax
  42d904:	movzx  r14d,BYTE PTR [r15+0x31]
  42d909:	imul   r14,rax
  42d90d:	mov    rbx,QWORD PTR [r15+0x20]
  42d911:	mov    rdi,QWORD PTR [r15+0x28]
  42d915:	lea    rax,[rdi+r14*1]
  42d919:	cmp    rax,rbx
  42d91c:	jbe    42d96d <flatcc_json_printer_int16_vector_field@@Base+0x57d>
  42d91e:	cmp    rdi,rbx
  42d921:	jb     42d934 <flatcc_json_printer_int16_vector_field@@Base+0x544>
  42d923:	mov    rdi,r15
  42d926:	xor    esi,esi
  42d928:	call   QWORD PTR [r15+0x48]
  42d92c:	mov    rbx,QWORD PTR [r15+0x20]
  42d930:	mov    rdi,QWORD PTR [r15+0x28]
  42d934:	sub    rbx,rdi
  42d937:	cmp    rbx,r14
  42d93a:	jae    42d96d <flatcc_json_printer_int16_vector_field@@Base+0x57d>
  42d93c:	nop    DWORD PTR [rax+0x0]
  42d940:	mov    esi,0x20
  42d945:	mov    rdx,rbx
  42d948:	call   406080 <memset@plt>
  42d94d:	add    QWORD PTR [r15+0x28],rbx
  42d951:	sub    r14,rbx
  42d954:	mov    rdi,r15
  42d957:	xor    esi,esi
  42d959:	call   QWORD PTR [r15+0x48]
  42d95d:	mov    rbx,QWORD PTR [r15+0x20]
  42d961:	mov    rdi,QWORD PTR [r15+0x28]
  42d965:	sub    rbx,rdi
  42d968:	cmp    r14,rbx
  42d96b:	ja     42d940 <flatcc_json_printer_int16_vector_field@@Base+0x550>
  42d96d:	mov    esi,0x20
  42d972:	mov    rdx,r14
  42d975:	call   406080 <memset@plt>
  42d97a:	add    r14,QWORD PTR [r15+0x28]
  42d97e:	mov    QWORD PTR [r15+0x28],r14
  42d982:	lea    rax,[r14+0x1]
  42d986:	mov    QWORD PTR [r15+0x28],rax
  42d98a:	mov    BYTE PTR [r14],0x5d
  42d98e:	add    rsp,0x8
  42d992:	pop    rbx
  42d993:	pop    r12
  42d995:	pop    r13
  42d997:	pop    r14
  42d999:	pop    r15
  42d99b:	pop    rbp
  42d99c:	ret    
  42d99d:	nop    DWORD PTR [rax]

000000000042d9a0 <flatcc_json_printer_int32_vector_field@@Base>:
  42d9a0:	push   rbp
  42d9a1:	push   r15
  42d9a3:	push   r14
  42d9a5:	push   r12
  42d9a7:	push   rbx
  42d9a8:	lea    eax,[rdx+rdx*1]
  42d9ab:	add    eax,0x4
  42d9ae:	cmp    eax,DWORD PTR [rsi+0x10]
  42d9b1:	jge    42dcde <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d9b7:	mov    rdx,QWORD PTR [rsi+0x8]
  42d9bb:	mov    eax,eax
  42d9bd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d9c2:	test   r12,r12
  42d9c5:	je     42dcde <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d9cb:	add    r12,QWORD PTR [rsi]
  42d9ce:	je     42dcde <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42d9d4:	mov    r15,rdi
  42d9d7:	mov    eax,DWORD PTR [rsi+0x18]
  42d9da:	lea    edx,[rax+0x1]
  42d9dd:	mov    DWORD PTR [rsi+0x18],edx
  42d9e0:	test   eax,eax
  42d9e2:	je     42d9f3 <flatcc_json_printer_int32_vector_field@@Base+0x53>
  42d9e4:	mov    rax,QWORD PTR [r15+0x28]
  42d9e8:	lea    rdx,[rax+0x1]
  42d9ec:	mov    QWORD PTR [r15+0x28],rdx
  42d9f0:	mov    BYTE PTR [rax],0x2c
  42d9f3:	mov    ebx,DWORD PTR [r12]
  42d9f7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d9fb:	movsxd rdx,r8d
  42d9fe:	mov    rdi,r15
  42da01:	mov    rsi,rcx
  42da04:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42da09:	inc    DWORD PTR [r15+0x38]
  42da0d:	mov    rax,QWORD PTR [r15+0x28]
  42da11:	lea    rcx,[rax+0x1]
  42da15:	mov    QWORD PTR [r15+0x28],rcx
  42da19:	mov    BYTE PTR [rax],0x5b
  42da1c:	test   ebp,ebp
  42da1e:	je     42dc31 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42da24:	add    r12,rbx
  42da27:	cmp    BYTE PTR [r15+0x31],0x0
  42da2c:	mov    r14,QWORD PTR [r15+0x28]
  42da30:	je     42dac4 <flatcc_json_printer_int32_vector_field@@Base+0x124>
  42da36:	lea    rax,[r14+0x1]
  42da3a:	mov    QWORD PTR [r15+0x28],rax
  42da3e:	mov    BYTE PTR [r14],0xa
  42da42:	movsxd rax,DWORD PTR [r15+0x38]
  42da46:	movzx  r14d,BYTE PTR [r15+0x31]
  42da4b:	imul   r14,rax
  42da4f:	mov    rbx,QWORD PTR [r15+0x20]
  42da53:	mov    rdi,QWORD PTR [r15+0x28]
  42da57:	lea    rax,[rdi+r14*1]
  42da5b:	cmp    rax,rbx
  42da5e:	jbe    42daad <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42da60:	cmp    rdi,rbx
  42da63:	jb     42da76 <flatcc_json_printer_int32_vector_field@@Base+0xd6>
  42da65:	mov    rdi,r15
  42da68:	xor    esi,esi
  42da6a:	call   QWORD PTR [r15+0x48]
  42da6e:	mov    rbx,QWORD PTR [r15+0x20]
  42da72:	mov    rdi,QWORD PTR [r15+0x28]
  42da76:	sub    rbx,rdi
  42da79:	cmp    rbx,r14
  42da7c:	jae    42daad <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42da7e:	xchg   ax,ax
  42da80:	mov    esi,0x20
  42da85:	mov    rdx,rbx
  42da88:	call   406080 <memset@plt>
  42da8d:	add    QWORD PTR [r15+0x28],rbx
  42da91:	sub    r14,rbx
  42da94:	mov    rdi,r15
  42da97:	xor    esi,esi
  42da99:	call   QWORD PTR [r15+0x48]
  42da9d:	mov    rbx,QWORD PTR [r15+0x20]
  42daa1:	mov    rdi,QWORD PTR [r15+0x28]
  42daa5:	sub    rbx,rdi
  42daa8:	cmp    r14,rbx
  42daab:	ja     42da80 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
  42daad:	mov    esi,0x20
  42dab2:	mov    rdx,r14
  42dab5:	call   406080 <memset@plt>
  42daba:	add    r14,QWORD PTR [r15+0x28]
  42dabe:	mov    QWORD PTR [r15+0x28],r14
  42dac2:	jmp    42dad7 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42dac4:	cmp    r14,QWORD PTR [r15+0x20]
  42dac8:	jb     42dad7 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42daca:	mov    rdi,r15
  42dacd:	xor    esi,esi
  42dacf:	call   QWORD PTR [r15+0x48]
  42dad3:	mov    r14,QWORD PTR [r15+0x28]
  42dad7:	mov    edi,DWORD PTR [r12+0x4]
  42dadc:	mov    ebx,edi
  42dade:	shr    ebx,0x1f
  42dae1:	test   edi,edi
  42dae3:	jns    42daee <flatcc_json_printer_int32_vector_field@@Base+0x14e>
  42dae5:	mov    BYTE PTR [r14],0x2d
  42dae9:	inc    r14
  42daec:	neg    edi
  42daee:	mov    rsi,r14
  42daf1:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42daf6:	add    eax,ebx
  42daf8:	cdqe   
  42dafa:	add    QWORD PTR [r15+0x28],rax
  42dafe:	dec    ebp
  42db00:	je     42dc31 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42db06:	add    r12,0x8
  42db0a:	mov    rax,QWORD PTR [r15+0x28]
  42db0e:	jmp    42db30 <flatcc_json_printer_int32_vector_field@@Base+0x190>
  42db10:	mov    rsi,r14
  42db13:	call   428af0 <flatcc_json_printer_uint32@@Base+0x20>
  42db18:	add    eax,ebx
  42db1a:	cdqe   
  42db1c:	add    rax,QWORD PTR [r15+0x28]
  42db20:	mov    QWORD PTR [r15+0x28],rax
  42db24:	add    r12,0x4
  42db28:	test   ebp,ebp
  42db2a:	je     42dc31 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42db30:	lea    rcx,[rax+0x1]
  42db34:	mov    QWORD PTR [r15+0x28],rcx
  42db38:	mov    BYTE PTR [rax],0x2c
  42db3b:	cmp    BYTE PTR [r15+0x31],0x0
  42db40:	mov    r14,QWORD PTR [r15+0x28]
  42db44:	je     42dbf0 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42db4a:	lea    rax,[r14+0x1]
  42db4e:	mov    QWORD PTR [r15+0x28],rax
  42db52:	mov    BYTE PTR [r14],0xa
  42db56:	movsxd rax,DWORD PTR [r15+0x38]
  42db5a:	movzx  r14d,BYTE PTR [r15+0x31]
  42db5f:	imul   r14,rax
  42db63:	mov    rbx,QWORD PTR [r15+0x20]
  42db67:	mov    rdi,QWORD PTR [r15+0x28]
  42db6b:	lea    rax,[rdi+r14*1]
  42db6f:	cmp    rax,rbx
  42db72:	jbe    42dbcd <flatcc_json_printer_int32_vector_field@@Base+0x22d>
  42db74:	cmp    rdi,rbx
  42db77:	jb     42db8a <flatcc_json_printer_int32_vector_field@@Base+0x1ea>
  42db79:	mov    rdi,r15
  42db7c:	xor    esi,esi
  42db7e:	call   QWORD PTR [r15+0x48]
  42db82:	mov    rbx,QWORD PTR [r15+0x20]
  42db86:	mov    rdi,QWORD PTR [r15+0x28]
  42db8a:	sub    rbx,rdi
  42db8d:	cmp    rbx,r14
  42db90:	jae    42dbcd <flatcc_json_printer_int32_vector_field@@Base+0x22d>
  42db92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db9c:	nop    DWORD PTR [rax+0x0]
  42dba0:	mov    esi,0x20
  42dba5:	mov    rdx,rbx
  42dba8:	call   406080 <memset@plt>
  42dbad:	add    QWORD PTR [r15+0x28],rbx
  42dbb1:	sub    r14,rbx
  42dbb4:	mov    rdi,r15
  42dbb7:	xor    esi,esi
  42dbb9:	call   QWORD PTR [r15+0x48]
  42dbbd:	mov    rbx,QWORD PTR [r15+0x20]
  42dbc1:	mov    rdi,QWORD PTR [r15+0x28]
  42dbc5:	sub    rbx,rdi
  42dbc8:	cmp    r14,rbx
  42dbcb:	ja     42dba0 <flatcc_json_printer_int32_vector_field@@Base+0x200>
  42dbcd:	mov    esi,0x20
  42dbd2:	mov    rdx,r14
  42dbd5:	call   406080 <memset@plt>
  42dbda:	add    r14,QWORD PTR [r15+0x28]
  42dbde:	mov    QWORD PTR [r15+0x28],r14
  42dbe2:	jmp    42dc10 <flatcc_json_printer_int32_vector_field@@Base+0x270>
  42dbe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dbee:	xchg   ax,ax
  42dbf0:	cmp    r14,QWORD PTR [r15+0x20]
  42dbf4:	jb     42dc10 <flatcc_json_printer_int32_vector_field@@Base+0x270>
  42dbf6:	mov    rdi,r15
  42dbf9:	xor    esi,esi
  42dbfb:	call   QWORD PTR [r15+0x48]
  42dbff:	mov    r14,QWORD PTR [r15+0x28]
  42dc03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc0d:	nop    DWORD PTR [rax]
  42dc10:	dec    ebp
  42dc12:	mov    edi,DWORD PTR [r12]
  42dc16:	mov    ebx,edi
  42dc18:	shr    ebx,0x1f
  42dc1b:	test   edi,edi
  42dc1d:	jns    42db10 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42dc23:	mov    BYTE PTR [r14],0x2d
  42dc27:	inc    r14
  42dc2a:	neg    edi
  42dc2c:	jmp    42db10 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42dc31:	cmp    BYTE PTR [r15+0x31],0x0
  42dc36:	mov    r14,QWORD PTR [r15+0x28]
  42dc3a:	je     42dcd2 <flatcc_json_printer_int32_vector_field@@Base+0x332>
  42dc40:	lea    rax,[r14+0x1]
  42dc44:	mov    QWORD PTR [r15+0x28],rax
  42dc48:	mov    BYTE PTR [r14],0xa
  42dc4c:	movsxd rax,DWORD PTR [r15+0x38]
  42dc50:	dec    rax
  42dc53:	mov    DWORD PTR [r15+0x38],eax
  42dc57:	movzx  r14d,BYTE PTR [r15+0x31]
  42dc5c:	imul   r14,rax
  42dc60:	mov    rbx,QWORD PTR [r15+0x20]
  42dc64:	mov    rdi,QWORD PTR [r15+0x28]
  42dc68:	lea    rax,[rdi+r14*1]
  42dc6c:	cmp    rax,rbx
  42dc6f:	jbe    42dcbd <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42dc71:	cmp    rdi,rbx
  42dc74:	jb     42dc87 <flatcc_json_printer_int32_vector_field@@Base+0x2e7>
  42dc76:	mov    rdi,r15
  42dc79:	xor    esi,esi
  42dc7b:	call   QWORD PTR [r15+0x48]
  42dc7f:	mov    rbx,QWORD PTR [r15+0x20]
  42dc83:	mov    rdi,QWORD PTR [r15+0x28]
  42dc87:	sub    rbx,rdi
  42dc8a:	cmp    rbx,r14
  42dc8d:	jae    42dcbd <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42dc8f:	nop
  42dc90:	mov    esi,0x20
  42dc95:	mov    rdx,rbx
  42dc98:	call   406080 <memset@plt>
  42dc9d:	add    QWORD PTR [r15+0x28],rbx
  42dca1:	sub    r14,rbx
  42dca4:	mov    rdi,r15
  42dca7:	xor    esi,esi
  42dca9:	call   QWORD PTR [r15+0x48]
  42dcad:	mov    rbx,QWORD PTR [r15+0x20]
  42dcb1:	mov    rdi,QWORD PTR [r15+0x28]
  42dcb5:	sub    rbx,rdi
  42dcb8:	cmp    r14,rbx
  42dcbb:	ja     42dc90 <flatcc_json_printer_int32_vector_field@@Base+0x2f0>
  42dcbd:	mov    esi,0x20
  42dcc2:	mov    rdx,r14
  42dcc5:	call   406080 <memset@plt>
  42dcca:	add    r14,QWORD PTR [r15+0x28]
  42dcce:	mov    QWORD PTR [r15+0x28],r14
  42dcd2:	lea    rax,[r14+0x1]
  42dcd6:	mov    QWORD PTR [r15+0x28],rax
  42dcda:	mov    BYTE PTR [r14],0x5d
  42dcde:	pop    rbx
  42dcdf:	pop    r12
  42dce1:	pop    r14
  42dce3:	pop    r15
  42dce5:	pop    rbp
  42dce6:	ret    
  42dce7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042dcf0 <flatcc_json_printer_int64_vector_field@@Base>:
  42dcf0:	push   rbp
  42dcf1:	push   r15
  42dcf3:	push   r14
  42dcf5:	push   r12
  42dcf7:	push   rbx
  42dcf8:	lea    eax,[rdx+rdx*1]
  42dcfb:	add    eax,0x4
  42dcfe:	cmp    eax,DWORD PTR [rsi+0x10]
  42dd01:	jge    42e04e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42dd07:	mov    rdx,QWORD PTR [rsi+0x8]
  42dd0b:	mov    eax,eax
  42dd0d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42dd12:	test   r12,r12
  42dd15:	je     42e04e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42dd1b:	add    r12,QWORD PTR [rsi]
  42dd1e:	je     42e04e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42dd24:	mov    r15,rdi
  42dd27:	mov    eax,DWORD PTR [rsi+0x18]
  42dd2a:	lea    edx,[rax+0x1]
  42dd2d:	mov    DWORD PTR [rsi+0x18],edx
  42dd30:	test   eax,eax
  42dd32:	je     42dd43 <flatcc_json_printer_int64_vector_field@@Base+0x53>
  42dd34:	mov    rax,QWORD PTR [r15+0x28]
  42dd38:	lea    rdx,[rax+0x1]
  42dd3c:	mov    QWORD PTR [r15+0x28],rdx
  42dd40:	mov    BYTE PTR [rax],0x2c
  42dd43:	mov    ebx,DWORD PTR [r12]
  42dd47:	mov    ebp,DWORD PTR [r12+rbx*1]
  42dd4b:	movsxd rdx,r8d
  42dd4e:	mov    rdi,r15
  42dd51:	mov    rsi,rcx
  42dd54:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42dd59:	inc    DWORD PTR [r15+0x38]
  42dd5d:	mov    rax,QWORD PTR [r15+0x28]
  42dd61:	lea    rcx,[rax+0x1]
  42dd65:	mov    QWORD PTR [r15+0x28],rcx
  42dd69:	mov    BYTE PTR [rax],0x5b
  42dd6c:	test   ebp,ebp
  42dd6e:	je     42df95 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42dd74:	add    r12,rbx
  42dd77:	cmp    BYTE PTR [r15+0x31],0x0
  42dd7c:	mov    r14,QWORD PTR [r15+0x28]
  42dd80:	je     42de14 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  42dd86:	lea    rax,[r14+0x1]
  42dd8a:	mov    QWORD PTR [r15+0x28],rax
  42dd8e:	mov    BYTE PTR [r14],0xa
  42dd92:	movsxd rax,DWORD PTR [r15+0x38]
  42dd96:	movzx  r14d,BYTE PTR [r15+0x31]
  42dd9b:	imul   r14,rax
  42dd9f:	mov    rbx,QWORD PTR [r15+0x20]
  42dda3:	mov    rdi,QWORD PTR [r15+0x28]
  42dda7:	lea    rax,[rdi+r14*1]
  42ddab:	cmp    rax,rbx
  42ddae:	jbe    42ddfd <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42ddb0:	cmp    rdi,rbx
  42ddb3:	jb     42ddc6 <flatcc_json_printer_int64_vector_field@@Base+0xd6>
  42ddb5:	mov    rdi,r15
  42ddb8:	xor    esi,esi
  42ddba:	call   QWORD PTR [r15+0x48]
  42ddbe:	mov    rbx,QWORD PTR [r15+0x20]
  42ddc2:	mov    rdi,QWORD PTR [r15+0x28]
  42ddc6:	sub    rbx,rdi
  42ddc9:	cmp    rbx,r14
  42ddcc:	jae    42ddfd <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42ddce:	xchg   ax,ax
  42ddd0:	mov    esi,0x20
  42ddd5:	mov    rdx,rbx
  42ddd8:	call   406080 <memset@plt>
  42dddd:	add    QWORD PTR [r15+0x28],rbx
  42dde1:	sub    r14,rbx
  42dde4:	mov    rdi,r15
  42dde7:	xor    esi,esi
  42dde9:	call   QWORD PTR [r15+0x48]
  42dded:	mov    rbx,QWORD PTR [r15+0x20]
  42ddf1:	mov    rdi,QWORD PTR [r15+0x28]
  42ddf5:	sub    rbx,rdi
  42ddf8:	cmp    r14,rbx
  42ddfb:	ja     42ddd0 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
  42ddfd:	mov    esi,0x20
  42de02:	mov    rdx,r14
  42de05:	call   406080 <memset@plt>
  42de0a:	add    r14,QWORD PTR [r15+0x28]
  42de0e:	mov    QWORD PTR [r15+0x28],r14
  42de12:	jmp    42de27 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42de14:	cmp    r14,QWORD PTR [r15+0x20]
  42de18:	jb     42de27 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42de1a:	mov    rdi,r15
  42de1d:	xor    esi,esi
  42de1f:	call   QWORD PTR [r15+0x48]
  42de23:	mov    r14,QWORD PTR [r15+0x28]
  42de27:	mov    rdi,QWORD PTR [r12+0x4]
  42de2c:	mov    rbx,rdi
  42de2f:	shr    rbx,0x3f
  42de33:	test   rdi,rdi
  42de36:	jns    42de42 <flatcc_json_printer_int64_vector_field@@Base+0x152>
  42de38:	mov    BYTE PTR [r14],0x2d
  42de3c:	inc    r14
  42de3f:	neg    rdi
  42de42:	mov    rsi,r14
  42de45:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42de4a:	add    eax,ebx
  42de4c:	cdqe   
  42de4e:	add    QWORD PTR [r15+0x28],rax
  42de52:	dec    ebp
  42de54:	je     42df95 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42de5a:	add    r12,0xc
  42de5e:	mov    rax,QWORD PTR [r15+0x28]
  42de62:	jmp    42de90 <flatcc_json_printer_int64_vector_field@@Base+0x1a0>
  42de64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42de6e:	xchg   ax,ax
  42de70:	mov    rsi,r14
  42de73:	call   428d50 <flatcc_json_printer_uint64@@Base+0x20>
  42de78:	add    eax,ebx
  42de7a:	cdqe   
  42de7c:	add    rax,QWORD PTR [r15+0x28]
  42de80:	mov    QWORD PTR [r15+0x28],rax
  42de84:	add    r12,0x8
  42de88:	test   ebp,ebp
  42de8a:	je     42df95 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42de90:	lea    rcx,[rax+0x1]
  42de94:	mov    QWORD PTR [r15+0x28],rcx
  42de98:	mov    BYTE PTR [rax],0x2c
  42de9b:	cmp    BYTE PTR [r15+0x31],0x0
  42dea0:	mov    r14,QWORD PTR [r15+0x28]
  42dea4:	je     42df50 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42deaa:	lea    rax,[r14+0x1]
  42deae:	mov    QWORD PTR [r15+0x28],rax
  42deb2:	mov    BYTE PTR [r14],0xa
  42deb6:	movsxd rax,DWORD PTR [r15+0x38]
  42deba:	movzx  r14d,BYTE PTR [r15+0x31]
  42debf:	imul   r14,rax
  42dec3:	mov    rbx,QWORD PTR [r15+0x20]
  42dec7:	mov    rdi,QWORD PTR [r15+0x28]
  42decb:	lea    rax,[rdi+r14*1]
  42decf:	cmp    rax,rbx
  42ded2:	jbe    42df2d <flatcc_json_printer_int64_vector_field@@Base+0x23d>
  42ded4:	cmp    rdi,rbx
  42ded7:	jb     42deea <flatcc_json_printer_int64_vector_field@@Base+0x1fa>
  42ded9:	mov    rdi,r15
  42dedc:	xor    esi,esi
  42dede:	call   QWORD PTR [r15+0x48]
  42dee2:	mov    rbx,QWORD PTR [r15+0x20]
  42dee6:	mov    rdi,QWORD PTR [r15+0x28]
  42deea:	sub    rbx,rdi
  42deed:	cmp    rbx,r14
  42def0:	jae    42df2d <flatcc_json_printer_int64_vector_field@@Base+0x23d>
  42def2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42defc:	nop    DWORD PTR [rax+0x0]
  42df00:	mov    esi,0x20
  42df05:	mov    rdx,rbx
  42df08:	call   406080 <memset@plt>
  42df0d:	add    QWORD PTR [r15+0x28],rbx
  42df11:	sub    r14,rbx
  42df14:	mov    rdi,r15
  42df17:	xor    esi,esi
  42df19:	call   QWORD PTR [r15+0x48]
  42df1d:	mov    rbx,QWORD PTR [r15+0x20]
  42df21:	mov    rdi,QWORD PTR [r15+0x28]
  42df25:	sub    rbx,rdi
  42df28:	cmp    r14,rbx
  42df2b:	ja     42df00 <flatcc_json_printer_int64_vector_field@@Base+0x210>
  42df2d:	mov    esi,0x20
  42df32:	mov    rdx,r14
  42df35:	call   406080 <memset@plt>
  42df3a:	add    r14,QWORD PTR [r15+0x28]
  42df3e:	mov    QWORD PTR [r15+0x28],r14
  42df42:	jmp    42df70 <flatcc_json_printer_int64_vector_field@@Base+0x280>
  42df44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df4e:	xchg   ax,ax
  42df50:	cmp    r14,QWORD PTR [r15+0x20]
  42df54:	jb     42df70 <flatcc_json_printer_int64_vector_field@@Base+0x280>
  42df56:	mov    rdi,r15
  42df59:	xor    esi,esi
  42df5b:	call   QWORD PTR [r15+0x48]
  42df5f:	mov    r14,QWORD PTR [r15+0x28]
  42df63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df6d:	nop    DWORD PTR [rax]
  42df70:	dec    ebp
  42df72:	mov    rdi,QWORD PTR [r12]
  42df76:	mov    rbx,rdi
  42df79:	shr    rbx,0x3f
  42df7d:	test   rdi,rdi
  42df80:	jns    42de70 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42df86:	mov    BYTE PTR [r14],0x2d
  42df8a:	inc    r14
  42df8d:	neg    rdi
  42df90:	jmp    42de70 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42df95:	cmp    BYTE PTR [r15+0x31],0x0
  42df9a:	mov    r14,QWORD PTR [r15+0x28]
  42df9e:	je     42e042 <flatcc_json_printer_int64_vector_field@@Base+0x352>
  42dfa4:	lea    rax,[r14+0x1]
  42dfa8:	mov    QWORD PTR [r15+0x28],rax
  42dfac:	mov    BYTE PTR [r14],0xa
  42dfb0:	movsxd rax,DWORD PTR [r15+0x38]
  42dfb4:	dec    rax
  42dfb7:	mov    DWORD PTR [r15+0x38],eax
  42dfbb:	movzx  r14d,BYTE PTR [r15+0x31]
  42dfc0:	imul   r14,rax
  42dfc4:	mov    rbx,QWORD PTR [r15+0x20]
  42dfc8:	mov    rdi,QWORD PTR [r15+0x28]
  42dfcc:	lea    rax,[rdi+r14*1]
  42dfd0:	cmp    rax,rbx
  42dfd3:	jbe    42e02d <flatcc_json_printer_int64_vector_field@@Base+0x33d>
  42dfd5:	cmp    rdi,rbx
  42dfd8:	jb     42dfeb <flatcc_json_printer_int64_vector_field@@Base+0x2fb>
  42dfda:	mov    rdi,r15
  42dfdd:	xor    esi,esi
  42dfdf:	call   QWORD PTR [r15+0x48]
  42dfe3:	mov    rbx,QWORD PTR [r15+0x20]
  42dfe7:	mov    rdi,QWORD PTR [r15+0x28]
  42dfeb:	sub    rbx,rdi
  42dfee:	cmp    rbx,r14
  42dff1:	jae    42e02d <flatcc_json_printer_int64_vector_field@@Base+0x33d>
  42dff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dffd:	nop    DWORD PTR [rax]
  42e000:	mov    esi,0x20
  42e005:	mov    rdx,rbx
  42e008:	call   406080 <memset@plt>
  42e00d:	add    QWORD PTR [r15+0x28],rbx
  42e011:	sub    r14,rbx
  42e014:	mov    rdi,r15
  42e017:	xor    esi,esi
  42e019:	call   QWORD PTR [r15+0x48]
  42e01d:	mov    rbx,QWORD PTR [r15+0x20]
  42e021:	mov    rdi,QWORD PTR [r15+0x28]
  42e025:	sub    rbx,rdi
  42e028:	cmp    r14,rbx
  42e02b:	ja     42e000 <flatcc_json_printer_int64_vector_field@@Base+0x310>
  42e02d:	mov    esi,0x20
  42e032:	mov    rdx,r14
  42e035:	call   406080 <memset@plt>
  42e03a:	add    r14,QWORD PTR [r15+0x28]
  42e03e:	mov    QWORD PTR [r15+0x28],r14
  42e042:	lea    rax,[r14+0x1]
  42e046:	mov    QWORD PTR [r15+0x28],rax
  42e04a:	mov    BYTE PTR [r14],0x5d
  42e04e:	pop    rbx
  42e04f:	pop    r12
  42e051:	pop    r14
  42e053:	pop    r15
  42e055:	pop    rbp
  42e056:	ret    
  42e057:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e060 <flatcc_json_printer_bool_vector_field@@Base>:
  42e060:	push   rbp
  42e061:	push   r15
  42e063:	push   r14
  42e065:	push   r12
  42e067:	push   rbx
  42e068:	lea    eax,[rdx+rdx*1]
  42e06b:	add    eax,0x4
  42e06e:	cmp    eax,DWORD PTR [rsi+0x10]
  42e071:	jge    42e3ce <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42e077:	mov    rdx,QWORD PTR [rsi+0x8]
  42e07b:	mov    eax,eax
  42e07d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e082:	test   r12,r12
  42e085:	je     42e3ce <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42e08b:	add    r12,QWORD PTR [rsi]
  42e08e:	je     42e3ce <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42e094:	mov    r15,rdi
  42e097:	mov    eax,DWORD PTR [rsi+0x18]
  42e09a:	lea    edx,[rax+0x1]
  42e09d:	mov    DWORD PTR [rsi+0x18],edx
  42e0a0:	test   eax,eax
  42e0a2:	je     42e0b3 <flatcc_json_printer_bool_vector_field@@Base+0x53>
  42e0a4:	mov    rax,QWORD PTR [r15+0x28]
  42e0a8:	lea    rdx,[rax+0x1]
  42e0ac:	mov    QWORD PTR [r15+0x28],rdx
  42e0b0:	mov    BYTE PTR [rax],0x2c
  42e0b3:	mov    ebx,DWORD PTR [r12]
  42e0b7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e0bb:	movsxd rdx,r8d
  42e0be:	mov    rdi,r15
  42e0c1:	mov    rsi,rcx
  42e0c4:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42e0c9:	inc    DWORD PTR [r15+0x38]
  42e0cd:	mov    rax,QWORD PTR [r15+0x28]
  42e0d1:	lea    rcx,[rax+0x1]
  42e0d5:	mov    QWORD PTR [r15+0x28],rcx
  42e0d9:	mov    BYTE PTR [rax],0x5b
  42e0dc:	test   ebp,ebp
  42e0de:	je     42e313 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42e0e4:	add    r12,rbx
  42e0e7:	cmp    BYTE PTR [r15+0x31],0x0
  42e0ec:	mov    r14,QWORD PTR [r15+0x28]
  42e0f0:	je     42e18c <flatcc_json_printer_bool_vector_field@@Base+0x12c>
  42e0f6:	lea    rax,[r14+0x1]
  42e0fa:	mov    QWORD PTR [r15+0x28],rax
  42e0fe:	mov    BYTE PTR [r14],0xa
  42e102:	movsxd rax,DWORD PTR [r15+0x38]
  42e106:	movzx  r14d,BYTE PTR [r15+0x31]
  42e10b:	imul   r14,rax
  42e10f:	mov    rbx,QWORD PTR [r15+0x20]
  42e113:	mov    rdi,QWORD PTR [r15+0x28]
  42e117:	lea    rax,[rdi+r14*1]
  42e11b:	cmp    rax,rbx
  42e11e:	jbe    42e16d <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42e120:	cmp    rdi,rbx
  42e123:	jb     42e136 <flatcc_json_printer_bool_vector_field@@Base+0xd6>
  42e125:	mov    rdi,r15
  42e128:	xor    esi,esi
  42e12a:	call   QWORD PTR [r15+0x48]
  42e12e:	mov    rbx,QWORD PTR [r15+0x20]
  42e132:	mov    rdi,QWORD PTR [r15+0x28]
  42e136:	sub    rbx,rdi
  42e139:	cmp    rbx,r14
  42e13c:	jae    42e16d <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42e13e:	xchg   ax,ax
  42e140:	mov    esi,0x20
  42e145:	mov    rdx,rbx
  42e148:	call   406080 <memset@plt>
  42e14d:	add    QWORD PTR [r15+0x28],rbx
  42e151:	sub    r14,rbx
  42e154:	mov    rdi,r15
  42e157:	xor    esi,esi
  42e159:	call   QWORD PTR [r15+0x48]
  42e15d:	mov    rbx,QWORD PTR [r15+0x20]
  42e161:	mov    rdi,QWORD PTR [r15+0x28]
  42e165:	sub    rbx,rdi
  42e168:	cmp    r14,rbx
  42e16b:	ja     42e140 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
  42e16d:	mov    esi,0x20
  42e172:	mov    rdx,r14
  42e175:	call   406080 <memset@plt>
  42e17a:	add    r14,QWORD PTR [r15+0x28]
  42e17e:	mov    QWORD PTR [r15+0x28],r14
  42e182:	cmp    BYTE PTR [r12+0x4],0x0
  42e188:	jne    42e1a7 <flatcc_json_printer_bool_vector_field@@Base+0x147>
  42e18a:	jmp    42e1ba <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42e18c:	cmp    r14,QWORD PTR [r15+0x20]
  42e190:	jb     42e19f <flatcc_json_printer_bool_vector_field@@Base+0x13f>
  42e192:	mov    rdi,r15
  42e195:	xor    esi,esi
  42e197:	call   QWORD PTR [r15+0x48]
  42e19b:	mov    r14,QWORD PTR [r15+0x28]
  42e19f:	cmp    BYTE PTR [r12+0x4],0x0
  42e1a5:	je     42e1ba <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42e1a7:	mov    BYTE PTR [r14+0x4],0x0
  42e1ac:	mov    DWORD PTR [r14],0x65757274
  42e1b3:	mov    eax,0x4
  42e1b8:	jmp    42e1cd <flatcc_json_printer_bool_vector_field@@Base+0x16d>
  42e1ba:	mov    WORD PTR [r14+0x4],0x65
  42e1c1:	mov    DWORD PTR [r14],0x736c6166
  42e1c8:	mov    eax,0x5
  42e1cd:	add    QWORD PTR [r15+0x28],rax
  42e1d1:	dec    ebp
  42e1d3:	je     42e313 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42e1d9:	add    r12,0x5
  42e1dd:	mov    rax,QWORD PTR [r15+0x28]
  42e1e1:	jmp    42e216 <flatcc_json_printer_bool_vector_field@@Base+0x1b6>
  42e1e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e1ed:	nop    DWORD PTR [rax]
  42e1f0:	mov    WORD PTR [r14+0x4],0x65
  42e1f7:	mov    DWORD PTR [r14],0x736c6166
  42e1fe:	mov    eax,0x5
  42e203:	add    rax,QWORD PTR [r15+0x28]
  42e207:	mov    QWORD PTR [r15+0x28],rax
  42e20b:	inc    r12
  42e20e:	test   ebp,ebp
  42e210:	je     42e313 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42e216:	lea    rcx,[rax+0x1]
  42e21a:	mov    QWORD PTR [r15+0x28],rcx
  42e21e:	mov    BYTE PTR [rax],0x2c
  42e221:	cmp    BYTE PTR [r15+0x31],0x0
  42e226:	mov    r14,QWORD PTR [r15+0x28]
  42e22a:	je     42e2d0 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42e230:	lea    rax,[r14+0x1]
  42e234:	mov    QWORD PTR [r15+0x28],rax
  42e238:	mov    BYTE PTR [r14],0xa
  42e23c:	movsxd rax,DWORD PTR [r15+0x38]
  42e240:	movzx  r14d,BYTE PTR [r15+0x31]
  42e245:	imul   r14,rax
  42e249:	mov    rbx,QWORD PTR [r15+0x20]
  42e24d:	mov    rdi,QWORD PTR [r15+0x28]
  42e251:	lea    rax,[rdi+r14*1]
  42e255:	cmp    rax,rbx
  42e258:	jbe    42e2ad <flatcc_json_printer_bool_vector_field@@Base+0x24d>
  42e25a:	cmp    rdi,rbx
  42e25d:	jb     42e270 <flatcc_json_printer_bool_vector_field@@Base+0x210>
  42e25f:	mov    rdi,r15
  42e262:	xor    esi,esi
  42e264:	call   QWORD PTR [r15+0x48]
  42e268:	mov    rbx,QWORD PTR [r15+0x20]
  42e26c:	mov    rdi,QWORD PTR [r15+0x28]
  42e270:	sub    rbx,rdi
  42e273:	cmp    rbx,r14
  42e276:	jae    42e2ad <flatcc_json_printer_bool_vector_field@@Base+0x24d>
  42e278:	nop    DWORD PTR [rax+rax*1+0x0]
  42e280:	mov    esi,0x20
  42e285:	mov    rdx,rbx
  42e288:	call   406080 <memset@plt>
  42e28d:	add    QWORD PTR [r15+0x28],rbx
  42e291:	sub    r14,rbx
  42e294:	mov    rdi,r15
  42e297:	xor    esi,esi
  42e299:	call   QWORD PTR [r15+0x48]
  42e29d:	mov    rbx,QWORD PTR [r15+0x20]
  42e2a1:	mov    rdi,QWORD PTR [r15+0x28]
  42e2a5:	sub    rbx,rdi
  42e2a8:	cmp    r14,rbx
  42e2ab:	ja     42e280 <flatcc_json_printer_bool_vector_field@@Base+0x220>
  42e2ad:	mov    esi,0x20
  42e2b2:	mov    rdx,r14
  42e2b5:	call   406080 <memset@plt>
  42e2ba:	add    r14,QWORD PTR [r15+0x28]
  42e2be:	mov    QWORD PTR [r15+0x28],r14
  42e2c2:	jmp    42e2f0 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42e2c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2ce:	xchg   ax,ax
  42e2d0:	cmp    r14,QWORD PTR [r15+0x20]
  42e2d4:	jb     42e2f0 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42e2d6:	mov    rdi,r15
  42e2d9:	xor    esi,esi
  42e2db:	call   QWORD PTR [r15+0x48]
  42e2df:	mov    r14,QWORD PTR [r15+0x28]
  42e2e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2ed:	nop    DWORD PTR [rax]
  42e2f0:	dec    ebp
  42e2f2:	cmp    BYTE PTR [r12],0x0
  42e2f7:	je     42e1f0 <flatcc_json_printer_bool_vector_field@@Base+0x190>
  42e2fd:	mov    BYTE PTR [r14+0x4],0x0
  42e302:	mov    DWORD PTR [r14],0x65757274
  42e309:	mov    eax,0x4
  42e30e:	jmp    42e203 <flatcc_json_printer_bool_vector_field@@Base+0x1a3>
  42e313:	cmp    BYTE PTR [r15+0x31],0x0
  42e318:	mov    r14,QWORD PTR [r15+0x28]
  42e31c:	je     42e3c2 <flatcc_json_printer_bool_vector_field@@Base+0x362>
  42e322:	lea    rax,[r14+0x1]
  42e326:	mov    QWORD PTR [r15+0x28],rax
  42e32a:	mov    BYTE PTR [r14],0xa
  42e32e:	movsxd rax,DWORD PTR [r15+0x38]
  42e332:	dec    rax
  42e335:	mov    DWORD PTR [r15+0x38],eax
  42e339:	movzx  r14d,BYTE PTR [r15+0x31]
  42e33e:	imul   r14,rax
  42e342:	mov    rbx,QWORD PTR [r15+0x20]
  42e346:	mov    rdi,QWORD PTR [r15+0x28]
  42e34a:	lea    rax,[rdi+r14*1]
  42e34e:	cmp    rax,rbx
  42e351:	jbe    42e3ad <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42e353:	cmp    rdi,rbx
  42e356:	jb     42e369 <flatcc_json_printer_bool_vector_field@@Base+0x309>
  42e358:	mov    rdi,r15
  42e35b:	xor    esi,esi
  42e35d:	call   QWORD PTR [r15+0x48]
  42e361:	mov    rbx,QWORD PTR [r15+0x20]
  42e365:	mov    rdi,QWORD PTR [r15+0x28]
  42e369:	sub    rbx,rdi
  42e36c:	cmp    rbx,r14
  42e36f:	jae    42e3ad <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42e371:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e37b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e380:	mov    esi,0x20
  42e385:	mov    rdx,rbx
  42e388:	call   406080 <memset@plt>
  42e38d:	add    QWORD PTR [r15+0x28],rbx
  42e391:	sub    r14,rbx
  42e394:	mov    rdi,r15
  42e397:	xor    esi,esi
  42e399:	call   QWORD PTR [r15+0x48]
  42e39d:	mov    rbx,QWORD PTR [r15+0x20]
  42e3a1:	mov    rdi,QWORD PTR [r15+0x28]
  42e3a5:	sub    rbx,rdi
  42e3a8:	cmp    r14,rbx
  42e3ab:	ja     42e380 <flatcc_json_printer_bool_vector_field@@Base+0x320>
  42e3ad:	mov    esi,0x20
  42e3b2:	mov    rdx,r14
  42e3b5:	call   406080 <memset@plt>
  42e3ba:	add    r14,QWORD PTR [r15+0x28]
  42e3be:	mov    QWORD PTR [r15+0x28],r14
  42e3c2:	lea    rax,[r14+0x1]
  42e3c6:	mov    QWORD PTR [r15+0x28],rax
  42e3ca:	mov    BYTE PTR [r14],0x5d
  42e3ce:	pop    rbx
  42e3cf:	pop    r12
  42e3d1:	pop    r14
  42e3d3:	pop    r15
  42e3d5:	pop    rbp
  42e3d6:	ret    
  42e3d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e3e0 <flatcc_json_printer_float_vector_field@@Base>:
  42e3e0:	push   rbp
  42e3e1:	push   r15
  42e3e3:	push   r14
  42e3e5:	push   r12
  42e3e7:	push   rbx
  42e3e8:	lea    eax,[rdx+rdx*1]
  42e3eb:	add    eax,0x4
  42e3ee:	cmp    eax,DWORD PTR [rsi+0x10]
  42e3f1:	jge    42e70e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42e3f7:	mov    rdx,QWORD PTR [rsi+0x8]
  42e3fb:	mov    eax,eax
  42e3fd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e402:	test   r12,r12
  42e405:	je     42e70e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42e40b:	add    r12,QWORD PTR [rsi]
  42e40e:	je     42e70e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42e414:	mov    r15,rdi
  42e417:	mov    eax,DWORD PTR [rsi+0x18]
  42e41a:	lea    edx,[rax+0x1]
  42e41d:	mov    DWORD PTR [rsi+0x18],edx
  42e420:	test   eax,eax
  42e422:	je     42e433 <flatcc_json_printer_float_vector_field@@Base+0x53>
  42e424:	mov    rax,QWORD PTR [r15+0x28]
  42e428:	lea    rdx,[rax+0x1]
  42e42c:	mov    QWORD PTR [r15+0x28],rdx
  42e430:	mov    BYTE PTR [rax],0x2c
  42e433:	mov    ebx,DWORD PTR [r12]
  42e437:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e43b:	movsxd rdx,r8d
  42e43e:	mov    rdi,r15
  42e441:	mov    rsi,rcx
  42e444:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42e449:	inc    DWORD PTR [r15+0x38]
  42e44d:	mov    rax,QWORD PTR [r15+0x28]
  42e451:	lea    rcx,[rax+0x1]
  42e455:	mov    QWORD PTR [r15+0x28],rcx
  42e459:	mov    BYTE PTR [rax],0x5b
  42e45c:	test   ebp,ebp
  42e45e:	je     42e65c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42e464:	add    r12,rbx
  42e467:	cmp    BYTE PTR [r15+0x31],0x0
  42e46c:	mov    r14,QWORD PTR [r15+0x28]
  42e470:	je     42e504 <flatcc_json_printer_float_vector_field@@Base+0x124>
  42e476:	lea    rax,[r14+0x1]
  42e47a:	mov    QWORD PTR [r15+0x28],rax
  42e47e:	mov    BYTE PTR [r14],0xa
  42e482:	movsxd rax,DWORD PTR [r15+0x38]
  42e486:	movzx  r14d,BYTE PTR [r15+0x31]
  42e48b:	imul   r14,rax
  42e48f:	mov    rbx,QWORD PTR [r15+0x20]
  42e493:	mov    rdi,QWORD PTR [r15+0x28]
  42e497:	lea    rax,[rdi+r14*1]
  42e49b:	cmp    rax,rbx
  42e49e:	jbe    42e4ed <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42e4a0:	cmp    rdi,rbx
  42e4a3:	jb     42e4b6 <flatcc_json_printer_float_vector_field@@Base+0xd6>
  42e4a5:	mov    rdi,r15
  42e4a8:	xor    esi,esi
  42e4aa:	call   QWORD PTR [r15+0x48]
  42e4ae:	mov    rbx,QWORD PTR [r15+0x20]
  42e4b2:	mov    rdi,QWORD PTR [r15+0x28]
  42e4b6:	sub    rbx,rdi
  42e4b9:	cmp    rbx,r14
  42e4bc:	jae    42e4ed <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42e4be:	xchg   ax,ax
  42e4c0:	mov    esi,0x20
  42e4c5:	mov    rdx,rbx
  42e4c8:	call   406080 <memset@plt>
  42e4cd:	add    QWORD PTR [r15+0x28],rbx
  42e4d1:	sub    r14,rbx
  42e4d4:	mov    rdi,r15
  42e4d7:	xor    esi,esi
  42e4d9:	call   QWORD PTR [r15+0x48]
  42e4dd:	mov    rbx,QWORD PTR [r15+0x20]
  42e4e1:	mov    rdi,QWORD PTR [r15+0x28]
  42e4e5:	sub    rbx,rdi
  42e4e8:	cmp    r14,rbx
  42e4eb:	ja     42e4c0 <flatcc_json_printer_float_vector_field@@Base+0xe0>
  42e4ed:	mov    esi,0x20
  42e4f2:	mov    rdx,r14
  42e4f5:	call   406080 <memset@plt>
  42e4fa:	add    r14,QWORD PTR [r15+0x28]
  42e4fe:	mov    QWORD PTR [r15+0x28],r14
  42e502:	jmp    42e517 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42e504:	cmp    r14,QWORD PTR [r15+0x20]
  42e508:	jb     42e517 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42e50a:	mov    rdi,r15
  42e50d:	xor    esi,esi
  42e50f:	call   QWORD PTR [r15+0x48]
  42e513:	mov    r14,QWORD PTR [r15+0x28]
  42e517:	vmovss xmm0,DWORD PTR [r12+0x4]
  42e51e:	vcvtss2sd xmm0,xmm0,xmm0
  42e522:	mov    rdi,r14
  42e525:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42e52a:	cdqe   
  42e52c:	add    QWORD PTR [r15+0x28],rax
  42e530:	dec    ebp
  42e532:	je     42e65c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42e538:	add    r12,0x8
  42e53c:	mov    rax,QWORD PTR [r15+0x28]
  42e540:	jmp    42e58d <flatcc_json_printer_float_vector_field@@Base+0x1ad>
  42e542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e54c:	nop    DWORD PTR [rax+0x0]
  42e550:	mov    esi,0x20
  42e555:	mov    rdx,r14
  42e558:	call   406080 <memset@plt>
  42e55d:	add    r14,QWORD PTR [r15+0x28]
  42e561:	mov    QWORD PTR [r15+0x28],r14
  42e565:	vmovss xmm0,DWORD PTR [r12]
  42e56b:	vcvtss2sd xmm0,xmm0,xmm0
  42e56f:	mov    rdi,r14
  42e572:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42e577:	cdqe   
  42e579:	add    rax,QWORD PTR [r15+0x28]
  42e57d:	mov    QWORD PTR [r15+0x28],rax
  42e581:	add    r12,0x4
  42e585:	test   ebp,ebp
  42e587:	je     42e65c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42e58d:	dec    ebp
  42e58f:	lea    rcx,[rax+0x1]
  42e593:	mov    QWORD PTR [r15+0x28],rcx
  42e597:	mov    BYTE PTR [rax],0x2c
  42e59a:	cmp    BYTE PTR [r15+0x31],0x0
  42e59f:	mov    r14,QWORD PTR [r15+0x28]
  42e5a3:	je     42e640 <flatcc_json_printer_float_vector_field@@Base+0x260>
  42e5a9:	lea    rax,[r14+0x1]
  42e5ad:	mov    QWORD PTR [r15+0x28],rax
  42e5b1:	mov    BYTE PTR [r14],0xa
  42e5b5:	movsxd rax,DWORD PTR [r15+0x38]
  42e5b9:	movzx  r14d,BYTE PTR [r15+0x31]
  42e5be:	imul   r14,rax
  42e5c2:	mov    rbx,QWORD PTR [r15+0x20]
  42e5c6:	mov    rdi,QWORD PTR [r15+0x28]
  42e5ca:	lea    rax,[rdi+r14*1]
  42e5ce:	cmp    rax,rbx
  42e5d1:	jbe    42e550 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42e5d7:	cmp    rdi,rbx
  42e5da:	jb     42e5ed <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42e5dc:	mov    rdi,r15
  42e5df:	xor    esi,esi
  42e5e1:	call   QWORD PTR [r15+0x48]
  42e5e5:	mov    rbx,QWORD PTR [r15+0x20]
  42e5e9:	mov    rdi,QWORD PTR [r15+0x28]
  42e5ed:	sub    rbx,rdi
  42e5f0:	cmp    rbx,r14
  42e5f3:	jae    42e550 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42e5f9:	nop    DWORD PTR [rax+0x0]
  42e600:	mov    esi,0x20
  42e605:	mov    rdx,rbx
  42e608:	call   406080 <memset@plt>
  42e60d:	add    QWORD PTR [r15+0x28],rbx
  42e611:	sub    r14,rbx
  42e614:	mov    rdi,r15
  42e617:	xor    esi,esi
  42e619:	call   QWORD PTR [r15+0x48]
  42e61d:	mov    rbx,QWORD PTR [r15+0x20]
  42e621:	mov    rdi,QWORD PTR [r15+0x28]
  42e625:	sub    rbx,rdi
  42e628:	cmp    r14,rbx
  42e62b:	ja     42e600 <flatcc_json_printer_float_vector_field@@Base+0x220>
  42e62d:	jmp    42e550 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42e632:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e63c:	nop    DWORD PTR [rax+0x0]
  42e640:	cmp    r14,QWORD PTR [r15+0x20]
  42e644:	jb     42e565 <flatcc_json_printer_float_vector_field@@Base+0x185>
  42e64a:	mov    rdi,r15
  42e64d:	xor    esi,esi
  42e64f:	call   QWORD PTR [r15+0x48]
  42e653:	mov    r14,QWORD PTR [r15+0x28]
  42e657:	jmp    42e565 <flatcc_json_printer_float_vector_field@@Base+0x185>
  42e65c:	cmp    BYTE PTR [r15+0x31],0x0
  42e661:	mov    r14,QWORD PTR [r15+0x28]
  42e665:	je     42e702 <flatcc_json_printer_float_vector_field@@Base+0x322>
  42e66b:	lea    rax,[r14+0x1]
  42e66f:	mov    QWORD PTR [r15+0x28],rax
  42e673:	mov    BYTE PTR [r14],0xa
  42e677:	movsxd rax,DWORD PTR [r15+0x38]
  42e67b:	dec    rax
  42e67e:	mov    DWORD PTR [r15+0x38],eax
  42e682:	movzx  r14d,BYTE PTR [r15+0x31]
  42e687:	imul   r14,rax
  42e68b:	mov    rbx,QWORD PTR [r15+0x20]
  42e68f:	mov    rdi,QWORD PTR [r15+0x28]
  42e693:	lea    rax,[rdi+r14*1]
  42e697:	cmp    rax,rbx
  42e69a:	jbe    42e6ed <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42e69c:	cmp    rdi,rbx
  42e69f:	jb     42e6b2 <flatcc_json_printer_float_vector_field@@Base+0x2d2>
  42e6a1:	mov    rdi,r15
  42e6a4:	xor    esi,esi
  42e6a6:	call   QWORD PTR [r15+0x48]
  42e6aa:	mov    rbx,QWORD PTR [r15+0x20]
  42e6ae:	mov    rdi,QWORD PTR [r15+0x28]
  42e6b2:	sub    rbx,rdi
  42e6b5:	cmp    rbx,r14
  42e6b8:	jae    42e6ed <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42e6ba:	nop    WORD PTR [rax+rax*1+0x0]
  42e6c0:	mov    esi,0x20
  42e6c5:	mov    rdx,rbx
  42e6c8:	call   406080 <memset@plt>
  42e6cd:	add    QWORD PTR [r15+0x28],rbx
  42e6d1:	sub    r14,rbx
  42e6d4:	mov    rdi,r15
  42e6d7:	xor    esi,esi
  42e6d9:	call   QWORD PTR [r15+0x48]
  42e6dd:	mov    rbx,QWORD PTR [r15+0x20]
  42e6e1:	mov    rdi,QWORD PTR [r15+0x28]
  42e6e5:	sub    rbx,rdi
  42e6e8:	cmp    r14,rbx
  42e6eb:	ja     42e6c0 <flatcc_json_printer_float_vector_field@@Base+0x2e0>
  42e6ed:	mov    esi,0x20
  42e6f2:	mov    rdx,r14
  42e6f5:	call   406080 <memset@plt>
  42e6fa:	add    r14,QWORD PTR [r15+0x28]
  42e6fe:	mov    QWORD PTR [r15+0x28],r14
  42e702:	lea    rax,[r14+0x1]
  42e706:	mov    QWORD PTR [r15+0x28],rax
  42e70a:	mov    BYTE PTR [r14],0x5d
  42e70e:	pop    rbx
  42e70f:	pop    r12
  42e711:	pop    r14
  42e713:	pop    r15
  42e715:	pop    rbp
  42e716:	ret    
  42e717:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e720 <flatcc_json_printer_double_vector_field@@Base>:
  42e720:	push   rbp
  42e721:	push   r15
  42e723:	push   r14
  42e725:	push   r12
  42e727:	push   rbx
  42e728:	lea    eax,[rdx+rdx*1]
  42e72b:	add    eax,0x4
  42e72e:	cmp    eax,DWORD PTR [rsi+0x10]
  42e731:	jge    42ea3e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42e737:	mov    rdx,QWORD PTR [rsi+0x8]
  42e73b:	mov    eax,eax
  42e73d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e742:	test   r12,r12
  42e745:	je     42ea3e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42e74b:	add    r12,QWORD PTR [rsi]
  42e74e:	je     42ea3e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42e754:	mov    r15,rdi
  42e757:	mov    eax,DWORD PTR [rsi+0x18]
  42e75a:	lea    edx,[rax+0x1]
  42e75d:	mov    DWORD PTR [rsi+0x18],edx
  42e760:	test   eax,eax
  42e762:	je     42e773 <flatcc_json_printer_double_vector_field@@Base+0x53>
  42e764:	mov    rax,QWORD PTR [r15+0x28]
  42e768:	lea    rdx,[rax+0x1]
  42e76c:	mov    QWORD PTR [r15+0x28],rdx
  42e770:	mov    BYTE PTR [rax],0x2c
  42e773:	mov    ebx,DWORD PTR [r12]
  42e777:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e77b:	movsxd rdx,r8d
  42e77e:	mov    rdi,r15
  42e781:	mov    rsi,rcx
  42e784:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42e789:	inc    DWORD PTR [r15+0x38]
  42e78d:	mov    rax,QWORD PTR [r15+0x28]
  42e791:	lea    rcx,[rax+0x1]
  42e795:	mov    QWORD PTR [r15+0x28],rcx
  42e799:	mov    BYTE PTR [rax],0x5b
  42e79c:	test   ebp,ebp
  42e79e:	je     42e98c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42e7a4:	add    r12,rbx
  42e7a7:	cmp    BYTE PTR [r15+0x31],0x0
  42e7ac:	mov    r14,QWORD PTR [r15+0x28]
  42e7b0:	je     42e844 <flatcc_json_printer_double_vector_field@@Base+0x124>
  42e7b6:	lea    rax,[r14+0x1]
  42e7ba:	mov    QWORD PTR [r15+0x28],rax
  42e7be:	mov    BYTE PTR [r14],0xa
  42e7c2:	movsxd rax,DWORD PTR [r15+0x38]
  42e7c6:	movzx  r14d,BYTE PTR [r15+0x31]
  42e7cb:	imul   r14,rax
  42e7cf:	mov    rbx,QWORD PTR [r15+0x20]
  42e7d3:	mov    rdi,QWORD PTR [r15+0x28]
  42e7d7:	lea    rax,[rdi+r14*1]
  42e7db:	cmp    rax,rbx
  42e7de:	jbe    42e82d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42e7e0:	cmp    rdi,rbx
  42e7e3:	jb     42e7f6 <flatcc_json_printer_double_vector_field@@Base+0xd6>
  42e7e5:	mov    rdi,r15
  42e7e8:	xor    esi,esi
  42e7ea:	call   QWORD PTR [r15+0x48]
  42e7ee:	mov    rbx,QWORD PTR [r15+0x20]
  42e7f2:	mov    rdi,QWORD PTR [r15+0x28]
  42e7f6:	sub    rbx,rdi
  42e7f9:	cmp    rbx,r14
  42e7fc:	jae    42e82d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42e7fe:	xchg   ax,ax
  42e800:	mov    esi,0x20
  42e805:	mov    rdx,rbx
  42e808:	call   406080 <memset@plt>
  42e80d:	add    QWORD PTR [r15+0x28],rbx
  42e811:	sub    r14,rbx
  42e814:	mov    rdi,r15
  42e817:	xor    esi,esi
  42e819:	call   QWORD PTR [r15+0x48]
  42e81d:	mov    rbx,QWORD PTR [r15+0x20]
  42e821:	mov    rdi,QWORD PTR [r15+0x28]
  42e825:	sub    rbx,rdi
  42e828:	cmp    r14,rbx
  42e82b:	ja     42e800 <flatcc_json_printer_double_vector_field@@Base+0xe0>
  42e82d:	mov    esi,0x20
  42e832:	mov    rdx,r14
  42e835:	call   406080 <memset@plt>
  42e83a:	add    r14,QWORD PTR [r15+0x28]
  42e83e:	mov    QWORD PTR [r15+0x28],r14
  42e842:	jmp    42e857 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42e844:	cmp    r14,QWORD PTR [r15+0x20]
  42e848:	jb     42e857 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42e84a:	mov    rdi,r15
  42e84d:	xor    esi,esi
  42e84f:	call   QWORD PTR [r15+0x48]
  42e853:	mov    r14,QWORD PTR [r15+0x28]
  42e857:	vmovsd xmm0,QWORD PTR [r12+0x4]
  42e85e:	mov    rdi,r14
  42e861:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42e866:	cdqe   
  42e868:	add    QWORD PTR [r15+0x28],rax
  42e86c:	dec    ebp
  42e86e:	je     42e98c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42e874:	add    r12,0xc
  42e878:	mov    rax,QWORD PTR [r15+0x28]
  42e87c:	jmp    42e8b9 <flatcc_json_printer_double_vector_field@@Base+0x199>
  42e87e:	xchg   ax,ax
  42e880:	mov    esi,0x20
  42e885:	mov    rdx,r14
  42e888:	call   406080 <memset@plt>
  42e88d:	add    r14,QWORD PTR [r15+0x28]
  42e891:	mov    QWORD PTR [r15+0x28],r14
  42e895:	vmovsd xmm0,QWORD PTR [r12]
  42e89b:	mov    rdi,r14
  42e89e:	call   427760 <flatcc_json_printer_fmt_float@@Base+0x10>
  42e8a3:	cdqe   
  42e8a5:	add    rax,QWORD PTR [r15+0x28]
  42e8a9:	mov    QWORD PTR [r15+0x28],rax
  42e8ad:	add    r12,0x8
  42e8b1:	test   ebp,ebp
  42e8b3:	je     42e98c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42e8b9:	dec    ebp
  42e8bb:	lea    rcx,[rax+0x1]
  42e8bf:	mov    QWORD PTR [r15+0x28],rcx
  42e8c3:	mov    BYTE PTR [rax],0x2c
  42e8c6:	cmp    BYTE PTR [r15+0x31],0x0
  42e8cb:	mov    r14,QWORD PTR [r15+0x28]
  42e8cf:	je     42e970 <flatcc_json_printer_double_vector_field@@Base+0x250>
  42e8d5:	lea    rax,[r14+0x1]
  42e8d9:	mov    QWORD PTR [r15+0x28],rax
  42e8dd:	mov    BYTE PTR [r14],0xa
  42e8e1:	movsxd rax,DWORD PTR [r15+0x38]
  42e8e5:	movzx  r14d,BYTE PTR [r15+0x31]
  42e8ea:	imul   r14,rax
  42e8ee:	mov    rbx,QWORD PTR [r15+0x20]
  42e8f2:	mov    rdi,QWORD PTR [r15+0x28]
  42e8f6:	lea    rax,[rdi+r14*1]
  42e8fa:	cmp    rax,rbx
  42e8fd:	jbe    42e880 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42e8ff:	cmp    rdi,rbx
  42e902:	jb     42e915 <flatcc_json_printer_double_vector_field@@Base+0x1f5>
  42e904:	mov    rdi,r15
  42e907:	xor    esi,esi
  42e909:	call   QWORD PTR [r15+0x48]
  42e90d:	mov    rbx,QWORD PTR [r15+0x20]
  42e911:	mov    rdi,QWORD PTR [r15+0x28]
  42e915:	sub    rbx,rdi
  42e918:	cmp    rbx,r14
  42e91b:	jae    42e880 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42e921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e92b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e930:	mov    esi,0x20
  42e935:	mov    rdx,rbx
  42e938:	call   406080 <memset@plt>
  42e93d:	add    QWORD PTR [r15+0x28],rbx
  42e941:	sub    r14,rbx
  42e944:	mov    rdi,r15
  42e947:	xor    esi,esi
  42e949:	call   QWORD PTR [r15+0x48]
  42e94d:	mov    rbx,QWORD PTR [r15+0x20]
  42e951:	mov    rdi,QWORD PTR [r15+0x28]
  42e955:	sub    rbx,rdi
  42e958:	cmp    r14,rbx
  42e95b:	ja     42e930 <flatcc_json_printer_double_vector_field@@Base+0x210>
  42e95d:	jmp    42e880 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42e962:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e96c:	nop    DWORD PTR [rax+0x0]
  42e970:	cmp    r14,QWORD PTR [r15+0x20]
  42e974:	jb     42e895 <flatcc_json_printer_double_vector_field@@Base+0x175>
  42e97a:	mov    rdi,r15
  42e97d:	xor    esi,esi
  42e97f:	call   QWORD PTR [r15+0x48]
  42e983:	mov    r14,QWORD PTR [r15+0x28]
  42e987:	jmp    42e895 <flatcc_json_printer_double_vector_field@@Base+0x175>
  42e98c:	cmp    BYTE PTR [r15+0x31],0x0
  42e991:	mov    r14,QWORD PTR [r15+0x28]
  42e995:	je     42ea32 <flatcc_json_printer_double_vector_field@@Base+0x312>
  42e99b:	lea    rax,[r14+0x1]
  42e99f:	mov    QWORD PTR [r15+0x28],rax
  42e9a3:	mov    BYTE PTR [r14],0xa
  42e9a7:	movsxd rax,DWORD PTR [r15+0x38]
  42e9ab:	dec    rax
  42e9ae:	mov    DWORD PTR [r15+0x38],eax
  42e9b2:	movzx  r14d,BYTE PTR [r15+0x31]
  42e9b7:	imul   r14,rax
  42e9bb:	mov    rbx,QWORD PTR [r15+0x20]
  42e9bf:	mov    rdi,QWORD PTR [r15+0x28]
  42e9c3:	lea    rax,[rdi+r14*1]
  42e9c7:	cmp    rax,rbx
  42e9ca:	jbe    42ea1d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42e9cc:	cmp    rdi,rbx
  42e9cf:	jb     42e9e2 <flatcc_json_printer_double_vector_field@@Base+0x2c2>
  42e9d1:	mov    rdi,r15
  42e9d4:	xor    esi,esi
  42e9d6:	call   QWORD PTR [r15+0x48]
  42e9da:	mov    rbx,QWORD PTR [r15+0x20]
  42e9de:	mov    rdi,QWORD PTR [r15+0x28]
  42e9e2:	sub    rbx,rdi
  42e9e5:	cmp    rbx,r14
  42e9e8:	jae    42ea1d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42e9ea:	nop    WORD PTR [rax+rax*1+0x0]
  42e9f0:	mov    esi,0x20
  42e9f5:	mov    rdx,rbx
  42e9f8:	call   406080 <memset@plt>
  42e9fd:	add    QWORD PTR [r15+0x28],rbx
  42ea01:	sub    r14,rbx
  42ea04:	mov    rdi,r15
  42ea07:	xor    esi,esi
  42ea09:	call   QWORD PTR [r15+0x48]
  42ea0d:	mov    rbx,QWORD PTR [r15+0x20]
  42ea11:	mov    rdi,QWORD PTR [r15+0x28]
  42ea15:	sub    rbx,rdi
  42ea18:	cmp    r14,rbx
  42ea1b:	ja     42e9f0 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
  42ea1d:	mov    esi,0x20
  42ea22:	mov    rdx,r14
  42ea25:	call   406080 <memset@plt>
  42ea2a:	add    r14,QWORD PTR [r15+0x28]
  42ea2e:	mov    QWORD PTR [r15+0x28],r14
  42ea32:	lea    rax,[r14+0x1]
  42ea36:	mov    QWORD PTR [r15+0x28],rax
  42ea3a:	mov    BYTE PTR [r14],0x5d
  42ea3e:	pop    rbx
  42ea3f:	pop    r12
  42ea41:	pop    r14
  42ea43:	pop    r15
  42ea45:	pop    rbp
  42ea46:	ret    
  42ea47:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ea50 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  42ea50:	push   rbp
  42ea51:	push   r15
  42ea53:	push   r14
  42ea55:	push   r13
  42ea57:	push   r12
  42ea59:	push   rbx
  42ea5a:	push   rax
  42ea5b:	mov    r12,rdi
  42ea5e:	cmp    BYTE PTR [rdi+0x33],0x0
  42ea62:	je     42ea7a <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a>
  42ea64:	mov    rdi,r12
  42ea67:	add    rsp,0x8
  42ea6b:	pop    rbx
  42ea6c:	pop    r12
  42ea6e:	pop    r13
  42ea70:	pop    r14
  42ea72:	pop    r15
  42ea74:	pop    rbp
  42ea75:	jmp    42bb50 <flatcc_json_printer_utype_vector_field@@Base>
  42ea7a:	lea    eax,[rdx+rdx*1]
  42ea7d:	add    eax,0x4
  42ea80:	cmp    eax,DWORD PTR [rsi+0x10]
  42ea83:	jge    42ed95 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42ea89:	mov    rdx,QWORD PTR [rsi+0x8]
  42ea8d:	mov    eax,eax
  42ea8f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42ea94:	test   r13,r13
  42ea97:	je     42ed95 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42ea9d:	add    r13,QWORD PTR [rsi]
  42eaa0:	je     42ed95 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42eaa6:	mov    r14,r9
  42eaa9:	mov    eax,DWORD PTR [rsi+0x18]
  42eaac:	lea    edx,[rax+0x1]
  42eaaf:	mov    DWORD PTR [rsi+0x18],edx
  42eab2:	test   eax,eax
  42eab4:	je     42eac7 <flatcc_json_printer_utype_enum_vector_field@@Base+0x77>
  42eab6:	mov    rax,QWORD PTR [r12+0x28]
  42eabb:	lea    rdx,[rax+0x1]
  42eabf:	mov    QWORD PTR [r12+0x28],rdx
  42eac4:	mov    BYTE PTR [rax],0x2c
  42eac7:	mov    ebx,DWORD PTR [r13+0x0]
  42eacb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42ead0:	movsxd rdx,r8d
  42ead3:	mov    rdi,r12
  42ead6:	mov    rsi,rcx
  42ead9:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42eade:	inc    DWORD PTR [r12+0x38]
  42eae3:	mov    rax,QWORD PTR [r12+0x28]
  42eae8:	lea    rcx,[rax+0x1]
  42eaec:	mov    QWORD PTR [r12+0x28],rcx
  42eaf1:	mov    BYTE PTR [rax],0x5b
  42eaf4:	test   ebp,ebp
  42eaf6:	je     42ecca <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42eafc:	add    r13,rbx
  42eaff:	cmp    BYTE PTR [r12+0x31],0x0
  42eb05:	mov    rax,QWORD PTR [r12+0x28]
  42eb0a:	je     42eba5 <flatcc_json_printer_utype_enum_vector_field@@Base+0x155>
  42eb10:	lea    rcx,[rax+0x1]
  42eb14:	mov    QWORD PTR [r12+0x28],rcx
  42eb19:	mov    BYTE PTR [rax],0xa
  42eb1c:	movsxd rax,DWORD PTR [r12+0x38]
  42eb21:	movzx  r15d,BYTE PTR [r12+0x31]
  42eb27:	imul   r15,rax
  42eb2b:	mov    rbx,QWORD PTR [r12+0x20]
  42eb30:	mov    rdi,QWORD PTR [r12+0x28]
  42eb35:	lea    rax,[rdi+r15*1]
  42eb39:	cmp    rax,rbx
  42eb3c:	jbe    42eb91 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42eb3e:	cmp    rdi,rbx
  42eb41:	jb     42eb57 <flatcc_json_printer_utype_enum_vector_field@@Base+0x107>
  42eb43:	mov    rdi,r12
  42eb46:	xor    esi,esi
  42eb48:	call   QWORD PTR [r12+0x48]
  42eb4d:	mov    rbx,QWORD PTR [r12+0x20]
  42eb52:	mov    rdi,QWORD PTR [r12+0x28]
  42eb57:	sub    rbx,rdi
  42eb5a:	cmp    rbx,r15
  42eb5d:	jae    42eb91 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42eb5f:	nop
  42eb60:	mov    esi,0x20
  42eb65:	mov    rdx,rbx
  42eb68:	call   406080 <memset@plt>
  42eb6d:	add    QWORD PTR [r12+0x28],rbx
  42eb72:	sub    r15,rbx
  42eb75:	mov    rdi,r12
  42eb78:	xor    esi,esi
  42eb7a:	call   QWORD PTR [r12+0x48]
  42eb7f:	mov    rbx,QWORD PTR [r12+0x20]
  42eb84:	mov    rdi,QWORD PTR [r12+0x28]
  42eb89:	sub    rbx,rdi
  42eb8c:	cmp    r15,rbx
  42eb8f:	ja     42eb60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
  42eb91:	mov    esi,0x20
  42eb96:	mov    rdx,r15
  42eb99:	call   406080 <memset@plt>
  42eb9e:	add    QWORD PTR [r12+0x28],r15
  42eba3:	jmp    42ebb6 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42eba5:	cmp    rax,QWORD PTR [r12+0x20]
  42ebaa:	jb     42ebb6 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42ebac:	mov    rdi,r12
  42ebaf:	xor    esi,esi
  42ebb1:	call   QWORD PTR [r12+0x48]
  42ebb6:	movzx  esi,BYTE PTR [r13+0x4]
  42ebbb:	mov    rdi,r12
  42ebbe:	call   r14
  42ebc1:	dec    ebp
  42ebc3:	je     42ecca <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42ebc9:	add    r13,0x5
  42ebcd:	jmp    42ebf8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
  42ebcf:	nop
  42ebd0:	mov    esi,0x20
  42ebd5:	mov    rdx,r15
  42ebd8:	call   406080 <memset@plt>
  42ebdd:	add    QWORD PTR [r12+0x28],r15
  42ebe2:	movzx  esi,BYTE PTR [r13+0x0]
  42ebe7:	mov    rdi,r12
  42ebea:	call   r14
  42ebed:	inc    r13
  42ebf0:	test   ebp,ebp
  42ebf2:	je     42ecca <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42ebf8:	dec    ebp
  42ebfa:	mov    rax,QWORD PTR [r12+0x28]
  42ebff:	lea    rcx,[rax+0x1]
  42ec03:	mov    QWORD PTR [r12+0x28],rcx
  42ec08:	mov    BYTE PTR [rax],0x2c
  42ec0b:	cmp    BYTE PTR [r12+0x31],0x0
  42ec11:	mov    rax,QWORD PTR [r12+0x28]
  42ec16:	je     42ecb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x260>
  42ec1c:	lea    rcx,[rax+0x1]
  42ec20:	mov    QWORD PTR [r12+0x28],rcx
  42ec25:	mov    BYTE PTR [rax],0xa
  42ec28:	movsxd rax,DWORD PTR [r12+0x38]
  42ec2d:	movzx  r15d,BYTE PTR [r12+0x31]
  42ec33:	imul   r15,rax
  42ec37:	mov    rbx,QWORD PTR [r12+0x20]
  42ec3c:	mov    rdi,QWORD PTR [r12+0x28]
  42ec41:	lea    rax,[rdi+r15*1]
  42ec45:	cmp    rax,rbx
  42ec48:	jbe    42ebd0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42ec4a:	cmp    rdi,rbx
  42ec4d:	jb     42ec63 <flatcc_json_printer_utype_enum_vector_field@@Base+0x213>
  42ec4f:	mov    rdi,r12
  42ec52:	xor    esi,esi
  42ec54:	call   QWORD PTR [r12+0x48]
  42ec59:	mov    rbx,QWORD PTR [r12+0x20]
  42ec5e:	mov    rdi,QWORD PTR [r12+0x28]
  42ec63:	sub    rbx,rdi
  42ec66:	cmp    rbx,r15
  42ec69:	jae    42ebd0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42ec6f:	nop
  42ec70:	mov    esi,0x20
  42ec75:	mov    rdx,rbx
  42ec78:	call   406080 <memset@plt>
  42ec7d:	add    QWORD PTR [r12+0x28],rbx
  42ec82:	sub    r15,rbx
  42ec85:	mov    rdi,r12
  42ec88:	xor    esi,esi
  42ec8a:	call   QWORD PTR [r12+0x48]
  42ec8f:	mov    rbx,QWORD PTR [r12+0x20]
  42ec94:	mov    rdi,QWORD PTR [r12+0x28]
  42ec99:	sub    rbx,rdi
  42ec9c:	cmp    r15,rbx
  42ec9f:	ja     42ec70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
  42eca1:	jmp    42ebd0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42eca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ecb0:	cmp    rax,QWORD PTR [r12+0x20]
  42ecb5:	jb     42ebe2 <flatcc_json_printer_utype_enum_vector_field@@Base+0x192>
  42ecbb:	mov    rdi,r12
  42ecbe:	xor    esi,esi
  42ecc0:	call   QWORD PTR [r12+0x48]
  42ecc5:	jmp    42ebe2 <flatcc_json_printer_utype_enum_vector_field@@Base+0x192>
  42ecca:	cmp    BYTE PTR [r12+0x31],0x0
  42ecd0:	mov    r14,QWORD PTR [r12+0x28]
  42ecd5:	je     42ed88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x338>
  42ecdb:	lea    rax,[r14+0x1]
  42ecdf:	mov    QWORD PTR [r12+0x28],rax
  42ece4:	mov    BYTE PTR [r14],0xa
  42ece8:	movsxd rax,DWORD PTR [r12+0x38]
  42eced:	dec    rax
  42ecf0:	mov    DWORD PTR [r12+0x38],eax
  42ecf5:	movzx  r14d,BYTE PTR [r12+0x31]
  42ecfb:	imul   r14,rax
  42ecff:	mov    rbx,QWORD PTR [r12+0x20]
  42ed04:	mov    rdi,QWORD PTR [r12+0x28]
  42ed09:	lea    rax,[rdi+r14*1]
  42ed0d:	cmp    rax,rbx
  42ed10:	jbe    42ed71 <flatcc_json_printer_utype_enum_vector_field@@Base+0x321>
  42ed12:	cmp    rdi,rbx
  42ed15:	jb     42ed2b <flatcc_json_printer_utype_enum_vector_field@@Base+0x2db>
  42ed17:	mov    rdi,r12
  42ed1a:	xor    esi,esi
  42ed1c:	call   QWORD PTR [r12+0x48]
  42ed21:	mov    rbx,QWORD PTR [r12+0x20]
  42ed26:	mov    rdi,QWORD PTR [r12+0x28]
  42ed2b:	sub    rbx,rdi
  42ed2e:	cmp    rbx,r14
  42ed31:	jae    42ed71 <flatcc_json_printer_utype_enum_vector_field@@Base+0x321>
  42ed33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ed3d:	nop    DWORD PTR [rax]
  42ed40:	mov    esi,0x20
  42ed45:	mov    rdx,rbx
  42ed48:	call   406080 <memset@plt>
  42ed4d:	add    QWORD PTR [r12+0x28],rbx
  42ed52:	sub    r14,rbx
  42ed55:	mov    rdi,r12
  42ed58:	xor    esi,esi
  42ed5a:	call   QWORD PTR [r12+0x48]
  42ed5f:	mov    rbx,QWORD PTR [r12+0x20]
  42ed64:	mov    rdi,QWORD PTR [r12+0x28]
  42ed69:	sub    rbx,rdi
  42ed6c:	cmp    r14,rbx
  42ed6f:	ja     42ed40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2f0>
  42ed71:	mov    esi,0x20
  42ed76:	mov    rdx,r14
  42ed79:	call   406080 <memset@plt>
  42ed7e:	add    r14,QWORD PTR [r12+0x28]
  42ed83:	mov    QWORD PTR [r12+0x28],r14
  42ed88:	lea    rax,[r14+0x1]
  42ed8c:	mov    QWORD PTR [r12+0x28],rax
  42ed91:	mov    BYTE PTR [r14],0x5d
  42ed95:	add    rsp,0x8
  42ed99:	pop    rbx
  42ed9a:	pop    r12
  42ed9c:	pop    r13
  42ed9e:	pop    r14
  42eda0:	pop    r15
  42eda2:	pop    rbp
  42eda3:	ret    
  42eda4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42edae:	xchg   ax,ax

000000000042edb0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  42edb0:	push   rbp
  42edb1:	push   r15
  42edb3:	push   r14
  42edb5:	push   r13
  42edb7:	push   r12
  42edb9:	push   rbx
  42edba:	push   rax
  42edbb:	mov    r12,rdi
  42edbe:	cmp    BYTE PTR [rdi+0x33],0x0
  42edc2:	je     42edda <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a>
  42edc4:	mov    rdi,r12
  42edc7:	add    rsp,0x8
  42edcb:	pop    rbx
  42edcc:	pop    r12
  42edce:	pop    r13
  42edd0:	pop    r14
  42edd2:	pop    r15
  42edd4:	pop    rbp
  42edd5:	jmp    42bf80 <flatcc_json_printer_uint8_vector_field@@Base>
  42edda:	lea    eax,[rdx+rdx*1]
  42eddd:	add    eax,0x4
  42ede0:	cmp    eax,DWORD PTR [rsi+0x10]
  42ede3:	jge    42f0f5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42ede9:	mov    rdx,QWORD PTR [rsi+0x8]
  42eded:	mov    eax,eax
  42edef:	movzx  r13d,WORD PTR [rdx+rax*1]
  42edf4:	test   r13,r13
  42edf7:	je     42f0f5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42edfd:	add    r13,QWORD PTR [rsi]
  42ee00:	je     42f0f5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42ee06:	mov    r14,r9
  42ee09:	mov    eax,DWORD PTR [rsi+0x18]
  42ee0c:	lea    edx,[rax+0x1]
  42ee0f:	mov    DWORD PTR [rsi+0x18],edx
  42ee12:	test   eax,eax
  42ee14:	je     42ee27 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x77>
  42ee16:	mov    rax,QWORD PTR [r12+0x28]
  42ee1b:	lea    rdx,[rax+0x1]
  42ee1f:	mov    QWORD PTR [r12+0x28],rdx
  42ee24:	mov    BYTE PTR [rax],0x2c
  42ee27:	mov    ebx,DWORD PTR [r13+0x0]
  42ee2b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42ee30:	movsxd rdx,r8d
  42ee33:	mov    rdi,r12
  42ee36:	mov    rsi,rcx
  42ee39:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ee3e:	inc    DWORD PTR [r12+0x38]
  42ee43:	mov    rax,QWORD PTR [r12+0x28]
  42ee48:	lea    rcx,[rax+0x1]
  42ee4c:	mov    QWORD PTR [r12+0x28],rcx
  42ee51:	mov    BYTE PTR [rax],0x5b
  42ee54:	test   ebp,ebp
  42ee56:	je     42f02a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42ee5c:	add    r13,rbx
  42ee5f:	cmp    BYTE PTR [r12+0x31],0x0
  42ee65:	mov    rax,QWORD PTR [r12+0x28]
  42ee6a:	je     42ef05 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x155>
  42ee70:	lea    rcx,[rax+0x1]
  42ee74:	mov    QWORD PTR [r12+0x28],rcx
  42ee79:	mov    BYTE PTR [rax],0xa
  42ee7c:	movsxd rax,DWORD PTR [r12+0x38]
  42ee81:	movzx  r15d,BYTE PTR [r12+0x31]
  42ee87:	imul   r15,rax
  42ee8b:	mov    rbx,QWORD PTR [r12+0x20]
  42ee90:	mov    rdi,QWORD PTR [r12+0x28]
  42ee95:	lea    rax,[rdi+r15*1]
  42ee99:	cmp    rax,rbx
  42ee9c:	jbe    42eef1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42ee9e:	cmp    rdi,rbx
  42eea1:	jb     42eeb7 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x107>
  42eea3:	mov    rdi,r12
  42eea6:	xor    esi,esi
  42eea8:	call   QWORD PTR [r12+0x48]
  42eead:	mov    rbx,QWORD PTR [r12+0x20]
  42eeb2:	mov    rdi,QWORD PTR [r12+0x28]
  42eeb7:	sub    rbx,rdi
  42eeba:	cmp    rbx,r15
  42eebd:	jae    42eef1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42eebf:	nop
  42eec0:	mov    esi,0x20
  42eec5:	mov    rdx,rbx
  42eec8:	call   406080 <memset@plt>
  42eecd:	add    QWORD PTR [r12+0x28],rbx
  42eed2:	sub    r15,rbx
  42eed5:	mov    rdi,r12
  42eed8:	xor    esi,esi
  42eeda:	call   QWORD PTR [r12+0x48]
  42eedf:	mov    rbx,QWORD PTR [r12+0x20]
  42eee4:	mov    rdi,QWORD PTR [r12+0x28]
  42eee9:	sub    rbx,rdi
  42eeec:	cmp    r15,rbx
  42eeef:	ja     42eec0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
  42eef1:	mov    esi,0x20
  42eef6:	mov    rdx,r15
  42eef9:	call   406080 <memset@plt>
  42eefe:	add    QWORD PTR [r12+0x28],r15
  42ef03:	jmp    42ef16 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42ef05:	cmp    rax,QWORD PTR [r12+0x20]
  42ef0a:	jb     42ef16 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42ef0c:	mov    rdi,r12
  42ef0f:	xor    esi,esi
  42ef11:	call   QWORD PTR [r12+0x48]
  42ef16:	movzx  esi,BYTE PTR [r13+0x4]
  42ef1b:	mov    rdi,r12
  42ef1e:	call   r14
  42ef21:	dec    ebp
  42ef23:	je     42f02a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42ef29:	add    r13,0x5
  42ef2d:	jmp    42ef58 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
  42ef2f:	nop
  42ef30:	mov    esi,0x20
  42ef35:	mov    rdx,r15
  42ef38:	call   406080 <memset@plt>
  42ef3d:	add    QWORD PTR [r12+0x28],r15
  42ef42:	movzx  esi,BYTE PTR [r13+0x0]
  42ef47:	mov    rdi,r12
  42ef4a:	call   r14
  42ef4d:	inc    r13
  42ef50:	test   ebp,ebp
  42ef52:	je     42f02a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42ef58:	dec    ebp
  42ef5a:	mov    rax,QWORD PTR [r12+0x28]
  42ef5f:	lea    rcx,[rax+0x1]
  42ef63:	mov    QWORD PTR [r12+0x28],rcx
  42ef68:	mov    BYTE PTR [rax],0x2c
  42ef6b:	cmp    BYTE PTR [r12+0x31],0x0
  42ef71:	mov    rax,QWORD PTR [r12+0x28]
  42ef76:	je     42f010 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x260>
  42ef7c:	lea    rcx,[rax+0x1]
  42ef80:	mov    QWORD PTR [r12+0x28],rcx
  42ef85:	mov    BYTE PTR [rax],0xa
  42ef88:	movsxd rax,DWORD PTR [r12+0x38]
  42ef8d:	movzx  r15d,BYTE PTR [r12+0x31]
  42ef93:	imul   r15,rax
  42ef97:	mov    rbx,QWORD PTR [r12+0x20]
  42ef9c:	mov    rdi,QWORD PTR [r12+0x28]
  42efa1:	lea    rax,[rdi+r15*1]
  42efa5:	cmp    rax,rbx
  42efa8:	jbe    42ef30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42efaa:	cmp    rdi,rbx
  42efad:	jb     42efc3 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x213>
  42efaf:	mov    rdi,r12
  42efb2:	xor    esi,esi
  42efb4:	call   QWORD PTR [r12+0x48]
  42efb9:	mov    rbx,QWORD PTR [r12+0x20]
  42efbe:	mov    rdi,QWORD PTR [r12+0x28]
  42efc3:	sub    rbx,rdi
  42efc6:	cmp    rbx,r15
  42efc9:	jae    42ef30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42efcf:	nop
  42efd0:	mov    esi,0x20
  42efd5:	mov    rdx,rbx
  42efd8:	call   406080 <memset@plt>
  42efdd:	add    QWORD PTR [r12+0x28],rbx
  42efe2:	sub    r15,rbx
  42efe5:	mov    rdi,r12
  42efe8:	xor    esi,esi
  42efea:	call   QWORD PTR [r12+0x48]
  42efef:	mov    rbx,QWORD PTR [r12+0x20]
  42eff4:	mov    rdi,QWORD PTR [r12+0x28]
  42eff9:	sub    rbx,rdi
  42effc:	cmp    r15,rbx
  42efff:	ja     42efd0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
  42f001:	jmp    42ef30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42f006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f010:	cmp    rax,QWORD PTR [r12+0x20]
  42f015:	jb     42ef42 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x192>
  42f01b:	mov    rdi,r12
  42f01e:	xor    esi,esi
  42f020:	call   QWORD PTR [r12+0x48]
  42f025:	jmp    42ef42 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x192>
  42f02a:	cmp    BYTE PTR [r12+0x31],0x0
  42f030:	mov    r14,QWORD PTR [r12+0x28]
  42f035:	je     42f0e8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x338>
  42f03b:	lea    rax,[r14+0x1]
  42f03f:	mov    QWORD PTR [r12+0x28],rax
  42f044:	mov    BYTE PTR [r14],0xa
  42f048:	movsxd rax,DWORD PTR [r12+0x38]
  42f04d:	dec    rax
  42f050:	mov    DWORD PTR [r12+0x38],eax
  42f055:	movzx  r14d,BYTE PTR [r12+0x31]
  42f05b:	imul   r14,rax
  42f05f:	mov    rbx,QWORD PTR [r12+0x20]
  42f064:	mov    rdi,QWORD PTR [r12+0x28]
  42f069:	lea    rax,[rdi+r14*1]
  42f06d:	cmp    rax,rbx
  42f070:	jbe    42f0d1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x321>
  42f072:	cmp    rdi,rbx
  42f075:	jb     42f08b <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2db>
  42f077:	mov    rdi,r12
  42f07a:	xor    esi,esi
  42f07c:	call   QWORD PTR [r12+0x48]
  42f081:	mov    rbx,QWORD PTR [r12+0x20]
  42f086:	mov    rdi,QWORD PTR [r12+0x28]
  42f08b:	sub    rbx,rdi
  42f08e:	cmp    rbx,r14
  42f091:	jae    42f0d1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x321>
  42f093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f09d:	nop    DWORD PTR [rax]
  42f0a0:	mov    esi,0x20
  42f0a5:	mov    rdx,rbx
  42f0a8:	call   406080 <memset@plt>
  42f0ad:	add    QWORD PTR [r12+0x28],rbx
  42f0b2:	sub    r14,rbx
  42f0b5:	mov    rdi,r12
  42f0b8:	xor    esi,esi
  42f0ba:	call   QWORD PTR [r12+0x48]
  42f0bf:	mov    rbx,QWORD PTR [r12+0x20]
  42f0c4:	mov    rdi,QWORD PTR [r12+0x28]
  42f0c9:	sub    rbx,rdi
  42f0cc:	cmp    r14,rbx
  42f0cf:	ja     42f0a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2f0>
  42f0d1:	mov    esi,0x20
  42f0d6:	mov    rdx,r14
  42f0d9:	call   406080 <memset@plt>
  42f0de:	add    r14,QWORD PTR [r12+0x28]
  42f0e3:	mov    QWORD PTR [r12+0x28],r14
  42f0e8:	lea    rax,[r14+0x1]
  42f0ec:	mov    QWORD PTR [r12+0x28],rax
  42f0f1:	mov    BYTE PTR [r14],0x5d
  42f0f5:	add    rsp,0x8
  42f0f9:	pop    rbx
  42f0fa:	pop    r12
  42f0fc:	pop    r13
  42f0fe:	pop    r14
  42f100:	pop    r15
  42f102:	pop    rbp
  42f103:	ret    
  42f104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f10e:	xchg   ax,ax

000000000042f110 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  42f110:	push   rbp
  42f111:	push   r15
  42f113:	push   r14
  42f115:	push   r13
  42f117:	push   r12
  42f119:	push   rbx
  42f11a:	push   rax
  42f11b:	mov    r12,rdi
  42f11e:	cmp    BYTE PTR [rdi+0x33],0x0
  42f122:	je     42f13a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a>
  42f124:	mov    rdi,r12
  42f127:	add    rsp,0x8
  42f12b:	pop    rbx
  42f12c:	pop    r12
  42f12e:	pop    r13
  42f130:	pop    r14
  42f132:	pop    r15
  42f134:	pop    rbp
  42f135:	jmp    42c3b0 <flatcc_json_printer_uint16_vector_field@@Base>
  42f13a:	lea    eax,[rdx+rdx*1]
  42f13d:	add    eax,0x4
  42f140:	cmp    eax,DWORD PTR [rsi+0x10]
  42f143:	jge    42f455 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42f149:	mov    rdx,QWORD PTR [rsi+0x8]
  42f14d:	mov    eax,eax
  42f14f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f154:	test   r13,r13
  42f157:	je     42f455 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42f15d:	add    r13,QWORD PTR [rsi]
  42f160:	je     42f455 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42f166:	mov    r14,r9
  42f169:	mov    eax,DWORD PTR [rsi+0x18]
  42f16c:	lea    edx,[rax+0x1]
  42f16f:	mov    DWORD PTR [rsi+0x18],edx
  42f172:	test   eax,eax
  42f174:	je     42f187 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x77>
  42f176:	mov    rax,QWORD PTR [r12+0x28]
  42f17b:	lea    rdx,[rax+0x1]
  42f17f:	mov    QWORD PTR [r12+0x28],rdx
  42f184:	mov    BYTE PTR [rax],0x2c
  42f187:	mov    ebx,DWORD PTR [r13+0x0]
  42f18b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f190:	movsxd rdx,r8d
  42f193:	mov    rdi,r12
  42f196:	mov    rsi,rcx
  42f199:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42f19e:	inc    DWORD PTR [r12+0x38]
  42f1a3:	mov    rax,QWORD PTR [r12+0x28]
  42f1a8:	lea    rcx,[rax+0x1]
  42f1ac:	mov    QWORD PTR [r12+0x28],rcx
  42f1b1:	mov    BYTE PTR [rax],0x5b
  42f1b4:	test   ebp,ebp
  42f1b6:	je     42f38a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42f1bc:	add    r13,rbx
  42f1bf:	cmp    BYTE PTR [r12+0x31],0x0
  42f1c5:	mov    rax,QWORD PTR [r12+0x28]
  42f1ca:	je     42f265 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x155>
  42f1d0:	lea    rcx,[rax+0x1]
  42f1d4:	mov    QWORD PTR [r12+0x28],rcx
  42f1d9:	mov    BYTE PTR [rax],0xa
  42f1dc:	movsxd rax,DWORD PTR [r12+0x38]
  42f1e1:	movzx  r15d,BYTE PTR [r12+0x31]
  42f1e7:	imul   r15,rax
  42f1eb:	mov    rbx,QWORD PTR [r12+0x20]
  42f1f0:	mov    rdi,QWORD PTR [r12+0x28]
  42f1f5:	lea    rax,[rdi+r15*1]
  42f1f9:	cmp    rax,rbx
  42f1fc:	jbe    42f251 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42f1fe:	cmp    rdi,rbx
  42f201:	jb     42f217 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x107>
  42f203:	mov    rdi,r12
  42f206:	xor    esi,esi
  42f208:	call   QWORD PTR [r12+0x48]
  42f20d:	mov    rbx,QWORD PTR [r12+0x20]
  42f212:	mov    rdi,QWORD PTR [r12+0x28]
  42f217:	sub    rbx,rdi
  42f21a:	cmp    rbx,r15
  42f21d:	jae    42f251 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42f21f:	nop
  42f220:	mov    esi,0x20
  42f225:	mov    rdx,rbx
  42f228:	call   406080 <memset@plt>
  42f22d:	add    QWORD PTR [r12+0x28],rbx
  42f232:	sub    r15,rbx
  42f235:	mov    rdi,r12
  42f238:	xor    esi,esi
  42f23a:	call   QWORD PTR [r12+0x48]
  42f23f:	mov    rbx,QWORD PTR [r12+0x20]
  42f244:	mov    rdi,QWORD PTR [r12+0x28]
  42f249:	sub    rbx,rdi
  42f24c:	cmp    r15,rbx
  42f24f:	ja     42f220 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
  42f251:	mov    esi,0x20
  42f256:	mov    rdx,r15
  42f259:	call   406080 <memset@plt>
  42f25e:	add    QWORD PTR [r12+0x28],r15
  42f263:	jmp    42f276 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42f265:	cmp    rax,QWORD PTR [r12+0x20]
  42f26a:	jb     42f276 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42f26c:	mov    rdi,r12
  42f26f:	xor    esi,esi
  42f271:	call   QWORD PTR [r12+0x48]
  42f276:	movzx  esi,WORD PTR [r13+0x4]
  42f27b:	mov    rdi,r12
  42f27e:	call   r14
  42f281:	dec    ebp
  42f283:	je     42f38a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42f289:	add    r13,0x6
  42f28d:	jmp    42f2b9 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a9>
  42f28f:	nop
  42f290:	mov    esi,0x20
  42f295:	mov    rdx,r15
  42f298:	call   406080 <memset@plt>
  42f29d:	add    QWORD PTR [r12+0x28],r15
  42f2a2:	movzx  esi,WORD PTR [r13+0x0]
  42f2a7:	mov    rdi,r12
  42f2aa:	call   r14
  42f2ad:	add    r13,0x2
  42f2b1:	test   ebp,ebp
  42f2b3:	je     42f38a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42f2b9:	dec    ebp
  42f2bb:	mov    rax,QWORD PTR [r12+0x28]
  42f2c0:	lea    rcx,[rax+0x1]
  42f2c4:	mov    QWORD PTR [r12+0x28],rcx
  42f2c9:	mov    BYTE PTR [rax],0x2c
  42f2cc:	cmp    BYTE PTR [r12+0x31],0x0
  42f2d2:	mov    rax,QWORD PTR [r12+0x28]
  42f2d7:	je     42f370 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x260>
  42f2dd:	lea    rcx,[rax+0x1]
  42f2e1:	mov    QWORD PTR [r12+0x28],rcx
  42f2e6:	mov    BYTE PTR [rax],0xa
  42f2e9:	movsxd rax,DWORD PTR [r12+0x38]
  42f2ee:	movzx  r15d,BYTE PTR [r12+0x31]
  42f2f4:	imul   r15,rax
  42f2f8:	mov    rbx,QWORD PTR [r12+0x20]
  42f2fd:	mov    rdi,QWORD PTR [r12+0x28]
  42f302:	lea    rax,[rdi+r15*1]
  42f306:	cmp    rax,rbx
  42f309:	jbe    42f290 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42f30b:	cmp    rdi,rbx
  42f30e:	jb     42f324 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
  42f310:	mov    rdi,r12
  42f313:	xor    esi,esi
  42f315:	call   QWORD PTR [r12+0x48]
  42f31a:	mov    rbx,QWORD PTR [r12+0x20]
  42f31f:	mov    rdi,QWORD PTR [r12+0x28]
  42f324:	sub    rbx,rdi
  42f327:	cmp    rbx,r15
  42f32a:	jae    42f290 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42f330:	mov    esi,0x20
  42f335:	mov    rdx,rbx
  42f338:	call   406080 <memset@plt>
  42f33d:	add    QWORD PTR [r12+0x28],rbx
  42f342:	sub    r15,rbx
  42f345:	mov    rdi,r12
  42f348:	xor    esi,esi
  42f34a:	call   QWORD PTR [r12+0x48]
  42f34f:	mov    rbx,QWORD PTR [r12+0x20]
  42f354:	mov    rdi,QWORD PTR [r12+0x28]
  42f359:	sub    rbx,rdi
  42f35c:	cmp    r15,rbx
  42f35f:	ja     42f330 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
  42f361:	jmp    42f290 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42f366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f370:	cmp    rax,QWORD PTR [r12+0x20]
  42f375:	jb     42f2a2 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x192>
  42f37b:	mov    rdi,r12
  42f37e:	xor    esi,esi
  42f380:	call   QWORD PTR [r12+0x48]
  42f385:	jmp    42f2a2 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x192>
  42f38a:	cmp    BYTE PTR [r12+0x31],0x0
  42f390:	mov    r14,QWORD PTR [r12+0x28]
  42f395:	je     42f448 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x338>
  42f39b:	lea    rax,[r14+0x1]
  42f39f:	mov    QWORD PTR [r12+0x28],rax
  42f3a4:	mov    BYTE PTR [r14],0xa
  42f3a8:	movsxd rax,DWORD PTR [r12+0x38]
  42f3ad:	dec    rax
  42f3b0:	mov    DWORD PTR [r12+0x38],eax
  42f3b5:	movzx  r14d,BYTE PTR [r12+0x31]
  42f3bb:	imul   r14,rax
  42f3bf:	mov    rbx,QWORD PTR [r12+0x20]
  42f3c4:	mov    rdi,QWORD PTR [r12+0x28]
  42f3c9:	lea    rax,[rdi+r14*1]
  42f3cd:	cmp    rax,rbx
  42f3d0:	jbe    42f431 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x321>
  42f3d2:	cmp    rdi,rbx
  42f3d5:	jb     42f3eb <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2db>
  42f3d7:	mov    rdi,r12
  42f3da:	xor    esi,esi
  42f3dc:	call   QWORD PTR [r12+0x48]
  42f3e1:	mov    rbx,QWORD PTR [r12+0x20]
  42f3e6:	mov    rdi,QWORD PTR [r12+0x28]
  42f3eb:	sub    rbx,rdi
  42f3ee:	cmp    rbx,r14
  42f3f1:	jae    42f431 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x321>
  42f3f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f3fd:	nop    DWORD PTR [rax]
  42f400:	mov    esi,0x20
  42f405:	mov    rdx,rbx
  42f408:	call   406080 <memset@plt>
  42f40d:	add    QWORD PTR [r12+0x28],rbx
  42f412:	sub    r14,rbx
  42f415:	mov    rdi,r12
  42f418:	xor    esi,esi
  42f41a:	call   QWORD PTR [r12+0x48]
  42f41f:	mov    rbx,QWORD PTR [r12+0x20]
  42f424:	mov    rdi,QWORD PTR [r12+0x28]
  42f429:	sub    rbx,rdi
  42f42c:	cmp    r14,rbx
  42f42f:	ja     42f400 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2f0>
  42f431:	mov    esi,0x20
  42f436:	mov    rdx,r14
  42f439:	call   406080 <memset@plt>
  42f43e:	add    r14,QWORD PTR [r12+0x28]
  42f443:	mov    QWORD PTR [r12+0x28],r14
  42f448:	lea    rax,[r14+0x1]
  42f44c:	mov    QWORD PTR [r12+0x28],rax
  42f451:	mov    BYTE PTR [r14],0x5d
  42f455:	add    rsp,0x8
  42f459:	pop    rbx
  42f45a:	pop    r12
  42f45c:	pop    r13
  42f45e:	pop    r14
  42f460:	pop    r15
  42f462:	pop    rbp
  42f463:	ret    
  42f464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f46e:	xchg   ax,ax

000000000042f470 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  42f470:	push   rbp
  42f471:	push   r15
  42f473:	push   r14
  42f475:	push   r13
  42f477:	push   r12
  42f479:	push   rbx
  42f47a:	push   rax
  42f47b:	mov    r12,rdi
  42f47e:	cmp    BYTE PTR [rdi+0x33],0x0
  42f482:	je     42f49a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a>
  42f484:	mov    rdi,r12
  42f487:	add    rsp,0x8
  42f48b:	pop    rbx
  42f48c:	pop    r12
  42f48e:	pop    r13
  42f490:	pop    r14
  42f492:	pop    r15
  42f494:	pop    rbp
  42f495:	jmp    42c940 <flatcc_json_printer_uint32_vector_field@@Base>
  42f49a:	lea    eax,[rdx+rdx*1]
  42f49d:	add    eax,0x4
  42f4a0:	cmp    eax,DWORD PTR [rsi+0x10]
  42f4a3:	jge    42f7b5 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42f4a9:	mov    rdx,QWORD PTR [rsi+0x8]
  42f4ad:	mov    eax,eax
  42f4af:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f4b4:	test   r13,r13
  42f4b7:	je     42f7b5 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42f4bd:	add    r13,QWORD PTR [rsi]
  42f4c0:	je     42f7b5 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42f4c6:	mov    r14,r9
  42f4c9:	mov    eax,DWORD PTR [rsi+0x18]
  42f4cc:	lea    edx,[rax+0x1]
  42f4cf:	mov    DWORD PTR [rsi+0x18],edx
  42f4d2:	test   eax,eax
  42f4d4:	je     42f4e7 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x77>
  42f4d6:	mov    rax,QWORD PTR [r12+0x28]
  42f4db:	lea    rdx,[rax+0x1]
  42f4df:	mov    QWORD PTR [r12+0x28],rdx
  42f4e4:	mov    BYTE PTR [rax],0x2c
  42f4e7:	mov    ebx,DWORD PTR [r13+0x0]
  42f4eb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f4f0:	movsxd rdx,r8d
  42f4f3:	mov    rdi,r12
  42f4f6:	mov    rsi,rcx
  42f4f9:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42f4fe:	inc    DWORD PTR [r12+0x38]
  42f503:	mov    rax,QWORD PTR [r12+0x28]
  42f508:	lea    rcx,[rax+0x1]
  42f50c:	mov    QWORD PTR [r12+0x28],rcx
  42f511:	mov    BYTE PTR [rax],0x5b
  42f514:	test   ebp,ebp
  42f516:	je     42f6ea <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42f51c:	add    r13,rbx
  42f51f:	cmp    BYTE PTR [r12+0x31],0x0
  42f525:	mov    rax,QWORD PTR [r12+0x28]
  42f52a:	je     42f5c5 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x155>
  42f530:	lea    rcx,[rax+0x1]
  42f534:	mov    QWORD PTR [r12+0x28],rcx
  42f539:	mov    BYTE PTR [rax],0xa
  42f53c:	movsxd rax,DWORD PTR [r12+0x38]
  42f541:	movzx  r15d,BYTE PTR [r12+0x31]
  42f547:	imul   r15,rax
  42f54b:	mov    rbx,QWORD PTR [r12+0x20]
  42f550:	mov    rdi,QWORD PTR [r12+0x28]
  42f555:	lea    rax,[rdi+r15*1]
  42f559:	cmp    rax,rbx
  42f55c:	jbe    42f5b1 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42f55e:	cmp    rdi,rbx
  42f561:	jb     42f577 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x107>
  42f563:	mov    rdi,r12
  42f566:	xor    esi,esi
  42f568:	call   QWORD PTR [r12+0x48]
  42f56d:	mov    rbx,QWORD PTR [r12+0x20]
  42f572:	mov    rdi,QWORD PTR [r12+0x28]
  42f577:	sub    rbx,rdi
  42f57a:	cmp    rbx,r15
  42f57d:	jae    42f5b1 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42f57f:	nop
  42f580:	mov    esi,0x20
  42f585:	mov    rdx,rbx
  42f588:	call   406080 <memset@plt>
  42f58d:	add    QWORD PTR [r12+0x28],rbx
  42f592:	sub    r15,rbx
  42f595:	mov    rdi,r12
  42f598:	xor    esi,esi
  42f59a:	call   QWORD PTR [r12+0x48]
  42f59f:	mov    rbx,QWORD PTR [r12+0x20]
  42f5a4:	mov    rdi,QWORD PTR [r12+0x28]
  42f5a9:	sub    rbx,rdi
  42f5ac:	cmp    r15,rbx
  42f5af:	ja     42f580 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
  42f5b1:	mov    esi,0x20
  42f5b6:	mov    rdx,r15
  42f5b9:	call   406080 <memset@plt>
  42f5be:	add    QWORD PTR [r12+0x28],r15
  42f5c3:	jmp    42f5d6 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42f5c5:	cmp    rax,QWORD PTR [r12+0x20]
  42f5ca:	jb     42f5d6 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42f5cc:	mov    rdi,r12
  42f5cf:	xor    esi,esi
  42f5d1:	call   QWORD PTR [r12+0x48]
  42f5d6:	mov    esi,DWORD PTR [r13+0x4]
  42f5da:	mov    rdi,r12
  42f5dd:	call   r14
  42f5e0:	dec    ebp
  42f5e2:	je     42f6ea <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42f5e8:	add    r13,0x8
  42f5ec:	jmp    42f618 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
  42f5ee:	xchg   ax,ax
  42f5f0:	mov    esi,0x20
  42f5f5:	mov    rdx,r15
  42f5f8:	call   406080 <memset@plt>
  42f5fd:	add    QWORD PTR [r12+0x28],r15
  42f602:	mov    esi,DWORD PTR [r13+0x0]
  42f606:	mov    rdi,r12
  42f609:	call   r14
  42f60c:	add    r13,0x4
  42f610:	test   ebp,ebp
  42f612:	je     42f6ea <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42f618:	dec    ebp
  42f61a:	mov    rax,QWORD PTR [r12+0x28]
  42f61f:	lea    rcx,[rax+0x1]
  42f623:	mov    QWORD PTR [r12+0x28],rcx
  42f628:	mov    BYTE PTR [rax],0x2c
  42f62b:	cmp    BYTE PTR [r12+0x31],0x0
  42f631:	mov    rax,QWORD PTR [r12+0x28]
  42f636:	je     42f6d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  42f63c:	lea    rcx,[rax+0x1]
  42f640:	mov    QWORD PTR [r12+0x28],rcx
  42f645:	mov    BYTE PTR [rax],0xa
  42f648:	movsxd rax,DWORD PTR [r12+0x38]
  42f64d:	movzx  r15d,BYTE PTR [r12+0x31]
  42f653:	imul   r15,rax
  42f657:	mov    rbx,QWORD PTR [r12+0x20]
  42f65c:	mov    rdi,QWORD PTR [r12+0x28]
  42f661:	lea    rax,[rdi+r15*1]
  42f665:	cmp    rax,rbx
  42f668:	jbe    42f5f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42f66a:	cmp    rdi,rbx
  42f66d:	jb     42f683 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x213>
  42f66f:	mov    rdi,r12
  42f672:	xor    esi,esi
  42f674:	call   QWORD PTR [r12+0x48]
  42f679:	mov    rbx,QWORD PTR [r12+0x20]
  42f67e:	mov    rdi,QWORD PTR [r12+0x28]
  42f683:	sub    rbx,rdi
  42f686:	cmp    rbx,r15
  42f689:	jae    42f5f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42f68f:	nop
  42f690:	mov    esi,0x20
  42f695:	mov    rdx,rbx
  42f698:	call   406080 <memset@plt>
  42f69d:	add    QWORD PTR [r12+0x28],rbx
  42f6a2:	sub    r15,rbx
  42f6a5:	mov    rdi,r12
  42f6a8:	xor    esi,esi
  42f6aa:	call   QWORD PTR [r12+0x48]
  42f6af:	mov    rbx,QWORD PTR [r12+0x20]
  42f6b4:	mov    rdi,QWORD PTR [r12+0x28]
  42f6b9:	sub    rbx,rdi
  42f6bc:	cmp    r15,rbx
  42f6bf:	ja     42f690 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
  42f6c1:	jmp    42f5f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42f6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f6d0:	cmp    rax,QWORD PTR [r12+0x20]
  42f6d5:	jb     42f602 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x192>
  42f6db:	mov    rdi,r12
  42f6de:	xor    esi,esi
  42f6e0:	call   QWORD PTR [r12+0x48]
  42f6e5:	jmp    42f602 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x192>
  42f6ea:	cmp    BYTE PTR [r12+0x31],0x0
  42f6f0:	mov    r14,QWORD PTR [r12+0x28]
  42f6f5:	je     42f7a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
  42f6fb:	lea    rax,[r14+0x1]
  42f6ff:	mov    QWORD PTR [r12+0x28],rax
  42f704:	mov    BYTE PTR [r14],0xa
  42f708:	movsxd rax,DWORD PTR [r12+0x38]
  42f70d:	dec    rax
  42f710:	mov    DWORD PTR [r12+0x38],eax
  42f715:	movzx  r14d,BYTE PTR [r12+0x31]
  42f71b:	imul   r14,rax
  42f71f:	mov    rbx,QWORD PTR [r12+0x20]
  42f724:	mov    rdi,QWORD PTR [r12+0x28]
  42f729:	lea    rax,[rdi+r14*1]
  42f72d:	cmp    rax,rbx
  42f730:	jbe    42f791 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42f732:	cmp    rdi,rbx
  42f735:	jb     42f74b <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2db>
  42f737:	mov    rdi,r12
  42f73a:	xor    esi,esi
  42f73c:	call   QWORD PTR [r12+0x48]
  42f741:	mov    rbx,QWORD PTR [r12+0x20]
  42f746:	mov    rdi,QWORD PTR [r12+0x28]
  42f74b:	sub    rbx,rdi
  42f74e:	cmp    rbx,r14
  42f751:	jae    42f791 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42f753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f75d:	nop    DWORD PTR [rax]
  42f760:	mov    esi,0x20
  42f765:	mov    rdx,rbx
  42f768:	call   406080 <memset@plt>
  42f76d:	add    QWORD PTR [r12+0x28],rbx
  42f772:	sub    r14,rbx
  42f775:	mov    rdi,r12
  42f778:	xor    esi,esi
  42f77a:	call   QWORD PTR [r12+0x48]
  42f77f:	mov    rbx,QWORD PTR [r12+0x20]
  42f784:	mov    rdi,QWORD PTR [r12+0x28]
  42f789:	sub    rbx,rdi
  42f78c:	cmp    r14,rbx
  42f78f:	ja     42f760 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2f0>
  42f791:	mov    esi,0x20
  42f796:	mov    rdx,r14
  42f799:	call   406080 <memset@plt>
  42f79e:	add    r14,QWORD PTR [r12+0x28]
  42f7a3:	mov    QWORD PTR [r12+0x28],r14
  42f7a8:	lea    rax,[r14+0x1]
  42f7ac:	mov    QWORD PTR [r12+0x28],rax
  42f7b1:	mov    BYTE PTR [r14],0x5d
  42f7b5:	add    rsp,0x8
  42f7b9:	pop    rbx
  42f7ba:	pop    r12
  42f7bc:	pop    r13
  42f7be:	pop    r14
  42f7c0:	pop    r15
  42f7c2:	pop    rbp
  42f7c3:	ret    
  42f7c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f7ce:	xchg   ax,ax

000000000042f7d0 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  42f7d0:	push   rbp
  42f7d1:	push   r15
  42f7d3:	push   r14
  42f7d5:	push   r13
  42f7d7:	push   r12
  42f7d9:	push   rbx
  42f7da:	push   rax
  42f7db:	mov    r12,rdi
  42f7de:	cmp    BYTE PTR [rdi+0x33],0x0
  42f7e2:	je     42f7fa <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a>
  42f7e4:	mov    rdi,r12
  42f7e7:	add    rsp,0x8
  42f7eb:	pop    rbx
  42f7ec:	pop    r12
  42f7ee:	pop    r13
  42f7f0:	pop    r14
  42f7f2:	pop    r15
  42f7f4:	pop    rbp
  42f7f5:	jmp    42cc60 <flatcc_json_printer_uint64_vector_field@@Base>
  42f7fa:	lea    eax,[rdx+rdx*1]
  42f7fd:	add    eax,0x4
  42f800:	cmp    eax,DWORD PTR [rsi+0x10]
  42f803:	jge    42fb15 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42f809:	mov    rdx,QWORD PTR [rsi+0x8]
  42f80d:	mov    eax,eax
  42f80f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42f814:	test   r13,r13
  42f817:	je     42fb15 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42f81d:	add    r13,QWORD PTR [rsi]
  42f820:	je     42fb15 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42f826:	mov    r14,r9
  42f829:	mov    eax,DWORD PTR [rsi+0x18]
  42f82c:	lea    edx,[rax+0x1]
  42f82f:	mov    DWORD PTR [rsi+0x18],edx
  42f832:	test   eax,eax
  42f834:	je     42f847 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x77>
  42f836:	mov    rax,QWORD PTR [r12+0x28]
  42f83b:	lea    rdx,[rax+0x1]
  42f83f:	mov    QWORD PTR [r12+0x28],rdx
  42f844:	mov    BYTE PTR [rax],0x2c
  42f847:	mov    ebx,DWORD PTR [r13+0x0]
  42f84b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42f850:	movsxd rdx,r8d
  42f853:	mov    rdi,r12
  42f856:	mov    rsi,rcx
  42f859:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42f85e:	inc    DWORD PTR [r12+0x38]
  42f863:	mov    rax,QWORD PTR [r12+0x28]
  42f868:	lea    rcx,[rax+0x1]
  42f86c:	mov    QWORD PTR [r12+0x28],rcx
  42f871:	mov    BYTE PTR [rax],0x5b
  42f874:	test   ebp,ebp
  42f876:	je     42fa4a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42f87c:	add    r13,rbx
  42f87f:	cmp    BYTE PTR [r12+0x31],0x0
  42f885:	mov    rax,QWORD PTR [r12+0x28]
  42f88a:	je     42f925 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x155>
  42f890:	lea    rcx,[rax+0x1]
  42f894:	mov    QWORD PTR [r12+0x28],rcx
  42f899:	mov    BYTE PTR [rax],0xa
  42f89c:	movsxd rax,DWORD PTR [r12+0x38]
  42f8a1:	movzx  r15d,BYTE PTR [r12+0x31]
  42f8a7:	imul   r15,rax
  42f8ab:	mov    rbx,QWORD PTR [r12+0x20]
  42f8b0:	mov    rdi,QWORD PTR [r12+0x28]
  42f8b5:	lea    rax,[rdi+r15*1]
  42f8b9:	cmp    rax,rbx
  42f8bc:	jbe    42f911 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42f8be:	cmp    rdi,rbx
  42f8c1:	jb     42f8d7 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x107>
  42f8c3:	mov    rdi,r12
  42f8c6:	xor    esi,esi
  42f8c8:	call   QWORD PTR [r12+0x48]
  42f8cd:	mov    rbx,QWORD PTR [r12+0x20]
  42f8d2:	mov    rdi,QWORD PTR [r12+0x28]
  42f8d7:	sub    rbx,rdi
  42f8da:	cmp    rbx,r15
  42f8dd:	jae    42f911 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42f8df:	nop
  42f8e0:	mov    esi,0x20
  42f8e5:	mov    rdx,rbx
  42f8e8:	call   406080 <memset@plt>
  42f8ed:	add    QWORD PTR [r12+0x28],rbx
  42f8f2:	sub    r15,rbx
  42f8f5:	mov    rdi,r12
  42f8f8:	xor    esi,esi
  42f8fa:	call   QWORD PTR [r12+0x48]
  42f8ff:	mov    rbx,QWORD PTR [r12+0x20]
  42f904:	mov    rdi,QWORD PTR [r12+0x28]
  42f909:	sub    rbx,rdi
  42f90c:	cmp    r15,rbx
  42f90f:	ja     42f8e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
  42f911:	mov    esi,0x20
  42f916:	mov    rdx,r15
  42f919:	call   406080 <memset@plt>
  42f91e:	add    QWORD PTR [r12+0x28],r15
  42f923:	jmp    42f936 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42f925:	cmp    rax,QWORD PTR [r12+0x20]
  42f92a:	jb     42f936 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42f92c:	mov    rdi,r12
  42f92f:	xor    esi,esi
  42f931:	call   QWORD PTR [r12+0x48]
  42f936:	mov    rsi,QWORD PTR [r13+0x4]
  42f93a:	mov    rdi,r12
  42f93d:	call   r14
  42f940:	dec    ebp
  42f942:	je     42fa4a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42f948:	add    r13,0xc
  42f94c:	jmp    42f978 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
  42f94e:	xchg   ax,ax
  42f950:	mov    esi,0x20
  42f955:	mov    rdx,r15
  42f958:	call   406080 <memset@plt>
  42f95d:	add    QWORD PTR [r12+0x28],r15
  42f962:	mov    rsi,QWORD PTR [r13+0x0]
  42f966:	mov    rdi,r12
  42f969:	call   r14
  42f96c:	add    r13,0x8
  42f970:	test   ebp,ebp
  42f972:	je     42fa4a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42f978:	dec    ebp
  42f97a:	mov    rax,QWORD PTR [r12+0x28]
  42f97f:	lea    rcx,[rax+0x1]
  42f983:	mov    QWORD PTR [r12+0x28],rcx
  42f988:	mov    BYTE PTR [rax],0x2c
  42f98b:	cmp    BYTE PTR [r12+0x31],0x0
  42f991:	mov    rax,QWORD PTR [r12+0x28]
  42f996:	je     42fa30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x260>
  42f99c:	lea    rcx,[rax+0x1]
  42f9a0:	mov    QWORD PTR [r12+0x28],rcx
  42f9a5:	mov    BYTE PTR [rax],0xa
  42f9a8:	movsxd rax,DWORD PTR [r12+0x38]
  42f9ad:	movzx  r15d,BYTE PTR [r12+0x31]
  42f9b3:	imul   r15,rax
  42f9b7:	mov    rbx,QWORD PTR [r12+0x20]
  42f9bc:	mov    rdi,QWORD PTR [r12+0x28]
  42f9c1:	lea    rax,[rdi+r15*1]
  42f9c5:	cmp    rax,rbx
  42f9c8:	jbe    42f950 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42f9ca:	cmp    rdi,rbx
  42f9cd:	jb     42f9e3 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x213>
  42f9cf:	mov    rdi,r12
  42f9d2:	xor    esi,esi
  42f9d4:	call   QWORD PTR [r12+0x48]
  42f9d9:	mov    rbx,QWORD PTR [r12+0x20]
  42f9de:	mov    rdi,QWORD PTR [r12+0x28]
  42f9e3:	sub    rbx,rdi
  42f9e6:	cmp    rbx,r15
  42f9e9:	jae    42f950 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42f9ef:	nop
  42f9f0:	mov    esi,0x20
  42f9f5:	mov    rdx,rbx
  42f9f8:	call   406080 <memset@plt>
  42f9fd:	add    QWORD PTR [r12+0x28],rbx
  42fa02:	sub    r15,rbx
  42fa05:	mov    rdi,r12
  42fa08:	xor    esi,esi
  42fa0a:	call   QWORD PTR [r12+0x48]
  42fa0f:	mov    rbx,QWORD PTR [r12+0x20]
  42fa14:	mov    rdi,QWORD PTR [r12+0x28]
  42fa19:	sub    rbx,rdi
  42fa1c:	cmp    r15,rbx
  42fa1f:	ja     42f9f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
  42fa21:	jmp    42f950 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42fa26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa30:	cmp    rax,QWORD PTR [r12+0x20]
  42fa35:	jb     42f962 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x192>
  42fa3b:	mov    rdi,r12
  42fa3e:	xor    esi,esi
  42fa40:	call   QWORD PTR [r12+0x48]
  42fa45:	jmp    42f962 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x192>
  42fa4a:	cmp    BYTE PTR [r12+0x31],0x0
  42fa50:	mov    r14,QWORD PTR [r12+0x28]
  42fa55:	je     42fb08 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x338>
  42fa5b:	lea    rax,[r14+0x1]
  42fa5f:	mov    QWORD PTR [r12+0x28],rax
  42fa64:	mov    BYTE PTR [r14],0xa
  42fa68:	movsxd rax,DWORD PTR [r12+0x38]
  42fa6d:	dec    rax
  42fa70:	mov    DWORD PTR [r12+0x38],eax
  42fa75:	movzx  r14d,BYTE PTR [r12+0x31]
  42fa7b:	imul   r14,rax
  42fa7f:	mov    rbx,QWORD PTR [r12+0x20]
  42fa84:	mov    rdi,QWORD PTR [r12+0x28]
  42fa89:	lea    rax,[rdi+r14*1]
  42fa8d:	cmp    rax,rbx
  42fa90:	jbe    42faf1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42fa92:	cmp    rdi,rbx
  42fa95:	jb     42faab <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2db>
  42fa97:	mov    rdi,r12
  42fa9a:	xor    esi,esi
  42fa9c:	call   QWORD PTR [r12+0x48]
  42faa1:	mov    rbx,QWORD PTR [r12+0x20]
  42faa6:	mov    rdi,QWORD PTR [r12+0x28]
  42faab:	sub    rbx,rdi
  42faae:	cmp    rbx,r14
  42fab1:	jae    42faf1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42fab3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fabd:	nop    DWORD PTR [rax]
  42fac0:	mov    esi,0x20
  42fac5:	mov    rdx,rbx
  42fac8:	call   406080 <memset@plt>
  42facd:	add    QWORD PTR [r12+0x28],rbx
  42fad2:	sub    r14,rbx
  42fad5:	mov    rdi,r12
  42fad8:	xor    esi,esi
  42fada:	call   QWORD PTR [r12+0x48]
  42fadf:	mov    rbx,QWORD PTR [r12+0x20]
  42fae4:	mov    rdi,QWORD PTR [r12+0x28]
  42fae9:	sub    rbx,rdi
  42faec:	cmp    r14,rbx
  42faef:	ja     42fac0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2f0>
  42faf1:	mov    esi,0x20
  42faf6:	mov    rdx,r14
  42faf9:	call   406080 <memset@plt>
  42fafe:	add    r14,QWORD PTR [r12+0x28]
  42fb03:	mov    QWORD PTR [r12+0x28],r14
  42fb08:	lea    rax,[r14+0x1]
  42fb0c:	mov    QWORD PTR [r12+0x28],rax
  42fb11:	mov    BYTE PTR [r14],0x5d
  42fb15:	add    rsp,0x8
  42fb19:	pop    rbx
  42fb1a:	pop    r12
  42fb1c:	pop    r13
  42fb1e:	pop    r14
  42fb20:	pop    r15
  42fb22:	pop    rbp
  42fb23:	ret    
  42fb24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fb2e:	xchg   ax,ax

000000000042fb30 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  42fb30:	push   rbp
  42fb31:	push   r15
  42fb33:	push   r14
  42fb35:	push   r13
  42fb37:	push   r12
  42fb39:	push   rbx
  42fb3a:	push   rax
  42fb3b:	mov    r12,rdi
  42fb3e:	cmp    BYTE PTR [rdi+0x33],0x0
  42fb42:	je     42fb5a <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a>
  42fb44:	mov    rdi,r12
  42fb47:	add    rsp,0x8
  42fb4b:	pop    rbx
  42fb4c:	pop    r12
  42fb4e:	pop    r13
  42fb50:	pop    r14
  42fb52:	pop    r15
  42fb54:	pop    rbp
  42fb55:	jmp    42cf80 <flatcc_json_printer_int8_vector_field@@Base>
  42fb5a:	lea    eax,[rdx+rdx*1]
  42fb5d:	add    eax,0x4
  42fb60:	cmp    eax,DWORD PTR [rsi+0x10]
  42fb63:	jge    42fe75 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42fb69:	mov    rdx,QWORD PTR [rsi+0x8]
  42fb6d:	mov    eax,eax
  42fb6f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42fb74:	test   r13,r13
  42fb77:	je     42fe75 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42fb7d:	add    r13,QWORD PTR [rsi]
  42fb80:	je     42fe75 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42fb86:	mov    r14,r9
  42fb89:	mov    eax,DWORD PTR [rsi+0x18]
  42fb8c:	lea    edx,[rax+0x1]
  42fb8f:	mov    DWORD PTR [rsi+0x18],edx
  42fb92:	test   eax,eax
  42fb94:	je     42fba7 <flatcc_json_printer_int8_enum_vector_field@@Base+0x77>
  42fb96:	mov    rax,QWORD PTR [r12+0x28]
  42fb9b:	lea    rdx,[rax+0x1]
  42fb9f:	mov    QWORD PTR [r12+0x28],rdx
  42fba4:	mov    BYTE PTR [rax],0x2c
  42fba7:	mov    ebx,DWORD PTR [r13+0x0]
  42fbab:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42fbb0:	movsxd rdx,r8d
  42fbb3:	mov    rdi,r12
  42fbb6:	mov    rsi,rcx
  42fbb9:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42fbbe:	inc    DWORD PTR [r12+0x38]
  42fbc3:	mov    rax,QWORD PTR [r12+0x28]
  42fbc8:	lea    rcx,[rax+0x1]
  42fbcc:	mov    QWORD PTR [r12+0x28],rcx
  42fbd1:	mov    BYTE PTR [rax],0x5b
  42fbd4:	test   ebp,ebp
  42fbd6:	je     42fdaa <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42fbdc:	add    r13,rbx
  42fbdf:	cmp    BYTE PTR [r12+0x31],0x0
  42fbe5:	mov    rax,QWORD PTR [r12+0x28]
  42fbea:	je     42fc85 <flatcc_json_printer_int8_enum_vector_field@@Base+0x155>
  42fbf0:	lea    rcx,[rax+0x1]
  42fbf4:	mov    QWORD PTR [r12+0x28],rcx
  42fbf9:	mov    BYTE PTR [rax],0xa
  42fbfc:	movsxd rax,DWORD PTR [r12+0x38]
  42fc01:	movzx  r15d,BYTE PTR [r12+0x31]
  42fc07:	imul   r15,rax
  42fc0b:	mov    rbx,QWORD PTR [r12+0x20]
  42fc10:	mov    rdi,QWORD PTR [r12+0x28]
  42fc15:	lea    rax,[rdi+r15*1]
  42fc19:	cmp    rax,rbx
  42fc1c:	jbe    42fc71 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42fc1e:	cmp    rdi,rbx
  42fc21:	jb     42fc37 <flatcc_json_printer_int8_enum_vector_field@@Base+0x107>
  42fc23:	mov    rdi,r12
  42fc26:	xor    esi,esi
  42fc28:	call   QWORD PTR [r12+0x48]
  42fc2d:	mov    rbx,QWORD PTR [r12+0x20]
  42fc32:	mov    rdi,QWORD PTR [r12+0x28]
  42fc37:	sub    rbx,rdi
  42fc3a:	cmp    rbx,r15
  42fc3d:	jae    42fc71 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42fc3f:	nop
  42fc40:	mov    esi,0x20
  42fc45:	mov    rdx,rbx
  42fc48:	call   406080 <memset@plt>
  42fc4d:	add    QWORD PTR [r12+0x28],rbx
  42fc52:	sub    r15,rbx
  42fc55:	mov    rdi,r12
  42fc58:	xor    esi,esi
  42fc5a:	call   QWORD PTR [r12+0x48]
  42fc5f:	mov    rbx,QWORD PTR [r12+0x20]
  42fc64:	mov    rdi,QWORD PTR [r12+0x28]
  42fc69:	sub    rbx,rdi
  42fc6c:	cmp    r15,rbx
  42fc6f:	ja     42fc40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
  42fc71:	mov    esi,0x20
  42fc76:	mov    rdx,r15
  42fc79:	call   406080 <memset@plt>
  42fc7e:	add    QWORD PTR [r12+0x28],r15
  42fc83:	jmp    42fc96 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42fc85:	cmp    rax,QWORD PTR [r12+0x20]
  42fc8a:	jb     42fc96 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42fc8c:	mov    rdi,r12
  42fc8f:	xor    esi,esi
  42fc91:	call   QWORD PTR [r12+0x48]
  42fc96:	movsx  esi,BYTE PTR [r13+0x4]
  42fc9b:	mov    rdi,r12
  42fc9e:	call   r14
  42fca1:	dec    ebp
  42fca3:	je     42fdaa <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42fca9:	add    r13,0x5
  42fcad:	jmp    42fcd8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
  42fcaf:	nop
  42fcb0:	mov    esi,0x20
  42fcb5:	mov    rdx,r15
  42fcb8:	call   406080 <memset@plt>
  42fcbd:	add    QWORD PTR [r12+0x28],r15
  42fcc2:	movsx  esi,BYTE PTR [r13+0x0]
  42fcc7:	mov    rdi,r12
  42fcca:	call   r14
  42fccd:	inc    r13
  42fcd0:	test   ebp,ebp
  42fcd2:	je     42fdaa <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42fcd8:	dec    ebp
  42fcda:	mov    rax,QWORD PTR [r12+0x28]
  42fcdf:	lea    rcx,[rax+0x1]
  42fce3:	mov    QWORD PTR [r12+0x28],rcx
  42fce8:	mov    BYTE PTR [rax],0x2c
  42fceb:	cmp    BYTE PTR [r12+0x31],0x0
  42fcf1:	mov    rax,QWORD PTR [r12+0x28]
  42fcf6:	je     42fd90 <flatcc_json_printer_int8_enum_vector_field@@Base+0x260>
  42fcfc:	lea    rcx,[rax+0x1]
  42fd00:	mov    QWORD PTR [r12+0x28],rcx
  42fd05:	mov    BYTE PTR [rax],0xa
  42fd08:	movsxd rax,DWORD PTR [r12+0x38]
  42fd0d:	movzx  r15d,BYTE PTR [r12+0x31]
  42fd13:	imul   r15,rax
  42fd17:	mov    rbx,QWORD PTR [r12+0x20]
  42fd1c:	mov    rdi,QWORD PTR [r12+0x28]
  42fd21:	lea    rax,[rdi+r15*1]
  42fd25:	cmp    rax,rbx
  42fd28:	jbe    42fcb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42fd2a:	cmp    rdi,rbx
  42fd2d:	jb     42fd43 <flatcc_json_printer_int8_enum_vector_field@@Base+0x213>
  42fd2f:	mov    rdi,r12
  42fd32:	xor    esi,esi
  42fd34:	call   QWORD PTR [r12+0x48]
  42fd39:	mov    rbx,QWORD PTR [r12+0x20]
  42fd3e:	mov    rdi,QWORD PTR [r12+0x28]
  42fd43:	sub    rbx,rdi
  42fd46:	cmp    rbx,r15
  42fd49:	jae    42fcb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42fd4f:	nop
  42fd50:	mov    esi,0x20
  42fd55:	mov    rdx,rbx
  42fd58:	call   406080 <memset@plt>
  42fd5d:	add    QWORD PTR [r12+0x28],rbx
  42fd62:	sub    r15,rbx
  42fd65:	mov    rdi,r12
  42fd68:	xor    esi,esi
  42fd6a:	call   QWORD PTR [r12+0x48]
  42fd6f:	mov    rbx,QWORD PTR [r12+0x20]
  42fd74:	mov    rdi,QWORD PTR [r12+0x28]
  42fd79:	sub    rbx,rdi
  42fd7c:	cmp    r15,rbx
  42fd7f:	ja     42fd50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
  42fd81:	jmp    42fcb0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42fd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fd90:	cmp    rax,QWORD PTR [r12+0x20]
  42fd95:	jb     42fcc2 <flatcc_json_printer_int8_enum_vector_field@@Base+0x192>
  42fd9b:	mov    rdi,r12
  42fd9e:	xor    esi,esi
  42fda0:	call   QWORD PTR [r12+0x48]
  42fda5:	jmp    42fcc2 <flatcc_json_printer_int8_enum_vector_field@@Base+0x192>
  42fdaa:	cmp    BYTE PTR [r12+0x31],0x0
  42fdb0:	mov    r14,QWORD PTR [r12+0x28]
  42fdb5:	je     42fe68 <flatcc_json_printer_int8_enum_vector_field@@Base+0x338>
  42fdbb:	lea    rax,[r14+0x1]
  42fdbf:	mov    QWORD PTR [r12+0x28],rax
  42fdc4:	mov    BYTE PTR [r14],0xa
  42fdc8:	movsxd rax,DWORD PTR [r12+0x38]
  42fdcd:	dec    rax
  42fdd0:	mov    DWORD PTR [r12+0x38],eax
  42fdd5:	movzx  r14d,BYTE PTR [r12+0x31]
  42fddb:	imul   r14,rax
  42fddf:	mov    rbx,QWORD PTR [r12+0x20]
  42fde4:	mov    rdi,QWORD PTR [r12+0x28]
  42fde9:	lea    rax,[rdi+r14*1]
  42fded:	cmp    rax,rbx
  42fdf0:	jbe    42fe51 <flatcc_json_printer_int8_enum_vector_field@@Base+0x321>
  42fdf2:	cmp    rdi,rbx
  42fdf5:	jb     42fe0b <flatcc_json_printer_int8_enum_vector_field@@Base+0x2db>
  42fdf7:	mov    rdi,r12
  42fdfa:	xor    esi,esi
  42fdfc:	call   QWORD PTR [r12+0x48]
  42fe01:	mov    rbx,QWORD PTR [r12+0x20]
  42fe06:	mov    rdi,QWORD PTR [r12+0x28]
  42fe0b:	sub    rbx,rdi
  42fe0e:	cmp    rbx,r14
  42fe11:	jae    42fe51 <flatcc_json_printer_int8_enum_vector_field@@Base+0x321>
  42fe13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe1d:	nop    DWORD PTR [rax]
  42fe20:	mov    esi,0x20
  42fe25:	mov    rdx,rbx
  42fe28:	call   406080 <memset@plt>
  42fe2d:	add    QWORD PTR [r12+0x28],rbx
  42fe32:	sub    r14,rbx
  42fe35:	mov    rdi,r12
  42fe38:	xor    esi,esi
  42fe3a:	call   QWORD PTR [r12+0x48]
  42fe3f:	mov    rbx,QWORD PTR [r12+0x20]
  42fe44:	mov    rdi,QWORD PTR [r12+0x28]
  42fe49:	sub    rbx,rdi
  42fe4c:	cmp    r14,rbx
  42fe4f:	ja     42fe20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2f0>
  42fe51:	mov    esi,0x20
  42fe56:	mov    rdx,r14
  42fe59:	call   406080 <memset@plt>
  42fe5e:	add    r14,QWORD PTR [r12+0x28]
  42fe63:	mov    QWORD PTR [r12+0x28],r14
  42fe68:	lea    rax,[r14+0x1]
  42fe6c:	mov    QWORD PTR [r12+0x28],rax
  42fe71:	mov    BYTE PTR [r14],0x5d
  42fe75:	add    rsp,0x8
  42fe79:	pop    rbx
  42fe7a:	pop    r12
  42fe7c:	pop    r13
  42fe7e:	pop    r14
  42fe80:	pop    r15
  42fe82:	pop    rbp
  42fe83:	ret    
  42fe84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe8e:	xchg   ax,ax

000000000042fe90 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  42fe90:	push   rbp
  42fe91:	push   r15
  42fe93:	push   r14
  42fe95:	push   r13
  42fe97:	push   r12
  42fe99:	push   rbx
  42fe9a:	push   rax
  42fe9b:	mov    r12,rdi
  42fe9e:	cmp    BYTE PTR [rdi+0x33],0x0
  42fea2:	je     42feba <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a>
  42fea4:	mov    rdi,r12
  42fea7:	add    rsp,0x8
  42feab:	pop    rbx
  42feac:	pop    r12
  42feae:	pop    r13
  42feb0:	pop    r14
  42feb2:	pop    r15
  42feb4:	pop    rbp
  42feb5:	jmp    42d3f0 <flatcc_json_printer_int16_vector_field@@Base>
  42feba:	lea    eax,[rdx+rdx*1]
  42febd:	add    eax,0x4
  42fec0:	cmp    eax,DWORD PTR [rsi+0x10]
  42fec3:	jge    4301d5 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42fec9:	mov    rdx,QWORD PTR [rsi+0x8]
  42fecd:	mov    eax,eax
  42fecf:	movzx  r13d,WORD PTR [rdx+rax*1]
  42fed4:	test   r13,r13
  42fed7:	je     4301d5 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42fedd:	add    r13,QWORD PTR [rsi]
  42fee0:	je     4301d5 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42fee6:	mov    r14,r9
  42fee9:	mov    eax,DWORD PTR [rsi+0x18]
  42feec:	lea    edx,[rax+0x1]
  42feef:	mov    DWORD PTR [rsi+0x18],edx
  42fef2:	test   eax,eax
  42fef4:	je     42ff07 <flatcc_json_printer_int16_enum_vector_field@@Base+0x77>
  42fef6:	mov    rax,QWORD PTR [r12+0x28]
  42fefb:	lea    rdx,[rax+0x1]
  42feff:	mov    QWORD PTR [r12+0x28],rdx
  42ff04:	mov    BYTE PTR [rax],0x2c
  42ff07:	mov    ebx,DWORD PTR [r13+0x0]
  42ff0b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42ff10:	movsxd rdx,r8d
  42ff13:	mov    rdi,r12
  42ff16:	mov    rsi,rcx
  42ff19:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  42ff1e:	inc    DWORD PTR [r12+0x38]
  42ff23:	mov    rax,QWORD PTR [r12+0x28]
  42ff28:	lea    rcx,[rax+0x1]
  42ff2c:	mov    QWORD PTR [r12+0x28],rcx
  42ff31:	mov    BYTE PTR [rax],0x5b
  42ff34:	test   ebp,ebp
  42ff36:	je     43010a <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  42ff3c:	add    r13,rbx
  42ff3f:	cmp    BYTE PTR [r12+0x31],0x0
  42ff45:	mov    rax,QWORD PTR [r12+0x28]
  42ff4a:	je     42ffe5 <flatcc_json_printer_int16_enum_vector_field@@Base+0x155>
  42ff50:	lea    rcx,[rax+0x1]
  42ff54:	mov    QWORD PTR [r12+0x28],rcx
  42ff59:	mov    BYTE PTR [rax],0xa
  42ff5c:	movsxd rax,DWORD PTR [r12+0x38]
  42ff61:	movzx  r15d,BYTE PTR [r12+0x31]
  42ff67:	imul   r15,rax
  42ff6b:	mov    rbx,QWORD PTR [r12+0x20]
  42ff70:	mov    rdi,QWORD PTR [r12+0x28]
  42ff75:	lea    rax,[rdi+r15*1]
  42ff79:	cmp    rax,rbx
  42ff7c:	jbe    42ffd1 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42ff7e:	cmp    rdi,rbx
  42ff81:	jb     42ff97 <flatcc_json_printer_int16_enum_vector_field@@Base+0x107>
  42ff83:	mov    rdi,r12
  42ff86:	xor    esi,esi
  42ff88:	call   QWORD PTR [r12+0x48]
  42ff8d:	mov    rbx,QWORD PTR [r12+0x20]
  42ff92:	mov    rdi,QWORD PTR [r12+0x28]
  42ff97:	sub    rbx,rdi
  42ff9a:	cmp    rbx,r15
  42ff9d:	jae    42ffd1 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42ff9f:	nop
  42ffa0:	mov    esi,0x20
  42ffa5:	mov    rdx,rbx
  42ffa8:	call   406080 <memset@plt>
  42ffad:	add    QWORD PTR [r12+0x28],rbx
  42ffb2:	sub    r15,rbx
  42ffb5:	mov    rdi,r12
  42ffb8:	xor    esi,esi
  42ffba:	call   QWORD PTR [r12+0x48]
  42ffbf:	mov    rbx,QWORD PTR [r12+0x20]
  42ffc4:	mov    rdi,QWORD PTR [r12+0x28]
  42ffc9:	sub    rbx,rdi
  42ffcc:	cmp    r15,rbx
  42ffcf:	ja     42ffa0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
  42ffd1:	mov    esi,0x20
  42ffd6:	mov    rdx,r15
  42ffd9:	call   406080 <memset@plt>
  42ffde:	add    QWORD PTR [r12+0x28],r15
  42ffe3:	jmp    42fff6 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42ffe5:	cmp    rax,QWORD PTR [r12+0x20]
  42ffea:	jb     42fff6 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42ffec:	mov    rdi,r12
  42ffef:	xor    esi,esi
  42fff1:	call   QWORD PTR [r12+0x48]
  42fff6:	movsx  esi,WORD PTR [r13+0x4]
  42fffb:	mov    rdi,r12
  42fffe:	call   r14
  430001:	dec    ebp
  430003:	je     43010a <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  430009:	add    r13,0x6
  43000d:	jmp    430039 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a9>
  43000f:	nop
  430010:	mov    esi,0x20
  430015:	mov    rdx,r15
  430018:	call   406080 <memset@plt>
  43001d:	add    QWORD PTR [r12+0x28],r15
  430022:	movsx  esi,WORD PTR [r13+0x0]
  430027:	mov    rdi,r12
  43002a:	call   r14
  43002d:	add    r13,0x2
  430031:	test   ebp,ebp
  430033:	je     43010a <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  430039:	dec    ebp
  43003b:	mov    rax,QWORD PTR [r12+0x28]
  430040:	lea    rcx,[rax+0x1]
  430044:	mov    QWORD PTR [r12+0x28],rcx
  430049:	mov    BYTE PTR [rax],0x2c
  43004c:	cmp    BYTE PTR [r12+0x31],0x0
  430052:	mov    rax,QWORD PTR [r12+0x28]
  430057:	je     4300f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x260>
  43005d:	lea    rcx,[rax+0x1]
  430061:	mov    QWORD PTR [r12+0x28],rcx
  430066:	mov    BYTE PTR [rax],0xa
  430069:	movsxd rax,DWORD PTR [r12+0x38]
  43006e:	movzx  r15d,BYTE PTR [r12+0x31]
  430074:	imul   r15,rax
  430078:	mov    rbx,QWORD PTR [r12+0x20]
  43007d:	mov    rdi,QWORD PTR [r12+0x28]
  430082:	lea    rax,[rdi+r15*1]
  430086:	cmp    rax,rbx
  430089:	jbe    430010 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  43008b:	cmp    rdi,rbx
  43008e:	jb     4300a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
  430090:	mov    rdi,r12
  430093:	xor    esi,esi
  430095:	call   QWORD PTR [r12+0x48]
  43009a:	mov    rbx,QWORD PTR [r12+0x20]
  43009f:	mov    rdi,QWORD PTR [r12+0x28]
  4300a4:	sub    rbx,rdi
  4300a7:	cmp    rbx,r15
  4300aa:	jae    430010 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  4300b0:	mov    esi,0x20
  4300b5:	mov    rdx,rbx
  4300b8:	call   406080 <memset@plt>
  4300bd:	add    QWORD PTR [r12+0x28],rbx
  4300c2:	sub    r15,rbx
  4300c5:	mov    rdi,r12
  4300c8:	xor    esi,esi
  4300ca:	call   QWORD PTR [r12+0x48]
  4300cf:	mov    rbx,QWORD PTR [r12+0x20]
  4300d4:	mov    rdi,QWORD PTR [r12+0x28]
  4300d9:	sub    rbx,rdi
  4300dc:	cmp    r15,rbx
  4300df:	ja     4300b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
  4300e1:	jmp    430010 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  4300e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4300f0:	cmp    rax,QWORD PTR [r12+0x20]
  4300f5:	jb     430022 <flatcc_json_printer_int16_enum_vector_field@@Base+0x192>
  4300fb:	mov    rdi,r12
  4300fe:	xor    esi,esi
  430100:	call   QWORD PTR [r12+0x48]
  430105:	jmp    430022 <flatcc_json_printer_int16_enum_vector_field@@Base+0x192>
  43010a:	cmp    BYTE PTR [r12+0x31],0x0
  430110:	mov    r14,QWORD PTR [r12+0x28]
  430115:	je     4301c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x338>
  43011b:	lea    rax,[r14+0x1]
  43011f:	mov    QWORD PTR [r12+0x28],rax
  430124:	mov    BYTE PTR [r14],0xa
  430128:	movsxd rax,DWORD PTR [r12+0x38]
  43012d:	dec    rax
  430130:	mov    DWORD PTR [r12+0x38],eax
  430135:	movzx  r14d,BYTE PTR [r12+0x31]
  43013b:	imul   r14,rax
  43013f:	mov    rbx,QWORD PTR [r12+0x20]
  430144:	mov    rdi,QWORD PTR [r12+0x28]
  430149:	lea    rax,[rdi+r14*1]
  43014d:	cmp    rax,rbx
  430150:	jbe    4301b1 <flatcc_json_printer_int16_enum_vector_field@@Base+0x321>
  430152:	cmp    rdi,rbx
  430155:	jb     43016b <flatcc_json_printer_int16_enum_vector_field@@Base+0x2db>
  430157:	mov    rdi,r12
  43015a:	xor    esi,esi
  43015c:	call   QWORD PTR [r12+0x48]
  430161:	mov    rbx,QWORD PTR [r12+0x20]
  430166:	mov    rdi,QWORD PTR [r12+0x28]
  43016b:	sub    rbx,rdi
  43016e:	cmp    rbx,r14
  430171:	jae    4301b1 <flatcc_json_printer_int16_enum_vector_field@@Base+0x321>
  430173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43017d:	nop    DWORD PTR [rax]
  430180:	mov    esi,0x20
  430185:	mov    rdx,rbx
  430188:	call   406080 <memset@plt>
  43018d:	add    QWORD PTR [r12+0x28],rbx
  430192:	sub    r14,rbx
  430195:	mov    rdi,r12
  430198:	xor    esi,esi
  43019a:	call   QWORD PTR [r12+0x48]
  43019f:	mov    rbx,QWORD PTR [r12+0x20]
  4301a4:	mov    rdi,QWORD PTR [r12+0x28]
  4301a9:	sub    rbx,rdi
  4301ac:	cmp    r14,rbx
  4301af:	ja     430180 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2f0>
  4301b1:	mov    esi,0x20
  4301b6:	mov    rdx,r14
  4301b9:	call   406080 <memset@plt>
  4301be:	add    r14,QWORD PTR [r12+0x28]
  4301c3:	mov    QWORD PTR [r12+0x28],r14
  4301c8:	lea    rax,[r14+0x1]
  4301cc:	mov    QWORD PTR [r12+0x28],rax
  4301d1:	mov    BYTE PTR [r14],0x5d
  4301d5:	add    rsp,0x8
  4301d9:	pop    rbx
  4301da:	pop    r12
  4301dc:	pop    r13
  4301de:	pop    r14
  4301e0:	pop    r15
  4301e2:	pop    rbp
  4301e3:	ret    
  4301e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4301ee:	xchg   ax,ax

00000000004301f0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  4301f0:	push   rbp
  4301f1:	push   r15
  4301f3:	push   r14
  4301f5:	push   r13
  4301f7:	push   r12
  4301f9:	push   rbx
  4301fa:	push   rax
  4301fb:	mov    r12,rdi
  4301fe:	cmp    BYTE PTR [rdi+0x33],0x0
  430202:	je     43021a <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a>
  430204:	mov    rdi,r12
  430207:	add    rsp,0x8
  43020b:	pop    rbx
  43020c:	pop    r12
  43020e:	pop    r13
  430210:	pop    r14
  430212:	pop    r15
  430214:	pop    rbp
  430215:	jmp    42d9a0 <flatcc_json_printer_int32_vector_field@@Base>
  43021a:	lea    eax,[rdx+rdx*1]
  43021d:	add    eax,0x4
  430220:	cmp    eax,DWORD PTR [rsi+0x10]
  430223:	jge    430535 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  430229:	mov    rdx,QWORD PTR [rsi+0x8]
  43022d:	mov    eax,eax
  43022f:	movzx  r13d,WORD PTR [rdx+rax*1]
  430234:	test   r13,r13
  430237:	je     430535 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  43023d:	add    r13,QWORD PTR [rsi]
  430240:	je     430535 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  430246:	mov    r14,r9
  430249:	mov    eax,DWORD PTR [rsi+0x18]
  43024c:	lea    edx,[rax+0x1]
  43024f:	mov    DWORD PTR [rsi+0x18],edx
  430252:	test   eax,eax
  430254:	je     430267 <flatcc_json_printer_int32_enum_vector_field@@Base+0x77>
  430256:	mov    rax,QWORD PTR [r12+0x28]
  43025b:	lea    rdx,[rax+0x1]
  43025f:	mov    QWORD PTR [r12+0x28],rdx
  430264:	mov    BYTE PTR [rax],0x2c
  430267:	mov    ebx,DWORD PTR [r13+0x0]
  43026b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  430270:	movsxd rdx,r8d
  430273:	mov    rdi,r12
  430276:	mov    rsi,rcx
  430279:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  43027e:	inc    DWORD PTR [r12+0x38]
  430283:	mov    rax,QWORD PTR [r12+0x28]
  430288:	lea    rcx,[rax+0x1]
  43028c:	mov    QWORD PTR [r12+0x28],rcx
  430291:	mov    BYTE PTR [rax],0x5b
  430294:	test   ebp,ebp
  430296:	je     43046a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  43029c:	add    r13,rbx
  43029f:	cmp    BYTE PTR [r12+0x31],0x0
  4302a5:	mov    rax,QWORD PTR [r12+0x28]
  4302aa:	je     430345 <flatcc_json_printer_int32_enum_vector_field@@Base+0x155>
  4302b0:	lea    rcx,[rax+0x1]
  4302b4:	mov    QWORD PTR [r12+0x28],rcx
  4302b9:	mov    BYTE PTR [rax],0xa
  4302bc:	movsxd rax,DWORD PTR [r12+0x38]
  4302c1:	movzx  r15d,BYTE PTR [r12+0x31]
  4302c7:	imul   r15,rax
  4302cb:	mov    rbx,QWORD PTR [r12+0x20]
  4302d0:	mov    rdi,QWORD PTR [r12+0x28]
  4302d5:	lea    rax,[rdi+r15*1]
  4302d9:	cmp    rax,rbx
  4302dc:	jbe    430331 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  4302de:	cmp    rdi,rbx
  4302e1:	jb     4302f7 <flatcc_json_printer_int32_enum_vector_field@@Base+0x107>
  4302e3:	mov    rdi,r12
  4302e6:	xor    esi,esi
  4302e8:	call   QWORD PTR [r12+0x48]
  4302ed:	mov    rbx,QWORD PTR [r12+0x20]
  4302f2:	mov    rdi,QWORD PTR [r12+0x28]
  4302f7:	sub    rbx,rdi
  4302fa:	cmp    rbx,r15
  4302fd:	jae    430331 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  4302ff:	nop
  430300:	mov    esi,0x20
  430305:	mov    rdx,rbx
  430308:	call   406080 <memset@plt>
  43030d:	add    QWORD PTR [r12+0x28],rbx
  430312:	sub    r15,rbx
  430315:	mov    rdi,r12
  430318:	xor    esi,esi
  43031a:	call   QWORD PTR [r12+0x48]
  43031f:	mov    rbx,QWORD PTR [r12+0x20]
  430324:	mov    rdi,QWORD PTR [r12+0x28]
  430329:	sub    rbx,rdi
  43032c:	cmp    r15,rbx
  43032f:	ja     430300 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
  430331:	mov    esi,0x20
  430336:	mov    rdx,r15
  430339:	call   406080 <memset@plt>
  43033e:	add    QWORD PTR [r12+0x28],r15
  430343:	jmp    430356 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  430345:	cmp    rax,QWORD PTR [r12+0x20]
  43034a:	jb     430356 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  43034c:	mov    rdi,r12
  43034f:	xor    esi,esi
  430351:	call   QWORD PTR [r12+0x48]
  430356:	mov    esi,DWORD PTR [r13+0x4]
  43035a:	mov    rdi,r12
  43035d:	call   r14
  430360:	dec    ebp
  430362:	je     43046a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  430368:	add    r13,0x8
  43036c:	jmp    430398 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
  43036e:	xchg   ax,ax
  430370:	mov    esi,0x20
  430375:	mov    rdx,r15
  430378:	call   406080 <memset@plt>
  43037d:	add    QWORD PTR [r12+0x28],r15
  430382:	mov    esi,DWORD PTR [r13+0x0]
  430386:	mov    rdi,r12
  430389:	call   r14
  43038c:	add    r13,0x4
  430390:	test   ebp,ebp
  430392:	je     43046a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  430398:	dec    ebp
  43039a:	mov    rax,QWORD PTR [r12+0x28]
  43039f:	lea    rcx,[rax+0x1]
  4303a3:	mov    QWORD PTR [r12+0x28],rcx
  4303a8:	mov    BYTE PTR [rax],0x2c
  4303ab:	cmp    BYTE PTR [r12+0x31],0x0
  4303b1:	mov    rax,QWORD PTR [r12+0x28]
  4303b6:	je     430450 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  4303bc:	lea    rcx,[rax+0x1]
  4303c0:	mov    QWORD PTR [r12+0x28],rcx
  4303c5:	mov    BYTE PTR [rax],0xa
  4303c8:	movsxd rax,DWORD PTR [r12+0x38]
  4303cd:	movzx  r15d,BYTE PTR [r12+0x31]
  4303d3:	imul   r15,rax
  4303d7:	mov    rbx,QWORD PTR [r12+0x20]
  4303dc:	mov    rdi,QWORD PTR [r12+0x28]
  4303e1:	lea    rax,[rdi+r15*1]
  4303e5:	cmp    rax,rbx
  4303e8:	jbe    430370 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  4303ea:	cmp    rdi,rbx
  4303ed:	jb     430403 <flatcc_json_printer_int32_enum_vector_field@@Base+0x213>
  4303ef:	mov    rdi,r12
  4303f2:	xor    esi,esi
  4303f4:	call   QWORD PTR [r12+0x48]
  4303f9:	mov    rbx,QWORD PTR [r12+0x20]
  4303fe:	mov    rdi,QWORD PTR [r12+0x28]
  430403:	sub    rbx,rdi
  430406:	cmp    rbx,r15
  430409:	jae    430370 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  43040f:	nop
  430410:	mov    esi,0x20
  430415:	mov    rdx,rbx
  430418:	call   406080 <memset@plt>
  43041d:	add    QWORD PTR [r12+0x28],rbx
  430422:	sub    r15,rbx
  430425:	mov    rdi,r12
  430428:	xor    esi,esi
  43042a:	call   QWORD PTR [r12+0x48]
  43042f:	mov    rbx,QWORD PTR [r12+0x20]
  430434:	mov    rdi,QWORD PTR [r12+0x28]
  430439:	sub    rbx,rdi
  43043c:	cmp    r15,rbx
  43043f:	ja     430410 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
  430441:	jmp    430370 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  430446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430450:	cmp    rax,QWORD PTR [r12+0x20]
  430455:	jb     430382 <flatcc_json_printer_int32_enum_vector_field@@Base+0x192>
  43045b:	mov    rdi,r12
  43045e:	xor    esi,esi
  430460:	call   QWORD PTR [r12+0x48]
  430465:	jmp    430382 <flatcc_json_printer_int32_enum_vector_field@@Base+0x192>
  43046a:	cmp    BYTE PTR [r12+0x31],0x0
  430470:	mov    r14,QWORD PTR [r12+0x28]
  430475:	je     430528 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
  43047b:	lea    rax,[r14+0x1]
  43047f:	mov    QWORD PTR [r12+0x28],rax
  430484:	mov    BYTE PTR [r14],0xa
  430488:	movsxd rax,DWORD PTR [r12+0x38]
  43048d:	dec    rax
  430490:	mov    DWORD PTR [r12+0x38],eax
  430495:	movzx  r14d,BYTE PTR [r12+0x31]
  43049b:	imul   r14,rax
  43049f:	mov    rbx,QWORD PTR [r12+0x20]
  4304a4:	mov    rdi,QWORD PTR [r12+0x28]
  4304a9:	lea    rax,[rdi+r14*1]
  4304ad:	cmp    rax,rbx
  4304b0:	jbe    430511 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  4304b2:	cmp    rdi,rbx
  4304b5:	jb     4304cb <flatcc_json_printer_int32_enum_vector_field@@Base+0x2db>
  4304b7:	mov    rdi,r12
  4304ba:	xor    esi,esi
  4304bc:	call   QWORD PTR [r12+0x48]
  4304c1:	mov    rbx,QWORD PTR [r12+0x20]
  4304c6:	mov    rdi,QWORD PTR [r12+0x28]
  4304cb:	sub    rbx,rdi
  4304ce:	cmp    rbx,r14
  4304d1:	jae    430511 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  4304d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4304dd:	nop    DWORD PTR [rax]
  4304e0:	mov    esi,0x20
  4304e5:	mov    rdx,rbx
  4304e8:	call   406080 <memset@plt>
  4304ed:	add    QWORD PTR [r12+0x28],rbx
  4304f2:	sub    r14,rbx
  4304f5:	mov    rdi,r12
  4304f8:	xor    esi,esi
  4304fa:	call   QWORD PTR [r12+0x48]
  4304ff:	mov    rbx,QWORD PTR [r12+0x20]
  430504:	mov    rdi,QWORD PTR [r12+0x28]
  430509:	sub    rbx,rdi
  43050c:	cmp    r14,rbx
  43050f:	ja     4304e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2f0>
  430511:	mov    esi,0x20
  430516:	mov    rdx,r14
  430519:	call   406080 <memset@plt>
  43051e:	add    r14,QWORD PTR [r12+0x28]
  430523:	mov    QWORD PTR [r12+0x28],r14
  430528:	lea    rax,[r14+0x1]
  43052c:	mov    QWORD PTR [r12+0x28],rax
  430531:	mov    BYTE PTR [r14],0x5d
  430535:	add    rsp,0x8
  430539:	pop    rbx
  43053a:	pop    r12
  43053c:	pop    r13
  43053e:	pop    r14
  430540:	pop    r15
  430542:	pop    rbp
  430543:	ret    
  430544:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43054e:	xchg   ax,ax

0000000000430550 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  430550:	push   rbp
  430551:	push   r15
  430553:	push   r14
  430555:	push   r13
  430557:	push   r12
  430559:	push   rbx
  43055a:	push   rax
  43055b:	mov    r12,rdi
  43055e:	cmp    BYTE PTR [rdi+0x33],0x0
  430562:	je     43057a <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a>
  430564:	mov    rdi,r12
  430567:	add    rsp,0x8
  43056b:	pop    rbx
  43056c:	pop    r12
  43056e:	pop    r13
  430570:	pop    r14
  430572:	pop    r15
  430574:	pop    rbp
  430575:	jmp    42dcf0 <flatcc_json_printer_int64_vector_field@@Base>
  43057a:	lea    eax,[rdx+rdx*1]
  43057d:	add    eax,0x4
  430580:	cmp    eax,DWORD PTR [rsi+0x10]
  430583:	jge    430895 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  430589:	mov    rdx,QWORD PTR [rsi+0x8]
  43058d:	mov    eax,eax
  43058f:	movzx  r13d,WORD PTR [rdx+rax*1]
  430594:	test   r13,r13
  430597:	je     430895 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  43059d:	add    r13,QWORD PTR [rsi]
  4305a0:	je     430895 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  4305a6:	mov    r14,r9
  4305a9:	mov    eax,DWORD PTR [rsi+0x18]
  4305ac:	lea    edx,[rax+0x1]
  4305af:	mov    DWORD PTR [rsi+0x18],edx
  4305b2:	test   eax,eax
  4305b4:	je     4305c7 <flatcc_json_printer_int64_enum_vector_field@@Base+0x77>
  4305b6:	mov    rax,QWORD PTR [r12+0x28]
  4305bb:	lea    rdx,[rax+0x1]
  4305bf:	mov    QWORD PTR [r12+0x28],rdx
  4305c4:	mov    BYTE PTR [rax],0x2c
  4305c7:	mov    ebx,DWORD PTR [r13+0x0]
  4305cb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  4305d0:	movsxd rdx,r8d
  4305d3:	mov    rdi,r12
  4305d6:	mov    rsi,rcx
  4305d9:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  4305de:	inc    DWORD PTR [r12+0x38]
  4305e3:	mov    rax,QWORD PTR [r12+0x28]
  4305e8:	lea    rcx,[rax+0x1]
  4305ec:	mov    QWORD PTR [r12+0x28],rcx
  4305f1:	mov    BYTE PTR [rax],0x5b
  4305f4:	test   ebp,ebp
  4305f6:	je     4307ca <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  4305fc:	add    r13,rbx
  4305ff:	cmp    BYTE PTR [r12+0x31],0x0
  430605:	mov    rax,QWORD PTR [r12+0x28]
  43060a:	je     4306a5 <flatcc_json_printer_int64_enum_vector_field@@Base+0x155>
  430610:	lea    rcx,[rax+0x1]
  430614:	mov    QWORD PTR [r12+0x28],rcx
  430619:	mov    BYTE PTR [rax],0xa
  43061c:	movsxd rax,DWORD PTR [r12+0x38]
  430621:	movzx  r15d,BYTE PTR [r12+0x31]
  430627:	imul   r15,rax
  43062b:	mov    rbx,QWORD PTR [r12+0x20]
  430630:	mov    rdi,QWORD PTR [r12+0x28]
  430635:	lea    rax,[rdi+r15*1]
  430639:	cmp    rax,rbx
  43063c:	jbe    430691 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  43063e:	cmp    rdi,rbx
  430641:	jb     430657 <flatcc_json_printer_int64_enum_vector_field@@Base+0x107>
  430643:	mov    rdi,r12
  430646:	xor    esi,esi
  430648:	call   QWORD PTR [r12+0x48]
  43064d:	mov    rbx,QWORD PTR [r12+0x20]
  430652:	mov    rdi,QWORD PTR [r12+0x28]
  430657:	sub    rbx,rdi
  43065a:	cmp    rbx,r15
  43065d:	jae    430691 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  43065f:	nop
  430660:	mov    esi,0x20
  430665:	mov    rdx,rbx
  430668:	call   406080 <memset@plt>
  43066d:	add    QWORD PTR [r12+0x28],rbx
  430672:	sub    r15,rbx
  430675:	mov    rdi,r12
  430678:	xor    esi,esi
  43067a:	call   QWORD PTR [r12+0x48]
  43067f:	mov    rbx,QWORD PTR [r12+0x20]
  430684:	mov    rdi,QWORD PTR [r12+0x28]
  430689:	sub    rbx,rdi
  43068c:	cmp    r15,rbx
  43068f:	ja     430660 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
  430691:	mov    esi,0x20
  430696:	mov    rdx,r15
  430699:	call   406080 <memset@plt>
  43069e:	add    QWORD PTR [r12+0x28],r15
  4306a3:	jmp    4306b6 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  4306a5:	cmp    rax,QWORD PTR [r12+0x20]
  4306aa:	jb     4306b6 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  4306ac:	mov    rdi,r12
  4306af:	xor    esi,esi
  4306b1:	call   QWORD PTR [r12+0x48]
  4306b6:	mov    rsi,QWORD PTR [r13+0x4]
  4306ba:	mov    rdi,r12
  4306bd:	call   r14
  4306c0:	dec    ebp
  4306c2:	je     4307ca <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  4306c8:	add    r13,0xc
  4306cc:	jmp    4306f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
  4306ce:	xchg   ax,ax
  4306d0:	mov    esi,0x20
  4306d5:	mov    rdx,r15
  4306d8:	call   406080 <memset@plt>
  4306dd:	add    QWORD PTR [r12+0x28],r15
  4306e2:	mov    rsi,QWORD PTR [r13+0x0]
  4306e6:	mov    rdi,r12
  4306e9:	call   r14
  4306ec:	add    r13,0x8
  4306f0:	test   ebp,ebp
  4306f2:	je     4307ca <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  4306f8:	dec    ebp
  4306fa:	mov    rax,QWORD PTR [r12+0x28]
  4306ff:	lea    rcx,[rax+0x1]
  430703:	mov    QWORD PTR [r12+0x28],rcx
  430708:	mov    BYTE PTR [rax],0x2c
  43070b:	cmp    BYTE PTR [r12+0x31],0x0
  430711:	mov    rax,QWORD PTR [r12+0x28]
  430716:	je     4307b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x260>
  43071c:	lea    rcx,[rax+0x1]
  430720:	mov    QWORD PTR [r12+0x28],rcx
  430725:	mov    BYTE PTR [rax],0xa
  430728:	movsxd rax,DWORD PTR [r12+0x38]
  43072d:	movzx  r15d,BYTE PTR [r12+0x31]
  430733:	imul   r15,rax
  430737:	mov    rbx,QWORD PTR [r12+0x20]
  43073c:	mov    rdi,QWORD PTR [r12+0x28]
  430741:	lea    rax,[rdi+r15*1]
  430745:	cmp    rax,rbx
  430748:	jbe    4306d0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  43074a:	cmp    rdi,rbx
  43074d:	jb     430763 <flatcc_json_printer_int64_enum_vector_field@@Base+0x213>
  43074f:	mov    rdi,r12
  430752:	xor    esi,esi
  430754:	call   QWORD PTR [r12+0x48]
  430759:	mov    rbx,QWORD PTR [r12+0x20]
  43075e:	mov    rdi,QWORD PTR [r12+0x28]
  430763:	sub    rbx,rdi
  430766:	cmp    rbx,r15
  430769:	jae    4306d0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  43076f:	nop
  430770:	mov    esi,0x20
  430775:	mov    rdx,rbx
  430778:	call   406080 <memset@plt>
  43077d:	add    QWORD PTR [r12+0x28],rbx
  430782:	sub    r15,rbx
  430785:	mov    rdi,r12
  430788:	xor    esi,esi
  43078a:	call   QWORD PTR [r12+0x48]
  43078f:	mov    rbx,QWORD PTR [r12+0x20]
  430794:	mov    rdi,QWORD PTR [r12+0x28]
  430799:	sub    rbx,rdi
  43079c:	cmp    r15,rbx
  43079f:	ja     430770 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
  4307a1:	jmp    4306d0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  4307a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307b0:	cmp    rax,QWORD PTR [r12+0x20]
  4307b5:	jb     4306e2 <flatcc_json_printer_int64_enum_vector_field@@Base+0x192>
  4307bb:	mov    rdi,r12
  4307be:	xor    esi,esi
  4307c0:	call   QWORD PTR [r12+0x48]
  4307c5:	jmp    4306e2 <flatcc_json_printer_int64_enum_vector_field@@Base+0x192>
  4307ca:	cmp    BYTE PTR [r12+0x31],0x0
  4307d0:	mov    r14,QWORD PTR [r12+0x28]
  4307d5:	je     430888 <flatcc_json_printer_int64_enum_vector_field@@Base+0x338>
  4307db:	lea    rax,[r14+0x1]
  4307df:	mov    QWORD PTR [r12+0x28],rax
  4307e4:	mov    BYTE PTR [r14],0xa
  4307e8:	movsxd rax,DWORD PTR [r12+0x38]
  4307ed:	dec    rax
  4307f0:	mov    DWORD PTR [r12+0x38],eax
  4307f5:	movzx  r14d,BYTE PTR [r12+0x31]
  4307fb:	imul   r14,rax
  4307ff:	mov    rbx,QWORD PTR [r12+0x20]
  430804:	mov    rdi,QWORD PTR [r12+0x28]
  430809:	lea    rax,[rdi+r14*1]
  43080d:	cmp    rax,rbx
  430810:	jbe    430871 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  430812:	cmp    rdi,rbx
  430815:	jb     43082b <flatcc_json_printer_int64_enum_vector_field@@Base+0x2db>
  430817:	mov    rdi,r12
  43081a:	xor    esi,esi
  43081c:	call   QWORD PTR [r12+0x48]
  430821:	mov    rbx,QWORD PTR [r12+0x20]
  430826:	mov    rdi,QWORD PTR [r12+0x28]
  43082b:	sub    rbx,rdi
  43082e:	cmp    rbx,r14
  430831:	jae    430871 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  430833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43083d:	nop    DWORD PTR [rax]
  430840:	mov    esi,0x20
  430845:	mov    rdx,rbx
  430848:	call   406080 <memset@plt>
  43084d:	add    QWORD PTR [r12+0x28],rbx
  430852:	sub    r14,rbx
  430855:	mov    rdi,r12
  430858:	xor    esi,esi
  43085a:	call   QWORD PTR [r12+0x48]
  43085f:	mov    rbx,QWORD PTR [r12+0x20]
  430864:	mov    rdi,QWORD PTR [r12+0x28]
  430869:	sub    rbx,rdi
  43086c:	cmp    r14,rbx
  43086f:	ja     430840 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2f0>
  430871:	mov    esi,0x20
  430876:	mov    rdx,r14
  430879:	call   406080 <memset@plt>
  43087e:	add    r14,QWORD PTR [r12+0x28]
  430883:	mov    QWORD PTR [r12+0x28],r14
  430888:	lea    rax,[r14+0x1]
  43088c:	mov    QWORD PTR [r12+0x28],rax
  430891:	mov    BYTE PTR [r14],0x5d
  430895:	add    rsp,0x8
  430899:	pop    rbx
  43089a:	pop    r12
  43089c:	pop    r13
  43089e:	pop    r14
  4308a0:	pop    r15
  4308a2:	pop    rbp
  4308a3:	ret    
  4308a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4308ae:	xchg   ax,ax

00000000004308b0 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  4308b0:	push   rbp
  4308b1:	push   r15
  4308b3:	push   r14
  4308b5:	push   r13
  4308b7:	push   r12
  4308b9:	push   rbx
  4308ba:	push   rax
  4308bb:	mov    r12,rdi
  4308be:	cmp    BYTE PTR [rdi+0x33],0x0
  4308c2:	je     4308da <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a>
  4308c4:	mov    rdi,r12
  4308c7:	add    rsp,0x8
  4308cb:	pop    rbx
  4308cc:	pop    r12
  4308ce:	pop    r13
  4308d0:	pop    r14
  4308d2:	pop    r15
  4308d4:	pop    rbp
  4308d5:	jmp    42e060 <flatcc_json_printer_bool_vector_field@@Base>
  4308da:	lea    eax,[rdx+rdx*1]
  4308dd:	add    eax,0x4
  4308e0:	cmp    eax,DWORD PTR [rsi+0x10]
  4308e3:	jge    430bf5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  4308e9:	mov    rdx,QWORD PTR [rsi+0x8]
  4308ed:	mov    eax,eax
  4308ef:	movzx  r13d,WORD PTR [rdx+rax*1]
  4308f4:	test   r13,r13
  4308f7:	je     430bf5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  4308fd:	add    r13,QWORD PTR [rsi]
  430900:	je     430bf5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  430906:	mov    r14,r9
  430909:	mov    eax,DWORD PTR [rsi+0x18]
  43090c:	lea    edx,[rax+0x1]
  43090f:	mov    DWORD PTR [rsi+0x18],edx
  430912:	test   eax,eax
  430914:	je     430927 <flatcc_json_printer_bool_enum_vector_field@@Base+0x77>
  430916:	mov    rax,QWORD PTR [r12+0x28]
  43091b:	lea    rdx,[rax+0x1]
  43091f:	mov    QWORD PTR [r12+0x28],rdx
  430924:	mov    BYTE PTR [rax],0x2c
  430927:	mov    ebx,DWORD PTR [r13+0x0]
  43092b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  430930:	movsxd rdx,r8d
  430933:	mov    rdi,r12
  430936:	mov    rsi,rcx
  430939:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  43093e:	inc    DWORD PTR [r12+0x38]
  430943:	mov    rax,QWORD PTR [r12+0x28]
  430948:	lea    rcx,[rax+0x1]
  43094c:	mov    QWORD PTR [r12+0x28],rcx
  430951:	mov    BYTE PTR [rax],0x5b
  430954:	test   ebp,ebp
  430956:	je     430b2a <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  43095c:	add    r13,rbx
  43095f:	cmp    BYTE PTR [r12+0x31],0x0
  430965:	mov    rax,QWORD PTR [r12+0x28]
  43096a:	je     430a05 <flatcc_json_printer_bool_enum_vector_field@@Base+0x155>
  430970:	lea    rcx,[rax+0x1]
  430974:	mov    QWORD PTR [r12+0x28],rcx
  430979:	mov    BYTE PTR [rax],0xa
  43097c:	movsxd rax,DWORD PTR [r12+0x38]
  430981:	movzx  r15d,BYTE PTR [r12+0x31]
  430987:	imul   r15,rax
  43098b:	mov    rbx,QWORD PTR [r12+0x20]
  430990:	mov    rdi,QWORD PTR [r12+0x28]
  430995:	lea    rax,[rdi+r15*1]
  430999:	cmp    rax,rbx
  43099c:	jbe    4309f1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  43099e:	cmp    rdi,rbx
  4309a1:	jb     4309b7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x107>
  4309a3:	mov    rdi,r12
  4309a6:	xor    esi,esi
  4309a8:	call   QWORD PTR [r12+0x48]
  4309ad:	mov    rbx,QWORD PTR [r12+0x20]
  4309b2:	mov    rdi,QWORD PTR [r12+0x28]
  4309b7:	sub    rbx,rdi
  4309ba:	cmp    rbx,r15
  4309bd:	jae    4309f1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  4309bf:	nop
  4309c0:	mov    esi,0x20
  4309c5:	mov    rdx,rbx
  4309c8:	call   406080 <memset@plt>
  4309cd:	add    QWORD PTR [r12+0x28],rbx
  4309d2:	sub    r15,rbx
  4309d5:	mov    rdi,r12
  4309d8:	xor    esi,esi
  4309da:	call   QWORD PTR [r12+0x48]
  4309df:	mov    rbx,QWORD PTR [r12+0x20]
  4309e4:	mov    rdi,QWORD PTR [r12+0x28]
  4309e9:	sub    rbx,rdi
  4309ec:	cmp    r15,rbx
  4309ef:	ja     4309c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
  4309f1:	mov    esi,0x20
  4309f6:	mov    rdx,r15
  4309f9:	call   406080 <memset@plt>
  4309fe:	add    QWORD PTR [r12+0x28],r15
  430a03:	jmp    430a16 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  430a05:	cmp    rax,QWORD PTR [r12+0x20]
  430a0a:	jb     430a16 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  430a0c:	mov    rdi,r12
  430a0f:	xor    esi,esi
  430a11:	call   QWORD PTR [r12+0x48]
  430a16:	movzx  esi,BYTE PTR [r13+0x4]
  430a1b:	mov    rdi,r12
  430a1e:	call   r14
  430a21:	dec    ebp
  430a23:	je     430b2a <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  430a29:	add    r13,0x5
  430a2d:	jmp    430a58 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
  430a2f:	nop
  430a30:	mov    esi,0x20
  430a35:	mov    rdx,r15
  430a38:	call   406080 <memset@plt>
  430a3d:	add    QWORD PTR [r12+0x28],r15
  430a42:	movzx  esi,BYTE PTR [r13+0x0]
  430a47:	mov    rdi,r12
  430a4a:	call   r14
  430a4d:	inc    r13
  430a50:	test   ebp,ebp
  430a52:	je     430b2a <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  430a58:	dec    ebp
  430a5a:	mov    rax,QWORD PTR [r12+0x28]
  430a5f:	lea    rcx,[rax+0x1]
  430a63:	mov    QWORD PTR [r12+0x28],rcx
  430a68:	mov    BYTE PTR [rax],0x2c
  430a6b:	cmp    BYTE PTR [r12+0x31],0x0
  430a71:	mov    rax,QWORD PTR [r12+0x28]
  430a76:	je     430b10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x260>
  430a7c:	lea    rcx,[rax+0x1]
  430a80:	mov    QWORD PTR [r12+0x28],rcx
  430a85:	mov    BYTE PTR [rax],0xa
  430a88:	movsxd rax,DWORD PTR [r12+0x38]
  430a8d:	movzx  r15d,BYTE PTR [r12+0x31]
  430a93:	imul   r15,rax
  430a97:	mov    rbx,QWORD PTR [r12+0x20]
  430a9c:	mov    rdi,QWORD PTR [r12+0x28]
  430aa1:	lea    rax,[rdi+r15*1]
  430aa5:	cmp    rax,rbx
  430aa8:	jbe    430a30 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  430aaa:	cmp    rdi,rbx
  430aad:	jb     430ac3 <flatcc_json_printer_bool_enum_vector_field@@Base+0x213>
  430aaf:	mov    rdi,r12
  430ab2:	xor    esi,esi
  430ab4:	call   QWORD PTR [r12+0x48]
  430ab9:	mov    rbx,QWORD PTR [r12+0x20]
  430abe:	mov    rdi,QWORD PTR [r12+0x28]
  430ac3:	sub    rbx,rdi
  430ac6:	cmp    rbx,r15
  430ac9:	jae    430a30 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  430acf:	nop
  430ad0:	mov    esi,0x20
  430ad5:	mov    rdx,rbx
  430ad8:	call   406080 <memset@plt>
  430add:	add    QWORD PTR [r12+0x28],rbx
  430ae2:	sub    r15,rbx
  430ae5:	mov    rdi,r12
  430ae8:	xor    esi,esi
  430aea:	call   QWORD PTR [r12+0x48]
  430aef:	mov    rbx,QWORD PTR [r12+0x20]
  430af4:	mov    rdi,QWORD PTR [r12+0x28]
  430af9:	sub    rbx,rdi
  430afc:	cmp    r15,rbx
  430aff:	ja     430ad0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
  430b01:	jmp    430a30 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  430b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b10:	cmp    rax,QWORD PTR [r12+0x20]
  430b15:	jb     430a42 <flatcc_json_printer_bool_enum_vector_field@@Base+0x192>
  430b1b:	mov    rdi,r12
  430b1e:	xor    esi,esi
  430b20:	call   QWORD PTR [r12+0x48]
  430b25:	jmp    430a42 <flatcc_json_printer_bool_enum_vector_field@@Base+0x192>
  430b2a:	cmp    BYTE PTR [r12+0x31],0x0
  430b30:	mov    r14,QWORD PTR [r12+0x28]
  430b35:	je     430be8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x338>
  430b3b:	lea    rax,[r14+0x1]
  430b3f:	mov    QWORD PTR [r12+0x28],rax
  430b44:	mov    BYTE PTR [r14],0xa
  430b48:	movsxd rax,DWORD PTR [r12+0x38]
  430b4d:	dec    rax
  430b50:	mov    DWORD PTR [r12+0x38],eax
  430b55:	movzx  r14d,BYTE PTR [r12+0x31]
  430b5b:	imul   r14,rax
  430b5f:	mov    rbx,QWORD PTR [r12+0x20]
  430b64:	mov    rdi,QWORD PTR [r12+0x28]
  430b69:	lea    rax,[rdi+r14*1]
  430b6d:	cmp    rax,rbx
  430b70:	jbe    430bd1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x321>
  430b72:	cmp    rdi,rbx
  430b75:	jb     430b8b <flatcc_json_printer_bool_enum_vector_field@@Base+0x2db>
  430b77:	mov    rdi,r12
  430b7a:	xor    esi,esi
  430b7c:	call   QWORD PTR [r12+0x48]
  430b81:	mov    rbx,QWORD PTR [r12+0x20]
  430b86:	mov    rdi,QWORD PTR [r12+0x28]
  430b8b:	sub    rbx,rdi
  430b8e:	cmp    rbx,r14
  430b91:	jae    430bd1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x321>
  430b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b9d:	nop    DWORD PTR [rax]
  430ba0:	mov    esi,0x20
  430ba5:	mov    rdx,rbx
  430ba8:	call   406080 <memset@plt>
  430bad:	add    QWORD PTR [r12+0x28],rbx
  430bb2:	sub    r14,rbx
  430bb5:	mov    rdi,r12
  430bb8:	xor    esi,esi
  430bba:	call   QWORD PTR [r12+0x48]
  430bbf:	mov    rbx,QWORD PTR [r12+0x20]
  430bc4:	mov    rdi,QWORD PTR [r12+0x28]
  430bc9:	sub    rbx,rdi
  430bcc:	cmp    r14,rbx
  430bcf:	ja     430ba0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2f0>
  430bd1:	mov    esi,0x20
  430bd6:	mov    rdx,r14
  430bd9:	call   406080 <memset@plt>
  430bde:	add    r14,QWORD PTR [r12+0x28]
  430be3:	mov    QWORD PTR [r12+0x28],r14
  430be8:	lea    rax,[r14+0x1]
  430bec:	mov    QWORD PTR [r12+0x28],rax
  430bf1:	mov    BYTE PTR [r14],0x5d
  430bf5:	add    rsp,0x8
  430bf9:	pop    rbx
  430bfa:	pop    r12
  430bfc:	pop    r13
  430bfe:	pop    r14
  430c00:	pop    r15
  430c02:	pop    rbp
  430c03:	ret    
  430c04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c0e:	xchg   ax,ax

0000000000430c10 <flatcc_json_printer_struct_vector_field@@Base>:
  430c10:	push   rbp
  430c11:	push   r15
  430c13:	push   r14
  430c15:	push   r13
  430c17:	push   r12
  430c19:	push   rbx
  430c1a:	push   rax
  430c1b:	lea    eax,[rdx+rdx*1]
  430c1e:	add    eax,0x4
  430c21:	cmp    eax,DWORD PTR [rsi+0x10]
  430c24:	jge    4310be <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  430c2a:	mov    rdx,QWORD PTR [rsi+0x8]
  430c2e:	mov    eax,eax
  430c30:	movzx  ebx,WORD PTR [rdx+rax*1]
  430c34:	test   rbx,rbx
  430c37:	je     4310be <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  430c3d:	add    rbx,QWORD PTR [rsi]
  430c40:	je     4310be <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  430c46:	mov    r14,r9
  430c49:	mov    r13,rdi
  430c4c:	mov    eax,DWORD PTR [rsi+0x18]
  430c4f:	lea    edx,[rax+0x1]
  430c52:	mov    DWORD PTR [rsi+0x18],edx
  430c55:	test   eax,eax
  430c57:	je     430c68 <flatcc_json_printer_struct_vector_field@@Base+0x58>
  430c59:	mov    rax,QWORD PTR [r13+0x28]
  430c5d:	lea    rdx,[rax+0x1]
  430c61:	mov    QWORD PTR [r13+0x28],rdx
  430c65:	mov    BYTE PTR [rax],0x2c
  430c68:	mov    r15d,DWORD PTR [rbx]
  430c6b:	mov    ebp,DWORD PTR [rbx+r15*1]
  430c6f:	movsxd rdx,r8d
  430c72:	mov    rdi,r13
  430c75:	mov    rsi,rcx
  430c78:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  430c7d:	inc    DWORD PTR [r13+0x38]
  430c81:	mov    rax,QWORD PTR [r13+0x28]
  430c85:	lea    rcx,[rax+0x1]
  430c89:	mov    QWORD PTR [r13+0x28],rcx
  430c8d:	mov    BYTE PTR [rax],0x5b
  430c90:	test   ebp,ebp
  430c92:	je     431012 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  430c98:	add    r15,rbx
  430c9b:	add    r15,0x4
  430c9f:	cmp    BYTE PTR [r13+0x31],0x0
  430ca4:	mov    r12,QWORD PTR [r13+0x28]
  430ca8:	je     430d44 <flatcc_json_printer_struct_vector_field@@Base+0x134>
  430cae:	lea    rax,[r12+0x1]
  430cb3:	mov    QWORD PTR [r13+0x28],rax
  430cb7:	mov    BYTE PTR [r12],0xa
  430cbc:	movsxd rax,DWORD PTR [r13+0x38]
  430cc0:	movzx  r12d,BYTE PTR [r13+0x31]
  430cc5:	imul   r12,rax
  430cc9:	mov    rbx,QWORD PTR [r13+0x20]
  430ccd:	mov    rdi,QWORD PTR [r13+0x28]
  430cd1:	lea    rax,[rdi+r12*1]
  430cd5:	cmp    rax,rbx
  430cd8:	jbe    430d2d <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  430cda:	cmp    rdi,rbx
  430cdd:	jb     430cf0 <flatcc_json_printer_struct_vector_field@@Base+0xe0>
  430cdf:	mov    rdi,r13
  430ce2:	xor    esi,esi
  430ce4:	call   QWORD PTR [r13+0x48]
  430ce8:	mov    rbx,QWORD PTR [r13+0x20]
  430cec:	mov    rdi,QWORD PTR [r13+0x28]
  430cf0:	sub    rbx,rdi
  430cf3:	cmp    rbx,r12
  430cf6:	jae    430d2d <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  430cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  430d00:	mov    esi,0x20
  430d05:	mov    rdx,rbx
  430d08:	call   406080 <memset@plt>
  430d0d:	add    QWORD PTR [r13+0x28],rbx
  430d11:	sub    r12,rbx
  430d14:	mov    rdi,r13
  430d17:	xor    esi,esi
  430d19:	call   QWORD PTR [r13+0x48]
  430d1d:	mov    rbx,QWORD PTR [r13+0x20]
  430d21:	mov    rdi,QWORD PTR [r13+0x28]
  430d25:	sub    rbx,rdi
  430d28:	cmp    r12,rbx
  430d2b:	ja     430d00 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
  430d2d:	mov    esi,0x20
  430d32:	mov    rdx,r12
  430d35:	call   406080 <memset@plt>
  430d3a:	add    r12,QWORD PTR [r13+0x28]
  430d3e:	mov    QWORD PTR [r13+0x28],r12
  430d42:	jmp    430d57 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  430d44:	cmp    r12,QWORD PTR [r13+0x20]
  430d48:	jb     430d57 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  430d4a:	mov    rdi,r13
  430d4d:	xor    esi,esi
  430d4f:	call   QWORD PTR [r13+0x48]
  430d53:	mov    r12,QWORD PTR [r13+0x28]
  430d57:	inc    DWORD PTR [r13+0x38]
  430d5b:	lea    rax,[r12+0x1]
  430d60:	mov    QWORD PTR [r13+0x28],rax
  430d64:	mov    BYTE PTR [r12],0x7b
  430d69:	mov    rdi,r13
  430d6c:	mov    rsi,r15
  430d6f:	call   QWORD PTR [rsp+0x40]
  430d73:	cmp    BYTE PTR [r13+0x31],0x0
  430d78:	mov    r12,QWORD PTR [r13+0x28]
  430d7c:	je     430e22 <flatcc_json_printer_struct_vector_field@@Base+0x212>
  430d82:	lea    rax,[r12+0x1]
  430d87:	mov    QWORD PTR [r13+0x28],rax
  430d8b:	mov    BYTE PTR [r12],0xa
  430d90:	movsxd rax,DWORD PTR [r13+0x38]
  430d94:	dec    rax
  430d97:	mov    DWORD PTR [r13+0x38],eax
  430d9b:	movzx  r12d,BYTE PTR [r13+0x31]
  430da0:	imul   r12,rax
  430da4:	mov    rbx,QWORD PTR [r13+0x20]
  430da8:	mov    rdi,QWORD PTR [r13+0x28]
  430dac:	lea    rax,[rdi+r12*1]
  430db0:	cmp    rax,rbx
  430db3:	jbe    430e0d <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  430db5:	cmp    rdi,rbx
  430db8:	jb     430dcb <flatcc_json_printer_struct_vector_field@@Base+0x1bb>
  430dba:	mov    rdi,r13
  430dbd:	xor    esi,esi
  430dbf:	call   QWORD PTR [r13+0x48]
  430dc3:	mov    rbx,QWORD PTR [r13+0x20]
  430dc7:	mov    rdi,QWORD PTR [r13+0x28]
  430dcb:	sub    rbx,rdi
  430dce:	cmp    rbx,r12
  430dd1:	jae    430e0d <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  430dd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430ddd:	nop    DWORD PTR [rax]
  430de0:	mov    esi,0x20
  430de5:	mov    rdx,rbx
  430de8:	call   406080 <memset@plt>
  430ded:	add    QWORD PTR [r13+0x28],rbx
  430df1:	sub    r12,rbx
  430df4:	mov    rdi,r13
  430df7:	xor    esi,esi
  430df9:	call   QWORD PTR [r13+0x48]
  430dfd:	mov    rbx,QWORD PTR [r13+0x20]
  430e01:	mov    rdi,QWORD PTR [r13+0x28]
  430e05:	sub    rbx,rdi
  430e08:	cmp    r12,rbx
  430e0b:	ja     430de0 <flatcc_json_printer_struct_vector_field@@Base+0x1d0>
  430e0d:	mov    esi,0x20
  430e12:	mov    rdx,r12
  430e15:	call   406080 <memset@plt>
  430e1a:	add    r12,QWORD PTR [r13+0x28]
  430e1e:	mov    QWORD PTR [r13+0x28],r12
  430e22:	lea    rax,[r12+0x1]
  430e27:	mov    QWORD PTR [r13+0x28],rax
  430e2b:	mov    BYTE PTR [r12],0x7d
  430e30:	dec    ebp
  430e32:	jne    430e6b <flatcc_json_printer_struct_vector_field@@Base+0x25b>
  430e34:	jmp    431012 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  430e39:	nop    DWORD PTR [rax+0x0]
  430e40:	mov    esi,0x20
  430e45:	mov    rdx,r12
  430e48:	call   406080 <memset@plt>
  430e4d:	add    r12,QWORD PTR [r13+0x28]
  430e51:	mov    QWORD PTR [r13+0x28],r12
  430e55:	lea    rax,[r12+0x1]
  430e5a:	mov    QWORD PTR [r13+0x28],rax
  430e5e:	mov    BYTE PTR [r12],0x7d
  430e63:	test   ebp,ebp
  430e65:	je     431012 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  430e6b:	add    r15,r14
  430e6e:	mov    rax,QWORD PTR [r13+0x28]
  430e72:	lea    rcx,[rax+0x1]
  430e76:	mov    QWORD PTR [r13+0x28],rcx
  430e7a:	mov    BYTE PTR [rax],0x2c
  430e7d:	cmp    BYTE PTR [r13+0x31],0x0
  430e82:	mov    r12,QWORD PTR [r13+0x28]
  430e86:	je     430f30 <flatcc_json_printer_struct_vector_field@@Base+0x320>
  430e8c:	lea    rax,[r12+0x1]
  430e91:	mov    QWORD PTR [r13+0x28],rax
  430e95:	mov    BYTE PTR [r12],0xa
  430e9a:	movsxd rax,DWORD PTR [r13+0x38]
  430e9e:	movzx  r12d,BYTE PTR [r13+0x31]
  430ea3:	imul   r12,rax
  430ea7:	mov    rbx,QWORD PTR [r13+0x20]
  430eab:	mov    rdi,QWORD PTR [r13+0x28]
  430eaf:	lea    rax,[rdi+r12*1]
  430eb3:	cmp    rax,rbx
  430eb6:	jbe    430f0d <flatcc_json_printer_struct_vector_field@@Base+0x2fd>
  430eb8:	cmp    rdi,rbx
  430ebb:	jb     430ece <flatcc_json_printer_struct_vector_field@@Base+0x2be>
  430ebd:	mov    rdi,r13
  430ec0:	xor    esi,esi
  430ec2:	call   QWORD PTR [r13+0x48]
  430ec6:	mov    rbx,QWORD PTR [r13+0x20]
  430eca:	mov    rdi,QWORD PTR [r13+0x28]
  430ece:	sub    rbx,rdi
  430ed1:	cmp    rbx,r12
  430ed4:	jae    430f0d <flatcc_json_printer_struct_vector_field@@Base+0x2fd>
  430ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430ee0:	mov    esi,0x20
  430ee5:	mov    rdx,rbx
  430ee8:	call   406080 <memset@plt>
  430eed:	add    QWORD PTR [r13+0x28],rbx
  430ef1:	sub    r12,rbx
  430ef4:	mov    rdi,r13
  430ef7:	xor    esi,esi
  430ef9:	call   QWORD PTR [r13+0x48]
  430efd:	mov    rbx,QWORD PTR [r13+0x20]
  430f01:	mov    rdi,QWORD PTR [r13+0x28]
  430f05:	sub    rbx,rdi
  430f08:	cmp    r12,rbx
  430f0b:	ja     430ee0 <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
  430f0d:	mov    esi,0x20
  430f12:	mov    rdx,r12
  430f15:	call   406080 <memset@plt>
  430f1a:	add    r12,QWORD PTR [r13+0x28]
  430f1e:	mov    QWORD PTR [r13+0x28],r12
  430f22:	jmp    430f50 <flatcc_json_printer_struct_vector_field@@Base+0x340>
  430f24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f2e:	xchg   ax,ax
  430f30:	cmp    r12,QWORD PTR [r13+0x20]
  430f34:	jb     430f50 <flatcc_json_printer_struct_vector_field@@Base+0x340>
  430f36:	mov    rdi,r13
  430f39:	xor    esi,esi
  430f3b:	call   QWORD PTR [r13+0x48]
  430f3f:	mov    r12,QWORD PTR [r13+0x28]
  430f43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f4d:	nop    DWORD PTR [rax]
  430f50:	dec    ebp
  430f52:	inc    DWORD PTR [r13+0x38]
  430f56:	lea    rax,[r12+0x1]
  430f5b:	mov    QWORD PTR [r13+0x28],rax
  430f5f:	mov    BYTE PTR [r12],0x7b
  430f64:	mov    rdi,r13
  430f67:	mov    rsi,r15
  430f6a:	call   QWORD PTR [rsp+0x40]
  430f6e:	cmp    BYTE PTR [r13+0x31],0x0
  430f73:	mov    r12,QWORD PTR [r13+0x28]
  430f77:	je     430e55 <flatcc_json_printer_struct_vector_field@@Base+0x245>
  430f7d:	lea    rax,[r12+0x1]
  430f82:	mov    QWORD PTR [r13+0x28],rax
  430f86:	mov    BYTE PTR [r12],0xa
  430f8b:	movsxd rax,DWORD PTR [r13+0x38]
  430f8f:	dec    rax
  430f92:	mov    DWORD PTR [r13+0x38],eax
  430f96:	movzx  r12d,BYTE PTR [r13+0x31]
  430f9b:	imul   r12,rax
  430f9f:	mov    rbx,QWORD PTR [r13+0x20]
  430fa3:	mov    rdi,QWORD PTR [r13+0x28]
  430fa7:	lea    rax,[rdi+r12*1]
  430fab:	cmp    rax,rbx
  430fae:	jbe    430e40 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  430fb4:	cmp    rdi,rbx
  430fb7:	jb     430fca <flatcc_json_printer_struct_vector_field@@Base+0x3ba>
  430fb9:	mov    rdi,r13
  430fbc:	xor    esi,esi
  430fbe:	call   QWORD PTR [r13+0x48]
  430fc2:	mov    rbx,QWORD PTR [r13+0x20]
  430fc6:	mov    rdi,QWORD PTR [r13+0x28]
  430fca:	sub    rbx,rdi
  430fcd:	cmp    rbx,r12
  430fd0:	jae    430e40 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  430fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430fe0:	mov    esi,0x20
  430fe5:	mov    rdx,rbx
  430fe8:	call   406080 <memset@plt>
  430fed:	add    QWORD PTR [r13+0x28],rbx
  430ff1:	sub    r12,rbx
  430ff4:	mov    rdi,r13
  430ff7:	xor    esi,esi
  430ff9:	call   QWORD PTR [r13+0x48]
  430ffd:	mov    rbx,QWORD PTR [r13+0x20]
  431001:	mov    rdi,QWORD PTR [r13+0x28]
  431005:	sub    rbx,rdi
  431008:	cmp    r12,rbx
  43100b:	ja     430fe0 <flatcc_json_printer_struct_vector_field@@Base+0x3d0>
  43100d:	jmp    430e40 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  431012:	cmp    BYTE PTR [r13+0x31],0x0
  431017:	mov    r14,QWORD PTR [r13+0x28]
  43101b:	je     4310b2 <flatcc_json_printer_struct_vector_field@@Base+0x4a2>
  431021:	lea    rax,[r14+0x1]
  431025:	mov    QWORD PTR [r13+0x28],rax
  431029:	mov    BYTE PTR [r14],0xa
  43102d:	movsxd rax,DWORD PTR [r13+0x38]
  431031:	dec    rax
  431034:	mov    DWORD PTR [r13+0x38],eax
  431038:	movzx  r14d,BYTE PTR [r13+0x31]
  43103d:	imul   r14,rax
  431041:	mov    rbx,QWORD PTR [r13+0x20]
  431045:	mov    rdi,QWORD PTR [r13+0x28]
  431049:	lea    rax,[rdi+r14*1]
  43104d:	cmp    rax,rbx
  431050:	jbe    43109d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  431052:	cmp    rdi,rbx
  431055:	jb     431068 <flatcc_json_printer_struct_vector_field@@Base+0x458>
  431057:	mov    rdi,r13
  43105a:	xor    esi,esi
  43105c:	call   QWORD PTR [r13+0x48]
  431060:	mov    rbx,QWORD PTR [r13+0x20]
  431064:	mov    rdi,QWORD PTR [r13+0x28]
  431068:	sub    rbx,rdi
  43106b:	cmp    rbx,r14
  43106e:	jae    43109d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  431070:	mov    esi,0x20
  431075:	mov    rdx,rbx
  431078:	call   406080 <memset@plt>
  43107d:	add    QWORD PTR [r13+0x28],rbx
  431081:	sub    r14,rbx
  431084:	mov    rdi,r13
  431087:	xor    esi,esi
  431089:	call   QWORD PTR [r13+0x48]
  43108d:	mov    rbx,QWORD PTR [r13+0x20]
  431091:	mov    rdi,QWORD PTR [r13+0x28]
  431095:	sub    rbx,rdi
  431098:	cmp    r14,rbx
  43109b:	ja     431070 <flatcc_json_printer_struct_vector_field@@Base+0x460>
  43109d:	mov    esi,0x20
  4310a2:	mov    rdx,r14
  4310a5:	call   406080 <memset@plt>
  4310aa:	add    r14,QWORD PTR [r13+0x28]
  4310ae:	mov    QWORD PTR [r13+0x28],r14
  4310b2:	lea    rax,[r14+0x1]
  4310b6:	mov    QWORD PTR [r13+0x28],rax
  4310ba:	mov    BYTE PTR [r14],0x5d
  4310be:	add    rsp,0x8
  4310c2:	pop    rbx
  4310c3:	pop    r12
  4310c5:	pop    r13
  4310c7:	pop    r14
  4310c9:	pop    r15
  4310cb:	pop    rbp
  4310cc:	ret    
  4310cd:	nop    DWORD PTR [rax]

00000000004310d0 <flatcc_json_printer_string_vector_field@@Base>:
  4310d0:	push   rbp
  4310d1:	push   r15
  4310d3:	push   r14
  4310d5:	push   r12
  4310d7:	push   rbx
  4310d8:	lea    eax,[rdx+rdx*1]
  4310db:	add    eax,0x4
  4310de:	cmp    eax,DWORD PTR [rsi+0x10]
  4310e1:	jge    4313de <flatcc_json_printer_string_vector_field@@Base+0x30e>
  4310e7:	mov    rdx,QWORD PTR [rsi+0x8]
  4310eb:	mov    eax,eax
  4310ed:	movzx  ebx,WORD PTR [rdx+rax*1]
  4310f1:	test   rbx,rbx
  4310f4:	je     4313de <flatcc_json_printer_string_vector_field@@Base+0x30e>
  4310fa:	add    rbx,QWORD PTR [rsi]
  4310fd:	je     4313de <flatcc_json_printer_string_vector_field@@Base+0x30e>
  431103:	mov    r15,rdi
  431106:	mov    eax,DWORD PTR [rsi+0x18]
  431109:	lea    edx,[rax+0x1]
  43110c:	mov    DWORD PTR [rsi+0x18],edx
  43110f:	test   eax,eax
  431111:	je     431122 <flatcc_json_printer_string_vector_field@@Base+0x52>
  431113:	mov    rax,QWORD PTR [r15+0x28]
  431117:	lea    rdx,[rax+0x1]
  43111b:	mov    QWORD PTR [r15+0x28],rdx
  43111f:	mov    BYTE PTR [rax],0x2c
  431122:	mov    ebp,DWORD PTR [rbx]
  431124:	mov    r12d,DWORD PTR [rbx+rbp*1]
  431128:	movsxd rdx,r8d
  43112b:	mov    rdi,r15
  43112e:	mov    rsi,rcx
  431131:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  431136:	inc    DWORD PTR [r15+0x38]
  43113a:	mov    rax,QWORD PTR [r15+0x28]
  43113e:	lea    rcx,[rax+0x1]
  431142:	mov    QWORD PTR [r15+0x28],rcx
  431146:	mov    BYTE PTR [rax],0x5b
  431149:	test   r12d,r12d
  43114c:	je     431328 <flatcc_json_printer_string_vector_field@@Base+0x258>
  431152:	add    rbp,rbx
  431155:	add    rbp,0x4
  431159:	cmp    BYTE PTR [r15+0x31],0x0
  43115e:	mov    rax,QWORD PTR [r15+0x28]
  431162:	je     4311f0 <flatcc_json_printer_string_vector_field@@Base+0x120>
  431168:	lea    rcx,[rax+0x1]
  43116c:	mov    QWORD PTR [r15+0x28],rcx
  431170:	mov    BYTE PTR [rax],0xa
  431173:	movsxd rax,DWORD PTR [r15+0x38]
  431177:	movzx  r14d,BYTE PTR [r15+0x31]
  43117c:	imul   r14,rax
  431180:	mov    rbx,QWORD PTR [r15+0x20]
  431184:	mov    rdi,QWORD PTR [r15+0x28]
  431188:	lea    rax,[rdi+r14*1]
  43118c:	cmp    rax,rbx
  43118f:	jbe    4311dd <flatcc_json_printer_string_vector_field@@Base+0x10d>
  431191:	cmp    rdi,rbx
  431194:	jb     4311a7 <flatcc_json_printer_string_vector_field@@Base+0xd7>
  431196:	mov    rdi,r15
  431199:	xor    esi,esi
  43119b:	call   QWORD PTR [r15+0x48]
  43119f:	mov    rbx,QWORD PTR [r15+0x20]
  4311a3:	mov    rdi,QWORD PTR [r15+0x28]
  4311a7:	sub    rbx,rdi
  4311aa:	cmp    rbx,r14
  4311ad:	jae    4311dd <flatcc_json_printer_string_vector_field@@Base+0x10d>
  4311af:	nop
  4311b0:	mov    esi,0x20
  4311b5:	mov    rdx,rbx
  4311b8:	call   406080 <memset@plt>
  4311bd:	add    QWORD PTR [r15+0x28],rbx
  4311c1:	sub    r14,rbx
  4311c4:	mov    rdi,r15
  4311c7:	xor    esi,esi
  4311c9:	call   QWORD PTR [r15+0x48]
  4311cd:	mov    rbx,QWORD PTR [r15+0x20]
  4311d1:	mov    rdi,QWORD PTR [r15+0x28]
  4311d5:	sub    rbx,rdi
  4311d8:	cmp    r14,rbx
  4311db:	ja     4311b0 <flatcc_json_printer_string_vector_field@@Base+0xe0>
  4311dd:	mov    esi,0x20
  4311e2:	mov    rdx,r14
  4311e5:	call   406080 <memset@plt>
  4311ea:	add    QWORD PTR [r15+0x28],r14
  4311ee:	jmp    4311ff <flatcc_json_printer_string_vector_field@@Base+0x12f>
  4311f0:	cmp    rax,QWORD PTR [r15+0x20]
  4311f4:	jb     4311ff <flatcc_json_printer_string_vector_field@@Base+0x12f>
  4311f6:	mov    rdi,r15
  4311f9:	xor    esi,esi
  4311fb:	call   QWORD PTR [r15+0x48]
  4311ff:	mov    eax,DWORD PTR [rbp+0x0]
  431202:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  431206:	lea    rsi,[rax+rbp*1]
  43120a:	add    rsi,0x4
  43120e:	mov    rdi,r15
  431211:	call   428500 <flatcc_json_printer_string@@Base+0x10>
  431216:	dec    r12d
  431219:	jne    431251 <flatcc_json_printer_string_vector_field@@Base+0x181>
  43121b:	jmp    431328 <flatcc_json_printer_string_vector_field@@Base+0x258>
  431220:	mov    esi,0x20
  431225:	mov    rdx,r14
  431228:	call   406080 <memset@plt>
  43122d:	add    QWORD PTR [r15+0x28],r14
  431231:	mov    eax,DWORD PTR [rbp+0x0]
  431234:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  431238:	lea    rsi,[rax+rbp*1]
  43123c:	add    rsi,0x4
  431240:	mov    rdi,r15
  431243:	call   428500 <flatcc_json_printer_string@@Base+0x10>
  431248:	test   r12d,r12d
  43124b:	je     431328 <flatcc_json_printer_string_vector_field@@Base+0x258>
  431251:	dec    r12d
  431254:	add    rbp,0x4
  431258:	mov    rax,QWORD PTR [r15+0x28]
  43125c:	lea    rcx,[rax+0x1]
  431260:	mov    QWORD PTR [r15+0x28],rcx
  431264:	mov    BYTE PTR [rax],0x2c
  431267:	cmp    BYTE PTR [r15+0x31],0x0
  43126c:	mov    rax,QWORD PTR [r15+0x28]
  431270:	je     431310 <flatcc_json_printer_string_vector_field@@Base+0x240>
  431276:	lea    rcx,[rax+0x1]
  43127a:	mov    QWORD PTR [r15+0x28],rcx
  43127e:	mov    BYTE PTR [rax],0xa
  431281:	movsxd rax,DWORD PTR [r15+0x38]
  431285:	movzx  r14d,BYTE PTR [r15+0x31]
  43128a:	imul   r14,rax
  43128e:	mov    rbx,QWORD PTR [r15+0x20]
  431292:	mov    rdi,QWORD PTR [r15+0x28]
  431296:	lea    rax,[rdi+r14*1]
  43129a:	cmp    rax,rbx
  43129d:	jbe    431220 <flatcc_json_printer_string_vector_field@@Base+0x150>
  43129f:	cmp    rdi,rbx
  4312a2:	jb     4312b5 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  4312a4:	mov    rdi,r15
  4312a7:	xor    esi,esi
  4312a9:	call   QWORD PTR [r15+0x48]
  4312ad:	mov    rbx,QWORD PTR [r15+0x20]
  4312b1:	mov    rdi,QWORD PTR [r15+0x28]
  4312b5:	sub    rbx,rdi
  4312b8:	cmp    rbx,r14
  4312bb:	jae    431220 <flatcc_json_printer_string_vector_field@@Base+0x150>
  4312c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4312cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4312d0:	mov    esi,0x20
  4312d5:	mov    rdx,rbx
  4312d8:	call   406080 <memset@plt>
  4312dd:	add    QWORD PTR [r15+0x28],rbx
  4312e1:	sub    r14,rbx
  4312e4:	mov    rdi,r15
  4312e7:	xor    esi,esi
  4312e9:	call   QWORD PTR [r15+0x48]
  4312ed:	mov    rbx,QWORD PTR [r15+0x20]
  4312f1:	mov    rdi,QWORD PTR [r15+0x28]
  4312f5:	sub    rbx,rdi
  4312f8:	cmp    r14,rbx
  4312fb:	ja     4312d0 <flatcc_json_printer_string_vector_field@@Base+0x200>
  4312fd:	jmp    431220 <flatcc_json_printer_string_vector_field@@Base+0x150>
  431302:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43130c:	nop    DWORD PTR [rax+0x0]
  431310:	cmp    rax,QWORD PTR [r15+0x20]
  431314:	jb     431231 <flatcc_json_printer_string_vector_field@@Base+0x161>
  43131a:	mov    rdi,r15
  43131d:	xor    esi,esi
  43131f:	call   QWORD PTR [r15+0x48]
  431323:	jmp    431231 <flatcc_json_printer_string_vector_field@@Base+0x161>
  431328:	cmp    BYTE PTR [r15+0x31],0x0
  43132d:	mov    r14,QWORD PTR [r15+0x28]
  431331:	je     4313d2 <flatcc_json_printer_string_vector_field@@Base+0x302>
  431337:	lea    rax,[r14+0x1]
  43133b:	mov    QWORD PTR [r15+0x28],rax
  43133f:	mov    BYTE PTR [r14],0xa
  431343:	movsxd rax,DWORD PTR [r15+0x38]
  431347:	dec    rax
  43134a:	mov    DWORD PTR [r15+0x38],eax
  43134e:	movzx  r14d,BYTE PTR [r15+0x31]
  431353:	imul   r14,rax
  431357:	mov    rbx,QWORD PTR [r15+0x20]
  43135b:	mov    rdi,QWORD PTR [r15+0x28]
  43135f:	lea    rax,[rdi+r14*1]
  431363:	cmp    rax,rbx
  431366:	jbe    4313bd <flatcc_json_printer_string_vector_field@@Base+0x2ed>
  431368:	cmp    rdi,rbx
  43136b:	jb     43137e <flatcc_json_printer_string_vector_field@@Base+0x2ae>
  43136d:	mov    rdi,r15
  431370:	xor    esi,esi
  431372:	call   QWORD PTR [r15+0x48]
  431376:	mov    rbx,QWORD PTR [r15+0x20]
  43137a:	mov    rdi,QWORD PTR [r15+0x28]
  43137e:	sub    rbx,rdi
  431381:	cmp    rbx,r14
  431384:	jae    4313bd <flatcc_json_printer_string_vector_field@@Base+0x2ed>
  431386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431390:	mov    esi,0x20
  431395:	mov    rdx,rbx
  431398:	call   406080 <memset@plt>
  43139d:	add    QWORD PTR [r15+0x28],rbx
  4313a1:	sub    r14,rbx
  4313a4:	mov    rdi,r15
  4313a7:	xor    esi,esi
  4313a9:	call   QWORD PTR [r15+0x48]
  4313ad:	mov    rbx,QWORD PTR [r15+0x20]
  4313b1:	mov    rdi,QWORD PTR [r15+0x28]
  4313b5:	sub    rbx,rdi
  4313b8:	cmp    r14,rbx
  4313bb:	ja     431390 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
  4313bd:	mov    esi,0x20
  4313c2:	mov    rdx,r14
  4313c5:	call   406080 <memset@plt>
  4313ca:	add    r14,QWORD PTR [r15+0x28]
  4313ce:	mov    QWORD PTR [r15+0x28],r14
  4313d2:	lea    rax,[r14+0x1]
  4313d6:	mov    QWORD PTR [r15+0x28],rax
  4313da:	mov    BYTE PTR [r14],0x5d
  4313de:	pop    rbx
  4313df:	pop    r12
  4313e1:	pop    r14
  4313e3:	pop    r15
  4313e5:	pop    rbp
  4313e6:	ret    
  4313e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004313f0 <flatcc_json_printer_table_vector_field@@Base>:
  4313f0:	push   rbp
  4313f1:	push   r15
  4313f3:	push   r14
  4313f5:	push   r13
  4313f7:	push   r12
  4313f9:	push   rbx
  4313fa:	sub    rsp,0x38
  4313fe:	mov    QWORD PTR [rsp+0x10],r9
  431403:	lea    eax,[rdx+rdx*1]
  431406:	add    eax,0x4
  431409:	cmp    eax,DWORD PTR [rsi+0x10]
  43140c:	jge    4317fe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  431412:	mov    rdx,QWORD PTR [rsi+0x8]
  431416:	mov    eax,eax
  431418:	movzx  ebx,WORD PTR [rdx+rax*1]
  43141c:	test   rbx,rbx
  43141f:	je     4317fe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  431425:	add    rbx,QWORD PTR [rsi]
  431428:	je     4317fe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  43142e:	mov    r13,rdi
  431431:	mov    eax,DWORD PTR [rsi+0x18]
  431434:	lea    edx,[rax+0x1]
  431437:	mov    QWORD PTR [rsp+0x8],rsi
  43143c:	mov    DWORD PTR [rsi+0x18],edx
  43143f:	test   eax,eax
  431441:	je     431452 <flatcc_json_printer_table_vector_field@@Base+0x62>
  431443:	mov    rax,QWORD PTR [r13+0x28]
  431447:	lea    rdx,[rax+0x1]
  43144b:	mov    QWORD PTR [r13+0x28],rdx
  43144f:	mov    BYTE PTR [rax],0x2c
  431452:	mov    ebp,DWORD PTR [rbx]
  431454:	mov    r14d,DWORD PTR [rbx+rbp*1]
  431458:	movsxd rdx,r8d
  43145b:	mov    rdi,r13
  43145e:	mov    rsi,rcx
  431461:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  431466:	inc    DWORD PTR [r13+0x38]
  43146a:	mov    rax,QWORD PTR [r13+0x28]
  43146e:	lea    rcx,[rax+0x1]
  431472:	mov    QWORD PTR [r13+0x28],rcx
  431476:	mov    BYTE PTR [rax],0x5b
  431479:	test   r14d,r14d
  43147c:	mov    rdx,QWORD PTR [rsp+0x8]
  431481:	je     43174a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  431487:	lea    r15,[rbx+rbp*1]
  43148b:	add    r15,0x4
  43148f:	mov    eax,DWORD PTR [rdx+0x14]
  431492:	dec    eax
  431494:	je     431599 <flatcc_json_printer_table_vector_field@@Base+0x1a9>
  43149a:	mov    ecx,DWORD PTR [r15]
  43149d:	add    rcx,r15
  4314a0:	inc    DWORD PTR [r13+0x38]
  4314a4:	mov    rdx,QWORD PTR [r13+0x28]
  4314a8:	lea    rsi,[rdx+0x1]
  4314ac:	mov    QWORD PTR [r13+0x28],rsi
  4314b0:	mov    BYTE PTR [rdx],0x7b
  4314b3:	mov    DWORD PTR [rsp+0x30],0x0
  4314bb:	mov    DWORD PTR [rsp+0x2c],eax
  4314bf:	mov    QWORD PTR [rsp+0x18],rcx
  4314c4:	movsxd rax,DWORD PTR [rcx]
  4314c7:	sub    rcx,rax
  4314ca:	mov    QWORD PTR [rsp+0x20],rcx
  4314cf:	movzx  eax,WORD PTR [rcx]
  4314d2:	mov    DWORD PTR [rsp+0x28],eax
  4314d6:	lea    rsi,[rsp+0x18]
  4314db:	mov    rdi,r13
  4314de:	call   QWORD PTR [rsp+0x10]
  4314e2:	cmp    BYTE PTR [r13+0x31],0x0
  4314e7:	mov    r12,QWORD PTR [r13+0x28]
  4314eb:	je     4315b2 <flatcc_json_printer_table_vector_field@@Base+0x1c2>
  4314f1:	lea    rax,[r12+0x1]
  4314f6:	mov    QWORD PTR [r13+0x28],rax
  4314fa:	mov    BYTE PTR [r12],0xa
  4314ff:	movsxd rax,DWORD PTR [r13+0x38]
  431503:	dec    rax
  431506:	mov    DWORD PTR [r13+0x38],eax
  43150a:	movzx  r12d,BYTE PTR [r13+0x31]
  43150f:	imul   r12,rax
  431513:	mov    rbx,QWORD PTR [r13+0x20]
  431517:	mov    rdi,QWORD PTR [r13+0x28]
  43151b:	lea    rax,[rdi+r12*1]
  43151f:	cmp    rax,rbx
  431522:	jbe    43157d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  431524:	cmp    rdi,rbx
  431527:	jb     43153a <flatcc_json_printer_table_vector_field@@Base+0x14a>
  431529:	mov    rdi,r13
  43152c:	xor    esi,esi
  43152e:	call   QWORD PTR [r13+0x48]
  431532:	mov    rbx,QWORD PTR [r13+0x20]
  431536:	mov    rdi,QWORD PTR [r13+0x28]
  43153a:	sub    rbx,rdi
  43153d:	cmp    rbx,r12
  431540:	jae    43157d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  431542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43154c:	nop    DWORD PTR [rax+0x0]
  431550:	mov    esi,0x20
  431555:	mov    rdx,rbx
  431558:	call   406080 <memset@plt>
  43155d:	add    QWORD PTR [r13+0x28],rbx
  431561:	sub    r12,rbx
  431564:	mov    rdi,r13
  431567:	xor    esi,esi
  431569:	call   QWORD PTR [r13+0x48]
  43156d:	mov    rbx,QWORD PTR [r13+0x20]
  431571:	mov    rdi,QWORD PTR [r13+0x28]
  431575:	sub    rbx,rdi
  431578:	cmp    r12,rbx
  43157b:	ja     431550 <flatcc_json_printer_table_vector_field@@Base+0x160>
  43157d:	mov    esi,0x20
  431582:	mov    rdx,r12
  431585:	call   406080 <memset@plt>
  43158a:	mov    rdx,QWORD PTR [rsp+0x8]
  43158f:	add    r12,QWORD PTR [r13+0x28]
  431593:	mov    QWORD PTR [r13+0x28],r12
  431597:	jmp    4315b7 <flatcc_json_printer_table_vector_field@@Base+0x1c7>
  431599:	cmp    DWORD PTR [r13+0x3c],0x0
  43159e:	jne    4315c5 <flatcc_json_printer_table_vector_field@@Base+0x1d5>
  4315a0:	mov    DWORD PTR [r13+0x3c],0x2
  4315a8:	dec    r14d
  4315ab:	jne    4315ce <flatcc_json_printer_table_vector_field@@Base+0x1de>
  4315ad:	jmp    43174a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  4315b2:	mov    rdx,QWORD PTR [rsp+0x8]
  4315b7:	lea    rax,[r12+0x1]
  4315bc:	mov    QWORD PTR [r13+0x28],rax
  4315c0:	mov    BYTE PTR [r12],0x7d
  4315c5:	dec    r14d
  4315c8:	je     43174a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  4315ce:	lea    r12,[rsp+0x18]
  4315d3:	jmp    431612 <flatcc_json_printer_table_vector_field@@Base+0x222>
  4315d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4315df:	nop
  4315e0:	mov    esi,0x20
  4315e5:	mov    rdx,rbx
  4315e8:	call   406080 <memset@plt>
  4315ed:	mov    rdx,QWORD PTR [rsp+0x8]
  4315f2:	add    rbx,QWORD PTR [r13+0x28]
  4315f6:	mov    QWORD PTR [r13+0x28],rbx
  4315fa:	lea    rax,[rbx+0x1]
  4315fe:	mov    QWORD PTR [r13+0x28],rax
  431602:	mov    BYTE PTR [rbx],0x7d
  431605:	add    r15,0x4
  431609:	test   r14d,r14d
  43160c:	je     43174a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  431612:	dec    r14d
  431615:	mov    rax,QWORD PTR [r13+0x28]
  431619:	lea    rcx,[rax+0x1]
  43161d:	mov    QWORD PTR [r13+0x28],rcx
  431621:	mov    BYTE PTR [rax],0x2c
  431624:	mov    eax,DWORD PTR [rdx+0x14]
  431627:	dec    eax
  431629:	je     431720 <flatcc_json_printer_table_vector_field@@Base+0x330>
  43162f:	mov    ecx,DWORD PTR [r15+0x4]
  431633:	add    rcx,r15
  431636:	add    rcx,0x4
  43163a:	inc    DWORD PTR [r13+0x38]
  43163e:	mov    rdx,QWORD PTR [r13+0x28]
  431642:	lea    rsi,[rdx+0x1]
  431646:	mov    QWORD PTR [r13+0x28],rsi
  43164a:	mov    BYTE PTR [rdx],0x7b
  43164d:	mov    DWORD PTR [rsp+0x30],0x0
  431655:	mov    DWORD PTR [rsp+0x2c],eax
  431659:	mov    QWORD PTR [rsp+0x18],rcx
  43165e:	movsxd rax,DWORD PTR [rcx]
  431661:	sub    rcx,rax
  431664:	mov    QWORD PTR [rsp+0x20],rcx
  431669:	movzx  eax,WORD PTR [rcx]
  43166c:	mov    DWORD PTR [rsp+0x28],eax
  431670:	mov    rdi,r13
  431673:	mov    rsi,r12
  431676:	call   QWORD PTR [rsp+0x10]
  43167a:	cmp    BYTE PTR [r13+0x31],0x0
  43167f:	mov    rbx,QWORD PTR [r13+0x28]
  431683:	je     431740 <flatcc_json_printer_table_vector_field@@Base+0x350>
  431689:	lea    rax,[rbx+0x1]
  43168d:	mov    QWORD PTR [r13+0x28],rax
  431691:	mov    BYTE PTR [rbx],0xa
  431694:	movsxd rax,DWORD PTR [r13+0x38]
  431698:	dec    rax
  43169b:	mov    DWORD PTR [r13+0x38],eax
  43169f:	movzx  ebx,BYTE PTR [r13+0x31]
  4316a4:	imul   rbx,rax
  4316a8:	mov    rbp,QWORD PTR [r13+0x20]
  4316ac:	mov    rdi,QWORD PTR [r13+0x28]
  4316b0:	lea    rax,[rdi+rbx*1]
  4316b4:	cmp    rax,rbp
  4316b7:	jbe    4315e0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  4316bd:	cmp    rdi,rbp
  4316c0:	jb     4316d3 <flatcc_json_printer_table_vector_field@@Base+0x2e3>
  4316c2:	mov    rdi,r13
  4316c5:	xor    esi,esi
  4316c7:	call   QWORD PTR [r13+0x48]
  4316cb:	mov    rbp,QWORD PTR [r13+0x20]
  4316cf:	mov    rdi,QWORD PTR [r13+0x28]
  4316d3:	sub    rbp,rdi
  4316d6:	cmp    rbp,rbx
  4316d9:	jae    4315e0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  4316df:	nop
  4316e0:	mov    esi,0x20
  4316e5:	mov    rdx,rbp
  4316e8:	call   406080 <memset@plt>
  4316ed:	add    QWORD PTR [r13+0x28],rbp
  4316f1:	sub    rbx,rbp
  4316f4:	mov    rdi,r13
  4316f7:	xor    esi,esi
  4316f9:	call   QWORD PTR [r13+0x48]
  4316fd:	mov    rbp,QWORD PTR [r13+0x20]
  431701:	mov    rdi,QWORD PTR [r13+0x28]
  431705:	sub    rbp,rdi
  431708:	cmp    rbx,rbp
  43170b:	ja     4316e0 <flatcc_json_printer_table_vector_field@@Base+0x2f0>
  43170d:	jmp    4315e0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  431712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43171c:	nop    DWORD PTR [rax+0x0]
  431720:	cmp    DWORD PTR [r13+0x3c],0x0
  431725:	jne    431605 <flatcc_json_printer_table_vector_field@@Base+0x215>
  43172b:	mov    DWORD PTR [r13+0x3c],0x2
  431733:	jmp    431605 <flatcc_json_printer_table_vector_field@@Base+0x215>
  431738:	nop    DWORD PTR [rax+rax*1+0x0]
  431740:	mov    rdx,QWORD PTR [rsp+0x8]
  431745:	jmp    4315fa <flatcc_json_printer_table_vector_field@@Base+0x20a>
  43174a:	cmp    BYTE PTR [r13+0x31],0x0
  43174f:	mov    r14,QWORD PTR [r13+0x28]
  431753:	je     4317f2 <flatcc_json_printer_table_vector_field@@Base+0x402>
  431759:	lea    rax,[r14+0x1]
  43175d:	mov    QWORD PTR [r13+0x28],rax
  431761:	mov    BYTE PTR [r14],0xa
  431765:	movsxd rax,DWORD PTR [r13+0x38]
  431769:	dec    rax
  43176c:	mov    DWORD PTR [r13+0x38],eax
  431770:	movzx  r14d,BYTE PTR [r13+0x31]
  431775:	imul   r14,rax
  431779:	mov    rbx,QWORD PTR [r13+0x20]
  43177d:	mov    rdi,QWORD PTR [r13+0x28]
  431781:	lea    rax,[rdi+r14*1]
  431785:	cmp    rax,rbx
  431788:	jbe    4317dd <flatcc_json_printer_table_vector_field@@Base+0x3ed>
  43178a:	cmp    rdi,rbx
  43178d:	jb     4317a0 <flatcc_json_printer_table_vector_field@@Base+0x3b0>
  43178f:	mov    rdi,r13
  431792:	xor    esi,esi
  431794:	call   QWORD PTR [r13+0x48]
  431798:	mov    rbx,QWORD PTR [r13+0x20]
  43179c:	mov    rdi,QWORD PTR [r13+0x28]
  4317a0:	sub    rbx,rdi
  4317a3:	cmp    rbx,r14
  4317a6:	jae    4317dd <flatcc_json_printer_table_vector_field@@Base+0x3ed>
  4317a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4317b0:	mov    esi,0x20
  4317b5:	mov    rdx,rbx
  4317b8:	call   406080 <memset@plt>
  4317bd:	add    QWORD PTR [r13+0x28],rbx
  4317c1:	sub    r14,rbx
  4317c4:	mov    rdi,r13
  4317c7:	xor    esi,esi
  4317c9:	call   QWORD PTR [r13+0x48]
  4317cd:	mov    rbx,QWORD PTR [r13+0x20]
  4317d1:	mov    rdi,QWORD PTR [r13+0x28]
  4317d5:	sub    rbx,rdi
  4317d8:	cmp    r14,rbx
  4317db:	ja     4317b0 <flatcc_json_printer_table_vector_field@@Base+0x3c0>
  4317dd:	mov    esi,0x20
  4317e2:	mov    rdx,r14
  4317e5:	call   406080 <memset@plt>
  4317ea:	add    r14,QWORD PTR [r13+0x28]
  4317ee:	mov    QWORD PTR [r13+0x28],r14
  4317f2:	lea    rax,[r14+0x1]
  4317f6:	mov    QWORD PTR [r13+0x28],rax
  4317fa:	mov    BYTE PTR [r14],0x5d
  4317fe:	add    rsp,0x38
  431802:	pop    rbx
  431803:	pop    r12
  431805:	pop    r13
  431807:	pop    r14
  431809:	pop    r15
  43180b:	pop    rbp
  43180c:	ret    
  43180d:	nop    DWORD PTR [rax]

0000000000431810 <flatcc_json_printer_union_vector_field@@Base>:
  431810:	push   rbp
  431811:	push   r15
  431813:	push   r14
  431815:	push   r13
  431817:	push   r12
  431819:	push   rbx
  43181a:	sub    rsp,0xa8
  431821:	mov    QWORD PTR [rsp+0x10],r9
  431826:	mov    r13d,r8d
  431829:	mov    r15,rcx
  43182c:	mov    ebp,edx
  43182e:	mov    rbx,rsi
  431831:	mov    r14,rdi
  431834:	lea    ecx,[rbp+rbp*1+0x2]
  431838:	mov    eax,DWORD PTR [rsi+0x10]
  43183b:	cmp    ecx,eax
  43183d:	jge    431853 <flatcc_json_printer_union_vector_field@@Base+0x43>
  43183f:	mov    rdx,QWORD PTR [rbx+0x8]
  431843:	mov    ecx,ecx
  431845:	movzx  edx,WORD PTR [rdx+rcx*1]
  431849:	test   rdx,rdx
  43184c:	je     431853 <flatcc_json_printer_union_vector_field@@Base+0x43>
  43184e:	add    rdx,QWORD PTR [rbx]
  431851:	jmp    431855 <flatcc_json_printer_union_vector_field@@Base+0x45>
  431853:	xor    edx,edx
  431855:	lea    ecx,[rbp+rbp*1+0x4]
  431859:	cmp    ecx,eax
  43185b:	jge    431871 <flatcc_json_printer_union_vector_field@@Base+0x61>
  43185d:	mov    rax,QWORD PTR [rbx+0x8]
  431861:	mov    ecx,ecx
  431863:	movzx  eax,WORD PTR [rax+rcx*1]
  431867:	test   rax,rax
  43186a:	je     431871 <flatcc_json_printer_union_vector_field@@Base+0x61>
  43186c:	add    rax,QWORD PTR [rbx]
  43186f:	jmp    431873 <flatcc_json_printer_union_vector_field@@Base+0x63>
  431871:	xor    eax,eax
  431873:	mov    QWORD PTR [rsp+0x8],rax
  431878:	mov    QWORD PTR [rsp+0x18],rdx
  43187d:	mov    eax,DWORD PTR [rbx+0x14]
  431880:	mov    DWORD PTR [rsp+0x28],eax
  431884:	cmp    r13d,0x65
  431888:	jge    431b1c <flatcc_json_printer_union_vector_field@@Base+0x30c>
  43188e:	movsxd r12,r13d
  431891:	lea    rdi,[rsp+0x30]
  431896:	mov    rsi,r15
  431899:	mov    rdx,r12
  43189c:	call   4060d0 <memcpy@plt>
  4318a1:	mov    DWORD PTR [rsp+r12*1+0x30],0x7079745f
  4318aa:	mov    BYTE PTR [rsp+r12*1+0x34],0x65
  4318b0:	cmp    QWORD PTR [rsp+0x18],0x0
  4318b6:	je     431b0a <flatcc_json_printer_union_vector_field@@Base+0x2fa>
  4318bc:	cmp    QWORD PTR [rsp+0x8],0x0
  4318c2:	je     431b0a <flatcc_json_printer_union_vector_field@@Base+0x2fa>
  4318c8:	dec    ebp
  4318ca:	add    r13d,0x5
  4318ce:	lea    rcx,[rsp+0x30]
  4318d3:	mov    rdi,r14
  4318d6:	mov    rsi,rbx
  4318d9:	mov    edx,ebp
  4318db:	mov    r8d,r13d
  4318de:	mov    r9,QWORD PTR [rsp+0x10]
  4318e3:	call   42ea50 <flatcc_json_printer_utype_enum_vector_field@@Base>
  4318e8:	mov    eax,DWORD PTR [rbx+0x18]
  4318eb:	lea    ecx,[rax+0x1]
  4318ee:	mov    DWORD PTR [rbx+0x18],ecx
  4318f1:	test   eax,eax
  4318f3:	je     431904 <flatcc_json_printer_union_vector_field@@Base+0xf4>
  4318f5:	mov    rax,QWORD PTR [r14+0x28]
  4318f9:	lea    rcx,[rax+0x1]
  4318fd:	mov    QWORD PTR [r14+0x28],rcx
  431901:	mov    BYTE PTR [rax],0x2c
  431904:	mov    rax,QWORD PTR [rsp+0x8]
  431909:	mov    ecx,DWORD PTR [rax]
  43190b:	mov    rbx,QWORD PTR [rsp+0x18]
  431910:	mov    r13d,DWORD PTR [rbx]
  431913:	mov    QWORD PTR [rsp+0x10],rcx
  431918:	mov    ebp,DWORD PTR [rax+rcx*1]
  43191b:	mov    rdi,r14
  43191e:	mov    rsi,r15
  431921:	mov    rdx,r12
  431924:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  431929:	inc    DWORD PTR [r14+0x38]
  43192d:	lea    r15,[r14+0x28]
  431931:	mov    rax,QWORD PTR [r14+0x28]
  431935:	lea    rcx,[rax+0x1]
  431939:	mov    QWORD PTR [r14+0x28],rcx
  43193d:	mov    BYTE PTR [rax],0x5b
  431940:	test   ebp,ebp
  431942:	je     431a60 <flatcc_json_printer_union_vector_field@@Base+0x250>
  431948:	mov    rdx,rbx
  43194b:	mov    al,BYTE PTR [rbx+r13*1+0x4]
  431950:	test   al,al
  431952:	je     43198b <flatcc_json_printer_union_vector_field@@Base+0x17b>
  431954:	mov    rcx,QWORD PTR [rsp+0x8]
  431959:	mov    rdx,QWORD PTR [rsp+0x10]
  43195e:	add    rcx,rdx
  431961:	add    rcx,0x4
  431965:	mov    BYTE PTR [rsp+0x2c],al
  431969:	mov    QWORD PTR [rsp+0x20],rcx
  43196e:	lea    rsi,[rsp+0x20]
  431973:	mov    rdi,r14
  431976:	call   QWORD PTR [rsp+0xe0]
  43197d:	mov    rdx,QWORD PTR [rsp+0x18]
  431982:	dec    ebp
  431984:	jne    4319c7 <flatcc_json_printer_union_vector_field@@Base+0x1b7>
  431986:	jmp    431a60 <flatcc_json_printer_union_vector_field@@Base+0x250>
  43198b:	mov    rax,QWORD PTR [r15]
  43198e:	lea    rcx,[rax+0x1]
  431992:	mov    QWORD PTR [r15],rcx
  431995:	mov    BYTE PTR [rax],0x6e
  431998:	mov    rax,QWORD PTR [r15]
  43199b:	lea    rcx,[rax+0x1]
  43199f:	mov    QWORD PTR [r15],rcx
  4319a2:	mov    BYTE PTR [rax],0x75
  4319a5:	mov    rax,QWORD PTR [r15]
  4319a8:	lea    rcx,[rax+0x1]
  4319ac:	mov    QWORD PTR [r15],rcx
  4319af:	mov    BYTE PTR [rax],0x6c
  4319b2:	mov    rax,QWORD PTR [r15]
  4319b5:	lea    rcx,[rax+0x1]
  4319b9:	mov    QWORD PTR [r15],rcx
  4319bc:	mov    BYTE PTR [rax],0x6c
  4319bf:	dec    ebp
  4319c1:	je     431a60 <flatcc_json_printer_union_vector_field@@Base+0x250>
  4319c7:	mov    ebp,ebp
  4319c9:	lea    rbx,[rdx+r13*1]
  4319cd:	add    rbx,0x5
  4319d1:	mov    rax,QWORD PTR [rsp+0x8]
  4319d6:	mov    rcx,QWORD PTR [rsp+0x10]
  4319db:	lea    r12,[rcx+rax*1]
  4319df:	add    r12,0x8
  4319e3:	xor    r13d,r13d
  4319e6:	jmp    431a30 <flatcc_json_printer_union_vector_field@@Base+0x220>
  4319e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4319f0:	mov    rax,QWORD PTR [r15]
  4319f3:	lea    rcx,[rax+0x1]
  4319f7:	mov    QWORD PTR [r15],rcx
  4319fa:	mov    BYTE PTR [rax],0x6e
  4319fd:	mov    rax,QWORD PTR [r15]
  431a00:	lea    rcx,[rax+0x1]
  431a04:	mov    QWORD PTR [r15],rcx
  431a07:	mov    BYTE PTR [rax],0x75
  431a0a:	mov    rax,QWORD PTR [r15]
  431a0d:	lea    rcx,[rax+0x1]
  431a11:	mov    QWORD PTR [r15],rcx
  431a14:	mov    BYTE PTR [rax],0x6c
  431a17:	mov    rax,QWORD PTR [r15]
  431a1a:	lea    rcx,[rax+0x1]
  431a1e:	mov    QWORD PTR [r15],rcx
  431a21:	mov    BYTE PTR [rax],0x6c
  431a24:	inc    r13
  431a27:	add    r12,0x4
  431a2b:	cmp    ebp,r13d
  431a2e:	je     431a60 <flatcc_json_printer_union_vector_field@@Base+0x250>
  431a30:	movzx  eax,BYTE PTR [rbx+r13*1]
  431a35:	mov    rcx,QWORD PTR [r15]
  431a38:	lea    rdx,[rcx+0x1]
  431a3c:	mov    QWORD PTR [r15],rdx
  431a3f:	mov    BYTE PTR [rcx],0x2c
  431a42:	test   al,al
  431a44:	je     4319f0 <flatcc_json_printer_union_vector_field@@Base+0x1e0>
  431a46:	mov    BYTE PTR [rsp+0x2c],al
  431a4a:	mov    QWORD PTR [rsp+0x20],r12
  431a4f:	mov    rdi,r14
  431a52:	lea    rsi,[rsp+0x20]
  431a57:	call   QWORD PTR [rsp+0xe0]
  431a5e:	jmp    431a24 <flatcc_json_printer_union_vector_field@@Base+0x214>
  431a60:	cmp    BYTE PTR [r14+0x31],0x0
  431a65:	mov    rbx,QWORD PTR [r14+0x28]
  431a69:	je     431b00 <flatcc_json_printer_union_vector_field@@Base+0x2f0>
  431a6f:	lea    rax,[rbx+0x1]
  431a73:	mov    QWORD PTR [r14+0x28],rax
  431a77:	mov    BYTE PTR [rbx],0xa
  431a7a:	movsxd rax,DWORD PTR [r14+0x38]
  431a7e:	dec    rax
  431a81:	mov    DWORD PTR [r14+0x38],eax
  431a85:	movzx  ebx,BYTE PTR [r14+0x31]
  431a8a:	imul   rbx,rax
  431a8e:	mov    rbp,QWORD PTR [r14+0x20]
  431a92:	mov    rdi,QWORD PTR [r14+0x28]
  431a96:	lea    rax,[rdi+rbx*1]
  431a9a:	cmp    rax,rbp
  431a9d:	jbe    431aed <flatcc_json_printer_union_vector_field@@Base+0x2dd>
  431a9f:	cmp    rdi,rbp
  431aa2:	jb     431ab5 <flatcc_json_printer_union_vector_field@@Base+0x2a5>
  431aa4:	mov    rdi,r14
  431aa7:	xor    esi,esi
  431aa9:	call   QWORD PTR [r14+0x48]
  431aad:	mov    rbp,QWORD PTR [r14+0x20]
  431ab1:	mov    rdi,QWORD PTR [r14+0x28]
  431ab5:	sub    rbp,rdi
  431ab8:	cmp    rbp,rbx
  431abb:	jae    431aed <flatcc_json_printer_union_vector_field@@Base+0x2dd>
  431abd:	nop    DWORD PTR [rax]
  431ac0:	mov    esi,0x20
  431ac5:	mov    rdx,rbp
  431ac8:	call   406080 <memset@plt>
  431acd:	add    QWORD PTR [r14+0x28],rbp
  431ad1:	sub    rbx,rbp
  431ad4:	mov    rdi,r14
  431ad7:	xor    esi,esi
  431ad9:	call   QWORD PTR [r14+0x48]
  431add:	mov    rbp,QWORD PTR [r14+0x20]
  431ae1:	mov    rdi,QWORD PTR [r14+0x28]
  431ae5:	sub    rbp,rdi
  431ae8:	cmp    rbx,rbp
  431aeb:	ja     431ac0 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
  431aed:	mov    esi,0x20
  431af2:	mov    rdx,rbx
  431af5:	call   406080 <memset@plt>
  431afa:	add    rbx,QWORD PTR [r15]
  431afd:	mov    QWORD PTR [r15],rbx
  431b00:	lea    rax,[rbx+0x1]
  431b04:	mov    QWORD PTR [r15],rax
  431b07:	mov    BYTE PTR [rbx],0x5d
  431b0a:	add    rsp,0xa8
  431b11:	pop    rbx
  431b12:	pop    r12
  431b14:	pop    r13
  431b16:	pop    r14
  431b18:	pop    r15
  431b1a:	pop    rbp
  431b1b:	ret    
  431b1c:	cmp    DWORD PTR [r14+0x3c],0x0
  431b21:	jne    431b2b <flatcc_json_printer_union_vector_field@@Base+0x31b>
  431b23:	mov    DWORD PTR [r14+0x3c],0x1
  431b2b:	lea    rdi,[rip+0x9d60]        # 43b892 <flatcc_builder_padding_base@@Base+0x31e2>
  431b32:	lea    rsi,[rip+0x9d74]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  431b39:	lea    rcx,[rip+0x9dd2]        # 43b912 <flatcc_builder_padding_base@@Base+0x3262>
  431b40:	mov    edx,0x34b
  431b45:	call   406070 <__assert_fail@plt>
  431b4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000431b50 <flatcc_json_printer_table_field@@Base>:
  431b50:	push   r15
  431b52:	push   r14
  431b54:	push   r12
  431b56:	push   rbx
  431b57:	sub    rsp,0x28
  431b5b:	lea    eax,[rdx+rdx*1]
  431b5e:	add    eax,0x4
  431b61:	cmp    eax,DWORD PTR [rsi+0x10]
  431b64:	jge    431ccf <flatcc_json_printer_table_field@@Base+0x17f>
  431b6a:	mov    rbx,rsi
  431b6d:	mov    rdx,QWORD PTR [rsi+0x8]
  431b71:	mov    eax,eax
  431b73:	movzx  r12d,WORD PTR [rdx+rax*1]
  431b78:	test   r12,r12
  431b7b:	je     431ccf <flatcc_json_printer_table_field@@Base+0x17f>
  431b81:	add    r12,QWORD PTR [rbx]
  431b84:	je     431ccf <flatcc_json_printer_table_field@@Base+0x17f>
  431b8a:	mov    r15,r9
  431b8d:	mov    r14,rdi
  431b90:	mov    eax,DWORD PTR [rbx+0x18]
  431b93:	lea    edx,[rax+0x1]
  431b96:	mov    DWORD PTR [rbx+0x18],edx
  431b99:	test   eax,eax
  431b9b:	je     431bac <flatcc_json_printer_table_field@@Base+0x5c>
  431b9d:	mov    rax,QWORD PTR [r14+0x28]
  431ba1:	lea    rdx,[rax+0x1]
  431ba5:	mov    QWORD PTR [r14+0x28],rdx
  431ba9:	mov    BYTE PTR [rax],0x2c
  431bac:	movsxd rdx,r8d
  431baf:	mov    rdi,r14
  431bb2:	mov    rsi,rcx
  431bb5:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  431bba:	mov    eax,DWORD PTR [rbx+0x14]
  431bbd:	dec    eax
  431bbf:	je     431cc0 <flatcc_json_printer_table_field@@Base+0x170>
  431bc5:	mov    ecx,DWORD PTR [r12]
  431bc9:	add    rcx,r12
  431bcc:	inc    DWORD PTR [r14+0x38]
  431bd0:	mov    rdx,QWORD PTR [r14+0x28]
  431bd4:	lea    rsi,[rdx+0x1]
  431bd8:	mov    QWORD PTR [r14+0x28],rsi
  431bdc:	mov    BYTE PTR [rdx],0x7b
  431bdf:	mov    DWORD PTR [rsp+0x20],0x0
  431be7:	mov    DWORD PTR [rsp+0x1c],eax
  431beb:	mov    QWORD PTR [rsp+0x8],rcx
  431bf0:	movsxd rax,DWORD PTR [rcx]
  431bf3:	sub    rcx,rax
  431bf6:	mov    QWORD PTR [rsp+0x10],rcx
  431bfb:	movzx  eax,WORD PTR [rcx]
  431bfe:	mov    DWORD PTR [rsp+0x18],eax
  431c02:	lea    rsi,[rsp+0x8]
  431c07:	mov    rdi,r14
  431c0a:	call   r15
  431c0d:	cmp    BYTE PTR [r14+0x31],0x0
  431c12:	mov    r15,QWORD PTR [r14+0x28]
  431c16:	je     431cb2 <flatcc_json_printer_table_field@@Base+0x162>
  431c1c:	lea    rax,[r15+0x1]
  431c20:	mov    QWORD PTR [r14+0x28],rax
  431c24:	mov    BYTE PTR [r15],0xa
  431c28:	movsxd rax,DWORD PTR [r14+0x38]
  431c2c:	dec    rax
  431c2f:	mov    DWORD PTR [r14+0x38],eax
  431c33:	movzx  r15d,BYTE PTR [r14+0x31]
  431c38:	imul   r15,rax
  431c3c:	mov    rbx,QWORD PTR [r14+0x20]
  431c40:	mov    rdi,QWORD PTR [r14+0x28]
  431c44:	lea    rax,[rdi+r15*1]
  431c48:	cmp    rax,rbx
  431c4b:	jbe    431c9d <flatcc_json_printer_table_field@@Base+0x14d>
  431c4d:	cmp    rdi,rbx
  431c50:	jb     431c63 <flatcc_json_printer_table_field@@Base+0x113>
  431c52:	mov    rdi,r14
  431c55:	xor    esi,esi
  431c57:	call   QWORD PTR [r14+0x48]
  431c5b:	mov    rbx,QWORD PTR [r14+0x20]
  431c5f:	mov    rdi,QWORD PTR [r14+0x28]
  431c63:	sub    rbx,rdi
  431c66:	cmp    rbx,r15
  431c69:	jae    431c9d <flatcc_json_printer_table_field@@Base+0x14d>
  431c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  431c70:	mov    esi,0x20
  431c75:	mov    rdx,rbx
  431c78:	call   406080 <memset@plt>
  431c7d:	add    QWORD PTR [r14+0x28],rbx
  431c81:	sub    r15,rbx
  431c84:	mov    rdi,r14
  431c87:	xor    esi,esi
  431c89:	call   QWORD PTR [r14+0x48]
  431c8d:	mov    rbx,QWORD PTR [r14+0x20]
  431c91:	mov    rdi,QWORD PTR [r14+0x28]
  431c95:	sub    rbx,rdi
  431c98:	cmp    r15,rbx
  431c9b:	ja     431c70 <flatcc_json_printer_table_field@@Base+0x120>
  431c9d:	mov    esi,0x20
  431ca2:	mov    rdx,r15
  431ca5:	call   406080 <memset@plt>
  431caa:	add    r15,QWORD PTR [r14+0x28]
  431cae:	mov    QWORD PTR [r14+0x28],r15
  431cb2:	lea    rax,[r15+0x1]
  431cb6:	mov    QWORD PTR [r14+0x28],rax
  431cba:	mov    BYTE PTR [r15],0x7d
  431cbe:	jmp    431ccf <flatcc_json_printer_table_field@@Base+0x17f>
  431cc0:	cmp    DWORD PTR [r14+0x3c],0x0
  431cc5:	jne    431ccf <flatcc_json_printer_table_field@@Base+0x17f>
  431cc7:	mov    DWORD PTR [r14+0x3c],0x2
  431ccf:	add    rsp,0x28
  431cd3:	pop    rbx
  431cd4:	pop    r12
  431cd6:	pop    r14
  431cd8:	pop    r15
  431cda:	ret    
  431cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000431ce0 <flatcc_json_printer_union_field@@Base>:
  431ce0:	push   rbp
  431ce1:	push   r15
  431ce3:	push   r14
  431ce5:	push   r13
  431ce7:	push   r12
  431ce9:	push   rbx
  431cea:	sub    rsp,0x38
  431cee:	mov    r13d,r8d
  431cf1:	mov    r12,rcx
  431cf4:	mov    r14,rsi
  431cf7:	mov    r15,rdi
  431cfa:	lea    eax,[rdx+rdx*1]
  431cfd:	add    eax,0x2
  431d00:	mov    ecx,edx
  431d02:	add    ecx,edx
  431d04:	mov    edx,DWORD PTR [rsi+0x10]
  431d07:	cmp    eax,edx
  431d09:	jge    431d1f <flatcc_json_printer_union_field@@Base+0x3f>
  431d0b:	mov    rsi,QWORD PTR [r14+0x8]
  431d0f:	mov    eax,eax
  431d11:	movzx  eax,WORD PTR [rsi+rax*1]
  431d15:	test   rax,rax
  431d18:	je     431d1f <flatcc_json_printer_union_field@@Base+0x3f>
  431d1a:	add    rax,QWORD PTR [r14]
  431d1d:	jmp    431d21 <flatcc_json_printer_union_field@@Base+0x41>
  431d1f:	xor    eax,eax
  431d21:	add    ecx,0x4
  431d24:	cmp    ecx,edx
  431d26:	jge    4320c7 <flatcc_json_printer_union_field@@Base+0x3e7>
  431d2c:	mov    rdx,QWORD PTR [r14+0x8]
  431d30:	mov    ecx,ecx
  431d32:	movzx  ecx,WORD PTR [rdx+rcx*1]
  431d36:	test   rcx,rcx
  431d39:	je     4320c7 <flatcc_json_printer_union_field@@Base+0x3e7>
  431d3f:	test   rax,rax
  431d42:	je     4320c7 <flatcc_json_printer_union_field@@Base+0x3e7>
  431d48:	add    rcx,QWORD PTR [r14]
  431d4b:	je     4320c7 <flatcc_json_printer_union_field@@Base+0x3e7>
  431d51:	mov    QWORD PTR [rsp+0x18],r9
  431d56:	mov    QWORD PTR [rsp],rcx
  431d5a:	mov    al,BYTE PTR [rax]
  431d5c:	mov    QWORD PTR [rsp+0x10],rax
  431d61:	mov    eax,DWORD PTR [r14+0x18]
  431d65:	lea    ecx,[rax+0x1]
  431d68:	mov    DWORD PTR [r14+0x18],ecx
  431d6c:	test   eax,eax
  431d6e:	je     431d7f <flatcc_json_printer_union_field@@Base+0x9f>
  431d70:	mov    rax,QWORD PTR [r15+0x28]
  431d74:	lea    rcx,[rax+0x1]
  431d78:	mov    QWORD PTR [r15+0x28],rcx
  431d7c:	mov    BYTE PTR [rax],0x2c
  431d7f:	cmp    BYTE PTR [r15+0x31],0x0
  431d84:	mov    rbp,QWORD PTR [r15+0x28]
  431d88:	je     431e24 <flatcc_json_printer_union_field@@Base+0x144>
  431d8e:	lea    rax,[rbp+0x1]
  431d92:	mov    QWORD PTR [r15+0x28],rax
  431d96:	mov    BYTE PTR [rbp+0x0],0xa
  431d9a:	movsxd rax,DWORD PTR [r15+0x38]
  431d9e:	movzx  ebp,BYTE PTR [r15+0x31]
  431da3:	imul   rbp,rax
  431da7:	mov    rbx,QWORD PTR [r15+0x20]
  431dab:	mov    rdi,QWORD PTR [r15+0x28]
  431daf:	lea    rax,[rdi+rbp*1]
  431db3:	cmp    rax,rbx
  431db6:	jbe    431e0d <flatcc_json_printer_union_field@@Base+0x12d>
  431db8:	cmp    rdi,rbx
  431dbb:	jb     431dce <flatcc_json_printer_union_field@@Base+0xee>
  431dbd:	mov    rdi,r15
  431dc0:	xor    esi,esi
  431dc2:	call   QWORD PTR [r15+0x48]
  431dc6:	mov    rbx,QWORD PTR [r15+0x20]
  431dca:	mov    rdi,QWORD PTR [r15+0x28]
  431dce:	sub    rbx,rdi
  431dd1:	cmp    rbx,rbp
  431dd4:	jae    431e0d <flatcc_json_printer_union_field@@Base+0x12d>
  431dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431de0:	mov    esi,0x20
  431de5:	mov    rdx,rbx
  431de8:	call   406080 <memset@plt>
  431ded:	add    QWORD PTR [r15+0x28],rbx
  431df1:	sub    rbp,rbx
  431df4:	mov    rdi,r15
  431df7:	xor    esi,esi
  431df9:	call   QWORD PTR [r15+0x48]
  431dfd:	mov    rbx,QWORD PTR [r15+0x20]
  431e01:	mov    rdi,QWORD PTR [r15+0x28]
  431e05:	sub    rbx,rdi
  431e08:	cmp    rbp,rbx
  431e0b:	ja     431de0 <flatcc_json_printer_union_field@@Base+0x100>
  431e0d:	mov    esi,0x20
  431e12:	mov    rdx,rbp
  431e15:	call   406080 <memset@plt>
  431e1a:	add    rbp,QWORD PTR [r15+0x28]
  431e1e:	mov    QWORD PTR [r15+0x28],rbp
  431e22:	jmp    431e37 <flatcc_json_printer_union_field@@Base+0x157>
  431e24:	cmp    rbp,QWORD PTR [r15+0x20]
  431e28:	jb     431e37 <flatcc_json_printer_union_field@@Base+0x157>
  431e2a:	mov    rdi,r15
  431e2d:	xor    esi,esi
  431e2f:	call   QWORD PTR [r15+0x48]
  431e33:	mov    rbp,QWORD PTR [r15+0x28]
  431e37:	mov    BYTE PTR [rbp+0x0],0x22
  431e3b:	mov    rbp,QWORD PTR [r15+0x20]
  431e3f:	cmp    BYTE PTR [r15+0x32],0x1
  431e44:	mov    rdi,QWORD PTR [r15+0x28]
  431e48:	adc    rdi,0x0
  431e4c:	mov    QWORD PTR [r15+0x28],rdi
  431e50:	movsxd r13,r13d
  431e53:	lea    rax,[rdi+r13*1]
  431e57:	cmp    rax,rbp
  431e5a:	mov    QWORD PTR [rsp+0x8],r12
  431e5f:	mov    QWORD PTR [rsp+0x20],r13
  431e64:	jae    431e76 <flatcc_json_printer_union_field@@Base+0x196>
  431e66:	mov    rsi,r12
  431e69:	mov    rdx,r13
  431e6c:	call   4060d0 <memcpy@plt>
  431e71:	mov    r12,r13
  431e74:	jmp    431ee9 <flatcc_json_printer_union_field@@Base+0x209>
  431e76:	cmp    rdi,rbp
  431e79:	jb     431e8c <flatcc_json_printer_union_field@@Base+0x1ac>
  431e7b:	mov    rdi,r15
  431e7e:	xor    esi,esi
  431e80:	call   QWORD PTR [r15+0x48]
  431e84:	mov    rbp,QWORD PTR [r15+0x20]
  431e88:	mov    rdi,QWORD PTR [r15+0x28]
  431e8c:	sub    rbp,rdi
  431e8f:	mov    rbx,r12
  431e92:	mov    r12,r13
  431e95:	cmp    rbp,r13
  431e98:	jae    431ede <flatcc_json_printer_union_field@@Base+0x1fe>
  431e9a:	mov    r12,r13
  431e9d:	mov    rbx,QWORD PTR [rsp+0x8]
  431ea2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431eac:	nop    DWORD PTR [rax+0x0]
  431eb0:	mov    rsi,rbx
  431eb3:	mov    rdx,rbp
  431eb6:	call   4060d0 <memcpy@plt>
  431ebb:	add    QWORD PTR [r15+0x28],rbp
  431ebf:	add    rbx,rbp
  431ec2:	sub    r12,rbp
  431ec5:	mov    rdi,r15
  431ec8:	xor    esi,esi
  431eca:	call   QWORD PTR [r15+0x48]
  431ece:	mov    rbp,QWORD PTR [r15+0x20]
  431ed2:	mov    rdi,QWORD PTR [r15+0x28]
  431ed6:	sub    rbp,rdi
  431ed9:	cmp    r12,rbp
  431edc:	ja     431eb0 <flatcc_json_printer_union_field@@Base+0x1d0>
  431ede:	mov    rsi,rbx
  431ee1:	mov    rdx,r12
  431ee4:	call   4060d0 <memcpy@plt>
  431ee9:	mov    r13,QWORD PTR [r15+0x20]
  431eed:	mov    rax,QWORD PTR [r15+0x28]
  431ef1:	lea    rdi,[rax+r12*1]
  431ef5:	mov    QWORD PTR [r15+0x28],rdi
  431ef9:	add    rax,r12
  431efc:	add    rax,0x5
  431f00:	cmp    rax,r13
  431f03:	jae    431f20 <flatcc_json_printer_union_field@@Base+0x240>
  431f05:	mov    BYTE PTR [rdi+0x4],0x65
  431f09:	mov    DWORD PTR [rdi],0x7079745f
  431f0f:	mov    ebp,0x5
  431f14:	mov    r12,QWORD PTR [rsp+0x8]
  431f19:	mov    r13,QWORD PTR [rsp+0x10]
  431f1e:	jmp    431f9c <flatcc_json_printer_union_field@@Base+0x2bc>
  431f20:	cmp    rdi,r13
  431f23:	jb     431f36 <flatcc_json_printer_union_field@@Base+0x256>
  431f25:	mov    rdi,r15
  431f28:	xor    esi,esi
  431f2a:	call   QWORD PTR [r15+0x48]
  431f2e:	mov    r13,QWORD PTR [r15+0x20]
  431f32:	mov    rdi,QWORD PTR [r15+0x28]
  431f36:	mov    r12,QWORD PTR [rsp+0x8]
  431f3b:	sub    r13,rdi
  431f3e:	cmp    r13,0x4
  431f42:	ja     431f80 <flatcc_json_printer_union_field@@Base+0x2a0>
  431f44:	lea    rbx,[rip+0x9a91]        # 43b9dc <flatcc_builder_padding_base@@Base+0x332c>
  431f4b:	mov    ebp,0x5
  431f50:	mov    rsi,rbx
  431f53:	mov    rdx,r13
  431f56:	call   4060d0 <memcpy@plt>
  431f5b:	add    QWORD PTR [r15+0x28],r13
  431f5f:	add    rbx,r13
  431f62:	sub    rbp,r13
  431f65:	mov    rdi,r15
  431f68:	xor    esi,esi
  431f6a:	call   QWORD PTR [r15+0x48]
  431f6e:	mov    r13,QWORD PTR [r15+0x20]
  431f72:	mov    rdi,QWORD PTR [r15+0x28]
  431f76:	sub    r13,rdi
  431f79:	cmp    rbp,r13
  431f7c:	ja     431f50 <flatcc_json_printer_union_field@@Base+0x270>
  431f7e:	jmp    431f8c <flatcc_json_printer_union_field@@Base+0x2ac>
  431f80:	mov    ebp,0x5
  431f85:	lea    rbx,[rip+0x9a50]        # 43b9dc <flatcc_builder_padding_base@@Base+0x332c>
  431f8c:	mov    r13,QWORD PTR [rsp+0x10]
  431f91:	mov    rsi,rbx
  431f94:	mov    rdx,rbp
  431f97:	call   4060d0 <memcpy@plt>
  431f9c:	mov    rax,QWORD PTR [r15+0x28]
  431fa0:	lea    rcx,[rax+rbp*1]
  431fa4:	mov    QWORD PTR [r15+0x28],rcx
  431fa8:	mov    BYTE PTR [rax+rbp*1],0x22
  431fac:	mov    rax,QWORD PTR [r15+0x28]
  431fb0:	cmp    BYTE PTR [r15+0x32],0x1
  431fb5:	adc    rax,0x0
  431fb9:	lea    rcx,[rax+0x1]
  431fbd:	mov    QWORD PTR [r15+0x28],rcx
  431fc1:	mov    BYTE PTR [rax],0x3a
  431fc4:	mov    rax,QWORD PTR [r15+0x28]
  431fc8:	mov    BYTE PTR [rax],0x20
  431fcb:	mov    rax,QWORD PTR [r15+0x28]
  431fcf:	cmp    BYTE PTR [r15+0x31],0x1
  431fd4:	sbb    rax,0xffffffffffffffff
  431fd8:	mov    QWORD PTR [r15+0x28],rax
  431fdc:	cmp    BYTE PTR [r15+0x33],0x0
  431fe1:	je     432020 <flatcc_json_printer_union_field@@Base+0x340>
  431fe3:	cmp    r13b,0x64
  431fe7:	jb     43202d <flatcc_json_printer_union_field@@Base+0x34d>
  431fe9:	mov    BYTE PTR [rax+0x3],0x0
  431fed:	movzx  ecx,r13b
  431ff1:	lea    edx,[rcx+rcx*4]
  431ff4:	lea    ecx,[rcx+rdx*8]
  431ff7:	shr    ecx,0xc
  431ffa:	imul   edx,ecx,0x64
  431ffd:	mov    ebx,r13d
  432000:	sub    bl,dl
  432002:	movzx  edx,bl
  432005:	lea    rsi,[rip+0x9d14]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  43200c:	movzx  edx,WORD PTR [rsi+rdx*2]
  432010:	mov    WORD PTR [rax+0x1],dx
  432014:	or     cl,0x30
  432017:	mov    BYTE PTR [rax],cl
  432019:	mov    eax,0x3
  43201e:	jmp    432073 <flatcc_json_printer_union_field@@Base+0x393>
  432020:	movzx  esi,r13b
  432024:	mov    rdi,r15
  432027:	call   QWORD PTR [rsp+0x18]
  43202b:	jmp    432077 <flatcc_json_printer_union_field@@Base+0x397>
  43202d:	cmp    r13b,0xa
  432031:	jb     432064 <flatcc_json_printer_union_field@@Base+0x384>
  432033:	mov    BYTE PTR [rax+0x2],0x0
  432037:	movzx  ecx,r13b
  43203b:	lea    edx,[rcx+rcx*4]
  43203e:	lea    ecx,[rcx+rdx*8]
  432041:	shr    ecx,0xc
  432044:	imul   ecx,ecx,0x64
  432047:	mov    edx,r13d
  43204a:	sub    dl,cl
  43204c:	movzx  ecx,dl
  43204f:	lea    rdx,[rip+0x9cca]        # 43bd20 <flatcc_builder_padding_base@@Base+0x3670>
  432056:	movzx  ecx,WORD PTR [rdx+rcx*2]
  43205a:	mov    WORD PTR [rax],cx
  43205d:	mov    eax,0x2
  432062:	jmp    432073 <flatcc_json_printer_union_field@@Base+0x393>
  432064:	mov    BYTE PTR [rax+0x1],0x0
  432068:	lea    ecx,[r13+0x30]
  43206c:	mov    BYTE PTR [rax],cl
  43206e:	mov    eax,0x1
  432073:	add    QWORD PTR [r15+0x28],rax
  432077:	mov    rcx,QWORD PTR [rsp]
  43207b:	test   r13b,r13b
  43207e:	je     4320c7 <flatcc_json_printer_union_field@@Base+0x3e7>
  432080:	mov    rsi,r12
  432083:	mov    r12,QWORD PTR [rsp+0x70]
  432088:	lea    rbx,[rsp+0x28]
  43208d:	mov    rax,QWORD PTR [r15+0x28]
  432091:	mov    rbp,rcx
  432094:	lea    rcx,[rax+0x1]
  432098:	mov    QWORD PTR [r15+0x28],rcx
  43209c:	mov    BYTE PTR [rax],0x2c
  43209f:	mov    rdi,r15
  4320a2:	mov    rdx,QWORD PTR [rsp+0x20]
  4320a7:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  4320ac:	mov    eax,DWORD PTR [r14+0x14]
  4320b0:	mov    DWORD PTR [rsp+0x30],eax
  4320b4:	mov    BYTE PTR [rsp+0x34],r13b
  4320b9:	mov    QWORD PTR [rsp+0x28],rbp
  4320be:	mov    rdi,r15
  4320c1:	mov    rsi,rbx
  4320c4:	call   r12
  4320c7:	add    rsp,0x38
  4320cb:	pop    rbx
  4320cc:	pop    r12
  4320ce:	pop    r13
  4320d0:	pop    r14
  4320d2:	pop    r15
  4320d4:	pop    rbp
  4320d5:	ret    
  4320d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004320e0 <flatcc_json_printer_union_table@@Base>:
  4320e0:	push   r15
  4320e2:	push   r14
  4320e4:	push   rbx
  4320e5:	sub    rsp,0x20
  4320e9:	mov    r14,rdi
  4320ec:	mov    eax,DWORD PTR [rsi+0x8]
  4320ef:	dec    eax
  4320f1:	je     4321f0 <flatcc_json_printer_union_table@@Base+0x110>
  4320f7:	mov    rcx,QWORD PTR [rsi]
  4320fa:	mov    esi,DWORD PTR [rcx]
  4320fc:	add    rsi,rcx
  4320ff:	inc    DWORD PTR [r14+0x38]
  432103:	mov    rcx,QWORD PTR [r14+0x28]
  432107:	lea    rdi,[rcx+0x1]
  43210b:	mov    QWORD PTR [r14+0x28],rdi
  43210f:	mov    BYTE PTR [rcx],0x7b
  432112:	mov    DWORD PTR [rsp+0x18],0x0
  43211a:	mov    DWORD PTR [rsp+0x14],eax
  43211e:	mov    QWORD PTR [rsp],rsi
  432122:	movsxd rax,DWORD PTR [rsi]
  432125:	sub    rsi,rax
  432128:	mov    QWORD PTR [rsp+0x8],rsi
  43212d:	movzx  eax,WORD PTR [rsi]
  432130:	mov    DWORD PTR [rsp+0x10],eax
  432134:	mov    rsi,rsp
  432137:	mov    rdi,r14
  43213a:	call   rdx
  43213c:	cmp    BYTE PTR [r14+0x31],0x0
  432141:	mov    r15,QWORD PTR [r14+0x28]
  432145:	je     4321e2 <flatcc_json_printer_union_table@@Base+0x102>
  43214b:	lea    rax,[r15+0x1]
  43214f:	mov    QWORD PTR [r14+0x28],rax
  432153:	mov    BYTE PTR [r15],0xa
  432157:	movsxd rax,DWORD PTR [r14+0x38]
  43215b:	dec    rax
  43215e:	mov    DWORD PTR [r14+0x38],eax
  432162:	movzx  r15d,BYTE PTR [r14+0x31]
  432167:	imul   r15,rax
  43216b:	mov    rbx,QWORD PTR [r14+0x20]
  43216f:	mov    rdi,QWORD PTR [r14+0x28]
  432173:	lea    rax,[rdi+r15*1]
  432177:	cmp    rax,rbx
  43217a:	jbe    4321cd <flatcc_json_printer_union_table@@Base+0xed>
  43217c:	cmp    rdi,rbx
  43217f:	jb     432192 <flatcc_json_printer_union_table@@Base+0xb2>
  432181:	mov    rdi,r14
  432184:	xor    esi,esi
  432186:	call   QWORD PTR [r14+0x48]
  43218a:	mov    rbx,QWORD PTR [r14+0x20]
  43218e:	mov    rdi,QWORD PTR [r14+0x28]
  432192:	sub    rbx,rdi
  432195:	cmp    rbx,r15
  432198:	jae    4321cd <flatcc_json_printer_union_table@@Base+0xed>
  43219a:	nop    WORD PTR [rax+rax*1+0x0]
  4321a0:	mov    esi,0x20
  4321a5:	mov    rdx,rbx
  4321a8:	call   406080 <memset@plt>
  4321ad:	add    QWORD PTR [r14+0x28],rbx
  4321b1:	sub    r15,rbx
  4321b4:	mov    rdi,r14
  4321b7:	xor    esi,esi
  4321b9:	call   QWORD PTR [r14+0x48]
  4321bd:	mov    rbx,QWORD PTR [r14+0x20]
  4321c1:	mov    rdi,QWORD PTR [r14+0x28]
  4321c5:	sub    rbx,rdi
  4321c8:	cmp    r15,rbx
  4321cb:	ja     4321a0 <flatcc_json_printer_union_table@@Base+0xc0>
  4321cd:	mov    esi,0x20
  4321d2:	mov    rdx,r15
  4321d5:	call   406080 <memset@plt>
  4321da:	add    r15,QWORD PTR [r14+0x28]
  4321de:	mov    QWORD PTR [r14+0x28],r15
  4321e2:	lea    rax,[r15+0x1]
  4321e6:	mov    QWORD PTR [r14+0x28],rax
  4321ea:	mov    BYTE PTR [r15],0x7d
  4321ee:	jmp    4321ff <flatcc_json_printer_union_table@@Base+0x11f>
  4321f0:	cmp    DWORD PTR [r14+0x3c],0x0
  4321f5:	jne    4321ff <flatcc_json_printer_union_table@@Base+0x11f>
  4321f7:	mov    DWORD PTR [r14+0x3c],0x2
  4321ff:	add    rsp,0x20
  432203:	pop    rbx
  432204:	pop    r14
  432206:	pop    r15
  432208:	ret    
  432209:	nop    DWORD PTR [rax+0x0]

0000000000432210 <flatcc_json_printer_union_struct@@Base>:
  432210:	push   r15
  432212:	push   r14
  432214:	push   rbx
  432215:	mov    r14,rdi
  432218:	inc    DWORD PTR [rdi+0x38]
  43221b:	mov    rax,QWORD PTR [rdi+0x28]
  43221f:	lea    rcx,[rax+0x1]
  432223:	mov    QWORD PTR [rdi+0x28],rcx
  432227:	mov    BYTE PTR [rax],0x7b
  43222a:	mov    rax,QWORD PTR [rsi]
  43222d:	mov    esi,DWORD PTR [rax]
  43222f:	add    rsi,rax
  432232:	call   rdx
  432234:	cmp    BYTE PTR [r14+0x31],0x0
  432239:	mov    r15,QWORD PTR [r14+0x28]
  43223d:	je     4322e2 <flatcc_json_printer_union_struct@@Base+0xd2>
  432243:	lea    rax,[r15+0x1]
  432247:	mov    QWORD PTR [r14+0x28],rax
  43224b:	mov    BYTE PTR [r15],0xa
  43224f:	movsxd rax,DWORD PTR [r14+0x38]
  432253:	dec    rax
  432256:	mov    DWORD PTR [r14+0x38],eax
  43225a:	movzx  r15d,BYTE PTR [r14+0x31]
  43225f:	imul   r15,rax
  432263:	mov    rbx,QWORD PTR [r14+0x20]
  432267:	mov    rdi,QWORD PTR [r14+0x28]
  43226b:	lea    rax,[rdi+r15*1]
  43226f:	cmp    rax,rbx
  432272:	jbe    4322cd <flatcc_json_printer_union_struct@@Base+0xbd>
  432274:	cmp    rdi,rbx
  432277:	jb     43228a <flatcc_json_printer_union_struct@@Base+0x7a>
  432279:	mov    rdi,r14
  43227c:	xor    esi,esi
  43227e:	call   QWORD PTR [r14+0x48]
  432282:	mov    rbx,QWORD PTR [r14+0x20]
  432286:	mov    rdi,QWORD PTR [r14+0x28]
  43228a:	sub    rbx,rdi
  43228d:	cmp    rbx,r15
  432290:	jae    4322cd <flatcc_json_printer_union_struct@@Base+0xbd>
  432292:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43229c:	nop    DWORD PTR [rax+0x0]
  4322a0:	mov    esi,0x20
  4322a5:	mov    rdx,rbx
  4322a8:	call   406080 <memset@plt>
  4322ad:	add    QWORD PTR [r14+0x28],rbx
  4322b1:	sub    r15,rbx
  4322b4:	mov    rdi,r14
  4322b7:	xor    esi,esi
  4322b9:	call   QWORD PTR [r14+0x48]
  4322bd:	mov    rbx,QWORD PTR [r14+0x20]
  4322c1:	mov    rdi,QWORD PTR [r14+0x28]
  4322c5:	sub    rbx,rdi
  4322c8:	cmp    r15,rbx
  4322cb:	ja     4322a0 <flatcc_json_printer_union_struct@@Base+0x90>
  4322cd:	mov    esi,0x20
  4322d2:	mov    rdx,r15
  4322d5:	call   406080 <memset@plt>
  4322da:	add    r15,QWORD PTR [r14+0x28]
  4322de:	mov    QWORD PTR [r14+0x28],r15
  4322e2:	lea    rax,[r15+0x1]
  4322e6:	mov    QWORD PTR [r14+0x28],rax
  4322ea:	mov    BYTE PTR [r15],0x7d
  4322ee:	pop    rbx
  4322ef:	pop    r14
  4322f1:	pop    r15
  4322f3:	ret    
  4322f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4322fe:	xchg   ax,ax

0000000000432300 <flatcc_json_printer_union_string@@Base>:
  432300:	mov    rax,QWORD PTR [rsi]
  432303:	mov    ecx,DWORD PTR [rax]
  432305:	mov    edx,DWORD PTR [rax+rcx*1]
  432308:	lea    rsi,[rax+rcx*1]
  43230c:	add    rsi,0x4
  432310:	jmp    428500 <flatcc_json_printer_string@@Base+0x10>
  432315:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43231f:	nop

0000000000432320 <flatcc_json_printer_embedded_struct_field@@Base>:
  432320:	push   r15
  432322:	push   r14
  432324:	push   r12
  432326:	push   rbx
  432327:	push   rax
  432328:	mov    r15,rcx
  43232b:	mov    rbx,rdx
  43232e:	mov    r14,rdi
  432331:	mov    r12,QWORD PTR [rsp+0x30]
  432336:	test   esi,esi
  432338:	je     432349 <flatcc_json_printer_embedded_struct_field@@Base+0x29>
  43233a:	mov    rax,QWORD PTR [r14+0x28]
  43233e:	lea    rcx,[rax+0x1]
  432342:	mov    QWORD PTR [r14+0x28],rcx
  432346:	mov    BYTE PTR [rax],0x2c
  432349:	movsxd rdx,r9d
  43234c:	mov    rdi,r14
  43234f:	mov    rsi,r8
  432352:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  432357:	inc    DWORD PTR [r14+0x38]
  43235b:	mov    rax,QWORD PTR [r14+0x28]
  43235f:	lea    rcx,[rax+0x1]
  432363:	mov    QWORD PTR [r14+0x28],rcx
  432367:	mov    BYTE PTR [rax],0x7b
  43236a:	add    rbx,r15
  43236d:	mov    rdi,r14
  432370:	mov    rsi,rbx
  432373:	call   r12
  432376:	cmp    BYTE PTR [r14+0x31],0x0
  43237b:	mov    r15,QWORD PTR [r14+0x28]
  43237f:	je     432422 <flatcc_json_printer_embedded_struct_field@@Base+0x102>
  432385:	lea    rax,[r15+0x1]
  432389:	mov    QWORD PTR [r14+0x28],rax
  43238d:	mov    BYTE PTR [r15],0xa
  432391:	movsxd rax,DWORD PTR [r14+0x38]
  432395:	dec    rax
  432398:	mov    DWORD PTR [r14+0x38],eax
  43239c:	movzx  r15d,BYTE PTR [r14+0x31]
  4323a1:	imul   r15,rax
  4323a5:	mov    rbx,QWORD PTR [r14+0x20]
  4323a9:	mov    rdi,QWORD PTR [r14+0x28]
  4323ad:	lea    rax,[rdi+r15*1]
  4323b1:	cmp    rax,rbx
  4323b4:	jbe    43240d <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  4323b6:	cmp    rdi,rbx
  4323b9:	jb     4323cc <flatcc_json_printer_embedded_struct_field@@Base+0xac>
  4323bb:	mov    rdi,r14
  4323be:	xor    esi,esi
  4323c0:	call   QWORD PTR [r14+0x48]
  4323c4:	mov    rbx,QWORD PTR [r14+0x20]
  4323c8:	mov    rdi,QWORD PTR [r14+0x28]
  4323cc:	sub    rbx,rdi
  4323cf:	cmp    rbx,r15
  4323d2:	jae    43240d <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  4323d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4323de:	xchg   ax,ax
  4323e0:	mov    esi,0x20
  4323e5:	mov    rdx,rbx
  4323e8:	call   406080 <memset@plt>
  4323ed:	add    QWORD PTR [r14+0x28],rbx
  4323f1:	sub    r15,rbx
  4323f4:	mov    rdi,r14
  4323f7:	xor    esi,esi
  4323f9:	call   QWORD PTR [r14+0x48]
  4323fd:	mov    rbx,QWORD PTR [r14+0x20]
  432401:	mov    rdi,QWORD PTR [r14+0x28]
  432405:	sub    rbx,rdi
  432408:	cmp    r15,rbx
  43240b:	ja     4323e0 <flatcc_json_printer_embedded_struct_field@@Base+0xc0>
  43240d:	mov    esi,0x20
  432412:	mov    rdx,r15
  432415:	call   406080 <memset@plt>
  43241a:	add    r15,QWORD PTR [r14+0x28]
  43241e:	mov    QWORD PTR [r14+0x28],r15
  432422:	lea    rax,[r15+0x1]
  432426:	mov    QWORD PTR [r14+0x28],rax
  43242a:	mov    BYTE PTR [r15],0x7d
  43242e:	add    rsp,0x8
  432432:	pop    rbx
  432433:	pop    r12
  432435:	pop    r14
  432437:	pop    r15
  432439:	ret    
  43243a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000432440 <flatcc_json_printer_struct_field@@Base>:
  432440:	push   r15
  432442:	push   r14
  432444:	push   rbx
  432445:	lea    eax,[rdx+rdx*1]
  432448:	add    eax,0x4
  43244b:	cmp    eax,DWORD PTR [rsi+0x10]
  43244e:	jge    43256e <flatcc_json_printer_struct_field@@Base+0x12e>
  432454:	mov    rdx,QWORD PTR [rsi+0x8]
  432458:	mov    eax,eax
  43245a:	movzx  ebx,WORD PTR [rdx+rax*1]
  43245e:	test   rbx,rbx
  432461:	je     43256e <flatcc_json_printer_struct_field@@Base+0x12e>
  432467:	add    rbx,QWORD PTR [rsi]
  43246a:	je     43256e <flatcc_json_printer_struct_field@@Base+0x12e>
  432470:	mov    r15,r9
  432473:	mov    r14,rdi
  432476:	mov    eax,DWORD PTR [rsi+0x18]
  432479:	lea    edx,[rax+0x1]
  43247c:	mov    DWORD PTR [rsi+0x18],edx
  43247f:	test   eax,eax
  432481:	je     432492 <flatcc_json_printer_struct_field@@Base+0x52>
  432483:	mov    rax,QWORD PTR [r14+0x28]
  432487:	lea    rdx,[rax+0x1]
  43248b:	mov    QWORD PTR [r14+0x28],rdx
  43248f:	mov    BYTE PTR [rax],0x2c
  432492:	movsxd rdx,r8d
  432495:	mov    rdi,r14
  432498:	mov    rsi,rcx
  43249b:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  4324a0:	inc    DWORD PTR [r14+0x38]
  4324a4:	mov    rax,QWORD PTR [r14+0x28]
  4324a8:	lea    rcx,[rax+0x1]
  4324ac:	mov    QWORD PTR [r14+0x28],rcx
  4324b0:	mov    BYTE PTR [rax],0x7b
  4324b3:	mov    rdi,r14
  4324b6:	mov    rsi,rbx
  4324b9:	call   r15
  4324bc:	cmp    BYTE PTR [r14+0x31],0x0
  4324c1:	mov    r15,QWORD PTR [r14+0x28]
  4324c5:	je     432562 <flatcc_json_printer_struct_field@@Base+0x122>
  4324cb:	lea    rax,[r15+0x1]
  4324cf:	mov    QWORD PTR [r14+0x28],rax
  4324d3:	mov    BYTE PTR [r15],0xa
  4324d7:	movsxd rax,DWORD PTR [r14+0x38]
  4324db:	dec    rax
  4324de:	mov    DWORD PTR [r14+0x38],eax
  4324e2:	movzx  r15d,BYTE PTR [r14+0x31]
  4324e7:	imul   r15,rax
  4324eb:	mov    rbx,QWORD PTR [r14+0x20]
  4324ef:	mov    rdi,QWORD PTR [r14+0x28]
  4324f3:	lea    rax,[rdi+r15*1]
  4324f7:	cmp    rax,rbx
  4324fa:	jbe    43254d <flatcc_json_printer_struct_field@@Base+0x10d>
  4324fc:	cmp    rdi,rbx
  4324ff:	jb     432512 <flatcc_json_printer_struct_field@@Base+0xd2>
  432501:	mov    rdi,r14
  432504:	xor    esi,esi
  432506:	call   QWORD PTR [r14+0x48]
  43250a:	mov    rbx,QWORD PTR [r14+0x20]
  43250e:	mov    rdi,QWORD PTR [r14+0x28]
  432512:	sub    rbx,rdi
  432515:	cmp    rbx,r15
  432518:	jae    43254d <flatcc_json_printer_struct_field@@Base+0x10d>
  43251a:	nop    WORD PTR [rax+rax*1+0x0]
  432520:	mov    esi,0x20
  432525:	mov    rdx,rbx
  432528:	call   406080 <memset@plt>
  43252d:	add    QWORD PTR [r14+0x28],rbx
  432531:	sub    r15,rbx
  432534:	mov    rdi,r14
  432537:	xor    esi,esi
  432539:	call   QWORD PTR [r14+0x48]
  43253d:	mov    rbx,QWORD PTR [r14+0x20]
  432541:	mov    rdi,QWORD PTR [r14+0x28]
  432545:	sub    rbx,rdi
  432548:	cmp    r15,rbx
  43254b:	ja     432520 <flatcc_json_printer_struct_field@@Base+0xe0>
  43254d:	mov    esi,0x20
  432552:	mov    rdx,r15
  432555:	call   406080 <memset@plt>
  43255a:	add    r15,QWORD PTR [r14+0x28]
  43255e:	mov    QWORD PTR [r14+0x28],r15
  432562:	lea    rax,[r15+0x1]
  432566:	mov    QWORD PTR [r14+0x28],rax
  43256a:	mov    BYTE PTR [r15],0x7d
  43256e:	pop    rbx
  43256f:	pop    r14
  432571:	pop    r15
  432573:	ret    
  432574:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43257e:	xchg   ax,ax

0000000000432580 <flatcc_json_printer_struct_as_root@@Base>:
  432580:	push   r15
  432582:	push   r14
  432584:	push   rbx
  432585:	sub    rsp,0x10
  432589:	mov    r14,rdi
  43258c:	mov    DWORD PTR [rsp+0xc],0x0
  432594:	test   rsi,rsi
  432597:	je     4326f8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  43259d:	cmp    rdx,0x7
  4325a1:	jbe    4326f8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  4325a7:	mov    r15,r8
  4325aa:	mov    rbx,rsi
  4325ad:	test   rcx,rcx
  4325b0:	je     4325d5 <flatcc_json_printer_struct_as_root@@Base+0x55>
  4325b2:	lea    rdi,[rsp+0xc]
  4325b7:	mov    edx,0x4
  4325bc:	mov    rsi,rcx
  4325bf:	call   406040 <strncpy@plt>
  4325c4:	mov    eax,DWORD PTR [rsp+0xc]
  4325c8:	test   eax,eax
  4325ca:	je     4325d5 <flatcc_json_printer_struct_as_root@@Base+0x55>
  4325cc:	cmp    DWORD PTR [rbx+0x4],eax
  4325cf:	jne    432726 <flatcc_json_printer_struct_as_root@@Base+0x1a6>
  4325d5:	inc    DWORD PTR [r14+0x38]
  4325d9:	mov    rax,QWORD PTR [r14+0x28]
  4325dd:	lea    rcx,[rax+0x1]
  4325e1:	mov    QWORD PTR [r14+0x28],rcx
  4325e5:	mov    BYTE PTR [rax],0x7b
  4325e8:	mov    esi,DWORD PTR [rbx]
  4325ea:	add    rsi,rbx
  4325ed:	mov    rdi,r14
  4325f0:	call   r15
  4325f3:	cmp    BYTE PTR [r14+0x31],0x0
  4325f8:	mov    r15,QWORD PTR [r14+0x28]
  4325fc:	je     4326a2 <flatcc_json_printer_struct_as_root@@Base+0x122>
  432602:	lea    rax,[r15+0x1]
  432606:	mov    QWORD PTR [r14+0x28],rax
  43260a:	mov    BYTE PTR [r15],0xa
  43260e:	movsxd rax,DWORD PTR [r14+0x38]
  432612:	dec    rax
  432615:	mov    DWORD PTR [r14+0x38],eax
  432619:	movzx  r15d,BYTE PTR [r14+0x31]
  43261e:	imul   r15,rax
  432622:	mov    rbx,QWORD PTR [r14+0x20]
  432626:	mov    rdi,QWORD PTR [r14+0x28]
  43262a:	lea    rax,[rdi+r15*1]
  43262e:	cmp    rax,rbx
  432631:	jbe    43268d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  432633:	cmp    rdi,rbx
  432636:	jb     432649 <flatcc_json_printer_struct_as_root@@Base+0xc9>
  432638:	mov    rdi,r14
  43263b:	xor    esi,esi
  43263d:	call   QWORD PTR [r14+0x48]
  432641:	mov    rbx,QWORD PTR [r14+0x20]
  432645:	mov    rdi,QWORD PTR [r14+0x28]
  432649:	sub    rbx,rdi
  43264c:	cmp    rbx,r15
  43264f:	jae    43268d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  432651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43265b:	nop    DWORD PTR [rax+rax*1+0x0]
  432660:	mov    esi,0x20
  432665:	mov    rdx,rbx
  432668:	call   406080 <memset@plt>
  43266d:	add    QWORD PTR [r14+0x28],rbx
  432671:	sub    r15,rbx
  432674:	mov    rdi,r14
  432677:	xor    esi,esi
  432679:	call   QWORD PTR [r14+0x48]
  43267d:	mov    rbx,QWORD PTR [r14+0x20]
  432681:	mov    rdi,QWORD PTR [r14+0x28]
  432685:	sub    rbx,rdi
  432688:	cmp    r15,rbx
  43268b:	ja     432660 <flatcc_json_printer_struct_as_root@@Base+0xe0>
  43268d:	mov    esi,0x20
  432692:	mov    rdx,r15
  432695:	call   406080 <memset@plt>
  43269a:	add    r15,QWORD PTR [r14+0x28]
  43269e:	mov    QWORD PTR [r14+0x28],r15
  4326a2:	lea    rax,[r15+0x1]
  4326a6:	mov    QWORD PTR [r14+0x28],rax
  4326aa:	mov    BYTE PTR [r15],0x7d
  4326ae:	cmp    BYTE PTR [r14+0x31],0x0
  4326b3:	je     4326cb <flatcc_json_printer_struct_as_root@@Base+0x14b>
  4326b5:	cmp    DWORD PTR [r14+0x38],0x0
  4326ba:	jne    4326cb <flatcc_json_printer_struct_as_root@@Base+0x14b>
  4326bc:	mov    rax,QWORD PTR [r14+0x28]
  4326c0:	lea    rcx,[rax+0x1]
  4326c4:	mov    QWORD PTR [r14+0x28],rcx
  4326c8:	mov    BYTE PTR [rax],0xa
  4326cb:	mov    rdi,r14
  4326ce:	mov    esi,0x1
  4326d3:	call   QWORD PTR [r14+0x48]
  4326d7:	mov    eax,0xffffffff
  4326dc:	cmp    DWORD PTR [r14+0x3c],0x0
  4326e1:	jne    4326ee <flatcc_json_printer_struct_as_root@@Base+0x16e>
  4326e3:	mov    eax,DWORD PTR [r14+0x28]
  4326e7:	add    eax,DWORD PTR [r14+0x18]
  4326eb:	sub    eax,DWORD PTR [r14]
  4326ee:	add    rsp,0x10
  4326f2:	pop    rbx
  4326f3:	pop    r14
  4326f5:	pop    r15
  4326f7:	ret    
  4326f8:	cmp    DWORD PTR [r14+0x3c],0x0
  4326fd:	jne    432707 <flatcc_json_printer_struct_as_root@@Base+0x187>
  4326ff:	mov    DWORD PTR [r14+0x3c],0x1
  432707:	lea    rdi,[rip+0x9582]        # 43bc90 <flatcc_builder_padding_base@@Base+0x35e0>
  43270e:	lea    rsi,[rip+0x9198]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432715:	lea    rcx,[rip+0x9593]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  43271c:	mov    edx,0x3fb
  432721:	call   406070 <__assert_fail@plt>
  432726:	cmp    DWORD PTR [r14+0x3c],0x0
  43272b:	jne    432735 <flatcc_json_printer_struct_as_root@@Base+0x1b5>
  43272d:	mov    DWORD PTR [r14+0x3c],0x1
  432735:	lea    rdi,[rip+0x95c2]        # 43bcfe <flatcc_builder_padding_base@@Base+0x364e>
  43273c:	lea    rsi,[rip+0x916a]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432743:	lea    rcx,[rip+0x9565]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  43274a:	mov    edx,0x404
  43274f:	call   406070 <__assert_fail@plt>
  432754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43275e:	xchg   ax,ax

0000000000432760 <flatcc_json_printer_table_as_root@@Base>:
  432760:	push   r15
  432762:	push   r14
  432764:	push   rbx
  432765:	sub    rsp,0x20
  432769:	mov    r14,rdi
  43276c:	mov    DWORD PTR [rsp],0x0
  432773:	test   rsi,rsi
  432776:	je     4328f8 <flatcc_json_printer_table_as_root@@Base+0x198>
  43277c:	cmp    rdx,0x7
  432780:	jbe    4328f8 <flatcc_json_printer_table_as_root@@Base+0x198>
  432786:	mov    r15,r8
  432789:	mov    rbx,rsi
  43278c:	test   rcx,rcx
  43278f:	je     4327b1 <flatcc_json_printer_table_as_root@@Base+0x51>
  432791:	mov    rdi,rsp
  432794:	mov    edx,0x4
  432799:	mov    rsi,rcx
  43279c:	call   406040 <strncpy@plt>
  4327a1:	mov    eax,DWORD PTR [rsp]
  4327a4:	test   eax,eax
  4327a6:	je     4327b1 <flatcc_json_printer_table_as_root@@Base+0x51>
  4327a8:	cmp    DWORD PTR [rbx+0x4],eax
  4327ab:	jne    432926 <flatcc_json_printer_table_as_root@@Base+0x1c6>
  4327b1:	mov    eax,DWORD PTR [rbx]
  4327b3:	inc    DWORD PTR [r14+0x38]
  4327b7:	lea    rcx,[rbx+rax*1]
  4327bb:	mov    rdx,QWORD PTR [r14+0x28]
  4327bf:	lea    rsi,[rdx+0x1]
  4327c3:	mov    QWORD PTR [r14+0x28],rsi
  4327c7:	mov    BYTE PTR [rdx],0x7b
  4327ca:	mov    QWORD PTR [rsp+0x14],0x63
  4327d3:	mov    QWORD PTR [rsp],rcx
  4327d7:	movsxd rax,DWORD PTR [rbx+rax*1]
  4327db:	sub    rcx,rax
  4327de:	mov    QWORD PTR [rsp+0x8],rcx
  4327e3:	movzx  eax,WORD PTR [rcx]
  4327e6:	mov    DWORD PTR [rsp+0x10],eax
  4327ea:	mov    rsi,rsp
  4327ed:	mov    rdi,r14
  4327f0:	call   r15
  4327f3:	cmp    BYTE PTR [r14+0x31],0x0
  4327f8:	mov    r15,QWORD PTR [r14+0x28]
  4327fc:	je     4328a2 <flatcc_json_printer_table_as_root@@Base+0x142>
  432802:	lea    rax,[r15+0x1]
  432806:	mov    QWORD PTR [r14+0x28],rax
  43280a:	mov    BYTE PTR [r15],0xa
  43280e:	movsxd rax,DWORD PTR [r14+0x38]
  432812:	dec    rax
  432815:	mov    DWORD PTR [r14+0x38],eax
  432819:	movzx  r15d,BYTE PTR [r14+0x31]
  43281e:	imul   r15,rax
  432822:	mov    rbx,QWORD PTR [r14+0x20]
  432826:	mov    rdi,QWORD PTR [r14+0x28]
  43282a:	lea    rax,[rdi+r15*1]
  43282e:	cmp    rax,rbx
  432831:	jbe    43288d <flatcc_json_printer_table_as_root@@Base+0x12d>
  432833:	cmp    rdi,rbx
  432836:	jb     432849 <flatcc_json_printer_table_as_root@@Base+0xe9>
  432838:	mov    rdi,r14
  43283b:	xor    esi,esi
  43283d:	call   QWORD PTR [r14+0x48]
  432841:	mov    rbx,QWORD PTR [r14+0x20]
  432845:	mov    rdi,QWORD PTR [r14+0x28]
  432849:	sub    rbx,rdi
  43284c:	cmp    rbx,r15
  43284f:	jae    43288d <flatcc_json_printer_table_as_root@@Base+0x12d>
  432851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43285b:	nop    DWORD PTR [rax+rax*1+0x0]
  432860:	mov    esi,0x20
  432865:	mov    rdx,rbx
  432868:	call   406080 <memset@plt>
  43286d:	add    QWORD PTR [r14+0x28],rbx
  432871:	sub    r15,rbx
  432874:	mov    rdi,r14
  432877:	xor    esi,esi
  432879:	call   QWORD PTR [r14+0x48]
  43287d:	mov    rbx,QWORD PTR [r14+0x20]
  432881:	mov    rdi,QWORD PTR [r14+0x28]
  432885:	sub    rbx,rdi
  432888:	cmp    r15,rbx
  43288b:	ja     432860 <flatcc_json_printer_table_as_root@@Base+0x100>
  43288d:	mov    esi,0x20
  432892:	mov    rdx,r15
  432895:	call   406080 <memset@plt>
  43289a:	add    r15,QWORD PTR [r14+0x28]
  43289e:	mov    QWORD PTR [r14+0x28],r15
  4328a2:	lea    rax,[r15+0x1]
  4328a6:	mov    QWORD PTR [r14+0x28],rax
  4328aa:	mov    BYTE PTR [r15],0x7d
  4328ae:	cmp    BYTE PTR [r14+0x31],0x0
  4328b3:	je     4328cb <flatcc_json_printer_table_as_root@@Base+0x16b>
  4328b5:	cmp    DWORD PTR [r14+0x38],0x0
  4328ba:	jne    4328cb <flatcc_json_printer_table_as_root@@Base+0x16b>
  4328bc:	mov    rax,QWORD PTR [r14+0x28]
  4328c0:	lea    rcx,[rax+0x1]
  4328c4:	mov    QWORD PTR [r14+0x28],rcx
  4328c8:	mov    BYTE PTR [rax],0xa
  4328cb:	mov    rdi,r14
  4328ce:	mov    esi,0x1
  4328d3:	call   QWORD PTR [r14+0x48]
  4328d7:	mov    eax,0xffffffff
  4328dc:	cmp    DWORD PTR [r14+0x3c],0x0
  4328e1:	jne    4328ee <flatcc_json_printer_table_as_root@@Base+0x18e>
  4328e3:	mov    eax,DWORD PTR [r14+0x28]
  4328e7:	add    eax,DWORD PTR [r14+0x18]
  4328eb:	sub    eax,DWORD PTR [r14]
  4328ee:	add    rsp,0x20
  4328f2:	pop    rbx
  4328f3:	pop    r14
  4328f5:	pop    r15
  4328f7:	ret    
  4328f8:	cmp    DWORD PTR [r14+0x3c],0x0
  4328fd:	jne    432907 <flatcc_json_printer_table_as_root@@Base+0x1a7>
  4328ff:	mov    DWORD PTR [r14+0x3c],0x1
  432907:	lea    rdi,[rip+0x9382]        # 43bc90 <flatcc_builder_padding_base@@Base+0x35e0>
  43290e:	lea    rsi,[rip+0x8f98]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432915:	lea    rcx,[rip+0x9393]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  43291c:	mov    edx,0x3fb
  432921:	call   406070 <__assert_fail@plt>
  432926:	cmp    DWORD PTR [r14+0x3c],0x0
  43292b:	jne    432935 <flatcc_json_printer_table_as_root@@Base+0x1d5>
  43292d:	mov    DWORD PTR [r14+0x3c],0x1
  432935:	lea    rdi,[rip+0x93c2]        # 43bcfe <flatcc_builder_padding_base@@Base+0x364e>
  43293c:	lea    rsi,[rip+0x8f6a]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432943:	lea    rcx,[rip+0x9365]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  43294a:	mov    edx,0x404
  43294f:	call   406070 <__assert_fail@plt>
  432954:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43295e:	xchg   ax,ax

0000000000432960 <flatcc_json_printer_struct_as_nested_root@@Base>:
  432960:	push   rbp
  432961:	push   r15
  432963:	push   r14
  432965:	push   r13
  432967:	push   r12
  432969:	push   rbx
  43296a:	push   rax
  43296b:	lea    eax,[rdx+rdx*1]
  43296e:	add    eax,0x4
  432971:	cmp    eax,DWORD PTR [rsi+0x10]
  432974:	jge    432aed <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43297a:	mov    r15,rcx
  43297d:	mov    rbx,rsi
  432980:	mov    rcx,QWORD PTR [rsi+0x8]
  432984:	mov    eax,eax
  432986:	movzx  eax,WORD PTR [rcx+rax*1]
  43298a:	test   rax,rax
  43298d:	je     432aed <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  432993:	add    rax,QWORD PTR [rbx]
  432996:	je     432aed <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43299c:	mov    r14,rdi
  43299f:	mov    ebp,DWORD PTR [rax]
  4329a1:	mov    ecx,DWORD PTR [rbp+rax*1+0x0]
  4329a5:	mov    DWORD PTR [rsp+0x4],0x0
  4329ad:	cmp    ecx,0x8
  4329b0:	jb     432afc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  4329b6:	add    rbp,rax
  4329b9:	je     432afc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  4329bf:	mov    r12d,r8d
  4329c2:	test   r9,r9
  4329c5:	je     4329ea <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  4329c7:	lea    rdi,[rsp+0x4]
  4329cc:	mov    edx,0x4
  4329d1:	mov    rsi,r9
  4329d4:	call   406040 <strncpy@plt>
  4329d9:	mov    eax,DWORD PTR [rsp+0x4]
  4329dd:	test   eax,eax
  4329df:	je     4329ea <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  4329e1:	cmp    DWORD PTR [rbp+0x4],eax
  4329e4:	jne    432b2a <flatcc_json_printer_struct_as_nested_root@@Base+0x1ca>
  4329ea:	mov    r13,QWORD PTR [rsp+0x40]
  4329ef:	mov    eax,DWORD PTR [rbx+0x18]
  4329f2:	lea    ecx,[rax+0x1]
  4329f5:	mov    DWORD PTR [rbx+0x18],ecx
  4329f8:	test   eax,eax
  4329fa:	je     432a0b <flatcc_json_printer_struct_as_nested_root@@Base+0xab>
  4329fc:	mov    rax,QWORD PTR [r14+0x28]
  432a00:	lea    rcx,[rax+0x1]
  432a04:	mov    QWORD PTR [r14+0x28],rcx
  432a08:	mov    BYTE PTR [rax],0x2c
  432a0b:	movsxd rdx,r12d
  432a0e:	mov    rdi,r14
  432a11:	mov    rsi,r15
  432a14:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  432a19:	inc    DWORD PTR [r14+0x38]
  432a1d:	mov    rax,QWORD PTR [r14+0x28]
  432a21:	lea    rcx,[rax+0x1]
  432a25:	mov    QWORD PTR [r14+0x28],rcx
  432a29:	mov    BYTE PTR [rax],0x7b
  432a2c:	mov    esi,DWORD PTR [rbp+0x0]
  432a2f:	add    rsi,rbp
  432a32:	mov    rdi,r14
  432a35:	call   r13
  432a38:	cmp    BYTE PTR [r14+0x31],0x0
  432a3d:	mov    rbx,QWORD PTR [r14+0x28]
  432a41:	je     432ae2 <flatcc_json_printer_struct_as_nested_root@@Base+0x182>
  432a47:	lea    rax,[rbx+0x1]
  432a4b:	mov    QWORD PTR [r14+0x28],rax
  432a4f:	mov    BYTE PTR [rbx],0xa
  432a52:	movsxd rax,DWORD PTR [r14+0x38]
  432a56:	dec    rax
  432a59:	mov    DWORD PTR [r14+0x38],eax
  432a5d:	movzx  ebx,BYTE PTR [r14+0x31]
  432a62:	imul   rbx,rax
  432a66:	mov    rbp,QWORD PTR [r14+0x20]
  432a6a:	mov    rdi,QWORD PTR [r14+0x28]
  432a6e:	lea    rax,[rdi+rbx*1]
  432a72:	cmp    rax,rbp
  432a75:	jbe    432acd <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  432a77:	cmp    rdi,rbp
  432a7a:	jb     432a8d <flatcc_json_printer_struct_as_nested_root@@Base+0x12d>
  432a7c:	mov    rdi,r14
  432a7f:	xor    esi,esi
  432a81:	call   QWORD PTR [r14+0x48]
  432a85:	mov    rbp,QWORD PTR [r14+0x20]
  432a89:	mov    rdi,QWORD PTR [r14+0x28]
  432a8d:	sub    rbp,rdi
  432a90:	cmp    rbp,rbx
  432a93:	jae    432acd <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  432a95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a9f:	nop
  432aa0:	mov    esi,0x20
  432aa5:	mov    rdx,rbp
  432aa8:	call   406080 <memset@plt>
  432aad:	add    QWORD PTR [r14+0x28],rbp
  432ab1:	sub    rbx,rbp
  432ab4:	mov    rdi,r14
  432ab7:	xor    esi,esi
  432ab9:	call   QWORD PTR [r14+0x48]
  432abd:	mov    rbp,QWORD PTR [r14+0x20]
  432ac1:	mov    rdi,QWORD PTR [r14+0x28]
  432ac5:	sub    rbp,rdi
  432ac8:	cmp    rbx,rbp
  432acb:	ja     432aa0 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
  432acd:	mov    esi,0x20
  432ad2:	mov    rdx,rbx
  432ad5:	call   406080 <memset@plt>
  432ada:	add    rbx,QWORD PTR [r14+0x28]
  432ade:	mov    QWORD PTR [r14+0x28],rbx
  432ae2:	lea    rax,[rbx+0x1]
  432ae6:	mov    QWORD PTR [r14+0x28],rax
  432aea:	mov    BYTE PTR [rbx],0x7d
  432aed:	add    rsp,0x8
  432af1:	pop    rbx
  432af2:	pop    r12
  432af4:	pop    r13
  432af6:	pop    r14
  432af8:	pop    r15
  432afa:	pop    rbp
  432afb:	ret    
  432afc:	cmp    DWORD PTR [r14+0x3c],0x0
  432b01:	jne    432b0b <flatcc_json_printer_struct_as_nested_root@@Base+0x1ab>
  432b03:	mov    DWORD PTR [r14+0x3c],0x1
  432b0b:	lea    rdi,[rip+0x917e]        # 43bc90 <flatcc_builder_padding_base@@Base+0x35e0>
  432b12:	lea    rsi,[rip+0x8d94]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432b19:	lea    rcx,[rip+0x918f]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  432b20:	mov    edx,0x3fb
  432b25:	call   406070 <__assert_fail@plt>
  432b2a:	cmp    DWORD PTR [r14+0x3c],0x0
  432b2f:	jne    432b39 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d9>
  432b31:	mov    DWORD PTR [r14+0x3c],0x1
  432b39:	lea    rdi,[rip+0x91be]        # 43bcfe <flatcc_builder_padding_base@@Base+0x364e>
  432b40:	lea    rsi,[rip+0x8d66]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432b47:	lea    rcx,[rip+0x9161]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  432b4e:	mov    edx,0x404
  432b53:	call   406070 <__assert_fail@plt>
  432b58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000432b60 <flatcc_json_printer_table_as_nested_root@@Base>:
  432b60:	push   rbp
  432b61:	push   r15
  432b63:	push   r14
  432b65:	push   r13
  432b67:	push   r12
  432b69:	push   rbx
  432b6a:	sub    rsp,0x28
  432b6e:	lea    eax,[rdx+rdx*1]
  432b71:	add    eax,0x4
  432b74:	cmp    eax,DWORD PTR [rsi+0x10]
  432b77:	jge    432d3e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432b7d:	mov    r15,rcx
  432b80:	mov    rbx,rsi
  432b83:	mov    rcx,QWORD PTR [rsi+0x8]
  432b87:	mov    eax,eax
  432b89:	movzx  ebp,WORD PTR [rcx+rax*1]
  432b8d:	test   rbp,rbp
  432b90:	je     432d3e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432b96:	add    rbp,QWORD PTR [rbx]
  432b99:	je     432d3e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432b9f:	mov    r14,rdi
  432ba2:	mov    r13d,DWORD PTR [rbp+0x0]
  432ba6:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  432bab:	mov    DWORD PTR [rsp+0x8],0x0
  432bb3:	cmp    eax,0x7
  432bb6:	jbe    432d4d <flatcc_json_printer_table_as_nested_root@@Base+0x1ed>
  432bbc:	mov    r12d,r8d
  432bbf:	test   r9,r9
  432bc2:	je     432bed <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  432bc4:	lea    rdi,[rsp+0x8]
  432bc9:	mov    edx,0x4
  432bce:	mov    rsi,r9
  432bd1:	call   406040 <strncpy@plt>
  432bd6:	mov    eax,DWORD PTR [rsp+0x8]
  432bda:	test   eax,eax
  432bdc:	je     432bed <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  432bde:	mov    rcx,r13
  432be1:	add    rcx,rbp
  432be4:	cmp    DWORD PTR [rcx+0x8],eax
  432be7:	jne    432d7b <flatcc_json_printer_table_as_nested_root@@Base+0x21b>
  432bed:	mov    eax,DWORD PTR [rbx+0x18]
  432bf0:	lea    ecx,[rax+0x1]
  432bf3:	mov    DWORD PTR [rbx+0x18],ecx
  432bf6:	test   eax,eax
  432bf8:	je     432c09 <flatcc_json_printer_table_as_nested_root@@Base+0xa9>
  432bfa:	mov    rax,QWORD PTR [r14+0x28]
  432bfe:	lea    rcx,[rax+0x1]
  432c02:	mov    QWORD PTR [r14+0x28],rcx
  432c06:	mov    BYTE PTR [rax],0x2c
  432c09:	movsxd rdx,r12d
  432c0c:	mov    rdi,r14
  432c0f:	mov    rsi,r15
  432c12:	call   429670 <flatcc_json_printer_string_field@@Base+0x80>
  432c17:	mov    eax,DWORD PTR [rbx+0x14]
  432c1a:	dec    eax
  432c1c:	je     432d2f <flatcc_json_printer_table_as_nested_root@@Base+0x1cf>
  432c22:	lea    rcx,[rbp*1+0x4]
  432c2a:	add    rcx,r13
  432c2d:	mov    rdx,QWORD PTR [rsp+0x60]
  432c32:	mov    esi,DWORD PTR [rcx]
  432c34:	add    rsi,rcx
  432c37:	inc    DWORD PTR [r14+0x38]
  432c3b:	mov    rcx,QWORD PTR [r14+0x28]
  432c3f:	lea    rdi,[rcx+0x1]
  432c43:	mov    QWORD PTR [r14+0x28],rdi
  432c47:	mov    BYTE PTR [rcx],0x7b
  432c4a:	mov    DWORD PTR [rsp+0x20],0x0
  432c52:	mov    DWORD PTR [rsp+0x1c],eax
  432c56:	mov    QWORD PTR [rsp+0x8],rsi
  432c5b:	movsxd rax,DWORD PTR [rsi]
  432c5e:	sub    rsi,rax
  432c61:	mov    QWORD PTR [rsp+0x10],rsi
  432c66:	movzx  eax,WORD PTR [rsi]
  432c69:	mov    DWORD PTR [rsp+0x18],eax
  432c6d:	lea    rsi,[rsp+0x8]
  432c72:	mov    rdi,r14
  432c75:	call   rdx
  432c77:	cmp    BYTE PTR [r14+0x31],0x0
  432c7c:	mov    rbx,QWORD PTR [r14+0x28]
  432c80:	je     432d22 <flatcc_json_printer_table_as_nested_root@@Base+0x1c2>
  432c86:	lea    rax,[rbx+0x1]
  432c8a:	mov    QWORD PTR [r14+0x28],rax
  432c8e:	mov    BYTE PTR [rbx],0xa
  432c91:	movsxd rax,DWORD PTR [r14+0x38]
  432c95:	dec    rax
  432c98:	mov    DWORD PTR [r14+0x38],eax
  432c9c:	movzx  ebx,BYTE PTR [r14+0x31]
  432ca1:	imul   rbx,rax
  432ca5:	mov    rbp,QWORD PTR [r14+0x20]
  432ca9:	mov    rdi,QWORD PTR [r14+0x28]
  432cad:	lea    rax,[rdi+rbx*1]
  432cb1:	cmp    rax,rbp
  432cb4:	jbe    432d0d <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  432cb6:	cmp    rdi,rbp
  432cb9:	jb     432ccc <flatcc_json_printer_table_as_nested_root@@Base+0x16c>
  432cbb:	mov    rdi,r14
  432cbe:	xor    esi,esi
  432cc0:	call   QWORD PTR [r14+0x48]
  432cc4:	mov    rbp,QWORD PTR [r14+0x20]
  432cc8:	mov    rdi,QWORD PTR [r14+0x28]
  432ccc:	sub    rbp,rdi
  432ccf:	cmp    rbp,rbx
  432cd2:	jae    432d0d <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  432cd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432cde:	xchg   ax,ax
  432ce0:	mov    esi,0x20
  432ce5:	mov    rdx,rbp
  432ce8:	call   406080 <memset@plt>
  432ced:	add    QWORD PTR [r14+0x28],rbp
  432cf1:	sub    rbx,rbp
  432cf4:	mov    rdi,r14
  432cf7:	xor    esi,esi
  432cf9:	call   QWORD PTR [r14+0x48]
  432cfd:	mov    rbp,QWORD PTR [r14+0x20]
  432d01:	mov    rdi,QWORD PTR [r14+0x28]
  432d05:	sub    rbp,rdi
  432d08:	cmp    rbx,rbp
  432d0b:	ja     432ce0 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
  432d0d:	mov    esi,0x20
  432d12:	mov    rdx,rbx
  432d15:	call   406080 <memset@plt>
  432d1a:	add    rbx,QWORD PTR [r14+0x28]
  432d1e:	mov    QWORD PTR [r14+0x28],rbx
  432d22:	lea    rax,[rbx+0x1]
  432d26:	mov    QWORD PTR [r14+0x28],rax
  432d2a:	mov    BYTE PTR [rbx],0x7d
  432d2d:	jmp    432d3e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432d2f:	cmp    DWORD PTR [r14+0x3c],0x0
  432d34:	jne    432d3e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  432d36:	mov    DWORD PTR [r14+0x3c],0x2
  432d3e:	add    rsp,0x28
  432d42:	pop    rbx
  432d43:	pop    r12
  432d45:	pop    r13
  432d47:	pop    r14
  432d49:	pop    r15
  432d4b:	pop    rbp
  432d4c:	ret    
  432d4d:	cmp    DWORD PTR [r14+0x3c],0x0
  432d52:	jne    432d5c <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
  432d54:	mov    DWORD PTR [r14+0x3c],0x1
  432d5c:	lea    rdi,[rip+0x8f2d]        # 43bc90 <flatcc_builder_padding_base@@Base+0x35e0>
  432d63:	lea    rsi,[rip+0x8b43]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432d6a:	lea    rcx,[rip+0x8f3e]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  432d71:	mov    edx,0x3fb
  432d76:	call   406070 <__assert_fail@plt>
  432d7b:	cmp    DWORD PTR [r14+0x3c],0x0
  432d80:	jne    432d8a <flatcc_json_printer_table_as_nested_root@@Base+0x22a>
  432d82:	mov    DWORD PTR [r14+0x3c],0x1
  432d8a:	lea    rdi,[rip+0x8f6d]        # 43bcfe <flatcc_builder_padding_base@@Base+0x364e>
  432d91:	lea    rsi,[rip+0x8b15]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432d98:	lea    rcx,[rip+0x8f10]        # 43bcaf <flatcc_builder_padding_base@@Base+0x35ff>
  432d9f:	mov    edx,0x404
  432da4:	call   406070 <__assert_fail@plt>
  432da9:	nop    DWORD PTR [rax+0x0]

0000000000432db0 <flatcc_json_printer_init@@Base>:
  432db0:	push   rbx
  432db1:	mov    rbx,rdi
  432db4:	vxorps xmm0,xmm0,xmm0
  432db8:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  432dbd:	vmovups YMMWORD PTR [rdi],ymm0
  432dc1:	test   rsi,rsi
  432dc4:	jne    432dd0 <flatcc_json_printer_init@@Base+0x20>
  432dc6:	mov    rax,QWORD PTR [rip+0x10213]        # 442fe0 <stdout@GLIBC_2.2.5>
  432dcd:	mov    rsi,QWORD PTR [rax]
  432dd0:	mov    QWORD PTR [rbx+0x40],rsi
  432dd4:	lea    rax,[rip+0x45]        # 432e20 <flatcc_json_printer_init@@Base+0x70>
  432ddb:	mov    QWORD PTR [rbx+0x48],rax
  432ddf:	mov    edi,0x4040
  432de4:	vzeroupper 
  432de7:	call   4060e0 <malloc@plt>
  432dec:	mov    QWORD PTR [rbx],rax
  432def:	test   rax,rax
  432df2:	je     432e17 <flatcc_json_printer_init@@Base+0x67>
  432df4:	mov    BYTE PTR [rbx+0x30],0x1
  432df8:	vmovaps xmm0,XMMWORD PTR [rip+0x83b0]        # 43b1b0 <flatcc_builder_padding_base@@Base+0x2b00>
  432e00:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  432e05:	mov    QWORD PTR [rbx+0x28],rax
  432e09:	add    rax,0x4000
  432e0f:	mov    QWORD PTR [rbx+0x20],rax
  432e13:	xor    eax,eax
  432e15:	pop    rbx
  432e16:	ret    
  432e17:	mov    eax,0xffffffff
  432e1c:	pop    rbx
  432e1d:	ret    
  432e1e:	xchg   ax,ax
  432e20:	push   r15
  432e22:	push   r14
  432e24:	push   rbx
  432e25:	mov    rbx,rdi
  432e28:	test   esi,esi
  432e2a:	je     432e32 <flatcc_json_printer_init@@Base+0x82>
  432e2c:	mov    r15,QWORD PTR [rbx+0x28]
  432e30:	jmp    432e3f <flatcc_json_printer_init@@Base+0x8f>
  432e32:	mov    r15,QWORD PTR [rbx+0x28]
  432e36:	mov    r14,r15
  432e39:	sub    r14,QWORD PTR [rbx+0x20]
  432e3d:	jae    432e63 <flatcc_json_printer_init@@Base+0xb3>
  432e3f:	mov    rdi,QWORD PTR [rbx]
  432e42:	mov    rcx,QWORD PTR [rbx+0x40]
  432e46:	sub    r15,rdi
  432e49:	mov    edx,0x1
  432e4e:	mov    rsi,r15
  432e51:	call   406130 <fwrite@plt>
  432e56:	mov    r14,QWORD PTR [rbx]
  432e59:	mov    QWORD PTR [rbx+0x28],r14
  432e5d:	add    QWORD PTR [rbx+0x18],r15
  432e61:	jmp    432e99 <flatcc_json_printer_init@@Base+0xe9>
  432e63:	mov    rdi,QWORD PTR [rbx]
  432e66:	mov    rsi,QWORD PTR [rbx+0x10]
  432e6a:	mov    rcx,QWORD PTR [rbx+0x40]
  432e6e:	mov    edx,0x1
  432e73:	call   406130 <fwrite@plt>
  432e78:	mov    rdi,QWORD PTR [rbx]
  432e7b:	mov    rsi,QWORD PTR [rbx+0x10]
  432e7f:	add    rsi,rdi
  432e82:	mov    rdx,r14
  432e85:	call   4060d0 <memcpy@plt>
  432e8a:	add    r14,QWORD PTR [rbx]
  432e8d:	mov    QWORD PTR [rbx+0x28],r14
  432e91:	mov    rax,QWORD PTR [rbx+0x10]
  432e95:	add    QWORD PTR [rbx+0x18],rax
  432e99:	mov    BYTE PTR [r14],0x0
  432e9d:	pop    rbx
  432e9e:	pop    r14
  432ea0:	pop    r15
  432ea2:	ret    
  432ea3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432ead:	nop    DWORD PTR [rax]

0000000000432eb0 <flatcc_json_printer_init_buffer@@Base>:
  432eb0:	push   rax
  432eb1:	cmp    rdx,0x3f
  432eb5:	jbe    432ef3 <flatcc_json_printer_init_buffer@@Base+0x43>
  432eb7:	vxorps xmm0,xmm0,xmm0
  432ebb:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  432ec0:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  432ec5:	mov    QWORD PTR [rdi],rsi
  432ec8:	mov    QWORD PTR [rdi+0x8],rdx
  432ecc:	lea    rax,[rdx-0x40]
  432ed0:	mov    QWORD PTR [rdi+0x10],rax
  432ed4:	mov    QWORD PTR [rdi+0x28],rsi
  432ed8:	lea    rax,[rsi+rdx*1-0x40]
  432edd:	mov    QWORD PTR [rdi+0x20],rax
  432ee1:	lea    rax,[rip+0x38]        # 432f20 <flatcc_json_printer_init_buffer@@Base+0x70>
  432ee8:	mov    QWORD PTR [rdi+0x48],rax
  432eec:	xor    eax,eax
  432eee:	pop    rcx
  432eef:	vzeroupper 
  432ef2:	ret    
  432ef3:	lea    rdi,[rip+0x8ae8]        # 43b9e2 <flatcc_builder_padding_base@@Base+0x3332>
  432efa:	lea    rsi,[rip+0x89ac]        # 43b8ad <flatcc_builder_padding_base@@Base+0x31fd>
  432f01:	lea    rcx,[rip+0x8b03]        # 43ba0b <flatcc_builder_padding_base@@Base+0x335b>
  432f08:	mov    edx,0x48d
  432f0d:	call   406070 <__assert_fail@plt>
  432f12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432f1c:	nop    DWORD PTR [rax+0x0]
  432f20:	mov    rax,QWORD PTR [rdi+0x28]
  432f24:	cmp    rax,QWORD PTR [rdi+0x20]
  432f28:	jb     432f48 <flatcc_json_printer_init_buffer@@Base+0x98>
  432f2a:	cmp    DWORD PTR [rdi+0x3c],0x0
  432f2e:	jne    432f37 <flatcc_json_printer_init_buffer@@Base+0x87>
  432f30:	mov    DWORD PTR [rdi+0x3c],0x3
  432f37:	mov    rcx,QWORD PTR [rdi]
  432f3a:	sub    rax,rcx
  432f3d:	add    QWORD PTR [rdi+0x18],rax
  432f41:	mov    QWORD PTR [rdi+0x28],rcx
  432f45:	mov    rax,rcx
  432f48:	mov    BYTE PTR [rax],0x0
  432f4b:	ret    
  432f4c:	nop    DWORD PTR [rax+0x0]

0000000000432f50 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  432f50:	push   r14
  432f52:	push   rbx
  432f53:	push   rax
  432f54:	test   rsi,rsi
  432f57:	mov    eax,0x1000
  432f5c:	cmovne rax,rsi
  432f60:	cmp    rax,0x40
  432f64:	mov    r14d,0x40
  432f6a:	cmova  r14,rax
  432f6e:	mov    rbx,rdi
  432f71:	vxorps xmm0,xmm0,xmm0
  432f75:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  432f7a:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  432f7f:	mov    rdi,r14
  432f82:	vzeroupper 
  432f85:	call   4060e0 <malloc@plt>
  432f8a:	mov    rcx,rax
  432f8d:	mov    QWORD PTR [rbx],rax
  432f90:	mov    BYTE PTR [rbx+0x30],0x1
  432f94:	mov    QWORD PTR [rbx+0x8],r14
  432f98:	lea    rax,[r14-0x40]
  432f9c:	mov    QWORD PTR [rbx+0x10],rax
  432fa0:	mov    QWORD PTR [rbx+0x28],rcx
  432fa4:	lea    rax,[rcx+r14*1-0x40]
  432fa9:	mov    QWORD PTR [rbx+0x20],rax
  432fad:	lea    rax,[rip+0x2c]        # 432fe0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
  432fb4:	mov    QWORD PTR [rbx+0x48],rax
  432fb8:	xor    eax,eax
  432fba:	test   rcx,rcx
  432fbd:	jne    432fcb <flatcc_json_printer_init_dynamic_buffer@@Base+0x7b>
  432fbf:	mov    DWORD PTR [rbx+0x3c],0x3
  432fc6:	mov    eax,0xffffffff
  432fcb:	add    rsp,0x8
  432fcf:	pop    rbx
  432fd0:	pop    r14
  432fd2:	ret    
  432fd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432fdd:	nop    DWORD PTR [rax]
  432fe0:	push   r14
  432fe2:	push   rbx
  432fe3:	push   rax
  432fe4:	mov    rax,QWORD PTR [rdi+0x28]
  432fe8:	mov    r14,rax
  432feb:	sub    r14,QWORD PTR [rdi]
  432fee:	mov    BYTE PTR [rax],0x0
  432ff1:	mov    rax,QWORD PTR [rdi+0x28]
  432ff5:	cmp    rax,QWORD PTR [rdi+0x20]
  432ff9:	jb     43305e <flatcc_json_printer_init_dynamic_buffer@@Base+0x10e>
  432ffb:	mov    rbx,rdi
  432ffe:	mov    rdi,QWORD PTR [rdi]
  433001:	mov    rsi,QWORD PTR [rbx+0x8]
  433005:	add    rsi,rsi
  433008:	call   406100 <realloc@plt>
  43300d:	test   rax,rax
  433010:	je     433042 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf2>
  433012:	mov    rcx,QWORD PTR [rbx+0x8]
  433016:	lea    rdx,[rcx+rcx*1]
  43301a:	mov    QWORD PTR [rbx+0x8],rdx
  43301e:	lea    rdx,[rcx+rcx*1]
  433022:	add    rdx,0xffffffffffffffc0
  433026:	mov    QWORD PTR [rbx+0x10],rdx
  43302a:	mov    QWORD PTR [rbx],rax
  43302d:	add    r14,rax
  433030:	mov    QWORD PTR [rbx+0x28],r14
  433034:	lea    rax,[rax+rcx*2]
  433038:	add    rax,0xffffffffffffffc0
  43303c:	mov    QWORD PTR [rbx+0x20],rax
  433040:	jmp    43305a <flatcc_json_printer_init_dynamic_buffer@@Base+0x10a>
  433042:	cmp    DWORD PTR [rbx+0x3c],0x0
  433046:	jne    43304f <flatcc_json_printer_init_dynamic_buffer@@Base+0xff>
  433048:	mov    DWORD PTR [rbx+0x3c],0x3
  43304f:	add    QWORD PTR [rbx+0x18],r14
  433053:	mov    r14,QWORD PTR [rbx]
  433056:	mov    QWORD PTR [rbx+0x28],r14
  43305a:	mov    BYTE PTR [r14],0x0
  43305e:	add    rsp,0x8
  433062:	pop    rbx
  433063:	pop    r14
  433065:	ret    
  433066:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000433070 <flatcc_json_printer_get_buffer@@Base>:
  433070:	push   r14
  433072:	push   rbx
  433073:	push   rax
  433074:	mov    r14,rsi
  433077:	mov    rbx,rdi
  43307a:	xor    esi,esi
  43307c:	call   QWORD PTR [rdi+0x48]
  43307f:	test   r14,r14
  433082:	je     433093 <flatcc_json_printer_get_buffer@@Base+0x23>
  433084:	mov    rax,QWORD PTR [rbx]
  433087:	mov    rcx,QWORD PTR [rbx+0x28]
  43308b:	sub    rcx,rax
  43308e:	mov    QWORD PTR [r14],rcx
  433091:	jmp    433096 <flatcc_json_printer_get_buffer@@Base+0x26>
  433093:	mov    rax,QWORD PTR [rbx]
  433096:	add    rsp,0x8
  43309a:	pop    rbx
  43309b:	pop    r14
  43309d:	ret    
  43309e:	xchg   ax,ax

00000000004330a0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  4330a0:	push   r14
  4330a2:	push   rbx
  4330a3:	push   rax
  4330a4:	mov    r14,rsi
  4330a7:	mov    rbx,rdi
  4330aa:	xor    esi,esi
  4330ac:	call   QWORD PTR [rdi+0x48]
  4330af:	test   r14,r14
  4330b2:	je     4330c3 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x23>
  4330b4:	mov    rax,QWORD PTR [rbx]
  4330b7:	mov    rcx,QWORD PTR [rbx+0x28]
  4330bb:	sub    rcx,rax
  4330be:	mov    QWORD PTR [r14],rcx
  4330c1:	jmp    4330c6 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x26>
  4330c3:	mov    rax,QWORD PTR [rbx]
  4330c6:	vxorps xmm0,xmm0,xmm0
  4330ca:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  4330cf:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4330d4:	vmovups YMMWORD PTR [rbx],ymm0
  4330d8:	add    rsp,0x8
  4330dc:	pop    rbx
  4330dd:	pop    r14
  4330df:	vzeroupper 
  4330e2:	ret    
  4330e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4330ed:	nop    DWORD PTR [rax]

00000000004330f0 <flatcc_json_printer_clear@@Base>:
  4330f0:	push   rbx
  4330f1:	mov    rbx,rdi
  4330f4:	cmp    BYTE PTR [rdi+0x30],0x0
  4330f8:	je     433107 <flatcc_json_printer_clear@@Base+0x17>
  4330fa:	mov    rdi,QWORD PTR [rbx]
  4330fd:	test   rdi,rdi
  433100:	je     433107 <flatcc_json_printer_clear@@Base+0x17>
  433102:	call   406030 <free@plt>
  433107:	vxorps xmm0,xmm0,xmm0
  43310b:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  433110:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  433115:	vmovups YMMWORD PTR [rbx],ymm0
  433119:	pop    rbx
  43311a:	vzeroupper 
  43311d:	ret    
  43311e:	xchg   ax,ax
  433120:	test   rdx,rdx
  433123:	je     433263 <flatcc_json_printer_clear@@Base+0x173>
  433129:	mov    r9,QWORD PTR [rdx]
  43312c:	mov    r8d,ecx
  43312f:	and    r8d,0xffffff1f
  433136:	je     433154 <flatcc_json_printer_clear@@Base+0x64>
  433138:	cmp    r8d,0x1
  43313c:	jne    43322b <flatcc_json_printer_clear@@Base+0x13b>
  433142:	lea    r8,[rip+0x8b06]        # 43bc4f <flatcc_builder_padding_base@@Base+0x359f>
  433149:	cmp    r9,0x3
  43314d:	jae    433170 <flatcc_json_printer_clear@@Base+0x80>
  43314f:	jmp    4331db <flatcc_json_printer_clear@@Base+0xeb>
  433154:	lea    r8,[rip+0x8ab3]        # 43bc0e <flatcc_builder_padding_base@@Base+0x355e>
  43315b:	cmp    r9,0x3
  43315f:	jb     4331db <flatcc_json_printer_clear@@Base+0xeb>
  433161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43316b:	nop    DWORD PTR [rax+rax*1+0x0]
  433170:	movzx  eax,BYTE PTR [rsi]
  433173:	shr    rax,0x2
  433177:	movzx  eax,BYTE PTR [r8+rax*1]
  43317c:	mov    BYTE PTR [rdi],al
  43317e:	movzx  r10d,BYTE PTR [rsi]
  433182:	shl    r10d,0x4
  433186:	and    r10d,0x30
  43318a:	movzx  eax,BYTE PTR [rsi+0x1]
  43318e:	shr    rax,0x4
  433192:	or     rax,r10
  433195:	movzx  eax,BYTE PTR [r8+rax*1]
  43319a:	mov    BYTE PTR [rdi+0x1],al
  43319d:	movzx  r10d,BYTE PTR [rsi+0x1]
  4331a2:	and    r10d,0xf
  4331a6:	movzx  eax,BYTE PTR [rsi+0x2]
  4331aa:	shr    rax,0x6
  4331ae:	lea    rax,[rax+r10*4]
  4331b2:	movzx  eax,BYTE PTR [r8+rax*1]
  4331b7:	mov    BYTE PTR [rdi+0x2],al
  4331ba:	movzx  eax,BYTE PTR [rsi+0x2]
  4331be:	and    eax,0x3f
  4331c1:	movzx  eax,BYTE PTR [r8+rax*1]
  4331c6:	mov    BYTE PTR [rdi+0x3],al
  4331c9:	add    r9,0xfffffffffffffffd
  4331cd:	add    rdi,0x4
  4331d1:	add    rsi,0x3
  4331d5:	cmp    r9,0x2
  4331d9:	ja     433170 <flatcc_json_printer_clear@@Base+0x80>
  4331db:	cmp    r9,0x1
  4331df:	je     433230 <flatcc_json_printer_clear@@Base+0x140>
  4331e1:	cmp    r9,0x2
  4331e5:	jne    433258 <flatcc_json_printer_clear@@Base+0x168>
  4331e7:	movzx  eax,BYTE PTR [rsi]
  4331ea:	shr    rax,0x2
  4331ee:	mov    al,BYTE PTR [r8+rax*1]
  4331f2:	mov    BYTE PTR [rdi],al
  4331f4:	movzx  r9d,BYTE PTR [rsi]
  4331f8:	shl    r9d,0x4
  4331fc:	and    r9d,0x30
  433200:	movzx  eax,BYTE PTR [rsi+0x1]
  433204:	shr    rax,0x4
  433208:	or     rax,r9
  43320b:	mov    al,BYTE PTR [r8+rax*1]
  43320f:	mov    BYTE PTR [rdi+0x1],al
  433212:	movzx  eax,BYTE PTR [rsi+0x1]
  433216:	and    eax,0xf
  433219:	mov    al,BYTE PTR [r8+rax*4]
  43321d:	mov    BYTE PTR [rdi+0x2],al
  433220:	test   cl,0x80
  433223:	je     433258 <flatcc_json_printer_clear@@Base+0x168>
  433225:	mov    BYTE PTR [rdi+0x3],0x3d
  433229:	jmp    433258 <flatcc_json_printer_clear@@Base+0x168>
  43322b:	mov    rcx,r9
  43322e:	jmp    43325d <flatcc_json_printer_clear@@Base+0x16d>
  433230:	movzx  eax,BYTE PTR [rsi]
  433233:	shr    rax,0x2
  433237:	mov    al,BYTE PTR [r8+rax*1]
  43323b:	mov    BYTE PTR [rdi],al
  43323d:	movzx  eax,BYTE PTR [rsi]
  433240:	shl    eax,0x4
  433243:	and    eax,0x30
  433246:	mov    al,BYTE PTR [r8+rax*1]
  43324a:	mov    BYTE PTR [rdi+0x1],al
  43324d:	test   cl,0x80
  433250:	je     433258 <flatcc_json_printer_clear@@Base+0x168>
  433252:	mov    WORD PTR [rdi+0x2],0x3d3d
  433258:	mov    r9,QWORD PTR [rdx]
  43325b:	xor    ecx,ecx
  43325d:	sub    r9,rcx
  433260:	mov    QWORD PTR [rdx],r9
  433263:	ret    
  433264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43326e:	xchg   ax,ax

0000000000433270 <__libc_csu_init@@Base>:
  433270:	endbr64 
  433274:	push   r15
  433276:	lea    r15,[rip+0xf873]        # 442af0 <flatcc_builder_padding_base@@Base+0xa440>
  43327d:	push   r14
  43327f:	mov    r14,rdx
  433282:	push   r13
  433284:	mov    r13,rsi
  433287:	push   r12
  433289:	mov    r12d,edi
  43328c:	push   rbp
  43328d:	lea    rbp,[rip+0xf864]        # 442af8 <flatcc_builder_padding_base@@Base+0xa448>
  433294:	push   rbx
  433295:	sub    rbp,r15
  433298:	sub    rsp,0x8
  43329c:	call   406000 <free@plt-0x30>
  4332a1:	sar    rbp,0x3
  4332a5:	je     4332c6 <__libc_csu_init@@Base+0x56>
  4332a7:	xor    ebx,ebx
  4332a9:	nop    DWORD PTR [rax+0x0]
  4332b0:	mov    rdx,r14
  4332b3:	mov    rsi,r13
  4332b6:	mov    edi,r12d
  4332b9:	call   QWORD PTR [r15+rbx*8]
  4332bd:	add    rbx,0x1
  4332c1:	cmp    rbp,rbx
  4332c4:	jne    4332b0 <__libc_csu_init@@Base+0x40>
  4332c6:	add    rsp,0x8
  4332ca:	pop    rbx
  4332cb:	pop    rbp
  4332cc:	pop    r12
  4332ce:	pop    r13
  4332d0:	pop    r14
  4332d2:	pop    r15
  4332d4:	ret    
  4332d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004332e0 <__libc_csu_fini@@Base>:
  4332e0:	endbr64 
  4332e4:	ret    

Disassembly of section .fini:

00000000004332e8 <.fini>:
  4332e8:	endbr64 
  4332ec:	sub    rsp,0x8
  4332f0:	add    rsp,0x8
  4332f4:	ret    
