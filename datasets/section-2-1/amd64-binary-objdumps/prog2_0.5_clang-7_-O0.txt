
../repos/prog2/0.5:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strlen@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strlen@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strlen@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strlen@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strlen@plt-0x10>

0000000000401040 <printf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <printf@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strlen@plt-0x10>

0000000000401050 <memset@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <memset@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strlen@plt-0x10>

0000000000401060 <strcmp@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <strcmp@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <strlen@plt-0x10>

0000000000401070 <__isoc99_scanf@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <__isoc99_scanf@GLIBC_2.7>
  401076:	push   0x4
  40107b:	jmp    401020 <strlen@plt-0x10>

Disassembly of section .text:

0000000000401080 <_start@@Base>:
  401080:	endbr64 
  401084:	xor    ebp,ebp
  401086:	mov    r9,rdx
  401089:	pop    rsi
  40108a:	mov    rdx,rsp
  40108d:	and    rsp,0xfffffffffffffff0
  401091:	push   rax
  401092:	push   rsp
  401093:	mov    r8,0x401370
  40109a:	mov    rcx,0x401300
  4010a1:	mov    rdi,0x4011f0
  4010a8:	call   QWORD PTR [rip+0x2f42]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ae:	hlt    
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	ret    
  4010b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010bf:	nop
  4010c0:	mov    eax,0x404050
  4010c5:	cmp    rax,0x404050
  4010cb:	je     4010e0 <_start@@Base+0x60>
  4010cd:	mov    eax,0x0
  4010d2:	test   rax,rax
  4010d5:	je     4010e0 <_start@@Base+0x60>
  4010d7:	mov    edi,0x404050
  4010dc:	jmp    rax
  4010de:	xchg   ax,ax
  4010e0:	ret    
  4010e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010ec:	nop    DWORD PTR [rax+0x0]
  4010f0:	mov    esi,0x404050
  4010f5:	sub    rsi,0x404050
  4010fc:	mov    rax,rsi
  4010ff:	shr    rsi,0x3f
  401103:	sar    rax,0x3
  401107:	add    rsi,rax
  40110a:	sar    rsi,1
  40110d:	je     401120 <_start@@Base+0xa0>
  40110f:	mov    eax,0x0
  401114:	test   rax,rax
  401117:	je     401120 <_start@@Base+0xa0>
  401119:	mov    edi,0x404050
  40111e:	jmp    rax
  401120:	ret    
  401121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40112c:	nop    DWORD PTR [rax+0x0]
  401130:	endbr64 
  401134:	cmp    BYTE PTR [rip+0x2f15],0x0        # 404050 <__bss_start@@Base>
  40113b:	jne    401150 <_start@@Base+0xd0>
  40113d:	push   rbp
  40113e:	mov    rbp,rsp
  401141:	call   4010c0 <_start@@Base+0x40>
  401146:	mov    BYTE PTR [rip+0x2f03],0x1        # 404050 <__bss_start@@Base>
  40114d:	pop    rbp
  40114e:	ret    
  40114f:	nop
  401150:	ret    
  401151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40115c:	nop    DWORD PTR [rax+0x0]
  401160:	endbr64 
  401164:	jmp    4010f0 <_start@@Base+0x70>
  401166:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401170 <inverte@@Base>:
  401170:	push   rbp
  401171:	mov    rbp,rsp
  401174:	sub    rsp,0x30
  401178:	mov    QWORD PTR [rbp-0x8],rdi
  40117c:	mov    QWORD PTR [rbp-0x10],rsi
  401180:	mov    DWORD PTR [rbp-0x14],0x0
  401187:	movsxd rax,DWORD PTR [rbp-0x14]
  40118b:	mov    rdi,QWORD PTR [rbp-0x8]
  40118f:	mov    QWORD PTR [rbp-0x20],rax
  401193:	call   401030 <strlen@plt>
  401198:	mov    rdi,QWORD PTR [rbp-0x20]
  40119c:	cmp    rdi,rax
  40119f:	jae    4011e1 <inverte@@Base+0x71>
  4011a5:	mov    rax,QWORD PTR [rbp-0x8]
  4011a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4011ad:	mov    QWORD PTR [rbp-0x28],rax
  4011b1:	call   401030 <strlen@plt>
  4011b6:	movsxd rdi,DWORD PTR [rbp-0x14]
  4011ba:	sub    rax,rdi
  4011bd:	sub    rax,0x1
  4011c1:	mov    rdi,QWORD PTR [rbp-0x28]
  4011c5:	mov    cl,BYTE PTR [rdi+rax*1]
  4011c8:	mov    rax,QWORD PTR [rbp-0x10]
  4011cc:	movsxd rdx,DWORD PTR [rbp-0x14]
  4011d0:	mov    BYTE PTR [rax+rdx*1],cl
  4011d3:	mov    eax,DWORD PTR [rbp-0x14]
  4011d6:	add    eax,0x1
  4011d9:	mov    DWORD PTR [rbp-0x14],eax
  4011dc:	jmp    401187 <inverte@@Base+0x17>
  4011e1:	add    rsp,0x30
  4011e5:	pop    rbp
  4011e6:	ret    
  4011e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004011f0 <main@@Base>:
  4011f0:	push   rbp
  4011f1:	mov    rbp,rsp
  4011f4:	sub    rsp,0x100
  4011fb:	xor    eax,eax
  4011fd:	mov    ecx,0x64
  401202:	mov    edx,ecx
  401204:	mov    DWORD PTR [rbp-0x4],0x0
  40120b:	lea    rsi,[rbp-0x70]
  40120f:	mov    rdi,rsi
  401212:	mov    esi,eax
  401214:	mov    QWORD PTR [rbp-0xe8],rdx
  40121b:	mov    DWORD PTR [rbp-0xec],eax
  401221:	call   401050 <memset@plt>
  401226:	lea    rdx,[rbp-0xe0]
  40122d:	mov    rdi,rdx
  401230:	mov    esi,DWORD PTR [rbp-0xec]
  401236:	mov    rdx,QWORD PTR [rbp-0xe8]
  40123d:	call   401050 <memset@plt>
  401242:	lea    rdi,[rip+0xdbb]        # 402004 <_IO_stdin_used@@Base+0x4>
  401249:	mov    al,0x0
  40124b:	call   401040 <printf@plt>
  401250:	lea    rsi,[rbp-0x70]
  401254:	lea    rdi,[rip+0xdb3]        # 40200e <_IO_stdin_used@@Base+0xe>
  40125b:	mov    DWORD PTR [rbp-0xf0],eax
  401261:	mov    al,0x0
  401263:	call   401070 <__isoc99_scanf@plt>
  401268:	lea    rdi,[rbp-0x70]
  40126c:	lea    rsi,[rip+0xd9e]        # 402011 <_IO_stdin_used@@Base+0x11>
  401273:	mov    DWORD PTR [rbp-0xf4],eax
  401279:	call   401060 <strcmp@plt>
  40127e:	cmp    eax,0x0
  401281:	jne    401292 <main@@Base+0xa2>
  401287:	xor    eax,eax
  401289:	add    rsp,0x100
  401290:	pop    rbp
  401291:	ret    
  401292:	lea    rsi,[rbp-0xe0]
  401299:	lea    rdi,[rbp-0x70]
  40129d:	call   401170 <inverte@@Base>
  4012a2:	lea    rsi,[rbp-0xe0]
  4012a9:	lea    rdi,[rbp-0x70]
  4012ad:	call   401060 <strcmp@plt>
  4012b2:	cmp    eax,0x0
  4012b5:	jne    4012d8 <main@@Base+0xe8>
  4012bb:	lea    rsi,[rbp-0x70]
  4012bf:	lea    rdi,[rip+0xd4d]        # 402013 <_IO_stdin_used@@Base+0x13>
  4012c6:	mov    al,0x0
  4012c8:	call   401040 <printf@plt>
  4012cd:	mov    DWORD PTR [rbp-0xf8],eax
  4012d3:	jmp    4012f0 <main@@Base+0x100>
  4012d8:	lea    rsi,[rbp-0x70]
  4012dc:	lea    rdi,[rip+0xd4a]        # 40202d <_IO_stdin_used@@Base+0x2d>
  4012e3:	mov    al,0x0
  4012e5:	call   401040 <printf@plt>
  4012ea:	mov    DWORD PTR [rbp-0xfc],eax
  4012f0:	jmp    401242 <main@@Base+0x52>
  4012f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ff:	nop

0000000000401300 <__libc_csu_init@@Base>:
  401300:	endbr64 
  401304:	push   r15
  401306:	lea    r15,[rip+0x2af3]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  40130d:	push   r14
  40130f:	mov    r14,rdx
  401312:	push   r13
  401314:	mov    r13,rsi
  401317:	push   r12
  401319:	mov    r12d,edi
  40131c:	push   rbp
  40131d:	lea    rbp,[rip+0x2ae4]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401324:	push   rbx
  401325:	sub    rbp,r15
  401328:	sub    rsp,0x8
  40132c:	call   401000 <strlen@plt-0x30>
  401331:	sar    rbp,0x3
  401335:	je     401356 <__libc_csu_init@@Base+0x56>
  401337:	xor    ebx,ebx
  401339:	nop    DWORD PTR [rax+0x0]
  401340:	mov    rdx,r14
  401343:	mov    rsi,r13
  401346:	mov    edi,r12d
  401349:	call   QWORD PTR [r15+rbx*8]
  40134d:	add    rbx,0x1
  401351:	cmp    rbp,rbx
  401354:	jne    401340 <__libc_csu_init@@Base+0x40>
  401356:	add    rsp,0x8
  40135a:	pop    rbx
  40135b:	pop    rbp
  40135c:	pop    r12
  40135e:	pop    r13
  401360:	pop    r14
  401362:	pop    r15
  401364:	ret    
  401365:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401370 <__libc_csu_fini@@Base>:
  401370:	endbr64 
  401374:	ret    

Disassembly of section .fini:

0000000000401378 <.fini>:
  401378:	endbr64 
  40137c:	sub    rsp,0x8
  401380:	add    rsp,0x8
  401384:	ret    
