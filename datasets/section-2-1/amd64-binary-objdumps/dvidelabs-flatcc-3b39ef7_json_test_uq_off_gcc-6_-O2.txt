
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x33fd1]        # 438fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <free@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <free@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x33fe2]        # 439008 <flatcc_builder_padding_base@@Base+0xa1e8>
  405026:	jmp    QWORD PTR [rip+0x33fe4]        # 439010 <flatcc_builder_padding_base@@Base+0xa1f0>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <free@plt>:
  405030:	jmp    QWORD PTR [rip+0x33fe2]        # 439018 <free@GLIBC_2.2.5>
  405036:	push   0x0
  40503b:	jmp    405020 <free@plt-0x10>

0000000000405040 <strncpy@plt>:
  405040:	jmp    QWORD PTR [rip+0x33fda]        # 439020 <strncpy@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <free@plt-0x10>

0000000000405050 <strtod@plt>:
  405050:	jmp    QWORD PTR [rip+0x33fd2]        # 439028 <strtod@GLIBC_2.2.5>
  405056:	push   0x2
  40505b:	jmp    405020 <free@plt-0x10>

0000000000405060 <strlen@plt>:
  405060:	jmp    QWORD PTR [rip+0x33fca]        # 439030 <strlen@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <free@plt-0x10>

0000000000405070 <__stack_chk_fail@plt>:
  405070:	jmp    QWORD PTR [rip+0x33fc2]        # 439038 <__stack_chk_fail@GLIBC_2.4>
  405076:	push   0x4
  40507b:	jmp    405020 <free@plt-0x10>

0000000000405080 <__assert_fail@plt>:
  405080:	jmp    QWORD PTR [rip+0x33fba]        # 439040 <__assert_fail@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <free@plt-0x10>

0000000000405090 <memset@plt>:
  405090:	jmp    QWORD PTR [rip+0x33fb2]        # 439048 <memset@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <free@plt-0x10>

00000000004050a0 <memchr@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x33faa]        # 439050 <memchr@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <free@plt-0x10>

00000000004050b0 <memcmp@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x33fa2]        # 439058 <memcmp@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <free@plt-0x10>

00000000004050c0 <strcmp@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x33f9a]        # 439060 <strcmp@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <free@plt-0x10>

00000000004050d0 <__memcpy_chk@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x33f92]        # 439068 <__memcpy_chk@GLIBC_2.3.4>
  4050d6:	push   0xa
  4050db:	jmp    405020 <free@plt-0x10>

00000000004050e0 <memcpy@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x33f8a]        # 439070 <memcpy@GLIBC_2.14>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <free@plt-0x10>

00000000004050f0 <malloc@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x33f82]        # 439078 <malloc@GLIBC_2.2.5>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <free@plt-0x10>

0000000000405100 <realloc@plt>:
  405100:	jmp    QWORD PTR [rip+0x33f7a]        # 439080 <realloc@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <free@plt-0x10>

0000000000405110 <memmove@plt>:
  405110:	jmp    QWORD PTR [rip+0x33f72]        # 439088 <memmove@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <free@plt-0x10>

0000000000405120 <fwrite@plt>:
  405120:	jmp    QWORD PTR [rip+0x33f6a]        # 439090 <fwrite@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <free@plt-0x10>

0000000000405130 <__fprintf_chk@plt>:
  405130:	jmp    QWORD PTR [rip+0x33f62]        # 439098 <__fprintf_chk@GLIBC_2.3.4>
  405136:	push   0x10
  40513b:	jmp    405020 <free@plt-0x10>

0000000000405140 <posix_memalign@plt>:
  405140:	jmp    QWORD PTR [rip+0x33f5a]        # 4390a0 <posix_memalign@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <free@plt-0x10>

0000000000405150 <__sprintf_chk@plt>:
  405150:	jmp    QWORD PTR [rip+0x33f52]        # 4390a8 <__sprintf_chk@GLIBC_2.3.4>
  405156:	push   0x12
  40515b:	jmp    405020 <free@plt-0x10>

Disassembly of section .text:

0000000000405160 <main@@Base-0x200>:
  405160:	push   r15
  405162:	push   r14
  405164:	mov    r14,rdx
  405167:	push   r13
  405169:	push   r12
  40516b:	mov    r12,r8
  40516e:	push   rbp
  40516f:	push   rbx
  405170:	mov    rbp,rdi
  405173:	mov    rbx,rdx
  405176:	sub    rsp,0x58
  40517a:	mov    QWORD PTR [r8],0x0
  405181:	mov    rax,QWORD PTR fs:0x28
  40518a:	mov    QWORD PTR [rsp+0x48],rax
  40518f:	xor    eax,eax
  405191:	cmp    rsi,rdx
  405194:	mov    QWORD PTR [rsp+0x10],rcx
  405199:	je     4051b1 <__sprintf_chk@plt+0x61>
  40519b:	cmp    BYTE PTR [rsi],0x22
  40519e:	lea    r14,[rsi+0x1]
  4051a2:	je     4051b1 <__sprintf_chk@plt+0x61>
  4051a4:	mov    ecx,0x5
  4051a9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4051ae:	mov    r14,rax
  4051b1:	mov    rax,rbx
  4051b4:	sub    rax,r14
  4051b7:	dec    rax
  4051ba:	jle    4051d0 <__sprintf_chk@plt+0x80>
  4051bc:	cmp    BYTE PTR [r14],0x20
  4051c0:	jg     4051e1 <__sprintf_chk@plt+0x91>
  4051c2:	jne    4051d0 <__sprintf_chk@plt+0x80>
  4051c4:	cmp    BYTE PTR [r14+0x1],0x20
  4051c9:	jle    4051d0 <__sprintf_chk@plt+0x80>
  4051cb:	inc    r14
  4051ce:	jmp    4051e1 <__sprintf_chk@plt+0x91>
  4051d0:	mov    rsi,r14
  4051d3:	mov    rdx,rbx
  4051d6:	mov    rdi,rbp
  4051d9:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  4051de:	mov    r14,rax
  4051e1:	cmp    rbx,r14
  4051e4:	je     40528f <__sprintf_chk@plt+0x13f>
  4051ea:	lea    rax,[rsp+0x3c]
  4051ef:	mov    QWORD PTR [rsp+0x8],rbp
  4051f4:	xor    r13d,r13d
  4051f7:	mov    rbp,rbx
  4051fa:	mov    QWORD PTR [rsp+0x18],rax
  4051ff:	lea    rax,[rsp+0x40]
  405204:	mov    QWORD PTR [rsp+0x20],rax
  405209:	lea    rax,[rsp+0x38]
  40520e:	mov    QWORD PTR [rsp+0x28],rax
  405213:	mov    rbx,QWORD PTR [rsp+0x10]
  405218:	mov    r9,QWORD PTR [rsp+0x18]
  40521d:	mov    r8,QWORD PTR [rsp+0x20]
  405222:	mov    rdx,rbp
  405225:	mov    rcx,QWORD PTR [rsp+0x28]
  40522a:	mov    rsi,r14
  40522d:	mov    rdi,QWORD PTR [rsp+0x8]
  405232:	call   QWORD PTR [rbx]
  405234:	cmp    rbp,rax
  405237:	je     40528c <__sprintf_chk@plt+0x13c>
  405239:	cmp    r14,rax
  40523c:	jne    405268 <__sprintf_chk@plt+0x118>
  40523e:	add    rbx,0x8
  405242:	cmp    QWORD PTR [rbx],0x0
  405246:	jne    405218 <__sprintf_chk@plt+0xc8>
  405248:	mov    rbx,rbp
  40524b:	mov    rbp,QWORD PTR [rsp+0x8]
  405250:	mov    ecx,0x17
  405255:	mov    rdx,rbx
  405258:	mov    rsi,r14
  40525b:	mov    rdi,rbp
  40525e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  405263:	mov    rbx,rax
  405266:	jmp    40528f <__sprintf_chk@plt+0x13f>
  405268:	cmp    DWORD PTR [rsp+0x38],0x0
  40526d:	mov    r15,rax
  405270:	je     4052a7 <__sprintf_chk@plt+0x157>
  405272:	mov    rdi,QWORD PTR [rsp+0x8]
  405277:	mov    ecx,0x8
  40527c:	mov    rdx,rbp
  40527f:	mov    rsi,r15
  405282:	call   41b920 <flatcc_json_parser_set_error@@Base>
  405287:	cmp    rbp,rax
  40528a:	jne    4052ac <__sprintf_chk@plt+0x15c>
  40528c:	mov    rbx,rbp
  40528f:	mov    rcx,QWORD PTR [rsp+0x48]
  405294:	xor    rcx,QWORD PTR fs:0x28
  40529d:	mov    rax,rbx
  4052a0:	je     4052c4 <__sprintf_chk@plt+0x174>
  4052a2:	call   405070 <__stack_chk_fail@plt>
  4052a7:	mov    r13,QWORD PTR [rsp+0x40]
  4052ac:	add    QWORD PTR [r12],r13
  4052b0:	cmp    DWORD PTR [rsp+0x3c],0x0
  4052b5:	je     4052bf <__sprintf_chk@plt+0x16f>
  4052b7:	mov    r14,r15
  4052ba:	jmp    405213 <__sprintf_chk@plt+0xc3>
  4052bf:	mov    rbx,r15
  4052c2:	jmp    40528f <__sprintf_chk@plt+0x13f>
  4052c4:	add    rsp,0x58
  4052c8:	pop    rbx
  4052c9:	pop    rbp
  4052ca:	pop    r12
  4052cc:	pop    r13
  4052ce:	pop    r14
  4052d0:	pop    r15
  4052d2:	ret    
  4052d3:	lea    rcx,[rip+0x29b16]        # 42edf0 <_IO_stdin_used@@Base+0x3df0>
  4052da:	lea    rsi,[rip+0x2904f]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4052e1:	lea    rdi,[rip+0x293df]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  4052e8:	sub    rsp,0x8
  4052ec:	mov    edx,0x134
  4052f1:	call   405080 <__assert_fail@plt>
  4052f6:	lea    rcx,[rip+0x29a83]        # 42ed80 <_IO_stdin_used@@Base+0x3d80>
  4052fd:	lea    rsi,[rip+0x2902c]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  405304:	lea    rdi,[rip+0x293bc]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  40530b:	sub    rsp,0x8
  40530f:	mov    edx,0x2a1
  405314:	call   405080 <__assert_fail@plt>
  405319:	lea    rcx,[rip+0x29a50]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  405320:	lea    rsi,[rip+0x29009]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  405327:	lea    rdi,[rip+0x29399]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  40532e:	sub    rsp,0x8
  405332:	mov    edx,0x28b
  405337:	call   405080 <__assert_fail@plt>
  40533c:	lea    rcx,[rip+0x2998d]        # 42ecd0 <_IO_stdin_used@@Base+0x3cd0>
  405343:	lea    rsi,[rip+0x28fe6]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  40534a:	lea    rdi,[rip+0x2934f]        # 42e6a0 <_IO_stdin_used@@Base+0x36a0>
  405351:	sub    rsp,0x8
  405355:	mov    edx,0x37c
  40535a:	call   405080 <__assert_fail@plt>
  40535f:	nop

0000000000405360 <main@@Base>:
  405360:	push   rbx
  405361:	xor    eax,eax
  405363:	call   414420 <edge_case_tests@@Base>
  405368:	mov    ebx,eax
  40536a:	xor    eax,eax
  40536c:	call   4145d0 <error_case_tests@@Base>
  405371:	or     ebx,eax
  405373:	xor    eax,eax
  405375:	call   414a70 <union_vector_tests@@Base>
  40537a:	or     ebx,eax
  40537c:	xor    eax,eax
  40537e:	call   4147d0 <base64_tests@@Base>
  405383:	or     ebx,eax
  405385:	xor    eax,eax
  405387:	call   414930 <mixed_type_union_tests@@Base>
  40538c:	sub    rsp,0x8
  405390:	lea    rdx,[rip+0x262af]        # 42b646 <_IO_stdin_used@@Base+0x646>
  405397:	lea    rsi,[rip+0x26335]        # 42b6d3 <_IO_stdin_used@@Base+0x6d3>
  40539e:	push   0x20d
  4053a3:	lea    rdi,[rip+0x33a36]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4053aa:	xor    r9d,r9d
  4053ad:	xor    r8d,r8d
  4053b0:	xor    ecx,ecx
  4053b2:	or     ebx,eax
  4053b4:	call   413ee0 <test_json@@Base>
  4053b9:	lea    rdx,[rip+0x27f80]        # 42d340 <_IO_stdin_used@@Base+0x2340>
  4053c0:	lea    rsi,[rip+0x27fa1]        # 42d368 <_IO_stdin_used@@Base+0x2368>
  4053c7:	lea    rdi,[rip+0x33a12]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4053ce:	xor    r9d,r9d
  4053d1:	xor    r8d,r8d
  4053d4:	xor    ecx,ecx
  4053d6:	or     ebx,eax
  4053d8:	mov    DWORD PTR [rsp],0x210
  4053df:	call   413ee0 <test_json@@Base>
  4053e4:	lea    rdx,[rip+0x27fa5]        # 42d390 <_IO_stdin_used@@Base+0x2390>
  4053eb:	lea    rsi,[rip+0x27fc6]        # 42d3b8 <_IO_stdin_used@@Base+0x23b8>
  4053f2:	lea    rdi,[rip+0x339e7]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4053f9:	xor    r9d,r9d
  4053fc:	xor    r8d,r8d
  4053ff:	xor    ecx,ecx
  405401:	or     ebx,eax
  405403:	mov    DWORD PTR [rsp],0x213
  40540a:	call   413ee0 <test_json@@Base>
  40540f:	lea    rdx,[rip+0x27fca]        # 42d3e0 <_IO_stdin_used@@Base+0x23e0>
  405416:	lea    rsi,[rip+0x27ff3]        # 42d410 <_IO_stdin_used@@Base+0x2410>
  40541d:	lea    rdi,[rip+0x339bc]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405424:	or     ebx,eax
  405426:	xor    r9d,r9d
  405429:	xor    r8d,r8d
  40542c:	xor    ecx,ecx
  40542e:	mov    DWORD PTR [rsp],0x216
  405435:	call   413ee0 <test_json@@Base>
  40543a:	lea    rdx,[rip+0x27f9f]        # 42d3e0 <_IO_stdin_used@@Base+0x23e0>
  405441:	lea    rsi,[rip+0x28000]        # 42d448 <_IO_stdin_used@@Base+0x2448>
  405448:	lea    rdi,[rip+0x33991]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40544f:	xor    r9d,r9d
  405452:	xor    r8d,r8d
  405455:	xor    ecx,ecx
  405457:	or     ebx,eax
  405459:	mov    DWORD PTR [rsp],0x219
  405460:	call   413ee0 <test_json@@Base>
  405465:	lea    rdx,[rip+0x27ed4]        # 42d340 <_IO_stdin_used@@Base+0x2340>
  40546c:	lea    rsi,[rip+0x28015]        # 42d488 <_IO_stdin_used@@Base+0x2488>
  405473:	lea    rdi,[rip+0x33966]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40547a:	xor    r9d,r9d
  40547d:	xor    r8d,r8d
  405480:	xor    ecx,ecx
  405482:	or     ebx,eax
  405484:	mov    DWORD PTR [rsp],0x21c
  40548b:	call   413ee0 <test_json@@Base>
  405490:	lea    rdx,[rip+0x27ef9]        # 42d390 <_IO_stdin_used@@Base+0x2390>
  405497:	lea    rsi,[rip+0x28012]        # 42d4b0 <_IO_stdin_used@@Base+0x24b0>
  40549e:	lea    rdi,[rip+0x3393b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4054a5:	xor    r9d,r9d
  4054a8:	xor    r8d,r8d
  4054ab:	xor    ecx,ecx
  4054ad:	or     ebx,eax
  4054af:	mov    DWORD PTR [rsp],0x21f
  4054b6:	call   413ee0 <test_json@@Base>
  4054bb:	lea    rdx,[rip+0x26184]        # 42b646 <_IO_stdin_used@@Base+0x646>
  4054c2:	lea    rsi,[rip+0x28017]        # 42d4e0 <_IO_stdin_used@@Base+0x24e0>
  4054c9:	lea    rdi,[rip+0x33910]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4054d0:	xor    r9d,r9d
  4054d3:	xor    r8d,r8d
  4054d6:	xor    ecx,ecx
  4054d8:	or     ebx,eax
  4054da:	mov    DWORD PTR [rsp],0x223
  4054e1:	call   413ee0 <test_json@@Base>
  4054e6:	lea    rdx,[rip+0x26159]        # 42b646 <_IO_stdin_used@@Base+0x646>
  4054ed:	lea    rsi,[rip+0x2647c]        # 42b970 <_IO_stdin_used@@Base+0x970>
  4054f4:	lea    rdi,[rip+0x338e5]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4054fb:	xor    r9d,r9d
  4054fe:	xor    r8d,r8d
  405501:	xor    ecx,ecx
  405503:	or     ebx,eax
  405505:	mov    DWORD PTR [rsp],0x227
  40550c:	call   413ee0 <test_json@@Base>
  405511:	lea    rdx,[rip+0x27e28]        # 42d340 <_IO_stdin_used@@Base+0x2340>
  405518:	lea    rsi,[rip+0x27fe9]        # 42d508 <_IO_stdin_used@@Base+0x2508>
  40551f:	lea    rdi,[rip+0x338ba]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405526:	xor    r9d,r9d
  405529:	xor    r8d,r8d
  40552c:	xor    ecx,ecx
  40552e:	mov    DWORD PTR [rsp],0x259
  405535:	or     ebx,eax
  405537:	call   413ee0 <test_json@@Base>
  40553c:	lea    rdx,[rip+0x27e4d]        # 42d390 <_IO_stdin_used@@Base+0x2390>
  405543:	lea    rsi,[rip+0x27fe6]        # 42d530 <_IO_stdin_used@@Base+0x2530>
  40554a:	lea    rdi,[rip+0x3388f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405551:	or     ebx,eax
  405553:	xor    r9d,r9d
  405556:	xor    r8d,r8d
  405559:	xor    ecx,ecx
  40555b:	mov    DWORD PTR [rsp],0x25c
  405562:	call   413ee0 <test_json@@Base>
  405567:	lea    rdx,[rip+0x27fea]        # 42d558 <_IO_stdin_used@@Base+0x2558>
  40556e:	lea    rsi,[rip+0x2800b]        # 42d580 <_IO_stdin_used@@Base+0x2580>
  405575:	lea    rdi,[rip+0x33864]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40557c:	xor    r9d,r9d
  40557f:	xor    r8d,r8d
  405582:	xor    ecx,ecx
  405584:	or     ebx,eax
  405586:	mov    DWORD PTR [rsp],0x25f
  40558d:	call   413ee0 <test_json@@Base>
  405592:	lea    rdx,[rip+0x27e47]        # 42d3e0 <_IO_stdin_used@@Base+0x23e0>
  405599:	lea    rsi,[rip+0x28008]        # 42d5a8 <_IO_stdin_used@@Base+0x25a8>
  4055a0:	lea    rdi,[rip+0x33839]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4055a7:	xor    r9d,r9d
  4055aa:	xor    r8d,r8d
  4055ad:	xor    ecx,ecx
  4055af:	or     ebx,eax
  4055b1:	mov    DWORD PTR [rsp],0x262
  4055b8:	call   413ee0 <test_json@@Base>
  4055bd:	lea    rdx,[rip+0x26126]        # 42b6ea <_IO_stdin_used@@Base+0x6ea>
  4055c4:	lea    rsi,[rip+0x28005]        # 42d5d0 <_IO_stdin_used@@Base+0x25d0>
  4055cb:	lea    rdi,[rip+0x3380e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4055d2:	xor    r9d,r9d
  4055d5:	xor    r8d,r8d
  4055d8:	xor    ecx,ecx
  4055da:	or     ebx,eax
  4055dc:	mov    DWORD PTR [rsp],0x265
  4055e3:	call   413ee0 <test_json@@Base>
  4055e8:	lea    rdx,[rip+0x26119]        # 42b708 <_IO_stdin_used@@Base+0x708>
  4055ef:	lea    rsi,[rip+0x28002]        # 42d5f8 <_IO_stdin_used@@Base+0x25f8>
  4055f6:	lea    rdi,[rip+0x337e3]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4055fd:	xor    r9d,r9d
  405600:	xor    r8d,r8d
  405603:	xor    ecx,ecx
  405605:	or     ebx,eax
  405607:	mov    DWORD PTR [rsp],0x268
  40560e:	call   413ee0 <test_json@@Base>
  405613:	lea    rdx,[rip+0x2610c]        # 42b726 <_IO_stdin_used@@Base+0x726>
  40561a:	lea    rsi,[rip+0x27fff]        # 42d620 <_IO_stdin_used@@Base+0x2620>
  405621:	lea    rdi,[rip+0x337b8]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405628:	xor    r9d,r9d
  40562b:	xor    ecx,ecx
  40562d:	xor    r8d,r8d
  405630:	or     ebx,eax
  405632:	mov    DWORD PTR [rsp],0x26b
  405639:	call   413ee0 <test_json@@Base>
  40563e:	lea    rdx,[rip+0x27cfb]        # 42d340 <_IO_stdin_used@@Base+0x2340>
  405645:	lea    rsi,[rip+0x27ffc]        # 42d648 <_IO_stdin_used@@Base+0x2648>
  40564c:	lea    rdi,[rip+0x3378d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405653:	or     ebx,eax
  405655:	xor    r9d,r9d
  405658:	xor    r8d,r8d
  40565b:	xor    ecx,ecx
  40565d:	mov    DWORD PTR [rsp],0x26e
  405664:	call   413ee0 <test_json@@Base>
  405669:	lea    rdx,[rip+0x27cd0]        # 42d340 <_IO_stdin_used@@Base+0x2340>
  405670:	lea    rsi,[rip+0x28001]        # 42d678 <_IO_stdin_used@@Base+0x2678>
  405677:	lea    rdi,[rip+0x33762]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40567e:	xor    r9d,r9d
  405681:	xor    r8d,r8d
  405684:	xor    ecx,ecx
  405686:	or     ebx,eax
  405688:	mov    DWORD PTR [rsp],0x271
  40568f:	call   413ee0 <test_json@@Base>
  405694:	lea    rdx,[rip+0x260a8]        # 42b743 <_IO_stdin_used@@Base+0x743>
  40569b:	lea    rsi,[rip+0x28016]        # 42d6b8 <_IO_stdin_used@@Base+0x26b8>
  4056a2:	lea    rdi,[rip+0x33737]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4056a9:	xor    r9d,r9d
  4056ac:	xor    r8d,r8d
  4056af:	xor    ecx,ecx
  4056b1:	or     ebx,eax
  4056b3:	mov    DWORD PTR [rsp],0x274
  4056ba:	call   413ee0 <test_json@@Base>
  4056bf:	lea    rdx,[rip+0x2607d]        # 42b743 <_IO_stdin_used@@Base+0x743>
  4056c6:	lea    rsi,[rip+0x27feb]        # 42d6b8 <_IO_stdin_used@@Base+0x26b8>
  4056cd:	lea    rdi,[rip+0x3370c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4056d4:	xor    r9d,r9d
  4056d7:	xor    r8d,r8d
  4056da:	xor    ecx,ecx
  4056dc:	or     ebx,eax
  4056de:	mov    DWORD PTR [rsp],0x277
  4056e5:	call   413ee0 <test_json@@Base>
  4056ea:	lea    rdx,[rip+0x27ff7]        # 42d6e8 <_IO_stdin_used@@Base+0x26e8>
  4056f1:	lea    rsi,[rip+0x28038]        # 42d730 <_IO_stdin_used@@Base+0x2730>
  4056f8:	lea    rdi,[rip+0x336e1]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4056ff:	xor    r9d,r9d
  405702:	xor    r8d,r8d
  405705:	xor    ecx,ecx
  405707:	or     ebx,eax
  405709:	mov    DWORD PTR [rsp],0x27a
  405710:	call   413ee0 <test_json@@Base>
  405715:	lea    rdx,[rip+0x2806c]        # 42d788 <_IO_stdin_used@@Base+0x2788>
  40571c:	lea    rsi,[rip+0x280b5]        # 42d7d8 <_IO_stdin_used@@Base+0x27d8>
  405723:	lea    rdi,[rip+0x336b6]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40572a:	xor    r9d,r9d
  40572d:	xor    r8d,r8d
  405730:	xor    ecx,ecx
  405732:	or     ebx,eax
  405734:	mov    DWORD PTR [rsp],0x27e
  40573b:	call   413ee0 <test_json@@Base>
  405740:	lea    rdx,[rip+0x280e9]        # 42d830 <_IO_stdin_used@@Base+0x2830>
  405747:	lea    rsi,[rip+0x2814a]        # 42d898 <_IO_stdin_used@@Base+0x2898>
  40574e:	lea    rdi,[rip+0x3368b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405755:	xor    r9d,r9d
  405758:	xor    r8d,r8d
  40575b:	xor    ecx,ecx
  40575d:	mov    DWORD PTR [rsp],0x282
  405764:	or     ebx,eax
  405766:	call   413ee0 <test_json@@Base>
  40576b:	lea    rdx,[rip+0x25ed4]        # 42b646 <_IO_stdin_used@@Base+0x646>
  405772:	lea    rsi,[rip+0x2818f]        # 42d908 <_IO_stdin_used@@Base+0x2908>
  405779:	lea    rdi,[rip+0x33660]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405780:	xor    r9d,r9d
  405783:	xor    r8d,r8d
  405786:	xor    ecx,ecx
  405788:	or     ebx,eax
  40578a:	mov    DWORD PTR [rsp],0x286
  405791:	call   413ee0 <test_json@@Base>
  405796:	lea    rdx,[rip+0x25ea9]        # 42b646 <_IO_stdin_used@@Base+0x646>
  40579d:	lea    rsi,[rip+0x28194]        # 42d938 <_IO_stdin_used@@Base+0x2938>
  4057a4:	lea    rdi,[rip+0x33635]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4057ab:	xor    r9d,r9d
  4057ae:	xor    r8d,r8d
  4057b1:	xor    ecx,ecx
  4057b3:	or     ebx,eax
  4057b5:	mov    DWORD PTR [rsp],0x289
  4057bc:	call   413ee0 <test_json@@Base>
  4057c1:	lea    rdx,[rip+0x28198]        # 42d960 <_IO_stdin_used@@Base+0x2960>
  4057c8:	lea    rsi,[rip+0x281f1]        # 42d9c0 <_IO_stdin_used@@Base+0x29c0>
  4057cf:	lea    rdi,[rip+0x3360a]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4057d6:	xor    r9d,r9d
  4057d9:	xor    r8d,r8d
  4057dc:	xor    ecx,ecx
  4057de:	or     ebx,eax
  4057e0:	mov    DWORD PTR [rsp],0x2cc
  4057e7:	call   413ee0 <test_json@@Base>
  4057ec:	lea    rdx,[rip+0x2823d]        # 42da30 <_IO_stdin_used@@Base+0x2a30>
  4057f3:	lea    rsi,[rip+0x28266]        # 42da60 <_IO_stdin_used@@Base+0x2a60>
  4057fa:	lea    rdi,[rip+0x335df]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405801:	xor    r9d,r9d
  405804:	xor    r8d,r8d
  405807:	xor    ecx,ecx
  405809:	or     ebx,eax
  40580b:	mov    DWORD PTR [rsp],0x2db
  405812:	call   413ee0 <test_json@@Base>
  405817:	lea    rdx,[rip+0x25f3f]        # 42b75d <_IO_stdin_used@@Base+0x75d>
  40581e:	lea    rsi,[rip+0x25f4a]        # 42b76f <_IO_stdin_used@@Base+0x76f>
  405825:	lea    rdi,[rip+0x335b4]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40582c:	xor    r9d,r9d
  40582f:	xor    r8d,r8d
  405832:	xor    ecx,ecx
  405834:	or     ebx,eax
  405836:	mov    DWORD PTR [rsp],0x2de
  40583d:	call   413ee0 <test_json@@Base>
  405842:	lea    rdx,[rip+0x28257]        # 42daa0 <_IO_stdin_used@@Base+0x2aa0>
  405849:	lea    rsi,[rip+0x28298]        # 42dae8 <_IO_stdin_used@@Base+0x2ae8>
  405850:	lea    rdi,[rip+0x33589]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405857:	xor    r8d,r8d
  40585a:	xor    ecx,ecx
  40585c:	xor    r9d,r9d
  40585f:	or     ebx,eax
  405861:	mov    DWORD PTR [rsp],0x2e2
  405868:	call   413ee0 <test_json@@Base>
  40586d:	lea    rdx,[rip+0x2822c]        # 42daa0 <_IO_stdin_used@@Base+0x2aa0>
  405874:	lea    rsi,[rip+0x282b5]        # 42db30 <_IO_stdin_used@@Base+0x2b30>
  40587b:	lea    rdi,[rip+0x3355e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405882:	or     ebx,eax
  405884:	xor    r9d,r9d
  405887:	xor    r8d,r8d
  40588a:	xor    ecx,ecx
  40588c:	mov    DWORD PTR [rsp],0x2ee
  405893:	call   413ee0 <test_json@@Base>
  405898:	lea    rdx,[rip+0x28331]        # 42dbd0 <_IO_stdin_used@@Base+0x2bd0>
  40589f:	lea    rsi,[rip+0x28352]        # 42dbf8 <_IO_stdin_used@@Base+0x2bf8>
  4058a6:	lea    rdi,[rip+0x33533]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4058ad:	xor    r9d,r9d
  4058b0:	xor    r8d,r8d
  4058b3:	xor    ecx,ecx
  4058b5:	or     ebx,eax
  4058b7:	mov    DWORD PTR [rsp],0x2fe
  4058be:	call   413ee0 <test_json@@Base>
  4058c3:	lea    rdx,[rip+0x28356]        # 42dc20 <_IO_stdin_used@@Base+0x2c20>
  4058ca:	lea    rsi,[rip+0x2837f]        # 42dc50 <_IO_stdin_used@@Base+0x2c50>
  4058d1:	lea    rdi,[rip+0x33508]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4058d8:	xor    r9d,r9d
  4058db:	xor    r8d,r8d
  4058de:	xor    ecx,ecx
  4058e0:	or     ebx,eax
  4058e2:	mov    DWORD PTR [rsp],0x302
  4058e9:	call   413ee0 <test_json@@Base>
  4058ee:	lea    rdx,[rip+0x2838b]        # 42dc80 <_IO_stdin_used@@Base+0x2c80>
  4058f5:	lea    rsi,[rip+0x283f4]        # 42dcf0 <_IO_stdin_used@@Base+0x2cf0>
  4058fc:	lea    rdi,[rip+0x334dd]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405903:	xor    r9d,r9d
  405906:	xor    r8d,r8d
  405909:	xor    ecx,ecx
  40590b:	or     ebx,eax
  40590d:	mov    DWORD PTR [rsp],0x308
  405914:	call   413ee0 <test_json@@Base>
  405919:	lea    rdx,[rip+0x25d26]        # 42b646 <_IO_stdin_used@@Base+0x646>
  405920:	lea    rsi,[rip+0x28449]        # 42dd70 <_IO_stdin_used@@Base+0x2d70>
  405927:	lea    rdi,[rip+0x334b2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  40592e:	xor    r9d,r9d
  405931:	xor    r8d,r8d
  405934:	xor    ecx,ecx
  405936:	or     ebx,eax
  405938:	mov    DWORD PTR [rsp],0x30d
  40593f:	call   413ee0 <test_json@@Base>
  405944:	lea    rdx,[rip+0x2849d]        # 42dde8 <_IO_stdin_used@@Base+0x2de8>
  40594b:	lea    rsi,[rip+0x28506]        # 42de58 <_IO_stdin_used@@Base+0x2e58>
  405952:	lea    rdi,[rip+0x33487]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405959:	xor    r9d,r9d
  40595c:	xor    r8d,r8d
  40595f:	xor    ecx,ecx
  405961:	or     ebx,eax
  405963:	mov    DWORD PTR [rsp],0x312
  40596a:	call   413ee0 <test_json@@Base>
  40596f:	lea    rdx,[rip+0x28562]        # 42ded8 <_IO_stdin_used@@Base+0x2ed8>
  405976:	lea    rsi,[rip+0x285db]        # 42df58 <_IO_stdin_used@@Base+0x2f58>
  40597d:	lea    rdi,[rip+0x3345c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405984:	or     ebx,eax
  405986:	xor    r9d,r9d
  405989:	xor    r8d,r8d
  40598c:	xor    ecx,ecx
  40598e:	mov    DWORD PTR [rsp],0x317
  405995:	call   413ee0 <test_json@@Base>
  40599a:	lea    rdx,[rip+0x28647]        # 42dfe8 <_IO_stdin_used@@Base+0x2fe8>
  4059a1:	lea    rsi,[rip+0x286b0]        # 42e058 <_IO_stdin_used@@Base+0x3058>
  4059a8:	lea    rdi,[rip+0x33431]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4059af:	xor    r9d,r9d
  4059b2:	xor    r8d,r8d
  4059b5:	xor    ecx,ecx
  4059b7:	or     ebx,eax
  4059b9:	mov    DWORD PTR [rsp],0x31c
  4059c0:	call   413ee0 <test_json@@Base>
  4059c5:	lea    rdx,[rip+0x2870c]        # 42e0d8 <_IO_stdin_used@@Base+0x30d8>
  4059cc:	lea    rsi,[rip+0x28785]        # 42e158 <_IO_stdin_used@@Base+0x3158>
  4059d3:	lea    rdi,[rip+0x33406]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4059da:	xor    r9d,r9d
  4059dd:	xor    r8d,r8d
  4059e0:	xor    ecx,ecx
  4059e2:	or     ebx,eax
  4059e4:	mov    DWORD PTR [rsp],0x321
  4059eb:	call   413ee0 <test_json@@Base>
  4059f0:	lea    rdx,[rip+0x287f1]        # 42e1e8 <_IO_stdin_used@@Base+0x31e8>
  4059f7:	lea    rsi,[rip+0x28872]        # 42e270 <_IO_stdin_used@@Base+0x3270>
  4059fe:	lea    rdi,[rip+0x333db]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  405a05:	or     ebx,eax
  405a07:	xor    ecx,ecx
  405a09:	xor    r9d,r9d
  405a0c:	xor    r8d,r8d
  405a0f:	mov    DWORD PTR [rsp],0x326
  405a16:	call   413ee0 <test_json@@Base>
  405a1b:	or     ebx,eax
  405a1d:	setne  al
  405a20:	movzx  eax,al
  405a23:	pop    rdx
  405a24:	neg    eax
  405a26:	pop    rcx
  405a27:	pop    rbx
  405a28:	ret    
  405a29:	nop    DWORD PTR [rax+0x0]

0000000000405a30 <_start@@Base>:
  405a30:	endbr64 
  405a34:	xor    ebp,ebp
  405a36:	mov    r9,rdx
  405a39:	pop    rsi
  405a3a:	mov    rdx,rsp
  405a3d:	and    rsp,0xfffffffffffffff0
  405a41:	push   rax
  405a42:	push   rsp
  405a43:	mov    r8,0x42a180
  405a4a:	mov    rcx,0x42a110
  405a51:	mov    rdi,0x405360
  405a58:	call   QWORD PTR [rip+0x3357a]        # 438fd8 <__libc_start_main@GLIBC_2.2.5>
  405a5e:	hlt    
  405a5f:	nop
  405a60:	endbr64 
  405a64:	ret    
  405a65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a6f:	nop
  405a70:	mov    eax,0x439857
  405a75:	push   rbp
  405a76:	sub    rax,0x439850
  405a7c:	cmp    rax,0xe
  405a80:	mov    rbp,rsp
  405a83:	jbe    405aa0 <_start@@Base+0x70>
  405a85:	mov    eax,0x0
  405a8a:	test   rax,rax
  405a8d:	je     405aa0 <_start@@Base+0x70>
  405a8f:	pop    rbp
  405a90:	mov    edi,0x439850
  405a95:	jmp    rax
  405a97:	nop    WORD PTR [rax+rax*1+0x0]
  405aa0:	pop    rbp
  405aa1:	ret    
  405aa2:	nop    DWORD PTR [rax+0x0]
  405aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ab0:	mov    esi,0x439850
  405ab5:	push   rbp
  405ab6:	sub    rsi,0x439850
  405abd:	sar    rsi,0x3
  405ac1:	mov    rbp,rsp
  405ac4:	mov    rax,rsi
  405ac7:	shr    rax,0x3f
  405acb:	add    rsi,rax
  405ace:	sar    rsi,1
  405ad1:	je     405ae8 <_start@@Base+0xb8>
  405ad3:	mov    eax,0x0
  405ad8:	test   rax,rax
  405adb:	je     405ae8 <_start@@Base+0xb8>
  405add:	pop    rbp
  405ade:	mov    edi,0x439850
  405ae3:	jmp    rax
  405ae5:	nop    DWORD PTR [rax]
  405ae8:	pop    rbp
  405ae9:	ret    
  405aea:	nop    WORD PTR [rax+rax*1+0x0]
  405af0:	cmp    BYTE PTR [rip+0x33d59],0x0        # 439850 <__bss_start@@Base>
  405af7:	jne    405b0a <_start@@Base+0xda>
  405af9:	push   rbp
  405afa:	mov    rbp,rsp
  405afd:	call   405a70 <_start@@Base+0x40>
  405b02:	pop    rbp
  405b03:	mov    BYTE PTR [rip+0x33d46],0x1        # 439850 <__bss_start@@Base>
  405b0a:	repz ret 
  405b0c:	nop    DWORD PTR [rax+0x0]
  405b10:	mov    edi,0x438d98
  405b15:	cmp    QWORD PTR [rdi],0x0
  405b19:	jne    405b20 <_start@@Base+0xf0>
  405b1b:	jmp    405ab0 <_start@@Base+0x80>
  405b1d:	nop    DWORD PTR [rax]
  405b20:	mov    eax,0x0
  405b25:	test   rax,rax
  405b28:	je     405b1b <_start@@Base+0xeb>
  405b2a:	push   rbp
  405b2b:	mov    rbp,rsp
  405b2e:	call   rax
  405b30:	pop    rbp
  405b31:	jmp    405ab0 <_start@@Base+0x80>
  405b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b40:	sub    rsi,rdi
  405b43:	cmp    rsi,0x8
  405b47:	jbe    405bb8 <_start@@Base+0x188>
  405b49:	movsx  rax,BYTE PTR [rdi+0x7]
  405b4e:	movsx  rdx,BYTE PTR [rdi+0x6]
  405b53:	mov    rcx,rdx
  405b56:	shl    rcx,0x8
  405b5a:	or     rcx,rax
  405b5d:	movsx  rdx,BYTE PTR [rdi+0x5]
  405b62:	mov    rax,rdx
  405b65:	shl    rax,0x10
  405b69:	or     rcx,rax
  405b6c:	movsx  rdx,BYTE PTR [rdi+0x4]
  405b71:	mov    rax,rdx
  405b74:	shl    rax,0x18
  405b78:	or     rax,rcx
  405b7b:	movsx  rdx,BYTE PTR [rdi+0x3]
  405b80:	shl    rdx,0x20
  405b84:	or     rax,rdx
  405b87:	movsx  rdx,BYTE PTR [rdi+0x2]
  405b8c:	mov    rcx,rdx
  405b8f:	shl    rcx,0x28
  405b93:	or     rcx,rax
  405b96:	movsx  rdx,BYTE PTR [rdi+0x1]
  405b9b:	mov    rax,rdx
  405b9e:	shl    rax,0x30
  405ba2:	or     rcx,rax
  405ba5:	movsx  rdx,BYTE PTR [rdi]
  405ba9:	mov    rax,rdx
  405bac:	shl    rax,0x38
  405bb0:	or     rax,rcx
  405bb3:	ret    
  405bb4:	nop    DWORD PTR [rax+0x0]
  405bb8:	lea    rdx,[rip+0x25445]        # 42b004 <_IO_stdin_used@@Base+0x4>
  405bbf:	movsxd rax,DWORD PTR [rdx+rsi*4]
  405bc3:	add    rax,rdx
  405bc6:	jmp    rax
  405bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bd0:	xor    eax,eax
  405bd2:	jmp    405b4e <_start@@Base+0x11e>
  405bd7:	nop    WORD PTR [rax+rax*1+0x0]
  405be0:	xor    ecx,ecx
  405be2:	jmp    405b5d <_start@@Base+0x12d>
  405be7:	nop    WORD PTR [rax+rax*1+0x0]
  405bf0:	xor    ecx,ecx
  405bf2:	jmp    405b6c <_start@@Base+0x13c>
  405bf7:	nop    WORD PTR [rax+rax*1+0x0]
  405c00:	xor    eax,eax
  405c02:	jmp    405b7b <_start@@Base+0x14b>
  405c07:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	xor    eax,eax
  405c12:	jmp    405b87 <_start@@Base+0x157>
  405c17:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	xor    ecx,ecx
  405c22:	jmp    405b96 <_start@@Base+0x166>
  405c27:	nop    WORD PTR [rax+rax*1+0x0]
  405c30:	xor    ecx,ecx
  405c32:	jmp    405ba5 <_start@@Base+0x175>
  405c37:	nop    WORD PTR [rax+rax*1+0x0]
  405c40:	xor    eax,eax
  405c42:	ret    
  405c43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405c4e:	xchg   ax,ax
  405c50:	xor    eax,eax
  405c52:	cmp    dil,0x4
  405c56:	setbe  al
  405c59:	ret    
  405c5a:	nop    WORD PTR [rax+rax*1+0x0]
  405c60:	cmp    dil,0xb
  405c64:	ja     405c80 <_start@@Base+0x250>
  405c66:	cmp    dil,0x8
  405c6a:	jae    405c86 <_start@@Base+0x256>
  405c6c:	test   dil,dil
  405c6f:	je     405c86 <_start@@Base+0x256>
  405c71:	cmp    dil,0x2
  405c75:	je     405c86 <_start@@Base+0x256>
  405c77:	xor    eax,eax
  405c79:	ret    
  405c7a:	nop    WORD PTR [rax+rax*1+0x0]
  405c80:	cmp    dil,0xff
  405c84:	jne    405c77 <_start@@Base+0x247>
  405c86:	mov    eax,0x1
  405c8b:	ret    
  405c8c:	nop    DWORD PTR [rax+0x0]
  405c90:	repz ret 
  405c92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405c9d:	nop    DWORD PTR [rax]
  405ca0:	xor    eax,eax
  405ca2:	ret    
  405ca3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405cae:	xchg   ax,ax
  405cb0:	mov    ecx,0x4
  405cb5:	mov    edx,0x4
  405cba:	xor    esi,esi
  405cbc:	jmp    419450 <flatcc_verify_field@@Base>
  405cc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405ccc:	nop    DWORD PTR [rax+0x0]
  405cd0:	push   rbp
  405cd1:	push   rbx
  405cd2:	lea    r9,[rip+0x137]        # 405e10 <_start@@Base+0x3e0>
  405cd9:	lea    rcx,[rip+0x25560]        # 42b240 <_IO_stdin_used@@Base+0x240>
  405ce0:	mov    r8d,0x15
  405ce6:	xor    edx,edx
  405ce8:	sub    rsp,0x8
  405cec:	mov    rbx,rdi
  405cef:	mov    rbp,rsi
  405cf2:	call   428e60 <flatcc_json_printer_table_field@@Base>
  405cf7:	lea    r9,[rip+0xc2]        # 405dc0 <_start@@Base+0x390>
  405cfe:	lea    rcx,[rip+0x25551]        # 42b256 <_IO_stdin_used@@Base+0x256>
  405d05:	mov    rsi,rbp
  405d08:	mov    rdi,rbx
  405d0b:	mov    r8d,0x16
  405d11:	mov    edx,0x1
  405d16:	call   428e60 <flatcc_json_printer_table_field@@Base>
  405d1b:	add    rsp,0x8
  405d1f:	mov    rsi,rbp
  405d22:	mov    rdi,rbx
  405d25:	pop    rbx
  405d26:	pop    rbp
  405d27:	lea    r9,[rip+0x42]        # 405d70 <_start@@Base+0x340>
  405d2e:	lea    rcx,[rip+0x25538]        # 42b26d <_IO_stdin_used@@Base+0x26d>
  405d35:	mov    r8d,0x16
  405d3b:	mov    edx,0x2
  405d40:	jmp    428e60 <flatcc_json_printer_table_field@@Base>
  405d45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405d50:	lea    rcx,[rip+0x2552d]        # 42b284 <_IO_stdin_used@@Base+0x284>
  405d57:	xor    r9d,r9d
  405d5a:	mov    r8d,0x13
  405d60:	xor    edx,edx
  405d62:	jmp    4215f0 <flatcc_json_printer_int32_field@@Base>
  405d67:	nop    WORD PTR [rax+rax*1+0x0]
  405d70:	push   rbp
  405d71:	push   rbx
  405d72:	lea    rcx,[rip+0x2551f]        # 42b298 <_IO_stdin_used@@Base+0x298>
  405d79:	xor    r9d,r9d
  405d7c:	mov    r8d,0xf
  405d82:	xor    edx,edx
  405d84:	sub    rsp,0x8
  405d88:	mov    rbx,rdi
  405d8b:	mov    rbp,rsi
  405d8e:	call   421790 <flatcc_json_printer_int64_field@@Base>
  405d93:	add    rsp,0x8
  405d97:	mov    rsi,rbp
  405d9a:	mov    rdi,rbx
  405d9d:	pop    rbx
  405d9e:	pop    rbp
  405d9f:	lea    rcx,[rip+0x25502]        # 42b2a8 <_IO_stdin_used@@Base+0x2a8>
  405da6:	xor    r9d,r9d
  405da9:	mov    r8d,0x15
  405daf:	mov    edx,0x1
  405db4:	jmp    420fa0 <flatcc_json_printer_uint32_field@@Base>
  405db9:	nop    DWORD PTR [rax+0x0]
  405dc0:	push   rbp
  405dc1:	push   rbx
  405dc2:	lea    rcx,[rip+0x254cf]        # 42b298 <_IO_stdin_used@@Base+0x298>
  405dc9:	xor    r9d,r9d
  405dcc:	mov    r8d,0xf
  405dd2:	xor    edx,edx
  405dd4:	sub    rsp,0x8
  405dd8:	mov    rbx,rdi
  405ddb:	mov    rbp,rsi
  405dde:	call   421790 <flatcc_json_printer_int64_field@@Base>
  405de3:	add    rsp,0x8
  405de7:	mov    rsi,rbp
  405dea:	mov    rdi,rbx
  405ded:	pop    rbx
  405dee:	pop    rbp
  405def:	lea    rcx,[rip+0x254c8]        # 42b2be <_IO_stdin_used@@Base+0x2be>
  405df6:	xor    r9d,r9d
  405df9:	mov    r8d,0x10
  405dff:	mov    edx,0x1
  405e04:	jmp    420fa0 <flatcc_json_printer_uint32_field@@Base>
  405e09:	nop    DWORD PTR [rax+0x0]
  405e10:	push   rbp
  405e11:	push   rbx
  405e12:	lea    rcx,[rip+0x254b6]        # 42b2cf <_IO_stdin_used@@Base+0x2cf>
  405e19:	mov    r8d,0x4
  405e1f:	xor    edx,edx
  405e21:	mov    rbx,rdi
  405e24:	sub    rsp,0x8
  405e28:	mov    rbp,rsi
  405e2b:	call   420830 <flatcc_json_printer_string_field@@Base>
  405e30:	lea    rcx,[rip+0x2549d]        # 42b2d4 <_IO_stdin_used@@Base+0x2d4>
  405e37:	xor    r9d,r9d
  405e3a:	mov    rsi,rbp
  405e3d:	mov    rdi,rbx
  405e40:	mov    r8d,0x9
  405e46:	mov    edx,0x1
  405e4b:	call   420fa0 <flatcc_json_printer_uint32_field@@Base>
  405e50:	lea    rcx,[rip+0x25487]        # 42b2de <_IO_stdin_used@@Base+0x2de>
  405e57:	mov    rsi,rbp
  405e5a:	mov    rdi,rbx
  405e5d:	mov    r8d,0x4
  405e63:	mov    edx,0x2
  405e68:	call   420830 <flatcc_json_printer_string_field@@Base>
  405e6d:	lea    rcx,[rip+0x2546f]        # 42b2e3 <_IO_stdin_used@@Base+0x2e3>
  405e74:	xor    r9d,r9d
  405e77:	mov    rsi,rbp
  405e7a:	mov    rdi,rbx
  405e7d:	mov    r8d,0x8
  405e83:	mov    edx,0x3
  405e88:	call   421790 <flatcc_json_printer_int64_field@@Base>
  405e8d:	lea    rcx,[rip+0x25458]        # 42b2ec <_IO_stdin_used@@Base+0x2ec>
  405e94:	mov    rsi,rbp
  405e97:	mov    rdi,rbx
  405e9a:	mov    r8d,0x4
  405ea0:	mov    edx,0x4
  405ea5:	call   420830 <flatcc_json_printer_string_field@@Base>
  405eaa:	lea    rcx,[rip+0x25440]        # 42b2f1 <_IO_stdin_used@@Base+0x2f1>
  405eb1:	mov    rsi,rbp
  405eb4:	mov    rdi,rbx
  405eb7:	xor    r9d,r9d
  405eba:	mov    r8d,0x8
  405ec0:	mov    edx,0x5
  405ec5:	call   421790 <flatcc_json_printer_int64_field@@Base>
  405eca:	lea    rcx,[rip+0x25429]        # 42b2fa <_IO_stdin_used@@Base+0x2fa>
  405ed1:	mov    rsi,rbp
  405ed4:	mov    rdi,rbx
  405ed7:	xor    r9d,r9d
  405eda:	mov    r8d,0x9
  405ee0:	mov    edx,0x6
  405ee5:	call   420fa0 <flatcc_json_printer_uint32_field@@Base>
  405eea:	lea    rcx,[rip+0x25413]        # 42b304 <_IO_stdin_used@@Base+0x304>
  405ef1:	mov    rsi,rbp
  405ef4:	mov    rdi,rbx
  405ef7:	xor    r9d,r9d
  405efa:	mov    r8d,0x8
  405f00:	mov    edx,0x7
  405f05:	call   421790 <flatcc_json_printer_int64_field@@Base>
  405f0a:	add    rsp,0x8
  405f0e:	mov    rsi,rbp
  405f11:	mov    rdi,rbx
  405f14:	pop    rbx
  405f15:	pop    rbp
  405f16:	lea    rcx,[rip+0x253f0]        # 42b30d <_IO_stdin_used@@Base+0x30d>
  405f1d:	xor    r9d,r9d
  405f20:	mov    r8d,0x9
  405f26:	mov    edx,0x8
  405f2b:	jmp    420fa0 <flatcc_json_printer_uint32_field@@Base>
  405f30:	push   r12
  405f32:	lea    r9,[rip+0xaf7]        # 406a30 <_start@@Base+0x1000>
  405f39:	push   rbp
  405f3a:	lea    rcx,[rip+0x253d6]        # 42b317 <_IO_stdin_used@@Base+0x317>
  405f41:	push   rbx
  405f42:	xor    edx,edx
  405f44:	mov    r8d,0x3
  405f4a:	mov    rbx,rdi
  405f4d:	mov    rbp,rsi
  405f50:	call   429780 <flatcc_json_printer_struct_field@@Base>
  405f55:	lea    rcx,[rip+0x253bf]        # 42b31b <_IO_stdin_used@@Base+0x31b>
  405f5c:	mov    rsi,rbp
  405f5f:	mov    rdi,rbx
  405f62:	mov    r9d,0x96
  405f68:	mov    r8d,0x4
  405f6e:	mov    edx,0x1
  405f73:	call   421440 <flatcc_json_printer_int16_field@@Base>
  405f78:	lea    rcx,[rip+0x253a1]        # 42b320 <_IO_stdin_used@@Base+0x320>
  405f7f:	mov    r9d,0x64
  405f85:	mov    rsi,rbp
  405f88:	mov    rdi,rbx
  405f8b:	mov    r8d,0x2
  405f91:	mov    edx,0x2
  405f96:	call   421440 <flatcc_json_printer_int16_field@@Base>
  405f9b:	lea    rcx,[rip+0x25381]        # 42b323 <_IO_stdin_used@@Base+0x323>
  405fa2:	mov    rsi,rbp
  405fa5:	mov    rdi,rbx
  405fa8:	mov    r8d,0x4
  405fae:	mov    edx,0x3
  405fb3:	lea    r12,[rip+0x556]        # 406510 <_start@@Base+0xae0>
  405fba:	call   420830 <flatcc_json_printer_string_field@@Base>
  405fbf:	lea    rcx,[rip+0x25362]        # 42b328 <_IO_stdin_used@@Base+0x328>
  405fc6:	mov    rsi,rbp
  405fc9:	mov    rdi,rbx
  405fcc:	mov    r8d,0x9
  405fd2:	mov    edx,0x5
  405fd7:	call   424d10 <flatcc_json_printer_uint8_vector_field@@Base>
  405fdc:	lea    rax,[rip+0x97d]        # 406960 <_start@@Base+0xf30>
  405fe3:	sub    rsp,0x8
  405fe7:	lea    rcx,[rip+0x25344]        # 42b332 <_IO_stdin_used@@Base+0x332>
  405fee:	mov    rsi,rbp
  405ff1:	mov    rdi,rbx
  405ff4:	mov    r9d,0x8
  405ffa:	push   rax
  405ffb:	mov    r8d,0x5
  406001:	mov    edx,0x6
  406006:	call   422590 <flatcc_json_printer_int8_enum_field@@Base>
  40600b:	lea    rax,[rip+0x54e]        # 406560 <_start@@Base+0xb30>
  406012:	lea    r9,[rip+0x20e7]        # 408100 <_start@@Base+0x26d0>
  406019:	lea    rcx,[rip+0x2548a]        # 42b4aa <_IO_stdin_used@@Base+0x4aa>
  406020:	mov    rsi,rbp
  406023:	mov    rdi,rbx
  406026:	mov    r8d,0x4
  40602c:	mov    edx,0x8
  406031:	mov    QWORD PTR [rsp],rax
  406035:	call   4290f0 <flatcc_json_printer_union_field@@Base>
  40603a:	lea    rcx,[rip+0x252f7]        # 42b338 <_IO_stdin_used@@Base+0x338>
  406041:	mov    r9d,0x4
  406047:	mov    rsi,rbp
  40604a:	mov    rdi,rbx
  40604d:	mov    r8d,0x5
  406053:	mov    edx,0x9
  406058:	mov    QWORD PTR [rsp],r12
  40605c:	call   428050 <flatcc_json_printer_struct_vector_field@@Base>
  406061:	lea    rcx,[rip+0x252d6]        # 42b33e <_IO_stdin_used@@Base+0x33e>
  406068:	mov    rsi,rbp
  40606b:	mov    rdi,rbx
  40606e:	mov    r8d,0x11
  406074:	mov    edx,0xa
  406079:	call   428390 <flatcc_json_printer_string_vector_field@@Base>
  40607e:	lea    r9,[rip+0xfffffffffffffeab]        # 405f30 <_start@@Base+0x500>
  406085:	lea    rcx,[rip+0x252c4]        # 42b350 <_IO_stdin_used@@Base+0x350>
  40608c:	mov    rsi,rbp
  40608f:	mov    rdi,rbx
  406092:	mov    r8d,0x11
  406098:	mov    edx,0xb
  40609d:	call   428700 <flatcc_json_printer_table_vector_field@@Base>
  4060a2:	lea    r9,[rip+0xfffffffffffffe87]        # 405f30 <_start@@Base+0x500>
  4060a9:	lea    rcx,[rip+0x252b2]        # 42b362 <_IO_stdin_used@@Base+0x362>
  4060b0:	mov    rsi,rbp
  4060b3:	mov    rdi,rbx
  4060b6:	mov    r8d,0x5
  4060bc:	mov    edx,0xc
  4060c1:	call   428e60 <flatcc_json_printer_table_field@@Base>
  4060c6:	lea    rax,[rip+0xfffffffffffffe63]        # 405f30 <_start@@Base+0x500>
  4060cd:	lea    rcx,[rip+0x25294]        # 42b368 <_IO_stdin_used@@Base+0x368>
  4060d4:	xor    r9d,r9d
  4060d7:	mov    rsi,rbp
  4060da:	mov    rdi,rbx
  4060dd:	mov    r8d,0x14
  4060e3:	mov    edx,0xd
  4060e8:	mov    QWORD PTR [rsp],rax
  4060ec:	call   429d20 <flatcc_json_printer_table_as_nested_root@@Base>
  4060f1:	lea    r9,[rip+0x3a8]        # 4064a0 <_start@@Base+0xa70>
  4060f8:	lea    rcx,[rip+0x2527e]        # 42b37d <_IO_stdin_used@@Base+0x37d>
  4060ff:	mov    rsi,rbp
  406102:	mov    rdi,rbx
  406105:	mov    r8d,0x9
  40610b:	mov    edx,0xe
  406110:	call   428e60 <flatcc_json_printer_table_field@@Base>
  406115:	lea    rcx,[rip+0x2526b]        # 42b387 <_IO_stdin_used@@Base+0x387>
  40611c:	mov    rsi,rbp
  40611f:	mov    rdi,rbx
  406122:	mov    r9d,0x1
  406128:	mov    r8d,0x8
  40612e:	mov    edx,0xf
  406133:	call   421930 <flatcc_json_printer_bool_field@@Base>
  406138:	lea    rcx,[rip+0x25251]        # 42b390 <_IO_stdin_used@@Base+0x390>
  40613f:	xor    r9d,r9d
  406142:	mov    rsi,rbp
  406145:	mov    rdi,rbx
  406148:	mov    r8d,0x10
  40614e:	mov    edx,0x10
  406153:	call   4215f0 <flatcc_json_printer_int32_field@@Base>
  406158:	lea    rcx,[rip+0x25242]        # 42b3a1 <_IO_stdin_used@@Base+0x3a1>
  40615f:	xor    r9d,r9d
  406162:	mov    rsi,rbp
  406165:	mov    rdi,rbx
  406168:	mov    r8d,0x10
  40616e:	mov    edx,0x11
  406173:	call   420fa0 <flatcc_json_printer_uint32_field@@Base>
  406178:	lea    rcx,[rip+0x25233]        # 42b3b2 <_IO_stdin_used@@Base+0x3b2>
  40617f:	xor    r9d,r9d
  406182:	mov    rsi,rbp
  406185:	mov    rdi,rbx
  406188:	mov    r8d,0x10
  40618e:	mov    edx,0x12
  406193:	call   421790 <flatcc_json_printer_int64_field@@Base>
  406198:	lea    rcx,[rip+0x25224]        # 42b3c3 <_IO_stdin_used@@Base+0x3c3>
  40619f:	xor    r9d,r9d
  4061a2:	mov    rsi,rbp
  4061a5:	mov    rdi,rbx
  4061a8:	mov    r8d,0x10
  4061ae:	mov    edx,0x13
  4061b3:	call   421120 <flatcc_json_printer_uint64_field@@Base>
  4061b8:	lea    rcx,[rip+0x25215]        # 42b3d4 <_IO_stdin_used@@Base+0x3d4>
  4061bf:	xor    r9d,r9d
  4061c2:	mov    rsi,rbp
  4061c5:	mov    rdi,rbx
  4061c8:	mov    r8d,0x11
  4061ce:	mov    edx,0x14
  4061d3:	call   4215f0 <flatcc_json_printer_int32_field@@Base>
  4061d8:	lea    rcx,[rip+0x25207]        # 42b3e6 <_IO_stdin_used@@Base+0x3e6>
  4061df:	xor    r9d,r9d
  4061e2:	mov    rsi,rbp
  4061e5:	mov    rdi,rbx
  4061e8:	mov    r8d,0x11
  4061ee:	mov    edx,0x15
  4061f3:	call   420fa0 <flatcc_json_printer_uint32_field@@Base>
  4061f8:	lea    rcx,[rip+0x251f9]        # 42b3f8 <_IO_stdin_used@@Base+0x3f8>
  4061ff:	xor    r9d,r9d
  406202:	mov    rsi,rbp
  406205:	mov    rdi,rbx
  406208:	mov    r8d,0x11
  40620e:	mov    edx,0x16
  406213:	call   421790 <flatcc_json_printer_int64_field@@Base>
  406218:	lea    rcx,[rip+0x251eb]        # 42b40a <_IO_stdin_used@@Base+0x40a>
  40621f:	xor    r9d,r9d
  406222:	mov    rsi,rbp
  406225:	mov    rdi,rbx
  406228:	mov    r8d,0x11
  40622e:	mov    edx,0x17
  406233:	call   421120 <flatcc_json_printer_uint64_field@@Base>
  406238:	lea    rcx,[rip+0x251dd]        # 42b41c <_IO_stdin_used@@Base+0x41c>
  40623f:	mov    rsi,rbp
  406242:	mov    rdi,rbx
  406245:	mov    r8d,0x10
  40624b:	mov    edx,0x18
  406250:	call   4262b0 <flatcc_json_printer_bool_vector_field@@Base>
  406255:	lea    rcx,[rip+0x251d1]        # 42b42d <_IO_stdin_used@@Base+0x42d>
  40625c:	mov    rsi,rbp
  40625f:	mov    rdi,rbx
  406262:	vmovss xmm0,DWORD PTR [rip+0x28096]        # 42e300 <_IO_stdin_used@@Base+0x3300>
  40626a:	mov    r8d,0x5
  406270:	mov    edx,0x19
  406275:	call   421ab0 <flatcc_json_printer_float_field@@Base>
  40627a:	lea    rcx,[rip+0x251b2]        # 42b433 <_IO_stdin_used@@Base+0x433>
  406281:	mov    rsi,rbp
  406284:	mov    rdi,rbx
  406287:	vmovss xmm0,DWORD PTR [rip+0x28075]        # 42e304 <_IO_stdin_used@@Base+0x3304>
  40628f:	mov    r8d,0x6
  406295:	mov    edx,0x1a
  40629a:	call   421ab0 <flatcc_json_printer_float_field@@Base>
  40629f:	vxorps xmm0,xmm0,xmm0
  4062a3:	lea    rcx,[rip+0x25190]        # 42b43a <_IO_stdin_used@@Base+0x43a>
  4062aa:	mov    rsi,rbp
  4062ad:	mov    rdi,rbx
  4062b0:	mov    r8d,0x6
  4062b6:	mov    edx,0x1b
  4062bb:	call   421ab0 <flatcc_json_printer_float_field@@Base>
  4062c0:	lea    rcx,[rip+0x2517a]        # 42b441 <_IO_stdin_used@@Base+0x441>
  4062c7:	mov    rsi,rbp
  4062ca:	mov    rdi,rbx
  4062cd:	mov    r8d,0x12
  4062d3:	mov    edx,0x1c
  4062d8:	call   428390 <flatcc_json_printer_string_vector_field@@Base>
  4062dd:	lea    rax,[rip+0x16c]        # 406450 <_start@@Base+0xa20>
  4062e4:	lea    rcx,[rip+0x25169]        # 42b454 <_IO_stdin_used@@Base+0x454>
  4062eb:	mov    r9d,0x8
  4062f1:	mov    rsi,rbp
  4062f4:	mov    rdi,rbx
  4062f7:	mov    r8d,0x17
  4062fd:	mov    edx,0x1d
  406302:	mov    QWORD PTR [rsp],rax
  406306:	call   428050 <flatcc_json_printer_struct_vector_field@@Base>
  40630b:	lea    rcx,[rip+0x2515a]        # 42b46c <_IO_stdin_used@@Base+0x46c>
  406312:	mov    rsi,rbp
  406315:	mov    rdi,rbx
  406318:	mov    r8d,0x4
  40631e:	mov    edx,0x1e
  406323:	call   424d10 <flatcc_json_printer_uint8_vector_field@@Base>
  406328:	lea    rcx,[rip+0x25142]        # 42b471 <_IO_stdin_used@@Base+0x471>
  40632f:	mov    r9d,0x4
  406335:	mov    rsi,rbp
  406338:	mov    rdi,rbx
  40633b:	mov    r8d,0x5
  406341:	mov    edx,0x1f
  406346:	mov    QWORD PTR [rsp],r12
  40634a:	call   428050 <flatcc_json_printer_struct_vector_field@@Base>
  40634f:	lea    rcx,[rip+0x25121]        # 42b477 <_IO_stdin_used@@Base+0x477>
  406356:	mov    rsi,rbp
  406359:	mov    rdi,rbx
  40635c:	mov    r8d,0xf
  406362:	mov    edx,0x20
  406367:	call   425fe0 <flatcc_json_printer_int64_vector_field@@Base>
  40636c:	lea    rcx,[rip+0x25114]        # 42b487 <_IO_stdin_used@@Base+0x487>
  406373:	mov    rsi,rbp
  406376:	mov    rdi,rbx
  406379:	mov    r8d,0x11
  40637f:	mov    edx,0x21
  406384:	call   426830 <flatcc_json_printer_double_vector_field@@Base>
  406389:	lea    r9,[rip+0x1e10]        # 4081a0 <_start@@Base+0x2770>
  406390:	lea    rcx,[rip+0x25102]        # 42b499 <_IO_stdin_used@@Base+0x499>
  406397:	mov    rsi,rbp
  40639a:	mov    rdi,rbx
  40639d:	mov    r8d,0x15
  4063a3:	mov    edx,0x22
  4063a8:	call   428e60 <flatcc_json_printer_table_field@@Base>
  4063ad:	pop    rax
  4063ae:	mov    rsi,rbp
  4063b1:	mov    rdi,rbx
  4063b4:	lea    r9,[rip+0x25]        # 4063e0 <_start@@Base+0x9b0>
  4063bb:	pop    rdx
  4063bc:	pop    rbx
  4063bd:	pop    rbp
  4063be:	pop    r12
  4063c0:	lea    rcx,[rip+0x250e8]        # 42b4af <_IO_stdin_used@@Base+0x4af>
  4063c7:	mov    r8d,0xa
  4063cd:	mov    edx,0x23
  4063d2:	jmp    428e60 <flatcc_json_printer_table_field@@Base>
  4063d7:	nop    WORD PTR [rax+rax*1+0x0]
  4063e0:	push   rbp
  4063e1:	push   rbx
  4063e2:	lea    rcx,[rip+0x250d4]        # 42b4bd <_IO_stdin_used@@Base+0x4bd>
  4063e9:	xor    r9d,r9d
  4063ec:	mov    r8d,0x4
  4063f2:	xor    edx,edx
  4063f4:	sub    rsp,0x8
  4063f8:	mov    rbx,rdi
  4063fb:	mov    rbp,rsi
  4063fe:	call   4209b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  406403:	lea    rcx,[rip+0x250b0]        # 42b4ba <_IO_stdin_used@@Base+0x4ba>
  40640a:	mov    rsi,rbp
  40640d:	mov    rdi,rbx
  406410:	mov    r9d,0x1
  406416:	mov    r8d,0x7
  40641c:	mov    edx,0x1
  406421:	call   4209b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  406426:	add    rsp,0x8
  40642a:	mov    rsi,rbp
  40642d:	mov    rdi,rbx
  406430:	pop    rbx
  406431:	pop    rbp
  406432:	lea    rcx,[rip+0x25089]        # 42b4c2 <_IO_stdin_used@@Base+0x4c2>
  406439:	xor    r9d,r9d
  40643c:	mov    r8d,0x6
  406442:	mov    edx,0x2
  406447:	jmp    4209b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  40644c:	nop    DWORD PTR [rax+0x0]
  406450:	push   rbp
  406451:	push   rbx
  406452:	lea    r8,[rip+0x25070]        # 42b4c9 <_IO_stdin_used@@Base+0x4c9>
  406459:	mov    rbp,rsi
  40645c:	mov    rdx,rsi
  40645f:	mov    r9d,0x2
  406465:	sub    rsp,0x8
  406469:	xor    ecx,ecx
  40646b:	xor    esi,esi
  40646d:	mov    rbx,rdi
  406470:	call   4231b0 <flatcc_json_printer_uint32_struct_field@@Base>
  406475:	add    rsp,0x8
  406479:	mov    rdx,rbp
  40647c:	mov    rdi,rbx
  40647f:	pop    rbx
  406480:	pop    rbp
  406481:	lea    r8,[rip+0x25044]        # 42b4cc <_IO_stdin_used@@Base+0x4cc>
  406488:	mov    r9d,0x8
  40648e:	mov    ecx,0x4
  406493:	mov    esi,0x1
  406498:	jmp    4231b0 <flatcc_json_printer_uint32_struct_field@@Base>
  40649d:	nop    DWORD PTR [rax]
  4064a0:	push   rbp
  4064a1:	push   rbx
  4064a2:	lea    rcx,[rip+0x25020]        # 42b4c9 <_IO_stdin_used@@Base+0x4c9>
  4064a9:	mov    r8d,0x2
  4064af:	xor    edx,edx
  4064b1:	mov    rbx,rdi
  4064b4:	sub    rsp,0x8
  4064b8:	mov    rbp,rsi
  4064bb:	call   420830 <flatcc_json_printer_string_field@@Base>
  4064c0:	lea    rcx,[rip+0x2500e]        # 42b4d5 <_IO_stdin_used@@Base+0x4d5>
  4064c7:	mov    rsi,rbp
  4064ca:	mov    rdi,rbx
  4064cd:	xor    r9d,r9d
  4064d0:	mov    r8d,0x3
  4064d6:	mov    edx,0x1
  4064db:	call   421790 <flatcc_json_printer_int64_field@@Base>
  4064e0:	add    rsp,0x8
  4064e4:	mov    rsi,rbp
  4064e7:	mov    rdi,rbx
  4064ea:	pop    rbx
  4064eb:	pop    rbp
  4064ec:	lea    rcx,[rip+0x294a8]        # 42f99b <flatcc_builder_padding_base@@Base+0xb7b>
  4064f3:	xor    r9d,r9d
  4064f6:	mov    r8d,0x5
  4064fc:	mov    edx,0x2
  406501:	jmp    420e20 <flatcc_json_printer_uint16_field@@Base>
  406506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406510:	push   rbp
  406511:	push   rbx
  406512:	lea    r8,[rip+0x24ecb]        # 42b3e4 <_IO_stdin_used@@Base+0x3e4>
  406519:	mov    rbp,rsi
  40651c:	mov    rdx,rsi
  40651f:	mov    r9d,0x1
  406525:	sub    rsp,0x8
  406529:	xor    ecx,ecx
  40652b:	xor    esi,esi
  40652d:	mov    rbx,rdi
  406530:	call   4235c0 <flatcc_json_printer_int16_struct_field@@Base>
  406535:	add    rsp,0x8
  406539:	mov    rdx,rbp
  40653c:	mov    rdi,rbx
  40653f:	pop    rbx
  406540:	pop    rbp
  406541:	lea    r8,[rip+0x24d99]        # 42b2e1 <_IO_stdin_used@@Base+0x2e1>
  406548:	mov    r9d,0x1
  40654e:	mov    ecx,0x2
  406553:	mov    esi,0x1
  406558:	jmp    423450 <flatcc_json_printer_int8_struct_field@@Base>
  40655d:	nop    DWORD PTR [rax]
  406560:	movzx  eax,BYTE PTR [rsi+0xc]
  406564:	cmp    al,0x2
  406566:	je     4065a0 <_start@@Base+0xb70>
  406568:	jbe    406590 <_start@@Base+0xb60>
  40656a:	cmp    al,0x3
  40656c:	je     406580 <_start@@Base+0xb50>
  40656e:	cmp    al,0x4
  406570:	jne    4065b0 <_start@@Base+0xb80>
  406572:	lea    rdx,[rip+0x47]        # 4065c0 <_start@@Base+0xb90>
  406579:	jmp    4293c0 <flatcc_json_printer_union_table@@Base>
  40657e:	xchg   ax,ax
  406580:	lea    rdx,[rip+0xfffffffffffff709]        # 405c90 <_start@@Base+0x260>
  406587:	jmp    4293c0 <flatcc_json_printer_union_table@@Base>
  40658c:	nop    DWORD PTR [rax+0x0]
  406590:	cmp    al,0x1
  406592:	jne    4065b8 <_start@@Base+0xb88>
  406594:	lea    rdx,[rip+0xfffffffffffff995]        # 405f30 <_start@@Base+0x500>
  40659b:	jmp    4293c0 <flatcc_json_printer_union_table@@Base>
  4065a0:	lea    rdx,[rip+0x309]        # 4068b0 <_start@@Base+0xe80>
  4065a7:	jmp    4293c0 <flatcc_json_printer_union_table@@Base>
  4065ac:	nop    DWORD PTR [rax+0x0]
  4065b0:	repz ret 
  4065b2:	nop    WORD PTR [rax+rax*1+0x0]
  4065b8:	repz ret 
  4065ba:	nop    WORD PTR [rax+rax*1+0x0]
  4065c0:	push   rbp
  4065c1:	push   rbx
  4065c2:	lea    r9,[rip+0xfffffffffffff707]        # 405cd0 <_start@@Base+0x2a0>
  4065c9:	lea    rcx,[rip+0x24f09]        # 42b4d9 <_IO_stdin_used@@Base+0x4d9>
  4065d0:	mov    r8d,0x6
  4065d6:	xor    edx,edx
  4065d8:	sub    rsp,0x8
  4065dc:	mov    rbx,rdi
  4065df:	mov    rbp,rsi
  4065e2:	call   428e60 <flatcc_json_printer_table_field@@Base>
  4065e7:	lea    r9,[rip+0x62]        # 406650 <_start@@Base+0xc20>
  4065ee:	lea    rcx,[rip+0x24eeb]        # 42b4e0 <_IO_stdin_used@@Base+0x4e0>
  4065f5:	mov    rsi,rbp
  4065f8:	mov    rdi,rbx
  4065fb:	mov    r8d,0x5
  406601:	mov    edx,0x1
  406606:	call   428e60 <flatcc_json_printer_table_field@@Base>
  40660b:	lea    rax,[rip+0xffffffffffffff4e]        # 406560 <_start@@Base+0xb30>
  406612:	sub    rsp,0x8
  406616:	lea    r9,[rip+0x1ae3]        # 408100 <_start@@Base+0x26d0>
  40661d:	lea    rcx,[rip+0x24ec2]        # 42b4e6 <_IO_stdin_used@@Base+0x4e6>
  406624:	mov    rsi,rbp
  406627:	mov    rdi,rbx
  40662a:	push   rax
  40662b:	mov    r8d,0x7
  406631:	mov    edx,0x3
  406636:	call   428b20 <flatcc_json_printer_union_vector_field@@Base>
  40663b:	add    rsp,0x18
  40663f:	pop    rbx
  406640:	pop    rbp
  406641:	ret    
  406642:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40664d:	nop    DWORD PTR [rax]
  406650:	push   r12
  406652:	push   rbp
  406653:	lea    r12,[rip+0xd6]        # 406730 <_start@@Base+0xd00>
  40665a:	push   rbx
  40665b:	lea    r9,[rip+0x17e]        # 4067e0 <_start@@Base+0xdb0>
  406662:	lea    rcx,[rip+0x24e85]        # 42b4ee <_IO_stdin_used@@Base+0x4ee>
  406669:	mov    r8d,0xe
  40666f:	mov    edx,0x1
  406674:	mov    rbx,rdi
  406677:	sub    rsp,0x8
  40667b:	mov    rbp,rsi
  40667e:	push   r12
  406680:	call   4290f0 <flatcc_json_printer_union_field@@Base>
  406685:	lea    r9,[rip+0x154]        # 4067e0 <_start@@Base+0xdb0>
  40668c:	lea    rcx,[rip+0x24e6a]        # 42b4fd <_IO_stdin_used@@Base+0x4fd>
  406693:	mov    rsi,rbp
  406696:	mov    rdi,rbx
  406699:	mov    r8d,0xa
  40669f:	mov    edx,0x3
  4066a4:	mov    QWORD PTR [rsp],r12
  4066a8:	call   4290f0 <flatcc_json_printer_union_field@@Base>
  4066ad:	lea    r9,[rip+0x12c]        # 4067e0 <_start@@Base+0xdb0>
  4066b4:	lea    rcx,[rip+0x24e4d]        # 42b508 <_IO_stdin_used@@Base+0x508>
  4066bb:	mov    rsi,rbp
  4066be:	mov    rdi,rbx
  4066c1:	mov    r8d,0x9
  4066c7:	mov    edx,0x5
  4066cc:	mov    QWORD PTR [rsp],r12
  4066d0:	call   4290f0 <flatcc_json_printer_union_field@@Base>
  4066d5:	lea    r9,[rip+0x104]        # 4067e0 <_start@@Base+0xdb0>
  4066dc:	lea    rcx,[rip+0x24e2f]        # 42b512 <_IO_stdin_used@@Base+0x512>
  4066e3:	mov    rsi,rbp
  4066e6:	mov    rdi,rbx
  4066e9:	mov    r8d,0x5
  4066ef:	mov    edx,0x7
  4066f4:	mov    QWORD PTR [rsp],r12
  4066f8:	call   4290f0 <flatcc_json_printer_union_field@@Base>
  4066fd:	lea    r9,[rip+0xdc]        # 4067e0 <_start@@Base+0xdb0>
  406704:	lea    rcx,[rip+0x24e0d]        # 42b518 <_IO_stdin_used@@Base+0x518>
  40670b:	mov    edx,0x9
  406710:	mov    rsi,rbp
  406713:	mov    rdi,rbx
  406716:	mov    r8d,0xa
  40671c:	mov    QWORD PTR [rsp],r12
  406720:	call   428b20 <flatcc_json_printer_union_vector_field@@Base>
  406725:	pop    rax
  406726:	pop    rdx
  406727:	pop    rbx
  406728:	pop    rbp
  406729:	pop    r12
  40672b:	ret    
  40672c:	nop    DWORD PTR [rax+0x0]
  406730:	movzx  eax,BYTE PTR [rsi+0xc]
  406734:	cmp    al,0x9
  406736:	je     406768 <_start@@Base+0xd38>
  406738:	jbe    406750 <_start@@Base+0xd20>
  40673a:	cmp    al,0xb
  40673c:	je     406744 <_start@@Base+0xd14>
  40673e:	jb     406768 <_start@@Base+0xd38>
  406740:	cmp    al,0xff
  406742:	jne    406778 <_start@@Base+0xd48>
  406744:	jmp    429580 <flatcc_json_printer_union_string@@Base>
  406749:	nop    DWORD PTR [rax+0x0]
  406750:	cmp    al,0x2
  406752:	je     406788 <_start@@Base+0xd58>
  406754:	cmp    al,0x8
  406756:	jne    406780 <_start@@Base+0xd50>
  406758:	lea    rdx,[rip+0x61]        # 4067c0 <_start@@Base+0xd90>
  40675f:	jmp    4294e0 <flatcc_json_printer_union_struct@@Base>
  406764:	nop    DWORD PTR [rax+0x0]
  406768:	lea    rdx,[rip+0x31]        # 4067a0 <_start@@Base+0xd70>
  40676f:	jmp    4294e0 <flatcc_json_printer_union_struct@@Base>
  406774:	nop    DWORD PTR [rax+0x0]
  406778:	repz ret 
  40677a:	nop    WORD PTR [rax+rax*1+0x0]
  406780:	repz ret 
  406782:	nop    WORD PTR [rax+rax*1+0x0]
  406788:	lea    rdx,[rip+0xfffffffffffff5c1]        # 405d50 <_start@@Base+0x320>
  40678f:	jmp    4293c0 <flatcc_json_printer_union_table@@Base>
  406794:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40679f:	nop
  4067a0:	lea    r8,[rip+0x24d7c]        # 42b523 <_IO_stdin_used@@Base+0x523>
  4067a7:	mov    rdx,rsi
  4067aa:	mov    r9d,0xa
  4067b0:	xor    ecx,ecx
  4067b2:	xor    esi,esi
  4067b4:	jmp    423730 <flatcc_json_printer_int32_struct_field@@Base>
  4067b9:	nop    DWORD PTR [rax+0x0]
  4067c0:	lea    r8,[rip+0x24d67]        # 42b52e <_IO_stdin_used@@Base+0x52e>
  4067c7:	mov    rdx,rsi
  4067ca:	mov    r9d,0xb
  4067d0:	xor    ecx,ecx
  4067d2:	xor    esi,esi
  4067d4:	jmp    423060 <flatcc_json_printer_uint16_struct_field@@Base>
  4067d9:	nop    DWORD PTR [rax+0x0]
  4067e0:	cmp    sil,0x9
  4067e4:	je     406890 <_start@@Base+0xe60>
  4067ea:	jbe    406810 <_start@@Base+0xde0>
  4067ec:	cmp    sil,0xb
  4067f0:	je     406830 <_start@@Base+0xe00>
  4067f2:	jb     406878 <_start@@Base+0xe48>
  4067f8:	cmp    sil,0xff
  4067fc:	jne    406848 <_start@@Base+0xe18>
  4067fe:	lea    rsi,[rip+0x24d58]        # 42b55d <_IO_stdin_used@@Base+0x55d>
  406805:	mov    edx,0x6
  40680a:	jmp    420730 <flatcc_json_printer_enum@@Base>
  40680f:	nop
  406810:	cmp    sil,0x2
  406814:	je     406860 <_start@@Base+0xe30>
  406816:	cmp    sil,0x8
  40681a:	jne    406848 <_start@@Base+0xe18>
  40681c:	lea    rsi,[rip+0x24d1d]        # 42b540 <_IO_stdin_used@@Base+0x540>
  406823:	mov    edx,0x8
  406828:	jmp    420730 <flatcc_json_printer_enum@@Base>
  40682d:	nop    DWORD PTR [rax]
  406830:	lea    rsi,[rip+0x24d20]        # 42b557 <_IO_stdin_used@@Base+0x557>
  406837:	mov    edx,0x5
  40683c:	jmp    420730 <flatcc_json_printer_enum@@Base>
  406841:	nop    DWORD PTR [rax+0x0]
  406848:	lea    rsi,[rip+0x290ad]        # 42f8fc <flatcc_builder_padding_base@@Base+0xadc>
  40684f:	mov    edx,0x4
  406854:	jmp    420730 <flatcc_json_printer_enum@@Base>
  406859:	nop    DWORD PTR [rax+0x0]
  406860:	lea    rsi,[rip+0x24cd3]        # 42b53a <_IO_stdin_used@@Base+0x53a>
  406867:	mov    edx,0x5
  40686c:	jmp    420730 <flatcc_json_printer_enum@@Base>
  406871:	nop    DWORD PTR [rax+0x0]
  406878:	lea    rsi,[rip+0x24cd0]        # 42b54f <_IO_stdin_used@@Base+0x54f>
  40687f:	mov    edx,0x7
  406884:	jmp    420730 <flatcc_json_printer_enum@@Base>
  406889:	nop    DWORD PTR [rax+0x0]
  406890:	lea    rsi,[rip+0x24cb2]        # 42b549 <_IO_stdin_used@@Base+0x549>
  406897:	mov    edx,0x5
  40689c:	jmp    420730 <flatcc_json_printer_enum@@Base>
  4068a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4068ac:	nop    DWORD PTR [rax+0x0]
  4068b0:	push   r12
  4068b2:	push   rbp
  4068b3:	lea    r12,[rip+0xa6]        # 406960 <_start@@Base+0xf30>
  4068ba:	push   rbx
  4068bb:	lea    rcx,[rip+0x24a70]        # 42b332 <_IO_stdin_used@@Base+0x332>
  4068c2:	mov    r9d,0x2
  4068c8:	mov    r8d,0x5
  4068ce:	xor    edx,edx
  4068d0:	mov    rbx,rdi
  4068d3:	sub    rsp,0x8
  4068d7:	mov    rbp,rsi
  4068da:	push   r12
  4068dc:	call   422590 <flatcc_json_printer_int8_enum_field@@Base>
  4068e1:	lea    rcx,[rip+0x24c7c]        # 42b564 <_IO_stdin_used@@Base+0x564>
  4068e8:	mov    rsi,rbp
  4068eb:	mov    rdi,rbx
  4068ee:	mov    r9d,0x2
  4068f4:	mov    r8d,0x6
  4068fa:	mov    edx,0x1
  4068ff:	mov    QWORD PTR [rsp],r12
  406903:	call   422590 <flatcc_json_printer_int8_enum_field@@Base>
  406908:	lea    rcx,[rip+0x24c5c]        # 42b56b <_IO_stdin_used@@Base+0x56b>
  40690f:	mov    rsi,rbp
  406912:	mov    rdi,rbx
  406915:	mov    r9d,0x2
  40691b:	mov    r8d,0x2
  406921:	mov    edx,0x2
  406926:	call   420ca0 <flatcc_json_printer_uint8_field@@Base>
  40692b:	pop    rax
  40692c:	mov    rsi,rbp
  40692f:	mov    rdi,rbx
  406932:	lea    rcx,[rip+0x24c35]        # 42b56e <_IO_stdin_used@@Base+0x56e>
  406939:	pop    rdx
  40693a:	pop    rbx
  40693b:	pop    rbp
  40693c:	pop    r12
  40693e:	mov    r9d,0x2
  406944:	mov    r8d,0x3
  40694a:	mov    edx,0x3
  40694f:	jmp    420ca0 <flatcc_json_printer_uint8_field@@Base>
  406954:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40695f:	nop
  406960:	test   sil,0xf4
  406964:	jne    4069c0 <_start@@Base+0xf90>
  406966:	test   sil,sil
  406969:	je     4069c0 <_start@@Base+0xf90>
  40696b:	push   r13
  40696d:	movzx  eax,sil
  406971:	push   r12
  406973:	push   rbp
  406974:	push   rbx
  406975:	blsr   eax,eax
  40697a:	xor    r12d,r12d
  40697d:	mov    ebx,esi
  40697f:	mov    rbp,rdi
  406982:	sub    rsp,0x8
  406986:	test   eax,eax
  406988:	setne  r12b
  40698c:	mov    esi,r12d
  40698f:	call   4207a0 <flatcc_json_printer_delimit_enum_flags@@Base>
  406994:	xor    esi,esi
  406996:	test   bl,0x1
  406999:	jne    4069d0 <_start@@Base+0xfa0>
  40699b:	test   bl,0x2
  40699e:	jne    406a10 <_start@@Base+0xfe0>
  4069a0:	and    ebx,0x8
  4069a3:	jne    4069f0 <_start@@Base+0xfc0>
  4069a5:	add    rsp,0x8
  4069a9:	mov    esi,r12d
  4069ac:	mov    rdi,rbp
  4069af:	pop    rbx
  4069b0:	pop    rbp
  4069b1:	pop    r12
  4069b3:	pop    r13
  4069b5:	jmp    4207a0 <flatcc_json_printer_delimit_enum_flags@@Base>
  4069ba:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	movsx  esi,sil
  4069c4:	jmp    420600 <flatcc_json_printer_int8@@Base>
  4069c9:	nop    DWORD PTR [rax+0x0]
  4069d0:	lea    rdx,[rip+0x24b9b]        # 42b572 <_IO_stdin_used@@Base+0x572>
  4069d7:	mov    ecx,0x3
  4069dc:	mov    rdi,rbp
  4069df:	call   4207c0 <flatcc_json_printer_enum_flag@@Base>
  4069e4:	mov    esi,0x1
  4069e9:	jmp    40699b <_start@@Base+0xf6b>
  4069eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	lea    rdx,[rip+0x24b85]        # 42b57c <_IO_stdin_used@@Base+0x57c>
  4069f7:	mov    ecx,0x4
  4069fc:	mov    rdi,rbp
  4069ff:	call   4207c0 <flatcc_json_printer_enum_flag@@Base>
  406a04:	jmp    4069a5 <_start@@Base+0xf75>
  406a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a10:	lea    r13d,[rsi+0x1]
  406a14:	lea    rdx,[rip+0x24b5b]        # 42b576 <_IO_stdin_used@@Base+0x576>
  406a1b:	mov    ecx,0x5
  406a20:	mov    rdi,rbp
  406a23:	call   4207c0 <flatcc_json_printer_enum_flag@@Base>
  406a28:	mov    esi,r13d
  406a2b:	jmp    4069a0 <_start@@Base+0xf70>
  406a30:	push   rbp
  406a31:	push   rbx
  406a32:	lea    r8,[rip+0x24bcc]        # 42b605 <_IO_stdin_used@@Base+0x605>
  406a39:	mov    rbp,rsi
  406a3c:	mov    rdx,rsi
  406a3f:	mov    r9d,0x1
  406a45:	sub    rsp,0x8
  406a49:	xor    ecx,ecx
  406a4b:	xor    esi,esi
  406a4d:	mov    rbx,rdi
  406a50:	call   423b60 <flatcc_json_printer_float_struct_field@@Base>
  406a55:	lea    r8,[rip+0x28d94]        # 42f7f0 <flatcc_builder_padding_base@@Base+0x9d0>
  406a5c:	mov    rdx,rbp
  406a5f:	mov    rdi,rbx
  406a62:	mov    r9d,0x1
  406a68:	mov    ecx,0x4
  406a6d:	mov    esi,0x1
  406a72:	call   423b60 <flatcc_json_printer_float_struct_field@@Base>
  406a77:	lea    r8,[rip+0x24b03]        # 42b581 <_IO_stdin_used@@Base+0x581>
  406a7e:	mov    rdx,rbp
  406a81:	mov    rdi,rbx
  406a84:	mov    r9d,0x1
  406a8a:	mov    ecx,0x8
  406a8f:	mov    esi,0x2
  406a94:	call   423b60 <flatcc_json_printer_float_struct_field@@Base>
  406a99:	lea    r8,[rip+0x24ae3]        # 42b583 <_IO_stdin_used@@Base+0x583>
  406aa0:	mov    rdx,rbp
  406aa3:	mov    rdi,rbx
  406aa6:	mov    r9d,0x5
  406aac:	mov    ecx,0x10
  406ab1:	mov    esi,0x3
  406ab6:	call   423cc0 <flatcc_json_printer_double_struct_field@@Base>
  406abb:	lea    rax,[rip+0xfffffffffffffe9e]        # 406960 <_start@@Base+0xf30>
  406ac2:	sub    rsp,0x8
  406ac6:	lea    r8,[rip+0x24abc]        # 42b589 <_IO_stdin_used@@Base+0x589>
  406acd:	mov    rdx,rbp
  406ad0:	mov    rdi,rbx
  406ad3:	mov    r9d,0x5
  406ad9:	push   rax
  406ada:	mov    ecx,0x18
  406adf:	mov    esi,0x4
  406ae4:	call   4244b0 <flatcc_json_printer_int8_enum_struct_field@@Base>
  406ae9:	lea    rax,[rip+0xfffffffffffffa20]        # 406510 <_start@@Base+0xae0>
  406af0:	lea    r8,[rip+0x24a98]        # 42b58f <_IO_stdin_used@@Base+0x58f>
  406af7:	mov    rdx,rbp
  406afa:	mov    rdi,rbx
  406afd:	mov    r9d,0x5
  406b03:	mov    ecx,0x1a
  406b08:	mov    esi,0x5
  406b0d:	mov    QWORD PTR [rsp],rax
  406b11:	call   4295a0 <flatcc_json_printer_embedded_struct_field@@Base>
  406b16:	add    rsp,0x18
  406b1a:	pop    rbx
  406b1b:	pop    rbp
  406b1c:	ret    
  406b1d:	nop    DWORD PTR [rax]
  406b20:	mov    rax,rdx
  406b23:	sub    rax,rsi
  406b26:	cmp    rax,0x1
  406b2a:	jle    406b33 <_start@@Base+0x1103>
  406b2c:	cmp    BYTE PTR [rsi],0x20
  406b2f:	jg     406b40 <_start@@Base+0x1110>
  406b31:	je     406b48 <_start@@Base+0x1118>
  406b33:	jmp    41b9b0 <flatcc_json_parser_space_ext@@Base>
  406b38:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	mov    rax,rsi
  406b43:	ret    
  406b44:	nop    DWORD PTR [rax+0x0]
  406b48:	cmp    BYTE PTR [rsi+0x1],0x20
  406b4c:	jle    406b33 <_start@@Base+0x1103>
  406b4e:	lea    rax,[rsi+0x1]
  406b52:	ret    
  406b53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406b5e:	xchg   ax,ax
  406b60:	mov    rax,rdx
  406b63:	push   r12
  406b65:	mov    r11,rdi
  406b68:	sub    rax,rsi
  406b6b:	push   rbp
  406b6c:	mov    r10,rdx
  406b6f:	cmp    rax,0x7
  406b73:	push   rbx
  406b74:	mov    rbp,rcx
  406b77:	mov    rbx,rsi
  406b7a:	mov    r12,r8
  406b7d:	jbe    406c10 <_start@@Base+0x11e0>
  406b83:	movbe  rax,QWORD PTR [rsi]
  406b88:	movabs rdx,0x4e4f4e44ffffffff
  406b92:	cmp    rax,rdx
  406b95:	ja     406c2e <_start@@Base+0x11fe>
  406b9b:	movabs rdx,0x426f6f6b46616dff
  406ba5:	cmp    rax,rdx
  406ba8:	jbe    406cd8 <_start@@Base+0x12a8>
  406bae:	mov    rcx,rax
  406bb1:	movabs rdx,0x4d754c616e000000
  406bbb:	and    rcx,0xffffffffff000000
  406bc2:	cmp    rcx,rdx
  406bc5:	je     406dc0 <_start@@Base+0x1390>
  406bcb:	xor    al,al
  406bcd:	movabs rdx,0x426f6f6b46616e00
  406bd7:	cmp    rax,rdx
  406bda:	jne    406c5d <_start@@Base+0x122d>
  406be0:	mov    r8,r9
  406be3:	mov    ecx,0x7
  406be8:	mov    rdx,r10
  406beb:	mov    rsi,rbx
  406bee:	mov    rdi,r11
  406bf1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406bf6:	cmp    rbx,rax
  406bf9:	je     406c5d <_start@@Base+0x122d>
  406bfb:	mov    QWORD PTR [r12],0xa
  406c03:	mov    rbx,rax
  406c06:	mov    DWORD PTR [rbp+0x0],0x0
  406c0d:	jmp    406c5d <_start@@Base+0x122d>
  406c0f:	nop
  406c10:	mov    rsi,rdx
  406c13:	mov    rdi,rbx
  406c16:	call   405b40 <_start@@Base+0x110>
  406c1b:	movabs rdx,0x4e4f4e44ffffffff
  406c25:	cmp    rax,rdx
  406c28:	jbe    406b9b <_start@@Base+0x116b>
  406c2e:	movabs rdx,0x4f74686571ffffff
  406c38:	cmp    rax,rdx
  406c3b:	ja     406c68 <_start@@Base+0x1238>
  406c3d:	movabs rdx,0xffffffff00000000
  406c47:	and    rax,rdx
  406c4a:	movabs rdx,0x4e4f4e4500000000
  406c54:	cmp    rax,rdx
  406c57:	je     406d80 <_start@@Base+0x1350>
  406c5d:	mov    rax,rbx
  406c60:	pop    rbx
  406c61:	pop    rbp
  406c62:	pop    r12
  406c64:	ret    
  406c65:	nop    DWORD PTR [rax]
  406c68:	movabs rdx,0x526170756e7a656b
  406c72:	cmp    rax,rdx
  406c75:	jbe    406d30 <_start@@Base+0x1300>
  406c7b:	mov    rcx,rax
  406c7e:	movabs rdx,0x556e757365640000
  406c88:	xor    cx,cx
  406c8b:	cmp    rcx,rdx
  406c8e:	je     406e00 <_start@@Base+0x13d0>
  406c94:	movabs rdx,0x526170756e7a656c
  406c9e:	cmp    rax,rdx
  406ca1:	jne    406c5d <_start@@Base+0x122d>
  406ca3:	mov    r8,r9
  406ca6:	mov    ecx,0x8
  406cab:	mov    rdx,r10
  406cae:	mov    rsi,rbx
  406cb1:	mov    rdi,r11
  406cb4:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406cb9:	cmp    rbx,rax
  406cbc:	je     406c5d <_start@@Base+0x122d>
  406cbe:	mov    QWORD PTR [r12],0x8
  406cc6:	mov    rbx,rax
  406cc9:	mov    DWORD PTR [rbp+0x0],0x0
  406cd0:	jmp    406c5d <_start@@Base+0x122d>
  406cd2:	nop    WORD PTR [rax+rax*1+0x0]
  406cd8:	and    rax,0xffffffffff000000
  406cde:	movabs rdx,0x42656c6c65000000
  406ce8:	cmp    rax,rdx
  406ceb:	jne    406c5d <_start@@Base+0x122d>
  406cf1:	mov    r8,r9
  406cf4:	mov    ecx,0x5
  406cf9:	mov    rdx,r10
  406cfc:	mov    rsi,rbx
  406cff:	mov    rdi,r11
  406d02:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406d07:	cmp    rbx,rax
  406d0a:	je     406c5d <_start@@Base+0x122d>
  406d10:	mov    QWORD PTR [r12],0x9
  406d18:	mov    rbx,rax
  406d1b:	mov    DWORD PTR [rbp+0x0],0x0
  406d22:	jmp    406c5d <_start@@Base+0x122d>
  406d27:	nop    WORD PTR [rax+rax*1+0x0]
  406d30:	and    rax,0xffffffffff000000
  406d36:	movabs rdx,0x4f74686572000000
  406d40:	cmp    rax,rdx
  406d43:	jne    406c5d <_start@@Base+0x122d>
  406d49:	mov    r8,r9
  406d4c:	mov    ecx,0x5
  406d51:	mov    rdx,r10
  406d54:	mov    rsi,rbx
  406d57:	mov    rdi,r11
  406d5a:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406d5f:	cmp    rbx,rax
  406d62:	je     406c5d <_start@@Base+0x122d>
  406d68:	mov    QWORD PTR [r12],0xb
  406d70:	mov    rbx,rax
  406d73:	mov    DWORD PTR [rbp+0x0],0x0
  406d7a:	jmp    406c5d <_start@@Base+0x122d>
  406d7f:	nop
  406d80:	mov    r8,r9
  406d83:	mov    ecx,0x4
  406d88:	mov    rdx,r10
  406d8b:	mov    rsi,rbx
  406d8e:	mov    rdi,r11
  406d91:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406d96:	cmp    rbx,rax
  406d99:	je     406c5d <_start@@Base+0x122d>
  406d9f:	mov    QWORD PTR [r12],0x0
  406da7:	mov    rbx,rax
  406daa:	mov    DWORD PTR [rbp+0x0],0x0
  406db1:	jmp    406c5d <_start@@Base+0x122d>
  406db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dc0:	mov    r8,r9
  406dc3:	mov    ecx,0x5
  406dc8:	mov    rdx,r10
  406dcb:	mov    rsi,rbx
  406dce:	mov    rdi,r11
  406dd1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406dd6:	cmp    rbx,rax
  406dd9:	je     406c5d <_start@@Base+0x122d>
  406ddf:	mov    QWORD PTR [r12],0x2
  406de7:	mov    rbx,rax
  406dea:	mov    DWORD PTR [rbp+0x0],0x0
  406df1:	jmp    406c5d <_start@@Base+0x122d>
  406df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e00:	mov    r8,r9
  406e03:	mov    ecx,0x6
  406e08:	mov    rdx,r10
  406e0b:	mov    rsi,rbx
  406e0e:	mov    rdi,r11
  406e11:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406e16:	cmp    rbx,rax
  406e19:	je     406c5d <_start@@Base+0x122d>
  406e1f:	mov    QWORD PTR [r12],0xff
  406e27:	mov    rbx,rax
  406e2a:	mov    DWORD PTR [rbp+0x0],0x0
  406e31:	jmp    406c5d <_start@@Base+0x122d>
  406e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e40:	push   r15
  406e42:	mov    rax,rdx
  406e45:	push   r14
  406e47:	push   r13
  406e49:	push   r12
  406e4b:	sub    rax,rsi
  406e4e:	push   rbp
  406e4f:	push   rbx
  406e50:	mov    r13,rdi
  406e53:	mov    rbx,rsi
  406e56:	mov    r12,rdx
  406e59:	mov    r14,rcx
  406e5c:	sub    rsp,0x18
  406e60:	cmp    rax,0x7
  406e64:	mov    r15,r8
  406e67:	jbe    406fb0 <_start@@Base+0x1580>
  406e6d:	movbe  rbp,QWORD PTR [rsi]
  406e72:	movabs rax,0x4d6f6e73746571ff
  406e7c:	cmp    rbp,rax
  406e7f:	ja     406eb8 <_start@@Base+0x1488>
  406e81:	movabs rax,0xffffff0000000000
  406e8b:	and    rbp,rax
  406e8e:	movabs rax,0x416c740000000000
  406e98:	cmp    rbp,rax
  406e9b:	je     406fd0 <_start@@Base+0x15a0>
  406ea1:	mov    rax,rbx
  406ea4:	add    rsp,0x18
  406ea8:	pop    rbx
  406ea9:	pop    rbp
  406eaa:	pop    r12
  406eac:	pop    r13
  406eae:	pop    r14
  406eb0:	pop    r15
  406eb2:	ret    
  406eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  406eb8:	movabs rax,0x4d6f6e7374657232
  406ec2:	cmp    rbp,rax
  406ec5:	je     407008 <_start@@Base+0x15d8>
  406ecb:	mov    rdx,rbp
  406ece:	movabs rax,0x4d6f6e7374657200
  406ed8:	xor    dl,dl
  406eda:	cmp    rdx,rax
  406edd:	je     407060 <_start@@Base+0x1630>
  406ee3:	movabs rax,0xffffffff00000000
  406eed:	movabs rdx,0x4e4f4e4500000000
  406ef7:	and    rax,rbp
  406efa:	cmp    rax,rdx
  406efd:	je     4070a0 <_start@@Base+0x1670>
  406f03:	movabs rax,0x5465737453696d70
  406f0d:	cmp    rbp,rax
  406f10:	jne    406ea1 <_start@@Base+0x1471>
  406f12:	lea    rdi,[rbx+0x8]
  406f16:	mov    rax,r12
  406f19:	sub    rax,rdi
  406f1c:	cmp    rax,0x7
  406f20:	jbe    407040 <_start@@Base+0x1610>
  406f26:	movbe  rax,QWORD PTR [rbx+0x8]
  406f2c:	movabs rdx,0x6c655461626c6557
  406f36:	cmp    rax,rdx
  406f39:	jne    406ea1 <_start@@Base+0x1471>
  406f3f:	lea    rbp,[rbx+0x10]
  406f43:	mov    rax,r12
  406f46:	sub    rax,rbp
  406f49:	cmp    rax,0x7
  406f4d:	ja     4070d8 <_start@@Base+0x16a8>
  406f53:	mov    rsi,r12
  406f56:	mov    rdi,rbp
  406f59:	mov    QWORD PTR [rsp+0x8],r9
  406f5e:	call   405b40 <_start@@Base+0x110>
  406f63:	mov    r9,QWORD PTR [rsp+0x8]
  406f68:	xor    al,al
  406f6a:	movabs rdx,0x697468456e756d00
  406f74:	cmp    rax,rdx
  406f77:	jne    406ea1 <_start@@Base+0x1471>
  406f7d:	mov    r8,r9
  406f80:	mov    ecx,0x7
  406f85:	mov    rdx,r12
  406f88:	mov    rsi,rbp
  406f8b:	mov    rdi,r13
  406f8e:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406f93:	cmp    rbp,rax
  406f96:	je     406ea1 <_start@@Base+0x1471>
  406f9c:	mov    QWORD PTR [r15],0x2
  406fa3:	mov    DWORD PTR [r14],0x0
  406faa:	jmp    406ea4 <_start@@Base+0x1474>
  406faf:	nop
  406fb0:	mov    rsi,rdx
  406fb3:	mov    rdi,rbx
  406fb6:	mov    QWORD PTR [rsp+0x8],r9
  406fbb:	call   405b40 <_start@@Base+0x110>
  406fc0:	mov    r9,QWORD PTR [rsp+0x8]
  406fc5:	mov    rbp,rax
  406fc8:	jmp    406e72 <_start@@Base+0x1442>
  406fcd:	nop    DWORD PTR [rax]
  406fd0:	mov    r8,r9
  406fd3:	mov    ecx,0x3
  406fd8:	mov    rdx,r12
  406fdb:	mov    rsi,rbx
  406fde:	mov    rdi,r13
  406fe1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  406fe6:	cmp    rbx,rax
  406fe9:	je     406ea4 <_start@@Base+0x1474>
  406fef:	mov    QWORD PTR [r15],0x4
  406ff6:	mov    DWORD PTR [r14],0x0
  406ffd:	jmp    406ea4 <_start@@Base+0x1474>
  407002:	nop    WORD PTR [rax+rax*1+0x0]
  407008:	mov    r8,r9
  40700b:	mov    ecx,0x8
  407010:	mov    rdx,r12
  407013:	mov    rsi,rbx
  407016:	mov    rdi,r13
  407019:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40701e:	cmp    rbx,rax
  407021:	je     406ea1 <_start@@Base+0x1471>
  407027:	mov    QWORD PTR [r15],0x3
  40702e:	mov    DWORD PTR [r14],0x0
  407035:	jmp    406ea4 <_start@@Base+0x1474>
  40703a:	nop    WORD PTR [rax+rax*1+0x0]
  407040:	mov    rsi,r12
  407043:	mov    QWORD PTR [rsp+0x8],r9
  407048:	call   405b40 <_start@@Base+0x110>
  40704d:	mov    r9,QWORD PTR [rsp+0x8]
  407052:	jmp    406f2c <_start@@Base+0x14fc>
  407057:	nop    WORD PTR [rax+rax*1+0x0]
  407060:	mov    r8,r9
  407063:	mov    ecx,0x7
  407068:	mov    rdx,r12
  40706b:	mov    rsi,rbx
  40706e:	mov    rdi,r13
  407071:	mov    QWORD PTR [rsp+0x8],r9
  407076:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40707b:	cmp    rbx,rax
  40707e:	mov    r9,QWORD PTR [rsp+0x8]
  407083:	je     406ee3 <_start@@Base+0x14b3>
  407089:	mov    QWORD PTR [r15],0x1
  407090:	mov    DWORD PTR [r14],0x0
  407097:	jmp    406ea4 <_start@@Base+0x1474>
  40709c:	nop    DWORD PTR [rax+0x0]
  4070a0:	mov    r8,r9
  4070a3:	mov    ecx,0x4
  4070a8:	mov    rdx,r12
  4070ab:	mov    rsi,rbx
  4070ae:	mov    rdi,r13
  4070b1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4070b6:	cmp    rbx,rax
  4070b9:	je     406ea1 <_start@@Base+0x1471>
  4070bf:	mov    QWORD PTR [r15],0x0
  4070c6:	mov    DWORD PTR [r14],0x0
  4070cd:	jmp    406ea4 <_start@@Base+0x1474>
  4070d2:	nop    WORD PTR [rax+rax*1+0x0]
  4070d8:	movbe  rax,QWORD PTR [rbx+0x10]
  4070de:	jmp    406f68 <_start@@Base+0x1538>
  4070e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4070ee:	xchg   ax,ax
  4070f0:	push   r13
  4070f2:	mov    rax,rdx
  4070f5:	push   r12
  4070f7:	push   rbp
  4070f8:	push   rbx
  4070f9:	sub    rax,rsi
  4070fc:	mov    r11,rdi
  4070ff:	mov    rbx,rsi
  407102:	mov    r10,rdx
  407105:	sub    rsp,0x8
  407109:	cmp    rax,0x7
  40710d:	mov    rbp,rcx
  407110:	mov    r12,r8
  407113:	jbe    407160 <_start@@Base+0x1730>
  407115:	movbe  rax,QWORD PTR [rsi]
  40711a:	movabs rdx,0x496e506172656e74
  407124:	cmp    rax,rdx
  407127:	je     40717a <_start@@Base+0x174a>
  407129:	movabs rdx,0xffffffff00000000
  407133:	and    rax,rdx
  407136:	movabs rdx,0x4e4f4e4500000000
  407140:	cmp    rax,rdx
  407143:	je     407228 <_start@@Base+0x17f8>
  407149:	mov    rax,rbx
  40714c:	add    rsp,0x8
  407150:	pop    rbx
  407151:	pop    rbp
  407152:	pop    r12
  407154:	pop    r13
  407156:	ret    
  407157:	nop    WORD PTR [rax+rax*1+0x0]
  407160:	mov    rsi,rdx
  407163:	mov    rdi,rbx
  407166:	call   405b40 <_start@@Base+0x110>
  40716b:	movabs rdx,0x496e506172656e74
  407175:	cmp    rax,rdx
  407178:	jne    407129 <_start@@Base+0x16f9>
  40717a:	lea    rdi,[rbx+0x8]
  40717e:	mov    rax,r10
  407181:	sub    rax,rdi
  407184:	cmp    rax,0x7
  407188:	ja     407218 <_start@@Base+0x17e8>
  40718e:	mov    rsi,r10
  407191:	call   405b40 <_start@@Base+0x110>
  407196:	movabs rdx,0x4e616d6573706163
  4071a0:	cmp    rax,rdx
  4071a3:	jne    407149 <_start@@Base+0x1719>
  4071a5:	lea    r13,[rbx+0x10]
  4071a9:	mov    rax,r10
  4071ac:	sub    rax,r13
  4071af:	cmp    rax,0x7
  4071b3:	jbe    407268 <_start@@Base+0x1838>
  4071b9:	movbe  rax,QWORD PTR [rbx+0x10]
  4071bf:	movabs rdx,0xff00000000000000
  4071c9:	and    rax,rdx
  4071cc:	movabs rdx,0x6500000000000000
  4071d6:	cmp    rax,rdx
  4071d9:	jne    407149 <_start@@Base+0x1719>
  4071df:	mov    r8,r9
  4071e2:	mov    ecx,0x1
  4071e7:	mov    rdx,r10
  4071ea:	mov    rsi,r13
  4071ed:	mov    rdi,r11
  4071f0:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4071f5:	cmp    r13,rax
  4071f8:	je     407149 <_start@@Base+0x1719>
  4071fe:	mov    QWORD PTR [r12],0x1
  407206:	mov    DWORD PTR [rbp+0x0],0x0
  40720d:	jmp    40714c <_start@@Base+0x171c>
  407212:	nop    WORD PTR [rax+rax*1+0x0]
  407218:	movbe  rax,QWORD PTR [rbx+0x8]
  40721e:	jmp    407196 <_start@@Base+0x1766>
  407223:	nop    DWORD PTR [rax+rax*1+0x0]
  407228:	mov    r8,r9
  40722b:	mov    ecx,0x4
  407230:	mov    rdx,r10
  407233:	mov    rsi,rbx
  407236:	mov    rdi,r11
  407239:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40723e:	cmp    rbx,rax
  407241:	je     40714c <_start@@Base+0x171c>
  407247:	mov    QWORD PTR [r12],0x0
  40724f:	mov    DWORD PTR [rbp+0x0],0x0
  407256:	add    rsp,0x8
  40725a:	pop    rbx
  40725b:	pop    rbp
  40725c:	pop    r12
  40725e:	pop    r13
  407260:	ret    
  407261:	nop    DWORD PTR [rax+0x0]
  407268:	mov    rsi,r10
  40726b:	mov    rdi,r13
  40726e:	call   405b40 <_start@@Base+0x110>
  407273:	jmp    4071bf <_start@@Base+0x178f>
  407278:	nop    DWORD PTR [rax+rax*1+0x0]
  407280:	mov    rax,rdx
  407283:	push   r12
  407285:	mov    r11,rdi
  407288:	sub    rax,rsi
  40728b:	push   rbp
  40728c:	mov    r10,rdx
  40728f:	cmp    rax,0x7
  407293:	push   rbx
  407294:	mov    rbp,rcx
  407297:	mov    rbx,rsi
  40729a:	mov    r12,r8
  40729d:	jbe    407348 <_start@@Base+0x1918>
  4072a3:	movbe  rax,QWORD PTR [rsi]
  4072a8:	movabs rdx,0x68657831ffffffff
  4072b2:	cmp    rax,rdx
  4072b5:	ja     4072e0 <_start@@Base+0x18b0>
  4072b7:	movabs rdx,0xffffffff00000000
  4072c1:	and    rax,rdx
  4072c4:	movabs rdx,0x6865783100000000
  4072ce:	cmp    rax,rdx
  4072d1:	je     407360 <_start@@Base+0x1930>
  4072d7:	mov    rax,rbx
  4072da:	pop    rbx
  4072db:	pop    rbp
  4072dc:	pop    r12
  4072de:	ret    
  4072df:	nop
  4072e0:	mov    rcx,rax
  4072e3:	movabs rdx,0x6865786e65670000
  4072ed:	xor    cx,cx
  4072f0:	cmp    rcx,rdx
  4072f3:	je     4073a0 <_start@@Base+0x1970>
  4072f9:	movabs rdx,0xffffffff00000000
  407303:	and    rax,rdx
  407306:	movabs rdx,0x6865783200000000
  407310:	cmp    rax,rdx
  407313:	jne    4072d7 <_start@@Base+0x18a7>
  407315:	mov    r8,r9
  407318:	mov    ecx,0x4
  40731d:	mov    rdx,r10
  407320:	mov    rsi,rbx
  407323:	mov    rdi,r11
  407326:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40732b:	cmp    rbx,rax
  40732e:	je     4072d7 <_start@@Base+0x18a7>
  407330:	mov    QWORD PTR [r12],0x7eafbeaf
  407338:	mov    rbx,rax
  40733b:	mov    DWORD PTR [rbp+0x0],0x0
  407342:	jmp    4072d7 <_start@@Base+0x18a7>
  407344:	nop    DWORD PTR [rax+0x0]
  407348:	mov    rsi,rdx
  40734b:	mov    rdi,rbx
  40734e:	call   405b40 <_start@@Base+0x110>
  407353:	jmp    4072a8 <_start@@Base+0x1878>
  407358:	nop    DWORD PTR [rax+rax*1+0x0]
  407360:	mov    r8,r9
  407363:	mov    ecx,0x4
  407368:	mov    rdx,r10
  40736b:	mov    rsi,rbx
  40736e:	mov    rdi,r11
  407371:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  407376:	cmp    rbx,rax
  407379:	je     4072d7 <_start@@Base+0x18a7>
  40737f:	mov    QWORD PTR [r12],0x3
  407387:	mov    rbx,rax
  40738a:	mov    DWORD PTR [rbp+0x0],0x0
  407391:	jmp    4072d7 <_start@@Base+0x18a7>
  407396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073a0:	mov    r8,r9
  4073a3:	mov    ecx,0x6
  4073a8:	mov    rdx,r10
  4073ab:	mov    rsi,rbx
  4073ae:	mov    rdi,r11
  4073b1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4073b6:	cmp    rbx,rax
  4073b9:	je     4072d7 <_start@@Base+0x18a7>
  4073bf:	mov    QWORD PTR [r12],0xfffffffffffffffe
  4073c7:	mov    rbx,rax
  4073ca:	mov    DWORD PTR [rbp+0x0],0x1
  4073d1:	jmp    4072d7 <_start@@Base+0x18a7>
  4073d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073e0:	mov    rax,rdx
  4073e3:	push   r12
  4073e5:	mov    r10,rdi
  4073e8:	sub    rax,rsi
  4073eb:	push   rbp
  4073ec:	mov    r12,rsi
  4073ef:	cmp    rax,0x7
  4073f3:	push   rbx
  4073f4:	mov    r11,rdx
  4073f7:	mov    rbx,rcx
  4073fa:	mov    rbp,r8
  4073fd:	jbe    4074b0 <_start@@Base+0x1a80>
  407403:	movbe  rax,QWORD PTR [rsi]
  407408:	movabs rdx,0x696e7431ffffffff
  407412:	cmp    rax,rdx
  407415:	ja     407440 <_start@@Base+0x1a10>
  407417:	movabs rdx,0xffffffff00000000
  407421:	and    rax,rdx
  407424:	movabs rdx,0x696e743100000000
  40742e:	cmp    rax,rdx
  407431:	je     407518 <_start@@Base+0x1ae8>
  407437:	mov    rax,r12
  40743a:	pop    rbx
  40743b:	pop    rbp
  40743c:	pop    r12
  40743e:	ret    
  40743f:	nop
  407440:	movabs rdx,0x696e746e6566ffff
  40744a:	cmp    rax,rdx
  40744d:	jbe    4074c0 <_start@@Base+0x1a90>
  40744f:	mov    rcx,rax
  407452:	movabs rdx,0x696e746e65673200
  40745c:	xor    cl,cl
  40745e:	cmp    rcx,rdx
  407461:	je     407550 <_start@@Base+0x1b20>
  407467:	xor    ax,ax
  40746a:	movabs rdx,0x696e746e65670000
  407474:	cmp    rax,rdx
  407477:	jne    407437 <_start@@Base+0x1a07>
  407479:	mov    r8,r9
  40747c:	mov    ecx,0x6
  407481:	mov    rdx,r11
  407484:	mov    rsi,r12
  407487:	mov    rdi,r10
  40748a:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40748f:	cmp    r12,rax
  407492:	je     407437 <_start@@Base+0x1a07>
  407494:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
  40749c:	mov    r12,rax
  40749f:	mov    DWORD PTR [rbx],0x1
  4074a5:	jmp    407437 <_start@@Base+0x1a07>
  4074a7:	nop    WORD PTR [rax+rax*1+0x0]
  4074b0:	mov    rsi,rdx
  4074b3:	mov    rdi,r12
  4074b6:	call   405b40 <_start@@Base+0x110>
  4074bb:	jmp    407408 <_start@@Base+0x19d8>
  4074c0:	movabs rdx,0xffffffff00000000
  4074ca:	and    rax,rdx
  4074cd:	movabs rdx,0x696e743200000000
  4074d7:	cmp    rax,rdx
  4074da:	jne    407437 <_start@@Base+0x1a07>
  4074e0:	mov    r8,r9
  4074e3:	mov    ecx,0x4
  4074e8:	mov    rdx,r11
  4074eb:	mov    rsi,r12
  4074ee:	mov    rdi,r10
  4074f1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4074f6:	cmp    r12,rax
  4074f9:	je     407437 <_start@@Base+0x1a07>
  4074ff:	mov    QWORD PTR [rbp+0x0],0x2a
  407507:	mov    r12,rax
  40750a:	mov    DWORD PTR [rbx],0x0
  407510:	jmp    407437 <_start@@Base+0x1a07>
  407515:	nop    DWORD PTR [rax]
  407518:	mov    r8,r9
  40751b:	mov    ecx,0x4
  407520:	mov    rdx,r11
  407523:	mov    rsi,r12
  407526:	mov    rdi,r10
  407529:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40752e:	cmp    r12,rax
  407531:	je     407437 <_start@@Base+0x1a07>
  407537:	mov    QWORD PTR [rbp+0x0],0x2
  40753f:	mov    r12,rax
  407542:	mov    DWORD PTR [rbx],0x0
  407548:	jmp    407437 <_start@@Base+0x1a07>
  40754d:	nop    DWORD PTR [rax]
  407550:	mov    r8,r9
  407553:	mov    ecx,0x7
  407558:	mov    rdx,r11
  40755b:	mov    rsi,r12
  40755e:	mov    rdi,r10
  407561:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  407566:	cmp    r12,rax
  407569:	je     407437 <_start@@Base+0x1a07>
  40756f:	mov    QWORD PTR [rbp+0x0],0xffffffffffffffff
  407577:	mov    r12,rax
  40757a:	mov    DWORD PTR [rbx],0x1
  407580:	jmp    407437 <_start@@Base+0x1a07>
  407585:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407590:	mov    rax,rdx
  407593:	push   r12
  407595:	mov    r11,rdi
  407598:	sub    rax,rsi
  40759b:	push   rbp
  40759c:	mov    r10,rdx
  40759f:	cmp    rax,0x7
  4075a3:	push   rbx
  4075a4:	mov    rbp,rcx
  4075a7:	mov    rbx,rsi
  4075aa:	mov    r12,r8
  4075ad:	jbe    407648 <_start@@Base+0x1c18>
  4075b3:	movbe  rax,QWORD PTR [rsi]
  4075b8:	movabs rdx,0x6e656731ffffffff
  4075c2:	cmp    rax,rdx
  4075c5:	movabs rdx,0xffffffff00000000
  4075cf:	ja     4075f0 <_start@@Base+0x1bc0>
  4075d1:	and    rax,rdx
  4075d4:	movabs rdx,0x6e65673100000000
  4075de:	cmp    rax,rdx
  4075e1:	je     407660 <_start@@Base+0x1c30>
  4075e3:	mov    rax,rbx
  4075e6:	pop    rbx
  4075e7:	pop    rbp
  4075e8:	pop    r12
  4075ea:	ret    
  4075eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4075f0:	and    rax,rdx
  4075f3:	movabs rdx,0x6e65673300000000
  4075fd:	cmp    rax,rdx
  407600:	je     4076a0 <_start@@Base+0x1c70>
  407606:	movabs rdx,0x6e65673200000000
  407610:	cmp    rax,rdx
  407613:	jne    4075e3 <_start@@Base+0x1bb3>
  407615:	mov    r8,r9
  407618:	mov    ecx,0x4
  40761d:	mov    rdx,r10
  407620:	mov    rsi,rbx
  407623:	mov    rdi,r11
  407626:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40762b:	cmp    rbx,rax
  40762e:	je     4075e3 <_start@@Base+0x1bb3>
  407630:	mov    QWORD PTR [r12],0xfffffffffffffff5
  407638:	mov    rbx,rax
  40763b:	mov    DWORD PTR [rbp+0x0],0x1
  407642:	jmp    4075e3 <_start@@Base+0x1bb3>
  407644:	nop    DWORD PTR [rax+0x0]
  407648:	mov    rsi,rdx
  40764b:	mov    rdi,rbx
  40764e:	call   405b40 <_start@@Base+0x110>
  407653:	jmp    4075b8 <_start@@Base+0x1b88>
  407658:	nop    DWORD PTR [rax+rax*1+0x0]
  407660:	mov    r8,r9
  407663:	mov    ecx,0x4
  407668:	mov    rdx,r10
  40766b:	mov    rsi,rbx
  40766e:	mov    rdi,r11
  407671:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  407676:	cmp    rbx,rax
  407679:	je     4075e3 <_start@@Base+0x1bb3>
  40767f:	mov    QWORD PTR [r12],0xfffffffffffffff4
  407687:	mov    rbx,rax
  40768a:	mov    DWORD PTR [rbp+0x0],0x1
  407691:	jmp    4075e3 <_start@@Base+0x1bb3>
  407696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076a0:	mov    r8,r9
  4076a3:	mov    ecx,0x4
  4076a8:	mov    rdx,r10
  4076ab:	mov    rsi,rbx
  4076ae:	mov    rdi,r11
  4076b1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4076b6:	cmp    rbx,rax
  4076b9:	je     4075e3 <_start@@Base+0x1bb3>
  4076bf:	mov    QWORD PTR [r12],0xfffffffffffffff6
  4076c7:	mov    rbx,rax
  4076ca:	mov    DWORD PTR [rbp+0x0],0x1
  4076d1:	jmp    4075e3 <_start@@Base+0x1bb3>
  4076d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076e0:	mov    rax,rdx
  4076e3:	push   r12
  4076e5:	mov    r11,rdi
  4076e8:	sub    rax,rsi
  4076eb:	push   rbp
  4076ec:	mov    r10,rdx
  4076ef:	cmp    rax,0x7
  4076f3:	push   rbx
  4076f4:	mov    rbp,rcx
  4076f7:	mov    rbx,rsi
  4076fa:	mov    r12,r8
  4076fd:	jbe    4077a8 <_start@@Base+0x1d78>
  407703:	movbe  rax,QWORD PTR [rsi]
  407708:	movabs rdx,0x477265656dffffff
  407712:	cmp    rax,rdx
  407715:	ja     407740 <_start@@Base+0x1d10>
  407717:	movabs rdx,0xffffffff00000000
  407721:	and    rax,rdx
  407724:	movabs rdx,0x426c756500000000
  40772e:	cmp    rax,rdx
  407731:	je     4077c0 <_start@@Base+0x1d90>
  407737:	mov    rax,rbx
  40773a:	pop    rbx
  40773b:	pop    rbp
  40773c:	pop    r12
  40773e:	ret    
  40773f:	nop
  407740:	movabs rdx,0xffffff0000000000
  40774a:	movabs rcx,0x5265640000000000
  407754:	and    rdx,rax
  407757:	cmp    rdx,rcx
  40775a:	je     407800 <_start@@Base+0x1dd0>
  407760:	and    rax,0xffffffffff000000
  407766:	movabs rdx,0x477265656e000000
  407770:	cmp    rax,rdx
  407773:	jne    407737 <_start@@Base+0x1d07>
  407775:	mov    r8,r9
  407778:	mov    ecx,0x5
  40777d:	mov    rdx,r10
  407780:	mov    rsi,rbx
  407783:	mov    rdi,r11
  407786:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40778b:	cmp    rbx,rax
  40778e:	je     407737 <_start@@Base+0x1d07>
  407790:	mov    QWORD PTR [r12],0x2
  407798:	mov    rbx,rax
  40779b:	mov    DWORD PTR [rbp+0x0],0x0
  4077a2:	jmp    407737 <_start@@Base+0x1d07>
  4077a4:	nop    DWORD PTR [rax+0x0]
  4077a8:	mov    rsi,rdx
  4077ab:	mov    rdi,rbx
  4077ae:	call   405b40 <_start@@Base+0x110>
  4077b3:	jmp    407708 <_start@@Base+0x1cd8>
  4077b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4077c0:	mov    r8,r9
  4077c3:	mov    ecx,0x4
  4077c8:	mov    rdx,r10
  4077cb:	mov    rsi,rbx
  4077ce:	mov    rdi,r11
  4077d1:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  4077d6:	cmp    rbx,rax
  4077d9:	je     407737 <_start@@Base+0x1d07>
  4077df:	mov    QWORD PTR [r12],0x8
  4077e7:	mov    rbx,rax
  4077ea:	mov    DWORD PTR [rbp+0x0],0x0
  4077f1:	jmp    407737 <_start@@Base+0x1d07>
  4077f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407800:	mov    r8,r9
  407803:	mov    ecx,0x3
  407808:	mov    rdx,r10
  40780b:	mov    rsi,rbx
  40780e:	mov    rdi,r11
  407811:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  407816:	cmp    rbx,rax
  407819:	je     407737 <_start@@Base+0x1d07>
  40781f:	mov    QWORD PTR [r12],0x1
  407827:	mov    rbx,rax
  40782a:	mov    DWORD PTR [rbp+0x0],0x0
  407831:	jmp    407737 <_start@@Base+0x1d07>
  407836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407840:	push   rbx
  407841:	xor    esi,esi
  407843:	mov    ecx,0x8
  407848:	mov    edx,0x8
  40784d:	mov    rbx,rdi
  407850:	call   419450 <flatcc_verify_field@@Base>
  407855:	test   eax,eax
  407857:	je     407860 <_start@@Base+0x1e30>
  407859:	pop    rbx
  40785a:	ret    
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    rdi,rbx
  407863:	mov    ecx,0x4
  407868:	mov    edx,0x4
  40786d:	pop    rbx
  40786e:	mov    esi,0x1
  407873:	jmp    419450 <flatcc_verify_field@@Base>
  407878:	nop    DWORD PTR [rax+rax*1+0x0]
  407880:	push   rbx
  407881:	xor    esi,esi
  407883:	mov    ecx,0x1
  407888:	mov    edx,0x1
  40788d:	mov    rbx,rdi
  407890:	call   419450 <flatcc_verify_field@@Base>
  407895:	test   eax,eax
  407897:	je     4078a0 <_start@@Base+0x1e70>
  407899:	pop    rbx
  40789a:	ret    
  40789b:	nop    DWORD PTR [rax+rax*1+0x0]
  4078a0:	mov    ecx,0x1
  4078a5:	mov    edx,0x1
  4078aa:	mov    esi,0x1
  4078af:	mov    rdi,rbx
  4078b2:	call   419450 <flatcc_verify_field@@Base>
  4078b7:	test   eax,eax
  4078b9:	jne    407899 <_start@@Base+0x1e69>
  4078bb:	mov    ecx,0x1
  4078c0:	mov    edx,0x1
  4078c5:	mov    esi,0x2
  4078ca:	mov    rdi,rbx
  4078cd:	call   419450 <flatcc_verify_field@@Base>
  4078d2:	test   eax,eax
  4078d4:	jne    407899 <_start@@Base+0x1e69>
  4078d6:	mov    rdi,rbx
  4078d9:	mov    ecx,0x1
  4078de:	mov    edx,0x1
  4078e3:	pop    rbx
  4078e4:	mov    esi,0x3
  4078e9:	jmp    419450 <flatcc_verify_field@@Base>
  4078ee:	xchg   ax,ax
  4078f0:	push   rbx
  4078f1:	xor    edx,edx
  4078f3:	xor    esi,esi
  4078f5:	mov    rbx,rdi
  4078f8:	call   4194b0 <flatcc_verify_string_field@@Base>
  4078fd:	test   eax,eax
  4078ff:	je     407908 <_start@@Base+0x1ed8>
  407901:	pop    rbx
  407902:	ret    
  407903:	nop    DWORD PTR [rax+rax*1+0x0]
  407908:	mov    ecx,0x8
  40790d:	mov    edx,0x8
  407912:	mov    esi,0x1
  407917:	mov    rdi,rbx
  40791a:	call   419450 <flatcc_verify_field@@Base>
  40791f:	test   eax,eax
  407921:	jne    407901 <_start@@Base+0x1ed1>
  407923:	mov    rdi,rbx
  407926:	mov    ecx,0x2
  40792b:	mov    edx,0x2
  407930:	pop    rbx
  407931:	mov    esi,0x2
  407936:	jmp    419450 <flatcc_verify_field@@Base>
  40793b:	nop    DWORD PTR [rax+rax*1+0x0]
  407940:	push   rbx
  407941:	xor    edx,edx
  407943:	xor    esi,esi
  407945:	mov    rbx,rdi
  407948:	call   4194b0 <flatcc_verify_string_field@@Base>
  40794d:	test   eax,eax
  40794f:	je     407958 <_start@@Base+0x1f28>
  407951:	pop    rbx
  407952:	ret    
  407953:	nop    DWORD PTR [rax+rax*1+0x0]
  407958:	mov    ecx,0x4
  40795d:	mov    edx,0x4
  407962:	mov    esi,0x1
  407967:	mov    rdi,rbx
  40796a:	call   419450 <flatcc_verify_field@@Base>
  40796f:	test   eax,eax
  407971:	jne    407951 <_start@@Base+0x1f21>
  407973:	xor    edx,edx
  407975:	mov    esi,0x2
  40797a:	mov    rdi,rbx
  40797d:	call   4194b0 <flatcc_verify_string_field@@Base>
  407982:	test   eax,eax
  407984:	jne    407951 <_start@@Base+0x1f21>
  407986:	mov    ecx,0x8
  40798b:	mov    edx,0x8
  407990:	mov    esi,0x3
  407995:	mov    rdi,rbx
  407998:	call   419450 <flatcc_verify_field@@Base>
  40799d:	test   eax,eax
  40799f:	jne    407951 <_start@@Base+0x1f21>
  4079a1:	xor    edx,edx
  4079a3:	mov    esi,0x4
  4079a8:	mov    rdi,rbx
  4079ab:	call   4194b0 <flatcc_verify_string_field@@Base>
  4079b0:	test   eax,eax
  4079b2:	jne    407951 <_start@@Base+0x1f21>
  4079b4:	mov    ecx,0x8
  4079b9:	mov    edx,0x8
  4079be:	mov    esi,0x5
  4079c3:	mov    rdi,rbx
  4079c6:	call   419450 <flatcc_verify_field@@Base>
  4079cb:	test   eax,eax
  4079cd:	jne    407951 <_start@@Base+0x1f21>
  4079cf:	mov    ecx,0x4
  4079d4:	mov    edx,0x4
  4079d9:	mov    esi,0x6
  4079de:	mov    rdi,rbx
  4079e1:	call   419450 <flatcc_verify_field@@Base>
  4079e6:	test   eax,eax
  4079e8:	jne    407951 <_start@@Base+0x1f21>
  4079ee:	mov    ecx,0x8
  4079f3:	mov    edx,0x8
  4079f8:	mov    esi,0x7
  4079fd:	mov    rdi,rbx
  407a00:	call   419450 <flatcc_verify_field@@Base>
  407a05:	test   eax,eax
  407a07:	jne    407951 <_start@@Base+0x1f21>
  407a0d:	mov    rdi,rbx
  407a10:	mov    ecx,0x4
  407a15:	mov    edx,0x4
  407a1a:	pop    rbx
  407a1b:	mov    esi,0x8
  407a20:	jmp    419450 <flatcc_verify_field@@Base>
  407a25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407a30:	push   rbx
  407a31:	lea    rcx,[rip+0xffffffffffffff08]        # 407940 <_start@@Base+0x1f10>
  407a38:	xor    edx,edx
  407a3a:	xor    esi,esi
  407a3c:	mov    rbx,rdi
  407a3f:	call   4197e0 <flatcc_verify_table_field@@Base>
  407a44:	test   eax,eax
  407a46:	je     407a50 <_start@@Base+0x2020>
  407a48:	pop    rbx
  407a49:	ret    
  407a4a:	nop    WORD PTR [rax+rax*1+0x0]
  407a50:	lea    rcx,[rip+0xbc9]        # 408620 <_start@@Base+0x2bf0>
  407a57:	xor    edx,edx
  407a59:	mov    esi,0x1
  407a5e:	mov    rdi,rbx
  407a61:	call   4197e0 <flatcc_verify_table_field@@Base>
  407a66:	test   eax,eax
  407a68:	jne    407a48 <_start@@Base+0x2018>
  407a6a:	mov    rdi,rbx
  407a6d:	lea    rcx,[rip+0xfffffffffffffdcc]        # 407840 <_start@@Base+0x1e10>
  407a74:	xor    edx,edx
  407a76:	pop    rbx
  407a77:	mov    esi,0x2
  407a7c:	jmp    4197e0 <flatcc_verify_table_field@@Base>
  407a81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407a8c:	nop    DWORD PTR [rax+0x0]
  407a90:	push   rbx
  407a91:	xor    esi,esi
  407a93:	mov    ecx,0x10
  407a98:	mov    edx,0x20
  407a9d:	mov    rbx,rdi
  407aa0:	call   419450 <flatcc_verify_field@@Base>
  407aa5:	test   eax,eax
  407aa7:	je     407ab0 <_start@@Base+0x2080>
  407aa9:	pop    rbx
  407aaa:	ret    
  407aab:	nop    DWORD PTR [rax+rax*1+0x0]
  407ab0:	mov    ecx,0x2
  407ab5:	mov    edx,0x2
  407aba:	mov    esi,0x2
  407abf:	mov    rdi,rbx
  407ac2:	call   419450 <flatcc_verify_field@@Base>
  407ac7:	test   eax,eax
  407ac9:	jne    407aa9 <_start@@Base+0x2079>
  407acb:	mov    ecx,0x2
  407ad0:	mov    edx,0x2
  407ad5:	mov    esi,0x1
  407ada:	mov    rdi,rbx
  407add:	call   419450 <flatcc_verify_field@@Base>
  407ae2:	test   eax,eax
  407ae4:	jne    407aa9 <_start@@Base+0x2079>
  407ae6:	mov    edx,0x1
  407aeb:	mov    esi,0x3
  407af0:	mov    rdi,rbx
  407af3:	call   4194b0 <flatcc_verify_string_field@@Base>
  407af8:	test   eax,eax
  407afa:	jne    407aa9 <_start@@Base+0x2079>
  407afc:	mov    ecx,0x1
  407b01:	mov    edx,0x1
  407b06:	mov    esi,0x6
  407b0b:	mov    rdi,rbx
  407b0e:	call   419450 <flatcc_verify_field@@Base>
  407b13:	test   eax,eax
  407b15:	jne    407aa9 <_start@@Base+0x2079>
  407b17:	xor    edx,edx
  407b19:	mov    r9d,0xffffffff
  407b1f:	mov    r8d,0x1
  407b25:	mov    ecx,0x1
  407b2a:	mov    esi,0x5
  407b2f:	mov    rdi,rbx
  407b32:	call   419560 <flatcc_verify_vector_field@@Base>
  407b37:	test   eax,eax
  407b39:	jne    407aa9 <_start@@Base+0x2079>
  407b3f:	lea    rcx,[rip+0xffffffffffffff4a]        # 407a90 <_start@@Base+0x2060>
  407b46:	xor    edx,edx
  407b48:	mov    esi,0xb
  407b4d:	mov    rdi,rbx
  407b50:	call   419930 <flatcc_verify_table_vector_field@@Base>
  407b55:	test   eax,eax
  407b57:	jne    407aa9 <_start@@Base+0x2079>
  407b5d:	xor    edx,edx
  407b5f:	mov    esi,0xa
  407b64:	mov    rdi,rbx
  407b67:	call   419640 <flatcc_verify_string_vector_field@@Base>
  407b6c:	test   eax,eax
  407b6e:	jne    407aa9 <_start@@Base+0x2079>
  407b74:	xor    edx,edx
  407b76:	mov    esi,0x1c
  407b7b:	mov    rdi,rbx
  407b7e:	call   419640 <flatcc_verify_string_vector_field@@Base>
  407b83:	test   eax,eax
  407b85:	jne    407aa9 <_start@@Base+0x2079>
  407b8b:	xor    edx,edx
  407b8d:	mov    r9d,0xffffffff
  407b93:	mov    r8d,0x1
  407b99:	mov    ecx,0x1
  407b9e:	mov    esi,0x18
  407ba3:	mov    rdi,rbx
  407ba6:	call   419560 <flatcc_verify_vector_field@@Base>
  407bab:	test   eax,eax
  407bad:	jne    407aa9 <_start@@Base+0x2079>
  407bb3:	xor    edx,edx
  407bb5:	mov    r9d,0x1fffffff
  407bbb:	mov    r8d,0x4
  407bc1:	mov    ecx,0x8
  407bc6:	mov    esi,0x1d
  407bcb:	mov    rdi,rbx
  407bce:	call   419560 <flatcc_verify_vector_field@@Base>
  407bd3:	test   eax,eax
  407bd5:	jne    407aa9 <_start@@Base+0x2079>
  407bdb:	lea    rcx,[rip+0xfffffffffffffeae]        # 407a90 <_start@@Base+0x2060>
  407be2:	xor    edx,edx
  407be4:	mov    esi,0xc
  407be9:	mov    rdi,rbx
  407bec:	call   4197e0 <flatcc_verify_table_field@@Base>
  407bf1:	test   eax,eax
  407bf3:	jne    407aa9 <_start@@Base+0x2079>
  407bf9:	lea    rcx,[rip+0x340]        # 407f40 <_start@@Base+0x2510>
  407c00:	xor    edx,edx
  407c02:	mov    esi,0x8
  407c07:	mov    rdi,rbx
  407c0a:	call   41a5d0 <flatcc_verify_union_field@@Base>
  407c0f:	test   eax,eax
  407c11:	jne    407aa9 <_start@@Base+0x2079>
  407c17:	xor    edx,edx
  407c19:	mov    r9d,0x3fffffff
  407c1f:	mov    r8d,0x2
  407c25:	mov    ecx,0x4
  407c2a:	mov    esi,0x9
  407c2f:	mov    rdi,rbx
  407c32:	call   419560 <flatcc_verify_vector_field@@Base>
  407c37:	test   eax,eax
  407c39:	jne    407aa9 <_start@@Base+0x2079>
  407c3f:	xor    edx,edx
  407c41:	mov    r9d,0x3fffffff
  407c47:	mov    r8d,0x2
  407c4d:	mov    ecx,0x4
  407c52:	mov    esi,0x1f
  407c57:	mov    rdi,rbx
  407c5a:	call   419560 <flatcc_verify_vector_field@@Base>
  407c5f:	test   eax,eax
  407c61:	jne    407aa9 <_start@@Base+0x2079>
  407c67:	lea    r9,[rip+0xfffffffffffffe22]        # 407a90 <_start@@Base+0x2060>
  407c6e:	xor    ecx,ecx
  407c70:	xor    edx,edx
  407c72:	mov    r8d,0x1
  407c78:	mov    esi,0xd
  407c7d:	mov    rdi,rbx
  407c80:	call   41a3e0 <flatcc_verify_table_as_nested_root@@Base>
  407c85:	test   eax,eax
  407c87:	jne    407aa9 <_start@@Base+0x2079>
  407c8d:	lea    rcx,[rip+0xfffffffffffffc5c]        # 4078f0 <_start@@Base+0x1ec0>
  407c94:	xor    edx,edx
  407c96:	mov    esi,0xe
  407c9b:	mov    rdi,rbx
  407c9e:	call   4197e0 <flatcc_verify_table_field@@Base>
  407ca3:	test   eax,eax
  407ca5:	jne    407aa9 <_start@@Base+0x2079>
  407cab:	mov    ecx,0x1
  407cb0:	mov    edx,0x1
  407cb5:	mov    esi,0xf
  407cba:	mov    rdi,rbx
  407cbd:	call   419450 <flatcc_verify_field@@Base>
  407cc2:	test   eax,eax
  407cc4:	jne    407aa9 <_start@@Base+0x2079>
  407cca:	mov    ecx,0x4
  407ccf:	mov    edx,0x4
  407cd4:	mov    esi,0x10
  407cd9:	mov    rdi,rbx
  407cdc:	call   419450 <flatcc_verify_field@@Base>
  407ce1:	test   eax,eax
  407ce3:	jne    407aa9 <_start@@Base+0x2079>
  407ce9:	mov    ecx,0x4
  407cee:	mov    edx,0x4
  407cf3:	mov    esi,0x11
  407cf8:	mov    rdi,rbx
  407cfb:	call   419450 <flatcc_verify_field@@Base>
  407d00:	test   eax,eax
  407d02:	jne    407aa9 <_start@@Base+0x2079>
  407d08:	mov    ecx,0x8
  407d0d:	mov    edx,0x8
  407d12:	mov    esi,0x12
  407d17:	mov    rdi,rbx
  407d1a:	call   419450 <flatcc_verify_field@@Base>
  407d1f:	test   eax,eax
  407d21:	jne    407aa9 <_start@@Base+0x2079>
  407d27:	mov    ecx,0x8
  407d2c:	mov    edx,0x8
  407d31:	mov    esi,0x13
  407d36:	mov    rdi,rbx
  407d39:	call   419450 <flatcc_verify_field@@Base>
  407d3e:	test   eax,eax
  407d40:	jne    407aa9 <_start@@Base+0x2079>
  407d46:	mov    ecx,0x4
  407d4b:	mov    edx,0x4
  407d50:	mov    esi,0x14
  407d55:	mov    rdi,rbx
  407d58:	call   419450 <flatcc_verify_field@@Base>
  407d5d:	test   eax,eax
  407d5f:	jne    407aa9 <_start@@Base+0x2079>
  407d65:	mov    ecx,0x4
  407d6a:	mov    edx,0x4
  407d6f:	mov    esi,0x15
  407d74:	mov    rdi,rbx
  407d77:	call   419450 <flatcc_verify_field@@Base>
  407d7c:	test   eax,eax
  407d7e:	jne    407aa9 <_start@@Base+0x2079>
  407d84:	mov    ecx,0x8
  407d89:	mov    edx,0x8
  407d8e:	mov    esi,0x16
  407d93:	mov    rdi,rbx
  407d96:	call   419450 <flatcc_verify_field@@Base>
  407d9b:	test   eax,eax
  407d9d:	jne    407aa9 <_start@@Base+0x2079>
  407da3:	mov    ecx,0x8
  407da8:	mov    edx,0x8
  407dad:	mov    esi,0x17
  407db2:	mov    rdi,rbx
  407db5:	call   419450 <flatcc_verify_field@@Base>
  407dba:	test   eax,eax
  407dbc:	jne    407aa9 <_start@@Base+0x2079>
  407dc2:	mov    ecx,0x4
  407dc7:	mov    edx,0x4
  407dcc:	mov    esi,0x19
  407dd1:	mov    rdi,rbx
  407dd4:	call   419450 <flatcc_verify_field@@Base>
  407dd9:	test   eax,eax
  407ddb:	jne    407aa9 <_start@@Base+0x2079>
  407de1:	mov    ecx,0x4
  407de6:	mov    edx,0x4
  407deb:	mov    esi,0x1a
  407df0:	mov    rdi,rbx
  407df3:	call   419450 <flatcc_verify_field@@Base>
  407df8:	test   eax,eax
  407dfa:	jne    407aa9 <_start@@Base+0x2079>
  407e00:	mov    ecx,0x4
  407e05:	mov    edx,0x4
  407e0a:	mov    esi,0x1b
  407e0f:	mov    rdi,rbx
  407e12:	call   419450 <flatcc_verify_field@@Base>
  407e17:	test   eax,eax
  407e19:	jne    407aa9 <_start@@Base+0x2079>
  407e1f:	xor    edx,edx
  407e21:	mov    r9d,0xffffffff
  407e27:	mov    r8d,0x1
  407e2d:	mov    ecx,0x1
  407e32:	mov    esi,0x1e
  407e37:	mov    rdi,rbx
  407e3a:	call   419560 <flatcc_verify_vector_field@@Base>
  407e3f:	test   eax,eax
  407e41:	jne    407aa9 <_start@@Base+0x2079>
  407e47:	xor    edx,edx
  407e49:	mov    r9d,0x1fffffff
  407e4f:	mov    r8d,0x8
  407e55:	mov    ecx,0x8
  407e5a:	mov    esi,0x20
  407e5f:	mov    rdi,rbx
  407e62:	call   419560 <flatcc_verify_vector_field@@Base>
  407e67:	test   eax,eax
  407e69:	jne    407aa9 <_start@@Base+0x2079>
  407e6f:	xor    edx,edx
  407e71:	mov    r9d,0x1fffffff
  407e77:	mov    r8d,0x8
  407e7d:	mov    ecx,0x8
  407e82:	mov    esi,0x21
  407e87:	mov    rdi,rbx
  407e8a:	call   419560 <flatcc_verify_vector_field@@Base>
  407e8f:	test   eax,eax
  407e91:	jne    407aa9 <_start@@Base+0x2079>
  407e97:	lea    rcx,[rip+0x2f2]        # 408190 <_start@@Base+0x2760>
  407e9e:	xor    edx,edx
  407ea0:	mov    esi,0x22
  407ea5:	mov    rdi,rbx
  407ea8:	call   4197e0 <flatcc_verify_table_field@@Base>
  407ead:	test   eax,eax
  407eaf:	jne    407aa9 <_start@@Base+0x2079>
  407eb5:	mov    rdi,rbx
  407eb8:	lea    rcx,[rip+0x11]        # 407ed0 <_start@@Base+0x24a0>
  407ebf:	xor    edx,edx
  407ec1:	pop    rbx
  407ec2:	mov    esi,0x23
  407ec7:	jmp    4197e0 <flatcc_verify_table_field@@Base>
  407ecc:	nop    DWORD PTR [rax+0x0]
  407ed0:	push   rbx
  407ed1:	xor    edx,edx
  407ed3:	xor    esi,esi
  407ed5:	mov    r9d,0xffffffff
  407edb:	mov    r8d,0x1
  407ee1:	mov    ecx,0x1
  407ee6:	mov    rbx,rdi
  407ee9:	call   419560 <flatcc_verify_vector_field@@Base>
  407eee:	test   eax,eax
  407ef0:	je     407ef8 <_start@@Base+0x24c8>
  407ef2:	pop    rbx
  407ef3:	ret    
  407ef4:	nop    DWORD PTR [rax+0x0]
  407ef8:	xor    edx,edx
  407efa:	mov    r9d,0xffffffff
  407f00:	mov    r8d,0x1
  407f06:	mov    ecx,0x1
  407f0b:	mov    esi,0x1
  407f10:	mov    rdi,rbx
  407f13:	call   419560 <flatcc_verify_vector_field@@Base>
  407f18:	test   eax,eax
  407f1a:	jne    407ef2 <_start@@Base+0x24c2>
  407f1c:	mov    rdi,rbx
  407f1f:	lea    r9,[rip+0xfffffffffffffb6a]        # 407a90 <_start@@Base+0x2060>
  407f26:	mov    r8d,0x1
  407f2c:	pop    rbx
  407f2d:	xor    ecx,ecx
  407f2f:	xor    edx,edx
  407f31:	mov    esi,0x2
  407f36:	jmp    41a3e0 <flatcc_verify_table_as_nested_root@@Base>
  407f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407f40:	movzx  eax,BYTE PTR [rdi+0x10]
  407f44:	cmp    al,0x2
  407f46:	je     407f88 <_start@@Base+0x2558>
  407f48:	jbe    407f70 <_start@@Base+0x2540>
  407f4a:	cmp    al,0x3
  407f4c:	je     407f60 <_start@@Base+0x2530>
  407f4e:	cmp    al,0x4
  407f50:	jne    407f80 <_start@@Base+0x2550>
  407f52:	lea    rsi,[rip+0x47]        # 407fa0 <_start@@Base+0x2570>
  407f59:	jmp    419c60 <flatcc_verify_union_table@@Base>
  407f5e:	xchg   ax,ax
  407f60:	lea    rsi,[rip+0xffffffffffffdd39]        # 405ca0 <_start@@Base+0x270>
  407f67:	jmp    419c60 <flatcc_verify_union_table@@Base>
  407f6c:	nop    DWORD PTR [rax+0x0]
  407f70:	cmp    al,0x1
  407f72:	jne    407f80 <_start@@Base+0x2550>
  407f74:	lea    rsi,[rip+0xfffffffffffffb15]        # 407a90 <_start@@Base+0x2060>
  407f7b:	jmp    419c60 <flatcc_verify_union_table@@Base>
  407f80:	xor    eax,eax
  407f82:	ret    
  407f83:	nop    DWORD PTR [rax+rax*1+0x0]
  407f88:	lea    rsi,[rip+0xfffffffffffff8f1]        # 407880 <_start@@Base+0x1e50>
  407f8f:	jmp    419c60 <flatcc_verify_union_table@@Base>
  407f94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407f9f:	nop
  407fa0:	push   rbx
  407fa1:	lea    rcx,[rip+0xfffffffffffffa88]        # 407a30 <_start@@Base+0x2000>
  407fa8:	xor    edx,edx
  407faa:	xor    esi,esi
  407fac:	mov    rbx,rdi
  407faf:	call   4197e0 <flatcc_verify_table_field@@Base>
  407fb4:	test   eax,eax
  407fb6:	je     407fc0 <_start@@Base+0x2590>
  407fb8:	pop    rbx
  407fb9:	ret    
  407fba:	nop    WORD PTR [rax+rax*1+0x0]
  407fc0:	lea    rcx,[rip+0x39]        # 408000 <_start@@Base+0x25d0>
  407fc7:	xor    edx,edx
  407fc9:	mov    esi,0x1
  407fce:	mov    rdi,rbx
  407fd1:	call   4197e0 <flatcc_verify_table_field@@Base>
  407fd6:	test   eax,eax
  407fd8:	jne    407fb8 <_start@@Base+0x2588>
  407fda:	mov    rdi,rbx
  407fdd:	lea    rcx,[rip+0xffffffffffffff5c]        # 407f40 <_start@@Base+0x2510>
  407fe4:	xor    edx,edx
  407fe6:	pop    rbx
  407fe7:	mov    esi,0x3
  407fec:	jmp    41a730 <flatcc_verify_union_vector_field@@Base>
  407ff1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407ffc:	nop    DWORD PTR [rax+0x0]
  408000:	push   rbx
  408001:	lea    rcx,[rip+0x88]        # 408090 <_start@@Base+0x2660>
  408008:	xor    edx,edx
  40800a:	mov    esi,0x1
  40800f:	mov    rbx,rdi
  408012:	call   41a5d0 <flatcc_verify_union_field@@Base>
  408017:	test   eax,eax
  408019:	je     408020 <_start@@Base+0x25f0>
  40801b:	pop    rbx
  40801c:	ret    
  40801d:	nop    DWORD PTR [rax]
  408020:	lea    rcx,[rip+0x69]        # 408090 <_start@@Base+0x2660>
  408027:	xor    edx,edx
  408029:	mov    esi,0x3
  40802e:	mov    rdi,rbx
  408031:	call   41a5d0 <flatcc_verify_union_field@@Base>
  408036:	test   eax,eax
  408038:	jne    40801b <_start@@Base+0x25eb>
  40803a:	lea    rcx,[rip+0x4f]        # 408090 <_start@@Base+0x2660>
  408041:	xor    edx,edx
  408043:	mov    esi,0x5
  408048:	mov    rdi,rbx
  40804b:	call   41a5d0 <flatcc_verify_union_field@@Base>
  408050:	test   eax,eax
  408052:	jne    40801b <_start@@Base+0x25eb>
  408054:	lea    rcx,[rip+0x35]        # 408090 <_start@@Base+0x2660>
  40805b:	xor    edx,edx
  40805d:	mov    esi,0x7
  408062:	mov    rdi,rbx
  408065:	call   41a5d0 <flatcc_verify_union_field@@Base>
  40806a:	test   eax,eax
  40806c:	jne    40801b <_start@@Base+0x25eb>
  40806e:	mov    rdi,rbx
  408071:	lea    rcx,[rip+0x18]        # 408090 <_start@@Base+0x2660>
  408078:	xor    edx,edx
  40807a:	pop    rbx
  40807b:	mov    esi,0x9
  408080:	jmp    41a730 <flatcc_verify_union_vector_field@@Base>
  408085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408090:	movzx  eax,BYTE PTR [rdi+0x10]
  408094:	cmp    al,0x9
  408096:	je     4080d0 <_start@@Base+0x26a0>
  408098:	jbe    4080b0 <_start@@Base+0x2680>
  40809a:	cmp    al,0xb
  40809c:	je     4080a4 <_start@@Base+0x2674>
  40809e:	jb     4080d0 <_start@@Base+0x26a0>
  4080a0:	cmp    al,0xff
  4080a2:	jne    4080e0 <_start@@Base+0x26b0>
  4080a4:	jmp    419dd0 <flatcc_verify_union_string@@Base>
  4080a9:	nop    DWORD PTR [rax+0x0]
  4080b0:	cmp    al,0x2
  4080b2:	je     4080e8 <_start@@Base+0x26b8>
  4080b4:	cmp    al,0x8
  4080b6:	jne    4080e0 <_start@@Base+0x26b0>
  4080b8:	mov    edx,0x2
  4080bd:	mov    esi,0x2
  4080c2:	jmp    419d80 <flatcc_verify_union_struct@@Base>
  4080c7:	nop    WORD PTR [rax+rax*1+0x0]
  4080d0:	mov    edx,0x4
  4080d5:	mov    esi,0x4
  4080da:	jmp    419d80 <flatcc_verify_union_struct@@Base>
  4080df:	nop
  4080e0:	xor    eax,eax
  4080e2:	ret    
  4080e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4080e8:	lea    rsi,[rip+0xffffffffffffdbc1]        # 405cb0 <_start@@Base+0x280>
  4080ef:	jmp    419c60 <flatcc_verify_union_table@@Base>
  4080f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4080ff:	nop
  408100:	cmp    sil,0x2
  408104:	je     408178 <_start@@Base+0x2748>
  408106:	jbe    408140 <_start@@Base+0x2710>
  408108:	cmp    sil,0x3
  40810c:	je     408128 <_start@@Base+0x26f8>
  40810e:	cmp    sil,0x4
  408112:	jne    408160 <_start@@Base+0x2730>
  408114:	lea    rsi,[rip+0x234a3]        # 42b5be <_IO_stdin_used@@Base+0x5be>
  40811b:	mov    edx,0x3
  408120:	jmp    420730 <flatcc_json_printer_enum@@Base>
  408125:	nop    DWORD PTR [rax]
  408128:	lea    rsi,[rip+0x23486]        # 42b5b5 <_IO_stdin_used@@Base+0x5b5>
  40812f:	mov    edx,0x8
  408134:	jmp    420730 <flatcc_json_printer_enum@@Base>
  408139:	nop    DWORD PTR [rax+0x0]
  408140:	cmp    sil,0x1
  408144:	jne    408160 <_start@@Base+0x2730>
  408146:	lea    rsi,[rip+0x23448]        # 42b595 <_IO_stdin_used@@Base+0x595>
  40814d:	mov    edx,0x7
  408152:	jmp    420730 <flatcc_json_printer_enum@@Base>
  408157:	nop    WORD PTR [rax+rax*1+0x0]
  408160:	lea    rsi,[rip+0x27795]        # 42f8fc <flatcc_builder_padding_base@@Base+0xadc>
  408167:	mov    edx,0x4
  40816c:	jmp    420730 <flatcc_json_printer_enum@@Base>
  408171:	nop    DWORD PTR [rax+0x0]
  408178:	lea    rsi,[rip+0x2341e]        # 42b59d <_IO_stdin_used@@Base+0x59d>
  40817f:	mov    edx,0x17
  408184:	jmp    420730 <flatcc_json_printer_enum@@Base>
  408189:	nop    DWORD PTR [rax+0x0]
  408190:	xor    eax,eax
  408192:	ret    
  408193:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40819e:	xchg   ax,ax
  4081a0:	repz ret 
  4081a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4081ad:	nop    DWORD PTR [rax]
  4081b0:	push   r13
  4081b2:	push   r12
  4081b4:	push   rbp
  4081b5:	push   rbx
  4081b6:	sub    rsp,0x28
  4081ba:	mov    DWORD PTR [rcx],0x0
  4081c0:	mov    rax,QWORD PTR fs:0x28
  4081c9:	mov    QWORD PTR [rsp+0x18],rax
  4081ce:	xor    eax,eax
  4081d0:	cmp    rsi,rdx
  4081d3:	mov    QWORD PTR [rsp+0x10],0x0
  4081dc:	mov    DWORD PTR [rsp+0xc],0x0
  4081e4:	mov    rax,rsi
  4081e7:	je     408224 <_start@@Base+0x27f4>
  4081e9:	mov    r12,rcx
  4081ec:	lea    r8,[rsp+0x10]
  4081f1:	lea    rcx,[rsp+0xc]
  4081f6:	mov    rbp,rsi
  4081f9:	mov    r13,rdi
  4081fc:	mov    rbx,rdx
  4081ff:	call   41c710 <flatcc_json_parser_integer@@Base>
  408204:	cmp    rbp,rax
  408207:	je     408224 <_start@@Base+0x27f4>
  408209:	mov    edx,DWORD PTR [rsp+0xc]
  40820d:	test   edx,edx
  40820f:	jne    408240 <_start@@Base+0x2810>
  408211:	mov    rdx,QWORD PTR [rsp+0x10]
  408216:	mov    ecx,0xffffffff
  40821b:	cmp    rdx,rcx
  40821e:	ja     408258 <_start@@Base+0x2828>
  408220:	mov    DWORD PTR [r12],edx
  408224:	mov    rsi,QWORD PTR [rsp+0x18]
  408229:	xor    rsi,QWORD PTR fs:0x28
  408232:	jne    40826d <_start@@Base+0x283d>
  408234:	add    rsp,0x28
  408238:	pop    rbx
  408239:	pop    rbp
  40823a:	pop    r12
  40823c:	pop    r13
  40823e:	ret    
  40823f:	nop
  408240:	mov    ecx,0x8
  408245:	mov    rdx,rbx
  408248:	mov    rsi,rax
  40824b:	mov    rdi,r13
  40824e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408253:	jmp    408224 <_start@@Base+0x27f4>
  408255:	nop    DWORD PTR [rax]
  408258:	mov    ecx,0x7
  40825d:	mov    rdx,rbx
  408260:	mov    rsi,rax
  408263:	mov    rdi,r13
  408266:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40826b:	jmp    408224 <_start@@Base+0x27f4>
  40826d:	call   405070 <__stack_chk_fail@plt>
  408272:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40827d:	nop    DWORD PTR [rax]
  408280:	push   r13
  408282:	push   r12
  408284:	push   rbp
  408285:	push   rbx
  408286:	sub    rsp,0x28
  40828a:	mov    BYTE PTR [rcx],0x0
  40828d:	mov    rax,QWORD PTR fs:0x28
  408296:	mov    QWORD PTR [rsp+0x18],rax
  40829b:	xor    eax,eax
  40829d:	cmp    rsi,rdx
  4082a0:	mov    QWORD PTR [rsp+0x10],0x0
  4082a9:	mov    DWORD PTR [rsp+0xc],0x0
  4082b1:	mov    rax,rsi
  4082b4:	je     4082f0 <_start@@Base+0x28c0>
  4082b6:	mov    r12,rcx
  4082b9:	lea    r8,[rsp+0x10]
  4082be:	lea    rcx,[rsp+0xc]
  4082c3:	mov    rbp,rsi
  4082c6:	mov    r13,rdi
  4082c9:	mov    rbx,rdx
  4082cc:	call   41c710 <flatcc_json_parser_integer@@Base>
  4082d1:	cmp    rbp,rax
  4082d4:	je     4082f0 <_start@@Base+0x28c0>
  4082d6:	mov    edx,DWORD PTR [rsp+0xc]
  4082da:	test   edx,edx
  4082dc:	jne    408310 <_start@@Base+0x28e0>
  4082de:	mov    rdx,QWORD PTR [rsp+0x10]
  4082e3:	cmp    rdx,0xff
  4082ea:	ja     408328 <_start@@Base+0x28f8>
  4082ec:	mov    BYTE PTR [r12],dl
  4082f0:	mov    rsi,QWORD PTR [rsp+0x18]
  4082f5:	xor    rsi,QWORD PTR fs:0x28
  4082fe:	jne    40833d <_start@@Base+0x290d>
  408300:	add    rsp,0x28
  408304:	pop    rbx
  408305:	pop    rbp
  408306:	pop    r12
  408308:	pop    r13
  40830a:	ret    
  40830b:	nop    DWORD PTR [rax+rax*1+0x0]
  408310:	mov    ecx,0x8
  408315:	mov    rdx,rbx
  408318:	mov    rsi,rax
  40831b:	mov    rdi,r13
  40831e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408323:	jmp    4082f0 <_start@@Base+0x28c0>
  408325:	nop    DWORD PTR [rax]
  408328:	mov    ecx,0x7
  40832d:	mov    rdx,rbx
  408330:	mov    rsi,rax
  408333:	mov    rdi,r13
  408336:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40833b:	jmp    4082f0 <_start@@Base+0x28c0>
  40833d:	call   405070 <__stack_chk_fail@plt>
  408342:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40834d:	nop    DWORD PTR [rax]
  408350:	push   r13
  408352:	push   r12
  408354:	push   rbp
  408355:	push   rbx
  408356:	sub    rsp,0x28
  40835a:	mov    DWORD PTR [rcx],0x0
  408360:	mov    rax,QWORD PTR fs:0x28
  408369:	mov    QWORD PTR [rsp+0x18],rax
  40836e:	xor    eax,eax
  408370:	cmp    rsi,rdx
  408373:	mov    QWORD PTR [rsp+0x10],0x0
  40837c:	mov    DWORD PTR [rsp+0xc],0x0
  408384:	mov    rax,rsi
  408387:	je     4083c6 <_start@@Base+0x2996>
  408389:	mov    r12,rcx
  40838c:	lea    r8,[rsp+0x10]
  408391:	lea    rcx,[rsp+0xc]
  408396:	mov    rbp,rsi
  408399:	mov    r13,rdi
  40839c:	mov    rbx,rdx
  40839f:	call   41c710 <flatcc_json_parser_integer@@Base>
  4083a4:	cmp    rbp,rax
  4083a7:	je     4083c6 <_start@@Base+0x2996>
  4083a9:	mov    ecx,DWORD PTR [rsp+0xc]
  4083ad:	mov    rdx,QWORD PTR [rsp+0x10]
  4083b2:	test   ecx,ecx
  4083b4:	je     4083e8 <_start@@Base+0x29b8>
  4083b6:	mov    ecx,0x80000000
  4083bb:	cmp    rdx,rcx
  4083be:	ja     408400 <_start@@Base+0x29d0>
  4083c0:	neg    edx
  4083c2:	mov    DWORD PTR [r12],edx
  4083c6:	mov    rsi,QWORD PTR [rsp+0x18]
  4083cb:	xor    rsi,QWORD PTR fs:0x28
  4083d4:	jne    40842d <_start@@Base+0x29fd>
  4083d6:	add    rsp,0x28
  4083da:	pop    rbx
  4083db:	pop    rbp
  4083dc:	pop    r12
  4083de:	pop    r13
  4083e0:	ret    
  4083e1:	nop    DWORD PTR [rax+0x0]
  4083e8:	cmp    rdx,0x7fffffff
  4083ef:	ja     408418 <_start@@Base+0x29e8>
  4083f1:	mov    DWORD PTR [r12],edx
  4083f5:	jmp    4083c6 <_start@@Base+0x2996>
  4083f7:	nop    WORD PTR [rax+rax*1+0x0]
  408400:	mov    ecx,0x8
  408405:	mov    rdx,rbx
  408408:	mov    rsi,rax
  40840b:	mov    rdi,r13
  40840e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408413:	jmp    4083c6 <_start@@Base+0x2996>
  408415:	nop    DWORD PTR [rax]
  408418:	mov    ecx,0x7
  40841d:	mov    rdx,rbx
  408420:	mov    rsi,rax
  408423:	mov    rdi,r13
  408426:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40842b:	jmp    4083c6 <_start@@Base+0x2996>
  40842d:	call   405070 <__stack_chk_fail@plt>
  408432:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40843d:	nop    DWORD PTR [rax]
  408440:	push   r13
  408442:	push   r12
  408444:	xor    r8d,r8d
  408447:	push   rbp
  408448:	push   rbx
  408449:	sub    rsp,0x28
  40844d:	mov    WORD PTR [rcx],r8w
  408451:	mov    rax,QWORD PTR fs:0x28
  40845a:	mov    QWORD PTR [rsp+0x18],rax
  40845f:	xor    eax,eax
  408461:	cmp    rsi,rdx
  408464:	mov    QWORD PTR [rsp+0x10],0x0
  40846d:	mov    DWORD PTR [rsp+0xc],0x0
  408475:	mov    rax,rsi
  408478:	je     4084b7 <_start@@Base+0x2a87>
  40847a:	mov    r12,rcx
  40847d:	lea    r8,[rsp+0x10]
  408482:	lea    rcx,[rsp+0xc]
  408487:	mov    rbp,rsi
  40848a:	mov    r13,rdi
  40848d:	mov    rbx,rdx
  408490:	call   41c710 <flatcc_json_parser_integer@@Base>
  408495:	cmp    rbp,rax
  408498:	je     4084b7 <_start@@Base+0x2a87>
  40849a:	mov    ecx,DWORD PTR [rsp+0xc]
  40849e:	mov    rdx,QWORD PTR [rsp+0x10]
  4084a3:	test   ecx,ecx
  4084a5:	je     4084d8 <_start@@Base+0x2aa8>
  4084a7:	cmp    rdx,0x8000
  4084ae:	ja     4084f0 <_start@@Base+0x2ac0>
  4084b0:	neg    edx
  4084b2:	mov    WORD PTR [r12],dx
  4084b7:	mov    rsi,QWORD PTR [rsp+0x18]
  4084bc:	xor    rsi,QWORD PTR fs:0x28
  4084c5:	jne    40851d <_start@@Base+0x2aed>
  4084c7:	add    rsp,0x28
  4084cb:	pop    rbx
  4084cc:	pop    rbp
  4084cd:	pop    r12
  4084cf:	pop    r13
  4084d1:	ret    
  4084d2:	nop    WORD PTR [rax+rax*1+0x0]
  4084d8:	cmp    rdx,0x7fff
  4084df:	ja     408508 <_start@@Base+0x2ad8>
  4084e1:	mov    WORD PTR [r12],dx
  4084e6:	jmp    4084b7 <_start@@Base+0x2a87>
  4084e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4084f0:	mov    ecx,0x8
  4084f5:	mov    rdx,rbx
  4084f8:	mov    rsi,rax
  4084fb:	mov    rdi,r13
  4084fe:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408503:	jmp    4084b7 <_start@@Base+0x2a87>
  408505:	nop    DWORD PTR [rax]
  408508:	mov    ecx,0x7
  40850d:	mov    rdx,rbx
  408510:	mov    rsi,rax
  408513:	mov    rdi,r13
  408516:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40851b:	jmp    4084b7 <_start@@Base+0x2a87>
  40851d:	call   405070 <__stack_chk_fail@plt>
  408522:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40852d:	nop    DWORD PTR [rax]
  408530:	push   r13
  408532:	push   r12
  408534:	push   rbp
  408535:	push   rbx
  408536:	sub    rsp,0x28
  40853a:	mov    QWORD PTR [rcx],0x0
  408541:	mov    rax,QWORD PTR fs:0x28
  40854a:	mov    QWORD PTR [rsp+0x18],rax
  40854f:	xor    eax,eax
  408551:	cmp    rsi,rdx
  408554:	mov    QWORD PTR [rsp+0x10],0x0
  40855d:	mov    DWORD PTR [rsp+0xc],0x0
  408565:	mov    rax,rsi
  408568:	je     4085ad <_start@@Base+0x2b7d>
  40856a:	mov    r12,rcx
  40856d:	lea    r8,[rsp+0x10]
  408572:	lea    rcx,[rsp+0xc]
  408577:	mov    rbp,rsi
  40857a:	mov    r13,rdi
  40857d:	mov    rbx,rdx
  408580:	call   41c710 <flatcc_json_parser_integer@@Base>
  408585:	cmp    rbp,rax
  408588:	je     4085ad <_start@@Base+0x2b7d>
  40858a:	mov    ecx,DWORD PTR [rsp+0xc]
  40858e:	mov    rdx,QWORD PTR [rsp+0x10]
  408593:	test   ecx,ecx
  408595:	je     4085d0 <_start@@Base+0x2ba0>
  408597:	movabs rcx,0x8000000000000000
  4085a1:	cmp    rdx,rcx
  4085a4:	ja     4085e0 <_start@@Base+0x2bb0>
  4085a6:	neg    rdx
  4085a9:	mov    QWORD PTR [r12],rdx
  4085ad:	mov    rsi,QWORD PTR [rsp+0x18]
  4085b2:	xor    rsi,QWORD PTR fs:0x28
  4085bb:	jne    40860d <_start@@Base+0x2bdd>
  4085bd:	add    rsp,0x28
  4085c1:	pop    rbx
  4085c2:	pop    rbp
  4085c3:	pop    r12
  4085c5:	pop    r13
  4085c7:	ret    
  4085c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4085d0:	test   rdx,rdx
  4085d3:	js     4085f8 <_start@@Base+0x2bc8>
  4085d5:	mov    QWORD PTR [r12],rdx
  4085d9:	jmp    4085ad <_start@@Base+0x2b7d>
  4085db:	nop    DWORD PTR [rax+rax*1+0x0]
  4085e0:	mov    ecx,0x8
  4085e5:	mov    rdx,rbx
  4085e8:	mov    rsi,rax
  4085eb:	mov    rdi,r13
  4085ee:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4085f3:	jmp    4085ad <_start@@Base+0x2b7d>
  4085f5:	nop    DWORD PTR [rax]
  4085f8:	mov    ecx,0x7
  4085fd:	mov    rdx,rbx
  408600:	mov    rsi,rax
  408603:	mov    rdi,r13
  408606:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40860b:	jmp    4085ad <_start@@Base+0x2b7d>
  40860d:	call   405070 <__stack_chk_fail@plt>
  408612:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40861d:	nop    DWORD PTR [rax]
  408620:	push   rbx
  408621:	xor    esi,esi
  408623:	mov    ecx,0x8
  408628:	mov    edx,0x8
  40862d:	mov    rbx,rdi
  408630:	call   419450 <flatcc_verify_field@@Base>
  408635:	test   eax,eax
  408637:	je     408640 <_start@@Base+0x2c10>
  408639:	pop    rbx
  40863a:	ret    
  40863b:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	mov    rdi,rbx
  408643:	mov    ecx,0x4
  408648:	mov    edx,0x4
  40864d:	pop    rbx
  40864e:	mov    esi,0x1
  408653:	jmp    419450 <flatcc_verify_field@@Base>
  408658:	nop    DWORD PTR [rax+rax*1+0x0]
  408660:	push   r13
  408662:	mov    rax,rdx
  408665:	push   r12
  408667:	push   rbp
  408668:	push   rbx
  408669:	sub    rax,rsi
  40866c:	mov    rbx,rdi
  40866f:	mov    r10,rsi
  408672:	mov    r11,rdx
  408675:	sub    rsp,0x8
  408679:	cmp    rax,0x7
  40867d:	mov    rbp,rcx
  408680:	jbe    4086a8 <_start@@Base+0x2c78>
  408682:	movbe  rax,QWORD PTR [rsi]
  408687:	movabs rdx,0x4368617261637465
  408691:	cmp    rax,rdx
  408694:	je     4086c2 <_start@@Base+0x2c92>
  408696:	add    rsp,0x8
  40869a:	mov    rax,r10
  40869d:	pop    rbx
  40869e:	pop    rbp
  40869f:	pop    r12
  4086a1:	pop    r13
  4086a3:	ret    
  4086a4:	nop    DWORD PTR [rax+0x0]
  4086a8:	mov    rsi,rdx
  4086ab:	mov    rdi,r10
  4086ae:	call   405b40 <_start@@Base+0x110>
  4086b3:	movabs rdx,0x4368617261637465
  4086bd:	cmp    rax,rdx
  4086c0:	jne    408696 <_start@@Base+0x2c66>
  4086c2:	lea    r13,[r10+0x8]
  4086c6:	mov    r12,r11
  4086c9:	sub    r12,r13
  4086cc:	cmp    r12,0x7
  4086d0:	ja     408730 <_start@@Base+0x2d00>
  4086d2:	mov    rsi,r11
  4086d5:	mov    rdi,r13
  4086d8:	call   405b40 <_start@@Base+0x110>
  4086dd:	movabs rdx,0xff00000000000000
  4086e7:	and    rax,rdx
  4086ea:	movabs rdx,0x7200000000000000
  4086f4:	cmp    rax,rdx
  4086f7:	jne    408696 <_start@@Base+0x2c66>
  4086f9:	cmp    r12,0x1
  4086fd:	jle    408696 <_start@@Base+0x2c66>
  4086ff:	cmp    BYTE PTR [r10+0x9],0x2e
  408704:	jne    408696 <_start@@Base+0x2c66>
  408706:	lea    rsi,[r10+0xa]
  40870a:	cmp    r13,rsi
  40870d:	je     408696 <_start@@Base+0x2c66>
  40870f:	add    rsp,0x8
  408713:	mov    rcx,rbp
  408716:	mov    rdi,rbx
  408719:	pop    rbx
  40871a:	pop    rbp
  40871b:	pop    r12
  40871d:	pop    r13
  40871f:	mov    rdx,r11
  408722:	jmp    406b60 <_start@@Base+0x1130>
  408727:	nop    WORD PTR [rax+rax*1+0x0]
  408730:	movbe  rax,QWORD PTR [r10+0x8]
  408736:	jmp    4086dd <_start@@Base+0x2cad>
  408738:	nop    DWORD PTR [rax+rax*1+0x0]
  408740:	cmp    rsi,rdx
  408743:	je     40874a <_start@@Base+0x2d1a>
  408745:	cmp    BYTE PTR [rsi],0x7b
  408748:	je     408760 <_start@@Base+0x2d30>
  40874a:	mov    DWORD PTR [rcx],0x0
  408750:	mov    ecx,0x15
  408755:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  40875a:	nop    WORD PTR [rax+rax*1+0x0]
  408760:	lea    rax,[rsi+0x1]
  408764:	push   r12
  408766:	push   rbp
  408767:	push   rbx
  408768:	mov    rbx,rdx
  40876b:	mov    rbp,rcx
  40876e:	sub    rdx,rax
  408771:	mov    r12,rdi
  408774:	cmp    rdx,0x1
  408778:	jle    408782 <_start@@Base+0x2d52>
  40877a:	cmp    BYTE PTR [rsi+0x1],0x20
  40877e:	jg     408790 <_start@@Base+0x2d60>
  408780:	je     4087b0 <_start@@Base+0x2d80>
  408782:	mov    rdx,rbx
  408785:	mov    rsi,rax
  408788:	mov    rdi,r12
  40878b:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  408790:	cmp    rbx,rax
  408793:	je     40879a <_start@@Base+0x2d6a>
  408795:	cmp    BYTE PTR [rax],0x7d
  408798:	je     4087c0 <_start@@Base+0x2d90>
  40879a:	mov    DWORD PTR [rbp+0x0],0x1
  4087a1:	pop    rbx
  4087a2:	pop    rbp
  4087a3:	pop    r12
  4087a5:	ret    
  4087a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087b0:	cmp    BYTE PTR [rsi+0x2],0x20
  4087b4:	jle    408782 <_start@@Base+0x2d52>
  4087b6:	lea    rax,[rsi+0x2]
  4087ba:	jmp    408790 <_start@@Base+0x2d60>
  4087bc:	nop    DWORD PTR [rax+0x0]
  4087c0:	mov    DWORD PTR [rbp+0x0],0x0
  4087c7:	mov    rdx,rbx
  4087ca:	mov    rdi,r12
  4087cd:	pop    rbx
  4087ce:	pop    rbp
  4087cf:	pop    r12
  4087d1:	lea    rsi,[rax+0x1]
  4087d5:	jmp    406b20 <_start@@Base+0x10f0>
  4087da:	nop    WORD PTR [rax+rax*1+0x0]
  4087e0:	push   r15
  4087e2:	push   r14
  4087e4:	push   r13
  4087e6:	push   r12
  4087e8:	mov    r12,rdi
  4087eb:	push   rbp
  4087ec:	push   rbx
  4087ed:	mov    rbp,rdx
  4087f0:	sub    rsp,0x48
  4087f4:	mov    DWORD PTR [r8],0x0
  4087fb:	mov    QWORD PTR [rsp+0x10],rcx
  408800:	mov    QWORD PTR [rsp+0x18],r8
  408805:	mov    rcx,QWORD PTR fs:0x28
  40880e:	mov    QWORD PTR [rsp+0x38],rcx
  408813:	xor    ecx,ecx
  408815:	cmp    rsi,rdx
  408818:	je     4089be <_start@@Base+0x2f8e>
  40881e:	cmp    BYTE PTR [rsi],0x22
  408821:	je     408960 <_start@@Base+0x2f30>
  408827:	mov    ecx,0x5
  40882c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408831:	mov    rbx,rax
  408834:	mov    rax,rbp
  408837:	sub    rax,rbx
  40883a:	cmp    rax,0x1
  40883e:	jle    40884b <_start@@Base+0x2e1b>
  408840:	cmp    BYTE PTR [rbx],0x20
  408843:	jg     40885c <_start@@Base+0x2e2c>
  408845:	je     40896f <_start@@Base+0x2f3f>
  40884b:	mov    rsi,rbx
  40884e:	mov    rdx,rbp
  408851:	mov    rdi,r12
  408854:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  408859:	mov    rbx,rax
  40885c:	cmp    rbp,rbx
  40885f:	je     4088b1 <_start@@Base+0x2e81>
  408861:	lea    rax,[rsp+0x28]
  408866:	lea    r15,[rsp+0x2c]
  40886b:	lea    r14,[rsp+0x30]
  408870:	mov    QWORD PTR [rsp+0x8],rax
  408875:	mov    r13,QWORD PTR [rsp+0x10]
  40887a:	mov    rax,QWORD PTR [r13+0x0]
  40887e:	jmp    408896 <_start@@Base+0x2e66>
  408880:	cmp    rbx,rax
  408883:	jne    4088e0 <_start@@Base+0x2eb0>
  408885:	add    r13,0x8
  408889:	mov    rax,QWORD PTR [r13+0x0]
  40888d:	test   rax,rax
  408890:	je     408930 <_start@@Base+0x2f00>
  408896:	mov    r9,r15
  408899:	mov    r8,r14
  40889c:	mov    rcx,QWORD PTR [rsp+0x8]
  4088a1:	mov    rdx,rbp
  4088a4:	mov    rsi,rbx
  4088a7:	mov    rdi,r12
  4088aa:	call   rax
  4088ac:	cmp    rbp,rax
  4088af:	jne    408880 <_start@@Base+0x2e50>
  4088b1:	mov    rcx,QWORD PTR [rsp+0x38]
  4088b6:	xor    rcx,QWORD PTR fs:0x28
  4088bf:	mov    rax,rbp
  4088c2:	jne    4089ce <_start@@Base+0x2f9e>
  4088c8:	add    rsp,0x48
  4088cc:	pop    rbx
  4088cd:	pop    rbp
  4088ce:	pop    r12
  4088d0:	pop    r13
  4088d2:	pop    r14
  4088d4:	pop    r15
  4088d6:	ret    
  4088d7:	nop    WORD PTR [rax+rax*1+0x0]
  4088e0:	mov    ecx,DWORD PTR [rsp+0x28]
  4088e4:	mov    rdx,QWORD PTR [rsp+0x30]
  4088e9:	test   ecx,ecx
  4088eb:	je     408950 <_start@@Base+0x2f20>
  4088ed:	test   rdx,rdx
  4088f0:	js     408982 <_start@@Base+0x2f52>
  4088f6:	vxorps xmm0,xmm0,xmm0
  4088fa:	vcvtsi2ss xmm0,xmm0,rdx
  4088ff:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x25a09]        # 42e310 <_IO_stdin_used@@Base+0x3310>
  408907:	mov    rdi,QWORD PTR [rsp+0x18]
  40890c:	mov    esi,DWORD PTR [rsp+0x2c]
  408910:	vaddss xmm0,xmm0,DWORD PTR [rdi]
  408914:	test   esi,esi
  408916:	vmovss DWORD PTR [rdi],xmm0
  40891a:	je     4089c6 <_start@@Base+0x2f96>
  408920:	mov    rbx,rax
  408923:	jmp    408875 <_start@@Base+0x2e45>
  408928:	nop    DWORD PTR [rax+rax*1+0x0]
  408930:	mov    rdx,rbp
  408933:	mov    ecx,0x17
  408938:	mov    rsi,rbx
  40893b:	mov    rdi,r12
  40893e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408943:	mov    rbp,rax
  408946:	jmp    4088b1 <_start@@Base+0x2e81>
  40894b:	nop    DWORD PTR [rax+rax*1+0x0]
  408950:	test   rdx,rdx
  408953:	js     4089a0 <_start@@Base+0x2f70>
  408955:	vxorps xmm0,xmm0,xmm0
  408959:	vcvtsi2ss xmm0,xmm0,rdx
  40895e:	jmp    408907 <_start@@Base+0x2ed7>
  408960:	lea    rbx,[rsi+0x1]
  408964:	mov    rax,rdx
  408967:	sub    rax,rbx
  40896a:	jmp    40883a <_start@@Base+0x2e0a>
  40896f:	cmp    BYTE PTR [rbx+0x1],0x20
  408973:	jle    40884b <_start@@Base+0x2e1b>
  408979:	add    rbx,0x1
  40897d:	jmp    40885c <_start@@Base+0x2e2c>
  408982:	mov    rcx,rdx
  408985:	vxorps xmm0,xmm0,xmm0
  408989:	shr    rcx,1
  40898c:	and    edx,0x1
  40898f:	or     rcx,rdx
  408992:	vcvtsi2ss xmm0,xmm0,rcx
  408997:	vaddss xmm0,xmm0,xmm0
  40899b:	jmp    4088ff <_start@@Base+0x2ecf>
  4089a0:	mov    rcx,rdx
  4089a3:	vxorps xmm0,xmm0,xmm0
  4089a7:	shr    rcx,1
  4089aa:	and    edx,0x1
  4089ad:	or     rcx,rdx
  4089b0:	vcvtsi2ss xmm0,xmm0,rcx
  4089b5:	vaddss xmm0,xmm0,xmm0
  4089b9:	jmp    408907 <_start@@Base+0x2ed7>
  4089be:	mov    rbx,rdx
  4089c1:	jmp    40884b <_start@@Base+0x2e1b>
  4089c6:	mov    rbp,rax
  4089c9:	jmp    4088b1 <_start@@Base+0x2e81>
  4089ce:	call   405070 <__stack_chk_fail@plt>
  4089d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4089de:	xchg   ax,ax
  4089e0:	push   r15
  4089e2:	push   r14
  4089e4:	push   r13
  4089e6:	push   r12
  4089e8:	mov    r12,rdi
  4089eb:	push   rbp
  4089ec:	push   rbx
  4089ed:	mov    rbp,rdx
  4089f0:	sub    rsp,0x48
  4089f4:	mov    QWORD PTR [r8],0x0
  4089fb:	mov    QWORD PTR [rsp+0x10],rcx
  408a00:	mov    QWORD PTR [rsp+0x18],r8
  408a05:	mov    rcx,QWORD PTR fs:0x28
  408a0e:	mov    QWORD PTR [rsp+0x38],rcx
  408a13:	xor    ecx,ecx
  408a15:	cmp    rsi,rdx
  408a18:	je     408bbe <_start@@Base+0x318e>
  408a1e:	cmp    BYTE PTR [rsi],0x22
  408a21:	je     408b60 <_start@@Base+0x3130>
  408a27:	mov    ecx,0x5
  408a2c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408a31:	mov    rbx,rax
  408a34:	mov    rax,rbp
  408a37:	sub    rax,rbx
  408a3a:	cmp    rax,0x1
  408a3e:	jle    408a4b <_start@@Base+0x301b>
  408a40:	cmp    BYTE PTR [rbx],0x20
  408a43:	jg     408a5c <_start@@Base+0x302c>
  408a45:	je     408b6f <_start@@Base+0x313f>
  408a4b:	mov    rsi,rbx
  408a4e:	mov    rdx,rbp
  408a51:	mov    rdi,r12
  408a54:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  408a59:	mov    rbx,rax
  408a5c:	cmp    rbp,rbx
  408a5f:	je     408ab1 <_start@@Base+0x3081>
  408a61:	lea    rax,[rsp+0x28]
  408a66:	lea    r15,[rsp+0x2c]
  408a6b:	lea    r14,[rsp+0x30]
  408a70:	mov    QWORD PTR [rsp+0x8],rax
  408a75:	mov    r13,QWORD PTR [rsp+0x10]
  408a7a:	mov    rax,QWORD PTR [r13+0x0]
  408a7e:	jmp    408a96 <_start@@Base+0x3066>
  408a80:	cmp    rbx,rax
  408a83:	jne    408ae0 <_start@@Base+0x30b0>
  408a85:	add    r13,0x8
  408a89:	mov    rax,QWORD PTR [r13+0x0]
  408a8d:	test   rax,rax
  408a90:	je     408b30 <_start@@Base+0x3100>
  408a96:	mov    r9,r15
  408a99:	mov    r8,r14
  408a9c:	mov    rcx,QWORD PTR [rsp+0x8]
  408aa1:	mov    rdx,rbp
  408aa4:	mov    rsi,rbx
  408aa7:	mov    rdi,r12
  408aaa:	call   rax
  408aac:	cmp    rbp,rax
  408aaf:	jne    408a80 <_start@@Base+0x3050>
  408ab1:	mov    rcx,QWORD PTR [rsp+0x38]
  408ab6:	xor    rcx,QWORD PTR fs:0x28
  408abf:	mov    rax,rbp
  408ac2:	jne    408bce <_start@@Base+0x319e>
  408ac8:	add    rsp,0x48
  408acc:	pop    rbx
  408acd:	pop    rbp
  408ace:	pop    r12
  408ad0:	pop    r13
  408ad2:	pop    r14
  408ad4:	pop    r15
  408ad6:	ret    
  408ad7:	nop    WORD PTR [rax+rax*1+0x0]
  408ae0:	mov    ecx,DWORD PTR [rsp+0x28]
  408ae4:	mov    rdx,QWORD PTR [rsp+0x30]
  408ae9:	test   ecx,ecx
  408aeb:	je     408b50 <_start@@Base+0x3120>
  408aed:	test   rdx,rdx
  408af0:	js     408b82 <_start@@Base+0x3152>
  408af6:	vxorpd xmm0,xmm0,xmm0
  408afa:	vcvtsi2sd xmm0,xmm0,rdx
  408aff:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x25819]        # 42e320 <_IO_stdin_used@@Base+0x3320>
  408b07:	mov    rdi,QWORD PTR [rsp+0x18]
  408b0c:	mov    esi,DWORD PTR [rsp+0x2c]
  408b10:	vaddsd xmm0,xmm0,QWORD PTR [rdi]
  408b14:	test   esi,esi
  408b16:	vmovsd QWORD PTR [rdi],xmm0
  408b1a:	je     408bc6 <_start@@Base+0x3196>
  408b20:	mov    rbx,rax
  408b23:	jmp    408a75 <_start@@Base+0x3045>
  408b28:	nop    DWORD PTR [rax+rax*1+0x0]
  408b30:	mov    rdx,rbp
  408b33:	mov    ecx,0x17
  408b38:	mov    rsi,rbx
  408b3b:	mov    rdi,r12
  408b3e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408b43:	mov    rbp,rax
  408b46:	jmp    408ab1 <_start@@Base+0x3081>
  408b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b50:	test   rdx,rdx
  408b53:	js     408ba0 <_start@@Base+0x3170>
  408b55:	vxorpd xmm0,xmm0,xmm0
  408b59:	vcvtsi2sd xmm0,xmm0,rdx
  408b5e:	jmp    408b07 <_start@@Base+0x30d7>
  408b60:	lea    rbx,[rsi+0x1]
  408b64:	mov    rax,rdx
  408b67:	sub    rax,rbx
  408b6a:	jmp    408a3a <_start@@Base+0x300a>
  408b6f:	cmp    BYTE PTR [rbx+0x1],0x20
  408b73:	jle    408a4b <_start@@Base+0x301b>
  408b79:	add    rbx,0x1
  408b7d:	jmp    408a5c <_start@@Base+0x302c>
  408b82:	mov    rcx,rdx
  408b85:	vxorpd xmm0,xmm0,xmm0
  408b89:	shr    rcx,1
  408b8c:	and    edx,0x1
  408b8f:	or     rcx,rdx
  408b92:	vcvtsi2sd xmm0,xmm0,rcx
  408b97:	vaddsd xmm0,xmm0,xmm0
  408b9b:	jmp    408aff <_start@@Base+0x30cf>
  408ba0:	mov    rcx,rdx
  408ba3:	vxorpd xmm0,xmm0,xmm0
  408ba7:	shr    rcx,1
  408baa:	and    edx,0x1
  408bad:	or     rcx,rdx
  408bb0:	vcvtsi2sd xmm0,xmm0,rcx
  408bb5:	vaddsd xmm0,xmm0,xmm0
  408bb9:	jmp    408b07 <_start@@Base+0x30d7>
  408bbe:	mov    rbx,rdx
  408bc1:	jmp    408a4b <_start@@Base+0x301b>
  408bc6:	mov    rbp,rax
  408bc9:	jmp    408ab1 <_start@@Base+0x3081>
  408bce:	call   405070 <__stack_chk_fail@plt>
  408bd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408bde:	xchg   ax,ax
  408be0:	push   r15
  408be2:	push   r14
  408be4:	push   r13
  408be6:	push   r12
  408be8:	mov    r12,rdi
  408beb:	push   rbp
  408bec:	push   rbx
  408bed:	mov    rbp,rdx
  408bf0:	sub    rsp,0x58
  408bf4:	mov    BYTE PTR [r8],0x0
  408bf8:	mov    rdx,QWORD PTR fs:0x28
  408c01:	mov    QWORD PTR [rsp+0x48],rdx
  408c06:	xor    edx,edx
  408c08:	cmp    rsi,rbp
  408c0b:	mov    QWORD PTR [rsp+0x18],rcx
  408c10:	mov    QWORD PTR [rsp+0x20],r8
  408c15:	je     408d92 <_start@@Base+0x3362>
  408c1b:	cmp    BYTE PTR [rsi],0x22
  408c1e:	je     408d70 <_start@@Base+0x3340>
  408c24:	mov    ecx,0x5
  408c29:	mov    rdx,rbp
  408c2c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408c31:	mov    rbx,rax
  408c34:	mov    rax,rbp
  408c37:	sub    rax,rbx
  408c3a:	cmp    rax,0x1
  408c3e:	jle    408c4b <_start@@Base+0x321b>
  408c40:	cmp    BYTE PTR [rbx],0x20
  408c43:	jg     408c5c <_start@@Base+0x322c>
  408c45:	je     408d7f <_start@@Base+0x334f>
  408c4b:	mov    rsi,rbx
  408c4e:	mov    rdx,rbp
  408c51:	mov    rdi,r12
  408c54:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  408c59:	mov    rbx,rax
  408c5c:	cmp    rbp,rbx
  408c5f:	je     408cb9 <_start@@Base+0x3289>
  408c61:	lea    rax,[rsp+0x38]
  408c66:	lea    r15,[rsp+0x3c]
  408c6b:	lea    r14,[rsp+0x40]
  408c70:	mov    BYTE PTR [rsp+0x17],0x0
  408c75:	mov    QWORD PTR [rsp+0x8],rax
  408c7a:	mov    r13,QWORD PTR [rsp+0x18]
  408c7f:	mov    rax,QWORD PTR [r13+0x0]
  408c83:	jmp    408c9e <_start@@Base+0x326e>
  408c85:	nop    DWORD PTR [rax]
  408c88:	cmp    rbx,rax
  408c8b:	jne    408ce0 <_start@@Base+0x32b0>
  408c8d:	add    r13,0x8
  408c91:	mov    rax,QWORD PTR [r13+0x0]
  408c95:	test   rax,rax
  408c98:	je     408d20 <_start@@Base+0x32f0>
  408c9e:	mov    r9,r15
  408ca1:	mov    r8,r14
  408ca4:	mov    rcx,QWORD PTR [rsp+0x8]
  408ca9:	mov    rdx,rbp
  408cac:	mov    rsi,rbx
  408caf:	mov    rdi,r12
  408cb2:	call   rax
  408cb4:	cmp    rbp,rax
  408cb7:	jne    408c88 <_start@@Base+0x3258>
  408cb9:	mov    rdi,QWORD PTR [rsp+0x48]
  408cbe:	xor    rdi,QWORD PTR fs:0x28
  408cc7:	mov    rax,rbp
  408cca:	jne    408da2 <_start@@Base+0x3372>
  408cd0:	add    rsp,0x58
  408cd4:	pop    rbx
  408cd5:	pop    rbp
  408cd6:	pop    r12
  408cd8:	pop    r13
  408cda:	pop    r14
  408cdc:	pop    r15
  408cde:	ret    
  408cdf:	nop
  408ce0:	mov    r8,rax
  408ce3:	mov    eax,DWORD PTR [rsp+0x38]
  408ce7:	test   eax,eax
  408ce9:	jne    408d40 <_start@@Base+0x3310>
  408ceb:	cmp    QWORD PTR [rsp+0x40],0x0
  408cf1:	setne  BYTE PTR [rsp+0x17]
  408cf6:	mov    rax,QWORD PTR [rsp+0x20]
  408cfb:	mov    edx,DWORD PTR [rsp+0x3c]
  408cff:	movzx  ecx,BYTE PTR [rsp+0x17]
  408d04:	add    BYTE PTR [rax],cl
  408d06:	test   edx,edx
  408d08:	je     408d9a <_start@@Base+0x336a>
  408d0e:	mov    rbx,r8
  408d11:	jmp    408c7a <_start@@Base+0x324a>
  408d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d20:	mov    rdx,rbp
  408d23:	mov    ecx,0x17
  408d28:	mov    rsi,rbx
  408d2b:	mov    rdi,r12
  408d2e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408d33:	mov    rbp,rax
  408d36:	jmp    408cb9 <_start@@Base+0x3289>
  408d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d40:	mov    rsi,r8
  408d43:	mov    ecx,0x8
  408d48:	mov    rdx,rbp
  408d4b:	mov    rdi,r12
  408d4e:	mov    QWORD PTR [rsp+0x28],r8
  408d53:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408d58:	cmp    rbp,rax
  408d5b:	mov    r8,QWORD PTR [rsp+0x28]
  408d60:	jne    408cf6 <_start@@Base+0x32c6>
  408d62:	jmp    408cb9 <_start@@Base+0x3289>
  408d67:	nop    WORD PTR [rax+rax*1+0x0]
  408d70:	lea    rbx,[rsi+0x1]
  408d74:	mov    rax,rbp
  408d77:	sub    rax,rbx
  408d7a:	jmp    408c3a <_start@@Base+0x320a>
  408d7f:	cmp    BYTE PTR [rbx+0x1],0x20
  408d83:	jle    408c4b <_start@@Base+0x321b>
  408d89:	add    rbx,0x1
  408d8d:	jmp    408c5c <_start@@Base+0x322c>
  408d92:	mov    rbx,rbp
  408d95:	jmp    408c4b <_start@@Base+0x321b>
  408d9a:	mov    rbp,r8
  408d9d:	jmp    408cb9 <_start@@Base+0x3289>
  408da2:	call   405070 <__stack_chk_fail@plt>
  408da7:	nop    WORD PTR [rax+rax*1+0x0]
  408db0:	push   r15
  408db2:	push   r14
  408db4:	push   r13
  408db6:	push   r12
  408db8:	mov    r12,rdi
  408dbb:	push   rbp
  408dbc:	push   rbx
  408dbd:	mov    rbp,rdx
  408dc0:	xor    edi,edi
  408dc2:	sub    rsp,0x58
  408dc6:	mov    WORD PTR [r8],di
  408dca:	mov    rdx,QWORD PTR fs:0x28
  408dd3:	mov    QWORD PTR [rsp+0x48],rdx
  408dd8:	xor    edx,edx
  408dda:	cmp    rsi,rbp
  408ddd:	mov    QWORD PTR [rsp+0x10],rcx
  408de2:	mov    QWORD PTR [rsp+0x20],r8
  408de7:	je     408f71 <_start@@Base+0x3541>
  408ded:	cmp    BYTE PTR [rsi],0x22
  408df0:	je     408f20 <_start@@Base+0x34f0>
  408df6:	mov    ecx,0x5
  408dfb:	mov    rdx,rbp
  408dfe:	mov    rdi,r12
  408e01:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408e06:	mov    rbx,rax
  408e09:	mov    rax,rbp
  408e0c:	sub    rax,rbx
  408e0f:	cmp    rax,0x1
  408e13:	jle    408e20 <_start@@Base+0x33f0>
  408e15:	cmp    BYTE PTR [rbx],0x20
  408e18:	jg     408e31 <_start@@Base+0x3401>
  408e1a:	je     408f5e <_start@@Base+0x352e>
  408e20:	mov    rsi,rbx
  408e23:	mov    rdx,rbp
  408e26:	mov    rdi,r12
  408e29:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  408e2e:	mov    rbx,rax
  408e31:	cmp    rbp,rbx
  408e34:	je     408e91 <_start@@Base+0x3461>
  408e36:	lea    rax,[rsp+0x38]
  408e3b:	xor    ecx,ecx
  408e3d:	lea    r15,[rsp+0x3c]
  408e42:	lea    r14,[rsp+0x40]
  408e47:	mov    WORD PTR [rsp+0x1e],cx
  408e4c:	mov    QWORD PTR [rsp+0x8],rax
  408e51:	mov    r13,QWORD PTR [rsp+0x10]
  408e56:	mov    rax,QWORD PTR [r13+0x0]
  408e5a:	jmp    408e76 <_start@@Base+0x3446>
  408e5c:	nop    DWORD PTR [rax+0x0]
  408e60:	cmp    rbx,rax
  408e63:	jne    408ec0 <_start@@Base+0x3490>
  408e65:	add    r13,0x8
  408e69:	mov    rax,QWORD PTR [r13+0x0]
  408e6d:	test   rax,rax
  408e70:	je     408f00 <_start@@Base+0x34d0>
  408e76:	mov    r9,r15
  408e79:	mov    r8,r14
  408e7c:	mov    rcx,QWORD PTR [rsp+0x8]
  408e81:	mov    rdx,rbp
  408e84:	mov    rsi,rbx
  408e87:	mov    rdi,r12
  408e8a:	call   rax
  408e8c:	cmp    rbp,rax
  408e8f:	jne    408e60 <_start@@Base+0x3430>
  408e91:	mov    rdi,QWORD PTR [rsp+0x48]
  408e96:	xor    rdi,QWORD PTR fs:0x28
  408e9f:	mov    rax,rbp
  408ea2:	jne    408f81 <_start@@Base+0x3551>
  408ea8:	add    rsp,0x58
  408eac:	pop    rbx
  408ead:	pop    rbp
  408eae:	pop    r12
  408eb0:	pop    r13
  408eb2:	pop    r14
  408eb4:	pop    r15
  408eb6:	ret    
  408eb7:	nop    WORD PTR [rax+rax*1+0x0]
  408ec0:	mov    r8,rax
  408ec3:	mov    eax,DWORD PTR [rsp+0x38]
  408ec7:	test   eax,eax
  408ec9:	jne    408f30 <_start@@Base+0x3500>
  408ecb:	mov    rax,QWORD PTR [rsp+0x40]
  408ed0:	cmp    rax,0xffff
  408ed6:	ja     408f57 <_start@@Base+0x3527>
  408ed8:	mov    WORD PTR [rsp+0x1e],ax
  408edd:	mov    rax,QWORD PTR [rsp+0x20]
  408ee2:	mov    edx,DWORD PTR [rsp+0x3c]
  408ee6:	movzx  ecx,WORD PTR [rsp+0x1e]
  408eeb:	add    WORD PTR [rax],cx
  408eee:	test   edx,edx
  408ef0:	je     408f79 <_start@@Base+0x3549>
  408ef6:	mov    rbx,r8
  408ef9:	jmp    408e51 <_start@@Base+0x3421>
  408efe:	xchg   ax,ax
  408f00:	mov    rdx,rbp
  408f03:	mov    ecx,0x17
  408f08:	mov    rsi,rbx
  408f0b:	mov    rdi,r12
  408f0e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408f13:	mov    rbp,rax
  408f16:	jmp    408e91 <_start@@Base+0x3461>
  408f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f20:	lea    rbx,[rsi+0x1]
  408f24:	mov    rax,rbp
  408f27:	sub    rax,rbx
  408f2a:	jmp    408e0f <_start@@Base+0x33df>
  408f2f:	nop
  408f30:	mov    ecx,0x8
  408f35:	mov    rsi,r8
  408f38:	mov    rdx,rbp
  408f3b:	mov    rdi,r12
  408f3e:	mov    QWORD PTR [rsp+0x28],r8
  408f43:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408f48:	cmp    rbp,rax
  408f4b:	mov    r8,QWORD PTR [rsp+0x28]
  408f50:	jne    408edd <_start@@Base+0x34ad>
  408f52:	jmp    408e91 <_start@@Base+0x3461>
  408f57:	mov    ecx,0x7
  408f5c:	jmp    408f35 <_start@@Base+0x3505>
  408f5e:	cmp    BYTE PTR [rbx+0x1],0x20
  408f62:	jle    408e20 <_start@@Base+0x33f0>
  408f68:	add    rbx,0x1
  408f6c:	jmp    408e31 <_start@@Base+0x3401>
  408f71:	mov    rbx,rbp
  408f74:	jmp    408e20 <_start@@Base+0x33f0>
  408f79:	mov    rbp,r8
  408f7c:	jmp    408e91 <_start@@Base+0x3461>
  408f81:	call   405070 <__stack_chk_fail@plt>
  408f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f90:	push   r15
  408f92:	push   r14
  408f94:	push   r13
  408f96:	push   r12
  408f98:	mov    r12,rdi
  408f9b:	push   rbp
  408f9c:	push   rbx
  408f9d:	mov    rbp,rdx
  408fa0:	sub    rsp,0x58
  408fa4:	mov    QWORD PTR [r8],0x0
  408fab:	mov    rdi,QWORD PTR fs:0x28
  408fb4:	mov    QWORD PTR [rsp+0x48],rdi
  408fb9:	xor    edi,edi
  408fbb:	cmp    rsi,rdx
  408fbe:	mov    QWORD PTR [rsp+0x18],rcx
  408fc3:	mov    QWORD PTR [rsp+0x20],r8
  408fc8:	je     40916d <_start@@Base+0x373d>
  408fce:	cmp    BYTE PTR [rsi],0x22
  408fd1:	je     409120 <_start@@Base+0x36f0>
  408fd7:	mov    ecx,0x5
  408fdc:	mov    rdi,r12
  408fdf:	call   41b920 <flatcc_json_parser_set_error@@Base>
  408fe4:	mov    rbx,rax
  408fe7:	mov    rax,rbp
  408fea:	sub    rax,rbx
  408fed:	cmp    rax,0x1
  408ff1:	jle    408ffe <_start@@Base+0x35ce>
  408ff3:	cmp    BYTE PTR [rbx],0x20
  408ff6:	jg     40900f <_start@@Base+0x35df>
  408ff8:	je     40915a <_start@@Base+0x372a>
  408ffe:	mov    rsi,rbx
  409001:	mov    rdx,rbp
  409004:	mov    rdi,r12
  409007:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40900c:	mov    rbx,rax
  40900f:	cmp    rbp,rbx
  409012:	je     409071 <_start@@Base+0x3641>
  409014:	lea    rax,[rsp+0x38]
  409019:	lea    r15,[rsp+0x3c]
  40901e:	lea    r14,[rsp+0x40]
  409023:	mov    QWORD PTR [rsp+0x10],0x0
  40902c:	mov    QWORD PTR [rsp+0x8],rax
  409031:	mov    r13,QWORD PTR [rsp+0x18]
  409036:	mov    rax,QWORD PTR [r13+0x0]
  40903a:	jmp    409056 <_start@@Base+0x3626>
  40903c:	nop    DWORD PTR [rax+0x0]
  409040:	cmp    rbx,rax
  409043:	jne    4090a0 <_start@@Base+0x3670>
  409045:	add    r13,0x8
  409049:	mov    rax,QWORD PTR [r13+0x0]
  40904d:	test   rax,rax
  409050:	je     4090f0 <_start@@Base+0x36c0>
  409056:	mov    r9,r15
  409059:	mov    r8,r14
  40905c:	mov    rcx,QWORD PTR [rsp+0x8]
  409061:	mov    rdx,rbp
  409064:	mov    rsi,rbx
  409067:	mov    rdi,r12
  40906a:	call   rax
  40906c:	cmp    rbp,rax
  40906f:	jne    409040 <_start@@Base+0x3610>
  409071:	mov    rdi,QWORD PTR [rsp+0x48]
  409076:	xor    rdi,QWORD PTR fs:0x28
  40907f:	mov    rax,rbp
  409082:	jne    40917d <_start@@Base+0x374d>
  409088:	add    rsp,0x58
  40908c:	pop    rbx
  40908d:	pop    rbp
  40908e:	pop    r12
  409090:	pop    r13
  409092:	pop    r14
  409094:	pop    r15
  409096:	ret    
  409097:	nop    WORD PTR [rax+rax*1+0x0]
  4090a0:	mov    edx,DWORD PTR [rsp+0x38]
  4090a4:	mov    r8,rax
  4090a7:	mov    rax,QWORD PTR [rsp+0x40]
  4090ac:	test   edx,edx
  4090ae:	je     409110 <_start@@Base+0x36e0>
  4090b0:	movabs rdx,0x8000000000000000
  4090ba:	mov    ecx,0x8
  4090bf:	cmp    rax,rdx
  4090c2:	ja     409134 <_start@@Base+0x3704>
  4090c4:	neg    rax
  4090c7:	mov    QWORD PTR [rsp+0x10],rax
  4090cc:	mov    rax,QWORD PTR [rsp+0x20]
  4090d1:	mov    rcx,QWORD PTR [rsp+0x10]
  4090d6:	add    QWORD PTR [rax],rcx
  4090d9:	mov    ecx,DWORD PTR [rsp+0x3c]
  4090dd:	test   ecx,ecx
  4090df:	je     409175 <_start@@Base+0x3745>
  4090e5:	mov    rbx,r8
  4090e8:	jmp    409031 <_start@@Base+0x3601>
  4090ed:	nop    DWORD PTR [rax]
  4090f0:	mov    rdx,rbp
  4090f3:	mov    ecx,0x17
  4090f8:	mov    rsi,rbx
  4090fb:	mov    rdi,r12
  4090fe:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409103:	mov    rbp,rax
  409106:	jmp    409071 <_start@@Base+0x3641>
  40910b:	nop    DWORD PTR [rax+rax*1+0x0]
  409110:	test   rax,rax
  409113:	js     40912f <_start@@Base+0x36ff>
  409115:	mov    QWORD PTR [rsp+0x10],rax
  40911a:	jmp    4090cc <_start@@Base+0x369c>
  40911c:	nop    DWORD PTR [rax+0x0]
  409120:	lea    rbx,[rsi+0x1]
  409124:	mov    rax,rdx
  409127:	sub    rax,rbx
  40912a:	jmp    408fed <_start@@Base+0x35bd>
  40912f:	mov    ecx,0x7
  409134:	mov    rsi,r8
  409137:	mov    rdx,rbp
  40913a:	mov    rdi,r12
  40913d:	mov    QWORD PTR [rsp+0x28],r8
  409142:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409147:	cmp    rbp,rax
  40914a:	mov    r8,QWORD PTR [rsp+0x28]
  40914f:	jne    4090cc <_start@@Base+0x369c>
  409155:	jmp    409071 <_start@@Base+0x3641>
  40915a:	cmp    BYTE PTR [rbx+0x1],0x20
  40915e:	jle    408ffe <_start@@Base+0x35ce>
  409164:	add    rbx,0x1
  409168:	jmp    40900f <_start@@Base+0x35df>
  40916d:	mov    rbx,rdx
  409170:	jmp    408ffe <_start@@Base+0x35ce>
  409175:	mov    rbp,r8
  409178:	jmp    409071 <_start@@Base+0x3641>
  40917d:	call   405070 <__stack_chk_fail@plt>
  409182:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40918d:	nop    DWORD PTR [rax]
  409190:	push   r15
  409192:	push   r14
  409194:	push   r13
  409196:	push   r12
  409198:	mov    r12,rdi
  40919b:	push   rbp
  40919c:	push   rbx
  40919d:	mov    rbp,rdx
  4091a0:	sub    rsp,0x58
  4091a4:	mov    BYTE PTR [r8],0x0
  4091a8:	mov    rdx,QWORD PTR fs:0x28
  4091b1:	mov    QWORD PTR [rsp+0x48],rdx
  4091b6:	xor    edx,edx
  4091b8:	cmp    rsi,rbp
  4091bb:	mov    QWORD PTR [rsp+0x18],rcx
  4091c0:	mov    QWORD PTR [rsp+0x20],r8
  4091c5:	je     409352 <_start@@Base+0x3922>
  4091cb:	cmp    BYTE PTR [rsi],0x22
  4091ce:	je     409330 <_start@@Base+0x3900>
  4091d4:	mov    ecx,0x5
  4091d9:	mov    rdx,rbp
  4091dc:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4091e1:	mov    rbx,rax
  4091e4:	mov    rax,rbp
  4091e7:	sub    rax,rbx
  4091ea:	cmp    rax,0x1
  4091ee:	jle    4091fb <_start@@Base+0x37cb>
  4091f0:	cmp    BYTE PTR [rbx],0x20
  4091f3:	jg     40920c <_start@@Base+0x37dc>
  4091f5:	je     40933f <_start@@Base+0x390f>
  4091fb:	mov    rsi,rbx
  4091fe:	mov    rdx,rbp
  409201:	mov    rdi,r12
  409204:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409209:	mov    rbx,rax
  40920c:	cmp    rbp,rbx
  40920f:	je     409269 <_start@@Base+0x3839>
  409211:	lea    rax,[rsp+0x38]
  409216:	lea    r15,[rsp+0x3c]
  40921b:	lea    r14,[rsp+0x40]
  409220:	mov    BYTE PTR [rsp+0x17],0x0
  409225:	mov    QWORD PTR [rsp+0x8],rax
  40922a:	mov    r13,QWORD PTR [rsp+0x18]
  40922f:	mov    rax,QWORD PTR [r13+0x0]
  409233:	jmp    40924e <_start@@Base+0x381e>
  409235:	nop    DWORD PTR [rax]
  409238:	cmp    rbx,rax
  40923b:	jne    409290 <_start@@Base+0x3860>
  40923d:	add    r13,0x8
  409241:	mov    rax,QWORD PTR [r13+0x0]
  409245:	test   rax,rax
  409248:	je     4092d8 <_start@@Base+0x38a8>
  40924e:	mov    r9,r15
  409251:	mov    r8,r14
  409254:	mov    rcx,QWORD PTR [rsp+0x8]
  409259:	mov    rdx,rbp
  40925c:	mov    rsi,rbx
  40925f:	mov    rdi,r12
  409262:	call   rax
  409264:	cmp    rbp,rax
  409267:	jne    409238 <_start@@Base+0x3808>
  409269:	mov    rdi,QWORD PTR [rsp+0x48]
  40926e:	xor    rdi,QWORD PTR fs:0x28
  409277:	mov    rax,rbp
  40927a:	jne    409362 <_start@@Base+0x3932>
  409280:	add    rsp,0x58
  409284:	pop    rbx
  409285:	pop    rbp
  409286:	pop    r12
  409288:	pop    r13
  40928a:	pop    r14
  40928c:	pop    r15
  40928e:	ret    
  40928f:	nop
  409290:	mov    edx,DWORD PTR [rsp+0x38]
  409294:	mov    r8,rax
  409297:	mov    rax,QWORD PTR [rsp+0x40]
  40929c:	test   edx,edx
  40929e:	je     4092f8 <_start@@Base+0x38c8>
  4092a0:	cmp    rax,0x80
  4092a6:	mov    ecx,0x8
  4092ab:	ja     409309 <_start@@Base+0x38d9>
  4092ad:	neg    eax
  4092af:	mov    BYTE PTR [rsp+0x17],al
  4092b3:	mov    rax,QWORD PTR [rsp+0x20]
  4092b8:	movzx  ecx,BYTE PTR [rsp+0x17]
  4092bd:	add    BYTE PTR [rax],cl
  4092bf:	mov    ecx,DWORD PTR [rsp+0x3c]
  4092c3:	test   ecx,ecx
  4092c5:	je     40935a <_start@@Base+0x392a>
  4092cb:	mov    rbx,r8
  4092ce:	jmp    40922a <_start@@Base+0x37fa>
  4092d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d8:	mov    rdx,rbp
  4092db:	mov    ecx,0x17
  4092e0:	mov    rsi,rbx
  4092e3:	mov    rdi,r12
  4092e6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4092eb:	mov    rbp,rax
  4092ee:	jmp    409269 <_start@@Base+0x3839>
  4092f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4092f8:	cmp    rax,0x7f
  4092fc:	ja     409304 <_start@@Base+0x38d4>
  4092fe:	mov    BYTE PTR [rsp+0x17],al
  409302:	jmp    4092b3 <_start@@Base+0x3883>
  409304:	mov    ecx,0x7
  409309:	mov    rsi,r8
  40930c:	mov    rdx,rbp
  40930f:	mov    rdi,r12
  409312:	mov    QWORD PTR [rsp+0x28],r8
  409317:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40931c:	cmp    rbp,rax
  40931f:	mov    r8,QWORD PTR [rsp+0x28]
  409324:	jne    4092b3 <_start@@Base+0x3883>
  409326:	jmp    409269 <_start@@Base+0x3839>
  40932b:	nop    DWORD PTR [rax+rax*1+0x0]
  409330:	lea    rbx,[rsi+0x1]
  409334:	mov    rax,rbp
  409337:	sub    rax,rbx
  40933a:	jmp    4091ea <_start@@Base+0x37ba>
  40933f:	cmp    BYTE PTR [rbx+0x1],0x20
  409343:	jle    4091fb <_start@@Base+0x37cb>
  409349:	add    rbx,0x1
  40934d:	jmp    40920c <_start@@Base+0x37dc>
  409352:	mov    rbx,rbp
  409355:	jmp    4091fb <_start@@Base+0x37cb>
  40935a:	mov    rbp,r8
  40935d:	jmp    409269 <_start@@Base+0x3839>
  409362:	call   405070 <__stack_chk_fail@plt>
  409367:	nop    WORD PTR [rax+rax*1+0x0]
  409370:	push   r15
  409372:	push   r14
  409374:	push   r13
  409376:	push   r12
  409378:	mov    r12,rdi
  40937b:	push   rbp
  40937c:	push   rbx
  40937d:	mov    rbp,rdx
  409380:	sub    rsp,0x58
  409384:	mov    DWORD PTR [r8],0x0
  40938b:	mov    rdi,QWORD PTR fs:0x28
  409394:	mov    QWORD PTR [rsp+0x48],rdi
  409399:	xor    edi,edi
  40939b:	cmp    rsi,rdx
  40939e:	mov    QWORD PTR [rsp+0x10],rcx
  4093a3:	mov    QWORD PTR [rsp+0x20],r8
  4093a8:	je     409531 <_start@@Base+0x3b01>
  4093ae:	cmp    BYTE PTR [rsi],0x22
  4093b1:	je     4094e0 <_start@@Base+0x3ab0>
  4093b7:	mov    ecx,0x5
  4093bc:	mov    rdi,r12
  4093bf:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4093c4:	mov    rbx,rax
  4093c7:	mov    rax,rbp
  4093ca:	sub    rax,rbx
  4093cd:	cmp    rax,0x1
  4093d1:	jle    4093de <_start@@Base+0x39ae>
  4093d3:	cmp    BYTE PTR [rbx],0x20
  4093d6:	jg     4093ef <_start@@Base+0x39bf>
  4093d8:	je     40951e <_start@@Base+0x3aee>
  4093de:	mov    rsi,rbx
  4093e1:	mov    rdx,rbp
  4093e4:	mov    rdi,r12
  4093e7:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  4093ec:	mov    rbx,rax
  4093ef:	cmp    rbp,rbx
  4093f2:	je     409451 <_start@@Base+0x3a21>
  4093f4:	lea    rax,[rsp+0x38]
  4093f9:	lea    r15,[rsp+0x3c]
  4093fe:	lea    r14,[rsp+0x40]
  409403:	mov    DWORD PTR [rsp+0x1c],0x0
  40940b:	mov    QWORD PTR [rsp+0x8],rax
  409410:	mov    r13,QWORD PTR [rsp+0x10]
  409415:	mov    rax,QWORD PTR [r13+0x0]
  409419:	jmp    409436 <_start@@Base+0x3a06>
  40941b:	nop    DWORD PTR [rax+rax*1+0x0]
  409420:	cmp    rbx,rax
  409423:	jne    409480 <_start@@Base+0x3a50>
  409425:	add    r13,0x8
  409429:	mov    rax,QWORD PTR [r13+0x0]
  40942d:	test   rax,rax
  409430:	je     4094c0 <_start@@Base+0x3a90>
  409436:	mov    r9,r15
  409439:	mov    r8,r14
  40943c:	mov    rcx,QWORD PTR [rsp+0x8]
  409441:	mov    rdx,rbp
  409444:	mov    rsi,rbx
  409447:	mov    rdi,r12
  40944a:	call   rax
  40944c:	cmp    rbp,rax
  40944f:	jne    409420 <_start@@Base+0x39f0>
  409451:	mov    rdi,QWORD PTR [rsp+0x48]
  409456:	xor    rdi,QWORD PTR fs:0x28
  40945f:	mov    rax,rbp
  409462:	jne    409541 <_start@@Base+0x3b11>
  409468:	add    rsp,0x58
  40946c:	pop    rbx
  40946d:	pop    rbp
  40946e:	pop    r12
  409470:	pop    r13
  409472:	pop    r14
  409474:	pop    r15
  409476:	ret    
  409477:	nop    WORD PTR [rax+rax*1+0x0]
  409480:	mov    r8,rax
  409483:	mov    eax,DWORD PTR [rsp+0x38]
  409487:	test   eax,eax
  409489:	jne    4094f0 <_start@@Base+0x3ac0>
  40948b:	mov    rax,QWORD PTR [rsp+0x40]
  409490:	mov    edx,0xffffffff
  409495:	cmp    rax,rdx
  409498:	ja     409517 <_start@@Base+0x3ae7>
  40949a:	mov    DWORD PTR [rsp+0x1c],eax
  40949e:	mov    rax,QWORD PTR [rsp+0x20]
  4094a3:	mov    edx,DWORD PTR [rsp+0x3c]
  4094a7:	mov    ecx,DWORD PTR [rsp+0x1c]
  4094ab:	add    DWORD PTR [rax],ecx
  4094ad:	test   edx,edx
  4094af:	je     409539 <_start@@Base+0x3b09>
  4094b5:	mov    rbx,r8
  4094b8:	jmp    409410 <_start@@Base+0x39e0>
  4094bd:	nop    DWORD PTR [rax]
  4094c0:	mov    rdx,rbp
  4094c3:	mov    ecx,0x17
  4094c8:	mov    rsi,rbx
  4094cb:	mov    rdi,r12
  4094ce:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4094d3:	mov    rbp,rax
  4094d6:	jmp    409451 <_start@@Base+0x3a21>
  4094db:	nop    DWORD PTR [rax+rax*1+0x0]
  4094e0:	lea    rbx,[rsi+0x1]
  4094e4:	mov    rax,rdx
  4094e7:	sub    rax,rbx
  4094ea:	jmp    4093cd <_start@@Base+0x399d>
  4094ef:	nop
  4094f0:	mov    ecx,0x8
  4094f5:	mov    rsi,r8
  4094f8:	mov    rdx,rbp
  4094fb:	mov    rdi,r12
  4094fe:	mov    QWORD PTR [rsp+0x28],r8
  409503:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409508:	cmp    rbp,rax
  40950b:	mov    r8,QWORD PTR [rsp+0x28]
  409510:	jne    40949e <_start@@Base+0x3a6e>
  409512:	jmp    409451 <_start@@Base+0x3a21>
  409517:	mov    ecx,0x7
  40951c:	jmp    4094f5 <_start@@Base+0x3ac5>
  40951e:	cmp    BYTE PTR [rbx+0x1],0x20
  409522:	jle    4093de <_start@@Base+0x39ae>
  409528:	add    rbx,0x1
  40952c:	jmp    4093ef <_start@@Base+0x39bf>
  409531:	mov    rbx,rdx
  409534:	jmp    4093de <_start@@Base+0x39ae>
  409539:	mov    rbp,r8
  40953c:	jmp    409451 <_start@@Base+0x3a21>
  409541:	call   405070 <__stack_chk_fail@plt>
  409546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409550:	push   r15
  409552:	push   r14
  409554:	push   r13
  409556:	push   r12
  409558:	mov    r12,rdi
  40955b:	push   rbp
  40955c:	push   rbx
  40955d:	mov    rbp,rdx
  409560:	sub    rsp,0x58
  409564:	mov    DWORD PTR [r8],0x0
  40956b:	mov    rdi,QWORD PTR fs:0x28
  409574:	mov    QWORD PTR [rsp+0x48],rdi
  409579:	xor    edi,edi
  40957b:	cmp    rsi,rdx
  40957e:	mov    QWORD PTR [rsp+0x18],rcx
  409583:	mov    QWORD PTR [rsp+0x20],r8
  409588:	je     409722 <_start@@Base+0x3cf2>
  40958e:	cmp    BYTE PTR [rsi],0x22
  409591:	je     409700 <_start@@Base+0x3cd0>
  409597:	mov    ecx,0x5
  40959c:	mov    rdi,r12
  40959f:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4095a4:	mov    rbx,rax
  4095a7:	mov    rax,rbp
  4095aa:	sub    rax,rbx
  4095ad:	cmp    rax,0x1
  4095b1:	jle    4095be <_start@@Base+0x3b8e>
  4095b3:	cmp    BYTE PTR [rbx],0x20
  4095b6:	jg     4095cf <_start@@Base+0x3b9f>
  4095b8:	je     40970f <_start@@Base+0x3cdf>
  4095be:	mov    rsi,rbx
  4095c1:	mov    rdx,rbp
  4095c4:	mov    rdi,r12
  4095c7:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  4095cc:	mov    rbx,rax
  4095cf:	cmp    rbp,rbx
  4095d2:	je     409631 <_start@@Base+0x3c01>
  4095d4:	lea    rax,[rsp+0x38]
  4095d9:	lea    r15,[rsp+0x3c]
  4095de:	lea    r14,[rsp+0x40]
  4095e3:	mov    DWORD PTR [rsp+0x14],0x0
  4095eb:	mov    QWORD PTR [rsp+0x8],rax
  4095f0:	mov    r13,QWORD PTR [rsp+0x18]
  4095f5:	mov    rax,QWORD PTR [r13+0x0]
  4095f9:	jmp    409616 <_start@@Base+0x3be6>
  4095fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409600:	cmp    rbx,rax
  409603:	jne    409660 <_start@@Base+0x3c30>
  409605:	add    r13,0x8
  409609:	mov    rax,QWORD PTR [r13+0x0]
  40960d:	test   rax,rax
  409610:	je     4096a8 <_start@@Base+0x3c78>
  409616:	mov    r9,r15
  409619:	mov    r8,r14
  40961c:	mov    rcx,QWORD PTR [rsp+0x8]
  409621:	mov    rdx,rbp
  409624:	mov    rsi,rbx
  409627:	mov    rdi,r12
  40962a:	call   rax
  40962c:	cmp    rbp,rax
  40962f:	jne    409600 <_start@@Base+0x3bd0>
  409631:	mov    rdi,QWORD PTR [rsp+0x48]
  409636:	xor    rdi,QWORD PTR fs:0x28
  40963f:	mov    rax,rbp
  409642:	jne    409732 <_start@@Base+0x3d02>
  409648:	add    rsp,0x58
  40964c:	pop    rbx
  40964d:	pop    rbp
  40964e:	pop    r12
  409650:	pop    r13
  409652:	pop    r14
  409654:	pop    r15
  409656:	ret    
  409657:	nop    WORD PTR [rax+rax*1+0x0]
  409660:	mov    edx,DWORD PTR [rsp+0x38]
  409664:	mov    r8,rax
  409667:	mov    rax,QWORD PTR [rsp+0x40]
  40966c:	test   edx,edx
  40966e:	je     4096c8 <_start@@Base+0x3c98>
  409670:	mov    edx,0x80000000
  409675:	mov    ecx,0x8
  40967a:	cmp    rax,rdx
  40967d:	ja     4096db <_start@@Base+0x3cab>
  40967f:	neg    eax
  409681:	mov    DWORD PTR [rsp+0x14],eax
  409685:	mov    rax,QWORD PTR [rsp+0x20]
  40968a:	mov    ecx,DWORD PTR [rsp+0x14]
  40968e:	add    DWORD PTR [rax],ecx
  409690:	mov    ecx,DWORD PTR [rsp+0x3c]
  409694:	test   ecx,ecx
  409696:	je     40972a <_start@@Base+0x3cfa>
  40969c:	mov    rbx,r8
  40969f:	jmp    4095f0 <_start@@Base+0x3bc0>
  4096a4:	nop    DWORD PTR [rax+0x0]
  4096a8:	mov    rdx,rbp
  4096ab:	mov    ecx,0x17
  4096b0:	mov    rsi,rbx
  4096b3:	mov    rdi,r12
  4096b6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4096bb:	mov    rbp,rax
  4096be:	jmp    409631 <_start@@Base+0x3c01>
  4096c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4096c8:	cmp    rax,0x7fffffff
  4096ce:	ja     4096d6 <_start@@Base+0x3ca6>
  4096d0:	mov    DWORD PTR [rsp+0x14],eax
  4096d4:	jmp    409685 <_start@@Base+0x3c55>
  4096d6:	mov    ecx,0x7
  4096db:	mov    rsi,r8
  4096de:	mov    rdx,rbp
  4096e1:	mov    rdi,r12
  4096e4:	mov    QWORD PTR [rsp+0x28],r8
  4096e9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4096ee:	cmp    rbp,rax
  4096f1:	mov    r8,QWORD PTR [rsp+0x28]
  4096f6:	jne    409685 <_start@@Base+0x3c55>
  4096f8:	jmp    409631 <_start@@Base+0x3c01>
  4096fd:	nop    DWORD PTR [rax]
  409700:	lea    rbx,[rsi+0x1]
  409704:	mov    rax,rdx
  409707:	sub    rax,rbx
  40970a:	jmp    4095ad <_start@@Base+0x3b7d>
  40970f:	cmp    BYTE PTR [rbx+0x1],0x20
  409713:	jle    4095be <_start@@Base+0x3b8e>
  409719:	add    rbx,0x1
  40971d:	jmp    4095cf <_start@@Base+0x3b9f>
  409722:	mov    rbx,rdx
  409725:	jmp    4095be <_start@@Base+0x3b8e>
  40972a:	mov    rbp,r8
  40972d:	jmp    409631 <_start@@Base+0x3c01>
  409732:	call   405070 <__stack_chk_fail@plt>
  409737:	nop    WORD PTR [rax+rax*1+0x0]
  409740:	push   r15
  409742:	push   r14
  409744:	push   r13
  409746:	push   r12
  409748:	mov    r12,rdi
  40974b:	push   rbp
  40974c:	push   rbx
  40974d:	mov    rbp,rdx
  409750:	xor    edi,edi
  409752:	sub    rsp,0x58
  409756:	mov    WORD PTR [r8],di
  40975a:	mov    rdx,QWORD PTR fs:0x28
  409763:	mov    QWORD PTR [rsp+0x48],rdx
  409768:	xor    edx,edx
  40976a:	cmp    rsi,rbp
  40976d:	mov    QWORD PTR [rsp+0x18],rcx
  409772:	mov    QWORD PTR [rsp+0x20],r8
  409777:	je     409912 <_start@@Base+0x3ee2>
  40977d:	cmp    BYTE PTR [rsi],0x22
  409780:	je     4098f0 <_start@@Base+0x3ec0>
  409786:	mov    ecx,0x5
  40978b:	mov    rdx,rbp
  40978e:	mov    rdi,r12
  409791:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409796:	mov    rbx,rax
  409799:	mov    rax,rbp
  40979c:	sub    rax,rbx
  40979f:	cmp    rax,0x1
  4097a3:	jle    4097b0 <_start@@Base+0x3d80>
  4097a5:	cmp    BYTE PTR [rbx],0x20
  4097a8:	jg     4097c1 <_start@@Base+0x3d91>
  4097aa:	je     4098ff <_start@@Base+0x3ecf>
  4097b0:	mov    rsi,rbx
  4097b3:	mov    rdx,rbp
  4097b6:	mov    rdi,r12
  4097b9:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  4097be:	mov    rbx,rax
  4097c1:	cmp    rbp,rbx
  4097c4:	je     409821 <_start@@Base+0x3df1>
  4097c6:	lea    rax,[rsp+0x38]
  4097cb:	xor    esi,esi
  4097cd:	lea    r15,[rsp+0x3c]
  4097d2:	lea    r14,[rsp+0x40]
  4097d7:	mov    WORD PTR [rsp+0x16],si
  4097dc:	mov    QWORD PTR [rsp+0x8],rax
  4097e1:	mov    r13,QWORD PTR [rsp+0x18]
  4097e6:	mov    rax,QWORD PTR [r13+0x0]
  4097ea:	jmp    409806 <_start@@Base+0x3dd6>
  4097ec:	nop    DWORD PTR [rax+0x0]
  4097f0:	cmp    rbx,rax
  4097f3:	jne    409850 <_start@@Base+0x3e20>
  4097f5:	add    r13,0x8
  4097f9:	mov    rax,QWORD PTR [r13+0x0]
  4097fd:	test   rax,rax
  409800:	je     409898 <_start@@Base+0x3e68>
  409806:	mov    r9,r15
  409809:	mov    r8,r14
  40980c:	mov    rcx,QWORD PTR [rsp+0x8]
  409811:	mov    rdx,rbp
  409814:	mov    rsi,rbx
  409817:	mov    rdi,r12
  40981a:	call   rax
  40981c:	cmp    rbp,rax
  40981f:	jne    4097f0 <_start@@Base+0x3dc0>
  409821:	mov    rdi,QWORD PTR [rsp+0x48]
  409826:	xor    rdi,QWORD PTR fs:0x28
  40982f:	mov    rax,rbp
  409832:	jne    409922 <_start@@Base+0x3ef2>
  409838:	add    rsp,0x58
  40983c:	pop    rbx
  40983d:	pop    rbp
  40983e:	pop    r12
  409840:	pop    r13
  409842:	pop    r14
  409844:	pop    r15
  409846:	ret    
  409847:	nop    WORD PTR [rax+rax*1+0x0]
  409850:	mov    edx,DWORD PTR [rsp+0x38]
  409854:	mov    r8,rax
  409857:	mov    rax,QWORD PTR [rsp+0x40]
  40985c:	test   edx,edx
  40985e:	je     4098b8 <_start@@Base+0x3e88>
  409860:	cmp    rax,0x8000
  409866:	mov    ecx,0x8
  40986b:	ja     4098cc <_start@@Base+0x3e9c>
  40986d:	neg    eax
  40986f:	mov    WORD PTR [rsp+0x16],ax
  409874:	mov    rax,QWORD PTR [rsp+0x20]
  409879:	movzx  ecx,WORD PTR [rsp+0x16]
  40987e:	add    WORD PTR [rax],cx
  409881:	mov    ecx,DWORD PTR [rsp+0x3c]
  409885:	test   ecx,ecx
  409887:	je     40991a <_start@@Base+0x3eea>
  40988d:	mov    rbx,r8
  409890:	jmp    4097e1 <_start@@Base+0x3db1>
  409895:	nop    DWORD PTR [rax]
  409898:	mov    rdx,rbp
  40989b:	mov    ecx,0x17
  4098a0:	mov    rsi,rbx
  4098a3:	mov    rdi,r12
  4098a6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4098ab:	mov    rbp,rax
  4098ae:	jmp    409821 <_start@@Base+0x3df1>
  4098b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4098b8:	cmp    rax,0x7fff
  4098be:	ja     4098c7 <_start@@Base+0x3e97>
  4098c0:	mov    WORD PTR [rsp+0x16],ax
  4098c5:	jmp    409874 <_start@@Base+0x3e44>
  4098c7:	mov    ecx,0x7
  4098cc:	mov    rsi,r8
  4098cf:	mov    rdx,rbp
  4098d2:	mov    rdi,r12
  4098d5:	mov    QWORD PTR [rsp+0x28],r8
  4098da:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4098df:	cmp    rbp,rax
  4098e2:	mov    r8,QWORD PTR [rsp+0x28]
  4098e7:	jne    409874 <_start@@Base+0x3e44>
  4098e9:	jmp    409821 <_start@@Base+0x3df1>
  4098ee:	xchg   ax,ax
  4098f0:	lea    rbx,[rsi+0x1]
  4098f4:	mov    rax,rbp
  4098f7:	sub    rax,rbx
  4098fa:	jmp    40979f <_start@@Base+0x3d6f>
  4098ff:	cmp    BYTE PTR [rbx+0x1],0x20
  409903:	jle    4097b0 <_start@@Base+0x3d80>
  409909:	add    rbx,0x1
  40990d:	jmp    4097c1 <_start@@Base+0x3d91>
  409912:	mov    rbx,rbp
  409915:	jmp    4097b0 <_start@@Base+0x3d80>
  40991a:	mov    rbp,r8
  40991d:	jmp    409821 <_start@@Base+0x3df1>
  409922:	call   405070 <__stack_chk_fail@plt>
  409927:	nop    WORD PTR [rax+rax*1+0x0]
  409930:	push   r15
  409932:	push   r14
  409934:	push   r13
  409936:	push   r12
  409938:	mov    r12,rdi
  40993b:	push   rbp
  40993c:	push   rbx
  40993d:	mov    rbp,rdx
  409940:	sub    rsp,0x58
  409944:	mov    BYTE PTR [r8],0x0
  409948:	mov    rdx,QWORD PTR fs:0x28
  409951:	mov    QWORD PTR [rsp+0x48],rdx
  409956:	xor    edx,edx
  409958:	cmp    rsi,rbp
  40995b:	mov    QWORD PTR [rsp+0x10],rcx
  409960:	mov    QWORD PTR [rsp+0x20],r8
  409965:	je     409ae1 <_start@@Base+0x40b1>
  40996b:	cmp    BYTE PTR [rsi],0x22
  40996e:	je     409a90 <_start@@Base+0x4060>
  409974:	mov    ecx,0x5
  409979:	mov    rdx,rbp
  40997c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409981:	mov    rbx,rax
  409984:	mov    rax,rbp
  409987:	sub    rax,rbx
  40998a:	cmp    rax,0x1
  40998e:	jle    40999b <_start@@Base+0x3f6b>
  409990:	cmp    BYTE PTR [rbx],0x20
  409993:	jg     4099ac <_start@@Base+0x3f7c>
  409995:	je     409ace <_start@@Base+0x409e>
  40999b:	mov    rsi,rbx
  40999e:	mov    rdx,rbp
  4099a1:	mov    rdi,r12
  4099a4:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  4099a9:	mov    rbx,rax
  4099ac:	cmp    rbp,rbx
  4099af:	je     409a09 <_start@@Base+0x3fd9>
  4099b1:	lea    rax,[rsp+0x38]
  4099b6:	lea    r15,[rsp+0x3c]
  4099bb:	lea    r14,[rsp+0x40]
  4099c0:	mov    BYTE PTR [rsp+0x1f],0x0
  4099c5:	mov    QWORD PTR [rsp+0x8],rax
  4099ca:	mov    r13,QWORD PTR [rsp+0x10]
  4099cf:	mov    rax,QWORD PTR [r13+0x0]
  4099d3:	jmp    4099ee <_start@@Base+0x3fbe>
  4099d5:	nop    DWORD PTR [rax]
  4099d8:	cmp    rbx,rax
  4099db:	jne    409a30 <_start@@Base+0x4000>
  4099dd:	add    r13,0x8
  4099e1:	mov    rax,QWORD PTR [r13+0x0]
  4099e5:	test   rax,rax
  4099e8:	je     409a70 <_start@@Base+0x4040>
  4099ee:	mov    r9,r15
  4099f1:	mov    r8,r14
  4099f4:	mov    rcx,QWORD PTR [rsp+0x8]
  4099f9:	mov    rdx,rbp
  4099fc:	mov    rsi,rbx
  4099ff:	mov    rdi,r12
  409a02:	call   rax
  409a04:	cmp    rbp,rax
  409a07:	jne    4099d8 <_start@@Base+0x3fa8>
  409a09:	mov    rdi,QWORD PTR [rsp+0x48]
  409a0e:	xor    rdi,QWORD PTR fs:0x28
  409a17:	mov    rax,rbp
  409a1a:	jne    409af1 <_start@@Base+0x40c1>
  409a20:	add    rsp,0x58
  409a24:	pop    rbx
  409a25:	pop    rbp
  409a26:	pop    r12
  409a28:	pop    r13
  409a2a:	pop    r14
  409a2c:	pop    r15
  409a2e:	ret    
  409a2f:	nop
  409a30:	mov    r8,rax
  409a33:	mov    eax,DWORD PTR [rsp+0x38]
  409a37:	test   eax,eax
  409a39:	jne    409aa0 <_start@@Base+0x4070>
  409a3b:	mov    rax,QWORD PTR [rsp+0x40]
  409a40:	cmp    rax,0xff
  409a46:	ja     409ac7 <_start@@Base+0x4097>
  409a48:	mov    BYTE PTR [rsp+0x1f],al
  409a4c:	mov    rax,QWORD PTR [rsp+0x20]
  409a51:	mov    edx,DWORD PTR [rsp+0x3c]
  409a55:	movzx  ecx,BYTE PTR [rsp+0x1f]
  409a5a:	add    BYTE PTR [rax],cl
  409a5c:	test   edx,edx
  409a5e:	je     409ae9 <_start@@Base+0x40b9>
  409a64:	mov    rbx,r8
  409a67:	jmp    4099ca <_start@@Base+0x3f9a>
  409a6c:	nop    DWORD PTR [rax+0x0]
  409a70:	mov    rdx,rbp
  409a73:	mov    ecx,0x17
  409a78:	mov    rsi,rbx
  409a7b:	mov    rdi,r12
  409a7e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409a83:	mov    rbp,rax
  409a86:	jmp    409a09 <_start@@Base+0x3fd9>
  409a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a90:	lea    rbx,[rsi+0x1]
  409a94:	mov    rax,rbp
  409a97:	sub    rax,rbx
  409a9a:	jmp    40998a <_start@@Base+0x3f5a>
  409a9f:	nop
  409aa0:	mov    ecx,0x8
  409aa5:	mov    rsi,r8
  409aa8:	mov    rdx,rbp
  409aab:	mov    rdi,r12
  409aae:	mov    QWORD PTR [rsp+0x28],r8
  409ab3:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409ab8:	cmp    rbp,rax
  409abb:	mov    r8,QWORD PTR [rsp+0x28]
  409ac0:	jne    409a4c <_start@@Base+0x401c>
  409ac2:	jmp    409a09 <_start@@Base+0x3fd9>
  409ac7:	mov    ecx,0x7
  409acc:	jmp    409aa5 <_start@@Base+0x4075>
  409ace:	cmp    BYTE PTR [rbx+0x1],0x20
  409ad2:	jle    40999b <_start@@Base+0x3f6b>
  409ad8:	add    rbx,0x1
  409adc:	jmp    4099ac <_start@@Base+0x3f7c>
  409ae1:	mov    rbx,rbp
  409ae4:	jmp    40999b <_start@@Base+0x3f6b>
  409ae9:	mov    rbp,r8
  409aec:	jmp    409a09 <_start@@Base+0x3fd9>
  409af1:	call   405070 <__stack_chk_fail@plt>
  409af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b00:	cmp    rsi,rdx
  409b03:	je     409b0a <_start@@Base+0x40da>
  409b05:	cmp    BYTE PTR [rsi],0x5b
  409b08:	je     409b20 <_start@@Base+0x40f0>
  409b0a:	mov    DWORD PTR [rcx],0x0
  409b10:	mov    ecx,0x16
  409b15:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  409b1a:	nop    WORD PTR [rax+rax*1+0x0]
  409b20:	lea    rax,[rsi+0x1]
  409b24:	push   r12
  409b26:	push   rbp
  409b27:	push   rbx
  409b28:	mov    rbx,rdx
  409b2b:	mov    rbp,rcx
  409b2e:	sub    rdx,rax
  409b31:	mov    r12,rdi
  409b34:	cmp    rdx,0x1
  409b38:	jle    409b42 <_start@@Base+0x4112>
  409b3a:	cmp    BYTE PTR [rsi+0x1],0x20
  409b3e:	jg     409b50 <_start@@Base+0x4120>
  409b40:	je     409b70 <_start@@Base+0x4140>
  409b42:	mov    rdx,rbx
  409b45:	mov    rsi,rax
  409b48:	mov    rdi,r12
  409b4b:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409b50:	cmp    rbx,rax
  409b53:	je     409b5a <_start@@Base+0x412a>
  409b55:	cmp    BYTE PTR [rax],0x5d
  409b58:	je     409b80 <_start@@Base+0x4150>
  409b5a:	mov    DWORD PTR [rbp+0x0],0x1
  409b61:	pop    rbx
  409b62:	pop    rbp
  409b63:	pop    r12
  409b65:	ret    
  409b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b70:	cmp    BYTE PTR [rsi+0x2],0x20
  409b74:	jle    409b42 <_start@@Base+0x4112>
  409b76:	lea    rax,[rsi+0x2]
  409b7a:	jmp    409b50 <_start@@Base+0x4120>
  409b7c:	nop    DWORD PTR [rax+0x0]
  409b80:	mov    DWORD PTR [rbp+0x0],0x0
  409b87:	mov    rdx,rbx
  409b8a:	mov    rdi,r12
  409b8d:	pop    rbx
  409b8e:	pop    rbp
  409b8f:	pop    r12
  409b91:	lea    rsi,[rax+0x1]
  409b95:	jmp    406b20 <_start@@Base+0x10f0>
  409b9a:	nop    WORD PTR [rax+rax*1+0x0]
  409ba0:	movsxd rcx,ecx
  409ba3:	cmp    BYTE PTR [rsi+rcx*1],0x22
  409ba7:	je     409bb0 <_start@@Base+0x4180>
  409ba9:	mov    rax,rsi
  409bac:	ret    
  409bad:	nop    DWORD PTR [rax]
  409bb0:	lea    rsi,[rsi+rcx*1+0x1]
  409bb5:	push   rbp
  409bb6:	mov    rax,rdx
  409bb9:	push   rbx
  409bba:	mov    rbp,rdi
  409bbd:	mov    rbx,rdx
  409bc0:	sub    rax,rsi
  409bc3:	sub    rsp,0x8
  409bc7:	cmp    rax,0x1
  409bcb:	jle    409bd4 <_start@@Base+0x41a4>
  409bcd:	cmp    BYTE PTR [rsi],0x20
  409bd0:	jg     409be2 <_start@@Base+0x41b2>
  409bd2:	je     409c08 <_start@@Base+0x41d8>
  409bd4:	mov    rdx,rbx
  409bd7:	mov    rdi,rbp
  409bda:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409bdf:	mov    rsi,rax
  409be2:	cmp    rbx,rsi
  409be5:	je     409bec <_start@@Base+0x41bc>
  409be7:	cmp    BYTE PTR [rsi],0x3a
  409bea:	je     409c18 <_start@@Base+0x41e8>
  409bec:	add    rsp,0x8
  409bf0:	mov    rdx,rbx
  409bf3:	mov    rdi,rbp
  409bf6:	pop    rbx
  409bf7:	pop    rbp
  409bf8:	mov    ecx,0x4
  409bfd:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  409c02:	nop    WORD PTR [rax+rax*1+0x0]
  409c08:	cmp    BYTE PTR [rsi+0x1],0x20
  409c0c:	jle    409bd4 <_start@@Base+0x41a4>
  409c0e:	add    rsi,0x1
  409c12:	jmp    409be2 <_start@@Base+0x41b2>
  409c14:	nop    DWORD PTR [rax+0x0]
  409c18:	add    rsp,0x8
  409c1c:	mov    rdx,rbx
  409c1f:	mov    rdi,rbp
  409c22:	pop    rbx
  409c23:	pop    rbp
  409c24:	add    rsi,0x1
  409c28:	jmp    406b20 <_start@@Base+0x10f0>
  409c2d:	nop    DWORD PTR [rax]
  409c30:	push   r15
  409c32:	push   r14
  409c34:	mov    r15,rcx
  409c37:	push   r13
  409c39:	push   r12
  409c3b:	mov    r13,rdx
  409c3e:	push   rbp
  409c3f:	push   rbx
  409c40:	mov    rbx,rdi
  409c43:	mov    r12,rsi
  409c46:	mov    edx,0x4
  409c4b:	mov    esi,0x4
  409c50:	sub    rsp,0x48
  409c54:	mov    rdi,QWORD PTR [rdi]
  409c57:	mov    DWORD PTR [rcx],0x0
  409c5d:	mov    rax,QWORD PTR fs:0x28
  409c66:	mov    QWORD PTR [rsp+0x38],rax
  409c6b:	xor    eax,eax
  409c6d:	call   415e90 <flatcc_builder_start_struct@@Base>
  409c72:	test   rax,rax
  409c75:	je     409cb8 <_start@@Base+0x4288>
  409c77:	cmp    r12,r13
  409c7a:	je     409c83 <_start@@Base+0x4253>
  409c7c:	cmp    BYTE PTR [r12],0x7b
  409c81:	je     409cf4 <_start@@Base+0x42c4>
  409c83:	mov    rsi,r12
  409c86:	mov    ecx,0x15
  409c8b:	mov    rdx,r13
  409c8e:	mov    rdi,rbx
  409c91:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409c96:	mov    r12,rax
  409c99:	nop    DWORD PTR [rax+0x0]
  409ca0:	cmp    r13,r12
  409ca3:	je     409cb8 <_start@@Base+0x4288>
  409ca5:	mov    rdi,QWORD PTR [rbx]
  409ca8:	call   415f40 <flatcc_builder_end_struct@@Base>
  409cad:	test   eax,eax
  409caf:	mov    DWORD PTR [r15],eax
  409cb2:	jne    409cce <_start@@Base+0x429e>
  409cb4:	nop    DWORD PTR [rax+0x0]
  409cb8:	mov    rsi,r12
  409cbb:	mov    ecx,0x21
  409cc0:	mov    rdx,r13
  409cc3:	mov    rdi,rbx
  409cc6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409ccb:	mov    r12,rax
  409cce:	mov    rbx,QWORD PTR [rsp+0x38]
  409cd3:	xor    rbx,QWORD PTR fs:0x28
  409cdc:	mov    rax,r12
  409cdf:	jne    40a2f2 <_start@@Base+0x48c2>
  409ce5:	add    rsp,0x48
  409ce9:	pop    rbx
  409cea:	pop    rbp
  409ceb:	pop    r12
  409ced:	pop    r13
  409cef:	pop    r14
  409cf1:	pop    r15
  409cf3:	ret    
  409cf4:	lea    rsi,[r12+0x1]
  409cf9:	mov    rbp,rax
  409cfc:	mov    rax,r13
  409cff:	sub    rax,rsi
  409d02:	cmp    rax,0x1
  409d06:	jle    409d16 <_start@@Base+0x42e6>
  409d08:	cmp    BYTE PTR [r12+0x1],0x20
  409d0e:	jg     409d24 <_start@@Base+0x42f4>
  409d10:	je     40a2a4 <_start@@Base+0x4874>
  409d16:	mov    rdx,r13
  409d19:	mov    rdi,rbx
  409d1c:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409d21:	mov    rsi,rax
  409d24:	cmp    r13,rsi
  409d27:	je     409d32 <_start@@Base+0x4302>
  409d29:	cmp    BYTE PTR [rsi],0x7d
  409d2c:	je     40a2db <_start@@Base+0x48ab>
  409d32:	lea    rax,[rsp+0x28]
  409d37:	lea    r12,[rip+0x2130a]        # 42b048 <_IO_stdin_used@@Base+0x48>
  409d3e:	mov    QWORD PTR [rsp+0x18],rax
  409d43:	lea    rax,[rsp+0x30]
  409d48:	mov    QWORD PTR [rsp],rax
  409d4c:	lea    rax,[rsp+0x2c]
  409d51:	mov    QWORD PTR [rsp+0x8],rax
  409d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d60:	cmp    r13,rsi
  409d63:	je     409f20 <_start@@Base+0x44f0>
  409d69:	cmp    BYTE PTR [rsi],0x22
  409d6c:	jne    409f30 <_start@@Base+0x4500>
  409d72:	add    rsi,0x1
  409d76:	mov    rax,r13
  409d79:	sub    rax,rsi
  409d7c:	cmp    rax,0x7
  409d80:	jbe    409f53 <_start@@Base+0x4523>
  409d86:	movbe  rax,QWORD PTR [rsi]
  409d8b:	movabs rdx,0x626f6f6b735f7265
  409d95:	cmp    rax,rdx
  409d98:	jne    409f20 <_start@@Base+0x44f0>
  409d9e:	lea    r8,[rsi+0x8]
  409da2:	mov    rcx,r13
  409da5:	sub    rcx,r8
  409da8:	cmp    rcx,0x7
  409dac:	ja     409f60 <_start@@Base+0x4530>
  409db2:	lea    rdx,[rip+0x2126f]        # 42b028 <_IO_stdin_used@@Base+0x28>
  409db9:	movsxd rax,DWORD PTR [rdx+rcx*4]
  409dbd:	add    rax,rdx
  409dc0:	jmp    rax
  409dc2:	nop    WORD PTR [rax+rax*1+0x0]
  409dc8:	movsx  rdi,BYTE PTR [rsi+0xe]
  409dcd:	shl    rdi,0x8
  409dd1:	movsx  rdx,BYTE PTR [rsi+0xd]
  409dd6:	mov    rax,rdx
  409dd9:	shl    rax,0x10
  409ddd:	or     rdi,rax
  409de0:	movsx  rdx,BYTE PTR [rsi+0xc]
  409de5:	mov    rax,rdx
  409de8:	shl    rax,0x18
  409dec:	or     rax,rdi
  409def:	movsx  rdx,BYTE PTR [rsi+0xb]
  409df4:	mov    rdi,rdx
  409df7:	shl    rdi,0x20
  409dfb:	or     rax,rdi
  409dfe:	movsx  rdx,BYTE PTR [rsi+0xa]
  409e03:	mov    rdi,rdx
  409e06:	shl    rdi,0x28
  409e0a:	or     rdi,rax
  409e0d:	movsx  rdx,BYTE PTR [rsi+0x9]
  409e12:	mov    rax,rdx
  409e15:	shl    rax,0x30
  409e19:	or     rdi,rax
  409e1c:	movsx  rdx,BYTE PTR [rsi+0x8]
  409e21:	mov    rax,rdx
  409e24:	shl    rax,0x38
  409e28:	or     rax,rdi
  409e2b:	movabs rdx,0xffff000000000000
  409e35:	and    rax,rdx
  409e38:	movabs rdx,0x6164000000000000
  409e42:	cmp    rax,rdx
  409e45:	jne    409e51 <_start@@Base+0x4421>
  409e47:	cmp    rcx,0x2
  409e4b:	jg     40a0f0 <_start@@Base+0x46c0>
  409e51:	mov    rdx,r13
  409e54:	mov    rsi,r8
  409e57:	mov    rdi,rbx
  409e5a:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  409e5f:	mov    rdx,r13
  409e62:	sub    rdx,rax
  409e65:	cmp    rdx,0x1
  409e69:	jle    409e76 <_start@@Base+0x4446>
  409e6b:	cmp    BYTE PTR [rax],0x20
  409e6e:	jg     409e84 <_start@@Base+0x4454>
  409e70:	je     409fb0 <_start@@Base+0x4580>
  409e76:	mov    rdx,r13
  409e79:	mov    rsi,rax
  409e7c:	mov    rdi,rbx
  409e7f:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409e84:	cmp    r13,rax
  409e87:	je     409fd0 <_start@@Base+0x45a0>
  409e8d:	movzx  edx,BYTE PTR [rax]
  409e90:	cmp    dl,0x2c
  409e93:	je     409fe0 <_start@@Base+0x45b0>
  409e99:	cmp    dl,0x7d
  409e9c:	je     409f70 <_start@@Base+0x4540>
  409ea2:	mov    ecx,0xa
  409ea7:	mov    rdx,r13
  409eaa:	mov    rsi,rax
  409ead:	mov    rdi,rbx
  409eb0:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409eb5:	mov    r12,rax
  409eb8:	jmp    409ca0 <_start@@Base+0x4270>
  409ebd:	nop    DWORD PTR [rax]
  409ec0:	xor    edi,edi
  409ec2:	jmp    409dd1 <_start@@Base+0x43a1>
  409ec7:	nop    WORD PTR [rax+rax*1+0x0]
  409ed0:	xor    eax,eax
  409ed2:	jmp    409def <_start@@Base+0x43bf>
  409ed7:	nop    WORD PTR [rax+rax*1+0x0]
  409ee0:	xor    eax,eax
  409ee2:	jmp    409dfe <_start@@Base+0x43ce>
  409ee7:	nop    WORD PTR [rax+rax*1+0x0]
  409ef0:	xor    edi,edi
  409ef2:	jmp    409e0d <_start@@Base+0x43dd>
  409ef7:	nop    WORD PTR [rax+rax*1+0x0]
  409f00:	xor    edi,edi
  409f02:	jmp    409e1c <_start@@Base+0x43ec>
  409f07:	nop    WORD PTR [rax+rax*1+0x0]
  409f10:	xor    edi,edi
  409f12:	jmp    409de0 <_start@@Base+0x43b0>
  409f17:	nop    WORD PTR [rax+rax*1+0x0]
  409f20:	mov    rdx,r13
  409f23:	mov    rdi,rbx
  409f26:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  409f2b:	jmp    409e5f <_start@@Base+0x442f>
  409f30:	mov    ecx,0x5
  409f35:	mov    rdx,r13
  409f38:	mov    rdi,rbx
  409f3b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  409f40:	mov    rsi,rax
  409f43:	mov    rax,r13
  409f46:	sub    rax,rsi
  409f49:	cmp    rax,0x7
  409f4d:	ja     409d86 <_start@@Base+0x4356>
  409f53:	movsxd rax,DWORD PTR [r12+rax*4]
  409f57:	add    rax,r12
  409f5a:	jmp    rax
  409f5c:	nop    DWORD PTR [rax+0x0]
  409f60:	movbe  rax,QWORD PTR [rsi+0x8]
  409f66:	jmp    409e2b <_start@@Base+0x43fb>
  409f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f70:	lea    r12,[rax+0x1]
  409f74:	mov    rdx,r13
  409f77:	sub    rdx,r12
  409f7a:	cmp    rdx,0x1
  409f7e:	jle    409f90 <_start@@Base+0x4560>
  409f80:	cmp    BYTE PTR [rax+0x1],0x20
  409f84:	jg     409ca0 <_start@@Base+0x4270>
  409f8a:	je     40a200 <_start@@Base+0x47d0>
  409f90:	mov    rsi,r12
  409f93:	mov    rdx,r13
  409f96:	mov    rdi,rbx
  409f99:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  409f9e:	mov    r12,rax
  409fa1:	jmp    409ca0 <_start@@Base+0x4270>
  409fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fb0:	cmp    BYTE PTR [rax+0x1],0x20
  409fb4:	jle    409e76 <_start@@Base+0x4446>
  409fba:	add    rax,0x1
  409fbe:	cmp    r13,rax
  409fc1:	jne    409e8d <_start@@Base+0x445d>
  409fc7:	nop    WORD PTR [rax+rax*1+0x0]
  409fd0:	mov    r12,r13
  409fd3:	jmp    409cb8 <_start@@Base+0x4288>
  409fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  409fe0:	lea    rsi,[rax+0x1]
  409fe4:	mov    rdx,r13
  409fe7:	sub    rdx,rsi
  409fea:	cmp    rdx,0x1
  409fee:	jle    409ffc <_start@@Base+0x45cc>
  409ff0:	cmp    BYTE PTR [rax+0x1],0x20
  409ff4:	jg     40a00a <_start@@Base+0x45da>
  409ff6:	je     40a218 <_start@@Base+0x47e8>
  409ffc:	mov    rdx,r13
  409fff:	mov    rdi,rbx
  40a002:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a007:	mov    rsi,rax
  40a00a:	cmp    r13,rsi
  40a00d:	je     40a276 <_start@@Base+0x4846>
  40a013:	cmp    BYTE PTR [rsi],0x7d
  40a016:	jne    409d60 <_start@@Base+0x4330>
  40a01c:	lea    r12,[rsi+0x1]
  40a020:	mov    rax,r13
  40a023:	sub    rax,r12
  40a026:	cmp    rax,0x1
  40a02a:	jle    409f90 <_start@@Base+0x4560>
  40a030:	cmp    BYTE PTR [rsi+0x1],0x20
  40a034:	jg     409ca0 <_start@@Base+0x4270>
  40a03a:	jne    409f90 <_start@@Base+0x4560>
  40a040:	cmp    BYTE PTR [rsi+0x2],0x20
  40a044:	jle    409f90 <_start@@Base+0x4560>
  40a04a:	lea    r12,[rsi+0x2]
  40a04e:	jmp    409ca0 <_start@@Base+0x4270>
  40a053:	nop    DWORD PTR [rax+rax*1+0x0]
  40a058:	movsx  rcx,BYTE PTR [rsi+0x6]
  40a05d:	shl    rcx,0x8
  40a061:	movsx  rdx,BYTE PTR [rsi+0x5]
  40a066:	mov    rax,rdx
  40a069:	shl    rax,0x10
  40a06d:	or     rcx,rax
  40a070:	movsx  rdx,BYTE PTR [rsi+0x4]
  40a075:	mov    rax,rdx
  40a078:	shl    rax,0x18
  40a07c:	or     rax,rcx
  40a07f:	movsx  rdx,BYTE PTR [rsi+0x3]
  40a084:	mov    rcx,rdx
  40a087:	shl    rcx,0x20
  40a08b:	or     rax,rcx
  40a08e:	movsx  rdx,BYTE PTR [rsi+0x2]
  40a093:	mov    rcx,rdx
  40a096:	shl    rcx,0x28
  40a09a:	or     rcx,rax
  40a09d:	movsx  rdx,BYTE PTR [rsi+0x1]
  40a0a2:	mov    rax,rdx
  40a0a5:	shl    rax,0x30
  40a0a9:	or     rcx,rax
  40a0ac:	movsx  rdx,BYTE PTR [rsi]
  40a0b0:	mov    rax,rdx
  40a0b3:	shl    rax,0x38
  40a0b7:	or     rax,rcx
  40a0ba:	jmp    409d8b <_start@@Base+0x435b>
  40a0bf:	nop
  40a0c0:	xor    ecx,ecx
  40a0c2:	jmp    40a061 <_start@@Base+0x4631>
  40a0c4:	nop    DWORD PTR [rax+0x0]
  40a0c8:	xor    ecx,ecx
  40a0ca:	jmp    40a070 <_start@@Base+0x4640>
  40a0cc:	nop    DWORD PTR [rax+0x0]
  40a0d0:	xor    eax,eax
  40a0d2:	jmp    40a07f <_start@@Base+0x464f>
  40a0d4:	nop    DWORD PTR [rax+0x0]
  40a0d8:	xor    eax,eax
  40a0da:	jmp    40a08e <_start@@Base+0x465e>
  40a0dc:	nop    DWORD PTR [rax+0x0]
  40a0e0:	xor    ecx,ecx
  40a0e2:	jmp    40a09d <_start@@Base+0x466d>
  40a0e4:	nop    DWORD PTR [rax+0x0]
  40a0e8:	xor    ecx,ecx
  40a0ea:	jmp    40a0ac <_start@@Base+0x467c>
  40a0ec:	nop    DWORD PTR [rax+0x0]
  40a0f0:	cmp    BYTE PTR [rsi+0xa],0x22
  40a0f4:	jne    409e51 <_start@@Base+0x4421>
  40a0fa:	lea    rax,[rsi+0xb]
  40a0fe:	mov    rdx,r13
  40a101:	sub    rdx,rax
  40a104:	cmp    rdx,0x1
  40a108:	jle    40a116 <_start@@Base+0x46e6>
  40a10a:	cmp    BYTE PTR [rsi+0xb],0x20
  40a10e:	jg     40a12e <_start@@Base+0x46fe>
  40a110:	je     40a291 <_start@@Base+0x4861>
  40a116:	mov    rdx,r13
  40a119:	mov    rsi,rax
  40a11c:	mov    rdi,rbx
  40a11f:	mov    QWORD PTR [rsp+0x10],r8
  40a124:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a129:	mov    r8,QWORD PTR [rsp+0x10]
  40a12e:	cmp    r13,rax
  40a131:	je     40a13c <_start@@Base+0x470c>
  40a133:	cmp    BYTE PTR [rax],0x3a
  40a136:	je     40a2ba <_start@@Base+0x488a>
  40a13c:	mov    ecx,0x4
  40a141:	mov    rdx,r13
  40a144:	mov    rsi,rax
  40a147:	mov    rdi,rbx
  40a14a:	mov    QWORD PTR [rsp+0x10],r8
  40a14f:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a154:	mov    r8,QWORD PTR [rsp+0x10]
  40a159:	mov    r14,rax
  40a15c:	cmp    r8,r14
  40a15f:	je     409e51 <_start@@Base+0x4421>
  40a165:	cmp    r13,r14
  40a168:	mov    DWORD PTR [rsp+0x28],0x0
  40a170:	mov    QWORD PTR [rsp+0x30],0x0
  40a179:	mov    DWORD PTR [rsp+0x2c],0x0
  40a181:	je     40a248 <_start@@Base+0x4818>
  40a187:	mov    r8,QWORD PTR [rsp]
  40a18b:	mov    rcx,QWORD PTR [rsp+0x8]
  40a190:	mov    rdx,r13
  40a193:	mov    rsi,r14
  40a196:	mov    rdi,rbx
  40a199:	call   41c710 <flatcc_json_parser_integer@@Base>
  40a19e:	cmp    r14,rax
  40a1a1:	je     40a248 <_start@@Base+0x4818>
  40a1a7:	mov    esi,DWORD PTR [rsp+0x2c]
  40a1ab:	mov    rdx,QWORD PTR [rsp+0x30]
  40a1b0:	test   esi,esi
  40a1b2:	mov    ecx,edx
  40a1b4:	je     40a1d0 <_start@@Base+0x47a0>
  40a1b6:	mov    esi,0x80000000
  40a1bb:	neg    ecx
  40a1bd:	cmp    rdx,rsi
  40a1c0:	ja     40a230 <_start@@Base+0x4800>
  40a1c2:	mov    DWORD PTR [rbp+0x0],ecx
  40a1c5:	jmp    409e5f <_start@@Base+0x442f>
  40a1ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a1d0:	cmp    rdx,0x7fffffff
  40a1d7:	jbe    40a1c2 <_start@@Base+0x4792>
  40a1d9:	mov    ecx,0x7
  40a1de:	mov    rdx,r13
  40a1e1:	mov    rsi,rax
  40a1e4:	mov    rdi,rbx
  40a1e7:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a1ec:	cmp    r14,rax
  40a1ef:	je     40a248 <_start@@Base+0x4818>
  40a1f1:	mov    ecx,DWORD PTR [rsp+0x28]
  40a1f5:	jmp    40a1c2 <_start@@Base+0x4792>
  40a1f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a200:	cmp    BYTE PTR [rax+0x2],0x20
  40a204:	jle    409f90 <_start@@Base+0x4560>
  40a20a:	lea    r12,[rax+0x2]
  40a20e:	jmp    409ca0 <_start@@Base+0x4270>
  40a213:	nop    DWORD PTR [rax+rax*1+0x0]
  40a218:	cmp    BYTE PTR [rax+0x2],0x20
  40a21c:	jle    409ffc <_start@@Base+0x45cc>
  40a222:	lea    rsi,[rax+0x2]
  40a226:	jmp    40a00a <_start@@Base+0x45da>
  40a22b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a230:	mov    ecx,0x8
  40a235:	mov    rdx,r13
  40a238:	mov    rsi,rax
  40a23b:	mov    rdi,rbx
  40a23e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a243:	jmp    40a1ec <_start@@Base+0x47bc>
  40a245:	nop    DWORD PTR [rax]
  40a248:	mov    r8,QWORD PTR [rsp+0x18]
  40a24d:	lea    rcx,[rip+0x2efec]        # 439240 <__data_start@@Base+0x180>
  40a254:	mov    rdx,r13
  40a257:	mov    rsi,r14
  40a25a:	mov    rdi,rbx
  40a25d:	call   409550 <_start@@Base+0x3b20>
  40a262:	cmp    rax,r14
  40a265:	je     40a26c <_start@@Base+0x483c>
  40a267:	cmp    r13,rax
  40a26a:	jne    40a1f1 <_start@@Base+0x47c1>
  40a26c:	mov    ecx,0x21
  40a271:	jmp    409ea7 <_start@@Base+0x4477>
  40a276:	mov    ecx,0xa
  40a27b:	mov    rdx,r13
  40a27e:	mov    rsi,r13
  40a281:	mov    rdi,rbx
  40a284:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a289:	mov    r12,rax
  40a28c:	jmp    409ca0 <_start@@Base+0x4270>
  40a291:	cmp    BYTE PTR [rsi+0xc],0x20
  40a295:	jle    40a116 <_start@@Base+0x46e6>
  40a29b:	lea    rax,[rsi+0xc]
  40a29f:	jmp    40a12e <_start@@Base+0x46fe>
  40a2a4:	cmp    BYTE PTR [r12+0x2],0x20
  40a2aa:	jle    409d16 <_start@@Base+0x42e6>
  40a2b0:	lea    rsi,[r12+0x2]
  40a2b5:	jmp    409d24 <_start@@Base+0x42f4>
  40a2ba:	lea    rsi,[rax+0x1]
  40a2be:	mov    rdx,r13
  40a2c1:	mov    rdi,rbx
  40a2c4:	mov    QWORD PTR [rsp+0x10],r8
  40a2c9:	call   406b20 <_start@@Base+0x10f0>
  40a2ce:	mov    r8,QWORD PTR [rsp+0x10]
  40a2d3:	mov    r14,rax
  40a2d6:	jmp    40a15c <_start@@Base+0x472c>
  40a2db:	add    rsi,0x1
  40a2df:	mov    rdx,r13
  40a2e2:	mov    rdi,rbx
  40a2e5:	call   406b20 <_start@@Base+0x10f0>
  40a2ea:	mov    r12,rax
  40a2ed:	jmp    409ca0 <_start@@Base+0x4270>
  40a2f2:	call   405070 <__stack_chk_fail@plt>
  40a2f7:	nop    WORD PTR [rax+rax*1+0x0]
  40a300:	mov    rax,rdx
  40a303:	push   r12
  40a305:	mov    r12,rcx
  40a308:	sub    rax,rsi
  40a30b:	push   rbp
  40a30c:	mov    rbp,rdi
  40a30f:	cmp    rax,0x1
  40a313:	push   rbx
  40a314:	mov    rbx,rdx
  40a317:	jle    40a320 <_start@@Base+0x48f0>
  40a319:	cmp    BYTE PTR [rsi],0x20
  40a31c:	jg     40a32e <_start@@Base+0x48fe>
  40a31e:	je     40a390 <_start@@Base+0x4960>
  40a320:	mov    rdx,rbx
  40a323:	mov    rdi,rbp
  40a326:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a32b:	mov    rsi,rax
  40a32e:	cmp    rbx,rsi
  40a331:	je     40a3e0 <_start@@Base+0x49b0>
  40a337:	cmp    BYTE PTR [rsi],0x2c
  40a33a:	je     40a3a0 <_start@@Base+0x4970>
  40a33c:	mov    DWORD PTR [r12],0x0
  40a344:	cmp    BYTE PTR [rsi],0x5d
  40a347:	je     40a360 <_start@@Base+0x4930>
  40a349:	mov    ecx,0x9
  40a34e:	mov    rdx,rbx
  40a351:	pop    rbx
  40a352:	mov    rdi,rbp
  40a355:	pop    rbp
  40a356:	pop    r12
  40a358:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  40a35d:	nop    DWORD PTR [rax]
  40a360:	lea    rax,[rsi+0x1]
  40a364:	mov    rdx,rbx
  40a367:	sub    rdx,rax
  40a36a:	cmp    rdx,0x1
  40a36e:	jle    40a37c <_start@@Base+0x494c>
  40a370:	cmp    BYTE PTR [rsi+0x1],0x20
  40a374:	jg     40a3d8 <_start@@Base+0x49a8>
  40a376:	je     40a400 <_start@@Base+0x49d0>
  40a37c:	mov    rdx,rbx
  40a37f:	mov    rdi,rbp
  40a382:	mov    rsi,rax
  40a385:	pop    rbx
  40a386:	pop    rbp
  40a387:	pop    r12
  40a389:	jmp    41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a38e:	xchg   ax,ax
  40a390:	cmp    BYTE PTR [rsi+0x1],0x20
  40a394:	jle    40a320 <_start@@Base+0x48f0>
  40a396:	add    rsi,0x1
  40a39a:	jmp    40a32e <_start@@Base+0x48fe>
  40a39c:	nop    DWORD PTR [rax+0x0]
  40a3a0:	lea    rax,[rsi+0x1]
  40a3a4:	mov    rdx,rbx
  40a3a7:	sub    rdx,rax
  40a3aa:	cmp    rdx,0x1
  40a3ae:	jle    40a3b8 <_start@@Base+0x4988>
  40a3b0:	cmp    BYTE PTR [rsi+0x1],0x20
  40a3b4:	jg     40a3c6 <_start@@Base+0x4996>
  40a3b6:	je     40a3f0 <_start@@Base+0x49c0>
  40a3b8:	mov    rdx,rbx
  40a3bb:	mov    rsi,rax
  40a3be:	mov    rdi,rbp
  40a3c1:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a3c6:	cmp    rbx,rax
  40a3c9:	je     40a42b <_start@@Base+0x49fb>
  40a3cb:	cmp    BYTE PTR [rax],0x5d
  40a3ce:	je     40a410 <_start@@Base+0x49e0>
  40a3d0:	mov    DWORD PTR [r12],0x1
  40a3d8:	pop    rbx
  40a3d9:	pop    rbp
  40a3da:	pop    r12
  40a3dc:	ret    
  40a3dd:	nop    DWORD PTR [rax]
  40a3e0:	mov    rax,rbx
  40a3e3:	mov    DWORD PTR [r12],0x0
  40a3eb:	pop    rbx
  40a3ec:	pop    rbp
  40a3ed:	pop    r12
  40a3ef:	ret    
  40a3f0:	cmp    BYTE PTR [rsi+0x2],0x20
  40a3f4:	jle    40a3b8 <_start@@Base+0x4988>
  40a3f6:	lea    rax,[rsi+0x2]
  40a3fa:	jmp    40a3c6 <_start@@Base+0x4996>
  40a3fc:	nop    DWORD PTR [rax+0x0]
  40a400:	cmp    BYTE PTR [rsi+0x2],0x20
  40a404:	jle    40a37c <_start@@Base+0x494c>
  40a40a:	lea    rax,[rsi+0x2]
  40a40e:	jmp    40a3d8 <_start@@Base+0x49a8>
  40a410:	mov    DWORD PTR [r12],0x0
  40a418:	mov    rdx,rbx
  40a41b:	mov    rdi,rbp
  40a41e:	pop    rbx
  40a41f:	pop    rbp
  40a420:	pop    r12
  40a422:	lea    rsi,[rax+0x1]
  40a426:	jmp    406b20 <_start@@Base+0x10f0>
  40a42b:	mov    DWORD PTR [r12],0x0
  40a433:	mov    ecx,0x9
  40a438:	mov    rdx,rbx
  40a43b:	mov    rsi,rbx
  40a43e:	jmp    40a351 <_start@@Base+0x4921>
  40a443:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a44e:	xchg   ax,ax
  40a450:	mov    rax,rdx
  40a453:	push   r12
  40a455:	mov    r12,rcx
  40a458:	sub    rax,rsi
  40a45b:	push   rbp
  40a45c:	mov    rbp,rdi
  40a45f:	cmp    rax,0x1
  40a463:	push   rbx
  40a464:	mov    rbx,rdx
  40a467:	jle    40a470 <_start@@Base+0x4a40>
  40a469:	cmp    BYTE PTR [rsi],0x20
  40a46c:	jg     40a47e <_start@@Base+0x4a4e>
  40a46e:	je     40a4e0 <_start@@Base+0x4ab0>
  40a470:	mov    rdx,rbx
  40a473:	mov    rdi,rbp
  40a476:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a47b:	mov    rsi,rax
  40a47e:	cmp    rbx,rsi
  40a481:	je     40a530 <_start@@Base+0x4b00>
  40a487:	cmp    BYTE PTR [rsi],0x2c
  40a48a:	je     40a4f0 <_start@@Base+0x4ac0>
  40a48c:	mov    DWORD PTR [r12],0x0
  40a494:	cmp    BYTE PTR [rsi],0x7d
  40a497:	je     40a4b0 <_start@@Base+0x4a80>
  40a499:	mov    ecx,0xa
  40a49e:	mov    rdx,rbx
  40a4a1:	pop    rbx
  40a4a2:	mov    rdi,rbp
  40a4a5:	pop    rbp
  40a4a6:	pop    r12
  40a4a8:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  40a4ad:	nop    DWORD PTR [rax]
  40a4b0:	lea    rax,[rsi+0x1]
  40a4b4:	mov    rdx,rbx
  40a4b7:	sub    rdx,rax
  40a4ba:	cmp    rdx,0x1
  40a4be:	jle    40a4cc <_start@@Base+0x4a9c>
  40a4c0:	cmp    BYTE PTR [rsi+0x1],0x20
  40a4c4:	jg     40a528 <_start@@Base+0x4af8>
  40a4c6:	je     40a550 <_start@@Base+0x4b20>
  40a4cc:	mov    rdx,rbx
  40a4cf:	mov    rdi,rbp
  40a4d2:	mov    rsi,rax
  40a4d5:	pop    rbx
  40a4d6:	pop    rbp
  40a4d7:	pop    r12
  40a4d9:	jmp    41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a4de:	xchg   ax,ax
  40a4e0:	cmp    BYTE PTR [rsi+0x1],0x20
  40a4e4:	jle    40a470 <_start@@Base+0x4a40>
  40a4e6:	add    rsi,0x1
  40a4ea:	jmp    40a47e <_start@@Base+0x4a4e>
  40a4ec:	nop    DWORD PTR [rax+0x0]
  40a4f0:	lea    rax,[rsi+0x1]
  40a4f4:	mov    rdx,rbx
  40a4f7:	sub    rdx,rax
  40a4fa:	cmp    rdx,0x1
  40a4fe:	jle    40a508 <_start@@Base+0x4ad8>
  40a500:	cmp    BYTE PTR [rsi+0x1],0x20
  40a504:	jg     40a516 <_start@@Base+0x4ae6>
  40a506:	je     40a540 <_start@@Base+0x4b10>
  40a508:	mov    rdx,rbx
  40a50b:	mov    rsi,rax
  40a50e:	mov    rdi,rbp
  40a511:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40a516:	cmp    rbx,rax
  40a519:	je     40a57b <_start@@Base+0x4b4b>
  40a51b:	cmp    BYTE PTR [rax],0x7d
  40a51e:	je     40a560 <_start@@Base+0x4b30>
  40a520:	mov    DWORD PTR [r12],0x1
  40a528:	pop    rbx
  40a529:	pop    rbp
  40a52a:	pop    r12
  40a52c:	ret    
  40a52d:	nop    DWORD PTR [rax]
  40a530:	mov    rax,rbx
  40a533:	mov    DWORD PTR [r12],0x0
  40a53b:	pop    rbx
  40a53c:	pop    rbp
  40a53d:	pop    r12
  40a53f:	ret    
  40a540:	cmp    BYTE PTR [rsi+0x2],0x20
  40a544:	jle    40a508 <_start@@Base+0x4ad8>
  40a546:	lea    rax,[rsi+0x2]
  40a54a:	jmp    40a516 <_start@@Base+0x4ae6>
  40a54c:	nop    DWORD PTR [rax+0x0]
  40a550:	cmp    BYTE PTR [rsi+0x2],0x20
  40a554:	jle    40a4cc <_start@@Base+0x4a9c>
  40a55a:	lea    rax,[rsi+0x2]
  40a55e:	jmp    40a528 <_start@@Base+0x4af8>
  40a560:	mov    DWORD PTR [r12],0x0
  40a568:	mov    rdx,rbx
  40a56b:	mov    rdi,rbp
  40a56e:	pop    rbx
  40a56f:	pop    rbp
  40a570:	pop    r12
  40a572:	lea    rsi,[rax+0x1]
  40a576:	jmp    406b20 <_start@@Base+0x10f0>
  40a57b:	mov    DWORD PTR [r12],0x0
  40a583:	mov    ecx,0xa
  40a588:	mov    rdx,rbx
  40a58b:	mov    rsi,rbx
  40a58e:	jmp    40a4a1 <_start@@Base+0x4a71>
  40a593:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a59e:	xchg   ax,ax
  40a5a0:	push   r15
  40a5a2:	push   r14
  40a5a4:	mov    r15,rsi
  40a5a7:	push   r13
  40a5a9:	push   r12
  40a5ab:	mov    esi,0xa
  40a5b0:	push   rbp
  40a5b1:	push   rbx
  40a5b2:	mov    rbp,rdi
  40a5b5:	mov    rbx,rdx
  40a5b8:	mov    r14,rcx
  40a5bb:	sub    rsp,0x38
  40a5bf:	mov    rdi,QWORD PTR [rdi]
  40a5c2:	mov    DWORD PTR [rcx],0x0
  40a5c8:	mov    rax,QWORD PTR fs:0x28
  40a5d1:	mov    QWORD PTR [rsp+0x28],rax
  40a5d6:	xor    eax,eax
  40a5d8:	call   4168e0 <flatcc_builder_start_table@@Base>
  40a5dd:	test   eax,eax
  40a5df:	jne    40a78b <_start@@Base+0x4d5b>
  40a5e5:	lea    r8,[rsp+0x20]
  40a5ea:	mov    ecx,0x5
  40a5ef:	mov    rdx,rbx
  40a5f2:	mov    rsi,r15
  40a5f5:	mov    rdi,rbp
  40a5f8:	call   41d9d0 <flatcc_json_parser_prepare_unions@@Base>
  40a5fd:	cmp    rbx,rax
  40a600:	je     40a78b <_start@@Base+0x4d5b>
  40a606:	lea    r12,[rsp+0x1c]
  40a60b:	mov    rsi,r15
  40a60e:	mov    rdx,rbx
  40a611:	mov    rdi,rbp
  40a614:	mov    rcx,r12
  40a617:	call   408740 <_start@@Base+0x2d10>
  40a61c:	mov    r13d,DWORD PTR [rsp+0x1c]
  40a621:	mov    r15,rax
  40a624:	test   r13d,r13d
  40a627:	je     40a780 <_start@@Base+0x4d50>
  40a62d:	movabs r13,0x6368617261637464
  40a637:	jmp    40a6b3 <_start@@Base+0x4c83>
  40a639:	nop    DWORD PTR [rax+0x0]
  40a640:	movabs rdx,0x616e7461676f6e69
  40a64a:	cmp    rax,rdx
  40a64d:	je     40a8e8 <_start@@Base+0x4eb8>
  40a653:	movabs rdx,0x63616d656f5f7479
  40a65d:	cmp    rax,rdx
  40a660:	je     40a9a0 <_start@@Base+0x4f70>
  40a666:	and    rax,0xffffffffff000000
  40a66c:	movabs rdx,0x63616d656f000000
  40a676:	cmp    rax,rdx
  40a679:	jne    40a685 <_start@@Base+0x4c55>
  40a67b:	cmp    r8,0x5
  40a67f:	jg     40ac70 <_start@@Base+0x5240>
  40a685:	mov    rsi,r15
  40a688:	mov    rdx,rbx
  40a68b:	mov    rdi,rbp
  40a68e:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40a693:	mov    rsi,rax
  40a696:	mov    rdx,rbx
  40a699:	mov    rcx,r12
  40a69c:	mov    rdi,rbp
  40a69f:	call   40a450 <_start@@Base+0x4a20>
  40a6a4:	mov    edx,DWORD PTR [rsp+0x1c]
  40a6a8:	mov    r15,rax
  40a6ab:	test   edx,edx
  40a6ad:	je     40a780 <_start@@Base+0x4d50>
  40a6b3:	cmp    rbx,r15
  40a6b6:	je     40a7c8 <_start@@Base+0x4d98>
  40a6bc:	cmp    BYTE PTR [r15],0x22
  40a6c0:	jne    40a7e0 <_start@@Base+0x4db0>
  40a6c6:	add    r15,0x1
  40a6ca:	mov    r8,rbx
  40a6cd:	sub    r8,r15
  40a6d0:	cmp    r8,0x7
  40a6d4:	jbe    40a7cb <_start@@Base+0x4d9b>
  40a6da:	movbe  rax,QWORD PTR [r15]
  40a6df:	cmp    rax,r13
  40a6e2:	jbe    40a640 <_start@@Base+0x4c10>
  40a6e8:	movabs rcx,0x6d61696e5f636860
  40a6f2:	cmp    rax,rcx
  40a6f5:	ja     40a808 <_start@@Base+0x4dd8>
  40a6fb:	movabs rdx,0x6368617261637465
  40a705:	cmp    rax,rdx
  40a708:	jne    40a685 <_start@@Base+0x4c55>
  40a70e:	lea    r8,[r15+0x8]
  40a712:	mov    r10,rbx
  40a715:	sub    r10,r8
  40a718:	cmp    r10,0x7
  40a71c:	jbe    40ab20 <_start@@Base+0x50f0>
  40a722:	movbe  rax,QWORD PTR [r15+0x8]
  40a728:	mov    rcx,rax
  40a72b:	movabs rdx,0x72735f7479706500
  40a735:	xor    cl,cl
  40a737:	cmp    rcx,rdx
  40a73a:	je     40acb0 <_start@@Base+0x5280>
  40a740:	movabs rdx,0xffff000000000000
  40a74a:	and    rax,rdx
  40a74d:	movabs rdx,0x7273000000000000
  40a757:	cmp    rax,rdx
  40a75a:	je     40ab60 <_start@@Base+0x5130>
  40a760:	mov    rsi,r8
  40a763:	mov    rdx,rbx
  40a766:	mov    rdi,rbp
  40a769:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40a76e:	mov    rsi,rax
  40a771:	jmp    40a696 <_start@@Base+0x4c66>
  40a776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a780:	mov    eax,DWORD PTR [rbp+0x1c]
  40a783:	test   eax,eax
  40a785:	je     40abe0 <_start@@Base+0x51b0>
  40a78b:	mov    ecx,0x21
  40a790:	mov    rdx,rbx
  40a793:	mov    rsi,r15
  40a796:	mov    rdi,rbp
  40a799:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a79e:	mov    rdi,QWORD PTR [rsp+0x28]
  40a7a3:	xor    rdi,QWORD PTR fs:0x28
  40a7ac:	jne    40ae36 <_start@@Base+0x5406>
  40a7b2:	add    rsp,0x38
  40a7b6:	pop    rbx
  40a7b7:	pop    rbp
  40a7b8:	pop    r12
  40a7ba:	pop    r13
  40a7bc:	pop    r14
  40a7be:	pop    r15
  40a7c0:	ret    
  40a7c1:	nop    DWORD PTR [rax+0x0]
  40a7c8:	xor    r8d,r8d
  40a7cb:	mov    rsi,rbx
  40a7ce:	mov    rdi,r15
  40a7d1:	call   405b40 <_start@@Base+0x110>
  40a7d6:	jmp    40a6df <_start@@Base+0x4caf>
  40a7db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7e0:	mov    rsi,r15
  40a7e3:	mov    ecx,0x5
  40a7e8:	mov    rdx,rbx
  40a7eb:	mov    rdi,rbp
  40a7ee:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40a7f3:	mov    r8,rbx
  40a7f6:	mov    r15,rax
  40a7f9:	sub    r8,rax
  40a7fc:	jmp    40a6d0 <_start@@Base+0x4ca0>
  40a801:	nop    DWORD PTR [rax+0x0]
  40a808:	movabs rcx,0x6d61696e5f636861
  40a812:	cmp    rax,rcx
  40a815:	je     40aa78 <_start@@Base+0x5048>
  40a81b:	movabs rdi,0x736964655f6b6963
  40a825:	cmp    rax,rdi
  40a828:	jne    40a685 <_start@@Base+0x4c55>
  40a82e:	lea    r8,[r15+0x8]
  40a832:	mov    r10,rbx
  40a835:	sub    r10,r8
  40a838:	cmp    r10,0x7
  40a83c:	ja     40ab50 <_start@@Base+0x5120>
  40a842:	mov    rdi,r8
  40a845:	mov    rsi,rbx
  40a848:	mov    QWORD PTR [rsp+0x8],r8
  40a84d:	call   405b40 <_start@@Base+0x110>
  40a852:	mov    r8,QWORD PTR [rsp+0x8]
  40a857:	mov    rcx,rax
  40a85a:	movabs rdx,0x6b5f747970650000
  40a864:	xor    cx,cx
  40a867:	cmp    rcx,rdx
  40a86a:	je     40ad30 <_start@@Base+0x5300>
  40a870:	movabs rdx,0xff00000000000000
  40a87a:	and    rax,rdx
  40a87d:	movabs rdx,0x6b00000000000000
  40a887:	cmp    rax,rdx
  40a88a:	jne    40a760 <_start@@Base+0x4d30>
  40a890:	cmp    r10,0x1
  40a894:	jle    40a760 <_start@@Base+0x4d30>
  40a89a:	mov    rsi,r8
  40a89d:	mov    ecx,0x1
  40a8a2:	mov    rdx,rbx
  40a8a5:	mov    rdi,rbp
  40a8a8:	mov    QWORD PTR [rsp+0x8],r8
  40a8ad:	call   409ba0 <_start@@Base+0x4170>
  40a8b2:	mov    r8,QWORD PTR [rsp+0x8]
  40a8b7:	mov    rsi,rax
  40a8ba:	cmp    r8,rax
  40a8bd:	je     40a760 <_start@@Base+0x4d30>
  40a8c3:	lea    rax,[rip+0x576]        # 40ae40 <_start@@Base+0x5410>
  40a8ca:	sub    rsp,0x8
  40a8ce:	mov    r8d,0x5
  40a8d4:	mov    ecx,0x2
  40a8d9:	push   rax
  40a8da:	mov    r9,QWORD PTR [rsp+0x30]
  40a8df:	jmp    40a989 <_start@@Base+0x4f59>
  40a8e4:	nop    DWORD PTR [rax+0x0]
  40a8e8:	lea    r8,[r15+0x8]
  40a8ec:	mov    r10,rbx
  40a8ef:	sub    r10,r8
  40a8f2:	cmp    r10,0x7
  40a8f6:	jbe    40aa58 <_start@@Base+0x5028>
  40a8fc:	movbe  rax,QWORD PTR [r15+0x8]
  40a902:	mov    rcx,rax
  40a905:	movabs rdx,0x73745f7479706500
  40a90f:	xor    cl,cl
  40a911:	cmp    rcx,rdx
  40a914:	je     40ac18 <_start@@Base+0x51e8>
  40a91a:	movabs rdx,0xffff000000000000
  40a924:	and    rax,rdx
  40a927:	movabs rdx,0x7374000000000000
  40a931:	cmp    rax,rdx
  40a934:	jne    40a760 <_start@@Base+0x4d30>
  40a93a:	cmp    r10,0x2
  40a93e:	jle    40a760 <_start@@Base+0x4d30>
  40a944:	mov    rsi,r8
  40a947:	mov    ecx,0x2
  40a94c:	mov    rdx,rbx
  40a94f:	mov    rdi,rbp
  40a952:	mov    QWORD PTR [rsp+0x8],r8
  40a957:	call   409ba0 <_start@@Base+0x4170>
  40a95c:	mov    r8,QWORD PTR [rsp+0x8]
  40a961:	mov    rsi,rax
  40a964:	cmp    r8,rax
  40a967:	je     40a760 <_start@@Base+0x4d30>
  40a96d:	lea    rax,[rip+0x4cc]        # 40ae40 <_start@@Base+0x5410>
  40a974:	sub    rsp,0x8
  40a978:	mov    r8d,0x3
  40a97e:	mov    ecx,0x1
  40a983:	push   rax
  40a984:	mov    r9,QWORD PTR [rsp+0x30]
  40a989:	mov    rdi,rbp
  40a98c:	mov    rdx,rbx
  40a98f:	call   41daa0 <flatcc_json_parser_union@@Base>
  40a994:	pop    rcx
  40a995:	mov    rsi,rax
  40a998:	pop    rdi
  40a999:	jmp    40a696 <_start@@Base+0x4c66>
  40a99e:	xchg   ax,ax
  40a9a0:	lea    r8,[r15+0x8]
  40a9a4:	mov    r10,rbx
  40a9a7:	sub    r10,r8
  40a9aa:	cmp    r10,0x7
  40a9ae:	ja     40ab40 <_start@@Base+0x5110>
  40a9b4:	mov    rdi,r8
  40a9b7:	mov    rsi,rbx
  40a9ba:	mov    QWORD PTR [rsp+0x8],r8
  40a9bf:	call   405b40 <_start@@Base+0x110>
  40a9c4:	mov    r8,QWORD PTR [rsp+0x8]
  40a9c9:	movabs rdx,0xffff000000000000
  40a9d3:	and    rax,rdx
  40a9d6:	movabs rdx,0x7065000000000000
  40a9e0:	cmp    rax,rdx
  40a9e3:	jne    40a760 <_start@@Base+0x4d30>
  40a9e9:	cmp    r10,0x2
  40a9ed:	jle    40a760 <_start@@Base+0x4d30>
  40a9f3:	mov    rsi,r8
  40a9f6:	mov    ecx,0x2
  40a9fb:	mov    rdx,rbx
  40a9fe:	mov    rdi,rbp
  40aa01:	mov    QWORD PTR [rsp+0x8],r8
  40aa06:	call   409ba0 <_start@@Base+0x4170>
  40aa0b:	mov    r8,QWORD PTR [rsp+0x8]
  40aa10:	mov    rsi,rax
  40aa13:	cmp    r8,rax
  40aa16:	je     40a760 <_start@@Base+0x4d30>
  40aa1c:	lea    rax,[rip+0x41d]        # 40ae40 <_start@@Base+0x5410>
  40aa23:	mov    r8d,0x7
  40aa29:	mov    ecx,0x3
  40aa2e:	push   rax
  40aa2f:	lea    rax,[rip+0x2e8ca]        # 439300 <__data_start@@Base+0x240>
  40aa36:	push   rax
  40aa37:	mov    r9,QWORD PTR [rsp+0x30]
  40aa3c:	mov    rdx,rbx
  40aa3f:	mov    rdi,rbp
  40aa42:	call   41dbe0 <flatcc_json_parser_union_type@@Base>
  40aa47:	pop    r8
  40aa49:	mov    rsi,rax
  40aa4c:	pop    r9
  40aa4e:	jmp    40a696 <_start@@Base+0x4c66>
  40aa53:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa58:	mov    rdi,r8
  40aa5b:	mov    rsi,rbx
  40aa5e:	mov    QWORD PTR [rsp+0x8],r8
  40aa63:	call   405b40 <_start@@Base+0x110>
  40aa68:	mov    r8,QWORD PTR [rsp+0x8]
  40aa6d:	jmp    40a902 <_start@@Base+0x4ed2>
  40aa72:	nop    WORD PTR [rax+rax*1+0x0]
  40aa78:	lea    r8,[r15+0x8]
  40aa7c:	mov    r10,rbx
  40aa7f:	sub    r10,r8
  40aa82:	cmp    r10,0x7
  40aa86:	ja     40abd0 <_start@@Base+0x51a0>
  40aa8c:	mov    rdi,r8
  40aa8f:	mov    rsi,rbx
  40aa92:	mov    QWORD PTR [rsp+0x8],r8
  40aa97:	call   405b40 <_start@@Base+0x110>
  40aa9c:	mov    r8,QWORD PTR [rsp+0x8]
  40aaa1:	movabs rdx,0x7261637465725f74
  40aaab:	cmp    rax,rdx
  40aaae:	je     40ad90 <_start@@Base+0x5360>
  40aab4:	xor    ax,ax
  40aab7:	movabs rdx,0x7261637465720000
  40aac1:	cmp    rax,rdx
  40aac4:	jne    40a760 <_start@@Base+0x4d30>
  40aaca:	cmp    r10,0x6
  40aace:	jle    40a760 <_start@@Base+0x4d30>
  40aad4:	mov    rsi,r8
  40aad7:	mov    ecx,0x6
  40aadc:	mov    rdx,rbx
  40aadf:	mov    rdi,rbp
  40aae2:	mov    QWORD PTR [rsp+0x8],r8
  40aae7:	call   409ba0 <_start@@Base+0x4170>
  40aaec:	mov    r8,QWORD PTR [rsp+0x8]
  40aaf1:	mov    rsi,rax
  40aaf4:	cmp    r8,rax
  40aaf7:	je     40a760 <_start@@Base+0x4d30>
  40aafd:	lea    rax,[rip+0x33c]        # 40ae40 <_start@@Base+0x5410>
  40ab04:	sub    rsp,0x8
  40ab08:	mov    r8d,0x1
  40ab0e:	xor    ecx,ecx
  40ab10:	push   rax
  40ab11:	mov    r9,QWORD PTR [rsp+0x30]
  40ab16:	jmp    40a989 <_start@@Base+0x4f59>
  40ab1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab20:	mov    rdi,r8
  40ab23:	mov    rsi,rbx
  40ab26:	mov    QWORD PTR [rsp+0x8],r8
  40ab2b:	call   405b40 <_start@@Base+0x110>
  40ab30:	mov    r8,QWORD PTR [rsp+0x8]
  40ab35:	jmp    40a728 <_start@@Base+0x4cf8>
  40ab3a:	nop    WORD PTR [rax+rax*1+0x0]
  40ab40:	movbe  rax,QWORD PTR [r15+0x8]
  40ab46:	jmp    40a9c9 <_start@@Base+0x4f99>
  40ab4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab50:	movbe  rax,QWORD PTR [r15+0x8]
  40ab56:	jmp    40a857 <_start@@Base+0x4e27>
  40ab5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab60:	cmp    r10,0x2
  40ab64:	jle    40a760 <_start@@Base+0x4d30>
  40ab6a:	mov    rsi,r8
  40ab6d:	mov    ecx,0x2
  40ab72:	mov    rdx,rbx
  40ab75:	mov    rdi,rbp
  40ab78:	mov    QWORD PTR [rsp+0x8],r8
  40ab7d:	call   409ba0 <_start@@Base+0x4170>
  40ab82:	mov    r8,QWORD PTR [rsp+0x8]
  40ab87:	mov    rsi,rax
  40ab8a:	cmp    r8,rax
  40ab8d:	je     40a760 <_start@@Base+0x4d30>
  40ab93:	lea    rax,[rip+0x2a6]        # 40ae40 <_start@@Base+0x5410>
  40ab9a:	sub    rsp,0x8
  40ab9e:	mov    r8d,0x9
  40aba4:	mov    ecx,0x4
  40aba9:	mov    rdx,rbx
  40abac:	mov    rdi,rbp
  40abaf:	push   rax
  40abb0:	mov    r9,QWORD PTR [rsp+0x30]
  40abb5:	call   41de50 <flatcc_json_parser_union_vector@@Base>
  40abba:	pop    r10
  40abbc:	mov    rsi,rax
  40abbf:	pop    r11
  40abc1:	jmp    40a696 <_start@@Base+0x4c66>
  40abc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abd0:	movbe  rax,QWORD PTR [r15+0x8]
  40abd6:	jmp    40aaa1 <_start@@Base+0x5071>
  40abdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40abe0:	mov    rcx,QWORD PTR [rsp+0x20]
  40abe5:	mov    rdx,rbx
  40abe8:	mov    rsi,r15
  40abeb:	mov    rdi,rbp
  40abee:	call   41da40 <flatcc_json_parser_finalize_unions@@Base>
  40abf3:	mov    rdi,QWORD PTR [rbp+0x0]
  40abf7:	mov    r15,rax
  40abfa:	call   4172a0 <flatcc_builder_end_table@@Base>
  40abff:	mov    edx,eax
  40ac01:	mov    DWORD PTR [r14],eax
  40ac04:	mov    rax,r15
  40ac07:	test   edx,edx
  40ac09:	je     40a78b <_start@@Base+0x4d5b>
  40ac0f:	jmp    40a79e <_start@@Base+0x4d6e>
  40ac14:	nop    DWORD PTR [rax+0x0]
  40ac18:	cmp    r10,0x7
  40ac1c:	jle    40a760 <_start@@Base+0x4d30>
  40ac22:	mov    rsi,r8
  40ac25:	mov    ecx,0x7
  40ac2a:	mov    rdx,rbx
  40ac2d:	mov    rdi,rbp
  40ac30:	mov    QWORD PTR [rsp+0x8],r8
  40ac35:	call   409ba0 <_start@@Base+0x4170>
  40ac3a:	mov    r8,QWORD PTR [rsp+0x8]
  40ac3f:	mov    rsi,rax
  40ac42:	cmp    r8,rax
  40ac45:	je     40a760 <_start@@Base+0x4d30>
  40ac4b:	lea    rax,[rip+0x1ee]        # 40ae40 <_start@@Base+0x5410>
  40ac52:	mov    r8d,0x3
  40ac58:	mov    ecx,0x1
  40ac5d:	push   rax
  40ac5e:	lea    rax,[rip+0x2e6bb]        # 439320 <__data_start@@Base+0x260>
  40ac65:	push   rax
  40ac66:	mov    r9,QWORD PTR [rsp+0x30]
  40ac6b:	jmp    40aa3c <_start@@Base+0x500c>
  40ac70:	mov    rsi,r15
  40ac73:	mov    ecx,0x5
  40ac78:	mov    rdx,rbx
  40ac7b:	mov    rdi,rbp
  40ac7e:	call   409ba0 <_start@@Base+0x4170>
  40ac83:	cmp    rax,r15
  40ac86:	mov    rsi,rax
  40ac89:	je     40a685 <_start@@Base+0x4c55>
  40ac8f:	lea    rax,[rip+0x1aa]        # 40ae40 <_start@@Base+0x5410>
  40ac96:	sub    rsp,0x8
  40ac9a:	mov    r8d,0x7
  40aca0:	mov    ecx,0x3
  40aca5:	push   rax
  40aca6:	mov    r9,QWORD PTR [rsp+0x30]
  40acab:	jmp    40a989 <_start@@Base+0x4f59>
  40acb0:	cmp    r10,0x7
  40acb4:	jle    40a760 <_start@@Base+0x4d30>
  40acba:	mov    rsi,r8
  40acbd:	mov    ecx,0x7
  40acc2:	mov    rdx,rbx
  40acc5:	mov    rdi,rbp
  40acc8:	mov    QWORD PTR [rsp+0x8],r8
  40accd:	call   409ba0 <_start@@Base+0x4170>
  40acd2:	mov    r8,QWORD PTR [rsp+0x8]
  40acd7:	mov    rsi,rax
  40acda:	cmp    r8,rax
  40acdd:	je     40a760 <_start@@Base+0x4d30>
  40ace3:	lea    rax,[rip+0xffffffffffffaf76]        # 405c60 <_start@@Base+0x230>
  40acea:	sub    rsp,0x8
  40acee:	mov    r8d,0x9
  40acf4:	mov    ecx,0x4
  40acf9:	mov    rdx,rbx
  40acfc:	mov    rdi,rbp
  40acff:	push   rax
  40ad00:	lea    rax,[rip+0x139]        # 40ae40 <_start@@Base+0x5410>
  40ad07:	push   rax
  40ad08:	lea    rax,[rip+0x2e5d1]        # 4392e0 <__data_start@@Base+0x220>
  40ad0f:	push   rax
  40ad10:	mov    r9,QWORD PTR [rsp+0x40]
  40ad15:	call   41df30 <flatcc_json_parser_union_type_vector@@Base>
  40ad1a:	add    rsp,0x20
  40ad1e:	mov    rsi,rax
  40ad21:	jmp    40a696 <_start@@Base+0x4c66>
  40ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad30:	cmp    r10,0x6
  40ad34:	jle    40a760 <_start@@Base+0x4d30>
  40ad3a:	mov    rsi,r8
  40ad3d:	mov    ecx,0x6
  40ad42:	mov    rdx,rbx
  40ad45:	mov    rdi,rbp
  40ad48:	mov    QWORD PTR [rsp+0x8],r8
  40ad4d:	call   409ba0 <_start@@Base+0x4170>
  40ad52:	mov    r8,QWORD PTR [rsp+0x8]
  40ad57:	mov    rsi,rax
  40ad5a:	cmp    r8,rax
  40ad5d:	je     40a760 <_start@@Base+0x4d30>
  40ad63:	lea    rax,[rip+0xd6]        # 40ae40 <_start@@Base+0x5410>
  40ad6a:	mov    r8d,0x5
  40ad70:	mov    ecx,0x2
  40ad75:	push   rax
  40ad76:	lea    rax,[rip+0x2e523]        # 4392a0 <__data_start@@Base+0x1e0>
  40ad7d:	push   rax
  40ad7e:	mov    r9,QWORD PTR [rsp+0x30]
  40ad83:	jmp    40aa3c <_start@@Base+0x500c>
  40ad88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad90:	lea    r8,[r15+0x10]
  40ad94:	mov    r10,rbx
  40ad97:	sub    r10,r8
  40ad9a:	cmp    r10,0x7
  40ad9e:	ja     40ae2e <_start@@Base+0x53fe>
  40ada4:	mov    rdi,r8
  40ada7:	mov    rsi,rbx
  40adaa:	mov    QWORD PTR [rsp+0x8],r8
  40adaf:	call   405b40 <_start@@Base+0x110>
  40adb4:	mov    r8,QWORD PTR [rsp+0x8]
  40adb9:	movabs rdx,0xffffff0000000000
  40adc3:	and    rax,rdx
  40adc6:	movabs rdx,0x7970650000000000
  40add0:	cmp    rax,rdx
  40add3:	jne    40a760 <_start@@Base+0x4d30>
  40add9:	cmp    r10,0x3
  40addd:	jle    40a760 <_start@@Base+0x4d30>
  40ade3:	mov    rsi,r8
  40ade6:	mov    ecx,0x3
  40adeb:	mov    rdx,rbx
  40adee:	mov    rdi,rbp
  40adf1:	mov    QWORD PTR [rsp+0x8],r8
  40adf6:	call   409ba0 <_start@@Base+0x4170>
  40adfb:	mov    r8,QWORD PTR [rsp+0x8]
  40ae00:	mov    rsi,rax
  40ae03:	cmp    r8,rax
  40ae06:	je     40a760 <_start@@Base+0x4d30>
  40ae0c:	lea    rax,[rip+0x2d]        # 40ae40 <_start@@Base+0x5410>
  40ae13:	mov    r8d,0x1
  40ae19:	xor    ecx,ecx
  40ae1b:	push   rax
  40ae1c:	lea    rax,[rip+0x2e49d]        # 4392c0 <__data_start@@Base+0x200>
  40ae23:	push   rax
  40ae24:	mov    r9,QWORD PTR [rsp+0x30]
  40ae29:	jmp    40aa3c <_start@@Base+0x500c>
  40ae2e:	movbe  rax,QWORD PTR [r15+0x10]
  40ae34:	jmp    40adb9 <_start@@Base+0x5389>
  40ae36:	call   405070 <__stack_chk_fail@plt>
  40ae3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae40:	push   r15
  40ae42:	push   r14
  40ae44:	mov    r15,rsi
  40ae47:	push   r13
  40ae49:	push   r12
  40ae4b:	mov    r12,r8
  40ae4e:	push   rbp
  40ae4f:	push   rbx
  40ae50:	mov    rbp,rdi
  40ae53:	mov    rbx,rdx
  40ae56:	sub    rsp,0x48
  40ae5a:	mov    DWORD PTR [r8],0x0
  40ae61:	mov    rax,QWORD PTR fs:0x28
  40ae6a:	mov    QWORD PTR [rsp+0x38],rax
  40ae6f:	xor    eax,eax
  40ae71:	cmp    cl,0x9
  40ae74:	je     40af30 <_start@@Base+0x5500>
  40ae7a:	jbe    40aee0 <_start@@Base+0x54b0>
  40ae7c:	cmp    cl,0xb
  40ae7f:	je     40af78 <_start@@Base+0x5548>
  40ae85:	jb     40af30 <_start@@Base+0x5500>
  40ae8b:	cmp    cl,0xff
  40ae8e:	je     40af78 <_start@@Base+0x5548>
  40ae94:	test   BYTE PTR [rbp+0x10],0x1
  40ae98:	jne    40b4f0 <_start@@Base+0x5ac0>
  40ae9e:	mov    ecx,0xf
  40aea3:	mov    rsi,r15
  40aea6:	mov    rdx,rbx
  40aea9:	mov    rdi,rbp
  40aeac:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40aeb1:	mov    rsi,rax
  40aeb4:	nop    DWORD PTR [rax+0x0]
  40aeb8:	mov    rdi,QWORD PTR [rsp+0x38]
  40aebd:	xor    rdi,QWORD PTR fs:0x28
  40aec6:	mov    rax,rsi
  40aec9:	jne    40b688 <_start@@Base+0x5c58>
  40aecf:	add    rsp,0x48
  40aed3:	pop    rbx
  40aed4:	pop    rbp
  40aed5:	pop    r12
  40aed7:	pop    r13
  40aed9:	pop    r14
  40aedb:	pop    r15
  40aedd:	ret    
  40aede:	xchg   ax,ax
  40aee0:	cmp    cl,0x2
  40aee3:	je     40b1f8 <_start@@Base+0x57c8>
  40aee9:	cmp    cl,0x8
  40aeec:	je     40af90 <_start@@Base+0x5560>
  40aef2:	test   cl,cl
  40aef4:	jne    40ae94 <_start@@Base+0x5464>
  40aef6:	mov    rax,rdx
  40aef9:	sub    rax,rsi
  40aefc:	cmp    rax,0x3
  40af00:	jle    40af1e <_start@@Base+0x54ee>
  40af02:	lea    rsi,[rip+0x206b9]        # 42b5c2 <_IO_stdin_used@@Base+0x5c2>
  40af09:	mov    edx,0x4
  40af0e:	mov    rdi,r15
  40af11:	call   4050b0 <memcmp@plt>
  40af16:	test   eax,eax
  40af18:	lea    rsi,[r15+0x4]
  40af1c:	je     40aeb8 <_start@@Base+0x5488>
  40af1e:	mov    ecx,0x1a
  40af23:	jmp    40aea3 <_start@@Base+0x5473>
  40af28:	nop    DWORD PTR [rax+rax*1+0x0]
  40af30:	mov    rsi,r15
  40af33:	mov    rcx,r12
  40af36:	mov    rdx,rbx
  40af39:	mov    rdi,rbp
  40af3c:	call   409c30 <_start@@Base+0x4200>
  40af41:	mov    rsi,rax
  40af44:	mov    edx,DWORD PTR [rbp+0x1c]
  40af47:	test   edx,edx
  40af49:	jne    40aeb8 <_start@@Base+0x5488>
  40af4f:	mov    eax,DWORD PTR [r12]
  40af53:	test   eax,eax
  40af55:	jne    40aeb8 <_start@@Base+0x5488>
  40af5b:	mov    ecx,0x21
  40af60:	mov    rdx,rbx
  40af63:	mov    rdi,rbp
  40af66:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40af6b:	mov    rsi,rax
  40af6e:	jmp    40aeb8 <_start@@Base+0x5488>
  40af73:	nop    DWORD PTR [rax+rax*1+0x0]
  40af78:	mov    rsi,r15
  40af7b:	mov    rcx,r12
  40af7e:	mov    rdx,rbx
  40af81:	mov    rdi,rbp
  40af84:	call   41d800 <flatcc_json_parser_build_string@@Base>
  40af89:	mov    rsi,rax
  40af8c:	jmp    40af44 <_start@@Base+0x5514>
  40af8e:	xchg   ax,ax
  40af90:	mov    rdi,QWORD PTR [rdi]
  40af93:	mov    edx,0x2
  40af98:	mov    esi,0x2
  40af9d:	call   415e90 <flatcc_builder_start_struct@@Base>
  40afa2:	test   rax,rax
  40afa5:	mov    QWORD PTR [rsp],rax
  40afa9:	je     40b648 <_start@@Base+0x5c18>
  40afaf:	lea    r13,[rsp+0x28]
  40afb4:	mov    rsi,r15
  40afb7:	mov    rdx,rbx
  40afba:	mov    rdi,rbp
  40afbd:	mov    rcx,r13
  40afc0:	call   408740 <_start@@Base+0x2d10>
  40afc5:	mov    r9d,DWORD PTR [rsp+0x28]
  40afca:	mov    rsi,rax
  40afcd:	test   r9d,r9d
  40afd0:	je     40b410 <_start@@Base+0x59e0>
  40afd6:	lea    rax,[rsp+0x24]
  40afdb:	mov    QWORD PTR [rsp+0x18],rax
  40afe0:	lea    rax,[rsp+0x30]
  40afe5:	mov    QWORD PTR [rsp+0x8],rax
  40afea:	lea    rax,[rsp+0x2c]
  40afef:	mov    QWORD PTR [rsp+0x10],rax
  40aff4:	jmp    40b06e <_start@@Base+0x563e>
  40aff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b000:	lea    r15,[rsi+0x8]
  40b004:	mov    r9,rbx
  40b007:	sub    r9,r15
  40b00a:	cmp    r9,0x7
  40b00e:	jbe    40b0e0 <_start@@Base+0x56b0>
  40b014:	movbe  rax,QWORD PTR [rsi+0x8]
  40b01a:	movabs rdx,0xffffff0000000000
  40b024:	and    rax,rdx
  40b027:	movabs rdx,0x6774680000000000
  40b031:	cmp    rax,rdx
  40b034:	jne    40b040 <_start@@Base+0x5610>
  40b036:	cmp    r9,0x3
  40b03a:	jg     40b160 <_start@@Base+0x5730>
  40b040:	mov    rsi,r15
  40b043:	mov    rdx,rbx
  40b046:	mov    rdi,rbp
  40b049:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b04e:	mov    rsi,rax
  40b051:	mov    rcx,r13
  40b054:	mov    rdx,rbx
  40b057:	mov    rdi,rbp
  40b05a:	call   40a450 <_start@@Base+0x4a20>
  40b05f:	mov    ecx,DWORD PTR [rsp+0x28]
  40b063:	mov    rsi,rax
  40b066:	test   ecx,ecx
  40b068:	je     40b410 <_start@@Base+0x59e0>
  40b06e:	cmp    rbx,rsi
  40b071:	je     40b0a0 <_start@@Base+0x5670>
  40b073:	cmp    BYTE PTR [rsi],0x22
  40b076:	jne    40b0b0 <_start@@Base+0x5680>
  40b078:	add    rsi,0x1
  40b07c:	mov    rax,rbx
  40b07f:	sub    rax,rsi
  40b082:	cmp    rax,0x7
  40b086:	jbe    40b0cf <_start@@Base+0x569f>
  40b088:	movbe  rax,QWORD PTR [rsi]
  40b08d:	movabs rdx,0x686169725f6c656e
  40b097:	cmp    rax,rdx
  40b09a:	je     40b000 <_start@@Base+0x55d0>
  40b0a0:	mov    rdx,rbx
  40b0a3:	mov    rdi,rbp
  40b0a6:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b0ab:	mov    rsi,rax
  40b0ae:	jmp    40b051 <_start@@Base+0x5621>
  40b0b0:	mov    ecx,0x5
  40b0b5:	mov    rdx,rbx
  40b0b8:	mov    rdi,rbp
  40b0bb:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b0c0:	mov    rsi,rax
  40b0c3:	mov    rax,rbx
  40b0c6:	sub    rax,rsi
  40b0c9:	cmp    rax,0x7
  40b0cd:	ja     40b088 <_start@@Base+0x5658>
  40b0cf:	lea    rdi,[rip+0x1ff92]        # 42b068 <_IO_stdin_used@@Base+0x68>
  40b0d6:	movsxd rax,DWORD PTR [rdi+rax*4]
  40b0da:	add    rax,rdi
  40b0dd:	jmp    rax
  40b0df:	nop
  40b0e0:	mov    rsi,rbx
  40b0e3:	mov    rdi,r15
  40b0e6:	call   405b40 <_start@@Base+0x110>
  40b0eb:	jmp    40b01a <_start@@Base+0x55ea>
  40b0f0:	movsx  rcx,BYTE PTR [rsi+0x6]
  40b0f5:	shl    rcx,0x8
  40b0f9:	movsx  rdx,BYTE PTR [rsi+0x5]
  40b0fe:	mov    rax,rdx
  40b101:	shl    rax,0x10
  40b105:	or     rcx,rax
  40b108:	movsx  rdx,BYTE PTR [rsi+0x4]
  40b10d:	mov    rax,rdx
  40b110:	shl    rax,0x18
  40b114:	or     rax,rcx
  40b117:	movsx  rdx,BYTE PTR [rsi+0x3]
  40b11c:	mov    rcx,rdx
  40b11f:	shl    rcx,0x20
  40b123:	or     rax,rcx
  40b126:	movsx  rdx,BYTE PTR [rsi+0x2]
  40b12b:	mov    rcx,rdx
  40b12e:	shl    rcx,0x28
  40b132:	or     rcx,rax
  40b135:	movsx  rdx,BYTE PTR [rsi+0x1]
  40b13a:	mov    rax,rdx
  40b13d:	shl    rax,0x30
  40b141:	or     rcx,rax
  40b144:	movsx  rdx,BYTE PTR [rsi]
  40b148:	mov    rax,rdx
  40b14b:	shl    rax,0x38
  40b14f:	or     rax,rcx
  40b152:	jmp    40b08d <_start@@Base+0x565d>
  40b157:	nop    WORD PTR [rax+rax*1+0x0]
  40b160:	mov    ecx,0x3
  40b165:	mov    rdx,rbx
  40b168:	mov    rsi,r15
  40b16b:	mov    rdi,rbp
  40b16e:	call   409ba0 <_start@@Base+0x4170>
  40b173:	cmp    r15,rax
  40b176:	mov    r14,rax
  40b179:	je     40b040 <_start@@Base+0x5610>
  40b17f:	xor    r8d,r8d
  40b182:	cmp    rbx,rax
  40b185:	mov    QWORD PTR [rsp+0x30],0x0
  40b18e:	mov    WORD PTR [rsp+0x24],r8w
  40b194:	mov    DWORD PTR [rsp+0x2c],0x0
  40b19c:	je     40b3d0 <_start@@Base+0x59a0>
  40b1a2:	mov    r8,QWORD PTR [rsp+0x8]
  40b1a7:	mov    rcx,QWORD PTR [rsp+0x10]
  40b1ac:	mov    rsi,rax
  40b1af:	mov    rdx,rbx
  40b1b2:	mov    rdi,rbp
  40b1b5:	call   41c710 <flatcc_json_parser_integer@@Base>
  40b1ba:	cmp    r14,rax
  40b1bd:	mov    rsi,rax
  40b1c0:	je     40b3d0 <_start@@Base+0x59a0>
  40b1c6:	mov    edi,DWORD PTR [rsp+0x2c]
  40b1ca:	test   edi,edi
  40b1cc:	jne    40b510 <_start@@Base+0x5ae0>
  40b1d2:	mov    rdx,QWORD PTR [rsp+0x30]
  40b1d7:	cmp    rdx,0xffff
  40b1de:	mov    eax,edx
  40b1e0:	ja     40b630 <_start@@Base+0x5c00>
  40b1e6:	mov    rdi,QWORD PTR [rsp]
  40b1ea:	mov    WORD PTR [rdi],ax
  40b1ed:	jmp    40b051 <_start@@Base+0x5621>
  40b1f2:	nop    WORD PTR [rax+rax*1+0x0]
  40b1f8:	mov    rdi,QWORD PTR [rdi]
  40b1fb:	mov    esi,0x1
  40b200:	call   4168e0 <flatcc_builder_start_table@@Base>
  40b205:	test   eax,eax
  40b207:	jne    40b3ad <_start@@Base+0x597d>
  40b20d:	lea    r13,[rsp+0x24]
  40b212:	mov    rsi,r15
  40b215:	mov    rdx,rbx
  40b218:	mov    rdi,rbp
  40b21b:	mov    rcx,r13
  40b21e:	call   408740 <_start@@Base+0x2d10>
  40b223:	mov    ecx,DWORD PTR [rsp+0x24]
  40b227:	mov    r15,rax
  40b22a:	test   ecx,ecx
  40b22c:	je     40b3a0 <_start@@Base+0x5970>
  40b232:	lea    rax,[rsp+0x28]
  40b237:	movabs r14,0x73776f72645f6174
  40b241:	mov    QWORD PTR [rsp+0x18],rax
  40b246:	lea    rax,[rsp+0x30]
  40b24b:	mov    QWORD PTR [rsp+0x8],rax
  40b250:	lea    rax,[rsp+0x2c]
  40b255:	mov    QWORD PTR [rsp+0x10],rax
  40b25a:	jmp    40b303 <_start@@Base+0x58d3>
  40b25f:	nop
  40b260:	lea    r8,[r15+0x8]
  40b264:	mov    rax,rbx
  40b267:	sub    rax,r8
  40b26a:	cmp    rax,0x7
  40b26e:	jbe    40b370 <_start@@Base+0x5940>
  40b274:	movbe  rax,QWORD PTR [r15+0x8]
  40b27a:	movabs rdx,0x7461636b5f64616d
  40b284:	cmp    rax,rdx
  40b287:	jne    40b2d0 <_start@@Base+0x58a0>
  40b289:	lea    r8,[r15+0x10]
  40b28d:	mov    r10,rbx
  40b290:	sub    r10,r8
  40b293:	cmp    r10,0x7
  40b297:	jbe    40b380 <_start@@Base+0x5950>
  40b29d:	movbe  rax,QWORD PTR [r15+0x10]
  40b2a3:	movabs rdx,0xffffff0000000000
  40b2ad:	and    rax,rdx
  40b2b0:	movabs rdx,0x6167650000000000
  40b2ba:	cmp    rax,rdx
  40b2bd:	jne    40b2d0 <_start@@Base+0x58a0>
  40b2bf:	cmp    r10,0x3
  40b2c3:	jg     40b450 <_start@@Base+0x5a20>
  40b2c9:	nop    DWORD PTR [rax+0x0]
  40b2d0:	mov    rdx,rbx
  40b2d3:	mov    rsi,r8
  40b2d6:	mov    rdi,rbp
  40b2d9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b2de:	mov    r15,rax
  40b2e1:	mov    rsi,r15
  40b2e4:	mov    rcx,r13
  40b2e7:	mov    rdx,rbx
  40b2ea:	mov    rdi,rbp
  40b2ed:	call   40a450 <_start@@Base+0x4a20>
  40b2f2:	mov    r11d,DWORD PTR [rsp+0x24]
  40b2f7:	mov    r15,rax
  40b2fa:	test   r11d,r11d
  40b2fd:	je     40b3a0 <_start@@Base+0x5970>
  40b303:	cmp    rbx,r15
  40b306:	je     40b340 <_start@@Base+0x5910>
  40b308:	cmp    BYTE PTR [r15],0x22
  40b30c:	jne    40b350 <_start@@Base+0x5920>
  40b30e:	add    r15,0x1
  40b312:	mov    rax,rbx
  40b315:	sub    rax,r15
  40b318:	cmp    rax,0x7
  40b31c:	jbe    40b340 <_start@@Base+0x5910>
  40b31e:	movbe  rax,QWORD PTR [r15]
  40b323:	cmp    rax,r14
  40b326:	je     40b260 <_start@@Base+0x5830>
  40b32c:	mov    rsi,r15
  40b32f:	mov    rdx,rbx
  40b332:	mov    rdi,rbp
  40b335:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b33a:	mov    r15,rax
  40b33d:	jmp    40b2e1 <_start@@Base+0x58b1>
  40b33f:	nop
  40b340:	mov    rsi,rbx
  40b343:	mov    rdi,r15
  40b346:	call   405b40 <_start@@Base+0x110>
  40b34b:	jmp    40b323 <_start@@Base+0x58f3>
  40b34d:	nop    DWORD PTR [rax]
  40b350:	mov    rsi,r15
  40b353:	mov    ecx,0x5
  40b358:	mov    rdx,rbx
  40b35b:	mov    rdi,rbp
  40b35e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b363:	mov    r15,rax
  40b366:	jmp    40b312 <_start@@Base+0x58e2>
  40b368:	nop    DWORD PTR [rax+rax*1+0x0]
  40b370:	mov    rsi,rbx
  40b373:	mov    rdi,r8
  40b376:	call   405b40 <_start@@Base+0x110>
  40b37b:	jmp    40b27a <_start@@Base+0x584a>
  40b380:	mov    rdi,r8
  40b383:	mov    rsi,rbx
  40b386:	mov    QWORD PTR [rsp],r8
  40b38a:	call   405b40 <_start@@Base+0x110>
  40b38f:	mov    r8,QWORD PTR [rsp]
  40b393:	jmp    40b2a3 <_start@@Base+0x5873>
  40b398:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3a0:	mov    r10d,DWORD PTR [rbp+0x1c]
  40b3a4:	test   r10d,r10d
  40b3a7:	je     40b5e7 <_start@@Base+0x5bb7>
  40b3ad:	mov    rsi,r15
  40b3b0:	mov    ecx,0x21
  40b3b5:	mov    rdx,rbx
  40b3b8:	mov    rdi,rbp
  40b3bb:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b3c0:	mov    rsi,rax
  40b3c3:	jmp    40af44 <_start@@Base+0x5514>
  40b3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3d0:	mov    r8,QWORD PTR [rsp+0x18]
  40b3d5:	lea    rcx,[rip+0x2de84]        # 439260 <__data_start@@Base+0x1a0>
  40b3dc:	mov    rsi,r14
  40b3df:	mov    rdx,rbx
  40b3e2:	mov    rdi,rbp
  40b3e5:	call   408db0 <_start@@Base+0x3380>
  40b3ea:	cmp    rax,r14
  40b3ed:	mov    rsi,rax
  40b3f0:	je     40b3fb <_start@@Base+0x59cb>
  40b3f2:	cmp    rbx,rax
  40b3f5:	jne    40b52c <_start@@Base+0x5afc>
  40b3fb:	mov    ecx,0x21
  40b400:	mov    rdx,rbx
  40b403:	mov    rdi,rbp
  40b406:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b40b:	mov    rsi,rax
  40b40e:	xchg   ax,ax
  40b410:	cmp    rbx,rsi
  40b413:	je     40b432 <_start@@Base+0x5a02>
  40b415:	mov    rdi,QWORD PTR [rbp+0x0]
  40b419:	mov    QWORD PTR [rsp],rsi
  40b41d:	call   415f40 <flatcc_builder_end_struct@@Base>
  40b422:	test   eax,eax
  40b424:	mov    DWORD PTR [r12],eax
  40b428:	mov    rsi,QWORD PTR [rsp]
  40b42c:	jne    40aeb8 <_start@@Base+0x5488>
  40b432:	mov    ecx,0x21
  40b437:	mov    rdx,rbx
  40b43a:	mov    rdi,rbp
  40b43d:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b442:	mov    rsi,rax
  40b445:	jmp    40af44 <_start@@Base+0x5514>
  40b44a:	nop    WORD PTR [rax+rax*1+0x0]
  40b450:	mov    rsi,r8
  40b453:	mov    ecx,0x3
  40b458:	mov    rdx,rbx
  40b45b:	mov    rdi,rbp
  40b45e:	mov    QWORD PTR [rsp],r8
  40b462:	call   409ba0 <_start@@Base+0x4170>
  40b467:	mov    r8,QWORD PTR [rsp]
  40b46b:	mov    r10,rax
  40b46e:	cmp    r8,rax
  40b471:	je     40b2d0 <_start@@Base+0x58a0>
  40b477:	cmp    rbx,rax
  40b47a:	mov    DWORD PTR [rsp+0x28],0x0
  40b482:	mov    QWORD PTR [rsp+0x30],0x0
  40b48b:	mov    DWORD PTR [rsp+0x2c],0x0
  40b493:	je     40b650 <_start@@Base+0x5c20>
  40b499:	mov    r8,QWORD PTR [rsp+0x8]
  40b49e:	mov    rcx,QWORD PTR [rsp+0x10]
  40b4a3:	mov    rdx,rbx
  40b4a6:	mov    rsi,rax
  40b4a9:	mov    rdi,rbp
  40b4ac:	mov    QWORD PTR [rsp],rax
  40b4b0:	call   41c710 <flatcc_json_parser_integer@@Base>
  40b4b5:	mov    r10,QWORD PTR [rsp]
  40b4b9:	mov    r15,rax
  40b4bc:	cmp    r10,rax
  40b4bf:	je     40b650 <_start@@Base+0x5c20>
  40b4c5:	mov    edx,DWORD PTR [rsp+0x2c]
  40b4c9:	mov    rax,QWORD PTR [rsp+0x30]
  40b4ce:	test   edx,edx
  40b4d0:	je     40b540 <_start@@Base+0x5b10>
  40b4d2:	mov    edx,0x80000000
  40b4d7:	mov    ecx,0x8
  40b4dc:	cmp    rax,rdx
  40b4df:	ja     40b60d <_start@@Base+0x5bdd>
  40b4e5:	mov    edx,eax
  40b4e7:	neg    edx
  40b4e9:	mov    DWORD PTR [rsp+0x28],edx
  40b4ed:	jmp    40b552 <_start@@Base+0x5b22>
  40b4ef:	nop
  40b4f0:	mov    rsi,r15
  40b4f3:	mov    rdx,rbx
  40b4f6:	mov    rdi,rbp
  40b4f9:	call   41c7d0 <flatcc_json_parser_generic_json@@Base>
  40b4fe:	mov    rsi,rax
  40b501:	jmp    40aeb8 <_start@@Base+0x5488>
  40b506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b510:	mov    ecx,0x8
  40b515:	mov    rdx,rbx
  40b518:	mov    rdi,rbp
  40b51b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b520:	mov    rsi,rax
  40b523:	cmp    r14,rsi
  40b526:	je     40b3d0 <_start@@Base+0x59a0>
  40b52c:	movzx  eax,WORD PTR [rsp+0x24]
  40b531:	jmp    40b1e6 <_start@@Base+0x57b6>
  40b536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b540:	cmp    rax,0x7fffffff
  40b546:	ja     40b604 <_start@@Base+0x5bd4>
  40b54c:	mov    edx,eax
  40b54e:	mov    DWORD PTR [rsp+0x28],eax
  40b552:	test   edx,edx
  40b554:	jne    40b560 <_start@@Base+0x5b30>
  40b556:	test   BYTE PTR [rbp+0x10],0x2
  40b55a:	je     40b2e1 <_start@@Base+0x58b1>
  40b560:	mov    rdi,QWORD PTR [rbp+0x0]
  40b564:	xor    esi,esi
  40b566:	mov    ecx,0x4
  40b56b:	mov    edx,0x4
  40b570:	call   418180 <flatcc_builder_table_add@@Base>
  40b575:	test   rax,rax
  40b578:	je     40b3ad <_start@@Base+0x597d>
  40b57e:	mov    edx,DWORD PTR [rsp+0x28]
  40b582:	mov    DWORD PTR [rax],edx
  40b584:	jmp    40b2e1 <_start@@Base+0x58b1>
  40b589:	nop    DWORD PTR [rax+0x0]
  40b590:	xor    ecx,ecx
  40b592:	jmp    40b0f9 <_start@@Base+0x56c9>
  40b597:	nop    WORD PTR [rax+rax*1+0x0]
  40b5a0:	xor    ecx,ecx
  40b5a2:	jmp    40b108 <_start@@Base+0x56d8>
  40b5a7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5b0:	xor    eax,eax
  40b5b2:	jmp    40b117 <_start@@Base+0x56e7>
  40b5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5c0:	xor    eax,eax
  40b5c2:	jmp    40b126 <_start@@Base+0x56f6>
  40b5c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5d0:	xor    ecx,ecx
  40b5d2:	jmp    40b135 <_start@@Base+0x5705>
  40b5d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b5e0:	xor    ecx,ecx
  40b5e2:	jmp    40b144 <_start@@Base+0x5714>
  40b5e7:	mov    rdi,QWORD PTR [rbp+0x0]
  40b5eb:	call   4172a0 <flatcc_builder_end_table@@Base>
  40b5f0:	test   eax,eax
  40b5f2:	mov    DWORD PTR [r12],eax
  40b5f6:	mov    rsi,r15
  40b5f9:	je     40b3ad <_start@@Base+0x597d>
  40b5ff:	jmp    40af44 <_start@@Base+0x5514>
  40b604:	mov    QWORD PTR [rsp],r10
  40b608:	mov    ecx,0x7
  40b60d:	mov    rsi,r15
  40b610:	mov    rdx,rbx
  40b613:	mov    rdi,rbp
  40b616:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b61b:	mov    r10,QWORD PTR [rsp]
  40b61f:	mov    r15,rax
  40b622:	cmp    r10,rax
  40b625:	je     40b650 <_start@@Base+0x5c20>
  40b627:	mov    edx,DWORD PTR [rsp+0x28]
  40b62b:	jmp    40b552 <_start@@Base+0x5b22>
  40b630:	mov    ecx,0x7
  40b635:	mov    rdx,rbx
  40b638:	mov    rdi,rbp
  40b63b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40b640:	mov    rsi,rax
  40b643:	jmp    40b523 <_start@@Base+0x5af3>
  40b648:	mov    rsi,r15
  40b64b:	jmp    40b432 <_start@@Base+0x5a02>
  40b650:	mov    r8,QWORD PTR [rsp+0x18]
  40b655:	lea    rcx,[rip+0x2dc24]        # 439280 <__data_start@@Base+0x1c0>
  40b65c:	mov    rsi,r10
  40b65f:	mov    rdx,rbx
  40b662:	mov    rdi,rbp
  40b665:	mov    QWORD PTR [rsp],r10
  40b669:	call   409550 <_start@@Base+0x3b20>
  40b66e:	mov    r10,QWORD PTR [rsp]
  40b672:	mov    r15,rax
  40b675:	cmp    rax,r10
  40b678:	je     40b3ad <_start@@Base+0x597d>
  40b67e:	cmp    rbx,rax
  40b681:	jne    40b627 <_start@@Base+0x5bf7>
  40b683:	jmp    40b3ad <_start@@Base+0x597d>
  40b688:	call   405070 <__stack_chk_fail@plt>
  40b68d:	nop    DWORD PTR [rax]
  40b690:	mov    rax,rdx
  40b693:	push   r12
  40b695:	mov    r12,r8
  40b698:	sub    rax,rsi
  40b69b:	push   rbp
  40b69c:	mov    rbp,rcx
  40b69f:	cmp    rax,0x7
  40b6a3:	push   rbx
  40b6a4:	mov    rbx,rsi
  40b6a7:	ja     40b6c0 <_start@@Base+0x5c90>
  40b6a9:	lea    rcx,[rip+0x1f9d8]        # 42b088 <_IO_stdin_used@@Base+0x88>
  40b6b0:	movsxd rax,DWORD PTR [rcx+rax*4]
  40b6b4:	add    rax,rcx
  40b6b7:	jmp    rax
  40b6b9:	nop    DWORD PTR [rax+0x0]
  40b6c0:	movbe  rax,QWORD PTR [rsi]
  40b6c5:	movabs rcx,0xff00000000000000
  40b6cf:	and    rax,rcx
  40b6d2:	movabs rcx,0x7800000000000000
  40b6dc:	cmp    rax,rcx
  40b6df:	jne    40b708 <_start@@Base+0x5cd8>
  40b6e1:	mov    r8,r9
  40b6e4:	mov    ecx,0x1
  40b6e9:	mov    rsi,rbx
  40b6ec:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40b6f1:	cmp    rbx,rax
  40b6f4:	je     40b708 <_start@@Base+0x5cd8>
  40b6f6:	mov    QWORD PTR [r12],0x0
  40b6fe:	mov    rbx,rax
  40b701:	mov    DWORD PTR [rbp+0x0],0x0
  40b708:	mov    rax,rbx
  40b70b:	pop    rbx
  40b70c:	pop    rbp
  40b70d:	pop    r12
  40b70f:	ret    
  40b710:	movsx  rsi,BYTE PTR [rsi+0x6]
  40b715:	shl    rsi,0x8
  40b719:	movsx  rcx,BYTE PTR [rbx+0x5]
  40b71e:	mov    rax,rcx
  40b721:	shl    rax,0x10
  40b725:	or     rsi,rax
  40b728:	movsx  rcx,BYTE PTR [rbx+0x4]
  40b72d:	mov    rax,rcx
  40b730:	shl    rax,0x18
  40b734:	or     rax,rsi
  40b737:	movsx  rcx,BYTE PTR [rbx+0x3]
  40b73c:	mov    rsi,rcx
  40b73f:	shl    rsi,0x20
  40b743:	or     rax,rsi
  40b746:	movsx  rcx,BYTE PTR [rbx+0x2]
  40b74b:	mov    rsi,rcx
  40b74e:	shl    rsi,0x28
  40b752:	or     rsi,rax
  40b755:	movsx  rcx,BYTE PTR [rbx+0x1]
  40b75a:	mov    rax,rcx
  40b75d:	shl    rax,0x30
  40b761:	or     rsi,rax
  40b764:	movsx  rcx,BYTE PTR [rbx]
  40b768:	mov    rax,rcx
  40b76b:	shl    rax,0x38
  40b76f:	or     rax,rsi
  40b772:	jmp    40b6c5 <_start@@Base+0x5c95>
  40b777:	nop    WORD PTR [rax+rax*1+0x0]
  40b780:	xor    eax,eax
  40b782:	jmp    40b746 <_start@@Base+0x5d16>
  40b784:	nop    DWORD PTR [rax+0x0]
  40b788:	xor    eax,eax
  40b78a:	jmp    40b737 <_start@@Base+0x5d07>
  40b78c:	nop    DWORD PTR [rax+0x0]
  40b790:	xor    esi,esi
  40b792:	jmp    40b719 <_start@@Base+0x5ce9>
  40b794:	nop    DWORD PTR [rax+0x0]
  40b798:	xor    esi,esi
  40b79a:	jmp    40b728 <_start@@Base+0x5cf8>
  40b79c:	nop    DWORD PTR [rax+0x0]
  40b7a0:	xor    esi,esi
  40b7a2:	jmp    40b755 <_start@@Base+0x5d25>
  40b7a4:	nop    DWORD PTR [rax+0x0]
  40b7a8:	xor    esi,esi
  40b7aa:	jmp    40b764 <_start@@Base+0x5d34>
  40b7ac:	nop    DWORD PTR [rax+0x0]
  40b7b0:	mov    rax,rdx
  40b7b3:	push   r14
  40b7b5:	mov    r10,rsi
  40b7b8:	sub    rax,rsi
  40b7bb:	push   r13
  40b7bd:	mov    r11,rdx
  40b7c0:	cmp    rax,0x7
  40b7c4:	push   r12
  40b7c6:	mov    r12,rdi
  40b7c9:	push   rbp
  40b7ca:	mov    rbp,r8
  40b7cd:	push   rbx
  40b7ce:	mov    rbx,rcx
  40b7d1:	jbe    40b960 <_start@@Base+0x5f30>
  40b7d7:	movbe  rax,QWORD PTR [rsi]
  40b7dc:	movabs rdx,0x4d7947616d652e44
  40b7e6:	cmp    rax,rdx
  40b7e9:	ja     40b810 <_start@@Base+0x5de0>
  40b7eb:	movabs rdx,0x46616e746173792e
  40b7f5:	cmp    rax,rdx
  40b7f8:	je     40b970 <_start@@Base+0x5f40>
  40b7fe:	pop    rbx
  40b7ff:	mov    rax,r10
  40b802:	pop    rbp
  40b803:	pop    r12
  40b805:	pop    r13
  40b807:	pop    r14
  40b809:	ret    
  40b80a:	nop    WORD PTR [rax+rax*1+0x0]
  40b810:	movabs rdx,0x4d7947616d652e45
  40b81a:	cmp    rax,rdx
  40b81d:	je     40ba10 <_start@@Base+0x5fe0>
  40b823:	movabs rdx,0x4d7947616d652e4f
  40b82d:	cmp    rax,rdx
  40b830:	jne    40b7fe <_start@@Base+0x5dce>
  40b832:	lea    rdi,[r10+0x8]
  40b836:	mov    rax,r11
  40b839:	sub    rax,rdi
  40b83c:	cmp    rax,0x7
  40b840:	jbe    40bba8 <_start@@Base+0x6178>
  40b846:	movbe  rax,QWORD PTR [r10+0x8]
  40b84c:	movabs rdx,0x746865724e616d65
  40b856:	cmp    rax,rdx
  40b859:	jne    40b7fe <_start@@Base+0x5dce>
  40b85b:	lea    rdi,[r10+0x10]
  40b85f:	mov    rax,r11
  40b862:	sub    rax,rdi
  40b865:	cmp    rax,0x7
  40b869:	ja     40bcb8 <_start@@Base+0x6288>
  40b86f:	mov    rsi,r11
  40b872:	call   405b40 <_start@@Base+0x110>
  40b877:	movabs rdx,0x53706163652e4672
  40b881:	cmp    rax,rdx
  40b884:	jne    40b7fe <_start@@Base+0x5dce>
  40b88a:	lea    rdi,[r10+0x18]
  40b88e:	mov    rax,r11
  40b891:	sub    rax,rdi
  40b894:	cmp    rax,0x7
  40b898:	jbe    40bdf8 <_start@@Base+0x63c8>
  40b89e:	movbe  rax,QWORD PTR [r10+0x18]
  40b8a4:	movabs rdx,0x6f6d496e636c7564
  40b8ae:	cmp    rax,rdx
  40b8b1:	jne    40b7fe <_start@@Base+0x5dce>
  40b8b7:	lea    rdi,[r10+0x20]
  40b8bb:	mov    r8,r11
  40b8be:	sub    r8,rdi
  40b8c1:	cmp    r8,0x7
  40b8c5:	jbe    40be39 <_start@@Base+0x6409>
  40b8cb:	movbe  rax,QWORD PTR [r10+0x20]
  40b8d1:	movabs rdx,0xff00000000000000
  40b8db:	and    rax,rdx
  40b8de:	movabs rdx,0x6500000000000000
  40b8e8:	cmp    rax,rdx
  40b8eb:	jne    40b7fe <_start@@Base+0x5dce>
  40b8f1:	cmp    r8,0x1
  40b8f5:	jle    40b7fe <_start@@Base+0x5dce>
  40b8fb:	cmp    BYTE PTR [r10+0x21],0x2e
  40b900:	jne    40b7fe <_start@@Base+0x5dce>
  40b906:	lea    r13,[r10+0x22]
  40b90a:	mov    rax,r11
  40b90d:	sub    rax,r13
  40b910:	cmp    rax,0x7
  40b914:	jbe    40be92 <_start@@Base+0x6462>
  40b91a:	movbe  rax,QWORD PTR [r10+0x22]
  40b920:	movabs rdx,0xffffff0000000000
  40b92a:	movabs rcx,0x466f6f0000000000
  40b934:	and    rdx,rax
  40b937:	cmp    rdx,rcx
  40b93a:	je     40bf2a <_start@@Base+0x64fa>
  40b940:	movabs rdx,0x496e636c75646556
  40b94a:	cmp    rax,rdx
  40b94d:	je     40beaf <_start@@Base+0x647f>
  40b953:	mov    r10,r13
  40b956:	jmp    40b7fe <_start@@Base+0x5dce>
  40b95b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b960:	mov    rsi,rdx
  40b963:	mov    rdi,r10
  40b966:	call   405b40 <_start@@Base+0x110>
  40b96b:	jmp    40b7dc <_start@@Base+0x5dac>
  40b970:	lea    rdi,[r10+0x8]
  40b974:	mov    rax,r11
  40b977:	sub    rax,rdi
  40b97a:	cmp    rax,0x7
  40b97e:	jbe    40bae8 <_start@@Base+0x60b8>
  40b984:	movbe  rax,QWORD PTR [r10+0x8]
  40b98a:	movabs rdx,0x4368617261637465
  40b994:	cmp    rax,rdx
  40b997:	jne    40b7fe <_start@@Base+0x5dce>
  40b99d:	lea    rdi,[r10+0x10]
  40b9a1:	mov    r8,r11
  40b9a4:	sub    r8,rdi
  40b9a7:	cmp    r8,0x7
  40b9ab:	ja     40bbb8 <_start@@Base+0x6188>
  40b9b1:	mov    rsi,r11
  40b9b4:	call   405b40 <_start@@Base+0x110>
  40b9b9:	movabs rdx,0xff00000000000000
  40b9c3:	and    rax,rdx
  40b9c6:	movabs rdx,0x7200000000000000
  40b9d0:	cmp    rax,rdx
  40b9d3:	jne    40b7fe <_start@@Base+0x5dce>
  40b9d9:	cmp    r8,0x1
  40b9dd:	jle    40b7fe <_start@@Base+0x5dce>
  40b9e3:	cmp    BYTE PTR [r10+0x11],0x2e
  40b9e8:	jne    40b7fe <_start@@Base+0x5dce>
  40b9ee:	mov    r8,rbp
  40b9f1:	mov    rcx,rbx
  40b9f4:	mov    rdi,r12
  40b9f7:	pop    rbx
  40b9f8:	pop    rbp
  40b9f9:	pop    r12
  40b9fb:	pop    r13
  40b9fd:	pop    r14
  40b9ff:	lea    rsi,[r10+0x12]
  40ba03:	mov    rdx,r11
  40ba06:	jmp    406b60 <_start@@Base+0x1130>
  40ba0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba10:	lea    rdi,[r10+0x8]
  40ba14:	mov    rax,r11
  40ba17:	sub    rax,rdi
  40ba1a:	cmp    rax,0x7
  40ba1e:	jbe    40bb98 <_start@@Base+0x6168>
  40ba24:	movbe  rax,QWORD PTR [r10+0x8]
  40ba2a:	movabs rdx,0x78616d706c652e67
  40ba34:	cmp    rax,rdx
  40ba37:	ja     40baf8 <_start@@Base+0x60c8>
  40ba3d:	movabs rdx,0x78616d706c652e42
  40ba47:	cmp    rax,rdx
  40ba4a:	jbe    40bbc8 <_start@@Base+0x6198>
  40ba50:	movabs rdx,0x78616d706c652e43
  40ba5a:	cmp    rax,rdx
  40ba5d:	je     40bd90 <_start@@Base+0x6360>
  40ba63:	movabs rdx,0x78616d706c652e46
  40ba6d:	cmp    rax,rdx
  40ba70:	jne    40b7fe <_start@@Base+0x5dce>
  40ba76:	lea    rdi,[r10+0x10]
  40ba7a:	mov    r8,r11
  40ba7d:	sub    r8,rdi
  40ba80:	cmp    r8,0x7
  40ba84:	jbe    40be2c <_start@@Base+0x63fc>
  40ba8a:	movbe  rax,QWORD PTR [r10+0x10]
  40ba90:	movabs rdx,0xffff000000000000
  40ba9a:	and    rax,rdx
  40ba9d:	movabs rdx,0x6f6f000000000000
  40baa7:	cmp    rax,rdx
  40baaa:	jne    40b7fe <_start@@Base+0x5dce>
  40bab0:	cmp    r8,0x2
  40bab4:	jle    40b7fe <_start@@Base+0x5dce>
  40baba:	cmp    BYTE PTR [r10+0x12],0x2e
  40babf:	jne    40b7fe <_start@@Base+0x5dce>
  40bac5:	mov    r8,rbp
  40bac8:	mov    rcx,rbx
  40bacb:	mov    rdi,r12
  40bace:	pop    rbx
  40bacf:	pop    rbp
  40bad0:	pop    r12
  40bad2:	pop    r13
  40bad4:	pop    r14
  40bad6:	lea    rsi,[r10+0x13]
  40bada:	mov    rdx,r11
  40badd:	jmp    4070f0 <_start@@Base+0x16c0>
  40bae2:	nop    WORD PTR [rax+rax*1+0x0]
  40bae8:	mov    rsi,r11
  40baeb:	call   405b40 <_start@@Base+0x110>
  40baf0:	jmp    40b98a <_start@@Base+0x5f5a>
  40baf5:	nop    DWORD PTR [rax]
  40baf8:	movabs rdx,0x78616d706c652e68
  40bb02:	cmp    rax,rdx
  40bb05:	je     40bc50 <_start@@Base+0x6220>
  40bb0b:	movabs rdx,0x78616d706c652e6d
  40bb15:	cmp    rax,rdx
  40bb18:	ja     40bcc8 <_start@@Base+0x6298>
  40bb1e:	movabs rdx,0x78616d706c652e69
  40bb28:	cmp    rax,rdx
  40bb2b:	jne    40b7fe <_start@@Base+0x5dce>
  40bb31:	lea    rdi,[r10+0x10]
  40bb35:	mov    r8,r11
  40bb38:	sub    r8,rdi
  40bb3b:	cmp    r8,0x7
  40bb3f:	jbe    40be53 <_start@@Base+0x6423>
  40bb45:	movbe  rax,QWORD PTR [r10+0x10]
  40bb4b:	xor    al,al
  40bb4d:	movabs rdx,0x6e745f656e756d00
  40bb57:	cmp    rax,rdx
  40bb5a:	jne    40b7fe <_start@@Base+0x5dce>
  40bb60:	cmp    r8,0x7
  40bb64:	jle    40b7fe <_start@@Base+0x5dce>
  40bb6a:	cmp    BYTE PTR [r10+0x17],0x2e
  40bb6f:	jne    40b7fe <_start@@Base+0x5dce>
  40bb75:	mov    r8,rbp
  40bb78:	mov    rcx,rbx
  40bb7b:	mov    rdi,r12
  40bb7e:	pop    rbx
  40bb7f:	pop    rbp
  40bb80:	pop    r12
  40bb82:	pop    r13
  40bb84:	pop    r14
  40bb86:	lea    rsi,[r10+0x18]
  40bb8a:	mov    rdx,r11
  40bb8d:	jmp    4073e0 <_start@@Base+0x19b0>
  40bb92:	nop    WORD PTR [rax+rax*1+0x0]
  40bb98:	mov    rsi,r11
  40bb9b:	call   405b40 <_start@@Base+0x110>
  40bba0:	jmp    40ba2a <_start@@Base+0x5ffa>
  40bba5:	nop    DWORD PTR [rax]
  40bba8:	mov    rsi,r11
  40bbab:	call   405b40 <_start@@Base+0x110>
  40bbb0:	jmp    40b84c <_start@@Base+0x5e1c>
  40bbb5:	nop    DWORD PTR [rax]
  40bbb8:	movbe  rax,QWORD PTR [r10+0x10]
  40bbbe:	jmp    40b9b9 <_start@@Base+0x5f89>
  40bbc3:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbc8:	movabs rdx,0x78616d706c652e41
  40bbd2:	cmp    rax,rdx
  40bbd5:	jne    40b7fe <_start@@Base+0x5dce>
  40bbdb:	lea    rdi,[r10+0x10]
  40bbdf:	mov    r8,r11
  40bbe2:	sub    r8,rdi
  40bbe5:	cmp    r8,0x7
  40bbe9:	jbe    40be05 <_start@@Base+0x63d5>
  40bbef:	movbe  rax,QWORD PTR [r10+0x10]
  40bbf5:	movabs rdx,0xffff000000000000
  40bbff:	and    rax,rdx
  40bc02:	movabs rdx,0x6e79000000000000
  40bc0c:	cmp    rax,rdx
  40bc0f:	jne    40b7fe <_start@@Base+0x5dce>
  40bc15:	cmp    r8,0x2
  40bc19:	jle    40b7fe <_start@@Base+0x5dce>
  40bc1f:	cmp    BYTE PTR [r10+0x12],0x2e
  40bc24:	jne    40b7fe <_start@@Base+0x5dce>
  40bc2a:	mov    r8,rbp
  40bc2d:	mov    rcx,rbx
  40bc30:	mov    rdi,r12
  40bc33:	pop    rbx
  40bc34:	pop    rbp
  40bc35:	pop    r12
  40bc37:	pop    r13
  40bc39:	pop    r14
  40bc3b:	lea    rsi,[r10+0x13]
  40bc3f:	mov    rdx,r11
  40bc42:	jmp    406e40 <_start@@Base+0x1410>
  40bc47:	nop    WORD PTR [rax+rax*1+0x0]
  40bc50:	lea    rdi,[r10+0x10]
  40bc54:	mov    r8,r11
  40bc57:	sub    r8,rdi
  40bc5a:	cmp    r8,0x7
  40bc5e:	jbe    40be12 <_start@@Base+0x63e2>
  40bc64:	movbe  rax,QWORD PTR [r10+0x10]
  40bc6a:	xor    al,al
  40bc6c:	movabs rdx,0x65785f656e756d00
  40bc76:	cmp    rax,rdx
  40bc79:	jne    40b7fe <_start@@Base+0x5dce>
  40bc7f:	cmp    r8,0x7
  40bc83:	jle    40b7fe <_start@@Base+0x5dce>
  40bc89:	cmp    BYTE PTR [r10+0x17],0x2e
  40bc8e:	jne    40b7fe <_start@@Base+0x5dce>
  40bc94:	mov    r8,rbp
  40bc97:	mov    rcx,rbx
  40bc9a:	mov    rdi,r12
  40bc9d:	pop    rbx
  40bc9e:	pop    rbp
  40bc9f:	pop    r12
  40bca1:	pop    r13
  40bca3:	pop    r14
  40bca5:	lea    rsi,[r10+0x18]
  40bca9:	mov    rdx,r11
  40bcac:	jmp    407280 <_start@@Base+0x1850>
  40bcb1:	nop    DWORD PTR [rax+0x0]
  40bcb8:	movbe  rax,QWORD PTR [r10+0x10]
  40bcbe:	jmp    40b877 <_start@@Base+0x5e47>
  40bcc3:	nop    DWORD PTR [rax+rax*1+0x0]
  40bcc8:	movabs rdx,0x78616d706c652e6e
  40bcd2:	cmp    rax,rdx
  40bcd5:	jne    40b7fe <_start@@Base+0x5dce>
  40bcdb:	lea    rdi,[r10+0x10]
  40bcdf:	mov    r8,r11
  40bce2:	sub    r8,rdi
  40bce5:	cmp    r8,0x7
  40bce9:	jbe    40be46 <_start@@Base+0x6416>
  40bcef:	movbe  rax,QWORD PTR [r10+0x10]
  40bcf5:	mov    rcx,rax
  40bcf8:	movabs rdx,0x65675f656e756d00
  40bd02:	xor    cl,cl
  40bd04:	cmp    rcx,rdx
  40bd07:	je     40be60 <_start@@Base+0x6430>
  40bd0d:	movabs rdx,0x6f74656d70747965
  40bd17:	cmp    rax,rdx
  40bd1a:	jne    40b7fe <_start@@Base+0x5dce>
  40bd20:	lea    rdi,[r10+0x18]
  40bd24:	mov    r8,r11
  40bd27:	sub    r8,rdi
  40bd2a:	cmp    r8,0x7
  40bd2e:	jbe    40bea2 <_start@@Base+0x6472>
  40bd34:	movbe  rax,QWORD PTR [r10+0x18]
  40bd3a:	movabs rdx,0xffffff0000000000
  40bd44:	and    rax,rdx
  40bd47:	movabs rdx,0x6e756d0000000000
  40bd51:	cmp    rax,rdx
  40bd54:	jne    40b7fe <_start@@Base+0x5dce>
  40bd5a:	cmp    r8,0x3
  40bd5e:	jle    40b7fe <_start@@Base+0x5dce>
  40bd64:	cmp    BYTE PTR [r10+0x1b],0x2e
  40bd69:	jne    40b7fe <_start@@Base+0x5dce>
  40bd6f:	mov    r8,rbp
  40bd72:	mov    rcx,rbx
  40bd75:	mov    rdi,r12
  40bd78:	pop    rbx
  40bd79:	pop    rbp
  40bd7a:	pop    r12
  40bd7c:	pop    r13
  40bd7e:	pop    r14
  40bd80:	lea    rsi,[r10+0x1c]
  40bd84:	mov    rdx,r11
  40bd87:	jmp    40b690 <_start@@Base+0x5c60>
  40bd8c:	nop    DWORD PTR [rax+0x0]
  40bd90:	lea    rdi,[r10+0x10]
  40bd94:	mov    r8,r11
  40bd97:	sub    r8,rdi
  40bd9a:	cmp    r8,0x7
  40bd9e:	jbe    40be1f <_start@@Base+0x63ef>
  40bda0:	movbe  rax,QWORD PTR [r10+0x10]
  40bda6:	movabs rdx,0xffffffff00000000
  40bdb0:	and    rax,rdx
  40bdb3:	movabs rdx,0x6f6c6f7200000000
  40bdbd:	cmp    rax,rdx
  40bdc0:	jne    40b7fe <_start@@Base+0x5dce>
  40bdc6:	cmp    r8,0x4
  40bdca:	jle    40b7fe <_start@@Base+0x5dce>
  40bdd0:	cmp    BYTE PTR [r10+0x14],0x2e
  40bdd5:	jne    40b7fe <_start@@Base+0x5dce>
  40bddb:	mov    r8,rbp
  40bdde:	mov    rcx,rbx
  40bde1:	mov    rdi,r12
  40bde4:	pop    rbx
  40bde5:	pop    rbp
  40bde6:	pop    r12
  40bde8:	pop    r13
  40bdea:	pop    r14
  40bdec:	lea    rsi,[r10+0x15]
  40bdf0:	mov    rdx,r11
  40bdf3:	jmp    4076e0 <_start@@Base+0x1cb0>
  40bdf8:	mov    rsi,r11
  40bdfb:	call   405b40 <_start@@Base+0x110>
  40be00:	jmp    40b8a4 <_start@@Base+0x5e74>
  40be05:	mov    rsi,r11
  40be08:	call   405b40 <_start@@Base+0x110>
  40be0d:	jmp    40bbf5 <_start@@Base+0x61c5>
  40be12:	mov    rsi,r11
  40be15:	call   405b40 <_start@@Base+0x110>
  40be1a:	jmp    40bc6a <_start@@Base+0x623a>
  40be1f:	mov    rsi,r11
  40be22:	call   405b40 <_start@@Base+0x110>
  40be27:	jmp    40bda6 <_start@@Base+0x6376>
  40be2c:	mov    rsi,r11
  40be2f:	call   405b40 <_start@@Base+0x110>
  40be34:	jmp    40ba90 <_start@@Base+0x6060>
  40be39:	mov    rsi,r11
  40be3c:	call   405b40 <_start@@Base+0x110>
  40be41:	jmp    40b8d1 <_start@@Base+0x5ea1>
  40be46:	mov    rsi,r11
  40be49:	call   405b40 <_start@@Base+0x110>
  40be4e:	jmp    40bcf5 <_start@@Base+0x62c5>
  40be53:	mov    rsi,r11
  40be56:	call   405b40 <_start@@Base+0x110>
  40be5b:	jmp    40bb4b <_start@@Base+0x611b>
  40be60:	cmp    r8,0x7
  40be64:	jle    40b7fe <_start@@Base+0x5dce>
  40be6a:	cmp    BYTE PTR [r10+0x17],0x2e
  40be6f:	jne    40b7fe <_start@@Base+0x5dce>
  40be75:	mov    r8,rbp
  40be78:	mov    rcx,rbx
  40be7b:	mov    rdi,r12
  40be7e:	pop    rbx
  40be7f:	pop    rbp
  40be80:	pop    r12
  40be82:	pop    r13
  40be84:	pop    r14
  40be86:	lea    rsi,[r10+0x18]
  40be8a:	mov    rdx,r11
  40be8d:	jmp    407590 <_start@@Base+0x1b60>
  40be92:	mov    rsi,r11
  40be95:	mov    rdi,r13
  40be98:	call   405b40 <_start@@Base+0x110>
  40be9d:	jmp    40b920 <_start@@Base+0x5ef0>
  40bea2:	mov    rsi,r11
  40bea5:	call   405b40 <_start@@Base+0x110>
  40beaa:	jmp    40bd3a <_start@@Base+0x630a>
  40beaf:	lea    r14,[r10+0x2a]
  40beb3:	mov    rax,r11
  40beb6:	sub    rax,r14
  40beb9:	cmp    rax,0x7
  40bebd:	jbe    40bf1d <_start@@Base+0x64ed>
  40bebf:	movbe  rax,QWORD PTR [r10+0x2a]
  40bec5:	movabs rdx,0xffff000000000000
  40becf:	mov    r10,r13
  40bed2:	and    rax,rdx
  40bed5:	movabs rdx,0x616c000000000000
  40bedf:	cmp    rax,rdx
  40bee2:	jne    40b7fe <_start@@Base+0x5dce>
  40bee8:	mov    r8,r9
  40beeb:	mov    ecx,0x2
  40bef0:	mov    rdx,r11
  40bef3:	mov    rsi,r14
  40bef6:	mov    rdi,r12
  40bef9:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40befe:	cmp    r14,rax
  40bf01:	mov    r10,rax
  40bf04:	je     40b953 <_start@@Base+0x5f23>
  40bf0a:	mov    QWORD PTR [rbp+0x0],0x0
  40bf12:	mov    DWORD PTR [rbx],0x0
  40bf18:	jmp    40b7fe <_start@@Base+0x5dce>
  40bf1d:	mov    rsi,r11
  40bf20:	mov    rdi,r14
  40bf23:	call   405b40 <_start@@Base+0x110>
  40bf28:	jmp    40bec5 <_start@@Base+0x6495>
  40bf2a:	mov    r8,r9
  40bf2d:	mov    ecx,0x3
  40bf32:	mov    rdx,r11
  40bf35:	mov    rsi,r13
  40bf38:	mov    rdi,r12
  40bf3b:	call   41c410 <flatcc_json_parser_match_constant@@Base>
  40bf40:	cmp    r13,rax
  40bf43:	mov    r10,rax
  40bf46:	je     40b7fe <_start@@Base+0x5dce>
  40bf4c:	mov    QWORD PTR [rbp+0x0],0x11
  40bf54:	mov    DWORD PTR [rbx],0x0
  40bf5a:	jmp    40b7fe <_start@@Base+0x5dce>
  40bf5f:	nop
  40bf60:	push   r13
  40bf62:	push   r12
  40bf64:	mov    r10,rsi
  40bf67:	push   rbp
  40bf68:	push   rbx
  40bf69:	mov    rbx,rdx
  40bf6c:	sub    rbx,rsi
  40bf6f:	mov    rbp,rdi
  40bf72:	mov    r11,rdx
  40bf75:	sub    rsp,0x8
  40bf79:	cmp    rbx,0x7
  40bf7d:	mov    r12,rcx
  40bf80:	jbe    40bfe8 <_start@@Base+0x65b8>
  40bf82:	movbe  rax,QWORD PTR [rsi]
  40bf87:	movabs rdx,0x6865785f656e756c
  40bf91:	cmp    rax,rdx
  40bf94:	ja     40c002 <_start@@Base+0x65d2>
  40bf96:	movabs rdx,0x436f6c6f71ffffff
  40bfa0:	cmp    rax,rdx
  40bfa3:	movabs rdx,0xffffff0000000000
  40bfad:	ja     40c0b0 <_start@@Base+0x6680>
  40bfb3:	and    rax,rdx
  40bfb6:	movabs rdx,0x416e790000000000
  40bfc0:	cmp    rax,rdx
  40bfc3:	jne    40bfd6 <_start@@Base+0x65a6>
  40bfc5:	cmp    rbx,0x3
  40bfc9:	jle    40bfd6 <_start@@Base+0x65a6>
  40bfcb:	cmp    BYTE PTR [r10+0x3],0x2e
  40bfd0:	je     40c1e8 <_start@@Base+0x67b8>
  40bfd6:	add    rsp,0x8
  40bfda:	mov    rax,r10
  40bfdd:	pop    rbx
  40bfde:	pop    rbp
  40bfdf:	pop    r12
  40bfe1:	pop    r13
  40bfe3:	ret    
  40bfe4:	nop    DWORD PTR [rax+0x0]
  40bfe8:	mov    rsi,rdx
  40bfeb:	mov    rdi,r10
  40bfee:	call   405b40 <_start@@Base+0x110>
  40bff3:	movabs rdx,0x6865785f656e756c
  40bffd:	cmp    rax,rdx
  40c000:	jbe    40bf96 <_start@@Base+0x6566>
  40c002:	movabs rdx,0x696e745f656e756c
  40c00c:	cmp    rax,rdx
  40c00f:	ja     40c050 <_start@@Base+0x6620>
  40c011:	movabs rdx,0x6865785f656e756d
  40c01b:	cmp    rax,rdx
  40c01e:	jne    40bfd6 <_start@@Base+0x65a6>
  40c020:	cmp    rbx,0x8
  40c024:	jle    40bfd6 <_start@@Base+0x65a6>
  40c026:	cmp    BYTE PTR [r10+0x8],0x2e
  40c02b:	jne    40bfd6 <_start@@Base+0x65a6>
  40c02d:	add    rsp,0x8
  40c031:	mov    rcx,r12
  40c034:	mov    rdi,rbp
  40c037:	pop    rbx
  40c038:	pop    rbp
  40c039:	pop    r12
  40c03b:	pop    r13
  40c03d:	lea    rsi,[r10+0x9]
  40c041:	mov    rdx,r11
  40c044:	jmp    407280 <_start@@Base+0x1850>
  40c049:	nop    DWORD PTR [rax+0x0]
  40c050:	movabs rdx,0x6e65675f656e756c
  40c05a:	cmp    rax,rdx
  40c05d:	ja     40c110 <_start@@Base+0x66e0>
  40c063:	movabs rdx,0x696e745f656e756d
  40c06d:	cmp    rax,rdx
  40c070:	jne    40bfd6 <_start@@Base+0x65a6>
  40c076:	cmp    rbx,0x8
  40c07a:	jle    40bfd6 <_start@@Base+0x65a6>
  40c080:	cmp    BYTE PTR [r10+0x8],0x2e
  40c085:	jne    40bfd6 <_start@@Base+0x65a6>
  40c08b:	add    rsp,0x8
  40c08f:	mov    rcx,r12
  40c092:	mov    rdi,rbp
  40c095:	pop    rbx
  40c096:	pop    rbp
  40c097:	pop    r12
  40c099:	pop    r13
  40c09b:	lea    rsi,[r10+0x9]
  40c09f:	mov    rdx,r11
  40c0a2:	jmp    4073e0 <_start@@Base+0x19b0>
  40c0a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c0b0:	and    rdx,rax
  40c0b3:	movabs rcx,0x466f6f0000000000
  40c0bd:	cmp    rdx,rcx
  40c0c0:	je     40c1b0 <_start@@Base+0x6780>
  40c0c6:	and    rax,0xffffffffff000000
  40c0cc:	movabs rdx,0x436f6c6f72000000
  40c0d6:	cmp    rax,rdx
  40c0d9:	jne    40bfd6 <_start@@Base+0x65a6>
  40c0df:	cmp    rbx,0x5
  40c0e3:	jle    40bfd6 <_start@@Base+0x65a6>
  40c0e9:	cmp    BYTE PTR [r10+0x5],0x2e
  40c0ee:	jne    40bfd6 <_start@@Base+0x65a6>
  40c0f4:	add    rsp,0x8
  40c0f8:	mov    rcx,r12
  40c0fb:	mov    rdi,rbp
  40c0fe:	pop    rbx
  40c0ff:	pop    rbp
  40c100:	pop    r12
  40c102:	pop    r13
  40c104:	lea    rsi,[r10+0x6]
  40c108:	mov    rdx,r11
  40c10b:	jmp    4076e0 <_start@@Base+0x1cb0>
  40c110:	movabs rdx,0x6e65675f656e756d
  40c11a:	cmp    rax,rdx
  40c11d:	je     40c208 <_start@@Base+0x67d8>
  40c123:	movabs rdx,0x6e6f74656d707479
  40c12d:	cmp    rax,rdx
  40c130:	jne    40bfd6 <_start@@Base+0x65a6>
  40c136:	lea    r13,[r10+0x8]
  40c13a:	mov    rbx,r11
  40c13d:	sub    rbx,r13
  40c140:	cmp    rbx,0x7
  40c144:	jbe    40c240 <_start@@Base+0x6810>
  40c14a:	movbe  rax,QWORD PTR [r10+0x8]
  40c150:	movabs rdx,0xffffffff00000000
  40c15a:	and    rax,rdx
  40c15d:	movabs rdx,0x656e756d00000000
  40c167:	cmp    rax,rdx
  40c16a:	jne    40bfd6 <_start@@Base+0x65a6>
  40c170:	cmp    rbx,0x4
  40c174:	jle    40bfd6 <_start@@Base+0x65a6>
  40c17a:	cmp    BYTE PTR [r10+0xc],0x2e
  40c17f:	jne    40bfd6 <_start@@Base+0x65a6>
  40c185:	lea    rsi,[r10+0xd]
  40c189:	cmp    r13,rsi
  40c18c:	je     40bfd6 <_start@@Base+0x65a6>
  40c192:	add    rsp,0x8
  40c196:	mov    rcx,r12
  40c199:	mov    rdi,rbp
  40c19c:	pop    rbx
  40c19d:	pop    rbp
  40c19e:	pop    r12
  40c1a0:	pop    r13
  40c1a2:	mov    rdx,r11
  40c1a5:	jmp    40b690 <_start@@Base+0x5c60>
  40c1aa:	nop    WORD PTR [rax+rax*1+0x0]
  40c1b0:	cmp    rbx,0x3
  40c1b4:	jle    40bfd6 <_start@@Base+0x65a6>
  40c1ba:	cmp    BYTE PTR [r10+0x3],0x2e
  40c1bf:	jne    40bfd6 <_start@@Base+0x65a6>
  40c1c5:	add    rsp,0x8
  40c1c9:	mov    rcx,r12
  40c1cc:	mov    rdi,rbp
  40c1cf:	pop    rbx
  40c1d0:	pop    rbp
  40c1d1:	pop    r12
  40c1d3:	pop    r13
  40c1d5:	lea    rsi,[r10+0x4]
  40c1d9:	mov    rdx,r11
  40c1dc:	jmp    4070f0 <_start@@Base+0x16c0>
  40c1e1:	nop    DWORD PTR [rax+0x0]
  40c1e8:	add    rsp,0x8
  40c1ec:	mov    rcx,r12
  40c1ef:	mov    rdi,rbp
  40c1f2:	pop    rbx
  40c1f3:	pop    rbp
  40c1f4:	pop    r12
  40c1f6:	pop    r13
  40c1f8:	lea    rsi,[r10+0x4]
  40c1fc:	mov    rdx,r11
  40c1ff:	jmp    406e40 <_start@@Base+0x1410>
  40c204:	nop    DWORD PTR [rax+0x0]
  40c208:	cmp    rbx,0x8
  40c20c:	jle    40bfd6 <_start@@Base+0x65a6>
  40c212:	cmp    BYTE PTR [r10+0x8],0x2e
  40c217:	jne    40bfd6 <_start@@Base+0x65a6>
  40c21d:	add    rsp,0x8
  40c221:	mov    rcx,r12
  40c224:	mov    rdi,rbp
  40c227:	pop    rbx
  40c228:	pop    rbp
  40c229:	pop    r12
  40c22b:	pop    r13
  40c22d:	lea    rsi,[r10+0x9]
  40c231:	mov    rdx,r11
  40c234:	jmp    407590 <_start@@Base+0x1b60>
  40c239:	nop    DWORD PTR [rax+0x0]
  40c240:	mov    rsi,r11
  40c243:	mov    rdi,r13
  40c246:	call   405b40 <_start@@Base+0x110>
  40c24b:	jmp    40c150 <_start@@Base+0x6720>
  40c250:	push   r15
  40c252:	push   r14
  40c254:	push   r13
  40c256:	push   r12
  40c258:	mov    r12,rsi
  40c25b:	push   rbp
  40c25c:	push   rbx
  40c25d:	mov    rbp,rdi
  40c260:	mov    esi,0x4
  40c265:	mov    rbx,rdx
  40c268:	sub    rsp,0x68
  40c26c:	mov    DWORD PTR [rcx],0x0
  40c272:	mov    rdi,QWORD PTR fs:0x28
  40c27b:	mov    QWORD PTR [rsp+0x58],rdi
  40c280:	xor    edi,edi
  40c282:	mov    rdi,QWORD PTR [rbp+0x0]
  40c286:	mov    QWORD PTR [rsp+0x18],rcx
  40c28b:	call   4168e0 <flatcc_builder_start_table@@Base>
  40c290:	test   eax,eax
  40c292:	jne    40c418 <_start@@Base+0x69e8>
  40c298:	lea    r8,[rsp+0x40]
  40c29d:	mov    ecx,0x1
  40c2a2:	mov    rdx,rbx
  40c2a5:	mov    rsi,r12
  40c2a8:	mov    rdi,rbp
  40c2ab:	call   41d9d0 <flatcc_json_parser_prepare_unions@@Base>
  40c2b0:	cmp    rbx,rax
  40c2b3:	je     40c418 <_start@@Base+0x69e8>
  40c2b9:	lea    rcx,[rsp+0x28]
  40c2be:	mov    rsi,r12
  40c2c1:	mov    rdi,rbp
  40c2c4:	mov    rdx,rbx
  40c2c7:	call   408740 <_start@@Base+0x2d10>
  40c2cc:	lea    rdi,[rsp+0x48]
  40c2d1:	mov    r12,rax
  40c2d4:	mov    eax,DWORD PTR [rsp+0x28]
  40c2d8:	mov    QWORD PTR [rsp],rdi
  40c2dc:	nop    DWORD PTR [rax+0x0]
  40c2e0:	test   eax,eax
  40c2e2:	je     40c408 <_start@@Base+0x69d8>
  40c2e8:	cmp    rbx,r12
  40c2eb:	je     40d060 <_start@@Base+0x7630>
  40c2f1:	cmp    BYTE PTR [r12],0x22
  40c2f6:	jne    40c450 <_start@@Base+0x6a20>
  40c2fc:	add    r12,0x1
  40c300:	mov    r15,rbx
  40c303:	sub    r15,r12
  40c306:	cmp    r15,0x7
  40c30a:	jbe    40c476 <_start@@Base+0x6a46>
  40c310:	movbe  r13,QWORD PTR [r12]
  40c316:	movabs rax,0x6d616e79616e795f
  40c320:	cmp    r13,rax
  40c323:	je     40c490 <_start@@Base+0x6a60>
  40c329:	mov    rdx,r13
  40c32c:	movabs rax,0x6d616e79616e7900
  40c336:	xor    dl,dl
  40c338:	cmp    rdx,rax
  40c33b:	jne    40c347 <_start@@Base+0x6917>
  40c33d:	cmp    r15,0x7
  40c341:	jg     40d310 <_start@@Base+0x78e0>
  40c347:	mov    rdx,r13
  40c34a:	movabs rax,0x7072656669780000
  40c354:	xor    dx,dx
  40c357:	cmp    rdx,rax
  40c35a:	je     40c5c0 <_start@@Base+0x6b90>
  40c360:	and    r13,0xffffffffff000000
  40c367:	movabs rax,0x6d6f766965000000
  40c371:	cmp    r13,rax
  40c374:	jne    40c380 <_start@@Base+0x6950>
  40c376:	cmp    r15,0x5
  40c37a:	jg     40d2b0 <_start@@Base+0x7880>
  40c380:	mov    rdx,rbx
  40c383:	mov    rsi,r12
  40c386:	mov    rdi,rbp
  40c389:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c38e:	mov    r13,rax
  40c391:	mov    rax,rbx
  40c394:	sub    rax,r13
  40c397:	cmp    rax,0x1
  40c39b:	jle    40c3aa <_start@@Base+0x697a>
  40c39d:	cmp    BYTE PTR [r13+0x0],0x20
  40c3a2:	jg     40c3bb <_start@@Base+0x698b>
  40c3a4:	je     40d070 <_start@@Base+0x7640>
  40c3aa:	mov    rsi,r13
  40c3ad:	mov    rdx,rbx
  40c3b0:	mov    rdi,rbp
  40c3b3:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40c3b8:	mov    r13,rax
  40c3bb:	cmp    rbx,r13
  40c3be:	je     40d090 <_start@@Base+0x7660>
  40c3c4:	cmp    BYTE PTR [r13+0x0],0x2c
  40c3c9:	je     40d190 <_start@@Base+0x7760>
  40c3cf:	mov    DWORD PTR [rsp+0x28],0x0
  40c3d7:	cmp    BYTE PTR [r13+0x0],0x7d
  40c3dc:	je     40c4f0 <_start@@Base+0x6ac0>
  40c3e2:	mov    ecx,0xa
  40c3e7:	mov    rdx,rbx
  40c3ea:	mov    rsi,r13
  40c3ed:	mov    rdi,rbp
  40c3f0:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40c3f5:	mov    r12,rax
  40c3f8:	mov    eax,DWORD PTR [rsp+0x28]
  40c3fc:	test   eax,eax
  40c3fe:	jne    40c2e8 <_start@@Base+0x68b8>
  40c404:	nop    DWORD PTR [rax+0x0]
  40c408:	mov    eax,DWORD PTR [rbp+0x1c]
  40c40b:	test   eax,eax
  40c40d:	je     40e090 <_start@@Base+0x8660>
  40c413:	nop    DWORD PTR [rax+rax*1+0x0]
  40c418:	mov    ecx,0x21
  40c41d:	mov    rdx,rbx
  40c420:	mov    rsi,r12
  40c423:	mov    rdi,rbp
  40c426:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40c42b:	mov    rdi,QWORD PTR [rsp+0x58]
  40c430:	xor    rdi,QWORD PTR fs:0x28
  40c439:	jne    40ebc4 <_start@@Base+0x9194>
  40c43f:	add    rsp,0x68
  40c443:	pop    rbx
  40c444:	pop    rbp
  40c445:	pop    r12
  40c447:	pop    r13
  40c449:	pop    r14
  40c44b:	pop    r15
  40c44d:	ret    
  40c44e:	xchg   ax,ax
  40c450:	mov    rsi,r12
  40c453:	mov    ecx,0x5
  40c458:	mov    rdx,rbx
  40c45b:	mov    rdi,rbp
  40c45e:	mov    r15,rbx
  40c461:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40c466:	sub    r15,rax
  40c469:	mov    r12,rax
  40c46c:	cmp    r15,0x7
  40c470:	ja     40c310 <_start@@Base+0x68e0>
  40c476:	cmp    r15,0x8
  40c47a:	ja     40d063 <_start@@Base+0x7633>
  40c480:	lea    rdx,[rip+0x1ec21]        # 42b0a8 <_IO_stdin_used@@Base+0xa8>
  40c487:	movsxd rax,DWORD PTR [rdx+r15*4]
  40c48b:	add    rax,rdx
  40c48e:	jmp    rax
  40c490:	lea    r13,[r12+0x8]
  40c495:	mov    r8,rbx
  40c498:	sub    r8,r13
  40c49b:	cmp    r8,0x7
  40c49f:	jbe    40d0b0 <_start@@Base+0x7680>
  40c4a5:	movbe  rax,QWORD PTR [r12+0x8]
  40c4ac:	movabs rdx,0xffffffff00000000
  40c4b6:	and    rax,rdx
  40c4b9:	movabs rdx,0x7479706500000000
  40c4c3:	cmp    rax,rdx
  40c4c6:	jne    40c4d2 <_start@@Base+0x6aa2>
  40c4c8:	cmp    r8,0x4
  40c4cc:	jg     40d480 <_start@@Base+0x7a50>
  40c4d2:	mov    rsi,r13
  40c4d5:	mov    rdx,rbx
  40c4d8:	mov    rdi,rbp
  40c4db:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c4e0:	mov    r13,rax
  40c4e3:	jmp    40c391 <_start@@Base+0x6961>
  40c4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4f0:	lea    r12,[r13+0x1]
  40c4f4:	mov    rax,rbx
  40c4f7:	sub    rax,r12
  40c4fa:	cmp    rax,0x1
  40c4fe:	jle    40c511 <_start@@Base+0x6ae1>
  40c500:	cmp    BYTE PTR [r13+0x1],0x20
  40c505:	jg     40c408 <_start@@Base+0x69d8>
  40c50b:	je     40de99 <_start@@Base+0x8469>
  40c511:	mov    rsi,r12
  40c514:	mov    rdx,rbx
  40c517:	mov    rdi,rbp
  40c51a:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40c51f:	mov    r12,rax
  40c522:	mov    eax,DWORD PTR [rsp+0x28]
  40c526:	jmp    40c2e0 <_start@@Base+0x68b0>
  40c52b:	movsx  r13,BYTE PTR [r12+0x7]
  40c531:	movsx  rdx,BYTE PTR [r12+0x6]
  40c537:	mov    rax,rdx
  40c53a:	shl    rax,0x8
  40c53e:	or     rax,r13
  40c541:	movsx  rdx,BYTE PTR [r12+0x5]
  40c547:	shl    rdx,0x10
  40c54b:	or     rax,rdx
  40c54e:	movsx  rdx,BYTE PTR [r12+0x4]
  40c554:	shl    rdx,0x18
  40c558:	mov    r13,rdx
  40c55b:	or     r13,rax
  40c55e:	movsx  rdx,BYTE PTR [r12+0x3]
  40c564:	mov    rax,rdx
  40c567:	shl    rax,0x20
  40c56b:	or     r13,rax
  40c56e:	movsx  rdx,BYTE PTR [r12+0x2]
  40c574:	mov    rax,rdx
  40c577:	shl    rax,0x28
  40c57b:	or     rax,r13
  40c57e:	movsx  rdx,BYTE PTR [r12+0x1]
  40c584:	shl    rdx,0x30
  40c588:	or     rax,rdx
  40c58b:	movsx  r13,BYTE PTR [r12]
  40c590:	shl    r13,0x38
  40c594:	or     r13,rax
  40c597:	jmp    40c316 <_start@@Base+0x68e6>
  40c59c:	xor    r13d,r13d
  40c59f:	jmp    40c531 <_start@@Base+0x6b01>
  40c5a1:	xor    eax,eax
  40c5a3:	jmp    40c541 <_start@@Base+0x6b11>
  40c5a5:	xor    eax,eax
  40c5a7:	jmp    40c54e <_start@@Base+0x6b1e>
  40c5a9:	xor    r13d,r13d
  40c5ac:	jmp    40c55e <_start@@Base+0x6b2e>
  40c5ae:	xor    r13d,r13d
  40c5b1:	jmp    40c56e <_start@@Base+0x6b3e>
  40c5b3:	xor    eax,eax
  40c5b5:	jmp    40c57e <_start@@Base+0x6b4e>
  40c5b7:	xor    eax,eax
  40c5b9:	jmp    40c58b <_start@@Base+0x6b5b>
  40c5bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5c0:	cmp    r15,0x6
  40c5c4:	jle    40c380 <_start@@Base+0x6950>
  40c5ca:	mov    ecx,0x6
  40c5cf:	mov    rdx,rbx
  40c5d2:	mov    rsi,r12
  40c5d5:	mov    rdi,rbp
  40c5d8:	call   409ba0 <_start@@Base+0x4170>
  40c5dd:	cmp    rax,r12
  40c5e0:	mov    r13,rax
  40c5e3:	je     40c380 <_start@@Base+0x6950>
  40c5e9:	mov    rdi,QWORD PTR [rbp+0x0]
  40c5ed:	mov    esi,0x3
  40c5f2:	mov    DWORD PTR [rsp+0x2c],0x0
  40c5fa:	call   4168e0 <flatcc_builder_start_table@@Base>
  40c5ff:	test   eax,eax
  40c601:	jne    40ca10 <_start@@Base+0x6fe0>
  40c607:	lea    rcx,[rsp+0x30]
  40c60c:	mov    rsi,r13
  40c60f:	mov    rdx,rbx
  40c612:	mov    rdi,rbp
  40c615:	call   408740 <_start@@Base+0x2d10>
  40c61a:	mov    r13,rax
  40c61d:	mov    eax,DWORD PTR [rsp+0x30]
  40c621:	nop    DWORD PTR [rax+0x0]
  40c628:	test   eax,eax
  40c62a:	je     40c9fb <_start@@Base+0x6fcb>
  40c630:	lea    r12,[rsp+0x50]
  40c635:	cmp    rbx,r13
  40c638:	je     40c920 <_start@@Base+0x6ef0>
  40c63e:	cmp    BYTE PTR [r13+0x0],0x22
  40c643:	jne    40c940 <_start@@Base+0x6f10>
  40c649:	add    r13,0x1
  40c64d:	mov    rax,rbx
  40c650:	sub    rax,r13
  40c653:	cmp    rax,0x7
  40c657:	jbe    40c966 <_start@@Base+0x6f36>
  40c65d:	movbe  rax,QWORD PTR [r13+0x0]
  40c663:	movabs rdx,0x746573746a736f6e
  40c66d:	cmp    rax,rdx
  40c670:	jne    40c920 <_start@@Base+0x6ef0>
  40c676:	lea    rsi,[r13+0x8]
  40c67a:	mov    rax,rbx
  40c67d:	sub    rax,rsi
  40c680:	cmp    rax,0x7
  40c684:	ja     40c980 <_start@@Base+0x6f50>
  40c68a:	lea    rdx,[rip+0x1ea3b]        # 42b0cc <_IO_stdin_used@@Base+0xcc>
  40c691:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c695:	add    rax,rdx
  40c698:	jmp    rax
  40c69a:	nop    WORD PTR [rax+rax*1+0x0]
  40c6a0:	movsx  rcx,BYTE PTR [r13+0xe]
  40c6a5:	shl    rcx,0x8
  40c6a9:	movsx  rdx,BYTE PTR [r13+0xd]
  40c6ae:	mov    rax,rdx
  40c6b1:	shl    rax,0x10
  40c6b5:	or     rcx,rax
  40c6b8:	movsx  rdx,BYTE PTR [r13+0xc]
  40c6bd:	mov    rax,rdx
  40c6c0:	shl    rax,0x18
  40c6c4:	or     rax,rcx
  40c6c7:	movsx  rdx,BYTE PTR [r13+0xb]
  40c6cc:	mov    rcx,rdx
  40c6cf:	shl    rcx,0x20
  40c6d3:	or     rax,rcx
  40c6d6:	movsx  rdx,BYTE PTR [r13+0xa]
  40c6db:	mov    rcx,rdx
  40c6de:	shl    rcx,0x28
  40c6e2:	or     rcx,rax
  40c6e5:	movsx  rdx,BYTE PTR [r13+0x9]
  40c6ea:	mov    rax,rdx
  40c6ed:	shl    rax,0x30
  40c6f1:	or     rcx,rax
  40c6f4:	movsx  rdx,BYTE PTR [r13+0x8]
  40c6f9:	mov    rax,rdx
  40c6fc:	shl    rax,0x38
  40c700:	or     rax,rcx
  40c703:	movabs rdx,0x7072656669787061
  40c70d:	cmp    rax,rdx
  40c710:	jne    40c7a0 <_start@@Base+0x6d70>
  40c716:	lea    r15,[r13+0x10]
  40c71a:	mov    rcx,rbx
  40c71d:	sub    rcx,r15
  40c720:	cmp    rcx,0x7
  40c724:	ja     40cab0 <_start@@Base+0x7080>
  40c72a:	lea    rdx,[rip+0x1e9bb]        # 42b0ec <_IO_stdin_used@@Base+0xec>
  40c731:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40c735:	add    rax,rdx
  40c738:	jmp    rax
  40c73a:	nop    WORD PTR [rax+rax*1+0x0]
  40c740:	xor    ecx,ecx
  40c742:	jmp    40c6a9 <_start@@Base+0x6c79>
  40c747:	nop    WORD PTR [rax+rax*1+0x0]
  40c750:	xor    eax,eax
  40c752:	jmp    40c6c7 <_start@@Base+0x6c97>
  40c757:	nop    WORD PTR [rax+rax*1+0x0]
  40c760:	xor    eax,eax
  40c762:	jmp    40c6d6 <_start@@Base+0x6ca6>
  40c767:	nop    WORD PTR [rax+rax*1+0x0]
  40c770:	xor    ecx,ecx
  40c772:	jmp    40c6e5 <_start@@Base+0x6cb5>
  40c777:	nop    WORD PTR [rax+rax*1+0x0]
  40c780:	xor    ecx,ecx
  40c782:	jmp    40c6f4 <_start@@Base+0x6cc4>
  40c787:	nop    WORD PTR [rax+rax*1+0x0]
  40c790:	xor    ecx,ecx
  40c792:	jmp    40c6b8 <_start@@Base+0x6c88>
  40c797:	nop    WORD PTR [rax+rax*1+0x0]
  40c7a0:	mov    rdx,rbx
  40c7a3:	mov    rdi,rbp
  40c7a6:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c7ab:	mov    r14,rax
  40c7ae:	mov    rax,rbx
  40c7b1:	sub    rax,r14
  40c7b4:	cmp    rax,0x1
  40c7b8:	jle    40c7c6 <_start@@Base+0x6d96>
  40c7ba:	cmp    BYTE PTR [r14],0x20
  40c7be:	jg     40c7d7 <_start@@Base+0x6da7>
  40c7c0:	je     40c9d0 <_start@@Base+0x6fa0>
  40c7c6:	mov    rsi,r14
  40c7c9:	mov    rdx,rbx
  40c7cc:	mov    rdi,rbp
  40c7cf:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40c7d4:	mov    r14,rax
  40c7d7:	cmp    rbx,r14
  40c7da:	je     40c9f0 <_start@@Base+0x6fc0>
  40c7e0:	cmp    BYTE PTR [r14],0x2c
  40c7e4:	je     40ca58 <_start@@Base+0x7028>
  40c7ea:	mov    DWORD PTR [rsp+0x30],0x0
  40c7f2:	cmp    BYTE PTR [r14],0x7d
  40c7f6:	je     40c990 <_start@@Base+0x6f60>
  40c7fc:	mov    ecx,0xa
  40c801:	mov    rdx,rbx
  40c804:	mov    rsi,r14
  40c807:	mov    rdi,rbp
  40c80a:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40c80f:	mov    r13,rax
  40c812:	mov    eax,DWORD PTR [rsp+0x30]
  40c816:	jmp    40c628 <_start@@Base+0x6bf8>
  40c81b:	movsx  rsi,BYTE PTR [r13+0x16]
  40c820:	shl    rsi,0x8
  40c824:	movsx  rdx,BYTE PTR [r13+0x15]
  40c829:	mov    rax,rdx
  40c82c:	shl    rax,0x10
  40c830:	or     rsi,rax
  40c833:	movsx  rdx,BYTE PTR [r13+0x14]
  40c838:	mov    rax,rdx
  40c83b:	shl    rax,0x18
  40c83f:	or     rax,rsi
  40c842:	movsx  rdx,BYTE PTR [r13+0x13]
  40c847:	mov    rsi,rdx
  40c84a:	shl    rsi,0x20
  40c84e:	or     rax,rsi
  40c851:	movsx  rdx,BYTE PTR [r13+0x12]
  40c856:	mov    rsi,rdx
  40c859:	shl    rsi,0x28
  40c85d:	or     rsi,rax
  40c860:	movsx  rdx,BYTE PTR [r13+0x11]
  40c865:	mov    rax,rdx
  40c868:	shl    rax,0x30
  40c86c:	or     rsi,rax
  40c86f:	movsx  rdx,BYTE PTR [r13+0x10]
  40c874:	mov    rax,rdx
  40c877:	shl    rax,0x38
  40c87b:	or     rax,rsi
  40c87e:	mov    r13,rax
  40c881:	movabs rdx,0x7273696e67320000
  40c88b:	xor    r13w,r13w
  40c88f:	cmp    r13,rdx
  40c892:	je     40cb60 <_start@@Base+0x7130>
  40c898:	and    rax,0xffffffffff000000
  40c89e:	movabs rdx,0x7273696e67000000
  40c8a8:	cmp    rax,rdx
  40c8ab:	jne    40c8b7 <_start@@Base+0x6e87>
  40c8ad:	cmp    rcx,0x5
  40c8b1:	jg     40d5c0 <_start@@Base+0x7b90>
  40c8b7:	movabs rax,0x7273696e67330000
  40c8c1:	cmp    r13,rax
  40c8c4:	jne    40c8d6 <_start@@Base+0x6ea6>
  40c8c6:	mov    rax,rbx
  40c8c9:	sub    rax,r15
  40c8cc:	cmp    rax,0x6
  40c8d0:	jg     40d360 <_start@@Base+0x7930>
  40c8d6:	mov    rdx,rbx
  40c8d9:	mov    rsi,r15
  40c8dc:	mov    rdi,rbp
  40c8df:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c8e4:	mov    r14,rax
  40c8e7:	jmp    40c7ae <_start@@Base+0x6d7e>
  40c8ec:	xor    esi,esi
  40c8ee:	jmp    40c824 <_start@@Base+0x6df4>
  40c8f3:	xor    esi,esi
  40c8f5:	jmp    40c833 <_start@@Base+0x6e03>
  40c8fa:	xor    eax,eax
  40c8fc:	jmp    40c842 <_start@@Base+0x6e12>
  40c901:	xor    eax,eax
  40c903:	jmp    40c851 <_start@@Base+0x6e21>
  40c908:	xor    esi,esi
  40c90a:	jmp    40c860 <_start@@Base+0x6e30>
  40c90f:	xor    esi,esi
  40c911:	jmp    40c86f <_start@@Base+0x6e3f>
  40c916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c920:	mov    rdx,rbx
  40c923:	mov    rsi,r13
  40c926:	mov    rdi,rbp
  40c929:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c92e:	mov    r14,rax
  40c931:	jmp    40c7ae <_start@@Base+0x6d7e>
  40c936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c940:	mov    rsi,r13
  40c943:	mov    ecx,0x5
  40c948:	mov    rdx,rbx
  40c94b:	mov    rdi,rbp
  40c94e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40c953:	mov    r13,rax
  40c956:	mov    rax,rbx
  40c959:	sub    rax,r13
  40c95c:	cmp    rax,0x7
  40c960:	ja     40c65d <_start@@Base+0x6c2d>
  40c966:	lea    rdx,[rip+0x1e79f]        # 42b10c <_IO_stdin_used@@Base+0x10c>
  40c96d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c971:	add    rax,rdx
  40c974:	jmp    rax
  40c976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c980:	movbe  rax,QWORD PTR [r13+0x8]
  40c986:	jmp    40c703 <_start@@Base+0x6cd3>
  40c98b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c990:	lea    r13,[r14+0x1]
  40c994:	mov    rax,rbx
  40c997:	sub    rax,r13
  40c99a:	cmp    rax,0x1
  40c99e:	jle    40c9ad <_start@@Base+0x6f7d>
  40c9a0:	cmp    BYTE PTR [r14+0x1],0x20
  40c9a5:	jg     40c9fb <_start@@Base+0x6fcb>
  40c9a7:	je     40d1f8 <_start@@Base+0x77c8>
  40c9ad:	mov    rsi,r13
  40c9b0:	mov    rdx,rbx
  40c9b3:	mov    rdi,rbp
  40c9b6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40c9bb:	mov    r13,rax
  40c9be:	mov    eax,DWORD PTR [rsp+0x30]
  40c9c2:	jmp    40c628 <_start@@Base+0x6bf8>
  40c9c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c9d0:	cmp    BYTE PTR [r14+0x1],0x20
  40c9d5:	jle    40c7c6 <_start@@Base+0x6d96>
  40c9db:	add    r14,0x1
  40c9df:	cmp    rbx,r14
  40c9e2:	jne    40c7e0 <_start@@Base+0x6db0>
  40c9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	mov    DWORD PTR [rsp+0x30],0x0
  40c9f8:	mov    r13,rbx
  40c9fb:	mov    esi,DWORD PTR [rbp+0x1c]
  40c9fe:	test   esi,esi
  40ca00:	je     40d212 <_start@@Base+0x77e2>
  40ca06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca10:	mov    ecx,0x21
  40ca15:	mov    rsi,r13
  40ca18:	mov    rdx,rbx
  40ca1b:	mov    rdi,rbp
  40ca1e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ca23:	mov    ecx,DWORD PTR [rsp+0x2c]
  40ca27:	mov    r13,rax
  40ca2a:	test   ecx,ecx
  40ca2c:	je     40d301 <_start@@Base+0x78d1>
  40ca32:	mov    rdi,QWORD PTR [rbp+0x0]
  40ca36:	xor    esi,esi
  40ca38:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40ca3d:	test   rax,rax
  40ca40:	je     40d301 <_start@@Base+0x78d1>
  40ca46:	mov    edx,DWORD PTR [rsp+0x2c]
  40ca4a:	mov    DWORD PTR [rax],edx
  40ca4c:	jmp    40c391 <_start@@Base+0x6961>
  40ca51:	nop    DWORD PTR [rax+0x0]
  40ca58:	lea    r13,[r14+0x1]
  40ca5c:	mov    rax,rbx
  40ca5f:	sub    rax,r13
  40ca62:	cmp    rax,0x1
  40ca66:	jle    40ca75 <_start@@Base+0x7045>
  40ca68:	cmp    BYTE PTR [r14+0x1],0x20
  40ca6d:	jg     40ca86 <_start@@Base+0x7056>
  40ca6f:	je     40d400 <_start@@Base+0x79d0>
  40ca75:	mov    rsi,r13
  40ca78:	mov    rdx,rbx
  40ca7b:	mov    rdi,rbp
  40ca7e:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ca83:	mov    r13,rax
  40ca86:	cmp    rbx,r13
  40ca89:	je     40d418 <_start@@Base+0x79e8>
  40ca8f:	cmp    BYTE PTR [r13+0x0],0x7d
  40ca94:	je     40dead <_start@@Base+0x847d>
  40ca9a:	mov    DWORD PTR [rsp+0x30],0x1
  40caa2:	jmp    40c635 <_start@@Base+0x6c05>
  40caa7:	nop    WORD PTR [rax+rax*1+0x0]
  40cab0:	movbe  rax,QWORD PTR [r13+0x10]
  40cab6:	jmp    40c87e <_start@@Base+0x6e4e>
  40cabb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cac0:	movsx  rcx,BYTE PTR [r13+0x6]
  40cac5:	shl    rcx,0x8
  40cac9:	movsx  rdx,BYTE PTR [r13+0x5]
  40cace:	mov    rax,rdx
  40cad1:	shl    rax,0x10
  40cad5:	or     rcx,rax
  40cad8:	movsx  rdx,BYTE PTR [r13+0x4]
  40cadd:	mov    rax,rdx
  40cae0:	shl    rax,0x18
  40cae4:	or     rax,rcx
  40cae7:	movsx  rdx,BYTE PTR [r13+0x3]
  40caec:	mov    rcx,rdx
  40caef:	shl    rcx,0x20
  40caf3:	or     rax,rcx
  40caf6:	movsx  rdx,BYTE PTR [r13+0x2]
  40cafb:	mov    rcx,rdx
  40cafe:	shl    rcx,0x28
  40cb02:	or     rcx,rax
  40cb05:	movsx  rdx,BYTE PTR [r13+0x1]
  40cb0a:	mov    rax,rdx
  40cb0d:	shl    rax,0x30
  40cb11:	or     rcx,rax
  40cb14:	movsx  rdx,BYTE PTR [r13+0x0]
  40cb19:	mov    rax,rdx
  40cb1c:	shl    rax,0x38
  40cb20:	or     rax,rcx
  40cb23:	jmp    40c663 <_start@@Base+0x6c33>
  40cb28:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb30:	xor    ecx,ecx
  40cb32:	jmp    40cac9 <_start@@Base+0x7099>
  40cb34:	nop    DWORD PTR [rax+0x0]
  40cb38:	xor    ecx,ecx
  40cb3a:	jmp    40cad8 <_start@@Base+0x70a8>
  40cb3c:	nop    DWORD PTR [rax+0x0]
  40cb40:	xor    eax,eax
  40cb42:	jmp    40cae7 <_start@@Base+0x70b7>
  40cb44:	nop    DWORD PTR [rax+0x0]
  40cb48:	xor    eax,eax
  40cb4a:	jmp    40caf6 <_start@@Base+0x70c6>
  40cb4c:	nop    DWORD PTR [rax+0x0]
  40cb50:	xor    ecx,ecx
  40cb52:	jmp    40cb05 <_start@@Base+0x70d5>
  40cb54:	nop    DWORD PTR [rax+0x0]
  40cb58:	xor    ecx,ecx
  40cb5a:	jmp    40cb14 <_start@@Base+0x70e4>
  40cb5c:	nop    DWORD PTR [rax+0x0]
  40cb60:	cmp    rcx,0x6
  40cb64:	jle    40c8d6 <_start@@Base+0x6ea6>
  40cb6a:	mov    ecx,0x6
  40cb6f:	mov    rdx,rbx
  40cb72:	mov    rsi,r15
  40cb75:	mov    rdi,rbp
  40cb78:	call   409ba0 <_start@@Base+0x4170>
  40cb7d:	cmp    r15,rax
  40cb80:	mov    r14,rax
  40cb83:	je     40c8d6 <_start@@Base+0x6ea6>
  40cb89:	mov    rdi,QWORD PTR [rbp+0x0]
  40cb8d:	mov    esi,0x2
  40cb92:	call   4168e0 <flatcc_builder_start_table@@Base>
  40cb97:	test   eax,eax
  40cb99:	jne    40ce90 <_start@@Base+0x7460>
  40cb9f:	lea    rcx,[rsp+0x38]
  40cba4:	mov    rsi,r14
  40cba7:	mov    rdi,rbp
  40cbaa:	mov    rdx,rbx
  40cbad:	call   408740 <_start@@Base+0x2d10>
  40cbb2:	lea    rdi,[rsp+0x3c]
  40cbb7:	mov    r14,rax
  40cbba:	mov    eax,DWORD PTR [rsp+0x38]
  40cbbe:	mov    QWORD PTR [rsp+0x8],rdi
  40cbc3:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbc8:	test   eax,eax
  40cbca:	je     40ce7b <_start@@Base+0x744b>
  40cbd0:	lea    r13,[rip+0x1e575]        # 42b14c <_IO_stdin_used@@Base+0x14c>
  40cbd7:	cmp    rbx,r14
  40cbda:	je     40cdb0 <_start@@Base+0x7380>
  40cbe0:	cmp    BYTE PTR [r14],0x22
  40cbe4:	jne    40cdd0 <_start@@Base+0x73a0>
  40cbea:	add    r14,0x1
  40cbee:	mov    rax,rbx
  40cbf1:	sub    rax,r14
  40cbf4:	cmp    rax,0x7
  40cbf8:	jbe    40cdf6 <_start@@Base+0x73c6>
  40cbfe:	movbe  rax,QWORD PTR [r14]
  40cc03:	movabs rdx,0x616161615f626262
  40cc0d:	cmp    rax,rdx
  40cc10:	jne    40cdb0 <_start@@Base+0x7380>
  40cc16:	lea    r15,[r14+0x8]
  40cc1a:	mov    rdx,rbx
  40cc1d:	sub    rdx,r15
  40cc20:	cmp    rdx,0x7
  40cc24:	ja     40ce00 <_start@@Base+0x73d0>
  40cc2a:	lea    rcx,[rip+0x1e4fb]        # 42b12c <_IO_stdin_used@@Base+0x12c>
  40cc31:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40cc35:	add    rax,rcx
  40cc38:	jmp    rax
  40cc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc40:	movsx  rcx,BYTE PTR [r14+0xe]
  40cc45:	shl    rcx,0x8
  40cc49:	movsx  rsi,BYTE PTR [r14+0xd]
  40cc4e:	mov    rax,rsi
  40cc51:	shl    rax,0x10
  40cc55:	or     rcx,rax
  40cc58:	movsx  rsi,BYTE PTR [r14+0xc]
  40cc5d:	mov    rax,rsi
  40cc60:	shl    rax,0x18
  40cc64:	or     rax,rcx
  40cc67:	movsx  rsi,BYTE PTR [r14+0xb]
  40cc6c:	shl    rsi,0x20
  40cc70:	or     rax,rsi
  40cc73:	movsx  rsi,BYTE PTR [r14+0xa]
  40cc78:	shl    rsi,0x28
  40cc7c:	mov    rcx,rsi
  40cc7f:	or     rcx,rax
  40cc82:	movsx  rsi,BYTE PTR [r14+0x9]
  40cc87:	mov    rax,rsi
  40cc8a:	shl    rax,0x30
  40cc8e:	or     rcx,rax
  40cc91:	movsx  rax,BYTE PTR [r14+0x8]
  40cc96:	shl    rax,0x38
  40cc9a:	or     rax,rcx
  40cc9d:	mov    rsi,rax
  40cca0:	movabs rcx,0x625f737465707300
  40ccaa:	xor    sil,sil
  40ccad:	cmp    rsi,rcx
  40ccb0:	je     40ceb0 <_start@@Base+0x7480>
  40ccb6:	movabs rcx,0x625f73746172745f
  40ccc0:	cmp    rax,rcx
  40ccc3:	jne    40cccf <_start@@Base+0x729f>
  40ccc5:	cmp    rdx,0x8
  40ccc9:	jg     40d0c0 <_start@@Base+0x7690>
  40cccf:	mov    rsi,r15
  40ccd2:	mov    rdx,rbx
  40ccd5:	mov    rdi,rbp
  40ccd8:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40ccdd:	mov    r15,rax
  40cce0:	mov    rax,rbx
  40cce3:	sub    rax,r15
  40cce6:	cmp    rax,0x1
  40ccea:	jle    40ccf8 <_start@@Base+0x72c8>
  40ccec:	cmp    BYTE PTR [r15],0x20
  40ccf0:	jg     40cd09 <_start@@Base+0x72d9>
  40ccf2:	je     40ce50 <_start@@Base+0x7420>
  40ccf8:	mov    rsi,r15
  40ccfb:	mov    rdx,rbx
  40ccfe:	mov    rdi,rbp
  40cd01:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40cd06:	mov    r15,rax
  40cd09:	cmp    rbx,r15
  40cd0c:	je     40ce70 <_start@@Base+0x7440>
  40cd12:	cmp    BYTE PTR [r15],0x2c
  40cd16:	je     40cf90 <_start@@Base+0x7560>
  40cd1c:	mov    DWORD PTR [rsp+0x38],0x0
  40cd24:	cmp    BYTE PTR [r15],0x7d
  40cd28:	je     40ce10 <_start@@Base+0x73e0>
  40cd2e:	mov    ecx,0xa
  40cd33:	mov    rdx,rbx
  40cd36:	mov    rsi,r15
  40cd39:	mov    rdi,rbp
  40cd3c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40cd41:	mov    r14,rax
  40cd44:	mov    eax,DWORD PTR [rsp+0x38]
  40cd48:	jmp    40cbc8 <_start@@Base+0x7198>
  40cd4d:	nop    DWORD PTR [rax]
  40cd50:	xor    ecx,ecx
  40cd52:	jmp    40cc49 <_start@@Base+0x7219>
  40cd57:	nop    WORD PTR [rax+rax*1+0x0]
  40cd60:	xor    eax,eax
  40cd62:	jmp    40cc67 <_start@@Base+0x7237>
  40cd67:	nop    WORD PTR [rax+rax*1+0x0]
  40cd70:	xor    eax,eax
  40cd72:	jmp    40cc73 <_start@@Base+0x7243>
  40cd77:	nop    WORD PTR [rax+rax*1+0x0]
  40cd80:	xor    ecx,ecx
  40cd82:	jmp    40cc82 <_start@@Base+0x7252>
  40cd87:	nop    WORD PTR [rax+rax*1+0x0]
  40cd90:	xor    ecx,ecx
  40cd92:	jmp    40cc91 <_start@@Base+0x7261>
  40cd97:	nop    WORD PTR [rax+rax*1+0x0]
  40cda0:	xor    ecx,ecx
  40cda2:	jmp    40cc58 <_start@@Base+0x7228>
  40cda7:	nop    WORD PTR [rax+rax*1+0x0]
  40cdb0:	mov    rdx,rbx
  40cdb3:	mov    rsi,r14
  40cdb6:	mov    rdi,rbp
  40cdb9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40cdbe:	mov    r15,rax
  40cdc1:	jmp    40cce0 <_start@@Base+0x72b0>
  40cdc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cdd0:	mov    rsi,r14
  40cdd3:	mov    ecx,0x5
  40cdd8:	mov    rdx,rbx
  40cddb:	mov    rdi,rbp
  40cdde:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40cde3:	mov    r14,rax
  40cde6:	mov    rax,rbx
  40cde9:	sub    rax,r14
  40cdec:	cmp    rax,0x7
  40cdf0:	ja     40cbfe <_start@@Base+0x71ce>
  40cdf6:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40cdfb:	add    rax,r13
  40cdfe:	jmp    rax
  40ce00:	movbe  rax,QWORD PTR [r14+0x8]
  40ce06:	jmp    40cc9d <_start@@Base+0x726d>
  40ce0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce10:	lea    r14,[r15+0x1]
  40ce14:	mov    rax,rbx
  40ce17:	sub    rax,r14
  40ce1a:	cmp    rax,0x1
  40ce1e:	jle    40ce2d <_start@@Base+0x73fd>
  40ce20:	cmp    BYTE PTR [r15+0x1],0x20
  40ce25:	jg     40ce7b <_start@@Base+0x744b>
  40ce27:	je     40d260 <_start@@Base+0x7830>
  40ce2d:	mov    rsi,r14
  40ce30:	mov    rdx,rbx
  40ce33:	mov    rdi,rbp
  40ce36:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ce3b:	mov    r14,rax
  40ce3e:	mov    eax,DWORD PTR [rsp+0x38]
  40ce42:	jmp    40cbc8 <_start@@Base+0x7198>
  40ce47:	nop    WORD PTR [rax+rax*1+0x0]
  40ce50:	cmp    BYTE PTR [r15+0x1],0x20
  40ce55:	jle    40ccf8 <_start@@Base+0x72c8>
  40ce5b:	add    r15,0x1
  40ce5f:	cmp    rbx,r15
  40ce62:	jne    40cd12 <_start@@Base+0x72e2>
  40ce68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce70:	mov    DWORD PTR [rsp+0x38],0x0
  40ce78:	mov    r14,rbx
  40ce7b:	mov    r8d,DWORD PTR [rbp+0x1c]
  40ce7f:	test   r8d,r8d
  40ce82:	je     40d27c <_start@@Base+0x784c>
  40ce88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce90:	mov    ecx,0x21
  40ce95:	mov    rdx,rbx
  40ce98:	mov    rsi,r14
  40ce9b:	mov    rdi,rbp
  40ce9e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40cea3:	mov    r13,rax
  40cea6:	jmp    40ca10 <_start@@Base+0x6fe0>
  40ceab:	nop    DWORD PTR [rax+rax*1+0x0]
  40ceb0:	cmp    rdx,0x7
  40ceb4:	jle    40cccf <_start@@Base+0x729f>
  40ceba:	mov    ecx,0x7
  40cebf:	mov    rdx,rbx
  40cec2:	mov    rsi,r15
  40cec5:	mov    rdi,rbp
  40cec8:	call   409ba0 <_start@@Base+0x4170>
  40cecd:	cmp    r15,rax
  40ced0:	mov    r14,rax
  40ced3:	je     40cccf <_start@@Base+0x729f>
  40ced9:	cmp    rbx,rax
  40cedc:	mov    QWORD PTR [rsp+0x48],0x0
  40cee5:	mov    QWORD PTR [rsp+0x50],0x0
  40ceee:	mov    DWORD PTR [rsp+0x3c],0x0
  40cef6:	je     40dfa0 <_start@@Base+0x8570>
  40cefc:	mov    rcx,QWORD PTR [rsp+0x8]
  40cf01:	mov    r8,r12
  40cf04:	mov    rdx,rbx
  40cf07:	mov    rsi,rax
  40cf0a:	mov    rdi,rbp
  40cf0d:	call   41c710 <flatcc_json_parser_integer@@Base>
  40cf12:	cmp    r14,rax
  40cf15:	mov    r15,rax
  40cf18:	je     40dfa0 <_start@@Base+0x8570>
  40cf1e:	mov    r10d,DWORD PTR [rsp+0x3c]
  40cf23:	mov    rax,QWORD PTR [rsp+0x50]
  40cf28:	test   r10d,r10d
  40cf2b:	je     40d1e0 <_start@@Base+0x77b0>
  40cf31:	movabs rdx,0x8000000000000000
  40cf3b:	mov    ecx,0x8
  40cf40:	cmp    rax,rdx
  40cf43:	ja     40de75 <_start@@Base+0x8445>
  40cf49:	neg    rax
  40cf4c:	mov    QWORD PTR [rsp+0x48],rax
  40cf51:	test   rax,rax
  40cf54:	jne    40cf60 <_start@@Base+0x7530>
  40cf56:	test   BYTE PTR [rbp+0x10],0x2
  40cf5a:	je     40cce0 <_start@@Base+0x72b0>
  40cf60:	mov    rdi,QWORD PTR [rbp+0x0]
  40cf64:	xor    esi,esi
  40cf66:	mov    ecx,0x8
  40cf6b:	mov    edx,0x8
  40cf70:	call   418180 <flatcc_builder_table_add@@Base>
  40cf75:	test   rax,rax
  40cf78:	je     40d5b0 <_start@@Base+0x7b80>
  40cf7e:	mov    rdx,QWORD PTR [rsp+0x48]
  40cf83:	mov    QWORD PTR [rax],rdx
  40cf86:	jmp    40cce0 <_start@@Base+0x72b0>
  40cf8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf90:	lea    r14,[r15+0x1]
  40cf94:	mov    rax,rbx
  40cf97:	sub    rax,r14
  40cf9a:	cmp    rax,0x1
  40cf9e:	jle    40cfad <_start@@Base+0x757d>
  40cfa0:	cmp    BYTE PTR [r15+0x1],0x20
  40cfa5:	jg     40cfbe <_start@@Base+0x758e>
  40cfa7:	je     40d440 <_start@@Base+0x7a10>
  40cfad:	mov    rsi,r14
  40cfb0:	mov    rdx,rbx
  40cfb3:	mov    rdi,rbp
  40cfb6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40cfbb:	mov    r14,rax
  40cfbe:	cmp    rbx,r14
  40cfc1:	je     40d458 <_start@@Base+0x7a28>
  40cfc7:	cmp    BYTE PTR [r14],0x7d
  40cfcb:	je     40deed <_start@@Base+0x84bd>
  40cfd1:	mov    DWORD PTR [rsp+0x38],0x1
  40cfd9:	jmp    40cbd7 <_start@@Base+0x71a7>
  40cfde:	movsx  rcx,BYTE PTR [r14+0x6]
  40cfe3:	shl    rcx,0x8
  40cfe7:	movsx  rdx,BYTE PTR [r14+0x5]
  40cfec:	mov    rax,rdx
  40cfef:	shl    rax,0x10
  40cff3:	or     rcx,rax
  40cff6:	movsx  rdx,BYTE PTR [r14+0x4]
  40cffb:	mov    rax,rdx
  40cffe:	shl    rax,0x18
  40d002:	or     rax,rcx
  40d005:	movsx  rdx,BYTE PTR [r14+0x3]
  40d00a:	mov    rcx,rdx
  40d00d:	shl    rcx,0x20
  40d011:	or     rax,rcx
  40d014:	movsx  rdx,BYTE PTR [r14+0x2]
  40d019:	mov    rcx,rdx
  40d01c:	shl    rcx,0x28
  40d020:	or     rcx,rax
  40d023:	movsx  rdx,BYTE PTR [r14+0x1]
  40d028:	mov    rax,rdx
  40d02b:	shl    rax,0x30
  40d02f:	or     rcx,rax
  40d032:	movsx  rdx,BYTE PTR [r14]
  40d036:	mov    rax,rdx
  40d039:	shl    rax,0x38
  40d03d:	or     rax,rcx
  40d040:	jmp    40cc03 <_start@@Base+0x71d3>
  40d045:	xor    ecx,ecx
  40d047:	jmp    40cfe7 <_start@@Base+0x75b7>
  40d049:	xor    ecx,ecx
  40d04b:	jmp    40cff6 <_start@@Base+0x75c6>
  40d04d:	xor    eax,eax
  40d04f:	jmp    40d005 <_start@@Base+0x75d5>
  40d051:	xor    eax,eax
  40d053:	jmp    40d014 <_start@@Base+0x75e4>
  40d055:	xor    ecx,ecx
  40d057:	jmp    40d023 <_start@@Base+0x75f3>
  40d059:	xor    ecx,ecx
  40d05b:	jmp    40d032 <_start@@Base+0x7602>
  40d05d:	nop    DWORD PTR [rax]
  40d060:	xor    r15d,r15d
  40d063:	xor    r13d,r13d
  40d066:	jmp    40c360 <_start@@Base+0x6930>
  40d06b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d070:	cmp    BYTE PTR [r13+0x1],0x20
  40d075:	jle    40c3aa <_start@@Base+0x697a>
  40d07b:	add    r13,0x1
  40d07f:	cmp    rbx,r13
  40d082:	jne    40c3c4 <_start@@Base+0x6994>
  40d088:	nop    DWORD PTR [rax+rax*1+0x0]
  40d090:	mov    eax,DWORD PTR [rbp+0x1c]
  40d093:	mov    DWORD PTR [rsp+0x28],0x0
  40d09b:	mov    r12,rbx
  40d09e:	test   eax,eax
  40d0a0:	jne    40c418 <_start@@Base+0x69e8>
  40d0a6:	jmp    40e090 <_start@@Base+0x8660>
  40d0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0b0:	mov    rsi,rbx
  40d0b3:	mov    rdi,r13
  40d0b6:	call   405b40 <_start@@Base+0x110>
  40d0bb:	jmp    40c4ac <_start@@Base+0x6a7c>
  40d0c0:	mov    ecx,0x8
  40d0c5:	mov    rdx,rbx
  40d0c8:	mov    rsi,r15
  40d0cb:	mov    rdi,rbp
  40d0ce:	call   409ba0 <_start@@Base+0x4170>
  40d0d3:	cmp    r15,rax
  40d0d6:	mov    r14,rax
  40d0d9:	je     40cccf <_start@@Base+0x729f>
  40d0df:	cmp    rbx,rax
  40d0e2:	mov    DWORD PTR [rsp+0x3c],0x0
  40d0ea:	mov    QWORD PTR [rsp+0x50],0x0
  40d0f3:	mov    DWORD PTR [rsp+0x48],0x0
  40d0fb:	je     40df50 <_start@@Base+0x8520>
  40d101:	mov    rcx,QWORD PTR [rsp]
  40d105:	mov    r8,r12
  40d108:	mov    rdx,rbx
  40d10b:	mov    rsi,rax
  40d10e:	mov    rdi,rbp
  40d111:	call   41c710 <flatcc_json_parser_integer@@Base>
  40d116:	cmp    r14,rax
  40d119:	mov    r15,rax
  40d11c:	je     40df50 <_start@@Base+0x8520>
  40d122:	mov    r9d,DWORD PTR [rsp+0x48]
  40d127:	mov    ecx,0x8
  40d12c:	test   r9d,r9d
  40d12f:	jne    40d235 <_start@@Base+0x7805>
  40d135:	mov    rax,QWORD PTR [rsp+0x50]
  40d13a:	mov    edx,0xffffffff
  40d13f:	cmp    rax,rdx
  40d142:	ja     40d230 <_start@@Base+0x7800>
  40d148:	mov    edx,eax
  40d14a:	mov    DWORD PTR [rsp+0x3c],eax
  40d14e:	test   edx,edx
  40d150:	jne    40d15c <_start@@Base+0x772c>
  40d152:	test   BYTE PTR [rbp+0x10],0x2
  40d156:	je     40cce0 <_start@@Base+0x72b0>
  40d15c:	mov    rdi,QWORD PTR [rbp+0x0]
  40d160:	mov    ecx,0x4
  40d165:	mov    edx,0x4
  40d16a:	mov    esi,0x1
  40d16f:	call   418180 <flatcc_builder_table_add@@Base>
  40d174:	test   rax,rax
  40d177:	je     40d5b0 <_start@@Base+0x7b80>
  40d17d:	mov    edx,DWORD PTR [rsp+0x3c]
  40d181:	mov    DWORD PTR [rax],edx
  40d183:	jmp    40cce0 <_start@@Base+0x72b0>
  40d188:	nop    DWORD PTR [rax+rax*1+0x0]
  40d190:	lea    r12,[r13+0x1]
  40d194:	mov    rax,rbx
  40d197:	sub    rax,r12
  40d19a:	cmp    rax,0x1
  40d19e:	jle    40d1ad <_start@@Base+0x777d>
  40d1a0:	cmp    BYTE PTR [r13+0x1],0x20
  40d1a5:	jg     40d1be <_start@@Base+0x778e>
  40d1a7:	je     40e0c8 <_start@@Base+0x8698>
  40d1ad:	mov    rsi,r12
  40d1b0:	mov    rdx,rbx
  40d1b3:	mov    rdi,rbp
  40d1b6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40d1bb:	mov    r12,rax
  40d1be:	cmp    rbx,r12
  40d1c1:	je     40ea80 <_start@@Base+0x9050>
  40d1c7:	cmp    BYTE PTR [r12],0x7d
  40d1cc:	je     40e973 <_start@@Base+0x8f43>
  40d1d2:	mov    DWORD PTR [rsp+0x28],0x1
  40d1da:	jmp    40c2e8 <_start@@Base+0x68b8>
  40d1df:	nop
  40d1e0:	test   rax,rax
  40d1e3:	js     40de70 <_start@@Base+0x8440>
  40d1e9:	mov    QWORD PTR [rsp+0x48],rax
  40d1ee:	jmp    40cf51 <_start@@Base+0x7521>
  40d1f3:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1f8:	cmp    BYTE PTR [r14+0x2],0x20
  40d1fd:	jle    40c9ad <_start@@Base+0x6f7d>
  40d203:	mov    esi,DWORD PTR [rbp+0x1c]
  40d206:	lea    r13,[r14+0x2]
  40d20a:	test   esi,esi
  40d20c:	jne    40ca10 <_start@@Base+0x6fe0>
  40d212:	mov    rdi,QWORD PTR [rbp+0x0]
  40d216:	call   4172a0 <flatcc_builder_end_table@@Base>
  40d21b:	test   eax,eax
  40d21d:	mov    DWORD PTR [rsp+0x2c],eax
  40d221:	je     40ca10 <_start@@Base+0x6fe0>
  40d227:	jmp    40ca32 <_start@@Base+0x7002>
  40d22c:	nop    DWORD PTR [rax+0x0]
  40d230:	mov    ecx,0x7
  40d235:	mov    rsi,r15
  40d238:	mov    rdx,rbx
  40d23b:	mov    rdi,rbp
  40d23e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d243:	cmp    r14,rax
  40d246:	mov    r15,rax
  40d249:	je     40df50 <_start@@Base+0x8520>
  40d24f:	mov    edx,DWORD PTR [rsp+0x3c]
  40d253:	jmp    40d14e <_start@@Base+0x771e>
  40d258:	nop    DWORD PTR [rax+rax*1+0x0]
  40d260:	cmp    BYTE PTR [r15+0x2],0x20
  40d265:	jle    40ce2d <_start@@Base+0x73fd>
  40d26b:	mov    r8d,DWORD PTR [rbp+0x1c]
  40d26f:	lea    r14,[r15+0x2]
  40d273:	test   r8d,r8d
  40d276:	jne    40ce90 <_start@@Base+0x7460>
  40d27c:	mov    rdi,QWORD PTR [rbp+0x0]
  40d280:	call   4172a0 <flatcc_builder_end_table@@Base>
  40d285:	test   eax,eax
  40d287:	mov    r13d,eax
  40d28a:	je     40ce90 <_start@@Base+0x7460>
  40d290:	mov    rdi,QWORD PTR [rbp+0x0]
  40d294:	mov    esi,0x1
  40d299:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40d29e:	test   rax,rax
  40d2a1:	jne    40d3f6 <_start@@Base+0x79c6>
  40d2a7:	mov    r13,r14
  40d2aa:	jmp    40ca10 <_start@@Base+0x6fe0>
  40d2af:	nop
  40d2b0:	mov    rsi,r12
  40d2b3:	mov    ecx,0x5
  40d2b8:	mov    rdx,rbx
  40d2bb:	mov    rdi,rbp
  40d2be:	call   409ba0 <_start@@Base+0x4170>
  40d2c3:	cmp    rax,r12
  40d2c6:	mov    rsi,rax
  40d2c9:	je     40c380 <_start@@Base+0x6950>
  40d2cf:	lea    rcx,[rsp+0x2c]
  40d2d4:	mov    rdx,rbx
  40d2d7:	mov    rdi,rbp
  40d2da:	call   40a5a0 <_start@@Base+0x4b70>
  40d2df:	mov    edx,DWORD PTR [rsp+0x2c]
  40d2e3:	mov    r13,rax
  40d2e6:	test   edx,edx
  40d2e8:	je     40d301 <_start@@Base+0x78d1>
  40d2ea:	mov    rdi,QWORD PTR [rbp+0x0]
  40d2ee:	mov    esi,0x1
  40d2f3:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40d2f8:	test   rax,rax
  40d2fb:	jne    40ca46 <_start@@Base+0x7016>
  40d301:	mov    r12,r13
  40d304:	jmp    40c418 <_start@@Base+0x69e8>
  40d309:	nop    DWORD PTR [rax+0x0]
  40d310:	mov    rsi,r12
  40d313:	mov    ecx,0x7
  40d318:	mov    rdx,rbx
  40d31b:	mov    rdi,rbp
  40d31e:	call   409ba0 <_start@@Base+0x4170>
  40d323:	cmp    rax,r12
  40d326:	mov    rsi,rax
  40d329:	je     40c347 <_start@@Base+0x6917>
  40d32f:	lea    rax,[rip+0x624a]        # 413580 <_start@@Base+0xdb50>
  40d336:	sub    rsp,0x8
  40d33a:	mov    r8d,0x3
  40d340:	xor    ecx,ecx
  40d342:	mov    rdx,rbx
  40d345:	mov    rdi,rbp
  40d348:	push   rax
  40d349:	mov    r9,QWORD PTR [rsp+0x50]
  40d34e:	call   41de50 <flatcc_json_parser_union_vector@@Base>
  40d353:	pop    r11
  40d355:	mov    r13,rax
  40d358:	pop    r12
  40d35a:	jmp    40c391 <_start@@Base+0x6961>
  40d35f:	nop
  40d360:	mov    ecx,0x6
  40d365:	mov    rdx,rbx
  40d368:	mov    rsi,r15
  40d36b:	mov    rdi,rbp
  40d36e:	call   409ba0 <_start@@Base+0x4170>
  40d373:	cmp    r15,rax
  40d376:	mov    r14,rax
  40d379:	je     40c8d6 <_start@@Base+0x6ea6>
  40d37f:	mov    rdi,QWORD PTR [rbp+0x0]
  40d383:	mov    esi,0x2
  40d388:	call   4168e0 <flatcc_builder_start_table@@Base>
  40d38d:	test   eax,eax
  40d38f:	jne    40ce90 <_start@@Base+0x7460>
  40d395:	cmp    rbx,r14
  40d398:	je     40d3a4 <_start@@Base+0x7974>
  40d39a:	cmp    BYTE PTR [r14],0x7b
  40d39e:	je     40e0dc <_start@@Base+0x86ac>
  40d3a4:	mov    rsi,r14
  40d3a7:	mov    ecx,0x15
  40d3ac:	mov    rdx,rbx
  40d3af:	mov    rdi,rbp
  40d3b2:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d3b7:	mov    r14,rax
  40d3ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d3c0:	mov    edi,DWORD PTR [rbp+0x1c]
  40d3c3:	test   edi,edi
  40d3c5:	jne    40ce90 <_start@@Base+0x7460>
  40d3cb:	mov    rdi,QWORD PTR [rbp+0x0]
  40d3cf:	call   4172a0 <flatcc_builder_end_table@@Base>
  40d3d4:	test   eax,eax
  40d3d6:	mov    r13d,eax
  40d3d9:	je     40ce90 <_start@@Base+0x7460>
  40d3df:	mov    rdi,QWORD PTR [rbp+0x0]
  40d3e3:	mov    esi,0x2
  40d3e8:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40d3ed:	test   rax,rax
  40d3f0:	je     40d2a7 <_start@@Base+0x7877>
  40d3f6:	mov    DWORD PTR [rax],r13d
  40d3f9:	jmp    40c7ae <_start@@Base+0x6d7e>
  40d3fe:	xchg   ax,ax
  40d400:	cmp    BYTE PTR [r14+0x2],0x20
  40d405:	jle    40ca75 <_start@@Base+0x7045>
  40d40b:	lea    r13,[r14+0x2]
  40d40f:	cmp    rbx,r13
  40d412:	jne    40ca8f <_start@@Base+0x705f>
  40d418:	mov    ecx,0xa
  40d41d:	mov    rdx,rbx
  40d420:	mov    rsi,rbx
  40d423:	mov    rdi,rbp
  40d426:	mov    DWORD PTR [rsp+0x30],0x0
  40d42e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d433:	mov    r13,rax
  40d436:	mov    eax,DWORD PTR [rsp+0x30]
  40d43a:	jmp    40c628 <_start@@Base+0x6bf8>
  40d43f:	nop
  40d440:	cmp    BYTE PTR [r15+0x2],0x20
  40d445:	jle    40cfad <_start@@Base+0x757d>
  40d44b:	lea    r14,[r15+0x2]
  40d44f:	cmp    rbx,r14
  40d452:	jne    40cfc7 <_start@@Base+0x7597>
  40d458:	mov    ecx,0xa
  40d45d:	mov    rdx,rbx
  40d460:	mov    rsi,rbx
  40d463:	mov    rdi,rbp
  40d466:	mov    DWORD PTR [rsp+0x38],0x0
  40d46e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d473:	mov    r14,rax
  40d476:	mov    eax,DWORD PTR [rsp+0x38]
  40d47a:	jmp    40cbc8 <_start@@Base+0x7198>
  40d47f:	nop
  40d480:	mov    rsi,r13
  40d483:	mov    ecx,0x4
  40d488:	mov    rdx,rbx
  40d48b:	mov    rdi,rbp
  40d48e:	call   409ba0 <_start@@Base+0x4170>
  40d493:	cmp    r13,rax
  40d496:	mov    rsi,rax
  40d499:	je     40c4d2 <_start@@Base+0x6aa2>
  40d49f:	lea    rax,[rip+0xffffffffffff87aa]        # 405c50 <_start@@Base+0x220>
  40d4a6:	sub    rsp,0x8
  40d4aa:	mov    r8d,0x3
  40d4b0:	xor    ecx,ecx
  40d4b2:	mov    rdx,rbx
  40d4b5:	mov    rdi,rbp
  40d4b8:	push   rax
  40d4b9:	lea    rax,[rip+0x60c0]        # 413580 <_start@@Base+0xdb50>
  40d4c0:	push   rax
  40d4c1:	lea    rax,[rip+0x2bfb8]        # 439480 <__data_start@@Base+0x3c0>
  40d4c8:	push   rax
  40d4c9:	mov    r9,QWORD PTR [rsp+0x60]
  40d4ce:	call   41df30 <flatcc_json_parser_union_type_vector@@Base>
  40d4d3:	add    rsp,0x20
  40d4d7:	mov    r13,rax
  40d4da:	jmp    40c391 <_start@@Base+0x6961>
  40d4df:	nop
  40d4e0:	mov    ecx,0x8
  40d4e5:	mov    rdx,rbx
  40d4e8:	mov    rsi,r14
  40d4eb:	mov    rdi,rbp
  40d4ee:	call   409ba0 <_start@@Base+0x4170>
  40d4f3:	cmp    rax,r14
  40d4f6:	mov    r10,rax
  40d4f9:	je     40d8ba <_start@@Base+0x7e8a>
  40d4ff:	cmp    rbx,rax
  40d502:	mov    QWORD PTR [rsp+0x48],0x0
  40d50b:	mov    QWORD PTR [rsp+0x50],0x0
  40d514:	mov    DWORD PTR [rsp+0x3c],0x0
  40d51c:	je     40e9a0 <_start@@Base+0x8f70>
  40d522:	mov    rcx,QWORD PTR [rsp+0x8]
  40d527:	mov    r8,r12
  40d52a:	mov    rdx,rbx
  40d52d:	mov    rsi,rax
  40d530:	mov    rdi,rbp
  40d533:	mov    QWORD PTR [rsp+0x10],rax
  40d538:	call   41c710 <flatcc_json_parser_integer@@Base>
  40d53d:	mov    r10,QWORD PTR [rsp+0x10]
  40d542:	mov    r15,rax
  40d545:	cmp    r10,rax
  40d548:	je     40e9a0 <_start@@Base+0x8f70>
  40d54e:	mov    edx,DWORD PTR [rsp+0x3c]
  40d552:	mov    rax,QWORD PTR [rsp+0x50]
  40d557:	test   edx,edx
  40d559:	je     40de00 <_start@@Base+0x83d0>
  40d55f:	movabs rdx,0x8000000000000000
  40d569:	mov    ecx,0x8
  40d56e:	cmp    rax,rdx
  40d571:	ja     40e8a9 <_start@@Base+0x8e79>
  40d577:	neg    rax
  40d57a:	mov    QWORD PTR [rsp+0x48],rax
  40d57f:	test   rax,rax
  40d582:	jne    40d58e <_start@@Base+0x7b5e>
  40d584:	test   BYTE PTR [rbp+0x10],0x2
  40d588:	je     40d6e1 <_start@@Base+0x7cb1>
  40d58e:	mov    rdi,QWORD PTR [rbp+0x0]
  40d592:	mov    ecx,0x8
  40d597:	mov    edx,0x8
  40d59c:	mov    esi,0x5
  40d5a1:	call   418180 <flatcc_builder_table_add@@Base>
  40d5a6:	test   rax,rax
  40d5a9:	jne    40ddbd <_start@@Base+0x838d>
  40d5af:	nop
  40d5b0:	mov    r14,r15
  40d5b3:	jmp    40ce90 <_start@@Base+0x7460>
  40d5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5c0:	mov    ecx,0x5
  40d5c5:	mov    rdx,rbx
  40d5c8:	mov    rsi,r15
  40d5cb:	mov    rdi,rbp
  40d5ce:	call   409ba0 <_start@@Base+0x4170>
  40d5d3:	cmp    r15,rax
  40d5d6:	mov    r14,rax
  40d5d9:	je     40c8b7 <_start@@Base+0x6e87>
  40d5df:	mov    rdi,QWORD PTR [rbp+0x0]
  40d5e3:	mov    esi,0x9
  40d5e8:	call   4168e0 <flatcc_builder_start_table@@Base>
  40d5ed:	test   eax,eax
  40d5ef:	jne    40ce90 <_start@@Base+0x7460>
  40d5f5:	lea    rcx,[rsp+0x34]
  40d5fa:	mov    rsi,r14
  40d5fd:	mov    rdi,rbp
  40d600:	mov    rdx,rbx
  40d603:	call   408740 <_start@@Base+0x2d10>
  40d608:	lea    rdi,[rsp+0x3c]
  40d60d:	mov    r14,rax
  40d610:	mov    eax,DWORD PTR [rsp+0x34]
  40d614:	mov    QWORD PTR [rsp+0x8],rdi
  40d619:	nop    DWORD PTR [rax+0x0]
  40d620:	test   eax,eax
  40d622:	je     40d758 <_start@@Base+0x7d28>
  40d628:	lea    r13,[rsp+0x38]
  40d62d:	cmp    rbx,r14
  40d630:	je     40d9a0 <_start@@Base+0x7f70>
  40d636:	cmp    BYTE PTR [r14],0x22
  40d63a:	jne    40d920 <_start@@Base+0x7ef0>
  40d640:	add    r14,0x1
  40d644:	mov    rdx,rbx
  40d647:	sub    rdx,r14
  40d64a:	cmp    rdx,0x7
  40d64e:	jbe    40d946 <_start@@Base+0x7f16>
  40d654:	movbe  rax,QWORD PTR [r14]
  40d659:	movabs rcx,0x63636362ffffffff
  40d663:	cmp    rax,rcx
  40d666:	ja     40d798 <_start@@Base+0x7d68>
  40d66c:	movabs rcx,0x6161616131323334
  40d676:	cmp    rax,rcx
  40d679:	je     40d9f0 <_start@@Base+0x7fc0>
  40d67f:	movabs rcx,0xffffffff00000000
  40d689:	movabs rsi,0x6161616100000000
  40d693:	and    rcx,rax
  40d696:	cmp    rcx,rsi
  40d699:	je     40db80 <_start@@Base+0x8150>
  40d69f:	movabs rsi,0x6262626231323334
  40d6a9:	cmp    rax,rsi
  40d6ac:	je     40dc48 <_start@@Base+0x8218>
  40d6b2:	movabs rax,0x6262626200000000
  40d6bc:	cmp    rcx,rax
  40d6bf:	jne    40d6d0 <_start@@Base+0x7ca0>
  40d6c1:	cmp    rdx,0x4
  40d6c5:	jg     40de18 <_start@@Base+0x83e8>
  40d6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6d0:	mov    rdx,rbx
  40d6d3:	mov    rsi,r14
  40d6d6:	mov    rdi,rbp
  40d6d9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40d6de:	mov    r15,rax
  40d6e1:	mov    rax,rbx
  40d6e4:	sub    rax,r15
  40d6e7:	cmp    rax,0x1
  40d6eb:	jle    40d6f9 <_start@@Base+0x7cc9>
  40d6ed:	cmp    BYTE PTR [r15],0x20
  40d6f1:	jg     40d70a <_start@@Base+0x7cda>
  40d6f3:	je     40d9b0 <_start@@Base+0x7f80>
  40d6f9:	mov    rsi,r15
  40d6fc:	mov    rdx,rbx
  40d6ff:	mov    rdi,rbp
  40d702:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40d707:	mov    r15,rax
  40d70a:	cmp    rbx,r15
  40d70d:	je     40d9d0 <_start@@Base+0x7fa0>
  40d713:	cmp    BYTE PTR [r15],0x2c
  40d717:	je     40dac0 <_start@@Base+0x8090>
  40d71d:	mov    DWORD PTR [rsp+0x34],0x0
  40d725:	cmp    BYTE PTR [r15],0x7d
  40d729:	je     40d960 <_start@@Base+0x7f30>
  40d72f:	mov    ecx,0xa
  40d734:	mov    rdx,rbx
  40d737:	mov    rsi,r15
  40d73a:	mov    rdi,rbp
  40d73d:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d742:	mov    r14,rax
  40d745:	mov    eax,DWORD PTR [rsp+0x34]
  40d749:	test   eax,eax
  40d74b:	jne    40d628 <_start@@Base+0x7bf8>
  40d751:	nop    DWORD PTR [rax+0x0]
  40d758:	mov    r10d,DWORD PTR [rbp+0x1c]
  40d75c:	test   r10d,r10d
  40d75f:	jne    40ce90 <_start@@Base+0x7460>
  40d765:	nop    DWORD PTR [rax]
  40d768:	mov    rdi,QWORD PTR [rbp+0x0]
  40d76c:	call   4172a0 <flatcc_builder_end_table@@Base>
  40d771:	test   eax,eax
  40d773:	mov    r13d,eax
  40d776:	je     40ce90 <_start@@Base+0x7460>
  40d77c:	mov    rdi,QWORD PTR [rbp+0x0]
  40d780:	xor    esi,esi
  40d782:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40d787:	test   rax,rax
  40d78a:	jne    40d3f6 <_start@@Base+0x79c6>
  40d790:	jmp    40d2a7 <_start@@Base+0x7877>
  40d795:	nop    DWORD PTR [rax]
  40d798:	movabs rcx,0x6363636331323334
  40d7a2:	cmp    rax,rcx
  40d7a5:	je     40d8b0 <_start@@Base+0x7e80>
  40d7ab:	movabs rcx,0xffffffff00000000
  40d7b5:	movabs rsi,0x6363636300000000
  40d7bf:	and    rcx,rax
  40d7c2:	cmp    rcx,rsi
  40d7c5:	je     40db10 <_start@@Base+0x80e0>
  40d7cb:	movabs rcx,0x6464646431323334
  40d7d5:	cmp    rax,rcx
  40d7d8:	jne    40d6d0 <_start@@Base+0x7ca0>
  40d7de:	cmp    rdx,0x8
  40d7e2:	jg     40dcf0 <_start@@Base+0x82c0>
  40d7e8:	lea    r15,[r14+0x8]
  40d7ec:	mov    r10,rbx
  40d7ef:	sub    r10,r15
  40d7f2:	cmp    r10,0x7
  40d7f6:	jbe    40df40 <_start@@Base+0x8510>
  40d7fc:	movbe  rax,QWORD PTR [r14+0x8]
  40d802:	movabs rdx,0xff00000000000000
  40d80c:	and    rax,rdx
  40d80f:	movabs rdx,0x3500000000000000
  40d819:	cmp    rax,rdx
  40d81c:	jne    40d900 <_start@@Base+0x7ed0>
  40d822:	cmp    r10,0x1
  40d826:	jle    40d900 <_start@@Base+0x7ed0>
  40d82c:	mov    ecx,0x1
  40d831:	mov    rdx,rbx
  40d834:	mov    rsi,r15
  40d837:	mov    rdi,rbp
  40d83a:	call   409ba0 <_start@@Base+0x4170>
  40d83f:	cmp    r15,rax
  40d842:	mov    r14,rax
  40d845:	je     40d900 <_start@@Base+0x7ed0>
  40d84b:	mov    rcx,r12
  40d84e:	mov    rdx,rbx
  40d851:	mov    rsi,rax
  40d854:	mov    rdi,rbp
  40d857:	mov    DWORD PTR [rsp+0x50],0x0
  40d85f:	call   4081b0 <_start@@Base+0x2780>
  40d864:	cmp    r14,rax
  40d867:	mov    r15,rax
  40d86a:	je     40eb43 <_start@@Base+0x9113>
  40d870:	mov    r11d,DWORD PTR [rsp+0x50]
  40d875:	test   r11d,r11d
  40d878:	jne    40d884 <_start@@Base+0x7e54>
  40d87a:	test   BYTE PTR [rbp+0x10],0x2
  40d87e:	je     40d6e1 <_start@@Base+0x7cb1>
  40d884:	mov    rdi,QWORD PTR [rbp+0x0]
  40d888:	mov    ecx,0x4
  40d88d:	mov    edx,0x4
  40d892:	mov    esi,0x8
  40d897:	call   418180 <flatcc_builder_table_add@@Base>
  40d89c:	test   rax,rax
  40d89f:	jne    40daab <_start@@Base+0x807b>
  40d8a5:	jmp    40d5b0 <_start@@Base+0x7b80>
  40d8aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	cmp    rdx,0x8
  40d8b4:	jg     40d4e0 <_start@@Base+0x7ab0>
  40d8ba:	lea    r15,[r14+0x8]
  40d8be:	mov    r10,rbx
  40d8c1:	sub    r10,r15
  40d8c4:	cmp    r10,0x7
  40d8c8:	jbe    40df30 <_start@@Base+0x8500>
  40d8ce:	movbe  rax,QWORD PTR [r14+0x8]
  40d8d4:	movabs rdx,0xff00000000000000
  40d8de:	and    rax,rdx
  40d8e1:	movabs rdx,0x3500000000000000
  40d8eb:	cmp    rax,rdx
  40d8ee:	jne    40d900 <_start@@Base+0x7ed0>
  40d8f0:	cmp    r10,0x1
  40d8f4:	jg     40e002 <_start@@Base+0x85d2>
  40d8fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d900:	mov    rsi,r15
  40d903:	mov    rdx,rbx
  40d906:	mov    rdi,rbp
  40d909:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40d90e:	mov    r15,rax
  40d911:	jmp    40d6e1 <_start@@Base+0x7cb1>
  40d916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d920:	mov    rdx,rbx
  40d923:	mov    rsi,r14
  40d926:	mov    ecx,0x5
  40d92b:	mov    rdi,rbp
  40d92e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40d933:	mov    rdx,rbx
  40d936:	mov    r14,rax
  40d939:	sub    rdx,r14
  40d93c:	cmp    rdx,0x7
  40d940:	ja     40d654 <_start@@Base+0x7c24>
  40d946:	lea    rcx,[rip+0x1d81f]        # 42b16c <_IO_stdin_used@@Base+0x16c>
  40d94d:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40d951:	add    rax,rcx
  40d954:	jmp    rax
  40d956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d960:	lea    r14,[r15+0x1]
  40d964:	mov    rax,rbx
  40d967:	sub    rax,r14
  40d96a:	cmp    rax,0x1
  40d96e:	jle    40d981 <_start@@Base+0x7f51>
  40d970:	cmp    BYTE PTR [r15+0x1],0x20
  40d975:	jg     40d758 <_start@@Base+0x7d28>
  40d97b:	je     40ddd0 <_start@@Base+0x83a0>
  40d981:	mov    rsi,r14
  40d984:	mov    rdx,rbx
  40d987:	mov    rdi,rbp
  40d98a:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40d98f:	mov    r14,rax
  40d992:	mov    eax,DWORD PTR [rsp+0x34]
  40d996:	jmp    40d620 <_start@@Base+0x7bf0>
  40d99b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9a0:	mov    r14,rbx
  40d9a3:	jmp    40d6d0 <_start@@Base+0x7ca0>
  40d9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9b0:	cmp    BYTE PTR [r15+0x1],0x20
  40d9b5:	jle    40d6f9 <_start@@Base+0x7cc9>
  40d9bb:	add    r15,0x1
  40d9bf:	cmp    rbx,r15
  40d9c2:	jne    40d713 <_start@@Base+0x7ce3>
  40d9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9d0:	mov    r10d,DWORD PTR [rbp+0x1c]
  40d9d4:	mov    DWORD PTR [rsp+0x34],0x0
  40d9dc:	mov    r14,rbx
  40d9df:	test   r10d,r10d
  40d9e2:	jne    40ce90 <_start@@Base+0x7460>
  40d9e8:	jmp    40d768 <_start@@Base+0x7d38>
  40d9ed:	nop    DWORD PTR [rax]
  40d9f0:	lea    r15,[r14+0x8]
  40d9f4:	mov    r10,rbx
  40d9f7:	sub    r10,r15
  40d9fa:	cmp    r10,0x7
  40d9fe:	jbe    40dce0 <_start@@Base+0x82b0>
  40da04:	movbe  rax,QWORD PTR [r14+0x8]
  40da0a:	movabs rdx,0xff00000000000000
  40da14:	and    rax,rdx
  40da17:	movabs rdx,0x3500000000000000
  40da21:	cmp    rax,rdx
  40da24:	jne    40d900 <_start@@Base+0x7ed0>
  40da2a:	cmp    r10,0x1
  40da2e:	jle    40d900 <_start@@Base+0x7ed0>
  40da34:	mov    ecx,0x1
  40da39:	mov    rdx,rbx
  40da3c:	mov    rsi,r15
  40da3f:	mov    rdi,rbp
  40da42:	call   409ba0 <_start@@Base+0x4170>
  40da47:	cmp    r15,rax
  40da4a:	mov    r14,rax
  40da4d:	je     40d900 <_start@@Base+0x7ed0>
  40da53:	mov    rcx,r12
  40da56:	mov    rdx,rbx
  40da59:	mov    rsi,rax
  40da5c:	mov    rdi,rbp
  40da5f:	mov    DWORD PTR [rsp+0x50],0x0
  40da67:	call   4081b0 <_start@@Base+0x2780>
  40da6c:	cmp    r14,rax
  40da6f:	mov    r15,rax
  40da72:	je     40eaba <_start@@Base+0x908a>
  40da78:	mov    edi,DWORD PTR [rsp+0x50]
  40da7c:	test   edi,edi
  40da7e:	jne    40da8a <_start@@Base+0x805a>
  40da80:	test   BYTE PTR [rbp+0x10],0x2
  40da84:	je     40d6e1 <_start@@Base+0x7cb1>
  40da8a:	mov    rdi,QWORD PTR [rbp+0x0]
  40da8e:	mov    ecx,0x4
  40da93:	mov    edx,0x4
  40da98:	mov    esi,0x1
  40da9d:	call   418180 <flatcc_builder_table_add@@Base>
  40daa2:	test   rax,rax
  40daa5:	je     40d5b0 <_start@@Base+0x7b80>
  40daab:	mov    edx,DWORD PTR [rsp+0x50]
  40daaf:	mov    DWORD PTR [rax],edx
  40dab1:	jmp    40d6e1 <_start@@Base+0x7cb1>
  40dab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dac0:	lea    r14,[r15+0x1]
  40dac4:	mov    rax,rbx
  40dac7:	sub    rax,r14
  40daca:	cmp    rax,0x1
  40dace:	jle    40dadd <_start@@Base+0x80ad>
  40dad0:	cmp    BYTE PTR [r15+0x1],0x20
  40dad5:	jg     40daee <_start@@Base+0x80be>
  40dad7:	je     40df88 <_start@@Base+0x8558>
  40dadd:	mov    rsi,r14
  40dae0:	mov    rdx,rbx
  40dae3:	mov    rdi,rbp
  40dae6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40daeb:	mov    r14,rax
  40daee:	cmp    rbx,r14
  40daf1:	je     40ea20 <_start@@Base+0x8ff0>
  40daf7:	cmp    BYTE PTR [r14],0x7d
  40dafb:	je     40e950 <_start@@Base+0x8f20>
  40db01:	mov    DWORD PTR [rsp+0x34],0x1
  40db09:	jmp    40d62d <_start@@Base+0x7bfd>
  40db0e:	xchg   ax,ax
  40db10:	cmp    rdx,0x4
  40db14:	jle    40d6d0 <_start@@Base+0x7ca0>
  40db1a:	mov    rsi,r14
  40db1d:	mov    ecx,0x4
  40db22:	mov    rdx,rbx
  40db25:	mov    rdi,rbp
  40db28:	call   409ba0 <_start@@Base+0x4170>
  40db2d:	cmp    rax,r14
  40db30:	mov    rsi,rax
  40db33:	je     40d6d0 <_start@@Base+0x7ca0>
  40db39:	mov    rcx,r13
  40db3c:	mov    rdx,rbx
  40db3f:	mov    rdi,rbp
  40db42:	call   41d800 <flatcc_json_parser_build_string@@Base>
  40db47:	mov    r15,rax
  40db4a:	mov    eax,DWORD PTR [rsp+0x38]
  40db4e:	test   eax,eax
  40db50:	je     40d5b0 <_start@@Base+0x7b80>
  40db56:	mov    rdi,QWORD PTR [rbp+0x0]
  40db5a:	mov    esi,0x4
  40db5f:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40db64:	test   rax,rax
  40db67:	je     40d5b0 <_start@@Base+0x7b80>
  40db6d:	mov    edx,DWORD PTR [rsp+0x38]
  40db71:	mov    DWORD PTR [rax],edx
  40db73:	jmp    40d6e1 <_start@@Base+0x7cb1>
  40db78:	nop    DWORD PTR [rax+rax*1+0x0]
  40db80:	cmp    rdx,0x4
  40db84:	jle    40d6d0 <_start@@Base+0x7ca0>
  40db8a:	mov    rsi,r14
  40db8d:	mov    ecx,0x4
  40db92:	mov    rdx,rbx
  40db95:	mov    rdi,rbp
  40db98:	call   409ba0 <_start@@Base+0x4170>
  40db9d:	cmp    rax,r14
  40dba0:	mov    rsi,rax
  40dba3:	je     40d6d0 <_start@@Base+0x7ca0>
  40dba9:	mov    rcx,r13
  40dbac:	mov    rdx,rbx
  40dbaf:	mov    rdi,rbp
  40dbb2:	call   41d800 <flatcc_json_parser_build_string@@Base>
  40dbb7:	mov    esi,DWORD PTR [rsp+0x38]
  40dbbb:	mov    r15,rax
  40dbbe:	test   esi,esi
  40dbc0:	je     40d5b0 <_start@@Base+0x7b80>
  40dbc6:	mov    rdi,QWORD PTR [rbp+0x0]
  40dbca:	xor    esi,esi
  40dbcc:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40dbd1:	test   rax,rax
  40dbd4:	jne    40db6d <_start@@Base+0x813d>
  40dbd6:	jmp    40d5b0 <_start@@Base+0x7b80>
  40dbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbe0:	movsx  rcx,BYTE PTR [r14+0x6]
  40dbe5:	shl    rcx,0x8
  40dbe9:	movsx  rsi,BYTE PTR [r14+0x5]
  40dbee:	mov    rax,rsi
  40dbf1:	shl    rax,0x10
  40dbf5:	or     rcx,rax
  40dbf8:	movsx  rsi,BYTE PTR [r14+0x4]
  40dbfd:	mov    rax,rsi
  40dc00:	shl    rax,0x18
  40dc04:	or     rax,rcx
  40dc07:	movsx  rsi,BYTE PTR [r14+0x3]
  40dc0c:	shl    rsi,0x20
  40dc10:	or     rax,rsi
  40dc13:	movsx  rsi,BYTE PTR [r14+0x2]
  40dc18:	shl    rsi,0x28
  40dc1c:	mov    rcx,rsi
  40dc1f:	or     rcx,rax
  40dc22:	movsx  rsi,BYTE PTR [r14+0x1]
  40dc27:	mov    rax,rsi
  40dc2a:	shl    rax,0x30
  40dc2e:	or     rcx,rax
  40dc31:	movsx  rax,BYTE PTR [r14]
  40dc35:	shl    rax,0x38
  40dc39:	or     rax,rcx
  40dc3c:	jmp    40d659 <_start@@Base+0x7c29>
  40dc41:	nop    DWORD PTR [rax+0x0]
  40dc48:	cmp    rdx,0x8
  40dc4c:	jle    40d6d0 <_start@@Base+0x7ca0>
  40dc52:	mov    ecx,0x8
  40dc57:	mov    rdx,rbx
  40dc5a:	mov    rsi,r14
  40dc5d:	mov    rdi,rbp
  40dc60:	call   409ba0 <_start@@Base+0x4170>
  40dc65:	cmp    rax,r14
  40dc68:	je     40d6d0 <_start@@Base+0x7ca0>
  40dc6e:	mov    rcx,r12
  40dc71:	mov    rdx,rbx
  40dc74:	mov    rsi,rax
  40dc77:	mov    rdi,rbp
  40dc7a:	mov    QWORD PTR [rsp+0x50],0x0
  40dc83:	mov    QWORD PTR [rsp+0x10],rax
  40dc88:	call   408530 <_start@@Base+0x2b00>
  40dc8d:	mov    r10,QWORD PTR [rsp+0x10]
  40dc92:	mov    r15,rax
  40dc95:	cmp    r10,rax
  40dc98:	je     40ea47 <_start@@Base+0x9017>
  40dc9e:	cmp    QWORD PTR [rsp+0x50],0x0
  40dca4:	jne    40dcb0 <_start@@Base+0x8280>
  40dca6:	test   BYTE PTR [rbp+0x10],0x2
  40dcaa:	je     40d6e1 <_start@@Base+0x7cb1>
  40dcb0:	mov    rdi,QWORD PTR [rbp+0x0]
  40dcb4:	mov    ecx,0x8
  40dcb9:	mov    edx,0x8
  40dcbe:	mov    esi,0x3
  40dcc3:	call   418180 <flatcc_builder_table_add@@Base>
  40dcc8:	test   rax,rax
  40dccb:	je     40d5b0 <_start@@Base+0x7b80>
  40dcd1:	mov    rdx,QWORD PTR [rsp+0x50]
  40dcd6:	mov    QWORD PTR [rax],rdx
  40dcd9:	jmp    40d6e1 <_start@@Base+0x7cb1>
  40dcde:	xchg   ax,ax
  40dce0:	mov    rsi,rbx
  40dce3:	mov    rdi,r15
  40dce6:	call   405b40 <_start@@Base+0x110>
  40dceb:	jmp    40da0a <_start@@Base+0x7fda>
  40dcf0:	mov    ecx,0x8
  40dcf5:	mov    rdx,rbx
  40dcf8:	mov    rsi,r14
  40dcfb:	mov    rdi,rbp
  40dcfe:	call   409ba0 <_start@@Base+0x4170>
  40dd03:	cmp    rax,r14
  40dd06:	mov    r10,rax
  40dd09:	je     40d7e8 <_start@@Base+0x7db8>
  40dd0f:	cmp    rbx,rax
  40dd12:	mov    QWORD PTR [rsp+0x48],0x0
  40dd1b:	mov    QWORD PTR [rsp+0x50],0x0
  40dd24:	mov    DWORD PTR [rsp+0x3c],0x0
  40dd2c:	je     40e9e0 <_start@@Base+0x8fb0>
  40dd32:	mov    rcx,QWORD PTR [rsp+0x8]
  40dd37:	mov    r8,r12
  40dd3a:	mov    rdx,rbx
  40dd3d:	mov    rsi,rax
  40dd40:	mov    rdi,rbp
  40dd43:	mov    QWORD PTR [rsp+0x10],rax
  40dd48:	call   41c710 <flatcc_json_parser_integer@@Base>
  40dd4d:	mov    r10,QWORD PTR [rsp+0x10]
  40dd52:	mov    r15,rax
  40dd55:	cmp    r10,rax
  40dd58:	je     40e9e0 <_start@@Base+0x8fb0>
  40dd5e:	mov    r14d,DWORD PTR [rsp+0x3c]
  40dd63:	mov    rax,QWORD PTR [rsp+0x50]
  40dd68:	test   r14d,r14d
  40dd6b:	je     40dde8 <_start@@Base+0x83b8>
  40dd6d:	movabs rdx,0x8000000000000000
  40dd77:	mov    ecx,0x8
  40dd7c:	cmp    rax,rdx
  40dd7f:	ja     40e8dc <_start@@Base+0x8eac>
  40dd85:	neg    rax
  40dd88:	mov    QWORD PTR [rsp+0x48],rax
  40dd8d:	test   rax,rax
  40dd90:	jne    40dd9c <_start@@Base+0x836c>
  40dd92:	test   BYTE PTR [rbp+0x10],0x2
  40dd96:	je     40d6e1 <_start@@Base+0x7cb1>
  40dd9c:	mov    rdi,QWORD PTR [rbp+0x0]
  40dda0:	mov    ecx,0x8
  40dda5:	mov    edx,0x8
  40ddaa:	mov    esi,0x7
  40ddaf:	call   418180 <flatcc_builder_table_add@@Base>
  40ddb4:	test   rax,rax
  40ddb7:	je     40d5b0 <_start@@Base+0x7b80>
  40ddbd:	mov    rdx,QWORD PTR [rsp+0x48]
  40ddc2:	mov    QWORD PTR [rax],rdx
  40ddc5:	jmp    40d6e1 <_start@@Base+0x7cb1>
  40ddca:	nop    WORD PTR [rax+rax*1+0x0]
  40ddd0:	cmp    BYTE PTR [r15+0x2],0x20
  40ddd5:	jle    40d981 <_start@@Base+0x7f51>
  40dddb:	lea    r14,[r15+0x2]
  40dddf:	jmp    40d758 <_start@@Base+0x7d28>
  40dde4:	nop    DWORD PTR [rax+0x0]
  40dde8:	test   rax,rax
  40ddeb:	js     40e8d2 <_start@@Base+0x8ea2>
  40ddf1:	mov    QWORD PTR [rsp+0x48],rax
  40ddf6:	jmp    40dd8d <_start@@Base+0x835d>
  40ddf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40de00:	test   rax,rax
  40de03:	js     40e89f <_start@@Base+0x8e6f>
  40de09:	mov    QWORD PTR [rsp+0x48],rax
  40de0e:	jmp    40d57f <_start@@Base+0x7b4f>
  40de13:	nop    DWORD PTR [rax+rax*1+0x0]
  40de18:	mov    rsi,r14
  40de1b:	mov    ecx,0x4
  40de20:	mov    rdx,rbx
  40de23:	mov    rdi,rbp
  40de26:	call   409ba0 <_start@@Base+0x4170>
  40de2b:	cmp    rax,r14
  40de2e:	mov    rsi,rax
  40de31:	je     40d6d0 <_start@@Base+0x7ca0>
  40de37:	mov    rcx,r13
  40de3a:	mov    rdx,rbx
  40de3d:	mov    rdi,rbp
  40de40:	call   41d800 <flatcc_json_parser_build_string@@Base>
  40de45:	mov    ecx,DWORD PTR [rsp+0x38]
  40de49:	mov    r15,rax
  40de4c:	test   ecx,ecx
  40de4e:	je     40d5b0 <_start@@Base+0x7b80>
  40de54:	mov    rdi,QWORD PTR [rbp+0x0]
  40de58:	mov    esi,0x2
  40de5d:	call   418350 <flatcc_builder_table_add_offset@@Base>
  40de62:	test   rax,rax
  40de65:	jne    40db6d <_start@@Base+0x813d>
  40de6b:	jmp    40d5b0 <_start@@Base+0x7b80>
  40de70:	mov    ecx,0x7
  40de75:	mov    rsi,r15
  40de78:	mov    rdx,rbx
  40de7b:	mov    rdi,rbp
  40de7e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40de83:	cmp    r14,rax
  40de86:	mov    r15,rax
  40de89:	je     40dfa0 <_start@@Base+0x8570>
  40de8f:	mov    rax,QWORD PTR [rsp+0x48]
  40de94:	jmp    40cf51 <_start@@Base+0x7521>
  40de99:	cmp    BYTE PTR [r13+0x2],0x20
  40de9e:	jle    40c511 <_start@@Base+0x6ae1>
  40dea4:	lea    r12,[r13+0x2]
  40dea8:	jmp    40c408 <_start@@Base+0x69d8>
  40dead:	lea    rsi,[r13+0x1]
  40deb1:	mov    rax,rbx
  40deb4:	mov    DWORD PTR [rsp+0x30],0x0
  40debc:	sub    rax,rsi
  40debf:	cmp    rax,0x1
  40dec3:	jle    40ded6 <_start@@Base+0x84a6>
  40dec5:	cmp    BYTE PTR [r13+0x1],0x20
  40deca:	jg     40e080 <_start@@Base+0x8650>
  40ded0:	je     40eb04 <_start@@Base+0x90d4>
  40ded6:	mov    rdx,rbx
  40ded9:	mov    rdi,rbp
  40dedc:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40dee1:	mov    r13,rax
  40dee4:	mov    eax,DWORD PTR [rsp+0x30]
  40dee8:	jmp    40c628 <_start@@Base+0x6bf8>
  40deed:	lea    rsi,[r14+0x1]
  40def1:	mov    rax,rbx
  40def4:	mov    DWORD PTR [rsp+0x38],0x0
  40defc:	sub    rax,rsi
  40deff:	cmp    rax,0x1
  40df03:	jle    40df16 <_start@@Base+0x84e6>
  40df05:	cmp    BYTE PTR [r14+0x1],0x20
  40df0a:	jg     40e088 <_start@@Base+0x8658>
  40df10:	je     40eaf0 <_start@@Base+0x90c0>
  40df16:	mov    rdx,rbx
  40df19:	mov    rdi,rbp
  40df1c:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40df21:	mov    r14,rax
  40df24:	mov    eax,DWORD PTR [rsp+0x38]
  40df28:	jmp    40cbc8 <_start@@Base+0x7198>
  40df2d:	nop    DWORD PTR [rax]
  40df30:	mov    rsi,rbx
  40df33:	mov    rdi,r15
  40df36:	call   405b40 <_start@@Base+0x110>
  40df3b:	jmp    40d8d4 <_start@@Base+0x7ea4>
  40df40:	mov    rsi,rbx
  40df43:	mov    rdi,r15
  40df46:	call   405b40 <_start@@Base+0x110>
  40df4b:	jmp    40d802 <_start@@Base+0x7dd2>
  40df50:	mov    r8,QWORD PTR [rsp+0x8]
  40df55:	lea    rcx,[rip+0x2b4e4]        # 439440 <__data_start@@Base+0x380>
  40df5c:	mov    rdx,rbx
  40df5f:	mov    rsi,r14
  40df62:	mov    rdi,rbp
  40df65:	call   409370 <_start@@Base+0x3940>
  40df6a:	cmp    rax,r14
  40df6d:	mov    r15,rax
  40df70:	je     40d5b0 <_start@@Base+0x7b80>
  40df76:	cmp    rbx,rax
  40df79:	jne    40d24f <_start@@Base+0x781f>
  40df7f:	jmp    40d5b0 <_start@@Base+0x7b80>
  40df84:	nop    DWORD PTR [rax+0x0]
  40df88:	cmp    BYTE PTR [r15+0x2],0x20
  40df8d:	jle    40dadd <_start@@Base+0x80ad>
  40df93:	lea    r14,[r15+0x2]
  40df97:	jmp    40daee <_start@@Base+0x80be>
  40df9c:	nop    DWORD PTR [rax+0x0]
  40dfa0:	mov    r8,QWORD PTR [rsp]
  40dfa4:	lea    rcx,[rip+0x2b4b5]        # 439460 <__data_start@@Base+0x3a0>
  40dfab:	mov    rdx,rbx
  40dfae:	mov    rsi,r14
  40dfb1:	mov    rdi,rbp
  40dfb4:	call   408f90 <_start@@Base+0x3560>
  40dfb9:	cmp    rax,r14
  40dfbc:	mov    r15,rax
  40dfbf:	je     40d5b0 <_start@@Base+0x7b80>
  40dfc5:	cmp    rbx,rax
  40dfc8:	jne    40de8f <_start@@Base+0x845f>
  40dfce:	jmp    40d5b0 <_start@@Base+0x7b80>
  40dfd3:	nop    DWORD PTR [rax+rax*1+0x0]
  40dfd8:	xor    ecx,ecx
  40dfda:	jmp    40dbe9 <_start@@Base+0x81b9>
  40dfdf:	xor    ecx,ecx
  40dfe1:	jmp    40dbf8 <_start@@Base+0x81c8>
  40dfe6:	xor    eax,eax
  40dfe8:	jmp    40dc07 <_start@@Base+0x81d7>
  40dfed:	xor    eax,eax
  40dfef:	jmp    40dc13 <_start@@Base+0x81e3>
  40dff4:	xor    ecx,ecx
  40dff6:	jmp    40dc22 <_start@@Base+0x81f2>
  40dffb:	xor    ecx,ecx
  40dffd:	jmp    40dc31 <_start@@Base+0x8201>
  40e002:	mov    ecx,0x1
  40e007:	mov    rdx,rbx
  40e00a:	mov    rsi,r15
  40e00d:	mov    rdi,rbp
  40e010:	call   409ba0 <_start@@Base+0x4170>
  40e015:	cmp    r15,rax
  40e018:	mov    r14,rax
  40e01b:	je     40d900 <_start@@Base+0x7ed0>
  40e021:	mov    rcx,r12
  40e024:	mov    rdx,rbx
  40e027:	mov    rsi,rax
  40e02a:	mov    rdi,rbp
  40e02d:	mov    DWORD PTR [rsp+0x50],0x0
  40e035:	call   4081b0 <_start@@Base+0x2780>
  40e03a:	cmp    r14,rax
  40e03d:	mov    r15,rax
  40e040:	je     40eb78 <_start@@Base+0x9148>
  40e046:	mov    eax,DWORD PTR [rsp+0x50]
  40e04a:	test   eax,eax
  40e04c:	jne    40e058 <_start@@Base+0x8628>
  40e04e:	test   BYTE PTR [rbp+0x10],0x2
  40e052:	je     40d6e1 <_start@@Base+0x7cb1>
  40e058:	mov    rdi,QWORD PTR [rbp+0x0]
  40e05c:	mov    ecx,0x4
  40e061:	mov    edx,0x4
  40e066:	mov    esi,0x6
  40e06b:	call   418180 <flatcc_builder_table_add@@Base>
  40e070:	test   rax,rax
  40e073:	jne    40daab <_start@@Base+0x807b>
  40e079:	jmp    40d5b0 <_start@@Base+0x7b80>
  40e07e:	xchg   ax,ax
  40e080:	mov    r13,rsi
  40e083:	jmp    40c9fb <_start@@Base+0x6fcb>
  40e088:	mov    r14,rsi
  40e08b:	jmp    40ce7b <_start@@Base+0x744b>
  40e090:	mov    rcx,QWORD PTR [rsp+0x40]
  40e095:	mov    rdx,rbx
  40e098:	mov    rsi,r12
  40e09b:	mov    rdi,rbp
  40e09e:	call   41da40 <flatcc_json_parser_finalize_unions@@Base>
  40e0a3:	mov    rdi,QWORD PTR [rbp+0x0]
  40e0a7:	mov    r12,rax
  40e0aa:	call   4172a0 <flatcc_builder_end_table@@Base>
  40e0af:	mov    edx,eax
  40e0b1:	mov    rax,QWORD PTR [rsp+0x18]
  40e0b6:	test   edx,edx
  40e0b8:	mov    DWORD PTR [rax],edx
  40e0ba:	mov    rax,r12
  40e0bd:	je     40c418 <_start@@Base+0x69e8>
  40e0c3:	jmp    40c42b <_start@@Base+0x69fb>
  40e0c8:	cmp    BYTE PTR [r13+0x2],0x20
  40e0cd:	jle    40d1ad <_start@@Base+0x777d>
  40e0d3:	lea    r12,[r13+0x2]
  40e0d7:	jmp    40d1be <_start@@Base+0x778e>
  40e0dc:	lea    rsi,[r14+0x1]
  40e0e0:	mov    rax,rbx
  40e0e3:	sub    rax,rsi
  40e0e6:	cmp    rax,0x1
  40e0ea:	jle    40e0f9 <_start@@Base+0x86c9>
  40e0ec:	cmp    BYTE PTR [r14+0x1],0x20
  40e0f1:	jg     40e107 <_start@@Base+0x86d7>
  40e0f3:	je     40eb2f <_start@@Base+0x90ff>
  40e0f9:	mov    rdx,rbx
  40e0fc:	mov    rdi,rbp
  40e0ff:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40e104:	mov    rsi,rax
  40e107:	cmp    rbx,rsi
  40e10a:	je     40e115 <_start@@Base+0x86e5>
  40e10c:	cmp    BYTE PTR [rsi],0x7d
  40e10f:	je     40ebad <_start@@Base+0x917d>
  40e115:	lea    rax,[rsp+0x3c]
  40e11a:	lea    r13,[rip+0x1d08b]        # 42b1ac <_IO_stdin_used@@Base+0x1ac>
  40e121:	mov    QWORD PTR [rsp+0x8],rax
  40e126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e130:	cmp    rbx,rsi
  40e133:	je     40e300 <_start@@Base+0x88d0>
  40e139:	cmp    BYTE PTR [rsi],0x22
  40e13c:	jne    40e318 <_start@@Base+0x88e8>
  40e142:	add    rsi,0x1
  40e146:	mov    rax,rbx
  40e149:	sub    rax,rsi
  40e14c:	cmp    rax,0x7
  40e150:	jbe    40e33b <_start@@Base+0x890b>
  40e156:	movbe  rax,QWORD PTR [rsi]
  40e15b:	movabs rdx,0x616161615f626262
  40e165:	cmp    rax,rdx
  40e168:	jne    40e300 <_start@@Base+0x88d0>
  40e16e:	lea    r15,[rsi+0x8]
  40e172:	mov    rcx,rbx
  40e175:	sub    rcx,r15
  40e178:	cmp    rcx,0x7
  40e17c:	ja     40e348 <_start@@Base+0x8918>
  40e182:	lea    rdx,[rip+0x1d003]        # 42b18c <_IO_stdin_used@@Base+0x18c>
  40e189:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40e18d:	add    rax,rdx
  40e190:	jmp    rax
  40e192:	nop    WORD PTR [rax+rax*1+0x0]
  40e198:	movsx  rdi,BYTE PTR [rsi+0xe]
  40e19d:	shl    rdi,0x8
  40e1a1:	movsx  rdx,BYTE PTR [rsi+0xd]
  40e1a6:	mov    rax,rdx
  40e1a9:	shl    rax,0x10
  40e1ad:	or     rdi,rax
  40e1b0:	movsx  rdx,BYTE PTR [rsi+0xc]
  40e1b5:	mov    rax,rdx
  40e1b8:	shl    rax,0x18
  40e1bc:	or     rax,rdi
  40e1bf:	movsx  rdx,BYTE PTR [rsi+0xb]
  40e1c4:	mov    rdi,rdx
  40e1c7:	shl    rdi,0x20
  40e1cb:	or     rax,rdi
  40e1ce:	movsx  rdx,BYTE PTR [rsi+0xa]
  40e1d3:	mov    rdi,rdx
  40e1d6:	shl    rdi,0x28
  40e1da:	or     rdi,rax
  40e1dd:	movsx  rdx,BYTE PTR [rsi+0x9]
  40e1e2:	mov    rax,rdx
  40e1e5:	shl    rax,0x30
  40e1e9:	or     rdi,rax
  40e1ec:	movsx  rdx,BYTE PTR [rsi+0x8]
  40e1f1:	mov    rax,rdx
  40e1f4:	movabs rdx,0x625f73746172745f
  40e1fe:	shl    rax,0x38
  40e202:	or     rax,rdi
  40e205:	cmp    rax,rdx
  40e208:	je     40e361 <_start@@Base+0x8931>
  40e20e:	xor    al,al
  40e210:	movabs rdx,0x625f737465707300
  40e21a:	cmp    rax,rdx
  40e21d:	jne    40e229 <_start@@Base+0x87f9>
  40e21f:	cmp    rcx,0x7
  40e223:	jg     40e5d0 <_start@@Base+0x8ba0>
  40e229:	mov    rsi,r15
  40e22c:	mov    rdx,rbx
  40e22f:	mov    rdi,rbp
  40e232:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40e237:	mov    r15,rax
  40e23a:	mov    rax,rbx
  40e23d:	sub    rax,r15
  40e240:	cmp    rax,0x1
  40e244:	jle    40e252 <_start@@Base+0x8822>
  40e246:	cmp    BYTE PTR [r15],0x20
  40e24a:	jg     40e263 <_start@@Base+0x8833>
  40e24c:	je     40e3c0 <_start@@Base+0x8990>
  40e252:	mov    rsi,r15
  40e255:	mov    rdx,rbx
  40e258:	mov    rdi,rbp
  40e25b:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40e260:	mov    r15,rax
  40e263:	cmp    rbx,r15
  40e266:	je     40e3e0 <_start@@Base+0x89b0>
  40e26c:	movzx  eax,BYTE PTR [r15]
  40e270:	cmp    al,0x2c
  40e272:	je     40e4a8 <_start@@Base+0x8a78>
  40e278:	cmp    al,0x7d
  40e27a:	je     40e388 <_start@@Base+0x8958>
  40e280:	mov    ecx,0xa
  40e285:	mov    rdx,rbx
  40e288:	mov    rsi,r15
  40e28b:	mov    rdi,rbp
  40e28e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e293:	mov    r14,rax
  40e296:	jmp    40d3c0 <_start@@Base+0x7990>
  40e29b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2a0:	xor    edi,edi
  40e2a2:	jmp    40e1a1 <_start@@Base+0x8771>
  40e2a7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2b0:	xor    eax,eax
  40e2b2:	jmp    40e1bf <_start@@Base+0x878f>
  40e2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2c0:	xor    eax,eax
  40e2c2:	jmp    40e1ce <_start@@Base+0x879e>
  40e2c7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2d0:	xor    edi,edi
  40e2d2:	jmp    40e1dd <_start@@Base+0x87ad>
  40e2d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2e0:	xor    edi,edi
  40e2e2:	jmp    40e1ec <_start@@Base+0x87bc>
  40e2e7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2f0:	xor    edi,edi
  40e2f2:	jmp    40e1b0 <_start@@Base+0x8780>
  40e2f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e300:	mov    rdx,rbx
  40e303:	mov    rdi,rbp
  40e306:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40e30b:	mov    r15,rax
  40e30e:	jmp    40e23a <_start@@Base+0x880a>
  40e313:	nop    DWORD PTR [rax+rax*1+0x0]
  40e318:	mov    ecx,0x5
  40e31d:	mov    rdx,rbx
  40e320:	mov    rdi,rbp
  40e323:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e328:	mov    rsi,rax
  40e32b:	mov    rax,rbx
  40e32e:	sub    rax,rsi
  40e331:	cmp    rax,0x7
  40e335:	ja     40e156 <_start@@Base+0x8726>
  40e33b:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40e340:	add    rax,r13
  40e343:	jmp    rax
  40e345:	nop    DWORD PTR [rax]
  40e348:	movbe  rax,QWORD PTR [rsi+0x8]
  40e34e:	movabs rdx,0x625f73746172745f
  40e358:	cmp    rax,rdx
  40e35b:	jne    40e20e <_start@@Base+0x87de>
  40e361:	lea    r14,[rsi+0x10]
  40e365:	mov    rcx,rbx
  40e368:	sub    rcx,r14
  40e36b:	cmp    rcx,0x7
  40e36f:	ja     40e5c0 <_start@@Base+0x8b90>
  40e375:	lea    rdx,[rip+0x1ce50]        # 42b1cc <_IO_stdin_used@@Base+0x1cc>
  40e37c:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40e380:	add    rax,rdx
  40e383:	jmp    rax
  40e385:	nop    DWORD PTR [rax]
  40e388:	lea    r14,[r15+0x1]
  40e38c:	mov    rax,rbx
  40e38f:	sub    rax,r14
  40e392:	cmp    rax,0x1
  40e396:	jle    40e3a9 <_start@@Base+0x8979>
  40e398:	cmp    BYTE PTR [r15+0x1],0x20
  40e39d:	jg     40d3c0 <_start@@Base+0x7990>
  40e3a3:	je     40e6f0 <_start@@Base+0x8cc0>
  40e3a9:	mov    rsi,r14
  40e3ac:	mov    rdx,rbx
  40e3af:	mov    rdi,rbp
  40e3b2:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40e3b7:	mov    r14,rax
  40e3ba:	jmp    40d3c0 <_start@@Base+0x7990>
  40e3bf:	nop
  40e3c0:	cmp    BYTE PTR [r15+0x1],0x20
  40e3c5:	jle    40e252 <_start@@Base+0x8822>
  40e3cb:	add    r15,0x1
  40e3cf:	cmp    rbx,r15
  40e3d2:	jne    40e26c <_start@@Base+0x883c>
  40e3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3e0:	mov    r14,rbx
  40e3e3:	jmp    40d3c0 <_start@@Base+0x7990>
  40e3e8:	movsx  rdi,BYTE PTR [rsi+0x16]
  40e3ed:	shl    rdi,0x8
  40e3f1:	movsx  rdx,BYTE PTR [rsi+0x15]
  40e3f6:	mov    rax,rdx
  40e3f9:	shl    rax,0x10
  40e3fd:	or     rdi,rax
  40e400:	movsx  rdx,BYTE PTR [rsi+0x14]
  40e405:	mov    rax,rdx
  40e408:	shl    rax,0x18
  40e40c:	or     rax,rdi
  40e40f:	movsx  rdx,BYTE PTR [rsi+0x13]
  40e414:	mov    rdi,rdx
  40e417:	shl    rdi,0x20
  40e41b:	or     rax,rdi
  40e41e:	movsx  rdx,BYTE PTR [rsi+0x12]
  40e423:	mov    rdi,rdx
  40e426:	shl    rdi,0x28
  40e42a:	or     rdi,rax
  40e42d:	movsx  rdx,BYTE PTR [rsi+0x11]
  40e432:	mov    rax,rdx
  40e435:	shl    rax,0x30
  40e439:	or     rdi,rax
  40e43c:	movsx  rdx,BYTE PTR [rsi+0x10]
  40e441:	mov    rax,rdx
  40e444:	shl    rax,0x38
  40e448:	or     rax,rdi
  40e44b:	and    rax,0xffffffffff000000
  40e451:	movabs rdx,0x7374657073000000
  40e45b:	cmp    rax,rdx
  40e45e:	jne    40e46a <_start@@Base+0x8a3a>
  40e460:	cmp    rcx,0x5
  40e464:	jg     40e708 <_start@@Base+0x8cd8>
  40e46a:	mov    rdx,rbx
  40e46d:	mov    rsi,r14
  40e470:	mov    rdi,rbp
  40e473:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40e478:	mov    r15,rax
  40e47b:	jmp    40e23a <_start@@Base+0x880a>
  40e480:	xor    edi,edi
  40e482:	jmp    40e3f1 <_start@@Base+0x89c1>
  40e487:	xor    edi,edi
  40e489:	jmp    40e400 <_start@@Base+0x89d0>
  40e48e:	xor    eax,eax
  40e490:	jmp    40e40f <_start@@Base+0x89df>
  40e495:	xor    eax,eax
  40e497:	jmp    40e41e <_start@@Base+0x89ee>
  40e499:	xor    edi,edi
  40e49b:	jmp    40e42d <_start@@Base+0x89fd>
  40e49d:	xor    edi,edi
  40e49f:	jmp    40e43c <_start@@Base+0x8a0c>
  40e4a1:	nop    DWORD PTR [rax+0x0]
  40e4a8:	lea    rsi,[r15+0x1]
  40e4ac:	mov    rax,rbx
  40e4af:	sub    rax,rsi
  40e4b2:	cmp    rax,0x1
  40e4b6:	jle    40e4c5 <_start@@Base+0x8a95>
  40e4b8:	cmp    BYTE PTR [r15+0x1],0x20
  40e4bd:	jg     40e4d3 <_start@@Base+0x8aa3>
  40e4bf:	je     40e7e0 <_start@@Base+0x8db0>
  40e4c5:	mov    rdx,rbx
  40e4c8:	mov    rdi,rbp
  40e4cb:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40e4d0:	mov    rsi,rax
  40e4d3:	cmp    rbx,rsi
  40e4d6:	je     40e7f8 <_start@@Base+0x8dc8>
  40e4dc:	cmp    BYTE PTR [rsi],0x7d
  40e4df:	jne    40e130 <_start@@Base+0x8700>
  40e4e5:	lea    r14,[rsi+0x1]
  40e4e9:	mov    rax,rbx
  40e4ec:	sub    rax,r14
  40e4ef:	cmp    rax,0x1
  40e4f3:	jle    40e3a9 <_start@@Base+0x8979>
  40e4f9:	cmp    BYTE PTR [rsi+0x1],0x20
  40e4fd:	jg     40d3c0 <_start@@Base+0x7990>
  40e503:	jne    40e3a9 <_start@@Base+0x8979>
  40e509:	cmp    BYTE PTR [rsi+0x2],0x20
  40e50d:	jle    40e3a9 <_start@@Base+0x8979>
  40e513:	lea    r14,[rsi+0x2]
  40e517:	jmp    40d3c0 <_start@@Base+0x7990>
  40e51c:	nop    DWORD PTR [rax+0x0]
  40e520:	movsx  rcx,BYTE PTR [rsi+0x6]
  40e525:	shl    rcx,0x8
  40e529:	movsx  rdx,BYTE PTR [rsi+0x5]
  40e52e:	mov    rax,rdx
  40e531:	shl    rax,0x10
  40e535:	or     rcx,rax
  40e538:	movsx  rdx,BYTE PTR [rsi+0x4]
  40e53d:	mov    rax,rdx
  40e540:	shl    rax,0x18
  40e544:	or     rax,rcx
  40e547:	movsx  rdx,BYTE PTR [rsi+0x3]
  40e54c:	mov    rcx,rdx
  40e54f:	shl    rcx,0x20
  40e553:	or     rax,rcx
  40e556:	movsx  rdx,BYTE PTR [rsi+0x2]
  40e55b:	mov    rcx,rdx
  40e55e:	shl    rcx,0x28
  40e562:	or     rcx,rax
  40e565:	movsx  rdx,BYTE PTR [rsi+0x1]
  40e56a:	mov    rax,rdx
  40e56d:	shl    rax,0x30
  40e571:	or     rcx,rax
  40e574:	movsx  rdx,BYTE PTR [rsi]
  40e578:	mov    rax,rdx
  40e57b:	shl    rax,0x38
  40e57f:	or     rax,rcx
  40e582:	jmp    40e15b <_start@@Base+0x872b>
  40e587:	nop    WORD PTR [rax+rax*1+0x0]
  40e590:	xor    ecx,ecx
  40e592:	jmp    40e529 <_start@@Base+0x8af9>
  40e594:	nop    DWORD PTR [rax+0x0]
  40e598:	xor    ecx,ecx
  40e59a:	jmp    40e538 <_start@@Base+0x8b08>
  40e59c:	nop    DWORD PTR [rax+0x0]
  40e5a0:	xor    eax,eax
  40e5a2:	jmp    40e547 <_start@@Base+0x8b17>
  40e5a4:	nop    DWORD PTR [rax+0x0]
  40e5a8:	xor    eax,eax
  40e5aa:	jmp    40e556 <_start@@Base+0x8b26>
  40e5ac:	nop    DWORD PTR [rax+0x0]
  40e5b0:	xor    ecx,ecx
  40e5b2:	jmp    40e565 <_start@@Base+0x8b35>
  40e5b4:	nop    DWORD PTR [rax+0x0]
  40e5b8:	xor    ecx,ecx
  40e5ba:	jmp    40e574 <_start@@Base+0x8b44>
  40e5bc:	nop    DWORD PTR [rax+0x0]
  40e5c0:	movbe  rax,QWORD PTR [rsi+0x10]
  40e5c6:	jmp    40e44b <_start@@Base+0x8a1b>
  40e5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5d0:	cmp    BYTE PTR [rsi+0xf],0x22
  40e5d4:	jne    40e229 <_start@@Base+0x87f9>
  40e5da:	lea    rax,[rsi+0x10]
  40e5de:	mov    rdx,rbx
  40e5e1:	sub    rdx,rax
  40e5e4:	cmp    rdx,0x1
  40e5e8:	jle    40e5f6 <_start@@Base+0x8bc6>
  40e5ea:	cmp    BYTE PTR [rsi+0x10],0x20
  40e5ee:	jg     40e604 <_start@@Base+0x8bd4>
  40e5f0:	je     40eaa7 <_start@@Base+0x9077>
  40e5f6:	mov    rdx,rbx
  40e5f9:	mov    rsi,rax
  40e5fc:	mov    rdi,rbp
  40e5ff:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40e604:	cmp    rbx,rax
  40e607:	je     40e612 <_start@@Base+0x8be2>
  40e609:	cmp    BYTE PTR [rax],0x3a
  40e60c:	je     40eb18 <_start@@Base+0x90e8>
  40e612:	mov    ecx,0x4
  40e617:	mov    rdx,rbx
  40e61a:	mov    rsi,rax
  40e61d:	mov    rdi,rbp
  40e620:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e625:	mov    r14,rax
  40e628:	cmp    r15,r14
  40e62b:	je     40e229 <_start@@Base+0x87f9>
  40e631:	cmp    rbx,r14
  40e634:	mov    QWORD PTR [rsp+0x48],0x0
  40e63d:	mov    QWORD PTR [rsp+0x50],0x0
  40e646:	mov    DWORD PTR [rsp+0x3c],0x0
  40e64e:	je     40e870 <_start@@Base+0x8e40>
  40e654:	mov    rcx,QWORD PTR [rsp+0x8]
  40e659:	mov    r8,r12
  40e65c:	mov    rdx,rbx
  40e65f:	mov    rsi,r14
  40e662:	mov    rdi,rbp
  40e665:	call   41c710 <flatcc_json_parser_integer@@Base>
  40e66a:	cmp    r14,rax
  40e66d:	mov    r15,rax
  40e670:	je     40e870 <_start@@Base+0x8e40>
  40e676:	mov    r8d,DWORD PTR [rsp+0x3c]
  40e67b:	mov    rax,QWORD PTR [rsp+0x50]
  40e680:	test   r8d,r8d
  40e683:	je     40e6e0 <_start@@Base+0x8cb0>
  40e685:	movabs rdx,0x8000000000000000
  40e68f:	mov    ecx,0x8
  40e694:	cmp    rax,rdx
  40e697:	ja     40e818 <_start@@Base+0x8de8>
  40e69d:	neg    rax
  40e6a0:	mov    QWORD PTR [rsp+0x48],rax
  40e6a5:	test   rax,rax
  40e6a8:	jne    40e6b4 <_start@@Base+0x8c84>
  40e6aa:	test   BYTE PTR [rbp+0x10],0x2
  40e6ae:	je     40e23a <_start@@Base+0x880a>
  40e6b4:	mov    rdi,QWORD PTR [rbp+0x0]
  40e6b8:	xor    esi,esi
  40e6ba:	mov    ecx,0x8
  40e6bf:	mov    edx,0x8
  40e6c4:	call   418180 <flatcc_builder_table_add@@Base>
  40e6c9:	test   rax,rax
  40e6cc:	je     40d5b0 <_start@@Base+0x7b80>
  40e6d2:	mov    rdx,QWORD PTR [rsp+0x48]
  40e6d7:	mov    QWORD PTR [rax],rdx
  40e6da:	jmp    40e23a <_start@@Base+0x880a>
  40e6df:	nop
  40e6e0:	test   rax,rax
  40e6e3:	js     40e813 <_start@@Base+0x8de3>
  40e6e9:	mov    QWORD PTR [rsp+0x48],rax
  40e6ee:	jmp    40e6a5 <_start@@Base+0x8c75>
  40e6f0:	cmp    BYTE PTR [r15+0x2],0x20
  40e6f5:	jle    40e3a9 <_start@@Base+0x8979>
  40e6fb:	lea    r14,[r15+0x2]
  40e6ff:	jmp    40d3c0 <_start@@Base+0x7990>
  40e704:	nop    DWORD PTR [rax+0x0]
  40e708:	mov    ecx,0x5
  40e70d:	mov    rdx,rbx
  40e710:	mov    rsi,r14
  40e713:	mov    rdi,rbp
  40e716:	call   409ba0 <_start@@Base+0x4170>
  40e71b:	cmp    r14,rax
  40e71e:	mov    r10,rax
  40e721:	je     40e46a <_start@@Base+0x8a3a>
  40e727:	cmp    rbx,rax
  40e72a:	mov    DWORD PTR [rsp+0x3c],0x0
  40e732:	mov    QWORD PTR [rsp+0x50],0x0
  40e73b:	mov    DWORD PTR [rsp+0x48],0x0
  40e743:	je     40e908 <_start@@Base+0x8ed8>
  40e749:	mov    rcx,QWORD PTR [rsp]
  40e74d:	mov    r8,r12
  40e750:	mov    rdx,rbx
  40e753:	mov    rsi,rax
  40e756:	mov    rdi,rbp
  40e759:	mov    QWORD PTR [rsp+0x10],rax
  40e75e:	call   41c710 <flatcc_json_parser_integer@@Base>
  40e763:	mov    r10,QWORD PTR [rsp+0x10]
  40e768:	mov    r15,rax
  40e76b:	cmp    r10,rax
  40e76e:	je     40e908 <_start@@Base+0x8ed8>
  40e774:	mov    r9d,DWORD PTR [rsp+0x48]
  40e779:	mov    ecx,0x8
  40e77e:	test   r9d,r9d
  40e781:	jne    40e842 <_start@@Base+0x8e12>
  40e787:	mov    rax,QWORD PTR [rsp+0x50]
  40e78c:	mov    edx,0xffffffff
  40e791:	cmp    rax,rdx
  40e794:	ja     40e838 <_start@@Base+0x8e08>
  40e79a:	mov    edx,eax
  40e79c:	mov    DWORD PTR [rsp+0x3c],eax
  40e7a0:	test   edx,edx
  40e7a2:	jne    40e7ae <_start@@Base+0x8d7e>
  40e7a4:	test   BYTE PTR [rbp+0x10],0x2
  40e7a8:	je     40e23a <_start@@Base+0x880a>
  40e7ae:	mov    rdi,QWORD PTR [rbp+0x0]
  40e7b2:	mov    ecx,0x4
  40e7b7:	mov    edx,0x4
  40e7bc:	mov    esi,0x1
  40e7c1:	call   418180 <flatcc_builder_table_add@@Base>
  40e7c6:	test   rax,rax
  40e7c9:	je     40d5b0 <_start@@Base+0x7b80>
  40e7cf:	mov    edx,DWORD PTR [rsp+0x3c]
  40e7d3:	mov    DWORD PTR [rax],edx
  40e7d5:	jmp    40e23a <_start@@Base+0x880a>
  40e7da:	nop    WORD PTR [rax+rax*1+0x0]
  40e7e0:	cmp    BYTE PTR [r15+0x2],0x20
  40e7e5:	jle    40e4c5 <_start@@Base+0x8a95>
  40e7eb:	lea    rsi,[r15+0x2]
  40e7ef:	cmp    rbx,rsi
  40e7f2:	jne    40e4dc <_start@@Base+0x8aac>
  40e7f8:	mov    ecx,0xa
  40e7fd:	mov    rdx,rbx
  40e800:	mov    rsi,rbx
  40e803:	mov    rdi,rbp
  40e806:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e80b:	mov    r14,rax
  40e80e:	jmp    40d3c0 <_start@@Base+0x7990>
  40e813:	mov    ecx,0x7
  40e818:	mov    rsi,r15
  40e81b:	mov    rdx,rbx
  40e81e:	mov    rdi,rbp
  40e821:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e826:	cmp    r14,rax
  40e829:	mov    r15,rax
  40e82c:	je     40e870 <_start@@Base+0x8e40>
  40e82e:	mov    rax,QWORD PTR [rsp+0x48]
  40e833:	jmp    40e6a5 <_start@@Base+0x8c75>
  40e838:	mov    QWORD PTR [rsp+0x10],r10
  40e83d:	mov    ecx,0x7
  40e842:	mov    rsi,r15
  40e845:	mov    rdx,rbx
  40e848:	mov    rdi,rbp
  40e84b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e850:	mov    r10,QWORD PTR [rsp+0x10]
  40e855:	mov    r15,rax
  40e858:	cmp    r10,rax
  40e85b:	je     40e908 <_start@@Base+0x8ed8>
  40e861:	mov    edx,DWORD PTR [rsp+0x3c]
  40e865:	jmp    40e7a0 <_start@@Base+0x8d70>
  40e86a:	nop    WORD PTR [rax+rax*1+0x0]
  40e870:	mov    r8,QWORD PTR [rsp]
  40e874:	lea    rcx,[rip+0x2aac5]        # 439340 <__data_start@@Base+0x280>
  40e87b:	mov    rdx,rbx
  40e87e:	mov    rsi,r14
  40e881:	mov    rdi,rbp
  40e884:	call   408f90 <_start@@Base+0x3560>
  40e889:	cmp    rax,r14
  40e88c:	mov    r15,rax
  40e88f:	je     40d5b0 <_start@@Base+0x7b80>
  40e895:	cmp    rbx,rax
  40e898:	jne    40e82e <_start@@Base+0x8dfe>
  40e89a:	jmp    40d5b0 <_start@@Base+0x7b80>
  40e89f:	mov    QWORD PTR [rsp+0x10],r10
  40e8a4:	mov    ecx,0x7
  40e8a9:	mov    rsi,r15
  40e8ac:	mov    rdx,rbx
  40e8af:	mov    rdi,rbp
  40e8b2:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e8b7:	mov    r10,QWORD PTR [rsp+0x10]
  40e8bc:	mov    r15,rax
  40e8bf:	cmp    r10,rax
  40e8c2:	je     40e9a0 <_start@@Base+0x8f70>
  40e8c8:	mov    rax,QWORD PTR [rsp+0x48]
  40e8cd:	jmp    40d57f <_start@@Base+0x7b4f>
  40e8d2:	mov    QWORD PTR [rsp+0x10],r10
  40e8d7:	mov    ecx,0x7
  40e8dc:	mov    rsi,r15
  40e8df:	mov    rdx,rbx
  40e8e2:	mov    rdi,rbp
  40e8e5:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40e8ea:	mov    r10,QWORD PTR [rsp+0x10]
  40e8ef:	mov    r15,rax
  40e8f2:	cmp    r10,rax
  40e8f5:	je     40e9e0 <_start@@Base+0x8fb0>
  40e8fb:	mov    rax,QWORD PTR [rsp+0x48]
  40e900:	jmp    40dd8d <_start@@Base+0x835d>
  40e905:	nop    DWORD PTR [rax]
  40e908:	mov    r8,QWORD PTR [rsp+0x8]
  40e90d:	lea    rcx,[rip+0x2aa4c]        # 439360 <__data_start@@Base+0x2a0>
  40e914:	mov    rsi,r10
  40e917:	mov    rdx,rbx
  40e91a:	mov    rdi,rbp
  40e91d:	mov    QWORD PTR [rsp+0x10],r10
  40e922:	call   409370 <_start@@Base+0x3940>
  40e927:	mov    r10,QWORD PTR [rsp+0x10]
  40e92c:	mov    r15,rax
  40e92f:	cmp    rax,r10
  40e932:	je     40d5b0 <_start@@Base+0x7b80>
  40e938:	cmp    rbx,rax
  40e93b:	jne    40e861 <_start@@Base+0x8e31>
  40e941:	jmp    40d5b0 <_start@@Base+0x7b80>
  40e946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e950:	lea    rsi,[r14+0x1]
  40e954:	mov    rdx,rbx
  40e957:	mov    rdi,rbp
  40e95a:	mov    DWORD PTR [rsp+0x34],0x0
  40e962:	call   406b20 <_start@@Base+0x10f0>
  40e967:	mov    r14,rax
  40e96a:	mov    eax,DWORD PTR [rsp+0x34]
  40e96e:	jmp    40d620 <_start@@Base+0x7bf0>
  40e973:	lea    rsi,[r12+0x1]
  40e978:	mov    rdx,rbx
  40e97b:	mov    rdi,rbp
  40e97e:	mov    DWORD PTR [rsp+0x28],0x0
  40e986:	call   406b20 <_start@@Base+0x10f0>
  40e98b:	mov    r12,rax
  40e98e:	mov    eax,DWORD PTR [rsp+0x28]
  40e992:	jmp    40c2e0 <_start@@Base+0x68b0>
  40e997:	nop    WORD PTR [rax+rax*1+0x0]
  40e9a0:	mov    r8,QWORD PTR [rsp]
  40e9a4:	lea    rcx,[rip+0x2aa35]        # 4393e0 <__data_start@@Base+0x320>
  40e9ab:	mov    rsi,r10
  40e9ae:	mov    rdx,rbx
  40e9b1:	mov    rdi,rbp
  40e9b4:	mov    QWORD PTR [rsp+0x10],r10
  40e9b9:	call   408f90 <_start@@Base+0x3560>
  40e9be:	mov    r10,QWORD PTR [rsp+0x10]
  40e9c3:	mov    r15,rax
  40e9c6:	cmp    rax,r10
  40e9c9:	je     40d5b0 <_start@@Base+0x7b80>
  40e9cf:	cmp    rbx,rax
  40e9d2:	jne    40e8c8 <_start@@Base+0x8e98>
  40e9d8:	jmp    40d5b0 <_start@@Base+0x7b80>
  40e9dd:	nop    DWORD PTR [rax]
  40e9e0:	mov    r8,QWORD PTR [rsp]
  40e9e4:	lea    rcx,[rip+0x2a9b5]        # 4393a0 <__data_start@@Base+0x2e0>
  40e9eb:	mov    rsi,r10
  40e9ee:	mov    rdx,rbx
  40e9f1:	mov    rdi,rbp
  40e9f4:	mov    QWORD PTR [rsp+0x10],r10
  40e9f9:	call   408f90 <_start@@Base+0x3560>
  40e9fe:	mov    r10,QWORD PTR [rsp+0x10]
  40ea03:	mov    r15,rax
  40ea06:	cmp    rax,r10
  40ea09:	je     40d5b0 <_start@@Base+0x7b80>
  40ea0f:	cmp    rbx,rax
  40ea12:	jne    40e8fb <_start@@Base+0x8ecb>
  40ea18:	jmp    40d5b0 <_start@@Base+0x7b80>
  40ea1d:	nop    DWORD PTR [rax]
  40ea20:	mov    ecx,0xa
  40ea25:	mov    rdx,rbx
  40ea28:	mov    rsi,rbx
  40ea2b:	mov    rdi,rbp
  40ea2e:	mov    DWORD PTR [rsp+0x34],0x0
  40ea36:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ea3b:	mov    r14,rax
  40ea3e:	mov    eax,DWORD PTR [rsp+0x34]
  40ea42:	jmp    40d620 <_start@@Base+0x7bf0>
  40ea47:	lea    rcx,[rip+0x2a9b2]        # 439400 <__data_start@@Base+0x340>
  40ea4e:	mov    r8,r12
  40ea51:	mov    rdx,rbx
  40ea54:	mov    rsi,rax
  40ea57:	mov    rdi,rbp
  40ea5a:	call   408f90 <_start@@Base+0x3560>
  40ea5f:	cmp    r15,rax
  40ea62:	mov    r15,rax
  40ea65:	je     40d5b0 <_start@@Base+0x7b80>
  40ea6b:	cmp    rbx,rax
  40ea6e:	jne    40dc9e <_start@@Base+0x826e>
  40ea74:	jmp    40d5b0 <_start@@Base+0x7b80>
  40ea79:	nop    DWORD PTR [rax+0x0]
  40ea80:	mov    ecx,0xa
  40ea85:	mov    rdx,rbx
  40ea88:	mov    rsi,rbx
  40ea8b:	mov    rdi,rbp
  40ea8e:	mov    DWORD PTR [rsp+0x28],0x0
  40ea96:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ea9b:	mov    r12,rax
  40ea9e:	mov    eax,DWORD PTR [rsp+0x28]
  40eaa2:	jmp    40c2e0 <_start@@Base+0x68b0>
  40eaa7:	cmp    BYTE PTR [rsi+0x11],0x20
  40eaab:	jle    40e5f6 <_start@@Base+0x8bc6>
  40eab1:	lea    rax,[rsi+0x11]
  40eab5:	jmp    40e604 <_start@@Base+0x8bd4>
  40eaba:	lea    rcx,[rip+0x2a95f]        # 439420 <__data_start@@Base+0x360>
  40eac1:	mov    r8,r12
  40eac4:	mov    rdx,rbx
  40eac7:	mov    rsi,rax
  40eaca:	mov    rdi,rbp
  40eacd:	call   409370 <_start@@Base+0x3940>
  40ead2:	cmp    r15,rax
  40ead5:	mov    r15,rax
  40ead8:	je     40d5b0 <_start@@Base+0x7b80>
  40eade:	cmp    rbx,rax
  40eae1:	jne    40da78 <_start@@Base+0x8048>
  40eae7:	jmp    40d5b0 <_start@@Base+0x7b80>
  40eaec:	nop    DWORD PTR [rax+0x0]
  40eaf0:	cmp    BYTE PTR [r14+0x2],0x20
  40eaf5:	jle    40df16 <_start@@Base+0x84e6>
  40eafb:	add    r14,0x2
  40eaff:	jmp    40ce7b <_start@@Base+0x744b>
  40eb04:	cmp    BYTE PTR [r13+0x2],0x20
  40eb09:	jle    40ded6 <_start@@Base+0x84a6>
  40eb0f:	add    r13,0x2
  40eb13:	jmp    40c9fb <_start@@Base+0x6fcb>
  40eb18:	lea    rsi,[rax+0x1]
  40eb1c:	mov    rdx,rbx
  40eb1f:	mov    rdi,rbp
  40eb22:	call   406b20 <_start@@Base+0x10f0>
  40eb27:	mov    r14,rax
  40eb2a:	jmp    40e628 <_start@@Base+0x8bf8>
  40eb2f:	cmp    BYTE PTR [r14+0x2],0x20
  40eb34:	jle    40e0f9 <_start@@Base+0x86c9>
  40eb3a:	lea    rsi,[r14+0x2]
  40eb3e:	jmp    40e107 <_start@@Base+0x86d7>
  40eb43:	lea    rcx,[rip+0x2a836]        # 439380 <__data_start@@Base+0x2c0>
  40eb4a:	mov    r8,r12
  40eb4d:	mov    rdx,rbx
  40eb50:	mov    rsi,rax
  40eb53:	mov    rdi,rbp
  40eb56:	call   409370 <_start@@Base+0x3940>
  40eb5b:	cmp    r15,rax
  40eb5e:	mov    r14,rax
  40eb61:	je     40ce90 <_start@@Base+0x7460>
  40eb67:	cmp    rbx,rax
  40eb6a:	je     40ce90 <_start@@Base+0x7460>
  40eb70:	mov    r15,rax
  40eb73:	jmp    40d870 <_start@@Base+0x7e40>
  40eb78:	lea    rcx,[rip+0x2a841]        # 4393c0 <__data_start@@Base+0x300>
  40eb7f:	mov    r8,r12
  40eb82:	mov    rdx,rbx
  40eb85:	mov    rsi,rax
  40eb88:	mov    rdi,rbp
  40eb8b:	call   409370 <_start@@Base+0x3940>
  40eb90:	cmp    r15,rax
  40eb93:	mov    r14,rax
  40eb96:	je     40ce90 <_start@@Base+0x7460>
  40eb9c:	cmp    rbx,rax
  40eb9f:	je     40ce90 <_start@@Base+0x7460>
  40eba5:	mov    r15,rax
  40eba8:	jmp    40e046 <_start@@Base+0x8616>
  40ebad:	add    rsi,0x1
  40ebb1:	mov    rdx,rbx
  40ebb4:	mov    rdi,rbp
  40ebb7:	call   406b20 <_start@@Base+0x10f0>
  40ebbc:	mov    r14,rax
  40ebbf:	jmp    40d3c0 <_start@@Base+0x7990>
  40ebc4:	call   405070 <__stack_chk_fail@plt>
  40ebc9:	nop    DWORD PTR [rax+0x0]
  40ebd0:	push   r13
  40ebd2:	push   r12
  40ebd4:	mov    r13,rsi
  40ebd7:	push   rbp
  40ebd8:	push   rbx
  40ebd9:	mov    rbp,rdi
  40ebdc:	xor    esi,esi
  40ebde:	mov    rbx,rdx
  40ebe1:	mov    r12,rcx
  40ebe4:	sub    rsp,0x8
  40ebe8:	mov    rdi,QWORD PTR [rdi]
  40ebeb:	mov    DWORD PTR [rcx],0x0
  40ebf1:	call   4168e0 <flatcc_builder_start_table@@Base>
  40ebf6:	test   eax,eax
  40ebf8:	jne    40ec27 <_start@@Base+0x91f7>
  40ebfa:	cmp    r13,rbx
  40ebfd:	je     40ec06 <_start@@Base+0x91d6>
  40ebff:	cmp    BYTE PTR [r13+0x0],0x7b
  40ec04:	je     40ec70 <_start@@Base+0x9240>
  40ec06:	mov    rsi,r13
  40ec09:	mov    ecx,0x15
  40ec0e:	mov    rdx,rbx
  40ec11:	mov    rdi,rbp
  40ec14:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ec19:	mov    r13,rax
  40ec1c:	nop    DWORD PTR [rax+0x0]
  40ec20:	mov    eax,DWORD PTR [rbp+0x1c]
  40ec23:	test   eax,eax
  40ec25:	je     40ec48 <_start@@Base+0x9218>
  40ec27:	add    rsp,0x8
  40ec2b:	mov    rdx,rbx
  40ec2e:	mov    rsi,r13
  40ec31:	pop    rbx
  40ec32:	mov    rdi,rbp
  40ec35:	mov    ecx,0x21
  40ec3a:	pop    rbp
  40ec3b:	pop    r12
  40ec3d:	pop    r13
  40ec3f:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  40ec44:	nop    DWORD PTR [rax+0x0]
  40ec48:	mov    rdi,QWORD PTR [rbp+0x0]
  40ec4c:	call   4172a0 <flatcc_builder_end_table@@Base>
  40ec51:	test   eax,eax
  40ec53:	mov    DWORD PTR [r12],eax
  40ec57:	je     40ec27 <_start@@Base+0x91f7>
  40ec59:	add    rsp,0x8
  40ec5d:	mov    rax,r13
  40ec60:	pop    rbx
  40ec61:	pop    rbp
  40ec62:	pop    r12
  40ec64:	pop    r13
  40ec66:	ret    
  40ec67:	nop    WORD PTR [rax+rax*1+0x0]
  40ec70:	lea    rsi,[r13+0x1]
  40ec74:	mov    rax,rbx
  40ec77:	sub    rax,rsi
  40ec7a:	cmp    rax,0x1
  40ec7e:	jle    40ec8d <_start@@Base+0x925d>
  40ec80:	cmp    BYTE PTR [r13+0x1],0x20
  40ec85:	jg     40ec9b <_start@@Base+0x926b>
  40ec87:	je     40ee44 <_start@@Base+0x9414>
  40ec8d:	mov    rdx,rbx
  40ec90:	mov    rdi,rbp
  40ec93:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ec98:	mov    rsi,rax
  40ec9b:	cmp    rbx,rsi
  40ec9e:	je     40ecb0 <_start@@Base+0x9280>
  40eca0:	cmp    BYTE PTR [rsi],0x7d
  40eca3:	je     40ee73 <_start@@Base+0x9443>
  40eca9:	nop    DWORD PTR [rax+0x0]
  40ecb0:	cmp    rbx,rsi
  40ecb3:	je     40ecbe <_start@@Base+0x928e>
  40ecb5:	cmp    BYTE PTR [rsi],0x22
  40ecb8:	jne    40ed28 <_start@@Base+0x92f8>
  40ecba:	add    rsi,0x1
  40ecbe:	mov    rdx,rbx
  40ecc1:	mov    rdi,rbp
  40ecc4:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40ecc9:	mov    rdx,rbx
  40eccc:	sub    rdx,rax
  40eccf:	cmp    rdx,0x1
  40ecd3:	jle    40ece0 <_start@@Base+0x92b0>
  40ecd5:	cmp    BYTE PTR [rax],0x20
  40ecd8:	jg     40ecee <_start@@Base+0x92be>
  40ecda:	je     40ed80 <_start@@Base+0x9350>
  40ece0:	mov    rdx,rbx
  40ece3:	mov    rsi,rax
  40ece6:	mov    rdi,rbp
  40ece9:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ecee:	cmp    rbx,rax
  40ecf1:	je     40eda0 <_start@@Base+0x9370>
  40ecf7:	movzx  edx,BYTE PTR [rax]
  40ecfa:	cmp    dl,0x2c
  40ecfd:	je     40edb0 <_start@@Base+0x9380>
  40ed03:	cmp    dl,0x7d
  40ed06:	je     40ed40 <_start@@Base+0x9310>
  40ed08:	mov    ecx,0xa
  40ed0d:	mov    rdx,rbx
  40ed10:	mov    rsi,rax
  40ed13:	mov    rdi,rbp
  40ed16:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ed1b:	mov    r13,rax
  40ed1e:	jmp    40ec20 <_start@@Base+0x91f0>
  40ed23:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed28:	mov    ecx,0x5
  40ed2d:	mov    rdx,rbx
  40ed30:	mov    rdi,rbp
  40ed33:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ed38:	mov    rsi,rax
  40ed3b:	jmp    40ecbe <_start@@Base+0x928e>
  40ed3d:	nop    DWORD PTR [rax]
  40ed40:	lea    r13,[rax+0x1]
  40ed44:	mov    rdx,rbx
  40ed47:	sub    rdx,r13
  40ed4a:	cmp    rdx,0x1
  40ed4e:	jle    40ed60 <_start@@Base+0x9330>
  40ed50:	cmp    BYTE PTR [rax+0x1],0x20
  40ed54:	jg     40ec20 <_start@@Base+0x91f0>
  40ed5a:	je     40ee20 <_start@@Base+0x93f0>
  40ed60:	mov    rsi,r13
  40ed63:	mov    rdx,rbx
  40ed66:	mov    rdi,rbp
  40ed69:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ed6e:	mov    r13,rax
  40ed71:	jmp    40ec20 <_start@@Base+0x91f0>
  40ed76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed80:	cmp    BYTE PTR [rax+0x1],0x20
  40ed84:	jle    40ece0 <_start@@Base+0x92b0>
  40ed8a:	add    rax,0x1
  40ed8e:	cmp    rbx,rax
  40ed91:	jne    40ecf7 <_start@@Base+0x92c7>
  40ed97:	nop    WORD PTR [rax+rax*1+0x0]
  40eda0:	mov    r13,rbx
  40eda3:	jmp    40ec20 <_start@@Base+0x91f0>
  40eda8:	nop    DWORD PTR [rax+rax*1+0x0]
  40edb0:	lea    rsi,[rax+0x1]
  40edb4:	mov    rdx,rbx
  40edb7:	sub    rdx,rsi
  40edba:	cmp    rdx,0x1
  40edbe:	jle    40edc8 <_start@@Base+0x9398>
  40edc0:	cmp    BYTE PTR [rax+0x1],0x20
  40edc4:	jg     40edd6 <_start@@Base+0x93a6>
  40edc6:	je     40ee38 <_start@@Base+0x9408>
  40edc8:	mov    rdx,rbx
  40edcb:	mov    rdi,rbp
  40edce:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40edd3:	mov    rsi,rax
  40edd6:	cmp    rbx,rsi
  40edd9:	je     40ee58 <_start@@Base+0x9428>
  40eddb:	cmp    BYTE PTR [rsi],0x7d
  40edde:	jne    40ecb0 <_start@@Base+0x9280>
  40ede4:	lea    r13,[rsi+0x1]
  40ede8:	mov    rax,rbx
  40edeb:	sub    rax,r13
  40edee:	cmp    rax,0x1
  40edf2:	jle    40ed60 <_start@@Base+0x9330>
  40edf8:	cmp    BYTE PTR [rsi+0x1],0x20
  40edfc:	jg     40ec20 <_start@@Base+0x91f0>
  40ee02:	jne    40ed60 <_start@@Base+0x9330>
  40ee08:	cmp    BYTE PTR [rsi+0x2],0x20
  40ee0c:	jle    40ed60 <_start@@Base+0x9330>
  40ee12:	lea    r13,[rsi+0x2]
  40ee16:	jmp    40ec20 <_start@@Base+0x91f0>
  40ee1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee20:	cmp    BYTE PTR [rax+0x2],0x20
  40ee24:	jle    40ed60 <_start@@Base+0x9330>
  40ee2a:	lea    r13,[rax+0x2]
  40ee2e:	jmp    40ec20 <_start@@Base+0x91f0>
  40ee33:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee38:	cmp    BYTE PTR [rax+0x2],0x20
  40ee3c:	jle    40edc8 <_start@@Base+0x9398>
  40ee3e:	lea    rsi,[rax+0x2]
  40ee42:	jmp    40edd6 <_start@@Base+0x93a6>
  40ee44:	cmp    BYTE PTR [r13+0x2],0x20
  40ee49:	jle    40ec8d <_start@@Base+0x925d>
  40ee4f:	lea    rsi,[r13+0x2]
  40ee53:	jmp    40ec9b <_start@@Base+0x926b>
  40ee58:	mov    ecx,0xa
  40ee5d:	mov    rdx,rbx
  40ee60:	mov    rsi,rbx
  40ee63:	mov    rdi,rbp
  40ee66:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40ee6b:	mov    r13,rax
  40ee6e:	jmp    40ec20 <_start@@Base+0x91f0>
  40ee73:	add    rsi,0x1
  40ee77:	mov    rdx,rbx
  40ee7a:	mov    rdi,rbp
  40ee7d:	call   406b20 <_start@@Base+0x10f0>
  40ee82:	mov    r13,rax
  40ee85:	jmp    40ec20 <_start@@Base+0x91f0>
  40ee8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ee90:	push   r15
  40ee92:	push   r14
  40ee94:	mov    r15,rdx
  40ee97:	push   r13
  40ee99:	push   r12
  40ee9b:	push   rbp
  40ee9c:	push   rbx
  40ee9d:	mov    rbx,rdi
  40eea0:	sub    rsp,0x48
  40eea4:	mov    rax,QWORD PTR fs:0x28
  40eead:	mov    QWORD PTR [rsp+0x38],rax
  40eeb2:	xor    eax,eax
  40eeb4:	cmp    rsi,rdx
  40eeb7:	je     40eebe <_start@@Base+0x948e>
  40eeb9:	cmp    BYTE PTR [rsi],0x7b
  40eebc:	je     40eefe <_start@@Base+0x94ce>
  40eebe:	mov    rdx,r15
  40eec1:	mov    ecx,0x15
  40eec6:	mov    rdi,rbx
  40eec9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40eece:	mov    r15,rax
  40eed1:	nop    DWORD PTR [rax+0x0]
  40eed8:	mov    rdi,QWORD PTR [rsp+0x38]
  40eedd:	xor    rdi,QWORD PTR fs:0x28
  40eee6:	mov    rax,r15
  40eee9:	jne    40f5ae <_start@@Base+0x9b7e>
  40eeef:	add    rsp,0x48
  40eef3:	pop    rbx
  40eef4:	pop    rbp
  40eef5:	pop    r12
  40eef7:	pop    r13
  40eef9:	pop    r14
  40eefb:	pop    r15
  40eefd:	ret    
  40eefe:	lea    r8,[rsi+0x1]
  40ef02:	mov    rax,rdx
  40ef05:	mov    r12,rcx
  40ef08:	sub    rax,r8
  40ef0b:	cmp    rax,0x1
  40ef0f:	jle    40ef1d <_start@@Base+0x94ed>
  40ef11:	cmp    BYTE PTR [rsi+0x1],0x20
  40ef15:	jg     40ef2e <_start@@Base+0x94fe>
  40ef17:	je     40f584 <_start@@Base+0x9b54>
  40ef1d:	mov    rsi,r8
  40ef20:	mov    rdx,r15
  40ef23:	mov    rdi,rbx
  40ef26:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40ef2b:	mov    r8,rax
  40ef2e:	cmp    r15,r8
  40ef31:	je     40ef3d <_start@@Base+0x950d>
  40ef33:	cmp    BYTE PTR [r8],0x7d
  40ef37:	je     40f597 <_start@@Base+0x9b67>
  40ef3d:	lea    rax,[rsp+0x2a]
  40ef42:	lea    r14,[rsp+0x30]
  40ef47:	movabs rbp,0xff00000000000000
  40ef51:	mov    QWORD PTR [rsp+0x18],rax
  40ef56:	lea    rax,[rsp+0x2c]
  40ef5b:	mov    QWORD PTR [rsp+0x8],rax
  40ef60:	cmp    r15,r8
  40ef63:	je     40efc0 <_start@@Base+0x9590>
  40ef65:	cmp    BYTE PTR [r8],0x22
  40ef69:	jne    40f030 <_start@@Base+0x9600>
  40ef6f:	add    r8,0x1
  40ef73:	mov    rcx,r15
  40ef76:	sub    rcx,r8
  40ef79:	cmp    rcx,0x7
  40ef7d:	jbe    40f056 <_start@@Base+0x9626>
  40ef83:	movbe  rax,QWORD PTR [r8]
  40ef88:	and    rax,rbp
  40ef8b:	movabs rdx,0x6200000000000000
  40ef95:	cmp    rax,rdx
  40ef98:	je     40f070 <_start@@Base+0x9640>
  40ef9e:	movabs rdx,0x6100000000000000
  40efa8:	cmp    rax,rdx
  40efab:	jne    40efc0 <_start@@Base+0x9590>
  40efad:	cmp    rcx,0x1
  40efb1:	jle    40efc0 <_start@@Base+0x9590>
  40efb3:	cmp    BYTE PTR [r8+0x1],0x22
  40efb8:	je     40f300 <_start@@Base+0x98d0>
  40efbe:	xchg   ax,ax
  40efc0:	mov    rdx,r15
  40efc3:	mov    rsi,r8
  40efc6:	mov    rdi,rbx
  40efc9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40efce:	mov    rdx,r15
  40efd1:	sub    rdx,rax
  40efd4:	cmp    rdx,0x1
  40efd8:	jle    40efe5 <_start@@Base+0x95b5>
  40efda:	cmp    BYTE PTR [rax],0x20
  40efdd:	jg     40eff3 <_start@@Base+0x95c3>
  40efdf:	je     40f230 <_start@@Base+0x9800>
  40efe5:	mov    rdx,r15
  40efe8:	mov    rsi,rax
  40efeb:	mov    rdi,rbx
  40efee:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40eff3:	cmp    r15,rax
  40eff6:	je     40eed8 <_start@@Base+0x94a8>
  40effc:	movzx  edx,BYTE PTR [rax]
  40efff:	cmp    dl,0x2c
  40f002:	je     40f248 <_start@@Base+0x9818>
  40f008:	cmp    dl,0x7d
  40f00b:	mov    ecx,0xa
  40f010:	je     40f160 <_start@@Base+0x9730>
  40f016:	mov    rdx,r15
  40f019:	mov    rsi,rax
  40f01c:	mov    rdi,rbx
  40f01f:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f024:	mov    r15,rax
  40f027:	jmp    40eed8 <_start@@Base+0x94a8>
  40f02c:	nop    DWORD PTR [rax+0x0]
  40f030:	mov    ecx,0x5
  40f035:	mov    rsi,r8
  40f038:	mov    rdx,r15
  40f03b:	mov    rdi,rbx
  40f03e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f043:	mov    rcx,r15
  40f046:	mov    r8,rax
  40f049:	sub    rcx,rax
  40f04c:	cmp    rcx,0x7
  40f050:	ja     40ef83 <_start@@Base+0x9553>
  40f056:	lea    rdx,[rip+0x1c18f]        # 42b1ec <_IO_stdin_used@@Base+0x1ec>
  40f05d:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40f061:	add    rax,rdx
  40f064:	jmp    rax
  40f066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f070:	cmp    rcx,0x1
  40f074:	jle    40efc0 <_start@@Base+0x9590>
  40f07a:	cmp    BYTE PTR [r8+0x1],0x22
  40f07f:	jne    40efc0 <_start@@Base+0x9590>
  40f085:	lea    rsi,[r8+0x2]
  40f089:	mov    rax,r15
  40f08c:	sub    rax,rsi
  40f08f:	cmp    rax,0x1
  40f093:	jle    40f0a2 <_start@@Base+0x9672>
  40f095:	cmp    BYTE PTR [r8+0x2],0x20
  40f09a:	jg     40f0ba <_start@@Base+0x968a>
  40f09c:	je     40f504 <_start@@Base+0x9ad4>
  40f0a2:	mov    rdx,r15
  40f0a5:	mov    rdi,rbx
  40f0a8:	mov    QWORD PTR [rsp+0x10],r8
  40f0ad:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40f0b2:	mov    r8,QWORD PTR [rsp+0x10]
  40f0b7:	mov    rsi,rax
  40f0ba:	cmp    r15,rsi
  40f0bd:	je     40f0c8 <_start@@Base+0x9698>
  40f0bf:	cmp    BYTE PTR [rsi],0x3a
  40f0c2:	je     40f554 <_start@@Base+0x9b24>
  40f0c8:	mov    ecx,0x4
  40f0cd:	mov    rdx,r15
  40f0d0:	mov    rdi,rbx
  40f0d3:	mov    QWORD PTR [rsp+0x10],r8
  40f0d8:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f0dd:	mov    r8,QWORD PTR [rsp+0x10]
  40f0e2:	mov    r13,rax
  40f0e5:	cmp    r13,r8
  40f0e8:	je     40efc0 <_start@@Base+0x9590>
  40f0ee:	cmp    r15,r13
  40f0f1:	mov    BYTE PTR [rsp+0x2a],0x0
  40f0f6:	mov    QWORD PTR [rsp+0x30],0x0
  40f0ff:	mov    DWORD PTR [rsp+0x2c],0x0
  40f107:	je     40f4c0 <_start@@Base+0x9a90>
  40f10d:	mov    rcx,QWORD PTR [rsp+0x8]
  40f112:	mov    r8,r14
  40f115:	mov    rdx,r15
  40f118:	mov    rsi,r13
  40f11b:	mov    rdi,rbx
  40f11e:	call   41c710 <flatcc_json_parser_integer@@Base>
  40f123:	cmp    r13,rax
  40f126:	je     40f4c0 <_start@@Base+0x9a90>
  40f12c:	mov    r8d,DWORD PTR [rsp+0x2c]
  40f131:	mov    rdx,QWORD PTR [rsp+0x30]
  40f136:	test   r8d,r8d
  40f139:	mov    ecx,edx
  40f13b:	je     40f2d0 <_start@@Base+0x98a0>
  40f141:	neg    ecx
  40f143:	cmp    rdx,0x80
  40f14a:	ja     40f430 <_start@@Base+0x9a00>
  40f150:	mov    BYTE PTR [r12+0x2],cl
  40f155:	jmp    40efce <_start@@Base+0x959e>
  40f15a:	nop    WORD PTR [rax+rax*1+0x0]
  40f160:	lea    rsi,[rax+0x1]
  40f164:	mov    rdx,r15
  40f167:	sub    rdx,rsi
  40f16a:	cmp    rdx,0x1
  40f16e:	jle    40f180 <_start@@Base+0x9750>
  40f170:	cmp    BYTE PTR [rax+0x1],0x20
  40f174:	jg     40f2c0 <_start@@Base+0x9890>
  40f17a:	je     40f400 <_start@@Base+0x99d0>
  40f180:	mov    rdx,r15
  40f183:	mov    rdi,rbx
  40f186:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40f18b:	mov    r15,rax
  40f18e:	jmp    40eed8 <_start@@Base+0x94a8>
  40f193:	nop    DWORD PTR [rax+rax*1+0x0]
  40f198:	movsx  rsi,BYTE PTR [r8+0x6]
  40f19d:	shl    rsi,0x8
  40f1a1:	movsx  rdx,BYTE PTR [r8+0x5]
  40f1a6:	mov    rax,rdx
  40f1a9:	shl    rax,0x10
  40f1ad:	or     rsi,rax
  40f1b0:	movsx  rdx,BYTE PTR [r8+0x4]
  40f1b5:	mov    rax,rdx
  40f1b8:	shl    rax,0x18
  40f1bc:	or     rax,rsi
  40f1bf:	movsx  rdx,BYTE PTR [r8+0x3]
  40f1c4:	mov    rsi,rdx
  40f1c7:	shl    rsi,0x20
  40f1cb:	or     rax,rsi
  40f1ce:	movsx  rdx,BYTE PTR [r8+0x2]
  40f1d3:	mov    rsi,rdx
  40f1d6:	shl    rsi,0x28
  40f1da:	or     rsi,rax
  40f1dd:	movsx  rdx,BYTE PTR [r8+0x1]
  40f1e2:	mov    rax,rdx
  40f1e5:	shl    rax,0x30
  40f1e9:	or     rsi,rax
  40f1ec:	movsx  rdx,BYTE PTR [r8]
  40f1f0:	mov    rax,rdx
  40f1f3:	shl    rax,0x38
  40f1f7:	or     rax,rsi
  40f1fa:	jmp    40ef88 <_start@@Base+0x9558>
  40f1ff:	nop
  40f200:	xor    esi,esi
  40f202:	jmp    40f1a1 <_start@@Base+0x9771>
  40f204:	nop    DWORD PTR [rax+0x0]
  40f208:	xor    esi,esi
  40f20a:	jmp    40f1b0 <_start@@Base+0x9780>
  40f20c:	nop    DWORD PTR [rax+0x0]
  40f210:	xor    eax,eax
  40f212:	jmp    40f1bf <_start@@Base+0x978f>
  40f214:	nop    DWORD PTR [rax+0x0]
  40f218:	xor    eax,eax
  40f21a:	jmp    40f1ce <_start@@Base+0x979e>
  40f21c:	nop    DWORD PTR [rax+0x0]
  40f220:	xor    esi,esi
  40f222:	jmp    40f1dd <_start@@Base+0x97ad>
  40f224:	nop    DWORD PTR [rax+0x0]
  40f228:	xor    esi,esi
  40f22a:	jmp    40f1ec <_start@@Base+0x97bc>
  40f22c:	nop    DWORD PTR [rax+0x0]
  40f230:	cmp    BYTE PTR [rax+0x1],0x20
  40f234:	jle    40efe5 <_start@@Base+0x95b5>
  40f23a:	add    rax,0x1
  40f23e:	jmp    40eff3 <_start@@Base+0x95c3>
  40f243:	nop    DWORD PTR [rax+rax*1+0x0]
  40f248:	lea    r8,[rax+0x1]
  40f24c:	mov    rdx,r15
  40f24f:	sub    rdx,r8
  40f252:	cmp    rdx,0x1
  40f256:	jle    40f264 <_start@@Base+0x9834>
  40f258:	cmp    BYTE PTR [rax+0x1],0x20
  40f25c:	jg     40f275 <_start@@Base+0x9845>
  40f25e:	je     40f488 <_start@@Base+0x9a58>
  40f264:	mov    rsi,r8
  40f267:	mov    rdx,r15
  40f26a:	mov    rdi,rbx
  40f26d:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40f272:	mov    r8,rax
  40f275:	cmp    r15,r8
  40f278:	je     40f49f <_start@@Base+0x9a6f>
  40f27e:	cmp    BYTE PTR [r8],0x7d
  40f282:	jne    40ef60 <_start@@Base+0x9530>
  40f288:	lea    rsi,[r8+0x1]
  40f28c:	mov    rax,r15
  40f28f:	sub    rax,rsi
  40f292:	cmp    rax,0x1
  40f296:	jle    40f180 <_start@@Base+0x9750>
  40f29c:	cmp    BYTE PTR [r8+0x1],0x20
  40f2a1:	jg     40f2c0 <_start@@Base+0x9890>
  40f2a3:	jne    40f180 <_start@@Base+0x9750>
  40f2a9:	cmp    BYTE PTR [r8+0x2],0x20
  40f2ae:	jle    40f180 <_start@@Base+0x9750>
  40f2b4:	lea    r15,[r8+0x2]
  40f2b8:	jmp    40eed8 <_start@@Base+0x94a8>
  40f2bd:	nop    DWORD PTR [rax]
  40f2c0:	mov    r15,rsi
  40f2c3:	jmp    40eed8 <_start@@Base+0x94a8>
  40f2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f2d0:	cmp    rdx,0x7f
  40f2d4:	jbe    40f150 <_start@@Base+0x9720>
  40f2da:	mov    ecx,0x7
  40f2df:	mov    rdx,r15
  40f2e2:	mov    rsi,rax
  40f2e5:	mov    rdi,rbx
  40f2e8:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f2ed:	cmp    r13,rax
  40f2f0:	je     40f4c0 <_start@@Base+0x9a90>
  40f2f6:	movzx  ecx,BYTE PTR [rsp+0x2a]
  40f2fb:	jmp    40f150 <_start@@Base+0x9720>
  40f300:	lea    rsi,[r8+0x2]
  40f304:	mov    rax,r15
  40f307:	sub    rax,rsi
  40f30a:	cmp    rax,0x1
  40f30e:	jle    40f31d <_start@@Base+0x98ed>
  40f310:	cmp    BYTE PTR [r8+0x2],0x20
  40f315:	jg     40f335 <_start@@Base+0x9905>
  40f317:	je     40f4f0 <_start@@Base+0x9ac0>
  40f31d:	mov    rdx,r15
  40f320:	mov    rdi,rbx
  40f323:	mov    QWORD PTR [rsp+0x10],r8
  40f328:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40f32d:	mov    r8,QWORD PTR [rsp+0x10]
  40f332:	mov    rsi,rax
  40f335:	cmp    r15,rsi
  40f338:	je     40f343 <_start@@Base+0x9913>
  40f33a:	cmp    BYTE PTR [rsi],0x3a
  40f33d:	je     40f518 <_start@@Base+0x9ae8>
  40f343:	mov    ecx,0x4
  40f348:	mov    rdx,r15
  40f34b:	mov    rdi,rbx
  40f34e:	mov    QWORD PTR [rsp+0x10],r8
  40f353:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f358:	mov    r8,QWORD PTR [rsp+0x10]
  40f35d:	mov    r13,rax
  40f360:	cmp    r13,r8
  40f363:	je     40efc0 <_start@@Base+0x9590>
  40f369:	xor    edi,edi
  40f36b:	cmp    r15,r13
  40f36e:	mov    QWORD PTR [rsp+0x30],0x0
  40f377:	mov    WORD PTR [rsp+0x2a],di
  40f37c:	mov    DWORD PTR [rsp+0x2c],0x0
  40f384:	je     40f450 <_start@@Base+0x9a20>
  40f38a:	mov    rcx,QWORD PTR [rsp+0x8]
  40f38f:	mov    r8,r14
  40f392:	mov    rdx,r15
  40f395:	mov    rsi,r13
  40f398:	mov    rdi,rbx
  40f39b:	call   41c710 <flatcc_json_parser_integer@@Base>
  40f3a0:	cmp    r13,rax
  40f3a3:	je     40f450 <_start@@Base+0x9a20>
  40f3a9:	mov    esi,DWORD PTR [rsp+0x2c]
  40f3ad:	mov    rdx,QWORD PTR [rsp+0x30]
  40f3b2:	test   esi,esi
  40f3b4:	mov    ecx,edx
  40f3b6:	je     40f3d0 <_start@@Base+0x99a0>
  40f3b8:	neg    ecx
  40f3ba:	cmp    rdx,0x8000
  40f3c1:	ja     40f418 <_start@@Base+0x99e8>
  40f3c3:	mov    WORD PTR [r12],cx
  40f3c8:	jmp    40efce <_start@@Base+0x959e>
  40f3cd:	nop    DWORD PTR [rax]
  40f3d0:	cmp    rdx,0x7fff
  40f3d7:	jbe    40f3c3 <_start@@Base+0x9993>
  40f3d9:	mov    ecx,0x7
  40f3de:	mov    rdx,r15
  40f3e1:	mov    rsi,rax
  40f3e4:	mov    rdi,rbx
  40f3e7:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f3ec:	cmp    r13,rax
  40f3ef:	je     40f450 <_start@@Base+0x9a20>
  40f3f1:	movzx  ecx,WORD PTR [rsp+0x2a]
  40f3f6:	jmp    40f3c3 <_start@@Base+0x9993>
  40f3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f400:	cmp    BYTE PTR [rax+0x2],0x20
  40f404:	jle    40f180 <_start@@Base+0x9750>
  40f40a:	lea    r15,[rax+0x2]
  40f40e:	jmp    40eed8 <_start@@Base+0x94a8>
  40f413:	nop    DWORD PTR [rax+rax*1+0x0]
  40f418:	mov    ecx,0x8
  40f41d:	mov    rdx,r15
  40f420:	mov    rsi,rax
  40f423:	mov    rdi,rbx
  40f426:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f42b:	jmp    40f3ec <_start@@Base+0x99bc>
  40f42d:	nop    DWORD PTR [rax]
  40f430:	mov    ecx,0x8
  40f435:	mov    rdx,r15
  40f438:	mov    rsi,rax
  40f43b:	mov    rdi,rbx
  40f43e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f443:	jmp    40f2ed <_start@@Base+0x98bd>
  40f448:	nop    DWORD PTR [rax+rax*1+0x0]
  40f450:	mov    r8,QWORD PTR [rsp+0x18]
  40f455:	lea    rcx,[rip+0x29d04]        # 439160 <__data_start@@Base+0xa0>
  40f45c:	mov    rdx,r15
  40f45f:	mov    rsi,r13
  40f462:	mov    rdi,rbx
  40f465:	call   409740 <_start@@Base+0x3d10>
  40f46a:	cmp    rax,r13
  40f46d:	je     40f478 <_start@@Base+0x9a48>
  40f46f:	cmp    r15,rax
  40f472:	jne    40f3f1 <_start@@Base+0x99c1>
  40f478:	mov    ecx,0x21
  40f47d:	jmp    40f016 <_start@@Base+0x95e6>
  40f482:	nop    WORD PTR [rax+rax*1+0x0]
  40f488:	cmp    BYTE PTR [rax+0x2],0x20
  40f48c:	jle    40f264 <_start@@Base+0x9834>
  40f492:	lea    r8,[rax+0x2]
  40f496:	cmp    r15,r8
  40f499:	jne    40f27e <_start@@Base+0x984e>
  40f49f:	mov    rdx,r15
  40f4a2:	mov    rsi,r15
  40f4a5:	mov    ecx,0xa
  40f4aa:	mov    rdi,rbx
  40f4ad:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f4b2:	mov    r15,rax
  40f4b5:	jmp    40eed8 <_start@@Base+0x94a8>
  40f4ba:	nop    WORD PTR [rax+rax*1+0x0]
  40f4c0:	mov    r8,QWORD PTR [rsp+0x18]
  40f4c5:	lea    rcx,[rip+0x29cb4]        # 439180 <__data_start@@Base+0xc0>
  40f4cc:	mov    rdx,r15
  40f4cf:	mov    rsi,r13
  40f4d2:	mov    rdi,rbx
  40f4d5:	call   409190 <_start@@Base+0x3760>
  40f4da:	cmp    rax,r13
  40f4dd:	je     40f478 <_start@@Base+0x9a48>
  40f4df:	cmp    r15,rax
  40f4e2:	jne    40f2f6 <_start@@Base+0x98c6>
  40f4e8:	jmp    40f478 <_start@@Base+0x9a48>
  40f4ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f4f0:	cmp    BYTE PTR [r8+0x3],0x20
  40f4f5:	jle    40f31d <_start@@Base+0x98ed>
  40f4fb:	lea    rsi,[r8+0x3]
  40f4ff:	jmp    40f335 <_start@@Base+0x9905>
  40f504:	cmp    BYTE PTR [r8+0x3],0x20
  40f509:	jle    40f0a2 <_start@@Base+0x9672>
  40f50f:	lea    rsi,[r8+0x3]
  40f513:	jmp    40f0ba <_start@@Base+0x968a>
  40f518:	lea    r13,[rsi+0x1]
  40f51c:	mov    rax,r15
  40f51f:	sub    rax,r13
  40f522:	cmp    rax,0x1
  40f526:	jle    40f534 <_start@@Base+0x9b04>
  40f528:	cmp    BYTE PTR [rsi+0x1],0x20
  40f52c:	jg     40f360 <_start@@Base+0x9930>
  40f532:	je     40f575 <_start@@Base+0x9b45>
  40f534:	mov    rsi,r13
  40f537:	mov    rdx,r15
  40f53a:	mov    rdi,rbx
  40f53d:	mov    QWORD PTR [rsp+0x10],r8
  40f542:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  40f547:	mov    r8,QWORD PTR [rsp+0x10]
  40f54c:	mov    r13,rax
  40f54f:	jmp    40f360 <_start@@Base+0x9930>
  40f554:	add    rsi,0x1
  40f558:	mov    rdx,r15
  40f55b:	mov    rdi,rbx
  40f55e:	mov    QWORD PTR [rsp+0x10],r8
  40f563:	call   406b20 <_start@@Base+0x10f0>
  40f568:	mov    r8,QWORD PTR [rsp+0x10]
  40f56d:	mov    r13,rax
  40f570:	jmp    40f0e5 <_start@@Base+0x96b5>
  40f575:	cmp    BYTE PTR [rsi+0x2],0x20
  40f579:	jle    40f534 <_start@@Base+0x9b04>
  40f57b:	lea    r13,[rsi+0x2]
  40f57f:	jmp    40f360 <_start@@Base+0x9930>
  40f584:	cmp    BYTE PTR [rsi+0x2],0x20
  40f588:	jle    40ef1d <_start@@Base+0x94ed>
  40f58e:	lea    r8,[rsi+0x2]
  40f592:	jmp    40ef2e <_start@@Base+0x94fe>
  40f597:	lea    rsi,[r8+0x1]
  40f59b:	mov    rdx,r15
  40f59e:	mov    rdi,rbx
  40f5a1:	call   406b20 <_start@@Base+0x10f0>
  40f5a6:	mov    r15,rax
  40f5a9:	jmp    40eed8 <_start@@Base+0x94a8>
  40f5ae:	call   405070 <__stack_chk_fail@plt>
  40f5b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f5be:	xchg   ax,ax
  40f5c0:	push   r15
  40f5c2:	push   r14
  40f5c4:	mov    rax,rcx
  40f5c7:	push   r13
  40f5c9:	push   r12
  40f5cb:	mov    r13,rsi
  40f5ce:	push   rbp
  40f5cf:	push   rbx
  40f5d0:	mov    rbp,rdi
  40f5d3:	mov    esi,0x24
  40f5d8:	mov    rbx,rdx
  40f5db:	sub    rsp,0x78
  40f5df:	mov    rdi,QWORD PTR [rdi]
  40f5e2:	mov    DWORD PTR [rax],0x0
  40f5e8:	mov    QWORD PTR [rsp+0x10],rcx
  40f5ed:	mov    rcx,QWORD PTR fs:0x28
  40f5f6:	mov    QWORD PTR [rsp+0x68],rcx
  40f5fb:	xor    ecx,ecx
  40f5fd:	call   4168e0 <flatcc_builder_start_table@@Base>
  40f602:	test   eax,eax
  40f604:	jne    40f848 <_start@@Base+0x9e18>
  40f60a:	lea    r8,[rsp+0x50]
  40f60f:	mov    ecx,0x1
  40f614:	mov    rdx,rbx
  40f617:	mov    rsi,r13
  40f61a:	mov    rdi,rbp
  40f61d:	call   41d9d0 <flatcc_json_parser_prepare_unions@@Base>
  40f622:	cmp    rbx,rax
  40f625:	je     40f848 <_start@@Base+0x9e18>
  40f62b:	lea    rax,[rsp+0x40]
  40f630:	mov    rsi,r13
  40f633:	mov    rdx,rbx
  40f636:	mov    rdi,rbp
  40f639:	mov    rcx,rax
  40f63c:	mov    r14,rax
  40f63f:	call   408740 <_start@@Base+0x2d10>
  40f644:	mov    r13,rax
  40f647:	mov    eax,DWORD PTR [rsp+0x40]
  40f64b:	test   eax,eax
  40f64d:	je     40fd20 <_start@@Base+0xa2f0>
  40f653:	lea    rax,[rsp+0x60]
  40f658:	mov    QWORD PTR [rsp],rax
  40f65c:	nop    DWORD PTR [rax+0x0]
  40f660:	cmp    rbx,r13
  40f663:	je     40f880 <_start@@Base+0x9e50>
  40f669:	cmp    BYTE PTR [r13+0x0],0x22
  40f66e:	jne    40f920 <_start@@Base+0x9ef0>
  40f674:	add    r13,0x1
  40f678:	mov    r8,rbx
  40f67b:	sub    r8,r13
  40f67e:	cmp    r8,0x7
  40f682:	jbe    40f883 <_start@@Base+0x9e53>
  40f688:	movbe  r12,QWORD PTR [r13+0x0]
  40f68e:	movabs rax,0x7465737461727260
  40f698:	cmp    r12,rax
  40f69b:	ja     40f8a4 <_start@@Base+0x9e74>
  40f6a1:	movabs rax,0x6e616d64ffffffff
  40f6ab:	cmp    r12,rax
  40f6ae:	ja     40f948 <_start@@Base+0x9f18>
  40f6b4:	movabs rax,0x666c6577ffffffff
  40f6be:	cmp    r12,rax
  40f6c1:	ja     40f9f8 <_start@@Base+0x9fc8>
  40f6c7:	and    r12,0xffffffffff000000
  40f6ce:	movabs rax,0x656e656d79000000
  40f6d8:	cmp    r12,rax
  40f6db:	je     410470 <_start@@Base+0xaa40>
  40f6e1:	movabs rax,0x636f6c6f72000000
  40f6eb:	cmp    r12,rax
  40f6ee:	je     4100a8 <_start@@Base+0xa678>
  40f6f4:	mov    rsi,r13
  40f6f7:	mov    rdx,rbx
  40f6fa:	mov    rdi,rbp
  40f6fd:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f702:	mov    r13,rax
  40f705:	jmp    40fd00 <_start@@Base+0xa2d0>
  40f70a:	lea    r12,[r13+0x10]
  40f70e:	mov    r8,rbx
  40f711:	sub    r8,r12
  40f714:	cmp    r8,0x7
  40f718:	jbe    412432 <_start@@Base+0xca02>
  40f71e:	movbe  rax,QWORD PTR [r13+0x10]
  40f724:	movabs rdx,0xff00000000000000
  40f72e:	and    rax,rdx
  40f731:	movabs rdx,0x7300000000000000
  40f73b:	cmp    rax,rdx
  40f73e:	jne    412306 <_start@@Base+0xc8d6>
  40f744:	cmp    r8,0x1
  40f748:	jle    41326e <_start@@Base+0xd83e>
  40f74e:	mov    ecx,0x1
  40f753:	mov    rdx,rbx
  40f756:	mov    rsi,r12
  40f759:	mov    rdi,rbp
  40f75c:	call   409ba0 <_start@@Base+0x4170>
  40f761:	cmp    r12,rax
  40f764:	mov    r13,rax
  40f767:	je     41326e <_start@@Base+0xd83e>
  40f76d:	mov    rdi,QWORD PTR [rbp+0x0]
  40f771:	mov    ecx,0x1fffffff
  40f776:	mov    edx,0x8
  40f77b:	mov    esi,0x8
  40f780:	call   4166c0 <flatcc_builder_start_vector@@Base>
  40f785:	test   eax,eax
  40f787:	jne    40f848 <_start@@Base+0x9e18>
  40f78d:	mov    rsi,r13
  40f790:	mov    rcx,r14
  40f793:	mov    rdx,rbx
  40f796:	mov    rdi,rbp
  40f799:	call   409b00 <_start@@Base+0x40d0>
  40f79e:	mov    r8d,DWORD PTR [rsp+0x40]
  40f7a3:	mov    r13,rax
  40f7a6:	test   r8d,r8d
  40f7a9:	je     412d85 <_start@@Base+0xd355>
  40f7af:	mov    r12,QWORD PTR [rsp]
  40f7b3:	jmp    40f7e3 <_start@@Base+0x9db3>
  40f7b5:	nop    DWORD PTR [rax]
  40f7b8:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  40f7be:	mov    rdi,rbp
  40f7c1:	mov    rcx,r14
  40f7c4:	mov    rdx,rbx
  40f7c7:	mov    rsi,rax
  40f7ca:	vmovsd QWORD PTR [r15],xmm0
  40f7cf:	call   40a300 <_start@@Base+0x48d0>
  40f7d4:	mov    edi,DWORD PTR [rsp+0x40]
  40f7d8:	mov    r13,rax
  40f7db:	test   edi,edi
  40f7dd:	je     412d85 <_start@@Base+0xd355>
  40f7e3:	mov    rdi,QWORD PTR [rbp+0x0]
  40f7e7:	mov    esi,0x1
  40f7ec:	mov    QWORD PTR [rsp+0x60],0x0
  40f7f5:	call   416020 <flatcc_builder_extend_vector@@Base>
  40f7fa:	test   rax,rax
  40f7fd:	mov    r15,rax
  40f800:	je     40f848 <_start@@Base+0x9e18>
  40f802:	mov    rcx,r12
  40f805:	mov    rdx,rbx
  40f808:	mov    rsi,r13
  40f80b:	mov    rdi,rbp
  40f80e:	call   41c4f0 <flatcc_json_parser_double@@Base>
  40f813:	cmp    rax,r13
  40f816:	jne    40f7b8 <_start@@Base+0x9d88>
  40f818:	lea    rcx,[rip+0x29d21]        # 439540 <__data_start@@Base+0x480>
  40f81f:	mov    r8,r12
  40f822:	mov    rdx,rbx
  40f825:	mov    rsi,r13
  40f828:	mov    rdi,rbp
  40f82b:	call   4089e0 <_start@@Base+0x2fb0>
  40f830:	cmp    rax,r13
  40f833:	je     40f83e <_start@@Base+0x9e0e>
  40f835:	cmp    rbx,rax
  40f838:	jne    40f7b8 <_start@@Base+0x9d88>
  40f83e:	mov    r13,rax
  40f841:	nop    DWORD PTR [rax+0x0]
  40f848:	mov    ecx,0x21
  40f84d:	mov    rdx,rbx
  40f850:	mov    rsi,r13
  40f853:	mov    rdi,rbp
  40f856:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f85b:	mov    rcx,QWORD PTR [rsp+0x68]
  40f860:	xor    rcx,QWORD PTR fs:0x28
  40f869:	jne    413421 <_start@@Base+0xd9f1>
  40f86f:	add    rsp,0x78
  40f873:	pop    rbx
  40f874:	pop    rbp
  40f875:	pop    r12
  40f877:	pop    r13
  40f879:	pop    r14
  40f87b:	pop    r15
  40f87d:	ret    
  40f87e:	xchg   ax,ax
  40f880:	xor    r8d,r8d
  40f883:	mov    rsi,rbx
  40f886:	mov    rdi,r13
  40f889:	call   405b40 <_start@@Base+0x110>
  40f88e:	mov    r12,rax
  40f891:	movabs rax,0x7465737461727260
  40f89b:	cmp    r12,rax
  40f89e:	jbe    40f6a1 <_start@@Base+0x9c71>
  40f8a4:	movabs rax,0x746573746632ffff
  40f8ae:	cmp    r12,rax
  40f8b1:	ja     40f9a8 <_start@@Base+0x9f78>
  40f8b7:	movabs rax,0x7465737461727261
  40f8c1:	cmp    r12,rax
  40f8c4:	je     40fc40 <_start@@Base+0xa210>
  40f8ca:	movabs rax,0x74657374656d7073
  40f8d4:	cmp    r12,rax
  40f8d7:	ja     40fbf0 <_start@@Base+0xa1c0>
  40f8dd:	movabs rax,0x7465737462617365
  40f8e7:	cmp    r12,rax
  40f8ea:	je     410550 <_start@@Base+0xab20>
  40f8f0:	movabs rax,0x74657374626f6f6c
  40f8fa:	cmp    r12,rax
  40f8fd:	je     410220 <_start@@Base+0xa7f0>
  40f903:	mov    rsi,r13
  40f906:	mov    rdx,rbx
  40f909:	mov    rdi,rbp
  40f90c:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f911:	mov    r13,rax
  40f914:	jmp    40fd00 <_start@@Base+0xa2d0>
  40f919:	nop    DWORD PTR [rax+0x0]
  40f920:	mov    rsi,r13
  40f923:	mov    ecx,0x5
  40f928:	mov    rdx,rbx
  40f92b:	mov    rdi,rbp
  40f92e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40f933:	mov    r8,rbx
  40f936:	mov    r13,rax
  40f939:	sub    r8,rax
  40f93c:	jmp    40f67e <_start@@Base+0x9c4e>
  40f941:	nop    DWORD PTR [rax+0x0]
  40f948:	movabs rax,0x74657373ffffffff
  40f952:	cmp    r12,rax
  40f955:	ja     40fa48 <_start@@Base+0xa018>
  40f95b:	movabs rax,0x706172656e745f6d
  40f965:	cmp    r12,rax
  40f968:	ja     40fd60 <_start@@Base+0xa330>
  40f96e:	movabs rax,0xffffffff00000000
  40f978:	and    r12,rax
  40f97b:	movabs rax,0x6e616d6500000000
  40f985:	cmp    r12,rax
  40f988:	je     4102b0 <_start@@Base+0xa880>
  40f98e:	mov    rsi,r13
  40f991:	mov    rdx,rbx
  40f994:	mov    rdi,rbp
  40f997:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f99c:	mov    r13,rax
  40f99f:	jmp    40fd00 <_start@@Base+0xa2d0>
  40f9a4:	nop    DWORD PTR [rax+0x0]
  40f9a8:	movabs rax,0x7465737468617367
  40f9b2:	cmp    r12,rax
  40f9b5:	ja     40fb30 <_start@@Base+0xa100>
  40f9bb:	xor    r12w,r12w
  40f9bf:	movabs rax,0x7465737466330000
  40f9c9:	cmp    r12,rax
  40f9cc:	jne    40fce8 <_start@@Base+0xa2b8>
  40f9d2:	cmp    r8,0x6
  40f9d6:	jg     4102d0 <_start@@Base+0xa8a0>
  40f9dc:	mov    rsi,r13
  40f9df:	mov    rdx,rbx
  40f9e2:	mov    rdi,rbp
  40f9e5:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f9ea:	mov    r13,rax
  40f9ed:	jmp    40fd00 <_start@@Base+0xa2d0>
  40f9f2:	nop    WORD PTR [rax+rax*1+0x0]
  40f9f8:	movabs rax,0x686fffffffffffff
  40fa02:	cmp    r12,rax
  40fa05:	ja     40fdb8 <_start@@Base+0xa388>
  40fa0b:	movabs rax,0xffffffff00000000
  40fa15:	and    r12,rax
  40fa18:	movabs rax,0x666c657800000000
  40fa22:	cmp    r12,rax
  40fa25:	je     410290 <_start@@Base+0xa860>
  40fa2b:	mov    rsi,r13
  40fa2e:	mov    rdx,rbx
  40fa31:	mov    rdi,rbp
  40fa34:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fa39:	mov    r13,rax
  40fa3c:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fa41:	nop    DWORD PTR [rax+0x0]
  40fa48:	mov    r15,r12
  40fa4b:	movabs rax,0x7465737434000000
  40fa55:	and    r15,0xffffffffff000000
  40fa5c:	cmp    r15,rax
  40fa5f:	je     410490 <_start@@Base+0xaa60>
  40fa65:	cmp    r8,0x4
  40fa69:	jg     411af8 <_start@@Base+0xc0c8>
  40fa6f:	movabs rax,0x7465737435000000
  40fa79:	cmp    r15,rax
  40fa7c:	je     4103e8 <_start@@Base+0xa9b8>
  40fa82:	movabs rax,0x746573745f747970
  40fa8c:	cmp    r12,rax
  40fa8f:	jne    4103f8 <_start@@Base+0xa9c8>
  40fa95:	lea    r12,[r13+0x8]
  40fa99:	mov    r8,rbx
  40fa9c:	sub    r8,r12
  40fa9f:	cmp    r8,0x7
  40faa3:	jbe    410796 <_start@@Base+0xad66>
  40faa9:	movbe  rax,QWORD PTR [r13+0x8]
  40faaf:	movabs rdx,0xff00000000000000
  40fab9:	and    rax,rdx
  40fabc:	movabs rdx,0x6500000000000000
  40fac6:	cmp    rax,rdx
  40fac9:	jne    410780 <_start@@Base+0xad50>
  40facf:	cmp    r8,0x1
  40fad3:	jle    410b1e <_start@@Base+0xb0ee>
  40fad9:	mov    rsi,r12
  40fadc:	mov    ecx,0x1
  40fae1:	mov    rdx,rbx
  40fae4:	mov    rdi,rbp
  40fae7:	call   409ba0 <_start@@Base+0x4170>
  40faec:	cmp    r12,rax
  40faef:	mov    rsi,rax
  40faf2:	je     410b1e <_start@@Base+0xb0ee>
  40faf8:	lea    rax,[rip+0x3a81]        # 413580 <_start@@Base+0xdb50>
  40faff:	mov    r8d,0x8
  40fb05:	xor    ecx,ecx
  40fb07:	mov    rdx,rbx
  40fb0a:	mov    rdi,rbp
  40fb0d:	push   rax
  40fb0e:	lea    rax,[rip+0x29c0b]        # 439720 <__data_start@@Base+0x660>
  40fb15:	push   rax
  40fb16:	mov    r9,QWORD PTR [rsp+0x60]
  40fb1b:	call   41dbe0 <flatcc_json_parser_union_type@@Base>
  40fb20:	pop    r9
  40fb22:	mov    r13,rax
  40fb25:	pop    r10
  40fb27:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fb2c:	nop    DWORD PTR [rax+0x0]
  40fb30:	movabs rax,0x7465737468617368
  40fb3a:	cmp    r12,rax
  40fb3d:	je     410410 <_start@@Base+0xa9e0>
  40fb43:	movabs rax,0x766563746f725f6e
  40fb4d:	cmp    r12,rax
  40fb50:	ja     410030 <_start@@Base+0xa600>
  40fb56:	movabs rax,0x746573746e657374
  40fb60:	cmp    r12,rax
  40fb63:	jne    410610 <_start@@Base+0xabe0>
  40fb69:	lea    r8,[r13+0x8]
  40fb6d:	mov    rax,rbx
  40fb70:	sub    rax,r8
  40fb73:	cmp    rax,0x7
  40fb77:	jbe    410927 <_start@@Base+0xaef7>
  40fb7d:	movbe  rax,QWORD PTR [r13+0x8]
  40fb83:	movabs rdx,0x6564666c61746275
  40fb8d:	cmp    rax,rdx
  40fb90:	jne    4110b4 <_start@@Base+0xb684>
  40fb96:	lea    r12,[r13+0x10]
  40fb9a:	mov    r8,rbx
  40fb9d:	sub    r8,r12
  40fba0:	cmp    r8,0x7
  40fba4:	jbe    412128 <_start@@Base+0xc6f8>
  40fbaa:	movbe  rax,QWORD PTR [r13+0x10]
  40fbb0:	movabs rdx,0xffffffff00000000
  40fbba:	and    rax,rdx
  40fbbd:	movabs rdx,0x6666657200000000
  40fbc7:	cmp    rax,rdx
  40fbca:	jne    412138 <_start@@Base+0xc708>
  40fbd0:	cmp    r8,0x4
  40fbd4:	jg     412ba4 <_start@@Base+0xd174>
  40fbda:	mov    rdx,rbx
  40fbdd:	mov    rsi,r12
  40fbe0:	mov    rdi,rbp
  40fbe3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fbe8:	mov    r13,rax
  40fbeb:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fbf0:	movabs rax,0x7465737465ffffff
  40fbfa:	cmp    r12,rax
  40fbfd:	jbe    40fe10 <_start@@Base+0xa3e0>
  40fc03:	xor    r12w,r12w
  40fc07:	movabs rax,0x7465737466320000
  40fc11:	cmp    r12,rax
  40fc14:	je     410812 <_start@@Base+0xade2>
  40fc1a:	cmp    r8,0x5
  40fc1e:	jg     41216d <_start@@Base+0xc73d>
  40fc24:	mov    rsi,r13
  40fc27:	mov    rdx,rbx
  40fc2a:	mov    rdi,rbp
  40fc2d:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fc32:	mov    r13,rax
  40fc35:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	lea    r12,[r13+0x8]
  40fc44:	mov    r8,rbx
  40fc47:	sub    r8,r12
  40fc4a:	cmp    r8,0x7
  40fc4e:	jbe    4100d0 <_start@@Base+0xa6a0>
  40fc54:	movbe  rax,QWORD PTR [r13+0x8]
  40fc5a:	movabs rdx,0x796f66737472696d
  40fc64:	cmp    rax,rdx
  40fc67:	ja     4100ee <_start@@Base+0xa6be>
  40fc6d:	movabs rdx,0x796f66626f6f6c73
  40fc77:	cmp    rax,rdx
  40fc7a:	je     411330 <_start@@Base+0xb900>
  40fc80:	movabs rdx,0x796f66736f727465
  40fc8a:	cmp    rax,rdx
  40fc8d:	jne    4107c0 <_start@@Base+0xad90>
  40fc93:	lea    r12,[r13+0x10]
  40fc97:	mov    r8,rbx
  40fc9a:	sub    r8,r12
  40fc9d:	cmp    r8,0x7
  40fca1:	ja     410b34 <_start@@Base+0xb104>
  40fca7:	mov    rsi,rbx
  40fcaa:	mov    rdi,r12
  40fcad:	call   405b40 <_start@@Base+0x110>
  40fcb2:	xor    al,al
  40fcb4:	movabs rdx,0x6473747275637400
  40fcbe:	cmp    rax,rdx
  40fcc1:	jne    411b46 <_start@@Base+0xc116>
  40fcc7:	cmp    r8,0x7
  40fccb:	jg     4127ae <_start@@Base+0xcd7e>
  40fcd1:	mov    rdx,rbx
  40fcd4:	mov    rsi,r12
  40fcd7:	mov    rdi,rbp
  40fcda:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fcdf:	mov    r13,rax
  40fce2:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fce4:	nop    DWORD PTR [rax+0x0]
  40fce8:	mov    rsi,r13
  40fceb:	mov    rdx,rbx
  40fcee:	mov    rdi,rbp
  40fcf1:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fcf6:	mov    r13,rax
  40fcf9:	nop    DWORD PTR [rax+0x0]
  40fd00:	mov    rdx,rbx
  40fd03:	mov    rsi,r13
  40fd06:	mov    rcx,r14
  40fd09:	mov    rdi,rbp
  40fd0c:	call   40a450 <_start@@Base+0x4a20>
  40fd11:	mov    edx,DWORD PTR [rsp+0x40]
  40fd15:	mov    r13,rax
  40fd18:	test   edx,edx
  40fd1a:	jne    40f660 <_start@@Base+0x9c30>
  40fd20:	mov    eax,DWORD PTR [rbp+0x1c]
  40fd23:	test   eax,eax
  40fd25:	jne    40f848 <_start@@Base+0x9e18>
  40fd2b:	mov    rdi,QWORD PTR [rbp+0x0]
  40fd2f:	mov    esi,0x3
  40fd34:	call   417160 <flatcc_builder_check_required_field@@Base>
  40fd39:	test   eax,eax
  40fd3b:	jne    4123f0 <_start@@Base+0xc9c0>
  40fd41:	mov    rsi,r13
  40fd44:	mov    ecx,0x1d
  40fd49:	mov    rdx,rbx
  40fd4c:	mov    rdi,rbp
  40fd4f:	call   41b920 <flatcc_json_parser_set_error@@Base>
  40fd54:	mov    r13,rax
  40fd57:	jmp    40f848 <_start@@Base+0x9e18>
  40fd5c:	nop    DWORD PTR [rax+0x0]
  40fd60:	movabs rax,0x706172656e745f6e
  40fd6a:	cmp    r12,rax
  40fd6d:	je     41035d <_start@@Base+0xa92d>
  40fd73:	movabs rax,0xffffff0000000000
  40fd7d:	and    r12,rax
  40fd80:	movabs rax,0x706f730000000000
  40fd8a:	cmp    r12,rax
  40fd8d:	jne    4105f0 <_start@@Base+0xabc0>
  40fd93:	cmp    r8,0x3
  40fd97:	jg     411bae <_start@@Base+0xc17e>
  40fd9d:	mov    rsi,r13
  40fda0:	mov    rdx,rbx
  40fda3:	mov    rdi,rbp
  40fda6:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fdab:	mov    r13,rax
  40fdae:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fdb3:	nop    DWORD PTR [rax+rax*1+0x0]
  40fdb8:	movabs rax,0x696e76656e746f71
  40fdc2:	cmp    r12,rax
  40fdc5:	ja     410240 <_start@@Base+0xa810>
  40fdcb:	movabs rax,0xffff000000000000
  40fdd5:	and    r12,rax
  40fdd8:	movabs rax,0x6870000000000000
  40fde2:	cmp    r12,rax
  40fde5:	jne    4107a6 <_start@@Base+0xad76>
  40fdeb:	cmp    r8,0x2
  40fdef:	jg     410bfe <_start@@Base+0xb1ce>
  40fdf5:	mov    rsi,r13
  40fdf8:	mov    rdx,rbx
  40fdfb:	mov    rdi,rbp
  40fdfe:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40fe03:	mov    r13,rax
  40fe06:	jmp    40fd00 <_start@@Base+0xa2d0>
  40fe0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe10:	movabs rax,0x74657374656d7074
  40fe1a:	cmp    r12,rax
  40fe1d:	jne    4105d0 <_start@@Base+0xaba0>
  40fe23:	lea    r12,[r13+0x8]
  40fe27:	mov    r8,rbx
  40fe2a:	sub    r8,r12
  40fe2d:	cmp    r8,0x7
  40fe31:	jbe    410907 <_start@@Base+0xaed7>
  40fe37:	movbe  rax,QWORD PTR [r13+0x8]
  40fe3d:	movabs rdx,0xff00000000000000
  40fe47:	and    rax,rdx
  40fe4a:	movabs rdx,0x7900000000000000
  40fe54:	cmp    rax,rdx
  40fe57:	jne    4110ca <_start@@Base+0xb69a>
  40fe5d:	cmp    r8,0x1
  40fe61:	jle    412b4f <_start@@Base+0xd11f>
  40fe67:	mov    ecx,0x1
  40fe6c:	mov    rdx,rbx
  40fe6f:	mov    rsi,r12
  40fe72:	mov    rdi,rbp
  40fe75:	call   409ba0 <_start@@Base+0x4170>
  40fe7a:	cmp    r12,rax
  40fe7d:	mov    r13,rax
  40fe80:	je     412b4f <_start@@Base+0xd11f>
  40fe86:	mov    rdi,QWORD PTR [rbp+0x0]
  40fe8a:	mov    esi,0x3
  40fe8f:	mov    DWORD PTR [rsp+0x44],0x0
  40fe97:	call   4168e0 <flatcc_builder_start_table@@Base>
  40fe9c:	test   eax,eax
  40fe9e:	jne    411a63 <_start@@Base+0xc033>
  40fea4:	lea    r12,[rsp+0x48]
  40fea9:	mov    rsi,r13
  40feac:	mov    rdi,rbp
  40feaf:	mov    rdx,rbx
  40feb2:	mov    rcx,r12
  40feb5:	call   408740 <_start@@Base+0x2d10>
  40feba:	mov    edi,DWORD PTR [rsp+0x48]
  40febe:	mov    r13,rax
  40fec1:	test   edi,edi
  40fec3:	je     412487 <_start@@Base+0xca57>
  40fec9:	lea    rax,[rsp+0x4c]
  40fece:	mov    QWORD PTR [rsp+0x20],r14
  40fed3:	mov    r15,QWORD PTR [rsp]
  40fed7:	mov    r14,r13
  40feda:	mov    QWORD PTR [rsp+0x18],rax
  40fedf:	lea    rax,[rsp+0x3e]
  40fee4:	mov    QWORD PTR [rsp+0x28],rax
  40fee9:	lea    rax,[rsp+0x58]
  40feee:	mov    QWORD PTR [rsp+0x8],rax
  40fef3:	jmp    40ff48 <_start@@Base+0xa518>
  40fef5:	nop    DWORD PTR [rax]
  40fef8:	and    rax,0xffffffffff000000
  40fefe:	movabs rdx,0x636f756e74000000
  40ff08:	cmp    rax,rdx
  40ff0b:	jne    40ff17 <_start@@Base+0xa4e7>
  40ff0d:	cmp    r8,0x5
  40ff11:	jg     4110e0 <_start@@Base+0xb6b0>
  40ff17:	mov    rsi,r14
  40ff1a:	mov    rdx,rbx
  40ff1d:	mov    rdi,rbp
  40ff20:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  40ff25:	mov    r14,rax
  40ff28:	mov    rsi,r14
  40ff2b:	mov    rcx,r12
  40ff2e:	mov    rdx,rbx
  40ff31:	mov    rdi,rbp
  40ff34:	call   40a450 <_start@@Base+0x4a20>
  40ff39:	mov    r14,rax
  40ff3c:	mov    eax,DWORD PTR [rsp+0x48]
  40ff40:	test   eax,eax
  40ff42:	je     41247f <_start@@Base+0xca4f>
  40ff48:	cmp    rbx,r14
  40ff4b:	je     410ec0 <_start@@Base+0xb490>
  40ff51:	cmp    BYTE PTR [r14],0x22
  40ff55:	jne    410f00 <_start@@Base+0xb4d0>
  40ff5b:	add    r14,0x1
  40ff5f:	mov    r8,rbx
  40ff62:	sub    r8,r14
  40ff65:	cmp    r8,0x7
  40ff69:	jbe    410ec6 <_start@@Base+0xb496>
  40ff6f:	movbe  rax,QWORD PTR [r14]
  40ff74:	movabs rdx,0x6963ffffffffffff
  40ff7e:	cmp    rax,rdx
  40ff81:	jbe    40fef8 <_start@@Base+0xa4c8>
  40ff87:	movabs rdx,0xffffff0000000000
  40ff91:	movabs rcx,0x76616c0000000000
  40ff9b:	and    rdx,rax
  40ff9e:	cmp    rdx,rcx
  40ffa1:	je     410f40 <_start@@Base+0xb510>
  40ffa7:	movabs rdx,0xffff000000000000
  40ffb1:	and    rax,rdx
  40ffb4:	movabs rdx,0x6964000000000000
  40ffbe:	cmp    rax,rdx
  40ffc1:	jne    40ff17 <_start@@Base+0xa4e7>
  40ffc7:	cmp    r8,0x2
  40ffcb:	jle    40ff17 <_start@@Base+0xa4e7>
  40ffd1:	mov    rsi,r14
  40ffd4:	mov    ecx,0x2
  40ffd9:	mov    rdx,rbx
  40ffdc:	mov    rdi,rbp
  40ffdf:	call   409ba0 <_start@@Base+0x4170>
  40ffe4:	cmp    rax,r14
  40ffe7:	mov    rsi,rax
  40ffea:	je     40ff17 <_start@@Base+0xa4e7>
  40fff0:	mov    rcx,QWORD PTR [rsp+0x18]
  40fff5:	mov    rdx,rbx
  40fff8:	mov    rdi,rbp
  40fffb:	call   41d800 <flatcc_json_parser_build_string@@Base>
  410000:	mov    edx,DWORD PTR [rsp+0x4c]
  410004:	mov    r14,rax
  410007:	test   edx,edx
  410009:	je     411a5b <_start@@Base+0xc02b>
  41000f:	mov    rdi,QWORD PTR [rbp+0x0]
  410013:	xor    esi,esi
  410015:	call   418350 <flatcc_builder_table_add_offset@@Base>
  41001a:	test   rax,rax
  41001d:	je     411a5b <_start@@Base+0xc02b>
  410023:	mov    edx,DWORD PTR [rsp+0x4c]
  410027:	mov    DWORD PTR [rax],edx
  410029:	jmp    40ff28 <_start@@Base+0xa4f8>
  41002e:	xchg   ax,ax
  410030:	movabs rax,0x766563746f725f6f
  41003a:	cmp    r12,rax
  41003d:	jne    4105b0 <_start@@Base+0xab80>
  410043:	lea    r12,[r13+0x8]
  410047:	mov    r8,rbx
  41004a:	sub    r8,r12
  41004d:	cmp    r8,0x7
  410051:	jbe    410917 <_start@@Base+0xaee7>
  410057:	movbe  rax,QWORD PTR [r13+0x8]
  41005d:	movabs rdx,0x665f646f75626c65
  410067:	cmp    rax,rdx
  41006a:	je     40f70a <_start@@Base+0x9cda>
  410070:	xor    al,al
  410072:	movabs rdx,0x665f6c6f6e677300
  41007c:	cmp    rax,rdx
  41007f:	jne    411ade <_start@@Base+0xc0ae>
  410085:	cmp    r8,0x7
  410089:	jg     41268b <_start@@Base+0xcc5b>
  41008f:	mov    rdx,rbx
  410092:	mov    rsi,r12
  410095:	mov    rdi,rbp
  410098:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41009d:	mov    r13,rax
  4100a0:	jmp    40fd00 <_start@@Base+0xa2d0>
  4100a5:	nop    DWORD PTR [rax]
  4100a8:	cmp    r8,0x5
  4100ac:	jg     410832 <_start@@Base+0xae02>
  4100b2:	mov    rsi,r13
  4100b5:	mov    rdx,rbx
  4100b8:	mov    rdi,rbp
  4100bb:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4100c0:	mov    r13,rax
  4100c3:	jmp    40fd00 <_start@@Base+0xa2d0>
  4100c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4100d0:	mov    rsi,rbx
  4100d3:	mov    rdi,r12
  4100d6:	call   405b40 <_start@@Base+0x110>
  4100db:	movabs rdx,0x796f66737472696d
  4100e5:	cmp    rax,rdx
  4100e8:	jbe    40fc6d <_start@@Base+0xa23d>
  4100ee:	movabs rdx,0x796f66737472696e
  4100f8:	cmp    rax,rdx
  4100fb:	je     411206 <_start@@Base+0xb7d6>
  410101:	movabs rdx,0x796f667461626c65
  41010b:	cmp    rax,rdx
  41010e:	jne    4107d6 <_start@@Base+0xada6>
  410114:	lea    r12,[r13+0x10]
  410118:	mov    r8,rbx
  41011b:	sub    r8,r12
  41011e:	cmp    r8,0x7
  410122:	ja     410bf3 <_start@@Base+0xb1c3>
  410128:	mov    rsi,rbx
  41012b:	mov    rdi,r12
  41012e:	call   405b40 <_start@@Base+0x110>
  410133:	movabs rdx,0xff00000000000000
  41013d:	and    rax,rdx
  410140:	movabs rdx,0x7300000000000000
  41014a:	cmp    rax,rdx
  41014d:	jne    411b5c <_start@@Base+0xc12c>
  410153:	cmp    r8,0x1
  410157:	jle    412dbc <_start@@Base+0xd38c>
  41015d:	mov    ecx,0x1
  410162:	mov    rdx,rbx
  410165:	mov    rsi,r12
  410168:	mov    rdi,rbp
  41016b:	call   409ba0 <_start@@Base+0x4170>
  410170:	cmp    r12,rax
  410173:	mov    r13,rax
  410176:	je     412dbc <_start@@Base+0xd38c>
  41017c:	mov    rdi,QWORD PTR [rbp+0x0]
  410180:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  410185:	test   eax,eax
  410187:	jne    40f848 <_start@@Base+0x9e18>
  41018d:	mov    rdx,rbx
  410190:	mov    rsi,r13
  410193:	mov    rcx,r14
  410196:	mov    rdi,rbp
  410199:	call   409b00 <_start@@Base+0x40d0>
  41019e:	mov    edx,DWORD PTR [rsp+0x40]
  4101a2:	mov    r13,rax
  4101a5:	test   edx,edx
  4101a7:	je     412b65 <_start@@Base+0xd135>
  4101ad:	lea    r12,[rsp+0x44]
  4101b2:	jmp    4101f5 <_start@@Base+0xa7c5>
  4101b4:	nop    DWORD PTR [rax+0x0]
  4101b8:	mov    rdi,QWORD PTR [rbp+0x0]
  4101bc:	mov    esi,0x1
  4101c1:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  4101c6:	test   rax,rax
  4101c9:	je     40f848 <_start@@Base+0x9e18>
  4101cf:	mov    edx,DWORD PTR [rsp+0x44]
  4101d3:	mov    rsi,r13
  4101d6:	mov    rcx,r14
  4101d9:	mov    rdi,rbp
  4101dc:	mov    DWORD PTR [rax],edx
  4101de:	mov    rdx,rbx
  4101e1:	call   40a300 <_start@@Base+0x48d0>
  4101e6:	mov    r13,rax
  4101e9:	mov    eax,DWORD PTR [rsp+0x40]
  4101ed:	test   eax,eax
  4101ef:	je     412b65 <_start@@Base+0xd135>
  4101f5:	mov    rsi,r13
  4101f8:	mov    rcx,r12
  4101fb:	mov    rdx,rbx
  4101fe:	mov    rdi,rbp
  410201:	call   40f5c0 <_start@@Base+0x9b90>
  410206:	mov    r13,rax
  410209:	mov    eax,DWORD PTR [rsp+0x44]
  41020d:	test   eax,eax
  41020f:	jne    4101b8 <_start@@Base+0xa788>
  410211:	jmp    40f848 <_start@@Base+0x9e18>
  410216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410220:	cmp    r8,0x8
  410224:	jg     4115a0 <_start@@Base+0xbb70>
  41022a:	mov    rsi,r13
  41022d:	mov    rdx,rbx
  410230:	mov    rdi,rbp
  410233:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410238:	mov    r13,rax
  41023b:	jmp    40fd00 <_start@@Base+0xa2d0>
  410240:	movabs rax,0x696e76656e746f72
  41024a:	cmp    r12,rax
  41024d:	je     4118f1 <_start@@Base+0xbec1>
  410253:	movabs rax,0xffffffff00000000
  41025d:	and    r12,rax
  410260:	movabs rax,0x6d616e6100000000
  41026a:	cmp    r12,rax
  41026d:	je     410937 <_start@@Base+0xaf07>
  410273:	mov    rsi,r13
  410276:	mov    rdx,rbx
  410279:	mov    rdi,rbp
  41027c:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410281:	mov    r13,rax
  410284:	jmp    40fd00 <_start@@Base+0xa2d0>
  410289:	nop    DWORD PTR [rax+0x0]
  410290:	cmp    r8,0x4
  410294:	jg     4116ca <_start@@Base+0xbc9a>
  41029a:	mov    rsi,r13
  41029d:	mov    rdx,rbx
  4102a0:	mov    rdi,rbp
  4102a3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4102a8:	mov    r13,rax
  4102ab:	jmp    40fd00 <_start@@Base+0xa2d0>
  4102b0:	cmp    r8,0x4
  4102b4:	jg     41188c <_start@@Base+0xbe5c>
  4102ba:	mov    rsi,r13
  4102bd:	mov    rdx,rbx
  4102c0:	mov    rdi,rbp
  4102c3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4102c8:	mov    r13,rax
  4102cb:	jmp    40fd00 <_start@@Base+0xa2d0>
  4102d0:	mov    ecx,0x6
  4102d5:	mov    rdx,rbx
  4102d8:	mov    rsi,r13
  4102db:	mov    rdi,rbp
  4102de:	call   409ba0 <_start@@Base+0x4170>
  4102e3:	cmp    rax,r13
  4102e6:	mov    r12,rax
  4102e9:	je     40f9dc <_start@@Base+0x9fac>
  4102ef:	mov    rcx,QWORD PTR [rsp]
  4102f3:	mov    rdx,rbx
  4102f6:	mov    rsi,rax
  4102f9:	mov    rdi,rbp
  4102fc:	mov    DWORD PTR [rsp+0x60],0x0
  410304:	call   41c5d0 <flatcc_json_parser_float@@Base>
  410309:	cmp    rax,r12
  41030c:	mov    r13,rax
  41030f:	je     412289 <_start@@Base+0xc859>
  410315:	vxorps xmm1,xmm1,xmm1
  410319:	vucomiss xmm1,DWORD PTR [rsp+0x60]
  41031f:	jp     41032d <_start@@Base+0xa8fd>
  410321:	jne    41032d <_start@@Base+0xa8fd>
  410323:	test   BYTE PTR [rbp+0x10],0x2
  410327:	je     40fd00 <_start@@Base+0xa2d0>
  41032d:	mov    rdi,QWORD PTR [rbp+0x0]
  410331:	mov    ecx,0x4
  410336:	mov    edx,0x4
  41033b:	mov    esi,0x1b
  410340:	call   418180 <flatcc_builder_table_add@@Base>
  410345:	test   rax,rax
  410348:	je     40f848 <_start@@Base+0x9e18>
  41034e:	vmovss xmm0,DWORD PTR [rsp+0x60]
  410354:	vmovss DWORD PTR [rax],xmm0
  410358:	jmp    40fd00 <_start@@Base+0xa2d0>
  41035d:	lea    r8,[r13+0x8]
  410361:	mov    rax,rbx
  410364:	sub    rax,r8
  410367:	cmp    rax,0x7
  41036b:	ja     410a40 <_start@@Base+0xb010>
  410371:	mov    rsi,rbx
  410374:	mov    rdi,r8
  410377:	call   405b40 <_start@@Base+0x110>
  41037c:	movabs rdx,0x616d657370616365
  410386:	cmp    rax,rdx
  410389:	jne    4116b4 <_start@@Base+0xbc84>
  41038f:	lea    r12,[r13+0x10]
  410393:	mov    r8,rbx
  410396:	sub    r8,r12
  410399:	cmp    r8,0x7
  41039d:	jbe    412250 <_start@@Base+0xc820>
  4103a3:	movbe  rax,QWORD PTR [r13+0x10]
  4103a9:	and    rax,0xffffffffff000000
  4103af:	movabs rdx,0x5f74657374000000
  4103b9:	cmp    rax,rdx
  4103bc:	jne    41223a <_start@@Base+0xc80a>
  4103c2:	cmp    r8,0x5
  4103c6:	jg     412d22 <_start@@Base+0xd2f2>
  4103cc:	mov    rdx,rbx
  4103cf:	mov    rsi,r12
  4103d2:	mov    rdi,rbp
  4103d5:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4103da:	mov    r13,rax
  4103dd:	jmp    40fd00 <_start@@Base+0xa2d0>
  4103e2:	nop    WORD PTR [rax+rax*1+0x0]
  4103e8:	mov    rax,rbx
  4103eb:	sub    rax,r13
  4103ee:	cmp    rax,0x5
  4103f2:	jg     410b3f <_start@@Base+0xb10f>
  4103f8:	mov    rsi,r13
  4103fb:	mov    rdx,rbx
  4103fe:	mov    rdi,rbp
  410401:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410406:	mov    r13,rax
  410409:	jmp    40fd00 <_start@@Base+0xa2d0>
  41040e:	xchg   ax,ax
  410410:	lea    r12,[r13+0x8]
  410414:	mov    r8,rbx
  410417:	sub    r8,r12
  41041a:	cmp    r8,0x7
  41041e:	jbe    410770 <_start@@Base+0xad40>
  410424:	movbe  rax,QWORD PTR [r13+0x8]
  41042a:	movabs rdx,0x7336345f666e7630
  410434:	cmp    rax,rdx
  410437:	ja     410626 <_start@@Base+0xabf6>
  41043d:	movabs rdx,0x7333325f666e7631
  410447:	cmp    rax,rdx
  41044a:	je     410a4b <_start@@Base+0xb01b>
  410450:	mov    rdx,rbx
  410453:	mov    rsi,r12
  410456:	mov    rdi,rbp
  410459:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41045e:	mov    r13,rax
  410461:	jmp    40fd00 <_start@@Base+0xa2d0>
  410466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410470:	cmp    r8,0x5
  410474:	jg     4111a3 <_start@@Base+0xb773>
  41047a:	mov    rsi,r13
  41047d:	mov    rdx,rbx
  410480:	mov    rdi,rbp
  410483:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410488:	mov    r13,rax
  41048b:	jmp    40fd00 <_start@@Base+0xa2d0>
  410490:	cmp    r8,0x5
  410494:	jle    4103f8 <_start@@Base+0xa9c8>
  41049a:	mov    ecx,0x5
  41049f:	mov    rdx,rbx
  4104a2:	mov    rsi,r13
  4104a5:	mov    rdi,rbp
  4104a8:	call   409ba0 <_start@@Base+0x4170>
  4104ad:	cmp    rax,r13
  4104b0:	mov    r12,rax
  4104b3:	je     4103f8 <_start@@Base+0xa9c8>
  4104b9:	mov    rdi,QWORD PTR [rbp+0x0]
  4104bd:	mov    ecx,0x3fffffff
  4104c2:	mov    edx,0x2
  4104c7:	mov    esi,0x4
  4104cc:	call   4166c0 <flatcc_builder_start_vector@@Base>
  4104d1:	test   eax,eax
  4104d3:	jne    413109 <_start@@Base+0xd6d9>
  4104d9:	mov    rcx,r14
  4104dc:	mov    rdx,rbx
  4104df:	mov    rsi,r12
  4104e2:	mov    rdi,rbp
  4104e5:	call   409b00 <_start@@Base+0x40d0>
  4104ea:	mov    r13,rax
  4104ed:	mov    eax,DWORD PTR [rsp+0x40]
  4104f1:	test   eax,eax
  4104f3:	jne    410531 <_start@@Base+0xab01>
  4104f5:	jmp    41107d <_start@@Base+0xb64d>
  4104fa:	nop    WORD PTR [rax+rax*1+0x0]
  410500:	mov    rsi,r13
  410503:	mov    rcx,rax
  410506:	mov    rdx,rbx
  410509:	mov    rdi,rbp
  41050c:	call   40ee90 <_start@@Base+0x9460>
  410511:	mov    rcx,r14
  410514:	mov    rdx,rbx
  410517:	mov    rsi,rax
  41051a:	mov    rdi,rbp
  41051d:	call   40a300 <_start@@Base+0x48d0>
  410522:	mov    r13,rax
  410525:	mov    eax,DWORD PTR [rsp+0x40]
  410529:	test   eax,eax
  41052b:	je     41107d <_start@@Base+0xb64d>
  410531:	mov    rdi,QWORD PTR [rbp+0x0]
  410535:	mov    esi,0x1
  41053a:	call   416020 <flatcc_builder_extend_vector@@Base>
  41053f:	test   rax,rax
  410542:	jne    410500 <_start@@Base+0xaad0>
  410544:	jmp    40f848 <_start@@Base+0x9e18>
  410549:	nop    DWORD PTR [rax+0x0]
  410550:	lea    r12,[r13+0x8]
  410554:	mov    r8,rbx
  410557:	sub    r8,r12
  41055a:	cmp    r8,0x7
  41055e:	jbe    410802 <_start@@Base+0xadd2>
  410564:	movbe  rax,QWORD PTR [r13+0x8]
  41056a:	movabs rdx,0xffff000000000000
  410574:	and    rax,rdx
  410577:	movabs rdx,0x3634000000000000
  410581:	cmp    rax,rdx
  410584:	jne    4107ec <_start@@Base+0xadbc>
  41058a:	cmp    r8,0x2
  41058e:	jg     410d15 <_start@@Base+0xb2e5>
  410594:	mov    rdx,rbx
  410597:	mov    rsi,r12
  41059a:	mov    rdi,rbp
  41059d:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4105a2:	mov    r13,rax
  4105a5:	jmp    40fd00 <_start@@Base+0xa2d0>
  4105aa:	nop    WORD PTR [rax+rax*1+0x0]
  4105b0:	mov    rsi,r13
  4105b3:	mov    rdx,rbx
  4105b6:	mov    rdi,rbp
  4105b9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4105be:	mov    r13,rax
  4105c1:	jmp    40fd00 <_start@@Base+0xa2d0>
  4105c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105d0:	mov    rsi,r13
  4105d3:	mov    rdx,rbx
  4105d6:	mov    rdi,rbp
  4105d9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4105de:	mov    r13,rax
  4105e1:	jmp    40fd00 <_start@@Base+0xa2d0>
  4105e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105f0:	mov    rsi,r13
  4105f3:	mov    rdx,rbx
  4105f6:	mov    rdi,rbp
  4105f9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4105fe:	mov    r13,rax
  410601:	jmp    40fd00 <_start@@Base+0xa2d0>
  410606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410610:	mov    rsi,r13
  410613:	mov    rdx,rbx
  410616:	mov    rdi,rbp
  410619:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41061e:	mov    r13,rax
  410621:	jmp    40fd00 <_start@@Base+0xa2d0>
  410626:	movabs rdx,0x7533325f666e7630
  410630:	cmp    rax,rdx
  410633:	jbe    410957 <_start@@Base+0xaf27>
  410639:	movabs rdx,0x7533325f666e7631
  410643:	cmp    rax,rdx
  410646:	je     4124fb <_start@@Base+0xcacb>
  41064c:	movabs rdx,0x7536345f666e7631
  410656:	cmp    rax,rdx
  410659:	jne    4123da <_start@@Base+0xc9aa>
  41065f:	cmp    r8,0x8
  410663:	jg     412e40 <_start@@Base+0xd410>
  410669:	lea    r13,[r12+0x8]
  41066e:	mov    r8,rbx
  410671:	sub    r8,r13
  410674:	cmp    r8,0x7
  410678:	jbe    4132cc <_start@@Base+0xd89c>
  41067e:	movbe  rax,QWORD PTR [r12+0x8]
  410685:	movabs rdx,0xff00000000000000
  41068f:	and    rax,rdx
  410692:	movabs rdx,0x6100000000000000
  41069c:	cmp    rax,rdx
  41069f:	jne    413258 <_start@@Base+0xd828>
  4106a5:	cmp    r8,0x1
  4106a9:	jle    413565 <_start@@Base+0xdb35>
  4106af:	mov    ecx,0x1
  4106b4:	mov    rdx,rbx
  4106b7:	mov    rsi,r13
  4106ba:	mov    rdi,rbp
  4106bd:	call   409ba0 <_start@@Base+0x4170>
  4106c2:	cmp    r13,rax
  4106c5:	mov    r15,rax
  4106c8:	je     413565 <_start@@Base+0xdb35>
  4106ce:	cmp    rbx,rax
  4106d1:	mov    QWORD PTR [rsp+0x58],0x0
  4106da:	mov    QWORD PTR [rsp+0x60],0x0
  4106e3:	mov    DWORD PTR [rsp+0x4c],0x0
  4106eb:	je     4134a6 <_start@@Base+0xda76>
  4106f1:	mov    r8,QWORD PTR [rsp]
  4106f5:	lea    rcx,[rsp+0x4c]
  4106fa:	mov    rdx,rbx
  4106fd:	mov    rsi,rax
  410700:	mov    rdi,rbp
  410703:	call   41c710 <flatcc_json_parser_integer@@Base>
  410708:	cmp    r15,rax
  41070b:	mov    r13,rax
  41070e:	je     4134a9 <_start@@Base+0xda79>
  410714:	mov    r11d,DWORD PTR [rsp+0x4c]
  410719:	mov    rax,QWORD PTR [rsp+0x60]
  41071e:	test   r11d,r11d
  410721:	jne    4133f5 <_start@@Base+0xd9c5>
  410727:	mov    QWORD PTR [rsp+0x58],rax
  41072c:	test   rax,rax
  41072f:	jne    41073b <_start@@Base+0xad0b>
  410731:	test   BYTE PTR [rbp+0x10],0x2
  410735:	je     40fd00 <_start@@Base+0xa2d0>
  41073b:	mov    rdi,QWORD PTR [rbp+0x0]
  41073f:	mov    ecx,0x8
  410744:	mov    edx,0x8
  410749:	mov    esi,0x17
  41074e:	call   418180 <flatcc_builder_table_add@@Base>
  410753:	test   rax,rax
  410756:	je     40f848 <_start@@Base+0x9e18>
  41075c:	mov    rdx,QWORD PTR [rsp+0x58]
  410761:	mov    QWORD PTR [rax],rdx
  410764:	jmp    40fd00 <_start@@Base+0xa2d0>
  410769:	nop    DWORD PTR [rax+0x0]
  410770:	mov    rsi,rbx
  410773:	mov    rdi,r12
  410776:	call   405b40 <_start@@Base+0x110>
  41077b:	jmp    41042a <_start@@Base+0xa9fa>
  410780:	mov    rdx,rbx
  410783:	mov    rsi,r12
  410786:	mov    rdi,rbp
  410789:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41078e:	mov    r13,rax
  410791:	jmp    40fd00 <_start@@Base+0xa2d0>
  410796:	mov    rsi,rbx
  410799:	mov    rdi,r12
  41079c:	call   405b40 <_start@@Base+0x110>
  4107a1:	jmp    40faaf <_start@@Base+0xa07f>
  4107a6:	mov    rsi,r13
  4107a9:	mov    rdx,rbx
  4107ac:	mov    rdi,rbp
  4107af:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4107b4:	mov    r13,rax
  4107b7:	jmp    40fd00 <_start@@Base+0xa2d0>
  4107bc:	nop    DWORD PTR [rax+0x0]
  4107c0:	mov    rdx,rbx
  4107c3:	mov    rsi,r12
  4107c6:	mov    rdi,rbp
  4107c9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4107ce:	mov    r13,rax
  4107d1:	jmp    40fd00 <_start@@Base+0xa2d0>
  4107d6:	mov    rdx,rbx
  4107d9:	mov    rsi,r12
  4107dc:	mov    rdi,rbp
  4107df:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4107e4:	mov    r13,rax
  4107e7:	jmp    40fd00 <_start@@Base+0xa2d0>
  4107ec:	mov    rdx,rbx
  4107ef:	mov    rsi,r12
  4107f2:	mov    rdi,rbp
  4107f5:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4107fa:	mov    r13,rax
  4107fd:	jmp    40fd00 <_start@@Base+0xa2d0>
  410802:	mov    rsi,rbx
  410805:	mov    rdi,r12
  410808:	call   405b40 <_start@@Base+0x110>
  41080d:	jmp    41056a <_start@@Base+0xab3a>
  410812:	cmp    r8,0x6
  410816:	jg     410c84 <_start@@Base+0xb254>
  41081c:	mov    rsi,r13
  41081f:	mov    rdx,rbx
  410822:	mov    rdi,rbp
  410825:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41082a:	mov    r13,rax
  41082d:	jmp    40fd00 <_start@@Base+0xa2d0>
  410832:	mov    ecx,0x5
  410837:	mov    rdx,rbx
  41083a:	mov    rsi,r13
  41083d:	mov    rdi,rbp
  410840:	call   409ba0 <_start@@Base+0x4170>
  410845:	cmp    rax,r13
  410848:	mov    r12,rax
  41084b:	je     4100b2 <_start@@Base+0xa682>
  410851:	cmp    rbx,rax
  410854:	mov    BYTE PTR [rsp+0x4c],0x0
  410859:	mov    QWORD PTR [rsp+0x60],0x0
  410862:	mov    DWORD PTR [rsp+0x58],0x0
  41086a:	je     411b75 <_start@@Base+0xc145>
  410870:	mov    r8,QWORD PTR [rsp]
  410874:	lea    rcx,[rsp+0x58]
  410879:	mov    rdx,rbx
  41087c:	mov    rsi,rax
  41087f:	mov    rdi,rbp
  410882:	call   41c710 <flatcc_json_parser_integer@@Base>
  410887:	cmp    r12,rax
  41088a:	mov    r13,rax
  41088d:	je     411b72 <_start@@Base+0xc142>
  410893:	mov    eax,DWORD PTR [rsp+0x58]
  410897:	mov    rdx,QWORD PTR [rsp+0x60]
  41089c:	test   eax,eax
  41089e:	jne    4108eb <_start@@Base+0xaebb>
  4108a0:	cmp    rdx,0x7f
  4108a4:	ja     4120fe <_start@@Base+0xc6ce>
  4108aa:	mov    eax,edx
  4108ac:	mov    BYTE PTR [rsp+0x4c],dl
  4108b0:	cmp    al,0x8
  4108b2:	jne    4108be <_start@@Base+0xae8e>
  4108b4:	test   BYTE PTR [rbp+0x10],0x2
  4108b8:	je     40fd00 <_start@@Base+0xa2d0>
  4108be:	mov    rdi,QWORD PTR [rbp+0x0]
  4108c2:	mov    ecx,0x1
  4108c7:	mov    edx,0x1
  4108cc:	mov    esi,0x6
  4108d1:	call   418180 <flatcc_builder_table_add@@Base>
  4108d6:	test   rax,rax
  4108d9:	je     40f848 <_start@@Base+0x9e18>
  4108df:	movzx  edx,BYTE PTR [rsp+0x4c]
  4108e4:	mov    BYTE PTR [rax],dl
  4108e6:	jmp    40fd00 <_start@@Base+0xa2d0>
  4108eb:	cmp    rdx,0x80
  4108f2:	mov    ecx,0x8
  4108f7:	ja     412103 <_start@@Base+0xc6d3>
  4108fd:	mov    eax,edx
  4108ff:	neg    eax
  410901:	mov    BYTE PTR [rsp+0x4c],al
  410905:	jmp    4108b0 <_start@@Base+0xae80>
  410907:	mov    rsi,rbx
  41090a:	mov    rdi,r12
  41090d:	call   405b40 <_start@@Base+0x110>
  410912:	jmp    40fe3d <_start@@Base+0xa40d>
  410917:	mov    rsi,rbx
  41091a:	mov    rdi,r12
  41091d:	call   405b40 <_start@@Base+0x110>
  410922:	jmp    41005d <_start@@Base+0xa62d>
  410927:	mov    rsi,rbx
  41092a:	mov    rdi,r8
  41092d:	call   405b40 <_start@@Base+0x110>
  410932:	jmp    40fb83 <_start@@Base+0xa153>
  410937:	cmp    r8,0x4
  41093b:	jg     41231c <_start@@Base+0xc8ec>
  410941:	mov    rsi,r13
  410944:	mov    rdx,rbx
  410947:	mov    rdi,rbp
  41094a:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41094f:	mov    r13,rax
  410952:	jmp    40fd00 <_start@@Base+0xa2d0>
  410957:	movabs rdx,0x7336345f666e7631
  410961:	cmp    rax,rdx
  410964:	jne    412214 <_start@@Base+0xc7e4>
  41096a:	cmp    r8,0x8
  41096e:	jg     412c44 <_start@@Base+0xd214>
  410974:	lea    r13,[r12+0x8]
  410979:	mov    r8,rbx
  41097c:	sub    r8,r13
  41097f:	cmp    r8,0x7
  410983:	jbe    413248 <_start@@Base+0xd818>
  410989:	movbe  rax,QWORD PTR [r12+0x8]
  410990:	movabs rdx,0xff00000000000000
  41099a:	and    rax,rdx
  41099d:	movabs rdx,0x6100000000000000
  4109a7:	cmp    rax,rdx
  4109aa:	jne    4130a6 <_start@@Base+0xd676>
  4109b0:	cmp    r8,0x1
  4109b4:	jle    4133b0 <_start@@Base+0xd980>
  4109ba:	mov    ecx,0x1
  4109bf:	mov    rdx,rbx
  4109c2:	mov    rsi,r13
  4109c5:	mov    rdi,rbp
  4109c8:	call   409ba0 <_start@@Base+0x4170>
  4109cd:	cmp    r13,rax
  4109d0:	mov    r12,rax
  4109d3:	je     4133b3 <_start@@Base+0xd983>
  4109d9:	mov    rcx,QWORD PTR [rsp]
  4109dd:	mov    rdx,rbx
  4109e0:	mov    rsi,rax
  4109e3:	mov    rdi,rbp
  4109e6:	mov    QWORD PTR [rsp+0x60],0x0
  4109ef:	call   408530 <_start@@Base+0x2b00>
  4109f4:	cmp    rax,r12
  4109f7:	mov    r13,rax
  4109fa:	je     413532 <_start@@Base+0xdb02>
  410a00:	cmp    QWORD PTR [rsp+0x60],0x0
  410a06:	jne    410a12 <_start@@Base+0xafe2>
  410a08:	test   BYTE PTR [rbp+0x10],0x2
  410a0c:	je     40fd00 <_start@@Base+0xa2d0>
  410a12:	mov    rdi,QWORD PTR [rbp+0x0]
  410a16:	mov    ecx,0x8
  410a1b:	mov    edx,0x8
  410a20:	mov    esi,0x16
  410a25:	call   418180 <flatcc_builder_table_add@@Base>
  410a2a:	test   rax,rax
  410a2d:	je     40f848 <_start@@Base+0x9e18>
  410a33:	mov    rdx,QWORD PTR [rsp+0x60]
  410a38:	mov    QWORD PTR [rax],rdx
  410a3b:	jmp    40fd00 <_start@@Base+0xa2d0>
  410a40:	movbe  rax,QWORD PTR [r13+0x8]
  410a46:	jmp    41037c <_start@@Base+0xa94c>
  410a4b:	cmp    r8,0x8
  410a4f:	jg     4125d0 <_start@@Base+0xcba0>
  410a55:	lea    r13,[r12+0x8]
  410a5a:	mov    r8,rbx
  410a5d:	sub    r8,r13
  410a60:	cmp    r8,0x7
  410a64:	jbe    412cca <_start@@Base+0xd29a>
  410a6a:	movbe  rax,QWORD PTR [r12+0x8]
  410a71:	movabs rdx,0xff00000000000000
  410a7b:	and    rax,rdx
  410a7e:	movabs rdx,0x6100000000000000
  410a88:	cmp    rax,rdx
  410a8b:	jne    412cda <_start@@Base+0xd2aa>
  410a91:	cmp    r8,0x1
  410a95:	jle    413426 <_start@@Base+0xd9f6>
  410a9b:	mov    ecx,0x1
  410aa0:	mov    rdx,rbx
  410aa3:	mov    rsi,r13
  410aa6:	mov    rdi,rbp
  410aa9:	call   409ba0 <_start@@Base+0x4170>
  410aae:	cmp    r13,rax
  410ab1:	mov    r12,rax
  410ab4:	je     413426 <_start@@Base+0xd9f6>
  410aba:	mov    rcx,QWORD PTR [rsp]
  410abe:	mov    rdx,rbx
  410ac1:	mov    rsi,rax
  410ac4:	mov    rdi,rbp
  410ac7:	mov    DWORD PTR [rsp+0x60],0x0
  410acf:	call   408350 <_start@@Base+0x2920>
  410ad4:	cmp    rax,r12
  410ad7:	mov    r13,rax
  410ada:	je     413473 <_start@@Base+0xda43>
  410ae0:	mov    eax,DWORD PTR [rsp+0x60]
  410ae4:	test   eax,eax
  410ae6:	jne    410af2 <_start@@Base+0xb0c2>
  410ae8:	test   BYTE PTR [rbp+0x10],0x2
  410aec:	je     40fd00 <_start@@Base+0xa2d0>
  410af2:	mov    rdi,QWORD PTR [rbp+0x0]
  410af6:	mov    ecx,0x4
  410afb:	mov    edx,0x4
  410b00:	mov    esi,0x14
  410b05:	call   418180 <flatcc_builder_table_add@@Base>
  410b0a:	test   rax,rax
  410b0d:	je     40f848 <_start@@Base+0x9e18>
  410b13:	mov    edx,DWORD PTR [rsp+0x60]
  410b17:	mov    DWORD PTR [rax],edx
  410b19:	jmp    40fd00 <_start@@Base+0xa2d0>
  410b1e:	mov    rdx,rbx
  410b21:	mov    rsi,r12
  410b24:	mov    rdi,rbp
  410b27:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410b2c:	mov    r13,rax
  410b2f:	jmp    40fd00 <_start@@Base+0xa2d0>
  410b34:	movbe  rax,QWORD PTR [r13+0x10]
  410b3a:	jmp    40fcb2 <_start@@Base+0xa282>
  410b3f:	mov    ecx,0x5
  410b44:	mov    rdx,rbx
  410b47:	mov    rsi,r13
  410b4a:	mov    rdi,rbp
  410b4d:	call   409ba0 <_start@@Base+0x4170>
  410b52:	cmp    r13,rax
  410b55:	mov    r12,rax
  410b58:	je     4103f8 <_start@@Base+0xa9c8>
  410b5e:	mov    rdi,QWORD PTR [rbp+0x0]
  410b62:	mov    ecx,0x3fffffff
  410b67:	mov    edx,0x2
  410b6c:	mov    esi,0x4
  410b71:	call   4166c0 <flatcc_builder_start_vector@@Base>
  410b76:	test   eax,eax
  410b78:	jne    413336 <_start@@Base+0xd906>
  410b7e:	mov    rsi,r12
  410b81:	mov    rcx,r14
  410b84:	mov    rdx,rbx
  410b87:	mov    rdi,rbp
  410b8a:	call   409b00 <_start@@Base+0x40d0>
  410b8f:	mov    r12d,DWORD PTR [rsp+0x40]
  410b94:	mov    r13,rax
  410b97:	test   r12d,r12d
  410b9a:	jne    410bdb <_start@@Base+0xb1ab>
  410b9c:	jmp    411aa7 <_start@@Base+0xc077>
  410ba1:	nop    DWORD PTR [rax+0x0]
  410ba8:	mov    rsi,r13
  410bab:	mov    rcx,rax
  410bae:	mov    rdx,rbx
  410bb1:	mov    rdi,rbp
  410bb4:	call   40ee90 <_start@@Base+0x9460>
  410bb9:	mov    rcx,r14
  410bbc:	mov    rdx,rbx
  410bbf:	mov    rsi,rax
  410bc2:	mov    rdi,rbp
  410bc5:	call   40a300 <_start@@Base+0x48d0>
  410bca:	mov    r11d,DWORD PTR [rsp+0x40]
  410bcf:	mov    r13,rax
  410bd2:	test   r11d,r11d
  410bd5:	je     411aa7 <_start@@Base+0xc077>
  410bdb:	mov    rdi,QWORD PTR [rbp+0x0]
  410bdf:	mov    esi,0x1
  410be4:	call   416020 <flatcc_builder_extend_vector@@Base>
  410be9:	test   rax,rax
  410bec:	jne    410ba8 <_start@@Base+0xb178>
  410bee:	jmp    40f848 <_start@@Base+0x9e18>
  410bf3:	movbe  rax,QWORD PTR [r13+0x10]
  410bf9:	jmp    410133 <_start@@Base+0xa703>
  410bfe:	mov    ecx,0x2
  410c03:	mov    rdx,rbx
  410c06:	mov    rsi,r13
  410c09:	mov    rdi,rbp
  410c0c:	call   409ba0 <_start@@Base+0x4170>
  410c11:	cmp    rax,r13
  410c14:	mov    r12,rax
  410c17:	je     40fdf5 <_start@@Base+0xa3c5>
  410c1d:	mov    rcx,QWORD PTR [rsp]
  410c21:	xor    r13d,r13d
  410c24:	mov    rdx,rbx
  410c27:	mov    rsi,rax
  410c2a:	mov    rdi,rbp
  410c2d:	mov    WORD PTR [rsp+0x60],r13w
  410c33:	call   408440 <_start@@Base+0x2a10>
  410c38:	cmp    rax,r12
  410c3b:	mov    r13,rax
  410c3e:	je     412e08 <_start@@Base+0xd3d8>
  410c44:	cmp    WORD PTR [rsp+0x60],0x64
  410c4a:	jne    410c56 <_start@@Base+0xb226>
  410c4c:	test   BYTE PTR [rbp+0x10],0x2
  410c50:	je     40fd00 <_start@@Base+0xa2d0>
  410c56:	mov    rdi,QWORD PTR [rbp+0x0]
  410c5a:	mov    ecx,0x2
  410c5f:	mov    edx,0x2
  410c64:	mov    esi,0x2
  410c69:	call   418180 <flatcc_builder_table_add@@Base>
  410c6e:	test   rax,rax
  410c71:	je     40f848 <_start@@Base+0x9e18>
  410c77:	movzx  edx,WORD PTR [rsp+0x60]
  410c7c:	mov    WORD PTR [rax],dx
  410c7f:	jmp    40fd00 <_start@@Base+0xa2d0>
  410c84:	mov    ecx,0x6
  410c89:	mov    rdx,rbx
  410c8c:	mov    rsi,r13
  410c8f:	mov    rdi,rbp
  410c92:	call   409ba0 <_start@@Base+0x4170>
  410c97:	cmp    rax,r13
  410c9a:	mov    r12,rax
  410c9d:	je     41081c <_start@@Base+0xadec>
  410ca3:	mov    rcx,QWORD PTR [rsp]
  410ca7:	mov    rdx,rbx
  410caa:	mov    rsi,rax
  410cad:	mov    rdi,rbp
  410cb0:	mov    DWORD PTR [rsp+0x60],0x0
  410cb8:	call   41c5d0 <flatcc_json_parser_float@@Base>
  410cbd:	cmp    rax,r12
  410cc0:	mov    r13,rax
  410cc3:	je     412fb4 <_start@@Base+0xd584>
  410cc9:	vmovss xmm0,DWORD PTR [rsp+0x60]
  410ccf:	vucomiss xmm0,DWORD PTR [rip+0x1d62d]        # 42e304 <_IO_stdin_used@@Base+0x3304>
  410cd7:	jp     410ce5 <_start@@Base+0xb2b5>
  410cd9:	jne    410ce5 <_start@@Base+0xb2b5>
  410cdb:	test   BYTE PTR [rbp+0x10],0x2
  410cdf:	je     40fd00 <_start@@Base+0xa2d0>
  410ce5:	mov    rdi,QWORD PTR [rbp+0x0]
  410ce9:	mov    ecx,0x4
  410cee:	mov    edx,0x4
  410cf3:	mov    esi,0x1a
  410cf8:	call   418180 <flatcc_builder_table_add@@Base>
  410cfd:	test   rax,rax
  410d00:	je     40f848 <_start@@Base+0x9e18>
  410d06:	vmovss xmm0,DWORD PTR [rsp+0x60]
  410d0c:	vmovss DWORD PTR [rax],xmm0
  410d10:	jmp    40fd00 <_start@@Base+0xa2d0>
  410d15:	mov    ecx,0x2
  410d1a:	mov    rdx,rbx
  410d1d:	mov    rsi,r12
  410d20:	mov    rdi,rbp
  410d23:	call   409ba0 <_start@@Base+0x4170>
  410d28:	cmp    r12,rax
  410d2b:	mov    r13,rax
  410d2e:	je     410594 <_start@@Base+0xab64>
  410d34:	mov    rdi,QWORD PTR [rbp+0x0]
  410d38:	mov    esi,0x3
  410d3d:	mov    DWORD PTR [rsp+0x44],0x0
  410d45:	call   4168e0 <flatcc_builder_start_table@@Base>
  410d4a:	test   eax,eax
  410d4c:	jne    411037 <_start@@Base+0xb607>
  410d52:	lea    r12,[rsp+0x58]
  410d57:	mov    rsi,r13
  410d5a:	mov    rdx,rbx
  410d5d:	mov    rdi,rbp
  410d60:	mov    rcx,r12
  410d63:	call   408740 <_start@@Base+0x2d10>
  410d68:	mov    r13,rax
  410d6b:	mov    eax,DWORD PTR [rsp+0x58]
  410d6f:	test   eax,eax
  410d71:	je     4124b4 <_start@@Base+0xca84>
  410d77:	mov    QWORD PTR [rsp+0x8],r14
  410d7c:	movabs r15,0x6e6573746563ffff
  410d86:	mov    r14,r13
  410d89:	mov    r13,QWORD PTR [rsp]
  410d8d:	jmp    410de9 <_start@@Base+0xb3b9>
  410d8f:	nop
  410d90:	movabs rdx,0xffffffff00000000
  410d9a:	and    rax,rdx
  410d9d:	movabs rdx,0x6461746100000000
  410da7:	cmp    rax,rdx
  410daa:	jne    410db6 <_start@@Base+0xb386>
  410dac:	cmp    r9,0x4
  410db0:	jg     41153e <_start@@Base+0xbb0e>
  410db6:	mov    rsi,r14
  410db9:	mov    rdx,rbx
  410dbc:	mov    rdi,rbp
  410dbf:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  410dc4:	mov    r14,rax
  410dc7:	mov    rsi,r14
  410dca:	mov    rcx,r12
  410dcd:	mov    rdx,rbx
  410dd0:	mov    rdi,rbp
  410dd3:	call   40a450 <_start@@Base+0x4a20>
  410dd8:	mov    r11d,DWORD PTR [rsp+0x58]
  410ddd:	mov    r14,rax
  410de0:	test   r11d,r11d
  410de3:	je     4124ac <_start@@Base+0xca7c>
  410de9:	cmp    rbx,r14
  410dec:	je     410ee0 <_start@@Base+0xb4b0>
  410df2:	cmp    BYTE PTR [r14],0x22
  410df6:	jne    410f20 <_start@@Base+0xb4f0>
  410dfc:	add    r14,0x1
  410e00:	mov    r9,rbx
  410e03:	sub    r9,r14
  410e06:	cmp    r9,0x7
  410e0a:	jbe    410ee6 <_start@@Base+0xb4b6>
  410e10:	movbe  rax,QWORD PTR [r14]
  410e15:	cmp    rax,r15
  410e18:	jbe    410d90 <_start@@Base+0xb360>
  410e1e:	mov    rdx,rax
  410e21:	movabs rcx,0x75726c6461746100
  410e2b:	xor    dl,dl
  410e2d:	cmp    rdx,rcx
  410e30:	je     410fd0 <_start@@Base+0xb5a0>
  410e36:	xor    ax,ax
  410e39:	movabs rcx,0x6e65737465640000
  410e43:	cmp    rax,rcx
  410e46:	jne    410db6 <_start@@Base+0xb386>
  410e4c:	cmp    r9,0x6
  410e50:	jle    410db6 <_start@@Base+0xb386>
  410e56:	mov    rsi,r14
  410e59:	mov    ecx,0x6
  410e5e:	mov    rdx,rbx
  410e61:	mov    rdi,rbp
  410e64:	call   409ba0 <_start@@Base+0x4170>
  410e69:	cmp    rax,r14
  410e6c:	mov    rsi,rax
  410e6f:	je     410db6 <_start@@Base+0xb386>
  410e75:	xor    r8d,r8d
  410e78:	mov    rcx,r13
  410e7b:	mov    rdx,rbx
  410e7e:	mov    rdi,rbp
  410e81:	call   41d400 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  410e86:	mov    r14,rax
  410e89:	mov    eax,DWORD PTR [rsp+0x60]
  410e8d:	test   eax,eax
  410e8f:	je     41102f <_start@@Base+0xb5ff>
  410e95:	mov    rdi,QWORD PTR [rbp+0x0]
  410e99:	mov    esi,0x2
  410e9e:	call   418350 <flatcc_builder_table_add_offset@@Base>
  410ea3:	test   rax,rax
  410ea6:	je     41102f <_start@@Base+0xb5ff>
  410eac:	mov    edx,DWORD PTR [rsp+0x60]
  410eb0:	mov    DWORD PTR [rax],edx
  410eb2:	jmp    410dc7 <_start@@Base+0xb397>
  410eb7:	nop    WORD PTR [rax+rax*1+0x0]
  410ec0:	xor    r8d,r8d
  410ec3:	mov    r14,rbx
  410ec6:	mov    rsi,rbx
  410ec9:	mov    rdi,r14
  410ecc:	call   405b40 <_start@@Base+0x110>
  410ed1:	jmp    40ff74 <_start@@Base+0xa544>
  410ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ee0:	xor    r9d,r9d
  410ee3:	mov    r14,rbx
  410ee6:	mov    rsi,rbx
  410ee9:	mov    rdi,r14
  410eec:	call   405b40 <_start@@Base+0x110>
  410ef1:	jmp    410e15 <_start@@Base+0xb3e5>
  410ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f00:	mov    rsi,r14
  410f03:	mov    ecx,0x5
  410f08:	mov    rdx,rbx
  410f0b:	mov    rdi,rbp
  410f0e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  410f13:	mov    r14,rax
  410f16:	jmp    40ff5f <_start@@Base+0xa52f>
  410f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f20:	mov    rsi,r14
  410f23:	mov    ecx,0x5
  410f28:	mov    rdx,rbx
  410f2b:	mov    rdi,rbp
  410f2e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  410f33:	mov    r14,rax
  410f36:	jmp    410e00 <_start@@Base+0xb3d0>
  410f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f40:	cmp    r8,0x3
  410f44:	jle    40ff17 <_start@@Base+0xa4e7>
  410f4a:	mov    ecx,0x3
  410f4f:	mov    rdx,rbx
  410f52:	mov    rsi,r14
  410f55:	mov    rdi,rbp
  410f58:	call   409ba0 <_start@@Base+0x4170>
  410f5d:	cmp    rax,r14
  410f60:	mov    r13,rax
  410f63:	je     40ff17 <_start@@Base+0xa4e7>
  410f69:	mov    rcx,r15
  410f6c:	mov    rdx,rbx
  410f6f:	mov    rsi,rax
  410f72:	mov    rdi,rbp
  410f75:	mov    QWORD PTR [rsp+0x60],0x0
  410f7e:	call   408530 <_start@@Base+0x2b00>
  410f83:	cmp    r13,rax
  410f86:	mov    r14,rax
  410f89:	je     412cf0 <_start@@Base+0xd2c0>
  410f8f:	cmp    QWORD PTR [rsp+0x60],0x0
  410f95:	jne    410fa1 <_start@@Base+0xb571>
  410f97:	test   BYTE PTR [rbp+0x10],0x2
  410f9b:	je     40ff28 <_start@@Base+0xa4f8>
  410fa1:	mov    rdi,QWORD PTR [rbp+0x0]
  410fa5:	mov    ecx,0x8
  410faa:	mov    edx,0x8
  410faf:	mov    esi,0x1
  410fb4:	call   418180 <flatcc_builder_table_add@@Base>
  410fb9:	test   rax,rax
  410fbc:	je     411a5b <_start@@Base+0xc02b>
  410fc2:	mov    rdx,QWORD PTR [rsp+0x60]
  410fc7:	mov    QWORD PTR [rax],rdx
  410fca:	jmp    40ff28 <_start@@Base+0xa4f8>
  410fcf:	nop
  410fd0:	cmp    r9,0x7
  410fd4:	jle    410db6 <_start@@Base+0xb386>
  410fda:	mov    rsi,r14
  410fdd:	mov    ecx,0x7
  410fe2:	mov    rdx,rbx
  410fe5:	mov    rdi,rbp
  410fe8:	call   409ba0 <_start@@Base+0x4170>
  410fed:	cmp    rax,r14
  410ff0:	mov    rsi,rax
  410ff3:	je     410db6 <_start@@Base+0xb386>
  410ff9:	mov    r8d,0x1
  410fff:	mov    rcx,r13
  411002:	mov    rdx,rbx
  411005:	mov    rdi,rbp
  411008:	call   41d400 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  41100d:	mov    r14,rax
  411010:	mov    eax,DWORD PTR [rsp+0x60]
  411014:	test   eax,eax
  411016:	je     41102f <_start@@Base+0xb5ff>
  411018:	mov    rdi,QWORD PTR [rbp+0x0]
  41101c:	mov    esi,0x1
  411021:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411026:	test   rax,rax
  411029:	jne    410eac <_start@@Base+0xb47c>
  41102f:	mov    r13,r14
  411032:	mov    r14,QWORD PTR [rsp+0x8]
  411037:	mov    rsi,r13
  41103a:	mov    ecx,0x21
  41103f:	mov    rdx,rbx
  411042:	mov    rdi,rbp
  411045:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41104a:	mov    r9d,DWORD PTR [rsp+0x44]
  41104f:	mov    r13,rax
  411052:	test   r9d,r9d
  411055:	je     40f848 <_start@@Base+0x9e18>
  41105b:	mov    rdi,QWORD PTR [rbp+0x0]
  41105f:	mov    esi,0x23
  411064:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411069:	test   rax,rax
  41106c:	je     40f848 <_start@@Base+0x9e18>
  411072:	mov    edx,DWORD PTR [rsp+0x44]
  411076:	mov    DWORD PTR [rax],edx
  411078:	jmp    40fd00 <_start@@Base+0xa2d0>
  41107d:	mov    rdi,QWORD PTR [rbp+0x0]
  411081:	call   4175c0 <flatcc_builder_end_vector@@Base>
  411086:	test   eax,eax
  411088:	mov    DWORD PTR [rsp+0x44],eax
  41108c:	je     40f848 <_start@@Base+0x9e18>
  411092:	mov    rdi,QWORD PTR [rbp+0x0]
  411096:	mov    esi,0x9
  41109b:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4110a0:	test   rax,rax
  4110a3:	je     40f848 <_start@@Base+0x9e18>
  4110a9:	mov    edx,DWORD PTR [rsp+0x44]
  4110ad:	mov    DWORD PTR [rax],edx
  4110af:	jmp    40fd00 <_start@@Base+0xa2d0>
  4110b4:	mov    rdx,rbx
  4110b7:	mov    rsi,r8
  4110ba:	mov    rdi,rbp
  4110bd:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4110c2:	mov    r13,rax
  4110c5:	jmp    40fd00 <_start@@Base+0xa2d0>
  4110ca:	mov    rdx,rbx
  4110cd:	mov    rsi,r12
  4110d0:	mov    rdi,rbp
  4110d3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4110d8:	mov    r13,rax
  4110db:	jmp    40fd00 <_start@@Base+0xa2d0>
  4110e0:	mov    ecx,0x5
  4110e5:	mov    rdx,rbx
  4110e8:	mov    rsi,r14
  4110eb:	mov    rdi,rbp
  4110ee:	call   409ba0 <_start@@Base+0x4170>
  4110f3:	cmp    rax,r14
  4110f6:	mov    r13,rax
  4110f9:	je     40ff17 <_start@@Base+0xa4e7>
  4110ff:	xor    esi,esi
  411101:	cmp    rbx,rax
  411104:	mov    QWORD PTR [rsp+0x60],0x0
  41110d:	mov    WORD PTR [rsp+0x3e],si
  411112:	mov    DWORD PTR [rsp+0x58],0x0
  41111a:	je     411a30 <_start@@Base+0xc000>
  411120:	mov    rcx,QWORD PTR [rsp+0x8]
  411125:	mov    r8,r15
  411128:	mov    rdx,rbx
  41112b:	mov    rsi,rax
  41112e:	mov    rdi,rbp
  411131:	call   41c710 <flatcc_json_parser_integer@@Base>
  411136:	cmp    r13,rax
  411139:	mov    r14,rax
  41113c:	je     411a30 <_start@@Base+0xc000>
  411142:	mov    ecx,DWORD PTR [rsp+0x58]
  411146:	test   ecx,ecx
  411148:	jne    412260 <_start@@Base+0xc830>
  41114e:	mov    rax,QWORD PTR [rsp+0x60]
  411153:	cmp    rax,0xffff
  411159:	ja     412428 <_start@@Base+0xc9f8>
  41115f:	mov    edx,eax
  411161:	mov    WORD PTR [rsp+0x3e],ax
  411166:	test   dx,dx
  411169:	jne    411175 <_start@@Base+0xb745>
  41116b:	test   BYTE PTR [rbp+0x10],0x2
  41116f:	je     40ff28 <_start@@Base+0xa4f8>
  411175:	mov    rdi,QWORD PTR [rbp+0x0]
  411179:	mov    ecx,0x2
  41117e:	mov    edx,0x2
  411183:	mov    esi,0x2
  411188:	call   418180 <flatcc_builder_table_add@@Base>
  41118d:	test   rax,rax
  411190:	je     411a5b <_start@@Base+0xc02b>
  411196:	movzx  edx,WORD PTR [rsp+0x3e]
  41119b:	mov    WORD PTR [rax],dx
  41119e:	jmp    40ff28 <_start@@Base+0xa4f8>
  4111a3:	mov    rsi,r13
  4111a6:	mov    ecx,0x5
  4111ab:	mov    rdx,rbx
  4111ae:	mov    rdi,rbp
  4111b1:	call   409ba0 <_start@@Base+0x4170>
  4111b6:	cmp    rax,r13
  4111b9:	mov    rsi,rax
  4111bc:	je     41047a <_start@@Base+0xaa4a>
  4111c2:	lea    r12,[rsp+0x44]
  4111c7:	mov    rdx,rbx
  4111ca:	mov    rdi,rbp
  4111cd:	mov    rcx,r12
  4111d0:	call   40f5c0 <_start@@Base+0x9b90>
  4111d5:	mov    r13,rax
  4111d8:	mov    eax,DWORD PTR [rsp+0x44]
  4111dc:	test   eax,eax
  4111de:	je     40f848 <_start@@Base+0x9e18>
  4111e4:	mov    rdi,QWORD PTR [rbp+0x0]
  4111e8:	mov    esi,0xc
  4111ed:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4111f2:	test   rax,rax
  4111f5:	je     40f848 <_start@@Base+0x9e18>
  4111fb:	mov    edx,DWORD PTR [rsp+0x44]
  4111ff:	mov    DWORD PTR [rax],edx
  411201:	jmp    40fd00 <_start@@Base+0xa2d0>
  411206:	lea    r12,[r13+0x10]
  41120a:	mov    r8,rbx
  41120d:	sub    r8,r12
  411210:	cmp    r8,0x7
  411214:	jbe    41215d <_start@@Base+0xc72d>
  41121a:	movbe  rax,QWORD PTR [r13+0x10]
  411220:	movabs rdx,0xffff000000000000
  41122a:	movabs rcx,0x6732000000000000
  411234:	and    rdx,rax
  411237:	cmp    rdx,rcx
  41123a:	je     4124db <_start@@Base+0xcaab>
  411240:	movabs rdx,0xff00000000000000
  41124a:	and    rax,rdx
  41124d:	movabs rdx,0x6700000000000000
  411257:	cmp    rax,rdx
  41125a:	jne    4122f0 <_start@@Base+0xc8c0>
  411260:	cmp    r8,0x1
  411264:	jle    413148 <_start@@Base+0xd718>
  41126a:	mov    ecx,0x1
  41126f:	mov    rdx,rbx
  411272:	mov    rsi,r12
  411275:	mov    rdi,rbp
  411278:	call   409ba0 <_start@@Base+0x4170>
  41127d:	cmp    r12,rax
  411280:	mov    r13,rax
  411283:	je     413148 <_start@@Base+0xd718>
  411289:	mov    rdi,QWORD PTR [rbp+0x0]
  41128d:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  411292:	test   eax,eax
  411294:	jne    40f848 <_start@@Base+0x9e18>
  41129a:	mov    rsi,r13
  41129d:	mov    rdi,rbp
  4112a0:	mov    rcx,r14
  4112a3:	mov    rdx,rbx
  4112a6:	call   409b00 <_start@@Base+0x40d0>
  4112ab:	mov    edi,DWORD PTR [rsp+0x40]
  4112af:	mov    r13,rax
  4112b2:	test   edi,edi
  4112b4:	je     412efa <_start@@Base+0xd4ca>
  4112ba:	lea    r12,[rsp+0x44]
  4112bf:	jmp    411305 <_start@@Base+0xb8d5>
  4112c1:	nop    DWORD PTR [rax+0x0]
  4112c8:	mov    rdi,QWORD PTR [rbp+0x0]
  4112cc:	mov    esi,0x1
  4112d1:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  4112d6:	test   rax,rax
  4112d9:	je     40f848 <_start@@Base+0x9e18>
  4112df:	mov    edx,DWORD PTR [rsp+0x44]
  4112e3:	mov    rcx,r14
  4112e6:	mov    rsi,r13
  4112e9:	mov    rdi,rbp
  4112ec:	mov    DWORD PTR [rax],edx
  4112ee:	mov    rdx,rbx
  4112f1:	call   40a300 <_start@@Base+0x48d0>
  4112f6:	mov    ecx,DWORD PTR [rsp+0x40]
  4112fa:	mov    r13,rax
  4112fd:	test   ecx,ecx
  4112ff:	je     412efa <_start@@Base+0xd4ca>
  411305:	mov    rsi,r13
  411308:	mov    rcx,r12
  41130b:	mov    rdx,rbx
  41130e:	mov    rdi,rbp
  411311:	call   41d800 <flatcc_json_parser_build_string@@Base>
  411316:	mov    esi,DWORD PTR [rsp+0x44]
  41131a:	mov    r13,rax
  41131d:	test   esi,esi
  41131f:	jne    4112c8 <_start@@Base+0xb898>
  411321:	jmp    40f848 <_start@@Base+0x9e18>
  411326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411330:	cmp    r8,0x8
  411334:	jle    4107c0 <_start@@Base+0xad90>
  41133a:	mov    ecx,0x8
  41133f:	mov    rdx,rbx
  411342:	mov    rsi,r12
  411345:	mov    rdi,rbp
  411348:	call   409ba0 <_start@@Base+0x4170>
  41134d:	cmp    r12,rax
  411350:	mov    r13,rax
  411353:	je     4107c0 <_start@@Base+0xad90>
  411359:	mov    rdi,QWORD PTR [rbp+0x0]
  41135d:	mov    ecx,0xffffffff
  411362:	mov    edx,0x1
  411367:	mov    esi,0x1
  41136c:	call   4166c0 <flatcc_builder_start_vector@@Base>
  411371:	test   eax,eax
  411373:	jne    40f848 <_start@@Base+0x9e18>
  411379:	mov    rsi,r13
  41137c:	mov    rcx,r14
  41137f:	mov    rdx,rbx
  411382:	mov    rdi,rbp
  411385:	call   409b00 <_start@@Base+0x40d0>
  41138a:	mov    r8d,DWORD PTR [rsp+0x40]
  41138f:	mov    r13,rax
  411392:	test   r8d,r8d
  411395:	je     4123a3 <_start@@Base+0xc973>
  41139b:	lea    rax,[rsp+0x58]
  4113a0:	mov    QWORD PTR [rsp+0x8],rax
  4113a5:	lea    rax,[rsp+0x4c]
  4113aa:	mov    QWORD PTR [rsp+0x18],rax
  4113af:	jmp    411450 <_start@@Base+0xba20>
  4113b4:	nop    DWORD PTR [rax+0x0]
  4113b8:	cmp    rbx,r13
  4113bb:	mov    QWORD PTR [rsp+0x60],0x0
  4113c4:	mov    DWORD PTR [rsp+0x58],0x0
  4113cc:	je     41152a <_start@@Base+0xbafa>
  4113d2:	mov    r8,QWORD PTR [rsp]
  4113d6:	mov    rcx,QWORD PTR [rsp+0x8]
  4113db:	mov    rsi,r13
  4113de:	mov    rdx,rbx
  4113e1:	mov    rdi,rbp
  4113e4:	call   41c710 <flatcc_json_parser_integer@@Base>
  4113e9:	cmp    rax,r13
  4113ec:	mov    rsi,rax
  4113ef:	je     411534 <_start@@Base+0xbb04>
  4113f5:	mov    edi,DWORD PTR [rsp+0x58]
  4113f9:	mov    ecx,0x8
  4113fe:	test   edi,edi
  411400:	jne    411515 <_start@@Base+0xbae5>
  411406:	mov    rdx,QWORD PTR [rsp+0x60]
  41140b:	test   dl,dl
  41140d:	setne  al
  411410:	cmp    rdx,0xff
  411417:	ja     411510 <_start@@Base+0xbae0>
  41141d:	mov    BYTE PTR [rsp+0x4c],al
  411421:	cmp    rsi,r13
  411424:	je     4114de <_start@@Base+0xbaae>
  41142a:	movzx  eax,BYTE PTR [rsp+0x4c]
  41142f:	mov    rcx,r14
  411432:	mov    rdx,rbx
  411435:	mov    rdi,rbp
  411438:	mov    BYTE PTR [r12],al
  41143c:	call   40a300 <_start@@Base+0x48d0>
  411441:	mov    esi,DWORD PTR [rsp+0x40]
  411445:	mov    r13,rax
  411448:	test   esi,esi
  41144a:	je     4123a3 <_start@@Base+0xc973>
  411450:	mov    rdi,QWORD PTR [rbp+0x0]
  411454:	mov    esi,0x1
  411459:	mov    BYTE PTR [rsp+0x4c],0x0
  41145e:	call   416020 <flatcc_builder_extend_vector@@Base>
  411463:	test   rax,rax
  411466:	mov    r12,rax
  411469:	je     40f848 <_start@@Base+0x9e18>
  41146f:	mov    r15,rbx
  411472:	sub    r15,r13
  411475:	cmp    r15,0x3
  411479:	jle    4113b8 <_start@@Base+0xb988>
  41147f:	lea    rsi,[rip+0x1a141]        # 42b5c7 <_IO_stdin_used@@Base+0x5c7>
  411486:	mov    edx,0x4
  41148b:	mov    rdi,r13
  41148e:	call   4050b0 <memcmp@plt>
  411493:	test   eax,eax
  411495:	je     4114d0 <_start@@Base+0xbaa0>
  411497:	cmp    r15,0x4
  41149b:	je     4113b8 <_start@@Base+0xb988>
  4114a1:	lea    rsi,[rip+0x1a124]        # 42b5cc <_IO_stdin_used@@Base+0x5cc>
  4114a8:	mov    edx,0x5
  4114ad:	mov    rdi,r13
  4114b0:	call   4050b0 <memcmp@plt>
  4114b5:	test   eax,eax
  4114b7:	jne    4113b8 <_start@@Base+0xb988>
  4114bd:	mov    BYTE PTR [rsp+0x4c],0x0
  4114c2:	lea    rsi,[r13+0x5]
  4114c6:	jmp    411421 <_start@@Base+0xb9f1>
  4114cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4114d0:	mov    BYTE PTR [rsp+0x4c],0x1
  4114d5:	lea    rsi,[r13+0x4]
  4114d9:	jmp    411421 <_start@@Base+0xb9f1>
  4114de:	mov    r8,QWORD PTR [rsp+0x18]
  4114e3:	lea    rcx,[rip+0x28216]        # 439700 <__data_start@@Base+0x640>
  4114ea:	mov    rdx,rbx
  4114ed:	mov    rdi,rbp
  4114f0:	call   408be0 <_start@@Base+0x31b0>
  4114f5:	cmp    rax,r13
  4114f8:	mov    rsi,rax
  4114fb:	je     411506 <_start@@Base+0xbad6>
  4114fd:	cmp    rbx,rax
  411500:	jne    41142a <_start@@Base+0xb9fa>
  411506:	mov    r13,rsi
  411509:	jmp    40f848 <_start@@Base+0x9e18>
  41150e:	xchg   ax,ax
  411510:	mov    ecx,0x7
  411515:	mov    rdx,rbx
  411518:	mov    rdi,rbp
  41151b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411520:	mov    rsi,rax
  411523:	xor    eax,eax
  411525:	jmp    41141d <_start@@Base+0xb9ed>
  41152a:	mov    rsi,rbx
  41152d:	xor    eax,eax
  41152f:	jmp    41141d <_start@@Base+0xb9ed>
  411534:	mov    rsi,r13
  411537:	xor    eax,eax
  411539:	jmp    41141d <_start@@Base+0xb9ed>
  41153e:	mov    rsi,r14
  411541:	mov    ecx,0x4
  411546:	mov    rdx,rbx
  411549:	mov    rdi,rbp
  41154c:	call   409ba0 <_start@@Base+0x4170>
  411551:	cmp    rax,r14
  411554:	mov    rsi,rax
  411557:	je     410db6 <_start@@Base+0xb386>
  41155d:	xor    r8d,r8d
  411560:	mov    rcx,r13
  411563:	mov    rdx,rbx
  411566:	mov    rdi,rbp
  411569:	call   41d400 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  41156e:	mov    r14,rax
  411571:	mov    eax,DWORD PTR [rsp+0x60]
  411575:	test   eax,eax
  411577:	je     41102f <_start@@Base+0xb5ff>
  41157d:	mov    rdi,QWORD PTR [rbp+0x0]
  411581:	xor    esi,esi
  411583:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411588:	test   rax,rax
  41158b:	jne    410eac <_start@@Base+0xb47c>
  411591:	jmp    41102f <_start@@Base+0xb5ff>
  411596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115a0:	mov    ecx,0x8
  4115a5:	mov    rdx,rbx
  4115a8:	mov    rsi,r13
  4115ab:	mov    rdi,rbp
  4115ae:	call   409ba0 <_start@@Base+0x4170>
  4115b3:	cmp    rax,r13
  4115b6:	mov    r12,rax
  4115b9:	je     41022a <_start@@Base+0xa7fa>
  4115bf:	mov    r13,rbx
  4115c2:	mov    BYTE PTR [rsp+0x4c],0x0
  4115c7:	sub    r13,rax
  4115ca:	cmp    r13,0x3
  4115ce:	jle    41160f <_start@@Base+0xbbdf>
  4115d0:	lea    rsi,[rip+0x19ff0]        # 42b5c7 <_IO_stdin_used@@Base+0x5c7>
  4115d7:	mov    edx,0x4
  4115dc:	mov    rdi,rax
  4115df:	call   4050b0 <memcmp@plt>
  4115e4:	test   eax,eax
  4115e6:	je     41214e <_start@@Base+0xc71e>
  4115ec:	cmp    r13,0x4
  4115f0:	je     41160f <_start@@Base+0xbbdf>
  4115f2:	lea    rsi,[rip+0x19fd3]        # 42b5cc <_IO_stdin_used@@Base+0x5cc>
  4115f9:	mov    edx,0x5
  4115fe:	mov    rdi,r12
  411601:	lea    r13,[r12+0x5]
  411606:	call   4050b0 <memcmp@plt>
  41160b:	test   eax,eax
  41160d:	je     411687 <_start@@Base+0xbc57>
  41160f:	cmp    rbx,r12
  411612:	mov    QWORD PTR [rsp+0x60],0x0
  41161b:	mov    DWORD PTR [rsp+0x58],0x0
  411623:	je     4120c0 <_start@@Base+0xc690>
  411629:	mov    r8,QWORD PTR [rsp]
  41162d:	lea    rcx,[rsp+0x58]
  411632:	mov    rdx,rbx
  411635:	mov    rsi,r12
  411638:	mov    rdi,rbp
  41163b:	call   41c710 <flatcc_json_parser_integer@@Base>
  411640:	cmp    r12,rax
  411643:	mov    r13,rax
  411646:	je     4120c0 <_start@@Base+0xc690>
  41164c:	mov    r8d,DWORD PTR [rsp+0x58]
  411651:	mov    ecx,0x8
  411656:	test   r8d,r8d
  411659:	jne    4122c5 <_start@@Base+0xc895>
  41165f:	mov    rax,QWORD PTR [rsp+0x60]
  411664:	cmp    rax,0xff
  41166a:	ja     4122c0 <_start@@Base+0xc890>
  411670:	test   al,al
  411672:	setne  al
  411675:	mov    BYTE PTR [rsp+0x4c],al
  411679:	cmp    al,0x1
  41167b:	jne    411687 <_start@@Base+0xbc57>
  41167d:	test   BYTE PTR [rbp+0x10],0x2
  411681:	je     40fd00 <_start@@Base+0xa2d0>
  411687:	mov    rdi,QWORD PTR [rbp+0x0]
  41168b:	mov    ecx,0x1
  411690:	mov    edx,0x1
  411695:	mov    esi,0xf
  41169a:	call   418180 <flatcc_builder_table_add@@Base>
  41169f:	test   rax,rax
  4116a2:	je     40f848 <_start@@Base+0x9e18>
  4116a8:	movzx  edx,BYTE PTR [rsp+0x4c]
  4116ad:	mov    BYTE PTR [rax],dl
  4116af:	jmp    40fd00 <_start@@Base+0xa2d0>
  4116b4:	mov    rdx,rbx
  4116b7:	mov    rsi,r8
  4116ba:	mov    rdi,rbp
  4116bd:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4116c2:	mov    r13,rax
  4116c5:	jmp    40fd00 <_start@@Base+0xa2d0>
  4116ca:	mov    ecx,0x4
  4116cf:	mov    rdx,rbx
  4116d2:	mov    rsi,r13
  4116d5:	mov    rdi,rbp
  4116d8:	call   409ba0 <_start@@Base+0x4170>
  4116dd:	cmp    rax,r13
  4116e0:	mov    r12,rax
  4116e3:	je     41029a <_start@@Base+0xa86a>
  4116e9:	mov    rdi,QWORD PTR [rbp+0x0]
  4116ed:	mov    ecx,0xffffffff
  4116f2:	mov    edx,0x1
  4116f7:	mov    esi,0x1
  4116fc:	call   4166c0 <flatcc_builder_start_vector@@Base>
  411701:	test   eax,eax
  411703:	jne    413240 <_start@@Base+0xd810>
  411709:	mov    rcx,r14
  41170c:	mov    rdx,rbx
  41170f:	mov    rsi,r12
  411712:	mov    rdi,rbp
  411715:	call   409b00 <_start@@Base+0x40d0>
  41171a:	mov    r13,rax
  41171d:	mov    eax,DWORD PTR [rsp+0x40]
  411721:	test   eax,eax
  411723:	je     411855 <_start@@Base+0xbe25>
  411729:	lea    rax,[rsp+0x4c]
  41172e:	lea    r12,[rsp+0x58]
  411733:	mov    QWORD PTR [rsp+0x8],rax
  411738:	jmp    4117a7 <_start@@Base+0xbd77>
  41173a:	nop    WORD PTR [rax+rax*1+0x0]
  411740:	mov    r8,QWORD PTR [rsp]
  411744:	mov    rsi,r13
  411747:	mov    rcx,r12
  41174a:	mov    rdx,rbx
  41174d:	mov    rdi,rbp
  411750:	call   41c710 <flatcc_json_parser_integer@@Base>
  411755:	cmp    rax,r13
  411758:	mov    rsi,rax
  41175b:	je     4117e5 <_start@@Base+0xbdb5>
  411761:	mov    eax,DWORD PTR [rsp+0x58]
  411765:	test   eax,eax
  411767:	jne    411820 <_start@@Base+0xbdf0>
  41176d:	mov    rdx,QWORD PTR [rsp+0x60]
  411772:	cmp    rdx,0xff
  411779:	ja     411840 <_start@@Base+0xbe10>
  41177f:	mov    eax,edx
  411781:	mov    BYTE PTR [rsp+0x4c],dl
  411785:	mov    BYTE PTR [r15],al
  411788:	mov    rcx,r14
  41178b:	mov    rdx,rbx
  41178e:	mov    rdi,rbp
  411791:	call   40a300 <_start@@Base+0x48d0>
  411796:	mov    r15d,DWORD PTR [rsp+0x40]
  41179b:	mov    r13,rax
  41179e:	test   r15d,r15d
  4117a1:	je     411855 <_start@@Base+0xbe25>
  4117a7:	mov    rdi,QWORD PTR [rbp+0x0]
  4117ab:	mov    esi,0x1
  4117b0:	mov    BYTE PTR [rsp+0x4c],0x0
  4117b5:	call   416020 <flatcc_builder_extend_vector@@Base>
  4117ba:	test   rax,rax
  4117bd:	mov    r15,rax
  4117c0:	je     40f848 <_start@@Base+0x9e18>
  4117c6:	cmp    rbx,r13
  4117c9:	mov    QWORD PTR [rsp+0x60],0x0
  4117d2:	mov    DWORD PTR [rsp+0x58],0x0
  4117da:	mov    BYTE PTR [rsp+0x4c],0x0
  4117df:	jne    411740 <_start@@Base+0xbd10>
  4117e5:	mov    r8,QWORD PTR [rsp+0x8]
  4117ea:	lea    rcx,[rip+0x27faf]        # 4397a0 <__data_start@@Base+0x6e0>
  4117f1:	mov    rsi,r13
  4117f4:	mov    rdx,rbx
  4117f7:	mov    rdi,rbp
  4117fa:	call   409930 <_start@@Base+0x3f00>
  4117ff:	cmp    rax,r13
  411802:	mov    rsi,rax
  411805:	je     412b9c <_start@@Base+0xd16c>
  41180b:	cmp    rbx,rax
  41180e:	je     412b9c <_start@@Base+0xd16c>
  411814:	movzx  eax,BYTE PTR [rsp+0x4c]
  411819:	jmp    411785 <_start@@Base+0xbd55>
  41181e:	xchg   ax,ax
  411820:	mov    ecx,0x8
  411825:	mov    rdx,rbx
  411828:	mov    rdi,rbp
  41182b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411830:	mov    rsi,rax
  411833:	cmp    rsi,r13
  411836:	jne    411814 <_start@@Base+0xbde4>
  411838:	jmp    4117e5 <_start@@Base+0xbdb5>
  41183a:	nop    WORD PTR [rax+rax*1+0x0]
  411840:	mov    ecx,0x7
  411845:	mov    rdx,rbx
  411848:	mov    rdi,rbp
  41184b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411850:	mov    rsi,rax
  411853:	jmp    411833 <_start@@Base+0xbe03>
  411855:	mov    rdi,QWORD PTR [rbp+0x0]
  411859:	call   4175c0 <flatcc_builder_end_vector@@Base>
  41185e:	test   eax,eax
  411860:	mov    DWORD PTR [rsp+0x44],eax
  411864:	je     40f848 <_start@@Base+0x9e18>
  41186a:	mov    rdi,QWORD PTR [rbp+0x0]
  41186e:	mov    esi,0x1e
  411873:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411878:	test   rax,rax
  41187b:	je     40f848 <_start@@Base+0x9e18>
  411881:	mov    edx,DWORD PTR [rsp+0x44]
  411885:	mov    DWORD PTR [rax],edx
  411887:	jmp    40fd00 <_start@@Base+0xa2d0>
  41188c:	mov    rsi,r13
  41188f:	mov    ecx,0x4
  411894:	mov    rdx,rbx
  411897:	mov    rdi,rbp
  41189a:	call   409ba0 <_start@@Base+0x4170>
  41189f:	cmp    rax,r13
  4118a2:	mov    rsi,rax
  4118a5:	je     4102ba <_start@@Base+0xa88a>
  4118ab:	lea    r12,[rsp+0x44]
  4118b0:	mov    rdx,rbx
  4118b3:	mov    rdi,rbp
  4118b6:	mov    rcx,r12
  4118b9:	call   41d800 <flatcc_json_parser_build_string@@Base>
  4118be:	mov    r8d,DWORD PTR [rsp+0x44]
  4118c3:	mov    r13,rax
  4118c6:	test   r8d,r8d
  4118c9:	je     40f848 <_start@@Base+0x9e18>
  4118cf:	mov    rdi,QWORD PTR [rbp+0x0]
  4118d3:	mov    esi,0x3
  4118d8:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4118dd:	test   rax,rax
  4118e0:	je     40f848 <_start@@Base+0x9e18>
  4118e6:	mov    edx,DWORD PTR [rsp+0x44]
  4118ea:	mov    DWORD PTR [rax],edx
  4118ec:	jmp    40fd00 <_start@@Base+0xa2d0>
  4118f1:	lea    r12,[r13+0x8]
  4118f5:	mov    r8,rbx
  4118f8:	sub    r8,r12
  4118fb:	cmp    r8,0x7
  4118ff:	jbe    41222a <_start@@Base+0xc7fa>
  411905:	movbe  rax,QWORD PTR [r13+0x8]
  41190b:	movabs rdx,0xff00000000000000
  411915:	and    rax,rdx
  411918:	movabs rdx,0x7900000000000000
  411922:	cmp    rax,rdx
  411925:	jne    4121fe <_start@@Base+0xc7ce>
  41192b:	cmp    r8,0x1
  41192f:	jle    4130f3 <_start@@Base+0xd6c3>
  411935:	mov    ecx,0x1
  41193a:	mov    rdx,rbx
  41193d:	mov    rsi,r12
  411940:	mov    rdi,rbp
  411943:	call   409ba0 <_start@@Base+0x4170>
  411948:	cmp    r12,rax
  41194b:	mov    r13,rax
  41194e:	je     4130f3 <_start@@Base+0xd6c3>
  411954:	mov    rdi,QWORD PTR [rbp+0x0]
  411958:	mov    ecx,0xffffffff
  41195d:	mov    edx,0x1
  411962:	mov    esi,0x1
  411967:	call   4166c0 <flatcc_builder_start_vector@@Base>
  41196c:	test   eax,eax
  41196e:	jne    40f848 <_start@@Base+0x9e18>
  411974:	mov    rsi,r13
  411977:	mov    rcx,r14
  41197a:	mov    rdx,rbx
  41197d:	mov    rdi,rbp
  411980:	call   409b00 <_start@@Base+0x40d0>
  411985:	mov    r11d,DWORD PTR [rsp+0x40]
  41198a:	mov    r13,rax
  41198d:	test   r11d,r11d
  411990:	je     412adb <_start@@Base+0xd0ab>
  411996:	mov    r12,QWORD PTR [rsp]
  41199a:	jmp    4119ca <_start@@Base+0xbf9a>
  41199c:	nop    DWORD PTR [rax+0x0]
  4119a0:	movzx  edx,BYTE PTR [rsp+0x60]
  4119a5:	mov    rcx,r14
  4119a8:	mov    rsi,rax
  4119ab:	mov    rdi,rbp
  4119ae:	mov    BYTE PTR [r15],dl
  4119b1:	mov    rdx,rbx
  4119b4:	call   40a300 <_start@@Base+0x48d0>
  4119b9:	mov    r10d,DWORD PTR [rsp+0x40]
  4119be:	mov    r13,rax
  4119c1:	test   r10d,r10d
  4119c4:	je     412adb <_start@@Base+0xd0ab>
  4119ca:	mov    rdi,QWORD PTR [rbp+0x0]
  4119ce:	mov    esi,0x1
  4119d3:	mov    BYTE PTR [rsp+0x60],0x0
  4119d8:	call   416020 <flatcc_builder_extend_vector@@Base>
  4119dd:	test   rax,rax
  4119e0:	mov    r15,rax
  4119e3:	je     40f848 <_start@@Base+0x9e18>
  4119e9:	mov    rcx,r12
  4119ec:	mov    rdx,rbx
  4119ef:	mov    rsi,r13
  4119f2:	mov    rdi,rbp
  4119f5:	call   408280 <_start@@Base+0x2850>
  4119fa:	cmp    rax,r13
  4119fd:	jne    4119a0 <_start@@Base+0xbf70>
  4119ff:	lea    rcx,[rip+0x27d5a]        # 439760 <__data_start@@Base+0x6a0>
  411a06:	mov    r8,r12
  411a09:	mov    rdx,rbx
  411a0c:	mov    rsi,r13
  411a0f:	mov    rdi,rbp
  411a12:	call   409930 <_start@@Base+0x3f00>
  411a17:	cmp    rax,r13
  411a1a:	je     411a25 <_start@@Base+0xbff5>
  411a1c:	cmp    rbx,rax
  411a1f:	jne    4119a0 <_start@@Base+0xbf70>
  411a25:	mov    r13,rax
  411a28:	jmp    40f848 <_start@@Base+0x9e18>
  411a2d:	nop    DWORD PTR [rax]
  411a30:	mov    r8,QWORD PTR [rsp+0x28]
  411a35:	lea    rcx,[rip+0x276c4]        # 439100 <__data_start@@Base+0x40>
  411a3c:	mov    rdx,rbx
  411a3f:	mov    rsi,r13
  411a42:	mov    rdi,rbp
  411a45:	call   408db0 <_start@@Base+0x3380>
  411a4a:	cmp    rax,r13
  411a4d:	mov    r14,rax
  411a50:	je     411a5b <_start@@Base+0xc02b>
  411a52:	cmp    rbx,rax
  411a55:	jne    41227f <_start@@Base+0xc84f>
  411a5b:	mov    r13,r14
  411a5e:	mov    r14,QWORD PTR [rsp+0x20]
  411a63:	mov    rsi,r13
  411a66:	mov    ecx,0x21
  411a6b:	mov    rdx,rbx
  411a6e:	mov    rdi,rbp
  411a71:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411a76:	mov    r13,rax
  411a79:	mov    eax,DWORD PTR [rsp+0x44]
  411a7d:	test   eax,eax
  411a7f:	je     40f848 <_start@@Base+0x9e18>
  411a85:	mov    rdi,QWORD PTR [rbp+0x0]
  411a89:	mov    esi,0xe
  411a8e:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411a93:	test   rax,rax
  411a96:	je     40f848 <_start@@Base+0x9e18>
  411a9c:	mov    edx,DWORD PTR [rsp+0x44]
  411aa0:	mov    DWORD PTR [rax],edx
  411aa2:	jmp    40fd00 <_start@@Base+0xa2d0>
  411aa7:	mov    rdi,QWORD PTR [rbp+0x0]
  411aab:	call   4175c0 <flatcc_builder_end_vector@@Base>
  411ab0:	test   eax,eax
  411ab2:	mov    DWORD PTR [rsp+0x44],eax
  411ab6:	je     40f848 <_start@@Base+0x9e18>
  411abc:	mov    rdi,QWORD PTR [rbp+0x0]
  411ac0:	mov    esi,0x1f
  411ac5:	call   418350 <flatcc_builder_table_add_offset@@Base>
  411aca:	test   rax,rax
  411acd:	je     40f848 <_start@@Base+0x9e18>
  411ad3:	mov    edx,DWORD PTR [rsp+0x44]
  411ad7:	mov    DWORD PTR [rax],edx
  411ad9:	jmp    40fd00 <_start@@Base+0xa2d0>
  411ade:	mov    rdx,rbx
  411ae1:	mov    rsi,r12
  411ae4:	mov    rdi,rbp
  411ae7:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411aec:	mov    r13,rax
  411aef:	jmp    40fd00 <_start@@Base+0xa2d0>
  411af4:	nop    DWORD PTR [rax+0x0]
  411af8:	mov    rsi,r13
  411afb:	mov    ecx,0x4
  411b00:	mov    rdx,rbx
  411b03:	mov    rdi,rbp
  411b06:	call   409ba0 <_start@@Base+0x4170>
  411b0b:	cmp    rax,r13
  411b0e:	mov    rsi,rax
  411b11:	je     40fa6f <_start@@Base+0xa03f>
  411b17:	lea    rax,[rip+0x1a62]        # 413580 <_start@@Base+0xdb50>
  411b1e:	sub    rsp,0x8
  411b22:	mov    r8d,0x8
  411b28:	xor    ecx,ecx
  411b2a:	mov    rdx,rbx
  411b2d:	mov    rdi,rbp
  411b30:	push   rax
  411b31:	mov    r9,QWORD PTR [rsp+0x60]
  411b36:	call   41daa0 <flatcc_json_parser_union@@Base>
  411b3b:	pop    r15
  411b3d:	mov    r13,rax
  411b40:	pop    rax
  411b41:	jmp    40fd00 <_start@@Base+0xa2d0>
  411b46:	mov    rdx,rbx
  411b49:	mov    rsi,r12
  411b4c:	mov    rdi,rbp
  411b4f:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411b54:	mov    r13,rax
  411b57:	jmp    40fd00 <_start@@Base+0xa2d0>
  411b5c:	mov    rdx,rbx
  411b5f:	mov    rsi,r12
  411b62:	mov    rdi,rbp
  411b65:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411b6a:	mov    r13,rax
  411b6d:	jmp    40fd00 <_start@@Base+0xa2d0>
  411b72:	mov    r12,rax
  411b75:	lea    r8,[rsp+0x4c]
  411b7a:	lea    rcx,[rip+0x27c3f]        # 4397c0 <__data_start@@Base+0x700>
  411b81:	mov    rdx,rbx
  411b84:	mov    rsi,r12
  411b87:	mov    rdi,rbp
  411b8a:	call   409190 <_start@@Base+0x3760>
  411b8f:	cmp    rax,r12
  411b92:	mov    r13,rax
  411b95:	je     40f848 <_start@@Base+0x9e18>
  411b9b:	cmp    rbx,rax
  411b9e:	je     40f848 <_start@@Base+0x9e18>
  411ba4:	movzx  eax,BYTE PTR [rsp+0x4c]
  411ba9:	jmp    4108b0 <_start@@Base+0xae80>
  411bae:	mov    ecx,0x3
  411bb3:	mov    rdx,rbx
  411bb6:	mov    rsi,r13
  411bb9:	mov    rdi,rbp
  411bbc:	call   409ba0 <_start@@Base+0x4170>
  411bc1:	cmp    rax,r13
  411bc4:	mov    QWORD PTR [rsp+0x8],rax
  411bc9:	je     40fd9d <_start@@Base+0xa36d>
  411bcf:	mov    rdi,QWORD PTR [rbp+0x0]
  411bd3:	xor    esi,esi
  411bd5:	mov    ecx,0x10
  411bda:	mov    edx,0x20
  411bdf:	call   418180 <flatcc_builder_table_add@@Base>
  411be4:	test   rax,rax
  411be7:	mov    r15,rax
  411bea:	je     4132bf <_start@@Base+0xd88f>
  411bf0:	mov    rsi,QWORD PTR [rsp+0x8]
  411bf5:	lea    r12,[rsp+0x4c]
  411bfa:	mov    rdx,rbx
  411bfd:	mov    rdi,rbp
  411c00:	mov    rcx,r12
  411c03:	call   408740 <_start@@Base+0x2d10>
  411c08:	mov    esi,DWORD PTR [rsp+0x4c]
  411c0c:	mov    r13,rax
  411c0f:	test   esi,esi
  411c11:	je     40fd00 <_start@@Base+0xa2d0>
  411c17:	mov    QWORD PTR [rsp+0x18],r14
  411c1c:	jmp    411c86 <_start@@Base+0xc256>
  411c1e:	xchg   ax,ax
  411c20:	and    rax,0xffffffffff000000
  411c26:	movabs rdx,0x7465737432000000
  411c30:	cmp    rax,rdx
  411c33:	je     411de0 <_start@@Base+0xc3b0>
  411c39:	movabs rdx,0x7465737431000000
  411c43:	cmp    rax,rdx
  411c46:	jne    411c58 <_start@@Base+0xc228>
  411c48:	cmp    r9,0x5
  411c4c:	jg     411f20 <_start@@Base+0xc4f0>
  411c52:	nop    WORD PTR [rax+rax*1+0x0]
  411c58:	mov    rdx,rbx
  411c5b:	mov    rsi,r13
  411c5e:	mov    rdi,rbp
  411c61:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  411c66:	mov    r9,rax
  411c69:	mov    rdx,rbx
  411c6c:	mov    rcx,r12
  411c6f:	mov    rsi,r9
  411c72:	mov    rdi,rbp
  411c75:	call   40a450 <_start@@Base+0x4a20>
  411c7a:	mov    edx,DWORD PTR [rsp+0x4c]
  411c7e:	test   edx,edx
  411c80:	je     41201f <_start@@Base+0xc5ef>
  411c86:	cmp    rbx,rax
  411c89:	je     411d40 <_start@@Base+0xc310>
  411c8f:	cmp    BYTE PTR [rax],0x22
  411c92:	lea    r13,[rax+0x1]
  411c96:	je     411cae <_start@@Base+0xc27e>
  411c98:	mov    ecx,0x5
  411c9d:	mov    rdx,rbx
  411ca0:	mov    rsi,rax
  411ca3:	mov    rdi,rbp
  411ca6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411cab:	mov    r13,rax
  411cae:	mov    r9,rbx
  411cb1:	sub    r9,r13
  411cb4:	cmp    r9,0x7
  411cb8:	jbe    411d46 <_start@@Base+0xc316>
  411cbe:	movbe  rax,QWORD PTR [r13+0x0]
  411cc4:	movabs rdx,0x7465737432ffffff
  411cce:	cmp    rax,rdx
  411cd1:	jbe    411c20 <_start@@Base+0xc1f0>
  411cd7:	movabs rdx,0x77ffffffffffffff
  411ce1:	cmp    rax,rdx
  411ce4:	ja     411d60 <_start@@Base+0xc330>
  411ce6:	and    rax,0xffffffffff000000
  411cec:	movabs rdx,0x7465737433000000
  411cf6:	cmp    rax,rdx
  411cf9:	jne    411c58 <_start@@Base+0xc228>
  411cff:	cmp    r9,0x5
  411d03:	jle    411c58 <_start@@Base+0xc228>
  411d09:	mov    rsi,r13
  411d0c:	mov    ecx,0x5
  411d11:	mov    rdx,rbx
  411d14:	mov    rdi,rbp
  411d17:	call   409ba0 <_start@@Base+0x4170>
  411d1c:	cmp    rax,r13
  411d1f:	mov    rsi,rax
  411d22:	je     411c58 <_start@@Base+0xc228>
  411d28:	lea    rcx,[r15+0x1a]
  411d2c:	mov    rdx,rbx
  411d2f:	mov    rdi,rbp
  411d32:	call   40ee90 <_start@@Base+0x9460>
  411d37:	mov    r9,rax
  411d3a:	jmp    411c69 <_start@@Base+0xc239>
  411d3f:	nop
  411d40:	xor    r9d,r9d
  411d43:	mov    r13,rbx
  411d46:	mov    rsi,rbx
  411d49:	mov    rdi,r13
  411d4c:	call   405b40 <_start@@Base+0x110>
  411d51:	jmp    411cc4 <_start@@Base+0xc294>
  411d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d60:	movabs rdx,0x78ffffffffffffff
  411d6a:	cmp    rax,rdx
  411d6d:	ja     411e80 <_start@@Base+0xc450>
  411d73:	cmp    r9,0x1
  411d77:	jle    411c58 <_start@@Base+0xc228>
  411d7d:	mov    ecx,0x1
  411d82:	mov    rdx,rbx
  411d85:	mov    rsi,r13
  411d88:	mov    rdi,rbp
  411d8b:	call   409ba0 <_start@@Base+0x4170>
  411d90:	cmp    rax,r13
  411d93:	je     411c58 <_start@@Base+0xc228>
  411d99:	mov    rcx,QWORD PTR [rsp]
  411d9d:	mov    rdx,rbx
  411da0:	mov    rsi,rax
  411da3:	mov    rdi,rbp
  411da6:	mov    DWORD PTR [rsp+0x60],0x0
  411dae:	mov    QWORD PTR [rsp+0x8],rax
  411db3:	call   41c5d0 <flatcc_json_parser_float@@Base>
  411db8:	mov    r10,QWORD PTR [rsp+0x8]
  411dbd:	mov    r9,rax
  411dc0:	cmp    r10,rax
  411dc3:	je     412442 <_start@@Base+0xca12>
  411dc9:	vmovss xmm0,DWORD PTR [rsp+0x60]
  411dcf:	vmovss DWORD PTR [r15],xmm0
  411dd4:	jmp    411c69 <_start@@Base+0xc239>
  411dd9:	nop    DWORD PTR [rax+0x0]
  411de0:	cmp    r9,0x5
  411de4:	jle    411c58 <_start@@Base+0xc228>
  411dea:	mov    ecx,0x5
  411def:	mov    rdx,rbx
  411df2:	mov    rsi,r13
  411df5:	mov    rdi,rbp
  411df8:	call   409ba0 <_start@@Base+0x4170>
  411dfd:	cmp    rax,r13
  411e00:	mov    r14,rax
  411e03:	je     411c58 <_start@@Base+0xc228>
  411e09:	cmp    rbx,rax
  411e0c:	mov    BYTE PTR [rsp+0x48],0x0
  411e11:	mov    QWORD PTR [rsp+0x60],0x0
  411e1a:	mov    DWORD PTR [rsp+0x58],0x0
  411e22:	je     412070 <_start@@Base+0xc640>
  411e28:	mov    r8,QWORD PTR [rsp]
  411e2c:	lea    rcx,[rsp+0x58]
  411e31:	mov    rdx,rbx
  411e34:	mov    rsi,rax
  411e37:	mov    rdi,rbp
  411e3a:	call   41c710 <flatcc_json_parser_integer@@Base>
  411e3f:	cmp    r14,rax
  411e42:	mov    r9,rax
  411e45:	je     412070 <_start@@Base+0xc640>
  411e4b:	mov    ecx,DWORD PTR [rsp+0x58]
  411e4f:	mov    rax,QWORD PTR [rsp+0x60]
  411e54:	test   ecx,ecx
  411e56:	mov    edx,eax
  411e58:	je     411f80 <_start@@Base+0xc550>
  411e5e:	neg    edx
  411e60:	cmp    rax,0x80
  411e66:	mov    ecx,0x8
  411e6b:	ja     411f8f <_start@@Base+0xc55f>
  411e71:	mov    BYTE PTR [r15+0x18],dl
  411e75:	jmp    411c69 <_start@@Base+0xc239>
  411e7a:	nop    WORD PTR [rax+rax*1+0x0]
  411e80:	movabs rdx,0xff00000000000000
  411e8a:	and    rax,rdx
  411e8d:	movabs rdx,0x7a00000000000000
  411e97:	cmp    rax,rdx
  411e9a:	je     411fb8 <_start@@Base+0xc588>
  411ea0:	movabs rdx,0x7900000000000000
  411eaa:	cmp    rax,rdx
  411ead:	jne    411c58 <_start@@Base+0xc228>
  411eb3:	cmp    r9,0x1
  411eb7:	jle    411c58 <_start@@Base+0xc228>
  411ebd:	mov    ecx,0x1
  411ec2:	mov    rdx,rbx
  411ec5:	mov    rsi,r13
  411ec8:	mov    rdi,rbp
  411ecb:	call   409ba0 <_start@@Base+0x4170>
  411ed0:	cmp    rax,r13
  411ed3:	je     411c58 <_start@@Base+0xc228>
  411ed9:	mov    rcx,QWORD PTR [rsp]
  411edd:	mov    rdx,rbx
  411ee0:	mov    rsi,rax
  411ee3:	mov    rdi,rbp
  411ee6:	mov    DWORD PTR [rsp+0x60],0x0
  411eee:	mov    QWORD PTR [rsp+0x8],rax
  411ef3:	call   41c5d0 <flatcc_json_parser_float@@Base>
  411ef8:	mov    r10,QWORD PTR [rsp+0x8]
  411efd:	mov    r9,rax
  411f00:	cmp    r10,rax
  411f03:	je     412653 <_start@@Base+0xcc23>
  411f09:	vmovss xmm0,DWORD PTR [rsp+0x60]
  411f0f:	vmovss DWORD PTR [r15+0x4],xmm0
  411f15:	jmp    411c69 <_start@@Base+0xc239>
  411f1a:	nop    WORD PTR [rax+rax*1+0x0]
  411f20:	mov    ecx,0x5
  411f25:	mov    rdx,rbx
  411f28:	mov    rsi,r13
  411f2b:	mov    rdi,rbp
  411f2e:	call   409ba0 <_start@@Base+0x4170>
  411f33:	cmp    rax,r13
  411f36:	mov    r14,rax
  411f39:	je     411c58 <_start@@Base+0xc228>
  411f3f:	mov    rcx,QWORD PTR [rsp]
  411f43:	mov    rdx,rbx
  411f46:	mov    rsi,rax
  411f49:	mov    rdi,rbp
  411f4c:	mov    QWORD PTR [rsp+0x60],0x0
  411f55:	call   41c4f0 <flatcc_json_parser_double@@Base>
  411f5a:	cmp    r14,rax
  411f5d:	mov    r9,rax
  411f60:	je     41202c <_start@@Base+0xc5fc>
  411f66:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  411f6c:	vmovsd QWORD PTR [r15+0x10],xmm0
  411f72:	jmp    411c69 <_start@@Base+0xc239>
  411f77:	nop    WORD PTR [rax+rax*1+0x0]
  411f80:	cmp    rax,0x7f
  411f84:	jbe    411e71 <_start@@Base+0xc441>
  411f8a:	mov    ecx,0x7
  411f8f:	mov    rsi,r9
  411f92:	mov    rdx,rbx
  411f95:	mov    rdi,rbp
  411f98:	call   41b920 <flatcc_json_parser_set_error@@Base>
  411f9d:	cmp    r14,rax
  411fa0:	mov    r9,rax
  411fa3:	je     412070 <_start@@Base+0xc640>
  411fa9:	movzx  edx,BYTE PTR [rsp+0x48]
  411fae:	jmp    411e71 <_start@@Base+0xc441>
  411fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  411fb8:	cmp    r9,0x1
  411fbc:	jle    411c58 <_start@@Base+0xc228>
  411fc2:	mov    ecx,0x1
  411fc7:	mov    rdx,rbx
  411fca:	mov    rsi,r13
  411fcd:	mov    rdi,rbp
  411fd0:	call   409ba0 <_start@@Base+0x4170>
  411fd5:	cmp    rax,r13
  411fd8:	je     411c58 <_start@@Base+0xc228>
  411fde:	mov    rcx,QWORD PTR [rsp]
  411fe2:	mov    rdx,rbx
  411fe5:	mov    rsi,rax
  411fe8:	mov    rdi,rbp
  411feb:	mov    DWORD PTR [rsp+0x60],0x0
  411ff3:	mov    QWORD PTR [rsp+0x8],rax
  411ff8:	call   41c5d0 <flatcc_json_parser_float@@Base>
  411ffd:	mov    r10,QWORD PTR [rsp+0x8]
  412002:	mov    r9,rax
  412005:	cmp    r10,rax
  412008:	je     412b12 <_start@@Base+0xd0e2>
  41200e:	vmovss xmm0,DWORD PTR [rsp+0x60]
  412014:	vmovss DWORD PTR [r15+0x8],xmm0
  41201a:	jmp    411c69 <_start@@Base+0xc239>
  41201f:	mov    r13,rax
  412022:	mov    r14,QWORD PTR [rsp+0x18]
  412027:	jmp    40fd00 <_start@@Base+0xa2d0>
  41202c:	mov    r8,QWORD PTR [rsp]
  412030:	lea    rcx,[rip+0x271c9]        # 439200 <__data_start@@Base+0x140>
  412037:	mov    rdx,rbx
  41203a:	mov    rsi,rax
  41203d:	mov    rdi,rbp
  412040:	mov    QWORD PTR [rsp+0x8],rax
  412045:	call   4089e0 <_start@@Base+0x2fb0>
  41204a:	mov    r9,QWORD PTR [rsp+0x8]
  41204f:	cmp    r9,rax
  412052:	je     4133e8 <_start@@Base+0xd9b8>
  412058:	cmp    rbx,rax
  41205b:	je     4133e8 <_start@@Base+0xd9b8>
  412061:	mov    r9,rax
  412064:	jmp    411f66 <_start@@Base+0xc536>
  412069:	nop    DWORD PTR [rax+0x0]
  412070:	lea    r8,[rsp+0x48]
  412075:	lea    rcx,[rip+0x271a4]        # 439220 <__data_start@@Base+0x160>
  41207c:	mov    rdx,rbx
  41207f:	mov    rsi,r14
  412082:	mov    rdi,rbp
  412085:	call   409190 <_start@@Base+0x3760>
  41208a:	cmp    rax,r14
  41208d:	mov    r9,rax
  412090:	je     41209b <_start@@Base+0xc66b>
  412092:	cmp    rbx,rax
  412095:	jne    411fa9 <_start@@Base+0xc579>
  41209b:	mov    r14,QWORD PTR [rsp+0x18]
  4120a0:	mov    r13,r9
  4120a3:	mov    rsi,r13
  4120a6:	mov    ecx,0x21
  4120ab:	mov    rdx,rbx
  4120ae:	mov    rdi,rbp
  4120b1:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4120b6:	mov    r13,rax
  4120b9:	jmp    40fd00 <_start@@Base+0xa2d0>
  4120be:	xchg   ax,ax
  4120c0:	mov    BYTE PTR [rsp+0x4c],0x0
  4120c5:	lea    r8,[rsp+0x4c]
  4120ca:	lea    rcx,[rip+0x2760f]        # 4396e0 <__data_start@@Base+0x620>
  4120d1:	mov    rdx,rbx
  4120d4:	mov    rsi,r12
  4120d7:	mov    rdi,rbp
  4120da:	call   408be0 <_start@@Base+0x31b0>
  4120df:	cmp    rax,r12
  4120e2:	mov    r13,rax
  4120e5:	je     40f848 <_start@@Base+0x9e18>
  4120eb:	cmp    rbx,rax
  4120ee:	je     40f848 <_start@@Base+0x9e18>
  4120f4:	movzx  eax,BYTE PTR [rsp+0x4c]
  4120f9:	jmp    411679 <_start@@Base+0xbc49>
  4120fe:	mov    ecx,0x7
  412103:	mov    rsi,r13
  412106:	mov    rdx,rbx
  412109:	mov    rdi,rbp
  41210c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  412111:	cmp    r12,rax
  412114:	mov    r13,rax
  412117:	jne    411ba4 <_start@@Base+0xc174>
  41211d:	jmp    411b75 <_start@@Base+0xc145>
  412122:	nop    WORD PTR [rax+rax*1+0x0]
  412128:	mov    rsi,rbx
  41212b:	mov    rdi,r12
  41212e:	call   405b40 <_start@@Base+0x110>
  412133:	jmp    40fbb0 <_start@@Base+0xa180>
  412138:	mov    rdx,rbx
  41213b:	mov    rsi,r12
  41213e:	mov    rdi,rbp
  412141:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412146:	mov    r13,rax
  412149:	jmp    40fd00 <_start@@Base+0xa2d0>
  41214e:	mov    BYTE PTR [rsp+0x4c],0x1
  412153:	lea    r13,[r12+0x4]
  412158:	jmp    41167d <_start@@Base+0xbc4d>
  41215d:	mov    rsi,rbx
  412160:	mov    rdi,r12
  412163:	call   405b40 <_start@@Base+0x110>
  412168:	jmp    411220 <_start@@Base+0xb7f0>
  41216d:	mov    ecx,0x5
  412172:	mov    rdx,rbx
  412175:	mov    rsi,r13
  412178:	mov    rdi,rbp
  41217b:	call   409ba0 <_start@@Base+0x4170>
  412180:	cmp    rax,r13
  412183:	mov    r12,rax
  412186:	je     40fc24 <_start@@Base+0xa1f4>
  41218c:	mov    rcx,QWORD PTR [rsp]
  412190:	mov    rdx,rbx
  412193:	mov    rsi,rax
  412196:	mov    rdi,rbp
  412199:	mov    DWORD PTR [rsp+0x60],0x0
  4121a1:	call   41c5d0 <flatcc_json_parser_float@@Base>
  4121a6:	cmp    rax,r12
  4121a9:	mov    r13,rax
  4121ac:	je     412dd2 <_start@@Base+0xd3a2>
  4121b2:	vmovss xmm0,DWORD PTR [rsp+0x60]
  4121b8:	vucomiss xmm0,DWORD PTR [rip+0x1c140]        # 42e300 <_IO_stdin_used@@Base+0x3300>
  4121c0:	jp     4121ce <_start@@Base+0xc79e>
  4121c2:	jne    4121ce <_start@@Base+0xc79e>
  4121c4:	test   BYTE PTR [rbp+0x10],0x2
  4121c8:	je     40fd00 <_start@@Base+0xa2d0>
  4121ce:	mov    rdi,QWORD PTR [rbp+0x0]
  4121d2:	mov    ecx,0x4
  4121d7:	mov    edx,0x4
  4121dc:	mov    esi,0x19
  4121e1:	call   418180 <flatcc_builder_table_add@@Base>
  4121e6:	test   rax,rax
  4121e9:	je     40f848 <_start@@Base+0x9e18>
  4121ef:	vmovss xmm0,DWORD PTR [rsp+0x60]
  4121f5:	vmovss DWORD PTR [rax],xmm0
  4121f9:	jmp    40fd00 <_start@@Base+0xa2d0>
  4121fe:	mov    rdx,rbx
  412201:	mov    rsi,r12
  412204:	mov    rdi,rbp
  412207:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41220c:	mov    r13,rax
  41220f:	jmp    40fd00 <_start@@Base+0xa2d0>
  412214:	mov    rdx,rbx
  412217:	mov    rsi,r12
  41221a:	mov    rdi,rbp
  41221d:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412222:	mov    r13,rax
  412225:	jmp    40fd00 <_start@@Base+0xa2d0>
  41222a:	mov    rsi,rbx
  41222d:	mov    rdi,r12
  412230:	call   405b40 <_start@@Base+0x110>
  412235:	jmp    41190b <_start@@Base+0xbedb>
  41223a:	mov    rdx,rbx
  41223d:	mov    rsi,r12
  412240:	mov    rdi,rbp
  412243:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412248:	mov    r13,rax
  41224b:	jmp    40fd00 <_start@@Base+0xa2d0>
  412250:	mov    rsi,rbx
  412253:	mov    rdi,r12
  412256:	call   405b40 <_start@@Base+0x110>
  41225b:	jmp    4103a9 <_start@@Base+0xa979>
  412260:	mov    ecx,0x8
  412265:	mov    rsi,r14
  412268:	mov    rdx,rbx
  41226b:	mov    rdi,rbp
  41226e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  412273:	cmp    r13,rax
  412276:	mov    r14,rax
  412279:	je     411a30 <_start@@Base+0xc000>
  41227f:	movzx  edx,WORD PTR [rsp+0x3e]
  412284:	jmp    411166 <_start@@Base+0xb736>
  412289:	mov    r8,QWORD PTR [rsp]
  41228d:	lea    rcx,[rip+0x273ec]        # 439680 <__data_start@@Base+0x5c0>
  412294:	mov    rdx,rbx
  412297:	mov    rsi,rax
  41229a:	mov    rdi,rbp
  41229d:	call   4087e0 <_start@@Base+0x2db0>
  4122a2:	cmp    r13,rax
  4122a5:	mov    r13,rax
  4122a8:	je     40f848 <_start@@Base+0x9e18>
  4122ae:	cmp    rbx,rax
  4122b1:	jne    410315 <_start@@Base+0xa8e5>
  4122b7:	jmp    40f848 <_start@@Base+0x9e18>
  4122bc:	nop    DWORD PTR [rax+0x0]
  4122c0:	mov    ecx,0x7
  4122c5:	mov    rsi,r13
  4122c8:	mov    rdx,rbx
  4122cb:	mov    rdi,rbp
  4122ce:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4122d3:	cmp    r12,rax
  4122d6:	mov    r13,rax
  4122d9:	mov    BYTE PTR [rsp+0x4c],0x0
  4122de:	jne    411687 <_start@@Base+0xbc57>
  4122e4:	jmp    4120c5 <_start@@Base+0xc695>
  4122e9:	nop    DWORD PTR [rax+0x0]
  4122f0:	mov    rdx,rbx
  4122f3:	mov    rsi,r12
  4122f6:	mov    rdi,rbp
  4122f9:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4122fe:	mov    r13,rax
  412301:	jmp    40fd00 <_start@@Base+0xa2d0>
  412306:	mov    rdx,rbx
  412309:	mov    rsi,r12
  41230c:	mov    rdi,rbp
  41230f:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412314:	mov    r13,rax
  412317:	jmp    40fd00 <_start@@Base+0xa2d0>
  41231c:	mov    ecx,0x4
  412321:	mov    rdx,rbx
  412324:	mov    rsi,r13
  412327:	mov    rdi,rbp
  41232a:	call   409ba0 <_start@@Base+0x4170>
  41232f:	cmp    rax,r13
  412332:	mov    r12,rax
  412335:	je     410941 <_start@@Base+0xaf11>
  41233b:	mov    rcx,QWORD PTR [rsp]
  41233f:	xor    r9d,r9d
  412342:	mov    rdx,rbx
  412345:	mov    rsi,rax
  412348:	mov    rdi,rbp
  41234b:	mov    WORD PTR [rsp+0x60],r9w
  412351:	call   408440 <_start@@Base+0x2a10>
  412356:	cmp    rax,r12
  412359:	mov    r13,rax
  41235c:	je     413111 <_start@@Base+0xd6e1>
  412362:	cmp    WORD PTR [rsp+0x60],0x96
  412369:	jne    412375 <_start@@Base+0xc945>
  41236b:	test   BYTE PTR [rbp+0x10],0x2
  41236f:	je     40fd00 <_start@@Base+0xa2d0>
  412375:	mov    rdi,QWORD PTR [rbp+0x0]
  412379:	mov    ecx,0x2
  41237e:	mov    edx,0x2
  412383:	mov    esi,0x1
  412388:	call   418180 <flatcc_builder_table_add@@Base>
  41238d:	test   rax,rax
  412390:	je     40f848 <_start@@Base+0x9e18>
  412396:	movzx  edx,WORD PTR [rsp+0x60]
  41239b:	mov    WORD PTR [rax],dx
  41239e:	jmp    40fd00 <_start@@Base+0xa2d0>
  4123a3:	mov    rdi,QWORD PTR [rbp+0x0]
  4123a7:	call   4175c0 <flatcc_builder_end_vector@@Base>
  4123ac:	test   eax,eax
  4123ae:	mov    DWORD PTR [rsp+0x44],eax
  4123b2:	je     40f848 <_start@@Base+0x9e18>
  4123b8:	mov    rdi,QWORD PTR [rbp+0x0]
  4123bc:	mov    esi,0x18
  4123c1:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4123c6:	test   rax,rax
  4123c9:	je     40f848 <_start@@Base+0x9e18>
  4123cf:	mov    edx,DWORD PTR [rsp+0x44]
  4123d3:	mov    DWORD PTR [rax],edx
  4123d5:	jmp    40fd00 <_start@@Base+0xa2d0>
  4123da:	mov    rdx,rbx
  4123dd:	mov    rsi,r12
  4123e0:	mov    rdi,rbp
  4123e3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4123e8:	mov    r13,rax
  4123eb:	jmp    40fd00 <_start@@Base+0xa2d0>
  4123f0:	mov    rcx,QWORD PTR [rsp+0x50]
  4123f5:	mov    rdx,rbx
  4123f8:	mov    rsi,r13
  4123fb:	mov    rdi,rbp
  4123fe:	call   41da40 <flatcc_json_parser_finalize_unions@@Base>
  412403:	mov    rdi,QWORD PTR [rbp+0x0]
  412407:	mov    r13,rax
  41240a:	call   4172a0 <flatcc_builder_end_table@@Base>
  41240f:	mov    edx,eax
  412411:	mov    rax,QWORD PTR [rsp+0x10]
  412416:	test   edx,edx
  412418:	mov    DWORD PTR [rax],edx
  41241a:	mov    rax,r13
  41241d:	je     40f848 <_start@@Base+0x9e18>
  412423:	jmp    40f85b <_start@@Base+0x9e2b>
  412428:	mov    ecx,0x7
  41242d:	jmp    412265 <_start@@Base+0xc835>
  412432:	mov    rsi,rbx
  412435:	mov    rdi,r12
  412438:	call   405b40 <_start@@Base+0x110>
  41243d:	jmp    40f724 <_start@@Base+0x9cf4>
  412442:	mov    r8,QWORD PTR [rsp]
  412446:	lea    rcx,[rip+0x26d93]        # 4391e0 <__data_start@@Base+0x120>
  41244d:	mov    rdx,rbx
  412450:	mov    rsi,rax
  412453:	mov    rdi,rbp
  412456:	mov    QWORD PTR [rsp+0x8],rax
  41245b:	call   4087e0 <_start@@Base+0x2db0>
  412460:	mov    r9,QWORD PTR [rsp+0x8]
  412465:	cmp    r9,rax
  412468:	je     4133e8 <_start@@Base+0xd9b8>
  41246e:	cmp    rbx,rax
  412471:	je     4133e8 <_start@@Base+0xd9b8>
  412477:	mov    r9,rax
  41247a:	jmp    411dc9 <_start@@Base+0xc399>
  41247f:	mov    r13,r14
  412482:	mov    r14,QWORD PTR [rsp+0x20]
  412487:	mov    eax,DWORD PTR [rbp+0x1c]
  41248a:	test   eax,eax
  41248c:	jne    411a63 <_start@@Base+0xc033>
  412492:	mov    rdi,QWORD PTR [rbp+0x0]
  412496:	call   4172a0 <flatcc_builder_end_table@@Base>
  41249b:	test   eax,eax
  41249d:	mov    DWORD PTR [rsp+0x44],eax
  4124a1:	je     411a63 <_start@@Base+0xc033>
  4124a7:	jmp    411a85 <_start@@Base+0xc055>
  4124ac:	mov    r14,QWORD PTR [rsp+0x8]
  4124b1:	mov    r13,rax
  4124b4:	mov    r10d,DWORD PTR [rbp+0x1c]
  4124b8:	test   r10d,r10d
  4124bb:	jne    411037 <_start@@Base+0xb607>
  4124c1:	mov    rdi,QWORD PTR [rbp+0x0]
  4124c5:	call   4172a0 <flatcc_builder_end_table@@Base>
  4124ca:	test   eax,eax
  4124cc:	mov    DWORD PTR [rsp+0x44],eax
  4124d0:	je     411037 <_start@@Base+0xb607>
  4124d6:	jmp    41105b <_start@@Base+0xb62b>
  4124db:	cmp    r8,0x2
  4124df:	jg     412ff0 <_start@@Base+0xd5c0>
  4124e5:	mov    rdx,rbx
  4124e8:	mov    rsi,r12
  4124eb:	mov    rdi,rbp
  4124ee:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4124f3:	mov    r13,rax
  4124f6:	jmp    40fd00 <_start@@Base+0xa2d0>
  4124fb:	cmp    r8,0x8
  4124ff:	jg     412f31 <_start@@Base+0xd501>
  412505:	lea    r13,[r12+0x8]
  41250a:	mov    r8,rbx
  41250d:	sub    r8,r13
  412510:	cmp    r8,0x7
  412514:	jbe    413310 <_start@@Base+0xd8e0>
  41251a:	movbe  rax,QWORD PTR [r12+0x8]
  412521:	movabs rdx,0xff00000000000000
  41252b:	and    rax,rdx
  41252e:	movabs rdx,0x6100000000000000
  412538:	cmp    rax,rdx
  41253b:	jne    413320 <_start@@Base+0xd8f0>
  412541:	cmp    r8,0x1
  412545:	jle    4133c9 <_start@@Base+0xd999>
  41254b:	mov    ecx,0x1
  412550:	mov    rdx,rbx
  412553:	mov    rsi,r13
  412556:	mov    rdi,rbp
  412559:	call   409ba0 <_start@@Base+0x4170>
  41255e:	cmp    r13,rax
  412561:	mov    r12,rax
  412564:	je     4133cc <_start@@Base+0xd99c>
  41256a:	mov    rcx,QWORD PTR [rsp]
  41256e:	mov    rdx,rbx
  412571:	mov    rsi,rax
  412574:	mov    rdi,rbp
  412577:	mov    DWORD PTR [rsp+0x60],0x0
  41257f:	call   4081b0 <_start@@Base+0x2780>
  412584:	cmp    rax,r12
  412587:	mov    r13,rax
  41258a:	je     4134ff <_start@@Base+0xdacf>
  412590:	mov    r15d,DWORD PTR [rsp+0x60]
  412595:	test   r15d,r15d
  412598:	jne    4125a4 <_start@@Base+0xcb74>
  41259a:	test   BYTE PTR [rbp+0x10],0x2
  41259e:	je     40fd00 <_start@@Base+0xa2d0>
  4125a4:	mov    rdi,QWORD PTR [rbp+0x0]
  4125a8:	mov    ecx,0x4
  4125ad:	mov    edx,0x4
  4125b2:	mov    esi,0x15
  4125b7:	call   418180 <flatcc_builder_table_add@@Base>
  4125bc:	test   rax,rax
  4125bf:	je     40f848 <_start@@Base+0x9e18>
  4125c5:	mov    edx,DWORD PTR [rsp+0x60]
  4125c9:	mov    DWORD PTR [rax],edx
  4125cb:	jmp    40fd00 <_start@@Base+0xa2d0>
  4125d0:	mov    ecx,0x8
  4125d5:	mov    rdx,rbx
  4125d8:	mov    rsi,r12
  4125db:	mov    rdi,rbp
  4125de:	call   409ba0 <_start@@Base+0x4170>
  4125e3:	cmp    r12,rax
  4125e6:	mov    r15,rax
  4125e9:	je     410a55 <_start@@Base+0xb025>
  4125ef:	mov    rcx,QWORD PTR [rsp]
  4125f3:	mov    rdx,rbx
  4125f6:	mov    rsi,rax
  4125f9:	mov    rdi,rbp
  4125fc:	mov    DWORD PTR [rsp+0x60],0x0
  412604:	call   408350 <_start@@Base+0x2920>
  412609:	cmp    rax,r15
  41260c:	mov    r13,rax
  41260f:	je     4132dc <_start@@Base+0xd8ac>
  412615:	mov    eax,DWORD PTR [rsp+0x60]
  412619:	test   eax,eax
  41261b:	jne    412627 <_start@@Base+0xcbf7>
  41261d:	test   BYTE PTR [rbp+0x10],0x2
  412621:	je     40fd00 <_start@@Base+0xa2d0>
  412627:	mov    rdi,QWORD PTR [rbp+0x0]
  41262b:	mov    ecx,0x4
  412630:	mov    edx,0x4
  412635:	mov    esi,0x10
  41263a:	call   418180 <flatcc_builder_table_add@@Base>
  41263f:	test   rax,rax
  412642:	je     40f848 <_start@@Base+0x9e18>
  412648:	mov    edx,DWORD PTR [rsp+0x60]
  41264c:	mov    DWORD PTR [rax],edx
  41264e:	jmp    40fd00 <_start@@Base+0xa2d0>
  412653:	mov    r8,QWORD PTR [rsp]
  412657:	lea    rcx,[rip+0x26b42]        # 4391a0 <__data_start@@Base+0xe0>
  41265e:	mov    rsi,r10
  412661:	mov    rdx,rbx
  412664:	mov    rdi,rbp
  412667:	call   4087e0 <_start@@Base+0x2db0>
  41266c:	mov    r10,QWORD PTR [rsp+0x8]
  412671:	cmp    r10,rax
  412674:	je     4134f2 <_start@@Base+0xdac2>
  41267a:	cmp    rbx,rax
  41267d:	je     4134f2 <_start@@Base+0xdac2>
  412683:	mov    r9,rax
  412686:	jmp    411f09 <_start@@Base+0xc4d9>
  41268b:	mov    ecx,0x7
  412690:	mov    rdx,rbx
  412693:	mov    rsi,r12
  412696:	mov    rdi,rbp
  412699:	call   409ba0 <_start@@Base+0x4170>
  41269e:	cmp    r12,rax
  4126a1:	mov    r13,rax
  4126a4:	je     41008f <_start@@Base+0xa65f>
  4126aa:	mov    rdi,QWORD PTR [rbp+0x0]
  4126ae:	mov    ecx,0x1fffffff
  4126b3:	mov    edx,0x8
  4126b8:	mov    esi,0x8
  4126bd:	call   4166c0 <flatcc_builder_start_vector@@Base>
  4126c2:	test   eax,eax
  4126c4:	jne    40f848 <_start@@Base+0x9e18>
  4126ca:	mov    rsi,r13
  4126cd:	mov    rcx,r14
  4126d0:	mov    rdx,rbx
  4126d3:	mov    rdi,rbp
  4126d6:	call   409b00 <_start@@Base+0x40d0>
  4126db:	mov    esi,DWORD PTR [rsp+0x40]
  4126df:	mov    r13,rax
  4126e2:	test   esi,esi
  4126e4:	je     412777 <_start@@Base+0xcd47>
  4126ea:	mov    r12,QWORD PTR [rsp]
  4126ee:	jmp    412714 <_start@@Base+0xcce4>
  4126f0:	mov    rdx,QWORD PTR [rsp+0x60]
  4126f5:	mov    rcx,r14
  4126f8:	mov    rsi,rax
  4126fb:	mov    rdi,rbp
  4126fe:	mov    QWORD PTR [r15],rdx
  412701:	mov    rdx,rbx
  412704:	call   40a300 <_start@@Base+0x48d0>
  412709:	mov    ecx,DWORD PTR [rsp+0x40]
  41270d:	mov    r13,rax
  412710:	test   ecx,ecx
  412712:	je     412777 <_start@@Base+0xcd47>
  412714:	mov    rdi,QWORD PTR [rbp+0x0]
  412718:	mov    esi,0x1
  41271d:	mov    QWORD PTR [rsp+0x60],0x0
  412726:	call   416020 <flatcc_builder_extend_vector@@Base>
  41272b:	test   rax,rax
  41272e:	mov    r15,rax
  412731:	je     40f848 <_start@@Base+0x9e18>
  412737:	mov    rcx,r12
  41273a:	mov    rdx,rbx
  41273d:	mov    rsi,r13
  412740:	mov    rdi,rbp
  412743:	call   408530 <_start@@Base+0x2b00>
  412748:	cmp    rax,r13
  41274b:	jne    4126f0 <_start@@Base+0xccc0>
  41274d:	lea    rcx,[rip+0x26dcc]        # 439520 <__data_start@@Base+0x460>
  412754:	mov    r8,r12
  412757:	mov    rdx,rbx
  41275a:	mov    rsi,r13
  41275d:	mov    rdi,rbp
  412760:	call   408f90 <_start@@Base+0x3560>
  412765:	cmp    rax,r13
  412768:	je     41276f <_start@@Base+0xcd3f>
  41276a:	cmp    rbx,rax
  41276d:	jne    4126f0 <_start@@Base+0xccc0>
  41276f:	mov    r13,rax
  412772:	jmp    40f848 <_start@@Base+0x9e18>
  412777:	mov    rdi,QWORD PTR [rbp+0x0]
  41277b:	call   4175c0 <flatcc_builder_end_vector@@Base>
  412780:	test   eax,eax
  412782:	mov    DWORD PTR [rsp+0x44],eax
  412786:	je     40f848 <_start@@Base+0x9e18>
  41278c:	mov    rdi,QWORD PTR [rbp+0x0]
  412790:	mov    esi,0x20
  412795:	call   418350 <flatcc_builder_table_add_offset@@Base>
  41279a:	test   rax,rax
  41279d:	je     40f848 <_start@@Base+0x9e18>
  4127a3:	mov    edx,DWORD PTR [rsp+0x44]
  4127a7:	mov    DWORD PTR [rax],edx
  4127a9:	jmp    40fd00 <_start@@Base+0xa2d0>
  4127ae:	mov    ecx,0x7
  4127b3:	mov    rdx,rbx
  4127b6:	mov    rsi,r12
  4127b9:	mov    rdi,rbp
  4127bc:	call   409ba0 <_start@@Base+0x4170>
  4127c1:	cmp    r12,rax
  4127c4:	mov    r13,rax
  4127c7:	je     40fcd1 <_start@@Base+0xa2a1>
  4127cd:	mov    rdi,QWORD PTR [rbp+0x0]
  4127d1:	mov    ecx,0x1fffffff
  4127d6:	mov    edx,0x4
  4127db:	mov    esi,0x8
  4127e0:	call   4166c0 <flatcc_builder_start_vector@@Base>
  4127e5:	test   eax,eax
  4127e7:	jne    40f848 <_start@@Base+0x9e18>
  4127ed:	mov    rcx,r14
  4127f0:	mov    rsi,r13
  4127f3:	mov    rdx,rbx
  4127f6:	mov    rdi,rbp
  4127f9:	call   409b00 <_start@@Base+0x40d0>
  4127fe:	mov    ecx,DWORD PTR [rsp+0x40]
  412802:	mov    r13,rax
  412805:	test   ecx,ecx
  412807:	je     412a39 <_start@@Base+0xd009>
  41280d:	lea    r15,[rsp+0x58]
  412812:	mov    QWORD PTR [rsp+0x18],r14
  412817:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	mov    rdi,QWORD PTR [rbp+0x0]
  412824:	mov    esi,0x1
  412829:	call   416020 <flatcc_builder_extend_vector@@Base>
  41282e:	test   rax,rax
  412831:	mov    r14,rax
  412834:	je     40f848 <_start@@Base+0x9e18>
  41283a:	mov    rdx,rbx
  41283d:	mov    rcx,r15
  412840:	mov    rsi,r13
  412843:	mov    rdi,rbp
  412846:	call   408740 <_start@@Base+0x2d10>
  41284b:	mov    edx,DWORD PTR [rsp+0x58]
  41284f:	test   edx,edx
  412851:	je     412a10 <_start@@Base+0xcfe0>
  412857:	movabs r12,0x6964000000000000
  412861:	mov    QWORD PTR [rsp+0x8],r14
  412866:	jmp    4128d5 <_start@@Base+0xcea5>
  412868:	nop    DWORD PTR [rax+rax*1+0x0]
  412870:	movbe  rax,QWORD PTR [r13+0x0]
  412876:	movabs rdx,0xffff000000000000
  412880:	and    rdx,rax
  412883:	cmp    rdx,r12
  412886:	je     412920 <_start@@Base+0xcef0>
  41288c:	movabs rcx,0x64697374616e6365
  412896:	cmp    rax,rcx
  412899:	jne    4128a5 <_start@@Base+0xce75>
  41289b:	cmp    r9,0x8
  41289f:	jg     4129a0 <_start@@Base+0xcf70>
  4128a5:	mov    rsi,r13
  4128a8:	mov    rdx,rbx
  4128ab:	mov    rdi,rbp
  4128ae:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4128b3:	mov    r13,rax
  4128b6:	mov    rsi,r13
  4128b9:	mov    rcx,r15
  4128bc:	mov    rdx,rbx
  4128bf:	mov    rdi,rbp
  4128c2:	call   40a450 <_start@@Base+0x4a20>
  4128c7:	mov    r13d,DWORD PTR [rsp+0x58]
  4128cc:	test   r13d,r13d
  4128cf:	je     412a10 <_start@@Base+0xcfe0>
  4128d5:	cmp    rbx,rax
  4128d8:	je     412980 <_start@@Base+0xcf50>
  4128de:	cmp    BYTE PTR [rax],0x22
  4128e1:	lea    r13,[rax+0x1]
  4128e5:	je     4128fd <_start@@Base+0xcecd>
  4128e7:	mov    ecx,0x5
  4128ec:	mov    rdx,rbx
  4128ef:	mov    rsi,rax
  4128f2:	mov    rdi,rbp
  4128f5:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4128fa:	mov    r13,rax
  4128fd:	mov    r9,rbx
  412900:	sub    r9,r13
  412903:	cmp    r9,0x7
  412907:	ja     412870 <_start@@Base+0xce40>
  41290d:	mov    rsi,rbx
  412910:	mov    rdi,r13
  412913:	call   405b40 <_start@@Base+0x110>
  412918:	jmp    412876 <_start@@Base+0xce46>
  41291d:	nop    DWORD PTR [rax]
  412920:	cmp    r9,0x2
  412924:	jle    4128a5 <_start@@Base+0xce75>
  41292a:	mov    ecx,0x2
  41292f:	mov    rdx,rbx
  412932:	mov    rsi,r13
  412935:	mov    rdi,rbp
  412938:	call   409ba0 <_start@@Base+0x4170>
  41293d:	cmp    rax,r13
  412940:	mov    r14,rax
  412943:	je     4128a5 <_start@@Base+0xce75>
  412949:	mov    rcx,QWORD PTR [rsp]
  41294d:	mov    rdx,rbx
  412950:	mov    rsi,rax
  412953:	mov    rdi,rbp
  412956:	mov    DWORD PTR [rsp+0x60],0x0
  41295e:	call   4081b0 <_start@@Base+0x2780>
  412963:	cmp    r14,rax
  412966:	mov    r13,rax
  412969:	je     412aa8 <_start@@Base+0xd078>
  41296f:	mov    eax,DWORD PTR [rsp+0x60]
  412973:	mov    rcx,QWORD PTR [rsp+0x8]
  412978:	mov    DWORD PTR [rcx],eax
  41297a:	jmp    4128b6 <_start@@Base+0xce86>
  41297f:	nop
  412980:	mov    r13,rbx
  412983:	mov    rsi,rbx
  412986:	xor    r9d,r9d
  412989:	mov    rdi,r13
  41298c:	call   405b40 <_start@@Base+0x110>
  412991:	jmp    412876 <_start@@Base+0xce46>
  412996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129a0:	mov    ecx,0x8
  4129a5:	mov    rdx,rbx
  4129a8:	mov    rsi,r13
  4129ab:	mov    rdi,rbp
  4129ae:	call   409ba0 <_start@@Base+0x4170>
  4129b3:	cmp    rax,r13
  4129b6:	mov    r14,rax
  4129b9:	je     4128a5 <_start@@Base+0xce75>
  4129bf:	mov    rcx,QWORD PTR [rsp]
  4129c3:	mov    rdx,rbx
  4129c6:	mov    rsi,rax
  4129c9:	mov    rdi,rbp
  4129cc:	mov    DWORD PTR [rsp+0x60],0x0
  4129d4:	call   4081b0 <_start@@Base+0x2780>
  4129d9:	cmp    r14,rax
  4129dc:	mov    r13,rax
  4129df:	je     412a70 <_start@@Base+0xd040>
  4129e5:	mov    eax,DWORD PTR [rsp+0x60]
  4129e9:	mov    rcx,QWORD PTR [rsp+0x8]
  4129ee:	mov    DWORD PTR [rcx+0x4],eax
  4129f1:	jmp    4128b6 <_start@@Base+0xce86>
  4129f6:	mov    ecx,0x21
  4129fb:	mov    rdx,rbx
  4129fe:	mov    rsi,rax
  412a01:	mov    rdi,rbp
  412a04:	call   41b920 <flatcc_json_parser_set_error@@Base>
  412a09:	nop    DWORD PTR [rax+0x0]
  412a10:	mov    rcx,QWORD PTR [rsp+0x18]
  412a15:	mov    rdx,rbx
  412a18:	mov    rsi,rax
  412a1b:	mov    rdi,rbp
  412a1e:	call   40a300 <_start@@Base+0x48d0>
  412a23:	mov    r11d,DWORD PTR [rsp+0x40]
  412a28:	mov    r13,rax
  412a2b:	test   r11d,r11d
  412a2e:	jne    412820 <_start@@Base+0xcdf0>
  412a34:	mov    r14,QWORD PTR [rsp+0x18]
  412a39:	mov    rdi,QWORD PTR [rbp+0x0]
  412a3d:	call   4175c0 <flatcc_builder_end_vector@@Base>
  412a42:	test   eax,eax
  412a44:	mov    DWORD PTR [rsp+0x44],eax
  412a48:	je     40f848 <_start@@Base+0x9e18>
  412a4e:	mov    rdi,QWORD PTR [rbp+0x0]
  412a52:	mov    esi,0x1d
  412a57:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412a5c:	test   rax,rax
  412a5f:	je     40f848 <_start@@Base+0x9e18>
  412a65:	mov    edx,DWORD PTR [rsp+0x44]
  412a69:	mov    DWORD PTR [rax],edx
  412a6b:	jmp    40fd00 <_start@@Base+0xa2d0>
  412a70:	mov    r8,QWORD PTR [rsp]
  412a74:	lea    rcx,[rip+0x266a5]        # 439120 <__data_start@@Base+0x60>
  412a7b:	mov    rdx,rbx
  412a7e:	mov    rsi,rax
  412a81:	mov    rdi,rbp
  412a84:	call   409370 <_start@@Base+0x3940>
  412a89:	cmp    r13,rax
  412a8c:	je     4129f6 <_start@@Base+0xcfc6>
  412a92:	cmp    rbx,rax
  412a95:	je     4129f6 <_start@@Base+0xcfc6>
  412a9b:	mov    r13,rax
  412a9e:	jmp    4129e5 <_start@@Base+0xcfb5>
  412aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  412aa8:	mov    r8,QWORD PTR [rsp]
  412aac:	lea    rcx,[rip+0x2668d]        # 439140 <__data_start@@Base+0x80>
  412ab3:	mov    rdx,rbx
  412ab6:	mov    rsi,rax
  412ab9:	mov    rdi,rbp
  412abc:	call   409370 <_start@@Base+0x3940>
  412ac1:	cmp    r13,rax
  412ac4:	je     4129f6 <_start@@Base+0xcfc6>
  412aca:	cmp    rbx,rax
  412acd:	je     4129f6 <_start@@Base+0xcfc6>
  412ad3:	mov    r13,rax
  412ad6:	jmp    41296f <_start@@Base+0xcf3f>
  412adb:	mov    rdi,QWORD PTR [rbp+0x0]
  412adf:	call   4175c0 <flatcc_builder_end_vector@@Base>
  412ae4:	test   eax,eax
  412ae6:	mov    DWORD PTR [rsp+0x44],eax
  412aea:	je     40f848 <_start@@Base+0x9e18>
  412af0:	mov    rdi,QWORD PTR [rbp+0x0]
  412af4:	mov    esi,0x5
  412af9:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412afe:	test   rax,rax
  412b01:	je     40f848 <_start@@Base+0x9e18>
  412b07:	mov    edx,DWORD PTR [rsp+0x44]
  412b0b:	mov    DWORD PTR [rax],edx
  412b0d:	jmp    40fd00 <_start@@Base+0xa2d0>
  412b12:	mov    r8,QWORD PTR [rsp]
  412b16:	lea    rcx,[rip+0x266a3]        # 4391c0 <__data_start@@Base+0x100>
  412b1d:	mov    rdx,rbx
  412b20:	mov    rsi,rax
  412b23:	mov    rdi,rbp
  412b26:	mov    QWORD PTR [rsp+0x8],rax
  412b2b:	call   4087e0 <_start@@Base+0x2db0>
  412b30:	mov    r9,QWORD PTR [rsp+0x8]
  412b35:	cmp    r9,rax
  412b38:	je     4133e8 <_start@@Base+0xd9b8>
  412b3e:	cmp    rbx,rax
  412b41:	je     4133e8 <_start@@Base+0xd9b8>
  412b47:	mov    r9,rax
  412b4a:	jmp    41200e <_start@@Base+0xc5de>
  412b4f:	mov    rdx,rbx
  412b52:	mov    rsi,r12
  412b55:	mov    rdi,rbp
  412b58:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412b5d:	mov    r13,rax
  412b60:	jmp    40fd00 <_start@@Base+0xa2d0>
  412b65:	mov    rdi,QWORD PTR [rbp+0x0]
  412b69:	call   4176d0 <flatcc_builder_end_offset_vector@@Base>
  412b6e:	test   eax,eax
  412b70:	mov    DWORD PTR [rsp+0x44],eax
  412b74:	je     40f848 <_start@@Base+0x9e18>
  412b7a:	mov    rdi,QWORD PTR [rbp+0x0]
  412b7e:	mov    esi,0xb
  412b83:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412b88:	test   rax,rax
  412b8b:	je     40f848 <_start@@Base+0x9e18>
  412b91:	mov    edx,DWORD PTR [rsp+0x44]
  412b95:	mov    DWORD PTR [rax],edx
  412b97:	jmp    40fd00 <_start@@Base+0xa2d0>
  412b9c:	mov    r13,rsi
  412b9f:	jmp    40f848 <_start@@Base+0x9e18>
  412ba4:	mov    ecx,0x4
  412ba9:	mov    rdx,rbx
  412bac:	mov    rsi,r12
  412baf:	mov    rdi,rbp
  412bb2:	call   409ba0 <_start@@Base+0x4170>
  412bb7:	cmp    r12,rax
  412bba:	mov    r13,rax
  412bbd:	je     40fbda <_start@@Base+0xa1aa>
  412bc3:	cmp    rbx,rax
  412bc6:	je     412bd1 <_start@@Base+0xd1a1>
  412bc8:	cmp    BYTE PTR [rax],0x5b
  412bcb:	je     41315e <_start@@Base+0xd72e>
  412bd1:	mov    rdi,QWORD PTR [rbp+0x0]
  412bd5:	xor    ecx,ecx
  412bd7:	xor    edx,edx
  412bd9:	xor    esi,esi
  412bdb:	call   415c70 <flatcc_builder_start_buffer@@Base>
  412be0:	test   eax,eax
  412be2:	jne    40f848 <_start@@Base+0x9e18>
  412be8:	lea    r12,[rsp+0x44]
  412bed:	mov    rsi,r13
  412bf0:	mov    rdx,rbx
  412bf3:	mov    rdi,rbp
  412bf6:	mov    rcx,r12
  412bf9:	call   40f5c0 <_start@@Base+0x9b90>
  412bfe:	mov    esi,DWORD PTR [rsp+0x44]
  412c02:	mov    r13,rax
  412c05:	test   esi,esi
  412c07:	je     40f848 <_start@@Base+0x9e18>
  412c0d:	mov    rdi,QWORD PTR [rbp+0x0]
  412c11:	call   415d50 <flatcc_builder_end_buffer@@Base>
  412c16:	mov    DWORD PTR [rsp+0x44],eax
  412c1a:	test   eax,eax
  412c1c:	je     40f848 <_start@@Base+0x9e18>
  412c22:	mov    rdi,QWORD PTR [rbp+0x0]
  412c26:	mov    esi,0xd
  412c2b:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412c30:	test   rax,rax
  412c33:	je     40f848 <_start@@Base+0x9e18>
  412c39:	mov    edx,DWORD PTR [rsp+0x44]
  412c3d:	mov    DWORD PTR [rax],edx
  412c3f:	jmp    40fd00 <_start@@Base+0xa2d0>
  412c44:	mov    ecx,0x8
  412c49:	mov    rdx,rbx
  412c4c:	mov    rsi,r12
  412c4f:	mov    rdi,rbp
  412c52:	call   409ba0 <_start@@Base+0x4170>
  412c57:	cmp    r12,rax
  412c5a:	mov    r15,rax
  412c5d:	je     410974 <_start@@Base+0xaf44>
  412c63:	mov    rcx,QWORD PTR [rsp]
  412c67:	mov    rdx,rbx
  412c6a:	mov    rsi,rax
  412c6d:	mov    rdi,rbp
  412c70:	mov    QWORD PTR [rsp+0x60],0x0
  412c79:	call   408530 <_start@@Base+0x2b00>
  412c7e:	cmp    rax,r15
  412c81:	mov    r13,rax
  412c84:	je     41333e <_start@@Base+0xd90e>
  412c8a:	cmp    QWORD PTR [rsp+0x60],0x0
  412c90:	jne    412c9c <_start@@Base+0xd26c>
  412c92:	test   BYTE PTR [rbp+0x10],0x2
  412c96:	je     40fd00 <_start@@Base+0xa2d0>
  412c9c:	mov    rdi,QWORD PTR [rbp+0x0]
  412ca0:	mov    ecx,0x8
  412ca5:	mov    edx,0x8
  412caa:	mov    esi,0x12
  412caf:	call   418180 <flatcc_builder_table_add@@Base>
  412cb4:	test   rax,rax
  412cb7:	je     40f848 <_start@@Base+0x9e18>
  412cbd:	mov    rdx,QWORD PTR [rsp+0x60]
  412cc2:	mov    QWORD PTR [rax],rdx
  412cc5:	jmp    40fd00 <_start@@Base+0xa2d0>
  412cca:	mov    rsi,rbx
  412ccd:	mov    rdi,r13
  412cd0:	call   405b40 <_start@@Base+0x110>
  412cd5:	jmp    410a71 <_start@@Base+0xb041>
  412cda:	mov    rsi,r13
  412cdd:	mov    rdx,rbx
  412ce0:	mov    rdi,rbp
  412ce3:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412ce8:	mov    r13,rax
  412ceb:	jmp    40fd00 <_start@@Base+0xa2d0>
  412cf0:	lea    rcx,[rip+0x263e9]        # 4390e0 <__data_start@@Base+0x20>
  412cf7:	mov    r8,r15
  412cfa:	mov    rdx,rbx
  412cfd:	mov    rsi,rax
  412d00:	mov    rdi,rbp
  412d03:	call   408f90 <_start@@Base+0x3560>
  412d08:	cmp    r14,rax
  412d0b:	je     4134e5 <_start@@Base+0xdab5>
  412d11:	cmp    rbx,rax
  412d14:	je     4134e5 <_start@@Base+0xdab5>
  412d1a:	mov    r14,rax
  412d1d:	jmp    410f8f <_start@@Base+0xb55f>
  412d22:	mov    ecx,0x5
  412d27:	mov    rdx,rbx
  412d2a:	mov    rsi,r12
  412d2d:	mov    rdi,rbp
  412d30:	call   409ba0 <_start@@Base+0x4170>
  412d35:	cmp    r12,rax
  412d38:	je     4103cc <_start@@Base+0xa99c>
  412d3e:	lea    r12,[rsp+0x44]
  412d43:	mov    rdi,rbp
  412d46:	mov    rdx,rbx
  412d49:	mov    rsi,rax
  412d4c:	mov    rcx,r12
  412d4f:	call   40ebd0 <_start@@Base+0x91a0>
  412d54:	mov    edi,DWORD PTR [rsp+0x44]
  412d58:	mov    r13,rax
  412d5b:	test   edi,edi
  412d5d:	je     40f848 <_start@@Base+0x9e18>
  412d63:	mov    rdi,QWORD PTR [rbp+0x0]
  412d67:	mov    esi,0x22
  412d6c:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412d71:	test   rax,rax
  412d74:	je     40f848 <_start@@Base+0x9e18>
  412d7a:	mov    edx,DWORD PTR [rsp+0x44]
  412d7e:	mov    DWORD PTR [rax],edx
  412d80:	jmp    40fd00 <_start@@Base+0xa2d0>
  412d85:	mov    rdi,QWORD PTR [rbp+0x0]
  412d89:	call   4175c0 <flatcc_builder_end_vector@@Base>
  412d8e:	test   eax,eax
  412d90:	mov    DWORD PTR [rsp+0x44],eax
  412d94:	je     40f848 <_start@@Base+0x9e18>
  412d9a:	mov    rdi,QWORD PTR [rbp+0x0]
  412d9e:	mov    esi,0x21
  412da3:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412da8:	test   rax,rax
  412dab:	je     40f848 <_start@@Base+0x9e18>
  412db1:	mov    edx,DWORD PTR [rsp+0x44]
  412db5:	mov    DWORD PTR [rax],edx
  412db7:	jmp    40fd00 <_start@@Base+0xa2d0>
  412dbc:	mov    rdx,rbx
  412dbf:	mov    rsi,r12
  412dc2:	mov    rdi,rbp
  412dc5:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  412dca:	mov    r13,rax
  412dcd:	jmp    40fd00 <_start@@Base+0xa2d0>
  412dd2:	mov    r8,QWORD PTR [rsp]
  412dd6:	lea    rcx,[rip+0x268c3]        # 4396a0 <__data_start@@Base+0x5e0>
  412ddd:	mov    rdx,rbx
  412de0:	mov    rsi,rax
  412de3:	mov    rdi,rbp
  412de6:	call   4087e0 <_start@@Base+0x2db0>
  412deb:	cmp    r13,rax
  412dee:	mov    r13,rax
  412df1:	je     40f848 <_start@@Base+0x9e18>
  412df7:	cmp    rbx,rax
  412dfa:	jne    4121b2 <_start@@Base+0xc782>
  412e00:	jmp    40f848 <_start@@Base+0x9e18>
  412e05:	nop    DWORD PTR [rax]
  412e08:	mov    r8,QWORD PTR [rsp]
  412e0c:	lea    rcx,[rip+0x2696d]        # 439780 <__data_start@@Base+0x6c0>
  412e13:	mov    rdx,rbx
  412e16:	mov    rsi,rax
  412e19:	mov    rdi,rbp
  412e1c:	call   409740 <_start@@Base+0x3d10>
  412e21:	cmp    r13,rax
  412e24:	mov    r13,rax
  412e27:	je     40f848 <_start@@Base+0x9e18>
  412e2d:	cmp    rbx,rax
  412e30:	jne    410c44 <_start@@Base+0xb214>
  412e36:	jmp    40f848 <_start@@Base+0x9e18>
  412e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e40:	mov    ecx,0x8
  412e45:	mov    rdx,rbx
  412e48:	mov    rsi,r12
  412e4b:	mov    rdi,rbp
  412e4e:	call   409ba0 <_start@@Base+0x4170>
  412e53:	cmp    r12,rax
  412e56:	mov    r15,rax
  412e59:	je     410669 <_start@@Base+0xac39>
  412e5f:	cmp    rbx,rax
  412e62:	mov    QWORD PTR [rsp+0x58],0x0
  412e6b:	mov    QWORD PTR [rsp+0x60],0x0
  412e74:	mov    DWORD PTR [rsp+0x4c],0x0
  412e7c:	je     41343f <_start@@Base+0xda0f>
  412e82:	mov    r8,QWORD PTR [rsp]
  412e86:	lea    rcx,[rsp+0x4c]
  412e8b:	mov    rdx,rbx
  412e8e:	mov    rsi,rax
  412e91:	mov    rdi,rbp
  412e94:	call   41c710 <flatcc_json_parser_integer@@Base>
  412e99:	cmp    r15,rax
  412e9c:	mov    r13,rax
  412e9f:	je     41343f <_start@@Base+0xda0f>
  412ea5:	mov    r12d,DWORD PTR [rsp+0x4c]
  412eaa:	test   r12d,r12d
  412ead:	jne    413284 <_start@@Base+0xd854>
  412eb3:	mov    rax,QWORD PTR [rsp+0x60]
  412eb8:	mov    QWORD PTR [rsp+0x58],rax
  412ebd:	test   rax,rax
  412ec0:	jne    412ecc <_start@@Base+0xd49c>
  412ec2:	test   BYTE PTR [rbp+0x10],0x2
  412ec6:	je     40fd00 <_start@@Base+0xa2d0>
  412ecc:	mov    rdi,QWORD PTR [rbp+0x0]
  412ed0:	mov    ecx,0x8
  412ed5:	mov    edx,0x8
  412eda:	mov    esi,0x13
  412edf:	call   418180 <flatcc_builder_table_add@@Base>
  412ee4:	test   rax,rax
  412ee7:	je     40f848 <_start@@Base+0x9e18>
  412eed:	mov    rdx,QWORD PTR [rsp+0x58]
  412ef2:	mov    QWORD PTR [rax],rdx
  412ef5:	jmp    40fd00 <_start@@Base+0xa2d0>
  412efa:	mov    rdi,QWORD PTR [rbp+0x0]
  412efe:	call   4176d0 <flatcc_builder_end_offset_vector@@Base>
  412f03:	test   eax,eax
  412f05:	mov    DWORD PTR [rsp+0x44],eax
  412f09:	je     40f848 <_start@@Base+0x9e18>
  412f0f:	mov    rdi,QWORD PTR [rbp+0x0]
  412f13:	mov    esi,0xa
  412f18:	call   418350 <flatcc_builder_table_add_offset@@Base>
  412f1d:	test   rax,rax
  412f20:	je     40f848 <_start@@Base+0x9e18>
  412f26:	mov    edx,DWORD PTR [rsp+0x44]
  412f2a:	mov    DWORD PTR [rax],edx
  412f2c:	jmp    40fd00 <_start@@Base+0xa2d0>
  412f31:	mov    ecx,0x8
  412f36:	mov    rdx,rbx
  412f39:	mov    rsi,r12
  412f3c:	mov    rdi,rbp
  412f3f:	call   409ba0 <_start@@Base+0x4170>
  412f44:	cmp    r12,rax
  412f47:	mov    r15,rax
  412f4a:	je     412505 <_start@@Base+0xcad5>
  412f50:	mov    rcx,QWORD PTR [rsp]
  412f54:	mov    rdx,rbx
  412f57:	mov    rsi,rax
  412f5a:	mov    rdi,rbp
  412f5d:	mov    DWORD PTR [rsp+0x60],0x0
  412f65:	call   4081b0 <_start@@Base+0x2780>
  412f6a:	cmp    rax,r15
  412f6d:	mov    r13,rax
  412f70:	je     413378 <_start@@Base+0xd948>
  412f76:	mov    eax,DWORD PTR [rsp+0x60]
  412f7a:	test   eax,eax
  412f7c:	jne    412f88 <_start@@Base+0xd558>
  412f7e:	test   BYTE PTR [rbp+0x10],0x2
  412f82:	je     40fd00 <_start@@Base+0xa2d0>
  412f88:	mov    rdi,QWORD PTR [rbp+0x0]
  412f8c:	mov    ecx,0x4
  412f91:	mov    edx,0x4
  412f96:	mov    esi,0x11
  412f9b:	call   418180 <flatcc_builder_table_add@@Base>
  412fa0:	test   rax,rax
  412fa3:	je     40f848 <_start@@Base+0x9e18>
  412fa9:	mov    edx,DWORD PTR [rsp+0x60]
  412fad:	mov    DWORD PTR [rax],edx
  412faf:	jmp    40fd00 <_start@@Base+0xa2d0>
  412fb4:	mov    r8,QWORD PTR [rsp]
  412fb8:	lea    rcx,[rip+0x26701]        # 4396c0 <__data_start@@Base+0x600>
  412fbf:	mov    rdx,rbx
  412fc2:	mov    rsi,rax
  412fc5:	mov    rdi,rbp
  412fc8:	call   4087e0 <_start@@Base+0x2db0>
  412fcd:	cmp    r13,rax
  412fd0:	mov    r13,rax
  412fd3:	je     40f848 <_start@@Base+0x9e18>
  412fd9:	cmp    rbx,rax
  412fdc:	jne    410cc9 <_start@@Base+0xb299>
  412fe2:	jmp    40f848 <_start@@Base+0x9e18>
  412fe7:	nop    WORD PTR [rax+rax*1+0x0]
  412ff0:	mov    ecx,0x2
  412ff5:	mov    rdx,rbx
  412ff8:	mov    rsi,r12
  412ffb:	mov    rdi,rbp
  412ffe:	call   409ba0 <_start@@Base+0x4170>
  413003:	cmp    r12,rax
  413006:	mov    r13,rax
  413009:	je     4124e5 <_start@@Base+0xcab5>
  41300f:	mov    rdi,QWORD PTR [rbp+0x0]
  413013:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  413018:	test   eax,eax
  41301a:	jne    40f848 <_start@@Base+0x9e18>
  413020:	mov    rsi,r13
  413023:	mov    rcx,r14
  413026:	mov    rdx,rbx
  413029:	mov    rdi,rbp
  41302c:	call   409b00 <_start@@Base+0x40d0>
  413031:	mov    r10d,DWORD PTR [rsp+0x40]
  413036:	mov    r13,rax
  413039:	test   r10d,r10d
  41303c:	je     4130bc <_start@@Base+0xd68c>
  41303e:	lea    r12,[rsp+0x44]
  413043:	jmp    413083 <_start@@Base+0xd653>
  413045:	nop    DWORD PTR [rax]
  413048:	mov    rdi,QWORD PTR [rbp+0x0]
  41304c:	mov    esi,0x1
  413051:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  413056:	test   rax,rax
  413059:	je     40f848 <_start@@Base+0x9e18>
  41305f:	mov    edx,DWORD PTR [rsp+0x44]
  413063:	mov    rsi,r13
  413066:	mov    rcx,r14
  413069:	mov    rdi,rbp
  41306c:	mov    DWORD PTR [rax],edx
  41306e:	mov    rdx,rbx
  413071:	call   40a300 <_start@@Base+0x48d0>
  413076:	mov    r8d,DWORD PTR [rsp+0x40]
  41307b:	mov    r13,rax
  41307e:	test   r8d,r8d
  413081:	je     4130bc <_start@@Base+0xd68c>
  413083:	mov    rsi,r13
  413086:	mov    rcx,r12
  413089:	mov    rdx,rbx
  41308c:	mov    rdi,rbp
  41308f:	call   41d800 <flatcc_json_parser_build_string@@Base>
  413094:	mov    r9d,DWORD PTR [rsp+0x44]
  413099:	mov    r13,rax
  41309c:	test   r9d,r9d
  41309f:	jne    413048 <_start@@Base+0xd618>
  4130a1:	jmp    40f848 <_start@@Base+0x9e18>
  4130a6:	mov    rsi,r13
  4130a9:	mov    rdx,rbx
  4130ac:	mov    rdi,rbp
  4130af:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4130b4:	mov    r13,rax
  4130b7:	jmp    40fd00 <_start@@Base+0xa2d0>
  4130bc:	mov    rdi,QWORD PTR [rbp+0x0]
  4130c0:	call   4176d0 <flatcc_builder_end_offset_vector@@Base>
  4130c5:	test   eax,eax
  4130c7:	mov    DWORD PTR [rsp+0x44],eax
  4130cb:	je     40f848 <_start@@Base+0x9e18>
  4130d1:	mov    rdi,QWORD PTR [rbp+0x0]
  4130d5:	mov    esi,0x1c
  4130da:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4130df:	test   rax,rax
  4130e2:	je     40f848 <_start@@Base+0x9e18>
  4130e8:	mov    edx,DWORD PTR [rsp+0x44]
  4130ec:	mov    DWORD PTR [rax],edx
  4130ee:	jmp    40fd00 <_start@@Base+0xa2d0>
  4130f3:	mov    rdx,rbx
  4130f6:	mov    rsi,r12
  4130f9:	mov    rdi,rbp
  4130fc:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413101:	mov    r13,rax
  413104:	jmp    40fd00 <_start@@Base+0xa2d0>
  413109:	mov    r13,r12
  41310c:	jmp    40f848 <_start@@Base+0x9e18>
  413111:	mov    r8,QWORD PTR [rsp]
  413115:	lea    rcx,[rip+0x26624]        # 439740 <__data_start@@Base+0x680>
  41311c:	mov    rdx,rbx
  41311f:	mov    rsi,rax
  413122:	mov    rdi,rbp
  413125:	call   409740 <_start@@Base+0x3d10>
  41312a:	cmp    r13,rax
  41312d:	mov    r13,rax
  413130:	je     40f848 <_start@@Base+0x9e18>
  413136:	cmp    rbx,rax
  413139:	jne    412362 <_start@@Base+0xc932>
  41313f:	jmp    40f848 <_start@@Base+0x9e18>
  413144:	nop    DWORD PTR [rax+0x0]
  413148:	mov    rdx,rbx
  41314b:	mov    rsi,r12
  41314e:	mov    rdi,rbp
  413151:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413156:	mov    r13,rax
  413159:	jmp    40fd00 <_start@@Base+0xa2d0>
  41315e:	mov    rdi,QWORD PTR [rbp+0x0]
  413162:	mov    ecx,0xffffffff
  413167:	mov    edx,0x1
  41316c:	mov    esi,0x1
  413171:	call   4166c0 <flatcc_builder_start_vector@@Base>
  413176:	test   eax,eax
  413178:	jne    40f848 <_start@@Base+0x9e18>
  41317e:	mov    rsi,r13
  413181:	mov    rcx,r14
  413184:	mov    rdx,rbx
  413187:	mov    rdi,rbp
  41318a:	call   409b00 <_start@@Base+0x40d0>
  41318f:	mov    r10d,DWORD PTR [rsp+0x40]
  413194:	mov    r13,rax
  413197:	test   r10d,r10d
  41319a:	je     4132ad <_start@@Base+0xd87d>
  4131a0:	mov    r12,QWORD PTR [rsp]
  4131a4:	jmp    4131da <_start@@Base+0xd7aa>
  4131a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131b0:	movzx  edx,BYTE PTR [rsp+0x60]
  4131b5:	mov    rcx,r14
  4131b8:	mov    rsi,rax
  4131bb:	mov    rdi,rbp
  4131be:	mov    BYTE PTR [r15],dl
  4131c1:	mov    rdx,rbx
  4131c4:	call   40a300 <_start@@Base+0x48d0>
  4131c9:	mov    r9d,DWORD PTR [rsp+0x40]
  4131ce:	mov    r13,rax
  4131d1:	test   r9d,r9d
  4131d4:	je     4132ad <_start@@Base+0xd87d>
  4131da:	mov    rdi,QWORD PTR [rbp+0x0]
  4131de:	mov    esi,0x1
  4131e3:	mov    BYTE PTR [rsp+0x60],0x0
  4131e8:	call   416020 <flatcc_builder_extend_vector@@Base>
  4131ed:	test   rax,rax
  4131f0:	mov    r15,rax
  4131f3:	je     40f848 <_start@@Base+0x9e18>
  4131f9:	mov    rcx,r12
  4131fc:	mov    rdx,rbx
  4131ff:	mov    rsi,r13
  413202:	mov    rdi,rbp
  413205:	call   408280 <_start@@Base+0x2850>
  41320a:	cmp    rax,r13
  41320d:	jne    4131b0 <_start@@Base+0xd780>
  41320f:	lea    rcx,[rip+0x2634a]        # 439560 <__data_start@@Base+0x4a0>
  413216:	mov    r8,r12
  413219:	mov    rdx,rbx
  41321c:	mov    rsi,r13
  41321f:	mov    rdi,rbp
  413222:	call   409930 <_start@@Base+0x3f00>
  413227:	cmp    rax,r13
  41322a:	je     413235 <_start@@Base+0xd805>
  41322c:	cmp    rbx,rax
  41322f:	jne    4131b0 <_start@@Base+0xd780>
  413235:	mov    r13,rax
  413238:	jmp    40f848 <_start@@Base+0x9e18>
  41323d:	nop    DWORD PTR [rax]
  413240:	mov    r13,r12
  413243:	jmp    40f848 <_start@@Base+0x9e18>
  413248:	mov    rsi,rbx
  41324b:	mov    rdi,r13
  41324e:	call   405b40 <_start@@Base+0x110>
  413253:	jmp    410990 <_start@@Base+0xaf60>
  413258:	mov    rsi,r13
  41325b:	mov    rdx,rbx
  41325e:	mov    rdi,rbp
  413261:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413266:	mov    r13,rax
  413269:	jmp    40fd00 <_start@@Base+0xa2d0>
  41326e:	mov    rdx,rbx
  413271:	mov    rsi,r12
  413274:	mov    rdi,rbp
  413277:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41327c:	mov    r13,rax
  41327f:	jmp    40fd00 <_start@@Base+0xa2d0>
  413284:	mov    ecx,0x8
  413289:	mov    rdx,rbx
  41328c:	mov    rsi,rax
  41328f:	mov    rdi,rbp
  413292:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413297:	cmp    r15,rax
  41329a:	mov    r13,rax
  41329d:	je     41343c <_start@@Base+0xda0c>
  4132a3:	mov    rax,QWORD PTR [rsp+0x58]
  4132a8:	jmp    412ebd <_start@@Base+0xd48d>
  4132ad:	mov    rdi,QWORD PTR [rbp+0x0]
  4132b1:	call   4175c0 <flatcc_builder_end_vector@@Base>
  4132b6:	mov    DWORD PTR [rsp+0x44],eax
  4132ba:	jmp    412c1a <_start@@Base+0xd1ea>
  4132bf:	mov    r14,QWORD PTR [rsp+0x8]
  4132c4:	mov    r13,r14
  4132c7:	jmp    40f848 <_start@@Base+0x9e18>
  4132cc:	mov    rsi,rbx
  4132cf:	mov    rdi,r13
  4132d2:	call   405b40 <_start@@Base+0x110>
  4132d7:	jmp    410685 <_start@@Base+0xac55>
  4132dc:	mov    r8,QWORD PTR [rsp]
  4132e0:	lea    rcx,[rip+0x26379]        # 439660 <__data_start@@Base+0x5a0>
  4132e7:	mov    rdx,rbx
  4132ea:	mov    rsi,rax
  4132ed:	mov    rdi,rbp
  4132f0:	call   409550 <_start@@Base+0x3b20>
  4132f5:	cmp    r13,rax
  4132f8:	mov    r13,rax
  4132fb:	je     40f848 <_start@@Base+0x9e18>
  413301:	cmp    rbx,rax
  413304:	jne    412615 <_start@@Base+0xcbe5>
  41330a:	jmp    40f848 <_start@@Base+0x9e18>
  41330f:	nop
  413310:	mov    rsi,rbx
  413313:	mov    rdi,r13
  413316:	call   405b40 <_start@@Base+0x110>
  41331b:	jmp    412521 <_start@@Base+0xcaf1>
  413320:	mov    rsi,r13
  413323:	mov    rdx,rbx
  413326:	mov    rdi,rbp
  413329:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  41332e:	mov    r13,rax
  413331:	jmp    40fd00 <_start@@Base+0xa2d0>
  413336:	mov    r13,r12
  413339:	jmp    40f848 <_start@@Base+0x9e18>
  41333e:	mov    r8,QWORD PTR [rsp]
  413342:	lea    rcx,[rip+0x262d7]        # 439620 <__data_start@@Base+0x560>
  413349:	mov    rdx,rbx
  41334c:	mov    rsi,rax
  41334f:	mov    rdi,rbp
  413352:	call   408f90 <_start@@Base+0x3560>
  413357:	cmp    r13,rax
  41335a:	mov    r13,rax
  41335d:	je     40f848 <_start@@Base+0x9e18>
  413363:	cmp    rbx,rax
  413366:	jne    412c8a <_start@@Base+0xd25a>
  41336c:	jmp    40f848 <_start@@Base+0x9e18>
  413371:	nop    DWORD PTR [rax+0x0]
  413378:	mov    r8,QWORD PTR [rsp]
  41337c:	lea    rcx,[rip+0x2625d]        # 4395e0 <__data_start@@Base+0x520>
  413383:	mov    rdx,rbx
  413386:	mov    rsi,rax
  413389:	mov    rdi,rbp
  41338c:	call   409370 <_start@@Base+0x3940>
  413391:	cmp    r13,rax
  413394:	mov    r13,rax
  413397:	je     40f848 <_start@@Base+0x9e18>
  41339d:	cmp    rbx,rax
  4133a0:	jne    412f76 <_start@@Base+0xd546>
  4133a6:	jmp    40f848 <_start@@Base+0x9e18>
  4133ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4133b0:	mov    r12,r13
  4133b3:	mov    rdx,rbx
  4133b6:	mov    rsi,r12
  4133b9:	mov    rdi,rbp
  4133bc:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4133c1:	mov    r13,rax
  4133c4:	jmp    40fd00 <_start@@Base+0xa2d0>
  4133c9:	mov    r12,r13
  4133cc:	mov    rdx,rbx
  4133cf:	mov    rsi,r12
  4133d2:	mov    rdi,rbp
  4133d5:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  4133da:	mov    r13,rax
  4133dd:	jmp    40fd00 <_start@@Base+0xa2d0>
  4133e2:	nop    WORD PTR [rax+rax*1+0x0]
  4133e8:	mov    r14,QWORD PTR [rsp+0x18]
  4133ed:	mov    r13,rax
  4133f0:	jmp    4120a3 <_start@@Base+0xc673>
  4133f5:	mov    ecx,0x8
  4133fa:	mov    rdx,rbx
  4133fd:	mov    rsi,r13
  413400:	mov    rdi,rbp
  413403:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413408:	cmp    r15,rax
  41340b:	mov    r12,rax
  41340e:	je     4134ac <_start@@Base+0xda7c>
  413414:	mov    rax,QWORD PTR [rsp+0x58]
  413419:	mov    r13,r12
  41341c:	jmp    41072c <_start@@Base+0xacfc>
  413421:	call   405070 <__stack_chk_fail@plt>
  413426:	mov    rsi,r13
  413429:	mov    rdx,rbx
  41342c:	mov    rdi,rbp
  41342f:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413434:	mov    r13,rax
  413437:	jmp    40fd00 <_start@@Base+0xa2d0>
  41343c:	mov    r15,rax
  41343f:	lea    r8,[rsp+0x58]
  413444:	lea    rcx,[rip+0x26155]        # 4395a0 <__data_start@@Base+0x4e0>
  41344b:	mov    rdx,rbx
  41344e:	mov    rsi,r15
  413451:	mov    rdi,rbp
  413454:	call   405160 <__sprintf_chk@plt+0x10>
  413459:	cmp    rax,r15
  41345c:	mov    r13,rax
  41345f:	je     40f848 <_start@@Base+0x9e18>
  413465:	cmp    rbx,rax
  413468:	jne    4132a3 <_start@@Base+0xd873>
  41346e:	jmp    40f848 <_start@@Base+0x9e18>
  413473:	mov    r8,QWORD PTR [rsp]
  413477:	lea    rcx,[rip+0x261c2]        # 439640 <__data_start@@Base+0x580>
  41347e:	mov    rdx,rbx
  413481:	mov    rsi,rax
  413484:	mov    rdi,rbp
  413487:	call   409550 <_start@@Base+0x3b20>
  41348c:	cmp    r13,rax
  41348f:	mov    r13,rax
  413492:	je     40f848 <_start@@Base+0x9e18>
  413498:	cmp    rbx,rax
  41349b:	jne    410ae0 <_start@@Base+0xb0b0>
  4134a1:	jmp    40f848 <_start@@Base+0x9e18>
  4134a6:	mov    r13,rbx
  4134a9:	mov    r12,r13
  4134ac:	lea    r8,[rsp+0x58]
  4134b1:	lea    rcx,[rip+0x260c8]        # 439580 <__data_start@@Base+0x4c0>
  4134b8:	mov    rdx,rbx
  4134bb:	mov    rsi,r12
  4134be:	mov    rdi,rbp
  4134c1:	call   405160 <__sprintf_chk@plt+0x10>
  4134c6:	cmp    rax,r12
  4134c9:	mov    r13,rax
  4134cc:	je     40f848 <_start@@Base+0x9e18>
  4134d2:	cmp    rbx,rax
  4134d5:	je     40f848 <_start@@Base+0x9e18>
  4134db:	mov    rax,QWORD PTR [rsp+0x58]
  4134e0:	jmp    41072c <_start@@Base+0xacfc>
  4134e5:	mov    r14,QWORD PTR [rsp+0x20]
  4134ea:	mov    r13,rax
  4134ed:	jmp    411a63 <_start@@Base+0xc033>
  4134f2:	mov    r13,rax
  4134f5:	mov    r14,QWORD PTR [rsp+0x18]
  4134fa:	jmp    4120a3 <_start@@Base+0xc673>
  4134ff:	mov    r8,QWORD PTR [rsp]
  413503:	lea    rcx,[rip+0x260b6]        # 4395c0 <__data_start@@Base+0x500>
  41350a:	mov    rdx,rbx
  41350d:	mov    rsi,rax
  413510:	mov    rdi,rbp
  413513:	call   409370 <_start@@Base+0x3940>
  413518:	cmp    r13,rax
  41351b:	mov    r13,rax
  41351e:	je     40f848 <_start@@Base+0x9e18>
  413524:	cmp    rbx,rax
  413527:	jne    412590 <_start@@Base+0xcb60>
  41352d:	jmp    40f848 <_start@@Base+0x9e18>
  413532:	mov    r8,QWORD PTR [rsp]
  413536:	lea    rcx,[rip+0x260c3]        # 439600 <__data_start@@Base+0x540>
  41353d:	mov    rdx,rbx
  413540:	mov    rsi,rax
  413543:	mov    rdi,rbp
  413546:	call   408f90 <_start@@Base+0x3560>
  41354b:	cmp    r13,rax
  41354e:	mov    r13,rax
  413551:	je     40f848 <_start@@Base+0x9e18>
  413557:	cmp    rbx,rax
  41355a:	jne    410a00 <_start@@Base+0xafd0>
  413560:	jmp    40f848 <_start@@Base+0x9e18>
  413565:	mov    rsi,r13
  413568:	mov    rdx,rbx
  41356b:	mov    rdi,rbp
  41356e:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413573:	mov    r13,rax
  413576:	jmp    40fd00 <_start@@Base+0xa2d0>
  41357b:	nop    DWORD PTR [rax+rax*1+0x0]
  413580:	push   r15
  413582:	push   r14
  413584:	mov    r14,rsi
  413587:	push   r13
  413589:	push   r12
  41358b:	push   rbp
  41358c:	push   rbx
  41358d:	mov    rbp,rdi
  413590:	mov    rbx,rdx
  413593:	sub    rsp,0x48
  413597:	mov    DWORD PTR [r8],0x0
  41359e:	mov    rsi,QWORD PTR fs:0x28
  4135a7:	mov    QWORD PTR [rsp+0x38],rsi
  4135ac:	xor    esi,esi
  4135ae:	cmp    cl,0x4
  4135b1:	ja     413b20 <_start@@Base+0xe0f0>
  4135b7:	lea    rdx,[rip+0x17c4e]        # 42b20c <_IO_stdin_used@@Base+0x20c>
  4135be:	movzx  eax,cl
  4135c1:	mov    r12,r8
  4135c4:	movsxd rax,DWORD PTR [rdx+rax*4]
  4135c8:	add    rax,rdx
  4135cb:	jmp    rax
  4135cd:	nop    DWORD PTR [rax]
  4135d0:	mov    rcx,r8
  4135d3:	mov    rdx,rbx
  4135d6:	mov    rsi,r14
  4135d9:	call   40ebd0 <_start@@Base+0x91a0>
  4135de:	mov    ecx,DWORD PTR [rbp+0x1c]
  4135e1:	test   ecx,ecx
  4135e3:	jne    413600 <_start@@Base+0xdbd0>
  4135e5:	mov    edx,DWORD PTR [r12]
  4135e9:	test   edx,edx
  4135eb:	jne    413600 <_start@@Base+0xdbd0>
  4135ed:	mov    ecx,0x21
  4135f2:	mov    rdx,rbx
  4135f5:	mov    rsi,rax
  4135f8:	mov    rdi,rbp
  4135fb:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413600:	mov    rdi,QWORD PTR [rsp+0x38]
  413605:	xor    rdi,QWORD PTR fs:0x28
  41360e:	jne    413ed9 <_start@@Base+0xe4a9>
  413614:	add    rsp,0x48
  413618:	pop    rbx
  413619:	pop    rbp
  41361a:	pop    r12
  41361c:	pop    r13
  41361e:	pop    r14
  413620:	pop    r15
  413622:	ret    
  413623:	nop    DWORD PTR [rax+rax*1+0x0]
  413628:	mov    rcx,r8
  41362b:	mov    rdx,rbx
  41362e:	mov    rsi,r14
  413631:	call   40c250 <_start@@Base+0x6820>
  413636:	jmp    4135de <_start@@Base+0xdbae>
  413638:	nop    DWORD PTR [rax+rax*1+0x0]
  413640:	mov    rax,rbx
  413643:	sub    rax,r14
  413646:	cmp    rax,0x3
  41364a:	jle    413668 <_start@@Base+0xdc38>
  41364c:	lea    rsi,[rip+0x17f6f]        # 42b5c2 <_IO_stdin_used@@Base+0x5c2>
  413653:	mov    edx,0x4
  413658:	mov    rdi,r14
  41365b:	call   4050b0 <memcmp@plt>
  413660:	test   eax,eax
  413662:	je     413ed0 <_start@@Base+0xe4a0>
  413668:	mov    ecx,0x1a
  41366d:	mov    rdx,rbx
  413670:	mov    rsi,r14
  413673:	mov    rdi,rbp
  413676:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41367b:	jmp    413600 <_start@@Base+0xdbd0>
  41367d:	nop    DWORD PTR [rax]
  413680:	mov    rcx,r8
  413683:	mov    rdx,rbx
  413686:	mov    rsi,r14
  413689:	call   40f5c0 <_start@@Base+0x9b90>
  41368e:	jmp    4135de <_start@@Base+0xdbae>
  413693:	nop    DWORD PTR [rax+rax*1+0x0]
  413698:	mov    rdi,QWORD PTR [rdi]
  41369b:	mov    esi,0x4
  4136a0:	call   4168e0 <flatcc_builder_start_table@@Base>
  4136a5:	test   eax,eax
  4136a7:	jne    4139c8 <_start@@Base+0xdf98>
  4136ad:	lea    r13,[rsp+0x28]
  4136b2:	mov    rsi,r14
  4136b5:	mov    rdx,rbx
  4136b8:	mov    rdi,rbp
  4136bb:	mov    rcx,r13
  4136be:	call   408740 <_start@@Base+0x2d10>
  4136c3:	mov    ecx,DWORD PTR [rsp+0x28]
  4136c7:	mov    r14,rax
  4136ca:	test   ecx,ecx
  4136cc:	je     413e40 <_start@@Base+0xe410>
  4136d2:	lea    rax,[rsp+0x27]
  4136d7:	lea    r15,[rsp+0x30]
  4136dc:	mov    QWORD PTR [rsp+0x18],rax
  4136e1:	lea    rax,[rsp+0x2c]
  4136e6:	mov    QWORD PTR [rsp],rax
  4136ea:	jmp    4137bc <_start@@Base+0xdd8c>
  4136ef:	nop
  4136f0:	add    r14,0x1
  4136f4:	mov    r11,rbx
  4136f7:	sub    r11,r14
  4136fa:	cmp    r11,0x7
  4136fe:	jbe    4137f5 <_start@@Base+0xddc5>
  413704:	movbe  r8,QWORD PTR [r14]
  413709:	mov    rdx,r8
  41370c:	movabs rax,0x636f6c6f72320000
  413716:	xor    dx,dx
  413719:	cmp    rdx,rax
  41371c:	je     413808 <_start@@Base+0xddd8>
  413722:	mov    rdx,r8
  413725:	movabs rax,0x636f6c6f72000000
  41372f:	and    rdx,0xffffffffff000000
  413736:	cmp    rdx,rax
  413739:	jne    413745 <_start@@Base+0xdd15>
  41373b:	cmp    r11,0x5
  41373f:	jg     413b58 <_start@@Base+0xe128>
  413745:	movabs rax,0xffffff0000000000
  41374f:	movabs rdx,0x7563320000000000
  413759:	and    rax,r8
  41375c:	cmp    rax,rdx
  41375f:	je     4138f8 <_start@@Base+0xdec8>
  413765:	movabs rax,0xffff000000000000
  41376f:	and    r8,rax
  413772:	movabs rax,0x7563000000000000
  41377c:	cmp    r8,rax
  41377f:	jne    41378b <_start@@Base+0xdd5b>
  413781:	cmp    r11,0x2
  413785:	jg     413a50 <_start@@Base+0xe020>
  41378b:	mov    rsi,r14
  41378e:	mov    rdx,rbx
  413791:	mov    rdi,rbp
  413794:	call   41d2c0 <flatcc_json_parser_unmatched_symbol@@Base>
  413799:	mov    r14,rax
  41379c:	mov    rsi,r14
  41379f:	mov    rdi,rbp
  4137a2:	mov    rcx,r13
  4137a5:	mov    rdx,rbx
  4137a8:	call   40a450 <_start@@Base+0x4a20>
  4137ad:	mov    edi,DWORD PTR [rsp+0x28]
  4137b1:	mov    r14,rax
  4137b4:	test   edi,edi
  4137b6:	je     413e40 <_start@@Base+0xe410>
  4137bc:	cmp    rbx,r14
  4137bf:	je     4139e0 <_start@@Base+0xdfb0>
  4137c5:	cmp    BYTE PTR [r14],0x22
  4137c9:	je     4136f0 <_start@@Base+0xdcc0>
  4137cf:	mov    rsi,r14
  4137d2:	mov    ecx,0x5
  4137d7:	mov    rdx,rbx
  4137da:	mov    rdi,rbp
  4137dd:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4137e2:	mov    r11,rbx
  4137e5:	mov    r14,rax
  4137e8:	sub    r11,r14
  4137eb:	cmp    r11,0x7
  4137ef:	ja     413704 <_start@@Base+0xdcd4>
  4137f5:	lea    rdx,[rip+0x17a24]        # 42b220 <_IO_stdin_used@@Base+0x220>
  4137fc:	movsxd rax,DWORD PTR [rdx+r11*4]
  413800:	add    rax,rdx
  413803:	jmp    rax
  413805:	nop    DWORD PTR [rax]
  413808:	cmp    r11,0x6
  41380c:	jle    413765 <_start@@Base+0xdd35>
  413812:	mov    ecx,0x6
  413817:	mov    rdx,rbx
  41381a:	mov    rsi,r14
  41381d:	mov    rdi,rbp
  413820:	mov    QWORD PTR [rsp+0x10],r11
  413825:	mov    QWORD PTR [rsp+0x8],r8
  41382a:	call   409ba0 <_start@@Base+0x4170>
  41382f:	cmp    rax,r14
  413832:	mov    r10,rax
  413835:	mov    r8,QWORD PTR [rsp+0x8]
  41383a:	mov    r11,QWORD PTR [rsp+0x10]
  41383f:	je     413765 <_start@@Base+0xdd35>
  413845:	cmp    rbx,rax
  413848:	mov    BYTE PTR [rsp+0x27],0x0
  41384d:	mov    QWORD PTR [rsp+0x30],0x0
  413856:	mov    DWORD PTR [rsp+0x2c],0x0
  41385e:	je     413cfb <_start@@Base+0xe2cb>
  413864:	mov    rcx,QWORD PTR [rsp]
  413868:	mov    r8,r15
  41386b:	mov    rdx,rbx
  41386e:	mov    rsi,rax
  413871:	mov    rdi,rbp
  413874:	mov    QWORD PTR [rsp+0x8],rax
  413879:	call   41c710 <flatcc_json_parser_integer@@Base>
  41387e:	mov    r10,QWORD PTR [rsp+0x8]
  413883:	mov    r14,rax
  413886:	cmp    r10,rax
  413889:	je     413cf8 <_start@@Base+0xe2c8>
  41388f:	mov    edx,DWORD PTR [rsp+0x2c]
  413893:	mov    rax,QWORD PTR [rsp+0x30]
  413898:	test   edx,edx
  41389a:	je     413b40 <_start@@Base+0xe110>
  4138a0:	cmp    rax,0x80
  4138a6:	mov    ecx,0x8
  4138ab:	ja     413d52 <_start@@Base+0xe322>
  4138b1:	mov    edx,eax
  4138b3:	neg    edx
  4138b5:	mov    BYTE PTR [rsp+0x27],dl
  4138b9:	cmp    dl,0x2
  4138bc:	jne    4138c8 <_start@@Base+0xde98>
  4138be:	test   BYTE PTR [rbp+0x10],0x2
  4138c2:	je     41379c <_start@@Base+0xdd6c>
  4138c8:	mov    rdi,QWORD PTR [rbp+0x0]
  4138cc:	mov    ecx,0x1
  4138d1:	mov    edx,0x1
  4138d6:	mov    esi,0x1
  4138db:	call   418180 <flatcc_builder_table_add@@Base>
  4138e0:	test   rax,rax
  4138e3:	je     4139c8 <_start@@Base+0xdf98>
  4138e9:	movzx  edx,BYTE PTR [rsp+0x27]
  4138ee:	mov    BYTE PTR [rax],dl
  4138f0:	jmp    41379c <_start@@Base+0xdd6c>
  4138f5:	nop    DWORD PTR [rax]
  4138f8:	cmp    r11,0x3
  4138fc:	jle    41378b <_start@@Base+0xdd5b>
  413902:	mov    ecx,0x3
  413907:	mov    rdx,rbx
  41390a:	mov    rsi,r14
  41390d:	mov    rdi,rbp
  413910:	call   409ba0 <_start@@Base+0x4170>
  413915:	cmp    rax,r14
  413918:	mov    r10,rax
  41391b:	je     41378b <_start@@Base+0xdd5b>
  413921:	cmp    rbx,rax
  413924:	mov    BYTE PTR [rsp+0x27],0x0
  413929:	mov    QWORD PTR [rsp+0x30],0x0
  413932:	mov    DWORD PTR [rsp+0x2c],0x0
  41393a:	je     413d83 <_start@@Base+0xe353>
  413940:	mov    rcx,QWORD PTR [rsp]
  413944:	mov    r8,r15
  413947:	mov    rdx,rbx
  41394a:	mov    rsi,rax
  41394d:	mov    rdi,rbp
  413950:	mov    QWORD PTR [rsp+0x8],rax
  413955:	call   41c710 <flatcc_json_parser_integer@@Base>
  41395a:	mov    r10,QWORD PTR [rsp+0x8]
  41395f:	mov    r14,rax
  413962:	cmp    r10,rax
  413965:	je     413d80 <_start@@Base+0xe350>
  41396b:	mov    r9d,DWORD PTR [rsp+0x2c]
  413970:	mov    ecx,0x8
  413975:	test   r9d,r9d
  413978:	jne    413c82 <_start@@Base+0xe252>
  41397e:	mov    rax,QWORD PTR [rsp+0x30]
  413983:	cmp    rax,0xff
  413989:	ja     413c78 <_start@@Base+0xe248>
  41398f:	mov    edx,eax
  413991:	mov    BYTE PTR [rsp+0x27],al
  413995:	cmp    dl,0x2
  413998:	jne    4139a4 <_start@@Base+0xdf74>
  41399a:	test   BYTE PTR [rbp+0x10],0x2
  41399e:	je     41379c <_start@@Base+0xdd6c>
  4139a4:	mov    rdi,QWORD PTR [rbp+0x0]
  4139a8:	mov    ecx,0x1
  4139ad:	mov    edx,0x1
  4139b2:	mov    esi,0x3
  4139b7:	call   418180 <flatcc_builder_table_add@@Base>
  4139bc:	test   rax,rax
  4139bf:	jne    4138e9 <_start@@Base+0xdeb9>
  4139c5:	nop    DWORD PTR [rax]
  4139c8:	mov    ecx,0x21
  4139cd:	mov    rdx,rbx
  4139d0:	mov    rsi,r14
  4139d3:	mov    rdi,rbp
  4139d6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  4139db:	jmp    4135de <_start@@Base+0xdbae>
  4139e0:	xor    r11d,r11d
  4139e3:	xor    r8d,r8d
  4139e6:	jmp    413765 <_start@@Base+0xdd35>
  4139eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4139f0:	movsx  rax,BYTE PTR [r14+0x6]
  4139f5:	shl    rax,0x8
  4139f9:	movsx  rdx,BYTE PTR [r14+0x5]
  4139fe:	shl    rdx,0x10
  413a02:	or     rax,rdx
  413a05:	movsx  rdx,BYTE PTR [r14+0x4]
  413a0a:	shl    rdx,0x18
  413a0e:	mov    r8,rdx
  413a11:	or     r8,rax
  413a14:	movsx  rdx,BYTE PTR [r14+0x3]
  413a19:	mov    rax,rdx
  413a1c:	shl    rax,0x20
  413a20:	or     r8,rax
  413a23:	movsx  rdx,BYTE PTR [r14+0x2]
  413a28:	mov    rax,rdx
  413a2b:	shl    rax,0x28
  413a2f:	or     rax,r8
  413a32:	movsx  rdx,BYTE PTR [r14+0x1]
  413a37:	shl    rdx,0x30
  413a3b:	or     rax,rdx
  413a3e:	movsx  r8,BYTE PTR [r14]
  413a42:	shl    r8,0x38
  413a46:	or     r8,rax
  413a49:	jmp    413709 <_start@@Base+0xdcd9>
  413a4e:	xchg   ax,ax
  413a50:	mov    ecx,0x2
  413a55:	mov    rdx,rbx
  413a58:	mov    rsi,r14
  413a5b:	mov    rdi,rbp
  413a5e:	call   409ba0 <_start@@Base+0x4170>
  413a63:	cmp    rax,r14
  413a66:	mov    r10,rax
  413a69:	je     41378b <_start@@Base+0xdd5b>
  413a6f:	cmp    rbx,rax
  413a72:	mov    BYTE PTR [rsp+0x27],0x0
  413a77:	mov    QWORD PTR [rsp+0x30],0x0
  413a80:	mov    DWORD PTR [rsp+0x2c],0x0
  413a88:	je     413cb3 <_start@@Base+0xe283>
  413a8e:	mov    rcx,QWORD PTR [rsp]
  413a92:	mov    r8,r15
  413a95:	mov    rdx,rbx
  413a98:	mov    rsi,rax
  413a9b:	mov    rdi,rbp
  413a9e:	mov    QWORD PTR [rsp+0x8],rax
  413aa3:	call   41c710 <flatcc_json_parser_integer@@Base>
  413aa8:	mov    r10,QWORD PTR [rsp+0x8]
  413aad:	mov    r14,rax
  413ab0:	cmp    r10,rax
  413ab3:	je     413cb0 <_start@@Base+0xe280>
  413ab9:	mov    r8d,DWORD PTR [rsp+0x2c]
  413abe:	mov    ecx,0x8
  413ac3:	test   r8d,r8d
  413ac6:	jne    413c3a <_start@@Base+0xe20a>
  413acc:	mov    rax,QWORD PTR [rsp+0x30]
  413ad1:	cmp    rax,0xff
  413ad7:	ja     413c30 <_start@@Base+0xe200>
  413add:	mov    edx,eax
  413adf:	mov    BYTE PTR [rsp+0x27],al
  413ae3:	cmp    dl,0x2
  413ae6:	jne    413af2 <_start@@Base+0xe0c2>
  413ae8:	test   BYTE PTR [rbp+0x10],0x2
  413aec:	je     41379c <_start@@Base+0xdd6c>
  413af2:	mov    rdi,QWORD PTR [rbp+0x0]
  413af6:	mov    ecx,0x1
  413afb:	mov    edx,0x1
  413b00:	mov    esi,0x2
  413b05:	call   418180 <flatcc_builder_table_add@@Base>
  413b0a:	test   rax,rax
  413b0d:	jne    4138e9 <_start@@Base+0xdeb9>
  413b13:	jmp    4139c8 <_start@@Base+0xdf98>
  413b18:	nop    DWORD PTR [rax+rax*1+0x0]
  413b20:	test   BYTE PTR [rdi+0x10],0x1
  413b24:	jne    413d38 <_start@@Base+0xe308>
  413b2a:	mov    ecx,0xf
  413b2f:	mov    rsi,r14
  413b32:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413b37:	jmp    413600 <_start@@Base+0xdbd0>
  413b3c:	nop    DWORD PTR [rax+0x0]
  413b40:	cmp    rax,0x7f
  413b44:	ja     413d48 <_start@@Base+0xe318>
  413b4a:	mov    edx,eax
  413b4c:	mov    BYTE PTR [rsp+0x27],al
  413b50:	jmp    4138b9 <_start@@Base+0xde89>
  413b55:	nop    DWORD PTR [rax]
  413b58:	mov    ecx,0x5
  413b5d:	mov    rdx,rbx
  413b60:	mov    rsi,r14
  413b63:	mov    rdi,rbp
  413b66:	mov    QWORD PTR [rsp+0x10],r11
  413b6b:	mov    QWORD PTR [rsp+0x8],r8
  413b70:	call   409ba0 <_start@@Base+0x4170>
  413b75:	cmp    rax,r14
  413b78:	mov    r10,rax
  413b7b:	mov    r8,QWORD PTR [rsp+0x8]
  413b80:	mov    r11,QWORD PTR [rsp+0x10]
  413b85:	je     413745 <_start@@Base+0xdd15>
  413b8b:	cmp    rbx,rax
  413b8e:	mov    BYTE PTR [rsp+0x27],0x0
  413b93:	mov    QWORD PTR [rsp+0x30],0x0
  413b9c:	mov    DWORD PTR [rsp+0x2c],0x0
  413ba4:	je     413dcb <_start@@Base+0xe39b>
  413baa:	mov    rcx,QWORD PTR [rsp]
  413bae:	mov    r8,r15
  413bb1:	mov    rdx,rbx
  413bb4:	mov    rsi,rax
  413bb7:	mov    rdi,rbp
  413bba:	mov    QWORD PTR [rsp+0x8],rax
  413bbf:	call   41c710 <flatcc_json_parser_integer@@Base>
  413bc4:	mov    r10,QWORD PTR [rsp+0x8]
  413bc9:	mov    r14,rax
  413bcc:	cmp    r10,rax
  413bcf:	je     413dc8 <_start@@Base+0xe398>
  413bd5:	mov    r11d,DWORD PTR [rsp+0x2c]
  413bda:	mov    rax,QWORD PTR [rsp+0x30]
  413bdf:	test   r11d,r11d
  413be2:	je     413c60 <_start@@Base+0xe230>
  413be4:	cmp    rax,0x80
  413bea:	mov    ecx,0x8
  413bef:	ja     413e12 <_start@@Base+0xe3e2>
  413bf5:	mov    edx,eax
  413bf7:	neg    edx
  413bf9:	mov    BYTE PTR [rsp+0x27],dl
  413bfd:	cmp    dl,0x2
  413c00:	jne    413c0c <_start@@Base+0xe1dc>
  413c02:	test   BYTE PTR [rbp+0x10],0x2
  413c06:	je     41379c <_start@@Base+0xdd6c>
  413c0c:	mov    rdi,QWORD PTR [rbp+0x0]
  413c10:	xor    esi,esi
  413c12:	mov    ecx,0x1
  413c17:	mov    edx,0x1
  413c1c:	call   418180 <flatcc_builder_table_add@@Base>
  413c21:	test   rax,rax
  413c24:	jne    4138e9 <_start@@Base+0xdeb9>
  413c2a:	jmp    4139c8 <_start@@Base+0xdf98>
  413c2f:	nop
  413c30:	mov    QWORD PTR [rsp+0x8],r10
  413c35:	mov    ecx,0x7
  413c3a:	mov    rsi,r14
  413c3d:	mov    rdx,rbx
  413c40:	mov    rdi,rbp
  413c43:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413c48:	mov    r10,QWORD PTR [rsp+0x8]
  413c4d:	mov    r14,rax
  413c50:	cmp    r10,rax
  413c53:	je     413cb3 <_start@@Base+0xe283>
  413c55:	movzx  edx,BYTE PTR [rsp+0x27]
  413c5a:	jmp    413ae3 <_start@@Base+0xe0b3>
  413c5f:	nop
  413c60:	cmp    rax,0x7f
  413c64:	ja     413e08 <_start@@Base+0xe3d8>
  413c6a:	mov    edx,eax
  413c6c:	mov    BYTE PTR [rsp+0x27],al
  413c70:	jmp    413bfd <_start@@Base+0xe1cd>
  413c72:	nop    WORD PTR [rax+rax*1+0x0]
  413c78:	mov    QWORD PTR [rsp+0x8],r10
  413c7d:	mov    ecx,0x7
  413c82:	mov    rsi,r14
  413c85:	mov    rdx,rbx
  413c88:	mov    rdi,rbp
  413c8b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413c90:	mov    r10,QWORD PTR [rsp+0x8]
  413c95:	mov    r14,rax
  413c98:	cmp    r10,rax
  413c9b:	je     413d83 <_start@@Base+0xe353>
  413ca1:	movzx  edx,BYTE PTR [rsp+0x27]
  413ca6:	jmp    413995 <_start@@Base+0xdf65>
  413cab:	nop    DWORD PTR [rax+rax*1+0x0]
  413cb0:	mov    r10,rax
  413cb3:	mov    r8,QWORD PTR [rsp+0x18]
  413cb8:	lea    rcx,[rip+0x257e1]        # 4394a0 <__data_start@@Base+0x3e0>
  413cbf:	mov    rsi,r10
  413cc2:	mov    rdx,rbx
  413cc5:	mov    rdi,rbp
  413cc8:	mov    QWORD PTR [rsp+0x8],r10
  413ccd:	call   409930 <_start@@Base+0x3f00>
  413cd2:	mov    r10,QWORD PTR [rsp+0x8]
  413cd7:	mov    r14,rax
  413cda:	cmp    rax,r10
  413cdd:	je     4139c8 <_start@@Base+0xdf98>
  413ce3:	cmp    rbx,rax
  413ce6:	jne    413c55 <_start@@Base+0xe225>
  413cec:	jmp    4139c8 <_start@@Base+0xdf98>
  413cf1:	nop    DWORD PTR [rax+0x0]
  413cf8:	mov    r10,rax
  413cfb:	mov    r8,QWORD PTR [rsp+0x18]
  413d00:	lea    rcx,[rip+0x257f9]        # 439500 <__data_start@@Base+0x440>
  413d07:	mov    rsi,r10
  413d0a:	mov    rdx,rbx
  413d0d:	mov    rdi,rbp
  413d10:	mov    QWORD PTR [rsp+0x8],r10
  413d15:	call   409190 <_start@@Base+0x3760>
  413d1a:	mov    r10,QWORD PTR [rsp+0x8]
  413d1f:	mov    r14,rax
  413d22:	cmp    rax,r10
  413d25:	je     4139c8 <_start@@Base+0xdf98>
  413d2b:	cmp    rbx,rax
  413d2e:	jne    413d6d <_start@@Base+0xe33d>
  413d30:	jmp    4139c8 <_start@@Base+0xdf98>
  413d35:	nop    DWORD PTR [rax]
  413d38:	mov    rsi,r14
  413d3b:	call   41c7d0 <flatcc_json_parser_generic_json@@Base>
  413d40:	jmp    413600 <_start@@Base+0xdbd0>
  413d45:	nop    DWORD PTR [rax]
  413d48:	mov    QWORD PTR [rsp+0x8],r10
  413d4d:	mov    ecx,0x7
  413d52:	mov    rsi,r14
  413d55:	mov    rdx,rbx
  413d58:	mov    rdi,rbp
  413d5b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413d60:	mov    r10,QWORD PTR [rsp+0x8]
  413d65:	mov    r14,rax
  413d68:	cmp    r10,rax
  413d6b:	je     413cfb <_start@@Base+0xe2cb>
  413d6d:	movzx  edx,BYTE PTR [rsp+0x27]
  413d72:	jmp    4138b9 <_start@@Base+0xde89>
  413d77:	nop    WORD PTR [rax+rax*1+0x0]
  413d80:	mov    r10,rax
  413d83:	mov    r8,QWORD PTR [rsp+0x18]
  413d88:	lea    rcx,[rip+0x25731]        # 4394c0 <__data_start@@Base+0x400>
  413d8f:	mov    rsi,r10
  413d92:	mov    rdx,rbx
  413d95:	mov    rdi,rbp
  413d98:	mov    QWORD PTR [rsp+0x8],r10
  413d9d:	call   409930 <_start@@Base+0x3f00>
  413da2:	mov    r10,QWORD PTR [rsp+0x8]
  413da7:	mov    r14,rax
  413daa:	cmp    rax,r10
  413dad:	je     4139c8 <_start@@Base+0xdf98>
  413db3:	cmp    rbx,rax
  413db6:	jne    413ca1 <_start@@Base+0xe271>
  413dbc:	jmp    4139c8 <_start@@Base+0xdf98>
  413dc1:	nop    DWORD PTR [rax+0x0]
  413dc8:	mov    r10,rax
  413dcb:	mov    r8,QWORD PTR [rsp+0x18]
  413dd0:	lea    rcx,[rip+0x25709]        # 4394e0 <__data_start@@Base+0x420>
  413dd7:	mov    rsi,r10
  413dda:	mov    rdx,rbx
  413ddd:	mov    rdi,rbp
  413de0:	mov    QWORD PTR [rsp+0x8],r10
  413de5:	call   409190 <_start@@Base+0x3760>
  413dea:	mov    r10,QWORD PTR [rsp+0x8]
  413def:	mov    r14,rax
  413df2:	cmp    rax,r10
  413df5:	je     4139c8 <_start@@Base+0xdf98>
  413dfb:	cmp    rbx,rax
  413dfe:	jne    413e2d <_start@@Base+0xe3fd>
  413e00:	jmp    4139c8 <_start@@Base+0xdf98>
  413e05:	nop    DWORD PTR [rax]
  413e08:	mov    QWORD PTR [rsp+0x8],r10
  413e0d:	mov    ecx,0x7
  413e12:	mov    rsi,r14
  413e15:	mov    rdx,rbx
  413e18:	mov    rdi,rbp
  413e1b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  413e20:	mov    r10,QWORD PTR [rsp+0x8]
  413e25:	mov    r14,rax
  413e28:	cmp    r10,rax
  413e2b:	je     413dcb <_start@@Base+0xe39b>
  413e2d:	movzx  edx,BYTE PTR [rsp+0x27]
  413e32:	jmp    413bfd <_start@@Base+0xe1cd>
  413e37:	nop    WORD PTR [rax+rax*1+0x0]
  413e40:	mov    esi,DWORD PTR [rbp+0x1c]
  413e43:	test   esi,esi
  413e45:	jne    4139c8 <_start@@Base+0xdf98>
  413e4b:	mov    rdi,QWORD PTR [rbp+0x0]
  413e4f:	call   4172a0 <flatcc_builder_end_table@@Base>
  413e54:	mov    edx,eax
  413e56:	mov    DWORD PTR [r12],eax
  413e5a:	mov    rax,r14
  413e5d:	test   edx,edx
  413e5f:	je     4139c8 <_start@@Base+0xdf98>
  413e65:	jmp    4135de <_start@@Base+0xdbae>
  413e6a:	nop    WORD PTR [rax+rax*1+0x0]
  413e70:	xor    eax,eax
  413e72:	jmp    4139f9 <_start@@Base+0xdfc9>
  413e77:	nop    WORD PTR [rax+rax*1+0x0]
  413e80:	xor    eax,eax
  413e82:	jmp    413a05 <_start@@Base+0xdfd5>
  413e87:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	xor    r8d,r8d
  413e93:	jmp    413a14 <_start@@Base+0xdfe4>
  413e98:	nop    DWORD PTR [rax+rax*1+0x0]
  413ea0:	xor    r8d,r8d
  413ea3:	jmp    413a23 <_start@@Base+0xdff3>
  413ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  413eb0:	xor    eax,eax
  413eb2:	jmp    413a32 <_start@@Base+0xe002>
  413eb7:	nop    WORD PTR [rax+rax*1+0x0]
  413ec0:	xor    eax,eax
  413ec2:	jmp    413a3e <_start@@Base+0xe00e>
  413ec7:	nop    WORD PTR [rax+rax*1+0x0]
  413ed0:	lea    rax,[r14+0x4]
  413ed4:	jmp    413600 <_start@@Base+0xdbd0>
  413ed9:	call   405070 <__stack_chk_fail@plt>
  413ede:	xchg   ax,ax

0000000000413ee0 <test_json@@Base>:
  413ee0:	push   r15
  413ee2:	push   r14
  413ee4:	mov    r15d,r8d
  413ee7:	push   r13
  413ee9:	push   r12
  413eeb:	mov    r14d,r9d
  413eee:	push   rbp
  413eef:	push   rbx
  413ef0:	mov    rbx,rdi
  413ef3:	mov    rbp,rsi
  413ef6:	mov    r12d,ecx
  413ef9:	sub    rsp,0x278
  413f00:	lea    r13,[rsp+0xc0]
  413f08:	mov    QWORD PTR [rsp+0x18],rdx
  413f0d:	mov    rax,QWORD PTR fs:0x28
  413f16:	mov    QWORD PTR [rsp+0x268],rax
  413f1e:	xor    eax,eax
  413f20:	mov    rdi,r13
  413f23:	call   415270 <flatcc_builder_init@@Base>
  413f28:	lea    rax,[rsp+0x70]
  413f2d:	xor    esi,esi
  413f2f:	mov    rdi,rax
  413f32:	mov    QWORD PTR [rsp+0x10],rax
  413f37:	call   429fb0 <flatcc_json_printer_init_dynamic_buffer@@Base>
  413f3c:	mov    eax,r14d
  413f3f:	and    eax,0x1
  413f42:	mov    BYTE PTR [rsp+0xa2],al
  413f49:	mov    eax,r14d
  413f4c:	shr    eax,1
  413f4e:	and    eax,0x1
  413f51:	mov    BYTE PTR [rsp+0xa3],al
  413f58:	mov    eax,r14d
  413f5b:	shr    eax,0x2
  413f5e:	and    eax,0x1
  413f61:	mov    BYTE PTR [rsp+0xa4],al
  413f68:	mov    eax,r14d
  413f6b:	shr    eax,0x3
  413f6e:	and    eax,0x1
  413f71:	test   r14b,0x10
  413f75:	mov    BYTE PTR [rsp+0xa5],al
  413f7c:	je     413f86 <test_json@@Base+0xa6>
  413f7e:	mov    BYTE PTR [rsp+0xa1],0x2
  413f86:	and    r14d,0x20
  413f8a:	je     413fa4 <test_json@@Base+0xc4>
  413f8c:	mov    BYTE PTR [rsp+0xa1],0x2
  413f94:	mov    BYTE PTR [rsp+0xa2],0x1
  413f9c:	mov    BYTE PTR [rsp+0xa3],0x0
  413fa4:	mov    rdi,rbp
  413fa7:	call   405060 <strlen@plt>
  413fac:	mov    r9,QWORD PTR [rbx]
  413faf:	lea    rsi,[rsp+0x30]
  413fb4:	sub    rsp,0x8
  413fb8:	push   QWORD PTR [rbx+0x8]
  413fbb:	mov    rcx,rax
  413fbe:	mov    rdx,rbp
  413fc1:	mov    r8d,r15d
  413fc4:	mov    rdi,r13
  413fc7:	call   41e610 <flatcc_json_parser_table_as_root@@Base>
  413fcc:	cmp    eax,r12d
  413fcf:	pop    rdx
  413fd0:	pop    rcx
  413fd1:	je     414128 <test_json@@Base+0x248>
  413fd7:	test   r12d,r12d
  413fda:	je     414290 <test_json@@Base+0x3b0>
  413fe0:	test   eax,eax
  413fe2:	jne    4140d0 <test_json@@Base+0x1f0>
  413fe8:	mov    edi,r12d
  413feb:	call   41b6c0 <flatcc_json_parser_error_string@@Base>
  413ff0:	mov    rbx,QWORD PTR [rip+0x24ff1]        # 438fe8 <stderr@GLIBC_2.2.5>
  413ff7:	mov    ecx,DWORD PTR [rsp+0x2b0]
  413ffe:	lea    rdx,[rip+0x177db]        # 42b7e0 <_IO_stdin_used@@Base+0x7e0>
  414005:	mov    r8,rax
  414008:	mov    rdi,QWORD PTR [rbx]
  41400b:	mov    esi,0x1
  414010:	xor    eax,eax
  414012:	call   405130 <__fprintf_chk@plt>
  414017:	mov    rdi,QWORD PTR [rbx]
  41401a:	lea    rdx,[rip+0x175d4]        # 42b5f5 <_IO_stdin_used@@Base+0x5f5>
  414021:	mov    rcx,rbp
  414024:	xor    eax,eax
  414026:	mov    esi,0x1
  41402b:	xor    ebp,ebp
  41402d:	lea    r12,[rip+0x175d5]        # 42b609 <_IO_stdin_used@@Base+0x609>
  414034:	call   405130 <__fprintf_chk@plt>
  414039:	cmp    DWORD PTR [rsp+0x48],0x1
  41403e:	jle    414060 <test_json@@Base+0x180>
  414040:	mov    rdi,QWORD PTR [rbx]
  414043:	xor    eax,eax
  414045:	mov    rdx,r12
  414048:	mov    esi,0x1
  41404d:	add    ebp,0x1
  414050:	call   405130 <__fprintf_chk@plt>
  414055:	mov    eax,DWORD PTR [rsp+0x48]
  414059:	sub    eax,0x1
  41405c:	cmp    eax,ebp
  41405e:	jg     414040 <test_json@@Base+0x160>
  414060:	mov    rdi,QWORD PTR [rbx]
  414063:	lea    rdx,[rip+0x17568]        # 42b5d2 <_IO_stdin_used@@Base+0x5d2>
  41406a:	mov    esi,0x1
  41406f:	xor    eax,eax
  414071:	mov    r14d,0xffffffff
  414077:	call   405130 <__fprintf_chk@plt>
  41407c:	mov    QWORD PTR [rsp+0x8],0x0
  414085:	mov    rdi,QWORD PTR [rsp+0x8]
  41408a:	call   418a90 <flatcc_builder_aligned_free@@Base>
  41408f:	mov    rdi,r13
  414092:	call   415440 <flatcc_builder_clear@@Base>
  414097:	mov    rdi,QWORD PTR [rsp+0x10]
  41409c:	call   42a0d0 <flatcc_json_printer_clear@@Base>
  4140a1:	mov    rcx,QWORD PTR [rsp+0x268]
  4140a9:	xor    rcx,QWORD PTR fs:0x28
  4140b2:	mov    eax,r14d
  4140b5:	jne    414412 <test_json@@Base+0x532>
  4140bb:	add    rsp,0x278
  4140c2:	pop    rbx
  4140c3:	pop    rbp
  4140c4:	pop    r12
  4140c6:	pop    r13
  4140c8:	pop    r14
  4140ca:	pop    r15
  4140cc:	ret    
  4140cd:	nop    DWORD PTR [rax]
  4140d0:	mov    edi,eax
  4140d2:	call   41b6c0 <flatcc_json_parser_error_string@@Base>
  4140d7:	mov    rbx,QWORD PTR [rip+0x24f0a]        # 438fe8 <stderr@GLIBC_2.2.5>
  4140de:	mov    ecx,DWORD PTR [rsp+0x2b0]
  4140e5:	lea    rdx,[rip+0x176ac]        # 42b798 <_IO_stdin_used@@Base+0x798>
  4140ec:	mov    r8,rax
  4140ef:	mov    esi,0x1
  4140f4:	xor    eax,eax
  4140f6:	mov    rdi,QWORD PTR [rbx]
  4140f9:	call   405130 <__fprintf_chk@plt>
  4140fe:	mov    edi,r12d
  414101:	call   41b6c0 <flatcc_json_parser_error_string@@Base>
  414106:	mov    rdi,QWORD PTR [rbx]
  414109:	lea    rdx,[rip+0x176b0]        # 42b7c0 <_IO_stdin_used@@Base+0x7c0>
  414110:	mov    rcx,rax
  414113:	mov    esi,0x1
  414118:	xor    eax,eax
  41411a:	call   405130 <__fprintf_chk@plt>
  41411f:	jmp    414017 <test_json@@Base+0x137>
  414124:	nop    DWORD PTR [rax+0x0]
  414128:	xor    r14d,r14d
  41412b:	test   r12d,r12d
  41412e:	mov    QWORD PTR [rsp+0x8],0x0
  414137:	jne    414085 <test_json@@Base+0x1a5>
  41413d:	lea    rsi,[rsp+0x20]
  414142:	mov    rdi,r13
  414145:	call   418940 <flatcc_builder_finalize_aligned_buffer@@Base>
  41414a:	mov    rcx,QWORD PTR [rbx+0x18]
  41414e:	mov    rdx,QWORD PTR [rbx]
  414151:	mov    rdi,rax
  414154:	mov    rsi,QWORD PTR [rsp+0x20]
  414159:	mov    QWORD PTR [rsp+0x8],rax
  41415e:	call   41a060 <flatcc_verify_table_as_root@@Base>
  414163:	test   eax,eax
  414165:	je     414342 <test_json@@Base+0x462>
  41416b:	mov    edi,eax
  41416d:	call   4191d0 <flatcc_verify_error_string@@Base>
  414172:	mov    rbx,QWORD PTR [rip+0x24e6f]        # 438fe8 <stderr@GLIBC_2.2.5>
  414179:	mov    r8d,DWORD PTR [rsp+0x2b0]
  414181:	lea    rcx,[rip+0x176c0]        # 42b848 <_IO_stdin_used@@Base+0x848>
  414188:	lea    rdx,[rip+0x17721]        # 42b8b0 <_IO_stdin_used@@Base+0x8b0>
  41418f:	mov    r9,rax
  414192:	mov    esi,0x1
  414197:	xor    eax,eax
  414199:	mov    rdi,QWORD PTR [rbx]
  41419c:	call   405130 <__fprintf_chk@plt>
  4141a1:	cmp    QWORD PTR [rsp+0x8],0x0
  4141a7:	je     414417 <test_json@@Base+0x537>
  4141ad:	mov    rbp,QWORD PTR [rbx]
  4141b0:	mov    rbx,QWORD PTR [rsp+0x20]
  4141b5:	lea    rcx,[rip+0x17424]        # 42b5e0 <_IO_stdin_used@@Base+0x5e0>
  4141bc:	lea    rdx,[rip+0x1742b]        # 42b5ee <_IO_stdin_used@@Base+0x5ee>
  4141c3:	xor    eax,eax
  4141c5:	mov    esi,0x1
  4141ca:	mov    rdi,rbp
  4141cd:	mov    r12d,ebx
  4141d0:	call   405130 <__fprintf_chk@plt>
  4141d5:	test   ebx,ebx
  4141d7:	je     414400 <test_json@@Base+0x520>
  4141dd:	lea    rax,[rsp+0x250]
  4141e5:	mov    r14,QWORD PTR [rsp+0x8]
  4141ea:	xor    r15d,r15d
  4141ed:	mov    QWORD PTR [rsp+0x18],rax
  4141f2:	jmp    414266 <test_json@@Base+0x386>
  4141f4:	nop    DWORD PTR [rax+0x0]
  4141f8:	test   r15d,r15d
  4141fb:	jne    4142c8 <test_json@@Base+0x3e8>
  414201:	lea    rdx,[rip+0x173f1]        # 42b5f9 <_IO_stdin_used@@Base+0x5f9>
  414208:	mov    ecx,r15d
  41420b:	mov    esi,0x1
  414210:	mov    rdi,rbp
  414213:	xor    eax,eax
  414215:	call   405130 <__fprintf_chk@plt>
  41421a:	movzx  ecx,BYTE PTR [r14]
  41421e:	lea    rdx,[rip+0x173dc]        # 42b601 <_IO_stdin_used@@Base+0x601>
  414225:	xor    eax,eax
  414227:	mov    esi,0x1
  41422c:	mov    rdi,rbp
  41422f:	call   405130 <__fprintf_chk@plt>
  414234:	movzx  eax,BYTE PTR [r14]
  414238:	lea    edx,[rax-0x20]
  41423b:	cmp    dl,0x5e
  41423e:	jbe    4142b8 <test_json@@Base+0x3d8>
  414240:	mov    eax,ebx
  414242:	mov    BYTE PTR [rsp+rax*1+0x250],0x2e
  41424a:	add    r15d,0x1
  41424e:	add    ebx,0x1
  414251:	add    r14,0x1
  414255:	cmp    r15d,r12d
  414258:	mov    BYTE PTR [rsp+rbx*1+0x250],0x0
  414260:	je     4142f0 <test_json@@Base+0x410>
  414266:	mov    ebx,r15d
  414269:	and    ebx,0xf
  41426c:	je     4141f8 <test_json@@Base+0x318>
  41426e:	test   r15b,0x7
  414272:	jne    41421a <test_json@@Base+0x33a>
  414274:	lea    rdx,[rip+0x1738e]        # 42b609 <_IO_stdin_used@@Base+0x609>
  41427b:	mov    esi,0x1
  414280:	mov    rdi,rbp
  414283:	xor    eax,eax
  414285:	call   405130 <__fprintf_chk@plt>
  41428a:	jmp    41421a <test_json@@Base+0x33a>
  41428c:	nop    DWORD PTR [rax+0x0]
  414290:	mov    edi,eax
  414292:	call   41b6c0 <flatcc_json_parser_error_string@@Base>
  414297:	mov    rbx,QWORD PTR [rip+0x24d4a]        # 438fe8 <stderr@GLIBC_2.2.5>
  41429e:	mov    r8,rax
  4142a1:	mov    ecx,DWORD PTR [rsp+0x2b0]
  4142a8:	lea    rdx,[rip+0x17571]        # 42b820 <_IO_stdin_used@@Base+0x820>
  4142af:	jmp    414008 <test_json@@Base+0x128>
  4142b4:	nop    DWORD PTR [rax+0x0]
  4142b8:	mov    edx,ebx
  4142ba:	mov    BYTE PTR [rsp+rdx*1+0x250],al
  4142c1:	jmp    41424a <test_json@@Base+0x36a>
  4142c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4142c8:	mov    rcx,QWORD PTR [rsp+0x18]
  4142cd:	lea    rdx,[rip+0x1731f]        # 42b5f3 <_IO_stdin_used@@Base+0x5f3>
  4142d4:	mov    esi,0x1
  4142d9:	mov    rdi,rbp
  4142dc:	xor    eax,eax
  4142de:	call   405130 <__fprintf_chk@plt>
  4142e3:	jmp    414201 <test_json@@Base+0x321>
  4142e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4142f0:	test   r15b,0xf
  4142f4:	je     41431c <test_json@@Base+0x43c>
  4142f6:	lea    rbx,[rip+0x1730a]        # 42b607 <_IO_stdin_used@@Base+0x607>
  4142fd:	nop    DWORD PTR [rax]
  414300:	xor    eax,eax
  414302:	mov    rdx,rbx
  414305:	mov    esi,0x1
  41430a:	mov    rdi,rbp
  41430d:	add    r15d,0x1
  414311:	call   405130 <__fprintf_chk@plt>
  414316:	test   r15b,0xf
  41431a:	jne    414300 <test_json@@Base+0x420>
  41431c:	mov    rcx,QWORD PTR [rsp+0x18]
  414321:	lea    rdx,[rip+0x172cb]        # 42b5f3 <_IO_stdin_used@@Base+0x5f3>
  414328:	mov    esi,0x1
  41432d:	mov    rdi,rbp
  414330:	xor    eax,eax
  414332:	mov    r14d,0xffffffff
  414338:	call   405130 <__fprintf_chk@plt>
  41433d:	jmp    414085 <test_json@@Base+0x1a5>
  414342:	mov    r8,QWORD PTR [rbx+0x10]
  414346:	mov    rcx,QWORD PTR [rbx]
  414349:	mov    rbx,QWORD PTR [rsp+0x10]
  41434e:	mov    rdx,QWORD PTR [rsp+0x20]
  414353:	mov    rsi,QWORD PTR [rsp+0x8]
  414358:	mov    rdi,rbx
  41435b:	call   429a90 <flatcc_json_printer_table_as_root@@Base>
  414360:	lea    rsi,[rsp+0x28]
  414365:	mov    rdi,rbx
  414368:	call   42a060 <flatcc_json_printer_get_buffer@@Base>
  41436d:	test   rax,rax
  414370:	mov    rbp,rax
  414373:	je     41438d <test_json@@Base+0x4ad>
  414375:	mov    rdi,QWORD PTR [rsp+0x18]
  41437a:	mov    rsi,rax
  41437d:	call   4050c0 <strcmp@plt>
  414382:	test   eax,eax
  414384:	mov    r14d,eax
  414387:	je     414085 <test_json@@Base+0x1a5>
  41438d:	mov    rbx,QWORD PTR [rip+0x24c54]        # 438fe8 <stderr@GLIBC_2.2.5>
  414394:	mov    ecx,DWORD PTR [rsp+0x2b0]
  41439b:	lea    rdx,[rip+0x17536]        # 42b8d8 <_IO_stdin_used@@Base+0x8d8>
  4143a2:	mov    esi,0x1
  4143a7:	xor    eax,eax
  4143a9:	mov    rdi,QWORD PTR [rbx]
  4143ac:	call   405130 <__fprintf_chk@plt>
  4143b1:	mov    rdi,QWORD PTR [rbx]
  4143b4:	lea    rdx,[rip+0x1723a]        # 42b5f5 <_IO_stdin_used@@Base+0x5f5>
  4143bb:	mov    rcx,rbp
  4143be:	mov    esi,0x1
  4143c3:	xor    eax,eax
  4143c5:	call   405130 <__fprintf_chk@plt>
  4143ca:	mov    rdi,QWORD PTR [rbx]
  4143cd:	lea    rdx,[rip+0x17201]        # 42b5d5 <_IO_stdin_used@@Base+0x5d5>
  4143d4:	mov    esi,0x1
  4143d9:	xor    eax,eax
  4143db:	call   405130 <__fprintf_chk@plt>
  4143e0:	mov    rcx,QWORD PTR [rsp+0x18]
  4143e5:	mov    rdi,QWORD PTR [rbx]
  4143e8:	lea    rdx,[rip+0x17206]        # 42b5f5 <_IO_stdin_used@@Base+0x5f5>
  4143ef:	mov    esi,0x1
  4143f4:	xor    eax,eax
  4143f6:	call   405130 <__fprintf_chk@plt>
  4143fb:	jmp    4141a1 <test_json@@Base+0x2c1>
  414400:	lea    rax,[rsp+0x250]
  414408:	mov    QWORD PTR [rsp+0x18],rax
  41440d:	jmp    41431c <test_json@@Base+0x43c>
  414412:	call   405070 <__stack_chk_fail@plt>
  414417:	or     r14d,0xffffffff
  41441b:	jmp    414085 <test_json@@Base+0x1a5>

0000000000414420 <edge_case_tests@@Base>:
  414420:	push   rbx
  414421:	lea    rdx,[rip+0x171e3]        # 42b60b <_IO_stdin_used@@Base+0x60b>
  414428:	lea    rsi,[rip+0x174e1]        # 42b910 <_IO_stdin_used@@Base+0x910>
  41442f:	lea    rdi,[rip+0x249aa]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414436:	xor    r9d,r9d
  414439:	xor    r8d,r8d
  41443c:	sub    rsp,0x8
  414440:	xor    ecx,ecx
  414442:	push   0x9e
  414447:	call   413ee0 <test_json@@Base>
  41444c:	lea    rdx,[rip+0x174f5]        # 42b948 <_IO_stdin_used@@Base+0x948>
  414453:	lea    rsi,[rip+0x17516]        # 42b970 <_IO_stdin_used@@Base+0x970>
  41445a:	lea    rdi,[rip+0x2497f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414461:	xor    r9d,r9d
  414464:	xor    ecx,ecx
  414466:	mov    r8d,0x2
  41446c:	mov    DWORD PTR [rsp],0xa8
  414473:	mov    ebx,eax
  414475:	call   413ee0 <test_json@@Base>
  41447a:	lea    rdx,[rip+0x171a8]        # 42b629 <_IO_stdin_used@@Base+0x629>
  414481:	lea    rsi,[rip+0x17510]        # 42b998 <_IO_stdin_used@@Base+0x998>
  414488:	lea    rdi,[rip+0x24951]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41448f:	xor    r8d,r8d
  414492:	xor    ecx,ecx
  414494:	mov    r9d,0x2
  41449a:	mov    DWORD PTR [rsp],0xac
  4144a1:	or     ebx,eax
  4144a3:	call   413ee0 <test_json@@Base>
  4144a8:	lea    rdx,[rip+0x17197]        # 42b646 <_IO_stdin_used@@Base+0x646>
  4144af:	lea    rsi,[rip+0x174ba]        # 42b970 <_IO_stdin_used@@Base+0x970>
  4144b6:	lea    rdi,[rip+0x24923]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4144bd:	xor    ecx,ecx
  4144bf:	mov    r9d,0x4
  4144c5:	mov    r8d,0x2
  4144cb:	mov    DWORD PTR [rsp],0xb0
  4144d2:	or     ebx,eax
  4144d4:	call   413ee0 <test_json@@Base>
  4144d9:	lea    rdx,[rip+0x174e0]        # 42b9c0 <_IO_stdin_used@@Base+0x9c0>
  4144e0:	lea    rsi,[rip+0x175f1]        # 42bad8 <_IO_stdin_used@@Base+0xad8>
  4144e7:	lea    rdi,[rip+0x248f2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4144ee:	xor    r8d,r8d
  4144f1:	xor    ecx,ecx
  4144f3:	mov    r9d,0x8
  4144f9:	mov    DWORD PTR [rsp],0xb4
  414500:	or     ebx,eax
  414502:	call   413ee0 <test_json@@Base>
  414507:	lea    rdx,[rip+0x1743a]        # 42b948 <_IO_stdin_used@@Base+0x948>
  41450e:	lea    rsi,[rip+0x175eb]        # 42bb00 <_IO_stdin_used@@Base+0xb00>
  414515:	lea    rdi,[rip+0x248c4]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41451c:	xor    r9d,r9d
  41451f:	xor    ecx,ecx
  414521:	mov    r8d,0x2
  414527:	mov    DWORD PTR [rsp],0xc3
  41452e:	or     ebx,eax
  414530:	call   413ee0 <test_json@@Base>
  414535:	lea    rdx,[rip+0x1711d]        # 42b659 <_IO_stdin_used@@Base+0x659>
  41453c:	lea    rsi,[rip+0x175e5]        # 42bb28 <_IO_stdin_used@@Base+0xb28>
  414543:	lea    rdi,[rip+0x24896]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41454a:	xor    r9d,r9d
  41454d:	xor    ecx,ecx
  41454f:	mov    r8d,0x1
  414555:	mov    DWORD PTR [rsp],0xc7
  41455c:	or     ebx,eax
  41455e:	call   413ee0 <test_json@@Base>
  414563:	lea    rdx,[rip+0x1710a]        # 42b674 <_IO_stdin_used@@Base+0x674>
  41456a:	lea    rsi,[rip+0x175b7]        # 42bb28 <_IO_stdin_used@@Base+0xb28>
  414571:	lea    rdi,[rip+0x24868]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414578:	mov    r9d,0x1
  41457e:	mov    r8d,0x1
  414584:	xor    ecx,ecx
  414586:	mov    DWORD PTR [rsp],0xcb
  41458d:	or     ebx,eax
  41458f:	call   413ee0 <test_json@@Base>
  414594:	lea    rdx,[rip+0x170be]        # 42b659 <_IO_stdin_used@@Base+0x659>
  41459b:	lea    rsi,[rip+0x175be]        # 42bb60 <_IO_stdin_used@@Base+0xb60>
  4145a2:	lea    rdi,[rip+0x24837]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4145a9:	or     ebx,eax
  4145ab:	xor    r9d,r9d
  4145ae:	mov    r8d,0x1
  4145b4:	xor    ecx,ecx
  4145b6:	mov    DWORD PTR [rsp],0xd1
  4145bd:	call   413ee0 <test_json@@Base>
  4145c2:	pop    rdx
  4145c3:	or     eax,ebx
  4145c5:	pop    rcx
  4145c6:	pop    rbx
  4145c7:	ret    
  4145c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004145d0 <error_case_tests@@Base>:
  4145d0:	push   rbx
  4145d1:	lea    rsi,[rip+0x170b3]        # 42b68b <_IO_stdin_used@@Base+0x68b>
  4145d8:	lea    rdi,[rip+0x24801]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4145df:	xor    r9d,r9d
  4145e2:	xor    r8d,r8d
  4145e5:	xor    edx,edx
  4145e7:	sub    rsp,0x8
  4145eb:	mov    ecx,0xd
  4145f0:	push   0x11d
  4145f5:	call   413ee0 <test_json@@Base>
  4145fa:	lea    rsi,[rip+0x175d7]        # 42bbd8 <_IO_stdin_used@@Base+0xbd8>
  414601:	lea    rdi,[rip+0x247d8]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414608:	xor    r9d,r9d
  41460b:	xor    r8d,r8d
  41460e:	xor    edx,edx
  414610:	mov    ecx,0xd
  414615:	mov    DWORD PTR [rsp],0x11f
  41461c:	mov    ebx,eax
  41461e:	call   413ee0 <test_json@@Base>
  414623:	lea    rsi,[rip+0x17616]        # 42bc40 <_IO_stdin_used@@Base+0xc40>
  41462a:	lea    rdi,[rip+0x247af]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414631:	xor    r9d,r9d
  414634:	xor    r8d,r8d
  414637:	xor    edx,edx
  414639:	mov    ecx,0xd
  41463e:	mov    DWORD PTR [rsp],0x121
  414645:	or     ebx,eax
  414647:	call   413ee0 <test_json@@Base>
  41464c:	lea    rsi,[rip+0x1764d]        # 42bca0 <_IO_stdin_used@@Base+0xca0>
  414653:	lea    rdi,[rip+0x24786]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41465a:	xor    r9d,r9d
  41465d:	xor    r8d,r8d
  414660:	xor    edx,edx
  414662:	mov    ecx,0xd
  414667:	mov    DWORD PTR [rsp],0x123
  41466e:	or     ebx,eax
  414670:	call   413ee0 <test_json@@Base>
  414675:	lea    rsi,[rip+0x1767c]        # 42bcf8 <_IO_stdin_used@@Base+0xcf8>
  41467c:	lea    rdi,[rip+0x2475d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414683:	xor    r9d,r9d
  414686:	xor    r8d,r8d
  414689:	xor    edx,edx
  41468b:	mov    ecx,0xd
  414690:	mov    DWORD PTR [rsp],0x125
  414697:	or     ebx,eax
  414699:	call   413ee0 <test_json@@Base>
  41469e:	lea    rsi,[rip+0x176ab]        # 42bd50 <_IO_stdin_used@@Base+0xd50>
  4146a5:	lea    rdi,[rip+0x24734]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4146ac:	xor    r9d,r9d
  4146af:	xor    r8d,r8d
  4146b2:	mov    ecx,0xd
  4146b7:	xor    edx,edx
  4146b9:	mov    DWORD PTR [rsp],0x128
  4146c0:	or     ebx,eax
  4146c2:	call   413ee0 <test_json@@Base>
  4146c7:	lea    rsi,[rip+0x17722]        # 42bdf0 <_IO_stdin_used@@Base+0xdf0>
  4146ce:	lea    rdi,[rip+0x2470b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4146d5:	or     ebx,eax
  4146d7:	xor    r9d,r9d
  4146da:	xor    r8d,r8d
  4146dd:	mov    ecx,0xd
  4146e2:	xor    edx,edx
  4146e4:	mov    DWORD PTR [rsp],0x12b
  4146eb:	call   413ee0 <test_json@@Base>
  4146f0:	lea    rsi,[rip+0x17799]        # 42be90 <_IO_stdin_used@@Base+0xe90>
  4146f7:	lea    rdi,[rip+0x246e2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4146fe:	xor    r9d,r9d
  414701:	xor    r8d,r8d
  414704:	mov    ecx,0xd
  414709:	xor    edx,edx
  41470b:	mov    DWORD PTR [rsp],0x12f
  414712:	or     ebx,eax
  414714:	call   413ee0 <test_json@@Base>
  414719:	lea    rsi,[rip+0x17838]        # 42bf58 <_IO_stdin_used@@Base+0xf58>
  414720:	lea    rdi,[rip+0x246b9]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414727:	xor    r9d,r9d
  41472a:	xor    r8d,r8d
  41472d:	mov    ecx,0xd
  414732:	xor    edx,edx
  414734:	mov    DWORD PTR [rsp],0x133
  41473b:	or     ebx,eax
  41473d:	call   413ee0 <test_json@@Base>
  414742:	lea    rsi,[rip+0x16f5c]        # 42b6a5 <_IO_stdin_used@@Base+0x6a5>
  414749:	lea    rdi,[rip+0x24690]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414750:	xor    r9d,r9d
  414753:	xor    r8d,r8d
  414756:	mov    ecx,0x5
  41475b:	xor    edx,edx
  41475d:	mov    DWORD PTR [rsp],0x137
  414764:	or     ebx,eax
  414766:	call   413ee0 <test_json@@Base>
  41476b:	lea    rsi,[rip+0x178ae]        # 42c020 <_IO_stdin_used@@Base+0x1020>
  414772:	lea    rdi,[rip+0x24667]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414779:	xor    r9d,r9d
  41477c:	xor    r8d,r8d
  41477f:	mov    ecx,0x5
  414784:	xor    edx,edx
  414786:	mov    DWORD PTR [rsp],0x13a
  41478d:	or     ebx,eax
  41478f:	call   413ee0 <test_json@@Base>
  414794:	lea    rsi,[rip+0x178ad]        # 42c048 <_IO_stdin_used@@Base+0x1048>
  41479b:	lea    rdi,[rip+0x2463e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4147a2:	or     ebx,eax
  4147a4:	mov    ecx,0x5
  4147a9:	xor    edx,edx
  4147ab:	xor    r9d,r9d
  4147ae:	xor    r8d,r8d
  4147b1:	mov    DWORD PTR [rsp],0x13d
  4147b8:	call   413ee0 <test_json@@Base>
  4147bd:	pop    rdx
  4147be:	or     eax,ebx
  4147c0:	pop    rcx
  4147c1:	pop    rbx
  4147c2:	ret    
  4147c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4147ce:	xchg   ax,ax

00000000004147d0 <base64_tests@@Base>:
  4147d0:	push   rbx
  4147d1:	lea    rdx,[rip+0x16e6e]        # 42b646 <_IO_stdin_used@@Base+0x646>
  4147d8:	lea    rsi,[rip+0x16ede]        # 42b6bd <_IO_stdin_used@@Base+0x6bd>
  4147df:	lea    rdi,[rip+0x245fa]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4147e6:	xor    r9d,r9d
  4147e9:	xor    r8d,r8d
  4147ec:	sub    rsp,0x8
  4147f0:	xor    ecx,ecx
  4147f2:	push   0x171
  4147f7:	call   413ee0 <test_json@@Base>
  4147fc:	lea    rdx,[rip+0x1787d]        # 42c080 <_IO_stdin_used@@Base+0x1080>
  414803:	lea    rsi,[rip+0x1789e]        # 42c0a8 <_IO_stdin_used@@Base+0x10a8>
  41480a:	lea    rdi,[rip+0x245cf]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414811:	xor    r9d,r9d
  414814:	xor    r8d,r8d
  414817:	xor    ecx,ecx
  414819:	mov    DWORD PTR [rsp],0x174
  414820:	mov    ebx,eax
  414822:	call   413ee0 <test_json@@Base>
  414827:	lea    rdx,[rip+0x178a2]        # 42c0d0 <_IO_stdin_used@@Base+0x10d0>
  41482e:	lea    rsi,[rip+0x17953]        # 42c188 <_IO_stdin_used@@Base+0x1188>
  414835:	lea    rdi,[rip+0x245a4]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41483c:	xor    r9d,r9d
  41483f:	xor    r8d,r8d
  414842:	xor    ecx,ecx
  414844:	mov    DWORD PTR [rsp],0x178
  41484b:	or     ebx,eax
  41484d:	call   413ee0 <test_json@@Base>
  414852:	lea    rdx,[rip+0x179ef]        # 42c248 <_IO_stdin_used@@Base+0x1248>
  414859:	lea    rsi,[rip+0x17aa0]        # 42c300 <_IO_stdin_used@@Base+0x1300>
  414860:	lea    rdi,[rip+0x24579]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414867:	xor    r9d,r9d
  41486a:	xor    r8d,r8d
  41486d:	xor    ecx,ecx
  41486f:	mov    DWORD PTR [rsp],0x17b
  414876:	or     ebx,eax
  414878:	call   413ee0 <test_json@@Base>
  41487d:	lea    rdx,[rip+0x1784c]        # 42c0d0 <_IO_stdin_used@@Base+0x10d0>
  414884:	lea    rsi,[rip+0x17b35]        # 42c3c0 <_IO_stdin_used@@Base+0x13c0>
  41488b:	lea    rdi,[rip+0x2454e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  414892:	xor    r9d,r9d
  414895:	xor    r8d,r8d
  414898:	xor    ecx,ecx
  41489a:	mov    DWORD PTR [rsp],0x17e
  4148a1:	or     ebx,eax
  4148a3:	call   413ee0 <test_json@@Base>
  4148a8:	lea    rdx,[rip+0x17999]        # 42c248 <_IO_stdin_used@@Base+0x1248>
  4148af:	lea    rsi,[rip+0x17bc2]        # 42c478 <_IO_stdin_used@@Base+0x1478>
  4148b6:	lea    rdi,[rip+0x24523]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4148bd:	xor    r9d,r9d
  4148c0:	xor    r8d,r8d
  4148c3:	xor    ecx,ecx
  4148c5:	mov    DWORD PTR [rsp],0x181
  4148cc:	or     ebx,eax
  4148ce:	call   413ee0 <test_json@@Base>
  4148d3:	lea    rsi,[rip+0x17c5e]        # 42c538 <_IO_stdin_used@@Base+0x1538>
  4148da:	lea    rdi,[rip+0x244ff]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  4148e1:	or     ebx,eax
  4148e3:	xor    r9d,r9d
  4148e6:	xor    r8d,r8d
  4148e9:	mov    ecx,0x1f
  4148ee:	xor    edx,edx
  4148f0:	mov    DWORD PTR [rsp],0x184
  4148f7:	call   413ee0 <test_json@@Base>
  4148fc:	lea    rsi,[rip+0x17cf5]        # 42c5f8 <_IO_stdin_used@@Base+0x15f8>
  414903:	lea    rdi,[rip+0x244d6]        # 438de0 <flatcc_builder_padding_base@@Base+0x9fc0>
  41490a:	or     ebx,eax
  41490c:	mov    ecx,0x20
  414911:	xor    edx,edx
  414913:	xor    r9d,r9d
  414916:	xor    r8d,r8d
  414919:	mov    DWORD PTR [rsp],0x187
  414920:	call   413ee0 <test_json@@Base>
  414925:	pop    rdx
  414926:	or     eax,ebx
  414928:	pop    rcx
  414929:	pop    rbx
  41492a:	ret    
  41492b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414930 <mixed_type_union_tests@@Base>:
  414930:	push   rbx
  414931:	lea    rdx,[rip+0x17d80]        # 42c6b8 <_IO_stdin_used@@Base+0x16b8>
  414938:	lea    rsi,[rip+0x17dc1]        # 42c700 <_IO_stdin_used@@Base+0x1700>
  41493f:	lea    rdi,[rip+0x2445a]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  414946:	xor    r9d,r9d
  414949:	xor    r8d,r8d
  41494c:	sub    rsp,0x8
  414950:	xor    ecx,ecx
  414952:	push   0x1b0
  414957:	call   413ee0 <test_json@@Base>
  41495c:	lea    rdx,[rip+0x17ded]        # 42c750 <_IO_stdin_used@@Base+0x1750>
  414963:	lea    rsi,[rip+0x17e5e]        # 42c7c8 <_IO_stdin_used@@Base+0x17c8>
  41496a:	lea    rdi,[rip+0x2442f]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  414971:	xor    r9d,r9d
  414974:	xor    r8d,r8d
  414977:	xor    ecx,ecx
  414979:	mov    DWORD PTR [rsp],0x1b5
  414980:	mov    ebx,eax
  414982:	call   413ee0 <test_json@@Base>
  414987:	lea    rdx,[rip+0x17dc2]        # 42c750 <_IO_stdin_used@@Base+0x1750>
  41498e:	lea    rsi,[rip+0x17ebb]        # 42c850 <_IO_stdin_used@@Base+0x1850>
  414995:	lea    rdi,[rip+0x24404]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  41499c:	xor    r9d,r9d
  41499f:	xor    r8d,r8d
  4149a2:	xor    ecx,ecx
  4149a4:	mov    DWORD PTR [rsp],0x1ba
  4149ab:	or     ebx,eax
  4149ad:	call   413ee0 <test_json@@Base>
  4149b2:	lea    rdx,[rip+0x17f2f]        # 42c8e8 <_IO_stdin_used@@Base+0x18e8>
  4149b9:	lea    rsi,[rip+0x17fe8]        # 42c9a8 <_IO_stdin_used@@Base+0x19a8>
  4149c0:	lea    rdi,[rip+0x243d9]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  4149c7:	xor    r9d,r9d
  4149ca:	xor    r8d,r8d
  4149cd:	xor    ecx,ecx
  4149cf:	mov    DWORD PTR [rsp],0x1c1
  4149d6:	or     ebx,eax
  4149d8:	call   413ee0 <test_json@@Base>
  4149dd:	lea    rdx,[rip+0x180a4]        # 42ca88 <_IO_stdin_used@@Base+0x1a88>
  4149e4:	lea    rsi,[rip+0x1817d]        # 42cb68 <_IO_stdin_used@@Base+0x1b68>
  4149eb:	lea    rdi,[rip+0x243ae]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  4149f2:	xor    r9d,r9d
  4149f5:	xor    r8d,r8d
  4149f8:	xor    ecx,ecx
  4149fa:	mov    DWORD PTR [rsp],0x1ca
  414a01:	or     ebx,eax
  414a03:	call   413ee0 <test_json@@Base>
  414a08:	lea    rdx,[rip+0x18261]        # 42cc70 <_IO_stdin_used@@Base+0x1c70>
  414a0f:	lea    rsi,[rip+0x183a2]        # 42cdb8 <_IO_stdin_used@@Base+0x1db8>
  414a16:	lea    rdi,[rip+0x24383]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  414a1d:	xor    r9d,r9d
  414a20:	xor    r8d,r8d
  414a23:	xor    ecx,ecx
  414a25:	mov    DWORD PTR [rsp],0x1d5
  414a2c:	or     ebx,eax
  414a2e:	call   413ee0 <test_json@@Base>
  414a33:	lea    rdx,[rip+0x17d16]        # 42c750 <_IO_stdin_used@@Base+0x1750>
  414a3a:	lea    rsi,[rip+0x184ff]        # 42cf40 <_IO_stdin_used@@Base+0x1f40>
  414a41:	lea    rdi,[rip+0x24358]        # 438da0 <flatcc_builder_padding_base@@Base+0x9f80>
  414a48:	or     ebx,eax
  414a4a:	xor    r9d,r9d
  414a4d:	xor    r8d,r8d
  414a50:	xor    ecx,ecx
  414a52:	mov    DWORD PTR [rsp],0x1da
  414a59:	call   413ee0 <test_json@@Base>
  414a5e:	pop    rdx
  414a5f:	or     eax,ebx
  414a61:	pop    rcx
  414a62:	pop    rbx
  414a63:	ret    
  414a64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414a6f:	nop

0000000000414a70 <union_vector_tests@@Base>:
  414a70:	push   rbx
  414a71:	lea    rdx,[rip+0x18558]        # 42cfd0 <_IO_stdin_used@@Base+0x1fd0>
  414a78:	lea    rsi,[rip+0x18589]        # 42d008 <_IO_stdin_used@@Base+0x2008>
  414a7f:	lea    rdi,[rip+0x2433a]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414a86:	xor    r9d,r9d
  414a89:	xor    r8d,r8d
  414a8c:	sub    rsp,0x8
  414a90:	xor    ecx,ecx
  414a92:	push   0x1e5
  414a97:	call   413ee0 <test_json@@Base>
  414a9c:	lea    rdx,[rip+0x185a5]        # 42d048 <_IO_stdin_used@@Base+0x2048>
  414aa3:	lea    rsi,[rip+0x185ce]        # 42d078 <_IO_stdin_used@@Base+0x2078>
  414aaa:	lea    rdi,[rip+0x2430f]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414ab1:	xor    r9d,r9d
  414ab4:	xor    r8d,r8d
  414ab7:	xor    ecx,ecx
  414ab9:	mov    DWORD PTR [rsp],0x1e8
  414ac0:	mov    ebx,eax
  414ac2:	call   413ee0 <test_json@@Base>
  414ac7:	lea    rdx,[rip+0x185e2]        # 42d0b0 <_IO_stdin_used@@Base+0x20b0>
  414ace:	lea    rsi,[rip+0x18623]        # 42d0f8 <_IO_stdin_used@@Base+0x20f8>
  414ad5:	lea    rdi,[rip+0x242e4]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414adc:	xor    r9d,r9d
  414adf:	xor    r8d,r8d
  414ae2:	xor    ecx,ecx
  414ae4:	mov    DWORD PTR [rsp],0x1eb
  414aeb:	or     ebx,eax
  414aed:	call   413ee0 <test_json@@Base>
  414af2:	lea    rdx,[rip+0x1864f]        # 42d148 <_IO_stdin_used@@Base+0x2148>
  414af9:	lea    rsi,[rip+0x186b8]        # 42d1b8 <_IO_stdin_used@@Base+0x21b8>
  414b00:	lea    rdi,[rip+0x242b9]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414b07:	xor    r9d,r9d
  414b0a:	xor    r8d,r8d
  414b0d:	xor    ecx,ecx
  414b0f:	mov    DWORD PTR [rsp],0x1ee
  414b16:	or     ebx,eax
  414b18:	call   413ee0 <test_json@@Base>
  414b1d:	lea    rdx,[rip+0x184ac]        # 42cfd0 <_IO_stdin_used@@Base+0x1fd0>
  414b24:	lea    rsi,[rip+0x1870d]        # 42d238 <_IO_stdin_used@@Base+0x2238>
  414b2b:	lea    rdi,[rip+0x2428e]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414b32:	xor    r9d,r9d
  414b35:	xor    r8d,r8d
  414b38:	xor    ecx,ecx
  414b3a:	mov    DWORD PTR [rsp],0x1f1
  414b41:	or     ebx,eax
  414b43:	call   413ee0 <test_json@@Base>
  414b48:	lea    rdx,[rip+0x18729]        # 42d278 <_IO_stdin_used@@Base+0x2278>
  414b4f:	lea    rsi,[rip+0x18782]        # 42d2d8 <_IO_stdin_used@@Base+0x22d8>
  414b56:	lea    rdi,[rip+0x24263]        # 438dc0 <flatcc_builder_padding_base@@Base+0x9fa0>
  414b5d:	or     ebx,eax
  414b5f:	xor    ecx,ecx
  414b61:	xor    r9d,r9d
  414b64:	xor    r8d,r8d
  414b67:	mov    DWORD PTR [rsp],0x1f4
  414b6e:	call   413ee0 <test_json@@Base>
  414b73:	pop    rdx
  414b74:	or     eax,ebx
  414b76:	pop    rcx
  414b77:	pop    rbx
  414b78:	ret    
  414b79:	nop    DWORD PTR [rax+0x0]
  414b80:	push   rbp
  414b81:	push   rbx
  414b82:	mov    ebp,edx
  414b84:	mov    rbx,rdi
  414b87:	mov    r8d,0x1
  414b8d:	mov    ecx,0x1
  414b92:	sub    rsp,0x8
  414b96:	mov    edx,DWORD PTR [rdi+0x28]
  414b99:	add    rdx,rsi
  414b9c:	lea    rsi,[rdi+0x68]
  414ba0:	mov    rdi,QWORD PTR [rdi+0x40]
  414ba4:	call   QWORD PTR [rbx+0x50]
  414ba7:	test   eax,eax
  414ba9:	jne    414bd8 <union_vector_tests@@Base+0x168>
  414bab:	mov    edx,DWORD PTR [rbx+0x28]
  414bae:	mov    rcx,rdx
  414bb1:	add    rdx,QWORD PTR [rbx+0x68]
  414bb5:	mov    QWORD PTR [rbx+0x18],rdx
  414bb9:	mov    edx,DWORD PTR [rbx+0x70]
  414bbc:	sub    edx,ecx
  414bbe:	cmp    ebp,edx
  414bc0:	cmovb  edx,ebp
  414bc3:	mov    DWORD PTR [rbx+0x24],edx
  414bc6:	mov    rdx,QWORD PTR [rbx+0x30]
  414bca:	mov    DWORD PTR [rdx+0x4],ebp
  414bcd:	add    rsp,0x8
  414bd1:	pop    rbx
  414bd2:	pop    rbp
  414bd3:	ret    
  414bd4:	nop    DWORD PTR [rax+0x0]
  414bd8:	mov    eax,0xffffffff
  414bdd:	jmp    414bcd <union_vector_tests@@Base+0x15d>
  414bdf:	nop

0000000000414be0 <flatcc_builder_default_alloc@@Base>:
  414be0:	push   r12
  414be2:	push   rbp
  414be3:	mov    rbp,rsi
  414be6:	push   rbx
  414be7:	sub    rsp,0x10
  414beb:	test   rdx,rdx
  414bee:	jne    414c20 <flatcc_builder_default_alloc@@Base+0x40>
  414bf0:	mov    rdi,QWORD PTR [rsi]
  414bf3:	xor    eax,eax
  414bf5:	test   rdi,rdi
  414bf8:	je     414c17 <flatcc_builder_default_alloc@@Base+0x37>
  414bfa:	mov    DWORD PTR [rsp+0xc],eax
  414bfe:	call   405030 <free@plt>
  414c03:	mov    eax,DWORD PTR [rsp+0xc]
  414c07:	mov    QWORD PTR [rbp+0x0],0x0
  414c0f:	mov    QWORD PTR [rbp+0x8],0x0
  414c17:	add    rsp,0x10
  414c1b:	pop    rbx
  414c1c:	pop    rbp
  414c1d:	pop    r12
  414c1f:	ret    
  414c20:	cmp    r8d,0x4
  414c24:	je     414cc0 <flatcc_builder_default_alloc@@Base+0xe0>
  414c2a:	jle    414cd0 <flatcc_builder_default_alloc@@Base+0xf0>
  414c30:	cmp    r8d,0x5
  414c34:	mov    rbx,rdx
  414c37:	je     414c58 <flatcc_builder_default_alloc@@Base+0x78>
  414c39:	cmp    r8d,0x7
  414c3d:	mov    ebx,0x40
  414c42:	je     414c53 <flatcc_builder_default_alloc@@Base+0x73>
  414c44:	jmp    414cdf <flatcc_builder_default_alloc@@Base+0xff>
  414c49:	nop    DWORD PTR [rax+0x0]
  414c50:	add    rbx,rbx
  414c53:	cmp    rdx,rbx
  414c56:	ja     414c50 <flatcc_builder_default_alloc@@Base+0x70>
  414c58:	mov    rax,QWORD PTR [rbp+0x8]
  414c5c:	cmp    rdx,rax
  414c5f:	ja     414c6e <flatcc_builder_default_alloc@@Base+0x8e>
  414c61:	shr    rax,1
  414c64:	mov    rdx,rax
  414c67:	xor    eax,eax
  414c69:	cmp    rdx,rbx
  414c6c:	jae    414c17 <flatcc_builder_default_alloc@@Base+0x37>
  414c6e:	mov    rdi,QWORD PTR [rbp+0x0]
  414c72:	mov    rsi,rbx
  414c75:	mov    DWORD PTR [rsp+0xc],ecx
  414c79:	call   405100 <realloc@plt>
  414c7e:	test   rax,rax
  414c81:	mov    r12,rax
  414c84:	je     414ce9 <flatcc_builder_default_alloc@@Base+0x109>
  414c86:	mov    ecx,DWORD PTR [rsp+0xc]
  414c8a:	test   ecx,ecx
  414c8c:	je     414ca8 <flatcc_builder_default_alloc@@Base+0xc8>
  414c8e:	mov    rax,QWORD PTR [rbp+0x8]
  414c92:	cmp    rax,rbx
  414c95:	jae    414ca8 <flatcc_builder_default_alloc@@Base+0xc8>
  414c97:	mov    rdx,rbx
  414c9a:	lea    rdi,[r12+rax*1]
  414c9e:	xor    esi,esi
  414ca0:	sub    rdx,rax
  414ca3:	call   405090 <memset@plt>
  414ca8:	mov    QWORD PTR [rbp+0x0],r12
  414cac:	mov    QWORD PTR [rbp+0x8],rbx
  414cb0:	add    rsp,0x10
  414cb4:	pop    rbx
  414cb5:	xor    eax,eax
  414cb7:	pop    rbp
  414cb8:	pop    r12
  414cba:	ret    
  414cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414cc0:	mov    ebx,0x120
  414cc5:	jmp    414c53 <flatcc_builder_default_alloc@@Base+0x73>
  414cc7:	nop    WORD PTR [rax+rax*1+0x0]
  414cd0:	cmp    r8d,0x1
  414cd4:	mov    ebx,0x100
  414cd9:	je     414c53 <flatcc_builder_default_alloc@@Base+0x73>
  414cdf:	mov    ebx,0x20
  414ce4:	jmp    414c53 <flatcc_builder_default_alloc@@Base+0x73>
  414ce9:	mov    eax,0xffffffff
  414cee:	jmp    414c17 <flatcc_builder_default_alloc@@Base+0x37>
  414cf3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414cfe:	xchg   ax,ax
  414d00:	push   rbx
  414d01:	mov    r9,rdi
  414d04:	sub    rsp,0xa0
  414d0b:	mov    rbx,QWORD PTR fs:0x28
  414d14:	mov    QWORD PTR [rsp+0x98],rbx
  414d1c:	xor    ebx,ebx
  414d1e:	test   dx,dx
  414d21:	je     414d80 <flatcc_builder_default_alloc@@Base+0x1a0>
  414d23:	mov    eax,edx
  414d25:	movzx  edx,dx
  414d28:	movzx  edi,WORD PTR [rsi]
  414d2b:	cmp    di,0x3
  414d2f:	ja     414d3e <flatcc_builder_default_alloc@@Base+0x15e>
  414d31:	mov    edi,0x4
  414d36:	mov    WORD PTR [rsi],di
  414d39:	mov    edi,0x4
  414d3e:	cmp    ax,di
  414d41:	jbe    414d46 <flatcc_builder_default_alloc@@Base+0x166>
  414d43:	mov    WORD PTR [rsi],ax
  414d46:	test   ecx,ecx
  414d48:	jne    414d58 <flatcc_builder_default_alloc@@Base+0x178>
  414d4a:	mov    ebx,DWORD PTR [r9+0xf4]
  414d51:	sub    edx,0x1
  414d54:	and    edx,ebx
  414d56:	jne    414da0 <flatcc_builder_default_alloc@@Base+0x1c0>
  414d58:	xor    eax,eax
  414d5a:	mov    rbx,QWORD PTR [rsp+0x98]
  414d62:	xor    rbx,QWORD PTR fs:0x28
  414d6b:	jne    414e0d <flatcc_builder_default_alloc@@Base+0x22d>
  414d71:	add    rsp,0xa0
  414d78:	pop    rbx
  414d79:	ret    
  414d7a:	nop    WORD PTR [rax+rax*1+0x0]
  414d80:	movzx  eax,WORD PTR [rdi+0xec]
  414d87:	test   ax,ax
  414d8a:	movzx  edx,ax
  414d8d:	jne    414d28 <flatcc_builder_default_alloc@@Base+0x148>
  414d8f:	mov    edx,0x1
  414d94:	mov    eax,0x1
  414d99:	jmp    414d28 <flatcc_builder_default_alloc@@Base+0x148>
  414d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  414da0:	mov    rax,0x42ee20
  414da7:	movsxd r8,edx
  414daa:	add    edx,ebx
  414dac:	cmp    ebx,edx
  414dae:	mov    QWORD PTR [rsp],r8
  414db2:	mov    QWORD PTR [rsp+0x18],r8
  414db7:	mov    DWORD PTR [rsp+0x8],0x1
  414dbf:	mov    DWORD PTR [r9+0xf4],edx
  414dc6:	mov    QWORD PTR [rsp+0x10],rax
  414dcb:	jg     414e12 <flatcc_builder_default_alloc@@Base+0x232>
  414dcd:	lea    rsi,[rsp+0x10]
  414dd2:	mov    rdi,QWORD PTR [r9+0x38]
  414dd6:	mov    ecx,ebx
  414dd8:	mov    edx,0x1
  414ddd:	call   QWORD PTR [r9+0x48]
  414de1:	test   eax,eax
  414de3:	jne    414e17 <flatcc_builder_default_alloc@@Base+0x237>
  414de5:	cmp    ebx,0xffffffff
  414de8:	jne    414d58 <flatcc_builder_default_alloc@@Base+0x178>
  414dee:	lea    rcx,[rip+0x19f9b]        # 42ed90 <_IO_stdin_used@@Base+0x3d90>
  414df5:	lea    rsi,[rip+0x19534]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  414dfc:	lea    rdi,[rip+0x198c4]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  414e03:	mov    edx,0x2be
  414e08:	call   405080 <__assert_fail@plt>
  414e0d:	call   405070 <__stack_chk_fail@plt>
  414e12:	call   4052f6 <__sprintf_chk@plt+0x1a6>
  414e17:	lea    rcx,[rip+0x19f62]        # 42ed80 <_IO_stdin_used@@Base+0x3d80>
  414e1e:	lea    rsi,[rip+0x1950b]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  414e25:	lea    rdi,[rip+0x1989b]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  414e2c:	mov    edx,0x2a5
  414e31:	call   405080 <__assert_fail@plt>
  414e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e40:	push   r12
  414e42:	push   rbp
  414e43:	mov    r12d,esi
  414e46:	push   rbx
  414e47:	movsxd rax,DWORD PTR [rdi+0x104]
  414e4e:	mov    rbx,rdi
  414e51:	lea    edx,[rax+0x1]
  414e54:	cmp    edx,DWORD PTR [rdi+0x108]
  414e5a:	mov    DWORD PTR [rdi+0x104],edx
  414e60:	jle    414ee0 <flatcc_builder_default_alloc@@Base+0x300>
  414e62:	mov    ecx,DWORD PTR [rdi+0x120]
  414e68:	test   ecx,ecx
  414e6a:	jle    414e74 <flatcc_builder_default_alloc@@Base+0x294>
  414e6c:	cmp    edx,ecx
  414e6e:	jg     414f60 <flatcc_builder_default_alloc@@Base+0x380>
  414e74:	lea    rcx,[rax+rax*8]
  414e78:	lea    rbp,[rcx*4+0x0]
  414e80:	lea    rdx,[rbp+0x24]
  414e84:	cmp    rdx,QWORD PTR [rbx+0xa0]
  414e8b:	ja     414f38 <flatcc_builder_default_alloc@@Base+0x358>
  414e91:	mov    rcx,rbp
  414e94:	add    rcx,QWORD PTR [rbx+0x98]
  414e9b:	test   rcx,rcx
  414e9e:	mov    QWORD PTR [rbx+0x30],rcx
  414ea2:	je     414f60 <flatcc_builder_default_alloc@@Base+0x380>
  414ea8:	movabs rdx,0xe38e38e38e38e38f
  414eb2:	mov    rax,rdx
  414eb5:	mul    QWORD PTR [rbx+0xa0]
  414ebc:	mov    eax,DWORD PTR [rbx+0x120]
  414ec2:	shr    rdx,0x5
  414ec6:	test   eax,eax
  414ec8:	mov    DWORD PTR [rbx+0x108],edx
  414ece:	jle    414f30 <flatcc_builder_default_alloc@@Base+0x350>
  414ed0:	cmp    eax,edx
  414ed2:	jge    414f30 <flatcc_builder_default_alloc@@Base+0x350>
  414ed4:	mov    DWORD PTR [rbx+0x108],eax
  414eda:	mov    rax,rcx
  414edd:	jmp    414eec <flatcc_builder_default_alloc@@Base+0x30c>
  414edf:	nop
  414ee0:	mov    rax,QWORD PTR [rdi+0x30]
  414ee4:	add    rax,0x24
  414ee8:	mov    QWORD PTR [rdi+0x30],rax
  414eec:	movzx  edx,WORD PTR [rbx+0xea]
  414ef3:	mov    ecx,DWORD PTR [rbx+0x20]
  414ef6:	mov    DWORD PTR [rax+0x8],ecx
  414ef9:	mov    WORD PTR [rax+0xc],dx
  414efd:	mov    edx,DWORD PTR [rbx+0x28]
  414f00:	mov    WORD PTR [rbx+0xea],r12w
  414f08:	mov    DWORD PTR [rax+0x4],0xfffffffc
  414f0f:	mov    DWORD PTR [rax],edx
  414f11:	lea    eax,[rcx+rdx*1+0x7]
  414f15:	mov    DWORD PTR [rbx+0x20],0x0
  414f1c:	and    eax,0xfffffff8
  414f1f:	mov    DWORD PTR [rbx+0x28],eax
  414f22:	xor    eax,eax
  414f24:	pop    rbx
  414f25:	pop    rbp
  414f26:	pop    r12
  414f28:	ret    
  414f29:	nop    DWORD PTR [rax+0x0]
  414f30:	mov    rax,rcx
  414f33:	jmp    414eec <flatcc_builder_default_alloc@@Base+0x30c>
  414f35:	nop    DWORD PTR [rax]
  414f38:	xor    ecx,ecx
  414f3a:	lea    rsi,[rbx+0x98]
  414f41:	mov    rdi,QWORD PTR [rbx+0x40]
  414f45:	mov    r8d,0x4
  414f4b:	call   QWORD PTR [rbx+0x50]
  414f4e:	test   eax,eax
  414f50:	je     414e91 <flatcc_builder_default_alloc@@Base+0x2b1>
  414f56:	call   4052d3 <__sprintf_chk@plt+0x183>
  414f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  414f60:	mov    eax,0xffffffff
  414f65:	jmp    414f24 <flatcc_builder_default_alloc@@Base+0x344>
  414f67:	nop    WORD PTR [rax+rax*1+0x0]
  414f70:	push   rbp
  414f71:	push   rbx
  414f72:	sub    rsp,0xb8
  414f79:	mov    rax,QWORD PTR fs:0x28
  414f82:	mov    QWORD PTR [rsp+0xa8],rax
  414f8a:	xor    eax,eax
  414f8c:	cmp    edx,0x3fffffff
  414f92:	ja     415128 <flatcc_builder_default_alloc@@Base+0x548>
  414f98:	cmp    WORD PTR [rdi+0xe8],0x3
  414fa0:	mov    rbx,rdi
  414fa3:	mov    r10d,edx
  414fa6:	ja     414fb4 <flatcc_builder_default_alloc@@Base+0x3d4>
  414fa8:	mov    eax,0x4
  414fad:	mov    WORD PTR [rdi+0xe8],ax
  414fb4:	mov    eax,DWORD PTR [rbx+0xf0]
  414fba:	lea    r9d,[rdx*4+0x0]
  414fc2:	lea    r8,[rsp+0xc]
  414fc7:	mov    DWORD PTR [rsp+0xc],edx
  414fcb:	mov    QWORD PTR [rsp+0x10],0x4
  414fd4:	mov    QWORD PTR [rsp+0x20],r8
  414fd9:	mov    QWORD PTR [rsp+0x28],0x4
  414fe2:	mov    r8d,0x4
  414fe8:	mov    edi,eax
  414fea:	mov    DWORD PTR [rsp+0x18],0x1
  414ff2:	and    edi,0x3
  414ff5:	test   r9d,r9d
  414ff8:	je     415015 <flatcc_builder_default_alloc@@Base+0x435>
  414ffa:	lea    r8,[r9+0x4]
  414ffe:	mov    QWORD PTR [rsp+0x30],rsi
  415003:	mov    QWORD PTR [rsp+0x38],r9
  415008:	mov    DWORD PTR [rsp+0x18],0x2
  415010:	mov    QWORD PTR [rsp+0x10],r8
  415015:	test   edi,edi
  415017:	jne    4150f0 <flatcc_builder_default_alloc@@Base+0x510>
  41501d:	mov    r11d,eax
  415020:	sub    r11d,r8d
  415023:	test   edx,edx
  415025:	je     415096 <flatcc_builder_default_alloc@@Base+0x4b6>
  415027:	mov    edx,0xfffffffc
  41502c:	xor    eax,eax
  41502e:	jmp    415057 <flatcc_builder_default_alloc@@Base+0x477>
  415030:	mov    r9d,edx
  415033:	sub    r9d,r11d
  415036:	add    edi,r9d
  415039:	test   rcx,rcx
  41503c:	mov    DWORD PTR [rsi+rax*4],edi
  41503f:	je     41504b <flatcc_builder_default_alloc@@Base+0x46b>
  415041:	cmp    BYTE PTR [rcx+rax*1],0x0
  415045:	je     41514b <flatcc_builder_default_alloc@@Base+0x56b>
  41504b:	add    rax,0x1
  41504f:	sub    edx,0x4
  415052:	cmp    r10d,eax
  415055:	jbe    415090 <flatcc_builder_default_alloc@@Base+0x4b0>
  415057:	mov    edi,DWORD PTR [rsi+rax*4]
  41505a:	test   edi,edi
  41505c:	jne    415030 <flatcc_builder_default_alloc@@Base+0x450>
  41505e:	test   rcx,rcx
  415061:	je     41512c <flatcc_builder_default_alloc@@Base+0x54c>
  415067:	cmp    BYTE PTR [rcx+rax*1],0x0
  41506b:	je     41504b <flatcc_builder_default_alloc@@Base+0x46b>
  41506d:	lea    rcx,[rip+0x1997c]        # 42e9f0 <_IO_stdin_used@@Base+0x39f0>
  415074:	lea    rsi,[rip+0x192b5]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41507b:	lea    rdi,[rip+0x19647]        # 42e6c9 <_IO_stdin_used@@Base+0x36c9>
  415082:	mov    edx,0x5b5
  415087:	call   405080 <__assert_fail@plt>
  41508c:	nop    DWORD PTR [rax+0x0]
  415090:	mov    eax,DWORD PTR [rbx+0xf0]
  415096:	mov    ebp,eax
  415098:	sub    ebp,r8d
  41509b:	cmp    ebp,eax
  41509d:	jge    41516a <flatcc_builder_default_alloc@@Base+0x58a>
  4150a3:	lea    rsi,[rsp+0x20]
  4150a8:	mov    rdi,QWORD PTR [rbx+0x38]
  4150ac:	mov    ecx,ebp
  4150ae:	mov    edx,DWORD PTR [rsp+0x18]
  4150b2:	call   QWORD PTR [rbx+0x48]
  4150b5:	test   eax,eax
  4150b7:	jne    41518e <flatcc_builder_default_alloc@@Base+0x5ae>
  4150bd:	mov    DWORD PTR [rbx+0xf0],ebp
  4150c3:	mov    rbx,QWORD PTR [rsp+0xa8]
  4150cb:	xor    rbx,QWORD PTR fs:0x28
  4150d4:	mov    eax,ebp
  4150d6:	jne    415189 <flatcc_builder_default_alloc@@Base+0x5a9>
  4150dc:	add    rsp,0xb8
  4150e3:	pop    rbx
  4150e4:	pop    rbp
  4150e5:	ret    
  4150e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4150f0:	movsxd r11,DWORD PTR [rsp+0x18]
  4150f5:	mov    rbp,0x42ee20
  4150fc:	add    r8,rdi
  4150ff:	mov    QWORD PTR [rsp+0x10],r8
  415104:	mov    r9,r11
  415107:	shl    r11,0x4
  41510b:	add    r9d,0x1
  41510f:	mov    QWORD PTR [rsp+r11*1+0x20],rbp
  415114:	mov    QWORD PTR [rsp+r11*1+0x28],rdi
  415119:	mov    DWORD PTR [rsp+0x18],r9d
  41511e:	jmp    41501d <flatcc_builder_default_alloc@@Base+0x43d>
  415123:	nop    DWORD PTR [rax+rax*1+0x0]
  415128:	xor    ebp,ebp
  41512a:	jmp    4150c3 <flatcc_builder_default_alloc@@Base+0x4e3>
  41512c:	lea    rcx,[rip+0x198bd]        # 42e9f0 <_IO_stdin_used@@Base+0x39f0>
  415133:	lea    rsi,[rip+0x191f6]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41513a:	lea    rdi,[rip+0x19586]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  415141:	mov    edx,0x5b7
  415146:	call   405080 <__assert_fail@plt>
  41514b:	lea    rcx,[rip+0x1989e]        # 42e9f0 <_IO_stdin_used@@Base+0x39f0>
  415152:	lea    rsi,[rip+0x191d7]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415159:	lea    rdi,[rip+0x1955b]        # 42e6bb <_IO_stdin_used@@Base+0x36bb>
  415160:	mov    edx,0x5b1
  415165:	call   405080 <__assert_fail@plt>
  41516a:	lea    rcx,[rip+0x19bff]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  415171:	lea    rsi,[rip+0x191b8]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415178:	lea    rdi,[rip+0x19548]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  41517f:	mov    edx,0x287
  415184:	call   405080 <__assert_fail@plt>
  415189:	call   405070 <__stack_chk_fail@plt>
  41518e:	call   405319 <__sprintf_chk@plt+0x1c9>
  415193:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41519e:	xchg   ax,ax

00000000004151a0 <flatcc_builder_flush_vtable_cache@@Base>:
  4151a0:	cmp    QWORD PTR [rdi+0xd8],0x0
  4151a8:	jne    4151b0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  4151aa:	ret    
  4151ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4151b0:	push   rbx
  4151b1:	mov    rbx,rdi
  4151b4:	mov    rdi,QWORD PTR [rdi+0xa8]
  4151bb:	mov    rdx,QWORD PTR [rbx+0xb0]
  4151c2:	xor    esi,esi
  4151c4:	call   405090 <memset@plt>
  4151c9:	mov    DWORD PTR [rbx+0xe4],0x10
  4151d3:	mov    DWORD PTR [rbx+0xe0],0x0
  4151dd:	pop    rbx
  4151de:	ret    
  4151df:	nop

00000000004151e0 <flatcc_builder_custom_init@@Base>:
  4151e0:	mov    QWORD PTR [rdi],0x0
  4151e7:	mov    QWORD PTR [rdi+0x180],0x0
  4151f2:	mov    r9,rdi
  4151f5:	lea    rdi,[rdi+0x8]
  4151f9:	mov    r10,rcx
  4151fc:	mov    rcx,r9
  4151ff:	xor    eax,eax
  415201:	and    rdi,0xfffffffffffffff8
  415205:	sub    rcx,rdi
  415208:	add    ecx,0x188
  41520e:	shr    ecx,0x3
  415211:	test   rsi,rsi
  415214:	rep stos QWORD PTR es:[rdi],rax
  415217:	je     415248 <flatcc_builder_custom_init@@Base+0x68>
  415219:	test   r10,r10
  41521c:	je     415238 <flatcc_builder_custom_init@@Base+0x58>
  41521e:	mov    QWORD PTR [r9+0x40],r8
  415222:	mov    QWORD PTR [r9+0x50],r10
  415226:	xor    eax,eax
  415228:	mov    QWORD PTR [r9+0x38],rdx
  41522c:	mov    QWORD PTR [r9+0x48],rsi
  415230:	ret    
  415231:	nop    DWORD PTR [rax+0x0]
  415238:	mov    r10,0x414be0
  41523f:	jmp    41521e <flatcc_builder_custom_init@@Base+0x3e>
  415241:	nop    DWORD PTR [rax+0x0]
  415248:	mov    DWORD PTR [r9+0x128],0x1
  415253:	lea    rdx,[r9+0x130]
  41525a:	mov    rsi,0x418c90
  415261:	jmp    415219 <flatcc_builder_custom_init@@Base+0x39>
  415263:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41526e:	xchg   ax,ax

0000000000415270 <flatcc_builder_init@@Base>:
  415270:	xor    r8d,r8d
  415273:	xor    ecx,ecx
  415275:	xor    edx,edx
  415277:	xor    esi,esi
  415279:	jmp    4151e0 <flatcc_builder_custom_init@@Base>
  41527e:	xchg   ax,ax

0000000000415280 <flatcc_builder_custom_reset@@Base>:
  415280:	push   r14
  415282:	mov    r14d,esi
  415285:	push   r13
  415287:	mov    r13d,edx
  41528a:	push   r12
  41528c:	mov    r12,rdi
  41528f:	push   rbp
  415290:	xor    ebp,ebp
  415292:	push   rbx
  415293:	lea    rbx,[rdi+0x58]
  415297:	jmp    4152e6 <flatcc_builder_custom_reset@@Base+0x66>
  415299:	nop    DWORD PTR [rax+0x0]
  4152a0:	cmp    ebp,0x5
  4152a3:	je     4152cf <flatcc_builder_custom_reset@@Base+0x4f>
  4152a5:	test   r13d,r13d
  4152a8:	je     4152cf <flatcc_builder_custom_reset@@Base+0x4f>
  4152aa:	mov    rdi,QWORD PTR [r12+0x40]
  4152af:	mov    r8d,ebp
  4152b2:	mov    ecx,0x1
  4152b7:	mov    edx,0x1
  4152bc:	mov    rsi,rbx
  4152bf:	call   QWORD PTR [r12+0x50]
  4152c4:	test   eax,eax
  4152c6:	jne    415420 <flatcc_builder_custom_reset@@Base+0x1a0>
  4152cc:	mov    rdi,QWORD PTR [rbx]
  4152cf:	mov    rdx,QWORD PTR [rbx+0x8]
  4152d3:	xor    esi,esi
  4152d5:	call   405090 <memset@plt>
  4152da:	add    ebp,0x1
  4152dd:	add    rbx,0x10
  4152e1:	cmp    ebp,0x8
  4152e4:	je     415318 <flatcc_builder_custom_reset@@Base+0x98>
  4152e6:	mov    rdi,QWORD PTR [rbx]
  4152e9:	test   rdi,rdi
  4152ec:	jne    4152a0 <flatcc_builder_custom_reset@@Base+0x20>
  4152ee:	cmp    QWORD PTR [rbx+0x8],0x0
  4152f3:	je     4152da <flatcc_builder_custom_reset@@Base+0x5a>
  4152f5:	lea    rcx,[rip+0x19b04]        # 42ee00 <_IO_stdin_used@@Base+0x3e00>
  4152fc:	lea    rsi,[rip+0x1902d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415303:	lea    rdi,[rip+0x193cd]        # 42e6d7 <_IO_stdin_used@@Base+0x36d7>
  41530a:	mov    edx,0x1b2
  41530f:	call   405080 <__assert_fail@plt>
  415314:	nop    DWORD PTR [rax+0x0]
  415318:	mov    edx,DWORD PTR [r12+0xe4]
  415320:	mov    DWORD PTR [r12+0xe0],0x0
  41532c:	test   edx,edx
  41532e:	je     41533c <flatcc_builder_custom_reset@@Base+0xbc>
  415330:	mov    DWORD PTR [r12+0xe4],0x10
  41533c:	xor    eax,eax
  41533e:	test   r14d,r14d
  415341:	mov    DWORD PTR [r12+0xf0],0x0
  41534d:	mov    WORD PTR [r12+0xe8],ax
  415356:	mov    rax,QWORD PTR [r12+0x68]
  41535b:	mov    DWORD PTR [r12+0xf4],0x0
  415367:	mov    DWORD PTR [r12+0x104],0x0
  415373:	mov    DWORD PTR [r12+0x108],0x0
  41537f:	mov    DWORD PTR [r12+0x20],0x0
  415388:	mov    QWORD PTR [r12+0x18],rax
  41538d:	mov    rax,QWORD PTR [r12+0x88]
  415395:	mov    DWORD PTR [r12+0x24],0x0
  41539e:	mov    DWORD PTR [r12+0xfc],0x0
  4153aa:	mov    DWORD PTR [r12+0x100],0x0
  4153b6:	mov    QWORD PTR [r12+0x30],0x0
  4153bf:	mov    QWORD PTR [r12],rax
  4153c3:	mov    rax,QWORD PTR [r12+0x58]
  4153c8:	mov    QWORD PTR [r12+0x8],rax
  4153cd:	jne    4153f8 <flatcc_builder_custom_reset@@Base+0x178>
  4153cf:	mov    eax,DWORD PTR [r12+0x128]
  4153d7:	test   eax,eax
  4153d9:	je     4153ea <flatcc_builder_custom_reset@@Base+0x16a>
  4153db:	lea    rdi,[r12+0x130]
  4153e3:	call   418b20 <flatcc_emitter_reset@@Base>
  4153e8:	xor    eax,eax
  4153ea:	pop    rbx
  4153eb:	pop    rbp
  4153ec:	pop    r12
  4153ee:	pop    r13
  4153f0:	pop    r14
  4153f2:	ret    
  4153f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4153f8:	mov    QWORD PTR [r12+0x118],0x0
  415404:	mov    DWORD PTR [r12+0x120],0x0
  415410:	mov    DWORD PTR [r12+0x124],0x0
  41541c:	jmp    4153cf <flatcc_builder_custom_reset@@Base+0x14f>
  41541e:	xchg   ax,ax
  415420:	mov    eax,0xffffffff
  415425:	jmp    4153ea <flatcc_builder_custom_reset@@Base+0x16a>
  415427:	nop    WORD PTR [rax+rax*1+0x0]

0000000000415430 <flatcc_builder_reset@@Base>:
  415430:	xor    edx,edx
  415432:	xor    esi,esi
  415434:	jmp    415280 <flatcc_builder_custom_reset@@Base>
  415439:	nop    DWORD PTR [rax+0x0]

0000000000415440 <flatcc_builder_clear@@Base>:
  415440:	push   r12
  415442:	lea    r12,[rdi+0x58]
  415446:	push   rbp
  415447:	xor    ebp,ebp
  415449:	push   rbx
  41544a:	mov    rbx,rdi
  41544d:	nop    DWORD PTR [rax]
  415450:	mov    r8d,ebp
  415453:	add    ebp,0x1
  415456:	xor    ecx,ecx
  415458:	xor    edx,edx
  41545a:	mov    rsi,r12
  41545d:	mov    rdi,QWORD PTR [rbx+0x40]
  415461:	add    r12,0x10
  415465:	call   QWORD PTR [rbx+0x50]
  415468:	cmp    ebp,0x8
  41546b:	jne    415450 <flatcc_builder_clear@@Base+0x10>
  41546d:	mov    eax,DWORD PTR [rbx+0x128]
  415473:	test   eax,eax
  415475:	je     415483 <flatcc_builder_clear@@Base+0x43>
  415477:	lea    rdi,[rbx+0x130]
  41547e:	call   418c00 <flatcc_emitter_clear@@Base>
  415483:	lea    rdi,[rbx+0x8]
  415487:	mov    QWORD PTR [rbx],0x0
  41548e:	mov    QWORD PTR [rbx+0x180],0x0
  415499:	xor    eax,eax
  41549b:	and    rdi,0xfffffffffffffff8
  41549f:	sub    rbx,rdi
  4154a2:	lea    ecx,[rbx+0x188]
  4154a8:	shr    ecx,0x3
  4154ab:	rep stos QWORD PTR es:[rdi],rax
  4154ae:	pop    rbx
  4154af:	pop    rbp
  4154b0:	pop    r12
  4154b2:	ret    
  4154b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4154be:	xchg   ax,ax

00000000004154c0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4154c0:	push   r12
  4154c2:	push   rbp
  4154c3:	mov    r12,rdi
  4154c6:	push   rbx
  4154c7:	lea    rbx,[rsi+0x7]
  4154cb:	mov    rbp,QWORD PTR [rdi+0x180]
  4154d2:	and    rbx,0xfffffffffffffff8
  4154d6:	add    rbx,0x8
  4154da:	lea    rdx,[rbx+rbp*1]
  4154de:	cmp    rdx,QWORD PTR [rdi+0xd0]
  4154e5:	ja     415538 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
  4154e7:	add    rbp,QWORD PTR [r12+0xc8]
  4154ef:	je     415560 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
  4154f1:	mov    rdx,rbx
  4154f4:	xor    esi,esi
  4154f6:	mov    rdi,rbp
  4154f9:	call   405090 <memset@plt>
  4154fe:	mov    rax,QWORD PTR [r12+0x178]
  415506:	mov    QWORD PTR [rbp+0x0],rax
  41550a:	mov    rax,QWORD PTR [r12+0x180]
  415512:	lea    rdx,[rax+0x8]
  415516:	add    rbx,rax
  415519:	lea    rax,[rbp+0x8]
  41551d:	mov    QWORD PTR [r12+0x180],rbx
  415525:	mov    QWORD PTR [r12+0x178],rdx
  41552d:	pop    rbx
  41552e:	pop    rbp
  41552f:	pop    r12
  415531:	ret    
  415532:	nop    WORD PTR [rax+rax*1+0x0]
  415538:	lea    rsi,[rdi+0xc8]
  41553f:	xor    ecx,ecx
  415541:	mov    rdi,QWORD PTR [rdi+0x40]
  415545:	mov    r8d,0x7
  41554b:	call   QWORD PTR [r12+0x50]
  415550:	test   eax,eax
  415552:	je     4154e7 <flatcc_builder_enter_user_frame_ptr@@Base+0x27>
  415554:	call   4052d3 <__sprintf_chk@plt+0x183>
  415559:	nop    DWORD PTR [rax+0x0]
  415560:	xor    eax,eax
  415562:	jmp    41552d <flatcc_builder_enter_user_frame_ptr@@Base+0x6d>
  415564:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41556f:	nop

0000000000415570 <flatcc_builder_enter_user_frame@@Base>:
  415570:	push   r12
  415572:	push   rbp
  415573:	mov    r12,rdi
  415576:	push   rbx
  415577:	lea    rbx,[rsi+0x7]
  41557b:	mov    rbp,QWORD PTR [rdi+0x180]
  415582:	and    rbx,0xfffffffffffffff8
  415586:	add    rbx,0x8
  41558a:	lea    rdx,[rbx+rbp*1]
  41558e:	cmp    rdx,QWORD PTR [rdi+0xd0]
  415595:	ja     4155e0 <flatcc_builder_enter_user_frame@@Base+0x70>
  415597:	xor    eax,eax
  415599:	add    rbp,QWORD PTR [r12+0xc8]
  4155a1:	je     4155db <flatcc_builder_enter_user_frame@@Base+0x6b>
  4155a3:	mov    rdx,rbx
  4155a6:	xor    esi,esi
  4155a8:	mov    rdi,rbp
  4155ab:	call   405090 <memset@plt>
  4155b0:	mov    rax,QWORD PTR [r12+0x178]
  4155b8:	mov    QWORD PTR [rbp+0x0],rax
  4155bc:	mov    rdx,QWORD PTR [r12+0x180]
  4155c4:	lea    rax,[rdx+0x8]
  4155c8:	add    rbx,rdx
  4155cb:	mov    QWORD PTR [r12+0x180],rbx
  4155d3:	mov    QWORD PTR [r12+0x178],rax
  4155db:	pop    rbx
  4155dc:	pop    rbp
  4155dd:	pop    r12
  4155df:	ret    
  4155e0:	lea    rsi,[rdi+0xc8]
  4155e7:	xor    ecx,ecx
  4155e9:	mov    rdi,QWORD PTR [rdi+0x40]
  4155ed:	mov    r8d,0x7
  4155f3:	call   QWORD PTR [r12+0x50]
  4155f8:	test   eax,eax
  4155fa:	je     415597 <flatcc_builder_enter_user_frame@@Base+0x27>
  4155fc:	call   4052d3 <__sprintf_chk@plt+0x183>
  415601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41560c:	nop    DWORD PTR [rax+0x0]

0000000000415610 <flatcc_builder_exit_user_frame@@Base>:
  415610:	mov    rax,QWORD PTR [rdi+0x178]
  415617:	test   rax,rax
  41561a:	je     41563c <flatcc_builder_exit_user_frame@@Base+0x2c>
  41561c:	mov    edx,eax
  41561e:	add    rdx,QWORD PTR [rdi+0xc8]
  415625:	sub    rax,0x8
  415629:	mov    QWORD PTR [rdi+0x180],rax
  415630:	mov    rax,QWORD PTR [rdx-0x8]
  415634:	mov    QWORD PTR [rdi+0x178],rax
  41563b:	ret    
  41563c:	lea    rcx,[rip+0x1978d]        # 42edd0 <_IO_stdin_used@@Base+0x3dd0>
  415643:	lea    rsi,[rip+0x18ce6]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41564a:	lea    rdi,[rip+0x19098]        # 42e6e9 <_IO_stdin_used@@Base+0x36e9>
  415651:	sub    rsp,0x8
  415655:	mov    edx,0x21e
  41565a:	call   405080 <__assert_fail@plt>
  41565f:	nop

0000000000415660 <flatcc_builder_exit_user_frame_at@@Base>:
  415660:	cmp    QWORD PTR [rdi+0x178],rsi
  415667:	jb     415675 <flatcc_builder_exit_user_frame_at@@Base+0x15>
  415669:	mov    QWORD PTR [rdi+0x178],rsi
  415670:	jmp    415610 <flatcc_builder_exit_user_frame@@Base>
  415675:	lea    rcx,[rip+0x19724]        # 42eda0 <_IO_stdin_used@@Base+0x3da0>
  41567c:	lea    rsi,[rip+0x18cad]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415683:	lea    rdi,[rip+0x18d06]        # 42e390 <_IO_stdin_used@@Base+0x3390>
  41568a:	sub    rsp,0x8
  41568e:	mov    edx,0x227
  415693:	call   405080 <__assert_fail@plt>
  415698:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004156a0 <flatcc_builder_get_current_user_frame@@Base>:
  4156a0:	mov    rax,QWORD PTR [rdi+0x178]
  4156a7:	ret    
  4156a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004156b0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4156b0:	mov    eax,esi
  4156b2:	add    rax,QWORD PTR [rdi+0xc8]
  4156b9:	ret    
  4156ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004156c0 <flatcc_builder_embed_buffer@@Base>:
  4156c0:	push   r13
  4156c2:	push   r12
  4156c4:	mov    r12,rcx
  4156c7:	push   rbp
  4156c8:	push   rbx
  4156c9:	xor    ecx,ecx
  4156cb:	mov    rbp,rdx
  4156ce:	movzx  edx,si
  4156d1:	mov    rbx,rdi
  4156d4:	sub    rsp,0xc8
  4156db:	mov    r13d,r9d
  4156de:	mov    WORD PTR [rsp+0xc],r8w
  4156e4:	mov    r8d,DWORD PTR [rdi+0x100]
  4156eb:	lea    rsi,[rsp+0xc]
  4156f0:	mov    rax,QWORD PTR fs:0x28
  4156f9:	mov    QWORD PTR [rsp+0xb8],rax
  415701:	xor    eax,eax
  415703:	test   r8d,r8d
  415706:	setne  cl
  415709:	call   414d00 <flatcc_builder_default_alloc@@Base+0x120>
  41570e:	test   eax,eax
  415710:	jne    415858 <flatcc_builder_embed_buffer@@Base+0x198>
  415716:	mov    edx,DWORD PTR [rbx+0xf0]
  41571c:	movzx  ecx,WORD PTR [rsp+0xc]
  415721:	xor    esi,esi
  415723:	and    r13d,0x2
  415727:	mov    QWORD PTR [rsp+0x20],0x0
  415730:	mov    DWORD PTR [rsp+0x28],0x0
  415738:	setne  sil
  41573c:	xor    r8d,r8d
  41573f:	mov    eax,edx
  415741:	shl    esi,0x2
  415744:	sub    eax,r12d
  415747:	sub    ecx,0x1
  41574a:	sub    eax,esi
  41574c:	and    eax,ecx
  41574e:	lea    ecx,[rax+r12*1]
  415752:	mov    DWORD PTR [rsp+0x1c],ecx
  415756:	mov    ecx,DWORD PTR [rbx+0x100]
  41575c:	test   ecx,ecx
  41575e:	je     41578a <flatcc_builder_embed_buffer@@Base+0xca>
  415760:	lea    rcx,[rsp+0x1c]
  415765:	mov    QWORD PTR [rsp+0x20],0x4
  41576e:	mov    QWORD PTR [rsp+0x38],0x4
  415777:	mov    DWORD PTR [rsp+0x28],0x1
  41577f:	mov    r8d,0x4
  415785:	mov    QWORD PTR [rsp+0x30],rcx
  41578a:	test   r12,r12
  41578d:	je     4157b4 <flatcc_builder_embed_buffer@@Base+0xf4>
  41578f:	movsxd rsi,DWORD PTR [rsp+0x28]
  415794:	add    r8,r12
  415797:	mov    QWORD PTR [rsp+0x20],r8
  41579c:	mov    rcx,rsi
  41579f:	shl    rsi,0x4
  4157a3:	add    ecx,0x1
  4157a6:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  4157ab:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  4157b0:	mov    DWORD PTR [rsp+0x28],ecx
  4157b4:	test   eax,eax
  4157b6:	jne    415820 <flatcc_builder_embed_buffer@@Base+0x160>
  4157b8:	mov    ebp,edx
  4157ba:	sub    ebp,r8d
  4157bd:	cmp    edx,ebp
  4157bf:	jle    41585c <flatcc_builder_embed_buffer@@Base+0x19c>
  4157c5:	movabs rax,0x10000000f
  4157cf:	cmp    r8,rax
  4157d2:	ja     41585c <flatcc_builder_embed_buffer@@Base+0x19c>
  4157d8:	lea    rsi,[rsp+0x30]
  4157dd:	mov    rdi,QWORD PTR [rbx+0x38]
  4157e1:	mov    ecx,ebp
  4157e3:	mov    edx,DWORD PTR [rsp+0x28]
  4157e7:	call   QWORD PTR [rbx+0x48]
  4157ea:	test   eax,eax
  4157ec:	jne    415880 <flatcc_builder_embed_buffer@@Base+0x1c0>
  4157f2:	mov    DWORD PTR [rbx+0xf0],ebp
  4157f8:	mov    rdi,QWORD PTR [rsp+0xb8]
  415800:	xor    rdi,QWORD PTR fs:0x28
  415809:	mov    eax,ebp
  41580b:	jne    41587b <flatcc_builder_embed_buffer@@Base+0x1bb>
  41580d:	add    rsp,0xc8
  415814:	pop    rbx
  415815:	pop    rbp
  415816:	pop    r12
  415818:	pop    r13
  41581a:	ret    
  41581b:	nop    DWORD PTR [rax+rax*1+0x0]
  415820:	movsxd rsi,DWORD PTR [rsp+0x28]
  415825:	mov    rdi,0x42ee20
  41582c:	add    r8,rax
  41582f:	mov    QWORD PTR [rsp+0x20],r8
  415834:	mov    rcx,rsi
  415837:	shl    rsi,0x4
  41583b:	add    ecx,0x1
  41583e:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  415843:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  415848:	mov    DWORD PTR [rsp+0x28],ecx
  41584c:	jmp    4157b8 <flatcc_builder_embed_buffer@@Base+0xf8>
  415851:	nop    DWORD PTR [rax+0x0]
  415858:	xor    ebp,ebp
  41585a:	jmp    4157f8 <flatcc_builder_embed_buffer@@Base+0x138>
  41585c:	lea    rcx,[rip+0x1950d]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  415863:	lea    rsi,[rip+0x18ac6]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41586a:	lea    rdi,[rip+0x18e56]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  415871:	mov    edx,0x287
  415876:	call   405080 <__assert_fail@plt>
  41587b:	call   405070 <__stack_chk_fail@plt>
  415880:	call   405319 <__sprintf_chk@plt+0x1c9>
  415885:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000415890 <flatcc_builder_create_buffer@@Base>:
  415890:	push   r14
  415892:	push   r13
  415894:	mov    r13d,r9d
  415897:	push   r12
  415899:	push   rbp
  41589a:	and    r13d,0x1
  41589e:	push   rbx
  41589f:	mov    r14,rsi
  4158a2:	mov    r12d,ecx
  4158a5:	movzx  edx,dx
  4158a8:	mov    ecx,r13d
  4158ab:	mov    rbp,rdi
  4158ae:	sub    rsp,0xc0
  4158b5:	mov    ebx,r9d
  4158b8:	lea    rsi,[rsp+0xc]
  4158bd:	mov    WORD PTR [rsp+0xc],r8w
  4158c3:	mov    DWORD PTR [rsp+0x1c],0x0
  4158cb:	mov    rax,QWORD PTR fs:0x28
  4158d4:	mov    QWORD PTR [rsp+0xb8],rax
  4158dc:	xor    eax,eax
  4158de:	call   414d00 <flatcc_builder_default_alloc@@Base+0x120>
  4158e3:	test   eax,eax
  4158e5:	jne    415aa0 <flatcc_builder_create_buffer@@Base+0x210>
  4158eb:	movzx  ecx,WORD PTR [rsp+0xc]
  4158f0:	cmp    cx,WORD PTR [rbp+0xe8]
  4158f7:	ja     415a90 <flatcc_builder_create_buffer@@Base+0x200>
  4158fd:	test   r14,r14
  415900:	mov    eax,DWORD PTR [rsp+0x1c]
  415904:	je     41590d <flatcc_builder_create_buffer@@Base+0x7d>
  415906:	mov    eax,DWORD PTR [r14]
  415909:	mov    DWORD PTR [rsp+0x1c],eax
  41590d:	xor    r10d,r10d
  415910:	test   eax,eax
  415912:	mov    edi,ebx
  415914:	setne  r10b
  415918:	and    edi,0x1
  41591b:	mov    edx,DWORD PTR [rbp+0xf0]
  415921:	shl    r10d,0x2
  415925:	and    ebx,0x2
  415928:	jne    415a58 <flatcc_builder_create_buffer@@Base+0x1c8>
  41592e:	lea    eax,[rdx-0x4]
  415931:	sub    ecx,0x1
  415934:	sub    eax,r10d
  415937:	and    eax,ecx
  415939:	test   dil,dil
  41593c:	jne    415a63 <flatcc_builder_create_buffer@@Base+0x1d3>
  415942:	mov    ecx,0x1
  415947:	mov    r8d,0x4
  41594d:	movsxd rsi,ebx
  415950:	lea    r9,[rsp+0x14]
  415955:	mov    QWORD PTR [rsp+0x20],r8
  41595a:	shl    rsi,0x4
  41595e:	test   r10d,r10d
  415961:	mov    DWORD PTR [rsp+0x28],ecx
  415965:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  41596a:	mov    QWORD PTR [rsp+rsi*1+0x38],0x4
  415973:	je     415997 <flatcc_builder_create_buffer@@Base+0x107>
  415975:	lea    rsi,[rsp+0x1c]
  41597a:	shl    rcx,0x4
  41597e:	add    r8,r10
  415981:	add    ebx,0x2
  415984:	mov    QWORD PTR [rsp+0x20],r8
  415989:	mov    QWORD PTR [rsp+rcx*1+0x38],r10
  41598e:	mov    QWORD PTR [rsp+rcx*1+0x30],rsi
  415993:	mov    DWORD PTR [rsp+0x28],ebx
  415997:	test   eax,eax
  415999:	je     4159c7 <flatcc_builder_create_buffer@@Base+0x137>
  41599b:	movsxd rsi,DWORD PTR [rsp+0x28]
  4159a0:	mov    r9,0x42ee20
  4159a7:	add    r8,rax
  4159aa:	mov    QWORD PTR [rsp+0x20],r8
  4159af:	mov    rcx,rsi
  4159b2:	shl    rsi,0x4
  4159b6:	add    ecx,0x1
  4159b9:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  4159be:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  4159c3:	mov    DWORD PTR [rsp+0x28],ecx
  4159c7:	mov    eax,edx
  4159c9:	sub    eax,r8d
  4159cc:	test   dil,dil
  4159cf:	je     415aa8 <flatcc_builder_create_buffer@@Base+0x218>
  4159d5:	add    eax,0x4
  4159d8:	test   r13d,r13d
  4159db:	je     415aa8 <flatcc_builder_create_buffer@@Base+0x218>
  4159e1:	mov    ecx,DWORD PTR [rbp+0xf8]
  4159e7:	sub    ecx,eax
  4159e9:	mov    DWORD PTR [rsp+0x18],ecx
  4159ed:	mov    ebx,edx
  4159ef:	sub    r12d,eax
  4159f2:	sub    ebx,r8d
  4159f5:	mov    DWORD PTR [rsp+0x14],r12d
  4159fa:	cmp    ebx,edx
  4159fc:	jge    415ab9 <flatcc_builder_create_buffer@@Base+0x229>
  415a02:	lea    rsi,[rsp+0x30]
  415a07:	mov    rdi,QWORD PTR [rbp+0x38]
  415a0b:	mov    ecx,ebx
  415a0d:	mov    edx,DWORD PTR [rsp+0x28]
  415a11:	call   QWORD PTR [rbp+0x48]
  415a14:	test   eax,eax
  415a16:	jne    415add <flatcc_builder_create_buffer@@Base+0x24d>
  415a1c:	test   ebx,ebx
  415a1e:	mov    DWORD PTR [rbp+0xf0],ebx
  415a24:	je     415ae2 <flatcc_builder_create_buffer@@Base+0x252>
  415a2a:	mov    rdi,QWORD PTR [rsp+0xb8]
  415a32:	xor    rdi,QWORD PTR fs:0x28
  415a3b:	mov    eax,ebx
  415a3d:	jne    415ad8 <flatcc_builder_create_buffer@@Base+0x248>
  415a43:	add    rsp,0xc0
  415a4a:	pop    rbx
  415a4b:	pop    rbp
  415a4c:	pop    r12
  415a4e:	pop    r13
  415a50:	pop    r14
  415a52:	ret    
  415a53:	nop    DWORD PTR [rax+rax*1+0x0]
  415a58:	lea    eax,[rdx-0x8]
  415a5b:	sub    ecx,0x1
  415a5e:	sub    eax,r10d
  415a61:	and    eax,ecx
  415a63:	lea    rcx,[rsp+0x18]
  415a68:	mov    QWORD PTR [rsp+0x38],0x4
  415a71:	mov    ebx,0x1
  415a76:	mov    r8d,0x8
  415a7c:	mov    edi,0x1
  415a81:	mov    QWORD PTR [rsp+0x30],rcx
  415a86:	mov    ecx,0x2
  415a8b:	jmp    41594d <flatcc_builder_create_buffer@@Base+0xbd>
  415a90:	mov    WORD PTR [rbp+0xe8],cx
  415a97:	jmp    4158fd <flatcc_builder_create_buffer@@Base+0x6d>
  415a9c:	nop    DWORD PTR [rax+0x0]
  415aa0:	xor    ebx,ebx
  415aa2:	jmp    415a2a <flatcc_builder_create_buffer@@Base+0x19a>
  415aa4:	nop    DWORD PTR [rax+0x0]
  415aa8:	mov    ecx,DWORD PTR [rbp+0xf4]
  415aae:	sub    ecx,eax
  415ab0:	mov    DWORD PTR [rsp+0x18],ecx
  415ab4:	jmp    4159ed <flatcc_builder_create_buffer@@Base+0x15d>
  415ab9:	lea    rcx,[rip+0x192b0]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  415ac0:	lea    rsi,[rip+0x18869]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415ac7:	lea    rdi,[rip+0x18bf9]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  415ace:	mov    edx,0x287
  415ad3:	call   405080 <__assert_fail@plt>
  415ad8:	call   405070 <__stack_chk_fail@plt>
  415add:	call   405319 <__sprintf_chk@plt+0x1c9>
  415ae2:	lea    rcx,[rip+0x19267]        # 42ed50 <_IO_stdin_used@@Base+0x3d50>
  415ae9:	lea    rsi,[rip+0x18840]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415af0:	lea    rdi,[rip+0x18bd0]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  415af7:	mov    edx,0x304
  415afc:	call   405080 <__assert_fail@plt>
  415b01:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415b0c:	nop    DWORD PTR [rax+0x0]

0000000000415b10 <flatcc_builder_create_struct@@Base>:
  415b10:	push   rbp
  415b11:	push   rbx
  415b12:	sub    rsp,0xa8
  415b19:	mov    rax,QWORD PTR fs:0x28
  415b22:	mov    QWORD PTR [rsp+0x98],rax
  415b2a:	xor    eax,eax
  415b2c:	test   cx,cx
  415b2f:	je     415c3f <flatcc_builder_create_struct@@Base+0x12f>
  415b35:	mov    rbx,rdi
  415b38:	mov    r8,rdx
  415b3b:	movzx  edi,cx
  415b3e:	cmp    cx,WORD PTR [rbx+0xe8]
  415b45:	jbe    415b4e <flatcc_builder_create_struct@@Base+0x3e>
  415b47:	mov    WORD PTR [rbx+0xe8],cx
  415b4e:	mov    edx,DWORD PTR [rbx+0xf0]
  415b54:	lea    ecx,[rdi-0x1]
  415b57:	mov    QWORD PTR [rsp],0x0
  415b5f:	mov    DWORD PTR [rsp+0x8],0x0
  415b67:	mov    eax,edx
  415b69:	sub    eax,r8d
  415b6c:	and    eax,ecx
  415b6e:	test   r8,r8
  415b71:	jne    415c00 <flatcc_builder_create_struct@@Base+0xf0>
  415b77:	test   eax,eax
  415b79:	je     415ba6 <flatcc_builder_create_struct@@Base+0x96>
  415b7b:	movsxd rsi,DWORD PTR [rsp+0x8]
  415b80:	mov    rdi,0x42ee20
  415b87:	add    r8,rax
  415b8a:	mov    QWORD PTR [rsp],r8
  415b8e:	mov    rcx,rsi
  415b91:	shl    rsi,0x4
  415b95:	add    ecx,0x1
  415b98:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  415b9d:	mov    QWORD PTR [rsp+rsi*1+0x18],rax
  415ba2:	mov    DWORD PTR [rsp+0x8],ecx
  415ba6:	mov    ebp,edx
  415ba8:	movabs rax,0x10000000f
  415bb2:	sub    ebp,r8d
  415bb5:	cmp    r8,rax
  415bb8:	ja     415c1b <flatcc_builder_create_struct@@Base+0x10b>
  415bba:	cmp    edx,ebp
  415bbc:	jle    415c1b <flatcc_builder_create_struct@@Base+0x10b>
  415bbe:	lea    rsi,[rsp+0x10]
  415bc3:	mov    rdi,QWORD PTR [rbx+0x38]
  415bc7:	mov    ecx,ebp
  415bc9:	mov    edx,DWORD PTR [rsp+0x8]
  415bcd:	call   QWORD PTR [rbx+0x48]
  415bd0:	test   eax,eax
  415bd2:	jne    415c3a <flatcc_builder_create_struct@@Base+0x12a>
  415bd4:	mov    rdx,QWORD PTR [rsp+0x98]
  415bdc:	xor    rdx,QWORD PTR fs:0x28
  415be5:	mov    DWORD PTR [rbx+0xf0],ebp
  415beb:	mov    eax,ebp
  415bed:	jne    415c5e <flatcc_builder_create_struct@@Base+0x14e>
  415bef:	add    rsp,0xa8
  415bf6:	pop    rbx
  415bf7:	pop    rbp
  415bf8:	ret    
  415bf9:	nop    DWORD PTR [rax+0x0]
  415c00:	mov    QWORD PTR [rsp],r8
  415c04:	mov    QWORD PTR [rsp+0x10],rsi
  415c09:	mov    QWORD PTR [rsp+0x18],r8
  415c0e:	mov    DWORD PTR [rsp+0x8],0x1
  415c16:	jmp    415b77 <flatcc_builder_create_struct@@Base+0x67>
  415c1b:	lea    rcx,[rip+0x1914e]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  415c22:	lea    rsi,[rip+0x18707]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415c29:	lea    rdi,[rip+0x18a97]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  415c30:	mov    edx,0x287
  415c35:	call   405080 <__assert_fail@plt>
  415c3a:	call   405319 <__sprintf_chk@plt+0x1c9>
  415c3f:	lea    rcx,[rip+0x190ea]        # 42ed30 <_IO_stdin_used@@Base+0x3d30>
  415c46:	lea    rsi,[rip+0x186e3]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415c4d:	lea    rdi,[rip+0x18aae]        # 42e702 <_IO_stdin_used@@Base+0x3702>
  415c54:	mov    edx,0x30f
  415c59:	call   405080 <__assert_fail@plt>
  415c5e:	call   405070 <__stack_chk_fail@plt>
  415c63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415c6e:	xchg   ax,ax

0000000000415c70 <flatcc_builder_start_buffer@@Base>:
  415c70:	push   r13
  415c72:	push   r12
  415c74:	mov    r13d,edx
  415c77:	push   rbp
  415c78:	push   rbx
  415c79:	mov    rbp,rsi
  415c7c:	mov    rbx,rdi
  415c7f:	mov    r12d,ecx
  415c82:	sub    rsp,0x8
  415c86:	movzx  esi,WORD PTR [rdi+0xe8]
  415c8d:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  415c92:	test   eax,eax
  415c94:	jne    415d40 <flatcc_builder_start_buffer@@Base+0xd0>
  415c9a:	movzx  edx,WORD PTR [rbx+0xec]
  415ca1:	mov    rdi,QWORD PTR [rbx+0x30]
  415ca5:	mov    ecx,0x1
  415caa:	mov    WORD PTR [rbx+0xe8],cx
  415cb1:	test   rbp,rbp
  415cb4:	mov    rsi,rbp
  415cb7:	mov    WORD PTR [rdi+0x22],dx
  415cbb:	movzx  edx,WORD PTR [rbx+0x10c]
  415cc2:	mov    WORD PTR [rbx+0xec],r13w
  415cca:	mov    WORD PTR [rdi+0x20],dx
  415cce:	mov    edx,DWORD PTR [rbx+0xf8]
  415cd4:	mov    WORD PTR [rbx+0x10c],r12w
  415cdc:	mov    DWORD PTR [rdi+0x14],edx
  415cdf:	mov    edx,DWORD PTR [rbx+0x100]
  415ce5:	mov    DWORD PTR [rdi+0x1c],edx
  415ce8:	mov    edx,DWORD PTR [rbx+0xf0]
  415cee:	mov    DWORD PTR [rbx+0xf8],edx
  415cf4:	mov    edx,DWORD PTR [rbx+0xfc]
  415cfa:	lea    ecx,[rdx+0x1]
  415cfd:	mov    DWORD PTR [rbx+0x100],edx
  415d03:	mov    edx,DWORD PTR [rbx+0x110]
  415d09:	mov    DWORD PTR [rbx+0xfc],ecx
  415d0f:	mov    DWORD PTR [rdi+0x10],edx
  415d12:	je     415d30 <flatcc_builder_start_buffer@@Base+0xc0>
  415d14:	mov    edx,DWORD PTR [rsi]
  415d16:	mov    DWORD PTR [rbx+0x110],edx
  415d1c:	mov    edx,0x1
  415d21:	mov    WORD PTR [rdi+0xe],dx
  415d25:	add    rsp,0x8
  415d29:	pop    rbx
  415d2a:	pop    rbp
  415d2b:	pop    r12
  415d2d:	pop    r13
  415d2f:	ret    
  415d30:	mov    rsi,0x42ee20
  415d37:	jmp    415d14 <flatcc_builder_start_buffer@@Base+0xa4>
  415d39:	nop    DWORD PTR [rax+0x0]
  415d40:	mov    eax,0xffffffff
  415d45:	jmp    415d25 <flatcc_builder_start_buffer@@Base+0xb5>
  415d47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000415d50 <flatcc_builder_end_buffer@@Base>:
  415d50:	push   rbp
  415d51:	push   rbx
  415d52:	xor    eax,eax
  415d54:	sub    rsp,0x8
  415d58:	movzx  r9d,WORD PTR [rdi+0x10c]
  415d60:	mov    edx,DWORD PTR [rdi+0x100]
  415d66:	and    r9d,0x2
  415d6a:	test   edx,edx
  415d6c:	setne  al
  415d6f:	or     r9d,eax
  415d72:	mov    rax,QWORD PTR [rdi+0x30]
  415d76:	cmp    WORD PTR [rax+0xe],0x1
  415d7b:	jne    415e71 <flatcc_builder_end_buffer@@Base+0x121>
  415d81:	movzx  edx,WORD PTR [rdi+0xec]
  415d88:	movzx  r8d,WORD PTR [rdi+0xe8]
  415d90:	mov    rbx,rdi
  415d93:	mov    ecx,esi
  415d95:	cmp    dx,r8w
  415d99:	ja     415dc0 <flatcc_builder_end_buffer@@Base+0x70>
  415d9b:	lea    rsi,[rbx+0x110]
  415da2:	mov    rdi,rbx
  415da5:	call   415890 <flatcc_builder_create_buffer@@Base>
  415daa:	test   eax,eax
  415dac:	mov    ebp,eax
  415dae:	jne    415dd0 <flatcc_builder_end_buffer@@Base+0x80>
  415db0:	add    rsp,0x8
  415db4:	mov    eax,ebp
  415db6:	pop    rbx
  415db7:	pop    rbp
  415db8:	ret    
  415db9:	nop    DWORD PTR [rax+0x0]
  415dc0:	mov    WORD PTR [rbx+0xe8],dx
  415dc7:	mov    r8d,edx
  415dca:	jmp    415d9b <flatcc_builder_end_buffer@@Base+0x4b>
  415dcc:	nop    DWORD PTR [rax+0x0]
  415dd0:	mov    rax,QWORD PTR [rbx+0x30]
  415dd4:	mov    rdi,QWORD PTR [rbx+0x18]
  415dd8:	xor    esi,esi
  415dda:	mov    edx,DWORD PTR [rax+0x14]
  415ddd:	mov    DWORD PTR [rbx+0xf8],edx
  415de3:	mov    edx,DWORD PTR [rax+0x1c]
  415de6:	mov    DWORD PTR [rbx+0x100],edx
  415dec:	mov    edx,DWORD PTR [rax+0x10]
  415def:	mov    DWORD PTR [rbx+0x110],edx
  415df5:	movzx  eax,WORD PTR [rax+0x20]
  415df9:	mov    edx,DWORD PTR [rbx+0x20]
  415dfc:	mov    WORD PTR [rbx+0x10c],ax
  415e03:	call   405090 <memset@plt>
  415e08:	mov    rax,QWORD PTR [rbx+0x30]
  415e0c:	mov    edi,DWORD PTR [rbx+0x70]
  415e0f:	mov    esi,DWORD PTR [rax]
  415e11:	mov    edx,DWORD PTR [rax+0x8]
  415e14:	mov    ecx,DWORD PTR [rax+0x4]
  415e17:	mov    DWORD PTR [rbx+0x20],edx
  415e1a:	mov    rdx,rsi
  415e1d:	mov    DWORD PTR [rbx+0x28],esi
  415e20:	add    rsi,QWORD PTR [rbx+0x68]
  415e24:	sub    edi,edx
  415e26:	cmp    ecx,edi
  415e28:	mov    edx,edi
  415e2a:	cmovb  edx,ecx
  415e2d:	mov    DWORD PTR [rbx+0x24],edx
  415e30:	movzx  edx,WORD PTR [rbx+0xea]
  415e37:	cmp    dx,WORD PTR [rbx+0xe8]
  415e3e:	mov    QWORD PTR [rbx+0x18],rsi
  415e42:	mov    DWORD PTR [rax+0x4],ecx
  415e45:	jbe    415e4e <flatcc_builder_end_buffer@@Base+0xfe>
  415e47:	mov    WORD PTR [rbx+0xe8],dx
  415e4e:	movzx  edx,WORD PTR [rax+0xc]
  415e52:	sub    rax,0x24
  415e56:	sub    DWORD PTR [rbx+0x104],0x1
  415e5d:	mov    QWORD PTR [rbx+0x30],rax
  415e61:	mov    eax,ebp
  415e63:	mov    WORD PTR [rbx+0xea],dx
  415e6a:	add    rsp,0x8
  415e6e:	pop    rbx
  415e6f:	pop    rbp
  415e70:	ret    
  415e71:	lea    rcx,[rip+0x18e98]        # 42ed10 <_IO_stdin_used@@Base+0x3d10>
  415e78:	lea    rsi,[rip+0x184b1]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  415e7f:	lea    rdi,[rip+0x1852a]        # 42e3b0 <_IO_stdin_used@@Base+0x33b0>
  415e86:	mov    edx,0x346
  415e8b:	call   405080 <__assert_fail@plt>

0000000000415e90 <flatcc_builder_start_struct@@Base>:
  415e90:	push   r12
  415e92:	push   rbp
  415e93:	mov    rbp,rsi
  415e96:	push   rbx
  415e97:	movzx  esi,dx
  415e9a:	mov    rbx,rdi
  415e9d:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  415ea2:	test   eax,eax
  415ea4:	jne    415f20 <flatcc_builder_start_struct@@Base+0x90>
  415ea6:	mov    rcx,QWORD PTR [rbx+0x30]
  415eaa:	mov    eax,0x2
  415eaf:	mov    edi,DWORD PTR [rbx+0x70]
  415eb2:	mov    WORD PTR [rcx+0xe],ax
  415eb6:	mov    eax,DWORD PTR [rbx+0x28]
  415eb9:	mov    rdx,rax
  415ebc:	add    rax,QWORD PTR [rbx+0x68]
  415ec0:	sub    edi,edx
  415ec2:	cmp    edi,0xfffffffc
  415ec5:	mov    edx,edi
  415ec7:	mov    QWORD PTR [rbx+0x18],rax
  415ecb:	ja     415ef0 <flatcc_builder_start_struct@@Base+0x60>
  415ecd:	mov    DWORD PTR [rbx+0x24],edi
  415ed0:	mov    r12d,DWORD PTR [rbx+0x20]
  415ed4:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  415edb:	mov    rsi,r12
  415ede:	add    esi,ebp
  415ee0:	cmp    esi,edx
  415ee2:	mov    DWORD PTR [rbx+0x20],esi
  415ee5:	jae    415f00 <flatcc_builder_start_struct@@Base+0x70>
  415ee7:	add    rax,r12
  415eea:	pop    rbx
  415eeb:	pop    rbp
  415eec:	pop    r12
  415eee:	ret    
  415eef:	nop
  415ef0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  415ef7:	mov    edx,0xfffffffc
  415efc:	jmp    415ed0 <flatcc_builder_start_struct@@Base+0x40>
  415efe:	xchg   ax,ax
  415f00:	add    esi,0x1
  415f03:	mov    edx,0xfffffffc
  415f08:	mov    rdi,rbx
  415f0b:	call   414b80 <union_vector_tests@@Base+0x110>
  415f10:	test   eax,eax
  415f12:	jne    415f20 <flatcc_builder_start_struct@@Base+0x90>
  415f14:	mov    rax,QWORD PTR [rbx+0x18]
  415f18:	jmp    415ee7 <flatcc_builder_start_struct@@Base+0x57>
  415f1a:	nop    WORD PTR [rax+rax*1+0x0]
  415f20:	pop    rbx
  415f21:	xor    eax,eax
  415f23:	pop    rbp
  415f24:	pop    r12
  415f26:	ret    
  415f27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000415f30 <flatcc_builder_struct_edit@@Base>:
  415f30:	mov    rax,QWORD PTR [rdi+0x18]
  415f34:	ret    
  415f35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000415f40 <flatcc_builder_end_struct@@Base>:
  415f40:	push   rbp
  415f41:	push   rbx
  415f42:	sub    rsp,0x8
  415f46:	mov    rax,QWORD PTR [rdi+0x30]
  415f4a:	cmp    WORD PTR [rax+0xe],0x2
  415f4f:	jne    415ff7 <flatcc_builder_end_struct@@Base+0xb7>
  415f55:	movzx  ecx,WORD PTR [rdi+0xea]
  415f5c:	mov    edx,DWORD PTR [rdi+0x20]
  415f5f:	mov    rbx,rdi
  415f62:	mov    rsi,QWORD PTR [rdi+0x18]
  415f66:	call   415b10 <flatcc_builder_create_struct@@Base>
  415f6b:	test   eax,eax
  415f6d:	mov    ebp,eax
  415f6f:	jne    415f80 <flatcc_builder_end_struct@@Base+0x40>
  415f71:	add    rsp,0x8
  415f75:	mov    eax,ebp
  415f77:	pop    rbx
  415f78:	pop    rbp
  415f79:	ret    
  415f7a:	nop    WORD PTR [rax+rax*1+0x0]
  415f80:	mov    edx,DWORD PTR [rbx+0x20]
  415f83:	mov    rdi,QWORD PTR [rbx+0x18]
  415f87:	xor    esi,esi
  415f89:	call   405090 <memset@plt>
  415f8e:	mov    rax,QWORD PTR [rbx+0x30]
  415f92:	mov    edi,DWORD PTR [rbx+0x70]
  415f95:	mov    esi,DWORD PTR [rax]
  415f97:	mov    edx,DWORD PTR [rax+0x8]
  415f9a:	mov    ecx,DWORD PTR [rax+0x4]
  415f9d:	mov    DWORD PTR [rbx+0x20],edx
  415fa0:	mov    rdx,rsi
  415fa3:	mov    DWORD PTR [rbx+0x28],esi
  415fa6:	add    rsi,QWORD PTR [rbx+0x68]
  415faa:	sub    edi,edx
  415fac:	cmp    ecx,edi
  415fae:	mov    edx,edi
  415fb0:	cmovb  edx,ecx
  415fb3:	mov    DWORD PTR [rbx+0x24],edx
  415fb6:	movzx  edx,WORD PTR [rbx+0xea]
  415fbd:	cmp    dx,WORD PTR [rbx+0xe8]
  415fc4:	mov    QWORD PTR [rbx+0x18],rsi
  415fc8:	mov    DWORD PTR [rax+0x4],ecx
  415fcb:	jbe    415fd4 <flatcc_builder_end_struct@@Base+0x94>
  415fcd:	mov    WORD PTR [rbx+0xe8],dx
  415fd4:	movzx  edx,WORD PTR [rax+0xc]
  415fd8:	sub    rax,0x24
  415fdc:	sub    DWORD PTR [rbx+0x104],0x1
  415fe3:	mov    QWORD PTR [rbx+0x30],rax
  415fe7:	mov    eax,ebp
  415fe9:	mov    WORD PTR [rbx+0xea],dx
  415ff0:	add    rsp,0x8
  415ff4:	pop    rbx
  415ff5:	pop    rbp
  415ff6:	ret    
  415ff7:	lea    rcx,[rip+0x18cf2]        # 42ecf0 <_IO_stdin_used@@Base+0x3cf0>
  415ffe:	lea    rsi,[rip+0x1832b]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416005:	lea    rdi,[rip+0x183d4]        # 42e3e0 <_IO_stdin_used@@Base+0x33e0>
  41600c:	mov    edx,0x368
  416011:	call   405080 <__assert_fail@plt>
  416016:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000416020 <flatcc_builder_extend_vector@@Base>:
  416020:	push   rbp
  416021:	push   rbx
  416022:	mov    eax,esi
  416024:	sub    rsp,0x8
  416028:	mov    rdx,QWORD PTR [rdi+0x30]
  41602c:	add    eax,DWORD PTR [rdx+0x14]
  41602f:	setb   cl
  416032:	cmp    DWORD PTR [rdx+0x18],eax
  416035:	jb     41607d <flatcc_builder_extend_vector@@Base+0x5d>
  416037:	movzx  ecx,cl
  41603a:	test   ecx,ecx
  41603c:	jne    41607d <flatcc_builder_extend_vector@@Base+0x5d>
  41603e:	imul   esi,DWORD PTR [rdx+0x10]
  416042:	mov    DWORD PTR [rdx+0x14],eax
  416045:	mov    ebp,DWORD PTR [rdi+0x20]
  416048:	mov    rbx,rdi
  41604b:	add    esi,ebp
  41604d:	cmp    esi,DWORD PTR [rdi+0x24]
  416050:	mov    DWORD PTR [rdi+0x20],esi
  416053:	jae    416068 <flatcc_builder_extend_vector@@Base+0x48>
  416055:	mov    rax,rbp
  416058:	add    rax,QWORD PTR [rbx+0x18]
  41605c:	add    rsp,0x8
  416060:	pop    rbx
  416061:	pop    rbp
  416062:	ret    
  416063:	nop    DWORD PTR [rax+rax*1+0x0]
  416068:	add    esi,0x1
  41606b:	mov    edx,0xfffffffc
  416070:	call   414b80 <union_vector_tests@@Base+0x110>
  416075:	test   eax,eax
  416077:	je     416055 <flatcc_builder_extend_vector@@Base+0x35>
  416079:	xor    eax,eax
  41607b:	jmp    41605c <flatcc_builder_extend_vector@@Base+0x3c>
  41607d:	call   40533c <__sprintf_chk@plt+0x1ec>
  416082:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41608d:	nop    DWORD PTR [rax]

0000000000416090 <flatcc_builder_vector_push@@Base>:
  416090:	push   r13
  416092:	push   r12
  416094:	push   rbp
  416095:	push   rbx
  416096:	sub    rsp,0x8
  41609a:	mov    rax,QWORD PTR [rdi+0x30]
  41609e:	cmp    WORD PTR [rax+0xe],0x4
  4160a3:	jne    416124 <flatcc_builder_vector_push@@Base+0x94>
  4160a5:	mov    edx,DWORD PTR [rax+0x14]
  4160a8:	cmp    edx,DWORD PTR [rax+0x18]
  4160ab:	ja     416105 <flatcc_builder_vector_push@@Base+0x75>
  4160ad:	add    edx,0x1
  4160b0:	mov    r12d,DWORD PTR [rax+0x10]
  4160b4:	mov    rbx,rdi
  4160b7:	mov    DWORD PTR [rax+0x14],edx
  4160ba:	mov    ebp,DWORD PTR [rdi+0x20]
  4160bd:	mov    r13,rsi
  4160c0:	mov    rcx,rbp
  4160c3:	add    ecx,r12d
  4160c6:	cmp    ecx,DWORD PTR [rdi+0x24]
  4160c9:	mov    DWORD PTR [rdi+0x20],ecx
  4160cc:	jae    4160f0 <flatcc_builder_vector_push@@Base+0x60>
  4160ce:	add    rbp,QWORD PTR [rbx+0x18]
  4160d2:	je     4160e2 <flatcc_builder_vector_push@@Base+0x52>
  4160d4:	mov    edx,r12d
  4160d7:	mov    rsi,r13
  4160da:	mov    rdi,rbp
  4160dd:	call   4050e0 <memcpy@plt>
  4160e2:	add    rsp,0x8
  4160e6:	mov    rax,rbp
  4160e9:	pop    rbx
  4160ea:	pop    rbp
  4160eb:	pop    r12
  4160ed:	pop    r13
  4160ef:	ret    
  4160f0:	lea    esi,[rcx+0x1]
  4160f3:	mov    edx,0xfffffffc
  4160f8:	call   414b80 <union_vector_tests@@Base+0x110>
  4160fd:	test   eax,eax
  4160ff:	je     4160ce <flatcc_builder_vector_push@@Base+0x3e>
  416101:	xor    ebp,ebp
  416103:	jmp    4160e2 <flatcc_builder_vector_push@@Base+0x52>
  416105:	lea    rcx,[rip+0x18ba4]        # 42ecb0 <_IO_stdin_used@@Base+0x3cb0>
  41610c:	lea    rsi,[rip+0x1821d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416113:	lea    rdi,[rip+0x18326]        # 42e440 <_IO_stdin_used@@Base+0x3440>
  41611a:	mov    edx,0x38c
  41611f:	call   405080 <__assert_fail@plt>
  416124:	lea    rcx,[rip+0x18b85]        # 42ecb0 <_IO_stdin_used@@Base+0x3cb0>
  41612b:	lea    rsi,[rip+0x181fe]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416132:	lea    rdi,[rip+0x182d7]        # 42e410 <_IO_stdin_used@@Base+0x3410>
  416139:	mov    edx,0x38b
  41613e:	call   405080 <__assert_fail@plt>
  416143:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41614e:	xchg   ax,ax

0000000000416150 <flatcc_builder_append_vector@@Base>:
  416150:	push   r13
  416152:	push   r12
  416154:	push   rbp
  416155:	push   rbx
  416156:	sub    rsp,0x8
  41615a:	mov    rax,QWORD PTR [rdi+0x30]
  41615e:	cmp    WORD PTR [rax+0xe],0x4
  416163:	jne    4161db <flatcc_builder_append_vector@@Base+0x8b>
  416165:	mov    r13,rsi
  416168:	mov    ecx,edx
  41616a:	xor    esi,esi
  41616c:	add    ecx,DWORD PTR [rax+0x14]
  41616f:	setb   sil
  416173:	cmp    DWORD PTR [rax+0x18],ecx
  416176:	jb     4161d6 <flatcc_builder_append_vector@@Base+0x86>
  416178:	test   esi,esi
  41617a:	jne    4161d6 <flatcc_builder_append_vector@@Base+0x86>
  41617c:	mov    ebx,DWORD PTR [rax+0x10]
  41617f:	mov    DWORD PTR [rax+0x14],ecx
  416182:	mov    rbp,rdi
  416185:	mov    r12d,DWORD PTR [rdi+0x20]
  416189:	imul   ebx,edx
  41618c:	mov    rdx,r12
  41618f:	add    edx,ebx
  416191:	cmp    edx,DWORD PTR [rdi+0x24]
  416194:	mov    DWORD PTR [rdi+0x20],edx
  416197:	jae    4161c0 <flatcc_builder_append_vector@@Base+0x70>
  416199:	add    r12,QWORD PTR [rbp+0x18]
  41619d:	je     4161ac <flatcc_builder_append_vector@@Base+0x5c>
  41619f:	mov    edx,ebx
  4161a1:	mov    rsi,r13
  4161a4:	mov    rdi,r12
  4161a7:	call   4050e0 <memcpy@plt>
  4161ac:	add    rsp,0x8
  4161b0:	mov    rax,r12
  4161b3:	pop    rbx
  4161b4:	pop    rbp
  4161b5:	pop    r12
  4161b7:	pop    r13
  4161b9:	ret    
  4161ba:	nop    WORD PTR [rax+rax*1+0x0]
  4161c0:	lea    esi,[rdx+0x1]
  4161c3:	mov    edx,0xfffffffc
  4161c8:	call   414b80 <union_vector_tests@@Base+0x110>
  4161cd:	test   eax,eax
  4161cf:	je     416199 <flatcc_builder_append_vector@@Base+0x49>
  4161d1:	xor    r12d,r12d
  4161d4:	jmp    4161ac <flatcc_builder_append_vector@@Base+0x5c>
  4161d6:	call   40533c <__sprintf_chk@plt+0x1ec>
  4161db:	lea    rcx,[rip+0x18aae]        # 42ec90 <_IO_stdin_used@@Base+0x3c90>
  4161e2:	lea    rsi,[rip+0x18147]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4161e9:	lea    rdi,[rip+0x18220]        # 42e410 <_IO_stdin_used@@Base+0x3410>
  4161f0:	mov    edx,0x393
  4161f5:	call   405080 <__assert_fail@plt>
  4161fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416200 <flatcc_builder_extend_offset_vector@@Base>:
  416200:	push   rbp
  416201:	push   rbx
  416202:	xor    edx,edx
  416204:	mov    ecx,esi
  416206:	sub    rsp,0x8
  41620a:	mov    rax,QWORD PTR [rdi+0x30]
  41620e:	add    ecx,DWORD PTR [rax+0x14]
  416211:	setb   dl
  416214:	test   edx,edx
  416216:	jne    41625d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  416218:	cmp    ecx,0x3fffffff
  41621e:	ja     41625d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  416220:	mov    DWORD PTR [rax+0x14],ecx
  416223:	mov    ebp,DWORD PTR [rdi+0x20]
  416226:	mov    rbx,rdi
  416229:	lea    eax,[rbp+rsi*4+0x0]
  41622d:	cmp    eax,DWORD PTR [rdi+0x24]
  416230:	mov    DWORD PTR [rdi+0x20],eax
  416233:	jae    416248 <flatcc_builder_extend_offset_vector@@Base+0x48>
  416235:	mov    rax,rbp
  416238:	add    rax,QWORD PTR [rbx+0x18]
  41623c:	add    rsp,0x8
  416240:	pop    rbx
  416241:	pop    rbp
  416242:	ret    
  416243:	nop    DWORD PTR [rax+rax*1+0x0]
  416248:	lea    esi,[rax+0x1]
  41624b:	mov    edx,0xfffffffc
  416250:	call   414b80 <union_vector_tests@@Base+0x110>
  416255:	test   eax,eax
  416257:	je     416235 <flatcc_builder_extend_offset_vector@@Base+0x35>
  416259:	xor    eax,eax
  41625b:	jmp    41623c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  41625d:	call   40533c <__sprintf_chk@plt+0x1ec>
  416262:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41626d:	nop    DWORD PTR [rax]

0000000000416270 <flatcc_builder_offset_vector_push@@Base>:
  416270:	push   r12
  416272:	push   rbp
  416273:	push   rbx
  416274:	mov    rdx,QWORD PTR [rdi+0x30]
  416278:	cmp    WORD PTR [rdx+0xe],0x5
  41627d:	jne    4162d0 <flatcc_builder_offset_vector_push@@Base+0x60>
  41627f:	mov    eax,DWORD PTR [rdx+0x14]
  416282:	cmp    eax,0x3fffffff
  416287:	je     4162c9 <flatcc_builder_offset_vector_push@@Base+0x59>
  416289:	add    eax,0x1
  41628c:	mov    rbp,rdi
  41628f:	mov    r12d,esi
  416292:	mov    DWORD PTR [rdx+0x14],eax
  416295:	mov    ebx,DWORD PTR [rdi+0x20]
  416298:	lea    edx,[rbx+0x4]
  41629b:	cmp    edx,DWORD PTR [rdi+0x24]
  41629e:	mov    DWORD PTR [rdi+0x20],edx
  4162a1:	jae    4162b8 <flatcc_builder_offset_vector_push@@Base+0x48>
  4162a3:	mov    rax,rbx
  4162a6:	add    rax,QWORD PTR [rbp+0x18]
  4162aa:	je     4162c9 <flatcc_builder_offset_vector_push@@Base+0x59>
  4162ac:	mov    DWORD PTR [rax],r12d
  4162af:	pop    rbx
  4162b0:	pop    rbp
  4162b1:	pop    r12
  4162b3:	ret    
  4162b4:	nop    DWORD PTR [rax+0x0]
  4162b8:	lea    esi,[rbx+0x5]
  4162bb:	mov    edx,0xfffffffc
  4162c0:	call   414b80 <union_vector_tests@@Base+0x110>
  4162c5:	test   eax,eax
  4162c7:	je     4162a3 <flatcc_builder_offset_vector_push@@Base+0x33>
  4162c9:	pop    rbx
  4162ca:	xor    eax,eax
  4162cc:	pop    rbp
  4162cd:	pop    r12
  4162cf:	ret    
  4162d0:	lea    rcx,[rip+0x18989]        # 42ec60 <_IO_stdin_used@@Base+0x3c60>
  4162d7:	lea    rsi,[rip+0x18052]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4162de:	lea    rdi,[rip+0x1819b]        # 42e480 <_IO_stdin_used@@Base+0x3480>
  4162e5:	mov    edx,0x3a6
  4162ea:	call   405080 <__assert_fail@plt>
  4162ef:	nop

00000000004162f0 <flatcc_builder_append_offset_vector@@Base>:
  4162f0:	push   r13
  4162f2:	push   r12
  4162f4:	push   rbp
  4162f5:	push   rbx
  4162f6:	sub    rsp,0x8
  4162fa:	mov    rax,QWORD PTR [rdi+0x30]
  4162fe:	cmp    WORD PTR [rax+0xe],0x5
  416303:	jne    41637b <flatcc_builder_append_offset_vector@@Base+0x8b>
  416305:	mov    r13,rsi
  416308:	mov    ecx,edx
  41630a:	xor    esi,esi
  41630c:	add    ecx,DWORD PTR [rax+0x14]
  41630f:	setb   sil
  416313:	test   esi,esi
  416315:	jne    416376 <flatcc_builder_append_offset_vector@@Base+0x86>
  416317:	cmp    ecx,0x3fffffff
  41631d:	ja     416376 <flatcc_builder_append_offset_vector@@Base+0x86>
  41631f:	mov    DWORD PTR [rax+0x14],ecx
  416322:	mov    r12d,DWORD PTR [rdi+0x20]
  416326:	lea    ebx,[rdx*4+0x0]
  41632d:	mov    rbp,rdi
  416330:	mov    rdx,r12
  416333:	add    edx,ebx
  416335:	cmp    edx,DWORD PTR [rdi+0x24]
  416338:	mov    DWORD PTR [rdi+0x20],edx
  41633b:	jae    416360 <flatcc_builder_append_offset_vector@@Base+0x70>
  41633d:	add    r12,QWORD PTR [rbp+0x18]
  416341:	je     416350 <flatcc_builder_append_offset_vector@@Base+0x60>
  416343:	mov    edx,ebx
  416345:	mov    rsi,r13
  416348:	mov    rdi,r12
  41634b:	call   4050e0 <memcpy@plt>
  416350:	add    rsp,0x8
  416354:	mov    rax,r12
  416357:	pop    rbx
  416358:	pop    rbp
  416359:	pop    r12
  41635b:	pop    r13
  41635d:	ret    
  41635e:	xchg   ax,ax
  416360:	lea    esi,[rdx+0x1]
  416363:	mov    edx,0xfffffffc
  416368:	call   414b80 <union_vector_tests@@Base+0x110>
  41636d:	test   eax,eax
  41636f:	je     41633d <flatcc_builder_append_offset_vector@@Base+0x4d>
  416371:	xor    r12d,r12d
  416374:	jmp    416350 <flatcc_builder_append_offset_vector@@Base+0x60>
  416376:	call   40533c <__sprintf_chk@plt+0x1ec>
  41637b:	lea    rcx,[rip+0x1889e]        # 42ec20 <_IO_stdin_used@@Base+0x3c20>
  416382:	lea    rsi,[rip+0x17fa7]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416389:	lea    rdi,[rip+0x180f0]        # 42e480 <_IO_stdin_used@@Base+0x3480>
  416390:	mov    edx,0x3b4
  416395:	call   405080 <__assert_fail@plt>
  41639a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004163a0 <flatcc_builder_extend_string@@Base>:
  4163a0:	push   rbp
  4163a1:	push   rbx
  4163a2:	sub    rsp,0x8
  4163a6:	mov    rax,QWORD PTR [rdi+0x30]
  4163aa:	cmp    WORD PTR [rax+0xe],0x6
  4163af:	jne    4163fa <flatcc_builder_extend_string@@Base+0x5a>
  4163b1:	mov    edx,esi
  4163b3:	add    edx,DWORD PTR [rax+0x14]
  4163b6:	jb     4163f5 <flatcc_builder_extend_string@@Base+0x55>
  4163b8:	mov    DWORD PTR [rax+0x14],edx
  4163bb:	mov    ebp,DWORD PTR [rdi+0x20]
  4163be:	mov    rbx,rdi
  4163c1:	add    esi,ebp
  4163c3:	cmp    esi,DWORD PTR [rdi+0x24]
  4163c6:	mov    DWORD PTR [rdi+0x20],esi
  4163c9:	jae    4163e0 <flatcc_builder_extend_string@@Base+0x40>
  4163cb:	mov    rax,rbp
  4163ce:	add    rax,QWORD PTR [rbx+0x18]
  4163d2:	add    rsp,0x8
  4163d6:	pop    rbx
  4163d7:	pop    rbp
  4163d8:	ret    
  4163d9:	nop    DWORD PTR [rax+0x0]
  4163e0:	add    esi,0x1
  4163e3:	mov    edx,0xfffffffc
  4163e8:	call   414b80 <union_vector_tests@@Base+0x110>
  4163ed:	test   eax,eax
  4163ef:	je     4163cb <flatcc_builder_extend_string@@Base+0x2b>
  4163f1:	xor    eax,eax
  4163f3:	jmp    4163d2 <flatcc_builder_extend_string@@Base+0x32>
  4163f5:	call   40533c <__sprintf_chk@plt+0x1ec>
  4163fa:	lea    rcx,[rip+0x187ef]        # 42ebf0 <_IO_stdin_used@@Base+0x3bf0>
  416401:	lea    rsi,[rip+0x17f28]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416408:	lea    rdi,[rip+0x180a9]        # 42e4b8 <_IO_stdin_used@@Base+0x34b8>
  41640f:	mov    edx,0x3bd
  416414:	call   405080 <__assert_fail@plt>
  416419:	nop    DWORD PTR [rax+0x0]

0000000000416420 <flatcc_builder_append_string@@Base>:
  416420:	push   r13
  416422:	push   r12
  416424:	push   rbp
  416425:	push   rbx
  416426:	sub    rsp,0x8
  41642a:	mov    rax,QWORD PTR [rdi+0x30]
  41642e:	cmp    WORD PTR [rax+0xe],0x6
  416433:	jne    41649b <flatcc_builder_append_string@@Base+0x7b>
  416435:	mov    rbp,rdx
  416438:	add    edx,DWORD PTR [rax+0x14]
  41643b:	jb     416496 <flatcc_builder_append_string@@Base+0x76>
  41643d:	mov    DWORD PTR [rax+0x14],edx
  416440:	mov    r12d,DWORD PTR [rdi+0x20]
  416444:	mov    rbx,rdi
  416447:	mov    r13,rsi
  41644a:	mov    rdx,r12
  41644d:	add    edx,ebp
  41644f:	cmp    edx,DWORD PTR [rdi+0x24]
  416452:	mov    DWORD PTR [rdi+0x20],edx
  416455:	jae    416480 <flatcc_builder_append_string@@Base+0x60>
  416457:	add    r12,QWORD PTR [rbx+0x18]
  41645b:	je     41646a <flatcc_builder_append_string@@Base+0x4a>
  41645d:	mov    edx,ebp
  41645f:	mov    rsi,r13
  416462:	mov    rdi,r12
  416465:	call   4050e0 <memcpy@plt>
  41646a:	add    rsp,0x8
  41646e:	mov    rax,r12
  416471:	pop    rbx
  416472:	pop    rbp
  416473:	pop    r12
  416475:	pop    r13
  416477:	ret    
  416478:	nop    DWORD PTR [rax+rax*1+0x0]
  416480:	lea    esi,[rdx+0x1]
  416483:	mov    edx,0xfffffffc
  416488:	call   414b80 <union_vector_tests@@Base+0x110>
  41648d:	test   eax,eax
  41648f:	je     416457 <flatcc_builder_append_string@@Base+0x37>
  416491:	xor    r12d,r12d
  416494:	jmp    41646a <flatcc_builder_append_string@@Base+0x4a>
  416496:	call   40533c <__sprintf_chk@plt+0x1ec>
  41649b:	lea    rcx,[rip+0x1872e]        # 42ebd0 <_IO_stdin_used@@Base+0x3bd0>
  4164a2:	lea    rsi,[rip+0x17e87]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4164a9:	lea    rdi,[rip+0x18008]        # 42e4b8 <_IO_stdin_used@@Base+0x34b8>
  4164b0:	mov    edx,0x3c6
  4164b5:	call   405080 <__assert_fail@plt>
  4164ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004164c0 <flatcc_builder_append_string_str@@Base>:
  4164c0:	push   rbp
  4164c1:	push   rbx
  4164c2:	mov    rbp,rdi
  4164c5:	mov    rdi,rsi
  4164c8:	mov    rbx,rsi
  4164cb:	sub    rsp,0x8
  4164cf:	call   405060 <strlen@plt>
  4164d4:	add    rsp,0x8
  4164d8:	mov    rsi,rbx
  4164db:	mov    rdi,rbp
  4164de:	pop    rbx
  4164df:	pop    rbp
  4164e0:	mov    rdx,rax
  4164e3:	jmp    416420 <flatcc_builder_append_string@@Base>
  4164e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004164f0 <flatcc_builder_append_string_strn@@Base>:
  4164f0:	push   r12
  4164f2:	push   rbp
  4164f3:	mov    rbp,rsi
  4164f6:	push   rbx
  4164f7:	mov    r12,rdi
  4164fa:	xor    esi,esi
  4164fc:	mov    rdi,rbp
  4164ff:	mov    rbx,rdx
  416502:	call   4050a0 <memchr@plt>
  416507:	mov    rdx,rax
  41650a:	mov    rsi,rbp
  41650d:	mov    rdi,r12
  416510:	sub    rdx,rbp
  416513:	test   rax,rax
  416516:	cmovne rbx,rdx
  41651a:	mov    rdx,rbx
  41651d:	pop    rbx
  41651e:	pop    rbp
  41651f:	pop    r12
  416521:	jmp    416420 <flatcc_builder_append_string@@Base>
  416526:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000416530 <flatcc_builder_truncate_vector@@Base>:
  416530:	sub    rsp,0x8
  416534:	mov    rax,QWORD PTR [rdi+0x30]
  416538:	cmp    WORD PTR [rax+0xe],0x4
  41653d:	jne    416573 <flatcc_builder_truncate_vector@@Base+0x43>
  41653f:	mov    ecx,DWORD PTR [rax+0x14]
  416542:	cmp    rcx,rsi
  416545:	mov    rdx,rcx
  416548:	jb     416592 <flatcc_builder_truncate_vector@@Base+0x62>
  41654a:	sub    edx,esi
  41654c:	imul   esi,DWORD PTR [rax+0x10]
  416550:	mov    DWORD PTR [rax+0x14],edx
  416553:	mov    eax,DWORD PTR [rdi+0x20]
  416556:	mov    rcx,QWORD PTR [rdi+0x18]
  41655a:	sub    eax,esi
  41655c:	mov    edx,esi
  41655e:	xor    esi,esi
  416560:	mov    DWORD PTR [rdi+0x20],eax
  416563:	lea    rdi,[rcx+rax*1]
  416567:	call   405090 <memset@plt>
  41656c:	xor    eax,eax
  41656e:	add    rsp,0x8
  416572:	ret    
  416573:	lea    rcx,[rip+0x18636]        # 42ebb0 <_IO_stdin_used@@Base+0x3bb0>
  41657a:	lea    rsi,[rip+0x17daf]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416581:	lea    rdi,[rip+0x17e88]        # 42e410 <_IO_stdin_used@@Base+0x3410>
  416588:	mov    edx,0x3d9
  41658d:	call   405080 <__assert_fail@plt>
  416592:	lea    rcx,[rip+0x18617]        # 42ebb0 <_IO_stdin_used@@Base+0x3bb0>
  416599:	lea    rsi,[rip+0x17d90]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4165a0:	lea    rdi,[rip+0x17f41]        # 42e4e8 <_IO_stdin_used@@Base+0x34e8>
  4165a7:	mov    edx,0x3da
  4165ac:	call   405080 <__assert_fail@plt>
  4165b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4165bc:	nop    DWORD PTR [rax+0x0]

00000000004165c0 <flatcc_builder_truncate_offset_vector@@Base>:
  4165c0:	sub    rsp,0x8
  4165c4:	mov    rax,QWORD PTR [rdi+0x30]
  4165c8:	cmp    WORD PTR [rax+0xe],0x5
  4165cd:	jne    4165ff <flatcc_builder_truncate_offset_vector@@Base+0x3f>
  4165cf:	mov    edx,DWORD PTR [rax+0x14]
  4165d2:	cmp    edx,esi
  4165d4:	jb     41661e <flatcc_builder_truncate_offset_vector@@Base+0x5e>
  4165d6:	sub    edx,esi
  4165d8:	imul   esi,DWORD PTR [rax+0x10]
  4165dc:	mov    DWORD PTR [rax+0x14],edx
  4165df:	mov    eax,DWORD PTR [rdi+0x20]
  4165e2:	mov    rcx,QWORD PTR [rdi+0x18]
  4165e6:	sub    eax,esi
  4165e8:	mov    edx,esi
  4165ea:	xor    esi,esi
  4165ec:	mov    DWORD PTR [rdi+0x20],eax
  4165ef:	lea    rdi,[rcx+rax*1]
  4165f3:	call   405090 <memset@plt>
  4165f8:	xor    eax,eax
  4165fa:	add    rsp,0x8
  4165fe:	ret    
  4165ff:	lea    rcx,[rip+0x1857a]        # 42eb80 <_IO_stdin_used@@Base+0x3b80>
  416606:	lea    rsi,[rip+0x17d23]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41660d:	lea    rdi,[rip+0x17e6c]        # 42e480 <_IO_stdin_used@@Base+0x3480>
  416614:	mov    edx,0x3e2
  416619:	call   405080 <__assert_fail@plt>
  41661e:	lea    rcx,[rip+0x1855b]        # 42eb80 <_IO_stdin_used@@Base+0x3b80>
  416625:	lea    rsi,[rip+0x17d04]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41662c:	lea    rdi,[rip+0x17edd]        # 42e510 <_IO_stdin_used@@Base+0x3510>
  416633:	mov    edx,0x3e3
  416638:	call   405080 <__assert_fail@plt>
  41663d:	nop    DWORD PTR [rax]

0000000000416640 <flatcc_builder_truncate_string@@Base>:
  416640:	sub    rsp,0x8
  416644:	mov    rdx,QWORD PTR [rdi+0x30]
  416648:	cmp    WORD PTR [rdx+0xe],0x6
  41664d:	jne    416680 <flatcc_builder_truncate_string@@Base+0x40>
  41664f:	mov    ecx,DWORD PTR [rdx+0x14]
  416652:	cmp    rcx,rsi
  416655:	mov    rax,rcx
  416658:	jb     41669f <flatcc_builder_truncate_string@@Base+0x5f>
  41665a:	sub    eax,esi
  41665c:	mov    DWORD PTR [rdx+0x14],eax
  41665f:	mov    eax,DWORD PTR [rdi+0x20]
  416662:	mov    rdx,QWORD PTR [rdi+0x18]
  416666:	sub    eax,esi
  416668:	mov    DWORD PTR [rdi+0x20],eax
  41666b:	lea    rdi,[rdx+rax*1]
  41666f:	mov    rdx,rsi
  416672:	xor    esi,esi
  416674:	call   405090 <memset@plt>
  416679:	xor    eax,eax
  41667b:	add    rsp,0x8
  41667f:	ret    
  416680:	lea    rcx,[rip+0x184d9]        # 42eb60 <_IO_stdin_used@@Base+0x3b60>
  416687:	lea    rsi,[rip+0x17ca2]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41668e:	lea    rdi,[rip+0x17e23]        # 42e4b8 <_IO_stdin_used@@Base+0x34b8>
  416695:	mov    edx,0x3eb
  41669a:	call   405080 <__assert_fail@plt>
  41669f:	lea    rcx,[rip+0x184ba]        # 42eb60 <_IO_stdin_used@@Base+0x3b60>
  4166a6:	lea    rsi,[rip+0x17c83]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4166ad:	lea    rdi,[rip+0x17e9c]        # 42e550 <_IO_stdin_used@@Base+0x3550>
  4166b4:	mov    edx,0x3ec
  4166b9:	call   405080 <__assert_fail@plt>
  4166be:	xchg   ax,ax

00000000004166c0 <flatcc_builder_start_vector@@Base>:
  4166c0:	push   r12
  4166c2:	cmp    dx,0x4
  4166c6:	push   rbp
  4166c7:	mov    rbp,rsi
  4166ca:	mov    esi,0x4
  4166cf:	push   rbx
  4166d0:	cmovb  edx,esi
  4166d3:	mov    rbx,rdi
  4166d6:	mov    r12,rcx
  4166d9:	movzx  esi,dx
  4166dc:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  4166e1:	test   eax,eax
  4166e3:	jne    416730 <flatcc_builder_start_vector@@Base+0x70>
  4166e5:	mov    rsi,QWORD PTR [rbx+0x30]
  4166e9:	mov    edx,0x4
  4166ee:	mov    DWORD PTR [rsi+0x10],ebp
  4166f1:	mov    DWORD PTR [rsi+0x14],0x0
  4166f8:	mov    DWORD PTR [rsi+0x18],r12d
  4166fc:	mov    WORD PTR [rsi+0xe],dx
  416700:	mov    edx,DWORD PTR [rbx+0x28]
  416703:	mov    rcx,rdx
  416706:	add    rdx,QWORD PTR [rbx+0x68]
  41670a:	mov    QWORD PTR [rbx+0x18],rdx
  41670e:	mov    edx,DWORD PTR [rbx+0x70]
  416711:	sub    edx,ecx
  416713:	mov    ecx,0xfffffffc
  416718:	cmp    edx,ecx
  41671a:	cmova  edx,ecx
  41671d:	mov    DWORD PTR [rbx+0x24],edx
  416720:	mov    DWORD PTR [rsi+0x4],ecx
  416723:	pop    rbx
  416724:	pop    rbp
  416725:	pop    r12
  416727:	ret    
  416728:	nop    DWORD PTR [rax+rax*1+0x0]
  416730:	mov    eax,0xffffffff
  416735:	jmp    416723 <flatcc_builder_start_vector@@Base+0x63>
  416737:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416740 <flatcc_builder_start_offset_vector@@Base>:
  416740:	push   rbx
  416741:	mov    esi,0x4
  416746:	mov    rbx,rdi
  416749:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  41674e:	test   eax,eax
  416750:	jne    416798 <flatcc_builder_start_offset_vector@@Base+0x58>
  416752:	mov    rcx,QWORD PTR [rbx+0x30]
  416756:	mov    edx,0x5
  41675b:	mov    DWORD PTR [rcx+0x10],0x4
  416762:	mov    DWORD PTR [rcx+0x14],0x0
  416769:	mov    WORD PTR [rcx+0xe],dx
  41676d:	mov    edx,DWORD PTR [rbx+0x28]
  416770:	mov    rsi,rdx
  416773:	add    rdx,QWORD PTR [rbx+0x68]
  416777:	mov    QWORD PTR [rbx+0x18],rdx
  41677b:	mov    edx,DWORD PTR [rbx+0x70]
  41677e:	sub    edx,esi
  416780:	mov    esi,0xfffffffc
  416785:	cmp    edx,esi
  416787:	cmova  edx,esi
  41678a:	mov    DWORD PTR [rbx+0x24],edx
  41678d:	mov    DWORD PTR [rcx+0x4],esi
  416790:	pop    rbx
  416791:	ret    
  416792:	nop    WORD PTR [rax+rax*1+0x0]
  416798:	mov    eax,0xffffffff
  41679d:	pop    rbx
  41679e:	ret    
  41679f:	nop

00000000004167a0 <flatcc_builder_start_string@@Base>:
  4167a0:	push   rbx
  4167a1:	mov    esi,0x1
  4167a6:	mov    rbx,rdi
  4167a9:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  4167ae:	test   eax,eax
  4167b0:	jne    4167f8 <flatcc_builder_start_string@@Base+0x58>
  4167b2:	mov    rcx,QWORD PTR [rbx+0x30]
  4167b6:	mov    edx,0x6
  4167bb:	mov    DWORD PTR [rcx+0x10],0x1
  4167c2:	mov    DWORD PTR [rcx+0x14],0x0
  4167c9:	mov    WORD PTR [rcx+0xe],dx
  4167cd:	mov    edx,DWORD PTR [rbx+0x28]
  4167d0:	mov    rsi,rdx
  4167d3:	add    rdx,QWORD PTR [rbx+0x68]
  4167d7:	mov    QWORD PTR [rbx+0x18],rdx
  4167db:	mov    edx,DWORD PTR [rbx+0x70]
  4167de:	sub    edx,esi
  4167e0:	mov    esi,0xfffffffc
  4167e5:	cmp    edx,esi
  4167e7:	cmova  edx,esi
  4167ea:	mov    DWORD PTR [rbx+0x24],edx
  4167ed:	mov    DWORD PTR [rcx+0x4],esi
  4167f0:	pop    rbx
  4167f1:	ret    
  4167f2:	nop    WORD PTR [rax+rax*1+0x0]
  4167f8:	mov    eax,0xffffffff
  4167fd:	pop    rbx
  4167fe:	ret    
  4167ff:	nop

0000000000416800 <flatcc_builder_reserve_table@@Base>:
  416800:	test   esi,esi
  416802:	push   r12
  416804:	push   rbp
  416805:	push   rbx
  416806:	js     4168bf <flatcc_builder_reserve_table@@Base+0xbf>
  41680c:	mov    rax,QWORD PTR [rdi+0x30]
  416810:	lea    r12d,[rsi+rsi*1+0x4]
  416815:	mov    rbx,rdi
  416818:	movzx  edx,WORD PTR [rax+0x1c]
  41681c:	mov    eax,DWORD PTR [rax+0x10]
  41681f:	lea    ebp,[rax+rdx*2]
  416822:	mov    edx,r12d
  416825:	add    rdx,rbp
  416828:	cmp    rdx,QWORD PTR [rdi+0x60]
  41682c:	ja     416870 <flatcc_builder_reserve_table@@Base+0x70>
  41682e:	add    rbp,QWORD PTR [rbx+0x58]
  416832:	je     4168b0 <flatcc_builder_reserve_table@@Base+0xb0>
  416834:	mov    rax,QWORD PTR [rbx+0x30]
  416838:	add    rbp,0x4
  41683c:	lea    edx,[r12-0x3]
  416841:	mov    QWORD PTR [rbx+0x8],rbp
  416845:	mov    ebp,DWORD PTR [rax+0x14]
  416848:	add    rdx,rbp
  41684b:	cmp    rdx,QWORD PTR [rbx+0x90]
  416852:	ja     416890 <flatcc_builder_reserve_table@@Base+0x90>
  416854:	add    rbp,QWORD PTR [rbx+0x88]
  41685b:	xor    eax,eax
  41685d:	test   rbp,rbp
  416860:	mov    QWORD PTR [rbx],rbp
  416863:	sete   al
  416866:	neg    eax
  416868:	pop    rbx
  416869:	pop    rbp
  41686a:	pop    r12
  41686c:	ret    
  41686d:	nop    DWORD PTR [rax]
  416870:	lea    rsi,[rdi+0x58]
  416874:	xor    r8d,r8d
  416877:	mov    rdi,QWORD PTR [rdi+0x40]
  41687b:	mov    ecx,0x1
  416880:	call   QWORD PTR [rbx+0x50]
  416883:	test   eax,eax
  416885:	je     41682e <flatcc_builder_reserve_table@@Base+0x2e>
  416887:	call   4052d3 <__sprintf_chk@plt+0x183>
  41688c:	nop    DWORD PTR [rax+0x0]
  416890:	xor    ecx,ecx
  416892:	lea    rsi,[rbx+0x88]
  416899:	mov    rdi,QWORD PTR [rbx+0x40]
  41689d:	mov    r8d,0x3
  4168a3:	call   QWORD PTR [rbx+0x50]
  4168a6:	test   eax,eax
  4168a8:	je     416854 <flatcc_builder_reserve_table@@Base+0x54>
  4168aa:	jmp    416887 <flatcc_builder_reserve_table@@Base+0x87>
  4168ac:	nop    DWORD PTR [rax+0x0]
  4168b0:	mov    QWORD PTR [rbx+0x8],0x0
  4168b8:	mov    eax,0xffffffff
  4168bd:	jmp    416868 <flatcc_builder_reserve_table@@Base+0x68>
  4168bf:	lea    rcx,[rip+0x1827a]        # 42eb40 <_IO_stdin_used@@Base+0x3b40>
  4168c6:	lea    rsi,[rip+0x17a63]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4168cd:	lea    rdi,[rip+0x17e4f]        # 42e723 <_IO_stdin_used@@Base+0x3723>
  4168d4:	mov    edx,0x429
  4168d9:	call   405080 <__assert_fail@plt>
  4168de:	xchg   ax,ax

00000000004168e0 <flatcc_builder_start_table@@Base>:
  4168e0:	push   r13
  4168e2:	push   r12
  4168e4:	mov    r12d,esi
  4168e7:	push   rbp
  4168e8:	push   rbx
  4168e9:	mov    esi,0x4
  4168ee:	mov    rbx,rdi
  4168f1:	sub    rsp,0x8
  4168f5:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  4168fa:	test   eax,eax
  4168fc:	jne    416a30 <flatcc_builder_start_table@@Base+0x150>
  416902:	mov    rcx,QWORD PTR [rbx+0x8]
  416906:	mov    ebp,eax
  416908:	mov    rax,QWORD PTR [rbx+0x58]
  41690c:	mov    rdx,QWORD PTR [rbx+0x30]
  416910:	xor    edi,edi
  416912:	mov    r8d,0x3
  416918:	sub    rcx,rax
  41691b:	mov    DWORD PTR [rdx+0x10],ecx
  41691e:	mov    rsi,QWORD PTR [rbx]
  416921:	sub    rsi,QWORD PTR [rbx+0x88]
  416928:	mov    DWORD PTR [rdx+0x14],esi
  41692b:	mov    esi,DWORD PTR [rbx+0x14]
  41692e:	mov    DWORD PTR [rdx+0x18],esi
  416931:	movzx  esi,WORD PTR [rbx+0x10]
  416935:	mov    WORD PTR [rdx+0x1c],si
  416939:	lea    r13d,[rcx+rsi*2]
  41693d:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  416944:	mov    WORD PTR [rbx+0x10],di
  416948:	mov    WORD PTR [rdx+0xe],r8w
  41694d:	lea    edx,[r12+r12*1+0x4]
  416952:	add    rdx,r13
  416955:	cmp    rdx,QWORD PTR [rbx+0x60]
  416959:	ja     4169d8 <flatcc_builder_start_table@@Base+0xf8>
  41695b:	add    rax,r13
  41695e:	je     416a28 <flatcc_builder_start_table@@Base+0x148>
  416964:	add    rax,0x4
  416968:	lea    edx,[r12+r12*1+0x1]
  41696d:	mov    QWORD PTR [rbx+0x8],rax
  416971:	mov    rax,QWORD PTR [rbx+0x30]
  416975:	mov    r13d,DWORD PTR [rax+0x14]
  416979:	add    rdx,r13
  41697c:	cmp    rdx,QWORD PTR [rbx+0x90]
  416983:	ja     416a00 <flatcc_builder_start_table@@Base+0x120>
  416985:	add    r13,QWORD PTR [rbx+0x88]
  41698c:	test   r13,r13
  41698f:	mov    QWORD PTR [rbx],r13
  416992:	je     416a30 <flatcc_builder_start_table@@Base+0x150>
  416998:	mov    eax,DWORD PTR [rbx+0x28]
  41699b:	mov    rdx,rax
  41699e:	add    rax,QWORD PTR [rbx+0x68]
  4169a2:	mov    QWORD PTR [rbx+0x18],rax
  4169a6:	mov    eax,DWORD PTR [rbx+0x70]
  4169a9:	sub    eax,edx
  4169ab:	mov    edx,0xfffc
  4169b0:	cmp    eax,0xfffc
  4169b5:	cmova  eax,edx
  4169b8:	mov    DWORD PTR [rbx+0x24],eax
  4169bb:	mov    rax,QWORD PTR [rbx+0x30]
  4169bf:	mov    DWORD PTR [rax+0x4],0xfffc
  4169c6:	add    rsp,0x8
  4169ca:	mov    eax,ebp
  4169cc:	pop    rbx
  4169cd:	pop    rbp
  4169ce:	pop    r12
  4169d0:	pop    r13
  4169d2:	ret    
  4169d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4169d8:	xor    r8d,r8d
  4169db:	lea    rsi,[rbx+0x58]
  4169df:	mov    rdi,QWORD PTR [rbx+0x40]
  4169e3:	mov    ecx,0x1
  4169e8:	call   QWORD PTR [rbx+0x50]
  4169eb:	test   eax,eax
  4169ed:	jne    416a1e <flatcc_builder_start_table@@Base+0x13e>
  4169ef:	mov    rax,QWORD PTR [rbx+0x58]
  4169f3:	jmp    41695b <flatcc_builder_start_table@@Base+0x7b>
  4169f8:	nop    DWORD PTR [rax+rax*1+0x0]
  416a00:	xor    ecx,ecx
  416a02:	lea    rsi,[rbx+0x88]
  416a09:	mov    rdi,QWORD PTR [rbx+0x40]
  416a0d:	mov    r8d,0x3
  416a13:	call   QWORD PTR [rbx+0x50]
  416a16:	test   eax,eax
  416a18:	je     416985 <flatcc_builder_start_table@@Base+0xa5>
  416a1e:	call   4052d3 <__sprintf_chk@plt+0x183>
  416a23:	nop    DWORD PTR [rax+rax*1+0x0]
  416a28:	mov    QWORD PTR [rbx+0x8],0x0
  416a30:	add    rsp,0x8
  416a34:	mov    ebp,0xffffffff
  416a39:	pop    rbx
  416a3a:	mov    eax,ebp
  416a3c:	pop    rbp
  416a3d:	pop    r12
  416a3f:	pop    r13
  416a41:	ret    
  416a42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416a4d:	nop    DWORD PTR [rax]

0000000000416a50 <flatcc_builder_create_vtable@@Base>:
  416a50:	push   rbp
  416a51:	push   rbx
  416a52:	mov    rbp,rdi
  416a55:	sub    rsp,0xa8
  416a5c:	mov    rax,QWORD PTR fs:0x28
  416a65:	mov    QWORD PTR [rsp+0x98],rax
  416a6d:	xor    eax,eax
  416a6f:	test   dx,dx
  416a72:	mov    QWORD PTR [rsp],0x0
  416a7a:	mov    DWORD PTR [rsp+0x8],0x0
  416a82:	je     416b10 <flatcc_builder_create_vtable@@Base+0xc0>
  416a88:	mov    QWORD PTR [rsp+0x10],rsi
  416a8d:	mov    esi,DWORD PTR [rdi+0x100]
  416a93:	movzx  r8d,dx
  416a97:	mov    QWORD PTR [rsp],r8
  416a9b:	mov    QWORD PTR [rsp+0x18],r8
  416aa0:	movzx  edx,dx
  416aa3:	mov    DWORD PTR [rsp+0x8],0x1
  416aab:	test   esi,esi
  416aad:	je     416b48 <flatcc_builder_create_vtable@@Base+0xf8>
  416ab3:	mov    eax,DWORD PTR [rbp+0xf0]
  416ab9:	mov    ebx,eax
  416abb:	sub    ebx,edx
  416abd:	cmp    eax,ebx
  416abf:	jle    416b24 <flatcc_builder_create_vtable@@Base+0xd4>
  416ac1:	lea    rsi,[rsp+0x10]
  416ac6:	mov    rdi,QWORD PTR [rbp+0x38]
  416aca:	mov    ecx,ebx
  416acc:	mov    edx,DWORD PTR [rsp+0x8]
  416ad0:	call   QWORD PTR [rbp+0x48]
  416ad3:	test   eax,eax
  416ad5:	jne    416ba0 <flatcc_builder_create_vtable@@Base+0x150>
  416adb:	cmp    ebx,0x1
  416ade:	mov    DWORD PTR [rbp+0xf0],ebx
  416ae4:	sbb    ebx,0xffffffff
  416ae7:	mov    rcx,QWORD PTR [rsp+0x98]
  416aef:	xor    rcx,QWORD PTR fs:0x28
  416af8:	mov    eax,ebx
  416afa:	jne    416b9b <flatcc_builder_create_vtable@@Base+0x14b>
  416b00:	add    rsp,0xa8
  416b07:	pop    rbx
  416b08:	pop    rbp
  416b09:	ret    
  416b0a:	nop    WORD PTR [rax+rax*1+0x0]
  416b10:	mov    edx,DWORD PTR [rdi+0x100]
  416b16:	test   edx,edx
  416b18:	jne    416b24 <flatcc_builder_create_vtable@@Base+0xd4>
  416b1a:	mov    eax,DWORD PTR [rdi+0x124]
  416b20:	test   eax,eax
  416b22:	je     416b90 <flatcc_builder_create_vtable@@Base+0x140>
  416b24:	lea    rcx,[rip+0x18245]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  416b2b:	lea    rsi,[rip+0x177fe]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416b32:	lea    rdi,[rip+0x17b8e]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  416b39:	mov    edx,0x287
  416b3e:	call   405080 <__assert_fail@plt>
  416b43:	nop    DWORD PTR [rax+rax*1+0x0]
  416b48:	mov    ecx,DWORD PTR [rdi+0x124]
  416b4e:	test   ecx,ecx
  416b50:	jne    416ab3 <flatcc_builder_create_vtable@@Base+0x63>
  416b56:	mov    ebx,DWORD PTR [rdi+0xf4]
  416b5c:	add    edx,ebx
  416b5e:	cmp    ebx,edx
  416b60:	mov    DWORD PTR [rdi+0xf4],edx
  416b66:	jg     416bc4 <flatcc_builder_create_vtable@@Base+0x174>
  416b68:	lea    rsi,[rsp+0x10]
  416b6d:	mov    rdi,QWORD PTR [rbp+0x38]
  416b71:	mov    ecx,ebx
  416b73:	mov    edx,DWORD PTR [rsp+0x8]
  416b77:	call   QWORD PTR [rbp+0x48]
  416b7a:	test   eax,eax
  416b7c:	jne    416ba5 <flatcc_builder_create_vtable@@Base+0x155>
  416b7e:	add    ebx,0x1
  416b81:	jmp    416ae7 <flatcc_builder_create_vtable@@Base+0x97>
  416b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b90:	mov    ebx,DWORD PTR [rbp+0xf4]
  416b96:	xor    r8d,r8d
  416b99:	jmp    416b68 <flatcc_builder_create_vtable@@Base+0x118>
  416b9b:	call   405070 <__stack_chk_fail@plt>
  416ba0:	call   405319 <__sprintf_chk@plt+0x1c9>
  416ba5:	lea    rcx,[rip+0x181d4]        # 42ed80 <_IO_stdin_used@@Base+0x3d80>
  416bac:	lea    rsi,[rip+0x1777d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416bb3:	lea    rdi,[rip+0x17b0d]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  416bba:	mov    edx,0x2a5
  416bbf:	call   405080 <__assert_fail@plt>
  416bc4:	call   4052f6 <__sprintf_chk@plt+0x1a6>
  416bc9:	nop    DWORD PTR [rax+0x0]

0000000000416bd0 <flatcc_builder_create_cached_vtable@@Base>:
  416bd0:	push   r15
  416bd2:	push   r14
  416bd4:	mov    r15,rdi
  416bd7:	push   r13
  416bd9:	push   r12
  416bdb:	movzx  r14d,dx
  416bdf:	push   rbp
  416be0:	push   rbx
  416be1:	mov    ebp,ecx
  416be3:	sub    rsp,0x38
  416be7:	mov    rbx,QWORD PTR [rdi+0xd8]
  416bee:	mov    QWORD PTR [rsp+0x10],rsi
  416bf3:	mov    DWORD PTR [rsp+0x2c],edx
  416bf7:	test   rbx,rbx
  416bfa:	je     416d88 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
  416c00:	mov    eax,0x20
  416c05:	sub    eax,ebx
  416c07:	shrx   ebp,ebp,eax
  416c0c:	mov    rax,QWORD PTR [r15+0xa8]
  416c13:	lea    r12,[rax+rbp*4]
  416c17:	test   r12,r12
  416c1a:	je     416d70 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  416c20:	mov    ebp,DWORD PTR [r12]
  416c24:	test   ebp,ebp
  416c26:	je     416e90 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
  416c2c:	movzx  eax,r14w
  416c30:	mov    r11,QWORD PTR [r15+0xb8]
  416c37:	mov    r8,QWORD PTR [r15+0x78]
  416c3b:	mov    r13,r12
  416c3e:	mov    QWORD PTR [rsp+0x20],0x0
  416c47:	mov    QWORD PTR [rsp+0x18],rax
  416c4c:	jmp    416c5b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  416c4e:	xchg   ax,ax
  416c50:	mov    ebp,DWORD PTR [rbx+0xc]
  416c53:	lea    r13,[rbx+0xc]
  416c57:	test   ebp,ebp
  416c59:	je     416cb8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  416c5b:	mov    ebx,ebp
  416c5d:	add    rbx,r11
  416c60:	mov    esi,DWORD PTR [rbx+0x8]
  416c63:	add    rsi,r8
  416c66:	cmp    WORD PTR [rsi],r14w
  416c6a:	jne    416c50 <flatcc_builder_create_cached_vtable@@Base+0x80>
  416c6c:	mov    rdx,QWORD PTR [rsp+0x18]
  416c71:	mov    rdi,QWORD PTR [rsp+0x10]
  416c76:	mov    QWORD PTR [rsp+0x8],r8
  416c7b:	mov    QWORD PTR [rsp],r11
  416c7f:	call   4050b0 <memcmp@plt>
  416c84:	test   eax,eax
  416c86:	mov    r11,QWORD PTR [rsp]
  416c8a:	mov    r8,QWORD PTR [rsp+0x8]
  416c8f:	jne    416c50 <flatcc_builder_create_cached_vtable@@Base+0x80>
  416c91:	mov    eax,DWORD PTR [r15+0x100]
  416c98:	cmp    DWORD PTR [rbx+0x4],eax
  416c9b:	je     416d40 <flatcc_builder_create_cached_vtable@@Base+0x170>
  416ca1:	mov    ebp,DWORD PTR [rbx+0xc]
  416ca4:	lea    r13,[rbx+0xc]
  416ca8:	mov    QWORD PTR [rsp+0x20],rbx
  416cad:	test   ebp,ebp
  416caf:	jne    416c5b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  416cb1:	nop    DWORD PTR [rax+0x0]
  416cb8:	mov    ebx,DWORD PTR [r15+0xe4]
  416cbf:	lea    rdx,[rbx+0x10]
  416cc3:	cmp    rdx,QWORD PTR [r15+0xc0]
  416cca:	ja     416e68 <flatcc_builder_create_cached_vtable@@Base+0x298>
  416cd0:	add    rbx,QWORD PTR [r15+0xb8]
  416cd7:	je     416d70 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  416cdd:	mov    eax,DWORD PTR [r15+0xe4]
  416ce4:	movzx  ebp,WORD PTR [rsp+0x2c]
  416ce9:	mov    rdi,r15
  416cec:	mov    rsi,QWORD PTR [rsp+0x10]
  416cf1:	lea    edx,[rax+0x10]
  416cf4:	mov    DWORD PTR [r15+0xe4],edx
  416cfb:	mov    edx,DWORD PTR [r15+0x100]
  416d02:	mov    DWORD PTR [rbx+0x4],edx
  416d05:	mov    edx,DWORD PTR [r12]
  416d09:	mov    DWORD PTR [rbx+0xc],edx
  416d0c:	mov    DWORD PTR [r12],eax
  416d10:	mov    edx,ebp
  416d12:	call   416a50 <flatcc_builder_create_vtable@@Base>
  416d17:	test   eax,eax
  416d19:	mov    DWORD PTR [rbx],eax
  416d1b:	je     416d70 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  416d1d:	mov    rdi,QWORD PTR [rsp+0x20]
  416d22:	test   rdi,rdi
  416d25:	je     416e9e <flatcc_builder_create_cached_vtable@@Base+0x2ce>
  416d2b:	mov    edx,DWORD PTR [rdi+0x8]
  416d2e:	mov    DWORD PTR [rbx+0x8],edx
  416d31:	add    rsp,0x38
  416d35:	pop    rbx
  416d36:	pop    rbp
  416d37:	pop    r12
  416d39:	pop    r13
  416d3b:	pop    r14
  416d3d:	pop    r15
  416d3f:	ret    
  416d40:	cmp    r12,r13
  416d43:	je     416d57 <flatcc_builder_create_cached_vtable@@Base+0x187>
  416d45:	mov    eax,DWORD PTR [rbx+0xc]
  416d48:	mov    DWORD PTR [r13+0x0],eax
  416d4c:	mov    eax,DWORD PTR [r12]
  416d50:	mov    DWORD PTR [rbx+0xc],eax
  416d53:	mov    DWORD PTR [r12],ebp
  416d57:	mov    eax,DWORD PTR [rbx]
  416d59:	add    rsp,0x38
  416d5d:	pop    rbx
  416d5e:	pop    rbp
  416d5f:	pop    r12
  416d61:	pop    r13
  416d63:	pop    r14
  416d65:	pop    r15
  416d67:	ret    
  416d68:	nop    DWORD PTR [rax+rax*1+0x0]
  416d70:	add    rsp,0x38
  416d74:	xor    eax,eax
  416d76:	pop    rbx
  416d77:	pop    rbp
  416d78:	pop    r12
  416d7a:	pop    r13
  416d7c:	pop    r14
  416d7e:	pop    r15
  416d80:	ret    
  416d81:	nop    DWORD PTR [rax+0x0]
  416d88:	mov    eax,DWORD PTR [rdi+0xe4]
  416d8e:	lea    r12,[rdi+0xa8]
  416d95:	test   eax,eax
  416d97:	jne    416f2f <flatcc_builder_create_cached_vtable@@Base+0x35f>
  416d9d:	cmp    QWORD PTR [rdi+0xc0],0xf
  416da5:	jbe    416e38 <flatcc_builder_create_cached_vtable@@Base+0x268>
  416dab:	cmp    QWORD PTR [r15+0xb8],0x0
  416db3:	je     416d70 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  416db5:	mov    DWORD PTR [r15+0xe4],0x10
  416dc0:	mov    rdi,QWORD PTR [r15+0x40]
  416dc4:	mov    r8d,0x5
  416dca:	mov    ecx,0x1
  416dcf:	mov    edx,0x100
  416dd4:	mov    rsi,r12
  416dd7:	call   QWORD PTR [r15+0x50]
  416ddb:	test   eax,eax
  416ddd:	jne    416d70 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  416ddf:	mov    rcx,QWORD PTR [r15+0xb0]
  416de6:	mov    eax,0x100
  416deb:	jmp    416df3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  416ded:	nop    DWORD PTR [rax]
  416df0:	mov    rax,rdx
  416df3:	lea    rdx,[rax+rax*1]
  416df7:	cmp    rdx,rcx
  416dfa:	jbe    416df0 <flatcc_builder_create_cached_vtable@@Base+0x220>
  416dfc:	shr    rax,0x2
  416e00:	cmp    rax,0x1
  416e04:	jbe    416ef8 <flatcc_builder_create_cached_vtable@@Base+0x328>
  416e0a:	mov    esi,0x1
  416e0f:	nop
  416e10:	add    rbx,0x1
  416e14:	shlx   rdx,rsi,rbx
  416e19:	cmp    rax,rdx
  416e1c:	ja     416e10 <flatcc_builder_create_cached_vtable@@Base+0x240>
  416e1e:	mov    eax,0x20
  416e23:	sub    eax,ebx
  416e25:	mov    QWORD PTR [r15+0xd8],rbx
  416e2c:	jmp    416c07 <flatcc_builder_create_cached_vtable@@Base+0x37>
  416e31:	nop    DWORD PTR [rax+0x0]
  416e38:	lea    rsi,[rdi+0xb8]
  416e3f:	xor    ecx,ecx
  416e41:	mov    rdi,QWORD PTR [rdi+0x40]
  416e45:	mov    r8d,0x6
  416e4b:	mov    edx,0x10
  416e50:	call   QWORD PTR [r15+0x50]
  416e54:	test   eax,eax
  416e56:	je     416dab <flatcc_builder_create_cached_vtable@@Base+0x1db>
  416e5c:	jmp    416f1a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  416e61:	nop    DWORD PTR [rax+0x0]
  416e68:	xor    ecx,ecx
  416e6a:	lea    rsi,[r15+0xb8]
  416e71:	mov    rdi,QWORD PTR [r15+0x40]
  416e75:	mov    r8d,0x6
  416e7b:	call   QWORD PTR [r15+0x50]
  416e7f:	test   eax,eax
  416e81:	je     416cd0 <flatcc_builder_create_cached_vtable@@Base+0x100>
  416e87:	jmp    416f1a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  416e8c:	nop    DWORD PTR [rax+0x0]
  416e90:	mov    QWORD PTR [rsp+0x20],0x0
  416e99:	jmp    416cb8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  416e9e:	mov    rax,QWORD PTR [r15+0x118]
  416ea5:	mov    r12d,DWORD PTR [r15+0xe0]
  416eac:	test   rax,rax
  416eaf:	je     416ebb <flatcc_builder_create_cached_vtable@@Base+0x2eb>
  416eb1:	lea    edx,[rbp+r12*1+0x0]
  416eb6:	cmp    rax,rdx
  416eb9:	jb     416f20 <flatcc_builder_create_cached_vtable@@Base+0x350>
  416ebb:	lea    rdx,[r14+r12*1]
  416ebf:	cmp    rdx,QWORD PTR [r15+0x80]
  416ec6:	ja     416f02 <flatcc_builder_create_cached_vtable@@Base+0x332>
  416ec8:	mov    rdi,r12
  416ecb:	add    rdi,QWORD PTR [r15+0x78]
  416ecf:	je     416f4e <flatcc_builder_create_cached_vtable@@Base+0x37e>
  416ed1:	mov    eax,DWORD PTR [r15+0xe0]
  416ed8:	mov    rsi,QWORD PTR [rsp+0x10]
  416edd:	mov    rdx,r14
  416ee0:	add    ebp,eax
  416ee2:	mov    DWORD PTR [rbx+0x8],eax
  416ee5:	mov    DWORD PTR [r15+0xe0],ebp
  416eec:	call   4050e0 <memcpy@plt>
  416ef1:	mov    eax,DWORD PTR [rbx]
  416ef3:	jmp    416d31 <flatcc_builder_create_cached_vtable@@Base+0x161>
  416ef8:	mov    eax,0x20
  416efd:	jmp    416e25 <flatcc_builder_create_cached_vtable@@Base+0x255>
  416f02:	xor    ecx,ecx
  416f04:	lea    rsi,[r15+0x78]
  416f08:	mov    rdi,QWORD PTR [r15+0x40]
  416f0c:	mov    r8d,0x2
  416f12:	call   QWORD PTR [r15+0x50]
  416f16:	test   eax,eax
  416f18:	je     416ec8 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
  416f1a:	call   4052d3 <__sprintf_chk@plt+0x183>
  416f1f:	nop
  416f20:	mov    rdi,r15
  416f23:	call   4151a0 <flatcc_builder_flush_vtable_cache@@Base>
  416f28:	mov    eax,DWORD PTR [rbx]
  416f2a:	jmp    416d59 <flatcc_builder_create_cached_vtable@@Base+0x189>
  416f2f:	lea    rcx,[rip+0x17bfa]        # 42eb30 <_IO_stdin_used@@Base+0x3b30>
  416f36:	lea    rsi,[rip+0x173f3]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  416f3d:	lea    rdi,[rip+0x177c9]        # 42e70d <_IO_stdin_used@@Base+0x370d>
  416f44:	mov    edx,0x156
  416f49:	call   405080 <__assert_fail@plt>
  416f4e:	mov    eax,0xffffffff
  416f53:	jmp    416d31 <flatcc_builder_create_cached_vtable@@Base+0x161>
  416f58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000416f60 <flatcc_builder_create_table@@Base>:
  416f60:	push   rbp
  416f61:	push   rbx
  416f62:	sub    rsp,0xb8
  416f69:	mov    rax,QWORD PTR fs:0x28
  416f72:	mov    QWORD PTR [rsp+0xa8],rax
  416f7a:	xor    eax,eax
  416f7c:	test   r9d,r9d
  416f7f:	mov    r11d,DWORD PTR [rsp+0xd0]
  416f87:	js     41712d <flatcc_builder_create_table@@Base+0x1cd>
  416f8d:	test   r11b,0x1
  416f91:	je     41710e <flatcc_builder_create_table@@Base+0x1ae>
  416f97:	cmp    cx,0x4
  416f9b:	mov    eax,0x4
  416fa0:	mov    rbx,rdi
  416fa3:	cmovb  ecx,eax
  416fa6:	cmp    WORD PTR [rdi+0xe8],cx
  416fad:	movzx  eax,cx
  416fb0:	jae    416fb9 <flatcc_builder_create_table@@Base+0x59>
  416fb2:	mov    WORD PTR [rdi+0xe8],cx
  416fb9:	mov    ecx,DWORD PTR [rbx+0xf0]
  416fbf:	sub    eax,0x1
  416fc2:	mov    edi,0xfffffffc
  416fc7:	sub    r11d,0x1
  416fcb:	mov    r10d,ecx
  416fce:	sub    r10d,edx
  416fd1:	and    r10d,eax
  416fd4:	mov    eax,edi
  416fd6:	sub    eax,edx
  416fd8:	add    eax,ecx
  416fda:	sub    eax,r10d
  416fdd:	mov    ebp,eax
  416fdf:	sub    ebp,r11d
  416fe2:	test   r9d,r9d
  416fe5:	mov    DWORD PTR [rsp+0xc],ebp
  416fe9:	je     41701d <flatcc_builder_create_table@@Base+0xbd>
  416feb:	lea    ecx,[r9-0x1]
  416fef:	sub    edi,eax
  416ff1:	lea    r9,[r8+rcx*2+0x2]
  416ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417000:	movzx  ecx,WORD PTR [r8]
  417004:	mov    r11d,edi
  417007:	add    r8,0x2
  41700b:	sub    r11d,ecx
  41700e:	add    DWORD PTR [rsi+rcx*1],r11d
  417012:	cmp    r9,r8
  417015:	jne    417000 <flatcc_builder_create_table@@Base+0xa0>
  417017:	mov    ecx,DWORD PTR [rbx+0xf0]
  41701d:	lea    rax,[rsp+0xc]
  417022:	test   rdx,rdx
  417025:	mov    QWORD PTR [rsp+0x10],0x4
  41702e:	mov    QWORD PTR [rsp+0x28],0x4
  417037:	mov    DWORD PTR [rsp+0x18],0x1
  41703f:	mov    r8d,0x4
  417045:	mov    QWORD PTR [rsp+0x20],rax
  41704a:	je     417067 <flatcc_builder_create_table@@Base+0x107>
  41704c:	lea    r8,[rdx+0x4]
  417050:	mov    QWORD PTR [rsp+0x30],rsi
  417055:	mov    QWORD PTR [rsp+0x38],rdx
  41705a:	mov    DWORD PTR [rsp+0x18],0x2
  417062:	mov    QWORD PTR [rsp+0x10],r8
  417067:	test   r10d,r10d
  41706a:	je     417098 <flatcc_builder_create_table@@Base+0x138>
  41706c:	movsxd rdx,DWORD PTR [rsp+0x18]
  417071:	mov    rsi,0x42ee20
  417078:	add    r8,r10
  41707b:	mov    QWORD PTR [rsp+0x10],r8
  417080:	mov    rax,rdx
  417083:	shl    rdx,0x4
  417087:	add    eax,0x1
  41708a:	mov    QWORD PTR [rsp+rdx*1+0x20],rsi
  41708f:	mov    QWORD PTR [rsp+rdx*1+0x28],r10
  417094:	mov    DWORD PTR [rsp+0x18],eax
  417098:	mov    ebp,ecx
  41709a:	movabs rax,0x10000000f
  4170a4:	sub    ebp,r8d
  4170a7:	cmp    r8,rax
  4170aa:	ja     4170ef <flatcc_builder_create_table@@Base+0x18f>
  4170ac:	cmp    ebp,ecx
  4170ae:	jge    4170ef <flatcc_builder_create_table@@Base+0x18f>
  4170b0:	lea    rsi,[rsp+0x20]
  4170b5:	mov    rdi,QWORD PTR [rbx+0x38]
  4170b9:	mov    ecx,ebp
  4170bb:	mov    edx,DWORD PTR [rsp+0x18]
  4170bf:	call   QWORD PTR [rbx+0x48]
  4170c2:	test   eax,eax
  4170c4:	jne    417151 <flatcc_builder_create_table@@Base+0x1f1>
  4170ca:	mov    DWORD PTR [rbx+0xf0],ebp
  4170d0:	mov    eax,ebp
  4170d2:	mov    rbx,QWORD PTR [rsp+0xa8]
  4170da:	xor    rbx,QWORD PTR fs:0x28
  4170e3:	jne    41714c <flatcc_builder_create_table@@Base+0x1ec>
  4170e5:	add    rsp,0xb8
  4170ec:	pop    rbx
  4170ed:	pop    rbp
  4170ee:	ret    
  4170ef:	lea    rcx,[rip+0x17c7a]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  4170f6:	lea    rsi,[rip+0x17233]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4170fd:	lea    rdi,[rip+0x175c3]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  417104:	mov    edx,0x287
  417109:	call   405080 <__assert_fail@plt>
  41710e:	lea    rcx,[rip+0x179fb]        # 42eb10 <_IO_stdin_used@@Base+0x3b10>
  417115:	lea    rsi,[rip+0x17214]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41711c:	lea    rdi,[rip+0x1760b]        # 42e72e <_IO_stdin_used@@Base+0x372e>
  417123:	mov    edx,0x4db
  417128:	call   405080 <__assert_fail@plt>
  41712d:	lea    rcx,[rip+0x179dc]        # 42eb10 <_IO_stdin_used@@Base+0x3b10>
  417134:	lea    rsi,[rip+0x171f5]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41713b:	lea    rdi,[rip+0x175da]        # 42e71c <_IO_stdin_used@@Base+0x371c>
  417142:	mov    edx,0x4d5
  417147:	call   405080 <__assert_fail@plt>
  41714c:	call   405070 <__stack_chk_fail@plt>
  417151:	call   405319 <__sprintf_chk@plt+0x1c9>
  417156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000417160 <flatcc_builder_check_required_field@@Base>:
  417160:	mov    rax,QWORD PTR [rdi+0x30]
  417164:	cmp    WORD PTR [rax+0xe],0x3
  417169:	jne    417186 <flatcc_builder_check_required_field@@Base+0x26>
  41716b:	xor    eax,eax
  41716d:	cmp    WORD PTR [rdi+0x10],si
  417171:	jbe    417182 <flatcc_builder_check_required_field@@Base+0x22>
  417173:	mov    rax,QWORD PTR [rdi+0x8]
  417177:	movzx  edx,si
  41717a:	cmp    WORD PTR [rax+rdx*2],0x0
  41717f:	setne  al
  417182:	movzx  eax,al
  417185:	ret    
  417186:	lea    rcx,[rip+0x17953]        # 42eae0 <_IO_stdin_used@@Base+0x3ae0>
  41718d:	lea    rsi,[rip+0x1719c]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417194:	lea    rdi,[rip+0x173dd]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  41719b:	sub    rsp,0x8
  41719f:	mov    edx,0x4f8
  4171a4:	call   405080 <__assert_fail@plt>
  4171a9:	nop    DWORD PTR [rax+0x0]

00000000004171b0 <flatcc_builder_check_union_field@@Base>:
  4171b0:	mov    rax,QWORD PTR [rdi+0x30]
  4171b4:	cmp    WORD PTR [rax+0xe],0x3
  4171b9:	jne    4171fb <flatcc_builder_check_union_field@@Base+0x4b>
  4171bb:	xor    eax,eax
  4171bd:	test   si,si
  4171c0:	je     4171ed <flatcc_builder_check_union_field@@Base+0x3d>
  4171c2:	cmp    si,WORD PTR [rdi+0x10]
  4171c6:	jae    4171ed <flatcc_builder_check_union_field@@Base+0x3d>
  4171c8:	mov    rcx,QWORD PTR [rdi+0x8]
  4171cc:	movzx  edx,si
  4171cf:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  4171d4:	test   ax,ax
  4171d7:	je     4171e3 <flatcc_builder_check_union_field@@Base+0x33>
  4171d9:	mov    rsi,QWORD PTR [rdi+0x18]
  4171dd:	cmp    BYTE PTR [rsi+rax*1],0x0
  4171e1:	jne    4171f0 <flatcc_builder_check_union_field@@Base+0x40>
  4171e3:	xor    eax,eax
  4171e5:	cmp    WORD PTR [rcx+rdx*2],0x0
  4171ea:	sete   al
  4171ed:	repz ret 
  4171ef:	nop
  4171f0:	xor    eax,eax
  4171f2:	cmp    WORD PTR [rcx+rdx*2],0x0
  4171f7:	setne  al
  4171fa:	ret    
  4171fb:	lea    rcx,[rip+0x1789e]        # 42eaa0 <_IO_stdin_used@@Base+0x3aa0>
  417202:	lea    rsi,[rip+0x17127]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417209:	lea    rdi,[rip+0x17368]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  417210:	sub    rsp,0x8
  417214:	mov    edx,0x4ff
  417219:	call   405080 <__assert_fail@plt>
  41721e:	xchg   ax,ax

0000000000417220 <flatcc_builder_check_required@@Base>:
  417220:	mov    rax,QWORD PTR [rdi+0x30]
  417224:	cmp    WORD PTR [rax+0xe],0x3
  417229:	jne    41727b <flatcc_builder_check_required@@Base+0x5b>
  41722b:	movzx  ecx,WORD PTR [rdi+0x10]
  41722f:	xor    eax,eax
  417231:	cmp    ecx,edx
  417233:	jl     417270 <flatcc_builder_check_required@@Base+0x50>
  417235:	test   edx,edx
  417237:	jle    41726b <flatcc_builder_check_required@@Base+0x4b>
  417239:	mov    rcx,QWORD PTR [rdi+0x8]
  41723d:	movzx  edi,WORD PTR [rsi]
  417240:	cmp    WORD PTR [rcx+rdi*2],0x0
  417245:	je     417270 <flatcc_builder_check_required@@Base+0x50>
  417247:	sub    edx,0x1
  41724a:	lea    rax,[rsi+0x2]
  41724e:	lea    rsi,[rsi+rdx*2+0x2]
  417253:	jmp    417266 <flatcc_builder_check_required@@Base+0x46>
  417255:	nop    DWORD PTR [rax]
  417258:	movzx  edx,WORD PTR [rax]
  41725b:	add    rax,0x2
  41725f:	cmp    WORD PTR [rcx+rdx*2],0x0
  417264:	je     417278 <flatcc_builder_check_required@@Base+0x58>
  417266:	cmp    rax,rsi
  417269:	jne    417258 <flatcc_builder_check_required@@Base+0x38>
  41726b:	mov    eax,0x1
  417270:	repz ret 
  417272:	nop    WORD PTR [rax+rax*1+0x0]
  417278:	xor    eax,eax
  41727a:	ret    
  41727b:	lea    rcx,[rip+0x177ee]        # 42ea70 <_IO_stdin_used@@Base+0x3a70>
  417282:	lea    rsi,[rip+0x170a7]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417289:	lea    rdi,[rip+0x172e8]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  417290:	sub    rsp,0x8
  417294:	mov    edx,0x511
  417299:	call   405080 <__assert_fail@plt>
  41729e:	xchg   ax,ax

00000000004172a0 <flatcc_builder_end_table@@Base>:
  4172a0:	push   r13
  4172a2:	push   r12
  4172a4:	push   rbp
  4172a5:	push   rbx
  4172a6:	sub    rsp,0x8
  4172aa:	mov    rax,QWORD PTR [rdi+0x30]
  4172ae:	cmp    WORD PTR [rax+0xe],0x3
  4172b3:	jne    41740e <flatcc_builder_end_table@@Base+0x16e>
  4172b9:	movzx  ebp,WORD PTR [rdi+0x10]
  4172bd:	movzx  eax,WORD PTR [rdi+0x20]
  4172c1:	mov    rbx,rdi
  4172c4:	mov    rcx,QWORD PTR [rdi+0x8]
  4172c8:	add    ebp,0x2
  4172cb:	add    eax,0x4
  4172ce:	lea    r12,[rcx-0x4]
  4172d2:	add    ebp,ebp
  4172d4:	mov    WORD PTR [rcx-0x2],ax
  4172d8:	movzx  eax,ax
  4172db:	mov    WORD PTR [rcx-0x4],bp
  4172df:	mov    ecx,DWORD PTR [rdi+0x14]
  4172e2:	movzx  edx,bp
  4172e5:	mov    rsi,r12
  4172e8:	xor    ecx,edx
  4172ea:	imul   ecx,ecx,0x9e3779b1
  4172f0:	xor    ecx,eax
  4172f2:	imul   ecx,ecx,0x9e3779b1
  4172f8:	mov    DWORD PTR [rdi+0x14],ecx
  4172fb:	call   416bd0 <flatcc_builder_create_cached_vtable@@Base>
  417300:	test   eax,eax
  417302:	mov    r13d,eax
  417305:	jne    417320 <flatcc_builder_end_table@@Base+0x80>
  417307:	add    rsp,0x8
  41730b:	xor    ebp,ebp
  41730d:	pop    rbx
  41730e:	mov    eax,ebp
  417310:	pop    rbp
  417311:	pop    r12
  417313:	pop    r13
  417315:	ret    
  417316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417320:	movzx  edx,bp
  417323:	xor    esi,esi
  417325:	mov    rdi,r12
  417328:	call   405090 <memset@plt>
  41732d:	mov    rax,QWORD PTR [rbx+0x30]
  417331:	mov    r9,QWORD PTR [rbx]
  417334:	sub    rsp,0x8
  417338:	mov    edx,DWORD PTR [rbx+0x20]
  41733b:	movzx  ecx,WORD PTR [rbx+0xea]
  417342:	mov    rdi,rbx
  417345:	mov    rsi,QWORD PTR [rbx+0x18]
  417349:	mov    r8d,DWORD PTR [rax+0x14]
  41734d:	add    r8,QWORD PTR [rbx+0x88]
  417354:	push   r13
  417356:	sub    r9,r8
  417359:	shr    r9,1
  41735c:	call   416f60 <flatcc_builder_create_table@@Base>
  417361:	mov    ebp,eax
  417363:	test   ebp,ebp
  417365:	pop    rax
  417366:	pop    rdx
  417367:	je     417307 <flatcc_builder_end_table@@Base+0x67>
  417369:	mov    rax,QWORD PTR [rbx+0x30]
  41736d:	mov    rdi,QWORD PTR [rbx+0x18]
  417371:	xor    esi,esi
  417373:	mov    edx,DWORD PTR [rax+0x18]
  417376:	mov    DWORD PTR [rbx+0x14],edx
  417379:	movzx  edx,WORD PTR [rax+0x1c]
  41737d:	mov    WORD PTR [rbx+0x10],dx
  417381:	mov    edx,DWORD PTR [rax+0x10]
  417384:	add    rdx,QWORD PTR [rbx+0x58]
  417388:	mov    QWORD PTR [rbx+0x8],rdx
  41738c:	mov    eax,DWORD PTR [rax+0x14]
  41738f:	add    rax,QWORD PTR [rbx+0x88]
  417396:	mov    edx,DWORD PTR [rbx+0x20]
  417399:	mov    QWORD PTR [rbx],rax
  41739c:	call   405090 <memset@plt>
  4173a1:	mov    rax,QWORD PTR [rbx+0x30]
  4173a5:	mov    edi,DWORD PTR [rbx+0x70]
  4173a8:	mov    esi,DWORD PTR [rax]
  4173aa:	mov    edx,DWORD PTR [rax+0x8]
  4173ad:	mov    ecx,DWORD PTR [rax+0x4]
  4173b0:	mov    DWORD PTR [rbx+0x20],edx
  4173b3:	mov    rdx,rsi
  4173b6:	mov    DWORD PTR [rbx+0x28],esi
  4173b9:	add    rsi,QWORD PTR [rbx+0x68]
  4173bd:	sub    edi,edx
  4173bf:	cmp    ecx,edi
  4173c1:	mov    edx,edi
  4173c3:	cmovb  edx,ecx
  4173c6:	mov    DWORD PTR [rbx+0x24],edx
  4173c9:	movzx  edx,WORD PTR [rbx+0xea]
  4173d0:	cmp    dx,WORD PTR [rbx+0xe8]
  4173d7:	mov    QWORD PTR [rbx+0x18],rsi
  4173db:	mov    DWORD PTR [rax+0x4],ecx
  4173de:	jbe    4173e7 <flatcc_builder_end_table@@Base+0x147>
  4173e0:	mov    WORD PTR [rbx+0xe8],dx
  4173e7:	movzx  edx,WORD PTR [rax+0xc]
  4173eb:	sub    rax,0x24
  4173ef:	sub    DWORD PTR [rbx+0x104],0x1
  4173f6:	mov    QWORD PTR [rbx+0x30],rax
  4173fa:	mov    eax,ebp
  4173fc:	mov    WORD PTR [rbx+0xea],dx
  417403:	add    rsp,0x8
  417407:	pop    rbx
  417408:	pop    rbp
  417409:	pop    r12
  41740b:	pop    r13
  41740d:	ret    
  41740e:	lea    rcx,[rip+0x1763b]        # 42ea50 <_IO_stdin_used@@Base+0x3a50>
  417415:	lea    rsi,[rip+0x16f14]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41741c:	lea    rdi,[rip+0x17155]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  417423:	mov    edx,0x525
  417428:	call   405080 <__assert_fail@plt>
  41742d:	nop    DWORD PTR [rax]

0000000000417430 <flatcc_builder_create_vector@@Base>:
  417430:	push   rbp
  417431:	push   rbx
  417432:	sub    rsp,0xb8
  417439:	mov    rax,QWORD PTR fs:0x28
  417442:	mov    QWORD PTR [rsp+0xa8],rax
  41744a:	xor    eax,eax
  41744c:	cmp    rdx,r9
  41744f:	ja     417594 <flatcc_builder_create_vector@@Base+0x164>
  417455:	mov    rbx,rdi
  417458:	cmp    r8w,0x4
  41745d:	mov    eax,0x4
  417462:	cmovb  r8d,eax
  417466:	cmp    r8w,WORD PTR [rbx+0xe8]
  41746e:	movzx  edi,r8w
  417472:	jbe    41747c <flatcc_builder_create_vector@@Base+0x4c>
  417474:	mov    WORD PTR [rbx+0xe8],r8w
  41747c:	imul   ecx,edx
  41747f:	mov    DWORD PTR [rsp+0xc],edx
  417483:	mov    edx,DWORD PTR [rbx+0xf0]
  417489:	sub    edi,0x1
  41748c:	mov    QWORD PTR [rsp+0x10],0x4
  417495:	mov    QWORD PTR [rsp+0x28],0x4
  41749e:	mov    DWORD PTR [rsp+0x18],0x1
  4174a6:	mov    r8d,0x4
  4174ac:	mov    eax,edx
  4174ae:	sub    eax,ecx
  4174b0:	and    eax,edi
  4174b2:	lea    rdi,[rsp+0xc]
  4174b7:	test   ecx,ecx
  4174b9:	mov    QWORD PTR [rsp+0x20],rdi
  4174be:	jne    417550 <flatcc_builder_create_vector@@Base+0x120>
  4174c4:	test   eax,eax
  4174c6:	je     4174f4 <flatcc_builder_create_vector@@Base+0xc4>
  4174c8:	movsxd rsi,DWORD PTR [rsp+0x18]
  4174cd:	mov    rdi,0x42ee20
  4174d4:	add    r8,rax
  4174d7:	mov    QWORD PTR [rsp+0x10],r8
  4174dc:	mov    rcx,rsi
  4174df:	shl    rsi,0x4
  4174e3:	add    ecx,0x1
  4174e6:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  4174eb:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  4174f0:	mov    DWORD PTR [rsp+0x18],ecx
  4174f4:	mov    ebp,edx
  4174f6:	movabs rax,0x10000000f
  417500:	sub    ebp,r8d
  417503:	cmp    r8,rax
  417506:	ja     417570 <flatcc_builder_create_vector@@Base+0x140>
  417508:	cmp    edx,ebp
  41750a:	jle    417570 <flatcc_builder_create_vector@@Base+0x140>
  41750c:	lea    rsi,[rsp+0x20]
  417511:	mov    rdi,QWORD PTR [rbx+0x38]
  417515:	mov    ecx,ebp
  417517:	mov    edx,DWORD PTR [rsp+0x18]
  41751b:	call   QWORD PTR [rbx+0x48]
  41751e:	test   eax,eax
  417520:	jne    41758f <flatcc_builder_create_vector@@Base+0x15f>
  417522:	mov    DWORD PTR [rbx+0xf0],ebp
  417528:	mov    eax,ebp
  41752a:	mov    rbx,QWORD PTR [rsp+0xa8]
  417532:	xor    rbx,QWORD PTR fs:0x28
  41753b:	jne    4175b3 <flatcc_builder_create_vector@@Base+0x183>
  41753d:	add    rsp,0xb8
  417544:	pop    rbx
  417545:	pop    rbp
  417546:	ret    
  417547:	nop    WORD PTR [rax+rax*1+0x0]
  417550:	lea    r8,[rcx+0x4]
  417554:	mov    QWORD PTR [rsp+0x30],rsi
  417559:	mov    QWORD PTR [rsp+0x38],rcx
  41755e:	mov    DWORD PTR [rsp+0x18],0x2
  417566:	mov    QWORD PTR [rsp+0x10],r8
  41756b:	jmp    4174c4 <flatcc_builder_create_vector@@Base+0x94>
  417570:	lea    rcx,[rip+0x177f9]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  417577:	lea    rsi,[rip+0x16db2]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41757e:	lea    rdi,[rip+0x17142]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  417585:	mov    edx,0x287
  41758a:	call   405080 <__assert_fail@plt>
  41758f:	call   405319 <__sprintf_chk@plt+0x1c9>
  417594:	lea    rcx,[rip+0x17495]        # 42ea30 <_IO_stdin_used@@Base+0x3a30>
  41759b:	lea    rsi,[rip+0x16d8e]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4175a2:	lea    rdi,[rip+0x17190]        # 42e739 <_IO_stdin_used@@Base+0x3739>
  4175a9:	mov    edx,0x555
  4175ae:	call   405080 <__assert_fail@plt>
  4175b3:	call   405070 <__stack_chk_fail@plt>
  4175b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004175c0 <flatcc_builder_end_vector@@Base>:
  4175c0:	push   rbp
  4175c1:	push   rbx
  4175c2:	sub    rsp,0x8
  4175c6:	mov    rax,QWORD PTR [rdi+0x30]
  4175ca:	cmp    WORD PTR [rax+0xe],0x4
  4175cf:	jne    41767f <flatcc_builder_end_vector@@Base+0xbf>
  4175d5:	mov    ecx,DWORD PTR [rax+0x10]
  4175d8:	mov    edx,DWORD PTR [rax+0x14]
  4175db:	mov    rbx,rdi
  4175de:	mov    r9d,DWORD PTR [rax+0x18]
  4175e2:	movzx  r8d,WORD PTR [rdi+0xea]
  4175ea:	mov    rsi,QWORD PTR [rdi+0x18]
  4175ee:	call   417430 <flatcc_builder_create_vector@@Base>
  4175f3:	test   eax,eax
  4175f5:	mov    ebp,eax
  4175f7:	jne    417608 <flatcc_builder_end_vector@@Base+0x48>
  4175f9:	add    rsp,0x8
  4175fd:	mov    eax,ebp
  4175ff:	pop    rbx
  417600:	pop    rbp
  417601:	ret    
  417602:	nop    WORD PTR [rax+rax*1+0x0]
  417608:	mov    edx,DWORD PTR [rbx+0x20]
  41760b:	mov    rdi,QWORD PTR [rbx+0x18]
  41760f:	xor    esi,esi
  417611:	call   405090 <memset@plt>
  417616:	mov    rax,QWORD PTR [rbx+0x30]
  41761a:	mov    edi,DWORD PTR [rbx+0x70]
  41761d:	mov    esi,DWORD PTR [rax]
  41761f:	mov    edx,DWORD PTR [rax+0x8]
  417622:	mov    ecx,DWORD PTR [rax+0x4]
  417625:	mov    DWORD PTR [rbx+0x20],edx
  417628:	mov    rdx,rsi
  41762b:	mov    DWORD PTR [rbx+0x28],esi
  41762e:	add    rsi,QWORD PTR [rbx+0x68]
  417632:	sub    edi,edx
  417634:	cmp    ecx,edi
  417636:	mov    edx,edi
  417638:	cmovb  edx,ecx
  41763b:	mov    DWORD PTR [rbx+0x24],edx
  41763e:	movzx  edx,WORD PTR [rbx+0xea]
  417645:	cmp    dx,WORD PTR [rbx+0xe8]
  41764c:	mov    QWORD PTR [rbx+0x18],rsi
  417650:	mov    DWORD PTR [rax+0x4],ecx
  417653:	jbe    41765c <flatcc_builder_end_vector@@Base+0x9c>
  417655:	mov    WORD PTR [rbx+0xe8],dx
  41765c:	movzx  edx,WORD PTR [rax+0xc]
  417660:	sub    rax,0x24
  417664:	sub    DWORD PTR [rbx+0x104],0x1
  41766b:	mov    QWORD PTR [rbx+0x30],rax
  41766f:	mov    eax,ebp
  417671:	mov    WORD PTR [rbx+0xea],dx
  417678:	add    rsp,0x8
  41767c:	pop    rbx
  41767d:	pop    rbp
  41767e:	ret    
  41767f:	lea    rcx,[rip+0x1738a]        # 42ea10 <_IO_stdin_used@@Base+0x3a10>
  417686:	lea    rsi,[rip+0x16ca3]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41768d:	lea    rdi,[rip+0x16d7c]        # 42e410 <_IO_stdin_used@@Base+0x3410>
  417694:	mov    edx,0x578
  417699:	call   405080 <__assert_fail@plt>
  41769e:	xchg   ax,ax

00000000004176a0 <flatcc_builder_vector_count@@Base>:
  4176a0:	mov    rax,QWORD PTR [rdi+0x30]
  4176a4:	mov    eax,DWORD PTR [rax+0x14]
  4176a7:	ret    
  4176a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004176b0 <flatcc_builder_vector_edit@@Base>:
  4176b0:	mov    rax,QWORD PTR [rdi+0x18]
  4176b4:	ret    
  4176b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004176c0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4176c0:	xor    ecx,ecx
  4176c2:	jmp    414f70 <flatcc_builder_default_alloc@@Base+0x390>
  4176c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004176d0 <flatcc_builder_end_offset_vector@@Base>:
  4176d0:	push   rbp
  4176d1:	push   rbx
  4176d2:	sub    rsp,0x8
  4176d6:	mov    rax,QWORD PTR [rdi+0x30]
  4176da:	cmp    WORD PTR [rax+0xe],0x5
  4176df:	jne    41777f <flatcc_builder_end_offset_vector@@Base+0xaf>
  4176e5:	mov    edx,DWORD PTR [rax+0x14]
  4176e8:	mov    rsi,QWORD PTR [rdi+0x18]
  4176ec:	mov    rbx,rdi
  4176ef:	call   4176c0 <flatcc_builder_create_offset_vector_direct@@Base>
  4176f4:	test   eax,eax
  4176f6:	mov    ebp,eax
  4176f8:	jne    417708 <flatcc_builder_end_offset_vector@@Base+0x38>
  4176fa:	add    rsp,0x8
  4176fe:	mov    eax,ebp
  417700:	pop    rbx
  417701:	pop    rbp
  417702:	ret    
  417703:	nop    DWORD PTR [rax+rax*1+0x0]
  417708:	mov    edx,DWORD PTR [rbx+0x20]
  41770b:	mov    rdi,QWORD PTR [rbx+0x18]
  41770f:	xor    esi,esi
  417711:	call   405090 <memset@plt>
  417716:	mov    rax,QWORD PTR [rbx+0x30]
  41771a:	mov    edi,DWORD PTR [rbx+0x70]
  41771d:	mov    esi,DWORD PTR [rax]
  41771f:	mov    edx,DWORD PTR [rax+0x8]
  417722:	mov    ecx,DWORD PTR [rax+0x4]
  417725:	mov    DWORD PTR [rbx+0x20],edx
  417728:	mov    rdx,rsi
  41772b:	mov    DWORD PTR [rbx+0x28],esi
  41772e:	add    rsi,QWORD PTR [rbx+0x68]
  417732:	sub    edi,edx
  417734:	cmp    ecx,edi
  417736:	mov    edx,edi
  417738:	cmovb  edx,ecx
  41773b:	mov    DWORD PTR [rbx+0x24],edx
  41773e:	movzx  edx,WORD PTR [rbx+0xea]
  417745:	cmp    dx,WORD PTR [rbx+0xe8]
  41774c:	mov    QWORD PTR [rbx+0x18],rsi
  417750:	mov    DWORD PTR [rax+0x4],ecx
  417753:	jbe    41775c <flatcc_builder_end_offset_vector@@Base+0x8c>
  417755:	mov    WORD PTR [rbx+0xe8],dx
  41775c:	movzx  edx,WORD PTR [rax+0xc]
  417760:	sub    rax,0x24
  417764:	sub    DWORD PTR [rbx+0x104],0x1
  41776b:	mov    QWORD PTR [rbx+0x30],rax
  41776f:	mov    eax,ebp
  417771:	mov    WORD PTR [rbx+0xea],dx
  417778:	add    rsp,0x8
  41777c:	pop    rbx
  41777d:	pop    rbp
  41777e:	ret    
  41777f:	lea    rcx,[rip+0x1723a]        # 42e9c0 <_IO_stdin_used@@Base+0x39c0>
  417786:	lea    rsi,[rip+0x16ba3]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  41778d:	lea    rdi,[rip+0x16cec]        # 42e480 <_IO_stdin_used@@Base+0x3480>
  417794:	mov    edx,0x5c8
  417799:	call   405080 <__assert_fail@plt>
  41779e:	xchg   ax,ax

00000000004177a0 <flatcc_builder_create_offset_vector@@Base>:
  4177a0:	push   r12
  4177a2:	push   rbp
  4177a3:	mov    r12,rsi
  4177a6:	push   rbx
  4177a7:	mov    rbp,rdx
  4177aa:	mov    rbx,rdi
  4177ad:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  4177b2:	test   eax,eax
  4177b4:	je     4177c0 <flatcc_builder_create_offset_vector@@Base+0x20>
  4177b6:	pop    rbx
  4177b7:	xor    eax,eax
  4177b9:	pop    rbp
  4177ba:	pop    r12
  4177bc:	ret    
  4177bd:	nop    DWORD PTR [rax]
  4177c0:	mov    rsi,rbp
  4177c3:	mov    rdi,rbx
  4177c6:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  4177cb:	test   rax,rax
  4177ce:	je     4177b6 <flatcc_builder_create_offset_vector@@Base+0x16>
  4177d0:	lea    rdx,[rbp*4+0x0]
  4177d8:	mov    rsi,r12
  4177db:	mov    rdi,rax
  4177de:	call   4050e0 <memcpy@plt>
  4177e3:	mov    rdi,rbx
  4177e6:	pop    rbx
  4177e7:	pop    rbp
  4177e8:	pop    r12
  4177ea:	jmp    4176d0 <flatcc_builder_end_offset_vector@@Base>
  4177ef:	nop

00000000004177f0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4177f0:	push   rbp
  4177f1:	push   rbx
  4177f2:	sub    rsp,0x8
  4177f6:	mov    rax,QWORD PTR [rdi+0x30]
  4177fa:	cmp    WORD PTR [rax+0xe],0x5
  4177ff:	jne    4178a7 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb7>
  417805:	mov    edx,DWORD PTR [rax+0x14]
  417808:	mov    rcx,rsi
  41780b:	mov    rsi,QWORD PTR [rdi+0x18]
  41780f:	mov    rbx,rdi
  417812:	call   414f70 <flatcc_builder_default_alloc@@Base+0x390>
  417817:	test   eax,eax
  417819:	mov    ebp,eax
  41781b:	jne    417830 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  41781d:	add    rsp,0x8
  417821:	mov    eax,ebp
  417823:	pop    rbx
  417824:	pop    rbp
  417825:	ret    
  417826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417830:	mov    edx,DWORD PTR [rbx+0x20]
  417833:	mov    rdi,QWORD PTR [rbx+0x18]
  417837:	xor    esi,esi
  417839:	call   405090 <memset@plt>
  41783e:	mov    rax,QWORD PTR [rbx+0x30]
  417842:	mov    edi,DWORD PTR [rbx+0x70]
  417845:	mov    esi,DWORD PTR [rax]
  417847:	mov    edx,DWORD PTR [rax+0x8]
  41784a:	mov    ecx,DWORD PTR [rax+0x4]
  41784d:	mov    DWORD PTR [rbx+0x20],edx
  417850:	mov    rdx,rsi
  417853:	mov    DWORD PTR [rbx+0x28],esi
  417856:	add    rsi,QWORD PTR [rbx+0x68]
  41785a:	sub    edi,edx
  41785c:	cmp    ecx,edi
  41785e:	mov    edx,edi
  417860:	cmovb  edx,ecx
  417863:	mov    DWORD PTR [rbx+0x24],edx
  417866:	movzx  edx,WORD PTR [rbx+0xea]
  41786d:	cmp    dx,WORD PTR [rbx+0xe8]
  417874:	mov    QWORD PTR [rbx+0x18],rsi
  417878:	mov    DWORD PTR [rax+0x4],ecx
  41787b:	jbe    417884 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  41787d:	mov    WORD PTR [rbx+0xe8],dx
  417884:	movzx  edx,WORD PTR [rax+0xc]
  417888:	sub    rax,0x24
  41788c:	sub    DWORD PTR [rbx+0x104],0x1
  417893:	mov    QWORD PTR [rbx+0x30],rax
  417897:	mov    eax,ebp
  417899:	mov    WORD PTR [rbx+0xea],dx
  4178a0:	add    rsp,0x8
  4178a4:	pop    rbx
  4178a5:	pop    rbp
  4178a6:	ret    
  4178a7:	lea    rcx,[rip+0x170d2]        # 42e980 <_IO_stdin_used@@Base+0x3980>
  4178ae:	lea    rsi,[rip+0x16a7b]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4178b5:	lea    rdi,[rip+0x16bc4]        # 42e480 <_IO_stdin_used@@Base+0x3480>
  4178bc:	mov    edx,0x5d5
  4178c1:	call   405080 <__assert_fail@plt>
  4178c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004178d0 <flatcc_builder_offset_vector_edit@@Base>:
  4178d0:	mov    rax,QWORD PTR [rdi+0x18]
  4178d4:	ret    
  4178d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004178e0 <flatcc_builder_offset_vector_count@@Base>:
  4178e0:	mov    rax,QWORD PTR [rdi+0x30]
  4178e4:	mov    eax,DWORD PTR [rax+0x14]
  4178e7:	ret    
  4178e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004178f0 <flatcc_builder_create_union_vector_direct@@Base>:
  4178f0:	push   r13
  4178f2:	push   r12
  4178f4:	mov    r13,rcx
  4178f7:	push   rbp
  4178f8:	push   rbx
  4178f9:	mov    r12,rsi
  4178fc:	mov    rcx,r12
  4178ff:	mov    rsi,rdx
  417902:	mov    rdx,r13
  417905:	sub    rsp,0x8
  417909:	mov    rbp,rdi
  41790c:	call   414f70 <flatcc_builder_default_alloc@@Base+0x390>
  417911:	test   eax,eax
  417913:	jne    417928 <flatcc_builder_create_union_vector_direct@@Base+0x38>
  417915:	add    rsp,0x8
  417919:	xor    eax,eax
  41791b:	pop    rbx
  41791c:	pop    rbp
  41791d:	pop    r12
  41791f:	pop    r13
  417921:	ret    
  417922:	nop    WORD PTR [rax+rax*1+0x0]
  417928:	mov    ebx,eax
  41792a:	mov    rdx,r13
  41792d:	mov    ecx,0x1
  417932:	mov    rsi,r12
  417935:	mov    rdi,rbp
  417938:	mov    r9d,0xffffffff
  41793e:	mov    r8d,0x1
  417944:	call   417430 <flatcc_builder_create_vector@@Base>
  417949:	mov    rcx,rbx
  41794c:	mov    edx,eax
  41794e:	shl    rcx,0x20
  417952:	mov    rbx,rcx
  417955:	or     rbx,rdx
  417958:	test   eax,eax
  41795a:	mov    rax,rcx
  41795d:	cmovne rax,rbx
  417961:	add    rsp,0x8
  417965:	pop    rbx
  417966:	pop    rbp
  417967:	pop    r12
  417969:	pop    r13
  41796b:	ret    
  41796c:	nop    DWORD PTR [rax+0x0]

0000000000417970 <flatcc_builder_create_union_vector@@Base>:
  417970:	push   r13
  417972:	push   r12
  417974:	mov    r12,rdx
  417977:	push   rbp
  417978:	push   rbx
  417979:	mov    rbp,rsi
  41797c:	mov    rbx,rdi
  41797f:	sub    rsp,0x8
  417983:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  417988:	test   eax,eax
  41798a:	je     4179a0 <flatcc_builder_create_union_vector@@Base+0x30>
  41798c:	add    rsp,0x8
  417990:	xor    eax,eax
  417992:	pop    rbx
  417993:	pop    rbp
  417994:	pop    r12
  417996:	pop    r13
  417998:	ret    
  417999:	nop    DWORD PTR [rax+0x0]
  4179a0:	mov    rsi,r12
  4179a3:	mov    rdi,rbx
  4179a6:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  4179ab:	test   rax,rax
  4179ae:	je     41798c <flatcc_builder_create_union_vector@@Base+0x1c>
  4179b0:	mov    r13d,DWORD PTR [rbx+0x20]
  4179b4:	mov    rax,r13
  4179b7:	add    eax,r12d
  4179ba:	cmp    eax,DWORD PTR [rbx+0x24]
  4179bd:	mov    DWORD PTR [rbx+0x20],eax
  4179c0:	jae    417aa0 <flatcc_builder_create_union_vector@@Base+0x130>
  4179c6:	add    r13,QWORD PTR [rbx+0x18]
  4179ca:	je     41798c <flatcc_builder_create_union_vector@@Base+0x1c>
  4179cc:	mov    rdi,rbx
  4179cf:	call   4178d0 <flatcc_builder_offset_vector_edit@@Base>
  4179d4:	xor    edi,edi
  4179d6:	test   r12,r12
  4179d9:	je     4179fd <flatcc_builder_create_union_vector@@Base+0x8d>
  4179db:	nop    DWORD PTR [rax+rax*1+0x0]
  4179e0:	movzx  r8d,BYTE PTR [rbp+rdi*8+0x0]
  4179e6:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  4179eb:	mov    r8d,DWORD PTR [rbp+rdi*8+0x4]
  4179f0:	mov    DWORD PTR [rax+rdi*4],r8d
  4179f4:	add    rdi,0x1
  4179f8:	cmp    r12,rdi
  4179fb:	jne    4179e0 <flatcc_builder_create_union_vector@@Base+0x70>
  4179fd:	mov    rcx,r12
  417a00:	mov    rdx,rax
  417a03:	mov    rsi,r13
  417a06:	mov    rdi,rbx
  417a09:	call   4178f0 <flatcc_builder_create_union_vector_direct@@Base>
  417a0e:	mov    edx,DWORD PTR [rbx+0x20]
  417a11:	mov    rdi,QWORD PTR [rbx+0x18]
  417a15:	xor    esi,esi
  417a17:	mov    r12,rax
  417a1a:	mov    rbp,rax
  417a1d:	sar    r12,0x20
  417a21:	call   405090 <memset@plt>
  417a26:	mov    rax,QWORD PTR [rbx+0x30]
  417a2a:	mov    esi,DWORD PTR [rax]
  417a2c:	mov    edx,DWORD PTR [rax+0x8]
  417a2f:	mov    ecx,DWORD PTR [rax+0x4]
  417a32:	mov    DWORD PTR [rbx+0x20],edx
  417a35:	mov    DWORD PTR [rbx+0x28],esi
  417a38:	mov    rdx,rsi
  417a3b:	add    rsi,QWORD PTR [rbx+0x68]
  417a3f:	mov    QWORD PTR [rbx+0x18],rsi
  417a43:	mov    esi,DWORD PTR [rbx+0x70]
  417a46:	sub    esi,edx
  417a48:	cmp    ecx,esi
  417a4a:	mov    edx,esi
  417a4c:	cmovb  edx,ecx
  417a4f:	mov    DWORD PTR [rbx+0x24],edx
  417a52:	movzx  edx,WORD PTR [rbx+0xea]
  417a59:	cmp    dx,WORD PTR [rbx+0xe8]
  417a60:	mov    DWORD PTR [rax+0x4],ecx
  417a63:	jbe    417a6c <flatcc_builder_create_union_vector@@Base+0xfc>
  417a65:	mov    WORD PTR [rbx+0xe8],dx
  417a6c:	movzx  edx,WORD PTR [rax+0xc]
  417a70:	sub    rax,0x24
  417a74:	sub    DWORD PTR [rbx+0x104],0x1
  417a7b:	mov    QWORD PTR [rbx+0x30],rax
  417a7f:	shl    r12,0x20
  417a83:	mov    eax,ebp
  417a85:	or     rax,r12
  417a88:	mov    WORD PTR [rbx+0xea],dx
  417a8f:	add    rsp,0x8
  417a93:	pop    rbx
  417a94:	pop    rbp
  417a95:	pop    r12
  417a97:	pop    r13
  417a99:	ret    
  417a9a:	nop    WORD PTR [rax+rax*1+0x0]
  417aa0:	lea    esi,[rax+0x1]
  417aa3:	mov    edx,0xfffffffc
  417aa8:	mov    rdi,rbx
  417aab:	call   414b80 <union_vector_tests@@Base+0x110>
  417ab0:	test   eax,eax
  417ab2:	je     4179c6 <flatcc_builder_create_union_vector@@Base+0x56>
  417ab8:	jmp    41798c <flatcc_builder_create_union_vector@@Base+0x1c>
  417abd:	nop    DWORD PTR [rax]

0000000000417ac0 <flatcc_builder_start_union_vector@@Base>:
  417ac0:	push   rbx
  417ac1:	mov    esi,0x4
  417ac6:	mov    rbx,rdi
  417ac9:	call   414e40 <flatcc_builder_default_alloc@@Base+0x260>
  417ace:	test   eax,eax
  417ad0:	jne    417b18 <flatcc_builder_start_union_vector@@Base+0x58>
  417ad2:	mov    rcx,QWORD PTR [rbx+0x30]
  417ad6:	mov    edx,0x7
  417adb:	mov    DWORD PTR [rcx+0x10],0x8
  417ae2:	mov    DWORD PTR [rcx+0x14],0x0
  417ae9:	mov    WORD PTR [rcx+0xe],dx
  417aed:	mov    edx,DWORD PTR [rbx+0x28]
  417af0:	mov    rsi,rdx
  417af3:	add    rdx,QWORD PTR [rbx+0x68]
  417af7:	mov    QWORD PTR [rbx+0x18],rdx
  417afb:	mov    edx,DWORD PTR [rbx+0x70]
  417afe:	sub    edx,esi
  417b00:	mov    esi,0xfffffffc
  417b05:	cmp    edx,esi
  417b07:	cmova  edx,esi
  417b0a:	mov    DWORD PTR [rbx+0x24],edx
  417b0d:	mov    DWORD PTR [rcx+0x4],esi
  417b10:	pop    rbx
  417b11:	ret    
  417b12:	nop    WORD PTR [rax+rax*1+0x0]
  417b18:	mov    eax,0xffffffff
  417b1d:	pop    rbx
  417b1e:	ret    
  417b1f:	nop

0000000000417b20 <flatcc_builder_union_vector_edit@@Base>:
  417b20:	mov    rax,QWORD PTR [rdi+0x18]
  417b24:	ret    
  417b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000417b30 <flatcc_builder_union_vector_count@@Base>:
  417b30:	mov    rax,QWORD PTR [rdi+0x30]
  417b34:	mov    eax,DWORD PTR [rax+0x14]
  417b37:	ret    
  417b38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000417b40 <flatcc_builder_end_union_vector@@Base>:
  417b40:	push   r13
  417b42:	push   r12
  417b44:	push   rbp
  417b45:	push   rbx
  417b46:	sub    rsp,0x8
  417b4a:	mov    rax,QWORD PTR [rdi+0x30]
  417b4e:	cmp    WORD PTR [rax+0xe],0x7
  417b53:	jne    417c85 <flatcc_builder_end_union_vector@@Base+0x145>
  417b59:	mov    rbx,rdi
  417b5c:	call   417b30 <flatcc_builder_union_vector_count@@Base>
  417b61:	mov    ebp,DWORD PTR [rbx+0x20]
  417b64:	mov    r12,rax
  417b67:	lea    eax,[rax+rax*4]
  417b6a:	add    eax,ebp
  417b6c:	cmp    eax,DWORD PTR [rbx+0x24]
  417b6f:	mov    DWORD PTR [rbx+0x20],eax
  417b72:	jae    417c60 <flatcc_builder_end_union_vector@@Base+0x120>
  417b78:	add    rbp,QWORD PTR [rbx+0x18]
  417b7c:	je     417c78 <flatcc_builder_end_union_vector@@Base+0x138>
  417b82:	mov    rdi,rbx
  417b85:	lea    r13,[rbp+r12*4+0x0]
  417b8a:	call   417b20 <flatcc_builder_union_vector_edit@@Base>
  417b8f:	xor    edi,edi
  417b91:	test   r12,r12
  417b94:	je     417bbd <flatcc_builder_end_union_vector@@Base+0x7d>
  417b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ba0:	movzx  r8d,BYTE PTR [rax+rdi*8]
  417ba5:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  417baa:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  417baf:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  417bb4:	add    rdi,0x1
  417bb8:	cmp    r12,rdi
  417bbb:	jne    417ba0 <flatcc_builder_end_union_vector@@Base+0x60>
  417bbd:	mov    rcx,r12
  417bc0:	mov    rdx,rbp
  417bc3:	mov    rsi,r13
  417bc6:	mov    rdi,rbx
  417bc9:	call   4178f0 <flatcc_builder_create_union_vector_direct@@Base>
  417bce:	mov    edx,DWORD PTR [rbx+0x20]
  417bd1:	mov    rdi,QWORD PTR [rbx+0x18]
  417bd5:	xor    esi,esi
  417bd7:	mov    r12,rax
  417bda:	mov    rbp,rax
  417bdd:	sar    r12,0x20
  417be1:	call   405090 <memset@plt>
  417be6:	mov    rax,QWORD PTR [rbx+0x30]
  417bea:	mov    esi,DWORD PTR [rax]
  417bec:	mov    edx,DWORD PTR [rax+0x8]
  417bef:	mov    ecx,DWORD PTR [rax+0x4]
  417bf2:	mov    DWORD PTR [rbx+0x20],edx
  417bf5:	mov    DWORD PTR [rbx+0x28],esi
  417bf8:	mov    rdx,rsi
  417bfb:	add    rsi,QWORD PTR [rbx+0x68]
  417bff:	mov    QWORD PTR [rbx+0x18],rsi
  417c03:	mov    esi,DWORD PTR [rbx+0x70]
  417c06:	sub    esi,edx
  417c08:	cmp    ecx,esi
  417c0a:	mov    edx,esi
  417c0c:	cmovb  edx,ecx
  417c0f:	mov    DWORD PTR [rbx+0x24],edx
  417c12:	movzx  edx,WORD PTR [rbx+0xea]
  417c19:	cmp    dx,WORD PTR [rbx+0xe8]
  417c20:	mov    DWORD PTR [rax+0x4],ecx
  417c23:	jbe    417c2c <flatcc_builder_end_union_vector@@Base+0xec>
  417c25:	mov    WORD PTR [rbx+0xe8],dx
  417c2c:	movzx  edx,WORD PTR [rax+0xc]
  417c30:	sub    rax,0x24
  417c34:	sub    DWORD PTR [rbx+0x104],0x1
  417c3b:	mov    QWORD PTR [rbx+0x30],rax
  417c3f:	shl    r12,0x20
  417c43:	mov    eax,ebp
  417c45:	or     rax,r12
  417c48:	mov    WORD PTR [rbx+0xea],dx
  417c4f:	add    rsp,0x8
  417c53:	pop    rbx
  417c54:	pop    rbp
  417c55:	pop    r12
  417c57:	pop    r13
  417c59:	ret    
  417c5a:	nop    WORD PTR [rax+rax*1+0x0]
  417c60:	lea    esi,[rax+0x1]
  417c63:	mov    edx,0xfffffffc
  417c68:	mov    rdi,rbx
  417c6b:	call   414b80 <union_vector_tests@@Base+0x110>
  417c70:	test   eax,eax
  417c72:	je     417b78 <flatcc_builder_end_union_vector@@Base+0x38>
  417c78:	add    rsp,0x8
  417c7c:	xor    eax,eax
  417c7e:	pop    rbx
  417c7f:	pop    rbp
  417c80:	pop    r12
  417c82:	pop    r13
  417c84:	ret    
  417c85:	lea    rcx,[rip+0x16c74]        # 42e900 <_IO_stdin_used@@Base+0x3900>
  417c8c:	lea    rsi,[rip+0x1669d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417c93:	lea    rdi,[rip+0x1690e]        # 42e5a8 <_IO_stdin_used@@Base+0x35a8>
  417c9a:	mov    edx,0x651
  417c9f:	call   405080 <__assert_fail@plt>
  417ca4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417caf:	nop

0000000000417cb0 <flatcc_builder_extend_union_vector@@Base>:
  417cb0:	push   rbp
  417cb1:	push   rbx
  417cb2:	xor    edx,edx
  417cb4:	mov    ecx,esi
  417cb6:	sub    rsp,0x8
  417cba:	mov    rax,QWORD PTR [rdi+0x30]
  417cbe:	add    ecx,DWORD PTR [rax+0x14]
  417cc1:	setb   dl
  417cc4:	test   edx,edx
  417cc6:	jne    417d0d <flatcc_builder_extend_union_vector@@Base+0x5d>
  417cc8:	cmp    ecx,0x1fffffff
  417cce:	ja     417d0d <flatcc_builder_extend_union_vector@@Base+0x5d>
  417cd0:	mov    DWORD PTR [rax+0x14],ecx
  417cd3:	mov    ebp,DWORD PTR [rdi+0x20]
  417cd6:	mov    rbx,rdi
  417cd9:	lea    eax,[rbp+rsi*8+0x0]
  417cdd:	cmp    eax,DWORD PTR [rdi+0x24]
  417ce0:	mov    DWORD PTR [rdi+0x20],eax
  417ce3:	jae    417cf8 <flatcc_builder_extend_union_vector@@Base+0x48>
  417ce5:	mov    rax,rbp
  417ce8:	add    rax,QWORD PTR [rbx+0x18]
  417cec:	add    rsp,0x8
  417cf0:	pop    rbx
  417cf1:	pop    rbp
  417cf2:	ret    
  417cf3:	nop    DWORD PTR [rax+rax*1+0x0]
  417cf8:	lea    esi,[rax+0x1]
  417cfb:	mov    edx,0xfffffffc
  417d00:	call   414b80 <union_vector_tests@@Base+0x110>
  417d05:	test   eax,eax
  417d07:	je     417ce5 <flatcc_builder_extend_union_vector@@Base+0x35>
  417d09:	xor    eax,eax
  417d0b:	jmp    417cec <flatcc_builder_extend_union_vector@@Base+0x3c>
  417d0d:	call   40533c <__sprintf_chk@plt+0x1ec>
  417d12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  417d1d:	nop    DWORD PTR [rax]

0000000000417d20 <flatcc_builder_truncate_union_vector@@Base>:
  417d20:	sub    rsp,0x8
  417d24:	mov    rax,QWORD PTR [rdi+0x30]
  417d28:	cmp    WORD PTR [rax+0xe],0x7
  417d2d:	jne    417d5f <flatcc_builder_truncate_union_vector@@Base+0x3f>
  417d2f:	mov    edx,DWORD PTR [rax+0x14]
  417d32:	cmp    edx,esi
  417d34:	jb     417d7e <flatcc_builder_truncate_union_vector@@Base+0x5e>
  417d36:	sub    edx,esi
  417d38:	imul   esi,DWORD PTR [rax+0x10]
  417d3c:	mov    DWORD PTR [rax+0x14],edx
  417d3f:	mov    eax,DWORD PTR [rdi+0x20]
  417d42:	mov    rcx,QWORD PTR [rdi+0x18]
  417d46:	sub    eax,esi
  417d48:	mov    edx,esi
  417d4a:	xor    esi,esi
  417d4c:	mov    DWORD PTR [rdi+0x20],eax
  417d4f:	lea    rdi,[rcx+rax*1]
  417d53:	call   405090 <memset@plt>
  417d58:	xor    eax,eax
  417d5a:	add    rsp,0x8
  417d5e:	ret    
  417d5f:	lea    rcx,[rip+0x16b5a]        # 42e8c0 <_IO_stdin_used@@Base+0x38c0>
  417d66:	lea    rsi,[rip+0x165c3]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417d6d:	lea    rdi,[rip+0x16834]        # 42e5a8 <_IO_stdin_used@@Base+0x35a8>
  417d74:	mov    edx,0x681
  417d79:	call   405080 <__assert_fail@plt>
  417d7e:	lea    rcx,[rip+0x16b3b]        # 42e8c0 <_IO_stdin_used@@Base+0x38c0>
  417d85:	lea    rsi,[rip+0x165a4]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417d8c:	lea    rdi,[rip+0x1677d]        # 42e510 <_IO_stdin_used@@Base+0x3510>
  417d93:	mov    edx,0x682
  417d98:	call   405080 <__assert_fail@plt>
  417d9d:	nop    DWORD PTR [rax]

0000000000417da0 <flatcc_builder_union_vector_push@@Base>:
  417da0:	push   r12
  417da2:	push   rbp
  417da3:	push   rbx
  417da4:	mov    rdx,QWORD PTR [rdi+0x30]
  417da8:	cmp    WORD PTR [rdx+0xe],0x7
  417dad:	jne    417e00 <flatcc_builder_union_vector_push@@Base+0x60>
  417daf:	mov    eax,DWORD PTR [rdx+0x14]
  417db2:	cmp    eax,0x1fffffff
  417db7:	je     417df9 <flatcc_builder_union_vector_push@@Base+0x59>
  417db9:	add    eax,0x1
  417dbc:	mov    rbp,rdi
  417dbf:	mov    r12,rsi
  417dc2:	mov    DWORD PTR [rdx+0x14],eax
  417dc5:	mov    ebx,DWORD PTR [rdi+0x20]
  417dc8:	lea    edx,[rbx+0x8]
  417dcb:	cmp    edx,DWORD PTR [rdi+0x24]
  417dce:	mov    DWORD PTR [rdi+0x20],edx
  417dd1:	jae    417de8 <flatcc_builder_union_vector_push@@Base+0x48>
  417dd3:	mov    rax,rbx
  417dd6:	add    rax,QWORD PTR [rbp+0x18]
  417dda:	je     417df9 <flatcc_builder_union_vector_push@@Base+0x59>
  417ddc:	mov    QWORD PTR [rax],r12
  417ddf:	pop    rbx
  417de0:	pop    rbp
  417de1:	pop    r12
  417de3:	ret    
  417de4:	nop    DWORD PTR [rax+0x0]
  417de8:	lea    esi,[rbx+0x9]
  417deb:	mov    edx,0xfffffffc
  417df0:	call   414b80 <union_vector_tests@@Base+0x110>
  417df5:	test   eax,eax
  417df7:	je     417dd3 <flatcc_builder_union_vector_push@@Base+0x33>
  417df9:	pop    rbx
  417dfa:	xor    eax,eax
  417dfc:	pop    rbp
  417dfd:	pop    r12
  417dff:	ret    
  417e00:	lea    rcx,[rip+0x16a79]        # 42e880 <_IO_stdin_used@@Base+0x3880>
  417e07:	lea    rsi,[rip+0x16522]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417e0e:	lea    rdi,[rip+0x16793]        # 42e5a8 <_IO_stdin_used@@Base+0x35a8>
  417e15:	mov    edx,0x68d
  417e1a:	call   405080 <__assert_fail@plt>
  417e1f:	nop

0000000000417e20 <flatcc_builder_append_union_vector@@Base>:
  417e20:	push   r13
  417e22:	push   r12
  417e24:	push   rbp
  417e25:	push   rbx
  417e26:	sub    rsp,0x8
  417e2a:	mov    rax,QWORD PTR [rdi+0x30]
  417e2e:	cmp    WORD PTR [rax+0xe],0x7
  417e33:	jne    417eab <flatcc_builder_append_union_vector@@Base+0x8b>
  417e35:	mov    r13,rsi
  417e38:	mov    ecx,edx
  417e3a:	xor    esi,esi
  417e3c:	add    ecx,DWORD PTR [rax+0x14]
  417e3f:	setb   sil
  417e43:	test   esi,esi
  417e45:	jne    417ea6 <flatcc_builder_append_union_vector@@Base+0x86>
  417e47:	cmp    ecx,0x1fffffff
  417e4d:	ja     417ea6 <flatcc_builder_append_union_vector@@Base+0x86>
  417e4f:	mov    DWORD PTR [rax+0x14],ecx
  417e52:	mov    r12d,DWORD PTR [rdi+0x20]
  417e56:	lea    ebx,[rdx*8+0x0]
  417e5d:	mov    rbp,rdi
  417e60:	mov    rdx,r12
  417e63:	add    edx,ebx
  417e65:	cmp    edx,DWORD PTR [rdi+0x24]
  417e68:	mov    DWORD PTR [rdi+0x20],edx
  417e6b:	jae    417e90 <flatcc_builder_append_union_vector@@Base+0x70>
  417e6d:	add    r12,QWORD PTR [rbp+0x18]
  417e71:	je     417e80 <flatcc_builder_append_union_vector@@Base+0x60>
  417e73:	mov    edx,ebx
  417e75:	mov    rsi,r13
  417e78:	mov    rdi,r12
  417e7b:	call   4050e0 <memcpy@plt>
  417e80:	add    rsp,0x8
  417e84:	mov    rax,r12
  417e87:	pop    rbx
  417e88:	pop    rbp
  417e89:	pop    r12
  417e8b:	pop    r13
  417e8d:	ret    
  417e8e:	xchg   ax,ax
  417e90:	lea    esi,[rdx+0x1]
  417e93:	mov    edx,0xfffffffc
  417e98:	call   414b80 <union_vector_tests@@Base+0x110>
  417e9d:	test   eax,eax
  417e9f:	je     417e6d <flatcc_builder_append_union_vector@@Base+0x4d>
  417ea1:	xor    r12d,r12d
  417ea4:	jmp    417e80 <flatcc_builder_append_union_vector@@Base+0x60>
  417ea6:	call   40533c <__sprintf_chk@plt+0x1ec>
  417eab:	lea    rcx,[rip+0x1698e]        # 42e840 <_IO_stdin_used@@Base+0x3840>
  417eb2:	lea    rsi,[rip+0x16477]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417eb9:	lea    rdi,[rip+0x166e8]        # 42e5a8 <_IO_stdin_used@@Base+0x35a8>
  417ec0:	mov    edx,0x69c
  417ec5:	call   405080 <__assert_fail@plt>
  417eca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000417ed0 <flatcc_builder_create_string@@Base>:
  417ed0:	push   rbp
  417ed1:	push   rbx
  417ed2:	sub    rsp,0xb8
  417ed9:	mov    rax,QWORD PTR fs:0x28
  417ee2:	mov    QWORD PTR [rsp+0xa8],rax
  417eea:	xor    eax,eax
  417eec:	mov    eax,0xffffffff
  417ef1:	cmp    rdx,rax
  417ef4:	ja     417fc0 <flatcc_builder_create_string@@Base+0xf0>
  417efa:	mov    rbx,rdi
  417efd:	mov    edi,DWORD PTR [rdi+0xf0]
  417f03:	lea    rcx,[rsp+0xc]
  417f08:	mov    DWORD PTR [rsp+0xc],edx
  417f0c:	mov    QWORD PTR [rsp+0x28],0x4
  417f15:	mov    QWORD PTR [rsp+0x20],rcx
  417f1a:	lea    eax,[rdi-0x1]
  417f1d:	sub    eax,edx
  417f1f:	and    eax,0x3
  417f22:	add    eax,0x1
  417f25:	test   rdx,rdx
  417f28:	jne    417fa0 <flatcc_builder_create_string@@Base+0xd0>
  417f2a:	mov    edx,0x2
  417f2f:	mov    ecx,0x1
  417f34:	mov    r8d,0x4
  417f3a:	add    r8,rax
  417f3d:	mov    rsi,0x42ee20
  417f44:	mov    ebp,edi
  417f46:	sub    ebp,r8d
  417f49:	shl    rcx,0x4
  417f4d:	mov    QWORD PTR [rsp+0x10],r8
  417f52:	cmp    edi,ebp
  417f54:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  417f59:	mov    DWORD PTR [rsp+0x18],edx
  417f5d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  417f62:	jle    417fc4 <flatcc_builder_create_string@@Base+0xf4>
  417f64:	lea    rsi,[rsp+0x20]
  417f69:	mov    rdi,QWORD PTR [rbx+0x38]
  417f6d:	mov    ecx,ebp
  417f6f:	call   QWORD PTR [rbx+0x48]
  417f72:	test   eax,eax
  417f74:	jne    417fe8 <flatcc_builder_create_string@@Base+0x118>
  417f76:	mov    DWORD PTR [rbx+0xf0],ebp
  417f7c:	mov    rbx,QWORD PTR [rsp+0xa8]
  417f84:	xor    rbx,QWORD PTR fs:0x28
  417f8d:	mov    eax,ebp
  417f8f:	jne    417fe3 <flatcc_builder_create_string@@Base+0x113>
  417f91:	add    rsp,0xb8
  417f98:	pop    rbx
  417f99:	pop    rbp
  417f9a:	ret    
  417f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417fa0:	lea    r8,[rdx+0x4]
  417fa4:	mov    QWORD PTR [rsp+0x38],rdx
  417fa9:	mov    QWORD PTR [rsp+0x30],rsi
  417fae:	mov    edx,0x3
  417fb3:	mov    ecx,0x2
  417fb8:	jmp    417f3a <flatcc_builder_create_string@@Base+0x6a>
  417fbd:	nop    DWORD PTR [rax]
  417fc0:	xor    ebp,ebp
  417fc2:	jmp    417f7c <flatcc_builder_create_string@@Base+0xac>
  417fc4:	lea    rcx,[rip+0x16da5]        # 42ed70 <_IO_stdin_used@@Base+0x3d70>
  417fcb:	lea    rsi,[rip+0x1635e]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  417fd2:	lea    rdi,[rip+0x166ee]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  417fd9:	mov    edx,0x287
  417fde:	call   405080 <__assert_fail@plt>
  417fe3:	call   405070 <__stack_chk_fail@plt>
  417fe8:	call   405319 <__sprintf_chk@plt+0x1c9>
  417fed:	nop    DWORD PTR [rax]

0000000000417ff0 <flatcc_builder_create_string_str@@Base>:
  417ff0:	push   rbp
  417ff1:	push   rbx
  417ff2:	mov    rbp,rdi
  417ff5:	mov    rdi,rsi
  417ff8:	mov    rbx,rsi
  417ffb:	sub    rsp,0x8
  417fff:	call   405060 <strlen@plt>
  418004:	add    rsp,0x8
  418008:	mov    rsi,rbx
  41800b:	mov    rdi,rbp
  41800e:	pop    rbx
  41800f:	pop    rbp
  418010:	mov    rdx,rax
  418013:	jmp    417ed0 <flatcc_builder_create_string@@Base>
  418018:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418020 <flatcc_builder_create_string_strn@@Base>:
  418020:	push   r12
  418022:	push   rbp
  418023:	mov    rbp,rsi
  418026:	push   rbx
  418027:	mov    r12,rdi
  41802a:	xor    esi,esi
  41802c:	mov    rdi,rbp
  41802f:	mov    rbx,rdx
  418032:	call   4050a0 <memchr@plt>
  418037:	mov    rdx,rax
  41803a:	mov    rsi,rbp
  41803d:	mov    rdi,r12
  418040:	sub    rdx,rbp
  418043:	test   rax,rax
  418046:	cmovne rbx,rdx
  41804a:	mov    rdx,rbx
  41804d:	pop    rbx
  41804e:	pop    rbp
  41804f:	pop    r12
  418051:	jmp    417ed0 <flatcc_builder_create_string@@Base>
  418056:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418060 <flatcc_builder_end_string@@Base>:
  418060:	push   rbp
  418061:	push   rbx
  418062:	sub    rsp,0x8
  418066:	mov    rax,QWORD PTR [rdi+0x30]
  41806a:	cmp    WORD PTR [rax+0xe],0x6
  41806f:	jne    418136 <flatcc_builder_end_string@@Base+0xd6>
  418075:	mov    edx,DWORD PTR [rax+0x14]
  418078:	mov    rbx,rdi
  41807b:	cmp    edx,DWORD PTR [rdi+0x20]
  41807e:	jne    418117 <flatcc_builder_end_string@@Base+0xb7>
  418084:	mov    rsi,QWORD PTR [rdi+0x18]
  418088:	call   417ed0 <flatcc_builder_create_string@@Base>
  41808d:	test   eax,eax
  41808f:	mov    ebp,eax
  418091:	jne    4180a0 <flatcc_builder_end_string@@Base+0x40>
  418093:	add    rsp,0x8
  418097:	mov    eax,ebp
  418099:	pop    rbx
  41809a:	pop    rbp
  41809b:	ret    
  41809c:	nop    DWORD PTR [rax+0x0]
  4180a0:	mov    edx,DWORD PTR [rbx+0x20]
  4180a3:	mov    rdi,QWORD PTR [rbx+0x18]
  4180a7:	xor    esi,esi
  4180a9:	call   405090 <memset@plt>
  4180ae:	mov    rax,QWORD PTR [rbx+0x30]
  4180b2:	mov    edi,DWORD PTR [rbx+0x70]
  4180b5:	mov    esi,DWORD PTR [rax]
  4180b7:	mov    edx,DWORD PTR [rax+0x8]
  4180ba:	mov    ecx,DWORD PTR [rax+0x4]
  4180bd:	mov    DWORD PTR [rbx+0x20],edx
  4180c0:	mov    rdx,rsi
  4180c3:	mov    DWORD PTR [rbx+0x28],esi
  4180c6:	add    rsi,QWORD PTR [rbx+0x68]
  4180ca:	sub    edi,edx
  4180cc:	cmp    ecx,edi
  4180ce:	mov    edx,edi
  4180d0:	cmovb  edx,ecx
  4180d3:	mov    DWORD PTR [rbx+0x24],edx
  4180d6:	movzx  edx,WORD PTR [rbx+0xea]
  4180dd:	cmp    dx,WORD PTR [rbx+0xe8]
  4180e4:	mov    QWORD PTR [rbx+0x18],rsi
  4180e8:	mov    DWORD PTR [rax+0x4],ecx
  4180eb:	jbe    4180f4 <flatcc_builder_end_string@@Base+0x94>
  4180ed:	mov    WORD PTR [rbx+0xe8],dx
  4180f4:	movzx  edx,WORD PTR [rax+0xc]
  4180f8:	sub    rax,0x24
  4180fc:	sub    DWORD PTR [rbx+0x104],0x1
  418103:	mov    QWORD PTR [rbx+0x30],rax
  418107:	mov    eax,ebp
  418109:	mov    WORD PTR [rbx+0xea],dx
  418110:	add    rsp,0x8
  418114:	pop    rbx
  418115:	pop    rbp
  418116:	ret    
  418117:	lea    rcx,[rip+0x16702]        # 42e820 <_IO_stdin_used@@Base+0x3820>
  41811e:	lea    rsi,[rip+0x1620b]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418125:	lea    rdi,[rip+0x164b4]        # 42e5e0 <_IO_stdin_used@@Base+0x35e0>
  41812c:	mov    edx,0x6c5
  418131:	call   405080 <__assert_fail@plt>
  418136:	lea    rcx,[rip+0x166e3]        # 42e820 <_IO_stdin_used@@Base+0x3820>
  41813d:	lea    rsi,[rip+0x161ec]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418144:	lea    rdi,[rip+0x1636d]        # 42e4b8 <_IO_stdin_used@@Base+0x34b8>
  41814b:	mov    edx,0x6c4
  418150:	call   405080 <__assert_fail@plt>
  418155:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418160 <flatcc_builder_string_edit@@Base>:
  418160:	mov    rax,QWORD PTR [rdi+0x18]
  418164:	ret    
  418165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418170 <flatcc_builder_string_len@@Base>:
  418170:	mov    rax,QWORD PTR [rdi+0x30]
  418174:	mov    eax,DWORD PTR [rax+0x14]
  418177:	ret    
  418178:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418180 <flatcc_builder_table_add@@Base>:
  418180:	push   r13
  418182:	push   r12
  418184:	push   rbp
  418185:	push   rbx
  418186:	sub    rsp,0x8
  41818a:	mov    rax,QWORD PTR [rdi+0x30]
  41818e:	cmp    WORD PTR [rax+0xe],0x3
  418193:	jne    4182a2 <flatcc_builder_table_add@@Base+0x122>
  418199:	cmp    esi,0x7ffc
  41819f:	mov    r12d,esi
  4181a2:	ja     418283 <flatcc_builder_table_add@@Base+0x103>
  4181a8:	cmp    WORD PTR [rdi+0xea],cx
  4181af:	mov    rbx,rdi
  4181b2:	jb     418220 <flatcc_builder_table_add@@Base+0xa0>
  4181b4:	movsxd r13,r12d
  4181b7:	add    r13,r13
  4181ba:	mov    rsi,r13
  4181bd:	add    rsi,QWORD PTR [rbx+0x8]
  4181c1:	cmp    WORD PTR [rsi],0x0
  4181c5:	jne    418264 <flatcc_builder_table_add@@Base+0xe4>
  4181cb:	mov    eax,DWORD PTR [rbx+0x14]
  4181ce:	movzx  ecx,cx
  4181d1:	xor    eax,r12d
  4181d4:	imul   eax,eax,0x9e3779b1
  4181da:	xor    eax,edx
  4181dc:	imul   eax,eax,0x9e3779b1
  4181e2:	mov    DWORD PTR [rbx+0x14],eax
  4181e5:	mov    eax,DWORD PTR [rbx+0x20]
  4181e8:	lea    ebp,[rcx+rax*1-0x1]
  4181ec:	neg    ecx
  4181ee:	and    ebp,ecx
  4181f0:	add    edx,ebp
  4181f2:	cmp    edx,DWORD PTR [rbx+0x24]
  4181f5:	mov    DWORD PTR [rbx+0x20],edx
  4181f8:	jae    418240 <flatcc_builder_table_add@@Base+0xc0>
  4181fa:	lea    eax,[rbp+0x4]
  4181fd:	mov    WORD PTR [rsi],ax
  418200:	cmp    r12w,WORD PTR [rbx+0x10]
  418205:	jae    418230 <flatcc_builder_table_add@@Base+0xb0>
  418207:	mov    eax,ebp
  418209:	add    rax,QWORD PTR [rbx+0x18]
  41820d:	add    rsp,0x8
  418211:	pop    rbx
  418212:	pop    rbp
  418213:	pop    r12
  418215:	pop    r13
  418217:	ret    
  418218:	nop    DWORD PTR [rax+rax*1+0x0]
  418220:	mov    WORD PTR [rdi+0xea],cx
  418227:	jmp    4181b4 <flatcc_builder_table_add@@Base+0x34>
  418229:	nop    DWORD PTR [rax+0x0]
  418230:	add    r12d,0x1
  418234:	mov    WORD PTR [rbx+0x10],r12w
  418239:	jmp    418207 <flatcc_builder_table_add@@Base+0x87>
  41823b:	nop    DWORD PTR [rax+rax*1+0x0]
  418240:	lea    esi,[rdx+0x1]
  418243:	mov    rdi,rbx
  418246:	mov    edx,0xfffc
  41824b:	call   414b80 <union_vector_tests@@Base+0x110>
  418250:	test   eax,eax
  418252:	jne    418260 <flatcc_builder_table_add@@Base+0xe0>
  418254:	mov    rsi,r13
  418257:	add    rsi,QWORD PTR [rbx+0x8]
  41825b:	jmp    4181fa <flatcc_builder_table_add@@Base+0x7a>
  41825d:	nop    DWORD PTR [rax]
  418260:	xor    eax,eax
  418262:	jmp    41820d <flatcc_builder_table_add@@Base+0x8d>
  418264:	lea    rcx,[rip+0x16595]        # 42e800 <_IO_stdin_used@@Base+0x3800>
  41826b:	lea    rsi,[rip+0x160be]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418272:	lea    rdi,[rip+0x1644e]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  418279:	mov    edx,0x6f8
  41827e:	call   405080 <__assert_fail@plt>
  418283:	lea    rcx,[rip+0x16576]        # 42e800 <_IO_stdin_used@@Base+0x3800>
  41828a:	lea    rsi,[rip+0x1609f]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418291:	lea    rdi,[rip+0x16370]        # 42e608 <_IO_stdin_used@@Base+0x3608>
  418298:	mov    edx,0x6ee
  41829d:	call   405080 <__assert_fail@plt>
  4182a2:	lea    rcx,[rip+0x16557]        # 42e800 <_IO_stdin_used@@Base+0x3800>
  4182a9:	lea    rsi,[rip+0x16080]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4182b0:	lea    rdi,[rip+0x162c1]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  4182b7:	mov    edx,0x6ed
  4182bc:	call   405080 <__assert_fail@plt>
  4182c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4182cc:	nop    DWORD PTR [rax+0x0]

00000000004182d0 <flatcc_builder_table_edit@@Base>:
  4182d0:	mov    rax,QWORD PTR [rdi+0x30]
  4182d4:	cmp    WORD PTR [rax+0xe],0x3
  4182d9:	jne    4182e6 <flatcc_builder_table_edit@@Base+0x16>
  4182db:	mov    eax,DWORD PTR [rdi+0x20]
  4182de:	sub    rax,rsi
  4182e1:	add    rax,QWORD PTR [rdi+0x18]
  4182e5:	ret    
  4182e6:	lea    rcx,[rip+0x164f3]        # 42e7e0 <_IO_stdin_used@@Base+0x37e0>
  4182ed:	lea    rsi,[rip+0x1603c]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  4182f4:	lea    rdi,[rip+0x1627d]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  4182fb:	sub    rsp,0x8
  4182ff:	mov    edx,0x702
  418304:	call   405080 <__assert_fail@plt>
  418309:	nop    DWORD PTR [rax+0x0]

0000000000418310 <flatcc_builder_table_add_copy@@Base>:
  418310:	push   rbp
  418311:	push   rbx
  418312:	mov    rbx,rcx
  418315:	mov    rbp,rdx
  418318:	movzx  ecx,r8w
  41831c:	mov    rdx,rbx
  41831f:	sub    rsp,0x8
  418323:	call   418180 <flatcc_builder_table_add@@Base>
  418328:	test   rax,rax
  41832b:	mov    rcx,rax
  41832e:	je     418341 <flatcc_builder_table_add_copy@@Base+0x31>
  418330:	mov    rdx,rbx
  418333:	mov    rsi,rbp
  418336:	mov    rdi,rax
  418339:	call   4050e0 <memcpy@plt>
  41833e:	mov    rcx,rax
  418341:	add    rsp,0x8
  418345:	mov    rax,rcx
  418348:	pop    rbx
  418349:	pop    rbp
  41834a:	ret    
  41834b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418350 <flatcc_builder_table_add_offset@@Base>:
  418350:	push   r13
  418352:	push   r12
  418354:	push   rbp
  418355:	push   rbx
  418356:	sub    rsp,0x8
  41835a:	mov    rax,QWORD PTR [rdi+0x30]
  41835e:	cmp    WORD PTR [rax+0xe],0x3
  418363:	jne    418462 <flatcc_builder_table_add_offset@@Base+0x112>
  418369:	cmp    esi,0x7ffc
  41836f:	mov    r12d,esi
  418372:	ja     418443 <flatcc_builder_table_add_offset@@Base+0xf3>
  418378:	movsxd r13,esi
  41837b:	mov    rbx,rdi
  41837e:	add    r13,r13
  418381:	mov    rdx,r13
  418384:	add    rdx,QWORD PTR [rdi+0x8]
  418388:	cmp    WORD PTR [rdx],0x0
  41838c:	jne    418424 <flatcc_builder_table_add_offset@@Base+0xd4>
  418392:	mov    eax,DWORD PTR [rdi+0x14]
  418395:	xor    eax,esi
  418397:	imul   eax,eax,0x9e3779b1
  41839d:	xor    eax,0x4
  4183a0:	imul   eax,eax,0x9e3779b1
  4183a6:	mov    DWORD PTR [rdi+0x14],eax
  4183a9:	mov    eax,DWORD PTR [rdi+0x20]
  4183ac:	lea    ebp,[rax+0x3]
  4183af:	and    ebp,0xfffffffc
  4183b2:	lea    esi,[rbp+0x4]
  4183b5:	cmp    esi,DWORD PTR [rdi+0x24]
  4183b8:	mov    DWORD PTR [rdi+0x20],esi
  4183bb:	ja     418400 <flatcc_builder_table_add_offset@@Base+0xb0>
  4183bd:	lea    eax,[rbp+0x4]
  4183c0:	mov    WORD PTR [rdx],ax
  4183c3:	cmp    r12w,WORD PTR [rbx+0x10]
  4183c8:	jae    4183f0 <flatcc_builder_table_add_offset@@Base+0xa0>
  4183ca:	mov    rax,QWORD PTR [rbx]
  4183cd:	lea    rdx,[rax+0x2]
  4183d1:	mov    QWORD PTR [rbx],rdx
  4183d4:	mov    WORD PTR [rax],bp
  4183d7:	mov    eax,ebp
  4183d9:	add    rax,QWORD PTR [rbx+0x18]
  4183dd:	add    rsp,0x8
  4183e1:	pop    rbx
  4183e2:	pop    rbp
  4183e3:	pop    r12
  4183e5:	pop    r13
  4183e7:	ret    
  4183e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4183f0:	lea    esi,[r12+0x1]
  4183f5:	mov    WORD PTR [rbx+0x10],si
  4183f9:	jmp    4183ca <flatcc_builder_table_add_offset@@Base+0x7a>
  4183fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418400:	mov    edx,0xfffc
  418405:	call   414b80 <union_vector_tests@@Base+0x110>
  41840a:	test   eax,eax
  41840c:	jne    418420 <flatcc_builder_table_add_offset@@Base+0xd0>
  41840e:	mov    rdx,r13
  418411:	add    rdx,QWORD PTR [rbx+0x8]
  418415:	jmp    4183bd <flatcc_builder_table_add_offset@@Base+0x6d>
  418417:	nop    WORD PTR [rax+rax*1+0x0]
  418420:	xor    eax,eax
  418422:	jmp    4183dd <flatcc_builder_table_add_offset@@Base+0x8d>
  418424:	lea    rcx,[rip+0x16395]        # 42e7c0 <_IO_stdin_used@@Base+0x37c0>
  41842b:	lea    rsi,[rip+0x15efe]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418432:	lea    rdi,[rip+0x1628e]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  418439:	mov    edx,0x71b
  41843e:	call   405080 <__assert_fail@plt>
  418443:	lea    rcx,[rip+0x16376]        # 42e7c0 <_IO_stdin_used@@Base+0x37c0>
  41844a:	lea    rsi,[rip+0x15edf]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418451:	lea    rdi,[rip+0x161b0]        # 42e608 <_IO_stdin_used@@Base+0x3608>
  418458:	mov    edx,0x714
  41845d:	call   405080 <__assert_fail@plt>
  418462:	lea    rcx,[rip+0x16357]        # 42e7c0 <_IO_stdin_used@@Base+0x37c0>
  418469:	lea    rsi,[rip+0x15ec0]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418470:	lea    rdi,[rip+0x16101]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  418477:	mov    edx,0x713
  41847c:	call   405080 <__assert_fail@plt>
  418481:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41848c:	nop    DWORD PTR [rax+0x0]

0000000000418490 <flatcc_builder_table_add_union@@Base>:
  418490:	push   r13
  418492:	push   r12
  418494:	mov    r13,rdx
  418497:	push   rbp
  418498:	push   rbx
  418499:	sar    r13,0x20
  41849d:	sub    rsp,0x8
  4184a1:	mov    rax,QWORD PTR [rdi+0x30]
  4184a5:	cmp    WORD PTR [rax+0xe],0x3
  4184aa:	jne    418524 <flatcc_builder_table_add_union@@Base+0x94>
  4184ac:	test   dl,dl
  4184ae:	mov    r12,rdi
  4184b1:	mov    ebx,esi
  4184b3:	mov    rbp,rdx
  4184b6:	je     418500 <flatcc_builder_table_add_union@@Base+0x70>
  4184b8:	test   r13d,r13d
  4184bb:	je     4184ce <flatcc_builder_table_add_union@@Base+0x3e>
  4184bd:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4184c2:	test   rax,rax
  4184c5:	je     418562 <flatcc_builder_table_add_union@@Base+0xd2>
  4184cb:	mov    DWORD PTR [rax],r13d
  4184ce:	lea    esi,[rbx-0x1]
  4184d1:	mov    ecx,0x1
  4184d6:	mov    edx,0x1
  4184db:	mov    rdi,r12
  4184de:	call   418180 <flatcc_builder_table_add@@Base>
  4184e3:	test   rax,rax
  4184e6:	je     418543 <flatcc_builder_table_add_union@@Base+0xb3>
  4184e8:	mov    BYTE PTR [rax],bpl
  4184eb:	add    rsp,0x8
  4184ef:	xor    eax,eax
  4184f1:	pop    rbx
  4184f2:	pop    rbp
  4184f3:	pop    r12
  4184f5:	pop    r13
  4184f7:	ret    
  4184f8:	nop    DWORD PTR [rax+rax*1+0x0]
  418500:	test   r13d,r13d
  418503:	je     4184ce <flatcc_builder_table_add_union@@Base+0x3e>
  418505:	lea    rcx,[rip+0x16444]        # 42e950 <_IO_stdin_used@@Base+0x3950>
  41850c:	lea    rsi,[rip+0x15e1d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418513:	lea    rdi,[rip+0x16136]        # 42e650 <_IO_stdin_used@@Base+0x3650>
  41851a:	mov    edx,0x5ef
  41851f:	call   405080 <__assert_fail@plt>
  418524:	lea    rcx,[rip+0x16425]        # 42e950 <_IO_stdin_used@@Base+0x3950>
  41852b:	lea    rsi,[rip+0x15dfe]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418532:	lea    rdi,[rip+0x1603f]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  418539:	mov    edx,0x5ee
  41853e:	call   405080 <__assert_fail@plt>
  418543:	lea    rcx,[rip+0x16406]        # 42e950 <_IO_stdin_used@@Base+0x3950>
  41854a:	lea    rsi,[rip+0x15ddf]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418551:	lea    rdi,[rip+0x161fe]        # 42e756 <_IO_stdin_used@@Base+0x3756>
  418558:	mov    edx,0x5f6
  41855d:	call   405080 <__assert_fail@plt>
  418562:	lea    rcx,[rip+0x163e7]        # 42e950 <_IO_stdin_used@@Base+0x3950>
  418569:	lea    rsi,[rip+0x15dc0]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418570:	lea    rdi,[rip+0x161d5]        # 42e74c <_IO_stdin_used@@Base+0x374c>
  418577:	mov    edx,0x5f2
  41857c:	call   405080 <__assert_fail@plt>
  418581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41858c:	nop    DWORD PTR [rax+0x0]

0000000000418590 <flatcc_builder_table_add_union_vector@@Base>:
  418590:	push   r13
  418592:	push   r12
  418594:	push   rbp
  418595:	push   rbx
  418596:	mov    rbp,rdx
  418599:	sar    rbp,0x20
  41859d:	sub    rsp,0x18
  4185a1:	mov    rax,QWORD PTR [rdi+0x30]
  4185a5:	cmp    WORD PTR [rax+0xe],0x3
  4185aa:	jne    418626 <flatcc_builder_table_add_union_vector@@Base+0x96>
  4185ac:	test   ebp,ebp
  4185ae:	sete   al
  4185b1:	test   edx,edx
  4185b3:	sete   cl
  4185b6:	cmp    cl,al
  4185b8:	je     4185e0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  4185ba:	test   edx,edx
  4185bc:	setne  dl
  4185bf:	cmp    al,dl
  4185c1:	je     418645 <flatcc_builder_table_add_union_vector@@Base+0xb5>
  4185c7:	mov    r12d,0xffffffff
  4185cd:	add    rsp,0x18
  4185d1:	mov    eax,r12d
  4185d4:	pop    rbx
  4185d5:	pop    rbp
  4185d6:	pop    r12
  4185d8:	pop    r13
  4185da:	ret    
  4185db:	nop    DWORD PTR [rax+rax*1+0x0]
  4185e0:	xor    r12d,r12d
  4185e3:	test   edx,edx
  4185e5:	je     4185cd <flatcc_builder_table_add_union_vector@@Base+0x3d>
  4185e7:	mov    r13d,esi
  4185ea:	lea    esi,[rsi-0x1]
  4185ed:	mov    QWORD PTR [rsp+0x8],rdx
  4185f2:	mov    rbx,rdi
  4185f5:	call   418350 <flatcc_builder_table_add_offset@@Base>
  4185fa:	test   rax,rax
  4185fd:	mov    rdx,QWORD PTR [rsp+0x8]
  418602:	je     418683 <flatcc_builder_table_add_union_vector@@Base+0xf3>
  418604:	mov    DWORD PTR [rax],edx
  418606:	mov    esi,r13d
  418609:	mov    rdi,rbx
  41860c:	call   418350 <flatcc_builder_table_add_offset@@Base>
  418611:	test   rax,rax
  418614:	je     418664 <flatcc_builder_table_add_union_vector@@Base+0xd4>
  418616:	mov    DWORD PTR [rax],ebp
  418618:	add    rsp,0x18
  41861c:	mov    eax,r12d
  41861f:	pop    rbx
  418620:	pop    rbp
  418621:	pop    r12
  418623:	pop    r13
  418625:	ret    
  418626:	lea    rcx,[rip+0x162f3]        # 42e920 <_IO_stdin_used@@Base+0x3920>
  41862d:	lea    rsi,[rip+0x15cfc]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418634:	lea    rdi,[rip+0x15f3d]        # 42e578 <_IO_stdin_used@@Base+0x3578>
  41863b:	mov    edx,0x600
  418640:	call   405080 <__assert_fail@plt>
  418645:	lea    rcx,[rip+0x162d4]        # 42e920 <_IO_stdin_used@@Base+0x3920>
  41864c:	lea    rsi,[rip+0x15cdd]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418653:	lea    rdi,[rip+0x1601e]        # 42e678 <_IO_stdin_used@@Base+0x3678>
  41865a:	mov    edx,0x601
  41865f:	call   405080 <__assert_fail@plt>
  418664:	lea    rcx,[rip+0x162b5]        # 42e920 <_IO_stdin_used@@Base+0x3920>
  41866b:	lea    rsi,[rip+0x15cbe]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418672:	lea    rdi,[rip+0x160d3]        # 42e74c <_IO_stdin_used@@Base+0x374c>
  418679:	mov    edx,0x608
  41867e:	call   405080 <__assert_fail@plt>
  418683:	lea    rcx,[rip+0x16296]        # 42e920 <_IO_stdin_used@@Base+0x3920>
  41868a:	lea    rsi,[rip+0x15c9f]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418691:	lea    rdi,[rip+0x160b4]        # 42e74c <_IO_stdin_used@@Base+0x374c>
  418698:	mov    edx,0x604
  41869d:	call   405080 <__assert_fail@plt>
  4186a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4186ad:	nop    DWORD PTR [rax]

00000000004186b0 <flatcc_builder_push_buffer_alignment@@Base>:
  4186b0:	mov    edx,0x4
  4186b5:	movzx  eax,WORD PTR [rdi+0xe8]
  4186bc:	mov    WORD PTR [rdi+0xe8],dx
  4186c3:	ret    
  4186c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4186cf:	nop

00000000004186d0 <flatcc_builder_pop_buffer_alignment@@Base>:
  4186d0:	cmp    si,WORD PTR [rdi+0xe8]
  4186d7:	jbe    4186e0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  4186d9:	mov    WORD PTR [rdi+0xe8],si
  4186e0:	repz ret 
  4186e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4186ed:	nop    DWORD PTR [rax]

00000000004186f0 <flatcc_builder_get_buffer_alignment@@Base>:
  4186f0:	movzx  eax,WORD PTR [rdi+0xe8]
  4186f7:	ret    
  4186f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418700 <flatcc_builder_set_vtable_clustering@@Base>:
  418700:	xor    eax,eax
  418702:	test   esi,esi
  418704:	sete   al
  418707:	mov    DWORD PTR [rdi+0x124],eax
  41870d:	ret    
  41870e:	xchg   ax,ax

0000000000418710 <flatcc_builder_set_block_align@@Base>:
  418710:	mov    WORD PTR [rdi+0xec],si
  418717:	ret    
  418718:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418720 <flatcc_builder_get_level@@Base>:
  418720:	mov    eax,DWORD PTR [rdi+0x104]
  418726:	ret    
  418727:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418730 <flatcc_builder_set_max_level@@Base>:
  418730:	cmp    esi,DWORD PTR [rdi+0x108]
  418736:	mov    DWORD PTR [rdi+0x120],esi
  41873c:	jle    418744 <flatcc_builder_set_max_level@@Base+0x14>
  41873e:	mov    DWORD PTR [rdi+0x108],esi
  418744:	repz ret 
  418746:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418750 <flatcc_builder_get_buffer_size@@Base>:
  418750:	mov    eax,DWORD PTR [rdi+0xf4]
  418756:	sub    eax,DWORD PTR [rdi+0xf0]
  41875c:	cdqe   
  41875e:	ret    
  41875f:	nop

0000000000418760 <flatcc_builder_get_buffer_start@@Base>:
  418760:	mov    eax,DWORD PTR [rdi+0xf0]
  418766:	ret    
  418767:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418770 <flatcc_builder_get_buffer_end@@Base>:
  418770:	mov    eax,DWORD PTR [rdi+0xf4]
  418776:	ret    
  418777:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418780 <flatcc_builder_set_vtable_cache_limit@@Base>:
  418780:	mov    QWORD PTR [rdi+0x118],rsi
  418787:	ret    
  418788:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418790 <flatcc_builder_set_identifier@@Base>:
  418790:	test   rsi,rsi
  418793:	je     4187a0 <flatcc_builder_set_identifier@@Base+0x10>
  418795:	mov    eax,DWORD PTR [rsi]
  418797:	mov    DWORD PTR [rdi+0x110],eax
  41879d:	ret    
  41879e:	xchg   ax,ax
  4187a0:	mov    rsi,0x42ee20
  4187a7:	mov    eax,DWORD PTR [rsi]
  4187a9:	mov    DWORD PTR [rdi+0x110],eax
  4187af:	ret    

00000000004187b0 <flatcc_builder_get_type@@Base>:
  4187b0:	mov    rax,QWORD PTR [rdi+0x30]
  4187b4:	test   rax,rax
  4187b7:	je     4187c0 <flatcc_builder_get_type@@Base+0x10>
  4187b9:	movzx  eax,WORD PTR [rax+0xe]
  4187bd:	ret    
  4187be:	xchg   ax,ax
  4187c0:	xor    eax,eax
  4187c2:	ret    
  4187c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4187ce:	xchg   ax,ax

00000000004187d0 <flatcc_builder_get_type_at@@Base>:
  4187d0:	test   esi,esi
  4187d2:	jle    418800 <flatcc_builder_get_type_at@@Base+0x30>
  4187d4:	mov    edx,DWORD PTR [rdi+0x104]
  4187da:	xor    eax,eax
  4187dc:	cmp    esi,edx
  4187de:	jg     418802 <flatcc_builder_get_type_at@@Base+0x32>
  4187e0:	sub    esi,edx
  4187e2:	mov    rdx,QWORD PTR [rdi+0x30]
  4187e6:	movsxd rsi,esi
  4187e9:	lea    rax,[rsi+rsi*8]
  4187ed:	lea    rax,[rdx+rax*4]
  4187f1:	movzx  eax,WORD PTR [rax+0xe]
  4187f5:	ret    
  4187f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418800:	xor    eax,eax
  418802:	repz ret 
  418804:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41880f:	nop

0000000000418810 <flatcc_builder_get_direct_buffer@@Base>:
  418810:	mov    eax,DWORD PTR [rdi+0x128]
  418816:	test   eax,eax
  418818:	je     41882a <flatcc_builder_get_direct_buffer@@Base+0x1a>
  41881a:	mov    rax,QWORD PTR [rdi+0x138]
  418821:	cmp    QWORD PTR [rdi+0x130],rax
  418828:	je     418840 <flatcc_builder_get_direct_buffer@@Base+0x30>
  41882a:	test   rsi,rsi
  41882d:	jne    418832 <flatcc_builder_get_direct_buffer@@Base+0x22>
  41882f:	xor    eax,eax
  418831:	ret    
  418832:	mov    QWORD PTR [rsi],0x0
  418839:	xor    eax,eax
  41883b:	ret    
  41883c:	nop    DWORD PTR [rax+0x0]
  418840:	test   rsi,rsi
  418843:	je     41884f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  418845:	mov    rax,QWORD PTR [rdi+0x160]
  41884c:	mov    QWORD PTR [rsi],rax
  41884f:	mov    rax,QWORD PTR [rdi+0x140]
  418856:	ret    
  418857:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418860 <flatcc_builder_copy_buffer@@Base>:
  418860:	mov    eax,DWORD PTR [rdi+0x128]
  418866:	test   eax,eax
  418868:	je     418888 <flatcc_builder_copy_buffer@@Base+0x28>
  41886a:	sub    rsp,0x8
  41886e:	add    rdi,0x130
  418875:	call   419060 <flatcc_emitter_copy_buffer@@Base>
  41887a:	test   rax,rax
  41887d:	je     41888b <flatcc_builder_copy_buffer@@Base+0x2b>
  41887f:	add    rsp,0x8
  418883:	ret    
  418884:	nop    DWORD PTR [rax+0x0]
  418888:	xor    eax,eax
  41888a:	ret    
  41888b:	lea    rcx,[rip+0x15f0e]        # 42e7a0 <_IO_stdin_used@@Base+0x37a0>
  418892:	lea    rsi,[rip+0x15a97]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418899:	lea    rdi,[rip+0x12d47]        # 42b5e7 <_IO_stdin_used@@Base+0x5e7>
  4188a0:	mov    edx,0x786
  4188a5:	call   405080 <__assert_fail@plt>
  4188aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004188b0 <flatcc_builder_finalize_buffer@@Base>:
  4188b0:	push   r12
  4188b2:	push   rbp
  4188b3:	mov    r12,rdi
  4188b6:	push   rbx
  4188b7:	mov    rbx,rsi
  4188ba:	call   418750 <flatcc_builder_get_buffer_size@@Base>
  4188bf:	test   rbx,rbx
  4188c2:	mov    rbp,rax
  4188c5:	je     4188ca <flatcc_builder_finalize_buffer@@Base+0x1a>
  4188c7:	mov    QWORD PTR [rbx],rax
  4188ca:	mov    rdi,rbp
  4188cd:	call   4050f0 <malloc@plt>
  4188d2:	test   rax,rax
  4188d5:	mov    rbx,rax
  4188d8:	je     4188f5 <flatcc_builder_finalize_buffer@@Base+0x45>
  4188da:	mov    rdx,rbp
  4188dd:	mov    rsi,rax
  4188e0:	mov    rdi,r12
  4188e3:	call   418860 <flatcc_builder_copy_buffer@@Base>
  4188e8:	test   rax,rax
  4188eb:	je     418914 <flatcc_builder_finalize_buffer@@Base+0x64>
  4188ed:	mov    rax,rbx
  4188f0:	pop    rbx
  4188f1:	pop    rbp
  4188f2:	pop    r12
  4188f4:	ret    
  4188f5:	lea    rcx,[rip+0x15e84]        # 42e780 <_IO_stdin_used@@Base+0x3780>
  4188fc:	lea    rsi,[rip+0x15a2d]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418903:	lea    rdi,[rip+0x15dbd]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  41890a:	mov    edx,0x798
  41890f:	call   405080 <__assert_fail@plt>
  418914:	lea    rcx,[rip+0x15e65]        # 42e780 <_IO_stdin_used@@Base+0x3780>
  41891b:	lea    rsi,[rip+0x15a0e]        # 42e330 <_IO_stdin_used@@Base+0x3330>
  418922:	lea    rdi,[rip+0x15d9e]        # 42e6c7 <_IO_stdin_used@@Base+0x36c7>
  418929:	mov    edx,0x79c
  41892e:	call   405080 <__assert_fail@plt>
  418933:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41893e:	xchg   ax,ax

0000000000418940 <flatcc_builder_finalize_aligned_buffer@@Base>:
  418940:	push   r13
  418942:	push   r12
  418944:	mov    r12,rdi
  418947:	push   rbp
  418948:	push   rbx
  418949:	mov    rbp,rsi
  41894c:	sub    rsp,0x18
  418950:	mov    rax,QWORD PTR fs:0x28
  418959:	mov    QWORD PTR [rsp+0x8],rax
  41895e:	xor    eax,eax
  418960:	call   418750 <flatcc_builder_get_buffer_size@@Base>
  418965:	test   rbp,rbp
  418968:	mov    rbx,rax
  41896b:	je     418971 <flatcc_builder_finalize_aligned_buffer@@Base+0x31>
  41896d:	mov    QWORD PTR [rbp+0x0],rax
  418971:	mov    rdi,r12
  418974:	call   4186f0 <flatcc_builder_get_buffer_alignment@@Base>
  418979:	movzx  eax,ax
  41897c:	mov    esi,0x8
  418981:	mov    rdi,rsp
  418984:	lea    rdx,[rbx+rax*1-0x1]
  418989:	mov    rbx,rax
  41898c:	mov    QWORD PTR [rsp],0x0
  418994:	neg    rbx
  418997:	and    rbx,rdx
  41899a:	cmp    rax,0x8
  41899e:	cmovae rsi,rax
  4189a2:	mov    rdx,rbx
  4189a5:	call   405140 <posix_memalign@plt>
  4189aa:	test   eax,eax
  4189ac:	je     4189f0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb0>
  4189ae:	mov    rdi,QWORD PTR [rsp]
  4189b2:	test   rdi,rdi
  4189b5:	je     4189bc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  4189b7:	call   405030 <free@plt>
  4189bc:	test   rbp,rbp
  4189bf:	je     418a16 <flatcc_builder_finalize_aligned_buffer@@Base+0xd6>
  4189c1:	mov    QWORD PTR [rbp+0x0],0x0
  4189c9:	xor    r13d,r13d
  4189cc:	mov    rcx,QWORD PTR [rsp+0x8]
  4189d1:	xor    rcx,QWORD PTR fs:0x28
  4189da:	mov    rax,r13
  4189dd:	jne    418a11 <flatcc_builder_finalize_aligned_buffer@@Base+0xd1>
  4189df:	add    rsp,0x18
  4189e3:	pop    rbx
  4189e4:	pop    rbp
  4189e5:	pop    r12
  4189e7:	pop    r13
  4189e9:	ret    
  4189ea:	nop    WORD PTR [rax+rax*1+0x0]
  4189f0:	mov    r13,QWORD PTR [rsp]
  4189f4:	test   r13,r13
  4189f7:	je     4189bc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  4189f9:	mov    rdx,rbx
  4189fc:	mov    rsi,r13
  4189ff:	mov    rdi,r12
  418a02:	call   418860 <flatcc_builder_copy_buffer@@Base>
  418a07:	test   rax,rax
  418a0a:	jne    4189cc <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  418a0c:	mov    rdi,r13
  418a0f:	jmp    4189b7 <flatcc_builder_finalize_aligned_buffer@@Base+0x77>
  418a11:	call   405070 <__stack_chk_fail@plt>
  418a16:	xor    r13d,r13d
  418a19:	jmp    4189cc <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  418a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418a20 <flatcc_builder_aligned_alloc@@Base>:
  418a20:	sub    rsp,0x18
  418a24:	mov    rdx,rsi
  418a27:	mov    esi,0x8
  418a2c:	mov    rax,QWORD PTR fs:0x28
  418a35:	mov    QWORD PTR [rsp+0x8],rax
  418a3a:	xor    eax,eax
  418a3c:	cmp    rdi,0x8
  418a40:	mov    QWORD PTR [rsp],0x0
  418a48:	cmovae rsi,rdi
  418a4c:	mov    rdi,rsp
  418a4f:	call   405140 <posix_memalign@plt>
  418a54:	test   eax,eax
  418a56:	mov    rax,QWORD PTR [rsp]
  418a5a:	je     418a6b <flatcc_builder_aligned_alloc@@Base+0x4b>
  418a5c:	test   rax,rax
  418a5f:	je     418a6b <flatcc_builder_aligned_alloc@@Base+0x4b>
  418a61:	mov    rdi,rax
  418a64:	call   405030 <free@plt>
  418a69:	xor    eax,eax
  418a6b:	mov    rcx,QWORD PTR [rsp+0x8]
  418a70:	xor    rcx,QWORD PTR fs:0x28
  418a79:	jne    418a80 <flatcc_builder_aligned_alloc@@Base+0x60>
  418a7b:	add    rsp,0x18
  418a7f:	ret    
  418a80:	call   405070 <__stack_chk_fail@plt>
  418a85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418a90 <flatcc_builder_aligned_free@@Base>:
  418a90:	jmp    405030 <free@plt>
  418a95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418aa0 <flatcc_builder_get_emit_context@@Base>:
  418aa0:	mov    rax,QWORD PTR [rdi+0x38]
  418aa4:	ret    
  418aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418aaf:	nop

0000000000418ab0 <flatcc_emitter_recycle_page@@Base>:
  418ab0:	mov    rax,QWORD PTR [rdi]
  418ab3:	cmp    rax,rsi
  418ab6:	je     418b10 <flatcc_emitter_recycle_page@@Base+0x60>
  418ab8:	cmp    rsi,QWORD PTR [rdi+0x8]
  418abc:	je     418b10 <flatcc_emitter_recycle_page@@Base+0x60>
  418abe:	mov    rdx,QWORD PTR [rsi+0xb80]
  418ac5:	mov    rcx,QWORD PTR [rsi+0xb88]
  418acc:	mov    QWORD PTR [rdx+0xb88],rcx
  418ad3:	mov    rcx,QWORD PTR [rsi+0xb88]
  418ada:	mov    QWORD PTR [rcx+0xb80],rdx
  418ae1:	mov    rdx,QWORD PTR [rax+0xb88]
  418ae8:	mov    QWORD PTR [rsi+0xb80],rax
  418aef:	mov    QWORD PTR [rsi+0xb88],rdx
  418af6:	mov    QWORD PTR [rdx+0xb80],rsi
  418afd:	mov    rax,QWORD PTR [rsi+0xb80]
  418b04:	mov    QWORD PTR [rax+0xb88],rsi
  418b0b:	xor    eax,eax
  418b0d:	ret    
  418b0e:	xchg   ax,ax
  418b10:	mov    eax,0xffffffff
  418b15:	ret    
  418b16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418b20 <flatcc_emitter_reset@@Base>:
  418b20:	mov    rax,QWORD PTR [rdi]
  418b23:	test   rax,rax
  418b26:	je     418bed <flatcc_emitter_reset@@Base+0xcd>
  418b2c:	lea    rdx,[rax+0x5c0]
  418b33:	mov    QWORD PTR [rdi+0x8],rax
  418b37:	mov    QWORD PTR [rdi+0x18],0x5c0
  418b3f:	mov    QWORD PTR [rdi+0x28],0x5c0
  418b47:	mov    rcx,QWORD PTR [rdi+0x30]
  418b4b:	mov    QWORD PTR [rdi+0x10],rdx
  418b4f:	mov    QWORD PTR [rdi+0x20],rdx
  418b53:	mov    rdx,QWORD PTR [rdi+0x40]
  418b57:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  418b61:	test   rdx,rdx
  418b64:	je     418bf0 <flatcc_emitter_reset@@Base+0xd0>
  418b6a:	lea    rdx,[rdx+rdx*2]
  418b6e:	shr    rcx,0x2
  418b72:	mov    QWORD PTR [rdi+0x30],0x0
  418b7a:	shr    rdx,0x2
  418b7e:	add    rdx,rcx
  418b81:	mov    QWORD PTR [rdi+0x40],rdx
  418b85:	add    rdx,rdx
  418b88:	cmp    QWORD PTR [rdi+0x38],rdx
  418b8c:	jbe    418bed <flatcc_emitter_reset@@Base+0xcd>
  418b8e:	push   rbx
  418b8f:	mov    rbx,rdi
  418b92:	mov    rdi,QWORD PTR [rax+0xb80]
  418b99:	cmp    rax,rdi
  418b9c:	jne    418bb0 <flatcc_emitter_reset@@Base+0x90>
  418b9e:	jmp    418bec <flatcc_emitter_reset@@Base+0xcc>
  418ba0:	mov    rax,QWORD PTR [rbx+0x8]
  418ba4:	mov    rdi,QWORD PTR [rax+0xb80]
  418bab:	cmp    rdi,QWORD PTR [rbx]
  418bae:	je     418bec <flatcc_emitter_reset@@Base+0xcc>
  418bb0:	mov    rdx,QWORD PTR [rdi+0xb80]
  418bb7:	mov    QWORD PTR [rax+0xb80],rdx
  418bbe:	mov    rdx,QWORD PTR [rdi+0xb80]
  418bc5:	mov    QWORD PTR [rdx+0xb88],rax
  418bcc:	call   405030 <free@plt>
  418bd1:	mov    rsi,QWORD PTR [rbx+0x40]
  418bd5:	mov    rax,QWORD PTR [rbx+0x38]
  418bd9:	lea    rdx,[rsi+rsi*1]
  418bdd:	sub    rax,0xb80
  418be3:	mov    QWORD PTR [rbx+0x38],rax
  418be7:	cmp    rdx,rax
  418bea:	jb     418ba0 <flatcc_emitter_reset@@Base+0x80>
  418bec:	pop    rbx
  418bed:	repz ret 
  418bef:	nop
  418bf0:	mov    rdx,rcx
  418bf3:	jmp    418b6a <flatcc_emitter_reset@@Base+0x4a>
  418bf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418c00 <flatcc_emitter_clear@@Base>:
  418c00:	mov    rax,QWORD PTR [rdi]
  418c03:	test   rax,rax
  418c06:	je     418c87 <flatcc_emitter_clear@@Base+0x87>
  418c08:	push   rbp
  418c09:	push   rbx
  418c0a:	mov    rbp,rdi
  418c0d:	sub    rsp,0x8
  418c11:	mov    rdx,QWORD PTR [rax+0xb88]
  418c18:	mov    QWORD PTR [rdx+0xb80],0x0
  418c23:	mov    rbx,QWORD PTR [rax+0xb80]
  418c2a:	test   rbx,rbx
  418c2d:	jne    418c3b <flatcc_emitter_clear@@Base+0x3b>
  418c2f:	jmp    418c89 <flatcc_emitter_clear@@Base+0x89>
  418c31:	nop    DWORD PTR [rax+0x0]
  418c38:	mov    rbx,rax
  418c3b:	mov    rdi,QWORD PTR [rbx+0xb88]
  418c42:	call   405030 <free@plt>
  418c47:	mov    rax,QWORD PTR [rbx+0xb80]
  418c4e:	test   rax,rax
  418c51:	jne    418c38 <flatcc_emitter_clear@@Base+0x38>
  418c53:	mov    rdi,rbx
  418c56:	call   405030 <free@plt>
  418c5b:	lea    rdi,[rbp+0x8]
  418c5f:	mov    QWORD PTR [rbp+0x0],0x0
  418c67:	mov    QWORD PTR [rbp+0x40],0x0
  418c6f:	xor    eax,eax
  418c71:	and    rdi,0xfffffffffffffff8
  418c75:	sub    rbp,rdi
  418c78:	lea    ecx,[rbp+0x48]
  418c7b:	shr    ecx,0x3
  418c7e:	rep stos QWORD PTR es:[rdi],rax
  418c81:	add    rsp,0x8
  418c85:	pop    rbx
  418c86:	pop    rbp
  418c87:	repz ret 
  418c89:	mov    rbx,rax
  418c8c:	jmp    418c53 <flatcc_emitter_clear@@Base+0x53>
  418c8e:	xchg   ax,ax

0000000000418c90 <flatcc_emitter@@Base>:
  418c90:	push   r15
  418c92:	push   r14
  418c94:	mov    r14,rsi
  418c97:	push   r13
  418c99:	push   r12
  418c9b:	push   rbp
  418c9c:	push   rbx
  418c9d:	mov    rbx,rdi
  418ca0:	sub    rsp,0x18
  418ca4:	add    QWORD PTR [rdi+0x30],r8
  418ca8:	test   ecx,ecx
  418caa:	js     418e9e <flatcc_emitter@@Base+0x20e>
  418cb0:	mov    rax,QWORD PTR [rdi+0x28]
  418cb4:	cmp    r8,rax
  418cb7:	jbe    418d44 <flatcc_emitter@@Base+0xb4>
  418cbd:	test   edx,edx
  418cbf:	je     418d33 <flatcc_emitter@@Base+0xa3>
  418cc1:	lea    r15d,[rdx-0x1]
  418cc5:	add    r15,0x1
  418cc9:	shl    r15,0x4
  418ccd:	lea    rax,[rsi+r15*1]
  418cd1:	mov    QWORD PTR [rsp+0x8],rax
  418cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ce0:	mov    r12,QWORD PTR [r14+0x8]
  418ce4:	mov    r13,QWORD PTR [r14]
  418ce7:	test   r12,r12
  418cea:	je     418d28 <flatcc_emitter@@Base+0x98>
  418cec:	nop    DWORD PTR [rax+0x0]
  418cf0:	mov    rbp,QWORD PTR [rbx+0x28]
  418cf4:	cmp    rbp,r12
  418cf7:	jae    418d98 <flatcc_emitter@@Base+0x108>
  418cfd:	test   rbp,rbp
  418d00:	je     418da8 <flatcc_emitter@@Base+0x118>
  418d06:	sub    r12,rbp
  418d09:	mov    rdi,QWORD PTR [rbx+0x20]
  418d0d:	mov    rsi,r13
  418d10:	mov    rdx,rbp
  418d13:	add    r13,rbp
  418d16:	call   4050e0 <memcpy@plt>
  418d1b:	add    QWORD PTR [rbx+0x20],rbp
  418d1f:	sub    QWORD PTR [rbx+0x28],rbp
  418d23:	test   r12,r12
  418d26:	jne    418cf0 <flatcc_emitter@@Base+0x60>
  418d28:	add    r14,0x10
  418d2c:	cmp    r14,QWORD PTR [rsp+0x8]
  418d31:	jne    418ce0 <flatcc_emitter@@Base+0x50>
  418d33:	add    rsp,0x18
  418d37:	xor    eax,eax
  418d39:	pop    rbx
  418d3a:	pop    rbp
  418d3b:	pop    r12
  418d3d:	pop    r13
  418d3f:	pop    r14
  418d41:	pop    r15
  418d43:	ret    
  418d44:	mov    rcx,QWORD PTR [rdi+0x20]
  418d48:	sub    rax,r8
  418d4b:	mov    QWORD PTR [rdi+0x28],rax
  418d4f:	lea    rsi,[rcx+r8*1]
  418d53:	mov    QWORD PTR [rdi+0x20],rsi
  418d57:	test   edx,edx
  418d59:	je     418d33 <flatcc_emitter@@Base+0xa3>
  418d5b:	lea    ebx,[rdx-0x1]
  418d5e:	add    rbx,0x1
  418d62:	shl    rbx,0x4
  418d66:	add    rbx,r14
  418d69:	nop    DWORD PTR [rax+0x0]
  418d70:	mov    rsi,QWORD PTR [r14]
  418d73:	mov    rdx,QWORD PTR [r14+0x8]
  418d77:	mov    rdi,rcx
  418d7a:	add    r14,0x10
  418d7e:	call   4050e0 <memcpy@plt>
  418d83:	mov    rcx,rax
  418d86:	add    rcx,QWORD PTR [r14-0x8]
  418d8a:	cmp    rbx,r14
  418d8d:	jne    418d70 <flatcc_emitter@@Base+0xe0>
  418d8f:	jmp    418d33 <flatcc_emitter@@Base+0xa3>
  418d91:	nop    DWORD PTR [rax+0x0]
  418d98:	mov    rbp,r12
  418d9b:	xor    r12d,r12d
  418d9e:	jmp    418d09 <flatcc_emitter@@Base+0x79>
  418da3:	nop    DWORD PTR [rax+rax*1+0x0]
  418da8:	mov    r15,QWORD PTR [rbx+0x8]
  418dac:	test   r15,r15
  418daf:	je     418e30 <flatcc_emitter@@Base+0x1a0>
  418db1:	mov    rbp,QWORD PTR [r15+0xb80]
  418db8:	cmp    rbp,QWORD PTR [rbx]
  418dbb:	je     418df0 <flatcc_emitter@@Base+0x160>
  418dbd:	mov    QWORD PTR [rbx+0x8],rbp
  418dc1:	mov    rax,QWORD PTR [rbp+0xb88]
  418dc8:	mov    QWORD PTR [rbx+0x20],rbp
  418dcc:	mov    QWORD PTR [rbx+0x28],0xb80
  418dd4:	mov    eax,DWORD PTR [rax+0xb90]
  418dda:	add    eax,0xb80
  418ddf:	mov    DWORD PTR [rbp+0xb90],eax
  418de5:	jmp    418cf0 <flatcc_emitter@@Base+0x60>
  418dea:	nop    WORD PTR [rax+rax*1+0x0]
  418df0:	mov    edi,0xb98
  418df5:	call   4050f0 <malloc@plt>
  418dfa:	test   rax,rax
  418dfd:	je     418e3f <flatcc_emitter@@Base+0x1af>
  418dff:	mov    QWORD PTR [rax+0xb80],rbp
  418e06:	add    QWORD PTR [rbx+0x38],0xb80
  418e0e:	mov    QWORD PTR [rax+0xb88],r15
  418e15:	mov    QWORD PTR [rbp+0xb88],rax
  418e1c:	mov    rbp,rax
  418e1f:	mov    QWORD PTR [r15+0xb80],rax
  418e26:	mov    QWORD PTR [rbx+0x8],rax
  418e2a:	jmp    418dc1 <flatcc_emitter@@Base+0x131>
  418e2c:	nop    DWORD PTR [rax+0x0]
  418e30:	mov    edi,0xb98
  418e35:	call   4050f0 <malloc@plt>
  418e3a:	test   rax,rax
  418e3d:	jne    418e53 <flatcc_emitter@@Base+0x1c3>
  418e3f:	add    rsp,0x18
  418e43:	mov    eax,0xffffffff
  418e48:	pop    rbx
  418e49:	pop    rbp
  418e4a:	pop    r12
  418e4c:	pop    r13
  418e4e:	pop    r14
  418e50:	pop    r15
  418e52:	ret    
  418e53:	lea    rdx,[rax+0x5c0]
  418e5a:	add    QWORD PTR [rbx+0x38],0xb80
  418e62:	mov    QWORD PTR [rbx],rax
  418e65:	mov    QWORD PTR [rbx+0x8],rax
  418e69:	mov    QWORD PTR [rax+0xb80],rax
  418e70:	mov    QWORD PTR [rax+0xb88],rax
  418e77:	mov    QWORD PTR [rbx+0x10],rdx
  418e7b:	mov    QWORD PTR [rbx+0x20],rdx
  418e7f:	mov    QWORD PTR [rbx+0x18],0x5c0
  418e87:	mov    QWORD PTR [rbx+0x28],0x5c0
  418e8f:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  418e99:	jmp    418cf0 <flatcc_emitter@@Base+0x60>
  418e9e:	mov    rax,QWORD PTR [rdi+0x18]
  418ea2:	cmp    r8,rax
  418ea5:	jbe    418f3c <flatcc_emitter@@Base+0x2ac>
  418eab:	movsxd rax,edx
  418eae:	shl    rax,0x4
  418eb2:	add    r14,rax
  418eb5:	mov    eax,edx
  418eb7:	shl    rax,0x4
  418ebb:	mov    rcx,r14
  418ebe:	sub    rcx,rax
  418ec1:	mov    QWORD PTR [rsp+0x8],rcx
  418ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ed0:	cmp    r14,QWORD PTR [rsp+0x8]
  418ed5:	je     418d33 <flatcc_emitter@@Base+0xa3>
  418edb:	sub    r14,0x10
  418edf:	mov    rbp,QWORD PTR [r14+0x8]
  418ee3:	mov    r12,rbp
  418ee6:	add    r12,QWORD PTR [r14]
  418ee9:	test   rbp,rbp
  418eec:	je     418ed0 <flatcc_emitter@@Base+0x240>
  418eee:	mov    rdx,QWORD PTR [rbx+0x18]
  418ef2:	cmp    rdx,rbp
  418ef5:	jae    418f2f <flatcc_emitter@@Base+0x29f>
  418ef7:	test   rdx,rdx
  418efa:	je     418f58 <flatcc_emitter@@Base+0x2c8>
  418efc:	sub    rbp,rdx
  418eff:	xor    ecx,ecx
  418f01:	mov    rax,rdx
  418f04:	mov    QWORD PTR [rbx+0x18],rcx
  418f08:	neg    rax
  418f0b:	mov    rdi,rax
  418f0e:	add    rdi,QWORD PTR [rbx+0x10]
  418f12:	add    r12,rax
  418f15:	mov    rsi,r12
  418f18:	mov    QWORD PTR [rbx+0x10],rdi
  418f1c:	call   4050e0 <memcpy@plt>
  418f21:	test   rbp,rbp
  418f24:	je     418ed0 <flatcc_emitter@@Base+0x240>
  418f26:	mov    rdx,QWORD PTR [rbx+0x18]
  418f2a:	cmp    rdx,rbp
  418f2d:	jb     418ef7 <flatcc_emitter@@Base+0x267>
  418f2f:	mov    rcx,rdx
  418f32:	mov    rdx,rbp
  418f35:	sub    rcx,rbp
  418f38:	xor    ebp,ebp
  418f3a:	jmp    418f01 <flatcc_emitter@@Base+0x271>
  418f3c:	mov    rcx,QWORD PTR [rdi+0x10]
  418f40:	sub    rax,r8
  418f43:	mov    QWORD PTR [rdi+0x18],rax
  418f47:	sub    rcx,r8
  418f4a:	mov    QWORD PTR [rdi+0x10],rcx
  418f4e:	jmp    418d57 <flatcc_emitter@@Base+0xc7>
  418f53:	nop    DWORD PTR [rax+rax*1+0x0]
  418f58:	mov    r13,QWORD PTR [rbx]
  418f5b:	test   r13,r13
  418f5e:	je     418fff <flatcc_emitter@@Base+0x36f>
  418f64:	mov    r15,QWORD PTR [r13+0xb88]
  418f6b:	cmp    r15,QWORD PTR [rbx+0x8]
  418f6f:	je     418fc0 <flatcc_emitter@@Base+0x330>
  418f71:	mov    eax,DWORD PTR [r13+0xb90]
  418f78:	sub    eax,0xb80
  418f7d:	mov    DWORD PTR [r15+0xb90],eax
  418f84:	mov    QWORD PTR [rbx],r15
  418f87:	lea    rax,[r15+0xb80]
  418f8e:	mov    QWORD PTR [rbx+0x18],0xb80
  418f96:	mov    QWORD PTR [rbx+0x10],rax
  418f9a:	mov    rax,QWORD PTR [r15+0xb80]
  418fa1:	mov    eax,DWORD PTR [rax+0xb90]
  418fa7:	sub    eax,0xb80
  418fac:	mov    DWORD PTR [r15+0xb90],eax
  418fb3:	jmp    418eee <flatcc_emitter@@Base+0x25e>
  418fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  418fc0:	mov    edi,0xb98
  418fc5:	call   4050f0 <malloc@plt>
  418fca:	test   rax,rax
  418fcd:	je     418e3f <flatcc_emitter@@Base+0x1af>
  418fd3:	mov    QWORD PTR [rax+0xb88],r15
  418fda:	add    QWORD PTR [rbx+0x38],0xb80
  418fe2:	mov    QWORD PTR [rax+0xb80],r13
  418fe9:	mov    QWORD PTR [r13+0xb88],rax
  418ff0:	mov    QWORD PTR [r15+0xb80],rax
  418ff7:	mov    QWORD PTR [rbx],rax
  418ffa:	mov    r15,rax
  418ffd:	jmp    418f87 <flatcc_emitter@@Base+0x2f7>
  418fff:	mov    edi,0xb98
  419004:	call   4050f0 <malloc@plt>
  419009:	test   rax,rax
  41900c:	je     418e3f <flatcc_emitter@@Base+0x1af>
  419012:	lea    rdx,[rax+0x5c0]
  419019:	add    QWORD PTR [rbx+0x38],0xb80
  419021:	mov    QWORD PTR [rbx],rax
  419024:	mov    QWORD PTR [rbx+0x8],rax
  419028:	mov    QWORD PTR [rax+0xb80],rax
  41902f:	mov    QWORD PTR [rax+0xb88],rax
  419036:	mov    QWORD PTR [rbx+0x10],rdx
  41903a:	mov    QWORD PTR [rbx+0x20],rdx
  41903e:	mov    QWORD PTR [rbx+0x18],0x5c0
  419046:	mov    QWORD PTR [rbx+0x28],0x5c0
  41904e:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  419058:	jmp    418eee <flatcc_emitter@@Base+0x25e>
  41905d:	nop    DWORD PTR [rax]

0000000000419060 <flatcc_emitter_copy_buffer@@Base>:
  419060:	push   rbp
  419061:	push   rbx
  419062:	sub    rsp,0x8
  419066:	mov    r9,QWORD PTR [rdi+0x30]
  41906a:	cmp    r9,rdx
  41906d:	ja     419130 <flatcc_emitter_copy_buffer@@Base+0xd0>
  419073:	mov    rax,QWORD PTR [rdi]
  419076:	test   rax,rax
  419079:	je     419130 <flatcc_emitter_copy_buffer@@Base+0xd0>
  41907f:	cmp    rax,QWORD PTR [rdi+0x8]
  419083:	mov    rcx,rsi
  419086:	mov    rbx,rdi
  419089:	je     419140 <flatcc_emitter_copy_buffer@@Base+0xe0>
  41908f:	mov    r8d,0xb80
  419095:	sub    r8,QWORD PTR [rdi+0x18]
  419099:	mov    rsi,QWORD PTR [rdi+0x10]
  41909d:	mov    rdi,rcx
  4190a0:	mov    rbp,r8
  4190a3:	mov    rdx,r8
  4190a6:	call   4050e0 <memcpy@plt>
  4190ab:	add    rbp,rax
  4190ae:	mov    rax,QWORD PTR [rbx]
  4190b1:	mov    rsi,QWORD PTR [rbx+0x8]
  4190b5:	mov    rax,QWORD PTR [rax+0xb80]
  4190bc:	cmp    rax,rsi
  4190bf:	je     419114 <flatcc_emitter_copy_buffer@@Base+0xb4>
  4190c1:	nop    DWORD PTR [rax+0x0]
  4190c8:	mov    rdx,QWORD PTR [rax]
  4190cb:	lea    rdi,[rbp+0x8]
  4190cf:	mov    rcx,rbp
  4190d2:	mov    rsi,rax
  4190d5:	add    rbp,0xb80
  4190dc:	and    rdi,0xfffffffffffffff8
  4190e0:	mov    QWORD PTR [rbp-0xb80],rdx
  4190e7:	mov    rdx,QWORD PTR [rax+0xb78]
  4190ee:	sub    rcx,rdi
  4190f1:	sub    rsi,rcx
  4190f4:	add    ecx,0xb80
  4190fa:	shr    ecx,0x3
  4190fd:	mov    QWORD PTR [rbp-0x8],rdx
  419101:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419104:	mov    rax,QWORD PTR [rax+0xb80]
  41910b:	mov    rsi,QWORD PTR [rbx+0x8]
  41910f:	cmp    rsi,rax
  419112:	jne    4190c8 <flatcc_emitter_copy_buffer@@Base+0x68>
  419114:	mov    edx,0xb80
  419119:	sub    rdx,QWORD PTR [rbx+0x28]
  41911d:	mov    rdi,rbp
  419120:	call   4050e0 <memcpy@plt>
  419125:	add    rsp,0x8
  419129:	mov    rax,rbp
  41912c:	pop    rbx
  41912d:	pop    rbp
  41912e:	ret    
  41912f:	nop
  419130:	xor    ebp,ebp
  419132:	add    rsp,0x8
  419136:	mov    rax,rbp
  419139:	pop    rbx
  41913a:	pop    rbp
  41913b:	ret    
  41913c:	nop    DWORD PTR [rax+0x0]
  419140:	mov    rsi,QWORD PTR [rdi+0x10]
  419144:	mov    rdx,r9
  419147:	mov    rdi,rcx
  41914a:	call   4050e0 <memcpy@plt>
  41914f:	mov    rbp,rax
  419152:	jmp    419125 <flatcc_emitter_copy_buffer@@Base+0xc5>
  419154:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41915e:	xchg   ax,ax
  419160:	mov    eax,0x4
  419165:	lea    esi,[rax+rsi*2]
  419168:	cmp    si,WORD PTR [rdi+0x1e]
  41916c:	jae    419198 <flatcc_emitter_copy_buffer@@Base+0x138>
  41916e:	mov    rax,QWORD PTR [rdi+0x10]
  419172:	movzx  esi,si
  419175:	movzx  esi,WORD PTR [rax+rsi*1]
  419179:	test   esi,esi
  41917b:	je     419198 <flatcc_emitter_copy_buffer@@Base+0x138>
  41917d:	movzx  edx,WORD PTR [rdi+0x1c]
  419181:	lea    r8d,[rsi+0x4]
  419185:	mov    eax,0xd
  41918a:	cmp    r8d,edx
  41918d:	jbe    4191b0 <flatcc_emitter_copy_buffer@@Base+0x150>
  41918f:	repz ret 
  419191:	nop    DWORD PTR [rax+0x0]
  419198:	xor    eax,eax
  41919a:	test   edx,edx
  41919c:	mov    DWORD PTR [rcx],0x0
  4191a2:	setne  al
  4191a5:	shl    eax,0x2
  4191a8:	ret    
  4191a9:	nop    DWORD PTR [rax+0x0]
  4191b0:	add    esi,DWORD PTR [rdi+0x18]
  4191b3:	mov    eax,0xc
  4191b8:	test   sil,0x3
  4191bc:	jne    41918f <flatcc_emitter_copy_buffer@@Base+0x12f>
  4191be:	mov    DWORD PTR [rcx],esi
  4191c0:	xor    eax,eax
  4191c2:	ret    
  4191c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4191ce:	xchg   ax,ax

00000000004191d0 <flatcc_verify_error_string@@Base>:
  4191d0:	cmp    edi,0x24
  4191d3:	ja     419440 <flatcc_verify_error_string@@Base+0x270>
  4191d9:	lea    rdx,[rip+0x162d8]        # 42f4b8 <flatcc_builder_padding_base@@Base+0x698>
  4191e0:	mov    edi,edi
  4191e2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4191e6:	add    rax,rdx
  4191e9:	jmp    rax
  4191eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4191f0:	lea    rax,[rip+0x15e29]        # 42f020 <flatcc_builder_padding_base@@Base+0x200>
  4191f7:	ret    
  4191f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419200:	lea    rax,[rip+0x15fb5]        # 42f1bc <flatcc_builder_padding_base@@Base+0x39c>
  419207:	ret    
  419208:	nop    DWORD PTR [rax+rax*1+0x0]
  419210:	lea    rax,[rip+0x16279]        # 42f490 <flatcc_builder_padding_base@@Base+0x670>
  419217:	ret    
  419218:	nop    DWORD PTR [rax+rax*1+0x0]
  419220:	lea    rax,[rip+0x16231]        # 42f458 <flatcc_builder_padding_base@@Base+0x638>
  419227:	ret    
  419228:	nop    DWORD PTR [rax+rax*1+0x0]
  419230:	lea    rax,[rip+0x161f9]        # 42f430 <flatcc_builder_padding_base@@Base+0x610>
  419237:	ret    
  419238:	nop    DWORD PTR [rax+rax*1+0x0]
  419240:	lea    rax,[rip+0x161c1]        # 42f408 <flatcc_builder_padding_base@@Base+0x5e8>
  419247:	ret    
  419248:	nop    DWORD PTR [rax+rax*1+0x0]
  419250:	lea    rax,[rip+0x15f50]        # 42f1a7 <flatcc_builder_padding_base@@Base+0x387>
  419257:	ret    
  419258:	nop    DWORD PTR [rax+rax*1+0x0]
  419260:	lea    rax,[rip+0x16179]        # 42f3e0 <flatcc_builder_padding_base@@Base+0x5c0>
  419267:	ret    
  419268:	nop    DWORD PTR [rax+rax*1+0x0]
  419270:	lea    rax,[rip+0x16141]        # 42f3b8 <flatcc_builder_padding_base@@Base+0x598>
  419277:	ret    
  419278:	nop    DWORD PTR [rax+rax*1+0x0]
  419280:	lea    rax,[rip+0x15f08]        # 42f18f <flatcc_builder_padding_base@@Base+0x36f>
  419287:	ret    
  419288:	nop    DWORD PTR [rax+rax*1+0x0]
  419290:	lea    rax,[rip+0x15edd]        # 42f174 <flatcc_builder_padding_base@@Base+0x354>
  419297:	ret    
  419298:	nop    DWORD PTR [rax+rax*1+0x0]
  4192a0:	lea    rax,[rip+0x15eb9]        # 42f160 <flatcc_builder_padding_base@@Base+0x340>
  4192a7:	ret    
  4192a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192b0:	lea    rax,[rip+0x160d1]        # 42f388 <flatcc_builder_padding_base@@Base+0x568>
  4192b7:	ret    
  4192b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192c0:	lea    rax,[rip+0x16091]        # 42f358 <flatcc_builder_padding_base@@Base+0x538>
  4192c7:	ret    
  4192c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192d0:	lea    rax,[rip+0x16051]        # 42f328 <flatcc_builder_padding_base@@Base+0x508>
  4192d7:	ret    
  4192d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192e0:	lea    rax,[rip+0x16009]        # 42f2f0 <flatcc_builder_padding_base@@Base+0x4d0>
  4192e7:	ret    
  4192e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192f0:	lea    rax,[rip+0x15fc9]        # 42f2c0 <flatcc_builder_padding_base@@Base+0x4a0>
  4192f7:	ret    
  4192f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419300:	lea    rax,[rip+0x15e41]        # 42f148 <flatcc_builder_padding_base@@Base+0x328>
  419307:	ret    
  419308:	nop    DWORD PTR [rax+rax*1+0x0]
  419310:	lea    rax,[rip+0x15f81]        # 42f298 <flatcc_builder_padding_base@@Base+0x478>
  419317:	ret    
  419318:	nop    DWORD PTR [rax+rax*1+0x0]
  419320:	lea    rax,[rip+0x15e0d]        # 42f134 <flatcc_builder_padding_base@@Base+0x314>
  419327:	ret    
  419328:	nop    DWORD PTR [rax+rax*1+0x0]
  419330:	lea    rax,[rip+0x15f39]        # 42f270 <flatcc_builder_padding_base@@Base+0x450>
  419337:	ret    
  419338:	nop    DWORD PTR [rax+rax*1+0x0]
  419340:	lea    rax,[rip+0x15f01]        # 42f248 <flatcc_builder_padding_base@@Base+0x428>
  419347:	ret    
  419348:	nop    DWORD PTR [rax+rax*1+0x0]
  419350:	lea    rax,[rip+0x15ec9]        # 42f220 <flatcc_builder_padding_base@@Base+0x400>
  419357:	ret    
  419358:	nop    DWORD PTR [rax+rax*1+0x0]
  419360:	lea    rax,[rip+0x15db3]        # 42f11a <flatcc_builder_padding_base@@Base+0x2fa>
  419367:	ret    
  419368:	nop    DWORD PTR [rax+rax*1+0x0]
  419370:	lea    rax,[rip+0x15d8a]        # 42f101 <flatcc_builder_padding_base@@Base+0x2e1>
  419377:	ret    
  419378:	nop    DWORD PTR [rax+rax*1+0x0]
  419380:	lea    rax,[rip+0x15d62]        # 42f0e9 <flatcc_builder_padding_base@@Base+0x2c9>
  419387:	ret    
  419388:	nop    DWORD PTR [rax+rax*1+0x0]
  419390:	lea    rax,[rip+0x15d41]        # 42f0d8 <flatcc_builder_padding_base@@Base+0x2b8>
  419397:	ret    
  419398:	nop    DWORD PTR [rax+rax*1+0x0]
  4193a0:	lea    rax,[rip+0x15d1c]        # 42f0c3 <flatcc_builder_padding_base@@Base+0x2a3>
  4193a7:	ret    
  4193a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4193b0:	lea    rax,[rip+0x15cf8]        # 42f0af <flatcc_builder_padding_base@@Base+0x28f>
  4193b7:	ret    
  4193b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4193c0:	lea    rax,[rip+0x15cd4]        # 42f09b <flatcc_builder_padding_base@@Base+0x27b>
  4193c7:	ret    
  4193c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4193d0:	lea    rax,[rip+0x15ca9]        # 42f080 <flatcc_builder_padding_base@@Base+0x260>
  4193d7:	ret    
  4193d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4193e0:	lea    rax,[rip+0x15e19]        # 42f200 <flatcc_builder_padding_base@@Base+0x3e0>
  4193e7:	ret    
  4193e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4193f0:	lea    rax,[rip+0x15de1]        # 42f1d8 <flatcc_builder_padding_base@@Base+0x3b8>
  4193f7:	ret    
  4193f8:	nop    DWORD PTR [rax+rax*1+0x0]
  419400:	lea    rax,[rip+0x15c62]        # 42f069 <flatcc_builder_padding_base@@Base+0x249>
  419407:	ret    
  419408:	nop    DWORD PTR [rax+rax*1+0x0]
  419410:	lea    rax,[rip+0x15c38]        # 42f04f <flatcc_builder_padding_base@@Base+0x22f>
  419417:	ret    
  419418:	nop    DWORD PTR [rax+rax*1+0x0]
  419420:	lea    rax,[rip+0x15c14]        # 42f03b <flatcc_builder_padding_base@@Base+0x21b>
  419427:	ret    
  419428:	nop    DWORD PTR [rax+rax*1+0x0]
  419430:	lea    rax,[rip+0x15bec]        # 42f023 <flatcc_builder_padding_base@@Base+0x203>
  419437:	ret    
  419438:	nop    DWORD PTR [rax+rax*1+0x0]
  419440:	lea    rax,[rip+0x15d83]        # 42f1ca <flatcc_builder_padding_base@@Base+0x3aa>
  419447:	ret    
  419448:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419450 <flatcc_verify_field@@Base>:
  419450:	mov    eax,0x4
  419455:	lea    esi,[rax+rsi*2]
  419458:	xor    eax,eax
  41945a:	cmp    si,WORD PTR [rdi+0x1e]
  41945e:	jae    419489 <flatcc_verify_field@@Base+0x39>
  419460:	mov    r8,QWORD PTR [rdi+0x10]
  419464:	movzx  esi,si
  419467:	movzx  r8d,WORD PTR [r8+rsi*1]
  41946c:	test   r8d,r8d
  41946f:	je     419489 <flatcc_verify_field@@Base+0x39>
  419471:	movzx  r9d,WORD PTR [rdi+0x1c]
  419476:	add    edx,r8d
  419479:	movzx  ecx,cx
  41947c:	mov    rsi,QWORD PTR [rdi]
  41947f:	mov    eax,0xd
  419484:	cmp    edx,r9d
  419487:	jbe    419490 <flatcc_verify_field@@Base+0x40>
  419489:	repz ret 
  41948b:	nop    DWORD PTR [rax+rax*1+0x0]
  419490:	add    esi,DWORD PTR [rdi+0x18]
  419493:	sub    ecx,0x1
  419496:	add    esi,r8d
  419499:	and    ecx,esi
  41949b:	cmp    ecx,0x1
  41949e:	sbb    eax,eax
  4194a0:	not    eax
  4194a2:	and    eax,0xc
  4194a5:	ret    
  4194a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004194b0 <flatcc_verify_string_field@@Base>:
  4194b0:	sub    rsp,0x18
  4194b4:	movzx  esi,si
  4194b7:	mov    r9,rdi
  4194ba:	lea    rcx,[rsp+0x4]
  4194bf:	mov    rax,QWORD PTR fs:0x28
  4194c8:	mov    QWORD PTR [rsp+0x8],rax
  4194cd:	xor    eax,eax
  4194cf:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  4194d4:	test   eax,eax
  4194d6:	jne    419520 <flatcc_verify_string_field@@Base+0x70>
  4194d8:	mov    edx,DWORD PTR [rsp+0x4]
  4194dc:	test   edx,edx
  4194de:	je     419520 <flatcc_verify_string_field@@Base+0x70>
  4194e0:	mov    rsi,QWORD PTR [rdi]
  4194e3:	mov    ecx,edx
  4194e5:	mov    edi,DWORD PTR [rsi+rcx*1]
  4194e8:	add    edi,edx
  4194ea:	cmp    edx,edi
  4194ec:	mov    ecx,edi
  4194ee:	jae    419538 <flatcc_verify_string_field@@Base+0x88>
  4194f0:	mov    r8d,DWORD PTR [r9+0x8]
  4194f4:	mov    edi,edi
  4194f6:	lea    r9,[rdi+0x4]
  4194fa:	cmp    r9,r8
  4194fd:	mov    rdx,r8
  419500:	ja     419538 <flatcc_verify_string_field@@Base+0x88>
  419502:	test   cl,0x3
  419505:	jne    419538 <flatcc_verify_string_field@@Base+0x88>
  419507:	mov    edi,DWORD PTR [rsi+rdi*1]
  41950a:	add    ecx,0x4
  41950d:	sub    edx,ecx
  41950f:	lea    r8d,[rdi+0x1]
  419513:	cmp    edx,r8d
  419516:	jae    419540 <flatcc_verify_string_field@@Base+0x90>
  419518:	mov    eax,0x8
  41951d:	nop    DWORD PTR [rax]
  419520:	mov    rdi,QWORD PTR [rsp+0x8]
  419525:	xor    rdi,QWORD PTR fs:0x28
  41952e:	jne    419551 <flatcc_verify_string_field@@Base+0xa1>
  419530:	add    rsp,0x18
  419534:	ret    
  419535:	nop    DWORD PTR [rax]
  419538:	mov    eax,0x11
  41953d:	jmp    419520 <flatcc_verify_string_field@@Base+0x70>
  41953f:	nop
  419540:	add    rcx,rsi
  419543:	mov    edx,0x7
  419548:	cmp    BYTE PTR [rcx+rdi*1],0x0
  41954c:	cmovne eax,edx
  41954f:	jmp    419520 <flatcc_verify_string_field@@Base+0x70>
  419551:	call   405070 <__stack_chk_fail@plt>
  419556:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000419560 <flatcc_verify_vector_field@@Base>:
  419560:	push   rbx
  419561:	mov    rbx,rcx
  419564:	movzx  esi,si
  419567:	mov    r10,rdi
  41956a:	mov    r11d,r8d
  41956d:	sub    rsp,0x10
  419571:	lea    rcx,[rsp+0x4]
  419576:	mov    rax,QWORD PTR fs:0x28
  41957f:	mov    QWORD PTR [rsp+0x8],rax
  419584:	xor    eax,eax
  419586:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  41958b:	test   eax,eax
  41958d:	jne    4195f0 <flatcc_verify_vector_field@@Base+0x90>
  41958f:	mov    edx,DWORD PTR [rsp+0x4]
  419593:	test   edx,edx
  419595:	je     4195f0 <flatcc_verify_vector_field@@Base+0x90>
  419597:	mov    rsi,QWORD PTR [rdi]
  41959a:	mov    ecx,edx
  41959c:	mov    edi,DWORD PTR [rsi+rcx*1]
  41959f:	add    edi,edx
  4195a1:	cmp    edx,edi
  4195a3:	mov    ecx,edi
  4195a5:	jae    419610 <flatcc_verify_vector_field@@Base+0xb0>
  4195a7:	mov    edx,DWORD PTR [r10+0x8]
  4195ab:	mov    r10d,ecx
  4195ae:	lea    r8,[r10+0x4]
  4195b2:	cmp    r8,rdx
  4195b5:	mov    rdi,rdx
  4195b8:	ja     419610 <flatcc_verify_vector_field@@Base+0xb0>
  4195ba:	cmp    r11w,0x4
  4195bf:	mov    edx,0x4
  4195c4:	cmovae edx,r11d
  4195c8:	movzx  edx,dx
  4195cb:	sub    edx,0x1
  4195ce:	or     edx,0x3
  4195d1:	movsxd rdx,edx
  4195d4:	test   rdx,r8
  4195d7:	jne    419610 <flatcc_verify_vector_field@@Base+0xb0>
  4195d9:	mov    edx,DWORD PTR [rsi+r10*1]
  4195dd:	cmp    edx,r9d
  4195e0:	jbe    419620 <flatcc_verify_vector_field@@Base+0xc0>
  4195e2:	mov    eax,0x19
  4195e7:	nop    WORD PTR [rax+rax*1+0x0]
  4195f0:	mov    rbx,QWORD PTR [rsp+0x8]
  4195f5:	xor    rbx,QWORD PTR fs:0x28
  4195fe:	jne    419634 <flatcc_verify_vector_field@@Base+0xd4>
  419600:	add    rsp,0x10
  419604:	pop    rbx
  419605:	ret    
  419606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419610:	mov    eax,0x10
  419615:	jmp    4195f0 <flatcc_verify_vector_field@@Base+0x90>
  419617:	nop    WORD PTR [rax+rax*1+0x0]
  419620:	imul   ebx,edx
  419623:	sub    edi,0x4
  419626:	mov    edx,0x1a
  41962b:	sub    edi,ecx
  41962d:	cmp    edi,ebx
  41962f:	cmovb  eax,edx
  419632:	jmp    4195f0 <flatcc_verify_vector_field@@Base+0x90>
  419634:	call   405070 <__stack_chk_fail@plt>
  419639:	nop    DWORD PTR [rax+0x0]

0000000000419640 <flatcc_verify_string_vector_field@@Base>:
  419640:	push   rbp
  419641:	push   rbx
  419642:	movzx  esi,si
  419645:	mov    r9,rdi
  419648:	sub    rsp,0x18
  41964c:	lea    rcx,[rsp+0x4]
  419651:	mov    rax,QWORD PTR fs:0x28
  41965a:	mov    QWORD PTR [rsp+0x8],rax
  41965f:	xor    eax,eax
  419661:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  419666:	test   eax,eax
  419668:	jne    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41966a:	mov    edx,DWORD PTR [rsp+0x4]
  41966e:	test   edx,edx
  419670:	je     4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  419672:	mov    rsi,QWORD PTR [rdi]
  419675:	mov    ecx,edx
  419677:	mov    edi,DWORD PTR [rsi+rcx*1]
  41967a:	add    edi,edx
  41967c:	cmp    edx,edi
  41967e:	mov    ecx,edi
  419680:	jae    4196e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  419682:	mov    r10d,DWORD PTR [r9+0x8]
  419686:	mov    r9d,edi
  419689:	lea    rbx,[r9+0x4]
  41968d:	cmp    rbx,r10
  419690:	mov    r11,r10
  419693:	ja     4196e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  419695:	test   bl,0x3
  419698:	jne    4196a6 <flatcc_verify_string_vector_field@@Base+0x66>
  41969a:	mov    edi,DWORD PTR [rsi+r9*1]
  41969e:	cmp    edi,0x3fffffff
  4196a4:	jbe    4196f0 <flatcc_verify_string_vector_field@@Base+0xb0>
  4196a6:	and    ebx,0x3
  4196a9:	jne    4196e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  4196ab:	mov    edx,DWORD PTR [rsi+r9*1]
  4196af:	cmp    edx,0x3fffffff
  4196b5:	jbe    419760 <flatcc_verify_string_vector_field@@Base+0x120>
  4196bb:	mov    eax,0x19
  4196c0:	mov    rdi,QWORD PTR [rsp+0x8]
  4196c5:	xor    rdi,QWORD PTR fs:0x28
  4196ce:	jne    4197db <flatcc_verify_string_vector_field@@Base+0x19b>
  4196d4:	add    rsp,0x18
  4196d8:	pop    rbx
  4196d9:	pop    rbp
  4196da:	ret    
  4196db:	nop    DWORD PTR [rax+rax*1+0x0]
  4196e0:	mov    eax,0x10
  4196e5:	jmp    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  4196e7:	nop    WORD PTR [rax+rax*1+0x0]
  4196f0:	lea    edx,[rcx+0x4]
  4196f3:	lea    r8d,[rdi*4+0x0]
  4196fb:	mov    ebp,r11d
  4196fe:	sub    ebp,edx
  419700:	cmp    ebp,r8d
  419703:	jb     4196a6 <flatcc_verify_string_vector_field@@Base+0x66>
  419705:	test   edi,edi
  419707:	je     4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  419709:	mov    ecx,edx
  41970b:	mov    ebx,DWORD PTR [rsi+rcx*1]
  41970e:	add    ebx,edx
  419710:	cmp    edx,ebx
  419712:	mov    ecx,ebx
  419714:	jae    419750 <flatcc_verify_string_vector_field@@Base+0x110>
  419716:	mov    edi,ebx
  419718:	lea    r9,[rdi+0x4]
  41971c:	cmp    r10,r9
  41971f:	jb     419750 <flatcc_verify_string_vector_field@@Base+0x110>
  419721:	test   bl,0x3
  419724:	jne    419750 <flatcc_verify_string_vector_field@@Base+0x110>
  419726:	mov    edi,DWORD PTR [rsi+rdi*1]
  419729:	add    ecx,0x4
  41972c:	mov    ebx,r11d
  41972f:	sub    ebx,ecx
  419731:	lea    r9d,[rdi+0x1]
  419735:	cmp    ebx,r9d
  419738:	jae    41977a <flatcc_verify_string_vector_field@@Base+0x13a>
  41973a:	nop    WORD PTR [rax+rax*1+0x0]
  419740:	mov    eax,0x8
  419745:	jmp    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41974a:	nop    WORD PTR [rax+rax*1+0x0]
  419750:	mov    eax,0x11
  419755:	jmp    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41975a:	nop    WORD PTR [rax+rax*1+0x0]
  419760:	sub    r11d,0x4
  419764:	shl    edx,0x2
  419767:	sub    r11d,ecx
  41976a:	cmp    r11d,edx
  41976d:	mov    edx,0x1a
  419772:	cmovb  eax,edx
  419775:	jmp    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41977a:	add    r8d,edx
  41977d:	nop    DWORD PTR [rax]
  419780:	add    rcx,rsi
  419783:	cmp    BYTE PTR [rcx+rdi*1],0x0
  419787:	je     419798 <flatcc_verify_string_vector_field@@Base+0x158>
  419789:	mov    eax,0x7
  41978e:	jmp    4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  419793:	nop    DWORD PTR [rax+rax*1+0x0]
  419798:	add    edx,0x4
  41979b:	cmp    r8d,edx
  41979e:	je     4196c0 <flatcc_verify_string_vector_field@@Base+0x80>
  4197a4:	mov    ecx,edx
  4197a6:	mov    ebx,DWORD PTR [rsi+rcx*1]
  4197a9:	add    ebx,edx
  4197ab:	cmp    edx,ebx
  4197ad:	mov    ecx,ebx
  4197af:	jae    419750 <flatcc_verify_string_vector_field@@Base+0x110>
  4197b1:	mov    edi,ebx
  4197b3:	lea    r9,[rdi+0x4]
  4197b7:	cmp    r10,r9
  4197ba:	jb     419750 <flatcc_verify_string_vector_field@@Base+0x110>
  4197bc:	test   bl,0x3
  4197bf:	jne    419750 <flatcc_verify_string_vector_field@@Base+0x110>
  4197c1:	mov    edi,DWORD PTR [rsi+rdi*1]
  4197c4:	add    ecx,0x4
  4197c7:	mov    ebx,r11d
  4197ca:	sub    ebx,ecx
  4197cc:	lea    r9d,[rdi+0x1]
  4197d0:	cmp    ebx,r9d
  4197d3:	jb     419740 <flatcc_verify_string_vector_field@@Base+0x100>
  4197d9:	jmp    419780 <flatcc_verify_string_vector_field@@Base+0x140>
  4197db:	call   405070 <__stack_chk_fail@plt>

00000000004197e0 <flatcc_verify_table_field@@Base>:
  4197e0:	sub    rsp,0x48
  4197e4:	mov    r10,rcx
  4197e7:	movzx  esi,si
  4197ea:	lea    rcx,[rsp+0xc]
  4197ef:	mov    r9,rdi
  4197f2:	mov    rax,QWORD PTR fs:0x28
  4197fb:	mov    QWORD PTR [rsp+0x38],rax
  419800:	xor    eax,eax
  419802:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  419807:	test   eax,eax
  419809:	jne    419813 <flatcc_verify_table_field@@Base+0x33>
  41980b:	mov    edx,DWORD PTR [rsp+0xc]
  41980f:	test   edx,edx
  419811:	jne    419830 <flatcc_verify_table_field@@Base+0x50>
  419813:	mov    rdi,QWORD PTR [rsp+0x38]
  419818:	xor    rdi,QWORD PTR fs:0x28
  419821:	jne    419922 <flatcc_verify_table_field@@Base+0x142>
  419827:	add    rsp,0x48
  41982b:	ret    
  41982c:	nop    DWORD PTR [rax+0x0]
  419830:	mov    ecx,DWORD PTR [r9+0xc]
  419834:	mov    rdi,QWORD PTR [rdi]
  419837:	mov    eax,edx
  419839:	mov    r8d,DWORD PTR [r9+0x8]
  41983d:	sub    ecx,0x1
  419840:	mov    esi,DWORD PTR [rdi+rax*1]
  419843:	mov    eax,0x3
  419848:	test   ecx,ecx
  41984a:	mov    DWORD PTR [rsp+0x1c],ecx
  41984e:	je     419813 <flatcc_verify_table_field@@Base+0x33>
  419850:	add    esi,edx
  419852:	mov    eax,0xf
  419857:	cmp    edx,esi
  419859:	jae    419813 <flatcc_verify_table_field@@Base+0x33>
  41985b:	mov    edx,esi
  41985d:	mov    ecx,r8d
  419860:	lea    r9,[rdx+0x4]
  419864:	cmp    r9,rcx
  419867:	ja     419813 <flatcc_verify_table_field@@Base+0x33>
  419869:	test   sil,0x3
  41986d:	jne    419813 <flatcc_verify_table_field@@Base+0x33>
  41986f:	mov    DWORD PTR [rsp+0x28],esi
  419873:	mov    eax,esi
  419875:	sub    eax,DWORD PTR [rdi+rdx*1]
  419878:	mov    edx,eax
  41987a:	js     419918 <flatcc_verify_table_field@@Base+0x138>
  419880:	test   dl,0x1
  419883:	jne    419918 <flatcc_verify_table_field@@Base+0x138>
  419889:	mov    r9d,edx
  41988c:	mov    eax,0x1b
  419891:	lea    r11,[r9+0x2]
  419895:	cmp    rcx,r11
  419898:	jb     419813 <flatcc_verify_table_field@@Base+0x33>
  41989e:	add    r9,rdi
  4198a1:	mov    eax,0x1e
  4198a6:	movzx  r11d,WORD PTR [r9]
  4198aa:	mov    ecx,r11d
  4198ad:	mov    WORD PTR [rsp+0x2e],r11w
  4198b3:	add    r11d,edx
  4198b6:	cmp    r8d,r11d
  4198b9:	jb     419813 <flatcc_verify_table_field@@Base+0x33>
  4198bf:	test   cl,0x1
  4198c2:	jne    419813 <flatcc_verify_table_field@@Base+0x33>
  4198c8:	cmp    cx,0x3
  4198cc:	mov    eax,0x1c
  4198d1:	jbe    419813 <flatcc_verify_table_field@@Base+0x33>
  4198d7:	lea    eax,[rdx+0x2]
  4198da:	mov    ecx,r8d
  4198dd:	sub    ecx,esi
  4198df:	movzx  edx,WORD PTR [rdi+rax*1]
  4198e3:	mov    eax,0x14
  4198e8:	cmp    ecx,edx
  4198ea:	mov    WORD PTR [rsp+0x2c],dx
  4198ef:	jb     419813 <flatcc_verify_table_field@@Base+0x33>
  4198f5:	mov    QWORD PTR [rsp+0x10],rdi
  4198fa:	mov    QWORD PTR [rsp+0x20],r9
  4198ff:	lea    rdi,[rsp+0x10]
  419904:	mov    DWORD PTR [rsp+0x18],r8d
  419909:	call   r10
  41990c:	jmp    419813 <flatcc_verify_table_field@@Base+0x33>
  419911:	nop    DWORD PTR [rax+0x0]
  419918:	mov    eax,0x1d
  41991d:	jmp    419813 <flatcc_verify_table_field@@Base+0x33>
  419922:	call   405070 <__stack_chk_fail@plt>
  419927:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419930 <flatcc_verify_table_vector_field@@Base>:
  419930:	push   r15
  419932:	push   r14
  419934:	movzx  esi,si
  419937:	push   r13
  419939:	push   r12
  41993b:	mov    r12,rcx
  41993e:	push   rbp
  41993f:	push   rbx
  419940:	mov    r9,rdi
  419943:	sub    rsp,0x68
  419947:	lea    rcx,[rsp+0x2c]
  41994c:	mov    rax,QWORD PTR fs:0x28
  419955:	mov    QWORD PTR [rsp+0x58],rax
  41995a:	xor    eax,eax
  41995c:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  419961:	test   eax,eax
  419963:	mov    ebp,eax
  419965:	jne    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419967:	mov    eax,DWORD PTR [rsp+0x2c]
  41996b:	test   eax,eax
  41996d:	jne    419998 <flatcc_verify_table_vector_field@@Base+0x68>
  41996f:	mov    rdi,QWORD PTR [rsp+0x58]
  419974:	xor    rdi,QWORD PTR fs:0x28
  41997d:	mov    eax,ebp
  41997f:	jne    419c56 <flatcc_verify_table_vector_field@@Base+0x326>
  419985:	add    rsp,0x68
  419989:	pop    rbx
  41998a:	pop    rbp
  41998b:	pop    r12
  41998d:	pop    r13
  41998f:	pop    r14
  419991:	pop    r15
  419993:	ret    
  419994:	nop    DWORD PTR [rax+0x0]
  419998:	mov    r14d,DWORD PTR [rdi+0xc]
  41999c:	test   r14d,r14d
  41999f:	jle    4199e8 <flatcc_verify_table_vector_field@@Base+0xb8>
  4199a1:	mov    r15,QWORD PTR [rdi]
  4199a4:	mov    edx,eax
  4199a6:	mov    edi,DWORD PTR [r15+rdx*1]
  4199aa:	add    edi,eax
  4199ac:	cmp    eax,edi
  4199ae:	jae    4199f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  4199b0:	mov    ecx,DWORD PTR [r9+0x8]
  4199b4:	mov    r8d,edi
  4199b7:	lea    r9,[r8+0x4]
  4199bb:	cmp    r9,rcx
  4199be:	mov    rsi,rcx
  4199c1:	ja     4199f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  4199c3:	test   r9b,0x3
  4199c7:	je     419a00 <flatcc_verify_table_vector_field@@Base+0xd0>
  4199c9:	and    r9d,0x3
  4199cd:	jne    4199f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  4199cf:	mov    eax,DWORD PTR [r15+r8*1]
  4199d3:	cmp    eax,0x3fffffff
  4199d8:	jbe    419c35 <flatcc_verify_table_vector_field@@Base+0x305>
  4199de:	mov    ebp,0x19
  4199e3:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  4199e5:	nop    DWORD PTR [rax]
  4199e8:	mov    ebp,0x3
  4199ed:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  4199ef:	nop
  4199f0:	mov    ebp,0x10
  4199f5:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  4199fa:	nop    WORD PTR [rax+rax*1+0x0]
  419a00:	mov    eax,DWORD PTR [r15+r8*1]
  419a04:	cmp    eax,0x3fffffff
  419a09:	ja     4199c9 <flatcc_verify_table_vector_field@@Base+0x99>
  419a0b:	lea    ebx,[rdi+0x4]
  419a0e:	lea    edx,[rax*4+0x0]
  419a15:	mov    r10d,esi
  419a18:	sub    r10d,ebx
  419a1b:	cmp    r10d,edx
  419a1e:	jb     4199c9 <flatcc_verify_table_vector_field@@Base+0x99>
  419a20:	test   eax,eax
  419a22:	je     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419a28:	sub    r14d,0x2
  419a2c:	mov    r13d,ebx
  419a2f:	add    r13,r15
  419a32:	test   r14d,r14d
  419a35:	mov    eax,DWORD PTR [r13+0x0]
  419a39:	mov    DWORD PTR [rsp+0x3c],r14d
  419a3e:	je     4199e8 <flatcc_verify_table_vector_field@@Base+0xb8>
  419a40:	add    eax,ebx
  419a42:	cmp    ebx,eax
  419a44:	jae    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419a46:	mov    edi,eax
  419a48:	lea    r8,[rdi+0x4]
  419a4c:	cmp    rcx,r8
  419a4f:	jb     419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419a51:	test   al,0x3
  419a53:	jne    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419a55:	lea    r8,[rsp+0x30]
  419a5a:	add    edx,ebx
  419a5c:	nop    DWORD PTR [rax+0x0]
  419a60:	mov    DWORD PTR [rsp+0x48],eax
  419a64:	mov    r11d,eax
  419a67:	sub    r11d,DWORD PTR [r15+rdi*1]
  419a6b:	mov    edi,r11d
  419a6e:	js     419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419a70:	test   dil,0x1
  419a74:	jne    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419a76:	mov    r9d,edi
  419a79:	lea    r10,[r9+0x2]
  419a7d:	cmp    rcx,r10
  419a80:	jae    419b68 <flatcc_verify_table_vector_field@@Base+0x238>
  419a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a90:	mov    eax,DWORD PTR [r13+0x0]
  419a94:	mov    ebp,0xf
  419a99:	mov    DWORD PTR [rsp+0x3c],r14d
  419a9e:	add    eax,ebx
  419aa0:	cmp    ebx,eax
  419aa2:	jae    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419aa8:	mov    edx,eax
  419aaa:	lea    rdi,[rdx+0x4]
  419aae:	cmp    rcx,rdi
  419ab1:	jb     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419ab7:	test   al,0x3
  419ab9:	jne    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419abf:	mov    DWORD PTR [rsp+0x48],eax
  419ac3:	mov    ebx,eax
  419ac5:	sub    ebx,DWORD PTR [r15+rdx*1]
  419ac9:	mov    edx,ebx
  419acb:	js     419c4c <flatcc_verify_table_vector_field@@Base+0x31c>
  419ad1:	test   dl,0x1
  419ad4:	jne    419c4c <flatcc_verify_table_vector_field@@Base+0x31c>
  419ada:	mov    edi,edx
  419adc:	mov    ebp,0x1b
  419ae1:	lea    r8,[rdi+0x2]
  419ae5:	cmp    rcx,r8
  419ae8:	jb     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419aee:	lea    rcx,[r15+rdi*1]
  419af2:	mov    ebp,0x1e
  419af7:	movzx  r8d,WORD PTR [rcx]
  419afb:	mov    edi,r8d
  419afe:	mov    WORD PTR [rsp+0x4e],r8w
  419b04:	add    r8d,edx
  419b07:	cmp    esi,r8d
  419b0a:	jb     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419b10:	test   dil,0x1
  419b14:	jne    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419b1a:	cmp    di,0x3
  419b1e:	mov    ebp,0x1c
  419b23:	jbe    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419b29:	add    edx,0x2
  419b2c:	mov    ebx,esi
  419b2e:	mov    ebp,0x14
  419b33:	movzx  edx,WORD PTR [r15+rdx*1]
  419b38:	sub    ebx,eax
  419b3a:	cmp    ebx,edx
  419b3c:	mov    WORD PTR [rsp+0x4c],dx
  419b41:	jb     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419b47:	mov    QWORD PTR [rsp+0x40],rcx
  419b4c:	mov    QWORD PTR [rsp+0x30],r15
  419b51:	lea    rdi,[rsp+0x30]
  419b56:	mov    DWORD PTR [rsp+0x38],esi
  419b5a:	call   r12
  419b5d:	mov    ebp,eax
  419b5f:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419b64:	nop    DWORD PTR [rax+0x0]
  419b68:	add    r9,r15
  419b6b:	movzx  r10d,WORD PTR [r9]
  419b6f:	mov    r11d,r10d
  419b72:	mov    WORD PTR [rsp+0x4e],r10w
  419b78:	add    r10d,edi
  419b7b:	cmp    esi,r10d
  419b7e:	jb     419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419b84:	test   r11b,0x1
  419b88:	jne    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419b8e:	cmp    r11w,0x3
  419b93:	jbe    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419b99:	add    edi,0x2
  419b9c:	mov    r10d,esi
  419b9f:	movzx  edi,WORD PTR [r15+rdi*1]
  419ba4:	sub    r10d,eax
  419ba7:	cmp    r10d,edi
  419baa:	mov    WORD PTR [rsp+0x4c],di
  419baf:	jb     419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419bb5:	mov    DWORD PTR [rsp+0x1c],edx
  419bb9:	mov    QWORD PTR [rsp+0x10],rcx
  419bbe:	mov    rdi,r8
  419bc1:	mov    DWORD PTR [rsp+0x38],esi
  419bc5:	mov    DWORD PTR [rsp+0x18],esi
  419bc9:	mov    QWORD PTR [rsp+0x8],r8
  419bce:	mov    QWORD PTR [rsp+0x40],r9
  419bd3:	mov    QWORD PTR [rsp+0x30],r15
  419bd8:	call   r12
  419bdb:	test   eax,eax
  419bdd:	mov    r8,QWORD PTR [rsp+0x8]
  419be2:	mov    esi,DWORD PTR [rsp+0x18]
  419be6:	mov    rcx,QWORD PTR [rsp+0x10]
  419beb:	mov    edx,DWORD PTR [rsp+0x1c]
  419bef:	jne    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419bf5:	add    ebx,0x4
  419bf8:	cmp    ebx,edx
  419bfa:	je     41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419c00:	mov    r13d,ebx
  419c03:	add    r13,r15
  419c06:	mov    eax,DWORD PTR [r13+0x0]
  419c0a:	mov    DWORD PTR [rsp+0x3c],r14d
  419c0f:	add    eax,ebx
  419c11:	cmp    ebx,eax
  419c13:	jae    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419c19:	mov    edi,eax
  419c1b:	lea    r9,[rdi+0x4]
  419c1f:	cmp    rcx,r9
  419c22:	jb     419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419c28:	test   al,0x3
  419c2a:	je     419a60 <flatcc_verify_table_vector_field@@Base+0x130>
  419c30:	jmp    419a90 <flatcc_verify_table_vector_field@@Base+0x160>
  419c35:	sub    esi,0x4
  419c38:	shl    eax,0x2
  419c3b:	sub    esi,edi
  419c3d:	cmp    esi,eax
  419c3f:	mov    eax,0x1a
  419c44:	cmovb  ebp,eax
  419c47:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419c4c:	mov    ebp,0x1d
  419c51:	jmp    41996f <flatcc_verify_table_vector_field@@Base+0x3f>
  419c56:	call   405070 <__stack_chk_fail@plt>
  419c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419c60 <flatcc_verify_union_table@@Base>:
  419c60:	sub    rsp,0x38
  419c64:	mov    edx,DWORD PTR [rdi+0xc]
  419c67:	mov    r8d,DWORD PTR [rdi+0x18]
  419c6b:	mov    rax,QWORD PTR fs:0x28
  419c74:	mov    QWORD PTR [rsp+0x28],rax
  419c79:	xor    eax,eax
  419c7b:	mov    ecx,DWORD PTR [rdi+0x14]
  419c7e:	mov    r10d,DWORD PTR [rdi+0x8]
  419c82:	mov    eax,0x3
  419c87:	sub    edx,0x1
  419c8a:	mov    r9,QWORD PTR [rdi]
  419c8d:	test   edx,edx
  419c8f:	mov    DWORD PTR [rsp+0xc],edx
  419c93:	jne    419cb0 <flatcc_verify_union_table@@Base+0x50>
  419c95:	mov    rsi,QWORD PTR [rsp+0x28]
  419c9a:	xor    rsi,QWORD PTR fs:0x28
  419ca3:	jne    419d7a <flatcc_verify_union_table@@Base+0x11a>
  419ca9:	add    rsp,0x38
  419cad:	ret    
  419cae:	xchg   ax,ax
  419cb0:	add    r8d,ecx
  419cb3:	mov    eax,0xf
  419cb8:	cmp    ecx,r8d
  419cbb:	jae    419c95 <flatcc_verify_union_table@@Base+0x35>
  419cbd:	mov    edx,r8d
  419cc0:	mov    ecx,r10d
  419cc3:	lea    rdi,[rdx+0x4]
  419cc7:	cmp    rdi,rcx
  419cca:	ja     419c95 <flatcc_verify_union_table@@Base+0x35>
  419ccc:	test   r8b,0x3
  419cd0:	jne    419c95 <flatcc_verify_union_table@@Base+0x35>
  419cd2:	mov    DWORD PTR [rsp+0x18],r8d
  419cd7:	mov    eax,r8d
  419cda:	sub    eax,DWORD PTR [r9+rdx*1]
  419cde:	mov    edx,eax
  419ce0:	js     419d70 <flatcc_verify_union_table@@Base+0x110>
  419ce6:	test   dl,0x1
  419ce9:	jne    419d70 <flatcc_verify_union_table@@Base+0x110>
  419cef:	mov    edi,edx
  419cf1:	mov    eax,0x1b
  419cf6:	lea    r11,[rdi+0x2]
  419cfa:	cmp    rcx,r11
  419cfd:	jb     419c95 <flatcc_verify_union_table@@Base+0x35>
  419cff:	add    rdi,r9
  419d02:	mov    eax,0x1e
  419d07:	movzx  ecx,WORD PTR [rdi]
  419d0a:	mov    r11d,ecx
  419d0d:	mov    WORD PTR [rsp+0x1e],cx
  419d12:	add    ecx,edx
  419d14:	cmp    r10d,ecx
  419d17:	jb     419c95 <flatcc_verify_union_table@@Base+0x35>
  419d1d:	test   r11b,0x1
  419d21:	jne    419c95 <flatcc_verify_union_table@@Base+0x35>
  419d27:	cmp    r11w,0x3
  419d2c:	mov    eax,0x1c
  419d31:	jbe    419c95 <flatcc_verify_union_table@@Base+0x35>
  419d37:	lea    eax,[rdx+0x2]
  419d3a:	mov    ecx,r10d
  419d3d:	sub    ecx,r8d
  419d40:	movzx  edx,WORD PTR [r9+rax*1]
  419d45:	mov    eax,0x14
  419d4a:	cmp    ecx,edx
  419d4c:	mov    WORD PTR [rsp+0x1c],dx
  419d51:	jb     419c95 <flatcc_verify_union_table@@Base+0x35>
  419d57:	mov    QWORD PTR [rsp+0x10],rdi
  419d5c:	mov    QWORD PTR [rsp],r9
  419d60:	mov    rdi,rsp
  419d63:	mov    DWORD PTR [rsp+0x8],r10d
  419d68:	call   rsi
  419d6a:	jmp    419c95 <flatcc_verify_union_table@@Base+0x35>
  419d6f:	nop
  419d70:	mov    eax,0x1d
  419d75:	jmp    419c95 <flatcc_verify_union_table@@Base+0x35>
  419d7a:	call   405070 <__stack_chk_fail@plt>
  419d7f:	nop

0000000000419d80 <flatcc_verify_union_struct@@Base>:
  419d80:	mov    ecx,DWORD PTR [rdi+0x18]
  419d83:	mov    r8d,DWORD PTR [rdi+0x14]
  419d87:	mov    eax,0x12
  419d8c:	mov    edi,DWORD PTR [rdi+0x8]
  419d8f:	test   ecx,ecx
  419d91:	jne    419d98 <flatcc_verify_union_struct@@Base+0x18>
  419d93:	repz ret 
  419d95:	nop    DWORD PTR [rax]
  419d98:	add    ecx,r8d
  419d9b:	cmp    edi,ecx
  419d9d:	jb     419d93 <flatcc_verify_union_struct@@Base+0x13>
  419d9f:	add    esi,ecx
  419da1:	jb     419dbf <flatcc_verify_union_struct@@Base+0x3f>
  419da3:	cmp    edi,esi
  419da5:	mov    eax,0x9
  419daa:	jb     419d93 <flatcc_verify_union_struct@@Base+0x13>
  419dac:	movzx  eax,dx
  419daf:	sub    eax,0x1
  419db2:	and    ecx,eax
  419db4:	cmp    ecx,0x1
  419db7:	sbb    eax,eax
  419db9:	not    eax
  419dbb:	and    eax,0xb
  419dbe:	ret    
  419dbf:	mov    eax,0xa
  419dc4:	ret    
  419dc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000419dd0 <flatcc_verify_union_string@@Base>:
  419dd0:	mov    ecx,DWORD PTR [rdi+0x14]
  419dd3:	mov    edx,DWORD PTR [rdi+0x18]
  419dd6:	mov    eax,0x11
  419ddb:	add    edx,ecx
  419ddd:	cmp    ecx,edx
  419ddf:	jae    419e11 <flatcc_verify_union_string@@Base+0x41>
  419de1:	mov    r8d,DWORD PTR [rdi+0x8]
  419de5:	mov    esi,edx
  419de7:	lea    r9,[rsi+0x4]
  419deb:	cmp    r9,r8
  419dee:	mov    rcx,r8
  419df1:	ja     419e11 <flatcc_verify_union_string@@Base+0x41>
  419df3:	test   dl,0x3
  419df6:	jne    419e18 <flatcc_verify_union_string@@Base+0x48>
  419df8:	mov    rdi,QWORD PTR [rdi]
  419dfb:	add    edx,0x4
  419dfe:	mov    eax,0x8
  419e03:	sub    ecx,edx
  419e05:	mov    esi,DWORD PTR [rdi+rsi*1]
  419e08:	lea    r8d,[rsi+0x1]
  419e0c:	cmp    ecx,r8d
  419e0f:	jae    419e20 <flatcc_verify_union_string@@Base+0x50>
  419e11:	repz ret 
  419e13:	nop    DWORD PTR [rax+rax*1+0x0]
  419e18:	repz ret 
  419e1a:	nop    WORD PTR [rax+rax*1+0x0]
  419e20:	add    rdx,rdi
  419e23:	add    rdx,rsi
  419e26:	cmp    BYTE PTR [rdx],0x1
  419e29:	sbb    eax,eax
  419e2b:	not    eax
  419e2d:	and    eax,0x7
  419e30:	ret    
  419e31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419e3c:	nop    DWORD PTR [rax+0x0]

0000000000419e40 <flatcc_verify_buffer_header@@Base>:
  419e40:	push   rbx
  419e41:	sub    rsp,0x10
  419e45:	mov    rax,QWORD PTR fs:0x28
  419e4e:	mov    QWORD PTR [rsp+0x8],rax
  419e53:	xor    eax,eax
  419e55:	test   dil,0x3
  419e59:	mov    eax,0x5
  419e5e:	je     419e80 <flatcc_verify_buffer_header@@Base+0x40>
  419e60:	mov    rcx,QWORD PTR [rsp+0x8]
  419e65:	xor    rcx,QWORD PTR fs:0x28
  419e6e:	jne    419ed5 <flatcc_verify_buffer_header@@Base+0x95>
  419e70:	add    rsp,0x10
  419e74:	pop    rbx
  419e75:	ret    
  419e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e80:	mov    rcx,rdx
  419e83:	mov    edx,0xfffffff7
  419e88:	mov    eax,0x6
  419e8d:	cmp    rsi,rdx
  419e90:	ja     419e60 <flatcc_verify_buffer_header@@Base+0x20>
  419e92:	cmp    rsi,0x7
  419e96:	mov    eax,0x1
  419e9b:	jbe    419e60 <flatcc_verify_buffer_header@@Base+0x20>
  419e9d:	test   rcx,rcx
  419ea0:	je     419ed1 <flatcc_verify_buffer_header@@Base+0x91>
  419ea2:	mov    rbx,rdi
  419ea5:	lea    rdi,[rsp+0x4]
  419eaa:	mov    edx,0x4
  419eaf:	mov    rsi,rcx
  419eb2:	mov    DWORD PTR [rsp+0x4],0x0
  419eba:	call   405040 <strncpy@plt>
  419ebf:	mov    edx,DWORD PTR [rsp+0x4]
  419ec3:	cmp    DWORD PTR [rbx+0x4],edx
  419ec6:	je     419ed1 <flatcc_verify_buffer_header@@Base+0x91>
  419ec8:	test   edx,edx
  419eca:	mov    eax,0x2
  419ecf:	jne    419e60 <flatcc_verify_buffer_header@@Base+0x20>
  419ed1:	xor    eax,eax
  419ed3:	jmp    419e60 <flatcc_verify_buffer_header@@Base+0x20>
  419ed5:	call   405070 <__stack_chk_fail@plt>
  419eda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419ee0 <flatcc_verify_typed_buffer_header@@Base>:
  419ee0:	test   dil,0x3
  419ee4:	mov    eax,0x5
  419ee9:	je     419ef0 <flatcc_verify_typed_buffer_header@@Base+0x10>
  419eeb:	repz ret 
  419eed:	nop    DWORD PTR [rax]
  419ef0:	mov    ecx,0xfffffff7
  419ef5:	mov    eax,0x6
  419efa:	cmp    rsi,rcx
  419efd:	ja     419eeb <flatcc_verify_typed_buffer_header@@Base+0xb>
  419eff:	cmp    rsi,0x7
  419f03:	mov    eax,0x1
  419f08:	jbe    419eeb <flatcc_verify_typed_buffer_header@@Base+0xb>
  419f0a:	xor    eax,eax
  419f0c:	test   edx,edx
  419f0e:	je     419eeb <flatcc_verify_typed_buffer_header@@Base+0xb>
  419f10:	xor    eax,eax
  419f12:	cmp    edx,DWORD PTR [rdi+0x4]
  419f15:	setne  al
  419f18:	add    eax,eax
  419f1a:	ret    
  419f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419f20 <flatcc_verify_struct_as_root@@Base>:
  419f20:	push   r14
  419f22:	push   r13
  419f24:	mov    r14d,r8d
  419f27:	push   r12
  419f29:	push   rbp
  419f2a:	mov    r12,rdx
  419f2d:	push   rbx
  419f2e:	mov    rbp,rdi
  419f31:	mov    rbx,rsi
  419f34:	mov    r13,rcx
  419f37:	call   419e40 <flatcc_verify_buffer_header@@Base>
  419f3c:	test   eax,eax
  419f3e:	jne    419f60 <flatcc_verify_struct_as_root@@Base+0x40>
  419f40:	mov    edx,DWORD PTR [rbp+0x0]
  419f43:	cmp    edx,ebx
  419f45:	ja     419f4b <flatcc_verify_struct_as_root@@Base+0x2b>
  419f47:	test   edx,edx
  419f49:	jne    419f80 <flatcc_verify_struct_as_root@@Base+0x60>
  419f4b:	mov    eax,0x12
  419f50:	pop    rbx
  419f51:	pop    rbp
  419f52:	pop    r12
  419f54:	pop    r13
  419f56:	pop    r14
  419f58:	ret    
  419f59:	nop    DWORD PTR [rax+0x0]
  419f60:	mov    rdx,r12
  419f63:	mov    rsi,rbx
  419f66:	mov    rdi,rbp
  419f69:	pop    rbx
  419f6a:	pop    rbp
  419f6b:	pop    r12
  419f6d:	pop    r13
  419f6f:	pop    r14
  419f71:	jmp    419e40 <flatcc_verify_buffer_header@@Base>
  419f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f80:	add    r13d,edx
  419f83:	jb     419fab <flatcc_verify_struct_as_root@@Base+0x8b>
  419f85:	cmp    ebx,r13d
  419f88:	jae    419f98 <flatcc_verify_struct_as_root@@Base+0x78>
  419f8a:	mov    eax,0x9
  419f8f:	jmp    419f50 <flatcc_verify_struct_as_root@@Base+0x30>
  419f91:	nop    DWORD PTR [rax+0x0]
  419f98:	movzx  ecx,r14w
  419f9c:	sub    ecx,0x1
  419f9f:	test   ecx,edx
  419fa1:	mov    edx,0xb
  419fa6:	cmovne eax,edx
  419fa9:	jmp    419f50 <flatcc_verify_struct_as_root@@Base+0x30>
  419fab:	mov    eax,0xa
  419fb0:	jmp    419f50 <flatcc_verify_struct_as_root@@Base+0x30>
  419fb2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419fbd:	nop    DWORD PTR [rax]

0000000000419fc0 <flatcc_verify_struct_as_typed_root@@Base>:
  419fc0:	push   r14
  419fc2:	push   r13
  419fc4:	mov    r14d,r8d
  419fc7:	push   r12
  419fc9:	push   rbp
  419fca:	mov    r12d,edx
  419fcd:	push   rbx
  419fce:	mov    rbp,rdi
  419fd1:	mov    rbx,rsi
  419fd4:	mov    r13,rcx
  419fd7:	call   419ee0 <flatcc_verify_typed_buffer_header@@Base>
  419fdc:	test   eax,eax
  419fde:	jne    41a000 <flatcc_verify_struct_as_typed_root@@Base+0x40>
  419fe0:	mov    edx,DWORD PTR [rbp+0x0]
  419fe3:	cmp    edx,ebx
  419fe5:	ja     419feb <flatcc_verify_struct_as_typed_root@@Base+0x2b>
  419fe7:	test   edx,edx
  419fe9:	jne    41a020 <flatcc_verify_struct_as_typed_root@@Base+0x60>
  419feb:	mov    eax,0x12
  419ff0:	pop    rbx
  419ff1:	pop    rbp
  419ff2:	pop    r12
  419ff4:	pop    r13
  419ff6:	pop    r14
  419ff8:	ret    
  419ff9:	nop    DWORD PTR [rax+0x0]
  41a000:	mov    edx,r12d
  41a003:	mov    rsi,rbx
  41a006:	mov    rdi,rbp
  41a009:	pop    rbx
  41a00a:	pop    rbp
  41a00b:	pop    r12
  41a00d:	pop    r13
  41a00f:	pop    r14
  41a011:	jmp    419ee0 <flatcc_verify_typed_buffer_header@@Base>
  41a016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a020:	add    r13d,edx
  41a023:	jb     41a04b <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  41a025:	cmp    ebx,r13d
  41a028:	jae    41a038 <flatcc_verify_struct_as_typed_root@@Base+0x78>
  41a02a:	mov    eax,0x9
  41a02f:	jmp    419ff0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41a031:	nop    DWORD PTR [rax+0x0]
  41a038:	movzx  ecx,r14w
  41a03c:	sub    ecx,0x1
  41a03f:	test   ecx,edx
  41a041:	mov    edx,0xb
  41a046:	cmovne eax,edx
  41a049:	jmp    419ff0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41a04b:	mov    eax,0xa
  41a050:	jmp    419ff0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41a052:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a05d:	nop    DWORD PTR [rax]

000000000041a060 <flatcc_verify_table_as_root@@Base>:
  41a060:	push   r14
  41a062:	push   r13
  41a064:	mov    r13,rsi
  41a067:	push   r12
  41a069:	push   rbp
  41a06a:	mov    ebp,esi
  41a06c:	push   rbx
  41a06d:	mov    rsi,rbp
  41a070:	mov    rbx,rdi
  41a073:	mov    r12,rdx
  41a076:	mov    r14,rcx
  41a079:	sub    rsp,0x30
  41a07d:	mov    rax,QWORD PTR fs:0x28
  41a086:	mov    QWORD PTR [rsp+0x28],rax
  41a08b:	xor    eax,eax
  41a08d:	call   419e40 <flatcc_verify_buffer_header@@Base>
  41a092:	test   eax,eax
  41a094:	jne    41a0e8 <flatcc_verify_table_as_root@@Base+0x88>
  41a096:	mov    edx,DWORD PTR [rbx]
  41a098:	mov    DWORD PTR [rsp+0xc],0x63
  41a0a0:	mov    eax,0xf
  41a0a5:	test   edx,edx
  41a0a7:	je     41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a0a9:	mov    ecx,edx
  41a0ab:	lea    rsi,[rcx+0x4]
  41a0af:	cmp    rbp,rsi
  41a0b2:	jb     41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a0b4:	test   dl,0x3
  41a0b7:	je     41a100 <flatcc_verify_table_as_root@@Base+0xa0>
  41a0b9:	nop    DWORD PTR [rax+0x0]
  41a0c0:	mov    rcx,QWORD PTR [rsp+0x28]
  41a0c5:	xor    rcx,QWORD PTR fs:0x28
  41a0ce:	jne    41a1aa <flatcc_verify_table_as_root@@Base+0x14a>
  41a0d4:	add    rsp,0x30
  41a0d8:	pop    rbx
  41a0d9:	pop    rbp
  41a0da:	pop    r12
  41a0dc:	pop    r13
  41a0de:	pop    r14
  41a0e0:	ret    
  41a0e1:	nop    DWORD PTR [rax+0x0]
  41a0e8:	mov    rdx,r12
  41a0eb:	mov    rsi,rbp
  41a0ee:	mov    rdi,rbx
  41a0f1:	call   419e40 <flatcc_verify_buffer_header@@Base>
  41a0f6:	jmp    41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a0f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a100:	mov    eax,edx
  41a102:	sub    eax,DWORD PTR [rbx+rcx*1]
  41a105:	mov    DWORD PTR [rsp+0x18],edx
  41a109:	mov    ecx,eax
  41a10b:	js     41a1a0 <flatcc_verify_table_as_root@@Base+0x140>
  41a111:	test   cl,0x1
  41a114:	jne    41a1a0 <flatcc_verify_table_as_root@@Base+0x140>
  41a11a:	mov    esi,ecx
  41a11c:	mov    eax,0x1b
  41a121:	lea    rdi,[rsi+0x2]
  41a125:	cmp    rbp,rdi
  41a128:	jb     41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a12a:	add    rsi,rbx
  41a12d:	mov    eax,0x1e
  41a132:	movzx  edi,WORD PTR [rsi]
  41a135:	mov    r8d,edi
  41a138:	mov    WORD PTR [rsp+0x1e],di
  41a13d:	add    edi,ecx
  41a13f:	cmp    r13d,edi
  41a142:	jb     41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a148:	test   r8b,0x1
  41a14c:	jne    41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a152:	cmp    r8w,0x3
  41a157:	mov    eax,0x1c
  41a15c:	jbe    41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a162:	lea    eax,[rcx+0x2]
  41a165:	mov    ecx,r13d
  41a168:	sub    ecx,edx
  41a16a:	movzx  eax,WORD PTR [rbx+rax*1]
  41a16e:	movzx  edx,ax
  41a171:	mov    WORD PTR [rsp+0x1c],ax
  41a176:	mov    eax,0x14
  41a17b:	cmp    ecx,edx
  41a17d:	jb     41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a183:	mov    QWORD PTR [rsp+0x10],rsi
  41a188:	mov    QWORD PTR [rsp],rbx
  41a18c:	mov    rdi,rsp
  41a18f:	mov    DWORD PTR [rsp+0x8],r13d
  41a194:	call   r14
  41a197:	jmp    41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a19c:	nop    DWORD PTR [rax+0x0]
  41a1a0:	mov    eax,0x1d
  41a1a5:	jmp    41a0c0 <flatcc_verify_table_as_root@@Base+0x60>
  41a1aa:	call   405070 <__stack_chk_fail@plt>
  41a1af:	nop

000000000041a1b0 <flatcc_verify_table_as_typed_root@@Base>:
  41a1b0:	push   r14
  41a1b2:	push   r13
  41a1b4:	mov    r13,rsi
  41a1b7:	push   r12
  41a1b9:	push   rbp
  41a1ba:	mov    ebp,esi
  41a1bc:	push   rbx
  41a1bd:	mov    rsi,rbp
  41a1c0:	mov    rbx,rdi
  41a1c3:	mov    r12d,edx
  41a1c6:	mov    r14,rcx
  41a1c9:	sub    rsp,0x30
  41a1cd:	mov    rax,QWORD PTR fs:0x28
  41a1d6:	mov    QWORD PTR [rsp+0x28],rax
  41a1db:	xor    eax,eax
  41a1dd:	call   419ee0 <flatcc_verify_typed_buffer_header@@Base>
  41a1e2:	test   eax,eax
  41a1e4:	jne    41a238 <flatcc_verify_table_as_typed_root@@Base+0x88>
  41a1e6:	mov    edx,DWORD PTR [rbx]
  41a1e8:	mov    DWORD PTR [rsp+0xc],0x63
  41a1f0:	mov    eax,0xf
  41a1f5:	test   edx,edx
  41a1f7:	je     41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a1f9:	mov    ecx,edx
  41a1fb:	lea    rsi,[rcx+0x4]
  41a1ff:	cmp    rbp,rsi
  41a202:	jb     41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a204:	test   dl,0x3
  41a207:	je     41a250 <flatcc_verify_table_as_typed_root@@Base+0xa0>
  41a209:	nop    DWORD PTR [rax+0x0]
  41a210:	mov    rcx,QWORD PTR [rsp+0x28]
  41a215:	xor    rcx,QWORD PTR fs:0x28
  41a21e:	jne    41a2fa <flatcc_verify_table_as_typed_root@@Base+0x14a>
  41a224:	add    rsp,0x30
  41a228:	pop    rbx
  41a229:	pop    rbp
  41a22a:	pop    r12
  41a22c:	pop    r13
  41a22e:	pop    r14
  41a230:	ret    
  41a231:	nop    DWORD PTR [rax+0x0]
  41a238:	mov    edx,r12d
  41a23b:	mov    rsi,rbp
  41a23e:	mov    rdi,rbx
  41a241:	call   419ee0 <flatcc_verify_typed_buffer_header@@Base>
  41a246:	jmp    41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a248:	nop    DWORD PTR [rax+rax*1+0x0]
  41a250:	mov    eax,edx
  41a252:	sub    eax,DWORD PTR [rbx+rcx*1]
  41a255:	mov    DWORD PTR [rsp+0x18],edx
  41a259:	mov    ecx,eax
  41a25b:	js     41a2f0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  41a261:	test   cl,0x1
  41a264:	jne    41a2f0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  41a26a:	mov    esi,ecx
  41a26c:	mov    eax,0x1b
  41a271:	lea    rdi,[rsi+0x2]
  41a275:	cmp    rbp,rdi
  41a278:	jb     41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a27a:	add    rsi,rbx
  41a27d:	mov    eax,0x1e
  41a282:	movzx  edi,WORD PTR [rsi]
  41a285:	mov    r8d,edi
  41a288:	mov    WORD PTR [rsp+0x1e],di
  41a28d:	add    edi,ecx
  41a28f:	cmp    r13d,edi
  41a292:	jb     41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a298:	test   r8b,0x1
  41a29c:	jne    41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a2a2:	cmp    r8w,0x3
  41a2a7:	mov    eax,0x1c
  41a2ac:	jbe    41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a2b2:	lea    eax,[rcx+0x2]
  41a2b5:	mov    ecx,r13d
  41a2b8:	sub    ecx,edx
  41a2ba:	movzx  eax,WORD PTR [rbx+rax*1]
  41a2be:	movzx  edx,ax
  41a2c1:	mov    WORD PTR [rsp+0x1c],ax
  41a2c6:	mov    eax,0x14
  41a2cb:	cmp    ecx,edx
  41a2cd:	jb     41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a2d3:	mov    QWORD PTR [rsp+0x10],rsi
  41a2d8:	mov    QWORD PTR [rsp],rbx
  41a2dc:	mov    rdi,rsp
  41a2df:	mov    DWORD PTR [rsp+0x8],r13d
  41a2e4:	call   r14
  41a2e7:	jmp    41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a2ec:	nop    DWORD PTR [rax+0x0]
  41a2f0:	mov    eax,0x1d
  41a2f5:	jmp    41a210 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41a2fa:	call   405070 <__stack_chk_fail@plt>
  41a2ff:	nop

000000000041a300 <flatcc_verify_struct_as_nested_root@@Base>:
  41a300:	push   r15
  41a302:	push   r14
  41a304:	mov    r14,r8
  41a307:	push   r13
  41a309:	push   r12
  41a30b:	movzx  r12d,r9w
  41a30f:	push   rbp
  41a310:	push   rbx
  41a311:	movzx  ebx,si
  41a314:	mov    r13d,r9d
  41a317:	mov    r8d,0x1
  41a31d:	mov    r9d,0xffffffff
  41a323:	sub    rsp,0x18
  41a327:	mov    esi,ebx
  41a329:	mov    r15,rdi
  41a32c:	mov    QWORD PTR [rsp+0x8],rcx
  41a331:	mov    rcx,r12
  41a334:	mov    ebp,edx
  41a336:	call   419560 <flatcc_verify_vector_field@@Base>
  41a33b:	test   eax,eax
  41a33d:	jne    41a398 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  41a33f:	add    ebx,0x2
  41a342:	add    ebx,ebx
  41a344:	cmp    bx,WORD PTR [r15+0x1e]
  41a349:	jae    41a3c8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41a34b:	mov    rax,QWORD PTR [r15+0x10]
  41a34f:	movzx  ebx,bx
  41a352:	movzx  eax,WORD PTR [rax+rbx*1]
  41a356:	test   ax,ax
  41a359:	je     41a3c8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41a35b:	mov    edi,DWORD PTR [r15+0x18]
  41a35f:	add    rdi,rax
  41a362:	add    rdi,QWORD PTR [r15]
  41a365:	je     41a3c8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41a367:	mov    eax,DWORD PTR [rdi]
  41a369:	mov    rdx,QWORD PTR [rsp+0x8]
  41a36e:	movzx  r8d,r13w
  41a372:	mov    rcx,r14
  41a375:	add    rdi,rax
  41a378:	mov    esi,DWORD PTR [rdi]
  41a37a:	add    rsp,0x18
  41a37e:	add    rdi,0x4
  41a382:	pop    rbx
  41a383:	pop    rbp
  41a384:	pop    r12
  41a386:	pop    r13
  41a388:	pop    r14
  41a38a:	pop    r15
  41a38c:	jmp    419f20 <flatcc_verify_struct_as_root@@Base>
  41a391:	nop    DWORD PTR [rax+0x0]
  41a398:	add    rsp,0x18
  41a39c:	mov    rcx,r12
  41a39f:	mov    edx,ebp
  41a3a1:	mov    esi,ebx
  41a3a3:	mov    rdi,r15
  41a3a6:	mov    r9d,0xffffffff
  41a3ac:	pop    rbx
  41a3ad:	pop    rbp
  41a3ae:	pop    r12
  41a3b0:	pop    r13
  41a3b2:	pop    r14
  41a3b4:	pop    r15
  41a3b6:	mov    r8d,0x1
  41a3bc:	jmp    419560 <flatcc_verify_vector_field@@Base>
  41a3c1:	nop    DWORD PTR [rax+0x0]
  41a3c8:	add    rsp,0x18
  41a3cc:	xor    eax,eax
  41a3ce:	pop    rbx
  41a3cf:	pop    rbp
  41a3d0:	pop    r12
  41a3d2:	pop    r13
  41a3d4:	pop    r14
  41a3d6:	pop    r15
  41a3d8:	ret    
  41a3d9:	nop    DWORD PTR [rax+0x0]

000000000041a3e0 <flatcc_verify_table_as_nested_root@@Base>:
  41a3e0:	push   r15
  41a3e2:	push   r14
  41a3e4:	movzx  r14d,r8w
  41a3e8:	push   r13
  41a3ea:	push   r12
  41a3ec:	mov    r8d,0x1
  41a3f2:	push   rbp
  41a3f3:	push   rbx
  41a3f4:	movzx  ebx,si
  41a3f7:	mov    r12,rcx
  41a3fa:	mov    esi,ebx
  41a3fc:	mov    rcx,r14
  41a3ff:	sub    rsp,0x48
  41a403:	mov    r15,rdi
  41a406:	mov    ebp,edx
  41a408:	mov    QWORD PTR [rsp+0x8],r9
  41a40d:	mov    r9d,0xffffffff
  41a413:	mov    rax,QWORD PTR fs:0x28
  41a41c:	mov    QWORD PTR [rsp+0x38],rax
  41a421:	xor    eax,eax
  41a423:	call   419560 <flatcc_verify_vector_field@@Base>
  41a428:	test   eax,eax
  41a42a:	jne    41a4d0 <flatcc_verify_table_as_nested_root@@Base+0xf0>
  41a430:	add    ebx,0x2
  41a433:	add    ebx,ebx
  41a435:	cmp    bx,WORD PTR [r15+0x1e]
  41a43a:	jae    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a43c:	mov    rdx,QWORD PTR [r15+0x10]
  41a440:	movzx  ebx,bx
  41a443:	movzx  edx,WORD PTR [rdx+rbx*1]
  41a447:	test   dx,dx
  41a44a:	je     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a44c:	mov    ebx,DWORD PTR [r15+0x18]
  41a450:	add    rbx,rdx
  41a453:	add    rbx,QWORD PTR [r15]
  41a456:	je     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a458:	mov    eax,DWORD PTR [rbx]
  41a45a:	mov    rdx,r12
  41a45d:	add    rbx,rax
  41a460:	mov    r14d,DWORD PTR [rbx]
  41a463:	lea    r13,[rbx+0x4]
  41a467:	mov    rdi,r13
  41a46a:	mov    rsi,r14
  41a46d:	mov    rbp,r14
  41a470:	call   419e40 <flatcc_verify_buffer_header@@Base>
  41a475:	test   eax,eax
  41a477:	jne    41a4b8 <flatcc_verify_table_as_nested_root@@Base+0xd8>
  41a479:	mov    edx,DWORD PTR [r15+0xc]
  41a47d:	mov    esi,DWORD PTR [rbx+0x4]
  41a480:	mov    eax,0x3
  41a485:	sub    edx,0x1
  41a488:	test   edx,edx
  41a48a:	mov    DWORD PTR [rsp+0x1c],edx
  41a48e:	jne    41a4f0 <flatcc_verify_table_as_nested_root@@Base+0x110>
  41a490:	mov    rcx,QWORD PTR [rsp+0x38]
  41a495:	xor    rcx,QWORD PTR fs:0x28
  41a49e:	jne    41a5c2 <flatcc_verify_table_as_nested_root@@Base+0x1e2>
  41a4a4:	add    rsp,0x48
  41a4a8:	pop    rbx
  41a4a9:	pop    rbp
  41a4aa:	pop    r12
  41a4ac:	pop    r13
  41a4ae:	pop    r14
  41a4b0:	pop    r15
  41a4b2:	ret    
  41a4b3:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4b8:	mov    rdx,r12
  41a4bb:	mov    rsi,r14
  41a4be:	mov    rdi,r13
  41a4c1:	call   419e40 <flatcc_verify_buffer_header@@Base>
  41a4c6:	jmp    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4d0:	mov    r9d,0xffffffff
  41a4d6:	mov    r8d,0x1
  41a4dc:	mov    rcx,r14
  41a4df:	mov    edx,ebp
  41a4e1:	mov    esi,ebx
  41a4e3:	mov    rdi,r15
  41a4e6:	call   419560 <flatcc_verify_vector_field@@Base>
  41a4eb:	jmp    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a4ed:	nop    DWORD PTR [rax]
  41a4f0:	test   esi,esi
  41a4f2:	mov    eax,0xf
  41a4f7:	je     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a4f9:	mov    edx,esi
  41a4fb:	lea    rdi,[rdx+0x4]
  41a4ff:	cmp    r14,rdi
  41a502:	jb     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a504:	test   sil,0x3
  41a508:	jne    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a50a:	mov    DWORD PTR [rsp+0x28],esi
  41a50e:	mov    eax,esi
  41a510:	sub    eax,DWORD PTR [rbx+rdx*1+0x4]
  41a514:	mov    edx,eax
  41a516:	js     41a5b8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  41a51c:	test   dl,0x1
  41a51f:	jne    41a5b8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  41a525:	mov    edi,edx
  41a527:	mov    eax,0x1b
  41a52c:	lea    r8,[rdi+0x2]
  41a530:	cmp    r14,r8
  41a533:	jb     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a539:	add    rdi,r13
  41a53c:	mov    eax,0x1e
  41a541:	movzx  r8d,WORD PTR [rdi]
  41a545:	mov    r9d,r8d
  41a548:	mov    WORD PTR [rsp+0x2e],r8w
  41a54e:	add    r8d,edx
  41a551:	cmp    ebp,r8d
  41a554:	jb     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a55a:	test   r9b,0x1
  41a55e:	jne    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a564:	cmp    r9w,0x3
  41a569:	mov    eax,0x1c
  41a56e:	jbe    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a574:	lea    eax,[rdx+0x2]
  41a577:	mov    ecx,ebp
  41a579:	sub    ecx,esi
  41a57b:	movzx  edx,WORD PTR [rbx+rax*1+0x4]
  41a580:	mov    eax,0x14
  41a585:	cmp    ecx,edx
  41a587:	mov    WORD PTR [rsp+0x2c],dx
  41a58c:	jb     41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a592:	mov    QWORD PTR [rsp+0x20],rdi
  41a597:	mov    QWORD PTR [rsp+0x10],r13
  41a59c:	lea    rdi,[rsp+0x10]
  41a5a1:	mov    DWORD PTR [rsp+0x18],ebp
  41a5a5:	mov    rax,QWORD PTR [rsp+0x8]
  41a5aa:	call   rax
  41a5ac:	jmp    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a5b1:	nop    DWORD PTR [rax+0x0]
  41a5b8:	mov    eax,0x1d
  41a5bd:	jmp    41a490 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41a5c2:	call   405070 <__stack_chk_fail@plt>
  41a5c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a5d0 <flatcc_verify_union_field@@Base>:
  41a5d0:	push   rbx
  41a5d1:	mov    r10,rcx
  41a5d4:	mov    r9,rdi
  41a5d7:	sub    rsp,0x40
  41a5db:	movzx  ecx,WORD PTR [rdi+0x1e]
  41a5df:	mov    rax,QWORD PTR fs:0x28
  41a5e8:	mov    QWORD PTR [rsp+0x38],rax
  41a5ed:	xor    eax,eax
  41a5ef:	lea    eax,[rsi+rsi*1]
  41a5f2:	add    eax,0x2
  41a5f5:	cmp    ax,cx
  41a5f8:	jae    41a640 <flatcc_verify_union_field@@Base+0x70>
  41a5fa:	mov    rbx,QWORD PTR [rdi+0x10]
  41a5fe:	movzx  eax,ax
  41a601:	movzx  eax,WORD PTR [rbx+rax*1]
  41a605:	test   eax,eax
  41a607:	mov    r8,rax
  41a60a:	je     41a640 <flatcc_verify_union_field@@Base+0x70>
  41a60c:	movzx  r11d,WORD PTR [r9+0x1c]
  41a611:	lea    edi,[rax+0x1]
  41a614:	mov    eax,0xd
  41a619:	cmp    edi,r11d
  41a61c:	jbe    41a668 <flatcc_verify_union_field@@Base+0x98>
  41a61e:	mov    rbx,QWORD PTR [rsp+0x38]
  41a623:	xor    rbx,QWORD PTR fs:0x28
  41a62c:	jne    41a720 <flatcc_verify_union_field@@Base+0x150>
  41a632:	add    rsp,0x40
  41a636:	pop    rbx
  41a637:	ret    
  41a638:	nop    DWORD PTR [rax+rax*1+0x0]
  41a640:	mov    eax,0x4
  41a645:	lea    esi,[rax+rsi*2]
  41a648:	cmp    cx,si
  41a64b:	jbe    41a6a0 <flatcc_verify_union_field@@Base+0xd0>
  41a64d:	mov    rax,QWORD PTR [r9+0x10]
  41a651:	movzx  esi,si
  41a654:	cmp    WORD PTR [rax+rsi*1],0x0
  41a659:	je     41a6a0 <flatcc_verify_union_field@@Base+0xd0>
  41a65b:	mov    eax,0x17
  41a660:	jmp    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a662:	nop    WORD PTR [rax+rax*1+0x0]
  41a668:	movzx  esi,si
  41a66b:	mov    rdi,QWORD PTR [r9]
  41a66e:	lea    eax,[rsi+0x2]
  41a671:	add    eax,eax
  41a673:	cmp    cx,ax
  41a676:	jbe    41a6b8 <flatcc_verify_union_field@@Base+0xe8>
  41a678:	mov    r11d,DWORD PTR [r9+0x18]
  41a67c:	movzx  eax,ax
  41a67f:	add    r11,r8
  41a682:	add    r11,rdi
  41a685:	cmp    WORD PTR [rbx+rax*1],0x0
  41a68a:	movzx  ecx,BYTE PTR [r11]
  41a68e:	je     41a6c7 <flatcc_verify_union_field@@Base+0xf7>
  41a690:	test   cl,cl
  41a692:	jne    41a6c7 <flatcc_verify_union_field@@Base+0xf7>
  41a694:	mov    eax,0x18
  41a699:	jmp    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a69b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a6a0:	test   edx,edx
  41a6a2:	mov    eax,0x15
  41a6a7:	jne    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a6ad:	xor    eax,eax
  41a6af:	jmp    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a6b4:	nop    DWORD PTR [rax+0x0]
  41a6b8:	mov    r11d,DWORD PTR [r9+0x18]
  41a6bc:	add    r8,r11
  41a6bf:	lea    r11,[rdi+r8*1]
  41a6c3:	movzx  ecx,BYTE PTR [r11]
  41a6c7:	test   cl,cl
  41a6c9:	je     41a6ad <flatcc_verify_union_field@@Base+0xdd>
  41a6cb:	lea    rcx,[rsp+0xc]
  41a6d0:	mov    rdi,r9
  41a6d3:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a6d8:	test   eax,eax
  41a6da:	jne    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a6e0:	mov    eax,DWORD PTR [rsp+0xc]
  41a6e4:	test   eax,eax
  41a6e6:	je     41a6ad <flatcc_verify_union_field@@Base+0xdd>
  41a6e8:	mov    ecx,DWORD PTR [r9+0x8]
  41a6ec:	mov    rdx,QWORD PTR [r9]
  41a6ef:	lea    rdi,[rsp+0x10]
  41a6f4:	mov    DWORD PTR [rsp+0x24],eax
  41a6f8:	mov    DWORD PTR [rsp+0x18],ecx
  41a6fc:	mov    ecx,DWORD PTR [r9+0xc]
  41a700:	mov    QWORD PTR [rsp+0x10],rdx
  41a705:	mov    DWORD PTR [rsp+0x1c],ecx
  41a709:	mov    eax,DWORD PTR [rdx+rax*1]
  41a70c:	mov    DWORD PTR [rsp+0x28],eax
  41a710:	movzx  eax,BYTE PTR [r11]
  41a714:	mov    BYTE PTR [rsp+0x20],al
  41a718:	call   r10
  41a71b:	jmp    41a61e <flatcc_verify_union_field@@Base+0x4e>
  41a720:	call   405070 <__stack_chk_fail@plt>
  41a725:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a730 <flatcc_verify_union_vector_field@@Base>:
  41a730:	push   r15
  41a732:	push   r14
  41a734:	mov    r15d,edx
  41a737:	push   r13
  41a739:	push   r12
  41a73b:	lea    r12d,[rsi-0x1]
  41a73f:	push   rbp
  41a740:	push   rbx
  41a741:	mov    r14d,esi
  41a744:	movzx  r12d,r12w
  41a748:	mov    rbx,rdi
  41a74b:	mov    r13,rcx
  41a74e:	sub    rsp,0x48
  41a752:	movzx  edx,WORD PTR [rdi+0x1e]
  41a756:	lea    ebp,[r12+0x2]
  41a75b:	mov    rax,QWORD PTR fs:0x28
  41a764:	mov    QWORD PTR [rsp+0x38],rax
  41a769:	xor    eax,eax
  41a76b:	add    ebp,ebp
  41a76d:	cmp    bp,dx
  41a770:	jae    41a830 <flatcc_verify_union_vector_field@@Base+0x100>
  41a776:	mov    rcx,QWORD PTR [rdi+0x10]
  41a77a:	movzx  eax,bp
  41a77d:	cmp    WORD PTR [rcx+rax*1],0x0
  41a782:	je     41a830 <flatcc_verify_union_vector_field@@Base+0x100>
  41a788:	mov    r9d,0xffffffff
  41a78e:	mov    r8d,0x1
  41a794:	mov    ecx,0x1
  41a799:	mov    edx,r15d
  41a79c:	mov    esi,r12d
  41a79f:	mov    rdi,rbx
  41a7a2:	call   419560 <flatcc_verify_vector_field@@Base>
  41a7a7:	test   eax,eax
  41a7a9:	mov    r9d,eax
  41a7ac:	jne    41a900 <flatcc_verify_union_vector_field@@Base+0x1d0>
  41a7b2:	cmp    bp,WORD PTR [rbx+0x1e]
  41a7b6:	jae    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a7b8:	mov    rax,QWORD PTR [rbx+0x10]
  41a7bc:	movzx  ebp,bp
  41a7bf:	movzx  edx,WORD PTR [rax+rbp*1]
  41a7c3:	test   dx,dx
  41a7c6:	je     41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a7c8:	mov    eax,DWORD PTR [rbx+0x18]
  41a7cb:	add    rax,rdx
  41a7ce:	add    rax,QWORD PTR [rbx]
  41a7d1:	je     41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a7d3:	mov    r10d,DWORD PTR [rax]
  41a7d6:	lea    rcx,[rsp+0xc]
  41a7db:	movzx  esi,r14w
  41a7df:	mov    edx,r15d
  41a7e2:	mov    rdi,rbx
  41a7e5:	add    r10,rax
  41a7e8:	mov    r11d,DWORD PTR [r10]
  41a7eb:	call   419160 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a7f0:	test   eax,eax
  41a7f2:	jne    41a8f0 <flatcc_verify_union_vector_field@@Base+0x1c0>
  41a7f8:	mov    eax,DWORD PTR [rsp+0xc]
  41a7fc:	test   eax,eax
  41a7fe:	jne    41a868 <flatcc_verify_union_vector_field@@Base+0x138>
  41a800:	mov    rdi,QWORD PTR [rsp+0x38]
  41a805:	xor    rdi,QWORD PTR fs:0x28
  41a80e:	mov    eax,r9d
  41a811:	jne    41a9f2 <flatcc_verify_union_vector_field@@Base+0x2c2>
  41a817:	add    rsp,0x48
  41a81b:	pop    rbx
  41a81c:	pop    rbp
  41a81d:	pop    r12
  41a81f:	pop    r13
  41a821:	pop    r14
  41a823:	pop    r15
  41a825:	ret    
  41a826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a830:	lea    eax,[r14+r14*1]
  41a834:	add    eax,0x4
  41a837:	cmp    dx,ax
  41a83a:	ja     41a850 <flatcc_verify_union_vector_field@@Base+0x120>
  41a83c:	test   r15d,r15d
  41a83f:	mov    r9d,0x16
  41a845:	jne    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a847:	jmp    41a788 <flatcc_verify_union_vector_field@@Base+0x58>
  41a84c:	nop    DWORD PTR [rax+0x0]
  41a850:	mov    rdx,QWORD PTR [rbx+0x10]
  41a854:	movzx  eax,ax
  41a857:	cmp    WORD PTR [rdx+rax*1],0x0
  41a85c:	jne    41a788 <flatcc_verify_union_vector_field@@Base+0x58>
  41a862:	jmp    41a83c <flatcc_verify_union_vector_field@@Base+0x10c>
  41a864:	nop    DWORD PTR [rax+0x0]
  41a868:	mov    edx,DWORD PTR [rbx+0xc]
  41a86b:	mov    r9d,0x3
  41a871:	test   edx,edx
  41a873:	jle    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a875:	mov    r12,QWORD PTR [rbx]
  41a878:	mov    ecx,eax
  41a87a:	mov    r9d,0x10
  41a880:	mov    esi,DWORD PTR [r12+rcx*1]
  41a884:	add    esi,eax
  41a886:	cmp    eax,esi
  41a888:	mov    ecx,esi
  41a88a:	jae    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a890:	mov    eax,DWORD PTR [rbx+0x8]
  41a893:	mov    esi,esi
  41a895:	lea    r8,[rsi+0x4]
  41a899:	cmp    r8,rax
  41a89c:	mov    rdi,rax
  41a89f:	ja     41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8a5:	test   r8b,0x3
  41a8a9:	je     41a927 <flatcc_verify_union_vector_field@@Base+0x1f7>
  41a8ab:	and    r8d,0x3
  41a8af:	mov    r9d,0x10
  41a8b5:	jne    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8bb:	mov    eax,DWORD PTR [r12+rsi*1]
  41a8bf:	mov    r9d,0x19
  41a8c5:	cmp    eax,0x3fffffff
  41a8ca:	ja     41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8d0:	sub    edi,0x4
  41a8d3:	shl    eax,0x2
  41a8d6:	mov    r9d,0x1a
  41a8dc:	sub    edi,ecx
  41a8de:	cmp    edi,eax
  41a8e0:	jb     41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8e6:	xor    r9d,r9d
  41a8e9:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8ee:	xchg   ax,ax
  41a8f0:	mov    r9d,eax
  41a8f3:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a8f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a900:	mov    r9d,0xffffffff
  41a906:	mov    r8d,0x1
  41a90c:	mov    ecx,0x1
  41a911:	mov    edx,r15d
  41a914:	mov    esi,r12d
  41a917:	mov    rdi,rbx
  41a91a:	call   419560 <flatcc_verify_vector_field@@Base>
  41a91f:	mov    r9d,eax
  41a922:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a927:	mov    eax,DWORD PTR [r12+rsi*1]
  41a92b:	cmp    eax,0x3fffffff
  41a930:	ja     41a8ab <flatcc_verify_union_vector_field@@Base+0x17b>
  41a936:	lea    ebx,[rcx+0x4]
  41a939:	lea    r14d,[rax*4+0x0]
  41a941:	mov    r9d,edi
  41a944:	sub    r9d,ebx
  41a947:	cmp    r9d,r14d
  41a94a:	jb     41a8ab <flatcc_verify_union_vector_field@@Base+0x17b>
  41a950:	cmp    r11d,eax
  41a953:	mov    r9d,0x22
  41a959:	jne    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a95f:	sub    edx,0x1
  41a962:	test   r11d,r11d
  41a965:	mov    QWORD PTR [rsp+0x10],r12
  41a96a:	mov    DWORD PTR [rsp+0x18],edi
  41a96e:	mov    DWORD PTR [rsp+0x1c],edx
  41a972:	je     41a8e6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  41a978:	lea    rbp,[r10+0x4]
  41a97c:	add    r14d,ebx
  41a97f:	lea    r15,[rsp+0x10]
  41a984:	jmp    41a9a6 <flatcc_verify_union_vector_field@@Base+0x276>
  41a986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a990:	cmp    BYTE PTR [rbp+0x0],0x0
  41a994:	jne    41a9dc <flatcc_verify_union_vector_field@@Base+0x2ac>
  41a996:	add    ebx,0x4
  41a999:	add    rbp,0x1
  41a99d:	cmp    ebx,r14d
  41a9a0:	je     41a8e6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  41a9a6:	mov    eax,ebx
  41a9a8:	mov    eax,DWORD PTR [r12+rax*1]
  41a9ac:	test   eax,eax
  41a9ae:	je     41a990 <flatcc_verify_union_vector_field@@Base+0x260>
  41a9b0:	movzx  edx,BYTE PTR [rbp+0x0]
  41a9b4:	test   dl,dl
  41a9b6:	je     41a9e7 <flatcc_verify_union_vector_field@@Base+0x2b7>
  41a9b8:	mov    BYTE PTR [rsp+0x20],dl
  41a9bc:	mov    DWORD PTR [rsp+0x24],ebx
  41a9c0:	mov    rdi,r15
  41a9c3:	mov    DWORD PTR [rsp+0x28],eax
  41a9c7:	call   r13
  41a9ca:	test   eax,eax
  41a9cc:	je     41a996 <flatcc_verify_union_vector_field@@Base+0x266>
  41a9ce:	mov    rdi,r15
  41a9d1:	call   r13
  41a9d4:	mov    r9d,eax
  41a9d7:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a9dc:	mov    r9d,0x20
  41a9e2:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a9e7:	mov    r9d,0x21
  41a9ed:	jmp    41a800 <flatcc_verify_union_vector_field@@Base+0xd0>
  41a9f2:	call   405070 <__stack_chk_fail@plt>
  41a9f7:	nop    WORD PTR [rax+rax*1+0x0]
  41aa00:	mov    r9,rdi
  41aa03:	mov    eax,edx
  41aa05:	mov    edi,edi
  41aa07:	shr    r9,0x20
  41aa0b:	mov    r11,rdi
  41aa0e:	mov    r10,rdx
  41aa11:	imul   rdi,rax
  41aa15:	mov    r8,r9
  41aa18:	shr    r10,0x20
  41aa1c:	imul   r8,rax
  41aa20:	mov    QWORD PTR [rsp-0x10],0x0
  41aa29:	imul   r11,r10
  41aa2d:	mov    rax,rdi
  41aa30:	shr    rax,0x20
  41aa34:	mov    edi,r8d
  41aa37:	add    rax,rdi
  41aa3a:	mov    edi,0x80000000
  41aa3f:	mov    edx,r11d
  41aa42:	add    rax,rdi
  41aa45:	shr    r11,0x20
  41aa49:	imul   r9,r10
  41aa4d:	add    rax,rdx
  41aa50:	mov    rdx,r8
  41aa53:	shr    rdx,0x20
  41aa57:	shr    rax,0x20
  41aa5b:	add    rdx,r11
  41aa5e:	lea    r8,[rdx+r9*1]
  41aa62:	add    rax,r8
  41aa65:	mov    QWORD PTR [rsp-0x18],rax
  41aa6a:	lea    eax,[rsi+rcx*1+0x40]
  41aa6e:	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
  41aa74:	vpinsrd xmm0,xmm1,eax,0x2
  41aa7a:	vmovaps XMMWORD PTR [rsp-0x18],xmm0
  41aa80:	mov    rax,QWORD PTR [rsp-0x18]
  41aa85:	mov    rdx,QWORD PTR [rsp-0x10]
  41aa8a:	ret    
  41aa8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa90:	sub    rsp,0x18
  41aa94:	test   rdi,rdi
  41aa97:	mov    QWORD PTR [rsp+0x8],rsi
  41aa9c:	mov    QWORD PTR [rsp],rdi
  41aaa0:	mov    ecx,DWORD PTR [rsp+0x8]
  41aaa4:	je     41ab0c <flatcc_verify_union_vector_field@@Base+0x3dc>
  41aaa6:	mov    rax,rdi
  41aaa9:	movabs rdi,0xffc0000000000000
  41aab3:	lea    edx,[rcx-0xa]
  41aab6:	test   rax,rdi
  41aab9:	mov    rsi,rdi
  41aabc:	jne    41aace <flatcc_verify_union_vector_field@@Base+0x39e>
  41aabe:	xchg   ax,ax
  41aac0:	shl    rax,0xa
  41aac4:	mov    ecx,edx
  41aac6:	sub    edx,0xa
  41aac9:	test   rax,rsi
  41aacc:	je     41aac0 <flatcc_verify_union_vector_field@@Base+0x390>
  41aace:	test   rax,rax
  41aad1:	js     41aaea <flatcc_verify_union_vector_field@@Base+0x3ba>
  41aad3:	lea    edx,[rcx-0x1]
  41aad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aae0:	mov    ecx,edx
  41aae2:	sub    edx,0x1
  41aae5:	add    rax,rax
  41aae8:	jns    41aae0 <flatcc_verify_union_vector_field@@Base+0x3b0>
  41aaea:	mov    QWORD PTR [rsp],rax
  41aaee:	vmovdqa xmm1,XMMWORD PTR [rsp]
  41aaf3:	vpinsrd xmm0,xmm1,ecx,0x2
  41aaf9:	vmovaps XMMWORD PTR [rsp],xmm0
  41aafe:	mov    rax,QWORD PTR [rsp]
  41ab02:	mov    rdx,QWORD PTR [rsp+0x8]
  41ab07:	add    rsp,0x18
  41ab0b:	ret    
  41ab0c:	lea    rcx,[rip+0x157ed]        # 430300 <flatcc_builder_padding_base@@Base+0x14e0>
  41ab13:	lea    rsi,[rip+0x14a36]        # 42f550 <flatcc_builder_padding_base@@Base+0x730>
  41ab1a:	lea    rdi,[rip+0x14c13]        # 42f734 <flatcc_builder_padding_base@@Base+0x914>
  41ab21:	mov    edx,0x104
  41ab26:	call   405080 <__assert_fail@plt>
  41ab2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ab30 <grisu3_diy_fp_encode_double@@Base>:
  41ab30:	push   r15
  41ab32:	push   r14
  41ab34:	mov    eax,0x4
  41ab39:	push   r13
  41ab3b:	push   r12
  41ab3d:	mov    r12d,ecx
  41ab40:	push   rbp
  41ab41:	push   rbx
  41ab42:	mov    r13d,edx
  41ab45:	mov    rbx,r8
  41ab48:	sub    rsp,0x18
  41ab4c:	test   ecx,ecx
  41ab4e:	mov    QWORD PTR [rsp+0x8],0x0
  41ab57:	mov    QWORD PTR [rsp],rdi
  41ab5b:	cmovne r12d,eax
  41ab5f:	vmovdqa xmm2,XMMWORD PTR [rsp]
  41ab64:	xor    eax,eax
  41ab66:	sub    esi,edx
  41ab68:	vpinsrd xmm1,xmm2,eax,0x2
  41ab6e:	mov    ebp,esi
  41ab70:	vmovaps XMMWORD PTR [rsp],xmm1
  41ab75:	mov    rsi,QWORD PTR [rsp+0x8]
  41ab7a:	mov    rdi,QWORD PTR [rsp]
  41ab7e:	call   41aa90 <flatcc_verify_union_vector_field@@Base+0x360>
  41ab83:	mov    QWORD PTR [rsp+0x8],rdx
  41ab88:	mov    esi,DWORD PTR [rsp+0x8]
  41ab8c:	mov    QWORD PTR [rsp],rax
  41ab90:	mov    rdi,QWORD PTR [rsp]
  41ab94:	mov    ecx,esi
  41ab96:	neg    ecx
  41ab98:	cmp    ebp,0xfffffea4
  41ab9e:	shlx   r12d,r12d,ecx
  41aba3:	jl     41ae90 <grisu3_diy_fp_encode_double@@Base+0x360>
  41aba9:	cmp    ebp,0x15b
  41abaf:	jg     41ae71 <grisu3_diy_fp_encode_double@@Base+0x341>
  41abb5:	lea    eax,[rbp+0x15c]
  41abbb:	lea    rdx,[rip+0x1579e]        # 430360 <flatcc_builder_padding_base@@Base+0x1540>
  41abc2:	sar    eax,0x3
  41abc5:	cdqe   
  41abc7:	shl    rax,0x4
  41abcb:	add    rax,rdx
  41abce:	movsx  edx,WORD PTR [rax+0xa]
  41abd2:	mov    r14,QWORD PTR [rax]
  41abd5:	movsx  r15d,WORD PTR [rax+0x8]
  41abda:	cmp    ebp,edx
  41abdc:	jl     41ae52 <grisu3_diy_fp_encode_double@@Base+0x322>
  41abe2:	lea    eax,[rdx+0x7]
  41abe5:	cmp    ebp,eax
  41abe7:	jg     41ae33 <grisu3_diy_fp_encode_double@@Base+0x303>
  41abed:	cmp    ebp,edx
  41abef:	je     41ac41 <grisu3_diy_fp_encode_double@@Base+0x111>
  41abf1:	sub    ebp,edx
  41abf3:	sub    ebp,0x1
  41abf6:	cmp    ebp,0x6
  41abf9:	ja     41ae14 <grisu3_diy_fp_encode_double@@Base+0x2e4>
  41abff:	lea    rdx,[rip+0x1ebda]        # 4397e0 <__data_start@@Base+0x720>
  41ac06:	movsxd rax,ebp
  41ac09:	mov    rdi,QWORD PTR [rsp]
  41ac0d:	shl    rax,0x4
  41ac11:	add    rax,rdx
  41ac14:	mov    ecx,DWORD PTR [rax+0x8]
  41ac17:	mov    rdx,QWORD PTR [rax]
  41ac1a:	call   41aa00 <flatcc_verify_union_vector_field@@Base+0x2d0>
  41ac1f:	mov    QWORD PTR [rsp+0x8],rdx
  41ac24:	lea    edx,[rbp+r13*1+0x1]
  41ac29:	mov    QWORD PTR [rsp],rax
  41ac2d:	mov    esi,DWORD PTR [rsp+0x8]
  41ac31:	lea    eax,[r12+0x4]
  41ac36:	mov    rdi,QWORD PTR [rsp]
  41ac3a:	cmp    edx,0x14
  41ac3d:	cmovge r12d,eax
  41ac41:	mov    ecx,r15d
  41ac44:	mov    rdx,r14
  41ac47:	call   41aa00 <flatcc_verify_union_vector_field@@Base+0x2d0>
  41ac4c:	mov    QWORD PTR [rsp],rax
  41ac50:	mov    QWORD PTR [rsp+0x8],rdx
  41ac55:	xor    eax,eax
  41ac57:	mov    rdi,QWORD PTR [rsp]
  41ac5b:	mov    rsi,QWORD PTR [rsp+0x8]
  41ac60:	test   r12d,r12d
  41ac63:	setne  al
  41ac66:	mov    ebp,DWORD PTR [rsp+0x8]
  41ac6a:	lea    r12d,[r12+rax*1+0x8]
  41ac6f:	call   41aa90 <flatcc_verify_union_vector_field@@Base+0x360>
  41ac74:	mov    QWORD PTR [rsp+0x8],rdx
  41ac79:	mov    edx,DWORD PTR [rsp+0x8]
  41ac7d:	mov    QWORD PTR [rsp],rax
  41ac81:	mov    rax,QWORD PTR [rsp]
  41ac85:	lea    ecx,[rdx+0x40]
  41ac88:	sub    ebp,edx
  41ac8a:	shlx   edi,r12d,ebp
  41ac8f:	cmp    ecx,0xfffffc0e
  41ac95:	jl     41ad80 <grisu3_diy_fp_encode_double@@Base+0x250>
  41ac9b:	mov    r8d,0x4
  41aca1:	xor    r9d,r9d
  41aca4:	xor    ecx,ecx
  41aca6:	lea    r10d,[rdi+r8*1]
  41acaa:	add    edx,ecx
  41acac:	shrx   rax,rax,rcx
  41acb1:	cmp    ecx,r10d
  41acb4:	jl     41acc7 <grisu3_diy_fp_encode_double@@Base+0x197>
  41acb6:	add    rax,0x1
  41acba:	bt     rax,0x35
  41acbf:	jae    41acc7 <grisu3_diy_fp_encode_double@@Base+0x197>
  41acc1:	shr    rax,1
  41acc4:	add    edx,0x1
  41acc7:	movabs rcx,0x1fffffffffffff
  41acd1:	cmp    rax,rcx
  41acd4:	jbe    41aceb <grisu3_diy_fp_encode_double@@Base+0x1bb>
  41acd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ace0:	shr    rax,1
  41ace3:	add    edx,0x1
  41ace6:	cmp    rax,rcx
  41ace9:	ja     41ace0 <grisu3_diy_fp_encode_double@@Base+0x1b0>
  41aceb:	cmp    edx,0xfffffbce
  41acf1:	vxorpd xmm0,xmm0,xmm0
  41acf5:	jl     41ad4f <grisu3_diy_fp_encode_double@@Base+0x21f>
  41acf7:	je     41ad29 <grisu3_diy_fp_encode_double@@Base+0x1f9>
  41acf9:	bt     rax,0x34
  41acfe:	movabs rsi,0x10000000000000
  41ad08:	jae    41ad1b <grisu3_diy_fp_encode_double@@Base+0x1eb>
  41ad0a:	jmp    41add7 <grisu3_diy_fp_encode_double@@Base+0x2a7>
  41ad0f:	nop
  41ad10:	test   rax,rsi
  41ad13:	jne    41adc0 <grisu3_diy_fp_encode_double@@Base+0x290>
  41ad19:	mov    edx,ecx
  41ad1b:	lea    ecx,[rdx-0x1]
  41ad1e:	add    rax,rax
  41ad21:	cmp    ecx,0xfffffbce
  41ad27:	jne    41ad10 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  41ad29:	movabs rdx,0x10000000000000
  41ad33:	and    rdx,rax
  41ad36:	movabs rcx,0xfffffffffffff
  41ad40:	and    rax,rcx
  41ad43:	or     rdx,rax
  41ad46:	mov    QWORD PTR [rsp],rdx
  41ad4a:	vmovsd xmm0,QWORD PTR [rsp]
  41ad4f:	sub    r8d,edi
  41ad52:	vmovsd QWORD PTR [rbx],xmm0
  41ad56:	cmp    r8d,r9d
  41ad59:	setge  al
  41ad5c:	cmp    r10d,r9d
  41ad5f:	setle  dl
  41ad62:	add    rsp,0x18
  41ad66:	or     eax,edx
  41ad68:	pop    rbx
  41ad69:	movzx  eax,al
  41ad6c:	pop    rbp
  41ad6d:	pop    r12
  41ad6f:	pop    r13
  41ad71:	pop    r14
  41ad73:	pop    r15
  41ad75:	ret    
  41ad76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad80:	cmp    ecx,0xfffffbcf
  41ad86:	jl     41add0 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  41ad88:	lea    esi,[rdx+0x472]
  41ad8e:	mov    ecx,0x40
  41ad93:	sub    ecx,esi
  41ad95:	cmp    ecx,0x3c
  41ad98:	jle    41ade6 <grisu3_diy_fp_encode_double@@Base+0x2b6>
  41ad9a:	mov    ecx,0x2
  41ad9f:	sub    ecx,esi
  41ada1:	sarx   edi,edi,ecx
  41ada6:	shrx   rax,rax,rcx
  41adab:	add    edx,ecx
  41adad:	add    edi,0x9
  41adb0:	xor    r9d,r9d
  41adb3:	xor    r8d,r8d
  41adb6:	mov    ecx,0x3e
  41adbb:	jmp    41aca6 <grisu3_diy_fp_encode_double@@Base+0x176>
  41adc0:	add    edx,0x432
  41adc6:	shl    rdx,0x34
  41adca:	jmp    41ad36 <grisu3_diy_fp_encode_double@@Base+0x206>
  41adcf:	nop
  41add0:	mov    ecx,0x2
  41add5:	jmp    41ada1 <grisu3_diy_fp_encode_double@@Base+0x271>
  41add7:	add    edx,0x433
  41addd:	shl    rdx,0x34
  41ade1:	jmp    41ad36 <grisu3_diy_fp_encode_double@@Base+0x206>
  41ade6:	mov    r8d,0x3f
  41adec:	mov    r9d,0x1
  41adf2:	sub    r8d,esi
  41adf5:	mov    esi,r8d
  41adf8:	mov    r8d,0x8
  41adfe:	shlx   r9,r9,rsi
  41ae03:	shlx   r8,r8,rsi
  41ae08:	and    r9,rax
  41ae0b:	shl    r9d,0x3
  41ae0f:	jmp    41aca6 <grisu3_diy_fp_encode_double@@Base+0x176>
  41ae14:	lea    rcx,[rip+0x15525]        # 430340 <flatcc_builder_padding_base@@Base+0x1520>
  41ae1b:	lea    rsi,[rip+0x1479e]        # 42f5c0 <flatcc_builder_padding_base@@Base+0x7a0>
  41ae22:	lea    rdi,[rip+0x1493e]        # 42f767 <flatcc_builder_padding_base@@Base+0x947>
  41ae29:	mov    edx,0xb9
  41ae2e:	call   405080 <__assert_fail@plt>
  41ae33:	lea    rcx,[rip+0x154e6]        # 430320 <flatcc_builder_padding_base@@Base+0x1500>
  41ae3a:	lea    rsi,[rip+0x1477f]        # 42f5c0 <flatcc_builder_padding_base@@Base+0x7a0>
  41ae41:	lea    rdi,[rip+0x14904]        # 42f74c <flatcc_builder_padding_base@@Base+0x92c>
  41ae48:	mov    edx,0x59
  41ae4d:	call   405080 <__assert_fail@plt>
  41ae52:	lea    rcx,[rip+0x154c7]        # 430320 <flatcc_builder_padding_base@@Base+0x1500>
  41ae59:	lea    rsi,[rip+0x14760]        # 42f5c0 <flatcc_builder_padding_base@@Base+0x7a0>
  41ae60:	lea    rdi,[rip+0x148d6]        # 42f73d <flatcc_builder_padding_base@@Base+0x91d>
  41ae67:	mov    edx,0x58
  41ae6c:	call   405080 <__assert_fail@plt>
  41ae71:	lea    rcx,[rip+0x154a8]        # 430320 <flatcc_builder_padding_base@@Base+0x1500>
  41ae78:	lea    rsi,[rip+0x14741]        # 42f5c0 <flatcc_builder_padding_base@@Base+0x7a0>
  41ae7f:	lea    rdi,[rip+0x147d2]        # 42f658 <flatcc_builder_padding_base@@Base+0x838>
  41ae86:	mov    edx,0x51
  41ae8b:	call   405080 <__assert_fail@plt>
  41ae90:	lea    rcx,[rip+0x15489]        # 430320 <flatcc_builder_padding_base@@Base+0x1500>
  41ae97:	lea    rsi,[rip+0x14722]        # 42f5c0 <flatcc_builder_padding_base@@Base+0x7a0>
  41ae9e:	lea    rdi,[rip+0x14793]        # 42f638 <flatcc_builder_padding_base@@Base+0x818>
  41aea5:	mov    edx,0x50
  41aeaa:	call   405080 <__assert_fail@plt>
  41aeaf:	nop
  41aeb0:	push   r13
  41aeb2:	push   r12
  41aeb4:	lea    r8,[rdi+0x3e9]
  41aebb:	push   rbp
  41aebc:	push   rbx
  41aebd:	sub    rsp,0x18
  41aec1:	mov    QWORD PTR [rdx],0x0
  41aec8:	mov    rax,QWORD PTR fs:0x28
  41aed1:	mov    QWORD PTR [rsp+0x8],rax
  41aed6:	xor    eax,eax
  41aed8:	movsxd rax,esi
  41aedb:	cmp    esi,0x3e8
  41aee1:	lea    rax,[rdi+rax*1+0x1]
  41aee6:	cmovle r8,rax
  41aeea:	cmp    r8,rdi
  41aeed:	je     41b2e0 <grisu3_diy_fp_encode_double@@Base+0x7b0>
  41aef3:	movzx  eax,BYTE PTR [rdi]
  41aef6:	xor    r13d,r13d
  41aef9:	mov    r12,rdx
  41aefc:	mov    rbp,rdi
  41aeff:	mov    rdx,rdi
  41af02:	cmp    al,0x2d
  41af04:	je     41b090 <grisu3_diy_fp_encode_double@@Base+0x560>
  41af0a:	cmp    al,0x30
  41af0c:	je     41b0ab <grisu3_diy_fp_encode_double@@Base+0x57b>
  41af12:	lea    ecx,[rax-0x31]
  41af15:	cmp    cl,0x8
  41af18:	ja     41b020 <grisu3_diy_fp_encode_double@@Base+0x4f0>
  41af1e:	lea    r9,[rdx+0x1]
  41af22:	movsx  edi,al
  41af25:	sub    edi,0x30
  41af28:	cmp    r8,r9
  41af2b:	movsxd rdi,edi
  41af2e:	je     41b697 <grisu3_diy_fp_encode_double@@Base+0xb67>
  41af34:	movsx  rax,BYTE PTR [rdx+0x1]
  41af39:	lea    edx,[rax-0x30]
  41af3c:	mov    rbx,r9
  41af3f:	movabs rcx,0x1999999999999998
  41af49:	cmp    dl,0x9
  41af4c:	jbe    41af61 <grisu3_diy_fp_encode_double@@Base+0x431>
  41af4e:	jmp    41b690 <grisu3_diy_fp_encode_double@@Base+0xb60>
  41af53:	nop    DWORD PTR [rax+rax*1+0x0]
  41af58:	cmp    rdi,rcx
  41af5b:	ja     41b050 <grisu3_diy_fp_encode_double@@Base+0x520>
  41af61:	add    rbx,0x1
  41af65:	lea    rdx,[rdi+rdi*4]
  41af69:	cmp    r8,rbx
  41af6c:	lea    rdi,[rax+rdx*2-0x30]
  41af71:	je     41b62f <grisu3_diy_fp_encode_double@@Base+0xaff>
  41af77:	movsx  rax,BYTE PTR [rbx]
  41af7b:	lea    edx,[rax-0x30]
  41af7e:	cmp    dl,0x9
  41af81:	jbe    41af58 <grisu3_diy_fp_encode_double@@Base+0x428>
  41af83:	mov    edx,ebx
  41af85:	sub    edx,r9d
  41af88:	lea    r9d,[rax-0x31]
  41af8c:	xor    ecx,ecx
  41af8e:	xor    esi,esi
  41af90:	cmp    r9b,0x8
  41af94:	jbe    41b103 <grisu3_diy_fp_encode_double@@Base+0x5d3>
  41af9a:	cmp    al,0x2e
  41af9c:	je     41b1a0 <grisu3_diy_fp_encode_double@@Base+0x670>
  41afa2:	add    esi,edx
  41afa4:	cmp    r8,rbx
  41afa7:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41afad:	or     eax,0x20
  41afb0:	cmp    al,0x65
  41afb2:	je     41b228 <grisu3_diy_fp_encode_double@@Base+0x6f8>
  41afb8:	test   rdi,rdi
  41afbb:	je     41b168 <grisu3_diy_fp_encode_double@@Base+0x638>
  41afc1:	cmp    esi,0xfffffebc
  41afc7:	jl     41b168 <grisu3_diy_fp_encode_double@@Base+0x638>
  41afcd:	cmp    esi,0x136
  41afd3:	jg     41b190 <grisu3_diy_fp_encode_double@@Base+0x660>
  41afd9:	movabs rax,0x1fffffffffffff
  41afe3:	cmp    rdi,rax
  41afe6:	ja     41b300 <grisu3_diy_fp_encode_double@@Base+0x7d0>
  41afec:	cmp    esi,0x16
  41afef:	ja     41b300 <grisu3_diy_fp_encode_double@@Base+0x7d0>
  41aff5:	sub    esi,edx
  41aff7:	vxorpd xmm0,xmm0,xmm0
  41affb:	lea    eax,[rsi+0x16]
  41affe:	cmp    eax,0x2c
  41b001:	vcvtsi2sd xmm0,xmm0,rdi
  41b006:	ja     41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b00c:	lea    rdx,[rip+0x149ad]        # 42f9c0 <flatcc_builder_padding_base@@Base+0xba0>
  41b013:	movsxd rax,DWORD PTR [rdx+rax*4]
  41b017:	add    rax,rdx
  41b01a:	jmp    rax
  41b01c:	nop    DWORD PTR [rax+0x0]
  41b020:	test   r13d,r13d
  41b023:	mov    ebx,0x0
  41b028:	cmove  rbx,rbp
  41b02c:	mov    rcx,QWORD PTR [rsp+0x8]
  41b031:	xor    rcx,QWORD PTR fs:0x28
  41b03a:	mov    rax,rbx
  41b03d:	jne    41b6aa <grisu3_diy_fp_encode_double@@Base+0xb7a>
  41b043:	add    rsp,0x18
  41b047:	pop    rbx
  41b048:	pop    rbp
  41b049:	pop    r12
  41b04b:	pop    r13
  41b04d:	ret    
  41b04e:	xchg   ax,ax
  41b050:	xor    edx,edx
  41b052:	cmp    al,0x34
  41b054:	setg   dl
  41b057:	add    rdi,rdx
  41b05a:	mov    edx,ebx
  41b05c:	sub    edx,r9d
  41b05f:	cmp    al,0x30
  41b061:	jne    41b6af <grisu3_diy_fp_encode_double@@Base+0xb7f>
  41b067:	xor    esi,esi
  41b069:	jmp    41b077 <grisu3_diy_fp_encode_double@@Base+0x547>
  41b06b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b070:	movzx  eax,BYTE PTR [rbx]
  41b073:	cmp    al,0x30
  41b075:	jne    41b0f0 <grisu3_diy_fp_encode_double@@Base+0x5c0>
  41b077:	add    rbx,0x1
  41b07b:	add    esi,0x1
  41b07e:	cmp    r8,rbx
  41b081:	jne    41b070 <grisu3_diy_fp_encode_double@@Base+0x540>
  41b083:	xor    ebx,ebx
  41b085:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b087:	nop    WORD PTR [rax+rax*1+0x0]
  41b090:	lea    rdx,[rdi+0x1]
  41b094:	cmp    r8,rdx
  41b097:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b099:	movzx  eax,BYTE PTR [rdi+0x1]
  41b09d:	mov    r13d,0x1
  41b0a3:	cmp    al,0x30
  41b0a5:	jne    41af12 <grisu3_diy_fp_encode_double@@Base+0x3e2>
  41b0ab:	lea    r9,[rdx+0x1]
  41b0af:	cmp    r8,r9
  41b0b2:	je     41b2f3 <grisu3_diy_fp_encode_double@@Base+0x7c3>
  41b0b8:	movsx  rax,BYTE PTR [rdx+0x1]
  41b0bd:	mov    edx,eax
  41b0bf:	or     edx,0x20
  41b0c2:	cmp    dl,0x78
  41b0c5:	je     41b331 <grisu3_diy_fp_encode_double@@Base+0x801>
  41b0cb:	cmp    al,0x30
  41b0cd:	jne    41b0e5 <grisu3_diy_fp_encode_double@@Base+0x5b5>
  41b0cf:	nop
  41b0d0:	add    r9,0x1
  41b0d4:	cmp    r8,r9
  41b0d7:	je     41b2f0 <grisu3_diy_fp_encode_double@@Base+0x7c0>
  41b0dd:	movsx  rax,BYTE PTR [r9]
  41b0e1:	cmp    al,0x30
  41b0e3:	je     41b0d0 <grisu3_diy_fp_encode_double@@Base+0x5a0>
  41b0e5:	xor    edi,edi
  41b0e7:	jmp    41af39 <grisu3_diy_fp_encode_double@@Base+0x409>
  41b0ec:	nop    DWORD PTR [rax+0x0]
  41b0f0:	mov    ecx,0x1
  41b0f5:	lea    r9d,[rax-0x31]
  41b0f9:	cmp    r9b,0x8
  41b0fd:	ja     41af9a <grisu3_diy_fp_encode_double@@Base+0x46a>
  41b103:	lea    rcx,[rbx+0x1]
  41b107:	add    esi,0x1
  41b10a:	cmp    r8,rcx
  41b10d:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b113:	movzx  eax,BYTE PTR [rbx+0x1]
  41b117:	lea    r9d,[rax-0x30]
  41b11b:	cmp    r9b,0x9
  41b11f:	jbe    41b141 <grisu3_diy_fp_encode_double@@Base+0x611>
  41b121:	jmp    41b570 <grisu3_diy_fp_encode_double@@Base+0xa40>
  41b126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b130:	movzx  eax,BYTE PTR [rcx]
  41b133:	lea    r9d,[rax-0x30]
  41b137:	cmp    r9b,0x9
  41b13b:	ja     41b570 <grisu3_diy_fp_encode_double@@Base+0xa40>
  41b141:	add    rcx,0x1
  41b145:	add    esi,0x1
  41b148:	cmp    r8,rcx
  41b14b:	jne    41b130 <grisu3_diy_fp_encode_double@@Base+0x600>
  41b14d:	xor    ebx,ebx
  41b14f:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b154:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15784]        # 4308e0 <flatcc_builder_padding_base@@Base+0x1ac0>
  41b15c:	vmovsd QWORD PTR [r12],xmm0
  41b162:	nop    WORD PTR [rax+rax*1+0x0]
  41b168:	test   r13d,r13d
  41b16b:	je     41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b171:	vmovsd xmm0,QWORD PTR [r12]
  41b177:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x131a1]        # 42e320 <_IO_stdin_used@@Base+0x3320>
  41b17f:	vmovsd QWORD PTR [r12],xmm0
  41b185:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b18a:	nop    WORD PTR [rax+rax*1+0x0]
  41b190:	vmovsd xmm1,QWORD PTR [rip+0x15738]        # 4308d0 <flatcc_builder_padding_base@@Base+0x1ab0>
  41b198:	vmovsd QWORD PTR [r12],xmm1
  41b19e:	jmp    41b168 <grisu3_diy_fp_encode_double@@Base+0x638>
  41b1a0:	movsx  rax,BYTE PTR [rbx+0x1]
  41b1a5:	lea    r9,[rbx+0x1]
  41b1a9:	lea    r10d,[rax-0x30]
  41b1ad:	cmp    r10b,0x9
  41b1b1:	ja     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b1b7:	cmp    r8,r9
  41b1ba:	je     41b6a3 <grisu3_diy_fp_encode_double@@Base+0xb73>
  41b1c0:	movabs r11,0x1999999999999998
  41b1ca:	mov    rbx,r9
  41b1cd:	cmp    rdi,r11
  41b1d0:	jbe    41b1fb <grisu3_diy_fp_encode_double@@Base+0x6cb>
  41b1d2:	jmp    41b69e <grisu3_diy_fp_encode_double@@Base+0xb6e>
  41b1d7:	nop    WORD PTR [rax+rax*1+0x0]
  41b1e0:	movsx  rax,BYTE PTR [rbx]
  41b1e4:	lea    r10d,[rax-0x30]
  41b1e8:	cmp    r10b,0x9
  41b1ec:	ja     41b5aa <grisu3_diy_fp_encode_double@@Base+0xa7a>
  41b1f2:	cmp    rdi,r11
  41b1f5:	ja     41b63d <grisu3_diy_fp_encode_double@@Base+0xb0d>
  41b1fb:	add    rbx,0x1
  41b1ff:	lea    rdi,[rdi+rdi*4]
  41b203:	sub    esi,0x1
  41b206:	cmp    r8,rbx
  41b209:	lea    rdi,[rax+rdi*2-0x30]
  41b20e:	jne    41b1e0 <grisu3_diy_fp_encode_double@@Base+0x6b0>
  41b210:	mov    eax,r8d
  41b213:	sub    eax,r9d
  41b216:	mov    r9,r8
  41b219:	add    edx,eax
  41b21b:	add    esi,edx
  41b21d:	jmp    41b2fb <grisu3_diy_fp_encode_double@@Base+0x7cb>
  41b222:	nop    WORD PTR [rax+rax*1+0x0]
  41b228:	mov    rax,r8
  41b22b:	sub    rax,rbx
  41b22e:	cmp    rax,0x1
  41b232:	jle    41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b238:	movsx  r9d,BYTE PTR [rbx+0x1]
  41b23d:	cmp    r9b,0x2b
  41b241:	je     41b590 <grisu3_diy_fp_encode_double@@Base+0xa60>
  41b247:	cmp    r9b,0x2d
  41b24b:	je     41b673 <grisu3_diy_fp_encode_double@@Base+0xb43>
  41b251:	lea    rax,[rbx+0x1]
  41b255:	xor    r10d,r10d
  41b258:	lea    r11d,[r9-0x30]
  41b25c:	cmp    r11b,0x9
  41b260:	ja     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b266:	lea    rbx,[rax+0x1]
  41b26a:	sub    r9d,0x30
  41b26e:	cmp    r8,rbx
  41b271:	je     41b2bf <grisu3_diy_fp_encode_double@@Base+0x78f>
  41b273:	movsx  eax,BYTE PTR [rax+0x1]
  41b277:	lea    r11d,[rax-0x30]
  41b27b:	cmp    r11b,0x9
  41b27f:	jbe    41b2a1 <grisu3_diy_fp_encode_double@@Base+0x771>
  41b281:	jmp    41b57d <grisu3_diy_fp_encode_double@@Base+0xa4d>
  41b286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b290:	movsx  eax,BYTE PTR [rbx]
  41b293:	lea    r11d,[rax-0x30]
  41b297:	cmp    r11b,0x9
  41b29b:	ja     41b57d <grisu3_diy_fp_encode_double@@Base+0xa4d>
  41b2a1:	cmp    r9d,0x7fff
  41b2a8:	jg     41b2b3 <grisu3_diy_fp_encode_double@@Base+0x783>
  41b2aa:	lea    r9d,[r9+r9*4]
  41b2ae:	lea    r9d,[rax+r9*2-0x30]
  41b2b3:	add    rbx,0x1
  41b2b7:	cmp    r8,rbx
  41b2ba:	jne    41b290 <grisu3_diy_fp_encode_double@@Base+0x760>
  41b2bc:	mov    rbx,r8
  41b2bf:	test   r10d,r10d
  41b2c2:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b2c8:	sub    esi,r9d
  41b2cb:	cmp    r8,rbx
  41b2ce:	jne    41afb8 <grisu3_diy_fp_encode_double@@Base+0x488>
  41b2d4:	xor    ebx,ebx
  41b2d6:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b2db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2e0:	mov    rbx,r8
  41b2e3:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2f0:	mov    r9,r8
  41b2f3:	xor    edx,edx
  41b2f5:	xor    edi,edi
  41b2f7:	mov    esi,edx
  41b2f9:	xor    ecx,ecx
  41b2fb:	mov    rbx,r9
  41b2fe:	jmp    41b2cb <grisu3_diy_fp_encode_double@@Base+0x79b>
  41b300:	mov    r8,r12
  41b303:	call   41ab30 <grisu3_diy_fp_encode_double@@Base>
  41b308:	test   eax,eax
  41b30a:	jne    41b168 <grisu3_diy_fp_encode_double@@Base+0x638>
  41b310:	mov    rsi,rsp
  41b313:	mov    rdi,rbp
  41b316:	call   405050 <strtod@plt>
  41b31b:	mov    rax,QWORD PTR [rsp]
  41b31f:	vmovsd QWORD PTR [r12],xmm0
  41b325:	cmp    rbx,rax
  41b328:	cmova  rbx,rax
  41b32c:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b331:	mov    rbx,rbp
  41b334:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b339:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x155a7]        # 4308e8 <flatcc_builder_padding_base@@Base+0x1ac8>
  41b341:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b346:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x155a2]        # 4308f0 <flatcc_builder_padding_base@@Base+0x1ad0>
  41b34e:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b353:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1559d]        # 4308f8 <flatcc_builder_padding_base@@Base+0x1ad8>
  41b35b:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b360:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15598]        # 430900 <flatcc_builder_padding_base@@Base+0x1ae0>
  41b368:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b36d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15593]        # 430908 <flatcc_builder_padding_base@@Base+0x1ae8>
  41b375:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b37a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1558e]        # 430910 <flatcc_builder_padding_base@@Base+0x1af0>
  41b382:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b387:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15589]        # 430918 <flatcc_builder_padding_base@@Base+0x1af8>
  41b38f:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b394:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15584]        # 430920 <flatcc_builder_padding_base@@Base+0x1b00>
  41b39c:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3a1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1557f]        # 430928 <flatcc_builder_padding_base@@Base+0x1b08>
  41b3a9:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3ae:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1557a]        # 430930 <flatcc_builder_padding_base@@Base+0x1b10>
  41b3b6:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3bb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15575]        # 430938 <flatcc_builder_padding_base@@Base+0x1b18>
  41b3c3:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3c8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15570]        # 430940 <flatcc_builder_padding_base@@Base+0x1b20>
  41b3d0:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3d5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1556b]        # 430948 <flatcc_builder_padding_base@@Base+0x1b28>
  41b3dd:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3e2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15566]        # 430950 <flatcc_builder_padding_base@@Base+0x1b30>
  41b3ea:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3ef:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15561]        # 430958 <flatcc_builder_padding_base@@Base+0x1b38>
  41b3f7:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b3fc:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1555c]        # 430960 <flatcc_builder_padding_base@@Base+0x1b40>
  41b404:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b409:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15557]        # 430968 <flatcc_builder_padding_base@@Base+0x1b48>
  41b411:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b416:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15552]        # 430970 <flatcc_builder_padding_base@@Base+0x1b50>
  41b41e:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b423:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1554d]        # 430978 <flatcc_builder_padding_base@@Base+0x1b58>
  41b42b:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b430:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15548]        # 430980 <flatcc_builder_padding_base@@Base+0x1b60>
  41b438:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b43d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15493]        # 4308d8 <flatcc_builder_padding_base@@Base+0x1ab8>
  41b445:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b44a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1552e]        # 430980 <flatcc_builder_padding_base@@Base+0x1b60>
  41b452:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b457:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15519]        # 430978 <flatcc_builder_padding_base@@Base+0x1b58>
  41b45f:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b464:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15504]        # 430970 <flatcc_builder_padding_base@@Base+0x1b50>
  41b46c:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b471:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x154ef]        # 430968 <flatcc_builder_padding_base@@Base+0x1b48>
  41b479:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b47e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x154da]        # 430960 <flatcc_builder_padding_base@@Base+0x1b40>
  41b486:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b48b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x154c5]        # 430958 <flatcc_builder_padding_base@@Base+0x1b38>
  41b493:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b498:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x154b0]        # 430950 <flatcc_builder_padding_base@@Base+0x1b30>
  41b4a0:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4a5:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1549b]        # 430948 <flatcc_builder_padding_base@@Base+0x1b28>
  41b4ad:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4b2:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15486]        # 430940 <flatcc_builder_padding_base@@Base+0x1b20>
  41b4ba:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4bf:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15471]        # 430938 <flatcc_builder_padding_base@@Base+0x1b18>
  41b4c7:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4cc:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1545c]        # 430930 <flatcc_builder_padding_base@@Base+0x1b10>
  41b4d4:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4d9:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15447]        # 430928 <flatcc_builder_padding_base@@Base+0x1b08>
  41b4e1:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4e6:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15432]        # 430920 <flatcc_builder_padding_base@@Base+0x1b00>
  41b4ee:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b4f3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1541d]        # 430918 <flatcc_builder_padding_base@@Base+0x1af8>
  41b4fb:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b500:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15408]        # 430910 <flatcc_builder_padding_base@@Base+0x1af0>
  41b508:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b50d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x153f3]        # 430908 <flatcc_builder_padding_base@@Base+0x1ae8>
  41b515:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b51a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x153de]        # 430900 <flatcc_builder_padding_base@@Base+0x1ae0>
  41b522:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b527:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x153c9]        # 4308f8 <flatcc_builder_padding_base@@Base+0x1ad8>
  41b52f:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b534:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x153b4]        # 4308f0 <flatcc_builder_padding_base@@Base+0x1ad0>
  41b53c:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b541:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1539f]        # 4308e8 <flatcc_builder_padding_base@@Base+0x1ac8>
  41b549:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b54e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1538a]        # 4308e0 <flatcc_builder_padding_base@@Base+0x1ac0>
  41b556:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b55b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15375]        # 4308d8 <flatcc_builder_padding_base@@Base+0x1ab8>
  41b563:	jmp    41b15c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41b568:	nop    DWORD PTR [rax+rax*1+0x0]
  41b570:	mov    rbx,rcx
  41b573:	mov    ecx,0x1
  41b578:	jmp    41af9a <grisu3_diy_fp_encode_double@@Base+0x46a>
  41b57d:	test   r10d,r10d
  41b580:	jne    41b2c8 <grisu3_diy_fp_encode_double@@Base+0x798>
  41b586:	add    esi,r9d
  41b589:	jmp    41afb8 <grisu3_diy_fp_encode_double@@Base+0x488>
  41b58e:	xchg   ax,ax
  41b590:	lea    rax,[rbx+0x2]
  41b594:	cmp    r8,rax
  41b597:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b59d:	movsx  r9d,BYTE PTR [rbx+0x2]
  41b5a2:	xor    r10d,r10d
  41b5a5:	jmp    41b258 <grisu3_diy_fp_encode_double@@Base+0x728>
  41b5aa:	mov    rax,rbx
  41b5ad:	sub    rax,r9
  41b5b0:	add    edx,eax
  41b5b2:	jmp    41b5c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41b5b4:	nop    DWORD PTR [rax+0x0]
  41b5b8:	add    rbx,0x1
  41b5bc:	add    esi,0x1
  41b5bf:	cmp    r8,rbx
  41b5c2:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b5c8:	movzx  eax,BYTE PTR [rbx]
  41b5cb:	cmp    al,0x30
  41b5cd:	je     41b5b8 <grisu3_diy_fp_encode_double@@Base+0xa88>
  41b5cf:	lea    r9d,[rax-0x31]
  41b5d3:	cmp    r9b,0x8
  41b5d7:	ja     41b628 <grisu3_diy_fp_encode_double@@Base+0xaf8>
  41b5d9:	lea    rcx,[rbx+0x1]
  41b5dd:	cmp    r8,rcx
  41b5e0:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b5e6:	movzx  eax,BYTE PTR [rbx+0x1]
  41b5ea:	lea    r9d,[rax-0x30]
  41b5ee:	cmp    r9b,0x9
  41b5f2:	jbe    41b60d <grisu3_diy_fp_encode_double@@Base+0xadd>
  41b5f4:	jmp    41b61d <grisu3_diy_fp_encode_double@@Base+0xaed>
  41b5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b600:	movzx  eax,BYTE PTR [rcx]
  41b603:	lea    r9d,[rax-0x30]
  41b607:	cmp    r9b,0x9
  41b60b:	ja     41b61d <grisu3_diy_fp_encode_double@@Base+0xaed>
  41b60d:	add    rcx,0x1
  41b611:	cmp    r8,rcx
  41b614:	jne    41b600 <grisu3_diy_fp_encode_double@@Base+0xad0>
  41b616:	xor    ebx,ebx
  41b618:	jmp    41b02c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41b61d:	mov    rbx,rcx
  41b620:	mov    ecx,0x1
  41b625:	nop    DWORD PTR [rax]
  41b628:	add    esi,edx
  41b62a:	jmp    41afad <grisu3_diy_fp_encode_double@@Base+0x47d>
  41b62f:	mov    edx,r8d
  41b632:	sub    edx,r9d
  41b635:	mov    r9,r8
  41b638:	jmp    41b2f7 <grisu3_diy_fp_encode_double@@Base+0x7c7>
  41b63d:	mov    r10d,ebx
  41b640:	sub    r10d,r9d
  41b643:	mov    r9d,r10d
  41b646:	test   ecx,ecx
  41b648:	je     41b652 <grisu3_diy_fp_encode_double@@Base+0xb22>
  41b64a:	add    edx,r9d
  41b64d:	jmp    41b5c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41b652:	cmp    al,0x34
  41b654:	setg   al
  41b657:	add    edx,r9d
  41b65a:	movzx  eax,al
  41b65d:	add    rdi,rax
  41b660:	cmp    r8,rbx
  41b663:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b669:	mov    ecx,0x1
  41b66e:	jmp    41b5c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41b673:	lea    rax,[rbx+0x2]
  41b677:	cmp    r8,rax
  41b67a:	je     41b083 <grisu3_diy_fp_encode_double@@Base+0x553>
  41b680:	movsx  r9d,BYTE PTR [rbx+0x2]
  41b685:	mov    r10d,0x1
  41b68b:	jmp    41b258 <grisu3_diy_fp_encode_double@@Base+0x728>
  41b690:	xor    edx,edx
  41b692:	jmp    41af88 <grisu3_diy_fp_encode_double@@Base+0x458>
  41b697:	xor    edx,edx
  41b699:	jmp    41b2f7 <grisu3_diy_fp_encode_double@@Base+0x7c7>
  41b69e:	xor    r9d,r9d
  41b6a1:	jmp    41b646 <grisu3_diy_fp_encode_double@@Base+0xb16>
  41b6a3:	xor    eax,eax
  41b6a5:	jmp    41b219 <grisu3_diy_fp_encode_double@@Base+0x6e9>
  41b6aa:	call   405070 <__stack_chk_fail@plt>
  41b6af:	mov    ecx,0x1
  41b6b4:	xor    esi,esi
  41b6b6:	jmp    41b0f5 <grisu3_diy_fp_encode_double@@Base+0x5c5>
  41b6bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b6c0 <flatcc_json_parser_error_string@@Base>:
  41b6c0:	cmp    edi,0x22
  41b6c3:	ja     41b910 <flatcc_json_parser_error_string@@Base+0x250>
  41b6c9:	lea    rdx,[rip+0x143a4]        # 42fa74 <flatcc_builder_padding_base@@Base+0xc54>
  41b6d0:	mov    edi,edi
  41b6d2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  41b6d6:	add    rax,rdx
  41b6d9:	jmp    rax
  41b6db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6e0:	lea    rax,[rip+0x13939]        # 42f020 <flatcc_builder_padding_base@@Base+0x200>
  41b6e7:	ret    
  41b6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b6f0:	lea    rax,[rip+0x13ac5]        # 42f1bc <flatcc_builder_padding_base@@Base+0x39c>
  41b6f7:	ret    
  41b6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b700:	lea    rax,[rip+0x1427d]        # 42f984 <flatcc_builder_padding_base@@Base+0xb64>
  41b707:	ret    
  41b708:	nop    DWORD PTR [rax+rax*1+0x0]
  41b710:	lea    rax,[rip+0x14253]        # 42f96a <flatcc_builder_padding_base@@Base+0xb4a>
  41b717:	ret    
  41b718:	nop    DWORD PTR [rax+rax*1+0x0]
  41b720:	lea    rax,[rip+0x1422c]        # 42f953 <flatcc_builder_padding_base@@Base+0xb33>
  41b727:	ret    
  41b728:	nop    DWORD PTR [rax+rax*1+0x0]
  41b730:	lea    rax,[rip+0x141ff]        # 42f936 <flatcc_builder_padding_base@@Base+0xb16>
  41b737:	ret    
  41b738:	nop    DWORD PTR [rax+rax*1+0x0]
  41b740:	lea    rax,[rip+0x13922]        # 42f069 <flatcc_builder_padding_base@@Base+0x249>
  41b747:	ret    
  41b748:	nop    DWORD PTR [rax+rax*1+0x0]
  41b750:	lea    rax,[rip+0x141c5]        # 42f91c <flatcc_builder_padding_base@@Base+0xafc>
  41b757:	ret    
  41b758:	nop    DWORD PTR [rax+rax*1+0x0]
  41b760:	lea    rax,[rip+0x1419a]        # 42f901 <flatcc_builder_padding_base@@Base+0xae1>
  41b767:	ret    
  41b768:	nop    DWORD PTR [rax+rax*1+0x0]
  41b770:	lea    rax,[rip+0x13f39]        # 42f6b0 <flatcc_builder_padding_base@@Base+0x890>
  41b777:	ret    
  41b778:	nop    DWORD PTR [rax+rax*1+0x0]
  41b780:	lea    rax,[rip+0x1415d]        # 42f8e4 <flatcc_builder_padding_base@@Base+0xac4>
  41b787:	ret    
  41b788:	nop    DWORD PTR [rax+rax*1+0x0]
  41b790:	lea    rax,[rip+0x14139]        # 42f8d0 <flatcc_builder_padding_base@@Base+0xab0>
  41b797:	ret    
  41b798:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7a0:	lea    rax,[rip+0x13ee1]        # 42f688 <flatcc_builder_padding_base@@Base+0x868>
  41b7a7:	ret    
  41b7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7b0:	lea    rax,[rip+0x1410a]        # 42f8c1 <flatcc_builder_padding_base@@Base+0xaa1>
  41b7b7:	ret    
  41b7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7c0:	lea    rax,[rip+0x140ea]        # 42f8b1 <flatcc_builder_padding_base@@Base+0xa91>
  41b7c7:	ret    
  41b7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7d0:	lea    rax,[rip+0x140c6]        # 42f89d <flatcc_builder_padding_base@@Base+0xa7d>
  41b7d7:	ret    
  41b7d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7e0:	lea    rax,[rip+0x140a9]        # 42f890 <flatcc_builder_padding_base@@Base+0xa70>
  41b7e7:	ret    
  41b7e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7f0:	lea    rax,[rip+0x1408a]        # 42f881 <flatcc_builder_padding_base@@Base+0xa61>
  41b7f7:	ret    
  41b7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b800:	lea    rax,[rip+0x14068]        # 42f86f <flatcc_builder_padding_base@@Base+0xa4f>
  41b807:	ret    
  41b808:	nop    DWORD PTR [rax+rax*1+0x0]
  41b810:	lea    rax,[rip+0x14048]        # 42f85f <flatcc_builder_padding_base@@Base+0xa3f>
  41b817:	ret    
  41b818:	nop    DWORD PTR [rax+rax*1+0x0]
  41b820:	lea    rax,[rip+0x14025]        # 42f84c <flatcc_builder_padding_base@@Base+0xa2c>
  41b827:	ret    
  41b828:	nop    DWORD PTR [rax+rax*1+0x0]
  41b830:	lea    rax,[rip+0x13ffc]        # 42f833 <flatcc_builder_padding_base@@Base+0xa13>
  41b837:	ret    
  41b838:	nop    DWORD PTR [rax+rax*1+0x0]
  41b840:	lea    rax,[rip+0x13fdd]        # 42f824 <flatcc_builder_padding_base@@Base+0xa04>
  41b847:	ret    
  41b848:	nop    DWORD PTR [rax+rax*1+0x0]
  41b850:	lea    rax,[rip+0x13fbc]        # 42f813 <flatcc_builder_padding_base@@Base+0x9f3>
  41b857:	ret    
  41b858:	nop    DWORD PTR [rax+rax*1+0x0]
  41b860:	lea    rax,[rip+0x13f9d]        # 42f804 <flatcc_builder_padding_base@@Base+0x9e4>
  41b867:	ret    
  41b868:	nop    DWORD PTR [rax+rax*1+0x0]
  41b870:	lea    rax,[rip+0x13f7b]        # 42f7f2 <flatcc_builder_padding_base@@Base+0x9d2>
  41b877:	ret    
  41b878:	nop    DWORD PTR [rax+rax*1+0x0]
  41b880:	lea    rax,[rip+0x13f5a]        # 42f7e1 <flatcc_builder_padding_base@@Base+0x9c1>
  41b887:	ret    
  41b888:	nop    DWORD PTR [rax+rax*1+0x0]
  41b890:	lea    rax,[rip+0x13f40]        # 42f7d7 <flatcc_builder_padding_base@@Base+0x9b7>
  41b897:	ret    
  41b898:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8a0:	lea    rax,[rip+0x13884]        # 42f12b <flatcc_builder_padding_base@@Base+0x30b>
  41b8a7:	ret    
  41b8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8b0:	lea    rax,[rip+0x13f10]        # 42f7c7 <flatcc_builder_padding_base@@Base+0x9a7>
  41b8b7:	ret    
  41b8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8c0:	lea    rax,[rip+0x13eeb]        # 42f7b2 <flatcc_builder_padding_base@@Base+0x992>
  41b8c7:	ret    
  41b8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8d0:	lea    rax,[rip+0x13ecc]        # 42f7a3 <flatcc_builder_padding_base@@Base+0x983>
  41b8d7:	ret    
  41b8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8e0:	lea    rax,[rip+0x13ead]        # 42f794 <flatcc_builder_padding_base@@Base+0x974>
  41b8e7:	ret    
  41b8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8f0:	lea    rax,[rip+0x13e90]        # 42f787 <flatcc_builder_padding_base@@Base+0x967>
  41b8f7:	ret    
  41b8f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b900:	lea    rax,[rip+0x13e7c]        # 42f783 <flatcc_builder_padding_base@@Base+0x963>
  41b907:	ret    
  41b908:	nop    DWORD PTR [rax+rax*1+0x0]
  41b910:	lea    rax,[rip+0x138b3]        # 42f1ca <flatcc_builder_padding_base@@Base+0x3aa>
  41b917:	ret    
  41b918:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b920 <flatcc_json_parser_set_error@@Base>:
  41b920:	mov    rax,rdx
  41b923:	mov    edx,DWORD PTR [rdi+0x1c]
  41b926:	test   edx,edx
  41b928:	jne    41b93e <flatcc_json_parser_set_error@@Base+0x1e>
  41b92a:	mov    DWORD PTR [rdi+0x1c],ecx
  41b92d:	mov    rcx,rsi
  41b930:	sub    rcx,QWORD PTR [rdi+0x8]
  41b934:	mov    QWORD PTR [rdi+0x30],rsi
  41b938:	add    ecx,0x1
  41b93b:	mov    DWORD PTR [rdi+0x18],ecx
  41b93e:	repz ret 

000000000041b940 <flatcc_json_parser_string_part@@Base>:
  41b940:	cmp    rsi,rdx
  41b943:	mov    r8,rdx
  41b946:	je     41b978 <flatcc_json_parser_string_part@@Base+0x38>
  41b948:	movzx  eax,BYTE PTR [rsi]
  41b94b:	cmp    al,0x22
  41b94d:	je     41b9a8 <flatcc_json_parser_string_part@@Base+0x68>
  41b94f:	cmp    al,0x5c
  41b951:	je     41b990 <flatcc_json_parser_string_part@@Base+0x50>
  41b953:	cmp    al,0x1f
  41b955:	ja     41b96f <flatcc_json_parser_string_part@@Base+0x2f>
  41b957:	jmp    41b990 <flatcc_json_parser_string_part@@Base+0x50>
  41b959:	nop    DWORD PTR [rax+0x0]
  41b960:	movzx  eax,BYTE PTR [rsi]
  41b963:	cmp    al,0x22
  41b965:	je     41b9a8 <flatcc_json_parser_string_part@@Base+0x68>
  41b967:	cmp    al,0x1f
  41b969:	jbe    41b990 <flatcc_json_parser_string_part@@Base+0x50>
  41b96b:	cmp    al,0x5c
  41b96d:	je     41b990 <flatcc_json_parser_string_part@@Base+0x50>
  41b96f:	add    rsi,0x1
  41b973:	cmp    r8,rsi
  41b976:	jne    41b960 <flatcc_json_parser_string_part@@Base+0x20>
  41b978:	mov    ecx,0x14
  41b97d:	mov    rdx,r8
  41b980:	mov    rsi,r8
  41b983:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41b988:	nop    DWORD PTR [rax+rax*1+0x0]
  41b990:	cmp    al,0x1f
  41b992:	jg     41b9a8 <flatcc_json_parser_string_part@@Base+0x68>
  41b994:	mov    ecx,0x11
  41b999:	mov    rdx,r8
  41b99c:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41b9a1:	nop    DWORD PTR [rax+0x0]
  41b9a8:	mov    rax,rsi
  41b9ab:	ret    
  41b9ac:	nop    DWORD PTR [rax+0x0]

000000000041b9b0 <flatcc_json_parser_space_ext@@Base>:
  41b9b0:	mov    rax,rdx
  41b9b3:	sub    rax,rsi
  41b9b6:	cmp    rax,0xf
  41b9ba:	jle    41b9f4 <flatcc_json_parser_space_ext@@Base+0x44>
  41b9bc:	movzx  ecx,BYTE PTR [rsi]
  41b9bf:	cmp    cl,0x20
  41b9c2:	jg     41ba54 <flatcc_json_parser_space_ext@@Base+0xa4>
  41b9c8:	cmp    WORD PTR [rsi],0x2020
  41b9cd:	je     41ba70 <flatcc_json_parser_space_ext@@Base+0xc0>
  41b9d3:	cmp    cl,0x20
  41b9d6:	je     41ba7c <flatcc_json_parser_space_ext@@Base+0xcc>
  41b9dc:	cmp    rsi,rdx
  41b9df:	jne    41ba00 <flatcc_json_parser_space_ext@@Base+0x50>
  41b9e1:	mov    rax,rdx
  41b9e4:	ret    
  41b9e5:	nop    DWORD PTR [rax]
  41b9e8:	movzx  ecx,BYTE PTR [rsi]
  41b9eb:	cmp    cl,0x20
  41b9ee:	jne    41ba00 <flatcc_json_parser_space_ext@@Base+0x50>
  41b9f0:	add    rsi,0x1
  41b9f4:	cmp    rdx,rsi
  41b9f7:	jne    41b9e8 <flatcc_json_parser_space_ext@@Base+0x38>
  41b9f9:	jmp    41b9e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41b9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba00:	cmp    cl,0x20
  41ba03:	jg     41ba54 <flatcc_json_parser_space_ext@@Base+0xa4>
  41ba05:	cmp    cl,0xa
  41ba08:	je     41ba3b <flatcc_json_parser_space_ext@@Base+0x8b>
  41ba0a:	jle    41ba60 <flatcc_json_parser_space_ext@@Base+0xb0>
  41ba0c:	cmp    cl,0xd
  41ba0f:	je     41ba20 <flatcc_json_parser_space_ext@@Base+0x70>
  41ba11:	cmp    cl,0x20
  41ba14:	je     41b9b0 <flatcc_json_parser_space_ext@@Base>
  41ba16:	mov    ecx,0x5
  41ba1b:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41ba20:	mov    rcx,rdx
  41ba23:	xor    eax,eax
  41ba25:	sub    rcx,rsi
  41ba28:	cmp    rcx,0x1
  41ba2c:	jle    41ba35 <flatcc_json_parser_space_ext@@Base+0x85>
  41ba2e:	cmp    BYTE PTR [rsi+0x1],0xa
  41ba32:	sete   al
  41ba35:	movzx  eax,al
  41ba38:	add    rsi,rax
  41ba3b:	add    DWORD PTR [rdi+0x14],0x1
  41ba3f:	add    rsi,0x1
  41ba43:	mov    QWORD PTR [rdi+0x8],rsi
  41ba47:	cmp    rdx,rsi
  41ba4a:	je     41b9e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41ba4c:	movzx  ecx,BYTE PTR [rsi]
  41ba4f:	cmp    cl,0x20
  41ba52:	jle    41ba05 <flatcc_json_parser_space_ext@@Base+0x55>
  41ba54:	mov    rdx,rsi
  41ba57:	jmp    41b9e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41ba5c:	nop    DWORD PTR [rax+0x0]
  41ba60:	cmp    cl,0x9
  41ba63:	jne    41ba16 <flatcc_json_parser_space_ext@@Base+0x66>
  41ba65:	add    rsi,0x1
  41ba69:	jmp    41ba47 <flatcc_json_parser_space_ext@@Base+0x97>
  41ba6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba70:	movzx  eax,BYTE PTR [rsi+0x2]
  41ba74:	add    rsi,0x2
  41ba78:	cmp    al,0x20
  41ba7a:	jne    41ba84 <flatcc_json_parser_space_ext@@Base+0xd4>
  41ba7c:	movzx  eax,BYTE PTR [rsi+0x1]
  41ba80:	add    rsi,0x1
  41ba84:	cmp    al,0x20
  41ba86:	jle    41b9f4 <flatcc_json_parser_space_ext@@Base+0x44>
  41ba8c:	jmp    41ba54 <flatcc_json_parser_space_ext@@Base+0xa4>
  41ba8e:	xchg   ax,ax
  41ba90:	push   r15
  41ba92:	push   r14
  41ba94:	push   r13
  41ba96:	push   r12
  41ba98:	mov    r12,rdi
  41ba9b:	push   rbp
  41ba9c:	push   rbx
  41ba9d:	mov    rbp,rdx
  41baa0:	sub    rsp,0x58
  41baa4:	mov    BYTE PTR [r8],0x0
  41baa8:	mov    rdx,QWORD PTR fs:0x28
  41bab1:	mov    QWORD PTR [rsp+0x48],rdx
  41bab6:	xor    edx,edx
  41bab8:	cmp    rsi,rbp
  41babb:	mov    QWORD PTR [rsp+0x10],rcx
  41bac0:	mov    QWORD PTR [rsp+0x20],r8
  41bac5:	je     41bc41 <flatcc_json_parser_space_ext@@Base+0x291>
  41bacb:	cmp    BYTE PTR [rsi],0x22
  41bace:	je     41bbf0 <flatcc_json_parser_space_ext@@Base+0x240>
  41bad4:	mov    ecx,0x5
  41bad9:	mov    rdx,rbp
  41badc:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bae1:	mov    rbx,rax
  41bae4:	mov    rax,rbp
  41bae7:	sub    rax,rbx
  41baea:	cmp    rax,0x1
  41baee:	jle    41bafb <flatcc_json_parser_space_ext@@Base+0x14b>
  41baf0:	cmp    BYTE PTR [rbx],0x20
  41baf3:	jg     41bb0c <flatcc_json_parser_space_ext@@Base+0x15c>
  41baf5:	je     41bc2e <flatcc_json_parser_space_ext@@Base+0x27e>
  41bafb:	mov    rsi,rbx
  41bafe:	mov    rdx,rbp
  41bb01:	mov    rdi,r12
  41bb04:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41bb09:	mov    rbx,rax
  41bb0c:	cmp    rbp,rbx
  41bb0f:	je     41bb69 <flatcc_json_parser_space_ext@@Base+0x1b9>
  41bb11:	lea    rax,[rsp+0x38]
  41bb16:	lea    r15,[rsp+0x3c]
  41bb1b:	lea    r14,[rsp+0x40]
  41bb20:	mov    BYTE PTR [rsp+0x1f],0x0
  41bb25:	mov    QWORD PTR [rsp+0x8],rax
  41bb2a:	mov    r13,QWORD PTR [rsp+0x10]
  41bb2f:	mov    rax,QWORD PTR [r13+0x0]
  41bb33:	jmp    41bb4e <flatcc_json_parser_space_ext@@Base+0x19e>
  41bb35:	nop    DWORD PTR [rax]
  41bb38:	cmp    rbx,rax
  41bb3b:	jne    41bb90 <flatcc_json_parser_space_ext@@Base+0x1e0>
  41bb3d:	add    r13,0x8
  41bb41:	mov    rax,QWORD PTR [r13+0x0]
  41bb45:	test   rax,rax
  41bb48:	je     41bbd0 <flatcc_json_parser_space_ext@@Base+0x220>
  41bb4e:	mov    r9,r15
  41bb51:	mov    r8,r14
  41bb54:	mov    rcx,QWORD PTR [rsp+0x8]
  41bb59:	mov    rdx,rbp
  41bb5c:	mov    rsi,rbx
  41bb5f:	mov    rdi,r12
  41bb62:	call   rax
  41bb64:	cmp    rbp,rax
  41bb67:	jne    41bb38 <flatcc_json_parser_space_ext@@Base+0x188>
  41bb69:	mov    rdi,QWORD PTR [rsp+0x48]
  41bb6e:	xor    rdi,QWORD PTR fs:0x28
  41bb77:	mov    rax,rbp
  41bb7a:	jne    41bc51 <flatcc_json_parser_space_ext@@Base+0x2a1>
  41bb80:	add    rsp,0x58
  41bb84:	pop    rbx
  41bb85:	pop    rbp
  41bb86:	pop    r12
  41bb88:	pop    r13
  41bb8a:	pop    r14
  41bb8c:	pop    r15
  41bb8e:	ret    
  41bb8f:	nop
  41bb90:	mov    r8,rax
  41bb93:	mov    eax,DWORD PTR [rsp+0x38]
  41bb97:	test   eax,eax
  41bb99:	jne    41bc00 <flatcc_json_parser_space_ext@@Base+0x250>
  41bb9b:	mov    rax,QWORD PTR [rsp+0x40]
  41bba0:	cmp    rax,0xff
  41bba6:	ja     41bc27 <flatcc_json_parser_space_ext@@Base+0x277>
  41bba8:	mov    BYTE PTR [rsp+0x1f],al
  41bbac:	mov    rax,QWORD PTR [rsp+0x20]
  41bbb1:	mov    edx,DWORD PTR [rsp+0x3c]
  41bbb5:	movzx  ecx,BYTE PTR [rsp+0x1f]
  41bbba:	add    BYTE PTR [rax],cl
  41bbbc:	test   edx,edx
  41bbbe:	je     41bc49 <flatcc_json_parser_space_ext@@Base+0x299>
  41bbc4:	mov    rbx,r8
  41bbc7:	jmp    41bb2a <flatcc_json_parser_space_ext@@Base+0x17a>
  41bbcc:	nop    DWORD PTR [rax+0x0]
  41bbd0:	mov    rdx,rbp
  41bbd3:	mov    ecx,0x17
  41bbd8:	mov    rsi,rbx
  41bbdb:	mov    rdi,r12
  41bbde:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bbe3:	mov    rbp,rax
  41bbe6:	jmp    41bb69 <flatcc_json_parser_space_ext@@Base+0x1b9>
  41bbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbf0:	lea    rbx,[rsi+0x1]
  41bbf4:	mov    rax,rbp
  41bbf7:	sub    rax,rbx
  41bbfa:	jmp    41baea <flatcc_json_parser_space_ext@@Base+0x13a>
  41bbff:	nop
  41bc00:	mov    ecx,0x8
  41bc05:	mov    rsi,r8
  41bc08:	mov    rdx,rbp
  41bc0b:	mov    rdi,r12
  41bc0e:	mov    QWORD PTR [rsp+0x28],r8
  41bc13:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bc18:	cmp    rbp,rax
  41bc1b:	mov    r8,QWORD PTR [rsp+0x28]
  41bc20:	jne    41bbac <flatcc_json_parser_space_ext@@Base+0x1fc>
  41bc22:	jmp    41bb69 <flatcc_json_parser_space_ext@@Base+0x1b9>
  41bc27:	mov    ecx,0x7
  41bc2c:	jmp    41bc05 <flatcc_json_parser_space_ext@@Base+0x255>
  41bc2e:	cmp    BYTE PTR [rbx+0x1],0x20
  41bc32:	jle    41bafb <flatcc_json_parser_space_ext@@Base+0x14b>
  41bc38:	add    rbx,0x1
  41bc3c:	jmp    41bb0c <flatcc_json_parser_space_ext@@Base+0x15c>
  41bc41:	mov    rbx,rbp
  41bc44:	jmp    41bafb <flatcc_json_parser_space_ext@@Base+0x14b>
  41bc49:	mov    rbp,r8
  41bc4c:	jmp    41bb69 <flatcc_json_parser_space_ext@@Base+0x1b9>
  41bc51:	call   405070 <__stack_chk_fail@plt>
  41bc56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc60:	push   r15
  41bc62:	push   r14
  41bc64:	mov    r14,rsi
  41bc67:	push   r13
  41bc69:	push   r12
  41bc6b:	mov    r12d,r8d
  41bc6e:	push   rbp
  41bc6f:	push   rbx
  41bc70:	mov    rbp,rdi
  41bc73:	mov    rbx,rdx
  41bc76:	sub    rsp,0x38
  41bc7a:	mov    rdi,QWORD PTR [rdi]
  41bc7d:	mov    rax,QWORD PTR fs:0x28
  41bc86:	mov    QWORD PTR [rsp+0x28],rax
  41bc8b:	xor    eax,eax
  41bc8d:	mov    QWORD PTR [rsp],rcx
  41bc91:	mov    DWORD PTR [rsp+0x1c],r9d
  41bc96:	mov    r15,QWORD PTR [rsp+0x70]
  41bc9b:	mov    DWORD PTR [rsp+0x24],0x0
  41bca3:	call   416740 <flatcc_builder_start_offset_vector@@Base>
  41bca8:	test   eax,eax
  41bcaa:	jne    41bd00 <flatcc_json_parser_space_ext@@Base+0x350>
  41bcac:	cmp    r14,rbx
  41bcaf:	je     41bcbb <flatcc_json_parser_space_ext@@Base+0x30b>
  41bcb1:	cmp    BYTE PTR [r14],0x5b
  41bcb5:	je     41bd40 <flatcc_json_parser_space_ext@@Base+0x390>
  41bcbb:	mov    rsi,r14
  41bcbe:	mov    ecx,0x16
  41bcc3:	mov    rdx,rbx
  41bcc6:	mov    rdi,rbp
  41bcc9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bcce:	mov    r14,rax
  41bcd1:	mov    eax,r12d
  41bcd4:	mov    QWORD PTR [rsp+0x8],rax
  41bcd9:	xor    eax,eax
  41bcdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bce0:	cmp    rax,QWORD PTR [rsp+0x8]
  41bce5:	je     41bfb9 <flatcc_json_parser_space_ext@@Base+0x609>
  41bceb:	mov    ecx,0x1e
  41bcf0:	mov    rdx,rbx
  41bcf3:	mov    rsi,r14
  41bcf6:	mov    rdi,rbp
  41bcf9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bcfe:	jmp    41bd13 <flatcc_json_parser_space_ext@@Base+0x363>
  41bd00:	mov    ecx,0x21
  41bd05:	mov    rdx,rbx
  41bd08:	mov    rsi,r14
  41bd0b:	mov    rdi,rbp
  41bd0e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bd13:	mov    rcx,QWORD PTR [rsp+0x28]
  41bd18:	xor    rcx,QWORD PTR fs:0x28
  41bd21:	jne    41c09b <flatcc_json_parser_space_ext@@Base+0x6eb>
  41bd27:	add    rsp,0x38
  41bd2b:	pop    rbx
  41bd2c:	pop    rbp
  41bd2d:	pop    r12
  41bd2f:	pop    r13
  41bd31:	pop    r14
  41bd33:	pop    r15
  41bd35:	ret    
  41bd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd40:	lea    r13,[r14+0x1]
  41bd44:	mov    rax,rbx
  41bd47:	sub    rax,r13
  41bd4a:	cmp    rax,0x1
  41bd4e:	jle    41bd5d <flatcc_json_parser_space_ext@@Base+0x3ad>
  41bd50:	cmp    BYTE PTR [r14+0x1],0x20
  41bd55:	jg     41bd6e <flatcc_json_parser_space_ext@@Base+0x3be>
  41bd57:	je     41c003 <flatcc_json_parser_space_ext@@Base+0x653>
  41bd5d:	mov    rsi,r13
  41bd60:	mov    rdx,rbx
  41bd63:	mov    rdi,rbp
  41bd66:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41bd6b:	mov    r13,rax
  41bd6e:	cmp    rbx,r13
  41bd71:	je     41bd7e <flatcc_json_parser_space_ext@@Base+0x3ce>
  41bd73:	cmp    BYTE PTR [r13+0x0],0x5d
  41bd78:	je     41c04b <flatcc_json_parser_space_ext@@Base+0x69b>
  41bd7e:	mov    eax,r12d
  41bd81:	test   rax,rax
  41bd84:	mov    QWORD PTR [rsp+0x8],rax
  41bd89:	je     41bf0d <flatcc_json_parser_space_ext@@Base+0x55d>
  41bd8f:	lea    rax,[rsp+0x24]
  41bd94:	xor    r12d,r12d
  41bd97:	mov    QWORD PTR [rsp+0x10],rax
  41bd9c:	nop    DWORD PTR [rax+0x0]
  41bda0:	mov    rsi,QWORD PTR [rsp]
  41bda4:	mov    rdi,QWORD PTR [rbp+0x0]
  41bda8:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41bdad:	movzx  ecx,BYTE PTR [rax+r12*1]
  41bdb2:	mov    r8,QWORD PTR [rsp+0x10]
  41bdb7:	mov    rdx,rbx
  41bdba:	mov    rsi,r13
  41bdbd:	mov    rdi,rbp
  41bdc0:	call   r15
  41bdc3:	cmp    rbx,rax
  41bdc6:	mov    r14,rax
  41bdc9:	je     41bf50 <flatcc_json_parser_space_ext@@Base+0x5a0>
  41bdcf:	mov    rdi,QWORD PTR [rbp+0x0]
  41bdd3:	mov    esi,0x1
  41bdd8:	call   416200 <flatcc_builder_extend_offset_vector@@Base>
  41bddd:	test   rax,rax
  41bde0:	je     41bd00 <flatcc_json_parser_space_ext@@Base+0x350>
  41bde6:	mov    edx,DWORD PTR [rsp+0x24]
  41bdea:	mov    DWORD PTR [rax],edx
  41bdec:	mov    rax,rbx
  41bdef:	sub    rax,r14
  41bdf2:	cmp    rax,0x1
  41bdf6:	jle    41be06 <flatcc_json_parser_space_ext@@Base+0x456>
  41bdf8:	movzx  eax,BYTE PTR [r14]
  41bdfc:	cmp    al,0x20
  41bdfe:	jg     41be24 <flatcc_json_parser_space_ext@@Base+0x474>
  41be00:	je     41be90 <flatcc_json_parser_space_ext@@Base+0x4e0>
  41be06:	mov    rsi,r14
  41be09:	mov    rdx,rbx
  41be0c:	mov    rdi,rbp
  41be0f:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41be14:	mov    r14,rax
  41be17:	cmp    rbx,r14
  41be1a:	je     41beb0 <flatcc_json_parser_space_ext@@Base+0x500>
  41be20:	movzx  eax,BYTE PTR [r14]
  41be24:	cmp    al,0x2c
  41be26:	je     41bec0 <flatcc_json_parser_space_ext@@Base+0x510>
  41be2c:	cmp    al,0x5d
  41be2e:	je     41be50 <flatcc_json_parser_space_ext@@Base+0x4a0>
  41be30:	mov    rsi,r14
  41be33:	mov    ecx,0x9
  41be38:	mov    rdx,rbx
  41be3b:	mov    rdi,rbp
  41be3e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41be43:	mov    r14,rax
  41be46:	lea    rax,[r12+0x1]
  41be4b:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41be50:	lea    rsi,[r14+0x1]
  41be54:	mov    rax,rbx
  41be57:	sub    rax,rsi
  41be5a:	cmp    rax,0x1
  41be5e:	jle    41be71 <flatcc_json_parser_space_ext@@Base+0x4c1>
  41be60:	cmp    BYTE PTR [r14+0x1],0x20
  41be65:	jg     41bf28 <flatcc_json_parser_space_ext@@Base+0x578>
  41be6b:	je     41bf38 <flatcc_json_parser_space_ext@@Base+0x588>
  41be71:	mov    rdx,rbx
  41be74:	mov    rdi,rbp
  41be77:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41be7c:	mov    r14,rax
  41be7f:	lea    rax,[r12+0x1]
  41be84:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41be89:	nop    DWORD PTR [rax+0x0]
  41be90:	cmp    BYTE PTR [r14+0x1],0x20
  41be95:	jle    41be06 <flatcc_json_parser_space_ext@@Base+0x456>
  41be9b:	add    r14,0x1
  41be9f:	cmp    rbx,r14
  41bea2:	jne    41be20 <flatcc_json_parser_space_ext@@Base+0x470>
  41bea8:	nop    DWORD PTR [rax+rax*1+0x0]
  41beb0:	lea    rax,[r12+0x1]
  41beb5:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41beba:	nop    WORD PTR [rax+rax*1+0x0]
  41bec0:	lea    r13,[r14+0x1]
  41bec4:	mov    rax,rbx
  41bec7:	sub    rax,r13
  41beca:	cmp    rax,0x1
  41bece:	jle    41bedd <flatcc_json_parser_space_ext@@Base+0x52d>
  41bed0:	cmp    BYTE PTR [r14+0x1],0x20
  41bed5:	jg     41beee <flatcc_json_parser_space_ext@@Base+0x53e>
  41bed7:	je     41bf60 <flatcc_json_parser_space_ext@@Base+0x5b0>
  41bedd:	mov    rsi,r13
  41bee0:	mov    rdx,rbx
  41bee3:	mov    rdi,rbp
  41bee6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41beeb:	mov    r13,rax
  41beee:	cmp    rbx,r13
  41bef1:	je     41c017 <flatcc_json_parser_space_ext@@Base+0x667>
  41bef7:	cmp    BYTE PTR [r13+0x0],0x5d
  41befc:	je     41bf78 <flatcc_json_parser_space_ext@@Base+0x5c8>
  41befe:	add    r12,0x1
  41bf02:	cmp    QWORD PTR [rsp+0x8],r12
  41bf07:	jne    41bda0 <flatcc_json_parser_space_ext@@Base+0x3f0>
  41bf0d:	mov    ecx,0x1e
  41bf12:	mov    rdx,rbx
  41bf15:	mov    rsi,r13
  41bf18:	mov    rdi,rbp
  41bf1b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41bf20:	jmp    41bd13 <flatcc_json_parser_space_ext@@Base+0x363>
  41bf25:	nop    DWORD PTR [rax]
  41bf28:	lea    rax,[r12+0x1]
  41bf2d:	mov    r14,rsi
  41bf30:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41bf35:	nop    DWORD PTR [rax]
  41bf38:	cmp    BYTE PTR [r14+0x2],0x20
  41bf3d:	jle    41be71 <flatcc_json_parser_space_ext@@Base+0x4c1>
  41bf43:	add    r14,0x2
  41bf47:	jmp    41beb0 <flatcc_json_parser_space_ext@@Base+0x500>
  41bf4c:	nop    DWORD PTR [rax+0x0]
  41bf50:	mov    rax,rbx
  41bf53:	jmp    41bd13 <flatcc_json_parser_space_ext@@Base+0x363>
  41bf58:	nop    DWORD PTR [rax+rax*1+0x0]
  41bf60:	cmp    BYTE PTR [r14+0x2],0x20
  41bf65:	jle    41bedd <flatcc_json_parser_space_ext@@Base+0x52d>
  41bf6b:	lea    r13,[r14+0x2]
  41bf6f:	jmp    41beee <flatcc_json_parser_space_ext@@Base+0x53e>
  41bf74:	nop    DWORD PTR [rax+0x0]
  41bf78:	lea    r14,[r13+0x1]
  41bf7c:	mov    rax,rbx
  41bf7f:	sub    rax,r14
  41bf82:	cmp    rax,0x1
  41bf86:	jle    41bf9e <flatcc_json_parser_space_ext@@Base+0x5ee>
  41bf88:	cmp    BYTE PTR [r13+0x1],0x20
  41bf8d:	lea    rax,[r12+0x1]
  41bf92:	jg     41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41bf98:	je     41c037 <flatcc_json_parser_space_ext@@Base+0x687>
  41bf9e:	mov    rsi,r14
  41bfa1:	mov    rdx,rbx
  41bfa4:	mov    rdi,rbp
  41bfa7:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41bfac:	mov    r14,rax
  41bfaf:	lea    rax,[r12+0x1]
  41bfb4:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41bfb9:	mov    rsi,QWORD PTR [rsp]
  41bfbd:	mov    rdi,QWORD PTR [rbp+0x0]
  41bfc1:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41bfc6:	mov    rdi,QWORD PTR [rbp+0x0]
  41bfca:	mov    rsi,rax
  41bfcd:	call   4177f0 <flatcc_builder_end_offset_vector_for_unions@@Base>
  41bfd2:	test   eax,eax
  41bfd4:	mov    DWORD PTR [rsp+0x24],eax
  41bfd8:	je     41bd00 <flatcc_json_parser_space_ext@@Base+0x350>
  41bfde:	movzx  esi,WORD PTR [rsp+0x1c]
  41bfe3:	mov    rdi,QWORD PTR [rbp+0x0]
  41bfe7:	call   418350 <flatcc_builder_table_add_offset@@Base>
  41bfec:	test   rax,rax
  41bfef:	je     41bd00 <flatcc_json_parser_space_ext@@Base+0x350>
  41bff5:	mov    edx,DWORD PTR [rsp+0x24]
  41bff9:	mov    DWORD PTR [rax],edx
  41bffb:	mov    rax,r14
  41bffe:	jmp    41bd13 <flatcc_json_parser_space_ext@@Base+0x363>
  41c003:	cmp    BYTE PTR [r14+0x2],0x20
  41c008:	jle    41bd5d <flatcc_json_parser_space_ext@@Base+0x3ad>
  41c00e:	lea    r13,[r14+0x2]
  41c012:	jmp    41bd6e <flatcc_json_parser_space_ext@@Base+0x3be>
  41c017:	mov    ecx,0x9
  41c01c:	mov    rdx,rbx
  41c01f:	mov    rsi,rbx
  41c022:	mov    rdi,rbp
  41c025:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c02a:	mov    r14,rax
  41c02d:	lea    rax,[r12+0x1]
  41c032:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41c037:	cmp    BYTE PTR [r13+0x2],0x20
  41c03c:	jle    41bf9e <flatcc_json_parser_space_ext@@Base+0x5ee>
  41c042:	lea    r14,[r13+0x2]
  41c046:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41c04b:	lea    r14,[r13+0x1]
  41c04f:	mov    rax,rbx
  41c052:	sub    rax,r14
  41c055:	cmp    rax,0x1
  41c059:	jle    41c072 <flatcc_json_parser_space_ext@@Base+0x6c2>
  41c05b:	mov    eax,r12d
  41c05e:	mov    QWORD PTR [rsp+0x8],rax
  41c063:	xor    eax,eax
  41c065:	cmp    BYTE PTR [r13+0x1],0x20
  41c06a:	jg     41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41c070:	je     41c092 <flatcc_json_parser_space_ext@@Base+0x6e2>
  41c072:	mov    rsi,r14
  41c075:	mov    rdx,rbx
  41c078:	mov    rdi,rbp
  41c07b:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c080:	mov    r14,rax
  41c083:	mov    eax,r12d
  41c086:	mov    QWORD PTR [rsp+0x8],rax
  41c08b:	xor    eax,eax
  41c08d:	jmp    41bce0 <flatcc_json_parser_space_ext@@Base+0x330>
  41c092:	cmp    BYTE PTR [r13+0x2],0x20
  41c097:	jle    41c072 <flatcc_json_parser_space_ext@@Base+0x6c2>
  41c099:	jmp    41c042 <flatcc_json_parser_space_ext@@Base+0x692>
  41c09b:	call   405070 <__stack_chk_fail@plt>

000000000041c0a0 <flatcc_json_parser_string_escape@@Base>:
  41c0a0:	mov    r8,rdx
  41c0a3:	sub    r8,rsi
  41c0a6:	cmp    r8,0x1
  41c0aa:	jle    41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c0ac:	cmp    BYTE PTR [rsi],0x5c
  41c0af:	je     41c0c0 <flatcc_json_parser_string_escape@@Base+0x20>
  41c0b1:	mov    BYTE PTR [rcx],0x0
  41c0b4:	mov    ecx,0x12
  41c0b9:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c0be:	xchg   ax,ax
  41c0c0:	movzx  eax,BYTE PTR [rsi+0x1]
  41c0c4:	sub    eax,0x22
  41c0c7:	cmp    al,0x56
  41c0c9:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c0cb:	lea    r9,[rip+0x13a2e]        # 42fb00 <flatcc_builder_padding_base@@Base+0xce0>
  41c0d2:	movzx  eax,al
  41c0d5:	movsxd rax,DWORD PTR [r9+rax*4]
  41c0d9:	add    rax,r9
  41c0dc:	jmp    rax
  41c0de:	xchg   ax,ax
  41c0e0:	cmp    r8,0x3
  41c0e4:	mov    BYTE PTR [rcx],0x1
  41c0e7:	jle    41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c0e9:	movzx  eax,BYTE PTR [rsi+0x2]
  41c0ed:	lea    r8d,[rax-0x30]
  41c0f1:	cmp    r8b,0x9
  41c0f5:	ja     41c230 <flatcc_json_parser_string_escape@@Base+0x190>
  41c0fb:	shl    eax,0x4
  41c0fe:	movzx  r8d,BYTE PTR [rsi+0x3]
  41c103:	lea    r9d,[r8-0x30]
  41c107:	cmp    r9b,0x9
  41c10b:	ja     41c298 <flatcc_json_parser_string_escape@@Base+0x1f8>
  41c111:	or     eax,r9d
  41c114:	mov    BYTE PTR [rcx+0x1],al
  41c117:	lea    rax,[rsi+0x4]
  41c11b:	ret    
  41c11c:	nop    DWORD PTR [rax+0x0]
  41c120:	mov    BYTE PTR [rcx],0x1
  41c123:	mov    BYTE PTR [rcx+0x1],0x22
  41c127:	lea    rax,[rsi+0x2]
  41c12b:	ret    
  41c12c:	nop    DWORD PTR [rax+0x0]
  41c130:	mov    BYTE PTR [rcx],0x1
  41c133:	mov    BYTE PTR [rcx+0x1],0x2f
  41c137:	lea    rax,[rsi+0x2]
  41c13b:	ret    
  41c13c:	nop    DWORD PTR [rax+0x0]
  41c140:	mov    BYTE PTR [rcx],0x1
  41c143:	mov    BYTE PTR [rcx+0x1],0x5c
  41c147:	lea    rax,[rsi+0x2]
  41c14b:	ret    
  41c14c:	nop    DWORD PTR [rax+0x0]
  41c150:	mov    BYTE PTR [rcx],0x1
  41c153:	mov    BYTE PTR [rcx+0x1],0x8
  41c157:	lea    rax,[rsi+0x2]
  41c15b:	ret    
  41c15c:	nop    DWORD PTR [rax+0x0]
  41c160:	mov    BYTE PTR [rcx],0x1
  41c163:	mov    BYTE PTR [rcx+0x1],0xc
  41c167:	lea    rax,[rsi+0x2]
  41c16b:	ret    
  41c16c:	nop    DWORD PTR [rax+0x0]
  41c170:	mov    BYTE PTR [rcx],0x1
  41c173:	mov    BYTE PTR [rcx+0x1],0xa
  41c177:	lea    rax,[rsi+0x2]
  41c17b:	ret    
  41c17c:	nop    DWORD PTR [rax+0x0]
  41c180:	mov    BYTE PTR [rcx],0x1
  41c183:	mov    BYTE PTR [rcx+0x1],0xd
  41c187:	lea    rax,[rsi+0x2]
  41c18b:	ret    
  41c18c:	nop    DWORD PTR [rax+0x0]
  41c190:	mov    BYTE PTR [rcx],0x1
  41c193:	mov    BYTE PTR [rcx+0x1],0x9
  41c197:	lea    rax,[rsi+0x2]
  41c19b:	ret    
  41c19c:	nop    DWORD PTR [rax+0x0]
  41c1a0:	cmp    r8,0x5
  41c1a4:	jle    41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c1aa:	movzx  eax,BYTE PTR [rsi+0x2]
  41c1ae:	lea    r8d,[rax-0x30]
  41c1b2:	cmp    r8b,0x9
  41c1b6:	ja     41c250 <flatcc_json_parser_string_escape@@Base+0x1b0>
  41c1bc:	shl    eax,0xc
  41c1bf:	movzx  r8d,BYTE PTR [rsi+0x3]
  41c1c4:	lea    r9d,[r8-0x30]
  41c1c8:	cmp    r9b,0x9
  41c1cc:	ja     41c270 <flatcc_json_parser_string_escape@@Base+0x1d0>
  41c1d2:	shl    r8d,0x8
  41c1d6:	sub    r8w,0x3000
  41c1dc:	or     eax,r8d
  41c1df:	movsx  r8w,BYTE PTR [rsi+0x4]
  41c1e5:	lea    r9d,[r8-0x30]
  41c1e9:	cmp    r9b,0x9
  41c1ed:	ja     41c2b6 <flatcc_json_parser_string_escape@@Base+0x216>
  41c1f3:	sub    r8d,0x30
  41c1f7:	shl    r8d,0x4
  41c1fb:	or     eax,r8d
  41c1fe:	movzx  r8d,BYTE PTR [rsi+0x5]
  41c203:	lea    r9d,[r8-0x30]
  41c207:	cmp    r9b,0x9
  41c20b:	ja     41c2dd <flatcc_json_parser_string_escape@@Base+0x23d>
  41c211:	movsx  dx,r8b
  41c216:	sub    edx,0x30
  41c219:	or     eax,edx
  41c21b:	cmp    ax,0x7f
  41c21f:	ja     41c2ff <flatcc_json_parser_string_escape@@Base+0x25f>
  41c225:	mov    BYTE PTR [rcx],0x1
  41c228:	mov    BYTE PTR [rcx+0x1],al
  41c22b:	lea    rax,[rsi+0x6]
  41c22f:	ret    
  41c230:	or     eax,0x20
  41c233:	lea    r8d,[rax-0x61]
  41c237:	cmp    r8b,0x5
  41c23b:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c241:	shl    eax,0x4
  41c244:	sub    eax,0x70
  41c247:	jmp    41c0fe <flatcc_json_parser_string_escape@@Base+0x5e>
  41c24c:	nop    DWORD PTR [rax+0x0]
  41c250:	or     eax,0x20
  41c253:	lea    r8d,[rax-0x61]
  41c257:	cmp    r8b,0x5
  41c25b:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c261:	shl    eax,0xc
  41c264:	sub    ax,0x7000
  41c268:	jmp    41c1bf <flatcc_json_parser_string_escape@@Base+0x11f>
  41c26d:	nop    DWORD PTR [rax]
  41c270:	or     r8d,0x20
  41c274:	lea    r9d,[r8-0x61]
  41c278:	cmp    r9b,0x5
  41c27c:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c282:	shl    r8d,0x8
  41c286:	sub    r8w,0x5700
  41c28c:	or     eax,r8d
  41c28f:	jmp    41c1df <flatcc_json_parser_string_escape@@Base+0x13f>
  41c294:	nop    DWORD PTR [rax+0x0]
  41c298:	or     r8d,0x20
  41c29c:	lea    r9d,[r8-0x61]
  41c2a0:	cmp    r9b,0x5
  41c2a4:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c2aa:	sub    r8d,0x57
  41c2ae:	or     eax,r8d
  41c2b1:	jmp    41c114 <flatcc_json_parser_string_escape@@Base+0x74>
  41c2b6:	or     r8d,0x20
  41c2ba:	lea    r9d,[r8-0x61]
  41c2be:	cmp    r9b,0x5
  41c2c2:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c2c8:	movsx  r8w,r8b
  41c2cd:	sub    r8d,0x57
  41c2d1:	shl    r8d,0x4
  41c2d5:	or     eax,r8d
  41c2d8:	jmp    41c1fe <flatcc_json_parser_string_escape@@Base+0x15e>
  41c2dd:	or     r8d,0x20
  41c2e1:	lea    r9d,[r8-0x61]
  41c2e5:	cmp    r9b,0x5
  41c2e9:	ja     41c0b1 <flatcc_json_parser_string_escape@@Base+0x11>
  41c2ef:	movsx  r8w,r8b
  41c2f4:	lea    edx,[r8-0x57]
  41c2f8:	or     eax,edx
  41c2fa:	jmp    41c21b <flatcc_json_parser_string_escape@@Base+0x17b>
  41c2ff:	cmp    ax,0x7ff
  41c303:	ja     41c322 <flatcc_json_parser_string_escape@@Base+0x282>
  41c305:	mov    edx,eax
  41c307:	and    eax,0x3f
  41c30a:	mov    BYTE PTR [rcx],0x2
  41c30d:	shr    dx,0x6
  41c311:	or     eax,0xffffff80
  41c314:	or     edx,0xffffffc0
  41c317:	mov    BYTE PTR [rcx+0x2],al
  41c31a:	mov    BYTE PTR [rcx+0x1],dl
  41c31d:	jmp    41c22b <flatcc_json_parser_string_escape@@Base+0x18b>
  41c322:	mov    edx,eax
  41c324:	mov    BYTE PTR [rcx],0x3
  41c327:	shr    dx,0xc
  41c32b:	or     edx,0xffffffe0
  41c32e:	mov    BYTE PTR [rcx+0x1],dl
  41c331:	mov    edx,eax
  41c333:	and    eax,0x3f
  41c336:	shr    dx,0x6
  41c33a:	or     eax,0xffffff80
  41c33d:	and    edx,0x3f
  41c340:	mov    BYTE PTR [rcx+0x3],al
  41c343:	or     edx,0xffffff80
  41c346:	mov    BYTE PTR [rcx+0x2],dl
  41c349:	jmp    41c22b <flatcc_json_parser_string_escape@@Base+0x18b>
  41c34e:	xchg   ax,ax

000000000041c350 <flatcc_json_parser_skip_constant@@Base>:
  41c350:	push   r13
  41c352:	push   r12
  41c354:	push   rbp
  41c355:	push   rbx
  41c356:	mov    rbp,rdx
  41c359:	sub    rsp,0x8
  41c35d:	cmp    rsi,rdx
  41c360:	je     41c3e0 <flatcc_json_parser_skip_constant@@Base+0x90>
  41c362:	mov    r13,rdi
  41c365:	mov    rbx,rsi
  41c368:	movabs r12,0x2000000000ffd
  41c372:	jmp    41c391 <flatcc_json_parser_skip_constant@@Base+0x41>
  41c374:	nop    DWORD PTR [rax+0x0]
  41c378:	mov    edx,eax
  41c37a:	or     edx,0x20
  41c37d:	sub    edx,0x61
  41c380:	cmp    dl,0x19
  41c383:	ja     41c3b3 <flatcc_json_parser_skip_constant@@Base+0x63>
  41c385:	nop    DWORD PTR [rax]
  41c388:	add    rbx,0x1
  41c38c:	cmp    rbp,rbx
  41c38f:	je     41c3e0 <flatcc_json_parser_skip_constant@@Base+0x90>
  41c391:	movzx  eax,BYTE PTR [rbx]
  41c394:	test   al,al
  41c396:	js     41c388 <flatcc_json_parser_skip_constant@@Base+0x38>
  41c398:	lea    edx,[rax-0x2e]
  41c39b:	cmp    dl,0x31
  41c39e:	ja     41c378 <flatcc_json_parser_skip_constant@@Base+0x28>
  41c3a0:	bt     r12,rdx
  41c3a4:	jb     41c388 <flatcc_json_parser_skip_constant@@Base+0x38>
  41c3a6:	mov    edx,eax
  41c3a8:	or     edx,0x20
  41c3ab:	sub    edx,0x61
  41c3ae:	cmp    dl,0x19
  41c3b1:	jbe    41c388 <flatcc_json_parser_skip_constant@@Base+0x38>
  41c3b3:	mov    rdx,rbp
  41c3b6:	sub    rdx,rbx
  41c3b9:	cmp    rdx,0x1
  41c3bd:	jle    41c3c5 <flatcc_json_parser_skip_constant@@Base+0x75>
  41c3bf:	cmp    al,0x20
  41c3c1:	jg     41c3f0 <flatcc_json_parser_skip_constant@@Base+0xa0>
  41c3c3:	je     41c401 <flatcc_json_parser_skip_constant@@Base+0xb1>
  41c3c5:	mov    rdx,rbp
  41c3c8:	mov    rsi,rbx
  41c3cb:	mov    rdi,r13
  41c3ce:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c3d3:	cmp    rbx,rax
  41c3d6:	je     41c3f0 <flatcc_json_parser_skip_constant@@Base+0xa0>
  41c3d8:	mov    rbx,rax
  41c3db:	cmp    rbp,rbx
  41c3de:	jne    41c391 <flatcc_json_parser_skip_constant@@Base+0x41>
  41c3e0:	add    rsp,0x8
  41c3e4:	mov    rax,rbp
  41c3e7:	pop    rbx
  41c3e8:	pop    rbp
  41c3e9:	pop    r12
  41c3eb:	pop    r13
  41c3ed:	ret    
  41c3ee:	xchg   ax,ax
  41c3f0:	add    rsp,0x8
  41c3f4:	mov    rbp,rbx
  41c3f7:	mov    rax,rbp
  41c3fa:	pop    rbx
  41c3fb:	pop    rbp
  41c3fc:	pop    r12
  41c3fe:	pop    r13
  41c400:	ret    
  41c401:	cmp    BYTE PTR [rbx+0x1],0x20
  41c405:	lea    rax,[rbx+0x1]
  41c409:	jle    41c3c5 <flatcc_json_parser_skip_constant@@Base+0x75>
  41c40b:	jmp    41c3d3 <flatcc_json_parser_skip_constant@@Base+0x83>
  41c40d:	nop    DWORD PTR [rax]

000000000041c410 <flatcc_json_parser_match_constant@@Base>:
  41c410:	mov    rax,rdx
  41c413:	movsxd rcx,ecx
  41c416:	sub    rax,rsi
  41c419:	cmp    rax,rcx
  41c41c:	jle    41c450 <flatcc_json_parser_match_constant@@Base+0x40>
  41c41e:	lea    r9,[rsi+rcx*1]
  41c422:	movzx  eax,BYTE PTR [r9]
  41c426:	cmp    al,0x20
  41c428:	je     41c460 <flatcc_json_parser_match_constant@@Base+0x50>
  41c42a:	cmp    al,0x22
  41c42c:	je     41c4a0 <flatcc_json_parser_match_constant@@Base+0x90>
  41c42e:	cmp    al,0x5c
  41c430:	mov    DWORD PTR [r8],0x0
  41c437:	jne    41c498 <flatcc_json_parser_match_constant@@Base+0x88>
  41c439:	mov    ecx,0x12
  41c43e:	mov    rsi,r9
  41c441:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c450:	mov    DWORD PTR [r8],0x0
  41c457:	mov    rax,rsi
  41c45a:	ret    
  41c45b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c460:	lea    rax,[r9+0x1]
  41c464:	cmp    rdx,rax
  41c467:	je     41c489 <flatcc_json_parser_match_constant@@Base+0x79>
  41c469:	movzx  ecx,BYTE PTR [r9+0x1]
  41c46e:	cmp    cl,0x20
  41c471:	je     41c480 <flatcc_json_parser_match_constant@@Base+0x70>
  41c473:	jmp    41c4d0 <flatcc_json_parser_match_constant@@Base+0xc0>
  41c475:	nop    DWORD PTR [rax]
  41c478:	movzx  ecx,BYTE PTR [rax]
  41c47b:	cmp    cl,0x20
  41c47e:	jne    41c4d0 <flatcc_json_parser_match_constant@@Base+0xc0>
  41c480:	add    rax,0x1
  41c484:	cmp    rdx,rax
  41c487:	jne    41c478 <flatcc_json_parser_match_constant@@Base+0x68>
  41c489:	mov    DWORD PTR [r8],0x0
  41c490:	mov    rax,rdx
  41c493:	ret    
  41c494:	nop    DWORD PTR [rax+0x0]
  41c498:	mov    rax,rsi
  41c49b:	ret    
  41c49c:	nop    DWORD PTR [rax+0x0]
  41c4a0:	lea    rax,[r9+0x1]
  41c4a4:	push   rbx
  41c4a5:	mov    rbx,r8
  41c4a8:	cmp    rax,0xffffffffffffffff
  41c4ac:	jge    41c4b7 <flatcc_json_parser_match_constant@@Base+0xa7>
  41c4ae:	cmp    BYTE PTR [r9+0x1],0x20
  41c4b3:	jg     41c4c1 <flatcc_json_parser_match_constant@@Base+0xb1>
  41c4b5:	je     41c4e0 <flatcc_json_parser_match_constant@@Base+0xd0>
  41c4b7:	xor    edx,edx
  41c4b9:	mov    rsi,rax
  41c4bc:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c4c1:	mov    DWORD PTR [rbx],0x0
  41c4c7:	pop    rbx
  41c4c8:	ret    
  41c4c9:	nop    DWORD PTR [rax+0x0]
  41c4d0:	cmp    cl,0x22
  41c4d3:	mov    r9,rax
  41c4d6:	je     41c4a0 <flatcc_json_parser_match_constant@@Base+0x90>
  41c4d8:	mov    DWORD PTR [r8],0x1
  41c4df:	ret    
  41c4e0:	cmp    BYTE PTR [r9+0x2],0x20
  41c4e5:	jle    41c4b7 <flatcc_json_parser_match_constant@@Base+0xa7>
  41c4e7:	lea    rax,[r9+0x2]
  41c4eb:	jmp    41c4c1 <flatcc_json_parser_match_constant@@Base+0xb1>
  41c4ed:	nop    DWORD PTR [rax]

000000000041c4f0 <flatcc_json_parser_double@@Base>:
  41c4f0:	cmp    rsi,rdx
  41c4f3:	mov    QWORD PTR [rcx],0x0
  41c4fa:	je     41c5c8 <flatcc_json_parser_double@@Base+0xd8>
  41c500:	xor    eax,eax
  41c502:	cmp    BYTE PTR [rsi],0x2d
  41c505:	mov    r8,rdx
  41c508:	sete   al
  41c50b:	add    rax,rsi
  41c50e:	sub    r8,rax
  41c511:	cmp    r8,0x1
  41c515:	jle    41c52f <flatcc_json_parser_double@@Base+0x3f>
  41c517:	movzx  r8d,BYTE PTR [rax]
  41c51b:	cmp    r8b,0x2e
  41c51f:	je     41c5ba <flatcc_json_parser_double@@Base+0xca>
  41c525:	cmp    r8b,0x30
  41c529:	je     41c5b0 <flatcc_json_parser_double@@Base+0xc0>
  41c52f:	push   r13
  41c531:	push   r12
  41c533:	mov    r13,rdi
  41c536:	push   rbp
  41c537:	push   rbx
  41c538:	mov    rbx,rsi
  41c53b:	mov    rsi,rdx
  41c53e:	mov    rbp,rdx
  41c541:	mov    rdi,rbx
  41c544:	sub    rsp,0x8
  41c548:	sub    rsi,rbx
  41c54b:	mov    rdx,rcx
  41c54e:	mov    r12,rcx
  41c551:	call   41aeb0 <grisu3_diy_fp_encode_double@@Base+0x380>
  41c556:	test   rax,rax
  41c559:	je     41c570 <flatcc_json_parser_double@@Base+0x80>
  41c55b:	cmp    rbx,rax
  41c55e:	je     41c570 <flatcc_json_parser_double@@Base+0x80>
  41c560:	add    rsp,0x8
  41c564:	pop    rbx
  41c565:	pop    rbp
  41c566:	pop    r12
  41c568:	pop    r13
  41c56a:	ret    
  41c56b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c570:	vmovsd xmm0,QWORD PTR [r12]
  41c576:	mov    ecx,0x6
  41c57b:	vandpd xmm0,xmm0,XMMWORD PTR [rip+0x1440d]        # 430990 <flatcc_builder_padding_base@@Base+0x1b70>
  41c583:	vucomisd xmm0,QWORD PTR [rip+0x143fd]        # 430988 <flatcc_builder_padding_base@@Base+0x1b68>
  41c58b:	jbe    41c592 <flatcc_json_parser_double@@Base+0xa2>
  41c58d:	mov    ecx,0x7
  41c592:	add    rsp,0x8
  41c596:	mov    rdx,rbp
  41c599:	mov    rsi,rbx
  41c59c:	mov    rdi,r13
  41c59f:	pop    rbx
  41c5a0:	pop    rbp
  41c5a1:	pop    r12
  41c5a3:	pop    r13
  41c5a5:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c5aa:	nop    WORD PTR [rax+rax*1+0x0]
  41c5b0:	cmp    BYTE PTR [rax+0x1],0x30
  41c5b4:	jne    41c52f <flatcc_json_parser_double@@Base+0x3f>
  41c5ba:	mov    ecx,0x6
  41c5bf:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c5c4:	nop    DWORD PTR [rax+0x0]
  41c5c8:	mov    rax,rsi
  41c5cb:	ret    
  41c5cc:	nop    DWORD PTR [rax+0x0]

000000000041c5d0 <flatcc_json_parser_float@@Base>:
  41c5d0:	push   r13
  41c5d2:	push   r12
  41c5d4:	push   rbp
  41c5d5:	push   rbx
  41c5d6:	mov    rbx,rsi
  41c5d9:	sub    rsp,0x18
  41c5dd:	mov    DWORD PTR [rcx],0x0
  41c5e3:	mov    rax,QWORD PTR fs:0x28
  41c5ec:	mov    QWORD PTR [rsp+0x8],rax
  41c5f1:	xor    eax,eax
  41c5f3:	cmp    rsi,rdx
  41c5f6:	je     41c6f8 <flatcc_json_parser_float@@Base+0x128>
  41c5fc:	xor    eax,eax
  41c5fe:	cmp    BYTE PTR [rsi],0x2d
  41c601:	mov    rbp,rdx
  41c604:	mov    r13,rdi
  41c607:	mov    r12,rcx
  41c60a:	sete   al
  41c60d:	add    rax,rsi
  41c610:	sub    rdx,rax
  41c613:	cmp    rdx,0x1
  41c617:	jle    41c62e <flatcc_json_parser_float@@Base+0x5e>
  41c619:	movzx  edx,BYTE PTR [rax]
  41c61c:	cmp    dl,0x2e
  41c61f:	je     41c6c0 <flatcc_json_parser_float@@Base+0xf0>
  41c625:	cmp    dl,0x30
  41c628:	je     41c6d8 <flatcc_json_parser_float@@Base+0x108>
  41c62e:	mov    rsi,rbp
  41c631:	mov    rdx,rsp
  41c634:	mov    rdi,rbx
  41c637:	sub    rsi,rbx
  41c63a:	call   41aeb0 <grisu3_diy_fp_encode_double@@Base+0x380>
  41c63f:	vxorps xmm0,xmm0,xmm0
  41c643:	vmovsd xmm1,QWORD PTR [rsp]
  41c648:	vcvtsd2ss xmm0,xmm0,xmm1
  41c64c:	vmovss DWORD PTR [r12],xmm0
  41c652:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x14346]        # 4309a0 <flatcc_builder_padding_base@@Base+0x1b80>
  41c65a:	vucomiss xmm0,DWORD PTR [rip+0x14356]        # 4309b8 <flatcc_builder_padding_base@@Base+0x1b98>
  41c662:	jbe    41c6b0 <flatcc_json_parser_float@@Base+0xe0>
  41c664:	vxorpd xmm0,xmm0,xmm0
  41c668:	vucomisd xmm0,xmm1
  41c66c:	ja     41c6e8 <flatcc_json_parser_float@@Base+0x118>
  41c66e:	vmovss xmm0,DWORD PTR [rip+0x1433e]        # 4309b4 <flatcc_builder_padding_base@@Base+0x1b94>
  41c676:	vmovss DWORD PTR [r12],xmm0
  41c67c:	mov    ecx,0x7
  41c681:	mov    rdx,rbp
  41c684:	mov    rsi,rbx
  41c687:	mov    rdi,r13
  41c68a:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c68f:	mov    rcx,QWORD PTR [rsp+0x8]
  41c694:	xor    rcx,QWORD PTR fs:0x28
  41c69d:	jne    41c6fd <flatcc_json_parser_float@@Base+0x12d>
  41c69f:	add    rsp,0x18
  41c6a3:	pop    rbx
  41c6a4:	pop    rbp
  41c6a5:	pop    r12
  41c6a7:	pop    r13
  41c6a9:	ret    
  41c6aa:	nop    WORD PTR [rax+rax*1+0x0]
  41c6b0:	test   rax,rax
  41c6b3:	je     41c6c0 <flatcc_json_parser_float@@Base+0xf0>
  41c6b5:	cmp    rbx,rax
  41c6b8:	jne    41c68f <flatcc_json_parser_float@@Base+0xbf>
  41c6ba:	nop    WORD PTR [rax+rax*1+0x0]
  41c6c0:	mov    ecx,0x6
  41c6c5:	mov    rdx,rbp
  41c6c8:	mov    rsi,rbx
  41c6cb:	mov    rdi,r13
  41c6ce:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c6d3:	jmp    41c68f <flatcc_json_parser_float@@Base+0xbf>
  41c6d5:	nop    DWORD PTR [rax]
  41c6d8:	cmp    BYTE PTR [rax+0x1],0x30
  41c6dc:	jne    41c62e <flatcc_json_parser_float@@Base+0x5e>
  41c6e2:	jmp    41c6c0 <flatcc_json_parser_float@@Base+0xf0>
  41c6e4:	nop    DWORD PTR [rax+0x0]
  41c6e8:	vmovss xmm0,DWORD PTR [rip+0x142c0]        # 4309b0 <flatcc_builder_padding_base@@Base+0x1b90>
  41c6f0:	jmp    41c676 <flatcc_json_parser_float@@Base+0xa6>
  41c6f2:	nop    WORD PTR [rax+rax*1+0x0]
  41c6f8:	mov    rax,rsi
  41c6fb:	jmp    41c68f <flatcc_json_parser_float@@Base+0xbf>
  41c6fd:	call   405070 <__stack_chk_fail@plt>
  41c702:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c70d:	nop    DWORD PTR [rax]

000000000041c710 <flatcc_json_parser_integer@@Base>:
  41c710:	cmp    rsi,rdx
  41c713:	je     41c7c0 <flatcc_json_parser_integer@@Base+0xb0>
  41c719:	cmp    BYTE PTR [rsi],0x2d
  41c71c:	sete   al
  41c71f:	movzx  r9d,al
  41c723:	movzx  eax,al
  41c726:	add    rax,rsi
  41c729:	mov    DWORD PTR [rcx],r9d
  41c72c:	cmp    rdx,rax
  41c72f:	je     41c7c6 <flatcc_json_parser_integer@@Base+0xb6>
  41c735:	movsx  r9,BYTE PTR [rax]
  41c739:	lea    ecx,[r9-0x30]
  41c73d:	cmp    cl,0x9
  41c740:	ja     41c77f <flatcc_json_parser_integer@@Base+0x6f>
  41c742:	sub    r9,0x30
  41c746:	jmp    41c76f <flatcc_json_parser_integer@@Base+0x5f>
  41c748:	nop    DWORD PTR [rax+rax*1+0x0]
  41c750:	movsx  rcx,BYTE PTR [rax]
  41c754:	lea    r10d,[rcx-0x30]
  41c758:	cmp    r10b,0x9
  41c75c:	ja     41c788 <flatcc_json_parser_integer@@Base+0x78>
  41c75e:	lea    r10,[r9+r9*4]
  41c762:	lea    rcx,[rcx+r10*2-0x30]
  41c767:	cmp    rcx,r9
  41c76a:	jb     41c7b0 <flatcc_json_parser_integer@@Base+0xa0>
  41c76c:	mov    r9,rcx
  41c76f:	add    rax,0x1
  41c773:	cmp    rdx,rax
  41c776:	jne    41c750 <flatcc_json_parser_integer@@Base+0x40>
  41c778:	mov    rax,rdx
  41c77b:	mov    QWORD PTR [r8],r9
  41c77e:	ret    
  41c77f:	xor    r9d,r9d
  41c782:	nop    WORD PTR [rax+rax*1+0x0]
  41c788:	cmp    rsi,rax
  41c78b:	je     41c7c4 <flatcc_json_parser_integer@@Base+0xb4>
  41c78d:	movzx  ecx,BYTE PTR [rax]
  41c790:	mov    esi,ecx
  41c792:	and    esi,0xffffffdf
  41c795:	cmp    sil,0x45
  41c799:	je     41c7a0 <flatcc_json_parser_integer@@Base+0x90>
  41c79b:	cmp    cl,0x2e
  41c79e:	jne    41c77b <flatcc_json_parser_integer@@Base+0x6b>
  41c7a0:	mov    ecx,0xc
  41c7a5:	mov    rsi,rax
  41c7a8:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c7ad:	nop    DWORD PTR [rax]
  41c7b0:	mov    ecx,0x8
  41c7b5:	mov    rsi,rax
  41c7b8:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41c7bd:	nop    DWORD PTR [rax]
  41c7c0:	mov    rax,rsi
  41c7c3:	ret    
  41c7c4:	repz ret 
  41c7c6:	xor    r9d,r9d
  41c7c9:	jmp    41c778 <flatcc_json_parser_integer@@Base+0x68>
  41c7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c7d0 <flatcc_json_parser_generic_json@@Base>:
  41c7d0:	push   r15
  41c7d2:	push   r14
  41c7d4:	mov    r11,rsi
  41c7d7:	push   r13
  41c7d9:	push   r12
  41c7db:	push   rbp
  41c7dc:	push   rbx
  41c7dd:	sub    rsp,0x258
  41c7e4:	mov    rax,QWORD PTR fs:0x28
  41c7ed:	mov    QWORD PTR [rsp+0x248],rax
  41c7f5:	xor    eax,eax
  41c7f7:	cmp    rsi,rdx
  41c7fa:	je     41d224 <flatcc_json_parser_generic_json@@Base+0xa54>
  41c800:	lea    rax,[rsp+0x30]
  41c805:	mov    r14,rdx
  41c808:	movzx  edx,BYTE PTR [rsi]
  41c80b:	lea    r12,[rsp+0x40]
  41c810:	lea    r13,[rsp+0x3c]
  41c815:	mov    rbx,rdi
  41c818:	mov    QWORD PTR [rsp+0x8],rax
  41c81d:	lea    rax,[rsp+0x2c]
  41c822:	mov    r15,r12
  41c825:	mov    QWORD PTR [rsp+0x10],rax
  41c82a:	cmp    r15,r12
  41c82d:	je     41cb88 <flatcc_json_parser_generic_json@@Base+0x3b8>
  41c833:	cmp    BYTE PTR [r15-0x1],0x7d
  41c838:	je     41cb08 <flatcc_json_parser_generic_json@@Base+0x338>
  41c83e:	lea    eax,[rdx-0x22]
  41c841:	cmp    al,0x59
  41c843:	ja     41c9b0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41c849:	lea    rcx,[rip+0x1340c]        # 42fc5c <flatcc_builder_padding_base@@Base+0xe3c>
  41c850:	movzx  eax,al
  41c853:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c857:	add    rax,rcx
  41c85a:	jmp    rax
  41c85c:	nop    DWORD PTR [rax+0x0]
  41c860:	lea    rax,[r12+0x200]
  41c868:	cmp    r15,rax
  41c86b:	je     41d104 <flatcc_json_parser_generic_json@@Base+0x934>
  41c871:	lea    rsi,[r11+0x1]
  41c875:	mov    rax,r14
  41c878:	lea    rbp,[r15+0x1]
  41c87c:	mov    BYTE PTR [r15],0x7d
  41c880:	sub    rax,rsi
  41c883:	cmp    rax,0x1
  41c887:	jle    41c89a <flatcc_json_parser_generic_json@@Base+0xca>
  41c889:	cmp    BYTE PTR [r11+0x1],0x20
  41c88e:	jg     41d0b0 <flatcc_json_parser_generic_json@@Base+0x8e0>
  41c894:	je     41d1ac <flatcc_json_parser_generic_json@@Base+0x9dc>
  41c89a:	mov    rdx,r14
  41c89d:	mov    rdi,rbx
  41c8a0:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c8a5:	mov    r11,rax
  41c8a8:	cmp    r14,r11
  41c8ab:	je     41d0c0 <flatcc_json_parser_generic_json@@Base+0x8f0>
  41c8b1:	movzx  edx,BYTE PTR [r11]
  41c8b5:	cmp    dl,0x7d
  41c8b8:	jne    41cc0e <flatcc_json_parser_generic_json@@Base+0x43e>
  41c8be:	mov    r15,rbp
  41c8c1:	mov    rax,r11
  41c8c4:	jmp    41c92c <flatcc_json_parser_generic_json@@Base+0x15c>
  41c8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8d0:	cmp    rdx,0x1
  41c8d4:	jle    41c8e1 <flatcc_json_parser_generic_json@@Base+0x111>
  41c8d6:	cmp    BYTE PTR [rax],0x20
  41c8d9:	jg     41c8ef <flatcc_json_parser_generic_json@@Base+0x11f>
  41c8db:	je     41cee0 <flatcc_json_parser_generic_json@@Base+0x710>
  41c8e1:	mov    rdx,r14
  41c8e4:	mov    rsi,rax
  41c8e7:	mov    rdi,rbx
  41c8ea:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c8ef:	cmp    r14,rax
  41c8f2:	je     41cf00 <flatcc_json_parser_generic_json@@Base+0x730>
  41c8f8:	movzx  edx,BYTE PTR [rax]
  41c8fb:	cmp    dl,0x2c
  41c8fe:	je     41cf30 <flatcc_json_parser_generic_json@@Base+0x760>
  41c904:	cmp    dl,0x7d
  41c907:	je     41ceb0 <flatcc_json_parser_generic_json@@Base+0x6e0>
  41c90d:	mov    ecx,0xa
  41c912:	mov    rdx,r14
  41c915:	mov    rsi,rax
  41c918:	mov    rdi,rbx
  41c91b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c920:	cmp    r14,rax
  41c923:	je     41cf00 <flatcc_json_parser_generic_json@@Base+0x730>
  41c929:	mov    r15,rbp
  41c92c:	cmp    r15,r12
  41c92f:	je     41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41c935:	mov    rdx,r14
  41c938:	lea    rbp,[r15-0x1]
  41c93c:	sub    rdx,rax
  41c93f:	cmp    BYTE PTR [r15-0x1],0x5d
  41c944:	jne    41c8d0 <flatcc_json_parser_generic_json@@Base+0x100>
  41c946:	cmp    rdx,0x1
  41c94a:	jle    41c957 <flatcc_json_parser_generic_json@@Base+0x187>
  41c94c:	cmp    BYTE PTR [rax],0x20
  41c94f:	jg     41c965 <flatcc_json_parser_generic_json@@Base+0x195>
  41c951:	je     41cfc0 <flatcc_json_parser_generic_json@@Base+0x7f0>
  41c957:	mov    rdx,r14
  41c95a:	mov    rsi,rax
  41c95d:	mov    rdi,rbx
  41c960:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41c965:	cmp    r14,rax
  41c968:	je     41cf00 <flatcc_json_parser_generic_json@@Base+0x730>
  41c96e:	movzx  edx,BYTE PTR [rax]
  41c971:	cmp    dl,0x2c
  41c974:	je     41cfd8 <flatcc_json_parser_generic_json@@Base+0x808>
  41c97a:	cmp    dl,0x5d
  41c97d:	je     41ceb0 <flatcc_json_parser_generic_json@@Base+0x6e0>
  41c983:	mov    ecx,0x9
  41c988:	mov    rdx,r14
  41c98b:	mov    rsi,rax
  41c98e:	mov    rdi,rbx
  41c991:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c996:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41c998:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9a0:	mov    rax,r14
  41c9a3:	sub    rax,r11
  41c9a6:	cmp    rax,0x3
  41c9aa:	jg     41cd70 <flatcc_json_parser_generic_json@@Base+0x5a0>
  41c9b0:	mov    ecx,0x5
  41c9b5:	mov    rdx,r14
  41c9b8:	mov    rsi,r11
  41c9bb:	mov    rdi,rbx
  41c9be:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41c9c3:	mov    rcx,QWORD PTR [rsp+0x248]
  41c9cb:	xor    rcx,QWORD PTR fs:0x28
  41c9d4:	jne    41d2ad <flatcc_json_parser_generic_json@@Base+0xadd>
  41c9da:	add    rsp,0x258
  41c9e1:	pop    rbx
  41c9e2:	pop    rbp
  41c9e3:	pop    r12
  41c9e5:	pop    r13
  41c9e7:	pop    r14
  41c9e9:	pop    r15
  41c9eb:	ret    
  41c9ec:	nop    DWORD PTR [rax+0x0]
  41c9f0:	mov    rbp,r14
  41c9f3:	sub    rbp,r11
  41c9f6:	cmp    rbp,0x3
  41c9fa:	jg     41cd10 <flatcc_json_parser_generic_json@@Base+0x540>
  41ca00:	cmp    r14,r11
  41ca03:	mov    QWORD PTR [rsp+0x30],0x0
  41ca0c:	mov    DWORD PTR [rsp+0x2c],0x0
  41ca14:	mov    rax,r14
  41ca17:	je     41ca64 <flatcc_json_parser_generic_json@@Base+0x294>
  41ca19:	mov    r8,QWORD PTR [rsp+0x8]
  41ca1e:	mov    rcx,QWORD PTR [rsp+0x10]
  41ca23:	mov    rsi,r11
  41ca26:	mov    rdx,r14
  41ca29:	mov    rdi,rbx
  41ca2c:	mov    QWORD PTR [rsp+0x18],r11
  41ca31:	call   41c710 <flatcc_json_parser_integer@@Base>
  41ca36:	mov    r11,QWORD PTR [rsp+0x18]
  41ca3b:	cmp    rax,r11
  41ca3e:	je     41d20e <flatcc_json_parser_generic_json@@Base+0xa3e>
  41ca44:	mov    edx,DWORD PTR [rsp+0x2c]
  41ca48:	mov    ecx,0x8
  41ca4d:	test   edx,edx
  41ca4f:	jne    41d1de <flatcc_json_parser_generic_json@@Base+0xa0e>
  41ca55:	cmp    QWORD PTR [rsp+0x30],0xff
  41ca5e:	ja     41d1d4 <flatcc_json_parser_generic_json@@Base+0xa04>
  41ca64:	cmp    rax,r11
  41ca67:	je     41d295 <flatcc_json_parser_generic_json@@Base+0xac5>
  41ca6d:	cmp    r14,rax
  41ca70:	jne    41c92c <flatcc_json_parser_generic_json@@Base+0x15c>
  41ca76:	mov    rbp,r15
  41ca79:	mov    rax,r14
  41ca7c:	jmp    41cf03 <flatcc_json_parser_generic_json@@Base+0x733>
  41ca81:	nop    DWORD PTR [rax+0x0]
  41ca88:	cmp    r14,r11
  41ca8b:	je     41ca76 <flatcc_json_parser_generic_json@@Base+0x2a6>
  41ca8d:	cmp    dl,0x2d
  41ca90:	je     41cd9f <flatcc_json_parser_generic_json@@Base+0x5cf>
  41ca96:	movzx  eax,BYTE PTR [r11]
  41ca9a:	cmp    al,0x30
  41ca9c:	je     41cdc8 <flatcc_json_parser_generic_json@@Base+0x5f8>
  41caa2:	sub    eax,0x31
  41caa5:	cmp    al,0x8
  41caa7:	ja     41d1f6 <flatcc_json_parser_generic_json@@Base+0xa26>
  41caad:	lea    rax,[r11+0x1]
  41cab1:	cmp    r14,rax
  41cab4:	je     41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41cab6:	movzx  edx,BYTE PTR [r11+0x1]
  41cabb:	lea    ecx,[rdx-0x30]
  41cabe:	cmp    cl,0x9
  41cac1:	jbe    41cadf <flatcc_json_parser_generic_json@@Base+0x30f>
  41cac3:	jmp    41cdda <flatcc_json_parser_generic_json@@Base+0x60a>
  41cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cad0:	movzx  edx,BYTE PTR [rax]
  41cad3:	lea    ecx,[rdx-0x30]
  41cad6:	cmp    cl,0x9
  41cad9:	ja     41cdda <flatcc_json_parser_generic_json@@Base+0x60a>
  41cadf:	add    rax,0x1
  41cae3:	cmp    r14,rax
  41cae6:	jne    41cad0 <flatcc_json_parser_generic_json@@Base+0x300>
  41cae8:	mov    rax,r14
  41caeb:	mov    ecx,0x6
  41caf0:	mov    rdx,r14
  41caf3:	mov    rsi,rax
  41caf6:	mov    rdi,rbx
  41caf9:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cafe:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41cb03:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb08:	cmp    dl,0x22
  41cb0b:	lea    rsi,[r11+0x1]
  41cb0f:	je     41cb27 <flatcc_json_parser_generic_json@@Base+0x357>
  41cb11:	mov    rsi,r11
  41cb14:	mov    ecx,0x5
  41cb19:	mov    rdx,r14
  41cb1c:	mov    rdi,rbx
  41cb1f:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cb24:	mov    rsi,rax
  41cb27:	cmp    r14,rsi
  41cb2a:	je     41cb7b <flatcc_json_parser_generic_json@@Base+0x3ab>
  41cb2c:	movzx  edx,BYTE PTR [rsi]
  41cb2f:	cmp    dl,0x22
  41cb32:	jne    41cb56 <flatcc_json_parser_generic_json@@Base+0x386>
  41cb34:	jmp    41d068 <flatcc_json_parser_generic_json@@Base+0x898>
  41cb39:	nop    DWORD PTR [rax+0x0]
  41cb40:	lea    rsi,[rax+0x1]
  41cb44:	cmp    r14,rsi
  41cb47:	je     41cb7b <flatcc_json_parser_generic_json@@Base+0x3ab>
  41cb49:	movzx  edx,BYTE PTR [rax+0x1]
  41cb4d:	cmp    dl,0x22
  41cb50:	je     41d068 <flatcc_json_parser_generic_json@@Base+0x898>
  41cb56:	cmp    dl,0x5c
  41cb59:	mov    rax,rsi
  41cb5c:	jne    41cb40 <flatcc_json_parser_generic_json@@Base+0x370>
  41cb5e:	mov    rdx,r14
  41cb61:	sub    rdx,rsi
  41cb64:	cmp    rdx,0x1
  41cb68:	jle    41cc16 <flatcc_json_parser_generic_json@@Base+0x446>
  41cb6e:	add    rax,0x1
  41cb72:	lea    rsi,[rax+0x1]
  41cb76:	cmp    r14,rsi
  41cb79:	jne    41cb49 <flatcc_json_parser_generic_json@@Base+0x379>
  41cb7b:	mov    rsi,r14
  41cb7e:	jmp    41cc1f <flatcc_json_parser_generic_json@@Base+0x44f>
  41cb83:	nop    DWORD PTR [rax+rax*1+0x0]
  41cb88:	lea    eax,[rdx-0x22]
  41cb8b:	cmp    al,0x59
  41cb8d:	ja     41c9b0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41cb93:	lea    rcx,[rip+0x1322a]        # 42fdc4 <flatcc_builder_padding_base@@Base+0xfa4>
  41cb9a:	movzx  eax,al
  41cb9d:	movsxd rax,DWORD PTR [rcx+rax*4]
  41cba1:	add    rax,rcx
  41cba4:	jmp    rax
  41cba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cbb0:	lea    rax,[r12+0x200]
  41cbb8:	cmp    r15,rax
  41cbbb:	je     41d104 <flatcc_json_parser_generic_json@@Base+0x934>
  41cbc1:	lea    rsi,[r11+0x1]
  41cbc5:	mov    rax,r14
  41cbc8:	lea    rbp,[r15+0x1]
  41cbcc:	mov    BYTE PTR [r15],0x5d
  41cbd0:	sub    rax,rsi
  41cbd3:	cmp    rax,0x1
  41cbd7:	jle    41cbea <flatcc_json_parser_generic_json@@Base+0x41a>
  41cbd9:	cmp    BYTE PTR [r11+0x1],0x20
  41cbde:	jg     41d0b8 <flatcc_json_parser_generic_json@@Base+0x8e8>
  41cbe4:	je     41d1c0 <flatcc_json_parser_generic_json@@Base+0x9f0>
  41cbea:	mov    rdx,r14
  41cbed:	mov    rdi,rbx
  41cbf0:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cbf5:	mov    r11,rax
  41cbf8:	cmp    r14,r11
  41cbfb:	je     41d0c0 <flatcc_json_parser_generic_json@@Base+0x8f0>
  41cc01:	movzx  edx,BYTE PTR [r11]
  41cc05:	cmp    dl,0x5d
  41cc08:	je     41c8be <flatcc_json_parser_generic_json@@Base+0xee>
  41cc0e:	mov    r15,rbp
  41cc11:	jmp    41c82a <flatcc_json_parser_generic_json@@Base+0x5a>
  41cc16:	cmp    BYTE PTR [rsi],0x22
  41cc19:	je     41d068 <flatcc_json_parser_generic_json@@Base+0x898>
  41cc1f:	mov    ecx,0x14
  41cc24:	mov    rdx,r14
  41cc27:	mov    rdi,rbx
  41cc2a:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cc2f:	mov    rdx,r14
  41cc32:	sub    rdx,rax
  41cc35:	cmp    rdx,0x1
  41cc39:	jle    41cc46 <flatcc_json_parser_generic_json@@Base+0x476>
  41cc3b:	cmp    BYTE PTR [rax],0x20
  41cc3e:	jg     41cc54 <flatcc_json_parser_generic_json@@Base+0x484>
  41cc40:	je     41ce65 <flatcc_json_parser_generic_json@@Base+0x695>
  41cc46:	mov    rdx,r14
  41cc49:	mov    rsi,rax
  41cc4c:	mov    rdi,rbx
  41cc4f:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cc54:	cmp    r14,rax
  41cc57:	je     41d265 <flatcc_json_parser_generic_json@@Base+0xa95>
  41cc5d:	cmp    BYTE PTR [rax],0x3a
  41cc60:	jne    41d27d <flatcc_json_parser_generic_json@@Base+0xaad>
  41cc66:	lea    r11,[rax+0x1]
  41cc6a:	mov    rdx,r14
  41cc6d:	sub    rdx,r11
  41cc70:	cmp    rdx,0x1
  41cc74:	jle    41cc85 <flatcc_json_parser_generic_json@@Base+0x4b5>
  41cc76:	movzx  edx,BYTE PTR [rax+0x1]
  41cc7a:	cmp    dl,0x20
  41cc7d:	jg     41cc99 <flatcc_json_parser_generic_json@@Base+0x4c9>
  41cc7f:	je     41ce78 <flatcc_json_parser_generic_json@@Base+0x6a8>
  41cc85:	mov    rdx,r14
  41cc88:	mov    rsi,r11
  41cc8b:	mov    rdi,rbx
  41cc8e:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cc93:	movzx  edx,BYTE PTR [rax]
  41cc96:	mov    r11,rax
  41cc99:	lea    eax,[rdx-0x22]
  41cc9c:	cmp    al,0x59
  41cc9e:	ja     41c9b0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41cca4:	lea    rcx,[rip+0x13281]        # 42ff2c <flatcc_builder_padding_base@@Base+0x110c>
  41ccab:	movzx  eax,al
  41ccae:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ccb2:	add    rax,rcx
  41ccb5:	jmp    rax
  41ccb7:	cmp    r11,r14
  41ccba:	je     41ce8e <flatcc_json_parser_generic_json@@Base+0x6be>
  41ccc0:	lea    rax,[r11+0x1]
  41ccc4:	cmp    r14,rax
  41ccc7:	jne    41cd02 <flatcc_json_parser_generic_json@@Base+0x532>
  41ccc9:	jmp    41d036 <flatcc_json_parser_generic_json@@Base+0x866>
  41ccce:	xchg   ax,ax
  41ccd0:	mov    rdx,r14
  41ccd3:	mov    rsi,rax
  41ccd6:	mov    rdi,rbx
  41ccd9:	call   41b940 <flatcc_json_parser_string_part@@Base>
  41ccde:	cmp    r14,rax
  41cce1:	je     41cce8 <flatcc_json_parser_generic_json@@Base+0x518>
  41cce3:	cmp    BYTE PTR [rax],0x22
  41cce6:	je     41cd07 <flatcc_json_parser_generic_json@@Base+0x537>
  41cce8:	mov    rcx,r13
  41cceb:	mov    rdx,r14
  41ccee:	mov    rsi,rax
  41ccf1:	mov    rdi,rbx
  41ccf4:	call   41c0a0 <flatcc_json_parser_string_escape@@Base>
  41ccf9:	cmp    r14,rax
  41ccfc:	je     41d033 <flatcc_json_parser_generic_json@@Base+0x863>
  41cd02:	cmp    BYTE PTR [rax],0x22
  41cd05:	jne    41ccd0 <flatcc_json_parser_generic_json@@Base+0x500>
  41cd07:	add    rax,0x1
  41cd0b:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41cd10:	lea    rsi,[rip+0xe8b0]        # 42b5c7 <_IO_stdin_used@@Base+0x5c7>
  41cd17:	mov    rdi,r11
  41cd1a:	mov    edx,0x4
  41cd1f:	mov    QWORD PTR [rsp+0x18],r11
  41cd24:	call   4050b0 <memcmp@plt>
  41cd29:	test   eax,eax
  41cd2b:	mov    r11,QWORD PTR [rsp+0x18]
  41cd30:	je     41d11c <flatcc_json_parser_generic_json@@Base+0x94c>
  41cd36:	cmp    rbp,0x4
  41cd3a:	je     41ca00 <flatcc_json_parser_generic_json@@Base+0x230>
  41cd40:	lea    rsi,[rip+0xe885]        # 42b5cc <_IO_stdin_used@@Base+0x5cc>
  41cd47:	mov    rdi,r11
  41cd4a:	mov    edx,0x5
  41cd4f:	mov    QWORD PTR [rsp+0x18],r11
  41cd54:	call   4050b0 <memcmp@plt>
  41cd59:	test   eax,eax
  41cd5b:	mov    r11,QWORD PTR [rsp+0x18]
  41cd60:	jne    41ca00 <flatcc_json_parser_generic_json@@Base+0x230>
  41cd66:	lea    rax,[r11+0x5]
  41cd6a:	jmp    41ca64 <flatcc_json_parser_generic_json@@Base+0x294>
  41cd6f:	nop
  41cd70:	lea    rsi,[rip+0xe84b]        # 42b5c2 <_IO_stdin_used@@Base+0x5c2>
  41cd77:	mov    rdi,r11
  41cd7a:	mov    edx,0x4
  41cd7f:	mov    QWORD PTR [rsp+0x18],r11
  41cd84:	call   4050b0 <memcmp@plt>
  41cd89:	test   eax,eax
  41cd8b:	mov    r11,QWORD PTR [rsp+0x18]
  41cd90:	jne    41c9b0 <flatcc_json_parser_generic_json@@Base+0x1e0>
  41cd96:	lea    rax,[r11+0x4]
  41cd9a:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41cd9f:	add    r11,0x1
  41cda3:	cmp    r14,r11
  41cda6:	jne    41ca96 <flatcc_json_parser_generic_json@@Base+0x2c6>
  41cdac:	mov    ecx,0x6
  41cdb1:	mov    rdx,r14
  41cdb4:	mov    rsi,r14
  41cdb7:	mov    rdi,rbx
  41cdba:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cdbf:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41cdc4:	nop    DWORD PTR [rax+0x0]
  41cdc8:	lea    rax,[r11+0x1]
  41cdcc:	cmp    r14,rax
  41cdcf:	je     41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41cdd5:	movzx  edx,BYTE PTR [r11+0x1]
  41cdda:	cmp    dl,0x2e
  41cddd:	je     41d15d <flatcc_json_parser_generic_json@@Base+0x98d>
  41cde3:	mov    ecx,edx
  41cde5:	and    ecx,0xffffffdf
  41cde8:	cmp    cl,0x45
  41cdeb:	jne    41d071 <flatcc_json_parser_generic_json@@Base+0x8a1>
  41cdf1:	lea    rsi,[rax+0x1]
  41cdf5:	cmp    r14,rsi
  41cdf8:	je     41cdac <flatcc_json_parser_generic_json@@Base+0x5dc>
  41cdfa:	movzx  edx,BYTE PTR [rax+0x1]
  41cdfe:	lea    ecx,[rdx-0x2b]
  41ce01:	and    ecx,0xfd
  41ce07:	jne    41ce1a <flatcc_json_parser_generic_json@@Base+0x64a>
  41ce09:	lea    rsi,[rax+0x2]
  41ce0d:	cmp    r14,rsi
  41ce10:	je     41d0db <flatcc_json_parser_generic_json@@Base+0x90b>
  41ce16:	movzx  edx,BYTE PTR [rax+0x2]
  41ce1a:	sub    edx,0x30
  41ce1d:	cmp    dl,0x9
  41ce20:	ja     41d0db <flatcc_json_parser_generic_json@@Base+0x90b>
  41ce26:	lea    rax,[rsi+0x1]
  41ce2a:	cmp    r14,rax
  41ce2d:	je     41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41ce33:	movzx  edx,BYTE PTR [rsi+0x1]
  41ce37:	lea    ecx,[rdx-0x30]
  41ce3a:	cmp    cl,0x9
  41ce3d:	jbe    41ce57 <flatcc_json_parser_generic_json@@Base+0x687>
  41ce3f:	jmp    41d071 <flatcc_json_parser_generic_json@@Base+0x8a1>
  41ce44:	nop    DWORD PTR [rax+0x0]
  41ce48:	movzx  edx,BYTE PTR [rax]
  41ce4b:	lea    ecx,[rdx-0x30]
  41ce4e:	cmp    cl,0x9
  41ce51:	ja     41d071 <flatcc_json_parser_generic_json@@Base+0x8a1>
  41ce57:	add    rax,0x1
  41ce5b:	cmp    r14,rax
  41ce5e:	jne    41ce48 <flatcc_json_parser_generic_json@@Base+0x678>
  41ce60:	jmp    41cae8 <flatcc_json_parser_generic_json@@Base+0x318>
  41ce65:	cmp    BYTE PTR [rax+0x1],0x20
  41ce69:	jle    41cc46 <flatcc_json_parser_generic_json@@Base+0x476>
  41ce6f:	add    rax,0x1
  41ce73:	jmp    41cc54 <flatcc_json_parser_generic_json@@Base+0x484>
  41ce78:	movzx  edx,BYTE PTR [rax+0x2]
  41ce7c:	cmp    dl,0x20
  41ce7f:	jle    41cc85 <flatcc_json_parser_generic_json@@Base+0x4b5>
  41ce85:	lea    r11,[rax+0x2]
  41ce89:	jmp    41cc99 <flatcc_json_parser_generic_json@@Base+0x4c9>
  41ce8e:	mov    ecx,0x10
  41ce93:	mov    rdx,r14
  41ce96:	mov    rsi,r14
  41ce99:	mov    rdi,rbx
  41ce9c:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cea1:	jmp    41ccc4 <flatcc_json_parser_generic_json@@Base+0x4f4>
  41cea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ceb0:	lea    rsi,[rax+0x1]
  41ceb4:	mov    rdx,r14
  41ceb7:	sub    rdx,rsi
  41ceba:	cmp    rdx,0x1
  41cebe:	jle    41ced0 <flatcc_json_parser_generic_json@@Base+0x700>
  41cec0:	cmp    BYTE PTR [rax+0x1],0x20
  41cec4:	jg     41cfb0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  41ceca:	je     41d020 <flatcc_json_parser_generic_json@@Base+0x850>
  41ced0:	mov    rdx,r14
  41ced3:	mov    rdi,rbx
  41ced6:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cedb:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41cee0:	cmp    BYTE PTR [rax+0x1],0x20
  41cee4:	jle    41c8e1 <flatcc_json_parser_generic_json@@Base+0x111>
  41ceea:	add    rax,0x1
  41ceee:	cmp    r14,rax
  41cef1:	jne    41c8f8 <flatcc_json_parser_generic_json@@Base+0x128>
  41cef7:	nop    WORD PTR [rax+rax*1+0x0]
  41cf00:	mov    rax,r14
  41cf03:	cmp    rbp,r12
  41cf06:	je     41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41cf0c:	xor    ecx,ecx
  41cf0e:	cmp    BYTE PTR [rbp-0x1],0x5d
  41cf12:	mov    rdx,r14
  41cf15:	mov    rsi,r14
  41cf18:	mov    rdi,rbx
  41cf1b:	setne  cl
  41cf1e:	add    ecx,0x9
  41cf21:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41cf26:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41cf2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf30:	lea    r11,[rax+0x1]
  41cf34:	mov    rdx,r14
  41cf37:	sub    rdx,r11
  41cf3a:	cmp    rdx,0x1
  41cf3e:	jle    41cf4c <flatcc_json_parser_generic_json@@Base+0x77c>
  41cf40:	cmp    BYTE PTR [rax+0x1],0x20
  41cf44:	jg     41cf5d <flatcc_json_parser_generic_json@@Base+0x78d>
  41cf46:	je     41d050 <flatcc_json_parser_generic_json@@Base+0x880>
  41cf4c:	mov    rsi,r11
  41cf4f:	mov    rdx,r14
  41cf52:	mov    rdi,rbx
  41cf55:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cf5a:	mov    r11,rax
  41cf5d:	cmp    r14,r11
  41cf60:	je     41d125 <flatcc_json_parser_generic_json@@Base+0x955>
  41cf66:	movzx  edx,BYTE PTR [r11]
  41cf6a:	cmp    dl,0x7d
  41cf6d:	jne    41c82a <flatcc_json_parser_generic_json@@Base+0x5a>
  41cf73:	lea    rax,[r11+0x1]
  41cf77:	mov    rdx,r14
  41cf7a:	sub    rdx,rax
  41cf7d:	cmp    rdx,0x1
  41cf81:	jle    41cf94 <flatcc_json_parser_generic_json@@Base+0x7c4>
  41cf83:	cmp    BYTE PTR [r11+0x1],0x20
  41cf88:	jg     41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41cf8e:	je     41d0f0 <flatcc_json_parser_generic_json@@Base+0x920>
  41cf94:	mov    rdx,r14
  41cf97:	mov    rsi,rax
  41cf9a:	mov    rdi,rbx
  41cf9d:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41cfa2:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41cfa7:	nop    WORD PTR [rax+rax*1+0x0]
  41cfb0:	mov    rax,rsi
  41cfb3:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41cfb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfc0:	cmp    BYTE PTR [rax+0x1],0x20
  41cfc4:	jle    41c957 <flatcc_json_parser_generic_json@@Base+0x187>
  41cfca:	add    rax,0x1
  41cfce:	jmp    41c965 <flatcc_json_parser_generic_json@@Base+0x195>
  41cfd3:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfd8:	lea    r11,[rax+0x1]
  41cfdc:	mov    rdx,r14
  41cfdf:	sub    rdx,r11
  41cfe2:	cmp    rdx,0x1
  41cfe6:	jle    41cff4 <flatcc_json_parser_generic_json@@Base+0x824>
  41cfe8:	cmp    BYTE PTR [rax+0x1],0x20
  41cfec:	jg     41d005 <flatcc_json_parser_generic_json@@Base+0x835>
  41cfee:	je     41d0c8 <flatcc_json_parser_generic_json@@Base+0x8f8>
  41cff4:	mov    rsi,r11
  41cff7:	mov    rdx,r14
  41cffa:	mov    rdi,rbx
  41cffd:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41d002:	mov    r11,rax
  41d005:	cmp    r14,r11
  41d008:	je     41d22c <flatcc_json_parser_generic_json@@Base+0xa5c>
  41d00e:	movzx  edx,BYTE PTR [r11]
  41d012:	cmp    dl,0x5d
  41d015:	jne    41c82a <flatcc_json_parser_generic_json@@Base+0x5a>
  41d01b:	jmp    41cf73 <flatcc_json_parser_generic_json@@Base+0x7a3>
  41d020:	cmp    BYTE PTR [rax+0x2],0x20
  41d024:	jle    41ced0 <flatcc_json_parser_generic_json@@Base+0x700>
  41d02a:	add    rax,0x2
  41d02e:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41d033:	mov    rax,r14
  41d036:	mov    ecx,0x14
  41d03b:	mov    rdx,r14
  41d03e:	mov    rsi,rax
  41d041:	mov    rdi,rbx
  41d044:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d049:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d04e:	xchg   ax,ax
  41d050:	cmp    BYTE PTR [rax+0x2],0x20
  41d054:	jle    41cf4c <flatcc_json_parser_generic_json@@Base+0x77c>
  41d05a:	lea    r11,[rax+0x2]
  41d05e:	jmp    41cf5d <flatcc_json_parser_generic_json@@Base+0x78d>
  41d063:	nop    DWORD PTR [rax+rax*1+0x0]
  41d068:	lea    rax,[rsi+0x1]
  41d06c:	jmp    41cc2f <flatcc_json_parser_generic_json@@Base+0x45f>
  41d071:	cmp    dl,0x20
  41d074:	je     41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d07a:	jle    41d13d <flatcc_json_parser_generic_json@@Base+0x96d>
  41d080:	cmp    dl,0x3a
  41d083:	je     41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d089:	jle    41d216 <flatcc_json_parser_generic_json@@Base+0xa46>
  41d08f:	cmp    dl,0x5d
  41d092:	je     41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d098:	cmp    dl,0x7d
  41d09b:	jne    41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41d0a1:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0b0:	mov    r11,rsi
  41d0b3:	jmp    41c8a8 <flatcc_json_parser_generic_json@@Base+0xd8>
  41d0b8:	mov    r11,rsi
  41d0bb:	jmp    41cbf8 <flatcc_json_parser_generic_json@@Base+0x428>
  41d0c0:	mov    rax,r14
  41d0c3:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d0c8:	cmp    BYTE PTR [rax+0x2],0x20
  41d0cc:	jle    41cff4 <flatcc_json_parser_generic_json@@Base+0x824>
  41d0d2:	lea    r11,[rax+0x2]
  41d0d6:	jmp    41d005 <flatcc_json_parser_generic_json@@Base+0x835>
  41d0db:	mov    ecx,0x6
  41d0e0:	mov    rdx,r14
  41d0e3:	mov    rdi,rbx
  41d0e6:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d0eb:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d0f0:	cmp    BYTE PTR [r11+0x2],0x20
  41d0f5:	jle    41cf94 <flatcc_json_parser_generic_json@@Base+0x7c4>
  41d0fb:	lea    rax,[r11+0x2]
  41d0ff:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41d104:	mov    ecx,0x2
  41d109:	mov    rdx,r14
  41d10c:	mov    rsi,r11
  41d10f:	mov    rdi,rbx
  41d112:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d117:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d11c:	lea    rax,[r11+0x4]
  41d120:	jmp    41ca64 <flatcc_json_parser_generic_json@@Base+0x294>
  41d125:	mov    ecx,0xa
  41d12a:	mov    rdx,r14
  41d12d:	mov    rsi,r14
  41d130:	mov    rdi,rbx
  41d133:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d138:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41d13d:	cmp    dl,0x9
  41d140:	jl     41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41d146:	cmp    dl,0xb
  41d149:	jle    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d14f:	cmp    dl,0xd
  41d152:	jne    41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41d158:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d15d:	movzx  ecx,BYTE PTR [rax+0x1]
  41d161:	lea    edx,[rcx-0x30]
  41d164:	cmp    dl,0x9
  41d167:	ja     41d24c <flatcc_json_parser_generic_json@@Base+0xa7c>
  41d16d:	lea    rcx,[rax+0x2]
  41d171:	cmp    r14,rcx
  41d174:	je     41cae8 <flatcc_json_parser_generic_json@@Base+0x318>
  41d17a:	movzx  edx,BYTE PTR [rax+0x2]
  41d17e:	lea    eax,[rdx-0x30]
  41d181:	cmp    al,0x9
  41d183:	jbe    41d19e <flatcc_json_parser_generic_json@@Base+0x9ce>
  41d185:	jmp    41d244 <flatcc_json_parser_generic_json@@Base+0xa74>
  41d18a:	nop    WORD PTR [rax+rax*1+0x0]
  41d190:	movzx  edx,BYTE PTR [rcx]
  41d193:	lea    eax,[rdx-0x30]
  41d196:	cmp    al,0x9
  41d198:	ja     41d244 <flatcc_json_parser_generic_json@@Base+0xa74>
  41d19e:	add    rcx,0x1
  41d1a2:	cmp    r14,rcx
  41d1a5:	jne    41d190 <flatcc_json_parser_generic_json@@Base+0x9c0>
  41d1a7:	jmp    41cae8 <flatcc_json_parser_generic_json@@Base+0x318>
  41d1ac:	cmp    BYTE PTR [r11+0x2],0x20
  41d1b1:	jle    41c89a <flatcc_json_parser_generic_json@@Base+0xca>
  41d1b7:	add    r11,0x2
  41d1bb:	jmp    41c8a8 <flatcc_json_parser_generic_json@@Base+0xd8>
  41d1c0:	cmp    BYTE PTR [r11+0x2],0x20
  41d1c5:	jle    41cbea <flatcc_json_parser_generic_json@@Base+0x41a>
  41d1cb:	add    r11,0x2
  41d1cf:	jmp    41cbf8 <flatcc_json_parser_generic_json@@Base+0x428>
  41d1d4:	mov    QWORD PTR [rsp+0x18],r11
  41d1d9:	mov    ecx,0x7
  41d1de:	mov    rdx,r14
  41d1e1:	mov    rsi,rax
  41d1e4:	mov    rdi,rbx
  41d1e7:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d1ec:	mov    r11,QWORD PTR [rsp+0x18]
  41d1f1:	jmp    41ca64 <flatcc_json_parser_generic_json@@Base+0x294>
  41d1f6:	mov    ecx,0x6
  41d1fb:	mov    rdx,r14
  41d1fe:	mov    rsi,r11
  41d201:	mov    rdi,rbx
  41d204:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d209:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d20e:	mov    rax,r11
  41d211:	jmp    41ca64 <flatcc_json_parser_generic_json@@Base+0x294>
  41d216:	cmp    dl,0x2c
  41d219:	jne    41caeb <flatcc_json_parser_generic_json@@Base+0x31b>
  41d21f:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d224:	mov    rax,rsi
  41d227:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d22c:	mov    ecx,0x9
  41d231:	mov    rdx,r14
  41d234:	mov    rsi,r14
  41d237:	mov    rdi,rbx
  41d23a:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d23f:	jmp    41c920 <flatcc_json_parser_generic_json@@Base+0x150>
  41d244:	mov    rax,rcx
  41d247:	jmp    41cde3 <flatcc_json_parser_generic_json@@Base+0x613>
  41d24c:	lea    rsi,[rax+0x1]
  41d250:	mov    ecx,0x6
  41d255:	mov    rdx,r14
  41d258:	mov    rdi,rbx
  41d25b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d260:	jmp    41ca6d <flatcc_json_parser_generic_json@@Base+0x29d>
  41d265:	mov    ecx,0xa
  41d26a:	mov    rdx,r14
  41d26d:	mov    rsi,r14
  41d270:	mov    rdi,rbx
  41d273:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d278:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d27d:	mov    ecx,0x4
  41d282:	mov    rdx,r14
  41d285:	mov    rsi,rax
  41d288:	mov    rdi,rbx
  41d28b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d290:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d295:	mov    ecx,0x5
  41d29a:	mov    rdx,r14
  41d29d:	mov    rsi,rax
  41d2a0:	mov    rdi,rbx
  41d2a3:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d2a8:	jmp    41c9c3 <flatcc_json_parser_generic_json@@Base+0x1f3>
  41d2ad:	call   405070 <__stack_chk_fail@plt>
  41d2b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d2bd:	nop    DWORD PTR [rax]

000000000041d2c0 <flatcc_json_parser_unmatched_symbol@@Base>:
  41d2c0:	push   r12
  41d2c2:	push   rbp
  41d2c3:	mov    r12,rdi
  41d2c6:	push   rbx
  41d2c7:	test   BYTE PTR [rdi+0x10],0x1
  41d2cb:	mov    rbx,rdx
  41d2ce:	je     41d330 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
  41d2d0:	cmp    rsi,rdx
  41d2d3:	je     41d3eb <flatcc_json_parser_unmatched_symbol@@Base+0x12b>
  41d2d9:	movzx  edx,BYTE PTR [rsi]
  41d2dc:	mov    rbp,rbx
  41d2df:	cmp    dl,0x22
  41d2e2:	jne    41d306 <flatcc_json_parser_unmatched_symbol@@Base+0x46>
  41d2e4:	jmp    41d3b0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  41d2e9:	nop    DWORD PTR [rax+0x0]
  41d2f0:	lea    rsi,[rax+0x1]
  41d2f4:	cmp    rbx,rsi
  41d2f7:	je     41d327 <flatcc_json_parser_unmatched_symbol@@Base+0x67>
  41d2f9:	movzx  edx,BYTE PTR [rax+0x1]
  41d2fd:	cmp    dl,0x22
  41d300:	je     41d3b0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  41d306:	cmp    dl,0x5c
  41d309:	mov    rax,rsi
  41d30c:	jne    41d2f0 <flatcc_json_parser_unmatched_symbol@@Base+0x30>
  41d30e:	mov    rdx,rbx
  41d311:	sub    rdx,rsi
  41d314:	cmp    rdx,0x1
  41d318:	jle    41d344 <flatcc_json_parser_unmatched_symbol@@Base+0x84>
  41d31a:	add    rax,0x1
  41d31e:	lea    rsi,[rax+0x1]
  41d322:	cmp    rbx,rsi
  41d325:	jne    41d2f9 <flatcc_json_parser_unmatched_symbol@@Base+0x39>
  41d327:	mov    rsi,rbx
  41d32a:	jmp    41d349 <flatcc_json_parser_unmatched_symbol@@Base+0x89>
  41d32c:	nop    DWORD PTR [rax+0x0]
  41d330:	mov    rdx,rbx
  41d333:	mov    rdi,r12
  41d336:	mov    ecx,0xd
  41d33b:	pop    rbx
  41d33c:	pop    rbp
  41d33d:	pop    r12
  41d33f:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41d344:	cmp    BYTE PTR [rsi],0x22
  41d347:	je     41d3b0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  41d349:	mov    ecx,0x14
  41d34e:	mov    rdx,rbx
  41d351:	mov    rdi,r12
  41d354:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d359:	mov    rsi,rax
  41d35c:	mov    rax,rbp
  41d35f:	sub    rax,rsi
  41d362:	cmp    rax,0x1
  41d366:	jle    41d36f <flatcc_json_parser_unmatched_symbol@@Base+0xaf>
  41d368:	cmp    BYTE PTR [rsi],0x20
  41d36b:	jg     41d37d <flatcc_json_parser_unmatched_symbol@@Base+0xbd>
  41d36d:	je     41d3a0 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
  41d36f:	mov    rdx,rbx
  41d372:	mov    rdi,r12
  41d375:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41d37a:	mov    rsi,rax
  41d37d:	cmp    rbx,rsi
  41d380:	je     41d387 <flatcc_json_parser_unmatched_symbol@@Base+0xc7>
  41d382:	cmp    BYTE PTR [rsi],0x3a
  41d385:	je     41d3b6 <flatcc_json_parser_unmatched_symbol@@Base+0xf6>
  41d387:	mov    rdx,rbx
  41d38a:	mov    rdi,r12
  41d38d:	mov    ecx,0x4
  41d392:	pop    rbx
  41d393:	pop    rbp
  41d394:	pop    r12
  41d396:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41d39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d3a0:	cmp    BYTE PTR [rsi+0x1],0x20
  41d3a4:	jle    41d36f <flatcc_json_parser_unmatched_symbol@@Base+0xaf>
  41d3a6:	add    rsi,0x1
  41d3aa:	jmp    41d37d <flatcc_json_parser_unmatched_symbol@@Base+0xbd>
  41d3ac:	nop    DWORD PTR [rax+0x0]
  41d3b0:	add    rsi,0x1
  41d3b4:	jmp    41d35c <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
  41d3b6:	lea    rax,[rsi+0x1]
  41d3ba:	sub    rbp,rax
  41d3bd:	cmp    rbp,0x1
  41d3c1:	jle    41d3cb <flatcc_json_parser_unmatched_symbol@@Base+0x10b>
  41d3c3:	cmp    BYTE PTR [rsi+0x1],0x20
  41d3c7:	jg     41d3d9 <flatcc_json_parser_unmatched_symbol@@Base+0x119>
  41d3c9:	je     41d3f3 <flatcc_json_parser_unmatched_symbol@@Base+0x133>
  41d3cb:	mov    rdx,rbx
  41d3ce:	mov    rsi,rax
  41d3d1:	mov    rdi,r12
  41d3d4:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41d3d9:	mov    rdx,rbx
  41d3dc:	mov    rdi,r12
  41d3df:	mov    rsi,rax
  41d3e2:	pop    rbx
  41d3e3:	pop    rbp
  41d3e4:	pop    r12
  41d3e6:	jmp    41c7d0 <flatcc_json_parser_generic_json@@Base>
  41d3eb:	mov    rbp,rsi
  41d3ee:	jmp    41d349 <flatcc_json_parser_unmatched_symbol@@Base+0x89>
  41d3f3:	cmp    BYTE PTR [rsi+0x2],0x20
  41d3f7:	jle    41d3cb <flatcc_json_parser_unmatched_symbol@@Base+0x10b>
  41d3f9:	lea    rax,[rsi+0x2]
  41d3fd:	jmp    41d3d9 <flatcc_json_parser_unmatched_symbol@@Base+0x119>
  41d3ff:	nop

000000000041d400 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  41d400:	push   r15
  41d402:	push   r14
  41d404:	mov    r14,rdx
  41d407:	push   r13
  41d409:	push   r12
  41d40b:	mov    r13,rcx
  41d40e:	push   rbp
  41d40f:	push   rbx
  41d410:	mov    r12d,r8d
  41d413:	mov    rbx,rdi
  41d416:	sub    rsp,0x38
  41d41a:	mov    rax,QWORD PTR fs:0x28
  41d423:	mov    QWORD PTR [rsp+0x28],rax
  41d428:	xor    eax,eax
  41d42a:	test   r8d,r8d
  41d42d:	setne  BYTE PTR [rsp+0x8]
  41d432:	cmp    rsi,rdx
  41d435:	je     41d440 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  41d437:	cmp    BYTE PTR [rsi],0x22
  41d43a:	lea    rbp,[rsi+0x1]
  41d43e:	je     41d453 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x53>
  41d440:	mov    ecx,0x10
  41d445:	mov    rdx,r14
  41d448:	mov    rdi,rbx
  41d44b:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d450:	mov    rbp,rax
  41d453:	mov    rdx,r14
  41d456:	mov    rsi,rbp
  41d459:	mov    rdi,rbx
  41d45c:	call   41b940 <flatcc_json_parser_string_part@@Base>
  41d461:	cmp    r14,rax
  41d464:	mov    r15,rax
  41d467:	je     41d46e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41d469:	cmp    BYTE PTR [rax],0x22
  41d46c:	je     41d4b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb8>
  41d46e:	xor    ecx,ecx
  41d470:	test   r12d,r12d
  41d473:	mov    DWORD PTR [r13+0x0],0x0
  41d47b:	setne  cl
  41d47e:	add    ecx,0x1f
  41d481:	mov    rax,QWORD PTR [rsp+0x28]
  41d486:	xor    rax,QWORD PTR fs:0x28
  41d48f:	jne    41d7f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41d495:	add    rsp,0x38
  41d499:	mov    rdx,r14
  41d49c:	mov    rsi,r15
  41d49f:	mov    rdi,rbx
  41d4a2:	pop    rbx
  41d4a3:	pop    rbp
  41d4a4:	pop    r12
  41d4a6:	pop    r13
  41d4a8:	pop    r14
  41d4aa:	pop    r15
  41d4ac:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41d4b1:	nop    DWORD PTR [rax+0x0]
  41d4b8:	sub    rax,rbp
  41d4bb:	mov    rdx,rax
  41d4be:	mov    QWORD PTR [rsp+0x18],rax
  41d4c3:	shr    rax,0x2
  41d4c7:	lea    rax,[rax+rax*2]
  41d4cb:	and    edx,0x3
  41d4ce:	cmp    rdx,0x2
  41d4d2:	lea    rdi,[rax+0x1]
  41d4d6:	mov    QWORD PTR [rsp+0x10],rdi
  41d4db:	je     41d4ee <flatcc_json_parser_build_uint8_vector_base64@@Base+0xee>
  41d4dd:	lea    rsi,[rax+0x2]
  41d4e1:	cmp    rdx,0x3
  41d4e5:	cmove  rax,rsi
  41d4e9:	mov    QWORD PTR [rsp+0x10],rax
  41d4ee:	mov    rdi,QWORD PTR [rbx]
  41d4f1:	mov    ecx,0xffffffff
  41d4f6:	mov    edx,0x1
  41d4fb:	mov    esi,0x1
  41d500:	call   4166c0 <flatcc_builder_start_vector@@Base>
  41d505:	test   eax,eax
  41d507:	jne    41d5c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41d50d:	mov    rsi,QWORD PTR [rsp+0x10]
  41d512:	mov    rdi,QWORD PTR [rbx]
  41d515:	call   416020 <flatcc_builder_extend_vector@@Base>
  41d51a:	test   rax,rax
  41d51d:	je     41d5c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41d523:	cmp    BYTE PTR [rsp+0x8],0x1
  41d528:	mov    rcx,QWORD PTR [rsp+0x10]
  41d52d:	lea    rdx,[rip+0x12ccc]        # 430200 <flatcc_builder_padding_base@@Base+0x13e0>
  41d534:	lea    rdi,[rip+0x12bc5]        # 430100 <flatcc_builder_padding_base@@Base+0x12e0>
  41d53b:	mov    r9,QWORD PTR [rsp+0x18]
  41d540:	mov    r11,rbp
  41d543:	mov    r8,rax
  41d546:	cmovne rdi,rdx
  41d54a:	test   rcx,rcx
  41d54d:	mov    rdx,0xffffffffffffffff
  41d554:	cmovne rdx,rcx
  41d558:	mov    QWORD PTR [rsp+0x8],rdx
  41d55d:	test   r9,r9
  41d560:	je     41d710 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x310>
  41d566:	mov    r10,r9
  41d569:	xor    edx,edx
  41d56b:	movzx  ecx,BYTE PTR [r11+rdx*1]
  41d570:	movzx  esi,BYTE PTR [rdi+rcx*1]
  41d574:	cmp    sil,0x3f
  41d578:	mov    BYTE PTR [rsp+rdx*1+0x24],sil
  41d57d:	jbe    41d5fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
  41d57f:	cmp    sil,0x41
  41d583:	je     41d5f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
  41d585:	cmp    sil,0x42
  41d589:	mov    rcx,rdx
  41d58c:	je     41d620 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
  41d592:	sub    r10,rcx
  41d595:	cmp    rdx,0x2
  41d599:	je     41d6e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
  41d59f:	cmp    rdx,0x3
  41d5a3:	je     41d670 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
  41d5a9:	test   rdx,rdx
  41d5ac:	je     41d6c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41d5b2:	mov    r15,QWORD PTR [rsp+0x18]
  41d5b7:	sub    r15,r9
  41d5ba:	add    r15,rbp
  41d5bd:	jmp    41d46e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41d5c2:	nop    WORD PTR [rax+rax*1+0x0]
  41d5c8:	mov    rax,QWORD PTR [rsp+0x28]
  41d5cd:	xor    rax,QWORD PTR fs:0x28
  41d5d6:	mov    DWORD PTR [r13+0x0],0x0
  41d5de:	jne    41d7f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41d5e4:	mov    ecx,0x21
  41d5e9:	jmp    41d495 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x95>
  41d5ee:	xchg   ax,ax
  41d5f0:	add    r11,0x1
  41d5f4:	sub    r10,0x1
  41d5f8:	sub    rdx,0x1
  41d5fc:	add    rdx,0x1
  41d600:	cmp    rdx,0x3
  41d604:	ja     41d76e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x36e>
  41d60a:	cmp    rdx,r10
  41d60d:	jne    41d56b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16b>
  41d613:	xor    r10d,r10d
  41d616:	jmp    41d595 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  41d61b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d620:	lea    rcx,[rdx+0x1]
  41d624:	cmp    rcx,0x7
  41d628:	ja     41d592 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41d62e:	cmp    r10,rcx
  41d631:	ja     41d657 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x257>
  41d633:	jmp    41d592 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41d638:	nop    DWORD PTR [rax+rax*1+0x0]
  41d640:	add    rcx,0x1
  41d644:	cmp    r10,rcx
  41d647:	jbe    41d592 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41d64d:	cmp    rcx,0x7
  41d651:	ja     41d592 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41d657:	movzx  esi,BYTE PTR [r11+rcx*1]
  41d65c:	movzx  esi,BYTE PTR [rdi+rsi*1]
  41d660:	sub    esi,0x41
  41d663:	cmp    sil,0x1
  41d667:	jbe    41d640 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x240>
  41d669:	jmp    41d592 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41d66e:	xchg   ax,ax
  41d670:	movzx  edx,BYTE PTR [rsp+0x26]
  41d675:	mov    ecx,edx
  41d677:	shl    ecx,0x6
  41d67a:	and    ecx,0xc0
  41d680:	jne    41d5b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41d686:	cmp    QWORD PTR [rsp+0x8],0x1
  41d68c:	je     41d5b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41d692:	movzx  ecx,BYTE PTR [rsp+0x25]
  41d697:	movzx  esi,BYTE PTR [rsp+0x24]
  41d69c:	shr    dl,0x2
  41d69f:	add    r8,0x2
  41d6a3:	lea    edi,[rsi*4+0x0]
  41d6aa:	mov    esi,ecx
  41d6ac:	shl    ecx,0x4
  41d6af:	shr    sil,0x4
  41d6b3:	or     edx,ecx
  41d6b5:	or     esi,edi
  41d6b7:	mov    BYTE PTR [r8-0x1],dl
  41d6bb:	mov    BYTE PTR [r8-0x2],sil
  41d6bf:	nop
  41d6c0:	mov    rdi,QWORD PTR [rsp+0x18]
  41d6c5:	mov    rdx,rdi
  41d6c8:	sub    rdx,r10
  41d6cb:	cmp    rdi,rdx
  41d6ce:	je     41d710 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x310>
  41d6d0:	lea    r15,[rbp+rdx*1+0x0]
  41d6d5:	jmp    41d46e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41d6da:	nop    WORD PTR [rax+rax*1+0x0]
  41d6e0:	movzx  edx,BYTE PTR [rsp+0x25]
  41d6e5:	mov    ecx,edx
  41d6e7:	shl    ecx,0x4
  41d6ea:	and    ecx,0xf0
  41d6f0:	jne    41d5b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41d6f6:	movzx  ecx,BYTE PTR [rsp+0x24]
  41d6fb:	shr    dl,0x4
  41d6fe:	add    r8,0x1
  41d702:	shl    ecx,0x2
  41d705:	or     edx,ecx
  41d707:	mov    BYTE PTR [r8-0x1],dl
  41d70b:	jmp    41d6c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41d70d:	nop    DWORD PTR [rax]
  41d710:	sub    r8,rax
  41d713:	cmp    QWORD PTR [rsp+0x10],r8
  41d718:	jbe    41d732 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x332>
  41d71a:	mov    rsi,QWORD PTR [rsp+0x10]
  41d71f:	mov    rdi,QWORD PTR [rbx]
  41d722:	sub    rsi,r8
  41d725:	call   416530 <flatcc_builder_truncate_vector@@Base>
  41d72a:	test   eax,eax
  41d72c:	jne    41d5c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41d732:	mov    rdi,QWORD PTR [rbx]
  41d735:	call   4175c0 <flatcc_builder_end_vector@@Base>
  41d73a:	test   eax,eax
  41d73c:	mov    DWORD PTR [r13+0x0],eax
  41d740:	je     41d5c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41d746:	cmp    BYTE PTR [r15],0x22
  41d74a:	je     41d7d5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d5>
  41d750:	mov    rax,QWORD PTR [rsp+0x28]
  41d755:	xor    rax,QWORD PTR fs:0x28
  41d75e:	jne    41d7f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41d764:	mov    ecx,0x14
  41d769:	jmp    41d495 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x95>
  41d76e:	cmp    QWORD PTR [rsp+0x8],0x2
  41d774:	jbe    41d5b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41d77a:	movzx  ecx,BYTE PTR [rsp+0x25]
  41d77f:	movzx  edx,BYTE PTR [rsp+0x24]
  41d784:	add    r8,0x3
  41d788:	add    r11,0x4
  41d78c:	lea    r9,[r10-0x4]
  41d790:	lea    esi,[rdx*4+0x0]
  41d797:	mov    edx,ecx
  41d799:	shl    ecx,0x4
  41d79c:	shr    dl,0x4
  41d79f:	or     edx,esi
  41d7a1:	mov    BYTE PTR [r8-0x3],dl
  41d7a5:	movzx  edx,BYTE PTR [rsp+0x26]
  41d7aa:	mov    esi,edx
  41d7ac:	shl    edx,0x6
  41d7af:	or     dl,BYTE PTR [rsp+0x27]
  41d7b3:	shr    sil,0x2
  41d7b7:	or     ecx,esi
  41d7b9:	mov    BYTE PTR [r8-0x2],cl
  41d7bd:	mov    BYTE PTR [r8-0x1],dl
  41d7c1:	sub    QWORD PTR [rsp+0x8],0x3
  41d7c7:	jne    41d55d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15d>
  41d7cd:	mov    r10,r9
  41d7d0:	jmp    41d6c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41d7d5:	mov    rbx,QWORD PTR [rsp+0x28]
  41d7da:	xor    rbx,QWORD PTR fs:0x28
  41d7e3:	lea    rax,[r15+0x1]
  41d7e7:	jne    41d7f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41d7e9:	add    rsp,0x38
  41d7ed:	pop    rbx
  41d7ee:	pop    rbp
  41d7ef:	pop    r12
  41d7f1:	pop    r13
  41d7f3:	pop    r14
  41d7f5:	pop    r15
  41d7f7:	ret    
  41d7f8:	call   405070 <__stack_chk_fail@plt>
  41d7fd:	nop    DWORD PTR [rax]

000000000041d800 <flatcc_json_parser_build_string@@Base>:
  41d800:	push   r15
  41d802:	push   r14
  41d804:	push   r13
  41d806:	push   r12
  41d808:	push   rbp
  41d809:	push   rbx
  41d80a:	mov    rbp,rdx
  41d80d:	mov    rbx,rdi
  41d810:	sub    rsp,0x28
  41d814:	mov    rax,QWORD PTR fs:0x28
  41d81d:	mov    QWORD PTR [rsp+0x18],rax
  41d822:	xor    eax,eax
  41d824:	cmp    rsi,rdx
  41d827:	mov    QWORD PTR [rsp+0x8],rcx
  41d82c:	je     41d837 <flatcc_json_parser_build_string@@Base+0x37>
  41d82e:	cmp    BYTE PTR [rsi],0x22
  41d831:	lea    r12,[rsi+0x1]
  41d835:	je     41d84a <flatcc_json_parser_build_string@@Base+0x4a>
  41d837:	mov    ecx,0x10
  41d83c:	mov    rdx,rbp
  41d83f:	mov    rdi,rbx
  41d842:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d847:	mov    r12,rax
  41d84a:	mov    rdx,rbp
  41d84d:	mov    rsi,r12
  41d850:	mov    rdi,rbx
  41d853:	call   41b940 <flatcc_json_parser_string_part@@Base>
  41d858:	cmp    rbp,rax
  41d85b:	mov    r15,rax
  41d85e:	je     41d869 <flatcc_json_parser_build_string@@Base+0x69>
  41d860:	cmp    BYTE PTR [rax],0x22
  41d863:	je     41d978 <flatcc_json_parser_build_string@@Base+0x178>
  41d869:	mov    rdi,QWORD PTR [rbx]
  41d86c:	call   4167a0 <flatcc_builder_start_string@@Base>
  41d871:	test   eax,eax
  41d873:	je     41d8b0 <flatcc_json_parser_build_string@@Base+0xb0>
  41d875:	mov    rax,QWORD PTR [rsp+0x8]
  41d87a:	mov    DWORD PTR [rax],0x0
  41d880:	mov    rcx,QWORD PTR [rsp+0x18]
  41d885:	xor    rcx,QWORD PTR fs:0x28
  41d88e:	mov    rax,r15
  41d891:	jne    41d9c0 <flatcc_json_parser_build_string@@Base+0x1c0>
  41d897:	add    rsp,0x28
  41d89b:	pop    rbx
  41d89c:	pop    rbp
  41d89d:	pop    r12
  41d89f:	pop    r13
  41d8a1:	pop    r14
  41d8a3:	pop    r15
  41d8a5:	ret    
  41d8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8b0:	mov    rdi,QWORD PTR [rbx]
  41d8b3:	mov    rdx,r15
  41d8b6:	mov    rsi,r12
  41d8b9:	sub    rdx,r12
  41d8bc:	call   416420 <flatcc_builder_append_string@@Base>
  41d8c1:	test   rax,rax
  41d8c4:	je     41d875 <flatcc_json_parser_build_string@@Base+0x75>
  41d8c6:	cmp    rbp,r15
  41d8c9:	je     41d948 <flatcc_json_parser_build_string@@Base+0x148>
  41d8cb:	cmp    BYTE PTR [r15],0x22
  41d8cf:	je     41d9a0 <flatcc_json_parser_build_string@@Base+0x1a0>
  41d8d5:	lea    r13,[rsp+0x14]
  41d8da:	lea    r14,[r13+0x1]
  41d8de:	jmp    41d904 <flatcc_json_parser_build_string@@Base+0x104>
  41d8e0:	mov    rdi,QWORD PTR [rbx]
  41d8e3:	mov    rdx,rax
  41d8e6:	mov    rsi,r12
  41d8e9:	sub    rdx,r12
  41d8ec:	call   416420 <flatcc_builder_append_string@@Base>
  41d8f1:	test   rax,rax
  41d8f4:	je     41d875 <flatcc_json_parser_build_string@@Base+0x75>
  41d8fa:	cmp    BYTE PTR [r15],0x22
  41d8fe:	je     41d9a0 <flatcc_json_parser_build_string@@Base+0x1a0>
  41d904:	mov    rcx,r13
  41d907:	mov    rdx,rbp
  41d90a:	mov    rsi,r15
  41d90d:	mov    rdi,rbx
  41d910:	call   41c0a0 <flatcc_json_parser_string_escape@@Base>
  41d915:	movsx  rdx,BYTE PTR [rsp+0x14]
  41d91b:	mov    rdi,QWORD PTR [rbx]
  41d91e:	mov    rsi,r14
  41d921:	mov    r12,rax
  41d924:	call   416420 <flatcc_builder_append_string@@Base>
  41d929:	test   rax,rax
  41d92c:	je     41d9b8 <flatcc_json_parser_build_string@@Base+0x1b8>
  41d932:	mov    rdx,rbp
  41d935:	mov    rsi,r12
  41d938:	mov    rdi,rbx
  41d93b:	call   41b940 <flatcc_json_parser_string_part@@Base>
  41d940:	cmp    rbp,rax
  41d943:	mov    r15,rax
  41d946:	jne    41d8e0 <flatcc_json_parser_build_string@@Base+0xe0>
  41d948:	mov    rdi,QWORD PTR [rbx]
  41d94b:	call   418060 <flatcc_builder_end_string@@Base>
  41d950:	mov    rcx,QWORD PTR [rsp+0x8]
  41d955:	mov    DWORD PTR [rcx],eax
  41d957:	mov    rsi,r15
  41d95a:	mov    ecx,0x14
  41d95f:	mov    rdx,rbp
  41d962:	mov    rdi,rbx
  41d965:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41d96a:	mov    r15,rax
  41d96d:	jmp    41d880 <flatcc_json_parser_build_string@@Base+0x80>
  41d972:	nop    WORD PTR [rax+rax*1+0x0]
  41d978:	mov    rdi,QWORD PTR [rbx]
  41d97b:	mov    rdx,rax
  41d97e:	mov    rsi,r12
  41d981:	sub    rdx,r12
  41d984:	call   417ed0 <flatcc_builder_create_string@@Base>
  41d989:	mov    rcx,QWORD PTR [rsp+0x8]
  41d98e:	mov    DWORD PTR [rcx],eax
  41d990:	cmp    BYTE PTR [r15],0x22
  41d994:	jne    41d957 <flatcc_json_parser_build_string@@Base+0x157>
  41d996:	add    r15,0x1
  41d99a:	jmp    41d880 <flatcc_json_parser_build_string@@Base+0x80>
  41d99f:	nop
  41d9a0:	mov    rdi,QWORD PTR [rbx]
  41d9a3:	call   418060 <flatcc_builder_end_string@@Base>
  41d9a8:	mov    rcx,QWORD PTR [rsp+0x8]
  41d9ad:	mov    DWORD PTR [rcx],eax
  41d9af:	jmp    41d990 <flatcc_json_parser_build_string@@Base+0x190>
  41d9b1:	nop    DWORD PTR [rax+0x0]
  41d9b8:	mov    r15,r12
  41d9bb:	jmp    41d875 <flatcc_json_parser_build_string@@Base+0x75>
  41d9c0:	call   405070 <__stack_chk_fail@plt>
  41d9c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041d9d0 <flatcc_json_parser_prepare_unions@@Base>:
  41d9d0:	lea    rax,[rcx+rcx*4]
  41d9d4:	push   r14
  41d9d6:	push   r13
  41d9d8:	push   r12
  41d9da:	push   rbp
  41d9db:	mov    rbp,rdi
  41d9de:	push   rbx
  41d9df:	mov    rdi,QWORD PTR [rdi]
  41d9e2:	mov    r12,rsi
  41d9e5:	lea    rsi,[rax*8+0x10]
  41d9ed:	mov    r13,r8
  41d9f0:	mov    r14,rdx
  41d9f3:	mov    rbx,rcx
  41d9f6:	call   415570 <flatcc_builder_enter_user_frame@@Base>
  41d9fb:	test   rax,rax
  41d9fe:	mov    QWORD PTR [r13+0x0],rax
  41da02:	je     41da20 <flatcc_json_parser_prepare_unions@@Base+0x50>
  41da04:	mov    rdi,QWORD PTR [rbp+0x0]
  41da08:	mov    rsi,rax
  41da0b:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41da10:	mov    QWORD PTR [rax],rbx
  41da13:	mov    rax,r12
  41da16:	pop    rbx
  41da17:	pop    rbp
  41da18:	pop    r12
  41da1a:	pop    r13
  41da1c:	pop    r14
  41da1e:	ret    
  41da1f:	nop
  41da20:	pop    rbx
  41da21:	mov    rdx,r14
  41da24:	mov    rsi,r12
  41da27:	mov    rdi,rbp
  41da2a:	pop    rbp
  41da2b:	pop    r12
  41da2d:	pop    r13
  41da2f:	pop    r14
  41da31:	mov    ecx,0x21
  41da36:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41da3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041da40 <flatcc_json_parser_finalize_unions@@Base>:
  41da40:	push   r13
  41da42:	push   r12
  41da44:	mov    r12,rsi
  41da47:	push   rbp
  41da48:	push   rbx
  41da49:	mov    rbx,rdi
  41da4c:	mov    rsi,rcx
  41da4f:	mov    r13,rdx
  41da52:	mov    rbp,rcx
  41da55:	sub    rsp,0x8
  41da59:	mov    rdi,QWORD PTR [rdi]
  41da5c:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41da61:	cmp    QWORD PTR [rax+0x8],0x0
  41da66:	je     41da7e <flatcc_json_parser_finalize_unions@@Base+0x3e>
  41da68:	mov    rsi,r12
  41da6b:	mov    ecx,0x1b
  41da70:	mov    rdx,r13
  41da73:	mov    rdi,rbx
  41da76:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41da7b:	mov    r12,rax
  41da7e:	mov    rdi,QWORD PTR [rbx]
  41da81:	mov    rsi,rbp
  41da84:	call   415660 <flatcc_builder_exit_user_frame_at@@Base>
  41da89:	add    rsp,0x8
  41da8d:	mov    rax,r12
  41da90:	pop    rbx
  41da91:	pop    rbp
  41da92:	pop    r12
  41da94:	pop    r13
  41da96:	ret    
  41da97:	nop    WORD PTR [rax+rax*1+0x0]

000000000041daa0 <flatcc_json_parser_union@@Base>:
  41daa0:	push   r15
  41daa2:	push   r14
  41daa4:	mov    r14d,r8d
  41daa7:	push   r13
  41daa9:	push   r12
  41daab:	mov    r13,rsi
  41daae:	push   rbp
  41daaf:	push   rbx
  41dab0:	mov    rbx,rdi
  41dab3:	mov    rbp,rcx
  41dab6:	mov    rsi,r9
  41dab9:	mov    r12,rdx
  41dabc:	sub    rsp,0x18
  41dac0:	mov    rdi,QWORD PTR [rdi]
  41dac3:	mov    rax,QWORD PTR fs:0x28
  41dacc:	mov    QWORD PTR [rsp+0x8],rax
  41dad1:	xor    eax,eax
  41dad3:	mov    r15,QWORD PTR [rsp+0x50]
  41dad8:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41dadd:	lea    rdx,[rbp+rbp*4+0x0]
  41dae2:	mov    ecx,0x1c
  41dae7:	lea    rdx,[rax+rdx*8]
  41daeb:	cmp    QWORD PTR [rdx+0x10],0x0
  41daf0:	je     41db30 <flatcc_json_parser_union@@Base+0x90>
  41daf2:	mov    rdx,r12
  41daf5:	mov    rsi,r13
  41daf8:	mov    rdi,rbx
  41dafb:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41db00:	mov    rbp,rax
  41db03:	mov    rdi,QWORD PTR [rsp+0x8]
  41db08:	xor    rdi,QWORD PTR fs:0x28
  41db11:	mov    rax,rbp
  41db14:	jne    41dbcd <flatcc_json_parser_union@@Base+0x12d>
  41db1a:	add    rsp,0x18
  41db1e:	pop    rbx
  41db1f:	pop    rbp
  41db20:	pop    r12
  41db22:	pop    r13
  41db24:	pop    r14
  41db26:	pop    r15
  41db28:	ret    
  41db29:	nop    DWORD PTR [rax+0x0]
  41db30:	cmp    BYTE PTR [rdx+0x24],0x0
  41db34:	je     41dba0 <flatcc_json_parser_union@@Base+0x100>
  41db36:	movzx  ecx,BYTE PTR [rdx+0x25]
  41db3a:	test   cl,cl
  41db3c:	mov    BYTE PTR [rsp],cl
  41db3f:	je     41db90 <flatcc_json_parser_union@@Base+0xf0>
  41db41:	sub    QWORD PTR [rax+0x8],0x1
  41db46:	lea    r8,[rsp+0x4]
  41db4b:	mov    rdx,r12
  41db4e:	mov    rsi,r13
  41db51:	mov    rdi,rbx
  41db54:	call   r15
  41db57:	cmp    r12,rax
  41db5a:	mov    rbp,rax
  41db5d:	je     41db03 <flatcc_json_parser_union@@Base+0x63>
  41db5f:	mov    rdx,QWORD PTR [rsp]
  41db63:	mov    rdi,QWORD PTR [rbx]
  41db66:	movzx  esi,r14w
  41db6a:	call   418490 <flatcc_builder_table_add_union@@Base>
  41db6f:	test   eax,eax
  41db71:	je     41db03 <flatcc_json_parser_union@@Base+0x63>
  41db73:	mov    rsi,rbp
  41db76:	mov    ecx,0x1c
  41db7b:	mov    rdx,r12
  41db7e:	mov    rdi,rbx
  41db81:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41db86:	mov    rbp,rax
  41db89:	jmp    41db03 <flatcc_json_parser_union@@Base+0x63>
  41db8e:	xchg   ax,ax
  41db90:	mov    ecx,0x19
  41db95:	jmp    41daf2 <flatcc_json_parser_union@@Base+0x52>
  41db9a:	nop    WORD PTR [rax+rax*1+0x0]
  41dba0:	add    QWORD PTR [rax+0x8],0x1
  41dba5:	mov    eax,DWORD PTR [rbx+0x14]
  41dba8:	mov    rsi,r13
  41dbab:	mov    rdi,rbx
  41dbae:	mov    DWORD PTR [rdx+0x20],eax
  41dbb1:	mov    rax,QWORD PTR [rbx+0x8]
  41dbb5:	mov    QWORD PTR [rdx+0x10],r13
  41dbb9:	mov    QWORD PTR [rdx+0x18],rax
  41dbbd:	mov    rdx,r12
  41dbc0:	call   41c7d0 <flatcc_json_parser_generic_json@@Base>
  41dbc5:	mov    rbp,rax
  41dbc8:	jmp    41db03 <flatcc_json_parser_union@@Base+0x63>
  41dbcd:	call   405070 <__stack_chk_fail@plt>
  41dbd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41dbdd:	nop    DWORD PTR [rax]

000000000041dbe0 <flatcc_json_parser_union_type@@Base>:
  41dbe0:	push   r15
  41dbe2:	push   r14
  41dbe4:	push   r13
  41dbe6:	push   r12
  41dbe8:	mov    r13,rcx
  41dbeb:	push   rbp
  41dbec:	push   rbx
  41dbed:	mov    rbx,rdi
  41dbf0:	mov    r12,rsi
  41dbf3:	mov    rsi,r9
  41dbf6:	mov    rbp,rdx
  41dbf9:	sub    rsp,0x48
  41dbfd:	mov    rdi,QWORD PTR [rdi]
  41dc00:	mov    rax,QWORD PTR [rsp+0x80]
  41dc08:	mov    DWORD PTR [rsp+0xc],r8d
  41dc0d:	mov    r14,QWORD PTR [rsp+0x88]
  41dc15:	mov    QWORD PTR [rsp+0x10],rax
  41dc1a:	mov    rax,QWORD PTR fs:0x28
  41dc23:	mov    QWORD PTR [rsp+0x38],rax
  41dc28:	xor    eax,eax
  41dc2a:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41dc2f:	mov    r15,rax
  41dc32:	lea    rax,[r13+r13*4+0x0]
  41dc37:	lea    r9,[r15+rax*8+0x10]
  41dc3c:	cmp    BYTE PTR [r9+0x14],0x0
  41dc41:	jne    41dd60 <flatcc_json_parser_union_type@@Base+0x180>
  41dc47:	cmp    r12,rbp
  41dc4a:	mov    BYTE PTR [r9+0x14],0x1
  41dc4f:	mov    DWORD PTR [rsp+0x2c],0x0
  41dc57:	mov    QWORD PTR [rsp+0x30],0x0
  41dc60:	mov    BYTE PTR [r9+0x15],0x0
  41dc65:	je     41dd80 <flatcc_json_parser_union_type@@Base+0x1a0>
  41dc6b:	lea    rcx,[rsp+0x2c]
  41dc70:	lea    r8,[rsp+0x30]
  41dc75:	mov    rdx,rbp
  41dc78:	mov    rsi,r12
  41dc7b:	mov    rdi,rbx
  41dc7e:	mov    QWORD PTR [rsp+0x18],r9
  41dc83:	call   41c710 <flatcc_json_parser_integer@@Base>
  41dc88:	cmp    r12,rax
  41dc8b:	mov    r13,rax
  41dc8e:	mov    r9,QWORD PTR [rsp+0x18]
  41dc93:	je     41dd83 <flatcc_json_parser_union_type@@Base+0x1a3>
  41dc99:	mov    eax,DWORD PTR [rsp+0x2c]
  41dc9d:	mov    ecx,0x8
  41dca2:	test   eax,eax
  41dca4:	jne    41ddba <flatcc_json_parser_union_type@@Base+0x1da>
  41dcaa:	mov    rax,QWORD PTR [rsp+0x30]
  41dcaf:	cmp    rax,0xff
  41dcb5:	ja     41ddb0 <flatcc_json_parser_union_type@@Base+0x1d0>
  41dcbb:	mov    BYTE PTR [r9+0x15],al
  41dcbf:	mov    rsi,QWORD PTR [r9]
  41dcc2:	test   rsi,rsi
  41dcc5:	je     41de10 <flatcc_json_parser_union_type@@Base+0x230>
  41dccb:	mov    rax,QWORD PTR [r15+0x8]
  41dccf:	test   rax,rax
  41dcd2:	je     41de28 <flatcc_json_parser_union_type@@Base+0x248>
  41dcd8:	sub    rax,0x1
  41dcdc:	mov    r12,QWORD PTR [rbx+0x8]
  41dce0:	lea    r8,[rsp+0x34]
  41dce5:	mov    QWORD PTR [r15+0x8],rax
  41dce9:	mov    eax,DWORD PTR [r9+0x10]
  41dced:	mov    rdx,rbp
  41dcf0:	mov    r15d,DWORD PTR [rbx+0x14]
  41dcf4:	mov    rdi,rbx
  41dcf7:	mov    DWORD PTR [rbx+0x14],eax
  41dcfa:	mov    rax,QWORD PTR [r9+0x8]
  41dcfe:	mov    QWORD PTR [rbx+0x8],rax
  41dd02:	movzx  ecx,BYTE PTR [r9+0x15]
  41dd07:	mov    BYTE PTR [rsp+0x30],cl
  41dd0b:	call   r14
  41dd0e:	cmp    rbp,rax
  41dd11:	je     41dde0 <flatcc_json_parser_union_type@@Base+0x200>
  41dd17:	movzx  esi,WORD PTR [rsp+0xc]
  41dd1c:	mov    rdx,QWORD PTR [rsp+0x30]
  41dd21:	mov    rdi,QWORD PTR [rbx]
  41dd24:	call   418490 <flatcc_builder_table_add_union@@Base>
  41dd29:	test   eax,eax
  41dd2b:	jne    41ddf0 <flatcc_json_parser_union_type@@Base+0x210>
  41dd31:	mov    DWORD PTR [rbx+0x14],r15d
  41dd35:	mov    QWORD PTR [rbx+0x8],r12
  41dd39:	mov    rdx,QWORD PTR [rsp+0x38]
  41dd3e:	xor    rdx,QWORD PTR fs:0x28
  41dd47:	mov    rax,r13
  41dd4a:	jne    41de23 <flatcc_json_parser_union_type@@Base+0x243>
  41dd50:	add    rsp,0x48
  41dd54:	pop    rbx
  41dd55:	pop    rbp
  41dd56:	pop    r12
  41dd58:	pop    r13
  41dd5a:	pop    r14
  41dd5c:	pop    r15
  41dd5e:	ret    
  41dd5f:	nop
  41dd60:	mov    ecx,0x1c
  41dd65:	mov    rdx,rbp
  41dd68:	mov    rsi,r12
  41dd6b:	mov    rdi,rbx
  41dd6e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41dd73:	mov    r13,rax
  41dd76:	jmp    41dd39 <flatcc_json_parser_union_type@@Base+0x159>
  41dd78:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd80:	mov    r13,rbp
  41dd83:	mov    rcx,QWORD PTR [rsp+0x10]
  41dd88:	lea    r8,[r9+0x15]
  41dd8c:	mov    rsi,r13
  41dd8f:	mov    rdx,rbp
  41dd92:	mov    rdi,rbx
  41dd95:	mov    QWORD PTR [rsp+0x18],r9
  41dd9a:	call   41ba90 <flatcc_json_parser_space_ext@@Base+0xe0>
  41dd9f:	mov    r9,QWORD PTR [rsp+0x18]
  41dda4:	mov    r13,rax
  41dda7:	jmp    41dcbf <flatcc_json_parser_union_type@@Base+0xdf>
  41ddac:	nop    DWORD PTR [rax+0x0]
  41ddb0:	mov    QWORD PTR [rsp+0x18],r9
  41ddb5:	mov    ecx,0x7
  41ddba:	mov    rsi,r13
  41ddbd:	mov    rdx,rbp
  41ddc0:	mov    rdi,rbx
  41ddc3:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41ddc8:	cmp    r12,rax
  41ddcb:	mov    r13,rax
  41ddce:	mov    r9,QWORD PTR [rsp+0x18]
  41ddd3:	jne    41dcbf <flatcc_json_parser_union_type@@Base+0xdf>
  41ddd9:	jmp    41dd83 <flatcc_json_parser_union_type@@Base+0x1a3>
  41dddb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dde0:	mov    r13,rbp
  41dde3:	jmp    41dd39 <flatcc_json_parser_union_type@@Base+0x159>
  41dde8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ddf0:	mov    rsi,r13
  41ddf3:	mov    ecx,0x1c
  41ddf8:	mov    rdx,rbp
  41ddfb:	mov    rdi,rbx
  41ddfe:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41de03:	mov    r13,rax
  41de06:	jmp    41dd39 <flatcc_json_parser_union_type@@Base+0x159>
  41de0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41de10:	xor    eax,eax
  41de12:	cmp    BYTE PTR [r9+0x15],0x0
  41de17:	setne  al
  41de1a:	add    QWORD PTR [r15+0x8],rax
  41de1e:	jmp    41dd39 <flatcc_json_parser_union_type@@Base+0x159>
  41de23:	call   405070 <__stack_chk_fail@plt>
  41de28:	lea    rcx,[rip+0x122a1]        # 4300d0 <flatcc_builder_padding_base@@Base+0x12b0>
  41de2f:	lea    rsi,[rip+0x1189a]        # 42f6d0 <flatcc_builder_padding_base@@Base+0x8b0>
  41de36:	lea    rdi,[rip+0x11b55]        # 42f992 <flatcc_builder_padding_base@@Base+0xb72>
  41de3d:	mov    edx,0x3c5
  41de42:	call   405080 <__assert_fail@plt>
  41de47:	nop    WORD PTR [rax+rax*1+0x0]

000000000041de50 <flatcc_json_parser_union_vector@@Base>:
  41de50:	push   r15
  41de52:	push   r14
  41de54:	mov    r15d,r8d
  41de57:	push   r13
  41de59:	push   r12
  41de5b:	mov    r12,rsi
  41de5e:	push   rbp
  41de5f:	push   rbx
  41de60:	mov    rbx,rdi
  41de63:	mov    rbp,rcx
  41de66:	mov    rsi,r9
  41de69:	mov    r13,rdx
  41de6c:	sub    rsp,0x8
  41de70:	mov    rdi,QWORD PTR [rdi]
  41de73:	mov    r14,QWORD PTR [rsp+0x40]
  41de78:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41de7d:	lea    rdx,[rbp+rbp*4+0x0]
  41de82:	lea    rcx,[rax+rdx*8+0x10]
  41de87:	cmp    QWORD PTR [rcx],0x0
  41de8b:	je     41deb0 <flatcc_json_parser_union_vector@@Base+0x60>
  41de8d:	add    rsp,0x8
  41de91:	mov    rdx,r13
  41de94:	mov    rsi,r12
  41de97:	mov    rdi,rbx
  41de9a:	mov    ecx,0x1c
  41de9f:	pop    rbx
  41dea0:	pop    rbp
  41dea1:	pop    r12
  41dea3:	pop    r13
  41dea5:	pop    r14
  41dea7:	pop    r15
  41dea9:	jmp    41b920 <flatcc_json_parser_set_error@@Base>
  41deae:	xchg   ax,ax
  41deb0:	cmp    BYTE PTR [rcx+0x14],0x0
  41deb4:	je     41def0 <flatcc_json_parser_union_vector@@Base+0xa0>
  41deb6:	sub    QWORD PTR [rax+0x8],0x1
  41debb:	mov    r8d,DWORD PTR [rcx+0x18]
  41debf:	movzx  r9d,r15w
  41dec3:	mov    rcx,QWORD PTR [rcx+0x20]
  41dec7:	mov    QWORD PTR [rsp+0x40],r14
  41decc:	add    rsp,0x8
  41ded0:	mov    rdx,r13
  41ded3:	mov    rsi,r12
  41ded6:	mov    rdi,rbx
  41ded9:	pop    rbx
  41deda:	pop    rbp
  41dedb:	pop    r12
  41dedd:	pop    r13
  41dedf:	pop    r14
  41dee1:	pop    r15
  41dee3:	jmp    41bc60 <flatcc_json_parser_space_ext@@Base+0x2b0>
  41dee8:	nop    DWORD PTR [rax+rax*1+0x0]
  41def0:	add    QWORD PTR [rax+0x8],0x1
  41def5:	mov    eax,DWORD PTR [rbx+0x14]
  41def8:	mov    rdx,r13
  41defb:	mov    rsi,r12
  41defe:	mov    rdi,rbx
  41df01:	mov    DWORD PTR [rcx+0x10],eax
  41df04:	mov    rax,QWORD PTR [rbx+0x8]
  41df08:	mov    QWORD PTR [rcx],r12
  41df0b:	mov    QWORD PTR [rcx+0x8],rax
  41df0f:	add    rsp,0x8
  41df13:	pop    rbx
  41df14:	pop    rbp
  41df15:	pop    r12
  41df17:	pop    r13
  41df19:	pop    r14
  41df1b:	pop    r15
  41df1d:	jmp    41c7d0 <flatcc_json_parser_generic_json@@Base>
  41df22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41df2d:	nop    DWORD PTR [rax]

000000000041df30 <flatcc_json_parser_union_type_vector@@Base>:
  41df30:	push   r15
  41df32:	push   r14
  41df34:	push   r13
  41df36:	push   r12
  41df38:	mov    r12,rdi
  41df3b:	push   rbp
  41df3c:	push   rbx
  41df3d:	mov    r13,rcx
  41df40:	mov    rbp,rsi
  41df43:	mov    rsi,r9
  41df46:	mov    rbx,rdx
  41df49:	sub    rsp,0x78
  41df4d:	mov    rdi,QWORD PTR [rdi]
  41df50:	mov    rax,QWORD PTR [rsp+0xb0]
  41df58:	mov    DWORD PTR [rsp+0x2c],r8d
  41df5d:	mov    QWORD PTR [rsp+0x30],r9
  41df62:	mov    r14,QWORD PTR [rsp+0xc0]
  41df6a:	mov    QWORD PTR [rsp+0x20],rax
  41df6f:	mov    rax,QWORD PTR [rsp+0xb8]
  41df77:	mov    QWORD PTR [rsp+0x38],rax
  41df7c:	mov    rax,QWORD PTR fs:0x28
  41df85:	mov    QWORD PTR [rsp+0x68],rax
  41df8a:	xor    eax,eax
  41df8c:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41df91:	lea    rdx,[r13+r13*4+0x0]
  41df96:	lea    rcx,[rdx*8+0x0]
  41df9e:	lea    rax,[rax+rcx*1+0x10]
  41dfa3:	mov    QWORD PTR [rsp+0x40],rcx
  41dfa8:	cmp    BYTE PTR [rax+0x14],0x0
  41dfac:	mov    QWORD PTR [rsp+0x18],rax
  41dfb1:	jne    41e0b0 <flatcc_json_parser_union_type_vector@@Base+0x180>
  41dfb7:	mov    rax,QWORD PTR [rsp+0x18]
  41dfbc:	mov    ecx,0xffffffff
  41dfc1:	mov    edx,0x1
  41dfc6:	mov    esi,0x1
  41dfcb:	mov    BYTE PTR [rax+0x14],0x1
  41dfcf:	mov    rdi,QWORD PTR [r12]
  41dfd3:	call   4166c0 <flatcc_builder_start_vector@@Base>
  41dfd8:	test   eax,eax
  41dfda:	jne    41e070 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41dfe0:	cmp    rbp,rbx
  41dfe3:	je     41dfef <flatcc_json_parser_union_type_vector@@Base+0xbf>
  41dfe5:	cmp    BYTE PTR [rbp+0x0],0x5b
  41dfe9:	je     41e0c8 <flatcc_json_parser_union_type_vector@@Base+0x198>
  41dfef:	mov    rsi,rbp
  41dff2:	mov    ecx,0x16
  41dff7:	mov    rdx,rbx
  41dffa:	mov    rdi,r12
  41dffd:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e002:	mov    rbp,rax
  41e005:	nop    DWORD PTR [rax]
  41e008:	mov    rdi,QWORD PTR [r12]
  41e00c:	call   4176a0 <flatcc_builder_vector_count@@Base>
  41e011:	mov    r14,rax
  41e014:	mov    rax,QWORD PTR [rsp+0x18]
  41e019:	mov    rdi,QWORD PTR [r12]
  41e01d:	mov    r15d,r14d
  41e020:	mov    rsi,r15
  41e023:	mov    DWORD PTR [rax+0x18],r14d
  41e027:	call   415570 <flatcc_builder_enter_user_frame@@Base>
  41e02c:	mov    rdi,QWORD PTR [r12]
  41e030:	mov    rsi,rax
  41e033:	mov    QWORD PTR [rsp+0x8],rax
  41e038:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e03d:	mov    rdi,QWORD PTR [r12]
  41e041:	mov    r13,rax
  41e044:	call   4176b0 <flatcc_builder_vector_edit@@Base>
  41e049:	mov    rdx,r15
  41e04c:	mov    rsi,rax
  41e04f:	mov    rdi,r13
  41e052:	call   4050e0 <memcpy@plt>
  41e057:	mov    rdi,QWORD PTR [r12]
  41e05b:	call   4175c0 <flatcc_builder_end_vector@@Base>
  41e060:	test   eax,eax
  41e062:	mov    r15d,eax
  41e065:	jne    41e231 <flatcc_json_parser_union_type_vector@@Base+0x301>
  41e06b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e070:	mov    ecx,0x21
  41e075:	mov    rdx,rbx
  41e078:	mov    rsi,rbp
  41e07b:	mov    rdi,r12
  41e07e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e083:	mov    rdx,QWORD PTR [rsp+0x68]
  41e088:	xor    rdx,QWORD PTR fs:0x28
  41e091:	jne    41e4d6 <flatcc_json_parser_union_type_vector@@Base+0x5a6>
  41e097:	add    rsp,0x78
  41e09b:	pop    rbx
  41e09c:	pop    rbp
  41e09d:	pop    r12
  41e09f:	pop    r13
  41e0a1:	pop    r14
  41e0a3:	pop    r15
  41e0a5:	ret    
  41e0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0b0:	mov    ecx,0x1c
  41e0b5:	mov    rdx,rbx
  41e0b8:	mov    rsi,rbp
  41e0bb:	mov    rdi,r12
  41e0be:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e0c3:	jmp    41e083 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41e0c5:	nop    DWORD PTR [rax]
  41e0c8:	lea    rsi,[rbp+0x1]
  41e0cc:	mov    rax,rbx
  41e0cf:	sub    rax,rsi
  41e0d2:	cmp    rax,0x1
  41e0d6:	jle    41e0e8 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
  41e0d8:	cmp    BYTE PTR [rbp+0x1],0x20
  41e0dc:	jg     41e2f2 <flatcc_json_parser_union_type_vector@@Base+0x3c2>
  41e0e2:	je     41e4a3 <flatcc_json_parser_union_type_vector@@Base+0x573>
  41e0e8:	mov    rdx,rbx
  41e0eb:	mov    rdi,r12
  41e0ee:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41e0f3:	mov    rbp,rax
  41e0f6:	cmp    rbx,rbp
  41e0f9:	je     41e105 <flatcc_json_parser_union_type_vector@@Base+0x1d5>
  41e0fb:	cmp    BYTE PTR [rbp+0x0],0x5d
  41e0ff:	je     41e40d <flatcc_json_parser_union_type_vector@@Base+0x4dd>
  41e105:	lea    rax,[rsp+0x5b]
  41e10a:	mov    QWORD PTR [rsp+0x48],rax
  41e10f:	lea    rax,[rsp+0x60]
  41e114:	mov    QWORD PTR [rsp+0x8],rax
  41e119:	lea    rax,[rsp+0x5c]
  41e11e:	mov    QWORD PTR [rsp+0x10],rax
  41e123:	nop    DWORD PTR [rax+rax*1+0x0]
  41e128:	mov    rdi,QWORD PTR [r12]
  41e12c:	mov    esi,0x1
  41e131:	call   416020 <flatcc_builder_extend_vector@@Base>
  41e136:	test   rax,rax
  41e139:	mov    r13,rax
  41e13c:	je     41e070 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41e142:	cmp    rbx,rbp
  41e145:	mov    QWORD PTR [rsp+0x60],0x0
  41e14e:	mov    DWORD PTR [rsp+0x5c],0x0
  41e156:	mov    BYTE PTR [rsp+0x5b],0x0
  41e15b:	je     41e370 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41e161:	mov    r8,QWORD PTR [rsp+0x8]
  41e166:	mov    rcx,QWORD PTR [rsp+0x10]
  41e16b:	mov    rdx,rbx
  41e16e:	mov    rsi,rbp
  41e171:	mov    rdi,r12
  41e174:	call   41c710 <flatcc_json_parser_integer@@Base>
  41e179:	cmp    rax,rbp
  41e17c:	mov    r15,rax
  41e17f:	je     41e370 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41e185:	mov    esi,DWORD PTR [rsp+0x5c]
  41e189:	mov    ecx,0x8
  41e18e:	test   esi,esi
  41e190:	jne    41e315 <flatcc_json_parser_union_type_vector@@Base+0x3e5>
  41e196:	mov    rax,QWORD PTR [rsp+0x60]
  41e19b:	cmp    rax,0xff
  41e1a1:	ja     41e310 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
  41e1a7:	movzx  edi,al
  41e1aa:	mov    BYTE PTR [rsp+0x5b],al
  41e1ae:	call   r14
  41e1b1:	test   eax,eax
  41e1b3:	jne    41e300 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
  41e1b9:	test   BYTE PTR [r12+0x10],0x1
  41e1bf:	je     41e468 <flatcc_json_parser_union_type_vector@@Base+0x538>
  41e1c5:	mov    BYTE PTR [rsp+0x5b],0x0
  41e1ca:	xor    eax,eax
  41e1cc:	mov    BYTE PTR [r13+0x0],al
  41e1d0:	mov    rax,rbx
  41e1d3:	sub    rax,r15
  41e1d6:	cmp    rax,0x1
  41e1da:	jle    41e1e8 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
  41e1dc:	cmp    BYTE PTR [r15],0x20
  41e1e0:	jg     41e1f9 <flatcc_json_parser_union_type_vector@@Base+0x2c9>
  41e1e2:	je     41e3a0 <flatcc_json_parser_union_type_vector@@Base+0x470>
  41e1e8:	mov    rsi,r15
  41e1eb:	mov    rdx,rbx
  41e1ee:	mov    rdi,r12
  41e1f1:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41e1f6:	mov    r15,rax
  41e1f9:	cmp    rbx,r15
  41e1fc:	je     41e3c0 <flatcc_json_parser_union_type_vector@@Base+0x490>
  41e202:	movzx  eax,BYTE PTR [r15]
  41e206:	cmp    al,0x2c
  41e208:	je     41e3d0 <flatcc_json_parser_union_type_vector@@Base+0x4a0>
  41e20e:	cmp    al,0x5d
  41e210:	je     41e338 <flatcc_json_parser_union_type_vector@@Base+0x408>
  41e216:	mov    ecx,0x9
  41e21b:	mov    rdx,rbx
  41e21e:	mov    rsi,r15
  41e221:	mov    rdi,r12
  41e224:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e229:	mov    rbp,rax
  41e22c:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e231:	movzx  r13d,WORD PTR [rsp+0x2c]
  41e237:	mov    rdi,QWORD PTR [r12]
  41e23b:	lea    esi,[r13-0x1]
  41e23f:	call   418350 <flatcc_builder_table_add_offset@@Base>
  41e244:	test   rax,rax
  41e247:	je     41e070 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41e24d:	mov    rsi,QWORD PTR [rsp+0x30]
  41e252:	mov    rdi,QWORD PTR [r12]
  41e256:	mov    DWORD PTR [rax],r15d
  41e259:	call   4156b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e25e:	mov    rdx,QWORD PTR [rsp+0x40]
  41e263:	mov    rcx,QWORD PTR [rsp+0x8]
  41e268:	lea    rdx,[rax+rdx*1+0x10]
  41e26d:	mov    rsi,QWORD PTR [rdx]
  41e270:	mov    QWORD PTR [rdx+0x20],rcx
  41e274:	test   rsi,rsi
  41e277:	je     41e4c9 <flatcc_json_parser_union_type_vector@@Base+0x599>
  41e27d:	mov    rcx,QWORD PTR [rax+0x8]
  41e281:	test   rcx,rcx
  41e284:	je     41e4db <flatcc_json_parser_union_type_vector@@Base+0x5ab>
  41e28a:	sub    rcx,0x1
  41e28e:	sub    rsp,0x8
  41e292:	mov    r15d,DWORD PTR [r12+0x14]
  41e297:	mov    QWORD PTR [rax+0x8],rcx
  41e29b:	mov    rax,QWORD PTR [r12+0x8]
  41e2a0:	mov    r9d,r13d
  41e2a3:	mov    r8d,r14d
  41e2a6:	mov    rdi,r12
  41e2a9:	mov    QWORD PTR [rsp+0x18],rax
  41e2ae:	mov    eax,DWORD PTR [rdx+0x10]
  41e2b1:	mov    DWORD PTR [r12+0x14],eax
  41e2b6:	mov    rax,QWORD PTR [rdx+0x8]
  41e2ba:	mov    rdx,rbx
  41e2bd:	push   QWORD PTR [rsp+0x40]
  41e2c1:	mov    rcx,QWORD PTR [rsp+0x18]
  41e2c6:	mov    QWORD PTR [r12+0x8],rax
  41e2cb:	call   41bc60 <flatcc_json_parser_space_ext@@Base+0x2b0>
  41e2d0:	cmp    rbx,rax
  41e2d3:	pop    rdx
  41e2d4:	pop    rcx
  41e2d5:	je     41e083 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41e2db:	mov    rax,QWORD PTR [rsp+0x10]
  41e2e0:	mov    DWORD PTR [r12+0x14],r15d
  41e2e5:	mov    QWORD PTR [r12+0x8],rax
  41e2ea:	mov    rax,rbp
  41e2ed:	jmp    41e083 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41e2f2:	mov    rbp,rsi
  41e2f5:	jmp    41e0f6 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  41e2fa:	nop    WORD PTR [rax+rax*1+0x0]
  41e300:	movzx  eax,BYTE PTR [rsp+0x5b]
  41e305:	jmp    41e1cc <flatcc_json_parser_union_type_vector@@Base+0x29c>
  41e30a:	nop    WORD PTR [rax+rax*1+0x0]
  41e310:	mov    ecx,0x7
  41e315:	mov    rsi,r15
  41e318:	mov    rdx,rbx
  41e31b:	mov    rdi,r12
  41e31e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e323:	cmp    rax,rbp
  41e326:	mov    r15,rax
  41e329:	je     41e370 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41e32b:	movzx  edi,BYTE PTR [rsp+0x5b]
  41e330:	jmp    41e1ae <flatcc_json_parser_union_type_vector@@Base+0x27e>
  41e335:	nop    DWORD PTR [rax]
  41e338:	lea    rbp,[r15+0x1]
  41e33c:	mov    rax,rbx
  41e33f:	sub    rax,rbp
  41e342:	cmp    rax,0x1
  41e346:	jle    41e359 <flatcc_json_parser_union_type_vector@@Base+0x429>
  41e348:	cmp    BYTE PTR [r15+0x1],0x20
  41e34d:	jg     41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e353:	je     41e440 <flatcc_json_parser_union_type_vector@@Base+0x510>
  41e359:	mov    rsi,rbp
  41e35c:	mov    rdx,rbx
  41e35f:	mov    rdi,r12
  41e362:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41e367:	mov    rbp,rax
  41e36a:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e36f:	nop
  41e370:	mov    r8,QWORD PTR [rsp+0x48]
  41e375:	mov    rcx,QWORD PTR [rsp+0x20]
  41e37a:	mov    rdx,rbx
  41e37d:	mov    rsi,rbp
  41e380:	mov    rdi,r12
  41e383:	call   41ba90 <flatcc_json_parser_space_ext@@Base+0xe0>
  41e388:	cmp    rax,rbp
  41e38b:	mov    r15,rax
  41e38e:	je     41e395 <flatcc_json_parser_union_type_vector@@Base+0x465>
  41e390:	cmp    rbx,rax
  41e393:	jne    41e32b <flatcc_json_parser_union_type_vector@@Base+0x3fb>
  41e395:	mov    rbp,r15
  41e398:	jmp    41e070 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41e39d:	nop    DWORD PTR [rax]
  41e3a0:	cmp    BYTE PTR [r15+0x1],0x20
  41e3a5:	jle    41e1e8 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
  41e3ab:	add    r15,0x1
  41e3af:	cmp    rbx,r15
  41e3b2:	jne    41e202 <flatcc_json_parser_union_type_vector@@Base+0x2d2>
  41e3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3c0:	mov    rbp,rbx
  41e3c3:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3d0:	lea    rbp,[r15+0x1]
  41e3d4:	mov    rax,rbx
  41e3d7:	sub    rax,rbp
  41e3da:	cmp    rax,0x1
  41e3de:	jle    41e3e9 <flatcc_json_parser_union_type_vector@@Base+0x4b9>
  41e3e0:	cmp    BYTE PTR [r15+0x1],0x20
  41e3e5:	jg     41e3fa <flatcc_json_parser_union_type_vector@@Base+0x4ca>
  41e3e7:	je     41e458 <flatcc_json_parser_union_type_vector@@Base+0x528>
  41e3e9:	mov    rsi,rbp
  41e3ec:	mov    rdx,rbx
  41e3ef:	mov    rdi,r12
  41e3f2:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41e3f7:	mov    rbp,rax
  41e3fa:	cmp    rbx,rbp
  41e3fd:	je     41e480 <flatcc_json_parser_union_type_vector@@Base+0x550>
  41e403:	cmp    BYTE PTR [rbp+0x0],0x5d
  41e407:	jne    41e128 <flatcc_json_parser_union_type_vector@@Base+0x1f8>
  41e40d:	lea    rsi,[rbp+0x1]
  41e411:	mov    rax,rbx
  41e414:	sub    rax,rsi
  41e417:	cmp    rax,0x1
  41e41b:	jle    41e429 <flatcc_json_parser_union_type_vector@@Base+0x4f9>
  41e41d:	cmp    BYTE PTR [rbp+0x1],0x20
  41e421:	jg     41e49b <flatcc_json_parser_union_type_vector@@Base+0x56b>
  41e423:	je     41e4b6 <flatcc_json_parser_union_type_vector@@Base+0x586>
  41e429:	mov    rdx,rbx
  41e42c:	mov    rdi,r12
  41e42f:	call   41b9b0 <flatcc_json_parser_space_ext@@Base>
  41e434:	mov    rbp,rax
  41e437:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e43c:	nop    DWORD PTR [rax+0x0]
  41e440:	cmp    BYTE PTR [r15+0x2],0x20
  41e445:	jle    41e359 <flatcc_json_parser_union_type_vector@@Base+0x429>
  41e44b:	lea    rbp,[r15+0x2]
  41e44f:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e454:	nop    DWORD PTR [rax+0x0]
  41e458:	cmp    BYTE PTR [r15+0x2],0x20
  41e45d:	jle    41e3e9 <flatcc_json_parser_union_type_vector@@Base+0x4b9>
  41e45f:	lea    rbp,[r15+0x2]
  41e463:	jmp    41e3fa <flatcc_json_parser_union_type_vector@@Base+0x4ca>
  41e465:	nop    DWORD PTR [rax]
  41e468:	mov    ecx,0xf
  41e46d:	mov    rdx,rbx
  41e470:	mov    rsi,r15
  41e473:	mov    rdi,r12
  41e476:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e47b:	jmp    41e083 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41e480:	mov    ecx,0x9
  41e485:	mov    rdx,rbx
  41e488:	mov    rsi,rbx
  41e48b:	mov    rdi,r12
  41e48e:	call   41b920 <flatcc_json_parser_set_error@@Base>
  41e493:	mov    rbp,rax
  41e496:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e49b:	mov    rbp,rsi
  41e49e:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e4a3:	cmp    BYTE PTR [rbp+0x2],0x20
  41e4a7:	jle    41e0e8 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
  41e4ad:	add    rbp,0x2
  41e4b1:	jmp    41e0f6 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  41e4b6:	cmp    BYTE PTR [rbp+0x2],0x20
  41e4ba:	jle    41e429 <flatcc_json_parser_union_type_vector@@Base+0x4f9>
  41e4c0:	add    rbp,0x2
  41e4c4:	jmp    41e008 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41e4c9:	add    QWORD PTR [rax+0x8],0x1
  41e4ce:	mov    rax,rbp
  41e4d1:	jmp    41e083 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41e4d6:	call   405070 <__stack_chk_fail@plt>
  41e4db:	lea    rcx,[rip+0x11bbe]        # 4300a0 <flatcc_builder_padding_base@@Base+0x1280>
  41e4e2:	lea    rsi,[rip+0x111e7]        # 42f6d0 <flatcc_builder_padding_base@@Base+0x8b0>
  41e4e9:	lea    rdi,[rip+0x114a2]        # 42f992 <flatcc_builder_padding_base@@Base+0xb72>
  41e4f0:	mov    edx,0x462
  41e4f5:	call   405080 <__assert_fail@plt>
  41e4fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e500 <flatcc_json_parser_struct_as_root@@Base>:
  41e500:	push   r14
  41e502:	push   r13
  41e504:	mov    r13,rdx
  41e507:	push   r12
  41e509:	push   rbp
  41e50a:	mov    edx,r8d
  41e50d:	push   rbx
  41e50e:	mov    rbx,rsi
  41e511:	mov    rbp,rdi
  41e514:	lea    r14,[r13+rcx*1+0x0]
  41e519:	sub    rsp,0x60
  41e51d:	mov    rax,QWORD PTR fs:0x28
  41e526:	mov    QWORD PTR [rsp+0x58],rax
  41e52b:	xor    eax,eax
  41e52d:	and    edx,0x4
  41e530:	mov    eax,0x2
  41e535:	mov    r12,QWORD PTR [rsp+0x90]
  41e53d:	cmovne edx,eax
  41e540:	lea    rax,[rsp+0x10]
  41e545:	test   rsi,rsi
  41e548:	mov    rsi,r9
  41e54b:	cmove  rbx,rax
  41e54f:	xor    eax,eax
  41e551:	lea    rdi,[rbx+0x8]
  41e555:	mov    rcx,rbx
  41e558:	mov    QWORD PTR [rbx+0x38],0x0
  41e560:	and    rdi,0xfffffffffffffff8
  41e564:	sub    rcx,rdi
  41e567:	add    ecx,0x40
  41e56a:	shr    ecx,0x3
  41e56d:	rep stos QWORD PTR es:[rdi],rax
  41e570:	mov    ecx,edx
  41e572:	mov    QWORD PTR [rbx],rbp
  41e575:	xor    edx,edx
  41e577:	mov    QWORD PTR [rbx+0x8],r13
  41e57b:	mov    DWORD PTR [rbx+0x14],0x1
  41e582:	mov    rdi,rbp
  41e585:	mov    DWORD PTR [rbx+0x10],r8d
  41e589:	mov    QWORD PTR [rbx+0x20],r13
  41e58d:	mov    QWORD PTR [rbx+0x28],r14
  41e591:	mov    QWORD PTR [rbx+0x30],r13
  41e595:	call   415c70 <flatcc_builder_start_buffer@@Base>
  41e59a:	test   eax,eax
  41e59c:	jne    41e600 <flatcc_json_parser_struct_as_root@@Base+0x100>
  41e59e:	lea    rcx,[rsp+0xc]
  41e5a3:	mov    rdx,r14
  41e5a6:	mov    rsi,r13
  41e5a9:	mov    rdi,rbx
  41e5ac:	call   r12
  41e5af:	mov    r12d,DWORD PTR [rbx+0x1c]
  41e5b3:	test   r12d,r12d
  41e5b6:	je     41e5e0 <flatcc_json_parser_struct_as_root@@Base+0xe0>
  41e5b8:	mov    rsi,QWORD PTR [rsp+0x58]
  41e5bd:	xor    rsi,QWORD PTR fs:0x28
  41e5c6:	mov    eax,r12d
  41e5c9:	jne    41e608 <flatcc_json_parser_struct_as_root@@Base+0x108>
  41e5cb:	add    rsp,0x60
  41e5cf:	pop    rbx
  41e5d0:	pop    rbp
  41e5d1:	pop    r12
  41e5d3:	pop    r13
  41e5d5:	pop    r14
  41e5d7:	ret    
  41e5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5e0:	mov    esi,DWORD PTR [rsp+0xc]
  41e5e4:	mov    rdi,rbp
  41e5e7:	call   415d50 <flatcc_builder_end_buffer@@Base>
  41e5ec:	test   eax,eax
  41e5ee:	je     41e600 <flatcc_json_parser_struct_as_root@@Base+0x100>
  41e5f0:	mov    QWORD PTR [rbx+0x38],r13
  41e5f4:	jmp    41e5b8 <flatcc_json_parser_struct_as_root@@Base+0xb8>
  41e5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e600:	mov    r12d,0xffffffff
  41e606:	jmp    41e5b8 <flatcc_json_parser_struct_as_root@@Base+0xb8>
  41e608:	call   405070 <__stack_chk_fail@plt>
  41e60d:	nop    DWORD PTR [rax]

000000000041e610 <flatcc_json_parser_table_as_root@@Base>:
  41e610:	jmp    41e500 <flatcc_json_parser_struct_as_root@@Base>
  41e615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e61f:	nop
  41e620:	cmp    di,0x3e7
  41e625:	mov    edx,edi
  41e627:	jbe    41e6a0 <flatcc_json_parser_table_as_root@@Base+0x90>
  41e629:	cmp    di,0x270f
  41e62e:	ja     41e710 <flatcc_json_parser_table_as_root@@Base+0x100>
  41e634:	mov    edx,edi
  41e636:	lea    r9,[rip+0x12ce3]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e63d:	mov    BYTE PTR [rsi+0x4],0x0
  41e641:	shr    dx,0x2
  41e645:	lea    rcx,[rsi+0x2]
  41e649:	movzx  edx,dx
  41e64c:	imul   edx,edx,0x147b
  41e652:	shr    edx,0x11
  41e655:	lea    eax,[rdx*4+0x0]
  41e65c:	add    eax,edx
  41e65e:	lea    r8d,[rax*4+0x0]
  41e666:	add    eax,r8d
  41e669:	shl    eax,0x2
  41e66c:	sub    edi,eax
  41e66e:	add    rdi,rdi
  41e671:	and    edi,0x1fffe
  41e677:	movzx  eax,WORD PTR [r9+rdi*1]
  41e67c:	mov    WORD PTR [rsi+0x2],ax
  41e680:	mov    eax,0x4
  41e685:	add    rdx,rdx
  41e688:	and    edx,0x1fffe
  41e68e:	movzx  edx,WORD PTR [r9+rdx*1]
  41e693:	mov    WORD PTR [rcx-0x2],dx
  41e697:	ret    
  41e698:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6a0:	cmp    di,0x63
  41e6a4:	jbe    41e768 <flatcc_json_parser_table_as_root@@Base+0x158>
  41e6aa:	lea    r8,[rsi+0x3]
  41e6ae:	lea    r9,[rip+0x12c6b]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e6b5:	mov    BYTE PTR [rsi+0x3],0x0
  41e6b9:	mov    eax,0x3
  41e6be:	mov    ecx,edx
  41e6c0:	lea    rdi,[r8-0x2]
  41e6c4:	shr    cx,0x2
  41e6c8:	movzx  ecx,cx
  41e6cb:	imul   ecx,ecx,0x147b
  41e6d1:	shr    ecx,0x11
  41e6d4:	lea    esi,[rcx*4+0x0]
  41e6db:	add    esi,ecx
  41e6dd:	lea    r10d,[rsi*4+0x0]
  41e6e5:	add    esi,r10d
  41e6e8:	shl    esi,0x2
  41e6eb:	sub    edx,esi
  41e6ed:	lea    rsi,[rdx+rdx*1]
  41e6f1:	mov    edx,ecx
  41e6f3:	and    esi,0x1fffe
  41e6f9:	movzx  ecx,WORD PTR [r9+rsi*1]
  41e6fe:	mov    WORD PTR [r8-0x2],cx
  41e703:	add    edx,0x30
  41e706:	mov    BYTE PTR [rdi-0x1],dl
  41e709:	ret    
  41e70a:	nop    WORD PTR [rax+rax*1+0x0]
  41e710:	mov    edx,edi
  41e712:	lea    r9,[rip+0x12c07]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e719:	mov    BYTE PTR [rsi+0x5],0x0
  41e71d:	shr    dx,0x2
  41e721:	lea    r8,[rsi+0x3]
  41e725:	movzx  edx,dx
  41e728:	imul   edx,edx,0x147b
  41e72e:	shr    edx,0x11
  41e731:	lea    eax,[rdx*4+0x0]
  41e738:	add    eax,edx
  41e73a:	lea    ecx,[rax*4+0x0]
  41e741:	add    eax,ecx
  41e743:	shl    eax,0x2
  41e746:	sub    edi,eax
  41e748:	add    rdi,rdi
  41e74b:	and    edi,0x1fffe
  41e751:	movzx  eax,WORD PTR [r9+rdi*1]
  41e756:	mov    WORD PTR [rsi+0x3],ax
  41e75a:	mov    eax,0x5
  41e75f:	jmp    41e6be <flatcc_json_parser_table_as_root@@Base+0xae>
  41e764:	nop    DWORD PTR [rax+0x0]
  41e768:	cmp    di,0x9
  41e76c:	jbe    41e790 <flatcc_json_parser_table_as_root@@Base+0x180>
  41e76e:	lea    rcx,[rsi+0x2]
  41e772:	mov    BYTE PTR [rsi+0x2],0x0
  41e776:	mov    eax,0x2
  41e77b:	lea    r9,[rip+0x12b9e]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e782:	jmp    41e685 <flatcc_json_parser_table_as_root@@Base+0x75>
  41e787:	nop    WORD PTR [rax+rax*1+0x0]
  41e790:	lea    rdi,[rsi+0x1]
  41e794:	mov    BYTE PTR [rsi+0x1],0x0
  41e798:	mov    eax,0x1
  41e79d:	jmp    41e703 <flatcc_json_parser_table_as_root@@Base+0xf3>
  41e7a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e7ad:	nop    DWORD PTR [rax]
  41e7b0:	cmp    edi,0x270f
  41e7b6:	jbe    41e880 <flatcc_json_parser_table_as_root@@Base+0x270>
  41e7bc:	cmp    edi,0x98967f
  41e7c2:	jbe    41e8d0 <flatcc_json_parser_table_as_root@@Base+0x2c0>
  41e7c8:	cmp    edi,0x3b9ac9ff
  41e7ce:	jbe    41e990 <flatcc_json_parser_table_as_root@@Base+0x380>
  41e7d4:	mov    eax,edi
  41e7d6:	mov    edx,0x51eb851f
  41e7db:	lea    rcx,[rip+0x12b3e]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e7e2:	mul    edx
  41e7e4:	mov    BYTE PTR [rsi+0xa],0x0
  41e7e8:	lea    r8,[rsi+0x8]
  41e7ec:	shr    edx,0x5
  41e7ef:	imul   eax,edx,0x64
  41e7f2:	sub    edi,eax
  41e7f4:	lea    eax,[rdi+rdi*1]
  41e7f7:	mov    edi,edx
  41e7f9:	movzx  eax,WORD PTR [rcx+rax*1]
  41e7fd:	mov    WORD PTR [rsi+0x8],ax
  41e801:	mov    esi,0xa
  41e806:	mov    eax,edi
  41e808:	mov    edx,0x51eb851f
  41e80d:	lea    r9,[r8-0x2]
  41e811:	mul    edx
  41e813:	shr    edx,0x5
  41e816:	imul   eax,edx,0x64
  41e819:	sub    edi,eax
  41e81b:	lea    eax,[rdi+rdi*1]
  41e81e:	mov    edi,edx
  41e820:	movzx  eax,WORD PTR [rcx+rax*1]
  41e824:	mov    WORD PTR [r8-0x2],ax
  41e829:	mov    eax,edi
  41e82b:	mov    edx,0x51eb851f
  41e830:	lea    r8,[r9-0x2]
  41e834:	mul    edx
  41e836:	shr    edx,0x5
  41e839:	imul   eax,edx,0x64
  41e83c:	sub    edi,eax
  41e83e:	lea    eax,[rdi+rdi*1]
  41e841:	mov    edi,edx
  41e843:	movzx  eax,WORD PTR [rcx+rax*1]
  41e847:	mov    WORD PTR [r9-0x2],ax
  41e84c:	mov    eax,edi
  41e84e:	mov    edx,0x51eb851f
  41e853:	lea    r9,[r8-0x2]
  41e857:	mul    edx
  41e859:	shr    edx,0x5
  41e85c:	imul   eax,edx,0x64
  41e85f:	sub    edi,eax
  41e861:	lea    eax,[rdi+rdi*1]
  41e864:	mov    edi,edx
  41e866:	movzx  eax,WORD PTR [rcx+rax*1]
  41e86a:	mov    WORD PTR [r8-0x2],ax
  41e86f:	add    edi,edi
  41e871:	movzx  eax,WORD PTR [rcx+rdi*1]
  41e875:	mov    WORD PTR [r9-0x2],ax
  41e87a:	mov    eax,esi
  41e87c:	ret    
  41e87d:	nop    DWORD PTR [rax]
  41e880:	cmp    edi,0x63
  41e883:	jbe    41e8b0 <flatcc_json_parser_table_as_root@@Base+0x2a0>
  41e885:	cmp    edi,0x3e7
  41e88b:	jbe    41e968 <flatcc_json_parser_table_as_root@@Base+0x358>
  41e891:	lea    r8,[rsi+0x4]
  41e895:	mov    BYTE PTR [rsi+0x4],0x0
  41e899:	lea    rcx,[rip+0x12a80]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e8a0:	mov    esi,0x4
  41e8a5:	jmp    41e84c <flatcc_json_parser_table_as_root@@Base+0x23c>
  41e8a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e8b0:	cmp    edi,0x9
  41e8b3:	jbe    41e980 <flatcc_json_parser_table_as_root@@Base+0x370>
  41e8b9:	lea    r9,[rsi+0x2]
  41e8bd:	mov    BYTE PTR [rsi+0x2],0x0
  41e8c1:	lea    rcx,[rip+0x12a58]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e8c8:	mov    esi,0x2
  41e8cd:	jmp    41e86f <flatcc_json_parser_table_as_root@@Base+0x25f>
  41e8cf:	nop
  41e8d0:	cmp    edi,0xf423f
  41e8d6:	jbe    41e9d8 <flatcc_json_parser_table_as_root@@Base+0x3c8>
  41e8dc:	lea    rcx,[rip+0x12a3d]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e8e3:	lea    r8,[rsi+0x7]
  41e8e7:	mov    BYTE PTR [rsi+0x7],0x0
  41e8eb:	mov    esi,0x7
  41e8f0:	mov    eax,edi
  41e8f2:	mov    edx,0x51eb851f
  41e8f7:	lea    r9,[r8-0x2]
  41e8fb:	mul    edx
  41e8fd:	shr    edx,0x5
  41e900:	imul   eax,edx,0x64
  41e903:	sub    edi,eax
  41e905:	lea    eax,[rdi+rdi*1]
  41e908:	mov    edi,edx
  41e90a:	movzx  eax,WORD PTR [rcx+rax*1]
  41e90e:	mov    WORD PTR [r8-0x2],ax
  41e913:	mov    eax,edi
  41e915:	mov    edx,0x51eb851f
  41e91a:	lea    r8,[r9-0x2]
  41e91e:	mul    edx
  41e920:	shr    edx,0x5
  41e923:	imul   eax,edx,0x64
  41e926:	sub    edi,eax
  41e928:	lea    eax,[rdi+rdi*1]
  41e92b:	mov    edi,edx
  41e92d:	movzx  eax,WORD PTR [rcx+rax*1]
  41e931:	mov    WORD PTR [r9-0x2],ax
  41e936:	mov    eax,edi
  41e938:	mov    edx,0x51eb851f
  41e93d:	lea    r9,[r8-0x2]
  41e941:	mul    edx
  41e943:	shr    edx,0x5
  41e946:	imul   eax,edx,0x64
  41e949:	sub    edi,eax
  41e94b:	lea    eax,[rdi+rdi*1]
  41e94e:	mov    edi,edx
  41e950:	movzx  eax,WORD PTR [rcx+rax*1]
  41e954:	mov    WORD PTR [r8-0x2],ax
  41e959:	add    edi,0x30
  41e95c:	mov    eax,esi
  41e95e:	mov    BYTE PTR [r9-0x1],dil
  41e962:	ret    
  41e963:	nop    DWORD PTR [rax+rax*1+0x0]
  41e968:	lea    r8,[rsi+0x3]
  41e96c:	mov    BYTE PTR [rsi+0x3],0x0
  41e970:	lea    rcx,[rip+0x129a9]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e977:	mov    esi,0x3
  41e97c:	jmp    41e936 <flatcc_json_parser_table_as_root@@Base+0x326>
  41e97e:	xchg   ax,ax
  41e980:	lea    r9,[rsi+0x1]
  41e984:	mov    BYTE PTR [rsi+0x1],0x0
  41e988:	mov    esi,0x1
  41e98d:	jmp    41e959 <flatcc_json_parser_table_as_root@@Base+0x349>
  41e98f:	nop
  41e990:	cmp    edi,0x5f5e0ff
  41e996:	jbe    41ea20 <flatcc_json_parser_table_as_root@@Base+0x410>
  41e99c:	mov    eax,edi
  41e99e:	mov    edx,0x51eb851f
  41e9a3:	lea    rcx,[rip+0x12976]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e9aa:	mul    edx
  41e9ac:	mov    BYTE PTR [rsi+0x9],0x0
  41e9b0:	lea    r8,[rsi+0x7]
  41e9b4:	shr    edx,0x5
  41e9b7:	imul   eax,edx,0x64
  41e9ba:	sub    edi,eax
  41e9bc:	lea    eax,[rdi+rdi*1]
  41e9bf:	mov    edi,edx
  41e9c1:	movzx  eax,WORD PTR [rcx+rax*1]
  41e9c5:	mov    WORD PTR [rsi+0x7],ax
  41e9c9:	mov    esi,0x9
  41e9ce:	jmp    41e8f0 <flatcc_json_parser_table_as_root@@Base+0x2e0>
  41e9d3:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9d8:	cmp    edi,0x1869f
  41e9de:	jbe    41ea00 <flatcc_json_parser_table_as_root@@Base+0x3f0>
  41e9e0:	lea    r9,[rsi+0x6]
  41e9e4:	mov    BYTE PTR [rsi+0x6],0x0
  41e9e8:	lea    rcx,[rip+0x12931]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41e9ef:	mov    esi,0x6
  41e9f4:	jmp    41e829 <flatcc_json_parser_table_as_root@@Base+0x219>
  41e9f9:	nop    DWORD PTR [rax+0x0]
  41ea00:	lea    r9,[rsi+0x5]
  41ea04:	mov    BYTE PTR [rsi+0x5],0x0
  41ea08:	lea    rcx,[rip+0x12911]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ea0f:	mov    esi,0x5
  41ea14:	jmp    41e913 <flatcc_json_parser_table_as_root@@Base+0x303>
  41ea19:	nop    DWORD PTR [rax+0x0]
  41ea20:	lea    r8,[rsi+0x8]
  41ea24:	mov    BYTE PTR [rsi+0x8],0x0
  41ea28:	lea    rcx,[rip+0x128f1]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ea2f:	mov    esi,0x8
  41ea34:	jmp    41e806 <flatcc_json_parser_table_as_root@@Base+0x1f6>
  41ea39:	nop    DWORD PTR [rax+0x0]
  41ea40:	cmp    rdi,0x3b9ac9ff
  41ea47:	jbe    41eda0 <flatcc_json_parser_table_as_root@@Base+0x790>
  41ea4d:	movabs rax,0x9184e729fff
  41ea57:	cmp    rdi,rax
  41ea5a:	jbe    41ec20 <flatcc_json_parser_table_as_root@@Base+0x610>
  41ea60:	movabs rax,0x2386f26fc0ffff
  41ea6a:	cmp    rdi,rax
  41ea6d:	jbe    41eda8 <flatcc_json_parser_table_as_root@@Base+0x798>
  41ea73:	movabs rax,0xde0b6b3a763ffff
  41ea7d:	cmp    rdi,rax
  41ea80:	jbe    41ef50 <flatcc_json_parser_table_as_root@@Base+0x940>
  41ea86:	movabs rax,0x8ac7230489e7ffff
  41ea90:	cmp    rdi,rax
  41ea93:	jbe    41ee60 <flatcc_json_parser_table_as_root@@Base+0x850>
  41ea99:	mov    rdx,rdi
  41ea9c:	movabs rcx,0x28f5c28f5c28f5c3
  41eaa6:	lea    r8,[rip+0x12873]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41eaad:	shr    rdx,0x2
  41eab1:	mov    BYTE PTR [rsi+0x14],0x0
  41eab5:	lea    r10,[rsi+0x12]
  41eab9:	mov    rax,rdx
  41eabc:	mov    r9d,0x14
  41eac2:	mul    rcx
  41eac5:	shr    rdx,0x2
  41eac9:	lea    rax,[rdx+rdx*4]
  41eacd:	lea    rax,[rax+rax*4]
  41ead1:	shl    rax,0x2
  41ead5:	sub    rdi,rax
  41ead8:	mov    rax,rdi
  41eadb:	mov    rdi,rdx
  41eade:	movzx  eax,WORD PTR [r8+rax*2]
  41eae3:	mov    WORD PTR [rsi+0x12],ax
  41eae7:	mov    rdx,rdi
  41eaea:	movabs rsi,0x28f5c28f5c28f5c3
  41eaf4:	lea    rcx,[r10-0x2]
  41eaf8:	shr    rdx,0x2
  41eafc:	mov    rax,rdx
  41eaff:	mul    rsi
  41eb02:	shr    rdx,0x2
  41eb06:	lea    rax,[rdx+rdx*4]
  41eb0a:	lea    rax,[rax+rax*4]
  41eb0e:	shl    rax,0x2
  41eb12:	sub    rdi,rax
  41eb15:	mov    rax,rdi
  41eb18:	mov    rdi,rdx
  41eb1b:	movzx  eax,WORD PTR [r8+rax*2]
  41eb20:	mov    WORD PTR [r10-0x2],ax
  41eb25:	mov    rdx,rdi
  41eb28:	movabs rsi,0x28f5c28f5c28f5c3
  41eb32:	lea    r10,[rcx-0x2]
  41eb36:	shr    rdx,0x2
  41eb3a:	mov    rax,rdx
  41eb3d:	mul    rsi
  41eb40:	shr    rdx,0x2
  41eb44:	lea    rax,[rdx+rdx*4]
  41eb48:	lea    rax,[rax+rax*4]
  41eb4c:	shl    rax,0x2
  41eb50:	sub    rdi,rax
  41eb53:	mov    rax,rdi
  41eb56:	mov    rdi,rdx
  41eb59:	movzx  eax,WORD PTR [r8+rax*2]
  41eb5e:	mov    WORD PTR [rcx-0x2],ax
  41eb62:	mov    rdx,rdi
  41eb65:	movabs rsi,0x28f5c28f5c28f5c3
  41eb6f:	lea    rcx,[r10-0x2]
  41eb73:	shr    rdx,0x2
  41eb77:	mov    rax,rdx
  41eb7a:	mul    rsi
  41eb7d:	shr    rdx,0x2
  41eb81:	lea    rax,[rdx+rdx*4]
  41eb85:	lea    rax,[rax+rax*4]
  41eb89:	shl    rax,0x2
  41eb8d:	sub    rdi,rax
  41eb90:	mov    rax,rdi
  41eb93:	mov    rdi,rdx
  41eb96:	movzx  eax,WORD PTR [r8+rax*2]
  41eb9b:	mov    WORD PTR [r10-0x2],ax
  41eba0:	mov    rdx,rdi
  41eba3:	movabs rsi,0x28f5c28f5c28f5c3
  41ebad:	lea    r10,[rcx-0x2]
  41ebb1:	shr    rdx,0x2
  41ebb5:	mov    rax,rdx
  41ebb8:	mul    rsi
  41ebbb:	shr    rdx,0x2
  41ebbf:	lea    rax,[rdx+rdx*4]
  41ebc3:	lea    rax,[rax+rax*4]
  41ebc7:	shl    rax,0x2
  41ebcb:	sub    rdi,rax
  41ebce:	mov    rax,rdi
  41ebd1:	mov    rdi,rdx
  41ebd4:	movzx  eax,WORD PTR [r8+rax*2]
  41ebd9:	mov    WORD PTR [rcx-0x2],ax
  41ebdd:	mov    rdx,rdi
  41ebe0:	movabs rcx,0x28f5c28f5c28f5c3
  41ebea:	lea    rsi,[r10-0x2]
  41ebee:	shr    rdx,0x2
  41ebf2:	mov    rax,rdx
  41ebf5:	mul    rcx
  41ebf8:	mov    rcx,rdx
  41ebfb:	shr    rcx,0x2
  41ebff:	lea    rax,[rcx+rcx*4]
  41ec03:	lea    rax,[rax+rax*4]
  41ec07:	shl    rax,0x2
  41ec0b:	sub    rdi,rax
  41ec0e:	movzx  eax,WORD PTR [r8+rdi*2]
  41ec13:	mov    WORD PTR [r10-0x2],ax
  41ec18:	jmp    41ecd9 <flatcc_json_parser_table_as_root@@Base+0x6c9>
  41ec1d:	nop    DWORD PTR [rax]
  41ec20:	movabs rax,0x174876e7ff
  41ec2a:	cmp    rdi,rax
  41ec2d:	ja     41edf0 <flatcc_json_parser_table_as_root@@Base+0x7e0>
  41ec33:	movabs rax,0x2540be3ff
  41ec3d:	cmp    rdi,rax
  41ec40:	jbe    41ef80 <flatcc_json_parser_table_as_root@@Base+0x970>
  41ec46:	lea    r10,[rsi+0xb]
  41ec4a:	lea    r8,[rip+0x126cf]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ec51:	mov    BYTE PTR [rsi+0xb],0x0
  41ec55:	mov    r9d,0xb
  41ec5b:	mov    rdx,rdi
  41ec5e:	movabs rcx,0x28f5c28f5c28f5c3
  41ec68:	mov    rsi,rdi
  41ec6b:	shr    rdx,0x2
  41ec6f:	shr    rdi,0x3
  41ec73:	mov    rax,rdx
  41ec76:	mul    rcx
  41ec79:	mov    rcx,rdx
  41ec7c:	movabs rdx,0xcccccccccccccccd
  41ec86:	shr    rcx,0x2
  41ec8a:	lea    rax,[rcx+rcx*4]
  41ec8e:	lea    rax,[rax+rax*4]
  41ec92:	shl    rax,0x2
  41ec96:	sub    rsi,rax
  41ec99:	movzx  eax,WORD PTR [r8+rsi*2]
  41ec9e:	lea    rsi,[r10-0x3]
  41eca2:	mov    WORD PTR [r10-0x2],ax
  41eca7:	mov    rax,rcx
  41ecaa:	mul    rdx
  41ecad:	shr    rdx,0x3
  41ecb1:	lea    rax,[rdx+rdx*4]
  41ecb5:	movabs rdx,0x20c49ba5e353f7cf
  41ecbf:	add    rax,rax
  41ecc2:	sub    rcx,rax
  41ecc5:	mov    rax,rdi
  41ecc8:	mul    rdx
  41eccb:	add    ecx,0x30
  41ecce:	mov    BYTE PTR [r10-0x3],cl
  41ecd2:	mov    rcx,rdx
  41ecd5:	shr    rcx,0x4
  41ecd9:	mov    rdx,rcx
  41ecdc:	movabs rdi,0x28f5c28f5c28f5c3
  41ece6:	mov    r11,rcx
  41ece9:	shr    rdx,0x2
  41eced:	mov    rax,rdx
  41ecf0:	mul    rdi
  41ecf3:	mov    r10,rdx
  41ecf6:	shr    rdx,0x4
  41ecfa:	shr    r10,0x2
  41ecfe:	lea    rax,[r10+r10*4]
  41ed02:	lea    rax,[rax+rax*4]
  41ed06:	shl    rax,0x2
  41ed0a:	sub    r11,rax
  41ed0d:	movzx  eax,WORD PTR [r8+r11*2]
  41ed12:	mov    WORD PTR [rsi-0x2],ax
  41ed16:	mov    rax,rdx
  41ed19:	mul    rdi
  41ed1c:	shr    rdx,0x2
  41ed20:	lea    rax,[rdx+rdx*4]
  41ed24:	movabs rdx,0x346dc5d63886594b
  41ed2e:	lea    rax,[rax+rax*4]
  41ed32:	shl    rax,0x2
  41ed36:	sub    r10,rax
  41ed39:	movzx  eax,WORD PTR [r8+r10*2]
  41ed3e:	mov    WORD PTR [rsi-0x4],ax
  41ed42:	mov    rax,rcx
  41ed45:	mul    rdx
  41ed48:	mov    r10,rdx
  41ed4b:	shr    rdx,0xd
  41ed4f:	mov    rax,rdx
  41ed52:	shr    r10,0xb
  41ed56:	mul    rdi
  41ed59:	shr    rdx,0x2
  41ed5d:	lea    rax,[rdx+rdx*4]
  41ed61:	movabs rdx,0x431bde82d7b634db
  41ed6b:	lea    rax,[rax+rax*4]
  41ed6f:	shl    rax,0x2
  41ed73:	sub    r10,rax
  41ed76:	movzx  eax,WORD PTR [r8+r10*2]
  41ed7b:	mov    WORD PTR [rsi-0x6],ax
  41ed7f:	mov    rax,rcx
  41ed82:	mul    rdx
  41ed85:	shr    rdx,0x12
  41ed89:	movzx  eax,WORD PTR [r8+rdx*2]
  41ed8e:	mov    WORD PTR [rsi-0x8],ax
  41ed92:	mov    eax,r9d
  41ed95:	ret    
  41ed96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eda0:	jmp    41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  41eda5:	nop    DWORD PTR [rax]
  41eda8:	movabs rax,0x38d7ea4c67fff
  41edb2:	cmp    rdi,rax
  41edb5:	ja     41ef30 <flatcc_json_parser_table_as_root@@Base+0x920>
  41edbb:	movabs rax,0x5af3107a3fff
  41edc5:	cmp    rdi,rax
  41edc8:	jbe    41efe0 <flatcc_json_parser_table_as_root@@Base+0x9d0>
  41edce:	lea    r10,[rsi+0xf]
  41edd2:	mov    BYTE PTR [rsi+0xf],0x0
  41edd6:	mov    r9d,0xf
  41eddc:	lea    r8,[rip+0x1253d]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ede3:	jmp    41eeeb <flatcc_json_parser_table_as_root@@Base+0x8db>
  41ede8:	nop    DWORD PTR [rax+rax*1+0x0]
  41edf0:	movabs rax,0xe8d4a50fff
  41edfa:	cmp    rdi,rax
  41edfd:	jbe    41efa0 <flatcc_json_parser_table_as_root@@Base+0x990>
  41ee03:	lea    rcx,[rsi+0xd]
  41ee07:	lea    r8,[rip+0x12512]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ee0e:	mov    BYTE PTR [rsi+0xd],0x0
  41ee12:	mov    r9d,0xd
  41ee18:	mov    rdx,rdi
  41ee1b:	movabs rsi,0x28f5c28f5c28f5c3
  41ee25:	lea    r10,[rcx-0x2]
  41ee29:	shr    rdx,0x2
  41ee2d:	mov    rax,rdx
  41ee30:	mul    rsi
  41ee33:	shr    rdx,0x2
  41ee37:	lea    rax,[rdx+rdx*4]
  41ee3b:	lea    rax,[rax+rax*4]
  41ee3f:	shl    rax,0x2
  41ee43:	sub    rdi,rax
  41ee46:	mov    rax,rdi
  41ee49:	mov    rdi,rdx
  41ee4c:	movzx  eax,WORD PTR [r8+rax*2]
  41ee51:	mov    WORD PTR [rcx-0x2],ax
  41ee55:	jmp    41ec5b <flatcc_json_parser_table_as_root@@Base+0x64b>
  41ee5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ee60:	mov    rdx,rdi
  41ee63:	movabs r8,0x28f5c28f5c28f5c3
  41ee6d:	mov    BYTE PTR [rsi+0x13],0x0
  41ee71:	shr    rdx,0x2
  41ee75:	lea    rcx,[rsi+0x11]
  41ee79:	mov    r9d,0x13
  41ee7f:	mov    rax,rdx
  41ee82:	mul    r8
  41ee85:	lea    r8,[rip+0x12494]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ee8c:	shr    rdx,0x2
  41ee90:	lea    rax,[rdx+rdx*4]
  41ee94:	lea    rax,[rax+rax*4]
  41ee98:	shl    rax,0x2
  41ee9c:	sub    rdi,rax
  41ee9f:	mov    rax,rdi
  41eea2:	mov    rdi,rdx
  41eea5:	movzx  eax,WORD PTR [r8+rax*2]
  41eeaa:	mov    WORD PTR [rsi+0x11],ax
  41eeae:	mov    rdx,rdi
  41eeb1:	movabs rsi,0x28f5c28f5c28f5c3
  41eebb:	lea    r10,[rcx-0x2]
  41eebf:	shr    rdx,0x2
  41eec3:	mov    rax,rdx
  41eec6:	mul    rsi
  41eec9:	shr    rdx,0x2
  41eecd:	lea    rax,[rdx+rdx*4]
  41eed1:	lea    rax,[rax+rax*4]
  41eed5:	shl    rax,0x2
  41eed9:	sub    rdi,rax
  41eedc:	mov    rax,rdi
  41eedf:	mov    rdi,rdx
  41eee2:	movzx  eax,WORD PTR [r8+rax*2]
  41eee7:	mov    WORD PTR [rcx-0x2],ax
  41eeeb:	mov    rdx,rdi
  41eeee:	movabs rsi,0x28f5c28f5c28f5c3
  41eef8:	lea    rcx,[r10-0x2]
  41eefc:	shr    rdx,0x2
  41ef00:	mov    rax,rdx
  41ef03:	mul    rsi
  41ef06:	shr    rdx,0x2
  41ef0a:	lea    rax,[rdx+rdx*4]
  41ef0e:	lea    rax,[rax+rax*4]
  41ef12:	shl    rax,0x2
  41ef16:	sub    rdi,rax
  41ef19:	mov    rax,rdi
  41ef1c:	mov    rdi,rdx
  41ef1f:	movzx  eax,WORD PTR [r8+rax*2]
  41ef24:	mov    WORD PTR [r10-0x2],ax
  41ef29:	jmp    41ee18 <flatcc_json_parser_table_as_root@@Base+0x808>
  41ef2e:	xchg   ax,ax
  41ef30:	lea    rcx,[rsi+0x10]
  41ef34:	mov    BYTE PTR [rsi+0x10],0x0
  41ef38:	mov    r9d,0x10
  41ef3e:	lea    r8,[rip+0x123db]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ef45:	jmp    41eb25 <flatcc_json_parser_table_as_root@@Base+0x515>
  41ef4a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef50:	movabs rax,0x16345785d89ffff
  41ef5a:	cmp    rdi,rax
  41ef5d:	jbe    41efc0 <flatcc_json_parser_table_as_root@@Base+0x9b0>
  41ef5f:	lea    r10,[rsi+0x12]
  41ef63:	mov    BYTE PTR [rsi+0x12],0x0
  41ef67:	mov    r9d,0x12
  41ef6d:	lea    r8,[rip+0x123ac]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ef74:	jmp    41eae7 <flatcc_json_parser_table_as_root@@Base+0x4d7>
  41ef79:	nop    DWORD PTR [rax+0x0]
  41ef80:	lea    r10,[rsi+0xa]
  41ef84:	mov    BYTE PTR [rsi+0xa],0x0
  41ef88:	mov    r9d,0xa
  41ef8e:	lea    r8,[rip+0x1238b]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41ef95:	jmp    41ebdd <flatcc_json_parser_table_as_root@@Base+0x5cd>
  41ef9a:	nop    WORD PTR [rax+rax*1+0x0]
  41efa0:	lea    rcx,[rsi+0xc]
  41efa4:	mov    BYTE PTR [rsi+0xc],0x0
  41efa8:	mov    r9d,0xc
  41efae:	lea    r8,[rip+0x1236b]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41efb5:	jmp    41eba0 <flatcc_json_parser_table_as_root@@Base+0x590>
  41efba:	nop    WORD PTR [rax+rax*1+0x0]
  41efc0:	lea    rcx,[rsi+0x11]
  41efc4:	mov    BYTE PTR [rsi+0x11],0x0
  41efc8:	mov    r9d,0x11
  41efce:	lea    r8,[rip+0x1234b]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41efd5:	jmp    41eeae <flatcc_json_parser_table_as_root@@Base+0x89e>
  41efda:	nop    WORD PTR [rax+rax*1+0x0]
  41efe0:	lea    r10,[rsi+0xe]
  41efe4:	mov    BYTE PTR [rsi+0xe],0x0
  41efe8:	mov    r9d,0xe
  41efee:	lea    r8,[rip+0x1232b]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41eff5:	jmp    41eb62 <flatcc_json_parser_table_as_root@@Base+0x552>
  41effa:	nop    WORD PTR [rax+rax*1+0x0]
  41f000:	push   r12
  41f002:	push   rbp
  41f003:	mov    r11,rdx
  41f006:	push   rbx
  41f007:	mov    r12,QWORD PTR [rsp+0x20]
  41f00c:	sub    r11,r12
  41f00f:	cmp    r11,r8
  41f012:	jbe    41f0e0 <flatcc_json_parser_table_as_root@@Base+0xad0>
  41f018:	mov    rax,rcx
  41f01b:	sub    rax,r8
  41f01e:	cmp    r9,rax
  41f021:	ja     41f0e8 <flatcc_json_parser_table_as_root@@Base+0xad8>
  41f027:	mov    rax,rcx
  41f02a:	movsxd r10,esi
  41f02d:	sub    rax,r9
  41f030:	lea    rbx,[rdi+r10*1-0x1]
  41f035:	sub    rax,r8
  41f038:	nop    DWORD PTR [rax+rax*1+0x0]
  41f040:	lea    r10,[r9+r8*1]
  41f044:	cmp    r11,r10
  41f047:	ja     41f0a0 <flatcc_json_parser_table_as_root@@Base+0xa90>
  41f049:	mov    rbx,r11
  41f04c:	mov    rax,r10
  41f04f:	sub    rbx,r8
  41f052:	sub    rax,r11
  41f055:	cmp    rbx,rax
  41f058:	jb     41f0e0 <flatcc_json_parser_table_as_root@@Base+0xad0>
  41f05e:	movsxd rsi,esi
  41f061:	sub    BYTE PTR [rdi+rsi*1-0x1],0x1
  41f066:	add    rdx,r12
  41f069:	cmp    rdx,r10
  41f06c:	jbe    41f090 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41f06e:	mov    rax,rcx
  41f071:	sub    rax,r10
  41f074:	cmp    r9,rax
  41f077:	ja     41f090 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41f079:	add    r9,r10
  41f07c:	cmp    rdx,r9
  41f07f:	ja     41f099 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41f081:	mov    rax,rdx
  41f084:	sub    r9,rdx
  41f087:	sub    rax,r10
  41f08a:	cmp    rax,r9
  41f08d:	ja     41f099 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41f08f:	nop
  41f090:	lea    rax,[r12+r12*1]
  41f094:	cmp    rax,r10
  41f097:	jbe    41f0c0 <flatcc_json_parser_table_as_root@@Base+0xab0>
  41f099:	pop    rbx
  41f09a:	xor    eax,eax
  41f09c:	pop    rbp
  41f09d:	pop    r12
  41f09f:	ret    
  41f0a0:	mov    rbp,rax
  41f0a3:	sub    BYTE PTR [rbx],0x1
  41f0a6:	mov    r8,r10
  41f0a9:	sub    rbp,r9
  41f0ac:	cmp    r9,rax
  41f0af:	ja     41f090 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41f0b1:	mov    rax,rbp
  41f0b4:	jmp    41f040 <flatcc_json_parser_table_as_root@@Base+0xa30>
  41f0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0c0:	shl    r12,0x2
  41f0c4:	mov    eax,0x1
  41f0c9:	sub    rcx,r12
  41f0cc:	cmp    rcx,r10
  41f0cf:	jb     41f099 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41f0d1:	pop    rbx
  41f0d2:	pop    rbp
  41f0d3:	pop    r12
  41f0d5:	ret    
  41f0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0e0:	mov    r10,r8
  41f0e3:	jmp    41f066 <flatcc_json_parser_table_as_root@@Base+0xa56>
  41f0e8:	mov    r10,r8
  41f0eb:	jmp    41f090 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41f0ed:	nop    DWORD PTR [rax]
  41f0f0:	test   edi,edi
  41f0f2:	mov    rcx,rsi
  41f0f5:	js     41f188 <flatcc_json_parser_table_as_root@@Base+0xb78>
  41f0fb:	mov    r8,rcx
  41f0fe:	mov    r9d,0x66666667
  41f104:	nop    DWORD PTR [rax+0x0]
  41f108:	mov    eax,edi
  41f10a:	add    r8,0x1
  41f10e:	imul   r9d
  41f111:	mov    eax,edi
  41f113:	sar    eax,0x1f
  41f116:	sar    edx,0x2
  41f119:	sub    edx,eax
  41f11b:	lea    eax,[rdx+rdx*4]
  41f11e:	add    eax,eax
  41f120:	sub    edi,eax
  41f122:	add    edi,0x30
  41f125:	test   edx,edx
  41f127:	mov    BYTE PTR [r8-0x1],dil
  41f12b:	mov    edi,edx
  41f12d:	jne    41f108 <flatcc_json_parser_table_as_root@@Base+0xaf8>
  41f12f:	mov    rdi,r8
  41f132:	mov    BYTE PTR [r8],0x0
  41f136:	sub    rdi,rcx
  41f139:	mov    eax,edi
  41f13b:	shr    eax,0x1f
  41f13e:	add    eax,edi
  41f140:	sar    eax,1
  41f142:	test   eax,eax
  41f144:	jle    41f17a <flatcc_json_parser_table_as_root@@Base+0xb6a>
  41f146:	mov    rdx,rcx
  41f149:	lea    ecx,[rdi-0x1]
  41f14c:	sub    eax,0x1
  41f14f:	lea    r9,[rdx+rax*1+0x1]
  41f154:	movsxd rcx,ecx
  41f157:	add    rcx,rdx
  41f15a:	nop    WORD PTR [rax+rax*1+0x0]
  41f160:	movzx  edi,BYTE PTR [rcx]
  41f163:	movzx  eax,BYTE PTR [rdx]
  41f166:	add    rdx,0x1
  41f16a:	sub    rcx,0x1
  41f16e:	mov    BYTE PTR [rdx-0x1],dil
  41f172:	mov    BYTE PTR [rcx+0x1],al
  41f175:	cmp    r9,rdx
  41f178:	jne    41f160 <flatcc_json_parser_table_as_root@@Base+0xb50>
  41f17a:	mov    rax,r8
  41f17d:	sub    rax,rsi
  41f180:	ret    
  41f181:	nop    DWORD PTR [rax+0x0]
  41f188:	lea    rcx,[rsi+0x1]
  41f18c:	mov    BYTE PTR [rsi],0x2d
  41f18f:	neg    edi
  41f191:	jmp    41f0fb <flatcc_json_parser_table_as_root@@Base+0xaeb>
  41f196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1a0:	mov    rax,QWORD PTR [rdi+0x28]
  41f1a4:	cmp    rax,QWORD PTR [rdi+0x20]
  41f1a8:	jb     41f1c2 <flatcc_json_parser_table_as_root@@Base+0xbb2>
  41f1aa:	mov    edx,DWORD PTR [rdi+0x3c]
  41f1ad:	test   edx,edx
  41f1af:	je     41f1d0 <flatcc_json_parser_table_as_root@@Base+0xbc0>
  41f1b1:	mov    rdx,rax
  41f1b4:	mov    rax,QWORD PTR [rdi]
  41f1b7:	sub    rdx,rax
  41f1ba:	add    QWORD PTR [rdi+0x18],rdx
  41f1be:	mov    QWORD PTR [rdi+0x28],rax
  41f1c2:	mov    BYTE PTR [rax],0x0
  41f1c5:	ret    
  41f1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1d0:	mov    DWORD PTR [rdi+0x3c],0x3
  41f1d7:	jmp    41f1b1 <flatcc_json_parser_table_as_root@@Base+0xba1>
  41f1d9:	nop    DWORD PTR [rax+0x0]
  41f1e0:	push   r13
  41f1e2:	push   r12
  41f1e4:	mov    r13,rsi
  41f1e7:	push   rbp
  41f1e8:	push   rbx
  41f1e9:	mov    rbp,rdi
  41f1ec:	mov    r12,rdx
  41f1ef:	sub    rsp,0x8
  41f1f3:	mov    rdi,QWORD PTR [rdi+0x28]
  41f1f7:	mov    rbx,QWORD PTR [rbp+0x20]
  41f1fb:	cmp    rdi,rbx
  41f1fe:	jae    41f260 <flatcc_json_parser_table_as_root@@Base+0xc50>
  41f200:	sub    rbx,rdi
  41f203:	cmp    rbx,r12
  41f206:	jae    41f23d <flatcc_json_parser_table_as_root@@Base+0xc2d>
  41f208:	nop    DWORD PTR [rax+rax*1+0x0]
  41f210:	mov    rdx,rbx
  41f213:	mov    rsi,r13
  41f216:	sub    r12,rbx
  41f219:	call   4050e0 <memcpy@plt>
  41f21e:	add    QWORD PTR [rbp+0x28],rbx
  41f222:	add    r13,rbx
  41f225:	xor    esi,esi
  41f227:	mov    rdi,rbp
  41f22a:	call   QWORD PTR [rbp+0x48]
  41f22d:	mov    rdi,QWORD PTR [rbp+0x28]
  41f231:	mov    rbx,QWORD PTR [rbp+0x20]
  41f235:	sub    rbx,rdi
  41f238:	cmp    r12,rbx
  41f23b:	ja     41f210 <flatcc_json_parser_table_as_root@@Base+0xc00>
  41f23d:	mov    rdx,r12
  41f240:	mov    rsi,r13
  41f243:	call   4050e0 <memcpy@plt>
  41f248:	add    QWORD PTR [rbp+0x28],r12
  41f24c:	add    rsp,0x8
  41f250:	pop    rbx
  41f251:	pop    rbp
  41f252:	pop    r12
  41f254:	pop    r13
  41f256:	ret    
  41f257:	nop    WORD PTR [rax+rax*1+0x0]
  41f260:	mov    rdi,rbp
  41f263:	xor    esi,esi
  41f265:	call   QWORD PTR [rbp+0x48]
  41f268:	mov    rbx,QWORD PTR [rbp+0x20]
  41f26c:	mov    rdi,QWORD PTR [rbp+0x28]
  41f270:	jmp    41f200 <flatcc_json_parser_table_as_root@@Base+0xbf0>
  41f272:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f27d:	nop    DWORD PTR [rax]
  41f280:	push   r12
  41f282:	push   rbp
  41f283:	mov    rbp,rdi
  41f286:	push   rbx
  41f287:	mov    rdi,QWORD PTR [rdi+0x28]
  41f28b:	mov    r12,rsi
  41f28e:	mov    rbx,QWORD PTR [rbp+0x20]
  41f292:	cmp    rdi,rbx
  41f295:	jae    41f2e8 <flatcc_json_parser_table_as_root@@Base+0xcd8>
  41f297:	sub    rbx,rdi
  41f29a:	cmp    rbx,r12
  41f29d:	jae    41f2cc <flatcc_json_parser_table_as_root@@Base+0xcbc>
  41f29f:	nop
  41f2a0:	mov    rdx,rbx
  41f2a3:	mov    esi,0x20
  41f2a8:	sub    r12,rbx
  41f2ab:	call   405090 <memset@plt>
  41f2b0:	add    QWORD PTR [rbp+0x28],rbx
  41f2b4:	xor    esi,esi
  41f2b6:	mov    rdi,rbp
  41f2b9:	call   QWORD PTR [rbp+0x48]
  41f2bc:	mov    rdi,QWORD PTR [rbp+0x28]
  41f2c0:	mov    rbx,QWORD PTR [rbp+0x20]
  41f2c4:	sub    rbx,rdi
  41f2c7:	cmp    r12,rbx
  41f2ca:	ja     41f2a0 <flatcc_json_parser_table_as_root@@Base+0xc90>
  41f2cc:	mov    rdx,r12
  41f2cf:	mov    esi,0x20
  41f2d4:	call   405090 <memset@plt>
  41f2d9:	add    QWORD PTR [rbp+0x28],r12
  41f2dd:	pop    rbx
  41f2de:	pop    rbp
  41f2df:	pop    r12
  41f2e1:	ret    
  41f2e2:	nop    WORD PTR [rax+rax*1+0x0]
  41f2e8:	mov    rdi,rbp
  41f2eb:	xor    esi,esi
  41f2ed:	call   QWORD PTR [rbp+0x48]
  41f2f0:	mov    rbx,QWORD PTR [rbp+0x20]
  41f2f4:	mov    rdi,QWORD PTR [rbp+0x28]
  41f2f8:	jmp    41f297 <flatcc_json_parser_table_as_root@@Base+0xc87>
  41f2fa:	nop    WORD PTR [rax+rax*1+0x0]
  41f300:	push   rbp
  41f301:	push   rbx
  41f302:	sub    rsp,0x8
  41f306:	movzx  ebp,BYTE PTR [rdi+0x31]
  41f30a:	mov    rax,QWORD PTR [rdi+0x28]
  41f30e:	imul   ebp,DWORD PTR [rdi+0x38]
  41f312:	movsxd rbp,ebp
  41f315:	lea    rdx,[rax+rbp*1]
  41f319:	cmp    QWORD PTR [rdi+0x20],rdx
  41f31d:	jb     41f340 <flatcc_json_parser_table_as_root@@Base+0xd30>
  41f31f:	mov    rbx,rdi
  41f322:	mov    rdx,rbp
  41f325:	mov    esi,0x20
  41f32a:	mov    rdi,rax
  41f32d:	call   405090 <memset@plt>
  41f332:	add    QWORD PTR [rbx+0x28],rbp
  41f336:	add    rsp,0x8
  41f33a:	pop    rbx
  41f33b:	pop    rbp
  41f33c:	ret    
  41f33d:	nop    DWORD PTR [rax]
  41f340:	add    rsp,0x8
  41f344:	mov    rsi,rbp
  41f347:	pop    rbx
  41f348:	pop    rbp
  41f349:	jmp    41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  41f34e:	xchg   ax,ax
  41f350:	push   rbp
  41f351:	push   rbx
  41f352:	mov    rbx,rdi
  41f355:	sub    rsp,0x8
  41f359:	test   esi,esi
  41f35b:	mov    rsi,QWORD PTR [rdi+0x28]
  41f35f:	jne    41f36a <flatcc_json_parser_table_as_root@@Base+0xd5a>
  41f361:	mov    rax,QWORD PTR [rdi+0x20]
  41f365:	cmp    rsi,rax
  41f368:	jae    41f3a0 <flatcc_json_parser_table_as_root@@Base+0xd90>
  41f36a:	mov    rdi,QWORD PTR [rbx]
  41f36d:	mov    rcx,QWORD PTR [rbx+0x40]
  41f371:	mov    edx,0x1
  41f376:	sub    rsi,rdi
  41f379:	mov    rbp,rsi
  41f37c:	call   405120 <fwrite@plt>
  41f381:	mov    rsi,QWORD PTR [rbx]
  41f384:	add    QWORD PTR [rbx+0x18],rbp
  41f388:	mov    QWORD PTR [rbx+0x28],rsi
  41f38c:	mov    BYTE PTR [rsi],0x0
  41f38f:	add    rsp,0x8
  41f393:	pop    rbx
  41f394:	pop    rbp
  41f395:	ret    
  41f396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3a0:	sub    rsi,rax
  41f3a3:	mov    rcx,QWORD PTR [rdi+0x40]
  41f3a7:	mov    edx,0x1
  41f3ac:	mov    rbp,rsi
  41f3af:	mov    rsi,QWORD PTR [rdi+0x10]
  41f3b3:	mov    rdi,QWORD PTR [rdi]
  41f3b6:	call   405120 <fwrite@plt>
  41f3bb:	mov    rdi,QWORD PTR [rbx]
  41f3be:	mov    rdx,rbp
  41f3c1:	mov    rsi,rdi
  41f3c4:	add    rsi,QWORD PTR [rbx+0x10]
  41f3c8:	call   4050e0 <memcpy@plt>
  41f3cd:	mov    rsi,rbp
  41f3d0:	add    rsi,QWORD PTR [rbx]
  41f3d3:	mov    rax,QWORD PTR [rbx+0x10]
  41f3d7:	add    QWORD PTR [rbx+0x18],rax
  41f3db:	mov    QWORD PTR [rbx+0x28],rsi
  41f3df:	mov    BYTE PTR [rsi],0x0
  41f3e2:	add    rsp,0x8
  41f3e6:	pop    rbx
  41f3e7:	pop    rbp
  41f3e8:	ret    
  41f3e9:	nop    DWORD PTR [rax+0x0]
  41f3f0:	mov    rax,QWORD PTR [rdi+0x28]
  41f3f4:	mov    rdx,QWORD PTR [rdi]
  41f3f7:	mov    BYTE PTR [rax],0x0
  41f3fa:	mov    rsi,QWORD PTR [rdi+0x20]
  41f3fe:	cmp    QWORD PTR [rdi+0x28],rsi
  41f402:	jae    41f408 <flatcc_json_parser_table_as_root@@Base+0xdf8>
  41f404:	ret    
  41f405:	nop    DWORD PTR [rax]
  41f408:	push   rbp
  41f409:	push   rbx
  41f40a:	sub    rax,rdx
  41f40d:	mov    rbp,rax
  41f410:	mov    rbx,rdi
  41f413:	sub    rsp,0x8
  41f417:	mov    rax,QWORD PTR [rdi+0x8]
  41f41b:	mov    rdi,QWORD PTR [rdi]
  41f41e:	lea    rsi,[rax+rax*1]
  41f422:	call   405100 <realloc@plt>
  41f427:	test   rax,rax
  41f42a:	je     41f460 <flatcc_json_parser_table_as_root@@Base+0xe50>
  41f42c:	mov    rcx,QWORD PTR [rbx+0x8]
  41f430:	lea    rdx,[rax+rbp*1]
  41f434:	mov    QWORD PTR [rbx],rax
  41f437:	mov    QWORD PTR [rbx+0x28],rdx
  41f43b:	add    rcx,rcx
  41f43e:	mov    QWORD PTR [rbx+0x8],rcx
  41f442:	sub    rcx,0x40
  41f446:	add    rax,rcx
  41f449:	mov    QWORD PTR [rbx+0x10],rcx
  41f44d:	mov    QWORD PTR [rbx+0x20],rax
  41f451:	mov    BYTE PTR [rdx],0x0
  41f454:	add    rsp,0x8
  41f458:	pop    rbx
  41f459:	pop    rbp
  41f45a:	ret    
  41f45b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f460:	mov    eax,DWORD PTR [rbx+0x3c]
  41f463:	test   eax,eax
  41f465:	jne    41f46e <flatcc_json_parser_table_as_root@@Base+0xe5e>
  41f467:	mov    DWORD PTR [rbx+0x3c],0x3
  41f46e:	mov    rdx,QWORD PTR [rbx]
  41f471:	add    QWORD PTR [rbx+0x18],rbp
  41f475:	mov    QWORD PTR [rbx+0x28],rdx
  41f479:	jmp    41f451 <flatcc_json_parser_table_as_root@@Base+0xe41>
  41f47b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f480:	test   edi,edi
  41f482:	jne    41f4a0 <flatcc_json_parser_table_as_root@@Base+0xe90>
  41f484:	mov    eax,0x65
  41f489:	mov    DWORD PTR [rsi],0x736c6166
  41f48f:	mov    WORD PTR [rsi+0x4],ax
  41f493:	mov    eax,0x5
  41f498:	ret    
  41f499:	nop    DWORD PTR [rax+0x0]
  41f4a0:	mov    DWORD PTR [rsi],0x65757274
  41f4a6:	mov    BYTE PTR [rsi+0x4],0x0
  41f4aa:	mov    eax,0x4
  41f4af:	ret    
  41f4b0:	cmp    dil,0x63
  41f4b4:	jbe    41f500 <flatcc_json_parser_table_as_root@@Base+0xef0>
  41f4b6:	movzx  eax,dil
  41f4ba:	mov    BYTE PTR [rsi+0x3],0x0
  41f4be:	lea    edx,[rax*4+0x0]
  41f4c5:	mov    ecx,eax
  41f4c7:	add    edx,eax
  41f4c9:	lea    edx,[rcx+rdx*8]
  41f4cc:	mov    ecx,0x64
  41f4d1:	mov    eax,ecx
  41f4d3:	shr    dx,0xc
  41f4d7:	imul   eax,edx
  41f4da:	add    edx,0x30
  41f4dd:	sub    edi,eax
  41f4df:	lea    rax,[rip+0x11e3a]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41f4e6:	add    rdi,rdi
  41f4e9:	and    edi,0x1fe
  41f4ef:	movzx  eax,WORD PTR [rax+rdi*1]
  41f4f3:	mov    BYTE PTR [rsi],dl
  41f4f5:	mov    WORD PTR [rsi+0x1],ax
  41f4f9:	mov    eax,0x3
  41f4fe:	ret    
  41f4ff:	nop
  41f500:	cmp    dil,0x9
  41f504:	jbe    41f530 <flatcc_json_parser_table_as_root@@Base+0xf20>
  41f506:	add    rdi,rdi
  41f509:	lea    rax,[rip+0x11e10]        # 431320 <flatcc_builder_padding_base@@Base+0x2500>
  41f510:	mov    BYTE PTR [rsi+0x2],0x0
  41f514:	and    edi,0x1fe
  41f51a:	movzx  eax,WORD PTR [rax+rdi*1]
  41f51e:	mov    WORD PTR [rsi],ax
  41f521:	mov    eax,0x2
  41f526:	ret    
  41f527:	nop    WORD PTR [rax+rax*1+0x0]
  41f530:	add    edi,0x30
  41f533:	mov    BYTE PTR [rsi+0x1],0x0
  41f537:	mov    eax,0x1
  41f53c:	mov    BYTE PTR [rsi],dil
  41f53f:	ret    
  41f540:	mov    r9,rdi
  41f543:	mov    eax,edx
  41f545:	mov    edi,edi
  41f547:	shr    r9,0x20
  41f54b:	mov    r11,rdi
  41f54e:	mov    r10,rdx
  41f551:	imul   rdi,rax
  41f555:	mov    r8,r9
  41f558:	shr    r10,0x20
  41f55c:	imul   r8,rax
  41f560:	mov    QWORD PTR [rsp-0x10],0x0
  41f569:	imul   r11,r10
  41f56d:	mov    rax,rdi
  41f570:	shr    rax,0x20
  41f574:	mov    edi,r8d
  41f577:	add    rax,rdi
  41f57a:	mov    edi,0x80000000
  41f57f:	mov    edx,r11d
  41f582:	add    rax,rdi
  41f585:	shr    r11,0x20
  41f589:	imul   r9,r10
  41f58d:	add    rax,rdx
  41f590:	mov    rdx,r8
  41f593:	shr    rdx,0x20
  41f597:	shr    rax,0x20
  41f59b:	add    rdx,r11
  41f59e:	lea    r8,[rdx+r9*1]
  41f5a2:	add    rax,r8
  41f5a5:	mov    QWORD PTR [rsp-0x18],rax
  41f5aa:	lea    eax,[rsi+rcx*1+0x40]
  41f5ae:	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
  41f5b4:	vpinsrd xmm0,xmm1,eax,0x2
  41f5ba:	vmovaps XMMWORD PTR [rsp-0x18],xmm0
  41f5c0:	mov    rax,QWORD PTR [rsp-0x18]
  41f5c5:	mov    rdx,QWORD PTR [rsp-0x10]
  41f5ca:	ret    
  41f5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5d0:	sub    rsp,0x18
  41f5d4:	test   rdi,rdi
  41f5d7:	mov    QWORD PTR [rsp+0x8],rsi
  41f5dc:	mov    QWORD PTR [rsp],rdi
  41f5e0:	mov    ecx,DWORD PTR [rsp+0x8]
  41f5e4:	je     41f64c <flatcc_json_parser_table_as_root@@Base+0x103c>
  41f5e6:	mov    rax,rdi
  41f5e9:	movabs rdi,0xffc0000000000000
  41f5f3:	lea    edx,[rcx-0xa]
  41f5f6:	test   rax,rdi
  41f5f9:	mov    rsi,rdi
  41f5fc:	jne    41f60e <flatcc_json_parser_table_as_root@@Base+0xffe>
  41f5fe:	xchg   ax,ax
  41f600:	shl    rax,0xa
  41f604:	mov    ecx,edx
  41f606:	sub    edx,0xa
  41f609:	test   rax,rsi
  41f60c:	je     41f600 <flatcc_json_parser_table_as_root@@Base+0xff0>
  41f60e:	test   rax,rax
  41f611:	js     41f62a <flatcc_json_parser_table_as_root@@Base+0x101a>
  41f613:	lea    edx,[rcx-0x1]
  41f616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f620:	mov    ecx,edx
  41f622:	sub    edx,0x1
  41f625:	add    rax,rax
  41f628:	jns    41f620 <flatcc_json_parser_table_as_root@@Base+0x1010>
  41f62a:	mov    QWORD PTR [rsp],rax
  41f62e:	vmovdqa xmm1,XMMWORD PTR [rsp]
  41f633:	vpinsrd xmm0,xmm1,ecx,0x2
  41f639:	vmovaps XMMWORD PTR [rsp],xmm0
  41f63e:	mov    rax,QWORD PTR [rsp]
  41f642:	mov    rdx,QWORD PTR [rsp+0x8]
  41f647:	add    rsp,0x18
  41f64b:	ret    
  41f64c:	lea    rcx,[rip+0x116bd]        # 430d10 <flatcc_builder_padding_base@@Base+0x1ef0>
  41f653:	lea    rsi,[rip+0xfef6]        # 42f550 <flatcc_builder_padding_base@@Base+0x730>
  41f65a:	lea    rdi,[rip+0x100d3]        # 42f734 <flatcc_builder_padding_base@@Base+0x914>
  41f661:	mov    edx,0x104
  41f666:	call   405080 <__assert_fail@plt>
  41f66b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f670:	lea    rcx,[rip+0x11679]        # 430cf0 <flatcc_builder_padding_base@@Base+0x1ed0>
  41f677:	lea    rsi,[rip+0xfed2]        # 42f550 <flatcc_builder_padding_base@@Base+0x730>
  41f67e:	lea    rdi,[rip+0x1151c]        # 430ba1 <flatcc_builder_padding_base@@Base+0x1d81>
  41f685:	sub    rsp,0x8
  41f689:	mov    edx,0xef
  41f68e:	call   405080 <__assert_fail@plt>
  41f693:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f69e:	xchg   ax,ax
  41f6a0:	push   r15
  41f6a2:	push   r14
  41f6a4:	push   r13
  41f6a6:	push   r12
  41f6a8:	push   rbp
  41f6a9:	push   rbx
  41f6aa:	sub    rsp,0x58
  41f6ae:	test   rdi,rdi
  41f6b1:	je     41fdee <flatcc_json_parser_table_as_root@@Base+0x17de>
  41f6b7:	vmovq  r8,xmm0
  41f6bc:	movabs rax,0xffe0000000000000
  41f6c6:	mov    r10,rdi
  41f6c9:	lea    rdx,[r8+r8*1]
  41f6cd:	cmp    rdx,rax
  41f6d0:	ja     41fb68 <flatcc_json_parser_table_as_root@@Base+0x1558>
  41f6d6:	test   r8,r8
  41f6d9:	mov    rbx,rdi
  41f6dc:	js     41fb40 <flatcc_json_parser_table_as_root@@Base+0x1530>
  41f6e2:	test   r8,r8
  41f6e5:	je     41fb20 <flatcc_json_parser_table_as_root@@Base+0x1510>
  41f6eb:	movabs r13,0x7ff0000000000000
  41f6f5:	cmp    r8,r13
  41f6f8:	je     41fbd0 <flatcc_json_parser_table_as_root@@Base+0x15c0>
  41f6fe:	vmovq  rax,xmm0
  41f703:	vmovq  QWORD PTR [rsp+0x28],xmm0
  41f709:	and    r13,rax
  41f70c:	je     41fba0 <flatcc_json_parser_table_as_root@@Base+0x1590>
  41f712:	vmovq  rdi,xmm0
  41f717:	vmovq  r12,xmm0
  41f71c:	movabs rax,0xfffffffffffff
  41f726:	movabs rdx,0x10000000000000
  41f730:	and    rax,rdi
  41f733:	shr    r12,0x34
  41f737:	and    r12d,0x7ff
  41f73e:	lea    r15,[rax+rdx*1]
  41f742:	lea    r11d,[r12-0x433]
  41f74a:	sub    r12d,0x434
  41f751:	mov    QWORD PTR [rsp+0x8],0x0
  41f75a:	mov    QWORD PTR [rsp],r15
  41f75e:	lea    r14,[r15+r15*1]
  41f762:	vmovdqa xmm5,XMMWORD PTR [rsp]
  41f767:	mov    QWORD PTR [rsp+0x48],r10
  41f76c:	mov    DWORD PTR [rsp+0x38],r11d
  41f771:	vpinsrd xmm4,xmm5,r11d,0x2
  41f777:	vmovsd QWORD PTR [rsp+0x40],xmm0
  41f77d:	vmovaps XMMWORD PTR [rsp],xmm4
  41f782:	mov    rsi,QWORD PTR [rsp+0x8]
  41f787:	mov    rdi,QWORD PTR [rsp]
  41f78b:	call   41f5d0 <flatcc_json_parser_table_as_root@@Base+0xfc0>
  41f790:	mov    QWORD PTR [rsp],rax
  41f794:	lea    rax,[r14+0x1]
  41f798:	mov    QWORD PTR [rsp+0x18],0x0
  41f7a1:	mov    DWORD PTR [rsp+0x30],edx
  41f7a5:	mov    QWORD PTR [rsp+0x10],rax
  41f7aa:	vmovdqa xmm7,XMMWORD PTR [rsp+0x10]
  41f7b0:	vpinsrd xmm6,xmm7,r12d,0x2
  41f7b6:	vmovaps XMMWORD PTR [rsp+0x10],xmm6
  41f7bc:	mov    rsi,QWORD PTR [rsp+0x18]
  41f7c1:	mov    rdi,QWORD PTR [rsp+0x10]
  41f7c6:	call   41f5d0 <flatcc_json_parser_table_as_root@@Base+0xfc0>
  41f7cb:	vxorpd xmm2,xmm2,xmm2
  41f7cf:	mov    r9,rax
  41f7d2:	vmovsd xmm0,QWORD PTR [rsp+0x40]
  41f7d8:	mov    ebp,edx
  41f7da:	vucomisd xmm0,xmm2
  41f7de:	jbe    41fdcf <flatcc_json_parser_table_as_root@@Base+0x17bf>
  41f7e4:	vmovsd xmm1,QWORD PTR [rip+0x1119c]        # 430988 <flatcc_builder_padding_base@@Base+0x1b68>
  41f7ec:	mov    r8d,DWORD PTR [rsp+0x30]
  41f7f1:	mov    r11d,DWORD PTR [rsp+0x38]
  41f7f6:	mov    r10,QWORD PTR [rsp+0x48]
  41f7fb:	vucomisd xmm1,xmm0
  41f7ff:	jb     41fdcf <flatcc_json_parser_table_as_root@@Base+0x17bf>
  41f805:	movabs rax,0xfffffffffffff
  41f80f:	test   QWORD PTR [rsp+0x28],rax
  41f814:	jne    41fbc0 <flatcc_json_parser_table_as_root@@Base+0x15b0>
  41f81a:	test   r13,r13
  41f81d:	je     41fbc0 <flatcc_json_parser_table_as_root@@Base+0x15b0>
  41f823:	lea    rcx,[r15*4-0x1]
  41f82b:	lea    r12d,[r11-0x2]
  41f82f:	vxorpd xmm1,xmm1,xmm1
  41f833:	mov    eax,0xffffffc3
  41f838:	sub    r12d,ebp
  41f83b:	sub    eax,r8d
  41f83e:	shlx   r12,rcx,r12
  41f843:	vcvtsi2sd xmm1,xmm1,eax
  41f847:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x11ba1]        # 4313f0 <flatcc_builder_padding_base@@Base+0x25d0>
  41f84f:	vucomisd xmm2,xmm1
  41f853:	vcvttsd2si edx,xmm1
  41f857:	ja     41f870 <flatcc_json_parser_table_as_root@@Base+0x1260>
  41f859:	vxorpd xmm3,xmm3,xmm3
  41f85d:	vcvtsi2sd xmm3,xmm3,edx
  41f861:	vsubsd xmm1,xmm1,xmm3
  41f865:	vucomisd xmm1,xmm2
  41f869:	jp     41f86d <flatcc_json_parser_table_as_root@@Base+0x125d>
  41f86b:	je     41f870 <flatcc_json_parser_table_as_root@@Base+0x1260>
  41f86d:	add    edx,0x1
  41f870:	lea    eax,[rdx+0x162]
  41f876:	add    edx,0x15b
  41f87c:	mov    rdi,QWORD PTR [rsp]
  41f880:	mov    esi,r8d
  41f883:	mov    QWORD PTR [rsp+0x28],r9
  41f888:	mov    QWORD PTR [rsp+0x38],r10
  41f88d:	cmovns eax,edx
  41f890:	lea    rdx,[rip+0x11509]        # 430da0 <flatcc_builder_padding_base@@Base+0x1f80>
  41f897:	vmovsd QWORD PTR [rsp+0x30],xmm0
  41f89d:	sar    eax,0x3
  41f8a0:	add    eax,0x1
  41f8a3:	cdqe   
  41f8a5:	shl    rax,0x4
  41f8a9:	add    rax,rdx
  41f8ac:	movsx  r14d,WORD PTR [rax+0x8]
  41f8b1:	mov    r13,QWORD PTR [rax]
  41f8b4:	movsx  eax,WORD PTR [rax+0xa]
  41f8b8:	mov    rdx,r13
  41f8bb:	mov    ecx,r14d
  41f8be:	mov    DWORD PTR [rsp+0x40],eax
  41f8c2:	call   41f540 <flatcc_json_parser_table_as_root@@Base+0xf30>
  41f8c7:	mov    rdi,r12
  41f8ca:	mov    DWORD PTR [rsp+0x10],edx
  41f8ce:	mov    ecx,r14d
  41f8d1:	mov    esi,ebp
  41f8d3:	mov    rdx,r13
  41f8d6:	mov    QWORD PTR [rsp],rax
  41f8da:	call   41f540 <flatcc_json_parser_table_as_root@@Base+0xf30>
  41f8df:	mov    r9,QWORD PTR [rsp+0x28]
  41f8e4:	mov    ecx,r14d
  41f8e7:	mov    r15,rdx
  41f8ea:	mov    esi,ebp
  41f8ec:	mov    rdx,r13
  41f8ef:	mov    r12,rax
  41f8f2:	sub    r12,0x1
  41f8f6:	mov    rdi,r9
  41f8f9:	call   41f540 <flatcc_json_parser_table_as_root@@Base+0xf30>
  41f8fe:	lea    rdi,[rax+0x1]
  41f902:	mov    DWORD PTR [rsp+0x28],edx
  41f906:	mov    rcx,rdi
  41f909:	sub    rcx,r12
  41f90c:	cmp    r12,rdi
  41f90f:	ja     41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41f915:	cmp    r15d,edx
  41f918:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  41f91e:	mov    r10,QWORD PTR [rsp+0x38]
  41f923:	jne    41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41f929:	mov    esi,DWORD PTR [rsp+0x10]
  41f92d:	mov    eax,0x1
  41f932:	mov    rbp,rdi
  41f935:	lea    r13d,[rsi+0x41]
  41f939:	mov    r9d,esi
  41f93c:	lea    rsi,[rip+0x1141d]        # 430d60 <flatcc_builder_padding_base@@Base+0x1f40>
  41f943:	neg    r9d
  41f946:	imul   r13d,r13d,0x4d1
  41f94d:	shlx   rax,rax,r9
  41f952:	shrx   rdx,rdi,r9
  41f957:	mov    r15,rax
  41f95a:	mov    QWORD PTR [rsp+0x30],rax
  41f95f:	mov    eax,edx
  41f961:	lea    r8,[r15-0x1]
  41f965:	sar    r13d,0xc
  41f969:	lea    r12d,[r13+0x1]
  41f96d:	and    rbp,r8
  41f970:	movsxd r11,r12d
  41f973:	mov    r11d,DWORD PTR [rsi+r11*4]
  41f977:	cmp    edx,r11d
  41f97a:	jae    41f986 <flatcc_json_parser_table_as_root@@Base+0x1376>
  41f97c:	movsxd rdx,r13d
  41f97f:	mov    r12d,r13d
  41f982:	mov    r11d,DWORD PTR [rsi+rdx*4]
  41f986:	test   r12d,r12d
  41f989:	jle    41fd92 <flatcc_json_parser_table_as_root@@Base+0x1782>
  41f98f:	xor    edx,edx
  41f991:	sub    r12d,0x1
  41f995:	lea    r14,[rbx+0x1]
  41f999:	div    r11d
  41f99c:	mov    r13d,0x1
  41f9a2:	mov    r15d,0xcccccccd
  41f9a8:	add    eax,0x30
  41f9ab:	mov    BYTE PTR [rbx],al
  41f9ad:	mov    eax,edx
  41f9af:	mov    rsi,rax
  41f9b2:	shlx   rax,rax,r9
  41f9b7:	add    rax,rbp
  41f9ba:	cmp    rax,rcx
  41f9bd:	jae    41f9f7 <flatcc_json_parser_table_as_root@@Base+0x13e7>
  41f9bf:	jmp    41fbf5 <flatcc_json_parser_table_as_root@@Base+0x15e5>
  41f9c4:	nop    DWORD PTR [rax+0x0]
  41f9c8:	mov    eax,esi
  41f9ca:	xor    edx,edx
  41f9cc:	add    r13d,0x1
  41f9d0:	div    r11d
  41f9d3:	sub    r12d,0x1
  41f9d7:	add    r14,0x1
  41f9db:	add    eax,0x30
  41f9de:	mov    esi,edx
  41f9e0:	mov    BYTE PTR [r14-0x1],al
  41f9e4:	mov    eax,edx
  41f9e6:	shlx   rax,rax,r9
  41f9eb:	add    rax,rbp
  41f9ee:	cmp    rcx,rax
  41f9f1:	ja     41fc00 <flatcc_json_parser_table_as_root@@Base+0x15f0>
  41f9f7:	mov    eax,r11d
  41f9fa:	mul    r15d
  41f9fd:	shr    edx,0x3
  41fa00:	test   r12d,r12d
  41fa03:	mov    r11d,edx
  41fa06:	jne    41f9c8 <flatcc_json_parser_table_as_root@@Base+0x13b8>
  41fa08:	movsxd rdx,r13d
  41fa0b:	mov    eax,0x1
  41fa10:	add    rdx,rbx
  41fa13:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa18:	lea    rbp,[rbp+rbp*4+0x0]
  41fa1d:	lea    rcx,[rcx+rcx*4]
  41fa21:	lea    rax,[rax+rax*4]
  41fa25:	add    r13d,0x1
  41fa29:	sub    r12d,0x1
  41fa2d:	add    rdx,0x1
  41fa31:	add    rbp,rbp
  41fa34:	add    rcx,rcx
  41fa37:	add    rax,rax
  41fa3a:	shrx   rsi,rbp,r9
  41fa3f:	and    rbp,r8
  41fa42:	add    esi,0x30
  41fa45:	mov    BYTE PTR [rdx-0x1],sil
  41fa49:	cmp    rcx,rbp
  41fa4c:	jbe    41fa18 <flatcc_json_parser_table_as_root@@Base+0x1408>
  41fa4e:	mov    rsi,QWORD PTR [rsp]
  41fa52:	mov    rdx,rdi
  41fa55:	vmovsd QWORD PTR [rsp+0x48],xmm0
  41fa5b:	mov    QWORD PTR [rsp+0x38],r10
  41fa60:	sub    rdx,rsi
  41fa63:	cmp    rdi,rsi
  41fa66:	jb     41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41fa6c:	mov    esi,DWORD PTR [rsp+0x28]
  41fa70:	cmp    DWORD PTR [rsp+0x10],esi
  41fa74:	jne    41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41fa7a:	sub    rsp,0x8
  41fa7e:	mov    r8,rbp
  41fa81:	mov    esi,r13d
  41fa84:	imul   rdx,rax
  41fa88:	push   rax
  41fa89:	mov    r9,QWORD PTR [rsp+0x40]
  41fa8e:	mov    rdi,rbx
  41fa91:	call   41f000 <flatcc_json_parser_table_as_root@@Base+0x9f0>
  41fa96:	pop    rdx
  41fa97:	pop    rcx
  41fa98:	mov    r10,QWORD PTR [rsp+0x38]
  41fa9d:	vmovsd xmm0,QWORD PTR [rsp+0x48]
  41faa3:	sub    r12d,DWORD PTR [rsp+0x40]
  41faa8:	test   eax,eax
  41faaa:	je     41fd60 <flatcc_json_parser_table_as_root@@Base+0x1750>
  41fab0:	lea    eax,[r13-0x1]
  41fab4:	cmp    r13d,0x3
  41fab8:	mov    edx,0x1
  41fabd:	cmovl  eax,edx
  41fac0:	test   r12d,r12d
  41fac3:	js     41fc60 <flatcc_json_parser_table_as_root@@Base+0x1650>
  41fac9:	cmp    r12d,0x2
  41facd:	jg     41fd30 <flatcc_json_parser_table_as_root@@Base+0x1720>
  41fad3:	test   r12d,r12d
  41fad6:	je     41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fad8:	test   r12d,r12d
  41fadb:	lea    esi,[r12-0x1]
  41fae0:	jle    41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fae2:	mov    ecx,esi
  41fae4:	movsxd rdx,r13d
  41fae7:	xor    eax,eax
  41fae9:	add    rcx,0x1
  41faed:	add    rdx,rbx
  41faf0:	mov    BYTE PTR [rdx+rax*1],0x30
  41faf4:	add    rax,0x1
  41faf8:	cmp    rcx,rax
  41fafb:	jne    41faf0 <flatcc_json_parser_table_as_root@@Base+0x14e0>
  41fafd:	lea    r13d,[r13+rsi*1+0x1]
  41fb02:	movsxd r13,r13d
  41fb05:	lea    rax,[rbx+r13*1]
  41fb09:	mov    BYTE PTR [rax],0x0
  41fb0c:	add    rsp,0x58
  41fb10:	sub    eax,r10d
  41fb13:	pop    rbx
  41fb14:	pop    rbp
  41fb15:	pop    r12
  41fb17:	pop    r13
  41fb19:	pop    r14
  41fb1b:	pop    r15
  41fb1d:	ret    
  41fb1e:	xchg   ax,ax
  41fb20:	lea    rax,[rbx+0x1]
  41fb24:	mov    BYTE PTR [rbx],0x30
  41fb27:	mov    BYTE PTR [rbx+0x1],0x0
  41fb2b:	sub    eax,r10d
  41fb2e:	add    rsp,0x58
  41fb32:	pop    rbx
  41fb33:	pop    rbp
  41fb34:	pop    r12
  41fb36:	pop    r13
  41fb38:	pop    r14
  41fb3a:	pop    r15
  41fb3c:	ret    
  41fb3d:	nop    DWORD PTR [rax]
  41fb40:	movabs rax,0x8000000000000000
  41fb4a:	lea    rbx,[rdi+0x1]
  41fb4e:	mov    BYTE PTR [rdi],0x2d
  41fb51:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xe7c7]        # 42e320 <_IO_stdin_used@@Base+0x3320>
  41fb59:	xor    r8,rax
  41fb5c:	jmp    41f6e2 <flatcc_json_parser_table_as_root@@Base+0x10d2>
  41fb61:	nop    DWORD PTR [rax+0x0]
  41fb68:	add    rsp,0x58
  41fb6c:	vmovd  r9d,xmm0
  41fb71:	lea    rcx,[rip+0x11046]        # 430bbe <flatcc_builder_padding_base@@Base+0x1d9e>
  41fb78:	pop    rbx
  41fb79:	pop    rbp
  41fb7a:	pop    r12
  41fb7c:	pop    r13
  41fb7e:	pop    r14
  41fb80:	pop    r15
  41fb82:	shr    r8,0x20
  41fb86:	mov    rdx,0xffffffffffffffff
  41fb8d:	mov    esi,0x1
  41fb92:	xor    eax,eax
  41fb94:	jmp    405150 <__sprintf_chk@plt>
  41fb99:	nop    DWORD PTR [rax+0x0]
  41fba0:	movabs r15,0xfffffffffffff
  41fbaa:	mov    r12d,0xfffffbcd
  41fbb0:	mov    r11d,0xfffffbce
  41fbb6:	and    r15,rax
  41fbb9:	jmp    41f751 <flatcc_json_parser_table_as_root@@Base+0x1141>
  41fbbe:	xchg   ax,ax
  41fbc0:	lea    rcx,[r14-0x1]
  41fbc4:	jmp    41f82f <flatcc_json_parser_table_as_root@@Base+0x121f>
  41fbc9:	nop    DWORD PTR [rax+0x0]
  41fbd0:	lea    rax,[rbx+0x3]
  41fbd4:	mov    BYTE PTR [rbx],0x69
  41fbd7:	mov    BYTE PTR [rbx+0x1],0x6e
  41fbdb:	mov    BYTE PTR [rbx+0x2],0x66
  41fbdf:	mov    BYTE PTR [rbx+0x3],0x0
  41fbe3:	add    rsp,0x58
  41fbe7:	pop    rbx
  41fbe8:	sub    eax,r10d
  41fbeb:	pop    rbp
  41fbec:	pop    r12
  41fbee:	pop    r13
  41fbf0:	pop    r14
  41fbf2:	pop    r15
  41fbf4:	ret    
  41fbf5:	mov    r13d,0x1
  41fbfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc00:	mov    rsi,QWORD PTR [rsp]
  41fc04:	mov    rdx,rdi
  41fc07:	mov    QWORD PTR [rsp+0x38],r10
  41fc0c:	mov    r10d,DWORD PTR [rsp+0x28]
  41fc11:	vmovsd QWORD PTR [rsp+0x30],xmm0
  41fc17:	shlx   r9,r11,r9
  41fc1c:	sub    rdx,rsi
  41fc1f:	cmp    DWORD PTR [rsp+0x10],r10d
  41fc24:	jne    41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41fc2a:	cmp    rdi,rsi
  41fc2d:	jb     41fdca <flatcc_json_parser_table_as_root@@Base+0x17ba>
  41fc33:	sub    rsp,0x8
  41fc37:	mov    esi,r13d
  41fc3a:	mov    rdi,rbx
  41fc3d:	push   0x1
  41fc3f:	mov    r8,rax
  41fc42:	call   41f000 <flatcc_json_parser_table_as_root@@Base+0x9f0>
  41fc47:	pop    rsi
  41fc48:	pop    rdi
  41fc49:	mov    r10,QWORD PTR [rsp+0x38]
  41fc4e:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  41fc54:	jmp    41faa3 <flatcc_json_parser_table_as_root@@Base+0x1493>
  41fc59:	nop    DWORD PTR [rax+0x0]
  41fc60:	lea    ecx,[r12+r13*1]
  41fc64:	mov    edx,r12d
  41fc67:	neg    edx
  41fc69:	cmp    ecx,0xfffffffe
  41fc6c:	jl     41fcd8 <flatcc_json_parser_table_as_root@@Base+0x16c8>
  41fc6e:	cmp    edx,r13d
  41fc71:	jl     41fcd8 <flatcc_json_parser_table_as_root@@Base+0x16c8>
  41fc73:	movsxd rdx,r13d
  41fc76:	mov    edi,0x2
  41fc7b:	movsxd rax,r12d
  41fc7e:	sub    rdi,rdx
  41fc81:	mov    rsi,rbx
  41fc84:	mov    QWORD PTR [rsp],r10
  41fc88:	sub    rdi,rax
  41fc8b:	add    rdi,rbx
  41fc8e:	call   405110 <memmove@plt>
  41fc93:	mov    edx,0x2
  41fc98:	mov    BYTE PTR [rbx],0x30
  41fc9b:	mov    BYTE PTR [rbx+0x1],0x2e
  41fc9f:	sub    edx,r12d
  41fca2:	mov    r10,QWORD PTR [rsp]
  41fca6:	sub    edx,r13d
  41fca9:	cmp    edx,0x2
  41fcac:	jle    41fdc0 <flatcc_json_parser_table_as_root@@Base+0x17b0>
  41fcb2:	mov    eax,0x2
  41fcb7:	nop    WORD PTR [rax+rax*1+0x0]
  41fcc0:	mov    BYTE PTR [rbx+rax*1],0x30
  41fcc4:	add    rax,0x1
  41fcc8:	cmp    edx,eax
  41fcca:	jg     41fcc0 <flatcc_json_parser_table_as_root@@Base+0x16b0>
  41fccc:	add    r13d,edx
  41fccf:	jmp    41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fcd4:	nop    DWORD PTR [rax+0x0]
  41fcd8:	cmp    r13d,0x1
  41fcdc:	je     41fd30 <flatcc_json_parser_table_as_root@@Base+0x1720>
  41fcde:	cmp    eax,edx
  41fce0:	cmovle edx,eax
  41fce3:	test   edx,edx
  41fce5:	jle    41fd10 <flatcc_json_parser_table_as_root@@Base+0x1700>
  41fce7:	movsxd rcx,r13d
  41fcea:	lea    esi,[rdx-0x1]
  41fced:	lea    rax,[rbx+rcx*1]
  41fcf1:	sub    rcx,0x1
  41fcf5:	sub    rcx,rsi
  41fcf8:	lea    rsi,[rbx+rcx*1]
  41fcfc:	nop    DWORD PTR [rax+0x0]
  41fd00:	movzx  ecx,BYTE PTR [rax-0x1]
  41fd04:	sub    rax,0x1
  41fd08:	mov    BYTE PTR [rax+0x1],cl
  41fd0b:	cmp    rsi,rax
  41fd0e:	jne    41fd00 <flatcc_json_parser_table_as_root@@Base+0x16f0>
  41fd10:	mov    eax,r13d
  41fd13:	mov    edi,edx
  41fd15:	lea    ecx,[r13+0x1]
  41fd19:	sub    eax,edx
  41fd1b:	add    edi,r12d
  41fd1e:	cdqe   
  41fd20:	mov    BYTE PTR [rbx+rax*1],0x2e
  41fd24:	jne    41fd9a <flatcc_json_parser_table_as_root@@Base+0x178a>
  41fd26:	mov    r13d,ecx
  41fd29:	jmp    41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fd2e:	xchg   ax,ax
  41fd30:	lea    r11d,[r13+0x1]
  41fd34:	movsxd r13,r13d
  41fd37:	mov    edi,r12d
  41fd3a:	mov    BYTE PTR [rbx+r13*1],0x65
  41fd3f:	mov    QWORD PTR [rsp],r10
  41fd43:	movsxd rsi,r11d
  41fd46:	add    rsi,rbx
  41fd49:	call   41f0f0 <flatcc_json_parser_table_as_root@@Base+0xae0>
  41fd4e:	mov    r10,QWORD PTR [rsp]
  41fd52:	lea    r13d,[r11+rax*1]
  41fd56:	jmp    41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fd5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fd60:	lea    rcx,[rip+0x10e65]        # 430bcc <flatcc_builder_padding_base@@Base+0x1dac>
  41fd67:	mov    rdi,rbx
  41fd6a:	mov    rdx,0xffffffffffffffff
  41fd71:	mov    esi,0x1
  41fd76:	mov    eax,0x1
  41fd7b:	mov    QWORD PTR [rsp],r10
  41fd7f:	call   405150 <__sprintf_chk@plt>
  41fd84:	mov    r10,QWORD PTR [rsp]
  41fd88:	sub    rbx,r10
  41fd8b:	add    eax,ebx
  41fd8d:	jmp    41fb2e <flatcc_json_parser_table_as_root@@Base+0x151e>
  41fd92:	xor    r13d,r13d
  41fd95:	jmp    41fa08 <flatcc_json_parser_table_as_root@@Base+0x13f8>
  41fd9a:	add    r13d,0x2
  41fd9e:	movsxd rcx,ecx
  41fda1:	mov    QWORD PTR [rsp],r10
  41fda5:	movsxd rsi,r13d
  41fda8:	mov    BYTE PTR [rbx+rcx*1],0x65
  41fdac:	add    rsi,rbx
  41fdaf:	call   41f0f0 <flatcc_json_parser_table_as_root@@Base+0xae0>
  41fdb4:	mov    r10,QWORD PTR [rsp]
  41fdb8:	add    r13d,eax
  41fdbb:	jmp    41fb02 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  41fdc0:	mov    edx,0x2
  41fdc5:	jmp    41fccc <flatcc_json_parser_table_as_root@@Base+0x16bc>
  41fdca:	call   41f670 <flatcc_json_parser_table_as_root@@Base+0x1060>
  41fdcf:	lea    rcx,[rip+0x10f52]        # 430d28 <flatcc_builder_padding_base@@Base+0x1f08>
  41fdd6:	lea    rsi,[rip+0x10be3]        # 4309c0 <flatcc_builder_padding_base@@Base+0x1ba0>
  41fddd:	lea    rdi,[rip+0x10c54]        # 430a38 <flatcc_builder_padding_base@@Base+0x1c18>
  41fde4:	mov    edx,0x8a
  41fde9:	call   405080 <__assert_fail@plt>
  41fdee:	lea    rcx,[rip+0x10f3b]        # 430d30 <flatcc_builder_padding_base@@Base+0x1f10>
  41fdf5:	lea    rsi,[rip+0x10bc4]        # 4309c0 <flatcc_builder_padding_base@@Base+0x1ba0>
  41fdfc:	lea    rdi,[rip+0x10db7]        # 430bba <flatcc_builder_padding_base@@Base+0x1d9a>
  41fe03:	mov    edx,0xbd
  41fe08:	call   405080 <__assert_fail@plt>
  41fe0d:	nop    DWORD PTR [rax]
  41fe10:	push   rbp
  41fe11:	push   rbx
  41fe12:	mov    rbp,rdi
  41fe15:	sub    rsp,0x18
  41fe19:	mov    rax,QWORD PTR fs:0x28
  41fe22:	mov    QWORD PTR [rsp+0x8],rax
  41fe27:	xor    eax,eax
  41fe29:	test   rsi,rsi
  41fe2c:	mov    DWORD PTR [rsp+0x4],0x0
  41fe34:	je     41feab <flatcc_json_parser_table_as_root@@Base+0x189b>
  41fe36:	cmp    rdx,0x7
  41fe3a:	jbe    41feab <flatcc_json_parser_table_as_root@@Base+0x189b>
  41fe3c:	test   rcx,rcx
  41fe3f:	je     41fe63 <flatcc_json_parser_table_as_root@@Base+0x1853>
  41fe41:	lea    rdi,[rsp+0x4]
  41fe46:	mov    rbx,rsi
  41fe49:	mov    edx,0x4
  41fe4e:	mov    rsi,rcx
  41fe51:	call   405040 <strncpy@plt>
  41fe56:	mov    eax,DWORD PTR [rsp+0x4]
  41fe5a:	cmp    DWORD PTR [rbx+0x4],eax
  41fe5d:	je     41fe63 <flatcc_json_parser_table_as_root@@Base+0x1853>
  41fe5f:	test   eax,eax
  41fe61:	jne    41fe7f <flatcc_json_parser_table_as_root@@Base+0x186f>
  41fe63:	mov    rsi,QWORD PTR [rsp+0x8]
  41fe68:	xor    rsi,QWORD PTR fs:0x28
  41fe71:	mov    eax,0x1
  41fe76:	jne    41fed7 <flatcc_json_parser_table_as_root@@Base+0x18c7>
  41fe78:	add    rsp,0x18
  41fe7c:	pop    rbx
  41fe7d:	pop    rbp
  41fe7e:	ret    
  41fe7f:	cmp    DWORD PTR [rbp+0x3c],0x0
  41fe83:	jne    41fe8c <flatcc_json_parser_table_as_root@@Base+0x187c>
  41fe85:	mov    DWORD PTR [rbp+0x3c],0x1
  41fe8c:	lea    rcx,[rip+0x10dcd]        # 430c60 <flatcc_builder_padding_base@@Base+0x1e40>
  41fe93:	lea    rsi,[rip+0x10bc6]        # 430a60 <flatcc_builder_padding_base@@Base+0x1c40>
  41fe9a:	lea    rdi,[rip+0x10d31]        # 430bd2 <flatcc_builder_padding_base@@Base+0x1db2>
  41fea1:	mov    edx,0x404
  41fea6:	call   405080 <__assert_fail@plt>
  41feab:	cmp    DWORD PTR [rbp+0x3c],0x0
  41feaf:	jne    41feb8 <flatcc_json_parser_table_as_root@@Base+0x18a8>
  41feb1:	mov    DWORD PTR [rbp+0x3c],0x1
  41feb8:	lea    rcx,[rip+0x10da1]        # 430c60 <flatcc_builder_padding_base@@Base+0x1e40>
  41febf:	lea    rsi,[rip+0x10b9a]        # 430a60 <flatcc_builder_padding_base@@Base+0x1c40>
  41fec6:	lea    rdi,[rip+0x10bfb]        # 430ac8 <flatcc_builder_padding_base@@Base+0x1ca8>
  41fecd:	mov    edx,0x3fb
  41fed2:	call   405080 <__assert_fail@plt>
  41fed7:	call   405070 <__stack_chk_fail@plt>
  41fedc:	nop    DWORD PTR [rax+0x0]
  41fee0:	test   rdx,rdx
  41fee3:	mov    eax,0x2
  41fee8:	je     41ff14 <flatcc_json_parser_table_as_root@@Base+0x1904>
  41feea:	mov    eax,ecx
  41feec:	mov    r9,QWORD PTR [rdx]
  41feef:	and    eax,0xffffff1f
  41fef4:	je     420008 <flatcc_json_parser_table_as_root@@Base+0x19f8>
  41fefa:	cmp    eax,0x1
  41fefd:	lea    r8,[rip+0x10c2c]        # 430b30 <flatcc_builder_padding_base@@Base+0x1d10>
  41ff04:	je     41ff94 <flatcc_json_parser_table_as_root@@Base+0x1984>
  41ff0a:	xor    ecx,ecx
  41ff0c:	mov    eax,0x3
  41ff11:	mov    QWORD PTR [rdx],rcx
  41ff14:	repz ret 
  41ff16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff20:	movzx  eax,BYTE PTR [rsi]
  41ff23:	sub    r9,0x3
  41ff27:	add    rdi,0x4
  41ff2b:	add    rsi,0x3
  41ff2f:	shr    al,0x2
  41ff32:	movzx  eax,al
  41ff35:	movzx  eax,BYTE PTR [r8+rax*1]
  41ff3a:	mov    BYTE PTR [rdi-0x4],al
  41ff3d:	movzx  eax,BYTE PTR [rsi-0x3]
  41ff41:	movzx  r10d,BYTE PTR [rsi-0x2]
  41ff46:	shl    eax,0x4
  41ff49:	shr    r10b,0x4
  41ff4d:	and    eax,0x30
  41ff50:	movzx  r10d,r10b
  41ff54:	or     eax,r10d
  41ff57:	cdqe   
  41ff59:	movzx  eax,BYTE PTR [r8+rax*1]
  41ff5e:	mov    BYTE PTR [rdi-0x3],al
  41ff61:	movzx  eax,BYTE PTR [rsi-0x2]
  41ff65:	movzx  r10d,BYTE PTR [rsi-0x1]
  41ff6a:	shl    eax,0x2
  41ff6d:	shr    r10b,0x6
  41ff71:	and    eax,0x3c
  41ff74:	movzx  r10d,r10b
  41ff78:	or     eax,r10d
  41ff7b:	cdqe   
  41ff7d:	movzx  eax,BYTE PTR [r8+rax*1]
  41ff82:	mov    BYTE PTR [rdi-0x2],al
  41ff85:	movzx  eax,BYTE PTR [rsi-0x1]
  41ff89:	and    eax,0x3f
  41ff8c:	movzx  eax,BYTE PTR [r8+rax*1]
  41ff91:	mov    BYTE PTR [rdi-0x1],al
  41ff94:	cmp    r9,0x2
  41ff98:	ja     41ff20 <flatcc_json_parser_table_as_root@@Base+0x1910>
  41ff9a:	mov    eax,ecx
  41ff9c:	and    eax,0x80
  41ffa1:	cmp    r9,0x1
  41ffa5:	je     420018 <flatcc_json_parser_table_as_root@@Base+0x1a08>
  41ffa7:	cmp    r9,0x2
  41ffab:	jne    41fffb <flatcc_json_parser_table_as_root@@Base+0x19eb>
  41ffad:	movzx  ecx,BYTE PTR [rsi]
  41ffb0:	shr    cl,0x2
  41ffb3:	movzx  ecx,cl
  41ffb6:	movzx  ecx,BYTE PTR [r8+rcx*1]
  41ffbb:	mov    BYTE PTR [rdi],cl
  41ffbd:	movzx  ecx,BYTE PTR [rsi]
  41ffc0:	movzx  r9d,BYTE PTR [rsi+0x1]
  41ffc5:	shl    ecx,0x4
  41ffc8:	shr    r9b,0x4
  41ffcc:	and    ecx,0x30
  41ffcf:	movzx  r9d,r9b
  41ffd3:	or     ecx,r9d
  41ffd6:	movsxd rcx,ecx
  41ffd9:	movzx  ecx,BYTE PTR [r8+rcx*1]
  41ffde:	mov    BYTE PTR [rdi+0x1],cl
  41ffe1:	movzx  ecx,BYTE PTR [rsi+0x1]
  41ffe5:	shl    ecx,0x2
  41ffe8:	and    ecx,0x3c
  41ffeb:	test   eax,eax
  41ffed:	movzx  ecx,BYTE PTR [r8+rcx*1]
  41fff2:	mov    BYTE PTR [rdi+0x2],cl
  41fff5:	je     420048 <flatcc_json_parser_table_as_root@@Base+0x1a38>
  41fff7:	mov    BYTE PTR [rdi+0x3],0x3d
  41fffb:	mov    rcx,QWORD PTR [rdx]
  41fffe:	xor    eax,eax
  420000:	jmp    41ff11 <flatcc_json_parser_table_as_root@@Base+0x1901>
  420005:	nop    DWORD PTR [rax]
  420008:	lea    r8,[rip+0x10ad9]        # 430ae8 <flatcc_builder_padding_base@@Base+0x1cc8>
  42000f:	jmp    41ff94 <flatcc_json_parser_table_as_root@@Base+0x1984>
  420011:	nop    DWORD PTR [rax+0x0]
  420018:	movzx  ecx,BYTE PTR [rsi]
  42001b:	shr    cl,0x2
  42001e:	movzx  ecx,cl
  420021:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420026:	mov    BYTE PTR [rdi],cl
  420028:	movzx  ecx,BYTE PTR [rsi]
  42002b:	shl    ecx,0x4
  42002e:	and    ecx,0x30
  420031:	test   eax,eax
  420033:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420038:	mov    BYTE PTR [rdi+0x1],cl
  42003b:	je     420048 <flatcc_json_parser_table_as_root@@Base+0x1a38>
  42003d:	mov    BYTE PTR [rdi+0x2],0x3d
  420041:	jmp    41fff7 <flatcc_json_parser_table_as_root@@Base+0x19e7>
  420043:	nop    DWORD PTR [rax+rax*1+0x0]
  420048:	mov    rcx,QWORD PTR [rdx]
  42004b:	jmp    41ff11 <flatcc_json_parser_table_as_root@@Base+0x1901>
  420050:	push   r14
  420052:	push   r13
  420054:	mov    r14,rdx
  420057:	push   r12
  420059:	push   rbp
  42005a:	mov    r12,rdi
  42005d:	push   rbx
  42005e:	mov    rax,QWORD PTR [rdi+0x28]
  420062:	mov    rbp,rsi
  420065:	lea    rdx,[rax+0x1]
  420069:	mov    QWORD PTR [rdi+0x28],rdx
  42006d:	mov    BYTE PTR [rax],0x22
  420070:	movzx  ebx,BYTE PTR [rsi]
  420073:	cmp    bl,0x22
  420076:	je     4201a7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  42007c:	nop    DWORD PTR [rax+0x0]
  420080:	cmp    bl,0x1f
  420083:	jbe    4201a7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  420089:	cmp    bl,0x5c
  42008c:	je     4201a7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  420092:	nop    WORD PTR [rax+rax*1+0x0]
  420098:	add    rbp,0x1
  42009c:	movzx  ebx,BYTE PTR [rbp+0x0]
  4200a0:	cmp    bl,0x1f
  4200a3:	jbe    4200af <flatcc_json_parser_table_as_root@@Base+0x1a9f>
  4200a5:	cmp    bl,0x22
  4200a8:	je     4200af <flatcc_json_parser_table_as_root@@Base+0x1a9f>
  4200aa:	cmp    bl,0x5c
  4200ad:	jne    420098 <flatcc_json_parser_table_as_root@@Base+0x1a88>
  4200af:	mov    r13,rbp
  4200b2:	sub    r13,rsi
  4200b5:	mov    rdi,QWORD PTR [r12+0x28]
  4200ba:	mov    rdx,r13
  4200bd:	lea    rax,[rdi+r13*1]
  4200c1:	cmp    QWORD PTR [r12+0x20],rax
  4200c6:	jbe    4201e0 <flatcc_json_parser_table_as_root@@Base+0x1bd0>
  4200cc:	call   4050e0 <memcpy@plt>
  4200d1:	mov    rax,r13
  4200d4:	add    rax,QWORD PTR [r12+0x28]
  4200d9:	sub    r14,r13
  4200dc:	lea    rdx,[rax+0x1]
  4200e0:	mov    QWORD PTR [r12+0x28],rax
  4200e5:	mov    QWORD PTR [r12+0x28],rdx
  4200ea:	je     4201ff <flatcc_json_parser_table_as_root@@Base+0x1bef>
  4200f0:	cmp    bl,0xc
  4200f3:	mov    BYTE PTR [rax],0x5c
  4200f6:	je     420210 <flatcc_json_parser_table_as_root@@Base+0x1c00>
  4200fc:	ja     4201b0 <flatcc_json_parser_table_as_root@@Base+0x1ba0>
  420102:	cmp    bl,0x9
  420105:	je     4202a0 <flatcc_json_parser_table_as_root@@Base+0x1c90>
  42010b:	cmp    bl,0xa
  42010e:	je     420280 <flatcc_json_parser_table_as_root@@Base+0x1c70>
  420114:	cmp    bl,0x8
  420117:	je     420266 <flatcc_json_parser_table_as_root@@Base+0x1c56>
  42011d:	mov    rax,QWORD PTR [r12+0x28]
  420122:	mov    ecx,ebx
  420124:	shr    cl,0x4
  420127:	cmp    cl,0xa
  42012a:	lea    rdx,[rax+0x1]
  42012e:	mov    QWORD PTR [r12+0x28],rdx
  420133:	mov    BYTE PTR [rax],0x75
  420136:	mov    rax,QWORD PTR [r12+0x28]
  42013b:	lea    rdx,[rax+0x1]
  42013f:	mov    QWORD PTR [r12+0x28],rdx
  420144:	mov    BYTE PTR [rax],0x30
  420147:	mov    rax,QWORD PTR [r12+0x28]
  42014c:	lea    rdx,[rax+0x1]
  420150:	mov    QWORD PTR [r12+0x28],rdx
  420155:	mov    BYTE PTR [rax],0x30
  420158:	sbb    eax,eax
  42015a:	mov    rdx,QWORD PTR [r12+0x28]
  42015f:	and    eax,0xffffffd9
  420162:	and    ebx,0xf
  420165:	lea    eax,[rax+rcx*1+0x57]
  420169:	cmp    bl,0xa
  42016c:	lea    rsi,[rdx+0x1]
  420170:	mov    QWORD PTR [r12+0x28],rsi
  420175:	mov    BYTE PTR [rdx],al
  420177:	sbb    eax,eax
  420179:	mov    rdx,QWORD PTR [r12+0x28]
  42017e:	and    eax,0xffffffd9
  420181:	lea    ebx,[rax+rbx*1+0x57]
  420185:	lea    rcx,[rdx+0x1]
  420189:	mov    QWORD PTR [r12+0x28],rcx
  42018e:	mov    BYTE PTR [rdx],bl
  420190:	lea    rsi,[rbp+0x1]
  420194:	movzx  ebx,BYTE PTR [rsi]
  420197:	sub    r14,0x1
  42019b:	mov    rbp,rsi
  42019e:	cmp    bl,0x22
  4201a1:	jne    420080 <flatcc_json_parser_table_as_root@@Base+0x1a70>
  4201a7:	xor    r13d,r13d
  4201aa:	jmp    4200b5 <flatcc_json_parser_table_as_root@@Base+0x1aa5>
  4201af:	nop
  4201b0:	cmp    bl,0x22
  4201b3:	je     420250 <flatcc_json_parser_table_as_root@@Base+0x1c40>
  4201b9:	cmp    bl,0x5c
  4201bc:	je     420230 <flatcc_json_parser_table_as_root@@Base+0x1c20>
  4201be:	cmp    bl,0xd
  4201c1:	jne    42011d <flatcc_json_parser_table_as_root@@Base+0x1b0d>
  4201c7:	mov    rax,QWORD PTR [r12+0x28]
  4201cc:	lea    rdx,[rax+0x1]
  4201d0:	mov    QWORD PTR [r12+0x28],rdx
  4201d5:	mov    BYTE PTR [rax],0x72
  4201d8:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  4201da:	nop    WORD PTR [rax+rax*1+0x0]
  4201e0:	mov    rdi,r12
  4201e3:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4201e8:	mov    rax,QWORD PTR [r12+0x28]
  4201ed:	sub    r14,r13
  4201f0:	lea    rdx,[rax+0x1]
  4201f4:	mov    QWORD PTR [r12+0x28],rdx
  4201f9:	jne    4200f0 <flatcc_json_parser_table_as_root@@Base+0x1ae0>
  4201ff:	mov    BYTE PTR [rax],0x22
  420202:	pop    rbx
  420203:	pop    rbp
  420204:	pop    r12
  420206:	pop    r13
  420208:	pop    r14
  42020a:	ret    
  42020b:	nop    DWORD PTR [rax+rax*1+0x0]
  420210:	mov    rax,QWORD PTR [r12+0x28]
  420215:	lea    rdx,[rax+0x1]
  420219:	mov    QWORD PTR [r12+0x28],rdx
  42021e:	mov    BYTE PTR [rax],0x66
  420221:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420230:	mov    rax,QWORD PTR [r12+0x28]
  420235:	lea    rdx,[rax+0x1]
  420239:	mov    QWORD PTR [r12+0x28],rdx
  42023e:	mov    BYTE PTR [rax],0x5c
  420241:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420250:	mov    rax,QWORD PTR [r12+0x28]
  420255:	lea    rdx,[rax+0x1]
  420259:	mov    QWORD PTR [r12+0x28],rdx
  42025e:	mov    BYTE PTR [rax],0x22
  420261:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420266:	mov    rax,QWORD PTR [r12+0x28]
  42026b:	lea    rdx,[rax+0x1]
  42026f:	mov    QWORD PTR [r12+0x28],rdx
  420274:	mov    BYTE PTR [rax],0x62
  420277:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  42027c:	nop    DWORD PTR [rax+0x0]
  420280:	mov    rax,QWORD PTR [r12+0x28]
  420285:	lea    rdx,[rax+0x1]
  420289:	mov    QWORD PTR [r12+0x28],rdx
  42028e:	mov    BYTE PTR [rax],0x6e
  420291:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202a0:	mov    rax,QWORD PTR [r12+0x28]
  4202a5:	lea    rdx,[rax+0x1]
  4202a9:	mov    QWORD PTR [r12+0x28],rdx
  4202ae:	mov    BYTE PTR [rax],0x74
  4202b1:	jmp    420190 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  4202b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202c0:	push   r13
  4202c2:	push   r12
  4202c4:	mov    r13,rsi
  4202c7:	push   rbp
  4202c8:	push   rbx
  4202c9:	mov    rbp,rdx
  4202cc:	mov    rbx,rdi
  4202cf:	sub    rsp,0x8
  4202d3:	cmp    BYTE PTR [rdi+0x31],0x0
  4202d7:	jne    420380 <flatcc_json_parser_table_as_root@@Base+0x1d70>
  4202dd:	mov    rsi,QWORD PTR [rdi+0x28]
  4202e1:	cmp    rsi,QWORD PTR [rdi+0x20]
  4202e5:	jae    420358 <flatcc_json_parser_table_as_root@@Base+0x1d48>
  4202e7:	mov    BYTE PTR [rsi],0x22
  4202ea:	xor    edi,edi
  4202ec:	cmp    BYTE PTR [rbx+0x32],0x0
  4202f0:	mov    rdx,rbp
  4202f3:	mov    rsi,r13
  4202f6:	sete   dil
  4202fa:	add    rdi,QWORD PTR [rbx+0x28]
  4202fe:	lea    rax,[rdi+rbp*1]
  420302:	cmp    QWORD PTR [rbx+0x20],rax
  420306:	mov    QWORD PTR [rbx+0x28],rdi
  42030a:	ja     420368 <flatcc_json_parser_table_as_root@@Base+0x1d58>
  42030c:	mov    rdi,rbx
  42030f:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420314:	mov    rbp,QWORD PTR [rbx+0x28]
  420318:	mov    BYTE PTR [rbp+0x0],0x22
  42031c:	xor    eax,eax
  42031e:	cmp    BYTE PTR [rbx+0x32],0x0
  420322:	sete   al
  420325:	add    rax,QWORD PTR [rbx+0x28]
  420329:	lea    rdx,[rax+0x1]
  42032d:	mov    QWORD PTR [rbx+0x28],rdx
  420331:	mov    BYTE PTR [rax],0x3a
  420334:	mov    rax,QWORD PTR [rbx+0x28]
  420338:	mov    BYTE PTR [rax],0x20
  42033b:	xor    eax,eax
  42033d:	cmp    BYTE PTR [rbx+0x31],0x0
  420341:	setne  al
  420344:	add    QWORD PTR [rbx+0x28],rax
  420348:	add    rsp,0x8
  42034c:	pop    rbx
  42034d:	pop    rbp
  42034e:	pop    r12
  420350:	pop    r13
  420352:	ret    
  420353:	nop    DWORD PTR [rax+rax*1+0x0]
  420358:	xor    esi,esi
  42035a:	call   QWORD PTR [rdi+0x48]
  42035d:	mov    rsi,QWORD PTR [rbx+0x28]
  420361:	jmp    4202e7 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  420363:	nop    DWORD PTR [rax+rax*1+0x0]
  420368:	call   4050e0 <memcpy@plt>
  42036d:	add    rbp,QWORD PTR [rbx+0x28]
  420371:	mov    QWORD PTR [rbx+0x28],rbp
  420375:	jmp    420318 <flatcc_json_parser_table_as_root@@Base+0x1d08>
  420377:	nop    WORD PTR [rax+rax*1+0x0]
  420380:	mov    rax,QWORD PTR [rdi+0x28]
  420384:	lea    rdx,[rax+0x1]
  420388:	mov    QWORD PTR [rdi+0x28],rdx
  42038c:	mov    BYTE PTR [rax],0xa
  42038f:	movzx  esi,BYTE PTR [rdi+0x31]
  420393:	imul   esi,DWORD PTR [rdi+0x38]
  420397:	mov    rdi,QWORD PTR [rdi+0x28]
  42039b:	movsxd r12,esi
  42039e:	lea    rax,[rdi+r12*1]
  4203a2:	cmp    QWORD PTR [rbx+0x20],rax
  4203a6:	jb     4203c8 <flatcc_json_parser_table_as_root@@Base+0x1db8>
  4203a8:	mov    esi,0x20
  4203ad:	mov    rdx,r12
  4203b0:	call   405090 <memset@plt>
  4203b5:	mov    rsi,r12
  4203b8:	add    rsi,QWORD PTR [rbx+0x28]
  4203bc:	mov    QWORD PTR [rbx+0x28],rsi
  4203c0:	jmp    4202e7 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  4203c5:	nop    DWORD PTR [rax]
  4203c8:	mov    rsi,r12
  4203cb:	mov    rdi,rbx
  4203ce:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4203d3:	mov    rsi,QWORD PTR [rbx+0x28]
  4203d7:	jmp    4202e7 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  4203dc:	nop    DWORD PTR [rax+0x0]

00000000004203e0 <flatcc_json_printer_error_string@@Base>:
  4203e0:	cmp    edi,0x1
  4203e3:	lea    rax,[rip+0x10803]        # 430bed <flatcc_builder_padding_base@@Base+0x1dcd>
  4203ea:	je     420406 <flatcc_json_printer_error_string@@Base+0x26>
  4203ec:	jle    420410 <flatcc_json_printer_error_string@@Base+0x30>
  4203ee:	cmp    edi,0x2
  4203f1:	lea    rax,[rip+0x107ff]        # 430bf7 <flatcc_builder_padding_base@@Base+0x1dd7>
  4203f8:	je     420406 <flatcc_json_printer_error_string@@Base+0x26>
  4203fa:	cmp    edi,0x3
  4203fd:	lea    rax,[rip+0xed27]        # 42f12b <flatcc_builder_padding_base@@Base+0x30b>
  420404:	jne    42041b <flatcc_json_printer_error_string@@Base+0x3b>
  420406:	repz ret 
  420408:	nop    DWORD PTR [rax+rax*1+0x0]
  420410:	test   edi,edi
  420412:	lea    rax,[rip+0xec07]        # 42f020 <flatcc_builder_padding_base@@Base+0x200>
  420419:	je     420406 <flatcc_json_printer_error_string@@Base+0x26>
  42041b:	lea    rax,[rip+0xeda8]        # 42f1ca <flatcc_builder_padding_base@@Base+0x3aa>
  420422:	ret    
  420423:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42042e:	xchg   ax,ax

0000000000420430 <flatcc_json_printer_fmt_float@@Base>:
  420430:	vcvtss2sd xmm0,xmm0,xmm0
  420434:	jmp    41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  420439:	nop    DWORD PTR [rax+0x0]

0000000000420440 <flatcc_json_printer_fmt_double@@Base>:
  420440:	jmp    41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  420445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000420450 <flatcc_json_printer_fmt_bool@@Base>:
  420450:	test   esi,esi
  420452:	jne    420468 <flatcc_json_printer_fmt_bool@@Base+0x18>
  420454:	mov    DWORD PTR [rdi],0x736c6166
  42045a:	mov    BYTE PTR [rdi+0x4],0x65
  42045e:	mov    eax,0x5
  420463:	ret    
  420464:	nop    DWORD PTR [rax+0x0]
  420468:	mov    DWORD PTR [rdi],0x65757274
  42046e:	mov    eax,0x4
  420473:	ret    
  420474:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42047f:	nop

0000000000420480 <flatcc_json_printer_string@@Base>:
  420480:	movsxd rdx,edx
  420483:	jmp    420050 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  420488:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420490 <flatcc_json_printer_write@@Base>:
  420490:	push   rbp
  420491:	push   rbx
  420492:	movsxd rbp,edx
  420495:	sub    rsp,0x8
  420499:	mov    rax,QWORD PTR [rdi+0x28]
  42049d:	lea    rdx,[rax+rbp*1]
  4204a1:	cmp    QWORD PTR [rdi+0x20],rdx
  4204a5:	jbe    4204c0 <flatcc_json_printer_write@@Base+0x30>
  4204a7:	mov    rbx,rdi
  4204aa:	mov    rdx,rbp
  4204ad:	mov    rdi,rax
  4204b0:	call   4050e0 <memcpy@plt>
  4204b5:	add    QWORD PTR [rbx+0x28],rbp
  4204b9:	add    rsp,0x8
  4204bd:	pop    rbx
  4204be:	pop    rbp
  4204bf:	ret    
  4204c0:	add    rsp,0x8
  4204c4:	mov    rdx,rbp
  4204c7:	pop    rbx
  4204c8:	pop    rbp
  4204c9:	jmp    41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4204ce:	xchg   ax,ax

00000000004204d0 <flatcc_json_printer_nl@@Base>:
  4204d0:	mov    rax,QWORD PTR [rdi+0x28]
  4204d4:	lea    rdx,[rax+0x1]
  4204d8:	mov    QWORD PTR [rdi+0x28],rdx
  4204dc:	mov    BYTE PTR [rax],0xa
  4204df:	mov    rax,QWORD PTR [rdi+0x20]
  4204e3:	cmp    QWORD PTR [rdi+0x28],rax
  4204e7:	jae    4204f0 <flatcc_json_printer_nl@@Base+0x20>
  4204e9:	repz ret 
  4204eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4204f0:	mov    rax,QWORD PTR [rdi+0x48]
  4204f4:	xor    esi,esi
  4204f6:	jmp    rax
  4204f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420500 <flatcc_json_printer_char@@Base>:
  420500:	mov    rax,QWORD PTR [rdi+0x28]
  420504:	lea    rdx,[rax+0x1]
  420508:	mov    QWORD PTR [rdi+0x28],rdx
  42050c:	mov    BYTE PTR [rax],sil
  42050f:	ret    

0000000000420510 <flatcc_json_printer_indent@@Base>:
  420510:	push   rbp
  420511:	push   rbx
  420512:	sub    rsp,0x8
  420516:	movzx  ebp,BYTE PTR [rdi+0x31]
  42051a:	mov    rax,QWORD PTR [rdi+0x28]
  42051e:	imul   ebp,DWORD PTR [rdi+0x38]
  420522:	movsxd rbp,ebp
  420525:	lea    rdx,[rax+rbp*1]
  420529:	cmp    QWORD PTR [rdi+0x20],rdx
  42052d:	jb     420550 <flatcc_json_printer_indent@@Base+0x40>
  42052f:	mov    rbx,rdi
  420532:	mov    rdx,rbp
  420535:	mov    esi,0x20
  42053a:	mov    rdi,rax
  42053d:	call   405090 <memset@plt>
  420542:	add    QWORD PTR [rbx+0x28],rbp
  420546:	add    rsp,0x8
  42054a:	pop    rbx
  42054b:	pop    rbp
  42054c:	ret    
  42054d:	nop    DWORD PTR [rax]
  420550:	add    rsp,0x8
  420554:	mov    rsi,rbp
  420557:	pop    rbx
  420558:	pop    rbp
  420559:	jmp    41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42055e:	xchg   ax,ax

0000000000420560 <flatcc_json_printer_add_level@@Base>:
  420560:	add    DWORD PTR [rdi+0x38],esi
  420563:	ret    
  420564:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42056f:	nop

0000000000420570 <flatcc_json_printer_get_level@@Base>:
  420570:	mov    eax,DWORD PTR [rdi+0x38]
  420573:	ret    
  420574:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42057f:	nop

0000000000420580 <flatcc_json_printer_uint8@@Base>:
  420580:	push   rbx
  420581:	mov    rbx,rdi
  420584:	movzx  edi,sil
  420588:	mov    rsi,QWORD PTR [rbx+0x28]
  42058c:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  420591:	cdqe   
  420593:	add    QWORD PTR [rbx+0x28],rax
  420597:	pop    rbx
  420598:	ret    
  420599:	nop    DWORD PTR [rax+0x0]

00000000004205a0 <flatcc_json_printer_uint16@@Base>:
  4205a0:	push   rbx
  4205a1:	mov    rbx,rdi
  4205a4:	movzx  edi,si
  4205a7:	mov    rsi,QWORD PTR [rbx+0x28]
  4205ab:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  4205b0:	cdqe   
  4205b2:	add    QWORD PTR [rbx+0x28],rax
  4205b6:	pop    rbx
  4205b7:	ret    
  4205b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004205c0 <flatcc_json_printer_uint32@@Base>:
  4205c0:	mov    r10,rdi
  4205c3:	mov    edi,esi
  4205c5:	mov    rsi,QWORD PTR [r10+0x28]
  4205c9:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4205ce:	cdqe   
  4205d0:	add    QWORD PTR [r10+0x28],rax
  4205d4:	ret    
  4205d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004205e0 <flatcc_json_printer_uint64@@Base>:
  4205e0:	push   rbx
  4205e1:	mov    rbx,rdi
  4205e4:	mov    rdi,rsi
  4205e7:	mov    rsi,QWORD PTR [rbx+0x28]
  4205eb:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4205f0:	cdqe   
  4205f2:	add    QWORD PTR [rbx+0x28],rax
  4205f6:	pop    rbx
  4205f7:	ret    
  4205f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420600 <flatcc_json_printer_int8@@Base>:
  420600:	mov    eax,esi
  420602:	mov    r9,rdi
  420605:	mov    edi,esi
  420607:	movsx  r8d,al
  42060b:	mov    rsi,QWORD PTR [r9+0x28]
  42060f:	shr    r8d,0x1f
  420613:	test   al,al
  420615:	jns    420620 <flatcc_json_printer_int8@@Base+0x20>
  420617:	mov    BYTE PTR [rsi],0x2d
  42061a:	neg    edi
  42061c:	add    rsi,0x1
  420620:	movzx  edi,dil
  420624:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  420629:	add    r8d,eax
  42062c:	movsxd r8,r8d
  42062f:	add    QWORD PTR [r9+0x28],r8
  420633:	ret    
  420634:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42063f:	nop

0000000000420640 <flatcc_json_printer_int16@@Base>:
  420640:	mov    eax,esi
  420642:	push   rbx
  420643:	mov    rbx,rdi
  420646:	movsx  r11d,ax
  42064a:	mov    edi,esi
  42064c:	mov    rsi,QWORD PTR [rbx+0x28]
  420650:	shr    r11d,0x1f
  420654:	test   ax,ax
  420657:	jns    420662 <flatcc_json_printer_int16@@Base+0x22>
  420659:	mov    BYTE PTR [rsi],0x2d
  42065c:	neg    edi
  42065e:	add    rsi,0x1
  420662:	movzx  edi,di
  420665:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  42066a:	add    r11d,eax
  42066d:	movsxd r11,r11d
  420670:	add    QWORD PTR [rbx+0x28],r11
  420674:	pop    rbx
  420675:	ret    
  420676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420680 <flatcc_json_printer_int32@@Base>:
  420680:	mov    r11,rdi
  420683:	mov    edi,esi
  420685:	mov    r10d,edi
  420688:	mov    rsi,QWORD PTR [r11+0x28]
  42068c:	shr    r10d,0x1f
  420690:	test   edi,edi
  420692:	jns    42069d <flatcc_json_printer_int32@@Base+0x1d>
  420694:	mov    BYTE PTR [rsi],0x2d
  420697:	neg    edi
  420699:	add    rsi,0x1
  42069d:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4206a2:	add    r10d,eax
  4206a5:	movsxd r10,r10d
  4206a8:	add    QWORD PTR [r11+0x28],r10
  4206ac:	ret    
  4206ad:	nop    DWORD PTR [rax]

00000000004206b0 <flatcc_json_printer_int64@@Base>:
  4206b0:	push   rbp
  4206b1:	push   rbx
  4206b2:	mov    rbx,rdi
  4206b5:	mov    rdi,rsi
  4206b8:	mov    rsi,QWORD PTR [rbx+0x28]
  4206bc:	mov    rbp,rdi
  4206bf:	shr    rbp,0x3f
  4206c3:	test   rdi,rdi
  4206c6:	jns    4206d2 <flatcc_json_printer_int64@@Base+0x22>
  4206c8:	mov    BYTE PTR [rsi],0x2d
  4206cb:	neg    rdi
  4206ce:	add    rsi,0x1
  4206d2:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4206d7:	add    eax,ebp
  4206d9:	cdqe   
  4206db:	add    QWORD PTR [rbx+0x28],rax
  4206df:	pop    rbx
  4206e0:	pop    rbp
  4206e1:	ret    
  4206e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4206ed:	nop    DWORD PTR [rax]

00000000004206f0 <flatcc_json_printer_float@@Base>:
  4206f0:	push   rbx
  4206f1:	mov    rbx,rdi
  4206f4:	mov    rdi,QWORD PTR [rdi+0x28]
  4206f8:	vcvtss2sd xmm0,xmm0,xmm0
  4206fc:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  420701:	cdqe   
  420703:	add    QWORD PTR [rbx+0x28],rax
  420707:	pop    rbx
  420708:	ret    
  420709:	nop    DWORD PTR [rax+0x0]

0000000000420710 <flatcc_json_printer_double@@Base>:
  420710:	push   rbx
  420711:	mov    rbx,rdi
  420714:	mov    rdi,QWORD PTR [rdi+0x28]
  420718:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  42071d:	cdqe   
  42071f:	add    QWORD PTR [rbx+0x28],rax
  420723:	pop    rbx
  420724:	ret    
  420725:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000420730 <flatcc_json_printer_enum@@Base>:
  420730:	push   rbp
  420731:	push   rbx
  420732:	mov    rbx,rdi
  420735:	movsxd rbp,edx
  420738:	sub    rsp,0x8
  42073c:	mov    rax,QWORD PTR [rdi+0x28]
  420740:	mov    rdx,rbp
  420743:	mov    BYTE PTR [rax],0x22
  420746:	cmp    BYTE PTR [rdi+0x32],0x0
  42074a:	sete   dil
  42074e:	movzx  edi,dil
  420752:	add    rdi,QWORD PTR [rbx+0x28]
  420756:	lea    rax,[rdi+rbp*1]
  42075a:	cmp    QWORD PTR [rbx+0x20],rax
  42075e:	mov    QWORD PTR [rbx+0x28],rdi
  420762:	ja     420790 <flatcc_json_printer_enum@@Base+0x60>
  420764:	mov    rdi,rbx
  420767:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42076c:	mov    rbp,QWORD PTR [rbx+0x28]
  420770:	mov    BYTE PTR [rbp+0x0],0x22
  420774:	xor    eax,eax
  420776:	cmp    BYTE PTR [rbx+0x32],0x0
  42077a:	sete   al
  42077d:	add    QWORD PTR [rbx+0x28],rax
  420781:	add    rsp,0x8
  420785:	pop    rbx
  420786:	pop    rbp
  420787:	ret    
  420788:	nop    DWORD PTR [rax+rax*1+0x0]
  420790:	call   4050e0 <memcpy@plt>
  420795:	add    rbp,QWORD PTR [rbx+0x28]
  420799:	mov    QWORD PTR [rbx+0x28],rbp
  42079d:	jmp    420770 <flatcc_json_printer_enum@@Base+0x40>
  42079f:	nop

00000000004207a0 <flatcc_json_printer_delimit_enum_flags@@Base>:
  4207a0:	cmp    BYTE PTR [rdi+0x32],0x0
  4207a4:	sete   al
  4207a7:	test   esi,esi
  4207a9:	setne  dl
  4207ac:	or     eax,edx
  4207ae:	mov    rdx,QWORD PTR [rdi+0x28]
  4207b2:	movzx  eax,al
  4207b5:	mov    BYTE PTR [rdx],0x22
  4207b8:	add    QWORD PTR [rdi+0x28],rax
  4207bc:	ret    
  4207bd:	nop    DWORD PTR [rax]

00000000004207c0 <flatcc_json_printer_enum_flag@@Base>:
  4207c0:	push   rbp
  4207c1:	push   rbx
  4207c2:	movsxd rbp,ecx
  4207c5:	mov    r8,rdx
  4207c8:	sub    rsp,0x8
  4207cc:	mov    rax,QWORD PTR [rdi+0x28]
  4207d0:	mov    BYTE PTR [rax],0x20
  4207d3:	xor    eax,eax
  4207d5:	test   esi,esi
  4207d7:	setg   al
  4207da:	add    rax,QWORD PTR [rdi+0x28]
  4207de:	lea    rdx,[rax+rbp*1]
  4207e2:	cmp    QWORD PTR [rdi+0x20],rdx
  4207e6:	mov    QWORD PTR [rdi+0x28],rax
  4207ea:	jbe    420810 <flatcc_json_printer_enum_flag@@Base+0x50>
  4207ec:	mov    rbx,rdi
  4207ef:	mov    rdx,rbp
  4207f2:	mov    rsi,r8
  4207f5:	mov    rdi,rax
  4207f8:	call   4050e0 <memcpy@plt>
  4207fd:	add    QWORD PTR [rbx+0x28],rbp
  420801:	add    rsp,0x8
  420805:	pop    rbx
  420806:	pop    rbp
  420807:	ret    
  420808:	nop    DWORD PTR [rax+rax*1+0x0]
  420810:	add    rsp,0x8
  420814:	mov    rdx,rbp
  420817:	mov    rsi,r8
  42081a:	pop    rbx
  42081b:	pop    rbp
  42081c:	jmp    41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420821:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42082c:	nop    DWORD PTR [rax+0x0]

0000000000420830 <flatcc_json_printer_string_field@@Base>:
  420830:	lea    eax,[rdx+rdx*1+0x4]
  420834:	cmp    eax,DWORD PTR [rsi+0x10]
  420837:	jl     420840 <flatcc_json_printer_string_field@@Base+0x10>
  420839:	ret    
  42083a:	nop    WORD PTR [rax+rax*1+0x0]
  420840:	push   r14
  420842:	push   r13
  420844:	push   r12
  420846:	push   rbp
  420847:	push   rbx
  420848:	mov    rdx,QWORD PTR [rsi+0x8]
  42084c:	movzx  r12d,WORD PTR [rdx+rax*1]
  420851:	test   r12w,r12w
  420855:	je     420940 <flatcc_json_printer_string_field@@Base+0x110>
  42085b:	add    r12,QWORD PTR [rsi]
  42085e:	je     420940 <flatcc_json_printer_string_field@@Base+0x110>
  420864:	mov    eax,DWORD PTR [rsi+0x18]
  420867:	lea    edx,[rax+0x1]
  42086a:	test   eax,eax
  42086c:	mov    DWORD PTR [rsi+0x18],edx
  42086f:	je     420880 <flatcc_json_printer_string_field@@Base+0x50>
  420871:	mov    rax,QWORD PTR [rdi+0x28]
  420875:	lea    rdx,[rax+0x1]
  420879:	mov    QWORD PTR [rdi+0x28],rdx
  42087d:	mov    BYTE PTR [rax],0x2c
  420880:	cmp    BYTE PTR [rdi+0x31],0x0
  420884:	mov    r14,rcx
  420887:	mov    rbx,rdi
  42088a:	movsxd rbp,r8d
  42088d:	jne    420950 <flatcc_json_printer_string_field@@Base+0x120>
  420893:	mov    rsi,QWORD PTR [rdi+0x28]
  420897:	cmp    rsi,QWORD PTR [rdi+0x20]
  42089b:	jb     4208a6 <flatcc_json_printer_string_field@@Base+0x76>
  42089d:	xor    esi,esi
  42089f:	call   QWORD PTR [rdi+0x48]
  4208a2:	mov    rsi,QWORD PTR [rbx+0x28]
  4208a6:	mov    BYTE PTR [rsi],0x22
  4208a9:	xor    edi,edi
  4208ab:	cmp    BYTE PTR [rbx+0x32],0x0
  4208af:	mov    rdx,rbp
  4208b2:	mov    rsi,r14
  4208b5:	sete   dil
  4208b9:	add    rdi,QWORD PTR [rbx+0x28]
  4208bd:	lea    rax,[rdi+rbp*1]
  4208c1:	cmp    QWORD PTR [rbx+0x20],rax
  4208c5:	mov    QWORD PTR [rbx+0x28],rdi
  4208c9:	ja     420928 <flatcc_json_printer_string_field@@Base+0xf8>
  4208cb:	mov    rdi,rbx
  4208ce:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4208d3:	mov    rbp,QWORD PTR [rbx+0x28]
  4208d7:	mov    BYTE PTR [rbp+0x0],0x22
  4208db:	xor    eax,eax
  4208dd:	cmp    BYTE PTR [rbx+0x32],0x0
  4208e1:	mov    rdi,rbx
  4208e4:	sete   al
  4208e7:	add    rax,QWORD PTR [rbx+0x28]
  4208eb:	lea    rdx,[rax+0x1]
  4208ef:	mov    QWORD PTR [rbx+0x28],rdx
  4208f3:	mov    BYTE PTR [rax],0x3a
  4208f6:	mov    rax,QWORD PTR [rbx+0x28]
  4208fa:	mov    BYTE PTR [rax],0x20
  4208fd:	xor    eax,eax
  4208ff:	mov    esi,DWORD PTR [r12]
  420903:	cmp    BYTE PTR [rbx+0x31],0x0
  420907:	setne  al
  42090a:	add    rsi,r12
  42090d:	add    QWORD PTR [rbx+0x28],rax
  420911:	pop    rbx
  420912:	mov    edx,DWORD PTR [rsi]
  420914:	add    rsi,0x4
  420918:	pop    rbp
  420919:	pop    r12
  42091b:	pop    r13
  42091d:	pop    r14
  42091f:	jmp    420050 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  420924:	nop    DWORD PTR [rax+0x0]
  420928:	call   4050e0 <memcpy@plt>
  42092d:	add    rbp,QWORD PTR [rbx+0x28]
  420931:	mov    QWORD PTR [rbx+0x28],rbp
  420935:	jmp    4208d7 <flatcc_json_printer_string_field@@Base+0xa7>
  420937:	nop    WORD PTR [rax+rax*1+0x0]
  420940:	pop    rbx
  420941:	pop    rbp
  420942:	pop    r12
  420944:	pop    r13
  420946:	pop    r14
  420948:	ret    
  420949:	nop    DWORD PTR [rax+0x0]
  420950:	mov    rax,QWORD PTR [rdi+0x28]
  420954:	lea    rdx,[rax+0x1]
  420958:	mov    QWORD PTR [rdi+0x28],rdx
  42095c:	mov    BYTE PTR [rax],0xa
  42095f:	movzx  esi,BYTE PTR [rdi+0x31]
  420963:	imul   esi,DWORD PTR [rdi+0x38]
  420967:	mov    rdi,QWORD PTR [rdi+0x28]
  42096b:	movsxd r13,esi
  42096e:	lea    rax,[rdi+r13*1]
  420972:	cmp    QWORD PTR [rbx+0x20],rax
  420976:	jb     420998 <flatcc_json_printer_string_field@@Base+0x168>
  420978:	mov    esi,0x20
  42097d:	mov    rdx,r13
  420980:	call   405090 <memset@plt>
  420985:	mov    rsi,r13
  420988:	add    rsi,QWORD PTR [rbx+0x28]
  42098c:	mov    QWORD PTR [rbx+0x28],rsi
  420990:	jmp    4208a6 <flatcc_json_printer_string_field@@Base+0x76>
  420995:	nop    DWORD PTR [rax]
  420998:	mov    rsi,r13
  42099b:	mov    rdi,rbx
  42099e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4209a3:	mov    rsi,QWORD PTR [rbx+0x28]
  4209a7:	jmp    4208a6 <flatcc_json_printer_string_field@@Base+0x76>
  4209ac:	nop    DWORD PTR [rax+0x0]

00000000004209b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  4209b0:	push   r15
  4209b2:	push   r14
  4209b4:	push   r13
  4209b6:	push   r12
  4209b8:	push   rbp
  4209b9:	push   rbx
  4209ba:	sub    rsp,0x38
  4209be:	mov    rax,QWORD PTR fs:0x28
  4209c7:	mov    QWORD PTR [rsp+0x28],rax
  4209cc:	xor    eax,eax
  4209ce:	lea    eax,[rdx+rdx*1+0x4]
  4209d2:	cmp    eax,DWORD PTR [rsi+0x10]
  4209d5:	jge    420b30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  4209db:	mov    rdx,QWORD PTR [rsi+0x8]
  4209df:	movzx  eax,WORD PTR [rdx+rax*1]
  4209e3:	test   ax,ax
  4209e6:	je     420b30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  4209ec:	xor    r14d,r14d
  4209ef:	test   r9d,r9d
  4209f2:	mov    r12,rcx
  4209f5:	setne  r14b
  4209f9:	mov    ecx,r14d
  4209fc:	or     cl,0x80
  4209ff:	add    rax,QWORD PTR [rsi]
  420a02:	mov    DWORD PTR [rsp+0xc],ecx
  420a06:	mov    rbp,rax
  420a09:	je     420b30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  420a0f:	mov    eax,DWORD PTR [rsi+0x18]
  420a12:	mov    r15,rdi
  420a15:	lea    edx,[rax+0x1]
  420a18:	test   eax,eax
  420a1a:	mov    DWORD PTR [rsi+0x18],edx
  420a1d:	je     420a2e <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7e>
  420a1f:	mov    rax,QWORD PTR [rdi+0x28]
  420a23:	lea    rdx,[rax+0x1]
  420a27:	mov    QWORD PTR [rdi+0x28],rdx
  420a2b:	mov    BYTE PTR [rax],0x2c
  420a2e:	cmp    BYTE PTR [r15+0x31],0x0
  420a33:	movsxd rbx,r8d
  420a36:	mov    rax,QWORD PTR [r15+0x28]
  420a3a:	jne    420c40 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x290>
  420a40:	cmp    rax,QWORD PTR [r15+0x20]
  420a44:	jb     420a53 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  420a46:	xor    esi,esi
  420a48:	mov    rdi,r15
  420a4b:	call   QWORD PTR [r15+0x48]
  420a4f:	mov    rax,QWORD PTR [r15+0x28]
  420a53:	mov    BYTE PTR [rax],0x22
  420a56:	xor    edi,edi
  420a58:	cmp    BYTE PTR [r15+0x32],0x0
  420a5d:	mov    rdx,rbx
  420a60:	mov    rsi,r12
  420a63:	sete   dil
  420a67:	add    rdi,QWORD PTR [r15+0x28]
  420a6b:	lea    rax,[rdi+rbx*1]
  420a6f:	cmp    QWORD PTR [r15+0x20],rax
  420a73:	mov    QWORD PTR [r15+0x28],rdi
  420a77:	ja     420b58 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a8>
  420a7d:	mov    rdi,r15
  420a80:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420a85:	mov    rbx,QWORD PTR [r15+0x28]
  420a89:	mov    BYTE PTR [rbx],0x22
  420a8c:	xor    eax,eax
  420a8e:	cmp    BYTE PTR [r15+0x32],0x0
  420a93:	movabs r12,0xaaaaaaaaaaaaaaab
  420a9d:	sete   al
  420aa0:	add    rax,QWORD PTR [r15+0x28]
  420aa4:	lea    rdx,[rax+0x1]
  420aa8:	mov    QWORD PTR [r15+0x28],rdx
  420aac:	mov    BYTE PTR [rax],0x3a
  420aaf:	mov    rax,QWORD PTR [r15+0x28]
  420ab3:	mov    BYTE PTR [rax],0x20
  420ab6:	xor    eax,eax
  420ab8:	cmp    BYTE PTR [r15+0x31],0x0
  420abd:	mov    edx,DWORD PTR [rbp+0x0]
  420ac0:	setne  al
  420ac3:	add    rax,QWORD PTR [r15+0x28]
  420ac7:	add    rbp,rdx
  420aca:	mov    ecx,DWORD PTR [rbp+0x0]
  420acd:	add    rbp,0x4
  420ad1:	lea    rdx,[rax+0x1]
  420ad5:	mov    QWORD PTR [rsp+0x18],rcx
  420ada:	mov    QWORD PTR [r15+0x28],rdx
  420ade:	mov    BYTE PTR [rax],0x22
  420ae1:	mov    rax,QWORD PTR [rsp+0x18]
  420ae6:	mov    rdi,QWORD PTR [r15+0x28]
  420aea:	lea    rdx,[rax*4+0x0]
  420af2:	mov    rax,rdx
  420af5:	mul    r12
  420af8:	shr    rdx,1
  420afb:	mov    rbx,rdx
  420afe:	add    rbx,0x3
  420b02:	and    rbx,0xfffffffffffffffc
  420b06:	lea    rax,[rdi+rbx*1]
  420b0a:	cmp    rax,QWORD PTR [r15+0x20]
  420b0e:	jae    420b70 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
  420b10:	mov    ecx,DWORD PTR [rsp+0xc]
  420b14:	lea    rdx,[rsp+0x18]
  420b19:	mov    rsi,rbp
  420b1c:	call   41fee0 <flatcc_json_parser_table_as_root@@Base+0x18d0>
  420b21:	add    rbx,QWORD PTR [r15+0x28]
  420b25:	lea    rax,[rbx+0x1]
  420b29:	mov    QWORD PTR [r15+0x28],rax
  420b2d:	mov    BYTE PTR [rbx],0x22
  420b30:	mov    rax,QWORD PTR [rsp+0x28]
  420b35:	xor    rax,QWORD PTR fs:0x28
  420b3e:	jne    420c97 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e7>
  420b44:	add    rsp,0x38
  420b48:	pop    rbx
  420b49:	pop    rbp
  420b4a:	pop    r12
  420b4c:	pop    r13
  420b4e:	pop    r14
  420b50:	pop    r15
  420b52:	ret    
  420b53:	nop    DWORD PTR [rax+rax*1+0x0]
  420b58:	call   4050e0 <memcpy@plt>
  420b5d:	add    rbx,QWORD PTR [r15+0x28]
  420b61:	mov    QWORD PTR [r15+0x28],rbx
  420b65:	jmp    420a89 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd9>
  420b6a:	nop    WORD PTR [rax+rax*1+0x0]
  420b70:	xor    esi,esi
  420b72:	mov    rdi,r15
  420b75:	call   QWORD PTR [r15+0x48]
  420b79:	mov    rdi,QWORD PTR [r15+0x28]
  420b7d:	mov    r11,QWORD PTR [r15+0x20]
  420b81:	lea    rax,[rdi+rbx*1]
  420b85:	cmp    rax,r11
  420b88:	jbe    420b10 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x160>
  420b8a:	sub    r11,rdi
  420b8d:	and    r11,0xfffffffffffffffc
  420b91:	lea    rbx,[r11+r11*2]
  420b95:	shr    rbx,0x2
  420b99:	test   rbx,rbx
  420b9c:	je     420c1a <flatcc_json_printer_uint8_vector_base64_field@@Base+0x26a>
  420b9e:	lea    r13,[rsp+0x20]
  420ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  420ba8:	mov    rdx,r13
  420bab:	mov    rsi,rbp
  420bae:	mov    ecx,r14d
  420bb1:	mov    QWORD PTR [rsp+0x20],rbx
  420bb6:	add    rbp,rbx
  420bb9:	call   41fee0 <flatcc_json_parser_table_as_root@@Base+0x18d0>
  420bbe:	sub    QWORD PTR [rsp+0x18],rbx
  420bc3:	add    QWORD PTR [r15+0x28],r11
  420bc7:	xor    esi,esi
  420bc9:	mov    rdi,r15
  420bcc:	call   QWORD PTR [r15+0x48]
  420bd0:	mov    rax,QWORD PTR [rsp+0x18]
  420bd5:	mov    rdi,QWORD PTR [r15+0x28]
  420bd9:	mov    r11,QWORD PTR [r15+0x20]
  420bdd:	lea    rdx,[rax*4+0x0]
  420be5:	mov    rax,rdx
  420be8:	mul    r12
  420beb:	shr    rdx,1
  420bee:	mov    rbx,rdx
  420bf1:	add    rbx,0x3
  420bf5:	and    rbx,0xfffffffffffffffc
  420bf9:	lea    rax,[rdi+rbx*1]
  420bfd:	cmp    r11,rax
  420c00:	jae    420b10 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x160>
  420c06:	sub    r11,rdi
  420c09:	and    r11,0xfffffffffffffffc
  420c0d:	lea    rbx,[r11+r11*2]
  420c11:	shr    rbx,0x2
  420c15:	test   rbx,rbx
  420c18:	jne    420ba8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f8>
  420c1a:	lea    rcx,[rip+0x1009f]        # 430cc0 <flatcc_builder_padding_base@@Base+0x1ea0>
  420c21:	lea    rsi,[rip+0xfe38]        # 430a60 <flatcc_builder_padding_base@@Base+0x1c40>
  420c28:	lea    rdi,[rip+0xffd7]        # 430c06 <flatcc_builder_padding_base@@Base+0x1de6>
  420c2f:	mov    edx,0x115
  420c34:	call   405080 <__assert_fail@plt>
  420c39:	nop    DWORD PTR [rax+0x0]
  420c40:	lea    rdx,[rax+0x1]
  420c44:	mov    QWORD PTR [r15+0x28],rdx
  420c48:	mov    BYTE PTR [rax],0xa
  420c4b:	movzx  eax,BYTE PTR [r15+0x31]
  420c50:	mov    rdi,QWORD PTR [r15+0x28]
  420c54:	imul   eax,DWORD PTR [r15+0x38]
  420c59:	movsxd r13,eax
  420c5c:	lea    rax,[rdi+r13*1]
  420c60:	cmp    QWORD PTR [r15+0x20],rax
  420c64:	jb     420c83 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2d3>
  420c66:	mov    rdx,r13
  420c69:	mov    esi,0x20
  420c6e:	call   405090 <memset@plt>
  420c73:	mov    rax,r13
  420c76:	add    rax,QWORD PTR [r15+0x28]
  420c7a:	mov    QWORD PTR [r15+0x28],rax
  420c7e:	jmp    420a53 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  420c83:	mov    rsi,r13
  420c86:	mov    rdi,r15
  420c89:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  420c8e:	mov    rax,QWORD PTR [r15+0x28]
  420c92:	jmp    420a53 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  420c97:	call   405070 <__stack_chk_fail@plt>
  420c9c:	nop    DWORD PTR [rax+0x0]

0000000000420ca0 <flatcc_json_printer_uint8_field@@Base>:
  420ca0:	push   r14
  420ca2:	lea    eax,[rdx+rdx*1+0x4]
  420ca6:	push   r13
  420ca8:	push   r12
  420caa:	push   rbp
  420cab:	push   rbx
  420cac:	cmp    eax,DWORD PTR [rsi+0x10]
  420caf:	jl     420cc0 <flatcc_json_printer_uint8_field@@Base+0x20>
  420cb1:	cmp    BYTE PTR [rdi+0x35],0x0
  420cb5:	je     420d96 <flatcc_json_printer_uint8_field@@Base+0xf6>
  420cbb:	mov    r12d,r9d
  420cbe:	jmp    420cdf <flatcc_json_printer_uint8_field@@Base+0x3f>
  420cc0:	mov    rdx,QWORD PTR [rsi+0x8]
  420cc4:	movzx  eax,WORD PTR [rdx+rax*1]
  420cc8:	test   ax,ax
  420ccb:	je     420cb1 <flatcc_json_printer_uint8_field@@Base+0x11>
  420ccd:	add    rax,QWORD PTR [rsi]
  420cd0:	je     420cb1 <flatcc_json_printer_uint8_field@@Base+0x11>
  420cd2:	movzx  r12d,BYTE PTR [rax]
  420cd6:	cmp    r9b,r12b
  420cd9:	je     420db0 <flatcc_json_printer_uint8_field@@Base+0x110>
  420cdf:	mov    eax,DWORD PTR [rsi+0x18]
  420ce2:	lea    edx,[rax+0x1]
  420ce5:	test   eax,eax
  420ce7:	mov    DWORD PTR [rsi+0x18],edx
  420cea:	je     420cfb <flatcc_json_printer_uint8_field@@Base+0x5b>
  420cec:	mov    rax,QWORD PTR [rdi+0x28]
  420cf0:	lea    rdx,[rax+0x1]
  420cf4:	mov    QWORD PTR [rdi+0x28],rdx
  420cf8:	mov    BYTE PTR [rax],0x2c
  420cfb:	cmp    BYTE PTR [rdi+0x31],0x0
  420cff:	mov    r14,rcx
  420d02:	mov    rbx,rdi
  420d05:	movsxd rbp,r8d
  420d08:	jne    420dc0 <flatcc_json_printer_uint8_field@@Base+0x120>
  420d0e:	mov    rsi,QWORD PTR [rdi+0x28]
  420d12:	cmp    rsi,QWORD PTR [rdi+0x20]
  420d16:	jb     420d21 <flatcc_json_printer_uint8_field@@Base+0x81>
  420d18:	xor    esi,esi
  420d1a:	call   QWORD PTR [rdi+0x48]
  420d1d:	mov    rsi,QWORD PTR [rbx+0x28]
  420d21:	mov    BYTE PTR [rsi],0x22
  420d24:	xor    edi,edi
  420d26:	cmp    BYTE PTR [rbx+0x32],0x0
  420d2a:	mov    rdx,rbp
  420d2d:	mov    rsi,r14
  420d30:	sete   dil
  420d34:	add    rdi,QWORD PTR [rbx+0x28]
  420d38:	lea    rax,[rdi+rbp*1]
  420d3c:	cmp    QWORD PTR [rbx+0x20],rax
  420d40:	mov    QWORD PTR [rbx+0x28],rdi
  420d44:	ja     420da0 <flatcc_json_printer_uint8_field@@Base+0x100>
  420d46:	mov    rdi,rbx
  420d49:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420d4e:	mov    rbp,QWORD PTR [rbx+0x28]
  420d52:	mov    BYTE PTR [rbp+0x0],0x22
  420d56:	xor    eax,eax
  420d58:	cmp    BYTE PTR [rbx+0x32],0x0
  420d5c:	movzx  edi,r12b
  420d60:	sete   al
  420d63:	add    rax,QWORD PTR [rbx+0x28]
  420d67:	xor    esi,esi
  420d69:	lea    rdx,[rax+0x1]
  420d6d:	mov    QWORD PTR [rbx+0x28],rdx
  420d71:	mov    BYTE PTR [rax],0x3a
  420d74:	mov    rax,QWORD PTR [rbx+0x28]
  420d78:	mov    BYTE PTR [rax],0x20
  420d7b:	cmp    BYTE PTR [rbx+0x31],0x0
  420d7f:	setne  sil
  420d83:	add    rsi,QWORD PTR [rbx+0x28]
  420d87:	mov    QWORD PTR [rbx+0x28],rsi
  420d8b:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  420d90:	cdqe   
  420d92:	add    QWORD PTR [rbx+0x28],rax
  420d96:	pop    rbx
  420d97:	pop    rbp
  420d98:	pop    r12
  420d9a:	pop    r13
  420d9c:	pop    r14
  420d9e:	ret    
  420d9f:	nop
  420da0:	call   4050e0 <memcpy@plt>
  420da5:	add    rbp,QWORD PTR [rbx+0x28]
  420da9:	mov    QWORD PTR [rbx+0x28],rbp
  420dad:	jmp    420d52 <flatcc_json_printer_uint8_field@@Base+0xb2>
  420daf:	nop
  420db0:	cmp    BYTE PTR [rdi+0x34],0x0
  420db4:	je     420cdf <flatcc_json_printer_uint8_field@@Base+0x3f>
  420dba:	jmp    420d96 <flatcc_json_printer_uint8_field@@Base+0xf6>
  420dbc:	nop    DWORD PTR [rax+0x0]
  420dc0:	mov    rax,QWORD PTR [rdi+0x28]
  420dc4:	lea    rdx,[rax+0x1]
  420dc8:	mov    QWORD PTR [rdi+0x28],rdx
  420dcc:	mov    BYTE PTR [rax],0xa
  420dcf:	movzx  esi,BYTE PTR [rdi+0x31]
  420dd3:	imul   esi,DWORD PTR [rdi+0x38]
  420dd7:	mov    rdi,QWORD PTR [rdi+0x28]
  420ddb:	movsxd r13,esi
  420dde:	lea    rax,[rdi+r13*1]
  420de2:	cmp    QWORD PTR [rbx+0x20],rax
  420de6:	jb     420e08 <flatcc_json_printer_uint8_field@@Base+0x168>
  420de8:	mov    esi,0x20
  420ded:	mov    rdx,r13
  420df0:	call   405090 <memset@plt>
  420df5:	mov    rsi,r13
  420df8:	add    rsi,QWORD PTR [rbx+0x28]
  420dfc:	mov    QWORD PTR [rbx+0x28],rsi
  420e00:	jmp    420d21 <flatcc_json_printer_uint8_field@@Base+0x81>
  420e05:	nop    DWORD PTR [rax]
  420e08:	mov    rsi,r13
  420e0b:	mov    rdi,rbx
  420e0e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  420e13:	mov    rsi,QWORD PTR [rbx+0x28]
  420e17:	jmp    420d21 <flatcc_json_printer_uint8_field@@Base+0x81>
  420e1c:	nop    DWORD PTR [rax+0x0]

0000000000420e20 <flatcc_json_printer_uint16_field@@Base>:
  420e20:	push   r14
  420e22:	lea    eax,[rdx+rdx*1+0x4]
  420e26:	push   r13
  420e28:	push   r12
  420e2a:	push   rbp
  420e2b:	push   rbx
  420e2c:	cmp    eax,DWORD PTR [rsi+0x10]
  420e2f:	jl     420e40 <flatcc_json_printer_uint16_field@@Base+0x20>
  420e31:	cmp    BYTE PTR [rdi+0x35],0x0
  420e35:	je     420f17 <flatcc_json_printer_uint16_field@@Base+0xf7>
  420e3b:	mov    r12d,r9d
  420e3e:	jmp    420e60 <flatcc_json_printer_uint16_field@@Base+0x40>
  420e40:	mov    rdx,QWORD PTR [rsi+0x8]
  420e44:	movzx  eax,WORD PTR [rdx+rax*1]
  420e48:	test   ax,ax
  420e4b:	je     420e31 <flatcc_json_printer_uint16_field@@Base+0x11>
  420e4d:	add    rax,QWORD PTR [rsi]
  420e50:	je     420e31 <flatcc_json_printer_uint16_field@@Base+0x11>
  420e52:	movzx  r12d,WORD PTR [rax]
  420e56:	cmp    r9w,r12w
  420e5a:	je     420f30 <flatcc_json_printer_uint16_field@@Base+0x110>
  420e60:	mov    eax,DWORD PTR [rsi+0x18]
  420e63:	lea    edx,[rax+0x1]
  420e66:	test   eax,eax
  420e68:	mov    DWORD PTR [rsi+0x18],edx
  420e6b:	je     420e7c <flatcc_json_printer_uint16_field@@Base+0x5c>
  420e6d:	mov    rax,QWORD PTR [rdi+0x28]
  420e71:	lea    rdx,[rax+0x1]
  420e75:	mov    QWORD PTR [rdi+0x28],rdx
  420e79:	mov    BYTE PTR [rax],0x2c
  420e7c:	cmp    BYTE PTR [rdi+0x31],0x0
  420e80:	mov    r14,rcx
  420e83:	mov    rbx,rdi
  420e86:	movsxd rbp,r8d
  420e89:	jne    420f40 <flatcc_json_printer_uint16_field@@Base+0x120>
  420e8f:	mov    rsi,QWORD PTR [rdi+0x28]
  420e93:	cmp    rsi,QWORD PTR [rdi+0x20]
  420e97:	jb     420ea2 <flatcc_json_printer_uint16_field@@Base+0x82>
  420e99:	xor    esi,esi
  420e9b:	call   QWORD PTR [rdi+0x48]
  420e9e:	mov    rsi,QWORD PTR [rbx+0x28]
  420ea2:	mov    BYTE PTR [rsi],0x22
  420ea5:	xor    edi,edi
  420ea7:	cmp    BYTE PTR [rbx+0x32],0x0
  420eab:	mov    rdx,rbp
  420eae:	mov    rsi,r14
  420eb1:	sete   dil
  420eb5:	add    rdi,QWORD PTR [rbx+0x28]
  420eb9:	lea    rax,[rdi+rbp*1]
  420ebd:	cmp    QWORD PTR [rbx+0x20],rax
  420ec1:	mov    QWORD PTR [rbx+0x28],rdi
  420ec5:	ja     420f20 <flatcc_json_printer_uint16_field@@Base+0x100>
  420ec7:	mov    rdi,rbx
  420eca:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420ecf:	mov    rbp,QWORD PTR [rbx+0x28]
  420ed3:	mov    BYTE PTR [rbp+0x0],0x22
  420ed7:	xor    eax,eax
  420ed9:	cmp    BYTE PTR [rbx+0x32],0x0
  420edd:	movzx  edi,r12w
  420ee1:	sete   al
  420ee4:	add    rax,QWORD PTR [rbx+0x28]
  420ee8:	xor    esi,esi
  420eea:	lea    rdx,[rax+0x1]
  420eee:	mov    QWORD PTR [rbx+0x28],rdx
  420ef2:	mov    BYTE PTR [rax],0x3a
  420ef5:	mov    rax,QWORD PTR [rbx+0x28]
  420ef9:	mov    BYTE PTR [rax],0x20
  420efc:	cmp    BYTE PTR [rbx+0x31],0x0
  420f00:	setne  sil
  420f04:	add    rsi,QWORD PTR [rbx+0x28]
  420f08:	mov    QWORD PTR [rbx+0x28],rsi
  420f0c:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  420f11:	cdqe   
  420f13:	add    QWORD PTR [rbx+0x28],rax
  420f17:	pop    rbx
  420f18:	pop    rbp
  420f19:	pop    r12
  420f1b:	pop    r13
  420f1d:	pop    r14
  420f1f:	ret    
  420f20:	call   4050e0 <memcpy@plt>
  420f25:	add    rbp,QWORD PTR [rbx+0x28]
  420f29:	mov    QWORD PTR [rbx+0x28],rbp
  420f2d:	jmp    420ed3 <flatcc_json_printer_uint16_field@@Base+0xb3>
  420f2f:	nop
  420f30:	cmp    BYTE PTR [rdi+0x34],0x0
  420f34:	je     420e60 <flatcc_json_printer_uint16_field@@Base+0x40>
  420f3a:	jmp    420f17 <flatcc_json_printer_uint16_field@@Base+0xf7>
  420f3c:	nop    DWORD PTR [rax+0x0]
  420f40:	mov    rax,QWORD PTR [rdi+0x28]
  420f44:	lea    rdx,[rax+0x1]
  420f48:	mov    QWORD PTR [rdi+0x28],rdx
  420f4c:	mov    BYTE PTR [rax],0xa
  420f4f:	movzx  esi,BYTE PTR [rdi+0x31]
  420f53:	imul   esi,DWORD PTR [rdi+0x38]
  420f57:	mov    rdi,QWORD PTR [rdi+0x28]
  420f5b:	movsxd r13,esi
  420f5e:	lea    rax,[rdi+r13*1]
  420f62:	cmp    QWORD PTR [rbx+0x20],rax
  420f66:	jb     420f88 <flatcc_json_printer_uint16_field@@Base+0x168>
  420f68:	mov    esi,0x20
  420f6d:	mov    rdx,r13
  420f70:	call   405090 <memset@plt>
  420f75:	mov    rsi,r13
  420f78:	add    rsi,QWORD PTR [rbx+0x28]
  420f7c:	mov    QWORD PTR [rbx+0x28],rsi
  420f80:	jmp    420ea2 <flatcc_json_printer_uint16_field@@Base+0x82>
  420f85:	nop    DWORD PTR [rax]
  420f88:	mov    rsi,r13
  420f8b:	mov    rdi,rbx
  420f8e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  420f93:	mov    rsi,QWORD PTR [rbx+0x28]
  420f97:	jmp    420ea2 <flatcc_json_printer_uint16_field@@Base+0x82>
  420f9c:	nop    DWORD PTR [rax+0x0]

0000000000420fa0 <flatcc_json_printer_uint32_field@@Base>:
  420fa0:	push   r14
  420fa2:	lea    eax,[rdx+rdx*1+0x4]
  420fa6:	push   r13
  420fa8:	push   r12
  420faa:	push   rbp
  420fab:	push   rbx
  420fac:	cmp    eax,DWORD PTR [rsi+0x10]
  420faf:	jl     420fc0 <flatcc_json_printer_uint32_field@@Base+0x20>
  420fb1:	cmp    BYTE PTR [rdi+0x35],0x0
  420fb5:	je     421094 <flatcc_json_printer_uint32_field@@Base+0xf4>
  420fbb:	mov    r12d,r9d
  420fbe:	jmp    420fde <flatcc_json_printer_uint32_field@@Base+0x3e>
  420fc0:	mov    rdx,QWORD PTR [rsi+0x8]
  420fc4:	movzx  eax,WORD PTR [rdx+rax*1]
  420fc8:	test   ax,ax
  420fcb:	je     420fb1 <flatcc_json_printer_uint32_field@@Base+0x11>
  420fcd:	add    rax,QWORD PTR [rsi]
  420fd0:	je     420fb1 <flatcc_json_printer_uint32_field@@Base+0x11>
  420fd2:	mov    r12d,DWORD PTR [rax]
  420fd5:	cmp    r9d,r12d
  420fd8:	je     4210b0 <flatcc_json_printer_uint32_field@@Base+0x110>
  420fde:	mov    eax,DWORD PTR [rsi+0x18]
  420fe1:	lea    edx,[rax+0x1]
  420fe4:	test   eax,eax
  420fe6:	mov    DWORD PTR [rsi+0x18],edx
  420fe9:	je     420ffa <flatcc_json_printer_uint32_field@@Base+0x5a>
  420feb:	mov    rax,QWORD PTR [rdi+0x28]
  420fef:	lea    rdx,[rax+0x1]
  420ff3:	mov    QWORD PTR [rdi+0x28],rdx
  420ff7:	mov    BYTE PTR [rax],0x2c
  420ffa:	cmp    BYTE PTR [rdi+0x31],0x0
  420ffe:	mov    r14,rcx
  421001:	mov    rbx,rdi
  421004:	movsxd rbp,r8d
  421007:	jne    4210c0 <flatcc_json_printer_uint32_field@@Base+0x120>
  42100d:	mov    rsi,QWORD PTR [rdi+0x28]
  421011:	cmp    rsi,QWORD PTR [rdi+0x20]
  421015:	jb     421020 <flatcc_json_printer_uint32_field@@Base+0x80>
  421017:	xor    esi,esi
  421019:	call   QWORD PTR [rdi+0x48]
  42101c:	mov    rsi,QWORD PTR [rbx+0x28]
  421020:	mov    BYTE PTR [rsi],0x22
  421023:	xor    edi,edi
  421025:	cmp    BYTE PTR [rbx+0x32],0x0
  421029:	mov    rdx,rbp
  42102c:	mov    rsi,r14
  42102f:	sete   dil
  421033:	add    rdi,QWORD PTR [rbx+0x28]
  421037:	lea    rax,[rdi+rbp*1]
  42103b:	cmp    QWORD PTR [rbx+0x20],rax
  42103f:	mov    QWORD PTR [rbx+0x28],rdi
  421043:	ja     4210a0 <flatcc_json_printer_uint32_field@@Base+0x100>
  421045:	mov    rdi,rbx
  421048:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42104d:	mov    rbp,QWORD PTR [rbx+0x28]
  421051:	mov    BYTE PTR [rbp+0x0],0x22
  421055:	xor    eax,eax
  421057:	cmp    BYTE PTR [rbx+0x32],0x0
  42105b:	mov    edi,r12d
  42105e:	sete   al
  421061:	add    rax,QWORD PTR [rbx+0x28]
  421065:	xor    esi,esi
  421067:	lea    rdx,[rax+0x1]
  42106b:	mov    QWORD PTR [rbx+0x28],rdx
  42106f:	mov    BYTE PTR [rax],0x3a
  421072:	mov    rax,QWORD PTR [rbx+0x28]
  421076:	mov    BYTE PTR [rax],0x20
  421079:	cmp    BYTE PTR [rbx+0x31],0x0
  42107d:	setne  sil
  421081:	add    rsi,QWORD PTR [rbx+0x28]
  421085:	mov    QWORD PTR [rbx+0x28],rsi
  421089:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42108e:	cdqe   
  421090:	add    QWORD PTR [rbx+0x28],rax
  421094:	pop    rbx
  421095:	pop    rbp
  421096:	pop    r12
  421098:	pop    r13
  42109a:	pop    r14
  42109c:	ret    
  42109d:	nop    DWORD PTR [rax]
  4210a0:	call   4050e0 <memcpy@plt>
  4210a5:	add    rbp,QWORD PTR [rbx+0x28]
  4210a9:	mov    QWORD PTR [rbx+0x28],rbp
  4210ad:	jmp    421051 <flatcc_json_printer_uint32_field@@Base+0xb1>
  4210af:	nop
  4210b0:	cmp    BYTE PTR [rdi+0x34],0x0
  4210b4:	je     420fde <flatcc_json_printer_uint32_field@@Base+0x3e>
  4210ba:	jmp    421094 <flatcc_json_printer_uint32_field@@Base+0xf4>
  4210bc:	nop    DWORD PTR [rax+0x0]
  4210c0:	mov    rax,QWORD PTR [rdi+0x28]
  4210c4:	lea    rdx,[rax+0x1]
  4210c8:	mov    QWORD PTR [rdi+0x28],rdx
  4210cc:	mov    BYTE PTR [rax],0xa
  4210cf:	movzx  esi,BYTE PTR [rdi+0x31]
  4210d3:	imul   esi,DWORD PTR [rdi+0x38]
  4210d7:	mov    rdi,QWORD PTR [rdi+0x28]
  4210db:	movsxd r13,esi
  4210de:	lea    rax,[rdi+r13*1]
  4210e2:	cmp    QWORD PTR [rbx+0x20],rax
  4210e6:	jb     421108 <flatcc_json_printer_uint32_field@@Base+0x168>
  4210e8:	mov    esi,0x20
  4210ed:	mov    rdx,r13
  4210f0:	call   405090 <memset@plt>
  4210f5:	mov    rsi,r13
  4210f8:	add    rsi,QWORD PTR [rbx+0x28]
  4210fc:	mov    QWORD PTR [rbx+0x28],rsi
  421100:	jmp    421020 <flatcc_json_printer_uint32_field@@Base+0x80>
  421105:	nop    DWORD PTR [rax]
  421108:	mov    rsi,r13
  42110b:	mov    rdi,rbx
  42110e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421113:	mov    rsi,QWORD PTR [rbx+0x28]
  421117:	jmp    421020 <flatcc_json_printer_uint32_field@@Base+0x80>
  42111c:	nop    DWORD PTR [rax+0x0]

0000000000421120 <flatcc_json_printer_uint64_field@@Base>:
  421120:	push   r14
  421122:	lea    eax,[rdx+rdx*1+0x4]
  421126:	push   r13
  421128:	push   r12
  42112a:	push   rbp
  42112b:	push   rbx
  42112c:	cmp    eax,DWORD PTR [rsi+0x10]
  42112f:	jl     421140 <flatcc_json_printer_uint64_field@@Base+0x20>
  421131:	cmp    BYTE PTR [rdi+0x35],0x0
  421135:	je     421214 <flatcc_json_printer_uint64_field@@Base+0xf4>
  42113b:	mov    r12,r9
  42113e:	jmp    42115e <flatcc_json_printer_uint64_field@@Base+0x3e>
  421140:	mov    rdx,QWORD PTR [rsi+0x8]
  421144:	movzx  eax,WORD PTR [rdx+rax*1]
  421148:	test   ax,ax
  42114b:	je     421131 <flatcc_json_printer_uint64_field@@Base+0x11>
  42114d:	add    rax,QWORD PTR [rsi]
  421150:	je     421131 <flatcc_json_printer_uint64_field@@Base+0x11>
  421152:	mov    r12,QWORD PTR [rax]
  421155:	cmp    r9,r12
  421158:	je     421230 <flatcc_json_printer_uint64_field@@Base+0x110>
  42115e:	mov    eax,DWORD PTR [rsi+0x18]
  421161:	lea    edx,[rax+0x1]
  421164:	test   eax,eax
  421166:	mov    DWORD PTR [rsi+0x18],edx
  421169:	je     42117a <flatcc_json_printer_uint64_field@@Base+0x5a>
  42116b:	mov    rax,QWORD PTR [rdi+0x28]
  42116f:	lea    rdx,[rax+0x1]
  421173:	mov    QWORD PTR [rdi+0x28],rdx
  421177:	mov    BYTE PTR [rax],0x2c
  42117a:	cmp    BYTE PTR [rdi+0x31],0x0
  42117e:	mov    r14,rcx
  421181:	mov    rbx,rdi
  421184:	movsxd rbp,r8d
  421187:	jne    421240 <flatcc_json_printer_uint64_field@@Base+0x120>
  42118d:	mov    rsi,QWORD PTR [rdi+0x28]
  421191:	cmp    rsi,QWORD PTR [rdi+0x20]
  421195:	jb     4211a0 <flatcc_json_printer_uint64_field@@Base+0x80>
  421197:	xor    esi,esi
  421199:	call   QWORD PTR [rdi+0x48]
  42119c:	mov    rsi,QWORD PTR [rbx+0x28]
  4211a0:	mov    BYTE PTR [rsi],0x22
  4211a3:	xor    edi,edi
  4211a5:	cmp    BYTE PTR [rbx+0x32],0x0
  4211a9:	mov    rdx,rbp
  4211ac:	mov    rsi,r14
  4211af:	sete   dil
  4211b3:	add    rdi,QWORD PTR [rbx+0x28]
  4211b7:	lea    rax,[rdi+rbp*1]
  4211bb:	cmp    QWORD PTR [rbx+0x20],rax
  4211bf:	mov    QWORD PTR [rbx+0x28],rdi
  4211c3:	ja     421220 <flatcc_json_printer_uint64_field@@Base+0x100>
  4211c5:	mov    rdi,rbx
  4211c8:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4211cd:	mov    rbp,QWORD PTR [rbx+0x28]
  4211d1:	mov    BYTE PTR [rbp+0x0],0x22
  4211d5:	xor    eax,eax
  4211d7:	cmp    BYTE PTR [rbx+0x32],0x0
  4211db:	mov    rdi,r12
  4211de:	sete   al
  4211e1:	add    rax,QWORD PTR [rbx+0x28]
  4211e5:	xor    esi,esi
  4211e7:	lea    rdx,[rax+0x1]
  4211eb:	mov    QWORD PTR [rbx+0x28],rdx
  4211ef:	mov    BYTE PTR [rax],0x3a
  4211f2:	mov    rax,QWORD PTR [rbx+0x28]
  4211f6:	mov    BYTE PTR [rax],0x20
  4211f9:	cmp    BYTE PTR [rbx+0x31],0x0
  4211fd:	setne  sil
  421201:	add    rsi,QWORD PTR [rbx+0x28]
  421205:	mov    QWORD PTR [rbx+0x28],rsi
  421209:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  42120e:	cdqe   
  421210:	add    QWORD PTR [rbx+0x28],rax
  421214:	pop    rbx
  421215:	pop    rbp
  421216:	pop    r12
  421218:	pop    r13
  42121a:	pop    r14
  42121c:	ret    
  42121d:	nop    DWORD PTR [rax]
  421220:	call   4050e0 <memcpy@plt>
  421225:	add    rbp,QWORD PTR [rbx+0x28]
  421229:	mov    QWORD PTR [rbx+0x28],rbp
  42122d:	jmp    4211d1 <flatcc_json_printer_uint64_field@@Base+0xb1>
  42122f:	nop
  421230:	cmp    BYTE PTR [rdi+0x34],0x0
  421234:	je     42115e <flatcc_json_printer_uint64_field@@Base+0x3e>
  42123a:	jmp    421214 <flatcc_json_printer_uint64_field@@Base+0xf4>
  42123c:	nop    DWORD PTR [rax+0x0]
  421240:	mov    rax,QWORD PTR [rdi+0x28]
  421244:	lea    rdx,[rax+0x1]
  421248:	mov    QWORD PTR [rdi+0x28],rdx
  42124c:	mov    BYTE PTR [rax],0xa
  42124f:	movzx  esi,BYTE PTR [rdi+0x31]
  421253:	imul   esi,DWORD PTR [rdi+0x38]
  421257:	mov    rdi,QWORD PTR [rdi+0x28]
  42125b:	movsxd r13,esi
  42125e:	lea    rax,[rdi+r13*1]
  421262:	cmp    QWORD PTR [rbx+0x20],rax
  421266:	jb     421288 <flatcc_json_printer_uint64_field@@Base+0x168>
  421268:	mov    esi,0x20
  42126d:	mov    rdx,r13
  421270:	call   405090 <memset@plt>
  421275:	mov    rsi,r13
  421278:	add    rsi,QWORD PTR [rbx+0x28]
  42127c:	mov    QWORD PTR [rbx+0x28],rsi
  421280:	jmp    4211a0 <flatcc_json_printer_uint64_field@@Base+0x80>
  421285:	nop    DWORD PTR [rax]
  421288:	mov    rsi,r13
  42128b:	mov    rdi,rbx
  42128e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421293:	mov    rsi,QWORD PTR [rbx+0x28]
  421297:	jmp    4211a0 <flatcc_json_printer_uint64_field@@Base+0x80>
  42129c:	nop    DWORD PTR [rax+0x0]

00000000004212a0 <flatcc_json_printer_int8_field@@Base>:
  4212a0:	push   r14
  4212a2:	lea    eax,[rdx+rdx*1+0x4]
  4212a6:	push   r13
  4212a8:	push   r12
  4212aa:	push   rbp
  4212ab:	push   rbx
  4212ac:	cmp    eax,DWORD PTR [rsi+0x10]
  4212af:	jl     4212c0 <flatcc_json_printer_int8_field@@Base+0x20>
  4212b1:	cmp    BYTE PTR [rdi+0x35],0x0
  4212b5:	je     4213a7 <flatcc_json_printer_int8_field@@Base+0x107>
  4212bb:	mov    r12d,r9d
  4212be:	jmp    4212df <flatcc_json_printer_int8_field@@Base+0x3f>
  4212c0:	mov    rdx,QWORD PTR [rsi+0x8]
  4212c4:	movzx  eax,WORD PTR [rdx+rax*1]
  4212c8:	test   ax,ax
  4212cb:	je     4212b1 <flatcc_json_printer_int8_field@@Base+0x11>
  4212cd:	add    rax,QWORD PTR [rsi]
  4212d0:	je     4212b1 <flatcc_json_printer_int8_field@@Base+0x11>
  4212d2:	movzx  r12d,BYTE PTR [rax]
  4212d6:	cmp    r9b,r12b
  4212d9:	je     4213c0 <flatcc_json_printer_int8_field@@Base+0x120>
  4212df:	mov    eax,DWORD PTR [rsi+0x18]
  4212e2:	lea    edx,[rax+0x1]
  4212e5:	test   eax,eax
  4212e7:	mov    DWORD PTR [rsi+0x18],edx
  4212ea:	je     4212fb <flatcc_json_printer_int8_field@@Base+0x5b>
  4212ec:	mov    rax,QWORD PTR [rdi+0x28]
  4212f0:	lea    rdx,[rax+0x1]
  4212f4:	mov    QWORD PTR [rdi+0x28],rdx
  4212f8:	mov    BYTE PTR [rax],0x2c
  4212fb:	cmp    BYTE PTR [rdi+0x31],0x0
  4212ff:	mov    r14,rcx
  421302:	mov    rbx,rdi
  421305:	movsxd rbp,r8d
  421308:	jne    4213e0 <flatcc_json_printer_int8_field@@Base+0x140>
  42130e:	mov    rsi,QWORD PTR [rdi+0x28]
  421312:	cmp    rsi,QWORD PTR [rdi+0x20]
  421316:	jb     421321 <flatcc_json_printer_int8_field@@Base+0x81>
  421318:	xor    esi,esi
  42131a:	call   QWORD PTR [rdi+0x48]
  42131d:	mov    rsi,QWORD PTR [rbx+0x28]
  421321:	mov    BYTE PTR [rsi],0x22
  421324:	xor    edi,edi
  421326:	cmp    BYTE PTR [rbx+0x32],0x0
  42132a:	mov    rdx,rbp
  42132d:	mov    rsi,r14
  421330:	sete   dil
  421334:	add    rdi,QWORD PTR [rbx+0x28]
  421338:	lea    rax,[rdi+rbp*1]
  42133c:	cmp    QWORD PTR [rbx+0x20],rax
  421340:	mov    QWORD PTR [rbx+0x28],rdi
  421344:	ja     4213b0 <flatcc_json_printer_int8_field@@Base+0x110>
  421346:	mov    rdi,rbx
  421349:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42134e:	mov    rbp,QWORD PTR [rbx+0x28]
  421352:	mov    BYTE PTR [rbp+0x0],0x22
  421356:	xor    eax,eax
  421358:	cmp    BYTE PTR [rbx+0x32],0x0
  42135c:	movsx  r8d,r12b
  421360:	sete   al
  421363:	add    rax,QWORD PTR [rbx+0x28]
  421367:	xor    esi,esi
  421369:	lea    rdx,[rax+0x1]
  42136d:	mov    QWORD PTR [rbx+0x28],rdx
  421371:	mov    BYTE PTR [rax],0x3a
  421374:	mov    rax,QWORD PTR [rbx+0x28]
  421378:	mov    BYTE PTR [rax],0x20
  42137b:	cmp    BYTE PTR [rbx+0x31],0x0
  42137f:	setne  sil
  421383:	add    rsi,QWORD PTR [rbx+0x28]
  421387:	shr    r8d,0x1f
  42138b:	test   r12b,r12b
  42138e:	mov    QWORD PTR [rbx+0x28],rsi
  421392:	js     4213d0 <flatcc_json_printer_int8_field@@Base+0x130>
  421394:	movzx  edi,r12b
  421398:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42139d:	add    r8d,eax
  4213a0:	movsxd r8,r8d
  4213a3:	add    QWORD PTR [rbx+0x28],r8
  4213a7:	pop    rbx
  4213a8:	pop    rbp
  4213a9:	pop    r12
  4213ab:	pop    r13
  4213ad:	pop    r14
  4213af:	ret    
  4213b0:	call   4050e0 <memcpy@plt>
  4213b5:	add    rbp,QWORD PTR [rbx+0x28]
  4213b9:	mov    QWORD PTR [rbx+0x28],rbp
  4213bd:	jmp    421352 <flatcc_json_printer_int8_field@@Base+0xb2>
  4213bf:	nop
  4213c0:	cmp    BYTE PTR [rdi+0x34],0x0
  4213c4:	je     4212df <flatcc_json_printer_int8_field@@Base+0x3f>
  4213ca:	jmp    4213a7 <flatcc_json_printer_int8_field@@Base+0x107>
  4213cc:	nop    DWORD PTR [rax+0x0]
  4213d0:	mov    BYTE PTR [rsi],0x2d
  4213d3:	neg    r12d
  4213d6:	add    rsi,0x1
  4213da:	jmp    421394 <flatcc_json_printer_int8_field@@Base+0xf4>
  4213dc:	nop    DWORD PTR [rax+0x0]
  4213e0:	mov    rax,QWORD PTR [rdi+0x28]
  4213e4:	lea    rdx,[rax+0x1]
  4213e8:	mov    QWORD PTR [rdi+0x28],rdx
  4213ec:	mov    BYTE PTR [rax],0xa
  4213ef:	movzx  esi,BYTE PTR [rdi+0x31]
  4213f3:	imul   esi,DWORD PTR [rdi+0x38]
  4213f7:	mov    rdi,QWORD PTR [rdi+0x28]
  4213fb:	movsxd r13,esi
  4213fe:	lea    rax,[rdi+r13*1]
  421402:	cmp    QWORD PTR [rbx+0x20],rax
  421406:	jb     421428 <flatcc_json_printer_int8_field@@Base+0x188>
  421408:	mov    esi,0x20
  42140d:	mov    rdx,r13
  421410:	call   405090 <memset@plt>
  421415:	mov    rsi,r13
  421418:	add    rsi,QWORD PTR [rbx+0x28]
  42141c:	mov    QWORD PTR [rbx+0x28],rsi
  421420:	jmp    421321 <flatcc_json_printer_int8_field@@Base+0x81>
  421425:	nop    DWORD PTR [rax]
  421428:	mov    rsi,r13
  42142b:	mov    rdi,rbx
  42142e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421433:	mov    rsi,QWORD PTR [rbx+0x28]
  421437:	jmp    421321 <flatcc_json_printer_int8_field@@Base+0x81>
  42143c:	nop    DWORD PTR [rax+0x0]

0000000000421440 <flatcc_json_printer_int16_field@@Base>:
  421440:	push   r14
  421442:	lea    eax,[rdx+rdx*1+0x4]
  421446:	push   r13
  421448:	push   r12
  42144a:	push   rbp
  42144b:	push   rbx
  42144c:	cmp    eax,DWORD PTR [rsi+0x10]
  42144f:	jl     421460 <flatcc_json_printer_int16_field@@Base+0x20>
  421451:	cmp    BYTE PTR [rdi+0x35],0x0
  421455:	je     421549 <flatcc_json_printer_int16_field@@Base+0x109>
  42145b:	mov    r12d,r9d
  42145e:	jmp    421480 <flatcc_json_printer_int16_field@@Base+0x40>
  421460:	mov    rdx,QWORD PTR [rsi+0x8]
  421464:	movzx  eax,WORD PTR [rdx+rax*1]
  421468:	test   ax,ax
  42146b:	je     421451 <flatcc_json_printer_int16_field@@Base+0x11>
  42146d:	add    rax,QWORD PTR [rsi]
  421470:	je     421451 <flatcc_json_printer_int16_field@@Base+0x11>
  421472:	movzx  r12d,WORD PTR [rax]
  421476:	cmp    r9w,r12w
  42147a:	je     421570 <flatcc_json_printer_int16_field@@Base+0x130>
  421480:	mov    eax,DWORD PTR [rsi+0x18]
  421483:	lea    edx,[rax+0x1]
  421486:	test   eax,eax
  421488:	mov    DWORD PTR [rsi+0x18],edx
  42148b:	je     42149c <flatcc_json_printer_int16_field@@Base+0x5c>
  42148d:	mov    rax,QWORD PTR [rdi+0x28]
  421491:	lea    rdx,[rax+0x1]
  421495:	mov    QWORD PTR [rdi+0x28],rdx
  421499:	mov    BYTE PTR [rax],0x2c
  42149c:	cmp    BYTE PTR [rdi+0x31],0x0
  4214a0:	mov    r14,rcx
  4214a3:	mov    rbx,rdi
  4214a6:	movsxd rbp,r8d
  4214a9:	jne    421590 <flatcc_json_printer_int16_field@@Base+0x150>
  4214af:	mov    rsi,QWORD PTR [rdi+0x28]
  4214b3:	cmp    rsi,QWORD PTR [rdi+0x20]
  4214b7:	jb     4214c2 <flatcc_json_printer_int16_field@@Base+0x82>
  4214b9:	xor    esi,esi
  4214bb:	call   QWORD PTR [rdi+0x48]
  4214be:	mov    rsi,QWORD PTR [rbx+0x28]
  4214c2:	mov    BYTE PTR [rsi],0x22
  4214c5:	xor    edi,edi
  4214c7:	cmp    BYTE PTR [rbx+0x32],0x0
  4214cb:	mov    rdx,rbp
  4214ce:	mov    rsi,r14
  4214d1:	sete   dil
  4214d5:	add    rdi,QWORD PTR [rbx+0x28]
  4214d9:	lea    rax,[rdi+rbp*1]
  4214dd:	cmp    QWORD PTR [rbx+0x20],rax
  4214e1:	mov    QWORD PTR [rbx+0x28],rdi
  4214e5:	ja     421558 <flatcc_json_printer_int16_field@@Base+0x118>
  4214e7:	mov    rdi,rbx
  4214ea:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4214ef:	mov    rbp,QWORD PTR [rbx+0x28]
  4214f3:	mov    BYTE PTR [rbp+0x0],0x22
  4214f7:	xor    eax,eax
  4214f9:	cmp    BYTE PTR [rbx+0x32],0x0
  4214fd:	movsx  r11d,r12w
  421501:	sete   al
  421504:	add    rax,QWORD PTR [rbx+0x28]
  421508:	xor    esi,esi
  42150a:	lea    rdx,[rax+0x1]
  42150e:	mov    QWORD PTR [rbx+0x28],rdx
  421512:	mov    BYTE PTR [rax],0x3a
  421515:	mov    rax,QWORD PTR [rbx+0x28]
  421519:	mov    BYTE PTR [rax],0x20
  42151c:	cmp    BYTE PTR [rbx+0x31],0x0
  421520:	setne  sil
  421524:	add    rsi,QWORD PTR [rbx+0x28]
  421528:	shr    r11d,0x1f
  42152c:	test   r12w,r12w
  421530:	mov    QWORD PTR [rbx+0x28],rsi
  421534:	js     421580 <flatcc_json_printer_int16_field@@Base+0x140>
  421536:	movzx  edi,r12w
  42153a:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  42153f:	add    r11d,eax
  421542:	movsxd r11,r11d
  421545:	add    QWORD PTR [rbx+0x28],r11
  421549:	pop    rbx
  42154a:	pop    rbp
  42154b:	pop    r12
  42154d:	pop    r13
  42154f:	pop    r14
  421551:	ret    
  421552:	nop    WORD PTR [rax+rax*1+0x0]
  421558:	call   4050e0 <memcpy@plt>
  42155d:	add    rbp,QWORD PTR [rbx+0x28]
  421561:	mov    QWORD PTR [rbx+0x28],rbp
  421565:	jmp    4214f3 <flatcc_json_printer_int16_field@@Base+0xb3>
  421567:	nop    WORD PTR [rax+rax*1+0x0]
  421570:	cmp    BYTE PTR [rdi+0x34],0x0
  421574:	je     421480 <flatcc_json_printer_int16_field@@Base+0x40>
  42157a:	jmp    421549 <flatcc_json_printer_int16_field@@Base+0x109>
  42157c:	nop    DWORD PTR [rax+0x0]
  421580:	mov    BYTE PTR [rsi],0x2d
  421583:	neg    r12d
  421586:	add    rsi,0x1
  42158a:	jmp    421536 <flatcc_json_printer_int16_field@@Base+0xf6>
  42158c:	nop    DWORD PTR [rax+0x0]
  421590:	mov    rax,QWORD PTR [rdi+0x28]
  421594:	lea    rdx,[rax+0x1]
  421598:	mov    QWORD PTR [rdi+0x28],rdx
  42159c:	mov    BYTE PTR [rax],0xa
  42159f:	movzx  esi,BYTE PTR [rdi+0x31]
  4215a3:	imul   esi,DWORD PTR [rdi+0x38]
  4215a7:	mov    rdi,QWORD PTR [rdi+0x28]
  4215ab:	movsxd r13,esi
  4215ae:	lea    rax,[rdi+r13*1]
  4215b2:	cmp    QWORD PTR [rbx+0x20],rax
  4215b6:	jb     4215d8 <flatcc_json_printer_int16_field@@Base+0x198>
  4215b8:	mov    esi,0x20
  4215bd:	mov    rdx,r13
  4215c0:	call   405090 <memset@plt>
  4215c5:	mov    rsi,r13
  4215c8:	add    rsi,QWORD PTR [rbx+0x28]
  4215cc:	mov    QWORD PTR [rbx+0x28],rsi
  4215d0:	jmp    4214c2 <flatcc_json_printer_int16_field@@Base+0x82>
  4215d5:	nop    DWORD PTR [rax]
  4215d8:	mov    rsi,r13
  4215db:	mov    rdi,rbx
  4215de:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4215e3:	mov    rsi,QWORD PTR [rbx+0x28]
  4215e7:	jmp    4214c2 <flatcc_json_printer_int16_field@@Base+0x82>
  4215ec:	nop    DWORD PTR [rax+0x0]

00000000004215f0 <flatcc_json_printer_int32_field@@Base>:
  4215f0:	push   r14
  4215f2:	lea    eax,[rdx+rdx*1+0x4]
  4215f6:	push   r13
  4215f8:	push   r12
  4215fa:	push   rbp
  4215fb:	push   rbx
  4215fc:	cmp    eax,DWORD PTR [rsi+0x10]
  4215ff:	jl     421610 <flatcc_json_printer_int32_field@@Base+0x20>
  421601:	cmp    BYTE PTR [rdi+0x35],0x0
  421605:	je     4216f4 <flatcc_json_printer_int32_field@@Base+0x104>
  42160b:	mov    r12d,r9d
  42160e:	jmp    42162e <flatcc_json_printer_int32_field@@Base+0x3e>
  421610:	mov    rdx,QWORD PTR [rsi+0x8]
  421614:	movzx  eax,WORD PTR [rdx+rax*1]
  421618:	test   ax,ax
  42161b:	je     421601 <flatcc_json_printer_int32_field@@Base+0x11>
  42161d:	add    rax,QWORD PTR [rsi]
  421620:	je     421601 <flatcc_json_printer_int32_field@@Base+0x11>
  421622:	mov    r12d,DWORD PTR [rax]
  421625:	cmp    r9d,r12d
  421628:	je     421710 <flatcc_json_printer_int32_field@@Base+0x120>
  42162e:	mov    eax,DWORD PTR [rsi+0x18]
  421631:	lea    edx,[rax+0x1]
  421634:	test   eax,eax
  421636:	mov    DWORD PTR [rsi+0x18],edx
  421639:	je     42164a <flatcc_json_printer_int32_field@@Base+0x5a>
  42163b:	mov    rax,QWORD PTR [rdi+0x28]
  42163f:	lea    rdx,[rax+0x1]
  421643:	mov    QWORD PTR [rdi+0x28],rdx
  421647:	mov    BYTE PTR [rax],0x2c
  42164a:	cmp    BYTE PTR [rdi+0x31],0x0
  42164e:	mov    r14,rcx
  421651:	mov    rbx,rdi
  421654:	movsxd rbp,r8d
  421657:	jne    421730 <flatcc_json_printer_int32_field@@Base+0x140>
  42165d:	mov    rsi,QWORD PTR [rdi+0x28]
  421661:	cmp    rsi,QWORD PTR [rdi+0x20]
  421665:	jb     421670 <flatcc_json_printer_int32_field@@Base+0x80>
  421667:	xor    esi,esi
  421669:	call   QWORD PTR [rdi+0x48]
  42166c:	mov    rsi,QWORD PTR [rbx+0x28]
  421670:	mov    BYTE PTR [rsi],0x22
  421673:	xor    edi,edi
  421675:	cmp    BYTE PTR [rbx+0x32],0x0
  421679:	mov    rdx,rbp
  42167c:	mov    rsi,r14
  42167f:	sete   dil
  421683:	add    rdi,QWORD PTR [rbx+0x28]
  421687:	lea    rax,[rdi+rbp*1]
  42168b:	cmp    QWORD PTR [rbx+0x20],rax
  42168f:	mov    QWORD PTR [rbx+0x28],rdi
  421693:	ja     421700 <flatcc_json_printer_int32_field@@Base+0x110>
  421695:	mov    rdi,rbx
  421698:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42169d:	mov    rbp,QWORD PTR [rbx+0x28]
  4216a1:	mov    BYTE PTR [rbp+0x0],0x22
  4216a5:	xor    eax,eax
  4216a7:	cmp    BYTE PTR [rbx+0x32],0x0
  4216ab:	mov    r10d,r12d
  4216ae:	sete   al
  4216b1:	add    rax,QWORD PTR [rbx+0x28]
  4216b5:	xor    esi,esi
  4216b7:	lea    rdx,[rax+0x1]
  4216bb:	mov    QWORD PTR [rbx+0x28],rdx
  4216bf:	mov    BYTE PTR [rax],0x3a
  4216c2:	mov    rax,QWORD PTR [rbx+0x28]
  4216c6:	mov    BYTE PTR [rax],0x20
  4216c9:	cmp    BYTE PTR [rbx+0x31],0x0
  4216cd:	setne  sil
  4216d1:	add    rsi,QWORD PTR [rbx+0x28]
  4216d5:	shr    r10d,0x1f
  4216d9:	test   r12d,r12d
  4216dc:	mov    QWORD PTR [rbx+0x28],rsi
  4216e0:	js     421720 <flatcc_json_printer_int32_field@@Base+0x130>
  4216e2:	mov    edi,r12d
  4216e5:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4216ea:	add    r10d,eax
  4216ed:	movsxd r10,r10d
  4216f0:	add    QWORD PTR [rbx+0x28],r10
  4216f4:	pop    rbx
  4216f5:	pop    rbp
  4216f6:	pop    r12
  4216f8:	pop    r13
  4216fa:	pop    r14
  4216fc:	ret    
  4216fd:	nop    DWORD PTR [rax]
  421700:	call   4050e0 <memcpy@plt>
  421705:	add    rbp,QWORD PTR [rbx+0x28]
  421709:	mov    QWORD PTR [rbx+0x28],rbp
  42170d:	jmp    4216a1 <flatcc_json_printer_int32_field@@Base+0xb1>
  42170f:	nop
  421710:	cmp    BYTE PTR [rdi+0x34],0x0
  421714:	je     42162e <flatcc_json_printer_int32_field@@Base+0x3e>
  42171a:	jmp    4216f4 <flatcc_json_printer_int32_field@@Base+0x104>
  42171c:	nop    DWORD PTR [rax+0x0]
  421720:	mov    BYTE PTR [rsi],0x2d
  421723:	neg    r12d
  421726:	add    rsi,0x1
  42172a:	jmp    4216e2 <flatcc_json_printer_int32_field@@Base+0xf2>
  42172c:	nop    DWORD PTR [rax+0x0]
  421730:	mov    rax,QWORD PTR [rdi+0x28]
  421734:	lea    rdx,[rax+0x1]
  421738:	mov    QWORD PTR [rdi+0x28],rdx
  42173c:	mov    BYTE PTR [rax],0xa
  42173f:	movzx  esi,BYTE PTR [rdi+0x31]
  421743:	imul   esi,DWORD PTR [rdi+0x38]
  421747:	mov    rdi,QWORD PTR [rdi+0x28]
  42174b:	movsxd r13,esi
  42174e:	lea    rax,[rdi+r13*1]
  421752:	cmp    QWORD PTR [rbx+0x20],rax
  421756:	jb     421778 <flatcc_json_printer_int32_field@@Base+0x188>
  421758:	mov    esi,0x20
  42175d:	mov    rdx,r13
  421760:	call   405090 <memset@plt>
  421765:	mov    rsi,r13
  421768:	add    rsi,QWORD PTR [rbx+0x28]
  42176c:	mov    QWORD PTR [rbx+0x28],rsi
  421770:	jmp    421670 <flatcc_json_printer_int32_field@@Base+0x80>
  421775:	nop    DWORD PTR [rax]
  421778:	mov    rsi,r13
  42177b:	mov    rdi,rbx
  42177e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421783:	mov    rsi,QWORD PTR [rbx+0x28]
  421787:	jmp    421670 <flatcc_json_printer_int32_field@@Base+0x80>
  42178c:	nop    DWORD PTR [rax+0x0]

0000000000421790 <flatcc_json_printer_int64_field@@Base>:
  421790:	push   r14
  421792:	lea    eax,[rdx+rdx*1+0x4]
  421796:	push   r13
  421798:	push   r12
  42179a:	push   rbp
  42179b:	push   rbx
  42179c:	cmp    eax,DWORD PTR [rsi+0x10]
  42179f:	jl     4217b0 <flatcc_json_printer_int64_field@@Base+0x20>
  4217a1:	cmp    BYTE PTR [rdi+0x35],0x0
  4217a5:	je     421892 <flatcc_json_printer_int64_field@@Base+0x102>
  4217ab:	mov    r12,r9
  4217ae:	jmp    4217ce <flatcc_json_printer_int64_field@@Base+0x3e>
  4217b0:	mov    rdx,QWORD PTR [rsi+0x8]
  4217b4:	movzx  eax,WORD PTR [rdx+rax*1]
  4217b8:	test   ax,ax
  4217bb:	je     4217a1 <flatcc_json_printer_int64_field@@Base+0x11>
  4217bd:	add    rax,QWORD PTR [rsi]
  4217c0:	je     4217a1 <flatcc_json_printer_int64_field@@Base+0x11>
  4217c2:	mov    r12,QWORD PTR [rax]
  4217c5:	cmp    r9,r12
  4217c8:	je     4218b0 <flatcc_json_printer_int64_field@@Base+0x120>
  4217ce:	mov    eax,DWORD PTR [rsi+0x18]
  4217d1:	lea    edx,[rax+0x1]
  4217d4:	test   eax,eax
  4217d6:	mov    DWORD PTR [rsi+0x18],edx
  4217d9:	je     4217ea <flatcc_json_printer_int64_field@@Base+0x5a>
  4217db:	mov    rax,QWORD PTR [rdi+0x28]
  4217df:	lea    rdx,[rax+0x1]
  4217e3:	mov    QWORD PTR [rdi+0x28],rdx
  4217e7:	mov    BYTE PTR [rax],0x2c
  4217ea:	cmp    BYTE PTR [rdi+0x31],0x0
  4217ee:	mov    r14,rcx
  4217f1:	mov    rbx,rdi
  4217f4:	movsxd rbp,r8d
  4217f7:	jne    4218d0 <flatcc_json_printer_int64_field@@Base+0x140>
  4217fd:	mov    rsi,QWORD PTR [rdi+0x28]
  421801:	cmp    rsi,QWORD PTR [rdi+0x20]
  421805:	jb     421810 <flatcc_json_printer_int64_field@@Base+0x80>
  421807:	xor    esi,esi
  421809:	call   QWORD PTR [rdi+0x48]
  42180c:	mov    rsi,QWORD PTR [rbx+0x28]
  421810:	mov    BYTE PTR [rsi],0x22
  421813:	xor    edi,edi
  421815:	cmp    BYTE PTR [rbx+0x32],0x0
  421819:	mov    rdx,rbp
  42181c:	mov    rsi,r14
  42181f:	sete   dil
  421823:	add    rdi,QWORD PTR [rbx+0x28]
  421827:	lea    rax,[rdi+rbp*1]
  42182b:	cmp    QWORD PTR [rbx+0x20],rax
  42182f:	mov    QWORD PTR [rbx+0x28],rdi
  421833:	ja     4218a0 <flatcc_json_printer_int64_field@@Base+0x110>
  421835:	mov    rdi,rbx
  421838:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42183d:	mov    rbp,QWORD PTR [rbx+0x28]
  421841:	mov    BYTE PTR [rbp+0x0],0x22
  421845:	xor    eax,eax
  421847:	cmp    BYTE PTR [rbx+0x32],0x0
  42184b:	mov    rbp,r12
  42184e:	sete   al
  421851:	add    rax,QWORD PTR [rbx+0x28]
  421855:	xor    esi,esi
  421857:	lea    rdx,[rax+0x1]
  42185b:	mov    QWORD PTR [rbx+0x28],rdx
  42185f:	mov    BYTE PTR [rax],0x3a
  421862:	mov    rax,QWORD PTR [rbx+0x28]
  421866:	mov    BYTE PTR [rax],0x20
  421869:	cmp    BYTE PTR [rbx+0x31],0x0
  42186d:	setne  sil
  421871:	add    rsi,QWORD PTR [rbx+0x28]
  421875:	shr    rbp,0x3f
  421879:	test   r12,r12
  42187c:	mov    QWORD PTR [rbx+0x28],rsi
  421880:	js     4218c0 <flatcc_json_printer_int64_field@@Base+0x130>
  421882:	mov    rdi,r12
  421885:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  42188a:	add    eax,ebp
  42188c:	cdqe   
  42188e:	add    QWORD PTR [rbx+0x28],rax
  421892:	pop    rbx
  421893:	pop    rbp
  421894:	pop    r12
  421896:	pop    r13
  421898:	pop    r14
  42189a:	ret    
  42189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4218a0:	call   4050e0 <memcpy@plt>
  4218a5:	add    rbp,QWORD PTR [rbx+0x28]
  4218a9:	mov    QWORD PTR [rbx+0x28],rbp
  4218ad:	jmp    421841 <flatcc_json_printer_int64_field@@Base+0xb1>
  4218af:	nop
  4218b0:	cmp    BYTE PTR [rdi+0x34],0x0
  4218b4:	je     4217ce <flatcc_json_printer_int64_field@@Base+0x3e>
  4218ba:	jmp    421892 <flatcc_json_printer_int64_field@@Base+0x102>
  4218bc:	nop    DWORD PTR [rax+0x0]
  4218c0:	mov    BYTE PTR [rsi],0x2d
  4218c3:	neg    r12
  4218c6:	add    rsi,0x1
  4218ca:	jmp    421882 <flatcc_json_printer_int64_field@@Base+0xf2>
  4218cc:	nop    DWORD PTR [rax+0x0]
  4218d0:	mov    rax,QWORD PTR [rdi+0x28]
  4218d4:	lea    rdx,[rax+0x1]
  4218d8:	mov    QWORD PTR [rdi+0x28],rdx
  4218dc:	mov    BYTE PTR [rax],0xa
  4218df:	movzx  esi,BYTE PTR [rdi+0x31]
  4218e3:	imul   esi,DWORD PTR [rdi+0x38]
  4218e7:	mov    rdi,QWORD PTR [rdi+0x28]
  4218eb:	movsxd r13,esi
  4218ee:	lea    rax,[rdi+r13*1]
  4218f2:	cmp    QWORD PTR [rbx+0x20],rax
  4218f6:	jb     421918 <flatcc_json_printer_int64_field@@Base+0x188>
  4218f8:	mov    esi,0x20
  4218fd:	mov    rdx,r13
  421900:	call   405090 <memset@plt>
  421905:	mov    rsi,r13
  421908:	add    rsi,QWORD PTR [rbx+0x28]
  42190c:	mov    QWORD PTR [rbx+0x28],rsi
  421910:	jmp    421810 <flatcc_json_printer_int64_field@@Base+0x80>
  421915:	nop    DWORD PTR [rax]
  421918:	mov    rsi,r13
  42191b:	mov    rdi,rbx
  42191e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421923:	mov    rsi,QWORD PTR [rbx+0x28]
  421927:	jmp    421810 <flatcc_json_printer_int64_field@@Base+0x80>
  42192c:	nop    DWORD PTR [rax+0x0]

0000000000421930 <flatcc_json_printer_bool_field@@Base>:
  421930:	push   r14
  421932:	lea    eax,[rdx+rdx*1+0x4]
  421936:	push   r13
  421938:	push   r12
  42193a:	push   rbp
  42193b:	push   rbx
  42193c:	cmp    eax,DWORD PTR [rsi+0x10]
  42193f:	jl     421950 <flatcc_json_printer_bool_field@@Base+0x20>
  421941:	cmp    BYTE PTR [rdi+0x35],0x0
  421945:	je     421a26 <flatcc_json_printer_bool_field@@Base+0xf6>
  42194b:	mov    r12d,r9d
  42194e:	jmp    42196f <flatcc_json_printer_bool_field@@Base+0x3f>
  421950:	mov    rdx,QWORD PTR [rsi+0x8]
  421954:	movzx  eax,WORD PTR [rdx+rax*1]
  421958:	test   ax,ax
  42195b:	je     421941 <flatcc_json_printer_bool_field@@Base+0x11>
  42195d:	add    rax,QWORD PTR [rsi]
  421960:	je     421941 <flatcc_json_printer_bool_field@@Base+0x11>
  421962:	movzx  r12d,BYTE PTR [rax]
  421966:	cmp    r9b,r12b
  421969:	je     421a40 <flatcc_json_printer_bool_field@@Base+0x110>
  42196f:	mov    eax,DWORD PTR [rsi+0x18]
  421972:	lea    edx,[rax+0x1]
  421975:	test   eax,eax
  421977:	mov    DWORD PTR [rsi+0x18],edx
  42197a:	je     42198b <flatcc_json_printer_bool_field@@Base+0x5b>
  42197c:	mov    rax,QWORD PTR [rdi+0x28]
  421980:	lea    rdx,[rax+0x1]
  421984:	mov    QWORD PTR [rdi+0x28],rdx
  421988:	mov    BYTE PTR [rax],0x2c
  42198b:	cmp    BYTE PTR [rdi+0x31],0x0
  42198f:	mov    r14,rcx
  421992:	mov    rbx,rdi
  421995:	movsxd rbp,r8d
  421998:	jne    421a50 <flatcc_json_printer_bool_field@@Base+0x120>
  42199e:	mov    rsi,QWORD PTR [rdi+0x28]
  4219a2:	cmp    rsi,QWORD PTR [rdi+0x20]
  4219a6:	jb     4219b1 <flatcc_json_printer_bool_field@@Base+0x81>
  4219a8:	xor    esi,esi
  4219aa:	call   QWORD PTR [rdi+0x48]
  4219ad:	mov    rsi,QWORD PTR [rbx+0x28]
  4219b1:	mov    BYTE PTR [rsi],0x22
  4219b4:	xor    edi,edi
  4219b6:	cmp    BYTE PTR [rbx+0x32],0x0
  4219ba:	mov    rdx,rbp
  4219bd:	mov    rsi,r14
  4219c0:	sete   dil
  4219c4:	add    rdi,QWORD PTR [rbx+0x28]
  4219c8:	lea    rax,[rdi+rbp*1]
  4219cc:	cmp    QWORD PTR [rbx+0x20],rax
  4219d0:	mov    QWORD PTR [rbx+0x28],rdi
  4219d4:	ja     421a30 <flatcc_json_printer_bool_field@@Base+0x100>
  4219d6:	mov    rdi,rbx
  4219d9:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4219de:	mov    rbp,QWORD PTR [rbx+0x28]
  4219e2:	mov    BYTE PTR [rbp+0x0],0x22
  4219e6:	xor    eax,eax
  4219e8:	cmp    BYTE PTR [rbx+0x32],0x0
  4219ec:	movzx  edi,r12b
  4219f0:	sete   al
  4219f3:	add    rax,QWORD PTR [rbx+0x28]
  4219f7:	xor    esi,esi
  4219f9:	lea    rdx,[rax+0x1]
  4219fd:	mov    QWORD PTR [rbx+0x28],rdx
  421a01:	mov    BYTE PTR [rax],0x3a
  421a04:	mov    rax,QWORD PTR [rbx+0x28]
  421a08:	mov    BYTE PTR [rax],0x20
  421a0b:	cmp    BYTE PTR [rbx+0x31],0x0
  421a0f:	setne  sil
  421a13:	add    rsi,QWORD PTR [rbx+0x28]
  421a17:	mov    QWORD PTR [rbx+0x28],rsi
  421a1b:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  421a20:	cdqe   
  421a22:	add    QWORD PTR [rbx+0x28],rax
  421a26:	pop    rbx
  421a27:	pop    rbp
  421a28:	pop    r12
  421a2a:	pop    r13
  421a2c:	pop    r14
  421a2e:	ret    
  421a2f:	nop
  421a30:	call   4050e0 <memcpy@plt>
  421a35:	add    rbp,QWORD PTR [rbx+0x28]
  421a39:	mov    QWORD PTR [rbx+0x28],rbp
  421a3d:	jmp    4219e2 <flatcc_json_printer_bool_field@@Base+0xb2>
  421a3f:	nop
  421a40:	cmp    BYTE PTR [rdi+0x34],0x0
  421a44:	je     42196f <flatcc_json_printer_bool_field@@Base+0x3f>
  421a4a:	jmp    421a26 <flatcc_json_printer_bool_field@@Base+0xf6>
  421a4c:	nop    DWORD PTR [rax+0x0]
  421a50:	mov    rax,QWORD PTR [rdi+0x28]
  421a54:	lea    rdx,[rax+0x1]
  421a58:	mov    QWORD PTR [rdi+0x28],rdx
  421a5c:	mov    BYTE PTR [rax],0xa
  421a5f:	movzx  esi,BYTE PTR [rdi+0x31]
  421a63:	imul   esi,DWORD PTR [rdi+0x38]
  421a67:	mov    rdi,QWORD PTR [rdi+0x28]
  421a6b:	movsxd r13,esi
  421a6e:	lea    rax,[rdi+r13*1]
  421a72:	cmp    QWORD PTR [rbx+0x20],rax
  421a76:	jb     421a98 <flatcc_json_printer_bool_field@@Base+0x168>
  421a78:	mov    esi,0x20
  421a7d:	mov    rdx,r13
  421a80:	call   405090 <memset@plt>
  421a85:	mov    rsi,r13
  421a88:	add    rsi,QWORD PTR [rbx+0x28]
  421a8c:	mov    QWORD PTR [rbx+0x28],rsi
  421a90:	jmp    4219b1 <flatcc_json_printer_bool_field@@Base+0x81>
  421a95:	nop    DWORD PTR [rax]
  421a98:	mov    rsi,r13
  421a9b:	mov    rdi,rbx
  421a9e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421aa3:	mov    rsi,QWORD PTR [rbx+0x28]
  421aa7:	jmp    4219b1 <flatcc_json_printer_bool_field@@Base+0x81>
  421aac:	nop    DWORD PTR [rax+0x0]

0000000000421ab0 <flatcc_json_printer_float_field@@Base>:
  421ab0:	lea    eax,[rdx+rdx*1+0x4]
  421ab4:	cmp    eax,DWORD PTR [rsi+0x10]
  421ab7:	jl     421ad0 <flatcc_json_printer_float_field@@Base+0x20>
  421ab9:	cmp    BYTE PTR [rdi+0x35],0x0
  421abd:	je     421bdf <flatcc_json_printer_float_field@@Base+0x12f>
  421ac3:	vmovaps xmm1,xmm0
  421ac7:	jmp    421af8 <flatcc_json_printer_float_field@@Base+0x48>
  421ac9:	nop    DWORD PTR [rax+0x0]
  421ad0:	mov    rdx,QWORD PTR [rsi+0x8]
  421ad4:	movzx  eax,WORD PTR [rdx+rax*1]
  421ad8:	test   ax,ax
  421adb:	je     421ab9 <flatcc_json_printer_float_field@@Base+0x9>
  421add:	add    rax,QWORD PTR [rsi]
  421ae0:	je     421ab9 <flatcc_json_printer_float_field@@Base+0x9>
  421ae2:	vmovss xmm1,DWORD PTR [rax]
  421ae6:	vucomiss xmm0,xmm1
  421aea:	jp     421af8 <flatcc_json_printer_float_field@@Base+0x48>
  421aec:	jne    421af8 <flatcc_json_printer_float_field@@Base+0x48>
  421aee:	cmp    BYTE PTR [rdi+0x34],0x0
  421af2:	jne    421c00 <flatcc_json_printer_float_field@@Base+0x150>
  421af8:	push   r13
  421afa:	push   r12
  421afc:	push   rbp
  421afd:	push   rbx
  421afe:	sub    rsp,0x18
  421b02:	mov    eax,DWORD PTR [rsi+0x18]
  421b05:	lea    edx,[rax+0x1]
  421b08:	test   eax,eax
  421b0a:	mov    DWORD PTR [rsi+0x18],edx
  421b0d:	je     421b1e <flatcc_json_printer_float_field@@Base+0x6e>
  421b0f:	mov    rax,QWORD PTR [rdi+0x28]
  421b13:	lea    rdx,[rax+0x1]
  421b17:	mov    QWORD PTR [rdi+0x28],rdx
  421b1b:	mov    BYTE PTR [rax],0x2c
  421b1e:	cmp    BYTE PTR [rdi+0x31],0x0
  421b22:	mov    r13,rcx
  421b25:	mov    rbx,rdi
  421b28:	movsxd rbp,r8d
  421b2b:	jne    421c08 <flatcc_json_printer_float_field@@Base+0x158>
  421b31:	mov    rsi,QWORD PTR [rdi+0x28]
  421b35:	cmp    rsi,QWORD PTR [rdi+0x20]
  421b39:	jb     421b50 <flatcc_json_printer_float_field@@Base+0xa0>
  421b3b:	vmovss DWORD PTR [rsp+0xc],xmm1
  421b41:	xor    esi,esi
  421b43:	call   QWORD PTR [rdi+0x48]
  421b46:	mov    rsi,QWORD PTR [rbx+0x28]
  421b4a:	vmovss xmm1,DWORD PTR [rsp+0xc]
  421b50:	mov    BYTE PTR [rsi],0x22
  421b53:	xor    edi,edi
  421b55:	cmp    BYTE PTR [rbx+0x32],0x0
  421b59:	vmovss DWORD PTR [rsp+0xc],xmm1
  421b5f:	mov    rdx,rbp
  421b62:	mov    rsi,r13
  421b65:	sete   dil
  421b69:	add    rdi,QWORD PTR [rbx+0x28]
  421b6d:	lea    rax,[rdi+rbp*1]
  421b71:	cmp    QWORD PTR [rbx+0x20],rax
  421b75:	mov    QWORD PTR [rbx+0x28],rdi
  421b79:	ja     421be8 <flatcc_json_printer_float_field@@Base+0x138>
  421b7b:	mov    rdi,rbx
  421b7e:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421b83:	mov    rbp,QWORD PTR [rbx+0x28]
  421b87:	vmovss xmm1,DWORD PTR [rsp+0xc]
  421b8d:	mov    BYTE PTR [rbp+0x0],0x22
  421b91:	xor    eax,eax
  421b93:	cmp    BYTE PTR [rbx+0x32],0x0
  421b97:	vxorpd xmm0,xmm0,xmm0
  421b9b:	sete   al
  421b9e:	add    rax,QWORD PTR [rbx+0x28]
  421ba2:	xor    edi,edi
  421ba4:	vcvtss2sd xmm0,xmm0,xmm1
  421ba8:	lea    rdx,[rax+0x1]
  421bac:	mov    QWORD PTR [rbx+0x28],rdx
  421bb0:	mov    BYTE PTR [rax],0x3a
  421bb3:	mov    rax,QWORD PTR [rbx+0x28]
  421bb7:	mov    BYTE PTR [rax],0x20
  421bba:	cmp    BYTE PTR [rbx+0x31],0x0
  421bbe:	setne  dil
  421bc2:	add    rdi,QWORD PTR [rbx+0x28]
  421bc6:	mov    QWORD PTR [rbx+0x28],rdi
  421bca:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  421bcf:	cdqe   
  421bd1:	add    QWORD PTR [rbx+0x28],rax
  421bd5:	add    rsp,0x18
  421bd9:	pop    rbx
  421bda:	pop    rbp
  421bdb:	pop    r12
  421bdd:	pop    r13
  421bdf:	repz ret 
  421be1:	nop    DWORD PTR [rax+0x0]
  421be8:	call   4050e0 <memcpy@plt>
  421bed:	add    rbp,QWORD PTR [rbx+0x28]
  421bf1:	vmovss xmm1,DWORD PTR [rsp+0xc]
  421bf7:	mov    QWORD PTR [rbx+0x28],rbp
  421bfb:	jmp    421b8d <flatcc_json_printer_float_field@@Base+0xdd>
  421bfd:	nop    DWORD PTR [rax]
  421c00:	repz ret 
  421c02:	nop    WORD PTR [rax+rax*1+0x0]
  421c08:	mov    rax,QWORD PTR [rdi+0x28]
  421c0c:	vmovss DWORD PTR [rsp+0xc],xmm1
  421c12:	lea    rdx,[rax+0x1]
  421c16:	mov    QWORD PTR [rdi+0x28],rdx
  421c1a:	mov    BYTE PTR [rax],0xa
  421c1d:	movzx  esi,BYTE PTR [rdi+0x31]
  421c21:	imul   esi,DWORD PTR [rdi+0x38]
  421c25:	mov    rdi,QWORD PTR [rdi+0x28]
  421c29:	movsxd r12,esi
  421c2c:	lea    rax,[rdi+r12*1]
  421c30:	cmp    QWORD PTR [rbx+0x20],rax
  421c34:	jb     421c60 <flatcc_json_printer_float_field@@Base+0x1b0>
  421c36:	mov    esi,0x20
  421c3b:	mov    rdx,r12
  421c3e:	call   405090 <memset@plt>
  421c43:	mov    rsi,r12
  421c46:	add    rsi,QWORD PTR [rbx+0x28]
  421c4a:	vmovss xmm1,DWORD PTR [rsp+0xc]
  421c50:	mov    QWORD PTR [rbx+0x28],rsi
  421c54:	jmp    421b50 <flatcc_json_printer_float_field@@Base+0xa0>
  421c59:	nop    DWORD PTR [rax+0x0]
  421c60:	mov    rsi,r12
  421c63:	mov    rdi,rbx
  421c66:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421c6b:	mov    rsi,QWORD PTR [rbx+0x28]
  421c6f:	vmovss xmm1,DWORD PTR [rsp+0xc]
  421c75:	jmp    421b50 <flatcc_json_printer_float_field@@Base+0xa0>
  421c7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421c80 <flatcc_json_printer_double_field@@Base>:
  421c80:	lea    eax,[rdx+rdx*1+0x4]
  421c84:	cmp    eax,DWORD PTR [rsi+0x10]
  421c87:	jl     421ca0 <flatcc_json_printer_double_field@@Base+0x20>
  421c89:	cmp    BYTE PTR [rdi+0x35],0x0
  421c8d:	je     421dab <flatcc_json_printer_double_field@@Base+0x12b>
  421c93:	vmovapd xmm1,xmm0
  421c97:	jmp    421cc8 <flatcc_json_printer_double_field@@Base+0x48>
  421c99:	nop    DWORD PTR [rax+0x0]
  421ca0:	mov    rdx,QWORD PTR [rsi+0x8]
  421ca4:	movzx  eax,WORD PTR [rdx+rax*1]
  421ca8:	test   ax,ax
  421cab:	je     421c89 <flatcc_json_printer_double_field@@Base+0x9>
  421cad:	add    rax,QWORD PTR [rsi]
  421cb0:	je     421c89 <flatcc_json_printer_double_field@@Base+0x9>
  421cb2:	vmovsd xmm1,QWORD PTR [rax]
  421cb6:	vucomisd xmm0,xmm1
  421cba:	jp     421cc8 <flatcc_json_printer_double_field@@Base+0x48>
  421cbc:	jne    421cc8 <flatcc_json_printer_double_field@@Base+0x48>
  421cbe:	cmp    BYTE PTR [rdi+0x34],0x0
  421cc2:	jne    421dc8 <flatcc_json_printer_double_field@@Base+0x148>
  421cc8:	push   r13
  421cca:	push   r12
  421ccc:	push   rbp
  421ccd:	push   rbx
  421cce:	sub    rsp,0x18
  421cd2:	mov    eax,DWORD PTR [rsi+0x18]
  421cd5:	lea    edx,[rax+0x1]
  421cd8:	test   eax,eax
  421cda:	mov    DWORD PTR [rsi+0x18],edx
  421cdd:	je     421cee <flatcc_json_printer_double_field@@Base+0x6e>
  421cdf:	mov    rax,QWORD PTR [rdi+0x28]
  421ce3:	lea    rdx,[rax+0x1]
  421ce7:	mov    QWORD PTR [rdi+0x28],rdx
  421ceb:	mov    BYTE PTR [rax],0x2c
  421cee:	cmp    BYTE PTR [rdi+0x31],0x0
  421cf2:	mov    r13,rcx
  421cf5:	mov    rbx,rdi
  421cf8:	movsxd rbp,r8d
  421cfb:	jne    421dd0 <flatcc_json_printer_double_field@@Base+0x150>
  421d01:	mov    rsi,QWORD PTR [rdi+0x28]
  421d05:	cmp    rsi,QWORD PTR [rdi+0x20]
  421d09:	jb     421d20 <flatcc_json_printer_double_field@@Base+0xa0>
  421d0b:	vmovsd QWORD PTR [rsp+0x8],xmm1
  421d11:	xor    esi,esi
  421d13:	call   QWORD PTR [rdi+0x48]
  421d16:	mov    rsi,QWORD PTR [rbx+0x28]
  421d1a:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  421d20:	mov    BYTE PTR [rsi],0x22
  421d23:	xor    edi,edi
  421d25:	cmp    BYTE PTR [rbx+0x32],0x0
  421d29:	vmovsd QWORD PTR [rsp+0x8],xmm1
  421d2f:	mov    rdx,rbp
  421d32:	mov    rsi,r13
  421d35:	sete   dil
  421d39:	add    rdi,QWORD PTR [rbx+0x28]
  421d3d:	lea    rax,[rdi+rbp*1]
  421d41:	cmp    QWORD PTR [rbx+0x20],rax
  421d45:	mov    QWORD PTR [rbx+0x28],rdi
  421d49:	ja     421db0 <flatcc_json_printer_double_field@@Base+0x130>
  421d4b:	mov    rdi,rbx
  421d4e:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421d53:	mov    rbp,QWORD PTR [rbx+0x28]
  421d57:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  421d5d:	mov    BYTE PTR [rbp+0x0],0x22
  421d61:	xor    eax,eax
  421d63:	cmp    BYTE PTR [rbx+0x32],0x0
  421d67:	vmovapd xmm0,xmm1
  421d6b:	sete   al
  421d6e:	add    rax,QWORD PTR [rbx+0x28]
  421d72:	xor    edi,edi
  421d74:	lea    rdx,[rax+0x1]
  421d78:	mov    QWORD PTR [rbx+0x28],rdx
  421d7c:	mov    BYTE PTR [rax],0x3a
  421d7f:	mov    rax,QWORD PTR [rbx+0x28]
  421d83:	mov    BYTE PTR [rax],0x20
  421d86:	cmp    BYTE PTR [rbx+0x31],0x0
  421d8a:	setne  dil
  421d8e:	add    rdi,QWORD PTR [rbx+0x28]
  421d92:	mov    QWORD PTR [rbx+0x28],rdi
  421d96:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  421d9b:	cdqe   
  421d9d:	add    QWORD PTR [rbx+0x28],rax
  421da1:	add    rsp,0x18
  421da5:	pop    rbx
  421da6:	pop    rbp
  421da7:	pop    r12
  421da9:	pop    r13
  421dab:	repz ret 
  421dad:	nop    DWORD PTR [rax]
  421db0:	call   4050e0 <memcpy@plt>
  421db5:	add    rbp,QWORD PTR [rbx+0x28]
  421db9:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  421dbf:	mov    QWORD PTR [rbx+0x28],rbp
  421dc3:	jmp    421d5d <flatcc_json_printer_double_field@@Base+0xdd>
  421dc5:	nop    DWORD PTR [rax]
  421dc8:	repz ret 
  421dca:	nop    WORD PTR [rax+rax*1+0x0]
  421dd0:	mov    rax,QWORD PTR [rdi+0x28]
  421dd4:	vmovsd QWORD PTR [rsp+0x8],xmm1
  421dda:	lea    rdx,[rax+0x1]
  421dde:	mov    QWORD PTR [rdi+0x28],rdx
  421de2:	mov    BYTE PTR [rax],0xa
  421de5:	movzx  esi,BYTE PTR [rdi+0x31]
  421de9:	imul   esi,DWORD PTR [rdi+0x38]
  421ded:	mov    rdi,QWORD PTR [rdi+0x28]
  421df1:	movsxd r12,esi
  421df4:	lea    rax,[rdi+r12*1]
  421df8:	cmp    QWORD PTR [rbx+0x20],rax
  421dfc:	jb     421e28 <flatcc_json_printer_double_field@@Base+0x1a8>
  421dfe:	mov    esi,0x20
  421e03:	mov    rdx,r12
  421e06:	call   405090 <memset@plt>
  421e0b:	mov    rsi,r12
  421e0e:	add    rsi,QWORD PTR [rbx+0x28]
  421e12:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  421e18:	mov    QWORD PTR [rbx+0x28],rsi
  421e1c:	jmp    421d20 <flatcc_json_printer_double_field@@Base+0xa0>
  421e21:	nop    DWORD PTR [rax+0x0]
  421e28:	mov    rsi,r12
  421e2b:	mov    rdi,rbx
  421e2e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421e33:	mov    rsi,QWORD PTR [rbx+0x28]
  421e37:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  421e3d:	jmp    421d20 <flatcc_json_printer_double_field@@Base+0xa0>
  421e42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  421e4d:	nop    DWORD PTR [rax]

0000000000421e50 <flatcc_json_printer_uint8_enum_field@@Base>:
  421e50:	push   r15
  421e52:	push   r14
  421e54:	lea    eax,[rdx+rdx*1+0x4]
  421e58:	push   r13
  421e5a:	push   r12
  421e5c:	push   rbp
  421e5d:	push   rbx
  421e5e:	sub    rsp,0x8
  421e62:	cmp    eax,DWORD PTR [rsi+0x10]
  421e65:	mov    r12,QWORD PTR [rsp+0x40]
  421e6a:	jl     421e80 <flatcc_json_printer_uint8_enum_field@@Base+0x30>
  421e6c:	cmp    BYTE PTR [rdi+0x35],0x0
  421e70:	je     421f7f <flatcc_json_printer_uint8_enum_field@@Base+0x12f>
  421e76:	mov    r13d,r9d
  421e79:	jmp    421e9f <flatcc_json_printer_uint8_enum_field@@Base+0x4f>
  421e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  421e80:	mov    rdx,QWORD PTR [rsi+0x8]
  421e84:	movzx  eax,WORD PTR [rdx+rax*1]
  421e88:	test   ax,ax
  421e8b:	je     421e6c <flatcc_json_printer_uint8_enum_field@@Base+0x1c>
  421e8d:	add    rax,QWORD PTR [rsi]
  421e90:	je     421e6c <flatcc_json_printer_uint8_enum_field@@Base+0x1c>
  421e92:	movzx  r13d,BYTE PTR [rax]
  421e96:	cmp    r9b,r13b
  421e99:	je     421fa8 <flatcc_json_printer_uint8_enum_field@@Base+0x158>
  421e9f:	mov    eax,DWORD PTR [rsi+0x18]
  421ea2:	lea    edx,[rax+0x1]
  421ea5:	test   eax,eax
  421ea7:	mov    DWORD PTR [rsi+0x18],edx
  421eaa:	je     421ebb <flatcc_json_printer_uint8_enum_field@@Base+0x6b>
  421eac:	mov    rax,QWORD PTR [rdi+0x28]
  421eb0:	lea    rdx,[rax+0x1]
  421eb4:	mov    QWORD PTR [rdi+0x28],rdx
  421eb8:	mov    BYTE PTR [rax],0x2c
  421ebb:	cmp    BYTE PTR [rdi+0x31],0x0
  421ebf:	mov    r15,rcx
  421ec2:	mov    rbx,rdi
  421ec5:	movsxd rbp,r8d
  421ec8:	jne    421fb8 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
  421ece:	mov    rsi,QWORD PTR [rdi+0x28]
  421ed2:	cmp    rsi,QWORD PTR [rdi+0x20]
  421ed6:	jb     421ee1 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  421ed8:	xor    esi,esi
  421eda:	call   QWORD PTR [rdi+0x48]
  421edd:	mov    rsi,QWORD PTR [rbx+0x28]
  421ee1:	mov    BYTE PTR [rsi],0x22
  421ee4:	xor    edi,edi
  421ee6:	cmp    BYTE PTR [rbx+0x32],0x0
  421eea:	mov    rdx,rbp
  421eed:	mov    rsi,r15
  421ef0:	sete   dil
  421ef4:	add    rdi,QWORD PTR [rbx+0x28]
  421ef8:	lea    rax,[rdi+rbp*1]
  421efc:	cmp    QWORD PTR [rbx+0x20],rax
  421f00:	mov    QWORD PTR [rbx+0x28],rdi
  421f04:	ja     421f90 <flatcc_json_printer_uint8_enum_field@@Base+0x140>
  421f0a:	mov    rdi,rbx
  421f0d:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421f12:	mov    rbp,QWORD PTR [rbx+0x28]
  421f16:	mov    BYTE PTR [rbp+0x0],0x22
  421f1a:	xor    eax,eax
  421f1c:	cmp    BYTE PTR [rbx+0x32],0x0
  421f20:	sete   al
  421f23:	add    rax,QWORD PTR [rbx+0x28]
  421f27:	xor    esi,esi
  421f29:	lea    rdx,[rax+0x1]
  421f2d:	mov    QWORD PTR [rbx+0x28],rdx
  421f31:	mov    BYTE PTR [rax],0x3a
  421f34:	mov    rax,QWORD PTR [rbx+0x28]
  421f38:	mov    BYTE PTR [rax],0x20
  421f3b:	cmp    BYTE PTR [rbx+0x31],0x0
  421f3f:	setne  sil
  421f43:	add    rsi,QWORD PTR [rbx+0x28]
  421f47:	cmp    BYTE PTR [rbx+0x33],0x0
  421f4b:	mov    QWORD PTR [rbx+0x28],rsi
  421f4f:	jne    421f70 <flatcc_json_printer_uint8_enum_field@@Base+0x120>
  421f51:	add    rsp,0x8
  421f55:	movzx  esi,r13b
  421f59:	mov    rdi,rbx
  421f5c:	mov    rax,r12
  421f5f:	pop    rbx
  421f60:	pop    rbp
  421f61:	pop    r12
  421f63:	pop    r13
  421f65:	pop    r14
  421f67:	pop    r15
  421f69:	jmp    rax
  421f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  421f70:	movzx  edi,r13b
  421f74:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  421f79:	cdqe   
  421f7b:	add    QWORD PTR [rbx+0x28],rax
  421f7f:	add    rsp,0x8
  421f83:	pop    rbx
  421f84:	pop    rbp
  421f85:	pop    r12
  421f87:	pop    r13
  421f89:	pop    r14
  421f8b:	pop    r15
  421f8d:	ret    
  421f8e:	xchg   ax,ax
  421f90:	call   4050e0 <memcpy@plt>
  421f95:	add    rbp,QWORD PTR [rbx+0x28]
  421f99:	mov    QWORD PTR [rbx+0x28],rbp
  421f9d:	jmp    421f16 <flatcc_json_printer_uint8_enum_field@@Base+0xc6>
  421fa2:	nop    WORD PTR [rax+rax*1+0x0]
  421fa8:	cmp    BYTE PTR [rdi+0x34],0x0
  421fac:	je     421e9f <flatcc_json_printer_uint8_enum_field@@Base+0x4f>
  421fb2:	jmp    421f7f <flatcc_json_printer_uint8_enum_field@@Base+0x12f>
  421fb4:	nop    DWORD PTR [rax+0x0]
  421fb8:	mov    rax,QWORD PTR [rdi+0x28]
  421fbc:	lea    rdx,[rax+0x1]
  421fc0:	mov    QWORD PTR [rdi+0x28],rdx
  421fc4:	mov    BYTE PTR [rax],0xa
  421fc7:	movzx  esi,BYTE PTR [rdi+0x31]
  421fcb:	imul   esi,DWORD PTR [rdi+0x38]
  421fcf:	mov    rdi,QWORD PTR [rdi+0x28]
  421fd3:	movsxd r14,esi
  421fd6:	lea    rax,[rdi+r14*1]
  421fda:	cmp    QWORD PTR [rbx+0x20],rax
  421fde:	jb     422000 <flatcc_json_printer_uint8_enum_field@@Base+0x1b0>
  421fe0:	mov    esi,0x20
  421fe5:	mov    rdx,r14
  421fe8:	call   405090 <memset@plt>
  421fed:	mov    rsi,r14
  421ff0:	add    rsi,QWORD PTR [rbx+0x28]
  421ff4:	mov    QWORD PTR [rbx+0x28],rsi
  421ff8:	jmp    421ee1 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  421ffd:	nop    DWORD PTR [rax]
  422000:	mov    rsi,r14
  422003:	mov    rdi,rbx
  422006:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42200b:	mov    rsi,QWORD PTR [rbx+0x28]
  42200f:	jmp    421ee1 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  422014:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42201f:	nop

0000000000422020 <flatcc_json_printer_uint16_enum_field@@Base>:
  422020:	push   r15
  422022:	push   r14
  422024:	lea    eax,[rdx+rdx*1+0x4]
  422028:	push   r13
  42202a:	push   r12
  42202c:	push   rbp
  42202d:	push   rbx
  42202e:	sub    rsp,0x8
  422032:	cmp    eax,DWORD PTR [rsi+0x10]
  422035:	mov    r12,QWORD PTR [rsp+0x40]
  42203a:	jl     422050 <flatcc_json_printer_uint16_enum_field@@Base+0x30>
  42203c:	cmp    BYTE PTR [rdi+0x35],0x0
  422040:	je     42214f <flatcc_json_printer_uint16_enum_field@@Base+0x12f>
  422046:	mov    r13d,r9d
  422049:	jmp    422070 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  42204b:	nop    DWORD PTR [rax+rax*1+0x0]
  422050:	mov    rdx,QWORD PTR [rsi+0x8]
  422054:	movzx  eax,WORD PTR [rdx+rax*1]
  422058:	test   ax,ax
  42205b:	je     42203c <flatcc_json_printer_uint16_enum_field@@Base+0x1c>
  42205d:	add    rax,QWORD PTR [rsi]
  422060:	je     42203c <flatcc_json_printer_uint16_enum_field@@Base+0x1c>
  422062:	movzx  r13d,WORD PTR [rax]
  422066:	cmp    r9w,r13w
  42206a:	je     422178 <flatcc_json_printer_uint16_enum_field@@Base+0x158>
  422070:	mov    eax,DWORD PTR [rsi+0x18]
  422073:	lea    edx,[rax+0x1]
  422076:	test   eax,eax
  422078:	mov    DWORD PTR [rsi+0x18],edx
  42207b:	je     42208c <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
  42207d:	mov    rax,QWORD PTR [rdi+0x28]
  422081:	lea    rdx,[rax+0x1]
  422085:	mov    QWORD PTR [rdi+0x28],rdx
  422089:	mov    BYTE PTR [rax],0x2c
  42208c:	cmp    BYTE PTR [rdi+0x31],0x0
  422090:	mov    r15,rcx
  422093:	mov    rbx,rdi
  422096:	movsxd rbp,r8d
  422099:	jne    422188 <flatcc_json_printer_uint16_enum_field@@Base+0x168>
  42209f:	mov    rsi,QWORD PTR [rdi+0x28]
  4220a3:	cmp    rsi,QWORD PTR [rdi+0x20]
  4220a7:	jb     4220b2 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  4220a9:	xor    esi,esi
  4220ab:	call   QWORD PTR [rdi+0x48]
  4220ae:	mov    rsi,QWORD PTR [rbx+0x28]
  4220b2:	mov    BYTE PTR [rsi],0x22
  4220b5:	xor    edi,edi
  4220b7:	cmp    BYTE PTR [rbx+0x32],0x0
  4220bb:	mov    rdx,rbp
  4220be:	mov    rsi,r15
  4220c1:	sete   dil
  4220c5:	add    rdi,QWORD PTR [rbx+0x28]
  4220c9:	lea    rax,[rdi+rbp*1]
  4220cd:	cmp    QWORD PTR [rbx+0x20],rax
  4220d1:	mov    QWORD PTR [rbx+0x28],rdi
  4220d5:	ja     422160 <flatcc_json_printer_uint16_enum_field@@Base+0x140>
  4220db:	mov    rdi,rbx
  4220de:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4220e3:	mov    rbp,QWORD PTR [rbx+0x28]
  4220e7:	mov    BYTE PTR [rbp+0x0],0x22
  4220eb:	xor    eax,eax
  4220ed:	cmp    BYTE PTR [rbx+0x32],0x0
  4220f1:	sete   al
  4220f4:	add    rax,QWORD PTR [rbx+0x28]
  4220f8:	xor    esi,esi
  4220fa:	lea    rdx,[rax+0x1]
  4220fe:	mov    QWORD PTR [rbx+0x28],rdx
  422102:	mov    BYTE PTR [rax],0x3a
  422105:	mov    rax,QWORD PTR [rbx+0x28]
  422109:	mov    BYTE PTR [rax],0x20
  42210c:	cmp    BYTE PTR [rbx+0x31],0x0
  422110:	setne  sil
  422114:	add    rsi,QWORD PTR [rbx+0x28]
  422118:	cmp    BYTE PTR [rbx+0x33],0x0
  42211c:	mov    QWORD PTR [rbx+0x28],rsi
  422120:	jne    422140 <flatcc_json_printer_uint16_enum_field@@Base+0x120>
  422122:	add    rsp,0x8
  422126:	movzx  esi,r13w
  42212a:	mov    rdi,rbx
  42212d:	mov    rax,r12
  422130:	pop    rbx
  422131:	pop    rbp
  422132:	pop    r12
  422134:	pop    r13
  422136:	pop    r14
  422138:	pop    r15
  42213a:	jmp    rax
  42213c:	nop    DWORD PTR [rax+0x0]
  422140:	movzx  edi,r13w
  422144:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  422149:	cdqe   
  42214b:	add    QWORD PTR [rbx+0x28],rax
  42214f:	add    rsp,0x8
  422153:	pop    rbx
  422154:	pop    rbp
  422155:	pop    r12
  422157:	pop    r13
  422159:	pop    r14
  42215b:	pop    r15
  42215d:	ret    
  42215e:	xchg   ax,ax
  422160:	call   4050e0 <memcpy@plt>
  422165:	add    rbp,QWORD PTR [rbx+0x28]
  422169:	mov    QWORD PTR [rbx+0x28],rbp
  42216d:	jmp    4220e7 <flatcc_json_printer_uint16_enum_field@@Base+0xc7>
  422172:	nop    WORD PTR [rax+rax*1+0x0]
  422178:	cmp    BYTE PTR [rdi+0x34],0x0
  42217c:	je     422070 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  422182:	jmp    42214f <flatcc_json_printer_uint16_enum_field@@Base+0x12f>
  422184:	nop    DWORD PTR [rax+0x0]
  422188:	mov    rax,QWORD PTR [rdi+0x28]
  42218c:	lea    rdx,[rax+0x1]
  422190:	mov    QWORD PTR [rdi+0x28],rdx
  422194:	mov    BYTE PTR [rax],0xa
  422197:	movzx  esi,BYTE PTR [rdi+0x31]
  42219b:	imul   esi,DWORD PTR [rdi+0x38]
  42219f:	mov    rdi,QWORD PTR [rdi+0x28]
  4221a3:	movsxd r14,esi
  4221a6:	lea    rax,[rdi+r14*1]
  4221aa:	cmp    QWORD PTR [rbx+0x20],rax
  4221ae:	jb     4221d0 <flatcc_json_printer_uint16_enum_field@@Base+0x1b0>
  4221b0:	mov    esi,0x20
  4221b5:	mov    rdx,r14
  4221b8:	call   405090 <memset@plt>
  4221bd:	mov    rsi,r14
  4221c0:	add    rsi,QWORD PTR [rbx+0x28]
  4221c4:	mov    QWORD PTR [rbx+0x28],rsi
  4221c8:	jmp    4220b2 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  4221cd:	nop    DWORD PTR [rax]
  4221d0:	mov    rsi,r14
  4221d3:	mov    rdi,rbx
  4221d6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4221db:	mov    rsi,QWORD PTR [rbx+0x28]
  4221df:	jmp    4220b2 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  4221e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4221ef:	nop

00000000004221f0 <flatcc_json_printer_uint32_enum_field@@Base>:
  4221f0:	push   r15
  4221f2:	push   r14
  4221f4:	lea    eax,[rdx+rdx*1+0x4]
  4221f8:	push   r13
  4221fa:	push   r12
  4221fc:	push   rbp
  4221fd:	push   rbx
  4221fe:	sub    rsp,0x8
  422202:	cmp    eax,DWORD PTR [rsi+0x10]
  422205:	mov    r12,QWORD PTR [rsp+0x40]
  42220a:	jl     422220 <flatcc_json_printer_uint32_enum_field@@Base+0x30>
  42220c:	cmp    BYTE PTR [rdi+0x35],0x0
  422210:	je     42231e <flatcc_json_printer_uint32_enum_field@@Base+0x12e>
  422216:	mov    r14d,r9d
  422219:	jmp    42223e <flatcc_json_printer_uint32_enum_field@@Base+0x4e>
  42221b:	nop    DWORD PTR [rax+rax*1+0x0]
  422220:	mov    rdx,QWORD PTR [rsi+0x8]
  422224:	movzx  eax,WORD PTR [rdx+rax*1]
  422228:	test   ax,ax
  42222b:	je     42220c <flatcc_json_printer_uint32_enum_field@@Base+0x1c>
  42222d:	add    rax,QWORD PTR [rsi]
  422230:	je     42220c <flatcc_json_printer_uint32_enum_field@@Base+0x1c>
  422232:	mov    r14d,DWORD PTR [rax]
  422235:	cmp    r9d,r14d
  422238:	je     422348 <flatcc_json_printer_uint32_enum_field@@Base+0x158>
  42223e:	mov    eax,DWORD PTR [rsi+0x18]
  422241:	lea    edx,[rax+0x1]
  422244:	test   eax,eax
  422246:	mov    DWORD PTR [rsi+0x18],edx
  422249:	je     42225a <flatcc_json_printer_uint32_enum_field@@Base+0x6a>
  42224b:	mov    rax,QWORD PTR [rdi+0x28]
  42224f:	lea    rdx,[rax+0x1]
  422253:	mov    QWORD PTR [rdi+0x28],rdx
  422257:	mov    BYTE PTR [rax],0x2c
  42225a:	cmp    BYTE PTR [rdi+0x31],0x0
  42225e:	mov    r15,rcx
  422261:	mov    rbx,rdi
  422264:	movsxd rbp,r8d
  422267:	jne    422358 <flatcc_json_printer_uint32_enum_field@@Base+0x168>
  42226d:	mov    rsi,QWORD PTR [rdi+0x28]
  422271:	cmp    rsi,QWORD PTR [rdi+0x20]
  422275:	jb     422280 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  422277:	xor    esi,esi
  422279:	call   QWORD PTR [rdi+0x48]
  42227c:	mov    rsi,QWORD PTR [rbx+0x28]
  422280:	mov    BYTE PTR [rsi],0x22
  422283:	xor    edi,edi
  422285:	cmp    BYTE PTR [rbx+0x32],0x0
  422289:	mov    rdx,rbp
  42228c:	mov    rsi,r15
  42228f:	sete   dil
  422293:	add    rdi,QWORD PTR [rbx+0x28]
  422297:	lea    rax,[rdi+rbp*1]
  42229b:	cmp    QWORD PTR [rbx+0x20],rax
  42229f:	mov    QWORD PTR [rbx+0x28],rdi
  4222a3:	ja     422330 <flatcc_json_printer_uint32_enum_field@@Base+0x140>
  4222a9:	mov    rdi,rbx
  4222ac:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4222b1:	mov    rbp,QWORD PTR [rbx+0x28]
  4222b5:	mov    BYTE PTR [rbp+0x0],0x22
  4222b9:	xor    eax,eax
  4222bb:	cmp    BYTE PTR [rbx+0x32],0x0
  4222bf:	sete   al
  4222c2:	add    rax,QWORD PTR [rbx+0x28]
  4222c6:	xor    esi,esi
  4222c8:	lea    rdx,[rax+0x1]
  4222cc:	mov    QWORD PTR [rbx+0x28],rdx
  4222d0:	mov    BYTE PTR [rax],0x3a
  4222d3:	mov    rax,QWORD PTR [rbx+0x28]
  4222d7:	mov    BYTE PTR [rax],0x20
  4222da:	cmp    BYTE PTR [rbx+0x31],0x0
  4222de:	setne  sil
  4222e2:	add    rsi,QWORD PTR [rbx+0x28]
  4222e6:	cmp    BYTE PTR [rbx+0x33],0x0
  4222ea:	mov    QWORD PTR [rbx+0x28],rsi
  4222ee:	jne    422310 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
  4222f0:	add    rsp,0x8
  4222f4:	mov    esi,r14d
  4222f7:	mov    rdi,rbx
  4222fa:	mov    rax,r12
  4222fd:	pop    rbx
  4222fe:	pop    rbp
  4222ff:	pop    r12
  422301:	pop    r13
  422303:	pop    r14
  422305:	pop    r15
  422307:	jmp    rax
  422309:	nop    DWORD PTR [rax+0x0]
  422310:	mov    edi,r14d
  422313:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  422318:	cdqe   
  42231a:	add    QWORD PTR [rbx+0x28],rax
  42231e:	add    rsp,0x8
  422322:	pop    rbx
  422323:	pop    rbp
  422324:	pop    r12
  422326:	pop    r13
  422328:	pop    r14
  42232a:	pop    r15
  42232c:	ret    
  42232d:	nop    DWORD PTR [rax]
  422330:	call   4050e0 <memcpy@plt>
  422335:	add    rbp,QWORD PTR [rbx+0x28]
  422339:	mov    QWORD PTR [rbx+0x28],rbp
  42233d:	jmp    4222b5 <flatcc_json_printer_uint32_enum_field@@Base+0xc5>
  422342:	nop    WORD PTR [rax+rax*1+0x0]
  422348:	cmp    BYTE PTR [rdi+0x34],0x0
  42234c:	je     42223e <flatcc_json_printer_uint32_enum_field@@Base+0x4e>
  422352:	jmp    42231e <flatcc_json_printer_uint32_enum_field@@Base+0x12e>
  422354:	nop    DWORD PTR [rax+0x0]
  422358:	mov    rax,QWORD PTR [rdi+0x28]
  42235c:	lea    rdx,[rax+0x1]
  422360:	mov    QWORD PTR [rdi+0x28],rdx
  422364:	mov    BYTE PTR [rax],0xa
  422367:	movzx  esi,BYTE PTR [rdi+0x31]
  42236b:	imul   esi,DWORD PTR [rdi+0x38]
  42236f:	mov    rdi,QWORD PTR [rdi+0x28]
  422373:	movsxd r13,esi
  422376:	lea    rax,[rdi+r13*1]
  42237a:	cmp    QWORD PTR [rbx+0x20],rax
  42237e:	jb     4223a0 <flatcc_json_printer_uint32_enum_field@@Base+0x1b0>
  422380:	mov    esi,0x20
  422385:	mov    rdx,r13
  422388:	call   405090 <memset@plt>
  42238d:	mov    rsi,r13
  422390:	add    rsi,QWORD PTR [rbx+0x28]
  422394:	mov    QWORD PTR [rbx+0x28],rsi
  422398:	jmp    422280 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  42239d:	nop    DWORD PTR [rax]
  4223a0:	mov    rsi,r13
  4223a3:	mov    rdi,rbx
  4223a6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4223ab:	mov    rsi,QWORD PTR [rbx+0x28]
  4223af:	jmp    422280 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  4223b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4223bf:	nop

00000000004223c0 <flatcc_json_printer_uint64_enum_field@@Base>:
  4223c0:	push   r15
  4223c2:	push   r14
  4223c4:	lea    eax,[rdx+rdx*1+0x4]
  4223c8:	push   r13
  4223ca:	push   r12
  4223cc:	push   rbp
  4223cd:	push   rbx
  4223ce:	sub    rsp,0x8
  4223d2:	cmp    eax,DWORD PTR [rsi+0x10]
  4223d5:	mov    r12,QWORD PTR [rsp+0x40]
  4223da:	jl     4223f0 <flatcc_json_printer_uint64_enum_field@@Base+0x30>
  4223dc:	cmp    BYTE PTR [rdi+0x35],0x0
  4223e0:	je     4224ee <flatcc_json_printer_uint64_enum_field@@Base+0x12e>
  4223e6:	mov    r14,r9
  4223e9:	jmp    42240e <flatcc_json_printer_uint64_enum_field@@Base+0x4e>
  4223eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4223f0:	mov    rdx,QWORD PTR [rsi+0x8]
  4223f4:	movzx  eax,WORD PTR [rdx+rax*1]
  4223f8:	test   ax,ax
  4223fb:	je     4223dc <flatcc_json_printer_uint64_enum_field@@Base+0x1c>
  4223fd:	add    rax,QWORD PTR [rsi]
  422400:	je     4223dc <flatcc_json_printer_uint64_enum_field@@Base+0x1c>
  422402:	mov    r14,QWORD PTR [rax]
  422405:	cmp    r9,r14
  422408:	je     422518 <flatcc_json_printer_uint64_enum_field@@Base+0x158>
  42240e:	mov    eax,DWORD PTR [rsi+0x18]
  422411:	lea    edx,[rax+0x1]
  422414:	test   eax,eax
  422416:	mov    DWORD PTR [rsi+0x18],edx
  422419:	je     42242a <flatcc_json_printer_uint64_enum_field@@Base+0x6a>
  42241b:	mov    rax,QWORD PTR [rdi+0x28]
  42241f:	lea    rdx,[rax+0x1]
  422423:	mov    QWORD PTR [rdi+0x28],rdx
  422427:	mov    BYTE PTR [rax],0x2c
  42242a:	cmp    BYTE PTR [rdi+0x31],0x0
  42242e:	mov    r15,rcx
  422431:	mov    rbx,rdi
  422434:	movsxd rbp,r8d
  422437:	jne    422528 <flatcc_json_printer_uint64_enum_field@@Base+0x168>
  42243d:	mov    rsi,QWORD PTR [rdi+0x28]
  422441:	cmp    rsi,QWORD PTR [rdi+0x20]
  422445:	jb     422450 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  422447:	xor    esi,esi
  422449:	call   QWORD PTR [rdi+0x48]
  42244c:	mov    rsi,QWORD PTR [rbx+0x28]
  422450:	mov    BYTE PTR [rsi],0x22
  422453:	xor    edi,edi
  422455:	cmp    BYTE PTR [rbx+0x32],0x0
  422459:	mov    rdx,rbp
  42245c:	mov    rsi,r15
  42245f:	sete   dil
  422463:	add    rdi,QWORD PTR [rbx+0x28]
  422467:	lea    rax,[rdi+rbp*1]
  42246b:	cmp    QWORD PTR [rbx+0x20],rax
  42246f:	mov    QWORD PTR [rbx+0x28],rdi
  422473:	ja     422500 <flatcc_json_printer_uint64_enum_field@@Base+0x140>
  422479:	mov    rdi,rbx
  42247c:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422481:	mov    rbp,QWORD PTR [rbx+0x28]
  422485:	mov    BYTE PTR [rbp+0x0],0x22
  422489:	xor    eax,eax
  42248b:	cmp    BYTE PTR [rbx+0x32],0x0
  42248f:	sete   al
  422492:	add    rax,QWORD PTR [rbx+0x28]
  422496:	xor    esi,esi
  422498:	lea    rdx,[rax+0x1]
  42249c:	mov    QWORD PTR [rbx+0x28],rdx
  4224a0:	mov    BYTE PTR [rax],0x3a
  4224a3:	mov    rax,QWORD PTR [rbx+0x28]
  4224a7:	mov    BYTE PTR [rax],0x20
  4224aa:	cmp    BYTE PTR [rbx+0x31],0x0
  4224ae:	setne  sil
  4224b2:	add    rsi,QWORD PTR [rbx+0x28]
  4224b6:	cmp    BYTE PTR [rbx+0x33],0x0
  4224ba:	mov    QWORD PTR [rbx+0x28],rsi
  4224be:	jne    4224e0 <flatcc_json_printer_uint64_enum_field@@Base+0x120>
  4224c0:	add    rsp,0x8
  4224c4:	mov    rsi,r14
  4224c7:	mov    rdi,rbx
  4224ca:	mov    rax,r12
  4224cd:	pop    rbx
  4224ce:	pop    rbp
  4224cf:	pop    r12
  4224d1:	pop    r13
  4224d3:	pop    r14
  4224d5:	pop    r15
  4224d7:	jmp    rax
  4224d9:	nop    DWORD PTR [rax+0x0]
  4224e0:	mov    rdi,r14
  4224e3:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4224e8:	cdqe   
  4224ea:	add    QWORD PTR [rbx+0x28],rax
  4224ee:	add    rsp,0x8
  4224f2:	pop    rbx
  4224f3:	pop    rbp
  4224f4:	pop    r12
  4224f6:	pop    r13
  4224f8:	pop    r14
  4224fa:	pop    r15
  4224fc:	ret    
  4224fd:	nop    DWORD PTR [rax]
  422500:	call   4050e0 <memcpy@plt>
  422505:	add    rbp,QWORD PTR [rbx+0x28]
  422509:	mov    QWORD PTR [rbx+0x28],rbp
  42250d:	jmp    422485 <flatcc_json_printer_uint64_enum_field@@Base+0xc5>
  422512:	nop    WORD PTR [rax+rax*1+0x0]
  422518:	cmp    BYTE PTR [rdi+0x34],0x0
  42251c:	je     42240e <flatcc_json_printer_uint64_enum_field@@Base+0x4e>
  422522:	jmp    4224ee <flatcc_json_printer_uint64_enum_field@@Base+0x12e>
  422524:	nop    DWORD PTR [rax+0x0]
  422528:	mov    rax,QWORD PTR [rdi+0x28]
  42252c:	lea    rdx,[rax+0x1]
  422530:	mov    QWORD PTR [rdi+0x28],rdx
  422534:	mov    BYTE PTR [rax],0xa
  422537:	movzx  esi,BYTE PTR [rdi+0x31]
  42253b:	imul   esi,DWORD PTR [rdi+0x38]
  42253f:	mov    rdi,QWORD PTR [rdi+0x28]
  422543:	movsxd r13,esi
  422546:	lea    rax,[rdi+r13*1]
  42254a:	cmp    QWORD PTR [rbx+0x20],rax
  42254e:	jb     422570 <flatcc_json_printer_uint64_enum_field@@Base+0x1b0>
  422550:	mov    esi,0x20
  422555:	mov    rdx,r13
  422558:	call   405090 <memset@plt>
  42255d:	mov    rsi,r13
  422560:	add    rsi,QWORD PTR [rbx+0x28]
  422564:	mov    QWORD PTR [rbx+0x28],rsi
  422568:	jmp    422450 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  42256d:	nop    DWORD PTR [rax]
  422570:	mov    rsi,r13
  422573:	mov    rdi,rbx
  422576:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42257b:	mov    rsi,QWORD PTR [rbx+0x28]
  42257f:	jmp    422450 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  422584:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42258f:	nop

0000000000422590 <flatcc_json_printer_int8_enum_field@@Base>:
  422590:	push   r15
  422592:	push   r14
  422594:	lea    eax,[rdx+rdx*1+0x4]
  422598:	push   r13
  42259a:	push   r12
  42259c:	push   rbp
  42259d:	push   rbx
  42259e:	sub    rsp,0x8
  4225a2:	cmp    eax,DWORD PTR [rsi+0x10]
  4225a5:	mov    r12,QWORD PTR [rsp+0x40]
  4225aa:	jl     4225c0 <flatcc_json_printer_int8_enum_field@@Base+0x30>
  4225ac:	cmp    BYTE PTR [rdi+0x35],0x0
  4225b0:	je     4226bb <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  4225b6:	mov    r13d,r9d
  4225b9:	jmp    4225df <flatcc_json_printer_int8_enum_field@@Base+0x4f>
  4225bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4225c0:	mov    rdx,QWORD PTR [rsi+0x8]
  4225c4:	movzx  eax,WORD PTR [rdx+rax*1]
  4225c8:	test   ax,ax
  4225cb:	je     4225ac <flatcc_json_printer_int8_enum_field@@Base+0x1c>
  4225cd:	add    rax,QWORD PTR [rsi]
  4225d0:	je     4225ac <flatcc_json_printer_int8_enum_field@@Base+0x1c>
  4225d2:	movzx  r13d,BYTE PTR [rax]
  4225d6:	cmp    r9b,r13b
  4225d9:	je     422708 <flatcc_json_printer_int8_enum_field@@Base+0x178>
  4225df:	mov    eax,DWORD PTR [rsi+0x18]
  4225e2:	lea    edx,[rax+0x1]
  4225e5:	test   eax,eax
  4225e7:	mov    DWORD PTR [rsi+0x18],edx
  4225ea:	je     4225fb <flatcc_json_printer_int8_enum_field@@Base+0x6b>
  4225ec:	mov    rax,QWORD PTR [rdi+0x28]
  4225f0:	lea    rdx,[rax+0x1]
  4225f4:	mov    QWORD PTR [rdi+0x28],rdx
  4225f8:	mov    BYTE PTR [rax],0x2c
  4225fb:	cmp    BYTE PTR [rdi+0x31],0x0
  4225ff:	mov    r15,rcx
  422602:	mov    rbx,rdi
  422605:	movsxd rbp,r8d
  422608:	jne    422718 <flatcc_json_printer_int8_enum_field@@Base+0x188>
  42260e:	mov    rsi,QWORD PTR [rdi+0x28]
  422612:	cmp    rsi,QWORD PTR [rdi+0x20]
  422616:	jb     422621 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  422618:	xor    esi,esi
  42261a:	call   QWORD PTR [rdi+0x48]
  42261d:	mov    rsi,QWORD PTR [rbx+0x28]
  422621:	mov    BYTE PTR [rsi],0x22
  422624:	xor    edi,edi
  422626:	cmp    BYTE PTR [rbx+0x32],0x0
  42262a:	mov    rdx,rbp
  42262d:	mov    rsi,r15
  422630:	sete   dil
  422634:	add    rdi,QWORD PTR [rbx+0x28]
  422638:	lea    rax,[rdi+rbp*1]
  42263c:	cmp    QWORD PTR [rbx+0x20],rax
  422640:	mov    QWORD PTR [rbx+0x28],rdi
  422644:	ja     4226d0 <flatcc_json_printer_int8_enum_field@@Base+0x140>
  42264a:	mov    rdi,rbx
  42264d:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422652:	mov    rbp,QWORD PTR [rbx+0x28]
  422656:	mov    BYTE PTR [rbp+0x0],0x22
  42265a:	xor    eax,eax
  42265c:	cmp    BYTE PTR [rbx+0x32],0x0
  422660:	sete   al
  422663:	add    rax,QWORD PTR [rbx+0x28]
  422667:	xor    esi,esi
  422669:	lea    rdx,[rax+0x1]
  42266d:	mov    QWORD PTR [rbx+0x28],rdx
  422671:	mov    BYTE PTR [rax],0x3a
  422674:	mov    rax,QWORD PTR [rbx+0x28]
  422678:	mov    BYTE PTR [rax],0x20
  42267b:	cmp    BYTE PTR [rbx+0x31],0x0
  42267f:	setne  sil
  422683:	add    rsi,QWORD PTR [rbx+0x28]
  422687:	cmp    BYTE PTR [rbx+0x33],0x0
  42268b:	mov    QWORD PTR [rbx+0x28],rsi
  42268f:	je     4226e8 <flatcc_json_printer_int8_enum_field@@Base+0x158>
  422691:	movsx  r8d,r13b
  422695:	shr    r8d,0x1f
  422699:	test   r13b,r13b
  42269c:	jns    4226a8 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  42269e:	mov    BYTE PTR [rsi],0x2d
  4226a1:	neg    r13d
  4226a4:	add    rsi,0x1
  4226a8:	movzx  edi,r13b
  4226ac:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  4226b1:	add    r8d,eax
  4226b4:	movsxd r8,r8d
  4226b7:	add    QWORD PTR [rbx+0x28],r8
  4226bb:	add    rsp,0x8
  4226bf:	pop    rbx
  4226c0:	pop    rbp
  4226c1:	pop    r12
  4226c3:	pop    r13
  4226c5:	pop    r14
  4226c7:	pop    r15
  4226c9:	ret    
  4226ca:	nop    WORD PTR [rax+rax*1+0x0]
  4226d0:	call   4050e0 <memcpy@plt>
  4226d5:	add    rbp,QWORD PTR [rbx+0x28]
  4226d9:	mov    QWORD PTR [rbx+0x28],rbp
  4226dd:	jmp    422656 <flatcc_json_printer_int8_enum_field@@Base+0xc6>
  4226e2:	nop    WORD PTR [rax+rax*1+0x0]
  4226e8:	add    rsp,0x8
  4226ec:	movsx  esi,r13b
  4226f0:	mov    rdi,rbx
  4226f3:	mov    rax,r12
  4226f6:	pop    rbx
  4226f7:	pop    rbp
  4226f8:	pop    r12
  4226fa:	pop    r13
  4226fc:	pop    r14
  4226fe:	pop    r15
  422700:	jmp    rax
  422702:	nop    WORD PTR [rax+rax*1+0x0]
  422708:	cmp    BYTE PTR [rdi+0x34],0x0
  42270c:	je     4225df <flatcc_json_printer_int8_enum_field@@Base+0x4f>
  422712:	jmp    4226bb <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  422714:	nop    DWORD PTR [rax+0x0]
  422718:	mov    rax,QWORD PTR [rdi+0x28]
  42271c:	lea    rdx,[rax+0x1]
  422720:	mov    QWORD PTR [rdi+0x28],rdx
  422724:	mov    BYTE PTR [rax],0xa
  422727:	movzx  esi,BYTE PTR [rdi+0x31]
  42272b:	imul   esi,DWORD PTR [rdi+0x38]
  42272f:	mov    rdi,QWORD PTR [rdi+0x28]
  422733:	movsxd r14,esi
  422736:	lea    rax,[rdi+r14*1]
  42273a:	cmp    QWORD PTR [rbx+0x20],rax
  42273e:	jb     422760 <flatcc_json_printer_int8_enum_field@@Base+0x1d0>
  422740:	mov    esi,0x20
  422745:	mov    rdx,r14
  422748:	call   405090 <memset@plt>
  42274d:	mov    rsi,r14
  422750:	add    rsi,QWORD PTR [rbx+0x28]
  422754:	mov    QWORD PTR [rbx+0x28],rsi
  422758:	jmp    422621 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  42275d:	nop    DWORD PTR [rax]
  422760:	mov    rsi,r14
  422763:	mov    rdi,rbx
  422766:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42276b:	mov    rsi,QWORD PTR [rbx+0x28]
  42276f:	jmp    422621 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  422774:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42277f:	nop

0000000000422780 <flatcc_json_printer_int16_enum_field@@Base>:
  422780:	push   r15
  422782:	push   r14
  422784:	lea    eax,[rdx+rdx*1+0x4]
  422788:	push   r13
  42278a:	push   r12
  42278c:	push   rbp
  42278d:	push   rbx
  42278e:	sub    rsp,0x8
  422792:	cmp    eax,DWORD PTR [rsi+0x10]
  422795:	mov    r12,QWORD PTR [rsp+0x40]
  42279a:	jl     4227b0 <flatcc_json_printer_int16_enum_field@@Base+0x30>
  42279c:	cmp    BYTE PTR [rdi+0x35],0x0
  4227a0:	je     4228ad <flatcc_json_printer_int16_enum_field@@Base+0x12d>
  4227a6:	mov    r13d,r9d
  4227a9:	jmp    4227d0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  4227ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4227b0:	mov    rdx,QWORD PTR [rsi+0x8]
  4227b4:	movzx  eax,WORD PTR [rdx+rax*1]
  4227b8:	test   ax,ax
  4227bb:	je     42279c <flatcc_json_printer_int16_enum_field@@Base+0x1c>
  4227bd:	add    rax,QWORD PTR [rsi]
  4227c0:	je     42279c <flatcc_json_printer_int16_enum_field@@Base+0x1c>
  4227c2:	movzx  r13d,WORD PTR [rax]
  4227c6:	cmp    r9w,r13w
  4227ca:	je     4228f8 <flatcc_json_printer_int16_enum_field@@Base+0x178>
  4227d0:	mov    eax,DWORD PTR [rsi+0x18]
  4227d3:	lea    edx,[rax+0x1]
  4227d6:	test   eax,eax
  4227d8:	mov    DWORD PTR [rsi+0x18],edx
  4227db:	je     4227ec <flatcc_json_printer_int16_enum_field@@Base+0x6c>
  4227dd:	mov    rax,QWORD PTR [rdi+0x28]
  4227e1:	lea    rdx,[rax+0x1]
  4227e5:	mov    QWORD PTR [rdi+0x28],rdx
  4227e9:	mov    BYTE PTR [rax],0x2c
  4227ec:	cmp    BYTE PTR [rdi+0x31],0x0
  4227f0:	mov    r15,rcx
  4227f3:	mov    rbx,rdi
  4227f6:	movsxd rbp,r8d
  4227f9:	jne    422908 <flatcc_json_printer_int16_enum_field@@Base+0x188>
  4227ff:	mov    rsi,QWORD PTR [rdi+0x28]
  422803:	cmp    rsi,QWORD PTR [rdi+0x20]
  422807:	jb     422812 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  422809:	xor    esi,esi
  42280b:	call   QWORD PTR [rdi+0x48]
  42280e:	mov    rsi,QWORD PTR [rbx+0x28]
  422812:	mov    BYTE PTR [rsi],0x22
  422815:	xor    edi,edi
  422817:	cmp    BYTE PTR [rbx+0x32],0x0
  42281b:	mov    rdx,rbp
  42281e:	mov    rsi,r15
  422821:	sete   dil
  422825:	add    rdi,QWORD PTR [rbx+0x28]
  422829:	lea    rax,[rdi+rbp*1]
  42282d:	cmp    QWORD PTR [rbx+0x20],rax
  422831:	mov    QWORD PTR [rbx+0x28],rdi
  422835:	ja     4228c0 <flatcc_json_printer_int16_enum_field@@Base+0x140>
  42283b:	mov    rdi,rbx
  42283e:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422843:	mov    rbp,QWORD PTR [rbx+0x28]
  422847:	mov    BYTE PTR [rbp+0x0],0x22
  42284b:	xor    eax,eax
  42284d:	cmp    BYTE PTR [rbx+0x32],0x0
  422851:	sete   al
  422854:	add    rax,QWORD PTR [rbx+0x28]
  422858:	xor    esi,esi
  42285a:	lea    rdx,[rax+0x1]
  42285e:	mov    QWORD PTR [rbx+0x28],rdx
  422862:	mov    BYTE PTR [rax],0x3a
  422865:	mov    rax,QWORD PTR [rbx+0x28]
  422869:	mov    BYTE PTR [rax],0x20
  42286c:	cmp    BYTE PTR [rbx+0x31],0x0
  422870:	setne  sil
  422874:	add    rsi,QWORD PTR [rbx+0x28]
  422878:	cmp    BYTE PTR [rbx+0x33],0x0
  42287c:	mov    QWORD PTR [rbx+0x28],rsi
  422880:	je     4228d8 <flatcc_json_printer_int16_enum_field@@Base+0x158>
  422882:	movsx  r11d,r13w
  422886:	shr    r11d,0x1f
  42288a:	test   r13w,r13w
  42288e:	jns    42289a <flatcc_json_printer_int16_enum_field@@Base+0x11a>
  422890:	mov    BYTE PTR [rsi],0x2d
  422893:	neg    r13d
  422896:	add    rsi,0x1
  42289a:	movzx  edi,r13w
  42289e:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  4228a3:	add    r11d,eax
  4228a6:	movsxd r11,r11d
  4228a9:	add    QWORD PTR [rbx+0x28],r11
  4228ad:	add    rsp,0x8
  4228b1:	pop    rbx
  4228b2:	pop    rbp
  4228b3:	pop    r12
  4228b5:	pop    r13
  4228b7:	pop    r14
  4228b9:	pop    r15
  4228bb:	ret    
  4228bc:	nop    DWORD PTR [rax+0x0]
  4228c0:	call   4050e0 <memcpy@plt>
  4228c5:	add    rbp,QWORD PTR [rbx+0x28]
  4228c9:	mov    QWORD PTR [rbx+0x28],rbp
  4228cd:	jmp    422847 <flatcc_json_printer_int16_enum_field@@Base+0xc7>
  4228d2:	nop    WORD PTR [rax+rax*1+0x0]
  4228d8:	add    rsp,0x8
  4228dc:	movsx  esi,r13w
  4228e0:	mov    rdi,rbx
  4228e3:	mov    rax,r12
  4228e6:	pop    rbx
  4228e7:	pop    rbp
  4228e8:	pop    r12
  4228ea:	pop    r13
  4228ec:	pop    r14
  4228ee:	pop    r15
  4228f0:	jmp    rax
  4228f2:	nop    WORD PTR [rax+rax*1+0x0]
  4228f8:	cmp    BYTE PTR [rdi+0x34],0x0
  4228fc:	je     4227d0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  422902:	jmp    4228ad <flatcc_json_printer_int16_enum_field@@Base+0x12d>
  422904:	nop    DWORD PTR [rax+0x0]
  422908:	mov    rax,QWORD PTR [rdi+0x28]
  42290c:	lea    rdx,[rax+0x1]
  422910:	mov    QWORD PTR [rdi+0x28],rdx
  422914:	mov    BYTE PTR [rax],0xa
  422917:	movzx  esi,BYTE PTR [rdi+0x31]
  42291b:	imul   esi,DWORD PTR [rdi+0x38]
  42291f:	mov    rdi,QWORD PTR [rdi+0x28]
  422923:	movsxd r14,esi
  422926:	lea    rax,[rdi+r14*1]
  42292a:	cmp    QWORD PTR [rbx+0x20],rax
  42292e:	jb     422950 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  422930:	mov    esi,0x20
  422935:	mov    rdx,r14
  422938:	call   405090 <memset@plt>
  42293d:	mov    rsi,r14
  422940:	add    rsi,QWORD PTR [rbx+0x28]
  422944:	mov    QWORD PTR [rbx+0x28],rsi
  422948:	jmp    422812 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  42294d:	nop    DWORD PTR [rax]
  422950:	mov    rsi,r14
  422953:	mov    rdi,rbx
  422956:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42295b:	mov    rsi,QWORD PTR [rbx+0x28]
  42295f:	jmp    422812 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  422964:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42296f:	nop

0000000000422970 <flatcc_json_printer_int32_enum_field@@Base>:
  422970:	push   r15
  422972:	push   r14
  422974:	lea    eax,[rdx+rdx*1+0x4]
  422978:	push   r13
  42297a:	push   r12
  42297c:	push   rbp
  42297d:	push   rbx
  42297e:	sub    rsp,0x8
  422982:	cmp    eax,DWORD PTR [rsi+0x10]
  422985:	mov    r12,QWORD PTR [rsp+0x40]
  42298a:	jl     4229a0 <flatcc_json_printer_int32_enum_field@@Base+0x30>
  42298c:	cmp    BYTE PTR [rdi+0x35],0x0
  422990:	je     422a98 <flatcc_json_printer_int32_enum_field@@Base+0x128>
  422996:	mov    r13d,r9d
  422999:	jmp    4229be <flatcc_json_printer_int32_enum_field@@Base+0x4e>
  42299b:	nop    DWORD PTR [rax+rax*1+0x0]
  4229a0:	mov    rdx,QWORD PTR [rsi+0x8]
  4229a4:	movzx  eax,WORD PTR [rdx+rax*1]
  4229a8:	test   ax,ax
  4229ab:	je     42298c <flatcc_json_printer_int32_enum_field@@Base+0x1c>
  4229ad:	add    rax,QWORD PTR [rsi]
  4229b0:	je     42298c <flatcc_json_printer_int32_enum_field@@Base+0x1c>
  4229b2:	mov    r13d,DWORD PTR [rax]
  4229b5:	cmp    r9d,r13d
  4229b8:	je     422ae8 <flatcc_json_printer_int32_enum_field@@Base+0x178>
  4229be:	mov    eax,DWORD PTR [rsi+0x18]
  4229c1:	lea    edx,[rax+0x1]
  4229c4:	test   eax,eax
  4229c6:	mov    DWORD PTR [rsi+0x18],edx
  4229c9:	je     4229da <flatcc_json_printer_int32_enum_field@@Base+0x6a>
  4229cb:	mov    rax,QWORD PTR [rdi+0x28]
  4229cf:	lea    rdx,[rax+0x1]
  4229d3:	mov    QWORD PTR [rdi+0x28],rdx
  4229d7:	mov    BYTE PTR [rax],0x2c
  4229da:	cmp    BYTE PTR [rdi+0x31],0x0
  4229de:	mov    r15,rcx
  4229e1:	mov    rbx,rdi
  4229e4:	movsxd rbp,r8d
  4229e7:	jne    422af8 <flatcc_json_printer_int32_enum_field@@Base+0x188>
  4229ed:	mov    rsi,QWORD PTR [rdi+0x28]
  4229f1:	cmp    rsi,QWORD PTR [rdi+0x20]
  4229f5:	jb     422a00 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  4229f7:	xor    esi,esi
  4229f9:	call   QWORD PTR [rdi+0x48]
  4229fc:	mov    rsi,QWORD PTR [rbx+0x28]
  422a00:	mov    BYTE PTR [rsi],0x22
  422a03:	xor    edi,edi
  422a05:	cmp    BYTE PTR [rbx+0x32],0x0
  422a09:	mov    rdx,rbp
  422a0c:	mov    rsi,r15
  422a0f:	sete   dil
  422a13:	add    rdi,QWORD PTR [rbx+0x28]
  422a17:	lea    rax,[rdi+rbp*1]
  422a1b:	cmp    QWORD PTR [rbx+0x20],rax
  422a1f:	mov    QWORD PTR [rbx+0x28],rdi
  422a23:	ja     422ab0 <flatcc_json_printer_int32_enum_field@@Base+0x140>
  422a29:	mov    rdi,rbx
  422a2c:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422a31:	mov    rbp,QWORD PTR [rbx+0x28]
  422a35:	mov    BYTE PTR [rbp+0x0],0x22
  422a39:	xor    eax,eax
  422a3b:	cmp    BYTE PTR [rbx+0x32],0x0
  422a3f:	sete   al
  422a42:	add    rax,QWORD PTR [rbx+0x28]
  422a46:	xor    esi,esi
  422a48:	lea    rdx,[rax+0x1]
  422a4c:	mov    QWORD PTR [rbx+0x28],rdx
  422a50:	mov    BYTE PTR [rax],0x3a
  422a53:	mov    rax,QWORD PTR [rbx+0x28]
  422a57:	mov    BYTE PTR [rax],0x20
  422a5a:	cmp    BYTE PTR [rbx+0x31],0x0
  422a5e:	setne  sil
  422a62:	add    rsi,QWORD PTR [rbx+0x28]
  422a66:	cmp    BYTE PTR [rbx+0x33],0x0
  422a6a:	mov    QWORD PTR [rbx+0x28],rsi
  422a6e:	je     422ac8 <flatcc_json_printer_int32_enum_field@@Base+0x158>
  422a70:	mov    r10d,r13d
  422a73:	shr    r10d,0x1f
  422a77:	test   r13d,r13d
  422a7a:	jns    422a86 <flatcc_json_printer_int32_enum_field@@Base+0x116>
  422a7c:	mov    BYTE PTR [rsi],0x2d
  422a7f:	neg    r13d
  422a82:	add    rsi,0x1
  422a86:	mov    edi,r13d
  422a89:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  422a8e:	add    r10d,eax
  422a91:	movsxd r10,r10d
  422a94:	add    QWORD PTR [rbx+0x28],r10
  422a98:	add    rsp,0x8
  422a9c:	pop    rbx
  422a9d:	pop    rbp
  422a9e:	pop    r12
  422aa0:	pop    r13
  422aa2:	pop    r14
  422aa4:	pop    r15
  422aa6:	ret    
  422aa7:	nop    WORD PTR [rax+rax*1+0x0]
  422ab0:	call   4050e0 <memcpy@plt>
  422ab5:	add    rbp,QWORD PTR [rbx+0x28]
  422ab9:	mov    QWORD PTR [rbx+0x28],rbp
  422abd:	jmp    422a35 <flatcc_json_printer_int32_enum_field@@Base+0xc5>
  422ac2:	nop    WORD PTR [rax+rax*1+0x0]
  422ac8:	add    rsp,0x8
  422acc:	mov    esi,r13d
  422acf:	mov    rdi,rbx
  422ad2:	mov    rax,r12
  422ad5:	pop    rbx
  422ad6:	pop    rbp
  422ad7:	pop    r12
  422ad9:	pop    r13
  422adb:	pop    r14
  422add:	pop    r15
  422adf:	jmp    rax
  422ae1:	nop    DWORD PTR [rax+0x0]
  422ae8:	cmp    BYTE PTR [rdi+0x34],0x0
  422aec:	je     4229be <flatcc_json_printer_int32_enum_field@@Base+0x4e>
  422af2:	jmp    422a98 <flatcc_json_printer_int32_enum_field@@Base+0x128>
  422af4:	nop    DWORD PTR [rax+0x0]
  422af8:	mov    rax,QWORD PTR [rdi+0x28]
  422afc:	lea    rdx,[rax+0x1]
  422b00:	mov    QWORD PTR [rdi+0x28],rdx
  422b04:	mov    BYTE PTR [rax],0xa
  422b07:	movzx  esi,BYTE PTR [rdi+0x31]
  422b0b:	imul   esi,DWORD PTR [rdi+0x38]
  422b0f:	mov    rdi,QWORD PTR [rdi+0x28]
  422b13:	movsxd r14,esi
  422b16:	lea    rax,[rdi+r14*1]
  422b1a:	cmp    QWORD PTR [rbx+0x20],rax
  422b1e:	jb     422b40 <flatcc_json_printer_int32_enum_field@@Base+0x1d0>
  422b20:	mov    esi,0x20
  422b25:	mov    rdx,r14
  422b28:	call   405090 <memset@plt>
  422b2d:	mov    rsi,r14
  422b30:	add    rsi,QWORD PTR [rbx+0x28]
  422b34:	mov    QWORD PTR [rbx+0x28],rsi
  422b38:	jmp    422a00 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  422b3d:	nop    DWORD PTR [rax]
  422b40:	mov    rsi,r14
  422b43:	mov    rdi,rbx
  422b46:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422b4b:	mov    rsi,QWORD PTR [rbx+0x28]
  422b4f:	jmp    422a00 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  422b54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422b5f:	nop

0000000000422b60 <flatcc_json_printer_int64_enum_field@@Base>:
  422b60:	push   r15
  422b62:	push   r14
  422b64:	lea    eax,[rdx+rdx*1+0x4]
  422b68:	push   r13
  422b6a:	push   r12
  422b6c:	push   rbp
  422b6d:	push   rbx
  422b6e:	sub    rsp,0x8
  422b72:	cmp    eax,DWORD PTR [rsi+0x10]
  422b75:	mov    r12,QWORD PTR [rsp+0x40]
  422b7a:	jl     422b90 <flatcc_json_printer_int64_enum_field@@Base+0x30>
  422b7c:	cmp    BYTE PTR [rdi+0x35],0x0
  422b80:	je     422c86 <flatcc_json_printer_int64_enum_field@@Base+0x126>
  422b86:	mov    r13,r9
  422b89:	jmp    422bae <flatcc_json_printer_int64_enum_field@@Base+0x4e>
  422b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  422b90:	mov    rdx,QWORD PTR [rsi+0x8]
  422b94:	movzx  eax,WORD PTR [rdx+rax*1]
  422b98:	test   ax,ax
  422b9b:	je     422b7c <flatcc_json_printer_int64_enum_field@@Base+0x1c>
  422b9d:	add    rax,QWORD PTR [rsi]
  422ba0:	je     422b7c <flatcc_json_printer_int64_enum_field@@Base+0x1c>
  422ba2:	mov    r13,QWORD PTR [rax]
  422ba5:	cmp    r9,r13
  422ba8:	je     422cd0 <flatcc_json_printer_int64_enum_field@@Base+0x170>
  422bae:	mov    eax,DWORD PTR [rsi+0x18]
  422bb1:	lea    edx,[rax+0x1]
  422bb4:	test   eax,eax
  422bb6:	mov    DWORD PTR [rsi+0x18],edx
  422bb9:	je     422bca <flatcc_json_printer_int64_enum_field@@Base+0x6a>
  422bbb:	mov    rax,QWORD PTR [rdi+0x28]
  422bbf:	lea    rdx,[rax+0x1]
  422bc3:	mov    QWORD PTR [rdi+0x28],rdx
  422bc7:	mov    BYTE PTR [rax],0x2c
  422bca:	cmp    BYTE PTR [rdi+0x31],0x0
  422bce:	mov    r15,rcx
  422bd1:	mov    rbx,rdi
  422bd4:	movsxd rbp,r8d
  422bd7:	jne    422ce0 <flatcc_json_printer_int64_enum_field@@Base+0x180>
  422bdd:	mov    rsi,QWORD PTR [rdi+0x28]
  422be1:	cmp    rsi,QWORD PTR [rdi+0x20]
  422be5:	jb     422bf0 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  422be7:	xor    esi,esi
  422be9:	call   QWORD PTR [rdi+0x48]
  422bec:	mov    rsi,QWORD PTR [rbx+0x28]
  422bf0:	mov    BYTE PTR [rsi],0x22
  422bf3:	xor    edi,edi
  422bf5:	cmp    BYTE PTR [rbx+0x32],0x0
  422bf9:	mov    rdx,rbp
  422bfc:	mov    rsi,r15
  422bff:	sete   dil
  422c03:	add    rdi,QWORD PTR [rbx+0x28]
  422c07:	lea    rax,[rdi+rbp*1]
  422c0b:	cmp    QWORD PTR [rbx+0x20],rax
  422c0f:	mov    QWORD PTR [rbx+0x28],rdi
  422c13:	ja     422c98 <flatcc_json_printer_int64_enum_field@@Base+0x138>
  422c19:	mov    rdi,rbx
  422c1c:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422c21:	mov    rbp,QWORD PTR [rbx+0x28]
  422c25:	mov    BYTE PTR [rbp+0x0],0x22
  422c29:	xor    eax,eax
  422c2b:	cmp    BYTE PTR [rbx+0x32],0x0
  422c2f:	sete   al
  422c32:	add    rax,QWORD PTR [rbx+0x28]
  422c36:	xor    esi,esi
  422c38:	lea    rdx,[rax+0x1]
  422c3c:	mov    QWORD PTR [rbx+0x28],rdx
  422c40:	mov    BYTE PTR [rax],0x3a
  422c43:	mov    rax,QWORD PTR [rbx+0x28]
  422c47:	mov    BYTE PTR [rax],0x20
  422c4a:	cmp    BYTE PTR [rbx+0x31],0x0
  422c4e:	setne  sil
  422c52:	add    rsi,QWORD PTR [rbx+0x28]
  422c56:	cmp    BYTE PTR [rbx+0x33],0x0
  422c5a:	mov    QWORD PTR [rbx+0x28],rsi
  422c5e:	je     422cb0 <flatcc_json_printer_int64_enum_field@@Base+0x150>
  422c60:	mov    rbp,r13
  422c63:	shr    rbp,0x3f
  422c67:	test   r13,r13
  422c6a:	jns    422c76 <flatcc_json_printer_int64_enum_field@@Base+0x116>
  422c6c:	mov    BYTE PTR [rsi],0x2d
  422c6f:	neg    r13
  422c72:	add    rsi,0x1
  422c76:	mov    rdi,r13
  422c79:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  422c7e:	add    eax,ebp
  422c80:	cdqe   
  422c82:	add    QWORD PTR [rbx+0x28],rax
  422c86:	add    rsp,0x8
  422c8a:	pop    rbx
  422c8b:	pop    rbp
  422c8c:	pop    r12
  422c8e:	pop    r13
  422c90:	pop    r14
  422c92:	pop    r15
  422c94:	ret    
  422c95:	nop    DWORD PTR [rax]
  422c98:	call   4050e0 <memcpy@plt>
  422c9d:	add    rbp,QWORD PTR [rbx+0x28]
  422ca1:	mov    QWORD PTR [rbx+0x28],rbp
  422ca5:	jmp    422c25 <flatcc_json_printer_int64_enum_field@@Base+0xc5>
  422caa:	nop    WORD PTR [rax+rax*1+0x0]
  422cb0:	add    rsp,0x8
  422cb4:	mov    rsi,r13
  422cb7:	mov    rdi,rbx
  422cba:	mov    rax,r12
  422cbd:	pop    rbx
  422cbe:	pop    rbp
  422cbf:	pop    r12
  422cc1:	pop    r13
  422cc3:	pop    r14
  422cc5:	pop    r15
  422cc7:	jmp    rax
  422cc9:	nop    DWORD PTR [rax+0x0]
  422cd0:	cmp    BYTE PTR [rdi+0x34],0x0
  422cd4:	je     422bae <flatcc_json_printer_int64_enum_field@@Base+0x4e>
  422cda:	jmp    422c86 <flatcc_json_printer_int64_enum_field@@Base+0x126>
  422cdc:	nop    DWORD PTR [rax+0x0]
  422ce0:	mov    rax,QWORD PTR [rdi+0x28]
  422ce4:	lea    rdx,[rax+0x1]
  422ce8:	mov    QWORD PTR [rdi+0x28],rdx
  422cec:	mov    BYTE PTR [rax],0xa
  422cef:	movzx  esi,BYTE PTR [rdi+0x31]
  422cf3:	imul   esi,DWORD PTR [rdi+0x38]
  422cf7:	mov    rdi,QWORD PTR [rdi+0x28]
  422cfb:	movsxd r14,esi
  422cfe:	lea    rax,[rdi+r14*1]
  422d02:	cmp    QWORD PTR [rbx+0x20],rax
  422d06:	jb     422d28 <flatcc_json_printer_int64_enum_field@@Base+0x1c8>
  422d08:	mov    esi,0x20
  422d0d:	mov    rdx,r14
  422d10:	call   405090 <memset@plt>
  422d15:	mov    rsi,r14
  422d18:	add    rsi,QWORD PTR [rbx+0x28]
  422d1c:	mov    QWORD PTR [rbx+0x28],rsi
  422d20:	jmp    422bf0 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  422d25:	nop    DWORD PTR [rax]
  422d28:	mov    rsi,r14
  422d2b:	mov    rdi,rbx
  422d2e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422d33:	mov    rsi,QWORD PTR [rbx+0x28]
  422d37:	jmp    422bf0 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  422d3c:	nop    DWORD PTR [rax+0x0]

0000000000422d40 <flatcc_json_printer_bool_enum_field@@Base>:
  422d40:	push   r15
  422d42:	push   r14
  422d44:	lea    eax,[rdx+rdx*1+0x4]
  422d48:	push   r13
  422d4a:	push   r12
  422d4c:	push   rbp
  422d4d:	push   rbx
  422d4e:	sub    rsp,0x8
  422d52:	cmp    eax,DWORD PTR [rsi+0x10]
  422d55:	mov    r12,QWORD PTR [rsp+0x40]
  422d5a:	jl     422d70 <flatcc_json_printer_bool_enum_field@@Base+0x30>
  422d5c:	cmp    BYTE PTR [rdi+0x35],0x0
  422d60:	je     422e6f <flatcc_json_printer_bool_enum_field@@Base+0x12f>
  422d66:	mov    r13d,r9d
  422d69:	jmp    422d8f <flatcc_json_printer_bool_enum_field@@Base+0x4f>
  422d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d70:	mov    rdx,QWORD PTR [rsi+0x8]
  422d74:	movzx  eax,WORD PTR [rdx+rax*1]
  422d78:	test   ax,ax
  422d7b:	je     422d5c <flatcc_json_printer_bool_enum_field@@Base+0x1c>
  422d7d:	add    rax,QWORD PTR [rsi]
  422d80:	je     422d5c <flatcc_json_printer_bool_enum_field@@Base+0x1c>
  422d82:	movzx  r13d,BYTE PTR [rax]
  422d86:	cmp    r9b,r13b
  422d89:	je     422e98 <flatcc_json_printer_bool_enum_field@@Base+0x158>
  422d8f:	mov    eax,DWORD PTR [rsi+0x18]
  422d92:	lea    edx,[rax+0x1]
  422d95:	test   eax,eax
  422d97:	mov    DWORD PTR [rsi+0x18],edx
  422d9a:	je     422dab <flatcc_json_printer_bool_enum_field@@Base+0x6b>
  422d9c:	mov    rax,QWORD PTR [rdi+0x28]
  422da0:	lea    rdx,[rax+0x1]
  422da4:	mov    QWORD PTR [rdi+0x28],rdx
  422da8:	mov    BYTE PTR [rax],0x2c
  422dab:	cmp    BYTE PTR [rdi+0x31],0x0
  422daf:	mov    r15,rcx
  422db2:	mov    rbx,rdi
  422db5:	movsxd rbp,r8d
  422db8:	jne    422ea8 <flatcc_json_printer_bool_enum_field@@Base+0x168>
  422dbe:	mov    rsi,QWORD PTR [rdi+0x28]
  422dc2:	cmp    rsi,QWORD PTR [rdi+0x20]
  422dc6:	jb     422dd1 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  422dc8:	xor    esi,esi
  422dca:	call   QWORD PTR [rdi+0x48]
  422dcd:	mov    rsi,QWORD PTR [rbx+0x28]
  422dd1:	mov    BYTE PTR [rsi],0x22
  422dd4:	xor    edi,edi
  422dd6:	cmp    BYTE PTR [rbx+0x32],0x0
  422dda:	mov    rdx,rbp
  422ddd:	mov    rsi,r15
  422de0:	sete   dil
  422de4:	add    rdi,QWORD PTR [rbx+0x28]
  422de8:	lea    rax,[rdi+rbp*1]
  422dec:	cmp    QWORD PTR [rbx+0x20],rax
  422df0:	mov    QWORD PTR [rbx+0x28],rdi
  422df4:	ja     422e80 <flatcc_json_printer_bool_enum_field@@Base+0x140>
  422dfa:	mov    rdi,rbx
  422dfd:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422e02:	mov    rbp,QWORD PTR [rbx+0x28]
  422e06:	mov    BYTE PTR [rbp+0x0],0x22
  422e0a:	xor    eax,eax
  422e0c:	cmp    BYTE PTR [rbx+0x32],0x0
  422e10:	sete   al
  422e13:	add    rax,QWORD PTR [rbx+0x28]
  422e17:	xor    esi,esi
  422e19:	lea    rdx,[rax+0x1]
  422e1d:	mov    QWORD PTR [rbx+0x28],rdx
  422e21:	mov    BYTE PTR [rax],0x3a
  422e24:	mov    rax,QWORD PTR [rbx+0x28]
  422e28:	mov    BYTE PTR [rax],0x20
  422e2b:	cmp    BYTE PTR [rbx+0x31],0x0
  422e2f:	setne  sil
  422e33:	add    rsi,QWORD PTR [rbx+0x28]
  422e37:	cmp    BYTE PTR [rbx+0x33],0x0
  422e3b:	mov    QWORD PTR [rbx+0x28],rsi
  422e3f:	jne    422e60 <flatcc_json_printer_bool_enum_field@@Base+0x120>
  422e41:	add    rsp,0x8
  422e45:	movzx  esi,r13b
  422e49:	mov    rdi,rbx
  422e4c:	mov    rax,r12
  422e4f:	pop    rbx
  422e50:	pop    rbp
  422e51:	pop    r12
  422e53:	pop    r13
  422e55:	pop    r14
  422e57:	pop    r15
  422e59:	jmp    rax
  422e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  422e60:	movzx  edi,r13b
  422e64:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  422e69:	cdqe   
  422e6b:	add    QWORD PTR [rbx+0x28],rax
  422e6f:	add    rsp,0x8
  422e73:	pop    rbx
  422e74:	pop    rbp
  422e75:	pop    r12
  422e77:	pop    r13
  422e79:	pop    r14
  422e7b:	pop    r15
  422e7d:	ret    
  422e7e:	xchg   ax,ax
  422e80:	call   4050e0 <memcpy@plt>
  422e85:	add    rbp,QWORD PTR [rbx+0x28]
  422e89:	mov    QWORD PTR [rbx+0x28],rbp
  422e8d:	jmp    422e06 <flatcc_json_printer_bool_enum_field@@Base+0xc6>
  422e92:	nop    WORD PTR [rax+rax*1+0x0]
  422e98:	cmp    BYTE PTR [rdi+0x34],0x0
  422e9c:	je     422d8f <flatcc_json_printer_bool_enum_field@@Base+0x4f>
  422ea2:	jmp    422e6f <flatcc_json_printer_bool_enum_field@@Base+0x12f>
  422ea4:	nop    DWORD PTR [rax+0x0]
  422ea8:	mov    rax,QWORD PTR [rdi+0x28]
  422eac:	lea    rdx,[rax+0x1]
  422eb0:	mov    QWORD PTR [rdi+0x28],rdx
  422eb4:	mov    BYTE PTR [rax],0xa
  422eb7:	movzx  esi,BYTE PTR [rdi+0x31]
  422ebb:	imul   esi,DWORD PTR [rdi+0x38]
  422ebf:	mov    rdi,QWORD PTR [rdi+0x28]
  422ec3:	movsxd r14,esi
  422ec6:	lea    rax,[rdi+r14*1]
  422eca:	cmp    QWORD PTR [rbx+0x20],rax
  422ece:	jb     422ef0 <flatcc_json_printer_bool_enum_field@@Base+0x1b0>
  422ed0:	mov    esi,0x20
  422ed5:	mov    rdx,r14
  422ed8:	call   405090 <memset@plt>
  422edd:	mov    rsi,r14
  422ee0:	add    rsi,QWORD PTR [rbx+0x28]
  422ee4:	mov    QWORD PTR [rbx+0x28],rsi
  422ee8:	jmp    422dd1 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  422eed:	nop    DWORD PTR [rax]
  422ef0:	mov    rsi,r14
  422ef3:	mov    rdi,rbx
  422ef6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422efb:	mov    rsi,QWORD PTR [rbx+0x28]
  422eff:	jmp    422dd1 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  422f04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422f0f:	nop

0000000000422f10 <flatcc_json_printer_uint8_struct_field@@Base>:
  422f10:	test   esi,esi
  422f12:	push   r14
  422f14:	mov    r14,r8
  422f17:	push   r13
  422f19:	push   r12
  422f1b:	push   rbp
  422f1c:	push   rbx
  422f1d:	mov    rbx,rdi
  422f20:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  422f25:	je     422f36 <flatcc_json_printer_uint8_struct_field@@Base+0x26>
  422f27:	mov    rax,QWORD PTR [rdi+0x28]
  422f2b:	lea    rdx,[rax+0x1]
  422f2f:	mov    QWORD PTR [rdi+0x28],rdx
  422f33:	mov    BYTE PTR [rax],0x2c
  422f36:	cmp    BYTE PTR [rbx+0x31],0x0
  422f3a:	movsxd rbp,r9d
  422f3d:	jne    423000 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
  422f43:	mov    rsi,QWORD PTR [rbx+0x28]
  422f47:	cmp    rsi,QWORD PTR [rbx+0x20]
  422f4b:	jae    422fd0 <flatcc_json_printer_uint8_struct_field@@Base+0xc0>
  422f51:	mov    BYTE PTR [rsi],0x22
  422f54:	xor    edi,edi
  422f56:	cmp    BYTE PTR [rbx+0x32],0x0
  422f5a:	mov    rdx,rbp
  422f5d:	mov    rsi,r14
  422f60:	sete   dil
  422f64:	add    rdi,QWORD PTR [rbx+0x28]
  422f68:	lea    rax,[rdi+rbp*1]
  422f6c:	cmp    QWORD PTR [rbx+0x20],rax
  422f70:	mov    QWORD PTR [rbx+0x28],rdi
  422f74:	ja     422fe8 <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
  422f76:	mov    rdi,rbx
  422f79:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422f7e:	mov    rbp,QWORD PTR [rbx+0x28]
  422f82:	mov    BYTE PTR [rbp+0x0],0x22
  422f86:	xor    eax,eax
  422f88:	cmp    BYTE PTR [rbx+0x32],0x0
  422f8c:	movzx  edi,r12b
  422f90:	sete   al
  422f93:	add    rax,QWORD PTR [rbx+0x28]
  422f97:	xor    esi,esi
  422f99:	lea    rdx,[rax+0x1]
  422f9d:	mov    QWORD PTR [rbx+0x28],rdx
  422fa1:	mov    BYTE PTR [rax],0x3a
  422fa4:	mov    rax,QWORD PTR [rbx+0x28]
  422fa8:	mov    BYTE PTR [rax],0x20
  422fab:	cmp    BYTE PTR [rbx+0x31],0x0
  422faf:	setne  sil
  422fb3:	add    rsi,QWORD PTR [rbx+0x28]
  422fb7:	mov    QWORD PTR [rbx+0x28],rsi
  422fbb:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  422fc0:	cdqe   
  422fc2:	add    QWORD PTR [rbx+0x28],rax
  422fc6:	pop    rbx
  422fc7:	pop    rbp
  422fc8:	pop    r12
  422fca:	pop    r13
  422fcc:	pop    r14
  422fce:	ret    
  422fcf:	nop
  422fd0:	xor    esi,esi
  422fd2:	mov    rdi,rbx
  422fd5:	call   QWORD PTR [rbx+0x48]
  422fd8:	mov    rsi,QWORD PTR [rbx+0x28]
  422fdc:	jmp    422f51 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  422fe1:	nop    DWORD PTR [rax+0x0]
  422fe8:	call   4050e0 <memcpy@plt>
  422fed:	add    rbp,QWORD PTR [rbx+0x28]
  422ff1:	mov    QWORD PTR [rbx+0x28],rbp
  422ff5:	jmp    422f82 <flatcc_json_printer_uint8_struct_field@@Base+0x72>
  422ff7:	nop    WORD PTR [rax+rax*1+0x0]
  423000:	mov    rax,QWORD PTR [rbx+0x28]
  423004:	lea    rdx,[rax+0x1]
  423008:	mov    QWORD PTR [rbx+0x28],rdx
  42300c:	mov    BYTE PTR [rax],0xa
  42300f:	movzx  esi,BYTE PTR [rbx+0x31]
  423013:	mov    rdi,QWORD PTR [rbx+0x28]
  423017:	imul   esi,DWORD PTR [rbx+0x38]
  42301b:	movsxd r13,esi
  42301e:	lea    rax,[rdi+r13*1]
  423022:	cmp    QWORD PTR [rbx+0x20],rax
  423026:	jb     423048 <flatcc_json_printer_uint8_struct_field@@Base+0x138>
  423028:	mov    esi,0x20
  42302d:	mov    rdx,r13
  423030:	call   405090 <memset@plt>
  423035:	mov    rsi,r13
  423038:	add    rsi,QWORD PTR [rbx+0x28]
  42303c:	mov    QWORD PTR [rbx+0x28],rsi
  423040:	jmp    422f51 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  423045:	nop    DWORD PTR [rax]
  423048:	mov    rsi,r13
  42304b:	mov    rdi,rbx
  42304e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423053:	mov    rsi,QWORD PTR [rbx+0x28]
  423057:	jmp    422f51 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  42305c:	nop    DWORD PTR [rax+0x0]

0000000000423060 <flatcc_json_printer_uint16_struct_field@@Base>:
  423060:	test   esi,esi
  423062:	push   r14
  423064:	mov    r14,r8
  423067:	push   r13
  423069:	push   r12
  42306b:	push   rbp
  42306c:	push   rbx
  42306d:	mov    rbx,rdi
  423070:	movzx  r12d,WORD PTR [rdx+rcx*1]
  423075:	je     423086 <flatcc_json_printer_uint16_struct_field@@Base+0x26>
  423077:	mov    rax,QWORD PTR [rdi+0x28]
  42307b:	lea    rdx,[rax+0x1]
  42307f:	mov    QWORD PTR [rdi+0x28],rdx
  423083:	mov    BYTE PTR [rax],0x2c
  423086:	cmp    BYTE PTR [rbx+0x31],0x0
  42308a:	movsxd rbp,r9d
  42308d:	jne    423150 <flatcc_json_printer_uint16_struct_field@@Base+0xf0>
  423093:	mov    rsi,QWORD PTR [rbx+0x28]
  423097:	cmp    rsi,QWORD PTR [rbx+0x20]
  42309b:	jae    423120 <flatcc_json_printer_uint16_struct_field@@Base+0xc0>
  4230a1:	mov    BYTE PTR [rsi],0x22
  4230a4:	xor    edi,edi
  4230a6:	cmp    BYTE PTR [rbx+0x32],0x0
  4230aa:	mov    rdx,rbp
  4230ad:	mov    rsi,r14
  4230b0:	sete   dil
  4230b4:	add    rdi,QWORD PTR [rbx+0x28]
  4230b8:	lea    rax,[rdi+rbp*1]
  4230bc:	cmp    QWORD PTR [rbx+0x20],rax
  4230c0:	mov    QWORD PTR [rbx+0x28],rdi
  4230c4:	ja     423138 <flatcc_json_printer_uint16_struct_field@@Base+0xd8>
  4230c6:	mov    rdi,rbx
  4230c9:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4230ce:	mov    rbp,QWORD PTR [rbx+0x28]
  4230d2:	mov    BYTE PTR [rbp+0x0],0x22
  4230d6:	xor    eax,eax
  4230d8:	cmp    BYTE PTR [rbx+0x32],0x0
  4230dc:	movzx  edi,r12w
  4230e0:	sete   al
  4230e3:	add    rax,QWORD PTR [rbx+0x28]
  4230e7:	xor    esi,esi
  4230e9:	lea    rdx,[rax+0x1]
  4230ed:	mov    QWORD PTR [rbx+0x28],rdx
  4230f1:	mov    BYTE PTR [rax],0x3a
  4230f4:	mov    rax,QWORD PTR [rbx+0x28]
  4230f8:	mov    BYTE PTR [rax],0x20
  4230fb:	cmp    BYTE PTR [rbx+0x31],0x0
  4230ff:	setne  sil
  423103:	add    rsi,QWORD PTR [rbx+0x28]
  423107:	mov    QWORD PTR [rbx+0x28],rsi
  42310b:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  423110:	cdqe   
  423112:	add    QWORD PTR [rbx+0x28],rax
  423116:	pop    rbx
  423117:	pop    rbp
  423118:	pop    r12
  42311a:	pop    r13
  42311c:	pop    r14
  42311e:	ret    
  42311f:	nop
  423120:	xor    esi,esi
  423122:	mov    rdi,rbx
  423125:	call   QWORD PTR [rbx+0x48]
  423128:	mov    rsi,QWORD PTR [rbx+0x28]
  42312c:	jmp    4230a1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  423131:	nop    DWORD PTR [rax+0x0]
  423138:	call   4050e0 <memcpy@plt>
  42313d:	add    rbp,QWORD PTR [rbx+0x28]
  423141:	mov    QWORD PTR [rbx+0x28],rbp
  423145:	jmp    4230d2 <flatcc_json_printer_uint16_struct_field@@Base+0x72>
  423147:	nop    WORD PTR [rax+rax*1+0x0]
  423150:	mov    rax,QWORD PTR [rbx+0x28]
  423154:	lea    rdx,[rax+0x1]
  423158:	mov    QWORD PTR [rbx+0x28],rdx
  42315c:	mov    BYTE PTR [rax],0xa
  42315f:	movzx  esi,BYTE PTR [rbx+0x31]
  423163:	mov    rdi,QWORD PTR [rbx+0x28]
  423167:	imul   esi,DWORD PTR [rbx+0x38]
  42316b:	movsxd r13,esi
  42316e:	lea    rax,[rdi+r13*1]
  423172:	cmp    QWORD PTR [rbx+0x20],rax
  423176:	jb     423198 <flatcc_json_printer_uint16_struct_field@@Base+0x138>
  423178:	mov    esi,0x20
  42317d:	mov    rdx,r13
  423180:	call   405090 <memset@plt>
  423185:	mov    rsi,r13
  423188:	add    rsi,QWORD PTR [rbx+0x28]
  42318c:	mov    QWORD PTR [rbx+0x28],rsi
  423190:	jmp    4230a1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  423195:	nop    DWORD PTR [rax]
  423198:	mov    rsi,r13
  42319b:	mov    rdi,rbx
  42319e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4231a3:	mov    rsi,QWORD PTR [rbx+0x28]
  4231a7:	jmp    4230a1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  4231ac:	nop    DWORD PTR [rax+0x0]

00000000004231b0 <flatcc_json_printer_uint32_struct_field@@Base>:
  4231b0:	test   esi,esi
  4231b2:	push   r14
  4231b4:	mov    r14,r8
  4231b7:	push   r13
  4231b9:	push   r12
  4231bb:	push   rbp
  4231bc:	push   rbx
  4231bd:	mov    rbx,rdi
  4231c0:	mov    r12d,DWORD PTR [rdx+rcx*1]
  4231c4:	je     4231d5 <flatcc_json_printer_uint32_struct_field@@Base+0x25>
  4231c6:	mov    rax,QWORD PTR [rdi+0x28]
  4231ca:	lea    rdx,[rax+0x1]
  4231ce:	mov    QWORD PTR [rdi+0x28],rdx
  4231d2:	mov    BYTE PTR [rax],0x2c
  4231d5:	cmp    BYTE PTR [rbx+0x31],0x0
  4231d9:	movsxd rbp,r9d
  4231dc:	jne    4232a0 <flatcc_json_printer_uint32_struct_field@@Base+0xf0>
  4231e2:	mov    rsi,QWORD PTR [rbx+0x28]
  4231e6:	cmp    rsi,QWORD PTR [rbx+0x20]
  4231ea:	jae    423270 <flatcc_json_printer_uint32_struct_field@@Base+0xc0>
  4231f0:	mov    BYTE PTR [rsi],0x22
  4231f3:	xor    edi,edi
  4231f5:	cmp    BYTE PTR [rbx+0x32],0x0
  4231f9:	mov    rdx,rbp
  4231fc:	mov    rsi,r14
  4231ff:	sete   dil
  423203:	add    rdi,QWORD PTR [rbx+0x28]
  423207:	lea    rax,[rdi+rbp*1]
  42320b:	cmp    QWORD PTR [rbx+0x20],rax
  42320f:	mov    QWORD PTR [rbx+0x28],rdi
  423213:	ja     423288 <flatcc_json_printer_uint32_struct_field@@Base+0xd8>
  423215:	mov    rdi,rbx
  423218:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42321d:	mov    rbp,QWORD PTR [rbx+0x28]
  423221:	mov    BYTE PTR [rbp+0x0],0x22
  423225:	xor    eax,eax
  423227:	cmp    BYTE PTR [rbx+0x32],0x0
  42322b:	mov    edi,r12d
  42322e:	sete   al
  423231:	add    rax,QWORD PTR [rbx+0x28]
  423235:	xor    esi,esi
  423237:	lea    rdx,[rax+0x1]
  42323b:	mov    QWORD PTR [rbx+0x28],rdx
  42323f:	mov    BYTE PTR [rax],0x3a
  423242:	mov    rax,QWORD PTR [rbx+0x28]
  423246:	mov    BYTE PTR [rax],0x20
  423249:	cmp    BYTE PTR [rbx+0x31],0x0
  42324d:	setne  sil
  423251:	add    rsi,QWORD PTR [rbx+0x28]
  423255:	mov    QWORD PTR [rbx+0x28],rsi
  423259:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42325e:	cdqe   
  423260:	add    QWORD PTR [rbx+0x28],rax
  423264:	pop    rbx
  423265:	pop    rbp
  423266:	pop    r12
  423268:	pop    r13
  42326a:	pop    r14
  42326c:	ret    
  42326d:	nop    DWORD PTR [rax]
  423270:	xor    esi,esi
  423272:	mov    rdi,rbx
  423275:	call   QWORD PTR [rbx+0x48]
  423278:	mov    rsi,QWORD PTR [rbx+0x28]
  42327c:	jmp    4231f0 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  423281:	nop    DWORD PTR [rax+0x0]
  423288:	call   4050e0 <memcpy@plt>
  42328d:	add    rbp,QWORD PTR [rbx+0x28]
  423291:	mov    QWORD PTR [rbx+0x28],rbp
  423295:	jmp    423221 <flatcc_json_printer_uint32_struct_field@@Base+0x71>
  423297:	nop    WORD PTR [rax+rax*1+0x0]
  4232a0:	mov    rax,QWORD PTR [rbx+0x28]
  4232a4:	lea    rdx,[rax+0x1]
  4232a8:	mov    QWORD PTR [rbx+0x28],rdx
  4232ac:	mov    BYTE PTR [rax],0xa
  4232af:	movzx  esi,BYTE PTR [rbx+0x31]
  4232b3:	mov    rdi,QWORD PTR [rbx+0x28]
  4232b7:	imul   esi,DWORD PTR [rbx+0x38]
  4232bb:	movsxd r13,esi
  4232be:	lea    rax,[rdi+r13*1]
  4232c2:	cmp    QWORD PTR [rbx+0x20],rax
  4232c6:	jb     4232e8 <flatcc_json_printer_uint32_struct_field@@Base+0x138>
  4232c8:	mov    esi,0x20
  4232cd:	mov    rdx,r13
  4232d0:	call   405090 <memset@plt>
  4232d5:	mov    rsi,r13
  4232d8:	add    rsi,QWORD PTR [rbx+0x28]
  4232dc:	mov    QWORD PTR [rbx+0x28],rsi
  4232e0:	jmp    4231f0 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  4232e5:	nop    DWORD PTR [rax]
  4232e8:	mov    rsi,r13
  4232eb:	mov    rdi,rbx
  4232ee:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4232f3:	mov    rsi,QWORD PTR [rbx+0x28]
  4232f7:	jmp    4231f0 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  4232fc:	nop    DWORD PTR [rax+0x0]

0000000000423300 <flatcc_json_printer_uint64_struct_field@@Base>:
  423300:	test   esi,esi
  423302:	push   r14
  423304:	mov    r14,r8
  423307:	push   r13
  423309:	push   r12
  42330b:	push   rbp
  42330c:	push   rbx
  42330d:	mov    rbx,rdi
  423310:	mov    r12,QWORD PTR [rdx+rcx*1]
  423314:	je     423325 <flatcc_json_printer_uint64_struct_field@@Base+0x25>
  423316:	mov    rax,QWORD PTR [rdi+0x28]
  42331a:	lea    rdx,[rax+0x1]
  42331e:	mov    QWORD PTR [rdi+0x28],rdx
  423322:	mov    BYTE PTR [rax],0x2c
  423325:	cmp    BYTE PTR [rbx+0x31],0x0
  423329:	movsxd rbp,r9d
  42332c:	jne    4233f0 <flatcc_json_printer_uint64_struct_field@@Base+0xf0>
  423332:	mov    rsi,QWORD PTR [rbx+0x28]
  423336:	cmp    rsi,QWORD PTR [rbx+0x20]
  42333a:	jae    4233c0 <flatcc_json_printer_uint64_struct_field@@Base+0xc0>
  423340:	mov    BYTE PTR [rsi],0x22
  423343:	xor    edi,edi
  423345:	cmp    BYTE PTR [rbx+0x32],0x0
  423349:	mov    rdx,rbp
  42334c:	mov    rsi,r14
  42334f:	sete   dil
  423353:	add    rdi,QWORD PTR [rbx+0x28]
  423357:	lea    rax,[rdi+rbp*1]
  42335b:	cmp    QWORD PTR [rbx+0x20],rax
  42335f:	mov    QWORD PTR [rbx+0x28],rdi
  423363:	ja     4233d8 <flatcc_json_printer_uint64_struct_field@@Base+0xd8>
  423365:	mov    rdi,rbx
  423368:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42336d:	mov    rbp,QWORD PTR [rbx+0x28]
  423371:	mov    BYTE PTR [rbp+0x0],0x22
  423375:	xor    eax,eax
  423377:	cmp    BYTE PTR [rbx+0x32],0x0
  42337b:	mov    rdi,r12
  42337e:	sete   al
  423381:	add    rax,QWORD PTR [rbx+0x28]
  423385:	xor    esi,esi
  423387:	lea    rdx,[rax+0x1]
  42338b:	mov    QWORD PTR [rbx+0x28],rdx
  42338f:	mov    BYTE PTR [rax],0x3a
  423392:	mov    rax,QWORD PTR [rbx+0x28]
  423396:	mov    BYTE PTR [rax],0x20
  423399:	cmp    BYTE PTR [rbx+0x31],0x0
  42339d:	setne  sil
  4233a1:	add    rsi,QWORD PTR [rbx+0x28]
  4233a5:	mov    QWORD PTR [rbx+0x28],rsi
  4233a9:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4233ae:	cdqe   
  4233b0:	add    QWORD PTR [rbx+0x28],rax
  4233b4:	pop    rbx
  4233b5:	pop    rbp
  4233b6:	pop    r12
  4233b8:	pop    r13
  4233ba:	pop    r14
  4233bc:	ret    
  4233bd:	nop    DWORD PTR [rax]
  4233c0:	xor    esi,esi
  4233c2:	mov    rdi,rbx
  4233c5:	call   QWORD PTR [rbx+0x48]
  4233c8:	mov    rsi,QWORD PTR [rbx+0x28]
  4233cc:	jmp    423340 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  4233d1:	nop    DWORD PTR [rax+0x0]
  4233d8:	call   4050e0 <memcpy@plt>
  4233dd:	add    rbp,QWORD PTR [rbx+0x28]
  4233e1:	mov    QWORD PTR [rbx+0x28],rbp
  4233e5:	jmp    423371 <flatcc_json_printer_uint64_struct_field@@Base+0x71>
  4233e7:	nop    WORD PTR [rax+rax*1+0x0]
  4233f0:	mov    rax,QWORD PTR [rbx+0x28]
  4233f4:	lea    rdx,[rax+0x1]
  4233f8:	mov    QWORD PTR [rbx+0x28],rdx
  4233fc:	mov    BYTE PTR [rax],0xa
  4233ff:	movzx  esi,BYTE PTR [rbx+0x31]
  423403:	mov    rdi,QWORD PTR [rbx+0x28]
  423407:	imul   esi,DWORD PTR [rbx+0x38]
  42340b:	movsxd r13,esi
  42340e:	lea    rax,[rdi+r13*1]
  423412:	cmp    QWORD PTR [rbx+0x20],rax
  423416:	jb     423438 <flatcc_json_printer_uint64_struct_field@@Base+0x138>
  423418:	mov    esi,0x20
  42341d:	mov    rdx,r13
  423420:	call   405090 <memset@plt>
  423425:	mov    rsi,r13
  423428:	add    rsi,QWORD PTR [rbx+0x28]
  42342c:	mov    QWORD PTR [rbx+0x28],rsi
  423430:	jmp    423340 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  423435:	nop    DWORD PTR [rax]
  423438:	mov    rsi,r13
  42343b:	mov    rdi,rbx
  42343e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423443:	mov    rsi,QWORD PTR [rbx+0x28]
  423447:	jmp    423340 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  42344c:	nop    DWORD PTR [rax+0x0]

0000000000423450 <flatcc_json_printer_int8_struct_field@@Base>:
  423450:	test   esi,esi
  423452:	push   r14
  423454:	mov    r14,r8
  423457:	push   r13
  423459:	push   r12
  42345b:	push   rbp
  42345c:	push   rbx
  42345d:	mov    rbx,rdi
  423460:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  423465:	je     423476 <flatcc_json_printer_int8_struct_field@@Base+0x26>
  423467:	mov    rax,QWORD PTR [rdi+0x28]
  42346b:	lea    rdx,[rax+0x1]
  42346f:	mov    QWORD PTR [rdi+0x28],rdx
  423473:	mov    BYTE PTR [rax],0x2c
  423476:	cmp    BYTE PTR [rbx+0x31],0x0
  42347a:	movsxd rbp,r9d
  42347d:	jne    423560 <flatcc_json_printer_int8_struct_field@@Base+0x110>
  423483:	mov    rsi,QWORD PTR [rbx+0x28]
  423487:	cmp    rsi,QWORD PTR [rbx+0x20]
  42348b:	jae    423530 <flatcc_json_printer_int8_struct_field@@Base+0xe0>
  423491:	mov    BYTE PTR [rsi],0x22
  423494:	xor    edi,edi
  423496:	cmp    BYTE PTR [rbx+0x32],0x0
  42349a:	mov    rdx,rbp
  42349d:	mov    rsi,r14
  4234a0:	sete   dil
  4234a4:	add    rdi,QWORD PTR [rbx+0x28]
  4234a8:	lea    rax,[rdi+rbp*1]
  4234ac:	cmp    QWORD PTR [rbx+0x20],rax
  4234b0:	mov    QWORD PTR [rbx+0x28],rdi
  4234b4:	ja     423548 <flatcc_json_printer_int8_struct_field@@Base+0xf8>
  4234ba:	mov    rdi,rbx
  4234bd:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4234c2:	mov    rbp,QWORD PTR [rbx+0x28]
  4234c6:	mov    BYTE PTR [rbp+0x0],0x22
  4234ca:	xor    eax,eax
  4234cc:	cmp    BYTE PTR [rbx+0x32],0x0
  4234d0:	movsx  r8d,r12b
  4234d4:	sete   al
  4234d7:	add    rax,QWORD PTR [rbx+0x28]
  4234db:	xor    esi,esi
  4234dd:	lea    rdx,[rax+0x1]
  4234e1:	mov    QWORD PTR [rbx+0x28],rdx
  4234e5:	mov    BYTE PTR [rax],0x3a
  4234e8:	mov    rax,QWORD PTR [rbx+0x28]
  4234ec:	mov    BYTE PTR [rax],0x20
  4234ef:	cmp    BYTE PTR [rbx+0x31],0x0
  4234f3:	setne  sil
  4234f7:	add    rsi,QWORD PTR [rbx+0x28]
  4234fb:	shr    r8d,0x1f
  4234ff:	test   r12b,r12b
  423502:	mov    QWORD PTR [rbx+0x28],rsi
  423506:	jns    423512 <flatcc_json_printer_int8_struct_field@@Base+0xc2>
  423508:	mov    BYTE PTR [rsi],0x2d
  42350b:	neg    r12d
  42350e:	add    rsi,0x1
  423512:	movzx  edi,r12b
  423516:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42351b:	add    r8d,eax
  42351e:	movsxd r8,r8d
  423521:	add    QWORD PTR [rbx+0x28],r8
  423525:	pop    rbx
  423526:	pop    rbp
  423527:	pop    r12
  423529:	pop    r13
  42352b:	pop    r14
  42352d:	ret    
  42352e:	xchg   ax,ax
  423530:	xor    esi,esi
  423532:	mov    rdi,rbx
  423535:	call   QWORD PTR [rbx+0x48]
  423538:	mov    rsi,QWORD PTR [rbx+0x28]
  42353c:	jmp    423491 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  423541:	nop    DWORD PTR [rax+0x0]
  423548:	call   4050e0 <memcpy@plt>
  42354d:	add    rbp,QWORD PTR [rbx+0x28]
  423551:	mov    QWORD PTR [rbx+0x28],rbp
  423555:	jmp    4234c6 <flatcc_json_printer_int8_struct_field@@Base+0x76>
  42355a:	nop    WORD PTR [rax+rax*1+0x0]
  423560:	mov    rax,QWORD PTR [rbx+0x28]
  423564:	lea    rdx,[rax+0x1]
  423568:	mov    QWORD PTR [rbx+0x28],rdx
  42356c:	mov    BYTE PTR [rax],0xa
  42356f:	movzx  esi,BYTE PTR [rbx+0x31]
  423573:	mov    rdi,QWORD PTR [rbx+0x28]
  423577:	imul   esi,DWORD PTR [rbx+0x38]
  42357b:	movsxd r13,esi
  42357e:	lea    rax,[rdi+r13*1]
  423582:	cmp    QWORD PTR [rbx+0x20],rax
  423586:	jb     4235a8 <flatcc_json_printer_int8_struct_field@@Base+0x158>
  423588:	mov    esi,0x20
  42358d:	mov    rdx,r13
  423590:	call   405090 <memset@plt>
  423595:	mov    rsi,r13
  423598:	add    rsi,QWORD PTR [rbx+0x28]
  42359c:	mov    QWORD PTR [rbx+0x28],rsi
  4235a0:	jmp    423491 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  4235a5:	nop    DWORD PTR [rax]
  4235a8:	mov    rsi,r13
  4235ab:	mov    rdi,rbx
  4235ae:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4235b3:	mov    rsi,QWORD PTR [rbx+0x28]
  4235b7:	jmp    423491 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  4235bc:	nop    DWORD PTR [rax+0x0]

00000000004235c0 <flatcc_json_printer_int16_struct_field@@Base>:
  4235c0:	test   esi,esi
  4235c2:	push   r14
  4235c4:	mov    r14,r8
  4235c7:	push   r13
  4235c9:	push   r12
  4235cb:	push   rbp
  4235cc:	push   rbx
  4235cd:	mov    rbx,rdi
  4235d0:	movzx  r12d,WORD PTR [rdx+rcx*1]
  4235d5:	je     4235e6 <flatcc_json_printer_int16_struct_field@@Base+0x26>
  4235d7:	mov    rax,QWORD PTR [rdi+0x28]
  4235db:	lea    rdx,[rax+0x1]
  4235df:	mov    QWORD PTR [rdi+0x28],rdx
  4235e3:	mov    BYTE PTR [rax],0x2c
  4235e6:	cmp    BYTE PTR [rbx+0x31],0x0
  4235ea:	movsxd rbp,r9d
  4235ed:	jne    4236d0 <flatcc_json_printer_int16_struct_field@@Base+0x110>
  4235f3:	mov    rsi,QWORD PTR [rbx+0x28]
  4235f7:	cmp    rsi,QWORD PTR [rbx+0x20]
  4235fb:	jae    4236a0 <flatcc_json_printer_int16_struct_field@@Base+0xe0>
  423601:	mov    BYTE PTR [rsi],0x22
  423604:	xor    edi,edi
  423606:	cmp    BYTE PTR [rbx+0x32],0x0
  42360a:	mov    rdx,rbp
  42360d:	mov    rsi,r14
  423610:	sete   dil
  423614:	add    rdi,QWORD PTR [rbx+0x28]
  423618:	lea    rax,[rdi+rbp*1]
  42361c:	cmp    QWORD PTR [rbx+0x20],rax
  423620:	mov    QWORD PTR [rbx+0x28],rdi
  423624:	ja     4236b8 <flatcc_json_printer_int16_struct_field@@Base+0xf8>
  42362a:	mov    rdi,rbx
  42362d:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423632:	mov    rbp,QWORD PTR [rbx+0x28]
  423636:	mov    BYTE PTR [rbp+0x0],0x22
  42363a:	xor    eax,eax
  42363c:	cmp    BYTE PTR [rbx+0x32],0x0
  423640:	movsx  r11d,r12w
  423644:	sete   al
  423647:	add    rax,QWORD PTR [rbx+0x28]
  42364b:	xor    esi,esi
  42364d:	lea    rdx,[rax+0x1]
  423651:	mov    QWORD PTR [rbx+0x28],rdx
  423655:	mov    BYTE PTR [rax],0x3a
  423658:	mov    rax,QWORD PTR [rbx+0x28]
  42365c:	mov    BYTE PTR [rax],0x20
  42365f:	cmp    BYTE PTR [rbx+0x31],0x0
  423663:	setne  sil
  423667:	add    rsi,QWORD PTR [rbx+0x28]
  42366b:	shr    r11d,0x1f
  42366f:	test   r12w,r12w
  423673:	mov    QWORD PTR [rbx+0x28],rsi
  423677:	jns    423683 <flatcc_json_printer_int16_struct_field@@Base+0xc3>
  423679:	mov    BYTE PTR [rsi],0x2d
  42367c:	neg    r12d
  42367f:	add    rsi,0x1
  423683:	movzx  edi,r12w
  423687:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  42368c:	add    r11d,eax
  42368f:	movsxd r11,r11d
  423692:	add    QWORD PTR [rbx+0x28],r11
  423696:	pop    rbx
  423697:	pop    rbp
  423698:	pop    r12
  42369a:	pop    r13
  42369c:	pop    r14
  42369e:	ret    
  42369f:	nop
  4236a0:	xor    esi,esi
  4236a2:	mov    rdi,rbx
  4236a5:	call   QWORD PTR [rbx+0x48]
  4236a8:	mov    rsi,QWORD PTR [rbx+0x28]
  4236ac:	jmp    423601 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  4236b1:	nop    DWORD PTR [rax+0x0]
  4236b8:	call   4050e0 <memcpy@plt>
  4236bd:	add    rbp,QWORD PTR [rbx+0x28]
  4236c1:	mov    QWORD PTR [rbx+0x28],rbp
  4236c5:	jmp    423636 <flatcc_json_printer_int16_struct_field@@Base+0x76>
  4236ca:	nop    WORD PTR [rax+rax*1+0x0]
  4236d0:	mov    rax,QWORD PTR [rbx+0x28]
  4236d4:	lea    rdx,[rax+0x1]
  4236d8:	mov    QWORD PTR [rbx+0x28],rdx
  4236dc:	mov    BYTE PTR [rax],0xa
  4236df:	movzx  esi,BYTE PTR [rbx+0x31]
  4236e3:	mov    rdi,QWORD PTR [rbx+0x28]
  4236e7:	imul   esi,DWORD PTR [rbx+0x38]
  4236eb:	movsxd r13,esi
  4236ee:	lea    rax,[rdi+r13*1]
  4236f2:	cmp    QWORD PTR [rbx+0x20],rax
  4236f6:	jb     423718 <flatcc_json_printer_int16_struct_field@@Base+0x158>
  4236f8:	mov    esi,0x20
  4236fd:	mov    rdx,r13
  423700:	call   405090 <memset@plt>
  423705:	mov    rsi,r13
  423708:	add    rsi,QWORD PTR [rbx+0x28]
  42370c:	mov    QWORD PTR [rbx+0x28],rsi
  423710:	jmp    423601 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  423715:	nop    DWORD PTR [rax]
  423718:	mov    rsi,r13
  42371b:	mov    rdi,rbx
  42371e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423723:	mov    rsi,QWORD PTR [rbx+0x28]
  423727:	jmp    423601 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  42372c:	nop    DWORD PTR [rax+0x0]

0000000000423730 <flatcc_json_printer_int32_struct_field@@Base>:
  423730:	test   esi,esi
  423732:	push   r14
  423734:	mov    r14,r8
  423737:	push   r13
  423739:	push   r12
  42373b:	push   rbp
  42373c:	push   rbx
  42373d:	mov    rbx,rdi
  423740:	mov    r12d,DWORD PTR [rdx+rcx*1]
  423744:	je     423755 <flatcc_json_printer_int32_struct_field@@Base+0x25>
  423746:	mov    rax,QWORD PTR [rdi+0x28]
  42374a:	lea    rdx,[rax+0x1]
  42374e:	mov    QWORD PTR [rdi+0x28],rdx
  423752:	mov    BYTE PTR [rax],0x2c
  423755:	cmp    BYTE PTR [rbx+0x31],0x0
  423759:	movsxd rbp,r9d
  42375c:	jne    423840 <flatcc_json_printer_int32_struct_field@@Base+0x110>
  423762:	mov    rsi,QWORD PTR [rbx+0x28]
  423766:	cmp    rsi,QWORD PTR [rbx+0x20]
  42376a:	jae    423810 <flatcc_json_printer_int32_struct_field@@Base+0xe0>
  423770:	mov    BYTE PTR [rsi],0x22
  423773:	xor    edi,edi
  423775:	cmp    BYTE PTR [rbx+0x32],0x0
  423779:	mov    rdx,rbp
  42377c:	mov    rsi,r14
  42377f:	sete   dil
  423783:	add    rdi,QWORD PTR [rbx+0x28]
  423787:	lea    rax,[rdi+rbp*1]
  42378b:	cmp    QWORD PTR [rbx+0x20],rax
  42378f:	mov    QWORD PTR [rbx+0x28],rdi
  423793:	ja     423828 <flatcc_json_printer_int32_struct_field@@Base+0xf8>
  423799:	mov    rdi,rbx
  42379c:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4237a1:	mov    rbp,QWORD PTR [rbx+0x28]
  4237a5:	mov    BYTE PTR [rbp+0x0],0x22
  4237a9:	xor    eax,eax
  4237ab:	cmp    BYTE PTR [rbx+0x32],0x0
  4237af:	mov    r10d,r12d
  4237b2:	sete   al
  4237b5:	add    rax,QWORD PTR [rbx+0x28]
  4237b9:	xor    esi,esi
  4237bb:	lea    rdx,[rax+0x1]
  4237bf:	mov    QWORD PTR [rbx+0x28],rdx
  4237c3:	mov    BYTE PTR [rax],0x3a
  4237c6:	mov    rax,QWORD PTR [rbx+0x28]
  4237ca:	mov    BYTE PTR [rax],0x20
  4237cd:	cmp    BYTE PTR [rbx+0x31],0x0
  4237d1:	setne  sil
  4237d5:	add    rsi,QWORD PTR [rbx+0x28]
  4237d9:	shr    r10d,0x1f
  4237dd:	test   r12d,r12d
  4237e0:	mov    QWORD PTR [rbx+0x28],rsi
  4237e4:	jns    4237f0 <flatcc_json_printer_int32_struct_field@@Base+0xc0>
  4237e6:	mov    BYTE PTR [rsi],0x2d
  4237e9:	neg    r12d
  4237ec:	add    rsi,0x1
  4237f0:	mov    edi,r12d
  4237f3:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4237f8:	add    r10d,eax
  4237fb:	movsxd r10,r10d
  4237fe:	add    QWORD PTR [rbx+0x28],r10
  423802:	pop    rbx
  423803:	pop    rbp
  423804:	pop    r12
  423806:	pop    r13
  423808:	pop    r14
  42380a:	ret    
  42380b:	nop    DWORD PTR [rax+rax*1+0x0]
  423810:	xor    esi,esi
  423812:	mov    rdi,rbx
  423815:	call   QWORD PTR [rbx+0x48]
  423818:	mov    rsi,QWORD PTR [rbx+0x28]
  42381c:	jmp    423770 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  423821:	nop    DWORD PTR [rax+0x0]
  423828:	call   4050e0 <memcpy@plt>
  42382d:	add    rbp,QWORD PTR [rbx+0x28]
  423831:	mov    QWORD PTR [rbx+0x28],rbp
  423835:	jmp    4237a5 <flatcc_json_printer_int32_struct_field@@Base+0x75>
  42383a:	nop    WORD PTR [rax+rax*1+0x0]
  423840:	mov    rax,QWORD PTR [rbx+0x28]
  423844:	lea    rdx,[rax+0x1]
  423848:	mov    QWORD PTR [rbx+0x28],rdx
  42384c:	mov    BYTE PTR [rax],0xa
  42384f:	movzx  esi,BYTE PTR [rbx+0x31]
  423853:	mov    rdi,QWORD PTR [rbx+0x28]
  423857:	imul   esi,DWORD PTR [rbx+0x38]
  42385b:	movsxd r13,esi
  42385e:	lea    rax,[rdi+r13*1]
  423862:	cmp    QWORD PTR [rbx+0x20],rax
  423866:	jb     423888 <flatcc_json_printer_int32_struct_field@@Base+0x158>
  423868:	mov    esi,0x20
  42386d:	mov    rdx,r13
  423870:	call   405090 <memset@plt>
  423875:	mov    rsi,r13
  423878:	add    rsi,QWORD PTR [rbx+0x28]
  42387c:	mov    QWORD PTR [rbx+0x28],rsi
  423880:	jmp    423770 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  423885:	nop    DWORD PTR [rax]
  423888:	mov    rsi,r13
  42388b:	mov    rdi,rbx
  42388e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423893:	mov    rsi,QWORD PTR [rbx+0x28]
  423897:	jmp    423770 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  42389c:	nop    DWORD PTR [rax+0x0]

00000000004238a0 <flatcc_json_printer_int64_struct_field@@Base>:
  4238a0:	test   esi,esi
  4238a2:	push   r14
  4238a4:	mov    r14,r8
  4238a7:	push   r13
  4238a9:	push   r12
  4238ab:	push   rbp
  4238ac:	push   rbx
  4238ad:	mov    rbx,rdi
  4238b0:	mov    r12,QWORD PTR [rdx+rcx*1]
  4238b4:	je     4238c5 <flatcc_json_printer_int64_struct_field@@Base+0x25>
  4238b6:	mov    rax,QWORD PTR [rdi+0x28]
  4238ba:	lea    rdx,[rax+0x1]
  4238be:	mov    QWORD PTR [rdi+0x28],rdx
  4238c2:	mov    BYTE PTR [rax],0x2c
  4238c5:	cmp    BYTE PTR [rbx+0x31],0x0
  4238c9:	movsxd rbp,r9d
  4238cc:	jne    4239b0 <flatcc_json_printer_int64_struct_field@@Base+0x110>
  4238d2:	mov    rsi,QWORD PTR [rbx+0x28]
  4238d6:	cmp    rsi,QWORD PTR [rbx+0x20]
  4238da:	jae    423980 <flatcc_json_printer_int64_struct_field@@Base+0xe0>
  4238e0:	mov    BYTE PTR [rsi],0x22
  4238e3:	xor    edi,edi
  4238e5:	cmp    BYTE PTR [rbx+0x32],0x0
  4238e9:	mov    rdx,rbp
  4238ec:	mov    rsi,r14
  4238ef:	sete   dil
  4238f3:	add    rdi,QWORD PTR [rbx+0x28]
  4238f7:	lea    rax,[rdi+rbp*1]
  4238fb:	cmp    QWORD PTR [rbx+0x20],rax
  4238ff:	mov    QWORD PTR [rbx+0x28],rdi
  423903:	ja     423998 <flatcc_json_printer_int64_struct_field@@Base+0xf8>
  423909:	mov    rdi,rbx
  42390c:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423911:	mov    rbp,QWORD PTR [rbx+0x28]
  423915:	mov    BYTE PTR [rbp+0x0],0x22
  423919:	xor    eax,eax
  42391b:	cmp    BYTE PTR [rbx+0x32],0x0
  42391f:	mov    rbp,r12
  423922:	sete   al
  423925:	add    rax,QWORD PTR [rbx+0x28]
  423929:	xor    esi,esi
  42392b:	lea    rdx,[rax+0x1]
  42392f:	mov    QWORD PTR [rbx+0x28],rdx
  423933:	mov    BYTE PTR [rax],0x3a
  423936:	mov    rax,QWORD PTR [rbx+0x28]
  42393a:	mov    BYTE PTR [rax],0x20
  42393d:	cmp    BYTE PTR [rbx+0x31],0x0
  423941:	setne  sil
  423945:	add    rsi,QWORD PTR [rbx+0x28]
  423949:	shr    rbp,0x3f
  42394d:	test   r12,r12
  423950:	mov    QWORD PTR [rbx+0x28],rsi
  423954:	jns    423960 <flatcc_json_printer_int64_struct_field@@Base+0xc0>
  423956:	mov    BYTE PTR [rsi],0x2d
  423959:	neg    r12
  42395c:	add    rsi,0x1
  423960:	mov    rdi,r12
  423963:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  423968:	add    eax,ebp
  42396a:	cdqe   
  42396c:	add    QWORD PTR [rbx+0x28],rax
  423970:	pop    rbx
  423971:	pop    rbp
  423972:	pop    r12
  423974:	pop    r13
  423976:	pop    r14
  423978:	ret    
  423979:	nop    DWORD PTR [rax+0x0]
  423980:	xor    esi,esi
  423982:	mov    rdi,rbx
  423985:	call   QWORD PTR [rbx+0x48]
  423988:	mov    rsi,QWORD PTR [rbx+0x28]
  42398c:	jmp    4238e0 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  423991:	nop    DWORD PTR [rax+0x0]
  423998:	call   4050e0 <memcpy@plt>
  42399d:	add    rbp,QWORD PTR [rbx+0x28]
  4239a1:	mov    QWORD PTR [rbx+0x28],rbp
  4239a5:	jmp    423915 <flatcc_json_printer_int64_struct_field@@Base+0x75>
  4239aa:	nop    WORD PTR [rax+rax*1+0x0]
  4239b0:	mov    rax,QWORD PTR [rbx+0x28]
  4239b4:	lea    rdx,[rax+0x1]
  4239b8:	mov    QWORD PTR [rbx+0x28],rdx
  4239bc:	mov    BYTE PTR [rax],0xa
  4239bf:	movzx  esi,BYTE PTR [rbx+0x31]
  4239c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4239c7:	imul   esi,DWORD PTR [rbx+0x38]
  4239cb:	movsxd r13,esi
  4239ce:	lea    rax,[rdi+r13*1]
  4239d2:	cmp    QWORD PTR [rbx+0x20],rax
  4239d6:	jb     4239f8 <flatcc_json_printer_int64_struct_field@@Base+0x158>
  4239d8:	mov    esi,0x20
  4239dd:	mov    rdx,r13
  4239e0:	call   405090 <memset@plt>
  4239e5:	mov    rsi,r13
  4239e8:	add    rsi,QWORD PTR [rbx+0x28]
  4239ec:	mov    QWORD PTR [rbx+0x28],rsi
  4239f0:	jmp    4238e0 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  4239f5:	nop    DWORD PTR [rax]
  4239f8:	mov    rsi,r13
  4239fb:	mov    rdi,rbx
  4239fe:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423a03:	mov    rsi,QWORD PTR [rbx+0x28]
  423a07:	jmp    4238e0 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  423a0c:	nop    DWORD PTR [rax+0x0]

0000000000423a10 <flatcc_json_printer_bool_struct_field@@Base>:
  423a10:	test   esi,esi
  423a12:	push   r14
  423a14:	mov    r14,r8
  423a17:	push   r13
  423a19:	push   r12
  423a1b:	push   rbp
  423a1c:	push   rbx
  423a1d:	mov    rbx,rdi
  423a20:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  423a25:	je     423a36 <flatcc_json_printer_bool_struct_field@@Base+0x26>
  423a27:	mov    rax,QWORD PTR [rdi+0x28]
  423a2b:	lea    rdx,[rax+0x1]
  423a2f:	mov    QWORD PTR [rdi+0x28],rdx
  423a33:	mov    BYTE PTR [rax],0x2c
  423a36:	cmp    BYTE PTR [rbx+0x31],0x0
  423a3a:	movsxd rbp,r9d
  423a3d:	jne    423b00 <flatcc_json_printer_bool_struct_field@@Base+0xf0>
  423a43:	mov    rsi,QWORD PTR [rbx+0x28]
  423a47:	cmp    rsi,QWORD PTR [rbx+0x20]
  423a4b:	jae    423ad0 <flatcc_json_printer_bool_struct_field@@Base+0xc0>
  423a51:	mov    BYTE PTR [rsi],0x22
  423a54:	xor    edi,edi
  423a56:	cmp    BYTE PTR [rbx+0x32],0x0
  423a5a:	mov    rdx,rbp
  423a5d:	mov    rsi,r14
  423a60:	sete   dil
  423a64:	add    rdi,QWORD PTR [rbx+0x28]
  423a68:	lea    rax,[rdi+rbp*1]
  423a6c:	cmp    QWORD PTR [rbx+0x20],rax
  423a70:	mov    QWORD PTR [rbx+0x28],rdi
  423a74:	ja     423ae8 <flatcc_json_printer_bool_struct_field@@Base+0xd8>
  423a76:	mov    rdi,rbx
  423a79:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423a7e:	mov    rbp,QWORD PTR [rbx+0x28]
  423a82:	mov    BYTE PTR [rbp+0x0],0x22
  423a86:	xor    eax,eax
  423a88:	cmp    BYTE PTR [rbx+0x32],0x0
  423a8c:	movzx  edi,r12b
  423a90:	sete   al
  423a93:	add    rax,QWORD PTR [rbx+0x28]
  423a97:	xor    esi,esi
  423a99:	lea    rdx,[rax+0x1]
  423a9d:	mov    QWORD PTR [rbx+0x28],rdx
  423aa1:	mov    BYTE PTR [rax],0x3a
  423aa4:	mov    rax,QWORD PTR [rbx+0x28]
  423aa8:	mov    BYTE PTR [rax],0x20
  423aab:	cmp    BYTE PTR [rbx+0x31],0x0
  423aaf:	setne  sil
  423ab3:	add    rsi,QWORD PTR [rbx+0x28]
  423ab7:	mov    QWORD PTR [rbx+0x28],rsi
  423abb:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  423ac0:	cdqe   
  423ac2:	add    QWORD PTR [rbx+0x28],rax
  423ac6:	pop    rbx
  423ac7:	pop    rbp
  423ac8:	pop    r12
  423aca:	pop    r13
  423acc:	pop    r14
  423ace:	ret    
  423acf:	nop
  423ad0:	xor    esi,esi
  423ad2:	mov    rdi,rbx
  423ad5:	call   QWORD PTR [rbx+0x48]
  423ad8:	mov    rsi,QWORD PTR [rbx+0x28]
  423adc:	jmp    423a51 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  423ae1:	nop    DWORD PTR [rax+0x0]
  423ae8:	call   4050e0 <memcpy@plt>
  423aed:	add    rbp,QWORD PTR [rbx+0x28]
  423af1:	mov    QWORD PTR [rbx+0x28],rbp
  423af5:	jmp    423a82 <flatcc_json_printer_bool_struct_field@@Base+0x72>
  423af7:	nop    WORD PTR [rax+rax*1+0x0]
  423b00:	mov    rax,QWORD PTR [rbx+0x28]
  423b04:	lea    rdx,[rax+0x1]
  423b08:	mov    QWORD PTR [rbx+0x28],rdx
  423b0c:	mov    BYTE PTR [rax],0xa
  423b0f:	movzx  esi,BYTE PTR [rbx+0x31]
  423b13:	mov    rdi,QWORD PTR [rbx+0x28]
  423b17:	imul   esi,DWORD PTR [rbx+0x38]
  423b1b:	movsxd r13,esi
  423b1e:	lea    rax,[rdi+r13*1]
  423b22:	cmp    QWORD PTR [rbx+0x20],rax
  423b26:	jb     423b48 <flatcc_json_printer_bool_struct_field@@Base+0x138>
  423b28:	mov    esi,0x20
  423b2d:	mov    rdx,r13
  423b30:	call   405090 <memset@plt>
  423b35:	mov    rsi,r13
  423b38:	add    rsi,QWORD PTR [rbx+0x28]
  423b3c:	mov    QWORD PTR [rbx+0x28],rsi
  423b40:	jmp    423a51 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  423b45:	nop    DWORD PTR [rax]
  423b48:	mov    rsi,r13
  423b4b:	mov    rdi,rbx
  423b4e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423b53:	mov    rsi,QWORD PTR [rbx+0x28]
  423b57:	jmp    423a51 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  423b5c:	nop    DWORD PTR [rax+0x0]

0000000000423b60 <flatcc_json_printer_float_struct_field@@Base>:
  423b60:	push   r13
  423b62:	push   r12
  423b64:	mov    r13,r8
  423b67:	push   rbp
  423b68:	push   rbx
  423b69:	mov    rbx,rdi
  423b6c:	sub    rsp,0x18
  423b70:	test   esi,esi
  423b72:	vmovss xmm1,DWORD PTR [rdx+rcx*1]
  423b77:	vmovss DWORD PTR [rsp+0xc],xmm1
  423b7d:	je     423b8e <flatcc_json_printer_float_struct_field@@Base+0x2e>
  423b7f:	mov    rax,QWORD PTR [rdi+0x28]
  423b83:	lea    rdx,[rax+0x1]
  423b87:	mov    QWORD PTR [rdi+0x28],rdx
  423b8b:	mov    BYTE PTR [rax],0x2c
  423b8e:	cmp    BYTE PTR [rbx+0x31],0x0
  423b92:	movsxd rbp,r9d
  423b95:	jne    423c60 <flatcc_json_printer_float_struct_field@@Base+0x100>
  423b9b:	mov    rsi,QWORD PTR [rbx+0x28]
  423b9f:	cmp    rsi,QWORD PTR [rbx+0x20]
  423ba3:	jae    423c30 <flatcc_json_printer_float_struct_field@@Base+0xd0>
  423ba9:	mov    BYTE PTR [rsi],0x22
  423bac:	xor    edi,edi
  423bae:	cmp    BYTE PTR [rbx+0x32],0x0
  423bb2:	mov    rdx,rbp
  423bb5:	mov    rsi,r13
  423bb8:	sete   dil
  423bbc:	add    rdi,QWORD PTR [rbx+0x28]
  423bc0:	lea    rax,[rdi+rbp*1]
  423bc4:	cmp    QWORD PTR [rbx+0x20],rax
  423bc8:	mov    QWORD PTR [rbx+0x28],rdi
  423bcc:	ja     423c48 <flatcc_json_printer_float_struct_field@@Base+0xe8>
  423bce:	mov    rdi,rbx
  423bd1:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423bd6:	mov    rbp,QWORD PTR [rbx+0x28]
  423bda:	mov    BYTE PTR [rbp+0x0],0x22
  423bde:	xor    eax,eax
  423be0:	cmp    BYTE PTR [rbx+0x32],0x0
  423be4:	vxorpd xmm0,xmm0,xmm0
  423be8:	sete   al
  423beb:	add    rax,QWORD PTR [rbx+0x28]
  423bef:	xor    edi,edi
  423bf1:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0xc]
  423bf7:	lea    rdx,[rax+0x1]
  423bfb:	mov    QWORD PTR [rbx+0x28],rdx
  423bff:	mov    BYTE PTR [rax],0x3a
  423c02:	mov    rax,QWORD PTR [rbx+0x28]
  423c06:	mov    BYTE PTR [rax],0x20
  423c09:	cmp    BYTE PTR [rbx+0x31],0x0
  423c0d:	setne  dil
  423c11:	add    rdi,QWORD PTR [rbx+0x28]
  423c15:	mov    QWORD PTR [rbx+0x28],rdi
  423c19:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  423c1e:	cdqe   
  423c20:	add    QWORD PTR [rbx+0x28],rax
  423c24:	add    rsp,0x18
  423c28:	pop    rbx
  423c29:	pop    rbp
  423c2a:	pop    r12
  423c2c:	pop    r13
  423c2e:	ret    
  423c2f:	nop
  423c30:	xor    esi,esi
  423c32:	mov    rdi,rbx
  423c35:	call   QWORD PTR [rbx+0x48]
  423c38:	mov    rsi,QWORD PTR [rbx+0x28]
  423c3c:	jmp    423ba9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  423c41:	nop    DWORD PTR [rax+0x0]
  423c48:	call   4050e0 <memcpy@plt>
  423c4d:	add    rbp,QWORD PTR [rbx+0x28]
  423c51:	mov    QWORD PTR [rbx+0x28],rbp
  423c55:	jmp    423bda <flatcc_json_printer_float_struct_field@@Base+0x7a>
  423c5a:	nop    WORD PTR [rax+rax*1+0x0]
  423c60:	mov    rax,QWORD PTR [rbx+0x28]
  423c64:	lea    rdx,[rax+0x1]
  423c68:	mov    QWORD PTR [rbx+0x28],rdx
  423c6c:	mov    BYTE PTR [rax],0xa
  423c6f:	movzx  esi,BYTE PTR [rbx+0x31]
  423c73:	mov    rdi,QWORD PTR [rbx+0x28]
  423c77:	imul   esi,DWORD PTR [rbx+0x38]
  423c7b:	movsxd r12,esi
  423c7e:	lea    rax,[rdi+r12*1]
  423c82:	cmp    QWORD PTR [rbx+0x20],rax
  423c86:	jb     423ca8 <flatcc_json_printer_float_struct_field@@Base+0x148>
  423c88:	mov    esi,0x20
  423c8d:	mov    rdx,r12
  423c90:	call   405090 <memset@plt>
  423c95:	mov    rsi,r12
  423c98:	add    rsi,QWORD PTR [rbx+0x28]
  423c9c:	mov    QWORD PTR [rbx+0x28],rsi
  423ca0:	jmp    423ba9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  423ca5:	nop    DWORD PTR [rax]
  423ca8:	mov    rsi,r12
  423cab:	mov    rdi,rbx
  423cae:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423cb3:	mov    rsi,QWORD PTR [rbx+0x28]
  423cb7:	jmp    423ba9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  423cbc:	nop    DWORD PTR [rax+0x0]

0000000000423cc0 <flatcc_json_printer_double_struct_field@@Base>:
  423cc0:	push   r13
  423cc2:	push   r12
  423cc4:	mov    r13,r8
  423cc7:	push   rbp
  423cc8:	push   rbx
  423cc9:	mov    rbx,rdi
  423ccc:	sub    rsp,0x18
  423cd0:	test   esi,esi
  423cd2:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  423cd7:	je     423ce8 <flatcc_json_printer_double_struct_field@@Base+0x28>
  423cd9:	mov    rax,QWORD PTR [rdi+0x28]
  423cdd:	lea    rdx,[rax+0x1]
  423ce1:	mov    QWORD PTR [rdi+0x28],rdx
  423ce5:	mov    BYTE PTR [rax],0x2c
  423ce8:	cmp    BYTE PTR [rbx+0x31],0x0
  423cec:	movsxd rbp,r9d
  423cef:	jne    423dd0 <flatcc_json_printer_double_struct_field@@Base+0x110>
  423cf5:	mov    rsi,QWORD PTR [rbx+0x28]
  423cf9:	cmp    rsi,QWORD PTR [rbx+0x20]
  423cfd:	jae    423d90 <flatcc_json_printer_double_struct_field@@Base+0xd0>
  423d03:	mov    BYTE PTR [rsi],0x22
  423d06:	xor    edi,edi
  423d08:	cmp    BYTE PTR [rbx+0x32],0x0
  423d0c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  423d12:	mov    rdx,rbp
  423d15:	mov    rsi,r13
  423d18:	sete   dil
  423d1c:	add    rdi,QWORD PTR [rbx+0x28]
  423d20:	lea    rax,[rdi+rbp*1]
  423d24:	cmp    QWORD PTR [rbx+0x20],rax
  423d28:	mov    QWORD PTR [rbx+0x28],rdi
  423d2c:	ja     423db0 <flatcc_json_printer_double_struct_field@@Base+0xf0>
  423d32:	mov    rdi,rbx
  423d35:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423d3a:	mov    rbp,QWORD PTR [rbx+0x28]
  423d3e:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  423d44:	mov    BYTE PTR [rbp+0x0],0x22
  423d48:	xor    eax,eax
  423d4a:	cmp    BYTE PTR [rbx+0x32],0x0
  423d4e:	sete   al
  423d51:	add    rax,QWORD PTR [rbx+0x28]
  423d55:	xor    edi,edi
  423d57:	lea    rdx,[rax+0x1]
  423d5b:	mov    QWORD PTR [rbx+0x28],rdx
  423d5f:	mov    BYTE PTR [rax],0x3a
  423d62:	mov    rax,QWORD PTR [rbx+0x28]
  423d66:	mov    BYTE PTR [rax],0x20
  423d69:	cmp    BYTE PTR [rbx+0x31],0x0
  423d6d:	setne  dil
  423d71:	add    rdi,QWORD PTR [rbx+0x28]
  423d75:	mov    QWORD PTR [rbx+0x28],rdi
  423d79:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  423d7e:	cdqe   
  423d80:	add    QWORD PTR [rbx+0x28],rax
  423d84:	add    rsp,0x18
  423d88:	pop    rbx
  423d89:	pop    rbp
  423d8a:	pop    r12
  423d8c:	pop    r13
  423d8e:	ret    
  423d8f:	nop
  423d90:	vmovsd QWORD PTR [rsp+0x8],xmm0
  423d96:	xor    esi,esi
  423d98:	mov    rdi,rbx
  423d9b:	call   QWORD PTR [rbx+0x48]
  423d9e:	mov    rsi,QWORD PTR [rbx+0x28]
  423da2:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  423da8:	jmp    423d03 <flatcc_json_printer_double_struct_field@@Base+0x43>
  423dad:	nop    DWORD PTR [rax]
  423db0:	call   4050e0 <memcpy@plt>
  423db5:	add    rbp,QWORD PTR [rbx+0x28]
  423db9:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  423dbf:	mov    QWORD PTR [rbx+0x28],rbp
  423dc3:	jmp    423d44 <flatcc_json_printer_double_struct_field@@Base+0x84>
  423dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  423dd0:	mov    rax,QWORD PTR [rbx+0x28]
  423dd4:	vmovsd QWORD PTR [rsp+0x8],xmm0
  423dda:	lea    rdx,[rax+0x1]
  423dde:	mov    QWORD PTR [rbx+0x28],rdx
  423de2:	mov    BYTE PTR [rax],0xa
  423de5:	movzx  esi,BYTE PTR [rbx+0x31]
  423de9:	mov    rdi,QWORD PTR [rbx+0x28]
  423ded:	imul   esi,DWORD PTR [rbx+0x38]
  423df1:	movsxd r12,esi
  423df4:	lea    rax,[rdi+r12*1]
  423df8:	cmp    QWORD PTR [rbx+0x20],rax
  423dfc:	jb     423e28 <flatcc_json_printer_double_struct_field@@Base+0x168>
  423dfe:	mov    esi,0x20
  423e03:	mov    rdx,r12
  423e06:	call   405090 <memset@plt>
  423e0b:	mov    rsi,r12
  423e0e:	add    rsi,QWORD PTR [rbx+0x28]
  423e12:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  423e18:	mov    QWORD PTR [rbx+0x28],rsi
  423e1c:	jmp    423d03 <flatcc_json_printer_double_struct_field@@Base+0x43>
  423e21:	nop    DWORD PTR [rax+0x0]
  423e28:	mov    rsi,r12
  423e2b:	mov    rdi,rbx
  423e2e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423e33:	mov    rsi,QWORD PTR [rbx+0x28]
  423e37:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  423e3d:	jmp    423d03 <flatcc_json_printer_double_struct_field@@Base+0x43>
  423e42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423e4d:	nop    DWORD PTR [rax]

0000000000423e50 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  423e50:	push   r15
  423e52:	push   r14
  423e54:	mov    r15,r8
  423e57:	push   r13
  423e59:	push   r12
  423e5b:	push   rbp
  423e5c:	push   rbx
  423e5d:	mov    rbx,rdi
  423e60:	sub    rsp,0x8
  423e64:	test   esi,esi
  423e66:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  423e6b:	mov    r13,QWORD PTR [rsp+0x40]
  423e70:	je     423e81 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x31>
  423e72:	mov    rax,QWORD PTR [rdi+0x28]
  423e76:	lea    rdx,[rax+0x1]
  423e7a:	mov    QWORD PTR [rdi+0x28],rdx
  423e7e:	mov    BYTE PTR [rax],0x2c
  423e81:	cmp    BYTE PTR [rbx+0x31],0x0
  423e85:	movsxd rbp,r9d
  423e88:	jne    423f88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x138>
  423e8e:	mov    rsi,QWORD PTR [rbx+0x28]
  423e92:	cmp    rsi,QWORD PTR [rbx+0x20]
  423e96:	jae    423f30 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xe0>
  423e9c:	mov    BYTE PTR [rsi],0x22
  423e9f:	xor    edi,edi
  423ea1:	cmp    BYTE PTR [rbx+0x32],0x0
  423ea5:	mov    rdx,rbp
  423ea8:	mov    rsi,r15
  423eab:	sete   dil
  423eaf:	add    rdi,QWORD PTR [rbx+0x28]
  423eb3:	lea    rax,[rdi+rbp*1]
  423eb7:	cmp    QWORD PTR [rbx+0x20],rax
  423ebb:	mov    QWORD PTR [rbx+0x28],rdi
  423ebf:	ja     423f70 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x120>
  423ec5:	mov    rdi,rbx
  423ec8:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423ecd:	mov    rbp,QWORD PTR [rbx+0x28]
  423ed1:	mov    BYTE PTR [rbp+0x0],0x22
  423ed5:	xor    eax,eax
  423ed7:	cmp    BYTE PTR [rbx+0x32],0x0
  423edb:	sete   al
  423ede:	add    rax,QWORD PTR [rbx+0x28]
  423ee2:	xor    esi,esi
  423ee4:	lea    rdx,[rax+0x1]
  423ee8:	mov    QWORD PTR [rbx+0x28],rdx
  423eec:	mov    BYTE PTR [rax],0x3a
  423eef:	mov    rax,QWORD PTR [rbx+0x28]
  423ef3:	mov    BYTE PTR [rax],0x20
  423ef6:	cmp    BYTE PTR [rbx+0x31],0x0
  423efa:	setne  sil
  423efe:	add    rsi,QWORD PTR [rbx+0x28]
  423f02:	cmp    BYTE PTR [rbx+0x33],0x0
  423f06:	mov    QWORD PTR [rbx+0x28],rsi
  423f0a:	jne    423f48 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
  423f0c:	add    rsp,0x8
  423f10:	movzx  esi,r12b
  423f14:	mov    rdi,rbx
  423f17:	mov    rax,r13
  423f1a:	pop    rbx
  423f1b:	pop    rbp
  423f1c:	pop    r12
  423f1e:	pop    r13
  423f20:	pop    r14
  423f22:	pop    r15
  423f24:	jmp    rax
  423f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f30:	xor    esi,esi
  423f32:	mov    rdi,rbx
  423f35:	call   QWORD PTR [rbx+0x48]
  423f38:	mov    rsi,QWORD PTR [rbx+0x28]
  423f3c:	jmp    423e9c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  423f41:	nop    DWORD PTR [rax+0x0]
  423f48:	movzx  edi,r12b
  423f4c:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  423f51:	cdqe   
  423f53:	add    QWORD PTR [rbx+0x28],rax
  423f57:	add    rsp,0x8
  423f5b:	pop    rbx
  423f5c:	pop    rbp
  423f5d:	pop    r12
  423f5f:	pop    r13
  423f61:	pop    r14
  423f63:	pop    r15
  423f65:	ret    
  423f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f70:	call   4050e0 <memcpy@plt>
  423f75:	add    rbp,QWORD PTR [rbx+0x28]
  423f79:	mov    QWORD PTR [rbx+0x28],rbp
  423f7d:	jmp    423ed1 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x81>
  423f82:	nop    WORD PTR [rax+rax*1+0x0]
  423f88:	mov    rax,QWORD PTR [rbx+0x28]
  423f8c:	lea    rdx,[rax+0x1]
  423f90:	mov    QWORD PTR [rbx+0x28],rdx
  423f94:	mov    BYTE PTR [rax],0xa
  423f97:	movzx  esi,BYTE PTR [rbx+0x31]
  423f9b:	mov    rdi,QWORD PTR [rbx+0x28]
  423f9f:	imul   esi,DWORD PTR [rbx+0x38]
  423fa3:	movsxd r14,esi
  423fa6:	lea    rax,[rdi+r14*1]
  423faa:	cmp    QWORD PTR [rbx+0x20],rax
  423fae:	jb     423fd0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x180>
  423fb0:	mov    esi,0x20
  423fb5:	mov    rdx,r14
  423fb8:	call   405090 <memset@plt>
  423fbd:	mov    rsi,r14
  423fc0:	add    rsi,QWORD PTR [rbx+0x28]
  423fc4:	mov    QWORD PTR [rbx+0x28],rsi
  423fc8:	jmp    423e9c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  423fcd:	nop    DWORD PTR [rax]
  423fd0:	mov    rsi,r14
  423fd3:	mov    rdi,rbx
  423fd6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423fdb:	mov    rsi,QWORD PTR [rbx+0x28]
  423fdf:	jmp    423e9c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  423fe4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423fef:	nop

0000000000423ff0 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  423ff0:	push   r15
  423ff2:	push   r14
  423ff4:	mov    r15,r8
  423ff7:	push   r13
  423ff9:	push   r12
  423ffb:	push   rbp
  423ffc:	push   rbx
  423ffd:	mov    rbx,rdi
  424000:	sub    rsp,0x8
  424004:	test   esi,esi
  424006:	movzx  r12d,WORD PTR [rdx+rcx*1]
  42400b:	mov    r13,QWORD PTR [rsp+0x40]
  424010:	je     424021 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x31>
  424012:	mov    rax,QWORD PTR [rdi+0x28]
  424016:	lea    rdx,[rax+0x1]
  42401a:	mov    QWORD PTR [rdi+0x28],rdx
  42401e:	mov    BYTE PTR [rax],0x2c
  424021:	cmp    BYTE PTR [rbx+0x31],0x0
  424025:	movsxd rbp,r9d
  424028:	jne    424128 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  42402e:	mov    rsi,QWORD PTR [rbx+0x28]
  424032:	cmp    rsi,QWORD PTR [rbx+0x20]
  424036:	jae    4240d0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xe0>
  42403c:	mov    BYTE PTR [rsi],0x22
  42403f:	xor    edi,edi
  424041:	cmp    BYTE PTR [rbx+0x32],0x0
  424045:	mov    rdx,rbp
  424048:	mov    rsi,r15
  42404b:	sete   dil
  42404f:	add    rdi,QWORD PTR [rbx+0x28]
  424053:	lea    rax,[rdi+rbp*1]
  424057:	cmp    QWORD PTR [rbx+0x20],rax
  42405b:	mov    QWORD PTR [rbx+0x28],rdi
  42405f:	ja     424110 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x120>
  424065:	mov    rdi,rbx
  424068:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42406d:	mov    rbp,QWORD PTR [rbx+0x28]
  424071:	mov    BYTE PTR [rbp+0x0],0x22
  424075:	xor    eax,eax
  424077:	cmp    BYTE PTR [rbx+0x32],0x0
  42407b:	sete   al
  42407e:	add    rax,QWORD PTR [rbx+0x28]
  424082:	xor    esi,esi
  424084:	lea    rdx,[rax+0x1]
  424088:	mov    QWORD PTR [rbx+0x28],rdx
  42408c:	mov    BYTE PTR [rax],0x3a
  42408f:	mov    rax,QWORD PTR [rbx+0x28]
  424093:	mov    BYTE PTR [rax],0x20
  424096:	cmp    BYTE PTR [rbx+0x31],0x0
  42409a:	setne  sil
  42409e:	add    rsi,QWORD PTR [rbx+0x28]
  4240a2:	cmp    BYTE PTR [rbx+0x33],0x0
  4240a6:	mov    QWORD PTR [rbx+0x28],rsi
  4240aa:	jne    4240e8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
  4240ac:	add    rsp,0x8
  4240b0:	movzx  esi,r12w
  4240b4:	mov    rdi,rbx
  4240b7:	mov    rax,r13
  4240ba:	pop    rbx
  4240bb:	pop    rbp
  4240bc:	pop    r12
  4240be:	pop    r13
  4240c0:	pop    r14
  4240c2:	pop    r15
  4240c4:	jmp    rax
  4240c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4240d0:	xor    esi,esi
  4240d2:	mov    rdi,rbx
  4240d5:	call   QWORD PTR [rbx+0x48]
  4240d8:	mov    rsi,QWORD PTR [rbx+0x28]
  4240dc:	jmp    42403c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  4240e1:	nop    DWORD PTR [rax+0x0]
  4240e8:	movzx  edi,r12w
  4240ec:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  4240f1:	cdqe   
  4240f3:	add    QWORD PTR [rbx+0x28],rax
  4240f7:	add    rsp,0x8
  4240fb:	pop    rbx
  4240fc:	pop    rbp
  4240fd:	pop    r12
  4240ff:	pop    r13
  424101:	pop    r14
  424103:	pop    r15
  424105:	ret    
  424106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424110:	call   4050e0 <memcpy@plt>
  424115:	add    rbp,QWORD PTR [rbx+0x28]
  424119:	mov    QWORD PTR [rbx+0x28],rbp
  42411d:	jmp    424071 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x81>
  424122:	nop    WORD PTR [rax+rax*1+0x0]
  424128:	mov    rax,QWORD PTR [rbx+0x28]
  42412c:	lea    rdx,[rax+0x1]
  424130:	mov    QWORD PTR [rbx+0x28],rdx
  424134:	mov    BYTE PTR [rax],0xa
  424137:	movzx  esi,BYTE PTR [rbx+0x31]
  42413b:	mov    rdi,QWORD PTR [rbx+0x28]
  42413f:	imul   esi,DWORD PTR [rbx+0x38]
  424143:	movsxd r14,esi
  424146:	lea    rax,[rdi+r14*1]
  42414a:	cmp    QWORD PTR [rbx+0x20],rax
  42414e:	jb     424170 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x180>
  424150:	mov    esi,0x20
  424155:	mov    rdx,r14
  424158:	call   405090 <memset@plt>
  42415d:	mov    rsi,r14
  424160:	add    rsi,QWORD PTR [rbx+0x28]
  424164:	mov    QWORD PTR [rbx+0x28],rsi
  424168:	jmp    42403c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  42416d:	nop    DWORD PTR [rax]
  424170:	mov    rsi,r14
  424173:	mov    rdi,rbx
  424176:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42417b:	mov    rsi,QWORD PTR [rbx+0x28]
  42417f:	jmp    42403c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  424184:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42418f:	nop

0000000000424190 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  424190:	push   r15
  424192:	push   r14
  424194:	mov    r15,r8
  424197:	push   r13
  424199:	push   r12
  42419b:	push   rbp
  42419c:	push   rbx
  42419d:	mov    rbx,rdi
  4241a0:	sub    rsp,0x8
  4241a4:	test   esi,esi
  4241a6:	mov    r12d,DWORD PTR [rdx+rcx*1]
  4241aa:	mov    r13,QWORD PTR [rsp+0x40]
  4241af:	je     4241c0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x30>
  4241b1:	mov    rax,QWORD PTR [rdi+0x28]
  4241b5:	lea    rdx,[rax+0x1]
  4241b9:	mov    QWORD PTR [rdi+0x28],rdx
  4241bd:	mov    BYTE PTR [rax],0x2c
  4241c0:	cmp    BYTE PTR [rbx+0x31],0x0
  4241c4:	movsxd rbp,r9d
  4241c7:	jne    4242b8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x128>
  4241cd:	mov    rsi,QWORD PTR [rbx+0x28]
  4241d1:	cmp    rsi,QWORD PTR [rbx+0x20]
  4241d5:	jae    424268 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd8>
  4241db:	mov    BYTE PTR [rsi],0x22
  4241de:	xor    edi,edi
  4241e0:	cmp    BYTE PTR [rbx+0x32],0x0
  4241e4:	mov    rdx,rbp
  4241e7:	mov    rsi,r15
  4241ea:	sete   dil
  4241ee:	add    rdi,QWORD PTR [rbx+0x28]
  4241f2:	lea    rax,[rdi+rbp*1]
  4241f6:	cmp    QWORD PTR [rbx+0x20],rax
  4241fa:	mov    QWORD PTR [rbx+0x28],rdi
  4241fe:	ja     4242a0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x110>
  424204:	mov    rdi,rbx
  424207:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42420c:	mov    rbp,QWORD PTR [rbx+0x28]
  424210:	mov    BYTE PTR [rbp+0x0],0x22
  424214:	xor    eax,eax
  424216:	cmp    BYTE PTR [rbx+0x32],0x0
  42421a:	sete   al
  42421d:	add    rax,QWORD PTR [rbx+0x28]
  424221:	xor    esi,esi
  424223:	lea    rdx,[rax+0x1]
  424227:	mov    QWORD PTR [rbx+0x28],rdx
  42422b:	mov    BYTE PTR [rax],0x3a
  42422e:	mov    rax,QWORD PTR [rbx+0x28]
  424232:	mov    BYTE PTR [rax],0x20
  424235:	cmp    BYTE PTR [rbx+0x31],0x0
  424239:	setne  sil
  42423d:	add    rsi,QWORD PTR [rbx+0x28]
  424241:	cmp    BYTE PTR [rbx+0x33],0x0
  424245:	mov    QWORD PTR [rbx+0x28],rsi
  424249:	jne    424280 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf0>
  42424b:	add    rsp,0x8
  42424f:	mov    esi,r12d
  424252:	mov    rdi,rbx
  424255:	mov    rax,r13
  424258:	pop    rbx
  424259:	pop    rbp
  42425a:	pop    r12
  42425c:	pop    r13
  42425e:	pop    r14
  424260:	pop    r15
  424262:	jmp    rax
  424264:	nop    DWORD PTR [rax+0x0]
  424268:	xor    esi,esi
  42426a:	mov    rdi,rbx
  42426d:	call   QWORD PTR [rbx+0x48]
  424270:	mov    rsi,QWORD PTR [rbx+0x28]
  424274:	jmp    4241db <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  424279:	nop    DWORD PTR [rax+0x0]
  424280:	mov    edi,r12d
  424283:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  424288:	cdqe   
  42428a:	add    QWORD PTR [rbx+0x28],rax
  42428e:	add    rsp,0x8
  424292:	pop    rbx
  424293:	pop    rbp
  424294:	pop    r12
  424296:	pop    r13
  424298:	pop    r14
  42429a:	pop    r15
  42429c:	ret    
  42429d:	nop    DWORD PTR [rax]
  4242a0:	call   4050e0 <memcpy@plt>
  4242a5:	add    rbp,QWORD PTR [rbx+0x28]
  4242a9:	mov    QWORD PTR [rbx+0x28],rbp
  4242ad:	jmp    424210 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x80>
  4242b2:	nop    WORD PTR [rax+rax*1+0x0]
  4242b8:	mov    rax,QWORD PTR [rbx+0x28]
  4242bc:	lea    rdx,[rax+0x1]
  4242c0:	mov    QWORD PTR [rbx+0x28],rdx
  4242c4:	mov    BYTE PTR [rax],0xa
  4242c7:	movzx  esi,BYTE PTR [rbx+0x31]
  4242cb:	mov    rdi,QWORD PTR [rbx+0x28]
  4242cf:	imul   esi,DWORD PTR [rbx+0x38]
  4242d3:	movsxd r14,esi
  4242d6:	lea    rax,[rdi+r14*1]
  4242da:	cmp    QWORD PTR [rbx+0x20],rax
  4242de:	jb     424300 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x170>
  4242e0:	mov    esi,0x20
  4242e5:	mov    rdx,r14
  4242e8:	call   405090 <memset@plt>
  4242ed:	mov    rsi,r14
  4242f0:	add    rsi,QWORD PTR [rbx+0x28]
  4242f4:	mov    QWORD PTR [rbx+0x28],rsi
  4242f8:	jmp    4241db <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  4242fd:	nop    DWORD PTR [rax]
  424300:	mov    rsi,r14
  424303:	mov    rdi,rbx
  424306:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42430b:	mov    rsi,QWORD PTR [rbx+0x28]
  42430f:	jmp    4241db <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  424314:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42431f:	nop

0000000000424320 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  424320:	push   r15
  424322:	push   r14
  424324:	mov    r15,r8
  424327:	push   r13
  424329:	push   r12
  42432b:	push   rbp
  42432c:	push   rbx
  42432d:	mov    rbx,rdi
  424330:	sub    rsp,0x8
  424334:	test   esi,esi
  424336:	mov    r12,QWORD PTR [rdx+rcx*1]
  42433a:	mov    r13,QWORD PTR [rsp+0x40]
  42433f:	je     424350 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x30>
  424341:	mov    rax,QWORD PTR [rdi+0x28]
  424345:	lea    rdx,[rax+0x1]
  424349:	mov    QWORD PTR [rdi+0x28],rdx
  42434d:	mov    BYTE PTR [rax],0x2c
  424350:	cmp    BYTE PTR [rbx+0x31],0x0
  424354:	movsxd rbp,r9d
  424357:	jne    424448 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x128>
  42435d:	mov    rsi,QWORD PTR [rbx+0x28]
  424361:	cmp    rsi,QWORD PTR [rbx+0x20]
  424365:	jae    4243f8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
  42436b:	mov    BYTE PTR [rsi],0x22
  42436e:	xor    edi,edi
  424370:	cmp    BYTE PTR [rbx+0x32],0x0
  424374:	mov    rdx,rbp
  424377:	mov    rsi,r15
  42437a:	sete   dil
  42437e:	add    rdi,QWORD PTR [rbx+0x28]
  424382:	lea    rax,[rdi+rbp*1]
  424386:	cmp    QWORD PTR [rbx+0x20],rax
  42438a:	mov    QWORD PTR [rbx+0x28],rdi
  42438e:	ja     424430 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x110>
  424394:	mov    rdi,rbx
  424397:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42439c:	mov    rbp,QWORD PTR [rbx+0x28]
  4243a0:	mov    BYTE PTR [rbp+0x0],0x22
  4243a4:	xor    eax,eax
  4243a6:	cmp    BYTE PTR [rbx+0x32],0x0
  4243aa:	sete   al
  4243ad:	add    rax,QWORD PTR [rbx+0x28]
  4243b1:	xor    esi,esi
  4243b3:	lea    rdx,[rax+0x1]
  4243b7:	mov    QWORD PTR [rbx+0x28],rdx
  4243bb:	mov    BYTE PTR [rax],0x3a
  4243be:	mov    rax,QWORD PTR [rbx+0x28]
  4243c2:	mov    BYTE PTR [rax],0x20
  4243c5:	cmp    BYTE PTR [rbx+0x31],0x0
  4243c9:	setne  sil
  4243cd:	add    rsi,QWORD PTR [rbx+0x28]
  4243d1:	cmp    BYTE PTR [rbx+0x33],0x0
  4243d5:	mov    QWORD PTR [rbx+0x28],rsi
  4243d9:	jne    424410 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xf0>
  4243db:	add    rsp,0x8
  4243df:	mov    rsi,r12
  4243e2:	mov    rdi,rbx
  4243e5:	mov    rax,r13
  4243e8:	pop    rbx
  4243e9:	pop    rbp
  4243ea:	pop    r12
  4243ec:	pop    r13
  4243ee:	pop    r14
  4243f0:	pop    r15
  4243f2:	jmp    rax
  4243f4:	nop    DWORD PTR [rax+0x0]
  4243f8:	xor    esi,esi
  4243fa:	mov    rdi,rbx
  4243fd:	call   QWORD PTR [rbx+0x48]
  424400:	mov    rsi,QWORD PTR [rbx+0x28]
  424404:	jmp    42436b <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  424409:	nop    DWORD PTR [rax+0x0]
  424410:	mov    rdi,r12
  424413:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  424418:	cdqe   
  42441a:	add    QWORD PTR [rbx+0x28],rax
  42441e:	add    rsp,0x8
  424422:	pop    rbx
  424423:	pop    rbp
  424424:	pop    r12
  424426:	pop    r13
  424428:	pop    r14
  42442a:	pop    r15
  42442c:	ret    
  42442d:	nop    DWORD PTR [rax]
  424430:	call   4050e0 <memcpy@plt>
  424435:	add    rbp,QWORD PTR [rbx+0x28]
  424439:	mov    QWORD PTR [rbx+0x28],rbp
  42443d:	jmp    4243a0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x80>
  424442:	nop    WORD PTR [rax+rax*1+0x0]
  424448:	mov    rax,QWORD PTR [rbx+0x28]
  42444c:	lea    rdx,[rax+0x1]
  424450:	mov    QWORD PTR [rbx+0x28],rdx
  424454:	mov    BYTE PTR [rax],0xa
  424457:	movzx  esi,BYTE PTR [rbx+0x31]
  42445b:	mov    rdi,QWORD PTR [rbx+0x28]
  42445f:	imul   esi,DWORD PTR [rbx+0x38]
  424463:	movsxd r14,esi
  424466:	lea    rax,[rdi+r14*1]
  42446a:	cmp    QWORD PTR [rbx+0x20],rax
  42446e:	jb     424490 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x170>
  424470:	mov    esi,0x20
  424475:	mov    rdx,r14
  424478:	call   405090 <memset@plt>
  42447d:	mov    rsi,r14
  424480:	add    rsi,QWORD PTR [rbx+0x28]
  424484:	mov    QWORD PTR [rbx+0x28],rsi
  424488:	jmp    42436b <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  42448d:	nop    DWORD PTR [rax]
  424490:	mov    rsi,r14
  424493:	mov    rdi,rbx
  424496:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42449b:	mov    rsi,QWORD PTR [rbx+0x28]
  42449f:	jmp    42436b <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  4244a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4244af:	nop

00000000004244b0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  4244b0:	push   r15
  4244b2:	push   r14
  4244b4:	mov    r15,r8
  4244b7:	push   r13
  4244b9:	push   r12
  4244bb:	push   rbp
  4244bc:	push   rbx
  4244bd:	mov    rbx,rdi
  4244c0:	sub    rsp,0x8
  4244c4:	test   esi,esi
  4244c6:	movzx  r13d,BYTE PTR [rdx+rcx*1]
  4244cb:	mov    r12,QWORD PTR [rsp+0x40]
  4244d0:	je     4244e1 <flatcc_json_printer_int8_enum_struct_field@@Base+0x31>
  4244d2:	mov    rax,QWORD PTR [rdi+0x28]
  4244d6:	lea    rdx,[rax+0x1]
  4244da:	mov    QWORD PTR [rdi+0x28],rdx
  4244de:	mov    BYTE PTR [rax],0x2c
  4244e1:	cmp    BYTE PTR [rbx+0x31],0x0
  4244e5:	movsxd rbp,r9d
  4244e8:	jne    424600 <flatcc_json_printer_int8_enum_struct_field@@Base+0x150>
  4244ee:	mov    rsi,QWORD PTR [rbx+0x28]
  4244f2:	cmp    rsi,QWORD PTR [rbx+0x20]
  4244f6:	jae    4245a0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xf0>
  4244fc:	mov    BYTE PTR [rsi],0x22
  4244ff:	xor    edi,edi
  424501:	cmp    BYTE PTR [rbx+0x32],0x0
  424505:	mov    rdx,rbp
  424508:	mov    rsi,r15
  42450b:	sete   dil
  42450f:	add    rdi,QWORD PTR [rbx+0x28]
  424513:	lea    rax,[rdi+rbp*1]
  424517:	cmp    QWORD PTR [rbx+0x20],rax
  42451b:	mov    QWORD PTR [rbx+0x28],rdi
  42451f:	ja     4245c8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x118>
  424525:	mov    rdi,rbx
  424528:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42452d:	mov    rbp,QWORD PTR [rbx+0x28]
  424531:	mov    BYTE PTR [rbp+0x0],0x22
  424535:	xor    eax,eax
  424537:	cmp    BYTE PTR [rbx+0x32],0x0
  42453b:	sete   al
  42453e:	add    rax,QWORD PTR [rbx+0x28]
  424542:	xor    esi,esi
  424544:	lea    rdx,[rax+0x1]
  424548:	mov    QWORD PTR [rbx+0x28],rdx
  42454c:	mov    BYTE PTR [rax],0x3a
  42454f:	mov    rax,QWORD PTR [rbx+0x28]
  424553:	mov    BYTE PTR [rax],0x20
  424556:	cmp    BYTE PTR [rbx+0x31],0x0
  42455a:	setne  sil
  42455e:	add    rsi,QWORD PTR [rbx+0x28]
  424562:	cmp    BYTE PTR [rbx+0x33],0x0
  424566:	mov    QWORD PTR [rbx+0x28],rsi
  42456a:	je     4245e0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
  42456c:	movsx  r8d,r13b
  424570:	shr    r8d,0x1f
  424574:	test   r13b,r13b
  424577:	js     4245b8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x108>
  424579:	movzx  edi,r13b
  42457d:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  424582:	add    r8d,eax
  424585:	movsxd r8,r8d
  424588:	add    QWORD PTR [rbx+0x28],r8
  42458c:	add    rsp,0x8
  424590:	pop    rbx
  424591:	pop    rbp
  424592:	pop    r12
  424594:	pop    r13
  424596:	pop    r14
  424598:	pop    r15
  42459a:	ret    
  42459b:	nop    DWORD PTR [rax+rax*1+0x0]
  4245a0:	xor    esi,esi
  4245a2:	mov    rdi,rbx
  4245a5:	call   QWORD PTR [rbx+0x48]
  4245a8:	mov    rsi,QWORD PTR [rbx+0x28]
  4245ac:	jmp    4244fc <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  4245b1:	nop    DWORD PTR [rax+0x0]
  4245b8:	mov    BYTE PTR [rsi],0x2d
  4245bb:	neg    r13d
  4245be:	add    rsi,0x1
  4245c2:	jmp    424579 <flatcc_json_printer_int8_enum_struct_field@@Base+0xc9>
  4245c4:	nop    DWORD PTR [rax+0x0]
  4245c8:	call   4050e0 <memcpy@plt>
  4245cd:	add    rbp,QWORD PTR [rbx+0x28]
  4245d1:	mov    QWORD PTR [rbx+0x28],rbp
  4245d5:	jmp    424531 <flatcc_json_printer_int8_enum_struct_field@@Base+0x81>
  4245da:	nop    WORD PTR [rax+rax*1+0x0]
  4245e0:	add    rsp,0x8
  4245e4:	movsx  esi,r13b
  4245e8:	mov    rdi,rbx
  4245eb:	mov    rax,r12
  4245ee:	pop    rbx
  4245ef:	pop    rbp
  4245f0:	pop    r12
  4245f2:	pop    r13
  4245f4:	pop    r14
  4245f6:	pop    r15
  4245f8:	jmp    rax
  4245fa:	nop    WORD PTR [rax+rax*1+0x0]
  424600:	mov    rax,QWORD PTR [rbx+0x28]
  424604:	lea    rdx,[rax+0x1]
  424608:	mov    QWORD PTR [rbx+0x28],rdx
  42460c:	mov    BYTE PTR [rax],0xa
  42460f:	movzx  esi,BYTE PTR [rbx+0x31]
  424613:	mov    rdi,QWORD PTR [rbx+0x28]
  424617:	imul   esi,DWORD PTR [rbx+0x38]
  42461b:	movsxd r14,esi
  42461e:	lea    rax,[rdi+r14*1]
  424622:	cmp    QWORD PTR [rbx+0x20],rax
  424626:	jb     424648 <flatcc_json_printer_int8_enum_struct_field@@Base+0x198>
  424628:	mov    esi,0x20
  42462d:	mov    rdx,r14
  424630:	call   405090 <memset@plt>
  424635:	mov    rsi,r14
  424638:	add    rsi,QWORD PTR [rbx+0x28]
  42463c:	mov    QWORD PTR [rbx+0x28],rsi
  424640:	jmp    4244fc <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  424645:	nop    DWORD PTR [rax]
  424648:	mov    rsi,r14
  42464b:	mov    rdi,rbx
  42464e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424653:	mov    rsi,QWORD PTR [rbx+0x28]
  424657:	jmp    4244fc <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  42465c:	nop    DWORD PTR [rax+0x0]

0000000000424660 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  424660:	push   r15
  424662:	push   r14
  424664:	mov    r15,r8
  424667:	push   r13
  424669:	push   r12
  42466b:	push   rbp
  42466c:	push   rbx
  42466d:	mov    rbx,rdi
  424670:	sub    rsp,0x8
  424674:	test   esi,esi
  424676:	movzx  r13d,WORD PTR [rdx+rcx*1]
  42467b:	mov    r12,QWORD PTR [rsp+0x40]
  424680:	je     424691 <flatcc_json_printer_int16_enum_struct_field@@Base+0x31>
  424682:	mov    rax,QWORD PTR [rdi+0x28]
  424686:	lea    rdx,[rax+0x1]
  42468a:	mov    QWORD PTR [rdi+0x28],rdx
  42468e:	mov    BYTE PTR [rax],0x2c
  424691:	cmp    BYTE PTR [rbx+0x31],0x0
  424695:	movsxd rbp,r9d
  424698:	jne    4247b0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x150>
  42469e:	mov    rsi,QWORD PTR [rbx+0x28]
  4246a2:	cmp    rsi,QWORD PTR [rbx+0x20]
  4246a6:	jae    424750 <flatcc_json_printer_int16_enum_struct_field@@Base+0xf0>
  4246ac:	mov    BYTE PTR [rsi],0x22
  4246af:	xor    edi,edi
  4246b1:	cmp    BYTE PTR [rbx+0x32],0x0
  4246b5:	mov    rdx,rbp
  4246b8:	mov    rsi,r15
  4246bb:	sete   dil
  4246bf:	add    rdi,QWORD PTR [rbx+0x28]
  4246c3:	lea    rax,[rdi+rbp*1]
  4246c7:	cmp    QWORD PTR [rbx+0x20],rax
  4246cb:	mov    QWORD PTR [rbx+0x28],rdi
  4246cf:	ja     424778 <flatcc_json_printer_int16_enum_struct_field@@Base+0x118>
  4246d5:	mov    rdi,rbx
  4246d8:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4246dd:	mov    rbp,QWORD PTR [rbx+0x28]
  4246e1:	mov    BYTE PTR [rbp+0x0],0x22
  4246e5:	xor    eax,eax
  4246e7:	cmp    BYTE PTR [rbx+0x32],0x0
  4246eb:	sete   al
  4246ee:	add    rax,QWORD PTR [rbx+0x28]
  4246f2:	xor    esi,esi
  4246f4:	lea    rdx,[rax+0x1]
  4246f8:	mov    QWORD PTR [rbx+0x28],rdx
  4246fc:	mov    BYTE PTR [rax],0x3a
  4246ff:	mov    rax,QWORD PTR [rbx+0x28]
  424703:	mov    BYTE PTR [rax],0x20
  424706:	cmp    BYTE PTR [rbx+0x31],0x0
  42470a:	setne  sil
  42470e:	add    rsi,QWORD PTR [rbx+0x28]
  424712:	cmp    BYTE PTR [rbx+0x33],0x0
  424716:	mov    QWORD PTR [rbx+0x28],rsi
  42471a:	je     424790 <flatcc_json_printer_int16_enum_struct_field@@Base+0x130>
  42471c:	movsx  r11d,r13w
  424720:	shr    r11d,0x1f
  424724:	test   r13w,r13w
  424728:	js     424768 <flatcc_json_printer_int16_enum_struct_field@@Base+0x108>
  42472a:	movzx  edi,r13w
  42472e:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  424733:	add    r11d,eax
  424736:	movsxd r11,r11d
  424739:	add    QWORD PTR [rbx+0x28],r11
  42473d:	add    rsp,0x8
  424741:	pop    rbx
  424742:	pop    rbp
  424743:	pop    r12
  424745:	pop    r13
  424747:	pop    r14
  424749:	pop    r15
  42474b:	ret    
  42474c:	nop    DWORD PTR [rax+0x0]
  424750:	xor    esi,esi
  424752:	mov    rdi,rbx
  424755:	call   QWORD PTR [rbx+0x48]
  424758:	mov    rsi,QWORD PTR [rbx+0x28]
  42475c:	jmp    4246ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  424761:	nop    DWORD PTR [rax+0x0]
  424768:	mov    BYTE PTR [rsi],0x2d
  42476b:	neg    r13d
  42476e:	add    rsi,0x1
  424772:	jmp    42472a <flatcc_json_printer_int16_enum_struct_field@@Base+0xca>
  424774:	nop    DWORD PTR [rax+0x0]
  424778:	call   4050e0 <memcpy@plt>
  42477d:	add    rbp,QWORD PTR [rbx+0x28]
  424781:	mov    QWORD PTR [rbx+0x28],rbp
  424785:	jmp    4246e1 <flatcc_json_printer_int16_enum_struct_field@@Base+0x81>
  42478a:	nop    WORD PTR [rax+rax*1+0x0]
  424790:	add    rsp,0x8
  424794:	movsx  esi,r13w
  424798:	mov    rdi,rbx
  42479b:	mov    rax,r12
  42479e:	pop    rbx
  42479f:	pop    rbp
  4247a0:	pop    r12
  4247a2:	pop    r13
  4247a4:	pop    r14
  4247a6:	pop    r15
  4247a8:	jmp    rax
  4247aa:	nop    WORD PTR [rax+rax*1+0x0]
  4247b0:	mov    rax,QWORD PTR [rbx+0x28]
  4247b4:	lea    rdx,[rax+0x1]
  4247b8:	mov    QWORD PTR [rbx+0x28],rdx
  4247bc:	mov    BYTE PTR [rax],0xa
  4247bf:	movzx  esi,BYTE PTR [rbx+0x31]
  4247c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4247c7:	imul   esi,DWORD PTR [rbx+0x38]
  4247cb:	movsxd r14,esi
  4247ce:	lea    rax,[rdi+r14*1]
  4247d2:	cmp    QWORD PTR [rbx+0x20],rax
  4247d6:	jb     4247f8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x198>
  4247d8:	mov    esi,0x20
  4247dd:	mov    rdx,r14
  4247e0:	call   405090 <memset@plt>
  4247e5:	mov    rsi,r14
  4247e8:	add    rsi,QWORD PTR [rbx+0x28]
  4247ec:	mov    QWORD PTR [rbx+0x28],rsi
  4247f0:	jmp    4246ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  4247f5:	nop    DWORD PTR [rax]
  4247f8:	mov    rsi,r14
  4247fb:	mov    rdi,rbx
  4247fe:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424803:	mov    rsi,QWORD PTR [rbx+0x28]
  424807:	jmp    4246ac <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  42480c:	nop    DWORD PTR [rax+0x0]

0000000000424810 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  424810:	push   r15
  424812:	push   r14
  424814:	mov    r15,r8
  424817:	push   r13
  424819:	push   r12
  42481b:	push   rbp
  42481c:	push   rbx
  42481d:	mov    rbx,rdi
  424820:	sub    rsp,0x8
  424824:	test   esi,esi
  424826:	mov    r13d,DWORD PTR [rdx+rcx*1]
  42482a:	mov    r12,QWORD PTR [rsp+0x40]
  42482f:	je     424840 <flatcc_json_printer_int32_enum_struct_field@@Base+0x30>
  424831:	mov    rax,QWORD PTR [rdi+0x28]
  424835:	lea    rdx,[rax+0x1]
  424839:	mov    QWORD PTR [rdi+0x28],rdx
  42483d:	mov    BYTE PTR [rax],0x2c
  424840:	cmp    BYTE PTR [rbx+0x31],0x0
  424844:	movsxd rbp,r9d
  424847:	jne    424960 <flatcc_json_printer_int32_enum_struct_field@@Base+0x150>
  42484d:	mov    rsi,QWORD PTR [rbx+0x28]
  424851:	cmp    rsi,QWORD PTR [rbx+0x20]
  424855:	jae    424900 <flatcc_json_printer_int32_enum_struct_field@@Base+0xf0>
  42485b:	mov    BYTE PTR [rsi],0x22
  42485e:	xor    edi,edi
  424860:	cmp    BYTE PTR [rbx+0x32],0x0
  424864:	mov    rdx,rbp
  424867:	mov    rsi,r15
  42486a:	sete   dil
  42486e:	add    rdi,QWORD PTR [rbx+0x28]
  424872:	lea    rax,[rdi+rbp*1]
  424876:	cmp    QWORD PTR [rbx+0x20],rax
  42487a:	mov    QWORD PTR [rbx+0x28],rdi
  42487e:	ja     424928 <flatcc_json_printer_int32_enum_struct_field@@Base+0x118>
  424884:	mov    rdi,rbx
  424887:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42488c:	mov    rbp,QWORD PTR [rbx+0x28]
  424890:	mov    BYTE PTR [rbp+0x0],0x22
  424894:	xor    eax,eax
  424896:	cmp    BYTE PTR [rbx+0x32],0x0
  42489a:	sete   al
  42489d:	add    rax,QWORD PTR [rbx+0x28]
  4248a1:	xor    esi,esi
  4248a3:	lea    rdx,[rax+0x1]
  4248a7:	mov    QWORD PTR [rbx+0x28],rdx
  4248ab:	mov    BYTE PTR [rax],0x3a
  4248ae:	mov    rax,QWORD PTR [rbx+0x28]
  4248b2:	mov    BYTE PTR [rax],0x20
  4248b5:	cmp    BYTE PTR [rbx+0x31],0x0
  4248b9:	setne  sil
  4248bd:	add    rsi,QWORD PTR [rbx+0x28]
  4248c1:	cmp    BYTE PTR [rbx+0x33],0x0
  4248c5:	mov    QWORD PTR [rbx+0x28],rsi
  4248c9:	je     424940 <flatcc_json_printer_int32_enum_struct_field@@Base+0x130>
  4248cb:	mov    r10d,r13d
  4248ce:	shr    r10d,0x1f
  4248d2:	test   r13d,r13d
  4248d5:	js     424918 <flatcc_json_printer_int32_enum_struct_field@@Base+0x108>
  4248d7:	mov    edi,r13d
  4248da:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4248df:	add    r10d,eax
  4248e2:	movsxd r10,r10d
  4248e5:	add    QWORD PTR [rbx+0x28],r10
  4248e9:	add    rsp,0x8
  4248ed:	pop    rbx
  4248ee:	pop    rbp
  4248ef:	pop    r12
  4248f1:	pop    r13
  4248f3:	pop    r14
  4248f5:	pop    r15
  4248f7:	ret    
  4248f8:	nop    DWORD PTR [rax+rax*1+0x0]
  424900:	xor    esi,esi
  424902:	mov    rdi,rbx
  424905:	call   QWORD PTR [rbx+0x48]
  424908:	mov    rsi,QWORD PTR [rbx+0x28]
  42490c:	jmp    42485b <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  424911:	nop    DWORD PTR [rax+0x0]
  424918:	mov    BYTE PTR [rsi],0x2d
  42491b:	neg    r13d
  42491e:	add    rsi,0x1
  424922:	jmp    4248d7 <flatcc_json_printer_int32_enum_struct_field@@Base+0xc7>
  424924:	nop    DWORD PTR [rax+0x0]
  424928:	call   4050e0 <memcpy@plt>
  42492d:	add    rbp,QWORD PTR [rbx+0x28]
  424931:	mov    QWORD PTR [rbx+0x28],rbp
  424935:	jmp    424890 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
  42493a:	nop    WORD PTR [rax+rax*1+0x0]
  424940:	add    rsp,0x8
  424944:	mov    esi,r13d
  424947:	mov    rdi,rbx
  42494a:	mov    rax,r12
  42494d:	pop    rbx
  42494e:	pop    rbp
  42494f:	pop    r12
  424951:	pop    r13
  424953:	pop    r14
  424955:	pop    r15
  424957:	jmp    rax
  424959:	nop    DWORD PTR [rax+0x0]
  424960:	mov    rax,QWORD PTR [rbx+0x28]
  424964:	lea    rdx,[rax+0x1]
  424968:	mov    QWORD PTR [rbx+0x28],rdx
  42496c:	mov    BYTE PTR [rax],0xa
  42496f:	movzx  esi,BYTE PTR [rbx+0x31]
  424973:	mov    rdi,QWORD PTR [rbx+0x28]
  424977:	imul   esi,DWORD PTR [rbx+0x38]
  42497b:	movsxd r14,esi
  42497e:	lea    rax,[rdi+r14*1]
  424982:	cmp    QWORD PTR [rbx+0x20],rax
  424986:	jb     4249a8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x198>
  424988:	mov    esi,0x20
  42498d:	mov    rdx,r14
  424990:	call   405090 <memset@plt>
  424995:	mov    rsi,r14
  424998:	add    rsi,QWORD PTR [rbx+0x28]
  42499c:	mov    QWORD PTR [rbx+0x28],rsi
  4249a0:	jmp    42485b <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  4249a5:	nop    DWORD PTR [rax]
  4249a8:	mov    rsi,r14
  4249ab:	mov    rdi,rbx
  4249ae:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4249b3:	mov    rsi,QWORD PTR [rbx+0x28]
  4249b7:	jmp    42485b <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  4249bc:	nop    DWORD PTR [rax+0x0]

00000000004249c0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  4249c0:	push   r15
  4249c2:	push   r14
  4249c4:	mov    r15,r8
  4249c7:	push   r13
  4249c9:	push   r12
  4249cb:	push   rbp
  4249cc:	push   rbx
  4249cd:	mov    rbx,rdi
  4249d0:	sub    rsp,0x8
  4249d4:	test   esi,esi
  4249d6:	mov    r13,QWORD PTR [rdx+rcx*1]
  4249da:	mov    r12,QWORD PTR [rsp+0x40]
  4249df:	je     4249f0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x30>
  4249e1:	mov    rax,QWORD PTR [rdi+0x28]
  4249e5:	lea    rdx,[rax+0x1]
  4249e9:	mov    QWORD PTR [rdi+0x28],rdx
  4249ed:	mov    BYTE PTR [rax],0x2c
  4249f0:	cmp    BYTE PTR [rbx+0x31],0x0
  4249f4:	movsxd rbp,r9d
  4249f7:	jne    424b10 <flatcc_json_printer_int64_enum_struct_field@@Base+0x150>
  4249fd:	mov    rsi,QWORD PTR [rbx+0x28]
  424a01:	cmp    rsi,QWORD PTR [rbx+0x20]
  424a05:	jae    424ab0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xf0>
  424a0b:	mov    BYTE PTR [rsi],0x22
  424a0e:	xor    edi,edi
  424a10:	cmp    BYTE PTR [rbx+0x32],0x0
  424a14:	mov    rdx,rbp
  424a17:	mov    rsi,r15
  424a1a:	sete   dil
  424a1e:	add    rdi,QWORD PTR [rbx+0x28]
  424a22:	lea    rax,[rdi+rbp*1]
  424a26:	cmp    QWORD PTR [rbx+0x20],rax
  424a2a:	mov    QWORD PTR [rbx+0x28],rdi
  424a2e:	ja     424ad8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x118>
  424a34:	mov    rdi,rbx
  424a37:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424a3c:	mov    rbp,QWORD PTR [rbx+0x28]
  424a40:	mov    BYTE PTR [rbp+0x0],0x22
  424a44:	xor    eax,eax
  424a46:	cmp    BYTE PTR [rbx+0x32],0x0
  424a4a:	sete   al
  424a4d:	add    rax,QWORD PTR [rbx+0x28]
  424a51:	xor    esi,esi
  424a53:	lea    rdx,[rax+0x1]
  424a57:	mov    QWORD PTR [rbx+0x28],rdx
  424a5b:	mov    BYTE PTR [rax],0x3a
  424a5e:	mov    rax,QWORD PTR [rbx+0x28]
  424a62:	mov    BYTE PTR [rax],0x20
  424a65:	cmp    BYTE PTR [rbx+0x31],0x0
  424a69:	setne  sil
  424a6d:	add    rsi,QWORD PTR [rbx+0x28]
  424a71:	cmp    BYTE PTR [rbx+0x33],0x0
  424a75:	mov    QWORD PTR [rbx+0x28],rsi
  424a79:	je     424af0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x130>
  424a7b:	mov    rbp,r13
  424a7e:	shr    rbp,0x3f
  424a82:	test   r13,r13
  424a85:	js     424ac8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x108>
  424a87:	mov    rdi,r13
  424a8a:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  424a8f:	add    eax,ebp
  424a91:	cdqe   
  424a93:	add    QWORD PTR [rbx+0x28],rax
  424a97:	add    rsp,0x8
  424a9b:	pop    rbx
  424a9c:	pop    rbp
  424a9d:	pop    r12
  424a9f:	pop    r13
  424aa1:	pop    r14
  424aa3:	pop    r15
  424aa5:	ret    
  424aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424ab0:	xor    esi,esi
  424ab2:	mov    rdi,rbx
  424ab5:	call   QWORD PTR [rbx+0x48]
  424ab8:	mov    rsi,QWORD PTR [rbx+0x28]
  424abc:	jmp    424a0b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  424ac1:	nop    DWORD PTR [rax+0x0]
  424ac8:	mov    BYTE PTR [rsi],0x2d
  424acb:	neg    r13
  424ace:	add    rsi,0x1
  424ad2:	jmp    424a87 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc7>
  424ad4:	nop    DWORD PTR [rax+0x0]
  424ad8:	call   4050e0 <memcpy@plt>
  424add:	add    rbp,QWORD PTR [rbx+0x28]
  424ae1:	mov    QWORD PTR [rbx+0x28],rbp
  424ae5:	jmp    424a40 <flatcc_json_printer_int64_enum_struct_field@@Base+0x80>
  424aea:	nop    WORD PTR [rax+rax*1+0x0]
  424af0:	add    rsp,0x8
  424af4:	mov    rsi,r13
  424af7:	mov    rdi,rbx
  424afa:	mov    rax,r12
  424afd:	pop    rbx
  424afe:	pop    rbp
  424aff:	pop    r12
  424b01:	pop    r13
  424b03:	pop    r14
  424b05:	pop    r15
  424b07:	jmp    rax
  424b09:	nop    DWORD PTR [rax+0x0]
  424b10:	mov    rax,QWORD PTR [rbx+0x28]
  424b14:	lea    rdx,[rax+0x1]
  424b18:	mov    QWORD PTR [rbx+0x28],rdx
  424b1c:	mov    BYTE PTR [rax],0xa
  424b1f:	movzx  esi,BYTE PTR [rbx+0x31]
  424b23:	mov    rdi,QWORD PTR [rbx+0x28]
  424b27:	imul   esi,DWORD PTR [rbx+0x38]
  424b2b:	movsxd r14,esi
  424b2e:	lea    rax,[rdi+r14*1]
  424b32:	cmp    QWORD PTR [rbx+0x20],rax
  424b36:	jb     424b58 <flatcc_json_printer_int64_enum_struct_field@@Base+0x198>
  424b38:	mov    esi,0x20
  424b3d:	mov    rdx,r14
  424b40:	call   405090 <memset@plt>
  424b45:	mov    rsi,r14
  424b48:	add    rsi,QWORD PTR [rbx+0x28]
  424b4c:	mov    QWORD PTR [rbx+0x28],rsi
  424b50:	jmp    424a0b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  424b55:	nop    DWORD PTR [rax]
  424b58:	mov    rsi,r14
  424b5b:	mov    rdi,rbx
  424b5e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424b63:	mov    rsi,QWORD PTR [rbx+0x28]
  424b67:	jmp    424a0b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  424b6c:	nop    DWORD PTR [rax+0x0]

0000000000424b70 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  424b70:	push   r15
  424b72:	push   r14
  424b74:	mov    r15,r8
  424b77:	push   r13
  424b79:	push   r12
  424b7b:	push   rbp
  424b7c:	push   rbx
  424b7d:	mov    rbx,rdi
  424b80:	sub    rsp,0x8
  424b84:	test   esi,esi
  424b86:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  424b8b:	mov    r13,QWORD PTR [rsp+0x40]
  424b90:	je     424ba1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x31>
  424b92:	mov    rax,QWORD PTR [rdi+0x28]
  424b96:	lea    rdx,[rax+0x1]
  424b9a:	mov    QWORD PTR [rdi+0x28],rdx
  424b9e:	mov    BYTE PTR [rax],0x2c
  424ba1:	cmp    BYTE PTR [rbx+0x31],0x0
  424ba5:	movsxd rbp,r9d
  424ba8:	jne    424ca8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x138>
  424bae:	mov    rsi,QWORD PTR [rbx+0x28]
  424bb2:	cmp    rsi,QWORD PTR [rbx+0x20]
  424bb6:	jae    424c50 <flatcc_json_printer_bool_enum_struct_field@@Base+0xe0>
  424bbc:	mov    BYTE PTR [rsi],0x22
  424bbf:	xor    edi,edi
  424bc1:	cmp    BYTE PTR [rbx+0x32],0x0
  424bc5:	mov    rdx,rbp
  424bc8:	mov    rsi,r15
  424bcb:	sete   dil
  424bcf:	add    rdi,QWORD PTR [rbx+0x28]
  424bd3:	lea    rax,[rdi+rbp*1]
  424bd7:	cmp    QWORD PTR [rbx+0x20],rax
  424bdb:	mov    QWORD PTR [rbx+0x28],rdi
  424bdf:	ja     424c90 <flatcc_json_printer_bool_enum_struct_field@@Base+0x120>
  424be5:	mov    rdi,rbx
  424be8:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424bed:	mov    rbp,QWORD PTR [rbx+0x28]
  424bf1:	mov    BYTE PTR [rbp+0x0],0x22
  424bf5:	xor    eax,eax
  424bf7:	cmp    BYTE PTR [rbx+0x32],0x0
  424bfb:	sete   al
  424bfe:	add    rax,QWORD PTR [rbx+0x28]
  424c02:	xor    esi,esi
  424c04:	lea    rdx,[rax+0x1]
  424c08:	mov    QWORD PTR [rbx+0x28],rdx
  424c0c:	mov    BYTE PTR [rax],0x3a
  424c0f:	mov    rax,QWORD PTR [rbx+0x28]
  424c13:	mov    BYTE PTR [rax],0x20
  424c16:	cmp    BYTE PTR [rbx+0x31],0x0
  424c1a:	setne  sil
  424c1e:	add    rsi,QWORD PTR [rbx+0x28]
  424c22:	cmp    BYTE PTR [rbx+0x33],0x0
  424c26:	mov    QWORD PTR [rbx+0x28],rsi
  424c2a:	jne    424c68 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf8>
  424c2c:	add    rsp,0x8
  424c30:	movzx  esi,r12b
  424c34:	mov    rdi,rbx
  424c37:	mov    rax,r13
  424c3a:	pop    rbx
  424c3b:	pop    rbp
  424c3c:	pop    r12
  424c3e:	pop    r13
  424c40:	pop    r14
  424c42:	pop    r15
  424c44:	jmp    rax
  424c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c50:	xor    esi,esi
  424c52:	mov    rdi,rbx
  424c55:	call   QWORD PTR [rbx+0x48]
  424c58:	mov    rsi,QWORD PTR [rbx+0x28]
  424c5c:	jmp    424bbc <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  424c61:	nop    DWORD PTR [rax+0x0]
  424c68:	movzx  edi,r12b
  424c6c:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  424c71:	cdqe   
  424c73:	add    QWORD PTR [rbx+0x28],rax
  424c77:	add    rsp,0x8
  424c7b:	pop    rbx
  424c7c:	pop    rbp
  424c7d:	pop    r12
  424c7f:	pop    r13
  424c81:	pop    r14
  424c83:	pop    r15
  424c85:	ret    
  424c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c90:	call   4050e0 <memcpy@plt>
  424c95:	add    rbp,QWORD PTR [rbx+0x28]
  424c99:	mov    QWORD PTR [rbx+0x28],rbp
  424c9d:	jmp    424bf1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x81>
  424ca2:	nop    WORD PTR [rax+rax*1+0x0]
  424ca8:	mov    rax,QWORD PTR [rbx+0x28]
  424cac:	lea    rdx,[rax+0x1]
  424cb0:	mov    QWORD PTR [rbx+0x28],rdx
  424cb4:	mov    BYTE PTR [rax],0xa
  424cb7:	movzx  esi,BYTE PTR [rbx+0x31]
  424cbb:	mov    rdi,QWORD PTR [rbx+0x28]
  424cbf:	imul   esi,DWORD PTR [rbx+0x38]
  424cc3:	movsxd r14,esi
  424cc6:	lea    rax,[rdi+r14*1]
  424cca:	cmp    QWORD PTR [rbx+0x20],rax
  424cce:	jb     424cf0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x180>
  424cd0:	mov    esi,0x20
  424cd5:	mov    rdx,r14
  424cd8:	call   405090 <memset@plt>
  424cdd:	mov    rsi,r14
  424ce0:	add    rsi,QWORD PTR [rbx+0x28]
  424ce4:	mov    QWORD PTR [rbx+0x28],rsi
  424ce8:	jmp    424bbc <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  424ced:	nop    DWORD PTR [rax]
  424cf0:	mov    rsi,r14
  424cf3:	mov    rdi,rbx
  424cf6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424cfb:	mov    rsi,QWORD PTR [rbx+0x28]
  424cff:	jmp    424bbc <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  424d04:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424d0f:	nop

0000000000424d10 <flatcc_json_printer_uint8_vector_field@@Base>:
  424d10:	lea    eax,[rdx+rdx*1+0x4]
  424d14:	cmp    eax,DWORD PTR [rsi+0x10]
  424d17:	jge    424e32 <flatcc_json_printer_uint8_vector_field@@Base+0x122>
  424d1d:	push   r15
  424d1f:	push   r14
  424d21:	push   r13
  424d23:	push   r12
  424d25:	push   rbp
  424d26:	push   rbx
  424d27:	sub    rsp,0x8
  424d2b:	mov    rdx,QWORD PTR [rsi+0x8]
  424d2f:	movzx  ebp,WORD PTR [rdx+rax*1]
  424d33:	test   bp,bp
  424d36:	je     424e24 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
  424d3c:	add    rbp,QWORD PTR [rsi]
  424d3f:	je     424e24 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
  424d45:	mov    eax,DWORD PTR [rsi+0x18]
  424d48:	lea    edx,[rax+0x1]
  424d4b:	test   eax,eax
  424d4d:	mov    DWORD PTR [rsi+0x18],edx
  424d50:	je     424d61 <flatcc_json_printer_uint8_vector_field@@Base+0x51>
  424d52:	mov    rax,QWORD PTR [rdi+0x28]
  424d56:	lea    rdx,[rax+0x1]
  424d5a:	mov    QWORD PTR [rdi+0x28],rdx
  424d5e:	mov    BYTE PTR [rax],0x2c
  424d61:	mov    eax,DWORD PTR [rbp+0x0]
  424d64:	mov    r15,rcx
  424d67:	mov    rbx,rdi
  424d6a:	movsxd r13,r8d
  424d6d:	add    rbp,rax
  424d70:	cmp    BYTE PTR [rdi+0x31],0x0
  424d74:	mov    rax,QWORD PTR [rdi+0x28]
  424d78:	mov    r12d,DWORD PTR [rbp+0x0]
  424d7c:	jne    424fa8 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
  424d82:	cmp    rax,QWORD PTR [rdi+0x20]
  424d86:	jb     424d91 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  424d88:	xor    esi,esi
  424d8a:	call   QWORD PTR [rdi+0x48]
  424d8d:	mov    rax,QWORD PTR [rbx+0x28]
  424d91:	mov    BYTE PTR [rax],0x22
  424d94:	xor    edi,edi
  424d96:	cmp    BYTE PTR [rbx+0x32],0x0
  424d9a:	mov    rdx,r13
  424d9d:	mov    rsi,r15
  424da0:	sete   dil
  424da4:	add    rdi,QWORD PTR [rbx+0x28]
  424da8:	lea    rax,[rdi+r13*1]
  424dac:	cmp    QWORD PTR [rbx+0x20],rax
  424db0:	mov    QWORD PTR [rbx+0x28],rdi
  424db4:	ja     424f30 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
  424dba:	mov    rdi,rbx
  424dbd:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424dc2:	mov    r13,QWORD PTR [rbx+0x28]
  424dc6:	mov    BYTE PTR [r13+0x0],0x22
  424dcb:	xor    eax,eax
  424dcd:	cmp    BYTE PTR [rbx+0x32],0x0
  424dd1:	sete   al
  424dd4:	add    rax,QWORD PTR [rbx+0x28]
  424dd8:	lea    rdx,[rax+0x1]
  424ddc:	mov    QWORD PTR [rbx+0x28],rdx
  424de0:	mov    BYTE PTR [rax],0x3a
  424de3:	mov    rax,QWORD PTR [rbx+0x28]
  424de7:	mov    BYTE PTR [rax],0x20
  424dea:	xor    eax,eax
  424dec:	cmp    BYTE PTR [rbx+0x31],0x0
  424df0:	setne  al
  424df3:	add    rax,QWORD PTR [rbx+0x28]
  424df7:	add    DWORD PTR [rbx+0x38],0x1
  424dfb:	test   r12d,r12d
  424dfe:	lea    rdx,[rax+0x1]
  424e02:	mov    QWORD PTR [rbx+0x28],rdx
  424e06:	mov    BYTE PTR [rax],0x5b
  424e09:	jne    424e38 <flatcc_json_printer_uint8_vector_field@@Base+0x128>
  424e0b:	mov    rax,QWORD PTR [rbx+0x28]
  424e0f:	cmp    BYTE PTR [rbx+0x31],0x0
  424e13:	jne    424f48 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
  424e19:	lea    rdx,[rax+0x1]
  424e1d:	mov    QWORD PTR [rbx+0x28],rdx
  424e21:	mov    BYTE PTR [rax],0x5d
  424e24:	add    rsp,0x8
  424e28:	pop    rbx
  424e29:	pop    rbp
  424e2a:	pop    r12
  424e2c:	pop    r13
  424e2e:	pop    r14
  424e30:	pop    r15
  424e32:	repz ret 
  424e34:	nop    DWORD PTR [rax+0x0]
  424e38:	cmp    BYTE PTR [rbx+0x31],0x0
  424e3c:	jne    424ff0 <flatcc_json_printer_uint8_vector_field@@Base+0x2e0>
  424e42:	mov    rsi,QWORD PTR [rbx+0x28]
  424e46:	cmp    rsi,QWORD PTR [rbx+0x20]
  424e4a:	jae    425010 <flatcc_json_printer_uint8_vector_field@@Base+0x300>
  424e50:	movzx  edi,BYTE PTR [rbp+0x4]
  424e54:	lea    r13,[rbp+0x5]
  424e58:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  424e5d:	cdqe   
  424e5f:	add    rax,QWORD PTR [rbx+0x28]
  424e63:	cmp    r12d,0x1
  424e67:	lea    edx,[r12-0x2]
  424e6c:	mov    QWORD PTR [rbx+0x28],rax
  424e70:	je     424e0f <flatcc_json_printer_uint8_vector_field@@Base+0xff>
  424e72:	lea    rbp,[rbp+rdx*1+0x6]
  424e77:	jmp    424eab <flatcc_json_printer_uint8_vector_field@@Base+0x19b>
  424e79:	nop    DWORD PTR [rax+0x0]
  424e80:	mov    rsi,QWORD PTR [rbx+0x28]
  424e84:	cmp    rsi,QWORD PTR [rbx+0x20]
  424e88:	jae    424f00 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  424e8a:	movzx  edi,BYTE PTR [r13+0x0]
  424e8f:	add    r13,0x1
  424e93:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  424e98:	cdqe   
  424e9a:	add    rax,QWORD PTR [rbx+0x28]
  424e9e:	cmp    r13,rbp
  424ea1:	mov    QWORD PTR [rbx+0x28],rax
  424ea5:	je     424e0f <flatcc_json_printer_uint8_vector_field@@Base+0xff>
  424eab:	lea    rdx,[rax+0x1]
  424eaf:	mov    QWORD PTR [rbx+0x28],rdx
  424eb3:	mov    BYTE PTR [rax],0x2c
  424eb6:	cmp    BYTE PTR [rbx+0x31],0x0
  424eba:	je     424e80 <flatcc_json_printer_uint8_vector_field@@Base+0x170>
  424ebc:	mov    rax,QWORD PTR [rbx+0x28]
  424ec0:	lea    rdx,[rax+0x1]
  424ec4:	mov    QWORD PTR [rbx+0x28],rdx
  424ec8:	mov    BYTE PTR [rax],0xa
  424ecb:	movzx  esi,BYTE PTR [rbx+0x31]
  424ecf:	mov    rdi,QWORD PTR [rbx+0x28]
  424ed3:	imul   esi,DWORD PTR [rbx+0x38]
  424ed7:	movsxd r12,esi
  424eda:	lea    rax,[rdi+r12*1]
  424ede:	cmp    QWORD PTR [rbx+0x20],rax
  424ee2:	jb     424f18 <flatcc_json_printer_uint8_vector_field@@Base+0x208>
  424ee4:	mov    esi,0x20
  424ee9:	mov    rdx,r12
  424eec:	call   405090 <memset@plt>
  424ef1:	mov    rsi,r12
  424ef4:	add    rsi,QWORD PTR [rbx+0x28]
  424ef8:	mov    QWORD PTR [rbx+0x28],rsi
  424efc:	jmp    424e8a <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  424efe:	xchg   ax,ax
  424f00:	xor    esi,esi
  424f02:	mov    rdi,rbx
  424f05:	call   QWORD PTR [rbx+0x48]
  424f08:	mov    rsi,QWORD PTR [rbx+0x28]
  424f0c:	jmp    424e8a <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  424f11:	nop    DWORD PTR [rax+0x0]
  424f18:	mov    rsi,r12
  424f1b:	mov    rdi,rbx
  424f1e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424f23:	mov    rsi,QWORD PTR [rbx+0x28]
  424f27:	jmp    424e8a <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  424f2c:	nop    DWORD PTR [rax+0x0]
  424f30:	call   4050e0 <memcpy@plt>
  424f35:	add    r13,QWORD PTR [rbx+0x28]
  424f39:	mov    QWORD PTR [rbx+0x28],r13
  424f3d:	jmp    424dc6 <flatcc_json_printer_uint8_vector_field@@Base+0xb6>
  424f42:	nop    WORD PTR [rax+rax*1+0x0]
  424f48:	lea    rdx,[rax+0x1]
  424f4c:	mov    QWORD PTR [rbx+0x28],rdx
  424f50:	mov    BYTE PTR [rax],0xa
  424f53:	mov    eax,DWORD PTR [rbx+0x38]
  424f56:	mov    rdi,QWORD PTR [rbx+0x28]
  424f5a:	lea    ebp,[rax-0x1]
  424f5d:	movzx  eax,BYTE PTR [rbx+0x31]
  424f61:	mov    DWORD PTR [rbx+0x38],ebp
  424f64:	imul   eax,ebp
  424f67:	movsxd rbp,eax
  424f6a:	lea    rax,[rdi+rbp*1]
  424f6e:	cmp    QWORD PTR [rbx+0x20],rax
  424f72:	jb     424f90 <flatcc_json_printer_uint8_vector_field@@Base+0x280>
  424f74:	mov    rdx,rbp
  424f77:	mov    esi,0x20
  424f7c:	call   405090 <memset@plt>
  424f81:	mov    rax,rbp
  424f84:	add    rax,QWORD PTR [rbx+0x28]
  424f88:	jmp    424e19 <flatcc_json_printer_uint8_vector_field@@Base+0x109>
  424f8d:	nop    DWORD PTR [rax]
  424f90:	mov    rsi,rbp
  424f93:	mov    rdi,rbx
  424f96:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424f9b:	mov    rax,QWORD PTR [rbx+0x28]
  424f9f:	jmp    424e19 <flatcc_json_printer_uint8_vector_field@@Base+0x109>
  424fa4:	nop    DWORD PTR [rax+0x0]
  424fa8:	lea    rdx,[rax+0x1]
  424fac:	mov    QWORD PTR [rdi+0x28],rdx
  424fb0:	mov    BYTE PTR [rax],0xa
  424fb3:	movzx  eax,BYTE PTR [rdi+0x31]
  424fb7:	imul   eax,DWORD PTR [rdi+0x38]
  424fbb:	mov    rdi,QWORD PTR [rdi+0x28]
  424fbf:	movsxd r14,eax
  424fc2:	lea    rax,[rdi+r14*1]
  424fc6:	cmp    QWORD PTR [rbx+0x20],rax
  424fca:	jb     425021 <flatcc_json_printer_uint8_vector_field@@Base+0x311>
  424fcc:	mov    rdx,r14
  424fcf:	mov    esi,0x20
  424fd4:	call   405090 <memset@plt>
  424fd9:	mov    rax,r14
  424fdc:	add    rax,QWORD PTR [rbx+0x28]
  424fe0:	mov    QWORD PTR [rbx+0x28],rax
  424fe4:	jmp    424d91 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  424fe9:	nop    DWORD PTR [rax+0x0]
  424ff0:	mov    rax,QWORD PTR [rbx+0x28]
  424ff4:	mov    rdi,rbx
  424ff7:	lea    rdx,[rax+0x1]
  424ffb:	mov    QWORD PTR [rbx+0x28],rdx
  424fff:	mov    BYTE PTR [rax],0xa
  425002:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425007:	mov    rsi,QWORD PTR [rbx+0x28]
  42500b:	jmp    424e50 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
  425010:	xor    esi,esi
  425012:	mov    rdi,rbx
  425015:	call   QWORD PTR [rbx+0x48]
  425018:	mov    rsi,QWORD PTR [rbx+0x28]
  42501c:	jmp    424e50 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
  425021:	mov    rsi,r14
  425024:	mov    rdi,rbx
  425027:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42502c:	mov    rax,QWORD PTR [rbx+0x28]
  425030:	jmp    424d91 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  425035:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000425040 <flatcc_json_printer_utype_vector_field@@Base>:
  425040:	jmp    424d10 <flatcc_json_printer_uint8_vector_field@@Base>
  425045:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000425050 <flatcc_json_printer_uint16_vector_field@@Base>:
  425050:	lea    eax,[rdx+rdx*1+0x4]
  425054:	cmp    eax,DWORD PTR [rsi+0x10]
  425057:	jge    4250e8 <flatcc_json_printer_uint16_vector_field@@Base+0x98>
  42505d:	push   r13
  42505f:	push   r12
  425061:	push   rbp
  425062:	push   rbx
  425063:	sub    rsp,0x8
  425067:	mov    rdx,QWORD PTR [rsi+0x8]
  42506b:	movzx  ebp,WORD PTR [rdx+rax*1]
  42506f:	test   bp,bp
  425072:	je     4250de <flatcc_json_printer_uint16_vector_field@@Base+0x8e>
  425074:	add    rbp,QWORD PTR [rsi]
  425077:	je     4250de <flatcc_json_printer_uint16_vector_field@@Base+0x8e>
  425079:	mov    eax,DWORD PTR [rsi+0x18]
  42507c:	lea    edx,[rax+0x1]
  42507f:	test   eax,eax
  425081:	mov    DWORD PTR [rsi+0x18],edx
  425084:	je     425095 <flatcc_json_printer_uint16_vector_field@@Base+0x45>
  425086:	mov    rax,QWORD PTR [rdi+0x28]
  42508a:	lea    rdx,[rax+0x1]
  42508e:	mov    QWORD PTR [rdi+0x28],rdx
  425092:	mov    BYTE PTR [rax],0x2c
  425095:	mov    eax,DWORD PTR [rbp+0x0]
  425098:	mov    rbx,rdi
  42509b:	movsxd rdx,r8d
  42509e:	mov    rsi,rcx
  4250a1:	add    rbp,rax
  4250a4:	mov    r12d,DWORD PTR [rbp+0x0]
  4250a8:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4250ad:	mov    rax,QWORD PTR [rbx+0x28]
  4250b1:	add    DWORD PTR [rbx+0x38],0x1
  4250b5:	test   r12d,r12d
  4250b8:	lea    rdx,[rax+0x1]
  4250bc:	mov    QWORD PTR [rbx+0x28],rdx
  4250c0:	mov    BYTE PTR [rax],0x5b
  4250c3:	jne    4250f0 <flatcc_json_printer_uint16_vector_field@@Base+0xa0>
  4250c5:	mov    rax,QWORD PTR [rbx+0x28]
  4250c9:	cmp    BYTE PTR [rbx+0x31],0x0
  4250cd:	jne    4251f0 <flatcc_json_printer_uint16_vector_field@@Base+0x1a0>
  4250d3:	lea    rdx,[rax+0x1]
  4250d7:	mov    QWORD PTR [rbx+0x28],rdx
  4250db:	mov    BYTE PTR [rax],0x5d
  4250de:	add    rsp,0x8
  4250e2:	pop    rbx
  4250e3:	pop    rbp
  4250e4:	pop    r12
  4250e6:	pop    r13
  4250e8:	repz ret 
  4250ea:	nop    WORD PTR [rax+rax*1+0x0]
  4250f0:	cmp    BYTE PTR [rbx+0x31],0x0
  4250f4:	jne    425250 <flatcc_json_printer_uint16_vector_field@@Base+0x200>
  4250fa:	mov    rsi,QWORD PTR [rbx+0x28]
  4250fe:	cmp    rsi,QWORD PTR [rbx+0x20]
  425102:	jae    425270 <flatcc_json_printer_uint16_vector_field@@Base+0x220>
  425108:	movzx  edi,WORD PTR [rbp+0x4]
  42510c:	lea    r13,[rbp+0x6]
  425110:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  425115:	cdqe   
  425117:	add    rax,QWORD PTR [rbx+0x28]
  42511b:	cmp    r12d,0x1
  42511f:	lea    edx,[r12-0x2]
  425124:	mov    QWORD PTR [rbx+0x28],rax
  425128:	je     4250c9 <flatcc_json_printer_uint16_vector_field@@Base+0x79>
  42512a:	lea    rbp,[rbp+rdx*2+0x8]
  42512f:	jmp    425163 <flatcc_json_printer_uint16_vector_field@@Base+0x113>
  425131:	nop    DWORD PTR [rax+0x0]
  425138:	mov    rsi,QWORD PTR [rbx+0x28]
  42513c:	cmp    rsi,QWORD PTR [rbx+0x20]
  425140:	jae    4251c0 <flatcc_json_printer_uint16_vector_field@@Base+0x170>
  425142:	movzx  edi,WORD PTR [r13+0x0]
  425147:	add    r13,0x2
  42514b:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  425150:	cdqe   
  425152:	add    rax,QWORD PTR [rbx+0x28]
  425156:	cmp    r13,rbp
  425159:	mov    QWORD PTR [rbx+0x28],rax
  42515d:	je     4250c9 <flatcc_json_printer_uint16_vector_field@@Base+0x79>
  425163:	lea    rdx,[rax+0x1]
  425167:	mov    QWORD PTR [rbx+0x28],rdx
  42516b:	mov    BYTE PTR [rax],0x2c
  42516e:	cmp    BYTE PTR [rbx+0x31],0x0
  425172:	je     425138 <flatcc_json_printer_uint16_vector_field@@Base+0xe8>
  425174:	mov    rax,QWORD PTR [rbx+0x28]
  425178:	lea    rdx,[rax+0x1]
  42517c:	mov    QWORD PTR [rbx+0x28],rdx
  425180:	mov    BYTE PTR [rax],0xa
  425183:	movzx  esi,BYTE PTR [rbx+0x31]
  425187:	mov    rdi,QWORD PTR [rbx+0x28]
  42518b:	imul   esi,DWORD PTR [rbx+0x38]
  42518f:	movsxd r12,esi
  425192:	lea    rax,[rdi+r12*1]
  425196:	cmp    QWORD PTR [rbx+0x20],rax
  42519a:	jb     4251d8 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
  42519c:	mov    esi,0x20
  4251a1:	mov    rdx,r12
  4251a4:	call   405090 <memset@plt>
  4251a9:	mov    rsi,r12
  4251ac:	add    rsi,QWORD PTR [rbx+0x28]
  4251b0:	mov    QWORD PTR [rbx+0x28],rsi
  4251b4:	jmp    425142 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  4251b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4251c0:	xor    esi,esi
  4251c2:	mov    rdi,rbx
  4251c5:	call   QWORD PTR [rbx+0x48]
  4251c8:	mov    rsi,QWORD PTR [rbx+0x28]
  4251cc:	jmp    425142 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  4251d1:	nop    DWORD PTR [rax+0x0]
  4251d8:	mov    rsi,r12
  4251db:	mov    rdi,rbx
  4251de:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4251e3:	mov    rsi,QWORD PTR [rbx+0x28]
  4251e7:	jmp    425142 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  4251ec:	nop    DWORD PTR [rax+0x0]
  4251f0:	lea    rdx,[rax+0x1]
  4251f4:	mov    QWORD PTR [rbx+0x28],rdx
  4251f8:	mov    BYTE PTR [rax],0xa
  4251fb:	mov    eax,DWORD PTR [rbx+0x38]
  4251fe:	mov    rdi,QWORD PTR [rbx+0x28]
  425202:	lea    ebp,[rax-0x1]
  425205:	movzx  eax,BYTE PTR [rbx+0x31]
  425209:	mov    DWORD PTR [rbx+0x38],ebp
  42520c:	imul   eax,ebp
  42520f:	movsxd rbp,eax
  425212:	lea    rax,[rdi+rbp*1]
  425216:	cmp    QWORD PTR [rbx+0x20],rax
  42521a:	jb     425238 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
  42521c:	mov    rdx,rbp
  42521f:	mov    esi,0x20
  425224:	call   405090 <memset@plt>
  425229:	mov    rax,rbp
  42522c:	add    rax,QWORD PTR [rbx+0x28]
  425230:	jmp    4250d3 <flatcc_json_printer_uint16_vector_field@@Base+0x83>
  425235:	nop    DWORD PTR [rax]
  425238:	mov    rsi,rbp
  42523b:	mov    rdi,rbx
  42523e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425243:	mov    rax,QWORD PTR [rbx+0x28]
  425247:	jmp    4250d3 <flatcc_json_printer_uint16_vector_field@@Base+0x83>
  42524c:	nop    DWORD PTR [rax+0x0]
  425250:	mov    rax,QWORD PTR [rbx+0x28]
  425254:	mov    rdi,rbx
  425257:	lea    rdx,[rax+0x1]
  42525b:	mov    QWORD PTR [rbx+0x28],rdx
  42525f:	mov    BYTE PTR [rax],0xa
  425262:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425267:	mov    rsi,QWORD PTR [rbx+0x28]
  42526b:	jmp    425108 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
  425270:	xor    esi,esi
  425272:	mov    rdi,rbx
  425275:	call   QWORD PTR [rbx+0x48]
  425278:	mov    rsi,QWORD PTR [rbx+0x28]
  42527c:	jmp    425108 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
  425281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42528c:	nop    DWORD PTR [rax+0x0]

0000000000425290 <flatcc_json_printer_uint32_vector_field@@Base>:
  425290:	lea    eax,[rdx+rdx*1+0x4]
  425294:	cmp    eax,DWORD PTR [rsi+0x10]
  425297:	jge    4253b2 <flatcc_json_printer_uint32_vector_field@@Base+0x122>
  42529d:	push   r15
  42529f:	push   r14
  4252a1:	push   r13
  4252a3:	push   r12
  4252a5:	push   rbp
  4252a6:	push   rbx
  4252a7:	sub    rsp,0x8
  4252ab:	mov    rdx,QWORD PTR [rsi+0x8]
  4252af:	movzx  ebp,WORD PTR [rdx+rax*1]
  4252b3:	test   bp,bp
  4252b6:	je     4253a4 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
  4252bc:	add    rbp,QWORD PTR [rsi]
  4252bf:	je     4253a4 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
  4252c5:	mov    eax,DWORD PTR [rsi+0x18]
  4252c8:	lea    edx,[rax+0x1]
  4252cb:	test   eax,eax
  4252cd:	mov    DWORD PTR [rsi+0x18],edx
  4252d0:	je     4252e1 <flatcc_json_printer_uint32_vector_field@@Base+0x51>
  4252d2:	mov    rax,QWORD PTR [rdi+0x28]
  4252d6:	lea    rdx,[rax+0x1]
  4252da:	mov    QWORD PTR [rdi+0x28],rdx
  4252de:	mov    BYTE PTR [rax],0x2c
  4252e1:	mov    eax,DWORD PTR [rbp+0x0]
  4252e4:	mov    r15,rcx
  4252e7:	mov    rbx,rdi
  4252ea:	movsxd r13,r8d
  4252ed:	add    rbp,rax
  4252f0:	cmp    BYTE PTR [rdi+0x31],0x0
  4252f4:	mov    rax,QWORD PTR [rdi+0x28]
  4252f8:	mov    r12d,DWORD PTR [rbp+0x0]
  4252fc:	jne    425528 <flatcc_json_printer_uint32_vector_field@@Base+0x298>
  425302:	cmp    rax,QWORD PTR [rdi+0x20]
  425306:	jb     425311 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  425308:	xor    esi,esi
  42530a:	call   QWORD PTR [rdi+0x48]
  42530d:	mov    rax,QWORD PTR [rbx+0x28]
  425311:	mov    BYTE PTR [rax],0x22
  425314:	xor    edi,edi
  425316:	cmp    BYTE PTR [rbx+0x32],0x0
  42531a:	mov    rdx,r13
  42531d:	mov    rsi,r15
  425320:	sete   dil
  425324:	add    rdi,QWORD PTR [rbx+0x28]
  425328:	lea    rax,[rdi+r13*1]
  42532c:	cmp    QWORD PTR [rbx+0x20],rax
  425330:	mov    QWORD PTR [rbx+0x28],rdi
  425334:	ja     4254b0 <flatcc_json_printer_uint32_vector_field@@Base+0x220>
  42533a:	mov    rdi,rbx
  42533d:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  425342:	mov    r13,QWORD PTR [rbx+0x28]
  425346:	mov    BYTE PTR [r13+0x0],0x22
  42534b:	xor    eax,eax
  42534d:	cmp    BYTE PTR [rbx+0x32],0x0
  425351:	sete   al
  425354:	add    rax,QWORD PTR [rbx+0x28]
  425358:	lea    rdx,[rax+0x1]
  42535c:	mov    QWORD PTR [rbx+0x28],rdx
  425360:	mov    BYTE PTR [rax],0x3a
  425363:	mov    rax,QWORD PTR [rbx+0x28]
  425367:	mov    BYTE PTR [rax],0x20
  42536a:	xor    eax,eax
  42536c:	cmp    BYTE PTR [rbx+0x31],0x0
  425370:	setne  al
  425373:	add    rax,QWORD PTR [rbx+0x28]
  425377:	add    DWORD PTR [rbx+0x38],0x1
  42537b:	test   r12d,r12d
  42537e:	lea    rdx,[rax+0x1]
  425382:	mov    QWORD PTR [rbx+0x28],rdx
  425386:	mov    BYTE PTR [rax],0x5b
  425389:	jne    4253b8 <flatcc_json_printer_uint32_vector_field@@Base+0x128>
  42538b:	mov    rax,QWORD PTR [rbx+0x28]
  42538f:	cmp    BYTE PTR [rbx+0x31],0x0
  425393:	jne    4254c8 <flatcc_json_printer_uint32_vector_field@@Base+0x238>
  425399:	lea    rdx,[rax+0x1]
  42539d:	mov    QWORD PTR [rbx+0x28],rdx
  4253a1:	mov    BYTE PTR [rax],0x5d
  4253a4:	add    rsp,0x8
  4253a8:	pop    rbx
  4253a9:	pop    rbp
  4253aa:	pop    r12
  4253ac:	pop    r13
  4253ae:	pop    r14
  4253b0:	pop    r15
  4253b2:	repz ret 
  4253b4:	nop    DWORD PTR [rax+0x0]
  4253b8:	cmp    BYTE PTR [rbx+0x31],0x0
  4253bc:	jne    425570 <flatcc_json_printer_uint32_vector_field@@Base+0x2e0>
  4253c2:	mov    rsi,QWORD PTR [rbx+0x28]
  4253c6:	cmp    rsi,QWORD PTR [rbx+0x20]
  4253ca:	jae    425590 <flatcc_json_printer_uint32_vector_field@@Base+0x300>
  4253d0:	mov    edi,DWORD PTR [rbp+0x4]
  4253d3:	lea    r13,[rbp+0x8]
  4253d7:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4253dc:	cdqe   
  4253de:	add    rax,QWORD PTR [rbx+0x28]
  4253e2:	cmp    r12d,0x1
  4253e6:	lea    edx,[r12-0x2]
  4253eb:	mov    QWORD PTR [rbx+0x28],rax
  4253ef:	je     42538f <flatcc_json_printer_uint32_vector_field@@Base+0xff>
  4253f1:	lea    rbp,[rbp+rdx*4+0xc]
  4253f6:	jmp    42542a <flatcc_json_printer_uint32_vector_field@@Base+0x19a>
  4253f8:	nop    DWORD PTR [rax+rax*1+0x0]
  425400:	mov    rsi,QWORD PTR [rbx+0x28]
  425404:	cmp    rsi,QWORD PTR [rbx+0x20]
  425408:	jae    425480 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
  42540a:	mov    edi,DWORD PTR [r13+0x0]
  42540e:	add    r13,0x4
  425412:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  425417:	cdqe   
  425419:	add    rax,QWORD PTR [rbx+0x28]
  42541d:	cmp    r13,rbp
  425420:	mov    QWORD PTR [rbx+0x28],rax
  425424:	je     42538f <flatcc_json_printer_uint32_vector_field@@Base+0xff>
  42542a:	lea    rdx,[rax+0x1]
  42542e:	mov    QWORD PTR [rbx+0x28],rdx
  425432:	mov    BYTE PTR [rax],0x2c
  425435:	cmp    BYTE PTR [rbx+0x31],0x0
  425439:	je     425400 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
  42543b:	mov    rax,QWORD PTR [rbx+0x28]
  42543f:	lea    rdx,[rax+0x1]
  425443:	mov    QWORD PTR [rbx+0x28],rdx
  425447:	mov    BYTE PTR [rax],0xa
  42544a:	movzx  esi,BYTE PTR [rbx+0x31]
  42544e:	mov    rdi,QWORD PTR [rbx+0x28]
  425452:	imul   esi,DWORD PTR [rbx+0x38]
  425456:	movsxd r12,esi
  425459:	lea    rax,[rdi+r12*1]
  42545d:	cmp    QWORD PTR [rbx+0x20],rax
  425461:	jb     425498 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
  425463:	mov    esi,0x20
  425468:	mov    rdx,r12
  42546b:	call   405090 <memset@plt>
  425470:	mov    rsi,r12
  425473:	add    rsi,QWORD PTR [rbx+0x28]
  425477:	mov    QWORD PTR [rbx+0x28],rsi
  42547b:	jmp    42540a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  42547d:	nop    DWORD PTR [rax]
  425480:	xor    esi,esi
  425482:	mov    rdi,rbx
  425485:	call   QWORD PTR [rbx+0x48]
  425488:	mov    rsi,QWORD PTR [rbx+0x28]
  42548c:	jmp    42540a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  425491:	nop    DWORD PTR [rax+0x0]
  425498:	mov    rsi,r12
  42549b:	mov    rdi,rbx
  42549e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4254a3:	mov    rsi,QWORD PTR [rbx+0x28]
  4254a7:	jmp    42540a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  4254ac:	nop    DWORD PTR [rax+0x0]
  4254b0:	call   4050e0 <memcpy@plt>
  4254b5:	add    r13,QWORD PTR [rbx+0x28]
  4254b9:	mov    QWORD PTR [rbx+0x28],r13
  4254bd:	jmp    425346 <flatcc_json_printer_uint32_vector_field@@Base+0xb6>
  4254c2:	nop    WORD PTR [rax+rax*1+0x0]
  4254c8:	lea    rdx,[rax+0x1]
  4254cc:	mov    QWORD PTR [rbx+0x28],rdx
  4254d0:	mov    BYTE PTR [rax],0xa
  4254d3:	mov    eax,DWORD PTR [rbx+0x38]
  4254d6:	mov    rdi,QWORD PTR [rbx+0x28]
  4254da:	lea    ebp,[rax-0x1]
  4254dd:	movzx  eax,BYTE PTR [rbx+0x31]
  4254e1:	mov    DWORD PTR [rbx+0x38],ebp
  4254e4:	imul   eax,ebp
  4254e7:	movsxd rbp,eax
  4254ea:	lea    rax,[rdi+rbp*1]
  4254ee:	cmp    QWORD PTR [rbx+0x20],rax
  4254f2:	jb     425510 <flatcc_json_printer_uint32_vector_field@@Base+0x280>
  4254f4:	mov    rdx,rbp
  4254f7:	mov    esi,0x20
  4254fc:	call   405090 <memset@plt>
  425501:	mov    rax,rbp
  425504:	add    rax,QWORD PTR [rbx+0x28]
  425508:	jmp    425399 <flatcc_json_printer_uint32_vector_field@@Base+0x109>
  42550d:	nop    DWORD PTR [rax]
  425510:	mov    rsi,rbp
  425513:	mov    rdi,rbx
  425516:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42551b:	mov    rax,QWORD PTR [rbx+0x28]
  42551f:	jmp    425399 <flatcc_json_printer_uint32_vector_field@@Base+0x109>
  425524:	nop    DWORD PTR [rax+0x0]
  425528:	lea    rdx,[rax+0x1]
  42552c:	mov    QWORD PTR [rdi+0x28],rdx
  425530:	mov    BYTE PTR [rax],0xa
  425533:	movzx  eax,BYTE PTR [rdi+0x31]
  425537:	imul   eax,DWORD PTR [rdi+0x38]
  42553b:	mov    rdi,QWORD PTR [rdi+0x28]
  42553f:	movsxd r14,eax
  425542:	lea    rax,[rdi+r14*1]
  425546:	cmp    QWORD PTR [rbx+0x20],rax
  42554a:	jb     4255a1 <flatcc_json_printer_uint32_vector_field@@Base+0x311>
  42554c:	mov    rdx,r14
  42554f:	mov    esi,0x20
  425554:	call   405090 <memset@plt>
  425559:	mov    rax,r14
  42555c:	add    rax,QWORD PTR [rbx+0x28]
  425560:	mov    QWORD PTR [rbx+0x28],rax
  425564:	jmp    425311 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  425569:	nop    DWORD PTR [rax+0x0]
  425570:	mov    rax,QWORD PTR [rbx+0x28]
  425574:	mov    rdi,rbx
  425577:	lea    rdx,[rax+0x1]
  42557b:	mov    QWORD PTR [rbx+0x28],rdx
  42557f:	mov    BYTE PTR [rax],0xa
  425582:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425587:	mov    rsi,QWORD PTR [rbx+0x28]
  42558b:	jmp    4253d0 <flatcc_json_printer_uint32_vector_field@@Base+0x140>
  425590:	xor    esi,esi
  425592:	mov    rdi,rbx
  425595:	call   QWORD PTR [rbx+0x48]
  425598:	mov    rsi,QWORD PTR [rbx+0x28]
  42559c:	jmp    4253d0 <flatcc_json_printer_uint32_vector_field@@Base+0x140>
  4255a1:	mov    rsi,r14
  4255a4:	mov    rdi,rbx
  4255a7:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4255ac:	mov    rax,QWORD PTR [rbx+0x28]
  4255b0:	jmp    425311 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  4255b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004255c0 <flatcc_json_printer_uint64_vector_field@@Base>:
  4255c0:	lea    eax,[rdx+rdx*1+0x4]
  4255c4:	cmp    eax,DWORD PTR [rsi+0x10]
  4255c7:	jge    42565a <flatcc_json_printer_uint64_vector_field@@Base+0x9a>
  4255cd:	push   r13
  4255cf:	push   r12
  4255d1:	push   rbp
  4255d2:	push   rbx
  4255d3:	sub    rsp,0x8
  4255d7:	mov    rdx,QWORD PTR [rsi+0x8]
  4255db:	movzx  r12d,WORD PTR [rdx+rax*1]
  4255e0:	test   r12w,r12w
  4255e4:	je     425650 <flatcc_json_printer_uint64_vector_field@@Base+0x90>
  4255e6:	add    r12,QWORD PTR [rsi]
  4255e9:	je     425650 <flatcc_json_printer_uint64_vector_field@@Base+0x90>
  4255eb:	mov    eax,DWORD PTR [rsi+0x18]
  4255ee:	lea    edx,[rax+0x1]
  4255f1:	test   eax,eax
  4255f3:	mov    DWORD PTR [rsi+0x18],edx
  4255f6:	je     425607 <flatcc_json_printer_uint64_vector_field@@Base+0x47>
  4255f8:	mov    rax,QWORD PTR [rdi+0x28]
  4255fc:	lea    rdx,[rax+0x1]
  425600:	mov    QWORD PTR [rdi+0x28],rdx
  425604:	mov    BYTE PTR [rax],0x2c
  425607:	mov    eax,DWORD PTR [r12]
  42560b:	mov    rbx,rdi
  42560e:	movsxd rdx,r8d
  425611:	mov    rsi,rcx
  425614:	add    r12,rax
  425617:	mov    ebp,DWORD PTR [r12]
  42561b:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  425620:	mov    rax,QWORD PTR [rbx+0x28]
  425624:	add    DWORD PTR [rbx+0x38],0x1
  425628:	test   ebp,ebp
  42562a:	lea    rdx,[rax+0x1]
  42562e:	mov    QWORD PTR [rbx+0x28],rdx
  425632:	mov    BYTE PTR [rax],0x5b
  425635:	jne    425660 <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
  425637:	mov    rax,QWORD PTR [rbx+0x28]
  42563b:	cmp    BYTE PTR [rbx+0x31],0x0
  42563f:	jne    425750 <flatcc_json_printer_uint64_vector_field@@Base+0x190>
  425645:	lea    rdx,[rax+0x1]
  425649:	mov    QWORD PTR [rbx+0x28],rdx
  42564d:	mov    BYTE PTR [rax],0x5d
  425650:	add    rsp,0x8
  425654:	pop    rbx
  425655:	pop    rbp
  425656:	pop    r12
  425658:	pop    r13
  42565a:	repz ret 
  42565c:	nop    DWORD PTR [rax+0x0]
  425660:	cmp    BYTE PTR [rbx+0x31],0x0
  425664:	jne    4257b0 <flatcc_json_printer_uint64_vector_field@@Base+0x1f0>
  42566a:	mov    rsi,QWORD PTR [rbx+0x28]
  42566e:	cmp    rsi,QWORD PTR [rbx+0x20]
  425672:	jae    4257d0 <flatcc_json_printer_uint64_vector_field@@Base+0x210>
  425678:	mov    rdi,QWORD PTR [r12+0x4]
  42567d:	lea    r13,[r12+0xc]
  425682:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  425687:	cdqe   
  425689:	add    rax,QWORD PTR [rbx+0x28]
  42568d:	cmp    ebp,0x1
  425690:	lea    edx,[rbp-0x2]
  425693:	mov    QWORD PTR [rbx+0x28],rax
  425697:	je     42563b <flatcc_json_printer_uint64_vector_field@@Base+0x7b>
  425699:	lea    rbp,[r12+rdx*8+0x14]
  42569e:	jmp    4256ca <flatcc_json_printer_uint64_vector_field@@Base+0x10a>
  4256a0:	mov    rsi,QWORD PTR [rbx+0x28]
  4256a4:	cmp    rsi,QWORD PTR [rbx+0x20]
  4256a8:	jae    425720 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  4256aa:	mov    rdi,QWORD PTR [r13+0x0]
  4256ae:	add    r13,0x8
  4256b2:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4256b7:	cdqe   
  4256b9:	add    rax,QWORD PTR [rbx+0x28]
  4256bd:	cmp    r13,rbp
  4256c0:	mov    QWORD PTR [rbx+0x28],rax
  4256c4:	je     42563b <flatcc_json_printer_uint64_vector_field@@Base+0x7b>
  4256ca:	lea    rdx,[rax+0x1]
  4256ce:	mov    QWORD PTR [rbx+0x28],rdx
  4256d2:	mov    BYTE PTR [rax],0x2c
  4256d5:	cmp    BYTE PTR [rbx+0x31],0x0
  4256d9:	je     4256a0 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  4256db:	mov    rax,QWORD PTR [rbx+0x28]
  4256df:	lea    rdx,[rax+0x1]
  4256e3:	mov    QWORD PTR [rbx+0x28],rdx
  4256e7:	mov    BYTE PTR [rax],0xa
  4256ea:	movzx  esi,BYTE PTR [rbx+0x31]
  4256ee:	mov    rdi,QWORD PTR [rbx+0x28]
  4256f2:	imul   esi,DWORD PTR [rbx+0x38]
  4256f6:	movsxd r12,esi
  4256f9:	lea    rax,[rdi+r12*1]
  4256fd:	cmp    QWORD PTR [rbx+0x20],rax
  425701:	jb     425738 <flatcc_json_printer_uint64_vector_field@@Base+0x178>
  425703:	mov    esi,0x20
  425708:	mov    rdx,r12
  42570b:	call   405090 <memset@plt>
  425710:	mov    rsi,r12
  425713:	add    rsi,QWORD PTR [rbx+0x28]
  425717:	mov    QWORD PTR [rbx+0x28],rsi
  42571b:	jmp    4256aa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  42571d:	nop    DWORD PTR [rax]
  425720:	xor    esi,esi
  425722:	mov    rdi,rbx
  425725:	call   QWORD PTR [rbx+0x48]
  425728:	mov    rsi,QWORD PTR [rbx+0x28]
  42572c:	jmp    4256aa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  425731:	nop    DWORD PTR [rax+0x0]
  425738:	mov    rsi,r12
  42573b:	mov    rdi,rbx
  42573e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425743:	mov    rsi,QWORD PTR [rbx+0x28]
  425747:	jmp    4256aa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  42574c:	nop    DWORD PTR [rax+0x0]
  425750:	lea    rdx,[rax+0x1]
  425754:	mov    QWORD PTR [rbx+0x28],rdx
  425758:	mov    BYTE PTR [rax],0xa
  42575b:	mov    eax,DWORD PTR [rbx+0x38]
  42575e:	mov    rdi,QWORD PTR [rbx+0x28]
  425762:	lea    ebp,[rax-0x1]
  425765:	movzx  eax,BYTE PTR [rbx+0x31]
  425769:	mov    DWORD PTR [rbx+0x38],ebp
  42576c:	imul   eax,ebp
  42576f:	movsxd rbp,eax
  425772:	lea    rax,[rdi+rbp*1]
  425776:	cmp    QWORD PTR [rbx+0x20],rax
  42577a:	jb     425798 <flatcc_json_printer_uint64_vector_field@@Base+0x1d8>
  42577c:	mov    rdx,rbp
  42577f:	mov    esi,0x20
  425784:	call   405090 <memset@plt>
  425789:	mov    rax,rbp
  42578c:	add    rax,QWORD PTR [rbx+0x28]
  425790:	jmp    425645 <flatcc_json_printer_uint64_vector_field@@Base+0x85>
  425795:	nop    DWORD PTR [rax]
  425798:	mov    rsi,rbp
  42579b:	mov    rdi,rbx
  42579e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4257a3:	mov    rax,QWORD PTR [rbx+0x28]
  4257a7:	jmp    425645 <flatcc_json_printer_uint64_vector_field@@Base+0x85>
  4257ac:	nop    DWORD PTR [rax+0x0]
  4257b0:	mov    rax,QWORD PTR [rbx+0x28]
  4257b4:	mov    rdi,rbx
  4257b7:	lea    rdx,[rax+0x1]
  4257bb:	mov    QWORD PTR [rbx+0x28],rdx
  4257bf:	mov    BYTE PTR [rax],0xa
  4257c2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4257c7:	mov    rsi,QWORD PTR [rbx+0x28]
  4257cb:	jmp    425678 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
  4257d0:	xor    esi,esi
  4257d2:	mov    rdi,rbx
  4257d5:	call   QWORD PTR [rbx+0x48]
  4257d8:	mov    rsi,QWORD PTR [rbx+0x28]
  4257dc:	jmp    425678 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
  4257e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4257ec:	nop    DWORD PTR [rax+0x0]

00000000004257f0 <flatcc_json_printer_int8_vector_field@@Base>:
  4257f0:	lea    eax,[rdx+rdx*1+0x4]
  4257f4:	cmp    eax,DWORD PTR [rsi+0x10]
  4257f7:	jge    425886 <flatcc_json_printer_int8_vector_field@@Base+0x96>
  4257fd:	push   r13
  4257ff:	push   r12
  425801:	push   rbp
  425802:	push   rbx
  425803:	sub    rsp,0x8
  425807:	mov    rdx,QWORD PTR [rsi+0x8]
  42580b:	movzx  ebx,WORD PTR [rdx+rax*1]
  42580f:	test   bx,bx
  425812:	je     42587c <flatcc_json_printer_int8_vector_field@@Base+0x8c>
  425814:	add    rbx,QWORD PTR [rsi]
  425817:	je     42587c <flatcc_json_printer_int8_vector_field@@Base+0x8c>
  425819:	mov    eax,DWORD PTR [rsi+0x18]
  42581c:	lea    edx,[rax+0x1]
  42581f:	test   eax,eax
  425821:	mov    DWORD PTR [rsi+0x18],edx
  425824:	je     425835 <flatcc_json_printer_int8_vector_field@@Base+0x45>
  425826:	mov    rax,QWORD PTR [rdi+0x28]
  42582a:	lea    rdx,[rax+0x1]
  42582e:	mov    QWORD PTR [rdi+0x28],rdx
  425832:	mov    BYTE PTR [rax],0x2c
  425835:	mov    eax,DWORD PTR [rbx]
  425837:	mov    rbp,rdi
  42583a:	movsxd rdx,r8d
  42583d:	mov    rsi,rcx
  425840:	add    rbx,rax
  425843:	mov    r12d,DWORD PTR [rbx]
  425846:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42584b:	mov    rax,QWORD PTR [rbp+0x28]
  42584f:	add    DWORD PTR [rbp+0x38],0x1
  425853:	test   r12d,r12d
  425856:	lea    rdx,[rax+0x1]
  42585a:	mov    QWORD PTR [rbp+0x28],rdx
  42585e:	mov    BYTE PTR [rax],0x5b
  425861:	jne    425890 <flatcc_json_printer_int8_vector_field@@Base+0xa0>
  425863:	mov    rax,QWORD PTR [rbp+0x28]
  425867:	cmp    BYTE PTR [rbp+0x31],0x0
  42586b:	jne    4259d0 <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
  425871:	lea    rdx,[rax+0x1]
  425875:	mov    QWORD PTR [rbp+0x28],rdx
  425879:	mov    BYTE PTR [rax],0x5d
  42587c:	add    rsp,0x8
  425880:	pop    rbx
  425881:	pop    rbp
  425882:	pop    r12
  425884:	pop    r13
  425886:	repz ret 
  425888:	nop    DWORD PTR [rax+rax*1+0x0]
  425890:	cmp    BYTE PTR [rbp+0x31],0x0
  425894:	jne    425a30 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  42589a:	mov    rsi,QWORD PTR [rbp+0x28]
  42589e:	cmp    rsi,QWORD PTR [rbp+0x20]
  4258a2:	jae    425a60 <flatcc_json_printer_int8_vector_field@@Base+0x270>
  4258a8:	movsx  r8d,BYTE PTR [rbx+0x4]
  4258ad:	mov    edi,r8d
  4258b0:	shr    r8d,0x1f
  4258b4:	test   dil,dil
  4258b7:	mov    r13d,r8d
  4258ba:	js     425a50 <flatcc_json_printer_int8_vector_field@@Base+0x260>
  4258c0:	movzx  edi,dil
  4258c4:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  4258c9:	add    eax,r13d
  4258cc:	lea    edx,[r12-0x2]
  4258d1:	lea    r13,[rbx+0x5]
  4258d5:	cdqe   
  4258d7:	add    rax,QWORD PTR [rbp+0x28]
  4258db:	cmp    r12d,0x1
  4258df:	mov    QWORD PTR [rbp+0x28],rax
  4258e3:	je     425867 <flatcc_json_printer_int8_vector_field@@Base+0x77>
  4258e5:	lea    rbx,[rbx+rdx*1+0x6]
  4258ea:	jmp    425935 <flatcc_json_printer_int8_vector_field@@Base+0x145>
  4258ec:	nop    DWORD PTR [rax+0x0]
  4258f0:	mov    rsi,QWORD PTR [rbp+0x28]
  4258f4:	cmp    rsi,QWORD PTR [rbp+0x20]
  4258f8:	jae    4259a0 <flatcc_json_printer_int8_vector_field@@Base+0x1b0>
  4258fe:	movsx  r8d,BYTE PTR [r13+0x0]
  425903:	mov    edi,r8d
  425906:	shr    r8d,0x1f
  42590a:	test   dil,dil
  42590d:	mov    r12d,r8d
  425910:	js     425990 <flatcc_json_printer_int8_vector_field@@Base+0x1a0>
  425912:	movzx  edi,dil
  425916:	add    r13,0x1
  42591a:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42591f:	add    eax,r12d
  425922:	cdqe   
  425924:	add    rax,QWORD PTR [rbp+0x28]
  425928:	cmp    r13,rbx
  42592b:	mov    QWORD PTR [rbp+0x28],rax
  42592f:	je     425867 <flatcc_json_printer_int8_vector_field@@Base+0x77>
  425935:	lea    rdx,[rax+0x1]
  425939:	mov    QWORD PTR [rbp+0x28],rdx
  42593d:	mov    BYTE PTR [rax],0x2c
  425940:	cmp    BYTE PTR [rbp+0x31],0x0
  425944:	je     4258f0 <flatcc_json_printer_int8_vector_field@@Base+0x100>
  425946:	mov    rax,QWORD PTR [rbp+0x28]
  42594a:	lea    rdx,[rax+0x1]
  42594e:	mov    QWORD PTR [rbp+0x28],rdx
  425952:	mov    BYTE PTR [rax],0xa
  425955:	movzx  esi,BYTE PTR [rbp+0x31]
  425959:	mov    rdi,QWORD PTR [rbp+0x28]
  42595d:	imul   esi,DWORD PTR [rbp+0x38]
  425961:	movsxd r12,esi
  425964:	lea    rax,[rdi+r12*1]
  425968:	cmp    QWORD PTR [rbp+0x20],rax
  42596c:	jb     4259b8 <flatcc_json_printer_int8_vector_field@@Base+0x1c8>
  42596e:	mov    esi,0x20
  425973:	mov    rdx,r12
  425976:	call   405090 <memset@plt>
  42597b:	mov    rsi,r12
  42597e:	add    rsi,QWORD PTR [rbp+0x28]
  425982:	mov    QWORD PTR [rbp+0x28],rsi
  425986:	jmp    4258fe <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  42598b:	nop    DWORD PTR [rax+rax*1+0x0]
  425990:	mov    BYTE PTR [rsi],0x2d
  425993:	neg    edi
  425995:	add    rsi,0x1
  425999:	jmp    425912 <flatcc_json_printer_int8_vector_field@@Base+0x122>
  42599e:	xchg   ax,ax
  4259a0:	xor    esi,esi
  4259a2:	mov    rdi,rbp
  4259a5:	call   QWORD PTR [rbp+0x48]
  4259a8:	mov    rsi,QWORD PTR [rbp+0x28]
  4259ac:	jmp    4258fe <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  4259b1:	nop    DWORD PTR [rax+0x0]
  4259b8:	mov    rsi,r12
  4259bb:	mov    rdi,rbp
  4259be:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4259c3:	mov    rsi,QWORD PTR [rbp+0x28]
  4259c7:	jmp    4258fe <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  4259cc:	nop    DWORD PTR [rax+0x0]
  4259d0:	lea    rdx,[rax+0x1]
  4259d4:	mov    QWORD PTR [rbp+0x28],rdx
  4259d8:	mov    BYTE PTR [rax],0xa
  4259db:	mov    eax,DWORD PTR [rbp+0x38]
  4259de:	mov    rdi,QWORD PTR [rbp+0x28]
  4259e2:	lea    ebx,[rax-0x1]
  4259e5:	movzx  eax,BYTE PTR [rbp+0x31]
  4259e9:	mov    DWORD PTR [rbp+0x38],ebx
  4259ec:	imul   eax,ebx
  4259ef:	movsxd rbx,eax
  4259f2:	lea    rax,[rdi+rbx*1]
  4259f6:	cmp    QWORD PTR [rbp+0x20],rax
  4259fa:	jb     425a18 <flatcc_json_printer_int8_vector_field@@Base+0x228>
  4259fc:	mov    rdx,rbx
  4259ff:	mov    esi,0x20
  425a04:	call   405090 <memset@plt>
  425a09:	mov    rax,rbx
  425a0c:	add    rax,QWORD PTR [rbp+0x28]
  425a10:	jmp    425871 <flatcc_json_printer_int8_vector_field@@Base+0x81>
  425a15:	nop    DWORD PTR [rax]
  425a18:	mov    rsi,rbx
  425a1b:	mov    rdi,rbp
  425a1e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425a23:	mov    rax,QWORD PTR [rbp+0x28]
  425a27:	jmp    425871 <flatcc_json_printer_int8_vector_field@@Base+0x81>
  425a2c:	nop    DWORD PTR [rax+0x0]
  425a30:	mov    rax,QWORD PTR [rbp+0x28]
  425a34:	mov    rdi,rbp
  425a37:	lea    rdx,[rax+0x1]
  425a3b:	mov    QWORD PTR [rbp+0x28],rdx
  425a3f:	mov    BYTE PTR [rax],0xa
  425a42:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425a47:	mov    rsi,QWORD PTR [rbp+0x28]
  425a4b:	jmp    4258a8 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
  425a50:	mov    BYTE PTR [rsi],0x2d
  425a53:	neg    edi
  425a55:	add    rsi,0x1
  425a59:	jmp    4258c0 <flatcc_json_printer_int8_vector_field@@Base+0xd0>
  425a5e:	xchg   ax,ax
  425a60:	xor    esi,esi
  425a62:	mov    rdi,rbp
  425a65:	call   QWORD PTR [rbp+0x48]
  425a68:	mov    rsi,QWORD PTR [rbp+0x28]
  425a6c:	jmp    4258a8 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
  425a71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425a7c:	nop    DWORD PTR [rax+0x0]

0000000000425a80 <flatcc_json_printer_int16_vector_field@@Base>:
  425a80:	lea    eax,[rdx+rdx*1+0x4]
  425a84:	cmp    eax,DWORD PTR [rsi+0x10]
  425a87:	jge    425b1c <flatcc_json_printer_int16_vector_field@@Base+0x9c>
  425a8d:	push   r13
  425a8f:	push   r12
  425a91:	push   rbp
  425a92:	push   rbx
  425a93:	sub    rsp,0x8
  425a97:	mov    rdx,QWORD PTR [rsi+0x8]
  425a9b:	movzx  ebx,WORD PTR [rdx+rax*1]
  425a9f:	test   bx,bx
  425aa2:	je     425b12 <flatcc_json_printer_int16_vector_field@@Base+0x92>
  425aa4:	add    rbx,QWORD PTR [rsi]
  425aa7:	je     425b12 <flatcc_json_printer_int16_vector_field@@Base+0x92>
  425aa9:	mov    eax,DWORD PTR [rsi+0x18]
  425aac:	lea    edx,[rax+0x1]
  425aaf:	test   eax,eax
  425ab1:	mov    DWORD PTR [rsi+0x18],edx
  425ab4:	je     425ac5 <flatcc_json_printer_int16_vector_field@@Base+0x45>
  425ab6:	mov    rax,QWORD PTR [rdi+0x28]
  425aba:	lea    rdx,[rax+0x1]
  425abe:	mov    QWORD PTR [rdi+0x28],rdx
  425ac2:	mov    BYTE PTR [rax],0x2c
  425ac5:	mov    eax,DWORD PTR [rbx]
  425ac7:	mov    r12,rdi
  425aca:	movsxd rdx,r8d
  425acd:	mov    rsi,rcx
  425ad0:	add    rbx,rax
  425ad3:	mov    ebp,DWORD PTR [rbx]
  425ad5:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  425ada:	mov    rax,QWORD PTR [r12+0x28]
  425adf:	add    DWORD PTR [r12+0x38],0x1
  425ae5:	test   ebp,ebp
  425ae7:	lea    rdx,[rax+0x1]
  425aeb:	mov    QWORD PTR [r12+0x28],rdx
  425af0:	mov    BYTE PTR [rax],0x5b
  425af3:	jne    425b20 <flatcc_json_printer_int16_vector_field@@Base+0xa0>
  425af5:	mov    rax,QWORD PTR [r12+0x28]
  425afa:	cmp    BYTE PTR [r12+0x31],0x0
  425b00:	jne    425c70 <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
  425b06:	lea    rdx,[rax+0x1]
  425b0a:	mov    QWORD PTR [r12+0x28],rdx
  425b0f:	mov    BYTE PTR [rax],0x5d
  425b12:	add    rsp,0x8
  425b16:	pop    rbx
  425b17:	pop    rbp
  425b18:	pop    r12
  425b1a:	pop    r13
  425b1c:	repz ret 
  425b1e:	xchg   ax,ax
  425b20:	cmp    BYTE PTR [r12+0x31],0x0
  425b26:	jne    425cd8 <flatcc_json_printer_int16_vector_field@@Base+0x258>
  425b2c:	mov    rsi,QWORD PTR [r12+0x28]
  425b31:	cmp    rsi,QWORD PTR [r12+0x20]
  425b36:	jae    425d10 <flatcc_json_printer_int16_vector_field@@Base+0x290>
  425b3c:	movsx  r11d,WORD PTR [rbx+0x4]
  425b41:	mov    edi,r11d
  425b44:	shr    r11d,0x1f
  425b48:	test   di,di
  425b4b:	mov    r13d,r11d
  425b4e:	js     425d00 <flatcc_json_printer_int16_vector_field@@Base+0x280>
  425b54:	movzx  edi,di
  425b57:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  425b5c:	add    eax,r13d
  425b5f:	lea    edx,[rbp-0x2]
  425b62:	lea    r13,[rbx+0x6]
  425b66:	cdqe   
  425b68:	add    rax,QWORD PTR [r12+0x28]
  425b6d:	cmp    ebp,0x1
  425b70:	mov    QWORD PTR [r12+0x28],rax
  425b75:	je     425afa <flatcc_json_printer_int16_vector_field@@Base+0x7a>
  425b77:	lea    rbx,[rbx+rdx*2+0x8]
  425b7c:	jmp    425bcb <flatcc_json_printer_int16_vector_field@@Base+0x14b>
  425b7e:	xchg   ax,ax
  425b80:	mov    rsi,QWORD PTR [r12+0x28]
  425b85:	cmp    rsi,QWORD PTR [r12+0x20]
  425b8a:	jae    425c40 <flatcc_json_printer_int16_vector_field@@Base+0x1c0>
  425b90:	movsx  r11d,WORD PTR [r13+0x0]
  425b95:	mov    edi,r11d
  425b98:	shr    r11d,0x1f
  425b9c:	test   di,di
  425b9f:	mov    ebp,r11d
  425ba2:	js     425c30 <flatcc_json_printer_int16_vector_field@@Base+0x1b0>
  425ba8:	movzx  edi,di
  425bab:	add    r13,0x2
  425baf:	call   41e620 <flatcc_json_parser_table_as_root@@Base+0x10>
  425bb4:	add    eax,ebp
  425bb6:	cdqe   
  425bb8:	add    rax,QWORD PTR [r12+0x28]
  425bbd:	cmp    r13,rbx
  425bc0:	mov    QWORD PTR [r12+0x28],rax
  425bc5:	je     425afa <flatcc_json_printer_int16_vector_field@@Base+0x7a>
  425bcb:	lea    rdx,[rax+0x1]
  425bcf:	mov    QWORD PTR [r12+0x28],rdx
  425bd4:	mov    BYTE PTR [rax],0x2c
  425bd7:	cmp    BYTE PTR [r12+0x31],0x0
  425bdd:	je     425b80 <flatcc_json_printer_int16_vector_field@@Base+0x100>
  425bdf:	mov    rax,QWORD PTR [r12+0x28]
  425be4:	lea    rdx,[rax+0x1]
  425be8:	mov    QWORD PTR [r12+0x28],rdx
  425bed:	mov    BYTE PTR [rax],0xa
  425bf0:	movzx  esi,BYTE PTR [r12+0x31]
  425bf6:	mov    rdi,QWORD PTR [r12+0x28]
  425bfb:	imul   esi,DWORD PTR [r12+0x38]
  425c01:	movsxd rbp,esi
  425c04:	lea    rax,[rdi+rbp*1]
  425c08:	cmp    QWORD PTR [r12+0x20],rax
  425c0d:	jb     425c58 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
  425c0f:	mov    esi,0x20
  425c14:	mov    rdx,rbp
  425c17:	call   405090 <memset@plt>
  425c1c:	mov    rsi,rbp
  425c1f:	add    rsi,QWORD PTR [r12+0x28]
  425c24:	mov    QWORD PTR [r12+0x28],rsi
  425c29:	jmp    425b90 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  425c2e:	xchg   ax,ax
  425c30:	mov    BYTE PTR [rsi],0x2d
  425c33:	neg    edi
  425c35:	add    rsi,0x1
  425c39:	jmp    425ba8 <flatcc_json_printer_int16_vector_field@@Base+0x128>
  425c3e:	xchg   ax,ax
  425c40:	xor    esi,esi
  425c42:	mov    rdi,r12
  425c45:	call   QWORD PTR [r12+0x48]
  425c4a:	mov    rsi,QWORD PTR [r12+0x28]
  425c4f:	jmp    425b90 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  425c54:	nop    DWORD PTR [rax+0x0]
  425c58:	mov    rsi,rbp
  425c5b:	mov    rdi,r12
  425c5e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425c63:	mov    rsi,QWORD PTR [r12+0x28]
  425c68:	jmp    425b90 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  425c6d:	nop    DWORD PTR [rax]
  425c70:	lea    rdx,[rax+0x1]
  425c74:	mov    QWORD PTR [r12+0x28],rdx
  425c79:	mov    BYTE PTR [rax],0xa
  425c7c:	mov    eax,DWORD PTR [r12+0x38]
  425c81:	mov    rdi,QWORD PTR [r12+0x28]
  425c86:	lea    ebx,[rax-0x1]
  425c89:	movzx  eax,BYTE PTR [r12+0x31]
  425c8f:	mov    DWORD PTR [r12+0x38],ebx
  425c94:	imul   eax,ebx
  425c97:	movsxd rbx,eax
  425c9a:	lea    rax,[rdi+rbx*1]
  425c9e:	cmp    QWORD PTR [r12+0x20],rax
  425ca3:	jb     425cc0 <flatcc_json_printer_int16_vector_field@@Base+0x240>
  425ca5:	mov    rdx,rbx
  425ca8:	mov    esi,0x20
  425cad:	call   405090 <memset@plt>
  425cb2:	mov    rax,rbx
  425cb5:	add    rax,QWORD PTR [r12+0x28]
  425cba:	jmp    425b06 <flatcc_json_printer_int16_vector_field@@Base+0x86>
  425cbf:	nop
  425cc0:	mov    rsi,rbx
  425cc3:	mov    rdi,r12
  425cc6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425ccb:	mov    rax,QWORD PTR [r12+0x28]
  425cd0:	jmp    425b06 <flatcc_json_printer_int16_vector_field@@Base+0x86>
  425cd5:	nop    DWORD PTR [rax]
  425cd8:	mov    rax,QWORD PTR [r12+0x28]
  425cdd:	mov    rdi,r12
  425ce0:	lea    rdx,[rax+0x1]
  425ce4:	mov    QWORD PTR [r12+0x28],rdx
  425ce9:	mov    BYTE PTR [rax],0xa
  425cec:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425cf1:	mov    rsi,QWORD PTR [r12+0x28]
  425cf6:	jmp    425b3c <flatcc_json_printer_int16_vector_field@@Base+0xbc>
  425cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  425d00:	mov    BYTE PTR [rsi],0x2d
  425d03:	neg    edi
  425d05:	add    rsi,0x1
  425d09:	jmp    425b54 <flatcc_json_printer_int16_vector_field@@Base+0xd4>
  425d0e:	xchg   ax,ax
  425d10:	xor    esi,esi
  425d12:	mov    rdi,r12
  425d15:	call   QWORD PTR [r12+0x48]
  425d1a:	mov    rsi,QWORD PTR [r12+0x28]
  425d1f:	jmp    425b3c <flatcc_json_printer_int16_vector_field@@Base+0xbc>
  425d24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425d2f:	nop

0000000000425d30 <flatcc_json_printer_int32_vector_field@@Base>:
  425d30:	lea    eax,[rdx+rdx*1+0x4]
  425d34:	cmp    eax,DWORD PTR [rsi+0x10]
  425d37:	jge    425dcc <flatcc_json_printer_int32_vector_field@@Base+0x9c>
  425d3d:	push   r13
  425d3f:	push   r12
  425d41:	push   rbp
  425d42:	push   rbx
  425d43:	sub    rsp,0x8
  425d47:	mov    rdx,QWORD PTR [rsi+0x8]
  425d4b:	movzx  ebx,WORD PTR [rdx+rax*1]
  425d4f:	test   bx,bx
  425d52:	je     425dc2 <flatcc_json_printer_int32_vector_field@@Base+0x92>
  425d54:	add    rbx,QWORD PTR [rsi]
  425d57:	je     425dc2 <flatcc_json_printer_int32_vector_field@@Base+0x92>
  425d59:	mov    eax,DWORD PTR [rsi+0x18]
  425d5c:	lea    edx,[rax+0x1]
  425d5f:	test   eax,eax
  425d61:	mov    DWORD PTR [rsi+0x18],edx
  425d64:	je     425d75 <flatcc_json_printer_int32_vector_field@@Base+0x45>
  425d66:	mov    rax,QWORD PTR [rdi+0x28]
  425d6a:	lea    rdx,[rax+0x1]
  425d6e:	mov    QWORD PTR [rdi+0x28],rdx
  425d72:	mov    BYTE PTR [rax],0x2c
  425d75:	mov    eax,DWORD PTR [rbx]
  425d77:	mov    r12,rdi
  425d7a:	movsxd rdx,r8d
  425d7d:	mov    rsi,rcx
  425d80:	add    rbx,rax
  425d83:	mov    ebp,DWORD PTR [rbx]
  425d85:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  425d8a:	mov    rax,QWORD PTR [r12+0x28]
  425d8f:	add    DWORD PTR [r12+0x38],0x1
  425d95:	test   ebp,ebp
  425d97:	lea    rdx,[rax+0x1]
  425d9b:	mov    QWORD PTR [r12+0x28],rdx
  425da0:	mov    BYTE PTR [rax],0x5b
  425da3:	jne    425dd0 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
  425da5:	mov    rax,QWORD PTR [r12+0x28]
  425daa:	cmp    BYTE PTR [r12+0x31],0x0
  425db0:	jne    425f20 <flatcc_json_printer_int32_vector_field@@Base+0x1f0>
  425db6:	lea    rdx,[rax+0x1]
  425dba:	mov    QWORD PTR [r12+0x28],rdx
  425dbf:	mov    BYTE PTR [rax],0x5d
  425dc2:	add    rsp,0x8
  425dc6:	pop    rbx
  425dc7:	pop    rbp
  425dc8:	pop    r12
  425dca:	pop    r13
  425dcc:	repz ret 
  425dce:	xchg   ax,ax
  425dd0:	cmp    BYTE PTR [r12+0x31],0x0
  425dd6:	jne    425f88 <flatcc_json_printer_int32_vector_field@@Base+0x258>
  425ddc:	mov    rsi,QWORD PTR [r12+0x28]
  425de1:	cmp    rsi,QWORD PTR [r12+0x20]
  425de6:	jae    425fc0 <flatcc_json_printer_int32_vector_field@@Base+0x290>
  425dec:	mov    edi,DWORD PTR [rbx+0x4]
  425def:	mov    r10d,edi
  425df2:	shr    r10d,0x1f
  425df6:	test   edi,edi
  425df8:	mov    r13d,r10d
  425dfb:	js     425fb0 <flatcc_json_printer_int32_vector_field@@Base+0x280>
  425e01:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  425e06:	add    eax,r13d
  425e09:	lea    edx,[rbp-0x2]
  425e0c:	lea    r13,[rbx+0x8]
  425e10:	cdqe   
  425e12:	add    rax,QWORD PTR [r12+0x28]
  425e17:	cmp    ebp,0x1
  425e1a:	mov    QWORD PTR [r12+0x28],rax
  425e1f:	je     425daa <flatcc_json_printer_int32_vector_field@@Base+0x7a>
  425e21:	lea    rbx,[rbx+rdx*4+0xc]
  425e26:	jmp    425e76 <flatcc_json_printer_int32_vector_field@@Base+0x146>
  425e28:	nop    DWORD PTR [rax+rax*1+0x0]
  425e30:	mov    rsi,QWORD PTR [r12+0x28]
  425e35:	cmp    rsi,QWORD PTR [r12+0x20]
  425e3a:	jae    425ef0 <flatcc_json_printer_int32_vector_field@@Base+0x1c0>
  425e40:	mov    edi,DWORD PTR [r13+0x0]
  425e44:	mov    r10d,edi
  425e47:	shr    r10d,0x1f
  425e4b:	test   edi,edi
  425e4d:	mov    ebp,r10d
  425e50:	js     425ee0 <flatcc_json_printer_int32_vector_field@@Base+0x1b0>
  425e56:	call   41e7b0 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  425e5b:	add    eax,ebp
  425e5d:	add    r13,0x4
  425e61:	cdqe   
  425e63:	add    rax,QWORD PTR [r12+0x28]
  425e68:	cmp    r13,rbx
  425e6b:	mov    QWORD PTR [r12+0x28],rax
  425e70:	je     425daa <flatcc_json_printer_int32_vector_field@@Base+0x7a>
  425e76:	lea    rdx,[rax+0x1]
  425e7a:	mov    QWORD PTR [r12+0x28],rdx
  425e7f:	mov    BYTE PTR [rax],0x2c
  425e82:	cmp    BYTE PTR [r12+0x31],0x0
  425e88:	je     425e30 <flatcc_json_printer_int32_vector_field@@Base+0x100>
  425e8a:	mov    rax,QWORD PTR [r12+0x28]
  425e8f:	lea    rdx,[rax+0x1]
  425e93:	mov    QWORD PTR [r12+0x28],rdx
  425e98:	mov    BYTE PTR [rax],0xa
  425e9b:	movzx  esi,BYTE PTR [r12+0x31]
  425ea1:	mov    rdi,QWORD PTR [r12+0x28]
  425ea6:	imul   esi,DWORD PTR [r12+0x38]
  425eac:	movsxd rbp,esi
  425eaf:	lea    rax,[rdi+rbp*1]
  425eb3:	cmp    QWORD PTR [r12+0x20],rax
  425eb8:	jb     425f08 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
  425eba:	mov    esi,0x20
  425ebf:	mov    rdx,rbp
  425ec2:	call   405090 <memset@plt>
  425ec7:	mov    rsi,rbp
  425eca:	add    rsi,QWORD PTR [r12+0x28]
  425ecf:	mov    QWORD PTR [r12+0x28],rsi
  425ed4:	jmp    425e40 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  425ed9:	nop    DWORD PTR [rax+0x0]
  425ee0:	mov    BYTE PTR [rsi],0x2d
  425ee3:	neg    edi
  425ee5:	add    rsi,0x1
  425ee9:	jmp    425e56 <flatcc_json_printer_int32_vector_field@@Base+0x126>
  425eee:	xchg   ax,ax
  425ef0:	xor    esi,esi
  425ef2:	mov    rdi,r12
  425ef5:	call   QWORD PTR [r12+0x48]
  425efa:	mov    rsi,QWORD PTR [r12+0x28]
  425eff:	jmp    425e40 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  425f04:	nop    DWORD PTR [rax+0x0]
  425f08:	mov    rsi,rbp
  425f0b:	mov    rdi,r12
  425f0e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425f13:	mov    rsi,QWORD PTR [r12+0x28]
  425f18:	jmp    425e40 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  425f1d:	nop    DWORD PTR [rax]
  425f20:	lea    rdx,[rax+0x1]
  425f24:	mov    QWORD PTR [r12+0x28],rdx
  425f29:	mov    BYTE PTR [rax],0xa
  425f2c:	mov    eax,DWORD PTR [r12+0x38]
  425f31:	mov    rdi,QWORD PTR [r12+0x28]
  425f36:	lea    ebx,[rax-0x1]
  425f39:	movzx  eax,BYTE PTR [r12+0x31]
  425f3f:	mov    DWORD PTR [r12+0x38],ebx
  425f44:	imul   eax,ebx
  425f47:	movsxd rbx,eax
  425f4a:	lea    rax,[rdi+rbx*1]
  425f4e:	cmp    QWORD PTR [r12+0x20],rax
  425f53:	jb     425f70 <flatcc_json_printer_int32_vector_field@@Base+0x240>
  425f55:	mov    rdx,rbx
  425f58:	mov    esi,0x20
  425f5d:	call   405090 <memset@plt>
  425f62:	mov    rax,rbx
  425f65:	add    rax,QWORD PTR [r12+0x28]
  425f6a:	jmp    425db6 <flatcc_json_printer_int32_vector_field@@Base+0x86>
  425f6f:	nop
  425f70:	mov    rsi,rbx
  425f73:	mov    rdi,r12
  425f76:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425f7b:	mov    rax,QWORD PTR [r12+0x28]
  425f80:	jmp    425db6 <flatcc_json_printer_int32_vector_field@@Base+0x86>
  425f85:	nop    DWORD PTR [rax]
  425f88:	mov    rax,QWORD PTR [r12+0x28]
  425f8d:	mov    rdi,r12
  425f90:	lea    rdx,[rax+0x1]
  425f94:	mov    QWORD PTR [r12+0x28],rdx
  425f99:	mov    BYTE PTR [rax],0xa
  425f9c:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425fa1:	mov    rsi,QWORD PTR [r12+0x28]
  425fa6:	jmp    425dec <flatcc_json_printer_int32_vector_field@@Base+0xbc>
  425fab:	nop    DWORD PTR [rax+rax*1+0x0]
  425fb0:	mov    BYTE PTR [rsi],0x2d
  425fb3:	neg    edi
  425fb5:	add    rsi,0x1
  425fb9:	jmp    425e01 <flatcc_json_printer_int32_vector_field@@Base+0xd1>
  425fbe:	xchg   ax,ax
  425fc0:	xor    esi,esi
  425fc2:	mov    rdi,r12
  425fc5:	call   QWORD PTR [r12+0x48]
  425fca:	mov    rsi,QWORD PTR [r12+0x28]
  425fcf:	jmp    425dec <flatcc_json_printer_int32_vector_field@@Base+0xbc>
  425fd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425fdf:	nop

0000000000425fe0 <flatcc_json_printer_int64_vector_field@@Base>:
  425fe0:	lea    eax,[rdx+rdx*1+0x4]
  425fe4:	cmp    eax,DWORD PTR [rsi+0x10]
  425fe7:	jge    42607c <flatcc_json_printer_int64_vector_field@@Base+0x9c>
  425fed:	push   r13
  425fef:	push   r12
  425ff1:	push   rbp
  425ff2:	push   rbx
  425ff3:	sub    rsp,0x8
  425ff7:	mov    rdx,QWORD PTR [rsi+0x8]
  425ffb:	movzx  ebx,WORD PTR [rdx+rax*1]
  425fff:	test   bx,bx
  426002:	je     426072 <flatcc_json_printer_int64_vector_field@@Base+0x92>
  426004:	add    rbx,QWORD PTR [rsi]
  426007:	je     426072 <flatcc_json_printer_int64_vector_field@@Base+0x92>
  426009:	mov    eax,DWORD PTR [rsi+0x18]
  42600c:	lea    edx,[rax+0x1]
  42600f:	test   eax,eax
  426011:	mov    DWORD PTR [rsi+0x18],edx
  426014:	je     426025 <flatcc_json_printer_int64_vector_field@@Base+0x45>
  426016:	mov    rax,QWORD PTR [rdi+0x28]
  42601a:	lea    rdx,[rax+0x1]
  42601e:	mov    QWORD PTR [rdi+0x28],rdx
  426022:	mov    BYTE PTR [rax],0x2c
  426025:	mov    eax,DWORD PTR [rbx]
  426027:	mov    r12,rdi
  42602a:	movsxd rdx,r8d
  42602d:	mov    rsi,rcx
  426030:	add    rbx,rax
  426033:	mov    ebp,DWORD PTR [rbx]
  426035:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42603a:	mov    rax,QWORD PTR [r12+0x28]
  42603f:	add    DWORD PTR [r12+0x38],0x1
  426045:	test   ebp,ebp
  426047:	lea    rdx,[rax+0x1]
  42604b:	mov    QWORD PTR [r12+0x28],rdx
  426050:	mov    BYTE PTR [rax],0x5b
  426053:	jne    426080 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
  426055:	mov    rax,QWORD PTR [r12+0x28]
  42605a:	cmp    BYTE PTR [r12+0x31],0x0
  426060:	jne    4261e0 <flatcc_json_printer_int64_vector_field@@Base+0x200>
  426066:	lea    rdx,[rax+0x1]
  42606a:	mov    QWORD PTR [r12+0x28],rdx
  42606f:	mov    BYTE PTR [rax],0x5d
  426072:	add    rsp,0x8
  426076:	pop    rbx
  426077:	pop    rbp
  426078:	pop    r12
  42607a:	pop    r13
  42607c:	repz ret 
  42607e:	xchg   ax,ax
  426080:	cmp    BYTE PTR [r12+0x31],0x0
  426086:	jne    426248 <flatcc_json_printer_int64_vector_field@@Base+0x268>
  42608c:	mov    rsi,QWORD PTR [r12+0x28]
  426091:	cmp    rsi,QWORD PTR [r12+0x20]
  426096:	jae    426290 <flatcc_json_printer_int64_vector_field@@Base+0x2b0>
  42609c:	mov    rdi,QWORD PTR [rbx+0x4]
  4260a0:	mov    r13,rdi
  4260a3:	shr    r13,0x3f
  4260a7:	test   rdi,rdi
  4260aa:	js     42627a <flatcc_json_printer_int64_vector_field@@Base+0x29a>
  4260b0:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  4260b5:	add    eax,r13d
  4260b8:	lea    edx,[rbp-0x2]
  4260bb:	lea    r13,[rbx+0xc]
  4260bf:	cdqe   
  4260c1:	add    rax,QWORD PTR [r12+0x28]
  4260c6:	cmp    ebp,0x1
  4260c9:	mov    QWORD PTR [r12+0x28],rax
  4260ce:	je     42605a <flatcc_json_printer_int64_vector_field@@Base+0x7a>
  4260d0:	lea    rbx,[rbx+rdx*8+0x14]
  4260d5:	jmp    426124 <flatcc_json_printer_int64_vector_field@@Base+0x144>
  4260d7:	nop    WORD PTR [rax+rax*1+0x0]
  4260e0:	mov    rsi,QWORD PTR [r12+0x28]
  4260e5:	cmp    rsi,QWORD PTR [r12+0x20]
  4260ea:	jae    4261b0 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
  4260f0:	mov    rdi,QWORD PTR [r13+0x0]
  4260f4:	mov    rbp,rdi
  4260f7:	shr    rbp,0x3f
  4260fb:	test   rdi,rdi
  4260fe:	js     4261a0 <flatcc_json_printer_int64_vector_field@@Base+0x1c0>
  426104:	call   41ea40 <flatcc_json_parser_table_as_root@@Base+0x430>
  426109:	add    eax,ebp
  42610b:	add    r13,0x8
  42610f:	cdqe   
  426111:	add    rax,QWORD PTR [r12+0x28]
  426116:	cmp    r13,rbx
  426119:	mov    QWORD PTR [r12+0x28],rax
  42611e:	je     42605a <flatcc_json_printer_int64_vector_field@@Base+0x7a>
  426124:	lea    rdx,[rax+0x1]
  426128:	mov    QWORD PTR [r12+0x28],rdx
  42612d:	mov    BYTE PTR [rax],0x2c
  426130:	cmp    BYTE PTR [r12+0x31],0x0
  426136:	je     4260e0 <flatcc_json_printer_int64_vector_field@@Base+0x100>
  426138:	mov    rax,QWORD PTR [r12+0x28]
  42613d:	lea    rdx,[rax+0x1]
  426141:	mov    QWORD PTR [r12+0x28],rdx
  426146:	mov    BYTE PTR [rax],0xa
  426149:	movzx  esi,BYTE PTR [r12+0x31]
  42614f:	mov    rdi,QWORD PTR [r12+0x28]
  426154:	imul   esi,DWORD PTR [r12+0x38]
  42615a:	movsxd rbp,esi
  42615d:	lea    rax,[rdi+rbp*1]
  426161:	cmp    QWORD PTR [r12+0x20],rax
  426166:	jb     4261c8 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
  426168:	mov    rdx,rbp
  42616b:	mov    esi,0x20
  426170:	call   405090 <memset@plt>
  426175:	mov    rdi,QWORD PTR [r13+0x0]
  426179:	mov    rsi,rbp
  42617c:	add    rsi,QWORD PTR [r12+0x28]
  426181:	mov    rbp,rdi
  426184:	shr    rbp,0x3f
  426188:	test   rdi,rdi
  42618b:	mov    QWORD PTR [r12+0x28],rsi
  426190:	jns    426104 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  426196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4261a0:	mov    BYTE PTR [rsi],0x2d
  4261a3:	neg    rdi
  4261a6:	add    rsi,0x1
  4261aa:	jmp    426104 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  4261af:	nop
  4261b0:	xor    esi,esi
  4261b2:	mov    rdi,r12
  4261b5:	call   QWORD PTR [r12+0x48]
  4261ba:	mov    rsi,QWORD PTR [r12+0x28]
  4261bf:	jmp    4260f0 <flatcc_json_printer_int64_vector_field@@Base+0x110>
  4261c4:	nop    DWORD PTR [rax+0x0]
  4261c8:	mov    rsi,rbp
  4261cb:	mov    rdi,r12
  4261ce:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4261d3:	mov    rsi,QWORD PTR [r12+0x28]
  4261d8:	jmp    4260f0 <flatcc_json_printer_int64_vector_field@@Base+0x110>
  4261dd:	nop    DWORD PTR [rax]
  4261e0:	lea    rdx,[rax+0x1]
  4261e4:	mov    QWORD PTR [r12+0x28],rdx
  4261e9:	mov    BYTE PTR [rax],0xa
  4261ec:	mov    eax,DWORD PTR [r12+0x38]
  4261f1:	mov    rdi,QWORD PTR [r12+0x28]
  4261f6:	lea    ebx,[rax-0x1]
  4261f9:	movzx  eax,BYTE PTR [r12+0x31]
  4261ff:	mov    DWORD PTR [r12+0x38],ebx
  426204:	imul   eax,ebx
  426207:	movsxd rbx,eax
  42620a:	lea    rax,[rdi+rbx*1]
  42620e:	cmp    QWORD PTR [r12+0x20],rax
  426213:	jb     426230 <flatcc_json_printer_int64_vector_field@@Base+0x250>
  426215:	mov    rdx,rbx
  426218:	mov    esi,0x20
  42621d:	call   405090 <memset@plt>
  426222:	mov    rax,rbx
  426225:	add    rax,QWORD PTR [r12+0x28]
  42622a:	jmp    426066 <flatcc_json_printer_int64_vector_field@@Base+0x86>
  42622f:	nop
  426230:	mov    rsi,rbx
  426233:	mov    rdi,r12
  426236:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42623b:	mov    rax,QWORD PTR [r12+0x28]
  426240:	jmp    426066 <flatcc_json_printer_int64_vector_field@@Base+0x86>
  426245:	nop    DWORD PTR [rax]
  426248:	mov    rax,QWORD PTR [r12+0x28]
  42624d:	mov    rdi,r12
  426250:	lea    rdx,[rax+0x1]
  426254:	mov    QWORD PTR [r12+0x28],rdx
  426259:	mov    BYTE PTR [rax],0xa
  42625c:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426261:	mov    rdi,QWORD PTR [rbx+0x4]
  426265:	mov    rsi,QWORD PTR [r12+0x28]
  42626a:	mov    r13,rdi
  42626d:	shr    r13,0x3f
  426271:	test   rdi,rdi
  426274:	jns    4260b0 <flatcc_json_printer_int64_vector_field@@Base+0xd0>
  42627a:	mov    BYTE PTR [rsi],0x2d
  42627d:	neg    rdi
  426280:	add    rsi,0x1
  426284:	jmp    4260b0 <flatcc_json_printer_int64_vector_field@@Base+0xd0>
  426289:	nop    DWORD PTR [rax+0x0]
  426290:	xor    esi,esi
  426292:	mov    rdi,r12
  426295:	call   QWORD PTR [r12+0x48]
  42629a:	mov    rsi,QWORD PTR [r12+0x28]
  42629f:	jmp    42609c <flatcc_json_printer_int64_vector_field@@Base+0xbc>
  4262a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4262af:	nop

00000000004262b0 <flatcc_json_printer_bool_vector_field@@Base>:
  4262b0:	lea    eax,[rdx+rdx*1+0x4]
  4262b4:	cmp    eax,DWORD PTR [rsi+0x10]
  4262b7:	jge    4263d2 <flatcc_json_printer_bool_vector_field@@Base+0x122>
  4262bd:	push   r15
  4262bf:	push   r14
  4262c1:	push   r13
  4262c3:	push   r12
  4262c5:	push   rbp
  4262c6:	push   rbx
  4262c7:	sub    rsp,0x8
  4262cb:	mov    rdx,QWORD PTR [rsi+0x8]
  4262cf:	movzx  ebp,WORD PTR [rdx+rax*1]
  4262d3:	test   bp,bp
  4262d6:	je     4263c4 <flatcc_json_printer_bool_vector_field@@Base+0x114>
  4262dc:	add    rbp,QWORD PTR [rsi]
  4262df:	je     4263c4 <flatcc_json_printer_bool_vector_field@@Base+0x114>
  4262e5:	mov    eax,DWORD PTR [rsi+0x18]
  4262e8:	lea    edx,[rax+0x1]
  4262eb:	test   eax,eax
  4262ed:	mov    DWORD PTR [rsi+0x18],edx
  4262f0:	je     426301 <flatcc_json_printer_bool_vector_field@@Base+0x51>
  4262f2:	mov    rax,QWORD PTR [rdi+0x28]
  4262f6:	lea    rdx,[rax+0x1]
  4262fa:	mov    QWORD PTR [rdi+0x28],rdx
  4262fe:	mov    BYTE PTR [rax],0x2c
  426301:	mov    eax,DWORD PTR [rbp+0x0]
  426304:	mov    r15,rcx
  426307:	mov    rbx,rdi
  42630a:	movsxd r13,r8d
  42630d:	add    rbp,rax
  426310:	cmp    BYTE PTR [rdi+0x31],0x0
  426314:	mov    rax,QWORD PTR [rdi+0x28]
  426318:	mov    r12d,DWORD PTR [rbp+0x0]
  42631c:	jne    426548 <flatcc_json_printer_bool_vector_field@@Base+0x298>
  426322:	cmp    rax,QWORD PTR [rdi+0x20]
  426326:	jb     426331 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  426328:	xor    esi,esi
  42632a:	call   QWORD PTR [rdi+0x48]
  42632d:	mov    rax,QWORD PTR [rbx+0x28]
  426331:	mov    BYTE PTR [rax],0x22
  426334:	xor    edi,edi
  426336:	cmp    BYTE PTR [rbx+0x32],0x0
  42633a:	mov    rdx,r13
  42633d:	mov    rsi,r15
  426340:	sete   dil
  426344:	add    rdi,QWORD PTR [rbx+0x28]
  426348:	lea    rax,[rdi+r13*1]
  42634c:	cmp    QWORD PTR [rbx+0x20],rax
  426350:	mov    QWORD PTR [rbx+0x28],rdi
  426354:	ja     4264d0 <flatcc_json_printer_bool_vector_field@@Base+0x220>
  42635a:	mov    rdi,rbx
  42635d:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  426362:	mov    r13,QWORD PTR [rbx+0x28]
  426366:	mov    BYTE PTR [r13+0x0],0x22
  42636b:	xor    eax,eax
  42636d:	cmp    BYTE PTR [rbx+0x32],0x0
  426371:	sete   al
  426374:	add    rax,QWORD PTR [rbx+0x28]
  426378:	lea    rdx,[rax+0x1]
  42637c:	mov    QWORD PTR [rbx+0x28],rdx
  426380:	mov    BYTE PTR [rax],0x3a
  426383:	mov    rax,QWORD PTR [rbx+0x28]
  426387:	mov    BYTE PTR [rax],0x20
  42638a:	xor    eax,eax
  42638c:	cmp    BYTE PTR [rbx+0x31],0x0
  426390:	setne  al
  426393:	add    rax,QWORD PTR [rbx+0x28]
  426397:	add    DWORD PTR [rbx+0x38],0x1
  42639b:	test   r12d,r12d
  42639e:	lea    rdx,[rax+0x1]
  4263a2:	mov    QWORD PTR [rbx+0x28],rdx
  4263a6:	mov    BYTE PTR [rax],0x5b
  4263a9:	jne    4263d8 <flatcc_json_printer_bool_vector_field@@Base+0x128>
  4263ab:	mov    rax,QWORD PTR [rbx+0x28]
  4263af:	cmp    BYTE PTR [rbx+0x31],0x0
  4263b3:	jne    4264e8 <flatcc_json_printer_bool_vector_field@@Base+0x238>
  4263b9:	lea    rdx,[rax+0x1]
  4263bd:	mov    QWORD PTR [rbx+0x28],rdx
  4263c1:	mov    BYTE PTR [rax],0x5d
  4263c4:	add    rsp,0x8
  4263c8:	pop    rbx
  4263c9:	pop    rbp
  4263ca:	pop    r12
  4263cc:	pop    r13
  4263ce:	pop    r14
  4263d0:	pop    r15
  4263d2:	repz ret 
  4263d4:	nop    DWORD PTR [rax+0x0]
  4263d8:	cmp    BYTE PTR [rbx+0x31],0x0
  4263dc:	jne    426590 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
  4263e2:	mov    rsi,QWORD PTR [rbx+0x28]
  4263e6:	cmp    rsi,QWORD PTR [rbx+0x20]
  4263ea:	jae    4265b0 <flatcc_json_printer_bool_vector_field@@Base+0x300>
  4263f0:	movzx  edi,BYTE PTR [rbp+0x4]
  4263f4:	lea    r13,[rbp+0x5]
  4263f8:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  4263fd:	cdqe   
  4263ff:	add    rax,QWORD PTR [rbx+0x28]
  426403:	cmp    r12d,0x1
  426407:	lea    edx,[r12-0x2]
  42640c:	mov    QWORD PTR [rbx+0x28],rax
  426410:	je     4263af <flatcc_json_printer_bool_vector_field@@Base+0xff>
  426412:	lea    rbp,[rbp+rdx*1+0x6]
  426417:	jmp    42644b <flatcc_json_printer_bool_vector_field@@Base+0x19b>
  426419:	nop    DWORD PTR [rax+0x0]
  426420:	mov    rsi,QWORD PTR [rbx+0x28]
  426424:	cmp    rsi,QWORD PTR [rbx+0x20]
  426428:	jae    4264a0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
  42642a:	movzx  edi,BYTE PTR [r13+0x0]
  42642f:	add    r13,0x1
  426433:	call   41f480 <flatcc_json_parser_table_as_root@@Base+0xe70>
  426438:	cdqe   
  42643a:	add    rax,QWORD PTR [rbx+0x28]
  42643e:	cmp    r13,rbp
  426441:	mov    QWORD PTR [rbx+0x28],rax
  426445:	je     4263af <flatcc_json_printer_bool_vector_field@@Base+0xff>
  42644b:	lea    rdx,[rax+0x1]
  42644f:	mov    QWORD PTR [rbx+0x28],rdx
  426453:	mov    BYTE PTR [rax],0x2c
  426456:	cmp    BYTE PTR [rbx+0x31],0x0
  42645a:	je     426420 <flatcc_json_printer_bool_vector_field@@Base+0x170>
  42645c:	mov    rax,QWORD PTR [rbx+0x28]
  426460:	lea    rdx,[rax+0x1]
  426464:	mov    QWORD PTR [rbx+0x28],rdx
  426468:	mov    BYTE PTR [rax],0xa
  42646b:	movzx  esi,BYTE PTR [rbx+0x31]
  42646f:	mov    rdi,QWORD PTR [rbx+0x28]
  426473:	imul   esi,DWORD PTR [rbx+0x38]
  426477:	movsxd r12,esi
  42647a:	lea    rax,[rdi+r12*1]
  42647e:	cmp    QWORD PTR [rbx+0x20],rax
  426482:	jb     4264b8 <flatcc_json_printer_bool_vector_field@@Base+0x208>
  426484:	mov    esi,0x20
  426489:	mov    rdx,r12
  42648c:	call   405090 <memset@plt>
  426491:	mov    rsi,r12
  426494:	add    rsi,QWORD PTR [rbx+0x28]
  426498:	mov    QWORD PTR [rbx+0x28],rsi
  42649c:	jmp    42642a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  42649e:	xchg   ax,ax
  4264a0:	xor    esi,esi
  4264a2:	mov    rdi,rbx
  4264a5:	call   QWORD PTR [rbx+0x48]
  4264a8:	mov    rsi,QWORD PTR [rbx+0x28]
  4264ac:	jmp    42642a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  4264b1:	nop    DWORD PTR [rax+0x0]
  4264b8:	mov    rsi,r12
  4264bb:	mov    rdi,rbx
  4264be:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4264c3:	mov    rsi,QWORD PTR [rbx+0x28]
  4264c7:	jmp    42642a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  4264cc:	nop    DWORD PTR [rax+0x0]
  4264d0:	call   4050e0 <memcpy@plt>
  4264d5:	add    r13,QWORD PTR [rbx+0x28]
  4264d9:	mov    QWORD PTR [rbx+0x28],r13
  4264dd:	jmp    426366 <flatcc_json_printer_bool_vector_field@@Base+0xb6>
  4264e2:	nop    WORD PTR [rax+rax*1+0x0]
  4264e8:	lea    rdx,[rax+0x1]
  4264ec:	mov    QWORD PTR [rbx+0x28],rdx
  4264f0:	mov    BYTE PTR [rax],0xa
  4264f3:	mov    eax,DWORD PTR [rbx+0x38]
  4264f6:	mov    rdi,QWORD PTR [rbx+0x28]
  4264fa:	lea    ebp,[rax-0x1]
  4264fd:	movzx  eax,BYTE PTR [rbx+0x31]
  426501:	mov    DWORD PTR [rbx+0x38],ebp
  426504:	imul   eax,ebp
  426507:	movsxd rbp,eax
  42650a:	lea    rax,[rdi+rbp*1]
  42650e:	cmp    QWORD PTR [rbx+0x20],rax
  426512:	jb     426530 <flatcc_json_printer_bool_vector_field@@Base+0x280>
  426514:	mov    rdx,rbp
  426517:	mov    esi,0x20
  42651c:	call   405090 <memset@plt>
  426521:	mov    rax,rbp
  426524:	add    rax,QWORD PTR [rbx+0x28]
  426528:	jmp    4263b9 <flatcc_json_printer_bool_vector_field@@Base+0x109>
  42652d:	nop    DWORD PTR [rax]
  426530:	mov    rsi,rbp
  426533:	mov    rdi,rbx
  426536:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42653b:	mov    rax,QWORD PTR [rbx+0x28]
  42653f:	jmp    4263b9 <flatcc_json_printer_bool_vector_field@@Base+0x109>
  426544:	nop    DWORD PTR [rax+0x0]
  426548:	lea    rdx,[rax+0x1]
  42654c:	mov    QWORD PTR [rdi+0x28],rdx
  426550:	mov    BYTE PTR [rax],0xa
  426553:	movzx  eax,BYTE PTR [rdi+0x31]
  426557:	imul   eax,DWORD PTR [rdi+0x38]
  42655b:	mov    rdi,QWORD PTR [rdi+0x28]
  42655f:	movsxd r14,eax
  426562:	lea    rax,[rdi+r14*1]
  426566:	cmp    QWORD PTR [rbx+0x20],rax
  42656a:	jb     4265c1 <flatcc_json_printer_bool_vector_field@@Base+0x311>
  42656c:	mov    rdx,r14
  42656f:	mov    esi,0x20
  426574:	call   405090 <memset@plt>
  426579:	mov    rax,r14
  42657c:	add    rax,QWORD PTR [rbx+0x28]
  426580:	mov    QWORD PTR [rbx+0x28],rax
  426584:	jmp    426331 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  426589:	nop    DWORD PTR [rax+0x0]
  426590:	mov    rax,QWORD PTR [rbx+0x28]
  426594:	mov    rdi,rbx
  426597:	lea    rdx,[rax+0x1]
  42659b:	mov    QWORD PTR [rbx+0x28],rdx
  42659f:	mov    BYTE PTR [rax],0xa
  4265a2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4265a7:	mov    rsi,QWORD PTR [rbx+0x28]
  4265ab:	jmp    4263f0 <flatcc_json_printer_bool_vector_field@@Base+0x140>
  4265b0:	xor    esi,esi
  4265b2:	mov    rdi,rbx
  4265b5:	call   QWORD PTR [rbx+0x48]
  4265b8:	mov    rsi,QWORD PTR [rbx+0x28]
  4265bc:	jmp    4263f0 <flatcc_json_printer_bool_vector_field@@Base+0x140>
  4265c1:	mov    rsi,r14
  4265c4:	mov    rdi,rbx
  4265c7:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4265cc:	mov    rax,QWORD PTR [rbx+0x28]
  4265d0:	jmp    426331 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  4265d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004265e0 <flatcc_json_printer_float_vector_field@@Base>:
  4265e0:	lea    eax,[rdx+rdx*1+0x4]
  4265e4:	cmp    eax,DWORD PTR [rsi+0x10]
  4265e7:	jge    426678 <flatcc_json_printer_float_vector_field@@Base+0x98>
  4265ed:	push   r13
  4265ef:	push   r12
  4265f1:	push   rbp
  4265f2:	push   rbx
  4265f3:	sub    rsp,0x8
  4265f7:	mov    rdx,QWORD PTR [rsi+0x8]
  4265fb:	movzx  ebp,WORD PTR [rdx+rax*1]
  4265ff:	test   bp,bp
  426602:	je     42666e <flatcc_json_printer_float_vector_field@@Base+0x8e>
  426604:	add    rbp,QWORD PTR [rsi]
  426607:	je     42666e <flatcc_json_printer_float_vector_field@@Base+0x8e>
  426609:	mov    eax,DWORD PTR [rsi+0x18]
  42660c:	lea    edx,[rax+0x1]
  42660f:	test   eax,eax
  426611:	mov    DWORD PTR [rsi+0x18],edx
  426614:	je     426625 <flatcc_json_printer_float_vector_field@@Base+0x45>
  426616:	mov    rax,QWORD PTR [rdi+0x28]
  42661a:	lea    rdx,[rax+0x1]
  42661e:	mov    QWORD PTR [rdi+0x28],rdx
  426622:	mov    BYTE PTR [rax],0x2c
  426625:	mov    eax,DWORD PTR [rbp+0x0]
  426628:	mov    rbx,rdi
  42662b:	movsxd rdx,r8d
  42662e:	mov    rsi,rcx
  426631:	add    rbp,rax
  426634:	mov    r12d,DWORD PTR [rbp+0x0]
  426638:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42663d:	mov    rax,QWORD PTR [rbx+0x28]
  426641:	add    DWORD PTR [rbx+0x38],0x1
  426645:	test   r12d,r12d
  426648:	lea    rdx,[rax+0x1]
  42664c:	mov    QWORD PTR [rbx+0x28],rdx
  426650:	mov    BYTE PTR [rax],0x5b
  426653:	jne    426680 <flatcc_json_printer_float_vector_field@@Base+0xa0>
  426655:	mov    rax,QWORD PTR [rbx+0x28]
  426659:	cmp    BYTE PTR [rbx+0x31],0x0
  42665d:	jne    426788 <flatcc_json_printer_float_vector_field@@Base+0x1a8>
  426663:	lea    rdx,[rax+0x1]
  426667:	mov    QWORD PTR [rbx+0x28],rdx
  42666b:	mov    BYTE PTR [rax],0x5d
  42666e:	add    rsp,0x8
  426672:	pop    rbx
  426673:	pop    rbp
  426674:	pop    r12
  426676:	pop    r13
  426678:	repz ret 
  42667a:	nop    WORD PTR [rax+rax*1+0x0]
  426680:	cmp    BYTE PTR [rbx+0x31],0x0
  426684:	jne    4267e8 <flatcc_json_printer_float_vector_field@@Base+0x208>
  42668a:	mov    rdi,QWORD PTR [rbx+0x28]
  42668e:	cmp    rdi,QWORD PTR [rbx+0x20]
  426692:	jae    426810 <flatcc_json_printer_float_vector_field@@Base+0x230>
  426698:	vxorpd xmm0,xmm0,xmm0
  42669c:	lea    r13,[rbp+0x8]
  4266a0:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0x4]
  4266a5:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4266aa:	cdqe   
  4266ac:	add    rax,QWORD PTR [rbx+0x28]
  4266b0:	cmp    r12d,0x1
  4266b4:	lea    edx,[r12-0x2]
  4266b9:	mov    QWORD PTR [rbx+0x28],rax
  4266bd:	je     426659 <flatcc_json_printer_float_vector_field@@Base+0x79>
  4266bf:	lea    rbp,[rbp+rdx*4+0xc]
  4266c4:	jmp    426700 <flatcc_json_printer_float_vector_field@@Base+0x120>
  4266c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266d0:	mov    rdi,QWORD PTR [rbx+0x28]
  4266d4:	cmp    rdi,QWORD PTR [rbx+0x20]
  4266d8:	jae    426758 <flatcc_json_printer_float_vector_field@@Base+0x178>
  4266da:	vxorpd xmm0,xmm0,xmm0
  4266de:	add    r13,0x4
  4266e2:	vcvtss2sd xmm0,xmm0,DWORD PTR [r13-0x4]
  4266e8:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4266ed:	cdqe   
  4266ef:	add    rax,QWORD PTR [rbx+0x28]
  4266f3:	cmp    r13,rbp
  4266f6:	mov    QWORD PTR [rbx+0x28],rax
  4266fa:	je     426659 <flatcc_json_printer_float_vector_field@@Base+0x79>
  426700:	lea    rdx,[rax+0x1]
  426704:	mov    QWORD PTR [rbx+0x28],rdx
  426708:	mov    BYTE PTR [rax],0x2c
  42670b:	cmp    BYTE PTR [rbx+0x31],0x0
  42670f:	je     4266d0 <flatcc_json_printer_float_vector_field@@Base+0xf0>
  426711:	mov    rax,QWORD PTR [rbx+0x28]
  426715:	lea    rdx,[rax+0x1]
  426719:	mov    QWORD PTR [rbx+0x28],rdx
  42671d:	mov    BYTE PTR [rax],0xa
  426720:	movzx  edi,BYTE PTR [rbx+0x31]
  426724:	imul   edi,DWORD PTR [rbx+0x38]
  426728:	movsxd r12,edi
  42672b:	mov    rdi,QWORD PTR [rbx+0x28]
  42672f:	lea    rax,[rdi+r12*1]
  426733:	cmp    QWORD PTR [rbx+0x20],rax
  426737:	jb     426770 <flatcc_json_printer_float_vector_field@@Base+0x190>
  426739:	mov    rdx,r12
  42673c:	mov    esi,0x20
  426741:	call   405090 <memset@plt>
  426746:	mov    rdi,r12
  426749:	add    rdi,QWORD PTR [rbx+0x28]
  42674d:	mov    QWORD PTR [rbx+0x28],rdi
  426751:	jmp    4266da <flatcc_json_printer_float_vector_field@@Base+0xfa>
  426753:	nop    DWORD PTR [rax+rax*1+0x0]
  426758:	mov    rdi,rbx
  42675b:	xor    esi,esi
  42675d:	call   QWORD PTR [rbx+0x48]
  426760:	mov    rdi,QWORD PTR [rbx+0x28]
  426764:	jmp    4266da <flatcc_json_printer_float_vector_field@@Base+0xfa>
  426769:	nop    DWORD PTR [rax+0x0]
  426770:	mov    rdi,rbx
  426773:	mov    rsi,r12
  426776:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42677b:	mov    rdi,QWORD PTR [rbx+0x28]
  42677f:	jmp    4266da <flatcc_json_printer_float_vector_field@@Base+0xfa>
  426784:	nop    DWORD PTR [rax+0x0]
  426788:	lea    rdx,[rax+0x1]
  42678c:	mov    QWORD PTR [rbx+0x28],rdx
  426790:	mov    BYTE PTR [rax],0xa
  426793:	mov    eax,DWORD PTR [rbx+0x38]
  426796:	mov    rdi,QWORD PTR [rbx+0x28]
  42679a:	lea    ebp,[rax-0x1]
  42679d:	movzx  eax,BYTE PTR [rbx+0x31]
  4267a1:	mov    DWORD PTR [rbx+0x38],ebp
  4267a4:	imul   eax,ebp
  4267a7:	movsxd rbp,eax
  4267aa:	lea    rax,[rdi+rbp*1]
  4267ae:	cmp    QWORD PTR [rbx+0x20],rax
  4267b2:	jb     4267d0 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
  4267b4:	mov    rdx,rbp
  4267b7:	mov    esi,0x20
  4267bc:	call   405090 <memset@plt>
  4267c1:	mov    rax,rbp
  4267c4:	add    rax,QWORD PTR [rbx+0x28]
  4267c8:	jmp    426663 <flatcc_json_printer_float_vector_field@@Base+0x83>
  4267cd:	nop    DWORD PTR [rax]
  4267d0:	mov    rsi,rbp
  4267d3:	mov    rdi,rbx
  4267d6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4267db:	mov    rax,QWORD PTR [rbx+0x28]
  4267df:	jmp    426663 <flatcc_json_printer_float_vector_field@@Base+0x83>
  4267e4:	nop    DWORD PTR [rax+0x0]
  4267e8:	mov    rax,QWORD PTR [rbx+0x28]
  4267ec:	mov    rdi,rbx
  4267ef:	lea    rdx,[rax+0x1]
  4267f3:	mov    QWORD PTR [rbx+0x28],rdx
  4267f7:	mov    BYTE PTR [rax],0xa
  4267fa:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4267ff:	mov    rdi,QWORD PTR [rbx+0x28]
  426803:	jmp    426698 <flatcc_json_printer_float_vector_field@@Base+0xb8>
  426808:	nop    DWORD PTR [rax+rax*1+0x0]
  426810:	mov    rdi,rbx
  426813:	xor    esi,esi
  426815:	call   QWORD PTR [rbx+0x48]
  426818:	mov    rdi,QWORD PTR [rbx+0x28]
  42681c:	jmp    426698 <flatcc_json_printer_float_vector_field@@Base+0xb8>
  426821:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42682c:	nop    DWORD PTR [rax+0x0]

0000000000426830 <flatcc_json_printer_double_vector_field@@Base>:
  426830:	lea    eax,[rdx+rdx*1+0x4]
  426834:	cmp    eax,DWORD PTR [rsi+0x10]
  426837:	jge    4268ca <flatcc_json_printer_double_vector_field@@Base+0x9a>
  42683d:	push   r13
  42683f:	push   r12
  426841:	push   rbp
  426842:	push   rbx
  426843:	sub    rsp,0x8
  426847:	mov    rdx,QWORD PTR [rsi+0x8]
  42684b:	movzx  r12d,WORD PTR [rdx+rax*1]
  426850:	test   r12w,r12w
  426854:	je     4268c0 <flatcc_json_printer_double_vector_field@@Base+0x90>
  426856:	add    r12,QWORD PTR [rsi]
  426859:	je     4268c0 <flatcc_json_printer_double_vector_field@@Base+0x90>
  42685b:	mov    eax,DWORD PTR [rsi+0x18]
  42685e:	lea    edx,[rax+0x1]
  426861:	test   eax,eax
  426863:	mov    DWORD PTR [rsi+0x18],edx
  426866:	je     426877 <flatcc_json_printer_double_vector_field@@Base+0x47>
  426868:	mov    rax,QWORD PTR [rdi+0x28]
  42686c:	lea    rdx,[rax+0x1]
  426870:	mov    QWORD PTR [rdi+0x28],rdx
  426874:	mov    BYTE PTR [rax],0x2c
  426877:	mov    eax,DWORD PTR [r12]
  42687b:	mov    rbx,rdi
  42687e:	movsxd rdx,r8d
  426881:	mov    rsi,rcx
  426884:	add    r12,rax
  426887:	mov    ebp,DWORD PTR [r12]
  42688b:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426890:	mov    rax,QWORD PTR [rbx+0x28]
  426894:	add    DWORD PTR [rbx+0x38],0x1
  426898:	test   ebp,ebp
  42689a:	lea    rdx,[rax+0x1]
  42689e:	mov    QWORD PTR [rbx+0x28],rdx
  4268a2:	mov    BYTE PTR [rax],0x5b
  4268a5:	jne    4268d0 <flatcc_json_printer_double_vector_field@@Base+0xa0>
  4268a7:	mov    rax,QWORD PTR [rbx+0x28]
  4268ab:	cmp    BYTE PTR [rbx+0x31],0x0
  4268af:	jne    4269d0 <flatcc_json_printer_double_vector_field@@Base+0x1a0>
  4268b5:	lea    rdx,[rax+0x1]
  4268b9:	mov    QWORD PTR [rbx+0x28],rdx
  4268bd:	mov    BYTE PTR [rax],0x5d
  4268c0:	add    rsp,0x8
  4268c4:	pop    rbx
  4268c5:	pop    rbp
  4268c6:	pop    r12
  4268c8:	pop    r13
  4268ca:	repz ret 
  4268cc:	nop    DWORD PTR [rax+0x0]
  4268d0:	cmp    BYTE PTR [rbx+0x31],0x0
  4268d4:	jne    426a30 <flatcc_json_printer_double_vector_field@@Base+0x200>
  4268da:	mov    rdi,QWORD PTR [rbx+0x28]
  4268de:	cmp    rdi,QWORD PTR [rbx+0x20]
  4268e2:	jae    426a50 <flatcc_json_printer_double_vector_field@@Base+0x220>
  4268e8:	vmovsd xmm0,QWORD PTR [r12+0x4]
  4268ef:	lea    r13,[r12+0xc]
  4268f4:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4268f9:	cdqe   
  4268fb:	add    rax,QWORD PTR [rbx+0x28]
  4268ff:	cmp    ebp,0x1
  426902:	lea    edx,[rbp-0x2]
  426905:	mov    QWORD PTR [rbx+0x28],rax
  426909:	je     4268ab <flatcc_json_printer_double_vector_field@@Base+0x7b>
  42690b:	lea    rbp,[r12+rdx*8+0x14]
  426910:	jmp    426944 <flatcc_json_printer_double_vector_field@@Base+0x114>
  426912:	nop    WORD PTR [rax+rax*1+0x0]
  426918:	mov    rdi,QWORD PTR [rbx+0x28]
  42691c:	cmp    rdi,QWORD PTR [rbx+0x20]
  426920:	jae    4269a0 <flatcc_json_printer_double_vector_field@@Base+0x170>
  426922:	vmovsd xmm0,QWORD PTR [r13+0x0]
  426928:	add    r13,0x8
  42692c:	call   41f6a0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  426931:	cdqe   
  426933:	add    rax,QWORD PTR [rbx+0x28]
  426937:	cmp    r13,rbp
  42693a:	mov    QWORD PTR [rbx+0x28],rax
  42693e:	je     4268ab <flatcc_json_printer_double_vector_field@@Base+0x7b>
  426944:	lea    rdx,[rax+0x1]
  426948:	mov    QWORD PTR [rbx+0x28],rdx
  42694c:	mov    BYTE PTR [rax],0x2c
  42694f:	cmp    BYTE PTR [rbx+0x31],0x0
  426953:	je     426918 <flatcc_json_printer_double_vector_field@@Base+0xe8>
  426955:	mov    rax,QWORD PTR [rbx+0x28]
  426959:	lea    rdx,[rax+0x1]
  42695d:	mov    QWORD PTR [rbx+0x28],rdx
  426961:	mov    BYTE PTR [rax],0xa
  426964:	movzx  edi,BYTE PTR [rbx+0x31]
  426968:	imul   edi,DWORD PTR [rbx+0x38]
  42696c:	movsxd r12,edi
  42696f:	mov    rdi,QWORD PTR [rbx+0x28]
  426973:	lea    rax,[rdi+r12*1]
  426977:	cmp    QWORD PTR [rbx+0x20],rax
  42697b:	jb     4269b8 <flatcc_json_printer_double_vector_field@@Base+0x188>
  42697d:	mov    rdx,r12
  426980:	mov    esi,0x20
  426985:	call   405090 <memset@plt>
  42698a:	mov    rdi,r12
  42698d:	add    rdi,QWORD PTR [rbx+0x28]
  426991:	mov    QWORD PTR [rbx+0x28],rdi
  426995:	jmp    426922 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  426997:	nop    WORD PTR [rax+rax*1+0x0]
  4269a0:	mov    rdi,rbx
  4269a3:	xor    esi,esi
  4269a5:	call   QWORD PTR [rbx+0x48]
  4269a8:	mov    rdi,QWORD PTR [rbx+0x28]
  4269ac:	jmp    426922 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  4269b1:	nop    DWORD PTR [rax+0x0]
  4269b8:	mov    rdi,rbx
  4269bb:	mov    rsi,r12
  4269be:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4269c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4269c7:	jmp    426922 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  4269cc:	nop    DWORD PTR [rax+0x0]
  4269d0:	lea    rdx,[rax+0x1]
  4269d4:	mov    QWORD PTR [rbx+0x28],rdx
  4269d8:	mov    BYTE PTR [rax],0xa
  4269db:	mov    eax,DWORD PTR [rbx+0x38]
  4269de:	mov    rdi,QWORD PTR [rbx+0x28]
  4269e2:	lea    ebp,[rax-0x1]
  4269e5:	movzx  eax,BYTE PTR [rbx+0x31]
  4269e9:	mov    DWORD PTR [rbx+0x38],ebp
  4269ec:	imul   eax,ebp
  4269ef:	movsxd rbp,eax
  4269f2:	lea    rax,[rdi+rbp*1]
  4269f6:	cmp    QWORD PTR [rbx+0x20],rax
  4269fa:	jb     426a18 <flatcc_json_printer_double_vector_field@@Base+0x1e8>
  4269fc:	mov    rdx,rbp
  4269ff:	mov    esi,0x20
  426a04:	call   405090 <memset@plt>
  426a09:	mov    rax,rbp
  426a0c:	add    rax,QWORD PTR [rbx+0x28]
  426a10:	jmp    4268b5 <flatcc_json_printer_double_vector_field@@Base+0x85>
  426a15:	nop    DWORD PTR [rax]
  426a18:	mov    rsi,rbp
  426a1b:	mov    rdi,rbx
  426a1e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426a23:	mov    rax,QWORD PTR [rbx+0x28]
  426a27:	jmp    4268b5 <flatcc_json_printer_double_vector_field@@Base+0x85>
  426a2c:	nop    DWORD PTR [rax+0x0]
  426a30:	mov    rax,QWORD PTR [rbx+0x28]
  426a34:	mov    rdi,rbx
  426a37:	lea    rdx,[rax+0x1]
  426a3b:	mov    QWORD PTR [rbx+0x28],rdx
  426a3f:	mov    BYTE PTR [rax],0xa
  426a42:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426a47:	mov    rdi,QWORD PTR [rbx+0x28]
  426a4b:	jmp    4268e8 <flatcc_json_printer_double_vector_field@@Base+0xb8>
  426a50:	mov    rdi,rbx
  426a53:	xor    esi,esi
  426a55:	call   QWORD PTR [rbx+0x48]
  426a58:	mov    rdi,QWORD PTR [rbx+0x28]
  426a5c:	jmp    4268e8 <flatcc_json_printer_double_vector_field@@Base+0xb8>
  426a61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426a6c:	nop    DWORD PTR [rax+0x0]

0000000000426a70 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  426a70:	cmp    BYTE PTR [rdi+0x33],0x0
  426a74:	jne    426be0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
  426a7a:	lea    eax,[rdx+rdx*1+0x4]
  426a7e:	cmp    eax,DWORD PTR [rsi+0x10]
  426a81:	jl     426a88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x18>
  426a83:	ret    
  426a84:	nop    DWORD PTR [rax+0x0]
  426a88:	push   r14
  426a8a:	push   r13
  426a8c:	push   r12
  426a8e:	push   rbp
  426a8f:	push   rbx
  426a90:	mov    rdx,QWORD PTR [rsi+0x8]
  426a94:	movzx  r12d,WORD PTR [rdx+rax*1]
  426a99:	test   r12w,r12w
  426a9d:	je     426bcd <flatcc_json_printer_utype_enum_vector_field@@Base+0x15d>
  426aa3:	add    r12,QWORD PTR [rsi]
  426aa6:	je     426bcd <flatcc_json_printer_utype_enum_vector_field@@Base+0x15d>
  426aac:	mov    eax,DWORD PTR [rsi+0x18]
  426aaf:	lea    edx,[rax+0x1]
  426ab2:	test   eax,eax
  426ab4:	mov    DWORD PTR [rsi+0x18],edx
  426ab7:	je     426ac8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x58>
  426ab9:	mov    rax,QWORD PTR [rdi+0x28]
  426abd:	lea    rdx,[rax+0x1]
  426ac1:	mov    QWORD PTR [rdi+0x28],rdx
  426ac5:	mov    BYTE PTR [rax],0x2c
  426ac8:	mov    eax,DWORD PTR [r12]
  426acc:	mov    rbx,rdi
  426acf:	movsxd rdx,r8d
  426ad2:	mov    rsi,rcx
  426ad5:	mov    r13,r9
  426ad8:	add    r12,rax
  426adb:	mov    r14d,DWORD PTR [r12]
  426adf:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426ae4:	mov    rax,QWORD PTR [rbx+0x28]
  426ae8:	add    DWORD PTR [rbx+0x38],0x1
  426aec:	test   r14d,r14d
  426aef:	lea    rdx,[rax+0x1]
  426af3:	mov    QWORD PTR [rbx+0x28],rdx
  426af7:	mov    BYTE PTR [rax],0x5b
  426afa:	je     426bb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  426b00:	cmp    BYTE PTR [rbx+0x31],0x0
  426b04:	jne    426c60 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
  426b0a:	mov    rax,QWORD PTR [rbx+0x20]
  426b0e:	cmp    QWORD PTR [rbx+0x28],rax
  426b12:	jae    426c90 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
  426b18:	movzx  esi,BYTE PTR [r12+0x4]
  426b1e:	mov    rdi,rbx
  426b21:	lea    rbp,[r12+0x5]
  426b26:	call   r13
  426b29:	cmp    r14d,0x1
  426b2d:	lea    eax,[r14-0x2]
  426b31:	je     426bb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  426b37:	lea    r14,[r12+rax*1+0x6]
  426b3c:	jmp    426b61 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf1>
  426b3e:	xchg   ax,ax
  426b40:	mov    rax,QWORD PTR [rbx+0x20]
  426b44:	cmp    QWORD PTR [rbx+0x28],rax
  426b48:	jae    426be8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
  426b4e:	movzx  esi,BYTE PTR [rbp+0x0]
  426b52:	add    rbp,0x1
  426b56:	mov    rdi,rbx
  426b59:	call   r13
  426b5c:	cmp    rbp,r14
  426b5f:	je     426bb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  426b61:	mov    rax,QWORD PTR [rbx+0x28]
  426b65:	lea    rdx,[rax+0x1]
  426b69:	mov    QWORD PTR [rbx+0x28],rdx
  426b6d:	mov    BYTE PTR [rax],0x2c
  426b70:	cmp    BYTE PTR [rbx+0x31],0x0
  426b74:	je     426b40 <flatcc_json_printer_utype_enum_vector_field@@Base+0xd0>
  426b76:	mov    rax,QWORD PTR [rbx+0x28]
  426b7a:	lea    rdx,[rax+0x1]
  426b7e:	mov    QWORD PTR [rbx+0x28],rdx
  426b82:	mov    BYTE PTR [rax],0xa
  426b85:	movzx  r12d,BYTE PTR [rbx+0x31]
  426b8a:	mov    rdi,QWORD PTR [rbx+0x28]
  426b8e:	imul   r12d,DWORD PTR [rbx+0x38]
  426b93:	movsxd r12,r12d
  426b96:	lea    rax,[rdi+r12*1]
  426b9a:	cmp    QWORD PTR [rbx+0x20],rax
  426b9e:	jb     426bf8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
  426ba0:	mov    rdx,r12
  426ba3:	mov    esi,0x20
  426ba8:	call   405090 <memset@plt>
  426bad:	add    QWORD PTR [rbx+0x28],r12
  426bb1:	jmp    426b4e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  426bb3:	nop    DWORD PTR [rax+rax*1+0x0]
  426bb8:	cmp    BYTE PTR [rbx+0x31],0x0
  426bbc:	jne    426c10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a0>
  426bbe:	mov    rax,QWORD PTR [rbx+0x28]
  426bc2:	lea    rdx,[rax+0x1]
  426bc6:	mov    QWORD PTR [rbx+0x28],rdx
  426bca:	mov    BYTE PTR [rax],0x5d
  426bcd:	pop    rbx
  426bce:	pop    rbp
  426bcf:	pop    r12
  426bd1:	pop    r13
  426bd3:	pop    r14
  426bd5:	ret    
  426bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426be0:	jmp    425040 <flatcc_json_printer_utype_vector_field@@Base>
  426be5:	nop    DWORD PTR [rax]
  426be8:	xor    esi,esi
  426bea:	mov    rdi,rbx
  426bed:	call   QWORD PTR [rbx+0x48]
  426bf0:	jmp    426b4e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  426bf5:	nop    DWORD PTR [rax]
  426bf8:	mov    rsi,r12
  426bfb:	mov    rdi,rbx
  426bfe:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426c03:	jmp    426b4e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  426c08:	nop    DWORD PTR [rax+rax*1+0x0]
  426c10:	mov    rax,QWORD PTR [rbx+0x28]
  426c14:	lea    rdx,[rax+0x1]
  426c18:	mov    QWORD PTR [rbx+0x28],rdx
  426c1c:	mov    BYTE PTR [rax],0xa
  426c1f:	mov    eax,DWORD PTR [rbx+0x38]
  426c22:	mov    rdi,QWORD PTR [rbx+0x28]
  426c26:	lea    ebp,[rax-0x1]
  426c29:	movzx  eax,BYTE PTR [rbx+0x31]
  426c2d:	mov    DWORD PTR [rbx+0x38],ebp
  426c30:	imul   eax,ebp
  426c33:	movsxd rbp,eax
  426c36:	lea    rax,[rdi+rbp*1]
  426c3a:	cmp    QWORD PTR [rbx+0x20],rax
  426c3e:	jb     426c80 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
  426c40:	mov    rdx,rbp
  426c43:	mov    esi,0x20
  426c48:	call   405090 <memset@plt>
  426c4d:	mov    rax,rbp
  426c50:	add    rax,QWORD PTR [rbx+0x28]
  426c54:	jmp    426bc2 <flatcc_json_printer_utype_enum_vector_field@@Base+0x152>
  426c59:	nop    DWORD PTR [rax+0x0]
  426c60:	mov    rax,QWORD PTR [rbx+0x28]
  426c64:	mov    rdi,rbx
  426c67:	lea    rdx,[rax+0x1]
  426c6b:	mov    QWORD PTR [rbx+0x28],rdx
  426c6f:	mov    BYTE PTR [rax],0xa
  426c72:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426c77:	jmp    426b18 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa8>
  426c7c:	nop    DWORD PTR [rax+0x0]
  426c80:	mov    rsi,rbp
  426c83:	mov    rdi,rbx
  426c86:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426c8b:	jmp    426bbe <flatcc_json_printer_utype_enum_vector_field@@Base+0x14e>
  426c90:	xor    esi,esi
  426c92:	mov    rdi,rbx
  426c95:	call   QWORD PTR [rbx+0x48]
  426c98:	jmp    426b18 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa8>
  426c9d:	nop    DWORD PTR [rax]

0000000000426ca0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  426ca0:	cmp    BYTE PTR [rdi+0x33],0x0
  426ca4:	jne    426e10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
  426caa:	lea    eax,[rdx+rdx*1+0x4]
  426cae:	cmp    eax,DWORD PTR [rsi+0x10]
  426cb1:	jl     426cb8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x18>
  426cb3:	ret    
  426cb4:	nop    DWORD PTR [rax+0x0]
  426cb8:	push   r14
  426cba:	push   r13
  426cbc:	push   r12
  426cbe:	push   rbp
  426cbf:	push   rbx
  426cc0:	mov    rdx,QWORD PTR [rsi+0x8]
  426cc4:	movzx  r12d,WORD PTR [rdx+rax*1]
  426cc9:	test   r12w,r12w
  426ccd:	je     426dfd <flatcc_json_printer_uint8_enum_vector_field@@Base+0x15d>
  426cd3:	add    r12,QWORD PTR [rsi]
  426cd6:	je     426dfd <flatcc_json_printer_uint8_enum_vector_field@@Base+0x15d>
  426cdc:	mov    eax,DWORD PTR [rsi+0x18]
  426cdf:	lea    edx,[rax+0x1]
  426ce2:	test   eax,eax
  426ce4:	mov    DWORD PTR [rsi+0x18],edx
  426ce7:	je     426cf8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x58>
  426ce9:	mov    rax,QWORD PTR [rdi+0x28]
  426ced:	lea    rdx,[rax+0x1]
  426cf1:	mov    QWORD PTR [rdi+0x28],rdx
  426cf5:	mov    BYTE PTR [rax],0x2c
  426cf8:	mov    eax,DWORD PTR [r12]
  426cfc:	mov    rbx,rdi
  426cff:	movsxd rdx,r8d
  426d02:	mov    rsi,rcx
  426d05:	mov    r13,r9
  426d08:	add    r12,rax
  426d0b:	mov    r14d,DWORD PTR [r12]
  426d0f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426d14:	mov    rax,QWORD PTR [rbx+0x28]
  426d18:	add    DWORD PTR [rbx+0x38],0x1
  426d1c:	test   r14d,r14d
  426d1f:	lea    rdx,[rax+0x1]
  426d23:	mov    QWORD PTR [rbx+0x28],rdx
  426d27:	mov    BYTE PTR [rax],0x5b
  426d2a:	je     426de8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  426d30:	cmp    BYTE PTR [rbx+0x31],0x0
  426d34:	jne    426e90 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
  426d3a:	mov    rax,QWORD PTR [rbx+0x20]
  426d3e:	cmp    QWORD PTR [rbx+0x28],rax
  426d42:	jae    426ec0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
  426d48:	movzx  esi,BYTE PTR [r12+0x4]
  426d4e:	mov    rdi,rbx
  426d51:	lea    rbp,[r12+0x5]
  426d56:	call   r13
  426d59:	cmp    r14d,0x1
  426d5d:	lea    eax,[r14-0x2]
  426d61:	je     426de8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  426d67:	lea    r14,[r12+rax*1+0x6]
  426d6c:	jmp    426d91 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf1>
  426d6e:	xchg   ax,ax
  426d70:	mov    rax,QWORD PTR [rbx+0x20]
  426d74:	cmp    QWORD PTR [rbx+0x28],rax
  426d78:	jae    426e18 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
  426d7e:	movzx  esi,BYTE PTR [rbp+0x0]
  426d82:	add    rbp,0x1
  426d86:	mov    rdi,rbx
  426d89:	call   r13
  426d8c:	cmp    rbp,r14
  426d8f:	je     426de8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  426d91:	mov    rax,QWORD PTR [rbx+0x28]
  426d95:	lea    rdx,[rax+0x1]
  426d99:	mov    QWORD PTR [rbx+0x28],rdx
  426d9d:	mov    BYTE PTR [rax],0x2c
  426da0:	cmp    BYTE PTR [rbx+0x31],0x0
  426da4:	je     426d70 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xd0>
  426da6:	mov    rax,QWORD PTR [rbx+0x28]
  426daa:	lea    rdx,[rax+0x1]
  426dae:	mov    QWORD PTR [rbx+0x28],rdx
  426db2:	mov    BYTE PTR [rax],0xa
  426db5:	movzx  r12d,BYTE PTR [rbx+0x31]
  426dba:	mov    rdi,QWORD PTR [rbx+0x28]
  426dbe:	imul   r12d,DWORD PTR [rbx+0x38]
  426dc3:	movsxd r12,r12d
  426dc6:	lea    rax,[rdi+r12*1]
  426dca:	cmp    QWORD PTR [rbx+0x20],rax
  426dce:	jb     426e28 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
  426dd0:	mov    rdx,r12
  426dd3:	mov    esi,0x20
  426dd8:	call   405090 <memset@plt>
  426ddd:	add    QWORD PTR [rbx+0x28],r12
  426de1:	jmp    426d7e <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  426de3:	nop    DWORD PTR [rax+rax*1+0x0]
  426de8:	cmp    BYTE PTR [rbx+0x31],0x0
  426dec:	jne    426e40 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a0>
  426dee:	mov    rax,QWORD PTR [rbx+0x28]
  426df2:	lea    rdx,[rax+0x1]
  426df6:	mov    QWORD PTR [rbx+0x28],rdx
  426dfa:	mov    BYTE PTR [rax],0x5d
  426dfd:	pop    rbx
  426dfe:	pop    rbp
  426dff:	pop    r12
  426e01:	pop    r13
  426e03:	pop    r14
  426e05:	ret    
  426e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e10:	jmp    424d10 <flatcc_json_printer_uint8_vector_field@@Base>
  426e15:	nop    DWORD PTR [rax]
  426e18:	xor    esi,esi
  426e1a:	mov    rdi,rbx
  426e1d:	call   QWORD PTR [rbx+0x48]
  426e20:	jmp    426d7e <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  426e25:	nop    DWORD PTR [rax]
  426e28:	mov    rsi,r12
  426e2b:	mov    rdi,rbx
  426e2e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426e33:	jmp    426d7e <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  426e38:	nop    DWORD PTR [rax+rax*1+0x0]
  426e40:	mov    rax,QWORD PTR [rbx+0x28]
  426e44:	lea    rdx,[rax+0x1]
  426e48:	mov    QWORD PTR [rbx+0x28],rdx
  426e4c:	mov    BYTE PTR [rax],0xa
  426e4f:	mov    eax,DWORD PTR [rbx+0x38]
  426e52:	mov    rdi,QWORD PTR [rbx+0x28]
  426e56:	lea    ebp,[rax-0x1]
  426e59:	movzx  eax,BYTE PTR [rbx+0x31]
  426e5d:	mov    DWORD PTR [rbx+0x38],ebp
  426e60:	imul   eax,ebp
  426e63:	movsxd rbp,eax
  426e66:	lea    rax,[rdi+rbp*1]
  426e6a:	cmp    QWORD PTR [rbx+0x20],rax
  426e6e:	jb     426eb0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
  426e70:	mov    rdx,rbp
  426e73:	mov    esi,0x20
  426e78:	call   405090 <memset@plt>
  426e7d:	mov    rax,rbp
  426e80:	add    rax,QWORD PTR [rbx+0x28]
  426e84:	jmp    426df2 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x152>
  426e89:	nop    DWORD PTR [rax+0x0]
  426e90:	mov    rax,QWORD PTR [rbx+0x28]
  426e94:	mov    rdi,rbx
  426e97:	lea    rdx,[rax+0x1]
  426e9b:	mov    QWORD PTR [rbx+0x28],rdx
  426e9f:	mov    BYTE PTR [rax],0xa
  426ea2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426ea7:	jmp    426d48 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa8>
  426eac:	nop    DWORD PTR [rax+0x0]
  426eb0:	mov    rsi,rbp
  426eb3:	mov    rdi,rbx
  426eb6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426ebb:	jmp    426dee <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14e>
  426ec0:	xor    esi,esi
  426ec2:	mov    rdi,rbx
  426ec5:	call   QWORD PTR [rbx+0x48]
  426ec8:	jmp    426d48 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa8>
  426ecd:	nop    DWORD PTR [rax]

0000000000426ed0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  426ed0:	cmp    BYTE PTR [rdi+0x33],0x0
  426ed4:	jne    427040 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
  426eda:	lea    eax,[rdx+rdx*1+0x4]
  426ede:	cmp    eax,DWORD PTR [rsi+0x10]
  426ee1:	jl     426ee8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18>
  426ee3:	ret    
  426ee4:	nop    DWORD PTR [rax+0x0]
  426ee8:	push   r14
  426eea:	push   r13
  426eec:	push   r12
  426eee:	push   rbp
  426eef:	push   rbx
  426ef0:	mov    rdx,QWORD PTR [rsi+0x8]
  426ef4:	movzx  r12d,WORD PTR [rdx+rax*1]
  426ef9:	test   r12w,r12w
  426efd:	je     42702d <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15d>
  426f03:	add    r12,QWORD PTR [rsi]
  426f06:	je     42702d <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15d>
  426f0c:	mov    eax,DWORD PTR [rsi+0x18]
  426f0f:	lea    edx,[rax+0x1]
  426f12:	test   eax,eax
  426f14:	mov    DWORD PTR [rsi+0x18],edx
  426f17:	je     426f28 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x58>
  426f19:	mov    rax,QWORD PTR [rdi+0x28]
  426f1d:	lea    rdx,[rax+0x1]
  426f21:	mov    QWORD PTR [rdi+0x28],rdx
  426f25:	mov    BYTE PTR [rax],0x2c
  426f28:	mov    eax,DWORD PTR [r12]
  426f2c:	mov    rbx,rdi
  426f2f:	movsxd rdx,r8d
  426f32:	mov    rsi,rcx
  426f35:	mov    r13,r9
  426f38:	add    r12,rax
  426f3b:	mov    r14d,DWORD PTR [r12]
  426f3f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426f44:	mov    rax,QWORD PTR [rbx+0x28]
  426f48:	add    DWORD PTR [rbx+0x38],0x1
  426f4c:	test   r14d,r14d
  426f4f:	lea    rdx,[rax+0x1]
  426f53:	mov    QWORD PTR [rbx+0x28],rdx
  426f57:	mov    BYTE PTR [rax],0x5b
  426f5a:	je     427018 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  426f60:	cmp    BYTE PTR [rbx+0x31],0x0
  426f64:	jne    4270c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f0>
  426f6a:	mov    rax,QWORD PTR [rbx+0x20]
  426f6e:	cmp    QWORD PTR [rbx+0x28],rax
  426f72:	jae    4270f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
  426f78:	movzx  esi,WORD PTR [r12+0x4]
  426f7e:	mov    rdi,rbx
  426f81:	lea    rbp,[r12+0x6]
  426f86:	call   r13
  426f89:	cmp    r14d,0x1
  426f8d:	lea    eax,[r14-0x2]
  426f91:	je     427018 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  426f97:	lea    r14,[r12+rax*2+0x8]
  426f9c:	jmp    426fc1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf1>
  426f9e:	xchg   ax,ax
  426fa0:	mov    rax,QWORD PTR [rbx+0x20]
  426fa4:	cmp    QWORD PTR [rbx+0x28],rax
  426fa8:	jae    427048 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
  426fae:	movzx  esi,WORD PTR [rbp+0x0]
  426fb2:	add    rbp,0x2
  426fb6:	mov    rdi,rbx
  426fb9:	call   r13
  426fbc:	cmp    rbp,r14
  426fbf:	je     427018 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  426fc1:	mov    rax,QWORD PTR [rbx+0x28]
  426fc5:	lea    rdx,[rax+0x1]
  426fc9:	mov    QWORD PTR [rbx+0x28],rdx
  426fcd:	mov    BYTE PTR [rax],0x2c
  426fd0:	cmp    BYTE PTR [rbx+0x31],0x0
  426fd4:	je     426fa0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xd0>
  426fd6:	mov    rax,QWORD PTR [rbx+0x28]
  426fda:	lea    rdx,[rax+0x1]
  426fde:	mov    QWORD PTR [rbx+0x28],rdx
  426fe2:	mov    BYTE PTR [rax],0xa
  426fe5:	movzx  r12d,BYTE PTR [rbx+0x31]
  426fea:	mov    rdi,QWORD PTR [rbx+0x28]
  426fee:	imul   r12d,DWORD PTR [rbx+0x38]
  426ff3:	movsxd r12,r12d
  426ff6:	lea    rax,[rdi+r12*1]
  426ffa:	cmp    QWORD PTR [rbx+0x20],rax
  426ffe:	jb     427058 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
  427000:	mov    rdx,r12
  427003:	mov    esi,0x20
  427008:	call   405090 <memset@plt>
  42700d:	add    QWORD PTR [rbx+0x28],r12
  427011:	jmp    426fae <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427013:	nop    DWORD PTR [rax+rax*1+0x0]
  427018:	cmp    BYTE PTR [rbx+0x31],0x0
  42701c:	jne    427070 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a0>
  42701e:	mov    rax,QWORD PTR [rbx+0x28]
  427022:	lea    rdx,[rax+0x1]
  427026:	mov    QWORD PTR [rbx+0x28],rdx
  42702a:	mov    BYTE PTR [rax],0x5d
  42702d:	pop    rbx
  42702e:	pop    rbp
  42702f:	pop    r12
  427031:	pop    r13
  427033:	pop    r14
  427035:	ret    
  427036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427040:	jmp    425050 <flatcc_json_printer_uint16_vector_field@@Base>
  427045:	nop    DWORD PTR [rax]
  427048:	xor    esi,esi
  42704a:	mov    rdi,rbx
  42704d:	call   QWORD PTR [rbx+0x48]
  427050:	jmp    426fae <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427055:	nop    DWORD PTR [rax]
  427058:	mov    rsi,r12
  42705b:	mov    rdi,rbx
  42705e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427063:	jmp    426fae <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427068:	nop    DWORD PTR [rax+rax*1+0x0]
  427070:	mov    rax,QWORD PTR [rbx+0x28]
  427074:	lea    rdx,[rax+0x1]
  427078:	mov    QWORD PTR [rbx+0x28],rdx
  42707c:	mov    BYTE PTR [rax],0xa
  42707f:	mov    eax,DWORD PTR [rbx+0x38]
  427082:	mov    rdi,QWORD PTR [rbx+0x28]
  427086:	lea    ebp,[rax-0x1]
  427089:	movzx  eax,BYTE PTR [rbx+0x31]
  42708d:	mov    DWORD PTR [rbx+0x38],ebp
  427090:	imul   eax,ebp
  427093:	movsxd rbp,eax
  427096:	lea    rax,[rdi+rbp*1]
  42709a:	cmp    QWORD PTR [rbx+0x20],rax
  42709e:	jb     4270e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x210>
  4270a0:	mov    rdx,rbp
  4270a3:	mov    esi,0x20
  4270a8:	call   405090 <memset@plt>
  4270ad:	mov    rax,rbp
  4270b0:	add    rax,QWORD PTR [rbx+0x28]
  4270b4:	jmp    427022 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x152>
  4270b9:	nop    DWORD PTR [rax+0x0]
  4270c0:	mov    rax,QWORD PTR [rbx+0x28]
  4270c4:	mov    rdi,rbx
  4270c7:	lea    rdx,[rax+0x1]
  4270cb:	mov    QWORD PTR [rbx+0x28],rdx
  4270cf:	mov    BYTE PTR [rax],0xa
  4270d2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4270d7:	jmp    426f78 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa8>
  4270dc:	nop    DWORD PTR [rax+0x0]
  4270e0:	mov    rsi,rbp
  4270e3:	mov    rdi,rbx
  4270e6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4270eb:	jmp    42701e <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14e>
  4270f0:	xor    esi,esi
  4270f2:	mov    rdi,rbx
  4270f5:	call   QWORD PTR [rbx+0x48]
  4270f8:	jmp    426f78 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa8>
  4270fd:	nop    DWORD PTR [rax]

0000000000427100 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  427100:	cmp    BYTE PTR [rdi+0x33],0x0
  427104:	jne    427270 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
  42710a:	lea    eax,[rdx+rdx*1+0x4]
  42710e:	cmp    eax,DWORD PTR [rsi+0x10]
  427111:	jl     427118 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18>
  427113:	ret    
  427114:	nop    DWORD PTR [rax+0x0]
  427118:	push   r14
  42711a:	push   r13
  42711c:	push   r12
  42711e:	push   rbp
  42711f:	push   rbx
  427120:	mov    rdx,QWORD PTR [rsi+0x8]
  427124:	movzx  r12d,WORD PTR [rdx+rax*1]
  427129:	test   r12w,r12w
  42712d:	je     42725d <flatcc_json_printer_uint32_enum_vector_field@@Base+0x15d>
  427133:	add    r12,QWORD PTR [rsi]
  427136:	je     42725d <flatcc_json_printer_uint32_enum_vector_field@@Base+0x15d>
  42713c:	mov    eax,DWORD PTR [rsi+0x18]
  42713f:	lea    edx,[rax+0x1]
  427142:	test   eax,eax
  427144:	mov    DWORD PTR [rsi+0x18],edx
  427147:	je     427158 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x58>
  427149:	mov    rax,QWORD PTR [rdi+0x28]
  42714d:	lea    rdx,[rax+0x1]
  427151:	mov    QWORD PTR [rdi+0x28],rdx
  427155:	mov    BYTE PTR [rax],0x2c
  427158:	mov    eax,DWORD PTR [r12]
  42715c:	mov    rbx,rdi
  42715f:	movsxd rdx,r8d
  427162:	mov    rsi,rcx
  427165:	mov    r13,r9
  427168:	add    r12,rax
  42716b:	mov    r14d,DWORD PTR [r12]
  42716f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427174:	mov    rax,QWORD PTR [rbx+0x28]
  427178:	add    DWORD PTR [rbx+0x38],0x1
  42717c:	test   r14d,r14d
  42717f:	lea    rdx,[rax+0x1]
  427183:	mov    QWORD PTR [rbx+0x28],rdx
  427187:	mov    BYTE PTR [rax],0x5b
  42718a:	je     427248 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  427190:	cmp    BYTE PTR [rbx+0x31],0x0
  427194:	jne    4272f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f0>
  42719a:	mov    rax,QWORD PTR [rbx+0x20]
  42719e:	cmp    QWORD PTR [rbx+0x28],rax
  4271a2:	jae    427320 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
  4271a8:	mov    esi,DWORD PTR [r12+0x4]
  4271ad:	mov    rdi,rbx
  4271b0:	lea    rbp,[r12+0x8]
  4271b5:	call   r13
  4271b8:	cmp    r14d,0x1
  4271bc:	lea    eax,[r14-0x2]
  4271c0:	je     427248 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  4271c6:	lea    r14,[r12+rax*4+0xc]
  4271cb:	jmp    4271f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf0>
  4271cd:	nop    DWORD PTR [rax]
  4271d0:	mov    rax,QWORD PTR [rbx+0x20]
  4271d4:	cmp    QWORD PTR [rbx+0x28],rax
  4271d8:	jae    427278 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
  4271de:	mov    esi,DWORD PTR [rbp+0x0]
  4271e1:	add    rbp,0x4
  4271e5:	mov    rdi,rbx
  4271e8:	call   r13
  4271eb:	cmp    rbp,r14
  4271ee:	je     427248 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  4271f0:	mov    rax,QWORD PTR [rbx+0x28]
  4271f4:	lea    rdx,[rax+0x1]
  4271f8:	mov    QWORD PTR [rbx+0x28],rdx
  4271fc:	mov    BYTE PTR [rax],0x2c
  4271ff:	cmp    BYTE PTR [rbx+0x31],0x0
  427203:	je     4271d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xd0>
  427205:	mov    rax,QWORD PTR [rbx+0x28]
  427209:	lea    rdx,[rax+0x1]
  42720d:	mov    QWORD PTR [rbx+0x28],rdx
  427211:	mov    BYTE PTR [rax],0xa
  427214:	movzx  r12d,BYTE PTR [rbx+0x31]
  427219:	mov    rdi,QWORD PTR [rbx+0x28]
  42721d:	imul   r12d,DWORD PTR [rbx+0x38]
  427222:	movsxd r12,r12d
  427225:	lea    rax,[rdi+r12*1]
  427229:	cmp    QWORD PTR [rbx+0x20],rax
  42722d:	jb     427288 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
  42722f:	mov    rdx,r12
  427232:	mov    esi,0x20
  427237:	call   405090 <memset@plt>
  42723c:	add    QWORD PTR [rbx+0x28],r12
  427240:	jmp    4271de <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427242:	nop    WORD PTR [rax+rax*1+0x0]
  427248:	cmp    BYTE PTR [rbx+0x31],0x0
  42724c:	jne    4272a0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a0>
  42724e:	mov    rax,QWORD PTR [rbx+0x28]
  427252:	lea    rdx,[rax+0x1]
  427256:	mov    QWORD PTR [rbx+0x28],rdx
  42725a:	mov    BYTE PTR [rax],0x5d
  42725d:	pop    rbx
  42725e:	pop    rbp
  42725f:	pop    r12
  427261:	pop    r13
  427263:	pop    r14
  427265:	ret    
  427266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427270:	jmp    425290 <flatcc_json_printer_uint32_vector_field@@Base>
  427275:	nop    DWORD PTR [rax]
  427278:	xor    esi,esi
  42727a:	mov    rdi,rbx
  42727d:	call   QWORD PTR [rbx+0x48]
  427280:	jmp    4271de <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427285:	nop    DWORD PTR [rax]
  427288:	mov    rsi,r12
  42728b:	mov    rdi,rbx
  42728e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427293:	jmp    4271de <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427298:	nop    DWORD PTR [rax+rax*1+0x0]
  4272a0:	mov    rax,QWORD PTR [rbx+0x28]
  4272a4:	lea    rdx,[rax+0x1]
  4272a8:	mov    QWORD PTR [rbx+0x28],rdx
  4272ac:	mov    BYTE PTR [rax],0xa
  4272af:	mov    eax,DWORD PTR [rbx+0x38]
  4272b2:	mov    rdi,QWORD PTR [rbx+0x28]
  4272b6:	lea    ebp,[rax-0x1]
  4272b9:	movzx  eax,BYTE PTR [rbx+0x31]
  4272bd:	mov    DWORD PTR [rbx+0x38],ebp
  4272c0:	imul   eax,ebp
  4272c3:	movsxd rbp,eax
  4272c6:	lea    rax,[rdi+rbp*1]
  4272ca:	cmp    QWORD PTR [rbx+0x20],rax
  4272ce:	jb     427310 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
  4272d0:	mov    rdx,rbp
  4272d3:	mov    esi,0x20
  4272d8:	call   405090 <memset@plt>
  4272dd:	mov    rax,rbp
  4272e0:	add    rax,QWORD PTR [rbx+0x28]
  4272e4:	jmp    427252 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x152>
  4272e9:	nop    DWORD PTR [rax+0x0]
  4272f0:	mov    rax,QWORD PTR [rbx+0x28]
  4272f4:	mov    rdi,rbx
  4272f7:	lea    rdx,[rax+0x1]
  4272fb:	mov    QWORD PTR [rbx+0x28],rdx
  4272ff:	mov    BYTE PTR [rax],0xa
  427302:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427307:	jmp    4271a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa8>
  42730c:	nop    DWORD PTR [rax+0x0]
  427310:	mov    rsi,rbp
  427313:	mov    rdi,rbx
  427316:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42731b:	jmp    42724e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14e>
  427320:	xor    esi,esi
  427322:	mov    rdi,rbx
  427325:	call   QWORD PTR [rbx+0x48]
  427328:	jmp    4271a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa8>
  42732d:	nop    DWORD PTR [rax]

0000000000427330 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  427330:	cmp    BYTE PTR [rdi+0x33],0x0
  427334:	jne    4274a0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
  42733a:	lea    eax,[rdx+rdx*1+0x4]
  42733e:	cmp    eax,DWORD PTR [rsi+0x10]
  427341:	jl     427348 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18>
  427343:	ret    
  427344:	nop    DWORD PTR [rax+0x0]
  427348:	push   r14
  42734a:	push   r13
  42734c:	push   r12
  42734e:	push   rbp
  42734f:	push   rbx
  427350:	mov    rdx,QWORD PTR [rsi+0x8]
  427354:	movzx  r12d,WORD PTR [rdx+rax*1]
  427359:	test   r12w,r12w
  42735d:	je     42748d <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15d>
  427363:	add    r12,QWORD PTR [rsi]
  427366:	je     42748d <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15d>
  42736c:	mov    eax,DWORD PTR [rsi+0x18]
  42736f:	lea    edx,[rax+0x1]
  427372:	test   eax,eax
  427374:	mov    DWORD PTR [rsi+0x18],edx
  427377:	je     427388 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x58>
  427379:	mov    rax,QWORD PTR [rdi+0x28]
  42737d:	lea    rdx,[rax+0x1]
  427381:	mov    QWORD PTR [rdi+0x28],rdx
  427385:	mov    BYTE PTR [rax],0x2c
  427388:	mov    eax,DWORD PTR [r12]
  42738c:	mov    rbx,rdi
  42738f:	movsxd rdx,r8d
  427392:	mov    rsi,rcx
  427395:	mov    r13,r9
  427398:	add    r12,rax
  42739b:	mov    r14d,DWORD PTR [r12]
  42739f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4273a4:	mov    rax,QWORD PTR [rbx+0x28]
  4273a8:	add    DWORD PTR [rbx+0x38],0x1
  4273ac:	test   r14d,r14d
  4273af:	lea    rdx,[rax+0x1]
  4273b3:	mov    QWORD PTR [rbx+0x28],rdx
  4273b7:	mov    BYTE PTR [rax],0x5b
  4273ba:	je     427478 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  4273c0:	cmp    BYTE PTR [rbx+0x31],0x0
  4273c4:	jne    427520 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1f0>
  4273ca:	mov    rax,QWORD PTR [rbx+0x20]
  4273ce:	cmp    QWORD PTR [rbx+0x28],rax
  4273d2:	jae    427550 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
  4273d8:	mov    rsi,QWORD PTR [r12+0x4]
  4273dd:	mov    rdi,rbx
  4273e0:	lea    rbp,[r12+0xc]
  4273e5:	call   r13
  4273e8:	cmp    r14d,0x1
  4273ec:	lea    eax,[r14-0x2]
  4273f0:	je     427478 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  4273f6:	lea    r14,[r12+rax*8+0x14]
  4273fb:	jmp    427421 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf1>
  4273fd:	nop    DWORD PTR [rax]
  427400:	mov    rax,QWORD PTR [rbx+0x20]
  427404:	cmp    QWORD PTR [rbx+0x28],rax
  427408:	jae    4274a8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
  42740e:	mov    rsi,QWORD PTR [rbp+0x0]
  427412:	add    rbp,0x8
  427416:	mov    rdi,rbx
  427419:	call   r13
  42741c:	cmp    rbp,r14
  42741f:	je     427478 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  427421:	mov    rax,QWORD PTR [rbx+0x28]
  427425:	lea    rdx,[rax+0x1]
  427429:	mov    QWORD PTR [rbx+0x28],rdx
  42742d:	mov    BYTE PTR [rax],0x2c
  427430:	cmp    BYTE PTR [rbx+0x31],0x0
  427434:	je     427400 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xd0>
  427436:	mov    rax,QWORD PTR [rbx+0x28]
  42743a:	lea    rdx,[rax+0x1]
  42743e:	mov    QWORD PTR [rbx+0x28],rdx
  427442:	mov    BYTE PTR [rax],0xa
  427445:	movzx  r12d,BYTE PTR [rbx+0x31]
  42744a:	mov    rdi,QWORD PTR [rbx+0x28]
  42744e:	imul   r12d,DWORD PTR [rbx+0x38]
  427453:	movsxd r12,r12d
  427456:	lea    rax,[rdi+r12*1]
  42745a:	cmp    QWORD PTR [rbx+0x20],rax
  42745e:	jb     4274b8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x188>
  427460:	mov    rdx,r12
  427463:	mov    esi,0x20
  427468:	call   405090 <memset@plt>
  42746d:	add    QWORD PTR [rbx+0x28],r12
  427471:	jmp    42740e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  427473:	nop    DWORD PTR [rax+rax*1+0x0]
  427478:	cmp    BYTE PTR [rbx+0x31],0x0
  42747c:	jne    4274d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a0>
  42747e:	mov    rax,QWORD PTR [rbx+0x28]
  427482:	lea    rdx,[rax+0x1]
  427486:	mov    QWORD PTR [rbx+0x28],rdx
  42748a:	mov    BYTE PTR [rax],0x5d
  42748d:	pop    rbx
  42748e:	pop    rbp
  42748f:	pop    r12
  427491:	pop    r13
  427493:	pop    r14
  427495:	ret    
  427496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274a0:	jmp    4255c0 <flatcc_json_printer_uint64_vector_field@@Base>
  4274a5:	nop    DWORD PTR [rax]
  4274a8:	xor    esi,esi
  4274aa:	mov    rdi,rbx
  4274ad:	call   QWORD PTR [rbx+0x48]
  4274b0:	jmp    42740e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  4274b5:	nop    DWORD PTR [rax]
  4274b8:	mov    rsi,r12
  4274bb:	mov    rdi,rbx
  4274be:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4274c3:	jmp    42740e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  4274c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4274d0:	mov    rax,QWORD PTR [rbx+0x28]
  4274d4:	lea    rdx,[rax+0x1]
  4274d8:	mov    QWORD PTR [rbx+0x28],rdx
  4274dc:	mov    BYTE PTR [rax],0xa
  4274df:	mov    eax,DWORD PTR [rbx+0x38]
  4274e2:	mov    rdi,QWORD PTR [rbx+0x28]
  4274e6:	lea    ebp,[rax-0x1]
  4274e9:	movzx  eax,BYTE PTR [rbx+0x31]
  4274ed:	mov    DWORD PTR [rbx+0x38],ebp
  4274f0:	imul   eax,ebp
  4274f3:	movsxd rbp,eax
  4274f6:	lea    rax,[rdi+rbp*1]
  4274fa:	cmp    QWORD PTR [rbx+0x20],rax
  4274fe:	jb     427540 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
  427500:	mov    rdx,rbp
  427503:	mov    esi,0x20
  427508:	call   405090 <memset@plt>
  42750d:	mov    rax,rbp
  427510:	add    rax,QWORD PTR [rbx+0x28]
  427514:	jmp    427482 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x152>
  427519:	nop    DWORD PTR [rax+0x0]
  427520:	mov    rax,QWORD PTR [rbx+0x28]
  427524:	mov    rdi,rbx
  427527:	lea    rdx,[rax+0x1]
  42752b:	mov    QWORD PTR [rbx+0x28],rdx
  42752f:	mov    BYTE PTR [rax],0xa
  427532:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427537:	jmp    4273d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa8>
  42753c:	nop    DWORD PTR [rax+0x0]
  427540:	mov    rsi,rbp
  427543:	mov    rdi,rbx
  427546:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42754b:	jmp    42747e <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14e>
  427550:	xor    esi,esi
  427552:	mov    rdi,rbx
  427555:	call   QWORD PTR [rbx+0x48]
  427558:	jmp    4273d8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa8>
  42755d:	nop    DWORD PTR [rax]

0000000000427560 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  427560:	cmp    BYTE PTR [rdi+0x33],0x0
  427564:	jne    4276d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
  42756a:	lea    eax,[rdx+rdx*1+0x4]
  42756e:	cmp    eax,DWORD PTR [rsi+0x10]
  427571:	jl     427578 <flatcc_json_printer_int8_enum_vector_field@@Base+0x18>
  427573:	ret    
  427574:	nop    DWORD PTR [rax+0x0]
  427578:	push   r14
  42757a:	push   r13
  42757c:	push   r12
  42757e:	push   rbp
  42757f:	push   rbx
  427580:	mov    rdx,QWORD PTR [rsi+0x8]
  427584:	movzx  r12d,WORD PTR [rdx+rax*1]
  427589:	test   r12w,r12w
  42758d:	je     4276bd <flatcc_json_printer_int8_enum_vector_field@@Base+0x15d>
  427593:	add    r12,QWORD PTR [rsi]
  427596:	je     4276bd <flatcc_json_printer_int8_enum_vector_field@@Base+0x15d>
  42759c:	mov    eax,DWORD PTR [rsi+0x18]
  42759f:	lea    edx,[rax+0x1]
  4275a2:	test   eax,eax
  4275a4:	mov    DWORD PTR [rsi+0x18],edx
  4275a7:	je     4275b8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x58>
  4275a9:	mov    rax,QWORD PTR [rdi+0x28]
  4275ad:	lea    rdx,[rax+0x1]
  4275b1:	mov    QWORD PTR [rdi+0x28],rdx
  4275b5:	mov    BYTE PTR [rax],0x2c
  4275b8:	mov    eax,DWORD PTR [r12]
  4275bc:	mov    rbx,rdi
  4275bf:	movsxd rdx,r8d
  4275c2:	mov    rsi,rcx
  4275c5:	mov    r13,r9
  4275c8:	add    r12,rax
  4275cb:	mov    r14d,DWORD PTR [r12]
  4275cf:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4275d4:	mov    rax,QWORD PTR [rbx+0x28]
  4275d8:	add    DWORD PTR [rbx+0x38],0x1
  4275dc:	test   r14d,r14d
  4275df:	lea    rdx,[rax+0x1]
  4275e3:	mov    QWORD PTR [rbx+0x28],rdx
  4275e7:	mov    BYTE PTR [rax],0x5b
  4275ea:	je     4276a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  4275f0:	cmp    BYTE PTR [rbx+0x31],0x0
  4275f4:	jne    427750 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
  4275fa:	mov    rax,QWORD PTR [rbx+0x20]
  4275fe:	cmp    QWORD PTR [rbx+0x28],rax
  427602:	jae    427780 <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
  427608:	movsx  esi,BYTE PTR [r12+0x4]
  42760e:	mov    rdi,rbx
  427611:	lea    rbp,[r12+0x5]
  427616:	call   r13
  427619:	cmp    r14d,0x1
  42761d:	lea    eax,[r14-0x2]
  427621:	je     4276a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  427627:	lea    r14,[r12+rax*1+0x6]
  42762c:	jmp    427651 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf1>
  42762e:	xchg   ax,ax
  427630:	mov    rax,QWORD PTR [rbx+0x20]
  427634:	cmp    QWORD PTR [rbx+0x28],rax
  427638:	jae    4276d8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
  42763e:	movsx  esi,BYTE PTR [rbp+0x0]
  427642:	add    rbp,0x1
  427646:	mov    rdi,rbx
  427649:	call   r13
  42764c:	cmp    rbp,r14
  42764f:	je     4276a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  427651:	mov    rax,QWORD PTR [rbx+0x28]
  427655:	lea    rdx,[rax+0x1]
  427659:	mov    QWORD PTR [rbx+0x28],rdx
  42765d:	mov    BYTE PTR [rax],0x2c
  427660:	cmp    BYTE PTR [rbx+0x31],0x0
  427664:	je     427630 <flatcc_json_printer_int8_enum_vector_field@@Base+0xd0>
  427666:	mov    rax,QWORD PTR [rbx+0x28]
  42766a:	lea    rdx,[rax+0x1]
  42766e:	mov    QWORD PTR [rbx+0x28],rdx
  427672:	mov    BYTE PTR [rax],0xa
  427675:	movzx  r12d,BYTE PTR [rbx+0x31]
  42767a:	mov    rdi,QWORD PTR [rbx+0x28]
  42767e:	imul   r12d,DWORD PTR [rbx+0x38]
  427683:	movsxd r12,r12d
  427686:	lea    rax,[rdi+r12*1]
  42768a:	cmp    QWORD PTR [rbx+0x20],rax
  42768e:	jb     4276e8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
  427690:	mov    rdx,r12
  427693:	mov    esi,0x20
  427698:	call   405090 <memset@plt>
  42769d:	add    QWORD PTR [rbx+0x28],r12
  4276a1:	jmp    42763e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  4276a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4276a8:	cmp    BYTE PTR [rbx+0x31],0x0
  4276ac:	jne    427700 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a0>
  4276ae:	mov    rax,QWORD PTR [rbx+0x28]
  4276b2:	lea    rdx,[rax+0x1]
  4276b6:	mov    QWORD PTR [rbx+0x28],rdx
  4276ba:	mov    BYTE PTR [rax],0x5d
  4276bd:	pop    rbx
  4276be:	pop    rbp
  4276bf:	pop    r12
  4276c1:	pop    r13
  4276c3:	pop    r14
  4276c5:	ret    
  4276c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276d0:	jmp    4257f0 <flatcc_json_printer_int8_vector_field@@Base>
  4276d5:	nop    DWORD PTR [rax]
  4276d8:	xor    esi,esi
  4276da:	mov    rdi,rbx
  4276dd:	call   QWORD PTR [rbx+0x48]
  4276e0:	jmp    42763e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  4276e5:	nop    DWORD PTR [rax]
  4276e8:	mov    rsi,r12
  4276eb:	mov    rdi,rbx
  4276ee:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4276f3:	jmp    42763e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  4276f8:	nop    DWORD PTR [rax+rax*1+0x0]
  427700:	mov    rax,QWORD PTR [rbx+0x28]
  427704:	lea    rdx,[rax+0x1]
  427708:	mov    QWORD PTR [rbx+0x28],rdx
  42770c:	mov    BYTE PTR [rax],0xa
  42770f:	mov    eax,DWORD PTR [rbx+0x38]
  427712:	mov    rdi,QWORD PTR [rbx+0x28]
  427716:	lea    ebp,[rax-0x1]
  427719:	movzx  eax,BYTE PTR [rbx+0x31]
  42771d:	mov    DWORD PTR [rbx+0x38],ebp
  427720:	imul   eax,ebp
  427723:	movsxd rbp,eax
  427726:	lea    rax,[rdi+rbp*1]
  42772a:	cmp    QWORD PTR [rbx+0x20],rax
  42772e:	jb     427770 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
  427730:	mov    rdx,rbp
  427733:	mov    esi,0x20
  427738:	call   405090 <memset@plt>
  42773d:	mov    rax,rbp
  427740:	add    rax,QWORD PTR [rbx+0x28]
  427744:	jmp    4276b2 <flatcc_json_printer_int8_enum_vector_field@@Base+0x152>
  427749:	nop    DWORD PTR [rax+0x0]
  427750:	mov    rax,QWORD PTR [rbx+0x28]
  427754:	mov    rdi,rbx
  427757:	lea    rdx,[rax+0x1]
  42775b:	mov    QWORD PTR [rbx+0x28],rdx
  42775f:	mov    BYTE PTR [rax],0xa
  427762:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427767:	jmp    427608 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa8>
  42776c:	nop    DWORD PTR [rax+0x0]
  427770:	mov    rsi,rbp
  427773:	mov    rdi,rbx
  427776:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42777b:	jmp    4276ae <flatcc_json_printer_int8_enum_vector_field@@Base+0x14e>
  427780:	xor    esi,esi
  427782:	mov    rdi,rbx
  427785:	call   QWORD PTR [rbx+0x48]
  427788:	jmp    427608 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa8>
  42778d:	nop    DWORD PTR [rax]

0000000000427790 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  427790:	cmp    BYTE PTR [rdi+0x33],0x0
  427794:	jne    427900 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
  42779a:	lea    eax,[rdx+rdx*1+0x4]
  42779e:	cmp    eax,DWORD PTR [rsi+0x10]
  4277a1:	jl     4277a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18>
  4277a3:	ret    
  4277a4:	nop    DWORD PTR [rax+0x0]
  4277a8:	push   r14
  4277aa:	push   r13
  4277ac:	push   r12
  4277ae:	push   rbp
  4277af:	push   rbx
  4277b0:	mov    rdx,QWORD PTR [rsi+0x8]
  4277b4:	movzx  r12d,WORD PTR [rdx+rax*1]
  4277b9:	test   r12w,r12w
  4277bd:	je     4278ed <flatcc_json_printer_int16_enum_vector_field@@Base+0x15d>
  4277c3:	add    r12,QWORD PTR [rsi]
  4277c6:	je     4278ed <flatcc_json_printer_int16_enum_vector_field@@Base+0x15d>
  4277cc:	mov    eax,DWORD PTR [rsi+0x18]
  4277cf:	lea    edx,[rax+0x1]
  4277d2:	test   eax,eax
  4277d4:	mov    DWORD PTR [rsi+0x18],edx
  4277d7:	je     4277e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x58>
  4277d9:	mov    rax,QWORD PTR [rdi+0x28]
  4277dd:	lea    rdx,[rax+0x1]
  4277e1:	mov    QWORD PTR [rdi+0x28],rdx
  4277e5:	mov    BYTE PTR [rax],0x2c
  4277e8:	mov    eax,DWORD PTR [r12]
  4277ec:	mov    rbx,rdi
  4277ef:	movsxd rdx,r8d
  4277f2:	mov    rsi,rcx
  4277f5:	mov    r13,r9
  4277f8:	add    r12,rax
  4277fb:	mov    r14d,DWORD PTR [r12]
  4277ff:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427804:	mov    rax,QWORD PTR [rbx+0x28]
  427808:	add    DWORD PTR [rbx+0x38],0x1
  42780c:	test   r14d,r14d
  42780f:	lea    rdx,[rax+0x1]
  427813:	mov    QWORD PTR [rbx+0x28],rdx
  427817:	mov    BYTE PTR [rax],0x5b
  42781a:	je     4278d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  427820:	cmp    BYTE PTR [rbx+0x31],0x0
  427824:	jne    427980 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f0>
  42782a:	mov    rax,QWORD PTR [rbx+0x20]
  42782e:	cmp    QWORD PTR [rbx+0x28],rax
  427832:	jae    4279b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
  427838:	movsx  esi,WORD PTR [r12+0x4]
  42783e:	mov    rdi,rbx
  427841:	lea    rbp,[r12+0x6]
  427846:	call   r13
  427849:	cmp    r14d,0x1
  42784d:	lea    eax,[r14-0x2]
  427851:	je     4278d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  427857:	lea    r14,[r12+rax*2+0x8]
  42785c:	jmp    427881 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf1>
  42785e:	xchg   ax,ax
  427860:	mov    rax,QWORD PTR [rbx+0x20]
  427864:	cmp    QWORD PTR [rbx+0x28],rax
  427868:	jae    427908 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
  42786e:	movsx  esi,WORD PTR [rbp+0x0]
  427872:	add    rbp,0x2
  427876:	mov    rdi,rbx
  427879:	call   r13
  42787c:	cmp    rbp,r14
  42787f:	je     4278d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  427881:	mov    rax,QWORD PTR [rbx+0x28]
  427885:	lea    rdx,[rax+0x1]
  427889:	mov    QWORD PTR [rbx+0x28],rdx
  42788d:	mov    BYTE PTR [rax],0x2c
  427890:	cmp    BYTE PTR [rbx+0x31],0x0
  427894:	je     427860 <flatcc_json_printer_int16_enum_vector_field@@Base+0xd0>
  427896:	mov    rax,QWORD PTR [rbx+0x28]
  42789a:	lea    rdx,[rax+0x1]
  42789e:	mov    QWORD PTR [rbx+0x28],rdx
  4278a2:	mov    BYTE PTR [rax],0xa
  4278a5:	movzx  r12d,BYTE PTR [rbx+0x31]
  4278aa:	mov    rdi,QWORD PTR [rbx+0x28]
  4278ae:	imul   r12d,DWORD PTR [rbx+0x38]
  4278b3:	movsxd r12,r12d
  4278b6:	lea    rax,[rdi+r12*1]
  4278ba:	cmp    QWORD PTR [rbx+0x20],rax
  4278be:	jb     427918 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
  4278c0:	mov    rdx,r12
  4278c3:	mov    esi,0x20
  4278c8:	call   405090 <memset@plt>
  4278cd:	add    QWORD PTR [rbx+0x28],r12
  4278d1:	jmp    42786e <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  4278d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4278d8:	cmp    BYTE PTR [rbx+0x31],0x0
  4278dc:	jne    427930 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a0>
  4278de:	mov    rax,QWORD PTR [rbx+0x28]
  4278e2:	lea    rdx,[rax+0x1]
  4278e6:	mov    QWORD PTR [rbx+0x28],rdx
  4278ea:	mov    BYTE PTR [rax],0x5d
  4278ed:	pop    rbx
  4278ee:	pop    rbp
  4278ef:	pop    r12
  4278f1:	pop    r13
  4278f3:	pop    r14
  4278f5:	ret    
  4278f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427900:	jmp    425a80 <flatcc_json_printer_int16_vector_field@@Base>
  427905:	nop    DWORD PTR [rax]
  427908:	xor    esi,esi
  42790a:	mov    rdi,rbx
  42790d:	call   QWORD PTR [rbx+0x48]
  427910:	jmp    42786e <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  427915:	nop    DWORD PTR [rax]
  427918:	mov    rsi,r12
  42791b:	mov    rdi,rbx
  42791e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427923:	jmp    42786e <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  427928:	nop    DWORD PTR [rax+rax*1+0x0]
  427930:	mov    rax,QWORD PTR [rbx+0x28]
  427934:	lea    rdx,[rax+0x1]
  427938:	mov    QWORD PTR [rbx+0x28],rdx
  42793c:	mov    BYTE PTR [rax],0xa
  42793f:	mov    eax,DWORD PTR [rbx+0x38]
  427942:	mov    rdi,QWORD PTR [rbx+0x28]
  427946:	lea    ebp,[rax-0x1]
  427949:	movzx  eax,BYTE PTR [rbx+0x31]
  42794d:	mov    DWORD PTR [rbx+0x38],ebp
  427950:	imul   eax,ebp
  427953:	movsxd rbp,eax
  427956:	lea    rax,[rdi+rbp*1]
  42795a:	cmp    QWORD PTR [rbx+0x20],rax
  42795e:	jb     4279a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x210>
  427960:	mov    rdx,rbp
  427963:	mov    esi,0x20
  427968:	call   405090 <memset@plt>
  42796d:	mov    rax,rbp
  427970:	add    rax,QWORD PTR [rbx+0x28]
  427974:	jmp    4278e2 <flatcc_json_printer_int16_enum_vector_field@@Base+0x152>
  427979:	nop    DWORD PTR [rax+0x0]
  427980:	mov    rax,QWORD PTR [rbx+0x28]
  427984:	mov    rdi,rbx
  427987:	lea    rdx,[rax+0x1]
  42798b:	mov    QWORD PTR [rbx+0x28],rdx
  42798f:	mov    BYTE PTR [rax],0xa
  427992:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427997:	jmp    427838 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa8>
  42799c:	nop    DWORD PTR [rax+0x0]
  4279a0:	mov    rsi,rbp
  4279a3:	mov    rdi,rbx
  4279a6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4279ab:	jmp    4278de <flatcc_json_printer_int16_enum_vector_field@@Base+0x14e>
  4279b0:	xor    esi,esi
  4279b2:	mov    rdi,rbx
  4279b5:	call   QWORD PTR [rbx+0x48]
  4279b8:	jmp    427838 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa8>
  4279bd:	nop    DWORD PTR [rax]

00000000004279c0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  4279c0:	cmp    BYTE PTR [rdi+0x33],0x0
  4279c4:	jne    427b30 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
  4279ca:	lea    eax,[rdx+rdx*1+0x4]
  4279ce:	cmp    eax,DWORD PTR [rsi+0x10]
  4279d1:	jl     4279d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18>
  4279d3:	ret    
  4279d4:	nop    DWORD PTR [rax+0x0]
  4279d8:	push   r14
  4279da:	push   r13
  4279dc:	push   r12
  4279de:	push   rbp
  4279df:	push   rbx
  4279e0:	mov    rdx,QWORD PTR [rsi+0x8]
  4279e4:	movzx  r12d,WORD PTR [rdx+rax*1]
  4279e9:	test   r12w,r12w
  4279ed:	je     427b1d <flatcc_json_printer_int32_enum_vector_field@@Base+0x15d>
  4279f3:	add    r12,QWORD PTR [rsi]
  4279f6:	je     427b1d <flatcc_json_printer_int32_enum_vector_field@@Base+0x15d>
  4279fc:	mov    eax,DWORD PTR [rsi+0x18]
  4279ff:	lea    edx,[rax+0x1]
  427a02:	test   eax,eax
  427a04:	mov    DWORD PTR [rsi+0x18],edx
  427a07:	je     427a18 <flatcc_json_printer_int32_enum_vector_field@@Base+0x58>
  427a09:	mov    rax,QWORD PTR [rdi+0x28]
  427a0d:	lea    rdx,[rax+0x1]
  427a11:	mov    QWORD PTR [rdi+0x28],rdx
  427a15:	mov    BYTE PTR [rax],0x2c
  427a18:	mov    eax,DWORD PTR [r12]
  427a1c:	mov    rbx,rdi
  427a1f:	movsxd rdx,r8d
  427a22:	mov    rsi,rcx
  427a25:	mov    r13,r9
  427a28:	add    r12,rax
  427a2b:	mov    r14d,DWORD PTR [r12]
  427a2f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427a34:	mov    rax,QWORD PTR [rbx+0x28]
  427a38:	add    DWORD PTR [rbx+0x38],0x1
  427a3c:	test   r14d,r14d
  427a3f:	lea    rdx,[rax+0x1]
  427a43:	mov    QWORD PTR [rbx+0x28],rdx
  427a47:	mov    BYTE PTR [rax],0x5b
  427a4a:	je     427b08 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  427a50:	cmp    BYTE PTR [rbx+0x31],0x0
  427a54:	jne    427bb0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f0>
  427a5a:	mov    rax,QWORD PTR [rbx+0x20]
  427a5e:	cmp    QWORD PTR [rbx+0x28],rax
  427a62:	jae    427be0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
  427a68:	mov    esi,DWORD PTR [r12+0x4]
  427a6d:	mov    rdi,rbx
  427a70:	lea    rbp,[r12+0x8]
  427a75:	call   r13
  427a78:	cmp    r14d,0x1
  427a7c:	lea    eax,[r14-0x2]
  427a80:	je     427b08 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  427a86:	lea    r14,[r12+rax*4+0xc]
  427a8b:	jmp    427ab0 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf0>
  427a8d:	nop    DWORD PTR [rax]
  427a90:	mov    rax,QWORD PTR [rbx+0x20]
  427a94:	cmp    QWORD PTR [rbx+0x28],rax
  427a98:	jae    427b38 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
  427a9e:	mov    esi,DWORD PTR [rbp+0x0]
  427aa1:	add    rbp,0x4
  427aa5:	mov    rdi,rbx
  427aa8:	call   r13
  427aab:	cmp    rbp,r14
  427aae:	je     427b08 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  427ab0:	mov    rax,QWORD PTR [rbx+0x28]
  427ab4:	lea    rdx,[rax+0x1]
  427ab8:	mov    QWORD PTR [rbx+0x28],rdx
  427abc:	mov    BYTE PTR [rax],0x2c
  427abf:	cmp    BYTE PTR [rbx+0x31],0x0
  427ac3:	je     427a90 <flatcc_json_printer_int32_enum_vector_field@@Base+0xd0>
  427ac5:	mov    rax,QWORD PTR [rbx+0x28]
  427ac9:	lea    rdx,[rax+0x1]
  427acd:	mov    QWORD PTR [rbx+0x28],rdx
  427ad1:	mov    BYTE PTR [rax],0xa
  427ad4:	movzx  r12d,BYTE PTR [rbx+0x31]
  427ad9:	mov    rdi,QWORD PTR [rbx+0x28]
  427add:	imul   r12d,DWORD PTR [rbx+0x38]
  427ae2:	movsxd r12,r12d
  427ae5:	lea    rax,[rdi+r12*1]
  427ae9:	cmp    QWORD PTR [rbx+0x20],rax
  427aed:	jb     427b48 <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
  427aef:	mov    rdx,r12
  427af2:	mov    esi,0x20
  427af7:	call   405090 <memset@plt>
  427afc:	add    QWORD PTR [rbx+0x28],r12
  427b00:	jmp    427a9e <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  427b02:	nop    WORD PTR [rax+rax*1+0x0]
  427b08:	cmp    BYTE PTR [rbx+0x31],0x0
  427b0c:	jne    427b60 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a0>
  427b0e:	mov    rax,QWORD PTR [rbx+0x28]
  427b12:	lea    rdx,[rax+0x1]
  427b16:	mov    QWORD PTR [rbx+0x28],rdx
  427b1a:	mov    BYTE PTR [rax],0x5d
  427b1d:	pop    rbx
  427b1e:	pop    rbp
  427b1f:	pop    r12
  427b21:	pop    r13
  427b23:	pop    r14
  427b25:	ret    
  427b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b30:	jmp    425d30 <flatcc_json_printer_int32_vector_field@@Base>
  427b35:	nop    DWORD PTR [rax]
  427b38:	xor    esi,esi
  427b3a:	mov    rdi,rbx
  427b3d:	call   QWORD PTR [rbx+0x48]
  427b40:	jmp    427a9e <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  427b45:	nop    DWORD PTR [rax]
  427b48:	mov    rsi,r12
  427b4b:	mov    rdi,rbx
  427b4e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427b53:	jmp    427a9e <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  427b58:	nop    DWORD PTR [rax+rax*1+0x0]
  427b60:	mov    rax,QWORD PTR [rbx+0x28]
  427b64:	lea    rdx,[rax+0x1]
  427b68:	mov    QWORD PTR [rbx+0x28],rdx
  427b6c:	mov    BYTE PTR [rax],0xa
  427b6f:	mov    eax,DWORD PTR [rbx+0x38]
  427b72:	mov    rdi,QWORD PTR [rbx+0x28]
  427b76:	lea    ebp,[rax-0x1]
  427b79:	movzx  eax,BYTE PTR [rbx+0x31]
  427b7d:	mov    DWORD PTR [rbx+0x38],ebp
  427b80:	imul   eax,ebp
  427b83:	movsxd rbp,eax
  427b86:	lea    rax,[rdi+rbp*1]
  427b8a:	cmp    QWORD PTR [rbx+0x20],rax
  427b8e:	jb     427bd0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
  427b90:	mov    rdx,rbp
  427b93:	mov    esi,0x20
  427b98:	call   405090 <memset@plt>
  427b9d:	mov    rax,rbp
  427ba0:	add    rax,QWORD PTR [rbx+0x28]
  427ba4:	jmp    427b12 <flatcc_json_printer_int32_enum_vector_field@@Base+0x152>
  427ba9:	nop    DWORD PTR [rax+0x0]
  427bb0:	mov    rax,QWORD PTR [rbx+0x28]
  427bb4:	mov    rdi,rbx
  427bb7:	lea    rdx,[rax+0x1]
  427bbb:	mov    QWORD PTR [rbx+0x28],rdx
  427bbf:	mov    BYTE PTR [rax],0xa
  427bc2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427bc7:	jmp    427a68 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa8>
  427bcc:	nop    DWORD PTR [rax+0x0]
  427bd0:	mov    rsi,rbp
  427bd3:	mov    rdi,rbx
  427bd6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427bdb:	jmp    427b0e <flatcc_json_printer_int32_enum_vector_field@@Base+0x14e>
  427be0:	xor    esi,esi
  427be2:	mov    rdi,rbx
  427be5:	call   QWORD PTR [rbx+0x48]
  427be8:	jmp    427a68 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa8>
  427bed:	nop    DWORD PTR [rax]

0000000000427bf0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  427bf0:	cmp    BYTE PTR [rdi+0x33],0x0
  427bf4:	jne    427d60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
  427bfa:	lea    eax,[rdx+rdx*1+0x4]
  427bfe:	cmp    eax,DWORD PTR [rsi+0x10]
  427c01:	jl     427c08 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18>
  427c03:	ret    
  427c04:	nop    DWORD PTR [rax+0x0]
  427c08:	push   r14
  427c0a:	push   r13
  427c0c:	push   r12
  427c0e:	push   rbp
  427c0f:	push   rbx
  427c10:	mov    rdx,QWORD PTR [rsi+0x8]
  427c14:	movzx  r12d,WORD PTR [rdx+rax*1]
  427c19:	test   r12w,r12w
  427c1d:	je     427d4d <flatcc_json_printer_int64_enum_vector_field@@Base+0x15d>
  427c23:	add    r12,QWORD PTR [rsi]
  427c26:	je     427d4d <flatcc_json_printer_int64_enum_vector_field@@Base+0x15d>
  427c2c:	mov    eax,DWORD PTR [rsi+0x18]
  427c2f:	lea    edx,[rax+0x1]
  427c32:	test   eax,eax
  427c34:	mov    DWORD PTR [rsi+0x18],edx
  427c37:	je     427c48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x58>
  427c39:	mov    rax,QWORD PTR [rdi+0x28]
  427c3d:	lea    rdx,[rax+0x1]
  427c41:	mov    QWORD PTR [rdi+0x28],rdx
  427c45:	mov    BYTE PTR [rax],0x2c
  427c48:	mov    eax,DWORD PTR [r12]
  427c4c:	mov    rbx,rdi
  427c4f:	movsxd rdx,r8d
  427c52:	mov    rsi,rcx
  427c55:	mov    r13,r9
  427c58:	add    r12,rax
  427c5b:	mov    r14d,DWORD PTR [r12]
  427c5f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427c64:	mov    rax,QWORD PTR [rbx+0x28]
  427c68:	add    DWORD PTR [rbx+0x38],0x1
  427c6c:	test   r14d,r14d
  427c6f:	lea    rdx,[rax+0x1]
  427c73:	mov    QWORD PTR [rbx+0x28],rdx
  427c77:	mov    BYTE PTR [rax],0x5b
  427c7a:	je     427d38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  427c80:	cmp    BYTE PTR [rbx+0x31],0x0
  427c84:	jne    427de0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1f0>
  427c8a:	mov    rax,QWORD PTR [rbx+0x20]
  427c8e:	cmp    QWORD PTR [rbx+0x28],rax
  427c92:	jae    427e10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
  427c98:	mov    rsi,QWORD PTR [r12+0x4]
  427c9d:	mov    rdi,rbx
  427ca0:	lea    rbp,[r12+0xc]
  427ca5:	call   r13
  427ca8:	cmp    r14d,0x1
  427cac:	lea    eax,[r14-0x2]
  427cb0:	je     427d38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  427cb6:	lea    r14,[r12+rax*8+0x14]
  427cbb:	jmp    427ce1 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf1>
  427cbd:	nop    DWORD PTR [rax]
  427cc0:	mov    rax,QWORD PTR [rbx+0x20]
  427cc4:	cmp    QWORD PTR [rbx+0x28],rax
  427cc8:	jae    427d68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
  427cce:	mov    rsi,QWORD PTR [rbp+0x0]
  427cd2:	add    rbp,0x8
  427cd6:	mov    rdi,rbx
  427cd9:	call   r13
  427cdc:	cmp    rbp,r14
  427cdf:	je     427d38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  427ce1:	mov    rax,QWORD PTR [rbx+0x28]
  427ce5:	lea    rdx,[rax+0x1]
  427ce9:	mov    QWORD PTR [rbx+0x28],rdx
  427ced:	mov    BYTE PTR [rax],0x2c
  427cf0:	cmp    BYTE PTR [rbx+0x31],0x0
  427cf4:	je     427cc0 <flatcc_json_printer_int64_enum_vector_field@@Base+0xd0>
  427cf6:	mov    rax,QWORD PTR [rbx+0x28]
  427cfa:	lea    rdx,[rax+0x1]
  427cfe:	mov    QWORD PTR [rbx+0x28],rdx
  427d02:	mov    BYTE PTR [rax],0xa
  427d05:	movzx  r12d,BYTE PTR [rbx+0x31]
  427d0a:	mov    rdi,QWORD PTR [rbx+0x28]
  427d0e:	imul   r12d,DWORD PTR [rbx+0x38]
  427d13:	movsxd r12,r12d
  427d16:	lea    rax,[rdi+r12*1]
  427d1a:	cmp    QWORD PTR [rbx+0x20],rax
  427d1e:	jb     427d78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x188>
  427d20:	mov    rdx,r12
  427d23:	mov    esi,0x20
  427d28:	call   405090 <memset@plt>
  427d2d:	add    QWORD PTR [rbx+0x28],r12
  427d31:	jmp    427cce <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  427d33:	nop    DWORD PTR [rax+rax*1+0x0]
  427d38:	cmp    BYTE PTR [rbx+0x31],0x0
  427d3c:	jne    427d90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a0>
  427d3e:	mov    rax,QWORD PTR [rbx+0x28]
  427d42:	lea    rdx,[rax+0x1]
  427d46:	mov    QWORD PTR [rbx+0x28],rdx
  427d4a:	mov    BYTE PTR [rax],0x5d
  427d4d:	pop    rbx
  427d4e:	pop    rbp
  427d4f:	pop    r12
  427d51:	pop    r13
  427d53:	pop    r14
  427d55:	ret    
  427d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d60:	jmp    425fe0 <flatcc_json_printer_int64_vector_field@@Base>
  427d65:	nop    DWORD PTR [rax]
  427d68:	xor    esi,esi
  427d6a:	mov    rdi,rbx
  427d6d:	call   QWORD PTR [rbx+0x48]
  427d70:	jmp    427cce <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  427d75:	nop    DWORD PTR [rax]
  427d78:	mov    rsi,r12
  427d7b:	mov    rdi,rbx
  427d7e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427d83:	jmp    427cce <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  427d88:	nop    DWORD PTR [rax+rax*1+0x0]
  427d90:	mov    rax,QWORD PTR [rbx+0x28]
  427d94:	lea    rdx,[rax+0x1]
  427d98:	mov    QWORD PTR [rbx+0x28],rdx
  427d9c:	mov    BYTE PTR [rax],0xa
  427d9f:	mov    eax,DWORD PTR [rbx+0x38]
  427da2:	mov    rdi,QWORD PTR [rbx+0x28]
  427da6:	lea    ebp,[rax-0x1]
  427da9:	movzx  eax,BYTE PTR [rbx+0x31]
  427dad:	mov    DWORD PTR [rbx+0x38],ebp
  427db0:	imul   eax,ebp
  427db3:	movsxd rbp,eax
  427db6:	lea    rax,[rdi+rbp*1]
  427dba:	cmp    QWORD PTR [rbx+0x20],rax
  427dbe:	jb     427e00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
  427dc0:	mov    rdx,rbp
  427dc3:	mov    esi,0x20
  427dc8:	call   405090 <memset@plt>
  427dcd:	mov    rax,rbp
  427dd0:	add    rax,QWORD PTR [rbx+0x28]
  427dd4:	jmp    427d42 <flatcc_json_printer_int64_enum_vector_field@@Base+0x152>
  427dd9:	nop    DWORD PTR [rax+0x0]
  427de0:	mov    rax,QWORD PTR [rbx+0x28]
  427de4:	mov    rdi,rbx
  427de7:	lea    rdx,[rax+0x1]
  427deb:	mov    QWORD PTR [rbx+0x28],rdx
  427def:	mov    BYTE PTR [rax],0xa
  427df2:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427df7:	jmp    427c98 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa8>
  427dfc:	nop    DWORD PTR [rax+0x0]
  427e00:	mov    rsi,rbp
  427e03:	mov    rdi,rbx
  427e06:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427e0b:	jmp    427d3e <flatcc_json_printer_int64_enum_vector_field@@Base+0x14e>
  427e10:	xor    esi,esi
  427e12:	mov    rdi,rbx
  427e15:	call   QWORD PTR [rbx+0x48]
  427e18:	jmp    427c98 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa8>
  427e1d:	nop    DWORD PTR [rax]

0000000000427e20 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  427e20:	cmp    BYTE PTR [rdi+0x33],0x0
  427e24:	jne    427f90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
  427e2a:	lea    eax,[rdx+rdx*1+0x4]
  427e2e:	cmp    eax,DWORD PTR [rsi+0x10]
  427e31:	jl     427e38 <flatcc_json_printer_bool_enum_vector_field@@Base+0x18>
  427e33:	ret    
  427e34:	nop    DWORD PTR [rax+0x0]
  427e38:	push   r14
  427e3a:	push   r13
  427e3c:	push   r12
  427e3e:	push   rbp
  427e3f:	push   rbx
  427e40:	mov    rdx,QWORD PTR [rsi+0x8]
  427e44:	movzx  r12d,WORD PTR [rdx+rax*1]
  427e49:	test   r12w,r12w
  427e4d:	je     427f7d <flatcc_json_printer_bool_enum_vector_field@@Base+0x15d>
  427e53:	add    r12,QWORD PTR [rsi]
  427e56:	je     427f7d <flatcc_json_printer_bool_enum_vector_field@@Base+0x15d>
  427e5c:	mov    eax,DWORD PTR [rsi+0x18]
  427e5f:	lea    edx,[rax+0x1]
  427e62:	test   eax,eax
  427e64:	mov    DWORD PTR [rsi+0x18],edx
  427e67:	je     427e78 <flatcc_json_printer_bool_enum_vector_field@@Base+0x58>
  427e69:	mov    rax,QWORD PTR [rdi+0x28]
  427e6d:	lea    rdx,[rax+0x1]
  427e71:	mov    QWORD PTR [rdi+0x28],rdx
  427e75:	mov    BYTE PTR [rax],0x2c
  427e78:	mov    eax,DWORD PTR [r12]
  427e7c:	mov    rbx,rdi
  427e7f:	movsxd rdx,r8d
  427e82:	mov    rsi,rcx
  427e85:	mov    r13,r9
  427e88:	add    r12,rax
  427e8b:	mov    r14d,DWORD PTR [r12]
  427e8f:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427e94:	mov    rax,QWORD PTR [rbx+0x28]
  427e98:	add    DWORD PTR [rbx+0x38],0x1
  427e9c:	test   r14d,r14d
  427e9f:	lea    rdx,[rax+0x1]
  427ea3:	mov    QWORD PTR [rbx+0x28],rdx
  427ea7:	mov    BYTE PTR [rax],0x5b
  427eaa:	je     427f68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  427eb0:	cmp    BYTE PTR [rbx+0x31],0x0
  427eb4:	jne    428010 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
  427eba:	mov    rax,QWORD PTR [rbx+0x20]
  427ebe:	cmp    QWORD PTR [rbx+0x28],rax
  427ec2:	jae    428040 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
  427ec8:	movzx  esi,BYTE PTR [r12+0x4]
  427ece:	mov    rdi,rbx
  427ed1:	lea    rbp,[r12+0x5]
  427ed6:	call   r13
  427ed9:	cmp    r14d,0x1
  427edd:	lea    eax,[r14-0x2]
  427ee1:	je     427f68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  427ee7:	lea    r14,[r12+rax*1+0x6]
  427eec:	jmp    427f11 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf1>
  427eee:	xchg   ax,ax
  427ef0:	mov    rax,QWORD PTR [rbx+0x20]
  427ef4:	cmp    QWORD PTR [rbx+0x28],rax
  427ef8:	jae    427f98 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
  427efe:	movzx  esi,BYTE PTR [rbp+0x0]
  427f02:	add    rbp,0x1
  427f06:	mov    rdi,rbx
  427f09:	call   r13
  427f0c:	cmp    rbp,r14
  427f0f:	je     427f68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  427f11:	mov    rax,QWORD PTR [rbx+0x28]
  427f15:	lea    rdx,[rax+0x1]
  427f19:	mov    QWORD PTR [rbx+0x28],rdx
  427f1d:	mov    BYTE PTR [rax],0x2c
  427f20:	cmp    BYTE PTR [rbx+0x31],0x0
  427f24:	je     427ef0 <flatcc_json_printer_bool_enum_vector_field@@Base+0xd0>
  427f26:	mov    rax,QWORD PTR [rbx+0x28]
  427f2a:	lea    rdx,[rax+0x1]
  427f2e:	mov    QWORD PTR [rbx+0x28],rdx
  427f32:	mov    BYTE PTR [rax],0xa
  427f35:	movzx  r12d,BYTE PTR [rbx+0x31]
  427f3a:	mov    rdi,QWORD PTR [rbx+0x28]
  427f3e:	imul   r12d,DWORD PTR [rbx+0x38]
  427f43:	movsxd r12,r12d
  427f46:	lea    rax,[rdi+r12*1]
  427f4a:	cmp    QWORD PTR [rbx+0x20],rax
  427f4e:	jb     427fa8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
  427f50:	mov    rdx,r12
  427f53:	mov    esi,0x20
  427f58:	call   405090 <memset@plt>
  427f5d:	add    QWORD PTR [rbx+0x28],r12
  427f61:	jmp    427efe <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  427f63:	nop    DWORD PTR [rax+rax*1+0x0]
  427f68:	cmp    BYTE PTR [rbx+0x31],0x0
  427f6c:	jne    427fc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a0>
  427f6e:	mov    rax,QWORD PTR [rbx+0x28]
  427f72:	lea    rdx,[rax+0x1]
  427f76:	mov    QWORD PTR [rbx+0x28],rdx
  427f7a:	mov    BYTE PTR [rax],0x5d
  427f7d:	pop    rbx
  427f7e:	pop    rbp
  427f7f:	pop    r12
  427f81:	pop    r13
  427f83:	pop    r14
  427f85:	ret    
  427f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f90:	jmp    4262b0 <flatcc_json_printer_bool_vector_field@@Base>
  427f95:	nop    DWORD PTR [rax]
  427f98:	xor    esi,esi
  427f9a:	mov    rdi,rbx
  427f9d:	call   QWORD PTR [rbx+0x48]
  427fa0:	jmp    427efe <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  427fa5:	nop    DWORD PTR [rax]
  427fa8:	mov    rsi,r12
  427fab:	mov    rdi,rbx
  427fae:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427fb3:	jmp    427efe <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  427fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  427fc0:	mov    rax,QWORD PTR [rbx+0x28]
  427fc4:	lea    rdx,[rax+0x1]
  427fc8:	mov    QWORD PTR [rbx+0x28],rdx
  427fcc:	mov    BYTE PTR [rax],0xa
  427fcf:	mov    eax,DWORD PTR [rbx+0x38]
  427fd2:	mov    rdi,QWORD PTR [rbx+0x28]
  427fd6:	lea    ebp,[rax-0x1]
  427fd9:	movzx  eax,BYTE PTR [rbx+0x31]
  427fdd:	mov    DWORD PTR [rbx+0x38],ebp
  427fe0:	imul   eax,ebp
  427fe3:	movsxd rbp,eax
  427fe6:	lea    rax,[rdi+rbp*1]
  427fea:	cmp    QWORD PTR [rbx+0x20],rax
  427fee:	jb     428030 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
  427ff0:	mov    rdx,rbp
  427ff3:	mov    esi,0x20
  427ff8:	call   405090 <memset@plt>
  427ffd:	mov    rax,rbp
  428000:	add    rax,QWORD PTR [rbx+0x28]
  428004:	jmp    427f72 <flatcc_json_printer_bool_enum_vector_field@@Base+0x152>
  428009:	nop    DWORD PTR [rax+0x0]
  428010:	mov    rax,QWORD PTR [rbx+0x28]
  428014:	mov    rdi,rbx
  428017:	lea    rdx,[rax+0x1]
  42801b:	mov    QWORD PTR [rbx+0x28],rdx
  42801f:	mov    BYTE PTR [rax],0xa
  428022:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428027:	jmp    427ec8 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa8>
  42802c:	nop    DWORD PTR [rax+0x0]
  428030:	mov    rsi,rbp
  428033:	mov    rdi,rbx
  428036:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42803b:	jmp    427f6e <flatcc_json_printer_bool_enum_vector_field@@Base+0x14e>
  428040:	xor    esi,esi
  428042:	mov    rdi,rbx
  428045:	call   QWORD PTR [rbx+0x48]
  428048:	jmp    427ec8 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa8>
  42804d:	nop    DWORD PTR [rax]

0000000000428050 <flatcc_json_printer_struct_vector_field@@Base>:
  428050:	push   r15
  428052:	push   r14
  428054:	lea    eax,[rdx+rdx*1+0x4]
  428058:	push   r13
  42805a:	push   r12
  42805c:	push   rbp
  42805d:	push   rbx
  42805e:	sub    rsp,0x18
  428062:	cmp    eax,DWORD PTR [rsi+0x10]
  428065:	mov    r15,QWORD PTR [rsp+0x50]
  42806a:	jge    428219 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  428070:	mov    rdx,QWORD PTR [rsi+0x8]
  428074:	movzx  ebp,WORD PTR [rdx+rax*1]
  428078:	test   bp,bp
  42807b:	je     428219 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  428081:	add    rbp,QWORD PTR [rsi]
  428084:	je     428219 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  42808a:	mov    eax,DWORD PTR [rsi+0x18]
  42808d:	lea    edx,[rax+0x1]
  428090:	test   eax,eax
  428092:	mov    DWORD PTR [rsi+0x18],edx
  428095:	je     4280a6 <flatcc_json_printer_struct_vector_field@@Base+0x56>
  428097:	mov    rax,QWORD PTR [rdi+0x28]
  42809b:	lea    rdx,[rax+0x1]
  42809f:	mov    QWORD PTR [rdi+0x28],rdx
  4280a3:	mov    BYTE PTR [rax],0x2c
  4280a6:	mov    eax,DWORD PTR [rbp+0x0]
  4280a9:	mov    rbx,rdi
  4280ac:	movsxd rdx,r8d
  4280af:	mov    rsi,rcx
  4280b2:	mov    r13,r9
  4280b5:	add    rbp,rax
  4280b8:	mov    r12d,DWORD PTR [rbp+0x0]
  4280bc:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4280c1:	mov    rax,QWORD PTR [rbx+0x28]
  4280c5:	add    DWORD PTR [rbx+0x38],0x1
  4280c9:	test   r12d,r12d
  4280cc:	lea    rdx,[rax+0x1]
  4280d0:	mov    QWORD PTR [rbx+0x28],rdx
  4280d4:	mov    BYTE PTR [rax],0x5b
  4280d7:	je     428200 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  4280dd:	cmp    BYTE PTR [rbx+0x31],0x0
  4280e1:	mov    rax,QWORD PTR [rbx+0x28]
  4280e5:	jne    428350 <flatcc_json_printer_struct_vector_field@@Base+0x300>
  4280eb:	cmp    rax,QWORD PTR [rbx+0x20]
  4280ef:	jae    428370 <flatcc_json_printer_struct_vector_field@@Base+0x320>
  4280f5:	lea    rdx,[rax+0x1]
  4280f9:	add    DWORD PTR [rbx+0x38],0x1
  4280fd:	add    rbp,0x4
  428101:	mov    rsi,rbp
  428104:	mov    rdi,rbx
  428107:	mov    QWORD PTR [rbx+0x28],rdx
  42810b:	mov    BYTE PTR [rax],0x7b
  42810e:	call   r15
  428111:	cmp    BYTE PTR [rbx+0x31],0x0
  428115:	jne    428330 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
  42811b:	mov    rax,QWORD PTR [rbx+0x28]
  42811f:	cmp    r12d,0x1
  428123:	lea    r14d,[r12-0x2]
  428128:	lea    rdx,[rax+0x1]
  42812c:	mov    QWORD PTR [rbx+0x28],rdx
  428130:	mov    BYTE PTR [rax],0x7d
  428133:	je     428200 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  428139:	add    r14,0x1
  42813d:	xor    r12d,r12d
  428140:	jmp    428190 <flatcc_json_printer_struct_vector_field@@Base+0x140>
  428142:	nop    WORD PTR [rax+rax*1+0x0]
  428148:	mov    rsi,QWORD PTR [rbx+0x28]
  42814c:	cmp    rsi,QWORD PTR [rbx+0x20]
  428150:	jae    428288 <flatcc_json_printer_struct_vector_field@@Base+0x238>
  428156:	lea    rax,[rsi+0x1]
  42815a:	add    DWORD PTR [rbx+0x38],0x1
  42815e:	mov    rdi,rbx
  428161:	mov    QWORD PTR [rbx+0x28],rax
  428165:	mov    BYTE PTR [rsi],0x7b
  428168:	mov    rsi,rbp
  42816b:	call   r15
  42816e:	cmp    BYTE PTR [rbx+0x31],0x0
  428172:	jne    428230 <flatcc_json_printer_struct_vector_field@@Base+0x1e0>
  428178:	mov    rsi,QWORD PTR [rbx+0x28]
  42817c:	lea    rax,[rsi+0x1]
  428180:	add    r12,0x1
  428184:	cmp    r14,r12
  428187:	mov    QWORD PTR [rbx+0x28],rax
  42818b:	mov    BYTE PTR [rsi],0x7d
  42818e:	je     428200 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  428190:	mov    rax,QWORD PTR [rbx+0x28]
  428194:	add    rbp,r13
  428197:	lea    rdx,[rax+0x1]
  42819b:	mov    QWORD PTR [rbx+0x28],rdx
  42819f:	mov    BYTE PTR [rax],0x2c
  4281a2:	cmp    BYTE PTR [rbx+0x31],0x0
  4281a6:	je     428148 <flatcc_json_printer_struct_vector_field@@Base+0xf8>
  4281a8:	mov    rax,QWORD PTR [rbx+0x28]
  4281ac:	lea    rdx,[rax+0x1]
  4281b0:	mov    QWORD PTR [rbx+0x28],rdx
  4281b4:	mov    BYTE PTR [rax],0xa
  4281b7:	movzx  esi,BYTE PTR [rbx+0x31]
  4281bb:	mov    rdi,QWORD PTR [rbx+0x28]
  4281bf:	imul   esi,DWORD PTR [rbx+0x38]
  4281c3:	movsxd rcx,esi
  4281c6:	lea    rax,[rdi+rcx*1]
  4281ca:	cmp    QWORD PTR [rbx+0x20],rax
  4281ce:	jb     4282a0 <flatcc_json_printer_struct_vector_field@@Base+0x250>
  4281d4:	mov    rdx,rcx
  4281d7:	mov    esi,0x20
  4281dc:	mov    QWORD PTR [rsp+0x8],rcx
  4281e1:	call   405090 <memset@plt>
  4281e6:	mov    rcx,QWORD PTR [rsp+0x8]
  4281eb:	add    rcx,QWORD PTR [rbx+0x28]
  4281ef:	mov    rsi,rcx
  4281f2:	jmp    428156 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  4281f7:	nop    WORD PTR [rax+rax*1+0x0]
  428200:	cmp    BYTE PTR [rbx+0x31],0x0
  428204:	jne    4282d0 <flatcc_json_printer_struct_vector_field@@Base+0x280>
  42820a:	mov    rax,QWORD PTR [rbx+0x28]
  42820e:	lea    rdx,[rax+0x1]
  428212:	mov    QWORD PTR [rbx+0x28],rdx
  428216:	mov    BYTE PTR [rax],0x5d
  428219:	add    rsp,0x18
  42821d:	pop    rbx
  42821e:	pop    rbp
  42821f:	pop    r12
  428221:	pop    r13
  428223:	pop    r14
  428225:	pop    r15
  428227:	ret    
  428228:	nop    DWORD PTR [rax+rax*1+0x0]
  428230:	mov    rax,QWORD PTR [rbx+0x28]
  428234:	lea    rdx,[rax+0x1]
  428238:	mov    QWORD PTR [rbx+0x28],rdx
  42823c:	mov    BYTE PTR [rax],0xa
  42823f:	mov    eax,DWORD PTR [rbx+0x38]
  428242:	movzx  esi,BYTE PTR [rbx+0x31]
  428246:	mov    rdi,QWORD PTR [rbx+0x28]
  42824a:	lea    ecx,[rax-0x1]
  42824d:	imul   esi,ecx
  428250:	mov    DWORD PTR [rbx+0x38],ecx
  428253:	movsxd rcx,esi
  428256:	lea    rax,[rdi+rcx*1]
  42825a:	cmp    QWORD PTR [rbx+0x20],rax
  42825e:	jb     4282b8 <flatcc_json_printer_struct_vector_field@@Base+0x268>
  428260:	mov    rdx,rcx
  428263:	mov    esi,0x20
  428268:	mov    QWORD PTR [rsp+0x8],rcx
  42826d:	call   405090 <memset@plt>
  428272:	mov    rcx,QWORD PTR [rsp+0x8]
  428277:	add    rcx,QWORD PTR [rbx+0x28]
  42827b:	mov    rsi,rcx
  42827e:	jmp    42817c <flatcc_json_printer_struct_vector_field@@Base+0x12c>
  428283:	nop    DWORD PTR [rax+rax*1+0x0]
  428288:	xor    esi,esi
  42828a:	mov    rdi,rbx
  42828d:	call   QWORD PTR [rbx+0x48]
  428290:	mov    rsi,QWORD PTR [rbx+0x28]
  428294:	jmp    428156 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  428299:	nop    DWORD PTR [rax+0x0]
  4282a0:	mov    rsi,rcx
  4282a3:	mov    rdi,rbx
  4282a6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4282ab:	mov    rsi,QWORD PTR [rbx+0x28]
  4282af:	jmp    428156 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  4282b4:	nop    DWORD PTR [rax+0x0]
  4282b8:	mov    rsi,rcx
  4282bb:	mov    rdi,rbx
  4282be:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4282c3:	jmp    428178 <flatcc_json_printer_struct_vector_field@@Base+0x128>
  4282c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4282d0:	mov    rax,QWORD PTR [rbx+0x28]
  4282d4:	lea    rdx,[rax+0x1]
  4282d8:	mov    QWORD PTR [rbx+0x28],rdx
  4282dc:	mov    BYTE PTR [rax],0xa
  4282df:	mov    eax,DWORD PTR [rbx+0x38]
  4282e2:	mov    rdi,QWORD PTR [rbx+0x28]
  4282e6:	lea    ebp,[rax-0x1]
  4282e9:	movzx  eax,BYTE PTR [rbx+0x31]
  4282ed:	mov    DWORD PTR [rbx+0x38],ebp
  4282f0:	imul   eax,ebp
  4282f3:	movsxd rbp,eax
  4282f6:	lea    rax,[rdi+rbp*1]
  4282fa:	cmp    QWORD PTR [rbx+0x20],rax
  4282fe:	jb     428320 <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
  428300:	mov    rdx,rbp
  428303:	mov    esi,0x20
  428308:	call   405090 <memset@plt>
  42830d:	mov    rax,rbp
  428310:	add    rax,QWORD PTR [rbx+0x28]
  428314:	jmp    42820e <flatcc_json_printer_struct_vector_field@@Base+0x1be>
  428319:	nop    DWORD PTR [rax+0x0]
  428320:	mov    rsi,rbp
  428323:	mov    rdi,rbx
  428326:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42832b:	jmp    42820a <flatcc_json_printer_struct_vector_field@@Base+0x1ba>
  428330:	mov    rax,QWORD PTR [rbx+0x28]
  428334:	mov    rdi,rbx
  428337:	lea    rdx,[rax+0x1]
  42833b:	mov    QWORD PTR [rbx+0x28],rdx
  42833f:	mov    BYTE PTR [rax],0xa
  428342:	sub    DWORD PTR [rbx+0x38],0x1
  428346:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  42834b:	jmp    42811b <flatcc_json_printer_struct_vector_field@@Base+0xcb>
  428350:	lea    rdx,[rax+0x1]
  428354:	mov    rdi,rbx
  428357:	mov    QWORD PTR [rbx+0x28],rdx
  42835b:	mov    BYTE PTR [rax],0xa
  42835e:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428363:	mov    rax,QWORD PTR [rbx+0x28]
  428367:	jmp    4280f5 <flatcc_json_printer_struct_vector_field@@Base+0xa5>
  42836c:	nop    DWORD PTR [rax+0x0]
  428370:	xor    esi,esi
  428372:	mov    rdi,rbx
  428375:	call   QWORD PTR [rbx+0x48]
  428378:	mov    rax,QWORD PTR [rbx+0x28]
  42837c:	jmp    4280f5 <flatcc_json_printer_struct_vector_field@@Base+0xa5>
  428381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42838c:	nop    DWORD PTR [rax+0x0]

0000000000428390 <flatcc_json_printer_string_vector_field@@Base>:
  428390:	lea    eax,[rdx+rdx*1+0x4]
  428394:	cmp    eax,DWORD PTR [rsi+0x10]
  428397:	jge    428583 <flatcc_json_printer_string_vector_field@@Base+0x1f3>
  42839d:	push   r15
  42839f:	push   r14
  4283a1:	push   r13
  4283a3:	push   r12
  4283a5:	push   rbp
  4283a6:	push   rbx
  4283a7:	sub    rsp,0x8
  4283ab:	mov    rdx,QWORD PTR [rsi+0x8]
  4283af:	movzx  r12d,WORD PTR [rdx+rax*1]
  4283b4:	test   r12w,r12w
  4283b8:	je     428575 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  4283be:	add    r12,QWORD PTR [rsi]
  4283c1:	je     428575 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  4283c7:	mov    eax,DWORD PTR [rsi+0x18]
  4283ca:	lea    edx,[rax+0x1]
  4283cd:	test   eax,eax
  4283cf:	mov    DWORD PTR [rsi+0x18],edx
  4283d2:	je     4283e3 <flatcc_json_printer_string_vector_field@@Base+0x53>
  4283d4:	mov    rax,QWORD PTR [rdi+0x28]
  4283d8:	lea    rdx,[rax+0x1]
  4283dc:	mov    QWORD PTR [rdi+0x28],rdx
  4283e0:	mov    BYTE PTR [rax],0x2c
  4283e3:	mov    eax,DWORD PTR [r12]
  4283e7:	mov    r15,rcx
  4283ea:	mov    rbx,rdi
  4283ed:	movsxd rbp,r8d
  4283f0:	add    r12,rax
  4283f3:	cmp    BYTE PTR [rdi+0x31],0x0
  4283f7:	mov    rax,QWORD PTR [rdi+0x28]
  4283fb:	mov    r13d,DWORD PTR [r12]
  4283ff:	jne    428630 <flatcc_json_printer_string_vector_field@@Base+0x2a0>
  428405:	cmp    rax,QWORD PTR [rdi+0x20]
  428409:	jb     428414 <flatcc_json_printer_string_vector_field@@Base+0x84>
  42840b:	xor    esi,esi
  42840d:	call   QWORD PTR [rdi+0x48]
  428410:	mov    rax,QWORD PTR [rbx+0x28]
  428414:	mov    BYTE PTR [rax],0x22
  428417:	xor    edi,edi
  428419:	cmp    BYTE PTR [rbx+0x32],0x0
  42841d:	mov    rdx,rbp
  428420:	mov    rsi,r15
  428423:	sete   dil
  428427:	add    rdi,QWORD PTR [rbx+0x28]
  42842b:	lea    rax,[rdi+rbp*1]
  42842f:	cmp    QWORD PTR [rbx+0x20],rax
  428433:	mov    QWORD PTR [rbx+0x28],rdi
  428437:	ja     4285b0 <flatcc_json_printer_string_vector_field@@Base+0x220>
  42843d:	mov    rdi,rbx
  428440:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  428445:	mov    rbp,QWORD PTR [rbx+0x28]
  428449:	mov    BYTE PTR [rbp+0x0],0x22
  42844d:	xor    eax,eax
  42844f:	cmp    BYTE PTR [rbx+0x32],0x0
  428453:	sete   al
  428456:	add    rax,QWORD PTR [rbx+0x28]
  42845a:	lea    rdx,[rax+0x1]
  42845e:	mov    QWORD PTR [rbx+0x28],rdx
  428462:	mov    BYTE PTR [rax],0x3a
  428465:	mov    rax,QWORD PTR [rbx+0x28]
  428469:	mov    BYTE PTR [rax],0x20
  42846c:	xor    eax,eax
  42846e:	cmp    BYTE PTR [rbx+0x31],0x0
  428472:	setne  al
  428475:	add    rax,QWORD PTR [rbx+0x28]
  428479:	add    DWORD PTR [rbx+0x38],0x1
  42847d:	test   r13d,r13d
  428480:	lea    rdx,[rax+0x1]
  428484:	mov    QWORD PTR [rbx+0x28],rdx
  428488:	mov    BYTE PTR [rax],0x5b
  42848b:	je     428560 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  428491:	cmp    BYTE PTR [rbx+0x31],0x0
  428495:	jne    428678 <flatcc_json_printer_string_vector_field@@Base+0x2e8>
  42849b:	mov    rax,QWORD PTR [rbx+0x20]
  42849f:	cmp    QWORD PTR [rbx+0x28],rax
  4284a3:	jae    4286c0 <flatcc_json_printer_string_vector_field@@Base+0x330>
  4284a9:	mov    esi,DWORD PTR [r12+0x4]
  4284ae:	lea    rbp,[r12+0x4]
  4284b3:	mov    rdi,rbx
  4284b6:	add    rsi,rbp
  4284b9:	mov    edx,DWORD PTR [rsi]
  4284bb:	add    rsi,0x4
  4284bf:	call   420050 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  4284c4:	cmp    r13d,0x1
  4284c8:	lea    eax,[r13-0x2]
  4284cc:	je     428560 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  4284d2:	lea    r12,[r12+rax*4+0x8]
  4284d7:	jmp    428507 <flatcc_json_printer_string_vector_field@@Base+0x177>
  4284d9:	nop    DWORD PTR [rax+0x0]
  4284e0:	mov    rax,QWORD PTR [rbx+0x20]
  4284e4:	cmp    QWORD PTR [rbx+0x28],rax
  4284e8:	jae    428588 <flatcc_json_printer_string_vector_field@@Base+0x1f8>
  4284ee:	mov    esi,DWORD PTR [rbp+0x0]
  4284f1:	mov    rdi,rbx
  4284f4:	add    rsi,rbp
  4284f7:	mov    edx,DWORD PTR [rsi]
  4284f9:	add    rsi,0x4
  4284fd:	call   420050 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  428502:	cmp    rbp,r12
  428505:	je     428560 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  428507:	mov    rax,QWORD PTR [rbx+0x28]
  42850b:	add    rbp,0x4
  42850f:	lea    rdx,[rax+0x1]
  428513:	mov    QWORD PTR [rbx+0x28],rdx
  428517:	mov    BYTE PTR [rax],0x2c
  42851a:	cmp    BYTE PTR [rbx+0x31],0x0
  42851e:	je     4284e0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  428520:	mov    rax,QWORD PTR [rbx+0x28]
  428524:	lea    rdx,[rax+0x1]
  428528:	mov    QWORD PTR [rbx+0x28],rdx
  42852c:	mov    BYTE PTR [rax],0xa
  42852f:	movzx  r13d,BYTE PTR [rbx+0x31]
  428534:	mov    rdi,QWORD PTR [rbx+0x28]
  428538:	imul   r13d,DWORD PTR [rbx+0x38]
  42853d:	movsxd r13,r13d
  428540:	lea    rax,[rdi+r13*1]
  428544:	cmp    QWORD PTR [rbx+0x20],rax
  428548:	jb     428598 <flatcc_json_printer_string_vector_field@@Base+0x208>
  42854a:	mov    rdx,r13
  42854d:	mov    esi,0x20
  428552:	call   405090 <memset@plt>
  428557:	add    QWORD PTR [rbx+0x28],r13
  42855b:	jmp    4284ee <flatcc_json_printer_string_vector_field@@Base+0x15e>
  42855d:	nop    DWORD PTR [rax]
  428560:	cmp    BYTE PTR [rbx+0x31],0x0
  428564:	jne    4285c8 <flatcc_json_printer_string_vector_field@@Base+0x238>
  428566:	mov    rax,QWORD PTR [rbx+0x28]
  42856a:	lea    rdx,[rax+0x1]
  42856e:	mov    QWORD PTR [rbx+0x28],rdx
  428572:	mov    BYTE PTR [rax],0x5d
  428575:	add    rsp,0x8
  428579:	pop    rbx
  42857a:	pop    rbp
  42857b:	pop    r12
  42857d:	pop    r13
  42857f:	pop    r14
  428581:	pop    r15
  428583:	repz ret 
  428585:	nop    DWORD PTR [rax]
  428588:	xor    esi,esi
  42858a:	mov    rdi,rbx
  42858d:	call   QWORD PTR [rbx+0x48]
  428590:	jmp    4284ee <flatcc_json_printer_string_vector_field@@Base+0x15e>
  428595:	nop    DWORD PTR [rax]
  428598:	mov    rsi,r13
  42859b:	mov    rdi,rbx
  42859e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4285a3:	jmp    4284ee <flatcc_json_printer_string_vector_field@@Base+0x15e>
  4285a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4285b0:	call   4050e0 <memcpy@plt>
  4285b5:	add    rbp,QWORD PTR [rbx+0x28]
  4285b9:	mov    QWORD PTR [rbx+0x28],rbp
  4285bd:	jmp    428449 <flatcc_json_printer_string_vector_field@@Base+0xb9>
  4285c2:	nop    WORD PTR [rax+rax*1+0x0]
  4285c8:	mov    rax,QWORD PTR [rbx+0x28]
  4285cc:	lea    rdx,[rax+0x1]
  4285d0:	mov    QWORD PTR [rbx+0x28],rdx
  4285d4:	mov    BYTE PTR [rax],0xa
  4285d7:	mov    eax,DWORD PTR [rbx+0x38]
  4285da:	mov    rdi,QWORD PTR [rbx+0x28]
  4285de:	lea    ebp,[rax-0x1]
  4285e1:	movzx  eax,BYTE PTR [rbx+0x31]
  4285e5:	mov    DWORD PTR [rbx+0x38],ebp
  4285e8:	imul   eax,ebp
  4285eb:	movsxd rbp,eax
  4285ee:	lea    rax,[rdi+rbp*1]
  4285f2:	cmp    QWORD PTR [rbx+0x20],rax
  4285f6:	jb     428618 <flatcc_json_printer_string_vector_field@@Base+0x288>
  4285f8:	mov    rdx,rbp
  4285fb:	mov    esi,0x20
  428600:	call   405090 <memset@plt>
  428605:	mov    rax,rbp
  428608:	add    rax,QWORD PTR [rbx+0x28]
  42860c:	jmp    42856a <flatcc_json_printer_string_vector_field@@Base+0x1da>
  428611:	nop    DWORD PTR [rax+0x0]
  428618:	mov    rsi,rbp
  42861b:	mov    rdi,rbx
  42861e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428623:	jmp    428566 <flatcc_json_printer_string_vector_field@@Base+0x1d6>
  428628:	nop    DWORD PTR [rax+rax*1+0x0]
  428630:	lea    rdx,[rax+0x1]
  428634:	mov    QWORD PTR [rdi+0x28],rdx
  428638:	mov    BYTE PTR [rax],0xa
  42863b:	movzx  eax,BYTE PTR [rdi+0x31]
  42863f:	imul   eax,DWORD PTR [rdi+0x38]
  428643:	mov    rdi,QWORD PTR [rdi+0x28]
  428647:	movsxd r14,eax
  42864a:	lea    rax,[rdi+r14*1]
  42864e:	cmp    QWORD PTR [rbx+0x20],rax
  428652:	jb     4286cd <flatcc_json_printer_string_vector_field@@Base+0x33d>
  428654:	mov    rdx,r14
  428657:	mov    esi,0x20
  42865c:	call   405090 <memset@plt>
  428661:	mov    rax,r14
  428664:	add    rax,QWORD PTR [rbx+0x28]
  428668:	mov    QWORD PTR [rbx+0x28],rax
  42866c:	jmp    428414 <flatcc_json_printer_string_vector_field@@Base+0x84>
  428671:	nop    DWORD PTR [rax+0x0]
  428678:	mov    rax,QWORD PTR [rbx+0x28]
  42867c:	lea    rdx,[rax+0x1]
  428680:	mov    QWORD PTR [rbx+0x28],rdx
  428684:	mov    BYTE PTR [rax],0xa
  428687:	movzx  ebp,BYTE PTR [rbx+0x31]
  42868b:	mov    rdi,QWORD PTR [rbx+0x28]
  42868f:	imul   ebp,DWORD PTR [rbx+0x38]
  428693:	movsxd rbp,ebp
  428696:	lea    rax,[rdi+rbp*1]
  42869a:	cmp    QWORD PTR [rbx+0x20],rax
  42869e:	jb     4286e1 <flatcc_json_printer_string_vector_field@@Base+0x351>
  4286a0:	mov    rdx,rbp
  4286a3:	mov    esi,0x20
  4286a8:	call   405090 <memset@plt>
  4286ad:	add    QWORD PTR [rbx+0x28],rbp
  4286b1:	jmp    4284a9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  4286b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286c0:	xor    esi,esi
  4286c2:	mov    rdi,rbx
  4286c5:	call   QWORD PTR [rbx+0x48]
  4286c8:	jmp    4284a9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  4286cd:	mov    rsi,r14
  4286d0:	mov    rdi,rbx
  4286d3:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4286d8:	mov    rax,QWORD PTR [rbx+0x28]
  4286dc:	jmp    428414 <flatcc_json_printer_string_vector_field@@Base+0x84>
  4286e1:	mov    rsi,rbp
  4286e4:	mov    rdi,rbx
  4286e7:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4286ec:	jmp    4284a9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  4286f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4286fc:	nop    DWORD PTR [rax+0x0]

0000000000428700 <flatcc_json_printer_table_vector_field@@Base>:
  428700:	push   r15
  428702:	push   r14
  428704:	push   r13
  428706:	push   r12
  428708:	push   rbp
  428709:	push   rbx
  42870a:	sub    rsp,0x68
  42870e:	mov    rax,QWORD PTR fs:0x28
  428717:	mov    QWORD PTR [rsp+0x58],rax
  42871c:	xor    eax,eax
  42871e:	lea    eax,[rdx+rdx*1+0x4]
  428722:	cmp    eax,DWORD PTR [rsi+0x10]
  428725:	jge    428834 <flatcc_json_printer_table_vector_field@@Base+0x134>
  42872b:	mov    rdx,QWORD PTR [rsi+0x8]
  42872f:	mov    r14,rsi
  428732:	movzx  r13d,WORD PTR [rdx+rax*1]
  428737:	test   r13w,r13w
  42873b:	je     428834 <flatcc_json_printer_table_vector_field@@Base+0x134>
  428741:	add    r13,QWORD PTR [rsi]
  428744:	je     428834 <flatcc_json_printer_table_vector_field@@Base+0x134>
  42874a:	mov    eax,DWORD PTR [rsi+0x18]
  42874d:	mov    rbx,rdi
  428750:	mov    r12,r9
  428753:	lea    edx,[rax+0x1]
  428756:	test   eax,eax
  428758:	mov    DWORD PTR [rsi+0x18],edx
  42875b:	je     42876c <flatcc_json_printer_table_vector_field@@Base+0x6c>
  42875d:	mov    rax,QWORD PTR [rdi+0x28]
  428761:	lea    rdx,[rax+0x1]
  428765:	mov    QWORD PTR [rdi+0x28],rdx
  428769:	mov    BYTE PTR [rax],0x2c
  42876c:	mov    eax,DWORD PTR [r13+0x0]
  428770:	movsxd rbp,r8d
  428773:	add    r13,rax
  428776:	cmp    BYTE PTR [rbx+0x31],0x0
  42877a:	mov    rax,QWORD PTR [rbx+0x28]
  42877e:	mov    r15d,DWORD PTR [r13+0x0]
  428782:	jne    428a80 <flatcc_json_printer_table_vector_field@@Base+0x380>
  428788:	cmp    rax,QWORD PTR [rbx+0x20]
  42878c:	jb     4287a2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  42878e:	mov    QWORD PTR [rsp],rcx
  428792:	xor    esi,esi
  428794:	mov    rdi,rbx
  428797:	call   QWORD PTR [rbx+0x48]
  42879a:	mov    rax,QWORD PTR [rbx+0x28]
  42879e:	mov    rcx,QWORD PTR [rsp]
  4287a2:	mov    BYTE PTR [rax],0x22
  4287a5:	xor    edi,edi
  4287a7:	cmp    BYTE PTR [rbx+0x32],0x0
  4287ab:	mov    rdx,rbp
  4287ae:	mov    rsi,rcx
  4287b1:	sete   dil
  4287b5:	add    rdi,QWORD PTR [rbx+0x28]
  4287b9:	lea    rax,[rdi+rbp*1]
  4287bd:	cmp    QWORD PTR [rbx+0x20],rax
  4287c1:	mov    QWORD PTR [rbx+0x28],rdi
  4287c5:	ja     428860 <flatcc_json_printer_table_vector_field@@Base+0x160>
  4287cb:	mov    rdi,rbx
  4287ce:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4287d3:	mov    rbp,QWORD PTR [rbx+0x28]
  4287d7:	mov    BYTE PTR [rbp+0x0],0x22
  4287db:	xor    eax,eax
  4287dd:	cmp    BYTE PTR [rbx+0x32],0x0
  4287e1:	sete   al
  4287e4:	add    rax,QWORD PTR [rbx+0x28]
  4287e8:	lea    rdx,[rax+0x1]
  4287ec:	mov    QWORD PTR [rbx+0x28],rdx
  4287f0:	mov    BYTE PTR [rax],0x3a
  4287f3:	mov    rax,QWORD PTR [rbx+0x28]
  4287f7:	mov    BYTE PTR [rax],0x20
  4287fa:	xor    eax,eax
  4287fc:	cmp    BYTE PTR [rbx+0x31],0x0
  428800:	setne  al
  428803:	add    rax,QWORD PTR [rbx+0x28]
  428807:	add    DWORD PTR [rbx+0x38],0x1
  42880b:	test   r15d,r15d
  42880e:	lea    rdx,[rax+0x1]
  428812:	mov    QWORD PTR [rbx+0x28],rdx
  428816:	mov    BYTE PTR [rax],0x5b
  428819:	jne    4288c8 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
  42881f:	cmp    BYTE PTR [rbx+0x31],0x0
  428823:	jne    428878 <flatcc_json_printer_table_vector_field@@Base+0x178>
  428825:	mov    rax,QWORD PTR [rbx+0x28]
  428829:	lea    rdx,[rax+0x1]
  42882d:	mov    QWORD PTR [rbx+0x28],rdx
  428831:	mov    BYTE PTR [rax],0x5d
  428834:	mov    rax,QWORD PTR [rsp+0x58]
  428839:	xor    rax,QWORD PTR fs:0x28
  428842:	jne    428b0f <flatcc_json_printer_table_vector_field@@Base+0x40f>
  428848:	add    rsp,0x68
  42884c:	pop    rbx
  42884d:	pop    rbp
  42884e:	pop    r12
  428850:	pop    r13
  428852:	pop    r14
  428854:	pop    r15
  428856:	ret    
  428857:	nop    WORD PTR [rax+rax*1+0x0]
  428860:	call   4050e0 <memcpy@plt>
  428865:	add    rbp,QWORD PTR [rbx+0x28]
  428869:	mov    QWORD PTR [rbx+0x28],rbp
  42886d:	jmp    4287d7 <flatcc_json_printer_table_vector_field@@Base+0xd7>
  428872:	nop    WORD PTR [rax+rax*1+0x0]
  428878:	mov    rax,QWORD PTR [rbx+0x28]
  42887c:	lea    rdx,[rax+0x1]
  428880:	mov    QWORD PTR [rbx+0x28],rdx
  428884:	mov    BYTE PTR [rax],0xa
  428887:	mov    eax,DWORD PTR [rbx+0x38]
  42888a:	mov    rdi,QWORD PTR [rbx+0x28]
  42888e:	lea    ebp,[rax-0x1]
  428891:	movzx  eax,BYTE PTR [rbx+0x31]
  428895:	mov    DWORD PTR [rbx+0x38],ebp
  428898:	imul   eax,ebp
  42889b:	movsxd rbp,eax
  42889e:	lea    rax,[rdi+rbp*1]
  4288a2:	cmp    QWORD PTR [rbx+0x20],rax
  4288a6:	jb     428940 <flatcc_json_printer_table_vector_field@@Base+0x240>
  4288ac:	mov    rdx,rbp
  4288af:	mov    esi,0x20
  4288b4:	call   405090 <memset@plt>
  4288b9:	mov    rax,rbp
  4288bc:	add    rax,QWORD PTR [rbx+0x28]
  4288c0:	jmp    428829 <flatcc_json_printer_table_vector_field@@Base+0x129>
  4288c5:	nop    DWORD PTR [rax]
  4288c8:	mov    eax,DWORD PTR [r14+0x14]
  4288cc:	lea    rbp,[r13+0x4]
  4288d0:	sub    eax,0x1
  4288d3:	jne    428950 <flatcc_json_printer_table_vector_field@@Base+0x250>
  4288d5:	mov    edx,DWORD PTR [rbx+0x3c]
  4288d8:	test   edx,edx
  4288da:	jne    4288e3 <flatcc_json_printer_table_vector_field@@Base+0x1e3>
  4288dc:	mov    DWORD PTR [rbx+0x3c],0x2
  4288e3:	lea    eax,[r15-0x1]
  4288e7:	lea    r15,[r13+rax*4+0x4]
  4288ec:	lea    r13,[rsp+0x30]
  4288f1:	nop    DWORD PTR [rax+0x0]
  4288f8:	cmp    rbp,r15
  4288fb:	je     42881f <flatcc_json_printer_table_vector_field@@Base+0x11f>
  428901:	mov    rax,QWORD PTR [rbx+0x28]
  428905:	add    rbp,0x4
  428909:	lea    rdx,[rax+0x1]
  42890d:	mov    QWORD PTR [rbx+0x28],rdx
  428911:	mov    BYTE PTR [rax],0x2c
  428914:	mov    eax,DWORD PTR [r14+0x14]
  428918:	sub    eax,0x1
  42891b:	jne    4289c0 <flatcc_json_printer_table_vector_field@@Base+0x2c0>
  428921:	mov    eax,DWORD PTR [rbx+0x3c]
  428924:	test   eax,eax
  428926:	jne    4288f8 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
  428928:	cmp    rbp,r15
  42892b:	mov    DWORD PTR [rbx+0x3c],0x2
  428932:	jne    428901 <flatcc_json_printer_table_vector_field@@Base+0x201>
  428934:	jmp    42881f <flatcc_json_printer_table_vector_field@@Base+0x11f>
  428939:	nop    DWORD PTR [rax+0x0]
  428940:	mov    rsi,rbp
  428943:	mov    rdi,rbx
  428946:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42894b:	jmp    428825 <flatcc_json_printer_table_vector_field@@Base+0x125>
  428950:	mov    edx,DWORD PTR [r13+0x4]
  428954:	mov    rcx,QWORD PTR [rbx+0x28]
  428958:	mov    rdi,rbx
  42895b:	add    DWORD PTR [rbx+0x38],0x1
  42895f:	lea    rsi,[rcx+0x1]
  428963:	add    rdx,rbp
  428966:	mov    QWORD PTR [rbx+0x28],rsi
  42896a:	lea    rsi,[rsp+0x10]
  42896f:	mov    BYTE PTR [rcx],0x7b
  428972:	mov    DWORD PTR [rsp+0x28],0x0
  42897a:	mov    DWORD PTR [rsp+0x24],eax
  42897e:	movsxd rax,DWORD PTR [rdx]
  428981:	mov    QWORD PTR [rsp+0x10],rdx
  428986:	sub    rdx,rax
  428989:	movzx  eax,WORD PTR [rdx]
  42898c:	mov    QWORD PTR [rsp+0x18],rdx
  428991:	mov    DWORD PTR [rsp+0x20],eax
  428995:	call   r12
  428998:	cmp    BYTE PTR [rbx+0x31],0x0
  42899c:	jne    428aef <flatcc_json_printer_table_vector_field@@Base+0x3ef>
  4289a2:	mov    rax,QWORD PTR [rbx+0x28]
  4289a6:	lea    rdx,[rax+0x1]
  4289aa:	mov    QWORD PTR [rbx+0x28],rdx
  4289ae:	mov    BYTE PTR [rax],0x7d
  4289b1:	jmp    4288e3 <flatcc_json_printer_table_vector_field@@Base+0x1e3>
  4289b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4289c0:	mov    edx,DWORD PTR [rbp+0x0]
  4289c3:	mov    rcx,QWORD PTR [rbx+0x28]
  4289c7:	mov    rdi,rbx
  4289ca:	add    DWORD PTR [rbx+0x38],0x1
  4289ce:	lea    rsi,[rcx+0x1]
  4289d2:	add    rdx,rbp
  4289d5:	mov    QWORD PTR [rbx+0x28],rsi
  4289d9:	mov    rsi,r13
  4289dc:	mov    BYTE PTR [rcx],0x7b
  4289df:	mov    DWORD PTR [rsp+0x48],0x0
  4289e7:	mov    DWORD PTR [rsp+0x44],eax
  4289eb:	movsxd rax,DWORD PTR [rdx]
  4289ee:	mov    QWORD PTR [rsp+0x30],rdx
  4289f3:	sub    rdx,rax
  4289f6:	movzx  eax,WORD PTR [rdx]
  4289f9:	mov    QWORD PTR [rsp+0x38],rdx
  4289fe:	mov    DWORD PTR [rsp+0x40],eax
  428a02:	call   r12
  428a05:	cmp    BYTE PTR [rbx+0x31],0x0
  428a09:	jne    428a20 <flatcc_json_printer_table_vector_field@@Base+0x320>
  428a0b:	mov    rsi,QWORD PTR [rbx+0x28]
  428a0f:	lea    rax,[rsi+0x1]
  428a13:	mov    QWORD PTR [rbx+0x28],rax
  428a17:	mov    BYTE PTR [rsi],0x7d
  428a1a:	jmp    4288f8 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
  428a1f:	nop
  428a20:	mov    rax,QWORD PTR [rbx+0x28]
  428a24:	lea    rdx,[rax+0x1]
  428a28:	mov    QWORD PTR [rbx+0x28],rdx
  428a2c:	mov    BYTE PTR [rax],0xa
  428a2f:	mov    eax,DWORD PTR [rbx+0x38]
  428a32:	movzx  esi,BYTE PTR [rbx+0x31]
  428a36:	mov    rdi,QWORD PTR [rbx+0x28]
  428a3a:	lea    ecx,[rax-0x1]
  428a3d:	imul   esi,ecx
  428a40:	mov    DWORD PTR [rbx+0x38],ecx
  428a43:	movsxd rcx,esi
  428a46:	lea    rax,[rdi+rcx*1]
  428a4a:	cmp    QWORD PTR [rbx+0x20],rax
  428a4e:	jb     428a70 <flatcc_json_printer_table_vector_field@@Base+0x370>
  428a50:	mov    rdx,rcx
  428a53:	mov    esi,0x20
  428a58:	mov    QWORD PTR [rsp],rcx
  428a5c:	call   405090 <memset@plt>
  428a61:	mov    rcx,QWORD PTR [rsp]
  428a65:	add    rcx,QWORD PTR [rbx+0x28]
  428a69:	mov    rsi,rcx
  428a6c:	jmp    428a0f <flatcc_json_printer_table_vector_field@@Base+0x30f>
  428a6e:	xchg   ax,ax
  428a70:	mov    rsi,rcx
  428a73:	mov    rdi,rbx
  428a76:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428a7b:	jmp    428a0b <flatcc_json_printer_table_vector_field@@Base+0x30b>
  428a7d:	nop    DWORD PTR [rax]
  428a80:	lea    rdx,[rax+0x1]
  428a84:	mov    QWORD PTR [rbx+0x28],rdx
  428a88:	mov    BYTE PTR [rax],0xa
  428a8b:	movzx  eax,BYTE PTR [rbx+0x31]
  428a8f:	mov    rdi,QWORD PTR [rbx+0x28]
  428a93:	imul   eax,DWORD PTR [rbx+0x38]
  428a97:	movsxd r8,eax
  428a9a:	lea    rax,[rdi+r8*1]
  428a9e:	cmp    QWORD PTR [rbx+0x20],rax
  428aa2:	jb     428ad3 <flatcc_json_printer_table_vector_field@@Base+0x3d3>
  428aa4:	mov    rdx,r8
  428aa7:	mov    esi,0x20
  428aac:	mov    QWORD PTR [rsp+0x8],rcx
  428ab1:	mov    QWORD PTR [rsp],r8
  428ab5:	call   405090 <memset@plt>
  428aba:	mov    r8,QWORD PTR [rsp]
  428abe:	mov    rcx,QWORD PTR [rsp+0x8]
  428ac3:	mov    rax,r8
  428ac6:	add    rax,QWORD PTR [rbx+0x28]
  428aca:	mov    QWORD PTR [rbx+0x28],rax
  428ace:	jmp    4287a2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  428ad3:	mov    rsi,r8
  428ad6:	mov    rdi,rbx
  428ad9:	mov    QWORD PTR [rsp],rcx
  428add:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428ae2:	mov    rax,QWORD PTR [rbx+0x28]
  428ae6:	mov    rcx,QWORD PTR [rsp]
  428aea:	jmp    4287a2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  428aef:	mov    rax,QWORD PTR [rbx+0x28]
  428af3:	mov    rdi,rbx
  428af6:	lea    rdx,[rax+0x1]
  428afa:	mov    QWORD PTR [rbx+0x28],rdx
  428afe:	mov    BYTE PTR [rax],0xa
  428b01:	sub    DWORD PTR [rbx+0x38],0x1
  428b05:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428b0a:	jmp    4289a2 <flatcc_json_printer_table_vector_field@@Base+0x2a2>
  428b0f:	call   405070 <__stack_chk_fail@plt>
  428b14:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428b1f:	nop

0000000000428b20 <flatcc_json_printer_union_vector_field@@Base>:
  428b20:	push   r15
  428b22:	push   r14
  428b24:	mov    r15,rcx
  428b27:	push   r13
  428b29:	push   r12
  428b2b:	mov    r12d,edx
  428b2e:	push   rbp
  428b2f:	push   rbx
  428b30:	xor    r13d,r13d
  428b33:	mov    rbx,rdi
  428b36:	mov    rbp,rsi
  428b39:	sub    rsp,0xb8
  428b40:	mov    rax,QWORD PTR fs:0x28
  428b49:	mov    QWORD PTR [rsp+0xa8],rax
  428b51:	xor    eax,eax
  428b53:	lea    eax,[rdx+rdx*1+0x2]
  428b57:	mov    edx,DWORD PTR [rsi+0x10]
  428b5a:	mov    r14,QWORD PTR [rsp+0xf0]
  428b62:	cmp    eax,edx
  428b64:	jge    428b77 <flatcc_json_printer_union_vector_field@@Base+0x57>
  428b66:	mov    rcx,QWORD PTR [rsi+0x8]
  428b6a:	movzx  eax,WORD PTR [rcx+rax*1]
  428b6e:	test   ax,ax
  428b71:	jne    428db0 <flatcc_json_printer_union_vector_field@@Base+0x290>
  428b77:	lea    eax,[r12+r12*1+0x4]
  428b7c:	cmp    eax,edx
  428b7e:	jge    428b8d <flatcc_json_printer_union_vector_field@@Base+0x6d>
  428b80:	mov    rdx,QWORD PTR [rbp+0x8]
  428b84:	movzx  eax,WORD PTR [rdx+rax*1]
  428b88:	test   ax,ax
  428b8b:	jne    428be0 <flatcc_json_printer_union_vector_field@@Base+0xc0>
  428b8d:	mov    eax,DWORD PTR [rbp+0x14]
  428b90:	cmp    r8d,0x64
  428b94:	mov    DWORD PTR [rsp+0x28],eax
  428b98:	jg     428de0 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
  428b9e:	lea    rdi,[rsp+0x30]
  428ba3:	movsxd rdx,r8d
  428ba6:	mov    ecx,0x69
  428bab:	mov    rsi,r15
  428bae:	call   4050d0 <__memcpy_chk@plt>
  428bb3:	mov    rax,QWORD PTR [rsp+0xa8]
  428bbb:	xor    rax,QWORD PTR fs:0x28
  428bc4:	jne    428e4f <flatcc_json_printer_union_vector_field@@Base+0x32f>
  428bca:	add    rsp,0xb8
  428bd1:	pop    rbx
  428bd2:	pop    rbp
  428bd3:	pop    r12
  428bd5:	pop    r13
  428bd7:	pop    r14
  428bd9:	pop    r15
  428bdb:	ret    
  428bdc:	nop    DWORD PTR [rax+0x0]
  428be0:	add    rax,QWORD PTR [rbp+0x0]
  428be4:	cmp    r8d,0x64
  428be8:	mov    QWORD PTR [rsp+0x8],rax
  428bed:	mov    eax,DWORD PTR [rbp+0x14]
  428bf0:	mov    DWORD PTR [rsp+0x28],eax
  428bf4:	jg     428de0 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
  428bfa:	lea    r11,[rsp+0x30]
  428bff:	movsxd rax,r8d
  428c02:	mov    ecx,0x69
  428c07:	mov    rdx,rax
  428c0a:	mov    rsi,r15
  428c0d:	mov    QWORD PTR [rsp+0x18],r9
  428c12:	mov    rdi,r11
  428c15:	mov    DWORD PTR [rsp+0x14],r8d
  428c1a:	mov    QWORD PTR [rsp],rax
  428c1e:	call   4050d0 <__memcpy_chk@plt>
  428c23:	mov    r11,rax
  428c26:	mov    rax,QWORD PTR [rsp]
  428c2a:	add    rax,r11
  428c2d:	cmp    QWORD PTR [rsp+0x8],0x0
  428c33:	mov    DWORD PTR [rax],0x7079745f
  428c39:	mov    BYTE PTR [rax+0x4],0x65
  428c3d:	je     428bb3 <flatcc_json_printer_union_vector_field@@Base+0x93>
  428c43:	test   r13,r13
  428c46:	je     428bb3 <flatcc_json_printer_union_vector_field@@Base+0x93>
  428c4c:	mov    r8d,DWORD PTR [rsp+0x14]
  428c51:	mov    r9,QWORD PTR [rsp+0x18]
  428c56:	lea    edx,[r12-0x1]
  428c5b:	mov    rcx,r11
  428c5e:	mov    rsi,rbp
  428c61:	mov    rdi,rbx
  428c64:	add    r8d,0x5
  428c68:	call   426a70 <flatcc_json_printer_utype_enum_vector_field@@Base>
  428c6d:	mov    eax,DWORD PTR [rbp+0x18]
  428c70:	lea    edx,[rax+0x1]
  428c73:	test   eax,eax
  428c75:	mov    DWORD PTR [rbp+0x18],edx
  428c78:	je     428c89 <flatcc_json_printer_union_vector_field@@Base+0x169>
  428c7a:	mov    rax,QWORD PTR [rbx+0x28]
  428c7e:	lea    rdx,[rax+0x1]
  428c82:	mov    QWORD PTR [rbx+0x28],rdx
  428c86:	mov    BYTE PTR [rax],0x2c
  428c89:	mov    rax,QWORD PTR [rsp+0x8]
  428c8e:	mov    rdx,QWORD PTR [rsp]
  428c92:	mov    rsi,r15
  428c95:	mov    rdi,rbx
  428c98:	mov    ebp,DWORD PTR [r13+0x0]
  428c9c:	mov    r12d,DWORD PTR [rax]
  428c9f:	add    r12,rax
  428ca2:	mov    ecx,DWORD PTR [r12]
  428ca6:	mov    DWORD PTR [rsp+0x8],ecx
  428caa:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428caf:	mov    rax,QWORD PTR [rbx+0x28]
  428cb3:	mov    ecx,DWORD PTR [rsp+0x8]
  428cb7:	add    DWORD PTR [rbx+0x38],0x1
  428cbb:	lea    rdx,[rax+0x1]
  428cbf:	test   ecx,ecx
  428cc1:	mov    QWORD PTR [rbx+0x28],rdx
  428cc5:	mov    BYTE PTR [rax],0x5b
  428cc8:	je     428d96 <flatcc_json_printer_union_vector_field@@Base+0x276>
  428cce:	add    r13,rbp
  428cd1:	lea    rbp,[r12+0x4]
  428cd6:	movzx  eax,BYTE PTR [r13+0x4]
  428cdb:	test   al,al
  428cdd:	jne    428e30 <flatcc_json_printer_union_vector_field@@Base+0x310>
  428ce3:	mov    rax,QWORD PTR [rbx+0x28]
  428ce7:	lea    rdx,[rax+0x1]
  428ceb:	mov    QWORD PTR [rbx+0x28],rdx
  428cef:	mov    BYTE PTR [rax],0x6e
  428cf2:	mov    rax,QWORD PTR [rbx+0x28]
  428cf6:	lea    rdx,[rax+0x1]
  428cfa:	mov    QWORD PTR [rbx+0x28],rdx
  428cfe:	mov    BYTE PTR [rax],0x75
  428d01:	mov    rax,QWORD PTR [rbx+0x28]
  428d05:	lea    rdx,[rax+0x1]
  428d09:	mov    QWORD PTR [rbx+0x28],rdx
  428d0d:	mov    BYTE PTR [rax],0x6c
  428d10:	mov    rax,QWORD PTR [rbx+0x28]
  428d14:	lea    rdx,[rax+0x1]
  428d18:	mov    QWORD PTR [rbx+0x28],rdx
  428d1c:	mov    BYTE PTR [rax],0x6c
  428d1f:	lea    eax,[rcx-0x1]
  428d22:	lea    r15,[r12+rax*4+0x4]
  428d27:	lea    r12,[r13+0x4]
  428d2b:	lea    r13,[rsp+0x20]
  428d30:	cmp    rbp,r15
  428d33:	je     428d96 <flatcc_json_printer_union_vector_field@@Base+0x276>
  428d35:	add    r12,0x1
  428d39:	movzx  edx,BYTE PTR [r12]
  428d3e:	mov    rax,QWORD PTR [rbx+0x28]
  428d42:	add    rbp,0x4
  428d46:	lea    rcx,[rax+0x1]
  428d4a:	test   dl,dl
  428d4c:	mov    QWORD PTR [rbx+0x28],rcx
  428d50:	mov    BYTE PTR [rax],0x2c
  428d53:	jne    428dc0 <flatcc_json_printer_union_vector_field@@Base+0x2a0>
  428d55:	mov    rax,QWORD PTR [rbx+0x28]
  428d59:	cmp    rbp,r15
  428d5c:	lea    rdx,[rax+0x1]
  428d60:	mov    QWORD PTR [rbx+0x28],rdx
  428d64:	mov    BYTE PTR [rax],0x6e
  428d67:	mov    rax,QWORD PTR [rbx+0x28]
  428d6b:	lea    rdx,[rax+0x1]
  428d6f:	mov    QWORD PTR [rbx+0x28],rdx
  428d73:	mov    BYTE PTR [rax],0x75
  428d76:	mov    rax,QWORD PTR [rbx+0x28]
  428d7a:	lea    rdx,[rax+0x1]
  428d7e:	mov    QWORD PTR [rbx+0x28],rdx
  428d82:	mov    BYTE PTR [rax],0x6c
  428d85:	mov    rax,QWORD PTR [rbx+0x28]
  428d89:	lea    rdx,[rax+0x1]
  428d8d:	mov    QWORD PTR [rbx+0x28],rdx
  428d91:	mov    BYTE PTR [rax],0x6c
  428d94:	jne    428d35 <flatcc_json_printer_union_vector_field@@Base+0x215>
  428d96:	cmp    BYTE PTR [rbx+0x31],0x0
  428d9a:	jne    428e10 <flatcc_json_printer_union_vector_field@@Base+0x2f0>
  428d9c:	mov    rax,QWORD PTR [rbx+0x28]
  428da0:	lea    rdx,[rax+0x1]
  428da4:	mov    QWORD PTR [rbx+0x28],rdx
  428da8:	mov    BYTE PTR [rax],0x5d
  428dab:	jmp    428bb3 <flatcc_json_printer_union_vector_field@@Base+0x93>
  428db0:	movzx  r13d,ax
  428db4:	add    r13,QWORD PTR [rsi]
  428db7:	jmp    428b77 <flatcc_json_printer_union_vector_field@@Base+0x57>
  428dbc:	nop    DWORD PTR [rax+0x0]
  428dc0:	mov    BYTE PTR [rsp+0x2c],dl
  428dc4:	mov    QWORD PTR [rsp+0x20],rbp
  428dc9:	mov    rsi,r13
  428dcc:	mov    rdi,rbx
  428dcf:	call   r14
  428dd2:	jmp    428d30 <flatcc_json_printer_union_vector_field@@Base+0x210>
  428dd7:	nop    WORD PTR [rax+rax*1+0x0]
  428de0:	mov    eax,DWORD PTR [rbx+0x3c]
  428de3:	test   eax,eax
  428de5:	jne    428dee <flatcc_json_printer_union_vector_field@@Base+0x2ce>
  428de7:	mov    DWORD PTR [rbx+0x3c],0x1
  428dee:	lea    rcx,[rip+0x7e8b]        # 430c80 <flatcc_builder_padding_base@@Base+0x1e60>
  428df5:	lea    rsi,[rip+0x7c64]        # 430a60 <flatcc_builder_padding_base@@Base+0x1c40>
  428dfc:	lea    rdi,[rip+0x7e09]        # 430c0c <flatcc_builder_padding_base@@Base+0x1dec>
  428e03:	mov    edx,0x34b
  428e08:	call   405080 <__assert_fail@plt>
  428e0d:	nop    DWORD PTR [rax]
  428e10:	mov    rax,QWORD PTR [rbx+0x28]
  428e14:	mov    rdi,rbx
  428e17:	lea    rdx,[rax+0x1]
  428e1b:	mov    QWORD PTR [rbx+0x28],rdx
  428e1f:	mov    BYTE PTR [rax],0xa
  428e22:	sub    DWORD PTR [rbx+0x38],0x1
  428e26:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428e2b:	jmp    428d9c <flatcc_json_printer_union_vector_field@@Base+0x27c>
  428e30:	mov    DWORD PTR [rsp],ecx
  428e33:	mov    BYTE PTR [rsp+0x2c],al
  428e37:	lea    rsi,[rsp+0x20]
  428e3c:	mov    QWORD PTR [rsp+0x20],rbp
  428e41:	mov    rdi,rbx
  428e44:	call   r14
  428e47:	mov    ecx,DWORD PTR [rsp]
  428e4a:	jmp    428d1f <flatcc_json_printer_union_vector_field@@Base+0x1ff>
  428e4f:	call   405070 <__stack_chk_fail@plt>
  428e54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428e5f:	nop

0000000000428e60 <flatcc_json_printer_table_field@@Base>:
  428e60:	push   r15
  428e62:	push   r14
  428e64:	push   r13
  428e66:	push   r12
  428e68:	push   rbp
  428e69:	push   rbx
  428e6a:	sub    rsp,0x48
  428e6e:	mov    rax,QWORD PTR fs:0x28
  428e77:	mov    QWORD PTR [rsp+0x38],rax
  428e7c:	xor    eax,eax
  428e7e:	lea    eax,[rdx+rdx*1+0x4]
  428e82:	cmp    eax,DWORD PTR [rsi+0x10]
  428e85:	jge    428f72 <flatcc_json_printer_table_field@@Base+0x112>
  428e8b:	mov    rdx,QWORD PTR [rsi+0x8]
  428e8f:	mov    r14,rsi
  428e92:	movzx  r12d,WORD PTR [rdx+rax*1]
  428e97:	test   r12w,r12w
  428e9b:	je     428f72 <flatcc_json_printer_table_field@@Base+0x112>
  428ea1:	add    r12,QWORD PTR [rsi]
  428ea4:	je     428f72 <flatcc_json_printer_table_field@@Base+0x112>
  428eaa:	mov    eax,DWORD PTR [rsi+0x18]
  428ead:	mov    rbx,rdi
  428eb0:	mov    r15,rcx
  428eb3:	mov    r13,r9
  428eb6:	lea    edx,[rax+0x1]
  428eb9:	test   eax,eax
  428ebb:	mov    DWORD PTR [rsi+0x18],edx
  428ebe:	je     428ecf <flatcc_json_printer_table_field@@Base+0x6f>
  428ec0:	mov    rax,QWORD PTR [rdi+0x28]
  428ec4:	lea    rdx,[rax+0x1]
  428ec8:	mov    QWORD PTR [rdi+0x28],rdx
  428ecc:	mov    BYTE PTR [rax],0x2c
  428ecf:	cmp    BYTE PTR [rbx+0x31],0x0
  428ed3:	movsxd rbp,r8d
  428ed6:	jne    429068 <flatcc_json_printer_table_field@@Base+0x208>
  428edc:	mov    rsi,QWORD PTR [rbx+0x28]
  428ee0:	cmp    rsi,QWORD PTR [rbx+0x20]
  428ee4:	jb     428ef2 <flatcc_json_printer_table_field@@Base+0x92>
  428ee6:	xor    esi,esi
  428ee8:	mov    rdi,rbx
  428eeb:	call   QWORD PTR [rbx+0x48]
  428eee:	mov    rsi,QWORD PTR [rbx+0x28]
  428ef2:	mov    BYTE PTR [rsi],0x22
  428ef5:	xor    edi,edi
  428ef7:	cmp    BYTE PTR [rbx+0x32],0x0
  428efb:	mov    rdx,rbp
  428efe:	mov    rsi,r15
  428f01:	sete   dil
  428f05:	add    rdi,QWORD PTR [rbx+0x28]
  428f09:	lea    rax,[rdi+rbp*1]
  428f0d:	cmp    QWORD PTR [rbx+0x20],rax
  428f11:	mov    QWORD PTR [rbx+0x28],rdi
  428f15:	ja     428f98 <flatcc_json_printer_table_field@@Base+0x138>
  428f1b:	mov    rdi,rbx
  428f1e:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  428f23:	mov    rbp,QWORD PTR [rbx+0x28]
  428f27:	mov    BYTE PTR [rbp+0x0],0x22
  428f2b:	xor    eax,eax
  428f2d:	cmp    BYTE PTR [rbx+0x32],0x0
  428f31:	sete   al
  428f34:	add    rax,QWORD PTR [rbx+0x28]
  428f38:	lea    rdx,[rax+0x1]
  428f3c:	mov    QWORD PTR [rbx+0x28],rdx
  428f40:	mov    BYTE PTR [rax],0x3a
  428f43:	mov    rax,QWORD PTR [rbx+0x28]
  428f47:	mov    BYTE PTR [rax],0x20
  428f4a:	xor    eax,eax
  428f4c:	cmp    BYTE PTR [rbx+0x31],0x0
  428f50:	mov    edx,DWORD PTR [r14+0x14]
  428f54:	setne  al
  428f57:	add    rax,QWORD PTR [rbx+0x28]
  428f5b:	sub    edx,0x1
  428f5e:	mov    QWORD PTR [rbx+0x28],rax
  428f62:	jne    428fb0 <flatcc_json_printer_table_field@@Base+0x150>
  428f64:	mov    eax,DWORD PTR [rbx+0x3c]
  428f67:	test   eax,eax
  428f69:	jne    428f72 <flatcc_json_printer_table_field@@Base+0x112>
  428f6b:	mov    DWORD PTR [rbx+0x3c],0x2
  428f72:	mov    rax,QWORD PTR [rsp+0x38]
  428f77:	xor    rax,QWORD PTR fs:0x28
  428f80:	jne    4290e8 <flatcc_json_printer_table_field@@Base+0x288>
  428f86:	add    rsp,0x48
  428f8a:	pop    rbx
  428f8b:	pop    rbp
  428f8c:	pop    r12
  428f8e:	pop    r13
  428f90:	pop    r14
  428f92:	pop    r15
  428f94:	ret    
  428f95:	nop    DWORD PTR [rax]
  428f98:	call   4050e0 <memcpy@plt>
  428f9d:	add    rbp,QWORD PTR [rbx+0x28]
  428fa1:	mov    QWORD PTR [rbx+0x28],rbp
  428fa5:	jmp    428f27 <flatcc_json_printer_table_field@@Base+0xc7>
  428faa:	nop    WORD PTR [rax+rax*1+0x0]
  428fb0:	mov    ecx,DWORD PTR [r12]
  428fb4:	add    DWORD PTR [rbx+0x38],0x1
  428fb8:	lea    rsi,[rsp+0x10]
  428fbd:	mov    rdi,rbx
  428fc0:	add    r12,rcx
  428fc3:	lea    rcx,[rax+0x1]
  428fc7:	mov    QWORD PTR [rbx+0x28],rcx
  428fcb:	mov    BYTE PTR [rax],0x7b
  428fce:	mov    DWORD PTR [rsp+0x28],0x0
  428fd6:	mov    DWORD PTR [rsp+0x24],edx
  428fda:	movsxd rax,DWORD PTR [r12]
  428fde:	mov    QWORD PTR [rsp+0x10],r12
  428fe3:	sub    r12,rax
  428fe6:	movzx  eax,WORD PTR [r12]
  428feb:	mov    QWORD PTR [rsp+0x18],r12
  428ff0:	mov    DWORD PTR [rsp+0x20],eax
  428ff4:	call   r13
  428ff7:	cmp    BYTE PTR [rbx+0x31],0x0
  428ffb:	jne    429018 <flatcc_json_printer_table_field@@Base+0x1b8>
  428ffd:	mov    rsi,QWORD PTR [rbx+0x28]
  429001:	lea    rax,[rsi+0x1]
  429005:	mov    QWORD PTR [rbx+0x28],rax
  429009:	mov    BYTE PTR [rsi],0x7d
  42900c:	jmp    428f72 <flatcc_json_printer_table_field@@Base+0x112>
  429011:	nop    DWORD PTR [rax+0x0]
  429018:	mov    rax,QWORD PTR [rbx+0x28]
  42901c:	lea    rdx,[rax+0x1]
  429020:	mov    QWORD PTR [rbx+0x28],rdx
  429024:	mov    BYTE PTR [rax],0xa
  429027:	mov    eax,DWORD PTR [rbx+0x38]
  42902a:	movzx  esi,BYTE PTR [rbx+0x31]
  42902e:	mov    rdi,QWORD PTR [rbx+0x28]
  429032:	lea    ebp,[rax-0x1]
  429035:	imul   esi,ebp
  429038:	mov    DWORD PTR [rbx+0x38],ebp
  42903b:	movsxd rbp,esi
  42903e:	lea    rax,[rdi+rbp*1]
  429042:	cmp    QWORD PTR [rbx+0x20],rax
  429046:	jb     4290d8 <flatcc_json_printer_table_field@@Base+0x278>
  42904c:	mov    esi,0x20
  429051:	mov    rdx,rbp
  429054:	call   405090 <memset@plt>
  429059:	mov    rsi,rbp
  42905c:	add    rsi,QWORD PTR [rbx+0x28]
  429060:	jmp    429001 <flatcc_json_printer_table_field@@Base+0x1a1>
  429062:	nop    WORD PTR [rax+rax*1+0x0]
  429068:	mov    rax,QWORD PTR [rbx+0x28]
  42906c:	lea    rdx,[rax+0x1]
  429070:	mov    QWORD PTR [rbx+0x28],rdx
  429074:	mov    BYTE PTR [rax],0xa
  429077:	movzx  esi,BYTE PTR [rbx+0x31]
  42907b:	mov    rdi,QWORD PTR [rbx+0x28]
  42907f:	imul   esi,DWORD PTR [rbx+0x38]
  429083:	movsxd rcx,esi
  429086:	lea    rax,[rdi+rcx*1]
  42908a:	cmp    QWORD PTR [rbx+0x20],rax
  42908e:	jb     4290c0 <flatcc_json_printer_table_field@@Base+0x260>
  429090:	mov    rdx,rcx
  429093:	mov    esi,0x20
  429098:	mov    QWORD PTR [rsp+0x8],rcx
  42909d:	call   405090 <memset@plt>
  4290a2:	mov    rcx,QWORD PTR [rsp+0x8]
  4290a7:	add    rcx,QWORD PTR [rbx+0x28]
  4290ab:	mov    rsi,rcx
  4290ae:	mov    QWORD PTR [rbx+0x28],rcx
  4290b2:	jmp    428ef2 <flatcc_json_printer_table_field@@Base+0x92>
  4290b7:	nop    WORD PTR [rax+rax*1+0x0]
  4290c0:	mov    rsi,rcx
  4290c3:	mov    rdi,rbx
  4290c6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4290cb:	mov    rsi,QWORD PTR [rbx+0x28]
  4290cf:	jmp    428ef2 <flatcc_json_printer_table_field@@Base+0x92>
  4290d4:	nop    DWORD PTR [rax+0x0]
  4290d8:	mov    rsi,rbp
  4290db:	mov    rdi,rbx
  4290de:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4290e3:	jmp    428ffd <flatcc_json_printer_table_field@@Base+0x19d>
  4290e8:	call   405070 <__stack_chk_fail@plt>
  4290ed:	nop    DWORD PTR [rax]

00000000004290f0 <flatcc_json_printer_union_field@@Base>:
  4290f0:	push   r15
  4290f2:	push   r14
  4290f4:	mov    r14,rcx
  4290f7:	push   r13
  4290f9:	push   r12
  4290fb:	mov    r15,rsi
  4290fe:	push   rbp
  4290ff:	push   rbx
  429100:	mov    rbx,rdi
  429103:	sub    rsp,0x48
  429107:	mov    ecx,DWORD PTR [rsi+0x10]
  42910a:	xor    esi,esi
  42910c:	mov    rax,QWORD PTR [rsp+0x80]
  429114:	mov    QWORD PTR [rsp+0x8],rax
  429119:	mov    rax,QWORD PTR fs:0x28
  429122:	mov    QWORD PTR [rsp+0x38],rax
  429127:	xor    eax,eax
  429129:	lea    eax,[rdx+rdx*1+0x2]
  42912d:	cmp    eax,ecx
  42912f:	jge    429142 <flatcc_json_printer_union_field@@Base+0x52>
  429131:	mov    rdi,QWORD PTR [r15+0x8]
  429135:	movzx  eax,WORD PTR [rdi+rax*1]
  429139:	test   ax,ax
  42913c:	jne    429298 <flatcc_json_printer_union_field@@Base+0x1a8>
  429142:	lea    eax,[rdx+rdx*1+0x4]
  429146:	cmp    eax,ecx
  429148:	jge    429270 <flatcc_json_printer_union_field@@Base+0x180>
  42914e:	mov    rdx,QWORD PTR [r15+0x8]
  429152:	movzx  r12d,WORD PTR [rdx+rax*1]
  429157:	test   r12w,r12w
  42915b:	je     429270 <flatcc_json_printer_union_field@@Base+0x180>
  429161:	add    r12,QWORD PTR [r15]
  429164:	je     429270 <flatcc_json_printer_union_field@@Base+0x180>
  42916a:	test   rsi,rsi
  42916d:	je     429270 <flatcc_json_printer_union_field@@Base+0x180>
  429173:	mov    eax,DWORD PTR [r15+0x18]
  429177:	movzx  r13d,BYTE PTR [rsi]
  42917b:	lea    edx,[rax+0x1]
  42917e:	test   eax,eax
  429180:	mov    DWORD PTR [r15+0x18],edx
  429184:	je     429195 <flatcc_json_printer_union_field@@Base+0xa5>
  429186:	mov    rax,QWORD PTR [rbx+0x28]
  42918a:	lea    rdx,[rax+0x1]
  42918e:	mov    QWORD PTR [rbx+0x28],rdx
  429192:	mov    BYTE PTR [rax],0x2c
  429195:	cmp    BYTE PTR [rbx+0x31],0x0
  429199:	jne    429350 <flatcc_json_printer_union_field@@Base+0x260>
  42919f:	mov    rax,QWORD PTR [rbx+0x28]
  4291a3:	cmp    rax,QWORD PTR [rbx+0x20]
  4291a7:	jae    429388 <flatcc_json_printer_union_field@@Base+0x298>
  4291ad:	mov    BYTE PTR [rax],0x22
  4291b0:	xor    edi,edi
  4291b2:	cmp    BYTE PTR [rbx+0x32],0x0
  4291b6:	movsxd rbp,r8d
  4291b9:	mov    QWORD PTR [rsp+0x10],r9
  4291be:	mov    rsi,r14
  4291c1:	mov    rdx,rbp
  4291c4:	sete   dil
  4291c8:	add    rdi,QWORD PTR [rbx+0x28]
  4291cc:	lea    rax,[rdi+rbp*1]
  4291d0:	cmp    QWORD PTR [rbx+0x20],rax
  4291d4:	mov    QWORD PTR [rbx+0x28],rdi
  4291d8:	ja     4292a8 <flatcc_json_printer_union_field@@Base+0x1b8>
  4291de:	mov    rdi,rbx
  4291e1:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4291e6:	mov    rax,QWORD PTR [rbx+0x28]
  4291ea:	mov    r9,QWORD PTR [rsp+0x10]
  4291ef:	lea    rdx,[rax+0x5]
  4291f3:	cmp    QWORD PTR [rbx+0x20],rdx
  4291f7:	jbe    4292cb <flatcc_json_printer_union_field@@Base+0x1db>
  4291fd:	mov    DWORD PTR [rax],0x7079745f
  429203:	mov    BYTE PTR [rax+0x4],0x65
  429207:	mov    rax,QWORD PTR [rbx+0x28]
  42920b:	add    rax,0x5
  42920f:	mov    QWORD PTR [rbx+0x28],rax
  429213:	mov    BYTE PTR [rax],0x22
  429216:	xor    eax,eax
  429218:	cmp    BYTE PTR [rbx+0x32],0x0
  42921c:	sete   al
  42921f:	add    rax,QWORD PTR [rbx+0x28]
  429223:	xor    esi,esi
  429225:	lea    rdx,[rax+0x1]
  429229:	mov    QWORD PTR [rbx+0x28],rdx
  42922d:	mov    BYTE PTR [rax],0x3a
  429230:	mov    rax,QWORD PTR [rbx+0x28]
  429234:	mov    BYTE PTR [rax],0x20
  429237:	cmp    BYTE PTR [rbx+0x31],0x0
  42923b:	setne  sil
  42923f:	add    rsi,QWORD PTR [rbx+0x28]
  429243:	cmp    BYTE PTR [rbx+0x33],0x0
  429247:	mov    QWORD PTR [rbx+0x28],rsi
  42924b:	je     4292f8 <flatcc_json_printer_union_field@@Base+0x208>
  429251:	movzx  edi,r13b
  429255:	call   41f4b0 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42925a:	cdqe   
  42925c:	add    QWORD PTR [rbx+0x28],rax
  429260:	test   r13b,r13b
  429263:	jne    42930b <flatcc_json_printer_union_field@@Base+0x21b>
  429269:	nop    DWORD PTR [rax+0x0]
  429270:	mov    rax,QWORD PTR [rsp+0x38]
  429275:	xor    rax,QWORD PTR fs:0x28
  42927e:	jne    4293ad <flatcc_json_printer_union_field@@Base+0x2bd>
  429284:	add    rsp,0x48
  429288:	pop    rbx
  429289:	pop    rbp
  42928a:	pop    r12
  42928c:	pop    r13
  42928e:	pop    r14
  429290:	pop    r15
  429292:	ret    
  429293:	nop    DWORD PTR [rax+rax*1+0x0]
  429298:	movzx  esi,ax
  42929b:	add    rsi,QWORD PTR [r15]
  42929e:	jmp    429142 <flatcc_json_printer_union_field@@Base+0x52>
  4292a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4292a8:	call   4050e0 <memcpy@plt>
  4292ad:	mov    rax,rbp
  4292b0:	add    rax,QWORD PTR [rbx+0x28]
  4292b4:	mov    r9,QWORD PTR [rsp+0x10]
  4292b9:	lea    rdx,[rax+0x5]
  4292bd:	cmp    QWORD PTR [rbx+0x20],rdx
  4292c1:	mov    QWORD PTR [rbx+0x28],rax
  4292c5:	ja     4291fd <flatcc_json_printer_union_field@@Base+0x10d>
  4292cb:	lea    rsi,[rip+0x7955]        # 430c27 <flatcc_builder_padding_base@@Base+0x1e07>
  4292d2:	mov    edx,0x5
  4292d7:	mov    rdi,rbx
  4292da:	mov    QWORD PTR [rsp+0x10],r9
  4292df:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4292e4:	mov    rax,QWORD PTR [rbx+0x28]
  4292e8:	mov    r9,QWORD PTR [rsp+0x10]
  4292ed:	jmp    429213 <flatcc_json_printer_union_field@@Base+0x123>
  4292f2:	nop    WORD PTR [rax+rax*1+0x0]
  4292f8:	movzx  esi,r13b
  4292fc:	mov    rdi,rbx
  4292ff:	call   r9
  429302:	test   r13b,r13b
  429305:	je     429270 <flatcc_json_printer_union_field@@Base+0x180>
  42930b:	mov    rax,QWORD PTR [rbx+0x28]
  42930f:	mov    rsi,r14
  429312:	mov    rdi,rbx
  429315:	lea    rdx,[rax+0x1]
  429319:	mov    QWORD PTR [rbx+0x28],rdx
  42931d:	mov    BYTE PTR [rax],0x2c
  429320:	mov    rdx,rbp
  429323:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  429328:	mov    eax,DWORD PTR [r15+0x14]
  42932c:	mov    BYTE PTR [rsp+0x2c],r13b
  429331:	lea    rsi,[rsp+0x20]
  429336:	mov    QWORD PTR [rsp+0x20],r12
  42933b:	mov    rdi,rbx
  42933e:	mov    DWORD PTR [rsp+0x28],eax
  429342:	mov    rax,QWORD PTR [rsp+0x8]
  429347:	call   rax
  429349:	jmp    429270 <flatcc_json_printer_union_field@@Base+0x180>
  42934e:	xchg   ax,ax
  429350:	mov    rax,QWORD PTR [rbx+0x28]
  429354:	mov    rdi,rbx
  429357:	mov    QWORD PTR [rsp+0x18],r9
  42935c:	mov    DWORD PTR [rsp+0x10],r8d
  429361:	lea    rdx,[rax+0x1]
  429365:	mov    QWORD PTR [rbx+0x28],rdx
  429369:	mov    BYTE PTR [rax],0xa
  42936c:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  429371:	mov    rax,QWORD PTR [rbx+0x28]
  429375:	mov    r8d,DWORD PTR [rsp+0x10]
  42937a:	mov    r9,QWORD PTR [rsp+0x18]
  42937f:	jmp    4291ad <flatcc_json_printer_union_field@@Base+0xbd>
  429384:	nop    DWORD PTR [rax+0x0]
  429388:	mov    QWORD PTR [rsp+0x18],r9
  42938d:	mov    DWORD PTR [rsp+0x10],r8d
  429392:	xor    esi,esi
  429394:	mov    rdi,rbx
  429397:	call   QWORD PTR [rbx+0x48]
  42939a:	mov    rax,QWORD PTR [rbx+0x28]
  42939e:	mov    r9,QWORD PTR [rsp+0x18]
  4293a3:	mov    r8d,DWORD PTR [rsp+0x10]
  4293a8:	jmp    4291ad <flatcc_json_printer_union_field@@Base+0xbd>
  4293ad:	call   405070 <__stack_chk_fail@plt>
  4293b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4293bd:	nop    DWORD PTR [rax]

00000000004293c0 <flatcc_json_printer_union_table@@Base>:
  4293c0:	push   rbp
  4293c1:	push   rbx
  4293c2:	mov    rbx,rdi
  4293c5:	sub    rsp,0x38
  4293c9:	mov    rax,QWORD PTR fs:0x28
  4293d2:	mov    QWORD PTR [rsp+0x28],rax
  4293d7:	xor    eax,eax
  4293d9:	mov    eax,DWORD PTR [rsi+0x8]
  4293dc:	sub    eax,0x1
  4293df:	jne    429410 <flatcc_json_printer_union_table@@Base+0x50>
  4293e1:	mov    eax,DWORD PTR [rdi+0x3c]
  4293e4:	test   eax,eax
  4293e6:	jne    4293ef <flatcc_json_printer_union_table@@Base+0x2f>
  4293e8:	mov    DWORD PTR [rdi+0x3c],0x2
  4293ef:	mov    rax,QWORD PTR [rsp+0x28]
  4293f4:	xor    rax,QWORD PTR fs:0x28
  4293fd:	jne    4294cd <flatcc_json_printer_union_table@@Base+0x10d>
  429403:	add    rsp,0x38
  429407:	pop    rbx
  429408:	pop    rbp
  429409:	ret    
  42940a:	nop    WORD PTR [rax+rax*1+0x0]
  429410:	mov    rcx,QWORD PTR [rsi]
  429413:	mov    esi,DWORD PTR [rcx]
  429415:	add    DWORD PTR [rdi+0x38],0x1
  429419:	add    rcx,rsi
  42941c:	mov    rsi,QWORD PTR [rdi+0x28]
  429420:	lea    rdi,[rsi+0x1]
  429424:	mov    QWORD PTR [rbx+0x28],rdi
  429428:	mov    BYTE PTR [rsi],0x7b
  42942b:	mov    rdi,rbx
  42942e:	mov    DWORD PTR [rsp+0x18],0x0
  429436:	mov    DWORD PTR [rsp+0x14],eax
  42943a:	mov    rsi,rsp
  42943d:	movsxd rax,DWORD PTR [rcx]
  429440:	mov    QWORD PTR [rsp],rcx
  429444:	sub    rcx,rax
  429447:	movzx  eax,WORD PTR [rcx]
  42944a:	mov    QWORD PTR [rsp+0x8],rcx
  42944f:	mov    DWORD PTR [rsp+0x10],eax
  429453:	call   rdx
  429455:	cmp    BYTE PTR [rbx+0x31],0x0
  429459:	jne    429470 <flatcc_json_printer_union_table@@Base+0xb0>
  42945b:	mov    rsi,QWORD PTR [rbx+0x28]
  42945f:	lea    rax,[rsi+0x1]
  429463:	mov    QWORD PTR [rbx+0x28],rax
  429467:	mov    BYTE PTR [rsi],0x7d
  42946a:	jmp    4293ef <flatcc_json_printer_union_table@@Base+0x2f>
  42946c:	nop    DWORD PTR [rax+0x0]
  429470:	mov    rax,QWORD PTR [rbx+0x28]
  429474:	lea    rdx,[rax+0x1]
  429478:	mov    QWORD PTR [rbx+0x28],rdx
  42947c:	mov    BYTE PTR [rax],0xa
  42947f:	mov    eax,DWORD PTR [rbx+0x38]
  429482:	movzx  esi,BYTE PTR [rbx+0x31]
  429486:	mov    rdi,QWORD PTR [rbx+0x28]
  42948a:	lea    ebp,[rax-0x1]
  42948d:	imul   esi,ebp
  429490:	mov    DWORD PTR [rbx+0x38],ebp
  429493:	movsxd rbp,esi
  429496:	lea    rax,[rdi+rbp*1]
  42949a:	cmp    QWORD PTR [rbx+0x20],rax
  42949e:	jb     4294c0 <flatcc_json_printer_union_table@@Base+0x100>
  4294a0:	mov    esi,0x20
  4294a5:	mov    rdx,rbp
  4294a8:	call   405090 <memset@plt>
  4294ad:	mov    rsi,rbp
  4294b0:	add    rsi,QWORD PTR [rbx+0x28]
  4294b4:	jmp    42945f <flatcc_json_printer_union_table@@Base+0x9f>
  4294b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4294c0:	mov    rsi,rbp
  4294c3:	mov    rdi,rbx
  4294c6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4294cb:	jmp    42945b <flatcc_json_printer_union_table@@Base+0x9b>
  4294cd:	call   405070 <__stack_chk_fail@plt>
  4294d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4294dd:	nop    DWORD PTR [rax]

00000000004294e0 <flatcc_json_printer_union_struct@@Base>:
  4294e0:	push   rbp
  4294e1:	push   rbx
  4294e2:	mov    rbx,rdi
  4294e5:	sub    rsp,0x8
  4294e9:	mov    rax,QWORD PTR [rdi+0x28]
  4294ed:	add    DWORD PTR [rdi+0x38],0x1
  4294f1:	lea    rcx,[rax+0x1]
  4294f5:	mov    QWORD PTR [rdi+0x28],rcx
  4294f9:	mov    BYTE PTR [rax],0x7b
  4294fc:	mov    rsi,QWORD PTR [rsi]
  4294ff:	mov    eax,DWORD PTR [rsi]
  429501:	add    rsi,rax
  429504:	call   rdx
  429506:	cmp    BYTE PTR [rbx+0x31],0x0
  42950a:	jne    429528 <flatcc_json_printer_union_struct@@Base+0x48>
  42950c:	mov    rsi,QWORD PTR [rbx+0x28]
  429510:	lea    rax,[rsi+0x1]
  429514:	mov    QWORD PTR [rbx+0x28],rax
  429518:	mov    BYTE PTR [rsi],0x7d
  42951b:	add    rsp,0x8
  42951f:	pop    rbx
  429520:	pop    rbp
  429521:	ret    
  429522:	nop    WORD PTR [rax+rax*1+0x0]
  429528:	mov    rax,QWORD PTR [rbx+0x28]
  42952c:	lea    rdx,[rax+0x1]
  429530:	mov    QWORD PTR [rbx+0x28],rdx
  429534:	mov    BYTE PTR [rax],0xa
  429537:	mov    eax,DWORD PTR [rbx+0x38]
  42953a:	movzx  esi,BYTE PTR [rbx+0x31]
  42953e:	mov    rdi,QWORD PTR [rbx+0x28]
  429542:	lea    ebp,[rax-0x1]
  429545:	imul   esi,ebp
  429548:	mov    DWORD PTR [rbx+0x38],ebp
  42954b:	movsxd rbp,esi
  42954e:	lea    rax,[rdi+rbp*1]
  429552:	cmp    QWORD PTR [rbx+0x20],rax
  429556:	jb     429570 <flatcc_json_printer_union_struct@@Base+0x90>
  429558:	mov    esi,0x20
  42955d:	mov    rdx,rbp
  429560:	call   405090 <memset@plt>
  429565:	mov    rsi,rbp
  429568:	add    rsi,QWORD PTR [rbx+0x28]
  42956c:	jmp    429510 <flatcc_json_printer_union_struct@@Base+0x30>
  42956e:	xchg   ax,ax
  429570:	mov    rsi,rbp
  429573:	mov    rdi,rbx
  429576:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42957b:	jmp    42950c <flatcc_json_printer_union_struct@@Base+0x2c>
  42957d:	nop    DWORD PTR [rax]

0000000000429580 <flatcc_json_printer_union_string@@Base>:
  429580:	mov    rsi,QWORD PTR [rsi]
  429583:	mov    eax,DWORD PTR [rsi]
  429585:	add    rsi,rax
  429588:	mov    edx,DWORD PTR [rsi]
  42958a:	add    rsi,0x4
  42958e:	jmp    420050 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  429593:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42959e:	xchg   ax,ax

00000000004295a0 <flatcc_json_printer_embedded_struct_field@@Base>:
  4295a0:	push   r15
  4295a2:	push   r14
  4295a4:	mov    r15,r8
  4295a7:	push   r13
  4295a9:	push   r12
  4295ab:	mov    r13,rcx
  4295ae:	push   rbp
  4295af:	push   rbx
  4295b0:	mov    r12,rdx
  4295b3:	mov    rbx,rdi
  4295b6:	sub    rsp,0x8
  4295ba:	test   esi,esi
  4295bc:	je     4295cd <flatcc_json_printer_embedded_struct_field@@Base+0x2d>
  4295be:	mov    rax,QWORD PTR [rdi+0x28]
  4295c2:	lea    rdx,[rax+0x1]
  4295c6:	mov    QWORD PTR [rdi+0x28],rdx
  4295ca:	mov    BYTE PTR [rax],0x2c
  4295cd:	cmp    BYTE PTR [rbx+0x31],0x0
  4295d1:	movsxd rbp,r9d
  4295d4:	jne    429710 <flatcc_json_printer_embedded_struct_field@@Base+0x170>
  4295da:	mov    rsi,QWORD PTR [rbx+0x28]
  4295de:	cmp    rsi,QWORD PTR [rbx+0x20]
  4295e2:	jae    429690 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
  4295e8:	mov    BYTE PTR [rsi],0x22
  4295eb:	xor    edi,edi
  4295ed:	cmp    BYTE PTR [rbx+0x32],0x0
  4295f1:	mov    rdx,rbp
  4295f4:	mov    rsi,r15
  4295f7:	sete   dil
  4295fb:	add    rdi,QWORD PTR [rbx+0x28]
  4295ff:	lea    rax,[rdi+rbp*1]
  429603:	cmp    QWORD PTR [rbx+0x20],rax
  429607:	mov    QWORD PTR [rbx+0x28],rdi
  42960b:	ja     4296a8 <flatcc_json_printer_embedded_struct_field@@Base+0x108>
  429611:	mov    rdi,rbx
  429614:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429619:	mov    rbp,QWORD PTR [rbx+0x28]
  42961d:	mov    BYTE PTR [rbp+0x0],0x22
  429621:	xor    eax,eax
  429623:	cmp    BYTE PTR [rbx+0x32],0x0
  429627:	lea    rsi,[r12+r13*1]
  42962b:	mov    rdi,rbx
  42962e:	sete   al
  429631:	add    rax,QWORD PTR [rbx+0x28]
  429635:	lea    rdx,[rax+0x1]
  429639:	mov    QWORD PTR [rbx+0x28],rdx
  42963d:	mov    BYTE PTR [rax],0x3a
  429640:	mov    rax,QWORD PTR [rbx+0x28]
  429644:	mov    BYTE PTR [rax],0x20
  429647:	xor    eax,eax
  429649:	cmp    BYTE PTR [rbx+0x31],0x0
  42964d:	setne  al
  429650:	add    rax,QWORD PTR [rbx+0x28]
  429654:	add    DWORD PTR [rbx+0x38],0x1
  429658:	lea    rdx,[rax+0x1]
  42965c:	mov    QWORD PTR [rbx+0x28],rdx
  429660:	mov    BYTE PTR [rax],0x7b
  429663:	call   QWORD PTR [rsp+0x40]
  429667:	cmp    BYTE PTR [rbx+0x31],0x0
  42966b:	jne    4296c0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
  42966d:	mov    rsi,QWORD PTR [rbx+0x28]
  429671:	lea    rax,[rsi+0x1]
  429675:	mov    QWORD PTR [rbx+0x28],rax
  429679:	mov    BYTE PTR [rsi],0x7d
  42967c:	add    rsp,0x8
  429680:	pop    rbx
  429681:	pop    rbp
  429682:	pop    r12
  429684:	pop    r13
  429686:	pop    r14
  429688:	pop    r15
  42968a:	ret    
  42968b:	nop    DWORD PTR [rax+rax*1+0x0]
  429690:	xor    esi,esi
  429692:	mov    rdi,rbx
  429695:	call   QWORD PTR [rbx+0x48]
  429698:	mov    rsi,QWORD PTR [rbx+0x28]
  42969c:	jmp    4295e8 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  4296a1:	nop    DWORD PTR [rax+0x0]
  4296a8:	call   4050e0 <memcpy@plt>
  4296ad:	add    rbp,QWORD PTR [rbx+0x28]
  4296b1:	mov    QWORD PTR [rbx+0x28],rbp
  4296b5:	jmp    42961d <flatcc_json_printer_embedded_struct_field@@Base+0x7d>
  4296ba:	nop    WORD PTR [rax+rax*1+0x0]
  4296c0:	mov    rax,QWORD PTR [rbx+0x28]
  4296c4:	lea    rdx,[rax+0x1]
  4296c8:	mov    QWORD PTR [rbx+0x28],rdx
  4296cc:	mov    BYTE PTR [rax],0xa
  4296cf:	mov    eax,DWORD PTR [rbx+0x38]
  4296d2:	movzx  esi,BYTE PTR [rbx+0x31]
  4296d6:	mov    rdi,QWORD PTR [rbx+0x28]
  4296da:	lea    ebp,[rax-0x1]
  4296dd:	imul   esi,ebp
  4296e0:	mov    DWORD PTR [rbx+0x38],ebp
  4296e3:	movsxd rbp,esi
  4296e6:	lea    rax,[rdi+rbp*1]
  4296ea:	cmp    QWORD PTR [rbx+0x20],rax
  4296ee:	jb     429770 <flatcc_json_printer_embedded_struct_field@@Base+0x1d0>
  4296f4:	mov    esi,0x20
  4296f9:	mov    rdx,rbp
  4296fc:	call   405090 <memset@plt>
  429701:	mov    rsi,rbp
  429704:	add    rsi,QWORD PTR [rbx+0x28]
  429708:	jmp    429671 <flatcc_json_printer_embedded_struct_field@@Base+0xd1>
  42970d:	nop    DWORD PTR [rax]
  429710:	mov    rax,QWORD PTR [rbx+0x28]
  429714:	lea    rdx,[rax+0x1]
  429718:	mov    QWORD PTR [rbx+0x28],rdx
  42971c:	mov    BYTE PTR [rax],0xa
  42971f:	movzx  esi,BYTE PTR [rbx+0x31]
  429723:	mov    rdi,QWORD PTR [rbx+0x28]
  429727:	imul   esi,DWORD PTR [rbx+0x38]
  42972b:	movsxd r14,esi
  42972e:	lea    rax,[rdi+r14*1]
  429732:	cmp    QWORD PTR [rbx+0x20],rax
  429736:	jb     429758 <flatcc_json_printer_embedded_struct_field@@Base+0x1b8>
  429738:	mov    esi,0x20
  42973d:	mov    rdx,r14
  429740:	call   405090 <memset@plt>
  429745:	mov    rsi,r14
  429748:	add    rsi,QWORD PTR [rbx+0x28]
  42974c:	mov    QWORD PTR [rbx+0x28],rsi
  429750:	jmp    4295e8 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  429755:	nop    DWORD PTR [rax]
  429758:	mov    rsi,r14
  42975b:	mov    rdi,rbx
  42975e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429763:	mov    rsi,QWORD PTR [rbx+0x28]
  429767:	jmp    4295e8 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  42976c:	nop    DWORD PTR [rax+0x0]
  429770:	mov    rsi,rbp
  429773:	mov    rdi,rbx
  429776:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42977b:	jmp    42966d <flatcc_json_printer_embedded_struct_field@@Base+0xcd>

0000000000429780 <flatcc_json_printer_struct_field@@Base>:
  429780:	lea    eax,[rdx+rdx*1+0x4]
  429784:	cmp    eax,DWORD PTR [rsi+0x10]
  429787:	jge    429898 <flatcc_json_printer_struct_field@@Base+0x118>
  42978d:	push   r15
  42978f:	push   r14
  429791:	push   r13
  429793:	push   r12
  429795:	push   rbp
  429796:	push   rbx
  429797:	sub    rsp,0x8
  42979b:	mov    rdx,QWORD PTR [rsi+0x8]
  42979f:	movzx  r13d,WORD PTR [rdx+rax*1]
  4297a4:	test   r13w,r13w
  4297a8:	je     42988a <flatcc_json_printer_struct_field@@Base+0x10a>
  4297ae:	add    r13,QWORD PTR [rsi]
  4297b1:	je     42988a <flatcc_json_printer_struct_field@@Base+0x10a>
  4297b7:	mov    eax,DWORD PTR [rsi+0x18]
  4297ba:	lea    edx,[rax+0x1]
  4297bd:	test   eax,eax
  4297bf:	mov    DWORD PTR [rsi+0x18],edx
  4297c2:	je     4297d3 <flatcc_json_printer_struct_field@@Base+0x53>
  4297c4:	mov    rax,QWORD PTR [rdi+0x28]
  4297c8:	lea    rdx,[rax+0x1]
  4297cc:	mov    QWORD PTR [rdi+0x28],rdx
  4297d0:	mov    BYTE PTR [rax],0x2c
  4297d3:	cmp    BYTE PTR [rdi+0x31],0x0
  4297d7:	mov    r12,r9
  4297da:	mov    r15,rcx
  4297dd:	mov    rbx,rdi
  4297e0:	movsxd rbp,r8d
  4297e3:	jne    429920 <flatcc_json_printer_struct_field@@Base+0x1a0>
  4297e9:	mov    rsi,QWORD PTR [rdi+0x28]
  4297ed:	cmp    rsi,QWORD PTR [rdi+0x20]
  4297f1:	jb     4297fc <flatcc_json_printer_struct_field@@Base+0x7c>
  4297f3:	xor    esi,esi
  4297f5:	call   QWORD PTR [rdi+0x48]
  4297f8:	mov    rsi,QWORD PTR [rbx+0x28]
  4297fc:	mov    BYTE PTR [rsi],0x22
  4297ff:	xor    edi,edi
  429801:	cmp    BYTE PTR [rbx+0x32],0x0
  429805:	mov    rdx,rbp
  429808:	mov    rsi,r15
  42980b:	sete   dil
  42980f:	add    rdi,QWORD PTR [rbx+0x28]
  429813:	lea    rax,[rdi+rbp*1]
  429817:	cmp    QWORD PTR [rbx+0x20],rax
  42981b:	mov    QWORD PTR [rbx+0x28],rdi
  42981f:	ja     4298a0 <flatcc_json_printer_struct_field@@Base+0x120>
  429821:	mov    rdi,rbx
  429824:	call   41f1e0 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429829:	mov    rbp,QWORD PTR [rbx+0x28]
  42982d:	mov    BYTE PTR [rbp+0x0],0x22
  429831:	xor    eax,eax
  429833:	cmp    BYTE PTR [rbx+0x32],0x0
  429837:	mov    rsi,r13
  42983a:	mov    rdi,rbx
  42983d:	sete   al
  429840:	add    rax,QWORD PTR [rbx+0x28]
  429844:	lea    rdx,[rax+0x1]
  429848:	mov    QWORD PTR [rbx+0x28],rdx
  42984c:	mov    BYTE PTR [rax],0x3a
  42984f:	mov    rax,QWORD PTR [rbx+0x28]
  429853:	mov    BYTE PTR [rax],0x20
  429856:	xor    eax,eax
  429858:	cmp    BYTE PTR [rbx+0x31],0x0
  42985c:	setne  al
  42985f:	add    rax,QWORD PTR [rbx+0x28]
  429863:	add    DWORD PTR [rbx+0x38],0x1
  429867:	lea    rdx,[rax+0x1]
  42986b:	mov    QWORD PTR [rbx+0x28],rdx
  42986f:	mov    BYTE PTR [rax],0x7b
  429872:	call   r12
  429875:	cmp    BYTE PTR [rbx+0x31],0x0
  429879:	jne    4298b8 <flatcc_json_printer_struct_field@@Base+0x138>
  42987b:	mov    rsi,QWORD PTR [rbx+0x28]
  42987f:	lea    rax,[rsi+0x1]
  429883:	mov    QWORD PTR [rbx+0x28],rax
  429887:	mov    BYTE PTR [rsi],0x7d
  42988a:	add    rsp,0x8
  42988e:	pop    rbx
  42988f:	pop    rbp
  429890:	pop    r12
  429892:	pop    r13
  429894:	pop    r14
  429896:	pop    r15
  429898:	repz ret 
  42989a:	nop    WORD PTR [rax+rax*1+0x0]
  4298a0:	call   4050e0 <memcpy@plt>
  4298a5:	add    rbp,QWORD PTR [rbx+0x28]
  4298a9:	mov    QWORD PTR [rbx+0x28],rbp
  4298ad:	jmp    42982d <flatcc_json_printer_struct_field@@Base+0xad>
  4298b2:	nop    WORD PTR [rax+rax*1+0x0]
  4298b8:	mov    rax,QWORD PTR [rbx+0x28]
  4298bc:	lea    rdx,[rax+0x1]
  4298c0:	mov    QWORD PTR [rbx+0x28],rdx
  4298c4:	mov    BYTE PTR [rax],0xa
  4298c7:	mov    eax,DWORD PTR [rbx+0x38]
  4298ca:	movzx  esi,BYTE PTR [rbx+0x31]
  4298ce:	mov    rdi,QWORD PTR [rbx+0x28]
  4298d2:	lea    ebp,[rax-0x1]
  4298d5:	imul   esi,ebp
  4298d8:	mov    DWORD PTR [rbx+0x38],ebp
  4298db:	movsxd rbp,esi
  4298de:	lea    rax,[rdi+rbp*1]
  4298e2:	cmp    QWORD PTR [rbx+0x20],rax
  4298e6:	jb     429908 <flatcc_json_printer_struct_field@@Base+0x188>
  4298e8:	mov    esi,0x20
  4298ed:	mov    rdx,rbp
  4298f0:	call   405090 <memset@plt>
  4298f5:	mov    rsi,rbp
  4298f8:	add    rsi,QWORD PTR [rbx+0x28]
  4298fc:	jmp    42987f <flatcc_json_printer_struct_field@@Base+0xff>
  429901:	nop    DWORD PTR [rax+0x0]
  429908:	mov    rsi,rbp
  42990b:	mov    rdi,rbx
  42990e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429913:	jmp    42987b <flatcc_json_printer_struct_field@@Base+0xfb>
  429918:	nop    DWORD PTR [rax+rax*1+0x0]
  429920:	mov    rax,QWORD PTR [rdi+0x28]
  429924:	lea    rdx,[rax+0x1]
  429928:	mov    QWORD PTR [rdi+0x28],rdx
  42992c:	mov    BYTE PTR [rax],0xa
  42992f:	movzx  esi,BYTE PTR [rdi+0x31]
  429933:	imul   esi,DWORD PTR [rdi+0x38]
  429937:	mov    rdi,QWORD PTR [rdi+0x28]
  42993b:	movsxd r14,esi
  42993e:	lea    rax,[rdi+r14*1]
  429942:	cmp    QWORD PTR [rbx+0x20],rax
  429946:	jb     429968 <flatcc_json_printer_struct_field@@Base+0x1e8>
  429948:	mov    esi,0x20
  42994d:	mov    rdx,r14
  429950:	call   405090 <memset@plt>
  429955:	mov    rsi,r14
  429958:	add    rsi,QWORD PTR [rbx+0x28]
  42995c:	mov    QWORD PTR [rbx+0x28],rsi
  429960:	jmp    4297fc <flatcc_json_printer_struct_field@@Base+0x7c>
  429965:	nop    DWORD PTR [rax]
  429968:	mov    rsi,r14
  42996b:	mov    rdi,rbx
  42996e:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429973:	mov    rsi,QWORD PTR [rbx+0x28]
  429977:	jmp    4297fc <flatcc_json_printer_struct_field@@Base+0x7c>
  42997c:	nop    DWORD PTR [rax+0x0]

0000000000429980 <flatcc_json_printer_struct_as_root@@Base>:
  429980:	push   r12
  429982:	push   rbp
  429983:	mov    r12,r8
  429986:	push   rbx
  429987:	mov    rbp,rsi
  42998a:	mov    rbx,rdi
  42998d:	call   41fe10 <flatcc_json_parser_table_as_root@@Base+0x1800>
  429992:	test   eax,eax
  429994:	je     429a80 <flatcc_json_printer_struct_as_root@@Base+0x100>
  42999a:	mov    rax,QWORD PTR [rbx+0x28]
  42999e:	add    DWORD PTR [rbx+0x38],0x1
  4299a2:	mov    rdi,rbx
  4299a5:	lea    rdx,[rax+0x1]
  4299a9:	mov    QWORD PTR [rbx+0x28],rdx
  4299ad:	mov    BYTE PTR [rax],0x7b
  4299b0:	mov    esi,DWORD PTR [rbp+0x0]
  4299b3:	add    rsi,rbp
  4299b6:	call   r12
  4299b9:	cmp    BYTE PTR [rbx+0x31],0x0
  4299bd:	jne    429a20 <flatcc_json_printer_struct_as_root@@Base+0xa0>
  4299bf:	mov    rsi,QWORD PTR [rbx+0x28]
  4299c3:	lea    rax,[rsi+0x1]
  4299c7:	mov    QWORD PTR [rbx+0x28],rax
  4299cb:	mov    BYTE PTR [rsi],0x7d
  4299ce:	cmp    BYTE PTR [rbx+0x31],0x0
  4299d2:	jne    429a00 <flatcc_json_printer_struct_as_root@@Base+0x80>
  4299d4:	mov    esi,0x1
  4299d9:	mov    rdi,rbx
  4299dc:	call   QWORD PTR [rbx+0x48]
  4299df:	mov    eax,DWORD PTR [rbx+0x3c]
  4299e2:	test   eax,eax
  4299e4:	jne    429a80 <flatcc_json_printer_struct_as_root@@Base+0x100>
  4299ea:	mov    rax,QWORD PTR [rbx+0x28]
  4299ee:	sub    rax,QWORD PTR [rbx]
  4299f1:	add    eax,DWORD PTR [rbx+0x18]
  4299f4:	pop    rbx
  4299f5:	pop    rbp
  4299f6:	pop    r12
  4299f8:	ret    
  4299f9:	nop    DWORD PTR [rax+0x0]
  429a00:	mov    edx,DWORD PTR [rbx+0x38]
  429a03:	test   edx,edx
  429a05:	jne    4299d4 <flatcc_json_printer_struct_as_root@@Base+0x54>
  429a07:	mov    rax,QWORD PTR [rbx+0x28]
  429a0b:	lea    rdx,[rax+0x1]
  429a0f:	mov    QWORD PTR [rbx+0x28],rdx
  429a13:	mov    BYTE PTR [rax],0xa
  429a16:	jmp    4299d4 <flatcc_json_printer_struct_as_root@@Base+0x54>
  429a18:	nop    DWORD PTR [rax+rax*1+0x0]
  429a20:	mov    rax,QWORD PTR [rbx+0x28]
  429a24:	lea    rdx,[rax+0x1]
  429a28:	mov    QWORD PTR [rbx+0x28],rdx
  429a2c:	mov    BYTE PTR [rax],0xa
  429a2f:	mov    eax,DWORD PTR [rbx+0x38]
  429a32:	movzx  esi,BYTE PTR [rbx+0x31]
  429a36:	mov    rdi,QWORD PTR [rbx+0x28]
  429a3a:	lea    ebp,[rax-0x1]
  429a3d:	imul   esi,ebp
  429a40:	mov    DWORD PTR [rbx+0x38],ebp
  429a43:	movsxd rbp,esi
  429a46:	lea    rax,[rdi+rbp*1]
  429a4a:	cmp    QWORD PTR [rbx+0x20],rax
  429a4e:	jb     429a70 <flatcc_json_printer_struct_as_root@@Base+0xf0>
  429a50:	mov    esi,0x20
  429a55:	mov    rdx,rbp
  429a58:	call   405090 <memset@plt>
  429a5d:	mov    rsi,rbp
  429a60:	add    rsi,QWORD PTR [rbx+0x28]
  429a64:	jmp    4299c3 <flatcc_json_printer_struct_as_root@@Base+0x43>
  429a69:	nop    DWORD PTR [rax+0x0]
  429a70:	mov    rsi,rbp
  429a73:	mov    rdi,rbx
  429a76:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429a7b:	jmp    4299bf <flatcc_json_printer_struct_as_root@@Base+0x3f>
  429a80:	pop    rbx
  429a81:	mov    eax,0xffffffff
  429a86:	pop    rbp
  429a87:	pop    r12
  429a89:	ret    
  429a8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429a90 <flatcc_json_printer_table_as_root@@Base>:
  429a90:	push   r12
  429a92:	push   rbp
  429a93:	mov    r12,r8
  429a96:	push   rbx
  429a97:	mov    rbp,rsi
  429a9a:	mov    rbx,rdi
  429a9d:	sub    rsp,0x30
  429aa1:	mov    rax,QWORD PTR fs:0x28
  429aaa:	mov    QWORD PTR [rsp+0x28],rax
  429aaf:	xor    eax,eax
  429ab1:	call   41fe10 <flatcc_json_parser_table_as_root@@Base+0x1800>
  429ab6:	test   eax,eax
  429ab8:	je     429b80 <flatcc_json_printer_table_as_root@@Base+0xf0>
  429abe:	mov    eax,DWORD PTR [rbp+0x0]
  429ac1:	add    DWORD PTR [rbx+0x38],0x1
  429ac5:	mov    rsi,rsp
  429ac8:	mov    rdi,rbx
  429acb:	add    rbp,rax
  429ace:	mov    rax,QWORD PTR [rbx+0x28]
  429ad2:	lea    rdx,[rax+0x1]
  429ad6:	mov    QWORD PTR [rbx+0x28],rdx
  429ada:	mov    BYTE PTR [rax],0x7b
  429add:	mov    DWORD PTR [rsp+0x18],0x0
  429ae5:	mov    DWORD PTR [rsp+0x14],0x63
  429aed:	movsxd rax,DWORD PTR [rbp+0x0]
  429af1:	mov    QWORD PTR [rsp],rbp
  429af5:	sub    rbp,rax
  429af8:	movzx  eax,WORD PTR [rbp+0x0]
  429afc:	mov    QWORD PTR [rsp+0x8],rbp
  429b01:	mov    DWORD PTR [rsp+0x10],eax
  429b05:	call   r12
  429b08:	cmp    BYTE PTR [rbx+0x31],0x0
  429b0c:	jne    429b90 <flatcc_json_printer_table_as_root@@Base+0x100>
  429b12:	mov    rsi,QWORD PTR [rbx+0x28]
  429b16:	lea    rax,[rsi+0x1]
  429b1a:	mov    QWORD PTR [rbx+0x28],rax
  429b1e:	mov    BYTE PTR [rsi],0x7d
  429b21:	cmp    BYTE PTR [rbx+0x31],0x0
  429b25:	jne    429b60 <flatcc_json_printer_table_as_root@@Base+0xd0>
  429b27:	mov    esi,0x1
  429b2c:	mov    rdi,rbx
  429b2f:	call   QWORD PTR [rbx+0x48]
  429b32:	mov    eax,DWORD PTR [rbx+0x3c]
  429b35:	test   eax,eax
  429b37:	jne    429b80 <flatcc_json_printer_table_as_root@@Base+0xf0>
  429b39:	mov    rax,QWORD PTR [rbx+0x28]
  429b3d:	sub    rax,QWORD PTR [rbx]
  429b40:	add    eax,DWORD PTR [rbx+0x18]
  429b43:	mov    rcx,QWORD PTR [rsp+0x28]
  429b48:	xor    rcx,QWORD PTR fs:0x28
  429b51:	jne    429bf0 <flatcc_json_printer_table_as_root@@Base+0x160>
  429b57:	add    rsp,0x30
  429b5b:	pop    rbx
  429b5c:	pop    rbp
  429b5d:	pop    r12
  429b5f:	ret    
  429b60:	mov    edx,DWORD PTR [rbx+0x38]
  429b63:	test   edx,edx
  429b65:	jne    429b27 <flatcc_json_printer_table_as_root@@Base+0x97>
  429b67:	mov    rax,QWORD PTR [rbx+0x28]
  429b6b:	lea    rdx,[rax+0x1]
  429b6f:	mov    QWORD PTR [rbx+0x28],rdx
  429b73:	mov    BYTE PTR [rax],0xa
  429b76:	jmp    429b27 <flatcc_json_printer_table_as_root@@Base+0x97>
  429b78:	nop    DWORD PTR [rax+rax*1+0x0]
  429b80:	mov    eax,0xffffffff
  429b85:	jmp    429b43 <flatcc_json_printer_table_as_root@@Base+0xb3>
  429b87:	nop    WORD PTR [rax+rax*1+0x0]
  429b90:	mov    rax,QWORD PTR [rbx+0x28]
  429b94:	lea    rdx,[rax+0x1]
  429b98:	mov    QWORD PTR [rbx+0x28],rdx
  429b9c:	mov    BYTE PTR [rax],0xa
  429b9f:	mov    eax,DWORD PTR [rbx+0x38]
  429ba2:	movzx  esi,BYTE PTR [rbx+0x31]
  429ba6:	mov    rdi,QWORD PTR [rbx+0x28]
  429baa:	lea    ebp,[rax-0x1]
  429bad:	imul   esi,ebp
  429bb0:	mov    DWORD PTR [rbx+0x38],ebp
  429bb3:	movsxd rbp,esi
  429bb6:	lea    rax,[rdi+rbp*1]
  429bba:	cmp    QWORD PTR [rbx+0x20],rax
  429bbe:	jb     429be0 <flatcc_json_printer_table_as_root@@Base+0x150>
  429bc0:	mov    esi,0x20
  429bc5:	mov    rdx,rbp
  429bc8:	call   405090 <memset@plt>
  429bcd:	mov    rsi,rbp
  429bd0:	add    rsi,QWORD PTR [rbx+0x28]
  429bd4:	jmp    429b16 <flatcc_json_printer_table_as_root@@Base+0x86>
  429bd9:	nop    DWORD PTR [rax+0x0]
  429be0:	mov    rsi,rbp
  429be3:	mov    rdi,rbx
  429be6:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429beb:	jmp    429b12 <flatcc_json_printer_table_as_root@@Base+0x82>
  429bf0:	call   405070 <__stack_chk_fail@plt>
  429bf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000429c00 <flatcc_json_printer_struct_as_nested_root@@Base>:
  429c00:	lea    eax,[rdx+rdx*1+0x4]
  429c04:	cmp    eax,DWORD PTR [rsi+0x10]
  429c07:	jge    429cb9 <flatcc_json_printer_struct_as_nested_root@@Base+0xb9>
  429c0d:	push   r14
  429c0f:	push   r13
  429c11:	push   r12
  429c13:	push   rbp
  429c14:	push   rbx
  429c15:	mov    rdx,QWORD PTR [rsi+0x8]
  429c19:	movzx  ebx,WORD PTR [rdx+rax*1]
  429c1d:	test   bx,bx
  429c20:	je     429cb1 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  429c26:	add    rbx,QWORD PTR [rsi]
  429c29:	je     429cb1 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  429c2f:	mov    r14,rsi
  429c32:	mov    esi,DWORD PTR [rbx]
  429c34:	mov    r13,rcx
  429c37:	mov    rcx,r9
  429c3a:	mov    r12d,r8d
  429c3d:	mov    rbp,rdi
  429c40:	add    rbx,rsi
  429c43:	mov    edx,DWORD PTR [rbx]
  429c45:	mov    rsi,rbx
  429c48:	call   41fe10 <flatcc_json_parser_table_as_root@@Base+0x1800>
  429c4d:	test   eax,eax
  429c4f:	je     429cb1 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  429c51:	mov    eax,DWORD PTR [r14+0x18]
  429c55:	lea    edx,[rax+0x1]
  429c58:	test   eax,eax
  429c5a:	mov    DWORD PTR [r14+0x18],edx
  429c5e:	je     429c6f <flatcc_json_printer_struct_as_nested_root@@Base+0x6f>
  429c60:	mov    rax,QWORD PTR [rbp+0x28]
  429c64:	lea    rdx,[rax+0x1]
  429c68:	mov    QWORD PTR [rbp+0x28],rdx
  429c6c:	mov    BYTE PTR [rax],0x2c
  429c6f:	movsxd rdx,r12d
  429c72:	mov    rsi,r13
  429c75:	mov    rdi,rbp
  429c78:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  429c7d:	mov    rax,QWORD PTR [rbp+0x28]
  429c81:	add    DWORD PTR [rbp+0x38],0x1
  429c85:	mov    rdi,rbp
  429c88:	lea    rdx,[rax+0x1]
  429c8c:	mov    QWORD PTR [rbp+0x28],rdx
  429c90:	mov    BYTE PTR [rax],0x7b
  429c93:	mov    esi,DWORD PTR [rbx]
  429c95:	add    rsi,rbx
  429c98:	call   QWORD PTR [rsp+0x30]
  429c9c:	cmp    BYTE PTR [rbp+0x31],0x0
  429ca0:	jne    429cc0 <flatcc_json_printer_struct_as_nested_root@@Base+0xc0>
  429ca2:	mov    rsi,QWORD PTR [rbp+0x28]
  429ca6:	lea    rax,[rsi+0x1]
  429caa:	mov    QWORD PTR [rbp+0x28],rax
  429cae:	mov    BYTE PTR [rsi],0x7d
  429cb1:	pop    rbx
  429cb2:	pop    rbp
  429cb3:	pop    r12
  429cb5:	pop    r13
  429cb7:	pop    r14
  429cb9:	repz ret 
  429cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  429cc0:	mov    rax,QWORD PTR [rbp+0x28]
  429cc4:	lea    rdx,[rax+0x1]
  429cc8:	mov    QWORD PTR [rbp+0x28],rdx
  429ccc:	mov    BYTE PTR [rax],0xa
  429ccf:	mov    eax,DWORD PTR [rbp+0x38]
  429cd2:	movzx  esi,BYTE PTR [rbp+0x31]
  429cd6:	mov    rdi,QWORD PTR [rbp+0x28]
  429cda:	lea    ebx,[rax-0x1]
  429cdd:	imul   esi,ebx
  429ce0:	mov    DWORD PTR [rbp+0x38],ebx
  429ce3:	movsxd rbx,esi
  429ce6:	lea    rax,[rdi+rbx*1]
  429cea:	cmp    QWORD PTR [rbp+0x20],rax
  429cee:	jb     429d10 <flatcc_json_printer_struct_as_nested_root@@Base+0x110>
  429cf0:	mov    rdx,rbx
  429cf3:	mov    esi,0x20
  429cf8:	call   405090 <memset@plt>
  429cfd:	add    rbx,QWORD PTR [rbp+0x28]
  429d01:	mov    rsi,rbx
  429d04:	jmp    429ca6 <flatcc_json_printer_struct_as_nested_root@@Base+0xa6>
  429d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d10:	mov    rsi,rbx
  429d13:	mov    rdi,rbp
  429d16:	call   41f280 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429d1b:	jmp    429ca2 <flatcc_json_printer_struct_as_nested_root@@Base+0xa2>
  429d1d:	nop    DWORD PTR [rax]

0000000000429d20 <flatcc_json_printer_table_as_nested_root@@Base>:
  429d20:	push   r15
  429d22:	push   r14
  429d24:	push   r13
  429d26:	push   r12
  429d28:	push   rbp
  429d29:	push   rbx
  429d2a:	sub    rsp,0x48
  429d2e:	mov    rax,QWORD PTR fs:0x28
  429d37:	mov    QWORD PTR [rsp+0x38],rax
  429d3c:	xor    eax,eax
  429d3e:	lea    eax,[rdx+rdx*1+0x4]
  429d42:	cmp    eax,DWORD PTR [rsi+0x10]
  429d45:	mov    DWORD PTR [rsp+0xc],r8d
  429d4a:	mov    r15,QWORD PTR [rsp+0x80]
  429d52:	jge    429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429d58:	mov    rdx,QWORD PTR [rsi+0x8]
  429d5c:	mov    r12,rsi
  429d5f:	movzx  ebx,WORD PTR [rdx+rax*1]
  429d63:	test   bx,bx
  429d66:	je     429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429d68:	add    rbx,QWORD PTR [rsi]
  429d6b:	je     429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429d6d:	mov    eax,DWORD PTR [rbx]
  429d6f:	mov    r14,rcx
  429d72:	mov    rcx,r9
  429d75:	mov    rbp,rdi
  429d78:	add    rbx,rax
  429d7b:	mov    edx,DWORD PTR [rbx]
  429d7d:	lea    r13,[rbx+0x4]
  429d81:	mov    rsi,r13
  429d84:	call   41fe10 <flatcc_json_parser_table_as_root@@Base+0x1800>
  429d89:	test   eax,eax
  429d8b:	je     429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429d8d:	mov    eax,DWORD PTR [r12+0x18]
  429d92:	mov    r8d,DWORD PTR [rsp+0xc]
  429d97:	lea    edx,[rax+0x1]
  429d9a:	test   eax,eax
  429d9c:	mov    DWORD PTR [r12+0x18],edx
  429da1:	je     429db2 <flatcc_json_printer_table_as_nested_root@@Base+0x92>
  429da3:	mov    rax,QWORD PTR [rbp+0x28]
  429da7:	lea    rdx,[rax+0x1]
  429dab:	mov    QWORD PTR [rbp+0x28],rdx
  429daf:	mov    BYTE PTR [rax],0x2c
  429db2:	movsxd rdx,r8d
  429db5:	mov    rsi,r14
  429db8:	mov    rdi,rbp
  429dbb:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  429dc0:	mov    eax,DWORD PTR [r12+0x14]
  429dc5:	sub    eax,0x1
  429dc8:	jne    429e08 <flatcc_json_printer_table_as_nested_root@@Base+0xe8>
  429dca:	mov    eax,DWORD PTR [rbp+0x3c]
  429dcd:	test   eax,eax
  429dcf:	jne    429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429dd1:	mov    DWORD PTR [rbp+0x3c],0x2
  429dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  429de0:	mov    rax,QWORD PTR [rsp+0x38]
  429de5:	xor    rax,QWORD PTR fs:0x28
  429dee:	jne    429e8d <flatcc_json_printer_table_as_nested_root@@Base+0x16d>
  429df4:	add    rsp,0x48
  429df8:	pop    rbx
  429df9:	pop    rbp
  429dfa:	pop    r12
  429dfc:	pop    r13
  429dfe:	pop    r14
  429e00:	pop    r15
  429e02:	ret    
  429e03:	nop    DWORD PTR [rax+rax*1+0x0]
  429e08:	mov    edx,DWORD PTR [rbx+0x4]
  429e0b:	add    DWORD PTR [rbp+0x38],0x1
  429e0f:	lea    rsi,[rsp+0x10]
  429e14:	mov    rdi,rbp
  429e17:	add    r13,rdx
  429e1a:	mov    rdx,QWORD PTR [rbp+0x28]
  429e1e:	lea    rcx,[rdx+0x1]
  429e22:	mov    QWORD PTR [rbp+0x28],rcx
  429e26:	mov    BYTE PTR [rdx],0x7b
  429e29:	mov    DWORD PTR [rsp+0x28],0x0
  429e31:	mov    DWORD PTR [rsp+0x24],eax
  429e35:	movsxd rax,DWORD PTR [r13+0x0]
  429e39:	mov    QWORD PTR [rsp+0x10],r13
  429e3e:	sub    r13,rax
  429e41:	movzx  eax,WORD PTR [r13+0x0]
  429e46:	mov    QWORD PTR [rsp+0x18],r13
  429e4b:	mov    DWORD PTR [rsp+0x20],eax
  429e4f:	call   r15
  429e52:	cmp    BYTE PTR [rbp+0x31],0x0
  429e56:	jne    429e70 <flatcc_json_printer_table_as_nested_root@@Base+0x150>
  429e58:	mov    rax,QWORD PTR [rbp+0x28]
  429e5c:	lea    rdx,[rax+0x1]
  429e60:	mov    QWORD PTR [rbp+0x28],rdx
  429e64:	mov    BYTE PTR [rax],0x7d
  429e67:	jmp    429de0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  429e6c:	nop    DWORD PTR [rax+0x0]
  429e70:	mov    rax,QWORD PTR [rbp+0x28]
  429e74:	mov    rdi,rbp
  429e77:	lea    rdx,[rax+0x1]
  429e7b:	mov    QWORD PTR [rbp+0x28],rdx
  429e7f:	mov    BYTE PTR [rax],0xa
  429e82:	sub    DWORD PTR [rbp+0x38],0x1
  429e86:	call   41f300 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  429e8b:	jmp    429e58 <flatcc_json_printer_table_as_nested_root@@Base+0x138>
  429e8d:	call   405070 <__stack_chk_fail@plt>
  429e92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429e9d:	nop    DWORD PTR [rax]

0000000000429ea0 <flatcc_json_printer_init@@Base>:
  429ea0:	push   rbx
  429ea1:	mov    QWORD PTR [rdi],0x0
  429ea8:	mov    rbx,rdi
  429eab:	mov    QWORD PTR [rdi+0x48],0x0
  429eb3:	add    rdi,0x8
  429eb7:	mov    rcx,rbx
  429eba:	and    rdi,0xfffffffffffffff8
  429ebe:	xor    eax,eax
  429ec0:	sub    rcx,rdi
  429ec3:	add    ecx,0x50
  429ec6:	shr    ecx,0x3
  429ec9:	test   rsi,rsi
  429ecc:	rep stos QWORD PTR es:[rdi],rax
  429ecf:	je     429f20 <flatcc_json_printer_init@@Base+0x80>
  429ed1:	lea    rax,[rip+0xffffffffffff5478]        # 41f350 <flatcc_json_parser_table_as_root@@Base+0xd40>
  429ed8:	mov    QWORD PTR [rbx+0x40],rsi
  429edc:	mov    edi,0x4040
  429ee1:	mov    QWORD PTR [rbx+0x48],rax
  429ee5:	call   4050f0 <malloc@plt>
  429eea:	test   rax,rax
  429eed:	mov    QWORD PTR [rbx],rax
  429ef0:	je     429f2c <flatcc_json_printer_init@@Base+0x8c>
  429ef2:	mov    QWORD PTR [rbx+0x28],rax
  429ef6:	add    rax,0x4000
  429efc:	mov    BYTE PTR [rbx+0x30],0x1
  429f00:	mov    QWORD PTR [rbx+0x20],rax
  429f04:	mov    QWORD PTR [rbx+0x8],0x4040
  429f0c:	xor    eax,eax
  429f0e:	mov    QWORD PTR [rbx+0x10],0x4000
  429f16:	pop    rbx
  429f17:	ret    
  429f18:	nop    DWORD PTR [rax+rax*1+0x0]
  429f20:	mov    rax,QWORD PTR [rip+0xf0a9]        # 438fd0 <stdout@GLIBC_2.2.5>
  429f27:	mov    rsi,QWORD PTR [rax]
  429f2a:	jmp    429ed1 <flatcc_json_printer_init@@Base+0x31>
  429f2c:	mov    eax,0xffffffff
  429f31:	pop    rbx
  429f32:	ret    
  429f33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429f3e:	xchg   ax,ax

0000000000429f40 <flatcc_json_printer_init_buffer@@Base>:
  429f40:	cmp    rdx,0x3f
  429f44:	jbe    429f8a <flatcc_json_printer_init_buffer@@Base+0x4a>
  429f46:	mov    r8,rdi
  429f49:	lea    rdi,[rdi+0x8]
  429f4d:	xor    eax,eax
  429f4f:	mov    rcx,r8
  429f52:	and    rdi,0xfffffffffffffff8
  429f56:	sub    rcx,rdi
  429f59:	add    ecx,0x50
  429f5c:	shr    ecx,0x3
  429f5f:	rep stos QWORD PTR es:[rdi],rax
  429f62:	mov    QWORD PTR [r8+0x8],rdx
  429f66:	lea    rax,[rip+0xffffffffffff5233]        # 41f1a0 <flatcc_json_parser_table_as_root@@Base+0xb90>
  429f6d:	sub    rdx,0x40
  429f71:	mov    QWORD PTR [r8+0x10],rdx
  429f75:	add    rdx,rsi
  429f78:	mov    QWORD PTR [r8],rsi
  429f7b:	mov    QWORD PTR [r8+0x48],rax
  429f7f:	mov    QWORD PTR [r8+0x28],rsi
  429f83:	xor    eax,eax
  429f85:	mov    QWORD PTR [r8+0x20],rdx
  429f89:	ret    
  429f8a:	lea    rcx,[rip+0x6caf]        # 430c40 <flatcc_builder_padding_base@@Base+0x1e20>
  429f91:	lea    rsi,[rip+0x6ac8]        # 430a60 <flatcc_builder_padding_base@@Base+0x1c40>
  429f98:	lea    rdi,[rip+0x6bd9]        # 430b78 <flatcc_builder_padding_base@@Base+0x1d58>
  429f9f:	sub    rsp,0x8
  429fa3:	mov    edx,0x48d
  429fa8:	call   405080 <__assert_fail@plt>
  429fad:	nop    DWORD PTR [rax]

0000000000429fb0 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  429fb0:	test   rsi,rsi
  429fb3:	push   r12
  429fb5:	push   rbp
  429fb6:	push   rbx
  429fb7:	mov    rbx,rdi
  429fba:	je     42a038 <flatcc_json_printer_init_dynamic_buffer@@Base+0x88>
  429fbc:	cmp    rsi,0x40
  429fc0:	mov    ebp,0x40
  429fc5:	cmovae rbp,rsi
  429fc9:	lea    r12,[rbp-0x40]
  429fcd:	lea    rdi,[rbx+0x8]
  429fd1:	mov    rcx,rbx
  429fd4:	xor    eax,eax
  429fd6:	mov    QWORD PTR [rbx],0x0
  429fdd:	mov    QWORD PTR [rbx+0x48],0x0
  429fe5:	and    rdi,0xfffffffffffffff8
  429fe9:	sub    rcx,rdi
  429fec:	add    ecx,0x50
  429fef:	shr    ecx,0x3
  429ff2:	rep stos QWORD PTR es:[rdi],rax
  429ff5:	mov    rdi,rbp
  429ff8:	call   4050f0 <malloc@plt>
  429ffd:	mov    QWORD PTR [rbx+0x10],r12
  42a001:	mov    rdx,rax
  42a004:	add    r12,rax
  42a007:	mov    QWORD PTR [rbx],rax
  42a00a:	mov    QWORD PTR [rbx+0x28],rax
  42a00e:	lea    rax,[rip+0xffffffffffff53db]        # 41f3f0 <flatcc_json_parser_table_as_root@@Base+0xde0>
  42a015:	mov    BYTE PTR [rbx+0x30],0x1
  42a019:	mov    QWORD PTR [rbx+0x8],rbp
  42a01d:	mov    QWORD PTR [rbx+0x48],rax
  42a021:	xor    eax,eax
  42a023:	test   rdx,rdx
  42a026:	mov    QWORD PTR [rbx+0x20],r12
  42a02a:	je     42a048 <flatcc_json_printer_init_dynamic_buffer@@Base+0x98>
  42a02c:	pop    rbx
  42a02d:	pop    rbp
  42a02e:	pop    r12
  42a030:	ret    
  42a031:	nop    DWORD PTR [rax+0x0]
  42a038:	mov    r12d,0xfc0
  42a03e:	mov    ebp,0x1000
  42a043:	jmp    429fcd <flatcc_json_printer_init_dynamic_buffer@@Base+0x1d>
  42a045:	nop    DWORD PTR [rax]
  42a048:	mov    edx,DWORD PTR [rbx+0x3c]
  42a04b:	mov    eax,0xffffffff
  42a050:	test   edx,edx
  42a052:	jne    42a02c <flatcc_json_printer_init_dynamic_buffer@@Base+0x7c>
  42a054:	mov    DWORD PTR [rbx+0x3c],0x3
  42a05b:	pop    rbx
  42a05c:	pop    rbp
  42a05d:	pop    r12
  42a05f:	ret    

000000000042a060 <flatcc_json_printer_get_buffer@@Base>:
  42a060:	push   rbp
  42a061:	push   rbx
  42a062:	mov    rbp,rsi
  42a065:	mov    rbx,rdi
  42a068:	xor    esi,esi
  42a06a:	sub    rsp,0x8
  42a06e:	call   QWORD PTR [rdi+0x48]
  42a071:	test   rbp,rbp
  42a074:	mov    rax,QWORD PTR [rbx]
  42a077:	je     42a084 <flatcc_json_printer_get_buffer@@Base+0x24>
  42a079:	mov    rdx,QWORD PTR [rbx+0x28]
  42a07d:	sub    rdx,rax
  42a080:	mov    QWORD PTR [rbp+0x0],rdx
  42a084:	add    rsp,0x8
  42a088:	pop    rbx
  42a089:	pop    rbp
  42a08a:	ret    
  42a08b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a090 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  42a090:	push   rbx
  42a091:	mov    rbx,rdi
  42a094:	call   42a060 <flatcc_json_printer_get_buffer@@Base>
  42a099:	lea    rdi,[rbx+0x8]
  42a09d:	mov    QWORD PTR [rbx],0x0
  42a0a4:	mov    QWORD PTR [rbx+0x48],0x0
  42a0ac:	mov    rdx,rax
  42a0af:	xor    eax,eax
  42a0b1:	and    rdi,0xfffffffffffffff8
  42a0b5:	sub    rbx,rdi
  42a0b8:	lea    ecx,[rbx+0x50]
  42a0bb:	shr    ecx,0x3
  42a0be:	rep stos QWORD PTR es:[rdi],rax
  42a0c1:	mov    rax,rdx
  42a0c4:	pop    rbx
  42a0c5:	ret    
  42a0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a0d0 <flatcc_json_printer_clear@@Base>:
  42a0d0:	push   rbx
  42a0d1:	cmp    BYTE PTR [rdi+0x30],0x0
  42a0d5:	mov    rbx,rdi
  42a0d8:	je     42a0e7 <flatcc_json_printer_clear@@Base+0x17>
  42a0da:	mov    rdi,QWORD PTR [rdi]
  42a0dd:	test   rdi,rdi
  42a0e0:	je     42a0e7 <flatcc_json_printer_clear@@Base+0x17>
  42a0e2:	call   405030 <free@plt>
  42a0e7:	lea    rdi,[rbx+0x8]
  42a0eb:	mov    QWORD PTR [rbx],0x0
  42a0f2:	mov    QWORD PTR [rbx+0x48],0x0
  42a0fa:	xor    eax,eax
  42a0fc:	and    rdi,0xfffffffffffffff8
  42a100:	sub    rbx,rdi
  42a103:	lea    ecx,[rbx+0x50]
  42a106:	shr    ecx,0x3
  42a109:	rep stos QWORD PTR es:[rdi],rax
  42a10c:	pop    rbx
  42a10d:	ret    
  42a10e:	xchg   ax,ax

000000000042a110 <__libc_csu_init@@Base>:
  42a110:	endbr64 
  42a114:	push   r15
  42a116:	lea    r15,[rip+0xec6b]        # 438d88 <flatcc_builder_padding_base@@Base+0x9f68>
  42a11d:	push   r14
  42a11f:	mov    r14,rdx
  42a122:	push   r13
  42a124:	mov    r13,rsi
  42a127:	push   r12
  42a129:	mov    r12d,edi
  42a12c:	push   rbp
  42a12d:	lea    rbp,[rip+0xec5c]        # 438d90 <flatcc_builder_padding_base@@Base+0x9f70>
  42a134:	push   rbx
  42a135:	sub    rbp,r15
  42a138:	sub    rsp,0x8
  42a13c:	call   405000 <free@plt-0x30>
  42a141:	sar    rbp,0x3
  42a145:	je     42a166 <__libc_csu_init@@Base+0x56>
  42a147:	xor    ebx,ebx
  42a149:	nop    DWORD PTR [rax+0x0]
  42a150:	mov    rdx,r14
  42a153:	mov    rsi,r13
  42a156:	mov    edi,r12d
  42a159:	call   QWORD PTR [r15+rbx*8]
  42a15d:	add    rbx,0x1
  42a161:	cmp    rbp,rbx
  42a164:	jne    42a150 <__libc_csu_init@@Base+0x40>
  42a166:	add    rsp,0x8
  42a16a:	pop    rbx
  42a16b:	pop    rbp
  42a16c:	pop    r12
  42a16e:	pop    r13
  42a170:	pop    r14
  42a172:	pop    r15
  42a174:	ret    
  42a175:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a180 <__libc_csu_fini@@Base>:
  42a180:	endbr64 
  42a184:	ret    

Disassembly of section .fini:

000000000042a188 <.fini>:
  42a188:	endbr64 
  42a18c:	sub    rsp,0x8
  42a190:	add    rsp,0x8
  42a194:	ret    
