
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x39fe1]        # 43fff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <free@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x39fe2]        # 440008 <flatcc_builder_padding_base@@Base+0xa5e8>
  406026:	jmp    QWORD PTR [rip+0x39fe4]        # 440010 <flatcc_builder_padding_base@@Base+0xa5f0>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <free@plt>:
  406030:	jmp    QWORD PTR [rip+0x39fe2]        # 440018 <free@GLIBC_2.2.5>
  406036:	push   0x0
  40603b:	jmp    406020 <free@plt-0x10>

0000000000406040 <strncpy@plt>:
  406040:	jmp    QWORD PTR [rip+0x39fda]        # 440020 <strncpy@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <free@plt-0x10>

0000000000406050 <strtod@plt>:
  406050:	jmp    QWORD PTR [rip+0x39fd2]        # 440028 <strtod@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <free@plt-0x10>

0000000000406060 <strlen@plt>:
  406060:	jmp    QWORD PTR [rip+0x39fca]        # 440030 <strlen@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <free@plt-0x10>

0000000000406070 <__assert_fail@plt>:
  406070:	jmp    QWORD PTR [rip+0x39fc2]        # 440038 <__assert_fail@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <free@plt-0x10>

0000000000406080 <memset@plt>:
  406080:	jmp    QWORD PTR [rip+0x39fba]        # 440040 <memset@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <free@plt-0x10>

0000000000406090 <fputc@plt>:
  406090:	jmp    QWORD PTR [rip+0x39fb2]        # 440048 <fputc@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <free@plt-0x10>

00000000004060a0 <memchr@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x39faa]        # 440050 <memchr@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <free@plt-0x10>

00000000004060b0 <strcmp@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x39fa2]        # 440058 <strcmp@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <free@plt-0x10>

00000000004060c0 <fprintf@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x39f9a]        # 440060 <fprintf@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <free@plt-0x10>

00000000004060d0 <memcpy@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x39f92]        # 440068 <memcpy@GLIBC_2.14>
  4060d6:	push   0xa
  4060db:	jmp    406020 <free@plt-0x10>

00000000004060e0 <malloc@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x39f8a]        # 440070 <malloc@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <free@plt-0x10>

00000000004060f0 <bcmp@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x39f82]        # 440078 <bcmp@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <free@plt-0x10>

0000000000406100 <realloc@plt>:
  406100:	jmp    QWORD PTR [rip+0x39f7a]        # 440080 <realloc@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <free@plt-0x10>

0000000000406110 <memmove@plt>:
  406110:	jmp    QWORD PTR [rip+0x39f72]        # 440088 <memmove@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <free@plt-0x10>

0000000000406120 <sprintf@plt>:
  406120:	jmp    QWORD PTR [rip+0x39f6a]        # 440090 <sprintf@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <free@plt-0x10>

0000000000406130 <fwrite@plt>:
  406130:	jmp    QWORD PTR [rip+0x39f62]        # 440098 <fwrite@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <free@plt-0x10>

0000000000406140 <posix_memalign@plt>:
  406140:	jmp    QWORD PTR [rip+0x39f5a]        # 4400a0 <posix_memalign@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <free@plt-0x10>

Disassembly of section .text:

0000000000406150 <_start@@Base>:
  406150:	endbr64 
  406154:	xor    ebp,ebp
  406156:	mov    r9,rdx
  406159:	pop    rsi
  40615a:	mov    rdx,rsp
  40615d:	and    rsp,0xfffffffffffffff0
  406161:	push   rax
  406162:	push   rsp
  406163:	mov    r8,0x4317a0
  40616a:	mov    rcx,0x431730
  406171:	mov    rdi,0x406e20
  406178:	call   QWORD PTR [rip+0x39e6a]        # 43ffe8 <__libc_start_main@GLIBC_2.2.5>
  40617e:	hlt    
  40617f:	nop
  406180:	endbr64 
  406184:	ret    
  406185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618f:	nop
  406190:	mov    eax,0x4407b8
  406195:	cmp    rax,0x4407b8
  40619b:	je     4061b0 <_start@@Base+0x60>
  40619d:	mov    eax,0x0
  4061a2:	test   rax,rax
  4061a5:	je     4061b0 <_start@@Base+0x60>
  4061a7:	mov    edi,0x4407b8
  4061ac:	jmp    rax
  4061ae:	xchg   ax,ax
  4061b0:	ret    
  4061b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061bc:	nop    DWORD PTR [rax+0x0]
  4061c0:	mov    esi,0x4407b8
  4061c5:	sub    rsi,0x4407b8
  4061cc:	mov    rax,rsi
  4061cf:	shr    rsi,0x3f
  4061d3:	sar    rax,0x3
  4061d7:	add    rsi,rax
  4061da:	sar    rsi,1
  4061dd:	je     4061f0 <_start@@Base+0xa0>
  4061df:	mov    eax,0x0
  4061e4:	test   rax,rax
  4061e7:	je     4061f0 <_start@@Base+0xa0>
  4061e9:	mov    edi,0x4407b8
  4061ee:	jmp    rax
  4061f0:	ret    
  4061f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061fc:	nop    DWORD PTR [rax+0x0]
  406200:	endbr64 
  406204:	cmp    BYTE PTR [rip+0x3a5ad],0x0        # 4407b8 <__bss_start@@Base>
  40620b:	jne    406220 <_start@@Base+0xd0>
  40620d:	push   rbp
  40620e:	mov    rbp,rsp
  406211:	call   406190 <_start@@Base+0x40>
  406216:	mov    BYTE PTR [rip+0x3a59b],0x1        # 4407b8 <__bss_start@@Base>
  40621d:	pop    rbp
  40621e:	ret    
  40621f:	nop
  406220:	ret    
  406221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40622c:	nop    DWORD PTR [rax+0x0]
  406230:	endbr64 
  406234:	jmp    4061c0 <_start@@Base+0x70>
  406236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406240 <test_json@@Base>:
  406240:	push   rbp
  406241:	push   r15
  406243:	push   r14
  406245:	push   r13
  406247:	push   r12
  406249:	push   rbx
  40624a:	sub    rsp,0x268
  406251:	mov    ebp,r9d
  406254:	mov    r13d,r8d
  406257:	mov    r12d,ecx
  40625a:	mov    r15,rdx
  40625d:	mov    r14,rsi
  406260:	mov    rbx,rdi
  406263:	lea    rdi,[rsp+0xe0]
  40626b:	call   41bc90 <flatcc_builder_init@@Base>
  406270:	lea    rdi,[rsp+0x28]
  406275:	xor    esi,esi
  406277:	call   431410 <flatcc_json_printer_init_dynamic_buffer@@Base>
  40627c:	mov    eax,ebp
  40627e:	and    al,0x1
  406280:	mov    BYTE PTR [rsp+0x5a],al
  406284:	mov    eax,ebp
  406286:	shr    al,1
  406288:	and    al,0x1
  40628a:	mov    BYTE PTR [rsp+0x5b],al
  40628e:	mov    eax,ebp
  406290:	shr    al,0x2
  406293:	and    al,0x1
  406295:	mov    BYTE PTR [rsp+0x5c],al
  406299:	mov    eax,ebp
  40629b:	shr    al,0x3
  40629e:	and    al,0x1
  4062a0:	mov    BYTE PTR [rsp+0x5d],al
  4062a4:	test   bpl,0x10
  4062a8:	je     4062af <test_json@@Base+0x6f>
  4062aa:	mov    BYTE PTR [rsp+0x59],0x2
  4062af:	test   bpl,0x20
  4062b3:	je     4062c1 <test_json@@Base+0x81>
  4062b5:	mov    WORD PTR [rsp+0x59],0x102
  4062bc:	mov    BYTE PTR [rsp+0x5b],0x0
  4062c1:	mov    ebp,DWORD PTR [rsp+0x2a0]
  4062c8:	mov    rdi,r14
  4062cb:	call   406060 <strlen@plt>
  4062d0:	mov    r9,QWORD PTR [rbx]
  4062d3:	mov    rcx,QWORD PTR [rbx+0x8]
  4062d7:	mov    QWORD PTR [rsp],rcx
  4062db:	lea    rdi,[rsp+0xe0]
  4062e3:	lea    rsi,[rsp+0xa0]
  4062eb:	mov    rdx,r14
  4062ee:	mov    rcx,rax
  4062f1:	mov    r8d,r13d
  4062f4:	call   425a70 <flatcc_json_parser_table_as_root@@Base>
  4062f9:	cmp    eax,r12d
  4062fc:	jne    4063b6 <test_json@@Base+0x176>
  406302:	xor    r14d,r14d
  406305:	test   r12d,r12d
  406308:	je     40630e <test_json@@Base+0xce>
  40630a:	xor    ebp,ebp
  40630c:	jmp    406382 <test_json@@Base+0x142>
  40630e:	mov    r13d,ebp
  406311:	lea    rdi,[rsp+0xe0]
  406319:	lea    rsi,[rsp+0x10]
  40631e:	call   4203b0 <flatcc_builder_finalize_aligned_buffer@@Base>
  406323:	mov    rbp,rax
  406326:	mov    rsi,QWORD PTR [rsp+0x10]
  40632b:	mov    rdx,QWORD PTR [rbx]
  40632e:	mov    rcx,QWORD PTR [rbx+0x18]
  406332:	mov    rdi,rax
  406335:	call   421730 <flatcc_verify_table_as_root@@Base>
  40633a:	test   eax,eax
  40633c:	jne    406479 <test_json@@Base+0x239>
  406342:	mov    rdx,QWORD PTR [rsp+0x10]
  406347:	mov    rcx,QWORD PTR [rbx]
  40634a:	mov    r8,QWORD PTR [rbx+0x10]
  40634e:	lea    rbx,[rsp+0x28]
  406353:	mov    rdi,rbx
  406356:	mov    rsi,rbp
  406359:	call   430c20 <flatcc_json_printer_table_as_root@@Base>
  40635e:	lea    rsi,[rsp+0x78]
  406363:	mov    rdi,rbx
  406366:	call   431530 <flatcc_json_printer_get_buffer@@Base>
  40636b:	mov    rbx,rax
  40636e:	test   rax,rax
  406371:	je     4063ec <test_json@@Base+0x1ac>
  406373:	mov    rdi,r15
  406376:	mov    rsi,rbx
  406379:	call   4060b0 <strcmp@plt>
  40637e:	test   eax,eax
  406380:	jne    4063ec <test_json@@Base+0x1ac>
  406382:	mov    rdi,rbp
  406385:	call   4204e0 <flatcc_builder_aligned_free@@Base>
  40638a:	lea    rdi,[rsp+0xe0]
  406392:	call   41c050 <flatcc_builder_clear@@Base>
  406397:	lea    rdi,[rsp+0x28]
  40639c:	call   4315b0 <flatcc_json_printer_clear@@Base>
  4063a1:	mov    eax,r14d
  4063a4:	add    rsp,0x268
  4063ab:	pop    rbx
  4063ac:	pop    r12
  4063ae:	pop    r13
  4063b0:	pop    r14
  4063b2:	pop    r15
  4063b4:	pop    rbp
  4063b5:	ret    
  4063b6:	test   r12d,r12d
  4063b9:	je     40644d <test_json@@Base+0x20d>
  4063bf:	mov    r15d,ebp
  4063c2:	mov    rbp,QWORD PTR [rip+0x39c2f]        # 43fff8 <stderr@GLIBC_2.2.5>
  4063c9:	mov    rbx,QWORD PTR [rbp+0x0]
  4063cd:	test   eax,eax
  4063cf:	jne    406504 <test_json@@Base+0x2c4>
  4063d5:	mov    edi,r12d
  4063d8:	call   422670 <flatcc_json_parser_error_string@@Base>
  4063dd:	lea    rsi,[rip+0x2c722]        # 432b06 <_IO_stdin_used@@Base+0xb06>
  4063e4:	mov    rdi,rbx
  4063e7:	mov    edx,r15d
  4063ea:	jmp    40646a <test_json@@Base+0x22a>
  4063ec:	mov    r12,QWORD PTR [rip+0x39c05]        # 43fff8 <stderr@GLIBC_2.2.5>
  4063f3:	mov    rdi,QWORD PTR [r12]
  4063f7:	lea    rsi,[rip+0x2c7f8]        # 432bf6 <_IO_stdin_used@@Base+0xbf6>
  4063fe:	mov    edx,r13d
  406401:	xor    eax,eax
  406403:	call   4060c0 <fprintf@plt>
  406408:	mov    rdi,QWORD PTR [r12]
  40640c:	lea    r14,[rip+0x2f22c]        # 43563f <_IO_stdin_used@@Base+0x363f>
  406413:	mov    rsi,r14
  406416:	mov    rdx,rbx
  406419:	xor    eax,eax
  40641b:	call   4060c0 <fprintf@plt>
  406420:	mov    rcx,QWORD PTR [r12]
  406424:	lea    rdi,[rip+0x2c800]        # 432c2b <_IO_stdin_used@@Base+0xc2b>
  40642b:	mov    esi,0xa
  406430:	mov    edx,0x1
  406435:	call   406130 <fwrite@plt>
  40643a:	mov    rdi,QWORD PTR [r12]
  40643e:	mov    rsi,r14
  406441:	mov    rdx,r15
  406444:	xor    eax,eax
  406446:	call   4060c0 <fprintf@plt>
  40644b:	jmp    4064a8 <test_json@@Base+0x268>
  40644d:	mov    rcx,QWORD PTR [rip+0x39ba4]        # 43fff8 <stderr@GLIBC_2.2.5>
  406454:	mov    rbx,QWORD PTR [rcx]
  406457:	mov    edi,eax
  406459:	call   422670 <flatcc_json_parser_error_string@@Base>
  40645e:	lea    rsi,[rip+0x2c6e1]        # 432b46 <_IO_stdin_used@@Base+0xb46>
  406465:	mov    rdi,rbx
  406468:	mov    edx,ebp
  40646a:	mov    rcx,rax
  40646d:	xor    eax,eax
  40646f:	call   4060c0 <fprintf@plt>
  406474:	jmp    406542 <test_json@@Base+0x302>
  406479:	mov    rcx,QWORD PTR [rip+0x39b78]        # 43fff8 <stderr@GLIBC_2.2.5>
  406480:	mov    rbx,QWORD PTR [rcx]
  406483:	mov    edi,eax
  406485:	call   420c00 <flatcc_verify_error_string@@Base>
  40648a:	lea    rsi,[rip+0x2c6d9]        # 432b6a <_IO_stdin_used@@Base+0xb6a>
  406491:	lea    rdx,[rip+0x2c6f9]        # 432b91 <_IO_stdin_used@@Base+0xb91>
  406498:	mov    rdi,rbx
  40649b:	mov    ecx,r13d
  40649e:	mov    r8,rax
  4064a1:	xor    eax,eax
  4064a3:	call   4060c0 <fprintf@plt>
  4064a8:	mov    r14d,0xffffffff
  4064ae:	test   rbp,rbp
  4064b1:	je     40630a <test_json@@Base+0xca>
  4064b7:	mov    r15,QWORD PTR [rsp+0x10]
  4064bc:	mov    rax,QWORD PTR [rip+0x39b35]        # 43fff8 <stderr@GLIBC_2.2.5>
  4064c3:	mov    rbx,QWORD PTR [rax]
  4064c6:	lea    rsi,[rip+0x2f16b]        # 435638 <_IO_stdin_used@@Base+0x3638>
  4064cd:	lea    rdx,[rip+0x2c762]        # 432c36 <_IO_stdin_used@@Base+0xc36>
  4064d4:	mov    rdi,rbx
  4064d7:	xor    eax,eax
  4064d9:	call   4060c0 <fprintf@plt>
  4064de:	test   r15d,r15d
  4064e1:	je     406674 <test_json@@Base+0x434>
  4064e7:	mov    QWORD PTR [rsp+0x18],r15
  4064ec:	mov    eax,r15d
  4064ef:	mov    QWORD PTR [rsp+0x20],rax
  4064f4:	lea    r13,[rsp+0x80]
  4064fc:	xor    r15d,r15d
  4064ff:	jmp    4065ff <test_json@@Base+0x3bf>
  406504:	mov    edi,eax
  406506:	call   422670 <flatcc_json_parser_error_string@@Base>
  40650b:	lea    rsi,[rip+0x2c5ce]        # 432ae0 <_IO_stdin_used@@Base+0xae0>
  406512:	mov    rdi,rbx
  406515:	mov    edx,r15d
  406518:	mov    rcx,rax
  40651b:	xor    eax,eax
  40651d:	call   4060c0 <fprintf@plt>
  406522:	mov    rbx,QWORD PTR [rbp+0x0]
  406526:	mov    edi,r12d
  406529:	call   422670 <flatcc_json_parser_error_string@@Base>
  40652e:	lea    rsi,[rip+0x2c5f2]        # 432b27 <_IO_stdin_used@@Base+0xb27>
  406535:	mov    rdi,rbx
  406538:	mov    rdx,rax
  40653b:	xor    eax,eax
  40653d:	call   4060c0 <fprintf@plt>
  406542:	mov    rbx,QWORD PTR [rip+0x39aaf]        # 43fff8 <stderr@GLIBC_2.2.5>
  406549:	mov    rdi,QWORD PTR [rbx]
  40654c:	lea    rsi,[rip+0x2f0ec]        # 43563f <_IO_stdin_used@@Base+0x363f>
  406553:	xor    ebp,ebp
  406555:	mov    rdx,r14
  406558:	xor    eax,eax
  40655a:	call   4060c0 <fprintf@plt>
  40655f:	cmp    DWORD PTR [rsp+0xb8],0x2
  406567:	mov    rcx,QWORD PTR [rbx]
  40656a:	jl     40658b <test_json@@Base+0x34b>
  40656c:	mov    edi,0x20
  406571:	mov    rsi,rcx
  406574:	call   406090 <fputc@plt>
  406579:	inc    ebp
  40657b:	mov    eax,DWORD PTR [rsp+0xb8]
  406582:	dec    eax
  406584:	mov    rcx,QWORD PTR [rbx]
  406587:	cmp    ebp,eax
  406589:	jl     40656c <test_json@@Base+0x32c>
  40658b:	lea    rdi,[rip+0x2c5d5]        # 432b67 <_IO_stdin_used@@Base+0xb67>
  406592:	mov    esi,0x2
  406597:	mov    edx,0x1
  40659c:	call   406130 <fwrite@plt>
  4065a1:	mov    r14d,0xffffffff
  4065a7:	jmp    40630a <test_json@@Base+0xca>
  4065ac:	mov    rdi,rbx
  4065af:	lea    rsi,[rip+0x2f08d]        # 435643 <_IO_stdin_used@@Base+0x3643>
  4065b6:	mov    edx,r15d
  4065b9:	xor    eax,eax
  4065bb:	call   4060c0 <fprintf@plt>
  4065c0:	movzx  edx,BYTE PTR [rbp+r15*1+0x0]
  4065c6:	mov    rdi,rbx
  4065c9:	lea    rsi,[rip+0x2f07b]        # 43564b <_IO_stdin_used@@Base+0x364b>
  4065d0:	xor    eax,eax
  4065d2:	call   4060c0 <fprintf@plt>
  4065d7:	movzx  eax,BYTE PTR [rbp+r15*1+0x0]
  4065dd:	lea    ecx,[rax-0x20]
  4065e0:	cmp    cl,0x5e
  4065e3:	mov    ecx,0x2e
  4065e8:	cmova  eax,ecx
  4065eb:	mov    BYTE PTR [r12+r13*1],al
  4065ef:	mov    BYTE PTR [r12+r13*1+0x1],0x0
  4065f5:	inc    r15
  4065f8:	cmp    QWORD PTR [rsp+0x20],r15
  4065fd:	je     40663b <test_json@@Base+0x3fb>
  4065ff:	mov    r12d,r15d
  406602:	and    r12d,0xf
  406606:	test   r12d,r12d
  406609:	jne    406626 <test_json@@Base+0x3e6>
  40660b:	test   r15,r15
  40660e:	je     4065ac <test_json@@Base+0x36c>
  406610:	mov    rdi,rbx
  406613:	lea    rsi,[rip+0x2f023]        # 43563d <_IO_stdin_used@@Base+0x363d>
  40661a:	mov    rdx,r13
  40661d:	xor    eax,eax
  40661f:	call   4060c0 <fprintf@plt>
  406624:	jmp    4065ac <test_json@@Base+0x36c>
  406626:	test   r15b,0x7
  40662a:	jne    4065c0 <test_json@@Base+0x380>
  40662c:	mov    edi,0x20
  406631:	mov    rsi,rbx
  406634:	call   406090 <fputc@plt>
  406639:	jmp    4065c0 <test_json@@Base+0x380>
  40663b:	mov    r13,QWORD PTR [rsp+0x18]
  406640:	test   r13b,0xf
  406644:	je     406674 <test_json@@Base+0x434>
  406646:	inc    r13d
  406649:	lea    r15,[rip+0x2f001]        # 435651 <_IO_stdin_used@@Base+0x3651>
  406650:	mov    r12d,r13d
  406653:	mov    esi,0x3
  406658:	mov    edx,0x1
  40665d:	mov    rdi,r15
  406660:	mov    rcx,rbx
  406663:	call   406130 <fwrite@plt>
  406668:	inc    r12d
  40666b:	test   r13b,0xf
  40666f:	mov    r13d,r12d
  406672:	jne    406653 <test_json@@Base+0x413>
  406674:	lea    rsi,[rip+0x2efc2]        # 43563d <_IO_stdin_used@@Base+0x363d>
  40667b:	lea    rdx,[rsp+0x80]
  406683:	mov    rdi,rbx
  406686:	xor    eax,eax
  406688:	call   4060c0 <fprintf@plt>
  40668d:	jmp    406382 <test_json@@Base+0x142>
  406692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40669c:	nop    DWORD PTR [rax+0x0]

00000000004066a0 <edge_case_tests@@Base>:
  4066a0:	push   rbp
  4066a1:	push   r15
  4066a3:	push   r14
  4066a5:	push   r13
  4066a7:	push   r12
  4066a9:	push   rbx
  4066aa:	push   rax
  4066ab:	mov    DWORD PTR [rsp],0x9e
  4066b2:	lea    r15,[rip+0x39447]        # 43fb00 <flatcc_builder_padding_base@@Base+0xa0e0>
  4066b9:	lea    rsi,[rip+0x2c584]        # 432c44 <_IO_stdin_used@@Base+0xc44>
  4066c0:	lea    rdx,[rip+0x2c5b2]        # 432c79 <_IO_stdin_used@@Base+0xc79>
  4066c7:	mov    rdi,r15
  4066ca:	xor    ecx,ecx
  4066cc:	xor    r8d,r8d
  4066cf:	xor    r9d,r9d
  4066d2:	call   406240 <test_json@@Base>
  4066d7:	mov    ebp,eax
  4066d9:	mov    DWORD PTR [rsp],0xa8
  4066e0:	lea    r12,[rip+0x2c5b0]        # 432c97 <_IO_stdin_used@@Base+0xc97>
  4066e7:	lea    r14,[rip+0x2c5ca]        # 432cb8 <_IO_stdin_used@@Base+0xcb8>
  4066ee:	mov    rdi,r15
  4066f1:	mov    rsi,r12
  4066f4:	mov    rdx,r14
  4066f7:	xor    ecx,ecx
  4066f9:	mov    r8d,0x2
  4066ff:	xor    r9d,r9d
  406702:	call   406240 <test_json@@Base>
  406707:	mov    ebx,eax
  406709:	or     ebx,ebp
  40670b:	mov    DWORD PTR [rsp],0xac
  406712:	lea    rsi,[rip+0x2c5c1]        # 432cda <_IO_stdin_used@@Base+0xcda>
  406719:	lea    rdx,[rip+0x2c5e1]        # 432d01 <_IO_stdin_used@@Base+0xd01>
  406720:	mov    rdi,r15
  406723:	xor    ecx,ecx
  406725:	xor    r8d,r8d
  406728:	mov    r9d,0x2
  40672e:	call   406240 <test_json@@Base>
  406733:	mov    r13d,eax
  406736:	mov    DWORD PTR [rsp],0xb0
  40673d:	lea    rdx,[rip+0x2c5da]        # 432d1e <_IO_stdin_used@@Base+0xd1e>
  406744:	mov    rdi,r15
  406747:	mov    rsi,r12
  40674a:	xor    ecx,ecx
  40674c:	mov    r8d,0x2
  406752:	mov    r9d,0x4
  406758:	call   406240 <test_json@@Base>
  40675d:	mov    r12d,eax
  406760:	or     r12d,r13d
  406763:	or     r12d,ebx
  406766:	mov    DWORD PTR [rsp],0xb4
  40676d:	lea    rsi,[rip+0x2c5bd]        # 432d31 <_IO_stdin_used@@Base+0xd31>
  406774:	lea    rdx,[rip+0x2c5d8]        # 432d53 <_IO_stdin_used@@Base+0xd53>
  40677b:	mov    rdi,r15
  40677e:	xor    ecx,ecx
  406780:	xor    r8d,r8d
  406783:	mov    r9d,0x8
  406789:	call   406240 <test_json@@Base>
  40678e:	mov    ebx,eax
  406790:	mov    DWORD PTR [rsp],0xc3
  406797:	lea    rsi,[rip+0x2c6c7]        # 432e65 <_IO_stdin_used@@Base+0xe65>
  40679e:	mov    rdi,r15
  4067a1:	mov    rdx,r14
  4067a4:	xor    ecx,ecx
  4067a6:	mov    r8d,0x2
  4067ac:	xor    r9d,r9d
  4067af:	call   406240 <test_json@@Base>
  4067b4:	mov    ebp,eax
  4067b6:	or     ebp,ebx
  4067b8:	mov    DWORD PTR [rsp],0xc7
  4067bf:	lea    r14,[rip+0x2c6c5]        # 432e8b <_IO_stdin_used@@Base+0xe8b>
  4067c6:	lea    r13,[rip+0x2c6f0]        # 432ebd <_IO_stdin_used@@Base+0xebd>
  4067cd:	mov    rdi,r15
  4067d0:	mov    rsi,r14
  4067d3:	mov    rdx,r13
  4067d6:	xor    ecx,ecx
  4067d8:	mov    r8d,0x1
  4067de:	xor    r9d,r9d
  4067e1:	call   406240 <test_json@@Base>
  4067e6:	mov    ebx,eax
  4067e8:	or     ebx,ebp
  4067ea:	or     ebx,r12d
  4067ed:	mov    DWORD PTR [rsp],0xcb
  4067f4:	lea    rdx,[rip+0x2c6dd]        # 432ed8 <_IO_stdin_used@@Base+0xed8>
  4067fb:	mov    rdi,r15
  4067fe:	mov    rsi,r14
  406801:	xor    ecx,ecx
  406803:	mov    r8d,0x1
  406809:	mov    r9d,0x1
  40680f:	call   406240 <test_json@@Base>
  406814:	mov    ebp,eax
  406816:	mov    DWORD PTR [rsp],0xd1
  40681d:	lea    rsi,[rip+0x2c6cb]        # 432eef <_IO_stdin_used@@Base+0xeef>
  406824:	mov    rdi,r15
  406827:	mov    rdx,r13
  40682a:	xor    ecx,ecx
  40682c:	mov    r8d,0x1
  406832:	xor    r9d,r9d
  406835:	call   406240 <test_json@@Base>
  40683a:	or     eax,ebp
  40683c:	or     eax,ebx
  40683e:	add    rsp,0x8
  406842:	pop    rbx
  406843:	pop    r12
  406845:	pop    r13
  406847:	pop    r14
  406849:	pop    r15
  40684b:	pop    rbp
  40684c:	ret    
  40684d:	nop    DWORD PTR [rax]

0000000000406850 <error_case_tests@@Base>:
  406850:	push   rbp
  406851:	push   r15
  406853:	push   r14
  406855:	push   rbx
  406856:	push   rax
  406857:	mov    DWORD PTR [rsp],0x11d
  40685e:	lea    r14,[rip+0x3929b]        # 43fb00 <flatcc_builder_padding_base@@Base+0xa0e0>
  406865:	lea    rsi,[rip+0x2c6f4]        # 432f60 <_IO_stdin_used@@Base+0xf60>
  40686c:	mov    rdi,r14
  40686f:	xor    edx,edx
  406871:	mov    ecx,0xd
  406876:	xor    r8d,r8d
  406879:	xor    r9d,r9d
  40687c:	call   406240 <test_json@@Base>
  406881:	mov    ebx,eax
  406883:	mov    DWORD PTR [rsp],0x11f
  40688a:	lea    rsi,[rip+0x2c6e9]        # 432f7a <_IO_stdin_used@@Base+0xf7a>
  406891:	mov    rdi,r14
  406894:	xor    edx,edx
  406896:	mov    ecx,0xd
  40689b:	xor    r8d,r8d
  40689e:	xor    r9d,r9d
  4068a1:	call   406240 <test_json@@Base>
  4068a6:	mov    ebp,eax
  4068a8:	or     ebp,ebx
  4068aa:	mov    DWORD PTR [rsp],0x121
  4068b1:	lea    rsi,[rip+0x2c723]        # 432fdb <_IO_stdin_used@@Base+0xfdb>
  4068b8:	mov    rdi,r14
  4068bb:	xor    edx,edx
  4068bd:	mov    ecx,0xd
  4068c2:	xor    r8d,r8d
  4068c5:	xor    r9d,r9d
  4068c8:	call   406240 <test_json@@Base>
  4068cd:	mov    r15d,eax
  4068d0:	mov    DWORD PTR [rsp],0x123
  4068d7:	lea    rsi,[rip+0x2c75b]        # 433039 <_IO_stdin_used@@Base+0x1039>
  4068de:	mov    rdi,r14
  4068e1:	xor    edx,edx
  4068e3:	mov    ecx,0xd
  4068e8:	xor    r8d,r8d
  4068eb:	xor    r9d,r9d
  4068ee:	call   406240 <test_json@@Base>
  4068f3:	mov    ebx,eax
  4068f5:	or     ebx,r15d
  4068f8:	or     ebx,ebp
  4068fa:	mov    DWORD PTR [rsp],0x125
  406901:	lea    rsi,[rip+0x2c789]        # 433091 <_IO_stdin_used@@Base+0x1091>
  406908:	mov    rdi,r14
  40690b:	xor    edx,edx
  40690d:	mov    ecx,0xd
  406912:	xor    r8d,r8d
  406915:	xor    r9d,r9d
  406918:	call   406240 <test_json@@Base>
  40691d:	mov    r15d,eax
  406920:	mov    DWORD PTR [rsp],0x128
  406927:	lea    rsi,[rip+0x2c7b8]        # 4330e6 <_IO_stdin_used@@Base+0x10e6>
  40692e:	mov    rdi,r14
  406931:	xor    edx,edx
  406933:	mov    ecx,0xd
  406938:	xor    r8d,r8d
  40693b:	xor    r9d,r9d
  40693e:	call   406240 <test_json@@Base>
  406943:	mov    ebp,eax
  406945:	or     ebp,r15d
  406948:	mov    DWORD PTR [rsp],0x12b
  40694f:	lea    rsi,[rip+0x2c82e]        # 433184 <_IO_stdin_used@@Base+0x1184>
  406956:	mov    rdi,r14
  406959:	xor    edx,edx
  40695b:	mov    ecx,0xd
  406960:	xor    r8d,r8d
  406963:	xor    r9d,r9d
  406966:	call   406240 <test_json@@Base>
  40696b:	mov    r15d,eax
  40696e:	or     r15d,ebp
  406971:	or     r15d,ebx
  406974:	mov    DWORD PTR [rsp],0x12f
  40697b:	lea    rsi,[rip+0x2c89d]        # 43321f <_IO_stdin_used@@Base+0x121f>
  406982:	mov    rdi,r14
  406985:	xor    edx,edx
  406987:	mov    ecx,0xd
  40698c:	xor    r8d,r8d
  40698f:	xor    r9d,r9d
  406992:	call   406240 <test_json@@Base>
  406997:	mov    ebx,eax
  406999:	mov    DWORD PTR [rsp],0x133
  4069a0:	lea    rsi,[rip+0x2c93f]        # 4332e6 <_IO_stdin_used@@Base+0x12e6>
  4069a7:	mov    rdi,r14
  4069aa:	xor    edx,edx
  4069ac:	mov    ecx,0xd
  4069b1:	xor    r8d,r8d
  4069b4:	xor    r9d,r9d
  4069b7:	call   406240 <test_json@@Base>
  4069bc:	mov    ebp,eax
  4069be:	or     ebp,ebx
  4069c0:	mov    DWORD PTR [rsp],0x137
  4069c7:	lea    rsi,[rip+0x2c9df]        # 4333ad <_IO_stdin_used@@Base+0x13ad>
  4069ce:	mov    rdi,r14
  4069d1:	xor    edx,edx
  4069d3:	mov    ecx,0x5
  4069d8:	xor    r8d,r8d
  4069db:	xor    r9d,r9d
  4069de:	call   406240 <test_json@@Base>
  4069e3:	mov    ebx,eax
  4069e5:	or     ebx,ebp
  4069e7:	mov    DWORD PTR [rsp],0x13a
  4069ee:	lea    rsi,[rip+0x2c9d0]        # 4333c5 <_IO_stdin_used@@Base+0x13c5>
  4069f5:	mov    rdi,r14
  4069f8:	xor    edx,edx
  4069fa:	mov    ecx,0x5
  4069ff:	xor    r8d,r8d
  406a02:	xor    r9d,r9d
  406a05:	call   406240 <test_json@@Base>
  406a0a:	mov    ebp,eax
  406a0c:	or     ebp,ebx
  406a0e:	or     ebp,r15d
  406a11:	mov    DWORD PTR [rsp],0x13d
  406a18:	lea    rsi,[rip+0x2c9cc]        # 4333eb <_IO_stdin_used@@Base+0x13eb>
  406a1f:	mov    rdi,r14
  406a22:	xor    edx,edx
  406a24:	mov    ecx,0x5
  406a29:	xor    r8d,r8d
  406a2c:	xor    r9d,r9d
  406a2f:	call   406240 <test_json@@Base>
  406a34:	or     eax,ebp
  406a36:	add    rsp,0x8
  406a3a:	pop    rbx
  406a3b:	pop    r14
  406a3d:	pop    r15
  406a3f:	pop    rbp
  406a40:	ret    
  406a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a50 <base64_tests@@Base>:
  406a50:	push   rbp
  406a51:	push   r15
  406a53:	push   r14
  406a55:	push   r13
  406a57:	push   r12
  406a59:	push   rbx
  406a5a:	push   rax
  406a5b:	mov    DWORD PTR [rsp],0x171
  406a62:	lea    r14,[rip+0x39097]        # 43fb00 <flatcc_builder_padding_base@@Base+0xa0e0>
  406a69:	lea    rsi,[rip+0x2c9b3]        # 433423 <_IO_stdin_used@@Base+0x1423>
  406a70:	lea    rdx,[rip+0x2c2a7]        # 432d1e <_IO_stdin_used@@Base+0xd1e>
  406a77:	mov    rdi,r14
  406a7a:	xor    ecx,ecx
  406a7c:	xor    r8d,r8d
  406a7f:	xor    r9d,r9d
  406a82:	call   406240 <test_json@@Base>
  406a87:	mov    ebp,eax
  406a89:	mov    DWORD PTR [rsp],0x174
  406a90:	lea    rsi,[rip+0x2c9a2]        # 433439 <_IO_stdin_used@@Base+0x1439>
  406a97:	lea    rdx,[rip+0x2c9c2]        # 433460 <_IO_stdin_used@@Base+0x1460>
  406a9e:	mov    rdi,r14
  406aa1:	xor    ecx,ecx
  406aa3:	xor    r8d,r8d
  406aa6:	xor    r9d,r9d
  406aa9:	call   406240 <test_json@@Base>
  406aae:	mov    ebx,eax
  406ab0:	or     ebx,ebp
  406ab2:	mov    DWORD PTR [rsp],0x178
  406ab9:	lea    rsi,[rip+0x2c9c3]        # 433483 <_IO_stdin_used@@Base+0x1483>
  406ac0:	lea    r15,[rip+0x2ca75]        # 43353c <_IO_stdin_used@@Base+0x153c>
  406ac7:	mov    rdi,r14
  406aca:	mov    rdx,r15
  406acd:	xor    ecx,ecx
  406acf:	xor    r8d,r8d
  406ad2:	xor    r9d,r9d
  406ad5:	call   406240 <test_json@@Base>
  406ada:	mov    r12d,eax
  406add:	mov    DWORD PTR [rsp],0x17b
  406ae4:	lea    rsi,[rip+0x2cb05]        # 4335f0 <_IO_stdin_used@@Base+0x15f0>
  406aeb:	lea    rbp,[rip+0x2cbba]        # 4336ac <_IO_stdin_used@@Base+0x16ac>
  406af2:	mov    rdi,r14
  406af5:	mov    rdx,rbp
  406af8:	xor    ecx,ecx
  406afa:	xor    r8d,r8d
  406afd:	xor    r9d,r9d
  406b00:	call   406240 <test_json@@Base>
  406b05:	mov    r13d,eax
  406b08:	or     r13d,r12d
  406b0b:	or     r13d,ebx
  406b0e:	mov    DWORD PTR [rsp],0x17e
  406b15:	lea    rsi,[rip+0x2cc47]        # 433763 <_IO_stdin_used@@Base+0x1763>
  406b1c:	mov    rdi,r14
  406b1f:	mov    rdx,r15
  406b22:	xor    ecx,ecx
  406b24:	xor    r8d,r8d
  406b27:	xor    r9d,r9d
  406b2a:	call   406240 <test_json@@Base>
  406b2f:	mov    r15d,eax
  406b32:	mov    DWORD PTR [rsp],0x181
  406b39:	lea    rsi,[rip+0x2ccda]        # 43381a <_IO_stdin_used@@Base+0x181a>
  406b40:	mov    rdi,r14
  406b43:	mov    rdx,rbp
  406b46:	xor    ecx,ecx
  406b48:	xor    r8d,r8d
  406b4b:	xor    r9d,r9d
  406b4e:	call   406240 <test_json@@Base>
  406b53:	mov    ebx,eax
  406b55:	or     ebx,r15d
  406b58:	mov    DWORD PTR [rsp],0x184
  406b5f:	lea    rsi,[rip+0x2cd6e]        # 4338d4 <_IO_stdin_used@@Base+0x18d4>
  406b66:	mov    rdi,r14
  406b69:	xor    edx,edx
  406b6b:	mov    ecx,0x1f
  406b70:	xor    r8d,r8d
  406b73:	xor    r9d,r9d
  406b76:	call   406240 <test_json@@Base>
  406b7b:	mov    ebp,eax
  406b7d:	or     ebp,ebx
  406b7f:	or     ebp,r13d
  406b82:	mov    DWORD PTR [rsp],0x187
  406b89:	lea    rsi,[rip+0x2cdfd]        # 43398d <_IO_stdin_used@@Base+0x198d>
  406b90:	mov    rdi,r14
  406b93:	xor    edx,edx
  406b95:	mov    ecx,0x20
  406b9a:	xor    r8d,r8d
  406b9d:	xor    r9d,r9d
  406ba0:	call   406240 <test_json@@Base>
  406ba5:	or     eax,ebp
  406ba7:	add    rsp,0x8
  406bab:	pop    rbx
  406bac:	pop    r12
  406bae:	pop    r13
  406bb0:	pop    r14
  406bb2:	pop    r15
  406bb4:	pop    rbp
  406bb5:	ret    
  406bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406bc0 <mixed_type_union_tests@@Base>:
  406bc0:	push   rbp
  406bc1:	push   r15
  406bc3:	push   r14
  406bc5:	push   r12
  406bc7:	push   rbx
  406bc8:	sub    rsp,0x10
  406bcc:	mov    DWORD PTR [rsp],0x1b0
  406bd3:	lea    r15,[rip+0x38f46]        # 43fb20 <flatcc_builder_padding_base@@Base+0xa100>
  406bda:	lea    rsi,[rip+0x2ce68]        # 433a49 <_IO_stdin_used@@Base+0x1a49>
  406be1:	lea    rdx,[rip+0x2ceb0]        # 433a98 <_IO_stdin_used@@Base+0x1a98>
  406be8:	mov    rdi,r15
  406beb:	xor    ecx,ecx
  406bed:	xor    r8d,r8d
  406bf0:	xor    r9d,r9d
  406bf3:	call   406240 <test_json@@Base>
  406bf8:	mov    ebp,eax
  406bfa:	mov    DWORD PTR [rsp],0x1b5
  406c01:	lea    rsi,[rip+0x2ced7]        # 433adf <_IO_stdin_used@@Base+0x1adf>
  406c08:	lea    r14,[rip+0x2cf53]        # 433b62 <_IO_stdin_used@@Base+0x1b62>
  406c0f:	mov    rdi,r15
  406c12:	mov    rdx,r14
  406c15:	xor    ecx,ecx
  406c17:	xor    r8d,r8d
  406c1a:	xor    r9d,r9d
  406c1d:	call   406240 <test_json@@Base>
  406c22:	mov    ebx,eax
  406c24:	or     ebx,ebp
  406c26:	mov    DWORD PTR [rsp],0x1ba
  406c2d:	lea    rsi,[rip+0x2cfa5]        # 433bd9 <_IO_stdin_used@@Base+0x1bd9>
  406c34:	mov    rdi,r15
  406c37:	mov    rdx,r14
  406c3a:	xor    ecx,ecx
  406c3c:	xor    r8d,r8d
  406c3f:	xor    r9d,r9d
  406c42:	call   406240 <test_json@@Base>
  406c47:	mov    r12d,eax
  406c4a:	mov    DWORD PTR [rsp],0x1c1
  406c51:	lea    rsi,[rip+0x2d017]        # 433c6f <_IO_stdin_used@@Base+0x1c6f>
  406c58:	lea    rdx,[rip+0x2d0ed]        # 433d4c <_IO_stdin_used@@Base+0x1d4c>
  406c5f:	mov    rdi,r15
  406c62:	xor    ecx,ecx
  406c64:	xor    r8d,r8d
  406c67:	xor    r9d,r9d
  406c6a:	call   406240 <test_json@@Base>
  406c6f:	mov    ebp,eax
  406c71:	or     ebp,r12d
  406c74:	or     ebp,ebx
  406c76:	mov    DWORD PTR [rsp],0x1ca
  406c7d:	lea    rsi,[rip+0x2d181]        # 433e05 <_IO_stdin_used@@Base+0x1e05>
  406c84:	lea    rdx,[rip+0x2d280]        # 433f0b <_IO_stdin_used@@Base+0x1f0b>
  406c8b:	mov    rdi,r15
  406c8e:	xor    ecx,ecx
  406c90:	xor    r8d,r8d
  406c93:	xor    r9d,r9d
  406c96:	call   406240 <test_json@@Base>
  406c9b:	mov    r12d,eax
  406c9e:	mov    DWORD PTR [rsp],0x1d5
  406ca5:	lea    rsi,[rip+0x2d33d]        # 433fe9 <_IO_stdin_used@@Base+0x1fe9>
  406cac:	lea    rdx,[rip+0x2d4b7]        # 43416a <_IO_stdin_used@@Base+0x216a>
  406cb3:	mov    rdi,r15
  406cb6:	xor    ecx,ecx
  406cb8:	xor    r8d,r8d
  406cbb:	xor    r9d,r9d
  406cbe:	call   406240 <test_json@@Base>
  406cc3:	mov    ebx,eax
  406cc5:	or     ebx,r12d
  406cc8:	mov    DWORD PTR [rsp],0x1da
  406ccf:	lea    rsi,[rip+0x2d5da]        # 4342b0 <_IO_stdin_used@@Base+0x22b0>
  406cd6:	mov    rdi,r15
  406cd9:	mov    rdx,r14
  406cdc:	xor    ecx,ecx
  406cde:	xor    r8d,r8d
  406ce1:	xor    r9d,r9d
  406ce4:	call   406240 <test_json@@Base>
  406ce9:	or     eax,ebx
  406ceb:	or     eax,ebp
  406ced:	add    rsp,0x10
  406cf1:	pop    rbx
  406cf2:	pop    r12
  406cf4:	pop    r14
  406cf6:	pop    r15
  406cf8:	pop    rbp
  406cf9:	ret    
  406cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406d00 <union_vector_tests@@Base>:
  406d00:	push   rbp
  406d01:	push   r15
  406d03:	push   r14
  406d05:	push   r12
  406d07:	push   rbx
  406d08:	sub    rsp,0x10
  406d0c:	mov    DWORD PTR [rsp],0x1e5
  406d13:	lea    r15,[rip+0x38e26]        # 43fb40 <flatcc_builder_padding_base@@Base+0xa120>
  406d1a:	lea    rsi,[rip+0x2d61c]        # 43433d <_IO_stdin_used@@Base+0x233d>
  406d21:	lea    r14,[rip+0x2d655]        # 43437d <_IO_stdin_used@@Base+0x237d>
  406d28:	mov    rdi,r15
  406d2b:	mov    rdx,r14
  406d2e:	xor    ecx,ecx
  406d30:	xor    r8d,r8d
  406d33:	xor    r9d,r9d
  406d36:	call   406240 <test_json@@Base>
  406d3b:	mov    ebp,eax
  406d3d:	mov    DWORD PTR [rsp],0x1e8
  406d44:	lea    rsi,[rip+0x2d66a]        # 4343b5 <_IO_stdin_used@@Base+0x23b5>
  406d4b:	lea    rdx,[rip+0x2d696]        # 4343e8 <_IO_stdin_used@@Base+0x23e8>
  406d52:	mov    rdi,r15
  406d55:	xor    ecx,ecx
  406d57:	xor    r8d,r8d
  406d5a:	xor    r9d,r9d
  406d5d:	call   406240 <test_json@@Base>
  406d62:	mov    ebx,eax
  406d64:	or     ebx,ebp
  406d66:	mov    DWORD PTR [rsp],0x1eb
  406d6d:	lea    rsi,[rip+0x2d69f]        # 434413 <_IO_stdin_used@@Base+0x2413>
  406d74:	lea    rdx,[rip+0x2d6e5]        # 434460 <_IO_stdin_used@@Base+0x2460>
  406d7b:	mov    rdi,r15
  406d7e:	xor    ecx,ecx
  406d80:	xor    r8d,r8d
  406d83:	xor    r9d,r9d
  406d86:	call   406240 <test_json@@Base>
  406d8b:	mov    r12d,eax
  406d8e:	mov    DWORD PTR [rsp],0x1ee
  406d95:	lea    rsi,[rip+0x2d708]        # 4344a4 <_IO_stdin_used@@Base+0x24a4>
  406d9c:	lea    rdx,[rip+0x2d77e]        # 434521 <_IO_stdin_used@@Base+0x2521>
  406da3:	mov    rdi,r15
  406da6:	xor    ecx,ecx
  406da8:	xor    r8d,r8d
  406dab:	xor    r9d,r9d
  406dae:	call   406240 <test_json@@Base>
  406db3:	mov    ebp,eax
  406db5:	or     ebp,r12d
  406db8:	or     ebp,ebx
  406dba:	mov    DWORD PTR [rsp],0x1f1
  406dc1:	lea    rsi,[rip+0x2d7c5]        # 43458d <_IO_stdin_used@@Base+0x258d>
  406dc8:	mov    rdi,r15
  406dcb:	mov    rdx,r14
  406dce:	xor    ecx,ecx
  406dd0:	xor    r8d,r8d
  406dd3:	xor    r9d,r9d
  406dd6:	call   406240 <test_json@@Base>
  406ddb:	mov    ebx,eax
  406ddd:	mov    DWORD PTR [rsp],0x1f4
  406de4:	lea    rsi,[rip+0x2d7e1]        # 4345cc <_IO_stdin_used@@Base+0x25cc>
  406deb:	lea    rdx,[rip+0x2d840]        # 434632 <_IO_stdin_used@@Base+0x2632>
  406df2:	mov    rdi,r15
  406df5:	xor    ecx,ecx
  406df7:	xor    r8d,r8d
  406dfa:	xor    r9d,r9d
  406dfd:	call   406240 <test_json@@Base>
  406e02:	or     eax,ebx
  406e04:	or     eax,ebp
  406e06:	add    rsp,0x10
  406e0a:	pop    rbx
  406e0b:	pop    r12
  406e0d:	pop    r14
  406e0f:	pop    r15
  406e11:	pop    rbp
  406e12:	ret    
  406e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e1d:	nop    DWORD PTR [rax]

0000000000406e20 <main@@Base>:
  406e20:	push   rbp
  406e21:	push   r15
  406e23:	push   r14
  406e25:	push   r13
  406e27:	push   r12
  406e29:	push   rbx
  406e2a:	push   rax
  406e2b:	call   4066a0 <edge_case_tests@@Base>
  406e30:	mov    ebx,eax
  406e32:	call   406850 <error_case_tests@@Base>
  406e37:	mov    ebp,eax
  406e39:	or     ebp,ebx
  406e3b:	call   406d00 <union_vector_tests@@Base>
  406e40:	mov    r14d,eax
  406e43:	call   406a50 <base64_tests@@Base>
  406e48:	mov    ebx,eax
  406e4a:	or     ebx,r14d
  406e4d:	or     ebx,ebp
  406e4f:	call   406bc0 <mixed_type_union_tests@@Base>
  406e54:	mov    ebp,eax
  406e56:	mov    DWORD PTR [rsp],0x20d
  406e5d:	lea    r13,[rip+0x38c9c]        # 43fb00 <flatcc_builder_padding_base@@Base+0xa0e0>
  406e64:	lea    rsi,[rip+0x2d823]        # 43468e <_IO_stdin_used@@Base+0x268e>
  406e6b:	lea    rdx,[rip+0x2beac]        # 432d1e <_IO_stdin_used@@Base+0xd1e>
  406e72:	mov    rdi,r13
  406e75:	xor    ecx,ecx
  406e77:	xor    r8d,r8d
  406e7a:	xor    r9d,r9d
  406e7d:	call   406240 <test_json@@Base>
  406e82:	mov    r15d,eax
  406e85:	or     r15d,ebp
  406e88:	or     r15d,ebx
  406e8b:	mov    DWORD PTR [rsp],0x210
  406e92:	lea    rsi,[rip+0x2d80c]        # 4346a5 <_IO_stdin_used@@Base+0x26a5>
  406e99:	lea    rdx,[rip+0x2d82c]        # 4346cc <_IO_stdin_used@@Base+0x26cc>
  406ea0:	mov    rdi,r13
  406ea3:	mov    rbp,rdx
  406ea6:	xor    ecx,ecx
  406ea8:	xor    r8d,r8d
  406eab:	xor    r9d,r9d
  406eae:	call   406240 <test_json@@Base>
  406eb3:	mov    ebx,eax
  406eb5:	mov    DWORD PTR [rsp],0x213
  406ebc:	lea    rsi,[rip+0x2d82a]        # 4346ed <_IO_stdin_used@@Base+0x26ed>
  406ec3:	lea    rdx,[rip+0x2d84b]        # 434715 <_IO_stdin_used@@Base+0x2715>
  406eca:	mov    rdi,r13
  406ecd:	xor    ecx,ecx
  406ecf:	xor    r8d,r8d
  406ed2:	xor    r9d,r9d
  406ed5:	call   406240 <test_json@@Base>
  406eda:	mov    r12d,eax
  406edd:	or     r12d,ebx
  406ee0:	mov    DWORD PTR [rsp],0x216
  406ee7:	lea    rsi,[rip+0x2d84a]        # 434738 <_IO_stdin_used@@Base+0x2738>
  406eee:	lea    rbx,[rip+0x2d874]        # 434769 <_IO_stdin_used@@Base+0x2769>
  406ef5:	mov    rdi,r13
  406ef8:	mov    rdx,rbx
  406efb:	xor    ecx,ecx
  406efd:	xor    r8d,r8d
  406f00:	xor    r9d,r9d
  406f03:	call   406240 <test_json@@Base>
  406f08:	mov    r14d,eax
  406f0b:	or     r14d,r12d
  406f0e:	or     r14d,r15d
  406f11:	mov    DWORD PTR [rsp],0x219
  406f18:	lea    rsi,[rip+0x2d876]        # 434795 <_IO_stdin_used@@Base+0x2795>
  406f1f:	mov    rdi,r13
  406f22:	mov    rdx,rbx
  406f25:	xor    ecx,ecx
  406f27:	xor    r8d,r8d
  406f2a:	xor    r9d,r9d
  406f2d:	call   406240 <test_json@@Base>
  406f32:	mov    ebx,eax
  406f34:	mov    DWORD PTR [rsp],0x21c
  406f3b:	lea    rsi,[rip+0x2d88d]        # 4347cf <_IO_stdin_used@@Base+0x27cf>
  406f42:	mov    rdi,r13
  406f45:	mov    r12,rbp
  406f48:	mov    rdx,rbp
  406f4b:	xor    ecx,ecx
  406f4d:	xor    r8d,r8d
  406f50:	xor    r9d,r9d
  406f53:	call   406240 <test_json@@Base>
  406f58:	mov    ebp,eax
  406f5a:	or     ebp,ebx
  406f5c:	mov    DWORD PTR [rsp],0x21f
  406f63:	lea    rsi,[rip+0x2d88b]        # 4347f5 <_IO_stdin_used@@Base+0x27f5>
  406f6a:	mov    rdi,r13
  406f6d:	lea    rdx,[rip+0x2d7a1]        # 434715 <_IO_stdin_used@@Base+0x2715>
  406f74:	xor    ecx,ecx
  406f76:	xor    r8d,r8d
  406f79:	xor    r9d,r9d
  406f7c:	call   406240 <test_json@@Base>
  406f81:	mov    ebx,eax
  406f83:	or     ebx,ebp
  406f85:	mov    DWORD PTR [rsp],0x223
  406f8c:	lea    rsi,[rip+0x2d88b]        # 43481e <_IO_stdin_used@@Base+0x281e>
  406f93:	mov    rdi,r13
  406f96:	lea    rbp,[rip+0x2bd81]        # 432d1e <_IO_stdin_used@@Base+0xd1e>
  406f9d:	mov    rdx,rbp
  406fa0:	xor    ecx,ecx
  406fa2:	xor    r8d,r8d
  406fa5:	xor    r9d,r9d
  406fa8:	call   406240 <test_json@@Base>
  406fad:	mov    r15d,eax
  406fb0:	or     r15d,ebx
  406fb3:	or     r15d,r14d
  406fb6:	mov    DWORD PTR [rsp],0x227
  406fbd:	lea    rsi,[rip+0x2bcd3]        # 432c97 <_IO_stdin_used@@Base+0xc97>
  406fc4:	mov    rdi,r13
  406fc7:	mov    rdx,rbp
  406fca:	xor    ecx,ecx
  406fcc:	xor    r8d,r8d
  406fcf:	xor    r9d,r9d
  406fd2:	call   406240 <test_json@@Base>
  406fd7:	mov    r14d,eax
  406fda:	mov    DWORD PTR [rsp],0x259
  406fe1:	lea    rsi,[rip+0x2d85d]        # 434845 <_IO_stdin_used@@Base+0x2845>
  406fe8:	mov    rdi,r13
  406feb:	mov    rdx,r12
  406fee:	xor    ecx,ecx
  406ff0:	xor    r8d,r8d
  406ff3:	xor    r9d,r9d
  406ff6:	call   406240 <test_json@@Base>
  406ffb:	mov    ebx,eax
  406ffd:	or     ebx,r14d
  407000:	mov    DWORD PTR [rsp],0x25c
  407007:	lea    rsi,[rip+0x2d858]        # 434866 <_IO_stdin_used@@Base+0x2866>
  40700e:	mov    rdi,r13
  407011:	lea    rdx,[rip+0x2d6fd]        # 434715 <_IO_stdin_used@@Base+0x2715>
  407018:	xor    ecx,ecx
  40701a:	xor    r8d,r8d
  40701d:	xor    r9d,r9d
  407020:	call   406240 <test_json@@Base>
  407025:	mov    ebp,eax
  407027:	or     ebp,ebx
  407029:	mov    DWORD PTR [rsp],0x25f
  407030:	lea    rsi,[rip+0x2d850]        # 434887 <_IO_stdin_used@@Base+0x2887>
  407037:	lea    rdx,[rip+0x2d86a]        # 4348a8 <_IO_stdin_used@@Base+0x28a8>
  40703e:	mov    rdi,r13
  407041:	xor    ecx,ecx
  407043:	xor    r8d,r8d
  407046:	xor    r9d,r9d
  407049:	call   406240 <test_json@@Base>
  40704e:	mov    ebx,eax
  407050:	or     ebx,ebp
  407052:	mov    DWORD PTR [rsp],0x262
  407059:	lea    rsi,[rip+0x2d86e]        # 4348ce <_IO_stdin_used@@Base+0x28ce>
  407060:	mov    rdi,r13
  407063:	lea    rdx,[rip+0x2d6ff]        # 434769 <_IO_stdin_used@@Base+0x2769>
  40706a:	xor    ecx,ecx
  40706c:	xor    r8d,r8d
  40706f:	xor    r9d,r9d
  407072:	call   406240 <test_json@@Base>
  407077:	mov    r12d,eax
  40707a:	or     r12d,ebx
  40707d:	or     r12d,r15d
  407080:	mov    DWORD PTR [rsp],0x265
  407087:	lea    rsi,[rip+0x2d862]        # 4348f0 <_IO_stdin_used@@Base+0x28f0>
  40708e:	lea    rdx,[rip+0x2d87d]        # 434912 <_IO_stdin_used@@Base+0x2912>
  407095:	mov    rdi,r13
  407098:	xor    ecx,ecx
  40709a:	xor    r8d,r8d
  40709d:	xor    r9d,r9d
  4070a0:	call   406240 <test_json@@Base>
  4070a5:	mov    r14d,eax
  4070a8:	mov    DWORD PTR [rsp],0x268
  4070af:	lea    rsi,[rip+0x2d87a]        # 434930 <_IO_stdin_used@@Base+0x2930>
  4070b6:	lea    rdx,[rip+0x2d895]        # 434952 <_IO_stdin_used@@Base+0x2952>
  4070bd:	mov    rdi,r13
  4070c0:	xor    ecx,ecx
  4070c2:	xor    r8d,r8d
  4070c5:	xor    r9d,r9d
  4070c8:	call   406240 <test_json@@Base>
  4070cd:	mov    ebx,eax
  4070cf:	or     ebx,r14d
  4070d2:	mov    DWORD PTR [rsp],0x26b
  4070d9:	lea    rsi,[rip+0x2d890]        # 434970 <_IO_stdin_used@@Base+0x2970>
  4070e0:	lea    rdx,[rip+0x2d8aa]        # 434991 <_IO_stdin_used@@Base+0x2991>
  4070e7:	mov    rdi,r13
  4070ea:	xor    ecx,ecx
  4070ec:	xor    r8d,r8d
  4070ef:	xor    r9d,r9d
  4070f2:	call   406240 <test_json@@Base>
  4070f7:	mov    ebp,eax
  4070f9:	or     ebp,ebx
  4070fb:	mov    DWORD PTR [rsp],0x26e
  407102:	lea    rsi,[rip+0x2d8a5]        # 4349ae <_IO_stdin_used@@Base+0x29ae>
  407109:	mov    rdi,r13
  40710c:	lea    r14,[rip+0x2d5b9]        # 4346cc <_IO_stdin_used@@Base+0x26cc>
  407113:	mov    rdx,r14
  407116:	xor    ecx,ecx
  407118:	xor    r8d,r8d
  40711b:	xor    r9d,r9d
  40711e:	call   406240 <test_json@@Base>
  407123:	mov    ebx,eax
  407125:	or     ebx,ebp
  407127:	mov    DWORD PTR [rsp],0x271
  40712e:	lea    rsi,[rip+0x2d8a4]        # 4349d9 <_IO_stdin_used@@Base+0x29d9>
  407135:	mov    rdi,r13
  407138:	mov    rdx,r14
  40713b:	xor    ecx,ecx
  40713d:	xor    r8d,r8d
  407140:	xor    r9d,r9d
  407143:	call   406240 <test_json@@Base>
  407148:	mov    ebp,eax
  40714a:	or     ebp,ebx
  40714c:	mov    DWORD PTR [rsp],0x274
  407153:	lea    r14,[rip+0x2d8b9]        # 434a13 <_IO_stdin_used@@Base+0x2a13>
  40715a:	lea    r15,[rip+0x2d8dc]        # 434a3d <_IO_stdin_used@@Base+0x2a3d>
  407161:	mov    rbx,r13
  407164:	mov    rdi,r13
  407167:	mov    rsi,r14
  40716a:	mov    rdx,r15
  40716d:	xor    ecx,ecx
  40716f:	xor    r8d,r8d
  407172:	xor    r9d,r9d
  407175:	call   406240 <test_json@@Base>
  40717a:	mov    r13d,eax
  40717d:	or     r13d,ebp
  407180:	or     r13d,r12d
  407183:	mov    DWORD PTR [rsp],0x277
  40718a:	mov    rdi,rbx
  40718d:	mov    rsi,r14
  407190:	mov    rdx,r15
  407193:	xor    ecx,ecx
  407195:	xor    r8d,r8d
  407198:	xor    r9d,r9d
  40719b:	call   406240 <test_json@@Base>
  4071a0:	mov    ebp,eax
  4071a2:	mov    DWORD PTR [rsp],0x27a
  4071a9:	lea    rsi,[rip+0x2d8a7]        # 434a57 <_IO_stdin_used@@Base+0x2a57>
  4071b0:	lea    rdx,[rip+0x2d8f1]        # 434aa8 <_IO_stdin_used@@Base+0x2aa8>
  4071b7:	mov    rdi,rbx
  4071ba:	mov    r14,rbx
  4071bd:	xor    ecx,ecx
  4071bf:	xor    r8d,r8d
  4071c2:	xor    r9d,r9d
  4071c5:	call   406240 <test_json@@Base>
  4071ca:	mov    ebx,eax
  4071cc:	or     ebx,ebp
  4071ce:	mov    DWORD PTR [rsp],0x27e
  4071d5:	lea    rsi,[rip+0x2d913]        # 434aef <_IO_stdin_used@@Base+0x2aef>
  4071dc:	lea    rdx,[rip+0x2d961]        # 434b44 <_IO_stdin_used@@Base+0x2b44>
  4071e3:	mov    rdi,r14
  4071e6:	xor    ecx,ecx
  4071e8:	xor    r8d,r8d
  4071eb:	xor    r9d,r9d
  4071ee:	call   406240 <test_json@@Base>
  4071f3:	mov    ebp,eax
  4071f5:	or     ebp,ebx
  4071f7:	mov    DWORD PTR [rsp],0x282
  4071fe:	lea    rsi,[rip+0x2d989]        # 434b8e <_IO_stdin_used@@Base+0x2b8e>
  407205:	lea    rdx,[rip+0x2d9f1]        # 434bfd <_IO_stdin_used@@Base+0x2bfd>
  40720c:	mov    rdi,r14
  40720f:	xor    ecx,ecx
  407211:	xor    r8d,r8d
  407214:	xor    r9d,r9d
  407217:	call   406240 <test_json@@Base>
  40721c:	mov    ebx,eax
  40721e:	or     ebx,ebp
  407220:	mov    DWORD PTR [rsp],0x286
  407227:	lea    rsi,[rip+0x2da31]        # 434c5f <_IO_stdin_used@@Base+0x2c5f>
  40722e:	mov    rdi,r14
  407231:	lea    r12,[rip+0x2bae6]        # 432d1e <_IO_stdin_used@@Base+0xd1e>
  407238:	mov    rdx,r12
  40723b:	xor    ecx,ecx
  40723d:	xor    r8d,r8d
  407240:	xor    r9d,r9d
  407243:	call   406240 <test_json@@Base>
  407248:	mov    ebp,eax
  40724a:	or     ebp,ebx
  40724c:	mov    DWORD PTR [rsp],0x289
  407253:	lea    rsi,[rip+0x2da30]        # 434c8a <_IO_stdin_used@@Base+0x2c8a>
  40725a:	mov    rdi,r14
  40725d:	mov    rdx,r12
  407260:	xor    ecx,ecx
  407262:	xor    r8d,r8d
  407265:	xor    r9d,r9d
  407268:	call   406240 <test_json@@Base>
  40726d:	mov    ebx,eax
  40726f:	or     ebx,ebp
  407271:	mov    DWORD PTR [rsp],0x2cc
  407278:	lea    rsi,[rip+0x2da31]        # 434cb0 <_IO_stdin_used@@Base+0x2cb0>
  40727f:	lea    rdx,[rip+0x2da97]        # 434d1d <_IO_stdin_used@@Base+0x2d1d>
  407286:	mov    rbp,r14
  407289:	mov    rdi,r14
  40728c:	xor    ecx,ecx
  40728e:	xor    r8d,r8d
  407291:	xor    r9d,r9d
  407294:	call   406240 <test_json@@Base>
  407299:	mov    r14d,eax
  40729c:	or     r14d,ebx
  40729f:	or     r14d,r13d
  4072a2:	mov    DWORD PTR [rsp],0x2db
  4072a9:	lea    rsi,[rip+0x2dacb]        # 434d7b <_IO_stdin_used@@Base+0x2d7b>
  4072b0:	lea    rdx,[rip+0x2db01]        # 434db8 <_IO_stdin_used@@Base+0x2db8>
  4072b7:	mov    rdi,rbp
  4072ba:	mov    r13,rbp
  4072bd:	xor    ecx,ecx
  4072bf:	xor    r8d,r8d
  4072c2:	xor    r9d,r9d
  4072c5:	call   406240 <test_json@@Base>
  4072ca:	mov    ebx,eax
  4072cc:	mov    DWORD PTR [rsp],0x2de
  4072d3:	lea    rsi,[rip+0x2db0e]        # 434de8 <_IO_stdin_used@@Base+0x2de8>
  4072da:	lea    rdx,[rip+0x2db21]        # 434e02 <_IO_stdin_used@@Base+0x2e02>
  4072e1:	mov    rdi,rbp
  4072e4:	xor    ecx,ecx
  4072e6:	xor    r8d,r8d
  4072e9:	xor    r9d,r9d
  4072ec:	call   406240 <test_json@@Base>
  4072f1:	mov    ebp,eax
  4072f3:	or     ebp,ebx
  4072f5:	mov    DWORD PTR [rsp],0x2e2
  4072fc:	lea    rsi,[rip+0x2db11]        # 434e14 <_IO_stdin_used@@Base+0x2e14>
  407303:	lea    r15,[rip+0x2db52]        # 434e5c <_IO_stdin_used@@Base+0x2e5c>
  40730a:	mov    rdi,r13
  40730d:	mov    rdx,r15
  407310:	xor    ecx,ecx
  407312:	xor    r8d,r8d
  407315:	xor    r9d,r9d
  407318:	call   406240 <test_json@@Base>
  40731d:	mov    ebx,eax
  40731f:	or     ebx,ebp
  407321:	mov    DWORD PTR [rsp],0x2ee
  407328:	lea    rsi,[rip+0x2db6e]        # 434e9d <_IO_stdin_used@@Base+0x2e9d>
  40732f:	mov    rdi,r13
  407332:	mov    rdx,r15
  407335:	xor    ecx,ecx
  407337:	xor    r8d,r8d
  40733a:	xor    r9d,r9d
  40733d:	call   406240 <test_json@@Base>
  407342:	mov    ebp,eax
  407344:	or     ebp,ebx
  407346:	mov    DWORD PTR [rsp],0x2fe
  40734d:	lea    rsi,[rip+0x2dbe6]        # 434f3a <_IO_stdin_used@@Base+0x2f3a>
  407354:	lea    rdx,[rip+0x2dc06]        # 434f61 <_IO_stdin_used@@Base+0x2f61>
  40735b:	mov    rdi,r13
  40735e:	xor    ecx,ecx
  407360:	xor    r8d,r8d
  407363:	xor    r9d,r9d
  407366:	call   406240 <test_json@@Base>
  40736b:	mov    ebx,eax
  40736d:	or     ebx,ebp
  40736f:	mov    DWORD PTR [rsp],0x302
  407376:	lea    rsi,[rip+0x2dc06]        # 434f83 <_IO_stdin_used@@Base+0x2f83>
  40737d:	lea    rdx,[rip+0x2dc2e]        # 434fb2 <_IO_stdin_used@@Base+0x2fb2>
  407384:	mov    rdi,r13
  407387:	xor    ecx,ecx
  407389:	xor    r8d,r8d
  40738c:	xor    r9d,r9d
  40738f:	call   406240 <test_json@@Base>
  407394:	mov    ebp,eax
  407396:	or     ebp,ebx
  407398:	mov    DWORD PTR [rsp],0x308
  40739f:	lea    rsi,[rip+0x2dc36]        # 434fdc <_IO_stdin_used@@Base+0x2fdc>
  4073a6:	lea    rdx,[rip+0x2dcaa]        # 435057 <_IO_stdin_used@@Base+0x3057>
  4073ad:	mov    rdi,r13
  4073b0:	xor    ecx,ecx
  4073b2:	xor    r8d,r8d
  4073b5:	xor    r9d,r9d
  4073b8:	call   406240 <test_json@@Base>
  4073bd:	mov    ebx,eax
  4073bf:	or     ebx,ebp
  4073c1:	mov    DWORD PTR [rsp],0x30d
  4073c8:	lea    rsi,[rip+0x2dcf8]        # 4350c7 <_IO_stdin_used@@Base+0x30c7>
  4073cf:	mov    rdi,r13
  4073d2:	mov    rdx,r12
  4073d5:	xor    ecx,ecx
  4073d7:	xor    r8d,r8d
  4073da:	xor    r9d,r9d
  4073dd:	call   406240 <test_json@@Base>
  4073e2:	mov    r15d,eax
  4073e5:	or     r15d,ebx
  4073e8:	or     r15d,r14d
  4073eb:	mov    DWORD PTR [rsp],0x312
  4073f2:	lea    rsi,[rip+0x2dd46]        # 43513f <_IO_stdin_used@@Base+0x313f>
  4073f9:	lea    rdx,[rip+0x2ddb9]        # 4351b9 <_IO_stdin_used@@Base+0x31b9>
  407400:	mov    rdi,r13
  407403:	xor    ecx,ecx
  407405:	xor    r8d,r8d
  407408:	xor    r9d,r9d
  40740b:	call   406240 <test_json@@Base>
  407410:	mov    r14d,eax
  407413:	mov    DWORD PTR [rsp],0x317
  40741a:	lea    rsi,[rip+0x2de07]        # 435228 <_IO_stdin_used@@Base+0x3228>
  407421:	lea    rdx,[rip+0x2de8b]        # 4352b3 <_IO_stdin_used@@Base+0x32b3>
  407428:	mov    rdi,r13
  40742b:	xor    ecx,ecx
  40742d:	xor    r8d,r8d
  407430:	xor    r9d,r9d
  407433:	call   406240 <test_json@@Base>
  407438:	mov    ebx,eax
  40743a:	or     ebx,r14d
  40743d:	mov    DWORD PTR [rsp],0x31c
  407444:	lea    rsi,[rip+0x2dee6]        # 435331 <_IO_stdin_used@@Base+0x3331>
  40744b:	lea    rdx,[rip+0x2df5a]        # 4353ac <_IO_stdin_used@@Base+0x33ac>
  407452:	mov    rdi,r13
  407455:	xor    ecx,ecx
  407457:	xor    r8d,r8d
  40745a:	xor    r9d,r9d
  40745d:	call   406240 <test_json@@Base>
  407462:	mov    ebp,eax
  407464:	or     ebp,ebx
  407466:	mov    DWORD PTR [rsp],0x321
  40746d:	lea    rsi,[rip+0x2dfa8]        # 43541c <_IO_stdin_used@@Base+0x341c>
  407474:	lea    rdx,[rip+0x2e02b]        # 4354a6 <_IO_stdin_used@@Base+0x34a6>
  40747b:	mov    rdi,r13
  40747e:	xor    ecx,ecx
  407480:	xor    r8d,r8d
  407483:	xor    r9d,r9d
  407486:	call   406240 <test_json@@Base>
  40748b:	mov    ebx,eax
  40748d:	or     ebx,ebp
  40748f:	or     ebx,r15d
  407492:	mov    DWORD PTR [rsp],0x326
  407499:	lea    rsi,[rip+0x2e085]        # 435525 <_IO_stdin_used@@Base+0x3525>
  4074a0:	lea    rdx,[rip+0x2e10d]        # 4355b4 <_IO_stdin_used@@Base+0x35b4>
  4074a7:	mov    rdi,r13
  4074aa:	xor    ecx,ecx
  4074ac:	xor    r8d,r8d
  4074af:	xor    r9d,r9d
  4074b2:	call   406240 <test_json@@Base>
  4074b7:	xor    ecx,ecx
  4074b9:	or     eax,ebx
  4074bb:	setne  cl
  4074be:	neg    ecx
  4074c0:	mov    eax,ecx
  4074c2:	add    rsp,0x8
  4074c6:	pop    rbx
  4074c7:	pop    r12
  4074c9:	pop    r13
  4074cb:	pop    r14
  4074cd:	pop    r15
  4074cf:	pop    rbp
  4074d0:	ret    
  4074d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074db:	nop    DWORD PTR [rax+rax*1+0x0]
  4074e0:	push   rbp
  4074e1:	push   r15
  4074e3:	push   r14
  4074e5:	push   r13
  4074e7:	push   r12
  4074e9:	push   rbx
  4074ea:	sub    rsp,0x58
  4074ee:	mov    rbp,rcx
  4074f1:	mov    r15,rdx
  4074f4:	mov    rbx,rsi
  4074f7:	mov    r14,rdi
  4074fa:	mov    DWORD PTR [rcx],0x0
  407500:	mov    rdi,QWORD PTR [rdi]
  407503:	mov    esi,0x24
  407508:	call   41dcc0 <flatcc_builder_start_table@@Base>
  40750d:	test   eax,eax
  40750f:	je     407539 <main@@Base+0x719>
  407511:	mov    rdi,r14
  407514:	mov    rsi,rbx
  407517:	mov    rdx,r15
  40751a:	mov    ecx,0x21
  40751f:	call   422690 <flatcc_json_parser_set_error@@Base>
  407524:	mov    rbx,rax
  407527:	mov    rax,rbx
  40752a:	add    rsp,0x58
  40752e:	pop    rbx
  40752f:	pop    r12
  407531:	pop    r13
  407533:	pop    r14
  407535:	pop    r15
  407537:	pop    rbp
  407538:	ret    
  407539:	lea    r8,[rsp+0x40]
  40753e:	mov    ecx,0x1
  407543:	mov    rdi,r14
  407546:	mov    rsi,rbx
  407549:	mov    rdx,r15
  40754c:	call   4248a0 <flatcc_json_parser_prepare_unions@@Base>
  407551:	cmp    rax,r15
  407554:	je     407511 <main@@Base+0x6f1>
  407556:	cmp    rbx,r15
  407559:	je     407586 <main@@Base+0x766>
  40755b:	cmp    BYTE PTR [rbx],0x7b
  40755e:	jne    407586 <main@@Base+0x766>
  407560:	lea    rax,[rbx+0x1]
  407564:	mov    rcx,r15
  407567:	sub    rcx,rax
  40756a:	cmp    rcx,0x2
  40756e:	jl     4075e6 <main@@Base+0x7c6>
  407570:	cmp    BYTE PTR [rax],0x20
  407573:	jg     4075f4 <main@@Base+0x7d4>
  407575:	jne    4075e6 <main@@Base+0x7c6>
  407577:	cmp    BYTE PTR [rbx+0x2],0x20
  40757b:	jle    4075e6 <main@@Base+0x7c6>
  40757d:	add    rbx,0x2
  407581:	mov    rax,rbx
  407584:	jmp    4075f4 <main@@Base+0x7d4>
  407586:	mov    rdi,r14
  407589:	mov    rsi,rbx
  40758c:	mov    rdx,r15
  40758f:	mov    ecx,0x15
  407594:	call   422690 <flatcc_json_parser_set_error@@Base>
  407599:	mov    rbx,rax
  40759c:	cmp    DWORD PTR [r14+0x1c],0x0
  4075a1:	jne    407511 <main@@Base+0x6f1>
  4075a7:	mov    rdi,QWORD PTR [r14]
  4075aa:	mov    esi,0x3
  4075af:	call   41e590 <flatcc_builder_check_required_field@@Base>
  4075b4:	test   eax,eax
  4075b6:	je     407633 <main@@Base+0x813>
  4075b8:	mov    rcx,QWORD PTR [rsp+0x40]
  4075bd:	mov    rdi,r14
  4075c0:	mov    rsi,rbx
  4075c3:	mov    rdx,r15
  4075c6:	call   424920 <flatcc_json_parser_finalize_unions@@Base>
  4075cb:	mov    rbx,rax
  4075ce:	mov    rdi,QWORD PTR [r14]
  4075d1:	call   41e6d0 <flatcc_builder_end_table@@Base>
  4075d6:	mov    DWORD PTR [rbp+0x0],eax
  4075d9:	test   eax,eax
  4075db:	jne    407527 <main@@Base+0x707>
  4075e1:	jmp    407511 <main@@Base+0x6f1>
  4075e6:	mov    rdi,r14
  4075e9:	mov    rsi,rax
  4075ec:	mov    rdx,r15
  4075ef:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4075f4:	mov    rsi,r15
  4075f7:	cmp    rax,r15
  4075fa:	je     407651 <main@@Base+0x831>
  4075fc:	cmp    BYTE PTR [rax],0x7d
  4075ff:	jne    40764e <main@@Base+0x82e>
  407601:	lea    rbx,[rax+0x1]
  407605:	mov    rcx,r15
  407608:	sub    rcx,rbx
  40760b:	cmp    rcx,0x2
  40760f:	jl     40fc3b <main@@Base+0x8e1b>
  407615:	cmp    BYTE PTR [rbx],0x20
  407618:	jg     40759c <main@@Base+0x77c>
  40761a:	jne    40fc3b <main@@Base+0x8e1b>
  407620:	cmp    BYTE PTR [rax+0x2],0x20
  407624:	jle    40fc3b <main@@Base+0x8e1b>
  40762a:	add    rax,0x2
  40762e:	jmp    407599 <main@@Base+0x779>
  407633:	mov    rdi,r14
  407636:	mov    rsi,rbx
  407639:	mov    rdx,r15
  40763c:	mov    ecx,0x1d
  407641:	call   422690 <flatcc_json_parser_set_error@@Base>
  407646:	mov    rbx,rax
  407649:	jmp    407511 <main@@Base+0x6f1>
  40764e:	mov    rsi,rax
  407651:	movabs rax,0x7465737400000000
  40765b:	add    rax,0x61727261
  407661:	mov    QWORD PTR [rsp+0x48],rax
  407666:	mov    QWORD PTR [rsp+0x30],rbp
  40766b:	nop    DWORD PTR [rax+rax*1+0x0]
  407670:	mov    r13,r15
  407673:	cmp    rsi,r15
  407676:	je     407698 <main@@Base+0x878>
  407678:	cmp    BYTE PTR [rsi],0x22
  40767b:	jne    407685 <main@@Base+0x865>
  40767d:	inc    rsi
  407680:	mov    r13,rsi
  407683:	jmp    407698 <main@@Base+0x878>
  407685:	mov    rdi,r14
  407688:	mov    rdx,r15
  40768b:	mov    ecx,0x5
  407690:	call   422690 <flatcc_json_parser_set_error@@Base>
  407695:	mov    r13,rax
  407698:	mov    r12,r15
  40769b:	sub    r12,r13
  40769e:	cmp    r12,0x8
  4076a2:	jb     4076ac <main@@Base+0x88c>
  4076a4:	movbe  rbp,QWORD PTR [r13+0x0]
  4076aa:	jmp    407728 <main@@Base+0x908>
  4076ac:	lea    rax,[r12-0x1]
  4076b1:	cmp    rax,0x6
  4076b5:	ja     40c144 <main@@Base+0x5324>
  4076bb:	lea    rcx,[rip+0x2a952]        # 432014 <_IO_stdin_used@@Base+0x14>
  4076c2:	movsxd rbp,DWORD PTR [rcx+rax*4]
  4076c6:	add    rbp,rcx
  4076c9:	xor    ecx,ecx
  4076cb:	xor    eax,eax
  4076cd:	xor    edx,edx
  4076cf:	xor    esi,esi
  4076d1:	xor    edi,edi
  4076d3:	xor    ebx,ebx
  4076d5:	jmp    rbp
  4076d7:	movsx  rcx,BYTE PTR [r13+0x6]
  4076dc:	shl    rcx,0x8
  4076e0:	movsx  rax,BYTE PTR [r13+0x5]
  4076e5:	shl    rax,0x10
  4076e9:	or     rax,rcx
  4076ec:	movsx  rdx,BYTE PTR [r13+0x4]
  4076f1:	shl    rdx,0x18
  4076f5:	or     rdx,rax
  4076f8:	movsx  rsi,BYTE PTR [r13+0x3]
  4076fd:	shl    rsi,0x20
  407701:	or     rsi,rdx
  407704:	movsx  rdi,BYTE PTR [r13+0x2]
  407709:	shl    rdi,0x28
  40770d:	or     rdi,rsi
  407710:	movsx  rbx,BYTE PTR [r13+0x1]
  407715:	shl    rbx,0x30
  407719:	or     rbx,rdi
  40771c:	movzx  ebp,BYTE PTR [r13+0x0]
  407721:	shl    rbp,0x38
  407725:	or     rbp,rbx
  407728:	movabs rdx,0x7465737400000000
  407732:	cmp    rbp,QWORD PTR [rsp+0x48]
  407737:	jae    4077eb <main@@Base+0x9cb>
  40773d:	movabs rax,0x6e616d6500000000
  407747:	cmp    rbp,rax
  40774a:	jae    407825 <main@@Base+0xa05>
  407750:	movabs rax,0x666c657800000000
  40775a:	cmp    rbp,rax
  40775d:	jae    407937 <main@@Base+0xb17>
  407763:	and    rbp,0xffffffffff000000
  40776a:	movabs rax,0x636f6c6f72000000
  407774:	cmp    rbp,rax
  407777:	je     407da8 <main@@Base+0xf88>
  40777d:	movabs rax,0x656e656d79000000
  407787:	cmp    rbp,rax
  40778a:	jne    40c144 <main@@Base+0x5324>
  407790:	mov    rax,r13
  407793:	cmp    r12,0x6
  407797:	jl     40977a <main@@Base+0x295a>
  40779d:	cmp    BYTE PTR [r13+0x5],0x22
  4077a2:	mov    rax,r13
  4077a5:	jne    40977a <main@@Base+0x295a>
  4077ab:	lea    rsi,[r13+0x6]
  4077af:	mov    rax,r15
  4077b2:	sub    rax,rsi
  4077b5:	cmp    rax,0x2
  4077b9:	jl     408cac <main@@Base+0x1e8c>
  4077bf:	cmp    BYTE PTR [rsi],0x20
  4077c2:	jg     408cba <main@@Base+0x1e9a>
  4077c8:	jne    408cac <main@@Base+0x1e8c>
  4077ce:	cmp    BYTE PTR [r13+0x7],0x20
  4077d3:	jle    408cac <main@@Base+0x1e8c>
  4077d9:	lea    rsi,[r13+0x7]
  4077dd:	cmp    rsi,r15
  4077e0:	jne    408cc3 <main@@Base+0x1ea3>
  4077e6:	jmp    408d68 <main@@Base+0x1f48>
  4077eb:	lea    rax,[rdx+0x66330000]
  4077f2:	cmp    rbp,rax
  4077f5:	jae    4078bc <main@@Base+0xa9c>
  4077fb:	cmp    rbp,QWORD PTR [rsp+0x48]
  407800:	jne    4079c5 <main@@Base+0xba5>
  407806:	lea    r12,[r13+0x8]
  40780a:	mov    rax,r15
  40780d:	sub    rax,r12
  407810:	cmp    rax,0x8
  407814:	jb     407ab4 <main@@Base+0xc94>
  40781a:	movbe  rcx,QWORD PTR [r12]
  407820:	jmp    407b33 <main@@Base+0xd13>
  407825:	cmp    rbp,rdx
  407828:	jae    407a1a <main@@Base+0xbfa>
  40782e:	movabs rax,0x706172656e745f6e
  407838:	cmp    rbp,rax
  40783b:	jae    407bc4 <main@@Base+0xda4>
  407841:	movabs rax,0xffffffff00000000
  40784b:	and    rbp,rax
  40784e:	movabs rax,0x6e616d6500000000
  407858:	cmp    rbp,rax
  40785b:	jne    40c144 <main@@Base+0x5324>
  407861:	mov    rax,r13
  407864:	cmp    r12,0x5
  407868:	jl     409946 <main@@Base+0x2b26>
  40786e:	cmp    BYTE PTR [r13+0x4],0x22
  407873:	mov    rax,r13
  407876:	jne    409946 <main@@Base+0x2b26>
  40787c:	lea    rsi,[r13+0x5]
  407880:	mov    rax,r15
  407883:	sub    rax,rsi
  407886:	cmp    rax,0x2
  40788a:	jl     408d9b <main@@Base+0x1f7b>
  407890:	cmp    BYTE PTR [rsi],0x20
  407893:	jg     408da9 <main@@Base+0x1f89>
  407899:	jne    408d9b <main@@Base+0x1f7b>
  40789f:	cmp    BYTE PTR [r13+0x6],0x20
  4078a4:	jle    408d9b <main@@Base+0x1f7b>
  4078aa:	lea    rsi,[r13+0x6]
  4078ae:	cmp    rsi,r15
  4078b1:	jne    408db2 <main@@Base+0x1f92>
  4078b7:	jmp    408eb0 <main@@Base+0x2090>
  4078bc:	lea    rcx,[rdx+0x68617368]
  4078c3:	cmp    rbp,rcx
  4078c6:	jae    407a8f <main@@Base+0xc6f>
  4078cc:	and    rbp,0xffffffffffff0000
  4078d3:	cmp    rbp,rax
  4078d6:	jne    40c144 <main@@Base+0x5324>
  4078dc:	mov    rbx,r13
  4078df:	cmp    r12,0x7
  4078e3:	jl     409205 <main@@Base+0x23e5>
  4078e9:	cmp    BYTE PTR [r13+0x6],0x22
  4078ee:	mov    rbx,r13
  4078f1:	jne    409205 <main@@Base+0x23e5>
  4078f7:	lea    rsi,[r13+0x7]
  4078fb:	mov    rax,r15
  4078fe:	sub    rax,rsi
  407901:	cmp    rax,0x2
  407905:	jl     40834b <main@@Base+0x152b>
  40790b:	cmp    BYTE PTR [rsi],0x20
  40790e:	jg     408359 <main@@Base+0x1539>
  407914:	jne    40834b <main@@Base+0x152b>
  40791a:	cmp    BYTE PTR [r13+0x8],0x20
  40791f:	jle    40834b <main@@Base+0x152b>
  407925:	lea    rsi,[r13+0x8]
  407929:	cmp    rsi,r15
  40792c:	jne    408362 <main@@Base+0x1542>
  407932:	jmp    4083fe <main@@Base+0x15de>
  407937:	mov    rax,rbp
  40793a:	shr    rax,0x34
  40793e:	cmp    rax,0x686
  407944:	ja     407be8 <main@@Base+0xdc8>
  40794a:	movabs rax,0xffffffff00000000
  407954:	and    rbp,rax
  407957:	movabs rax,0x666c657800000000
  407961:	cmp    rbp,rax
  407964:	jne    40c144 <main@@Base+0x5324>
  40796a:	mov    rbx,r13
  40796d:	cmp    r12,0x5
  407971:	jl     40998e <main@@Base+0x2b6e>
  407977:	cmp    BYTE PTR [r13+0x4],0x22
  40797c:	mov    rbx,r13
  40797f:	jne    40998e <main@@Base+0x2b6e>
  407985:	lea    rsi,[r13+0x5]
  407989:	mov    rax,r15
  40798c:	sub    rax,rsi
  40798f:	cmp    rax,0x2
  407993:	jl     408dfd <main@@Base+0x1fdd>
  407999:	cmp    BYTE PTR [rsi],0x20
  40799c:	jg     408e0b <main@@Base+0x1feb>
  4079a2:	jne    408dfd <main@@Base+0x1fdd>
  4079a8:	cmp    BYTE PTR [r13+0x6],0x20
  4079ad:	jle    408dfd <main@@Base+0x1fdd>
  4079b3:	lea    rsi,[r13+0x6]
  4079b7:	cmp    rsi,r15
  4079ba:	jne    408e14 <main@@Base+0x1ff4>
  4079c0:	jmp    408ece <main@@Base+0x20ae>
  4079c5:	lea    rcx,[rdx+0x656d7074]
  4079cc:	cmp    rbp,rcx
  4079cf:	jae    407c76 <main@@Base+0xe56>
  4079d5:	movabs rax,0x74657374626f6f6c
  4079df:	cmp    rbp,rax
  4079e2:	je     4080a3 <main@@Base+0x1283>
  4079e8:	movabs rax,0x7465737462617365
  4079f2:	cmp    rbp,rax
  4079f5:	jne    40c144 <main@@Base+0x5324>
  4079fb:	lea    r12,[r13+0x8]
  4079ff:	mov    rax,r15
  407a02:	sub    rax,r12
  407a05:	cmp    rax,0x8
  407a09:	jb     408428 <main@@Base+0x1608>
  407a0f:	movbe  rcx,QWORD PTR [r12]
  407a15:	jmp    4084a4 <main@@Base+0x1684>
  407a1a:	mov    rbx,rbp
  407a1d:	and    rbx,0xffffffffff000000
  407a24:	lea    rax,[rdx+0x34000000]
  407a2b:	cmp    rbx,rax
  407a2e:	jne    407cae <main@@Base+0xe8e>
  407a34:	mov    rbx,r13
  407a37:	cmp    r12,0x6
  407a3b:	jl     4092c1 <main@@Base+0x24a1>
  407a41:	cmp    BYTE PTR [r13+0x5],0x22
  407a46:	mov    rbx,r13
  407a49:	jne    4092c1 <main@@Base+0x24a1>
  407a4f:	lea    rsi,[r13+0x6]
  407a53:	mov    rax,r15
  407a56:	sub    rax,rsi
  407a59:	cmp    rax,0x2
  407a5d:	jl     4083ad <main@@Base+0x158d>
  407a63:	cmp    BYTE PTR [rsi],0x20
  407a66:	jg     4083bb <main@@Base+0x159b>
  407a6c:	jne    4083ad <main@@Base+0x158d>
  407a72:	cmp    BYTE PTR [r13+0x7],0x20
  407a77:	jle    4083ad <main@@Base+0x158d>
  407a7d:	lea    rsi,[r13+0x7]
  407a81:	cmp    rsi,r15
  407a84:	jne    4083c0 <main@@Base+0x15a0>
  407a8a:	jmp    408413 <main@@Base+0x15f3>
  407a8f:	jne    407d22 <main@@Base+0xf02>
  407a95:	lea    r12,[r13+0x8]
  407a99:	mov    rax,r15
  407a9c:	sub    rax,r12
  407a9f:	cmp    rax,0x8
  407aa3:	jb     407e03 <main@@Base+0xfe3>
  407aa9:	movbe  rcx,QWORD PTR [r12]
  407aaf:	jmp    407e82 <main@@Base+0x1062>
  407ab4:	lea    rcx,[rax-0x1]
  407ab8:	cmp    rcx,0x6
  407abc:	ja     40de5c <main@@Base+0x703c>
  407ac2:	lea    rdx,[rip+0x2a6d3]        # 43219c <_IO_stdin_used@@Base+0x19c>
  407ac9:	mov    rsi,rdx
  407acc:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  407ad0:	add    rdx,rsi
  407ad3:	xor    r8d,r8d
  407ad6:	xor    ecx,ecx
  407ad8:	xor    esi,esi
  407ada:	xor    edi,edi
  407adc:	xor    ebx,ebx
  407ade:	xor    ebp,ebp
  407ae0:	jmp    rdx
  407ae2:	movsx  r8,BYTE PTR [r13+0xe]
  407ae7:	shl    r8,0x8
  407aeb:	movsx  rcx,BYTE PTR [r13+0xd]
  407af0:	shl    rcx,0x10
  407af4:	or     rcx,r8
  407af7:	movsx  rsi,BYTE PTR [r13+0xc]
  407afc:	shl    rsi,0x18
  407b00:	or     rsi,rcx
  407b03:	movsx  rdi,BYTE PTR [r13+0xb]
  407b08:	shl    rdi,0x20
  407b0c:	or     rdi,rsi
  407b0f:	movsx  rbx,BYTE PTR [r13+0xa]
  407b14:	shl    rbx,0x28
  407b18:	or     rbx,rdi
  407b1b:	movsx  rbp,BYTE PTR [r13+0x9]
  407b20:	shl    rbp,0x30
  407b24:	or     rbp,rbx
  407b27:	movzx  ecx,BYTE PTR [r12]
  407b2c:	shl    rcx,0x38
  407b30:	or     rcx,rbp
  407b33:	movabs rdx,0x796f66737472696d
  407b3d:	cmp    rcx,rdx
  407b40:	ja     407d63 <main@@Base+0xf43>
  407b46:	movabs rdx,0x796f66736f727465
  407b50:	cmp    rcx,rdx
  407b53:	je     4080fe <main@@Base+0x12de>
  407b59:	movabs rdx,0x796f66626f6f6c73
  407b63:	cmp    rcx,rdx
  407b66:	jne    40de5c <main@@Base+0x703c>
  407b6c:	cmp    rax,0x9
  407b70:	jl     40de5c <main@@Base+0x703c>
  407b76:	cmp    BYTE PTR [r13+0x10],0x22
  407b7b:	jne    40de5c <main@@Base+0x703c>
  407b81:	lea    rsi,[r13+0x11]
  407b85:	mov    rax,r15
  407b88:	sub    rax,rsi
  407b8b:	cmp    rax,0x2
  407b8f:	jl     409192 <main@@Base+0x2372>
  407b95:	cmp    BYTE PTR [rsi],0x20
  407b98:	jg     4091a0 <main@@Base+0x2380>
  407b9e:	jne    409192 <main@@Base+0x2372>
  407ba4:	cmp    BYTE PTR [r13+0x12],0x20
  407ba9:	jle    409192 <main@@Base+0x2372>
  407baf:	add    r13,0x12
  407bb3:	mov    rsi,r13
  407bb6:	cmp    rsi,r15
  407bb9:	jne    4091a9 <main@@Base+0x2389>
  407bbf:	jmp    40948e <main@@Base+0x266e>
  407bc4:	jne    407efd <main@@Base+0x10dd>
  407bca:	lea    rsi,[r13+0x8]
  407bce:	mov    rax,r15
  407bd1:	sub    rax,rsi
  407bd4:	cmp    rax,0x8
  407bd8:	jb     40813c <main@@Base+0x131c>
  407bde:	movbe  rax,QWORD PTR [rsi]
  407be3:	jmp    4081b8 <main@@Base+0x1398>
  407be8:	movabs rax,0x696e76656e746f72
  407bf2:	cmp    rbp,rax
  407bf5:	jae    407f69 <main@@Base+0x1149>
  407bfb:	movabs rax,0xffff000000000000
  407c05:	and    rbp,rax
  407c08:	movabs rax,0x6870000000000000
  407c12:	cmp    rbp,rax
  407c15:	jne    40c144 <main@@Base+0x5324>
  407c1b:	mov    rbx,r13
  407c1e:	cmp    r12,0x3
  407c22:	jl     40ab64 <main@@Base+0x3d44>
  407c28:	cmp    BYTE PTR [r13+0x2],0x22
  407c2d:	mov    rbx,r13
  407c30:	jne    40ab64 <main@@Base+0x3d44>
  407c36:	lea    rsi,[r13+0x3]
  407c3a:	mov    rax,r15
  407c3d:	sub    rax,rsi
  407c40:	cmp    rax,0x2
  407c44:	jl     4094a3 <main@@Base+0x2683>
  407c4a:	cmp    BYTE PTR [rsi],0x20
  407c4d:	jg     4094b1 <main@@Base+0x2691>
  407c53:	jne    4094a3 <main@@Base+0x2683>
  407c59:	cmp    BYTE PTR [r13+0x4],0x20
  407c5e:	jle    4094a3 <main@@Base+0x2683>
  407c64:	lea    rsi,[r13+0x4]
  407c68:	cmp    rsi,r15
  407c6b:	jne    4094ba <main@@Base+0x269a>
  407c71:	jmp    4095c1 <main@@Base+0x27a1>
  407c76:	lea    rax,[rdx+0x66000000]
  407c7d:	cmp    rbp,rax
  407c80:	jae    407f8e <main@@Base+0x116e>
  407c86:	cmp    rbp,rcx
  407c89:	jne    40c144 <main@@Base+0x5324>
  407c8f:	lea    r12,[r13+0x8]
  407c93:	mov    rax,r15
  407c96:	sub    rax,r12
  407c99:	cmp    rax,0x8
  407c9d:	jb     40882b <main@@Base+0x1a0b>
  407ca3:	movbe  rcx,QWORD PTR [r12]
  407ca9:	jmp    4088a7 <main@@Base+0x1a87>
  407cae:	mov    rax,rbp
  407cb1:	movabs rcx,0xffffffff00000000
  407cbb:	and    rax,rcx
  407cbe:	cmp    rax,rdx
  407cc1:	jne    409c64 <main@@Base+0x2e44>
  407cc7:	mov    rax,r13
  407cca:	cmp    r12,0x5
  407cce:	jl     409c2c <main@@Base+0x2e0c>
  407cd4:	cmp    BYTE PTR [r13+0x4],0x22
  407cd9:	mov    rax,r13
  407cdc:	jne    409c2c <main@@Base+0x2e0c>
  407ce2:	lea    rsi,[r13+0x5]
  407ce6:	mov    rax,r15
  407ce9:	sub    rax,rsi
  407cec:	cmp    rax,0x2
  407cf0:	jl     408e5f <main@@Base+0x203f>
  407cf6:	cmp    BYTE PTR [rsi],0x20
  407cf9:	jg     408e6d <main@@Base+0x204d>
  407cff:	jne    408e5f <main@@Base+0x203f>
  407d05:	cmp    BYTE PTR [r13+0x6],0x20
  407d0a:	jle    408e5f <main@@Base+0x203f>
  407d10:	lea    rsi,[r13+0x6]
  407d14:	cmp    rsi,r15
  407d17:	jne    408e72 <main@@Base+0x2052>
  407d1d:	jmp    408ee3 <main@@Base+0x20c3>
  407d22:	movabs rax,0x766563746f725f6f
  407d2c:	cmp    rbp,rax
  407d2f:	jae    408003 <main@@Base+0x11e3>
  407d35:	lea    rax,[rdx+0x6e657374]
  407d3c:	cmp    rbp,rax
  407d3f:	jne    40c144 <main@@Base+0x5324>
  407d45:	lea    rsi,[r13+0x8]
  407d49:	mov    rax,r15
  407d4c:	sub    rax,rsi
  407d4f:	cmp    rax,0x8
  407d53:	jb     40890d <main@@Base+0x1aed>
  407d59:	movbe  rax,QWORD PTR [rsi]
  407d5e:	jmp    408989 <main@@Base+0x1b69>
  407d63:	movabs rax,0x796f667461626c65
  407d6d:	cmp    rcx,rax
  407d70:	je     40811d <main@@Base+0x12fd>
  407d76:	movabs rax,0x796f66737472696e
  407d80:	cmp    rcx,rax
  407d83:	jne    40de5c <main@@Base+0x703c>
  407d89:	lea    r12,[r13+0x10]
  407d8d:	mov    rax,r15
  407d90:	sub    rax,r12
  407d93:	cmp    rax,0x8
  407d97:	jb     40850d <main@@Base+0x16ed>
  407d9d:	movbe  rcx,QWORD PTR [r12]
  407da3:	jmp    40858c <main@@Base+0x176c>
  407da8:	mov    rbx,r13
  407dab:	cmp    r12,0x6
  407daf:	jl     4097c2 <main@@Base+0x29a2>
  407db5:	cmp    BYTE PTR [r13+0x5],0x22
  407dba:	mov    rbx,r13
  407dbd:	jne    4097c2 <main@@Base+0x29a2>
  407dc3:	lea    rsi,[r13+0x6]
  407dc7:	mov    rax,r15
  407dca:	sub    rax,rsi
  407dcd:	cmp    rax,0x2
  407dd1:	jl     408d0e <main@@Base+0x1eee>
  407dd7:	cmp    BYTE PTR [rsi],0x20
  407dda:	jg     408d1c <main@@Base+0x1efc>
  407de0:	jne    408d0e <main@@Base+0x1eee>
  407de6:	cmp    BYTE PTR [r13+0x7],0x20
  407deb:	jle    408d0e <main@@Base+0x1eee>
  407df1:	lea    rsi,[r13+0x7]
  407df5:	cmp    rsi,r15
  407df8:	jne    408d21 <main@@Base+0x1f01>
  407dfe:	jmp    408d86 <main@@Base+0x1f66>
  407e03:	lea    rcx,[rax-0x1]
  407e07:	cmp    rcx,0x6
  407e0b:	ja     40de5c <main@@Base+0x703c>
  407e11:	lea    rdx,[rip+0x2a288]        # 4320a0 <_IO_stdin_used@@Base+0xa0>
  407e18:	mov    rsi,rdx
  407e1b:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  407e1f:	add    rdx,rsi
  407e22:	xor    r8d,r8d
  407e25:	xor    ecx,ecx
  407e27:	xor    esi,esi
  407e29:	xor    edi,edi
  407e2b:	xor    ebp,ebp
  407e2d:	xor    ebx,ebx
  407e2f:	jmp    rdx
  407e31:	movsx  r8,BYTE PTR [r13+0xe]
  407e36:	shl    r8,0x8
  407e3a:	movsx  rcx,BYTE PTR [r13+0xd]
  407e3f:	shl    rcx,0x10
  407e43:	or     rcx,r8
  407e46:	movsx  rsi,BYTE PTR [r13+0xc]
  407e4b:	shl    rsi,0x18
  407e4f:	or     rsi,rcx
  407e52:	movsx  rdi,BYTE PTR [r13+0xb]
  407e57:	shl    rdi,0x20
  407e5b:	or     rdi,rsi
  407e5e:	movsx  rbp,BYTE PTR [r13+0xa]
  407e63:	shl    rbp,0x28
  407e67:	or     rbp,rdi
  407e6a:	movsx  rbx,BYTE PTR [r13+0x9]
  407e6f:	shl    rbx,0x30
  407e73:	or     rbx,rbp
  407e76:	movzx  ecx,BYTE PTR [r12]
  407e7b:	shl    rcx,0x38
  407e7f:	or     rcx,rbx
  407e82:	movabs rdx,0x7336345f666e7631
  407e8c:	cmp    rcx,rdx
  407e8f:	jae    408028 <main@@Base+0x1208>
  407e95:	movabs rdx,0x7333325f666e7631
  407e9f:	cmp    rcx,rdx
  407ea2:	jne    40de5c <main@@Base+0x703c>
  407ea8:	cmp    rax,0x9
  407eac:	jl     40965d <main@@Base+0x283d>
  407eb2:	cmp    BYTE PTR [r13+0x10],0x22
  407eb7:	jne    40965d <main@@Base+0x283d>
  407ebd:	lea    rsi,[r13+0x11]
  407ec1:	mov    rax,r15
  407ec4:	sub    rax,rsi
  407ec7:	cmp    rax,0x2
  407ecb:	jl     409600 <main@@Base+0x27e0>
  407ed1:	cmp    BYTE PTR [rsi],0x20
  407ed4:	jg     40960e <main@@Base+0x27ee>
  407eda:	jne    409600 <main@@Base+0x27e0>
  407ee0:	cmp    BYTE PTR [r13+0x12],0x20
  407ee5:	jle    409600 <main@@Base+0x27e0>
  407eeb:	lea    rsi,[r13+0x12]
  407eef:	cmp    rsi,r15
  407ef2:	jne    409617 <main@@Base+0x27f7>
  407ef8:	jmp    409757 <main@@Base+0x2937>
  407efd:	shr    rbp,0x28
  407f01:	cmp    rbp,0x706f73
  407f08:	jne    40c144 <main@@Base+0x5324>
  407f0e:	mov    rbx,r13
  407f11:	cmp    r12,0x4
  407f15:	jl     40ac78 <main@@Base+0x3e58>
  407f1b:	cmp    BYTE PTR [r13+0x3],0x22
  407f20:	mov    rbx,r13
  407f23:	jne    40ac78 <main@@Base+0x3e58>
  407f29:	lea    rsi,[r13+0x4]
  407f2d:	mov    rax,r15
  407f30:	sub    rax,rsi
  407f33:	cmp    rax,0x2
  407f37:	jl     409505 <main@@Base+0x26e5>
  407f3d:	cmp    BYTE PTR [rsi],0x20
  407f40:	jg     409513 <main@@Base+0x26f3>
  407f46:	jne    409505 <main@@Base+0x26e5>
  407f4c:	cmp    BYTE PTR [r13+0x5],0x20
  407f51:	jle    409505 <main@@Base+0x26e5>
  407f57:	lea    rsi,[r13+0x5]
  407f5b:	cmp    rsi,r15
  407f5e:	jne    40951c <main@@Base+0x26fc>
  407f64:	jmp    4095d6 <main@@Base+0x27b6>
  407f69:	jne    4081ea <main@@Base+0x13ca>
  407f6f:	lea    r12,[r13+0x8]
  407f73:	mov    rax,r15
  407f76:	sub    rax,r12
  407f79:	cmp    rax,0x8
  407f7d:	jb     4089bf <main@@Base+0x1b9f>
  407f83:	movbe  rcx,QWORD PTR [r12]
  407f89:	jmp    408a3b <main@@Base+0x1c1b>
  407f8e:	mov    rcx,rbp
  407f91:	and    rcx,0xffffffffffff0000
  407f98:	add    rdx,0x66320000
  407f9f:	cmp    rcx,rdx
  407fa2:	jne    408265 <main@@Base+0x1445>
  407fa8:	mov    rbx,r13
  407fab:	cmp    r12,0x7
  407faf:	jl     40b783 <main@@Base+0x4963>
  407fb5:	cmp    BYTE PTR [r13+0x6],0x22
  407fba:	mov    rbx,r13
  407fbd:	jne    40b783 <main@@Base+0x4963>
  407fc3:	lea    rsi,[r13+0x7]
  407fc7:	mov    rax,r15
  407fca:	sub    rax,rsi
  407fcd:	cmp    rax,0x2
  407fd1:	jl     409567 <main@@Base+0x2747>
  407fd7:	cmp    BYTE PTR [rsi],0x20
  407fda:	jg     409575 <main@@Base+0x2755>
  407fe0:	jne    409567 <main@@Base+0x2747>
  407fe6:	cmp    BYTE PTR [r13+0x8],0x20
  407feb:	jle    409567 <main@@Base+0x2747>
  407ff1:	lea    rsi,[r13+0x8]
  407ff5:	cmp    rsi,r15
  407ff8:	jne    40957a <main@@Base+0x275a>
  407ffe:	jmp    4095eb <main@@Base+0x27cb>
  408003:	jne    40c144 <main@@Base+0x5324>
  408009:	lea    r12,[r13+0x8]
  40800d:	mov    rax,r15
  408010:	sub    rax,r12
  408013:	cmp    rax,0x8
  408017:	jb     408aa1 <main@@Base+0x1c81>
  40801d:	movbe  rcx,QWORD PTR [r12]
  408023:	jmp    408b20 <main@@Base+0x1d00>
  408028:	movabs rdx,0x7533325f666e7630
  408032:	cmp    rcx,rdx
  408035:	ja     4082d0 <main@@Base+0x14b0>
  40803b:	movabs rdx,0x7336345f666e7631
  408045:	cmp    rcx,rdx
  408048:	jne    40de5c <main@@Base+0x703c>
  40804e:	cmp    rax,0x9
  408052:	jl     40a022 <main@@Base+0x3202>
  408058:	cmp    BYTE PTR [r13+0x10],0x22
  40805d:	jne    40a022 <main@@Base+0x3202>
  408063:	lea    rsi,[r13+0x11]
  408067:	mov    rax,r15
  40806a:	sub    rax,rsi
  40806d:	cmp    rax,0x2
  408071:	jl     409fc5 <main@@Base+0x31a5>
  408077:	cmp    BYTE PTR [rsi],0x20
  40807a:	jg     409fd3 <main@@Base+0x31b3>
  408080:	jne    409fc5 <main@@Base+0x31a5>
  408086:	cmp    BYTE PTR [r13+0x12],0x20
  40808b:	jle    409fc5 <main@@Base+0x31a5>
  408091:	lea    rsi,[r13+0x12]
  408095:	cmp    rsi,r15
  408098:	jne    409fdc <main@@Base+0x31bc>
  40809e:	jmp    40a1d8 <main@@Base+0x33b8>
  4080a3:	mov    rbx,r13
  4080a6:	cmp    r12,0x9
  4080aa:	jl     40a638 <main@@Base+0x3818>
  4080b0:	cmp    BYTE PTR [r13+0x8],0x22
  4080b5:	mov    rbx,r13
  4080b8:	jne    40a638 <main@@Base+0x3818>
  4080be:	lea    rsi,[r13+0x9]
  4080c2:	mov    rax,r15
  4080c5:	sub    rax,rsi
  4080c8:	cmp    rax,0x2
  4080cc:	jl     409123 <main@@Base+0x2303>
  4080d2:	cmp    BYTE PTR [rsi],0x20
  4080d5:	jg     409131 <main@@Base+0x2311>
  4080db:	jne    409123 <main@@Base+0x2303>
  4080e1:	cmp    BYTE PTR [r13+0xa],0x20
  4080e6:	jle    409123 <main@@Base+0x2303>
  4080ec:	lea    rsi,[r13+0xa]
  4080f0:	cmp    rsi,r15
  4080f3:	jne    409136 <main@@Base+0x2316>
  4080f9:	jmp    40917d <main@@Base+0x235d>
  4080fe:	lea    r12,[r13+0x10]
  408102:	mov    rax,r15
  408105:	sub    rax,r12
  408108:	cmp    rax,0x8
  40810c:	jb     4085f8 <main@@Base+0x17d8>
  408112:	movbe  rcx,QWORD PTR [r12]
  408118:	jmp    408674 <main@@Base+0x1854>
  40811d:	lea    r12,[r13+0x10]
  408121:	mov    rax,r15
  408124:	sub    rax,r12
  408127:	cmp    rax,0x8
  40812b:	jb     4086e3 <main@@Base+0x18c3>
  408131:	movbe  rcx,QWORD PTR [r12]
  408137:	jmp    40875f <main@@Base+0x193f>
  40813c:	dec    rax
  40813f:	cmp    rax,0x6
  408143:	ja     4089b7 <main@@Base+0x1b97>
  408149:	lea    rcx,[rip+0x2a110]        # 432260 <_IO_stdin_used@@Base+0x260>
  408150:	mov    rdx,rcx
  408153:	movsxd rcx,DWORD PTR [rcx+rax*4]
  408157:	add    rcx,rdx
  40815a:	xor    r8d,r8d
  40815d:	xor    eax,eax
  40815f:	xor    edx,edx
  408161:	xor    edi,edi
  408163:	xor    ebp,ebp
  408165:	xor    ebx,ebx
  408167:	jmp    rcx
  408169:	movsx  r8,BYTE PTR [r13+0xe]
  40816e:	shl    r8,0x8
  408172:	movsx  rax,BYTE PTR [r13+0xd]
  408177:	shl    rax,0x10
  40817b:	or     rax,r8
  40817e:	movsx  rdx,BYTE PTR [r13+0xc]
  408183:	shl    rdx,0x18
  408187:	or     rdx,rax
  40818a:	movsx  rdi,BYTE PTR [r13+0xb]
  40818f:	shl    rdi,0x20
  408193:	or     rdi,rdx
  408196:	movsx  rbp,BYTE PTR [r13+0xa]
  40819b:	shl    rbp,0x28
  40819f:	or     rbp,rdi
  4081a2:	movsx  rbx,BYTE PTR [r13+0x9]
  4081a7:	shl    rbx,0x30
  4081ab:	or     rbx,rbp
  4081ae:	movzx  eax,BYTE PTR [rsi]
  4081b1:	shl    rax,0x38
  4081b5:	or     rax,rbx
  4081b8:	movabs rcx,0x616d657370616365
  4081c2:	cmp    rax,rcx
  4081c5:	jne    4089b7 <main@@Base+0x1b97>
  4081cb:	lea    r12,[r13+0x10]
  4081cf:	mov    rax,r15
  4081d2:	sub    rax,r12
  4081d5:	cmp    rax,0x8
  4081d9:	jb     408b52 <main@@Base+0x1d32>
  4081df:	movbe  rcx,QWORD PTR [r12]
  4081e5:	jmp    408bce <main@@Base+0x1dae>
  4081ea:	movabs rax,0xffffffff00000000
  4081f4:	and    rbp,rax
  4081f7:	movabs rax,0x6d616e6100000000
  408201:	cmp    rbp,rax
  408204:	jne    40c144 <main@@Base+0x5324>
  40820a:	mov    rbx,r13
  40820d:	cmp    r12,0x5
  408211:	jl     40bf8b <main@@Base+0x516b>
  408217:	cmp    BYTE PTR [r13+0x4],0x22
  40821c:	mov    rbx,r13
  40821f:	jne    40bf8b <main@@Base+0x516b>
  408225:	lea    rsi,[r13+0x5]
  408229:	mov    rax,r15
  40822c:	sub    rax,rsi
  40822f:	cmp    rax,0x2
  408233:	jl     409edf <main@@Base+0x30bf>
  408239:	cmp    BYTE PTR [rsi],0x20
  40823c:	jg     409eed <main@@Base+0x30cd>
  408242:	jne    409edf <main@@Base+0x30bf>
  408248:	cmp    BYTE PTR [r13+0x6],0x20
  40824d:	jle    409edf <main@@Base+0x30bf>
  408253:	lea    rsi,[r13+0x6]
  408257:	cmp    rsi,r15
  40825a:	jne    409ef6 <main@@Base+0x30d6>
  408260:	jmp    409f9b <main@@Base+0x317b>
  408265:	and    rbp,0xffffffffff000000
  40826c:	cmp    rbp,rax
  40826f:	jne    40c144 <main@@Base+0x5324>
  408275:	mov    rbx,r13
  408278:	cmp    r12,0x6
  40827c:	jl     40c0ba <main@@Base+0x529a>
  408282:	cmp    BYTE PTR [r13+0x5],0x22
  408287:	mov    rbx,r13
  40828a:	jne    40c0ba <main@@Base+0x529a>
  408290:	lea    rsi,[r13+0x6]
  408294:	mov    rax,r15
  408297:	sub    rax,rsi
  40829a:	cmp    rax,0x2
  40829e:	jl     409f41 <main@@Base+0x3121>
  4082a4:	cmp    BYTE PTR [rsi],0x20
  4082a7:	jg     409f4f <main@@Base+0x312f>
  4082ad:	jne    409f41 <main@@Base+0x3121>
  4082b3:	cmp    BYTE PTR [r13+0x7],0x20
  4082b8:	jle    409f41 <main@@Base+0x3121>
  4082be:	lea    rsi,[r13+0x7]
  4082c2:	cmp    rsi,r15
  4082c5:	jne    409f54 <main@@Base+0x3134>
  4082cb:	jmp    409fb0 <main@@Base+0x3190>
  4082d0:	movabs rdx,0x7536345f666e7631
  4082da:	cmp    rcx,rdx
  4082dd:	je     408ef8 <main@@Base+0x20d8>
  4082e3:	movabs rdx,0x7533325f666e7631
  4082ed:	cmp    rcx,rdx
  4082f0:	jne    40de5c <main@@Base+0x703c>
  4082f6:	cmp    rax,0x9
  4082fa:	jl     40a902 <main@@Base+0x3ae2>
  408300:	cmp    BYTE PTR [r13+0x10],0x22
  408305:	jne    40a902 <main@@Base+0x3ae2>
  40830b:	lea    rsi,[r13+0x11]
  40830f:	mov    rax,r15
  408312:	sub    rax,rsi
  408315:	cmp    rax,0x2
  408319:	jl     40a8a5 <main@@Base+0x3a85>
  40831f:	cmp    BYTE PTR [rsi],0x20
  408322:	jg     40a8b3 <main@@Base+0x3a93>
  408328:	jne    40a8a5 <main@@Base+0x3a85>
  40832e:	cmp    BYTE PTR [r13+0x12],0x20
  408333:	jle    40a8a5 <main@@Base+0x3a85>
  408339:	lea    rsi,[r13+0x12]
  40833d:	cmp    rsi,r15
  408340:	jne    40a8bc <main@@Base+0x3a9c>
  408346:	jmp    40b80d <main@@Base+0x49ed>
  40834b:	mov    rdi,r14
  40834e:	mov    rdx,r15
  408351:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408356:	mov    rsi,rax
  408359:	cmp    rsi,r15
  40835c:	je     4083fe <main@@Base+0x15de>
  408362:	cmp    BYTE PTR [rsi],0x3a
  408365:	jne    4083fe <main@@Base+0x15de>
  40836b:	lea    rbx,[rsi+0x1]
  40836f:	mov    rax,r15
  408372:	sub    rax,rbx
  408375:	cmp    rax,0x2
  408379:	jl     4091f4 <main@@Base+0x23d4>
  40837f:	cmp    BYTE PTR [rbx],0x20
  408382:	jg     409205 <main@@Base+0x23e5>
  408388:	jne    4091f4 <main@@Base+0x23d4>
  40838e:	cmp    BYTE PTR [rsi+0x2],0x20
  408392:	jle    4091f4 <main@@Base+0x23d4>
  408398:	add    rsi,0x2
  40839c:	mov    rbx,rsi
  40839f:	cmp    r13,rbx
  4083a2:	jne    40920e <main@@Base+0x23ee>
  4083a8:	jmp    40c144 <main@@Base+0x5324>
  4083ad:	mov    rdi,r14
  4083b0:	mov    rdx,r15
  4083b3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4083b8:	mov    rsi,rax
  4083bb:	cmp    rsi,r15
  4083be:	je     408413 <main@@Base+0x15f3>
  4083c0:	cmp    BYTE PTR [rsi],0x3a
  4083c3:	jne    408413 <main@@Base+0x15f3>
  4083c5:	lea    rbx,[rsi+0x1]
  4083c9:	mov    rax,r15
  4083cc:	sub    rax,rbx
  4083cf:	cmp    rax,0x2
  4083d3:	jl     4092a6 <main@@Base+0x2486>
  4083d9:	cmp    BYTE PTR [rbx],0x20
  4083dc:	jg     4092b7 <main@@Base+0x2497>
  4083e2:	jne    4092a6 <main@@Base+0x2486>
  4083e8:	cmp    BYTE PTR [rsi+0x2],0x20
  4083ec:	jle    4092a6 <main@@Base+0x2486>
  4083f2:	add    rsi,0x2
  4083f6:	mov    rbx,rsi
  4083f9:	jmp    4092b7 <main@@Base+0x2497>
  4083fe:	mov    rdi,r14
  408401:	mov    rdx,r15
  408404:	mov    ecx,0x4
  408409:	call   422690 <flatcc_json_parser_set_error@@Base>
  40840e:	jmp    409202 <main@@Base+0x23e2>
  408413:	mov    rdi,r14
  408416:	mov    rdx,r15
  408419:	mov    ecx,0x4
  40841e:	call   422690 <flatcc_json_parser_set_error@@Base>
  408423:	jmp    4092b4 <main@@Base+0x2494>
  408428:	lea    rcx,[rax-0x1]
  40842c:	cmp    rcx,0x6
  408430:	ja     40de5c <main@@Base+0x703c>
  408436:	lea    rdx,[rip+0x29d27]        # 432164 <_IO_stdin_used@@Base+0x164>
  40843d:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  408441:	add    rbp,rdx
  408444:	xor    r8d,r8d
  408447:	xor    ecx,ecx
  408449:	xor    esi,esi
  40844b:	xor    edi,edi
  40844d:	xor    ebx,ebx
  40844f:	xor    edx,edx
  408451:	jmp    rbp
  408453:	movsx  r8,BYTE PTR [r13+0xe]
  408458:	shl    r8,0x8
  40845c:	movsx  rcx,BYTE PTR [r13+0xd]
  408461:	shl    rcx,0x10
  408465:	or     rcx,r8
  408468:	movsx  rsi,BYTE PTR [r13+0xc]
  40846d:	shl    rsi,0x18
  408471:	or     rsi,rcx
  408474:	movsx  rdi,BYTE PTR [r13+0xb]
  408479:	shl    rdi,0x20
  40847d:	or     rdi,rsi
  408480:	movsx  rbx,BYTE PTR [r13+0xa]
  408485:	shl    rbx,0x28
  408489:	or     rbx,rdi
  40848c:	movsx  rdx,BYTE PTR [r13+0x9]
  408491:	shl    rdx,0x30
  408495:	or     rdx,rbx
  408498:	movzx  ecx,BYTE PTR [r12]
  40849d:	shl    rcx,0x38
  4084a1:	or     rcx,rdx
  4084a4:	shr    rcx,0x30
  4084a8:	cmp    rcx,0x3634
  4084af:	jne    40de5c <main@@Base+0x703c>
  4084b5:	cmp    rax,0x3
  4084b9:	jl     40de5c <main@@Base+0x703c>
  4084bf:	cmp    BYTE PTR [r13+0xa],0x22
  4084c4:	jne    40de5c <main@@Base+0x703c>
  4084ca:	lea    rsi,[r13+0xb]
  4084ce:	mov    rax,r15
  4084d1:	sub    rax,rsi
  4084d4:	cmp    rax,0x2
  4084d8:	jl     4098d6 <main@@Base+0x2ab6>
  4084de:	cmp    BYTE PTR [rsi],0x20
  4084e1:	jg     4098e4 <main@@Base+0x2ac4>
  4084e7:	jne    4098d6 <main@@Base+0x2ab6>
  4084ed:	cmp    BYTE PTR [r13+0xc],0x20
  4084f2:	jle    4098d6 <main@@Base+0x2ab6>
  4084f8:	add    r13,0xc
  4084fc:	mov    rsi,r13
  4084ff:	cmp    rsi,r15
  408502:	jne    4098ed <main@@Base+0x2acd>
  408508:	jmp    409d1e <main@@Base+0x2efe>
  40850d:	lea    rcx,[rax-0x1]
  408511:	cmp    rcx,0x6
  408515:	ja     40de5c <main@@Base+0x703c>
  40851b:	lea    rdx,[rip+0x29cb2]        # 4321d4 <_IO_stdin_used@@Base+0x1d4>
  408522:	mov    rsi,rdx
  408525:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408529:	add    rdx,rsi
  40852c:	xor    r8d,r8d
  40852f:	xor    ecx,ecx
  408531:	xor    esi,esi
  408533:	xor    edi,edi
  408535:	xor    ebx,ebx
  408537:	xor    ebp,ebp
  408539:	jmp    rdx
  40853b:	movsx  r8,BYTE PTR [r13+0x16]
  408540:	shl    r8,0x8
  408544:	movsx  rcx,BYTE PTR [r13+0x15]
  408549:	shl    rcx,0x10
  40854d:	or     rcx,r8
  408550:	movsx  rsi,BYTE PTR [r13+0x14]
  408555:	shl    rsi,0x18
  408559:	or     rsi,rcx
  40855c:	movsx  rdi,BYTE PTR [r13+0x13]
  408561:	shl    rdi,0x20
  408565:	or     rdi,rsi
  408568:	movsx  rbx,BYTE PTR [r13+0x12]
  40856d:	shl    rbx,0x28
  408571:	or     rbx,rdi
  408574:	movsx  rbp,BYTE PTR [r13+0x11]
  408579:	shl    rbp,0x30
  40857d:	or     rbp,rbx
  408580:	movzx  ecx,BYTE PTR [r12]
  408585:	shl    rcx,0x38
  408589:	or     rcx,rbp
  40858c:	mov    rdx,rcx
  40858f:	shr    rdx,0x30
  408593:	cmp    rdx,0x6732
  40859a:	jne    4087c5 <main@@Base+0x19a5>
  4085a0:	cmp    rax,0x3
  4085a4:	jl     40de5c <main@@Base+0x703c>
  4085aa:	cmp    BYTE PTR [r13+0x12],0x22
  4085af:	jne    40de5c <main@@Base+0x703c>
  4085b5:	lea    rsi,[r13+0x13]
  4085b9:	mov    rax,r15
  4085bc:	sub    rax,rsi
  4085bf:	cmp    rax,0x2
  4085c3:	jl     409d82 <main@@Base+0x2f62>
  4085c9:	cmp    BYTE PTR [rsi],0x20
  4085cc:	jg     409d90 <main@@Base+0x2f70>
  4085d2:	jne    409d82 <main@@Base+0x2f62>
  4085d8:	cmp    BYTE PTR [r13+0x14],0x20
  4085dd:	jle    409d82 <main@@Base+0x2f62>
  4085e3:	add    r13,0x14
  4085e7:	mov    rsi,r13
  4085ea:	cmp    rsi,r15
  4085ed:	jne    409d99 <main@@Base+0x2f79>
  4085f3:	jmp    409ea0 <main@@Base+0x3080>
  4085f8:	lea    rcx,[rax-0x1]
  4085fc:	cmp    rcx,0x6
  408600:	ja     40de5c <main@@Base+0x703c>
  408606:	lea    rdx,[rip+0x29be3]        # 4321f0 <_IO_stdin_used@@Base+0x1f0>
  40860d:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  408611:	add    rbp,rdx
  408614:	xor    r8d,r8d
  408617:	xor    ecx,ecx
  408619:	xor    esi,esi
  40861b:	xor    edi,edi
  40861d:	xor    ebx,ebx
  40861f:	xor    edx,edx
  408621:	jmp    rbp
  408623:	movsx  r8,BYTE PTR [r13+0x16]
  408628:	shl    r8,0x8
  40862c:	movsx  rcx,BYTE PTR [r13+0x15]
  408631:	shl    rcx,0x10
  408635:	or     rcx,r8
  408638:	movsx  rsi,BYTE PTR [r13+0x14]
  40863d:	shl    rsi,0x18
  408641:	or     rsi,rcx
  408644:	movsx  rdi,BYTE PTR [r13+0x13]
  408649:	shl    rdi,0x20
  40864d:	or     rdi,rsi
  408650:	movsx  rbx,BYTE PTR [r13+0x12]
  408655:	shl    rbx,0x28
  408659:	or     rbx,rdi
  40865c:	movsx  rdx,BYTE PTR [r13+0x11]
  408661:	shl    rdx,0x30
  408665:	or     rdx,rbx
  408668:	movzx  ecx,BYTE PTR [r12]
  40866d:	shl    rcx,0x38
  408671:	or     rcx,rdx
  408674:	shr    rcx,0x8
  408678:	movabs rdx,0x64737472756374
  408682:	cmp    rcx,rdx
  408685:	jne    40de5c <main@@Base+0x703c>
  40868b:	cmp    rax,0x8
  40868f:	jl     40de5c <main@@Base+0x703c>
  408695:	cmp    BYTE PTR [r13+0x17],0x22
  40869a:	jne    40de5c <main@@Base+0x703c>
  4086a0:	lea    rsi,[r13+0x18]
  4086a4:	mov    rax,r15
  4086a7:	sub    rax,rsi
  4086aa:	cmp    rax,0x2
  4086ae:	jl     409de4 <main@@Base+0x2fc4>
  4086b4:	cmp    BYTE PTR [rsi],0x20
  4086b7:	jg     409df2 <main@@Base+0x2fd2>
  4086bd:	jne    409de4 <main@@Base+0x2fc4>
  4086c3:	cmp    BYTE PTR [r13+0x19],0x20
  4086c8:	jle    409de4 <main@@Base+0x2fc4>
  4086ce:	add    r13,0x19
  4086d2:	mov    rsi,r13
  4086d5:	cmp    rsi,r15
  4086d8:	jne    409dfb <main@@Base+0x2fdb>
  4086de:	jmp    409eb5 <main@@Base+0x3095>
  4086e3:	lea    rcx,[rax-0x1]
  4086e7:	cmp    rcx,0x6
  4086eb:	ja     40de5c <main@@Base+0x703c>
  4086f1:	lea    rdx,[rip+0x29ac0]        # 4321b8 <_IO_stdin_used@@Base+0x1b8>
  4086f8:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  4086fc:	add    rbp,rdx
  4086ff:	xor    r8d,r8d
  408702:	xor    ecx,ecx
  408704:	xor    esi,esi
  408706:	xor    edi,edi
  408708:	xor    ebx,ebx
  40870a:	xor    edx,edx
  40870c:	jmp    rbp
  40870e:	movsx  r8,BYTE PTR [r13+0x16]
  408713:	shl    r8,0x8
  408717:	movsx  rcx,BYTE PTR [r13+0x15]
  40871c:	shl    rcx,0x10
  408720:	or     rcx,r8
  408723:	movsx  rsi,BYTE PTR [r13+0x14]
  408728:	shl    rsi,0x18
  40872c:	or     rsi,rcx
  40872f:	movsx  rdi,BYTE PTR [r13+0x13]
  408734:	shl    rdi,0x20
  408738:	or     rdi,rsi
  40873b:	movsx  rbx,BYTE PTR [r13+0x12]
  408740:	shl    rbx,0x28
  408744:	or     rbx,rdi
  408747:	movsx  rdx,BYTE PTR [r13+0x11]
  40874c:	shl    rdx,0x30
  408750:	or     rdx,rbx
  408753:	movzx  ecx,BYTE PTR [r12]
  408758:	shl    rcx,0x38
  40875c:	or     rcx,rdx
  40875f:	shr    rcx,0x38
  408763:	cmp    rcx,0x73
  408767:	jne    40de5c <main@@Base+0x703c>
  40876d:	cmp    rax,0x2
  408771:	jl     40de5c <main@@Base+0x703c>
  408777:	cmp    BYTE PTR [r13+0x11],0x22
  40877c:	jne    40de5c <main@@Base+0x703c>
  408782:	lea    rsi,[r13+0x12]
  408786:	mov    rax,r15
  408789:	sub    rax,rsi
  40878c:	cmp    rax,0x2
  408790:	jl     409e46 <main@@Base+0x3026>
  408796:	cmp    BYTE PTR [rsi],0x20
  408799:	jg     409e54 <main@@Base+0x3034>
  40879f:	jne    409e46 <main@@Base+0x3026>
  4087a5:	cmp    BYTE PTR [r13+0x13],0x20
  4087aa:	jle    409e46 <main@@Base+0x3026>
  4087b0:	add    r13,0x13
  4087b4:	mov    rsi,r13
  4087b7:	cmp    rsi,r15
  4087ba:	jne    409e59 <main@@Base+0x3039>
  4087c0:	jmp    409eca <main@@Base+0x30aa>
  4087c5:	shr    rcx,0x38
  4087c9:	cmp    rcx,0x67
  4087cd:	jne    40de5c <main@@Base+0x703c>
  4087d3:	cmp    rax,0x2
  4087d7:	jl     40de5c <main@@Base+0x703c>
  4087dd:	cmp    BYTE PTR [r13+0x11],0x22
  4087e2:	jne    40de5c <main@@Base+0x703c>
  4087e8:	lea    rsi,[r13+0x12]
  4087ec:	mov    rax,r15
  4087ef:	sub    rax,rsi
  4087f2:	cmp    rax,0x2
  4087f6:	jl     40b84a <main@@Base+0x4a2a>
  4087fc:	cmp    BYTE PTR [rsi],0x20
  4087ff:	jg     40b858 <main@@Base+0x4a38>
  408805:	jne    40b84a <main@@Base+0x4a2a>
  40880b:	cmp    BYTE PTR [r13+0x13],0x20
  408810:	jle    40b84a <main@@Base+0x4a2a>
  408816:	add    r13,0x13
  40881a:	mov    rsi,r13
  40881d:	cmp    rsi,r15
  408820:	jne    40b861 <main@@Base+0x4a41>
  408826:	jmp    40b94b <main@@Base+0x4b2b>
  40882b:	lea    rcx,[rax-0x1]
  40882f:	cmp    rcx,0x6
  408833:	ja     40de5c <main@@Base+0x703c>
  408839:	lea    rdx,[rip+0x298ec]        # 43212c <_IO_stdin_used@@Base+0x12c>
  408840:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  408844:	add    rbp,rdx
  408847:	xor    r8d,r8d
  40884a:	xor    ecx,ecx
  40884c:	xor    esi,esi
  40884e:	xor    edi,edi
  408850:	xor    ebx,ebx
  408852:	xor    edx,edx
  408854:	jmp    rbp
  408856:	movsx  r8,BYTE PTR [r13+0xe]
  40885b:	shl    r8,0x8
  40885f:	movsx  rcx,BYTE PTR [r13+0xd]
  408864:	shl    rcx,0x10
  408868:	or     rcx,r8
  40886b:	movsx  rsi,BYTE PTR [r13+0xc]
  408870:	shl    rsi,0x18
  408874:	or     rsi,rcx
  408877:	movsx  rdi,BYTE PTR [r13+0xb]
  40887c:	shl    rdi,0x20
  408880:	or     rdi,rsi
  408883:	movsx  rbx,BYTE PTR [r13+0xa]
  408888:	shl    rbx,0x28
  40888c:	or     rbx,rdi
  40888f:	movsx  rdx,BYTE PTR [r13+0x9]
  408894:	shl    rdx,0x30
  408898:	or     rdx,rbx
  40889b:	movzx  ecx,BYTE PTR [r12]
  4088a0:	shl    rcx,0x38
  4088a4:	or     rcx,rdx
  4088a7:	shr    rcx,0x38
  4088ab:	cmp    rcx,0x79
  4088af:	jne    40de5c <main@@Base+0x703c>
  4088b5:	cmp    rax,0x2
  4088b9:	jl     40de5c <main@@Base+0x703c>
  4088bf:	cmp    BYTE PTR [r13+0x9],0x22
  4088c4:	jne    40de5c <main@@Base+0x703c>
  4088ca:	lea    rsi,[r13+0xa]
  4088ce:	mov    rax,r15
  4088d1:	sub    rax,rsi
  4088d4:	cmp    rax,0x2
  4088d8:	jl     40a11c <main@@Base+0x32fc>
  4088de:	cmp    BYTE PTR [rsi],0x20
  4088e1:	jg     40a12a <main@@Base+0x330a>
  4088e7:	jne    40a11c <main@@Base+0x32fc>
  4088ed:	cmp    BYTE PTR [r13+0xb],0x20
  4088f2:	jle    40a11c <main@@Base+0x32fc>
  4088f8:	add    r13,0xb
  4088fc:	mov    rsi,r13
  4088ff:	cmp    rsi,r15
  408902:	jne    40a133 <main@@Base+0x3313>
  408908:	jmp    40a1ed <main@@Base+0x33cd>
  40890d:	dec    rax
  408910:	cmp    rax,0x6
  408914:	ja     4089b7 <main@@Base+0x1b97>
  40891a:	lea    rcx,[rip+0x29747]        # 432068 <_IO_stdin_used@@Base+0x68>
  408921:	mov    rdx,rcx
  408924:	movsxd rcx,DWORD PTR [rcx+rax*4]
  408928:	add    rcx,rdx
  40892b:	xor    r8d,r8d
  40892e:	xor    eax,eax
  408930:	xor    edx,edx
  408932:	xor    edi,edi
  408934:	xor    ebp,ebp
  408936:	xor    ebx,ebx
  408938:	jmp    rcx
  40893a:	movsx  r8,BYTE PTR [r13+0xe]
  40893f:	shl    r8,0x8
  408943:	movsx  rax,BYTE PTR [r13+0xd]
  408948:	shl    rax,0x10
  40894c:	or     rax,r8
  40894f:	movsx  rdx,BYTE PTR [r13+0xc]
  408954:	shl    rdx,0x18
  408958:	or     rdx,rax
  40895b:	movsx  rdi,BYTE PTR [r13+0xb]
  408960:	shl    rdi,0x20
  408964:	or     rdi,rdx
  408967:	movsx  rbp,BYTE PTR [r13+0xa]
  40896c:	shl    rbp,0x28
  408970:	or     rbp,rdi
  408973:	movsx  rbx,BYTE PTR [r13+0x9]
  408978:	shl    rbx,0x30
  40897c:	or     rbx,rbp
  40897f:	movzx  eax,BYTE PTR [rsi]
  408982:	shl    rax,0x38
  408986:	or     rax,rbx
  408989:	movabs rcx,0x6564666c61746275
  408993:	cmp    rax,rcx
  408996:	jne    4089b7 <main@@Base+0x1b97>
  408998:	lea    r12,[r13+0x10]
  40899c:	mov    rax,r15
  40899f:	sub    rax,r12
  4089a2:	cmp    rax,0x8
  4089a6:	jb     408f4d <main@@Base+0x212d>
  4089ac:	movbe  rcx,QWORD PTR [r12]
  4089b2:	jmp    408fc9 <main@@Base+0x21a9>
  4089b7:	mov    rdi,r14
  4089ba:	jmp    40de62 <main@@Base+0x7042>
  4089bf:	lea    rcx,[rax-0x1]
  4089c3:	cmp    rcx,0x6
  4089c7:	ja     40de5c <main@@Base+0x703c>
  4089cd:	lea    rdx,[rip+0x298c4]        # 432298 <_IO_stdin_used@@Base+0x298>
  4089d4:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  4089d8:	add    rbp,rdx
  4089db:	xor    r8d,r8d
  4089de:	xor    ecx,ecx
  4089e0:	xor    esi,esi
  4089e2:	xor    edi,edi
  4089e4:	xor    ebx,ebx
  4089e6:	xor    edx,edx
  4089e8:	jmp    rbp
  4089ea:	movsx  r8,BYTE PTR [r13+0xe]
  4089ef:	shl    r8,0x8
  4089f3:	movsx  rcx,BYTE PTR [r13+0xd]
  4089f8:	shl    rcx,0x10
  4089fc:	or     rcx,r8
  4089ff:	movsx  rsi,BYTE PTR [r13+0xc]
  408a04:	shl    rsi,0x18
  408a08:	or     rsi,rcx
  408a0b:	movsx  rdi,BYTE PTR [r13+0xb]
  408a10:	shl    rdi,0x20
  408a14:	or     rdi,rsi
  408a17:	movsx  rbx,BYTE PTR [r13+0xa]
  408a1c:	shl    rbx,0x28
  408a20:	or     rbx,rdi
  408a23:	movsx  rdx,BYTE PTR [r13+0x9]
  408a28:	shl    rdx,0x30
  408a2c:	or     rdx,rbx
  408a2f:	movzx  ecx,BYTE PTR [r12]
  408a34:	shl    rcx,0x38
  408a38:	or     rcx,rdx
  408a3b:	shr    rcx,0x38
  408a3f:	cmp    rcx,0x79
  408a43:	jne    40de5c <main@@Base+0x703c>
  408a49:	cmp    rax,0x2
  408a4d:	jl     40de5c <main@@Base+0x703c>
  408a53:	cmp    BYTE PTR [r13+0x9],0x22
  408a58:	jne    40de5c <main@@Base+0x703c>
  408a5e:	lea    rsi,[r13+0xa]
  408a62:	mov    rax,r15
  408a65:	sub    rax,rsi
  408a68:	cmp    rax,0x2
  408a6c:	jl     40a17e <main@@Base+0x335e>
  408a72:	cmp    BYTE PTR [rsi],0x20
  408a75:	jg     40a18c <main@@Base+0x336c>
  408a7b:	jne    40a17e <main@@Base+0x335e>
  408a81:	cmp    BYTE PTR [r13+0xb],0x20
  408a86:	jle    40a17e <main@@Base+0x335e>
  408a8c:	add    r13,0xb
  408a90:	mov    rsi,r13
  408a93:	cmp    rsi,r15
  408a96:	jne    40a191 <main@@Base+0x3371>
  408a9c:	jmp    40a202 <main@@Base+0x33e2>
  408aa1:	lea    rcx,[rax-0x1]
  408aa5:	cmp    rcx,0x6
  408aa9:	ja     40de5c <main@@Base+0x703c>
  408aaf:	lea    rdx,[rip+0x2957a]        # 432030 <_IO_stdin_used@@Base+0x30>
  408ab6:	mov    rsi,rdx
  408ab9:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  408abd:	add    rdx,rsi
  408ac0:	xor    r8d,r8d
  408ac3:	xor    ecx,ecx
  408ac5:	xor    esi,esi
  408ac7:	xor    edi,edi
  408ac9:	xor    ebx,ebx
  408acb:	xor    ebp,ebp
  408acd:	jmp    rdx
  408acf:	movsx  r8,BYTE PTR [r13+0xe]
  408ad4:	shl    r8,0x8
  408ad8:	movsx  rcx,BYTE PTR [r13+0xd]
  408add:	shl    rcx,0x10
  408ae1:	or     rcx,r8
  408ae4:	movsx  rsi,BYTE PTR [r13+0xc]
  408ae9:	shl    rsi,0x18
  408aed:	or     rsi,rcx
  408af0:	movsx  rdi,BYTE PTR [r13+0xb]
  408af5:	shl    rdi,0x20
  408af9:	or     rdi,rsi
  408afc:	movsx  rbx,BYTE PTR [r13+0xa]
  408b01:	shl    rbx,0x28
  408b05:	or     rbx,rdi
  408b08:	movsx  rbp,BYTE PTR [r13+0x9]
  408b0d:	shl    rbp,0x30
  408b11:	or     rbp,rbx
  408b14:	movzx  ecx,BYTE PTR [r12]
  408b19:	shl    rcx,0x38
  408b1d:	or     rcx,rbp
  408b20:	movabs rdx,0x665f646f75626c65
  408b2a:	cmp    rcx,rdx
  408b2d:	jne    408c3d <main@@Base+0x1e1d>
  408b33:	lea    r12,[r13+0x10]
  408b37:	mov    rax,r15
  408b3a:	sub    rax,r12
  408b3d:	cmp    rax,0x8
  408b41:	jb     409041 <main@@Base+0x2221>
  408b47:	movbe  rcx,QWORD PTR [r12]
  408b4d:	jmp    4090bd <main@@Base+0x229d>
  408b52:	lea    rcx,[rax-0x1]
  408b56:	cmp    rcx,0x6
  408b5a:	ja     40de5c <main@@Base+0x703c>
  408b60:	lea    rdx,[rip+0x29715]        # 43227c <_IO_stdin_used@@Base+0x27c>
  408b67:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  408b6b:	add    rbx,rdx
  408b6e:	xor    r8d,r8d
  408b71:	xor    ecx,ecx
  408b73:	xor    esi,esi
  408b75:	xor    edi,edi
  408b77:	xor    ebp,ebp
  408b79:	xor    edx,edx
  408b7b:	jmp    rbx
  408b7d:	movsx  r8,BYTE PTR [r13+0x16]
  408b82:	shl    r8,0x8
  408b86:	movsx  rcx,BYTE PTR [r13+0x15]
  408b8b:	shl    rcx,0x10
  408b8f:	or     rcx,r8
  408b92:	movsx  rsi,BYTE PTR [r13+0x14]
  408b97:	shl    rsi,0x18
  408b9b:	or     rsi,rcx
  408b9e:	movsx  rdi,BYTE PTR [r13+0x13]
  408ba3:	shl    rdi,0x20
  408ba7:	or     rdi,rsi
  408baa:	movsx  rbp,BYTE PTR [r13+0x12]
  408baf:	shl    rbp,0x28
  408bb3:	or     rbp,rdi
  408bb6:	movsx  rdx,BYTE PTR [r13+0x11]
  408bbb:	shl    rdx,0x30
  408bbf:	or     rdx,rbp
  408bc2:	movzx  ecx,BYTE PTR [r12]
  408bc7:	shl    rcx,0x38
  408bcb:	or     rcx,rdx
  408bce:	shr    rcx,0x18
  408bd2:	movabs rdx,0x5f74657374
  408bdc:	cmp    rcx,rdx
  408bdf:	jne    40de5c <main@@Base+0x703c>
  408be5:	cmp    rax,0x6
  408be9:	jl     40de5c <main@@Base+0x703c>
  408bef:	cmp    BYTE PTR [r13+0x15],0x22
  408bf4:	jne    40de5c <main@@Base+0x703c>
  408bfa:	lea    rsi,[r13+0x16]
  408bfe:	mov    rax,r15
  408c01:	sub    rax,rsi
  408c04:	cmp    rax,0x2
  408c08:	jl     40a217 <main@@Base+0x33f7>
  408c0e:	cmp    BYTE PTR [rsi],0x20
  408c11:	jg     40a225 <main@@Base+0x3405>
  408c17:	jne    40a217 <main@@Base+0x33f7>
  408c1d:	cmp    BYTE PTR [r13+0x17],0x20
  408c22:	jle    40a217 <main@@Base+0x33f7>
  408c28:	add    r13,0x17
  408c2c:	mov    rsi,r13
  408c2f:	cmp    rsi,r15
  408c32:	jne    40a22a <main@@Base+0x340a>
  408c38:	jmp    40a272 <main@@Base+0x3452>
  408c3d:	shr    rcx,0x8
  408c41:	movabs rdx,0x665f6c6f6e6773
  408c4b:	cmp    rcx,rdx
  408c4e:	jne    40de5c <main@@Base+0x703c>
  408c54:	cmp    rax,0x8
  408c58:	jl     40de5c <main@@Base+0x703c>
  408c5e:	cmp    BYTE PTR [r13+0xf],0x22
  408c63:	jne    40de5c <main@@Base+0x703c>
  408c69:	lea    rsi,[r13+0x10]
  408c6d:	mov    rax,r15
  408c70:	sub    rax,rsi
  408c73:	cmp    rax,0x2
  408c77:	jl     40ba86 <main@@Base+0x4c66>
  408c7d:	cmp    BYTE PTR [rsi],0x20
  408c80:	jg     40ba94 <main@@Base+0x4c74>
  408c86:	jne    40ba86 <main@@Base+0x4c66>
  408c8c:	cmp    BYTE PTR [r13+0x11],0x20
  408c91:	jle    40ba86 <main@@Base+0x4c66>
  408c97:	add    r13,0x11
  408c9b:	mov    rsi,r13
  408c9e:	cmp    rsi,r15
  408ca1:	jne    40ba99 <main@@Base+0x4c79>
  408ca7:	jmp    40bae0 <main@@Base+0x4cc0>
  408cac:	mov    rdi,r14
  408caf:	mov    rdx,r15
  408cb2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408cb7:	mov    rsi,rax
  408cba:	cmp    rsi,r15
  408cbd:	je     408d68 <main@@Base+0x1f48>
  408cc3:	cmp    BYTE PTR [rsi],0x3a
  408cc6:	jne    408d68 <main@@Base+0x1f48>
  408ccc:	lea    rax,[rsi+0x1]
  408cd0:	mov    rcx,r15
  408cd3:	sub    rcx,rax
  408cd6:	cmp    rcx,0x2
  408cda:	jl     40976c <main@@Base+0x294c>
  408ce0:	cmp    BYTE PTR [rax],0x20
  408ce3:	jg     40977a <main@@Base+0x295a>
  408ce9:	jne    40976c <main@@Base+0x294c>
  408cef:	cmp    BYTE PTR [rsi+0x2],0x20
  408cf3:	jle    40976c <main@@Base+0x294c>
  408cf9:	add    rsi,0x2
  408cfd:	mov    rax,rsi
  408d00:	cmp    r13,rax
  408d03:	jne    409783 <main@@Base+0x2963>
  408d09:	jmp    40c144 <main@@Base+0x5324>
  408d0e:	mov    rdi,r14
  408d11:	mov    rdx,r15
  408d14:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408d19:	mov    rsi,rax
  408d1c:	cmp    rsi,r15
  408d1f:	je     408d86 <main@@Base+0x1f66>
  408d21:	cmp    BYTE PTR [rsi],0x3a
  408d24:	jne    408d86 <main@@Base+0x1f66>
  408d26:	lea    rbx,[rsi+0x1]
  408d2a:	mov    rax,r15
  408d2d:	sub    rax,rbx
  408d30:	cmp    rax,0x2
  408d34:	jl     4097b1 <main@@Base+0x2991>
  408d3a:	cmp    BYTE PTR [rbx],0x20
  408d3d:	jg     4097c2 <main@@Base+0x29a2>
  408d43:	jne    4097b1 <main@@Base+0x2991>
  408d49:	cmp    BYTE PTR [rsi+0x2],0x20
  408d4d:	jle    4097b1 <main@@Base+0x2991>
  408d53:	add    rsi,0x2
  408d57:	mov    rbx,rsi
  408d5a:	cmp    r13,rbx
  408d5d:	jne    4097cb <main@@Base+0x29ab>
  408d63:	jmp    40c144 <main@@Base+0x5324>
  408d68:	mov    rdi,r14
  408d6b:	mov    rdx,r15
  408d6e:	mov    ecx,0x4
  408d73:	call   422690 <flatcc_json_parser_set_error@@Base>
  408d78:	cmp    r13,rax
  408d7b:	jne    409783 <main@@Base+0x2963>
  408d81:	jmp    40c144 <main@@Base+0x5324>
  408d86:	mov    rdi,r14
  408d89:	mov    rdx,r15
  408d8c:	mov    ecx,0x4
  408d91:	call   422690 <flatcc_json_parser_set_error@@Base>
  408d96:	jmp    4097bf <main@@Base+0x299f>
  408d9b:	mov    rdi,r14
  408d9e:	mov    rdx,r15
  408da1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408da6:	mov    rsi,rax
  408da9:	cmp    rsi,r15
  408dac:	je     408eb0 <main@@Base+0x2090>
  408db2:	cmp    BYTE PTR [rsi],0x3a
  408db5:	jne    408eb0 <main@@Base+0x2090>
  408dbb:	lea    rax,[rsi+0x1]
  408dbf:	mov    rcx,r15
  408dc2:	sub    rcx,rax
  408dc5:	cmp    rcx,0x2
  408dc9:	jl     409938 <main@@Base+0x2b18>
  408dcf:	cmp    BYTE PTR [rax],0x20
  408dd2:	jg     409946 <main@@Base+0x2b26>
  408dd8:	jne    409938 <main@@Base+0x2b18>
  408dde:	cmp    BYTE PTR [rsi+0x2],0x20
  408de2:	jle    409938 <main@@Base+0x2b18>
  408de8:	add    rsi,0x2
  408dec:	mov    rax,rsi
  408def:	cmp    r13,rax
  408df2:	jne    40994f <main@@Base+0x2b2f>
  408df8:	jmp    40c144 <main@@Base+0x5324>
  408dfd:	mov    rdi,r14
  408e00:	mov    rdx,r15
  408e03:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408e08:	mov    rsi,rax
  408e0b:	cmp    rsi,r15
  408e0e:	je     408ece <main@@Base+0x20ae>
  408e14:	cmp    BYTE PTR [rsi],0x3a
  408e17:	jne    408ece <main@@Base+0x20ae>
  408e1d:	lea    rbx,[rsi+0x1]
  408e21:	mov    rax,r15
  408e24:	sub    rax,rbx
  408e27:	cmp    rax,0x2
  408e2b:	jl     40997d <main@@Base+0x2b5d>
  408e31:	cmp    BYTE PTR [rbx],0x20
  408e34:	jg     40998e <main@@Base+0x2b6e>
  408e3a:	jne    40997d <main@@Base+0x2b5d>
  408e40:	cmp    BYTE PTR [rsi+0x2],0x20
  408e44:	jle    40997d <main@@Base+0x2b5d>
  408e4a:	add    rsi,0x2
  408e4e:	mov    rbx,rsi
  408e51:	cmp    r13,rbx
  408e54:	jne    409997 <main@@Base+0x2b77>
  408e5a:	jmp    40c144 <main@@Base+0x5324>
  408e5f:	mov    rdi,r14
  408e62:	mov    rdx,r15
  408e65:	call   422710 <flatcc_json_parser_space_ext@@Base>
  408e6a:	mov    rsi,rax
  408e6d:	cmp    rsi,r15
  408e70:	je     408ee3 <main@@Base+0x20c3>
  408e72:	cmp    BYTE PTR [rsi],0x3a
  408e75:	jne    408ee3 <main@@Base+0x20c3>
  408e77:	lea    rax,[rsi+0x1]
  408e7b:	mov    rcx,r15
  408e7e:	sub    rcx,rax
  408e81:	cmp    rcx,0x2
  408e85:	jl     409c14 <main@@Base+0x2df4>
  408e8b:	cmp    BYTE PTR [rax],0x20
  408e8e:	jg     409c22 <main@@Base+0x2e02>
  408e94:	jne    409c14 <main@@Base+0x2df4>
  408e9a:	cmp    BYTE PTR [rsi+0x2],0x20
  408e9e:	jle    409c14 <main@@Base+0x2df4>
  408ea4:	add    rsi,0x2
  408ea8:	mov    rax,rsi
  408eab:	jmp    409c22 <main@@Base+0x2e02>
  408eb0:	mov    rdi,r14
  408eb3:	mov    rdx,r15
  408eb6:	mov    ecx,0x4
  408ebb:	call   422690 <flatcc_json_parser_set_error@@Base>
  408ec0:	cmp    r13,rax
  408ec3:	jne    40994f <main@@Base+0x2b2f>
  408ec9:	jmp    40c144 <main@@Base+0x5324>
  408ece:	mov    rdi,r14
  408ed1:	mov    rdx,r15
  408ed4:	mov    ecx,0x4
  408ed9:	call   422690 <flatcc_json_parser_set_error@@Base>
  408ede:	jmp    40998b <main@@Base+0x2b6b>
  408ee3:	mov    rdi,r14
  408ee6:	mov    rdx,r15
  408ee9:	mov    ecx,0x4
  408eee:	call   422690 <flatcc_json_parser_set_error@@Base>
  408ef3:	jmp    409c22 <main@@Base+0x2e02>
  408ef8:	cmp    rax,0x9
  408efc:	jl     40aa59 <main@@Base+0x3c39>
  408f02:	cmp    BYTE PTR [r13+0x10],0x22
  408f07:	jne    40aa59 <main@@Base+0x3c39>
  408f0d:	lea    rsi,[r13+0x11]
  408f11:	mov    rax,r15
  408f14:	sub    rax,rsi
  408f17:	cmp    rax,0x2
  408f1b:	jl     40a9fc <main@@Base+0x3bdc>
  408f21:	cmp    BYTE PTR [rsi],0x20
  408f24:	jg     40aa0a <main@@Base+0x3bea>
  408f2a:	jne    40a9fc <main@@Base+0x3bdc>
  408f30:	cmp    BYTE PTR [r13+0x12],0x20
  408f35:	jle    40a9fc <main@@Base+0x3bdc>
  408f3b:	lea    rsi,[r13+0x12]
  408f3f:	cmp    rsi,r15
  408f42:	jne    40aa13 <main@@Base+0x3bf3>
  408f48:	jmp    40b822 <main@@Base+0x4a02>
  408f4d:	lea    rcx,[rax-0x1]
  408f51:	cmp    rcx,0x6
  408f55:	ja     40de5c <main@@Base+0x703c>
  408f5b:	lea    rdx,[rip+0x29122]        # 432084 <_IO_stdin_used@@Base+0x84>
  408f62:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  408f66:	add    rbp,rdx
  408f69:	xor    r8d,r8d
  408f6c:	xor    ecx,ecx
  408f6e:	xor    esi,esi
  408f70:	xor    edi,edi
  408f72:	xor    ebx,ebx
  408f74:	xor    edx,edx
  408f76:	jmp    rbp
  408f78:	movsx  r8,BYTE PTR [r13+0x16]
  408f7d:	shl    r8,0x8
  408f81:	movsx  rcx,BYTE PTR [r13+0x15]
  408f86:	shl    rcx,0x10
  408f8a:	or     rcx,r8
  408f8d:	movsx  rsi,BYTE PTR [r13+0x14]
  408f92:	shl    rsi,0x18
  408f96:	or     rsi,rcx
  408f99:	movsx  rdi,BYTE PTR [r13+0x13]
  408f9e:	shl    rdi,0x20
  408fa2:	or     rdi,rsi
  408fa5:	movsx  rbx,BYTE PTR [r13+0x12]
  408faa:	shl    rbx,0x28
  408fae:	or     rbx,rdi
  408fb1:	movsx  rdx,BYTE PTR [r13+0x11]
  408fb6:	shl    rdx,0x30
  408fba:	or     rdx,rbx
  408fbd:	movzx  ecx,BYTE PTR [r12]
  408fc2:	shl    rcx,0x38
  408fc6:	or     rcx,rdx
  408fc9:	movabs rdx,0xffffffff00000000
  408fd3:	and    rcx,rdx
  408fd6:	movabs rdx,0x6666657200000000
  408fe0:	cmp    rcx,rdx
  408fe3:	jne    40de5c <main@@Base+0x703c>
  408fe9:	cmp    rax,0x5
  408fed:	jl     40de5c <main@@Base+0x703c>
  408ff3:	cmp    BYTE PTR [r13+0x14],0x22
  408ff8:	jne    40de5c <main@@Base+0x703c>
  408ffe:	lea    rsi,[r13+0x15]
  409002:	mov    rax,r15
  409005:	sub    rax,rsi
  409008:	cmp    rax,0x2
  40900c:	jl     40baf5 <main@@Base+0x4cd5>
  409012:	cmp    BYTE PTR [rsi],0x20
  409015:	jg     40bb03 <main@@Base+0x4ce3>
  40901b:	jne    40baf5 <main@@Base+0x4cd5>
  409021:	cmp    BYTE PTR [r13+0x16],0x20
  409026:	jle    40baf5 <main@@Base+0x4cd5>
  40902c:	add    r13,0x16
  409030:	mov    rsi,r13
  409033:	cmp    rsi,r15
  409036:	jne    40bb0c <main@@Base+0x4cec>
  40903c:	jmp    40bbb1 <main@@Base+0x4d91>
  409041:	lea    rcx,[rax-0x1]
  409045:	cmp    rcx,0x6
  409049:	ja     40de5c <main@@Base+0x703c>
  40904f:	lea    rdx,[rip+0x28ff6]        # 43204c <_IO_stdin_used@@Base+0x4c>
  409056:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  40905a:	add    rbp,rdx
  40905d:	xor    r8d,r8d
  409060:	xor    ecx,ecx
  409062:	xor    esi,esi
  409064:	xor    edi,edi
  409066:	xor    ebx,ebx
  409068:	xor    edx,edx
  40906a:	jmp    rbp
  40906c:	movsx  r8,BYTE PTR [r13+0x16]
  409071:	shl    r8,0x8
  409075:	movsx  rcx,BYTE PTR [r13+0x15]
  40907a:	shl    rcx,0x10
  40907e:	or     rcx,r8
  409081:	movsx  rsi,BYTE PTR [r13+0x14]
  409086:	shl    rsi,0x18
  40908a:	or     rsi,rcx
  40908d:	movsx  rdi,BYTE PTR [r13+0x13]
  409092:	shl    rdi,0x20
  409096:	or     rdi,rsi
  409099:	movsx  rbx,BYTE PTR [r13+0x12]
  40909e:	shl    rbx,0x28
  4090a2:	or     rbx,rdi
  4090a5:	movsx  rdx,BYTE PTR [r13+0x11]
  4090aa:	shl    rdx,0x30
  4090ae:	or     rdx,rbx
  4090b1:	movzx  ecx,BYTE PTR [r12]
  4090b6:	shl    rcx,0x38
  4090ba:	or     rcx,rdx
  4090bd:	shr    rcx,0x38
  4090c1:	cmp    rcx,0x73
  4090c5:	jne    40de5c <main@@Base+0x703c>
  4090cb:	cmp    rax,0x2
  4090cf:	jl     40de5c <main@@Base+0x703c>
  4090d5:	cmp    BYTE PTR [r13+0x11],0x22
  4090da:	jne    40de5c <main@@Base+0x703c>
  4090e0:	lea    rsi,[r13+0x12]
  4090e4:	mov    rax,r15
  4090e7:	sub    rax,rsi
  4090ea:	cmp    rax,0x2
  4090ee:	jl     40bb57 <main@@Base+0x4d37>
  4090f4:	cmp    BYTE PTR [rsi],0x20
  4090f7:	jg     40bb65 <main@@Base+0x4d45>
  4090fd:	jne    40bb57 <main@@Base+0x4d37>
  409103:	cmp    BYTE PTR [r13+0x13],0x20
  409108:	jle    40bb57 <main@@Base+0x4d37>
  40910e:	add    r13,0x13
  409112:	mov    rsi,r13
  409115:	cmp    rsi,r15
  409118:	jne    40bb6a <main@@Base+0x4d4a>
  40911e:	jmp    40bbc6 <main@@Base+0x4da6>
  409123:	mov    rdi,r14
  409126:	mov    rdx,r15
  409129:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40912e:	mov    rsi,rax
  409131:	cmp    rsi,r15
  409134:	je     40917d <main@@Base+0x235d>
  409136:	cmp    BYTE PTR [rsi],0x3a
  409139:	jne    40917d <main@@Base+0x235d>
  40913b:	lea    rbx,[rsi+0x1]
  40913f:	mov    rax,r15
  409142:	sub    rax,rbx
  409145:	cmp    rax,0x2
  409149:	jl     40a627 <main@@Base+0x3807>
  40914f:	cmp    BYTE PTR [rbx],0x20
  409152:	jg     40a638 <main@@Base+0x3818>
  409158:	jne    40a627 <main@@Base+0x3807>
  40915e:	cmp    BYTE PTR [rsi+0x2],0x20
  409162:	jle    40a627 <main@@Base+0x3807>
  409168:	add    rsi,0x2
  40916c:	mov    rbx,rsi
  40916f:	cmp    r13,rbx
  409172:	jne    40a641 <main@@Base+0x3821>
  409178:	jmp    40c144 <main@@Base+0x5324>
  40917d:	mov    rdi,r14
  409180:	mov    rdx,r15
  409183:	mov    ecx,0x4
  409188:	call   422690 <flatcc_json_parser_set_error@@Base>
  40918d:	jmp    40a635 <main@@Base+0x3815>
  409192:	mov    rdi,r14
  409195:	mov    rdx,r15
  409198:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40919d:	mov    rsi,rax
  4091a0:	cmp    rsi,r15
  4091a3:	je     40948e <main@@Base+0x266e>
  4091a9:	cmp    BYTE PTR [rsi],0x3a
  4091ac:	jne    40948e <main@@Base+0x266e>
  4091b2:	lea    rbx,[rsi+0x1]
  4091b6:	mov    rax,r15
  4091b9:	sub    rax,rbx
  4091bc:	cmp    rax,0x2
  4091c0:	jl     40a781 <main@@Base+0x3961>
  4091c6:	cmp    BYTE PTR [rbx],0x20
  4091c9:	jg     40a792 <main@@Base+0x3972>
  4091cf:	jne    40a781 <main@@Base+0x3961>
  4091d5:	cmp    BYTE PTR [rsi+0x2],0x20
  4091d9:	jle    40a781 <main@@Base+0x3961>
  4091df:	add    rsi,0x2
  4091e3:	mov    rbx,rsi
  4091e6:	cmp    r12,rbx
  4091e9:	jne    40a79b <main@@Base+0x397b>
  4091ef:	jmp    40de5c <main@@Base+0x703c>
  4091f4:	mov    rdi,r14
  4091f7:	mov    rsi,rbx
  4091fa:	mov    rdx,r15
  4091fd:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409202:	mov    rbx,rax
  409205:	cmp    r13,rbx
  409208:	je     40c144 <main@@Base+0x5324>
  40920e:	mov    DWORD PTR [rsp+0x10],0x0
  409216:	mov    rdi,r14
  409219:	mov    rsi,rbx
  40921c:	mov    rdx,r15
  40921f:	lea    rcx,[rsp+0x10]
  409224:	call   424010 <flatcc_json_parser_float@@Base>
  409229:	mov    rbp,rax
  40922c:	cmp    rbx,rax
  40922f:	jne    409260 <main@@Base+0x2440>
  409231:	mov    rdi,r14
  409234:	mov    rsi,rbx
  409237:	mov    rdx,r15
  40923a:	lea    rcx,[rip+0x36fbf]        # 440200 <__data_start@@Base+0x150>
  409241:	lea    r8,[rsp+0x10]
  409246:	call   413790 <main@@Base+0xc970>
  40924b:	mov    rbp,rax
  40924e:	cmp    rax,rbx
  409251:	je     40fc63 <main@@Base+0x8e43>
  409257:	cmp    rbp,r15
  40925a:	je     40fc63 <main@@Base+0x8e43>
  409260:	vmovss xmm0,DWORD PTR [rsp+0x10]
  409266:	vucomiss xmm0,DWORD PTR [rip+0x28d9e]        # 43200c <_IO_stdin_used@@Base+0xc>
  40926e:	jne    40927d <main@@Base+0x245d>
  409270:	jp     40927d <main@@Base+0x245d>
  409272:	test   BYTE PTR [r14+0x10],0x2
  409277:	je     40de6d <main@@Base+0x704d>
  40927d:	mov    rdi,QWORD PTR [r14]
  409280:	mov    edx,0x4
  409285:	mov    esi,0x1b
  40928a:	mov    ecx,0x4
  40928f:	call   41f040 <flatcc_builder_table_add@@Base>
  409294:	test   rax,rax
  409297:	je     40fc63 <main@@Base+0x8e43>
  40929d:	mov    ecx,DWORD PTR [rsp+0x10]
  4092a1:	jmp    40a45f <main@@Base+0x363f>
  4092a6:	mov    rdi,r14
  4092a9:	mov    rsi,rbx
  4092ac:	mov    rdx,r15
  4092af:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4092b4:	mov    rbx,rax
  4092b7:	movabs rdx,0x7465737400000000
  4092c1:	cmp    r13,rbx
  4092c4:	je     40a311 <main@@Base+0x34f1>
  4092ca:	mov    rdi,QWORD PTR [r14]
  4092cd:	mov    esi,0x4
  4092d2:	mov    ecx,0x3fffffff
  4092d7:	mov    edx,0x2
  4092dc:	call   41d850 <flatcc_builder_start_vector@@Base>
  4092e1:	test   eax,eax
  4092e3:	jne    407511 <main@@Base+0x6f1>
  4092e9:	cmp    rbx,r15
  4092ec:	je     409319 <main@@Base+0x24f9>
  4092ee:	cmp    BYTE PTR [rbx],0x5b
  4092f1:	jne    409319 <main@@Base+0x24f9>
  4092f3:	lea    rax,[rbx+0x1]
  4092f7:	mov    rcx,r15
  4092fa:	sub    rcx,rax
  4092fd:	cmp    rcx,0x2
  409301:	jl     409350 <main@@Base+0x2530>
  409303:	cmp    BYTE PTR [rax],0x20
  409306:	jg     40935e <main@@Base+0x253e>
  409308:	jne    409350 <main@@Base+0x2530>
  40930a:	cmp    BYTE PTR [rbx+0x2],0x20
  40930e:	jle    409350 <main@@Base+0x2530>
  409310:	add    rbx,0x2
  409314:	mov    rax,rbx
  409317:	jmp    40935e <main@@Base+0x253e>
  409319:	mov    rdi,r14
  40931c:	mov    rsi,rbx
  40931f:	mov    rdx,r15
  409322:	mov    ecx,0x16
  409327:	call   422690 <flatcc_json_parser_set_error@@Base>
  40932c:	mov    rbp,rax
  40932f:	mov    rdi,QWORD PTR [r14]
  409332:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  409337:	mov    DWORD PTR [rsp+0x1c],eax
  40933b:	test   eax,eax
  40933d:	je     40fc63 <main@@Base+0x8e43>
  409343:	mov    rdi,QWORD PTR [r14]
  409346:	mov    esi,0x9
  40934b:	jmp    40a44d <main@@Base+0x362d>
  409350:	mov    rdi,r14
  409353:	mov    rsi,rax
  409356:	mov    rdx,r15
  409359:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40935e:	mov    rbx,r15
  409361:	cmp    rax,r15
  409364:	je     40939e <main@@Base+0x257e>
  409366:	cmp    BYTE PTR [rax],0x5d
  409369:	jne    40939b <main@@Base+0x257b>
  40936b:	lea    rbp,[rax+0x1]
  40936f:	mov    rcx,r15
  409372:	sub    rcx,rbp
  409375:	cmp    rcx,0x2
  409379:	jl     409d64 <main@@Base+0x2f44>
  40937f:	cmp    BYTE PTR [rbp+0x0],0x20
  409383:	jg     40932f <main@@Base+0x250f>
  409385:	jne    409d64 <main@@Base+0x2f44>
  40938b:	cmp    BYTE PTR [rax+0x2],0x20
  40938f:	jle    409d64 <main@@Base+0x2f44>
  409395:	add    rax,0x2
  409399:	jmp    40932c <main@@Base+0x250c>
  40939b:	mov    rbx,rax
  40939e:	mov    rdi,QWORD PTR [r14]
  4093a1:	mov    esi,0x1
  4093a6:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  4093ab:	test   rax,rax
  4093ae:	je     407511 <main@@Base+0x6f1>
  4093b4:	mov    rdi,r14
  4093b7:	mov    rsi,rbx
  4093ba:	mov    rdx,r15
  4093bd:	mov    rcx,rax
  4093c0:	call   411e90 <main@@Base+0xb070>
  4093c5:	mov    rcx,r15
  4093c8:	sub    rcx,rax
  4093cb:	cmp    rcx,0x2
  4093cf:	jl     4093eb <main@@Base+0x25cb>
  4093d1:	cmp    BYTE PTR [rax],0x20
  4093d4:	jg     4093f9 <main@@Base+0x25d9>
  4093d6:	jne    4093eb <main@@Base+0x25cb>
  4093d8:	cmp    BYTE PTR [rax+0x1],0x20
  4093dc:	jle    4093eb <main@@Base+0x25cb>
  4093de:	inc    rax
  4093e1:	cmp    rax,r15
  4093e4:	jne    409402 <main@@Base+0x25e2>
  4093e6:	jmp    409d33 <main@@Base+0x2f13>
  4093eb:	mov    rdi,r14
  4093ee:	mov    rsi,rax
  4093f1:	mov    rdx,r15
  4093f4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4093f9:	cmp    rax,r15
  4093fc:	je     409d33 <main@@Base+0x2f13>
  409402:	movzx  ecx,BYTE PTR [rax]
  409405:	cmp    cl,0x2c
  409408:	jne    409d3b <main@@Base+0x2f1b>
  40940e:	lea    rbx,[rax+0x1]
  409412:	mov    rcx,r15
  409415:	sub    rcx,rbx
  409418:	cmp    rcx,0x2
  40941c:	jl     409431 <main@@Base+0x2611>
  40941e:	cmp    BYTE PTR [rbx],0x20
  409421:	jg     409442 <main@@Base+0x2622>
  409423:	jne    409431 <main@@Base+0x2611>
  409425:	cmp    BYTE PTR [rax+0x2],0x20
  409429:	jle    409431 <main@@Base+0x2611>
  40942b:	add    rax,0x2
  40942f:	jmp    40943f <main@@Base+0x261f>
  409431:	mov    rdi,r14
  409434:	mov    rsi,rbx
  409437:	mov    rdx,r15
  40943a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40943f:	mov    rbx,rax
  409442:	cmp    rbx,r15
  409445:	je     409d77 <main@@Base+0x2f57>
  40944b:	cmp    BYTE PTR [rbx],0x5d
  40944e:	jne    40939e <main@@Base+0x257e>
  409454:	lea    rbp,[rbx+0x1]
  409458:	mov    rax,r15
  40945b:	sub    rax,rbp
  40945e:	cmp    rax,0x2
  409462:	jl     409d64 <main@@Base+0x2f44>
  409468:	cmp    BYTE PTR [rbp+0x0],0x20
  40946c:	jg     40932f <main@@Base+0x250f>
  409472:	jne    409d64 <main@@Base+0x2f44>
  409478:	cmp    BYTE PTR [rbx+0x2],0x20
  40947c:	jle    409d64 <main@@Base+0x2f44>
  409482:	add    rbx,0x2
  409486:	mov    rbp,rbx
  409489:	jmp    40932f <main@@Base+0x250f>
  40948e:	mov    rdi,r14
  409491:	mov    rdx,r15
  409494:	mov    ecx,0x4
  409499:	call   422690 <flatcc_json_parser_set_error@@Base>
  40949e:	jmp    40a78f <main@@Base+0x396f>
  4094a3:	mov    rdi,r14
  4094a6:	mov    rdx,r15
  4094a9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4094ae:	mov    rsi,rax
  4094b1:	cmp    rsi,r15
  4094b4:	je     4095c1 <main@@Base+0x27a1>
  4094ba:	cmp    BYTE PTR [rsi],0x3a
  4094bd:	jne    4095c1 <main@@Base+0x27a1>
  4094c3:	lea    rbx,[rsi+0x1]
  4094c7:	mov    rax,r15
  4094ca:	sub    rax,rbx
  4094cd:	cmp    rax,0x2
  4094d1:	jl     40ab53 <main@@Base+0x3d33>
  4094d7:	cmp    BYTE PTR [rbx],0x20
  4094da:	jg     40ab64 <main@@Base+0x3d44>
  4094e0:	jne    40ab53 <main@@Base+0x3d33>
  4094e6:	cmp    BYTE PTR [rsi+0x2],0x20
  4094ea:	jle    40ab53 <main@@Base+0x3d33>
  4094f0:	add    rsi,0x2
  4094f4:	mov    rbx,rsi
  4094f7:	cmp    r13,rbx
  4094fa:	jne    40ab6d <main@@Base+0x3d4d>
  409500:	jmp    40c144 <main@@Base+0x5324>
  409505:	mov    rdi,r14
  409508:	mov    rdx,r15
  40950b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409510:	mov    rsi,rax
  409513:	cmp    rsi,r15
  409516:	je     4095d6 <main@@Base+0x27b6>
  40951c:	cmp    BYTE PTR [rsi],0x3a
  40951f:	jne    4095d6 <main@@Base+0x27b6>
  409525:	lea    rbx,[rsi+0x1]
  409529:	mov    rax,r15
  40952c:	sub    rax,rbx
  40952f:	cmp    rax,0x2
  409533:	jl     40ac67 <main@@Base+0x3e47>
  409539:	cmp    BYTE PTR [rbx],0x20
  40953c:	jg     40ac78 <main@@Base+0x3e58>
  409542:	jne    40ac67 <main@@Base+0x3e47>
  409548:	cmp    BYTE PTR [rsi+0x2],0x20
  40954c:	jle    40ac67 <main@@Base+0x3e47>
  409552:	add    rsi,0x2
  409556:	mov    rbx,rsi
  409559:	cmp    r13,rbx
  40955c:	jne    40ac81 <main@@Base+0x3e61>
  409562:	jmp    40c144 <main@@Base+0x5324>
  409567:	mov    rdi,r14
  40956a:	mov    rdx,r15
  40956d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409572:	mov    rsi,rax
  409575:	cmp    rsi,r15
  409578:	je     4095eb <main@@Base+0x27cb>
  40957a:	cmp    BYTE PTR [rsi],0x3a
  40957d:	jne    4095eb <main@@Base+0x27cb>
  40957f:	lea    rbx,[rsi+0x1]
  409583:	mov    rax,r15
  409586:	sub    rax,rbx
  409589:	cmp    rax,0x2
  40958d:	jl     40b772 <main@@Base+0x4952>
  409593:	cmp    BYTE PTR [rbx],0x20
  409596:	jg     40b783 <main@@Base+0x4963>
  40959c:	jne    40b772 <main@@Base+0x4952>
  4095a2:	cmp    BYTE PTR [rsi+0x2],0x20
  4095a6:	jle    40b772 <main@@Base+0x4952>
  4095ac:	add    rsi,0x2
  4095b0:	mov    rbx,rsi
  4095b3:	cmp    r13,rbx
  4095b6:	jne    40b78c <main@@Base+0x496c>
  4095bc:	jmp    40c144 <main@@Base+0x5324>
  4095c1:	mov    rdi,r14
  4095c4:	mov    rdx,r15
  4095c7:	mov    ecx,0x4
  4095cc:	call   422690 <flatcc_json_parser_set_error@@Base>
  4095d1:	jmp    40ab61 <main@@Base+0x3d41>
  4095d6:	mov    rdi,r14
  4095d9:	mov    rdx,r15
  4095dc:	mov    ecx,0x4
  4095e1:	call   422690 <flatcc_json_parser_set_error@@Base>
  4095e6:	jmp    40ac75 <main@@Base+0x3e55>
  4095eb:	mov    rdi,r14
  4095ee:	mov    rdx,r15
  4095f1:	mov    ecx,0x4
  4095f6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4095fb:	jmp    40b780 <main@@Base+0x4960>
  409600:	mov    rdi,r14
  409603:	mov    rdx,r15
  409606:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40960b:	mov    rsi,rax
  40960e:	cmp    rsi,r15
  409611:	je     409757 <main@@Base+0x2937>
  409617:	cmp    BYTE PTR [rsi],0x3a
  40961a:	jne    409757 <main@@Base+0x2937>
  409620:	lea    rbx,[rsi+0x1]
  409624:	mov    rax,r15
  409627:	sub    rax,rbx
  40962a:	cmp    rax,0x2
  40962e:	jl     40b8ac <main@@Base+0x4a8c>
  409634:	cmp    BYTE PTR [rbx],0x20
  409637:	jg     40b8bd <main@@Base+0x4a9d>
  40963d:	jne    40b8ac <main@@Base+0x4a8c>
  409643:	cmp    BYTE PTR [rsi+0x2],0x20
  409647:	jle    40b8ac <main@@Base+0x4a8c>
  40964d:	add    rsi,0x2
  409651:	mov    rbx,rsi
  409654:	cmp    r12,rbx
  409657:	jne    40b8c6 <main@@Base+0x4aa6>
  40965d:	lea    r12,[r13+0x10]
  409661:	mov    rax,r15
  409664:	sub    rax,r12
  409667:	cmp    rax,0x8
  40966b:	jb     409675 <main@@Base+0x2855>
  40966d:	movbe  rcx,QWORD PTR [r12]
  409673:	jmp    4096f1 <main@@Base+0x28d1>
  409675:	lea    rcx,[rax-0x1]
  409679:	cmp    rcx,0x6
  40967d:	ja     40de5c <main@@Base+0x703c>
  409683:	lea    rdx,[rip+0x28a86]        # 432110 <_IO_stdin_used@@Base+0x110>
  40968a:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40968e:	add    rbx,rdx
  409691:	xor    r8d,r8d
  409694:	xor    ecx,ecx
  409696:	xor    esi,esi
  409698:	xor    edi,edi
  40969a:	xor    ebp,ebp
  40969c:	xor    edx,edx
  40969e:	jmp    rbx
  4096a0:	movsx  r8,BYTE PTR [r13+0x16]
  4096a5:	shl    r8,0x8
  4096a9:	movsx  rcx,BYTE PTR [r13+0x15]
  4096ae:	shl    rcx,0x10
  4096b2:	or     rcx,r8
  4096b5:	movsx  rsi,BYTE PTR [r13+0x14]
  4096ba:	shl    rsi,0x18
  4096be:	or     rsi,rcx
  4096c1:	movsx  rdi,BYTE PTR [r13+0x13]
  4096c6:	shl    rdi,0x20
  4096ca:	or     rdi,rsi
  4096cd:	movsx  rbp,BYTE PTR [r13+0x12]
  4096d2:	shl    rbp,0x28
  4096d6:	or     rbp,rdi
  4096d9:	movsx  rdx,BYTE PTR [r13+0x11]
  4096de:	shl    rdx,0x30
  4096e2:	or     rdx,rbp
  4096e5:	movzx  ecx,BYTE PTR [r12]
  4096ea:	shl    rcx,0x38
  4096ee:	or     rcx,rdx
  4096f1:	shr    rcx,0x38
  4096f5:	cmp    rcx,0x61
  4096f9:	jne    40de5c <main@@Base+0x703c>
  4096ff:	cmp    rax,0x2
  409703:	jl     40de5c <main@@Base+0x703c>
  409709:	cmp    BYTE PTR [r13+0x11],0x22
  40970e:	jne    40de5c <main@@Base+0x703c>
  409714:	lea    rsi,[r13+0x12]
  409718:	mov    rax,r15
  40971b:	sub    rax,rsi
  40971e:	cmp    rax,0x2
  409722:	jl     40a834 <main@@Base+0x3a14>
  409728:	cmp    BYTE PTR [rsi],0x20
  40972b:	jg     40a842 <main@@Base+0x3a22>
  409731:	jne    40a834 <main@@Base+0x3a14>
  409737:	cmp    BYTE PTR [r13+0x13],0x20
  40973c:	jle    40a834 <main@@Base+0x3a14>
  409742:	add    r13,0x13
  409746:	mov    rsi,r13
  409749:	cmp    rsi,r15
  40974c:	jne    40a847 <main@@Base+0x3a27>
  409752:	jmp    40a890 <main@@Base+0x3a70>
  409757:	mov    rdi,r14
  40975a:	mov    rdx,r15
  40975d:	mov    ecx,0x4
  409762:	call   422690 <flatcc_json_parser_set_error@@Base>
  409767:	jmp    40b8ba <main@@Base+0x4a9a>
  40976c:	mov    rdi,r14
  40976f:	mov    rsi,rax
  409772:	mov    rdx,r15
  409775:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40977a:	cmp    r13,rax
  40977d:	je     40c144 <main@@Base+0x5324>
  409783:	mov    rdi,r14
  409786:	mov    rsi,rax
  409789:	mov    rdx,r15
  40978c:	lea    rcx,[rsp+0x1c]
  409791:	call   4074e0 <main@@Base+0x6c0>
  409796:	mov    rbp,rax
  409799:	cmp    DWORD PTR [rsp+0x1c],0x0
  40979e:	je     40fc63 <main@@Base+0x8e43>
  4097a4:	mov    rdi,QWORD PTR [r14]
  4097a7:	mov    esi,0xc
  4097ac:	jmp    40a44d <main@@Base+0x362d>
  4097b1:	mov    rdi,r14
  4097b4:	mov    rsi,rbx
  4097b7:	mov    rdx,r15
  4097ba:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4097bf:	mov    rbx,rax
  4097c2:	cmp    r13,rbx
  4097c5:	je     40c144 <main@@Base+0x5324>
  4097cb:	mov    QWORD PTR [rsp+0x10],0x0
  4097d4:	mov    DWORD PTR [rsp+0x20],0x0
  4097dc:	mov    BYTE PTR [rsp+0xc],0x0
  4097e1:	cmp    rbx,r15
  4097e4:	je     409828 <main@@Base+0x2a08>
  4097e6:	mov    rdi,r14
  4097e9:	mov    rsi,rbx
  4097ec:	mov    rdx,r15
  4097ef:	lea    rcx,[rsp+0x20]
  4097f4:	lea    r8,[rsp+0x10]
  4097f9:	call   424130 <flatcc_json_parser_integer@@Base>
  4097fe:	cmp    rax,rbx
  409801:	je     409830 <main@@Base+0x2a10>
  409803:	mov    r12,QWORD PTR [rsp+0x10]
  409808:	cmp    DWORD PTR [rsp+0x20],0x0
  40980d:	je     409838 <main@@Base+0x2a18>
  40980f:	cmp    r12,0x81
  409816:	jb     409859 <main@@Base+0x2a39>
  409818:	mov    rdi,r14
  40981b:	mov    rsi,rax
  40981e:	mov    rdx,r15
  409821:	mov    ecx,0x8
  409826:	jmp    40984f <main@@Base+0x2a2f>
  409828:	xor    r12d,r12d
  40982b:	mov    rax,r15
  40982e:	jmp    409861 <main@@Base+0x2a41>
  409830:	xor    r12d,r12d
  409833:	mov    rax,rbx
  409836:	jmp    409861 <main@@Base+0x2a41>
  409838:	cmp    r12,0x80
  40983f:	jb     40985c <main@@Base+0x2a3c>
  409841:	mov    rdi,r14
  409844:	mov    rsi,rax
  409847:	mov    rdx,r15
  40984a:	mov    ecx,0x7
  40984f:	call   422690 <flatcc_json_parser_set_error@@Base>
  409854:	xor    r12d,r12d
  409857:	jmp    409861 <main@@Base+0x2a41>
  409859:	neg    r12
  40985c:	mov    BYTE PTR [rsp+0xc],r12b
  409861:	mov    rbp,rax
  409864:	cmp    rbx,rax
  409867:	jne    40989d <main@@Base+0x2a7d>
  409869:	mov    rdi,r14
  40986c:	mov    rsi,rbx
  40986f:	mov    rdx,r15
  409872:	lea    rcx,[rip+0x36847]        # 4400c0 <__data_start@@Base+0x10>
  409879:	lea    r8,[rsp+0xc]
  40987e:	call   411990 <main@@Base+0xab70>
  409883:	mov    rbp,rax
  409886:	cmp    rax,rbx
  409889:	je     40fc63 <main@@Base+0x8e43>
  40988f:	cmp    rbp,r15
  409892:	je     40fc63 <main@@Base+0x8e43>
  409898:	mov    r12b,BYTE PTR [rsp+0xc]
  40989d:	cmp    r12b,0x8
  4098a1:	jne    4098ae <main@@Base+0x2a8e>
  4098a3:	test   BYTE PTR [r14+0x10],0x2
  4098a8:	je     40de6d <main@@Base+0x704d>
  4098ae:	mov    rdi,QWORD PTR [r14]
  4098b1:	mov    edx,0x1
  4098b6:	mov    esi,0x6
  4098bb:	mov    ecx,0x1
  4098c0:	call   41f040 <flatcc_builder_table_add@@Base>
  4098c5:	test   rax,rax
  4098c8:	je     40fc63 <main@@Base+0x8e43>
  4098ce:	mov    BYTE PTR [rax],r12b
  4098d1:	jmp    40de6d <main@@Base+0x704d>
  4098d6:	mov    rdi,r14
  4098d9:	mov    rdx,r15
  4098dc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4098e1:	mov    rsi,rax
  4098e4:	cmp    rsi,r15
  4098e7:	je     409d1e <main@@Base+0x2efe>
  4098ed:	cmp    BYTE PTR [rsi],0x3a
  4098f0:	jne    409d1e <main@@Base+0x2efe>
  4098f6:	lea    rbx,[rsi+0x1]
  4098fa:	mov    rax,r15
  4098fd:	sub    rax,rbx
  409900:	cmp    rax,0x2
  409904:	jl     40bc32 <main@@Base+0x4e12>
  40990a:	cmp    BYTE PTR [rbx],0x20
  40990d:	jg     40bc43 <main@@Base+0x4e23>
  409913:	jne    40bc32 <main@@Base+0x4e12>
  409919:	cmp    BYTE PTR [rsi+0x2],0x20
  40991d:	jle    40bc32 <main@@Base+0x4e12>
  409923:	add    rsi,0x2
  409927:	mov    rbx,rsi
  40992a:	cmp    r12,rbx
  40992d:	jne    40bc4c <main@@Base+0x4e2c>
  409933:	jmp    40de5c <main@@Base+0x703c>
  409938:	mov    rdi,r14
  40993b:	mov    rsi,rax
  40993e:	mov    rdx,r15
  409941:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409946:	cmp    r13,rax
  409949:	je     40c144 <main@@Base+0x5324>
  40994f:	mov    rdi,r14
  409952:	mov    rsi,rax
  409955:	mov    rdx,r15
  409958:	lea    rcx,[rsp+0x1c]
  40995d:	call   424600 <flatcc_json_parser_build_string@@Base>
  409962:	mov    rbp,rax
  409965:	cmp    DWORD PTR [rsp+0x1c],0x0
  40996a:	je     40fc63 <main@@Base+0x8e43>
  409970:	mov    rdi,QWORD PTR [r14]
  409973:	mov    esi,0x3
  409978:	jmp    40a44d <main@@Base+0x362d>
  40997d:	mov    rdi,r14
  409980:	mov    rsi,rbx
  409983:	mov    rdx,r15
  409986:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40998b:	mov    rbx,rax
  40998e:	cmp    r13,rbx
  409991:	je     40c144 <main@@Base+0x5324>
  409997:	mov    rdi,QWORD PTR [r14]
  40999a:	mov    esi,0x1
  40999f:	mov    ecx,0xffffffff
  4099a4:	mov    edx,0x1
  4099a9:	call   41d850 <flatcc_builder_start_vector@@Base>
  4099ae:	test   eax,eax
  4099b0:	jne    407511 <main@@Base+0x6f1>
  4099b6:	cmp    rbx,r15
  4099b9:	je     4099e6 <main@@Base+0x2bc6>
  4099bb:	cmp    BYTE PTR [rbx],0x5b
  4099be:	jne    4099e6 <main@@Base+0x2bc6>
  4099c0:	lea    rax,[rbx+0x1]
  4099c4:	mov    rcx,r15
  4099c7:	sub    rcx,rax
  4099ca:	cmp    rcx,0x2
  4099ce:	jl     409a1d <main@@Base+0x2bfd>
  4099d0:	cmp    BYTE PTR [rax],0x20
  4099d3:	jg     409a2b <main@@Base+0x2c0b>
  4099d5:	jne    409a1d <main@@Base+0x2bfd>
  4099d7:	cmp    BYTE PTR [rbx+0x2],0x20
  4099db:	jle    409a1d <main@@Base+0x2bfd>
  4099dd:	add    rbx,0x2
  4099e1:	mov    rax,rbx
  4099e4:	jmp    409a2b <main@@Base+0x2c0b>
  4099e6:	mov    rdi,r14
  4099e9:	mov    rsi,rbx
  4099ec:	mov    rdx,r15
  4099ef:	mov    ecx,0x16
  4099f4:	call   422690 <flatcc_json_parser_set_error@@Base>
  4099f9:	mov    rbp,rax
  4099fc:	mov    rdi,QWORD PTR [r14]
  4099ff:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  409a04:	mov    DWORD PTR [rsp+0x1c],eax
  409a08:	test   eax,eax
  409a0a:	je     40fc63 <main@@Base+0x8e43>
  409a10:	mov    rdi,QWORD PTR [r14]
  409a13:	mov    esi,0x1e
  409a18:	jmp    40a44d <main@@Base+0x362d>
  409a1d:	mov    rdi,r14
  409a20:	mov    rsi,rax
  409a23:	mov    rdx,r15
  409a26:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409a2b:	mov    rbx,r15
  409a2e:	cmp    rax,r15
  409a31:	je     409a6b <main@@Base+0x2c4b>
  409a33:	cmp    BYTE PTR [rax],0x5d
  409a36:	jne    409a68 <main@@Base+0x2c48>
  409a38:	lea    rbp,[rax+0x1]
  409a3c:	mov    rcx,r15
  409a3f:	sub    rcx,rbp
  409a42:	cmp    rcx,0x2
  409a46:	jl     40b9cb <main@@Base+0x4bab>
  409a4c:	cmp    BYTE PTR [rbp+0x0],0x20
  409a50:	jg     4099fc <main@@Base+0x2bdc>
  409a52:	jne    40b9cb <main@@Base+0x4bab>
  409a58:	cmp    BYTE PTR [rax+0x2],0x20
  409a5c:	jle    40b9cb <main@@Base+0x4bab>
  409a62:	add    rax,0x2
  409a66:	jmp    4099f9 <main@@Base+0x2bd9>
  409a68:	mov    rbx,rax
  409a6b:	mov    BYTE PTR [rsp+0xc],0x0
  409a70:	mov    rdi,QWORD PTR [r14]
  409a73:	mov    esi,0x1
  409a78:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  409a7d:	test   rax,rax
  409a80:	je     407511 <main@@Base+0x6f1>
  409a86:	mov    rbp,rax
  409a89:	mov    QWORD PTR [rsp+0x10],0x0
  409a92:	mov    DWORD PTR [rsp+0x20],0x0
  409a9a:	mov    BYTE PTR [rsp+0xc],0x0
  409a9f:	cmp    rbx,r15
  409aa2:	je     409ad8 <main@@Base+0x2cb8>
  409aa4:	mov    rdi,r14
  409aa7:	mov    rsi,rbx
  409aaa:	mov    rdx,r15
  409aad:	lea    rcx,[rsp+0x20]
  409ab2:	lea    r8,[rsp+0x10]
  409ab7:	call   424130 <flatcc_json_parser_integer@@Base>
  409abc:	cmp    rax,rbx
  409abf:	je     409ae4 <main@@Base+0x2cc4>
  409ac1:	cmp    DWORD PTR [rsp+0x20],0x0
  409ac6:	je     409af0 <main@@Base+0x2cd0>
  409ac8:	mov    rdi,r14
  409acb:	mov    rsi,rax
  409ace:	mov    rdx,r15
  409ad1:	mov    ecx,0x8
  409ad6:	jmp    409b10 <main@@Base+0x2cf0>
  409ad8:	xor    ecx,ecx
  409ada:	mov    rax,r15
  409add:	cmp    rbx,rax
  409ae0:	jne    409b4d <main@@Base+0x2d2d>
  409ae2:	jmp    409b1c <main@@Base+0x2cfc>
  409ae4:	xor    ecx,ecx
  409ae6:	mov    rax,rbx
  409ae9:	cmp    rbx,rax
  409aec:	jne    409b4d <main@@Base+0x2d2d>
  409aee:	jmp    409b1c <main@@Base+0x2cfc>
  409af0:	mov    rcx,QWORD PTR [rsp+0x10]
  409af5:	cmp    rcx,0x100
  409afc:	jb     409c02 <main@@Base+0x2de2>
  409b02:	mov    rdi,r14
  409b05:	mov    rsi,rax
  409b08:	mov    rdx,r15
  409b0b:	mov    ecx,0x7
  409b10:	call   422690 <flatcc_json_parser_set_error@@Base>
  409b15:	xor    ecx,ecx
  409b17:	cmp    rbx,rax
  409b1a:	jne    409b4d <main@@Base+0x2d2d>
  409b1c:	mov    rdi,r14
  409b1f:	mov    rsi,rbx
  409b22:	mov    rdx,r15
  409b25:	lea    rcx,[rip+0x365b4]        # 4400e0 <__data_start@@Base+0x30>
  409b2c:	lea    r8,[rsp+0xc]
  409b31:	call   411b30 <main@@Base+0xad10>
  409b36:	cmp    rax,rbx
  409b39:	je     40fc91 <main@@Base+0x8e71>
  409b3f:	cmp    rax,r15
  409b42:	je     40fc91 <main@@Base+0x8e71>
  409b48:	movzx  ecx,BYTE PTR [rsp+0xc]
  409b4d:	mov    BYTE PTR [rbp+0x0],cl
  409b50:	mov    rcx,r15
  409b53:	sub    rcx,rax
  409b56:	cmp    rcx,0x2
  409b5a:	jl     409b76 <main@@Base+0x2d56>
  409b5c:	cmp    BYTE PTR [rax],0x20
  409b5f:	jg     409b84 <main@@Base+0x2d64>
  409b61:	jne    409b76 <main@@Base+0x2d56>
  409b63:	cmp    BYTE PTR [rax+0x1],0x20
  409b67:	jle    409b76 <main@@Base+0x2d56>
  409b69:	inc    rax
  409b6c:	cmp    rax,r15
  409b6f:	jne    409b8d <main@@Base+0x2d6d>
  409b71:	jmp    40b960 <main@@Base+0x4b40>
  409b76:	mov    rdi,r14
  409b79:	mov    rsi,rax
  409b7c:	mov    rdx,r15
  409b7f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409b84:	cmp    rax,r15
  409b87:	je     40b960 <main@@Base+0x4b40>
  409b8d:	movzx  ecx,BYTE PTR [rax]
  409b90:	cmp    cl,0x2c
  409b93:	jne    40b979 <main@@Base+0x4b59>
  409b99:	lea    rbx,[rax+0x1]
  409b9d:	mov    rcx,r15
  409ba0:	sub    rcx,rbx
  409ba3:	cmp    rcx,0x2
  409ba7:	jl     409bbc <main@@Base+0x2d9c>
  409ba9:	cmp    BYTE PTR [rbx],0x20
  409bac:	jg     409bcd <main@@Base+0x2dad>
  409bae:	jne    409bbc <main@@Base+0x2d9c>
  409bb0:	cmp    BYTE PTR [rax+0x2],0x20
  409bb4:	jle    409bbc <main@@Base+0x2d9c>
  409bb6:	add    rax,0x2
  409bba:	jmp    409bca <main@@Base+0x2daa>
  409bbc:	mov    rdi,r14
  409bbf:	mov    rsi,rbx
  409bc2:	mov    rdx,r15
  409bc5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409bca:	mov    rbx,rax
  409bcd:	cmp    rbx,r15
  409bd0:	je     40b98a <main@@Base+0x4b6a>
  409bd6:	cmp    BYTE PTR [rbx],0x5d
  409bd9:	je     40b99d <main@@Base+0x4b7d>
  409bdf:	mov    BYTE PTR [rsp+0xc],0x0
  409be4:	mov    rdi,QWORD PTR [r14]
  409be7:	mov    esi,0x1
  409bec:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  409bf1:	mov    rbp,rax
  409bf4:	test   rax,rax
  409bf7:	jne    409a89 <main@@Base+0x2c69>
  409bfd:	jmp    407511 <main@@Base+0x6f1>
  409c02:	mov    BYTE PTR [rsp+0xc],cl
  409c06:	cmp    rbx,rax
  409c09:	jne    409b4d <main@@Base+0x2d2d>
  409c0f:	jmp    409b1c <main@@Base+0x2cfc>
  409c14:	mov    rdi,r14
  409c17:	mov    rsi,rax
  409c1a:	mov    rdx,r15
  409c1d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409c22:	movabs rdx,0x7465737400000000
  409c2c:	cmp    r13,rax
  409c2f:	je     409c64 <main@@Base+0x2e44>
  409c31:	mov    r9,QWORD PTR [rsp+0x40]
  409c36:	sub    rsp,0x8
  409c3a:	mov    rdi,r14
  409c3d:	mov    rsi,rax
  409c40:	mov    rdx,r15
  409c43:	mov    ecx,0x0
  409c48:	mov    r8d,0x8
  409c4e:	lea    rax,[rip+0x88cb]        # 412520 <main@@Base+0xb700>
  409c55:	push   rax
  409c56:	call   424990 <flatcc_json_parser_union@@Base>
  409c5b:	add    rsp,0x10
  409c5f:	jmp    40de6a <main@@Base+0x704a>
  409c64:	lea    rax,[rdx+0x35000000]
  409c6b:	cmp    rbx,rax
  409c6e:	jne    40a311 <main@@Base+0x34f1>
  409c74:	mov    rbx,r13
  409c77:	cmp    r12,0x6
  409c7b:	jl     40a2a2 <main@@Base+0x3482>
  409c81:	cmp    BYTE PTR [r13+0x5],0x22
  409c86:	mov    rbx,r13
  409c89:	jne    40a2a2 <main@@Base+0x3482>
  409c8f:	lea    rsi,[r13+0x6]
  409c93:	mov    rax,r15
  409c96:	sub    rax,rsi
  409c99:	cmp    rax,0x2
  409c9d:	jl     409cb8 <main@@Base+0x2e98>
  409c9f:	cmp    BYTE PTR [rsi],0x20
  409ca2:	jg     409cc6 <main@@Base+0x2ea6>
  409ca4:	jne    409cb8 <main@@Base+0x2e98>
  409ca6:	cmp    BYTE PTR [r13+0x7],0x20
  409cab:	jle    409cb8 <main@@Base+0x2e98>
  409cad:	lea    rsi,[r13+0x7]
  409cb1:	cmp    rsi,r15
  409cb4:	jne    409ccb <main@@Base+0x2eab>
  409cb6:	jmp    409d09 <main@@Base+0x2ee9>
  409cb8:	mov    rdi,r14
  409cbb:	mov    rdx,r15
  409cbe:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409cc3:	mov    rsi,rax
  409cc6:	cmp    rsi,r15
  409cc9:	je     409d09 <main@@Base+0x2ee9>
  409ccb:	cmp    BYTE PTR [rsi],0x3a
  409cce:	jne    409d09 <main@@Base+0x2ee9>
  409cd0:	lea    rbx,[rsi+0x1]
  409cd4:	mov    rax,r15
  409cd7:	sub    rax,rbx
  409cda:	cmp    rax,0x2
  409cde:	jl     40a287 <main@@Base+0x3467>
  409ce4:	cmp    BYTE PTR [rbx],0x20
  409ce7:	jg     40a298 <main@@Base+0x3478>
  409ced:	jne    40a287 <main@@Base+0x3467>
  409cf3:	cmp    BYTE PTR [rsi+0x2],0x20
  409cf7:	jle    40a287 <main@@Base+0x3467>
  409cfd:	add    rsi,0x2
  409d01:	mov    rbx,rsi
  409d04:	jmp    40a298 <main@@Base+0x3478>
  409d09:	mov    rdi,r14
  409d0c:	mov    rdx,r15
  409d0f:	mov    ecx,0x4
  409d14:	call   422690 <flatcc_json_parser_set_error@@Base>
  409d19:	jmp    40a295 <main@@Base+0x3475>
  409d1e:	mov    rdi,r14
  409d21:	mov    rdx,r15
  409d24:	mov    ecx,0x4
  409d29:	call   422690 <flatcc_json_parser_set_error@@Base>
  409d2e:	jmp    40bc40 <main@@Base+0x4e20>
  409d33:	mov    rbp,r15
  409d36:	jmp    40932f <main@@Base+0x250f>
  409d3b:	cmp    cl,0x5d
  409d3e:	jne    40b837 <main@@Base+0x4a17>
  409d44:	lea    rbp,[rax+0x1]
  409d48:	mov    rcx,r15
  409d4b:	sub    rcx,rbp
  409d4e:	cmp    rcx,0x2
  409d52:	jl     409d64 <main@@Base+0x2f44>
  409d54:	cmp    BYTE PTR [rbp+0x0],0x20
  409d58:	jg     40932f <main@@Base+0x250f>
  409d5e:	je     40938b <main@@Base+0x256b>
  409d64:	mov    rdi,r14
  409d67:	mov    rsi,rbp
  409d6a:	mov    rdx,r15
  409d6d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409d72:	jmp    40932c <main@@Base+0x250c>
  409d77:	mov    rdi,r14
  409d7a:	mov    rsi,r15
  409d7d:	jmp    40b83d <main@@Base+0x4a1d>
  409d82:	mov    rdi,r14
  409d85:	mov    rdx,r15
  409d88:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409d8d:	mov    rsi,rax
  409d90:	cmp    rsi,r15
  409d93:	je     409ea0 <main@@Base+0x3080>
  409d99:	cmp    BYTE PTR [rsi],0x3a
  409d9c:	jne    409ea0 <main@@Base+0x3080>
  409da2:	lea    rbx,[rsi+0x1]
  409da6:	mov    rax,r15
  409da9:	sub    rax,rbx
  409dac:	cmp    rax,0x2
  409db0:	jl     40bd74 <main@@Base+0x4f54>
  409db6:	cmp    BYTE PTR [rbx],0x20
  409db9:	jg     40bd85 <main@@Base+0x4f65>
  409dbf:	jne    40bd74 <main@@Base+0x4f54>
  409dc5:	cmp    BYTE PTR [rsi+0x2],0x20
  409dc9:	jle    40bd74 <main@@Base+0x4f54>
  409dcf:	add    rsi,0x2
  409dd3:	mov    rbx,rsi
  409dd6:	cmp    r12,rbx
  409dd9:	jne    40bd8e <main@@Base+0x4f6e>
  409ddf:	jmp    40de5c <main@@Base+0x703c>
  409de4:	mov    rdi,r14
  409de7:	mov    rdx,r15
  409dea:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409def:	mov    rsi,rax
  409df2:	cmp    rsi,r15
  409df5:	je     409eb5 <main@@Base+0x3095>
  409dfb:	cmp    BYTE PTR [rsi],0x3a
  409dfe:	jne    409eb5 <main@@Base+0x3095>
  409e04:	lea    rbx,[rsi+0x1]
  409e08:	mov    rax,r15
  409e0b:	sub    rax,rbx
  409e0e:	cmp    rax,0x2
  409e12:	jl     40be18 <main@@Base+0x4ff8>
  409e18:	cmp    BYTE PTR [rbx],0x20
  409e1b:	jg     40be29 <main@@Base+0x5009>
  409e21:	jne    40be18 <main@@Base+0x4ff8>
  409e27:	cmp    BYTE PTR [rsi+0x2],0x20
  409e2b:	jle    40be18 <main@@Base+0x4ff8>
  409e31:	add    rsi,0x2
  409e35:	mov    rbx,rsi
  409e38:	cmp    r12,rbx
  409e3b:	jne    40be32 <main@@Base+0x5012>
  409e41:	jmp    40de5c <main@@Base+0x703c>
  409e46:	mov    rdi,r14
  409e49:	mov    rdx,r15
  409e4c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409e51:	mov    rsi,rax
  409e54:	cmp    rsi,r15
  409e57:	je     409eca <main@@Base+0x30aa>
  409e59:	cmp    BYTE PTR [rsi],0x3a
  409e5c:	jne    409eca <main@@Base+0x30aa>
  409e5e:	lea    rbx,[rsi+0x1]
  409e62:	mov    rax,r15
  409e65:	sub    rax,rbx
  409e68:	cmp    rax,0x2
  409e6c:	jl     40becb <main@@Base+0x50ab>
  409e72:	cmp    BYTE PTR [rbx],0x20
  409e75:	jg     40bedc <main@@Base+0x50bc>
  409e7b:	jne    40becb <main@@Base+0x50ab>
  409e81:	cmp    BYTE PTR [rsi+0x2],0x20
  409e85:	jle    40becb <main@@Base+0x50ab>
  409e8b:	add    rsi,0x2
  409e8f:	mov    rbx,rsi
  409e92:	cmp    r12,rbx
  409e95:	jne    40bee5 <main@@Base+0x50c5>
  409e9b:	jmp    40de5c <main@@Base+0x703c>
  409ea0:	mov    rdi,r14
  409ea3:	mov    rdx,r15
  409ea6:	mov    ecx,0x4
  409eab:	call   422690 <flatcc_json_parser_set_error@@Base>
  409eb0:	jmp    40bd82 <main@@Base+0x4f62>
  409eb5:	mov    rdi,r14
  409eb8:	mov    rdx,r15
  409ebb:	mov    ecx,0x4
  409ec0:	call   422690 <flatcc_json_parser_set_error@@Base>
  409ec5:	jmp    40be26 <main@@Base+0x5006>
  409eca:	mov    rdi,r14
  409ecd:	mov    rdx,r15
  409ed0:	mov    ecx,0x4
  409ed5:	call   422690 <flatcc_json_parser_set_error@@Base>
  409eda:	jmp    40bed9 <main@@Base+0x50b9>
  409edf:	mov    rdi,r14
  409ee2:	mov    rdx,r15
  409ee5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409eea:	mov    rsi,rax
  409eed:	cmp    rsi,r15
  409ef0:	je     409f9b <main@@Base+0x317b>
  409ef6:	cmp    BYTE PTR [rsi],0x3a
  409ef9:	jne    409f9b <main@@Base+0x317b>
  409eff:	lea    rbx,[rsi+0x1]
  409f03:	mov    rax,r15
  409f06:	sub    rax,rbx
  409f09:	cmp    rax,0x2
  409f0d:	jl     40bf7a <main@@Base+0x515a>
  409f13:	cmp    BYTE PTR [rbx],0x20
  409f16:	jg     40bf8b <main@@Base+0x516b>
  409f1c:	jne    40bf7a <main@@Base+0x515a>
  409f22:	cmp    BYTE PTR [rsi+0x2],0x20
  409f26:	jle    40bf7a <main@@Base+0x515a>
  409f2c:	add    rsi,0x2
  409f30:	mov    rbx,rsi
  409f33:	cmp    r13,rbx
  409f36:	jne    40bf94 <main@@Base+0x5174>
  409f3c:	jmp    40c144 <main@@Base+0x5324>
  409f41:	mov    rdi,r14
  409f44:	mov    rdx,r15
  409f47:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409f4c:	mov    rsi,rax
  409f4f:	cmp    rsi,r15
  409f52:	je     409fb0 <main@@Base+0x3190>
  409f54:	cmp    BYTE PTR [rsi],0x3a
  409f57:	jne    409fb0 <main@@Base+0x3190>
  409f59:	lea    rbx,[rsi+0x1]
  409f5d:	mov    rax,r15
  409f60:	sub    rax,rbx
  409f63:	cmp    rax,0x2
  409f67:	jl     40c0a9 <main@@Base+0x5289>
  409f6d:	cmp    BYTE PTR [rbx],0x20
  409f70:	jg     40c0ba <main@@Base+0x529a>
  409f76:	jne    40c0a9 <main@@Base+0x5289>
  409f7c:	cmp    BYTE PTR [rsi+0x2],0x20
  409f80:	jle    40c0a9 <main@@Base+0x5289>
  409f86:	add    rsi,0x2
  409f8a:	mov    rbx,rsi
  409f8d:	cmp    r13,rbx
  409f90:	jne    40c0c3 <main@@Base+0x52a3>
  409f96:	jmp    40c144 <main@@Base+0x5324>
  409f9b:	mov    rdi,r14
  409f9e:	mov    rdx,r15
  409fa1:	mov    ecx,0x4
  409fa6:	call   422690 <flatcc_json_parser_set_error@@Base>
  409fab:	jmp    40bf88 <main@@Base+0x5168>
  409fb0:	mov    rdi,r14
  409fb3:	mov    rdx,r15
  409fb6:	mov    ecx,0x4
  409fbb:	call   422690 <flatcc_json_parser_set_error@@Base>
  409fc0:	jmp    40c0b7 <main@@Base+0x5297>
  409fc5:	mov    rdi,r14
  409fc8:	mov    rdx,r15
  409fcb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  409fd0:	mov    rsi,rax
  409fd3:	cmp    rsi,r15
  409fd6:	je     40a1d8 <main@@Base+0x33b8>
  409fdc:	cmp    BYTE PTR [rsi],0x3a
  409fdf:	jne    40a1d8 <main@@Base+0x33b8>
  409fe5:	lea    rcx,[rsi+0x1]
  409fe9:	mov    rax,r15
  409fec:	sub    rax,rcx
  409fef:	cmp    rax,0x2
  409ff3:	jl     40c14f <main@@Base+0x532f>
  409ff9:	cmp    BYTE PTR [rcx],0x20
  409ffc:	jg     40c160 <main@@Base+0x5340>
  40a002:	jne    40c14f <main@@Base+0x532f>
  40a008:	cmp    BYTE PTR [rsi+0x2],0x20
  40a00c:	jle    40c14f <main@@Base+0x532f>
  40a012:	add    rsi,0x2
  40a016:	mov    rcx,rsi
  40a019:	cmp    r12,rcx
  40a01c:	jne    40c169 <main@@Base+0x5349>
  40a022:	lea    r12,[r13+0x10]
  40a026:	mov    rax,r15
  40a029:	sub    rax,r12
  40a02c:	cmp    rax,0x8
  40a030:	jb     40a03a <main@@Base+0x321a>
  40a032:	movbe  rcx,QWORD PTR [r12]
  40a038:	jmp    40a0b6 <main@@Base+0x3296>
  40a03a:	lea    rcx,[rax-0x1]
  40a03e:	cmp    rcx,0x6
  40a042:	ja     40de5c <main@@Base+0x703c>
  40a048:	lea    rdx,[rip+0x280a5]        # 4320f4 <_IO_stdin_used@@Base+0xf4>
  40a04f:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40a053:	add    rbx,rdx
  40a056:	xor    r8d,r8d
  40a059:	xor    ecx,ecx
  40a05b:	xor    esi,esi
  40a05d:	xor    edi,edi
  40a05f:	xor    ebp,ebp
  40a061:	xor    edx,edx
  40a063:	jmp    rbx
  40a065:	movsx  r8,BYTE PTR [r13+0x16]
  40a06a:	shl    r8,0x8
  40a06e:	movsx  rcx,BYTE PTR [r13+0x15]
  40a073:	shl    rcx,0x10
  40a077:	or     rcx,r8
  40a07a:	movsx  rsi,BYTE PTR [r13+0x14]
  40a07f:	shl    rsi,0x18
  40a083:	or     rsi,rcx
  40a086:	movsx  rdi,BYTE PTR [r13+0x13]
  40a08b:	shl    rdi,0x20
  40a08f:	or     rdi,rsi
  40a092:	movsx  rbp,BYTE PTR [r13+0x12]
  40a097:	shl    rbp,0x28
  40a09b:	or     rbp,rdi
  40a09e:	movsx  rdx,BYTE PTR [r13+0x11]
  40a0a3:	shl    rdx,0x30
  40a0a7:	or     rdx,rbp
  40a0aa:	movzx  ecx,BYTE PTR [r12]
  40a0af:	shl    rcx,0x38
  40a0b3:	or     rcx,rdx
  40a0b6:	shr    rcx,0x38
  40a0ba:	cmp    rcx,0x61
  40a0be:	jne    40de5c <main@@Base+0x703c>
  40a0c4:	cmp    rax,0x2
  40a0c8:	jl     40de5c <main@@Base+0x703c>
  40a0ce:	cmp    BYTE PTR [r13+0x11],0x22
  40a0d3:	jne    40de5c <main@@Base+0x703c>
  40a0d9:	lea    rsi,[r13+0x12]
  40a0dd:	mov    rax,r15
  40a0e0:	sub    rax,rsi
  40a0e3:	cmp    rax,0x2
  40a0e7:	jl     40bd03 <main@@Base+0x4ee3>
  40a0ed:	cmp    BYTE PTR [rsi],0x20
  40a0f0:	jg     40bd11 <main@@Base+0x4ef1>
  40a0f6:	jne    40bd03 <main@@Base+0x4ee3>
  40a0fc:	cmp    BYTE PTR [r13+0x13],0x20
  40a101:	jle    40bd03 <main@@Base+0x4ee3>
  40a107:	add    r13,0x13
  40a10b:	mov    rsi,r13
  40a10e:	cmp    rsi,r15
  40a111:	jne    40bd16 <main@@Base+0x4ef6>
  40a117:	jmp    40bd5f <main@@Base+0x4f3f>
  40a11c:	mov    rdi,r14
  40a11f:	mov    rdx,r15
  40a122:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a127:	mov    rsi,rax
  40a12a:	cmp    rsi,r15
  40a12d:	je     40a1ed <main@@Base+0x33cd>
  40a133:	cmp    BYTE PTR [rsi],0x3a
  40a136:	jne    40a1ed <main@@Base+0x33cd>
  40a13c:	lea    rbx,[rsi+0x1]
  40a140:	mov    rax,r15
  40a143:	sub    rax,rbx
  40a146:	cmp    rax,0x2
  40a14a:	jl     40c1f9 <main@@Base+0x53d9>
  40a150:	cmp    BYTE PTR [rbx],0x20
  40a153:	jg     40c20a <main@@Base+0x53ea>
  40a159:	jne    40c1f9 <main@@Base+0x53d9>
  40a15f:	cmp    BYTE PTR [rsi+0x2],0x20
  40a163:	jle    40c1f9 <main@@Base+0x53d9>
  40a169:	add    rsi,0x2
  40a16d:	mov    rbx,rsi
  40a170:	cmp    r12,rbx
  40a173:	jne    40c213 <main@@Base+0x53f3>
  40a179:	jmp    40de5c <main@@Base+0x703c>
  40a17e:	mov    rdi,r14
  40a181:	mov    rdx,r15
  40a184:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a189:	mov    rsi,rax
  40a18c:	cmp    rsi,r15
  40a18f:	je     40a202 <main@@Base+0x33e2>
  40a191:	cmp    BYTE PTR [rsi],0x3a
  40a194:	jne    40a202 <main@@Base+0x33e2>
  40a196:	lea    rbx,[rsi+0x1]
  40a19a:	mov    rax,r15
  40a19d:	sub    rax,rbx
  40a1a0:	cmp    rax,0x2
  40a1a4:	jl     40c27b <main@@Base+0x545b>
  40a1aa:	cmp    BYTE PTR [rbx],0x20
  40a1ad:	jg     40c28c <main@@Base+0x546c>
  40a1b3:	jne    40c27b <main@@Base+0x545b>
  40a1b9:	cmp    BYTE PTR [rsi+0x2],0x20
  40a1bd:	jle    40c27b <main@@Base+0x545b>
  40a1c3:	add    rsi,0x2
  40a1c7:	mov    rbx,rsi
  40a1ca:	cmp    r12,rbx
  40a1cd:	jne    40c295 <main@@Base+0x5475>
  40a1d3:	jmp    40de5c <main@@Base+0x703c>
  40a1d8:	mov    rdi,r14
  40a1db:	mov    rdx,r15
  40a1de:	mov    ecx,0x4
  40a1e3:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a1e8:	jmp    40c15d <main@@Base+0x533d>
  40a1ed:	mov    rdi,r14
  40a1f0:	mov    rdx,r15
  40a1f3:	mov    ecx,0x4
  40a1f8:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a1fd:	jmp    40c207 <main@@Base+0x53e7>
  40a202:	mov    rdi,r14
  40a205:	mov    rdx,r15
  40a208:	mov    ecx,0x4
  40a20d:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a212:	jmp    40c289 <main@@Base+0x5469>
  40a217:	mov    rdi,r14
  40a21a:	mov    rdx,r15
  40a21d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a222:	mov    rsi,rax
  40a225:	cmp    rsi,r15
  40a228:	je     40a272 <main@@Base+0x3452>
  40a22a:	cmp    BYTE PTR [rsi],0x3a
  40a22d:	jne    40a272 <main@@Base+0x3452>
  40a22f:	lea    rbp,[rsi+0x1]
  40a233:	mov    rax,r15
  40a236:	sub    rax,rbp
  40a239:	cmp    rax,0x2
  40a23d:	jl     40c383 <main@@Base+0x5563>
  40a243:	cmp    BYTE PTR [rbp+0x0],0x20
  40a247:	jg     40c394 <main@@Base+0x5574>
  40a24d:	jne    40c383 <main@@Base+0x5563>
  40a253:	cmp    BYTE PTR [rsi+0x2],0x20
  40a257:	jle    40c383 <main@@Base+0x5563>
  40a25d:	add    rsi,0x2
  40a261:	mov    rbp,rsi
  40a264:	cmp    r12,rbp
  40a267:	jne    40c39d <main@@Base+0x557d>
  40a26d:	jmp    40de5c <main@@Base+0x703c>
  40a272:	mov    rdi,r14
  40a275:	mov    rdx,r15
  40a278:	mov    ecx,0x4
  40a27d:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a282:	jmp    40c391 <main@@Base+0x5571>
  40a287:	mov    rdi,r14
  40a28a:	mov    rsi,rbx
  40a28d:	mov    rdx,r15
  40a290:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a295:	mov    rbx,rax
  40a298:	movabs rdx,0x7465737400000000
  40a2a2:	cmp    r13,rbx
  40a2a5:	je     40a311 <main@@Base+0x34f1>
  40a2a7:	mov    rdi,QWORD PTR [r14]
  40a2aa:	mov    esi,0x4
  40a2af:	mov    ecx,0x3fffffff
  40a2b4:	mov    edx,0x2
  40a2b9:	call   41d850 <flatcc_builder_start_vector@@Base>
  40a2be:	test   eax,eax
  40a2c0:	jne    407511 <main@@Base+0x6f1>
  40a2c6:	cmp    rbx,r15
  40a2c9:	je     40a41b <main@@Base+0x35fb>
  40a2cf:	cmp    BYTE PTR [rbx],0x5b
  40a2d2:	jne    40a41b <main@@Base+0x35fb>
  40a2d8:	lea    rax,[rbx+0x1]
  40a2dc:	mov    rcx,r15
  40a2df:	sub    rcx,rax
  40a2e2:	cmp    rcx,0x2
  40a2e6:	jl     40a466 <main@@Base+0x3646>
  40a2ec:	cmp    BYTE PTR [rax],0x20
  40a2ef:	jg     40a474 <main@@Base+0x3654>
  40a2f5:	jne    40a466 <main@@Base+0x3646>
  40a2fb:	cmp    BYTE PTR [rbx+0x2],0x20
  40a2ff:	jle    40a466 <main@@Base+0x3646>
  40a305:	add    rbx,0x2
  40a309:	mov    rax,rbx
  40a30c:	jmp    40a474 <main@@Base+0x3654>
  40a311:	lea    rax,[rdx+0x5f747970]
  40a318:	cmp    rbp,rax
  40a31b:	jne    40c144 <main@@Base+0x5324>
  40a321:	lea    r12,[r13+0x8]
  40a325:	mov    rax,r15
  40a328:	sub    rax,r12
  40a32b:	cmp    rax,0x8
  40a32f:	jb     40a339 <main@@Base+0x3519>
  40a331:	movbe  rcx,QWORD PTR [r12]
  40a337:	jmp    40a3b5 <main@@Base+0x3595>
  40a339:	lea    rcx,[rax-0x1]
  40a33d:	cmp    rcx,0x6
  40a341:	ja     40de5c <main@@Base+0x703c>
  40a347:	lea    rdx,[rip+0x27eda]        # 432228 <_IO_stdin_used@@Base+0x228>
  40a34e:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40a352:	add    rbx,rdx
  40a355:	xor    r8d,r8d
  40a358:	xor    ecx,ecx
  40a35a:	xor    esi,esi
  40a35c:	xor    edi,edi
  40a35e:	xor    ebp,ebp
  40a360:	xor    edx,edx
  40a362:	jmp    rbx
  40a364:	movsx  r8,BYTE PTR [r13+0xe]
  40a369:	shl    r8,0x8
  40a36d:	movsx  rcx,BYTE PTR [r13+0xd]
  40a372:	shl    rcx,0x10
  40a376:	or     rcx,r8
  40a379:	movsx  rsi,BYTE PTR [r13+0xc]
  40a37e:	shl    rsi,0x18
  40a382:	or     rsi,rcx
  40a385:	movsx  rdi,BYTE PTR [r13+0xb]
  40a38a:	shl    rdi,0x20
  40a38e:	or     rdi,rsi
  40a391:	movsx  rbp,BYTE PTR [r13+0xa]
  40a396:	shl    rbp,0x28
  40a39a:	or     rbp,rdi
  40a39d:	movsx  rdx,BYTE PTR [r13+0x9]
  40a3a2:	shl    rdx,0x30
  40a3a6:	or     rdx,rbp
  40a3a9:	movzx  ecx,BYTE PTR [r12]
  40a3ae:	shl    rcx,0x38
  40a3b2:	or     rcx,rdx
  40a3b5:	shr    rcx,0x38
  40a3b9:	cmp    rcx,0x65
  40a3bd:	jne    40de5c <main@@Base+0x703c>
  40a3c3:	cmp    rax,0x2
  40a3c7:	jl     40de5c <main@@Base+0x703c>
  40a3cd:	cmp    BYTE PTR [r13+0x9],0x22
  40a3d2:	jne    40de5c <main@@Base+0x703c>
  40a3d8:	lea    rsi,[r13+0xa]
  40a3dc:	mov    rax,r15
  40a3df:	sub    rax,rsi
  40a3e2:	cmp    rax,0x2
  40a3e6:	jl     40a4bc <main@@Base+0x369c>
  40a3ec:	cmp    BYTE PTR [rsi],0x20
  40a3ef:	jg     40a4ca <main@@Base+0x36aa>
  40a3f5:	jne    40a4bc <main@@Base+0x369c>
  40a3fb:	cmp    BYTE PTR [r13+0xb],0x20
  40a400:	jle    40a4bc <main@@Base+0x369c>
  40a406:	add    r13,0xb
  40a40a:	mov    rsi,r13
  40a40d:	cmp    rsi,r15
  40a410:	jne    40a4cf <main@@Base+0x36af>
  40a416:	jmp    40a516 <main@@Base+0x36f6>
  40a41b:	mov    rdi,r14
  40a41e:	mov    rsi,rbx
  40a421:	mov    rdx,r15
  40a424:	mov    ecx,0x16
  40a429:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a42e:	mov    rbp,rax
  40a431:	mov    rdi,QWORD PTR [r14]
  40a434:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40a439:	mov    DWORD PTR [rsp+0x1c],eax
  40a43d:	test   eax,eax
  40a43f:	je     40fc63 <main@@Base+0x8e43>
  40a445:	mov    rdi,QWORD PTR [r14]
  40a448:	mov    esi,0x1f
  40a44d:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  40a452:	test   rax,rax
  40a455:	je     40fc63 <main@@Base+0x8e43>
  40a45b:	mov    ecx,DWORD PTR [rsp+0x1c]
  40a45f:	mov    DWORD PTR [rax],ecx
  40a461:	jmp    40de6d <main@@Base+0x704d>
  40a466:	mov    rdi,r14
  40a469:	mov    rsi,rax
  40a46c:	mov    rdx,r15
  40a46f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a474:	mov    rbx,r15
  40a477:	cmp    rax,r15
  40a47a:	je     40a537 <main@@Base+0x3717>
  40a480:	cmp    BYTE PTR [rax],0x5d
  40a483:	jne    40a534 <main@@Base+0x3714>
  40a489:	lea    rbp,[rax+0x1]
  40a48d:	mov    rcx,r15
  40a490:	sub    rcx,rbp
  40a493:	cmp    rcx,0x2
  40a497:	jl     40bc0c <main@@Base+0x4dec>
  40a49d:	cmp    BYTE PTR [rbp+0x0],0x20
  40a4a1:	jg     40a431 <main@@Base+0x3611>
  40a4a3:	jne    40bc0c <main@@Base+0x4dec>
  40a4a9:	cmp    BYTE PTR [rax+0x2],0x20
  40a4ad:	jle    40bc0c <main@@Base+0x4dec>
  40a4b3:	add    rax,0x2
  40a4b7:	jmp    40a42e <main@@Base+0x360e>
  40a4bc:	mov    rdi,r14
  40a4bf:	mov    rdx,r15
  40a4c2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a4c7:	mov    rsi,rax
  40a4ca:	cmp    rsi,r15
  40a4cd:	je     40a516 <main@@Base+0x36f6>
  40a4cf:	cmp    BYTE PTR [rsi],0x3a
  40a4d2:	jne    40a516 <main@@Base+0x36f6>
  40a4d4:	lea    rax,[rsi+0x1]
  40a4d8:	mov    rcx,r15
  40a4db:	sub    rcx,rax
  40a4de:	cmp    rcx,0x2
  40a4e2:	jl     40b9de <main@@Base+0x4bbe>
  40a4e8:	cmp    BYTE PTR [rax],0x20
  40a4eb:	jg     40b9ec <main@@Base+0x4bcc>
  40a4f1:	jne    40b9de <main@@Base+0x4bbe>
  40a4f7:	cmp    BYTE PTR [rsi+0x2],0x20
  40a4fb:	jle    40b9de <main@@Base+0x4bbe>
  40a501:	add    rsi,0x2
  40a505:	mov    rax,rsi
  40a508:	cmp    r12,rax
  40a50b:	jne    40b9f5 <main@@Base+0x4bd5>
  40a511:	jmp    40de5c <main@@Base+0x703c>
  40a516:	mov    rdi,r14
  40a519:	mov    rdx,r15
  40a51c:	mov    ecx,0x4
  40a521:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a526:	cmp    r12,rax
  40a529:	jne    40b9f5 <main@@Base+0x4bd5>
  40a52f:	jmp    40de5c <main@@Base+0x703c>
  40a534:	mov    rbx,rax
  40a537:	mov    rdi,QWORD PTR [r14]
  40a53a:	mov    esi,0x1
  40a53f:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40a544:	test   rax,rax
  40a547:	je     407511 <main@@Base+0x6f1>
  40a54d:	mov    rdi,r14
  40a550:	mov    rsi,rbx
  40a553:	mov    rdx,r15
  40a556:	mov    rcx,rax
  40a559:	call   411e90 <main@@Base+0xb070>
  40a55e:	mov    rcx,r15
  40a561:	sub    rcx,rax
  40a564:	cmp    rcx,0x2
  40a568:	jl     40a584 <main@@Base+0x3764>
  40a56a:	cmp    BYTE PTR [rax],0x20
  40a56d:	jg     40a592 <main@@Base+0x3772>
  40a56f:	jne    40a584 <main@@Base+0x3764>
  40a571:	cmp    BYTE PTR [rax+0x1],0x20
  40a575:	jle    40a584 <main@@Base+0x3764>
  40a577:	inc    rax
  40a57a:	cmp    rax,r15
  40a57d:	jne    40a59b <main@@Base+0x377b>
  40a57f:	jmp    40bbdb <main@@Base+0x4dbb>
  40a584:	mov    rdi,r14
  40a587:	mov    rsi,rax
  40a58a:	mov    rdx,r15
  40a58d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a592:	cmp    rax,r15
  40a595:	je     40bbdb <main@@Base+0x4dbb>
  40a59b:	movzx  ecx,BYTE PTR [rax]
  40a59e:	cmp    cl,0x2c
  40a5a1:	jne    40bbe3 <main@@Base+0x4dc3>
  40a5a7:	lea    rbx,[rax+0x1]
  40a5ab:	mov    rcx,r15
  40a5ae:	sub    rcx,rbx
  40a5b1:	cmp    rcx,0x2
  40a5b5:	jl     40a5ca <main@@Base+0x37aa>
  40a5b7:	cmp    BYTE PTR [rbx],0x20
  40a5ba:	jg     40a5db <main@@Base+0x37bb>
  40a5bc:	jne    40a5ca <main@@Base+0x37aa>
  40a5be:	cmp    BYTE PTR [rax+0x2],0x20
  40a5c2:	jle    40a5ca <main@@Base+0x37aa>
  40a5c4:	add    rax,0x2
  40a5c8:	jmp    40a5d8 <main@@Base+0x37b8>
  40a5ca:	mov    rdi,r14
  40a5cd:	mov    rsi,rbx
  40a5d0:	mov    rdx,r15
  40a5d3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a5d8:	mov    rbx,rax
  40a5db:	cmp    rbx,r15
  40a5de:	je     40bc1f <main@@Base+0x4dff>
  40a5e4:	cmp    BYTE PTR [rbx],0x5d
  40a5e7:	jne    40a537 <main@@Base+0x3717>
  40a5ed:	lea    rbp,[rbx+0x1]
  40a5f1:	mov    rax,r15
  40a5f4:	sub    rax,rbp
  40a5f7:	cmp    rax,0x2
  40a5fb:	jl     40bc0c <main@@Base+0x4dec>
  40a601:	cmp    BYTE PTR [rbp+0x0],0x20
  40a605:	jg     40a431 <main@@Base+0x3611>
  40a60b:	jne    40bc0c <main@@Base+0x4dec>
  40a611:	cmp    BYTE PTR [rbx+0x2],0x20
  40a615:	jle    40bc0c <main@@Base+0x4dec>
  40a61b:	add    rbx,0x2
  40a61f:	mov    rbp,rbx
  40a622:	jmp    40a431 <main@@Base+0x3611>
  40a627:	mov    rdi,r14
  40a62a:	mov    rsi,rbx
  40a62d:	mov    rdx,r15
  40a630:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a635:	mov    rbx,rax
  40a638:	cmp    r13,rbx
  40a63b:	je     40c144 <main@@Base+0x5324>
  40a641:	mov    BYTE PTR [rsp+0xc],0x0
  40a646:	mov    rax,r15
  40a649:	sub    rax,rbx
  40a64c:	cmp    rax,0x4
  40a650:	jl     40a678 <main@@Base+0x3858>
  40a652:	cmp    DWORD PTR [rbx],0x65757274
  40a658:	je     40a6c9 <main@@Base+0x38a9>
  40a65a:	cmp    rax,0x5
  40a65e:	jl     40a678 <main@@Base+0x3858>
  40a660:	mov    eax,DWORD PTR [rbx]
  40a662:	mov    ecx,0x736c6166
  40a667:	xor    eax,ecx
  40a669:	movzx  ecx,BYTE PTR [rbx+0x4]
  40a66d:	xor    ecx,0x65
  40a670:	or     ecx,eax
  40a672:	je     40b968 <main@@Base+0x4b48>
  40a678:	mov    QWORD PTR [rsp+0x10],0x0
  40a681:	mov    DWORD PTR [rsp+0x20],0x0
  40a689:	cmp    rbx,r15
  40a68c:	je     40a6c2 <main@@Base+0x38a2>
  40a68e:	mov    rdi,r14
  40a691:	mov    rsi,rbx
  40a694:	mov    rdx,r15
  40a697:	lea    rcx,[rsp+0x20]
  40a69c:	lea    r8,[rsp+0x10]
  40a6a1:	call   424130 <flatcc_json_parser_integer@@Base>
  40a6a6:	cmp    rax,rbx
  40a6a9:	je     40a6d7 <main@@Base+0x38b7>
  40a6ab:	cmp    DWORD PTR [rsp+0x20],0x0
  40a6b0:	je     40a6de <main@@Base+0x38be>
  40a6b2:	mov    rdi,r14
  40a6b5:	mov    rsi,rax
  40a6b8:	mov    rdx,r15
  40a6bb:	mov    ecx,0x8
  40a6c0:	jmp    40a6fa <main@@Base+0x38da>
  40a6c2:	xor    ecx,ecx
  40a6c4:	mov    rax,r15
  40a6c7:	jmp    40a701 <main@@Base+0x38e1>
  40a6c9:	mov    BYTE PTR [rsp+0xc],0x1
  40a6ce:	lea    rax,[rbx+0x4]
  40a6d2:	mov    r12b,0x1
  40a6d5:	jmp    40a70c <main@@Base+0x38ec>
  40a6d7:	xor    ecx,ecx
  40a6d9:	mov    rax,rbx
  40a6dc:	jmp    40a701 <main@@Base+0x38e1>
  40a6de:	mov    rcx,QWORD PTR [rsp+0x10]
  40a6e3:	cmp    rcx,0x100
  40a6ea:	jb     40a701 <main@@Base+0x38e1>
  40a6ec:	mov    rdi,r14
  40a6ef:	mov    rsi,rax
  40a6f2:	mov    rdx,r15
  40a6f5:	mov    ecx,0x7
  40a6fa:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a6ff:	xor    ecx,ecx
  40a701:	test   cl,cl
  40a703:	setne  r12b
  40a707:	setne  BYTE PTR [rsp+0xc]
  40a70c:	mov    rbp,rax
  40a70f:	cmp    rbx,rax
  40a712:	jne    40a748 <main@@Base+0x3928>
  40a714:	mov    rdi,r14
  40a717:	mov    rsi,rbx
  40a71a:	mov    rdx,r15
  40a71d:	lea    rcx,[rip+0x35a7c]        # 4401a0 <__data_start@@Base+0xf0>
  40a724:	lea    r8,[rsp+0xc]
  40a729:	call   413610 <main@@Base+0xc7f0>
  40a72e:	mov    rbp,rax
  40a731:	cmp    rax,rbx
  40a734:	je     40fc63 <main@@Base+0x8e43>
  40a73a:	cmp    rbp,r15
  40a73d:	je     40fc63 <main@@Base+0x8e43>
  40a743:	mov    r12b,BYTE PTR [rsp+0xc]
  40a748:	cmp    r12b,0x1
  40a74c:	jne    40a759 <main@@Base+0x3939>
  40a74e:	test   BYTE PTR [r14+0x10],0x2
  40a753:	je     40de6d <main@@Base+0x704d>
  40a759:	mov    rdi,QWORD PTR [r14]
  40a75c:	mov    edx,0x1
  40a761:	mov    esi,0xf
  40a766:	mov    ecx,0x1
  40a76b:	call   41f040 <flatcc_builder_table_add@@Base>
  40a770:	test   rax,rax
  40a773:	je     40fc63 <main@@Base+0x8e43>
  40a779:	mov    BYTE PTR [rax],r12b
  40a77c:	jmp    40de6d <main@@Base+0x704d>
  40a781:	mov    rdi,r14
  40a784:	mov    rsi,rbx
  40a787:	mov    rdx,r15
  40a78a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a78f:	mov    rbx,rax
  40a792:	cmp    r12,rbx
  40a795:	je     40de5c <main@@Base+0x703c>
  40a79b:	mov    rdi,QWORD PTR [r14]
  40a79e:	mov    esi,0x1
  40a7a3:	mov    ecx,0xffffffff
  40a7a8:	mov    edx,0x1
  40a7ad:	call   41d850 <flatcc_builder_start_vector@@Base>
  40a7b2:	test   eax,eax
  40a7b4:	jne    407511 <main@@Base+0x6f1>
  40a7ba:	cmp    rbx,r15
  40a7bd:	je     40a7fd <main@@Base+0x39dd>
  40a7bf:	cmp    BYTE PTR [rbx],0x5b
  40a7c2:	jne    40a7fd <main@@Base+0x39dd>
  40a7c4:	lea    rax,[rbx+0x1]
  40a7c8:	mov    rcx,r15
  40a7cb:	sub    rcx,rax
  40a7ce:	cmp    rcx,0x2
  40a7d2:	jl     40ba2c <main@@Base+0x4c0c>
  40a7d8:	cmp    BYTE PTR [rax],0x20
  40a7db:	jg     40ba3a <main@@Base+0x4c1a>
  40a7e1:	jne    40ba2c <main@@Base+0x4c0c>
  40a7e7:	cmp    BYTE PTR [rbx+0x2],0x20
  40a7eb:	jle    40ba2c <main@@Base+0x4c0c>
  40a7f1:	add    rbx,0x2
  40a7f5:	mov    rax,rbx
  40a7f8:	jmp    40ba3a <main@@Base+0x4c1a>
  40a7fd:	mov    rdi,r14
  40a800:	mov    rsi,rbx
  40a803:	mov    rdx,r15
  40a806:	mov    ecx,0x16
  40a80b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a810:	mov    rbp,rax
  40a813:	mov    rdi,QWORD PTR [r14]
  40a816:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40a81b:	mov    DWORD PTR [rsp+0x1c],eax
  40a81f:	test   eax,eax
  40a821:	je     40fc63 <main@@Base+0x8e43>
  40a827:	mov    rdi,QWORD PTR [r14]
  40a82a:	mov    esi,0x18
  40a82f:	jmp    40a44d <main@@Base+0x362d>
  40a834:	mov    rdi,r14
  40a837:	mov    rdx,r15
  40a83a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a83f:	mov    rsi,rax
  40a842:	cmp    rsi,r15
  40a845:	je     40a890 <main@@Base+0x3a70>
  40a847:	cmp    BYTE PTR [rsi],0x3a
  40a84a:	jne    40a890 <main@@Base+0x3a70>
  40a84c:	lea    r13,[rsi+0x1]
  40a850:	mov    rax,r15
  40a853:	sub    rax,r13
  40a856:	cmp    rax,0x2
  40a85a:	jl     40c515 <main@@Base+0x56f5>
  40a860:	cmp    BYTE PTR [r13+0x0],0x20
  40a865:	jg     40c526 <main@@Base+0x5706>
  40a86b:	jne    40c515 <main@@Base+0x56f5>
  40a871:	cmp    BYTE PTR [rsi+0x2],0x20
  40a875:	jle    40c515 <main@@Base+0x56f5>
  40a87b:	add    rsi,0x2
  40a87f:	mov    r13,rsi
  40a882:	cmp    r12,r13
  40a885:	jne    40c52f <main@@Base+0x570f>
  40a88b:	jmp    40de5c <main@@Base+0x703c>
  40a890:	mov    rdi,r14
  40a893:	mov    rdx,r15
  40a896:	mov    ecx,0x4
  40a89b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40a8a0:	jmp    40c523 <main@@Base+0x5703>
  40a8a5:	mov    rdi,r14
  40a8a8:	mov    rdx,r15
  40a8ab:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40a8b0:	mov    rsi,rax
  40a8b3:	cmp    rsi,r15
  40a8b6:	je     40b80d <main@@Base+0x49ed>
  40a8bc:	cmp    BYTE PTR [rsi],0x3a
  40a8bf:	jne    40b80d <main@@Base+0x49ed>
  40a8c5:	lea    rcx,[rsi+0x1]
  40a8c9:	mov    rax,r15
  40a8cc:	sub    rax,rcx
  40a8cf:	cmp    rax,0x2
  40a8d3:	jl     40c9f3 <main@@Base+0x5bd3>
  40a8d9:	cmp    BYTE PTR [rcx],0x20
  40a8dc:	jg     40ca04 <main@@Base+0x5be4>
  40a8e2:	jne    40c9f3 <main@@Base+0x5bd3>
  40a8e8:	cmp    BYTE PTR [rsi+0x2],0x20
  40a8ec:	jle    40c9f3 <main@@Base+0x5bd3>
  40a8f2:	add    rsi,0x2
  40a8f6:	mov    rcx,rsi
  40a8f9:	cmp    r12,rcx
  40a8fc:	jne    40ca0d <main@@Base+0x5bed>
  40a902:	lea    r12,[r13+0x10]
  40a906:	mov    rax,r15
  40a909:	sub    rax,r12
  40a90c:	cmp    rax,0x8
  40a910:	jb     40a91a <main@@Base+0x3afa>
  40a912:	movbe  rcx,QWORD PTR [r12]
  40a918:	jmp    40a996 <main@@Base+0x3b76>
  40a91a:	lea    rcx,[rax-0x1]
  40a91e:	cmp    rcx,0x6
  40a922:	ja     40de5c <main@@Base+0x703c>
  40a928:	lea    rdx,[rip+0x277a9]        # 4320d8 <_IO_stdin_used@@Base+0xd8>
  40a92f:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40a933:	add    rbx,rdx
  40a936:	xor    r8d,r8d
  40a939:	xor    ecx,ecx
  40a93b:	xor    esi,esi
  40a93d:	xor    edi,edi
  40a93f:	xor    ebp,ebp
  40a941:	xor    edx,edx
  40a943:	jmp    rbx
  40a945:	movsx  r8,BYTE PTR [r13+0x16]
  40a94a:	shl    r8,0x8
  40a94e:	movsx  rcx,BYTE PTR [r13+0x15]
  40a953:	shl    rcx,0x10
  40a957:	or     rcx,r8
  40a95a:	movsx  rsi,BYTE PTR [r13+0x14]
  40a95f:	shl    rsi,0x18
  40a963:	or     rsi,rcx
  40a966:	movsx  rdi,BYTE PTR [r13+0x13]
  40a96b:	shl    rdi,0x20
  40a96f:	or     rdi,rsi
  40a972:	movsx  rbp,BYTE PTR [r13+0x12]
  40a977:	shl    rbp,0x28
  40a97b:	or     rbp,rdi
  40a97e:	movsx  rdx,BYTE PTR [r13+0x11]
  40a983:	shl    rdx,0x30
  40a987:	or     rdx,rbp
  40a98a:	movzx  ecx,BYTE PTR [r12]
  40a98f:	shl    rcx,0x38
  40a993:	or     rcx,rdx
  40a996:	shr    rcx,0x38
  40a99a:	cmp    rcx,0x61
  40a99e:	jne    40de5c <main@@Base+0x703c>
  40a9a4:	cmp    rax,0x2
  40a9a8:	jl     40de5c <main@@Base+0x703c>
  40a9ae:	cmp    BYTE PTR [r13+0x11],0x22
  40a9b3:	jne    40de5c <main@@Base+0x703c>
  40a9b9:	lea    rsi,[r13+0x12]
  40a9bd:	mov    rax,r15
  40a9c0:	sub    rax,rsi
  40a9c3:	cmp    rax,0x2
  40a9c7:	jl     40c42b <main@@Base+0x560b>
  40a9cd:	cmp    BYTE PTR [rsi],0x20
  40a9d0:	jg     40c439 <main@@Base+0x5619>
  40a9d6:	jne    40c42b <main@@Base+0x560b>
  40a9dc:	cmp    BYTE PTR [r13+0x13],0x20
  40a9e1:	jle    40c42b <main@@Base+0x560b>
  40a9e7:	add    r13,0x13
  40a9eb:	mov    rsi,r13
  40a9ee:	cmp    rsi,r15
  40a9f1:	jne    40c442 <main@@Base+0x5622>
  40a9f7:	jmp    40c4eb <main@@Base+0x56cb>
  40a9fc:	mov    rdi,r14
  40a9ff:	mov    rdx,r15
  40aa02:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40aa07:	mov    rsi,rax
  40aa0a:	cmp    rsi,r15
  40aa0d:	je     40b822 <main@@Base+0x4a02>
  40aa13:	cmp    BYTE PTR [rsi],0x3a
  40aa16:	jne    40b822 <main@@Base+0x4a02>
  40aa1c:	lea    rcx,[rsi+0x1]
  40aa20:	mov    rax,r15
  40aa23:	sub    rax,rcx
  40aa26:	cmp    rax,0x2
  40aa2a:	jl     40ca7c <main@@Base+0x5c5c>
  40aa30:	cmp    BYTE PTR [rcx],0x20
  40aa33:	jg     40ca8d <main@@Base+0x5c6d>
  40aa39:	jne    40ca7c <main@@Base+0x5c5c>
  40aa3f:	cmp    BYTE PTR [rsi+0x2],0x20
  40aa43:	jle    40ca7c <main@@Base+0x5c5c>
  40aa49:	add    rsi,0x2
  40aa4d:	mov    rcx,rsi
  40aa50:	cmp    r12,rcx
  40aa53:	jne    40ca96 <main@@Base+0x5c76>
  40aa59:	lea    r12,[r13+0x10]
  40aa5d:	mov    rax,r15
  40aa60:	sub    rax,r12
  40aa63:	cmp    rax,0x8
  40aa67:	jb     40aa71 <main@@Base+0x3c51>
  40aa69:	movbe  rcx,QWORD PTR [r12]
  40aa6f:	jmp    40aaed <main@@Base+0x3ccd>
  40aa71:	lea    rcx,[rax-0x1]
  40aa75:	cmp    rcx,0x6
  40aa79:	ja     40de5c <main@@Base+0x703c>
  40aa7f:	lea    rdx,[rip+0x27636]        # 4320bc <_IO_stdin_used@@Base+0xbc>
  40aa86:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40aa8a:	add    rbx,rdx
  40aa8d:	xor    r8d,r8d
  40aa90:	xor    ecx,ecx
  40aa92:	xor    esi,esi
  40aa94:	xor    edi,edi
  40aa96:	xor    ebp,ebp
  40aa98:	xor    edx,edx
  40aa9a:	jmp    rbx
  40aa9c:	movsx  r8,BYTE PTR [r13+0x16]
  40aaa1:	shl    r8,0x8
  40aaa5:	movsx  rcx,BYTE PTR [r13+0x15]
  40aaaa:	shl    rcx,0x10
  40aaae:	or     rcx,r8
  40aab1:	movsx  rsi,BYTE PTR [r13+0x14]
  40aab6:	shl    rsi,0x18
  40aaba:	or     rsi,rcx
  40aabd:	movsx  rdi,BYTE PTR [r13+0x13]
  40aac2:	shl    rdi,0x20
  40aac6:	or     rdi,rsi
  40aac9:	movsx  rbp,BYTE PTR [r13+0x12]
  40aace:	shl    rbp,0x28
  40aad2:	or     rbp,rdi
  40aad5:	movsx  rdx,BYTE PTR [r13+0x11]
  40aada:	shl    rdx,0x30
  40aade:	or     rdx,rbp
  40aae1:	movzx  ecx,BYTE PTR [r12]
  40aae6:	shl    rcx,0x38
  40aaea:	or     rcx,rdx
  40aaed:	shr    rcx,0x38
  40aaf1:	cmp    rcx,0x61
  40aaf5:	jne    40de5c <main@@Base+0x703c>
  40aafb:	cmp    rax,0x2
  40aaff:	jl     40de5c <main@@Base+0x703c>
  40ab05:	cmp    BYTE PTR [r13+0x11],0x22
  40ab0a:	jne    40de5c <main@@Base+0x703c>
  40ab10:	lea    rsi,[r13+0x12]
  40ab14:	mov    rax,r15
  40ab17:	sub    rax,rsi
  40ab1a:	cmp    rax,0x2
  40ab1e:	jl     40c48f <main@@Base+0x566f>
  40ab24:	cmp    BYTE PTR [rsi],0x20
  40ab27:	jg     40c49d <main@@Base+0x567d>
  40ab2d:	jne    40c48f <main@@Base+0x566f>
  40ab33:	cmp    BYTE PTR [r13+0x13],0x20
  40ab38:	jle    40c48f <main@@Base+0x566f>
  40ab3e:	add    r13,0x13
  40ab42:	mov    rsi,r13
  40ab45:	cmp    rsi,r15
  40ab48:	jne    40c4a2 <main@@Base+0x5682>
  40ab4e:	jmp    40c500 <main@@Base+0x56e0>
  40ab53:	mov    rdi,r14
  40ab56:	mov    rsi,rbx
  40ab59:	mov    rdx,r15
  40ab5c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ab61:	mov    rbx,rax
  40ab64:	cmp    r13,rbx
  40ab67:	je     40c144 <main@@Base+0x5324>
  40ab6d:	mov    QWORD PTR [rsp+0x10],0x0
  40ab76:	mov    DWORD PTR [rsp+0x20],0x0
  40ab7e:	mov    WORD PTR [rsp+0xc],0x0
  40ab85:	cmp    rbx,r15
  40ab88:	je     40abcc <main@@Base+0x3dac>
  40ab8a:	mov    rdi,r14
  40ab8d:	mov    rsi,rbx
  40ab90:	mov    rdx,r15
  40ab93:	lea    rcx,[rsp+0x20]
  40ab98:	lea    r8,[rsp+0x10]
  40ab9d:	call   424130 <flatcc_json_parser_integer@@Base>
  40aba2:	cmp    rax,rbx
  40aba5:	je     40abd4 <main@@Base+0x3db4>
  40aba7:	mov    r12,QWORD PTR [rsp+0x10]
  40abac:	cmp    DWORD PTR [rsp+0x20],0x0
  40abb1:	je     40abdc <main@@Base+0x3dbc>
  40abb3:	cmp    r12,0x8001
  40abba:	jb     40abfd <main@@Base+0x3ddd>
  40abbc:	mov    rdi,r14
  40abbf:	mov    rsi,rax
  40abc2:	mov    rdx,r15
  40abc5:	mov    ecx,0x8
  40abca:	jmp    40abf3 <main@@Base+0x3dd3>
  40abcc:	xor    r12d,r12d
  40abcf:	mov    rax,r15
  40abd2:	jmp    40ac06 <main@@Base+0x3de6>
  40abd4:	xor    r12d,r12d
  40abd7:	mov    rax,rbx
  40abda:	jmp    40ac06 <main@@Base+0x3de6>
  40abdc:	cmp    r12,0x8000
  40abe3:	jb     40ac00 <main@@Base+0x3de0>
  40abe5:	mov    rdi,r14
  40abe8:	mov    rsi,rax
  40abeb:	mov    rdx,r15
  40abee:	mov    ecx,0x7
  40abf3:	call   422690 <flatcc_json_parser_set_error@@Base>
  40abf8:	xor    r12d,r12d
  40abfb:	jmp    40ac06 <main@@Base+0x3de6>
  40abfd:	neg    r12
  40ac00:	mov    WORD PTR [rsp+0xc],r12w
  40ac06:	mov    rbp,rax
  40ac09:	cmp    rbx,rax
  40ac0c:	jne    40ac43 <main@@Base+0x3e23>
  40ac0e:	mov    rdi,r14
  40ac11:	mov    rsi,rbx
  40ac14:	mov    rdx,r15
  40ac17:	lea    rcx,[rip+0x354e2]        # 440100 <__data_start@@Base+0x50>
  40ac1e:	lea    r8,[rsp+0xc]
  40ac23:	call   411ce0 <main@@Base+0xaec0>
  40ac28:	mov    rbp,rax
  40ac2b:	cmp    rax,rbx
  40ac2e:	je     40fc63 <main@@Base+0x8e43>
  40ac34:	cmp    rbp,r15
  40ac37:	je     40fc63 <main@@Base+0x8e43>
  40ac3d:	movzx  r12d,WORD PTR [rsp+0xc]
  40ac43:	cmp    r12w,0x64
  40ac48:	jne    40ac55 <main@@Base+0x3e35>
  40ac4a:	test   BYTE PTR [r14+0x10],0x2
  40ac4f:	je     40de6d <main@@Base+0x704d>
  40ac55:	mov    rdi,QWORD PTR [r14]
  40ac58:	mov    edx,0x2
  40ac5d:	mov    esi,0x2
  40ac62:	jmp    40c08d <main@@Base+0x526d>
  40ac67:	mov    rdi,r14
  40ac6a:	mov    rsi,rbx
  40ac6d:	mov    rdx,r15
  40ac70:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ac75:	mov    rbx,rax
  40ac78:	cmp    r13,rbx
  40ac7b:	je     40c144 <main@@Base+0x5324>
  40ac81:	mov    rdi,QWORD PTR [r14]
  40ac84:	mov    edx,0x20
  40ac89:	xor    esi,esi
  40ac8b:	mov    ecx,0x10
  40ac90:	call   41f040 <flatcc_builder_table_add@@Base>
  40ac95:	test   rax,rax
  40ac98:	je     407511 <main@@Base+0x6f1>
  40ac9e:	cmp    rbx,r15
  40aca1:	je     40acd1 <main@@Base+0x3eb1>
  40aca3:	cmp    BYTE PTR [rbx],0x7b
  40aca6:	jne    40acd1 <main@@Base+0x3eb1>
  40aca8:	mov    r13,rax
  40acab:	lea    rax,[rbx+0x1]
  40acaf:	mov    rcx,r15
  40acb2:	sub    rcx,rax
  40acb5:	cmp    rcx,0x2
  40acb9:	jl     40ace9 <main@@Base+0x3ec9>
  40acbb:	cmp    BYTE PTR [rax],0x20
  40acbe:	jg     40acf7 <main@@Base+0x3ed7>
  40acc0:	jne    40ace9 <main@@Base+0x3ec9>
  40acc2:	cmp    BYTE PTR [rbx+0x2],0x20
  40acc6:	jle    40ace9 <main@@Base+0x3ec9>
  40acc8:	add    rbx,0x2
  40accc:	mov    rax,rbx
  40accf:	jmp    40acf7 <main@@Base+0x3ed7>
  40acd1:	mov    rdi,r14
  40acd4:	mov    rsi,rbx
  40acd7:	mov    rdx,r15
  40acda:	mov    ecx,0x15
  40acdf:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ace4:	jmp    40de6a <main@@Base+0x704a>
  40ace9:	mov    rdi,r14
  40acec:	mov    rsi,rax
  40acef:	mov    rdx,r15
  40acf2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40acf7:	mov    rsi,r15
  40acfa:	cmp    rax,r15
  40acfd:	je     40ad0b <main@@Base+0x3eeb>
  40acff:	cmp    BYTE PTR [rax],0x7d
  40ad02:	je     40bcc5 <main@@Base+0x4ea5>
  40ad08:	mov    rsi,rax
  40ad0b:	mov    rax,r13
  40ad0e:	add    rax,0x1a
  40ad12:	mov    QWORD PTR [rsp+0x50],rax
  40ad17:	mov    QWORD PTR [rsp+0x28],r13
  40ad1c:	mov    r12,r15
  40ad1f:	cmp    rsi,r15
  40ad22:	je     40ad44 <main@@Base+0x3f24>
  40ad24:	cmp    BYTE PTR [rsi],0x22
  40ad27:	jne    40ad31 <main@@Base+0x3f11>
  40ad29:	inc    rsi
  40ad2c:	mov    r12,rsi
  40ad2f:	jmp    40ad44 <main@@Base+0x3f24>
  40ad31:	mov    rdi,r14
  40ad34:	mov    rdx,r15
  40ad37:	mov    ecx,0x5
  40ad3c:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ad41:	mov    r12,rax
  40ad44:	mov    rcx,r15
  40ad47:	sub    rcx,r12
  40ad4a:	cmp    rcx,0x8
  40ad4e:	jb     40ad5b <main@@Base+0x3f3b>
  40ad50:	movbe  rax,QWORD PTR [r12]
  40ad56:	jmp    40ade0 <main@@Base+0x3fc0>
  40ad5b:	lea    rax,[rcx-0x1]
  40ad5f:	cmp    rax,0x6
  40ad63:	ja     40b69e <main@@Base+0x487e>
  40ad69:	lea    rdx,[rip+0x274d4]        # 432244 <_IO_stdin_used@@Base+0x244>
  40ad70:	mov    rsi,rdx
  40ad73:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40ad77:	add    rdx,rsi
  40ad7a:	xor    r8d,r8d
  40ad7d:	xor    eax,eax
  40ad7f:	xor    esi,esi
  40ad81:	xor    edi,edi
  40ad83:	xor    ebp,ebp
  40ad85:	xor    ebx,ebx
  40ad87:	jmp    rdx
  40ad89:	movsx  r8,BYTE PTR [r12+0x6]
  40ad8f:	shl    r8,0x8
  40ad93:	movsx  rax,BYTE PTR [r12+0x5]
  40ad99:	shl    rax,0x10
  40ad9d:	or     rax,r8
  40ada0:	movsx  rsi,BYTE PTR [r12+0x4]
  40ada6:	shl    rsi,0x18
  40adaa:	or     rsi,rax
  40adad:	movsx  rdi,BYTE PTR [r12+0x3]
  40adb3:	shl    rdi,0x20
  40adb7:	or     rdi,rsi
  40adba:	movsx  rbp,BYTE PTR [r12+0x2]
  40adc0:	shl    rbp,0x28
  40adc4:	or     rbp,rdi
  40adc7:	movsx  rbx,BYTE PTR [r12+0x1]
  40adcd:	shl    rbx,0x30
  40add1:	or     rbx,rbp
  40add4:	movzx  eax,BYTE PTR [r12]
  40add9:	shl    rax,0x38
  40addd:	or     rax,rbx
  40ade0:	movabs rdx,0x7465737400000000
  40adea:	add    rdx,0x33000000
  40adf1:	cmp    rax,rdx
  40adf4:	jae    40ae85 <main@@Base+0x4065>
  40adfa:	and    rax,0xffffffffff000000
  40ae00:	movabs rdx,0x7465737431000000
  40ae0a:	cmp    rax,rdx
  40ae0d:	je     40af97 <main@@Base+0x4177>
  40ae13:	movabs rdx,0x7465737432000000
  40ae1d:	cmp    rax,rdx
  40ae20:	jne    40b69e <main@@Base+0x487e>
  40ae26:	mov    r13,r12
  40ae29:	cmp    rcx,0x6
  40ae2d:	jl     40b294 <main@@Base+0x4474>
  40ae33:	cmp    BYTE PTR [r12+0x5],0x22
  40ae39:	mov    r13,r12
  40ae3c:	jne    40b294 <main@@Base+0x4474>
  40ae42:	lea    rsi,[r12+0x6]
  40ae47:	mov    rax,r15
  40ae4a:	sub    rax,rsi
  40ae4d:	cmp    rax,0x2
  40ae51:	jl     40b0cc <main@@Base+0x42ac>
  40ae57:	cmp    BYTE PTR [rsi],0x20
  40ae5a:	jg     40b0da <main@@Base+0x42ba>
  40ae60:	jne    40b0cc <main@@Base+0x42ac>
  40ae66:	cmp    BYTE PTR [r12+0x7],0x20
  40ae6c:	jle    40b0cc <main@@Base+0x42ac>
  40ae72:	lea    rsi,[r12+0x7]
  40ae77:	cmp    rsi,r15
  40ae7a:	jne    40b0e3 <main@@Base+0x42c3>
  40ae80:	jmp    40b18c <main@@Base+0x436c>
  40ae85:	movabs rsi,0x7800000000000000
  40ae8f:	cmp    rax,rsi
  40ae92:	jae    40af02 <main@@Base+0x40e2>
  40ae94:	and    rax,0xffffffffff000000
  40ae9a:	cmp    rax,rdx
  40ae9d:	jne    40b69e <main@@Base+0x487e>
  40aea3:	mov    rax,r12
  40aea6:	cmp    rcx,0x6
  40aeaa:	jl     40b58a <main@@Base+0x476a>
  40aeb0:	cmp    BYTE PTR [r12+0x5],0x22
  40aeb6:	mov    rax,r12
  40aeb9:	jne    40b58a <main@@Base+0x476a>
  40aebf:	lea    rsi,[r12+0x6]
  40aec4:	mov    rax,r15
  40aec7:	sub    rax,rsi
  40aeca:	cmp    rax,0x2
  40aece:	jl     40b1b6 <main@@Base+0x4396>
  40aed4:	cmp    BYTE PTR [rsi],0x20
  40aed7:	jg     40b1c4 <main@@Base+0x43a4>
  40aedd:	jne    40b1b6 <main@@Base+0x4396>
  40aee3:	cmp    BYTE PTR [r12+0x7],0x20
  40aee9:	jle    40b1b6 <main@@Base+0x4396>
  40aeef:	lea    rsi,[r12+0x7]
  40aef4:	cmp    rsi,r15
  40aef7:	jne    40b1c9 <main@@Base+0x43a9>
  40aefd:	jmp    40b1fe <main@@Base+0x43de>
  40af02:	mov    rdx,rax
  40af05:	movabs rsi,0xff00000000000000
  40af0f:	and    rdx,rsi
  40af12:	movabs rsi,0x7900000000000000
  40af1c:	cmp    rax,rsi
  40af1f:	jae    40aff6 <main@@Base+0x41d6>
  40af25:	movabs rax,0x7800000000000000
  40af2f:	cmp    rdx,rax
  40af32:	jne    40b69e <main@@Base+0x487e>
  40af38:	mov    rbp,r12
  40af3b:	cmp    rcx,0x2
  40af3f:	jl     40b46e <main@@Base+0x464e>
  40af45:	cmp    BYTE PTR [r12+0x1],0x22
  40af4b:	mov    rbp,r12
  40af4e:	jne    40b46e <main@@Base+0x464e>
  40af54:	lea    rsi,[r12+0x2]
  40af59:	mov    rax,r15
  40af5c:	sub    rax,rsi
  40af5f:	cmp    rax,0x2
  40af63:	jl     40b21c <main@@Base+0x43fc>
  40af69:	cmp    BYTE PTR [rsi],0x20
  40af6c:	jg     40b22a <main@@Base+0x440a>
  40af72:	jne    40b21c <main@@Base+0x43fc>
  40af78:	cmp    BYTE PTR [r12+0x3],0x20
  40af7e:	jle    40b21c <main@@Base+0x43fc>
  40af84:	lea    rsi,[r12+0x3]
  40af89:	cmp    rsi,r15
  40af8c:	jne    40b22f <main@@Base+0x440f>
  40af92:	jmp    40b26e <main@@Base+0x444e>
  40af97:	mov    rbp,r12
  40af9a:	cmp    rcx,0x6
  40af9e:	jl     40b4ff <main@@Base+0x46df>
  40afa4:	cmp    BYTE PTR [r12+0x5],0x22
  40afaa:	mov    rbp,r12
  40afad:	jne    40b4ff <main@@Base+0x46df>
  40afb3:	lea    rsi,[r12+0x6]
  40afb8:	mov    rax,r15
  40afbb:	sub    rax,rsi
  40afbe:	cmp    rax,0x2
  40afc2:	jl     40b143 <main@@Base+0x4323>
  40afc8:	cmp    BYTE PTR [rsi],0x20
  40afcb:	jg     40b151 <main@@Base+0x4331>
  40afd1:	jne    40b143 <main@@Base+0x4323>
  40afd7:	cmp    BYTE PTR [r12+0x7],0x20
  40afdd:	jle    40b143 <main@@Base+0x4323>
  40afe3:	lea    rsi,[r12+0x7]
  40afe8:	cmp    rsi,r15
  40afeb:	jne    40b156 <main@@Base+0x4336>
  40aff1:	jmp    40b1a1 <main@@Base+0x4381>
  40aff6:	cmp    rdx,rsi
  40aff9:	je     40b06d <main@@Base+0x424d>
  40affb:	movabs rax,0x7a00000000000000
  40b005:	cmp    rdx,rax
  40b008:	jne    40b69e <main@@Base+0x487e>
  40b00e:	mov    rbp,r12
  40b011:	cmp    rcx,0x2
  40b015:	jl     40b5c1 <main@@Base+0x47a1>
  40b01b:	cmp    BYTE PTR [r12+0x1],0x22
  40b021:	mov    rbp,r12
  40b024:	jne    40b5c1 <main@@Base+0x47a1>
  40b02a:	lea    rsi,[r12+0x2]
  40b02f:	mov    rax,r15
  40b032:	sub    rax,rsi
  40b035:	cmp    rax,0x2
  40b039:	jl     40b382 <main@@Base+0x4562>
  40b03f:	cmp    BYTE PTR [rsi],0x20
  40b042:	jg     40b390 <main@@Base+0x4570>
  40b048:	jne    40b382 <main@@Base+0x4562>
  40b04e:	cmp    BYTE PTR [r12+0x3],0x20
  40b054:	jle    40b382 <main@@Base+0x4562>
  40b05a:	lea    rsi,[r12+0x3]
  40b05f:	cmp    rsi,r15
  40b062:	jne    40b399 <main@@Base+0x4579>
  40b068:	jmp    40b42e <main@@Base+0x460e>
  40b06d:	mov    rbp,r12
  40b070:	cmp    rcx,0x2
  40b074:	jl     40b63e <main@@Base+0x481e>
  40b07a:	cmp    BYTE PTR [r12+0x1],0x22
  40b080:	mov    rbp,r12
  40b083:	jne    40b63e <main@@Base+0x481e>
  40b089:	lea    rsi,[r12+0x2]
  40b08e:	mov    rax,r15
  40b091:	sub    rax,rsi
  40b094:	cmp    rax,0x2
  40b098:	jl     40b3dc <main@@Base+0x45bc>
  40b09e:	cmp    BYTE PTR [rsi],0x20
  40b0a1:	jg     40b3ea <main@@Base+0x45ca>
  40b0a7:	jne    40b3dc <main@@Base+0x45bc>
  40b0ad:	cmp    BYTE PTR [r12+0x3],0x20
  40b0b3:	jle    40b3dc <main@@Base+0x45bc>
  40b0b9:	lea    rsi,[r12+0x3]
  40b0be:	cmp    rsi,r15
  40b0c1:	jne    40b3ef <main@@Base+0x45cf>
  40b0c7:	jmp    40b443 <main@@Base+0x4623>
  40b0cc:	mov    rdi,r14
  40b0cf:	mov    rdx,r15
  40b0d2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b0d7:	mov    rsi,rax
  40b0da:	cmp    rsi,r15
  40b0dd:	je     40b18c <main@@Base+0x436c>
  40b0e3:	cmp    BYTE PTR [rsi],0x3a
  40b0e6:	jne    40b18c <main@@Base+0x436c>
  40b0ec:	lea    r13,[rsi+0x1]
  40b0f0:	mov    rax,r15
  40b0f3:	sub    rax,r13
  40b0f6:	cmp    rax,0x2
  40b0fa:	jl     40b283 <main@@Base+0x4463>
  40b100:	cmp    BYTE PTR [r13+0x0],0x20
  40b105:	jg     40b294 <main@@Base+0x4474>
  40b10b:	jne    40b283 <main@@Base+0x4463>
  40b111:	cmp    BYTE PTR [rsi+0x2],0x20
  40b115:	jle    40b283 <main@@Base+0x4463>
  40b11b:	add    rsi,0x2
  40b11f:	mov    r13,rsi
  40b122:	cmp    r12,r13
  40b125:	jne    40b29d <main@@Base+0x447d>
  40b12b:	mov    rdi,r14
  40b12e:	mov    rsi,r12
  40b131:	mov    rdx,r15
  40b134:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b139:	mov    r13,QWORD PTR [rsp+0x28]
  40b13e:	jmp    40b6ac <main@@Base+0x488c>
  40b143:	mov    rdi,r14
  40b146:	mov    rdx,r15
  40b149:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b14e:	mov    rsi,rax
  40b151:	cmp    rsi,r15
  40b154:	je     40b1a1 <main@@Base+0x4381>
  40b156:	cmp    BYTE PTR [rsi],0x3a
  40b159:	jne    40b1a1 <main@@Base+0x4381>
  40b15b:	lea    rbp,[rsi+0x1]
  40b15f:	mov    rax,r15
  40b162:	sub    rax,rbp
  40b165:	cmp    rax,0x2
  40b169:	jl     40b4ee <main@@Base+0x46ce>
  40b16f:	cmp    BYTE PTR [rbp+0x0],0x20
  40b173:	jle    40b4d0 <main@@Base+0x46b0>
  40b179:	mov    r13,QWORD PTR [rsp+0x28]
  40b17e:	cmp    r12,rbp
  40b181:	jne    40b508 <main@@Base+0x46e8>
  40b187:	jmp    40b69e <main@@Base+0x487e>
  40b18c:	mov    rdi,r14
  40b18f:	mov    rdx,r15
  40b192:	mov    ecx,0x4
  40b197:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b19c:	jmp    40b291 <main@@Base+0x4471>
  40b1a1:	mov    rdi,r14
  40b1a4:	mov    rdx,r15
  40b1a7:	mov    ecx,0x4
  40b1ac:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b1b1:	jmp    40b4fc <main@@Base+0x46dc>
  40b1b6:	mov    rdi,r14
  40b1b9:	mov    rdx,r15
  40b1bc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b1c1:	mov    rsi,rax
  40b1c4:	cmp    rsi,r15
  40b1c7:	je     40b1fe <main@@Base+0x43de>
  40b1c9:	cmp    BYTE PTR [rsi],0x3a
  40b1cc:	jne    40b1fe <main@@Base+0x43de>
  40b1ce:	lea    rax,[rsi+0x1]
  40b1d2:	mov    rcx,r15
  40b1d5:	sub    rcx,rax
  40b1d8:	cmp    rcx,0x2
  40b1dc:	jl     40b577 <main@@Base+0x4757>
  40b1e2:	cmp    BYTE PTR [rax],0x20
  40b1e5:	jle    40b563 <main@@Base+0x4743>
  40b1eb:	mov    r13,QWORD PTR [rsp+0x28]
  40b1f0:	cmp    r12,rax
  40b1f3:	jne    40b593 <main@@Base+0x4773>
  40b1f9:	jmp    40b69e <main@@Base+0x487e>
  40b1fe:	mov    rdi,r14
  40b201:	mov    rdx,r15
  40b204:	mov    ecx,0x4
  40b209:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b20e:	cmp    r12,rax
  40b211:	jne    40b593 <main@@Base+0x4773>
  40b217:	jmp    40b69e <main@@Base+0x487e>
  40b21c:	mov    rdi,r14
  40b21f:	mov    rdx,r15
  40b222:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b227:	mov    rsi,rax
  40b22a:	cmp    rsi,r15
  40b22d:	je     40b26e <main@@Base+0x444e>
  40b22f:	cmp    BYTE PTR [rsi],0x3a
  40b232:	jne    40b26e <main@@Base+0x444e>
  40b234:	lea    rbp,[rsi+0x1]
  40b238:	mov    rax,r15
  40b23b:	sub    rax,rbp
  40b23e:	cmp    rax,0x2
  40b242:	jl     40b458 <main@@Base+0x4638>
  40b248:	cmp    BYTE PTR [rbp+0x0],0x20
  40b24c:	jg     40b469 <main@@Base+0x4649>
  40b252:	jne    40b458 <main@@Base+0x4638>
  40b258:	cmp    BYTE PTR [rsi+0x2],0x20
  40b25c:	jle    40b458 <main@@Base+0x4638>
  40b262:	add    rsi,0x2
  40b266:	mov    rbp,rsi
  40b269:	jmp    40b469 <main@@Base+0x4649>
  40b26e:	mov    rdi,r14
  40b271:	mov    rdx,r15
  40b274:	mov    ecx,0x4
  40b279:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b27e:	jmp    40b466 <main@@Base+0x4646>
  40b283:	mov    rdi,r14
  40b286:	mov    rsi,r13
  40b289:	mov    rdx,r15
  40b28c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b291:	mov    r13,rax
  40b294:	cmp    r12,r13
  40b297:	je     40b12b <main@@Base+0x430b>
  40b29d:	mov    QWORD PTR [rsp+0x10],0x0
  40b2a6:	mov    DWORD PTR [rsp+0x20],0x0
  40b2ae:	mov    BYTE PTR [rsp+0xc],0x0
  40b2b3:	cmp    r13,r15
  40b2b6:	je     40b2fa <main@@Base+0x44da>
  40b2b8:	mov    rdi,r14
  40b2bb:	mov    rsi,r13
  40b2be:	mov    rdx,r15
  40b2c1:	lea    rcx,[rsp+0x20]
  40b2c6:	lea    r8,[rsp+0x10]
  40b2cb:	call   424130 <flatcc_json_parser_integer@@Base>
  40b2d0:	cmp    rax,r13
  40b2d3:	je     40b306 <main@@Base+0x44e6>
  40b2d5:	mov    rcx,QWORD PTR [rsp+0x10]
  40b2da:	cmp    DWORD PTR [rsp+0x20],0x0
  40b2df:	je     40b312 <main@@Base+0x44f2>
  40b2e1:	cmp    rcx,0x81
  40b2e8:	jb     40b337 <main@@Base+0x4517>
  40b2ea:	mov    rdi,r14
  40b2ed:	mov    rsi,rax
  40b2f0:	mov    rdx,r15
  40b2f3:	mov    ecx,0x8
  40b2f8:	jmp    40b329 <main@@Base+0x4509>
  40b2fa:	xor    ecx,ecx
  40b2fc:	mov    rax,r15
  40b2ff:	cmp    r13,rax
  40b302:	jne    40b374 <main@@Base+0x4554>
  40b304:	jmp    40b343 <main@@Base+0x4523>
  40b306:	xor    ecx,ecx
  40b308:	mov    rax,r13
  40b30b:	cmp    r13,rax
  40b30e:	jne    40b374 <main@@Base+0x4554>
  40b310:	jmp    40b343 <main@@Base+0x4523>
  40b312:	cmp    rcx,0x80
  40b319:	jb     40b33a <main@@Base+0x451a>
  40b31b:	mov    rdi,r14
  40b31e:	mov    rsi,rax
  40b321:	mov    rdx,r15
  40b324:	mov    ecx,0x7
  40b329:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b32e:	xor    ecx,ecx
  40b330:	cmp    r13,rax
  40b333:	jne    40b374 <main@@Base+0x4554>
  40b335:	jmp    40b343 <main@@Base+0x4523>
  40b337:	neg    rcx
  40b33a:	mov    BYTE PTR [rsp+0xc],cl
  40b33e:	cmp    r13,rax
  40b341:	jne    40b374 <main@@Base+0x4554>
  40b343:	mov    rdi,r14
  40b346:	mov    rsi,r13
  40b349:	mov    rdx,r15
  40b34c:	lea    rcx,[rip+0x3502d]        # 440380 <__data_start@@Base+0x2d0>
  40b353:	lea    r8,[rsp+0xc]
  40b358:	call   411990 <main@@Base+0xab70>
  40b35d:	cmp    rax,r13
  40b360:	je     40e942 <main@@Base+0x7b22>
  40b366:	cmp    rax,r15
  40b369:	je     40e942 <main@@Base+0x7b22>
  40b36f:	movzx  ecx,BYTE PTR [rsp+0xc]
  40b374:	mov    r13,QWORD PTR [rsp+0x28]
  40b379:	mov    BYTE PTR [r13+0x18],cl
  40b37d:	jmp    40b6ac <main@@Base+0x488c>
  40b382:	mov    rdi,r14
  40b385:	mov    rdx,r15
  40b388:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b38d:	mov    rsi,rax
  40b390:	cmp    rsi,r15
  40b393:	je     40b42e <main@@Base+0x460e>
  40b399:	cmp    BYTE PTR [rsi],0x3a
  40b39c:	jne    40b42e <main@@Base+0x460e>
  40b3a2:	lea    rbp,[rsi+0x1]
  40b3a6:	mov    rax,r15
  40b3a9:	sub    rax,rbp
  40b3ac:	cmp    rax,0x2
  40b3b0:	jl     40b5ab <main@@Base+0x478b>
  40b3b6:	cmp    BYTE PTR [rbp+0x0],0x20
  40b3ba:	jg     40b5bc <main@@Base+0x479c>
  40b3c0:	jne    40b5ab <main@@Base+0x478b>
  40b3c6:	cmp    BYTE PTR [rsi+0x2],0x20
  40b3ca:	jle    40b5ab <main@@Base+0x478b>
  40b3d0:	add    rsi,0x2
  40b3d4:	mov    rbp,rsi
  40b3d7:	jmp    40b5bc <main@@Base+0x479c>
  40b3dc:	mov    rdi,r14
  40b3df:	mov    rdx,r15
  40b3e2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b3e7:	mov    rsi,rax
  40b3ea:	cmp    rsi,r15
  40b3ed:	je     40b443 <main@@Base+0x4623>
  40b3ef:	cmp    BYTE PTR [rsi],0x3a
  40b3f2:	jne    40b443 <main@@Base+0x4623>
  40b3f4:	lea    rbp,[rsi+0x1]
  40b3f8:	mov    rax,r15
  40b3fb:	sub    rax,rbp
  40b3fe:	cmp    rax,0x2
  40b402:	jl     40b628 <main@@Base+0x4808>
  40b408:	cmp    BYTE PTR [rbp+0x0],0x20
  40b40c:	jg     40b639 <main@@Base+0x4819>
  40b412:	jne    40b628 <main@@Base+0x4808>
  40b418:	cmp    BYTE PTR [rsi+0x2],0x20
  40b41c:	jle    40b628 <main@@Base+0x4808>
  40b422:	add    rsi,0x2
  40b426:	mov    rbp,rsi
  40b429:	jmp    40b639 <main@@Base+0x4819>
  40b42e:	mov    rdi,r14
  40b431:	mov    rdx,r15
  40b434:	mov    ecx,0x4
  40b439:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b43e:	jmp    40b5b9 <main@@Base+0x4799>
  40b443:	mov    rdi,r14
  40b446:	mov    rdx,r15
  40b449:	mov    ecx,0x4
  40b44e:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b453:	jmp    40b636 <main@@Base+0x4816>
  40b458:	mov    rdi,r14
  40b45b:	mov    rsi,rbp
  40b45e:	mov    rdx,r15
  40b461:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b466:	mov    rbp,rax
  40b469:	mov    r13,QWORD PTR [rsp+0x28]
  40b46e:	cmp    r12,rbp
  40b471:	je     40b69e <main@@Base+0x487e>
  40b477:	mov    DWORD PTR [rsp+0x10],0x0
  40b47f:	mov    rdi,r14
  40b482:	mov    rsi,rbp
  40b485:	mov    rdx,r15
  40b488:	lea    rcx,[rsp+0x10]
  40b48d:	call   424010 <flatcc_json_parser_float@@Base>
  40b492:	cmp    rbp,rax
  40b495:	jne    40b4c3 <main@@Base+0x46a3>
  40b497:	mov    rdi,r14
  40b49a:	mov    rsi,rbp
  40b49d:	mov    rdx,r15
  40b4a0:	lea    rcx,[rip+0x34f19]        # 4403c0 <__data_start@@Base+0x310>
  40b4a7:	lea    r8,[rsp+0x10]
  40b4ac:	call   413790 <main@@Base+0xc970>
  40b4b1:	cmp    rax,rbp
  40b4b4:	je     40e942 <main@@Base+0x7b22>
  40b4ba:	cmp    rax,r15
  40b4bd:	je     40e942 <main@@Base+0x7b22>
  40b4c3:	mov    ecx,DWORD PTR [rsp+0x10]
  40b4c7:	mov    DWORD PTR [r13+0x0],ecx
  40b4cb:	jmp    40b6ac <main@@Base+0x488c>
  40b4d0:	mov    r13,QWORD PTR [rsp+0x28]
  40b4d5:	jne    40b4ee <main@@Base+0x46ce>
  40b4d7:	cmp    BYTE PTR [rsi+0x2],0x20
  40b4db:	jle    40b4ee <main@@Base+0x46ce>
  40b4dd:	add    rsi,0x2
  40b4e1:	mov    rbp,rsi
  40b4e4:	cmp    r12,rbp
  40b4e7:	jne    40b508 <main@@Base+0x46e8>
  40b4e9:	jmp    40b69e <main@@Base+0x487e>
  40b4ee:	mov    rdi,r14
  40b4f1:	mov    rsi,rbp
  40b4f4:	mov    rdx,r15
  40b4f7:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b4fc:	mov    rbp,rax
  40b4ff:	cmp    r12,rbp
  40b502:	je     40b69e <main@@Base+0x487e>
  40b508:	mov    QWORD PTR [rsp+0x10],0x0
  40b511:	mov    rdi,r14
  40b514:	mov    rsi,rbp
  40b517:	mov    rdx,r15
  40b51a:	lea    rcx,[rsp+0x10]
  40b51f:	call   423870 <flatcc_json_parser_double@@Base>
  40b524:	cmp    rbp,rax
  40b527:	jne    40b555 <main@@Base+0x4735>
  40b529:	mov    rdi,r14
  40b52c:	mov    rsi,rbp
  40b52f:	mov    rdx,r15
  40b532:	lea    rcx,[rip+0x34e67]        # 4403a0 <__data_start@@Base+0x2f0>
  40b539:	lea    r8,[rsp+0x10]
  40b53e:	call   413fb0 <main@@Base+0xd190>
  40b543:	cmp    rax,rbp
  40b546:	je     40e942 <main@@Base+0x7b22>
  40b54c:	cmp    rax,r15
  40b54f:	je     40e942 <main@@Base+0x7b22>
  40b555:	mov    rcx,QWORD PTR [rsp+0x10]
  40b55a:	mov    QWORD PTR [r13+0x10],rcx
  40b55e:	jmp    40b6ac <main@@Base+0x488c>
  40b563:	jne    40b577 <main@@Base+0x4757>
  40b565:	cmp    BYTE PTR [rsi+0x2],0x20
  40b569:	jle    40b577 <main@@Base+0x4757>
  40b56b:	add    rsi,0x2
  40b56f:	mov    rax,rsi
  40b572:	jmp    40b1eb <main@@Base+0x43cb>
  40b577:	mov    rdi,r14
  40b57a:	mov    rsi,rax
  40b57d:	mov    rdx,r15
  40b580:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b585:	mov    r13,QWORD PTR [rsp+0x28]
  40b58a:	cmp    r12,rax
  40b58d:	je     40b69e <main@@Base+0x487e>
  40b593:	mov    rdi,r14
  40b596:	mov    rsi,rax
  40b599:	mov    rdx,r15
  40b59c:	mov    rcx,QWORD PTR [rsp+0x50]
  40b5a1:	call   411e90 <main@@Base+0xb070>
  40b5a6:	jmp    40b6ac <main@@Base+0x488c>
  40b5ab:	mov    rdi,r14
  40b5ae:	mov    rsi,rbp
  40b5b1:	mov    rdx,r15
  40b5b4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b5b9:	mov    rbp,rax
  40b5bc:	mov    r13,QWORD PTR [rsp+0x28]
  40b5c1:	cmp    r12,rbp
  40b5c4:	je     40b69e <main@@Base+0x487e>
  40b5ca:	mov    DWORD PTR [rsp+0x10],0x0
  40b5d2:	mov    rdi,r14
  40b5d5:	mov    rsi,rbp
  40b5d8:	mov    rdx,r15
  40b5db:	lea    rcx,[rsp+0x10]
  40b5e0:	call   424010 <flatcc_json_parser_float@@Base>
  40b5e5:	cmp    rbp,rax
  40b5e8:	jne    40b61b <main@@Base+0x47fb>
  40b5ea:	mov    rdi,r14
  40b5ed:	mov    rsi,rbp
  40b5f0:	mov    rdx,r15
  40b5f3:	lea    rcx,[rip+0x34de6]        # 4403e0 <__data_start@@Base+0x330>
  40b5fa:	lea    r8,[rsp+0x10]
  40b5ff:	call   413790 <main@@Base+0xc970>
  40b604:	cmp    rax,rbp
  40b607:	je     40e942 <main@@Base+0x7b22>
  40b60d:	cmp    rax,r15
  40b610:	je     40e942 <main@@Base+0x7b22>
  40b616:	mov    r13,QWORD PTR [rsp+0x28]
  40b61b:	mov    ecx,DWORD PTR [rsp+0x10]
  40b61f:	mov    DWORD PTR [r13+0x8],ecx
  40b623:	jmp    40b6ac <main@@Base+0x488c>
  40b628:	mov    rdi,r14
  40b62b:	mov    rsi,rbp
  40b62e:	mov    rdx,r15
  40b631:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b636:	mov    rbp,rax
  40b639:	mov    r13,QWORD PTR [rsp+0x28]
  40b63e:	cmp    r12,rbp
  40b641:	je     40b69e <main@@Base+0x487e>
  40b643:	mov    DWORD PTR [rsp+0x10],0x0
  40b64b:	mov    rdi,r14
  40b64e:	mov    rsi,rbp
  40b651:	mov    rdx,r15
  40b654:	lea    rcx,[rsp+0x10]
  40b659:	call   424010 <flatcc_json_parser_float@@Base>
  40b65e:	cmp    rbp,rax
  40b661:	jne    40b694 <main@@Base+0x4874>
  40b663:	mov    rdi,r14
  40b666:	mov    rsi,rbp
  40b669:	mov    rdx,r15
  40b66c:	lea    rcx,[rip+0x34d8d]        # 440400 <__data_start@@Base+0x350>
  40b673:	lea    r8,[rsp+0x10]
  40b678:	call   413790 <main@@Base+0xc970>
  40b67d:	cmp    rax,rbp
  40b680:	je     40e942 <main@@Base+0x7b22>
  40b686:	cmp    rax,r15
  40b689:	je     40e942 <main@@Base+0x7b22>
  40b68f:	mov    r13,QWORD PTR [rsp+0x28]
  40b694:	mov    ecx,DWORD PTR [rsp+0x10]
  40b698:	mov    DWORD PTR [r13+0x4],ecx
  40b69c:	jmp    40b6ac <main@@Base+0x488c>
  40b69e:	mov    rdi,r14
  40b6a1:	mov    rsi,r12
  40b6a4:	mov    rdx,r15
  40b6a7:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40b6ac:	mov    rcx,r15
  40b6af:	sub    rcx,rax
  40b6b2:	cmp    rcx,0x2
  40b6b6:	jl     40b6d2 <main@@Base+0x48b2>
  40b6b8:	cmp    BYTE PTR [rax],0x20
  40b6bb:	jg     40b6e0 <main@@Base+0x48c0>
  40b6bd:	jne    40b6d2 <main@@Base+0x48b2>
  40b6bf:	cmp    BYTE PTR [rax+0x1],0x20
  40b6c3:	jle    40b6d2 <main@@Base+0x48b2>
  40b6c5:	inc    rax
  40b6c8:	cmp    rax,r15
  40b6cb:	jne    40b6e9 <main@@Base+0x48c9>
  40b6cd:	jmp    40bcb4 <main@@Base+0x4e94>
  40b6d2:	mov    rdi,r14
  40b6d5:	mov    rsi,rax
  40b6d8:	mov    rdx,r15
  40b6db:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b6e0:	cmp    rax,r15
  40b6e3:	je     40bcb4 <main@@Base+0x4e94>
  40b6e9:	movzx  ecx,BYTE PTR [rax]
  40b6ec:	cmp    cl,0x2c
  40b6ef:	jne    40bcbc <main@@Base+0x4e9c>
  40b6f5:	lea    rsi,[rax+0x1]
  40b6f9:	mov    rcx,r15
  40b6fc:	sub    rcx,rsi
  40b6ff:	cmp    rcx,0x2
  40b703:	jl     40b718 <main@@Base+0x48f8>
  40b705:	cmp    BYTE PTR [rsi],0x20
  40b708:	jg     40b726 <main@@Base+0x4906>
  40b70a:	jne    40b718 <main@@Base+0x48f8>
  40b70c:	cmp    BYTE PTR [rax+0x2],0x20
  40b710:	jle    40b718 <main@@Base+0x48f8>
  40b712:	add    rax,0x2
  40b716:	jmp    40b723 <main@@Base+0x4903>
  40b718:	mov    rdi,r14
  40b71b:	mov    rdx,r15
  40b71e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b723:	mov    rsi,rax
  40b726:	cmp    rsi,r15
  40b729:	je     40bf6f <main@@Base+0x514f>
  40b72f:	cmp    BYTE PTR [rsi],0x7d
  40b732:	jne    40ad1c <main@@Base+0x3efc>
  40b738:	lea    rbp,[rsi+0x1]
  40b73c:	mov    rax,r15
  40b73f:	sub    rax,rbp
  40b742:	cmp    rax,0x2
  40b746:	jl     40bcf0 <main@@Base+0x4ed0>
  40b74c:	cmp    BYTE PTR [rbp+0x0],0x20
  40b750:	jg     40de6d <main@@Base+0x704d>
  40b756:	jne    40bcf0 <main@@Base+0x4ed0>
  40b75c:	cmp    BYTE PTR [rsi+0x2],0x20
  40b760:	jle    40bcf0 <main@@Base+0x4ed0>
  40b766:	add    rsi,0x2
  40b76a:	mov    rbp,rsi
  40b76d:	jmp    40de6d <main@@Base+0x704d>
  40b772:	mov    rdi,r14
  40b775:	mov    rsi,rbx
  40b778:	mov    rdx,r15
  40b77b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b780:	mov    rbx,rax
  40b783:	cmp    r13,rbx
  40b786:	je     40c144 <main@@Base+0x5324>
  40b78c:	mov    DWORD PTR [rsp+0x10],0x0
  40b794:	mov    rdi,r14
  40b797:	mov    rsi,rbx
  40b79a:	mov    rdx,r15
  40b79d:	lea    rcx,[rsp+0x10]
  40b7a2:	call   424010 <flatcc_json_parser_float@@Base>
  40b7a7:	mov    rbp,rax
  40b7aa:	cmp    rbx,rax
  40b7ad:	jne    40b7de <main@@Base+0x49be>
  40b7af:	mov    rdi,r14
  40b7b2:	mov    rsi,rbx
  40b7b5:	mov    rdx,r15
  40b7b8:	lea    rcx,[rip+0x34a01]        # 4401c0 <__data_start@@Base+0x110>
  40b7bf:	lea    r8,[rsp+0x10]
  40b7c4:	call   413790 <main@@Base+0xc970>
  40b7c9:	mov    rbp,rax
  40b7cc:	cmp    rax,rbx
  40b7cf:	je     40fc63 <main@@Base+0x8e43>
  40b7d5:	cmp    rbp,r15
  40b7d8:	je     40fc63 <main@@Base+0x8e43>
  40b7de:	vmovss xmm0,DWORD PTR [rsp+0x10]
  40b7e4:	vucomiss xmm0,DWORD PTR [rip+0x2681c]        # 432008 <_IO_stdin_used@@Base+0x8>
  40b7ec:	jne    40b7fb <main@@Base+0x49db>
  40b7ee:	jp     40b7fb <main@@Base+0x49db>
  40b7f0:	test   BYTE PTR [r14+0x10],0x2
  40b7f5:	je     40de6d <main@@Base+0x704d>
  40b7fb:	mov    rdi,QWORD PTR [r14]
  40b7fe:	mov    edx,0x4
  40b803:	mov    esi,0x1a
  40b808:	jmp    40928a <main@@Base+0x246a>
  40b80d:	mov    rdi,r14
  40b810:	mov    rdx,r15
  40b813:	mov    ecx,0x4
  40b818:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b81d:	jmp    40ca01 <main@@Base+0x5be1>
  40b822:	mov    rdi,r14
  40b825:	mov    rdx,r15
  40b828:	mov    ecx,0x4
  40b82d:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b832:	jmp    40ca8a <main@@Base+0x5c6a>
  40b837:	mov    rdi,r14
  40b83a:	mov    rsi,rax
  40b83d:	mov    rdx,r15
  40b840:	mov    ecx,0x9
  40b845:	jmp    409327 <main@@Base+0x2507>
  40b84a:	mov    rdi,r14
  40b84d:	mov    rdx,r15
  40b850:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b855:	mov    rsi,rax
  40b858:	cmp    rsi,r15
  40b85b:	je     40b94b <main@@Base+0x4b2b>
  40b861:	cmp    BYTE PTR [rsi],0x3a
  40b864:	jne    40b94b <main@@Base+0x4b2b>
  40b86a:	lea    rbx,[rsi+0x1]
  40b86e:	mov    rax,r15
  40b871:	sub    rax,rbx
  40b874:	cmp    rax,0x2
  40b878:	jl     40cb20 <main@@Base+0x5d00>
  40b87e:	cmp    BYTE PTR [rbx],0x20
  40b881:	jg     40cb31 <main@@Base+0x5d11>
  40b887:	jne    40cb20 <main@@Base+0x5d00>
  40b88d:	cmp    BYTE PTR [rsi+0x2],0x20
  40b891:	jle    40cb20 <main@@Base+0x5d00>
  40b897:	add    rsi,0x2
  40b89b:	mov    rbx,rsi
  40b89e:	cmp    r12,rbx
  40b8a1:	jne    40cb3a <main@@Base+0x5d1a>
  40b8a7:	jmp    40de5c <main@@Base+0x703c>
  40b8ac:	mov    rdi,r14
  40b8af:	mov    rsi,rbx
  40b8b2:	mov    rdx,r15
  40b8b5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b8ba:	mov    rbx,rax
  40b8bd:	cmp    r12,rbx
  40b8c0:	je     40965d <main@@Base+0x283d>
  40b8c6:	mov    QWORD PTR [rsp+0x10],0x0
  40b8cf:	mov    DWORD PTR [rsp+0x20],0x0
  40b8d7:	mov    DWORD PTR [rsp+0xc],0x0
  40b8df:	xor    r12d,r12d
  40b8e2:	cmp    rbx,r15
  40b8e5:	je     40b943 <main@@Base+0x4b23>
  40b8e7:	mov    rdi,r14
  40b8ea:	mov    rsi,rbx
  40b8ed:	mov    rdx,r15
  40b8f0:	lea    rcx,[rsp+0x20]
  40b8f5:	mov    rbp,rbx
  40b8f8:	lea    r8,[rsp+0x10]
  40b8fd:	call   424130 <flatcc_json_parser_integer@@Base>
  40b902:	cmp    rax,rbx
  40b905:	je     40bc2a <main@@Base+0x4e0a>
  40b90b:	mov    rcx,QWORD PTR [rsp+0x10]
  40b910:	cmp    DWORD PTR [rsp+0x20],0x0
  40b915:	je     40c403 <main@@Base+0x55e3>
  40b91b:	mov    edx,0xffffffff
  40b920:	add    rdx,0xffffffff80000001
  40b927:	cmp    rcx,rdx
  40b92a:	jbe    40c906 <main@@Base+0x5ae6>
  40b930:	mov    rdi,r14
  40b933:	mov    rsi,rax
  40b936:	mov    rdx,r15
  40b939:	mov    ecx,0x8
  40b93e:	jmp    40c41e <main@@Base+0x55fe>
  40b943:	mov    rax,r15
  40b946:	jmp    40c910 <main@@Base+0x5af0>
  40b94b:	mov    rdi,r14
  40b94e:	mov    rdx,r15
  40b951:	mov    ecx,0x4
  40b956:	call   422690 <flatcc_json_parser_set_error@@Base>
  40b95b:	jmp    40cb2e <main@@Base+0x5d0e>
  40b960:	mov    rbp,r15
  40b963:	jmp    4099fc <main@@Base+0x2bdc>
  40b968:	mov    BYTE PTR [rsp+0xc],0x0
  40b96d:	lea    rax,[rbx+0x5]
  40b971:	xor    r12d,r12d
  40b974:	jmp    40a70c <main@@Base+0x38ec>
  40b979:	cmp    cl,0x5d
  40b97c:	je     409a38 <main@@Base+0x2c18>
  40b982:	mov    rdi,r14
  40b985:	mov    rsi,rax
  40b988:	jmp    40b990 <main@@Base+0x4b70>
  40b98a:	mov    rdi,r14
  40b98d:	mov    rsi,r15
  40b990:	mov    rdx,r15
  40b993:	mov    ecx,0x9
  40b998:	jmp    4099f4 <main@@Base+0x2bd4>
  40b99d:	lea    rbp,[rbx+0x1]
  40b9a1:	mov    rax,r15
  40b9a4:	sub    rax,rbp
  40b9a7:	cmp    rax,0x2
  40b9ab:	jl     40b9cb <main@@Base+0x4bab>
  40b9ad:	cmp    BYTE PTR [rbp+0x0],0x20
  40b9b1:	jg     4099fc <main@@Base+0x2bdc>
  40b9b7:	jne    40b9cb <main@@Base+0x4bab>
  40b9b9:	cmp    BYTE PTR [rbx+0x2],0x20
  40b9bd:	jle    40b9cb <main@@Base+0x4bab>
  40b9bf:	add    rbx,0x2
  40b9c3:	mov    rbp,rbx
  40b9c6:	jmp    4099fc <main@@Base+0x2bdc>
  40b9cb:	mov    rdi,r14
  40b9ce:	mov    rsi,rbp
  40b9d1:	mov    rdx,r15
  40b9d4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b9d9:	jmp    4099f9 <main@@Base+0x2bd9>
  40b9de:	mov    rdi,r14
  40b9e1:	mov    rsi,rax
  40b9e4:	mov    rdx,r15
  40b9e7:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40b9ec:	cmp    r12,rax
  40b9ef:	je     40de5c <main@@Base+0x703c>
  40b9f5:	mov    r9,QWORD PTR [rsp+0x40]
  40b9fa:	mov    rdi,r14
  40b9fd:	mov    rsi,rax
  40ba00:	mov    rdx,r15
  40ba03:	mov    ecx,0x0
  40ba08:	mov    r8d,0x8
  40ba0e:	lea    rax,[rip+0x6b0b]        # 412520 <main@@Base+0xb700>
  40ba15:	push   rax
  40ba16:	lea    rax,[rip+0x34743]        # 440160 <__data_start@@Base+0xb0>
  40ba1d:	push   rax
  40ba1e:	call   424aa0 <flatcc_json_parser_union_type@@Base>
  40ba23:	add    rsp,0x10
  40ba27:	jmp    40de6a <main@@Base+0x704a>
  40ba2c:	mov    rdi,r14
  40ba2f:	mov    rsi,rax
  40ba32:	mov    rdx,r15
  40ba35:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ba3a:	mov    rbx,r15
  40ba3d:	cmp    rax,r15
  40ba40:	je     40c71b <main@@Base+0x58fb>
  40ba46:	cmp    BYTE PTR [rax],0x5d
  40ba49:	jne    40c718 <main@@Base+0x58f8>
  40ba4f:	lea    rbp,[rax+0x1]
  40ba53:	mov    rcx,r15
  40ba56:	sub    rcx,rbp
  40ba59:	cmp    rcx,0x2
  40ba5d:	jl     40db8e <main@@Base+0x6d6e>
  40ba63:	cmp    BYTE PTR [rbp+0x0],0x20
  40ba67:	jg     40a813 <main@@Base+0x39f3>
  40ba6d:	jne    40db8e <main@@Base+0x6d6e>
  40ba73:	cmp    BYTE PTR [rax+0x2],0x20
  40ba77:	jle    40db8e <main@@Base+0x6d6e>
  40ba7d:	add    rax,0x2
  40ba81:	jmp    40a810 <main@@Base+0x39f0>
  40ba86:	mov    rdi,r14
  40ba89:	mov    rdx,r15
  40ba8c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ba91:	mov    rsi,rax
  40ba94:	cmp    rsi,r15
  40ba97:	je     40bae0 <main@@Base+0x4cc0>
  40ba99:	cmp    BYTE PTR [rsi],0x3a
  40ba9c:	jne    40bae0 <main@@Base+0x4cc0>
  40ba9e:	lea    rbx,[rsi+0x1]
  40baa2:	mov    rax,r15
  40baa5:	sub    rax,rbx
  40baa8:	cmp    rax,0x2
  40baac:	jl     40cc26 <main@@Base+0x5e06>
  40bab2:	cmp    BYTE PTR [rbx],0x20
  40bab5:	jg     40cc37 <main@@Base+0x5e17>
  40babb:	jne    40cc26 <main@@Base+0x5e06>
  40bac1:	cmp    BYTE PTR [rsi+0x2],0x20
  40bac5:	jle    40cc26 <main@@Base+0x5e06>
  40bacb:	add    rsi,0x2
  40bacf:	mov    rbx,rsi
  40bad2:	cmp    r12,rbx
  40bad5:	jne    40cc40 <main@@Base+0x5e20>
  40badb:	jmp    40de5c <main@@Base+0x703c>
  40bae0:	mov    rdi,r14
  40bae3:	mov    rdx,r15
  40bae6:	mov    ecx,0x4
  40baeb:	call   422690 <flatcc_json_parser_set_error@@Base>
  40baf0:	jmp    40cc34 <main@@Base+0x5e14>
  40baf5:	mov    rdi,r14
  40baf8:	mov    rdx,r15
  40bafb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bb00:	mov    rsi,rax
  40bb03:	cmp    rsi,r15
  40bb06:	je     40bbb1 <main@@Base+0x4d91>
  40bb0c:	cmp    BYTE PTR [rsi],0x3a
  40bb0f:	jne    40bbb1 <main@@Base+0x4d91>
  40bb15:	lea    rbx,[rsi+0x1]
  40bb19:	mov    rax,r15
  40bb1c:	sub    rax,rbx
  40bb1f:	cmp    rax,0x2
  40bb23:	jl     40ccd9 <main@@Base+0x5eb9>
  40bb29:	cmp    BYTE PTR [rbx],0x20
  40bb2c:	jg     40ccea <main@@Base+0x5eca>
  40bb32:	jne    40ccd9 <main@@Base+0x5eb9>
  40bb38:	cmp    BYTE PTR [rsi+0x2],0x20
  40bb3c:	jle    40ccd9 <main@@Base+0x5eb9>
  40bb42:	add    rsi,0x2
  40bb46:	mov    rbx,rsi
  40bb49:	cmp    r12,rbx
  40bb4c:	jne    40ccf3 <main@@Base+0x5ed3>
  40bb52:	jmp    40de5c <main@@Base+0x703c>
  40bb57:	mov    rdi,r14
  40bb5a:	mov    rdx,r15
  40bb5d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bb62:	mov    rsi,rax
  40bb65:	cmp    rsi,r15
  40bb68:	je     40bbc6 <main@@Base+0x4da6>
  40bb6a:	cmp    BYTE PTR [rsi],0x3a
  40bb6d:	jne    40bbc6 <main@@Base+0x4da6>
  40bb6f:	lea    rbx,[rsi+0x1]
  40bb73:	mov    rax,r15
  40bb76:	sub    rax,rbx
  40bb79:	cmp    rax,0x2
  40bb7d:	jl     40cda3 <main@@Base+0x5f83>
  40bb83:	cmp    BYTE PTR [rbx],0x20
  40bb86:	jg     40cdb4 <main@@Base+0x5f94>
  40bb8c:	jne    40cda3 <main@@Base+0x5f83>
  40bb92:	cmp    BYTE PTR [rsi+0x2],0x20
  40bb96:	jle    40cda3 <main@@Base+0x5f83>
  40bb9c:	add    rsi,0x2
  40bba0:	mov    rbx,rsi
  40bba3:	cmp    r12,rbx
  40bba6:	jne    40cdbd <main@@Base+0x5f9d>
  40bbac:	jmp    40de5c <main@@Base+0x703c>
  40bbb1:	mov    rdi,r14
  40bbb4:	mov    rdx,r15
  40bbb7:	mov    ecx,0x4
  40bbbc:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bbc1:	jmp    40cce7 <main@@Base+0x5ec7>
  40bbc6:	mov    rdi,r14
  40bbc9:	mov    rdx,r15
  40bbcc:	mov    ecx,0x4
  40bbd1:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bbd6:	jmp    40cdb1 <main@@Base+0x5f91>
  40bbdb:	mov    rbp,r15
  40bbde:	jmp    40a431 <main@@Base+0x3611>
  40bbe3:	cmp    cl,0x5d
  40bbe6:	jne    40c984 <main@@Base+0x5b64>
  40bbec:	lea    rbp,[rax+0x1]
  40bbf0:	mov    rcx,r15
  40bbf3:	sub    rcx,rbp
  40bbf6:	cmp    rcx,0x2
  40bbfa:	jl     40bc0c <main@@Base+0x4dec>
  40bbfc:	cmp    BYTE PTR [rbp+0x0],0x20
  40bc00:	jg     40a431 <main@@Base+0x3611>
  40bc06:	je     40a4a9 <main@@Base+0x3689>
  40bc0c:	mov    rdi,r14
  40bc0f:	mov    rsi,rbp
  40bc12:	mov    rdx,r15
  40bc15:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bc1a:	jmp    40a42e <main@@Base+0x360e>
  40bc1f:	mov    rdi,r14
  40bc22:	mov    rsi,r15
  40bc25:	jmp    40c98a <main@@Base+0x5b6a>
  40bc2a:	mov    rax,rbx
  40bc2d:	jmp    40c910 <main@@Base+0x5af0>
  40bc32:	mov    rdi,r14
  40bc35:	mov    rsi,rbx
  40bc38:	mov    rdx,r15
  40bc3b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bc40:	mov    rbx,rax
  40bc43:	cmp    r12,rbx
  40bc46:	je     40de5c <main@@Base+0x703c>
  40bc4c:	mov    DWORD PTR [rsp+0x1c],0x0
  40bc54:	mov    rdi,QWORD PTR [r14]
  40bc57:	mov    esi,0x3
  40bc5c:	call   41dcc0 <flatcc_builder_start_table@@Base>
  40bc61:	test   eax,eax
  40bc63:	jne    40c352 <main@@Base+0x5532>
  40bc69:	cmp    rbx,r15
  40bc6c:	je     40c32e <main@@Base+0x550e>
  40bc72:	cmp    BYTE PTR [rbx],0x7b
  40bc75:	jne    40c32e <main@@Base+0x550e>
  40bc7b:	lea    rax,[rbx+0x1]
  40bc7f:	mov    rcx,r15
  40bc82:	sub    rcx,rax
  40bc85:	cmp    rcx,0x2
  40bc89:	jl     40d929 <main@@Base+0x6b09>
  40bc8f:	cmp    BYTE PTR [rax],0x20
  40bc92:	jg     40d937 <main@@Base+0x6b17>
  40bc98:	jne    40d929 <main@@Base+0x6b09>
  40bc9e:	cmp    BYTE PTR [rbx+0x2],0x20
  40bca2:	jle    40d929 <main@@Base+0x6b09>
  40bca8:	add    rbx,0x2
  40bcac:	mov    rax,rbx
  40bcaf:	jmp    40d937 <main@@Base+0x6b17>
  40bcb4:	mov    rbp,r15
  40bcb7:	jmp    40de6d <main@@Base+0x704d>
  40bcbc:	cmp    cl,0x7d
  40bcbf:	jne    40cb08 <main@@Base+0x5ce8>
  40bcc5:	lea    rbp,[rax+0x1]
  40bcc9:	mov    rcx,r15
  40bccc:	sub    rcx,rbp
  40bccf:	cmp    rcx,0x2
  40bcd3:	jl     40bcf0 <main@@Base+0x4ed0>
  40bcd5:	cmp    BYTE PTR [rbp+0x0],0x20
  40bcd9:	jg     40de6d <main@@Base+0x704d>
  40bcdf:	jne    40bcf0 <main@@Base+0x4ed0>
  40bce1:	cmp    BYTE PTR [rax+0x2],0x20
  40bce5:	jle    40bcf0 <main@@Base+0x4ed0>
  40bce7:	add    rax,0x2
  40bceb:	jmp    40de6a <main@@Base+0x704a>
  40bcf0:	mov    rdi,r14
  40bcf3:	mov    rsi,rbp
  40bcf6:	mov    rdx,r15
  40bcf9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bcfe:	jmp    40de6a <main@@Base+0x704a>
  40bd03:	mov    rdi,r14
  40bd06:	mov    rdx,r15
  40bd09:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bd0e:	mov    rsi,rax
  40bd11:	cmp    rsi,r15
  40bd14:	je     40bd5f <main@@Base+0x4f3f>
  40bd16:	cmp    BYTE PTR [rsi],0x3a
  40bd19:	jne    40bd5f <main@@Base+0x4f3f>
  40bd1b:	lea    r13,[rsi+0x1]
  40bd1f:	mov    rax,r15
  40bd22:	sub    rax,r13
  40bd25:	cmp    rax,0x2
  40bd29:	jl     40ce94 <main@@Base+0x6074>
  40bd2f:	cmp    BYTE PTR [r13+0x0],0x20
  40bd34:	jg     40cea5 <main@@Base+0x6085>
  40bd3a:	jne    40ce94 <main@@Base+0x6074>
  40bd40:	cmp    BYTE PTR [rsi+0x2],0x20
  40bd44:	jle    40ce94 <main@@Base+0x6074>
  40bd4a:	add    rsi,0x2
  40bd4e:	mov    r13,rsi
  40bd51:	cmp    r12,r13
  40bd54:	jne    40ceae <main@@Base+0x608e>
  40bd5a:	jmp    40de5c <main@@Base+0x703c>
  40bd5f:	mov    rdi,r14
  40bd62:	mov    rdx,r15
  40bd65:	mov    ecx,0x4
  40bd6a:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bd6f:	jmp    40cea2 <main@@Base+0x6082>
  40bd74:	mov    rdi,r14
  40bd77:	mov    rsi,rbx
  40bd7a:	mov    rdx,r15
  40bd7d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bd82:	mov    rbx,rax
  40bd85:	cmp    r12,rbx
  40bd88:	je     40de5c <main@@Base+0x703c>
  40bd8e:	mov    rdi,QWORD PTR [r14]
  40bd91:	call   41d8d0 <flatcc_builder_start_offset_vector@@Base>
  40bd96:	test   eax,eax
  40bd98:	jne    407511 <main@@Base+0x6f1>
  40bd9e:	cmp    rbx,r15
  40bda1:	je     40bde1 <main@@Base+0x4fc1>
  40bda3:	cmp    BYTE PTR [rbx],0x5b
  40bda6:	jne    40bde1 <main@@Base+0x4fc1>
  40bda8:	lea    rax,[rbx+0x1]
  40bdac:	mov    rcx,r15
  40bdaf:	sub    rcx,rax
  40bdb2:	cmp    rcx,0x2
  40bdb6:	jl     40c5b5 <main@@Base+0x5795>
  40bdbc:	cmp    BYTE PTR [rax],0x20
  40bdbf:	jg     40c5c3 <main@@Base+0x57a3>
  40bdc5:	jne    40c5b5 <main@@Base+0x5795>
  40bdcb:	cmp    BYTE PTR [rbx+0x2],0x20
  40bdcf:	jle    40c5b5 <main@@Base+0x5795>
  40bdd5:	add    rbx,0x2
  40bdd9:	mov    rax,rbx
  40bddc:	jmp    40c5c3 <main@@Base+0x57a3>
  40bde1:	mov    rdi,r14
  40bde4:	mov    rsi,rbx
  40bde7:	mov    rdx,r15
  40bdea:	mov    ecx,0x16
  40bdef:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bdf4:	mov    rbp,rax
  40bdf7:	mov    rdi,QWORD PTR [r14]
  40bdfa:	call   41da90 <flatcc_builder_end_offset_vector@@Base>
  40bdff:	mov    DWORD PTR [rsp+0x1c],eax
  40be03:	test   eax,eax
  40be05:	je     40fc63 <main@@Base+0x8e43>
  40be0b:	mov    rdi,QWORD PTR [r14]
  40be0e:	mov    esi,0x1c
  40be13:	jmp    40a44d <main@@Base+0x362d>
  40be18:	mov    rdi,r14
  40be1b:	mov    rsi,rbx
  40be1e:	mov    rdx,r15
  40be21:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40be26:	mov    rbx,rax
  40be29:	cmp    r12,rbx
  40be2c:	je     40de5c <main@@Base+0x703c>
  40be32:	mov    rdi,QWORD PTR [r14]
  40be35:	mov    esi,0x8
  40be3a:	mov    ecx,0x1fffffff
  40be3f:	mov    edx,0x4
  40be44:	call   41d850 <flatcc_builder_start_vector@@Base>
  40be49:	test   eax,eax
  40be4b:	jne    407511 <main@@Base+0x6f1>
  40be51:	cmp    rbx,r15
  40be54:	je     40be94 <main@@Base+0x5074>
  40be56:	cmp    BYTE PTR [rbx],0x5b
  40be59:	jne    40be94 <main@@Base+0x5074>
  40be5b:	lea    rax,[rbx+0x1]
  40be5f:	mov    rcx,r15
  40be62:	sub    rcx,rax
  40be65:	cmp    rcx,0x2
  40be69:	jl     40c60f <main@@Base+0x57ef>
  40be6f:	cmp    BYTE PTR [rax],0x20
  40be72:	jg     40c61d <main@@Base+0x57fd>
  40be78:	jne    40c60f <main@@Base+0x57ef>
  40be7e:	cmp    BYTE PTR [rbx+0x2],0x20
  40be82:	jle    40c60f <main@@Base+0x57ef>
  40be88:	add    rbx,0x2
  40be8c:	mov    rax,rbx
  40be8f:	jmp    40c61d <main@@Base+0x57fd>
  40be94:	mov    rdi,r14
  40be97:	mov    rsi,rbx
  40be9a:	mov    rdx,r15
  40be9d:	mov    ecx,0x16
  40bea2:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bea7:	mov    rbp,rax
  40beaa:	mov    rdi,QWORD PTR [r14]
  40bead:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40beb2:	mov    DWORD PTR [rsp+0x1c],eax
  40beb6:	test   eax,eax
  40beb8:	je     40fc63 <main@@Base+0x8e43>
  40bebe:	mov    rdi,QWORD PTR [r14]
  40bec1:	mov    esi,0x1d
  40bec6:	jmp    40a44d <main@@Base+0x362d>
  40becb:	mov    rdi,r14
  40bece:	mov    rsi,rbx
  40bed1:	mov    rdx,r15
  40bed4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bed9:	mov    rbx,rax
  40bedc:	cmp    r12,rbx
  40bedf:	je     40de5c <main@@Base+0x703c>
  40bee5:	mov    rdi,QWORD PTR [r14]
  40bee8:	call   41d8d0 <flatcc_builder_start_offset_vector@@Base>
  40beed:	test   eax,eax
  40beef:	jne    407511 <main@@Base+0x6f1>
  40bef5:	cmp    rbx,r15
  40bef8:	je     40bf38 <main@@Base+0x5118>
  40befa:	cmp    BYTE PTR [rbx],0x5b
  40befd:	jne    40bf38 <main@@Base+0x5118>
  40beff:	lea    rax,[rbx+0x1]
  40bf03:	mov    rcx,r15
  40bf06:	sub    rcx,rax
  40bf09:	cmp    rcx,0x2
  40bf0d:	jl     40c669 <main@@Base+0x5849>
  40bf13:	cmp    BYTE PTR [rax],0x20
  40bf16:	jg     40c677 <main@@Base+0x5857>
  40bf1c:	jne    40c669 <main@@Base+0x5849>
  40bf22:	cmp    BYTE PTR [rbx+0x2],0x20
  40bf26:	jle    40c669 <main@@Base+0x5849>
  40bf2c:	add    rbx,0x2
  40bf30:	mov    rax,rbx
  40bf33:	jmp    40c677 <main@@Base+0x5857>
  40bf38:	mov    rdi,r14
  40bf3b:	mov    rsi,rbx
  40bf3e:	mov    rdx,r15
  40bf41:	mov    ecx,0x16
  40bf46:	call   422690 <flatcc_json_parser_set_error@@Base>
  40bf4b:	mov    rbp,rax
  40bf4e:	mov    rdi,QWORD PTR [r14]
  40bf51:	call   41da90 <flatcc_builder_end_offset_vector@@Base>
  40bf56:	mov    DWORD PTR [rsp+0x1c],eax
  40bf5a:	test   eax,eax
  40bf5c:	je     40fc63 <main@@Base+0x8e43>
  40bf62:	mov    rdi,QWORD PTR [r14]
  40bf65:	mov    esi,0xb
  40bf6a:	jmp    40a44d <main@@Base+0x362d>
  40bf6f:	mov    rdi,r14
  40bf72:	mov    rsi,r15
  40bf75:	jmp    40cb0e <main@@Base+0x5cee>
  40bf7a:	mov    rdi,r14
  40bf7d:	mov    rsi,rbx
  40bf80:	mov    rdx,r15
  40bf83:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40bf88:	mov    rbx,rax
  40bf8b:	cmp    r13,rbx
  40bf8e:	je     40c144 <main@@Base+0x5324>
  40bf94:	mov    QWORD PTR [rsp+0x10],0x0
  40bf9d:	mov    DWORD PTR [rsp+0x20],0x0
  40bfa5:	mov    WORD PTR [rsp+0xc],0x0
  40bfac:	cmp    rbx,r15
  40bfaf:	je     40bff3 <main@@Base+0x51d3>
  40bfb1:	mov    rdi,r14
  40bfb4:	mov    rsi,rbx
  40bfb7:	mov    rdx,r15
  40bfba:	lea    rcx,[rsp+0x20]
  40bfbf:	lea    r8,[rsp+0x10]
  40bfc4:	call   424130 <flatcc_json_parser_integer@@Base>
  40bfc9:	cmp    rax,rbx
  40bfcc:	je     40bffb <main@@Base+0x51db>
  40bfce:	mov    r12,QWORD PTR [rsp+0x10]
  40bfd3:	cmp    DWORD PTR [rsp+0x20],0x0
  40bfd8:	je     40c003 <main@@Base+0x51e3>
  40bfda:	cmp    r12,0x8001
  40bfe1:	jb     40c024 <main@@Base+0x5204>
  40bfe3:	mov    rdi,r14
  40bfe6:	mov    rsi,rax
  40bfe9:	mov    rdx,r15
  40bfec:	mov    ecx,0x8
  40bff1:	jmp    40c01a <main@@Base+0x51fa>
  40bff3:	xor    r12d,r12d
  40bff6:	mov    rax,r15
  40bff9:	jmp    40c02d <main@@Base+0x520d>
  40bffb:	xor    r12d,r12d
  40bffe:	mov    rax,rbx
  40c001:	jmp    40c02d <main@@Base+0x520d>
  40c003:	cmp    r12,0x8000
  40c00a:	jb     40c027 <main@@Base+0x5207>
  40c00c:	mov    rdi,r14
  40c00f:	mov    rsi,rax
  40c012:	mov    rdx,r15
  40c015:	mov    ecx,0x7
  40c01a:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c01f:	xor    r12d,r12d
  40c022:	jmp    40c02d <main@@Base+0x520d>
  40c024:	neg    r12
  40c027:	mov    WORD PTR [rsp+0xc],r12w
  40c02d:	mov    rbp,rax
  40c030:	cmp    rbx,rax
  40c033:	jne    40c06a <main@@Base+0x524a>
  40c035:	mov    rdi,r14
  40c038:	mov    rsi,rbx
  40c03b:	mov    rdx,r15
  40c03e:	lea    rcx,[rip+0x340fb]        # 440140 <__data_start@@Base+0x90>
  40c045:	lea    r8,[rsp+0xc]
  40c04a:	call   411ce0 <main@@Base+0xaec0>
  40c04f:	mov    rbp,rax
  40c052:	cmp    rax,rbx
  40c055:	je     40fc63 <main@@Base+0x8e43>
  40c05b:	cmp    rbp,r15
  40c05e:	je     40fc63 <main@@Base+0x8e43>
  40c064:	movzx  r12d,WORD PTR [rsp+0xc]
  40c06a:	movzx  eax,r12w
  40c06e:	cmp    eax,0x96
  40c073:	jne    40c080 <main@@Base+0x5260>
  40c075:	test   BYTE PTR [r14+0x10],0x2
  40c07a:	je     40de6d <main@@Base+0x704d>
  40c080:	mov    rdi,QWORD PTR [r14]
  40c083:	mov    edx,0x2
  40c088:	mov    esi,0x1
  40c08d:	mov    ecx,0x2
  40c092:	call   41f040 <flatcc_builder_table_add@@Base>
  40c097:	test   rax,rax
  40c09a:	je     40fc63 <main@@Base+0x8e43>
  40c0a0:	mov    WORD PTR [rax],r12w
  40c0a4:	jmp    40de6d <main@@Base+0x704d>
  40c0a9:	mov    rdi,r14
  40c0ac:	mov    rsi,rbx
  40c0af:	mov    rdx,r15
  40c0b2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c0b7:	mov    rbx,rax
  40c0ba:	cmp    r13,rbx
  40c0bd:	je     40c144 <main@@Base+0x5324>
  40c0c3:	mov    DWORD PTR [rsp+0x10],0x0
  40c0cb:	mov    rdi,r14
  40c0ce:	mov    rsi,rbx
  40c0d1:	mov    rdx,r15
  40c0d4:	lea    rcx,[rsp+0x10]
  40c0d9:	call   424010 <flatcc_json_parser_float@@Base>
  40c0de:	mov    rbp,rax
  40c0e1:	cmp    rbx,rax
  40c0e4:	jne    40c115 <main@@Base+0x52f5>
  40c0e6:	mov    rdi,r14
  40c0e9:	mov    rsi,rbx
  40c0ec:	mov    rdx,r15
  40c0ef:	lea    rcx,[rip+0x340ea]        # 4401e0 <__data_start@@Base+0x130>
  40c0f6:	lea    r8,[rsp+0x10]
  40c0fb:	call   413790 <main@@Base+0xc970>
  40c100:	mov    rbp,rax
  40c103:	cmp    rax,rbx
  40c106:	je     40fc63 <main@@Base+0x8e43>
  40c10c:	cmp    rbp,r15
  40c10f:	je     40fc63 <main@@Base+0x8e43>
  40c115:	vmovss xmm0,DWORD PTR [rsp+0x10]
  40c11b:	vucomiss xmm0,DWORD PTR [rip+0x25ee1]        # 432004 <_IO_stdin_used@@Base+0x4>
  40c123:	jne    40c132 <main@@Base+0x5312>
  40c125:	jp     40c132 <main@@Base+0x5312>
  40c127:	test   BYTE PTR [r14+0x10],0x2
  40c12c:	je     40de6d <main@@Base+0x704d>
  40c132:	mov    rdi,QWORD PTR [r14]
  40c135:	mov    edx,0x4
  40c13a:	mov    esi,0x19
  40c13f:	jmp    40928a <main@@Base+0x246a>
  40c144:	mov    rdi,r14
  40c147:	mov    rsi,r13
  40c14a:	jmp    40de62 <main@@Base+0x7042>
  40c14f:	mov    rdi,r14
  40c152:	mov    rsi,rcx
  40c155:	mov    rdx,r15
  40c158:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c15d:	mov    rcx,rax
  40c160:	cmp    r12,rcx
  40c163:	je     40a022 <main@@Base+0x3202>
  40c169:	mov    QWORD PTR [rsp+0x10],0x0
  40c172:	mov    DWORD PTR [rsp+0xc],0x0
  40c17a:	mov    QWORD PTR [rsp+0x20],0x0
  40c183:	cmp    rcx,r15
  40c186:	je     40c1ef <main@@Base+0x53cf>
  40c188:	mov    rdi,r14
  40c18b:	mov    rsi,rcx
  40c18e:	mov    rbp,rcx
  40c191:	mov    rdx,r15
  40c194:	lea    rcx,[rsp+0xc]
  40c199:	lea    r8,[rsp+0x10]
  40c19e:	call   424130 <flatcc_json_parser_integer@@Base>
  40c1a3:	mov    rcx,rbp
  40c1a6:	cmp    rax,rbp
  40c1a9:	je     40c9e9 <main@@Base+0x5bc9>
  40c1af:	mov    rbx,QWORD PTR [rsp+0x10]
  40c1b4:	cmp    DWORD PTR [rsp+0xc],0x0
  40c1b9:	je     40ce6e <main@@Base+0x604e>
  40c1bf:	movabs rcx,0x8000000000000000
  40c1c9:	cmp    rbx,rcx
  40c1cc:	jbe    40cf88 <main@@Base+0x6168>
  40c1d2:	mov    rdi,r14
  40c1d5:	mov    rsi,rax
  40c1d8:	mov    rdx,r15
  40c1db:	mov    ecx,0x8
  40c1e0:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c1e5:	xor    ebx,ebx
  40c1e7:	mov    rcx,rbp
  40c1ea:	jmp    40cf93 <main@@Base+0x6173>
  40c1ef:	xor    ebx,ebx
  40c1f1:	mov    rax,r15
  40c1f4:	jmp    40cf93 <main@@Base+0x6173>
  40c1f9:	mov    rdi,r14
  40c1fc:	mov    rsi,rbx
  40c1ff:	mov    rdx,r15
  40c202:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c207:	mov    rbx,rax
  40c20a:	cmp    r12,rbx
  40c20d:	je     40de5c <main@@Base+0x703c>
  40c213:	mov    DWORD PTR [rsp+0x1c],0x0
  40c21b:	mov    rdi,QWORD PTR [r14]
  40c21e:	mov    esi,0x3
  40c223:	call   41dcc0 <flatcc_builder_start_table@@Base>
  40c228:	test   eax,eax
  40c22a:	jne    40c6e7 <main@@Base+0x58c7>
  40c230:	cmp    rbx,r15
  40c233:	je     40c6c3 <main@@Base+0x58a3>
  40c239:	cmp    BYTE PTR [rbx],0x7b
  40c23c:	jne    40c6c3 <main@@Base+0x58a3>
  40c242:	lea    rax,[rbx+0x1]
  40c246:	mov    rcx,r15
  40c249:	sub    rcx,rax
  40c24c:	cmp    rcx,0x2
  40c250:	jl     40df24 <main@@Base+0x7104>
  40c256:	cmp    BYTE PTR [rax],0x20
  40c259:	jg     40df32 <main@@Base+0x7112>
  40c25f:	jne    40df24 <main@@Base+0x7104>
  40c265:	cmp    BYTE PTR [rbx+0x2],0x20
  40c269:	jle    40df24 <main@@Base+0x7104>
  40c26f:	add    rbx,0x2
  40c273:	mov    rax,rbx
  40c276:	jmp    40df32 <main@@Base+0x7112>
  40c27b:	mov    rdi,r14
  40c27e:	mov    rsi,rbx
  40c281:	mov    rdx,r15
  40c284:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c289:	mov    rbx,rax
  40c28c:	cmp    r12,rbx
  40c28f:	je     40de5c <main@@Base+0x703c>
  40c295:	mov    rdi,QWORD PTR [r14]
  40c298:	mov    esi,0x1
  40c29d:	mov    ecx,0xffffffff
  40c2a2:	mov    edx,0x1
  40c2a7:	call   41d850 <flatcc_builder_start_vector@@Base>
  40c2ac:	test   eax,eax
  40c2ae:	jne    407511 <main@@Base+0x6f1>
  40c2b4:	cmp    rbx,r15
  40c2b7:	je     40c2f7 <main@@Base+0x54d7>
  40c2b9:	cmp    BYTE PTR [rbx],0x5b
  40c2bc:	jne    40c2f7 <main@@Base+0x54d7>
  40c2be:	lea    rax,[rbx+0x1]
  40c2c2:	mov    rcx,r15
  40c2c5:	sub    rcx,rax
  40c2c8:	cmp    rcx,0x2
  40c2cc:	jl     40cbc4 <main@@Base+0x5da4>
  40c2d2:	cmp    BYTE PTR [rax],0x20
  40c2d5:	jg     40cbd2 <main@@Base+0x5db2>
  40c2db:	jne    40cbc4 <main@@Base+0x5da4>
  40c2e1:	cmp    BYTE PTR [rbx+0x2],0x20
  40c2e5:	jle    40cbc4 <main@@Base+0x5da4>
  40c2eb:	add    rbx,0x2
  40c2ef:	mov    rax,rbx
  40c2f2:	jmp    40cbd2 <main@@Base+0x5db2>
  40c2f7:	mov    rdi,r14
  40c2fa:	mov    rsi,rbx
  40c2fd:	mov    rdx,r15
  40c300:	mov    ecx,0x16
  40c305:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c30a:	mov    rbp,rax
  40c30d:	mov    rdi,QWORD PTR [r14]
  40c310:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40c315:	mov    DWORD PTR [rsp+0x1c],eax
  40c319:	test   eax,eax
  40c31b:	je     40fc63 <main@@Base+0x8e43>
  40c321:	mov    rdi,QWORD PTR [r14]
  40c324:	mov    esi,0x5
  40c329:	jmp    40a44d <main@@Base+0x362d>
  40c32e:	mov    rdi,r14
  40c331:	mov    rsi,rbx
  40c334:	mov    rdx,r15
  40c337:	mov    ecx,0x15
  40c33c:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c341:	mov    rbp,rax
  40c344:	cmp    DWORD PTR [r14+0x1c],0x0
  40c349:	je     40f5a2 <main@@Base+0x8782>
  40c34f:	mov    rbx,rbp
  40c352:	mov    rdi,r14
  40c355:	mov    rsi,rbx
  40c358:	mov    rdx,r15
  40c35b:	mov    ecx,0x21
  40c360:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c365:	mov    rbp,rax
  40c368:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c36d:	mov    rbx,rax
  40c370:	je     407511 <main@@Base+0x6f1>
  40c376:	mov    rdi,QWORD PTR [r14]
  40c379:	mov    esi,0x23
  40c37e:	jmp    40a44d <main@@Base+0x362d>
  40c383:	mov    rdi,r14
  40c386:	mov    rsi,rbp
  40c389:	mov    rdx,r15
  40c38c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c391:	mov    rbp,rax
  40c394:	cmp    r12,rbp
  40c397:	je     40de5c <main@@Base+0x703c>
  40c39d:	mov    DWORD PTR [rsp+0x1c],0x0
  40c3a5:	mov    rdi,QWORD PTR [r14]
  40c3a8:	xor    esi,esi
  40c3aa:	call   41dcc0 <flatcc_builder_start_table@@Base>
  40c3af:	test   eax,eax
  40c3b1:	jne    40c9b8 <main@@Base+0x5b98>
  40c3b7:	cmp    rbp,r15
  40c3ba:	je     40c997 <main@@Base+0x5b77>
  40c3c0:	cmp    BYTE PTR [rbp+0x0],0x7b
  40c3c4:	jne    40c997 <main@@Base+0x5b77>
  40c3ca:	lea    rax,[rbp+0x1]
  40c3ce:	mov    rcx,r15
  40c3d1:	sub    rcx,rax
  40c3d4:	cmp    rcx,0x2
  40c3d8:	jl     40df7e <main@@Base+0x715e>
  40c3de:	cmp    BYTE PTR [rax],0x20
  40c3e1:	jg     40df8c <main@@Base+0x716c>
  40c3e7:	jne    40df7e <main@@Base+0x715e>
  40c3ed:	cmp    BYTE PTR [rbp+0x2],0x20
  40c3f1:	jle    40df7e <main@@Base+0x715e>
  40c3f7:	mov    rax,rbp
  40c3fa:	add    rax,0x2
  40c3fe:	jmp    40df8c <main@@Base+0x716c>
  40c403:	test   rcx,0xffffffff80000000
  40c40a:	je     40c909 <main@@Base+0x5ae9>
  40c410:	mov    rdi,r14
  40c413:	mov    rsi,rax
  40c416:	mov    rdx,r15
  40c419:	mov    ecx,0x7
  40c41e:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c423:	mov    rbx,rbp
  40c426:	jmp    40c910 <main@@Base+0x5af0>
  40c42b:	mov    rdi,r14
  40c42e:	mov    rdx,r15
  40c431:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c436:	mov    rsi,rax
  40c439:	cmp    rsi,r15
  40c43c:	je     40c4eb <main@@Base+0x56cb>
  40c442:	cmp    BYTE PTR [rsi],0x3a
  40c445:	jne    40c4eb <main@@Base+0x56cb>
  40c44b:	lea    r13,[rsi+0x1]
  40c44f:	mov    rax,r15
  40c452:	sub    rax,r13
  40c455:	cmp    rax,0x2
  40c459:	jl     40dd57 <main@@Base+0x6f37>
  40c45f:	cmp    BYTE PTR [r13+0x0],0x20
  40c464:	jg     40dd68 <main@@Base+0x6f48>
  40c46a:	jne    40dd57 <main@@Base+0x6f37>
  40c470:	cmp    BYTE PTR [rsi+0x2],0x20
  40c474:	jle    40dd57 <main@@Base+0x6f37>
  40c47a:	add    rsi,0x2
  40c47e:	mov    r13,rsi
  40c481:	cmp    r12,r13
  40c484:	jne    40dd71 <main@@Base+0x6f51>
  40c48a:	jmp    40de5c <main@@Base+0x703c>
  40c48f:	mov    rdi,r14
  40c492:	mov    rdx,r15
  40c495:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c49a:	mov    rsi,rax
  40c49d:	cmp    rsi,r15
  40c4a0:	je     40c500 <main@@Base+0x56e0>
  40c4a2:	cmp    BYTE PTR [rsi],0x3a
  40c4a5:	jne    40c500 <main@@Base+0x56e0>
  40c4a7:	lea    r13,[rsi+0x1]
  40c4ab:	mov    rax,r15
  40c4ae:	sub    rax,r13
  40c4b1:	cmp    rax,0x2
  40c4b5:	jl     40dddd <main@@Base+0x6fbd>
  40c4bb:	cmp    BYTE PTR [r13+0x0],0x20
  40c4c0:	jg     40ddee <main@@Base+0x6fce>
  40c4c6:	jne    40dddd <main@@Base+0x6fbd>
  40c4cc:	cmp    BYTE PTR [rsi+0x2],0x20
  40c4d0:	jle    40dddd <main@@Base+0x6fbd>
  40c4d6:	add    rsi,0x2
  40c4da:	mov    r13,rsi
  40c4dd:	cmp    r12,r13
  40c4e0:	jne    40ddf3 <main@@Base+0x6fd3>
  40c4e6:	jmp    40de5c <main@@Base+0x703c>
  40c4eb:	mov    rdi,r14
  40c4ee:	mov    rdx,r15
  40c4f1:	mov    ecx,0x4
  40c4f6:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c4fb:	jmp    40dd65 <main@@Base+0x6f45>
  40c500:	mov    rdi,r14
  40c503:	mov    rdx,r15
  40c506:	mov    ecx,0x4
  40c50b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c510:	jmp    40ddeb <main@@Base+0x6fcb>
  40c515:	mov    rdi,r14
  40c518:	mov    rsi,r13
  40c51b:	mov    rdx,r15
  40c51e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c523:	mov    r13,rax
  40c526:	cmp    r12,r13
  40c529:	je     40de5c <main@@Base+0x703c>
  40c52f:	mov    QWORD PTR [rsp+0x10],0x0
  40c538:	mov    DWORD PTR [rsp+0x20],0x0
  40c540:	mov    DWORD PTR [rsp+0xc],0x0
  40c548:	xor    ebx,ebx
  40c54a:	cmp    r13,r15
  40c54d:	je     40c5ad <main@@Base+0x578d>
  40c54f:	mov    rdi,r14
  40c552:	mov    rsi,r13
  40c555:	mov    rdx,r15
  40c558:	lea    rcx,[rsp+0x20]
  40c55d:	lea    r8,[rsp+0x10]
  40c562:	call   424130 <flatcc_json_parser_integer@@Base>
  40c567:	cmp    rax,r13
  40c56a:	je     40cc1e <main@@Base+0x5dfe>
  40c570:	mov    rcx,QWORD PTR [rsp+0x10]
  40c575:	cmp    DWORD PTR [rsp+0x20],0x0
  40c57a:	je     40d904 <main@@Base+0x6ae4>
  40c580:	mov    edx,0xffffffff
  40c585:	add    rdx,0xffffffff80000001
  40c58c:	cmp    rcx,rdx
  40c58f:	jbe    40dafb <main@@Base+0x6cdb>
  40c595:	mov    rdi,r14
  40c598:	mov    rsi,rax
  40c59b:	mov    rdx,r15
  40c59e:	mov    ecx,0x8
  40c5a3:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c5a8:	jmp    40db04 <main@@Base+0x6ce4>
  40c5ad:	mov    rax,r15
  40c5b0:	jmp    40db04 <main@@Base+0x6ce4>
  40c5b5:	mov    rdi,r14
  40c5b8:	mov    rsi,rax
  40c5bb:	mov    rdx,r15
  40c5be:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c5c3:	mov    rsi,r15
  40c5c6:	cmp    rax,r15
  40c5c9:	je     40cff7 <main@@Base+0x61d7>
  40c5cf:	cmp    BYTE PTR [rax],0x5d
  40c5d2:	jne    40cff4 <main@@Base+0x61d4>
  40c5d8:	lea    rbp,[rax+0x1]
  40c5dc:	mov    rcx,r15
  40c5df:	sub    rcx,rbp
  40c5e2:	cmp    rcx,0x2
  40c5e6:	jl     40ec9f <main@@Base+0x7e7f>
  40c5ec:	cmp    BYTE PTR [rbp+0x0],0x20
  40c5f0:	jg     40bdf7 <main@@Base+0x4fd7>
  40c5f6:	jne    40ec9f <main@@Base+0x7e7f>
  40c5fc:	cmp    BYTE PTR [rax+0x2],0x20
  40c600:	jle    40ec9f <main@@Base+0x7e7f>
  40c606:	add    rax,0x2
  40c60a:	jmp    40bdf4 <main@@Base+0x4fd4>
  40c60f:	mov    rdi,r14
  40c612:	mov    rsi,rax
  40c615:	mov    rdx,r15
  40c618:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c61d:	mov    rbx,r15
  40c620:	cmp    rax,r15
  40c623:	je     40d107 <main@@Base+0x62e7>
  40c629:	cmp    BYTE PTR [rax],0x5d
  40c62c:	jne    40d104 <main@@Base+0x62e4>
  40c632:	lea    rbp,[rax+0x1]
  40c636:	mov    rcx,r15
  40c639:	sub    rcx,rbp
  40c63c:	cmp    rcx,0x2
  40c640:	jl     40e8c9 <main@@Base+0x7aa9>
  40c646:	cmp    BYTE PTR [rbp+0x0],0x20
  40c64a:	jg     40beaa <main@@Base+0x508a>
  40c650:	jne    40e8c9 <main@@Base+0x7aa9>
  40c656:	cmp    BYTE PTR [rax+0x2],0x20
  40c65a:	jle    40e8c9 <main@@Base+0x7aa9>
  40c660:	add    rax,0x2
  40c664:	jmp    40bea7 <main@@Base+0x5087>
  40c669:	mov    rdi,r14
  40c66c:	mov    rsi,rax
  40c66f:	mov    rdx,r15
  40c672:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c677:	mov    rsi,r15
  40c67a:	cmp    rax,r15
  40c67d:	je     40d7f7 <main@@Base+0x69d7>
  40c683:	cmp    BYTE PTR [rax],0x5d
  40c686:	jne    40d7f4 <main@@Base+0x69d4>
  40c68c:	lea    rbp,[rax+0x1]
  40c690:	mov    rcx,r15
  40c693:	sub    rcx,rbp
  40c696:	cmp    rcx,0x2
  40c69a:	jl     40ece8 <main@@Base+0x7ec8>
  40c6a0:	cmp    BYTE PTR [rbp+0x0],0x20
  40c6a4:	jg     40bf4e <main@@Base+0x512e>
  40c6aa:	jne    40ece8 <main@@Base+0x7ec8>
  40c6b0:	cmp    BYTE PTR [rax+0x2],0x20
  40c6b4:	jle    40ece8 <main@@Base+0x7ec8>
  40c6ba:	add    rax,0x2
  40c6be:	jmp    40bf4b <main@@Base+0x512b>
  40c6c3:	mov    rdi,r14
  40c6c6:	mov    rsi,rbx
  40c6c9:	mov    rdx,r15
  40c6cc:	mov    ecx,0x15
  40c6d1:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c6d6:	mov    rbp,rax
  40c6d9:	cmp    DWORD PTR [r14+0x1c],0x0
  40c6de:	je     40f93d <main@@Base+0x8b1d>
  40c6e4:	mov    rbx,rbp
  40c6e7:	mov    rdi,r14
  40c6ea:	mov    rsi,rbx
  40c6ed:	mov    rdx,r15
  40c6f0:	mov    ecx,0x21
  40c6f5:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c6fa:	mov    rbx,rax
  40c6fd:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c702:	mov    rbp,rax
  40c705:	je     407511 <main@@Base+0x6f1>
  40c70b:	mov    rdi,QWORD PTR [r14]
  40c70e:	mov    esi,0xe
  40c713:	jmp    40a44d <main@@Base+0x362d>
  40c718:	mov    rbx,rax
  40c71b:	mov    BYTE PTR [rsp+0xc],0x0
  40c720:	mov    rdi,QWORD PTR [r14]
  40c723:	mov    esi,0x1
  40c728:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40c72d:	test   rax,rax
  40c730:	je     407511 <main@@Base+0x6f1>
  40c736:	mov    rbp,rax
  40c739:	mov    rax,r15
  40c73c:	sub    rax,rbx
  40c73f:	cmp    rax,0x4
  40c743:	jl     40c76b <main@@Base+0x594b>
  40c745:	cmp    DWORD PTR [rbx],0x65757274
  40c74b:	je     40c7bc <main@@Base+0x599c>
  40c74d:	cmp    rax,0x5
  40c751:	jl     40c76b <main@@Base+0x594b>
  40c753:	mov    eax,DWORD PTR [rbx]
  40c755:	mov    ecx,0x736c6166
  40c75a:	xor    eax,ecx
  40c75c:	movzx  ecx,BYTE PTR [rbx+0x4]
  40c760:	xor    ecx,0x65
  40c763:	or     ecx,eax
  40c765:	je     40c8ed <main@@Base+0x5acd>
  40c76b:	mov    QWORD PTR [rsp+0x10],0x0
  40c774:	mov    DWORD PTR [rsp+0x20],0x0
  40c77c:	cmp    rbx,r15
  40c77f:	je     40c7b5 <main@@Base+0x5995>
  40c781:	mov    rdi,r14
  40c784:	mov    rsi,rbx
  40c787:	mov    rdx,r15
  40c78a:	lea    rcx,[rsp+0x20]
  40c78f:	lea    r8,[rsp+0x10]
  40c794:	call   424130 <flatcc_json_parser_integer@@Base>
  40c799:	cmp    rax,rbx
  40c79c:	je     40c7ce <main@@Base+0x59ae>
  40c79e:	cmp    DWORD PTR [rsp+0x20],0x0
  40c7a3:	je     40c7d5 <main@@Base+0x59b5>
  40c7a5:	mov    rdi,r14
  40c7a8:	mov    rsi,rax
  40c7ab:	mov    rdx,r15
  40c7ae:	mov    ecx,0x8
  40c7b3:	jmp    40c7f1 <main@@Base+0x59d1>
  40c7b5:	xor    ecx,ecx
  40c7b7:	mov    rax,r15
  40c7ba:	jmp    40c7f8 <main@@Base+0x59d8>
  40c7bc:	mov    BYTE PTR [rsp+0xc],0x1
  40c7c1:	lea    rax,[rbx+0x4]
  40c7c5:	mov    cl,0x1
  40c7c7:	cmp    rbx,rax
  40c7ca:	jne    40c838 <main@@Base+0x5a18>
  40c7cc:	jmp    40c807 <main@@Base+0x59e7>
  40c7ce:	xor    ecx,ecx
  40c7d0:	mov    rax,rbx
  40c7d3:	jmp    40c7f8 <main@@Base+0x59d8>
  40c7d5:	mov    rcx,QWORD PTR [rsp+0x10]
  40c7da:	cmp    rcx,0x100
  40c7e1:	jb     40c7f8 <main@@Base+0x59d8>
  40c7e3:	mov    rdi,r14
  40c7e6:	mov    rsi,rax
  40c7e9:	mov    rdx,r15
  40c7ec:	mov    ecx,0x7
  40c7f1:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c7f6:	xor    ecx,ecx
  40c7f8:	test   cl,cl
  40c7fa:	setne  cl
  40c7fd:	setne  BYTE PTR [rsp+0xc]
  40c802:	cmp    rbx,rax
  40c805:	jne    40c838 <main@@Base+0x5a18>
  40c807:	mov    rdi,r14
  40c80a:	mov    rsi,rbx
  40c80d:	mov    rdx,r15
  40c810:	lea    rcx,[rip+0x33969]        # 440180 <__data_start@@Base+0xd0>
  40c817:	lea    r8,[rsp+0xc]
  40c81c:	call   413610 <main@@Base+0xc7f0>
  40c821:	cmp    rax,rbx
  40c824:	je     40fc91 <main@@Base+0x8e71>
  40c82a:	cmp    rax,r15
  40c82d:	je     40fc91 <main@@Base+0x8e71>
  40c833:	movzx  ecx,BYTE PTR [rsp+0xc]
  40c838:	mov    BYTE PTR [rbp+0x0],cl
  40c83b:	mov    rcx,r15
  40c83e:	sub    rcx,rax
  40c841:	cmp    rcx,0x2
  40c845:	jl     40c861 <main@@Base+0x5a41>
  40c847:	cmp    BYTE PTR [rax],0x20
  40c84a:	jg     40c86f <main@@Base+0x5a4f>
  40c84c:	jne    40c861 <main@@Base+0x5a41>
  40c84e:	cmp    BYTE PTR [rax+0x1],0x20
  40c852:	jle    40c861 <main@@Base+0x5a41>
  40c854:	inc    rax
  40c857:	cmp    rax,r15
  40c85a:	jne    40c878 <main@@Base+0x5a58>
  40c85c:	jmp    40d983 <main@@Base+0x6b63>
  40c861:	mov    rdi,r14
  40c864:	mov    rsi,rax
  40c867:	mov    rdx,r15
  40c86a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c86f:	cmp    rax,r15
  40c872:	je     40d983 <main@@Base+0x6b63>
  40c878:	movzx  ecx,BYTE PTR [rax]
  40c87b:	cmp    cl,0x2c
  40c87e:	jne    40d9e5 <main@@Base+0x6bc5>
  40c884:	lea    rbx,[rax+0x1]
  40c888:	mov    rcx,r15
  40c88b:	sub    rcx,rbx
  40c88e:	cmp    rcx,0x2
  40c892:	jl     40c8a7 <main@@Base+0x5a87>
  40c894:	cmp    BYTE PTR [rbx],0x20
  40c897:	jg     40c8b8 <main@@Base+0x5a98>
  40c899:	jne    40c8a7 <main@@Base+0x5a87>
  40c89b:	cmp    BYTE PTR [rax+0x2],0x20
  40c89f:	jle    40c8a7 <main@@Base+0x5a87>
  40c8a1:	add    rax,0x2
  40c8a5:	jmp    40c8b5 <main@@Base+0x5a95>
  40c8a7:	mov    rdi,r14
  40c8aa:	mov    rsi,rbx
  40c8ad:	mov    rdx,r15
  40c8b0:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40c8b5:	mov    rbx,rax
  40c8b8:	cmp    rbx,r15
  40c8bb:	je     40d9f6 <main@@Base+0x6bd6>
  40c8c1:	cmp    BYTE PTR [rbx],0x5d
  40c8c4:	je     40db60 <main@@Base+0x6d40>
  40c8ca:	mov    BYTE PTR [rsp+0xc],0x0
  40c8cf:	mov    rdi,QWORD PTR [r14]
  40c8d2:	mov    esi,0x1
  40c8d7:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40c8dc:	mov    rbp,rax
  40c8df:	test   rax,rax
  40c8e2:	jne    40c739 <main@@Base+0x5919>
  40c8e8:	jmp    407511 <main@@Base+0x6f1>
  40c8ed:	mov    BYTE PTR [rsp+0xc],0x0
  40c8f2:	lea    rax,[rbx+0x5]
  40c8f6:	xor    ecx,ecx
  40c8f8:	cmp    rbx,rax
  40c8fb:	jne    40c838 <main@@Base+0x5a18>
  40c901:	jmp    40c807 <main@@Base+0x59e7>
  40c906:	neg    rcx
  40c909:	mov    DWORD PTR [rsp+0xc],ecx
  40c90d:	mov    r12d,ecx
  40c910:	mov    rbp,rax
  40c913:	cmp    rbx,rax
  40c916:	jne    40c94c <main@@Base+0x5b2c>
  40c918:	mov    rdi,r14
  40c91b:	mov    rsi,rbx
  40c91e:	mov    rdx,r15
  40c921:	lea    rcx,[rip+0x338f8]        # 440220 <__data_start@@Base+0x170>
  40c928:	lea    r8,[rsp+0xc]
  40c92d:	call   413920 <main@@Base+0xcb00>
  40c932:	mov    rbp,rax
  40c935:	cmp    rax,rbx
  40c938:	je     40fc63 <main@@Base+0x8e43>
  40c93e:	cmp    rbp,r15
  40c941:	je     40fc63 <main@@Base+0x8e43>
  40c947:	mov    r12d,DWORD PTR [rsp+0xc]
  40c94c:	test   r12d,r12d
  40c94f:	jne    40c95c <main@@Base+0x5b3c>
  40c951:	test   BYTE PTR [r14+0x10],0x2
  40c956:	je     40de6d <main@@Base+0x704d>
  40c95c:	mov    rdi,QWORD PTR [r14]
  40c95f:	mov    edx,0x4
  40c964:	mov    esi,0x10
  40c969:	mov    ecx,0x4
  40c96e:	call   41f040 <flatcc_builder_table_add@@Base>
  40c973:	test   rax,rax
  40c976:	je     40fc63 <main@@Base+0x8e43>
  40c97c:	mov    DWORD PTR [rax],r12d
  40c97f:	jmp    40de6d <main@@Base+0x704d>
  40c984:	mov    rdi,r14
  40c987:	mov    rsi,rax
  40c98a:	mov    rdx,r15
  40c98d:	mov    ecx,0x9
  40c992:	jmp    40a429 <main@@Base+0x3609>
  40c997:	mov    rdi,r14
  40c99a:	mov    rsi,rbp
  40c99d:	mov    rdx,r15
  40c9a0:	mov    ecx,0x15
  40c9a5:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c9aa:	mov    rbp,rax
  40c9ad:	cmp    DWORD PTR [r14+0x1c],0x0
  40c9b2:	je     40fae3 <main@@Base+0x8cc3>
  40c9b8:	mov    rdi,r14
  40c9bb:	mov    rsi,rbp
  40c9be:	mov    rdx,r15
  40c9c1:	mov    ecx,0x21
  40c9c6:	call   422690 <flatcc_json_parser_set_error@@Base>
  40c9cb:	mov    rbx,rax
  40c9ce:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c9d3:	mov    rbp,rax
  40c9d6:	je     407511 <main@@Base+0x6f1>
  40c9dc:	mov    rdi,QWORD PTR [r14]
  40c9df:	mov    esi,0x22
  40c9e4:	jmp    40a44d <main@@Base+0x362d>
  40c9e9:	xor    ebx,ebx
  40c9eb:	mov    rax,rcx
  40c9ee:	jmp    40cf93 <main@@Base+0x6173>
  40c9f3:	mov    rdi,r14
  40c9f6:	mov    rsi,rcx
  40c9f9:	mov    rdx,r15
  40c9fc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ca01:	mov    rcx,rax
  40ca04:	cmp    r12,rcx
  40ca07:	je     40a902 <main@@Base+0x3ae2>
  40ca0d:	mov    QWORD PTR [rsp+0x10],0x0
  40ca16:	mov    DWORD PTR [rsp+0x20],0x0
  40ca1e:	mov    DWORD PTR [rsp+0xc],0x0
  40ca26:	xor    ebx,ebx
  40ca28:	cmp    rcx,r15
  40ca2b:	je     40ca74 <main@@Base+0x5c54>
  40ca2d:	mov    rdi,r14
  40ca30:	mov    rsi,rcx
  40ca33:	mov    rdx,r15
  40ca36:	mov    rbp,rcx
  40ca39:	lea    rcx,[rsp+0x20]
  40ca3e:	lea    r8,[rsp+0x10]
  40ca43:	call   424130 <flatcc_json_parser_integer@@Base>
  40ca48:	cmp    rax,rbp
  40ca4b:	je     40ce56 <main@@Base+0x6036>
  40ca51:	cmp    DWORD PTR [rsp+0x20],0x0
  40ca56:	je     40da09 <main@@Base+0x6be9>
  40ca5c:	mov    rdi,r14
  40ca5f:	mov    rsi,rax
  40ca62:	mov    rdx,r15
  40ca65:	mov    ecx,0x8
  40ca6a:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ca6f:	jmp    40e7df <main@@Base+0x79bf>
  40ca74:	mov    rax,r15
  40ca77:	jmp    40e7e2 <main@@Base+0x79c2>
  40ca7c:	mov    rdi,r14
  40ca7f:	mov    rsi,rcx
  40ca82:	mov    rdx,r15
  40ca85:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ca8a:	mov    rcx,rax
  40ca8d:	cmp    r12,rcx
  40ca90:	je     40aa59 <main@@Base+0x3c39>
  40ca96:	mov    QWORD PTR [rsp+0x10],0x0
  40ca9f:	mov    DWORD PTR [rsp+0xc],0x0
  40caa7:	mov    QWORD PTR [rsp+0x20],0x0
  40cab0:	cmp    rcx,r15
  40cab3:	je     40cafe <main@@Base+0x5cde>
  40cab5:	mov    rdi,r14
  40cab8:	mov    rsi,rcx
  40cabb:	mov    rdx,r15
  40cabe:	mov    rbp,rcx
  40cac1:	lea    rcx,[rsp+0xc]
  40cac6:	lea    r8,[rsp+0x10]
  40cacb:	call   424130 <flatcc_json_parser_integer@@Base>
  40cad0:	cmp    rax,rbp
  40cad3:	je     40ce61 <main@@Base+0x6041>
  40cad9:	cmp    DWORD PTR [rsp+0xc],0x0
  40cade:	je     40da33 <main@@Base+0x6c13>
  40cae4:	mov    rdi,r14
  40cae7:	mov    rsi,rax
  40caea:	mov    rdx,r15
  40caed:	mov    ecx,0x8
  40caf2:	call   422690 <flatcc_json_parser_set_error@@Base>
  40caf7:	xor    ebx,ebx
  40caf9:	jmp    40da3d <main@@Base+0x6c1d>
  40cafe:	xor    ebx,ebx
  40cb00:	mov    rax,r15
  40cb03:	jmp    40da40 <main@@Base+0x6c20>
  40cb08:	mov    rdi,r14
  40cb0b:	mov    rsi,rax
  40cb0e:	mov    rdx,r15
  40cb11:	mov    ecx,0xa
  40cb16:	call   422690 <flatcc_json_parser_set_error@@Base>
  40cb1b:	jmp    40de6a <main@@Base+0x704a>
  40cb20:	mov    rdi,r14
  40cb23:	mov    rsi,rbx
  40cb26:	mov    rdx,r15
  40cb29:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cb2e:	mov    rbx,rax
  40cb31:	cmp    r12,rbx
  40cb34:	je     40de5c <main@@Base+0x703c>
  40cb3a:	mov    rdi,QWORD PTR [r14]
  40cb3d:	call   41d8d0 <flatcc_builder_start_offset_vector@@Base>
  40cb42:	test   eax,eax
  40cb44:	jne    407511 <main@@Base+0x6f1>
  40cb4a:	cmp    rbx,r15
  40cb4d:	je     40cb8d <main@@Base+0x5d6d>
  40cb4f:	cmp    BYTE PTR [rbx],0x5b
  40cb52:	jne    40cb8d <main@@Base+0x5d6d>
  40cb54:	lea    rax,[rbx+0x1]
  40cb58:	mov    rcx,r15
  40cb5b:	sub    rcx,rax
  40cb5e:	cmp    rcx,0x2
  40cb62:	jl     40cf2e <main@@Base+0x610e>
  40cb68:	cmp    BYTE PTR [rax],0x20
  40cb6b:	jg     40cf3c <main@@Base+0x611c>
  40cb71:	jne    40cf2e <main@@Base+0x610e>
  40cb77:	cmp    BYTE PTR [rbx+0x2],0x20
  40cb7b:	jle    40cf2e <main@@Base+0x610e>
  40cb81:	add    rbx,0x2
  40cb85:	mov    rax,rbx
  40cb88:	jmp    40cf3c <main@@Base+0x611c>
  40cb8d:	mov    rdi,r14
  40cb90:	mov    rsi,rbx
  40cb93:	mov    rdx,r15
  40cb96:	mov    ecx,0x16
  40cb9b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40cba0:	mov    rbp,rax
  40cba3:	mov    rdi,QWORD PTR [r14]
  40cba6:	call   41da90 <flatcc_builder_end_offset_vector@@Base>
  40cbab:	mov    DWORD PTR [rsp+0x1c],eax
  40cbaf:	test   eax,eax
  40cbb1:	je     40fc63 <main@@Base+0x8e43>
  40cbb7:	mov    rdi,QWORD PTR [r14]
  40cbba:	mov    esi,0xa
  40cbbf:	jmp    40a44d <main@@Base+0x362d>
  40cbc4:	mov    rdi,r14
  40cbc7:	mov    rsi,rax
  40cbca:	mov    rdx,r15
  40cbcd:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cbd2:	mov    rbx,r15
  40cbd5:	cmp    rax,r15
  40cbd8:	je     40dba4 <main@@Base+0x6d84>
  40cbde:	cmp    BYTE PTR [rax],0x5d
  40cbe1:	jne    40dba1 <main@@Base+0x6d81>
  40cbe7:	lea    rbp,[rax+0x1]
  40cbeb:	mov    rcx,r15
  40cbee:	sub    rcx,rbp
  40cbf1:	cmp    rcx,0x2
  40cbf5:	jl     40f56e <main@@Base+0x874e>
  40cbfb:	cmp    BYTE PTR [rbp+0x0],0x20
  40cbff:	jg     40c30d <main@@Base+0x54ed>
  40cc05:	jne    40f56e <main@@Base+0x874e>
  40cc0b:	cmp    BYTE PTR [rax+0x2],0x20
  40cc0f:	jle    40f56e <main@@Base+0x874e>
  40cc15:	add    rax,0x2
  40cc19:	jmp    40c30a <main@@Base+0x54ea>
  40cc1e:	mov    rax,r13
  40cc21:	jmp    40db04 <main@@Base+0x6ce4>
  40cc26:	mov    rdi,r14
  40cc29:	mov    rsi,rbx
  40cc2c:	mov    rdx,r15
  40cc2f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cc34:	mov    rbx,rax
  40cc37:	cmp    r12,rbx
  40cc3a:	je     40de5c <main@@Base+0x703c>
  40cc40:	mov    rdi,QWORD PTR [r14]
  40cc43:	mov    esi,0x8
  40cc48:	mov    ecx,0x1fffffff
  40cc4d:	mov    edx,0x8
  40cc52:	call   41d850 <flatcc_builder_start_vector@@Base>
  40cc57:	test   eax,eax
  40cc59:	jne    407511 <main@@Base+0x6f1>
  40cc5f:	cmp    rbx,r15
  40cc62:	je     40cca2 <main@@Base+0x5e82>
  40cc64:	cmp    BYTE PTR [rbx],0x5b
  40cc67:	jne    40cca2 <main@@Base+0x5e82>
  40cc69:	lea    rax,[rbx+0x1]
  40cc6d:	mov    rcx,r15
  40cc70:	sub    rcx,rax
  40cc73:	cmp    rcx,0x2
  40cc77:	jl     40d98b <main@@Base+0x6b6b>
  40cc7d:	cmp    BYTE PTR [rax],0x20
  40cc80:	jg     40d999 <main@@Base+0x6b79>
  40cc86:	jne    40d98b <main@@Base+0x6b6b>
  40cc8c:	cmp    BYTE PTR [rbx+0x2],0x20
  40cc90:	jle    40d98b <main@@Base+0x6b6b>
  40cc96:	add    rbx,0x2
  40cc9a:	mov    rax,rbx
  40cc9d:	jmp    40d999 <main@@Base+0x6b79>
  40cca2:	mov    rdi,r14
  40cca5:	mov    rsi,rbx
  40cca8:	mov    rdx,r15
  40ccab:	mov    ecx,0x16
  40ccb0:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ccb5:	mov    rbp,rax
  40ccb8:	mov    rdi,QWORD PTR [r14]
  40ccbb:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40ccc0:	mov    DWORD PTR [rsp+0x1c],eax
  40ccc4:	test   eax,eax
  40ccc6:	je     40fc63 <main@@Base+0x8e43>
  40cccc:	mov    rdi,QWORD PTR [r14]
  40cccf:	mov    esi,0x20
  40ccd4:	jmp    40a44d <main@@Base+0x362d>
  40ccd9:	mov    rdi,r14
  40ccdc:	mov    rsi,rbx
  40ccdf:	mov    rdx,r15
  40cce2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cce7:	mov    rbx,rax
  40ccea:	cmp    r12,rbx
  40cced:	je     40de5c <main@@Base+0x703c>
  40ccf3:	cmp    rbx,r15
  40ccf6:	je     40cd5e <main@@Base+0x5f3e>
  40ccf8:	cmp    BYTE PTR [rbx],0x5b
  40ccfb:	jne    40cd5e <main@@Base+0x5f3e>
  40ccfd:	mov    rdi,QWORD PTR [r14]
  40cd00:	mov    esi,0x1
  40cd05:	mov    ecx,0xffffffff
  40cd0a:	mov    edx,0x1
  40cd0f:	call   41d850 <flatcc_builder_start_vector@@Base>
  40cd14:	test   eax,eax
  40cd16:	jne    407511 <main@@Base+0x6f1>
  40cd1c:	cmp    BYTE PTR [rbx],0x5b
  40cd1f:	jne    40e0a4 <main@@Base+0x7284>
  40cd25:	lea    rax,[rbx+0x1]
  40cd29:	mov    rcx,r15
  40cd2c:	sub    rcx,rax
  40cd2f:	cmp    rcx,0x2
  40cd33:	jl     40e841 <main@@Base+0x7a21>
  40cd39:	cmp    BYTE PTR [rax],0x20
  40cd3c:	jg     40e84f <main@@Base+0x7a2f>
  40cd42:	jne    40e841 <main@@Base+0x7a21>
  40cd48:	cmp    BYTE PTR [rbx+0x2],0x20
  40cd4c:	jle    40e841 <main@@Base+0x7a21>
  40cd52:	add    rbx,0x2
  40cd56:	mov    rax,rbx
  40cd59:	jmp    40e84f <main@@Base+0x7a2f>
  40cd5e:	mov    rdi,QWORD PTR [r14]
  40cd61:	xor    esi,esi
  40cd63:	xor    edx,edx
  40cd65:	xor    ecx,ecx
  40cd67:	call   41ca20 <flatcc_builder_start_buffer@@Base>
  40cd6c:	test   eax,eax
  40cd6e:	jne    407511 <main@@Base+0x6f1>
  40cd74:	mov    rdi,r14
  40cd77:	mov    rsi,rbx
  40cd7a:	mov    rdx,r15
  40cd7d:	lea    rcx,[rsp+0x1c]
  40cd82:	call   4074e0 <main@@Base+0x6c0>
  40cd87:	mov    rbp,rax
  40cd8a:	mov    esi,DWORD PTR [rsp+0x1c]
  40cd8e:	test   esi,esi
  40cd90:	je     40fc63 <main@@Base+0x8e43>
  40cd96:	mov    rdi,QWORD PTR [r14]
  40cd99:	call   41cc40 <flatcc_builder_end_buffer@@Base>
  40cd9e:	jmp    40fb8e <main@@Base+0x8d6e>
  40cda3:	mov    rdi,r14
  40cda6:	mov    rsi,rbx
  40cda9:	mov    rdx,r15
  40cdac:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cdb1:	mov    rbx,rax
  40cdb4:	cmp    r12,rbx
  40cdb7:	je     40de5c <main@@Base+0x703c>
  40cdbd:	mov    rdi,QWORD PTR [r14]
  40cdc0:	mov    esi,0x8
  40cdc5:	mov    ecx,0x1fffffff
  40cdca:	mov    edx,0x8
  40cdcf:	call   41d850 <flatcc_builder_start_vector@@Base>
  40cdd4:	test   eax,eax
  40cdd6:	jne    407511 <main@@Base+0x6f1>
  40cddc:	cmp    rbx,r15
  40cddf:	je     40ce1f <main@@Base+0x5fff>
  40cde1:	cmp    BYTE PTR [rbx],0x5b
  40cde4:	jne    40ce1f <main@@Base+0x5fff>
  40cde6:	lea    rax,[rbx+0x1]
  40cdea:	mov    rcx,r15
  40cded:	sub    rcx,rax
  40cdf0:	cmp    rcx,0x2
  40cdf4:	jl     40daa1 <main@@Base+0x6c81>
  40cdfa:	cmp    BYTE PTR [rax],0x20
  40cdfd:	jg     40daaf <main@@Base+0x6c8f>
  40ce03:	jne    40daa1 <main@@Base+0x6c81>
  40ce09:	cmp    BYTE PTR [rbx+0x2],0x20
  40ce0d:	jle    40daa1 <main@@Base+0x6c81>
  40ce13:	add    rbx,0x2
  40ce17:	mov    rax,rbx
  40ce1a:	jmp    40daaf <main@@Base+0x6c8f>
  40ce1f:	mov    rdi,r14
  40ce22:	mov    rsi,rbx
  40ce25:	mov    rdx,r15
  40ce28:	mov    ecx,0x16
  40ce2d:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ce32:	mov    rbp,rax
  40ce35:	mov    rdi,QWORD PTR [r14]
  40ce38:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40ce3d:	mov    DWORD PTR [rsp+0x1c],eax
  40ce41:	test   eax,eax
  40ce43:	je     40fc63 <main@@Base+0x8e43>
  40ce49:	mov    rdi,QWORD PTR [r14]
  40ce4c:	mov    esi,0x21
  40ce51:	jmp    40a44d <main@@Base+0x362d>
  40ce56:	mov    rcx,rbp
  40ce59:	mov    rax,rbp
  40ce5c:	jmp    40e7e2 <main@@Base+0x79c2>
  40ce61:	mov    rcx,rbp
  40ce64:	xor    ebx,ebx
  40ce66:	mov    rax,rbp
  40ce69:	jmp    40da40 <main@@Base+0x6c20>
  40ce6e:	test   rbx,rbx
  40ce71:	jns    40cf8e <main@@Base+0x616e>
  40ce77:	mov    rdi,r14
  40ce7a:	mov    rsi,rax
  40ce7d:	mov    rdx,r15
  40ce80:	mov    ecx,0x7
  40ce85:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ce8a:	mov    rcx,rbp
  40ce8d:	xor    ebx,ebx
  40ce8f:	jmp    40cf93 <main@@Base+0x6173>
  40ce94:	mov    rdi,r14
  40ce97:	mov    rsi,r13
  40ce9a:	mov    rdx,r15
  40ce9d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cea2:	mov    r13,rax
  40cea5:	cmp    r12,r13
  40cea8:	je     40de5c <main@@Base+0x703c>
  40ceae:	mov    QWORD PTR [rsp+0x10],0x0
  40ceb7:	mov    DWORD PTR [rsp+0xc],0x0
  40cebf:	mov    QWORD PTR [rsp+0x20],0x0
  40cec8:	cmp    r13,r15
  40cecb:	je     40cf24 <main@@Base+0x6104>
  40cecd:	mov    rdi,r14
  40ced0:	mov    rsi,r13
  40ced3:	mov    rdx,r15
  40ced6:	lea    rcx,[rsp+0xc]
  40cedb:	lea    r8,[rsp+0x10]
  40cee0:	call   424130 <flatcc_json_parser_integer@@Base>
  40cee5:	cmp    rax,r13
  40cee8:	je     40dd4d <main@@Base+0x6f2d>
  40ceee:	mov    rbx,QWORD PTR [rsp+0x10]
  40cef3:	cmp    DWORD PTR [rsp+0xc],0x0
  40cef8:	je     40e1de <main@@Base+0x73be>
  40cefe:	movabs rcx,0x8000000000000000
  40cf08:	cmp    rbx,rcx
  40cf0b:	jbe    40e8dc <main@@Base+0x7abc>
  40cf11:	mov    rdi,r14
  40cf14:	mov    rsi,rax
  40cf17:	mov    rdx,r15
  40cf1a:	mov    ecx,0x8
  40cf1f:	jmp    40e1f5 <main@@Base+0x73d5>
  40cf24:	xor    ebx,ebx
  40cf26:	mov    rax,r15
  40cf29:	jmp    40e8e4 <main@@Base+0x7ac4>
  40cf2e:	mov    rdi,r14
  40cf31:	mov    rsi,rax
  40cf34:	mov    rdx,r15
  40cf37:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40cf3c:	mov    rsi,r15
  40cf3f:	cmp    rax,r15
  40cf42:	je     40e0d1 <main@@Base+0x72b1>
  40cf48:	cmp    BYTE PTR [rax],0x5d
  40cf4b:	jne    40e0ce <main@@Base+0x72ae>
  40cf51:	lea    rbp,[rax+0x1]
  40cf55:	mov    rcx,r15
  40cf58:	sub    rcx,rbp
  40cf5b:	cmp    rcx,0x2
  40cf5f:	jl     40f801 <main@@Base+0x89e1>
  40cf65:	cmp    BYTE PTR [rbp+0x0],0x20
  40cf69:	jg     40cba3 <main@@Base+0x5d83>
  40cf6f:	jne    40f801 <main@@Base+0x89e1>
  40cf75:	cmp    BYTE PTR [rax+0x2],0x20
  40cf79:	jle    40f801 <main@@Base+0x89e1>
  40cf7f:	add    rax,0x2
  40cf83:	jmp    40cba0 <main@@Base+0x5d80>
  40cf88:	neg    rbx
  40cf8b:	mov    rcx,rbp
  40cf8e:	mov    QWORD PTR [rsp+0x20],rbx
  40cf93:	mov    rbp,rax
  40cf96:	cmp    rcx,rax
  40cf99:	jne    40cfd2 <main@@Base+0x61b2>
  40cf9b:	mov    rdi,r14
  40cf9e:	mov    rsi,rcx
  40cfa1:	mov    rbx,rcx
  40cfa4:	mov    rdx,r15
  40cfa7:	lea    rcx,[rip+0x332b2]        # 440260 <__data_start@@Base+0x1b0>
  40cfae:	lea    r8,[rsp+0x20]
  40cfb3:	call   413ad0 <main@@Base+0xccb0>
  40cfb8:	mov    rbp,rax
  40cfbb:	cmp    rax,rbx
  40cfbe:	je     40fc63 <main@@Base+0x8e43>
  40cfc4:	cmp    rbp,r15
  40cfc7:	je     40fc63 <main@@Base+0x8e43>
  40cfcd:	mov    rbx,QWORD PTR [rsp+0x20]
  40cfd2:	test   rbx,rbx
  40cfd5:	jne    40cfe2 <main@@Base+0x61c2>
  40cfd7:	test   BYTE PTR [r14+0x10],0x2
  40cfdc:	je     40de6d <main@@Base+0x704d>
  40cfe2:	mov    rdi,QWORD PTR [r14]
  40cfe5:	mov    edx,0x8
  40cfea:	mov    esi,0x12
  40cfef:	jmp    40eda6 <main@@Base+0x7f86>
  40cff4:	mov    rsi,rax
  40cff7:	mov    rdi,r14
  40cffa:	mov    rdx,r15
  40cffd:	lea    rcx,[rsp+0x1c]
  40d002:	call   424600 <flatcc_json_parser_build_string@@Base>
  40d007:	mov    rbx,rax
  40d00a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d00f:	je     407511 <main@@Base+0x6f1>
  40d015:	mov    rdi,QWORD PTR [r14]
  40d018:	mov    esi,0x1
  40d01d:	call   41d1e0 <flatcc_builder_extend_offset_vector@@Base>
  40d022:	test   rax,rax
  40d025:	je     407511 <main@@Base+0x6f1>
  40d02b:	mov    ecx,DWORD PTR [rsp+0x1c]
  40d02f:	mov    DWORD PTR [rax],ecx
  40d031:	mov    rax,r15
  40d034:	sub    rax,rbx
  40d037:	cmp    rax,0x2
  40d03b:	jl     40d057 <main@@Base+0x6237>
  40d03d:	cmp    BYTE PTR [rbx],0x20
  40d040:	jg     40d068 <main@@Base+0x6248>
  40d042:	jne    40d057 <main@@Base+0x6237>
  40d044:	cmp    BYTE PTR [rbx+0x1],0x20
  40d048:	jle    40d057 <main@@Base+0x6237>
  40d04a:	inc    rbx
  40d04d:	cmp    rbx,r15
  40d050:	jne    40d071 <main@@Base+0x6251>
  40d052:	jmp    40ec59 <main@@Base+0x7e39>
  40d057:	mov    rdi,r14
  40d05a:	mov    rsi,rbx
  40d05d:	mov    rdx,r15
  40d060:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d065:	mov    rbx,rax
  40d068:	cmp    rbx,r15
  40d06b:	je     40ec59 <main@@Base+0x7e39>
  40d071:	movzx  eax,BYTE PTR [rbx]
  40d074:	cmp    al,0x2c
  40d076:	jne    40ec69 <main@@Base+0x7e49>
  40d07c:	lea    rsi,[rbx+0x1]
  40d080:	mov    rax,r15
  40d083:	sub    rax,rsi
  40d086:	cmp    rax,0x2
  40d08a:	jl     40d0aa <main@@Base+0x628a>
  40d08c:	cmp    BYTE PTR [rsi],0x20
  40d08f:	jg     40d0b8 <main@@Base+0x6298>
  40d091:	jne    40d0aa <main@@Base+0x628a>
  40d093:	cmp    BYTE PTR [rbx+0x2],0x20
  40d097:	jle    40d0aa <main@@Base+0x628a>
  40d099:	add    rbx,0x2
  40d09d:	mov    rsi,rbx
  40d0a0:	cmp    rsi,r15
  40d0a3:	jne    40d0c1 <main@@Base+0x62a1>
  40d0a5:	jmp    40ecfb <main@@Base+0x7edb>
  40d0aa:	mov    rdi,r14
  40d0ad:	mov    rdx,r15
  40d0b0:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d0b5:	mov    rsi,rax
  40d0b8:	cmp    rsi,r15
  40d0bb:	je     40ecfb <main@@Base+0x7edb>
  40d0c1:	cmp    BYTE PTR [rsi],0x5d
  40d0c4:	jne    40cff7 <main@@Base+0x61d7>
  40d0ca:	lea    rbp,[rsi+0x1]
  40d0ce:	mov    rax,r15
  40d0d1:	sub    rax,rbp
  40d0d4:	cmp    rax,0x2
  40d0d8:	jl     40ec9f <main@@Base+0x7e7f>
  40d0de:	cmp    BYTE PTR [rbp+0x0],0x20
  40d0e2:	jg     40bdf7 <main@@Base+0x4fd7>
  40d0e8:	jne    40ec9f <main@@Base+0x7e7f>
  40d0ee:	cmp    BYTE PTR [rsi+0x2],0x20
  40d0f2:	jle    40ec9f <main@@Base+0x7e7f>
  40d0f8:	add    rsi,0x2
  40d0fc:	mov    rbp,rsi
  40d0ff:	jmp    40bdf7 <main@@Base+0x4fd7>
  40d104:	mov    rbx,rax
  40d107:	mov    rdi,QWORD PTR [r14]
  40d10a:	mov    esi,0x1
  40d10f:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40d114:	test   rax,rax
  40d117:	je     407511 <main@@Base+0x6f1>
  40d11d:	mov    r13,rax
  40d120:	cmp    rbx,r15
  40d123:	je     40d163 <main@@Base+0x6343>
  40d125:	cmp    BYTE PTR [rbx],0x7b
  40d128:	jne    40d163 <main@@Base+0x6343>
  40d12a:	lea    rax,[rbx+0x1]
  40d12e:	mov    rcx,r15
  40d131:	sub    rcx,rax
  40d134:	cmp    rcx,0x2
  40d138:	jl     40d232 <main@@Base+0x6412>
  40d13e:	cmp    BYTE PTR [rax],0x20
  40d141:	jg     40d240 <main@@Base+0x6420>
  40d147:	jne    40d232 <main@@Base+0x6412>
  40d14d:	cmp    BYTE PTR [rbx+0x2],0x20
  40d151:	jle    40d232 <main@@Base+0x6412>
  40d157:	add    rbx,0x2
  40d15b:	mov    rax,rbx
  40d15e:	jmp    40d240 <main@@Base+0x6420>
  40d163:	mov    rdi,r14
  40d166:	mov    rsi,rbx
  40d169:	mov    rdx,r15
  40d16c:	mov    ecx,0x15
  40d171:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d176:	mov    rcx,rax
  40d179:	mov    rax,r15
  40d17c:	sub    rax,rcx
  40d17f:	cmp    rax,0x2
  40d183:	jl     40d19f <main@@Base+0x637f>
  40d185:	cmp    BYTE PTR [rcx],0x20
  40d188:	jg     40d1b0 <main@@Base+0x6390>
  40d18a:	jne    40d19f <main@@Base+0x637f>
  40d18c:	cmp    BYTE PTR [rcx+0x1],0x20
  40d190:	jle    40d19f <main@@Base+0x637f>
  40d192:	inc    rcx
  40d195:	cmp    rcx,r15
  40d198:	jne    40d1b9 <main@@Base+0x6399>
  40d19a:	jmp    40e201 <main@@Base+0x73e1>
  40d19f:	mov    rdi,r14
  40d1a2:	mov    rsi,rcx
  40d1a5:	mov    rdx,r15
  40d1a8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d1ad:	mov    rcx,rax
  40d1b0:	cmp    rcx,r15
  40d1b3:	je     40e201 <main@@Base+0x73e1>
  40d1b9:	mov    al,BYTE PTR [rcx]
  40d1bb:	cmp    al,0x2c
  40d1bd:	jne    40e209 <main@@Base+0x73e9>
  40d1c3:	lea    rbx,[rcx+0x1]
  40d1c7:	mov    rax,r15
  40d1ca:	sub    rax,rbx
  40d1cd:	cmp    rax,0x2
  40d1d1:	jl     40d1f1 <main@@Base+0x63d1>
  40d1d3:	cmp    BYTE PTR [rbx],0x20
  40d1d6:	jg     40d202 <main@@Base+0x63e2>
  40d1d8:	jne    40d1f1 <main@@Base+0x63d1>
  40d1da:	cmp    BYTE PTR [rcx+0x2],0x20
  40d1de:	jle    40d1f1 <main@@Base+0x63d1>
  40d1e0:	add    rcx,0x2
  40d1e4:	mov    rbx,rcx
  40d1e7:	cmp    rbx,r15
  40d1ea:	jne    40d20b <main@@Base+0x63eb>
  40d1ec:	jmp    40e24b <main@@Base+0x742b>
  40d1f1:	mov    rdi,r14
  40d1f4:	mov    rsi,rbx
  40d1f7:	mov    rdx,r15
  40d1fa:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d1ff:	mov    rbx,rax
  40d202:	cmp    rbx,r15
  40d205:	je     40e24b <main@@Base+0x742b>
  40d20b:	cmp    BYTE PTR [rbx],0x5d
  40d20e:	je     40e89b <main@@Base+0x7a7b>
  40d214:	mov    rdi,QWORD PTR [r14]
  40d217:	mov    esi,0x1
  40d21c:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40d221:	mov    r13,rax
  40d224:	test   rax,rax
  40d227:	jne    40d120 <main@@Base+0x6300>
  40d22d:	jmp    407511 <main@@Base+0x6f1>
  40d232:	mov    rdi,r14
  40d235:	mov    rsi,rax
  40d238:	mov    rdx,r15
  40d23b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d240:	mov    rsi,r15
  40d243:	cmp    rax,r15
  40d246:	je     40d254 <main@@Base+0x6434>
  40d248:	cmp    BYTE PTR [rax],0x7d
  40d24b:	je     40d75c <main@@Base+0x693c>
  40d251:	mov    rsi,rax
  40d254:	mov    r12,r15
  40d257:	cmp    rsi,r15
  40d25a:	je     40d27c <main@@Base+0x645c>
  40d25c:	cmp    BYTE PTR [rsi],0x22
  40d25f:	jne    40d269 <main@@Base+0x6449>
  40d261:	inc    rsi
  40d264:	mov    r12,rsi
  40d267:	jmp    40d27c <main@@Base+0x645c>
  40d269:	mov    rdi,r14
  40d26c:	mov    rdx,r15
  40d26f:	mov    ecx,0x5
  40d274:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d279:	mov    r12,rax
  40d27c:	mov    rax,r15
  40d27f:	sub    rax,r12
  40d282:	cmp    rax,0x8
  40d286:	jb     40d293 <main@@Base+0x6473>
  40d288:	movbe  rcx,QWORD PTR [r12]
  40d28e:	jmp    40d315 <main@@Base+0x64f5>
  40d293:	lea    rcx,[rax-0x1]
  40d297:	cmp    rcx,0x6
  40d29b:	ja     40d63a <main@@Base+0x681a>
  40d2a1:	lea    rdx,[rip+0x24f64]        # 43220c <_IO_stdin_used@@Base+0x20c>
  40d2a8:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  40d2ac:	add    rbx,rdx
  40d2af:	xor    r8d,r8d
  40d2b2:	xor    ecx,ecx
  40d2b4:	xor    esi,esi
  40d2b6:	xor    edi,edi
  40d2b8:	xor    ebp,ebp
  40d2ba:	xor    edx,edx
  40d2bc:	jmp    rbx
  40d2be:	movsx  r8,BYTE PTR [r12+0x6]
  40d2c4:	shl    r8,0x8
  40d2c8:	movsx  rcx,BYTE PTR [r12+0x5]
  40d2ce:	shl    rcx,0x10
  40d2d2:	or     rcx,r8
  40d2d5:	movsx  rsi,BYTE PTR [r12+0x4]
  40d2db:	shl    rsi,0x18
  40d2df:	or     rsi,rcx
  40d2e2:	movsx  rdi,BYTE PTR [r12+0x3]
  40d2e8:	shl    rdi,0x20
  40d2ec:	or     rdi,rsi
  40d2ef:	movsx  rbp,BYTE PTR [r12+0x2]
  40d2f5:	shl    rbp,0x28
  40d2f9:	or     rbp,rdi
  40d2fc:	movsx  rdx,BYTE PTR [r12+0x1]
  40d302:	shl    rdx,0x30
  40d306:	or     rdx,rbp
  40d309:	movzx  ecx,BYTE PTR [r12]
  40d30e:	shl    rcx,0x38
  40d312:	or     rcx,rdx
  40d315:	mov    rdx,rcx
  40d318:	movabs rsi,0xffff000000000000
  40d322:	and    rdx,rsi
  40d325:	movabs rsi,0x6964000000000000
  40d32f:	cmp    rdx,rsi
  40d332:	jne    40d393 <main@@Base+0x6573>
  40d334:	mov    rbp,r12
  40d337:	cmp    rax,0x3
  40d33b:	jl     40d4f3 <main@@Base+0x66d3>
  40d341:	cmp    BYTE PTR [r12+0x2],0x22
  40d347:	mov    rbp,r12
  40d34a:	jne    40d4f3 <main@@Base+0x66d3>
  40d350:	lea    rsi,[r12+0x3]
  40d355:	mov    rax,r15
  40d358:	sub    rax,rsi
  40d35b:	cmp    rax,0x2
  40d35f:	jl     40d405 <main@@Base+0x65e5>
  40d365:	cmp    BYTE PTR [rsi],0x20
  40d368:	jg     40d413 <main@@Base+0x65f3>
  40d36e:	jne    40d405 <main@@Base+0x65e5>
  40d374:	cmp    BYTE PTR [r12+0x4],0x20
  40d37a:	jle    40d405 <main@@Base+0x65e5>
  40d380:	lea    rsi,[r12+0x4]
  40d385:	cmp    rsi,r15
  40d388:	jne    40d418 <main@@Base+0x65f8>
  40d38e:	jmp    40d460 <main@@Base+0x6640>
  40d393:	movabs rdx,0x64697374616e6365
  40d39d:	cmp    rcx,rdx
  40d3a0:	jne    40d63a <main@@Base+0x681a>
  40d3a6:	mov    rbp,r12
  40d3a9:	cmp    rax,0x9
  40d3ad:	jl     40d5e1 <main@@Base+0x67c1>
  40d3b3:	cmp    BYTE PTR [r12+0x8],0x22
  40d3b9:	mov    rbp,r12
  40d3bc:	jne    40d5e1 <main@@Base+0x67c1>
  40d3c2:	lea    rsi,[r12+0x9]
  40d3c7:	mov    rax,r15
  40d3ca:	sub    rax,rsi
  40d3cd:	cmp    rax,0x2
  40d3d1:	jl     40d472 <main@@Base+0x6652>
  40d3d7:	cmp    BYTE PTR [rsi],0x20
  40d3da:	jg     40d480 <main@@Base+0x6660>
  40d3e0:	jne    40d472 <main@@Base+0x6652>
  40d3e6:	cmp    BYTE PTR [r12+0xa],0x20
  40d3ec:	jle    40d472 <main@@Base+0x6652>
  40d3f2:	lea    rsi,[r12+0xa]
  40d3f7:	cmp    rsi,r15
  40d3fa:	jne    40d485 <main@@Base+0x6665>
  40d400:	jmp    40d4cd <main@@Base+0x66ad>
  40d405:	mov    rdi,r14
  40d408:	mov    rdx,r15
  40d40b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d410:	mov    rsi,rax
  40d413:	cmp    rsi,r15
  40d416:	je     40d460 <main@@Base+0x6640>
  40d418:	cmp    BYTE PTR [rsi],0x3a
  40d41b:	jne    40d460 <main@@Base+0x6640>
  40d41d:	lea    rbp,[rsi+0x1]
  40d421:	mov    rax,r15
  40d424:	sub    rax,rbp
  40d427:	cmp    rax,0x2
  40d42b:	jl     40d4e2 <main@@Base+0x66c2>
  40d431:	cmp    BYTE PTR [rbp+0x0],0x20
  40d435:	jg     40d4f3 <main@@Base+0x66d3>
  40d43b:	jne    40d4e2 <main@@Base+0x66c2>
  40d441:	cmp    BYTE PTR [rsi+0x2],0x20
  40d445:	jle    40d4e2 <main@@Base+0x66c2>
  40d44b:	add    rsi,0x2
  40d44f:	mov    rbp,rsi
  40d452:	cmp    r12,rbp
  40d455:	jne    40d4fc <main@@Base+0x66dc>
  40d45b:	jmp    40d63a <main@@Base+0x681a>
  40d460:	mov    rdi,r14
  40d463:	mov    rdx,r15
  40d466:	mov    ecx,0x4
  40d46b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d470:	jmp    40d4f0 <main@@Base+0x66d0>
  40d472:	mov    rdi,r14
  40d475:	mov    rdx,r15
  40d478:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d47d:	mov    rsi,rax
  40d480:	cmp    rsi,r15
  40d483:	je     40d4cd <main@@Base+0x66ad>
  40d485:	cmp    BYTE PTR [rsi],0x3a
  40d488:	jne    40d4cd <main@@Base+0x66ad>
  40d48a:	lea    rbp,[rsi+0x1]
  40d48e:	mov    rax,r15
  40d491:	sub    rax,rbp
  40d494:	cmp    rax,0x2
  40d498:	jl     40d5d0 <main@@Base+0x67b0>
  40d49e:	cmp    BYTE PTR [rbp+0x0],0x20
  40d4a2:	jg     40d5e1 <main@@Base+0x67c1>
  40d4a8:	jne    40d5d0 <main@@Base+0x67b0>
  40d4ae:	cmp    BYTE PTR [rsi+0x2],0x20
  40d4b2:	jle    40d5d0 <main@@Base+0x67b0>
  40d4b8:	add    rsi,0x2
  40d4bc:	mov    rbp,rsi
  40d4bf:	cmp    r12,rbp
  40d4c2:	jne    40d5e6 <main@@Base+0x67c6>
  40d4c8:	jmp    40d63a <main@@Base+0x681a>
  40d4cd:	mov    rdi,r14
  40d4d0:	mov    rdx,r15
  40d4d3:	mov    ecx,0x4
  40d4d8:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d4dd:	jmp    40d5de <main@@Base+0x67be>
  40d4e2:	mov    rdi,r14
  40d4e5:	mov    rsi,rbp
  40d4e8:	mov    rdx,r15
  40d4eb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d4f0:	mov    rbp,rax
  40d4f3:	cmp    r12,rbp
  40d4f6:	je     40d63a <main@@Base+0x681a>
  40d4fc:	mov    QWORD PTR [rsp+0x10],0x0
  40d505:	mov    DWORD PTR [rsp+0x20],0x0
  40d50d:	mov    DWORD PTR [rsp+0xc],0x0
  40d515:	xor    ebx,ebx
  40d517:	cmp    rbp,r15
  40d51a:	je     40d550 <main@@Base+0x6730>
  40d51c:	mov    rdi,r14
  40d51f:	mov    rsi,rbp
  40d522:	mov    rdx,r15
  40d525:	lea    rcx,[rsp+0x20]
  40d52a:	lea    r8,[rsp+0x10]
  40d52f:	call   424130 <flatcc_json_parser_integer@@Base>
  40d534:	cmp    rax,rbp
  40d537:	je     40d55a <main@@Base+0x673a>
  40d539:	cmp    DWORD PTR [rsp+0x20],0x0
  40d53e:	je     40d564 <main@@Base+0x6744>
  40d540:	mov    rdi,r14
  40d543:	mov    rsi,rax
  40d546:	mov    rdx,r15
  40d549:	mov    ecx,0x8
  40d54e:	jmp    40d580 <main@@Base+0x6760>
  40d550:	mov    rax,r15
  40d553:	cmp    rbp,rax
  40d556:	jne    40d5ba <main@@Base+0x679a>
  40d558:	jmp    40d58a <main@@Base+0x676a>
  40d55a:	mov    rax,rbp
  40d55d:	cmp    rbp,rax
  40d560:	jne    40d5ba <main@@Base+0x679a>
  40d562:	jmp    40d58a <main@@Base+0x676a>
  40d564:	mov    rcx,QWORD PTR [rsp+0x10]
  40d569:	mov    rdx,rcx
  40d56c:	shr    rdx,0x20
  40d570:	je     40d5c3 <main@@Base+0x67a3>
  40d572:	mov    rdi,r14
  40d575:	mov    rsi,rax
  40d578:	mov    rdx,r15
  40d57b:	mov    ecx,0x7
  40d580:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d585:	cmp    rbp,rax
  40d588:	jne    40d5ba <main@@Base+0x679a>
  40d58a:	mov    rdi,r14
  40d58d:	mov    rsi,rbp
  40d590:	mov    rdx,r15
  40d593:	lea    rcx,[rip+0x331a6]        # 440740 <__data_start@@Base+0x690>
  40d59a:	lea    r8,[rsp+0xc]
  40d59f:	call   413c80 <main@@Base+0xce60>
  40d5a4:	cmp    rax,rbp
  40d5a7:	je     40d7e1 <main@@Base+0x69c1>
  40d5ad:	cmp    rax,r15
  40d5b0:	je     40d7e1 <main@@Base+0x69c1>
  40d5b6:	mov    ebx,DWORD PTR [rsp+0xc]
  40d5ba:	mov    DWORD PTR [r13+0x0],ebx
  40d5be:	jmp    40d6bc <main@@Base+0x689c>
  40d5c3:	mov    DWORD PTR [rsp+0xc],ecx
  40d5c7:	mov    ebx,ecx
  40d5c9:	cmp    rbp,rax
  40d5cc:	jne    40d5ba <main@@Base+0x679a>
  40d5ce:	jmp    40d58a <main@@Base+0x676a>
  40d5d0:	mov    rdi,r14
  40d5d3:	mov    rsi,rbp
  40d5d6:	mov    rdx,r15
  40d5d9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d5de:	mov    rbp,rax
  40d5e1:	cmp    r12,rbp
  40d5e4:	je     40d63a <main@@Base+0x681a>
  40d5e6:	mov    QWORD PTR [rsp+0x10],0x0
  40d5ef:	mov    DWORD PTR [rsp+0x20],0x0
  40d5f7:	mov    DWORD PTR [rsp+0xc],0x0
  40d5ff:	xor    ebx,ebx
  40d601:	cmp    rbp,r15
  40d604:	je     40d64a <main@@Base+0x682a>
  40d606:	mov    rdi,r14
  40d609:	mov    rsi,rbp
  40d60c:	mov    rdx,r15
  40d60f:	lea    rcx,[rsp+0x20]
  40d614:	lea    r8,[rsp+0x10]
  40d619:	call   424130 <flatcc_json_parser_integer@@Base>
  40d61e:	cmp    rax,rbp
  40d621:	je     40d654 <main@@Base+0x6834>
  40d623:	cmp    DWORD PTR [rsp+0x20],0x0
  40d628:	je     40d65e <main@@Base+0x683e>
  40d62a:	mov    rdi,r14
  40d62d:	mov    rsi,rax
  40d630:	mov    rdx,r15
  40d633:	mov    ecx,0x8
  40d638:	jmp    40d67e <main@@Base+0x685e>
  40d63a:	mov    rdi,r14
  40d63d:	mov    rsi,r12
  40d640:	mov    rdx,r15
  40d643:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40d648:	jmp    40d6bc <main@@Base+0x689c>
  40d64a:	mov    rax,r15
  40d64d:	cmp    rbp,rax
  40d650:	jne    40d6b8 <main@@Base+0x6898>
  40d652:	jmp    40d688 <main@@Base+0x6868>
  40d654:	mov    rax,rbp
  40d657:	cmp    rbp,rax
  40d65a:	jne    40d6b8 <main@@Base+0x6898>
  40d65c:	jmp    40d688 <main@@Base+0x6868>
  40d65e:	mov    rcx,QWORD PTR [rsp+0x10]
  40d663:	mov    rdx,rcx
  40d666:	shr    rdx,0x20
  40d66a:	je     40d73b <main@@Base+0x691b>
  40d670:	mov    rdi,r14
  40d673:	mov    rsi,rax
  40d676:	mov    rdx,r15
  40d679:	mov    ecx,0x7
  40d67e:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d683:	cmp    rbp,rax
  40d686:	jne    40d6b8 <main@@Base+0x6898>
  40d688:	mov    rdi,r14
  40d68b:	mov    rsi,rbp
  40d68e:	mov    rdx,r15
  40d691:	lea    rcx,[rip+0x330c8]        # 440760 <__data_start@@Base+0x6b0>
  40d698:	lea    r8,[rsp+0xc]
  40d69d:	call   413c80 <main@@Base+0xce60>
  40d6a2:	cmp    rax,rbp
  40d6a5:	je     40d7e1 <main@@Base+0x69c1>
  40d6ab:	cmp    rax,r15
  40d6ae:	je     40d7e1 <main@@Base+0x69c1>
  40d6b4:	mov    ebx,DWORD PTR [rsp+0xc]
  40d6b8:	mov    DWORD PTR [r13+0x4],ebx
  40d6bc:	mov    rcx,r15
  40d6bf:	sub    rcx,rax
  40d6c2:	cmp    rcx,0x2
  40d6c6:	jl     40d6df <main@@Base+0x68bf>
  40d6c8:	cmp    BYTE PTR [rax],0x20
  40d6cb:	jg     40d6ed <main@@Base+0x68cd>
  40d6cd:	jne    40d6df <main@@Base+0x68bf>
  40d6cf:	cmp    BYTE PTR [rax+0x1],0x20
  40d6d3:	jle    40d6df <main@@Base+0x68bf>
  40d6d5:	inc    rax
  40d6d8:	cmp    rax,r15
  40d6db:	jne    40d6f2 <main@@Base+0x68d2>
  40d6dd:	jmp    40d74f <main@@Base+0x692f>
  40d6df:	mov    rdi,r14
  40d6e2:	mov    rsi,rax
  40d6e5:	mov    rdx,r15
  40d6e8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d6ed:	cmp    rax,r15
  40d6f0:	je     40d74f <main@@Base+0x692f>
  40d6f2:	movzx  ecx,BYTE PTR [rax]
  40d6f5:	cmp    cl,0x2c
  40d6f8:	jne    40d757 <main@@Base+0x6937>
  40d6fa:	lea    rsi,[rax+0x1]
  40d6fe:	mov    rcx,r15
  40d701:	sub    rcx,rsi
  40d704:	cmp    rcx,0x2
  40d708:	jl     40d71d <main@@Base+0x68fd>
  40d70a:	cmp    BYTE PTR [rsi],0x20
  40d70d:	jg     40d72b <main@@Base+0x690b>
  40d70f:	jne    40d71d <main@@Base+0x68fd>
  40d711:	cmp    BYTE PTR [rax+0x2],0x20
  40d715:	jle    40d71d <main@@Base+0x68fd>
  40d717:	add    rax,0x2
  40d71b:	jmp    40d728 <main@@Base+0x6908>
  40d71d:	mov    rdi,r14
  40d720:	mov    rdx,r15
  40d723:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d728:	mov    rsi,rax
  40d72b:	cmp    rsi,r15
  40d72e:	je     40d786 <main@@Base+0x6966>
  40d730:	cmp    BYTE PTR [rsi],0x7d
  40d733:	jne    40d254 <main@@Base+0x6434>
  40d739:	jmp    40d78e <main@@Base+0x696e>
  40d73b:	mov    DWORD PTR [rsp+0xc],ecx
  40d73f:	mov    ebx,ecx
  40d741:	cmp    rbp,rax
  40d744:	jne    40d6b8 <main@@Base+0x6898>
  40d74a:	jmp    40d688 <main@@Base+0x6868>
  40d74f:	mov    rcx,r15
  40d752:	jmp    40d179 <main@@Base+0x6359>
  40d757:	cmp    cl,0x7d
  40d75a:	jne    40d7ce <main@@Base+0x69ae>
  40d75c:	lea    rcx,[rax+0x1]
  40d760:	mov    rdx,r15
  40d763:	sub    rdx,rcx
  40d766:	cmp    rdx,0x2
  40d76a:	jl     40d7bb <main@@Base+0x699b>
  40d76c:	cmp    BYTE PTR [rcx],0x20
  40d76f:	jg     40d179 <main@@Base+0x6359>
  40d775:	jne    40d7bb <main@@Base+0x699b>
  40d777:	cmp    BYTE PTR [rax+0x2],0x20
  40d77b:	jle    40d7bb <main@@Base+0x699b>
  40d77d:	add    rax,0x2
  40d781:	jmp    40d176 <main@@Base+0x6356>
  40d786:	mov    rdi,r14
  40d789:	mov    rsi,r15
  40d78c:	jmp    40d7d4 <main@@Base+0x69b4>
  40d78e:	lea    rcx,[rsi+0x1]
  40d792:	mov    rax,r15
  40d795:	sub    rax,rcx
  40d798:	cmp    rax,0x2
  40d79c:	jl     40d7bb <main@@Base+0x699b>
  40d79e:	cmp    BYTE PTR [rcx],0x20
  40d7a1:	jg     40d179 <main@@Base+0x6359>
  40d7a7:	jne    40d7bb <main@@Base+0x699b>
  40d7a9:	cmp    BYTE PTR [rsi+0x2],0x20
  40d7ad:	jle    40d7bb <main@@Base+0x699b>
  40d7af:	add    rsi,0x2
  40d7b3:	mov    rcx,rsi
  40d7b6:	jmp    40d179 <main@@Base+0x6359>
  40d7bb:	mov    rdi,r14
  40d7be:	mov    rsi,rcx
  40d7c1:	mov    rdx,r15
  40d7c4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d7c9:	jmp    40d176 <main@@Base+0x6356>
  40d7ce:	mov    rdi,r14
  40d7d1:	mov    rsi,rax
  40d7d4:	mov    rdx,r15
  40d7d7:	mov    ecx,0xa
  40d7dc:	jmp    40d171 <main@@Base+0x6351>
  40d7e1:	mov    rdi,r14
  40d7e4:	mov    rsi,rax
  40d7e7:	mov    rdx,r15
  40d7ea:	mov    ecx,0x21
  40d7ef:	jmp    40d171 <main@@Base+0x6351>
  40d7f4:	mov    rsi,rax
  40d7f7:	mov    rdi,r14
  40d7fa:	mov    rdx,r15
  40d7fd:	lea    rcx,[rsp+0x1c]
  40d802:	call   4074e0 <main@@Base+0x6c0>
  40d807:	mov    rbx,rax
  40d80a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d80f:	je     407511 <main@@Base+0x6f1>
  40d815:	mov    rdi,QWORD PTR [r14]
  40d818:	mov    esi,0x1
  40d81d:	call   41d1e0 <flatcc_builder_extend_offset_vector@@Base>
  40d822:	test   rax,rax
  40d825:	je     407511 <main@@Base+0x6f1>
  40d82b:	mov    ecx,DWORD PTR [rsp+0x1c]
  40d82f:	mov    DWORD PTR [rax],ecx
  40d831:	mov    rax,r15
  40d834:	sub    rax,rbx
  40d837:	cmp    rax,0x2
  40d83b:	jl     40d857 <main@@Base+0x6a37>
  40d83d:	cmp    BYTE PTR [rbx],0x20
  40d840:	jg     40d868 <main@@Base+0x6a48>
  40d842:	jne    40d857 <main@@Base+0x6a37>
  40d844:	cmp    BYTE PTR [rbx+0x1],0x20
  40d848:	jle    40d857 <main@@Base+0x6a37>
  40d84a:	inc    rbx
  40d84d:	cmp    rbx,r15
  40d850:	jne    40d871 <main@@Base+0x6a51>
  40d852:	jmp    40ec61 <main@@Base+0x7e41>
  40d857:	mov    rdi,r14
  40d85a:	mov    rsi,rbx
  40d85d:	mov    rdx,r15
  40d860:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d865:	mov    rbx,rax
  40d868:	cmp    rbx,r15
  40d86b:	je     40ec61 <main@@Base+0x7e41>
  40d871:	movzx  eax,BYTE PTR [rbx]
  40d874:	cmp    al,0x2c
  40d876:	jne    40ecb2 <main@@Base+0x7e92>
  40d87c:	lea    rsi,[rbx+0x1]
  40d880:	mov    rax,r15
  40d883:	sub    rax,rsi
  40d886:	cmp    rax,0x2
  40d88a:	jl     40d8aa <main@@Base+0x6a8a>
  40d88c:	cmp    BYTE PTR [rsi],0x20
  40d88f:	jg     40d8b8 <main@@Base+0x6a98>
  40d891:	jne    40d8aa <main@@Base+0x6a8a>
  40d893:	cmp    BYTE PTR [rbx+0x2],0x20
  40d897:	jle    40d8aa <main@@Base+0x6a8a>
  40d899:	add    rbx,0x2
  40d89d:	mov    rsi,rbx
  40d8a0:	cmp    rsi,r15
  40d8a3:	jne    40d8c1 <main@@Base+0x6aa1>
  40d8a5:	jmp    40ed06 <main@@Base+0x7ee6>
  40d8aa:	mov    rdi,r14
  40d8ad:	mov    rdx,r15
  40d8b0:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d8b5:	mov    rsi,rax
  40d8b8:	cmp    rsi,r15
  40d8bb:	je     40ed06 <main@@Base+0x7ee6>
  40d8c1:	cmp    BYTE PTR [rsi],0x5d
  40d8c4:	jne    40d7f7 <main@@Base+0x69d7>
  40d8ca:	lea    rbp,[rsi+0x1]
  40d8ce:	mov    rax,r15
  40d8d1:	sub    rax,rbp
  40d8d4:	cmp    rax,0x2
  40d8d8:	jl     40ece8 <main@@Base+0x7ec8>
  40d8de:	cmp    BYTE PTR [rbp+0x0],0x20
  40d8e2:	jg     40bf4e <main@@Base+0x512e>
  40d8e8:	jne    40ece8 <main@@Base+0x7ec8>
  40d8ee:	cmp    BYTE PTR [rsi+0x2],0x20
  40d8f2:	jle    40ece8 <main@@Base+0x7ec8>
  40d8f8:	add    rsi,0x2
  40d8fc:	mov    rbp,rsi
  40d8ff:	jmp    40bf4e <main@@Base+0x512e>
  40d904:	test   rcx,0xffffffff80000000
  40d90b:	je     40dafe <main@@Base+0x6cde>
  40d911:	mov    rdi,r14
  40d914:	mov    rsi,rax
  40d917:	mov    rdx,r15
  40d91a:	mov    ecx,0x7
  40d91f:	call   422690 <flatcc_json_parser_set_error@@Base>
  40d924:	jmp    40db04 <main@@Base+0x6ce4>
  40d929:	mov    rdi,r14
  40d92c:	mov    rsi,rax
  40d92f:	mov    rdx,r15
  40d932:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d937:	mov    rsi,r15
  40d93a:	cmp    rax,r15
  40d93d:	je     40e259 <main@@Base+0x7439>
  40d943:	cmp    BYTE PTR [rax],0x7d
  40d946:	jne    40e256 <main@@Base+0x7436>
  40d94c:	lea    rbp,[rax+0x1]
  40d950:	mov    rcx,r15
  40d953:	sub    rcx,rbp
  40d956:	cmp    rcx,0x2
  40d95a:	jl     40f5f9 <main@@Base+0x87d9>
  40d960:	cmp    BYTE PTR [rbp+0x0],0x20
  40d964:	jg     40c344 <main@@Base+0x5524>
  40d96a:	jne    40f5f9 <main@@Base+0x87d9>
  40d970:	cmp    BYTE PTR [rax+0x2],0x20
  40d974:	jle    40f5f9 <main@@Base+0x87d9>
  40d97a:	add    rax,0x2
  40d97e:	jmp    40c341 <main@@Base+0x5521>
  40d983:	mov    rbp,r15
  40d986:	jmp    40a813 <main@@Base+0x39f3>
  40d98b:	mov    rdi,r14
  40d98e:	mov    rsi,rax
  40d991:	mov    rdx,r15
  40d994:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40d999:	mov    rbx,r15
  40d99c:	cmp    rax,r15
  40d99f:	je     40e95d <main@@Base+0x7b3d>
  40d9a5:	cmp    BYTE PTR [rax],0x5d
  40d9a8:	jne    40e95a <main@@Base+0x7b3a>
  40d9ae:	lea    rbp,[rax+0x1]
  40d9b2:	mov    rcx,r15
  40d9b5:	sub    rcx,rbp
  40d9b8:	cmp    rcx,0x2
  40d9bc:	jl     40f9fb <main@@Base+0x8bdb>
  40d9c2:	cmp    BYTE PTR [rbp+0x0],0x20
  40d9c6:	jg     40ccb8 <main@@Base+0x5e98>
  40d9cc:	jne    40f9fb <main@@Base+0x8bdb>
  40d9d2:	cmp    BYTE PTR [rax+0x2],0x20
  40d9d6:	jle    40f9fb <main@@Base+0x8bdb>
  40d9dc:	add    rax,0x2
  40d9e0:	jmp    40ccb5 <main@@Base+0x5e95>
  40d9e5:	cmp    cl,0x5d
  40d9e8:	je     40ba4f <main@@Base+0x4c2f>
  40d9ee:	mov    rdi,r14
  40d9f1:	mov    rsi,rax
  40d9f4:	jmp    40d9fc <main@@Base+0x6bdc>
  40d9f6:	mov    rdi,r14
  40d9f9:	mov    rsi,r15
  40d9fc:	mov    rdx,r15
  40d9ff:	mov    ecx,0x9
  40da04:	jmp    40a80b <main@@Base+0x39eb>
  40da09:	mov    rcx,QWORD PTR [rsp+0x10]
  40da0e:	mov    rdx,rcx
  40da11:	shr    rdx,0x20
  40da15:	je     40e7d9 <main@@Base+0x79b9>
  40da1b:	mov    rdi,r14
  40da1e:	mov    rsi,rax
  40da21:	mov    rdx,r15
  40da24:	mov    ecx,0x7
  40da29:	call   422690 <flatcc_json_parser_set_error@@Base>
  40da2e:	jmp    40e7df <main@@Base+0x79bf>
  40da33:	mov    rbx,QWORD PTR [rsp+0x10]
  40da38:	mov    QWORD PTR [rsp+0x20],rbx
  40da3d:	mov    rcx,rbp
  40da40:	mov    rbp,rax
  40da43:	cmp    rcx,rax
  40da46:	jne    40da7f <main@@Base+0x6c5f>
  40da48:	mov    rdi,r14
  40da4b:	mov    rsi,rcx
  40da4e:	mov    rdx,r15
  40da51:	mov    rbx,rcx
  40da54:	lea    rcx,[rip+0x32885]        # 4402e0 <__data_start@@Base+0x230>
  40da5b:	lea    r8,[rsp+0x20]
  40da60:	call   413e30 <main@@Base+0xd010>
  40da65:	mov    rbp,rax
  40da68:	cmp    rax,rbx
  40da6b:	je     40fc63 <main@@Base+0x8e43>
  40da71:	cmp    rbp,r15
  40da74:	je     40fc63 <main@@Base+0x8e43>
  40da7a:	mov    rbx,QWORD PTR [rsp+0x20]
  40da7f:	test   rbx,rbx
  40da82:	jne    40da8f <main@@Base+0x6c6f>
  40da84:	test   BYTE PTR [r14+0x10],0x2
  40da89:	je     40de6d <main@@Base+0x704d>
  40da8f:	mov    rdi,QWORD PTR [r14]
  40da92:	mov    edx,0x8
  40da97:	mov    esi,0x13
  40da9c:	jmp    40eda6 <main@@Base+0x7f86>
  40daa1:	mov    rdi,r14
  40daa4:	mov    rsi,rax
  40daa7:	mov    rdx,r15
  40daaa:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40daaf:	mov    r13,r15
  40dab2:	cmp    rax,r15
  40dab5:	je     40eb1a <main@@Base+0x7cfa>
  40dabb:	cmp    BYTE PTR [rax],0x5d
  40dabe:	jne    40eb17 <main@@Base+0x7cf7>
  40dac4:	lea    rbp,[rax+0x1]
  40dac8:	mov    rcx,r15
  40dacb:	sub    rcx,rbp
  40dace:	cmp    rcx,0x2
  40dad2:	jl     40fa89 <main@@Base+0x8c69>
  40dad8:	cmp    BYTE PTR [rbp+0x0],0x20
  40dadc:	jg     40ce35 <main@@Base+0x6015>
  40dae2:	jne    40fa89 <main@@Base+0x8c69>
  40dae8:	cmp    BYTE PTR [rax+0x2],0x20
  40daec:	jle    40fa89 <main@@Base+0x8c69>
  40daf2:	add    rax,0x2
  40daf6:	jmp    40ce32 <main@@Base+0x6012>
  40dafb:	neg    rcx
  40dafe:	mov    DWORD PTR [rsp+0xc],ecx
  40db02:	mov    ebx,ecx
  40db04:	mov    rbp,rax
  40db07:	cmp    r13,rax
  40db0a:	jne    40db3f <main@@Base+0x6d1f>
  40db0c:	mov    rdi,r14
  40db0f:	mov    rsi,r13
  40db12:	mov    rdx,r15
  40db15:	lea    rcx,[rip+0x32724]        # 440240 <__data_start@@Base+0x190>
  40db1c:	lea    r8,[rsp+0xc]
  40db21:	call   413920 <main@@Base+0xcb00>
  40db26:	mov    rbp,rax
  40db29:	cmp    rax,r13
  40db2c:	je     40fc63 <main@@Base+0x8e43>
  40db32:	cmp    rbp,r15
  40db35:	je     40fc63 <main@@Base+0x8e43>
  40db3b:	mov    ebx,DWORD PTR [rsp+0xc]
  40db3f:	test   ebx,ebx
  40db41:	jne    40db4e <main@@Base+0x6d2e>
  40db43:	test   BYTE PTR [r14+0x10],0x2
  40db48:	je     40de6d <main@@Base+0x704d>
  40db4e:	mov    rdi,QWORD PTR [r14]
  40db51:	mov    edx,0x4
  40db56:	mov    esi,0x14
  40db5b:	jmp    40f8bd <main@@Base+0x8a9d>
  40db60:	lea    rbp,[rbx+0x1]
  40db64:	mov    rax,r15
  40db67:	sub    rax,rbp
  40db6a:	cmp    rax,0x2
  40db6e:	jl     40db8e <main@@Base+0x6d6e>
  40db70:	cmp    BYTE PTR [rbp+0x0],0x20
  40db74:	jg     40a813 <main@@Base+0x39f3>
  40db7a:	jne    40db8e <main@@Base+0x6d6e>
  40db7c:	cmp    BYTE PTR [rbx+0x2],0x20
  40db80:	jle    40db8e <main@@Base+0x6d6e>
  40db82:	add    rbx,0x2
  40db86:	mov    rbp,rbx
  40db89:	jmp    40a813 <main@@Base+0x39f3>
  40db8e:	mov    rdi,r14
  40db91:	mov    rsi,rbp
  40db94:	mov    rdx,r15
  40db97:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40db9c:	jmp    40a810 <main@@Base+0x39f0>
  40dba1:	mov    rbx,rax
  40dba4:	mov    BYTE PTR [rsp+0xc],0x0
  40dba9:	mov    rdi,QWORD PTR [r14]
  40dbac:	mov    esi,0x1
  40dbb1:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40dbb6:	test   rax,rax
  40dbb9:	je     407511 <main@@Base+0x6f1>
  40dbbf:	mov    rbp,rax
  40dbc2:	mov    QWORD PTR [rsp+0x10],0x0
  40dbcb:	mov    DWORD PTR [rsp+0x20],0x0
  40dbd3:	mov    BYTE PTR [rsp+0xc],0x0
  40dbd8:	cmp    rbx,r15
  40dbdb:	je     40dc11 <main@@Base+0x6df1>
  40dbdd:	mov    rdi,r14
  40dbe0:	mov    rsi,rbx
  40dbe3:	mov    rdx,r15
  40dbe6:	lea    rcx,[rsp+0x20]
  40dbeb:	lea    r8,[rsp+0x10]
  40dbf0:	call   424130 <flatcc_json_parser_integer@@Base>
  40dbf5:	cmp    rax,rbx
  40dbf8:	je     40dc1d <main@@Base+0x6dfd>
  40dbfa:	cmp    DWORD PTR [rsp+0x20],0x0
  40dbff:	je     40dc29 <main@@Base+0x6e09>
  40dc01:	mov    rdi,r14
  40dc04:	mov    rsi,rax
  40dc07:	mov    rdx,r15
  40dc0a:	mov    ecx,0x8
  40dc0f:	jmp    40dc49 <main@@Base+0x6e29>
  40dc11:	xor    ecx,ecx
  40dc13:	mov    rax,r15
  40dc16:	cmp    rbx,rax
  40dc19:	jne    40dc86 <main@@Base+0x6e66>
  40dc1b:	jmp    40dc55 <main@@Base+0x6e35>
  40dc1d:	xor    ecx,ecx
  40dc1f:	mov    rax,rbx
  40dc22:	cmp    rbx,rax
  40dc25:	jne    40dc86 <main@@Base+0x6e66>
  40dc27:	jmp    40dc55 <main@@Base+0x6e35>
  40dc29:	mov    rcx,QWORD PTR [rsp+0x10]
  40dc2e:	cmp    rcx,0x100
  40dc35:	jb     40dd3b <main@@Base+0x6f1b>
  40dc3b:	mov    rdi,r14
  40dc3e:	mov    rsi,rax
  40dc41:	mov    rdx,r15
  40dc44:	mov    ecx,0x7
  40dc49:	call   422690 <flatcc_json_parser_set_error@@Base>
  40dc4e:	xor    ecx,ecx
  40dc50:	cmp    rbx,rax
  40dc53:	jne    40dc86 <main@@Base+0x6e66>
  40dc55:	mov    rdi,r14
  40dc58:	mov    rsi,rbx
  40dc5b:	mov    rdx,r15
  40dc5e:	lea    rcx,[rip+0x324bb]        # 440120 <__data_start@@Base+0x70>
  40dc65:	lea    r8,[rsp+0xc]
  40dc6a:	call   411b30 <main@@Base+0xad10>
  40dc6f:	cmp    rax,rbx
  40dc72:	je     40fc91 <main@@Base+0x8e71>
  40dc78:	cmp    rax,r15
  40dc7b:	je     40fc91 <main@@Base+0x8e71>
  40dc81:	movzx  ecx,BYTE PTR [rsp+0xc]
  40dc86:	mov    BYTE PTR [rbp+0x0],cl
  40dc89:	mov    rcx,r15
  40dc8c:	sub    rcx,rax
  40dc8f:	cmp    rcx,0x2
  40dc93:	jl     40dcaf <main@@Base+0x6e8f>
  40dc95:	cmp    BYTE PTR [rax],0x20
  40dc98:	jg     40dcbd <main@@Base+0x6e9d>
  40dc9a:	jne    40dcaf <main@@Base+0x6e8f>
  40dc9c:	cmp    BYTE PTR [rax+0x1],0x20
  40dca0:	jle    40dcaf <main@@Base+0x6e8f>
  40dca2:	inc    rax
  40dca5:	cmp    rax,r15
  40dca8:	jne    40dcc6 <main@@Base+0x6ea6>
  40dcaa:	jmp    40ed11 <main@@Base+0x7ef1>
  40dcaf:	mov    rdi,r14
  40dcb2:	mov    rsi,rax
  40dcb5:	mov    rdx,r15
  40dcb8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40dcbd:	cmp    rax,r15
  40dcc0:	je     40ed11 <main@@Base+0x7ef1>
  40dcc6:	movzx  ecx,BYTE PTR [rax]
  40dcc9:	cmp    cl,0x2c
  40dccc:	jne    40edc1 <main@@Base+0x7fa1>
  40dcd2:	lea    rbx,[rax+0x1]
  40dcd6:	mov    rcx,r15
  40dcd9:	sub    rcx,rbx
  40dcdc:	cmp    rcx,0x2
  40dce0:	jl     40dcf5 <main@@Base+0x6ed5>
  40dce2:	cmp    BYTE PTR [rbx],0x20
  40dce5:	jg     40dd06 <main@@Base+0x6ee6>
  40dce7:	jne    40dcf5 <main@@Base+0x6ed5>
  40dce9:	cmp    BYTE PTR [rax+0x2],0x20
  40dced:	jle    40dcf5 <main@@Base+0x6ed5>
  40dcef:	add    rax,0x2
  40dcf3:	jmp    40dd03 <main@@Base+0x6ee3>
  40dcf5:	mov    rdi,r14
  40dcf8:	mov    rsi,rbx
  40dcfb:	mov    rdx,r15
  40dcfe:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40dd03:	mov    rbx,rax
  40dd06:	cmp    rbx,r15
  40dd09:	je     40edd2 <main@@Base+0x7fb2>
  40dd0f:	cmp    BYTE PTR [rbx],0x5d
  40dd12:	je     40f540 <main@@Base+0x8720>
  40dd18:	mov    BYTE PTR [rsp+0xc],0x0
  40dd1d:	mov    rdi,QWORD PTR [r14]
  40dd20:	mov    esi,0x1
  40dd25:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40dd2a:	mov    rbp,rax
  40dd2d:	test   rax,rax
  40dd30:	jne    40dbc2 <main@@Base+0x6da2>
  40dd36:	jmp    407511 <main@@Base+0x6f1>
  40dd3b:	mov    BYTE PTR [rsp+0xc],cl
  40dd3f:	cmp    rbx,rax
  40dd42:	jne    40dc86 <main@@Base+0x6e66>
  40dd48:	jmp    40dc55 <main@@Base+0x6e35>
  40dd4d:	xor    ebx,ebx
  40dd4f:	mov    rax,r13
  40dd52:	jmp    40e8e4 <main@@Base+0x7ac4>
  40dd57:	mov    rdi,r14
  40dd5a:	mov    rsi,r13
  40dd5d:	mov    rdx,r15
  40dd60:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40dd65:	mov    r13,rax
  40dd68:	cmp    r12,r13
  40dd6b:	je     40de5c <main@@Base+0x703c>
  40dd71:	mov    QWORD PTR [rsp+0x10],0x0
  40dd7a:	mov    DWORD PTR [rsp+0x20],0x0
  40dd82:	mov    DWORD PTR [rsp+0xc],0x0
  40dd8a:	xor    ebx,ebx
  40dd8c:	cmp    r13,r15
  40dd8f:	je     40ddd5 <main@@Base+0x6fb5>
  40dd91:	mov    rdi,r14
  40dd94:	mov    rsi,r13
  40dd97:	mov    rdx,r15
  40dd9a:	lea    rcx,[rsp+0x20]
  40dd9f:	lea    r8,[rsp+0x10]
  40dda4:	call   424130 <flatcc_json_parser_integer@@Base>
  40dda9:	cmp    rax,r13
  40ddac:	je     40e0bc <main@@Base+0x729c>
  40ddb2:	cmp    DWORD PTR [rsp+0x20],0x0
  40ddb7:	je     40ed19 <main@@Base+0x7ef9>
  40ddbd:	mov    rdi,r14
  40ddc0:	mov    rsi,rax
  40ddc3:	mov    rdx,r15
  40ddc6:	mov    ecx,0x8
  40ddcb:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ddd0:	jmp    40f866 <main@@Base+0x8a46>
  40ddd5:	mov    rax,r15
  40ddd8:	jmp    40f866 <main@@Base+0x8a46>
  40dddd:	mov    rdi,r14
  40dde0:	mov    rsi,r13
  40dde3:	mov    rdx,r15
  40dde6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ddeb:	mov    r13,rax
  40ddee:	cmp    r12,r13
  40ddf1:	je     40de5c <main@@Base+0x703c>
  40ddf3:	mov    QWORD PTR [rsp+0x10],0x0
  40ddfc:	mov    DWORD PTR [rsp+0xc],0x0
  40de04:	mov    QWORD PTR [rsp+0x20],0x0
  40de0d:	cmp    r13,r15
  40de10:	je     40df1a <main@@Base+0x70fa>
  40de16:	mov    rdi,r14
  40de19:	mov    rsi,r13
  40de1c:	mov    rdx,r15
  40de1f:	lea    rcx,[rsp+0xc]
  40de24:	lea    r8,[rsp+0x10]
  40de29:	call   424130 <flatcc_json_parser_integer@@Base>
  40de2e:	cmp    rax,r13
  40de31:	je     40e0c4 <main@@Base+0x72a4>
  40de37:	cmp    DWORD PTR [rsp+0xc],0x0
  40de3c:	je     40ed43 <main@@Base+0x7f23>
  40de42:	mov    rdi,r14
  40de45:	mov    rsi,rax
  40de48:	mov    rdx,r15
  40de4b:	mov    ecx,0x8
  40de50:	call   422690 <flatcc_json_parser_set_error@@Base>
  40de55:	xor    ebx,ebx
  40de57:	jmp    40ed4d <main@@Base+0x7f2d>
  40de5c:	mov    rdi,r14
  40de5f:	mov    rsi,r12
  40de62:	mov    rdx,r15
  40de65:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40de6a:	mov    rbp,rax
  40de6d:	mov    rax,r15
  40de70:	sub    rax,rbp
  40de73:	cmp    rax,0x2
  40de77:	jl     40dea0 <main@@Base+0x7080>
  40de79:	cmp    BYTE PTR [rbp+0x0],0x20
  40de7d:	jg     40deb1 <main@@Base+0x7091>
  40de7f:	jne    40dea0 <main@@Base+0x7080>
  40de81:	cmp    BYTE PTR [rbp+0x1],0x20
  40de85:	jle    40dea0 <main@@Base+0x7080>
  40de87:	inc    rbp
  40de8a:	cmp    rbp,r15
  40de8d:	jne    40deba <main@@Base+0x709a>
  40de8f:	jmp    40fba7 <main@@Base+0x8d87>
  40de94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de9e:	xchg   ax,ax
  40dea0:	mov    rdi,r14
  40dea3:	mov    rsi,rbp
  40dea6:	mov    rdx,r15
  40dea9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40deae:	mov    rbp,rax
  40deb1:	cmp    rbp,r15
  40deb4:	je     40fba7 <main@@Base+0x8d87>
  40deba:	mov    al,BYTE PTR [rbp+0x0]
  40debd:	cmp    al,0x2c
  40debf:	jne    40fbaf <main@@Base+0x8d8f>
  40dec5:	lea    rsi,[rbp+0x1]
  40dec9:	mov    rax,r15
  40decc:	sub    rax,rsi
  40decf:	cmp    rax,0x2
  40ded3:	jl     40def0 <main@@Base+0x70d0>
  40ded5:	cmp    BYTE PTR [rsi],0x20
  40ded8:	jg     40defe <main@@Base+0x70de>
  40deda:	jne    40def0 <main@@Base+0x70d0>
  40dedc:	cmp    BYTE PTR [rbp+0x2],0x20
  40dee0:	jle    40def0 <main@@Base+0x70d0>
  40dee2:	mov    rsi,rbp
  40dee5:	add    rsi,0x2
  40dee9:	jmp    40defe <main@@Base+0x70de>
  40deeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40def0:	mov    rdi,r14
  40def3:	mov    rdx,r15
  40def6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40defb:	mov    rsi,rax
  40defe:	cmp    rsi,r15
  40df01:	mov    rbp,QWORD PTR [rsp+0x30]
  40df06:	je     40fbf0 <main@@Base+0x8dd0>
  40df0c:	cmp    BYTE PTR [rsi],0x7d
  40df0f:	jne    407670 <main@@Base+0x850>
  40df15:	jmp    40fc03 <main@@Base+0x8de3>
  40df1a:	xor    ebx,ebx
  40df1c:	mov    rax,r15
  40df1f:	jmp    40ed4d <main@@Base+0x7f2d>
  40df24:	mov    rdi,r14
  40df27:	mov    rsi,rax
  40df2a:	mov    rdx,r15
  40df2d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40df32:	mov    rsi,r15
  40df35:	cmp    rax,r15
  40df38:	je     40ede8 <main@@Base+0x7fc8>
  40df3e:	cmp    BYTE PTR [rax],0x7d
  40df41:	jne    40ede5 <main@@Base+0x7fc5>
  40df47:	lea    rbp,[rax+0x1]
  40df4b:	mov    rcx,r15
  40df4e:	sub    rcx,rbp
  40df51:	cmp    rcx,0x2
  40df55:	jl     40f9ba <main@@Base+0x8b9a>
  40df5b:	cmp    BYTE PTR [rbp+0x0],0x20
  40df5f:	jg     40c6d9 <main@@Base+0x58b9>
  40df65:	jne    40f9ba <main@@Base+0x8b9a>
  40df6b:	cmp    BYTE PTR [rax+0x2],0x20
  40df6f:	jle    40f9ba <main@@Base+0x8b9a>
  40df75:	add    rax,0x2
  40df79:	jmp    40c6d6 <main@@Base+0x58b6>
  40df7e:	mov    rdi,r14
  40df81:	mov    rsi,rax
  40df84:	mov    rdx,r15
  40df87:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40df8c:	mov    rsi,r15
  40df8f:	cmp    rax,r15
  40df92:	je     40dfa0 <main@@Base+0x7180>
  40df94:	cmp    BYTE PTR [rax],0x7d
  40df97:	je     40f8f1 <main@@Base+0x8ad1>
  40df9d:	mov    rsi,rax
  40dfa0:	mov    rax,r15
  40dfa3:	cmp    rsi,r15
  40dfa6:	je     40dfc5 <main@@Base+0x71a5>
  40dfa8:	cmp    BYTE PTR [rsi],0x22
  40dfab:	jne    40dfb5 <main@@Base+0x7195>
  40dfad:	inc    rsi
  40dfb0:	mov    rax,rsi
  40dfb3:	jmp    40dfc5 <main@@Base+0x71a5>
  40dfb5:	mov    rdi,r14
  40dfb8:	mov    rdx,r15
  40dfbb:	mov    ecx,0x5
  40dfc0:	call   422690 <flatcc_json_parser_set_error@@Base>
  40dfc5:	mov    rdi,r14
  40dfc8:	mov    rsi,rax
  40dfcb:	mov    rdx,r15
  40dfce:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40dfd3:	mov    rcx,r15
  40dfd6:	sub    rcx,rax
  40dfd9:	cmp    rcx,0x2
  40dfdd:	jl     40dff9 <main@@Base+0x71d9>
  40dfdf:	cmp    BYTE PTR [rax],0x20
  40dfe2:	jg     40e007 <main@@Base+0x71e7>
  40dfe4:	jne    40dff9 <main@@Base+0x71d9>
  40dfe6:	cmp    BYTE PTR [rax+0x1],0x20
  40dfea:	jle    40dff9 <main@@Base+0x71d9>
  40dfec:	inc    rax
  40dfef:	cmp    rax,r15
  40dff2:	jne    40e010 <main@@Base+0x71f0>
  40dff4:	jmp    40f84d <main@@Base+0x8a2d>
  40dff9:	mov    rdi,r14
  40dffc:	mov    rsi,rax
  40dfff:	mov    rdx,r15
  40e002:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e007:	cmp    rax,r15
  40e00a:	je     40f84d <main@@Base+0x8a2d>
  40e010:	movzx  ecx,BYTE PTR [rax]
  40e013:	cmp    cl,0x2c
  40e016:	jne    40f8e8 <main@@Base+0x8ac8>
  40e01c:	lea    rsi,[rax+0x1]
  40e020:	mov    rcx,r15
  40e023:	sub    rcx,rsi
  40e026:	cmp    rcx,0x2
  40e02a:	jl     40e03f <main@@Base+0x721f>
  40e02c:	cmp    BYTE PTR [rsi],0x20
  40e02f:	jg     40e04d <main@@Base+0x722d>
  40e031:	jne    40e03f <main@@Base+0x721f>
  40e033:	cmp    BYTE PTR [rax+0x2],0x20
  40e037:	jle    40e03f <main@@Base+0x721f>
  40e039:	add    rax,0x2
  40e03d:	jmp    40e04a <main@@Base+0x722a>
  40e03f:	mov    rdi,r14
  40e042:	mov    rdx,r15
  40e045:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e04a:	mov    rsi,rax
  40e04d:	cmp    rsi,r15
  40e050:	je     40f971 <main@@Base+0x8b51>
  40e056:	cmp    BYTE PTR [rsi],0x7d
  40e059:	jne    40dfa0 <main@@Base+0x7180>
  40e05f:	lea    rbp,[rsi+0x1]
  40e063:	mov    rax,r15
  40e066:	sub    rax,rbp
  40e069:	cmp    rax,0x2
  40e06d:	jl     40f91c <main@@Base+0x8afc>
  40e073:	cmp    BYTE PTR [rbp+0x0],0x20
  40e077:	jg     40c9ad <main@@Base+0x5b8d>
  40e07d:	jne    40f91c <main@@Base+0x8afc>
  40e083:	cmp    BYTE PTR [rsi+0x2],0x20
  40e087:	jle    40f91c <main@@Base+0x8afc>
  40e08d:	add    rsi,0x2
  40e091:	mov    rbp,rsi
  40e094:	cmp    DWORD PTR [r14+0x1c],0x0
  40e099:	jne    40c9b8 <main@@Base+0x5b98>
  40e09f:	jmp    40fae3 <main@@Base+0x8cc3>
  40e0a4:	mov    rdi,r14
  40e0a7:	mov    rsi,rbx
  40e0aa:	mov    rdx,r15
  40e0ad:	mov    ecx,0x16
  40e0b2:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e0b7:	jmp    40fb83 <main@@Base+0x8d63>
  40e0bc:	mov    rax,r13
  40e0bf:	jmp    40f866 <main@@Base+0x8a46>
  40e0c4:	xor    ebx,ebx
  40e0c6:	mov    rax,r13
  40e0c9:	jmp    40ed4d <main@@Base+0x7f2d>
  40e0ce:	mov    rsi,rax
  40e0d1:	mov    rdi,r14
  40e0d4:	mov    rdx,r15
  40e0d7:	lea    rcx,[rsp+0x1c]
  40e0dc:	call   424600 <flatcc_json_parser_build_string@@Base>
  40e0e1:	mov    rbx,rax
  40e0e4:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e0e9:	je     407511 <main@@Base+0x6f1>
  40e0ef:	mov    rdi,QWORD PTR [r14]
  40e0f2:	mov    esi,0x1
  40e0f7:	call   41d1e0 <flatcc_builder_extend_offset_vector@@Base>
  40e0fc:	test   rax,rax
  40e0ff:	je     407511 <main@@Base+0x6f1>
  40e105:	mov    ecx,DWORD PTR [rsp+0x1c]
  40e109:	mov    DWORD PTR [rax],ecx
  40e10b:	mov    rax,r15
  40e10e:	sub    rax,rbx
  40e111:	cmp    rax,0x2
  40e115:	jl     40e131 <main@@Base+0x7311>
  40e117:	cmp    BYTE PTR [rbx],0x20
  40e11a:	jg     40e142 <main@@Base+0x7322>
  40e11c:	jne    40e131 <main@@Base+0x7311>
  40e11e:	cmp    BYTE PTR [rbx+0x1],0x20
  40e122:	jle    40e131 <main@@Base+0x7311>
  40e124:	inc    rbx
  40e127:	cmp    rbx,r15
  40e12a:	jne    40e14b <main@@Base+0x732b>
  40e12c:	jmp    40f7c3 <main@@Base+0x89a3>
  40e131:	mov    rdi,r14
  40e134:	mov    rsi,rbx
  40e137:	mov    rdx,r15
  40e13a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e13f:	mov    rbx,rax
  40e142:	cmp    rbx,r15
  40e145:	je     40f7c3 <main@@Base+0x89a3>
  40e14b:	movzx  eax,BYTE PTR [rbx]
  40e14e:	cmp    al,0x2c
  40e150:	jne    40f7cb <main@@Base+0x89ab>
  40e156:	lea    rsi,[rbx+0x1]
  40e15a:	mov    rax,r15
  40e15d:	sub    rax,rsi
  40e160:	cmp    rax,0x2
  40e164:	jl     40e184 <main@@Base+0x7364>
  40e166:	cmp    BYTE PTR [rsi],0x20
  40e169:	jg     40e192 <main@@Base+0x7372>
  40e16b:	jne    40e184 <main@@Base+0x7364>
  40e16d:	cmp    BYTE PTR [rbx+0x2],0x20
  40e171:	jle    40e184 <main@@Base+0x7364>
  40e173:	add    rbx,0x2
  40e177:	mov    rsi,rbx
  40e17a:	cmp    rsi,r15
  40e17d:	jne    40e19b <main@@Base+0x737b>
  40e17f:	jmp    40f83a <main@@Base+0x8a1a>
  40e184:	mov    rdi,r14
  40e187:	mov    rdx,r15
  40e18a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e18f:	mov    rsi,rax
  40e192:	cmp    rsi,r15
  40e195:	je     40f83a <main@@Base+0x8a1a>
  40e19b:	cmp    BYTE PTR [rsi],0x5d
  40e19e:	jne    40e0d1 <main@@Base+0x72b1>
  40e1a4:	lea    rbp,[rsi+0x1]
  40e1a8:	mov    rax,r15
  40e1ab:	sub    rax,rbp
  40e1ae:	cmp    rax,0x2
  40e1b2:	jl     40f801 <main@@Base+0x89e1>
  40e1b8:	cmp    BYTE PTR [rbp+0x0],0x20
  40e1bc:	jg     40cba3 <main@@Base+0x5d83>
  40e1c2:	jne    40f801 <main@@Base+0x89e1>
  40e1c8:	cmp    BYTE PTR [rsi+0x2],0x20
  40e1cc:	jle    40f801 <main@@Base+0x89e1>
  40e1d2:	add    rsi,0x2
  40e1d6:	mov    rbp,rsi
  40e1d9:	jmp    40cba3 <main@@Base+0x5d83>
  40e1de:	test   rbx,rbx
  40e1e1:	jns    40e8df <main@@Base+0x7abf>
  40e1e7:	mov    rdi,r14
  40e1ea:	mov    rsi,rax
  40e1ed:	mov    rdx,r15
  40e1f0:	mov    ecx,0x7
  40e1f5:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e1fa:	xor    ebx,ebx
  40e1fc:	jmp    40e8e4 <main@@Base+0x7ac4>
  40e201:	mov    rbp,r15
  40e204:	jmp    40beaa <main@@Base+0x508a>
  40e209:	cmp    al,0x5d
  40e20b:	jne    40f581 <main@@Base+0x8761>
  40e211:	lea    rbp,[rcx+0x1]
  40e215:	mov    rax,r15
  40e218:	sub    rax,rbp
  40e21b:	cmp    rax,0x2
  40e21f:	jl     40e8c9 <main@@Base+0x7aa9>
  40e225:	cmp    BYTE PTR [rbp+0x0],0x20
  40e229:	jg     40beaa <main@@Base+0x508a>
  40e22f:	jne    40e8c9 <main@@Base+0x7aa9>
  40e235:	cmp    BYTE PTR [rcx+0x2],0x20
  40e239:	jle    40e8c9 <main@@Base+0x7aa9>
  40e23f:	add    rcx,0x2
  40e243:	mov    rbp,rcx
  40e246:	jmp    40beaa <main@@Base+0x508a>
  40e24b:	mov    rdi,r14
  40e24e:	mov    rsi,r15
  40e251:	jmp    40f587 <main@@Base+0x8767>
  40e256:	mov    rsi,rax
  40e259:	mov    r12,r15
  40e25c:	cmp    rsi,r15
  40e25f:	je     40e281 <main@@Base+0x7461>
  40e261:	cmp    BYTE PTR [rsi],0x22
  40e264:	jne    40e26e <main@@Base+0x744e>
  40e266:	inc    rsi
  40e269:	mov    r12,rsi
  40e26c:	jmp    40e281 <main@@Base+0x7461>
  40e26e:	mov    rdi,r14
  40e271:	mov    rdx,r15
  40e274:	mov    ecx,0x5
  40e279:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e27e:	mov    r12,rax
  40e281:	mov    rcx,r15
  40e284:	sub    rcx,r12
  40e287:	cmp    rcx,0x8
  40e28b:	jb     40e298 <main@@Base+0x7478>
  40e28d:	movbe  rax,QWORD PTR [r12]
  40e293:	jmp    40e31d <main@@Base+0x74fd>
  40e298:	lea    rax,[rcx-0x1]
  40e29c:	cmp    rax,0x6
  40e2a0:	ja     40e6ea <main@@Base+0x78ca>
  40e2a6:	lea    rdx,[rip+0x23ed3]        # 432180 <_IO_stdin_used@@Base+0x180>
  40e2ad:	mov    rsi,rdx
  40e2b0:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40e2b4:	add    rdx,rsi
  40e2b7:	xor    r8d,r8d
  40e2ba:	xor    eax,eax
  40e2bc:	xor    esi,esi
  40e2be:	xor    edi,edi
  40e2c0:	xor    ebp,ebp
  40e2c2:	xor    ebx,ebx
  40e2c4:	jmp    rdx
  40e2c6:	movsx  r8,BYTE PTR [r12+0x6]
  40e2cc:	shl    r8,0x8
  40e2d0:	movsx  rax,BYTE PTR [r12+0x5]
  40e2d6:	shl    rax,0x10
  40e2da:	or     rax,r8
  40e2dd:	movsx  rsi,BYTE PTR [r12+0x4]
  40e2e3:	shl    rsi,0x18
  40e2e7:	or     rsi,rax
  40e2ea:	movsx  rdi,BYTE PTR [r12+0x3]
  40e2f0:	shl    rdi,0x20
  40e2f4:	or     rdi,rsi
  40e2f7:	movsx  rbp,BYTE PTR [r12+0x2]
  40e2fd:	shl    rbp,0x28
  40e301:	or     rbp,rdi
  40e304:	movsx  rbx,BYTE PTR [r12+0x1]
  40e30a:	shl    rbx,0x30
  40e30e:	or     rbx,rbp
  40e311:	movzx  eax,BYTE PTR [r12]
  40e316:	shl    rax,0x38
  40e31a:	or     rax,rbx
  40e31d:	movabs rdx,0x6e65737465640000
  40e327:	cmp    rax,rdx
  40e32a:	jae    40e3ab <main@@Base+0x758b>
  40e32c:	movabs rdx,0xffffffff00000000
  40e336:	and    rax,rdx
  40e339:	movabs rdx,0x6461746100000000
  40e343:	cmp    rax,rdx
  40e346:	jne    40e6ea <main@@Base+0x78ca>
  40e34c:	mov    rax,r12
  40e34f:	cmp    rcx,0x5
  40e353:	jl     40e616 <main@@Base+0x77f6>
  40e359:	cmp    BYTE PTR [r12+0x4],0x22
  40e35f:	mov    rax,r12
  40e362:	jne    40e616 <main@@Base+0x77f6>
  40e368:	lea    rsi,[r12+0x5]
  40e36d:	mov    rax,r15
  40e370:	sub    rax,rsi
  40e373:	cmp    rax,0x2
  40e377:	jl     40e498 <main@@Base+0x7678>
  40e37d:	cmp    BYTE PTR [rsi],0x20
  40e380:	jg     40e4a6 <main@@Base+0x7686>
  40e386:	jne    40e498 <main@@Base+0x7678>
  40e38c:	cmp    BYTE PTR [r12+0x6],0x20
  40e392:	jle    40e498 <main@@Base+0x7678>
  40e398:	lea    rsi,[r12+0x6]
  40e39d:	cmp    rsi,r15
  40e3a0:	jne    40e4af <main@@Base+0x768f>
  40e3a6:	jmp    40e554 <main@@Base+0x7734>
  40e3ab:	mov    rdx,rax
  40e3ae:	shr    rdx,0x8
  40e3b2:	movabs rsi,0x75726c64617461
  40e3bc:	cmp    rdx,rsi
  40e3bf:	jne    40e420 <main@@Base+0x7600>
  40e3c1:	mov    rax,r12
  40e3c4:	cmp    rcx,0x8
  40e3c8:	jl     40e65b <main@@Base+0x783b>
  40e3ce:	cmp    BYTE PTR [r12+0x7],0x22
  40e3d4:	mov    rax,r12
  40e3d7:	jne    40e65b <main@@Base+0x783b>
  40e3dd:	lea    rsi,[r12+0x8]
  40e3e2:	mov    rax,r15
  40e3e5:	sub    rax,rsi
  40e3e8:	cmp    rax,0x2
  40e3ec:	jl     40e4fa <main@@Base+0x76da>
  40e3f2:	cmp    BYTE PTR [rsi],0x20
  40e3f5:	jg     40e508 <main@@Base+0x76e8>
  40e3fb:	jne    40e4fa <main@@Base+0x76da>
  40e401:	cmp    BYTE PTR [r12+0x9],0x20
  40e407:	jle    40e4fa <main@@Base+0x76da>
  40e40d:	lea    rsi,[r12+0x9]
  40e412:	cmp    rsi,r15
  40e415:	jne    40e50d <main@@Base+0x76ed>
  40e41b:	jmp    40e572 <main@@Base+0x7752>
  40e420:	and    rax,0xffffffffffff0000
  40e426:	movabs rdx,0x6e65737465640000
  40e430:	cmp    rax,rdx
  40e433:	jne    40e6ea <main@@Base+0x78ca>
  40e439:	mov    rax,r12
  40e43c:	cmp    rcx,0x7
  40e440:	jl     40e6a3 <main@@Base+0x7883>
  40e446:	cmp    BYTE PTR [r12+0x6],0x22
  40e44c:	mov    rax,r12
  40e44f:	jne    40e6a3 <main@@Base+0x7883>
  40e455:	lea    rsi,[r12+0x7]
  40e45a:	mov    rax,r15
  40e45d:	sub    rax,rsi
  40e460:	cmp    rax,0x2
  40e464:	jl     40e590 <main@@Base+0x7770>
  40e46a:	cmp    BYTE PTR [rsi],0x20
  40e46d:	jg     40e59e <main@@Base+0x777e>
  40e473:	jne    40e590 <main@@Base+0x7770>
  40e479:	cmp    BYTE PTR [r12+0x8],0x20
  40e47f:	jle    40e590 <main@@Base+0x7770>
  40e485:	lea    rsi,[r12+0x8]
  40e48a:	cmp    rsi,r15
  40e48d:	jne    40e5a3 <main@@Base+0x7783>
  40e493:	jmp    40e5ea <main@@Base+0x77ca>
  40e498:	mov    rdi,r14
  40e49b:	mov    rdx,r15
  40e49e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e4a3:	mov    rsi,rax
  40e4a6:	cmp    rsi,r15
  40e4a9:	je     40e554 <main@@Base+0x7734>
  40e4af:	cmp    BYTE PTR [rsi],0x3a
  40e4b2:	jne    40e554 <main@@Base+0x7734>
  40e4b8:	lea    rax,[rsi+0x1]
  40e4bc:	mov    rcx,r15
  40e4bf:	sub    rcx,rax
  40e4c2:	cmp    rcx,0x2
  40e4c6:	jl     40e608 <main@@Base+0x77e8>
  40e4cc:	cmp    BYTE PTR [rax],0x20
  40e4cf:	jg     40e616 <main@@Base+0x77f6>
  40e4d5:	jne    40e608 <main@@Base+0x77e8>
  40e4db:	cmp    BYTE PTR [rsi+0x2],0x20
  40e4df:	jle    40e608 <main@@Base+0x77e8>
  40e4e5:	add    rsi,0x2
  40e4e9:	mov    rax,rsi
  40e4ec:	cmp    r12,rax
  40e4ef:	jne    40e61f <main@@Base+0x77ff>
  40e4f5:	jmp    40e6ea <main@@Base+0x78ca>
  40e4fa:	mov    rdi,r14
  40e4fd:	mov    rdx,r15
  40e500:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e505:	mov    rsi,rax
  40e508:	cmp    rsi,r15
  40e50b:	je     40e572 <main@@Base+0x7752>
  40e50d:	cmp    BYTE PTR [rsi],0x3a
  40e510:	jne    40e572 <main@@Base+0x7752>
  40e512:	lea    rax,[rsi+0x1]
  40e516:	mov    rcx,r15
  40e519:	sub    rcx,rax
  40e51c:	cmp    rcx,0x2
  40e520:	jl     40e64d <main@@Base+0x782d>
  40e526:	cmp    BYTE PTR [rax],0x20
  40e529:	jg     40e65b <main@@Base+0x783b>
  40e52f:	jne    40e64d <main@@Base+0x782d>
  40e535:	cmp    BYTE PTR [rsi+0x2],0x20
  40e539:	jle    40e64d <main@@Base+0x782d>
  40e53f:	add    rsi,0x2
  40e543:	mov    rax,rsi
  40e546:	cmp    r12,rax
  40e549:	jne    40e664 <main@@Base+0x7844>
  40e54f:	jmp    40e6ea <main@@Base+0x78ca>
  40e554:	mov    rdi,r14
  40e557:	mov    rdx,r15
  40e55a:	mov    ecx,0x4
  40e55f:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e564:	cmp    r12,rax
  40e567:	jne    40e61f <main@@Base+0x77ff>
  40e56d:	jmp    40e6ea <main@@Base+0x78ca>
  40e572:	mov    rdi,r14
  40e575:	mov    rdx,r15
  40e578:	mov    ecx,0x4
  40e57d:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e582:	cmp    r12,rax
  40e585:	jne    40e664 <main@@Base+0x7844>
  40e58b:	jmp    40e6ea <main@@Base+0x78ca>
  40e590:	mov    rdi,r14
  40e593:	mov    rdx,r15
  40e596:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e59b:	mov    rsi,rax
  40e59e:	cmp    rsi,r15
  40e5a1:	je     40e5ea <main@@Base+0x77ca>
  40e5a3:	cmp    BYTE PTR [rsi],0x3a
  40e5a6:	jne    40e5ea <main@@Base+0x77ca>
  40e5a8:	lea    rax,[rsi+0x1]
  40e5ac:	mov    rcx,r15
  40e5af:	sub    rcx,rax
  40e5b2:	cmp    rcx,0x2
  40e5b6:	jl     40e695 <main@@Base+0x7875>
  40e5bc:	cmp    BYTE PTR [rax],0x20
  40e5bf:	jg     40e6a3 <main@@Base+0x7883>
  40e5c5:	jne    40e695 <main@@Base+0x7875>
  40e5cb:	cmp    BYTE PTR [rsi+0x2],0x20
  40e5cf:	jle    40e695 <main@@Base+0x7875>
  40e5d5:	add    rsi,0x2
  40e5d9:	mov    rax,rsi
  40e5dc:	cmp    r12,rax
  40e5df:	jne    40e6a8 <main@@Base+0x7888>
  40e5e5:	jmp    40e6ea <main@@Base+0x78ca>
  40e5ea:	mov    rdi,r14
  40e5ed:	mov    rdx,r15
  40e5f0:	mov    ecx,0x4
  40e5f5:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e5fa:	cmp    r12,rax
  40e5fd:	jne    40e6a8 <main@@Base+0x7888>
  40e603:	jmp    40e6ea <main@@Base+0x78ca>
  40e608:	mov    rdi,r14
  40e60b:	mov    rsi,rax
  40e60e:	mov    rdx,r15
  40e611:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e616:	cmp    r12,rax
  40e619:	je     40e6ea <main@@Base+0x78ca>
  40e61f:	mov    rdi,r14
  40e622:	mov    rsi,rax
  40e625:	mov    rdx,r15
  40e628:	lea    rcx,[rsp+0x10]
  40e62d:	xor    r8d,r8d
  40e630:	call   424220 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40e635:	mov    rbx,rax
  40e638:	cmp    DWORD PTR [rsp+0x10],0x0
  40e63d:	je     40c352 <main@@Base+0x5532>
  40e643:	mov    rdi,QWORD PTR [r14]
  40e646:	xor    esi,esi
  40e648:	jmp    40e6d4 <main@@Base+0x78b4>
  40e64d:	mov    rdi,r14
  40e650:	mov    rsi,rax
  40e653:	mov    rdx,r15
  40e656:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e65b:	cmp    r12,rax
  40e65e:	je     40e6ea <main@@Base+0x78ca>
  40e664:	mov    rdi,r14
  40e667:	mov    rsi,rax
  40e66a:	mov    rdx,r15
  40e66d:	lea    rcx,[rsp+0x10]
  40e672:	mov    r8d,0x1
  40e678:	call   424220 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40e67d:	mov    rbx,rax
  40e680:	cmp    DWORD PTR [rsp+0x10],0x0
  40e685:	je     40c352 <main@@Base+0x5532>
  40e68b:	mov    rdi,QWORD PTR [r14]
  40e68e:	mov    esi,0x1
  40e693:	jmp    40e6d4 <main@@Base+0x78b4>
  40e695:	mov    rdi,r14
  40e698:	mov    rsi,rax
  40e69b:	mov    rdx,r15
  40e69e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e6a3:	cmp    r12,rax
  40e6a6:	je     40e6ea <main@@Base+0x78ca>
  40e6a8:	mov    rdi,r14
  40e6ab:	mov    rsi,rax
  40e6ae:	mov    rdx,r15
  40e6b1:	lea    rcx,[rsp+0x10]
  40e6b6:	xor    r8d,r8d
  40e6b9:	call   424220 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40e6be:	mov    rbx,rax
  40e6c1:	cmp    DWORD PTR [rsp+0x10],0x0
  40e6c6:	je     40c352 <main@@Base+0x5532>
  40e6cc:	mov    rdi,QWORD PTR [r14]
  40e6cf:	mov    esi,0x2
  40e6d4:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  40e6d9:	test   rax,rax
  40e6dc:	je     40c352 <main@@Base+0x5532>
  40e6e2:	mov    ecx,DWORD PTR [rsp+0x10]
  40e6e6:	mov    DWORD PTR [rax],ecx
  40e6e8:	jmp    40e6fb <main@@Base+0x78db>
  40e6ea:	mov    rdi,r14
  40e6ed:	mov    rsi,r12
  40e6f0:	mov    rdx,r15
  40e6f3:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40e6f8:	mov    rbx,rax
  40e6fb:	mov    rax,r15
  40e6fe:	sub    rax,rbx
  40e701:	cmp    rax,0x2
  40e705:	jl     40e721 <main@@Base+0x7901>
  40e707:	cmp    BYTE PTR [rbx],0x20
  40e70a:	jg     40e732 <main@@Base+0x7912>
  40e70c:	jne    40e721 <main@@Base+0x7901>
  40e70e:	cmp    BYTE PTR [rbx+0x1],0x20
  40e712:	jle    40e721 <main@@Base+0x7901>
  40e714:	inc    rbx
  40e717:	cmp    rbx,r15
  40e71a:	jne    40e73b <main@@Base+0x791b>
  40e71c:	jmp    40f594 <main@@Base+0x8774>
  40e721:	mov    rdi,r14
  40e724:	mov    rsi,rbx
  40e727:	mov    rdx,r15
  40e72a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e72f:	mov    rbx,rax
  40e732:	cmp    rbx,r15
  40e735:	je     40f594 <main@@Base+0x8774>
  40e73b:	movzx  eax,BYTE PTR [rbx]
  40e73e:	cmp    al,0x2c
  40e740:	jne    40f5bb <main@@Base+0x879b>
  40e746:	lea    rsi,[rbx+0x1]
  40e74a:	mov    rax,r15
  40e74d:	sub    rax,rsi
  40e750:	cmp    rax,0x2
  40e754:	jl     40e774 <main@@Base+0x7954>
  40e756:	cmp    BYTE PTR [rsi],0x20
  40e759:	jg     40e782 <main@@Base+0x7962>
  40e75b:	jne    40e774 <main@@Base+0x7954>
  40e75d:	cmp    BYTE PTR [rbx+0x2],0x20
  40e761:	jle    40e774 <main@@Base+0x7954>
  40e763:	add    rbx,0x2
  40e767:	mov    rsi,rbx
  40e76a:	cmp    rsi,r15
  40e76d:	jne    40e78b <main@@Base+0x796b>
  40e76f:	jmp    40f60c <main@@Base+0x87ec>
  40e774:	mov    rdi,r14
  40e777:	mov    rdx,r15
  40e77a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e77f:	mov    rsi,rax
  40e782:	cmp    rsi,r15
  40e785:	je     40f60c <main@@Base+0x87ec>
  40e78b:	cmp    BYTE PTR [rsi],0x7d
  40e78e:	jne    40e259 <main@@Base+0x7439>
  40e794:	lea    rbp,[rsi+0x1]
  40e798:	mov    rax,r15
  40e79b:	sub    rax,rbp
  40e79e:	cmp    rax,0x2
  40e7a2:	jl     40f5f9 <main@@Base+0x87d9>
  40e7a8:	cmp    BYTE PTR [rbp+0x0],0x20
  40e7ac:	jg     40c344 <main@@Base+0x5524>
  40e7b2:	jne    40f5f9 <main@@Base+0x87d9>
  40e7b8:	cmp    BYTE PTR [rsi+0x2],0x20
  40e7bc:	jle    40f5f9 <main@@Base+0x87d9>
  40e7c2:	add    rsi,0x2
  40e7c6:	mov    rbp,rsi
  40e7c9:	cmp    DWORD PTR [r14+0x1c],0x0
  40e7ce:	jne    40c34f <main@@Base+0x552f>
  40e7d4:	jmp    40f5a2 <main@@Base+0x8782>
  40e7d9:	mov    DWORD PTR [rsp+0xc],ecx
  40e7dd:	mov    ebx,ecx
  40e7df:	mov    rcx,rbp
  40e7e2:	mov    rbp,rax
  40e7e5:	cmp    rcx,rax
  40e7e8:	jne    40e820 <main@@Base+0x7a00>
  40e7ea:	mov    rdi,r14
  40e7ed:	mov    rsi,rcx
  40e7f0:	mov    rdx,r15
  40e7f3:	mov    rbx,rcx
  40e7f6:	lea    rcx,[rip+0x31aa3]        # 4402a0 <__data_start@@Base+0x1f0>
  40e7fd:	lea    r8,[rsp+0xc]
  40e802:	call   413c80 <main@@Base+0xce60>
  40e807:	mov    rbp,rax
  40e80a:	cmp    rax,rbx
  40e80d:	je     40fc63 <main@@Base+0x8e43>
  40e813:	cmp    rbp,r15
  40e816:	je     40fc63 <main@@Base+0x8e43>
  40e81c:	mov    ebx,DWORD PTR [rsp+0xc]
  40e820:	test   ebx,ebx
  40e822:	jne    40e82f <main@@Base+0x7a0f>
  40e824:	test   BYTE PTR [r14+0x10],0x2
  40e829:	je     40de6d <main@@Base+0x704d>
  40e82f:	mov    rdi,QWORD PTR [r14]
  40e832:	mov    edx,0x4
  40e837:	mov    esi,0x11
  40e83c:	jmp    40f8bd <main@@Base+0x8a9d>
  40e841:	mov    rdi,r14
  40e844:	mov    rsi,rax
  40e847:	mov    rdx,r15
  40e84a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e84f:	mov    rbx,r15
  40e852:	cmp    rax,r15
  40e855:	je     40f61a <main@@Base+0x87fa>
  40e85b:	cmp    BYTE PTR [rax],0x5d
  40e85e:	jne    40f617 <main@@Base+0x87f7>
  40e864:	lea    rbp,[rax+0x1]
  40e868:	mov    rcx,r15
  40e86b:	sub    rcx,rbp
  40e86e:	cmp    rcx,0x2
  40e872:	jl     40fb75 <main@@Base+0x8d55>
  40e878:	cmp    BYTE PTR [rbp+0x0],0x20
  40e87c:	jg     40fb86 <main@@Base+0x8d66>
  40e882:	jne    40fb75 <main@@Base+0x8d55>
  40e888:	cmp    BYTE PTR [rax+0x2],0x20
  40e88c:	jle    40fb75 <main@@Base+0x8d55>
  40e892:	add    rax,0x2
  40e896:	jmp    40fb83 <main@@Base+0x8d63>
  40e89b:	lea    rbp,[rbx+0x1]
  40e89f:	mov    rax,r15
  40e8a2:	sub    rax,rbp
  40e8a5:	cmp    rax,0x2
  40e8a9:	jl     40e8c9 <main@@Base+0x7aa9>
  40e8ab:	cmp    BYTE PTR [rbp+0x0],0x20
  40e8af:	jg     40beaa <main@@Base+0x508a>
  40e8b5:	jne    40e8c9 <main@@Base+0x7aa9>
  40e8b7:	cmp    BYTE PTR [rbx+0x2],0x20
  40e8bb:	jle    40e8c9 <main@@Base+0x7aa9>
  40e8bd:	add    rbx,0x2
  40e8c1:	mov    rbp,rbx
  40e8c4:	jmp    40beaa <main@@Base+0x508a>
  40e8c9:	mov    rdi,r14
  40e8cc:	mov    rsi,rbp
  40e8cf:	mov    rdx,r15
  40e8d2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40e8d7:	jmp    40bea7 <main@@Base+0x5087>
  40e8dc:	neg    rbx
  40e8df:	mov    QWORD PTR [rsp+0x20],rbx
  40e8e4:	mov    rbp,rax
  40e8e7:	cmp    r13,rax
  40e8ea:	jne    40e920 <main@@Base+0x7b00>
  40e8ec:	mov    rdi,r14
  40e8ef:	mov    rsi,r13
  40e8f2:	mov    rdx,r15
  40e8f5:	lea    rcx,[rip+0x31984]        # 440280 <__data_start@@Base+0x1d0>
  40e8fc:	lea    r8,[rsp+0x20]
  40e901:	call   413ad0 <main@@Base+0xccb0>
  40e906:	mov    rbp,rax
  40e909:	cmp    rax,r13
  40e90c:	je     40fc63 <main@@Base+0x8e43>
  40e912:	cmp    rbp,r15
  40e915:	je     40fc63 <main@@Base+0x8e43>
  40e91b:	mov    rbx,QWORD PTR [rsp+0x20]
  40e920:	test   rbx,rbx
  40e923:	jne    40e930 <main@@Base+0x7b10>
  40e925:	test   BYTE PTR [r14+0x10],0x2
  40e92a:	je     40de6d <main@@Base+0x704d>
  40e930:	mov    rdi,QWORD PTR [r14]
  40e933:	mov    edx,0x8
  40e938:	mov    esi,0x16
  40e93d:	jmp    40eda6 <main@@Base+0x7f86>
  40e942:	mov    rdi,r14
  40e945:	mov    rsi,rax
  40e948:	mov    rdx,r15
  40e94b:	mov    ecx,0x21
  40e950:	call   422690 <flatcc_json_parser_set_error@@Base>
  40e955:	jmp    40de6a <main@@Base+0x704a>
  40e95a:	mov    rbx,rax
  40e95d:	mov    QWORD PTR [rsp+0x20],0x0
  40e966:	mov    rdi,QWORD PTR [r14]
  40e969:	mov    esi,0x1
  40e96e:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40e973:	test   rax,rax
  40e976:	je     407511 <main@@Base+0x6f1>
  40e97c:	mov    rbp,rax
  40e97f:	mov    QWORD PTR [rsp+0x10],0x0
  40e988:	mov    DWORD PTR [rsp+0xc],0x0
  40e990:	mov    QWORD PTR [rsp+0x20],0x0
  40e999:	cmp    rbx,r15
  40e99c:	je     40e9e6 <main@@Base+0x7bc6>
  40e99e:	mov    rdi,r14
  40e9a1:	mov    rsi,rbx
  40e9a4:	mov    rdx,r15
  40e9a7:	lea    rcx,[rsp+0xc]
  40e9ac:	lea    r8,[rsp+0x10]
  40e9b1:	call   424130 <flatcc_json_parser_integer@@Base>
  40e9b6:	cmp    rax,rbx
  40e9b9:	je     40e9f2 <main@@Base+0x7bd2>
  40e9bb:	mov    rcx,QWORD PTR [rsp+0x10]
  40e9c0:	cmp    DWORD PTR [rsp+0xc],0x0
  40e9c5:	je     40e9fe <main@@Base+0x7bde>
  40e9c7:	movabs rdx,0x8000000000000000
  40e9d1:	cmp    rcx,rdx
  40e9d4:	jbe    40ea1f <main@@Base+0x7bff>
  40e9d6:	mov    rdi,r14
  40e9d9:	mov    rsi,rax
  40e9dc:	mov    rdx,r15
  40e9df:	mov    ecx,0x8
  40e9e4:	jmp    40ea11 <main@@Base+0x7bf1>
  40e9e6:	xor    ecx,ecx
  40e9e8:	mov    rax,r15
  40e9eb:	cmp    rbx,rax
  40e9ee:	jne    40ea5d <main@@Base+0x7c3d>
  40e9f0:	jmp    40ea2c <main@@Base+0x7c0c>
  40e9f2:	xor    ecx,ecx
  40e9f4:	mov    rax,rbx
  40e9f7:	cmp    rbx,rax
  40e9fa:	jne    40ea5d <main@@Base+0x7c3d>
  40e9fc:	jmp    40ea2c <main@@Base+0x7c0c>
  40e9fe:	test   rcx,rcx
  40ea01:	jns    40ea22 <main@@Base+0x7c02>
  40ea03:	mov    rdi,r14
  40ea06:	mov    rsi,rax
  40ea09:	mov    rdx,r15
  40ea0c:	mov    ecx,0x7
  40ea11:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ea16:	xor    ecx,ecx
  40ea18:	cmp    rbx,rax
  40ea1b:	jne    40ea5d <main@@Base+0x7c3d>
  40ea1d:	jmp    40ea2c <main@@Base+0x7c0c>
  40ea1f:	neg    rcx
  40ea22:	mov    QWORD PTR [rsp+0x20],rcx
  40ea27:	cmp    rbx,rax
  40ea2a:	jne    40ea5d <main@@Base+0x7c3d>
  40ea2c:	mov    rdi,r14
  40ea2f:	mov    rsi,rbx
  40ea32:	mov    rdx,r15
  40ea35:	lea    rcx,[rip+0x31924]        # 440360 <__data_start@@Base+0x2b0>
  40ea3c:	lea    r8,[rsp+0x20]
  40ea41:	call   413ad0 <main@@Base+0xccb0>
  40ea46:	cmp    rax,rbx
  40ea49:	je     40fc91 <main@@Base+0x8e71>
  40ea4f:	cmp    rax,r15
  40ea52:	je     40fc91 <main@@Base+0x8e71>
  40ea58:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea5d:	mov    QWORD PTR [rbp+0x0],rcx
  40ea61:	mov    rcx,r15
  40ea64:	sub    rcx,rax
  40ea67:	cmp    rcx,0x2
  40ea6b:	jl     40ea87 <main@@Base+0x7c67>
  40ea6d:	cmp    BYTE PTR [rax],0x20
  40ea70:	jg     40ea95 <main@@Base+0x7c75>
  40ea72:	jne    40ea87 <main@@Base+0x7c67>
  40ea74:	cmp    BYTE PTR [rax+0x1],0x20
  40ea78:	jle    40ea87 <main@@Base+0x7c67>
  40ea7a:	inc    rax
  40ea7d:	cmp    rax,r15
  40ea80:	jne    40ea9e <main@@Base+0x7c7e>
  40ea82:	jmp    40f845 <main@@Base+0x8a25>
  40ea87:	mov    rdi,r14
  40ea8a:	mov    rsi,rax
  40ea8d:	mov    rdx,r15
  40ea90:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ea95:	cmp    rax,r15
  40ea98:	je     40f845 <main@@Base+0x8a25>
  40ea9e:	movzx  ecx,BYTE PTR [rax]
  40eaa1:	cmp    cl,0x2c
  40eaa4:	jne    40f8d7 <main@@Base+0x8ab7>
  40eaaa:	lea    rbx,[rax+0x1]
  40eaae:	mov    rcx,r15
  40eab1:	sub    rcx,rbx
  40eab4:	cmp    rcx,0x2
  40eab8:	jl     40eacd <main@@Base+0x7cad>
  40eaba:	cmp    BYTE PTR [rbx],0x20
  40eabd:	jg     40eade <main@@Base+0x7cbe>
  40eabf:	jne    40eacd <main@@Base+0x7cad>
  40eac1:	cmp    BYTE PTR [rax+0x2],0x20
  40eac5:	jle    40eacd <main@@Base+0x7cad>
  40eac7:	add    rax,0x2
  40eacb:	jmp    40eadb <main@@Base+0x7cbb>
  40eacd:	mov    rdi,r14
  40ead0:	mov    rsi,rbx
  40ead3:	mov    rdx,r15
  40ead6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40eadb:	mov    rbx,rax
  40eade:	cmp    rbx,r15
  40eae1:	je     40f956 <main@@Base+0x8b36>
  40eae7:	cmp    BYTE PTR [rbx],0x5d
  40eaea:	je     40f9cd <main@@Base+0x8bad>
  40eaf0:	mov    QWORD PTR [rsp+0x20],0x0
  40eaf9:	mov    rdi,QWORD PTR [r14]
  40eafc:	mov    esi,0x1
  40eb01:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40eb06:	mov    rbp,rax
  40eb09:	test   rax,rax
  40eb0c:	jne    40e97f <main@@Base+0x7b5f>
  40eb12:	jmp    407511 <main@@Base+0x6f1>
  40eb17:	mov    r13,rax
  40eb1a:	mov    QWORD PTR [rsp+0x10],0x0
  40eb23:	mov    rdi,QWORD PTR [r14]
  40eb26:	mov    esi,0x1
  40eb2b:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40eb30:	test   rax,rax
  40eb33:	je     40fc99 <main@@Base+0x8e79>
  40eb39:	mov    rbp,rax
  40eb3c:	mov    rdi,r14
  40eb3f:	mov    rsi,r13
  40eb42:	mov    rdx,r15
  40eb45:	lea    rcx,[rsp+0x10]
  40eb4a:	call   423870 <flatcc_json_parser_double@@Base>
  40eb4f:	mov    rbx,rax
  40eb52:	cmp    r13,rax
  40eb55:	jne    40eb86 <main@@Base+0x7d66>
  40eb57:	mov    rdi,r14
  40eb5a:	mov    rsi,r13
  40eb5d:	mov    rdx,r15
  40eb60:	lea    rcx,[rip+0x317d9]        # 440340 <__data_start@@Base+0x290>
  40eb67:	lea    r8,[rsp+0x10]
  40eb6c:	call   413fb0 <main@@Base+0xd190>
  40eb71:	mov    rbx,rax
  40eb74:	cmp    rax,r13
  40eb77:	je     407511 <main@@Base+0x6f1>
  40eb7d:	cmp    rbx,r15
  40eb80:	je     407511 <main@@Base+0x6f1>
  40eb86:	mov    rax,QWORD PTR [rsp+0x10]
  40eb8b:	mov    QWORD PTR [rbp+0x0],rax
  40eb8f:	mov    rax,r15
  40eb92:	sub    rax,rbx
  40eb95:	cmp    rax,0x2
  40eb99:	jl     40ebb5 <main@@Base+0x7d95>
  40eb9b:	cmp    BYTE PTR [rbx],0x20
  40eb9e:	jg     40ebc6 <main@@Base+0x7da6>
  40eba0:	jne    40ebb5 <main@@Base+0x7d95>
  40eba2:	cmp    BYTE PTR [rbx+0x1],0x20
  40eba6:	jle    40ebb5 <main@@Base+0x7d95>
  40eba8:	inc    rbx
  40ebab:	cmp    rbx,r15
  40ebae:	jne    40ebcf <main@@Base+0x7daf>
  40ebb0:	jmp    40f969 <main@@Base+0x8b49>
  40ebb5:	mov    rdi,r14
  40ebb8:	mov    rsi,rbx
  40ebbb:	mov    rdx,r15
  40ebbe:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ebc3:	mov    rbx,rax
  40ebc6:	cmp    rbx,r15
  40ebc9:	je     40f969 <main@@Base+0x8b49>
  40ebcf:	movzx  eax,BYTE PTR [rbx]
  40ebd2:	cmp    al,0x2c
  40ebd4:	jne    40fa0e <main@@Base+0x8bee>
  40ebda:	lea    r13,[rbx+0x1]
  40ebde:	mov    rax,r15
  40ebe1:	sub    rax,r13
  40ebe4:	cmp    rax,0x2
  40ebe8:	jl     40ec0a <main@@Base+0x7dea>
  40ebea:	cmp    BYTE PTR [r13+0x0],0x20
  40ebef:	jg     40ec1b <main@@Base+0x7dfb>
  40ebf1:	jne    40ec0a <main@@Base+0x7dea>
  40ebf3:	cmp    BYTE PTR [rbx+0x2],0x20
  40ebf7:	jle    40ec0a <main@@Base+0x7dea>
  40ebf9:	add    rbx,0x2
  40ebfd:	mov    r13,rbx
  40ec00:	cmp    r13,r15
  40ec03:	jne    40ec24 <main@@Base+0x7e04>
  40ec05:	jmp    40fa4f <main@@Base+0x8c2f>
  40ec0a:	mov    rdi,r14
  40ec0d:	mov    rsi,r13
  40ec10:	mov    rdx,r15
  40ec13:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ec18:	mov    r13,rax
  40ec1b:	cmp    r13,r15
  40ec1e:	je     40fa4f <main@@Base+0x8c2f>
  40ec24:	cmp    BYTE PTR [r13+0x0],0x5d
  40ec29:	je     40fa5a <main@@Base+0x8c3a>
  40ec2f:	mov    QWORD PTR [rsp+0x10],0x0
  40ec38:	mov    rdi,QWORD PTR [r14]
  40ec3b:	mov    esi,0x1
  40ec40:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40ec45:	mov    rbp,rax
  40ec48:	mov    rbx,r13
  40ec4b:	test   rax,rax
  40ec4e:	jne    40eb3c <main@@Base+0x7d1c>
  40ec54:	jmp    407511 <main@@Base+0x6f1>
  40ec59:	mov    rbp,r15
  40ec5c:	jmp    40bdf7 <main@@Base+0x4fd7>
  40ec61:	mov    rbp,r15
  40ec64:	jmp    40bf4e <main@@Base+0x512e>
  40ec69:	cmp    al,0x5d
  40ec6b:	jne    40f814 <main@@Base+0x89f4>
  40ec71:	lea    rbp,[rbx+0x1]
  40ec75:	mov    rax,r15
  40ec78:	sub    rax,rbp
  40ec7b:	cmp    rax,0x2
  40ec7f:	jl     40ec9f <main@@Base+0x7e7f>
  40ec81:	cmp    BYTE PTR [rbp+0x0],0x20
  40ec85:	jg     40bdf7 <main@@Base+0x4fd7>
  40ec8b:	jne    40ec9f <main@@Base+0x7e7f>
  40ec8d:	cmp    BYTE PTR [rbx+0x2],0x20
  40ec91:	jle    40ec9f <main@@Base+0x7e7f>
  40ec93:	add    rbx,0x2
  40ec97:	mov    rbp,rbx
  40ec9a:	jmp    40bdf7 <main@@Base+0x4fd7>
  40ec9f:	mov    rdi,r14
  40eca2:	mov    rsi,rbp
  40eca5:	mov    rdx,r15
  40eca8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ecad:	jmp    40bdf4 <main@@Base+0x4fd4>
  40ecb2:	cmp    al,0x5d
  40ecb4:	jne    40f827 <main@@Base+0x8a07>
  40ecba:	lea    rbp,[rbx+0x1]
  40ecbe:	mov    rax,r15
  40ecc1:	sub    rax,rbp
  40ecc4:	cmp    rax,0x2
  40ecc8:	jl     40ece8 <main@@Base+0x7ec8>
  40ecca:	cmp    BYTE PTR [rbp+0x0],0x20
  40ecce:	jg     40bf4e <main@@Base+0x512e>
  40ecd4:	jne    40ece8 <main@@Base+0x7ec8>
  40ecd6:	cmp    BYTE PTR [rbx+0x2],0x20
  40ecda:	jle    40ece8 <main@@Base+0x7ec8>
  40ecdc:	add    rbx,0x2
  40ece0:	mov    rbp,rbx
  40ece3:	jmp    40bf4e <main@@Base+0x512e>
  40ece8:	mov    rdi,r14
  40eceb:	mov    rsi,rbp
  40ecee:	mov    rdx,r15
  40ecf1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40ecf6:	jmp    40bf4b <main@@Base+0x512b>
  40ecfb:	mov    rdi,r14
  40ecfe:	mov    rsi,r15
  40ed01:	jmp    40f81a <main@@Base+0x89fa>
  40ed06:	mov    rdi,r14
  40ed09:	mov    rsi,r15
  40ed0c:	jmp    40f82d <main@@Base+0x8a0d>
  40ed11:	mov    rbp,r15
  40ed14:	jmp    40c30d <main@@Base+0x54ed>
  40ed19:	mov    rcx,QWORD PTR [rsp+0x10]
  40ed1e:	mov    rdx,rcx
  40ed21:	shr    rdx,0x20
  40ed25:	je     40f860 <main@@Base+0x8a40>
  40ed2b:	mov    rdi,r14
  40ed2e:	mov    rsi,rax
  40ed31:	mov    rdx,r15
  40ed34:	mov    ecx,0x7
  40ed39:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ed3e:	jmp    40f866 <main@@Base+0x8a46>
  40ed43:	mov    rbx,QWORD PTR [rsp+0x10]
  40ed48:	mov    QWORD PTR [rsp+0x20],rbx
  40ed4d:	mov    rbp,rax
  40ed50:	cmp    r13,rax
  40ed53:	jne    40ed89 <main@@Base+0x7f69>
  40ed55:	mov    rdi,r14
  40ed58:	mov    rsi,r13
  40ed5b:	mov    rdx,r15
  40ed5e:	lea    rcx,[rip+0x3159b]        # 440300 <__data_start@@Base+0x250>
  40ed65:	lea    r8,[rsp+0x20]
  40ed6a:	call   413e30 <main@@Base+0xd010>
  40ed6f:	mov    rbp,rax
  40ed72:	cmp    rax,r13
  40ed75:	je     40fc63 <main@@Base+0x8e43>
  40ed7b:	cmp    rbp,r15
  40ed7e:	je     40fc63 <main@@Base+0x8e43>
  40ed84:	mov    rbx,QWORD PTR [rsp+0x20]
  40ed89:	test   rbx,rbx
  40ed8c:	jne    40ed99 <main@@Base+0x7f79>
  40ed8e:	test   BYTE PTR [r14+0x10],0x2
  40ed93:	je     40de6d <main@@Base+0x704d>
  40ed99:	mov    rdi,QWORD PTR [r14]
  40ed9c:	mov    edx,0x8
  40eda1:	mov    esi,0x17
  40eda6:	mov    ecx,0x8
  40edab:	call   41f040 <flatcc_builder_table_add@@Base>
  40edb0:	test   rax,rax
  40edb3:	je     40fc63 <main@@Base+0x8e43>
  40edb9:	mov    QWORD PTR [rax],rbx
  40edbc:	jmp    40de6d <main@@Base+0x704d>
  40edc1:	cmp    cl,0x5d
  40edc4:	je     40cbe7 <main@@Base+0x5dc7>
  40edca:	mov    rdi,r14
  40edcd:	mov    rsi,rax
  40edd0:	jmp    40edd8 <main@@Base+0x7fb8>
  40edd2:	mov    rdi,r14
  40edd5:	mov    rsi,r15
  40edd8:	mov    rdx,r15
  40eddb:	mov    ecx,0x9
  40ede0:	jmp    40c305 <main@@Base+0x54e5>
  40ede5:	mov    rsi,rax
  40ede8:	mov    r12,r15
  40edeb:	cmp    rsi,r15
  40edee:	je     40ee10 <main@@Base+0x7ff0>
  40edf0:	cmp    BYTE PTR [rsi],0x22
  40edf3:	jne    40edfd <main@@Base+0x7fdd>
  40edf5:	inc    rsi
  40edf8:	mov    r12,rsi
  40edfb:	jmp    40ee10 <main@@Base+0x7ff0>
  40edfd:	mov    rdi,r14
  40ee00:	mov    rdx,r15
  40ee03:	mov    ecx,0x5
  40ee08:	call   422690 <flatcc_json_parser_set_error@@Base>
  40ee0d:	mov    r12,rax
  40ee10:	mov    rcx,r15
  40ee13:	sub    rcx,r12
  40ee16:	cmp    rcx,0x8
  40ee1a:	jb     40ee27 <main@@Base+0x8007>
  40ee1c:	movbe  rax,QWORD PTR [r12]
  40ee22:	jmp    40eeac <main@@Base+0x808c>
  40ee27:	lea    rax,[rcx-0x1]
  40ee2b:	cmp    rax,0x6
  40ee2f:	ja     40f451 <main@@Base+0x8631>
  40ee35:	lea    rdx,[rip+0x2330c]        # 432148 <_IO_stdin_used@@Base+0x148>
  40ee3c:	mov    rsi,rdx
  40ee3f:	movsxd rdx,DWORD PTR [rdx+rax*4]
  40ee43:	add    rdx,rsi
  40ee46:	xor    r8d,r8d
  40ee49:	xor    eax,eax
  40ee4b:	xor    esi,esi
  40ee4d:	xor    edi,edi
  40ee4f:	xor    ebp,ebp
  40ee51:	xor    ebx,ebx
  40ee53:	jmp    rdx
  40ee55:	movsx  r8,BYTE PTR [r12+0x6]
  40ee5b:	shl    r8,0x8
  40ee5f:	movsx  rax,BYTE PTR [r12+0x5]
  40ee65:	shl    rax,0x10
  40ee69:	or     rax,r8
  40ee6c:	movsx  rsi,BYTE PTR [r12+0x4]
  40ee72:	shl    rsi,0x18
  40ee76:	or     rsi,rax
  40ee79:	movsx  rdi,BYTE PTR [r12+0x3]
  40ee7f:	shl    rdi,0x20
  40ee83:	or     rdi,rsi
  40ee86:	movsx  rbp,BYTE PTR [r12+0x2]
  40ee8c:	shl    rbp,0x28
  40ee90:	or     rbp,rdi
  40ee93:	movsx  rbx,BYTE PTR [r12+0x1]
  40ee99:	shl    rbx,0x30
  40ee9d:	or     rbx,rbp
  40eea0:	movzx  eax,BYTE PTR [r12]
  40eea5:	shl    rax,0x38
  40eea9:	or     rax,rbx
  40eeac:	movabs rdx,0x6964000000000000
  40eeb6:	cmp    rax,rdx
  40eeb9:	jae    40ef31 <main@@Base+0x8111>
  40eebb:	shr    rax,0x18
  40eebf:	movabs rdx,0x636f756e74
  40eec9:	cmp    rax,rdx
  40eecc:	jne    40f451 <main@@Base+0x8631>
  40eed2:	mov    rbp,r12
  40eed5:	cmp    rcx,0x6
  40eed9:	jl     40f19f <main@@Base+0x837f>
  40eedf:	cmp    BYTE PTR [r12+0x5],0x22
  40eee5:	mov    rbp,r12
  40eee8:	jne    40f19f <main@@Base+0x837f>
  40eeee:	lea    rsi,[r12+0x6]
  40eef3:	mov    rax,r15
  40eef6:	sub    rax,rsi
  40eef9:	cmp    rax,0x2
  40eefd:	jl     40f02e <main@@Base+0x820e>
  40ef03:	cmp    BYTE PTR [rsi],0x20
  40ef06:	jg     40f03c <main@@Base+0x821c>
  40ef0c:	jne    40f02e <main@@Base+0x820e>
  40ef12:	cmp    BYTE PTR [r12+0x7],0x20
  40ef18:	jle    40f02e <main@@Base+0x820e>
  40ef1e:	lea    rsi,[r12+0x7]
  40ef23:	cmp    rsi,r15
  40ef26:	jne    40f045 <main@@Base+0x8225>
  40ef2c:	jmp    40f0ec <main@@Base+0x82cc>
  40ef31:	mov    rdx,rax
  40ef34:	movabs rsi,0xffffff0000000000
  40ef3e:	and    rdx,rsi
  40ef41:	movabs rsi,0x76616c0000000000
  40ef4b:	cmp    rdx,rsi
  40ef4e:	jne    40efaf <main@@Base+0x818f>
  40ef50:	mov    rbp,r12
  40ef53:	cmp    rcx,0x4
  40ef57:	jl     40f2c6 <main@@Base+0x84a6>
  40ef5d:	cmp    BYTE PTR [r12+0x3],0x22
  40ef63:	mov    rbp,r12
  40ef66:	jne    40f2c6 <main@@Base+0x84a6>
  40ef6c:	lea    rsi,[r12+0x4]
  40ef71:	mov    rax,r15
  40ef74:	sub    rax,rsi
  40ef77:	cmp    rax,0x2
  40ef7b:	jl     40f091 <main@@Base+0x8271>
  40ef81:	cmp    BYTE PTR [rsi],0x20
  40ef84:	jg     40f09f <main@@Base+0x827f>
  40ef8a:	jne    40f091 <main@@Base+0x8271>
  40ef90:	cmp    BYTE PTR [r12+0x5],0x20
  40ef96:	jle    40f091 <main@@Base+0x8271>
  40ef9c:	lea    rsi,[r12+0x5]
  40efa1:	cmp    rsi,r15
  40efa4:	jne    40f0a4 <main@@Base+0x8284>
  40efaa:	jmp    40f101 <main@@Base+0x82e1>
  40efaf:	movabs rdx,0xffff000000000000
  40efb9:	and    rax,rdx
  40efbc:	movabs rdx,0x6964000000000000
  40efc6:	cmp    rax,rdx
  40efc9:	jne    40f451 <main@@Base+0x8631>
  40efcf:	mov    rax,r12
  40efd2:	cmp    rcx,0x3
  40efd6:	jl     40f410 <main@@Base+0x85f0>
  40efdc:	cmp    BYTE PTR [r12+0x2],0x22
  40efe2:	mov    rax,r12
  40efe5:	jne    40f410 <main@@Base+0x85f0>
  40efeb:	lea    rsi,[r12+0x3]
  40eff0:	mov    rax,r15
  40eff3:	sub    rax,rsi
  40eff6:	cmp    rax,0x2
  40effa:	jl     40f116 <main@@Base+0x82f6>
  40f000:	cmp    BYTE PTR [rsi],0x20
  40f003:	jg     40f124 <main@@Base+0x8304>
  40f009:	jne    40f116 <main@@Base+0x82f6>
  40f00f:	cmp    BYTE PTR [r12+0x4],0x20
  40f015:	jle    40f116 <main@@Base+0x82f6>
  40f01b:	lea    rsi,[r12+0x4]
  40f020:	cmp    rsi,r15
  40f023:	jne    40f129 <main@@Base+0x8309>
  40f029:	jmp    40f170 <main@@Base+0x8350>
  40f02e:	mov    rdi,r14
  40f031:	mov    rdx,r15
  40f034:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f039:	mov    rsi,rax
  40f03c:	cmp    rsi,r15
  40f03f:	je     40f0ec <main@@Base+0x82cc>
  40f045:	cmp    BYTE PTR [rsi],0x3a
  40f048:	jne    40f0ec <main@@Base+0x82cc>
  40f04e:	lea    rbp,[rsi+0x1]
  40f052:	mov    rax,r15
  40f055:	sub    rax,rbp
  40f058:	cmp    rax,0x2
  40f05c:	jl     40f18e <main@@Base+0x836e>
  40f062:	cmp    BYTE PTR [rbp+0x0],0x20
  40f066:	jg     40f19f <main@@Base+0x837f>
  40f06c:	jne    40f18e <main@@Base+0x836e>
  40f072:	cmp    BYTE PTR [rsi+0x2],0x20
  40f076:	jle    40f18e <main@@Base+0x836e>
  40f07c:	add    rsi,0x2
  40f080:	mov    rbp,rsi
  40f083:	cmp    r12,rbp
  40f086:	jne    40f1a8 <main@@Base+0x8388>
  40f08c:	jmp    40f451 <main@@Base+0x8631>
  40f091:	mov    rdi,r14
  40f094:	mov    rdx,r15
  40f097:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f09c:	mov    rsi,rax
  40f09f:	cmp    rsi,r15
  40f0a2:	je     40f101 <main@@Base+0x82e1>
  40f0a4:	cmp    BYTE PTR [rsi],0x3a
  40f0a7:	jne    40f101 <main@@Base+0x82e1>
  40f0a9:	lea    rbp,[rsi+0x1]
  40f0ad:	mov    rax,r15
  40f0b0:	sub    rax,rbp
  40f0b3:	cmp    rax,0x2
  40f0b7:	jl     40f2b5 <main@@Base+0x8495>
  40f0bd:	cmp    BYTE PTR [rbp+0x0],0x20
  40f0c1:	jg     40f2c6 <main@@Base+0x84a6>
  40f0c7:	jne    40f2b5 <main@@Base+0x8495>
  40f0cd:	cmp    BYTE PTR [rsi+0x2],0x20
  40f0d1:	jle    40f2b5 <main@@Base+0x8495>
  40f0d7:	add    rsi,0x2
  40f0db:	mov    rbp,rsi
  40f0de:	cmp    r12,rbp
  40f0e1:	jne    40f2cf <main@@Base+0x84af>
  40f0e7:	jmp    40f451 <main@@Base+0x8631>
  40f0ec:	mov    rdi,r14
  40f0ef:	mov    rdx,r15
  40f0f2:	mov    ecx,0x4
  40f0f7:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f0fc:	jmp    40f19c <main@@Base+0x837c>
  40f101:	mov    rdi,r14
  40f104:	mov    rdx,r15
  40f107:	mov    ecx,0x4
  40f10c:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f111:	jmp    40f2c3 <main@@Base+0x84a3>
  40f116:	mov    rdi,r14
  40f119:	mov    rdx,r15
  40f11c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f121:	mov    rsi,rax
  40f124:	cmp    rsi,r15
  40f127:	je     40f170 <main@@Base+0x8350>
  40f129:	cmp    BYTE PTR [rsi],0x3a
  40f12c:	jne    40f170 <main@@Base+0x8350>
  40f12e:	lea    rax,[rsi+0x1]
  40f132:	mov    rcx,r15
  40f135:	sub    rcx,rax
  40f138:	cmp    rcx,0x2
  40f13c:	jl     40f402 <main@@Base+0x85e2>
  40f142:	cmp    BYTE PTR [rax],0x20
  40f145:	jg     40f410 <main@@Base+0x85f0>
  40f14b:	jne    40f402 <main@@Base+0x85e2>
  40f151:	cmp    BYTE PTR [rsi+0x2],0x20
  40f155:	jle    40f402 <main@@Base+0x85e2>
  40f15b:	add    rsi,0x2
  40f15f:	mov    rax,rsi
  40f162:	cmp    r12,rax
  40f165:	jne    40f415 <main@@Base+0x85f5>
  40f16b:	jmp    40f451 <main@@Base+0x8631>
  40f170:	mov    rdi,r14
  40f173:	mov    rdx,r15
  40f176:	mov    ecx,0x4
  40f17b:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f180:	cmp    r12,rax
  40f183:	jne    40f415 <main@@Base+0x85f5>
  40f189:	jmp    40f451 <main@@Base+0x8631>
  40f18e:	mov    rdi,r14
  40f191:	mov    rsi,rbp
  40f194:	mov    rdx,r15
  40f197:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f19c:	mov    rbp,rax
  40f19f:	cmp    r12,rbp
  40f1a2:	je     40f451 <main@@Base+0x8631>
  40f1a8:	mov    QWORD PTR [rsp+0x10],0x0
  40f1b1:	mov    DWORD PTR [rsp+0x20],0x0
  40f1b9:	mov    WORD PTR [rsp+0xc],0x0
  40f1c0:	cmp    rbp,r15
  40f1c3:	je     40f1fc <main@@Base+0x83dc>
  40f1c5:	mov    rdi,r14
  40f1c8:	mov    rsi,rbp
  40f1cb:	mov    rdx,r15
  40f1ce:	lea    rcx,[rsp+0x20]
  40f1d3:	lea    r8,[rsp+0x10]
  40f1d8:	call   424130 <flatcc_json_parser_integer@@Base>
  40f1dd:	cmp    rax,rbp
  40f1e0:	je     40f209 <main@@Base+0x83e9>
  40f1e2:	mov    rbx,rax
  40f1e5:	cmp    DWORD PTR [rsp+0x20],0x0
  40f1ea:	je     40f216 <main@@Base+0x83f6>
  40f1ec:	mov    rdi,r14
  40f1ef:	mov    rsi,rbx
  40f1f2:	mov    rdx,r15
  40f1f5:	mov    ecx,0x8
  40f1fa:	jmp    40f236 <main@@Base+0x8416>
  40f1fc:	xor    r12d,r12d
  40f1ff:	mov    rbx,r15
  40f202:	cmp    rbp,rbx
  40f205:	jne    40f27b <main@@Base+0x845b>
  40f207:	jmp    40f246 <main@@Base+0x8426>
  40f209:	xor    r12d,r12d
  40f20c:	mov    rbx,rbp
  40f20f:	cmp    rbp,rbx
  40f212:	jne    40f27b <main@@Base+0x845b>
  40f214:	jmp    40f246 <main@@Base+0x8426>
  40f216:	mov    r12,QWORD PTR [rsp+0x10]
  40f21b:	cmp    r12,0x10000
  40f222:	jb     40f3ee <main@@Base+0x85ce>
  40f228:	mov    rdi,r14
  40f22b:	mov    rsi,rbx
  40f22e:	mov    rdx,r15
  40f231:	mov    ecx,0x7
  40f236:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f23b:	mov    rbx,rax
  40f23e:	xor    r12d,r12d
  40f241:	cmp    rbp,rbx
  40f244:	jne    40f27b <main@@Base+0x845b>
  40f246:	mov    rdi,r14
  40f249:	mov    rsi,rbp
  40f24c:	mov    rdx,r15
  40f24f:	lea    rcx,[rip+0x3152a]        # 440780 <__data_start@@Base+0x6d0>
  40f256:	lea    r8,[rsp+0xc]
  40f25b:	call   41aaf0 <main@@Base+0x13cd0>
  40f260:	mov    rbx,rax
  40f263:	cmp    rax,rbp
  40f266:	je     40c6e7 <main@@Base+0x58c7>
  40f26c:	cmp    rbx,r15
  40f26f:	je     40c6e7 <main@@Base+0x58c7>
  40f275:	movzx  r12d,WORD PTR [rsp+0xc]
  40f27b:	test   r12w,r12w
  40f27f:	jne    40f28c <main@@Base+0x846c>
  40f281:	test   BYTE PTR [r14+0x10],0x2
  40f286:	je     40f462 <main@@Base+0x8642>
  40f28c:	mov    rdi,QWORD PTR [r14]
  40f28f:	mov    edx,0x2
  40f294:	mov    esi,0x2
  40f299:	mov    ecx,0x2
  40f29e:	call   41f040 <flatcc_builder_table_add@@Base>
  40f2a3:	test   rax,rax
  40f2a6:	je     40c6e7 <main@@Base+0x58c7>
  40f2ac:	mov    WORD PTR [rax],r12w
  40f2b0:	jmp    40f462 <main@@Base+0x8642>
  40f2b5:	mov    rdi,r14
  40f2b8:	mov    rsi,rbp
  40f2bb:	mov    rdx,r15
  40f2be:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f2c3:	mov    rbp,rax
  40f2c6:	cmp    r12,rbp
  40f2c9:	je     40f451 <main@@Base+0x8631>
  40f2cf:	mov    QWORD PTR [rsp+0x10],0x0
  40f2d8:	mov    DWORD PTR [rsp+0xc],0x0
  40f2e0:	mov    QWORD PTR [rsp+0x20],0x0
  40f2e9:	cmp    rbp,r15
  40f2ec:	je     40f339 <main@@Base+0x8519>
  40f2ee:	mov    rdi,r14
  40f2f1:	mov    rsi,rbp
  40f2f4:	mov    rdx,r15
  40f2f7:	lea    rcx,[rsp+0xc]
  40f2fc:	lea    r8,[rsp+0x10]
  40f301:	call   424130 <flatcc_json_parser_integer@@Base>
  40f306:	cmp    rax,rbp
  40f309:	je     40f346 <main@@Base+0x8526>
  40f30b:	mov    rbx,rax
  40f30e:	mov    r12,QWORD PTR [rsp+0x10]
  40f313:	cmp    DWORD PTR [rsp+0xc],0x0
  40f318:	je     40f353 <main@@Base+0x8533>
  40f31a:	movabs rax,0x8000000000000000
  40f324:	cmp    r12,rax
  40f327:	jbe    40f378 <main@@Base+0x8558>
  40f329:	mov    rdi,r14
  40f32c:	mov    rsi,rbx
  40f32f:	mov    rdx,r15
  40f332:	mov    ecx,0x8
  40f337:	jmp    40f366 <main@@Base+0x8546>
  40f339:	xor    r12d,r12d
  40f33c:	mov    rbx,r15
  40f33f:	cmp    rbp,rbx
  40f342:	jne    40f3b9 <main@@Base+0x8599>
  40f344:	jmp    40f385 <main@@Base+0x8565>
  40f346:	xor    r12d,r12d
  40f349:	mov    rbx,rbp
  40f34c:	cmp    rbp,rbx
  40f34f:	jne    40f3b9 <main@@Base+0x8599>
  40f351:	jmp    40f385 <main@@Base+0x8565>
  40f353:	test   r12,r12
  40f356:	jns    40f37b <main@@Base+0x855b>
  40f358:	mov    rdi,r14
  40f35b:	mov    rsi,rbx
  40f35e:	mov    rdx,r15
  40f361:	mov    ecx,0x7
  40f366:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f36b:	mov    rbx,rax
  40f36e:	xor    r12d,r12d
  40f371:	cmp    rbp,rbx
  40f374:	jne    40f3b9 <main@@Base+0x8599>
  40f376:	jmp    40f385 <main@@Base+0x8565>
  40f378:	neg    r12
  40f37b:	mov    QWORD PTR [rsp+0x20],r12
  40f380:	cmp    rbp,rbx
  40f383:	jne    40f3b9 <main@@Base+0x8599>
  40f385:	mov    rdi,r14
  40f388:	mov    rsi,rbp
  40f38b:	mov    rdx,r15
  40f38e:	lea    rcx,[rip+0x3140b]        # 4407a0 <__data_start@@Base+0x6f0>
  40f395:	lea    r8,[rsp+0x20]
  40f39a:	call   413ad0 <main@@Base+0xccb0>
  40f39f:	mov    rbx,rax
  40f3a2:	cmp    rax,rbp
  40f3a5:	je     40c6e7 <main@@Base+0x58c7>
  40f3ab:	cmp    rbx,r15
  40f3ae:	je     40c6e7 <main@@Base+0x58c7>
  40f3b4:	mov    r12,QWORD PTR [rsp+0x20]
  40f3b9:	test   r12,r12
  40f3bc:	jne    40f3c9 <main@@Base+0x85a9>
  40f3be:	test   BYTE PTR [r14+0x10],0x2
  40f3c3:	je     40f462 <main@@Base+0x8642>
  40f3c9:	mov    rdi,QWORD PTR [r14]
  40f3cc:	mov    edx,0x8
  40f3d1:	mov    esi,0x1
  40f3d6:	mov    ecx,0x8
  40f3db:	call   41f040 <flatcc_builder_table_add@@Base>
  40f3e0:	test   rax,rax
  40f3e3:	je     40c6e7 <main@@Base+0x58c7>
  40f3e9:	mov    QWORD PTR [rax],r12
  40f3ec:	jmp    40f462 <main@@Base+0x8642>
  40f3ee:	mov    WORD PTR [rsp+0xc],r12w
  40f3f4:	cmp    rbp,rbx
  40f3f7:	jne    40f27b <main@@Base+0x845b>
  40f3fd:	jmp    40f246 <main@@Base+0x8426>
  40f402:	mov    rdi,r14
  40f405:	mov    rsi,rax
  40f408:	mov    rdx,r15
  40f40b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f410:	cmp    r12,rax
  40f413:	je     40f451 <main@@Base+0x8631>
  40f415:	mov    rdi,r14
  40f418:	mov    rsi,rax
  40f41b:	mov    rdx,r15
  40f41e:	lea    rcx,[rsp+0x3c]
  40f423:	call   424600 <flatcc_json_parser_build_string@@Base>
  40f428:	mov    rbx,rax
  40f42b:	cmp    DWORD PTR [rsp+0x3c],0x0
  40f430:	je     40c6e7 <main@@Base+0x58c7>
  40f436:	mov    rdi,QWORD PTR [r14]
  40f439:	xor    esi,esi
  40f43b:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  40f440:	test   rax,rax
  40f443:	je     40c6e7 <main@@Base+0x58c7>
  40f449:	mov    ecx,DWORD PTR [rsp+0x3c]
  40f44d:	mov    DWORD PTR [rax],ecx
  40f44f:	jmp    40f462 <main@@Base+0x8642>
  40f451:	mov    rdi,r14
  40f454:	mov    rsi,r12
  40f457:	mov    rdx,r15
  40f45a:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f45f:	mov    rbx,rax
  40f462:	mov    rax,r15
  40f465:	sub    rax,rbx
  40f468:	cmp    rax,0x2
  40f46c:	jl     40f488 <main@@Base+0x8668>
  40f46e:	cmp    BYTE PTR [rbx],0x20
  40f471:	jg     40f499 <main@@Base+0x8679>
  40f473:	jne    40f488 <main@@Base+0x8668>
  40f475:	cmp    BYTE PTR [rbx+0x1],0x20
  40f479:	jle    40f488 <main@@Base+0x8668>
  40f47b:	inc    rbx
  40f47e:	cmp    rbx,r15
  40f481:	jne    40f4a2 <main@@Base+0x8682>
  40f483:	jmp    40f92f <main@@Base+0x8b0f>
  40f488:	mov    rdi,r14
  40f48b:	mov    rsi,rbx
  40f48e:	mov    rdx,r15
  40f491:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f496:	mov    rbx,rax
  40f499:	cmp    rbx,r15
  40f49c:	je     40f92f <main@@Base+0x8b0f>
  40f4a2:	movzx  eax,BYTE PTR [rbx]
  40f4a5:	cmp    al,0x2c
  40f4a7:	jne    40f97c <main@@Base+0x8b5c>
  40f4ad:	lea    rsi,[rbx+0x1]
  40f4b1:	mov    rax,r15
  40f4b4:	sub    rax,rsi
  40f4b7:	cmp    rax,0x2
  40f4bb:	jl     40f4db <main@@Base+0x86bb>
  40f4bd:	cmp    BYTE PTR [rsi],0x20
  40f4c0:	jg     40f4e9 <main@@Base+0x86c9>
  40f4c2:	jne    40f4db <main@@Base+0x86bb>
  40f4c4:	cmp    BYTE PTR [rbx+0x2],0x20
  40f4c8:	jle    40f4db <main@@Base+0x86bb>
  40f4ca:	add    rbx,0x2
  40f4ce:	mov    rsi,rbx
  40f4d1:	cmp    rsi,r15
  40f4d4:	jne    40f4f2 <main@@Base+0x86d2>
  40f4d6:	jmp    40fa44 <main@@Base+0x8c24>
  40f4db:	mov    rdi,r14
  40f4de:	mov    rdx,r15
  40f4e1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f4e6:	mov    rsi,rax
  40f4e9:	cmp    rsi,r15
  40f4ec:	je     40fa44 <main@@Base+0x8c24>
  40f4f2:	cmp    BYTE PTR [rsi],0x7d
  40f4f5:	jne    40ede8 <main@@Base+0x7fc8>
  40f4fb:	lea    rbp,[rsi+0x1]
  40f4ff:	mov    rax,r15
  40f502:	sub    rax,rbp
  40f505:	cmp    rax,0x2
  40f509:	jl     40f9ba <main@@Base+0x8b9a>
  40f50f:	cmp    BYTE PTR [rbp+0x0],0x20
  40f513:	jg     40c6d9 <main@@Base+0x58b9>
  40f519:	jne    40f9ba <main@@Base+0x8b9a>
  40f51f:	cmp    BYTE PTR [rsi+0x2],0x20
  40f523:	jle    40f9ba <main@@Base+0x8b9a>
  40f529:	add    rsi,0x2
  40f52d:	mov    rbp,rsi
  40f530:	cmp    DWORD PTR [r14+0x1c],0x0
  40f535:	jne    40c6e4 <main@@Base+0x58c4>
  40f53b:	jmp    40f93d <main@@Base+0x8b1d>
  40f540:	lea    rbp,[rbx+0x1]
  40f544:	mov    rax,r15
  40f547:	sub    rax,rbp
  40f54a:	cmp    rax,0x2
  40f54e:	jl     40f56e <main@@Base+0x874e>
  40f550:	cmp    BYTE PTR [rbp+0x0],0x20
  40f554:	jg     40c30d <main@@Base+0x54ed>
  40f55a:	jne    40f56e <main@@Base+0x874e>
  40f55c:	cmp    BYTE PTR [rbx+0x2],0x20
  40f560:	jle    40f56e <main@@Base+0x874e>
  40f562:	add    rbx,0x2
  40f566:	mov    rbp,rbx
  40f569:	jmp    40c30d <main@@Base+0x54ed>
  40f56e:	mov    rdi,r14
  40f571:	mov    rsi,rbp
  40f574:	mov    rdx,r15
  40f577:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f57c:	jmp    40c30a <main@@Base+0x54ea>
  40f581:	mov    rdi,r14
  40f584:	mov    rsi,rcx
  40f587:	mov    rdx,r15
  40f58a:	mov    ecx,0x9
  40f58f:	jmp    40bea2 <main@@Base+0x5082>
  40f594:	mov    rbp,r15
  40f597:	cmp    DWORD PTR [r14+0x1c],0x0
  40f59c:	jne    40c34f <main@@Base+0x552f>
  40f5a2:	mov    rdi,QWORD PTR [r14]
  40f5a5:	call   41e6d0 <flatcc_builder_end_table@@Base>
  40f5aa:	mov    DWORD PTR [rsp+0x1c],eax
  40f5ae:	test   eax,eax
  40f5b0:	jne    40c376 <main@@Base+0x5556>
  40f5b6:	jmp    40c34f <main@@Base+0x552f>
  40f5bb:	cmp    al,0x7d
  40f5bd:	jne    40fa9c <main@@Base+0x8c7c>
  40f5c3:	lea    rbp,[rbx+0x1]
  40f5c7:	mov    rax,r15
  40f5ca:	sub    rax,rbp
  40f5cd:	cmp    rax,0x2
  40f5d1:	jl     40f5f9 <main@@Base+0x87d9>
  40f5d3:	cmp    BYTE PTR [rbp+0x0],0x20
  40f5d7:	jg     40c344 <main@@Base+0x5524>
  40f5dd:	jne    40f5f9 <main@@Base+0x87d9>
  40f5df:	cmp    BYTE PTR [rbx+0x2],0x20
  40f5e3:	jle    40f5f9 <main@@Base+0x87d9>
  40f5e5:	add    rbx,0x2
  40f5e9:	mov    rbp,rbx
  40f5ec:	cmp    DWORD PTR [r14+0x1c],0x0
  40f5f1:	jne    40c34f <main@@Base+0x552f>
  40f5f7:	jmp    40f5a2 <main@@Base+0x8782>
  40f5f9:	mov    rdi,r14
  40f5fc:	mov    rsi,rbp
  40f5ff:	mov    rdx,r15
  40f602:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f607:	jmp    40c341 <main@@Base+0x5521>
  40f60c:	mov    rdi,r14
  40f60f:	mov    rsi,r15
  40f612:	jmp    40faa2 <main@@Base+0x8c82>
  40f617:	mov    rbx,rax
  40f61a:	mov    BYTE PTR [rsp+0xc],0x0
  40f61f:	mov    rdi,QWORD PTR [r14]
  40f622:	mov    esi,0x1
  40f627:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40f62c:	test   rax,rax
  40f62f:	je     407511 <main@@Base+0x6f1>
  40f635:	mov    rbp,rax
  40f638:	mov    QWORD PTR [rsp+0x10],0x0
  40f641:	mov    DWORD PTR [rsp+0x20],0x0
  40f649:	mov    BYTE PTR [rsp+0xc],0x0
  40f64e:	cmp    rbx,r15
  40f651:	je     40f687 <main@@Base+0x8867>
  40f653:	mov    rdi,r14
  40f656:	mov    rsi,rbx
  40f659:	mov    rdx,r15
  40f65c:	lea    rcx,[rsp+0x20]
  40f661:	lea    r8,[rsp+0x10]
  40f666:	call   424130 <flatcc_json_parser_integer@@Base>
  40f66b:	cmp    rax,rbx
  40f66e:	je     40f693 <main@@Base+0x8873>
  40f670:	cmp    DWORD PTR [rsp+0x20],0x0
  40f675:	je     40f69f <main@@Base+0x887f>
  40f677:	mov    rdi,r14
  40f67a:	mov    rsi,rax
  40f67d:	mov    rdx,r15
  40f680:	mov    ecx,0x8
  40f685:	jmp    40f6bf <main@@Base+0x889f>
  40f687:	xor    ecx,ecx
  40f689:	mov    rax,r15
  40f68c:	cmp    rbx,rax
  40f68f:	jne    40f6fc <main@@Base+0x88dc>
  40f691:	jmp    40f6cb <main@@Base+0x88ab>
  40f693:	xor    ecx,ecx
  40f695:	mov    rax,rbx
  40f698:	cmp    rbx,rax
  40f69b:	jne    40f6fc <main@@Base+0x88dc>
  40f69d:	jmp    40f6cb <main@@Base+0x88ab>
  40f69f:	mov    rcx,QWORD PTR [rsp+0x10]
  40f6a4:	cmp    rcx,0x100
  40f6ab:	jb     40f7b1 <main@@Base+0x8991>
  40f6b1:	mov    rdi,r14
  40f6b4:	mov    rsi,rax
  40f6b7:	mov    rdx,r15
  40f6ba:	mov    ecx,0x7
  40f6bf:	call   422690 <flatcc_json_parser_set_error@@Base>
  40f6c4:	xor    ecx,ecx
  40f6c6:	cmp    rbx,rax
  40f6c9:	jne    40f6fc <main@@Base+0x88dc>
  40f6cb:	mov    rdi,r14
  40f6ce:	mov    rsi,rbx
  40f6d1:	mov    rdx,r15
  40f6d4:	lea    rcx,[rip+0x30c45]        # 440320 <__data_start@@Base+0x270>
  40f6db:	lea    r8,[rsp+0xc]
  40f6e0:	call   411b30 <main@@Base+0xad10>
  40f6e5:	cmp    rax,rbx
  40f6e8:	je     40fc91 <main@@Base+0x8e71>
  40f6ee:	cmp    rax,r15
  40f6f1:	je     40fc91 <main@@Base+0x8e71>
  40f6f7:	movzx  ecx,BYTE PTR [rsp+0xc]
  40f6fc:	mov    BYTE PTR [rbp+0x0],cl
  40f6ff:	mov    rcx,r15
  40f702:	sub    rcx,rax
  40f705:	cmp    rcx,0x2
  40f709:	jl     40f725 <main@@Base+0x8905>
  40f70b:	cmp    BYTE PTR [rax],0x20
  40f70e:	jg     40f733 <main@@Base+0x8913>
  40f710:	jne    40f725 <main@@Base+0x8905>
  40f712:	cmp    BYTE PTR [rax+0x1],0x20
  40f716:	jle    40f725 <main@@Base+0x8905>
  40f718:	inc    rax
  40f71b:	cmp    rax,r15
  40f71e:	jne    40f73c <main@@Base+0x891c>
  40f720:	jmp    40fafc <main@@Base+0x8cdc>
  40f725:	mov    rdi,r14
  40f728:	mov    rsi,rax
  40f72b:	mov    rdx,r15
  40f72e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f733:	cmp    rax,r15
  40f736:	je     40fafc <main@@Base+0x8cdc>
  40f73c:	movzx  ecx,BYTE PTR [rax]
  40f73f:	cmp    cl,0x2c
  40f742:	jne    40fb17 <main@@Base+0x8cf7>
  40f748:	lea    rbx,[rax+0x1]
  40f74c:	mov    rcx,r15
  40f74f:	sub    rcx,rbx
  40f752:	cmp    rcx,0x2
  40f756:	jl     40f76b <main@@Base+0x894b>
  40f758:	cmp    BYTE PTR [rbx],0x20
  40f75b:	jg     40f77c <main@@Base+0x895c>
  40f75d:	jne    40f76b <main@@Base+0x894b>
  40f75f:	cmp    BYTE PTR [rax+0x2],0x20
  40f763:	jle    40f76b <main@@Base+0x894b>
  40f765:	add    rax,0x2
  40f769:	jmp    40f779 <main@@Base+0x8959>
  40f76b:	mov    rdi,r14
  40f76e:	mov    rsi,rbx
  40f771:	mov    rdx,r15
  40f774:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f779:	mov    rbx,rax
  40f77c:	cmp    rbx,r15
  40f77f:	je     40fb3b <main@@Base+0x8d1b>
  40f785:	cmp    BYTE PTR [rbx],0x5d
  40f788:	je     40fb4e <main@@Base+0x8d2e>
  40f78e:	mov    BYTE PTR [rsp+0xc],0x0
  40f793:	mov    rdi,QWORD PTR [r14]
  40f796:	mov    esi,0x1
  40f79b:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  40f7a0:	mov    rbp,rax
  40f7a3:	test   rax,rax
  40f7a6:	jne    40f638 <main@@Base+0x8818>
  40f7ac:	jmp    407511 <main@@Base+0x6f1>
  40f7b1:	mov    BYTE PTR [rsp+0xc],cl
  40f7b5:	cmp    rbx,rax
  40f7b8:	jne    40f6fc <main@@Base+0x88dc>
  40f7be:	jmp    40f6cb <main@@Base+0x88ab>
  40f7c3:	mov    rbp,r15
  40f7c6:	jmp    40cba3 <main@@Base+0x5d83>
  40f7cb:	cmp    al,0x5d
  40f7cd:	jne    40faaf <main@@Base+0x8c8f>
  40f7d3:	lea    rbp,[rbx+0x1]
  40f7d7:	mov    rax,r15
  40f7da:	sub    rax,rbp
  40f7dd:	cmp    rax,0x2
  40f7e1:	jl     40f801 <main@@Base+0x89e1>
  40f7e3:	cmp    BYTE PTR [rbp+0x0],0x20
  40f7e7:	jg     40cba3 <main@@Base+0x5d83>
  40f7ed:	jne    40f801 <main@@Base+0x89e1>
  40f7ef:	cmp    BYTE PTR [rbx+0x2],0x20
  40f7f3:	jle    40f801 <main@@Base+0x89e1>
  40f7f5:	add    rbx,0x2
  40f7f9:	mov    rbp,rbx
  40f7fc:	jmp    40cba3 <main@@Base+0x5d83>
  40f801:	mov    rdi,r14
  40f804:	mov    rsi,rbp
  40f807:	mov    rdx,r15
  40f80a:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f80f:	jmp    40cba0 <main@@Base+0x5d80>
  40f814:	mov    rdi,r14
  40f817:	mov    rsi,rbx
  40f81a:	mov    rdx,r15
  40f81d:	mov    ecx,0x9
  40f822:	jmp    40bdef <main@@Base+0x4fcf>
  40f827:	mov    rdi,r14
  40f82a:	mov    rsi,rbx
  40f82d:	mov    rdx,r15
  40f830:	mov    ecx,0x9
  40f835:	jmp    40bf46 <main@@Base+0x5126>
  40f83a:	mov    rdi,r14
  40f83d:	mov    rsi,r15
  40f840:	jmp    40fab5 <main@@Base+0x8c95>
  40f845:	mov    rbp,r15
  40f848:	jmp    40ccb8 <main@@Base+0x5e98>
  40f84d:	mov    rbp,r15
  40f850:	cmp    DWORD PTR [r14+0x1c],0x0
  40f855:	jne    40c9b8 <main@@Base+0x5b98>
  40f85b:	jmp    40fae3 <main@@Base+0x8cc3>
  40f860:	mov    DWORD PTR [rsp+0xc],ecx
  40f864:	mov    ebx,ecx
  40f866:	mov    rbp,rax
  40f869:	cmp    r13,rax
  40f86c:	jne    40f8a1 <main@@Base+0x8a81>
  40f86e:	mov    rdi,r14
  40f871:	mov    rsi,r13
  40f874:	mov    rdx,r15
  40f877:	lea    rcx,[rip+0x30a42]        # 4402c0 <__data_start@@Base+0x210>
  40f87e:	lea    r8,[rsp+0xc]
  40f883:	call   413c80 <main@@Base+0xce60>
  40f888:	mov    rbp,rax
  40f88b:	cmp    rax,r13
  40f88e:	je     40fc63 <main@@Base+0x8e43>
  40f894:	cmp    rbp,r15
  40f897:	je     40fc63 <main@@Base+0x8e43>
  40f89d:	mov    ebx,DWORD PTR [rsp+0xc]
  40f8a1:	test   ebx,ebx
  40f8a3:	jne    40f8b0 <main@@Base+0x8a90>
  40f8a5:	test   BYTE PTR [r14+0x10],0x2
  40f8aa:	je     40de6d <main@@Base+0x704d>
  40f8b0:	mov    rdi,QWORD PTR [r14]
  40f8b3:	mov    edx,0x4
  40f8b8:	mov    esi,0x15
  40f8bd:	mov    ecx,0x4
  40f8c2:	call   41f040 <flatcc_builder_table_add@@Base>
  40f8c7:	test   rax,rax
  40f8ca:	je     40fc63 <main@@Base+0x8e43>
  40f8d0:	mov    DWORD PTR [rax],ebx
  40f8d2:	jmp    40de6d <main@@Base+0x704d>
  40f8d7:	cmp    cl,0x5d
  40f8da:	je     40d9ae <main@@Base+0x6b8e>
  40f8e0:	mov    rdi,r14
  40f8e3:	mov    rsi,rax
  40f8e6:	jmp    40f95c <main@@Base+0x8b3c>
  40f8e8:	cmp    cl,0x7d
  40f8eb:	jne    40fac2 <main@@Base+0x8ca2>
  40f8f1:	lea    rbp,[rax+0x1]
  40f8f5:	mov    rcx,r15
  40f8f8:	sub    rcx,rbp
  40f8fb:	cmp    rcx,0x2
  40f8ff:	jl     40f91c <main@@Base+0x8afc>
  40f901:	cmp    BYTE PTR [rbp+0x0],0x20
  40f905:	jg     40c9ad <main@@Base+0x5b8d>
  40f90b:	jne    40f91c <main@@Base+0x8afc>
  40f90d:	cmp    BYTE PTR [rax+0x2],0x20
  40f911:	jle    40f91c <main@@Base+0x8afc>
  40f913:	add    rax,0x2
  40f917:	jmp    40fad5 <main@@Base+0x8cb5>
  40f91c:	mov    rdi,r14
  40f91f:	mov    rsi,rbp
  40f922:	mov    rdx,r15
  40f925:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f92a:	jmp    40fad5 <main@@Base+0x8cb5>
  40f92f:	mov    rbp,r15
  40f932:	cmp    DWORD PTR [r14+0x1c],0x0
  40f937:	jne    40c6e4 <main@@Base+0x58c4>
  40f93d:	mov    rdi,QWORD PTR [r14]
  40f940:	call   41e6d0 <flatcc_builder_end_table@@Base>
  40f945:	mov    DWORD PTR [rsp+0x1c],eax
  40f949:	test   eax,eax
  40f94b:	jne    40c70b <main@@Base+0x58eb>
  40f951:	jmp    40c6e4 <main@@Base+0x58c4>
  40f956:	mov    rdi,r14
  40f959:	mov    rsi,r15
  40f95c:	mov    rdx,r15
  40f95f:	mov    ecx,0x9
  40f964:	jmp    40ccb0 <main@@Base+0x5e90>
  40f969:	mov    rbp,r15
  40f96c:	jmp    40ce35 <main@@Base+0x6015>
  40f971:	mov    rdi,r14
  40f974:	mov    rsi,r15
  40f977:	jmp    40fac8 <main@@Base+0x8ca8>
  40f97c:	cmp    al,0x7d
  40f97e:	jne    40fb04 <main@@Base+0x8ce4>
  40f984:	lea    rbp,[rbx+0x1]
  40f988:	mov    rax,r15
  40f98b:	sub    rax,rbp
  40f98e:	cmp    rax,0x2
  40f992:	jl     40f9ba <main@@Base+0x8b9a>
  40f994:	cmp    BYTE PTR [rbp+0x0],0x20
  40f998:	jg     40c6d9 <main@@Base+0x58b9>
  40f99e:	jne    40f9ba <main@@Base+0x8b9a>
  40f9a0:	cmp    BYTE PTR [rbx+0x2],0x20
  40f9a4:	jle    40f9ba <main@@Base+0x8b9a>
  40f9a6:	add    rbx,0x2
  40f9aa:	mov    rbp,rbx
  40f9ad:	cmp    DWORD PTR [r14+0x1c],0x0
  40f9b2:	jne    40c6e4 <main@@Base+0x58c4>
  40f9b8:	jmp    40f93d <main@@Base+0x8b1d>
  40f9ba:	mov    rdi,r14
  40f9bd:	mov    rsi,rbp
  40f9c0:	mov    rdx,r15
  40f9c3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40f9c8:	jmp    40c6d6 <main@@Base+0x58b6>
  40f9cd:	lea    rbp,[rbx+0x1]
  40f9d1:	mov    rax,r15
  40f9d4:	sub    rax,rbp
  40f9d7:	cmp    rax,0x2
  40f9db:	jl     40f9fb <main@@Base+0x8bdb>
  40f9dd:	cmp    BYTE PTR [rbp+0x0],0x20
  40f9e1:	jg     40ccb8 <main@@Base+0x5e98>
  40f9e7:	jne    40f9fb <main@@Base+0x8bdb>
  40f9e9:	cmp    BYTE PTR [rbx+0x2],0x20
  40f9ed:	jle    40f9fb <main@@Base+0x8bdb>
  40f9ef:	add    rbx,0x2
  40f9f3:	mov    rbp,rbx
  40f9f6:	jmp    40ccb8 <main@@Base+0x5e98>
  40f9fb:	mov    rdi,r14
  40f9fe:	mov    rsi,rbp
  40fa01:	mov    rdx,r15
  40fa04:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40fa09:	jmp    40ccb5 <main@@Base+0x5e95>
  40fa0e:	cmp    al,0x5d
  40fa10:	jne    40fb28 <main@@Base+0x8d08>
  40fa16:	lea    rbp,[rbx+0x1]
  40fa1a:	mov    rcx,r15
  40fa1d:	sub    rcx,rbp
  40fa20:	cmp    rcx,0x2
  40fa24:	jl     40fa89 <main@@Base+0x8c69>
  40fa26:	cmp    BYTE PTR [rbp+0x0],0x20
  40fa2a:	jg     40ce35 <main@@Base+0x6015>
  40fa30:	jne    40fa89 <main@@Base+0x8c69>
  40fa32:	cmp    BYTE PTR [rbx+0x2],0x20
  40fa36:	jle    40fa89 <main@@Base+0x8c69>
  40fa38:	add    rbx,0x2
  40fa3c:	mov    rbp,rbx
  40fa3f:	jmp    40ce35 <main@@Base+0x6015>
  40fa44:	mov    rdi,r14
  40fa47:	mov    rsi,r15
  40fa4a:	jmp    40fb0a <main@@Base+0x8cea>
  40fa4f:	mov    rdi,r14
  40fa52:	mov    rsi,r15
  40fa55:	jmp    40fb2e <main@@Base+0x8d0e>
  40fa5a:	lea    rbp,[r13+0x1]
  40fa5e:	mov    rcx,r15
  40fa61:	sub    rcx,rbp
  40fa64:	cmp    rcx,0x2
  40fa68:	jl     40fa89 <main@@Base+0x8c69>
  40fa6a:	cmp    BYTE PTR [rbp+0x0],0x20
  40fa6e:	jg     40ce35 <main@@Base+0x6015>
  40fa74:	jne    40fa89 <main@@Base+0x8c69>
  40fa76:	cmp    BYTE PTR [r13+0x2],0x20
  40fa7b:	jle    40fa89 <main@@Base+0x8c69>
  40fa7d:	add    r13,0x2
  40fa81:	mov    rbp,r13
  40fa84:	jmp    40ce35 <main@@Base+0x6015>
  40fa89:	mov    rdi,r14
  40fa8c:	mov    rsi,rbp
  40fa8f:	mov    rdx,r15
  40fa92:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40fa97:	jmp    40ce32 <main@@Base+0x6012>
  40fa9c:	mov    rdi,r14
  40fa9f:	mov    rsi,rbx
  40faa2:	mov    rdx,r15
  40faa5:	mov    ecx,0xa
  40faaa:	jmp    40c33c <main@@Base+0x551c>
  40faaf:	mov    rdi,r14
  40fab2:	mov    rsi,rbx
  40fab5:	mov    rdx,r15
  40fab8:	mov    ecx,0x9
  40fabd:	jmp    40cb9b <main@@Base+0x5d7b>
  40fac2:	mov    rdi,r14
  40fac5:	mov    rsi,rax
  40fac8:	mov    rdx,r15
  40facb:	mov    ecx,0xa
  40fad0:	call   422690 <flatcc_json_parser_set_error@@Base>
  40fad5:	mov    rbp,rax
  40fad8:	cmp    DWORD PTR [r14+0x1c],0x0
  40fadd:	jne    40c9b8 <main@@Base+0x5b98>
  40fae3:	mov    rdi,QWORD PTR [r14]
  40fae6:	call   41e6d0 <flatcc_builder_end_table@@Base>
  40faeb:	mov    DWORD PTR [rsp+0x1c],eax
  40faef:	test   eax,eax
  40faf1:	jne    40c9dc <main@@Base+0x5bbc>
  40faf7:	jmp    40c9b8 <main@@Base+0x5b98>
  40fafc:	mov    rbp,r15
  40faff:	jmp    40fb86 <main@@Base+0x8d66>
  40fb04:	mov    rdi,r14
  40fb07:	mov    rsi,rbx
  40fb0a:	mov    rdx,r15
  40fb0d:	mov    ecx,0xa
  40fb12:	jmp    40c6d1 <main@@Base+0x58b1>
  40fb17:	cmp    cl,0x5d
  40fb1a:	je     40e864 <main@@Base+0x7a44>
  40fb20:	mov    rdi,r14
  40fb23:	mov    rsi,rax
  40fb26:	jmp    40fb41 <main@@Base+0x8d21>
  40fb28:	mov    rdi,r14
  40fb2b:	mov    rsi,rbx
  40fb2e:	mov    rdx,r15
  40fb31:	mov    ecx,0x9
  40fb36:	jmp    40ce2d <main@@Base+0x600d>
  40fb3b:	mov    rdi,r14
  40fb3e:	mov    rsi,r15
  40fb41:	mov    rdx,r15
  40fb44:	mov    ecx,0x9
  40fb49:	jmp    40e0b2 <main@@Base+0x7292>
  40fb4e:	lea    rbp,[rbx+0x1]
  40fb52:	mov    rax,r15
  40fb55:	sub    rax,rbp
  40fb58:	cmp    rax,0x2
  40fb5c:	jl     40fb75 <main@@Base+0x8d55>
  40fb5e:	cmp    BYTE PTR [rbp+0x0],0x20
  40fb62:	jg     40fb86 <main@@Base+0x8d66>
  40fb64:	jne    40fb75 <main@@Base+0x8d55>
  40fb66:	cmp    BYTE PTR [rbx+0x2],0x20
  40fb6a:	jle    40fb75 <main@@Base+0x8d55>
  40fb6c:	add    rbx,0x2
  40fb70:	mov    rbp,rbx
  40fb73:	jmp    40fb86 <main@@Base+0x8d66>
  40fb75:	mov    rdi,r14
  40fb78:	mov    rsi,rbp
  40fb7b:	mov    rdx,r15
  40fb7e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40fb83:	mov    rbp,rax
  40fb86:	mov    rdi,QWORD PTR [r14]
  40fb89:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  40fb8e:	mov    DWORD PTR [rsp+0x1c],eax
  40fb92:	test   eax,eax
  40fb94:	je     40fc63 <main@@Base+0x8e43>
  40fb9a:	mov    rdi,QWORD PTR [r14]
  40fb9d:	mov    esi,0xd
  40fba2:	jmp    40a44d <main@@Base+0x362d>
  40fba7:	mov    rbx,r15
  40fbaa:	jmp    40fc7c <main@@Base+0x8e5c>
  40fbaf:	cmp    al,0x7d
  40fbb1:	jne    40fc4e <main@@Base+0x8e2e>
  40fbb7:	lea    rbx,[rbp+0x1]
  40fbbb:	mov    rax,r15
  40fbbe:	sub    rax,rbx
  40fbc1:	cmp    rax,0x2
  40fbc5:	jl     40fc6b <main@@Base+0x8e4b>
  40fbcb:	cmp    BYTE PTR [rbx],0x20
  40fbce:	jg     40fc7c <main@@Base+0x8e5c>
  40fbd4:	jne    40fc6b <main@@Base+0x8e4b>
  40fbda:	cmp    BYTE PTR [rbp+0x2],0x20
  40fbde:	jle    40fc6b <main@@Base+0x8e4b>
  40fbe4:	mov    rbx,rbp
  40fbe7:	add    rbx,0x2
  40fbeb:	jmp    40fc7c <main@@Base+0x8e5c>
  40fbf0:	mov    rdi,r14
  40fbf3:	mov    rsi,r15
  40fbf6:	mov    rdx,r15
  40fbf9:	mov    ecx,0xa
  40fbfe:	jmp    407594 <main@@Base+0x774>
  40fc03:	lea    rbx,[rsi+0x1]
  40fc07:	mov    rax,r15
  40fc0a:	sub    rax,rbx
  40fc0d:	cmp    rax,0x2
  40fc11:	jl     40fc3b <main@@Base+0x8e1b>
  40fc13:	cmp    BYTE PTR [rbx],0x20
  40fc16:	jg     40759c <main@@Base+0x77c>
  40fc1c:	jne    40fc3b <main@@Base+0x8e1b>
  40fc1e:	cmp    BYTE PTR [rsi+0x2],0x20
  40fc22:	jle    40fc3b <main@@Base+0x8e1b>
  40fc24:	add    rsi,0x2
  40fc28:	mov    rbx,rsi
  40fc2b:	cmp    DWORD PTR [r14+0x1c],0x0
  40fc30:	jne    407511 <main@@Base+0x6f1>
  40fc36:	jmp    4075a7 <main@@Base+0x787>
  40fc3b:	mov    rdi,r14
  40fc3e:	mov    rsi,rbx
  40fc41:	mov    rdx,r15
  40fc44:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40fc49:	jmp    407599 <main@@Base+0x779>
  40fc4e:	mov    rdi,r14
  40fc51:	mov    rsi,rbp
  40fc54:	mov    rdx,r15
  40fc57:	mov    ecx,0xa
  40fc5c:	call   422690 <flatcc_json_parser_set_error@@Base>
  40fc61:	jmp    40fc79 <main@@Base+0x8e59>
  40fc63:	mov    rbx,rbp
  40fc66:	jmp    407511 <main@@Base+0x6f1>
  40fc6b:	mov    rdi,r14
  40fc6e:	mov    rsi,rbx
  40fc71:	mov    rdx,r15
  40fc74:	call   422710 <flatcc_json_parser_space_ext@@Base>
  40fc79:	mov    rbx,rax
  40fc7c:	mov    rbp,QWORD PTR [rsp+0x30]
  40fc81:	cmp    DWORD PTR [r14+0x1c],0x0
  40fc86:	jne    407511 <main@@Base+0x6f1>
  40fc8c:	jmp    4075a7 <main@@Base+0x787>
  40fc91:	mov    rbx,rax
  40fc94:	jmp    407511 <main@@Base+0x6f1>
  40fc99:	mov    rbx,r13
  40fc9c:	jmp    407511 <main@@Base+0x6f1>
  40fca1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fcab:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcb0:	push   r15
  40fcb2:	push   r14
  40fcb4:	push   r12
  40fcb6:	push   rbx
  40fcb7:	push   rax
  40fcb8:	mov    r14,rsi
  40fcbb:	mov    rbx,rdi
  40fcbe:	lea    rcx,[rip+0x259a0]        # 435665 <_IO_stdin_used@@Base+0x3665>
  40fcc5:	lea    r9,[rip+0xafd4]        # 41aca0 <main@@Base+0x13e80>
  40fccc:	xor    edx,edx
  40fcce:	mov    r8d,0x3
  40fcd4:	call   430900 <flatcc_json_printer_struct_field@@Base>
  40fcd9:	lea    rcx,[rip+0x25989]        # 435669 <_IO_stdin_used@@Base+0x3669>
  40fce0:	mov    rdi,rbx
  40fce3:	mov    rsi,r14
  40fce6:	mov    edx,0x1
  40fceb:	mov    r8d,0x4
  40fcf1:	mov    r9d,0x96
  40fcf7:	call   428390 <flatcc_json_printer_int16_field@@Base>
  40fcfc:	lea    rcx,[rip+0x2596b]        # 43566e <_IO_stdin_used@@Base+0x366e>
  40fd03:	mov    rdi,rbx
  40fd06:	mov    rsi,r14
  40fd09:	mov    edx,0x2
  40fd0e:	mov    r8d,0x2
  40fd14:	mov    r9d,0x64
  40fd1a:	call   428390 <flatcc_json_printer_int16_field@@Base>
  40fd1f:	lea    rcx,[rip+0x2594b]        # 435671 <_IO_stdin_used@@Base+0x3671>
  40fd26:	mov    rdi,rbx
  40fd29:	mov    rsi,r14
  40fd2c:	mov    edx,0x3
  40fd31:	mov    r8d,0x4
  40fd37:	call   427ab0 <flatcc_json_printer_string_field@@Base>
  40fd3c:	lea    rcx,[rip+0x25933]        # 435676 <_IO_stdin_used@@Base+0x3676>
  40fd43:	mov    rdi,rbx
  40fd46:	mov    rsi,r14
  40fd49:	mov    edx,0x5
  40fd4e:	mov    r8d,0x9
  40fd54:	call   42a440 <flatcc_json_printer_uint8_vector_field@@Base>
  40fd59:	lea    rax,[rip+0xb030]        # 41ad90 <main@@Base+0x13f70>
  40fd60:	mov    QWORD PTR [rsp],rax
  40fd64:	lea    rcx,[rip+0x25915]        # 435680 <_IO_stdin_used@@Base+0x3680>
  40fd6b:	mov    rdi,rbx
  40fd6e:	mov    rsi,r14
  40fd71:	mov    edx,0x6
  40fd76:	mov    r8d,0x5
  40fd7c:	mov    r9d,0x8
  40fd82:	call   428cc0 <flatcc_json_printer_int8_enum_field@@Base>
  40fd87:	lea    rax,[rip+0xb162]        # 41aef0 <main@@Base+0x140d0>
  40fd8e:	mov    QWORD PTR [rsp],rax
  40fd92:	lea    rcx,[rip+0x25a5f]        # 4357f8 <_IO_stdin_used@@Base+0x37f8>
  40fd99:	lea    r9,[rip+0xb0d0]        # 41ae70 <main@@Base+0x14050>
  40fda0:	mov    rdi,rbx
  40fda3:	mov    rsi,r14
  40fda6:	mov    edx,0x8
  40fdab:	mov    r8d,0x4
  40fdb1:	call   4301a0 <flatcc_json_printer_union_field@@Base>
  40fdb6:	lea    r12,[rip+0xb153]        # 41af10 <main@@Base+0x140f0>
  40fdbd:	mov    QWORD PTR [rsp],r12
  40fdc1:	lea    rcx,[rip+0x258be]        # 435686 <_IO_stdin_used@@Base+0x3686>
  40fdc8:	mov    r9d,0x4
  40fdce:	mov    rdi,rbx
  40fdd1:	mov    rsi,r14
  40fdd4:	mov    edx,0x9
  40fdd9:	mov    r8d,0x5
  40fddf:	call   42f0d0 <flatcc_json_printer_struct_vector_field@@Base>
  40fde4:	lea    rcx,[rip+0x258a1]        # 43568c <_IO_stdin_used@@Base+0x368c>
  40fdeb:	mov    rdi,rbx
  40fdee:	mov    rsi,r14
  40fdf1:	mov    edx,0xa
  40fdf6:	mov    r8d,0x11
  40fdfc:	call   42f590 <flatcc_json_printer_string_vector_field@@Base>
  40fe01:	lea    rcx,[rip+0x25896]        # 43569e <_IO_stdin_used@@Base+0x369e>
  40fe08:	lea    r15,[rip+0xfffffffffffffea1]        # 40fcb0 <main@@Base+0x8e90>
  40fe0f:	mov    rdi,rbx
  40fe12:	mov    rsi,r14
  40fe15:	mov    edx,0xb
  40fe1a:	mov    r8d,0x11
  40fe20:	mov    r9,r15
  40fe23:	call   42f8b0 <flatcc_json_printer_table_vector_field@@Base>
  40fe28:	lea    rcx,[rip+0x25881]        # 4356b0 <_IO_stdin_used@@Base+0x36b0>
  40fe2f:	mov    rdi,rbx
  40fe32:	mov    rsi,r14
  40fe35:	mov    edx,0xc
  40fe3a:	mov    r8d,0x5
  40fe40:	mov    r9,r15
  40fe43:	call   430010 <flatcc_json_printer_table_field@@Base>
  40fe48:	mov    QWORD PTR [rsp],r15
  40fe4c:	lea    rcx,[rip+0x25863]        # 4356b6 <_IO_stdin_used@@Base+0x36b6>
  40fe53:	mov    rdi,rbx
  40fe56:	mov    rsi,r14
  40fe59:	mov    edx,0xd
  40fe5e:	mov    r8d,0x14
  40fe64:	xor    r9d,r9d
  40fe67:	call   431020 <flatcc_json_printer_table_as_nested_root@@Base>
  40fe6c:	lea    rcx,[rip+0x25858]        # 4356cb <_IO_stdin_used@@Base+0x36cb>
  40fe73:	lea    r9,[rip+0xb0e6]        # 41af60 <main@@Base+0x14140>
  40fe7a:	mov    rdi,rbx
  40fe7d:	mov    rsi,r14
  40fe80:	mov    edx,0xe
  40fe85:	mov    r8d,0x9
  40fe8b:	call   430010 <flatcc_json_printer_table_field@@Base>
  40fe90:	lea    rcx,[rip+0x2583e]        # 4356d5 <_IO_stdin_used@@Base+0x36d5>
  40fe97:	mov    rdi,rbx
  40fe9a:	mov    rsi,r14
  40fe9d:	mov    edx,0xf
  40fea2:	mov    r8d,0x8
  40fea8:	mov    r9d,0x1
  40feae:	call   428690 <flatcc_json_printer_bool_field@@Base>
  40feb3:	lea    rcx,[rip+0x25824]        # 4356de <_IO_stdin_used@@Base+0x36de>
  40feba:	mov    rdi,rbx
  40febd:	mov    rsi,r14
  40fec0:	mov    edx,0x10
  40fec5:	mov    r8d,0x10
  40fecb:	xor    r9d,r9d
  40fece:	call   428550 <flatcc_json_printer_int32_field@@Base>
  40fed3:	lea    rcx,[rip+0x25815]        # 4356ef <_IO_stdin_used@@Base+0x36ef>
  40feda:	mov    rdi,rbx
  40fedd:	mov    rsi,r14
  40fee0:	mov    edx,0x11
  40fee5:	mov    r8d,0x10
  40feeb:	xor    r9d,r9d
  40feee:	call   428150 <flatcc_json_printer_uint32_field@@Base>
  40fef3:	lea    rcx,[rip+0x25806]        # 435700 <_IO_stdin_used@@Base+0x3700>
  40fefa:	mov    rdi,rbx
  40fefd:	mov    rsi,r14
  40ff00:	mov    edx,0x12
  40ff05:	mov    r8d,0x10
  40ff0b:	xor    r9d,r9d
  40ff0e:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  40ff13:	lea    rcx,[rip+0x257f7]        # 435711 <_IO_stdin_used@@Base+0x3711>
  40ff1a:	mov    rdi,rbx
  40ff1d:	mov    rsi,r14
  40ff20:	mov    edx,0x13
  40ff25:	mov    r8d,0x10
  40ff2b:	xor    r9d,r9d
  40ff2e:	call   4281e0 <flatcc_json_printer_uint64_field@@Base>
  40ff33:	lea    rcx,[rip+0x257e8]        # 435722 <_IO_stdin_used@@Base+0x3722>
  40ff3a:	mov    rdi,rbx
  40ff3d:	mov    rsi,r14
  40ff40:	mov    edx,0x14
  40ff45:	mov    r8d,0x11
  40ff4b:	xor    r9d,r9d
  40ff4e:	call   428550 <flatcc_json_printer_int32_field@@Base>
  40ff53:	lea    rcx,[rip+0x257da]        # 435734 <_IO_stdin_used@@Base+0x3734>
  40ff5a:	mov    rdi,rbx
  40ff5d:	mov    rsi,r14
  40ff60:	mov    edx,0x15
  40ff65:	mov    r8d,0x11
  40ff6b:	xor    r9d,r9d
  40ff6e:	call   428150 <flatcc_json_printer_uint32_field@@Base>
  40ff73:	lea    rcx,[rip+0x257cc]        # 435746 <_IO_stdin_used@@Base+0x3746>
  40ff7a:	mov    rdi,rbx
  40ff7d:	mov    rsi,r14
  40ff80:	mov    edx,0x16
  40ff85:	mov    r8d,0x11
  40ff8b:	xor    r9d,r9d
  40ff8e:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  40ff93:	lea    rcx,[rip+0x257be]        # 435758 <_IO_stdin_used@@Base+0x3758>
  40ff9a:	mov    rdi,rbx
  40ff9d:	mov    rsi,r14
  40ffa0:	mov    edx,0x17
  40ffa5:	mov    r8d,0x11
  40ffab:	xor    r9d,r9d
  40ffae:	call   4281e0 <flatcc_json_printer_uint64_field@@Base>
  40ffb3:	lea    rcx,[rip+0x257b0]        # 43576a <_IO_stdin_used@@Base+0x376a>
  40ffba:	mov    rdi,rbx
  40ffbd:	mov    rsi,r14
  40ffc0:	mov    edx,0x18
  40ffc5:	mov    r8d,0x10
  40ffcb:	call   42c520 <flatcc_json_printer_bool_vector_field@@Base>
  40ffd0:	lea    rcx,[rip+0x257a4]        # 43577b <_IO_stdin_used@@Base+0x377b>
  40ffd7:	vmovss xmm0,DWORD PTR [rip+0x22025]        # 432004 <_IO_stdin_used@@Base+0x4>
  40ffdf:	mov    rdi,rbx
  40ffe2:	mov    rsi,r14
  40ffe5:	mov    edx,0x19
  40ffea:	mov    r8d,0x5
  40fff0:	call   428740 <flatcc_json_printer_float_field@@Base>
  40fff5:	lea    rcx,[rip+0x25785]        # 435781 <_IO_stdin_used@@Base+0x3781>
  40fffc:	vmovss xmm0,DWORD PTR [rip+0x22004]        # 432008 <_IO_stdin_used@@Base+0x8>
  410004:	mov    rdi,rbx
  410007:	mov    rsi,r14
  41000a:	mov    edx,0x1a
  41000f:	mov    r8d,0x6
  410015:	call   428740 <flatcc_json_printer_float_field@@Base>
  41001a:	lea    rcx,[rip+0x25767]        # 435788 <_IO_stdin_used@@Base+0x3788>
  410021:	vxorps xmm0,xmm0,xmm0
  410025:	mov    rdi,rbx
  410028:	mov    rsi,r14
  41002b:	mov    edx,0x1b
  410030:	mov    r8d,0x6
  410036:	call   428740 <flatcc_json_printer_float_field@@Base>
  41003b:	lea    rcx,[rip+0x2574d]        # 43578f <_IO_stdin_used@@Base+0x378f>
  410042:	mov    rdi,rbx
  410045:	mov    rsi,r14
  410048:	mov    edx,0x1c
  41004d:	mov    r8d,0x12
  410053:	call   42f590 <flatcc_json_printer_string_vector_field@@Base>
  410058:	lea    rax,[rip+0xaf71]        # 41afd0 <main@@Base+0x141b0>
  41005f:	mov    QWORD PTR [rsp],rax
  410063:	lea    rcx,[rip+0x25738]        # 4357a2 <_IO_stdin_used@@Base+0x37a2>
  41006a:	mov    r9d,0x8
  410070:	mov    rdi,rbx
  410073:	mov    rsi,r14
  410076:	mov    edx,0x1d
  41007b:	mov    r8d,0x17
  410081:	call   42f0d0 <flatcc_json_printer_struct_vector_field@@Base>
  410086:	lea    rcx,[rip+0x2572d]        # 4357ba <_IO_stdin_used@@Base+0x37ba>
  41008d:	mov    rdi,rbx
  410090:	mov    rsi,r14
  410093:	mov    edx,0x1e
  410098:	mov    r8d,0x4
  41009e:	call   42a440 <flatcc_json_printer_uint8_vector_field@@Base>
  4100a3:	mov    QWORD PTR [rsp],r12
  4100a7:	lea    rcx,[rip+0x25711]        # 4357bf <_IO_stdin_used@@Base+0x37bf>
  4100ae:	mov    r9d,0x4
  4100b4:	mov    rdi,rbx
  4100b7:	mov    rsi,r14
  4100ba:	mov    edx,0x1f
  4100bf:	mov    r8d,0x5
  4100c5:	call   42f0d0 <flatcc_json_printer_struct_vector_field@@Base>
  4100ca:	lea    rcx,[rip+0x256f4]        # 4357c5 <_IO_stdin_used@@Base+0x37c5>
  4100d1:	mov    rdi,rbx
  4100d4:	mov    rsi,r14
  4100d7:	mov    edx,0x20
  4100dc:	mov    r8d,0xf
  4100e2:	call   42c1b0 <flatcc_json_printer_int64_vector_field@@Base>
  4100e7:	lea    rcx,[rip+0x256e7]        # 4357d5 <_IO_stdin_used@@Base+0x37d5>
  4100ee:	mov    rdi,rbx
  4100f1:	mov    rsi,r14
  4100f4:	mov    edx,0x21
  4100f9:	mov    r8d,0x11
  4100ff:	call   42cbe0 <flatcc_json_printer_double_vector_field@@Base>
  410104:	lea    rcx,[rip+0x256dc]        # 4357e7 <_IO_stdin_used@@Base+0x37e7>
  41010b:	lea    r9,[rip+0xaf0e]        # 41b020 <main@@Base+0x14200>
  410112:	mov    rdi,rbx
  410115:	mov    rsi,r14
  410118:	mov    edx,0x22
  41011d:	mov    r8d,0x15
  410123:	call   430010 <flatcc_json_printer_table_field@@Base>
  410128:	lea    rcx,[rip+0x256ce]        # 4357fd <_IO_stdin_used@@Base+0x37fd>
  41012f:	lea    r9,[rip+0xaefa]        # 41b030 <main@@Base+0x14210>
  410136:	mov    rdi,rbx
  410139:	mov    rsi,r14
  41013c:	mov    edx,0x23
  410141:	mov    r8d,0xa
  410147:	add    rsp,0x8
  41014b:	pop    rbx
  41014c:	pop    r12
  41014e:	pop    r14
  410150:	pop    r15
  410152:	jmp    430010 <flatcc_json_printer_table_field@@Base>
  410157:	nop    WORD PTR [rax+rax*1+0x0]
  410160:	push   rbx
  410161:	mov    rbx,rdi
  410164:	mov    edx,0x20
  410169:	xor    esi,esi
  41016b:	mov    ecx,0x10
  410170:	call   420c20 <flatcc_verify_field@@Base>
  410175:	test   eax,eax
  410177:	jne    410582 <main@@Base+0x9762>
  41017d:	mov    edx,0x2
  410182:	mov    rdi,rbx
  410185:	mov    esi,0x2
  41018a:	mov    ecx,0x2
  41018f:	call   420c20 <flatcc_verify_field@@Base>
  410194:	test   eax,eax
  410196:	jne    410582 <main@@Base+0x9762>
  41019c:	mov    edx,0x2
  4101a1:	mov    rdi,rbx
  4101a4:	mov    esi,0x1
  4101a9:	mov    ecx,0x2
  4101ae:	call   420c20 <flatcc_verify_field@@Base>
  4101b3:	test   eax,eax
  4101b5:	jne    410582 <main@@Base+0x9762>
  4101bb:	mov    rdi,rbx
  4101be:	mov    esi,0x3
  4101c3:	mov    edx,0x1
  4101c8:	call   420c80 <flatcc_verify_string_field@@Base>
  4101cd:	test   eax,eax
  4101cf:	jne    410582 <main@@Base+0x9762>
  4101d5:	mov    edx,0x1
  4101da:	mov    rdi,rbx
  4101dd:	mov    esi,0x6
  4101e2:	mov    ecx,0x1
  4101e7:	call   420c20 <flatcc_verify_field@@Base>
  4101ec:	test   eax,eax
  4101ee:	jne    410582 <main@@Base+0x9762>
  4101f4:	mov    ecx,0x1
  4101f9:	mov    r9d,0xffffffff
  4101ff:	mov    rdi,rbx
  410202:	mov    esi,0x5
  410207:	xor    edx,edx
  410209:	mov    r8d,0x1
  41020f:	call   420d30 <flatcc_verify_vector_field@@Base>
  410214:	test   eax,eax
  410216:	jne    410582 <main@@Base+0x9762>
  41021c:	lea    rcx,[rip+0xffffffffffffff3d]        # 410160 <main@@Base+0x9340>
  410223:	mov    rdi,rbx
  410226:	mov    esi,0xb
  41022b:	xor    edx,edx
  41022d:	call   4210a0 <flatcc_verify_table_vector_field@@Base>
  410232:	test   eax,eax
  410234:	jne    410582 <main@@Base+0x9762>
  41023a:	mov    rdi,rbx
  41023d:	mov    esi,0xa
  410242:	xor    edx,edx
  410244:	call   420e00 <flatcc_verify_string_vector_field@@Base>
  410249:	test   eax,eax
  41024b:	jne    410582 <main@@Base+0x9762>
  410251:	mov    rdi,rbx
  410254:	mov    esi,0x1c
  410259:	xor    edx,edx
  41025b:	call   420e00 <flatcc_verify_string_vector_field@@Base>
  410260:	test   eax,eax
  410262:	jne    410582 <main@@Base+0x9762>
  410268:	mov    ecx,0x1
  41026d:	mov    r9d,0xffffffff
  410273:	mov    rdi,rbx
  410276:	mov    esi,0x18
  41027b:	xor    edx,edx
  41027d:	mov    r8d,0x1
  410283:	call   420d30 <flatcc_verify_vector_field@@Base>
  410288:	test   eax,eax
  41028a:	jne    410582 <main@@Base+0x9762>
  410290:	mov    ecx,0x8
  410295:	mov    r9d,0x1fffffff
  41029b:	mov    rdi,rbx
  41029e:	mov    esi,0x1d
  4102a3:	xor    edx,edx
  4102a5:	mov    r8d,0x4
  4102ab:	call   420d30 <flatcc_verify_vector_field@@Base>
  4102b0:	test   eax,eax
  4102b2:	jne    410582 <main@@Base+0x9762>
  4102b8:	lea    rcx,[rip+0xfffffffffffffea1]        # 410160 <main@@Base+0x9340>
  4102bf:	mov    rdi,rbx
  4102c2:	mov    esi,0xc
  4102c7:	xor    edx,edx
  4102c9:	call   420f60 <flatcc_verify_table_field@@Base>
  4102ce:	test   eax,eax
  4102d0:	jne    410582 <main@@Base+0x9762>
  4102d6:	lea    rcx,[rip+0xb373]        # 41b650 <main@@Base+0x14830>
  4102dd:	mov    rdi,rbx
  4102e0:	mov    esi,0x8
  4102e5:	xor    edx,edx
  4102e7:	call   421e10 <flatcc_verify_union_field@@Base>
  4102ec:	test   eax,eax
  4102ee:	jne    410582 <main@@Base+0x9762>
  4102f4:	mov    ecx,0x4
  4102f9:	mov    r9d,0x3fffffff
  4102ff:	mov    rdi,rbx
  410302:	mov    esi,0x9
  410307:	xor    edx,edx
  410309:	mov    r8d,0x2
  41030f:	call   420d30 <flatcc_verify_vector_field@@Base>
  410314:	test   eax,eax
  410316:	jne    410582 <main@@Base+0x9762>
  41031c:	mov    ecx,0x4
  410321:	mov    r9d,0x3fffffff
  410327:	mov    rdi,rbx
  41032a:	mov    esi,0x1f
  41032f:	xor    edx,edx
  410331:	mov    r8d,0x2
  410337:	call   420d30 <flatcc_verify_vector_field@@Base>
  41033c:	test   eax,eax
  41033e:	jne    410582 <main@@Base+0x9762>
  410344:	lea    r9,[rip+0xfffffffffffffe15]        # 410160 <main@@Base+0x9340>
  41034b:	mov    rdi,rbx
  41034e:	mov    esi,0xd
  410353:	xor    edx,edx
  410355:	xor    ecx,ecx
  410357:	mov    r8d,0x1
  41035d:	call   421b30 <flatcc_verify_table_as_nested_root@@Base>
  410362:	test   eax,eax
  410364:	jne    410582 <main@@Base+0x9762>
  41036a:	lea    rcx,[rip+0xb2ff]        # 41b670 <main@@Base+0x14850>
  410371:	mov    rdi,rbx
  410374:	mov    esi,0xe
  410379:	xor    edx,edx
  41037b:	call   420f60 <flatcc_verify_table_field@@Base>
  410380:	test   eax,eax
  410382:	jne    410582 <main@@Base+0x9762>
  410388:	mov    edx,0x1
  41038d:	mov    rdi,rbx
  410390:	mov    esi,0xf
  410395:	mov    ecx,0x1
  41039a:	call   420c20 <flatcc_verify_field@@Base>
  41039f:	test   eax,eax
  4103a1:	jne    410582 <main@@Base+0x9762>
  4103a7:	mov    edx,0x4
  4103ac:	mov    rdi,rbx
  4103af:	mov    esi,0x10
  4103b4:	mov    ecx,0x4
  4103b9:	call   420c20 <flatcc_verify_field@@Base>
  4103be:	test   eax,eax
  4103c0:	jne    410582 <main@@Base+0x9762>
  4103c6:	mov    edx,0x4
  4103cb:	mov    rdi,rbx
  4103ce:	mov    esi,0x11
  4103d3:	mov    ecx,0x4
  4103d8:	call   420c20 <flatcc_verify_field@@Base>
  4103dd:	test   eax,eax
  4103df:	jne    410582 <main@@Base+0x9762>
  4103e5:	mov    edx,0x8
  4103ea:	mov    rdi,rbx
  4103ed:	mov    esi,0x12
  4103f2:	mov    ecx,0x8
  4103f7:	call   420c20 <flatcc_verify_field@@Base>
  4103fc:	test   eax,eax
  4103fe:	jne    410582 <main@@Base+0x9762>
  410404:	mov    edx,0x8
  410409:	mov    rdi,rbx
  41040c:	mov    esi,0x13
  410411:	mov    ecx,0x8
  410416:	call   420c20 <flatcc_verify_field@@Base>
  41041b:	test   eax,eax
  41041d:	jne    410582 <main@@Base+0x9762>
  410423:	mov    edx,0x4
  410428:	mov    rdi,rbx
  41042b:	mov    esi,0x14
  410430:	mov    ecx,0x4
  410435:	call   420c20 <flatcc_verify_field@@Base>
  41043a:	test   eax,eax
  41043c:	jne    410582 <main@@Base+0x9762>
  410442:	mov    edx,0x4
  410447:	mov    rdi,rbx
  41044a:	mov    esi,0x15
  41044f:	mov    ecx,0x4
  410454:	call   420c20 <flatcc_verify_field@@Base>
  410459:	test   eax,eax
  41045b:	jne    410582 <main@@Base+0x9762>
  410461:	mov    edx,0x8
  410466:	mov    rdi,rbx
  410469:	mov    esi,0x16
  41046e:	mov    ecx,0x8
  410473:	call   420c20 <flatcc_verify_field@@Base>
  410478:	test   eax,eax
  41047a:	jne    410582 <main@@Base+0x9762>
  410480:	mov    edx,0x8
  410485:	mov    rdi,rbx
  410488:	mov    esi,0x17
  41048d:	mov    ecx,0x8
  410492:	call   420c20 <flatcc_verify_field@@Base>
  410497:	test   eax,eax
  410499:	jne    410582 <main@@Base+0x9762>
  41049f:	mov    edx,0x4
  4104a4:	mov    rdi,rbx
  4104a7:	mov    esi,0x19
  4104ac:	mov    ecx,0x4
  4104b1:	call   420c20 <flatcc_verify_field@@Base>
  4104b6:	test   eax,eax
  4104b8:	jne    410582 <main@@Base+0x9762>
  4104be:	mov    edx,0x4
  4104c3:	mov    rdi,rbx
  4104c6:	mov    esi,0x1a
  4104cb:	mov    ecx,0x4
  4104d0:	call   420c20 <flatcc_verify_field@@Base>
  4104d5:	test   eax,eax
  4104d7:	jne    410582 <main@@Base+0x9762>
  4104dd:	mov    edx,0x4
  4104e2:	mov    rdi,rbx
  4104e5:	mov    esi,0x1b
  4104ea:	mov    ecx,0x4
  4104ef:	call   420c20 <flatcc_verify_field@@Base>
  4104f4:	test   eax,eax
  4104f6:	jne    410582 <main@@Base+0x9762>
  4104fc:	mov    ecx,0x1
  410501:	mov    r9d,0xffffffff
  410507:	mov    rdi,rbx
  41050a:	mov    esi,0x1e
  41050f:	xor    edx,edx
  410511:	mov    r8d,0x1
  410517:	call   420d30 <flatcc_verify_vector_field@@Base>
  41051c:	test   eax,eax
  41051e:	jne    410582 <main@@Base+0x9762>
  410520:	mov    ecx,0x8
  410525:	mov    r9d,0x1fffffff
  41052b:	mov    rdi,rbx
  41052e:	mov    esi,0x20
  410533:	xor    edx,edx
  410535:	mov    r8d,0x8
  41053b:	call   420d30 <flatcc_verify_vector_field@@Base>
  410540:	test   eax,eax
  410542:	jne    410582 <main@@Base+0x9762>
  410544:	mov    ecx,0x8
  410549:	mov    r9d,0x1fffffff
  41054f:	mov    rdi,rbx
  410552:	mov    esi,0x21
  410557:	xor    edx,edx
  410559:	mov    r8d,0x8
  41055f:	call   420d30 <flatcc_verify_vector_field@@Base>
  410564:	test   eax,eax
  410566:	jne    410582 <main@@Base+0x9762>
  410568:	lea    rcx,[rip+0xb151]        # 41b6c0 <main@@Base+0x148a0>
  41056f:	mov    rdi,rbx
  410572:	mov    esi,0x22
  410577:	xor    edx,edx
  410579:	call   420f60 <flatcc_verify_table_field@@Base>
  41057e:	test   eax,eax
  410580:	je     410584 <main@@Base+0x9764>
  410582:	pop    rbx
  410583:	ret    
  410584:	lea    rcx,[rip+0xb145]        # 41b6d0 <main@@Base+0x148b0>
  41058b:	mov    rdi,rbx
  41058e:	mov    esi,0x23
  410593:	xor    edx,edx
  410595:	pop    rbx
  410596:	jmp    420f60 <flatcc_verify_table_field@@Base>
  41059b:	nop    DWORD PTR [rax+rax*1+0x0]
  4105a0:	push   r15
  4105a2:	push   r14
  4105a4:	push   rbx
  4105a5:	mov    r15,r8
  4105a8:	mov    r14,rcx
  4105ab:	mov    rbx,rsi
  4105ae:	mov    rcx,rdx
  4105b1:	sub    rcx,rsi
  4105b4:	cmp    rcx,0x8
  4105b8:	jb     4105c1 <main@@Base+0x97a1>
  4105ba:	movbe  rcx,QWORD PTR [rbx]
  4105bf:	jmp    41062f <main@@Base+0x980f>
  4105c1:	dec    rcx
  4105c4:	cmp    rcx,0x6
  4105c8:	ja     4106c9 <main@@Base+0x98a9>
  4105ce:	xor    eax,eax
  4105d0:	lea    rsi,[rip+0x21cdd]        # 4322b4 <_IO_stdin_used@@Base+0x2b4>
  4105d7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4105db:	add    rcx,rsi
  4105de:	jmp    rcx
  4105e0:	movsx  rax,BYTE PTR [rbx+0x6]
  4105e5:	shl    rax,0x8
  4105e9:	movsx  rcx,BYTE PTR [rbx+0x5]
  4105ee:	shl    rcx,0x10
  4105f2:	or     rax,rcx
  4105f5:	movsx  rcx,BYTE PTR [rbx+0x4]
  4105fa:	shl    rcx,0x18
  4105fe:	or     rax,rcx
  410601:	movsx  rcx,BYTE PTR [rbx+0x3]
  410606:	shl    rcx,0x20
  41060a:	or     rax,rcx
  41060d:	movsx  rcx,BYTE PTR [rbx+0x2]
  410612:	shl    rcx,0x28
  410616:	or     rax,rcx
  410619:	movsx  rcx,BYTE PTR [rbx+0x1]
  41061e:	shl    rcx,0x30
  410622:	or     rax,rcx
  410625:	movzx  ecx,BYTE PTR [rbx]
  410628:	shl    rcx,0x38
  41062c:	or     rcx,rax
  41062f:	movabs rax,0x477265656e000000
  410639:	cmp    rcx,rax
  41063c:	jae    410669 <main@@Base+0x9849>
  41063e:	shr    rcx,0x20
  410642:	cmp    rcx,0x426c7565
  410649:	jne    4106c9 <main@@Base+0x98a9>
  41064b:	mov    rsi,rbx
  41064e:	mov    ecx,0x4
  410653:	mov    r8,r9
  410656:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41065b:	cmp    rax,rbx
  41065e:	je     4106c9 <main@@Base+0x98a9>
  410660:	mov    QWORD PTR [r15],0x8
  410667:	jmp    4106bf <main@@Base+0x989f>
  410669:	mov    rsi,rcx
  41066c:	shr    rsi,0x28
  410670:	cmp    rsi,0x526564
  410677:	jne    410697 <main@@Base+0x9877>
  410679:	mov    rsi,rbx
  41067c:	mov    ecx,0x3
  410681:	mov    r8,r9
  410684:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  410689:	cmp    rax,rbx
  41068c:	je     4106c9 <main@@Base+0x98a9>
  41068e:	mov    QWORD PTR [r15],0x1
  410695:	jmp    4106bf <main@@Base+0x989f>
  410697:	and    rcx,0xffffffffff000000
  41069e:	cmp    rcx,rax
  4106a1:	jne    4106c9 <main@@Base+0x98a9>
  4106a3:	mov    rsi,rbx
  4106a6:	mov    ecx,0x5
  4106ab:	mov    r8,r9
  4106ae:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4106b3:	cmp    rax,rbx
  4106b6:	je     4106c9 <main@@Base+0x98a9>
  4106b8:	mov    QWORD PTR [r15],0x2
  4106bf:	mov    DWORD PTR [r14],0x0
  4106c6:	mov    rbx,rax
  4106c9:	mov    rax,rbx
  4106cc:	pop    rbx
  4106cd:	pop    r14
  4106cf:	pop    r15
  4106d1:	ret    
  4106d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106dc:	nop    DWORD PTR [rax+0x0]
  4106e0:	push   r15
  4106e2:	push   r14
  4106e4:	push   r12
  4106e6:	push   rbx
  4106e7:	push   rax
  4106e8:	mov    r14,r8
  4106eb:	mov    r12,rcx
  4106ee:	mov    r10,rdx
  4106f1:	sub    r10,rsi
  4106f4:	cmp    r10,0x8
  4106f8:	jb     410701 <main@@Base+0x98e1>
  4106fa:	movbe  rbx,QWORD PTR [rsi]
  4106ff:	jmp    410770 <main@@Base+0x9950>
  410701:	lea    rbx,[r10-0x1]
  410705:	cmp    rbx,0x6
  410709:	ja     410b09 <main@@Base+0x9ce9>
  41070f:	xor    ecx,ecx
  410711:	lea    r8,[rip+0x21bb8]        # 4322d0 <_IO_stdin_used@@Base+0x2d0>
  410718:	movsxd rbx,DWORD PTR [r8+rbx*4]
  41071c:	add    rbx,r8
  41071f:	jmp    rbx
  410721:	movsx  rcx,BYTE PTR [rsi+0x6]
  410726:	shl    rcx,0x8
  41072a:	movsx  rbx,BYTE PTR [rsi+0x5]
  41072f:	shl    rbx,0x10
  410733:	or     rcx,rbx
  410736:	movsx  rbx,BYTE PTR [rsi+0x4]
  41073b:	shl    rbx,0x18
  41073f:	or     rcx,rbx
  410742:	movsx  rbx,BYTE PTR [rsi+0x3]
  410747:	shl    rbx,0x20
  41074b:	or     rcx,rbx
  41074e:	movsx  rbx,BYTE PTR [rsi+0x2]
  410753:	shl    rbx,0x28
  410757:	or     rcx,rbx
  41075a:	movsx  rbx,BYTE PTR [rsi+0x1]
  41075f:	shl    rbx,0x30
  410763:	or     rcx,rbx
  410766:	movzx  ebx,BYTE PTR [rsi]
  410769:	shl    rbx,0x38
  41076d:	or     rbx,rcx
  410770:	movabs rcx,0x6865785f656e756d
  41077a:	cmp    rbx,rcx
  41077d:	jae    4107ea <main@@Base+0x99ca>
  41077f:	movabs r8,0x436f6c6f72000000
  410789:	movabs rcx,0xffffff0000000000
  410793:	and    rcx,rbx
  410796:	cmp    rbx,r8
  410799:	jae    41083e <main@@Base+0x9a1e>
  41079f:	cmp    r10,0x4
  4107a3:	jl     410b09 <main@@Base+0x9ce9>
  4107a9:	movabs rax,0x416e790000000000
  4107b3:	cmp    rcx,rax
  4107b6:	jne    410b09 <main@@Base+0x9ce9>
  4107bc:	lea    rax,[rsi+0x4]
  4107c0:	cmp    BYTE PTR [rsi+0x3],0x2e
  4107c4:	cmovne rax,rsi
  4107c8:	cmp    rax,rsi
  4107cb:	je     410b09 <main@@Base+0x9ce9>
  4107d1:	mov    rsi,rax
  4107d4:	mov    rcx,r12
  4107d7:	mov    r8,r14
  4107da:	add    rsp,0x8
  4107de:	pop    rbx
  4107df:	pop    r12
  4107e1:	pop    r14
  4107e3:	pop    r15
  4107e5:	jmp    4132e0 <main@@Base+0xc4c0>
  4107ea:	movabs r8,0x696e745f656e756d
  4107f4:	cmp    rbx,r8
  4107f7:	jae    410889 <main@@Base+0x9a69>
  4107fd:	cmp    r10,0x9
  410801:	jl     410b09 <main@@Base+0x9ce9>
  410807:	cmp    rbx,rcx
  41080a:	jne    410b09 <main@@Base+0x9ce9>
  410810:	lea    rax,[rsi+0x9]
  410814:	cmp    BYTE PTR [rsi+0x8],0x2e
  410818:	cmovne rax,rsi
  41081c:	cmp    rax,rsi
  41081f:	je     410b09 <main@@Base+0x9ce9>
  410825:	mov    rsi,rax
  410828:	mov    rcx,r12
  41082b:	mov    r8,r14
  41082e:	add    rsp,0x8
  410832:	pop    rbx
  410833:	pop    r12
  410835:	pop    r14
  410837:	pop    r15
  410839:	jmp    414360 <main@@Base+0xd540>
  41083e:	movabs rax,0x466f6f0000000000
  410848:	cmp    rcx,rax
  41084b:	jne    4108dd <main@@Base+0x9abd>
  410851:	cmp    r10,0x4
  410855:	jl     410b09 <main@@Base+0x9ce9>
  41085b:	lea    rax,[rsi+0x4]
  41085f:	cmp    BYTE PTR [rsi+0x3],0x2e
  410863:	cmovne rax,rsi
  410867:	cmp    rax,rsi
  41086a:	je     410b09 <main@@Base+0x9ce9>
  410870:	mov    rsi,rax
  410873:	mov    rcx,r12
  410876:	mov    r8,r14
  410879:	add    rsp,0x8
  41087d:	pop    rbx
  41087e:	pop    r12
  410880:	pop    r14
  410882:	pop    r15
  410884:	jmp    414120 <main@@Base+0xd300>
  410889:	movabs rax,0x6e65675f656e756c
  410893:	cmp    rbx,rax
  410896:	ja     410925 <main@@Base+0x9b05>
  41089c:	cmp    r10,0x9
  4108a0:	jl     410b09 <main@@Base+0x9ce9>
  4108a6:	cmp    rbx,r8
  4108a9:	jne    410b09 <main@@Base+0x9ce9>
  4108af:	lea    rax,[rsi+0x9]
  4108b3:	cmp    BYTE PTR [rsi+0x8],0x2e
  4108b7:	cmovne rax,rsi
  4108bb:	cmp    rax,rsi
  4108be:	je     410b09 <main@@Base+0x9ce9>
  4108c4:	mov    rsi,rax
  4108c7:	mov    rcx,r12
  4108ca:	mov    r8,r14
  4108cd:	add    rsp,0x8
  4108d1:	pop    rbx
  4108d2:	pop    r12
  4108d4:	pop    r14
  4108d6:	pop    r15
  4108d8:	jmp    4144c0 <main@@Base+0xd6a0>
  4108dd:	cmp    r10,0x6
  4108e1:	jl     410b09 <main@@Base+0x9ce9>
  4108e7:	and    rbx,0xffffffffff000000
  4108ee:	cmp    rbx,r8
  4108f1:	jne    410b09 <main@@Base+0x9ce9>
  4108f7:	lea    rax,[rsi+0x6]
  4108fb:	cmp    BYTE PTR [rsi+0x5],0x2e
  4108ff:	cmovne rax,rsi
  410903:	cmp    rax,rsi
  410906:	je     410b09 <main@@Base+0x9ce9>
  41090c:	mov    rsi,rax
  41090f:	mov    rcx,r12
  410912:	mov    r8,r14
  410915:	add    rsp,0x8
  410919:	pop    rbx
  41091a:	pop    r12
  41091c:	pop    r14
  41091e:	pop    r15
  410920:	jmp    4105a0 <main@@Base+0x9780>
  410925:	movabs rax,0x6e6f74656d707479
  41092f:	cmp    rbx,rax
  410932:	je     41097f <main@@Base+0x9b5f>
  410934:	movabs rax,0x6e65675f656e756d
  41093e:	cmp    rbx,rax
  410941:	jne    410b09 <main@@Base+0x9ce9>
  410947:	cmp    r10,0x9
  41094b:	jl     410b09 <main@@Base+0x9ce9>
  410951:	lea    rax,[rsi+0x9]
  410955:	cmp    BYTE PTR [rsi+0x8],0x2e
  410959:	cmovne rax,rsi
  41095d:	cmp    rax,rsi
  410960:	je     410b09 <main@@Base+0x9ce9>
  410966:	mov    rsi,rax
  410969:	mov    rcx,r12
  41096c:	mov    r8,r14
  41096f:	add    rsp,0x8
  410973:	pop    rbx
  410974:	pop    r12
  410976:	pop    r14
  410978:	pop    r15
  41097a:	jmp    414660 <main@@Base+0xd840>
  41097f:	lea    r8,[rsi+0x8]
  410983:	mov    rcx,rdx
  410986:	sub    rcx,r8
  410989:	cmp    rcx,0x8
  41098d:	jb     41099f <main@@Base+0x9b7f>
  41098f:	movbe  rbx,QWORD PTR [r8]
  410994:	cmp    rcx,0x5
  410998:	jge    410a19 <main@@Base+0x9bf9>
  41099a:	jmp    410b09 <main@@Base+0x9ce9>
  41099f:	lea    rbx,[rcx-0x1]
  4109a3:	cmp    rbx,0x6
  4109a7:	ja     410b09 <main@@Base+0x9ce9>
  4109ad:	xor    eax,eax
  4109af:	lea    r10,[rip+0x21936]        # 4322ec <_IO_stdin_used@@Base+0x2ec>
  4109b6:	movsxd rbx,DWORD PTR [r10+rbx*4]
  4109ba:	add    rbx,r10
  4109bd:	jmp    rbx
  4109bf:	movsx  rax,BYTE PTR [rsi+0xe]
  4109c4:	shl    rax,0x8
  4109c8:	movsx  rbx,BYTE PTR [rsi+0xd]
  4109cd:	shl    rbx,0x10
  4109d1:	or     rax,rbx
  4109d4:	movsx  rbx,BYTE PTR [rsi+0xc]
  4109d9:	shl    rbx,0x18
  4109dd:	or     rax,rbx
  4109e0:	movsx  rbx,BYTE PTR [rsi+0xb]
  4109e5:	shl    rbx,0x20
  4109e9:	or     rax,rbx
  4109ec:	movsx  rbx,BYTE PTR [rsi+0xa]
  4109f1:	shl    rbx,0x28
  4109f5:	or     rax,rbx
  4109f8:	movsx  rbx,BYTE PTR [rsi+0x9]
  4109fd:	shl    rbx,0x30
  410a01:	or     rax,rbx
  410a04:	movzx  ebx,BYTE PTR [r8]
  410a08:	shl    rbx,0x38
  410a0c:	or     rbx,rax
  410a0f:	cmp    rcx,0x5
  410a13:	jl     410b09 <main@@Base+0x9ce9>
  410a19:	movabs rax,0xffffffff00000000
  410a23:	and    rbx,rax
  410a26:	movabs rax,0x656e756d00000000
  410a30:	cmp    rbx,rax
  410a33:	jne    410b09 <main@@Base+0x9ce9>
  410a39:	lea    r15,[rsi+0xd]
  410a3d:	cmp    BYTE PTR [rsi+0xc],0x2e
  410a41:	cmovne r15,r8
  410a45:	cmp    r15,r8
  410a48:	je     410b09 <main@@Base+0x9ce9>
  410a4e:	mov    rcx,rdx
  410a51:	sub    rcx,r15
  410a54:	cmp    rcx,0x8
  410a58:	jb     410a61 <main@@Base+0x9c41>
  410a5a:	movbe  rcx,QWORD PTR [r15]
  410a5f:	jmp    410ad0 <main@@Base+0x9cb0>
  410a61:	dec    rcx
  410a64:	cmp    rcx,0x6
  410a68:	ja     410b06 <main@@Base+0x9ce6>
  410a6e:	xor    eax,eax
  410a70:	lea    rsi,[rip+0x21891]        # 432308 <_IO_stdin_used@@Base+0x308>
  410a77:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  410a7b:	add    rcx,rsi
  410a7e:	jmp    rcx
  410a80:	movsx  rax,BYTE PTR [r15+0x6]
  410a85:	shl    rax,0x8
  410a89:	movsx  rcx,BYTE PTR [r15+0x5]
  410a8e:	shl    rcx,0x10
  410a92:	or     rax,rcx
  410a95:	movsx  rcx,BYTE PTR [r15+0x4]
  410a9a:	shl    rcx,0x18
  410a9e:	or     rax,rcx
  410aa1:	movsx  rcx,BYTE PTR [r15+0x3]
  410aa6:	shl    rcx,0x20
  410aaa:	or     rax,rcx
  410aad:	movsx  rcx,BYTE PTR [r15+0x2]
  410ab2:	shl    rcx,0x28
  410ab6:	or     rax,rcx
  410ab9:	movsx  rcx,BYTE PTR [r15+0x1]
  410abe:	shl    rcx,0x30
  410ac2:	or     rax,rcx
  410ac5:	movzx  ecx,BYTE PTR [r15]
  410ac9:	shl    rcx,0x38
  410acd:	or     rcx,rax
  410ad0:	shr    rcx,0x38
  410ad4:	cmp    rcx,0x78
  410ad8:	jne    410b06 <main@@Base+0x9ce6>
  410ada:	mov    rsi,r15
  410add:	mov    ecx,0x1
  410ae2:	mov    r8,r9
  410ae5:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  410aea:	mov    rsi,r15
  410aed:	cmp    rax,r15
  410af0:	je     410b09 <main@@Base+0x9ce9>
  410af2:	mov    QWORD PTR [r14],0x0
  410af9:	mov    DWORD PTR [r12],0x0
  410b01:	mov    rsi,rax
  410b04:	jmp    410b09 <main@@Base+0x9ce9>
  410b06:	mov    rsi,r15
  410b09:	mov    rax,rsi
  410b0c:	add    rsp,0x8
  410b10:	pop    rbx
  410b11:	pop    r12
  410b13:	pop    r14
  410b15:	pop    r15
  410b17:	ret    
  410b18:	nop    DWORD PTR [rax+rax*1+0x0]
  410b20:	push   rbp
  410b21:	push   r15
  410b23:	push   r14
  410b25:	push   r13
  410b27:	push   r12
  410b29:	push   rbx
  410b2a:	push   rax
  410b2b:	mov    r12,r9
  410b2e:	mov    r14,r8
  410b31:	mov    r15,rcx
  410b34:	mov    rbx,rdx
  410b37:	mov    r13,rdi
  410b3a:	mov    rcx,rdx
  410b3d:	sub    rcx,rsi
  410b40:	cmp    rcx,0x8
  410b44:	jb     410b4d <main@@Base+0x9d2d>
  410b46:	movbe  rcx,QWORD PTR [rsi]
  410b4b:	jmp    410bbb <main@@Base+0x9d9b>
  410b4d:	dec    rcx
  410b50:	cmp    rcx,0x6
  410b54:	ja     4118c0 <main@@Base+0xaaa0>
  410b5a:	xor    eax,eax
  410b5c:	lea    rdx,[rip+0x217c1]        # 432324 <_IO_stdin_used@@Base+0x324>
  410b63:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  410b67:	add    rcx,rdx
  410b6a:	jmp    rcx
  410b6c:	movsx  rax,BYTE PTR [rsi+0x6]
  410b71:	shl    rax,0x8
  410b75:	movsx  rcx,BYTE PTR [rsi+0x5]
  410b7a:	shl    rcx,0x10
  410b7e:	or     rax,rcx
  410b81:	movsx  rcx,BYTE PTR [rsi+0x4]
  410b86:	shl    rcx,0x18
  410b8a:	or     rax,rcx
  410b8d:	movsx  rcx,BYTE PTR [rsi+0x3]
  410b92:	shl    rcx,0x20
  410b96:	or     rax,rcx
  410b99:	movsx  rcx,BYTE PTR [rsi+0x2]
  410b9e:	shl    rcx,0x28
  410ba2:	or     rax,rcx
  410ba5:	movsx  rcx,BYTE PTR [rsi+0x1]
  410baa:	shl    rcx,0x30
  410bae:	or     rax,rcx
  410bb1:	movzx  ecx,BYTE PTR [rsi]
  410bb4:	shl    rcx,0x38
  410bb8:	or     rcx,rax
  410bbb:	movabs rax,0x4d7947616d652e44
  410bc5:	cmp    rcx,rax
  410bc8:	ja     410bf7 <main@@Base+0x9dd7>
  410bca:	movabs rax,0x46616e746173792e
  410bd4:	cmp    rcx,rax
  410bd7:	jne    4118c0 <main@@Base+0xaaa0>
  410bdd:	lea    rax,[rsi+0x8]
  410be1:	mov    rdx,rbx
  410be4:	sub    rdx,rax
  410be7:	cmp    rdx,0x8
  410beb:	jb     410c55 <main@@Base+0x9e35>
  410bed:	movbe  rax,QWORD PTR [rax]
  410bf2:	jmp    410cc3 <main@@Base+0x9ea3>
  410bf7:	movabs rax,0x4d7947616d652e4f
  410c01:	cmp    rcx,rax
  410c04:	je     410c37 <main@@Base+0x9e17>
  410c06:	movabs rax,0x4d7947616d652e45
  410c10:	cmp    rcx,rax
  410c13:	jne    4118c0 <main@@Base+0xaaa0>
  410c19:	lea    rax,[rsi+0x8]
  410c1d:	mov    rdx,rbx
  410c20:	sub    rdx,rax
  410c23:	cmp    rdx,0x8
  410c27:	jb     410cfe <main@@Base+0x9ede>
  410c2d:	movbe  rax,QWORD PTR [rax]
  410c32:	jmp    410d6c <main@@Base+0x9f4c>
  410c37:	lea    rax,[rsi+0x8]
  410c3b:	mov    rdx,rbx
  410c3e:	sub    rdx,rax
  410c41:	cmp    rdx,0x8
  410c45:	jb     410dc1 <main@@Base+0x9fa1>
  410c4b:	movbe  rax,QWORD PTR [rax]
  410c50:	jmp    410e2f <main@@Base+0xa00f>
  410c55:	dec    rdx
  410c58:	cmp    rdx,0x6
  410c5c:	ja     4118c0 <main@@Base+0xaaa0>
  410c62:	xor    ecx,ecx
  410c64:	lea    rdi,[rip+0x21841]        # 4324ac <_IO_stdin_used@@Base+0x4ac>
  410c6b:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  410c6f:	add    rdx,rdi
  410c72:	jmp    rdx
  410c74:	movsx  rcx,BYTE PTR [rsi+0xe]
  410c79:	shl    rcx,0x8
  410c7d:	movsx  rdx,BYTE PTR [rsi+0xd]
  410c82:	shl    rdx,0x10
  410c86:	or     rcx,rdx
  410c89:	movsx  rdx,BYTE PTR [rsi+0xc]
  410c8e:	shl    rdx,0x18
  410c92:	or     rcx,rdx
  410c95:	movsx  rdx,BYTE PTR [rsi+0xb]
  410c9a:	shl    rdx,0x20
  410c9e:	or     rcx,rdx
  410ca1:	movsx  rdx,BYTE PTR [rsi+0xa]
  410ca6:	shl    rdx,0x28
  410caa:	or     rcx,rdx
  410cad:	movsx  rdx,BYTE PTR [rsi+0x9]
  410cb2:	shl    rdx,0x30
  410cb6:	or     rcx,rdx
  410cb9:	movzx  eax,BYTE PTR [rax]
  410cbc:	shl    rax,0x38
  410cc0:	or     rax,rcx
  410cc3:	movabs rcx,0x4368617261637465
  410ccd:	cmp    rax,rcx
  410cd0:	jne    4118c0 <main@@Base+0xaaa0>
  410cd6:	lea    rcx,[rsi+0x10]
  410cda:	mov    rax,rbx
  410cdd:	sub    rax,rcx
  410ce0:	cmp    rax,0x8
  410ce4:	jb     410edf <main@@Base+0xa0bf>
  410cea:	movbe  rdi,QWORD PTR [rcx]
  410cef:	cmp    rax,0x2
  410cf3:	jge    410f59 <main@@Base+0xa139>
  410cf9:	jmp    4118c0 <main@@Base+0xaaa0>
  410cfe:	dec    rdx
  410d01:	cmp    rdx,0x6
  410d05:	ja     4118c0 <main@@Base+0xaaa0>
  410d0b:	xor    ecx,ecx
  410d0d:	lea    rdi,[rip+0x216d4]        # 4323e8 <_IO_stdin_used@@Base+0x3e8>
  410d14:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  410d18:	add    rdx,rdi
  410d1b:	jmp    rdx
  410d1d:	movsx  rcx,BYTE PTR [rsi+0xe]
  410d22:	shl    rcx,0x8
  410d26:	movsx  rdx,BYTE PTR [rsi+0xd]
  410d2b:	shl    rdx,0x10
  410d2f:	or     rcx,rdx
  410d32:	movsx  rdx,BYTE PTR [rsi+0xc]
  410d37:	shl    rdx,0x18
  410d3b:	or     rcx,rdx
  410d3e:	movsx  rdx,BYTE PTR [rsi+0xb]
  410d43:	shl    rdx,0x20
  410d47:	or     rcx,rdx
  410d4a:	movsx  rdx,BYTE PTR [rsi+0xa]
  410d4f:	shl    rdx,0x28
  410d53:	or     rcx,rdx
  410d56:	movsx  rdx,BYTE PTR [rsi+0x9]
  410d5b:	shl    rdx,0x30
  410d5f:	or     rcx,rdx
  410d62:	movzx  eax,BYTE PTR [rax]
  410d65:	shl    rax,0x38
  410d69:	or     rax,rcx
  410d6c:	movabs rcx,0x78616d706c652e68
  410d76:	cmp    rax,rcx
  410d79:	jae    410e60 <main@@Base+0xa040>
  410d7f:	lea    rdx,[rcx-0x25]
  410d83:	cmp    rax,rdx
  410d86:	jae    410fb3 <main@@Base+0xa193>
  410d8c:	add    rcx,0xffffffffffffffd9
  410d90:	cmp    rax,rcx
  410d93:	jne    4118c0 <main@@Base+0xaaa0>
  410d99:	lea    rcx,[rsi+0x10]
  410d9d:	mov    rax,rbx
  410da0:	sub    rax,rcx
  410da3:	cmp    rax,0x8
  410da7:	jb     411277 <main@@Base+0xa457>
  410dad:	movbe  rdi,QWORD PTR [rcx]
  410db2:	cmp    rax,0x3
  410db6:	jge    4112f1 <main@@Base+0xa4d1>
  410dbc:	jmp    4118c0 <main@@Base+0xaaa0>
  410dc1:	dec    rdx
  410dc4:	cmp    rdx,0x6
  410dc8:	ja     4118c0 <main@@Base+0xaaa0>
  410dce:	xor    ecx,ecx
  410dd0:	lea    rdi,[rip+0x21569]        # 432340 <_IO_stdin_used@@Base+0x340>
  410dd7:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  410ddb:	add    rdx,rdi
  410dde:	jmp    rdx
  410de0:	movsx  rcx,BYTE PTR [rsi+0xe]
  410de5:	shl    rcx,0x8
  410de9:	movsx  rdx,BYTE PTR [rsi+0xd]
  410dee:	shl    rdx,0x10
  410df2:	or     rcx,rdx
  410df5:	movsx  rdx,BYTE PTR [rsi+0xc]
  410dfa:	shl    rdx,0x18
  410dfe:	or     rcx,rdx
  410e01:	movsx  rdx,BYTE PTR [rsi+0xb]
  410e06:	shl    rdx,0x20
  410e0a:	or     rcx,rdx
  410e0d:	movsx  rdx,BYTE PTR [rsi+0xa]
  410e12:	shl    rdx,0x28
  410e16:	or     rcx,rdx
  410e19:	movsx  rdx,BYTE PTR [rsi+0x9]
  410e1e:	shl    rdx,0x30
  410e22:	or     rcx,rdx
  410e25:	movzx  eax,BYTE PTR [rax]
  410e28:	shl    rax,0x38
  410e2c:	or     rax,rcx
  410e2f:	movabs rcx,0x746865724e616d65
  410e39:	cmp    rax,rcx
  410e3c:	jne    4118c0 <main@@Base+0xaaa0>
  410e42:	lea    rax,[rsi+0x10]
  410e46:	mov    rdx,rbx
  410e49:	sub    rdx,rax
  410e4c:	cmp    rdx,0x8
  410e50:	jb     411001 <main@@Base+0xa1e1>
  410e56:	movbe  rax,QWORD PTR [rax]
  410e5b:	jmp    41106f <main@@Base+0xa24f>
  410e60:	jne    4110a0 <main@@Base+0xa280>
  410e66:	lea    rcx,[rsi+0x10]
  410e6a:	mov    rax,rbx
  410e6d:	sub    rax,rcx
  410e70:	cmp    rax,0x8
  410e74:	jb     4118c0 <main@@Base+0xaaa0>
  410e7a:	cmp    rax,0x8
  410e7e:	jl     4118c0 <main@@Base+0xaaa0>
  410e84:	mov    al,0x38
  410e86:	bzhi   rax,QWORD PTR [rcx],rax
  410e8b:	movabs rdx,0x6d756e655f746e
  410e95:	add    rdx,0x3f7
  410e9c:	cmp    rax,rdx
  410e9f:	jne    4118c0 <main@@Base+0xaaa0>
  410ea5:	lea    rax,[rsi+0x18]
  410ea9:	cmp    BYTE PTR [rsi+0x17],0x2e
  410ead:	cmovne rax,rcx
  410eb1:	cmp    rax,rcx
  410eb4:	je     4118c0 <main@@Base+0xaaa0>
  410eba:	mov    rdi,r13
  410ebd:	mov    rsi,rax
  410ec0:	mov    rdx,rbx
  410ec3:	mov    rcx,r15
  410ec6:	mov    r8,r14
  410ec9:	mov    r9,r12
  410ecc:	add    rsp,0x8
  410ed0:	pop    rbx
  410ed1:	pop    r12
  410ed3:	pop    r13
  410ed5:	pop    r14
  410ed7:	pop    r15
  410ed9:	pop    rbp
  410eda:	jmp    414360 <main@@Base+0xd540>
  410edf:	lea    rdi,[rax-0x1]
  410ee3:	cmp    rdi,0x6
  410ee7:	ja     4118c0 <main@@Base+0xaaa0>
  410eed:	xor    edx,edx
  410eef:	lea    rbp,[rip+0x215d2]        # 4324c8 <_IO_stdin_used@@Base+0x4c8>
  410ef6:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  410efb:	add    rdi,rbp
  410efe:	jmp    rdi
  410f00:	movsx  rdx,BYTE PTR [rsi+0x16]
  410f05:	shl    rdx,0x8
  410f09:	movsx  rdi,BYTE PTR [rsi+0x15]
  410f0e:	shl    rdi,0x10
  410f12:	or     rdx,rdi
  410f15:	movsx  rdi,BYTE PTR [rsi+0x14]
  410f1a:	shl    rdi,0x18
  410f1e:	or     rdx,rdi
  410f21:	movsx  rdi,BYTE PTR [rsi+0x13]
  410f26:	shl    rdi,0x20
  410f2a:	or     rdx,rdi
  410f2d:	movsx  rdi,BYTE PTR [rsi+0x12]
  410f32:	shl    rdi,0x28
  410f36:	or     rdx,rdi
  410f39:	movsx  rdi,BYTE PTR [rsi+0x11]
  410f3e:	shl    rdi,0x30
  410f42:	or     rdx,rdi
  410f45:	movzx  edi,BYTE PTR [rcx]
  410f48:	shl    rdi,0x38
  410f4c:	or     rdi,rdx
  410f4f:	cmp    rax,0x2
  410f53:	jl     4118c0 <main@@Base+0xaaa0>
  410f59:	movabs rax,0xff00000000000000
  410f63:	and    rdi,rax
  410f66:	movabs rax,0x7200000000000000
  410f70:	cmp    rdi,rax
  410f73:	jne    4118c0 <main@@Base+0xaaa0>
  410f79:	lea    rax,[rsi+0x12]
  410f7d:	cmp    BYTE PTR [rsi+0x11],0x2e
  410f81:	cmovne rax,rcx
  410f85:	cmp    rax,rcx
  410f88:	je     4118c0 <main@@Base+0xaaa0>
  410f8e:	mov    rdi,r13
  410f91:	mov    rsi,rax
  410f94:	mov    rdx,rbx
  410f97:	mov    rcx,r15
  410f9a:	mov    r8,r14
  410f9d:	mov    r9,r12
  410fa0:	add    rsp,0x8
  410fa4:	pop    rbx
  410fa5:	pop    r12
  410fa7:	pop    r13
  410fa9:	pop    r14
  410fab:	pop    r15
  410fad:	pop    rbp
  410fae:	jmp    4147b0 <main@@Base+0xd990>
  410fb3:	movabs rcx,0x78616d706c652e46
  410fbd:	cmp    rax,rcx
  410fc0:	je     41124f <main@@Base+0xa42f>
  410fc6:	movabs rcx,0x78616d706c652e43
  410fd0:	cmp    rax,rcx
  410fd3:	jne    4118c0 <main@@Base+0xaaa0>
  410fd9:	lea    rcx,[rsi+0x10]
  410fdd:	mov    rax,rbx
  410fe0:	sub    rax,rcx
  410fe3:	cmp    rax,0x8
  410fe7:	jb     411414 <main@@Base+0xa5f4>
  410fed:	movbe  rdi,QWORD PTR [rcx]
  410ff2:	cmp    rax,0x5
  410ff6:	jge    41148e <main@@Base+0xa66e>
  410ffc:	jmp    4118c0 <main@@Base+0xaaa0>
  411001:	dec    rdx
  411004:	cmp    rdx,0x6
  411008:	ja     4118c0 <main@@Base+0xaaa0>
  41100e:	xor    ecx,ecx
  411010:	lea    rdi,[rip+0x21345]        # 43235c <_IO_stdin_used@@Base+0x35c>
  411017:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  41101b:	add    rdx,rdi
  41101e:	jmp    rdx
  411020:	movsx  rcx,BYTE PTR [rsi+0x16]
  411025:	shl    rcx,0x8
  411029:	movsx  rdx,BYTE PTR [rsi+0x15]
  41102e:	shl    rdx,0x10
  411032:	or     rcx,rdx
  411035:	movsx  rdx,BYTE PTR [rsi+0x14]
  41103a:	shl    rdx,0x18
  41103e:	or     rcx,rdx
  411041:	movsx  rdx,BYTE PTR [rsi+0x13]
  411046:	shl    rdx,0x20
  41104a:	or     rcx,rdx
  41104d:	movsx  rdx,BYTE PTR [rsi+0x12]
  411052:	shl    rdx,0x28
  411056:	or     rcx,rdx
  411059:	movsx  rdx,BYTE PTR [rsi+0x11]
  41105e:	shl    rdx,0x30
  411062:	or     rcx,rdx
  411065:	movzx  eax,BYTE PTR [rax]
  411068:	shl    rax,0x38
  41106c:	or     rax,rcx
  41106f:	movabs rcx,0x53706163652e4672
  411079:	cmp    rax,rcx
  41107c:	jne    4118c0 <main@@Base+0xaaa0>
  411082:	lea    rax,[rsi+0x18]
  411086:	mov    rdx,rbx
  411089:	sub    rdx,rax
  41108c:	cmp    rdx,0x8
  411090:	jb     4111a6 <main@@Base+0xa386>
  411096:	movbe  rax,QWORD PTR [rax]
  41109b:	jmp    411214 <main@@Base+0xa3f4>
  4110a0:	lea    rdx,[rcx+0x6]
  4110a4:	cmp    rax,rdx
  4110a7:	jae    411127 <main@@Base+0xa307>
  4110a9:	inc    rcx
  4110ac:	cmp    rax,rcx
  4110af:	jne    4118c0 <main@@Base+0xaaa0>
  4110b5:	lea    rcx,[rsi+0x10]
  4110b9:	mov    rax,rbx
  4110bc:	sub    rax,rcx
  4110bf:	cmp    rax,0x8
  4110c3:	jb     4118c0 <main@@Base+0xaaa0>
  4110c9:	cmp    rax,0x8
  4110cd:	jl     4118c0 <main@@Base+0xaaa0>
  4110d3:	mov    al,0x38
  4110d5:	bzhi   rax,QWORD PTR [rcx],rax
  4110da:	movabs rdx,0x6d756e655f746e
  4110e4:	cmp    rax,rdx
  4110e7:	jne    4118c0 <main@@Base+0xaaa0>
  4110ed:	lea    rax,[rsi+0x18]
  4110f1:	cmp    BYTE PTR [rsi+0x17],0x2e
  4110f5:	cmovne rax,rcx
  4110f9:	cmp    rax,rcx
  4110fc:	je     4118c0 <main@@Base+0xaaa0>
  411102:	mov    rdi,r13
  411105:	mov    rsi,rax
  411108:	mov    rdx,rbx
  41110b:	mov    rcx,r15
  41110e:	mov    r8,r14
  411111:	mov    r9,r12
  411114:	add    rsp,0x8
  411118:	pop    rbx
  411119:	pop    r12
  41111b:	pop    r13
  41111d:	pop    r14
  41111f:	pop    r15
  411121:	pop    rbp
  411122:	jmp    4144c0 <main@@Base+0xd6a0>
  411127:	jne    4118c0 <main@@Base+0xaaa0>
  41112d:	lea    rcx,[rsi+0x10]
  411131:	mov    rdi,rbx
  411134:	sub    rdi,rcx
  411137:	cmp    rdi,0x7
  41113b:	jbe    4115bc <main@@Base+0xa79c>
  411141:	movbe  rdx,QWORD PTR [rcx]
  411146:	cmp    rdi,0x8
  41114a:	jl     41162a <main@@Base+0xa80a>
  411150:	mov    rax,rdx
  411153:	and    rax,0xffffffffffffff00
  411159:	movabs rdi,0x65675f656e756d00
  411163:	cmp    rax,rdi
  411166:	jne    41162a <main@@Base+0xa80a>
  41116c:	lea    rax,[rsi+0x18]
  411170:	cmp    BYTE PTR [rsi+0x17],0x2e
  411174:	cmovne rax,rcx
  411178:	cmp    rax,rcx
  41117b:	je     41162a <main@@Base+0xa80a>
  411181:	mov    rdi,r13
  411184:	mov    rsi,rax
  411187:	mov    rdx,rbx
  41118a:	mov    rcx,r15
  41118d:	mov    r8,r14
  411190:	mov    r9,r12
  411193:	add    rsp,0x8
  411197:	pop    rbx
  411198:	pop    r12
  41119a:	pop    r13
  41119c:	pop    r14
  41119e:	pop    r15
  4111a0:	pop    rbp
  4111a1:	jmp    414660 <main@@Base+0xd840>
  4111a6:	dec    rdx
  4111a9:	cmp    rdx,0x6
  4111ad:	ja     4118c0 <main@@Base+0xaaa0>
  4111b3:	xor    ecx,ecx
  4111b5:	lea    rdi,[rip+0x211bc]        # 432378 <_IO_stdin_used@@Base+0x378>
  4111bc:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4111c0:	add    rdx,rdi
  4111c3:	jmp    rdx
  4111c5:	movsx  rcx,BYTE PTR [rsi+0x1e]
  4111ca:	shl    rcx,0x8
  4111ce:	movsx  rdx,BYTE PTR [rsi+0x1d]
  4111d3:	shl    rdx,0x10
  4111d7:	or     rcx,rdx
  4111da:	movsx  rdx,BYTE PTR [rsi+0x1c]
  4111df:	shl    rdx,0x18
  4111e3:	or     rcx,rdx
  4111e6:	movsx  rdx,BYTE PTR [rsi+0x1b]
  4111eb:	shl    rdx,0x20
  4111ef:	or     rcx,rdx
  4111f2:	movsx  rdx,BYTE PTR [rsi+0x1a]
  4111f7:	shl    rdx,0x28
  4111fb:	or     rcx,rdx
  4111fe:	movsx  rdx,BYTE PTR [rsi+0x19]
  411203:	shl    rdx,0x30
  411207:	or     rcx,rdx
  41120a:	movzx  eax,BYTE PTR [rax]
  41120d:	shl    rax,0x38
  411211:	or     rax,rcx
  411214:	movabs rcx,0x6f6d496e636c7564
  41121e:	cmp    rax,rcx
  411221:	jne    4118c0 <main@@Base+0xaaa0>
  411227:	lea    rax,[rsi+0x20]
  41122b:	mov    rcx,rbx
  41122e:	sub    rcx,rax
  411231:	cmp    rcx,0x8
  411235:	jb     41134b <main@@Base+0xa52b>
  41123b:	movbe  rdi,QWORD PTR [rax]
  411240:	cmp    rcx,0x2
  411244:	jge    4113c5 <main@@Base+0xa5a5>
  41124a:	jmp    4118c0 <main@@Base+0xaaa0>
  41124f:	lea    rcx,[rsi+0x10]
  411253:	mov    rax,rbx
  411256:	sub    rax,rcx
  411259:	cmp    rax,0x8
  41125d:	jb     4114e8 <main@@Base+0xa6c8>
  411263:	movbe  rdi,QWORD PTR [rcx]
  411268:	cmp    rax,0x3
  41126c:	jge    411562 <main@@Base+0xa742>
  411272:	jmp    4118c0 <main@@Base+0xaaa0>
  411277:	lea    rdi,[rax-0x1]
  41127b:	cmp    rdi,0x6
  41127f:	ja     4118c0 <main@@Base+0xaaa0>
  411285:	xor    edx,edx
  411287:	lea    rbp,[rip+0x21202]        # 432490 <_IO_stdin_used@@Base+0x490>
  41128e:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411293:	add    rdi,rbp
  411296:	jmp    rdi
  411298:	movsx  rdx,BYTE PTR [rsi+0x16]
  41129d:	shl    rdx,0x8
  4112a1:	movsx  rdi,BYTE PTR [rsi+0x15]
  4112a6:	shl    rdi,0x10
  4112aa:	or     rdx,rdi
  4112ad:	movsx  rdi,BYTE PTR [rsi+0x14]
  4112b2:	shl    rdi,0x18
  4112b6:	or     rdx,rdi
  4112b9:	movsx  rdi,BYTE PTR [rsi+0x13]
  4112be:	shl    rdi,0x20
  4112c2:	or     rdx,rdi
  4112c5:	movsx  rdi,BYTE PTR [rsi+0x12]
  4112ca:	shl    rdi,0x28
  4112ce:	or     rdx,rdi
  4112d1:	movsx  rdi,BYTE PTR [rsi+0x11]
  4112d6:	shl    rdi,0x30
  4112da:	or     rdx,rdi
  4112dd:	movzx  edi,BYTE PTR [rcx]
  4112e0:	shl    rdi,0x38
  4112e4:	or     rdi,rdx
  4112e7:	cmp    rax,0x3
  4112eb:	jl     4118c0 <main@@Base+0xaaa0>
  4112f1:	movabs rax,0xffff000000000000
  4112fb:	and    rdi,rax
  4112fe:	movabs rax,0x6e79000000000000
  411308:	cmp    rdi,rax
  41130b:	jne    4118c0 <main@@Base+0xaaa0>
  411311:	lea    rax,[rsi+0x13]
  411315:	cmp    BYTE PTR [rsi+0x12],0x2e
  411319:	cmovne rax,rcx
  41131d:	cmp    rax,rcx
  411320:	je     4118c0 <main@@Base+0xaaa0>
  411326:	mov    rdi,r13
  411329:	mov    rsi,rax
  41132c:	mov    rdx,rbx
  41132f:	mov    rcx,r15
  411332:	mov    r8,r14
  411335:	mov    r9,r12
  411338:	add    rsp,0x8
  41133c:	pop    rbx
  41133d:	pop    r12
  41133f:	pop    r13
  411341:	pop    r14
  411343:	pop    r15
  411345:	pop    rbp
  411346:	jmp    4132e0 <main@@Base+0xc4c0>
  41134b:	lea    rdi,[rcx-0x1]
  41134f:	cmp    rdi,0x6
  411353:	ja     4118c0 <main@@Base+0xaaa0>
  411359:	xor    edx,edx
  41135b:	lea    rbp,[rip+0x21032]        # 432394 <_IO_stdin_used@@Base+0x394>
  411362:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411367:	add    rdi,rbp
  41136a:	jmp    rdi
  41136c:	movsx  rdx,BYTE PTR [rsi+0x26]
  411371:	shl    rdx,0x8
  411375:	movsx  rdi,BYTE PTR [rsi+0x25]
  41137a:	shl    rdi,0x10
  41137e:	or     rdx,rdi
  411381:	movsx  rdi,BYTE PTR [rsi+0x24]
  411386:	shl    rdi,0x18
  41138a:	or     rdx,rdi
  41138d:	movsx  rdi,BYTE PTR [rsi+0x23]
  411392:	shl    rdi,0x20
  411396:	or     rdx,rdi
  411399:	movsx  rdi,BYTE PTR [rsi+0x22]
  41139e:	shl    rdi,0x28
  4113a2:	or     rdx,rdi
  4113a5:	movsx  rdi,BYTE PTR [rsi+0x21]
  4113aa:	shl    rdi,0x30
  4113ae:	or     rdx,rdi
  4113b1:	movzx  edi,BYTE PTR [rax]
  4113b4:	shl    rdi,0x38
  4113b8:	or     rdi,rdx
  4113bb:	cmp    rcx,0x2
  4113bf:	jl     4118c0 <main@@Base+0xaaa0>
  4113c5:	movabs rcx,0xff00000000000000
  4113cf:	and    rdi,rcx
  4113d2:	movabs rcx,0x6500000000000000
  4113dc:	cmp    rdi,rcx
  4113df:	jne    4118c0 <main@@Base+0xaaa0>
  4113e5:	lea    r8,[rsi+0x22]
  4113e9:	cmp    BYTE PTR [rsi+0x21],0x2e
  4113ed:	cmovne r8,rax
  4113f1:	cmp    r8,rax
  4113f4:	je     4118c0 <main@@Base+0xaaa0>
  4113fa:	mov    rcx,rbx
  4113fd:	sub    rcx,r8
  411400:	cmp    rcx,0x8
  411404:	jb     411665 <main@@Base+0xa845>
  41140a:	movbe  rbp,QWORD PTR [r8]
  41140f:	jmp    4116d4 <main@@Base+0xa8b4>
  411414:	lea    rdi,[rax-0x1]
  411418:	cmp    rdi,0x6
  41141c:	ja     4118c0 <main@@Base+0xaaa0>
  411422:	xor    edx,edx
  411424:	lea    rbp,[rip+0x21049]        # 432474 <_IO_stdin_used@@Base+0x474>
  41142b:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411430:	add    rdi,rbp
  411433:	jmp    rdi
  411435:	movsx  rdx,BYTE PTR [rsi+0x16]
  41143a:	shl    rdx,0x8
  41143e:	movsx  rdi,BYTE PTR [rsi+0x15]
  411443:	shl    rdi,0x10
  411447:	or     rdx,rdi
  41144a:	movsx  rdi,BYTE PTR [rsi+0x14]
  41144f:	shl    rdi,0x18
  411453:	or     rdx,rdi
  411456:	movsx  rdi,BYTE PTR [rsi+0x13]
  41145b:	shl    rdi,0x20
  41145f:	or     rdx,rdi
  411462:	movsx  rdi,BYTE PTR [rsi+0x12]
  411467:	shl    rdi,0x28
  41146b:	or     rdx,rdi
  41146e:	movsx  rdi,BYTE PTR [rsi+0x11]
  411473:	shl    rdi,0x30
  411477:	or     rdx,rdi
  41147a:	movzx  edi,BYTE PTR [rcx]
  41147d:	shl    rdi,0x38
  411481:	or     rdi,rdx
  411484:	cmp    rax,0x5
  411488:	jl     4118c0 <main@@Base+0xaaa0>
  41148e:	movabs rax,0xffffffff00000000
  411498:	and    rdi,rax
  41149b:	movabs rax,0x6f6c6f7200000000
  4114a5:	cmp    rdi,rax
  4114a8:	jne    4118c0 <main@@Base+0xaaa0>
  4114ae:	lea    rax,[rsi+0x15]
  4114b2:	cmp    BYTE PTR [rsi+0x14],0x2e
  4114b6:	cmovne rax,rcx
  4114ba:	cmp    rax,rcx
  4114bd:	je     4118c0 <main@@Base+0xaaa0>
  4114c3:	mov    rdi,r13
  4114c6:	mov    rsi,rax
  4114c9:	mov    rdx,rbx
  4114cc:	mov    rcx,r15
  4114cf:	mov    r8,r14
  4114d2:	mov    r9,r12
  4114d5:	add    rsp,0x8
  4114d9:	pop    rbx
  4114da:	pop    r12
  4114dc:	pop    r13
  4114de:	pop    r14
  4114e0:	pop    r15
  4114e2:	pop    rbp
  4114e3:	jmp    4105a0 <main@@Base+0x9780>
  4114e8:	lea    rdi,[rax-0x1]
  4114ec:	cmp    rdi,0x6
  4114f0:	ja     4118c0 <main@@Base+0xaaa0>
  4114f6:	xor    edx,edx
  4114f8:	lea    rbp,[rip+0x20f59]        # 432458 <_IO_stdin_used@@Base+0x458>
  4114ff:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411504:	add    rdi,rbp
  411507:	jmp    rdi
  411509:	movsx  rdx,BYTE PTR [rsi+0x16]
  41150e:	shl    rdx,0x8
  411512:	movsx  rdi,BYTE PTR [rsi+0x15]
  411517:	shl    rdi,0x10
  41151b:	or     rdx,rdi
  41151e:	movsx  rdi,BYTE PTR [rsi+0x14]
  411523:	shl    rdi,0x18
  411527:	or     rdx,rdi
  41152a:	movsx  rdi,BYTE PTR [rsi+0x13]
  41152f:	shl    rdi,0x20
  411533:	or     rdx,rdi
  411536:	movsx  rdi,BYTE PTR [rsi+0x12]
  41153b:	shl    rdi,0x28
  41153f:	or     rdx,rdi
  411542:	movsx  rdi,BYTE PTR [rsi+0x11]
  411547:	shl    rdi,0x30
  41154b:	or     rdx,rdi
  41154e:	movzx  edi,BYTE PTR [rcx]
  411551:	shl    rdi,0x38
  411555:	or     rdi,rdx
  411558:	cmp    rax,0x3
  41155c:	jl     4118c0 <main@@Base+0xaaa0>
  411562:	movabs rax,0xffff000000000000
  41156c:	and    rdi,rax
  41156f:	movabs rax,0x6f6f000000000000
  411579:	cmp    rdi,rax
  41157c:	jne    4118c0 <main@@Base+0xaaa0>
  411582:	lea    rax,[rsi+0x13]
  411586:	cmp    BYTE PTR [rsi+0x12],0x2e
  41158a:	cmovne rax,rcx
  41158e:	cmp    rax,rcx
  411591:	je     4118c0 <main@@Base+0xaaa0>
  411597:	mov    rdi,r13
  41159a:	mov    rsi,rax
  41159d:	mov    rdx,rbx
  4115a0:	mov    rcx,r15
  4115a3:	mov    r8,r14
  4115a6:	mov    r9,r12
  4115a9:	add    rsp,0x8
  4115ad:	pop    rbx
  4115ae:	pop    r12
  4115b0:	pop    r13
  4115b2:	pop    r14
  4115b4:	pop    r15
  4115b6:	pop    rbp
  4115b7:	jmp    414120 <main@@Base+0xd300>
  4115bc:	dec    rdi
  4115bf:	cmp    rdi,0x6
  4115c3:	ja     4118c0 <main@@Base+0xaaa0>
  4115c9:	xor    eax,eax
  4115cb:	lea    rdx,[rip+0x20e32]        # 432404 <_IO_stdin_used@@Base+0x404>
  4115d2:	movsxd rdi,DWORD PTR [rdx+rdi*4]
  4115d6:	add    rdi,rdx
  4115d9:	jmp    rdi
  4115db:	movsx  rax,BYTE PTR [rsi+0x16]
  4115e0:	shl    rax,0x8
  4115e4:	movsx  rdx,BYTE PTR [rsi+0x15]
  4115e9:	shl    rdx,0x10
  4115ed:	or     rax,rdx
  4115f0:	movsx  rdx,BYTE PTR [rsi+0x14]
  4115f5:	shl    rdx,0x18
  4115f9:	or     rax,rdx
  4115fc:	movsx  rdx,BYTE PTR [rsi+0x13]
  411601:	shl    rdx,0x20
  411605:	or     rax,rdx
  411608:	movsx  rdx,BYTE PTR [rsi+0x12]
  41160d:	shl    rdx,0x28
  411611:	or     rax,rdx
  411614:	movsx  rdx,BYTE PTR [rsi+0x11]
  411619:	shl    rdx,0x30
  41161d:	or     rax,rdx
  411620:	movzx  edx,BYTE PTR [rcx]
  411623:	shl    rdx,0x38
  411627:	or     rdx,rax
  41162a:	movabs rax,0x6f74656d70747965
  411634:	cmp    rdx,rax
  411637:	jne    4118c0 <main@@Base+0xaaa0>
  41163d:	lea    rax,[rsi+0x18]
  411641:	mov    rcx,rbx
  411644:	sub    rcx,rax
  411647:	cmp    rcx,0x8
  41164b:	jb     411745 <main@@Base+0xa925>
  411651:	movbe  rdi,QWORD PTR [rax]
  411656:	cmp    rcx,0x4
  41165a:	jge    4117bf <main@@Base+0xa99f>
  411660:	jmp    4118c0 <main@@Base+0xaaa0>
  411665:	dec    rcx
  411668:	cmp    rcx,0x6
  41166c:	ja     4118bd <main@@Base+0xaa9d>
  411672:	xor    eax,eax
  411674:	lea    rdx,[rip+0x20d35]        # 4323b0 <_IO_stdin_used@@Base+0x3b0>
  41167b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41167f:	add    rcx,rdx
  411682:	jmp    rcx
  411684:	movsx  rax,BYTE PTR [r8+0x6]
  411689:	shl    rax,0x8
  41168d:	movsx  rcx,BYTE PTR [r8+0x5]
  411692:	shl    rcx,0x10
  411696:	or     rax,rcx
  411699:	movsx  rcx,BYTE PTR [r8+0x4]
  41169e:	shl    rcx,0x18
  4116a2:	or     rax,rcx
  4116a5:	movsx  rcx,BYTE PTR [r8+0x3]
  4116aa:	shl    rcx,0x20
  4116ae:	or     rax,rcx
  4116b1:	movsx  rcx,BYTE PTR [r8+0x2]
  4116b6:	shl    rcx,0x28
  4116ba:	or     rax,rcx
  4116bd:	movsx  rcx,BYTE PTR [r8+0x1]
  4116c2:	shl    rcx,0x30
  4116c6:	or     rax,rcx
  4116c9:	movzx  ebp,BYTE PTR [r8]
  4116cd:	shl    rbp,0x38
  4116d1:	or     rbp,rax
  4116d4:	mov    rax,rbp
  4116d7:	shr    rax,0x28
  4116db:	cmp    rax,0x466f6f
  4116e1:	jne    411713 <main@@Base+0xa8f3>
  4116e3:	mov    rdi,r13
  4116e6:	mov    rsi,r8
  4116e9:	mov    rdx,rbx
  4116ec:	mov    ecx,0x3
  4116f1:	mov    QWORD PTR [rsp],r8
  4116f5:	mov    r8,r12
  4116f8:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4116fd:	mov    r8,QWORD PTR [rsp]
  411701:	cmp    rax,r8
  411704:	je     411713 <main@@Base+0xa8f3>
  411706:	mov    rsi,rax
  411709:	mov    ecx,0x11
  41170e:	jmp    4118b1 <main@@Base+0xaa91>
  411713:	movabs rax,0x496e636c75646556
  41171d:	cmp    rbp,rax
  411720:	jne    4118bd <main@@Base+0xaa9d>
  411726:	lea    rbp,[r8+0x8]
  41172a:	mov    rcx,rbx
  41172d:	sub    rcx,rbp
  411730:	cmp    rcx,0x8
  411734:	jb     41180f <main@@Base+0xa9ef>
  41173a:	movbe  rcx,QWORD PTR [rbp+0x0]
  411740:	jmp    41187e <main@@Base+0xaa5e>
  411745:	lea    rdi,[rcx-0x1]
  411749:	cmp    rdi,0x6
  41174d:	ja     4118c0 <main@@Base+0xaaa0>
  411753:	xor    edx,edx
  411755:	lea    rbp,[rip+0x20cc4]        # 432420 <_IO_stdin_used@@Base+0x420>
  41175c:	movsxd rdi,DWORD PTR [rbp+rdi*4+0x0]
  411761:	add    rdi,rbp
  411764:	jmp    rdi
  411766:	movsx  rdx,BYTE PTR [rsi+0x1e]
  41176b:	shl    rdx,0x8
  41176f:	movsx  rdi,BYTE PTR [rsi+0x1d]
  411774:	shl    rdi,0x10
  411778:	or     rdx,rdi
  41177b:	movsx  rdi,BYTE PTR [rsi+0x1c]
  411780:	shl    rdi,0x18
  411784:	or     rdx,rdi
  411787:	movsx  rdi,BYTE PTR [rsi+0x1b]
  41178c:	shl    rdi,0x20
  411790:	or     rdx,rdi
  411793:	movsx  rdi,BYTE PTR [rsi+0x1a]
  411798:	shl    rdi,0x28
  41179c:	or     rdx,rdi
  41179f:	movsx  rdi,BYTE PTR [rsi+0x19]
  4117a4:	shl    rdi,0x30
  4117a8:	or     rdx,rdi
  4117ab:	movzx  edi,BYTE PTR [rax]
  4117ae:	shl    rdi,0x38
  4117b2:	or     rdi,rdx
  4117b5:	cmp    rcx,0x4
  4117b9:	jl     4118c0 <main@@Base+0xaaa0>
  4117bf:	movabs rcx,0xffffff0000000000
  4117c9:	and    rdi,rcx
  4117cc:	movabs rcx,0x6e756d0000000000
  4117d6:	cmp    rdi,rcx
  4117d9:	jne    4118c0 <main@@Base+0xaaa0>
  4117df:	lea    rbp,[rsi+0x1c]
  4117e3:	cmp    BYTE PTR [rsi+0x1b],0x2e
  4117e7:	cmovne rbp,rax
  4117eb:	cmp    rbp,rax
  4117ee:	je     4118c0 <main@@Base+0xaaa0>
  4117f4:	mov    rcx,rbx
  4117f7:	sub    rcx,rbp
  4117fa:	cmp    rcx,0x8
  4117fe:	jb     4118d2 <main@@Base+0xaab2>
  411804:	movbe  rcx,QWORD PTR [rbp+0x0]
  41180a:	jmp    411941 <main@@Base+0xab21>
  41180f:	dec    rcx
  411812:	cmp    rcx,0x6
  411816:	ja     4118bd <main@@Base+0xaa9d>
  41181c:	xor    eax,eax
  41181e:	lea    rdx,[rip+0x20ba7]        # 4323cc <_IO_stdin_used@@Base+0x3cc>
  411825:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  411829:	add    rcx,rdx
  41182c:	jmp    rcx
  41182e:	movsx  rax,BYTE PTR [r8+0xe]
  411833:	shl    rax,0x8
  411837:	movsx  rcx,BYTE PTR [r8+0xd]
  41183c:	shl    rcx,0x10
  411840:	or     rax,rcx
  411843:	movsx  rcx,BYTE PTR [r8+0xc]
  411848:	shl    rcx,0x18
  41184c:	or     rax,rcx
  41184f:	movsx  rcx,BYTE PTR [r8+0xb]
  411854:	shl    rcx,0x20
  411858:	or     rax,rcx
  41185b:	movsx  rcx,BYTE PTR [r8+0xa]
  411860:	shl    rcx,0x28
  411864:	or     rax,rcx
  411867:	movsx  rcx,BYTE PTR [r8+0x9]
  41186c:	shl    rcx,0x30
  411870:	or     rax,rcx
  411873:	movzx  ecx,BYTE PTR [rbp+0x0]
  411877:	shl    rcx,0x38
  41187b:	or     rcx,rax
  41187e:	shr    rcx,0x30
  411882:	cmp    rcx,0x616c
  411889:	jne    4118bd <main@@Base+0xaa9d>
  41188b:	mov    rdi,r13
  41188e:	mov    rsi,rbp
  411891:	mov    rdx,rbx
  411894:	mov    ecx,0x2
  411899:	mov    rbx,r8
  41189c:	mov    r8,r12
  41189f:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4118a4:	mov    rsi,rbx
  4118a7:	cmp    rax,rbp
  4118aa:	je     4118c0 <main@@Base+0xaaa0>
  4118ac:	xor    ecx,ecx
  4118ae:	mov    rsi,rax
  4118b1:	mov    QWORD PTR [r14],rcx
  4118b4:	mov    DWORD PTR [r15],0x0
  4118bb:	jmp    4118c0 <main@@Base+0xaaa0>
  4118bd:	mov    rsi,r8
  4118c0:	mov    rax,rsi
  4118c3:	add    rsp,0x8
  4118c7:	pop    rbx
  4118c8:	pop    r12
  4118ca:	pop    r13
  4118cc:	pop    r14
  4118ce:	pop    r15
  4118d0:	pop    rbp
  4118d1:	ret    
  4118d2:	dec    rcx
  4118d5:	cmp    rcx,0x6
  4118d9:	ja     411983 <main@@Base+0xab63>
  4118df:	xor    eax,eax
  4118e1:	lea    rdx,[rip+0x20b54]        # 43243c <_IO_stdin_used@@Base+0x43c>
  4118e8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4118ec:	add    rcx,rdx
  4118ef:	jmp    rcx
  4118f1:	movsx  rax,BYTE PTR [rbp+0x6]
  4118f6:	shl    rax,0x8
  4118fa:	movsx  rcx,BYTE PTR [rbp+0x5]
  4118ff:	shl    rcx,0x10
  411903:	or     rax,rcx
  411906:	movsx  rcx,BYTE PTR [rbp+0x4]
  41190b:	shl    rcx,0x18
  41190f:	or     rax,rcx
  411912:	movsx  rcx,BYTE PTR [rbp+0x3]
  411917:	shl    rcx,0x20
  41191b:	or     rax,rcx
  41191e:	movsx  rcx,BYTE PTR [rbp+0x2]
  411923:	shl    rcx,0x28
  411927:	or     rax,rcx
  41192a:	movsx  rcx,BYTE PTR [rbp+0x1]
  41192f:	shl    rcx,0x30
  411933:	or     rax,rcx
  411936:	movzx  ecx,BYTE PTR [rbp+0x0]
  41193a:	shl    rcx,0x38
  41193e:	or     rcx,rax
  411941:	shr    rcx,0x38
  411945:	cmp    rcx,0x78
  411949:	jne    411983 <main@@Base+0xab63>
  41194b:	mov    rdi,r13
  41194e:	mov    rsi,rbp
  411951:	mov    rdx,rbx
  411954:	mov    ecx,0x1
  411959:	mov    r8,r12
  41195c:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  411961:	mov    rsi,rbp
  411964:	cmp    rax,rbp
  411967:	je     4118c0 <main@@Base+0xaaa0>
  41196d:	mov    QWORD PTR [r14],0x0
  411974:	mov    DWORD PTR [r15],0x0
  41197b:	mov    rsi,rax
  41197e:	jmp    4118c0 <main@@Base+0xaaa0>
  411983:	mov    rsi,rbp
  411986:	jmp    4118c0 <main@@Base+0xaaa0>
  41198b:	nop    DWORD PTR [rax+rax*1+0x0]
  411990:	push   rbp
  411991:	push   r15
  411993:	push   r14
  411995:	push   r13
  411997:	push   r12
  411999:	push   rbx
  41199a:	sub    rsp,0x38
  41199e:	mov    r14,r8
  4119a1:	mov    rbp,rcx
  4119a4:	mov    r12,rdx
  4119a7:	mov    rbx,rsi
  4119aa:	mov    r15,rdi
  4119ad:	mov    BYTE PTR [r8],0x0
  4119b1:	cmp    rsi,rdx
  4119b4:	je     4119d6 <main@@Base+0xabb6>
  4119b6:	cmp    BYTE PTR [rbx],0x22
  4119b9:	jne    4119c0 <main@@Base+0xaba0>
  4119bb:	inc    rbx
  4119be:	jmp    4119d6 <main@@Base+0xabb6>
  4119c0:	mov    rdi,r15
  4119c3:	mov    rsi,rbx
  4119c6:	mov    rdx,r12
  4119c9:	mov    ecx,0x5
  4119ce:	call   422690 <flatcc_json_parser_set_error@@Base>
  4119d3:	mov    rbx,rax
  4119d6:	mov    rax,r12
  4119d9:	sub    rax,rbx
  4119dc:	cmp    rax,0x2
  4119e0:	jl     4119fc <main@@Base+0xabdc>
  4119e2:	cmp    BYTE PTR [rbx],0x20
  4119e5:	jg     411a0d <main@@Base+0xabed>
  4119e7:	jne    4119fc <main@@Base+0xabdc>
  4119e9:	cmp    BYTE PTR [rbx+0x1],0x20
  4119ed:	jle    4119fc <main@@Base+0xabdc>
  4119ef:	inc    rbx
  4119f2:	cmp    rbx,r12
  4119f5:	jne    411a16 <main@@Base+0xabf6>
  4119f7:	jmp    411b03 <main@@Base+0xace3>
  4119fc:	mov    rdi,r15
  4119ff:	mov    rsi,rbx
  411a02:	mov    rdx,r12
  411a05:	call   422710 <flatcc_json_parser_space_ext@@Base>
  411a0a:	mov    rbx,rax
  411a0d:	cmp    rbx,r12
  411a10:	je     411b03 <main@@Base+0xace3>
  411a16:	lea    rax,[rbp+0x8]
  411a1a:	xor    ecx,ecx
  411a1c:	mov    QWORD PTR [rsp+0x20],r14
  411a21:	mov    QWORD PTR [rsp+0x18],rbp
  411a26:	mov    QWORD PTR [rsp+0x28],rax
  411a2b:	mov    DWORD PTR [rsp+0xc],ecx
  411a2f:	mov    rbp,QWORD PTR [rbp+0x0]
  411a33:	mov    r14,rax
  411a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411a40:	mov    rdi,r15
  411a43:	mov    rsi,rbx
  411a46:	mov    rdx,r12
  411a49:	lea    rcx,[rsp+0x14]
  411a4e:	lea    r8,[rsp+0x30]
  411a53:	lea    r9,[rsp+0x10]
  411a58:	call   rbp
  411a5a:	cmp    rax,r12
  411a5d:	je     411b03 <main@@Base+0xace3>
  411a63:	mov    r13,rax
  411a66:	cmp    rax,rbx
  411a69:	jne    411a80 <main@@Base+0xac60>
  411a6b:	mov    rbp,QWORD PTR [r14]
  411a6e:	add    r14,0x8
  411a72:	test   rbp,rbp
  411a75:	jne    411a40 <main@@Base+0xac20>
  411a77:	jmp    411b08 <main@@Base+0xace8>
  411a7c:	nop    DWORD PTR [rax+0x0]
  411a80:	mov    rax,QWORD PTR [rsp+0x30]
  411a85:	cmp    DWORD PTR [rsp+0x14],0x0
  411a8a:	je     411aae <main@@Base+0xac8e>
  411a8c:	cmp    rax,0x81
  411a92:	mov    r14,QWORD PTR [rsp+0x20]
  411a97:	mov    rbp,QWORD PTR [rsp+0x18]
  411a9c:	jb     411ade <main@@Base+0xacbe>
  411a9e:	mov    rdi,r15
  411aa1:	mov    rsi,r13
  411aa4:	mov    rdx,r12
  411aa7:	mov    ecx,0x8
  411aac:	jmp    411ace <main@@Base+0xacae>
  411aae:	cmp    rax,0x80
  411ab4:	mov    r14,QWORD PTR [rsp+0x20]
  411ab9:	mov    rbp,QWORD PTR [rsp+0x18]
  411abe:	jb     411ae1 <main@@Base+0xacc1>
  411ac0:	mov    rdi,r15
  411ac3:	mov    rsi,r13
  411ac6:	mov    rdx,r12
  411ac9:	mov    ecx,0x7
  411ace:	call   422690 <flatcc_json_parser_set_error@@Base>
  411ad3:	mov    ecx,DWORD PTR [rsp+0xc]
  411ad7:	cmp    rax,r12
  411ada:	jne    411aeb <main@@Base+0xaccb>
  411adc:	jmp    411b03 <main@@Base+0xace3>
  411ade:	neg    rax
  411ae1:	mov    ecx,eax
  411ae3:	mov    rax,r13
  411ae6:	cmp    rax,r12
  411ae9:	je     411b03 <main@@Base+0xace3>
  411aeb:	add    BYTE PTR [r14],cl
  411aee:	cmp    DWORD PTR [rsp+0x10],0x0
  411af3:	mov    rbx,r13
  411af6:	mov    rax,QWORD PTR [rsp+0x28]
  411afb:	jne    411a2b <main@@Base+0xac0b>
  411b01:	jmp    411b1e <main@@Base+0xacfe>
  411b03:	mov    r13,r12
  411b06:	jmp    411b1e <main@@Base+0xacfe>
  411b08:	mov    rdi,r15
  411b0b:	mov    rsi,rbx
  411b0e:	mov    rdx,r12
  411b11:	mov    ecx,0x17
  411b16:	call   422690 <flatcc_json_parser_set_error@@Base>
  411b1b:	mov    r13,rax
  411b1e:	mov    rax,r13
  411b21:	add    rsp,0x38
  411b25:	pop    rbx
  411b26:	pop    r12
  411b28:	pop    r13
  411b2a:	pop    r14
  411b2c:	pop    r15
  411b2e:	pop    rbp
  411b2f:	ret    
  411b30:	push   rbp
  411b31:	push   r15
  411b33:	push   r14
  411b35:	push   r13
  411b37:	push   r12
  411b39:	push   rbx
  411b3a:	sub    rsp,0x38
  411b3e:	mov    r14,r8
  411b41:	mov    rbp,rcx
  411b44:	mov    r12,rdx
  411b47:	mov    rbx,rsi
  411b4a:	mov    r15,rdi
  411b4d:	mov    BYTE PTR [r8],0x0
  411b51:	cmp    rsi,rdx
  411b54:	je     411b76 <main@@Base+0xad56>
  411b56:	cmp    BYTE PTR [rbx],0x22
  411b59:	jne    411b60 <main@@Base+0xad40>
  411b5b:	inc    rbx
  411b5e:	jmp    411b76 <main@@Base+0xad56>
  411b60:	mov    rdi,r15
  411b63:	mov    rsi,rbx
  411b66:	mov    rdx,r12
  411b69:	mov    ecx,0x5
  411b6e:	call   422690 <flatcc_json_parser_set_error@@Base>
  411b73:	mov    rbx,rax
  411b76:	mov    rax,r12
  411b79:	sub    rax,rbx
  411b7c:	cmp    rax,0x2
  411b80:	jl     411b9c <main@@Base+0xad7c>
  411b82:	cmp    BYTE PTR [rbx],0x20
  411b85:	jg     411bad <main@@Base+0xad8d>
  411b87:	jne    411b9c <main@@Base+0xad7c>
  411b89:	cmp    BYTE PTR [rbx+0x1],0x20
  411b8d:	jle    411b9c <main@@Base+0xad7c>
  411b8f:	inc    rbx
  411b92:	cmp    rbx,r12
  411b95:	jne    411bb6 <main@@Base+0xad96>
  411b97:	jmp    411cac <main@@Base+0xae8c>
  411b9c:	mov    rdi,r15
  411b9f:	mov    rsi,rbx
  411ba2:	mov    rdx,r12
  411ba5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  411baa:	mov    rbx,rax
  411bad:	cmp    rbx,r12
  411bb0:	je     411cac <main@@Base+0xae8c>
  411bb6:	lea    rax,[rbp+0x8]
  411bba:	mov    DWORD PTR [rsp+0xc],0x0
  411bc2:	mov    QWORD PTR [rsp+0x20],r14
  411bc7:	mov    QWORD PTR [rsp+0x18],rbp
  411bcc:	mov    QWORD PTR [rsp+0x28],rax
  411bd1:	mov    rbp,QWORD PTR [rbp+0x0]
  411bd5:	mov    r14,rax
  411bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  411be0:	mov    rdi,r15
  411be3:	mov    rsi,rbx
  411be6:	mov    rdx,r12
  411be9:	lea    rcx,[rsp+0x14]
  411bee:	lea    r8,[rsp+0x30]
  411bf3:	lea    r9,[rsp+0x10]
  411bf8:	call   rbp
  411bfa:	cmp    rax,r12
  411bfd:	je     411cac <main@@Base+0xae8c>
  411c03:	mov    r13,rax
  411c06:	cmp    rax,rbx
  411c09:	jne    411c20 <main@@Base+0xae00>
  411c0b:	mov    rbp,QWORD PTR [r14]
  411c0e:	add    r14,0x8
  411c12:	test   rbp,rbp
  411c15:	jne    411be0 <main@@Base+0xadc0>
  411c17:	jmp    411cb1 <main@@Base+0xae91>
  411c1c:	nop    DWORD PTR [rax+0x0]
  411c20:	cmp    DWORD PTR [rsp+0x14],0x0
  411c25:	je     411c4b <main@@Base+0xae2b>
  411c27:	mov    rdi,r15
  411c2a:	mov    rsi,r13
  411c2d:	mov    rdx,r12
  411c30:	mov    ecx,0x8
  411c35:	call   422690 <flatcc_json_parser_set_error@@Base>
  411c3a:	mov    r14,QWORD PTR [rsp+0x20]
  411c3f:	mov    rbp,QWORD PTR [rsp+0x18]
  411c44:	cmp    rax,r12
  411c47:	jne    411c90 <main@@Base+0xae70>
  411c49:	jmp    411cac <main@@Base+0xae8c>
  411c4b:	mov    rax,QWORD PTR [rsp+0x30]
  411c50:	cmp    rax,0x100
  411c56:	mov    r14,QWORD PTR [rsp+0x20]
  411c5b:	mov    rbp,QWORD PTR [rsp+0x18]
  411c60:	jb     411c7c <main@@Base+0xae5c>
  411c62:	mov    rdi,r15
  411c65:	mov    rsi,r13
  411c68:	mov    rdx,r12
  411c6b:	mov    ecx,0x7
  411c70:	call   422690 <flatcc_json_parser_set_error@@Base>
  411c75:	cmp    rax,r12
  411c78:	jne    411c90 <main@@Base+0xae70>
  411c7a:	jmp    411cac <main@@Base+0xae8c>
  411c7c:	mov    DWORD PTR [rsp+0xc],eax
  411c80:	mov    rax,r13
  411c83:	cmp    rax,r12
  411c86:	je     411cac <main@@Base+0xae8c>
  411c88:	nop    DWORD PTR [rax+rax*1+0x0]
  411c90:	mov    eax,DWORD PTR [rsp+0xc]
  411c94:	add    BYTE PTR [r14],al
  411c97:	cmp    DWORD PTR [rsp+0x10],0x0
  411c9c:	mov    rbx,r13
  411c9f:	mov    rax,QWORD PTR [rsp+0x28]
  411ca4:	jne    411bd1 <main@@Base+0xadb1>
  411caa:	jmp    411cc7 <main@@Base+0xaea7>
  411cac:	mov    r13,r12
  411caf:	jmp    411cc7 <main@@Base+0xaea7>
  411cb1:	mov    rdi,r15
  411cb4:	mov    rsi,rbx
  411cb7:	mov    rdx,r12
  411cba:	mov    ecx,0x17
  411cbf:	call   422690 <flatcc_json_parser_set_error@@Base>
  411cc4:	mov    r13,rax
  411cc7:	mov    rax,r13
  411cca:	add    rsp,0x38
  411cce:	pop    rbx
  411ccf:	pop    r12
  411cd1:	pop    r13
  411cd3:	pop    r14
  411cd5:	pop    r15
  411cd7:	pop    rbp
  411cd8:	ret    
  411cd9:	nop    DWORD PTR [rax+0x0]
  411ce0:	push   rbp
  411ce1:	push   r15
  411ce3:	push   r14
  411ce5:	push   r13
  411ce7:	push   r12
  411ce9:	push   rbx
  411cea:	sub    rsp,0x38
  411cee:	mov    r14,r8
  411cf1:	mov    rbp,rcx
  411cf4:	mov    r12,rdx
  411cf7:	mov    rbx,rsi
  411cfa:	mov    r15,rdi
  411cfd:	mov    WORD PTR [r8],0x0
  411d03:	cmp    rsi,rdx
  411d06:	je     411d28 <main@@Base+0xaf08>
  411d08:	cmp    BYTE PTR [rbx],0x22
  411d0b:	jne    411d12 <main@@Base+0xaef2>
  411d0d:	inc    rbx
  411d10:	jmp    411d28 <main@@Base+0xaf08>
  411d12:	mov    rdi,r15
  411d15:	mov    rsi,rbx
  411d18:	mov    rdx,r12
  411d1b:	mov    ecx,0x5
  411d20:	call   422690 <flatcc_json_parser_set_error@@Base>
  411d25:	mov    rbx,rax
  411d28:	mov    rax,r12
  411d2b:	sub    rax,rbx
  411d2e:	cmp    rax,0x2
  411d32:	jl     411d4e <main@@Base+0xaf2e>
  411d34:	cmp    BYTE PTR [rbx],0x20
  411d37:	jg     411d5f <main@@Base+0xaf3f>
  411d39:	jne    411d4e <main@@Base+0xaf2e>
  411d3b:	cmp    BYTE PTR [rbx+0x1],0x20
  411d3f:	jle    411d4e <main@@Base+0xaf2e>
  411d41:	inc    rbx
  411d44:	cmp    rbx,r12
  411d47:	jne    411d68 <main@@Base+0xaf48>
  411d49:	jmp    411e54 <main@@Base+0xb034>
  411d4e:	mov    rdi,r15
  411d51:	mov    rsi,rbx
  411d54:	mov    rdx,r12
  411d57:	call   422710 <flatcc_json_parser_space_ext@@Base>
  411d5c:	mov    rbx,rax
  411d5f:	cmp    rbx,r12
  411d62:	je     411e54 <main@@Base+0xb034>
  411d68:	lea    rax,[rbp+0x8]
  411d6c:	xor    ecx,ecx
  411d6e:	mov    QWORD PTR [rsp+0x20],r14
  411d73:	mov    QWORD PTR [rsp+0x18],rbp
  411d78:	mov    QWORD PTR [rsp+0x28],rax
  411d7d:	mov    DWORD PTR [rsp+0xc],ecx
  411d81:	mov    rbp,QWORD PTR [rbp+0x0]
  411d85:	mov    r14,rax
  411d88:	nop    DWORD PTR [rax+rax*1+0x0]
  411d90:	mov    rdi,r15
  411d93:	mov    rsi,rbx
  411d96:	mov    rdx,r12
  411d99:	lea    rcx,[rsp+0x14]
  411d9e:	lea    r8,[rsp+0x30]
  411da3:	lea    r9,[rsp+0x10]
  411da8:	call   rbp
  411daa:	cmp    rax,r12
  411dad:	je     411e54 <main@@Base+0xb034>
  411db3:	mov    r13,rax
  411db6:	cmp    rax,rbx
  411db9:	jne    411dd0 <main@@Base+0xafb0>
  411dbb:	mov    rbp,QWORD PTR [r14]
  411dbe:	add    r14,0x8
  411dc2:	test   rbp,rbp
  411dc5:	jne    411d90 <main@@Base+0xaf70>
  411dc7:	jmp    411e59 <main@@Base+0xb039>
  411dcc:	nop    DWORD PTR [rax+0x0]
  411dd0:	mov    rax,QWORD PTR [rsp+0x30]
  411dd5:	cmp    DWORD PTR [rsp+0x14],0x0
  411dda:	je     411dfe <main@@Base+0xafde>
  411ddc:	cmp    rax,0x8001
  411de2:	mov    r14,QWORD PTR [rsp+0x20]
  411de7:	mov    rbp,QWORD PTR [rsp+0x18]
  411dec:	jb     411e2e <main@@Base+0xb00e>
  411dee:	mov    rdi,r15
  411df1:	mov    rsi,r13
  411df4:	mov    rdx,r12
  411df7:	mov    ecx,0x8
  411dfc:	jmp    411e1e <main@@Base+0xaffe>
  411dfe:	cmp    rax,0x8000
  411e04:	mov    r14,QWORD PTR [rsp+0x20]
  411e09:	mov    rbp,QWORD PTR [rsp+0x18]
  411e0e:	jb     411e31 <main@@Base+0xb011>
  411e10:	mov    rdi,r15
  411e13:	mov    rsi,r13
  411e16:	mov    rdx,r12
  411e19:	mov    ecx,0x7
  411e1e:	call   422690 <flatcc_json_parser_set_error@@Base>
  411e23:	mov    ecx,DWORD PTR [rsp+0xc]
  411e27:	cmp    rax,r12
  411e2a:	jne    411e3b <main@@Base+0xb01b>
  411e2c:	jmp    411e54 <main@@Base+0xb034>
  411e2e:	neg    rax
  411e31:	mov    ecx,eax
  411e33:	mov    rax,r13
  411e36:	cmp    rax,r12
  411e39:	je     411e54 <main@@Base+0xb034>
  411e3b:	add    WORD PTR [r14],cx
  411e3f:	cmp    DWORD PTR [rsp+0x10],0x0
  411e44:	mov    rbx,r13
  411e47:	mov    rax,QWORD PTR [rsp+0x28]
  411e4c:	jne    411d7d <main@@Base+0xaf5d>
  411e52:	jmp    411e6f <main@@Base+0xb04f>
  411e54:	mov    r13,r12
  411e57:	jmp    411e6f <main@@Base+0xb04f>
  411e59:	mov    rdi,r15
  411e5c:	mov    rsi,rbx
  411e5f:	mov    rdx,r12
  411e62:	mov    ecx,0x17
  411e67:	call   422690 <flatcc_json_parser_set_error@@Base>
  411e6c:	mov    r13,rax
  411e6f:	mov    rax,r13
  411e72:	add    rsp,0x38
  411e76:	pop    rbx
  411e77:	pop    r12
  411e79:	pop    r13
  411e7b:	pop    r14
  411e7d:	pop    r15
  411e7f:	pop    rbp
  411e80:	ret    
  411e81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  411e90:	push   rbp
  411e91:	push   r15
  411e93:	push   r14
  411e95:	push   r13
  411e97:	push   r12
  411e99:	push   rbx
  411e9a:	sub    rsp,0x18
  411e9e:	mov    r12,rdx
  411ea1:	mov    r14,rdi
  411ea4:	cmp    rsi,rdx
  411ea7:	je     411ed7 <main@@Base+0xb0b7>
  411ea9:	cmp    BYTE PTR [rsi],0x7b
  411eac:	jne    411ed7 <main@@Base+0xb0b7>
  411eae:	mov    r15,rcx
  411eb1:	lea    rax,[rsi+0x1]
  411eb5:	mov    rcx,r12
  411eb8:	sub    rcx,rax
  411ebb:	cmp    rcx,0x2
  411ebf:	jl     411ef5 <main@@Base+0xb0d5>
  411ec1:	cmp    BYTE PTR [rax],0x20
  411ec4:	jg     411f03 <main@@Base+0xb0e3>
  411ec6:	jne    411ef5 <main@@Base+0xb0d5>
  411ec8:	cmp    BYTE PTR [rsi+0x2],0x20
  411ecc:	jle    411ef5 <main@@Base+0xb0d5>
  411ece:	add    rsi,0x2
  411ed2:	mov    rax,rsi
  411ed5:	jmp    411f03 <main@@Base+0xb0e3>
  411ed7:	mov    rdi,r14
  411eda:	mov    rdx,r12
  411edd:	mov    ecx,0x15
  411ee2:	add    rsp,0x18
  411ee6:	pop    rbx
  411ee7:	pop    r12
  411ee9:	pop    r13
  411eeb:	pop    r14
  411eed:	pop    r15
  411eef:	pop    rbp
  411ef0:	jmp    422690 <flatcc_json_parser_set_error@@Base>
  411ef5:	mov    rdi,r14
  411ef8:	mov    rsi,rax
  411efb:	mov    rdx,r12
  411efe:	call   422710 <flatcc_json_parser_space_ext@@Base>
  411f03:	mov    rsi,r12
  411f06:	cmp    rax,r12
  411f09:	je     411f54 <main@@Base+0xb134>
  411f0b:	cmp    BYTE PTR [rax],0x7d
  411f0e:	jne    411f51 <main@@Base+0xb131>
  411f10:	lea    rcx,[rax+0x1]
  411f14:	mov    rdx,r12
  411f17:	sub    rdx,rcx
  411f1a:	cmp    rdx,0x2
  411f1e:	jl     411f35 <main@@Base+0xb115>
  411f20:	cmp    BYTE PTR [rcx],0x20
  411f23:	jg     4124fd <main@@Base+0xb6dd>
  411f29:	jne    411f35 <main@@Base+0xb115>
  411f2b:	cmp    BYTE PTR [rax+0x2],0x20
  411f2f:	jg     4124c9 <main@@Base+0xb6a9>
  411f35:	mov    rdi,r14
  411f38:	mov    rsi,rcx
  411f3b:	mov    rdx,r12
  411f3e:	add    rsp,0x18
  411f42:	pop    rbx
  411f43:	pop    r12
  411f45:	pop    r13
  411f47:	pop    r14
  411f49:	pop    r15
  411f4b:	pop    rbp
  411f4c:	jmp    422710 <flatcc_json_parser_space_ext@@Base>
  411f51:	mov    rsi,rax
  411f54:	movabs rbx,0xff00000000000000
  411f5e:	xchg   ax,ax
  411f60:	mov    r13,r12
  411f63:	cmp    rsi,r12
  411f66:	je     411f93 <main@@Base+0xb173>
  411f68:	cmp    BYTE PTR [rsi],0x22
  411f6b:	jne    411f80 <main@@Base+0xb160>
  411f6d:	inc    rsi
  411f70:	mov    r13,rsi
  411f73:	jmp    411f93 <main@@Base+0xb173>
  411f75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f7f:	nop
  411f80:	mov    rdi,r14
  411f83:	mov    rdx,r12
  411f86:	mov    ecx,0x5
  411f8b:	call   422690 <flatcc_json_parser_set_error@@Base>
  411f90:	mov    r13,rax
  411f93:	mov    rax,r12
  411f96:	sub    rax,r13
  411f99:	cmp    rax,0x8
  411f9d:	jb     411fb0 <main@@Base+0xb190>
  411f9f:	movbe  rcx,QWORD PTR [r13+0x0]
  411fa5:	jmp    412032 <main@@Base+0xb212>
  411faa:	nop    WORD PTR [rax+rax*1+0x0]
  411fb0:	lea    rcx,[rax-0x1]
  411fb4:	cmp    rcx,0x6
  411fb8:	ja     412350 <main@@Base+0xb530>
  411fbe:	mov    r9,rbx
  411fc1:	lea    rdx,[rip+0x2051c]        # 4324e4 <_IO_stdin_used@@Base+0x4e4>
  411fc8:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  411fcc:	add    rbx,rdx
  411fcf:	xor    r8d,r8d
  411fd2:	xor    ecx,ecx
  411fd4:	xor    esi,esi
  411fd6:	xor    edi,edi
  411fd8:	xor    ebp,ebp
  411fda:	xor    edx,edx
  411fdc:	jmp    rbx
  411fde:	movsx  r8,BYTE PTR [r13+0x6]
  411fe3:	shl    r8,0x8
  411fe7:	movsx  rcx,BYTE PTR [r13+0x5]
  411fec:	shl    rcx,0x10
  411ff0:	or     rcx,r8
  411ff3:	movsx  rsi,BYTE PTR [r13+0x4]
  411ff8:	shl    rsi,0x18
  411ffc:	or     rsi,rcx
  411fff:	movsx  rdi,BYTE PTR [r13+0x3]
  412004:	shl    rdi,0x20
  412008:	or     rdi,rsi
  41200b:	movsx  rbp,BYTE PTR [r13+0x2]
  412010:	shl    rbp,0x28
  412014:	or     rbp,rdi
  412017:	movsx  rdx,BYTE PTR [r13+0x1]
  41201c:	shl    rdx,0x30
  412020:	or     rdx,rbp
  412023:	movzx  ecx,BYTE PTR [r13+0x0]
  412028:	shl    rcx,0x38
  41202c:	or     rcx,rdx
  41202f:	mov    rbx,r9
  412032:	and    rcx,rbx
  412035:	movabs rdx,0x6100000000000000
  41203f:	cmp    rcx,rdx
  412042:	je     4120a0 <main@@Base+0xb280>
  412044:	movabs rdx,0x6200000000000000
  41204e:	cmp    rcx,rdx
  412051:	jne    412350 <main@@Base+0xb530>
  412057:	mov    rbp,r13
  41205a:	cmp    rax,0x2
  41205e:	jl     4121e5 <main@@Base+0xb3c5>
  412064:	cmp    BYTE PTR [r13+0x1],0x22
  412069:	mov    rbp,r13
  41206c:	jne    4121e5 <main@@Base+0xb3c5>
  412072:	lea    rsi,[r13+0x2]
  412076:	mov    rax,r12
  412079:	sub    rax,rsi
  41207c:	cmp    rax,0x2
  412080:	jl     4120ef <main@@Base+0xb2cf>
  412082:	cmp    BYTE PTR [rsi],0x20
  412085:	jg     4120fd <main@@Base+0xb2dd>
  412087:	jne    4120ef <main@@Base+0xb2cf>
  412089:	cmp    BYTE PTR [r13+0x3],0x20
  41208e:	jle    4120ef <main@@Base+0xb2cf>
  412090:	lea    rsi,[r13+0x3]
  412094:	cmp    rsi,r12
  412097:	jne    412106 <main@@Base+0xb2e6>
  412099:	jmp    4121ad <main@@Base+0xb38d>
  41209e:	xchg   ax,ax
  4120a0:	mov    rbp,r13
  4120a3:	cmp    rax,0x2
  4120a7:	jl     4122df <main@@Base+0xb4bf>
  4120ad:	cmp    BYTE PTR [r13+0x1],0x22
  4120b2:	mov    rbp,r13
  4120b5:	jne    4122df <main@@Base+0xb4bf>
  4120bb:	lea    rsi,[r13+0x2]
  4120bf:	mov    rax,r12
  4120c2:	sub    rax,rsi
  4120c5:	cmp    rax,0x2
  4120c9:	jl     412152 <main@@Base+0xb332>
  4120cf:	cmp    BYTE PTR [rsi],0x20
  4120d2:	jg     412160 <main@@Base+0xb340>
  4120d8:	jne    412152 <main@@Base+0xb332>
  4120da:	cmp    BYTE PTR [r13+0x3],0x20
  4120df:	jle    412152 <main@@Base+0xb332>
  4120e1:	lea    rsi,[r13+0x3]
  4120e5:	cmp    rsi,r12
  4120e8:	jne    412165 <main@@Base+0xb345>
  4120ea:	jmp    4121bf <main@@Base+0xb39f>
  4120ef:	mov    rdi,r14
  4120f2:	mov    rdx,r12
  4120f5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4120fa:	mov    rsi,rax
  4120fd:	cmp    rsi,r12
  412100:	je     4121ad <main@@Base+0xb38d>
  412106:	cmp    BYTE PTR [rsi],0x3a
  412109:	jne    4121ad <main@@Base+0xb38d>
  41210f:	lea    rbp,[rsi+0x1]
  412113:	mov    rax,r12
  412116:	sub    rax,rbp
  412119:	cmp    rax,0x2
  41211d:	jl     4121d4 <main@@Base+0xb3b4>
  412123:	cmp    BYTE PTR [rbp+0x0],0x20
  412127:	jg     4121e5 <main@@Base+0xb3c5>
  41212d:	jne    4121d4 <main@@Base+0xb3b4>
  412133:	cmp    BYTE PTR [rsi+0x2],0x20
  412137:	jle    4121d4 <main@@Base+0xb3b4>
  41213d:	add    rsi,0x2
  412141:	mov    rbp,rsi
  412144:	cmp    r13,rbp
  412147:	jne    4121ee <main@@Base+0xb3ce>
  41214d:	jmp    412350 <main@@Base+0xb530>
  412152:	mov    rdi,r14
  412155:	mov    rdx,r12
  412158:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41215d:	mov    rsi,rax
  412160:	cmp    rsi,r12
  412163:	je     4121bf <main@@Base+0xb39f>
  412165:	cmp    BYTE PTR [rsi],0x3a
  412168:	jne    4121bf <main@@Base+0xb39f>
  41216a:	lea    rbp,[rsi+0x1]
  41216e:	mov    rax,r12
  412171:	sub    rax,rbp
  412174:	cmp    rax,0x2
  412178:	jl     4122ce <main@@Base+0xb4ae>
  41217e:	cmp    BYTE PTR [rbp+0x0],0x20
  412182:	jg     4122df <main@@Base+0xb4bf>
  412188:	jne    4122ce <main@@Base+0xb4ae>
  41218e:	cmp    BYTE PTR [rsi+0x2],0x20
  412192:	jle    4122ce <main@@Base+0xb4ae>
  412198:	add    rsi,0x2
  41219c:	mov    rbp,rsi
  41219f:	cmp    r13,rbp
  4121a2:	jne    4122e4 <main@@Base+0xb4c4>
  4121a8:	jmp    412350 <main@@Base+0xb530>
  4121ad:	mov    rdi,r14
  4121b0:	mov    rdx,r12
  4121b3:	mov    ecx,0x4
  4121b8:	call   422690 <flatcc_json_parser_set_error@@Base>
  4121bd:	jmp    4121e2 <main@@Base+0xb3c2>
  4121bf:	mov    rdi,r14
  4121c2:	mov    rdx,r12
  4121c5:	mov    ecx,0x4
  4121ca:	call   422690 <flatcc_json_parser_set_error@@Base>
  4121cf:	jmp    4122dc <main@@Base+0xb4bc>
  4121d4:	mov    rdi,r14
  4121d7:	mov    rsi,rbp
  4121da:	mov    rdx,r12
  4121dd:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4121e2:	mov    rbp,rax
  4121e5:	cmp    r13,rbp
  4121e8:	je     412350 <main@@Base+0xb530>
  4121ee:	mov    QWORD PTR [rsp+0x10],0x0
  4121f7:	mov    DWORD PTR [rsp+0xc],0x0
  4121ff:	mov    BYTE PTR [rsp+0xa],0x0
  412204:	cmp    rbp,r12
  412207:	je     41224b <main@@Base+0xb42b>
  412209:	mov    rdi,r14
  41220c:	mov    rsi,rbp
  41220f:	mov    rdx,r12
  412212:	lea    rcx,[rsp+0xc]
  412217:	lea    r8,[rsp+0x10]
  41221c:	call   424130 <flatcc_json_parser_integer@@Base>
  412221:	cmp    rax,rbp
  412224:	je     412257 <main@@Base+0xb437>
  412226:	mov    rcx,QWORD PTR [rsp+0x10]
  41222b:	cmp    DWORD PTR [rsp+0xc],0x0
  412230:	je     412263 <main@@Base+0xb443>
  412232:	cmp    rcx,0x81
  412239:	jb     412288 <main@@Base+0xb468>
  41223b:	mov    rdi,r14
  41223e:	mov    rsi,rax
  412241:	mov    rdx,r12
  412244:	mov    ecx,0x8
  412249:	jmp    41227a <main@@Base+0xb45a>
  41224b:	xor    ecx,ecx
  41224d:	mov    rax,r12
  412250:	cmp    rbp,rax
  412253:	jne    4122c5 <main@@Base+0xb4a5>
  412255:	jmp    412294 <main@@Base+0xb474>
  412257:	xor    ecx,ecx
  412259:	mov    rax,rbp
  41225c:	cmp    rbp,rax
  41225f:	jne    4122c5 <main@@Base+0xb4a5>
  412261:	jmp    412294 <main@@Base+0xb474>
  412263:	cmp    rcx,0x80
  41226a:	jb     41228b <main@@Base+0xb46b>
  41226c:	mov    rdi,r14
  41226f:	mov    rsi,rax
  412272:	mov    rdx,r12
  412275:	mov    ecx,0x7
  41227a:	call   422690 <flatcc_json_parser_set_error@@Base>
  41227f:	xor    ecx,ecx
  412281:	cmp    rbp,rax
  412284:	jne    4122c5 <main@@Base+0xb4a5>
  412286:	jmp    412294 <main@@Base+0xb474>
  412288:	neg    rcx
  41228b:	mov    BYTE PTR [rsp+0xa],cl
  41228f:	cmp    rbp,rax
  412292:	jne    4122c5 <main@@Base+0xb4a5>
  412294:	mov    rdi,r14
  412297:	mov    rsi,rbp
  41229a:	mov    rdx,r12
  41229d:	lea    rcx,[rip+0x2e17c]        # 440420 <__data_start@@Base+0x370>
  4122a4:	lea    r8,[rsp+0xa]
  4122a9:	call   411990 <main@@Base+0xab70>
  4122ae:	cmp    rax,rbp
  4122b1:	je     41250f <main@@Base+0xb6ef>
  4122b7:	cmp    rax,r12
  4122ba:	je     41250f <main@@Base+0xb6ef>
  4122c0:	movzx  ecx,BYTE PTR [rsp+0xa]
  4122c5:	mov    BYTE PTR [r15+0x2],cl
  4122c9:	jmp    4123f0 <main@@Base+0xb5d0>
  4122ce:	mov    rdi,r14
  4122d1:	mov    rsi,rbp
  4122d4:	mov    rdx,r12
  4122d7:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4122dc:	mov    rbp,rax
  4122df:	cmp    r13,rbp
  4122e2:	je     412350 <main@@Base+0xb530>
  4122e4:	mov    QWORD PTR [rsp+0x10],0x0
  4122ed:	mov    DWORD PTR [rsp+0xc],0x0
  4122f5:	mov    WORD PTR [rsp+0xa],0x0
  4122fc:	cmp    rbp,r12
  4122ff:	je     412363 <main@@Base+0xb543>
  412301:	mov    rdi,r14
  412304:	mov    rsi,rbp
  412307:	mov    rdx,r12
  41230a:	lea    rcx,[rsp+0xc]
  41230f:	lea    r8,[rsp+0x10]
  412314:	call   424130 <flatcc_json_parser_integer@@Base>
  412319:	cmp    rax,rbp
  41231c:	je     41236f <main@@Base+0xb54f>
  41231e:	mov    rcx,QWORD PTR [rsp+0x10]
  412323:	cmp    DWORD PTR [rsp+0xc],0x0
  412328:	je     41237b <main@@Base+0xb55b>
  41232a:	cmp    rcx,0x8001
  412331:	jb     4123a0 <main@@Base+0xb580>
  412333:	mov    rdi,r14
  412336:	mov    rsi,rax
  412339:	mov    rdx,r12
  41233c:	mov    ecx,0x8
  412341:	jmp    412392 <main@@Base+0xb572>
  412343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41234d:	nop    DWORD PTR [rax]
  412350:	mov    rdi,r14
  412353:	mov    rsi,r13
  412356:	mov    rdx,r12
  412359:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41235e:	jmp    4123f0 <main@@Base+0xb5d0>
  412363:	xor    ecx,ecx
  412365:	mov    rax,r12
  412368:	cmp    rbp,rax
  41236b:	jne    4123de <main@@Base+0xb5be>
  41236d:	jmp    4123ad <main@@Base+0xb58d>
  41236f:	xor    ecx,ecx
  412371:	mov    rax,rbp
  412374:	cmp    rbp,rax
  412377:	jne    4123de <main@@Base+0xb5be>
  412379:	jmp    4123ad <main@@Base+0xb58d>
  41237b:	cmp    rcx,0x8000
  412382:	jb     4123a3 <main@@Base+0xb583>
  412384:	mov    rdi,r14
  412387:	mov    rsi,rax
  41238a:	mov    rdx,r12
  41238d:	mov    ecx,0x7
  412392:	call   422690 <flatcc_json_parser_set_error@@Base>
  412397:	xor    ecx,ecx
  412399:	cmp    rbp,rax
  41239c:	jne    4123de <main@@Base+0xb5be>
  41239e:	jmp    4123ad <main@@Base+0xb58d>
  4123a0:	neg    rcx
  4123a3:	mov    WORD PTR [rsp+0xa],cx
  4123a8:	cmp    rbp,rax
  4123ab:	jne    4123de <main@@Base+0xb5be>
  4123ad:	mov    rdi,r14
  4123b0:	mov    rsi,rbp
  4123b3:	mov    rdx,r12
  4123b6:	lea    rcx,[rip+0x2e083]        # 440440 <__data_start@@Base+0x390>
  4123bd:	lea    r8,[rsp+0xa]
  4123c2:	call   411ce0 <main@@Base+0xaec0>
  4123c7:	cmp    rax,rbp
  4123ca:	je     41250f <main@@Base+0xb6ef>
  4123d0:	cmp    rax,r12
  4123d3:	je     41250f <main@@Base+0xb6ef>
  4123d9:	movzx  ecx,WORD PTR [rsp+0xa]
  4123de:	mov    WORD PTR [r15],cx
  4123e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4123ec:	nop    DWORD PTR [rax+0x0]
  4123f0:	mov    rcx,r12
  4123f3:	sub    rcx,rax
  4123f6:	cmp    rcx,0x2
  4123fa:	jl     412420 <main@@Base+0xb600>
  4123fc:	cmp    BYTE PTR [rax],0x20
  4123ff:	jg     41242e <main@@Base+0xb60e>
  412401:	jne    412420 <main@@Base+0xb600>
  412403:	cmp    BYTE PTR [rax+0x1],0x20
  412407:	jle    412420 <main@@Base+0xb600>
  412409:	inc    rax
  41240c:	cmp    rax,r12
  41240f:	jne    412433 <main@@Base+0xb613>
  412411:	jmp    4124a2 <main@@Base+0xb682>
  412416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412420:	mov    rdi,r14
  412423:	mov    rsi,rax
  412426:	mov    rdx,r12
  412429:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41242e:	cmp    rax,r12
  412431:	je     4124a2 <main@@Base+0xb682>
  412433:	movzx  ecx,BYTE PTR [rax]
  412436:	cmp    cl,0x2c
  412439:	jne    4124a7 <main@@Base+0xb687>
  41243b:	lea    rsi,[rax+0x1]
  41243f:	mov    rcx,r12
  412442:	sub    rcx,rsi
  412445:	cmp    rcx,0x2
  412449:	jl     412460 <main@@Base+0xb640>
  41244b:	cmp    BYTE PTR [rsi],0x20
  41244e:	jg     41246e <main@@Base+0xb64e>
  412450:	jne    412460 <main@@Base+0xb640>
  412452:	cmp    BYTE PTR [rax+0x2],0x20
  412456:	jle    412460 <main@@Base+0xb640>
  412458:	add    rax,0x2
  41245c:	jmp    41246b <main@@Base+0xb64b>
  41245e:	xchg   ax,ax
  412460:	mov    rdi,r14
  412463:	mov    rdx,r12
  412466:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41246b:	mov    rsi,rax
  41246e:	cmp    rsi,r12
  412471:	je     4124df <main@@Base+0xb6bf>
  412473:	cmp    BYTE PTR [rsi],0x7d
  412476:	jne    411f60 <main@@Base+0xb140>
  41247c:	lea    rcx,[rsi+0x1]
  412480:	mov    rax,r12
  412483:	sub    rax,rcx
  412486:	cmp    rax,0x2
  41248a:	jl     4124cf <main@@Base+0xb6af>
  41248c:	cmp    BYTE PTR [rcx],0x20
  41248f:	jg     4124fd <main@@Base+0xb6dd>
  412491:	jne    4124cf <main@@Base+0xb6af>
  412493:	cmp    BYTE PTR [rsi+0x2],0x20
  412497:	jle    4124cf <main@@Base+0xb6af>
  412499:	add    rsi,0x2
  41249d:	mov    rcx,rsi
  4124a0:	jmp    4124fd <main@@Base+0xb6dd>
  4124a2:	mov    rcx,r12
  4124a5:	jmp    4124fd <main@@Base+0xb6dd>
  4124a7:	cmp    cl,0x7d
  4124aa:	jne    4124e7 <main@@Base+0xb6c7>
  4124ac:	lea    rcx,[rax+0x1]
  4124b0:	mov    rdx,r12
  4124b3:	sub    rdx,rcx
  4124b6:	cmp    rdx,0x2
  4124ba:	jl     4124cf <main@@Base+0xb6af>
  4124bc:	cmp    BYTE PTR [rcx],0x20
  4124bf:	jg     4124fd <main@@Base+0xb6dd>
  4124c1:	jne    4124cf <main@@Base+0xb6af>
  4124c3:	cmp    BYTE PTR [rax+0x2],0x20
  4124c7:	jle    4124cf <main@@Base+0xb6af>
  4124c9:	add    rax,0x2
  4124cd:	jmp    4124fa <main@@Base+0xb6da>
  4124cf:	mov    rdi,r14
  4124d2:	mov    rsi,rcx
  4124d5:	mov    rdx,r12
  4124d8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4124dd:	jmp    4124fa <main@@Base+0xb6da>
  4124df:	mov    rdi,r14
  4124e2:	mov    rsi,r12
  4124e5:	jmp    4124ed <main@@Base+0xb6cd>
  4124e7:	mov    rdi,r14
  4124ea:	mov    rsi,rax
  4124ed:	mov    rdx,r12
  4124f0:	mov    ecx,0xa
  4124f5:	call   422690 <flatcc_json_parser_set_error@@Base>
  4124fa:	mov    rcx,rax
  4124fd:	mov    rax,rcx
  412500:	add    rsp,0x18
  412504:	pop    rbx
  412505:	pop    r12
  412507:	pop    r13
  412509:	pop    r14
  41250b:	pop    r15
  41250d:	pop    rbp
  41250e:	ret    
  41250f:	mov    rdi,r14
  412512:	mov    rsi,rax
  412515:	mov    rdx,r12
  412518:	mov    ecx,0x21
  41251d:	jmp    4124f5 <main@@Base+0xb6d5>
  41251f:	nop
  412520:	push   rbp
  412521:	push   r15
  412523:	push   r14
  412525:	push   r13
  412527:	push   r12
  412529:	push   rbx
  41252a:	sub    rsp,0x28
  41252e:	mov    r13,rdx
  412531:	mov    rbx,rsi
  412534:	mov    r14,rdi
  412537:	mov    DWORD PTR [r8],0x0
  41253e:	cmp    cl,0x4
  412541:	ja     412580 <main@@Base+0xb760>
  412543:	mov    rbp,r8
  412546:	mov    eax,ecx
  412548:	lea    rcx,[rip+0x1ffb1]        # 432500 <_IO_stdin_used@@Base+0x500>
  41254f:	movsxd rax,DWORD PTR [rcx+rax*4]
  412553:	add    rax,rcx
  412556:	jmp    rax
  412558:	mov    rax,r13
  41255b:	sub    rax,rbx
  41255e:	cmp    rax,0x4
  412562:	jl     412570 <main@@Base+0xb750>
  412564:	cmp    DWORD PTR [rbx],0x6c6c756e
  41256a:	je     41270c <main@@Base+0xb8ec>
  412570:	mov    rdi,r14
  412573:	mov    rsi,rbx
  412576:	mov    rdx,r13
  412579:	mov    ecx,0x1a
  41257e:	jmp    412599 <main@@Base+0xb779>
  412580:	test   BYTE PTR [r14+0x10],0x1
  412585:	jne    4126f0 <main@@Base+0xb8d0>
  41258b:	mov    rdi,r14
  41258e:	mov    rsi,rbx
  412591:	mov    rdx,r13
  412594:	mov    ecx,0xf
  412599:	add    rsp,0x28
  41259d:	pop    rbx
  41259e:	pop    r12
  4125a0:	pop    r13
  4125a2:	pop    r14
  4125a4:	pop    r15
  4125a6:	pop    rbp
  4125a7:	jmp    422690 <flatcc_json_parser_set_error@@Base>
  4125ac:	mov    rdi,r14
  4125af:	mov    rsi,rbx
  4125b2:	mov    rdx,r13
  4125b5:	mov    rcx,rbp
  4125b8:	call   4074e0 <main@@Base+0x6c0>
  4125bd:	jmp    4126c8 <main@@Base+0xb8a8>
  4125c2:	mov    DWORD PTR [rbp+0x0],0x0
  4125c9:	mov    rdi,QWORD PTR [r14]
  4125cc:	mov    esi,0x4
  4125d1:	call   41dcc0 <flatcc_builder_start_table@@Base>
  4125d6:	test   eax,eax
  4125d8:	jne    4126b5 <main@@Base+0xb895>
  4125de:	cmp    rbx,r13
  4125e1:	je     412694 <main@@Base+0xb874>
  4125e7:	cmp    BYTE PTR [rbx],0x7b
  4125ea:	jne    412694 <main@@Base+0xb874>
  4125f0:	lea    rax,[rbx+0x1]
  4125f4:	mov    rcx,r13
  4125f7:	sub    rcx,rax
  4125fa:	cmp    rcx,0x2
  4125fe:	jl     412722 <main@@Base+0xb902>
  412604:	cmp    BYTE PTR [rax],0x20
  412607:	jg     412730 <main@@Base+0xb910>
  41260d:	jne    412722 <main@@Base+0xb902>
  412613:	cmp    BYTE PTR [rbx+0x2],0x20
  412617:	jle    412722 <main@@Base+0xb902>
  41261d:	add    rbx,0x2
  412621:	mov    rax,rbx
  412624:	jmp    412730 <main@@Base+0xb910>
  412629:	mov    DWORD PTR [rbp+0x0],0x0
  412630:	mov    rdi,QWORD PTR [r14]
  412633:	xor    esi,esi
  412635:	call   41dcc0 <flatcc_builder_start_table@@Base>
  41263a:	test   eax,eax
  41263c:	jne    4126b5 <main@@Base+0xb895>
  41263e:	cmp    rbx,r13
  412641:	je     412694 <main@@Base+0xb874>
  412643:	cmp    BYTE PTR [rbx],0x7b
  412646:	jne    412694 <main@@Base+0xb874>
  412648:	lea    rax,[rbx+0x1]
  41264c:	mov    rcx,r13
  41264f:	sub    rcx,rax
  412652:	cmp    rcx,0x2
  412656:	jl     412777 <main@@Base+0xb957>
  41265c:	cmp    BYTE PTR [rax],0x20
  41265f:	jg     412785 <main@@Base+0xb965>
  412665:	jne    412777 <main@@Base+0xb957>
  41266b:	cmp    BYTE PTR [rbx+0x2],0x20
  41266f:	jle    412777 <main@@Base+0xb957>
  412675:	add    rbx,0x2
  412679:	mov    rax,rbx
  41267c:	jmp    412785 <main@@Base+0xb965>
  412681:	mov    rdi,r14
  412684:	mov    rsi,rbx
  412687:	mov    rdx,r13
  41268a:	mov    rcx,rbp
  41268d:	call   414a00 <main@@Base+0xdbe0>
  412692:	jmp    4126c8 <main@@Base+0xb8a8>
  412694:	mov    rdi,r14
  412697:	mov    rsi,rbx
  41269a:	mov    rdx,r13
  41269d:	mov    ecx,0x15
  4126a2:	call   422690 <flatcc_json_parser_set_error@@Base>
  4126a7:	mov    rbx,rax
  4126aa:	cmp    DWORD PTR [r14+0x1c],0x0
  4126af:	je     4131cc <main@@Base+0xc3ac>
  4126b5:	mov    rdi,r14
  4126b8:	mov    rsi,rbx
  4126bb:	mov    rdx,r13
  4126be:	mov    ecx,0x21
  4126c3:	call   422690 <flatcc_json_parser_set_error@@Base>
  4126c8:	mov    rbx,rax
  4126cb:	cmp    DWORD PTR [r14+0x1c],0x0
  4126d0:	jne    412710 <main@@Base+0xb8f0>
  4126d2:	cmp    DWORD PTR [rbp+0x0],0x0
  4126d6:	jne    412710 <main@@Base+0xb8f0>
  4126d8:	mov    rdi,r14
  4126db:	mov    rsi,rbx
  4126de:	mov    rdx,r13
  4126e1:	mov    ecx,0x21
  4126e6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4126eb:	mov    rbx,rax
  4126ee:	jmp    412710 <main@@Base+0xb8f0>
  4126f0:	mov    rdi,r14
  4126f3:	mov    rsi,rbx
  4126f6:	mov    rdx,r13
  4126f9:	add    rsp,0x28
  4126fd:	pop    rbx
  4126fe:	pop    r12
  412700:	pop    r13
  412702:	pop    r14
  412704:	pop    r15
  412706:	pop    rbp
  412707:	jmp    422d00 <flatcc_json_parser_generic_json@@Base>
  41270c:	add    rbx,0x4
  412710:	mov    rax,rbx
  412713:	add    rsp,0x28
  412717:	pop    rbx
  412718:	pop    r12
  41271a:	pop    r13
  41271c:	pop    r14
  41271e:	pop    r15
  412720:	pop    rbp
  412721:	ret    
  412722:	mov    rdi,r14
  412725:	mov    rsi,rax
  412728:	mov    rdx,r13
  41272b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412730:	mov    rsi,r13
  412733:	cmp    rax,r13
  412736:	je     412860 <main@@Base+0xba40>
  41273c:	cmp    BYTE PTR [rax],0x7d
  41273f:	jne    41285d <main@@Base+0xba3d>
  412745:	lea    rbx,[rax+0x1]
  412749:	mov    rcx,r13
  41274c:	sub    rcx,rbx
  41274f:	cmp    rcx,0x2
  412753:	jl     4132a0 <main@@Base+0xc480>
  412759:	cmp    BYTE PTR [rbx],0x20
  41275c:	jg     4126aa <main@@Base+0xb88a>
  412762:	jne    4132a0 <main@@Base+0xc480>
  412768:	cmp    BYTE PTR [rax+0x2],0x20
  41276c:	jle    4132a0 <main@@Base+0xc480>
  412772:	jmp    41325a <main@@Base+0xc43a>
  412777:	mov    rdi,r14
  41277a:	mov    rsi,rax
  41277d:	mov    rdx,r13
  412780:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412785:	mov    rsi,r13
  412788:	cmp    rax,r13
  41278b:	je     412799 <main@@Base+0xb979>
  41278d:	cmp    BYTE PTR [rax],0x7d
  412790:	je     413239 <main@@Base+0xc419>
  412796:	mov    rsi,rax
  412799:	mov    rax,r13
  41279c:	cmp    rsi,r13
  41279f:	je     4127be <main@@Base+0xb99e>
  4127a1:	cmp    BYTE PTR [rsi],0x22
  4127a4:	jne    4127ae <main@@Base+0xb98e>
  4127a6:	inc    rsi
  4127a9:	mov    rax,rsi
  4127ac:	jmp    4127be <main@@Base+0xb99e>
  4127ae:	mov    rdi,r14
  4127b1:	mov    rdx,r13
  4127b4:	mov    ecx,0x5
  4127b9:	call   422690 <flatcc_json_parser_set_error@@Base>
  4127be:	mov    rdi,r14
  4127c1:	mov    rsi,rax
  4127c4:	mov    rdx,r13
  4127c7:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  4127cc:	mov    rcx,r13
  4127cf:	sub    rcx,rax
  4127d2:	cmp    rcx,0x2
  4127d6:	jl     4127f2 <main@@Base+0xb9d2>
  4127d8:	cmp    BYTE PTR [rax],0x20
  4127db:	jg     412800 <main@@Base+0xb9e0>
  4127dd:	jne    4127f2 <main@@Base+0xb9d2>
  4127df:	cmp    BYTE PTR [rax+0x1],0x20
  4127e3:	jle    4127f2 <main@@Base+0xb9d2>
  4127e5:	inc    rax
  4127e8:	cmp    rax,r13
  4127eb:	jne    412809 <main@@Base+0xb9e9>
  4127ed:	jmp    4131be <main@@Base+0xc39e>
  4127f2:	mov    rdi,r14
  4127f5:	mov    rsi,rax
  4127f8:	mov    rdx,r13
  4127fb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412800:	cmp    rax,r13
  412803:	je     4131be <main@@Base+0xc39e>
  412809:	movzx  ecx,BYTE PTR [rax]
  41280c:	cmp    cl,0x2c
  41280f:	jne    413230 <main@@Base+0xc410>
  412815:	lea    rsi,[rax+0x1]
  412819:	mov    rcx,r13
  41281c:	sub    rcx,rsi
  41281f:	cmp    rcx,0x2
  412823:	jl     412838 <main@@Base+0xba18>
  412825:	cmp    BYTE PTR [rsi],0x20
  412828:	jg     412846 <main@@Base+0xba26>
  41282a:	jne    412838 <main@@Base+0xba18>
  41282c:	cmp    BYTE PTR [rax+0x2],0x20
  412830:	jle    412838 <main@@Base+0xba18>
  412832:	add    rax,0x2
  412836:	jmp    412843 <main@@Base+0xba23>
  412838:	mov    rdi,r14
  41283b:	mov    rdx,r13
  41283e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412843:	mov    rsi,rax
  412846:	cmp    rsi,r13
  412849:	je     4131e4 <main@@Base+0xc3c4>
  41284f:	cmp    BYTE PTR [rsi],0x7d
  412852:	jne    412799 <main@@Base+0xb979>
  412858:	jmp    4131ef <main@@Base+0xc3cf>
  41285d:	mov    rsi,rax
  412860:	movabs rax,0x636f6c6f72000000
  41286a:	add    rax,0x320000
  412870:	mov    QWORD PTR [rsp+0x20],rax
  412875:	mov    QWORD PTR [rsp+0x18],rbp
  41287a:	mov    r8,r13
  41287d:	cmp    rsi,r13
  412880:	je     4128a2 <main@@Base+0xba82>
  412882:	cmp    BYTE PTR [rsi],0x22
  412885:	jne    41288f <main@@Base+0xba6f>
  412887:	inc    rsi
  41288a:	mov    r8,rsi
  41288d:	jmp    4128a2 <main@@Base+0xba82>
  41288f:	mov    rdi,r14
  412892:	mov    rdx,r13
  412895:	mov    ecx,0x5
  41289a:	call   422690 <flatcc_json_parser_set_error@@Base>
  41289f:	mov    r8,rax
  4128a2:	mov    r15,r13
  4128a5:	sub    r15,r8
  4128a8:	cmp    r15,0x8
  4128ac:	jb     4128b5 <main@@Base+0xba95>
  4128ae:	movbe  r12,QWORD PTR [r8]
  4128b3:	jmp    41292f <main@@Base+0xbb0f>
  4128b5:	lea    rax,[r15-0x1]
  4128b9:	cmp    rax,0x6
  4128bd:	ja     412d3c <main@@Base+0xbf1c>
  4128c3:	lea    rcx,[rip+0x1fc4a]        # 432514 <_IO_stdin_used@@Base+0x514>
  4128ca:	movsxd rbp,DWORD PTR [rcx+rax*4]
  4128ce:	add    rbp,rcx
  4128d1:	xor    ecx,ecx
  4128d3:	xor    eax,eax
  4128d5:	xor    edx,edx
  4128d7:	xor    esi,esi
  4128d9:	xor    edi,edi
  4128db:	xor    ebx,ebx
  4128dd:	jmp    rbp
  4128df:	movsx  rcx,BYTE PTR [r8+0x6]
  4128e4:	shl    rcx,0x8
  4128e8:	movsx  rax,BYTE PTR [r8+0x5]
  4128ed:	shl    rax,0x10
  4128f1:	or     rax,rcx
  4128f4:	movsx  rdx,BYTE PTR [r8+0x4]
  4128f9:	shl    rdx,0x18
  4128fd:	or     rdx,rax
  412900:	movsx  rsi,BYTE PTR [r8+0x3]
  412905:	shl    rsi,0x20
  412909:	or     rsi,rdx
  41290c:	movsx  rdi,BYTE PTR [r8+0x2]
  412911:	shl    rdi,0x28
  412915:	or     rdi,rsi
  412918:	movsx  rbx,BYTE PTR [r8+0x1]
  41291d:	shl    rbx,0x30
  412921:	or     rbx,rdi
  412924:	movzx  r12d,BYTE PTR [r8]
  412928:	shl    r12,0x38
  41292c:	or     r12,rbx
  41292f:	mov    rax,r12
  412932:	and    rax,0xffffffffffff0000
  412938:	cmp    rax,QWORD PTR [rsp+0x20]
  41293d:	jne    412984 <main@@Base+0xbb64>
  41293f:	mov    rcx,r8
  412942:	cmp    r15,0x7
  412946:	jl     412a67 <main@@Base+0xbc47>
  41294c:	cmp    BYTE PTR [r8+0x6],0x22
  412951:	mov    rcx,r8
  412954:	jne    412a67 <main@@Base+0xbc47>
  41295a:	lea    rsi,[r8+0x7]
  41295e:	mov    rax,r13
  412961:	sub    rax,rsi
  412964:	cmp    rax,0x2
  412968:	jl     412a00 <main@@Base+0xbbe0>
  41296e:	cmp    BYTE PTR [rsi],0x20
  412971:	jle    4129e9 <main@@Base+0xbbc9>
  412973:	mov    rbx,r8
  412976:	cmp    rsi,r13
  412979:	jne    412a16 <main@@Base+0xbbf6>
  41297f:	jmp    412a41 <main@@Base+0xbc21>
  412984:	mov    rax,r12
  412987:	and    rax,0xffffffffff000000
  41298d:	movabs rcx,0x636f6c6f72000000
  412997:	cmp    rax,rcx
  41299a:	jne    412c89 <main@@Base+0xbe69>
  4129a0:	mov    rcx,r8
  4129a3:	cmp    r15,0x6
  4129a7:	jl     412c06 <main@@Base+0xbde6>
  4129ad:	cmp    BYTE PTR [r8+0x5],0x22
  4129b2:	mov    rcx,r8
  4129b5:	jne    412c06 <main@@Base+0xbde6>
  4129bb:	lea    rsi,[r8+0x6]
  4129bf:	mov    rax,r13
  4129c2:	sub    rax,rsi
  4129c5:	cmp    rax,0x2
  4129c9:	jl     412b9f <main@@Base+0xbd7f>
  4129cf:	cmp    BYTE PTR [rsi],0x20
  4129d2:	jle    412b88 <main@@Base+0xbd68>
  4129d8:	mov    rbx,r8
  4129db:	cmp    rsi,r13
  4129de:	jne    412bb5 <main@@Base+0xbd95>
  4129e4:	jmp    412be0 <main@@Base+0xbdc0>
  4129e9:	jne    412a00 <main@@Base+0xbbe0>
  4129eb:	cmp    BYTE PTR [r8+0x8],0x20
  4129f0:	jle    412a00 <main@@Base+0xbbe0>
  4129f2:	mov    rbx,r8
  4129f5:	lea    rsi,[r8+0x8]
  4129f9:	cmp    rsi,r13
  4129fc:	jne    412a16 <main@@Base+0xbbf6>
  4129fe:	jmp    412a41 <main@@Base+0xbc21>
  412a00:	mov    rbx,r8
  412a03:	mov    rdi,r14
  412a06:	mov    rdx,r13
  412a09:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412a0e:	mov    rsi,rax
  412a11:	cmp    rsi,r13
  412a14:	je     412a41 <main@@Base+0xbc21>
  412a16:	cmp    BYTE PTR [rsi],0x3a
  412a19:	jne    412a41 <main@@Base+0xbc21>
  412a1b:	lea    rcx,[rsi+0x1]
  412a1f:	mov    rax,r13
  412a22:	sub    rax,rcx
  412a25:	cmp    rax,0x2
  412a29:	jl     412a53 <main@@Base+0xbc33>
  412a2b:	cmp    BYTE PTR [rcx],0x20
  412a2e:	jg     412a64 <main@@Base+0xbc44>
  412a30:	jne    412a53 <main@@Base+0xbc33>
  412a32:	cmp    BYTE PTR [rsi+0x2],0x20
  412a36:	jle    412a53 <main@@Base+0xbc33>
  412a38:	add    rsi,0x2
  412a3c:	mov    rcx,rsi
  412a3f:	jmp    412a64 <main@@Base+0xbc44>
  412a41:	mov    rdi,r14
  412a44:	mov    rdx,r13
  412a47:	mov    ecx,0x4
  412a4c:	call   422690 <flatcc_json_parser_set_error@@Base>
  412a51:	jmp    412a61 <main@@Base+0xbc41>
  412a53:	mov    rdi,r14
  412a56:	mov    rsi,rcx
  412a59:	mov    rdx,r13
  412a5c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412a61:	mov    rcx,rax
  412a64:	mov    r8,rbx
  412a67:	cmp    r8,rcx
  412a6a:	je     412c89 <main@@Base+0xbe69>
  412a70:	mov    QWORD PTR [rsp+0x10],0x0
  412a79:	mov    DWORD PTR [rsp+0xc],0x0
  412a81:	mov    BYTE PTR [rsp+0xb],0x0
  412a86:	cmp    rcx,r13
  412a89:	je     412adb <main@@Base+0xbcbb>
  412a8b:	mov    rdi,r14
  412a8e:	mov    rsi,rcx
  412a91:	mov    rdx,r13
  412a94:	mov    r12,rcx
  412a97:	lea    rcx,[rsp+0xc]
  412a9c:	lea    r8,[rsp+0x10]
  412aa1:	call   424130 <flatcc_json_parser_integer@@Base>
  412aa6:	mov    rcx,r12
  412aa9:	cmp    rax,r12
  412aac:	mov    rbp,QWORD PTR [rsp+0x18]
  412ab1:	je     412aec <main@@Base+0xbccc>
  412ab3:	mov    r15,rax
  412ab6:	mov    rbx,QWORD PTR [rsp+0x10]
  412abb:	cmp    DWORD PTR [rsp+0xc],0x0
  412ac0:	je     412af8 <main@@Base+0xbcd8>
  412ac2:	cmp    rbx,0x81
  412ac9:	jb     412b23 <main@@Base+0xbd03>
  412acb:	mov    rdi,r14
  412ace:	mov    rsi,r15
  412ad1:	mov    rdx,r13
  412ad4:	mov    ecx,0x8
  412ad9:	jmp    412b0f <main@@Base+0xbcef>
  412adb:	xor    ebx,ebx
  412add:	mov    r15,r13
  412ae0:	mov    rbp,QWORD PTR [rsp+0x18]
  412ae5:	cmp    rcx,r15
  412ae8:	jne    412b66 <main@@Base+0xbd46>
  412aea:	jmp    412b2f <main@@Base+0xbd0f>
  412aec:	xor    ebx,ebx
  412aee:	mov    r15,rcx
  412af1:	cmp    rcx,r15
  412af4:	jne    412b66 <main@@Base+0xbd46>
  412af6:	jmp    412b2f <main@@Base+0xbd0f>
  412af8:	cmp    rbx,0x80
  412aff:	jb     412b26 <main@@Base+0xbd06>
  412b01:	mov    rdi,r14
  412b04:	mov    rsi,r15
  412b07:	mov    rdx,r13
  412b0a:	mov    ecx,0x7
  412b0f:	call   422690 <flatcc_json_parser_set_error@@Base>
  412b14:	mov    rcx,r12
  412b17:	mov    r15,rax
  412b1a:	xor    ebx,ebx
  412b1c:	cmp    rcx,r15
  412b1f:	jne    412b66 <main@@Base+0xbd46>
  412b21:	jmp    412b2f <main@@Base+0xbd0f>
  412b23:	neg    rbx
  412b26:	mov    BYTE PTR [rsp+0xb],bl
  412b2a:	cmp    rcx,r15
  412b2d:	jne    412b66 <main@@Base+0xbd46>
  412b2f:	mov    rdi,r14
  412b32:	mov    rsi,rcx
  412b35:	mov    rdx,r13
  412b38:	mov    rbx,rcx
  412b3b:	lea    rcx,[rip+0x2d91e]        # 440460 <__data_start@@Base+0x3b0>
  412b42:	lea    r8,[rsp+0xb]
  412b47:	call   411990 <main@@Base+0xab70>
  412b4c:	mov    r15,rax
  412b4f:	cmp    rax,rbx
  412b52:	je     4132b3 <main@@Base+0xc493>
  412b58:	cmp    r15,r13
  412b5b:	je     4132b3 <main@@Base+0xc493>
  412b61:	movzx  ebx,BYTE PTR [rsp+0xb]
  412b66:	cmp    bl,0x2
  412b69:	jne    412b76 <main@@Base+0xbd56>
  412b6b:	test   BYTE PTR [r14+0x10],0x2
  412b70:	je     41311b <main@@Base+0xc2fb>
  412b76:	mov    rdi,QWORD PTR [r14]
  412b79:	mov    edx,0x1
  412b7e:	mov    esi,0x1
  412b83:	jmp    413106 <main@@Base+0xc2e6>
  412b88:	jne    412b9f <main@@Base+0xbd7f>
  412b8a:	cmp    BYTE PTR [r8+0x7],0x20
  412b8f:	jle    412b9f <main@@Base+0xbd7f>
  412b91:	mov    rbx,r8
  412b94:	lea    rsi,[r8+0x7]
  412b98:	cmp    rsi,r13
  412b9b:	jne    412bb5 <main@@Base+0xbd95>
  412b9d:	jmp    412be0 <main@@Base+0xbdc0>
  412b9f:	mov    rbx,r8
  412ba2:	mov    rdi,r14
  412ba5:	mov    rdx,r13
  412ba8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412bad:	mov    rsi,rax
  412bb0:	cmp    rsi,r13
  412bb3:	je     412be0 <main@@Base+0xbdc0>
  412bb5:	cmp    BYTE PTR [rsi],0x3a
  412bb8:	jne    412be0 <main@@Base+0xbdc0>
  412bba:	lea    rcx,[rsi+0x1]
  412bbe:	mov    rax,r13
  412bc1:	sub    rax,rcx
  412bc4:	cmp    rax,0x2
  412bc8:	jl     412bf2 <main@@Base+0xbdd2>
  412bca:	cmp    BYTE PTR [rcx],0x20
  412bcd:	jg     412c03 <main@@Base+0xbde3>
  412bcf:	jne    412bf2 <main@@Base+0xbdd2>
  412bd1:	cmp    BYTE PTR [rsi+0x2],0x20
  412bd5:	jle    412bf2 <main@@Base+0xbdd2>
  412bd7:	add    rsi,0x2
  412bdb:	mov    rcx,rsi
  412bde:	jmp    412c03 <main@@Base+0xbde3>
  412be0:	mov    rdi,r14
  412be3:	mov    rdx,r13
  412be6:	mov    ecx,0x4
  412beb:	call   422690 <flatcc_json_parser_set_error@@Base>
  412bf0:	jmp    412c00 <main@@Base+0xbde0>
  412bf2:	mov    rdi,r14
  412bf5:	mov    rsi,rcx
  412bf8:	mov    rdx,r13
  412bfb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412c00:	mov    rcx,rax
  412c03:	mov    r8,rbx
  412c06:	cmp    r8,rcx
  412c09:	je     412c89 <main@@Base+0xbe69>
  412c0b:	mov    QWORD PTR [rsp+0x10],0x0
  412c14:	mov    DWORD PTR [rsp+0xc],0x0
  412c1c:	mov    BYTE PTR [rsp+0xb],0x0
  412c21:	cmp    rcx,r13
  412c24:	je     412d57 <main@@Base+0xbf37>
  412c2a:	mov    rdi,r14
  412c2d:	mov    rsi,rcx
  412c30:	mov    rdx,r13
  412c33:	mov    r12,rcx
  412c36:	lea    rcx,[rsp+0xc]
  412c3b:	lea    r8,[rsp+0x10]
  412c40:	call   424130 <flatcc_json_parser_integer@@Base>
  412c45:	mov    rcx,r12
  412c48:	cmp    rax,r12
  412c4b:	mov    rbp,QWORD PTR [rsp+0x18]
  412c50:	je     412d68 <main@@Base+0xbf48>
  412c56:	mov    r15,rax
  412c59:	mov    rbx,QWORD PTR [rsp+0x10]
  412c5e:	cmp    DWORD PTR [rsp+0xc],0x0
  412c63:	je     412d74 <main@@Base+0xbf54>
  412c69:	cmp    rbx,0x81
  412c70:	jb     412d9f <main@@Base+0xbf7f>
  412c76:	mov    rdi,r14
  412c79:	mov    rsi,r15
  412c7c:	mov    rdx,r13
  412c7f:	mov    ecx,0x8
  412c84:	jmp    412d8b <main@@Base+0xbf6b>
  412c89:	mov    rax,r12
  412c8c:	shr    rax,0x28
  412c90:	cmp    rax,0x756332
  412c96:	jne    412ce6 <main@@Base+0xbec6>
  412c98:	mov    r12,r8
  412c9b:	cmp    r15,0x4
  412c9f:	mov    rbp,QWORD PTR [rsp+0x18]
  412ca4:	jl     412e81 <main@@Base+0xc061>
  412caa:	cmp    BYTE PTR [r8+0x3],0x22
  412caf:	mov    r12,r8
  412cb2:	jne    412e81 <main@@Base+0xc061>
  412cb8:	lea    rsi,[r8+0x4]
  412cbc:	mov    rax,r13
  412cbf:	sub    rax,rsi
  412cc2:	cmp    rax,0x2
  412cc6:	jl     412e18 <main@@Base+0xbff8>
  412ccc:	cmp    BYTE PTR [rsi],0x20
  412ccf:	jle    412e01 <main@@Base+0xbfe1>
  412cd5:	mov    rbx,r8
  412cd8:	cmp    rsi,r13
  412cdb:	jne    412e2e <main@@Base+0xc00e>
  412ce1:	jmp    412e5b <main@@Base+0xc03b>
  412ce6:	shr    r12,0x30
  412cea:	cmp    r12,0x7563
  412cf1:	jne    412d3c <main@@Base+0xbf1c>
  412cf3:	mov    r12,r8
  412cf6:	cmp    r15,0x3
  412cfa:	jl     413000 <main@@Base+0xc1e0>
  412d00:	cmp    BYTE PTR [r8+0x2],0x22
  412d05:	mov    r12,r8
  412d08:	jne    413000 <main@@Base+0xc1e0>
  412d0e:	lea    rsi,[r8+0x3]
  412d12:	mov    rax,r13
  412d15:	sub    rax,rsi
  412d18:	cmp    rax,0x2
  412d1c:	jl     412f97 <main@@Base+0xc177>
  412d22:	cmp    BYTE PTR [rsi],0x20
  412d25:	jle    412f80 <main@@Base+0xc160>
  412d2b:	mov    rbx,r8
  412d2e:	cmp    rsi,r13
  412d31:	jne    412fad <main@@Base+0xc18d>
  412d37:	jmp    412fda <main@@Base+0xc1ba>
  412d3c:	mov    rdi,r14
  412d3f:	mov    rsi,r8
  412d42:	mov    rdx,r13
  412d45:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  412d4a:	mov    r15,rax
  412d4d:	mov    rbp,QWORD PTR [rsp+0x18]
  412d52:	jmp    41311b <main@@Base+0xc2fb>
  412d57:	xor    ebx,ebx
  412d59:	mov    r15,r13
  412d5c:	mov    rbp,QWORD PTR [rsp+0x18]
  412d61:	cmp    rcx,r15
  412d64:	jne    412de2 <main@@Base+0xbfc2>
  412d66:	jmp    412dab <main@@Base+0xbf8b>
  412d68:	xor    ebx,ebx
  412d6a:	mov    r15,rcx
  412d6d:	cmp    rcx,r15
  412d70:	jne    412de2 <main@@Base+0xbfc2>
  412d72:	jmp    412dab <main@@Base+0xbf8b>
  412d74:	cmp    rbx,0x80
  412d7b:	jb     412da2 <main@@Base+0xbf82>
  412d7d:	mov    rdi,r14
  412d80:	mov    rsi,r15
  412d83:	mov    rdx,r13
  412d86:	mov    ecx,0x7
  412d8b:	call   422690 <flatcc_json_parser_set_error@@Base>
  412d90:	mov    rcx,r12
  412d93:	mov    r15,rax
  412d96:	xor    ebx,ebx
  412d98:	cmp    rcx,r15
  412d9b:	jne    412de2 <main@@Base+0xbfc2>
  412d9d:	jmp    412dab <main@@Base+0xbf8b>
  412d9f:	neg    rbx
  412da2:	mov    BYTE PTR [rsp+0xb],bl
  412da6:	cmp    rcx,r15
  412da9:	jne    412de2 <main@@Base+0xbfc2>
  412dab:	mov    rdi,r14
  412dae:	mov    rsi,rcx
  412db1:	mov    rdx,r13
  412db4:	mov    rbx,rcx
  412db7:	lea    rcx,[rip+0x2d6c2]        # 440480 <__data_start@@Base+0x3d0>
  412dbe:	lea    r8,[rsp+0xb]
  412dc3:	call   411990 <main@@Base+0xab70>
  412dc8:	mov    r15,rax
  412dcb:	cmp    rax,rbx
  412dce:	je     4132b3 <main@@Base+0xc493>
  412dd4:	cmp    r15,r13
  412dd7:	je     4132b3 <main@@Base+0xc493>
  412ddd:	movzx  ebx,BYTE PTR [rsp+0xb]
  412de2:	cmp    bl,0x2
  412de5:	jne    412df2 <main@@Base+0xbfd2>
  412de7:	test   BYTE PTR [r14+0x10],0x2
  412dec:	je     41311b <main@@Base+0xc2fb>
  412df2:	mov    rdi,QWORD PTR [r14]
  412df5:	mov    edx,0x1
  412dfa:	xor    esi,esi
  412dfc:	jmp    413106 <main@@Base+0xc2e6>
  412e01:	jne    412e18 <main@@Base+0xbff8>
  412e03:	cmp    BYTE PTR [r8+0x5],0x20
  412e08:	jle    412e18 <main@@Base+0xbff8>
  412e0a:	mov    rbx,r8
  412e0d:	lea    rsi,[r8+0x5]
  412e11:	cmp    rsi,r13
  412e14:	jne    412e2e <main@@Base+0xc00e>
  412e16:	jmp    412e5b <main@@Base+0xc03b>
  412e18:	mov    rbx,r8
  412e1b:	mov    rdi,r14
  412e1e:	mov    rdx,r13
  412e21:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412e26:	mov    rsi,rax
  412e29:	cmp    rsi,r13
  412e2c:	je     412e5b <main@@Base+0xc03b>
  412e2e:	cmp    BYTE PTR [rsi],0x3a
  412e31:	jne    412e5b <main@@Base+0xc03b>
  412e33:	lea    r12,[rsi+0x1]
  412e37:	mov    rax,r13
  412e3a:	sub    rax,r12
  412e3d:	cmp    rax,0x2
  412e41:	jl     412e6d <main@@Base+0xc04d>
  412e43:	cmp    BYTE PTR [r12],0x20
  412e48:	jg     412e7e <main@@Base+0xc05e>
  412e4a:	jne    412e6d <main@@Base+0xc04d>
  412e4c:	cmp    BYTE PTR [rsi+0x2],0x20
  412e50:	jle    412e6d <main@@Base+0xc04d>
  412e52:	add    rsi,0x2
  412e56:	mov    r12,rsi
  412e59:	jmp    412e7e <main@@Base+0xc05e>
  412e5b:	mov    rdi,r14
  412e5e:	mov    rdx,r13
  412e61:	mov    ecx,0x4
  412e66:	call   422690 <flatcc_json_parser_set_error@@Base>
  412e6b:	jmp    412e7b <main@@Base+0xc05b>
  412e6d:	mov    rdi,r14
  412e70:	mov    rsi,r12
  412e73:	mov    rdx,r13
  412e76:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412e7b:	mov    r12,rax
  412e7e:	mov    r8,rbx
  412e81:	cmp    r8,r12
  412e84:	je     41305c <main@@Base+0xc23c>
  412e8a:	mov    QWORD PTR [rsp+0x10],0x0
  412e93:	mov    DWORD PTR [rsp+0xc],0x0
  412e9b:	mov    BYTE PTR [rsp+0xb],0x0
  412ea0:	cmp    r12,r13
  412ea3:	je     412edc <main@@Base+0xc0bc>
  412ea5:	mov    rdi,r14
  412ea8:	mov    rsi,r12
  412eab:	mov    rdx,r13
  412eae:	lea    rcx,[rsp+0xc]
  412eb3:	lea    r8,[rsp+0x10]
  412eb8:	call   424130 <flatcc_json_parser_integer@@Base>
  412ebd:	cmp    rax,r12
  412ec0:	je     412ee8 <main@@Base+0xc0c8>
  412ec2:	mov    r15,rax
  412ec5:	cmp    DWORD PTR [rsp+0xc],0x0
  412eca:	je     412ef4 <main@@Base+0xc0d4>
  412ecc:	mov    rdi,r14
  412ecf:	mov    rsi,r15
  412ed2:	mov    rdx,r13
  412ed5:	mov    ecx,0x8
  412eda:	jmp    412f10 <main@@Base+0xc0f0>
  412edc:	xor    ebx,ebx
  412ede:	mov    r15,r13
  412ee1:	cmp    r12,r15
  412ee4:	jne    412f53 <main@@Base+0xc133>
  412ee6:	jmp    412f1f <main@@Base+0xc0ff>
  412ee8:	xor    ebx,ebx
  412eea:	mov    r15,r12
  412eed:	cmp    r12,r15
  412ef0:	jne    412f53 <main@@Base+0xc133>
  412ef2:	jmp    412f1f <main@@Base+0xc0ff>
  412ef4:	mov    rbx,QWORD PTR [rsp+0x10]
  412ef9:	cmp    rbx,0x100
  412f00:	jb     412f75 <main@@Base+0xc155>
  412f02:	mov    rdi,r14
  412f05:	mov    rsi,r15
  412f08:	mov    rdx,r13
  412f0b:	mov    ecx,0x7
  412f10:	call   422690 <flatcc_json_parser_set_error@@Base>
  412f15:	mov    r15,rax
  412f18:	xor    ebx,ebx
  412f1a:	cmp    r12,r15
  412f1d:	jne    412f53 <main@@Base+0xc133>
  412f1f:	mov    rdi,r14
  412f22:	mov    rsi,r12
  412f25:	mov    rdx,r13
  412f28:	lea    rcx,[rip+0x2d571]        # 4404a0 <__data_start@@Base+0x3f0>
  412f2f:	lea    r8,[rsp+0xb]
  412f34:	call   411b30 <main@@Base+0xad10>
  412f39:	mov    r15,rax
  412f3c:	cmp    rax,r12
  412f3f:	je     4132b3 <main@@Base+0xc493>
  412f45:	cmp    r15,r13
  412f48:	je     4132b3 <main@@Base+0xc493>
  412f4e:	movzx  ebx,BYTE PTR [rsp+0xb]
  412f53:	cmp    bl,0x2
  412f56:	jne    412f63 <main@@Base+0xc143>
  412f58:	test   BYTE PTR [r14+0x10],0x2
  412f5d:	je     41311b <main@@Base+0xc2fb>
  412f63:	mov    rdi,QWORD PTR [r14]
  412f66:	mov    edx,0x1
  412f6b:	mov    esi,0x3
  412f70:	jmp    413106 <main@@Base+0xc2e6>
  412f75:	mov    BYTE PTR [rsp+0xb],bl
  412f79:	cmp    r12,r15
  412f7c:	jne    412f53 <main@@Base+0xc133>
  412f7e:	jmp    412f1f <main@@Base+0xc0ff>
  412f80:	jne    412f97 <main@@Base+0xc177>
  412f82:	cmp    BYTE PTR [r8+0x4],0x20
  412f87:	jle    412f97 <main@@Base+0xc177>
  412f89:	mov    rbx,r8
  412f8c:	lea    rsi,[r8+0x4]
  412f90:	cmp    rsi,r13
  412f93:	jne    412fad <main@@Base+0xc18d>
  412f95:	jmp    412fda <main@@Base+0xc1ba>
  412f97:	mov    rbx,r8
  412f9a:	mov    rdi,r14
  412f9d:	mov    rdx,r13
  412fa0:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412fa5:	mov    rsi,rax
  412fa8:	cmp    rsi,r13
  412fab:	je     412fda <main@@Base+0xc1ba>
  412fad:	cmp    BYTE PTR [rsi],0x3a
  412fb0:	jne    412fda <main@@Base+0xc1ba>
  412fb2:	lea    r12,[rsi+0x1]
  412fb6:	mov    rax,r13
  412fb9:	sub    rax,r12
  412fbc:	cmp    rax,0x2
  412fc0:	jl     412fec <main@@Base+0xc1cc>
  412fc2:	cmp    BYTE PTR [r12],0x20
  412fc7:	jg     412ffd <main@@Base+0xc1dd>
  412fc9:	jne    412fec <main@@Base+0xc1cc>
  412fcb:	cmp    BYTE PTR [rsi+0x2],0x20
  412fcf:	jle    412fec <main@@Base+0xc1cc>
  412fd1:	add    rsi,0x2
  412fd5:	mov    r12,rsi
  412fd8:	jmp    412ffd <main@@Base+0xc1dd>
  412fda:	mov    rdi,r14
  412fdd:	mov    rdx,r13
  412fe0:	mov    ecx,0x4
  412fe5:	call   422690 <flatcc_json_parser_set_error@@Base>
  412fea:	jmp    412ffa <main@@Base+0xc1da>
  412fec:	mov    rdi,r14
  412fef:	mov    rsi,r12
  412ff2:	mov    rdx,r13
  412ff5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  412ffa:	mov    r12,rax
  412ffd:	mov    r8,rbx
  413000:	cmp    r8,r12
  413003:	mov    rbp,QWORD PTR [rsp+0x18]
  413008:	je     41305c <main@@Base+0xc23c>
  41300a:	mov    QWORD PTR [rsp+0x10],0x0
  413013:	mov    DWORD PTR [rsp+0xc],0x0
  41301b:	mov    BYTE PTR [rsp+0xb],0x0
  413020:	cmp    r12,r13
  413023:	je     413072 <main@@Base+0xc252>
  413025:	mov    rdi,r14
  413028:	mov    rsi,r12
  41302b:	mov    rdx,r13
  41302e:	lea    rcx,[rsp+0xc]
  413033:	lea    r8,[rsp+0x10]
  413038:	call   424130 <flatcc_json_parser_integer@@Base>
  41303d:	cmp    rax,r12
  413040:	je     41307e <main@@Base+0xc25e>
  413042:	mov    r15,rax
  413045:	cmp    DWORD PTR [rsp+0xc],0x0
  41304a:	je     41308a <main@@Base+0xc26a>
  41304c:	mov    rdi,r14
  41304f:	mov    rsi,r15
  413052:	mov    rdx,r13
  413055:	mov    ecx,0x8
  41305a:	jmp    4130aa <main@@Base+0xc28a>
  41305c:	mov    rdi,r14
  41305f:	mov    rsi,r8
  413062:	mov    rdx,r13
  413065:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41306a:	mov    r15,rax
  41306d:	jmp    41311b <main@@Base+0xc2fb>
  413072:	xor    ebx,ebx
  413074:	mov    r15,r13
  413077:	cmp    r12,r15
  41307a:	jne    4130ed <main@@Base+0xc2cd>
  41307c:	jmp    4130b9 <main@@Base+0xc299>
  41307e:	xor    ebx,ebx
  413080:	mov    r15,r12
  413083:	cmp    r12,r15
  413086:	jne    4130ed <main@@Base+0xc2cd>
  413088:	jmp    4130b9 <main@@Base+0xc299>
  41308a:	mov    rbx,QWORD PTR [rsp+0x10]
  41308f:	cmp    rbx,0x100
  413096:	jb     4131ac <main@@Base+0xc38c>
  41309c:	mov    rdi,r14
  41309f:	mov    rsi,r15
  4130a2:	mov    rdx,r13
  4130a5:	mov    ecx,0x7
  4130aa:	call   422690 <flatcc_json_parser_set_error@@Base>
  4130af:	mov    r15,rax
  4130b2:	xor    ebx,ebx
  4130b4:	cmp    r12,r15
  4130b7:	jne    4130ed <main@@Base+0xc2cd>
  4130b9:	mov    rdi,r14
  4130bc:	mov    rsi,r12
  4130bf:	mov    rdx,r13
  4130c2:	lea    rcx,[rip+0x2d3f7]        # 4404c0 <__data_start@@Base+0x410>
  4130c9:	lea    r8,[rsp+0xb]
  4130ce:	call   411b30 <main@@Base+0xad10>
  4130d3:	mov    r15,rax
  4130d6:	cmp    rax,r12
  4130d9:	je     4132b3 <main@@Base+0xc493>
  4130df:	cmp    r15,r13
  4130e2:	je     4132b3 <main@@Base+0xc493>
  4130e8:	movzx  ebx,BYTE PTR [rsp+0xb]
  4130ed:	cmp    bl,0x2
  4130f0:	jne    4130f9 <main@@Base+0xc2d9>
  4130f2:	test   BYTE PTR [r14+0x10],0x2
  4130f7:	je     41311b <main@@Base+0xc2fb>
  4130f9:	mov    rdi,QWORD PTR [r14]
  4130fc:	mov    edx,0x1
  413101:	mov    esi,0x2
  413106:	mov    ecx,0x1
  41310b:	call   41f040 <flatcc_builder_table_add@@Base>
  413110:	test   rax,rax
  413113:	je     4132b3 <main@@Base+0xc493>
  413119:	mov    BYTE PTR [rax],bl
  41311b:	mov    rax,r13
  41311e:	sub    rax,r15
  413121:	cmp    rax,0x2
  413125:	jl     413140 <main@@Base+0xc320>
  413127:	cmp    BYTE PTR [r15],0x20
  41312b:	jg     413151 <main@@Base+0xc331>
  41312d:	jne    413140 <main@@Base+0xc320>
  41312f:	cmp    BYTE PTR [r15+0x1],0x20
  413134:	jle    413140 <main@@Base+0xc320>
  413136:	inc    r15
  413139:	cmp    r15,r13
  41313c:	jne    413156 <main@@Base+0xc336>
  41313e:	jmp    4131be <main@@Base+0xc39e>
  413140:	mov    rdi,r14
  413143:	mov    rsi,r15
  413146:	mov    rdx,r13
  413149:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41314e:	mov    r15,rax
  413151:	cmp    r15,r13
  413154:	je     4131be <main@@Base+0xc39e>
  413156:	movzx  eax,BYTE PTR [r15]
  41315a:	cmp    al,0x2c
  41315c:	jne    413263 <main@@Base+0xc443>
  413162:	lea    rsi,[r15+0x1]
  413166:	mov    rax,r13
  413169:	sub    rax,rsi
  41316c:	cmp    rax,0x2
  413170:	jl     41318e <main@@Base+0xc36e>
  413172:	cmp    BYTE PTR [rsi],0x20
  413175:	jg     41319c <main@@Base+0xc37c>
  413177:	jne    41318e <main@@Base+0xc36e>
  413179:	cmp    BYTE PTR [r15+0x2],0x20
  41317e:	jle    41318e <main@@Base+0xc36e>
  413180:	add    r15,0x2
  413184:	mov    rsi,r15
  413187:	cmp    rsi,r13
  41318a:	jne    4131a1 <main@@Base+0xc381>
  41318c:	jmp    4131e4 <main@@Base+0xc3c4>
  41318e:	mov    rdi,r14
  413191:	mov    rdx,r13
  413194:	call   422710 <flatcc_json_parser_space_ext@@Base>
  413199:	mov    rsi,rax
  41319c:	cmp    rsi,r13
  41319f:	je     4131e4 <main@@Base+0xc3c4>
  4131a1:	cmp    BYTE PTR [rsi],0x7d
  4131a4:	jne    41287a <main@@Base+0xba5a>
  4131aa:	jmp    4131ef <main@@Base+0xc3cf>
  4131ac:	mov    BYTE PTR [rsp+0xb],bl
  4131b0:	cmp    r12,r15
  4131b3:	jne    4130ed <main@@Base+0xc2cd>
  4131b9:	jmp    4130b9 <main@@Base+0xc299>
  4131be:	mov    rbx,r13
  4131c1:	cmp    DWORD PTR [r14+0x1c],0x0
  4131c6:	jne    4126b5 <main@@Base+0xb895>
  4131cc:	mov    rdi,QWORD PTR [r14]
  4131cf:	call   41e6d0 <flatcc_builder_end_table@@Base>
  4131d4:	mov    DWORD PTR [rbp+0x0],eax
  4131d7:	test   eax,eax
  4131d9:	jne    4126cb <main@@Base+0xb8ab>
  4131df:	jmp    4126b5 <main@@Base+0xb895>
  4131e4:	mov    rdi,r14
  4131e7:	mov    rsi,r13
  4131ea:	jmp    4132c9 <main@@Base+0xc4a9>
  4131ef:	lea    rbx,[rsi+0x1]
  4131f3:	mov    rax,r13
  4131f6:	sub    rax,rbx
  4131f9:	cmp    rax,0x2
  4131fd:	jl     4132a0 <main@@Base+0xc480>
  413203:	cmp    BYTE PTR [rbx],0x20
  413206:	jg     4126aa <main@@Base+0xb88a>
  41320c:	jne    4132a0 <main@@Base+0xc480>
  413212:	cmp    BYTE PTR [rsi+0x2],0x20
  413216:	jle    4132a0 <main@@Base+0xc480>
  41321c:	add    rsi,0x2
  413220:	mov    rbx,rsi
  413223:	cmp    DWORD PTR [r14+0x1c],0x0
  413228:	jne    4126b5 <main@@Base+0xb895>
  41322e:	jmp    4131cc <main@@Base+0xc3ac>
  413230:	cmp    cl,0x7d
  413233:	jne    4132bb <main@@Base+0xc49b>
  413239:	lea    rbx,[rax+0x1]
  41323d:	mov    rcx,r13
  413240:	sub    rcx,rbx
  413243:	cmp    rcx,0x2
  413247:	jl     4132a0 <main@@Base+0xc480>
  413249:	cmp    BYTE PTR [rbx],0x20
  41324c:	jg     4126aa <main@@Base+0xb88a>
  413252:	jne    4132a0 <main@@Base+0xc480>
  413254:	cmp    BYTE PTR [rax+0x2],0x20
  413258:	jle    4132a0 <main@@Base+0xc480>
  41325a:	add    rax,0x2
  41325e:	jmp    4126a7 <main@@Base+0xb887>
  413263:	cmp    al,0x7d
  413265:	jne    4132c3 <main@@Base+0xc4a3>
  413267:	lea    rbx,[r15+0x1]
  41326b:	mov    rax,r13
  41326e:	sub    rax,rbx
  413271:	cmp    rax,0x2
  413275:	jl     4132a0 <main@@Base+0xc480>
  413277:	cmp    BYTE PTR [rbx],0x20
  41327a:	jg     4126aa <main@@Base+0xb88a>
  413280:	jne    4132a0 <main@@Base+0xc480>
  413282:	cmp    BYTE PTR [r15+0x2],0x20
  413287:	jle    4132a0 <main@@Base+0xc480>
  413289:	add    r15,0x2
  41328d:	mov    rbx,r15
  413290:	cmp    DWORD PTR [r14+0x1c],0x0
  413295:	jne    4126b5 <main@@Base+0xb895>
  41329b:	jmp    4131cc <main@@Base+0xc3ac>
  4132a0:	mov    rdi,r14
  4132a3:	mov    rsi,rbx
  4132a6:	mov    rdx,r13
  4132a9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4132ae:	jmp    4126a7 <main@@Base+0xb887>
  4132b3:	mov    rbx,r15
  4132b6:	jmp    4126b5 <main@@Base+0xb895>
  4132bb:	mov    rdi,r14
  4132be:	mov    rsi,rax
  4132c1:	jmp    4132c9 <main@@Base+0xc4a9>
  4132c3:	mov    rdi,r14
  4132c6:	mov    rsi,r15
  4132c9:	mov    rdx,r13
  4132cc:	mov    ecx,0xa
  4132d1:	jmp    4126a2 <main@@Base+0xb882>
  4132d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132e0:	push   rbp
  4132e1:	push   r15
  4132e3:	push   r14
  4132e5:	push   r13
  4132e7:	push   r12
  4132e9:	push   rbx
  4132ea:	push   rax
  4132eb:	mov    rbp,rcx
  4132ee:	mov    rbx,rsi
  4132f1:	mov    rcx,rdx
  4132f4:	sub    rcx,rsi
  4132f7:	cmp    rcx,0x8
  4132fb:	jb     413304 <main@@Base+0xc4e4>
  4132fd:	movbe  r14,QWORD PTR [rbx]
  413302:	jmp    413373 <main@@Base+0xc553>
  413304:	dec    rcx
  413307:	cmp    rcx,0x6
  41330b:	ja     41348e <main@@Base+0xc66e>
  413311:	xor    eax,eax
  413313:	lea    rsi,[rip+0x1f216]        # 432530 <_IO_stdin_used@@Base+0x530>
  41331a:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41331e:	add    rcx,rsi
  413321:	jmp    rcx
  413323:	movsx  rax,BYTE PTR [rbx+0x6]
  413328:	shl    rax,0x8
  41332c:	movsx  rcx,BYTE PTR [rbx+0x5]
  413331:	shl    rcx,0x10
  413335:	or     rax,rcx
  413338:	movsx  rcx,BYTE PTR [rbx+0x4]
  41333d:	shl    rcx,0x18
  413341:	or     rax,rcx
  413344:	movsx  rcx,BYTE PTR [rbx+0x3]
  413349:	shl    rcx,0x20
  41334d:	or     rax,rcx
  413350:	movsx  rcx,BYTE PTR [rbx+0x2]
  413355:	shl    rcx,0x28
  413359:	or     rax,rcx
  41335c:	movsx  rcx,BYTE PTR [rbx+0x1]
  413361:	shl    rcx,0x30
  413365:	or     rax,rcx
  413368:	movzx  r14d,BYTE PTR [rbx]
  41336c:	shl    r14,0x38
  413370:	or     r14,rax
  413373:	movabs rax,0x4d6f6e7374657200
  41337d:	cmp    r14,rax
  413380:	jae    4133bb <main@@Base+0xc59b>
  413382:	shr    r14,0x28
  413386:	cmp    r14,0x416c74
  41338d:	jne    41348e <main@@Base+0xc66e>
  413393:	mov    r14,r8
  413396:	mov    rsi,rbx
  413399:	mov    ecx,0x3
  41339e:	mov    r8,r9
  4133a1:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4133a6:	cmp    rax,rbx
  4133a9:	je     41348e <main@@Base+0xc66e>
  4133af:	mov    QWORD PTR [r14],0x4
  4133b6:	jmp    413484 <main@@Base+0xc664>
  4133bb:	lea    rcx,[rax+0x32]
  4133bf:	cmp    r14,rcx
  4133c2:	jne    4133ec <main@@Base+0xc5cc>
  4133c4:	mov    r14,r8
  4133c7:	mov    rsi,rbx
  4133ca:	mov    ecx,0x8
  4133cf:	mov    r8,r9
  4133d2:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4133d7:	cmp    rax,rbx
  4133da:	je     41348e <main@@Base+0xc66e>
  4133e0:	mov    QWORD PTR [r14],0x3
  4133e7:	jmp    413484 <main@@Base+0xc664>
  4133ec:	mov    rcx,r14
  4133ef:	and    rcx,0xffffffffffffff00
  4133f6:	cmp    rcx,rax
  4133f9:	jne    413439 <main@@Base+0xc619>
  4133fb:	mov    r13,rdi
  4133fe:	mov    rsi,rbx
  413401:	mov    ecx,0x7
  413406:	mov    QWORD PTR [rsp],rbp
  41340a:	mov    rbp,r8
  41340d:	mov    r8,r9
  413410:	mov    r15,r9
  413413:	mov    r12,rdx
  413416:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41341b:	mov    rdx,r12
  41341e:	mov    rdi,r13
  413421:	mov    r9,r15
  413424:	mov    r8,rbp
  413427:	mov    rbp,QWORD PTR [rsp]
  41342b:	cmp    rax,rbx
  41342e:	je     413439 <main@@Base+0xc619>
  413430:	mov    QWORD PTR [r8],0x1
  413437:	jmp    413484 <main@@Base+0xc664>
  413439:	mov    rax,r14
  41343c:	shr    rax,0x20
  413440:	cmp    rax,0x4e4f4e45
  413446:	jne    4134a0 <main@@Base+0xc680>
  413448:	mov    r13,rdi
  41344b:	mov    rsi,rbx
  41344e:	mov    ecx,0x4
  413453:	mov    QWORD PTR [rsp],rbp
  413457:	mov    rbp,r8
  41345a:	mov    r8,r9
  41345d:	mov    r15,r9
  413460:	mov    r12,rdx
  413463:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  413468:	mov    rdx,r12
  41346b:	mov    rdi,r13
  41346e:	mov    r9,r15
  413471:	mov    r8,rbp
  413474:	mov    rbp,QWORD PTR [rsp]
  413478:	cmp    rax,rbx
  41347b:	je     4134a0 <main@@Base+0xc680>
  41347d:	mov    QWORD PTR [r8],0x0
  413484:	mov    DWORD PTR [rbp+0x0],0x0
  41348b:	mov    rbx,rax
  41348e:	mov    rax,rbx
  413491:	add    rsp,0x8
  413495:	pop    rbx
  413496:	pop    r12
  413498:	pop    r13
  41349a:	pop    r14
  41349c:	pop    r15
  41349e:	pop    rbp
  41349f:	ret    
  4134a0:	movabs rax,0x5465737453696d70
  4134aa:	cmp    r14,rax
  4134ad:	jne    41348e <main@@Base+0xc66e>
  4134af:	lea    rax,[rbx+0x8]
  4134b3:	mov    rsi,rdx
  4134b6:	sub    rsi,rax
  4134b9:	cmp    rsi,0x8
  4134bd:	jb     4134c6 <main@@Base+0xc6a6>
  4134bf:	movbe  rax,QWORD PTR [rax]
  4134c4:	jmp    413530 <main@@Base+0xc710>
  4134c6:	dec    rsi
  4134c9:	cmp    rsi,0x6
  4134cd:	ja     41348e <main@@Base+0xc66e>
  4134cf:	xor    ecx,ecx
  4134d1:	lea    r10,[rip+0x1f074]        # 43254c <_IO_stdin_used@@Base+0x54c>
  4134d8:	movsxd rsi,DWORD PTR [r10+rsi*4]
  4134dc:	add    rsi,r10
  4134df:	jmp    rsi
  4134e1:	movsx  rcx,BYTE PTR [rbx+0xe]
  4134e6:	shl    rcx,0x8
  4134ea:	movsx  rsi,BYTE PTR [rbx+0xd]
  4134ef:	shl    rsi,0x10
  4134f3:	or     rcx,rsi
  4134f6:	movsx  rsi,BYTE PTR [rbx+0xc]
  4134fb:	shl    rsi,0x18
  4134ff:	or     rcx,rsi
  413502:	movsx  rsi,BYTE PTR [rbx+0xb]
  413507:	shl    rsi,0x20
  41350b:	or     rcx,rsi
  41350e:	movsx  rsi,BYTE PTR [rbx+0xa]
  413513:	shl    rsi,0x28
  413517:	or     rcx,rsi
  41351a:	movsx  rsi,BYTE PTR [rbx+0x9]
  41351f:	shl    rsi,0x30
  413523:	or     rcx,rsi
  413526:	movzx  eax,BYTE PTR [rax]
  413529:	shl    rax,0x38
  41352d:	or     rax,rcx
  413530:	movabs rcx,0x6c655461626c6557
  41353a:	cmp    rax,rcx
  41353d:	jne    41348e <main@@Base+0xc66e>
  413543:	lea    r15,[rbx+0x10]
  413547:	mov    rcx,rdx
  41354a:	sub    rcx,r15
  41354d:	cmp    rcx,0x8
  413551:	jb     41355a <main@@Base+0xc73a>
  413553:	movbe  rcx,QWORD PTR [r15]
  413558:	jmp    4135c9 <main@@Base+0xc7a9>
  41355a:	dec    rcx
  41355d:	cmp    rcx,0x6
  413561:	ja     41348e <main@@Base+0xc66e>
  413567:	xor    eax,eax
  413569:	lea    rsi,[rip+0x1eff8]        # 432568 <_IO_stdin_used@@Base+0x568>
  413570:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  413574:	add    rcx,rsi
  413577:	jmp    rcx
  413579:	movsx  rax,BYTE PTR [rbx+0x16]
  41357e:	shl    rax,0x8
  413582:	movsx  rcx,BYTE PTR [rbx+0x15]
  413587:	shl    rcx,0x10
  41358b:	or     rax,rcx
  41358e:	movsx  rcx,BYTE PTR [rbx+0x14]
  413593:	shl    rcx,0x18
  413597:	or     rax,rcx
  41359a:	movsx  rcx,BYTE PTR [rbx+0x13]
  41359f:	shl    rcx,0x20
  4135a3:	or     rax,rcx
  4135a6:	movsx  rcx,BYTE PTR [rbx+0x12]
  4135ab:	shl    rcx,0x28
  4135af:	or     rax,rcx
  4135b2:	movsx  rcx,BYTE PTR [rbx+0x11]
  4135b7:	shl    rcx,0x30
  4135bb:	or     rax,rcx
  4135be:	movzx  ecx,BYTE PTR [r15]
  4135c2:	shl    rcx,0x38
  4135c6:	or     rcx,rax
  4135c9:	shr    rcx,0x8
  4135cd:	movabs rax,0x697468456e756d
  4135d7:	cmp    rcx,rax
  4135da:	jne    41348e <main@@Base+0xc66e>
  4135e0:	mov    r14,r8
  4135e3:	mov    rsi,r15
  4135e6:	mov    ecx,0x7
  4135eb:	mov    r8,r9
  4135ee:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4135f3:	cmp    rax,r15
  4135f6:	je     41348e <main@@Base+0xc66e>
  4135fc:	mov    QWORD PTR [r14],0x2
  413603:	jmp    413484 <main@@Base+0xc664>
  413608:	nop    DWORD PTR [rax+rax*1+0x0]
  413610:	push   rbp
  413611:	push   r15
  413613:	push   r14
  413615:	push   r13
  413617:	push   r12
  413619:	push   rbx
  41361a:	sub    rsp,0x38
  41361e:	mov    r14,r8
  413621:	mov    rbp,rcx
  413624:	mov    r12,rdx
  413627:	mov    rbx,rsi
  41362a:	mov    r15,rdi
  41362d:	mov    BYTE PTR [r8],0x0
  413631:	cmp    rsi,rdx
  413634:	je     413656 <main@@Base+0xc836>
  413636:	cmp    BYTE PTR [rbx],0x22
  413639:	jne    413640 <main@@Base+0xc820>
  41363b:	inc    rbx
  41363e:	jmp    413656 <main@@Base+0xc836>
  413640:	mov    rdi,r15
  413643:	mov    rsi,rbx
  413646:	mov    rdx,r12
  413649:	mov    ecx,0x5
  41364e:	call   422690 <flatcc_json_parser_set_error@@Base>
  413653:	mov    rbx,rax
  413656:	mov    rax,r12
  413659:	sub    rax,rbx
  41365c:	cmp    rax,0x2
  413660:	jl     41367c <main@@Base+0xc85c>
  413662:	cmp    BYTE PTR [rbx],0x20
  413665:	jg     41368d <main@@Base+0xc86d>
  413667:	jne    41367c <main@@Base+0xc85c>
  413669:	cmp    BYTE PTR [rbx+0x1],0x20
  41366d:	jle    41367c <main@@Base+0xc85c>
  41366f:	inc    rbx
  413672:	cmp    rbx,r12
  413675:	jne    413696 <main@@Base+0xc876>
  413677:	jmp    413757 <main@@Base+0xc937>
  41367c:	mov    rdi,r15
  41367f:	mov    rsi,rbx
  413682:	mov    rdx,r12
  413685:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41368a:	mov    rbx,rax
  41368d:	cmp    rbx,r12
  413690:	je     413757 <main@@Base+0xc937>
  413696:	lea    rax,[rbp+0x8]
  41369a:	mov    DWORD PTR [rsp+0xc],0x0
  4136a2:	mov    QWORD PTR [rsp+0x20],r14
  4136a7:	mov    QWORD PTR [rsp+0x18],rbp
  4136ac:	mov    QWORD PTR [rsp+0x28],rax
  4136b1:	mov    rbp,QWORD PTR [rbp+0x0]
  4136b5:	mov    r14,rax
  4136b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4136c0:	mov    rdi,r15
  4136c3:	mov    rsi,rbx
  4136c6:	mov    rdx,r12
  4136c9:	lea    rcx,[rsp+0x14]
  4136ce:	lea    r8,[rsp+0x30]
  4136d3:	lea    r9,[rsp+0x10]
  4136d8:	call   rbp
  4136da:	cmp    rax,r12
  4136dd:	je     413757 <main@@Base+0xc937>
  4136df:	mov    r13,rax
  4136e2:	cmp    rax,rbx
  4136e5:	jne    413700 <main@@Base+0xc8e0>
  4136e7:	mov    rbp,QWORD PTR [r14]
  4136ea:	add    r14,0x8
  4136ee:	test   rbp,rbp
  4136f1:	jne    4136c0 <main@@Base+0xc8a0>
  4136f3:	jmp    41375c <main@@Base+0xc93c>
  4136f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136ff:	nop
  413700:	cmp    DWORD PTR [rsp+0x14],0x0
  413705:	je     41371c <main@@Base+0xc8fc>
  413707:	mov    rdi,r15
  41370a:	mov    rsi,r13
  41370d:	mov    rdx,r12
  413710:	mov    ecx,0x8
  413715:	call   422690 <flatcc_json_parser_set_error@@Base>
  41371a:	jmp    41372c <main@@Base+0xc90c>
  41371c:	cmp    QWORD PTR [rsp+0x30],0x0
  413722:	setne  al
  413725:	mov    DWORD PTR [rsp+0xc],eax
  413729:	mov    rax,r13
  41372c:	mov    r14,QWORD PTR [rsp+0x20]
  413731:	mov    rbp,QWORD PTR [rsp+0x18]
  413736:	cmp    rax,r12
  413739:	je     413757 <main@@Base+0xc937>
  41373b:	mov    eax,DWORD PTR [rsp+0xc]
  41373f:	add    BYTE PTR [r14],al
  413742:	cmp    DWORD PTR [rsp+0x10],0x0
  413747:	mov    rbx,r13
  41374a:	mov    rax,QWORD PTR [rsp+0x28]
  41374f:	jne    4136b1 <main@@Base+0xc891>
  413755:	jmp    413772 <main@@Base+0xc952>
  413757:	mov    r13,r12
  41375a:	jmp    413772 <main@@Base+0xc952>
  41375c:	mov    rdi,r15
  41375f:	mov    rsi,rbx
  413762:	mov    rdx,r12
  413765:	mov    ecx,0x17
  41376a:	call   422690 <flatcc_json_parser_set_error@@Base>
  41376f:	mov    r13,rax
  413772:	mov    rax,r13
  413775:	add    rsp,0x38
  413779:	pop    rbx
  41377a:	pop    r12
  41377c:	pop    r13
  41377e:	pop    r14
  413780:	pop    r15
  413782:	pop    rbp
  413783:	ret    
  413784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41378e:	xchg   ax,ax
  413790:	push   rbp
  413791:	push   r15
  413793:	push   r14
  413795:	push   r13
  413797:	push   r12
  413799:	push   rbx
  41379a:	sub    rsp,0x48
  41379e:	mov    rbx,r8
  4137a1:	mov    rbp,rcx
  4137a4:	mov    r13,rdx
  4137a7:	mov    r12,rsi
  4137aa:	mov    r15,rdi
  4137ad:	mov    DWORD PTR [r8],0x0
  4137b4:	cmp    rsi,rdx
  4137b7:	je     4137db <main@@Base+0xc9bb>
  4137b9:	cmp    BYTE PTR [r12],0x22
  4137be:	jne    4137c5 <main@@Base+0xc9a5>
  4137c0:	inc    r12
  4137c3:	jmp    4137db <main@@Base+0xc9bb>
  4137c5:	mov    rdi,r15
  4137c8:	mov    rsi,r12
  4137cb:	mov    rdx,r13
  4137ce:	mov    ecx,0x5
  4137d3:	call   422690 <flatcc_json_parser_set_error@@Base>
  4137d8:	mov    r12,rax
  4137db:	mov    rax,r13
  4137de:	sub    rax,r12
  4137e1:	cmp    rax,0x2
  4137e5:	jl     413805 <main@@Base+0xc9e5>
  4137e7:	cmp    BYTE PTR [r12],0x20
  4137ec:	jg     413816 <main@@Base+0xc9f6>
  4137ee:	jne    413805 <main@@Base+0xc9e5>
  4137f0:	cmp    BYTE PTR [r12+0x1],0x20
  4137f6:	jle    413805 <main@@Base+0xc9e5>
  4137f8:	inc    r12
  4137fb:	cmp    r12,r13
  4137fe:	jne    41381f <main@@Base+0xc9ff>
  413800:	jmp    4138ea <main@@Base+0xcaca>
  413805:	mov    rdi,r15
  413808:	mov    rsi,r12
  41380b:	mov    rdx,r13
  41380e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  413813:	mov    r12,rax
  413816:	cmp    r12,r13
  413819:	je     4138ea <main@@Base+0xcaca>
  41381f:	mov    QWORD PTR [rsp+0x20],rbx
  413824:	lea    rdx,[rbp+0x8]
  413828:	lea    r14,[rsp+0x8]
  41382d:	vbroadcastss xmm0,DWORD PTR [rip+0x1e7da]        # 432010 <_IO_stdin_used@@Base+0x10>
  413836:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41383c:	mov    QWORD PTR [rsp+0x18],rbp
  413841:	mov    QWORD PTR [rsp+0x10],rdx
  413846:	mov    rbx,QWORD PTR [rbp+0x0]
  41384a:	mov    rbp,rdx
  41384d:	nop    DWORD PTR [rax]
  413850:	mov    rdi,r15
  413853:	mov    rsi,r12
  413856:	mov    rdx,r13
  413859:	lea    rcx,[rsp+0xc]
  41385e:	lea    r8,[rsp+0x28]
  413863:	mov    r9,r14
  413866:	call   rbx
  413868:	cmp    rax,r13
  41386b:	je     4138ea <main@@Base+0xcaca>
  41386d:	cmp    rax,r12
  413870:	jne    413890 <main@@Base+0xca70>
  413872:	mov    rbx,QWORD PTR [rbp+0x0]
  413876:	add    rbp,0x8
  41387a:	test   rbx,rbx
  41387d:	jne    413850 <main@@Base+0xca30>
  41387f:	jmp    4138ef <main@@Base+0xcacf>
  413881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41388b:	nop    DWORD PTR [rax+rax*1+0x0]
  413890:	mov    rcx,QWORD PTR [rsp+0x28]
  413895:	test   rcx,rcx
  413898:	js     4138a1 <main@@Base+0xca81>
  41389a:	vcvtsi2ss xmm0,xmm1,rcx
  41389f:	jmp    4138b6 <main@@Base+0xca96>
  4138a1:	mov    rdx,rcx
  4138a4:	shr    rdx,1
  4138a7:	and    ecx,0x1
  4138aa:	or     rcx,rdx
  4138ad:	vcvtsi2ss xmm0,xmm1,rcx
  4138b2:	vaddss xmm0,xmm0,xmm0
  4138b6:	mov    rcx,QWORD PTR [rsp+0x20]
  4138bb:	mov    rbp,QWORD PTR [rsp+0x18]
  4138c0:	mov    rdx,QWORD PTR [rsp+0x10]
  4138c5:	cmp    DWORD PTR [rsp+0xc],0x0
  4138ca:	je     4138d2 <main@@Base+0xcab2>
  4138cc:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  4138d2:	vaddss xmm0,xmm0,DWORD PTR [rcx]
  4138d6:	vmovss DWORD PTR [rcx],xmm0
  4138da:	cmp    DWORD PTR [rsp+0x8],0x0
  4138df:	mov    r12,rax
  4138e2:	jne    413846 <main@@Base+0xca26>
  4138e8:	jmp    413902 <main@@Base+0xcae2>
  4138ea:	mov    rax,r13
  4138ed:	jmp    413902 <main@@Base+0xcae2>
  4138ef:	mov    rdi,r15
  4138f2:	mov    rsi,r12
  4138f5:	mov    rdx,r13
  4138f8:	mov    ecx,0x17
  4138fd:	call   422690 <flatcc_json_parser_set_error@@Base>
  413902:	add    rsp,0x48
  413906:	pop    rbx
  413907:	pop    r12
  413909:	pop    r13
  41390b:	pop    r14
  41390d:	pop    r15
  41390f:	pop    rbp
  413910:	ret    
  413911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41391b:	nop    DWORD PTR [rax+rax*1+0x0]
  413920:	push   rbp
  413921:	push   r15
  413923:	push   r14
  413925:	push   r13
  413927:	push   r12
  413929:	push   rbx
  41392a:	sub    rsp,0x38
  41392e:	mov    r14,r8
  413931:	mov    rbp,rcx
  413934:	mov    r12,rdx
  413937:	mov    rbx,rsi
  41393a:	mov    r15,rdi
  41393d:	mov    DWORD PTR [r8],0x0
  413944:	cmp    rsi,rdx
  413947:	je     413969 <main@@Base+0xcb49>
  413949:	cmp    BYTE PTR [rbx],0x22
  41394c:	jne    413953 <main@@Base+0xcb33>
  41394e:	inc    rbx
  413951:	jmp    413969 <main@@Base+0xcb49>
  413953:	mov    rdi,r15
  413956:	mov    rsi,rbx
  413959:	mov    rdx,r12
  41395c:	mov    ecx,0x5
  413961:	call   422690 <flatcc_json_parser_set_error@@Base>
  413966:	mov    rbx,rax
  413969:	mov    rax,r12
  41396c:	sub    rax,rbx
  41396f:	cmp    rax,0x2
  413973:	jl     41398f <main@@Base+0xcb6f>
  413975:	cmp    BYTE PTR [rbx],0x20
  413978:	jg     4139a0 <main@@Base+0xcb80>
  41397a:	jne    41398f <main@@Base+0xcb6f>
  41397c:	cmp    BYTE PTR [rbx+0x1],0x20
  413980:	jle    41398f <main@@Base+0xcb6f>
  413982:	inc    rbx
  413985:	cmp    rbx,r12
  413988:	jne    4139a9 <main@@Base+0xcb89>
  41398a:	jmp    413a95 <main@@Base+0xcc75>
  41398f:	mov    rdi,r15
  413992:	mov    rsi,rbx
  413995:	mov    rdx,r12
  413998:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41399d:	mov    rbx,rax
  4139a0:	cmp    rbx,r12
  4139a3:	je     413a95 <main@@Base+0xcc75>
  4139a9:	lea    rax,[rbp+0x8]
  4139ad:	xor    ecx,ecx
  4139af:	mov    QWORD PTR [rsp+0x20],r14
  4139b4:	mov    QWORD PTR [rsp+0x18],rbp
  4139b9:	mov    QWORD PTR [rsp+0x28],rax
  4139be:	mov    DWORD PTR [rsp+0xc],ecx
  4139c2:	mov    rbp,QWORD PTR [rbp+0x0]
  4139c6:	mov    r14,rax
  4139c9:	nop    DWORD PTR [rax+0x0]
  4139d0:	mov    rdi,r15
  4139d3:	mov    rsi,rbx
  4139d6:	mov    rdx,r12
  4139d9:	lea    rcx,[rsp+0x14]
  4139de:	lea    r8,[rsp+0x30]
  4139e3:	lea    r9,[rsp+0x10]
  4139e8:	call   rbp
  4139ea:	cmp    rax,r12
  4139ed:	je     413a95 <main@@Base+0xcc75>
  4139f3:	mov    r13,rax
  4139f6:	cmp    rax,rbx
  4139f9:	jne    413a10 <main@@Base+0xcbf0>
  4139fb:	mov    rbp,QWORD PTR [r14]
  4139fe:	add    r14,0x8
  413a02:	test   rbp,rbp
  413a05:	jne    4139d0 <main@@Base+0xcbb0>
  413a07:	jmp    413a9a <main@@Base+0xcc7a>
  413a0c:	nop    DWORD PTR [rax+0x0]
  413a10:	mov    rax,QWORD PTR [rsp+0x30]
  413a15:	cmp    DWORD PTR [rsp+0x14],0x0
  413a1a:	je     413a40 <main@@Base+0xcc20>
  413a1c:	mov    ecx,0x80000001
  413a21:	cmp    rax,rcx
  413a24:	mov    r14,QWORD PTR [rsp+0x20]
  413a29:	mov    rbp,QWORD PTR [rsp+0x18]
  413a2e:	jb     413a70 <main@@Base+0xcc50>
  413a30:	mov    rdi,r15
  413a33:	mov    rsi,r13
  413a36:	mov    rdx,r12
  413a39:	mov    ecx,0x8
  413a3e:	jmp    413a60 <main@@Base+0xcc40>
  413a40:	test   rax,0xffffffff80000000
  413a46:	mov    r14,QWORD PTR [rsp+0x20]
  413a4b:	mov    rbp,QWORD PTR [rsp+0x18]
  413a50:	je     413a73 <main@@Base+0xcc53>
  413a52:	mov    rdi,r15
  413a55:	mov    rsi,r13
  413a58:	mov    rdx,r12
  413a5b:	mov    ecx,0x7
  413a60:	call   422690 <flatcc_json_parser_set_error@@Base>
  413a65:	mov    ecx,DWORD PTR [rsp+0xc]
  413a69:	cmp    rax,r12
  413a6c:	jne    413a7d <main@@Base+0xcc5d>
  413a6e:	jmp    413a95 <main@@Base+0xcc75>
  413a70:	neg    rax
  413a73:	mov    ecx,eax
  413a75:	mov    rax,r13
  413a78:	cmp    rax,r12
  413a7b:	je     413a95 <main@@Base+0xcc75>
  413a7d:	add    DWORD PTR [r14],ecx
  413a80:	cmp    DWORD PTR [rsp+0x10],0x0
  413a85:	mov    rbx,r13
  413a88:	mov    rax,QWORD PTR [rsp+0x28]
  413a8d:	jne    4139be <main@@Base+0xcb9e>
  413a93:	jmp    413ab0 <main@@Base+0xcc90>
  413a95:	mov    r13,r12
  413a98:	jmp    413ab0 <main@@Base+0xcc90>
  413a9a:	mov    rdi,r15
  413a9d:	mov    rsi,rbx
  413aa0:	mov    rdx,r12
  413aa3:	mov    ecx,0x17
  413aa8:	call   422690 <flatcc_json_parser_set_error@@Base>
  413aad:	mov    r13,rax
  413ab0:	mov    rax,r13
  413ab3:	add    rsp,0x38
  413ab7:	pop    rbx
  413ab8:	pop    r12
  413aba:	pop    r13
  413abc:	pop    r14
  413abe:	pop    r15
  413ac0:	pop    rbp
  413ac1:	ret    
  413ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413acc:	nop    DWORD PTR [rax+0x0]
  413ad0:	push   rbp
  413ad1:	push   r15
  413ad3:	push   r14
  413ad5:	push   r13
  413ad7:	push   r12
  413ad9:	push   rbx
  413ada:	sub    rsp,0x38
  413ade:	mov    r14,r8
  413ae1:	mov    rbp,rcx
  413ae4:	mov    r12,rdx
  413ae7:	mov    rbx,rsi
  413aea:	mov    r15,rdi
  413aed:	mov    QWORD PTR [r8],0x0
  413af4:	cmp    rsi,rdx
  413af7:	je     413b19 <main@@Base+0xccf9>
  413af9:	cmp    BYTE PTR [rbx],0x22
  413afc:	jne    413b03 <main@@Base+0xcce3>
  413afe:	inc    rbx
  413b01:	jmp    413b19 <main@@Base+0xccf9>
  413b03:	mov    rdi,r15
  413b06:	mov    rsi,rbx
  413b09:	mov    rdx,r12
  413b0c:	mov    ecx,0x5
  413b11:	call   422690 <flatcc_json_parser_set_error@@Base>
  413b16:	mov    rbx,rax
  413b19:	mov    rax,r12
  413b1c:	sub    rax,rbx
  413b1f:	cmp    rax,0x2
  413b23:	jl     413b3f <main@@Base+0xcd1f>
  413b25:	cmp    BYTE PTR [rbx],0x20
  413b28:	jg     413b50 <main@@Base+0xcd30>
  413b2a:	jne    413b3f <main@@Base+0xcd1f>
  413b2c:	cmp    BYTE PTR [rbx+0x1],0x20
  413b30:	jle    413b3f <main@@Base+0xcd1f>
  413b32:	inc    rbx
  413b35:	cmp    rbx,r12
  413b38:	jne    413b59 <main@@Base+0xcd39>
  413b3a:	jmp    413c49 <main@@Base+0xce29>
  413b3f:	mov    rdi,r15
  413b42:	mov    rsi,rbx
  413b45:	mov    rdx,r12
  413b48:	call   422710 <flatcc_json_parser_space_ext@@Base>
  413b4d:	mov    rbx,rax
  413b50:	cmp    rbx,r12
  413b53:	je     413c49 <main@@Base+0xce29>
  413b59:	lea    rax,[rbp+0x8]
  413b5d:	xor    ecx,ecx
  413b5f:	mov    QWORD PTR [rsp+0x18],r14
  413b64:	mov    QWORD PTR [rsp+0x10],rbp
  413b69:	mov    QWORD PTR [rsp+0x28],rax
  413b6e:	mov    QWORD PTR [rsp+0x20],rcx
  413b73:	mov    rbp,QWORD PTR [rbp+0x0]
  413b77:	mov    r14,rax
  413b7a:	nop    WORD PTR [rax+rax*1+0x0]
  413b80:	mov    rdi,r15
  413b83:	mov    rsi,rbx
  413b86:	mov    rdx,r12
  413b89:	lea    rcx,[rsp+0xc]
  413b8e:	lea    r8,[rsp+0x30]
  413b93:	lea    r9,[rsp+0x8]
  413b98:	call   rbp
  413b9a:	cmp    rax,r12
  413b9d:	je     413c49 <main@@Base+0xce29>
  413ba3:	mov    r13,rax
  413ba6:	cmp    rax,rbx
  413ba9:	jne    413bc0 <main@@Base+0xcda0>
  413bab:	mov    rbp,QWORD PTR [r14]
  413bae:	add    r14,0x8
  413bb2:	test   rbp,rbp
  413bb5:	jne    413b80 <main@@Base+0xcd60>
  413bb7:	jmp    413c4e <main@@Base+0xce2e>
  413bbc:	nop    DWORD PTR [rax+0x0]
  413bc0:	mov    rcx,QWORD PTR [rsp+0x30]
  413bc5:	cmp    DWORD PTR [rsp+0xc],0x0
  413bca:	je     413bf5 <main@@Base+0xcdd5>
  413bcc:	movabs rax,0x8000000000000001
  413bd6:	cmp    rcx,rax
  413bd9:	mov    r14,QWORD PTR [rsp+0x18]
  413bde:	mov    rbp,QWORD PTR [rsp+0x10]
  413be3:	jb     413c26 <main@@Base+0xce06>
  413be5:	mov    rdi,r15
  413be8:	mov    rsi,r13
  413beb:	mov    rdx,r12
  413bee:	mov    ecx,0x8
  413bf3:	jmp    413c15 <main@@Base+0xcdf5>
  413bf5:	mov    rax,r13
  413bf8:	test   rcx,rcx
  413bfb:	mov    r14,QWORD PTR [rsp+0x18]
  413c00:	mov    rbp,QWORD PTR [rsp+0x10]
  413c05:	jns    413c1f <main@@Base+0xcdff>
  413c07:	mov    rdi,r15
  413c0a:	mov    rsi,r13
  413c0d:	mov    rdx,r12
  413c10:	mov    ecx,0x7
  413c15:	call   422690 <flatcc_json_parser_set_error@@Base>
  413c1a:	mov    rcx,QWORD PTR [rsp+0x20]
  413c1f:	cmp    rax,r12
  413c22:	jne    413c31 <main@@Base+0xce11>
  413c24:	jmp    413c49 <main@@Base+0xce29>
  413c26:	neg    rcx
  413c29:	mov    rax,r13
  413c2c:	cmp    rax,r12
  413c2f:	je     413c49 <main@@Base+0xce29>
  413c31:	add    QWORD PTR [r14],rcx
  413c34:	cmp    DWORD PTR [rsp+0x8],0x0
  413c39:	mov    rbx,r13
  413c3c:	mov    rax,QWORD PTR [rsp+0x28]
  413c41:	jne    413b6e <main@@Base+0xcd4e>
  413c47:	jmp    413c64 <main@@Base+0xce44>
  413c49:	mov    r13,r12
  413c4c:	jmp    413c64 <main@@Base+0xce44>
  413c4e:	mov    rdi,r15
  413c51:	mov    rsi,rbx
  413c54:	mov    rdx,r12
  413c57:	mov    ecx,0x17
  413c5c:	call   422690 <flatcc_json_parser_set_error@@Base>
  413c61:	mov    r13,rax
  413c64:	mov    rax,r13
  413c67:	add    rsp,0x38
  413c6b:	pop    rbx
  413c6c:	pop    r12
  413c6e:	pop    r13
  413c70:	pop    r14
  413c72:	pop    r15
  413c74:	pop    rbp
  413c75:	ret    
  413c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c80:	push   rbp
  413c81:	push   r15
  413c83:	push   r14
  413c85:	push   r13
  413c87:	push   r12
  413c89:	push   rbx
  413c8a:	sub    rsp,0x38
  413c8e:	mov    r14,r8
  413c91:	mov    rbp,rcx
  413c94:	mov    r12,rdx
  413c97:	mov    rbx,rsi
  413c9a:	mov    r15,rdi
  413c9d:	mov    DWORD PTR [r8],0x0
  413ca4:	cmp    rsi,rdx
  413ca7:	je     413cc9 <main@@Base+0xcea9>
  413ca9:	cmp    BYTE PTR [rbx],0x22
  413cac:	jne    413cb3 <main@@Base+0xce93>
  413cae:	inc    rbx
  413cb1:	jmp    413cc9 <main@@Base+0xcea9>
  413cb3:	mov    rdi,r15
  413cb6:	mov    rsi,rbx
  413cb9:	mov    rdx,r12
  413cbc:	mov    ecx,0x5
  413cc1:	call   422690 <flatcc_json_parser_set_error@@Base>
  413cc6:	mov    rbx,rax
  413cc9:	mov    rax,r12
  413ccc:	sub    rax,rbx
  413ccf:	cmp    rax,0x2
  413cd3:	jl     413cef <main@@Base+0xcecf>
  413cd5:	cmp    BYTE PTR [rbx],0x20
  413cd8:	jg     413d00 <main@@Base+0xcee0>
  413cda:	jne    413cef <main@@Base+0xcecf>
  413cdc:	cmp    BYTE PTR [rbx+0x1],0x20
  413ce0:	jle    413cef <main@@Base+0xcecf>
  413ce2:	inc    rbx
  413ce5:	cmp    rbx,r12
  413ce8:	jne    413d09 <main@@Base+0xcee9>
  413cea:	jmp    413dfc <main@@Base+0xcfdc>
  413cef:	mov    rdi,r15
  413cf2:	mov    rsi,rbx
  413cf5:	mov    rdx,r12
  413cf8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  413cfd:	mov    rbx,rax
  413d00:	cmp    rbx,r12
  413d03:	je     413dfc <main@@Base+0xcfdc>
  413d09:	lea    rax,[rbp+0x8]
  413d0d:	mov    DWORD PTR [rsp+0xc],0x0
  413d15:	mov    QWORD PTR [rsp+0x20],r14
  413d1a:	mov    QWORD PTR [rsp+0x18],rbp
  413d1f:	mov    QWORD PTR [rsp+0x28],rax
  413d24:	mov    rbp,QWORD PTR [rbp+0x0]
  413d28:	mov    r14,rax
  413d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  413d30:	mov    rdi,r15
  413d33:	mov    rsi,rbx
  413d36:	mov    rdx,r12
  413d39:	lea    rcx,[rsp+0x14]
  413d3e:	lea    r8,[rsp+0x30]
  413d43:	lea    r9,[rsp+0x10]
  413d48:	call   rbp
  413d4a:	cmp    rax,r12
  413d4d:	je     413dfc <main@@Base+0xcfdc>
  413d53:	mov    r13,rax
  413d56:	cmp    rax,rbx
  413d59:	jne    413d70 <main@@Base+0xcf50>
  413d5b:	mov    rbp,QWORD PTR [r14]
  413d5e:	add    r14,0x8
  413d62:	test   rbp,rbp
  413d65:	jne    413d30 <main@@Base+0xcf10>
  413d67:	jmp    413e01 <main@@Base+0xcfe1>
  413d6c:	nop    DWORD PTR [rax+0x0]
  413d70:	cmp    DWORD PTR [rsp+0x14],0x0
  413d75:	je     413d9b <main@@Base+0xcf7b>
  413d77:	mov    rdi,r15
  413d7a:	mov    rsi,r13
  413d7d:	mov    rdx,r12
  413d80:	mov    ecx,0x8
  413d85:	call   422690 <flatcc_json_parser_set_error@@Base>
  413d8a:	mov    r14,QWORD PTR [rsp+0x20]
  413d8f:	mov    rbp,QWORD PTR [rsp+0x18]
  413d94:	cmp    rax,r12
  413d97:	jne    413de0 <main@@Base+0xcfc0>
  413d99:	jmp    413dfc <main@@Base+0xcfdc>
  413d9b:	mov    rax,QWORD PTR [rsp+0x30]
  413da0:	mov    rcx,rax
  413da3:	shr    rcx,0x20
  413da7:	mov    r14,QWORD PTR [rsp+0x20]
  413dac:	mov    rbp,QWORD PTR [rsp+0x18]
  413db1:	je     413dcd <main@@Base+0xcfad>
  413db3:	mov    rdi,r15
  413db6:	mov    rsi,r13
  413db9:	mov    rdx,r12
  413dbc:	mov    ecx,0x7
  413dc1:	call   422690 <flatcc_json_parser_set_error@@Base>
  413dc6:	cmp    rax,r12
  413dc9:	jne    413de0 <main@@Base+0xcfc0>
  413dcb:	jmp    413dfc <main@@Base+0xcfdc>
  413dcd:	mov    DWORD PTR [rsp+0xc],eax
  413dd1:	mov    rax,r13
  413dd4:	cmp    rax,r12
  413dd7:	je     413dfc <main@@Base+0xcfdc>
  413dd9:	nop    DWORD PTR [rax+0x0]
  413de0:	mov    eax,DWORD PTR [rsp+0xc]
  413de4:	add    DWORD PTR [r14],eax
  413de7:	cmp    DWORD PTR [rsp+0x10],0x0
  413dec:	mov    rbx,r13
  413def:	mov    rax,QWORD PTR [rsp+0x28]
  413df4:	jne    413d24 <main@@Base+0xcf04>
  413dfa:	jmp    413e17 <main@@Base+0xcff7>
  413dfc:	mov    r13,r12
  413dff:	jmp    413e17 <main@@Base+0xcff7>
  413e01:	mov    rdi,r15
  413e04:	mov    rsi,rbx
  413e07:	mov    rdx,r12
  413e0a:	mov    ecx,0x17
  413e0f:	call   422690 <flatcc_json_parser_set_error@@Base>
  413e14:	mov    r13,rax
  413e17:	mov    rax,r13
  413e1a:	add    rsp,0x38
  413e1e:	pop    rbx
  413e1f:	pop    r12
  413e21:	pop    r13
  413e23:	pop    r14
  413e25:	pop    r15
  413e27:	pop    rbp
  413e28:	ret    
  413e29:	nop    DWORD PTR [rax+0x0]
  413e30:	push   rbp
  413e31:	push   r15
  413e33:	push   r14
  413e35:	push   r13
  413e37:	push   r12
  413e39:	push   rbx
  413e3a:	sub    rsp,0x38
  413e3e:	mov    r14,r8
  413e41:	mov    rbp,rcx
  413e44:	mov    r12,rdx
  413e47:	mov    rbx,rsi
  413e4a:	mov    r15,rdi
  413e4d:	mov    QWORD PTR [r8],0x0
  413e54:	cmp    rsi,rdx
  413e57:	je     413e79 <main@@Base+0xd059>
  413e59:	cmp    BYTE PTR [rbx],0x22
  413e5c:	jne    413e63 <main@@Base+0xd043>
  413e5e:	inc    rbx
  413e61:	jmp    413e79 <main@@Base+0xd059>
  413e63:	mov    rdi,r15
  413e66:	mov    rsi,rbx
  413e69:	mov    rdx,r12
  413e6c:	mov    ecx,0x5
  413e71:	call   422690 <flatcc_json_parser_set_error@@Base>
  413e76:	mov    rbx,rax
  413e79:	mov    rax,r12
  413e7c:	sub    rax,rbx
  413e7f:	cmp    rax,0x2
  413e83:	jl     413e9f <main@@Base+0xd07f>
  413e85:	cmp    BYTE PTR [rbx],0x20
  413e88:	jg     413eb0 <main@@Base+0xd090>
  413e8a:	jne    413e9f <main@@Base+0xd07f>
  413e8c:	cmp    BYTE PTR [rbx+0x1],0x20
  413e90:	jle    413e9f <main@@Base+0xd07f>
  413e92:	inc    rbx
  413e95:	cmp    rbx,r12
  413e98:	jne    413eb9 <main@@Base+0xd099>
  413e9a:	jmp    413f75 <main@@Base+0xd155>
  413e9f:	mov    rdi,r15
  413ea2:	mov    rsi,rbx
  413ea5:	mov    rdx,r12
  413ea8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  413ead:	mov    rbx,rax
  413eb0:	cmp    rbx,r12
  413eb3:	je     413f75 <main@@Base+0xd155>
  413eb9:	lea    rax,[rbp+0x8]
  413ebd:	xor    ecx,ecx
  413ebf:	mov    QWORD PTR [rsp+0x20],rcx
  413ec4:	mov    QWORD PTR [rsp+0x18],r14
  413ec9:	mov    QWORD PTR [rsp+0x10],rbp
  413ece:	mov    QWORD PTR [rsp+0x28],rax
  413ed3:	mov    rbp,QWORD PTR [rbp+0x0]
  413ed7:	mov    r14,rax
  413eda:	nop    WORD PTR [rax+rax*1+0x0]
  413ee0:	mov    rdi,r15
  413ee3:	mov    rsi,rbx
  413ee6:	mov    rdx,r12
  413ee9:	lea    rcx,[rsp+0xc]
  413eee:	lea    r8,[rsp+0x30]
  413ef3:	lea    r9,[rsp+0x8]
  413ef8:	call   rbp
  413efa:	cmp    rax,r12
  413efd:	je     413f75 <main@@Base+0xd155>
  413eff:	mov    r13,rax
  413f02:	cmp    rax,rbx
  413f05:	jne    413f20 <main@@Base+0xd100>
  413f07:	mov    rbp,QWORD PTR [r14]
  413f0a:	add    r14,0x8
  413f0e:	test   rbp,rbp
  413f11:	jne    413ee0 <main@@Base+0xd0c0>
  413f13:	jmp    413f7a <main@@Base+0xd15a>
  413f15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f1f:	nop
  413f20:	cmp    DWORD PTR [rsp+0xc],0x0
  413f25:	je     413f3c <main@@Base+0xd11c>
  413f27:	mov    rdi,r15
  413f2a:	mov    rsi,r13
  413f2d:	mov    rdx,r12
  413f30:	mov    ecx,0x8
  413f35:	call   422690 <flatcc_json_parser_set_error@@Base>
  413f3a:	jmp    413f49 <main@@Base+0xd129>
  413f3c:	mov    rax,QWORD PTR [rsp+0x30]
  413f41:	mov    QWORD PTR [rsp+0x20],rax
  413f46:	mov    rax,r13
  413f49:	mov    r14,QWORD PTR [rsp+0x18]
  413f4e:	mov    rbp,QWORD PTR [rsp+0x10]
  413f53:	cmp    rax,r12
  413f56:	je     413f75 <main@@Base+0xd155>
  413f58:	mov    rax,QWORD PTR [rsp+0x20]
  413f5d:	add    QWORD PTR [r14],rax
  413f60:	cmp    DWORD PTR [rsp+0x8],0x0
  413f65:	mov    rbx,r13
  413f68:	mov    rax,QWORD PTR [rsp+0x28]
  413f6d:	jne    413ed3 <main@@Base+0xd0b3>
  413f73:	jmp    413f90 <main@@Base+0xd170>
  413f75:	mov    r13,r12
  413f78:	jmp    413f90 <main@@Base+0xd170>
  413f7a:	mov    rdi,r15
  413f7d:	mov    rsi,rbx
  413f80:	mov    rdx,r12
  413f83:	mov    ecx,0x17
  413f88:	call   422690 <flatcc_json_parser_set_error@@Base>
  413f8d:	mov    r13,rax
  413f90:	mov    rax,r13
  413f93:	add    rsp,0x38
  413f97:	pop    rbx
  413f98:	pop    r12
  413f9a:	pop    r13
  413f9c:	pop    r14
  413f9e:	pop    r15
  413fa0:	pop    rbp
  413fa1:	ret    
  413fa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fac:	nop    DWORD PTR [rax+0x0]
  413fb0:	push   rbp
  413fb1:	push   r15
  413fb3:	push   r14
  413fb5:	push   r13
  413fb7:	push   r12
  413fb9:	push   rbx
  413fba:	sub    rsp,0x28
  413fbe:	mov    rbx,r8
  413fc1:	mov    rbp,rcx
  413fc4:	mov    r13,rdx
  413fc7:	mov    r12,rsi
  413fca:	mov    r15,rdi
  413fcd:	mov    QWORD PTR [r8],0x0
  413fd4:	cmp    rsi,rdx
  413fd7:	je     413ffb <main@@Base+0xd1db>
  413fd9:	cmp    BYTE PTR [r12],0x22
  413fde:	jne    413fe5 <main@@Base+0xd1c5>
  413fe0:	inc    r12
  413fe3:	jmp    413ffb <main@@Base+0xd1db>
  413fe5:	mov    rdi,r15
  413fe8:	mov    rsi,r12
  413feb:	mov    rdx,r13
  413fee:	mov    ecx,0x5
  413ff3:	call   422690 <flatcc_json_parser_set_error@@Base>
  413ff8:	mov    r12,rax
  413ffb:	mov    rax,r13
  413ffe:	sub    rax,r12
  414001:	cmp    rax,0x2
  414005:	jl     414025 <main@@Base+0xd205>
  414007:	cmp    BYTE PTR [r12],0x20
  41400c:	jg     414036 <main@@Base+0xd216>
  41400e:	jne    414025 <main@@Base+0xd205>
  414010:	cmp    BYTE PTR [r12+0x1],0x20
  414016:	jle    414025 <main@@Base+0xd205>
  414018:	inc    r12
  41401b:	cmp    r12,r13
  41401e:	jne    41403f <main@@Base+0xd21f>
  414020:	jmp    4140ef <main@@Base+0xd2cf>
  414025:	mov    rdi,r15
  414028:	mov    rsi,r12
  41402b:	mov    rdx,r13
  41402e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414033:	mov    r12,rax
  414036:	cmp    r12,r13
  414039:	je     4140ef <main@@Base+0xd2cf>
  41403f:	mov    QWORD PTR [rsp+0x18],rbx
  414044:	lea    rcx,[rbp+0x8]
  414048:	mov    r14,rsp
  41404b:	mov    QWORD PTR [rsp+0x10],rbp
  414050:	mov    QWORD PTR [rsp+0x8],rcx
  414055:	mov    rbx,QWORD PTR [rbp+0x0]
  414059:	mov    rbp,rcx
  41405c:	nop    DWORD PTR [rax+0x0]
  414060:	mov    rdi,r15
  414063:	mov    rsi,r12
  414066:	mov    rdx,r13
  414069:	lea    rcx,[rsp+0x4]
  41406e:	lea    r8,[rsp+0x20]
  414073:	mov    r9,r14
  414076:	call   rbx
  414078:	cmp    rax,r13
  41407b:	je     4140ef <main@@Base+0xd2cf>
  41407d:	cmp    rax,r12
  414080:	jne    4140a0 <main@@Base+0xd280>
  414082:	mov    rbx,QWORD PTR [rbp+0x0]
  414086:	add    rbp,0x8
  41408a:	test   rbx,rbx
  41408d:	jne    414060 <main@@Base+0xd240>
  41408f:	jmp    4140f4 <main@@Base+0xd2d4>
  414091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41409b:	nop    DWORD PTR [rax+rax*1+0x0]
  4140a0:	cmp    DWORD PTR [rsp+0x4],0x0
  4140a5:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  4140ab:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x1e9fd]        # 432ab0 <_IO_stdin_used@@Base+0xab0>
  4140b3:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1ea05]        # 432ac0 <_IO_stdin_used@@Base+0xac0>
  4140bb:	vhaddpd xmm0,xmm0,xmm0
  4140bf:	je     4140c9 <main@@Base+0xd2a9>
  4140c1:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x1ea07]        # 432ad0 <_IO_stdin_used@@Base+0xad0>
  4140c9:	mov    rcx,QWORD PTR [rsp+0x18]
  4140ce:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  4140d2:	vmovsd QWORD PTR [rcx],xmm0
  4140d6:	cmp    DWORD PTR [rsp],0x0
  4140da:	mov    r12,rax
  4140dd:	mov    rbp,QWORD PTR [rsp+0x10]
  4140e2:	mov    rcx,QWORD PTR [rsp+0x8]
  4140e7:	jne    414055 <main@@Base+0xd235>
  4140ed:	jmp    414107 <main@@Base+0xd2e7>
  4140ef:	mov    rax,r13
  4140f2:	jmp    414107 <main@@Base+0xd2e7>
  4140f4:	mov    rdi,r15
  4140f7:	mov    rsi,r12
  4140fa:	mov    rdx,r13
  4140fd:	mov    ecx,0x17
  414102:	call   422690 <flatcc_json_parser_set_error@@Base>
  414107:	add    rsp,0x28
  41410b:	pop    rbx
  41410c:	pop    r12
  41410e:	pop    r13
  414110:	pop    r14
  414112:	pop    r15
  414114:	pop    rbp
  414115:	ret    
  414116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414120:	push   r15
  414122:	push   r14
  414124:	push   r12
  414126:	push   rbx
  414127:	push   rax
  414128:	mov    r15,r8
  41412b:	mov    r14,rcx
  41412e:	mov    rbx,rsi
  414131:	mov    rcx,rdx
  414134:	sub    rcx,rsi
  414137:	cmp    rcx,0x8
  41413b:	jb     414144 <main@@Base+0xd324>
  41413d:	movbe  rcx,QWORD PTR [rbx]
  414142:	jmp    4141b2 <main@@Base+0xd392>
  414144:	dec    rcx
  414147:	cmp    rcx,0x6
  41414b:	ja     414346 <main@@Base+0xd526>
  414151:	xor    eax,eax
  414153:	lea    rsi,[rip+0x1e42a]        # 432584 <_IO_stdin_used@@Base+0x584>
  41415a:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41415e:	add    rcx,rsi
  414161:	jmp    rcx
  414163:	movsx  rax,BYTE PTR [rbx+0x6]
  414168:	shl    rax,0x8
  41416c:	movsx  rcx,BYTE PTR [rbx+0x5]
  414171:	shl    rcx,0x10
  414175:	or     rax,rcx
  414178:	movsx  rcx,BYTE PTR [rbx+0x4]
  41417d:	shl    rcx,0x18
  414181:	or     rax,rcx
  414184:	movsx  rcx,BYTE PTR [rbx+0x3]
  414189:	shl    rcx,0x20
  41418d:	or     rax,rcx
  414190:	movsx  rcx,BYTE PTR [rbx+0x2]
  414195:	shl    rcx,0x28
  414199:	or     rax,rcx
  41419c:	movsx  rcx,BYTE PTR [rbx+0x1]
  4141a1:	shl    rcx,0x30
  4141a5:	or     rax,rcx
  4141a8:	movzx  ecx,BYTE PTR [rbx]
  4141ab:	shl    rcx,0x38
  4141af:	or     rcx,rax
  4141b2:	movabs rax,0x496e506172656e74
  4141bc:	cmp    rcx,rax
  4141bf:	jne    4141db <main@@Base+0xd3bb>
  4141c1:	lea    rax,[rbx+0x8]
  4141c5:	mov    rsi,rdx
  4141c8:	sub    rsi,rax
  4141cb:	cmp    rsi,0x8
  4141cf:	jb     41420c <main@@Base+0xd3ec>
  4141d1:	movbe  rax,QWORD PTR [rax]
  4141d6:	jmp    41427a <main@@Base+0xd45a>
  4141db:	shr    rcx,0x20
  4141df:	cmp    rcx,0x4e4f4e45
  4141e6:	jne    414346 <main@@Base+0xd526>
  4141ec:	mov    rsi,rbx
  4141ef:	mov    ecx,0x4
  4141f4:	mov    r8,r9
  4141f7:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4141fc:	cmp    rax,rbx
  4141ff:	je     414346 <main@@Base+0xd526>
  414205:	xor    ecx,ecx
  414207:	jmp    414339 <main@@Base+0xd519>
  41420c:	dec    rsi
  41420f:	cmp    rsi,0x6
  414213:	ja     414346 <main@@Base+0xd526>
  414219:	xor    ecx,ecx
  41421b:	lea    r8,[rip+0x1e37e]        # 4325a0 <_IO_stdin_used@@Base+0x5a0>
  414222:	movsxd rsi,DWORD PTR [r8+rsi*4]
  414226:	add    rsi,r8
  414229:	jmp    rsi
  41422b:	movsx  rcx,BYTE PTR [rbx+0xe]
  414230:	shl    rcx,0x8
  414234:	movsx  rsi,BYTE PTR [rbx+0xd]
  414239:	shl    rsi,0x10
  41423d:	or     rcx,rsi
  414240:	movsx  rsi,BYTE PTR [rbx+0xc]
  414245:	shl    rsi,0x18
  414249:	or     rcx,rsi
  41424c:	movsx  rsi,BYTE PTR [rbx+0xb]
  414251:	shl    rsi,0x20
  414255:	or     rcx,rsi
  414258:	movsx  rsi,BYTE PTR [rbx+0xa]
  41425d:	shl    rsi,0x28
  414261:	or     rcx,rsi
  414264:	movsx  rsi,BYTE PTR [rbx+0x9]
  414269:	shl    rsi,0x30
  41426d:	or     rcx,rsi
  414270:	movzx  eax,BYTE PTR [rax]
  414273:	shl    rax,0x38
  414277:	or     rax,rcx
  41427a:	movabs rcx,0x4e616d6573706163
  414284:	cmp    rax,rcx
  414287:	jne    414346 <main@@Base+0xd526>
  41428d:	lea    r12,[rbx+0x10]
  414291:	mov    rcx,rdx
  414294:	sub    rcx,r12
  414297:	cmp    rcx,0x8
  41429b:	jb     4142a5 <main@@Base+0xd485>
  41429d:	movbe  rcx,QWORD PTR [r12]
  4142a3:	jmp    414315 <main@@Base+0xd4f5>
  4142a5:	dec    rcx
  4142a8:	cmp    rcx,0x6
  4142ac:	ja     414346 <main@@Base+0xd526>
  4142b2:	xor    eax,eax
  4142b4:	lea    rsi,[rip+0x1e301]        # 4325bc <_IO_stdin_used@@Base+0x5bc>
  4142bb:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4142bf:	add    rcx,rsi
  4142c2:	jmp    rcx
  4142c4:	movsx  rax,BYTE PTR [rbx+0x16]
  4142c9:	shl    rax,0x8
  4142cd:	movsx  rcx,BYTE PTR [rbx+0x15]
  4142d2:	shl    rcx,0x10
  4142d6:	or     rax,rcx
  4142d9:	movsx  rcx,BYTE PTR [rbx+0x14]
  4142de:	shl    rcx,0x18
  4142e2:	or     rax,rcx
  4142e5:	movsx  rcx,BYTE PTR [rbx+0x13]
  4142ea:	shl    rcx,0x20
  4142ee:	or     rax,rcx
  4142f1:	movsx  rcx,BYTE PTR [rbx+0x12]
  4142f6:	shl    rcx,0x28
  4142fa:	or     rax,rcx
  4142fd:	movsx  rcx,BYTE PTR [rbx+0x11]
  414302:	shl    rcx,0x30
  414306:	or     rax,rcx
  414309:	movzx  ecx,BYTE PTR [r12]
  41430e:	shl    rcx,0x38
  414312:	or     rcx,rax
  414315:	shr    rcx,0x38
  414319:	cmp    rcx,0x65
  41431d:	jne    414346 <main@@Base+0xd526>
  41431f:	mov    rsi,r12
  414322:	mov    ecx,0x1
  414327:	mov    r8,r9
  41432a:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41432f:	cmp    rax,r12
  414332:	je     414346 <main@@Base+0xd526>
  414334:	mov    ecx,0x1
  414339:	mov    rbx,rax
  41433c:	mov    QWORD PTR [r15],rcx
  41433f:	mov    DWORD PTR [r14],0x0
  414346:	mov    rax,rbx
  414349:	add    rsp,0x8
  41434d:	pop    rbx
  41434e:	pop    r12
  414350:	pop    r14
  414352:	pop    r15
  414354:	ret    
  414355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41435f:	nop
  414360:	push   r15
  414362:	push   r14
  414364:	push   rbx
  414365:	mov    r15,r8
  414368:	mov    r14,rcx
  41436b:	mov    rbx,rsi
  41436e:	mov    rcx,rdx
  414371:	sub    rcx,rsi
  414374:	cmp    rcx,0x8
  414378:	jb     414381 <main@@Base+0xd561>
  41437a:	movbe  rcx,QWORD PTR [rbx]
  41437f:	jmp    4143ef <main@@Base+0xd5cf>
  414381:	dec    rcx
  414384:	cmp    rcx,0x6
  414388:	ja     4144ae <main@@Base+0xd68e>
  41438e:	xor    eax,eax
  414390:	lea    rsi,[rip+0x1e241]        # 4325d8 <_IO_stdin_used@@Base+0x5d8>
  414397:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41439b:	add    rcx,rsi
  41439e:	jmp    rcx
  4143a0:	movsx  rax,BYTE PTR [rbx+0x6]
  4143a5:	shl    rax,0x8
  4143a9:	movsx  rcx,BYTE PTR [rbx+0x5]
  4143ae:	shl    rcx,0x10
  4143b2:	or     rax,rcx
  4143b5:	movsx  rcx,BYTE PTR [rbx+0x4]
  4143ba:	shl    rcx,0x18
  4143be:	or     rax,rcx
  4143c1:	movsx  rcx,BYTE PTR [rbx+0x3]
  4143c6:	shl    rcx,0x20
  4143ca:	or     rax,rcx
  4143cd:	movsx  rcx,BYTE PTR [rbx+0x2]
  4143d2:	shl    rcx,0x28
  4143d6:	or     rax,rcx
  4143d9:	movsx  rcx,BYTE PTR [rbx+0x1]
  4143de:	shl    rcx,0x30
  4143e2:	or     rax,rcx
  4143e5:	movzx  ecx,BYTE PTR [rbx]
  4143e8:	shl    rcx,0x38
  4143ec:	or     rcx,rax
  4143ef:	mov    rax,rcx
  4143f2:	shr    rax,0x21
  4143f6:	cmp    rax,0x3432bc18
  4143fc:	ja     414431 <main@@Base+0xd611>
  4143fe:	shr    rcx,0x20
  414402:	cmp    rcx,0x68657831
  414409:	jne    4144ae <main@@Base+0xd68e>
  41440f:	mov    rsi,rbx
  414412:	mov    ecx,0x4
  414417:	mov    r8,r9
  41441a:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41441f:	cmp    rax,rbx
  414422:	je     4144ae <main@@Base+0xd68e>
  414428:	mov    QWORD PTR [r15],0x3
  41442f:	jmp    4144a4 <main@@Base+0xd684>
  414431:	mov    rax,rcx
  414434:	shr    rax,0x10
  414438:	movabs rsi,0x6865786e6567
  414442:	cmp    rax,rsi
  414445:	jne    41446c <main@@Base+0xd64c>
  414447:	mov    rsi,rbx
  41444a:	mov    ecx,0x6
  41444f:	mov    r8,r9
  414452:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414457:	cmp    rax,rbx
  41445a:	je     4144ae <main@@Base+0xd68e>
  41445c:	mov    QWORD PTR [r15],0xfffffffffffffffe
  414463:	mov    DWORD PTR [r14],0x1
  41446a:	jmp    4144ab <main@@Base+0xd68b>
  41446c:	movabs rax,0x6865783200000000
  414476:	movabs rsi,0xffffffff00000000
  414480:	and    rcx,rsi
  414483:	cmp    rcx,rax
  414486:	jne    4144ae <main@@Base+0xd68e>
  414488:	mov    rsi,rbx
  41448b:	mov    ecx,0x4
  414490:	mov    r8,r9
  414493:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414498:	cmp    rax,rbx
  41449b:	je     4144ae <main@@Base+0xd68e>
  41449d:	mov    QWORD PTR [r15],0x7eafbeaf
  4144a4:	mov    DWORD PTR [r14],0x0
  4144ab:	mov    rbx,rax
  4144ae:	mov    rax,rbx
  4144b1:	pop    rbx
  4144b2:	pop    r14
  4144b4:	pop    r15
  4144b6:	ret    
  4144b7:	nop    WORD PTR [rax+rax*1+0x0]
  4144c0:	push   r15
  4144c2:	push   r14
  4144c4:	push   rbx
  4144c5:	mov    r15,r8
  4144c8:	mov    r14,rcx
  4144cb:	mov    rbx,rsi
  4144ce:	mov    rcx,rdx
  4144d1:	sub    rcx,rsi
  4144d4:	cmp    rcx,0x8
  4144d8:	jb     4144e1 <main@@Base+0xd6c1>
  4144da:	movbe  rcx,QWORD PTR [rbx]
  4144df:	jmp    41454f <main@@Base+0xd72f>
  4144e1:	dec    rcx
  4144e4:	cmp    rcx,0x6
  4144e8:	ja     414655 <main@@Base+0xd835>
  4144ee:	xor    eax,eax
  4144f0:	lea    rsi,[rip+0x1e0fd]        # 4325f4 <_IO_stdin_used@@Base+0x5f4>
  4144f7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4144fb:	add    rcx,rsi
  4144fe:	jmp    rcx
  414500:	movsx  rax,BYTE PTR [rbx+0x6]
  414505:	shl    rax,0x8
  414509:	movsx  rcx,BYTE PTR [rbx+0x5]
  41450e:	shl    rcx,0x10
  414512:	or     rax,rcx
  414515:	movsx  rcx,BYTE PTR [rbx+0x4]
  41451a:	shl    rcx,0x18
  41451e:	or     rax,rcx
  414521:	movsx  rcx,BYTE PTR [rbx+0x3]
  414526:	shl    rcx,0x20
  41452a:	or     rax,rcx
  41452d:	movsx  rcx,BYTE PTR [rbx+0x2]
  414532:	shl    rcx,0x28
  414536:	or     rax,rcx
  414539:	movsx  rcx,BYTE PTR [rbx+0x1]
  41453e:	shl    rcx,0x30
  414542:	or     rax,rcx
  414545:	movzx  ecx,BYTE PTR [rbx]
  414548:	shl    rcx,0x38
  41454c:	or     rcx,rax
  41454f:	mov    rax,rcx
  414552:	shr    rax,0x21
  414556:	cmp    rax,0x34b73a18
  41455c:	ja     41459b <main@@Base+0xd77b>
  41455e:	shr    rcx,0x20
  414562:	cmp    rcx,0x696e7431
  414569:	jne    414655 <main@@Base+0xd835>
  41456f:	mov    rsi,rbx
  414572:	mov    ecx,0x4
  414577:	mov    r8,r9
  41457a:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41457f:	cmp    rax,rbx
  414582:	je     414655 <main@@Base+0xd835>
  414588:	mov    QWORD PTR [r15],0x2
  41458f:	mov    DWORD PTR [r14],0x0
  414596:	jmp    414652 <main@@Base+0xd832>
  41459b:	movabs r8,0x696e746e65670000
  4145a5:	cmp    rcx,r8
  4145a8:	jae    4145ef <main@@Base+0xd7cf>
  4145aa:	movabs rax,0x696e743200000000
  4145b4:	movabs rsi,0xffffffff00000000
  4145be:	and    rcx,rsi
  4145c1:	cmp    rcx,rax
  4145c4:	jne    414655 <main@@Base+0xd835>
  4145ca:	mov    rsi,rbx
  4145cd:	mov    ecx,0x4
  4145d2:	mov    r8,r9
  4145d5:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4145da:	cmp    rax,rbx
  4145dd:	je     414655 <main@@Base+0xd835>
  4145df:	mov    QWORD PTR [r15],0x2a
  4145e6:	mov    DWORD PTR [r14],0x0
  4145ed:	jmp    414652 <main@@Base+0xd832>
  4145ef:	mov    rsi,rcx
  4145f2:	and    rsi,0xffffffffffffff00
  4145f9:	lea    rax,[r8+0x3200]
  414600:	cmp    rsi,rax
  414603:	jne    414623 <main@@Base+0xd803>
  414605:	mov    rsi,rbx
  414608:	mov    ecx,0x7
  41460d:	mov    r8,r9
  414610:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414615:	cmp    rax,rbx
  414618:	je     414655 <main@@Base+0xd835>
  41461a:	mov    QWORD PTR [r15],0xffffffffffffffff
  414621:	jmp    41464b <main@@Base+0xd82b>
  414623:	and    rcx,0xffffffffffff0000
  41462a:	cmp    rcx,r8
  41462d:	jne    414655 <main@@Base+0xd835>
  41462f:	mov    rsi,rbx
  414632:	mov    ecx,0x6
  414637:	mov    r8,r9
  41463a:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41463f:	cmp    rax,rbx
  414642:	je     414655 <main@@Base+0xd835>
  414644:	mov    QWORD PTR [r15],0xfffffffffffffffe
  41464b:	mov    DWORD PTR [r14],0x1
  414652:	mov    rbx,rax
  414655:	mov    rax,rbx
  414658:	pop    rbx
  414659:	pop    r14
  41465b:	pop    r15
  41465d:	ret    
  41465e:	xchg   ax,ax
  414660:	push   r15
  414662:	push   r14
  414664:	push   rbx
  414665:	mov    r15,r8
  414668:	mov    r14,rcx
  41466b:	mov    rbx,rsi
  41466e:	mov    rcx,rdx
  414671:	sub    rcx,rsi
  414674:	cmp    rcx,0x8
  414678:	jb     414681 <main@@Base+0xd861>
  41467a:	movbe  rcx,QWORD PTR [rbx]
  41467f:	jmp    4146ef <main@@Base+0xd8cf>
  414681:	dec    rcx
  414684:	cmp    rcx,0x6
  414688:	ja     41479f <main@@Base+0xd97f>
  41468e:	xor    eax,eax
  414690:	lea    rsi,[rip+0x1df79]        # 432610 <_IO_stdin_used@@Base+0x610>
  414697:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  41469b:	add    rcx,rsi
  41469e:	jmp    rcx
  4146a0:	movsx  rax,BYTE PTR [rbx+0x6]
  4146a5:	shl    rax,0x8
  4146a9:	movsx  rcx,BYTE PTR [rbx+0x5]
  4146ae:	shl    rcx,0x10
  4146b2:	or     rax,rcx
  4146b5:	movsx  rcx,BYTE PTR [rbx+0x4]
  4146ba:	shl    rcx,0x18
  4146be:	or     rax,rcx
  4146c1:	movsx  rcx,BYTE PTR [rbx+0x3]
  4146c6:	shl    rcx,0x20
  4146ca:	or     rax,rcx
  4146cd:	movsx  rcx,BYTE PTR [rbx+0x2]
  4146d2:	shl    rcx,0x28
  4146d6:	or     rax,rcx
  4146d9:	movsx  rcx,BYTE PTR [rbx+0x1]
  4146de:	shl    rcx,0x30
  4146e2:	or     rax,rcx
  4146e5:	movzx  ecx,BYTE PTR [rbx]
  4146e8:	shl    rcx,0x38
  4146ec:	or     rcx,rax
  4146ef:	mov    rsi,rcx
  4146f2:	shr    rsi,0x21
  4146f6:	movabs rax,0xffffffff00000000
  414700:	and    rax,rcx
  414703:	cmp    rsi,0x3732b398
  41470a:	ja     41473d <main@@Base+0xd91d>
  41470c:	movabs rcx,0x6e65673100000000
  414716:	cmp    rax,rcx
  414719:	jne    41479f <main@@Base+0xd97f>
  41471f:	mov    rsi,rbx
  414722:	mov    ecx,0x4
  414727:	mov    r8,r9
  41472a:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41472f:	cmp    rax,rbx
  414732:	je     41479f <main@@Base+0xd97f>
  414734:	mov    QWORD PTR [r15],0xfffffffffffffff4
  41473b:	jmp    414795 <main@@Base+0xd975>
  41473d:	movabs rcx,0x6e65673200000000
  414747:	cmp    rax,rcx
  41474a:	je     414779 <main@@Base+0xd959>
  41474c:	movabs rcx,0x6e65673300000000
  414756:	cmp    rax,rcx
  414759:	jne    41479f <main@@Base+0xd97f>
  41475b:	mov    rsi,rbx
  41475e:	mov    ecx,0x4
  414763:	mov    r8,r9
  414766:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41476b:	cmp    rax,rbx
  41476e:	je     41479f <main@@Base+0xd97f>
  414770:	mov    QWORD PTR [r15],0xfffffffffffffff6
  414777:	jmp    414795 <main@@Base+0xd975>
  414779:	mov    rsi,rbx
  41477c:	mov    ecx,0x4
  414781:	mov    r8,r9
  414784:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414789:	cmp    rax,rbx
  41478c:	je     41479f <main@@Base+0xd97f>
  41478e:	mov    QWORD PTR [r15],0xfffffffffffffff5
  414795:	mov    DWORD PTR [r14],0x1
  41479c:	mov    rbx,rax
  41479f:	mov    rax,rbx
  4147a2:	pop    rbx
  4147a3:	pop    r14
  4147a5:	pop    r15
  4147a7:	ret    
  4147a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4147b0:	push   r15
  4147b2:	push   r14
  4147b4:	push   rbx
  4147b5:	mov    r15,r8
  4147b8:	mov    r14,rcx
  4147bb:	mov    rbx,rsi
  4147be:	mov    rcx,rdx
  4147c1:	sub    rcx,rsi
  4147c4:	cmp    rcx,0x8
  4147c8:	jb     4147d1 <main@@Base+0xd9b1>
  4147ca:	movbe  rcx,QWORD PTR [rbx]
  4147cf:	jmp    41483f <main@@Base+0xda1f>
  4147d1:	dec    rcx
  4147d4:	cmp    rcx,0x6
  4147d8:	ja     4149f5 <main@@Base+0xdbd5>
  4147de:	xor    eax,eax
  4147e0:	lea    rsi,[rip+0x1de45]        # 43262c <_IO_stdin_used@@Base+0x62c>
  4147e7:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4147eb:	add    rcx,rsi
  4147ee:	jmp    rcx
  4147f0:	movsx  rax,BYTE PTR [rbx+0x6]
  4147f5:	shl    rax,0x8
  4147f9:	movsx  rcx,BYTE PTR [rbx+0x5]
  4147fe:	shl    rcx,0x10
  414802:	or     rax,rcx
  414805:	movsx  rcx,BYTE PTR [rbx+0x4]
  41480a:	shl    rcx,0x18
  41480e:	or     rax,rcx
  414811:	movsx  rcx,BYTE PTR [rbx+0x3]
  414816:	shl    rcx,0x20
  41481a:	or     rax,rcx
  41481d:	movsx  rcx,BYTE PTR [rbx+0x2]
  414822:	shl    rcx,0x28
  414826:	or     rax,rcx
  414829:	movsx  rcx,BYTE PTR [rbx+0x1]
  41482e:	shl    rcx,0x30
  414832:	or     rax,rcx
  414835:	movzx  ecx,BYTE PTR [rbx]
  414838:	shl    rcx,0x38
  41483c:	or     rcx,rax
  41483f:	mov    rax,rcx
  414842:	shr    rax,0x20
  414846:	cmp    rax,0x4e4f4e44
  41484c:	ja     4148a3 <main@@Base+0xda83>
  41484e:	movabs r8,0x426f6f6b46616e00
  414858:	mov    rsi,rcx
  41485b:	and    rsi,0xffffffffff000000
  414862:	cmp    rcx,r8
  414865:	jae    4148f7 <main@@Base+0xdad7>
  41486b:	movabs rax,0x42656c6c65000000
  414875:	cmp    rsi,rax
  414878:	jne    4149f5 <main@@Base+0xdbd5>
  41487e:	mov    rsi,rbx
  414881:	mov    ecx,0x5
  414886:	mov    r8,r9
  414889:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41488e:	cmp    rax,rbx
  414891:	je     4149f5 <main@@Base+0xdbd5>
  414897:	mov    QWORD PTR [r15],0x9
  41489e:	jmp    4149eb <main@@Base+0xdbcb>
  4148a3:	movabs rax,0x4f74686572000000
  4148ad:	cmp    rcx,rax
  4148b0:	jae    41492b <main@@Base+0xdb0b>
  4148b2:	movabs rax,0x4e4f4e4500000000
  4148bc:	movabs rsi,0xffffffff00000000
  4148c6:	and    rcx,rsi
  4148c9:	cmp    rcx,rax
  4148cc:	jne    4149f5 <main@@Base+0xdbd5>
  4148d2:	mov    rsi,rbx
  4148d5:	mov    ecx,0x4
  4148da:	mov    r8,r9
  4148dd:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4148e2:	cmp    rax,rbx
  4148e5:	je     4149f5 <main@@Base+0xdbd5>
  4148eb:	mov    QWORD PTR [r15],0x0
  4148f2:	jmp    4149eb <main@@Base+0xdbcb>
  4148f7:	movabs rax,0x4d754c616e000000
  414901:	cmp    rsi,rax
  414904:	jne    41496c <main@@Base+0xdb4c>
  414906:	mov    rsi,rbx
  414909:	mov    ecx,0x5
  41490e:	mov    r8,r9
  414911:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414916:	cmp    rax,rbx
  414919:	je     4149f5 <main@@Base+0xdbd5>
  41491f:	mov    QWORD PTR [r15],0x2
  414926:	jmp    4149eb <main@@Base+0xdbcb>
  41492b:	movabs r8,0x526170756e7a656c
  414935:	cmp    rcx,r8
  414938:	jae    414996 <main@@Base+0xdb76>
  41493a:	and    rcx,0xffffffffff000000
  414941:	cmp    rcx,rax
  414944:	jne    4149f5 <main@@Base+0xdbd5>
  41494a:	mov    rsi,rbx
  41494d:	mov    ecx,0x5
  414952:	mov    r8,r9
  414955:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  41495a:	cmp    rax,rbx
  41495d:	je     4149f5 <main@@Base+0xdbd5>
  414963:	mov    QWORD PTR [r15],0xb
  41496a:	jmp    4149eb <main@@Base+0xdbcb>
  41496c:	and    rcx,0xffffffffffffff00
  414973:	cmp    rcx,r8
  414976:	jne    4149f5 <main@@Base+0xdbd5>
  414978:	mov    rsi,rbx
  41497b:	mov    ecx,0x7
  414980:	mov    r8,r9
  414983:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  414988:	cmp    rax,rbx
  41498b:	je     4149f5 <main@@Base+0xdbd5>
  41498d:	mov    QWORD PTR [r15],0xa
  414994:	jmp    4149eb <main@@Base+0xdbcb>
  414996:	mov    rax,rcx
  414999:	shr    rax,0x10
  41499d:	movabs rsi,0x556e75736564
  4149a7:	cmp    rax,rsi
  4149aa:	jne    4149ca <main@@Base+0xdbaa>
  4149ac:	mov    rsi,rbx
  4149af:	mov    ecx,0x6
  4149b4:	mov    r8,r9
  4149b7:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4149bc:	cmp    rax,rbx
  4149bf:	je     4149f5 <main@@Base+0xdbd5>
  4149c1:	mov    QWORD PTR [r15],0xff
  4149c8:	jmp    4149eb <main@@Base+0xdbcb>
  4149ca:	cmp    rcx,r8
  4149cd:	jne    4149f5 <main@@Base+0xdbd5>
  4149cf:	mov    rsi,rbx
  4149d2:	mov    ecx,0x8
  4149d7:	mov    r8,r9
  4149da:	call   422ad0 <flatcc_json_parser_match_constant@@Base>
  4149df:	cmp    rax,rbx
  4149e2:	je     4149f5 <main@@Base+0xdbd5>
  4149e4:	mov    QWORD PTR [r15],0x8
  4149eb:	mov    DWORD PTR [r14],0x0
  4149f2:	mov    rbx,rax
  4149f5:	mov    rax,rbx
  4149f8:	pop    rbx
  4149f9:	pop    r14
  4149fb:	pop    r15
  4149fd:	ret    
  4149fe:	xchg   ax,ax
  414a00:	push   rbp
  414a01:	push   r15
  414a03:	push   r14
  414a05:	push   r13
  414a07:	push   r12
  414a09:	push   rbx
  414a0a:	sub    rsp,0x28
  414a0e:	mov    rbp,rcx
  414a11:	mov    r13,rdx
  414a14:	mov    rbx,rsi
  414a17:	mov    r14,rdi
  414a1a:	mov    DWORD PTR [rcx],0x0
  414a20:	mov    rdi,QWORD PTR [rdi]
  414a23:	mov    esi,0x4
  414a28:	call   41dcc0 <flatcc_builder_start_table@@Base>
  414a2d:	test   eax,eax
  414a2f:	je     414a59 <main@@Base+0xdc39>
  414a31:	mov    rdi,r14
  414a34:	mov    rsi,rbx
  414a37:	mov    rdx,r13
  414a3a:	mov    ecx,0x21
  414a3f:	call   422690 <flatcc_json_parser_set_error@@Base>
  414a44:	mov    rbx,rax
  414a47:	mov    rax,rbx
  414a4a:	add    rsp,0x28
  414a4e:	pop    rbx
  414a4f:	pop    r12
  414a51:	pop    r13
  414a53:	pop    r14
  414a55:	pop    r15
  414a57:	pop    rbp
  414a58:	ret    
  414a59:	lea    r8,[rsp+0x10]
  414a5e:	mov    ecx,0x1
  414a63:	mov    rdi,r14
  414a66:	mov    rsi,rbx
  414a69:	mov    rdx,r13
  414a6c:	call   4248a0 <flatcc_json_parser_prepare_unions@@Base>
  414a71:	cmp    rax,r13
  414a74:	je     414a31 <main@@Base+0xdc11>
  414a76:	cmp    rbx,r13
  414a79:	je     414aa6 <main@@Base+0xdc86>
  414a7b:	cmp    BYTE PTR [rbx],0x7b
  414a7e:	jne    414aa6 <main@@Base+0xdc86>
  414a80:	lea    rcx,[rbx+0x1]
  414a84:	mov    rax,r13
  414a87:	sub    rax,rcx
  414a8a:	cmp    rax,0x2
  414a8e:	jl     414acc <main@@Base+0xdcac>
  414a90:	cmp    BYTE PTR [rcx],0x20
  414a93:	jg     414add <main@@Base+0xdcbd>
  414a95:	jne    414acc <main@@Base+0xdcac>
  414a97:	cmp    BYTE PTR [rbx+0x2],0x20
  414a9b:	jle    414acc <main@@Base+0xdcac>
  414a9d:	add    rbx,0x2
  414aa1:	mov    rcx,rbx
  414aa4:	jmp    414add <main@@Base+0xdcbd>
  414aa6:	mov    rdi,r14
  414aa9:	mov    rsi,rbx
  414aac:	mov    rdx,r13
  414aaf:	mov    ecx,0x15
  414ab4:	call   422690 <flatcc_json_parser_set_error@@Base>
  414ab9:	cmp    DWORD PTR [r14+0x1c],0x0
  414abe:	je     4152ec <main@@Base+0xe4cc>
  414ac4:	mov    rbx,rax
  414ac7:	jmp    414a31 <main@@Base+0xdc11>
  414acc:	mov    rdi,r14
  414acf:	mov    rsi,rcx
  414ad2:	mov    rdx,r13
  414ad5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414ada:	mov    rcx,rax
  414add:	mov    rsi,r13
  414ae0:	cmp    rcx,r13
  414ae3:	je     414b29 <main@@Base+0xdd09>
  414ae5:	cmp    BYTE PTR [rcx],0x7d
  414ae8:	jne    414b26 <main@@Base+0xdd06>
  414aea:	lea    rax,[rcx+0x1]
  414aee:	mov    rdx,r13
  414af1:	sub    rdx,rax
  414af4:	cmp    rdx,0x2
  414af8:	jl     4152d3 <main@@Base+0xe4b3>
  414afe:	cmp    BYTE PTR [rax],0x20
  414b01:	jg     414ab9 <main@@Base+0xdc99>
  414b03:	jne    4152d3 <main@@Base+0xe4b3>
  414b09:	cmp    BYTE PTR [rcx+0x2],0x20
  414b0d:	jle    4152d3 <main@@Base+0xe4b3>
  414b13:	add    rcx,0x2
  414b17:	mov    rax,rcx
  414b1a:	cmp    DWORD PTR [r14+0x1c],0x0
  414b1f:	jne    414ac4 <main@@Base+0xdca4>
  414b21:	jmp    4152ec <main@@Base+0xe4cc>
  414b26:	mov    rsi,rcx
  414b29:	movabs rax,0x6d616e79616e7900
  414b33:	add    rax,0x5f
  414b37:	mov    QWORD PTR [rsp+0x20],rax
  414b3c:	mov    QWORD PTR [rsp+0x18],rbp
  414b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b50:	mov    r15,r13
  414b53:	cmp    rsi,r13
  414b56:	je     414b78 <main@@Base+0xdd58>
  414b58:	cmp    BYTE PTR [rsi],0x22
  414b5b:	jne    414b65 <main@@Base+0xdd45>
  414b5d:	inc    rsi
  414b60:	mov    r15,rsi
  414b63:	jmp    414b78 <main@@Base+0xdd58>
  414b65:	mov    rdi,r14
  414b68:	mov    rdx,r13
  414b6b:	mov    ecx,0x5
  414b70:	call   422690 <flatcc_json_parser_set_error@@Base>
  414b75:	mov    r15,rax
  414b78:	mov    rbx,r13
  414b7b:	sub    rbx,r15
  414b7e:	cmp    rbx,0x8
  414b82:	jb     414bb3 <main@@Base+0xdd93>
  414b84:	movbe  r12,QWORD PTR [r15]
  414b89:	cmp    r12,QWORD PTR [rsp+0x20]
  414b8e:	jne    414c41 <main@@Base+0xde21>
  414b94:	lea    r12,[r15+0x8]
  414b98:	mov    rax,r13
  414b9b:	sub    rax,r12
  414b9e:	cmp    rax,0x8
  414ba2:	jb     414cb8 <main@@Base+0xde98>
  414ba8:	movbe  rcx,QWORD PTR [r12]
  414bae:	jmp    414d39 <main@@Base+0xdf19>
  414bb3:	lea    rax,[rbx-0x1]
  414bb7:	cmp    rax,0x6
  414bbb:	ja     415194 <main@@Base+0xe374>
  414bc1:	lea    rcx,[rip+0x1da80]        # 432648 <_IO_stdin_used@@Base+0x648>
  414bc8:	mov    rdx,rcx
  414bcb:	movsxd rcx,DWORD PTR [rcx+rax*4]
  414bcf:	add    rcx,rdx
  414bd2:	xor    r8d,r8d
  414bd5:	xor    eax,eax
  414bd7:	xor    edx,edx
  414bd9:	xor    esi,esi
  414bdb:	xor    edi,edi
  414bdd:	xor    ebp,ebp
  414bdf:	jmp    rcx
  414be1:	movsx  r8,BYTE PTR [r15+0x6]
  414be6:	shl    r8,0x8
  414bea:	movsx  rax,BYTE PTR [r15+0x5]
  414bef:	shl    rax,0x10
  414bf3:	or     rax,r8
  414bf6:	movsx  rdx,BYTE PTR [r15+0x4]
  414bfb:	shl    rdx,0x18
  414bff:	or     rdx,rax
  414c02:	movsx  rsi,BYTE PTR [r15+0x3]
  414c07:	shl    rsi,0x20
  414c0b:	or     rsi,rdx
  414c0e:	movsx  rdi,BYTE PTR [r15+0x2]
  414c13:	shl    rdi,0x28
  414c17:	or     rdi,rsi
  414c1a:	movsx  rbp,BYTE PTR [r15+0x1]
  414c1f:	shl    rbp,0x30
  414c23:	or     rbp,rdi
  414c26:	movzx  r12d,BYTE PTR [r15]
  414c2a:	shl    r12,0x38
  414c2e:	or     r12,rbp
  414c31:	mov    rbp,QWORD PTR [rsp+0x18]
  414c36:	cmp    r12,QWORD PTR [rsp+0x20]
  414c3b:	je     414b94 <main@@Base+0xdd74>
  414c41:	mov    rax,r12
  414c44:	and    rax,0xffffffffffffff00
  414c4a:	movabs rcx,0x6d616e79616e7900
  414c54:	cmp    rax,rcx
  414c57:	jne    414e12 <main@@Base+0xdff2>
  414c5d:	mov    rax,r15
  414c60:	cmp    rbx,0x8
  414c64:	jl     41506e <main@@Base+0xe24e>
  414c6a:	cmp    BYTE PTR [r15+0x7],0x22
  414c6f:	mov    rax,r15
  414c72:	jne    41506e <main@@Base+0xe24e>
  414c78:	lea    rsi,[r15+0x8]
  414c7c:	mov    rax,r13
  414c7f:	sub    rax,rsi
  414c82:	cmp    rax,0x2
  414c86:	jl     414da2 <main@@Base+0xdf82>
  414c8c:	cmp    BYTE PTR [rsi],0x20
  414c8f:	jg     414db0 <main@@Base+0xdf90>
  414c95:	jne    414da2 <main@@Base+0xdf82>
  414c9b:	cmp    BYTE PTR [r15+0x9],0x20
  414ca0:	jle    414da2 <main@@Base+0xdf82>
  414ca6:	lea    rsi,[r15+0x9]
  414caa:	cmp    rsi,r13
  414cad:	jne    414db5 <main@@Base+0xdf95>
  414cb3:	jmp    414df9 <main@@Base+0xdfd9>
  414cb8:	lea    rcx,[rax-0x1]
  414cbc:	cmp    rcx,0x6
  414cc0:	ja     414f65 <main@@Base+0xe145>
  414cc6:	lea    rdx,[rip+0x1d997]        # 432664 <_IO_stdin_used@@Base+0x664>
  414ccd:	movsxd rbx,DWORD PTR [rdx+rcx*4]
  414cd1:	add    rbx,rdx
  414cd4:	xor    r8d,r8d
  414cd7:	xor    ecx,ecx
  414cd9:	xor    esi,esi
  414cdb:	xor    edi,edi
  414cdd:	xor    ebp,ebp
  414cdf:	xor    edx,edx
  414ce1:	jmp    rbx
  414ce3:	movsx  r8,BYTE PTR [r15+0xe]
  414ce8:	shl    r8,0x8
  414cec:	movsx  rcx,BYTE PTR [r15+0xd]
  414cf1:	shl    rcx,0x10
  414cf5:	or     rcx,r8
  414cf8:	movsx  rsi,BYTE PTR [r15+0xc]
  414cfd:	shl    rsi,0x18
  414d01:	or     rsi,rcx
  414d04:	movsx  rdi,BYTE PTR [r15+0xb]
  414d09:	shl    rdi,0x20
  414d0d:	or     rdi,rsi
  414d10:	movsx  rbp,BYTE PTR [r15+0xa]
  414d15:	shl    rbp,0x28
  414d19:	or     rbp,rdi
  414d1c:	movsx  rdx,BYTE PTR [r15+0x9]
  414d21:	shl    rdx,0x30
  414d25:	or     rdx,rbp
  414d28:	movzx  ecx,BYTE PTR [r12]
  414d2d:	shl    rcx,0x38
  414d31:	or     rcx,rdx
  414d34:	mov    rbp,QWORD PTR [rsp+0x18]
  414d39:	shr    rcx,0x20
  414d3d:	cmp    rcx,0x74797065
  414d44:	jne    414f65 <main@@Base+0xe145>
  414d4a:	cmp    rax,0x5
  414d4e:	jl     414f65 <main@@Base+0xe145>
  414d54:	cmp    BYTE PTR [r15+0xc],0x22
  414d59:	jne    414f65 <main@@Base+0xe145>
  414d5f:	lea    rsi,[r15+0xd]
  414d63:	mov    rax,r13
  414d66:	sub    rax,rsi
  414d69:	cmp    rax,0x2
  414d6d:	jl     414ef5 <main@@Base+0xe0d5>
  414d73:	cmp    BYTE PTR [rsi],0x20
  414d76:	jg     414f03 <main@@Base+0xe0e3>
  414d7c:	jne    414ef5 <main@@Base+0xe0d5>
  414d82:	cmp    BYTE PTR [r15+0xe],0x20
  414d87:	jle    414ef5 <main@@Base+0xe0d5>
  414d8d:	add    r15,0xe
  414d91:	mov    rsi,r15
  414d94:	cmp    rsi,r13
  414d97:	jne    414f08 <main@@Base+0xe0e8>
  414d9d:	jmp    414f4c <main@@Base+0xe12c>
  414da2:	mov    rdi,r14
  414da5:	mov    rdx,r13
  414da8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414dad:	mov    rsi,rax
  414db0:	cmp    rsi,r13
  414db3:	je     414df9 <main@@Base+0xdfd9>
  414db5:	cmp    BYTE PTR [rsi],0x3a
  414db8:	jne    414df9 <main@@Base+0xdfd9>
  414dba:	lea    rax,[rsi+0x1]
  414dbe:	mov    rcx,r13
  414dc1:	sub    rcx,rax
  414dc4:	cmp    rcx,0x2
  414dc8:	jl     415060 <main@@Base+0xe240>
  414dce:	cmp    BYTE PTR [rax],0x20
  414dd1:	jg     41506e <main@@Base+0xe24e>
  414dd7:	jne    415060 <main@@Base+0xe240>
  414ddd:	cmp    BYTE PTR [rsi+0x2],0x20
  414de1:	jle    415060 <main@@Base+0xe240>
  414de7:	add    rsi,0x2
  414deb:	mov    rax,rsi
  414dee:	cmp    r15,rax
  414df1:	jne    415077 <main@@Base+0xe257>
  414df7:	jmp    414e12 <main@@Base+0xdff2>
  414df9:	mov    rdi,r14
  414dfc:	mov    rdx,r13
  414dff:	mov    ecx,0x4
  414e04:	call   422690 <flatcc_json_parser_set_error@@Base>
  414e09:	cmp    r15,rax
  414e0c:	jne    415077 <main@@Base+0xe257>
  414e12:	mov    rax,r12
  414e15:	shr    rax,0x10
  414e19:	movabs rcx,0x707265666978
  414e23:	cmp    rax,rcx
  414e26:	jne    414e83 <main@@Base+0xe063>
  414e28:	mov    rax,r15
  414e2b:	cmp    rbx,0x7
  414e2f:	jl     415112 <main@@Base+0xe2f2>
  414e35:	cmp    BYTE PTR [r15+0x6],0x22
  414e3a:	mov    rax,r15
  414e3d:	jne    415112 <main@@Base+0xe2f2>
  414e43:	lea    rsi,[r15+0x7]
  414e47:	mov    rax,r13
  414e4a:	sub    rax,rsi
  414e4d:	cmp    rax,0x2
  414e51:	jl     414f70 <main@@Base+0xe150>
  414e57:	cmp    BYTE PTR [rsi],0x20
  414e5a:	jg     414f7e <main@@Base+0xe15e>
  414e60:	jne    414f70 <main@@Base+0xe150>
  414e66:	cmp    BYTE PTR [r15+0x8],0x20
  414e6b:	jle    414f70 <main@@Base+0xe150>
  414e71:	lea    rsi,[r15+0x8]
  414e75:	cmp    rsi,r13
  414e78:	jne    414f83 <main@@Base+0xe163>
  414e7e:	jmp    414fca <main@@Base+0xe1aa>
  414e83:	shr    r12,0x18
  414e87:	movabs rax,0x6d6f766965
  414e91:	cmp    r12,rax
  414e94:	jne    415194 <main@@Base+0xe374>
  414e9a:	mov    rax,r15
  414e9d:	cmp    rbx,0x6
  414ea1:	jl     415150 <main@@Base+0xe330>
  414ea7:	cmp    BYTE PTR [r15+0x5],0x22
  414eac:	mov    rax,r15
  414eaf:	jne    415150 <main@@Base+0xe330>
  414eb5:	lea    rsi,[r15+0x6]
  414eb9:	mov    rax,r13
  414ebc:	sub    rax,rsi
  414ebf:	cmp    rax,0x2
  414ec3:	jl     414fe8 <main@@Base+0xe1c8>
  414ec9:	cmp    BYTE PTR [rsi],0x20
  414ecc:	jg     414ff6 <main@@Base+0xe1d6>
  414ed2:	jne    414fe8 <main@@Base+0xe1c8>
  414ed8:	cmp    BYTE PTR [r15+0x7],0x20
  414edd:	jle    414fe8 <main@@Base+0xe1c8>
  414ee3:	lea    rsi,[r15+0x7]
  414ee7:	cmp    rsi,r13
  414eea:	jne    414ffb <main@@Base+0xe1db>
  414ef0:	jmp    415042 <main@@Base+0xe222>
  414ef5:	mov    rdi,r14
  414ef8:	mov    rdx,r13
  414efb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414f00:	mov    rsi,rax
  414f03:	cmp    rsi,r13
  414f06:	je     414f4c <main@@Base+0xe12c>
  414f08:	cmp    BYTE PTR [rsi],0x3a
  414f0b:	jne    414f4c <main@@Base+0xe12c>
  414f0d:	lea    rax,[rsi+0x1]
  414f11:	mov    rcx,r13
  414f14:	sub    rcx,rax
  414f17:	cmp    rcx,0x2
  414f1b:	jl     4150aa <main@@Base+0xe28a>
  414f21:	cmp    BYTE PTR [rax],0x20
  414f24:	jg     4150b8 <main@@Base+0xe298>
  414f2a:	jne    4150aa <main@@Base+0xe28a>
  414f30:	cmp    BYTE PTR [rsi+0x2],0x20
  414f34:	jle    4150aa <main@@Base+0xe28a>
  414f3a:	add    rsi,0x2
  414f3e:	mov    rax,rsi
  414f41:	cmp    r12,rax
  414f44:	jne    4150c1 <main@@Base+0xe2a1>
  414f4a:	jmp    414f65 <main@@Base+0xe145>
  414f4c:	mov    rdi,r14
  414f4f:	mov    rdx,r13
  414f52:	mov    ecx,0x4
  414f57:	call   422690 <flatcc_json_parser_set_error@@Base>
  414f5c:	cmp    r12,rax
  414f5f:	jne    4150c1 <main@@Base+0xe2a1>
  414f65:	mov    rdi,r14
  414f68:	mov    rsi,r12
  414f6b:	jmp    41519a <main@@Base+0xe37a>
  414f70:	mov    rdi,r14
  414f73:	mov    rdx,r13
  414f76:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414f7b:	mov    rsi,rax
  414f7e:	cmp    rsi,r13
  414f81:	je     414fca <main@@Base+0xe1aa>
  414f83:	cmp    BYTE PTR [rsi],0x3a
  414f86:	jne    414fca <main@@Base+0xe1aa>
  414f88:	lea    rax,[rsi+0x1]
  414f8c:	mov    rcx,r13
  414f8f:	sub    rcx,rax
  414f92:	cmp    rcx,0x2
  414f96:	jl     415104 <main@@Base+0xe2e4>
  414f9c:	cmp    BYTE PTR [rax],0x20
  414f9f:	jg     415112 <main@@Base+0xe2f2>
  414fa5:	jne    415104 <main@@Base+0xe2e4>
  414fab:	cmp    BYTE PTR [rsi+0x2],0x20
  414faf:	jle    415104 <main@@Base+0xe2e4>
  414fb5:	add    rsi,0x2
  414fb9:	mov    rax,rsi
  414fbc:	cmp    r15,rax
  414fbf:	jne    415117 <main@@Base+0xe2f7>
  414fc5:	jmp    415194 <main@@Base+0xe374>
  414fca:	mov    rdi,r14
  414fcd:	mov    rdx,r13
  414fd0:	mov    ecx,0x4
  414fd5:	call   422690 <flatcc_json_parser_set_error@@Base>
  414fda:	cmp    r15,rax
  414fdd:	jne    415117 <main@@Base+0xe2f7>
  414fe3:	jmp    415194 <main@@Base+0xe374>
  414fe8:	mov    rdi,r14
  414feb:	mov    rdx,r13
  414fee:	call   422710 <flatcc_json_parser_space_ext@@Base>
  414ff3:	mov    rsi,rax
  414ff6:	cmp    rsi,r13
  414ff9:	je     415042 <main@@Base+0xe222>
  414ffb:	cmp    BYTE PTR [rsi],0x3a
  414ffe:	jne    415042 <main@@Base+0xe222>
  415000:	lea    rax,[rsi+0x1]
  415004:	mov    rcx,r13
  415007:	sub    rcx,rax
  41500a:	cmp    rcx,0x2
  41500e:	jl     415142 <main@@Base+0xe322>
  415014:	cmp    BYTE PTR [rax],0x20
  415017:	jg     415150 <main@@Base+0xe330>
  41501d:	jne    415142 <main@@Base+0xe322>
  415023:	cmp    BYTE PTR [rsi+0x2],0x20
  415027:	jle    415142 <main@@Base+0xe322>
  41502d:	add    rsi,0x2
  415031:	mov    rax,rsi
  415034:	cmp    r15,rax
  415037:	jne    415155 <main@@Base+0xe335>
  41503d:	jmp    415194 <main@@Base+0xe374>
  415042:	mov    rdi,r14
  415045:	mov    rdx,r13
  415048:	mov    ecx,0x4
  41504d:	call   422690 <flatcc_json_parser_set_error@@Base>
  415052:	cmp    r15,rax
  415055:	jne    415155 <main@@Base+0xe335>
  41505b:	jmp    415194 <main@@Base+0xe374>
  415060:	mov    rdi,r14
  415063:	mov    rsi,rax
  415066:	mov    rdx,r13
  415069:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41506e:	cmp    r15,rax
  415071:	je     414e12 <main@@Base+0xdff2>
  415077:	mov    r9,QWORD PTR [rsp+0x10]
  41507c:	sub    rsp,0x8
  415080:	mov    rdi,r14
  415083:	mov    rsi,rax
  415086:	mov    rdx,r13
  415089:	mov    ecx,0x0
  41508e:	mov    r8d,0x3
  415094:	lea    rax,[rip+0xffffffffffffd485]        # 412520 <main@@Base+0xb700>
  41509b:	push   rax
  41509c:	call   424f00 <flatcc_json_parser_union_vector@@Base>
  4150a1:	add    rsp,0x10
  4150a5:	jmp    4151a2 <main@@Base+0xe382>
  4150aa:	mov    rdi,r14
  4150ad:	mov    rsi,rax
  4150b0:	mov    rdx,r13
  4150b3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4150b8:	cmp    r12,rax
  4150bb:	je     414f65 <main@@Base+0xe145>
  4150c1:	mov    r9,QWORD PTR [rsp+0x10]
  4150c6:	sub    rsp,0x8
  4150ca:	mov    rdi,r14
  4150cd:	mov    rsi,rax
  4150d0:	mov    rdx,r13
  4150d3:	mov    ecx,0x0
  4150d8:	mov    r8d,0x3
  4150de:	lea    rax,[rip+0x25b]        # 415340 <main@@Base+0xe520>
  4150e5:	push   rax
  4150e6:	lea    rax,[rip+0xffffffffffffd433]        # 412520 <main@@Base+0xb700>
  4150ed:	push   rax
  4150ee:	lea    rax,[rip+0x2b3eb]        # 4404e0 <__data_start@@Base+0x430>
  4150f5:	push   rax
  4150f6:	call   4253a0 <flatcc_json_parser_union_type_vector@@Base>
  4150fb:	add    rsp,0x20
  4150ff:	jmp    4151a2 <main@@Base+0xe382>
  415104:	mov    rdi,r14
  415107:	mov    rsi,rax
  41510a:	mov    rdx,r13
  41510d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415112:	cmp    r15,rax
  415115:	je     415194 <main@@Base+0xe374>
  415117:	mov    rdi,r14
  41511a:	mov    rsi,rax
  41511d:	mov    rdx,r13
  415120:	lea    rcx,[rsp+0xc]
  415125:	call   415350 <main@@Base+0xe530>
  41512a:	mov    rbx,rax
  41512d:	mov    r12d,DWORD PTR [rsp+0xc]
  415132:	test   r12d,r12d
  415135:	je     414a31 <main@@Base+0xdc11>
  41513b:	mov    rdi,QWORD PTR [r14]
  41513e:	xor    esi,esi
  415140:	jmp    415181 <main@@Base+0xe361>
  415142:	mov    rdi,r14
  415145:	mov    rsi,rax
  415148:	mov    rdx,r13
  41514b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415150:	cmp    r15,rax
  415153:	je     415194 <main@@Base+0xe374>
  415155:	mov    rdi,r14
  415158:	mov    rsi,rax
  41515b:	mov    rdx,r13
  41515e:	lea    rcx,[rsp+0xc]
  415163:	call   4182f0 <main@@Base+0x114d0>
  415168:	mov    rbx,rax
  41516b:	mov    r12d,DWORD PTR [rsp+0xc]
  415170:	test   r12d,r12d
  415173:	je     414a31 <main@@Base+0xdc11>
  415179:	mov    rdi,QWORD PTR [r14]
  41517c:	mov    esi,0x1
  415181:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  415186:	test   rax,rax
  415189:	je     414a31 <main@@Base+0xdc11>
  41518f:	mov    DWORD PTR [rax],r12d
  415192:	jmp    4151a5 <main@@Base+0xe385>
  415194:	mov    rdi,r14
  415197:	mov    rsi,r15
  41519a:	mov    rdx,r13
  41519d:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  4151a2:	mov    rbx,rax
  4151a5:	mov    rax,r13
  4151a8:	sub    rax,rbx
  4151ab:	cmp    rax,0x2
  4151af:	jl     4151d0 <main@@Base+0xe3b0>
  4151b1:	cmp    BYTE PTR [rbx],0x20
  4151b4:	jg     4151e1 <main@@Base+0xe3c1>
  4151b6:	jne    4151d0 <main@@Base+0xe3b0>
  4151b8:	cmp    BYTE PTR [rbx+0x1],0x20
  4151bc:	jle    4151d0 <main@@Base+0xe3b0>
  4151be:	inc    rbx
  4151c1:	cmp    rbx,r13
  4151c4:	jne    4151e6 <main@@Base+0xe3c6>
  4151c6:	jmp    41524e <main@@Base+0xe42e>
  4151cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4151d0:	mov    rdi,r14
  4151d3:	mov    rsi,rbx
  4151d6:	mov    rdx,r13
  4151d9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4151de:	mov    rbx,rax
  4151e1:	cmp    rbx,r13
  4151e4:	je     41524e <main@@Base+0xe42e>
  4151e6:	movzx  eax,BYTE PTR [rbx]
  4151e9:	cmp    al,0x2c
  4151eb:	jne    415261 <main@@Base+0xe441>
  4151ed:	lea    rsi,[rbx+0x1]
  4151f1:	mov    rax,r13
  4151f4:	sub    rax,rsi
  4151f7:	cmp    rax,0x2
  4151fb:	jl     415230 <main@@Base+0xe410>
  4151fd:	cmp    BYTE PTR [rsi],0x20
  415200:	jg     41523e <main@@Base+0xe41e>
  415202:	jne    415230 <main@@Base+0xe410>
  415204:	cmp    BYTE PTR [rbx+0x2],0x20
  415208:	jle    415230 <main@@Base+0xe410>
  41520a:	add    rbx,0x2
  41520e:	mov    rsi,rbx
  415211:	cmp    rsi,r13
  415214:	je     415243 <main@@Base+0xe423>
  415216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415220:	cmp    BYTE PTR [rsi],0x7d
  415223:	jne    414b50 <main@@Base+0xdd30>
  415229:	jmp    41529e <main@@Base+0xe47e>
  41522b:	nop    DWORD PTR [rax+rax*1+0x0]
  415230:	mov    rdi,r14
  415233:	mov    rdx,r13
  415236:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41523b:	mov    rsi,rax
  41523e:	cmp    rsi,r13
  415241:	jne    415220 <main@@Base+0xe400>
  415243:	mov    rdi,r14
  415246:	mov    rsi,r13
  415249:	jmp    415320 <main@@Base+0xe500>
  41524e:	mov    rax,r13
  415251:	cmp    DWORD PTR [r14+0x1c],0x0
  415256:	jne    414ac4 <main@@Base+0xdca4>
  41525c:	jmp    4152ec <main@@Base+0xe4cc>
  415261:	cmp    al,0x7d
  415263:	jne    41531a <main@@Base+0xe4fa>
  415269:	lea    rax,[rbx+0x1]
  41526d:	mov    rcx,r13
  415270:	sub    rcx,rax
  415273:	cmp    rcx,0x2
  415277:	jl     4152d3 <main@@Base+0xe4b3>
  415279:	cmp    BYTE PTR [rax],0x20
  41527c:	jg     414ab9 <main@@Base+0xdc99>
  415282:	jne    4152d3 <main@@Base+0xe4b3>
  415284:	cmp    BYTE PTR [rbx+0x2],0x20
  415288:	jle    4152d3 <main@@Base+0xe4b3>
  41528a:	add    rbx,0x2
  41528e:	mov    rax,rbx
  415291:	cmp    DWORD PTR [r14+0x1c],0x0
  415296:	jne    414ac4 <main@@Base+0xdca4>
  41529c:	jmp    4152ec <main@@Base+0xe4cc>
  41529e:	lea    rax,[rsi+0x1]
  4152a2:	mov    rcx,r13
  4152a5:	sub    rcx,rax
  4152a8:	cmp    rcx,0x2
  4152ac:	jl     4152d3 <main@@Base+0xe4b3>
  4152ae:	cmp    BYTE PTR [rax],0x20
  4152b1:	jg     414ab9 <main@@Base+0xdc99>
  4152b7:	jne    4152d3 <main@@Base+0xe4b3>
  4152b9:	cmp    BYTE PTR [rsi+0x2],0x20
  4152bd:	jle    4152d3 <main@@Base+0xe4b3>
  4152bf:	add    rsi,0x2
  4152c3:	mov    rax,rsi
  4152c6:	cmp    DWORD PTR [r14+0x1c],0x0
  4152cb:	jne    414ac4 <main@@Base+0xdca4>
  4152d1:	jmp    4152ec <main@@Base+0xe4cc>
  4152d3:	mov    rdi,r14
  4152d6:	mov    rsi,rax
  4152d9:	mov    rdx,r13
  4152dc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4152e1:	cmp    DWORD PTR [r14+0x1c],0x0
  4152e6:	jne    414ac4 <main@@Base+0xdca4>
  4152ec:	mov    rcx,QWORD PTR [rsp+0x10]
  4152f1:	mov    rdi,r14
  4152f4:	mov    rsi,rax
  4152f7:	mov    rdx,r13
  4152fa:	call   424920 <flatcc_json_parser_finalize_unions@@Base>
  4152ff:	mov    rbx,rax
  415302:	mov    rdi,QWORD PTR [r14]
  415305:	call   41e6d0 <flatcc_builder_end_table@@Base>
  41530a:	mov    DWORD PTR [rbp+0x0],eax
  41530d:	test   eax,eax
  41530f:	jne    414a47 <main@@Base+0xdc27>
  415315:	jmp    414a31 <main@@Base+0xdc11>
  41531a:	mov    rdi,r14
  41531d:	mov    rsi,rbx
  415320:	mov    rdx,r13
  415323:	mov    ecx,0xa
  415328:	call   422690 <flatcc_json_parser_set_error@@Base>
  41532d:	cmp    DWORD PTR [r14+0x1c],0x0
  415332:	jne    414ac4 <main@@Base+0xdca4>
  415338:	jmp    4152ec <main@@Base+0xe4cc>
  41533a:	nop    WORD PTR [rax+rax*1+0x0]
  415340:	xor    eax,eax
  415342:	cmp    dil,0x5
  415346:	setb   al
  415349:	ret    
  41534a:	nop    WORD PTR [rax+rax*1+0x0]
  415350:	push   rbp
  415351:	push   r15
  415353:	push   r14
  415355:	push   r13
  415357:	push   r12
  415359:	push   rbx
  41535a:	sub    rsp,0x38
  41535e:	mov    rbp,rcx
  415361:	mov    r15,rdx
  415364:	mov    rbx,rsi
  415367:	mov    r14,rdi
  41536a:	mov    DWORD PTR [rcx],0x0
  415370:	mov    rdi,QWORD PTR [rdi]
  415373:	mov    esi,0x3
  415378:	call   41dcc0 <flatcc_builder_start_table@@Base>
  41537d:	test   eax,eax
  41537f:	jne    4153d2 <main@@Base+0xe5b2>
  415381:	cmp    rbx,r15
  415384:	je     4153b1 <main@@Base+0xe591>
  415386:	cmp    BYTE PTR [rbx],0x7b
  415389:	jne    4153b1 <main@@Base+0xe591>
  41538b:	lea    rax,[rbx+0x1]
  41538f:	mov    rcx,r15
  415392:	sub    rcx,rax
  415395:	cmp    rcx,0x2
  415399:	jl     4153fa <main@@Base+0xe5da>
  41539b:	cmp    BYTE PTR [rax],0x20
  41539e:	jg     415408 <main@@Base+0xe5e8>
  4153a0:	jne    4153fa <main@@Base+0xe5da>
  4153a2:	cmp    BYTE PTR [rbx+0x2],0x20
  4153a6:	jle    4153fa <main@@Base+0xe5da>
  4153a8:	add    rbx,0x2
  4153ac:	mov    rax,rbx
  4153af:	jmp    415408 <main@@Base+0xe5e8>
  4153b1:	mov    rdi,r14
  4153b4:	mov    rsi,rbx
  4153b7:	mov    rdx,r15
  4153ba:	mov    ecx,0x15
  4153bf:	call   422690 <flatcc_json_parser_set_error@@Base>
  4153c4:	mov    rbx,rax
  4153c7:	cmp    DWORD PTR [r14+0x1c],0x0
  4153cc:	je     4181d4 <main@@Base+0x113b4>
  4153d2:	mov    rdi,r14
  4153d5:	mov    rsi,rbx
  4153d8:	mov    rdx,r15
  4153db:	mov    ecx,0x21
  4153e0:	call   422690 <flatcc_json_parser_set_error@@Base>
  4153e5:	mov    rbx,rax
  4153e8:	mov    rax,rbx
  4153eb:	add    rsp,0x38
  4153ef:	pop    rbx
  4153f0:	pop    r12
  4153f2:	pop    r13
  4153f4:	pop    r14
  4153f6:	pop    r15
  4153f8:	pop    rbp
  4153f9:	ret    
  4153fa:	mov    rdi,r14
  4153fd:	mov    rsi,rax
  415400:	mov    rdx,r15
  415403:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415408:	mov    rsi,r15
  41540b:	cmp    rax,r15
  41540e:	je     415447 <main@@Base+0xe627>
  415410:	cmp    BYTE PTR [rax],0x7d
  415413:	jne    415444 <main@@Base+0xe624>
  415415:	lea    rbx,[rax+0x1]
  415419:	mov    rcx,r15
  41541c:	sub    rcx,rbx
  41541f:	cmp    rcx,0x2
  415423:	jl     41826a <main@@Base+0x1144a>
  415429:	cmp    BYTE PTR [rbx],0x20
  41542c:	jg     4153c7 <main@@Base+0xe5a7>
  41542e:	jne    41826a <main@@Base+0x1144a>
  415434:	cmp    BYTE PTR [rax+0x2],0x20
  415438:	jle    41826a <main@@Base+0x1144a>
  41543e:	add    rax,0x2
  415442:	jmp    4153c4 <main@@Base+0xe5a4>
  415444:	mov    rsi,rax
  415447:	mov    QWORD PTR [rsp+0x18],rbp
  41544c:	mov    QWORD PTR [rsp+0x8],r14
  415451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41545b:	nop    DWORD PTR [rax+rax*1+0x0]
  415460:	mov    r12,r15
  415463:	cmp    rsi,r15
  415466:	je     415493 <main@@Base+0xe673>
  415468:	cmp    BYTE PTR [rsi],0x22
  41546b:	jne    415480 <main@@Base+0xe660>
  41546d:	inc    rsi
  415470:	mov    r12,rsi
  415473:	jmp    415493 <main@@Base+0xe673>
  415475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41547f:	nop
  415480:	mov    rdi,r14
  415483:	mov    rdx,r15
  415486:	mov    ecx,0x5
  41548b:	call   422690 <flatcc_json_parser_set_error@@Base>
  415490:	mov    r12,rax
  415493:	mov    rax,r15
  415496:	sub    rax,r12
  415499:	cmp    rax,0x8
  41549d:	jb     4154b0 <main@@Base+0xe690>
  41549f:	movbe  rax,QWORD PTR [r12]
  4154a5:	jmp    415535 <main@@Base+0xe715>
  4154aa:	nop    WORD PTR [rax+rax*1+0x0]
  4154b0:	dec    rax
  4154b3:	cmp    rax,0x6
  4154b7:	ja     415560 <main@@Base+0xe740>
  4154bd:	lea    rcx,[rip+0x1d1bc]        # 432680 <_IO_stdin_used@@Base+0x680>
  4154c4:	movsxd rbx,DWORD PTR [rcx+rax*4]
  4154c8:	add    rbx,rcx
  4154cb:	xor    ecx,ecx
  4154cd:	xor    eax,eax
  4154cf:	xor    edx,edx
  4154d1:	xor    esi,esi
  4154d3:	xor    edi,edi
  4154d5:	xor    ebp,ebp
  4154d7:	jmp    rbx
  4154d9:	movsx  rcx,BYTE PTR [r12+0x6]
  4154df:	shl    rcx,0x8
  4154e3:	movsx  rax,BYTE PTR [r12+0x5]
  4154e9:	shl    rax,0x10
  4154ed:	or     rax,rcx
  4154f0:	movsx  rdx,BYTE PTR [r12+0x4]
  4154f6:	shl    rdx,0x18
  4154fa:	or     rdx,rax
  4154fd:	movsx  rsi,BYTE PTR [r12+0x3]
  415503:	shl    rsi,0x20
  415507:	or     rsi,rdx
  41550a:	movsx  rdi,BYTE PTR [r12+0x2]
  415510:	shl    rdi,0x28
  415514:	or     rdi,rsi
  415517:	movsx  rbp,BYTE PTR [r12+0x1]
  41551d:	shl    rbp,0x30
  415521:	or     rbp,rdi
  415524:	movzx  eax,BYTE PTR [r12]
  415529:	shl    rax,0x38
  41552d:	or     rax,rbp
  415530:	mov    rbp,QWORD PTR [rsp+0x18]
  415535:	movabs rcx,0x746573746a736f6e
  41553f:	cmp    rax,rcx
  415542:	jne    415560 <main@@Base+0xe740>
  415544:	lea    rsi,[r12+0x8]
  415549:	mov    rax,r15
  41554c:	sub    rax,rsi
  41554f:	cmp    rax,0x8
  415553:	jb     41556b <main@@Base+0xe74b>
  415555:	movbe  rax,QWORD PTR [rsi]
  41555a:	jmp    4155ef <main@@Base+0xe7cf>
  41555f:	nop
  415560:	mov    rdi,r14
  415563:	mov    rsi,r12
  415566:	jmp    415c10 <main@@Base+0xedf0>
  41556b:	dec    rax
  41556e:	cmp    rax,0x6
  415572:	ja     415619 <main@@Base+0xe7f9>
  415578:	lea    rcx,[rip+0x1d11d]        # 43269c <_IO_stdin_used@@Base+0x69c>
  41557f:	movsxd rbx,DWORD PTR [rcx+rax*4]
  415583:	add    rbx,rcx
  415586:	xor    r8d,r8d
  415589:	xor    eax,eax
  41558b:	xor    edx,edx
  41558d:	xor    edi,edi
  41558f:	xor    ebp,ebp
  415591:	xor    ecx,ecx
  415593:	jmp    rbx
  415595:	movsx  r8,BYTE PTR [r12+0xe]
  41559b:	shl    r8,0x8
  41559f:	movsx  rax,BYTE PTR [r12+0xd]
  4155a5:	shl    rax,0x10
  4155a9:	or     rax,r8
  4155ac:	movsx  rdx,BYTE PTR [r12+0xc]
  4155b2:	shl    rdx,0x18
  4155b6:	or     rdx,rax
  4155b9:	movsx  rdi,BYTE PTR [r12+0xb]
  4155bf:	shl    rdi,0x20
  4155c3:	or     rdi,rdx
  4155c6:	movsx  rbp,BYTE PTR [r12+0xa]
  4155cc:	shl    rbp,0x28
  4155d0:	or     rbp,rdi
  4155d3:	movsx  rcx,BYTE PTR [r12+0x9]
  4155d9:	shl    rcx,0x30
  4155dd:	or     rcx,rbp
  4155e0:	movzx  eax,BYTE PTR [rsi]
  4155e3:	shl    rax,0x38
  4155e7:	or     rax,rcx
  4155ea:	mov    rbp,QWORD PTR [rsp+0x18]
  4155ef:	movabs rcx,0x7072656669787061
  4155f9:	cmp    rax,rcx
  4155fc:	jne    415619 <main@@Base+0xe7f9>
  4155fe:	lea    r14,[r12+0x10]
  415603:	mov    r13,r15
  415606:	sub    r13,r14
  415609:	cmp    r13,0x8
  41560d:	jb     415621 <main@@Base+0xe801>
  41560f:	movbe  rax,QWORD PTR [r14]
  415614:	jmp    4156a1 <main@@Base+0xe881>
  415619:	mov    rdi,r14
  41561c:	jmp    415c10 <main@@Base+0xedf0>
  415621:	lea    rax,[r13-0x1]
  415625:	cmp    rax,0x6
  415629:	ja     415c05 <main@@Base+0xede5>
  41562f:	lea    rcx,[rip+0x1d082]        # 4326b8 <_IO_stdin_used@@Base+0x6b8>
  415636:	movsxd rbx,DWORD PTR [rcx+rax*4]
  41563a:	add    rbx,rcx
  41563d:	xor    ecx,ecx
  41563f:	xor    eax,eax
  415641:	xor    edx,edx
  415643:	xor    esi,esi
  415645:	xor    edi,edi
  415647:	xor    ebp,ebp
  415649:	jmp    rbx
  41564b:	movsx  rcx,BYTE PTR [r12+0x16]
  415651:	shl    rcx,0x8
  415655:	movsx  rax,BYTE PTR [r12+0x15]
  41565b:	shl    rax,0x10
  41565f:	or     rax,rcx
  415662:	movsx  rdx,BYTE PTR [r12+0x14]
  415668:	shl    rdx,0x18
  41566c:	or     rdx,rax
  41566f:	movsx  rsi,BYTE PTR [r12+0x13]
  415675:	shl    rsi,0x20
  415679:	or     rsi,rdx
  41567c:	movsx  rdi,BYTE PTR [r12+0x12]
  415682:	shl    rdi,0x28
  415686:	or     rdi,rsi
  415689:	movsx  rbp,BYTE PTR [r12+0x11]
  41568f:	shl    rbp,0x30
  415693:	or     rbp,rdi
  415696:	movzx  eax,BYTE PTR [r14]
  41569a:	shl    rax,0x38
  41569e:	or     rax,rbp
  4156a1:	mov    rbp,rax
  4156a4:	and    rbp,0xffffffffffff0000
  4156ab:	movabs rcx,0x7273696e67000000
  4156b5:	add    rcx,0x320000
  4156bc:	cmp    rbp,rcx
  4156bf:	jne    415721 <main@@Base+0xe901>
  4156c1:	cmp    r13,0x7
  4156c5:	mov    rbp,QWORD PTR [rsp+0x18]
  4156ca:	jl     415c05 <main@@Base+0xede5>
  4156d0:	cmp    BYTE PTR [r12+0x16],0x22
  4156d6:	jne    415c05 <main@@Base+0xede5>
  4156dc:	lea    rsi,[r12+0x17]
  4156e1:	mov    rax,r15
  4156e4:	sub    rax,rsi
  4156e7:	cmp    rax,0x2
  4156eb:	jl     41578f <main@@Base+0xe96f>
  4156f1:	cmp    BYTE PTR [rsi],0x20
  4156f4:	jg     41579f <main@@Base+0xe97f>
  4156fa:	jne    41578f <main@@Base+0xe96f>
  415700:	cmp    BYTE PTR [r12+0x18],0x20
  415706:	jle    41578f <main@@Base+0xe96f>
  41570c:	add    r12,0x18
  415710:	mov    rsi,r12
  415713:	cmp    rsi,r15
  415716:	jne    4157a8 <main@@Base+0xe988>
  41571c:	jmp    4158b9 <main@@Base+0xea99>
  415721:	cmp    r13,0x6
  415725:	jl     415854 <main@@Base+0xea34>
  41572b:	and    rax,0xffffffffff000000
  415731:	movabs rcx,0x7273696e67000000
  41573b:	cmp    rax,rcx
  41573e:	jne    415854 <main@@Base+0xea34>
  415744:	cmp    BYTE PTR [r12+0x15],0x22
  41574a:	jne    415854 <main@@Base+0xea34>
  415750:	lea    rsi,[r12+0x16]
  415755:	mov    rax,r15
  415758:	sub    rax,rsi
  41575b:	cmp    rax,0x2
  41575f:	jl     4157f5 <main@@Base+0xe9d5>
  415765:	cmp    BYTE PTR [rsi],0x20
  415768:	jg     415805 <main@@Base+0xe9e5>
  41576e:	jne    4157f5 <main@@Base+0xe9d5>
  415774:	cmp    BYTE PTR [r12+0x17],0x20
  41577a:	jle    4157f5 <main@@Base+0xe9d5>
  41577c:	lea    rsi,[r12+0x17]
  415781:	cmp    rsi,r15
  415784:	jne    41580e <main@@Base+0xe9ee>
  41578a:	jmp    4158d0 <main@@Base+0xeab0>
  41578f:	mov    rdi,QWORD PTR [rsp+0x8]
  415794:	mov    rdx,r15
  415797:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41579c:	mov    rsi,rax
  41579f:	cmp    rsi,r15
  4157a2:	je     4158b9 <main@@Base+0xea99>
  4157a8:	cmp    BYTE PTR [rsi],0x3a
  4157ab:	jne    4158b9 <main@@Base+0xea99>
  4157b1:	lea    r13,[rsi+0x1]
  4157b5:	mov    rax,r15
  4157b8:	sub    rax,r13
  4157bb:	cmp    rax,0x2
  4157bf:	jl     41595c <main@@Base+0xeb3c>
  4157c5:	cmp    BYTE PTR [r13+0x0],0x20
  4157ca:	jg     41596f <main@@Base+0xeb4f>
  4157d0:	jne    41595c <main@@Base+0xeb3c>
  4157d6:	cmp    BYTE PTR [rsi+0x2],0x20
  4157da:	jle    41595c <main@@Base+0xeb3c>
  4157e0:	add    rsi,0x2
  4157e4:	mov    r13,rsi
  4157e7:	cmp    r14,r13
  4157ea:	jne    415978 <main@@Base+0xeb58>
  4157f0:	jmp    415c05 <main@@Base+0xede5>
  4157f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4157fa:	mov    rdx,r15
  4157fd:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415802:	mov    rsi,rax
  415805:	cmp    rsi,r15
  415808:	je     4158d0 <main@@Base+0xeab0>
  41580e:	cmp    BYTE PTR [rsi],0x3a
  415811:	jne    4158d0 <main@@Base+0xeab0>
  415817:	lea    rbx,[rsi+0x1]
  41581b:	mov    rax,r15
  41581e:	sub    rax,rbx
  415821:	cmp    rax,0x2
  415825:	jl     415a18 <main@@Base+0xebf8>
  41582b:	cmp    BYTE PTR [rbx],0x20
  41582e:	jg     415a2b <main@@Base+0xec0b>
  415834:	jne    415a18 <main@@Base+0xebf8>
  41583a:	cmp    BYTE PTR [rsi+0x2],0x20
  41583e:	jle    415a18 <main@@Base+0xebf8>
  415844:	add    rsi,0x2
  415848:	mov    rbx,rsi
  41584b:	cmp    r14,rbx
  41584e:	jne    415a34 <main@@Base+0xec14>
  415854:	movabs rax,0x7273696e67000000
  41585e:	add    rax,0x330000
  415864:	cmp    rbp,rax
  415867:	mov    rbp,QWORD PTR [rsp+0x18]
  41586c:	jne    415c05 <main@@Base+0xede5>
  415872:	cmp    r13,0x7
  415876:	jl     415c05 <main@@Base+0xede5>
  41587c:	cmp    BYTE PTR [r12+0x16],0x22
  415882:	jne    415c05 <main@@Base+0xede5>
  415888:	lea    rsi,[r12+0x17]
  41588d:	mov    rax,r15
  415890:	sub    rax,rsi
  415893:	cmp    rax,0x2
  415897:	jl     4158e7 <main@@Base+0xeac7>
  415899:	cmp    BYTE PTR [rsi],0x20
  41589c:	jg     4158f7 <main@@Base+0xead7>
  41589e:	jne    4158e7 <main@@Base+0xeac7>
  4158a0:	cmp    BYTE PTR [r12+0x18],0x20
  4158a6:	jle    4158e7 <main@@Base+0xeac7>
  4158a8:	add    r12,0x18
  4158ac:	mov    rsi,r12
  4158af:	cmp    rsi,r15
  4158b2:	jne    4158fc <main@@Base+0xeadc>
  4158b4:	jmp    415945 <main@@Base+0xeb25>
  4158b9:	mov    rdi,QWORD PTR [rsp+0x8]
  4158be:	mov    rdx,r15
  4158c1:	mov    ecx,0x4
  4158c6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4158cb:	jmp    41596c <main@@Base+0xeb4c>
  4158d0:	mov    rdi,QWORD PTR [rsp+0x8]
  4158d5:	mov    rdx,r15
  4158d8:	mov    ecx,0x4
  4158dd:	call   422690 <flatcc_json_parser_set_error@@Base>
  4158e2:	jmp    415a28 <main@@Base+0xec08>
  4158e7:	mov    rdi,QWORD PTR [rsp+0x8]
  4158ec:	mov    rdx,r15
  4158ef:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4158f4:	mov    rsi,rax
  4158f7:	cmp    rsi,r15
  4158fa:	je     415945 <main@@Base+0xeb25>
  4158fc:	cmp    BYTE PTR [rsi],0x3a
  4158ff:	jne    415945 <main@@Base+0xeb25>
  415901:	lea    r13,[rsi+0x1]
  415905:	mov    rax,r15
  415908:	sub    rax,r13
  41590b:	cmp    rax,0x2
  41590f:	jl     415b85 <main@@Base+0xed65>
  415915:	cmp    BYTE PTR [r13+0x0],0x20
  41591a:	jg     415b98 <main@@Base+0xed78>
  415920:	jne    415b85 <main@@Base+0xed65>
  415926:	cmp    BYTE PTR [rsi+0x2],0x20
  41592a:	jle    415b85 <main@@Base+0xed65>
  415930:	add    rsi,0x2
  415934:	mov    r13,rsi
  415937:	cmp    r14,r13
  41593a:	jne    415b9d <main@@Base+0xed7d>
  415940:	jmp    415c05 <main@@Base+0xede5>
  415945:	mov    rdi,QWORD PTR [rsp+0x8]
  41594a:	mov    rdx,r15
  41594d:	mov    ecx,0x4
  415952:	call   422690 <flatcc_json_parser_set_error@@Base>
  415957:	jmp    415b95 <main@@Base+0xed75>
  41595c:	mov    rdi,QWORD PTR [rsp+0x8]
  415961:	mov    rsi,r13
  415964:	mov    rdx,r15
  415967:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41596c:	mov    r13,rax
  41596f:	cmp    r14,r13
  415972:	je     415c05 <main@@Base+0xede5>
  415978:	mov    r14,QWORD PTR [rsp+0x8]
  41597d:	mov    rdi,QWORD PTR [r14]
  415980:	mov    esi,0x2
  415985:	call   41dcc0 <flatcc_builder_start_table@@Base>
  41598a:	test   eax,eax
  41598c:	jne    4182ab <main@@Base+0x1148b>
  415992:	cmp    r13,r15
  415995:	je     4159d8 <main@@Base+0xebb8>
  415997:	cmp    BYTE PTR [r13+0x0],0x7b
  41599c:	jne    4159d8 <main@@Base+0xebb8>
  41599e:	lea    rsi,[r13+0x1]
  4159a2:	mov    rax,r15
  4159a5:	sub    rax,rsi
  4159a8:	cmp    rax,0x2
  4159ac:	jl     415ac1 <main@@Base+0xeca1>
  4159b2:	cmp    BYTE PTR [rsi],0x20
  4159b5:	jg     415acf <main@@Base+0xecaf>
  4159bb:	jne    415ac1 <main@@Base+0xeca1>
  4159c1:	cmp    BYTE PTR [r13+0x2],0x20
  4159c6:	jle    415ac1 <main@@Base+0xeca1>
  4159cc:	add    r13,0x2
  4159d0:	mov    rsi,r13
  4159d3:	jmp    415acf <main@@Base+0xecaf>
  4159d8:	mov    rdi,r14
  4159db:	mov    rsi,r13
  4159de:	mov    rdx,r15
  4159e1:	mov    ecx,0x15
  4159e6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4159eb:	mov    r13,rax
  4159ee:	cmp    DWORD PTR [r14+0x1c],0x0
  4159f3:	jne    4182ab <main@@Base+0x1148b>
  4159f9:	mov    rdi,QWORD PTR [r14]
  4159fc:	call   41e6d0 <flatcc_builder_end_table@@Base>
  415a01:	test   eax,eax
  415a03:	je     4182ab <main@@Base+0x1148b>
  415a09:	mov    ebx,eax
  415a0b:	mov    rdi,QWORD PTR [r14]
  415a0e:	mov    esi,0x1
  415a13:	jmp    4180f5 <main@@Base+0x112d5>
  415a18:	mov    rdi,QWORD PTR [rsp+0x8]
  415a1d:	mov    rsi,rbx
  415a20:	mov    rdx,r15
  415a23:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415a28:	mov    rbx,rax
  415a2b:	cmp    r14,rbx
  415a2e:	je     415854 <main@@Base+0xea34>
  415a34:	mov    r14,QWORD PTR [rsp+0x8]
  415a39:	mov    rdi,QWORD PTR [r14]
  415a3c:	mov    esi,0x9
  415a41:	call   41dcc0 <flatcc_builder_start_table@@Base>
  415a46:	test   eax,eax
  415a48:	jne    41829b <main@@Base+0x1147b>
  415a4e:	cmp    rbx,r15
  415a51:	je     415a96 <main@@Base+0xec76>
  415a53:	cmp    BYTE PTR [rbx],0x7b
  415a56:	jne    415a96 <main@@Base+0xec76>
  415a58:	lea    rax,[rbx+0x1]
  415a5c:	mov    rcx,r15
  415a5f:	sub    rcx,rax
  415a62:	cmp    rcx,0x2
  415a66:	mov    rbp,QWORD PTR [rsp+0x18]
  415a6b:	jl     415b2a <main@@Base+0xed0a>
  415a71:	cmp    BYTE PTR [rax],0x20
  415a74:	jg     415b38 <main@@Base+0xed18>
  415a7a:	jne    415b2a <main@@Base+0xed0a>
  415a80:	cmp    BYTE PTR [rbx+0x2],0x20
  415a84:	jle    415b2a <main@@Base+0xed0a>
  415a8a:	add    rbx,0x2
  415a8e:	mov    rax,rbx
  415a91:	jmp    415b38 <main@@Base+0xed18>
  415a96:	mov    rdi,r14
  415a99:	mov    rsi,rbx
  415a9c:	mov    rdx,r15
  415a9f:	mov    ecx,0x15
  415aa4:	call   422690 <flatcc_json_parser_set_error@@Base>
  415aa9:	mov    r13,rax
  415aac:	mov    rbp,QWORD PTR [rsp+0x18]
  415ab1:	cmp    DWORD PTR [r14+0x1c],0x0
  415ab6:	je     4180de <main@@Base+0x112be>
  415abc:	jmp    418298 <main@@Base+0x11478>
  415ac1:	mov    rdi,r14
  415ac4:	mov    rdx,r15
  415ac7:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415acc:	mov    rsi,rax
  415acf:	mov    rax,r15
  415ad2:	cmp    rsi,r15
  415ad5:	je     415d1b <main@@Base+0xeefb>
  415adb:	cmp    BYTE PTR [rsi],0x7d
  415ade:	jne    415d18 <main@@Base+0xeef8>
  415ae4:	lea    r13,[rsi+0x1]
  415ae8:	mov    rax,r15
  415aeb:	sub    rax,r13
  415aee:	cmp    rax,0x2
  415af2:	jl     41786b <main@@Base+0x10a4b>
  415af8:	cmp    BYTE PTR [r13+0x0],0x20
  415afd:	jg     4159ee <main@@Base+0xebce>
  415b03:	jne    41786b <main@@Base+0x10a4b>
  415b09:	cmp    BYTE PTR [rsi+0x2],0x20
  415b0d:	jle    41786b <main@@Base+0x10a4b>
  415b13:	add    rsi,0x2
  415b17:	mov    r13,rsi
  415b1a:	cmp    DWORD PTR [r14+0x1c],0x0
  415b1f:	je     4159f9 <main@@Base+0xebd9>
  415b25:	jmp    4182ab <main@@Base+0x1148b>
  415b2a:	mov    rdi,r14
  415b2d:	mov    rsi,rax
  415b30:	mov    rdx,r15
  415b33:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415b38:	mov    rsi,r15
  415b3b:	cmp    rax,r15
  415b3e:	je     416378 <main@@Base+0xf558>
  415b44:	cmp    BYTE PTR [rax],0x7d
  415b47:	jne    416375 <main@@Base+0xf555>
  415b4d:	lea    r13,[rax+0x1]
  415b51:	mov    rcx,r15
  415b54:	sub    rcx,r13
  415b57:	cmp    rcx,0x2
  415b5b:	jl     417918 <main@@Base+0x10af8>
  415b61:	cmp    BYTE PTR [r13+0x0],0x20
  415b66:	jg     4180d3 <main@@Base+0x112b3>
  415b6c:	jne    417918 <main@@Base+0x10af8>
  415b72:	cmp    BYTE PTR [rax+0x2],0x20
  415b76:	jle    417918 <main@@Base+0x10af8>
  415b7c:	add    rax,0x2
  415b80:	jmp    4180d0 <main@@Base+0x112b0>
  415b85:	mov    rdi,QWORD PTR [rsp+0x8]
  415b8a:	mov    rsi,r13
  415b8d:	mov    rdx,r15
  415b90:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415b95:	mov    r13,rax
  415b98:	cmp    r14,r13
  415b9b:	je     415c05 <main@@Base+0xede5>
  415b9d:	mov    r14,QWORD PTR [rsp+0x8]
  415ba2:	mov    rdi,QWORD PTR [r14]
  415ba5:	mov    esi,0x2
  415baa:	call   41dcc0 <flatcc_builder_start_table@@Base>
  415baf:	test   eax,eax
  415bb1:	jne    4182ab <main@@Base+0x1148b>
  415bb7:	cmp    r13,r15
  415bba:	je     415cd8 <main@@Base+0xeeb8>
  415bc0:	cmp    BYTE PTR [r13+0x0],0x7b
  415bc5:	jne    415cd8 <main@@Base+0xeeb8>
  415bcb:	lea    rsi,[r13+0x1]
  415bcf:	mov    rax,r15
  415bd2:	sub    rax,rsi
  415bd5:	cmp    rax,0x2
  415bd9:	jl     417776 <main@@Base+0x10956>
  415bdf:	cmp    BYTE PTR [rsi],0x20
  415be2:	jg     417784 <main@@Base+0x10964>
  415be8:	jne    417776 <main@@Base+0x10956>
  415bee:	cmp    BYTE PTR [r13+0x2],0x20
  415bf3:	jle    417776 <main@@Base+0x10956>
  415bf9:	add    r13,0x2
  415bfd:	mov    rsi,r13
  415c00:	jmp    417784 <main@@Base+0x10964>
  415c05:	mov    rdi,QWORD PTR [rsp+0x8]
  415c0a:	mov    rsi,r14
  415c0d:	mov    r14,rdi
  415c10:	mov    rdx,r15
  415c13:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  415c18:	mov    r13,rax
  415c1b:	mov    rax,r15
  415c1e:	sub    rax,r13
  415c21:	cmp    rax,0x2
  415c25:	jl     415c50 <main@@Base+0xee30>
  415c27:	cmp    BYTE PTR [r13+0x0],0x20
  415c2c:	jg     415c61 <main@@Base+0xee41>
  415c2e:	jne    415c50 <main@@Base+0xee30>
  415c30:	cmp    BYTE PTR [r13+0x1],0x20
  415c35:	jle    415c50 <main@@Base+0xee30>
  415c37:	inc    r13
  415c3a:	cmp    r13,r15
  415c3d:	jne    415c6a <main@@Base+0xee4a>
  415c3f:	jmp    4181c6 <main@@Base+0x113a6>
  415c44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c4e:	xchg   ax,ax
  415c50:	mov    rdi,r14
  415c53:	mov    rsi,r13
  415c56:	mov    rdx,r15
  415c59:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415c5e:	mov    r13,rax
  415c61:	cmp    r13,r15
  415c64:	je     4181c6 <main@@Base+0x113a6>
  415c6a:	mov    al,BYTE PTR [r13+0x0]
  415c6e:	cmp    al,0x2c
  415c70:	jne    4181ec <main@@Base+0x113cc>
  415c76:	lea    rsi,[r13+0x1]
  415c7a:	mov    rax,r15
  415c7d:	sub    rax,rsi
  415c80:	cmp    rax,0x2
  415c84:	jl     415cc0 <main@@Base+0xeea0>
  415c86:	cmp    BYTE PTR [rsi],0x20
  415c89:	jg     415cce <main@@Base+0xeeae>
  415c8b:	jne    415cc0 <main@@Base+0xeea0>
  415c8d:	cmp    BYTE PTR [r13+0x2],0x20
  415c92:	jle    415cc0 <main@@Base+0xeea0>
  415c94:	add    r13,0x2
  415c98:	mov    rsi,r13
  415c9b:	cmp    rsi,r15
  415c9e:	je     41822a <main@@Base+0x1140a>
  415ca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cae:	xchg   ax,ax
  415cb0:	cmp    BYTE PTR [rsi],0x7d
  415cb3:	jne    415460 <main@@Base+0xe640>
  415cb9:	jmp    418232 <main@@Base+0x11412>
  415cbe:	xchg   ax,ax
  415cc0:	mov    rdi,r14
  415cc3:	mov    rdx,r15
  415cc6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415ccb:	mov    rsi,rax
  415cce:	cmp    rsi,r15
  415cd1:	jne    415cb0 <main@@Base+0xee90>
  415cd3:	jmp    41822a <main@@Base+0x1140a>
  415cd8:	mov    rdi,r14
  415cdb:	mov    rsi,r13
  415cde:	mov    rdx,r15
  415ce1:	mov    ecx,0x15
  415ce6:	call   422690 <flatcc_json_parser_set_error@@Base>
  415ceb:	mov    r13,rax
  415cee:	cmp    DWORD PTR [r14+0x1c],0x0
  415cf3:	jne    4182ab <main@@Base+0x1148b>
  415cf9:	mov    rdi,QWORD PTR [r14]
  415cfc:	call   41e6d0 <flatcc_builder_end_table@@Base>
  415d01:	test   eax,eax
  415d03:	je     4182ab <main@@Base+0x1148b>
  415d09:	mov    ebx,eax
  415d0b:	mov    rdi,QWORD PTR [r14]
  415d0e:	mov    esi,0x2
  415d13:	jmp    4180f5 <main@@Base+0x112d5>
  415d18:	mov    rax,rsi
  415d1b:	mov    rsi,r15
  415d1e:	cmp    rax,r15
  415d21:	je     415d43 <main@@Base+0xef23>
  415d23:	cmp    BYTE PTR [rax],0x22
  415d26:	jne    415d2d <main@@Base+0xef0d>
  415d28:	inc    rax
  415d2b:	jmp    415d40 <main@@Base+0xef20>
  415d2d:	mov    rdi,r14
  415d30:	mov    rsi,rax
  415d33:	mov    rdx,r15
  415d36:	mov    ecx,0x5
  415d3b:	call   422690 <flatcc_json_parser_set_error@@Base>
  415d40:	mov    rsi,rax
  415d43:	mov    rax,r15
  415d46:	sub    rax,rsi
  415d49:	cmp    rax,0x8
  415d4d:	jb     415d59 <main@@Base+0xef39>
  415d4f:	movbe  rax,QWORD PTR [rsi]
  415d54:	jmp    415dda <main@@Base+0xefba>
  415d59:	dec    rax
  415d5c:	cmp    rax,0x6
  415d60:	ja     415e04 <main@@Base+0xefe4>
  415d66:	lea    rcx,[rip+0x1ca2b]        # 432798 <_IO_stdin_used@@Base+0x798>
  415d6d:	mov    rdx,rcx
  415d70:	movsxd rcx,DWORD PTR [rcx+rax*4]
  415d74:	add    rcx,rdx
  415d77:	xor    r8d,r8d
  415d7a:	xor    eax,eax
  415d7c:	xor    edx,edx
  415d7e:	xor    edi,edi
  415d80:	xor    ebp,ebp
  415d82:	xor    ebx,ebx
  415d84:	jmp    rcx
  415d86:	movsx  r8,BYTE PTR [rsi+0x6]
  415d8b:	shl    r8,0x8
  415d8f:	movsx  rax,BYTE PTR [rsi+0x5]
  415d94:	shl    rax,0x10
  415d98:	or     rax,r8
  415d9b:	movsx  rdx,BYTE PTR [rsi+0x4]
  415da0:	shl    rdx,0x18
  415da4:	or     rdx,rax
  415da7:	movsx  rdi,BYTE PTR [rsi+0x3]
  415dac:	shl    rdi,0x20
  415db0:	or     rdi,rdx
  415db3:	movsx  rbp,BYTE PTR [rsi+0x2]
  415db8:	shl    rbp,0x28
  415dbc:	or     rbp,rdi
  415dbf:	movsx  rbx,BYTE PTR [rsi+0x1]
  415dc4:	shl    rbx,0x30
  415dc8:	or     rbx,rbp
  415dcb:	movzx  eax,BYTE PTR [rsi]
  415dce:	shl    rax,0x38
  415dd2:	or     rax,rbx
  415dd5:	mov    rbp,QWORD PTR [rsp+0x18]
  415dda:	movabs rcx,0x616161615f626262
  415de4:	cmp    rax,rcx
  415de7:	jne    415e04 <main@@Base+0xefe4>
  415de9:	lea    r12,[rsi+0x8]
  415ded:	mov    rax,r15
  415df0:	sub    rax,r12
  415df3:	cmp    rax,0x8
  415df7:	jb     415e17 <main@@Base+0xeff7>
  415df9:	movbe  rcx,QWORD PTR [r12]
  415dff:	jmp    415e94 <main@@Base+0xf074>
  415e04:	mov    rdi,r14
  415e07:	mov    rdx,r15
  415e0a:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  415e0f:	mov    rbx,rax
  415e12:	jmp    41615e <main@@Base+0xf33e>
  415e17:	lea    rcx,[rax-0x1]
  415e1b:	cmp    rcx,0x6
  415e1f:	ja     416148 <main@@Base+0xf328>
  415e25:	lea    rdx,[rip+0x1c988]        # 4327b4 <_IO_stdin_used@@Base+0x7b4>
  415e2c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  415e30:	add    rcx,rdx
  415e33:	xor    r8d,r8d
  415e36:	xor    r9d,r9d
  415e39:	xor    edi,edi
  415e3b:	xor    ebp,ebp
  415e3d:	xor    ebx,ebx
  415e3f:	xor    edx,edx
  415e41:	jmp    rcx
  415e43:	movsx  r8,BYTE PTR [rsi+0xe]
  415e48:	shl    r8,0x8
  415e4c:	movsx  r9,BYTE PTR [rsi+0xd]
  415e51:	shl    r9,0x10
  415e55:	or     r9,r8
  415e58:	movsx  rdi,BYTE PTR [rsi+0xc]
  415e5d:	shl    rdi,0x18
  415e61:	or     rdi,r9
  415e64:	movsx  rbp,BYTE PTR [rsi+0xb]
  415e69:	shl    rbp,0x20
  415e6d:	or     rbp,rdi
  415e70:	movsx  rbx,BYTE PTR [rsi+0xa]
  415e75:	shl    rbx,0x28
  415e79:	or     rbx,rbp
  415e7c:	movsx  rdx,BYTE PTR [rsi+0x9]
  415e81:	shl    rdx,0x30
  415e85:	or     rdx,rbx
  415e88:	movzx  ecx,BYTE PTR [r12]
  415e8d:	shl    rcx,0x38
  415e91:	or     rcx,rdx
  415e94:	mov    rdx,rcx
  415e97:	and    rdx,0xffffffffffffff00
  415e9e:	movabs rbp,0x625f73746172745f
  415ea8:	lea    rdi,[rbp+0x3fdfea1]
  415eaf:	cmp    rdx,rdi
  415eb2:	jne    415ef6 <main@@Base+0xf0d6>
  415eb4:	cmp    rax,0x8
  415eb8:	jl     416148 <main@@Base+0xf328>
  415ebe:	cmp    BYTE PTR [rsi+0xf],0x22
  415ec2:	jne    416148 <main@@Base+0xf328>
  415ec8:	lea    rax,[rsi+0x10]
  415ecc:	mov    rcx,r15
  415ecf:	sub    rcx,rax
  415ed2:	cmp    rcx,0x2
  415ed6:	jl     415f49 <main@@Base+0xf129>
  415ed8:	cmp    BYTE PTR [rax],0x20
  415edb:	jg     415f57 <main@@Base+0xf137>
  415edd:	jne    415f49 <main@@Base+0xf129>
  415edf:	cmp    BYTE PTR [rsi+0x11],0x20
  415ee3:	jle    415f49 <main@@Base+0xf129>
  415ee5:	add    rsi,0x11
  415ee9:	mov    rax,rsi
  415eec:	cmp    rax,r15
  415eef:	jne    415f5c <main@@Base+0xf13c>
  415ef1:	jmp    415f98 <main@@Base+0xf178>
  415ef6:	cmp    rcx,rbp
  415ef9:	jne    416148 <main@@Base+0xf328>
  415eff:	cmp    rax,0x9
  415f03:	jl     416148 <main@@Base+0xf328>
  415f09:	cmp    BYTE PTR [rsi+0x10],0x22
  415f0d:	jne    416148 <main@@Base+0xf328>
  415f13:	lea    rax,[rsi+0x11]
  415f17:	mov    rcx,r15
  415f1a:	sub    rcx,rax
  415f1d:	cmp    rcx,0x2
  415f21:	jl     415fad <main@@Base+0xf18d>
  415f27:	cmp    BYTE PTR [rax],0x20
  415f2a:	jg     415fbb <main@@Base+0xf19b>
  415f30:	jne    415fad <main@@Base+0xf18d>
  415f32:	cmp    BYTE PTR [rsi+0x12],0x20
  415f36:	jle    415fad <main@@Base+0xf18d>
  415f38:	add    rsi,0x12
  415f3c:	mov    rax,rsi
  415f3f:	cmp    rax,r15
  415f42:	jne    415fc0 <main@@Base+0xf1a0>
  415f44:	jmp    415ffc <main@@Base+0xf1dc>
  415f49:	mov    rdi,r14
  415f4c:	mov    rsi,rax
  415f4f:	mov    rdx,r15
  415f52:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415f57:	cmp    rax,r15
  415f5a:	je     415f98 <main@@Base+0xf178>
  415f5c:	cmp    BYTE PTR [rax],0x3a
  415f5f:	jne    415f98 <main@@Base+0xf178>
  415f61:	lea    rbp,[rax+0x1]
  415f65:	mov    rcx,r15
  415f68:	sub    rcx,rbp
  415f6b:	cmp    rcx,0x2
  415f6f:	jl     416014 <main@@Base+0xf1f4>
  415f75:	cmp    BYTE PTR [rbp+0x0],0x20
  415f79:	jg     416025 <main@@Base+0xf205>
  415f7f:	jne    416014 <main@@Base+0xf1f4>
  415f85:	cmp    BYTE PTR [rax+0x2],0x20
  415f89:	jle    416014 <main@@Base+0xf1f4>
  415f8f:	add    rax,0x2
  415f93:	jmp    416022 <main@@Base+0xf202>
  415f98:	mov    rdi,r14
  415f9b:	mov    rsi,rax
  415f9e:	mov    rdx,r15
  415fa1:	mov    ecx,0x4
  415fa6:	call   422690 <flatcc_json_parser_set_error@@Base>
  415fab:	jmp    416022 <main@@Base+0xf202>
  415fad:	mov    rdi,r14
  415fb0:	mov    rsi,rax
  415fb3:	mov    rdx,r15
  415fb6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  415fbb:	cmp    rax,r15
  415fbe:	je     415ffc <main@@Base+0xf1dc>
  415fc0:	cmp    BYTE PTR [rax],0x3a
  415fc3:	jne    415ffc <main@@Base+0xf1dc>
  415fc5:	lea    rbp,[rax+0x1]
  415fc9:	mov    rcx,r15
  415fcc:	sub    rcx,rbp
  415fcf:	cmp    rcx,0x2
  415fd3:	jl     4160cb <main@@Base+0xf2ab>
  415fd9:	cmp    BYTE PTR [rbp+0x0],0x20
  415fdd:	jg     4160dc <main@@Base+0xf2bc>
  415fe3:	jne    4160cb <main@@Base+0xf2ab>
  415fe9:	cmp    BYTE PTR [rax+0x2],0x20
  415fed:	jle    4160cb <main@@Base+0xf2ab>
  415ff3:	add    rax,0x2
  415ff7:	jmp    4160d9 <main@@Base+0xf2b9>
  415ffc:	mov    rdi,r14
  415fff:	mov    rsi,rax
  416002:	mov    rdx,r15
  416005:	mov    ecx,0x4
  41600a:	call   422690 <flatcc_json_parser_set_error@@Base>
  41600f:	jmp    4160d9 <main@@Base+0xf2b9>
  416014:	mov    rdi,r14
  416017:	mov    rsi,rbp
  41601a:	mov    rdx,r15
  41601d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416022:	mov    rbp,rax
  416025:	cmp    r12,rbp
  416028:	je     416148 <main@@Base+0xf328>
  41602e:	mov    QWORD PTR [rsp+0x28],0x0
  416037:	mov    DWORD PTR [rsp+0x14],0x0
  41603f:	mov    QWORD PTR [rsp+0x20],0x0
  416048:	cmp    rbp,r15
  41604b:	je     4160a3 <main@@Base+0xf283>
  41604d:	mov    rdi,r14
  416050:	mov    rsi,rbp
  416053:	mov    rdx,r15
  416056:	lea    rcx,[rsp+0x14]
  41605b:	lea    r8,[rsp+0x28]
  416060:	call   424130 <flatcc_json_parser_integer@@Base>
  416065:	cmp    rax,rbp
  416068:	je     4160b7 <main@@Base+0xf297>
  41606a:	mov    rbx,rax
  41606d:	mov    r12,QWORD PTR [rsp+0x28]
  416072:	cmp    DWORD PTR [rsp+0x14],0x0
  416077:	je     41620d <main@@Base+0xf3ed>
  41607d:	movabs rax,0x8000000000000000
  416087:	cmp    r12,rax
  41608a:	jbe    416232 <main@@Base+0xf412>
  416090:	mov    rdi,r14
  416093:	mov    rsi,rbx
  416096:	mov    rdx,r15
  416099:	mov    ecx,0x8
  41609e:	jmp    416220 <main@@Base+0xf400>
  4160a3:	xor    r12d,r12d
  4160a6:	mov    rbx,r15
  4160a9:	cmp    rbp,rbx
  4160ac:	jne    416273 <main@@Base+0xf453>
  4160b2:	jmp    41623f <main@@Base+0xf41f>
  4160b7:	xor    r12d,r12d
  4160ba:	mov    rbx,rbp
  4160bd:	cmp    rbp,rbx
  4160c0:	jne    416273 <main@@Base+0xf453>
  4160c6:	jmp    41623f <main@@Base+0xf41f>
  4160cb:	mov    rdi,r14
  4160ce:	mov    rsi,rbp
  4160d1:	mov    rdx,r15
  4160d4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4160d9:	mov    rbp,rax
  4160dc:	cmp    r12,rbp
  4160df:	je     416148 <main@@Base+0xf328>
  4160e1:	mov    QWORD PTR [rsp+0x28],0x0
  4160ea:	mov    DWORD PTR [rsp+0x20],0x0
  4160f2:	mov    DWORD PTR [rsp+0x14],0x0
  4160fa:	xor    r12d,r12d
  4160fd:	cmp    rbp,r15
  416100:	je     4161fc <main@@Base+0xf3dc>
  416106:	mov    rdi,r14
  416109:	mov    rsi,rbp
  41610c:	mov    rdx,r15
  41610f:	lea    rcx,[rsp+0x20]
  416114:	lea    r8,[rsp+0x28]
  416119:	call   424130 <flatcc_json_parser_integer@@Base>
  41611e:	cmp    rax,rbp
  416121:	je     4162ad <main@@Base+0xf48d>
  416127:	mov    rbx,rax
  41612a:	cmp    DWORD PTR [rsp+0x20],0x0
  41612f:	je     4162b7 <main@@Base+0xf497>
  416135:	mov    rdi,r14
  416138:	mov    rsi,rbx
  41613b:	mov    rdx,r15
  41613e:	mov    ecx,0x8
  416143:	jmp    4162dc <main@@Base+0xf4bc>
  416148:	mov    rdi,r14
  41614b:	mov    rsi,r12
  41614e:	mov    rdx,r15
  416151:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  416156:	mov    rbx,rax
  416159:	mov    rbp,QWORD PTR [rsp+0x18]
  41615e:	mov    rax,r15
  416161:	sub    rax,rbx
  416164:	cmp    rax,0x2
  416168:	jl     416184 <main@@Base+0xf364>
  41616a:	cmp    BYTE PTR [rbx],0x20
  41616d:	jg     416195 <main@@Base+0xf375>
  41616f:	jne    416184 <main@@Base+0xf364>
  416171:	cmp    BYTE PTR [rbx+0x1],0x20
  416175:	jle    416184 <main@@Base+0xf364>
  416177:	inc    rbx
  41617a:	cmp    rbx,r15
  41617d:	jne    41619e <main@@Base+0xf37e>
  41617f:	jmp    4177df <main@@Base+0x109bf>
  416184:	mov    rdi,r14
  416187:	mov    rsi,rbx
  41618a:	mov    rdx,r15
  41618d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416192:	mov    rbx,rax
  416195:	cmp    rbx,r15
  416198:	je     4177df <main@@Base+0x109bf>
  41619e:	movzx  eax,BYTE PTR [rbx]
  4161a1:	cmp    al,0x2c
  4161a3:	jne    4177f2 <main@@Base+0x109d2>
  4161a9:	lea    rax,[rbx+0x1]
  4161ad:	mov    rcx,r15
  4161b0:	sub    rcx,rax
  4161b3:	cmp    rcx,0x2
  4161b7:	jl     4161d7 <main@@Base+0xf3b7>
  4161b9:	cmp    BYTE PTR [rax],0x20
  4161bc:	jg     4161e5 <main@@Base+0xf3c5>
  4161be:	jne    4161d7 <main@@Base+0xf3b7>
  4161c0:	cmp    BYTE PTR [rbx+0x2],0x20
  4161c4:	jle    4161d7 <main@@Base+0xf3b7>
  4161c6:	add    rbx,0x2
  4161ca:	mov    rax,rbx
  4161cd:	cmp    rax,r15
  4161d0:	jne    4161ee <main@@Base+0xf3ce>
  4161d2:	jmp    417834 <main@@Base+0x10a14>
  4161d7:	mov    rdi,r14
  4161da:	mov    rsi,rax
  4161dd:	mov    rdx,r15
  4161e0:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4161e5:	cmp    rax,r15
  4161e8:	je     417834 <main@@Base+0x10a14>
  4161ee:	cmp    BYTE PTR [rax],0x7d
  4161f1:	jne    415d1b <main@@Base+0xeefb>
  4161f7:	jmp    41783f <main@@Base+0x10a1f>
  4161fc:	mov    rbx,r15
  4161ff:	cmp    rbp,rbx
  416202:	jne    416322 <main@@Base+0xf502>
  416208:	jmp    4162e9 <main@@Base+0xf4c9>
  41620d:	test   r12,r12
  416210:	jns    416235 <main@@Base+0xf415>
  416212:	mov    rdi,r14
  416215:	mov    rsi,rbx
  416218:	mov    rdx,r15
  41621b:	mov    ecx,0x7
  416220:	call   422690 <flatcc_json_parser_set_error@@Base>
  416225:	mov    rbx,rax
  416228:	xor    r12d,r12d
  41622b:	cmp    rbp,rbx
  41622e:	jne    416273 <main@@Base+0xf453>
  416230:	jmp    41623f <main@@Base+0xf41f>
  416232:	neg    r12
  416235:	mov    QWORD PTR [rsp+0x20],r12
  41623a:	cmp    rbp,rbx
  41623d:	jne    416273 <main@@Base+0xf453>
  41623f:	mov    rdi,r14
  416242:	mov    rsi,rbp
  416245:	mov    rdx,r15
  416248:	lea    rcx,[rip+0x2a2b1]        # 440500 <__data_start@@Base+0x450>
  41624f:	lea    r8,[rsp+0x20]
  416254:	call   413ad0 <main@@Base+0xccb0>
  416259:	mov    rbx,rax
  41625c:	cmp    rax,rbp
  41625f:	je     4182a3 <main@@Base+0x11483>
  416265:	cmp    rbx,r15
  416268:	je     4182a3 <main@@Base+0x11483>
  41626e:	mov    r12,QWORD PTR [rsp+0x20]
  416273:	test   r12,r12
  416276:	mov    rbp,QWORD PTR [rsp+0x18]
  41627b:	jne    416288 <main@@Base+0xf468>
  41627d:	test   BYTE PTR [r14+0x10],0x2
  416282:	je     41615e <main@@Base+0xf33e>
  416288:	mov    rdi,QWORD PTR [r14]
  41628b:	mov    edx,0x8
  416290:	xor    esi,esi
  416292:	mov    ecx,0x8
  416297:	call   41f040 <flatcc_builder_table_add@@Base>
  41629c:	test   rax,rax
  41629f:	je     4182a3 <main@@Base+0x11483>
  4162a5:	mov    QWORD PTR [rax],r12
  4162a8:	jmp    41615e <main@@Base+0xf33e>
  4162ad:	mov    rbx,rbp
  4162b0:	cmp    rbp,rbx
  4162b3:	jne    416322 <main@@Base+0xf502>
  4162b5:	jmp    4162e9 <main@@Base+0xf4c9>
  4162b7:	mov    rax,QWORD PTR [rsp+0x28]
  4162bc:	mov    rcx,rax
  4162bf:	shr    rcx,0x20
  4162c3:	je     41635f <main@@Base+0xf53f>
  4162c9:	mov    r14,QWORD PTR [rsp+0x8]
  4162ce:	mov    rdi,r14
  4162d1:	mov    rsi,rbx
  4162d4:	mov    rdx,r15
  4162d7:	mov    ecx,0x7
  4162dc:	call   422690 <flatcc_json_parser_set_error@@Base>
  4162e1:	mov    rbx,rax
  4162e4:	cmp    rbp,rbx
  4162e7:	jne    416322 <main@@Base+0xf502>
  4162e9:	mov    rdi,r14
  4162ec:	mov    rsi,rbp
  4162ef:	mov    rdx,r15
  4162f2:	lea    rcx,[rip+0x2a227]        # 440520 <__data_start@@Base+0x470>
  4162f9:	lea    r8,[rsp+0x14]
  4162fe:	call   413c80 <main@@Base+0xce60>
  416303:	mov    rbx,rax
  416306:	cmp    rax,rbp
  416309:	je     4182a3 <main@@Base+0x11483>
  41630f:	cmp    rbx,r15
  416312:	je     4182a3 <main@@Base+0x11483>
  416318:	mov    r12d,DWORD PTR [rsp+0x14]
  41631d:	mov    r14,QWORD PTR [rsp+0x8]
  416322:	test   r12d,r12d
  416325:	mov    rbp,QWORD PTR [rsp+0x18]
  41632a:	jne    416337 <main@@Base+0xf517>
  41632c:	test   BYTE PTR [r14+0x10],0x2
  416331:	je     41615e <main@@Base+0xf33e>
  416337:	mov    rdi,QWORD PTR [r14]
  41633a:	mov    edx,0x4
  41633f:	mov    esi,0x1
  416344:	mov    ecx,0x4
  416349:	call   41f040 <flatcc_builder_table_add@@Base>
  41634e:	test   rax,rax
  416351:	je     4182a3 <main@@Base+0x11483>
  416357:	mov    DWORD PTR [rax],r12d
  41635a:	jmp    41615e <main@@Base+0xf33e>
  41635f:	mov    DWORD PTR [rsp+0x14],eax
  416363:	mov    r12d,eax
  416366:	mov    r14,QWORD PTR [rsp+0x8]
  41636b:	cmp    rbp,rbx
  41636e:	jne    416322 <main@@Base+0xf502>
  416370:	jmp    4162e9 <main@@Base+0xf4c9>
  416375:	mov    rsi,rax
  416378:	mov    r13,r15
  41637b:	cmp    rsi,r15
  41637e:	je     4163a0 <main@@Base+0xf580>
  416380:	cmp    BYTE PTR [rsi],0x22
  416383:	jne    41638d <main@@Base+0xf56d>
  416385:	inc    rsi
  416388:	mov    r13,rsi
  41638b:	jmp    4163a0 <main@@Base+0xf580>
  41638d:	mov    rdi,r14
  416390:	mov    rdx,r15
  416393:	mov    ecx,0x5
  416398:	call   422690 <flatcc_json_parser_set_error@@Base>
  41639d:	mov    r13,rax
  4163a0:	mov    r12,r15
  4163a3:	sub    r12,r13
  4163a6:	cmp    r12,0x8
  4163aa:	jb     4163b7 <main@@Base+0xf597>
  4163ac:	movbe  rbx,QWORD PTR [r13+0x0]
  4163b2:	jmp    416438 <main@@Base+0xf618>
  4163b7:	lea    rax,[r12-0x1]
  4163bc:	cmp    rax,0x6
  4163c0:	ja     4174ce <main@@Base+0x106ae>
  4163c6:	lea    rcx,[rip+0x1c307]        # 4326d4 <_IO_stdin_used@@Base+0x6d4>
  4163cd:	movsxd rbx,DWORD PTR [rcx+rax*4]
  4163d1:	add    rbx,rcx
  4163d4:	xor    ecx,ecx
  4163d6:	xor    eax,eax
  4163d8:	xor    edx,edx
  4163da:	xor    esi,esi
  4163dc:	xor    edi,edi
  4163de:	xor    ebp,ebp
  4163e0:	jmp    rbx
  4163e2:	movsx  rcx,BYTE PTR [r13+0x6]
  4163e7:	shl    rcx,0x8
  4163eb:	movsx  rax,BYTE PTR [r13+0x5]
  4163f0:	shl    rax,0x10
  4163f4:	or     rax,rcx
  4163f7:	movsx  rdx,BYTE PTR [r13+0x4]
  4163fc:	shl    rdx,0x18
  416400:	or     rdx,rax
  416403:	movsx  rsi,BYTE PTR [r13+0x3]
  416408:	shl    rsi,0x20
  41640c:	or     rsi,rdx
  41640f:	movsx  rdi,BYTE PTR [r13+0x2]
  416414:	shl    rdi,0x28
  416418:	or     rdi,rsi
  41641b:	movsx  rbp,BYTE PTR [r13+0x1]
  416420:	shl    rbp,0x30
  416424:	or     rbp,rdi
  416427:	movzx  ebx,BYTE PTR [r13+0x0]
  41642c:	shl    rbx,0x38
  416430:	or     rbx,rbp
  416433:	mov    rbp,QWORD PTR [rsp+0x18]
  416438:	movabs rdx,0x6363636300000000
  416442:	movabs rsi,0x6262626200000000
  41644c:	cmp    rbx,rdx
  41644f:	movabs rcx,0x616161615f626262
  416459:	jae    416489 <main@@Base+0xf669>
  41645b:	lea    rax,[rcx-0x2e302f2e]
  416462:	cmp    rbx,rax
  416465:	jne    4164f4 <main@@Base+0xf6d4>
  41646b:	lea    r14,[r13+0x8]
  41646f:	mov    rax,r15
  416472:	sub    rax,r14
  416475:	cmp    rax,0x8
  416479:	jb     4165e3 <main@@Base+0xf7c3>
  41647f:	movbe  rcx,QWORD PTR [r14]
  416484:	jmp    416663 <main@@Base+0xf843>
  416489:	lea    rax,[rdx+0x31323334]
  416490:	cmp    rbx,rax
  416493:	jne    41656f <main@@Base+0xf74f>
  416499:	mov    rbx,r13
  41649c:	cmp    r12,0x9
  4164a0:	jl     416ba6 <main@@Base+0xfd86>
  4164a6:	cmp    BYTE PTR [r13+0x8],0x22
  4164ab:	mov    rbx,r13
  4164ae:	jne    416ba6 <main@@Base+0xfd86>
  4164b4:	lea    rsi,[r13+0x9]
  4164b8:	mov    rax,r15
  4164bb:	sub    rax,rsi
  4164be:	cmp    rax,0x2
  4164c2:	jl     4166db <main@@Base+0xf8bb>
  4164c8:	cmp    BYTE PTR [rsi],0x20
  4164cb:	jg     4166e9 <main@@Base+0xf8c9>
  4164d1:	jne    4166db <main@@Base+0xf8bb>
  4164d7:	cmp    BYTE PTR [r13+0xa],0x20
  4164dc:	jle    4166db <main@@Base+0xf8bb>
  4164e2:	lea    rsi,[r13+0xa]
  4164e6:	cmp    rsi,r15
  4164e9:	jne    4166f2 <main@@Base+0xf8d2>
  4164ef:	jmp    41684a <main@@Base+0xfa2a>
  4164f4:	mov    rbp,rbx
  4164f7:	movabs rax,0xffffffff00000000
  416501:	and    rbp,rax
  416504:	lea    rax,[rcx-0x5f626262]
  41650b:	cmp    rbp,rax
  41650e:	jne    416d90 <main@@Base+0xff70>
  416514:	mov    rax,r13
  416517:	cmp    r12,0x5
  41651b:	jl     416d4d <main@@Base+0xff2d>
  416521:	cmp    BYTE PTR [r13+0x4],0x22
  416526:	mov    rax,r13
  416529:	jne    416d4d <main@@Base+0xff2d>
  41652f:	lea    rsi,[r13+0x5]
  416533:	mov    rax,r15
  416536:	sub    rax,rsi
  416539:	cmp    rax,0x2
  41653d:	jl     41685f <main@@Base+0xfa3f>
  416543:	cmp    BYTE PTR [rsi],0x20
  416546:	jg     41686d <main@@Base+0xfa4d>
  41654c:	jne    41685f <main@@Base+0xfa3f>
  416552:	cmp    BYTE PTR [r13+0x6],0x20
  416557:	jle    41685f <main@@Base+0xfa3f>
  41655d:	lea    rsi,[r13+0x6]
  416561:	cmp    rsi,r15
  416564:	jne    416876 <main@@Base+0xfa56>
  41656a:	jmp    41690f <main@@Base+0xfaef>
  41656f:	mov    rax,rbx
  416572:	movabs rcx,0xffffffff00000000
  41657c:	and    rax,rcx
  41657f:	cmp    rax,rdx
  416582:	jne    41693d <main@@Base+0xfb1d>
  416588:	mov    rax,r13
  41658b:	cmp    r12,0x5
  41658f:	jl     416f1b <main@@Base+0x100fb>
  416595:	cmp    BYTE PTR [r13+0x4],0x22
  41659a:	mov    rax,r13
  41659d:	jne    416f1b <main@@Base+0x100fb>
  4165a3:	lea    rsi,[r13+0x5]
  4165a7:	mov    rax,r15
  4165aa:	sub    rax,rsi
  4165ad:	cmp    rax,0x2
  4165b1:	jl     4168b8 <main@@Base+0xfa98>
  4165b7:	cmp    BYTE PTR [rsi],0x20
  4165ba:	jg     4168c6 <main@@Base+0xfaa6>
  4165c0:	jne    4168b8 <main@@Base+0xfa98>
  4165c6:	cmp    BYTE PTR [r13+0x6],0x20
  4165cb:	jle    4168b8 <main@@Base+0xfa98>
  4165d1:	lea    rsi,[r13+0x6]
  4165d5:	cmp    rsi,r15
  4165d8:	jne    4168cb <main@@Base+0xfaab>
  4165de:	jmp    416924 <main@@Base+0xfb04>
  4165e3:	lea    rcx,[rax-0x1]
  4165e7:	cmp    rcx,0x6
  4165eb:	ja     417560 <main@@Base+0x10740>
  4165f1:	lea    rdx,[rip+0x1c130]        # 432728 <_IO_stdin_used@@Base+0x728>
  4165f8:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  4165fc:	add    rbp,rdx
  4165ff:	xor    r8d,r8d
  416602:	xor    ecx,ecx
  416604:	xor    esi,esi
  416606:	xor    edi,edi
  416608:	xor    ebx,ebx
  41660a:	xor    edx,edx
  41660c:	jmp    rbp
  41660e:	movsx  r8,BYTE PTR [r13+0xe]
  416613:	shl    r8,0x8
  416617:	movsx  rcx,BYTE PTR [r13+0xd]
  41661c:	shl    rcx,0x10
  416620:	or     rcx,r8
  416623:	movsx  rsi,BYTE PTR [r13+0xc]
  416628:	shl    rsi,0x18
  41662c:	or     rsi,rcx
  41662f:	movsx  rdi,BYTE PTR [r13+0xb]
  416634:	shl    rdi,0x20
  416638:	or     rdi,rsi
  41663b:	movsx  rbx,BYTE PTR [r13+0xa]
  416640:	shl    rbx,0x28
  416644:	or     rbx,rdi
  416647:	movsx  rdx,BYTE PTR [r13+0x9]
  41664c:	shl    rdx,0x30
  416650:	or     rdx,rbx
  416653:	movzx  ecx,BYTE PTR [r14]
  416657:	shl    rcx,0x38
  41665b:	or     rcx,rdx
  41665e:	mov    rbp,QWORD PTR [rsp+0x18]
  416663:	movabs rdx,0xff00000000000000
  41666d:	and    rcx,rdx
  416670:	movabs rdx,0x3500000000000000
  41667a:	cmp    rcx,rdx
  41667d:	jne    417560 <main@@Base+0x10740>
  416683:	cmp    rax,0x2
  416687:	jl     417560 <main@@Base+0x10740>
  41668d:	cmp    BYTE PTR [r13+0x9],0x22
  416692:	jne    417560 <main@@Base+0x10740>
  416698:	lea    rsi,[r13+0xa]
  41669c:	mov    rax,r15
  41669f:	sub    rax,rsi
  4166a2:	cmp    rax,0x2
  4166a6:	jl     4169ab <main@@Base+0xfb8b>
  4166ac:	cmp    BYTE PTR [rsi],0x20
  4166af:	jg     4169bb <main@@Base+0xfb9b>
  4166b5:	jne    4169ab <main@@Base+0xfb8b>
  4166bb:	cmp    BYTE PTR [r13+0xb],0x20
  4166c0:	jle    4169ab <main@@Base+0xfb8b>
  4166c6:	add    r13,0xb
  4166ca:	mov    rsi,r13
  4166cd:	cmp    rsi,r15
  4166d0:	jne    4169c0 <main@@Base+0xfba0>
  4166d6:	jmp    416a07 <main@@Base+0xfbe7>
  4166db:	mov    rdi,r14
  4166de:	mov    rdx,r15
  4166e1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4166e6:	mov    rsi,rax
  4166e9:	cmp    rsi,r15
  4166ec:	je     41684a <main@@Base+0xfa2a>
  4166f2:	cmp    BYTE PTR [rsi],0x3a
  4166f5:	jne    41684a <main@@Base+0xfa2a>
  4166fb:	lea    rbx,[rsi+0x1]
  4166ff:	mov    rax,r15
  416702:	sub    rax,rbx
  416705:	cmp    rax,0x2
  416709:	jl     416b95 <main@@Base+0xfd75>
  41670f:	cmp    BYTE PTR [rbx],0x20
  416712:	jg     416ba6 <main@@Base+0xfd86>
  416718:	jne    416b95 <main@@Base+0xfd75>
  41671e:	cmp    BYTE PTR [rsi+0x2],0x20
  416722:	jle    416b95 <main@@Base+0xfd75>
  416728:	add    rsi,0x2
  41672c:	mov    rbx,rsi
  41672f:	cmp    r13,rbx
  416732:	jne    416baf <main@@Base+0xfd8f>
  416738:	lea    r14,[r13+0x8]
  41673c:	mov    rax,r15
  41673f:	sub    rax,r14
  416742:	cmp    rax,0x8
  416746:	jb     416752 <main@@Base+0xf932>
  416748:	movbe  rcx,QWORD PTR [r14]
  41674d:	jmp    4167d2 <main@@Base+0xf9b2>
  416752:	lea    rcx,[rax-0x1]
  416756:	cmp    rcx,0x6
  41675a:	ja     417560 <main@@Base+0x10740>
  416760:	lea    rdx,[rip+0x1bfa5]        # 43270c <_IO_stdin_used@@Base+0x70c>
  416767:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  41676b:	add    rbp,rdx
  41676e:	xor    r8d,r8d
  416771:	xor    ecx,ecx
  416773:	xor    esi,esi
  416775:	xor    edi,edi
  416777:	xor    ebx,ebx
  416779:	xor    edx,edx
  41677b:	jmp    rbp
  41677d:	movsx  r8,BYTE PTR [r13+0xe]
  416782:	shl    r8,0x8
  416786:	movsx  rcx,BYTE PTR [r13+0xd]
  41678b:	shl    rcx,0x10
  41678f:	or     rcx,r8
  416792:	movsx  rsi,BYTE PTR [r13+0xc]
  416797:	shl    rsi,0x18
  41679b:	or     rsi,rcx
  41679e:	movsx  rdi,BYTE PTR [r13+0xb]
  4167a3:	shl    rdi,0x20
  4167a7:	or     rdi,rsi
  4167aa:	movsx  rbx,BYTE PTR [r13+0xa]
  4167af:	shl    rbx,0x28
  4167b3:	or     rbx,rdi
  4167b6:	movsx  rdx,BYTE PTR [r13+0x9]
  4167bb:	shl    rdx,0x30
  4167bf:	or     rdx,rbx
  4167c2:	movzx  ecx,BYTE PTR [r14]
  4167c6:	shl    rcx,0x38
  4167ca:	or     rcx,rdx
  4167cd:	mov    rbp,QWORD PTR [rsp+0x18]
  4167d2:	movabs rdx,0xff00000000000000
  4167dc:	and    rcx,rdx
  4167df:	movabs rdx,0x3500000000000000
  4167e9:	cmp    rcx,rdx
  4167ec:	jne    417560 <main@@Base+0x10740>
  4167f2:	cmp    rax,0x2
  4167f6:	jl     417560 <main@@Base+0x10740>
  4167fc:	cmp    BYTE PTR [r13+0x9],0x22
  416801:	jne    417560 <main@@Base+0x10740>
  416807:	lea    rsi,[r13+0xa]
  41680b:	mov    rax,r15
  41680e:	sub    rax,rsi
  416811:	cmp    rax,0x2
  416815:	jl     416cbf <main@@Base+0xfe9f>
  41681b:	cmp    BYTE PTR [rsi],0x20
  41681e:	jg     416ccf <main@@Base+0xfeaf>
  416824:	jne    416cbf <main@@Base+0xfe9f>
  41682a:	cmp    BYTE PTR [r13+0xb],0x20
  41682f:	jle    416cbf <main@@Base+0xfe9f>
  416835:	add    r13,0xb
  416839:	mov    rsi,r13
  41683c:	cmp    rsi,r15
  41683f:	jne    416cd4 <main@@Base+0xfeb4>
  416845:	jmp    416d12 <main@@Base+0xfef2>
  41684a:	mov    rdi,r14
  41684d:	mov    rdx,r15
  416850:	mov    ecx,0x4
  416855:	call   422690 <flatcc_json_parser_set_error@@Base>
  41685a:	jmp    416ba3 <main@@Base+0xfd83>
  41685f:	mov    rdi,r14
  416862:	mov    rdx,r15
  416865:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41686a:	mov    rsi,rax
  41686d:	cmp    rsi,r15
  416870:	je     41690f <main@@Base+0xfaef>
  416876:	cmp    BYTE PTR [rsi],0x3a
  416879:	jne    41690f <main@@Base+0xfaef>
  41687f:	lea    rax,[rsi+0x1]
  416883:	mov    rcx,r15
  416886:	sub    rcx,rax
  416889:	cmp    rcx,0x2
  41688d:	jl     416d35 <main@@Base+0xff15>
  416893:	cmp    BYTE PTR [rax],0x20
  416896:	jg     416d43 <main@@Base+0xff23>
  41689c:	jne    416d35 <main@@Base+0xff15>
  4168a2:	cmp    BYTE PTR [rsi+0x2],0x20
  4168a6:	jle    416d35 <main@@Base+0xff15>
  4168ac:	add    rsi,0x2
  4168b0:	mov    rax,rsi
  4168b3:	jmp    416d43 <main@@Base+0xff23>
  4168b8:	mov    rdi,r14
  4168bb:	mov    rdx,r15
  4168be:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4168c3:	mov    rsi,rax
  4168c6:	cmp    rsi,r15
  4168c9:	je     416924 <main@@Base+0xfb04>
  4168cb:	cmp    BYTE PTR [rsi],0x3a
  4168ce:	jne    416924 <main@@Base+0xfb04>
  4168d0:	lea    rax,[rsi+0x1]
  4168d4:	mov    rcx,r15
  4168d7:	sub    rcx,rax
  4168da:	cmp    rcx,0x2
  4168de:	jl     416f0d <main@@Base+0x100ed>
  4168e4:	cmp    BYTE PTR [rax],0x20
  4168e7:	jg     416f1b <main@@Base+0x100fb>
  4168ed:	jne    416f0d <main@@Base+0x100ed>
  4168f3:	cmp    BYTE PTR [rsi+0x2],0x20
  4168f7:	jle    416f0d <main@@Base+0x100ed>
  4168fd:	add    rsi,0x2
  416901:	mov    rax,rsi
  416904:	cmp    r13,rax
  416907:	jne    416f24 <main@@Base+0x10104>
  41690d:	jmp    41693d <main@@Base+0xfb1d>
  41690f:	mov    rdi,r14
  416912:	mov    rdx,r15
  416915:	mov    ecx,0x4
  41691a:	call   422690 <flatcc_json_parser_set_error@@Base>
  41691f:	jmp    416d43 <main@@Base+0xff23>
  416924:	mov    rdi,r14
  416927:	mov    rdx,r15
  41692a:	mov    ecx,0x4
  41692f:	call   422690 <flatcc_json_parser_set_error@@Base>
  416934:	cmp    r13,rax
  416937:	jne    416f24 <main@@Base+0x10104>
  41693d:	movabs rax,0x6464646431323334
  416947:	cmp    rbx,rax
  41694a:	jne    4174ce <main@@Base+0x106ae>
  416950:	mov    rbx,r13
  416953:	cmp    r12,0x9
  416957:	jl     417148 <main@@Base+0x10328>
  41695d:	cmp    BYTE PTR [r13+0x8],0x22
  416962:	mov    rbx,r13
  416965:	jne    417148 <main@@Base+0x10328>
  41696b:	lea    rsi,[r13+0x9]
  41696f:	mov    rax,r15
  416972:	sub    rax,rsi
  416975:	cmp    rax,0x2
  416979:	jl     416a1e <main@@Base+0xfbfe>
  41697f:	cmp    BYTE PTR [rsi],0x20
  416982:	jg     416a2c <main@@Base+0xfc0c>
  416988:	jne    416a1e <main@@Base+0xfbfe>
  41698e:	cmp    BYTE PTR [r13+0xa],0x20
  416993:	jle    416a1e <main@@Base+0xfbfe>
  416999:	lea    rsi,[r13+0xa]
  41699d:	cmp    rsi,r15
  4169a0:	jne    416a35 <main@@Base+0xfc15>
  4169a6:	jmp    416b80 <main@@Base+0xfd60>
  4169ab:	mov    rdi,QWORD PTR [rsp+0x8]
  4169b0:	mov    rdx,r15
  4169b3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4169b8:	mov    rsi,rax
  4169bb:	cmp    rsi,r15
  4169be:	je     416a07 <main@@Base+0xfbe7>
  4169c0:	cmp    BYTE PTR [rsi],0x3a
  4169c3:	jne    416a07 <main@@Base+0xfbe7>
  4169c5:	lea    rbx,[rsi+0x1]
  4169c9:	mov    rax,r15
  4169cc:	sub    rax,rbx
  4169cf:	cmp    rax,0x2
  4169d3:	jl     416f52 <main@@Base+0x10132>
  4169d9:	cmp    BYTE PTR [rbx],0x20
  4169dc:	jg     416f65 <main@@Base+0x10145>
  4169e2:	jne    416f52 <main@@Base+0x10132>
  4169e8:	cmp    BYTE PTR [rsi+0x2],0x20
  4169ec:	jle    416f52 <main@@Base+0x10132>
  4169f2:	add    rsi,0x2
  4169f6:	mov    rbx,rsi
  4169f9:	cmp    r14,rbx
  4169fc:	jne    416f6e <main@@Base+0x1014e>
  416a02:	jmp    417560 <main@@Base+0x10740>
  416a07:	mov    rdi,QWORD PTR [rsp+0x8]
  416a0c:	mov    rdx,r15
  416a0f:	mov    ecx,0x4
  416a14:	call   422690 <flatcc_json_parser_set_error@@Base>
  416a19:	jmp    416f62 <main@@Base+0x10142>
  416a1e:	mov    rdi,r14
  416a21:	mov    rdx,r15
  416a24:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416a29:	mov    rsi,rax
  416a2c:	cmp    rsi,r15
  416a2f:	je     416b80 <main@@Base+0xfd60>
  416a35:	cmp    BYTE PTR [rsi],0x3a
  416a38:	jne    416b80 <main@@Base+0xfd60>
  416a3e:	lea    rbx,[rsi+0x1]
  416a42:	mov    rax,r15
  416a45:	sub    rax,rbx
  416a48:	cmp    rax,0x2
  416a4c:	jl     417137 <main@@Base+0x10317>
  416a52:	cmp    BYTE PTR [rbx],0x20
  416a55:	jle    417114 <main@@Base+0x102f4>
  416a5b:	mov    r14,QWORD PTR [rsp+0x8]
  416a60:	mov    rbp,QWORD PTR [rsp+0x18]
  416a65:	cmp    r13,rbx
  416a68:	jne    417151 <main@@Base+0x10331>
  416a6e:	lea    r14,[r13+0x8]
  416a72:	mov    rax,r15
  416a75:	sub    rax,r14
  416a78:	cmp    rax,0x8
  416a7c:	jb     416a88 <main@@Base+0xfc68>
  416a7e:	movbe  rcx,QWORD PTR [r14]
  416a83:	jmp    416b08 <main@@Base+0xfce8>
  416a88:	lea    rcx,[rax-0x1]
  416a8c:	cmp    rcx,0x6
  416a90:	ja     417560 <main@@Base+0x10740>
  416a96:	lea    rdx,[rip+0x1bc53]        # 4326f0 <_IO_stdin_used@@Base+0x6f0>
  416a9d:	movsxd rbp,DWORD PTR [rdx+rcx*4]
  416aa1:	add    rbp,rdx
  416aa4:	xor    r8d,r8d
  416aa7:	xor    ecx,ecx
  416aa9:	xor    esi,esi
  416aab:	xor    edi,edi
  416aad:	xor    ebx,ebx
  416aaf:	xor    edx,edx
  416ab1:	jmp    rbp
  416ab3:	movsx  r8,BYTE PTR [r13+0xe]
  416ab8:	shl    r8,0x8
  416abc:	movsx  rcx,BYTE PTR [r13+0xd]
  416ac1:	shl    rcx,0x10
  416ac5:	or     rcx,r8
  416ac8:	movsx  rsi,BYTE PTR [r13+0xc]
  416acd:	shl    rsi,0x18
  416ad1:	or     rsi,rcx
  416ad4:	movsx  rdi,BYTE PTR [r13+0xb]
  416ad9:	shl    rdi,0x20
  416add:	or     rdi,rsi
  416ae0:	movsx  rbx,BYTE PTR [r13+0xa]
  416ae5:	shl    rbx,0x28
  416ae9:	or     rbx,rdi
  416aec:	movsx  rdx,BYTE PTR [r13+0x9]
  416af1:	shl    rdx,0x30
  416af5:	or     rdx,rbx
  416af8:	movzx  ecx,BYTE PTR [r14]
  416afc:	shl    rcx,0x38
  416b00:	or     rcx,rdx
  416b03:	mov    rbp,QWORD PTR [rsp+0x18]
  416b08:	movabs rdx,0xff00000000000000
  416b12:	and    rcx,rdx
  416b15:	movabs rdx,0x3500000000000000
  416b1f:	cmp    rcx,rdx
  416b22:	jne    417560 <main@@Base+0x10740>
  416b28:	cmp    rax,0x2
  416b2c:	jl     417560 <main@@Base+0x10740>
  416b32:	cmp    BYTE PTR [r13+0x9],0x22
  416b37:	jne    417560 <main@@Base+0x10740>
  416b3d:	lea    rsi,[r13+0xa]
  416b41:	mov    rax,r15
  416b44:	sub    rax,rsi
  416b47:	cmp    rax,0x2
  416b4b:	jl     417011 <main@@Base+0x101f1>
  416b51:	cmp    BYTE PTR [rsi],0x20
  416b54:	jg     417021 <main@@Base+0x10201>
  416b5a:	jne    417011 <main@@Base+0x101f1>
  416b60:	cmp    BYTE PTR [r13+0xb],0x20
  416b65:	jle    417011 <main@@Base+0x101f1>
  416b6b:	add    r13,0xb
  416b6f:	mov    rsi,r13
  416b72:	cmp    rsi,r15
  416b75:	jne    417026 <main@@Base+0x10206>
  416b7b:	jmp    417064 <main@@Base+0x10244>
  416b80:	mov    rdi,r14
  416b83:	mov    rdx,r15
  416b86:	mov    ecx,0x4
  416b8b:	call   422690 <flatcc_json_parser_set_error@@Base>
  416b90:	jmp    417145 <main@@Base+0x10325>
  416b95:	mov    rdi,r14
  416b98:	mov    rsi,rbx
  416b9b:	mov    rdx,r15
  416b9e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416ba3:	mov    rbx,rax
  416ba6:	cmp    r13,rbx
  416ba9:	je     416738 <main@@Base+0xf918>
  416baf:	mov    QWORD PTR [rsp+0x28],0x0
  416bb8:	mov    DWORD PTR [rsp+0x14],0x0
  416bc0:	mov    QWORD PTR [rsp+0x20],0x0
  416bc9:	cmp    rbx,r15
  416bcc:	je     416c16 <main@@Base+0xfdf6>
  416bce:	mov    rdi,r14
  416bd1:	mov    rsi,rbx
  416bd4:	mov    rdx,r15
  416bd7:	lea    rcx,[rsp+0x14]
  416bdc:	lea    r8,[rsp+0x28]
  416be1:	call   424130 <flatcc_json_parser_integer@@Base>
  416be6:	cmp    rax,rbx
  416be9:	je     416c1d <main@@Base+0xfdfd>
  416beb:	mov    rsi,rax
  416bee:	mov    rbp,QWORD PTR [rsp+0x28]
  416bf3:	cmp    DWORD PTR [rsp+0x14],0x0
  416bf8:	je     416c24 <main@@Base+0xfe04>
  416bfa:	movabs rax,0x8000000000000000
  416c04:	cmp    rbp,rax
  416c07:	jbe    416c3d <main@@Base+0xfe1d>
  416c09:	mov    rdi,r14
  416c0c:	mov    rdx,r15
  416c0f:	mov    ecx,0x8
  416c14:	jmp    416c34 <main@@Base+0xfe14>
  416c16:	xor    ebp,ebp
  416c18:	mov    rax,r15
  416c1b:	jmp    416c48 <main@@Base+0xfe28>
  416c1d:	xor    ebp,ebp
  416c1f:	mov    rax,rbx
  416c22:	jmp    416c48 <main@@Base+0xfe28>
  416c24:	test   rbp,rbp
  416c27:	jns    416c40 <main@@Base+0xfe20>
  416c29:	mov    rdi,r14
  416c2c:	mov    rdx,r15
  416c2f:	mov    ecx,0x7
  416c34:	call   422690 <flatcc_json_parser_set_error@@Base>
  416c39:	xor    ebp,ebp
  416c3b:	jmp    416c48 <main@@Base+0xfe28>
  416c3d:	neg    rbp
  416c40:	mov    QWORD PTR [rsp+0x20],rbp
  416c45:	mov    rax,rsi
  416c48:	mov    rcx,rax
  416c4b:	cmp    rbx,rax
  416c4e:	jne    416c87 <main@@Base+0xfe67>
  416c50:	mov    rdi,r14
  416c53:	mov    rsi,rbx
  416c56:	mov    rdx,r15
  416c59:	lea    rcx,[rip+0x29920]        # 440580 <__data_start@@Base+0x4d0>
  416c60:	lea    r8,[rsp+0x20]
  416c65:	call   413ad0 <main@@Base+0xccb0>
  416c6a:	cmp    rax,rbx
  416c6d:	mov    rbx,rax
  416c70:	je     41829b <main@@Base+0x1147b>
  416c76:	mov    rcx,rbx
  416c79:	cmp    rbx,r15
  416c7c:	je     4182c6 <main@@Base+0x114a6>
  416c82:	mov    rbp,QWORD PTR [rsp+0x20]
  416c87:	test   rbp,rbp
  416c8a:	mov    rbx,rcx
  416c8d:	jne    416c9a <main@@Base+0xfe7a>
  416c8f:	test   BYTE PTR [r14+0x10],0x2
  416c94:	je     41738f <main@@Base+0x1056f>
  416c9a:	mov    rdi,QWORD PTR [r14]
  416c9d:	mov    edx,0x8
  416ca2:	mov    esi,0x5
  416ca7:	mov    ecx,0x8
  416cac:	call   41f040 <flatcc_builder_table_add@@Base>
  416cb1:	test   rax,rax
  416cb4:	jne    41738c <main@@Base+0x1056c>
  416cba:	jmp    41829b <main@@Base+0x1147b>
  416cbf:	mov    rdi,QWORD PTR [rsp+0x8]
  416cc4:	mov    rdx,r15
  416cc7:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416ccc:	mov    rsi,rax
  416ccf:	cmp    rsi,r15
  416cd2:	je     416d12 <main@@Base+0xfef2>
  416cd4:	cmp    BYTE PTR [rsi],0x3a
  416cd7:	jne    416d12 <main@@Base+0xfef2>
  416cd9:	lea    rbx,[rsi+0x1]
  416cdd:	mov    rax,r15
  416ce0:	sub    rax,rbx
  416ce3:	cmp    rax,0x2
  416ce7:	jl     41707b <main@@Base+0x1025b>
  416ced:	cmp    BYTE PTR [rbx],0x20
  416cf0:	jg     41708e <main@@Base+0x1026e>
  416cf6:	jne    41707b <main@@Base+0x1025b>
  416cfc:	cmp    BYTE PTR [rsi+0x2],0x20
  416d00:	jle    41707b <main@@Base+0x1025b>
  416d06:	add    rsi,0x2
  416d0a:	mov    rbx,rsi
  416d0d:	jmp    41708e <main@@Base+0x1026e>
  416d12:	mov    rdi,QWORD PTR [rsp+0x8]
  416d17:	mov    rdx,r15
  416d1a:	mov    ecx,0x4
  416d1f:	call   422690 <flatcc_json_parser_set_error@@Base>
  416d24:	mov    rbx,rax
  416d27:	cmp    r14,rbx
  416d2a:	jne    41709c <main@@Base+0x1027c>
  416d30:	jmp    417560 <main@@Base+0x10740>
  416d35:	mov    rdi,r14
  416d38:	mov    rsi,rax
  416d3b:	mov    rdx,r15
  416d3e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416d43:	movabs rsi,0x6262626200000000
  416d4d:	cmp    r13,rax
  416d50:	je     416d90 <main@@Base+0xff70>
  416d52:	mov    rdi,r14
  416d55:	mov    rsi,rax
  416d58:	mov    rdx,r15
  416d5b:	lea    rcx,[rsp+0x34]
  416d60:	call   424600 <flatcc_json_parser_build_string@@Base>
  416d65:	mov    rbx,rax
  416d68:	cmp    DWORD PTR [rsp+0x34],0x0
  416d6d:	je     41829b <main@@Base+0x1147b>
  416d73:	mov    rdi,QWORD PTR [r14]
  416d76:	xor    esi,esi
  416d78:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  416d7d:	test   rax,rax
  416d80:	mov    rbp,QWORD PTR [rsp+0x18]
  416d85:	jne    4174c3 <main@@Base+0x106a3>
  416d8b:	jmp    41829b <main@@Base+0x1147b>
  416d90:	lea    rax,[rsi+0x31323334]
  416d97:	cmp    rbx,rax
  416d9a:	jne    416df0 <main@@Base+0xffd0>
  416d9c:	mov    rbx,r13
  416d9f:	cmp    r12,0x9
  416da3:	mov    rbp,QWORD PTR [rsp+0x18]
  416da8:	jl     41727f <main@@Base+0x1045f>
  416dae:	cmp    BYTE PTR [r13+0x8],0x22
  416db3:	mov    rbx,r13
  416db6:	jne    41727f <main@@Base+0x1045f>
  416dbc:	lea    rsi,[r13+0x9]
  416dc0:	mov    rax,r15
  416dc3:	sub    rax,rsi
  416dc6:	cmp    rax,0x2
  416dca:	jl     416e52 <main@@Base+0x10032>
  416dd0:	cmp    BYTE PTR [rsi],0x20
  416dd3:	jg     416e60 <main@@Base+0x10040>
  416dd9:	jne    416e52 <main@@Base+0x10032>
  416ddb:	cmp    BYTE PTR [r13+0xa],0x20
  416de0:	jle    416e52 <main@@Base+0x10032>
  416de2:	lea    rsi,[r13+0xa]
  416de6:	cmp    rsi,r15
  416de9:	jne    416e65 <main@@Base+0x10045>
  416deb:	jmp    416e9f <main@@Base+0x1007f>
  416df0:	cmp    rbp,rsi
  416df3:	mov    rbp,QWORD PTR [rsp+0x18]
  416df8:	jne    4174ce <main@@Base+0x106ae>
  416dfe:	mov    rax,r13
  416e01:	cmp    r12,0x5
  416e05:	jl     417487 <main@@Base+0x10667>
  416e0b:	cmp    BYTE PTR [r13+0x4],0x22
  416e10:	mov    rax,r13
  416e13:	jne    417487 <main@@Base+0x10667>
  416e19:	lea    rsi,[r13+0x5]
  416e1d:	mov    rax,r15
  416e20:	sub    rax,rsi
  416e23:	cmp    rax,0x2
  416e27:	jl     416eb4 <main@@Base+0x10094>
  416e2d:	cmp    BYTE PTR [rsi],0x20
  416e30:	jg     416ec2 <main@@Base+0x100a2>
  416e36:	mov    r14,QWORD PTR [rsp+0x8]
  416e3b:	jne    416eb4 <main@@Base+0x10094>
  416e3d:	cmp    BYTE PTR [r13+0x6],0x20
  416e42:	jle    416eb4 <main@@Base+0x10094>
  416e44:	lea    rsi,[r13+0x6]
  416e48:	cmp    rsi,r15
  416e4b:	jne    416ec7 <main@@Base+0x100a7>
  416e4d:	jmp    416ef3 <main@@Base+0x100d3>
  416e52:	mov    rdi,r14
  416e55:	mov    rdx,r15
  416e58:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416e5d:	mov    rsi,rax
  416e60:	cmp    rsi,r15
  416e63:	je     416e9f <main@@Base+0x1007f>
  416e65:	cmp    BYTE PTR [rsi],0x3a
  416e68:	jne    416e9f <main@@Base+0x1007f>
  416e6a:	lea    rbx,[rsi+0x1]
  416e6e:	mov    rax,r15
  416e71:	sub    rax,rbx
  416e74:	cmp    rax,0x2
  416e78:	jl     41726e <main@@Base+0x1044e>
  416e7e:	cmp    BYTE PTR [rbx],0x20
  416e81:	jle    41724b <main@@Base+0x1042b>
  416e87:	mov    r14,QWORD PTR [rsp+0x8]
  416e8c:	mov    rbp,QWORD PTR [rsp+0x18]
  416e91:	cmp    r13,rbx
  416e94:	jne    417288 <main@@Base+0x10468>
  416e9a:	jmp    4174ce <main@@Base+0x106ae>
  416e9f:	mov    rdi,r14
  416ea2:	mov    rdx,r15
  416ea5:	mov    ecx,0x4
  416eaa:	call   422690 <flatcc_json_parser_set_error@@Base>
  416eaf:	jmp    41727c <main@@Base+0x1045c>
  416eb4:	mov    rdi,r14
  416eb7:	mov    rdx,r15
  416eba:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416ebf:	mov    rsi,rax
  416ec2:	cmp    rsi,r15
  416ec5:	je     416ef3 <main@@Base+0x100d3>
  416ec7:	cmp    BYTE PTR [rsi],0x3a
  416eca:	jne    416ef3 <main@@Base+0x100d3>
  416ecc:	lea    rax,[rsi+0x1]
  416ed0:	mov    rcx,r15
  416ed3:	sub    rcx,rax
  416ed6:	cmp    rcx,0x2
  416eda:	jl     41746f <main@@Base+0x1064f>
  416ee0:	cmp    BYTE PTR [rax],0x20
  416ee3:	jle    417459 <main@@Base+0x10639>
  416ee9:	mov    r14,QWORD PTR [rsp+0x8]
  416eee:	jmp    417482 <main@@Base+0x10662>
  416ef3:	mov    r14,QWORD PTR [rsp+0x8]
  416ef8:	mov    rdi,r14
  416efb:	mov    rdx,r15
  416efe:	mov    ecx,0x4
  416f03:	call   422690 <flatcc_json_parser_set_error@@Base>
  416f08:	jmp    417482 <main@@Base+0x10662>
  416f0d:	mov    rdi,r14
  416f10:	mov    rsi,rax
  416f13:	mov    rdx,r15
  416f16:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416f1b:	cmp    r13,rax
  416f1e:	je     41693d <main@@Base+0xfb1d>
  416f24:	mov    rdi,r14
  416f27:	mov    rsi,rax
  416f2a:	mov    rdx,r15
  416f2d:	lea    rcx,[rsp+0x34]
  416f32:	call   424600 <flatcc_json_parser_build_string@@Base>
  416f37:	mov    rbx,rax
  416f3a:	cmp    DWORD PTR [rsp+0x34],0x0
  416f3f:	je     41829b <main@@Base+0x1147b>
  416f45:	mov    rdi,QWORD PTR [r14]
  416f48:	mov    esi,0x4
  416f4d:	jmp    4174b5 <main@@Base+0x10695>
  416f52:	mov    rdi,QWORD PTR [rsp+0x8]
  416f57:	mov    rsi,rbx
  416f5a:	mov    rdx,r15
  416f5d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  416f62:	mov    rbx,rax
  416f65:	cmp    r14,rbx
  416f68:	je     417560 <main@@Base+0x10740>
  416f6e:	mov    QWORD PTR [rsp+0x28],0x0
  416f77:	mov    DWORD PTR [rsp+0x20],0x0
  416f7f:	mov    DWORD PTR [rsp+0x14],0x0
  416f87:	xor    r12d,r12d
  416f8a:	cmp    rbx,r15
  416f8d:	je     416fd0 <main@@Base+0x101b0>
  416f8f:	mov    r14,QWORD PTR [rsp+0x8]
  416f94:	mov    rdi,r14
  416f97:	mov    rsi,rbx
  416f9a:	mov    rdx,r15
  416f9d:	lea    rcx,[rsp+0x20]
  416fa2:	lea    r8,[rsp+0x28]
  416fa7:	call   424130 <flatcc_json_parser_integer@@Base>
  416fac:	cmp    rax,rbx
  416faf:	je     416fdd <main@@Base+0x101bd>
  416fb1:	mov    rsi,rax
  416fb4:	cmp    DWORD PTR [rsp+0x20],0x0
  416fb9:	je     416fe5 <main@@Base+0x101c5>
  416fbb:	mov    rdi,r14
  416fbe:	mov    rdx,r15
  416fc1:	mov    ecx,0x8
  416fc6:	call   422690 <flatcc_json_parser_set_error@@Base>
  416fcb:	jmp    4173b5 <main@@Base+0x10595>
  416fd0:	mov    rax,r15
  416fd3:	mov    r14,QWORD PTR [rsp+0x8]
  416fd8:	jmp    4173b5 <main@@Base+0x10595>
  416fdd:	mov    rax,rbx
  416fe0:	jmp    4173b5 <main@@Base+0x10595>
  416fe5:	mov    rax,QWORD PTR [rsp+0x28]
  416fea:	mov    rcx,rax
  416fed:	shr    rcx,0x20
  416ff1:	je     4173a6 <main@@Base+0x10586>
  416ff7:	mov    r14,QWORD PTR [rsp+0x8]
  416ffc:	mov    rdi,r14
  416fff:	mov    rdx,r15
  417002:	mov    ecx,0x7
  417007:	call   422690 <flatcc_json_parser_set_error@@Base>
  41700c:	jmp    4173b5 <main@@Base+0x10595>
  417011:	mov    rdi,QWORD PTR [rsp+0x8]
  417016:	mov    rdx,r15
  417019:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41701e:	mov    rsi,rax
  417021:	cmp    rsi,r15
  417024:	je     417064 <main@@Base+0x10244>
  417026:	cmp    BYTE PTR [rsi],0x3a
  417029:	jne    417064 <main@@Base+0x10244>
  41702b:	lea    rbx,[rsi+0x1]
  41702f:	mov    rax,r15
  417032:	sub    rax,rbx
  417035:	cmp    rax,0x2
  417039:	jl     4174d9 <main@@Base+0x106b9>
  41703f:	cmp    BYTE PTR [rbx],0x20
  417042:	jg     4174ec <main@@Base+0x106cc>
  417048:	jne    4174d9 <main@@Base+0x106b9>
  41704e:	cmp    BYTE PTR [rsi+0x2],0x20
  417052:	jle    4174d9 <main@@Base+0x106b9>
  417058:	add    rsi,0x2
  41705c:	mov    rbx,rsi
  41705f:	jmp    4174ec <main@@Base+0x106cc>
  417064:	mov    rdi,QWORD PTR [rsp+0x8]
  417069:	mov    rdx,r15
  41706c:	mov    ecx,0x4
  417071:	call   422690 <flatcc_json_parser_set_error@@Base>
  417076:	jmp    4174e9 <main@@Base+0x106c9>
  41707b:	mov    rdi,QWORD PTR [rsp+0x8]
  417080:	mov    rsi,rbx
  417083:	mov    rdx,r15
  417086:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41708b:	mov    rbx,rax
  41708e:	mov    rbp,QWORD PTR [rsp+0x18]
  417093:	cmp    r14,rbx
  417096:	je     417560 <main@@Base+0x10740>
  41709c:	mov    QWORD PTR [rsp+0x28],0x0
  4170a5:	mov    DWORD PTR [rsp+0x20],0x0
  4170ad:	mov    DWORD PTR [rsp+0x14],0x0
  4170b5:	xor    ebp,ebp
  4170b7:	cmp    rbx,r15
  4170ba:	je     417107 <main@@Base+0x102e7>
  4170bc:	mov    rdi,QWORD PTR [rsp+0x8]
  4170c1:	mov    rsi,rbx
  4170c4:	mov    rdx,r15
  4170c7:	lea    rcx,[rsp+0x20]
  4170cc:	lea    r8,[rsp+0x28]
  4170d1:	call   424130 <flatcc_json_parser_integer@@Base>
  4170d6:	cmp    rax,rbx
  4170d9:	je     417399 <main@@Base+0x10579>
  4170df:	mov    rsi,rax
  4170e2:	cmp    DWORD PTR [rsp+0x20],0x0
  4170e7:	je     41742d <main@@Base+0x1060d>
  4170ed:	mov    r14,QWORD PTR [rsp+0x8]
  4170f2:	mov    rdi,r14
  4170f5:	mov    rdx,r15
  4170f8:	mov    ecx,0x8
  4170fd:	call   422690 <flatcc_json_parser_set_error@@Base>
  417102:	jmp    417644 <main@@Base+0x10824>
  417107:	mov    rax,r15
  41710a:	mov    r14,QWORD PTR [rsp+0x8]
  41710f:	jmp    417644 <main@@Base+0x10824>
  417114:	mov    r14,QWORD PTR [rsp+0x8]
  417119:	mov    rbp,QWORD PTR [rsp+0x18]
  41711e:	jne    417137 <main@@Base+0x10317>
  417120:	cmp    BYTE PTR [rsi+0x2],0x20
  417124:	jle    417137 <main@@Base+0x10317>
  417126:	add    rsi,0x2
  41712a:	mov    rbx,rsi
  41712d:	cmp    r13,rbx
  417130:	jne    417151 <main@@Base+0x10331>
  417132:	jmp    416a6e <main@@Base+0xfc4e>
  417137:	mov    rdi,r14
  41713a:	mov    rsi,rbx
  41713d:	mov    rdx,r15
  417140:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417145:	mov    rbx,rax
  417148:	cmp    r13,rbx
  41714b:	je     416a6e <main@@Base+0xfc4e>
  417151:	mov    QWORD PTR [rsp+0x28],0x0
  41715a:	mov    DWORD PTR [rsp+0x14],0x0
  417162:	mov    QWORD PTR [rsp+0x20],0x0
  41716b:	cmp    rbx,r15
  41716e:	je     4171b8 <main@@Base+0x10398>
  417170:	mov    rdi,r14
  417173:	mov    rsi,rbx
  417176:	mov    rdx,r15
  417179:	lea    rcx,[rsp+0x14]
  41717e:	lea    r8,[rsp+0x28]
  417183:	call   424130 <flatcc_json_parser_integer@@Base>
  417188:	cmp    rax,rbx
  41718b:	je     4171bf <main@@Base+0x1039f>
  41718d:	mov    rsi,rax
  417190:	mov    rbp,QWORD PTR [rsp+0x28]
  417195:	cmp    DWORD PTR [rsp+0x14],0x0
  41719a:	je     4171c6 <main@@Base+0x103a6>
  41719c:	movabs rax,0x8000000000000000
  4171a6:	cmp    rbp,rax
  4171a9:	jbe    4171df <main@@Base+0x103bf>
  4171ab:	mov    rdi,r14
  4171ae:	mov    rdx,r15
  4171b1:	mov    ecx,0x8
  4171b6:	jmp    4171d6 <main@@Base+0x103b6>
  4171b8:	xor    ebp,ebp
  4171ba:	mov    rax,r15
  4171bd:	jmp    4171ea <main@@Base+0x103ca>
  4171bf:	xor    ebp,ebp
  4171c1:	mov    rax,rbx
  4171c4:	jmp    4171ea <main@@Base+0x103ca>
  4171c6:	test   rbp,rbp
  4171c9:	jns    4171e2 <main@@Base+0x103c2>
  4171cb:	mov    rdi,r14
  4171ce:	mov    rdx,r15
  4171d1:	mov    ecx,0x7
  4171d6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4171db:	xor    ebp,ebp
  4171dd:	jmp    4171ea <main@@Base+0x103ca>
  4171df:	neg    rbp
  4171e2:	mov    QWORD PTR [rsp+0x20],rbp
  4171e7:	mov    rax,rsi
  4171ea:	mov    r12,rax
  4171ed:	cmp    rbx,rax
  4171f0:	jne    417226 <main@@Base+0x10406>
  4171f2:	mov    rdi,r14
  4171f5:	mov    rsi,rbx
  4171f8:	mov    rdx,r15
  4171fb:	lea    rcx,[rip+0x293be]        # 4405c0 <__data_start@@Base+0x510>
  417202:	lea    r8,[rsp+0x20]
  417207:	call   413ad0 <main@@Base+0xccb0>
  41720c:	cmp    rax,rbx
  41720f:	je     4182cb <main@@Base+0x114ab>
  417215:	mov    r12,rax
  417218:	cmp    rax,r15
  41721b:	je     4182ce <main@@Base+0x114ae>
  417221:	mov    rbp,QWORD PTR [rsp+0x20]
  417226:	test   rbp,rbp
  417229:	mov    rbx,r12
  41722c:	jne    417239 <main@@Base+0x10419>
  41722e:	test   BYTE PTR [r14+0x10],0x2
  417233:	je     41738f <main@@Base+0x1056f>
  417239:	mov    rdi,QWORD PTR [r14]
  41723c:	mov    edx,0x8
  417241:	mov    esi,0x7
  417246:	jmp    417379 <main@@Base+0x10559>
  41724b:	mov    r14,QWORD PTR [rsp+0x8]
  417250:	mov    rbp,QWORD PTR [rsp+0x18]
  417255:	jne    41726e <main@@Base+0x1044e>
  417257:	cmp    BYTE PTR [rsi+0x2],0x20
  41725b:	jle    41726e <main@@Base+0x1044e>
  41725d:	add    rsi,0x2
  417261:	mov    rbx,rsi
  417264:	cmp    r13,rbx
  417267:	jne    417288 <main@@Base+0x10468>
  417269:	jmp    4174ce <main@@Base+0x106ae>
  41726e:	mov    rdi,r14
  417271:	mov    rsi,rbx
  417274:	mov    rdx,r15
  417277:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41727c:	mov    rbx,rax
  41727f:	cmp    r13,rbx
  417282:	je     4174ce <main@@Base+0x106ae>
  417288:	mov    QWORD PTR [rsp+0x28],0x0
  417291:	mov    DWORD PTR [rsp+0x14],0x0
  417299:	mov    QWORD PTR [rsp+0x20],0x0
  4172a2:	cmp    rbx,r15
  4172a5:	je     4172ef <main@@Base+0x104cf>
  4172a7:	mov    rdi,r14
  4172aa:	mov    rsi,rbx
  4172ad:	mov    rdx,r15
  4172b0:	lea    rcx,[rsp+0x14]
  4172b5:	lea    r8,[rsp+0x28]
  4172ba:	call   424130 <flatcc_json_parser_integer@@Base>
  4172bf:	cmp    rax,rbx
  4172c2:	je     4172f6 <main@@Base+0x104d6>
  4172c4:	mov    rsi,rax
  4172c7:	mov    rbp,QWORD PTR [rsp+0x28]
  4172cc:	cmp    DWORD PTR [rsp+0x14],0x0
  4172d1:	je     4172fd <main@@Base+0x104dd>
  4172d3:	movabs rax,0x8000000000000000
  4172dd:	cmp    rbp,rax
  4172e0:	jbe    417316 <main@@Base+0x104f6>
  4172e2:	mov    rdi,r14
  4172e5:	mov    rdx,r15
  4172e8:	mov    ecx,0x8
  4172ed:	jmp    41730d <main@@Base+0x104ed>
  4172ef:	xor    ebp,ebp
  4172f1:	mov    rax,r15
  4172f4:	jmp    417321 <main@@Base+0x10501>
  4172f6:	xor    ebp,ebp
  4172f8:	mov    rax,rbx
  4172fb:	jmp    417321 <main@@Base+0x10501>
  4172fd:	test   rbp,rbp
  417300:	jns    417319 <main@@Base+0x104f9>
  417302:	mov    rdi,r14
  417305:	mov    rdx,r15
  417308:	mov    ecx,0x7
  41730d:	call   422690 <flatcc_json_parser_set_error@@Base>
  417312:	xor    ebp,ebp
  417314:	jmp    417321 <main@@Base+0x10501>
  417316:	neg    rbp
  417319:	mov    QWORD PTR [rsp+0x20],rbp
  41731e:	mov    rax,rsi
  417321:	mov    r12,rax
  417324:	cmp    rbx,rax
  417327:	jne    41735d <main@@Base+0x1053d>
  417329:	mov    rdi,r14
  41732c:	mov    rsi,rbx
  41732f:	mov    rdx,r15
  417332:	lea    rcx,[rip+0x29227]        # 440560 <__data_start@@Base+0x4b0>
  417339:	lea    r8,[rsp+0x20]
  41733e:	call   413ad0 <main@@Base+0xccb0>
  417343:	cmp    rax,rbx
  417346:	je     4182cb <main@@Base+0x114ab>
  41734c:	mov    r12,rax
  41734f:	cmp    rax,r15
  417352:	je     4182ce <main@@Base+0x114ae>
  417358:	mov    rbp,QWORD PTR [rsp+0x20]
  41735d:	test   rbp,rbp
  417360:	mov    rbx,r12
  417363:	jne    41736c <main@@Base+0x1054c>
  417365:	test   BYTE PTR [r14+0x10],0x2
  41736a:	je     41738f <main@@Base+0x1056f>
  41736c:	mov    rdi,QWORD PTR [r14]
  41736f:	mov    edx,0x8
  417374:	mov    esi,0x3
  417379:	mov    ecx,0x8
  41737e:	call   41f040 <flatcc_builder_table_add@@Base>
  417383:	test   rax,rax
  417386:	je     4182ce <main@@Base+0x114ae>
  41738c:	mov    QWORD PTR [rax],rbp
  41738f:	mov    rbp,QWORD PTR [rsp+0x18]
  417394:	jmp    417576 <main@@Base+0x10756>
  417399:	mov    rax,rbx
  41739c:	mov    r14,QWORD PTR [rsp+0x8]
  4173a1:	jmp    417644 <main@@Base+0x10824>
  4173a6:	mov    DWORD PTR [rsp+0x14],eax
  4173aa:	mov    r12d,eax
  4173ad:	mov    r14,QWORD PTR [rsp+0x8]
  4173b2:	mov    rax,rsi
  4173b5:	mov    rbp,rax
  4173b8:	cmp    rbx,rax
  4173bb:	jne    4173f6 <main@@Base+0x105d6>
  4173bd:	mov    rdi,r14
  4173c0:	mov    rsi,rbx
  4173c3:	mov    rdx,r15
  4173c6:	lea    rcx,[rip+0x29173]        # 440540 <__data_start@@Base+0x490>
  4173cd:	lea    r8,[rsp+0x14]
  4173d2:	call   413c80 <main@@Base+0xce60>
  4173d7:	cmp    rax,rbx
  4173da:	je     4182d8 <main@@Base+0x114b8>
  4173e0:	mov    rbp,rax
  4173e3:	cmp    rax,r15
  4173e6:	je     4182db <main@@Base+0x114bb>
  4173ec:	mov    r12d,DWORD PTR [rsp+0x14]
  4173f1:	mov    r14,QWORD PTR [rsp+0x8]
  4173f6:	test   r12d,r12d
  4173f9:	mov    rbx,rbp
  4173fc:	jne    417405 <main@@Base+0x105e5>
  4173fe:	test   BYTE PTR [r14+0x10],0x2
  417403:	je     41738f <main@@Base+0x1056f>
  417405:	mov    rdi,QWORD PTR [r14]
  417408:	mov    edx,0x4
  41740d:	mov    esi,0x1
  417412:	mov    ecx,0x4
  417417:	call   41f040 <flatcc_builder_table_add@@Base>
  41741c:	test   rax,rax
  41741f:	je     4182db <main@@Base+0x114bb>
  417425:	mov    DWORD PTR [rax],r12d
  417428:	jmp    41738f <main@@Base+0x1056f>
  41742d:	mov    rax,QWORD PTR [rsp+0x28]
  417432:	mov    rcx,rax
  417435:	shr    rcx,0x20
  417439:	je     417636 <main@@Base+0x10816>
  41743f:	mov    r14,QWORD PTR [rsp+0x8]
  417444:	mov    rdi,r14
  417447:	mov    rdx,r15
  41744a:	mov    ecx,0x7
  41744f:	call   422690 <flatcc_json_parser_set_error@@Base>
  417454:	jmp    417644 <main@@Base+0x10824>
  417459:	jne    41746f <main@@Base+0x1064f>
  41745b:	cmp    BYTE PTR [rsi+0x2],0x20
  41745f:	jle    41746f <main@@Base+0x1064f>
  417461:	add    rsi,0x2
  417465:	mov    rax,rsi
  417468:	mov    r14,QWORD PTR [rsp+0x8]
  41746d:	jmp    417482 <main@@Base+0x10662>
  41746f:	mov    r14,QWORD PTR [rsp+0x8]
  417474:	mov    rdi,r14
  417477:	mov    rsi,rax
  41747a:	mov    rdx,r15
  41747d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417482:	mov    rbp,QWORD PTR [rsp+0x18]
  417487:	cmp    r13,rax
  41748a:	je     4174ce <main@@Base+0x106ae>
  41748c:	mov    rdi,r14
  41748f:	mov    rsi,rax
  417492:	mov    rdx,r15
  417495:	lea    rcx,[rsp+0x34]
  41749a:	call   424600 <flatcc_json_parser_build_string@@Base>
  41749f:	mov    rbx,rax
  4174a2:	cmp    DWORD PTR [rsp+0x34],0x0
  4174a7:	je     41829b <main@@Base+0x1147b>
  4174ad:	mov    rdi,QWORD PTR [r14]
  4174b0:	mov    esi,0x2
  4174b5:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  4174ba:	test   rax,rax
  4174bd:	je     41829b <main@@Base+0x1147b>
  4174c3:	mov    ecx,DWORD PTR [rsp+0x34]
  4174c7:	mov    DWORD PTR [rax],ecx
  4174c9:	jmp    417576 <main@@Base+0x10756>
  4174ce:	mov    rdi,r14
  4174d1:	mov    rsi,r13
  4174d4:	jmp    41756b <main@@Base+0x1074b>
  4174d9:	mov    rdi,QWORD PTR [rsp+0x8]
  4174de:	mov    rsi,rbx
  4174e1:	mov    rdx,r15
  4174e4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4174e9:	mov    rbx,rax
  4174ec:	cmp    r14,rbx
  4174ef:	mov    rbp,QWORD PTR [rsp+0x18]
  4174f4:	je     417560 <main@@Base+0x10740>
  4174f6:	mov    QWORD PTR [rsp+0x28],0x0
  4174ff:	mov    DWORD PTR [rsp+0x20],0x0
  417507:	mov    DWORD PTR [rsp+0x14],0x0
  41750f:	xor    ebp,ebp
  417511:	cmp    rbx,r15
  417514:	je     417614 <main@@Base+0x107f4>
  41751a:	mov    rdi,QWORD PTR [rsp+0x8]
  41751f:	mov    rsi,rbx
  417522:	mov    rdx,r15
  417525:	lea    rcx,[rsp+0x20]
  41752a:	lea    r8,[rsp+0x28]
  41752f:	call   424130 <flatcc_json_parser_integer@@Base>
  417534:	cmp    rax,rbx
  417537:	je     417625 <main@@Base+0x10805>
  41753d:	mov    r12,rax
  417540:	cmp    DWORD PTR [rsp+0x20],0x0
  417545:	je     4176ba <main@@Base+0x1089a>
  41754b:	mov    rdi,QWORD PTR [rsp+0x8]
  417550:	mov    rsi,r12
  417553:	mov    rdx,r15
  417556:	mov    ecx,0x8
  41755b:	jmp    4176dc <main@@Base+0x108bc>
  417560:	mov    rdi,QWORD PTR [rsp+0x8]
  417565:	mov    rsi,r14
  417568:	mov    r14,rdi
  41756b:	mov    rdx,r15
  41756e:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  417573:	mov    rbx,rax
  417576:	mov    rax,r15
  417579:	sub    rax,rbx
  41757c:	cmp    rax,0x2
  417580:	jl     41759c <main@@Base+0x1077c>
  417582:	cmp    BYTE PTR [rbx],0x20
  417585:	jg     4175ad <main@@Base+0x1078d>
  417587:	jne    41759c <main@@Base+0x1077c>
  417589:	cmp    BYTE PTR [rbx+0x1],0x20
  41758d:	jle    41759c <main@@Base+0x1077c>
  41758f:	inc    rbx
  417592:	cmp    rbx,r15
  417595:	jne    4175b6 <main@@Base+0x10796>
  417597:	jmp    41787e <main@@Base+0x10a5e>
  41759c:	mov    rdi,r14
  41759f:	mov    rsi,rbx
  4175a2:	mov    rdx,r15
  4175a5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4175aa:	mov    rbx,rax
  4175ad:	cmp    rbx,r15
  4175b0:	je     41787e <main@@Base+0x10a5e>
  4175b6:	movzx  eax,BYTE PTR [rbx]
  4175b9:	cmp    al,0x2c
  4175bb:	jne    417891 <main@@Base+0x10a71>
  4175c1:	lea    rsi,[rbx+0x1]
  4175c5:	mov    rax,r15
  4175c8:	sub    rax,rsi
  4175cb:	cmp    rax,0x2
  4175cf:	jl     4175ef <main@@Base+0x107cf>
  4175d1:	cmp    BYTE PTR [rsi],0x20
  4175d4:	jg     4175fd <main@@Base+0x107dd>
  4175d6:	jne    4175ef <main@@Base+0x107cf>
  4175d8:	cmp    BYTE PTR [rbx+0x2],0x20
  4175dc:	jle    4175ef <main@@Base+0x107cf>
  4175de:	add    rbx,0x2
  4175e2:	mov    rsi,rbx
  4175e5:	cmp    rsi,r15
  4175e8:	jne    417606 <main@@Base+0x107e6>
  4175ea:	jmp    4178d3 <main@@Base+0x10ab3>
  4175ef:	mov    rdi,r14
  4175f2:	mov    rdx,r15
  4175f5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4175fa:	mov    rsi,rax
  4175fd:	cmp    rsi,r15
  417600:	je     4178d3 <main@@Base+0x10ab3>
  417606:	cmp    BYTE PTR [rsi],0x7d
  417609:	jne    416378 <main@@Base+0xf558>
  41760f:	jmp    4178de <main@@Base+0x10abe>
  417614:	mov    r12,r15
  417617:	cmp    rbx,r12
  41761a:	jne    41771e <main@@Base+0x108fe>
  417620:	jmp    4176e9 <main@@Base+0x108c9>
  417625:	mov    r12,rbx
  417628:	cmp    rbx,r12
  41762b:	jne    41771e <main@@Base+0x108fe>
  417631:	jmp    4176e9 <main@@Base+0x108c9>
  417636:	mov    DWORD PTR [rsp+0x14],eax
  41763a:	mov    ebp,eax
  41763c:	mov    r14,QWORD PTR [rsp+0x8]
  417641:	mov    rax,rsi
  417644:	mov    r12,rax
  417647:	cmp    rbx,rax
  41764a:	jne    417684 <main@@Base+0x10864>
  41764c:	mov    rdi,r14
  41764f:	mov    rsi,rbx
  417652:	mov    rdx,r15
  417655:	lea    rcx,[rip+0x28f44]        # 4405a0 <__data_start@@Base+0x4f0>
  41765c:	lea    r8,[rsp+0x14]
  417661:	call   413c80 <main@@Base+0xce60>
  417666:	mov    r12,rax
  417669:	cmp    rax,rbx
  41766c:	je     4182ce <main@@Base+0x114ae>
  417672:	cmp    r12,r15
  417675:	je     4182ce <main@@Base+0x114ae>
  41767b:	mov    ebp,DWORD PTR [rsp+0x14]
  41767f:	mov    r14,QWORD PTR [rsp+0x8]
  417684:	test   ebp,ebp
  417686:	jne    417693 <main@@Base+0x10873>
  417688:	test   BYTE PTR [r14+0x10],0x2
  41768d:	je     417759 <main@@Base+0x10939>
  417693:	mov    rdi,QWORD PTR [r14]
  417696:	mov    edx,0x4
  41769b:	mov    esi,0x6
  4176a0:	mov    ecx,0x4
  4176a5:	call   41f040 <flatcc_builder_table_add@@Base>
  4176aa:	test   rax,rax
  4176ad:	je     4182ce <main@@Base+0x114ae>
  4176b3:	mov    DWORD PTR [rax],ebp
  4176b5:	jmp    417759 <main@@Base+0x10939>
  4176ba:	mov    rax,QWORD PTR [rsp+0x28]
  4176bf:	mov    rcx,rax
  4176c2:	shr    rcx,0x20
  4176c6:	je     417766 <main@@Base+0x10946>
  4176cc:	mov    rdi,QWORD PTR [rsp+0x8]
  4176d1:	mov    rsi,r12
  4176d4:	mov    rdx,r15
  4176d7:	mov    ecx,0x7
  4176dc:	call   422690 <flatcc_json_parser_set_error@@Base>
  4176e1:	mov    r12,rax
  4176e4:	cmp    rbx,r12
  4176e7:	jne    41771e <main@@Base+0x108fe>
  4176e9:	mov    rdi,QWORD PTR [rsp+0x8]
  4176ee:	mov    rsi,rbx
  4176f1:	mov    rdx,r15
  4176f4:	lea    rcx,[rip+0x28ee5]        # 4405e0 <__data_start@@Base+0x530>
  4176fb:	lea    r8,[rsp+0x14]
  417700:	call   413c80 <main@@Base+0xce60>
  417705:	mov    r12,rax
  417708:	cmp    rax,rbx
  41770b:	je     4182ce <main@@Base+0x114ae>
  417711:	cmp    r12,r15
  417714:	je     4182ce <main@@Base+0x114ae>
  41771a:	mov    ebp,DWORD PTR [rsp+0x14]
  41771e:	test   ebp,ebp
  417720:	jne    41772d <main@@Base+0x1090d>
  417722:	mov    rax,QWORD PTR [rsp+0x8]
  417727:	test   BYTE PTR [rax+0x10],0x2
  41772b:	je     417754 <main@@Base+0x10934>
  41772d:	mov    rax,QWORD PTR [rsp+0x8]
  417732:	mov    rdi,QWORD PTR [rax]
  417735:	mov    edx,0x4
  41773a:	mov    esi,0x8
  41773f:	mov    ecx,0x4
  417744:	call   41f040 <flatcc_builder_table_add@@Base>
  417749:	test   rax,rax
  41774c:	je     4182ce <main@@Base+0x114ae>
  417752:	mov    DWORD PTR [rax],ebp
  417754:	mov    r14,QWORD PTR [rsp+0x8]
  417759:	mov    rbp,QWORD PTR [rsp+0x18]
  41775e:	mov    rbx,r12
  417761:	jmp    417576 <main@@Base+0x10756>
  417766:	mov    DWORD PTR [rsp+0x14],eax
  41776a:	mov    ebp,eax
  41776c:	cmp    rbx,r12
  41776f:	jne    41771e <main@@Base+0x108fe>
  417771:	jmp    4176e9 <main@@Base+0x108c9>
  417776:	mov    rdi,r14
  417779:	mov    rdx,r15
  41777c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417781:	mov    rsi,rax
  417784:	mov    rax,r15
  417787:	cmp    rsi,r15
  41778a:	je     41792e <main@@Base+0x10b0e>
  417790:	cmp    BYTE PTR [rsi],0x7d
  417793:	jne    41792b <main@@Base+0x10b0b>
  417799:	lea    r13,[rsi+0x1]
  41779d:	mov    rax,r15
  4177a0:	sub    rax,r13
  4177a3:	cmp    rax,0x2
  4177a7:	jl     4181b3 <main@@Base+0x11393>
  4177ad:	cmp    BYTE PTR [r13+0x0],0x20
  4177b2:	jg     415cee <main@@Base+0xeece>
  4177b8:	jne    4181b3 <main@@Base+0x11393>
  4177be:	cmp    BYTE PTR [rsi+0x2],0x20
  4177c2:	jle    4181b3 <main@@Base+0x11393>
  4177c8:	add    rsi,0x2
  4177cc:	mov    r13,rsi
  4177cf:	cmp    DWORD PTR [r14+0x1c],0x0
  4177d4:	je     415cf9 <main@@Base+0xeed9>
  4177da:	jmp    4182ab <main@@Base+0x1148b>
  4177df:	mov    r13,r15
  4177e2:	cmp    DWORD PTR [r14+0x1c],0x0
  4177e7:	je     4159f9 <main@@Base+0xebd9>
  4177ed:	jmp    4182ab <main@@Base+0x1148b>
  4177f2:	cmp    al,0x7d
  4177f4:	jne    418097 <main@@Base+0x11277>
  4177fa:	lea    r13,[rbx+0x1]
  4177fe:	mov    rax,r15
  417801:	sub    rax,r13
  417804:	cmp    rax,0x2
  417808:	jl     41786b <main@@Base+0x10a4b>
  41780a:	cmp    BYTE PTR [r13+0x0],0x20
  41780f:	jg     4159ee <main@@Base+0xebce>
  417815:	jne    41786b <main@@Base+0x10a4b>
  417817:	cmp    BYTE PTR [rbx+0x2],0x20
  41781b:	jle    41786b <main@@Base+0x10a4b>
  41781d:	add    rbx,0x2
  417821:	mov    r13,rbx
  417824:	cmp    DWORD PTR [r14+0x1c],0x0
  417829:	je     4159f9 <main@@Base+0xebd9>
  41782f:	jmp    4182ab <main@@Base+0x1148b>
  417834:	mov    rdi,r14
  417837:	mov    rsi,r15
  41783a:	jmp    41809d <main@@Base+0x1127d>
  41783f:	lea    r13,[rax+0x1]
  417843:	mov    rcx,r15
  417846:	sub    rcx,r13
  417849:	cmp    rcx,0x2
  41784d:	jl     41786b <main@@Base+0x10a4b>
  41784f:	cmp    BYTE PTR [r13+0x0],0x20
  417854:	jg     4159ee <main@@Base+0xebce>
  41785a:	jne    41786b <main@@Base+0x10a4b>
  41785c:	cmp    BYTE PTR [rax+0x2],0x20
  417860:	jle    41786b <main@@Base+0x10a4b>
  417862:	add    rax,0x2
  417866:	jmp    4159eb <main@@Base+0xebcb>
  41786b:	mov    rdi,r14
  41786e:	mov    rsi,r13
  417871:	mov    rdx,r15
  417874:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417879:	jmp    4159eb <main@@Base+0xebcb>
  41787e:	mov    r13,r15
  417881:	cmp    DWORD PTR [r14+0x1c],0x0
  417886:	je     4180de <main@@Base+0x112be>
  41788c:	jmp    418298 <main@@Base+0x11478>
  417891:	cmp    al,0x7d
  417893:	jne    4180bd <main@@Base+0x1129d>
  417899:	lea    r13,[rbx+0x1]
  41789d:	mov    rax,r15
  4178a0:	sub    rax,r13
  4178a3:	cmp    rax,0x2
  4178a7:	jl     417918 <main@@Base+0x10af8>
  4178a9:	cmp    BYTE PTR [r13+0x0],0x20
  4178ae:	jg     4180d3 <main@@Base+0x112b3>
  4178b4:	jne    417918 <main@@Base+0x10af8>
  4178b6:	cmp    BYTE PTR [rbx+0x2],0x20
  4178ba:	jle    417918 <main@@Base+0x10af8>
  4178bc:	add    rbx,0x2
  4178c0:	mov    r13,rbx
  4178c3:	cmp    DWORD PTR [r14+0x1c],0x0
  4178c8:	je     4180de <main@@Base+0x112be>
  4178ce:	jmp    418298 <main@@Base+0x11478>
  4178d3:	mov    rdi,r14
  4178d6:	mov    rsi,r15
  4178d9:	jmp    4180c3 <main@@Base+0x112a3>
  4178de:	lea    r13,[rsi+0x1]
  4178e2:	mov    rax,r15
  4178e5:	sub    rax,r13
  4178e8:	cmp    rax,0x2
  4178ec:	jl     417918 <main@@Base+0x10af8>
  4178ee:	cmp    BYTE PTR [r13+0x0],0x20
  4178f3:	jg     4180d3 <main@@Base+0x112b3>
  4178f9:	jne    417918 <main@@Base+0x10af8>
  4178fb:	cmp    BYTE PTR [rsi+0x2],0x20
  4178ff:	jle    417918 <main@@Base+0x10af8>
  417901:	add    rsi,0x2
  417905:	mov    r13,rsi
  417908:	cmp    DWORD PTR [r14+0x1c],0x0
  41790d:	je     4180de <main@@Base+0x112be>
  417913:	jmp    418298 <main@@Base+0x11478>
  417918:	mov    rdi,r14
  41791b:	mov    rsi,r13
  41791e:	mov    rdx,r15
  417921:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417926:	jmp    4180d0 <main@@Base+0x112b0>
  41792b:	mov    rax,rsi
  41792e:	mov    rsi,r15
  417931:	cmp    rax,r15
  417934:	je     417956 <main@@Base+0x10b36>
  417936:	cmp    BYTE PTR [rax],0x22
  417939:	jne    417940 <main@@Base+0x10b20>
  41793b:	inc    rax
  41793e:	jmp    417953 <main@@Base+0x10b33>
  417940:	mov    rdi,r14
  417943:	mov    rsi,rax
  417946:	mov    rdx,r15
  417949:	mov    ecx,0x5
  41794e:	call   422690 <flatcc_json_parser_set_error@@Base>
  417953:	mov    rsi,rax
  417956:	mov    rax,r15
  417959:	sub    rax,rsi
  41795c:	cmp    rax,0x8
  417960:	jb     41796c <main@@Base+0x10b4c>
  417962:	movbe  rax,QWORD PTR [rsi]
  417967:	jmp    4179ed <main@@Base+0x10bcd>
  41796c:	dec    rax
  41796f:	cmp    rax,0x6
  417973:	ja     417a17 <main@@Base+0x10bf7>
  417979:	lea    rcx,[rip+0x1adc4]        # 432744 <_IO_stdin_used@@Base+0x744>
  417980:	mov    rdx,rcx
  417983:	movsxd rcx,DWORD PTR [rcx+rax*4]
  417987:	add    rcx,rdx
  41798a:	xor    r8d,r8d
  41798d:	xor    eax,eax
  41798f:	xor    edx,edx
  417991:	xor    edi,edi
  417993:	xor    ebp,ebp
  417995:	xor    ebx,ebx
  417997:	jmp    rcx
  417999:	movsx  r8,BYTE PTR [rsi+0x6]
  41799e:	shl    r8,0x8
  4179a2:	movsx  rax,BYTE PTR [rsi+0x5]
  4179a7:	shl    rax,0x10
  4179ab:	or     rax,r8
  4179ae:	movsx  rdx,BYTE PTR [rsi+0x4]
  4179b3:	shl    rdx,0x18
  4179b7:	or     rdx,rax
  4179ba:	movsx  rdi,BYTE PTR [rsi+0x3]
  4179bf:	shl    rdi,0x20
  4179c3:	or     rdi,rdx
  4179c6:	movsx  rbp,BYTE PTR [rsi+0x2]
  4179cb:	shl    rbp,0x28
  4179cf:	or     rbp,rdi
  4179d2:	movsx  rbx,BYTE PTR [rsi+0x1]
  4179d7:	shl    rbx,0x30
  4179db:	or     rbx,rbp
  4179de:	movzx  eax,BYTE PTR [rsi]
  4179e1:	shl    rax,0x38
  4179e5:	or     rax,rbx
  4179e8:	mov    rbp,QWORD PTR [rsp+0x18]
  4179ed:	movabs rcx,0x616161615f626262
  4179f7:	cmp    rax,rcx
  4179fa:	jne    417a17 <main@@Base+0x10bf7>
  4179fc:	lea    r12,[rsi+0x8]
  417a00:	mov    rax,r15
  417a03:	sub    rax,r12
  417a06:	cmp    rax,0x8
  417a0a:	jb     417a1f <main@@Base+0x10bff>
  417a0c:	movbe  rcx,QWORD PTR [r12]
  417a12:	jmp    417aa1 <main@@Base+0x10c81>
  417a17:	mov    rdi,r14
  417a1a:	jmp    417c29 <main@@Base+0x10e09>
  417a1f:	lea    rcx,[rax-0x1]
  417a23:	cmp    rcx,0x6
  417a27:	ja     417c23 <main@@Base+0x10e03>
  417a2d:	lea    rdx,[rip+0x1ad2c]        # 432760 <_IO_stdin_used@@Base+0x760>
  417a34:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417a38:	add    rcx,rdx
  417a3b:	xor    r8d,r8d
  417a3e:	xor    r9d,r9d
  417a41:	xor    edi,edi
  417a43:	xor    ebp,ebp
  417a45:	xor    ebx,ebx
  417a47:	xor    edx,edx
  417a49:	jmp    rcx
  417a4b:	movsx  r8,BYTE PTR [rsi+0xe]
  417a50:	shl    r8,0x8
  417a54:	movsx  r9,BYTE PTR [rsi+0xd]
  417a59:	shl    r9,0x10
  417a5d:	or     r9,r8
  417a60:	movsx  rdi,BYTE PTR [rsi+0xc]
  417a65:	shl    rdi,0x18
  417a69:	or     rdi,r9
  417a6c:	movsx  rbp,BYTE PTR [rsi+0xb]
  417a71:	shl    rbp,0x20
  417a75:	or     rbp,rdi
  417a78:	movsx  rbx,BYTE PTR [rsi+0xa]
  417a7d:	shl    rbx,0x28
  417a81:	or     rbx,rbp
  417a84:	movsx  rdx,BYTE PTR [rsi+0x9]
  417a89:	shl    rdx,0x30
  417a8d:	or     rdx,rbx
  417a90:	movzx  ecx,BYTE PTR [r12]
  417a95:	shl    rcx,0x38
  417a99:	or     rcx,rdx
  417a9c:	mov    rbp,QWORD PTR [rsp+0x18]
  417aa1:	movabs rdx,0x625f73746172745f
  417aab:	cmp    rcx,rdx
  417aae:	jne    417acb <main@@Base+0x10cab>
  417ab0:	lea    r12,[rsi+0x10]
  417ab4:	mov    rax,r15
  417ab7:	sub    rax,r12
  417aba:	cmp    rax,0x8
  417abe:	jb     417b38 <main@@Base+0x10d18>
  417ac0:	movbe  rcx,QWORD PTR [r12]
  417ac6:	jmp    417bba <main@@Base+0x10d9a>
  417acb:	and    rcx,0xffffffffffffff00
  417ad2:	add    rdx,0x3fdfea1
  417ad9:	cmp    rcx,rdx
  417adc:	jne    417c23 <main@@Base+0x10e03>
  417ae2:	cmp    rax,0x8
  417ae6:	jl     417eea <main@@Base+0x110ca>
  417aec:	cmp    BYTE PTR [rsi+0xf],0x22
  417af0:	jne    417eea <main@@Base+0x110ca>
  417af6:	lea    rax,[rsi+0x10]
  417afa:	mov    rcx,r15
  417afd:	sub    rcx,rax
  417b00:	cmp    rcx,0x2
  417b04:	jl     417cd2 <main@@Base+0x10eb2>
  417b0a:	cmp    BYTE PTR [rax],0x20
  417b0d:	jg     417ce0 <main@@Base+0x10ec0>
  417b13:	jne    417cd2 <main@@Base+0x10eb2>
  417b19:	cmp    BYTE PTR [rsi+0x11],0x20
  417b1d:	jle    417cd2 <main@@Base+0x10eb2>
  417b23:	add    rsi,0x11
  417b27:	mov    rax,rsi
  417b2a:	cmp    rax,r15
  417b2d:	jne    417ce5 <main@@Base+0x10ec5>
  417b33:	jmp    417d2e <main@@Base+0x10f0e>
  417b38:	lea    rcx,[rax-0x1]
  417b3c:	cmp    rcx,0x6
  417b40:	ja     417c23 <main@@Base+0x10e03>
  417b46:	lea    rdx,[rip+0x1ac2f]        # 43277c <_IO_stdin_used@@Base+0x77c>
  417b4d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417b51:	add    rcx,rdx
  417b54:	xor    r8d,r8d
  417b57:	xor    r9d,r9d
  417b5a:	xor    edi,edi
  417b5c:	xor    ebp,ebp
  417b5e:	xor    edx,edx
  417b60:	xor    ebx,ebx
  417b62:	jmp    rcx
  417b64:	movsx  r8,BYTE PTR [rsi+0x16]
  417b69:	shl    r8,0x8
  417b6d:	movsx  r9,BYTE PTR [rsi+0x15]
  417b72:	shl    r9,0x10
  417b76:	or     r9,r8
  417b79:	movsx  rdi,BYTE PTR [rsi+0x14]
  417b7e:	shl    rdi,0x18
  417b82:	or     rdi,r9
  417b85:	movsx  rbp,BYTE PTR [rsi+0x13]
  417b8a:	shl    rbp,0x20
  417b8e:	or     rbp,rdi
  417b91:	movsx  rdx,BYTE PTR [rsi+0x12]
  417b96:	shl    rdx,0x28
  417b9a:	or     rdx,rbp
  417b9d:	movsx  rbx,BYTE PTR [rsi+0x11]
  417ba2:	shl    rbx,0x30
  417ba6:	or     rbx,rdx
  417ba9:	movzx  ecx,BYTE PTR [r12]
  417bae:	shl    rcx,0x38
  417bb2:	or     rcx,rbx
  417bb5:	mov    rbp,QWORD PTR [rsp+0x18]
  417bba:	shr    rcx,0x18
  417bbe:	movabs rdx,0x7374657073
  417bc8:	cmp    rcx,rdx
  417bcb:	jne    417c23 <main@@Base+0x10e03>
  417bcd:	cmp    rax,0x6
  417bd1:	jl     417eea <main@@Base+0x110ca>
  417bd7:	cmp    BYTE PTR [rsi+0x15],0x22
  417bdb:	jne    417eea <main@@Base+0x110ca>
  417be1:	lea    rax,[rsi+0x16]
  417be5:	mov    rcx,r15
  417be8:	sub    rcx,rax
  417beb:	cmp    rcx,0x2
  417bef:	jl     417d46 <main@@Base+0x10f26>
  417bf5:	cmp    BYTE PTR [rax],0x20
  417bf8:	jg     417d54 <main@@Base+0x10f34>
  417bfe:	jne    417d46 <main@@Base+0x10f26>
  417c04:	cmp    BYTE PTR [rsi+0x17],0x20
  417c08:	jle    417d46 <main@@Base+0x10f26>
  417c0e:	add    rsi,0x17
  417c12:	mov    rax,rsi
  417c15:	cmp    rax,r15
  417c18:	jne    417d59 <main@@Base+0x10f39>
  417c1e:	jmp    417da2 <main@@Base+0x10f82>
  417c23:	mov    rdi,r14
  417c26:	mov    rsi,r12
  417c29:	mov    rdx,r15
  417c2c:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  417c31:	mov    rbx,rax
  417c34:	mov    rax,r15
  417c37:	sub    rax,rbx
  417c3a:	cmp    rax,0x2
  417c3e:	jl     417c5a <main@@Base+0x10e3a>
  417c40:	cmp    BYTE PTR [rbx],0x20
  417c43:	jg     417c6b <main@@Base+0x10e4b>
  417c45:	jne    417c5a <main@@Base+0x10e3a>
  417c47:	cmp    BYTE PTR [rbx+0x1],0x20
  417c4b:	jle    417c5a <main@@Base+0x10e3a>
  417c4d:	inc    rbx
  417c50:	cmp    rbx,r15
  417c53:	jne    417c74 <main@@Base+0x10e54>
  417c55:	jmp    4180aa <main@@Base+0x1128a>
  417c5a:	mov    rdi,r14
  417c5d:	mov    rsi,rbx
  417c60:	mov    rdx,r15
  417c63:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417c68:	mov    rbx,rax
  417c6b:	cmp    rbx,r15
  417c6e:	je     4180aa <main@@Base+0x1128a>
  417c74:	movzx  eax,BYTE PTR [rbx]
  417c77:	cmp    al,0x2c
  417c79:	jne    41810a <main@@Base+0x112ea>
  417c7f:	lea    rax,[rbx+0x1]
  417c83:	mov    rcx,r15
  417c86:	sub    rcx,rax
  417c89:	cmp    rcx,0x2
  417c8d:	jl     417cad <main@@Base+0x10e8d>
  417c8f:	cmp    BYTE PTR [rax],0x20
  417c92:	jg     417cbb <main@@Base+0x10e9b>
  417c94:	jne    417cad <main@@Base+0x10e8d>
  417c96:	cmp    BYTE PTR [rbx+0x2],0x20
  417c9a:	jle    417cad <main@@Base+0x10e8d>
  417c9c:	add    rbx,0x2
  417ca0:	mov    rax,rbx
  417ca3:	cmp    rax,r15
  417ca6:	jne    417cc4 <main@@Base+0x10ea4>
  417ca8:	jmp    418143 <main@@Base+0x11323>
  417cad:	mov    rdi,r14
  417cb0:	mov    rsi,rax
  417cb3:	mov    rdx,r15
  417cb6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417cbb:	cmp    rax,r15
  417cbe:	je     418143 <main@@Base+0x11323>
  417cc4:	cmp    BYTE PTR [rax],0x7d
  417cc7:	jne    41792e <main@@Base+0x10b0e>
  417ccd:	jmp    41814b <main@@Base+0x1132b>
  417cd2:	mov    rdi,r14
  417cd5:	mov    rsi,rax
  417cd8:	mov    rdx,r15
  417cdb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417ce0:	cmp    rax,r15
  417ce3:	je     417d2e <main@@Base+0x10f0e>
  417ce5:	cmp    BYTE PTR [rax],0x3a
  417ce8:	jne    417d2e <main@@Base+0x10f0e>
  417cea:	lea    rbp,[rax+0x1]
  417cee:	mov    rcx,r15
  417cf1:	sub    rcx,rbp
  417cf4:	cmp    rcx,0x2
  417cf8:	jl     417dba <main@@Base+0x10f9a>
  417cfe:	cmp    BYTE PTR [rbp+0x0],0x20
  417d02:	jg     417d1b <main@@Base+0x10efb>
  417d04:	jne    417dba <main@@Base+0x10f9a>
  417d0a:	cmp    BYTE PTR [rax+0x2],0x20
  417d0e:	jle    417dba <main@@Base+0x10f9a>
  417d14:	add    rax,0x2
  417d18:	mov    rbp,rax
  417d1b:	mov    r14,QWORD PTR [rsp+0x8]
  417d20:	cmp    r12,rbp
  417d23:	jne    417dd9 <main@@Base+0x10fb9>
  417d29:	jmp    417eea <main@@Base+0x110ca>
  417d2e:	mov    rdi,r14
  417d31:	mov    rsi,rax
  417d34:	mov    rdx,r15
  417d37:	mov    ecx,0x4
  417d3c:	call   422690 <flatcc_json_parser_set_error@@Base>
  417d41:	jmp    417dcd <main@@Base+0x10fad>
  417d46:	mov    rdi,r14
  417d49:	mov    rsi,rax
  417d4c:	mov    rdx,r15
  417d4f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417d54:	cmp    rax,r15
  417d57:	je     417da2 <main@@Base+0x10f82>
  417d59:	cmp    BYTE PTR [rax],0x3a
  417d5c:	jne    417da2 <main@@Base+0x10f82>
  417d5e:	lea    rbp,[rax+0x1]
  417d62:	mov    rcx,r15
  417d65:	sub    rcx,rbp
  417d68:	cmp    rcx,0x2
  417d6c:	jl     417e6b <main@@Base+0x1104b>
  417d72:	cmp    BYTE PTR [rbp+0x0],0x20
  417d76:	jg     417d8f <main@@Base+0x10f6f>
  417d78:	jne    417e6b <main@@Base+0x1104b>
  417d7e:	cmp    BYTE PTR [rax+0x2],0x20
  417d82:	jle    417e6b <main@@Base+0x1104b>
  417d88:	add    rax,0x2
  417d8c:	mov    rbp,rax
  417d8f:	mov    r14,QWORD PTR [rsp+0x8]
  417d94:	cmp    r12,rbp
  417d97:	jne    417e86 <main@@Base+0x11066>
  417d9d:	jmp    417eea <main@@Base+0x110ca>
  417da2:	mov    rdi,r14
  417da5:	mov    rsi,rax
  417da8:	mov    rdx,r15
  417dab:	mov    ecx,0x4
  417db0:	call   422690 <flatcc_json_parser_set_error@@Base>
  417db5:	jmp    417e7e <main@@Base+0x1105e>
  417dba:	mov    r14,QWORD PTR [rsp+0x8]
  417dbf:	mov    rdi,r14
  417dc2:	mov    rsi,rbp
  417dc5:	mov    rdx,r15
  417dc8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417dcd:	mov    rbp,rax
  417dd0:	cmp    r12,rbp
  417dd3:	je     417eea <main@@Base+0x110ca>
  417dd9:	mov    QWORD PTR [rsp+0x28],0x0
  417de2:	mov    DWORD PTR [rsp+0x14],0x0
  417dea:	mov    QWORD PTR [rsp+0x20],0x0
  417df3:	cmp    rbp,r15
  417df6:	je     417e57 <main@@Base+0x11037>
  417df8:	mov    rdi,r14
  417dfb:	mov    rsi,rbp
  417dfe:	mov    rdx,r15
  417e01:	lea    rcx,[rsp+0x14]
  417e06:	lea    r8,[rsp+0x28]
  417e0b:	call   424130 <flatcc_json_parser_integer@@Base>
  417e10:	cmp    rax,rbp
  417e13:	je     417f16 <main@@Base+0x110f6>
  417e19:	mov    rbx,rax
  417e1c:	mov    r12,QWORD PTR [rsp+0x28]
  417e21:	cmp    DWORD PTR [rsp+0x14],0x0
  417e26:	je     417f26 <main@@Base+0x11106>
  417e2c:	movabs rax,0x8000000000000000
  417e36:	cmp    r12,rax
  417e39:	jbe    417f8f <main@@Base+0x1116f>
  417e3f:	mov    r14,QWORD PTR [rsp+0x8]
  417e44:	mov    rdi,r14
  417e47:	mov    rsi,rbx
  417e4a:	mov    rdx,r15
  417e4d:	mov    ecx,0x8
  417e52:	jmp    417f3e <main@@Base+0x1111e>
  417e57:	xor    r12d,r12d
  417e5a:	mov    rbx,r15
  417e5d:	cmp    rbp,rbx
  417e60:	jne    417fda <main@@Base+0x111ba>
  417e66:	jmp    417fa1 <main@@Base+0x11181>
  417e6b:	mov    r14,QWORD PTR [rsp+0x8]
  417e70:	mov    rdi,r14
  417e73:	mov    rsi,rbp
  417e76:	mov    rdx,r15
  417e79:	call   422710 <flatcc_json_parser_space_ext@@Base>
  417e7e:	mov    rbp,rax
  417e81:	cmp    r12,rbp
  417e84:	je     417eea <main@@Base+0x110ca>
  417e86:	mov    QWORD PTR [rsp+0x28],0x0
  417e8f:	mov    DWORD PTR [rsp+0x20],0x0
  417e97:	mov    DWORD PTR [rsp+0x14],0x0
  417e9f:	xor    r12d,r12d
  417ea2:	cmp    rbp,r15
  417ea5:	je     417f05 <main@@Base+0x110e5>
  417ea7:	mov    rdi,r14
  417eaa:	mov    rsi,rbp
  417ead:	mov    rdx,r15
  417eb0:	lea    rcx,[rsp+0x20]
  417eb5:	lea    r8,[rsp+0x28]
  417eba:	call   424130 <flatcc_json_parser_integer@@Base>
  417ebf:	cmp    rax,rbp
  417ec2:	je     417f1e <main@@Base+0x110fe>
  417ec4:	mov    rbx,rax
  417ec7:	cmp    DWORD PTR [rsp+0x20],0x0
  417ecc:	je     417f54 <main@@Base+0x11134>
  417ed2:	mov    r14,QWORD PTR [rsp+0x8]
  417ed7:	mov    rdi,r14
  417eda:	mov    rsi,rbx
  417edd:	mov    rdx,r15
  417ee0:	mov    ecx,0x8
  417ee5:	jmp    417f79 <main@@Base+0x11159>
  417eea:	mov    rdi,r14
  417eed:	mov    rsi,r12
  417ef0:	mov    rdx,r15
  417ef3:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  417ef8:	mov    rbx,rax
  417efb:	mov    rbp,QWORD PTR [rsp+0x18]
  417f00:	jmp    417c34 <main@@Base+0x10e14>
  417f05:	mov    rbx,r15
  417f08:	cmp    rbp,rbx
  417f0b:	jne    41805e <main@@Base+0x1123e>
  417f11:	jmp    418025 <main@@Base+0x11205>
  417f16:	xor    r12d,r12d
  417f19:	mov    rbx,rbp
  417f1c:	jmp    417f97 <main@@Base+0x11177>
  417f1e:	mov    rbx,rbp
  417f21:	jmp    41801b <main@@Base+0x111fb>
  417f26:	test   r12,r12
  417f29:	jns    417f92 <main@@Base+0x11172>
  417f2b:	mov    r14,QWORD PTR [rsp+0x8]
  417f30:	mov    rdi,r14
  417f33:	mov    rsi,rbx
  417f36:	mov    rdx,r15
  417f39:	mov    ecx,0x7
  417f3e:	call   422690 <flatcc_json_parser_set_error@@Base>
  417f43:	mov    rbx,rax
  417f46:	xor    r12d,r12d
  417f49:	cmp    rbp,rbx
  417f4c:	jne    417fda <main@@Base+0x111ba>
  417f52:	jmp    417fa1 <main@@Base+0x11181>
  417f54:	mov    rax,QWORD PTR [rsp+0x28]
  417f59:	mov    rcx,rax
  417f5c:	shr    rcx,0x20
  417f60:	je     418014 <main@@Base+0x111f4>
  417f66:	mov    r14,QWORD PTR [rsp+0x8]
  417f6b:	mov    rdi,r14
  417f6e:	mov    rsi,rbx
  417f71:	mov    rdx,r15
  417f74:	mov    ecx,0x7
  417f79:	call   422690 <flatcc_json_parser_set_error@@Base>
  417f7e:	mov    rbx,rax
  417f81:	cmp    rbp,rbx
  417f84:	jne    41805e <main@@Base+0x1123e>
  417f8a:	jmp    418025 <main@@Base+0x11205>
  417f8f:	neg    r12
  417f92:	mov    QWORD PTR [rsp+0x20],r12
  417f97:	mov    r14,QWORD PTR [rsp+0x8]
  417f9c:	cmp    rbp,rbx
  417f9f:	jne    417fda <main@@Base+0x111ba>
  417fa1:	mov    rdi,r14
  417fa4:	mov    rsi,rbp
  417fa7:	mov    rdx,r15
  417faa:	lea    rcx,[rip+0x2866f]        # 440620 <__data_start@@Base+0x570>
  417fb1:	lea    r8,[rsp+0x20]
  417fb6:	call   413ad0 <main@@Base+0xccb0>
  417fbb:	mov    rbx,rax
  417fbe:	cmp    rax,rbp
  417fc1:	je     4182a3 <main@@Base+0x11483>
  417fc7:	cmp    rbx,r15
  417fca:	je     4182a3 <main@@Base+0x11483>
  417fd0:	mov    r12,QWORD PTR [rsp+0x20]
  417fd5:	mov    r14,QWORD PTR [rsp+0x8]
  417fda:	test   r12,r12
  417fdd:	mov    rbp,QWORD PTR [rsp+0x18]
  417fe2:	jne    417fef <main@@Base+0x111cf>
  417fe4:	test   BYTE PTR [r14+0x10],0x2
  417fe9:	je     417c34 <main@@Base+0x10e14>
  417fef:	mov    rdi,QWORD PTR [r14]
  417ff2:	mov    edx,0x8
  417ff7:	xor    esi,esi
  417ff9:	mov    ecx,0x8
  417ffe:	call   41f040 <flatcc_builder_table_add@@Base>
  418003:	test   rax,rax
  418006:	je     4182a3 <main@@Base+0x11483>
  41800c:	mov    QWORD PTR [rax],r12
  41800f:	jmp    417c34 <main@@Base+0x10e14>
  418014:	mov    DWORD PTR [rsp+0x14],eax
  418018:	mov    r12d,eax
  41801b:	mov    r14,QWORD PTR [rsp+0x8]
  418020:	cmp    rbp,rbx
  418023:	jne    41805e <main@@Base+0x1123e>
  418025:	mov    rdi,r14
  418028:	mov    rsi,rbp
  41802b:	mov    rdx,r15
  41802e:	lea    rcx,[rip+0x285cb]        # 440600 <__data_start@@Base+0x550>
  418035:	lea    r8,[rsp+0x14]
  41803a:	call   413c80 <main@@Base+0xce60>
  41803f:	mov    rbx,rax
  418042:	cmp    rax,rbp
  418045:	je     4182a3 <main@@Base+0x11483>
  41804b:	cmp    rbx,r15
  41804e:	je     4182a3 <main@@Base+0x11483>
  418054:	mov    r12d,DWORD PTR [rsp+0x14]
  418059:	mov    r14,QWORD PTR [rsp+0x8]
  41805e:	test   r12d,r12d
  418061:	jne    41806a <main@@Base+0x1124a>
  418063:	test   BYTE PTR [r14+0x10],0x2
  418068:	je     41808d <main@@Base+0x1126d>
  41806a:	mov    rdi,QWORD PTR [r14]
  41806d:	mov    edx,0x4
  418072:	mov    esi,0x1
  418077:	mov    ecx,0x4
  41807c:	call   41f040 <flatcc_builder_table_add@@Base>
  418081:	test   rax,rax
  418084:	je     4182a3 <main@@Base+0x11483>
  41808a:	mov    DWORD PTR [rax],r12d
  41808d:	mov    rbp,QWORD PTR [rsp+0x18]
  418092:	jmp    417c34 <main@@Base+0x10e14>
  418097:	mov    rdi,r14
  41809a:	mov    rsi,rbx
  41809d:	mov    rdx,r15
  4180a0:	mov    ecx,0xa
  4180a5:	jmp    4159e6 <main@@Base+0xebc6>
  4180aa:	mov    r13,r15
  4180ad:	cmp    DWORD PTR [r14+0x1c],0x0
  4180b2:	je     415cf9 <main@@Base+0xeed9>
  4180b8:	jmp    4182ab <main@@Base+0x1148b>
  4180bd:	mov    rdi,r14
  4180c0:	mov    rsi,rbx
  4180c3:	mov    rdx,r15
  4180c6:	mov    ecx,0xa
  4180cb:	call   422690 <flatcc_json_parser_set_error@@Base>
  4180d0:	mov    r13,rax
  4180d3:	cmp    DWORD PTR [r14+0x1c],0x0
  4180d8:	jne    418298 <main@@Base+0x11478>
  4180de:	mov    rdi,QWORD PTR [r14]
  4180e1:	call   41e6d0 <flatcc_builder_end_table@@Base>
  4180e6:	test   eax,eax
  4180e8:	je     418298 <main@@Base+0x11478>
  4180ee:	mov    ebx,eax
  4180f0:	mov    rdi,QWORD PTR [r14]
  4180f3:	xor    esi,esi
  4180f5:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  4180fa:	test   rax,rax
  4180fd:	je     418290 <main@@Base+0x11470>
  418103:	mov    DWORD PTR [rax],ebx
  418105:	jmp    415c1b <main@@Base+0xedfb>
  41810a:	cmp    al,0x7d
  41810c:	jne    418177 <main@@Base+0x11357>
  41810e:	lea    r13,[rbx+0x1]
  418112:	mov    rax,r15
  418115:	sub    rax,r13
  418118:	cmp    rax,0x2
  41811c:	jl     4181b3 <main@@Base+0x11393>
  418122:	cmp    BYTE PTR [r13+0x0],0x20
  418127:	jle    41818a <main@@Base+0x1136a>
  418129:	mov    r14,QWORD PTR [rsp+0x8]
  41812e:	mov    rbp,QWORD PTR [rsp+0x18]
  418133:	cmp    DWORD PTR [r14+0x1c],0x0
  418138:	je     415cf9 <main@@Base+0xeed9>
  41813e:	jmp    4182ab <main@@Base+0x1148b>
  418143:	mov    rdi,r14
  418146:	mov    rsi,r15
  418149:	jmp    41817d <main@@Base+0x1135d>
  41814b:	lea    r13,[rax+0x1]
  41814f:	mov    rcx,r15
  418152:	sub    rcx,r13
  418155:	cmp    rcx,0x2
  418159:	jl     4181b3 <main@@Base+0x11393>
  41815b:	cmp    BYTE PTR [r13+0x0],0x20
  418160:	jg     415cee <main@@Base+0xeece>
  418166:	jne    4181b3 <main@@Base+0x11393>
  418168:	cmp    BYTE PTR [rax+0x2],0x20
  41816c:	jle    4181b3 <main@@Base+0x11393>
  41816e:	add    rax,0x2
  418172:	jmp    415ceb <main@@Base+0xeecb>
  418177:	mov    rdi,r14
  41817a:	mov    rsi,rbx
  41817d:	mov    rdx,r15
  418180:	mov    ecx,0xa
  418185:	jmp    415ce6 <main@@Base+0xeec6>
  41818a:	mov    r14,QWORD PTR [rsp+0x8]
  41818f:	mov    rbp,QWORD PTR [rsp+0x18]
  418194:	jne    4181b3 <main@@Base+0x11393>
  418196:	cmp    BYTE PTR [rbx+0x2],0x20
  41819a:	jle    4181b3 <main@@Base+0x11393>
  41819c:	add    rbx,0x2
  4181a0:	mov    r13,rbx
  4181a3:	cmp    DWORD PTR [r14+0x1c],0x0
  4181a8:	je     415cf9 <main@@Base+0xeed9>
  4181ae:	jmp    4182ab <main@@Base+0x1148b>
  4181b3:	mov    rdi,r14
  4181b6:	mov    rsi,r13
  4181b9:	mov    rdx,r15
  4181bc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4181c1:	jmp    415ceb <main@@Base+0xeecb>
  4181c6:	mov    rbx,r15
  4181c9:	cmp    DWORD PTR [r14+0x1c],0x0
  4181ce:	jne    4153d2 <main@@Base+0xe5b2>
  4181d4:	mov    rdi,QWORD PTR [r14]
  4181d7:	call   41e6d0 <flatcc_builder_end_table@@Base>
  4181dc:	mov    DWORD PTR [rbp+0x0],eax
  4181df:	test   eax,eax
  4181e1:	jne    4153e8 <main@@Base+0xe5c8>
  4181e7:	jmp    4153d2 <main@@Base+0xe5b2>
  4181ec:	cmp    al,0x7d
  4181ee:	jne    41827d <main@@Base+0x1145d>
  4181f4:	lea    rbx,[r13+0x1]
  4181f8:	mov    rax,r15
  4181fb:	sub    rax,rbx
  4181fe:	cmp    rax,0x2
  418202:	jl     41826a <main@@Base+0x1144a>
  418204:	cmp    BYTE PTR [rbx],0x20
  418207:	jg     4153c7 <main@@Base+0xe5a7>
  41820d:	jne    41826a <main@@Base+0x1144a>
  41820f:	cmp    BYTE PTR [r13+0x2],0x20
  418214:	jle    41826a <main@@Base+0x1144a>
  418216:	add    r13,0x2
  41821a:	mov    rbx,r13
  41821d:	cmp    DWORD PTR [r14+0x1c],0x0
  418222:	jne    4153d2 <main@@Base+0xe5b2>
  418228:	jmp    4181d4 <main@@Base+0x113b4>
  41822a:	mov    rdi,r14
  41822d:	mov    rsi,r15
  418230:	jmp    418283 <main@@Base+0x11463>
  418232:	lea    rbx,[rsi+0x1]
  418236:	mov    rax,r15
  418239:	sub    rax,rbx
  41823c:	cmp    rax,0x2
  418240:	jl     41826a <main@@Base+0x1144a>
  418242:	cmp    BYTE PTR [rbx],0x20
  418245:	jg     4153c7 <main@@Base+0xe5a7>
  41824b:	jne    41826a <main@@Base+0x1144a>
  41824d:	cmp    BYTE PTR [rsi+0x2],0x20
  418251:	jle    41826a <main@@Base+0x1144a>
  418253:	add    rsi,0x2
  418257:	mov    rbx,rsi
  41825a:	cmp    DWORD PTR [r14+0x1c],0x0
  41825f:	jne    4153d2 <main@@Base+0xe5b2>
  418265:	jmp    4181d4 <main@@Base+0x113b4>
  41826a:	mov    rdi,r14
  41826d:	mov    rsi,rbx
  418270:	mov    rdx,r15
  418273:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418278:	jmp    4153c4 <main@@Base+0xe5a4>
  41827d:	mov    rdi,r14
  418280:	mov    rsi,r13
  418283:	mov    rdx,r15
  418286:	mov    ecx,0xa
  41828b:	jmp    4153bf <main@@Base+0xe59f>
  418290:	mov    rbx,r13
  418293:	jmp    4153d2 <main@@Base+0xe5b2>
  418298:	mov    rbx,r13
  41829b:	mov    rdi,r14
  41829e:	mov    rsi,rbx
  4182a1:	jmp    4182b1 <main@@Base+0x11491>
  4182a3:	mov    r13,rbx
  4182a6:	mov    r14,QWORD PTR [rsp+0x8]
  4182ab:	mov    rdi,r14
  4182ae:	mov    rsi,r13
  4182b1:	mov    rdx,r15
  4182b4:	mov    ecx,0x21
  4182b9:	call   422690 <flatcc_json_parser_set_error@@Base>
  4182be:	mov    rbx,rax
  4182c1:	jmp    4153d2 <main@@Base+0xe5b2>
  4182c6:	mov    rbx,rcx
  4182c9:	jmp    41829b <main@@Base+0x1147b>
  4182cb:	mov    r12,rax
  4182ce:	mov    r14,QWORD PTR [rsp+0x8]
  4182d3:	mov    rbx,r12
  4182d6:	jmp    41829b <main@@Base+0x1147b>
  4182d8:	mov    rbp,rax
  4182db:	mov    r14,QWORD PTR [rsp+0x8]
  4182e0:	mov    rbx,rbp
  4182e3:	jmp    41829b <main@@Base+0x1147b>
  4182e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4182ef:	nop
  4182f0:	push   rbp
  4182f1:	push   r15
  4182f3:	push   r14
  4182f5:	push   r13
  4182f7:	push   r12
  4182f9:	push   rbx
  4182fa:	sub    rsp,0x18
  4182fe:	mov    r13,rcx
  418301:	mov    r12,rdx
  418304:	mov    rbx,rsi
  418307:	mov    r14,rdi
  41830a:	mov    DWORD PTR [rcx],0x0
  418310:	mov    rdi,QWORD PTR [rdi]
  418313:	mov    esi,0xa
  418318:	call   41dcc0 <flatcc_builder_start_table@@Base>
  41831d:	test   eax,eax
  41831f:	je     418349 <main@@Base+0x11529>
  418321:	mov    rdi,r14
  418324:	mov    rsi,rbx
  418327:	mov    rdx,r12
  41832a:	mov    ecx,0x21
  41832f:	call   422690 <flatcc_json_parser_set_error@@Base>
  418334:	mov    rbx,rax
  418337:	mov    rax,rbx
  41833a:	add    rsp,0x18
  41833e:	pop    rbx
  41833f:	pop    r12
  418341:	pop    r13
  418343:	pop    r14
  418345:	pop    r15
  418347:	pop    rbp
  418348:	ret    
  418349:	lea    r8,[rsp+0x10]
  41834e:	mov    ecx,0x5
  418353:	mov    rdi,r14
  418356:	mov    rsi,rbx
  418359:	mov    rdx,r12
  41835c:	call   4248a0 <flatcc_json_parser_prepare_unions@@Base>
  418361:	cmp    rax,r12
  418364:	je     418321 <main@@Base+0x11501>
  418366:	cmp    rbx,r12
  418369:	je     418396 <main@@Base+0x11576>
  41836b:	cmp    BYTE PTR [rbx],0x7b
  41836e:	jne    418396 <main@@Base+0x11576>
  418370:	lea    rax,[rbx+0x1]
  418374:	mov    rcx,r12
  418377:	sub    rcx,rax
  41837a:	cmp    rcx,0x2
  41837e:	jl     4183e6 <main@@Base+0x115c6>
  418380:	cmp    BYTE PTR [rax],0x20
  418383:	jg     4183f4 <main@@Base+0x115d4>
  418385:	jne    4183e6 <main@@Base+0x115c6>
  418387:	cmp    BYTE PTR [rbx+0x2],0x20
  41838b:	jle    4183e6 <main@@Base+0x115c6>
  41838d:	add    rbx,0x2
  418391:	mov    rax,rbx
  418394:	jmp    4183f4 <main@@Base+0x115d4>
  418396:	mov    rdi,r14
  418399:	mov    rsi,rbx
  41839c:	mov    rdx,r12
  41839f:	mov    ecx,0x15
  4183a4:	call   422690 <flatcc_json_parser_set_error@@Base>
  4183a9:	mov    rbx,rax
  4183ac:	cmp    DWORD PTR [r14+0x1c],0x0
  4183b1:	jne    418321 <main@@Base+0x11501>
  4183b7:	mov    rcx,QWORD PTR [rsp+0x10]
  4183bc:	mov    rdi,r14
  4183bf:	mov    rsi,rbx
  4183c2:	mov    rdx,r12
  4183c5:	call   424920 <flatcc_json_parser_finalize_unions@@Base>
  4183ca:	mov    rbx,rax
  4183cd:	mov    rdi,QWORD PTR [r14]
  4183d0:	call   41e6d0 <flatcc_builder_end_table@@Base>
  4183d5:	mov    DWORD PTR [r13+0x0],eax
  4183d9:	test   eax,eax
  4183db:	jne    418337 <main@@Base+0x11517>
  4183e1:	jmp    418321 <main@@Base+0x11501>
  4183e6:	mov    rdi,r14
  4183e9:	mov    rsi,rax
  4183ec:	mov    rdx,r12
  4183ef:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4183f4:	mov    rsi,r12
  4183f7:	cmp    rax,r12
  4183fa:	je     418408 <main@@Base+0x115e8>
  4183fc:	cmp    BYTE PTR [rax],0x7d
  4183ff:	je     419650 <main@@Base+0x12830>
  418405:	mov    rsi,rax
  418408:	movabs rbx,0x7261637465720000
  418412:	mov    QWORD PTR [rsp+0x8],r13
  418417:	nop    WORD PTR [rax+rax*1+0x0]
  418420:	mov    r15,r12
  418423:	cmp    rsi,r12
  418426:	je     418448 <main@@Base+0x11628>
  418428:	cmp    BYTE PTR [rsi],0x22
  41842b:	jne    418435 <main@@Base+0x11615>
  41842d:	inc    rsi
  418430:	mov    r15,rsi
  418433:	jmp    418448 <main@@Base+0x11628>
  418435:	mov    rdi,r14
  418438:	mov    rdx,r12
  41843b:	mov    ecx,0x5
  418440:	call   422690 <flatcc_json_parser_set_error@@Base>
  418445:	mov    r15,rax
  418448:	mov    rcx,r12
  41844b:	sub    rcx,r15
  41844e:	cmp    rcx,0x8
  418452:	jb     418460 <main@@Base+0x11640>
  418454:	movbe  rax,QWORD PTR [r15]
  418459:	jmp    4184e8 <main@@Base+0x116c8>
  41845e:	xchg   ax,ax
  418460:	lea    rax,[rcx-0x1]
  418464:	cmp    rax,0x6
  418468:	ja     418e38 <main@@Base+0x12018>
  41846e:	lea    rdx,[rip+0x1a35b]        # 4327d0 <_IO_stdin_used@@Base+0x7d0>
  418475:	mov    rsi,rdx
  418478:	movsxd rdx,DWORD PTR [rdx+rax*4]
  41847c:	add    rdx,rsi
  41847f:	xor    r8d,r8d
  418482:	xor    eax,eax
  418484:	xor    esi,esi
  418486:	xor    edi,edi
  418488:	xor    ebx,ebx
  41848a:	xor    ebp,ebp
  41848c:	jmp    rdx
  41848e:	movsx  r8,BYTE PTR [r15+0x6]
  418493:	shl    r8,0x8
  418497:	movsx  rax,BYTE PTR [r15+0x5]
  41849c:	shl    rax,0x10
  4184a0:	or     rax,r8
  4184a3:	movsx  rsi,BYTE PTR [r15+0x4]
  4184a8:	shl    rsi,0x18
  4184ac:	or     rsi,rax
  4184af:	movsx  rdi,BYTE PTR [r15+0x3]
  4184b4:	shl    rdi,0x20
  4184b8:	or     rdi,rsi
  4184bb:	movsx  rbx,BYTE PTR [r15+0x2]
  4184c0:	shl    rbx,0x28
  4184c4:	or     rbx,rdi
  4184c7:	movsx  rbp,BYTE PTR [r15+0x1]
  4184cc:	shl    rbp,0x30
  4184d0:	or     rbp,rbx
  4184d3:	movzx  eax,BYTE PTR [r15]
  4184d7:	shl    rax,0x38
  4184db:	or     rax,rbp
  4184de:	movabs rbx,0x7261637465720000
  4184e8:	movabs rdx,0x6368617261637465
  4184f2:	cmp    rax,rdx
  4184f5:	jae    41853c <main@@Base+0x1171c>
  4184f7:	movabs rdx,0x63616d656f5f7479
  418501:	cmp    rax,rdx
  418504:	je     4185c2 <main@@Base+0x117a2>
  41850a:	movabs rdx,0x616e7461676f6e69
  418514:	cmp    rax,rdx
  418517:	jne    4185e1 <main@@Base+0x117c1>
  41851d:	lea    r13,[r15+0x8]
  418521:	mov    rax,r12
  418524:	sub    rax,r13
  418527:	cmp    rax,0x8
  41852b:	jb     418653 <main@@Base+0x11833>
  418531:	movbe  rcx,QWORD PTR [r13+0x0]
  418537:	jmp    4186dc <main@@Base+0x118bc>
  41853c:	movabs rcx,0x6d61696e5f636860
  418546:	cmp    rax,rcx
  418549:	ja     41857d <main@@Base+0x1175d>
  41854b:	movabs rcx,0x6368617261637465
  418555:	cmp    rax,rcx
  418558:	jne    418e38 <main@@Base+0x12018>
  41855e:	lea    r13,[r15+0x8]
  418562:	mov    rax,r12
  418565:	sub    rax,r13
  418568:	cmp    rax,0x8
  41856c:	jb     4188e6 <main@@Base+0x11ac6>
  418572:	movbe  rcx,QWORD PTR [r13+0x0]
  418578:	jmp    41896f <main@@Base+0x11b4f>
  41857d:	movabs rcx,0x736964655f6b6963
  418587:	cmp    rax,rcx
  41858a:	je     41874e <main@@Base+0x1192e>
  418590:	movabs rcx,0x6d61696e5f636861
  41859a:	cmp    rax,rcx
  41859d:	jne    418e38 <main@@Base+0x12018>
  4185a3:	lea    r13,[r15+0x8]
  4185a7:	mov    rax,r12
  4185aa:	sub    rax,r13
  4185ad:	cmp    rax,0x8
  4185b1:	jb     418a55 <main@@Base+0x11c35>
  4185b7:	movbe  rcx,QWORD PTR [r13+0x0]
  4185bd:	jmp    418ade <main@@Base+0x11cbe>
  4185c2:	lea    r13,[r15+0x8]
  4185c6:	mov    rax,r12
  4185c9:	sub    rax,r13
  4185cc:	cmp    rax,0x8
  4185d0:	jb     41876d <main@@Base+0x1194d>
  4185d6:	movbe  rcx,QWORD PTR [r13+0x0]
  4185dc:	jmp    4187f6 <main@@Base+0x119d6>
  4185e1:	shr    rax,0x18
  4185e5:	movabs rdx,0x63616d656f
  4185ef:	cmp    rax,rdx
  4185f2:	jne    418e38 <main@@Base+0x12018>
  4185f8:	mov    rax,r15
  4185fb:	cmp    rcx,0x6
  4185ff:	jl     419139 <main@@Base+0x12319>
  418605:	cmp    BYTE PTR [r15+0x5],0x22
  41860a:	mov    rax,r15
  41860d:	jne    419139 <main@@Base+0x12319>
  418613:	lea    rsi,[r15+0x6]
  418617:	mov    rax,r12
  41861a:	sub    rax,rsi
  41861d:	cmp    rax,0x2
  418621:	jl     418dc8 <main@@Base+0x11fa8>
  418627:	cmp    BYTE PTR [rsi],0x20
  41862a:	jg     418dd6 <main@@Base+0x11fb6>
  418630:	jne    418dc8 <main@@Base+0x11fa8>
  418636:	cmp    BYTE PTR [r15+0x7],0x20
  41863b:	jle    418dc8 <main@@Base+0x11fa8>
  418641:	lea    rsi,[r15+0x7]
  418645:	cmp    rsi,r12
  418648:	jne    418ddb <main@@Base+0x11fbb>
  41864e:	jmp    418e1f <main@@Base+0x11fff>
  418653:	lea    rcx,[rax-0x1]
  418657:	cmp    rcx,0x6
  41865b:	ja     419550 <main@@Base+0x12730>
  418661:	lea    rdx,[rip+0x1a210]        # 432878 <_IO_stdin_used@@Base+0x878>
  418668:	mov    rsi,rdx
  41866b:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41866f:	add    rdx,rsi
  418672:	xor    r8d,r8d
  418675:	xor    ecx,ecx
  418677:	xor    esi,esi
  418679:	xor    edi,edi
  41867b:	xor    ebp,ebp
  41867d:	xor    ebx,ebx
  41867f:	jmp    rdx
  418681:	movsx  r8,BYTE PTR [r15+0xe]
  418686:	shl    r8,0x8
  41868a:	movsx  rcx,BYTE PTR [r15+0xd]
  41868f:	shl    rcx,0x10
  418693:	or     rcx,r8
  418696:	movsx  rsi,BYTE PTR [r15+0xc]
  41869b:	shl    rsi,0x18
  41869f:	or     rsi,rcx
  4186a2:	movsx  rdi,BYTE PTR [r15+0xb]
  4186a7:	shl    rdi,0x20
  4186ab:	or     rdi,rsi
  4186ae:	movsx  rbp,BYTE PTR [r15+0xa]
  4186b3:	shl    rbp,0x28
  4186b7:	or     rbp,rdi
  4186ba:	movsx  rbx,BYTE PTR [r15+0x9]
  4186bf:	shl    rbx,0x30
  4186c3:	or     rbx,rbp
  4186c6:	movzx  ecx,BYTE PTR [r13+0x0]
  4186cb:	shl    rcx,0x38
  4186cf:	or     rcx,rbx
  4186d2:	movabs rbx,0x7261637465720000
  4186dc:	mov    rdx,rcx
  4186df:	shr    rdx,0x8
  4186e3:	movabs rsi,0x73745f74797065
  4186ed:	cmp    rdx,rsi
  4186f0:	jne    41886e <main@@Base+0x11a4e>
  4186f6:	cmp    rax,0x8
  4186fa:	jl     419550 <main@@Base+0x12730>
  418700:	cmp    BYTE PTR [r15+0xf],0x22
  418705:	jne    419550 <main@@Base+0x12730>
  41870b:	lea    rsi,[r15+0x10]
  41870f:	mov    rax,r12
  418712:	sub    rax,rsi
  418715:	cmp    rax,0x2
  418719:	jl     418e4b <main@@Base+0x1202b>
  41871f:	cmp    BYTE PTR [rsi],0x20
  418722:	jg     418e59 <main@@Base+0x12039>
  418728:	jne    418e4b <main@@Base+0x1202b>
  41872e:	cmp    BYTE PTR [r15+0x11],0x20
  418733:	jle    418e4b <main@@Base+0x1202b>
  418739:	add    r15,0x11
  41873d:	mov    rsi,r15
  418740:	cmp    rsi,r12
  418743:	jne    418e62 <main@@Base+0x12042>
  418749:	jmp    418f07 <main@@Base+0x120e7>
  41874e:	lea    r13,[r15+0x8]
  418752:	mov    rax,r12
  418755:	sub    rax,r13
  418758:	cmp    rax,0x8
  41875c:	jb     418b0d <main@@Base+0x11ced>
  418762:	movbe  rcx,QWORD PTR [r13+0x0]
  418768:	jmp    418b96 <main@@Base+0x11d76>
  41876d:	lea    rcx,[rax-0x1]
  418771:	cmp    rcx,0x6
  418775:	ja     419550 <main@@Base+0x12730>
  41877b:	lea    rdx,[rip+0x1a0da]        # 43285c <_IO_stdin_used@@Base+0x85c>
  418782:	mov    rsi,rdx
  418785:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418789:	add    rdx,rsi
  41878c:	xor    r8d,r8d
  41878f:	xor    ecx,ecx
  418791:	xor    esi,esi
  418793:	xor    edi,edi
  418795:	xor    ebp,ebp
  418797:	xor    ebx,ebx
  418799:	jmp    rdx
  41879b:	movsx  r8,BYTE PTR [r15+0xe]
  4187a0:	shl    r8,0x8
  4187a4:	movsx  rcx,BYTE PTR [r15+0xd]
  4187a9:	shl    rcx,0x10
  4187ad:	or     rcx,r8
  4187b0:	movsx  rsi,BYTE PTR [r15+0xc]
  4187b5:	shl    rsi,0x18
  4187b9:	or     rsi,rcx
  4187bc:	movsx  rdi,BYTE PTR [r15+0xb]
  4187c1:	shl    rdi,0x20
  4187c5:	or     rdi,rsi
  4187c8:	movsx  rbp,BYTE PTR [r15+0xa]
  4187cd:	shl    rbp,0x28
  4187d1:	or     rbp,rdi
  4187d4:	movsx  rbx,BYTE PTR [r15+0x9]
  4187d9:	shl    rbx,0x30
  4187dd:	or     rbx,rbp
  4187e0:	movzx  ecx,BYTE PTR [r13+0x0]
  4187e5:	shl    rcx,0x38
  4187e9:	or     rcx,rbx
  4187ec:	movabs rbx,0x7261637465720000
  4187f6:	movabs rdx,0xffff000000000000
  418800:	and    rcx,rdx
  418803:	movabs rdx,0x7065000000000000
  41880d:	cmp    rcx,rdx
  418810:	jne    419550 <main@@Base+0x12730>
  418816:	cmp    rax,0x3
  41881a:	jl     419550 <main@@Base+0x12730>
  418820:	cmp    BYTE PTR [r15+0xa],0x22
  418825:	jne    419550 <main@@Base+0x12730>
  41882b:	lea    rsi,[r15+0xb]
  41882f:	mov    rax,r12
  418832:	sub    rax,rsi
  418835:	cmp    rax,0x2
  418839:	jl     418ead <main@@Base+0x1208d>
  41883f:	cmp    BYTE PTR [rsi],0x20
  418842:	jg     418ebb <main@@Base+0x1209b>
  418848:	jne    418ead <main@@Base+0x1208d>
  41884e:	cmp    BYTE PTR [r15+0xc],0x20
  418853:	jle    418ead <main@@Base+0x1208d>
  418859:	add    r15,0xc
  41885d:	mov    rsi,r15
  418860:	cmp    rsi,r12
  418863:	jne    418ec0 <main@@Base+0x120a0>
  418869:	jmp    418f25 <main@@Base+0x12105>
  41886e:	movabs rdx,0xffff000000000000
  418878:	and    rcx,rdx
  41887b:	movabs rdx,0x7374000000000000
  418885:	cmp    rcx,rdx
  418888:	jne    419550 <main@@Base+0x12730>
  41888e:	cmp    rax,0x3
  418892:	jl     419550 <main@@Base+0x12730>
  418898:	cmp    BYTE PTR [r15+0xa],0x22
  41889d:	jne    419550 <main@@Base+0x12730>
  4188a3:	lea    rsi,[r15+0xb]
  4188a7:	mov    rax,r12
  4188aa:	sub    rax,rsi
  4188ad:	cmp    rax,0x2
  4188b1:	jl     418fbb <main@@Base+0x1219b>
  4188b7:	cmp    BYTE PTR [rsi],0x20
  4188ba:	jg     418fc9 <main@@Base+0x121a9>
  4188c0:	jne    418fbb <main@@Base+0x1219b>
  4188c6:	cmp    BYTE PTR [r15+0xc],0x20
  4188cb:	jle    418fbb <main@@Base+0x1219b>
  4188d1:	add    r15,0xc
  4188d5:	mov    rsi,r15
  4188d8:	cmp    rsi,r12
  4188db:	jne    418fd2 <main@@Base+0x121b2>
  4188e1:	jmp    419077 <main@@Base+0x12257>
  4188e6:	lea    rcx,[rax-0x1]
  4188ea:	cmp    rcx,0x6
  4188ee:	ja     419550 <main@@Base+0x12730>
  4188f4:	lea    rdx,[rip+0x19f45]        # 432840 <_IO_stdin_used@@Base+0x840>
  4188fb:	mov    rsi,rdx
  4188fe:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418902:	add    rdx,rsi
  418905:	xor    r8d,r8d
  418908:	xor    ecx,ecx
  41890a:	xor    esi,esi
  41890c:	xor    edi,edi
  41890e:	xor    ebp,ebp
  418910:	xor    ebx,ebx
  418912:	jmp    rdx
  418914:	movsx  r8,BYTE PTR [r15+0xe]
  418919:	shl    r8,0x8
  41891d:	movsx  rcx,BYTE PTR [r15+0xd]
  418922:	shl    rcx,0x10
  418926:	or     rcx,r8
  418929:	movsx  rsi,BYTE PTR [r15+0xc]
  41892e:	shl    rsi,0x18
  418932:	or     rsi,rcx
  418935:	movsx  rdi,BYTE PTR [r15+0xb]
  41893a:	shl    rdi,0x20
  41893e:	or     rdi,rsi
  418941:	movsx  rbp,BYTE PTR [r15+0xa]
  418946:	shl    rbp,0x28
  41894a:	or     rbp,rdi
  41894d:	movsx  rbx,BYTE PTR [r15+0x9]
  418952:	shl    rbx,0x30
  418956:	or     rbx,rbp
  418959:	movzx  ecx,BYTE PTR [r13+0x0]
  41895e:	shl    rcx,0x38
  418962:	or     rcx,rbx
  418965:	movabs rbx,0x7261637465720000
  41896f:	mov    rdx,rcx
  418972:	shr    rdx,0x8
  418976:	movabs rsi,0x72735f74797065
  418980:	cmp    rdx,rsi
  418983:	jne    4189dd <main@@Base+0x11bbd>
  418985:	cmp    rax,0x8
  418989:	jl     419550 <main@@Base+0x12730>
  41898f:	cmp    BYTE PTR [r15+0xf],0x22
  418994:	jne    419550 <main@@Base+0x12730>
  41899a:	lea    rsi,[r15+0x10]
  41899e:	mov    rax,r12
  4189a1:	sub    rax,rsi
  4189a4:	cmp    rax,0x2
  4189a8:	jl     418f43 <main@@Base+0x12123>
  4189ae:	cmp    BYTE PTR [rsi],0x20
  4189b1:	jg     418f51 <main@@Base+0x12131>
  4189b7:	jne    418f43 <main@@Base+0x12123>
  4189bd:	cmp    BYTE PTR [r15+0x11],0x20
  4189c2:	jle    418f43 <main@@Base+0x12123>
  4189c8:	add    r15,0x11
  4189cc:	mov    rsi,r15
  4189cf:	cmp    rsi,r12
  4189d2:	jne    418f56 <main@@Base+0x12136>
  4189d8:	jmp    418f9d <main@@Base+0x1217d>
  4189dd:	movabs rdx,0xffff000000000000
  4189e7:	and    rcx,rdx
  4189ea:	movabs rdx,0x7273000000000000
  4189f4:	cmp    rcx,rdx
  4189f7:	jne    419550 <main@@Base+0x12730>
  4189fd:	cmp    rax,0x3
  418a01:	jl     419550 <main@@Base+0x12730>
  418a07:	cmp    BYTE PTR [r15+0xa],0x22
  418a0c:	jne    419550 <main@@Base+0x12730>
  418a12:	lea    rsi,[r15+0xb]
  418a16:	mov    rax,r12
  418a19:	sub    rax,rsi
  418a1c:	cmp    rax,0x2
  418a20:	jl     4190b3 <main@@Base+0x12293>
  418a26:	cmp    BYTE PTR [rsi],0x20
  418a29:	jg     4190c1 <main@@Base+0x122a1>
  418a2f:	jne    4190b3 <main@@Base+0x12293>
  418a35:	cmp    BYTE PTR [r15+0xc],0x20
  418a3a:	jle    4190b3 <main@@Base+0x12293>
  418a40:	add    r15,0xc
  418a44:	mov    rsi,r15
  418a47:	cmp    rsi,r12
  418a4a:	jne    4190c6 <main@@Base+0x122a6>
  418a50:	jmp    41910d <main@@Base+0x122ed>
  418a55:	lea    rcx,[rax-0x1]
  418a59:	cmp    rcx,0x6
  418a5d:	ja     419550 <main@@Base+0x12730>
  418a63:	lea    rdx,[rip+0x19d9e]        # 432808 <_IO_stdin_used@@Base+0x808>
  418a6a:	mov    rsi,rdx
  418a6d:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418a71:	add    rdx,rsi
  418a74:	xor    r8d,r8d
  418a77:	xor    ecx,ecx
  418a79:	xor    esi,esi
  418a7b:	xor    edi,edi
  418a7d:	xor    ebp,ebp
  418a7f:	xor    ebx,ebx
  418a81:	jmp    rdx
  418a83:	movsx  r8,BYTE PTR [r15+0xe]
  418a88:	shl    r8,0x8
  418a8c:	movsx  rcx,BYTE PTR [r15+0xd]
  418a91:	shl    rcx,0x10
  418a95:	or     rcx,r8
  418a98:	movsx  rsi,BYTE PTR [r15+0xc]
  418a9d:	shl    rsi,0x18
  418aa1:	or     rsi,rcx
  418aa4:	movsx  rdi,BYTE PTR [r15+0xb]
  418aa9:	shl    rdi,0x20
  418aad:	or     rdi,rsi
  418ab0:	movsx  rbp,BYTE PTR [r15+0xa]
  418ab5:	shl    rbp,0x28
  418ab9:	or     rbp,rdi
  418abc:	movsx  rbx,BYTE PTR [r15+0x9]
  418ac1:	shl    rbx,0x30
  418ac5:	or     rbx,rbp
  418ac8:	movzx  ecx,BYTE PTR [r13+0x0]
  418acd:	shl    rcx,0x38
  418ad1:	or     rcx,rbx
  418ad4:	movabs rbx,0x7261637465720000
  418ade:	lea    rdx,[rbx+0x5f74]
  418ae5:	cmp    rcx,rdx
  418ae8:	jne    418c08 <main@@Base+0x11de8>
  418aee:	lea    r13,[r15+0x10]
  418af2:	mov    rax,r12
  418af5:	sub    rax,r13
  418af8:	cmp    rax,0x8
  418afc:	jb     418cd6 <main@@Base+0x11eb6>
  418b02:	movbe  rcx,QWORD PTR [r13+0x0]
  418b08:	jmp    418d5f <main@@Base+0x11f3f>
  418b0d:	lea    rcx,[rax-0x1]
  418b11:	cmp    rcx,0x6
  418b15:	ja     419550 <main@@Base+0x12730>
  418b1b:	lea    rdx,[rip+0x19cca]        # 4327ec <_IO_stdin_used@@Base+0x7ec>
  418b22:	mov    rsi,rdx
  418b25:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418b29:	add    rdx,rsi
  418b2c:	xor    r8d,r8d
  418b2f:	xor    ecx,ecx
  418b31:	xor    esi,esi
  418b33:	xor    edi,edi
  418b35:	xor    ebp,ebp
  418b37:	xor    ebx,ebx
  418b39:	jmp    rdx
  418b3b:	movsx  r8,BYTE PTR [r15+0xe]
  418b40:	shl    r8,0x8
  418b44:	movsx  rcx,BYTE PTR [r15+0xd]
  418b49:	shl    rcx,0x10
  418b4d:	or     rcx,r8
  418b50:	movsx  rsi,BYTE PTR [r15+0xc]
  418b55:	shl    rsi,0x18
  418b59:	or     rsi,rcx
  418b5c:	movsx  rdi,BYTE PTR [r15+0xb]
  418b61:	shl    rdi,0x20
  418b65:	or     rdi,rsi
  418b68:	movsx  rbp,BYTE PTR [r15+0xa]
  418b6d:	shl    rbp,0x28
  418b71:	or     rbp,rdi
  418b74:	movsx  rbx,BYTE PTR [r15+0x9]
  418b79:	shl    rbx,0x30
  418b7d:	or     rbx,rbp
  418b80:	movzx  ecx,BYTE PTR [r13+0x0]
  418b85:	shl    rcx,0x38
  418b89:	or     rcx,rbx
  418b8c:	movabs rbx,0x7261637465720000
  418b96:	mov    rdx,rcx
  418b99:	shr    rdx,0x10
  418b9d:	movabs rsi,0x6b5f74797065
  418ba7:	cmp    rdx,rsi
  418baa:	jne    418c70 <main@@Base+0x11e50>
  418bb0:	cmp    rax,0x7
  418bb4:	jl     419550 <main@@Base+0x12730>
  418bba:	cmp    BYTE PTR [r15+0xe],0x22
  418bbf:	jne    419550 <main@@Base+0x12730>
  418bc5:	lea    rsi,[r15+0xf]
  418bc9:	mov    rax,r12
  418bcc:	sub    rax,rsi
  418bcf:	cmp    rax,0x2
  418bd3:	jl     41901d <main@@Base+0x121fd>
  418bd9:	cmp    BYTE PTR [rsi],0x20
  418bdc:	jg     41902b <main@@Base+0x1220b>
  418be2:	jne    41901d <main@@Base+0x121fd>
  418be8:	cmp    BYTE PTR [r15+0x10],0x20
  418bed:	jle    41901d <main@@Base+0x121fd>
  418bf3:	add    r15,0x10
  418bf7:	mov    rsi,r15
  418bfa:	cmp    rsi,r12
  418bfd:	jne    419030 <main@@Base+0x12210>
  418c03:	jmp    419095 <main@@Base+0x12275>
  418c08:	and    rcx,0xffffffffffff0000
  418c0f:	cmp    rcx,rbx
  418c12:	jne    419550 <main@@Base+0x12730>
  418c18:	cmp    rax,0x7
  418c1c:	jl     419550 <main@@Base+0x12730>
  418c22:	cmp    BYTE PTR [r15+0xe],0x22
  418c27:	jne    419550 <main@@Base+0x12730>
  418c2d:	lea    rsi,[r15+0xf]
  418c31:	mov    rax,r12
  418c34:	sub    rax,rsi
  418c37:	cmp    rax,0x2
  418c3b:	jl     4191fd <main@@Base+0x123dd>
  418c41:	cmp    BYTE PTR [rsi],0x20
  418c44:	jg     41920b <main@@Base+0x123eb>
  418c4a:	jne    4191fd <main@@Base+0x123dd>
  418c50:	cmp    BYTE PTR [r15+0x10],0x20
  418c55:	jle    4191fd <main@@Base+0x123dd>
  418c5b:	add    r15,0x10
  418c5f:	mov    rsi,r15
  418c62:	cmp    rsi,r12
  418c65:	jne    419214 <main@@Base+0x123f4>
  418c6b:	jmp    4192b9 <main@@Base+0x12499>
  418c70:	shr    rcx,0x38
  418c74:	cmp    rcx,0x6b
  418c78:	jne    419550 <main@@Base+0x12730>
  418c7e:	cmp    rax,0x2
  418c82:	jl     419550 <main@@Base+0x12730>
  418c88:	cmp    BYTE PTR [r15+0x9],0x22
  418c8d:	jne    419550 <main@@Base+0x12730>
  418c93:	lea    rsi,[r15+0xa]
  418c97:	mov    rax,r12
  418c9a:	sub    rax,rsi
  418c9d:	cmp    rax,0x2
  418ca1:	jl     41925f <main@@Base+0x1243f>
  418ca7:	cmp    BYTE PTR [rsi],0x20
  418caa:	jg     41926d <main@@Base+0x1244d>
  418cb0:	jne    41925f <main@@Base+0x1243f>
  418cb6:	cmp    BYTE PTR [r15+0xb],0x20
  418cbb:	jle    41925f <main@@Base+0x1243f>
  418cc1:	add    r15,0xb
  418cc5:	mov    rsi,r15
  418cc8:	cmp    rsi,r12
  418ccb:	jne    419272 <main@@Base+0x12452>
  418cd1:	jmp    4192d7 <main@@Base+0x124b7>
  418cd6:	lea    rcx,[rax-0x1]
  418cda:	cmp    rcx,0x6
  418cde:	ja     419550 <main@@Base+0x12730>
  418ce4:	lea    rdx,[rip+0x19b39]        # 432824 <_IO_stdin_used@@Base+0x824>
  418ceb:	mov    rsi,rdx
  418cee:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418cf2:	add    rdx,rsi
  418cf5:	xor    r8d,r8d
  418cf8:	xor    ecx,ecx
  418cfa:	xor    esi,esi
  418cfc:	xor    edi,edi
  418cfe:	xor    ebp,ebp
  418d00:	xor    ebx,ebx
  418d02:	jmp    rdx
  418d04:	movsx  r8,BYTE PTR [r15+0x16]
  418d09:	shl    r8,0x8
  418d0d:	movsx  rcx,BYTE PTR [r15+0x15]
  418d12:	shl    rcx,0x10
  418d16:	or     rcx,r8
  418d19:	movsx  rsi,BYTE PTR [r15+0x14]
  418d1e:	shl    rsi,0x18
  418d22:	or     rsi,rcx
  418d25:	movsx  rdi,BYTE PTR [r15+0x13]
  418d2a:	shl    rdi,0x20
  418d2e:	or     rdi,rsi
  418d31:	movsx  rbp,BYTE PTR [r15+0x12]
  418d36:	shl    rbp,0x28
  418d3a:	or     rbp,rdi
  418d3d:	movsx  rbx,BYTE PTR [r15+0x11]
  418d42:	shl    rbx,0x30
  418d46:	or     rbx,rbp
  418d49:	movzx  ecx,BYTE PTR [r13+0x0]
  418d4e:	shl    rcx,0x38
  418d52:	or     rcx,rbx
  418d55:	movabs rbx,0x7261637465720000
  418d5f:	shr    rcx,0x28
  418d63:	cmp    rcx,0x797065
  418d6a:	jne    419550 <main@@Base+0x12730>
  418d70:	cmp    rax,0x4
  418d74:	jl     419550 <main@@Base+0x12730>
  418d7a:	cmp    BYTE PTR [r15+0x13],0x22
  418d7f:	jne    419550 <main@@Base+0x12730>
  418d85:	lea    rsi,[r15+0x14]
  418d89:	mov    rax,r12
  418d8c:	sub    rax,rsi
  418d8f:	cmp    rax,0x2
  418d93:	jl     4192f5 <main@@Base+0x124d5>
  418d99:	cmp    BYTE PTR [rsi],0x20
  418d9c:	jg     419303 <main@@Base+0x124e3>
  418da2:	jne    4192f5 <main@@Base+0x124d5>
  418da8:	cmp    BYTE PTR [r15+0x15],0x20
  418dad:	jle    4192f5 <main@@Base+0x124d5>
  418db3:	add    r15,0x15
  418db7:	mov    rsi,r15
  418dba:	cmp    rsi,r12
  418dbd:	jne    41930c <main@@Base+0x124ec>
  418dc3:	jmp    4193b1 <main@@Base+0x12591>
  418dc8:	mov    rdi,r14
  418dcb:	mov    rdx,r12
  418dce:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418dd3:	mov    rsi,rax
  418dd6:	cmp    rsi,r12
  418dd9:	je     418e1f <main@@Base+0x11fff>
  418ddb:	cmp    BYTE PTR [rsi],0x3a
  418dde:	jne    418e1f <main@@Base+0x11fff>
  418de0:	lea    rax,[rsi+0x1]
  418de4:	mov    rcx,r12
  418de7:	sub    rcx,rax
  418dea:	cmp    rcx,0x2
  418dee:	jl     41912b <main@@Base+0x1230b>
  418df4:	cmp    BYTE PTR [rax],0x20
  418df7:	jg     419139 <main@@Base+0x12319>
  418dfd:	jne    41912b <main@@Base+0x1230b>
  418e03:	cmp    BYTE PTR [rsi+0x2],0x20
  418e07:	jle    41912b <main@@Base+0x1230b>
  418e0d:	add    rsi,0x2
  418e11:	mov    rax,rsi
  418e14:	cmp    r15,rax
  418e17:	jne    419142 <main@@Base+0x12322>
  418e1d:	jmp    418e38 <main@@Base+0x12018>
  418e1f:	mov    rdi,r14
  418e22:	mov    rdx,r12
  418e25:	mov    ecx,0x4
  418e2a:	call   422690 <flatcc_json_parser_set_error@@Base>
  418e2f:	cmp    r15,rax
  418e32:	jne    419142 <main@@Base+0x12322>
  418e38:	mov    rdi,r14
  418e3b:	mov    rsi,r15
  418e3e:	mov    rdx,r12
  418e41:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  418e46:	jmp    419563 <main@@Base+0x12743>
  418e4b:	mov    rdi,r14
  418e4e:	mov    rdx,r12
  418e51:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418e56:	mov    rsi,rax
  418e59:	cmp    rsi,r12
  418e5c:	je     418f07 <main@@Base+0x120e7>
  418e62:	cmp    BYTE PTR [rsi],0x3a
  418e65:	jne    418f07 <main@@Base+0x120e7>
  418e6b:	lea    rax,[rsi+0x1]
  418e6f:	mov    rcx,r12
  418e72:	sub    rcx,rax
  418e75:	cmp    rcx,0x2
  418e79:	jl     419175 <main@@Base+0x12355>
  418e7f:	cmp    BYTE PTR [rax],0x20
  418e82:	jg     419183 <main@@Base+0x12363>
  418e88:	jne    419175 <main@@Base+0x12355>
  418e8e:	cmp    BYTE PTR [rsi+0x2],0x20
  418e92:	jle    419175 <main@@Base+0x12355>
  418e98:	add    rsi,0x2
  418e9c:	mov    rax,rsi
  418e9f:	cmp    r13,rax
  418ea2:	jne    41918c <main@@Base+0x1236c>
  418ea8:	jmp    419550 <main@@Base+0x12730>
  418ead:	mov    rdi,r14
  418eb0:	mov    rdx,r12
  418eb3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418eb8:	mov    rsi,rax
  418ebb:	cmp    rsi,r12
  418ebe:	je     418f25 <main@@Base+0x12105>
  418ec0:	cmp    BYTE PTR [rsi],0x3a
  418ec3:	jne    418f25 <main@@Base+0x12105>
  418ec5:	lea    rax,[rsi+0x1]
  418ec9:	mov    rcx,r12
  418ecc:	sub    rcx,rax
  418ecf:	cmp    rcx,0x2
  418ed3:	jl     4191b9 <main@@Base+0x12399>
  418ed9:	cmp    BYTE PTR [rax],0x20
  418edc:	jg     4191c7 <main@@Base+0x123a7>
  418ee2:	jne    4191b9 <main@@Base+0x12399>
  418ee8:	cmp    BYTE PTR [rsi+0x2],0x20
  418eec:	jle    4191b9 <main@@Base+0x12399>
  418ef2:	add    rsi,0x2
  418ef6:	mov    rax,rsi
  418ef9:	cmp    r13,rax
  418efc:	jne    4191d0 <main@@Base+0x123b0>
  418f02:	jmp    419550 <main@@Base+0x12730>
  418f07:	mov    rdi,r14
  418f0a:	mov    rdx,r12
  418f0d:	mov    ecx,0x4
  418f12:	call   422690 <flatcc_json_parser_set_error@@Base>
  418f17:	cmp    r13,rax
  418f1a:	jne    41918c <main@@Base+0x1236c>
  418f20:	jmp    419550 <main@@Base+0x12730>
  418f25:	mov    rdi,r14
  418f28:	mov    rdx,r12
  418f2b:	mov    ecx,0x4
  418f30:	call   422690 <flatcc_json_parser_set_error@@Base>
  418f35:	cmp    r13,rax
  418f38:	jne    4191d0 <main@@Base+0x123b0>
  418f3e:	jmp    419550 <main@@Base+0x12730>
  418f43:	mov    rdi,r14
  418f46:	mov    rdx,r12
  418f49:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418f4e:	mov    rsi,rax
  418f51:	cmp    rsi,r12
  418f54:	je     418f9d <main@@Base+0x1217d>
  418f56:	cmp    BYTE PTR [rsi],0x3a
  418f59:	jne    418f9d <main@@Base+0x1217d>
  418f5b:	lea    rax,[rsi+0x1]
  418f5f:	mov    rcx,r12
  418f62:	sub    rcx,rax
  418f65:	cmp    rcx,0x2
  418f69:	jl     419357 <main@@Base+0x12537>
  418f6f:	cmp    BYTE PTR [rax],0x20
  418f72:	jg     419365 <main@@Base+0x12545>
  418f78:	jne    419357 <main@@Base+0x12537>
  418f7e:	cmp    BYTE PTR [rsi+0x2],0x20
  418f82:	jle    419357 <main@@Base+0x12537>
  418f88:	add    rsi,0x2
  418f8c:	mov    rax,rsi
  418f8f:	cmp    r13,rax
  418f92:	jne    41936e <main@@Base+0x1254e>
  418f98:	jmp    419550 <main@@Base+0x12730>
  418f9d:	mov    rdi,r14
  418fa0:	mov    rdx,r12
  418fa3:	mov    ecx,0x4
  418fa8:	call   422690 <flatcc_json_parser_set_error@@Base>
  418fad:	cmp    r13,rax
  418fb0:	jne    41936e <main@@Base+0x1254e>
  418fb6:	jmp    419550 <main@@Base+0x12730>
  418fbb:	mov    rdi,r14
  418fbe:	mov    rdx,r12
  418fc1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  418fc6:	mov    rsi,rax
  418fc9:	cmp    rsi,r12
  418fcc:	je     419077 <main@@Base+0x12257>
  418fd2:	cmp    BYTE PTR [rsi],0x3a
  418fd5:	jne    419077 <main@@Base+0x12257>
  418fdb:	lea    rax,[rsi+0x1]
  418fdf:	mov    rcx,r12
  418fe2:	sub    rcx,rax
  418fe5:	cmp    rcx,0x2
  418fe9:	jl     4193cf <main@@Base+0x125af>
  418fef:	cmp    BYTE PTR [rax],0x20
  418ff2:	jg     4193dd <main@@Base+0x125bd>
  418ff8:	jne    4193cf <main@@Base+0x125af>
  418ffe:	cmp    BYTE PTR [rsi+0x2],0x20
  419002:	jle    4193cf <main@@Base+0x125af>
  419008:	add    rsi,0x2
  41900c:	mov    rax,rsi
  41900f:	cmp    r13,rax
  419012:	jne    4193e6 <main@@Base+0x125c6>
  419018:	jmp    419550 <main@@Base+0x12730>
  41901d:	mov    rdi,r14
  419020:	mov    rdx,r12
  419023:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419028:	mov    rsi,rax
  41902b:	cmp    rsi,r12
  41902e:	je     419095 <main@@Base+0x12275>
  419030:	cmp    BYTE PTR [rsi],0x3a
  419033:	jne    419095 <main@@Base+0x12275>
  419035:	lea    rax,[rsi+0x1]
  419039:	mov    rcx,r12
  41903c:	sub    rcx,rax
  41903f:	cmp    rcx,0x2
  419043:	jl     419408 <main@@Base+0x125e8>
  419049:	cmp    BYTE PTR [rax],0x20
  41904c:	jg     419416 <main@@Base+0x125f6>
  419052:	jne    419408 <main@@Base+0x125e8>
  419058:	cmp    BYTE PTR [rsi+0x2],0x20
  41905c:	jle    419408 <main@@Base+0x125e8>
  419062:	add    rsi,0x2
  419066:	mov    rax,rsi
  419069:	cmp    r13,rax
  41906c:	jne    41941f <main@@Base+0x125ff>
  419072:	jmp    419550 <main@@Base+0x12730>
  419077:	mov    rdi,r14
  41907a:	mov    rdx,r12
  41907d:	mov    ecx,0x4
  419082:	call   422690 <flatcc_json_parser_set_error@@Base>
  419087:	cmp    r13,rax
  41908a:	jne    4193e6 <main@@Base+0x125c6>
  419090:	jmp    419550 <main@@Base+0x12730>
  419095:	mov    rdi,r14
  419098:	mov    rdx,r12
  41909b:	mov    ecx,0x4
  4190a0:	call   422690 <flatcc_json_parser_set_error@@Base>
  4190a5:	cmp    r13,rax
  4190a8:	jne    41941f <main@@Base+0x125ff>
  4190ae:	jmp    419550 <main@@Base+0x12730>
  4190b3:	mov    rdi,r14
  4190b6:	mov    rdx,r12
  4190b9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4190be:	mov    rsi,rax
  4190c1:	cmp    rsi,r12
  4190c4:	je     41910d <main@@Base+0x122ed>
  4190c6:	cmp    BYTE PTR [rsi],0x3a
  4190c9:	jne    41910d <main@@Base+0x122ed>
  4190cb:	lea    rax,[rsi+0x1]
  4190cf:	mov    rcx,r12
  4190d2:	sub    rcx,rax
  4190d5:	cmp    rcx,0x2
  4190d9:	jl     41944c <main@@Base+0x1262c>
  4190df:	cmp    BYTE PTR [rax],0x20
  4190e2:	jg     41945a <main@@Base+0x1263a>
  4190e8:	jne    41944c <main@@Base+0x1262c>
  4190ee:	cmp    BYTE PTR [rsi+0x2],0x20
  4190f2:	jle    41944c <main@@Base+0x1262c>
  4190f8:	add    rsi,0x2
  4190fc:	mov    rax,rsi
  4190ff:	cmp    r13,rax
  419102:	jne    419463 <main@@Base+0x12643>
  419108:	jmp    419550 <main@@Base+0x12730>
  41910d:	mov    rdi,r14
  419110:	mov    rdx,r12
  419113:	mov    ecx,0x4
  419118:	call   422690 <flatcc_json_parser_set_error@@Base>
  41911d:	cmp    r13,rax
  419120:	jne    419463 <main@@Base+0x12643>
  419126:	jmp    419550 <main@@Base+0x12730>
  41912b:	mov    rdi,r14
  41912e:	mov    rsi,rax
  419131:	mov    rdx,r12
  419134:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419139:	cmp    r15,rax
  41913c:	je     418e38 <main@@Base+0x12018>
  419142:	mov    r9,QWORD PTR [rsp+0x10]
  419147:	sub    rsp,0x8
  41914b:	mov    ecx,0x3
  419150:	mov    rdi,r14
  419153:	mov    rsi,rax
  419156:	mov    rdx,r12
  419159:	mov    r8d,0x7
  41915f:	lea    rax,[rip+0x6ca]        # 419830 <main@@Base+0x12a10>
  419166:	push   rax
  419167:	call   424990 <flatcc_json_parser_union@@Base>
  41916c:	add    rsp,0x10
  419170:	jmp    419563 <main@@Base+0x12743>
  419175:	mov    rdi,r14
  419178:	mov    rsi,rax
  41917b:	mov    rdx,r12
  41917e:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419183:	cmp    r13,rax
  419186:	je     419550 <main@@Base+0x12730>
  41918c:	mov    r9,QWORD PTR [rsp+0x10]
  419191:	mov    ecx,0x1
  419196:	mov    rdi,r14
  419199:	mov    rsi,rax
  41919c:	mov    rdx,r12
  41919f:	mov    r8d,0x3
  4191a5:	lea    rax,[rip+0x684]        # 419830 <main@@Base+0x12a10>
  4191ac:	push   rax
  4191ad:	lea    rax,[rip+0x2748c]        # 440640 <__data_start@@Base+0x590>
  4191b4:	jmp    419542 <main@@Base+0x12722>
  4191b9:	mov    rdi,r14
  4191bc:	mov    rsi,rax
  4191bf:	mov    rdx,r12
  4191c2:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4191c7:	cmp    r13,rax
  4191ca:	je     419550 <main@@Base+0x12730>
  4191d0:	mov    r9,QWORD PTR [rsp+0x10]
  4191d5:	mov    ecx,0x3
  4191da:	mov    rdi,r14
  4191dd:	mov    rsi,rax
  4191e0:	mov    rdx,r12
  4191e3:	mov    r8d,0x7
  4191e9:	lea    rax,[rip+0x640]        # 419830 <main@@Base+0x12a10>
  4191f0:	push   rax
  4191f1:	lea    rax,[rip+0x27468]        # 440660 <__data_start@@Base+0x5b0>
  4191f8:	jmp    419542 <main@@Base+0x12722>
  4191fd:	mov    rdi,r14
  419200:	mov    rdx,r12
  419203:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419208:	mov    rsi,rax
  41920b:	cmp    rsi,r12
  41920e:	je     4192b9 <main@@Base+0x12499>
  419214:	cmp    BYTE PTR [rsi],0x3a
  419217:	jne    4192b9 <main@@Base+0x12499>
  41921d:	lea    rax,[rsi+0x1]
  419221:	mov    rcx,r12
  419224:	sub    rcx,rax
  419227:	cmp    rcx,0x2
  41922b:	jl     419492 <main@@Base+0x12672>
  419231:	cmp    BYTE PTR [rax],0x20
  419234:	jg     4194a0 <main@@Base+0x12680>
  41923a:	jne    419492 <main@@Base+0x12672>
  419240:	cmp    BYTE PTR [rsi+0x2],0x20
  419244:	jle    419492 <main@@Base+0x12672>
  41924a:	add    rsi,0x2
  41924e:	mov    rax,rsi
  419251:	cmp    r13,rax
  419254:	jne    4194a9 <main@@Base+0x12689>
  41925a:	jmp    419550 <main@@Base+0x12730>
  41925f:	mov    rdi,r14
  419262:	mov    rdx,r12
  419265:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41926a:	mov    rsi,rax
  41926d:	cmp    rsi,r12
  419270:	je     4192d7 <main@@Base+0x124b7>
  419272:	cmp    BYTE PTR [rsi],0x3a
  419275:	jne    4192d7 <main@@Base+0x124b7>
  419277:	lea    rax,[rsi+0x1]
  41927b:	mov    rcx,r12
  41927e:	sub    rcx,rax
  419281:	cmp    rcx,0x2
  419285:	jl     4194c8 <main@@Base+0x126a8>
  41928b:	cmp    BYTE PTR [rax],0x20
  41928e:	jg     4194d6 <main@@Base+0x126b6>
  419294:	jne    4194c8 <main@@Base+0x126a8>
  41929a:	cmp    BYTE PTR [rsi+0x2],0x20
  41929e:	jle    4194c8 <main@@Base+0x126a8>
  4192a4:	add    rsi,0x2
  4192a8:	mov    rax,rsi
  4192ab:	cmp    r13,rax
  4192ae:	jne    4194db <main@@Base+0x126bb>
  4192b4:	jmp    419550 <main@@Base+0x12730>
  4192b9:	mov    rdi,r14
  4192bc:	mov    rdx,r12
  4192bf:	mov    ecx,0x4
  4192c4:	call   422690 <flatcc_json_parser_set_error@@Base>
  4192c9:	cmp    r13,rax
  4192cc:	jne    4194a9 <main@@Base+0x12689>
  4192d2:	jmp    419550 <main@@Base+0x12730>
  4192d7:	mov    rdi,r14
  4192da:	mov    rdx,r12
  4192dd:	mov    ecx,0x4
  4192e2:	call   422690 <flatcc_json_parser_set_error@@Base>
  4192e7:	cmp    r13,rax
  4192ea:	jne    4194db <main@@Base+0x126bb>
  4192f0:	jmp    419550 <main@@Base+0x12730>
  4192f5:	mov    rdi,r14
  4192f8:	mov    rdx,r12
  4192fb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419300:	mov    rsi,rax
  419303:	cmp    rsi,r12
  419306:	je     4193b1 <main@@Base+0x12591>
  41930c:	cmp    BYTE PTR [rsi],0x3a
  41930f:	jne    4193b1 <main@@Base+0x12591>
  419315:	lea    rax,[rsi+0x1]
  419319:	mov    rcx,r12
  41931c:	sub    rcx,rax
  41931f:	cmp    rcx,0x2
  419323:	jl     419507 <main@@Base+0x126e7>
  419329:	cmp    BYTE PTR [rax],0x20
  41932c:	jg     419515 <main@@Base+0x126f5>
  419332:	jne    419507 <main@@Base+0x126e7>
  419338:	cmp    BYTE PTR [rsi+0x2],0x20
  41933c:	jle    419507 <main@@Base+0x126e7>
  419342:	add    rsi,0x2
  419346:	mov    rax,rsi
  419349:	cmp    r13,rax
  41934c:	jne    41951a <main@@Base+0x126fa>
  419352:	jmp    419550 <main@@Base+0x12730>
  419357:	mov    rdi,r14
  41935a:	mov    rsi,rax
  41935d:	mov    rdx,r12
  419360:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419365:	cmp    r13,rax
  419368:	je     419550 <main@@Base+0x12730>
  41936e:	mov    r9,QWORD PTR [rsp+0x10]
  419373:	sub    rsp,0x8
  419377:	mov    ecx,0x4
  41937c:	mov    rdi,r14
  41937f:	mov    rsi,rax
  419382:	mov    rdx,r12
  419385:	mov    r8d,0x9
  41938b:	lea    rax,[rip+0x118e]        # 41a520 <main@@Base+0x13700>
  419392:	push   rax
  419393:	lea    rax,[rip+0x496]        # 419830 <main@@Base+0x12a10>
  41939a:	push   rax
  41939b:	lea    rax,[rip+0x272de]        # 440680 <__data_start@@Base+0x5d0>
  4193a2:	push   rax
  4193a3:	call   4253a0 <flatcc_json_parser_union_type_vector@@Base>
  4193a8:	add    rsp,0x20
  4193ac:	jmp    41955e <main@@Base+0x1273e>
  4193b1:	mov    rdi,r14
  4193b4:	mov    rdx,r12
  4193b7:	mov    ecx,0x4
  4193bc:	call   422690 <flatcc_json_parser_set_error@@Base>
  4193c1:	cmp    r13,rax
  4193c4:	jne    41951a <main@@Base+0x126fa>
  4193ca:	jmp    419550 <main@@Base+0x12730>
  4193cf:	mov    rdi,r14
  4193d2:	mov    rsi,rax
  4193d5:	mov    rdx,r12
  4193d8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4193dd:	cmp    r13,rax
  4193e0:	je     419550 <main@@Base+0x12730>
  4193e6:	mov    r9,QWORD PTR [rsp+0x10]
  4193eb:	sub    rsp,0x8
  4193ef:	mov    ecx,0x1
  4193f4:	mov    rdi,r14
  4193f7:	mov    rsi,rax
  4193fa:	mov    rdx,r12
  4193fd:	mov    r8d,0x3
  419403:	jmp    4194f8 <main@@Base+0x126d8>
  419408:	mov    rdi,r14
  41940b:	mov    rsi,rax
  41940e:	mov    rdx,r12
  419411:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419416:	cmp    r13,rax
  419419:	je     419550 <main@@Base+0x12730>
  41941f:	mov    r9,QWORD PTR [rsp+0x10]
  419424:	mov    ecx,0x2
  419429:	mov    rdi,r14
  41942c:	mov    rsi,rax
  41942f:	mov    rdx,r12
  419432:	mov    r8d,0x5
  419438:	lea    rax,[rip+0x3f1]        # 419830 <main@@Base+0x12a10>
  41943f:	push   rax
  419440:	lea    rax,[rip+0x27279]        # 4406c0 <__data_start@@Base+0x610>
  419447:	jmp    419542 <main@@Base+0x12722>
  41944c:	mov    rdi,r14
  41944f:	mov    rsi,rax
  419452:	mov    rdx,r12
  419455:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41945a:	cmp    r13,rax
  41945d:	je     419550 <main@@Base+0x12730>
  419463:	mov    r9,QWORD PTR [rsp+0x10]
  419468:	sub    rsp,0x8
  41946c:	mov    ecx,0x4
  419471:	mov    rdi,r14
  419474:	mov    rsi,rax
  419477:	mov    rdx,r12
  41947a:	mov    r8d,0x9
  419480:	lea    rax,[rip+0x3a9]        # 419830 <main@@Base+0x12a10>
  419487:	push   rax
  419488:	call   424f00 <flatcc_json_parser_union_vector@@Base>
  41948d:	jmp    419548 <main@@Base+0x12728>
  419492:	mov    rdi,r14
  419495:	mov    rsi,rax
  419498:	mov    rdx,r12
  41949b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4194a0:	cmp    r13,rax
  4194a3:	je     419550 <main@@Base+0x12730>
  4194a9:	mov    r9,QWORD PTR [rsp+0x10]
  4194ae:	sub    rsp,0x8
  4194b2:	mov    rdi,r14
  4194b5:	mov    rsi,rax
  4194b8:	mov    rdx,r12
  4194bb:	mov    ecx,0x0
  4194c0:	mov    r8d,0x1
  4194c6:	jmp    4194f8 <main@@Base+0x126d8>
  4194c8:	mov    rdi,r14
  4194cb:	mov    rsi,rax
  4194ce:	mov    rdx,r12
  4194d1:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4194d6:	cmp    r13,rax
  4194d9:	je     419550 <main@@Base+0x12730>
  4194db:	mov    r9,QWORD PTR [rsp+0x10]
  4194e0:	sub    rsp,0x8
  4194e4:	mov    ecx,0x2
  4194e9:	mov    rdi,r14
  4194ec:	mov    rsi,rax
  4194ef:	mov    rdx,r12
  4194f2:	mov    r8d,0x5
  4194f8:	lea    rax,[rip+0x331]        # 419830 <main@@Base+0x12a10>
  4194ff:	push   rax
  419500:	call   424990 <flatcc_json_parser_union@@Base>
  419505:	jmp    419548 <main@@Base+0x12728>
  419507:	mov    rdi,r14
  41950a:	mov    rsi,rax
  41950d:	mov    rdx,r12
  419510:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419515:	cmp    r13,rax
  419518:	je     419550 <main@@Base+0x12730>
  41951a:	mov    r9,QWORD PTR [rsp+0x10]
  41951f:	mov    rdi,r14
  419522:	mov    rsi,rax
  419525:	mov    rdx,r12
  419528:	mov    ecx,0x0
  41952d:	mov    r8d,0x1
  419533:	lea    rax,[rip+0x2f6]        # 419830 <main@@Base+0x12a10>
  41953a:	push   rax
  41953b:	lea    rax,[rip+0x2715e]        # 4406a0 <__data_start@@Base+0x5f0>
  419542:	push   rax
  419543:	call   424aa0 <flatcc_json_parser_union_type@@Base>
  419548:	add    rsp,0x10
  41954c:	jmp    41955e <main@@Base+0x1273e>
  41954e:	xchg   ax,ax
  419550:	mov    rdi,r14
  419553:	mov    rsi,r13
  419556:	mov    rdx,r12
  419559:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41955e:	mov    r13,QWORD PTR [rsp+0x8]
  419563:	mov    rcx,r12
  419566:	sub    rcx,rax
  419569:	cmp    rcx,0x2
  41956d:	jl     419590 <main@@Base+0x12770>
  41956f:	cmp    BYTE PTR [rax],0x20
  419572:	jg     41959e <main@@Base+0x1277e>
  419574:	jne    419590 <main@@Base+0x12770>
  419576:	cmp    BYTE PTR [rax+0x1],0x20
  41957a:	jle    419590 <main@@Base+0x12770>
  41957c:	inc    rax
  41957f:	cmp    rax,r12
  419582:	jne    4195a7 <main@@Base+0x12787>
  419584:	jmp    419638 <main@@Base+0x12818>
  419589:	nop    DWORD PTR [rax+0x0]
  419590:	mov    rdi,r14
  419593:	mov    rsi,rax
  419596:	mov    rdx,r12
  419599:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41959e:	cmp    rax,r12
  4195a1:	je     419638 <main@@Base+0x12818>
  4195a7:	movzx  ecx,BYTE PTR [rax]
  4195aa:	cmp    cl,0x2c
  4195ad:	jne    41964b <main@@Base+0x1282b>
  4195b3:	lea    rsi,[rax+0x1]
  4195b7:	mov    rcx,r12
  4195ba:	sub    rcx,rsi
  4195bd:	cmp    rcx,0x2
  4195c1:	jl     4195e0 <main@@Base+0x127c0>
  4195c3:	cmp    BYTE PTR [rsi],0x20
  4195c6:	jg     4195ee <main@@Base+0x127ce>
  4195c8:	jne    4195e0 <main@@Base+0x127c0>
  4195ca:	cmp    BYTE PTR [rax+0x2],0x20
  4195ce:	jle    4195e0 <main@@Base+0x127c0>
  4195d0:	add    rax,0x2
  4195d4:	jmp    4195eb <main@@Base+0x127cb>
  4195d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195e0:	mov    rdi,r14
  4195e3:	mov    rdx,r12
  4195e6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4195eb:	mov    rsi,rax
  4195ee:	cmp    rsi,r12
  4195f1:	je     419687 <main@@Base+0x12867>
  4195f7:	cmp    BYTE PTR [rsi],0x7d
  4195fa:	jne    418420 <main@@Base+0x11600>
  419600:	lea    rbx,[rsi+0x1]
  419604:	mov    rax,r12
  419607:	sub    rax,rbx
  41960a:	cmp    rax,0x2
  41960e:	jl     419677 <main@@Base+0x12857>
  419610:	cmp    BYTE PTR [rbx],0x20
  419613:	jg     4183ac <main@@Base+0x1158c>
  419619:	jne    419677 <main@@Base+0x12857>
  41961b:	cmp    BYTE PTR [rsi+0x2],0x20
  41961f:	jle    419677 <main@@Base+0x12857>
  419621:	add    rsi,0x2
  419625:	mov    rbx,rsi
  419628:	cmp    DWORD PTR [r14+0x1c],0x0
  41962d:	jne    418321 <main@@Base+0x11501>
  419633:	jmp    4183b7 <main@@Base+0x11597>
  419638:	mov    rbx,r12
  41963b:	cmp    DWORD PTR [r14+0x1c],0x0
  419640:	jne    418321 <main@@Base+0x11501>
  419646:	jmp    4183b7 <main@@Base+0x11597>
  41964b:	cmp    cl,0x7d
  41964e:	jne    41968f <main@@Base+0x1286f>
  419650:	lea    rbx,[rax+0x1]
  419654:	mov    rcx,r12
  419657:	sub    rcx,rbx
  41965a:	cmp    rcx,0x2
  41965e:	jl     419677 <main@@Base+0x12857>
  419660:	cmp    BYTE PTR [rbx],0x20
  419663:	jg     4183ac <main@@Base+0x1158c>
  419669:	jne    419677 <main@@Base+0x12857>
  41966b:	cmp    BYTE PTR [rax+0x2],0x20
  41966f:	jle    419677 <main@@Base+0x12857>
  419671:	add    rax,0x2
  419675:	jmp    4196a2 <main@@Base+0x12882>
  419677:	mov    rdi,r14
  41967a:	mov    rsi,rbx
  41967d:	mov    rdx,r12
  419680:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419685:	jmp    4196a2 <main@@Base+0x12882>
  419687:	mov    rdi,r14
  41968a:	mov    rsi,r12
  41968d:	jmp    419695 <main@@Base+0x12875>
  41968f:	mov    rdi,r14
  419692:	mov    rsi,rax
  419695:	mov    rdx,r12
  419698:	mov    ecx,0xa
  41969d:	call   422690 <flatcc_json_parser_set_error@@Base>
  4196a2:	mov    rbx,rax
  4196a5:	cmp    DWORD PTR [r14+0x1c],0x0
  4196aa:	jne    418321 <main@@Base+0x11501>
  4196b0:	jmp    4183b7 <main@@Base+0x11597>
  4196b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196bf:	nop
  4196c0:	push   r14
  4196c2:	push   rbx
  4196c3:	mov    rbx,rdx
  4196c6:	sub    rbx,rsi
  4196c9:	cmp    rbx,0x8
  4196cd:	jb     4196d6 <main@@Base+0x128b6>
  4196cf:	movbe  rbx,QWORD PTR [rsi]
  4196d4:	jmp    419744 <main@@Base+0x12924>
  4196d6:	dec    rbx
  4196d9:	cmp    rbx,0x6
  4196dd:	ja     419826 <main@@Base+0x12a06>
  4196e3:	xor    eax,eax
  4196e5:	lea    r10,[rip+0x191a8]        # 432894 <_IO_stdin_used@@Base+0x894>
  4196ec:	movsxd rbx,DWORD PTR [r10+rbx*4]
  4196f0:	add    rbx,r10
  4196f3:	jmp    rbx
  4196f5:	movsx  rax,BYTE PTR [rsi+0x6]
  4196fa:	shl    rax,0x8
  4196fe:	movsx  rbx,BYTE PTR [rsi+0x5]
  419703:	shl    rbx,0x10
  419707:	or     rax,rbx
  41970a:	movsx  rbx,BYTE PTR [rsi+0x4]
  41970f:	shl    rbx,0x18
  419713:	or     rax,rbx
  419716:	movsx  rbx,BYTE PTR [rsi+0x3]
  41971b:	shl    rbx,0x20
  41971f:	or     rax,rbx
  419722:	movsx  rbx,BYTE PTR [rsi+0x2]
  419727:	shl    rbx,0x28
  41972b:	or     rax,rbx
  41972e:	movsx  rbx,BYTE PTR [rsi+0x1]
  419733:	shl    rbx,0x30
  419737:	or     rax,rbx
  41973a:	movzx  ebx,BYTE PTR [rsi]
  41973d:	shl    rbx,0x38
  419741:	or     rbx,rax
  419744:	movabs rax,0x4368617261637465
  41974e:	cmp    rbx,rax
  419751:	jne    419826 <main@@Base+0x12a06>
  419757:	lea    r10,[rsi+0x8]
  41975b:	mov    rax,rdx
  41975e:	sub    rax,r10
  419761:	cmp    rax,0x8
  419765:	jb     419777 <main@@Base+0x12957>
  419767:	movbe  rbx,QWORD PTR [r10]
  41976c:	cmp    rax,0x2
  419770:	jge    4197ee <main@@Base+0x129ce>
  419772:	jmp    419826 <main@@Base+0x12a06>
  419777:	lea    rbx,[rax-0x1]
  41977b:	cmp    rbx,0x6
  41977f:	ja     419826 <main@@Base+0x12a06>
  419785:	xor    r11d,r11d
  419788:	lea    r14,[rip+0x19121]        # 4328b0 <_IO_stdin_used@@Base+0x8b0>
  41978f:	movsxd rbx,DWORD PTR [r14+rbx*4]
  419793:	add    rbx,r14
  419796:	jmp    rbx
  419798:	movsx  r11,BYTE PTR [rsi+0xe]
  41979d:	shl    r11,0x8
  4197a1:	movsx  rbx,BYTE PTR [rsi+0xd]
  4197a6:	shl    rbx,0x10
  4197aa:	or     r11,rbx
  4197ad:	movsx  rbx,BYTE PTR [rsi+0xc]
  4197b2:	shl    rbx,0x18
  4197b6:	or     r11,rbx
  4197b9:	movsx  rbx,BYTE PTR [rsi+0xb]
  4197be:	shl    rbx,0x20
  4197c2:	or     r11,rbx
  4197c5:	movsx  rbx,BYTE PTR [rsi+0xa]
  4197ca:	shl    rbx,0x28
  4197ce:	or     r11,rbx
  4197d1:	movsx  rbx,BYTE PTR [rsi+0x9]
  4197d6:	shl    rbx,0x30
  4197da:	or     r11,rbx
  4197dd:	movzx  ebx,BYTE PTR [r10]
  4197e1:	shl    rbx,0x38
  4197e5:	or     rbx,r11
  4197e8:	cmp    rax,0x2
  4197ec:	jl     419826 <main@@Base+0x12a06>
  4197ee:	movabs rax,0xff00000000000000
  4197f8:	and    rbx,rax
  4197fb:	movabs rax,0x7200000000000000
  419805:	cmp    rbx,rax
  419808:	jne    419826 <main@@Base+0x12a06>
  41980a:	lea    rax,[rsi+0xa]
  41980e:	cmp    BYTE PTR [rsi+0x9],0x2e
  419812:	cmovne rax,r10
  419816:	cmp    rax,r10
  419819:	je     419826 <main@@Base+0x12a06>
  41981b:	mov    rsi,rax
  41981e:	pop    rbx
  41981f:	pop    r14
  419821:	jmp    4147b0 <main@@Base+0xd990>
  419826:	mov    rax,rsi
  419829:	pop    rbx
  41982a:	pop    r14
  41982c:	ret    
  41982d:	nop    DWORD PTR [rax]
  419830:	push   rbp
  419831:	push   r15
  419833:	push   r14
  419835:	push   r13
  419837:	push   r12
  419839:	push   rbx
  41983a:	sub    rsp,0x18
  41983e:	mov    r13,rdx
  419841:	mov    rbx,rsi
  419844:	mov    r14,rdi
  419847:	mov    DWORD PTR [r8],0x0
  41984e:	inc    cl
  419850:	cmp    cl,0xc
  419853:	ja     4198bf <main@@Base+0x12a9f>
  419855:	mov    r15,r8
  419858:	movzx  eax,cl
  41985b:	lea    rcx,[rip+0x1906a]        # 4328cc <_IO_stdin_used@@Base+0x8cc>
  419862:	movsxd rax,DWORD PTR [rcx+rax*4]
  419866:	add    rax,rcx
  419869:	jmp    rax
  41986b:	mov    rdi,r14
  41986e:	mov    rsi,rbx
  419871:	mov    rdx,r13
  419874:	mov    rcx,r15
  419877:	call   424600 <flatcc_json_parser_build_string@@Base>
  41987c:	jmp    419a46 <main@@Base+0x12c26>
  419881:	mov    rdi,r14
  419884:	mov    rsi,rbx
  419887:	mov    rdx,r13
  41988a:	mov    rcx,r15
  41988d:	call   41a540 <main@@Base+0x13720>
  419892:	jmp    419a46 <main@@Base+0x12c26>
  419897:	mov    rax,r13
  41989a:	sub    rax,rbx
  41989d:	cmp    rax,0x4
  4198a1:	jl     4198af <main@@Base+0x12a8f>
  4198a3:	cmp    DWORD PTR [rbx],0x6c6c756e
  4198a9:	je     419a7e <main@@Base+0x12c5e>
  4198af:	mov    rdi,r14
  4198b2:	mov    rsi,rbx
  4198b5:	mov    rdx,r13
  4198b8:	mov    ecx,0x1a
  4198bd:	jmp    4198d8 <main@@Base+0x12ab8>
  4198bf:	test   BYTE PTR [r14+0x10],0x1
  4198c4:	jne    4199bc <main@@Base+0x12b9c>
  4198ca:	mov    rdi,r14
  4198cd:	mov    rsi,rbx
  4198d0:	mov    rdx,r13
  4198d3:	mov    ecx,0xf
  4198d8:	add    rsp,0x18
  4198dc:	pop    rbx
  4198dd:	pop    r12
  4198df:	pop    r13
  4198e1:	pop    r14
  4198e3:	pop    r15
  4198e5:	pop    rbp
  4198e6:	jmp    422690 <flatcc_json_parser_set_error@@Base>
  4198eb:	mov    DWORD PTR [r15],0x0
  4198f2:	mov    rdi,QWORD PTR [r14]
  4198f5:	mov    esi,0x1
  4198fa:	call   41dcc0 <flatcc_builder_start_table@@Base>
  4198ff:	test   eax,eax
  419901:	jne    419a33 <main@@Base+0x12c13>
  419907:	cmp    rbx,r13
  41990a:	je     419a12 <main@@Base+0x12bf2>
  419910:	cmp    BYTE PTR [rbx],0x7b
  419913:	jne    419a12 <main@@Base+0x12bf2>
  419919:	lea    rsi,[rbx+0x1]
  41991d:	mov    rax,r13
  419920:	sub    rax,rsi
  419923:	cmp    rax,0x2
  419927:	jl     419e8d <main@@Base+0x1306d>
  41992d:	cmp    BYTE PTR [rsi],0x20
  419930:	jg     419e9b <main@@Base+0x1307b>
  419936:	jne    419e8d <main@@Base+0x1306d>
  41993c:	cmp    BYTE PTR [rbx+0x2],0x20
  419940:	jle    419e8d <main@@Base+0x1306d>
  419946:	add    rbx,0x2
  41994a:	mov    rsi,rbx
  41994d:	jmp    419e9b <main@@Base+0x1307b>
  419952:	mov    DWORD PTR [r15],0x0
  419959:	mov    rdi,QWORD PTR [r14]
  41995c:	mov    esi,0x2
  419961:	mov    edx,0x2
  419966:	call   41cd70 <flatcc_builder_start_struct@@Base>
  41996b:	test   rax,rax
  41996e:	je     419a0a <main@@Base+0x12bea>
  419974:	cmp    rbx,r13
  419977:	je     4199d8 <main@@Base+0x12bb8>
  419979:	cmp    BYTE PTR [rbx],0x7b
  41997c:	jne    4199d8 <main@@Base+0x12bb8>
  41997e:	mov    QWORD PTR [rsp+0x10],rax
  419983:	lea    rax,[rbx+0x1]
  419987:	mov    rcx,r13
  41998a:	sub    rcx,rax
  41998d:	cmp    rcx,0x2
  419991:	jl     419a84 <main@@Base+0x12c64>
  419997:	cmp    BYTE PTR [rax],0x20
  41999a:	jg     419a92 <main@@Base+0x12c72>
  4199a0:	jne    419a84 <main@@Base+0x12c64>
  4199a6:	cmp    BYTE PTR [rbx+0x2],0x20
  4199aa:	jle    419a84 <main@@Base+0x12c64>
  4199b0:	add    rbx,0x2
  4199b4:	mov    rax,rbx
  4199b7:	jmp    419a92 <main@@Base+0x12c72>
  4199bc:	mov    rdi,r14
  4199bf:	mov    rsi,rbx
  4199c2:	mov    rdx,r13
  4199c5:	add    rsp,0x18
  4199c9:	pop    rbx
  4199ca:	pop    r12
  4199cc:	pop    r13
  4199ce:	pop    r14
  4199d0:	pop    r15
  4199d2:	pop    rbp
  4199d3:	jmp    422d00 <flatcc_json_parser_generic_json@@Base>
  4199d8:	mov    rdi,r14
  4199db:	mov    rsi,rbx
  4199de:	mov    rdx,r13
  4199e1:	mov    ecx,0x15
  4199e6:	call   422690 <flatcc_json_parser_set_error@@Base>
  4199eb:	mov    rbx,rax
  4199ee:	mov    rsi,r13
  4199f1:	cmp    rbx,r13
  4199f4:	je     419a0d <main@@Base+0x12bed>
  4199f6:	mov    rdi,QWORD PTR [r14]
  4199f9:	call   41ce40 <flatcc_builder_end_struct@@Base>
  4199fe:	mov    DWORD PTR [r15],eax
  419a01:	mov    rsi,rbx
  419a04:	test   eax,eax
  419a06:	jne    419a49 <main@@Base+0x12c29>
  419a08:	jmp    419a0d <main@@Base+0x12bed>
  419a0a:	mov    rsi,rbx
  419a0d:	mov    rdi,r14
  419a10:	jmp    419a39 <main@@Base+0x12c19>
  419a12:	mov    rdi,r14
  419a15:	mov    rsi,rbx
  419a18:	mov    rdx,r13
  419a1b:	mov    ecx,0x15
  419a20:	call   422690 <flatcc_json_parser_set_error@@Base>
  419a25:	mov    rbx,rax
  419a28:	cmp    DWORD PTR [r14+0x1c],0x0
  419a2d:	je     41a435 <main@@Base+0x13615>
  419a33:	mov    rdi,r14
  419a36:	mov    rsi,rbx
  419a39:	mov    rdx,r13
  419a3c:	mov    ecx,0x21
  419a41:	call   422690 <flatcc_json_parser_set_error@@Base>
  419a46:	mov    rbx,rax
  419a49:	cmp    DWORD PTR [r14+0x1c],0x0
  419a4e:	jne    419a6c <main@@Base+0x12c4c>
  419a50:	cmp    DWORD PTR [r15],0x0
  419a54:	jne    419a6c <main@@Base+0x12c4c>
  419a56:	mov    rdi,r14
  419a59:	mov    rsi,rbx
  419a5c:	mov    rdx,r13
  419a5f:	mov    ecx,0x21
  419a64:	call   422690 <flatcc_json_parser_set_error@@Base>
  419a69:	mov    rbx,rax
  419a6c:	mov    rax,rbx
  419a6f:	add    rsp,0x18
  419a73:	pop    rbx
  419a74:	pop    r12
  419a76:	pop    r13
  419a78:	pop    r14
  419a7a:	pop    r15
  419a7c:	pop    rbp
  419a7d:	ret    
  419a7e:	add    rbx,0x4
  419a82:	jmp    419a6c <main@@Base+0x12c4c>
  419a84:	mov    rdi,r14
  419a87:	mov    rsi,rax
  419a8a:	mov    rdx,r13
  419a8d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419a92:	mov    rcx,r13
  419a95:	cmp    rax,r13
  419a98:	je     419aa6 <main@@Base+0x12c86>
  419a9a:	cmp    BYTE PTR [rax],0x7d
  419a9d:	je     41a3b2 <main@@Base+0x13592>
  419aa3:	mov    rcx,rax
  419aa6:	movabs r12,0x686169725f6c656e
  419ab0:	mov    rsi,r13
  419ab3:	cmp    rcx,r13
  419ab6:	je     419adb <main@@Base+0x12cbb>
  419ab8:	cmp    BYTE PTR [rcx],0x22
  419abb:	jne    419ac5 <main@@Base+0x12ca5>
  419abd:	inc    rcx
  419ac0:	mov    rsi,rcx
  419ac3:	jmp    419adb <main@@Base+0x12cbb>
  419ac5:	mov    rdi,r14
  419ac8:	mov    rsi,rcx
  419acb:	mov    rdx,r13
  419ace:	mov    ecx,0x5
  419ad3:	call   422690 <flatcc_json_parser_set_error@@Base>
  419ad8:	mov    rsi,rax
  419adb:	mov    rax,r13
  419ade:	sub    rax,rsi
  419ae1:	cmp    rax,0x8
  419ae5:	jb     419afa <main@@Base+0x12cda>
  419ae7:	movbe  rax,QWORD PTR [rsi]
  419aec:	cmp    rax,r12
  419aef:	je     419b7b <main@@Base+0x12d5b>
  419af5:	jmp    419b96 <main@@Base+0x12d76>
  419afa:	dec    rax
  419afd:	cmp    rax,0x6
  419b01:	ja     419b96 <main@@Base+0x12d76>
  419b07:	lea    rcx,[rip+0x18df2]        # 432900 <_IO_stdin_used@@Base+0x900>
  419b0e:	mov    rdx,rcx
  419b11:	movsxd rcx,DWORD PTR [rcx+rax*4]
  419b15:	add    rcx,rdx
  419b18:	xor    r8d,r8d
  419b1b:	xor    eax,eax
  419b1d:	xor    edx,edx
  419b1f:	xor    edi,edi
  419b21:	xor    ebx,ebx
  419b23:	xor    ebp,ebp
  419b25:	jmp    rcx
  419b27:	movsx  r8,BYTE PTR [rsi+0x6]
  419b2c:	shl    r8,0x8
  419b30:	movsx  rax,BYTE PTR [rsi+0x5]
  419b35:	shl    rax,0x10
  419b39:	or     rax,r8
  419b3c:	movsx  rdx,BYTE PTR [rsi+0x4]
  419b41:	shl    rdx,0x18
  419b45:	or     rdx,rax
  419b48:	movsx  rdi,BYTE PTR [rsi+0x3]
  419b4d:	shl    rdi,0x20
  419b51:	or     rdi,rdx
  419b54:	movsx  rbx,BYTE PTR [rsi+0x2]
  419b59:	shl    rbx,0x28
  419b5d:	or     rbx,rdi
  419b60:	movsx  rbp,BYTE PTR [rsi+0x1]
  419b65:	shl    rbp,0x30
  419b69:	or     rbp,rbx
  419b6c:	movzx  eax,BYTE PTR [rsi]
  419b6f:	shl    rax,0x38
  419b73:	or     rax,rbp
  419b76:	cmp    rax,r12
  419b79:	jne    419b96 <main@@Base+0x12d76>
  419b7b:	lea    r12,[rsi+0x8]
  419b7f:	mov    rax,r13
  419b82:	sub    rax,r12
  419b85:	cmp    rax,0x8
  419b89:	jb     419ba6 <main@@Base+0x12d86>
  419b8b:	movbe  rcx,QWORD PTR [r12]
  419b91:	jmp    419c23 <main@@Base+0x12e03>
  419b96:	mov    rdi,r14
  419b99:	mov    rdx,r13
  419b9c:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  419ba1:	jmp    419d69 <main@@Base+0x12f49>
  419ba6:	lea    rcx,[rax-0x1]
  419baa:	cmp    rcx,0x6
  419bae:	ja     419d51 <main@@Base+0x12f31>
  419bb4:	lea    rdx,[rip+0x18d61]        # 43291c <_IO_stdin_used@@Base+0x91c>
  419bbb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419bbf:	add    rcx,rdx
  419bc2:	xor    r8d,r8d
  419bc5:	xor    r9d,r9d
  419bc8:	xor    edi,edi
  419bca:	xor    ebx,ebx
  419bcc:	xor    ebp,ebp
  419bce:	xor    edx,edx
  419bd0:	jmp    rcx
  419bd2:	movsx  r8,BYTE PTR [rsi+0xe]
  419bd7:	shl    r8,0x8
  419bdb:	movsx  r9,BYTE PTR [rsi+0xd]
  419be0:	shl    r9,0x10
  419be4:	or     r9,r8
  419be7:	movsx  rdi,BYTE PTR [rsi+0xc]
  419bec:	shl    rdi,0x18
  419bf0:	or     rdi,r9
  419bf3:	movsx  rbx,BYTE PTR [rsi+0xb]
  419bf8:	shl    rbx,0x20
  419bfc:	or     rbx,rdi
  419bff:	movsx  rbp,BYTE PTR [rsi+0xa]
  419c04:	shl    rbp,0x28
  419c08:	or     rbp,rbx
  419c0b:	movsx  rdx,BYTE PTR [rsi+0x9]
  419c10:	shl    rdx,0x30
  419c14:	or     rdx,rbp
  419c17:	movzx  ecx,BYTE PTR [r12]
  419c1c:	shl    rcx,0x38
  419c20:	or     rcx,rdx
  419c23:	movabs rdx,0xffffff0000000000
  419c2d:	and    rcx,rdx
  419c30:	movabs rdx,0x6774680000000000
  419c3a:	cmp    rcx,rdx
  419c3d:	jne    419d51 <main@@Base+0x12f31>
  419c43:	cmp    rax,0x4
  419c47:	jl     419d51 <main@@Base+0x12f31>
  419c4d:	cmp    BYTE PTR [rsi+0xb],0x22
  419c51:	jne    419d51 <main@@Base+0x12f31>
  419c57:	lea    rax,[rsi+0xc]
  419c5b:	mov    rcx,r13
  419c5e:	sub    rcx,rax
  419c61:	cmp    rcx,0x2
  419c65:	jl     419c82 <main@@Base+0x12e62>
  419c67:	cmp    BYTE PTR [rax],0x20
  419c6a:	jg     419c90 <main@@Base+0x12e70>
  419c6c:	jne    419c82 <main@@Base+0x12e62>
  419c6e:	cmp    BYTE PTR [rsi+0xd],0x20
  419c72:	jle    419c82 <main@@Base+0x12e62>
  419c74:	add    rsi,0xd
  419c78:	mov    rax,rsi
  419c7b:	cmp    rax,r13
  419c7e:	jne    419c95 <main@@Base+0x12e75>
  419c80:	jmp    419cbd <main@@Base+0x12e9d>
  419c82:	mov    rdi,r14
  419c85:	mov    rsi,rax
  419c88:	mov    rdx,r13
  419c8b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419c90:	cmp    rax,r13
  419c93:	je     419cbd <main@@Base+0x12e9d>
  419c95:	cmp    BYTE PTR [rax],0x3a
  419c98:	jne    419cbd <main@@Base+0x12e9d>
  419c9a:	lea    rbx,[rax+0x1]
  419c9e:	mov    rcx,r13
  419ca1:	sub    rcx,rbx
  419ca4:	cmp    rcx,0x2
  419ca8:	jl     419cd2 <main@@Base+0x12eb2>
  419caa:	cmp    BYTE PTR [rbx],0x20
  419cad:	jg     419ce3 <main@@Base+0x12ec3>
  419caf:	jne    419cd2 <main@@Base+0x12eb2>
  419cb1:	cmp    BYTE PTR [rax+0x2],0x20
  419cb5:	jle    419cd2 <main@@Base+0x12eb2>
  419cb7:	add    rax,0x2
  419cbb:	jmp    419ce0 <main@@Base+0x12ec0>
  419cbd:	mov    rdi,r14
  419cc0:	mov    rsi,rax
  419cc3:	mov    rdx,r13
  419cc6:	mov    ecx,0x4
  419ccb:	call   422690 <flatcc_json_parser_set_error@@Base>
  419cd0:	jmp    419ce0 <main@@Base+0x12ec0>
  419cd2:	mov    rdi,r14
  419cd5:	mov    rsi,rbx
  419cd8:	mov    rdx,r13
  419cdb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419ce0:	mov    rbx,rax
  419ce3:	cmp    r12,rbx
  419ce6:	je     419d51 <main@@Base+0x12f31>
  419ce8:	mov    QWORD PTR [rsp+0x8],0x0
  419cf1:	mov    DWORD PTR [rsp+0x4],0x0
  419cf9:	mov    WORD PTR [rsp],0x0
  419cff:	cmp    rbx,r13
  419d02:	je     419dfd <main@@Base+0x12fdd>
  419d08:	mov    rdi,r14
  419d0b:	mov    rsi,rbx
  419d0e:	mov    rdx,r13
  419d11:	lea    rcx,[rsp+0x4]
  419d16:	lea    r8,[rsp+0x8]
  419d1b:	call   424130 <flatcc_json_parser_integer@@Base>
  419d20:	cmp    rax,rbx
  419d23:	movabs r12,0x686169725f6c656e
  419d2d:	je     419e13 <main@@Base+0x12ff3>
  419d33:	cmp    DWORD PTR [rsp+0x4],0x0
  419d38:	je     419e1f <main@@Base+0x12fff>
  419d3e:	mov    rdi,r14
  419d41:	mov    rsi,rax
  419d44:	mov    rdx,r13
  419d47:	mov    ecx,0x8
  419d4c:	jmp    419e3b <main@@Base+0x1301b>
  419d51:	mov    rdi,r14
  419d54:	mov    rsi,r12
  419d57:	mov    rdx,r13
  419d5a:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  419d5f:	movabs r12,0x686169725f6c656e
  419d69:	mov    rcx,r13
  419d6c:	sub    rcx,rax
  419d6f:	cmp    rcx,0x2
  419d73:	jl     419d8f <main@@Base+0x12f6f>
  419d75:	cmp    BYTE PTR [rax],0x20
  419d78:	jg     419d9d <main@@Base+0x12f7d>
  419d7a:	jne    419d8f <main@@Base+0x12f6f>
  419d7c:	cmp    BYTE PTR [rax+0x1],0x20
  419d80:	jle    419d8f <main@@Base+0x12f6f>
  419d82:	inc    rax
  419d85:	cmp    rax,r13
  419d88:	jne    419da6 <main@@Base+0x12f86>
  419d8a:	jmp    41a3a1 <main@@Base+0x13581>
  419d8f:	mov    rdi,r14
  419d92:	mov    rsi,rax
  419d95:	mov    rdx,r13
  419d98:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419d9d:	cmp    rax,r13
  419da0:	je     41a3a1 <main@@Base+0x13581>
  419da6:	movzx  ecx,BYTE PTR [rax]
  419da9:	cmp    cl,0x2c
  419dac:	jne    41a3a9 <main@@Base+0x13589>
  419db2:	lea    rcx,[rax+0x1]
  419db6:	mov    rdx,r13
  419db9:	sub    rdx,rcx
  419dbc:	cmp    rdx,0x2
  419dc0:	jl     419dd5 <main@@Base+0x12fb5>
  419dc2:	cmp    BYTE PTR [rcx],0x20
  419dc5:	jg     419de6 <main@@Base+0x12fc6>
  419dc7:	jne    419dd5 <main@@Base+0x12fb5>
  419dc9:	cmp    BYTE PTR [rax+0x2],0x20
  419dcd:	jle    419dd5 <main@@Base+0x12fb5>
  419dcf:	add    rax,0x2
  419dd3:	jmp    419de3 <main@@Base+0x12fc3>
  419dd5:	mov    rdi,r14
  419dd8:	mov    rsi,rcx
  419ddb:	mov    rdx,r13
  419dde:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419de3:	mov    rcx,rax
  419de6:	cmp    rcx,r13
  419de9:	je     41a3dc <main@@Base+0x135bc>
  419def:	cmp    BYTE PTR [rcx],0x7d
  419df2:	jne    419ab0 <main@@Base+0x12c90>
  419df8:	jmp    41a3e7 <main@@Base+0x135c7>
  419dfd:	xor    ecx,ecx
  419dff:	mov    rax,r13
  419e02:	movabs r12,0x686169725f6c656e
  419e0c:	cmp    rbx,rax
  419e0f:	jne    419e75 <main@@Base+0x13055>
  419e11:	jmp    419e47 <main@@Base+0x13027>
  419e13:	xor    ecx,ecx
  419e15:	mov    rax,rbx
  419e18:	cmp    rbx,rax
  419e1b:	jne    419e75 <main@@Base+0x13055>
  419e1d:	jmp    419e47 <main@@Base+0x13027>
  419e1f:	mov    rcx,QWORD PTR [rsp+0x8]
  419e24:	cmp    rcx,0x10000
  419e2b:	jb     419e82 <main@@Base+0x13062>
  419e2d:	mov    rdi,r14
  419e30:	mov    rsi,rax
  419e33:	mov    rdx,r13
  419e36:	mov    ecx,0x7
  419e3b:	call   422690 <flatcc_json_parser_set_error@@Base>
  419e40:	xor    ecx,ecx
  419e42:	cmp    rbx,rax
  419e45:	jne    419e75 <main@@Base+0x13055>
  419e47:	mov    rdi,r14
  419e4a:	mov    rsi,rbx
  419e4d:	mov    rdx,r13
  419e50:	lea    rcx,[rip+0x268a9]        # 440700 <__data_start@@Base+0x650>
  419e57:	mov    r8,rsp
  419e5a:	call   41aaf0 <main@@Base+0x13cd0>
  419e5f:	cmp    rax,rbx
  419e62:	je     41a4f8 <main@@Base+0x136d8>
  419e68:	cmp    rax,r13
  419e6b:	je     41a4f8 <main@@Base+0x136d8>
  419e71:	movzx  ecx,WORD PTR [rsp]
  419e75:	mov    rdx,QWORD PTR [rsp+0x10]
  419e7a:	mov    WORD PTR [rdx],cx
  419e7d:	jmp    419d69 <main@@Base+0x12f49>
  419e82:	mov    WORD PTR [rsp],cx
  419e86:	cmp    rbx,rax
  419e89:	jne    419e75 <main@@Base+0x13055>
  419e8b:	jmp    419e47 <main@@Base+0x13027>
  419e8d:	mov    rdi,r14
  419e90:	mov    rdx,r13
  419e93:	call   422710 <flatcc_json_parser_space_ext@@Base>
  419e98:	mov    rsi,rax
  419e9b:	mov    rax,r13
  419e9e:	cmp    rsi,r13
  419ea1:	je     419eef <main@@Base+0x130cf>
  419ea3:	cmp    BYTE PTR [rsi],0x7d
  419ea6:	jne    419eec <main@@Base+0x130cc>
  419ea8:	lea    rbx,[rsi+0x1]
  419eac:	mov    rax,r13
  419eaf:	sub    rax,rbx
  419eb2:	cmp    rax,0x2
  419eb6:	jl     41a4bf <main@@Base+0x1369f>
  419ebc:	cmp    BYTE PTR [rbx],0x20
  419ebf:	jg     419a28 <main@@Base+0x12c08>
  419ec5:	jne    41a4bf <main@@Base+0x1369f>
  419ecb:	cmp    BYTE PTR [rsi+0x2],0x20
  419ecf:	jle    41a4bf <main@@Base+0x1369f>
  419ed5:	add    rsi,0x2
  419ed9:	mov    rbx,rsi
  419edc:	cmp    DWORD PTR [r14+0x1c],0x0
  419ee1:	jne    419a33 <main@@Base+0x12c13>
  419ee7:	jmp    41a435 <main@@Base+0x13615>
  419eec:	mov    rax,rsi
  419eef:	mov    rsi,r13
  419ef2:	cmp    rax,r13
  419ef5:	je     419f17 <main@@Base+0x130f7>
  419ef7:	cmp    BYTE PTR [rax],0x22
  419efa:	jne    419f01 <main@@Base+0x130e1>
  419efc:	inc    rax
  419eff:	jmp    419f14 <main@@Base+0x130f4>
  419f01:	mov    rdi,r14
  419f04:	mov    rsi,rax
  419f07:	mov    rdx,r13
  419f0a:	mov    ecx,0x5
  419f0f:	call   422690 <flatcc_json_parser_set_error@@Base>
  419f14:	mov    rsi,rax
  419f17:	mov    rax,r13
  419f1a:	sub    rax,rsi
  419f1d:	cmp    rax,0x8
  419f21:	jb     419f2a <main@@Base+0x1310a>
  419f23:	movbe  rax,QWORD PTR [rsi]
  419f28:	jmp    419fa6 <main@@Base+0x13186>
  419f2a:	dec    rax
  419f2d:	cmp    rax,0x6
  419f31:	ja     419fcf <main@@Base+0x131af>
  419f37:	lea    rcx,[rip+0x189fa]        # 432938 <_IO_stdin_used@@Base+0x938>
  419f3e:	mov    rdx,rcx
  419f41:	movsxd rcx,DWORD PTR [rcx+rax*4]
  419f45:	add    rcx,rdx
  419f48:	xor    r8d,r8d
  419f4b:	xor    eax,eax
  419f4d:	xor    edx,edx
  419f4f:	xor    edi,edi
  419f51:	xor    ebp,ebp
  419f53:	xor    ebx,ebx
  419f55:	jmp    rcx
  419f57:	movsx  r8,BYTE PTR [rsi+0x6]
  419f5c:	shl    r8,0x8
  419f60:	movsx  rax,BYTE PTR [rsi+0x5]
  419f65:	shl    rax,0x10
  419f69:	or     rax,r8
  419f6c:	movsx  rdx,BYTE PTR [rsi+0x4]
  419f71:	shl    rdx,0x18
  419f75:	or     rdx,rax
  419f78:	movsx  rdi,BYTE PTR [rsi+0x3]
  419f7d:	shl    rdi,0x20
  419f81:	or     rdi,rdx
  419f84:	movsx  rbp,BYTE PTR [rsi+0x2]
  419f89:	shl    rbp,0x28
  419f8d:	or     rbp,rdi
  419f90:	movsx  rbx,BYTE PTR [rsi+0x1]
  419f95:	shl    rbx,0x30
  419f99:	or     rbx,rbp
  419f9c:	movzx  eax,BYTE PTR [rsi]
  419f9f:	shl    rax,0x38
  419fa3:	or     rax,rbx
  419fa6:	movabs rcx,0x73776f72645f6174
  419fb0:	cmp    rax,rcx
  419fb3:	jne    419fcf <main@@Base+0x131af>
  419fb5:	lea    rax,[rsi+0x8]
  419fb9:	mov    rcx,r13
  419fbc:	sub    rcx,rax
  419fbf:	cmp    rcx,0x8
  419fc3:	jb     419fd7 <main@@Base+0x131b7>
  419fc5:	movbe  rcx,QWORD PTR [rax]
  419fca:	jmp    41a051 <main@@Base+0x13231>
  419fcf:	mov    rdi,r14
  419fd2:	jmp    41a246 <main@@Base+0x13426>
  419fd7:	dec    rcx
  419fda:	cmp    rcx,0x6
  419fde:	ja     41a07b <main@@Base+0x1325b>
  419fe4:	lea    rdx,[rip+0x18969]        # 432954 <_IO_stdin_used@@Base+0x954>
  419feb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419fef:	add    rcx,rdx
  419ff2:	xor    r8d,r8d
  419ff5:	xor    r9d,r9d
  419ff8:	xor    edi,edi
  419ffa:	xor    ebp,ebp
  419ffc:	xor    ebx,ebx
  419ffe:	xor    edx,edx
  41a000:	jmp    rcx
  41a002:	movsx  r8,BYTE PTR [rsi+0xe]
  41a007:	shl    r8,0x8
  41a00b:	movsx  r9,BYTE PTR [rsi+0xd]
  41a010:	shl    r9,0x10
  41a014:	or     r9,r8
  41a017:	movsx  rdi,BYTE PTR [rsi+0xc]
  41a01c:	shl    rdi,0x18
  41a020:	or     rdi,r9
  41a023:	movsx  rbp,BYTE PTR [rsi+0xb]
  41a028:	shl    rbp,0x20
  41a02c:	or     rbp,rdi
  41a02f:	movsx  rbx,BYTE PTR [rsi+0xa]
  41a034:	shl    rbx,0x28
  41a038:	or     rbx,rbp
  41a03b:	movsx  rdx,BYTE PTR [rsi+0x9]
  41a040:	shl    rdx,0x30
  41a044:	or     rdx,rbx
  41a047:	movzx  ecx,BYTE PTR [rax]
  41a04a:	shl    rcx,0x38
  41a04e:	or     rcx,rdx
  41a051:	movabs rdx,0x7461636b5f64616d
  41a05b:	cmp    rcx,rdx
  41a05e:	jne    41a07b <main@@Base+0x1325b>
  41a060:	lea    r12,[rsi+0x10]
  41a064:	mov    rax,r13
  41a067:	sub    rax,r12
  41a06a:	cmp    rax,0x8
  41a06e:	jb     41a086 <main@@Base+0x13266>
  41a070:	movbe  rcx,QWORD PTR [r12]
  41a076:	jmp    41a103 <main@@Base+0x132e3>
  41a07b:	mov    rdi,r14
  41a07e:	mov    rsi,rax
  41a081:	jmp    41a246 <main@@Base+0x13426>
  41a086:	lea    rcx,[rax-0x1]
  41a08a:	cmp    rcx,0x6
  41a08e:	ja     41a240 <main@@Base+0x13420>
  41a094:	lea    rdx,[rip+0x188d5]        # 432970 <_IO_stdin_used@@Base+0x970>
  41a09b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41a09f:	add    rcx,rdx
  41a0a2:	xor    r8d,r8d
  41a0a5:	xor    r9d,r9d
  41a0a8:	xor    edi,edi
  41a0aa:	xor    ebx,ebx
  41a0ac:	xor    edx,edx
  41a0ae:	xor    ebp,ebp
  41a0b0:	jmp    rcx
  41a0b2:	movsx  r8,BYTE PTR [rsi+0x16]
  41a0b7:	shl    r8,0x8
  41a0bb:	movsx  r9,BYTE PTR [rsi+0x15]
  41a0c0:	shl    r9,0x10
  41a0c4:	or     r9,r8
  41a0c7:	movsx  rdi,BYTE PTR [rsi+0x14]
  41a0cc:	shl    rdi,0x18
  41a0d0:	or     rdi,r9
  41a0d3:	movsx  rbx,BYTE PTR [rsi+0x13]
  41a0d8:	shl    rbx,0x20
  41a0dc:	or     rbx,rdi
  41a0df:	movsx  rdx,BYTE PTR [rsi+0x12]
  41a0e4:	shl    rdx,0x28
  41a0e8:	or     rdx,rbx
  41a0eb:	movsx  rbp,BYTE PTR [rsi+0x11]
  41a0f0:	shl    rbp,0x30
  41a0f4:	or     rbp,rdx
  41a0f7:	movzx  ecx,BYTE PTR [r12]
  41a0fc:	shl    rcx,0x38
  41a100:	or     rcx,rbp
  41a103:	movabs rdx,0xffffff0000000000
  41a10d:	and    rcx,rdx
  41a110:	movabs rdx,0x6167650000000000
  41a11a:	cmp    rcx,rdx
  41a11d:	jne    41a240 <main@@Base+0x13420>
  41a123:	cmp    rax,0x4
  41a127:	jl     41a240 <main@@Base+0x13420>
  41a12d:	cmp    BYTE PTR [rsi+0x13],0x22
  41a131:	jne    41a240 <main@@Base+0x13420>
  41a137:	lea    rax,[rsi+0x14]
  41a13b:	mov    rcx,r13
  41a13e:	sub    rcx,rax
  41a141:	cmp    rcx,0x2
  41a145:	jl     41a162 <main@@Base+0x13342>
  41a147:	cmp    BYTE PTR [rax],0x20
  41a14a:	jg     41a170 <main@@Base+0x13350>
  41a14c:	jne    41a162 <main@@Base+0x13342>
  41a14e:	cmp    BYTE PTR [rsi+0x15],0x20
  41a152:	jle    41a162 <main@@Base+0x13342>
  41a154:	add    rsi,0x15
  41a158:	mov    rax,rsi
  41a15b:	cmp    rax,r13
  41a15e:	jne    41a175 <main@@Base+0x13355>
  41a160:	jmp    41a19d <main@@Base+0x1337d>
  41a162:	mov    rdi,r14
  41a165:	mov    rsi,rax
  41a168:	mov    rdx,r13
  41a16b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a170:	cmp    rax,r13
  41a173:	je     41a19d <main@@Base+0x1337d>
  41a175:	cmp    BYTE PTR [rax],0x3a
  41a178:	jne    41a19d <main@@Base+0x1337d>
  41a17a:	lea    rbx,[rax+0x1]
  41a17e:	mov    rcx,r13
  41a181:	sub    rcx,rbx
  41a184:	cmp    rcx,0x2
  41a188:	jl     41a1b2 <main@@Base+0x13392>
  41a18a:	cmp    BYTE PTR [rbx],0x20
  41a18d:	jg     41a1c3 <main@@Base+0x133a3>
  41a18f:	jne    41a1b2 <main@@Base+0x13392>
  41a191:	cmp    BYTE PTR [rax+0x2],0x20
  41a195:	jle    41a1b2 <main@@Base+0x13392>
  41a197:	add    rax,0x2
  41a19b:	jmp    41a1c0 <main@@Base+0x133a0>
  41a19d:	mov    rdi,r14
  41a1a0:	mov    rsi,rax
  41a1a3:	mov    rdx,r13
  41a1a6:	mov    ecx,0x4
  41a1ab:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a1b0:	jmp    41a1c0 <main@@Base+0x133a0>
  41a1b2:	mov    rdi,r14
  41a1b5:	mov    rsi,rbx
  41a1b8:	mov    rdx,r13
  41a1bb:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a1c0:	mov    rbx,rax
  41a1c3:	cmp    r12,rbx
  41a1c6:	je     41a240 <main@@Base+0x13420>
  41a1c8:	mov    QWORD PTR [rsp+0x8],0x0
  41a1d1:	mov    DWORD PTR [rsp+0x4],0x0
  41a1d9:	mov    DWORD PTR [rsp],0x0
  41a1e0:	xor    ebp,ebp
  41a1e2:	cmp    rbx,r13
  41a1e5:	je     41a2f8 <main@@Base+0x134d8>
  41a1eb:	mov    rdi,r14
  41a1ee:	mov    rsi,rbx
  41a1f1:	mov    rdx,r13
  41a1f4:	lea    rcx,[rsp+0x4]
  41a1f9:	lea    r8,[rsp+0x8]
  41a1fe:	call   424130 <flatcc_json_parser_integer@@Base>
  41a203:	cmp    rax,rbx
  41a206:	je     41a302 <main@@Base+0x134e2>
  41a20c:	mov    r12,rax
  41a20f:	mov    rax,QWORD PTR [rsp+0x8]
  41a214:	cmp    DWORD PTR [rsp+0x4],0x0
  41a219:	je     41a30c <main@@Base+0x134ec>
  41a21f:	mov    ecx,0x80000001
  41a224:	cmp    rax,rcx
  41a227:	jb     41a331 <main@@Base+0x13511>
  41a22d:	mov    rdi,r14
  41a230:	mov    rsi,r12
  41a233:	mov    rdx,r13
  41a236:	mov    ecx,0x8
  41a23b:	jmp    41a322 <main@@Base+0x13502>
  41a240:	mov    rdi,r14
  41a243:	mov    rsi,r12
  41a246:	mov    rdx,r13
  41a249:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41a24e:	mov    r12,rax
  41a251:	mov    rax,r13
  41a254:	sub    rax,r12
  41a257:	cmp    rax,0x2
  41a25b:	jl     41a27b <main@@Base+0x1345b>
  41a25d:	cmp    BYTE PTR [r12],0x20
  41a262:	jg     41a28c <main@@Base+0x1346c>
  41a264:	jne    41a27b <main@@Base+0x1345b>
  41a266:	cmp    BYTE PTR [r12+0x1],0x20
  41a26c:	jle    41a27b <main@@Base+0x1345b>
  41a26e:	inc    r12
  41a271:	cmp    r12,r13
  41a274:	jne    41a295 <main@@Base+0x13475>
  41a276:	jmp    41a427 <main@@Base+0x13607>
  41a27b:	mov    rdi,r14
  41a27e:	mov    rsi,r12
  41a281:	mov    rdx,r13
  41a284:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a289:	mov    r12,rax
  41a28c:	cmp    r12,r13
  41a28f:	je     41a427 <main@@Base+0x13607>
  41a295:	movzx  eax,BYTE PTR [r12]
  41a29a:	cmp    al,0x2c
  41a29c:	jne    41a44d <main@@Base+0x1362d>
  41a2a2:	lea    rax,[r12+0x1]
  41a2a7:	mov    rcx,r13
  41a2aa:	sub    rcx,rax
  41a2ad:	cmp    rcx,0x2
  41a2b1:	jl     41a2d3 <main@@Base+0x134b3>
  41a2b3:	cmp    BYTE PTR [rax],0x20
  41a2b6:	jg     41a2e1 <main@@Base+0x134c1>
  41a2b8:	jne    41a2d3 <main@@Base+0x134b3>
  41a2ba:	cmp    BYTE PTR [r12+0x2],0x20
  41a2c0:	jle    41a2d3 <main@@Base+0x134b3>
  41a2c2:	add    r12,0x2
  41a2c6:	mov    rax,r12
  41a2c9:	cmp    rax,r13
  41a2cc:	jne    41a2ea <main@@Base+0x134ca>
  41a2ce:	jmp    41a48d <main@@Base+0x1366d>
  41a2d3:	mov    rdi,r14
  41a2d6:	mov    rsi,rax
  41a2d9:	mov    rdx,r13
  41a2dc:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a2e1:	cmp    rax,r13
  41a2e4:	je     41a48d <main@@Base+0x1366d>
  41a2ea:	cmp    BYTE PTR [rax],0x7d
  41a2ed:	jne    419eef <main@@Base+0x130cf>
  41a2f3:	jmp    41a495 <main@@Base+0x13675>
  41a2f8:	mov    r12,r13
  41a2fb:	cmp    rbx,r12
  41a2fe:	jne    41a36e <main@@Base+0x1354e>
  41a300:	jmp    41a33e <main@@Base+0x1351e>
  41a302:	mov    r12,rbx
  41a305:	cmp    rbx,r12
  41a308:	jne    41a36e <main@@Base+0x1354e>
  41a30a:	jmp    41a33e <main@@Base+0x1351e>
  41a30c:	test   rax,0xffffffff80000000
  41a312:	je     41a334 <main@@Base+0x13514>
  41a314:	mov    rdi,r14
  41a317:	mov    rsi,r12
  41a31a:	mov    rdx,r13
  41a31d:	mov    ecx,0x7
  41a322:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a327:	mov    r12,rax
  41a32a:	cmp    rbx,r12
  41a32d:	jne    41a36e <main@@Base+0x1354e>
  41a32f:	jmp    41a33e <main@@Base+0x1351e>
  41a331:	neg    rax
  41a334:	mov    DWORD PTR [rsp],eax
  41a337:	mov    ebp,eax
  41a339:	cmp    rbx,r12
  41a33c:	jne    41a36e <main@@Base+0x1354e>
  41a33e:	mov    rdi,r14
  41a341:	mov    rsi,rbx
  41a344:	mov    rdx,r13
  41a347:	lea    rcx,[rip+0x26392]        # 4406e0 <__data_start@@Base+0x630>
  41a34e:	mov    r8,rsp
  41a351:	call   413920 <main@@Base+0xcb00>
  41a356:	mov    r12,rax
  41a359:	cmp    rax,rbx
  41a35c:	je     41a50b <main@@Base+0x136eb>
  41a362:	cmp    r12,r13
  41a365:	je     41a50b <main@@Base+0x136eb>
  41a36b:	mov    ebp,DWORD PTR [rsp]
  41a36e:	test   ebp,ebp
  41a370:	jne    41a37d <main@@Base+0x1355d>
  41a372:	test   BYTE PTR [r14+0x10],0x2
  41a377:	je     41a251 <main@@Base+0x13431>
  41a37d:	mov    rdi,QWORD PTR [r14]
  41a380:	mov    edx,0x4
  41a385:	xor    esi,esi
  41a387:	mov    ecx,0x4
  41a38c:	call   41f040 <flatcc_builder_table_add@@Base>
  41a391:	test   rax,rax
  41a394:	je     41a50b <main@@Base+0x136eb>
  41a39a:	mov    DWORD PTR [rax],ebp
  41a39c:	jmp    41a251 <main@@Base+0x13431>
  41a3a1:	mov    rsi,r13
  41a3a4:	jmp    419a0d <main@@Base+0x12bed>
  41a3a9:	cmp    cl,0x7d
  41a3ac:	jne    41a4d2 <main@@Base+0x136b2>
  41a3b2:	lea    rbx,[rax+0x1]
  41a3b6:	mov    rcx,r13
  41a3b9:	sub    rcx,rbx
  41a3bc:	cmp    rcx,0x2
  41a3c0:	jl     41a414 <main@@Base+0x135f4>
  41a3c2:	cmp    BYTE PTR [rbx],0x20
  41a3c5:	jg     4199ee <main@@Base+0x12bce>
  41a3cb:	jne    41a414 <main@@Base+0x135f4>
  41a3cd:	cmp    BYTE PTR [rax+0x2],0x20
  41a3d1:	jle    41a414 <main@@Base+0x135f4>
  41a3d3:	add    rax,0x2
  41a3d7:	jmp    4199eb <main@@Base+0x12bcb>
  41a3dc:	mov    rdi,r14
  41a3df:	mov    rsi,r13
  41a3e2:	jmp    41a4d8 <main@@Base+0x136b8>
  41a3e7:	lea    rbx,[rcx+0x1]
  41a3eb:	mov    rax,r13
  41a3ee:	sub    rax,rbx
  41a3f1:	cmp    rax,0x2
  41a3f5:	jl     41a414 <main@@Base+0x135f4>
  41a3f7:	cmp    BYTE PTR [rbx],0x20
  41a3fa:	jg     4199ee <main@@Base+0x12bce>
  41a400:	jne    41a414 <main@@Base+0x135f4>
  41a402:	cmp    BYTE PTR [rcx+0x2],0x20
  41a406:	jle    41a414 <main@@Base+0x135f4>
  41a408:	add    rcx,0x2
  41a40c:	mov    rbx,rcx
  41a40f:	jmp    4199ee <main@@Base+0x12bce>
  41a414:	mov    rdi,r14
  41a417:	mov    rsi,rbx
  41a41a:	mov    rdx,r13
  41a41d:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a422:	jmp    4199eb <main@@Base+0x12bcb>
  41a427:	mov    rbx,r13
  41a42a:	cmp    DWORD PTR [r14+0x1c],0x0
  41a42f:	jne    419a33 <main@@Base+0x12c13>
  41a435:	mov    rdi,QWORD PTR [r14]
  41a438:	call   41e6d0 <flatcc_builder_end_table@@Base>
  41a43d:	mov    DWORD PTR [r15],eax
  41a440:	test   eax,eax
  41a442:	jne    419a49 <main@@Base+0x12c29>
  41a448:	jmp    419a33 <main@@Base+0x12c13>
  41a44d:	cmp    al,0x7d
  41a44f:	jne    41a4e5 <main@@Base+0x136c5>
  41a455:	lea    rbx,[r12+0x1]
  41a45a:	mov    rax,r13
  41a45d:	sub    rax,rbx
  41a460:	cmp    rax,0x2
  41a464:	jl     41a4bf <main@@Base+0x1369f>
  41a466:	cmp    BYTE PTR [rbx],0x20
  41a469:	jg     419a28 <main@@Base+0x12c08>
  41a46f:	jne    41a4bf <main@@Base+0x1369f>
  41a471:	cmp    BYTE PTR [r12+0x2],0x20
  41a477:	jle    41a4bf <main@@Base+0x1369f>
  41a479:	add    r12,0x2
  41a47d:	mov    rbx,r12
  41a480:	cmp    DWORD PTR [r14+0x1c],0x0
  41a485:	jne    419a33 <main@@Base+0x12c13>
  41a48b:	jmp    41a435 <main@@Base+0x13615>
  41a48d:	mov    rdi,r14
  41a490:	mov    rsi,r13
  41a493:	jmp    41a4eb <main@@Base+0x136cb>
  41a495:	lea    rbx,[rax+0x1]
  41a499:	mov    rcx,r13
  41a49c:	sub    rcx,rbx
  41a49f:	cmp    rcx,0x2
  41a4a3:	jl     41a4bf <main@@Base+0x1369f>
  41a4a5:	cmp    BYTE PTR [rbx],0x20
  41a4a8:	jg     419a28 <main@@Base+0x12c08>
  41a4ae:	jne    41a4bf <main@@Base+0x1369f>
  41a4b0:	cmp    BYTE PTR [rax+0x2],0x20
  41a4b4:	jle    41a4bf <main@@Base+0x1369f>
  41a4b6:	add    rax,0x2
  41a4ba:	jmp    419a25 <main@@Base+0x12c05>
  41a4bf:	mov    rdi,r14
  41a4c2:	mov    rsi,rbx
  41a4c5:	mov    rdx,r13
  41a4c8:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a4cd:	jmp    419a25 <main@@Base+0x12c05>
  41a4d2:	mov    rdi,r14
  41a4d5:	mov    rsi,rax
  41a4d8:	mov    rdx,r13
  41a4db:	mov    ecx,0xa
  41a4e0:	jmp    4199e6 <main@@Base+0x12bc6>
  41a4e5:	mov    rdi,r14
  41a4e8:	mov    rsi,r12
  41a4eb:	mov    rdx,r13
  41a4ee:	mov    ecx,0xa
  41a4f3:	jmp    419a20 <main@@Base+0x12c00>
  41a4f8:	mov    rdi,r14
  41a4fb:	mov    rsi,rax
  41a4fe:	mov    rdx,r13
  41a501:	mov    ecx,0x21
  41a506:	jmp    4199e6 <main@@Base+0x12bc6>
  41a50b:	mov    rbx,r12
  41a50e:	jmp    419a33 <main@@Base+0x12c13>
  41a513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a51d:	nop    DWORD PTR [rax]
  41a520:	inc    dil
  41a523:	cmp    dil,0xc
  41a527:	ja     41a538 <main@@Base+0x13718>
  41a529:	movsx  rax,dil
  41a52d:	lea    rcx,[rip+0x1853c]        # 432a70 <_IO_stdin_used@@Base+0xa70>
  41a534:	mov    eax,DWORD PTR [rcx+rax*4]
  41a537:	ret    
  41a538:	xor    eax,eax
  41a53a:	ret    
  41a53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a540:	push   rbp
  41a541:	push   r15
  41a543:	push   r14
  41a545:	push   r13
  41a547:	push   r12
  41a549:	push   rbx
  41a54a:	sub    rsp,0x18
  41a54e:	mov    r13,rcx
  41a551:	mov    r15,rdx
  41a554:	mov    rbx,rsi
  41a557:	mov    r14,rdi
  41a55a:	mov    DWORD PTR [rcx],0x0
  41a560:	mov    rdi,QWORD PTR [rdi]
  41a563:	mov    esi,0x4
  41a568:	mov    edx,0x4
  41a56d:	call   41cd70 <flatcc_builder_start_struct@@Base>
  41a572:	test   rax,rax
  41a575:	je     41aa17 <main@@Base+0x13bf7>
  41a57b:	cmp    rbx,r15
  41a57e:	je     41a5ae <main@@Base+0x1378e>
  41a580:	cmp    BYTE PTR [rbx],0x7b
  41a583:	jne    41a5ae <main@@Base+0x1378e>
  41a585:	mov    r12,rax
  41a588:	lea    rax,[rbx+0x1]
  41a58c:	mov    rcx,r15
  41a58f:	sub    rcx,rax
  41a592:	cmp    rcx,0x2
  41a596:	jl     41a5ec <main@@Base+0x137cc>
  41a598:	cmp    BYTE PTR [rax],0x20
  41a59b:	jg     41a5fa <main@@Base+0x137da>
  41a59d:	jne    41a5ec <main@@Base+0x137cc>
  41a59f:	cmp    BYTE PTR [rbx+0x2],0x20
  41a5a3:	jle    41a5ec <main@@Base+0x137cc>
  41a5a5:	add    rbx,0x2
  41a5a9:	mov    rax,rbx
  41a5ac:	jmp    41a5fa <main@@Base+0x137da>
  41a5ae:	mov    rdi,r14
  41a5b1:	mov    rsi,rbx
  41a5b4:	mov    rdx,r15
  41a5b7:	mov    ecx,0x15
  41a5bc:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a5c1:	mov    rbp,rax
  41a5c4:	mov    rbx,r15
  41a5c7:	cmp    rbp,r15
  41a5ca:	je     41aa17 <main@@Base+0x13bf7>
  41a5d0:	mov    rdi,QWORD PTR [r14]
  41a5d3:	call   41ce40 <flatcc_builder_end_struct@@Base>
  41a5d8:	mov    DWORD PTR [r13+0x0],eax
  41a5dc:	mov    rbx,rbp
  41a5df:	test   eax,eax
  41a5e1:	jne    41aa2d <main@@Base+0x13c0d>
  41a5e7:	jmp    41aa17 <main@@Base+0x13bf7>
  41a5ec:	mov    rdi,r14
  41a5ef:	mov    rsi,rax
  41a5f2:	mov    rdx,r15
  41a5f5:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a5fa:	mov    rcx,r15
  41a5fd:	cmp    rax,r15
  41a600:	je     41a60e <main@@Base+0x137ee>
  41a602:	cmp    BYTE PTR [rax],0x7d
  41a605:	je     41aa44 <main@@Base+0x13c24>
  41a60b:	mov    rcx,rax
  41a60e:	mov    QWORD PTR [rsp+0x8],r13
  41a613:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a61d:	nop    DWORD PTR [rax]
  41a620:	mov    rsi,r15
  41a623:	cmp    rcx,r15
  41a626:	je     41a656 <main@@Base+0x13836>
  41a628:	cmp    BYTE PTR [rcx],0x22
  41a62b:	jne    41a640 <main@@Base+0x13820>
  41a62d:	inc    rcx
  41a630:	mov    rsi,rcx
  41a633:	jmp    41a656 <main@@Base+0x13836>
  41a635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a63f:	nop
  41a640:	mov    rdi,r14
  41a643:	mov    rsi,rcx
  41a646:	mov    rdx,r15
  41a649:	mov    ecx,0x5
  41a64e:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a653:	mov    rsi,rax
  41a656:	mov    rax,r15
  41a659:	sub    rax,rsi
  41a65c:	cmp    rax,0x8
  41a660:	jb     41a670 <main@@Base+0x13850>
  41a662:	movbe  rax,QWORD PTR [rsi]
  41a667:	jmp    41a6ec <main@@Base+0x138cc>
  41a66c:	nop    DWORD PTR [rax+0x0]
  41a670:	dec    rax
  41a673:	cmp    rax,0x6
  41a677:	ja     41a720 <main@@Base+0x13900>
  41a67d:	lea    rcx,[rip+0x18308]        # 43298c <_IO_stdin_used@@Base+0x98c>
  41a684:	mov    rdx,rcx
  41a687:	movsxd rcx,DWORD PTR [rcx+rax*4]
  41a68b:	add    rcx,rdx
  41a68e:	xor    r8d,r8d
  41a691:	xor    eax,eax
  41a693:	xor    edx,edx
  41a695:	xor    edi,edi
  41a697:	xor    ebp,ebp
  41a699:	xor    ebx,ebx
  41a69b:	jmp    rcx
  41a69d:	movsx  r8,BYTE PTR [rsi+0x6]
  41a6a2:	shl    r8,0x8
  41a6a6:	movsx  rax,BYTE PTR [rsi+0x5]
  41a6ab:	shl    rax,0x10
  41a6af:	or     rax,r8
  41a6b2:	movsx  rdx,BYTE PTR [rsi+0x4]
  41a6b7:	shl    rdx,0x18
  41a6bb:	or     rdx,rax
  41a6be:	movsx  rdi,BYTE PTR [rsi+0x3]
  41a6c3:	shl    rdi,0x20
  41a6c7:	or     rdi,rdx
  41a6ca:	movsx  rbp,BYTE PTR [rsi+0x2]
  41a6cf:	shl    rbp,0x28
  41a6d3:	or     rbp,rdi
  41a6d6:	movsx  rbx,BYTE PTR [rsi+0x1]
  41a6db:	shl    rbx,0x30
  41a6df:	or     rbx,rbp
  41a6e2:	movzx  eax,BYTE PTR [rsi]
  41a6e5:	shl    rax,0x38
  41a6e9:	or     rax,rbx
  41a6ec:	movabs rcx,0x626f6f6b735f7265
  41a6f6:	cmp    rax,rcx
  41a6f9:	jne    41a720 <main@@Base+0x13900>
  41a6fb:	lea    r13,[rsi+0x8]
  41a6ff:	mov    rax,r15
  41a702:	sub    rax,r13
  41a705:	cmp    rax,0x8
  41a709:	jb     41a730 <main@@Base+0x13910>
  41a70b:	movbe  rcx,QWORD PTR [r13+0x0]
  41a711:	jmp    41a7ad <main@@Base+0x1398d>
  41a716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a720:	mov    rdi,r14
  41a723:	mov    rdx,r15
  41a726:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41a72b:	jmp    41a8f3 <main@@Base+0x13ad3>
  41a730:	lea    rcx,[rax-0x1]
  41a734:	cmp    rcx,0x6
  41a738:	ja     41a8e0 <main@@Base+0x13ac0>
  41a73e:	lea    rdx,[rip+0x18263]        # 4329a8 <_IO_stdin_used@@Base+0x9a8>
  41a745:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41a749:	add    rcx,rdx
  41a74c:	xor    r8d,r8d
  41a74f:	xor    r9d,r9d
  41a752:	xor    edi,edi
  41a754:	xor    ebp,ebp
  41a756:	xor    ebx,ebx
  41a758:	xor    edx,edx
  41a75a:	jmp    rcx
  41a75c:	movsx  r8,BYTE PTR [rsi+0xe]
  41a761:	shl    r8,0x8
  41a765:	movsx  r9,BYTE PTR [rsi+0xd]
  41a76a:	shl    r9,0x10
  41a76e:	or     r9,r8
  41a771:	movsx  rdi,BYTE PTR [rsi+0xc]
  41a776:	shl    rdi,0x18
  41a77a:	or     rdi,r9
  41a77d:	movsx  rbp,BYTE PTR [rsi+0xb]
  41a782:	shl    rbp,0x20
  41a786:	or     rbp,rdi
  41a789:	movsx  rbx,BYTE PTR [rsi+0xa]
  41a78e:	shl    rbx,0x28
  41a792:	or     rbx,rbp
  41a795:	movsx  rdx,BYTE PTR [rsi+0x9]
  41a79a:	shl    rdx,0x30
  41a79e:	or     rdx,rbx
  41a7a1:	movzx  ecx,BYTE PTR [r13+0x0]
  41a7a6:	shl    rcx,0x38
  41a7aa:	or     rcx,rdx
  41a7ad:	shr    rcx,0x30
  41a7b1:	cmp    rcx,0x6164
  41a7b8:	jne    41a8e0 <main@@Base+0x13ac0>
  41a7be:	cmp    rax,0x3
  41a7c2:	jl     41a8e0 <main@@Base+0x13ac0>
  41a7c8:	cmp    BYTE PTR [rsi+0xa],0x22
  41a7cc:	jne    41a8e0 <main@@Base+0x13ac0>
  41a7d2:	lea    rax,[rsi+0xb]
  41a7d6:	mov    rcx,r15
  41a7d9:	sub    rcx,rax
  41a7dc:	cmp    rcx,0x2
  41a7e0:	jl     41a7fd <main@@Base+0x139dd>
  41a7e2:	cmp    BYTE PTR [rax],0x20
  41a7e5:	jg     41a80b <main@@Base+0x139eb>
  41a7e7:	jne    41a7fd <main@@Base+0x139dd>
  41a7e9:	cmp    BYTE PTR [rsi+0xc],0x20
  41a7ed:	jle    41a7fd <main@@Base+0x139dd>
  41a7ef:	add    rsi,0xc
  41a7f3:	mov    rax,rsi
  41a7f6:	cmp    rax,r15
  41a7f9:	jne    41a810 <main@@Base+0x139f0>
  41a7fb:	jmp    41a839 <main@@Base+0x13a19>
  41a7fd:	mov    rdi,r14
  41a800:	mov    rsi,rax
  41a803:	mov    rdx,r15
  41a806:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a80b:	cmp    rax,r15
  41a80e:	je     41a839 <main@@Base+0x13a19>
  41a810:	cmp    BYTE PTR [rax],0x3a
  41a813:	jne    41a839 <main@@Base+0x13a19>
  41a815:	lea    rbp,[rax+0x1]
  41a819:	mov    rcx,r15
  41a81c:	sub    rcx,rbp
  41a81f:	cmp    rcx,0x2
  41a823:	jl     41a84e <main@@Base+0x13a2e>
  41a825:	cmp    BYTE PTR [rbp+0x0],0x20
  41a829:	jg     41a85f <main@@Base+0x13a3f>
  41a82b:	jne    41a84e <main@@Base+0x13a2e>
  41a82d:	cmp    BYTE PTR [rax+0x2],0x20
  41a831:	jle    41a84e <main@@Base+0x13a2e>
  41a833:	add    rax,0x2
  41a837:	jmp    41a85c <main@@Base+0x13a3c>
  41a839:	mov    rdi,r14
  41a83c:	mov    rsi,rax
  41a83f:	mov    rdx,r15
  41a842:	mov    ecx,0x4
  41a847:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a84c:	jmp    41a85c <main@@Base+0x13a3c>
  41a84e:	mov    rdi,r14
  41a851:	mov    rsi,rbp
  41a854:	mov    rdx,r15
  41a857:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a85c:	mov    rbp,rax
  41a85f:	cmp    r13,rbp
  41a862:	je     41a8e0 <main@@Base+0x13ac0>
  41a864:	mov    QWORD PTR [rsp+0x10],0x0
  41a86d:	mov    DWORD PTR [rsp+0x4],0x0
  41a875:	mov    DWORD PTR [rsp],0x0
  41a87c:	xor    r13d,r13d
  41a87f:	cmp    rbp,r15
  41a882:	je     41a998 <main@@Base+0x13b78>
  41a888:	mov    rdi,r14
  41a88b:	mov    rsi,rbp
  41a88e:	mov    rdx,r15
  41a891:	lea    rcx,[rsp+0x4]
  41a896:	lea    r8,[rsp+0x10]
  41a89b:	call   424130 <flatcc_json_parser_integer@@Base>
  41a8a0:	cmp    rax,rbp
  41a8a3:	je     41a9a2 <main@@Base+0x13b82>
  41a8a9:	mov    rcx,QWORD PTR [rsp+0x10]
  41a8ae:	cmp    DWORD PTR [rsp+0x4],0x0
  41a8b3:	je     41a9ac <main@@Base+0x13b8c>
  41a8b9:	mov    edx,0x80000001
  41a8be:	cmp    rcx,rdx
  41a8c1:	jb     41a9cf <main@@Base+0x13baf>
  41a8c7:	mov    rdi,r14
  41a8ca:	mov    rsi,rax
  41a8cd:	mov    rdx,r15
  41a8d0:	mov    ecx,0x8
  41a8d5:	jmp    41a9c3 <main@@Base+0x13ba3>
  41a8da:	nop    WORD PTR [rax+rax*1+0x0]
  41a8e0:	mov    rdi,r14
  41a8e3:	mov    rsi,r13
  41a8e6:	mov    rdx,r15
  41a8e9:	call   422bb0 <flatcc_json_parser_unmatched_symbol@@Base>
  41a8ee:	mov    r13,QWORD PTR [rsp+0x8]
  41a8f3:	mov    rcx,r15
  41a8f6:	sub    rcx,rax
  41a8f9:	cmp    rcx,0x2
  41a8fd:	jl     41a920 <main@@Base+0x13b00>
  41a8ff:	cmp    BYTE PTR [rax],0x20
  41a902:	jg     41a92e <main@@Base+0x13b0e>
  41a904:	jne    41a920 <main@@Base+0x13b00>
  41a906:	cmp    BYTE PTR [rax+0x1],0x20
  41a90a:	jle    41a920 <main@@Base+0x13b00>
  41a90c:	inc    rax
  41a90f:	cmp    rax,r15
  41a912:	jne    41a937 <main@@Base+0x13b17>
  41a914:	jmp    41aa14 <main@@Base+0x13bf4>
  41a919:	nop    DWORD PTR [rax+0x0]
  41a920:	mov    rdi,r14
  41a923:	mov    rsi,rax
  41a926:	mov    rdx,r15
  41a929:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a92e:	cmp    rax,r15
  41a931:	je     41aa14 <main@@Base+0x13bf4>
  41a937:	movzx  ecx,BYTE PTR [rax]
  41a93a:	cmp    cl,0x2c
  41a93d:	jne    41aa3f <main@@Base+0x13c1f>
  41a943:	lea    rcx,[rax+0x1]
  41a947:	mov    rdx,r15
  41a94a:	sub    rdx,rcx
  41a94d:	cmp    rdx,0x2
  41a951:	jl     41a970 <main@@Base+0x13b50>
  41a953:	cmp    BYTE PTR [rcx],0x20
  41a956:	jg     41a981 <main@@Base+0x13b61>
  41a958:	jne    41a970 <main@@Base+0x13b50>
  41a95a:	cmp    BYTE PTR [rax+0x2],0x20
  41a95e:	jle    41a970 <main@@Base+0x13b50>
  41a960:	add    rax,0x2
  41a964:	jmp    41a97e <main@@Base+0x13b5e>
  41a966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a970:	mov    rdi,r14
  41a973:	mov    rsi,rcx
  41a976:	mov    rdx,r15
  41a979:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41a97e:	mov    rcx,rax
  41a981:	cmp    rcx,r15
  41a984:	je     41aa6f <main@@Base+0x13c4f>
  41a98a:	cmp    BYTE PTR [rcx],0x7d
  41a98d:	jne    41a620 <main@@Base+0x13800>
  41a993:	jmp    41aa77 <main@@Base+0x13c57>
  41a998:	mov    rax,r15
  41a99b:	cmp    rbp,rax
  41a99e:	jne    41aa0b <main@@Base+0x13beb>
  41a9a0:	jmp    41a9dd <main@@Base+0x13bbd>
  41a9a2:	mov    rax,rbp
  41a9a5:	cmp    rbp,rax
  41a9a8:	jne    41aa0b <main@@Base+0x13beb>
  41a9aa:	jmp    41a9dd <main@@Base+0x13bbd>
  41a9ac:	test   rcx,0xffffffff80000000
  41a9b3:	je     41a9d2 <main@@Base+0x13bb2>
  41a9b5:	mov    rdi,r14
  41a9b8:	mov    rsi,rax
  41a9bb:	mov    rdx,r15
  41a9be:	mov    ecx,0x7
  41a9c3:	call   422690 <flatcc_json_parser_set_error@@Base>
  41a9c8:	cmp    rbp,rax
  41a9cb:	jne    41aa0b <main@@Base+0x13beb>
  41a9cd:	jmp    41a9dd <main@@Base+0x13bbd>
  41a9cf:	neg    rcx
  41a9d2:	mov    DWORD PTR [rsp],ecx
  41a9d5:	mov    r13d,ecx
  41a9d8:	cmp    rbp,rax
  41a9db:	jne    41aa0b <main@@Base+0x13beb>
  41a9dd:	mov    rdi,r14
  41a9e0:	mov    rsi,rbp
  41a9e3:	mov    rdx,r15
  41a9e6:	lea    rcx,[rip+0x25d33]        # 440720 <__data_start@@Base+0x670>
  41a9ed:	mov    r8,rsp
  41a9f0:	call   413920 <main@@Base+0xcb00>
  41a9f5:	cmp    rax,rbp
  41a9f8:	je     41aacb <main@@Base+0x13cab>
  41a9fe:	cmp    rax,r15
  41aa01:	je     41aacb <main@@Base+0x13cab>
  41aa07:	mov    r13d,DWORD PTR [rsp]
  41aa0b:	mov    DWORD PTR [r12],r13d
  41aa0f:	jmp    41a8ee <main@@Base+0x13ace>
  41aa14:	mov    rbx,r15
  41aa17:	mov    rdi,r14
  41aa1a:	mov    rsi,rbx
  41aa1d:	mov    rdx,r15
  41aa20:	mov    ecx,0x21
  41aa25:	call   422690 <flatcc_json_parser_set_error@@Base>
  41aa2a:	mov    rbp,rax
  41aa2d:	mov    rax,rbp
  41aa30:	add    rsp,0x18
  41aa34:	pop    rbx
  41aa35:	pop    r12
  41aa37:	pop    r13
  41aa39:	pop    r14
  41aa3b:	pop    r15
  41aa3d:	pop    rbp
  41aa3e:	ret    
  41aa3f:	cmp    cl,0x7d
  41aa42:	jne    41aab8 <main@@Base+0x13c98>
  41aa44:	lea    rbp,[rax+0x1]
  41aa48:	mov    rcx,r15
  41aa4b:	sub    rcx,rbp
  41aa4e:	cmp    rcx,0x2
  41aa52:	jl     41aaa5 <main@@Base+0x13c85>
  41aa54:	cmp    BYTE PTR [rbp+0x0],0x20
  41aa58:	jg     41a5c4 <main@@Base+0x137a4>
  41aa5e:	jne    41aaa5 <main@@Base+0x13c85>
  41aa60:	cmp    BYTE PTR [rax+0x2],0x20
  41aa64:	jle    41aaa5 <main@@Base+0x13c85>
  41aa66:	add    rax,0x2
  41aa6a:	jmp    41a5c1 <main@@Base+0x137a1>
  41aa6f:	mov    rdi,r14
  41aa72:	mov    rsi,r15
  41aa75:	jmp    41aabe <main@@Base+0x13c9e>
  41aa77:	lea    rbp,[rcx+0x1]
  41aa7b:	mov    rax,r15
  41aa7e:	sub    rax,rbp
  41aa81:	cmp    rax,0x2
  41aa85:	jl     41aaa5 <main@@Base+0x13c85>
  41aa87:	cmp    BYTE PTR [rbp+0x0],0x20
  41aa8b:	jg     41a5c4 <main@@Base+0x137a4>
  41aa91:	jne    41aaa5 <main@@Base+0x13c85>
  41aa93:	cmp    BYTE PTR [rcx+0x2],0x20
  41aa97:	jle    41aaa5 <main@@Base+0x13c85>
  41aa99:	add    rcx,0x2
  41aa9d:	mov    rbp,rcx
  41aaa0:	jmp    41a5c4 <main@@Base+0x137a4>
  41aaa5:	mov    rdi,r14
  41aaa8:	mov    rsi,rbp
  41aaab:	mov    rdx,r15
  41aaae:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41aab3:	jmp    41a5c1 <main@@Base+0x137a1>
  41aab8:	mov    rdi,r14
  41aabb:	mov    rsi,rax
  41aabe:	mov    rdx,r15
  41aac1:	mov    ecx,0xa
  41aac6:	jmp    41a5bc <main@@Base+0x1379c>
  41aacb:	mov    rdi,r14
  41aace:	mov    rsi,rax
  41aad1:	mov    rdx,r15
  41aad4:	mov    ecx,0x21
  41aad9:	call   422690 <flatcc_json_parser_set_error@@Base>
  41aade:	mov    rbp,rax
  41aae1:	mov    r13,QWORD PTR [rsp+0x8]
  41aae6:	jmp    41a5c4 <main@@Base+0x137a4>
  41aaeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41aaf0:	push   rbp
  41aaf1:	push   r15
  41aaf3:	push   r14
  41aaf5:	push   r13
  41aaf7:	push   r12
  41aaf9:	push   rbx
  41aafa:	sub    rsp,0x38
  41aafe:	mov    r14,r8
  41ab01:	mov    rbp,rcx
  41ab04:	mov    r12,rdx
  41ab07:	mov    rbx,rsi
  41ab0a:	mov    r15,rdi
  41ab0d:	mov    WORD PTR [r8],0x0
  41ab13:	cmp    rsi,rdx
  41ab16:	je     41ab38 <main@@Base+0x13d18>
  41ab18:	cmp    BYTE PTR [rbx],0x22
  41ab1b:	jne    41ab22 <main@@Base+0x13d02>
  41ab1d:	inc    rbx
  41ab20:	jmp    41ab38 <main@@Base+0x13d18>
  41ab22:	mov    rdi,r15
  41ab25:	mov    rsi,rbx
  41ab28:	mov    rdx,r12
  41ab2b:	mov    ecx,0x5
  41ab30:	call   422690 <flatcc_json_parser_set_error@@Base>
  41ab35:	mov    rbx,rax
  41ab38:	mov    rax,r12
  41ab3b:	sub    rax,rbx
  41ab3e:	cmp    rax,0x2
  41ab42:	jl     41ab5e <main@@Base+0x13d3e>
  41ab44:	cmp    BYTE PTR [rbx],0x20
  41ab47:	jg     41ab6f <main@@Base+0x13d4f>
  41ab49:	jne    41ab5e <main@@Base+0x13d3e>
  41ab4b:	cmp    BYTE PTR [rbx+0x1],0x20
  41ab4f:	jle    41ab5e <main@@Base+0x13d3e>
  41ab51:	inc    rbx
  41ab54:	cmp    rbx,r12
  41ab57:	jne    41ab78 <main@@Base+0x13d58>
  41ab59:	jmp    41ac6d <main@@Base+0x13e4d>
  41ab5e:	mov    rdi,r15
  41ab61:	mov    rsi,rbx
  41ab64:	mov    rdx,r12
  41ab67:	call   422710 <flatcc_json_parser_space_ext@@Base>
  41ab6c:	mov    rbx,rax
  41ab6f:	cmp    rbx,r12
  41ab72:	je     41ac6d <main@@Base+0x13e4d>
  41ab78:	lea    rax,[rbp+0x8]
  41ab7c:	mov    DWORD PTR [rsp+0xc],0x0
  41ab84:	mov    QWORD PTR [rsp+0x20],r14
  41ab89:	mov    QWORD PTR [rsp+0x18],rbp
  41ab8e:	mov    QWORD PTR [rsp+0x28],rax
  41ab93:	mov    rbp,QWORD PTR [rbp+0x0]
  41ab97:	mov    r14,rax
  41ab9a:	nop    WORD PTR [rax+rax*1+0x0]
  41aba0:	mov    rdi,r15
  41aba3:	mov    rsi,rbx
  41aba6:	mov    rdx,r12
  41aba9:	lea    rcx,[rsp+0x14]
  41abae:	lea    r8,[rsp+0x30]
  41abb3:	lea    r9,[rsp+0x10]
  41abb8:	call   rbp
  41abba:	cmp    rax,r12
  41abbd:	je     41ac6d <main@@Base+0x13e4d>
  41abc3:	mov    r13,rax
  41abc6:	cmp    rax,rbx
  41abc9:	jne    41abe0 <main@@Base+0x13dc0>
  41abcb:	mov    rbp,QWORD PTR [r14]
  41abce:	add    r14,0x8
  41abd2:	test   rbp,rbp
  41abd5:	jne    41aba0 <main@@Base+0x13d80>
  41abd7:	jmp    41ac72 <main@@Base+0x13e52>
  41abdc:	nop    DWORD PTR [rax+0x0]
  41abe0:	cmp    DWORD PTR [rsp+0x14],0x0
  41abe5:	je     41ac0b <main@@Base+0x13deb>
  41abe7:	mov    rdi,r15
  41abea:	mov    rsi,r13
  41abed:	mov    rdx,r12
  41abf0:	mov    ecx,0x8
  41abf5:	call   422690 <flatcc_json_parser_set_error@@Base>
  41abfa:	mov    r14,QWORD PTR [rsp+0x20]
  41abff:	mov    rbp,QWORD PTR [rsp+0x18]
  41ac04:	cmp    rax,r12
  41ac07:	jne    41ac50 <main@@Base+0x13e30>
  41ac09:	jmp    41ac6d <main@@Base+0x13e4d>
  41ac0b:	mov    rax,QWORD PTR [rsp+0x30]
  41ac10:	cmp    rax,0x10000
  41ac16:	mov    r14,QWORD PTR [rsp+0x20]
  41ac1b:	mov    rbp,QWORD PTR [rsp+0x18]
  41ac20:	jb     41ac3c <main@@Base+0x13e1c>
  41ac22:	mov    rdi,r15
  41ac25:	mov    rsi,r13
  41ac28:	mov    rdx,r12
  41ac2b:	mov    ecx,0x7
  41ac30:	call   422690 <flatcc_json_parser_set_error@@Base>
  41ac35:	cmp    rax,r12
  41ac38:	jne    41ac50 <main@@Base+0x13e30>
  41ac3a:	jmp    41ac6d <main@@Base+0x13e4d>
  41ac3c:	mov    DWORD PTR [rsp+0xc],eax
  41ac40:	mov    rax,r13
  41ac43:	cmp    rax,r12
  41ac46:	je     41ac6d <main@@Base+0x13e4d>
  41ac48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac50:	mov    eax,DWORD PTR [rsp+0xc]
  41ac54:	add    WORD PTR [r14],ax
  41ac58:	cmp    DWORD PTR [rsp+0x10],0x0
  41ac5d:	mov    rbx,r13
  41ac60:	mov    rax,QWORD PTR [rsp+0x28]
  41ac65:	jne    41ab93 <main@@Base+0x13d73>
  41ac6b:	jmp    41ac88 <main@@Base+0x13e68>
  41ac6d:	mov    r13,r12
  41ac70:	jmp    41ac88 <main@@Base+0x13e68>
  41ac72:	mov    rdi,r15
  41ac75:	mov    rsi,rbx
  41ac78:	mov    rdx,r12
  41ac7b:	mov    ecx,0x17
  41ac80:	call   422690 <flatcc_json_parser_set_error@@Base>
  41ac85:	mov    r13,rax
  41ac88:	mov    rax,r13
  41ac8b:	add    rsp,0x38
  41ac8f:	pop    rbx
  41ac90:	pop    r12
  41ac92:	pop    r13
  41ac94:	pop    r14
  41ac96:	pop    r15
  41ac98:	pop    rbp
  41ac99:	ret    
  41ac9a:	nop    WORD PTR [rax+rax*1+0x0]
  41aca0:	push   r14
  41aca2:	push   rbx
  41aca3:	push   rax
  41aca4:	mov    r14,rsi
  41aca7:	mov    rbx,rdi
  41acaa:	lea    r8,[rip+0x1a99e]        # 43564f <_IO_stdin_used@@Base+0x364f>
  41acb1:	xor    esi,esi
  41acb3:	mov    rdx,r14
  41acb6:	xor    ecx,ecx
  41acb8:	mov    r9d,0x1
  41acbe:	call   429860 <flatcc_json_printer_float_struct_field@@Base>
  41acc3:	lea    r8,[rip+0x1d437]        # 438101 <flatcc_builder_padding_base@@Base+0x26e1>
  41acca:	mov    ecx,0x4
  41accf:	mov    rdi,rbx
  41acd2:	mov    esi,0x1
  41acd7:	mov    rdx,r14
  41acda:	mov    r9d,0x1
  41ace0:	call   429860 <flatcc_json_printer_float_struct_field@@Base>
  41ace5:	lea    r8,[rip+0x1ab1c]        # 435808 <_IO_stdin_used@@Base+0x3808>
  41acec:	mov    ecx,0x8
  41acf1:	mov    rdi,rbx
  41acf4:	mov    esi,0x2
  41acf9:	mov    rdx,r14
  41acfc:	mov    r9d,0x1
  41ad02:	call   429860 <flatcc_json_printer_float_struct_field@@Base>
  41ad07:	lea    r8,[rip+0x1aafc]        # 43580a <_IO_stdin_used@@Base+0x380a>
  41ad0e:	mov    ecx,0x10
  41ad13:	mov    rdi,rbx
  41ad16:	mov    esi,0x3
  41ad1b:	mov    rdx,r14
  41ad1e:	mov    r9d,0x5
  41ad24:	call   4298c0 <flatcc_json_printer_double_struct_field@@Base>
  41ad29:	lea    rax,[rip+0x60]        # 41ad90 <main@@Base+0x13f70>
  41ad30:	mov    QWORD PTR [rsp],rax
  41ad34:	lea    r8,[rip+0x1aad5]        # 435810 <_IO_stdin_used@@Base+0x3810>
  41ad3b:	mov    ecx,0x18
  41ad40:	mov    rdi,rbx
  41ad43:	mov    esi,0x4
  41ad48:	mov    rdx,r14
  41ad4b:	mov    r9d,0x5
  41ad51:	call   429c20 <flatcc_json_printer_int8_enum_struct_field@@Base>
  41ad56:	lea    rax,[rip+0x1b3]        # 41af10 <main@@Base+0x140f0>
  41ad5d:	mov    QWORD PTR [rsp],rax
  41ad61:	lea    r8,[rip+0x1aaae]        # 435816 <_IO_stdin_used@@Base+0x3816>
  41ad68:	mov    ecx,0x1a
  41ad6d:	mov    rdi,rbx
  41ad70:	mov    esi,0x5
  41ad75:	mov    rdx,r14
  41ad78:	mov    r9d,0x5
  41ad7e:	call   4307e0 <flatcc_json_printer_embedded_struct_field@@Base>
  41ad83:	add    rsp,0x8
  41ad87:	pop    rbx
  41ad88:	pop    r14
  41ad8a:	ret    
  41ad8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad90:	push   rbp
  41ad91:	push   r15
  41ad93:	push   r14
  41ad95:	push   rbx
  41ad96:	push   rax
  41ad97:	mov    ebp,esi
  41ad99:	mov    rbx,rdi
  41ad9c:	movzx  ecx,bpl
  41ada0:	xor    r14d,r14d
  41ada3:	blsr   eax,ecx
  41ada8:	setne  al
  41adab:	test   cl,cl
  41adad:	je     41ae04 <main@@Base+0x13fe4>
  41adaf:	mov    ecx,ebp
  41adb1:	and    ecx,0xf4
  41adb7:	jne    41ae04 <main@@Base+0x13fe4>
  41adb9:	mov    r14b,al
  41adbc:	mov    rdi,rbx
  41adbf:	mov    esi,r14d
  41adc2:	call   4279e0 <flatcc_json_printer_delimit_enum_flags@@Base>
  41adc7:	xor    esi,esi
  41adc9:	test   bpl,0x1
  41adcd:	jne    41ae1a <main@@Base+0x13ffa>
  41adcf:	test   bpl,0x2
  41add3:	jne    41ae3b <main@@Base+0x1401b>
  41add5:	test   bpl,0x8
  41add9:	je     41adef <main@@Base+0x13fcf>
  41addb:	lea    rdx,[rip+0x1aa44]        # 435826 <_IO_stdin_used@@Base+0x3826>
  41ade2:	mov    rdi,rbx
  41ade5:	mov    ecx,0x4
  41adea:	call   427a00 <flatcc_json_printer_enum_flag@@Base>
  41adef:	mov    rdi,rbx
  41adf2:	mov    esi,r14d
  41adf5:	add    rsp,0x8
  41adf9:	pop    rbx
  41adfa:	pop    r14
  41adfc:	pop    r15
  41adfe:	pop    rbp
  41adff:	jmp    4279e0 <flatcc_json_printer_delimit_enum_flags@@Base>
  41ae04:	movsx  esi,bpl
  41ae08:	mov    rdi,rbx
  41ae0b:	add    rsp,0x8
  41ae0f:	pop    rbx
  41ae10:	pop    r14
  41ae12:	pop    r15
  41ae14:	pop    rbp
  41ae15:	jmp    427650 <flatcc_json_printer_int8@@Base>
  41ae1a:	lea    rdx,[rip+0x1a9fb]        # 43581c <_IO_stdin_used@@Base+0x381c>
  41ae21:	mov    rdi,rbx
  41ae24:	xor    esi,esi
  41ae26:	mov    ecx,0x3
  41ae2b:	call   427a00 <flatcc_json_printer_enum_flag@@Base>
  41ae30:	mov    esi,0x1
  41ae35:	test   bpl,0x2
  41ae39:	je     41add5 <main@@Base+0x13fb5>
  41ae3b:	lea    r15d,[rsi+0x1]
  41ae3f:	lea    rdx,[rip+0x1a9da]        # 435820 <_IO_stdin_used@@Base+0x3820>
  41ae46:	mov    rdi,rbx
  41ae49:	mov    ecx,0x5
  41ae4e:	call   427a00 <flatcc_json_printer_enum_flag@@Base>
  41ae53:	mov    esi,r15d
  41ae56:	test   bpl,0x8
  41ae5a:	jne    41addb <main@@Base+0x13fbb>
  41ae60:	jmp    41adef <main@@Base+0x13fcf>
  41ae62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae6c:	nop    DWORD PTR [rax+0x0]
  41ae70:	dec    sil
  41ae73:	cmp    sil,0x3
  41ae77:	ja     41ae9e <main@@Base+0x1407e>
  41ae79:	movzx  eax,sil
  41ae7d:	lea    rcx,[rip+0x17b40]        # 4329c4 <_IO_stdin_used@@Base+0x9c4>
  41ae84:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ae88:	add    rax,rcx
  41ae8b:	jmp    rax
  41ae8d:	lea    rsi,[rip+0x1a997]        # 43582b <_IO_stdin_used@@Base+0x382b>
  41ae94:	mov    edx,0x7
  41ae99:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41ae9e:	lea    rsi,[rip+0x1c2f5]        # 43719a <flatcc_builder_padding_base@@Base+0x177a>
  41aea5:	mov    edx,0x4
  41aeaa:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41aeaf:	lea    rsi,[rip+0x1a97d]        # 435833 <_IO_stdin_used@@Base+0x3833>
  41aeb6:	mov    edx,0x17
  41aebb:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41aec0:	lea    rsi,[rip+0x1a984]        # 43584b <_IO_stdin_used@@Base+0x384b>
  41aec7:	mov    edx,0x8
  41aecc:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41aed1:	lea    rsi,[rip+0x1a97c]        # 435854 <_IO_stdin_used@@Base+0x3854>
  41aed8:	mov    edx,0x3
  41aedd:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41aee2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aeec:	nop    DWORD PTR [rax+0x0]
  41aef0:	mov    al,BYTE PTR [rsi+0xc]
  41aef3:	dec    al
  41aef5:	cmp    al,0x3
  41aef7:	ja     41af0d <main@@Base+0x140ed>
  41aef9:	movsx  rax,al
  41aefd:	lea    rcx,[rip+0x24c5c]        # 43fb60 <flatcc_builder_padding_base@@Base+0xa140>
  41af04:	mov    rdx,QWORD PTR [rcx+rax*8]
  41af08:	jmp    4305a0 <flatcc_json_printer_union_table@@Base>
  41af0d:	ret    
  41af0e:	xchg   ax,ax
  41af10:	push   r14
  41af12:	push   rbx
  41af13:	push   rax
  41af14:	mov    r14,rsi
  41af17:	mov    rbx,rdi
  41af1a:	lea    r8,[rip+0x1a811]        # 435732 <_IO_stdin_used@@Base+0x3732>
  41af21:	xor    esi,esi
  41af23:	mov    rdx,r14
  41af26:	xor    ecx,ecx
  41af28:	mov    r9d,0x1
  41af2e:	call   4295b0 <flatcc_json_printer_int16_struct_field@@Base>
  41af33:	lea    r8,[rip+0x1a997]        # 4358d1 <_IO_stdin_used@@Base+0x38d1>
  41af3a:	mov    ecx,0x2
  41af3f:	mov    rdi,rbx
  41af42:	mov    esi,0x1
  41af47:	mov    rdx,r14
  41af4a:	mov    r9d,0x1
  41af50:	add    rsp,0x8
  41af54:	pop    rbx
  41af55:	pop    r14
  41af57:	jmp    4294e0 <flatcc_json_printer_int8_struct_field@@Base>
  41af5c:	nop    DWORD PTR [rax+0x0]
  41af60:	push   r14
  41af62:	push   rbx
  41af63:	push   rax
  41af64:	mov    r14,rsi
  41af67:	mov    rbx,rdi
  41af6a:	lea    rcx,[rip+0x1aa57]        # 4359c8 <_IO_stdin_used@@Base+0x39c8>
  41af71:	xor    edx,edx
  41af73:	mov    r8d,0x2
  41af79:	call   427ab0 <flatcc_json_printer_string_field@@Base>
  41af7e:	lea    rcx,[rip+0x1aa46]        # 4359cb <_IO_stdin_used@@Base+0x39cb>
  41af85:	mov    rdi,rbx
  41af88:	mov    rsi,r14
  41af8b:	mov    edx,0x1
  41af90:	mov    r8d,0x3
  41af96:	xor    r9d,r9d
  41af99:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41af9e:	lea    rcx,[rip+0x1b351]        # 4362f6 <flatcc_builder_padding_base@@Base+0x8d6>
  41afa5:	mov    rdi,rbx
  41afa8:	mov    rsi,r14
  41afab:	mov    edx,0x2
  41afb0:	mov    r8d,0x5
  41afb6:	xor    r9d,r9d
  41afb9:	add    rsp,0x8
  41afbd:	pop    rbx
  41afbe:	pop    r14
  41afc0:	jmp    427fa0 <flatcc_json_printer_uint16_field@@Base>
  41afc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afcf:	nop
  41afd0:	push   r14
  41afd2:	push   rbx
  41afd3:	push   rax
  41afd4:	mov    r14,rsi
  41afd7:	mov    rbx,rdi
  41afda:	lea    r8,[rip+0x1a9e7]        # 4359c8 <_IO_stdin_used@@Base+0x39c8>
  41afe1:	xor    esi,esi
  41afe3:	mov    rdx,r14
  41afe6:	xor    ecx,ecx
  41afe8:	mov    r9d,0x2
  41afee:	call   429440 <flatcc_json_printer_uint32_struct_field@@Base>
  41aff3:	lea    r8,[rip+0x1a9d5]        # 4359cf <_IO_stdin_used@@Base+0x39cf>
  41affa:	mov    ecx,0x4
  41afff:	mov    rdi,rbx
  41b002:	mov    esi,0x1
  41b007:	mov    rdx,r14
  41b00a:	mov    r9d,0x8
  41b010:	add    rsp,0x8
  41b014:	pop    rbx
  41b015:	pop    r14
  41b017:	jmp    429440 <flatcc_json_printer_uint32_struct_field@@Base>
  41b01c:	nop    DWORD PTR [rax+0x0]
  41b020:	ret    
  41b021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b02b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b030:	push   r14
  41b032:	push   rbx
  41b033:	push   rax
  41b034:	mov    r14,rsi
  41b037:	mov    rbx,rdi
  41b03a:	lea    rcx,[rip+0x1a99a]        # 4359db <_IO_stdin_used@@Base+0x39db>
  41b041:	xor    edx,edx
  41b043:	mov    r8d,0x4
  41b049:	xor    r9d,r9d
  41b04c:	call   427cc0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41b051:	lea    rcx,[rip+0x1a980]        # 4359d8 <_IO_stdin_used@@Base+0x39d8>
  41b058:	mov    rdi,rbx
  41b05b:	mov    rsi,r14
  41b05e:	mov    edx,0x1
  41b063:	mov    r8d,0x7
  41b069:	mov    r9d,0x1
  41b06f:	call   427cc0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41b074:	lea    rcx,[rip+0x1a965]        # 4359e0 <_IO_stdin_used@@Base+0x39e0>
  41b07b:	mov    rdi,rbx
  41b07e:	mov    rsi,r14
  41b081:	mov    edx,0x2
  41b086:	mov    r8d,0x6
  41b08c:	xor    r9d,r9d
  41b08f:	add    rsp,0x8
  41b093:	pop    rbx
  41b094:	pop    r14
  41b096:	jmp    427cc0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41b09b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b0a0:	push   r15
  41b0a2:	push   r14
  41b0a4:	push   rbx
  41b0a5:	sub    rsp,0x10
  41b0a9:	mov    r14,rsi
  41b0ac:	mov    rbx,rdi
  41b0af:	lea    r15,[rip+0xfffffffffffffcda]        # 41ad90 <main@@Base+0x13f70>
  41b0b6:	mov    QWORD PTR [rsp],r15
  41b0ba:	lea    rcx,[rip+0x1a5bf]        # 435680 <_IO_stdin_used@@Base+0x3680>
  41b0c1:	xor    edx,edx
  41b0c3:	mov    r8d,0x5
  41b0c9:	mov    r9d,0x2
  41b0cf:	call   428cc0 <flatcc_json_printer_int8_enum_field@@Base>
  41b0d4:	mov    QWORD PTR [rsp],r15
  41b0d8:	lea    rcx,[rip+0x1a779]        # 435858 <_IO_stdin_used@@Base+0x3858>
  41b0df:	mov    rdi,rbx
  41b0e2:	mov    rsi,r14
  41b0e5:	mov    edx,0x1
  41b0ea:	mov    r8d,0x6
  41b0f0:	mov    r9d,0x2
  41b0f6:	call   428cc0 <flatcc_json_printer_int8_enum_field@@Base>
  41b0fb:	lea    rcx,[rip+0x1a75d]        # 43585f <_IO_stdin_used@@Base+0x385f>
  41b102:	mov    rdi,rbx
  41b105:	mov    rsi,r14
  41b108:	mov    edx,0x2
  41b10d:	mov    r8d,0x2
  41b113:	mov    r9d,0x2
  41b119:	call   427ea0 <flatcc_json_printer_uint8_field@@Base>
  41b11e:	lea    rcx,[rip+0x1a73d]        # 435862 <_IO_stdin_used@@Base+0x3862>
  41b125:	mov    rdi,rbx
  41b128:	mov    rsi,r14
  41b12b:	mov    edx,0x3
  41b130:	mov    r8d,0x3
  41b136:	mov    r9d,0x2
  41b13c:	add    rsp,0x10
  41b140:	pop    rbx
  41b141:	pop    r14
  41b143:	pop    r15
  41b145:	jmp    427ea0 <flatcc_json_printer_uint8_field@@Base>
  41b14a:	nop    WORD PTR [rax+rax*1+0x0]
  41b150:	ret    
  41b151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b15b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b160:	push   r14
  41b162:	push   rbx
  41b163:	push   rax
  41b164:	mov    r14,rsi
  41b167:	mov    rbx,rdi
  41b16a:	lea    rcx,[rip+0x1a6f5]        # 435866 <_IO_stdin_used@@Base+0x3866>
  41b171:	lea    r9,[rip+0x68]        # 41b1e0 <main@@Base+0x143c0>
  41b178:	xor    edx,edx
  41b17a:	mov    r8d,0x6
  41b180:	call   430010 <flatcc_json_printer_table_field@@Base>
  41b185:	lea    rcx,[rip+0x1a6e1]        # 43586d <_IO_stdin_used@@Base+0x386d>
  41b18c:	lea    r9,[rip+0xcd]        # 41b260 <main@@Base+0x14440>
  41b193:	mov    rdi,rbx
  41b196:	mov    rsi,r14
  41b199:	mov    edx,0x1
  41b19e:	mov    r8d,0x5
  41b1a4:	call   430010 <flatcc_json_printer_table_field@@Base>
  41b1a9:	lea    rax,[rip+0xfffffffffffffd40]        # 41aef0 <main@@Base+0x140d0>
  41b1b0:	mov    QWORD PTR [rsp],rax
  41b1b4:	lea    rcx,[rip+0x1a6b8]        # 435873 <_IO_stdin_used@@Base+0x3873>
  41b1bb:	lea    r9,[rip+0xfffffffffffffcae]        # 41ae70 <main@@Base+0x14050>
  41b1c2:	mov    rdi,rbx
  41b1c5:	mov    rsi,r14
  41b1c8:	mov    edx,0x3
  41b1cd:	mov    r8d,0x7
  41b1d3:	call   42fcd0 <flatcc_json_printer_union_vector_field@@Base>
  41b1d8:	add    rsp,0x8
  41b1dc:	pop    rbx
  41b1dd:	pop    r14
  41b1df:	ret    
  41b1e0:	push   r14
  41b1e2:	push   rbx
  41b1e3:	push   rax
  41b1e4:	mov    r14,rsi
  41b1e7:	mov    rbx,rdi
  41b1ea:	lea    rcx,[rip+0x1a68a]        # 43587b <_IO_stdin_used@@Base+0x387b>
  41b1f1:	lea    r9,[rip+0x148]        # 41b340 <main@@Base+0x14520>
  41b1f8:	xor    edx,edx
  41b1fa:	mov    r8d,0x15
  41b200:	call   430010 <flatcc_json_printer_table_field@@Base>
  41b205:	lea    rcx,[rip+0x1a685]        # 435891 <_IO_stdin_used@@Base+0x3891>
  41b20c:	lea    r9,[rip+0x24d]        # 41b460 <main@@Base+0x14640>
  41b213:	mov    rdi,rbx
  41b216:	mov    rsi,r14
  41b219:	mov    edx,0x1
  41b21e:	mov    r8d,0x16
  41b224:	call   430010 <flatcc_json_printer_table_field@@Base>
  41b229:	lea    rcx,[rip+0x1a678]        # 4358a8 <_IO_stdin_used@@Base+0x38a8>
  41b230:	lea    r9,[rip+0x279]        # 41b4b0 <main@@Base+0x14690>
  41b237:	mov    rdi,rbx
  41b23a:	mov    rsi,r14
  41b23d:	mov    edx,0x2
  41b242:	mov    r8d,0x16
  41b248:	add    rsp,0x8
  41b24c:	pop    rbx
  41b24d:	pop    r14
  41b24f:	jmp    430010 <flatcc_json_printer_table_field@@Base>
  41b254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b25e:	xchg   ax,ax
  41b260:	push   r15
  41b262:	push   r14
  41b264:	push   r12
  41b266:	push   rbx
  41b267:	push   rax
  41b268:	mov    r14,rsi
  41b26b:	mov    rbx,rdi
  41b26e:	lea    r12,[rip+0x32b]        # 41b5a0 <main@@Base+0x14780>
  41b275:	mov    QWORD PTR [rsp],r12
  41b279:	lea    rcx,[rip+0x1a6be]        # 43593e <_IO_stdin_used@@Base+0x393e>
  41b280:	lea    r15,[rip+0x279]        # 41b500 <main@@Base+0x146e0>
  41b287:	mov    edx,0x1
  41b28c:	mov    r8d,0xe
  41b292:	mov    r9,r15
  41b295:	call   4301a0 <flatcc_json_printer_union_field@@Base>
  41b29a:	mov    QWORD PTR [rsp],r12
  41b29e:	lea    rcx,[rip+0x1a6a8]        # 43594d <_IO_stdin_used@@Base+0x394d>
  41b2a5:	mov    rdi,rbx
  41b2a8:	mov    rsi,r14
  41b2ab:	mov    edx,0x3
  41b2b0:	mov    r8d,0xa
  41b2b6:	mov    r9,r15
  41b2b9:	call   4301a0 <flatcc_json_printer_union_field@@Base>
  41b2be:	mov    QWORD PTR [rsp],r12
  41b2c2:	lea    rcx,[rip+0x1a68f]        # 435958 <_IO_stdin_used@@Base+0x3958>
  41b2c9:	mov    rdi,rbx
  41b2cc:	mov    rsi,r14
  41b2cf:	mov    edx,0x5
  41b2d4:	mov    r8d,0x9
  41b2da:	mov    r9,r15
  41b2dd:	call   4301a0 <flatcc_json_printer_union_field@@Base>
  41b2e2:	mov    QWORD PTR [rsp],r12
  41b2e6:	lea    rcx,[rip+0x1a675]        # 435962 <_IO_stdin_used@@Base+0x3962>
  41b2ed:	mov    rdi,rbx
  41b2f0:	mov    rsi,r14
  41b2f3:	mov    edx,0x7
  41b2f8:	mov    r8d,0x5
  41b2fe:	mov    r9,r15
  41b301:	call   4301a0 <flatcc_json_printer_union_field@@Base>
  41b306:	mov    QWORD PTR [rsp],r12
  41b30a:	lea    rcx,[rip+0x1a657]        # 435968 <_IO_stdin_used@@Base+0x3968>
  41b311:	mov    rdi,rbx
  41b314:	mov    rsi,r14
  41b317:	mov    edx,0x9
  41b31c:	mov    r8d,0xa
  41b322:	mov    r9,r15
  41b325:	call   42fcd0 <flatcc_json_printer_union_vector_field@@Base>
  41b32a:	add    rsp,0x8
  41b32e:	pop    rbx
  41b32f:	pop    r12
  41b331:	pop    r14
  41b333:	pop    r15
  41b335:	ret    
  41b336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b340:	push   r14
  41b342:	push   rbx
  41b343:	push   rax
  41b344:	mov    r14,rsi
  41b347:	mov    rbx,rdi
  41b34a:	lea    rcx,[rip+0x1a56e]        # 4358bf <_IO_stdin_used@@Base+0x38bf>
  41b351:	xor    edx,edx
  41b353:	mov    r8d,0x4
  41b359:	call   427ab0 <flatcc_json_printer_string_field@@Base>
  41b35e:	lea    rcx,[rip+0x1a55f]        # 4358c4 <_IO_stdin_used@@Base+0x38c4>
  41b365:	mov    rdi,rbx
  41b368:	mov    rsi,r14
  41b36b:	mov    edx,0x1
  41b370:	mov    r8d,0x9
  41b376:	xor    r9d,r9d
  41b379:	call   428150 <flatcc_json_printer_uint32_field@@Base>
  41b37e:	lea    rcx,[rip+0x1a549]        # 4358ce <_IO_stdin_used@@Base+0x38ce>
  41b385:	mov    rdi,rbx
  41b388:	mov    rsi,r14
  41b38b:	mov    edx,0x2
  41b390:	mov    r8d,0x4
  41b396:	call   427ab0 <flatcc_json_printer_string_field@@Base>
  41b39b:	lea    rcx,[rip+0x1a531]        # 4358d3 <_IO_stdin_used@@Base+0x38d3>
  41b3a2:	mov    rdi,rbx
  41b3a5:	mov    rsi,r14
  41b3a8:	mov    edx,0x3
  41b3ad:	mov    r8d,0x8
  41b3b3:	xor    r9d,r9d
  41b3b6:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41b3bb:	lea    rcx,[rip+0x1a51a]        # 4358dc <_IO_stdin_used@@Base+0x38dc>
  41b3c2:	mov    rdi,rbx
  41b3c5:	mov    rsi,r14
  41b3c8:	mov    edx,0x4
  41b3cd:	mov    r8d,0x4
  41b3d3:	call   427ab0 <flatcc_json_printer_string_field@@Base>
  41b3d8:	lea    rcx,[rip+0x1a502]        # 4358e1 <_IO_stdin_used@@Base+0x38e1>
  41b3df:	mov    rdi,rbx
  41b3e2:	mov    rsi,r14
  41b3e5:	mov    edx,0x5
  41b3ea:	mov    r8d,0x8
  41b3f0:	xor    r9d,r9d
  41b3f3:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41b3f8:	lea    rcx,[rip+0x1a4eb]        # 4358ea <_IO_stdin_used@@Base+0x38ea>
  41b3ff:	mov    rdi,rbx
  41b402:	mov    rsi,r14
  41b405:	mov    edx,0x6
  41b40a:	mov    r8d,0x9
  41b410:	xor    r9d,r9d
  41b413:	call   428150 <flatcc_json_printer_uint32_field@@Base>
  41b418:	lea    rcx,[rip+0x1a4d5]        # 4358f4 <_IO_stdin_used@@Base+0x38f4>
  41b41f:	mov    rdi,rbx
  41b422:	mov    rsi,r14
  41b425:	mov    edx,0x7
  41b42a:	mov    r8d,0x8
  41b430:	xor    r9d,r9d
  41b433:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41b438:	lea    rcx,[rip+0x1a4be]        # 4358fd <_IO_stdin_used@@Base+0x38fd>
  41b43f:	mov    rdi,rbx
  41b442:	mov    rsi,r14
  41b445:	mov    edx,0x8
  41b44a:	mov    r8d,0x9
  41b450:	xor    r9d,r9d
  41b453:	add    rsp,0x8
  41b457:	pop    rbx
  41b458:	pop    r14
  41b45a:	jmp    428150 <flatcc_json_printer_uint32_field@@Base>
  41b45f:	nop
  41b460:	push   r14
  41b462:	push   rbx
  41b463:	push   rax
  41b464:	mov    r14,rsi
  41b467:	mov    rbx,rdi
  41b46a:	lea    rcx,[rip+0x1a496]        # 435907 <_IO_stdin_used@@Base+0x3907>
  41b471:	xor    edx,edx
  41b473:	mov    r8d,0xf
  41b479:	xor    r9d,r9d
  41b47c:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41b481:	lea    rcx,[rip+0x1a48f]        # 435917 <_IO_stdin_used@@Base+0x3917>
  41b488:	mov    rdi,rbx
  41b48b:	mov    rsi,r14
  41b48e:	mov    edx,0x1
  41b493:	mov    r8d,0x10
  41b499:	xor    r9d,r9d
  41b49c:	add    rsp,0x8
  41b4a0:	pop    rbx
  41b4a1:	pop    r14
  41b4a3:	jmp    428150 <flatcc_json_printer_uint32_field@@Base>
  41b4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b4b0:	push   r14
  41b4b2:	push   rbx
  41b4b3:	push   rax
  41b4b4:	mov    r14,rsi
  41b4b7:	mov    rbx,rdi
  41b4ba:	lea    rcx,[rip+0x1a446]        # 435907 <_IO_stdin_used@@Base+0x3907>
  41b4c1:	xor    edx,edx
  41b4c3:	mov    r8d,0xf
  41b4c9:	xor    r9d,r9d
  41b4cc:	call   4285f0 <flatcc_json_printer_int64_field@@Base>
  41b4d1:	lea    rcx,[rip+0x1a450]        # 435928 <_IO_stdin_used@@Base+0x3928>
  41b4d8:	mov    rdi,rbx
  41b4db:	mov    rsi,r14
  41b4de:	mov    edx,0x1
  41b4e3:	mov    r8d,0x15
  41b4e9:	xor    r9d,r9d
  41b4ec:	add    rsp,0x8
  41b4f0:	pop    rbx
  41b4f1:	pop    r14
  41b4f3:	jmp    428150 <flatcc_json_printer_uint32_field@@Base>
  41b4f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b500:	inc    sil
  41b503:	cmp    sil,0xc
  41b507:	ja     41b52e <main@@Base+0x1470e>
  41b509:	movzx  eax,sil
  41b50d:	lea    rcx,[rip+0x174c0]        # 4329d4 <_IO_stdin_used@@Base+0x9d4>
  41b514:	movsxd rax,DWORD PTR [rcx+rax*4]
  41b518:	add    rax,rcx
  41b51b:	jmp    rax
  41b51d:	lea    rsi,[rip+0x1a472]        # 435996 <_IO_stdin_used@@Base+0x3996>
  41b524:	mov    edx,0x6
  41b529:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b52e:	lea    rsi,[rip+0x1bc65]        # 43719a <flatcc_builder_padding_base@@Base+0x177a>
  41b535:	mov    edx,0x4
  41b53a:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b53f:	lea    rsi,[rip+0x1a42d]        # 435973 <_IO_stdin_used@@Base+0x3973>
  41b546:	mov    edx,0x5
  41b54b:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b550:	lea    rsi,[rip+0x1a422]        # 435979 <_IO_stdin_used@@Base+0x3979>
  41b557:	mov    edx,0x8
  41b55c:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b561:	lea    rsi,[rip+0x1a41a]        # 435982 <_IO_stdin_used@@Base+0x3982>
  41b568:	mov    edx,0x5
  41b56d:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b572:	lea    rsi,[rip+0x1a40f]        # 435988 <_IO_stdin_used@@Base+0x3988>
  41b579:	mov    edx,0x7
  41b57e:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b583:	lea    rsi,[rip+0x1a406]        # 435990 <_IO_stdin_used@@Base+0x3990>
  41b58a:	mov    edx,0x5
  41b58f:	jmp    427920 <flatcc_json_printer_enum@@Base>
  41b594:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b59e:	xchg   ax,ax
  41b5a0:	mov    al,BYTE PTR [rsi+0xc]
  41b5a3:	inc    al
  41b5a5:	cmp    al,0xc
  41b5a7:	ja     41b5cd <main@@Base+0x147ad>
  41b5a9:	movzx  eax,al
  41b5ac:	lea    rcx,[rip+0x17455]        # 432a08 <_IO_stdin_used@@Base+0xa08>
  41b5b3:	movsxd rax,DWORD PTR [rcx+rax*4]
  41b5b7:	add    rax,rcx
  41b5ba:	jmp    rax
  41b5bc:	jmp    4307c0 <flatcc_json_printer_union_string@@Base>
  41b5c1:	lea    rdx,[rip+0x68]        # 41b630 <main@@Base+0x14810>
  41b5c8:	jmp    4306d0 <flatcc_json_printer_union_struct@@Base>
  41b5cd:	ret    
  41b5ce:	lea    rdx,[rip+0x1b]        # 41b5f0 <main@@Base+0x147d0>
  41b5d5:	jmp    4305a0 <flatcc_json_printer_union_table@@Base>
  41b5da:	lea    rdx,[rip+0x2f]        # 41b610 <main@@Base+0x147f0>
  41b5e1:	jmp    4306d0 <flatcc_json_printer_union_struct@@Base>
  41b5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5f0:	lea    rcx,[rip+0x1a3a6]        # 43599d <_IO_stdin_used@@Base+0x399d>
  41b5f7:	xor    edx,edx
  41b5f9:	mov    r8d,0x13
  41b5ff:	xor    r9d,r9d
  41b602:	jmp    428550 <flatcc_json_printer_int32_field@@Base>
  41b607:	nop    WORD PTR [rax+rax*1+0x0]
  41b610:	mov    rdx,rsi
  41b613:	lea    r8,[rip+0x1a397]        # 4359b1 <_IO_stdin_used@@Base+0x39b1>
  41b61a:	xor    esi,esi
  41b61c:	xor    ecx,ecx
  41b61e:	mov    r9d,0xb
  41b624:	jmp    4292e0 <flatcc_json_printer_uint16_struct_field@@Base>
  41b629:	nop    DWORD PTR [rax+0x0]
  41b630:	mov    rdx,rsi
  41b633:	lea    r8,[rip+0x1a383]        # 4359bd <_IO_stdin_used@@Base+0x39bd>
  41b63a:	xor    esi,esi
  41b63c:	xor    ecx,ecx
  41b63e:	mov    r9d,0xa
  41b644:	jmp    429730 <flatcc_json_printer_int32_struct_field@@Base>
  41b649:	nop    DWORD PTR [rax+0x0]
  41b650:	mov    al,BYTE PTR [rdi+0x10]
  41b653:	dec    al
  41b655:	cmp    al,0x3
  41b657:	ja     41b66d <main@@Base+0x1484d>
  41b659:	movsx  rax,al
  41b65d:	lea    rcx,[rip+0x2451c]        # 43fb80 <flatcc_builder_padding_base@@Base+0xa160>
  41b664:	mov    rsi,QWORD PTR [rcx+rax*8]
  41b668:	jmp    4213a0 <flatcc_verify_union_table@@Base>
  41b66d:	xor    eax,eax
  41b66f:	ret    
  41b670:	push   rbx
  41b671:	mov    rbx,rdi
  41b674:	xor    esi,esi
  41b676:	xor    edx,edx
  41b678:	call   420c80 <flatcc_verify_string_field@@Base>
  41b67d:	test   eax,eax
  41b67f:	jne    41b69c <main@@Base+0x1487c>
  41b681:	mov    edx,0x8
  41b686:	mov    rdi,rbx
  41b689:	mov    esi,0x1
  41b68e:	mov    ecx,0x8
  41b693:	call   420c20 <flatcc_verify_field@@Base>
  41b698:	test   eax,eax
  41b69a:	je     41b69e <main@@Base+0x1487e>
  41b69c:	pop    rbx
  41b69d:	ret    
  41b69e:	mov    edx,0x2
  41b6a3:	mov    rdi,rbx
  41b6a6:	mov    esi,0x2
  41b6ab:	mov    ecx,0x2
  41b6b0:	pop    rbx
  41b6b1:	jmp    420c20 <flatcc_verify_field@@Base>
  41b6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6c0:	xor    eax,eax
  41b6c2:	ret    
  41b6c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6cd:	nop    DWORD PTR [rax]
  41b6d0:	push   rbx
  41b6d1:	mov    rbx,rdi
  41b6d4:	mov    ecx,0x1
  41b6d9:	mov    r9d,0xffffffff
  41b6df:	mov    esi,0x0
  41b6e4:	xor    edx,edx
  41b6e6:	mov    r8d,0x1
  41b6ec:	call   420d30 <flatcc_verify_vector_field@@Base>
  41b6f1:	test   eax,eax
  41b6f3:	jne    41b719 <main@@Base+0x148f9>
  41b6f5:	mov    ecx,0x1
  41b6fa:	mov    r9d,0xffffffff
  41b700:	mov    rdi,rbx
  41b703:	mov    esi,0x1
  41b708:	xor    edx,edx
  41b70a:	mov    r8d,0x1
  41b710:	call   420d30 <flatcc_verify_vector_field@@Base>
  41b715:	test   eax,eax
  41b717:	je     41b71b <main@@Base+0x148fb>
  41b719:	pop    rbx
  41b71a:	ret    
  41b71b:	lea    r9,[rip+0xffffffffffff4a3e]        # 410160 <main@@Base+0x9340>
  41b722:	mov    rdi,rbx
  41b725:	mov    esi,0x2
  41b72a:	xor    edx,edx
  41b72c:	xor    ecx,ecx
  41b72e:	mov    r8d,0x1
  41b734:	pop    rbx
  41b735:	jmp    421b30 <flatcc_verify_table_as_nested_root@@Base>
  41b73a:	nop    WORD PTR [rax+rax*1+0x0]
  41b740:	push   rbx
  41b741:	mov    rbx,rdi
  41b744:	mov    edx,0x1
  41b749:	xor    esi,esi
  41b74b:	mov    ecx,0x1
  41b750:	call   420c20 <flatcc_verify_field@@Base>
  41b755:	test   eax,eax
  41b757:	jne    41b78f <main@@Base+0x1496f>
  41b759:	mov    edx,0x1
  41b75e:	mov    rdi,rbx
  41b761:	mov    esi,0x1
  41b766:	mov    ecx,0x1
  41b76b:	call   420c20 <flatcc_verify_field@@Base>
  41b770:	test   eax,eax
  41b772:	jne    41b78f <main@@Base+0x1496f>
  41b774:	mov    edx,0x1
  41b779:	mov    rdi,rbx
  41b77c:	mov    esi,0x2
  41b781:	mov    ecx,0x1
  41b786:	call   420c20 <flatcc_verify_field@@Base>
  41b78b:	test   eax,eax
  41b78d:	je     41b791 <main@@Base+0x14971>
  41b78f:	pop    rbx
  41b790:	ret    
  41b791:	mov    edx,0x1
  41b796:	mov    rdi,rbx
  41b799:	mov    esi,0x3
  41b79e:	mov    ecx,0x1
  41b7a3:	pop    rbx
  41b7a4:	jmp    420c20 <flatcc_verify_field@@Base>
  41b7a9:	nop    DWORD PTR [rax+0x0]
  41b7b0:	xor    eax,eax
  41b7b2:	ret    
  41b7b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7bd:	nop    DWORD PTR [rax]
  41b7c0:	push   rbx
  41b7c1:	mov    rbx,rdi
  41b7c4:	lea    rcx,[rip+0x45]        # 41b810 <main@@Base+0x149f0>
  41b7cb:	xor    esi,esi
  41b7cd:	xor    edx,edx
  41b7cf:	call   420f60 <flatcc_verify_table_field@@Base>
  41b7d4:	test   eax,eax
  41b7d6:	jne    41b7f2 <main@@Base+0x149d2>
  41b7d8:	lea    rcx,[rip+0x81]        # 41b860 <main@@Base+0x14a40>
  41b7df:	mov    rdi,rbx
  41b7e2:	mov    esi,0x1
  41b7e7:	xor    edx,edx
  41b7e9:	call   420f60 <flatcc_verify_table_field@@Base>
  41b7ee:	test   eax,eax
  41b7f0:	je     41b7f4 <main@@Base+0x149d4>
  41b7f2:	pop    rbx
  41b7f3:	ret    
  41b7f4:	lea    rcx,[rip+0xfffffffffffffe55]        # 41b650 <main@@Base+0x14830>
  41b7fb:	mov    rdi,rbx
  41b7fe:	mov    esi,0x3
  41b803:	xor    edx,edx
  41b805:	pop    rbx
  41b806:	jmp    421f50 <flatcc_verify_union_vector_field@@Base>
  41b80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b810:	push   rbx
  41b811:	mov    rbx,rdi
  41b814:	lea    rcx,[rip+0xd5]        # 41b8f0 <main@@Base+0x14ad0>
  41b81b:	xor    esi,esi
  41b81d:	xor    edx,edx
  41b81f:	call   420f60 <flatcc_verify_table_field@@Base>
  41b824:	test   eax,eax
  41b826:	jne    41b842 <main@@Base+0x14a22>
  41b828:	lea    rcx,[rip+0x1a1]        # 41b9d0 <main@@Base+0x14bb0>
  41b82f:	mov    rdi,rbx
  41b832:	mov    esi,0x1
  41b837:	xor    edx,edx
  41b839:	call   420f60 <flatcc_verify_table_field@@Base>
  41b83e:	test   eax,eax
  41b840:	je     41b844 <main@@Base+0x14a24>
  41b842:	pop    rbx
  41b843:	ret    
  41b844:	lea    rcx,[rip+0x1c5]        # 41ba10 <main@@Base+0x14bf0>
  41b84b:	mov    rdi,rbx
  41b84e:	mov    esi,0x2
  41b853:	xor    edx,edx
  41b855:	pop    rbx
  41b856:	jmp    420f60 <flatcc_verify_table_field@@Base>
  41b85b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b860:	push   rbx
  41b861:	mov    rbx,rdi
  41b864:	lea    rcx,[rip+0x1e5]        # 41ba50 <main@@Base+0x14c30>
  41b86b:	mov    esi,0x1
  41b870:	xor    edx,edx
  41b872:	call   421e10 <flatcc_verify_union_field@@Base>
  41b877:	test   eax,eax
  41b879:	jne    41b8c9 <main@@Base+0x14aa9>
  41b87b:	lea    rcx,[rip+0x1ce]        # 41ba50 <main@@Base+0x14c30>
  41b882:	mov    rdi,rbx
  41b885:	mov    esi,0x3
  41b88a:	xor    edx,edx
  41b88c:	call   421e10 <flatcc_verify_union_field@@Base>
  41b891:	test   eax,eax
  41b893:	jne    41b8c9 <main@@Base+0x14aa9>
  41b895:	lea    rcx,[rip+0x1b4]        # 41ba50 <main@@Base+0x14c30>
  41b89c:	mov    rdi,rbx
  41b89f:	mov    esi,0x5
  41b8a4:	xor    edx,edx
  41b8a6:	call   421e10 <flatcc_verify_union_field@@Base>
  41b8ab:	test   eax,eax
  41b8ad:	jne    41b8c9 <main@@Base+0x14aa9>
  41b8af:	lea    rcx,[rip+0x19a]        # 41ba50 <main@@Base+0x14c30>
  41b8b6:	mov    rdi,rbx
  41b8b9:	mov    esi,0x7
  41b8be:	xor    edx,edx
  41b8c0:	call   421e10 <flatcc_verify_union_field@@Base>
  41b8c5:	test   eax,eax
  41b8c7:	je     41b8cb <main@@Base+0x14aab>
  41b8c9:	pop    rbx
  41b8ca:	ret    
  41b8cb:	lea    rcx,[rip+0x17e]        # 41ba50 <main@@Base+0x14c30>
  41b8d2:	mov    rdi,rbx
  41b8d5:	mov    esi,0x9
  41b8da:	xor    edx,edx
  41b8dc:	pop    rbx
  41b8dd:	jmp    421f50 <flatcc_verify_union_vector_field@@Base>
  41b8e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8ec:	nop    DWORD PTR [rax+0x0]
  41b8f0:	push   rbx
  41b8f1:	mov    rbx,rdi
  41b8f4:	xor    esi,esi
  41b8f6:	xor    edx,edx
  41b8f8:	call   420c80 <flatcc_verify_string_field@@Base>
  41b8fd:	test   eax,eax
  41b8ff:	jne    41b9b6 <main@@Base+0x14b96>
  41b905:	mov    edx,0x4
  41b90a:	mov    rdi,rbx
  41b90d:	mov    esi,0x1
  41b912:	mov    ecx,0x4
  41b917:	call   420c20 <flatcc_verify_field@@Base>
  41b91c:	test   eax,eax
  41b91e:	jne    41b9b6 <main@@Base+0x14b96>
  41b924:	mov    rdi,rbx
  41b927:	mov    esi,0x2
  41b92c:	xor    edx,edx
  41b92e:	call   420c80 <flatcc_verify_string_field@@Base>
  41b933:	test   eax,eax
  41b935:	jne    41b9b6 <main@@Base+0x14b96>
  41b937:	mov    edx,0x8
  41b93c:	mov    rdi,rbx
  41b93f:	mov    esi,0x3
  41b944:	mov    ecx,0x8
  41b949:	call   420c20 <flatcc_verify_field@@Base>
  41b94e:	test   eax,eax
  41b950:	jne    41b9b6 <main@@Base+0x14b96>
  41b952:	mov    rdi,rbx
  41b955:	mov    esi,0x4
  41b95a:	xor    edx,edx
  41b95c:	call   420c80 <flatcc_verify_string_field@@Base>
  41b961:	test   eax,eax
  41b963:	jne    41b9b6 <main@@Base+0x14b96>
  41b965:	mov    edx,0x8
  41b96a:	mov    rdi,rbx
  41b96d:	mov    esi,0x5
  41b972:	mov    ecx,0x8
  41b977:	call   420c20 <flatcc_verify_field@@Base>
  41b97c:	test   eax,eax
  41b97e:	jne    41b9b6 <main@@Base+0x14b96>
  41b980:	mov    edx,0x4
  41b985:	mov    rdi,rbx
  41b988:	mov    esi,0x6
  41b98d:	mov    ecx,0x4
  41b992:	call   420c20 <flatcc_verify_field@@Base>
  41b997:	test   eax,eax
  41b999:	jne    41b9b6 <main@@Base+0x14b96>
  41b99b:	mov    edx,0x8
  41b9a0:	mov    rdi,rbx
  41b9a3:	mov    esi,0x7
  41b9a8:	mov    ecx,0x8
  41b9ad:	call   420c20 <flatcc_verify_field@@Base>
  41b9b2:	test   eax,eax
  41b9b4:	je     41b9b8 <main@@Base+0x14b98>
  41b9b6:	pop    rbx
  41b9b7:	ret    
  41b9b8:	mov    edx,0x4
  41b9bd:	mov    rdi,rbx
  41b9c0:	mov    esi,0x8
  41b9c5:	mov    ecx,0x4
  41b9ca:	pop    rbx
  41b9cb:	jmp    420c20 <flatcc_verify_field@@Base>
  41b9d0:	push   rbx
  41b9d1:	mov    rbx,rdi
  41b9d4:	mov    edx,0x8
  41b9d9:	xor    esi,esi
  41b9db:	mov    ecx,0x8
  41b9e0:	call   420c20 <flatcc_verify_field@@Base>
  41b9e5:	test   eax,eax
  41b9e7:	je     41b9eb <main@@Base+0x14bcb>
  41b9e9:	pop    rbx
  41b9ea:	ret    
  41b9eb:	mov    edx,0x4
  41b9f0:	mov    rdi,rbx
  41b9f3:	mov    esi,0x1
  41b9f8:	mov    ecx,0x4
  41b9fd:	pop    rbx
  41b9fe:	jmp    420c20 <flatcc_verify_field@@Base>
  41ba03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba0d:	nop    DWORD PTR [rax]
  41ba10:	push   rbx
  41ba11:	mov    rbx,rdi
  41ba14:	mov    edx,0x8
  41ba19:	xor    esi,esi
  41ba1b:	mov    ecx,0x8
  41ba20:	call   420c20 <flatcc_verify_field@@Base>
  41ba25:	test   eax,eax
  41ba27:	je     41ba2b <main@@Base+0x14c0b>
  41ba29:	pop    rbx
  41ba2a:	ret    
  41ba2b:	mov    edx,0x4
  41ba30:	mov    rdi,rbx
  41ba33:	mov    esi,0x1
  41ba38:	mov    ecx,0x4
  41ba3d:	pop    rbx
  41ba3e:	jmp    420c20 <flatcc_verify_field@@Base>
  41ba43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba4d:	nop    DWORD PTR [rax]
  41ba50:	mov    al,BYTE PTR [rdi+0x10]
  41ba53:	inc    al
  41ba55:	cmp    al,0xc
  41ba57:	ja     41ba80 <main@@Base+0x14c60>
  41ba59:	movzx  eax,al
  41ba5c:	lea    rcx,[rip+0x16fd9]        # 432a3c <_IO_stdin_used@@Base+0xa3c>
  41ba63:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ba67:	add    rax,rcx
  41ba6a:	jmp    rax
  41ba6c:	jmp    4214c0 <flatcc_verify_union_string@@Base>
  41ba71:	mov    esi,0x4
  41ba76:	mov    edx,0x4
  41ba7b:	jmp    421480 <flatcc_verify_union_struct@@Base>
  41ba80:	xor    eax,eax
  41ba82:	ret    
  41ba83:	lea    rsi,[rip+0x16]        # 41baa0 <main@@Base+0x14c80>
  41ba8a:	jmp    4213a0 <flatcc_verify_union_table@@Base>
  41ba8f:	mov    esi,0x2
  41ba94:	mov    edx,0x2
  41ba99:	jmp    421480 <flatcc_verify_union_struct@@Base>
  41ba9e:	xchg   ax,ax
  41baa0:	mov    edx,0x4
  41baa5:	xor    esi,esi
  41baa7:	mov    ecx,0x4
  41baac:	jmp    420c20 <flatcc_verify_field@@Base>
  41bab1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41babb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bac0 <flatcc_builder_default_alloc@@Base>:
  41bac0:	push   rbp
  41bac1:	push   r15
  41bac3:	push   r14
  41bac5:	push   r12
  41bac7:	push   rbx
  41bac8:	mov    rbx,rsi
  41bacb:	test   rdx,rdx
  41bace:	je     41baf8 <flatcc_builder_default_alloc@@Base+0x38>
  41bad0:	mov    r14d,ecx
  41bad3:	dec    r8d
  41bad6:	cmp    r8d,0x6
  41bada:	ja     41bb16 <flatcc_builder_default_alloc@@Base+0x56>
  41badc:	mov    eax,0x100
  41bae1:	lea    rcx,[rip+0x19f18]        # 435a00 <_IO_stdin_used@@Base+0x3a00>
  41bae8:	movsxd rsi,DWORD PTR [rcx+r8*4]
  41baec:	add    rsi,rcx
  41baef:	jmp    rsi
  41baf1:	mov    eax,0x120
  41baf6:	jmp    41bb30 <flatcc_builder_default_alloc@@Base+0x70>
  41baf8:	mov    rdi,QWORD PTR [rbx]
  41bafb:	xor    r15d,r15d
  41bafe:	test   rdi,rdi
  41bb01:	je     41bb8f <flatcc_builder_default_alloc@@Base+0xcf>
  41bb07:	call   406030 <free@plt>
  41bb0c:	vxorps xmm0,xmm0,xmm0
  41bb10:	vmovups XMMWORD PTR [rbx],xmm0
  41bb14:	jmp    41bb8f <flatcc_builder_default_alloc@@Base+0xcf>
  41bb16:	mov    eax,0x20
  41bb1b:	jmp    41bb30 <flatcc_builder_default_alloc@@Base+0x70>
  41bb1d:	mov    rax,rdx
  41bb20:	jmp    41bb30 <flatcc_builder_default_alloc@@Base+0x70>
  41bb22:	mov    eax,0x40
  41bb27:	nop    WORD PTR [rax+rax*1+0x0]
  41bb30:	mov    rbp,rax
  41bb33:	add    rax,rax
  41bb36:	cmp    rbp,rdx
  41bb39:	jb     41bb30 <flatcc_builder_default_alloc@@Base+0x70>
  41bb3b:	mov    rax,QWORD PTR [rbx+0x8]
  41bb3f:	xor    r15d,r15d
  41bb42:	cmp    rax,rdx
  41bb45:	jb     41bb4f <flatcc_builder_default_alloc@@Base+0x8f>
  41bb47:	shr    rax,1
  41bb4a:	cmp    rax,rbp
  41bb4d:	jae    41bb8f <flatcc_builder_default_alloc@@Base+0xcf>
  41bb4f:	mov    rdi,QWORD PTR [rbx]
  41bb52:	mov    rsi,rbp
  41bb55:	call   406100 <realloc@plt>
  41bb5a:	test   rax,rax
  41bb5d:	je     41bb89 <flatcc_builder_default_alloc@@Base+0xc9>
  41bb5f:	mov    r12,rax
  41bb62:	test   r14d,r14d
  41bb65:	je     41bb80 <flatcc_builder_default_alloc@@Base+0xc0>
  41bb67:	mov    rax,QWORD PTR [rbx+0x8]
  41bb6b:	mov    rdx,rbp
  41bb6e:	sub    rdx,rax
  41bb71:	jbe    41bb80 <flatcc_builder_default_alloc@@Base+0xc0>
  41bb73:	mov    rdi,r12
  41bb76:	add    rdi,rax
  41bb79:	xor    esi,esi
  41bb7b:	call   406080 <memset@plt>
  41bb80:	mov    QWORD PTR [rbx],r12
  41bb83:	mov    QWORD PTR [rbx+0x8],rbp
  41bb87:	jmp    41bb8f <flatcc_builder_default_alloc@@Base+0xcf>
  41bb89:	mov    r15d,0xffffffff
  41bb8f:	mov    eax,r15d
  41bb92:	pop    rbx
  41bb93:	pop    r12
  41bb95:	pop    r14
  41bb97:	pop    r15
  41bb99:	pop    rbp
  41bb9a:	ret    
  41bb9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bba0 <flatcc_builder_flush_vtable_cache@@Base>:
  41bba0:	push   rbx
  41bba1:	cmp    QWORD PTR [rdi+0xd8],0x0
  41bba9:	je     41bbd4 <flatcc_builder_flush_vtable_cache@@Base+0x34>
  41bbab:	mov    rbx,rdi
  41bbae:	mov    rdi,QWORD PTR [rdi+0xa8]
  41bbb5:	mov    rdx,QWORD PTR [rbx+0xb0]
  41bbbc:	xor    esi,esi
  41bbbe:	call   406080 <memset@plt>
  41bbc3:	movabs rax,0x1000000000
  41bbcd:	mov    QWORD PTR [rbx+0xe0],rax
  41bbd4:	pop    rbx
  41bbd5:	ret    
  41bbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041bbe0 <flatcc_builder_custom_init@@Base>:
  41bbe0:	vxorps xmm0,xmm0,xmm0
  41bbe4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41bbec:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41bbf4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41bbfc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41bc04:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41bc0c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41bc14:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41bc1c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41bc24:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41bc29:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41bc2e:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41bc33:	vmovups YMMWORD PTR [rdi],ymm0
  41bc37:	mov    QWORD PTR [rdi+0x180],0x0
  41bc42:	test   rsi,rsi
  41bc45:	je     41bc69 <flatcc_builder_custom_init@@Base+0x89>
  41bc47:	test   rcx,rcx
  41bc4a:	jne    41bc53 <flatcc_builder_custom_init@@Base+0x73>
  41bc4c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 41bac0 <flatcc_builder_default_alloc@@Base>
  41bc53:	mov    QWORD PTR [rdi+0x40],r8
  41bc57:	mov    QWORD PTR [rdi+0x50],rcx
  41bc5b:	mov    QWORD PTR [rdi+0x38],rdx
  41bc5f:	mov    QWORD PTR [rdi+0x48],rsi
  41bc63:	xor    eax,eax
  41bc65:	vzeroupper 
  41bc68:	ret    
  41bc69:	mov    DWORD PTR [rdi+0x128],0x1
  41bc73:	lea    rdx,[rdi+0x130]
  41bc7a:	lea    rsi,[rip+0x4a6f]        # 4206f0 <flatcc_emitter@@Base>
  41bc81:	test   rcx,rcx
  41bc84:	je     41bc4c <flatcc_builder_custom_init@@Base+0x6c>
  41bc86:	jmp    41bc53 <flatcc_builder_custom_init@@Base+0x73>
  41bc88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bc90 <flatcc_builder_init@@Base>:
  41bc90:	vxorps xmm0,xmm0,xmm0
  41bc94:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41bc9c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41bca1:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41bca6:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41bcae:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41bcb6:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41bcbe:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41bcc6:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41bcce:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41bcd6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41bcde:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41bce3:	vmovups YMMWORD PTR [rdi],ymm0
  41bce7:	mov    QWORD PTR [rdi+0x180],0x0
  41bcf2:	mov    DWORD PTR [rdi+0x128],0x1
  41bcfc:	lea    rax,[rdi+0x130]
  41bd03:	mov    QWORD PTR [rdi+0x40],0x0
  41bd0b:	lea    rcx,[rip+0xfffffffffffffdae]        # 41bac0 <flatcc_builder_default_alloc@@Base>
  41bd12:	mov    QWORD PTR [rdi+0x50],rcx
  41bd16:	mov    QWORD PTR [rdi+0x38],rax
  41bd1a:	lea    rax,[rip+0x49cf]        # 4206f0 <flatcc_emitter@@Base>
  41bd21:	mov    QWORD PTR [rdi+0x48],rax
  41bd25:	xor    eax,eax
  41bd27:	vzeroupper 
  41bd2a:	ret    
  41bd2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bd30 <flatcc_builder_custom_reset@@Base>:
  41bd30:	push   rbp
  41bd31:	push   r15
  41bd33:	push   r14
  41bd35:	push   r12
  41bd37:	push   rbx
  41bd38:	mov    r15d,edx
  41bd3b:	mov    r14d,esi
  41bd3e:	mov    r12,rdi
  41bd41:	lea    rbp,[rdi+0x58]
  41bd45:	xor    ebx,ebx
  41bd47:	jmp    41bd68 <flatcc_builder_custom_reset@@Base+0x38>
  41bd49:	nop    DWORD PTR [rax+0x0]
  41bd50:	cmp    QWORD PTR [rbp+0x8],0x0
  41bd55:	jne    41be66 <flatcc_builder_custom_reset@@Base+0x136>
  41bd5b:	inc    rbx
  41bd5e:	add    rbp,0x10
  41bd62:	cmp    rbx,0x8
  41bd66:	je     41bdaf <flatcc_builder_custom_reset@@Base+0x7f>
  41bd68:	mov    rdi,QWORD PTR [rbp+0x0]
  41bd6c:	test   rdi,rdi
  41bd6f:	je     41bd50 <flatcc_builder_custom_reset@@Base+0x20>
  41bd71:	test   r15d,r15d
  41bd74:	je     41bda2 <flatcc_builder_custom_reset@@Base+0x72>
  41bd76:	cmp    rbx,0x5
  41bd7a:	je     41bda2 <flatcc_builder_custom_reset@@Base+0x72>
  41bd7c:	mov    rdi,QWORD PTR [r12+0x40]
  41bd81:	mov    edx,0x1
  41bd86:	mov    rsi,rbp
  41bd89:	mov    ecx,0x1
  41bd8e:	mov    r8d,ebx
  41bd91:	call   QWORD PTR [r12+0x50]
  41bd96:	test   eax,eax
  41bd98:	jne    41be56 <flatcc_builder_custom_reset@@Base+0x126>
  41bd9e:	mov    rdi,QWORD PTR [rbp+0x0]
  41bda2:	mov    rdx,QWORD PTR [rbp+0x8]
  41bda6:	xor    esi,esi
  41bda8:	call   406080 <memset@plt>
  41bdad:	jmp    41bd5b <flatcc_builder_custom_reset@@Base+0x2b>
  41bdaf:	mov    DWORD PTR [r12+0xe0],0x0
  41bdbb:	cmp    DWORD PTR [r12+0xe4],0x0
  41bdc4:	je     41bdd2 <flatcc_builder_custom_reset@@Base+0xa2>
  41bdc6:	mov    DWORD PTR [r12+0xe4],0x10
  41bdd2:	mov    WORD PTR [r12+0xe8],0x0
  41bddd:	mov    QWORD PTR [r12+0xf0],0x0
  41bde9:	mov    QWORD PTR [r12+0x20],0x0
  41bdf2:	vxorps xmm0,xmm0,xmm0
  41bdf6:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  41be00:	mov    rax,QWORD PTR [r12+0x58]
  41be05:	mov    rcx,QWORD PTR [r12+0x68]
  41be0a:	mov    QWORD PTR [r12+0x18],rcx
  41be0f:	mov    rcx,QWORD PTR [r12+0x88]
  41be17:	mov    QWORD PTR [r12],rcx
  41be1b:	mov    QWORD PTR [r12+0x8],rax
  41be20:	mov    QWORD PTR [r12+0x30],0x0
  41be29:	test   r14d,r14d
  41be2c:	je     41be38 <flatcc_builder_custom_reset@@Base+0x108>
  41be2e:	vmovups XMMWORD PTR [r12+0x118],xmm0
  41be38:	xor    ebx,ebx
  41be3a:	cmp    DWORD PTR [r12+0x128],0x0
  41be43:	je     41be5b <flatcc_builder_custom_reset@@Base+0x12b>
  41be45:	add    r12,0x130
  41be4c:	mov    rdi,r12
  41be4f:	call   420570 <flatcc_emitter_reset@@Base>
  41be54:	jmp    41be5b <flatcc_builder_custom_reset@@Base+0x12b>
  41be56:	mov    ebx,0xffffffff
  41be5b:	mov    eax,ebx
  41be5d:	pop    rbx
  41be5e:	pop    r12
  41be60:	pop    r14
  41be62:	pop    r15
  41be64:	pop    rbp
  41be65:	ret    
  41be66:	lea    rdi,[rip+0x19e23]        # 435c90 <flatcc_builder_padding_base@@Base+0x270>
  41be6d:	lea    rsi,[rip+0x19e2e]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41be74:	lea    rcx,[rip+0x19e87]        # 435d02 <flatcc_builder_padding_base@@Base+0x2e2>
  41be7b:	mov    edx,0x1b2
  41be80:	call   406070 <__assert_fail@plt>
  41be85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be8f:	nop

000000000041be90 <flatcc_builder_reset@@Base>:
  41be90:	push   rbx
  41be91:	mov    rbx,rdi
  41be94:	mov    rdi,QWORD PTR [rdi+0x58]
  41be98:	mov    rdx,QWORD PTR [rbx+0x60]
  41be9c:	test   rdi,rdi
  41be9f:	je     41beaa <flatcc_builder_reset@@Base+0x1a>
  41bea1:	xor    esi,esi
  41bea3:	call   406080 <memset@plt>
  41bea8:	jmp    41beb3 <flatcc_builder_reset@@Base+0x23>
  41beaa:	test   rdx,rdx
  41bead:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41beb3:	mov    rdi,QWORD PTR [rbx+0x68]
  41beb7:	mov    rdx,QWORD PTR [rbx+0x70]
  41bebb:	test   rdi,rdi
  41bebe:	je     41bec9 <flatcc_builder_reset@@Base+0x39>
  41bec0:	xor    esi,esi
  41bec2:	call   406080 <memset@plt>
  41bec7:	jmp    41bed2 <flatcc_builder_reset@@Base+0x42>
  41bec9:	test   rdx,rdx
  41becc:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bed2:	mov    rdi,QWORD PTR [rbx+0x78]
  41bed6:	mov    rdx,QWORD PTR [rbx+0x80]
  41bedd:	test   rdi,rdi
  41bee0:	je     41beeb <flatcc_builder_reset@@Base+0x5b>
  41bee2:	xor    esi,esi
  41bee4:	call   406080 <memset@plt>
  41bee9:	jmp    41bef4 <flatcc_builder_reset@@Base+0x64>
  41beeb:	test   rdx,rdx
  41beee:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bef4:	mov    rdi,QWORD PTR [rbx+0x88]
  41befb:	mov    rdx,QWORD PTR [rbx+0x90]
  41bf02:	test   rdi,rdi
  41bf05:	je     41bf10 <flatcc_builder_reset@@Base+0x80>
  41bf07:	xor    esi,esi
  41bf09:	call   406080 <memset@plt>
  41bf0e:	jmp    41bf19 <flatcc_builder_reset@@Base+0x89>
  41bf10:	test   rdx,rdx
  41bf13:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bf19:	mov    rdi,QWORD PTR [rbx+0x98]
  41bf20:	mov    rdx,QWORD PTR [rbx+0xa0]
  41bf27:	test   rdi,rdi
  41bf2a:	je     41bf35 <flatcc_builder_reset@@Base+0xa5>
  41bf2c:	xor    esi,esi
  41bf2e:	call   406080 <memset@plt>
  41bf33:	jmp    41bf3e <flatcc_builder_reset@@Base+0xae>
  41bf35:	test   rdx,rdx
  41bf38:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bf3e:	mov    rdi,QWORD PTR [rbx+0xa8]
  41bf45:	mov    rdx,QWORD PTR [rbx+0xb0]
  41bf4c:	test   rdi,rdi
  41bf4f:	je     41bf5a <flatcc_builder_reset@@Base+0xca>
  41bf51:	xor    esi,esi
  41bf53:	call   406080 <memset@plt>
  41bf58:	jmp    41bf63 <flatcc_builder_reset@@Base+0xd3>
  41bf5a:	test   rdx,rdx
  41bf5d:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bf63:	mov    rdi,QWORD PTR [rbx+0xb8]
  41bf6a:	mov    rdx,QWORD PTR [rbx+0xc0]
  41bf71:	test   rdi,rdi
  41bf74:	je     41bf7f <flatcc_builder_reset@@Base+0xef>
  41bf76:	xor    esi,esi
  41bf78:	call   406080 <memset@plt>
  41bf7d:	jmp    41bf88 <flatcc_builder_reset@@Base+0xf8>
  41bf7f:	test   rdx,rdx
  41bf82:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bf88:	mov    rdi,QWORD PTR [rbx+0xc8]
  41bf8f:	mov    rdx,QWORD PTR [rbx+0xd0]
  41bf96:	test   rdi,rdi
  41bf99:	je     41bfa4 <flatcc_builder_reset@@Base+0x114>
  41bf9b:	xor    esi,esi
  41bf9d:	call   406080 <memset@plt>
  41bfa2:	jmp    41bfad <flatcc_builder_reset@@Base+0x11d>
  41bfa4:	test   rdx,rdx
  41bfa7:	jne    41c030 <flatcc_builder_reset@@Base+0x1a0>
  41bfad:	mov    DWORD PTR [rbx+0xe0],0x0
  41bfb7:	cmp    DWORD PTR [rbx+0xe4],0x0
  41bfbe:	je     41bfca <flatcc_builder_reset@@Base+0x13a>
  41bfc0:	mov    DWORD PTR [rbx+0xe4],0x10
  41bfca:	mov    WORD PTR [rbx+0xe8],0x0
  41bfd3:	mov    QWORD PTR [rbx+0xf0],0x0
  41bfde:	mov    QWORD PTR [rbx+0x20],0x0
  41bfe6:	vxorps xmm0,xmm0,xmm0
  41bfea:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  41bff2:	mov    rax,QWORD PTR [rbx+0x58]
  41bff6:	mov    rcx,QWORD PTR [rbx+0x68]
  41bffa:	mov    QWORD PTR [rbx+0x18],rcx
  41bffe:	mov    rcx,QWORD PTR [rbx+0x88]
  41c005:	mov    QWORD PTR [rbx],rcx
  41c008:	mov    QWORD PTR [rbx+0x8],rax
  41c00c:	mov    QWORD PTR [rbx+0x30],0x0
  41c014:	cmp    DWORD PTR [rbx+0x128],0x0
  41c01b:	je     41c02c <flatcc_builder_reset@@Base+0x19c>
  41c01d:	add    rbx,0x130
  41c024:	mov    rdi,rbx
  41c027:	call   420570 <flatcc_emitter_reset@@Base>
  41c02c:	xor    eax,eax
  41c02e:	pop    rbx
  41c02f:	ret    
  41c030:	lea    rdi,[rip+0x19c59]        # 435c90 <flatcc_builder_padding_base@@Base+0x270>
  41c037:	lea    rsi,[rip+0x19c64]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c03e:	lea    rcx,[rip+0x19cbd]        # 435d02 <flatcc_builder_padding_base@@Base+0x2e2>
  41c045:	mov    edx,0x1b2
  41c04a:	call   406070 <__assert_fail@plt>
  41c04f:	nop

000000000041c050 <flatcc_builder_clear@@Base>:
  41c050:	push   rbx
  41c051:	mov    rbx,rdi
  41c054:	lea    rsi,[rdi+0x58]
  41c058:	mov    rdi,QWORD PTR [rdi+0x40]
  41c05c:	xor    edx,edx
  41c05e:	xor    ecx,ecx
  41c060:	xor    r8d,r8d
  41c063:	call   QWORD PTR [rbx+0x50]
  41c066:	lea    rsi,[rbx+0x68]
  41c06a:	mov    rdi,QWORD PTR [rbx+0x40]
  41c06e:	xor    edx,edx
  41c070:	xor    ecx,ecx
  41c072:	mov    r8d,0x1
  41c078:	call   QWORD PTR [rbx+0x50]
  41c07b:	lea    rsi,[rbx+0x78]
  41c07f:	mov    rdi,QWORD PTR [rbx+0x40]
  41c083:	xor    edx,edx
  41c085:	xor    ecx,ecx
  41c087:	mov    r8d,0x2
  41c08d:	call   QWORD PTR [rbx+0x50]
  41c090:	lea    rsi,[rbx+0x88]
  41c097:	mov    rdi,QWORD PTR [rbx+0x40]
  41c09b:	xor    edx,edx
  41c09d:	xor    ecx,ecx
  41c09f:	mov    r8d,0x3
  41c0a5:	call   QWORD PTR [rbx+0x50]
  41c0a8:	lea    rsi,[rbx+0x98]
  41c0af:	mov    rdi,QWORD PTR [rbx+0x40]
  41c0b3:	xor    edx,edx
  41c0b5:	xor    ecx,ecx
  41c0b7:	mov    r8d,0x4
  41c0bd:	call   QWORD PTR [rbx+0x50]
  41c0c0:	lea    rsi,[rbx+0xa8]
  41c0c7:	mov    rdi,QWORD PTR [rbx+0x40]
  41c0cb:	xor    edx,edx
  41c0cd:	xor    ecx,ecx
  41c0cf:	mov    r8d,0x5
  41c0d5:	call   QWORD PTR [rbx+0x50]
  41c0d8:	lea    rsi,[rbx+0xb8]
  41c0df:	mov    rdi,QWORD PTR [rbx+0x40]
  41c0e3:	xor    edx,edx
  41c0e5:	xor    ecx,ecx
  41c0e7:	mov    r8d,0x6
  41c0ed:	call   QWORD PTR [rbx+0x50]
  41c0f0:	lea    rsi,[rbx+0xc8]
  41c0f7:	mov    rdi,QWORD PTR [rbx+0x40]
  41c0fb:	xor    edx,edx
  41c0fd:	xor    ecx,ecx
  41c0ff:	mov    r8d,0x7
  41c105:	call   QWORD PTR [rbx+0x50]
  41c108:	cmp    DWORD PTR [rbx+0x128],0x0
  41c10f:	je     41c11d <flatcc_builder_clear@@Base+0xcd>
  41c111:	lea    rdi,[rbx+0x130]
  41c118:	call   420670 <flatcc_emitter_clear@@Base>
  41c11d:	vxorps xmm0,xmm0,xmm0
  41c121:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  41c129:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  41c131:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  41c139:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  41c141:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  41c149:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  41c151:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  41c159:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  41c161:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  41c166:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41c16b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41c170:	vmovups YMMWORD PTR [rbx],ymm0
  41c174:	mov    QWORD PTR [rbx+0x180],0x0
  41c17f:	pop    rbx
  41c180:	vzeroupper 
  41c183:	ret    
  41c184:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c18e:	xchg   ax,ax

000000000041c190 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41c190:	push   r15
  41c192:	push   r14
  41c194:	push   r12
  41c196:	push   rbx
  41c197:	push   rax
  41c198:	mov    r14,rsi
  41c19b:	mov    r15,rdi
  41c19e:	add    r14,0xf
  41c1a2:	and    r14,0xfffffffffffffff8
  41c1a6:	mov    rbx,QWORD PTR [rdi+0x180]
  41c1ad:	lea    r12,[rdi+0xc8]
  41c1b4:	lea    rdx,[rbx+r14*1]
  41c1b8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41c1bf:	jbe    41c1d8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  41c1c1:	mov    rdi,QWORD PTR [r15+0x40]
  41c1c5:	mov    rsi,r12
  41c1c8:	xor    ecx,ecx
  41c1ca:	mov    r8d,0x7
  41c1d0:	call   QWORD PTR [r15+0x50]
  41c1d4:	test   eax,eax
  41c1d6:	jne    41c228 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  41c1d8:	add    rbx,QWORD PTR [r12]
  41c1dc:	je     41c217 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  41c1de:	mov    rdi,rbx
  41c1e1:	xor    esi,esi
  41c1e3:	mov    rdx,r14
  41c1e6:	call   406080 <memset@plt>
  41c1eb:	mov    rax,QWORD PTR [r15+0x178]
  41c1f2:	mov    QWORD PTR [rbx],rax
  41c1f5:	add    rbx,0x8
  41c1f9:	mov    rax,QWORD PTR [r15+0x180]
  41c200:	lea    rcx,[rax+0x8]
  41c204:	mov    QWORD PTR [r15+0x178],rcx
  41c20b:	add    rax,r14
  41c20e:	mov    QWORD PTR [r15+0x180],rax
  41c215:	jmp    41c219 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  41c217:	xor    ebx,ebx
  41c219:	mov    rax,rbx
  41c21c:	add    rsp,0x8
  41c220:	pop    rbx
  41c221:	pop    r12
  41c223:	pop    r14
  41c225:	pop    r15
  41c227:	ret    
  41c228:	lea    rdi,[rip+0x1ac33]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c22f:	lea    rsi,[rip+0x19a6c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c236:	lea    rcx,[rip+0x1aa5f]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41c23d:	mov    edx,0x134
  41c242:	call   406070 <__assert_fail@plt>
  41c247:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c250 <flatcc_builder_enter_user_frame@@Base>:
  41c250:	push   r15
  41c252:	push   r14
  41c254:	push   r12
  41c256:	push   rbx
  41c257:	push   rax
  41c258:	mov    r14,rsi
  41c25b:	mov    rbx,rdi
  41c25e:	add    r14,0xf
  41c262:	and    r14,0xfffffffffffffff8
  41c266:	mov    r15,QWORD PTR [rdi+0x180]
  41c26d:	lea    r12,[rdi+0xc8]
  41c274:	lea    rdx,[r15+r14*1]
  41c278:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41c27f:	jbe    41c297 <flatcc_builder_enter_user_frame@@Base+0x47>
  41c281:	mov    rdi,QWORD PTR [rbx+0x40]
  41c285:	mov    rsi,r12
  41c288:	xor    ecx,ecx
  41c28a:	mov    r8d,0x7
  41c290:	call   QWORD PTR [rbx+0x50]
  41c293:	test   eax,eax
  41c295:	jne    41c2e0 <flatcc_builder_enter_user_frame@@Base+0x90>
  41c297:	add    r15,QWORD PTR [r12]
  41c29b:	je     41c2d2 <flatcc_builder_enter_user_frame@@Base+0x82>
  41c29d:	mov    rdi,r15
  41c2a0:	xor    esi,esi
  41c2a2:	mov    rdx,r14
  41c2a5:	call   406080 <memset@plt>
  41c2aa:	mov    rax,QWORD PTR [rbx+0x178]
  41c2b1:	mov    QWORD PTR [r15],rax
  41c2b4:	mov    rcx,QWORD PTR [rbx+0x180]
  41c2bb:	lea    rax,[rcx+0x8]
  41c2bf:	mov    QWORD PTR [rbx+0x178],rax
  41c2c6:	add    rcx,r14
  41c2c9:	mov    QWORD PTR [rbx+0x180],rcx
  41c2d0:	jmp    41c2d4 <flatcc_builder_enter_user_frame@@Base+0x84>
  41c2d2:	xor    eax,eax
  41c2d4:	add    rsp,0x8
  41c2d8:	pop    rbx
  41c2d9:	pop    r12
  41c2db:	pop    r14
  41c2dd:	pop    r15
  41c2df:	ret    
  41c2e0:	lea    rdi,[rip+0x1ab7b]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c2e7:	lea    rsi,[rip+0x199b4]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c2ee:	lea    rcx,[rip+0x1a9a7]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41c2f5:	mov    edx,0x134
  41c2fa:	call   406070 <__assert_fail@plt>
  41c2ff:	nop

000000000041c300 <flatcc_builder_exit_user_frame@@Base>:
  41c300:	push   rax
  41c301:	mov    rax,QWORD PTR [rdi+0x178]
  41c308:	test   rax,rax
  41c30b:	je     41c32f <flatcc_builder_exit_user_frame@@Base+0x2f>
  41c30d:	mov    rcx,QWORD PTR [rdi+0xc8]
  41c314:	mov    edx,eax
  41c316:	add    rax,0xfffffffffffffff8
  41c31a:	mov    QWORD PTR [rdi+0x180],rax
  41c321:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  41c326:	mov    QWORD PTR [rdi+0x178],rax
  41c32d:	pop    rcx
  41c32e:	ret    
  41c32f:	lea    rdi,[rip+0x19a0a]        # 435d40 <flatcc_builder_padding_base@@Base+0x320>
  41c336:	lea    rsi,[rip+0x19965]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c33d:	lea    rcx,[rip+0x19a15]        # 435d59 <flatcc_builder_padding_base@@Base+0x339>
  41c344:	mov    edx,0x21e
  41c349:	call   406070 <__assert_fail@plt>
  41c34e:	xchg   ax,ax

000000000041c350 <flatcc_builder_exit_user_frame_at@@Base>:
  41c350:	push   rax
  41c351:	cmp    QWORD PTR [rdi+0x178],rsi
  41c358:	jb     41c388 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41c35a:	mov    QWORD PTR [rdi+0x178],rsi
  41c361:	test   rsi,rsi
  41c364:	je     41c3a7 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  41c366:	mov    rax,QWORD PTR [rdi+0xc8]
  41c36d:	mov    ecx,esi
  41c36f:	add    rsi,0xfffffffffffffff8
  41c373:	mov    QWORD PTR [rdi+0x180],rsi
  41c37a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41c37f:	mov    QWORD PTR [rdi+0x178],rax
  41c386:	pop    rcx
  41c387:	ret    
  41c388:	lea    rdi,[rip+0x19a04]        # 435d93 <flatcc_builder_padding_base@@Base+0x373>
  41c38f:	lea    rsi,[rip+0x1990c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c396:	lea    rcx,[rip+0x19a15]        # 435db2 <flatcc_builder_padding_base@@Base+0x392>
  41c39d:	mov    edx,0x227
  41c3a2:	call   406070 <__assert_fail@plt>
  41c3a7:	lea    rdi,[rip+0x19992]        # 435d40 <flatcc_builder_padding_base@@Base+0x320>
  41c3ae:	lea    rsi,[rip+0x198ed]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c3b5:	lea    rcx,[rip+0x1999d]        # 435d59 <flatcc_builder_padding_base@@Base+0x339>
  41c3bc:	mov    edx,0x21e
  41c3c1:	call   406070 <__assert_fail@plt>
  41c3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041c3d0 <flatcc_builder_get_current_user_frame@@Base>:
  41c3d0:	mov    rax,QWORD PTR [rdi+0x178]
  41c3d7:	ret    
  41c3d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c3e0 <flatcc_builder_get_user_frame_ptr@@Base>:
  41c3e0:	mov    eax,esi
  41c3e2:	add    rax,QWORD PTR [rdi+0xc8]
  41c3e9:	ret    
  41c3ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c3f0 <flatcc_builder_embed_buffer@@Base>:
  41c3f0:	push   rbp
  41c3f1:	push   r15
  41c3f3:	push   r14
  41c3f5:	push   r12
  41c3f7:	push   rbx
  41c3f8:	sub    rsp,0xa0
  41c3ff:	mov    ebx,r9d
  41c402:	mov    rbp,rcx
  41c405:	mov    r15,rdx
  41c408:	mov    edx,esi
  41c40a:	mov    r12,rdi
  41c40d:	mov    WORD PTR [rsp+0xa],r8w
  41c413:	xor    ecx,ecx
  41c415:	cmp    DWORD PTR [rdi+0x100],0x0
  41c41c:	setne  cl
  41c41f:	lea    rsi,[rsp+0xa]
  41c424:	call   41c590 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41c429:	and    ebx,0x2
  41c42c:	movzx  eax,WORD PTR [rsp+0xa]
  41c431:	mov    r14d,DWORD PTR [r12+0xf0]
  41c439:	lea    ecx,[rbp+rbx*2+0x0]
  41c43d:	mov    edx,r14d
  41c440:	sub    edx,ecx
  41c442:	dec    eax
  41c444:	and    eax,edx
  41c446:	lea    ecx,[rax+rbp*1]
  41c449:	mov    DWORD PTR [rsp+0xc],ecx
  41c44d:	mov    QWORD PTR [rsp+0x10],0x0
  41c456:	mov    DWORD PTR [rsp+0x18],0x0
  41c45e:	cmp    DWORD PTR [r12+0x100],0x0
  41c467:	je     41c539 <flatcc_builder_embed_buffer@@Base+0x149>
  41c46d:	mov    QWORD PTR [rsp+0x10],0x4
  41c476:	lea    rcx,[rsp+0xc]
  41c47b:	mov    QWORD PTR [rsp+0x20],rcx
  41c480:	mov    QWORD PTR [rsp+0x28],0x4
  41c489:	mov    DWORD PTR [rsp+0x18],0x1
  41c491:	mov    r8d,0x4
  41c497:	mov    edx,0x1
  41c49c:	test   rbp,rbp
  41c49f:	je     41c4bf <flatcc_builder_embed_buffer@@Base+0xcf>
  41c4a1:	add    r8,rbp
  41c4a4:	mov    QWORD PTR [rsp+0x10],r8
  41c4a9:	mov    ecx,edx
  41c4ab:	shl    rcx,0x4
  41c4af:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  41c4b4:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  41c4b9:	inc    edx
  41c4bb:	mov    DWORD PTR [rsp+0x18],edx
  41c4bf:	test   eax,eax
  41c4c1:	je     41c4ea <flatcc_builder_embed_buffer@@Base+0xfa>
  41c4c3:	mov    eax,eax
  41c4c5:	add    r8,rax
  41c4c8:	mov    QWORD PTR [rsp+0x10],r8
  41c4cd:	mov    ecx,edx
  41c4cf:	shl    rcx,0x4
  41c4d3:	lea    rsi,[rip+0x19546]        # 435a20 <flatcc_builder_padding_base@@Base>
  41c4da:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41c4df:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41c4e4:	inc    edx
  41c4e6:	mov    DWORD PTR [rsp+0x18],edx
  41c4ea:	cmp    r8,0x11
  41c4ee:	setb   al
  41c4f1:	lea    rcx,[r8-0x10]
  41c4f5:	shr    rcx,0x20
  41c4f9:	sete   cl
  41c4fc:	test   r8d,r8d
  41c4ff:	jle    41c54c <flatcc_builder_embed_buffer@@Base+0x15c>
  41c501:	or     al,cl
  41c503:	je     41c54c <flatcc_builder_embed_buffer@@Base+0x15c>
  41c505:	sub    r14d,r8d
  41c508:	mov    rdi,QWORD PTR [r12+0x38]
  41c50d:	lea    rsi,[rsp+0x20]
  41c512:	mov    ecx,r14d
  41c515:	call   QWORD PTR [r12+0x48]
  41c51a:	test   eax,eax
  41c51c:	jne    41c56b <flatcc_builder_embed_buffer@@Base+0x17b>
  41c51e:	mov    DWORD PTR [r12+0xf0],r14d
  41c526:	mov    eax,r14d
  41c529:	add    rsp,0xa0
  41c530:	pop    rbx
  41c531:	pop    r12
  41c533:	pop    r14
  41c535:	pop    r15
  41c537:	pop    rbp
  41c538:	ret    
  41c539:	xor    edx,edx
  41c53b:	xor    r8d,r8d
  41c53e:	test   rbp,rbp
  41c541:	jne    41c4a1 <flatcc_builder_embed_buffer@@Base+0xb1>
  41c547:	jmp    41c4bf <flatcc_builder_embed_buffer@@Base+0xcf>
  41c54c:	lea    rdi,[rip+0x1a90f]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c553:	lea    rsi,[rip+0x19748]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c55a:	lea    rcx,[rip+0x1a7c0]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41c561:	mov    edx,0x287
  41c566:	call   406070 <__assert_fail@plt>
  41c56b:	lea    rdi,[rip+0x1a8f0]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c572:	lea    rsi,[rip+0x19729]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c579:	lea    rcx,[rip+0x1a7a1]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41c580:	mov    edx,0x28b
  41c585:	call   406070 <__assert_fail@plt>
  41c58a:	nop    WORD PTR [rax+rax*1+0x0]
  41c590:	push   rbx
  41c591:	sub    rsp,0x90
  41c598:	mov    rax,rdi
  41c59b:	test   dx,dx
  41c59e:	jne    41c5b1 <flatcc_builder_embed_buffer@@Base+0x1c1>
  41c5a0:	mov    edi,DWORD PTR [rax+0xec]
  41c5a6:	test   di,di
  41c5a9:	mov    edx,0x1
  41c5ae:	cmovne edx,edi
  41c5b1:	movzx  ebx,WORD PTR [rsi]
  41c5b4:	mov    edi,0x4
  41c5b9:	cmp    bx,0x4
  41c5bd:	cmovae edi,ebx
  41c5c0:	jb     41c5cd <flatcc_builder_embed_buffer@@Base+0x1dd>
  41c5c2:	cmp    di,dx
  41c5c5:	jb     41c5cd <flatcc_builder_embed_buffer@@Base+0x1dd>
  41c5c7:	test   ecx,ecx
  41c5c9:	jne    41c634 <flatcc_builder_embed_buffer@@Base+0x244>
  41c5cb:	jmp    41c5da <flatcc_builder_embed_buffer@@Base+0x1ea>
  41c5cd:	cmp    di,dx
  41c5d0:	cmovb  edi,edx
  41c5d3:	mov    WORD PTR [rsi],di
  41c5d6:	test   ecx,ecx
  41c5d8:	jne    41c634 <flatcc_builder_embed_buffer@@Base+0x244>
  41c5da:	mov    ebx,DWORD PTR [rax+0xf4]
  41c5e0:	movzx  r8d,dx
  41c5e4:	dec    r8d
  41c5e7:	and    r8d,ebx
  41c5ea:	je     41c634 <flatcc_builder_embed_buffer@@Base+0x244>
  41c5ec:	mov    QWORD PTR [rsp],r8
  41c5f0:	lea    rcx,[rip+0x19429]        # 435a20 <flatcc_builder_padding_base@@Base>
  41c5f7:	mov    QWORD PTR [rsp+0x10],rcx
  41c5fc:	mov    QWORD PTR [rsp+0x18],r8
  41c601:	mov    DWORD PTR [rsp+0x8],0x1
  41c609:	lea    ecx,[r8+rbx*1]
  41c60d:	mov    DWORD PTR [rax+0xf4],ecx
  41c613:	test   r8d,r8d
  41c616:	js     41c63d <flatcc_builder_embed_buffer@@Base+0x24d>
  41c618:	mov    rdi,QWORD PTR [rax+0x38]
  41c61c:	lea    rsi,[rsp+0x10]
  41c621:	mov    edx,0x1
  41c626:	mov    ecx,ebx
  41c628:	call   QWORD PTR [rax+0x48]
  41c62b:	test   eax,eax
  41c62d:	jne    41c65c <flatcc_builder_embed_buffer@@Base+0x26c>
  41c62f:	cmp    ebx,0xffffffff
  41c632:	je     41c67b <flatcc_builder_embed_buffer@@Base+0x28b>
  41c634:	add    rsp,0x90
  41c63b:	pop    rbx
  41c63c:	ret    
  41c63d:	lea    rdi,[rip+0x1a81e]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c644:	lea    rsi,[rip+0x19657]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c64b:	lea    rcx,[rip+0x1a78b]        # 436ddd <flatcc_builder_padding_base@@Base+0x13bd>
  41c652:	mov    edx,0x2a1
  41c657:	call   406070 <__assert_fail@plt>
  41c65c:	lea    rdi,[rip+0x1a7ff]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c663:	lea    rsi,[rip+0x19638]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c66a:	lea    rcx,[rip+0x1a76c]        # 436ddd <flatcc_builder_padding_base@@Base+0x13bd>
  41c671:	mov    edx,0x2a5
  41c676:	call   406070 <__assert_fail@plt>
  41c67b:	lea    rdi,[rip+0x1a7e0]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c682:	lea    rsi,[rip+0x19619]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c689:	lea    rcx,[rip+0x1a64f]        # 436cdf <flatcc_builder_padding_base@@Base+0x12bf>
  41c690:	mov    edx,0x2be
  41c695:	call   406070 <__assert_fail@plt>
  41c69a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c6a0 <flatcc_builder_create_buffer@@Base>:
  41c6a0:	push   rbp
  41c6a1:	push   r15
  41c6a3:	push   r14
  41c6a5:	push   r13
  41c6a7:	push   r12
  41c6a9:	push   rbx
  41c6aa:	sub    rsp,0xa8
  41c6b1:	mov    r12d,r9d
  41c6b4:	mov    r14d,ecx
  41c6b7:	mov    rbp,rsi
  41c6ba:	mov    r13,rdi
  41c6bd:	mov    WORD PTR [rsp+0xa],r8w
  41c6c3:	mov    DWORD PTR [rsp+0xc],0x0
  41c6cb:	mov    r15d,r9d
  41c6ce:	and    r15d,0x1
  41c6d2:	lea    rsi,[rsp+0xa]
  41c6d7:	mov    ecx,r15d
  41c6da:	call   41c590 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41c6df:	movzx  eax,WORD PTR [rsp+0xa]
  41c6e4:	cmp    WORD PTR [r13+0xe8],ax
  41c6ec:	jae    41c6f6 <flatcc_builder_create_buffer@@Base+0x56>
  41c6ee:	mov    WORD PTR [r13+0xe8],ax
  41c6f6:	movzx  edx,ax
  41c6f9:	xor    eax,eax
  41c6fb:	test   rbp,rbp
  41c6fe:	je     41c718 <flatcc_builder_create_buffer@@Base+0x78>
  41c700:	mov    ecx,DWORD PTR [rbp+0x0]
  41c703:	mov    DWORD PTR [rsp+0xc],ecx
  41c707:	xor    edi,edi
  41c709:	test   ecx,ecx
  41c70b:	setne  dil
  41c70f:	mov    rsi,rdi
  41c712:	shl    rsi,0x2
  41c716:	jmp    41c71c <flatcc_builder_create_buffer@@Base+0x7c>
  41c718:	xor    edi,edi
  41c71a:	xor    esi,esi
  41c71c:	lea    ebx,[r12+r12*1]
  41c720:	and    ebx,0x4
  41c723:	mov    ebp,DWORD PTR [r13+0xf0]
  41c72a:	mov    ecx,ebp
  41c72c:	sub    ecx,ebx
  41c72e:	sub    ecx,esi
  41c730:	add    ecx,0xfffffffc
  41c733:	dec    edx
  41c735:	mov    QWORD PTR [rsp+0x18],0x0
  41c73e:	mov    DWORD PTR [rsp+0x20],0x0
  41c746:	test   r12b,0x3
  41c74a:	je     41c77d <flatcc_builder_create_buffer@@Base+0xdd>
  41c74c:	mov    QWORD PTR [rsp+0x18],0x4
  41c755:	lea    rax,[rsp+0x10]
  41c75a:	mov    QWORD PTR [rsp+0x28],rax
  41c75f:	mov    QWORD PTR [rsp+0x30],0x4
  41c768:	mov    DWORD PTR [rsp+0x20],0x1
  41c770:	mov    r8d,0x8
  41c776:	mov    eax,0x1
  41c77b:	jmp    41c783 <flatcc_builder_create_buffer@@Base+0xe3>
  41c77d:	mov    r8d,0x4
  41c783:	and    ecx,edx
  41c785:	mov    QWORD PTR [rsp+0x18],r8
  41c78a:	mov    edx,eax
  41c78c:	shl    rdx,0x4
  41c790:	lea    rbx,[rsp+0x14]
  41c795:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  41c79a:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  41c7a3:	lea    edx,[rax+0x1]
  41c7a6:	mov    DWORD PTR [rsp+0x20],edx
  41c7aa:	test   dil,dil
  41c7ad:	je     41c7d5 <flatcc_builder_create_buffer@@Base+0x135>
  41c7af:	add    r8,rsi
  41c7b2:	mov    QWORD PTR [rsp+0x18],r8
  41c7b7:	mov    edx,edx
  41c7b9:	shl    rdx,0x4
  41c7bd:	lea    rdi,[rsp+0xc]
  41c7c2:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  41c7c7:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  41c7cc:	or     eax,0x2
  41c7cf:	mov    DWORD PTR [rsp+0x20],eax
  41c7d3:	mov    edx,eax
  41c7d5:	test   ecx,ecx
  41c7d7:	je     41c800 <flatcc_builder_create_buffer@@Base+0x160>
  41c7d9:	mov    eax,ecx
  41c7db:	add    r8,rax
  41c7de:	mov    QWORD PTR [rsp+0x18],r8
  41c7e3:	mov    ecx,edx
  41c7e5:	shl    rcx,0x4
  41c7e9:	lea    rsi,[rip+0x19230]        # 435a20 <flatcc_builder_padding_base@@Base>
  41c7f0:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  41c7f5:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  41c7fa:	inc    edx
  41c7fc:	mov    DWORD PTR [rsp+0x20],edx
  41c800:	xor    eax,eax
  41c802:	test   r12b,0x3
  41c806:	setne  al
  41c809:	sub    ebp,r8d
  41c80c:	lea    eax,[rbp+rax*4+0x0]
  41c810:	mov    ecx,r15d
  41c813:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  41c81b:	sub    ecx,eax
  41c81d:	mov    DWORD PTR [rsp+0x10],ecx
  41c821:	sub    r14d,eax
  41c824:	mov    DWORD PTR [rsp+0x14],r14d
  41c829:	cmp    r8,0x11
  41c82d:	setb   al
  41c830:	lea    rcx,[r8-0x10]
  41c834:	shr    rcx,0x20
  41c838:	sete   cl
  41c83b:	test   r8d,r8d
  41c83e:	jle    41c876 <flatcc_builder_create_buffer@@Base+0x1d6>
  41c840:	or     al,cl
  41c842:	je     41c876 <flatcc_builder_create_buffer@@Base+0x1d6>
  41c844:	mov    rdi,QWORD PTR [r13+0x38]
  41c848:	lea    rsi,[rsp+0x28]
  41c84d:	mov    ecx,ebp
  41c84f:	call   QWORD PTR [r13+0x48]
  41c853:	test   eax,eax
  41c855:	jne    41c895 <flatcc_builder_create_buffer@@Base+0x1f5>
  41c857:	mov    DWORD PTR [r13+0xf0],ebp
  41c85e:	test   ebp,ebp
  41c860:	je     41c8b4 <flatcc_builder_create_buffer@@Base+0x214>
  41c862:	mov    eax,ebp
  41c864:	add    rsp,0xa8
  41c86b:	pop    rbx
  41c86c:	pop    r12
  41c86e:	pop    r13
  41c870:	pop    r14
  41c872:	pop    r15
  41c874:	pop    rbp
  41c875:	ret    
  41c876:	lea    rdi,[rip+0x1a5e5]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c87d:	lea    rsi,[rip+0x1941e]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c884:	lea    rcx,[rip+0x1a496]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41c88b:	mov    edx,0x287
  41c890:	call   406070 <__assert_fail@plt>
  41c895:	lea    rdi,[rip+0x1a5c6]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c89c:	lea    rsi,[rip+0x193ff]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c8a3:	lea    rcx,[rip+0x1a477]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41c8aa:	mov    edx,0x28b
  41c8af:	call   406070 <__assert_fail@plt>
  41c8b4:	lea    rdi,[rip+0x1a5a7]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c8bb:	lea    rsi,[rip+0x193e0]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c8c2:	lea    rcx,[rip+0x1952e]        # 435df7 <flatcc_builder_padding_base@@Base+0x3d7>
  41c8c9:	mov    edx,0x304
  41c8ce:	call   406070 <__assert_fail@plt>
  41c8d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8dd:	nop    DWORD PTR [rax]

000000000041c8e0 <flatcc_builder_create_struct@@Base>:
  41c8e0:	push   rbp
  41c8e1:	push   rbx
  41c8e2:	sub    rsp,0x98
  41c8e9:	test   cx,cx
  41c8ec:	je     41c9e2 <flatcc_builder_create_struct@@Base+0x102>
  41c8f2:	mov    r8,rdx
  41c8f5:	mov    rbx,rdi
  41c8f8:	cmp    WORD PTR [rdi+0xe8],cx
  41c8ff:	jae    41c908 <flatcc_builder_create_struct@@Base+0x28>
  41c901:	mov    WORD PTR [rbx+0xe8],cx
  41c908:	mov    ebp,DWORD PTR [rbx+0xf0]
  41c90e:	mov    edx,ebp
  41c910:	sub    edx,r8d
  41c913:	movzx  eax,cx
  41c916:	dec    eax
  41c918:	and    eax,edx
  41c91a:	mov    QWORD PTR [rsp+0x8],0x0
  41c923:	mov    DWORD PTR [rsp+0x10],0x0
  41c92b:	test   r8,r8
  41c92e:	je     41c9bb <flatcc_builder_create_struct@@Base+0xdb>
  41c934:	mov    QWORD PTR [rsp+0x8],r8
  41c939:	mov    QWORD PTR [rsp+0x18],rsi
  41c93e:	mov    QWORD PTR [rsp+0x20],r8
  41c943:	mov    DWORD PTR [rsp+0x10],0x1
  41c94b:	mov    edx,0x1
  41c950:	test   eax,eax
  41c952:	je     41c979 <flatcc_builder_create_struct@@Base+0x99>
  41c954:	add    r8,rax
  41c957:	mov    QWORD PTR [rsp+0x8],r8
  41c95c:	mov    ecx,edx
  41c95e:	shl    rcx,0x4
  41c962:	lea    rsi,[rip+0x190b7]        # 435a20 <flatcc_builder_padding_base@@Base>
  41c969:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41c96e:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41c973:	inc    edx
  41c975:	mov    DWORD PTR [rsp+0x10],edx
  41c979:	cmp    r8,0x11
  41c97d:	setb   al
  41c980:	lea    rcx,[r8-0x10]
  41c984:	shr    rcx,0x20
  41c988:	sete   cl
  41c98b:	test   r8d,r8d
  41c98e:	jle    41c9c3 <flatcc_builder_create_struct@@Base+0xe3>
  41c990:	or     al,cl
  41c992:	je     41c9c3 <flatcc_builder_create_struct@@Base+0xe3>
  41c994:	sub    ebp,r8d
  41c997:	mov    rdi,QWORD PTR [rbx+0x38]
  41c99b:	lea    rsi,[rsp+0x18]
  41c9a0:	mov    ecx,ebp
  41c9a2:	call   QWORD PTR [rbx+0x48]
  41c9a5:	test   eax,eax
  41c9a7:	jne    41ca01 <flatcc_builder_create_struct@@Base+0x121>
  41c9a9:	mov    DWORD PTR [rbx+0xf0],ebp
  41c9af:	mov    eax,ebp
  41c9b1:	add    rsp,0x98
  41c9b8:	pop    rbx
  41c9b9:	pop    rbp
  41c9ba:	ret    
  41c9bb:	xor    edx,edx
  41c9bd:	test   eax,eax
  41c9bf:	jne    41c954 <flatcc_builder_create_struct@@Base+0x74>
  41c9c1:	jmp    41c979 <flatcc_builder_create_struct@@Base+0x99>
  41c9c3:	lea    rdi,[rip+0x1a498]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41c9ca:	lea    rsi,[rip+0x192d1]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c9d1:	lea    rcx,[rip+0x1a349]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41c9d8:	mov    edx,0x287
  41c9dd:	call   406070 <__assert_fail@plt>
  41c9e2:	lea    rdi,[rip+0x19491]        # 435e7a <flatcc_builder_padding_base@@Base+0x45a>
  41c9e9:	lea    rsi,[rip+0x192b2]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41c9f0:	lea    rcx,[rip+0x1948e]        # 435e85 <flatcc_builder_padding_base@@Base+0x465>
  41c9f7:	mov    edx,0x30f
  41c9fc:	call   406070 <__assert_fail@plt>
  41ca01:	lea    rdi,[rip+0x1a45a]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41ca08:	lea    rsi,[rip+0x19293]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ca0f:	lea    rcx,[rip+0x1a30b]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41ca16:	mov    edx,0x28b
  41ca1b:	call   406070 <__assert_fail@plt>

000000000041ca20 <flatcc_builder_start_buffer@@Base>:
  41ca20:	push   rbp
  41ca21:	push   r15
  41ca23:	push   r14
  41ca25:	push   rbx
  41ca26:	push   rax
  41ca27:	mov    r15d,ecx
  41ca2a:	mov    ebp,edx
  41ca2c:	mov    r14,rsi
  41ca2f:	mov    rbx,rdi
  41ca32:	movzx  esi,WORD PTR [rdi+0xe8]
  41ca39:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41ca3e:	mov    ecx,eax
  41ca40:	mov    eax,0xffffffff
  41ca45:	test   ecx,ecx
  41ca47:	jne    41caec <flatcc_builder_start_buffer@@Base+0xcc>
  41ca4d:	mov    WORD PTR [rbx+0xe8],0x1
  41ca56:	movzx  eax,WORD PTR [rbx+0xec]
  41ca5d:	mov    rcx,QWORD PTR [rbx+0x30]
  41ca61:	mov    WORD PTR [rcx+0x22],ax
  41ca65:	mov    WORD PTR [rbx+0xec],bp
  41ca6c:	movzx  eax,WORD PTR [rbx+0x10c]
  41ca73:	mov    rcx,QWORD PTR [rbx+0x30]
  41ca77:	mov    WORD PTR [rcx+0x20],ax
  41ca7b:	mov    WORD PTR [rbx+0x10c],r15w
  41ca83:	mov    eax,DWORD PTR [rbx+0xf8]
  41ca89:	mov    rcx,QWORD PTR [rbx+0x30]
  41ca8d:	mov    DWORD PTR [rcx+0x14],eax
  41ca90:	mov    eax,DWORD PTR [rbx+0x100]
  41ca96:	mov    rcx,QWORD PTR [rbx+0x30]
  41ca9a:	mov    DWORD PTR [rcx+0x1c],eax
  41ca9d:	mov    eax,DWORD PTR [rbx+0xf0]
  41caa3:	mov    DWORD PTR [rbx+0xf8],eax
  41caa9:	mov    eax,DWORD PTR [rbx+0xfc]
  41caaf:	lea    ecx,[rax+0x1]
  41cab2:	mov    DWORD PTR [rbx+0xfc],ecx
  41cab8:	mov    DWORD PTR [rbx+0x100],eax
  41cabe:	mov    eax,DWORD PTR [rbx+0x110]
  41cac4:	mov    rcx,QWORD PTR [rbx+0x30]
  41cac8:	mov    DWORD PTR [rcx+0x10],eax
  41cacb:	test   r14,r14
  41cace:	jne    41cad7 <flatcc_builder_start_buffer@@Base+0xb7>
  41cad0:	lea    r14,[rip+0x18f49]        # 435a20 <flatcc_builder_padding_base@@Base>
  41cad7:	mov    eax,DWORD PTR [r14]
  41cada:	mov    DWORD PTR [rbx+0x110],eax
  41cae0:	mov    rax,QWORD PTR [rbx+0x30]
  41cae4:	mov    WORD PTR [rax+0xe],0x1
  41caea:	xor    eax,eax
  41caec:	add    rsp,0x8
  41caf0:	pop    rbx
  41caf1:	pop    r14
  41caf3:	pop    r15
  41caf5:	pop    rbp
  41caf6:	ret    
  41caf7:	nop    WORD PTR [rax+rax*1+0x0]
  41cb00:	push   rbp
  41cb01:	push   r15
  41cb03:	push   r14
  41cb05:	push   rbx
  41cb06:	push   rax
  41cb07:	mov    r14d,esi
  41cb0a:	mov    rbx,rdi
  41cb0d:	movsxd rbp,DWORD PTR [rdi+0x104]
  41cb14:	lea    eax,[rbp+0x1]
  41cb17:	mov    DWORD PTR [rdi+0x104],eax
  41cb1d:	cmp    ebp,DWORD PTR [rdi+0x108]
  41cb23:	jge    41cb36 <flatcc_builder_start_buffer@@Base+0x116>
  41cb25:	mov    rcx,QWORD PTR [rbx+0x30]
  41cb29:	add    rcx,0x24
  41cb2d:	mov    QWORD PTR [rbx+0x30],rcx
  41cb31:	jmp    41cbc9 <flatcc_builder_start_buffer@@Base+0x1a9>
  41cb36:	mov    eax,DWORD PTR [rbx+0x120]
  41cb3c:	mov    r15d,0xffffffff
  41cb42:	test   eax,eax
  41cb44:	jle    41cb4e <flatcc_builder_start_buffer@@Base+0x12e>
  41cb46:	cmp    ebp,eax
  41cb48:	jge    41cc04 <flatcc_builder_start_buffer@@Base+0x1e4>
  41cb4e:	shl    rbp,0x2
  41cb52:	lea    rdx,[rbp*8+0x24]
  41cb5a:	add    rdx,rbp
  41cb5d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41cb64:	jbe    41cb84 <flatcc_builder_start_buffer@@Base+0x164>
  41cb66:	lea    rsi,[rbx+0x98]
  41cb6d:	mov    rdi,QWORD PTR [rbx+0x40]
  41cb71:	xor    ecx,ecx
  41cb73:	mov    r8d,0x4
  41cb79:	call   QWORD PTR [rbx+0x50]
  41cb7c:	test   eax,eax
  41cb7e:	jne    41cc12 <flatcc_builder_start_buffer@@Base+0x1f2>
  41cb84:	lea    rcx,[rbp*8+0x0]
  41cb8c:	add    rcx,rbp
  41cb8f:	add    rcx,QWORD PTR [rbx+0x98]
  41cb96:	mov    QWORD PTR [rbx+0x30],rcx
  41cb9a:	je     41cc04 <flatcc_builder_start_buffer@@Base+0x1e4>
  41cb9c:	movabs rax,0xe38e38e38e38e38f
  41cba6:	mul    QWORD PTR [rbx+0xa0]
  41cbad:	shr    rdx,0x5
  41cbb1:	mov    eax,DWORD PTR [rbx+0x120]
  41cbb7:	cmp    eax,edx
  41cbb9:	mov    esi,edx
  41cbbb:	cmovle esi,eax
  41cbbe:	test   eax,eax
  41cbc0:	cmovle esi,edx
  41cbc3:	mov    DWORD PTR [rbx+0x108],esi
  41cbc9:	mov    eax,DWORD PTR [rbx+0x20]
  41cbcc:	mov    DWORD PTR [rcx+0x8],eax
  41cbcf:	movzx  edx,WORD PTR [rbx+0xea]
  41cbd6:	mov    WORD PTR [rcx+0xc],dx
  41cbda:	mov    WORD PTR [rbx+0xea],r14w
  41cbe2:	mov    edx,DWORD PTR [rbx+0x28]
  41cbe5:	mov    DWORD PTR [rcx],edx
  41cbe7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41cbee:	lea    eax,[rax+rdx*1]
  41cbf1:	add    eax,0x7
  41cbf4:	and    eax,0xfffffff8
  41cbf7:	mov    DWORD PTR [rbx+0x28],eax
  41cbfa:	mov    DWORD PTR [rbx+0x20],0x0
  41cc01:	xor    r15d,r15d
  41cc04:	mov    eax,r15d
  41cc07:	add    rsp,0x8
  41cc0b:	pop    rbx
  41cc0c:	pop    r14
  41cc0e:	pop    r15
  41cc10:	pop    rbp
  41cc11:	ret    
  41cc12:	lea    rdi,[rip+0x1a249]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41cc19:	lea    rsi,[rip+0x19082]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41cc20:	lea    rcx,[rip+0x1a075]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41cc27:	mov    edx,0x134
  41cc2c:	call   406070 <__assert_fail@plt>
  41cc31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cc40 <flatcc_builder_end_buffer@@Base>:
  41cc40:	push   rbp
  41cc41:	push   rbx
  41cc42:	push   rax
  41cc43:	mov    rax,QWORD PTR [rdi+0x30]
  41cc47:	cmp    WORD PTR [rax+0xe],0x1
  41cc4c:	jne    41cd49 <flatcc_builder_end_buffer@@Base+0x109>
  41cc52:	mov    ecx,esi
  41cc54:	mov    rbx,rdi
  41cc57:	movzx  eax,WORD PTR [rdi+0x10c]
  41cc5e:	and    eax,0x2
  41cc61:	xor    r9d,r9d
  41cc64:	cmp    DWORD PTR [rdi+0x100],0x0
  41cc6b:	setne  r9b
  41cc6f:	or     r9d,eax
  41cc72:	movzx  edi,WORD PTR [rdi+0xe8]
  41cc79:	movzx  eax,WORD PTR [rbx+0xec]
  41cc80:	cmp    di,ax
  41cc83:	jae    41cc8e <flatcc_builder_end_buffer@@Base+0x4e>
  41cc85:	mov    WORD PTR [rbx+0xe8],ax
  41cc8c:	mov    edi,eax
  41cc8e:	lea    rsi,[rbx+0x110]
  41cc95:	movzx  edx,ax
  41cc98:	movzx  r8d,di
  41cc9c:	mov    rdi,rbx
  41cc9f:	call   41c6a0 <flatcc_builder_create_buffer@@Base>
  41cca4:	mov    ebp,eax
  41cca6:	test   eax,eax
  41cca8:	je     41cd40 <flatcc_builder_end_buffer@@Base+0x100>
  41ccae:	mov    rax,QWORD PTR [rbx+0x30]
  41ccb2:	mov    ecx,DWORD PTR [rax+0x14]
  41ccb5:	mov    DWORD PTR [rbx+0xf8],ecx
  41ccbb:	mov    ecx,DWORD PTR [rax+0x1c]
  41ccbe:	mov    DWORD PTR [rbx+0x100],ecx
  41ccc4:	mov    ecx,DWORD PTR [rax+0x10]
  41ccc7:	mov    DWORD PTR [rbx+0x110],ecx
  41cccd:	movzx  eax,WORD PTR [rax+0x20]
  41ccd1:	mov    WORD PTR [rbx+0x10c],ax
  41ccd8:	mov    rdi,QWORD PTR [rbx+0x18]
  41ccdc:	mov    edx,DWORD PTR [rbx+0x20]
  41ccdf:	xor    esi,esi
  41cce1:	call   406080 <memset@plt>
  41cce6:	mov    rax,QWORD PTR [rbx+0x30]
  41ccea:	mov    ecx,DWORD PTR [rax+0x8]
  41cced:	mov    DWORD PTR [rbx+0x20],ecx
  41ccf0:	mov    ecx,DWORD PTR [rax]
  41ccf2:	mov    DWORD PTR [rbx+0x28],ecx
  41ccf5:	mov    edx,DWORD PTR [rax+0x4]
  41ccf8:	mov    rsi,rcx
  41ccfb:	add    rsi,QWORD PTR [rbx+0x68]
  41ccff:	mov    QWORD PTR [rbx+0x18],rsi
  41cd03:	mov    esi,DWORD PTR [rbx+0x70]
  41cd06:	sub    esi,ecx
  41cd08:	cmp    esi,edx
  41cd0a:	cmova  esi,edx
  41cd0d:	mov    DWORD PTR [rbx+0x24],esi
  41cd10:	movzx  ecx,WORD PTR [rbx+0xea]
  41cd17:	cmp    WORD PTR [rbx+0xe8],cx
  41cd1e:	jae    41cd27 <flatcc_builder_end_buffer@@Base+0xe7>
  41cd20:	mov    WORD PTR [rbx+0xe8],cx
  41cd27:	movzx  ecx,WORD PTR [rax+0xc]
  41cd2b:	mov    WORD PTR [rbx+0xea],cx
  41cd32:	add    rax,0xffffffffffffffdc
  41cd36:	mov    QWORD PTR [rbx+0x30],rax
  41cd3a:	dec    DWORD PTR [rbx+0x104]
  41cd40:	mov    eax,ebp
  41cd42:	add    rsp,0x8
  41cd46:	pop    rbx
  41cd47:	pop    rbp
  41cd48:	ret    
  41cd49:	lea    rdi,[rip+0x1919b]        # 435eeb <flatcc_builder_padding_base@@Base+0x4cb>
  41cd50:	lea    rsi,[rip+0x18f4b]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41cd57:	lea    rcx,[rip+0x191b9]        # 435f17 <flatcc_builder_padding_base@@Base+0x4f7>
  41cd5e:	mov    edx,0x346
  41cd63:	call   406070 <__assert_fail@plt>
  41cd68:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cd70 <flatcc_builder_start_struct@@Base>:
  41cd70:	push   r15
  41cd72:	push   r14
  41cd74:	push   rbx
  41cd75:	mov    r14,rsi
  41cd78:	mov    rbx,rdi
  41cd7b:	mov    esi,edx
  41cd7d:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41cd82:	test   eax,eax
  41cd84:	je     41cd8d <flatcc_builder_start_struct@@Base+0x1d>
  41cd86:	xor    eax,eax
  41cd88:	jmp    41ce21 <flatcc_builder_start_struct@@Base+0xb1>
  41cd8d:	mov    rdx,QWORD PTR [rbx+0x30]
  41cd91:	mov    WORD PTR [rdx+0xe],0x2
  41cd97:	mov    ecx,DWORD PTR [rbx+0x28]
  41cd9a:	mov    esi,DWORD PTR [rbx+0x70]
  41cd9d:	mov    rax,QWORD PTR [rbx+0x68]
  41cda1:	add    rax,rcx
  41cda4:	mov    QWORD PTR [rbx+0x18],rax
  41cda8:	sub    esi,ecx
  41cdaa:	cmp    esi,0xfffffffc
  41cdad:	mov    edi,0xfffffffc
  41cdb2:	cmovb  edi,esi
  41cdb5:	mov    DWORD PTR [rbx+0x24],edi
  41cdb8:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41cdbf:	mov    r15d,DWORD PTR [rbx+0x20]
  41cdc3:	add    r14d,r15d
  41cdc6:	mov    DWORD PTR [rbx+0x20],r14d
  41cdca:	cmp    r14d,edi
  41cdcd:	jb     41ce1e <flatcc_builder_start_struct@@Base+0xae>
  41cdcf:	inc    r14d
  41cdd2:	lea    rsi,[rbx+0x68]
  41cdd6:	mov    rdi,QWORD PTR [rbx+0x40]
  41cdda:	add    r14,rcx
  41cddd:	mov    rdx,r14
  41cde0:	mov    ecx,0x1
  41cde5:	mov    r8d,0x1
  41cdeb:	call   QWORD PTR [rbx+0x50]
  41cdee:	test   eax,eax
  41cdf0:	jne    41cd86 <flatcc_builder_start_struct@@Base+0x16>
  41cdf2:	mov    ecx,DWORD PTR [rbx+0x28]
  41cdf5:	mov    rax,rcx
  41cdf8:	add    rax,QWORD PTR [rbx+0x68]
  41cdfc:	mov    QWORD PTR [rbx+0x18],rax
  41ce00:	mov    edx,DWORD PTR [rbx+0x70]
  41ce03:	sub    edx,ecx
  41ce05:	cmp    edx,0xfffffffc
  41ce08:	mov    ecx,0xfffffffc
  41ce0d:	cmovb  ecx,edx
  41ce10:	mov    DWORD PTR [rbx+0x24],ecx
  41ce13:	mov    rcx,QWORD PTR [rbx+0x30]
  41ce17:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ce1e:	add    rax,r15
  41ce21:	pop    rbx
  41ce22:	pop    r14
  41ce24:	pop    r15
  41ce26:	ret    
  41ce27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ce30 <flatcc_builder_struct_edit@@Base>:
  41ce30:	mov    rax,QWORD PTR [rdi+0x18]
  41ce34:	ret    
  41ce35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce3f:	nop

000000000041ce40 <flatcc_builder_end_struct@@Base>:
  41ce40:	push   rbp
  41ce41:	push   rbx
  41ce42:	push   rax
  41ce43:	mov    rax,QWORD PTR [rdi+0x30]
  41ce47:	cmp    WORD PTR [rax+0xe],0x2
  41ce4c:	jne    41cedf <flatcc_builder_end_struct@@Base+0x9f>
  41ce52:	mov    rbx,rdi
  41ce55:	mov    rsi,QWORD PTR [rdi+0x18]
  41ce59:	mov    edx,DWORD PTR [rdi+0x20]
  41ce5c:	movzx  ecx,WORD PTR [rdi+0xea]
  41ce63:	call   41c8e0 <flatcc_builder_create_struct@@Base>
  41ce68:	mov    ebp,eax
  41ce6a:	test   eax,eax
  41ce6c:	je     41ced6 <flatcc_builder_end_struct@@Base+0x96>
  41ce6e:	mov    rdi,QWORD PTR [rbx+0x18]
  41ce72:	mov    edx,DWORD PTR [rbx+0x20]
  41ce75:	xor    esi,esi
  41ce77:	call   406080 <memset@plt>
  41ce7c:	mov    rax,QWORD PTR [rbx+0x30]
  41ce80:	mov    ecx,DWORD PTR [rax+0x8]
  41ce83:	mov    DWORD PTR [rbx+0x20],ecx
  41ce86:	mov    ecx,DWORD PTR [rax]
  41ce88:	mov    DWORD PTR [rbx+0x28],ecx
  41ce8b:	mov    edx,DWORD PTR [rax+0x4]
  41ce8e:	mov    rsi,rcx
  41ce91:	add    rsi,QWORD PTR [rbx+0x68]
  41ce95:	mov    QWORD PTR [rbx+0x18],rsi
  41ce99:	mov    esi,DWORD PTR [rbx+0x70]
  41ce9c:	sub    esi,ecx
  41ce9e:	cmp    esi,edx
  41cea0:	cmova  esi,edx
  41cea3:	mov    DWORD PTR [rbx+0x24],esi
  41cea6:	movzx  ecx,WORD PTR [rbx+0xea]
  41cead:	cmp    WORD PTR [rbx+0xe8],cx
  41ceb4:	jae    41cebd <flatcc_builder_end_struct@@Base+0x7d>
  41ceb6:	mov    WORD PTR [rbx+0xe8],cx
  41cebd:	movzx  ecx,WORD PTR [rax+0xc]
  41cec1:	mov    WORD PTR [rbx+0xea],cx
  41cec8:	add    rax,0xffffffffffffffdc
  41cecc:	mov    QWORD PTR [rbx+0x30],rax
  41ced0:	dec    DWORD PTR [rbx+0x104]
  41ced6:	mov    eax,ebp
  41ced8:	add    rsp,0x8
  41cedc:	pop    rbx
  41cedd:	pop    rbp
  41cede:	ret    
  41cedf:	lea    rdi,[rip+0x1908a]        # 435f70 <flatcc_builder_padding_base@@Base+0x550>
  41cee6:	lea    rsi,[rip+0x18db5]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ceed:	lea    rcx,[rip+0x190a8]        # 435f9c <flatcc_builder_padding_base@@Base+0x57c>
  41cef4:	mov    edx,0x368
  41cef9:	call   406070 <__assert_fail@plt>
  41cefe:	xchg   ax,ax

000000000041cf00 <flatcc_builder_extend_vector@@Base>:
  41cf00:	push   r14
  41cf02:	push   rbx
  41cf03:	push   rax
  41cf04:	mov    rax,QWORD PTR [rdi+0x30]
  41cf08:	mov    ecx,DWORD PTR [rax+0x14]
  41cf0b:	add    ecx,esi
  41cf0d:	jb     41cf9f <flatcc_builder_extend_vector@@Base+0x9f>
  41cf13:	cmp    ecx,DWORD PTR [rax+0x18]
  41cf16:	ja     41cf9f <flatcc_builder_extend_vector@@Base+0x9f>
  41cf1c:	mov    rbx,rdi
  41cf1f:	mov    DWORD PTR [rax+0x14],ecx
  41cf22:	mov    rax,QWORD PTR [rdi+0x30]
  41cf26:	imul   esi,DWORD PTR [rax+0x10]
  41cf2a:	mov    r14d,DWORD PTR [rdi+0x20]
  41cf2e:	add    esi,r14d
  41cf31:	mov    DWORD PTR [rdi+0x20],esi
  41cf34:	cmp    esi,DWORD PTR [rdi+0x24]
  41cf37:	jae    41cf3f <flatcc_builder_extend_vector@@Base+0x3f>
  41cf39:	mov    rax,QWORD PTR [rbx+0x18]
  41cf3d:	jmp    41cf94 <flatcc_builder_extend_vector@@Base+0x94>
  41cf3f:	inc    esi
  41cf41:	lea    rax,[rbx+0x68]
  41cf45:	mov    rdi,QWORD PTR [rbx+0x40]
  41cf49:	mov    edx,DWORD PTR [rbx+0x28]
  41cf4c:	add    rdx,rsi
  41cf4f:	mov    rsi,rax
  41cf52:	mov    ecx,0x1
  41cf57:	mov    r8d,0x1
  41cf5d:	call   QWORD PTR [rbx+0x50]
  41cf60:	test   eax,eax
  41cf62:	je     41cf68 <flatcc_builder_extend_vector@@Base+0x68>
  41cf64:	xor    eax,eax
  41cf66:	jmp    41cf97 <flatcc_builder_extend_vector@@Base+0x97>
  41cf68:	mov    ecx,DWORD PTR [rbx+0x28]
  41cf6b:	mov    rax,rcx
  41cf6e:	add    rax,QWORD PTR [rbx+0x68]
  41cf72:	mov    QWORD PTR [rbx+0x18],rax
  41cf76:	mov    edx,DWORD PTR [rbx+0x70]
  41cf79:	sub    edx,ecx
  41cf7b:	cmp    edx,0xfffffffc
  41cf7e:	mov    ecx,0xfffffffc
  41cf83:	cmovb  ecx,edx
  41cf86:	mov    DWORD PTR [rbx+0x24],ecx
  41cf89:	mov    rcx,QWORD PTR [rbx+0x30]
  41cf8d:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41cf94:	add    rax,r14
  41cf97:	add    rsp,0x8
  41cf9b:	pop    rbx
  41cf9c:	pop    r14
  41cf9e:	ret    
  41cf9f:	lea    rdi,[rip+0x19dc5]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41cfa6:	lea    rsi,[rip+0x18cf5]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41cfad:	lea    rcx,[rip+0x19dd2]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41cfb4:	mov    edx,0x37c
  41cfb9:	call   406070 <__assert_fail@plt>
  41cfbe:	xchg   ax,ax

000000000041cfc0 <flatcc_builder_vector_push@@Base>:
  41cfc0:	push   r15
  41cfc2:	push   r14
  41cfc4:	push   r13
  41cfc6:	push   r12
  41cfc8:	push   rbx
  41cfc9:	mov    rax,QWORD PTR [rdi+0x30]
  41cfcd:	cmp    WORD PTR [rax+0xe],0x4
  41cfd2:	jne    41d085 <flatcc_builder_vector_push@@Base+0xc5>
  41cfd8:	mov    ecx,DWORD PTR [rax+0x14]
  41cfdb:	cmp    ecx,DWORD PTR [rax+0x18]
  41cfde:	ja     41d0a4 <flatcc_builder_vector_push@@Base+0xe4>
  41cfe4:	mov    r14,rsi
  41cfe7:	mov    rbx,rdi
  41cfea:	inc    ecx
  41cfec:	mov    DWORD PTR [rax+0x14],ecx
  41cfef:	mov    rax,QWORD PTR [rdi+0x30]
  41cff3:	mov    r15d,DWORD PTR [rax+0x10]
  41cff7:	mov    r13d,DWORD PTR [rdi+0x20]
  41cffb:	lea    eax,[r15+r13*1]
  41cfff:	mov    DWORD PTR [rdi+0x20],eax
  41d002:	cmp    eax,DWORD PTR [rdi+0x24]
  41d005:	jae    41d012 <flatcc_builder_vector_push@@Base+0x52>
  41d007:	mov    r12,QWORD PTR [rbx+0x18]
  41d00b:	add    r12,r13
  41d00e:	jne    41d06a <flatcc_builder_vector_push@@Base+0xaa>
  41d010:	jmp    41d034 <flatcc_builder_vector_push@@Base+0x74>
  41d012:	inc    eax
  41d014:	lea    rsi,[rbx+0x68]
  41d018:	mov    rdi,QWORD PTR [rbx+0x40]
  41d01c:	mov    edx,DWORD PTR [rbx+0x28]
  41d01f:	add    rdx,rax
  41d022:	mov    ecx,0x1
  41d027:	mov    r8d,0x1
  41d02d:	call   QWORD PTR [rbx+0x50]
  41d030:	test   eax,eax
  41d032:	je     41d039 <flatcc_builder_vector_push@@Base+0x79>
  41d034:	xor    r12d,r12d
  41d037:	jmp    41d078 <flatcc_builder_vector_push@@Base+0xb8>
  41d039:	mov    eax,DWORD PTR [rbx+0x28]
  41d03c:	mov    r12,rax
  41d03f:	add    r12,QWORD PTR [rbx+0x68]
  41d043:	mov    QWORD PTR [rbx+0x18],r12
  41d047:	mov    ecx,DWORD PTR [rbx+0x70]
  41d04a:	sub    ecx,eax
  41d04c:	cmp    ecx,0xfffffffc
  41d04f:	mov    eax,0xfffffffc
  41d054:	cmovb  eax,ecx
  41d057:	mov    DWORD PTR [rbx+0x24],eax
  41d05a:	mov    rax,QWORD PTR [rbx+0x30]
  41d05e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d065:	add    r12,r13
  41d068:	je     41d034 <flatcc_builder_vector_push@@Base+0x74>
  41d06a:	mov    rdi,r12
  41d06d:	mov    rsi,r14
  41d070:	mov    rdx,r15
  41d073:	call   4060d0 <memcpy@plt>
  41d078:	mov    rax,r12
  41d07b:	pop    rbx
  41d07c:	pop    r12
  41d07e:	pop    r13
  41d080:	pop    r14
  41d082:	pop    r15
  41d084:	ret    
  41d085:	lea    rdi,[rip+0x18f53]        # 435fdf <flatcc_builder_padding_base@@Base+0x5bf>
  41d08c:	lea    rsi,[rip+0x18c0f]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d093:	lea    rcx,[rip+0x18f71]        # 43600b <flatcc_builder_padding_base@@Base+0x5eb>
  41d09a:	mov    edx,0x38b
  41d09f:	call   406070 <__assert_fail@plt>
  41d0a4:	lea    rdi,[rip+0x18fa3]        # 43604e <flatcc_builder_padding_base@@Base+0x62e>
  41d0ab:	lea    rsi,[rip+0x18bf0]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d0b2:	lea    rcx,[rip+0x18f52]        # 43600b <flatcc_builder_padding_base@@Base+0x5eb>
  41d0b9:	mov    edx,0x38c
  41d0be:	call   406070 <__assert_fail@plt>
  41d0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0cd:	nop    DWORD PTR [rax]

000000000041d0d0 <flatcc_builder_append_vector@@Base>:
  41d0d0:	push   r15
  41d0d2:	push   r14
  41d0d4:	push   r13
  41d0d6:	push   r12
  41d0d8:	push   rbx
  41d0d9:	mov    rax,QWORD PTR [rdi+0x30]
  41d0dd:	cmp    WORD PTR [rax+0xe],0x4
  41d0e2:	jne    41d1bf <flatcc_builder_append_vector@@Base+0xef>
  41d0e8:	mov    r15,rdx
  41d0eb:	mov    ecx,DWORD PTR [rax+0x14]
  41d0ee:	add    ecx,r15d
  41d0f1:	jb     41d1a0 <flatcc_builder_append_vector@@Base+0xd0>
  41d0f7:	cmp    ecx,DWORD PTR [rax+0x18]
  41d0fa:	ja     41d1a0 <flatcc_builder_append_vector@@Base+0xd0>
  41d100:	mov    r14,rsi
  41d103:	mov    rbx,rdi
  41d106:	mov    DWORD PTR [rax+0x14],ecx
  41d109:	mov    rax,QWORD PTR [rdi+0x30]
  41d10d:	imul   r15d,DWORD PTR [rax+0x10]
  41d112:	mov    r13d,DWORD PTR [rdi+0x20]
  41d116:	lea    eax,[r15+r13*1]
  41d11a:	mov    DWORD PTR [rdi+0x20],eax
  41d11d:	cmp    eax,DWORD PTR [rdi+0x24]
  41d120:	jae    41d12d <flatcc_builder_append_vector@@Base+0x5d>
  41d122:	mov    r12,QWORD PTR [rbx+0x18]
  41d126:	add    r12,r13
  41d129:	jne    41d185 <flatcc_builder_append_vector@@Base+0xb5>
  41d12b:	jmp    41d14f <flatcc_builder_append_vector@@Base+0x7f>
  41d12d:	inc    eax
  41d12f:	lea    rsi,[rbx+0x68]
  41d133:	mov    rdi,QWORD PTR [rbx+0x40]
  41d137:	mov    edx,DWORD PTR [rbx+0x28]
  41d13a:	add    rdx,rax
  41d13d:	mov    ecx,0x1
  41d142:	mov    r8d,0x1
  41d148:	call   QWORD PTR [rbx+0x50]
  41d14b:	test   eax,eax
  41d14d:	je     41d154 <flatcc_builder_append_vector@@Base+0x84>
  41d14f:	xor    r12d,r12d
  41d152:	jmp    41d193 <flatcc_builder_append_vector@@Base+0xc3>
  41d154:	mov    eax,DWORD PTR [rbx+0x28]
  41d157:	mov    r12,rax
  41d15a:	add    r12,QWORD PTR [rbx+0x68]
  41d15e:	mov    QWORD PTR [rbx+0x18],r12
  41d162:	mov    ecx,DWORD PTR [rbx+0x70]
  41d165:	sub    ecx,eax
  41d167:	cmp    ecx,0xfffffffc
  41d16a:	mov    eax,0xfffffffc
  41d16f:	cmovb  eax,ecx
  41d172:	mov    DWORD PTR [rbx+0x24],eax
  41d175:	mov    rax,QWORD PTR [rbx+0x30]
  41d179:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d180:	add    r12,r13
  41d183:	je     41d14f <flatcc_builder_append_vector@@Base+0x7f>
  41d185:	mov    edx,r15d
  41d188:	mov    rdi,r12
  41d18b:	mov    rsi,r14
  41d18e:	call   4060d0 <memcpy@plt>
  41d193:	mov    rax,r12
  41d196:	pop    rbx
  41d197:	pop    r12
  41d199:	pop    r13
  41d19b:	pop    r14
  41d19d:	pop    r15
  41d19f:	ret    
  41d1a0:	lea    rdi,[rip+0x19bc4]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41d1a7:	lea    rsi,[rip+0x18af4]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d1ae:	lea    rcx,[rip+0x19bd1]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41d1b5:	mov    edx,0x37c
  41d1ba:	call   406070 <__assert_fail@plt>
  41d1bf:	lea    rdi,[rip+0x18e19]        # 435fdf <flatcc_builder_padding_base@@Base+0x5bf>
  41d1c6:	lea    rsi,[rip+0x18ad5]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d1cd:	lea    rcx,[rip+0x18eb7]        # 43608b <flatcc_builder_padding_base@@Base+0x66b>
  41d1d4:	mov    edx,0x393
  41d1d9:	call   406070 <__assert_fail@plt>
  41d1de:	xchg   ax,ax

000000000041d1e0 <flatcc_builder_extend_offset_vector@@Base>:
  41d1e0:	push   r14
  41d1e2:	push   rbx
  41d1e3:	push   rax
  41d1e4:	mov    rax,QWORD PTR [rdi+0x30]
  41d1e8:	mov    ecx,DWORD PTR [rax+0x14]
  41d1eb:	add    ecx,esi
  41d1ed:	jb     41d274 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41d1f3:	cmp    ecx,0x40000000
  41d1f9:	jae    41d274 <flatcc_builder_extend_offset_vector@@Base+0x94>
  41d1fb:	mov    rbx,rdi
  41d1fe:	mov    DWORD PTR [rax+0x14],ecx
  41d201:	mov    r14d,DWORD PTR [rdi+0x20]
  41d205:	lea    eax,[r14+rsi*4]
  41d209:	mov    DWORD PTR [rdi+0x20],eax
  41d20c:	cmp    eax,DWORD PTR [rdi+0x24]
  41d20f:	jae    41d217 <flatcc_builder_extend_offset_vector@@Base+0x37>
  41d211:	mov    rax,QWORD PTR [rbx+0x18]
  41d215:	jmp    41d269 <flatcc_builder_extend_offset_vector@@Base+0x89>
  41d217:	inc    eax
  41d219:	lea    rsi,[rbx+0x68]
  41d21d:	mov    rdi,QWORD PTR [rbx+0x40]
  41d221:	mov    edx,DWORD PTR [rbx+0x28]
  41d224:	add    rdx,rax
  41d227:	mov    ecx,0x1
  41d22c:	mov    r8d,0x1
  41d232:	call   QWORD PTR [rbx+0x50]
  41d235:	test   eax,eax
  41d237:	je     41d23d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  41d239:	xor    eax,eax
  41d23b:	jmp    41d26c <flatcc_builder_extend_offset_vector@@Base+0x8c>
  41d23d:	mov    ecx,DWORD PTR [rbx+0x28]
  41d240:	mov    rax,rcx
  41d243:	add    rax,QWORD PTR [rbx+0x68]
  41d247:	mov    QWORD PTR [rbx+0x18],rax
  41d24b:	mov    edx,DWORD PTR [rbx+0x70]
  41d24e:	sub    edx,ecx
  41d250:	cmp    edx,0xfffffffc
  41d253:	mov    ecx,0xfffffffc
  41d258:	cmovb  ecx,edx
  41d25b:	mov    DWORD PTR [rbx+0x24],ecx
  41d25e:	mov    rcx,QWORD PTR [rbx+0x30]
  41d262:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41d269:	add    rax,r14
  41d26c:	add    rsp,0x8
  41d270:	pop    rbx
  41d271:	pop    r14
  41d273:	ret    
  41d274:	lea    rdi,[rip+0x19af0]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41d27b:	lea    rsi,[rip+0x18a20]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d282:	lea    rcx,[rip+0x19afd]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41d289:	mov    edx,0x37c
  41d28e:	call   406070 <__assert_fail@plt>
  41d293:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d29d:	nop    DWORD PTR [rax]

000000000041d2a0 <flatcc_builder_offset_vector_push@@Base>:
  41d2a0:	push   rbp
  41d2a1:	push   r14
  41d2a3:	push   rbx
  41d2a4:	mov    rax,QWORD PTR [rdi+0x30]
  41d2a8:	cmp    WORD PTR [rax+0xe],0x5
  41d2ad:	jne    41d342 <flatcc_builder_offset_vector_push@@Base+0xa2>
  41d2b3:	mov    ecx,DWORD PTR [rax+0x14]
  41d2b6:	cmp    ecx,0x3fffffff
  41d2bc:	je     41d305 <flatcc_builder_offset_vector_push@@Base+0x65>
  41d2be:	mov    r14d,esi
  41d2c1:	mov    rbx,rdi
  41d2c4:	inc    ecx
  41d2c6:	mov    DWORD PTR [rax+0x14],ecx
  41d2c9:	mov    ebp,DWORD PTR [rdi+0x20]
  41d2cc:	lea    eax,[rbp+0x4]
  41d2cf:	mov    DWORD PTR [rdi+0x20],eax
  41d2d2:	cmp    eax,DWORD PTR [rdi+0x24]
  41d2d5:	jae    41d2e2 <flatcc_builder_offset_vector_push@@Base+0x42>
  41d2d7:	mov    rax,QWORD PTR [rbx+0x18]
  41d2db:	add    rax,rbp
  41d2de:	jne    41d33a <flatcc_builder_offset_vector_push@@Base+0x9a>
  41d2e0:	jmp    41d305 <flatcc_builder_offset_vector_push@@Base+0x65>
  41d2e2:	lea    eax,[rbp+0x5]
  41d2e5:	lea    rsi,[rbx+0x68]
  41d2e9:	mov    rdi,QWORD PTR [rbx+0x40]
  41d2ed:	mov    edx,DWORD PTR [rbx+0x28]
  41d2f0:	add    rdx,rax
  41d2f3:	mov    ecx,0x1
  41d2f8:	mov    r8d,0x1
  41d2fe:	call   QWORD PTR [rbx+0x50]
  41d301:	test   eax,eax
  41d303:	je     41d309 <flatcc_builder_offset_vector_push@@Base+0x69>
  41d305:	xor    eax,eax
  41d307:	jmp    41d33d <flatcc_builder_offset_vector_push@@Base+0x9d>
  41d309:	mov    ecx,DWORD PTR [rbx+0x28]
  41d30c:	mov    rax,rcx
  41d30f:	add    rax,QWORD PTR [rbx+0x68]
  41d313:	mov    QWORD PTR [rbx+0x18],rax
  41d317:	mov    edx,DWORD PTR [rbx+0x70]
  41d31a:	sub    edx,ecx
  41d31c:	cmp    edx,0xfffffffc
  41d31f:	mov    ecx,0xfffffffc
  41d324:	cmovb  ecx,edx
  41d327:	mov    DWORD PTR [rbx+0x24],ecx
  41d32a:	mov    rcx,QWORD PTR [rbx+0x30]
  41d32e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41d335:	add    rax,rbp
  41d338:	je     41d305 <flatcc_builder_offset_vector_push@@Base+0x65>
  41d33a:	mov    DWORD PTR [rax],r14d
  41d33d:	pop    rbx
  41d33e:	pop    r14
  41d340:	pop    rbp
  41d341:	ret    
  41d342:	lea    rdi,[rip+0x18d8f]        # 4360d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41d349:	lea    rsi,[rip+0x18952]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d350:	lea    rcx,[rip+0x18db4]        # 43610b <flatcc_builder_padding_base@@Base+0x6eb>
  41d357:	mov    edx,0x3a6
  41d35c:	call   406070 <__assert_fail@plt>
  41d361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d36b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d370 <flatcc_builder_append_offset_vector@@Base>:
  41d370:	push   r15
  41d372:	push   r14
  41d374:	push   r13
  41d376:	push   r12
  41d378:	push   rbx
  41d379:	mov    rax,QWORD PTR [rdi+0x30]
  41d37d:	cmp    WORD PTR [rax+0xe],0x5
  41d382:	jne    41d45e <flatcc_builder_append_offset_vector@@Base+0xee>
  41d388:	mov    r15,rdx
  41d38b:	mov    ecx,DWORD PTR [rax+0x14]
  41d38e:	add    ecx,r15d
  41d391:	jb     41d43f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41d397:	cmp    ecx,0x40000000
  41d39d:	jae    41d43f <flatcc_builder_append_offset_vector@@Base+0xcf>
  41d3a3:	mov    r14,rsi
  41d3a6:	mov    rbx,rdi
  41d3a9:	mov    DWORD PTR [rax+0x14],ecx
  41d3ac:	mov    r13d,DWORD PTR [rdi+0x20]
  41d3b0:	lea    eax,[r13+r15*4+0x0]
  41d3b5:	mov    DWORD PTR [rdi+0x20],eax
  41d3b8:	cmp    eax,DWORD PTR [rdi+0x24]
  41d3bb:	jae    41d3c8 <flatcc_builder_append_offset_vector@@Base+0x58>
  41d3bd:	mov    r12,QWORD PTR [rbx+0x18]
  41d3c1:	add    r12,r13
  41d3c4:	jne    41d420 <flatcc_builder_append_offset_vector@@Base+0xb0>
  41d3c6:	jmp    41d3ea <flatcc_builder_append_offset_vector@@Base+0x7a>
  41d3c8:	inc    eax
  41d3ca:	lea    rsi,[rbx+0x68]
  41d3ce:	mov    rdi,QWORD PTR [rbx+0x40]
  41d3d2:	mov    edx,DWORD PTR [rbx+0x28]
  41d3d5:	add    rdx,rax
  41d3d8:	mov    ecx,0x1
  41d3dd:	mov    r8d,0x1
  41d3e3:	call   QWORD PTR [rbx+0x50]
  41d3e6:	test   eax,eax
  41d3e8:	je     41d3ef <flatcc_builder_append_offset_vector@@Base+0x7f>
  41d3ea:	xor    r12d,r12d
  41d3ed:	jmp    41d432 <flatcc_builder_append_offset_vector@@Base+0xc2>
  41d3ef:	mov    eax,DWORD PTR [rbx+0x28]
  41d3f2:	mov    r12,rax
  41d3f5:	add    r12,QWORD PTR [rbx+0x68]
  41d3f9:	mov    QWORD PTR [rbx+0x18],r12
  41d3fd:	mov    ecx,DWORD PTR [rbx+0x70]
  41d400:	sub    ecx,eax
  41d402:	cmp    ecx,0xfffffffc
  41d405:	mov    eax,0xfffffffc
  41d40a:	cmovb  eax,ecx
  41d40d:	mov    DWORD PTR [rbx+0x24],eax
  41d410:	mov    rax,QWORD PTR [rbx+0x30]
  41d414:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d41b:	add    r12,r13
  41d41e:	je     41d3ea <flatcc_builder_append_offset_vector@@Base+0x7a>
  41d420:	shl    r15d,0x2
  41d424:	mov    edx,r15d
  41d427:	mov    rdi,r12
  41d42a:	mov    rsi,r14
  41d42d:	call   4060d0 <memcpy@plt>
  41d432:	mov    rax,r12
  41d435:	pop    rbx
  41d436:	pop    r12
  41d438:	pop    r13
  41d43a:	pop    r14
  41d43c:	pop    r15
  41d43e:	ret    
  41d43f:	lea    rdi,[rip+0x19925]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41d446:	lea    rsi,[rip+0x18855]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d44d:	lea    rcx,[rip+0x19932]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41d454:	mov    edx,0x37c
  41d459:	call   406070 <__assert_fail@plt>
  41d45e:	lea    rdi,[rip+0x18c73]        # 4360d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41d465:	lea    rsi,[rip+0x18836]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d46c:	lea    rcx,[rip+0x18cfa]        # 43616d <flatcc_builder_padding_base@@Base+0x74d>
  41d473:	mov    edx,0x3b4
  41d478:	call   406070 <__assert_fail@plt>
  41d47d:	nop    DWORD PTR [rax]

000000000041d480 <flatcc_builder_extend_string@@Base>:
  41d480:	push   r14
  41d482:	push   rbx
  41d483:	push   rax
  41d484:	mov    rax,QWORD PTR [rdi+0x30]
  41d488:	cmp    WORD PTR [rax+0xe],0x6
  41d48d:	jne    41d519 <flatcc_builder_extend_string@@Base+0x99>
  41d493:	mov    ecx,DWORD PTR [rax+0x14]
  41d496:	add    ecx,esi
  41d498:	jb     41d538 <flatcc_builder_extend_string@@Base+0xb8>
  41d49e:	mov    rbx,rdi
  41d4a1:	mov    DWORD PTR [rax+0x14],ecx
  41d4a4:	mov    r14d,DWORD PTR [rdi+0x20]
  41d4a8:	add    esi,r14d
  41d4ab:	mov    DWORD PTR [rdi+0x20],esi
  41d4ae:	cmp    esi,DWORD PTR [rdi+0x24]
  41d4b1:	jae    41d4b9 <flatcc_builder_extend_string@@Base+0x39>
  41d4b3:	mov    rax,QWORD PTR [rbx+0x18]
  41d4b7:	jmp    41d50e <flatcc_builder_extend_string@@Base+0x8e>
  41d4b9:	inc    esi
  41d4bb:	lea    rax,[rbx+0x68]
  41d4bf:	mov    rdi,QWORD PTR [rbx+0x40]
  41d4c3:	mov    edx,DWORD PTR [rbx+0x28]
  41d4c6:	add    rdx,rsi
  41d4c9:	mov    rsi,rax
  41d4cc:	mov    ecx,0x1
  41d4d1:	mov    r8d,0x1
  41d4d7:	call   QWORD PTR [rbx+0x50]
  41d4da:	test   eax,eax
  41d4dc:	je     41d4e2 <flatcc_builder_extend_string@@Base+0x62>
  41d4de:	xor    eax,eax
  41d4e0:	jmp    41d511 <flatcc_builder_extend_string@@Base+0x91>
  41d4e2:	mov    ecx,DWORD PTR [rbx+0x28]
  41d4e5:	mov    rax,rcx
  41d4e8:	add    rax,QWORD PTR [rbx+0x68]
  41d4ec:	mov    QWORD PTR [rbx+0x18],rax
  41d4f0:	mov    edx,DWORD PTR [rbx+0x70]
  41d4f3:	sub    edx,ecx
  41d4f5:	cmp    edx,0xfffffffc
  41d4f8:	mov    ecx,0xfffffffc
  41d4fd:	cmovb  ecx,edx
  41d500:	mov    DWORD PTR [rbx+0x24],ecx
  41d503:	mov    rcx,QWORD PTR [rbx+0x30]
  41d507:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41d50e:	add    rax,r14
  41d511:	add    rsp,0x8
  41d515:	pop    rbx
  41d516:	pop    r14
  41d518:	ret    
  41d519:	lea    rdi,[rip+0x18cc1]        # 4361e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41d520:	lea    rsi,[rip+0x1877b]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d527:	lea    rcx,[rip+0x18cdf]        # 43620d <flatcc_builder_padding_base@@Base+0x7ed>
  41d52e:	mov    edx,0x3bd
  41d533:	call   406070 <__assert_fail@plt>
  41d538:	lea    rdi,[rip+0x1982c]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41d53f:	lea    rsi,[rip+0x1875c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d546:	lea    rcx,[rip+0x19839]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41d54d:	mov    edx,0x37c
  41d552:	call   406070 <__assert_fail@plt>
  41d557:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d560 <flatcc_builder_append_string@@Base>:
  41d560:	push   r15
  41d562:	push   r14
  41d564:	push   r13
  41d566:	push   r12
  41d568:	push   rbx
  41d569:	mov    rax,QWORD PTR [rdi+0x30]
  41d56d:	cmp    WORD PTR [rax+0xe],0x6
  41d572:	jne    41d61e <flatcc_builder_append_string@@Base+0xbe>
  41d578:	mov    r15,rdx
  41d57b:	mov    ecx,DWORD PTR [rax+0x14]
  41d57e:	add    ecx,r15d
  41d581:	jb     41d63d <flatcc_builder_append_string@@Base+0xdd>
  41d587:	mov    r14,rsi
  41d58a:	mov    rbx,rdi
  41d58d:	mov    DWORD PTR [rax+0x14],ecx
  41d590:	mov    r13d,DWORD PTR [rdi+0x20]
  41d594:	lea    eax,[r15+r13*1]
  41d598:	mov    DWORD PTR [rdi+0x20],eax
  41d59b:	cmp    eax,DWORD PTR [rdi+0x24]
  41d59e:	jae    41d5ab <flatcc_builder_append_string@@Base+0x4b>
  41d5a0:	mov    r12,QWORD PTR [rbx+0x18]
  41d5a4:	add    r12,r13
  41d5a7:	jne    41d603 <flatcc_builder_append_string@@Base+0xa3>
  41d5a9:	jmp    41d5cd <flatcc_builder_append_string@@Base+0x6d>
  41d5ab:	inc    eax
  41d5ad:	lea    rsi,[rbx+0x68]
  41d5b1:	mov    rdi,QWORD PTR [rbx+0x40]
  41d5b5:	mov    edx,DWORD PTR [rbx+0x28]
  41d5b8:	add    rdx,rax
  41d5bb:	mov    ecx,0x1
  41d5c0:	mov    r8d,0x1
  41d5c6:	call   QWORD PTR [rbx+0x50]
  41d5c9:	test   eax,eax
  41d5cb:	je     41d5d2 <flatcc_builder_append_string@@Base+0x72>
  41d5cd:	xor    r12d,r12d
  41d5d0:	jmp    41d611 <flatcc_builder_append_string@@Base+0xb1>
  41d5d2:	mov    eax,DWORD PTR [rbx+0x28]
  41d5d5:	mov    r12,rax
  41d5d8:	add    r12,QWORD PTR [rbx+0x68]
  41d5dc:	mov    QWORD PTR [rbx+0x18],r12
  41d5e0:	mov    ecx,DWORD PTR [rbx+0x70]
  41d5e3:	sub    ecx,eax
  41d5e5:	cmp    ecx,0xfffffffc
  41d5e8:	mov    eax,0xfffffffc
  41d5ed:	cmovb  eax,ecx
  41d5f0:	mov    DWORD PTR [rbx+0x24],eax
  41d5f3:	mov    rax,QWORD PTR [rbx+0x30]
  41d5f7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d5fe:	add    r12,r13
  41d601:	je     41d5cd <flatcc_builder_append_string@@Base+0x6d>
  41d603:	mov    edx,r15d
  41d606:	mov    rdi,r12
  41d609:	mov    rsi,r14
  41d60c:	call   4060d0 <memcpy@plt>
  41d611:	mov    rax,r12
  41d614:	pop    rbx
  41d615:	pop    r12
  41d617:	pop    r13
  41d619:	pop    r14
  41d61b:	pop    r15
  41d61d:	ret    
  41d61e:	lea    rdi,[rip+0x18bbc]        # 4361e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41d625:	lea    rsi,[rip+0x18676]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d62c:	lea    rcx,[rip+0x18c19]        # 43624c <flatcc_builder_padding_base@@Base+0x82c>
  41d633:	mov    edx,0x3c6
  41d638:	call   406070 <__assert_fail@plt>
  41d63d:	lea    rdi,[rip+0x19727]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41d644:	lea    rsi,[rip+0x18657]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d64b:	lea    rcx,[rip+0x19734]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41d652:	mov    edx,0x37c
  41d657:	call   406070 <__assert_fail@plt>
  41d65c:	nop    DWORD PTR [rax+0x0]

000000000041d660 <flatcc_builder_append_string_str@@Base>:
  41d660:	push   r14
  41d662:	push   rbx
  41d663:	push   rax
  41d664:	mov    rbx,rsi
  41d667:	mov    r14,rdi
  41d66a:	mov    rdi,rsi
  41d66d:	call   406060 <strlen@plt>
  41d672:	mov    rdi,r14
  41d675:	mov    rsi,rbx
  41d678:	mov    rdx,rax
  41d67b:	add    rsp,0x8
  41d67f:	pop    rbx
  41d680:	pop    r14
  41d682:	jmp    41d560 <flatcc_builder_append_string@@Base>
  41d687:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d690 <flatcc_builder_append_string_strn@@Base>:
  41d690:	push   r15
  41d692:	push   r14
  41d694:	push   rbx
  41d695:	mov    rbx,rdx
  41d698:	mov    r14,rsi
  41d69b:	mov    r15,rdi
  41d69e:	mov    rdi,rsi
  41d6a1:	xor    esi,esi
  41d6a3:	call   4060a0 <memchr@plt>
  41d6a8:	mov    rcx,rax
  41d6ab:	sub    rcx,r14
  41d6ae:	test   rax,rax
  41d6b1:	cmovne rbx,rcx
  41d6b5:	mov    rdi,r15
  41d6b8:	mov    rsi,r14
  41d6bb:	mov    rdx,rbx
  41d6be:	pop    rbx
  41d6bf:	pop    r14
  41d6c1:	pop    r15
  41d6c3:	jmp    41d560 <flatcc_builder_append_string@@Base>
  41d6c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d6d0 <flatcc_builder_truncate_vector@@Base>:
  41d6d0:	push   rax
  41d6d1:	mov    rax,QWORD PTR [rdi+0x30]
  41d6d5:	cmp    WORD PTR [rax+0xe],0x4
  41d6da:	jne    41d70e <flatcc_builder_truncate_vector@@Base+0x3e>
  41d6dc:	mov    rdx,rsi
  41d6df:	mov    ecx,DWORD PTR [rax+0x14]
  41d6e2:	cmp    rcx,rsi
  41d6e5:	jb     41d72d <flatcc_builder_truncate_vector@@Base+0x5d>
  41d6e7:	sub    ecx,edx
  41d6e9:	mov    DWORD PTR [rax+0x14],ecx
  41d6ec:	mov    rax,QWORD PTR [rdi+0x30]
  41d6f0:	imul   edx,DWORD PTR [rax+0x10]
  41d6f4:	mov    eax,DWORD PTR [rdi+0x20]
  41d6f7:	sub    eax,edx
  41d6f9:	mov    DWORD PTR [rdi+0x20],eax
  41d6fc:	add    rax,QWORD PTR [rdi+0x18]
  41d700:	mov    rdi,rax
  41d703:	xor    esi,esi
  41d705:	call   406080 <memset@plt>
  41d70a:	xor    eax,eax
  41d70c:	pop    rcx
  41d70d:	ret    
  41d70e:	lea    rdi,[rip+0x188ca]        # 435fdf <flatcc_builder_padding_base@@Base+0x5bf>
  41d715:	lea    rsi,[rip+0x18586]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d71c:	lea    rcx,[rip+0x18b76]        # 436299 <flatcc_builder_padding_base@@Base+0x879>
  41d723:	mov    edx,0x3d9
  41d728:	call   406070 <__assert_fail@plt>
  41d72d:	lea    rdi,[rip+0x18ba4]        # 4362d8 <flatcc_builder_padding_base@@Base+0x8b8>
  41d734:	lea    rsi,[rip+0x18567]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d73b:	lea    rcx,[rip+0x18b57]        # 436299 <flatcc_builder_padding_base@@Base+0x879>
  41d742:	mov    edx,0x3da
  41d747:	call   406070 <__assert_fail@plt>
  41d74c:	nop    DWORD PTR [rax+0x0]

000000000041d750 <flatcc_builder_truncate_offset_vector@@Base>:
  41d750:	push   rax
  41d751:	mov    rax,QWORD PTR [rdi+0x30]
  41d755:	cmp    WORD PTR [rax+0xe],0x5
  41d75a:	jne    41d78b <flatcc_builder_truncate_offset_vector@@Base+0x3b>
  41d75c:	mov    rdx,rsi
  41d75f:	mov    ecx,DWORD PTR [rax+0x14]
  41d762:	sub    ecx,edx
  41d764:	jb     41d7aa <flatcc_builder_truncate_offset_vector@@Base+0x5a>
  41d766:	mov    DWORD PTR [rax+0x14],ecx
  41d769:	mov    rax,QWORD PTR [rdi+0x30]
  41d76d:	imul   edx,DWORD PTR [rax+0x10]
  41d771:	mov    eax,DWORD PTR [rdi+0x20]
  41d774:	sub    eax,edx
  41d776:	mov    DWORD PTR [rdi+0x20],eax
  41d779:	add    rax,QWORD PTR [rdi+0x18]
  41d77d:	mov    rdi,rax
  41d780:	xor    esi,esi
  41d782:	call   406080 <memset@plt>
  41d787:	xor    eax,eax
  41d789:	pop    rcx
  41d78a:	ret    
  41d78b:	lea    rdi,[rip+0x18946]        # 4360d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41d792:	lea    rsi,[rip+0x18509]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d799:	lea    rcx,[rip+0x18b5c]        # 4362fc <flatcc_builder_padding_base@@Base+0x8dc>
  41d7a0:	mov    edx,0x3e2
  41d7a5:	call   406070 <__assert_fail@plt>
  41d7aa:	lea    rdi,[rip+0x18b91]        # 436342 <flatcc_builder_padding_base@@Base+0x922>
  41d7b1:	lea    rsi,[rip+0x184ea]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d7b8:	lea    rcx,[rip+0x18b3d]        # 4362fc <flatcc_builder_padding_base@@Base+0x8dc>
  41d7bf:	mov    edx,0x3e3
  41d7c4:	call   406070 <__assert_fail@plt>
  41d7c9:	nop    DWORD PTR [rax+0x0]

000000000041d7d0 <flatcc_builder_truncate_string@@Base>:
  41d7d0:	push   rax
  41d7d1:	mov    rax,QWORD PTR [rdi+0x30]
  41d7d5:	cmp    WORD PTR [rax+0xe],0x6
  41d7da:	jne    41d805 <flatcc_builder_truncate_string@@Base+0x35>
  41d7dc:	mov    ecx,DWORD PTR [rax+0x14]
  41d7df:	cmp    rcx,rsi
  41d7e2:	jb     41d824 <flatcc_builder_truncate_string@@Base+0x54>
  41d7e4:	sub    ecx,esi
  41d7e6:	mov    DWORD PTR [rax+0x14],ecx
  41d7e9:	mov    eax,DWORD PTR [rdi+0x20]
  41d7ec:	sub    eax,esi
  41d7ee:	mov    DWORD PTR [rdi+0x20],eax
  41d7f1:	add    rax,QWORD PTR [rdi+0x18]
  41d7f5:	mov    edx,esi
  41d7f7:	mov    rdi,rax
  41d7fa:	xor    esi,esi
  41d7fc:	call   406080 <memset@plt>
  41d801:	xor    eax,eax
  41d803:	pop    rcx
  41d804:	ret    
  41d805:	lea    rdi,[rip+0x189d5]        # 4361e1 <flatcc_builder_padding_base@@Base+0x7c1>
  41d80c:	lea    rsi,[rip+0x1848f]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d813:	lea    rcx,[rip+0x18b63]        # 43637d <flatcc_builder_padding_base@@Base+0x95d>
  41d81a:	mov    edx,0x3eb
  41d81f:	call   406070 <__assert_fail@plt>
  41d824:	lea    rdi,[rip+0x18b91]        # 4363bc <flatcc_builder_padding_base@@Base+0x99c>
  41d82b:	lea    rsi,[rip+0x18470]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41d832:	lea    rcx,[rip+0x18b44]        # 43637d <flatcc_builder_padding_base@@Base+0x95d>
  41d839:	mov    edx,0x3ec
  41d83e:	call   406070 <__assert_fail@plt>
  41d843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d84d:	nop    DWORD PTR [rax]

000000000041d850 <flatcc_builder_start_vector@@Base>:
  41d850:	push   r15
  41d852:	push   r14
  41d854:	push   rbx
  41d855:	mov    r14,rcx
  41d858:	mov    r15,rsi
  41d85b:	mov    rbx,rdi
  41d85e:	cmp    dx,0x4
  41d862:	mov    esi,0x4
  41d867:	cmova  esi,edx
  41d86a:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41d86f:	mov    ecx,eax
  41d871:	mov    eax,0xffffffff
  41d876:	test   ecx,ecx
  41d878:	jne    41d8c6 <flatcc_builder_start_vector@@Base+0x76>
  41d87a:	mov    rax,QWORD PTR [rbx+0x30]
  41d87e:	mov    DWORD PTR [rax+0x10],r15d
  41d882:	mov    rax,QWORD PTR [rbx+0x30]
  41d886:	mov    DWORD PTR [rax+0x14],0x0
  41d88d:	mov    rax,QWORD PTR [rbx+0x30]
  41d891:	mov    DWORD PTR [rax+0x18],r14d
  41d895:	mov    rax,QWORD PTR [rbx+0x30]
  41d899:	mov    WORD PTR [rax+0xe],0x4
  41d89f:	mov    ecx,DWORD PTR [rbx+0x28]
  41d8a2:	mov    edx,DWORD PTR [rbx+0x70]
  41d8a5:	sub    edx,ecx
  41d8a7:	add    rcx,QWORD PTR [rbx+0x68]
  41d8ab:	mov    QWORD PTR [rbx+0x18],rcx
  41d8af:	cmp    edx,0xfffffffc
  41d8b2:	mov    ecx,0xfffffffc
  41d8b7:	cmovb  ecx,edx
  41d8ba:	mov    DWORD PTR [rbx+0x24],ecx
  41d8bd:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d8c4:	xor    eax,eax
  41d8c6:	pop    rbx
  41d8c7:	pop    r14
  41d8c9:	pop    r15
  41d8cb:	ret    
  41d8cc:	nop    DWORD PTR [rax+0x0]

000000000041d8d0 <flatcc_builder_start_offset_vector@@Base>:
  41d8d0:	push   rbx
  41d8d1:	mov    rbx,rdi
  41d8d4:	mov    esi,0x4
  41d8d9:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41d8de:	mov    ecx,eax
  41d8e0:	mov    eax,0xffffffff
  41d8e5:	test   ecx,ecx
  41d8e7:	je     41d8eb <flatcc_builder_start_offset_vector@@Base+0x1b>
  41d8e9:	pop    rbx
  41d8ea:	ret    
  41d8eb:	mov    rax,QWORD PTR [rbx+0x30]
  41d8ef:	mov    DWORD PTR [rax+0x10],0x4
  41d8f6:	mov    rax,QWORD PTR [rbx+0x30]
  41d8fa:	mov    DWORD PTR [rax+0x14],0x0
  41d901:	mov    rax,QWORD PTR [rbx+0x30]
  41d905:	mov    WORD PTR [rax+0xe],0x5
  41d90b:	mov    ecx,DWORD PTR [rbx+0x28]
  41d90e:	mov    edx,DWORD PTR [rbx+0x70]
  41d911:	sub    edx,ecx
  41d913:	add    rcx,QWORD PTR [rbx+0x68]
  41d917:	mov    QWORD PTR [rbx+0x18],rcx
  41d91b:	cmp    edx,0xfffffffc
  41d91e:	mov    ecx,0xfffffffc
  41d923:	cmovb  ecx,edx
  41d926:	mov    DWORD PTR [rbx+0x24],ecx
  41d929:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d930:	xor    eax,eax
  41d932:	pop    rbx
  41d933:	ret    
  41d934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d93e:	xchg   ax,ax

000000000041d940 <flatcc_builder_create_offset_vector@@Base>:
  41d940:	push   r15
  41d942:	push   r14
  41d944:	push   r12
  41d946:	push   rbx
  41d947:	push   rax
  41d948:	mov    r14,rdx
  41d94b:	mov    r15,rsi
  41d94e:	mov    rbx,rdi
  41d951:	mov    esi,0x4
  41d956:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41d95b:	test   eax,eax
  41d95d:	je     41d96d <flatcc_builder_create_offset_vector@@Base+0x2d>
  41d95f:	xor    eax,eax
  41d961:	add    rsp,0x8
  41d965:	pop    rbx
  41d966:	pop    r12
  41d968:	pop    r14
  41d96a:	pop    r15
  41d96c:	ret    
  41d96d:	mov    rax,QWORD PTR [rbx+0x30]
  41d971:	mov    DWORD PTR [rax+0x10],0x4
  41d978:	mov    rax,QWORD PTR [rbx+0x30]
  41d97c:	mov    DWORD PTR [rax+0x14],0x0
  41d983:	mov    rax,QWORD PTR [rbx+0x30]
  41d987:	mov    WORD PTR [rax+0xe],0x5
  41d98d:	mov    ecx,DWORD PTR [rbx+0x28]
  41d990:	mov    edx,DWORD PTR [rbx+0x70]
  41d993:	sub    edx,ecx
  41d995:	add    rcx,QWORD PTR [rbx+0x68]
  41d999:	mov    QWORD PTR [rbx+0x18],rcx
  41d99d:	cmp    edx,0xfffffffc
  41d9a0:	mov    ecx,0xfffffffc
  41d9a5:	cmovb  ecx,edx
  41d9a8:	mov    DWORD PTR [rbx+0x24],ecx
  41d9ab:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41d9b2:	mov    ecx,DWORD PTR [rax+0x14]
  41d9b5:	add    ecx,r14d
  41d9b8:	jb     41da68 <flatcc_builder_create_offset_vector@@Base+0x128>
  41d9be:	cmp    ecx,0x40000000
  41d9c4:	jae    41da68 <flatcc_builder_create_offset_vector@@Base+0x128>
  41d9ca:	mov    DWORD PTR [rax+0x14],ecx
  41d9cd:	mov    r12d,DWORD PTR [rbx+0x20]
  41d9d1:	lea    eax,[r12+r14*4]
  41d9d5:	mov    DWORD PTR [rbx+0x20],eax
  41d9d8:	cmp    eax,DWORD PTR [rbx+0x24]
  41d9db:	jae    41d9eb <flatcc_builder_create_offset_vector@@Base+0xab>
  41d9dd:	mov    rdi,QWORD PTR [rbx+0x18]
  41d9e1:	add    rdi,r12
  41d9e4:	jne    41da46 <flatcc_builder_create_offset_vector@@Base+0x106>
  41d9e6:	jmp    41d95f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41d9eb:	inc    eax
  41d9ed:	lea    rsi,[rbx+0x68]
  41d9f1:	mov    rdi,QWORD PTR [rbx+0x40]
  41d9f5:	mov    edx,DWORD PTR [rbx+0x28]
  41d9f8:	add    rdx,rax
  41d9fb:	mov    ecx,0x1
  41da00:	mov    r8d,0x1
  41da06:	call   QWORD PTR [rbx+0x50]
  41da09:	test   eax,eax
  41da0b:	jne    41d95f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41da11:	mov    eax,DWORD PTR [rbx+0x28]
  41da14:	mov    rdi,rax
  41da17:	add    rdi,QWORD PTR [rbx+0x68]
  41da1b:	mov    QWORD PTR [rbx+0x18],rdi
  41da1f:	mov    ecx,DWORD PTR [rbx+0x70]
  41da22:	sub    ecx,eax
  41da24:	cmp    ecx,0xfffffffc
  41da27:	mov    eax,0xfffffffc
  41da2c:	cmovb  eax,ecx
  41da2f:	mov    DWORD PTR [rbx+0x24],eax
  41da32:	mov    rax,QWORD PTR [rbx+0x30]
  41da36:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41da3d:	add    rdi,r12
  41da40:	je     41d95f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41da46:	shl    r14,0x2
  41da4a:	mov    rsi,r15
  41da4d:	mov    rdx,r14
  41da50:	call   4060d0 <memcpy@plt>
  41da55:	mov    rdi,rbx
  41da58:	add    rsp,0x8
  41da5c:	pop    rbx
  41da5d:	pop    r12
  41da5f:	pop    r14
  41da61:	pop    r15
  41da63:	jmp    41da90 <flatcc_builder_end_offset_vector@@Base>
  41da68:	lea    rdi,[rip+0x192fc]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41da6f:	lea    rsi,[rip+0x1822c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41da76:	lea    rcx,[rip+0x19309]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41da7d:	mov    edx,0x37c
  41da82:	call   406070 <__assert_fail@plt>
  41da87:	nop    WORD PTR [rax+rax*1+0x0]

000000000041da90 <flatcc_builder_end_offset_vector@@Base>:
  41da90:	push   rbp
  41da91:	push   rbx
  41da92:	push   rax
  41da93:	mov    rax,QWORD PTR [rdi+0x30]
  41da97:	cmp    WORD PTR [rax+0xe],0x5
  41da9c:	jne    41db2a <flatcc_builder_end_offset_vector@@Base+0x9a>
  41daa2:	mov    rbx,rdi
  41daa5:	mov    rsi,QWORD PTR [rdi+0x18]
  41daa9:	mov    edx,DWORD PTR [rax+0x14]
  41daac:	xor    ecx,ecx
  41daae:	call   41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41dab3:	mov    ebp,eax
  41dab5:	test   eax,eax
  41dab7:	je     41db21 <flatcc_builder_end_offset_vector@@Base+0x91>
  41dab9:	mov    rdi,QWORD PTR [rbx+0x18]
  41dabd:	mov    edx,DWORD PTR [rbx+0x20]
  41dac0:	xor    esi,esi
  41dac2:	call   406080 <memset@plt>
  41dac7:	mov    rax,QWORD PTR [rbx+0x30]
  41dacb:	mov    ecx,DWORD PTR [rax+0x8]
  41dace:	mov    DWORD PTR [rbx+0x20],ecx
  41dad1:	mov    ecx,DWORD PTR [rax]
  41dad3:	mov    DWORD PTR [rbx+0x28],ecx
  41dad6:	mov    edx,DWORD PTR [rax+0x4]
  41dad9:	mov    rsi,rcx
  41dadc:	add    rsi,QWORD PTR [rbx+0x68]
  41dae0:	mov    QWORD PTR [rbx+0x18],rsi
  41dae4:	mov    esi,DWORD PTR [rbx+0x70]
  41dae7:	sub    esi,ecx
  41dae9:	cmp    esi,edx
  41daeb:	cmova  esi,edx
  41daee:	mov    DWORD PTR [rbx+0x24],esi
  41daf1:	movzx  ecx,WORD PTR [rbx+0xea]
  41daf8:	cmp    WORD PTR [rbx+0xe8],cx
  41daff:	jae    41db08 <flatcc_builder_end_offset_vector@@Base+0x78>
  41db01:	mov    WORD PTR [rbx+0xe8],cx
  41db08:	movzx  ecx,WORD PTR [rax+0xc]
  41db0c:	mov    WORD PTR [rbx+0xea],cx
  41db13:	add    rax,0xffffffffffffffdc
  41db17:	mov    QWORD PTR [rbx+0x30],rax
  41db1b:	dec    DWORD PTR [rbx+0x104]
  41db21:	mov    eax,ebp
  41db23:	add    rsp,0x8
  41db27:	pop    rbx
  41db28:	pop    rbp
  41db29:	ret    
  41db2a:	lea    rdi,[rip+0x185a7]        # 4360d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41db31:	lea    rsi,[rip+0x1816a]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41db38:	lea    rcx,[rip+0x18bc8]        # 436707 <flatcc_builder_padding_base@@Base+0xce7>
  41db3f:	mov    edx,0x5c8
  41db44:	call   406070 <__assert_fail@plt>
  41db49:	nop    DWORD PTR [rax+0x0]

000000000041db50 <flatcc_builder_start_string@@Base>:
  41db50:	push   rbx
  41db51:	mov    rbx,rdi
  41db54:	mov    esi,0x1
  41db59:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41db5e:	mov    ecx,eax
  41db60:	mov    eax,0xffffffff
  41db65:	test   ecx,ecx
  41db67:	je     41db6b <flatcc_builder_start_string@@Base+0x1b>
  41db69:	pop    rbx
  41db6a:	ret    
  41db6b:	mov    rax,QWORD PTR [rbx+0x30]
  41db6f:	mov    DWORD PTR [rax+0x10],0x1
  41db76:	mov    rax,QWORD PTR [rbx+0x30]
  41db7a:	mov    DWORD PTR [rax+0x14],0x0
  41db81:	mov    rax,QWORD PTR [rbx+0x30]
  41db85:	mov    WORD PTR [rax+0xe],0x6
  41db8b:	mov    ecx,DWORD PTR [rbx+0x28]
  41db8e:	mov    edx,DWORD PTR [rbx+0x70]
  41db91:	sub    edx,ecx
  41db93:	add    rcx,QWORD PTR [rbx+0x68]
  41db97:	mov    QWORD PTR [rbx+0x18],rcx
  41db9b:	cmp    edx,0xfffffffc
  41db9e:	mov    ecx,0xfffffffc
  41dba3:	cmovb  ecx,edx
  41dba6:	mov    DWORD PTR [rbx+0x24],ecx
  41dba9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41dbb0:	xor    eax,eax
  41dbb2:	pop    rbx
  41dbb3:	ret    
  41dbb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dbbe:	xchg   ax,ax

000000000041dbc0 <flatcc_builder_reserve_table@@Base>:
  41dbc0:	push   r15
  41dbc2:	push   r14
  41dbc4:	push   rbx
  41dbc5:	test   esi,esi
  41dbc7:	js     41dc74 <flatcc_builder_reserve_table@@Base+0xb4>
  41dbcd:	mov    r14d,esi
  41dbd0:	mov    r15,rdi
  41dbd3:	mov    rax,QWORD PTR [rdi+0x30]
  41dbd7:	movzx  ebx,WORD PTR [rax+0x1c]
  41dbdb:	add    ebx,ebx
  41dbdd:	add    ebx,DWORD PTR [rax+0x10]
  41dbe0:	lea    edx,[r14+r14*1]
  41dbe4:	add    edx,0x4
  41dbe7:	add    rdx,rbx
  41dbea:	cmp    rdx,QWORD PTR [rdi+0x60]
  41dbee:	jbe    41dc0c <flatcc_builder_reserve_table@@Base+0x4c>
  41dbf0:	lea    rsi,[r15+0x58]
  41dbf4:	mov    rdi,QWORD PTR [r15+0x40]
  41dbf8:	mov    ecx,0x1
  41dbfd:	xor    r8d,r8d
  41dc00:	call   QWORD PTR [r15+0x50]
  41dc04:	test   eax,eax
  41dc06:	jne    41dc93 <flatcc_builder_reserve_table@@Base+0xd3>
  41dc0c:	add    rbx,QWORD PTR [r15+0x58]
  41dc10:	mov    QWORD PTR [r15+0x8],rbx
  41dc14:	je     41dc69 <flatcc_builder_reserve_table@@Base+0xa9>
  41dc16:	add    r14d,r14d
  41dc19:	add    rbx,0x4
  41dc1d:	mov    QWORD PTR [r15+0x8],rbx
  41dc21:	mov    rax,QWORD PTR [r15+0x30]
  41dc25:	mov    ebx,DWORD PTR [rax+0x14]
  41dc28:	or     r14d,0x1
  41dc2c:	add    r14,rbx
  41dc2f:	cmp    r14,QWORD PTR [r15+0x90]
  41dc36:	jbe    41dc56 <flatcc_builder_reserve_table@@Base+0x96>
  41dc38:	lea    rsi,[r15+0x88]
  41dc3f:	mov    rdi,QWORD PTR [r15+0x40]
  41dc43:	mov    rdx,r14
  41dc46:	xor    ecx,ecx
  41dc48:	mov    r8d,0x3
  41dc4e:	call   QWORD PTR [r15+0x50]
  41dc52:	test   eax,eax
  41dc54:	jne    41dc93 <flatcc_builder_reserve_table@@Base+0xd3>
  41dc56:	xor    eax,eax
  41dc58:	add    rbx,QWORD PTR [r15+0x88]
  41dc5f:	mov    QWORD PTR [r15],rbx
  41dc62:	sete   al
  41dc65:	neg    eax
  41dc67:	jmp    41dc6e <flatcc_builder_reserve_table@@Base+0xae>
  41dc69:	mov    eax,0xffffffff
  41dc6e:	pop    rbx
  41dc6f:	pop    r14
  41dc71:	pop    r15
  41dc73:	ret    
  41dc74:	lea    rdi,[rip+0x187a4]        # 43641f <flatcc_builder_padding_base@@Base+0x9ff>
  41dc7b:	lea    rsi,[rip+0x18020]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41dc82:	lea    rcx,[rip+0x18755]        # 4363de <flatcc_builder_padding_base@@Base+0x9be>
  41dc89:	mov    edx,0x429
  41dc8e:	call   406070 <__assert_fail@plt>
  41dc93:	lea    rdi,[rip+0x191c8]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41dc9a:	lea    rsi,[rip+0x18001]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41dca1:	lea    rcx,[rip+0x18ff4]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41dca8:	mov    edx,0x134
  41dcad:	call   406070 <__assert_fail@plt>
  41dcb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dcbc:	nop    DWORD PTR [rax+0x0]

000000000041dcc0 <flatcc_builder_start_table@@Base>:
  41dcc0:	push   rbp
  41dcc1:	push   r15
  41dcc3:	push   r14
  41dcc5:	push   rbx
  41dcc6:	push   rax
  41dcc7:	mov    r15d,esi
  41dcca:	mov    rbx,rdi
  41dccd:	mov    esi,0x4
  41dcd2:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41dcd7:	mov    r14d,0xffffffff
  41dcdd:	test   eax,eax
  41dcdf:	je     41dcef <flatcc_builder_start_table@@Base+0x2f>
  41dce1:	mov    eax,r14d
  41dce4:	add    rsp,0x8
  41dce8:	pop    rbx
  41dce9:	pop    r14
  41dceb:	pop    r15
  41dced:	pop    rbp
  41dcee:	ret    
  41dcef:	mov    eax,DWORD PTR [rbx+0x8]
  41dcf2:	sub    eax,DWORD PTR [rbx+0x58]
  41dcf5:	mov    rcx,QWORD PTR [rbx+0x30]
  41dcf9:	mov    DWORD PTR [rcx+0x10],eax
  41dcfc:	mov    eax,DWORD PTR [rbx]
  41dcfe:	sub    eax,DWORD PTR [rbx+0x88]
  41dd04:	mov    rcx,QWORD PTR [rbx+0x30]
  41dd08:	mov    DWORD PTR [rcx+0x14],eax
  41dd0b:	mov    eax,DWORD PTR [rbx+0x14]
  41dd0e:	mov    rcx,QWORD PTR [rbx+0x30]
  41dd12:	mov    DWORD PTR [rcx+0x18],eax
  41dd15:	movzx  eax,WORD PTR [rbx+0x10]
  41dd19:	mov    rcx,QWORD PTR [rbx+0x30]
  41dd1d:	mov    WORD PTR [rcx+0x1c],ax
  41dd21:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  41dd28:	mov    WORD PTR [rbx+0x10],0x0
  41dd2e:	mov    rax,QWORD PTR [rbx+0x30]
  41dd32:	mov    WORD PTR [rax+0xe],0x3
  41dd38:	movzx  ebp,WORD PTR [rax+0x1c]
  41dd3c:	add    ebp,ebp
  41dd3e:	add    ebp,DWORD PTR [rax+0x10]
  41dd41:	lea    edx,[r15+r15*1]
  41dd45:	add    edx,0x4
  41dd48:	add    rdx,rbp
  41dd4b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41dd4f:	jbe    41dd6c <flatcc_builder_start_table@@Base+0xac>
  41dd51:	lea    rsi,[rbx+0x58]
  41dd55:	mov    rdi,QWORD PTR [rbx+0x40]
  41dd59:	mov    ecx,0x1
  41dd5e:	xor    r8d,r8d
  41dd61:	call   QWORD PTR [rbx+0x50]
  41dd64:	test   eax,eax
  41dd66:	jne    41de00 <flatcc_builder_start_table@@Base+0x140>
  41dd6c:	add    rbp,QWORD PTR [rbx+0x58]
  41dd70:	mov    QWORD PTR [rbx+0x8],rbp
  41dd74:	je     41dce1 <flatcc_builder_start_table@@Base+0x21>
  41dd7a:	add    r15d,r15d
  41dd7d:	add    rbp,0x4
  41dd81:	mov    QWORD PTR [rbx+0x8],rbp
  41dd85:	mov    rax,QWORD PTR [rbx+0x30]
  41dd89:	mov    ebp,DWORD PTR [rax+0x14]
  41dd8c:	or     r15d,0x1
  41dd90:	add    r15,rbp
  41dd93:	cmp    r15,QWORD PTR [rbx+0x90]
  41dd9a:	jbe    41ddb9 <flatcc_builder_start_table@@Base+0xf9>
  41dd9c:	lea    rsi,[rbx+0x88]
  41dda3:	mov    rdi,QWORD PTR [rbx+0x40]
  41dda7:	mov    rdx,r15
  41ddaa:	xor    ecx,ecx
  41ddac:	mov    r8d,0x3
  41ddb2:	call   QWORD PTR [rbx+0x50]
  41ddb5:	test   eax,eax
  41ddb7:	jne    41de00 <flatcc_builder_start_table@@Base+0x140>
  41ddb9:	add    rbp,QWORD PTR [rbx+0x88]
  41ddc0:	mov    QWORD PTR [rbx],rbp
  41ddc3:	je     41dce1 <flatcc_builder_start_table@@Base+0x21>
  41ddc9:	mov    eax,DWORD PTR [rbx+0x28]
  41ddcc:	mov    rcx,rax
  41ddcf:	add    rcx,QWORD PTR [rbx+0x68]
  41ddd3:	mov    QWORD PTR [rbx+0x18],rcx
  41ddd7:	mov    ecx,DWORD PTR [rbx+0x70]
  41ddda:	sub    ecx,eax
  41dddc:	cmp    ecx,0xfffc
  41dde2:	mov    eax,0xfffc
  41dde7:	cmovb  eax,ecx
  41ddea:	mov    DWORD PTR [rbx+0x24],eax
  41dded:	mov    rax,QWORD PTR [rbx+0x30]
  41ddf1:	mov    DWORD PTR [rax+0x4],0xfffc
  41ddf8:	xor    r14d,r14d
  41ddfb:	jmp    41dce1 <flatcc_builder_start_table@@Base+0x21>
  41de00:	lea    rdi,[rip+0x1905b]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41de07:	lea    rsi,[rip+0x17e94]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41de0e:	lea    rcx,[rip+0x18e87]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41de15:	mov    edx,0x134
  41de1a:	call   406070 <__assert_fail@plt>
  41de1f:	nop

000000000041de20 <flatcc_builder_create_vtable@@Base>:
  41de20:	push   r14
  41de22:	push   rbx
  41de23:	sub    rsp,0x98
  41de2a:	mov    r14,rdi
  41de2d:	mov    QWORD PTR [rsp+0x8],0x0
  41de36:	mov    DWORD PTR [rsp+0x10],0x0
  41de3e:	test   dx,dx
  41de41:	je     41dea8 <flatcc_builder_create_vtable@@Base+0x88>
  41de43:	movzx  r8d,dx
  41de47:	mov    QWORD PTR [rsp+0x8],r8
  41de4c:	mov    QWORD PTR [rsp+0x18],rsi
  41de51:	mov    QWORD PTR [rsp+0x20],r8
  41de56:	mov    DWORD PTR [rsp+0x10],0x1
  41de5e:	mov    edx,0x1
  41de63:	cmp    DWORD PTR [r14+0x100],0x0
  41de6b:	jne    41deb7 <flatcc_builder_create_vtable@@Base+0x97>
  41de6d:	cmp    DWORD PTR [r14+0x124],0x0
  41de75:	jne    41deb7 <flatcc_builder_create_vtable@@Base+0x97>
  41de77:	mov    ebx,DWORD PTR [r14+0xf4]
  41de7e:	lea    eax,[r8+rbx*1]
  41de82:	mov    DWORD PTR [r14+0xf4],eax
  41de89:	mov    rdi,QWORD PTR [r14+0x38]
  41de8d:	lea    rsi,[rsp+0x18]
  41de92:	mov    ecx,ebx
  41de94:	call   QWORD PTR [r14+0x48]
  41de98:	test   eax,eax
  41de9a:	jne    41df4b <flatcc_builder_create_vtable@@Base+0x12b>
  41dea0:	xor    eax,eax
  41dea2:	inc    ebx
  41dea4:	jne    41defc <flatcc_builder_create_vtable@@Base+0xdc>
  41dea6:	jmp    41df02 <flatcc_builder_create_vtable@@Base+0xe2>
  41dea8:	xor    edx,edx
  41deaa:	xor    r8d,r8d
  41dead:	cmp    DWORD PTR [r14+0x100],0x0
  41deb5:	je     41de6d <flatcc_builder_create_vtable@@Base+0x4d>
  41deb7:	cmp    r8,0x11
  41debb:	setb   al
  41debe:	lea    rcx,[r8-0x10]
  41dec2:	shr    rcx,0x20
  41dec6:	sete   cl
  41dec9:	test   r8d,r8d
  41decc:	je     41df0d <flatcc_builder_create_vtable@@Base+0xed>
  41dece:	or     al,cl
  41ded0:	je     41df0d <flatcc_builder_create_vtable@@Base+0xed>
  41ded2:	mov    ebx,DWORD PTR [r14+0xf0]
  41ded9:	sub    ebx,r8d
  41dedc:	mov    rdi,QWORD PTR [r14+0x38]
  41dee0:	lea    rsi,[rsp+0x18]
  41dee5:	mov    ecx,ebx
  41dee7:	call   QWORD PTR [r14+0x48]
  41deeb:	test   eax,eax
  41deed:	jne    41df2c <flatcc_builder_create_vtable@@Base+0x10c>
  41deef:	mov    DWORD PTR [r14+0xf0],ebx
  41def6:	test   ebx,ebx
  41def8:	je     41df00 <flatcc_builder_create_vtable@@Base+0xe0>
  41defa:	inc    ebx
  41defc:	mov    eax,ebx
  41defe:	jmp    41df02 <flatcc_builder_create_vtable@@Base+0xe2>
  41df00:	xor    eax,eax
  41df02:	add    rsp,0x98
  41df09:	pop    rbx
  41df0a:	pop    r14
  41df0c:	ret    
  41df0d:	lea    rdi,[rip+0x18f4e]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41df14:	lea    rsi,[rip+0x17d87]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41df1b:	lea    rcx,[rip+0x18dff]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41df22:	mov    edx,0x287
  41df27:	call   406070 <__assert_fail@plt>
  41df2c:	lea    rdi,[rip+0x18f2f]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41df33:	lea    rsi,[rip+0x17d68]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41df3a:	lea    rcx,[rip+0x18de0]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41df41:	mov    edx,0x28b
  41df46:	call   406070 <__assert_fail@plt>
  41df4b:	lea    rdi,[rip+0x18f10]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41df52:	lea    rsi,[rip+0x17d49]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41df59:	lea    rcx,[rip+0x18e7d]        # 436ddd <flatcc_builder_padding_base@@Base+0x13bd>
  41df60:	mov    edx,0x2a5
  41df65:	call   406070 <__assert_fail@plt>
  41df6a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041df70 <flatcc_builder_create_cached_vtable@@Base>:
  41df70:	push   rbp
  41df71:	push   r15
  41df73:	push   r14
  41df75:	push   r13
  41df77:	push   r12
  41df79:	push   rbx
  41df7a:	sub    rsp,0x28
  41df7e:	mov    r15d,ecx
  41df81:	mov    r12d,edx
  41df84:	mov    QWORD PTR [rsp+0x18],rsi
  41df89:	mov    r14,rdi
  41df8c:	mov    rax,QWORD PTR [rdi+0xd8]
  41df93:	test   rax,rax
  41df96:	je     41e066 <flatcc_builder_create_cached_vtable@@Base+0xf6>
  41df9c:	neg    al
  41df9e:	shrx   r13d,r15d,eax
  41dfa3:	shl    r13,0x2
  41dfa7:	add    r13,QWORD PTR [r14+0xa8]
  41dfae:	je     41e13a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  41dfb4:	mov    ebx,DWORD PTR [r13+0x0]
  41dfb8:	movzx  eax,r12w
  41dfbc:	mov    QWORD PTR [rsp],rax
  41dfc0:	test   ebx,ebx
  41dfc2:	je     41e141 <flatcc_builder_create_cached_vtable@@Base+0x1d1>
  41dfc8:	mov    rbp,QWORD PTR [r14+0x78]
  41dfcc:	mov    QWORD PTR [rsp+0x10],r14
  41dfd1:	mov    r15,QWORD PTR [r14+0xb8]
  41dfd8:	xor    eax,eax
  41dfda:	mov    QWORD PTR [rsp+0x20],rax
  41dfdf:	mov    QWORD PTR [rsp+0x8],r13
  41dfe4:	jmp    41e003 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41dfe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dff0:	mov    ebx,DWORD PTR [r14+0xc]
  41dff4:	add    r14,0xc
  41dff8:	mov    r13,r14
  41dffb:	test   ebx,ebx
  41dffd:	je     41e129 <flatcc_builder_create_cached_vtable@@Base+0x1b9>
  41e003:	mov    eax,ebx
  41e005:	lea    r14,[r15+rax*1]
  41e009:	mov    esi,DWORD PTR [r15+rax*1+0x8]
  41e00e:	cmp    WORD PTR [rbp+rsi*1+0x0],r12w
  41e014:	jne    41dff0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41e016:	add    rsi,rbp
  41e019:	mov    rdi,QWORD PTR [rsp+0x18]
  41e01e:	mov    rdx,QWORD PTR [rsp]
  41e022:	call   4060f0 <bcmp@plt>
  41e027:	test   eax,eax
  41e029:	jne    41dff0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41e02b:	mov    eax,DWORD PTR [r14+0x4]
  41e02f:	mov    rcx,QWORD PTR [rsp+0x10]
  41e034:	cmp    eax,DWORD PTR [rcx+0x100]
  41e03a:	je     41e2aa <flatcc_builder_create_cached_vtable@@Base+0x33a>
  41e040:	lea    r13,[r14+0xc]
  41e044:	mov    ebx,DWORD PTR [r14+0xc]
  41e048:	mov    rax,r14
  41e04b:	mov    QWORD PTR [rsp+0x20],r14
  41e050:	test   ebx,ebx
  41e052:	jne    41e003 <flatcc_builder_create_cached_vtable@@Base+0x93>
  41e054:	mov    r15,r14
  41e057:	mov    r14,QWORD PTR [rsp+0x10]
  41e05c:	mov    r13,QWORD PTR [rsp+0x8]
  41e061:	jmp    41e144 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41e066:	cmp    DWORD PTR [r14+0xe4],0x0
  41e06e:	jne    41e2e8 <flatcc_builder_create_cached_vtable@@Base+0x378>
  41e074:	lea    r13,[r14+0xb8]
  41e07b:	cmp    QWORD PTR [r14+0xc0],0xf
  41e083:	ja     41e0a5 <flatcc_builder_create_cached_vtable@@Base+0x135>
  41e085:	mov    rdi,QWORD PTR [r14+0x40]
  41e089:	mov    edx,0x10
  41e08e:	mov    rsi,r13
  41e091:	xor    ecx,ecx
  41e093:	mov    r8d,0x6
  41e099:	call   QWORD PTR [r14+0x50]
  41e09d:	test   eax,eax
  41e09f:	jne    41e2c9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41e0a5:	xor    ebx,ebx
  41e0a7:	cmp    QWORD PTR [r13+0x0],0x0
  41e0ac:	je     41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e0b2:	lea    rsi,[r14+0xa8]
  41e0b9:	mov    DWORD PTR [r14+0xe4],0x10
  41e0c4:	mov    rdi,QWORD PTR [r14+0x40]
  41e0c8:	mov    ebp,0x100
  41e0cd:	mov    edx,0x100
  41e0d2:	mov    ecx,0x1
  41e0d7:	mov    r8d,0x5
  41e0dd:	call   QWORD PTR [r14+0x50]
  41e0e1:	test   eax,eax
  41e0e3:	jne    41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e0e9:	mov    rax,QWORD PTR [r14+0xb0]
  41e0f0:	mov    rcx,rbp
  41e0f3:	add    rbp,rbp
  41e0f6:	cmp    rbp,rax
  41e0f9:	jbe    41e0f0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  41e0fb:	shr    rcx,0x2
  41e0ff:	mov    rax,0xffffffffffffffff
  41e106:	mov    edx,0x1
  41e10b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e110:	inc    rax
  41e113:	shlx   rsi,rdx,rax
  41e118:	cmp    rsi,rcx
  41e11b:	jb     41e110 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41e11d:	mov    QWORD PTR [r14+0xd8],rax
  41e124:	jmp    41df9c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  41e129:	mov    r14,QWORD PTR [rsp+0x10]
  41e12e:	mov    r13,QWORD PTR [rsp+0x8]
  41e133:	mov    r15,QWORD PTR [rsp+0x20]
  41e138:	jmp    41e144 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  41e13a:	xor    ebx,ebx
  41e13c:	jmp    41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e141:	xor    r15d,r15d
  41e144:	mov    r12d,DWORD PTR [r14+0xe4]
  41e14b:	lea    rbp,[r14+0xb8]
  41e152:	lea    rdx,[r12+0x10]
  41e157:	cmp    rdx,QWORD PTR [r14+0xc0]
  41e15e:	jbe    41e17b <flatcc_builder_create_cached_vtable@@Base+0x20b>
  41e160:	mov    rdi,QWORD PTR [r14+0x40]
  41e164:	mov    rsi,rbp
  41e167:	xor    ecx,ecx
  41e169:	mov    r8d,0x6
  41e16f:	call   QWORD PTR [r14+0x50]
  41e173:	test   eax,eax
  41e175:	jne    41e2c9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41e17b:	xor    ebx,ebx
  41e17d:	add    r12,QWORD PTR [rbp+0x0]
  41e181:	je     41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e187:	mov    eax,DWORD PTR [r14+0xe4]
  41e18e:	mov    ecx,DWORD PTR [r14+0x100]
  41e195:	lea    edx,[rax+0x10]
  41e198:	mov    DWORD PTR [r14+0xe4],edx
  41e19f:	mov    DWORD PTR [r12+0x4],ecx
  41e1a4:	mov    ecx,DWORD PTR [r13+0x0]
  41e1a8:	mov    DWORD PTR [r12+0xc],ecx
  41e1ad:	mov    DWORD PTR [r13+0x0],eax
  41e1b1:	mov    rdi,r14
  41e1b4:	mov    rsi,QWORD PTR [rsp+0x18]
  41e1b9:	mov    rdx,QWORD PTR [rsp]
  41e1bd:	call   41de20 <flatcc_builder_create_vtable@@Base>
  41e1c2:	mov    DWORD PTR [r12],eax
  41e1c6:	test   eax,eax
  41e1c8:	je     41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e1ce:	test   r15,r15
  41e1d1:	je     41e1e1 <flatcc_builder_create_cached_vtable@@Base+0x271>
  41e1d3:	mov    eax,DWORD PTR [r15+0x8]
  41e1d7:	mov    DWORD PTR [r12+0x8],eax
  41e1dc:	jmp    41e28e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41e1e1:	mov    rax,QWORD PTR [r14+0x118]
  41e1e8:	mov    ebp,DWORD PTR [r14+0xe0]
  41e1ef:	test   rax,rax
  41e1f2:	je     41e235 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41e1f4:	mov    rcx,QWORD PTR [rsp]
  41e1f8:	add    ecx,ebp
  41e1fa:	cmp    rax,rcx
  41e1fd:	jae    41e235 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  41e1ff:	cmp    QWORD PTR [r14+0xd8],0x0
  41e207:	je     41e28e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41e20d:	mov    rdi,QWORD PTR [r14+0xa8]
  41e214:	mov    rdx,QWORD PTR [r14+0xb0]
  41e21b:	xor    esi,esi
  41e21d:	call   406080 <memset@plt>
  41e222:	movabs rax,0x1000000000
  41e22c:	mov    QWORD PTR [r14+0xe0],rax
  41e233:	jmp    41e28e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  41e235:	lea    rbx,[r14+0x78]
  41e239:	mov    rax,QWORD PTR [rsp]
  41e23d:	lea    rdx,[rax+rbp*1]
  41e241:	cmp    rdx,QWORD PTR [r14+0x80]
  41e248:	jbe    41e261 <flatcc_builder_create_cached_vtable@@Base+0x2f1>
  41e24a:	mov    rdi,QWORD PTR [r14+0x40]
  41e24e:	mov    rsi,rbx
  41e251:	xor    ecx,ecx
  41e253:	mov    r8d,0x2
  41e259:	call   QWORD PTR [r14+0x50]
  41e25d:	test   eax,eax
  41e25f:	jne    41e2c9 <flatcc_builder_create_cached_vtable@@Base+0x359>
  41e261:	add    rbp,QWORD PTR [rbx]
  41e264:	je     41e2a3 <flatcc_builder_create_cached_vtable@@Base+0x333>
  41e266:	mov    eax,DWORD PTR [r14+0xe0]
  41e26d:	mov    DWORD PTR [r12+0x8],eax
  41e272:	mov    rdx,QWORD PTR [rsp]
  41e276:	mov    ecx,edx
  41e278:	add    ecx,eax
  41e27a:	mov    DWORD PTR [r14+0xe0],ecx
  41e281:	mov    rdi,rbp
  41e284:	mov    rsi,QWORD PTR [rsp+0x18]
  41e289:	call   4060d0 <memcpy@plt>
  41e28e:	mov    ebx,DWORD PTR [r12]
  41e292:	mov    eax,ebx
  41e294:	add    rsp,0x28
  41e298:	pop    rbx
  41e299:	pop    r12
  41e29b:	pop    r13
  41e29d:	pop    r14
  41e29f:	pop    r15
  41e2a1:	pop    rbp
  41e2a2:	ret    
  41e2a3:	mov    ebx,0xffffffff
  41e2a8:	jmp    41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e2aa:	mov    rcx,QWORD PTR [rsp+0x8]
  41e2af:	cmp    r13,rcx
  41e2b2:	je     41e2c4 <flatcc_builder_create_cached_vtable@@Base+0x354>
  41e2b4:	mov    eax,DWORD PTR [r14+0xc]
  41e2b8:	mov    DWORD PTR [r13+0x0],eax
  41e2bc:	mov    eax,DWORD PTR [rcx]
  41e2be:	mov    DWORD PTR [r14+0xc],eax
  41e2c2:	mov    DWORD PTR [rcx],ebx
  41e2c4:	mov    ebx,DWORD PTR [r14]
  41e2c7:	jmp    41e292 <flatcc_builder_create_cached_vtable@@Base+0x322>
  41e2c9:	lea    rdi,[rip+0x18b92]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41e2d0:	lea    rsi,[rip+0x179cb]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e2d7:	lea    rcx,[rip+0x189be]        # 436c9c <flatcc_builder_padding_base@@Base+0x127c>
  41e2de:	mov    edx,0x134
  41e2e3:	call   406070 <__assert_fail@plt>
  41e2e8:	lea    rdi,[rip+0x18b37]        # 436e26 <flatcc_builder_padding_base@@Base+0x1406>
  41e2ef:	lea    rsi,[rip+0x179ac]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e2f6:	lea    rcx,[rip+0x18b38]        # 436e35 <flatcc_builder_padding_base@@Base+0x1415>
  41e2fd:	mov    edx,0x156
  41e302:	call   406070 <__assert_fail@plt>
  41e307:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e310 <flatcc_builder_create_table@@Base>:
  41e310:	push   rbp
  41e311:	push   r14
  41e313:	push   rbx
  41e314:	sub    rsp,0xa0
  41e31b:	test   r9d,r9d
  41e31e:	js     41e533 <flatcc_builder_create_table@@Base+0x223>
  41e324:	mov    r14,rdi
  41e327:	mov    edi,DWORD PTR [rsp+0xc0]
  41e32e:	test   dil,0x1
  41e332:	je     41e552 <flatcc_builder_create_table@@Base+0x242>
  41e338:	cmp    cx,0x4
  41e33c:	mov    eax,0x4
  41e341:	cmova  eax,ecx
  41e344:	cmp    WORD PTR [r14+0xe8],ax
  41e34c:	jae    41e356 <flatcc_builder_create_table@@Base+0x46>
  41e34e:	mov    WORD PTR [r14+0xe8],ax
  41e356:	mov    ebp,DWORD PTR [r14+0xf0]
  41e35d:	sub    ebp,edx
  41e35f:	movzx  r10d,ax
  41e363:	dec    r10d
  41e366:	and    r10d,ebp
  41e369:	add    edi,r10d
  41e36c:	neg    edi
  41e36e:	lea    ecx,[rdi+rbp*1]
  41e371:	add    ecx,0xfffffffd
  41e374:	mov    DWORD PTR [rsp+0xc],ecx
  41e378:	test   r9d,r9d
  41e37b:	jle    41e436 <flatcc_builder_create_table@@Base+0x126>
  41e381:	add    ebp,0xfffffffc
  41e384:	sub    ebp,r10d
  41e387:	mov    ecx,0xfffffffc
  41e38c:	sub    ecx,ebp
  41e38e:	mov    edi,r9d
  41e391:	lea    rbx,[rdi-0x1]
  41e395:	mov    r9d,edi
  41e398:	and    r9d,0x3
  41e39c:	cmp    rbx,0x3
  41e3a0:	jae    41e3ae <flatcc_builder_create_table@@Base+0x9e>
  41e3a2:	xor    ebx,ebx
  41e3a4:	test   r9,r9
  41e3a7:	jne    41e40d <flatcc_builder_create_table@@Base+0xfd>
  41e3a9:	jmp    41e436 <flatcc_builder_create_table@@Base+0x126>
  41e3ae:	sub    rdi,r9
  41e3b1:	xor    ebx,ebx
  41e3b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e3bd:	nop    DWORD PTR [rax]
  41e3c0:	movzx  eax,WORD PTR [r8+rbx*2]
  41e3c5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41e3c8:	add    ebp,ecx
  41e3ca:	sub    ebp,eax
  41e3cc:	mov    DWORD PTR [rax+rsi*1],ebp
  41e3cf:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  41e3d5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41e3d8:	add    ebp,ecx
  41e3da:	sub    ebp,eax
  41e3dc:	mov    DWORD PTR [rax+rsi*1],ebp
  41e3df:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  41e3e5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41e3e8:	add    ebp,ecx
  41e3ea:	sub    ebp,eax
  41e3ec:	mov    DWORD PTR [rax+rsi*1],ebp
  41e3ef:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  41e3f5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41e3f8:	add    ebp,ecx
  41e3fa:	sub    ebp,eax
  41e3fc:	mov    DWORD PTR [rax+rsi*1],ebp
  41e3ff:	add    rbx,0x4
  41e403:	cmp    rdi,rbx
  41e406:	jne    41e3c0 <flatcc_builder_create_table@@Base+0xb0>
  41e408:	test   r9,r9
  41e40b:	je     41e436 <flatcc_builder_create_table@@Base+0x126>
  41e40d:	lea    rdi,[r8+rbx*2]
  41e411:	xor    ebx,ebx
  41e413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e41d:	nop    DWORD PTR [rax]
  41e420:	movzx  eax,WORD PTR [rdi+rbx*2]
  41e424:	mov    ebp,DWORD PTR [rax+rsi*1]
  41e427:	add    ebp,ecx
  41e429:	sub    ebp,eax
  41e42b:	mov    DWORD PTR [rax+rsi*1],ebp
  41e42e:	inc    rbx
  41e431:	cmp    r9,rbx
  41e434:	jne    41e420 <flatcc_builder_create_table@@Base+0x110>
  41e436:	mov    QWORD PTR [rsp+0x10],0x4
  41e43f:	lea    rax,[rsp+0xc]
  41e444:	mov    QWORD PTR [rsp+0x20],rax
  41e449:	mov    QWORD PTR [rsp+0x28],0x4
  41e452:	mov    DWORD PTR [rsp+0x18],0x1
  41e45a:	test   rdx,rdx
  41e45d:	je     41e4fe <flatcc_builder_create_table@@Base+0x1ee>
  41e463:	lea    r8,[rdx+0x4]
  41e467:	mov    QWORD PTR [rsp+0x10],r8
  41e46c:	mov    QWORD PTR [rsp+0x30],rsi
  41e471:	mov    QWORD PTR [rsp+0x38],rdx
  41e476:	mov    DWORD PTR [rsp+0x18],0x2
  41e47e:	mov    edx,0x2
  41e483:	test   r10d,r10d
  41e486:	je     41e4ad <flatcc_builder_create_table@@Base+0x19d>
  41e488:	add    r8,r10
  41e48b:	mov    QWORD PTR [rsp+0x10],r8
  41e490:	mov    eax,edx
  41e492:	shl    rax,0x4
  41e496:	lea    rcx,[rip+0x17583]        # 435a20 <flatcc_builder_padding_base@@Base>
  41e49d:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  41e4a2:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  41e4a7:	inc    edx
  41e4a9:	mov    DWORD PTR [rsp+0x18],edx
  41e4ad:	cmp    r8,0x11
  41e4b1:	setb   al
  41e4b4:	lea    rcx,[r8-0x10]
  41e4b8:	shr    rcx,0x20
  41e4bc:	sete   cl
  41e4bf:	test   r8d,r8d
  41e4c2:	jle    41e514 <flatcc_builder_create_table@@Base+0x204>
  41e4c4:	or     al,cl
  41e4c6:	je     41e514 <flatcc_builder_create_table@@Base+0x204>
  41e4c8:	mov    ebp,DWORD PTR [r14+0xf0]
  41e4cf:	sub    ebp,r8d
  41e4d2:	mov    rdi,QWORD PTR [r14+0x38]
  41e4d6:	lea    rsi,[rsp+0x20]
  41e4db:	mov    ecx,ebp
  41e4dd:	call   QWORD PTR [r14+0x48]
  41e4e1:	test   eax,eax
  41e4e3:	jne    41e571 <flatcc_builder_create_table@@Base+0x261>
  41e4e9:	mov    DWORD PTR [r14+0xf0],ebp
  41e4f0:	mov    eax,ebp
  41e4f2:	add    rsp,0xa0
  41e4f9:	pop    rbx
  41e4fa:	pop    r14
  41e4fc:	pop    rbp
  41e4fd:	ret    
  41e4fe:	mov    r8d,0x4
  41e504:	mov    edx,0x1
  41e509:	test   r10d,r10d
  41e50c:	jne    41e488 <flatcc_builder_create_table@@Base+0x178>
  41e512:	jmp    41e4ad <flatcc_builder_create_table@@Base+0x19d>
  41e514:	lea    rdi,[rip+0x18947]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41e51b:	lea    rsi,[rip+0x17780]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e522:	lea    rcx,[rip+0x187f8]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41e529:	mov    edx,0x287
  41e52e:	call   406070 <__assert_fail@plt>
  41e533:	lea    rdi,[rip+0x17ede]        # 436418 <flatcc_builder_padding_base@@Base+0x9f8>
  41e53a:	lea    rsi,[rip+0x17761]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e541:	lea    rcx,[rip+0x17ee2]        # 43642a <flatcc_builder_padding_base@@Base+0xa0a>
  41e548:	mov    edx,0x4d5
  41e54d:	call   406070 <__assert_fail@plt>
  41e552:	lea    rdi,[rip+0x17f6d]        # 4364c6 <flatcc_builder_padding_base@@Base+0xaa6>
  41e559:	lea    rsi,[rip+0x17742]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e560:	lea    rcx,[rip+0x17ec3]        # 43642a <flatcc_builder_padding_base@@Base+0xa0a>
  41e567:	mov    edx,0x4db
  41e56c:	call   406070 <__assert_fail@plt>
  41e571:	lea    rdi,[rip+0x188ea]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41e578:	lea    rsi,[rip+0x17723]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e57f:	lea    rcx,[rip+0x1879b]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41e586:	mov    edx,0x28b
  41e58b:	call   406070 <__assert_fail@plt>

000000000041e590 <flatcc_builder_check_required_field@@Base>:
  41e590:	push   rax
  41e591:	mov    rax,QWORD PTR [rdi+0x30]
  41e595:	cmp    WORD PTR [rax+0xe],0x3
  41e59a:	jne    41e5b7 <flatcc_builder_check_required_field@@Base+0x27>
  41e59c:	xor    eax,eax
  41e59e:	cmp    WORD PTR [rdi+0x10],si
  41e5a2:	jbe    41e5b5 <flatcc_builder_check_required_field@@Base+0x25>
  41e5a4:	mov    rcx,QWORD PTR [rdi+0x8]
  41e5a8:	movzx  edx,si
  41e5ab:	xor    eax,eax
  41e5ad:	cmp    WORD PTR [rcx+rdx*2],0x0
  41e5b2:	setne  al
  41e5b5:	pop    rcx
  41e5b6:	ret    
  41e5b7:	lea    rdi,[rip+0x17f13]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41e5be:	lea    rsi,[rip+0x176dd]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e5c5:	lea    rcx,[rip+0x17f30]        # 4364fc <flatcc_builder_padding_base@@Base+0xadc>
  41e5cc:	mov    edx,0x4f8
  41e5d1:	call   406070 <__assert_fail@plt>
  41e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041e5e0 <flatcc_builder_check_union_field@@Base>:
  41e5e0:	push   rax
  41e5e1:	mov    rax,QWORD PTR [rdi+0x30]
  41e5e5:	cmp    WORD PTR [rax+0xe],0x3
  41e5ea:	jne    41e634 <flatcc_builder_check_union_field@@Base+0x54>
  41e5ec:	test   si,si
  41e5ef:	je     41e61e <flatcc_builder_check_union_field@@Base+0x3e>
  41e5f1:	cmp    WORD PTR [rdi+0x10],si
  41e5f5:	jbe    41e61e <flatcc_builder_check_union_field@@Base+0x3e>
  41e5f7:	movzx  eax,si
  41e5fa:	mov    rcx,QWORD PTR [rdi+0x8]
  41e5fe:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  41e603:	test   rdx,rdx
  41e606:	je     41e622 <flatcc_builder_check_union_field@@Base+0x42>
  41e608:	mov    rsi,QWORD PTR [rdi+0x18]
  41e60c:	cmp    BYTE PTR [rsi+rdx*1],0x0
  41e610:	movzx  eax,WORD PTR [rcx+rax*2]
  41e614:	je     41e629 <flatcc_builder_check_union_field@@Base+0x49>
  41e616:	test   ax,ax
  41e619:	setne  al
  41e61c:	jmp    41e62f <flatcc_builder_check_union_field@@Base+0x4f>
  41e61e:	xor    eax,eax
  41e620:	jmp    41e62f <flatcc_builder_check_union_field@@Base+0x4f>
  41e622:	cmp    WORD PTR [rcx+rax*2],0x0
  41e627:	jmp    41e62c <flatcc_builder_check_union_field@@Base+0x4c>
  41e629:	test   ax,ax
  41e62c:	sete   al
  41e62f:	movzx  eax,al
  41e632:	pop    rcx
  41e633:	ret    
  41e634:	lea    rdi,[rip+0x17e96]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41e63b:	lea    rsi,[rip+0x17660]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e642:	lea    rcx,[rip+0x17f06]        # 43654f <flatcc_builder_padding_base@@Base+0xb2f>
  41e649:	mov    edx,0x4ff
  41e64e:	call   406070 <__assert_fail@plt>
  41e653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e65d:	nop    DWORD PTR [rax]

000000000041e660 <flatcc_builder_check_required@@Base>:
  41e660:	push   rax
  41e661:	mov    rax,QWORD PTR [rdi+0x30]
  41e665:	cmp    WORD PTR [rax+0xe],0x3
  41e66a:	jne    41e6a9 <flatcc_builder_check_required@@Base+0x49>
  41e66c:	movzx  ecx,WORD PTR [rdi+0x10]
  41e670:	xor    eax,eax
  41e672:	cmp    ecx,edx
  41e674:	jl     41e6a3 <flatcc_builder_check_required@@Base+0x43>
  41e676:	mov    eax,0x1
  41e67b:	test   edx,edx
  41e67d:	jle    41e6a3 <flatcc_builder_check_required@@Base+0x43>
  41e67f:	mov    rcx,QWORD PTR [rdi+0x8]
  41e683:	mov    r8d,edx
  41e686:	xor    edi,edi
  41e688:	nop    DWORD PTR [rax+rax*1+0x0]
  41e690:	movzx  edx,WORD PTR [rsi+rdi*2]
  41e694:	cmp    WORD PTR [rcx+rdx*2],0x0
  41e699:	je     41e6a5 <flatcc_builder_check_required@@Base+0x45>
  41e69b:	inc    rdi
  41e69e:	cmp    r8,rdi
  41e6a1:	jne    41e690 <flatcc_builder_check_required@@Base+0x30>
  41e6a3:	pop    rcx
  41e6a4:	ret    
  41e6a5:	xor    eax,eax
  41e6a7:	pop    rcx
  41e6a8:	ret    
  41e6a9:	lea    rdi,[rip+0x17e21]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41e6b0:	lea    rsi,[rip+0x175eb]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e6b7:	lea    rcx,[rip+0x17ee1]        # 43659f <flatcc_builder_padding_base@@Base+0xb7f>
  41e6be:	mov    edx,0x511
  41e6c3:	call   406070 <__assert_fail@plt>
  41e6c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e6d0 <flatcc_builder_end_table@@Base>:
  41e6d0:	push   rbp
  41e6d1:	push   r15
  41e6d3:	push   r14
  41e6d5:	push   r12
  41e6d7:	push   rbx
  41e6d8:	sub    rsp,0x10
  41e6dc:	mov    rax,QWORD PTR [rdi+0x30]
  41e6e0:	cmp    WORD PTR [rax+0xe],0x3
  41e6e5:	jne    41e835 <flatcc_builder_end_table@@Base+0x165>
  41e6eb:	mov    rbx,rdi
  41e6ee:	mov    rax,QWORD PTR [rdi+0x8]
  41e6f2:	mov    ecx,DWORD PTR [rdi+0x10]
  41e6f5:	lea    ecx,[rcx+rcx*1]
  41e6f8:	add    ecx,0x4
  41e6fb:	mov    WORD PTR [rax-0x4],cx
  41e6ff:	mov    edx,DWORD PTR [rdi+0x20]
  41e702:	add    edx,0x4
  41e705:	mov    WORD PTR [rax-0x2],dx
  41e709:	lea    r12,[rax-0x4]
  41e70d:	movzx  ebp,cx
  41e710:	mov    eax,DWORD PTR [rdi+0x14]
  41e713:	xor    eax,ebp
  41e715:	imul   eax,eax,0x9e3779b1
  41e71b:	movzx  ecx,dx
  41e71e:	xor    ecx,eax
  41e720:	imul   ecx,ecx,0x9e3779b1
  41e726:	mov    DWORD PTR [rdi+0x14],ecx
  41e729:	mov    rsi,r12
  41e72c:	mov    edx,ebp
  41e72e:	call   41df70 <flatcc_builder_create_cached_vtable@@Base>
  41e733:	test   eax,eax
  41e735:	je     41e822 <flatcc_builder_end_table@@Base+0x152>
  41e73b:	mov    r14d,eax
  41e73e:	xor    r15d,r15d
  41e741:	mov    rdi,r12
  41e744:	xor    esi,esi
  41e746:	mov    rdx,rbp
  41e749:	call   406080 <memset@plt>
  41e74e:	mov    rax,QWORD PTR [rbx+0x30]
  41e752:	mov    r8d,DWORD PTR [rax+0x14]
  41e756:	add    r8,QWORD PTR [rbx+0x88]
  41e75d:	mov    r9,QWORD PTR [rbx]
  41e760:	mov    rsi,QWORD PTR [rbx+0x18]
  41e764:	sub    r9,r8
  41e767:	shr    r9,1
  41e76a:	mov    edx,DWORD PTR [rbx+0x20]
  41e76d:	movzx  ecx,WORD PTR [rbx+0xea]
  41e774:	mov    DWORD PTR [rsp],r14d
  41e778:	mov    rdi,rbx
  41e77b:	call   41e310 <flatcc_builder_create_table@@Base>
  41e780:	test   eax,eax
  41e782:	je     41e825 <flatcc_builder_end_table@@Base+0x155>
  41e788:	mov    r14d,eax
  41e78b:	mov    rax,QWORD PTR [rbx+0x30]
  41e78f:	mov    ecx,DWORD PTR [rax+0x18]
  41e792:	mov    DWORD PTR [rbx+0x14],ecx
  41e795:	movzx  ecx,WORD PTR [rax+0x1c]
  41e799:	mov    WORD PTR [rbx+0x10],cx
  41e79d:	mov    ecx,DWORD PTR [rax+0x10]
  41e7a0:	add    rcx,QWORD PTR [rbx+0x58]
  41e7a4:	mov    QWORD PTR [rbx+0x8],rcx
  41e7a8:	mov    eax,DWORD PTR [rax+0x14]
  41e7ab:	add    rax,QWORD PTR [rbx+0x88]
  41e7b2:	mov    QWORD PTR [rbx],rax
  41e7b5:	mov    rdi,QWORD PTR [rbx+0x18]
  41e7b9:	mov    edx,DWORD PTR [rbx+0x20]
  41e7bc:	xor    esi,esi
  41e7be:	call   406080 <memset@plt>
  41e7c3:	mov    rax,QWORD PTR [rbx+0x30]
  41e7c7:	mov    ecx,DWORD PTR [rax+0x8]
  41e7ca:	mov    DWORD PTR [rbx+0x20],ecx
  41e7cd:	mov    ecx,DWORD PTR [rax]
  41e7cf:	mov    DWORD PTR [rbx+0x28],ecx
  41e7d2:	mov    edx,DWORD PTR [rax+0x4]
  41e7d5:	mov    rsi,rcx
  41e7d8:	add    rsi,QWORD PTR [rbx+0x68]
  41e7dc:	mov    QWORD PTR [rbx+0x18],rsi
  41e7e0:	mov    esi,DWORD PTR [rbx+0x70]
  41e7e3:	sub    esi,ecx
  41e7e5:	cmp    esi,edx
  41e7e7:	cmova  esi,edx
  41e7ea:	mov    DWORD PTR [rbx+0x24],esi
  41e7ed:	movzx  ecx,WORD PTR [rbx+0xea]
  41e7f4:	cmp    WORD PTR [rbx+0xe8],cx
  41e7fb:	jae    41e804 <flatcc_builder_end_table@@Base+0x134>
  41e7fd:	mov    WORD PTR [rbx+0xe8],cx
  41e804:	movzx  ecx,WORD PTR [rax+0xc]
  41e808:	mov    WORD PTR [rbx+0xea],cx
  41e80f:	add    rax,0xffffffffffffffdc
  41e813:	mov    QWORD PTR [rbx+0x30],rax
  41e817:	dec    DWORD PTR [rbx+0x104]
  41e81d:	mov    r15d,r14d
  41e820:	jmp    41e825 <flatcc_builder_end_table@@Base+0x155>
  41e822:	xor    r15d,r15d
  41e825:	mov    eax,r15d
  41e828:	add    rsp,0x10
  41e82c:	pop    rbx
  41e82d:	pop    r12
  41e82f:	pop    r14
  41e831:	pop    r15
  41e833:	pop    rbp
  41e834:	ret    
  41e835:	lea    rdi,[rip+0x17c95]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41e83c:	lea    rsi,[rip+0x1745f]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e843:	lea    rcx,[rip+0x17daf]        # 4365f9 <flatcc_builder_padding_base@@Base+0xbd9>
  41e84a:	mov    edx,0x525
  41e84f:	call   406070 <__assert_fail@plt>
  41e854:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e85e:	xchg   ax,ax

000000000041e860 <flatcc_builder_create_vector@@Base>:
  41e860:	push   rbp
  41e861:	push   rbx
  41e862:	sub    rsp,0x98
  41e869:	cmp    rdx,r9
  41e86c:	ja     41e996 <flatcc_builder_create_vector@@Base+0x136>
  41e872:	mov    rbx,rdi
  41e875:	cmp    r8w,0x4
  41e87a:	mov    eax,0x4
  41e87f:	cmova  eax,r8d
  41e883:	cmp    WORD PTR [rdi+0xe8],ax
  41e88a:	jae    41e893 <flatcc_builder_create_vector@@Base+0x33>
  41e88c:	mov    WORD PTR [rbx+0xe8],ax
  41e893:	imul   ecx,edx
  41e896:	mov    DWORD PTR [rsp+0x4],edx
  41e89a:	mov    ebp,DWORD PTR [rbx+0xf0]
  41e8a0:	mov    edx,ebp
  41e8a2:	sub    edx,ecx
  41e8a4:	movzx  eax,ax
  41e8a7:	dec    eax
  41e8a9:	and    eax,edx
  41e8ab:	mov    QWORD PTR [rsp+0x8],0x4
  41e8b4:	lea    rdx,[rsp+0x4]
  41e8b9:	mov    QWORD PTR [rsp+0x18],rdx
  41e8be:	mov    QWORD PTR [rsp+0x20],0x4
  41e8c7:	mov    DWORD PTR [rsp+0x10],0x1
  41e8cf:	test   ecx,ecx
  41e8d1:	je     41e966 <flatcc_builder_create_vector@@Base+0x106>
  41e8d7:	mov    ecx,ecx
  41e8d9:	lea    r8,[rcx+0x4]
  41e8dd:	mov    QWORD PTR [rsp+0x8],r8
  41e8e2:	mov    QWORD PTR [rsp+0x28],rsi
  41e8e7:	mov    QWORD PTR [rsp+0x30],rcx
  41e8ec:	mov    DWORD PTR [rsp+0x10],0x2
  41e8f4:	mov    edx,0x2
  41e8f9:	test   eax,eax
  41e8fb:	je     41e924 <flatcc_builder_create_vector@@Base+0xc4>
  41e8fd:	mov    eax,eax
  41e8ff:	add    r8,rax
  41e902:	mov    QWORD PTR [rsp+0x8],r8
  41e907:	mov    ecx,edx
  41e909:	shl    rcx,0x4
  41e90d:	lea    rsi,[rip+0x1710c]        # 435a20 <flatcc_builder_padding_base@@Base>
  41e914:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41e919:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41e91e:	inc    edx
  41e920:	mov    DWORD PTR [rsp+0x10],edx
  41e924:	cmp    r8,0x11
  41e928:	setb   al
  41e92b:	lea    rcx,[r8-0x10]
  41e92f:	shr    rcx,0x20
  41e933:	sete   cl
  41e936:	test   r8d,r8d
  41e939:	jle    41e977 <flatcc_builder_create_vector@@Base+0x117>
  41e93b:	or     al,cl
  41e93d:	je     41e977 <flatcc_builder_create_vector@@Base+0x117>
  41e93f:	sub    ebp,r8d
  41e942:	mov    rdi,QWORD PTR [rbx+0x38]
  41e946:	lea    rsi,[rsp+0x18]
  41e94b:	mov    ecx,ebp
  41e94d:	call   QWORD PTR [rbx+0x48]
  41e950:	test   eax,eax
  41e952:	jne    41e9b5 <flatcc_builder_create_vector@@Base+0x155>
  41e954:	mov    DWORD PTR [rbx+0xf0],ebp
  41e95a:	mov    eax,ebp
  41e95c:	add    rsp,0x98
  41e963:	pop    rbx
  41e964:	pop    rbp
  41e965:	ret    
  41e966:	mov    r8d,0x4
  41e96c:	mov    edx,0x1
  41e971:	test   eax,eax
  41e973:	jne    41e8fd <flatcc_builder_create_vector@@Base+0x9d>
  41e975:	jmp    41e924 <flatcc_builder_create_vector@@Base+0xc4>
  41e977:	lea    rdi,[rip+0x184e4]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41e97e:	lea    rsi,[rip+0x1731d]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e985:	lea    rcx,[rip+0x18395]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41e98c:	mov    edx,0x287
  41e991:	call   406070 <__assert_fail@plt>
  41e996:	lea    rdi,[rip+0x17c9e]        # 43663b <flatcc_builder_padding_base@@Base+0xc1b>
  41e99d:	lea    rsi,[rip+0x172fe]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e9a4:	lea    rcx,[rip+0x17ca3]        # 43664e <flatcc_builder_padding_base@@Base+0xc2e>
  41e9ab:	mov    edx,0x555
  41e9b0:	call   406070 <__assert_fail@plt>
  41e9b5:	lea    rdi,[rip+0x184a6]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41e9bc:	lea    rsi,[rip+0x172df]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41e9c3:	lea    rcx,[rip+0x18357]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41e9ca:	mov    edx,0x28b
  41e9cf:	call   406070 <__assert_fail@plt>
  41e9d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9de:	xchg   ax,ax

000000000041e9e0 <flatcc_builder_end_vector@@Base>:
  41e9e0:	push   rbp
  41e9e1:	push   rbx
  41e9e2:	push   rax
  41e9e3:	mov    rax,QWORD PTR [rdi+0x30]
  41e9e7:	cmp    WORD PTR [rax+0xe],0x4
  41e9ec:	jne    41ea87 <flatcc_builder_end_vector@@Base+0xa7>
  41e9f2:	mov    rbx,rdi
  41e9f5:	mov    rsi,QWORD PTR [rdi+0x18]
  41e9f9:	mov    ecx,DWORD PTR [rax+0x10]
  41e9fc:	mov    edx,DWORD PTR [rax+0x14]
  41e9ff:	movzx  r8d,WORD PTR [rdi+0xea]
  41ea07:	mov    r9d,DWORD PTR [rax+0x18]
  41ea0b:	call   41e860 <flatcc_builder_create_vector@@Base>
  41ea10:	mov    ebp,eax
  41ea12:	test   eax,eax
  41ea14:	je     41ea7e <flatcc_builder_end_vector@@Base+0x9e>
  41ea16:	mov    rdi,QWORD PTR [rbx+0x18]
  41ea1a:	mov    edx,DWORD PTR [rbx+0x20]
  41ea1d:	xor    esi,esi
  41ea1f:	call   406080 <memset@plt>
  41ea24:	mov    rax,QWORD PTR [rbx+0x30]
  41ea28:	mov    ecx,DWORD PTR [rax+0x8]
  41ea2b:	mov    DWORD PTR [rbx+0x20],ecx
  41ea2e:	mov    ecx,DWORD PTR [rax]
  41ea30:	mov    DWORD PTR [rbx+0x28],ecx
  41ea33:	mov    edx,DWORD PTR [rax+0x4]
  41ea36:	mov    rsi,rcx
  41ea39:	add    rsi,QWORD PTR [rbx+0x68]
  41ea3d:	mov    QWORD PTR [rbx+0x18],rsi
  41ea41:	mov    esi,DWORD PTR [rbx+0x70]
  41ea44:	sub    esi,ecx
  41ea46:	cmp    esi,edx
  41ea48:	cmova  esi,edx
  41ea4b:	mov    DWORD PTR [rbx+0x24],esi
  41ea4e:	movzx  ecx,WORD PTR [rbx+0xea]
  41ea55:	cmp    WORD PTR [rbx+0xe8],cx
  41ea5c:	jae    41ea65 <flatcc_builder_end_vector@@Base+0x85>
  41ea5e:	mov    WORD PTR [rbx+0xe8],cx
  41ea65:	movzx  ecx,WORD PTR [rax+0xc]
  41ea69:	mov    WORD PTR [rbx+0xea],cx
  41ea70:	add    rax,0xffffffffffffffdc
  41ea74:	mov    QWORD PTR [rbx+0x30],rax
  41ea78:	dec    DWORD PTR [rbx+0x104]
  41ea7e:	mov    eax,ebp
  41ea80:	add    rsp,0x8
  41ea84:	pop    rbx
  41ea85:	pop    rbp
  41ea86:	ret    
  41ea87:	lea    rdi,[rip+0x17551]        # 435fdf <flatcc_builder_padding_base@@Base+0x5bf>
  41ea8e:	lea    rsi,[rip+0x1720d]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ea95:	lea    rcx,[rip+0x17c28]        # 4366c4 <flatcc_builder_padding_base@@Base+0xca4>
  41ea9c:	mov    edx,0x578
  41eaa1:	call   406070 <__assert_fail@plt>
  41eaa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041eab0 <flatcc_builder_vector_count@@Base>:
  41eab0:	mov    rax,QWORD PTR [rdi+0x30]
  41eab4:	mov    eax,DWORD PTR [rax+0x14]
  41eab7:	ret    
  41eab8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041eac0 <flatcc_builder_vector_edit@@Base>:
  41eac0:	mov    rax,QWORD PTR [rdi+0x18]
  41eac4:	ret    
  41eac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eacf:	nop

000000000041ead0 <flatcc_builder_create_offset_vector_direct@@Base>:
  41ead0:	xor    ecx,ecx
  41ead2:	jmp    41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41ead4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eade:	xchg   ax,ax
  41eae0:	push   r14
  41eae2:	push   rbx
  41eae3:	sub    rsp,0x98
  41eaea:	mov    r10,rdx
  41eaed:	xor    ebx,ebx
  41eaef:	test   r10d,0xc0000000
  41eaf6:	jne    41ec69 <flatcc_builder_create_offset_vector_direct@@Base+0x199>
  41eafc:	mov    r14,rdi
  41eaff:	cmp    WORD PTR [rdi+0xe8],0x3
  41eb07:	ja     41eb13 <flatcc_builder_create_offset_vector_direct@@Base+0x43>
  41eb09:	mov    WORD PTR [r14+0xe8],0x4
  41eb13:	lea    r8d,[r10*4+0x0]
  41eb1b:	mov    DWORD PTR [rsp+0x4],r10d
  41eb20:	mov    ebx,DWORD PTR [r14+0xf0]
  41eb27:	mov    r9d,ebx
  41eb2a:	and    r9d,0x3
  41eb2e:	mov    QWORD PTR [rsp+0x8],0x4
  41eb37:	lea    rdx,[rsp+0x4]
  41eb3c:	mov    QWORD PTR [rsp+0x18],rdx
  41eb41:	mov    QWORD PTR [rsp+0x20],0x4
  41eb4a:	mov    DWORD PTR [rsp+0x10],0x1
  41eb52:	test   r8d,r8d
  41eb55:	je     41ec76 <flatcc_builder_create_offset_vector_direct@@Base+0x1a6>
  41eb5b:	mov    edx,r8d
  41eb5e:	lea    r8,[rdx+0x4]
  41eb62:	mov    QWORD PTR [rsp+0x8],r8
  41eb67:	mov    QWORD PTR [rsp+0x28],rsi
  41eb6c:	mov    QWORD PTR [rsp+0x30],rdx
  41eb71:	mov    DWORD PTR [rsp+0x10],0x2
  41eb79:	mov    edx,0x2
  41eb7e:	test   r9d,r9d
  41eb81:	je     41eba8 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  41eb83:	add    r8,r9
  41eb86:	mov    QWORD PTR [rsp+0x8],r8
  41eb8b:	mov    edi,edx
  41eb8d:	shl    rdi,0x4
  41eb91:	lea    rax,[rip+0x16e88]        # 435a20 <flatcc_builder_padding_base@@Base>
  41eb98:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  41eb9d:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  41eba2:	inc    edx
  41eba4:	mov    DWORD PTR [rsp+0x10],edx
  41eba8:	test   r10d,r10d
  41ebab:	je     41ec25 <flatcc_builder_create_offset_vector_direct@@Base+0x155>
  41ebad:	mov    edi,r8d
  41ebb0:	sub    edi,ebx
  41ebb2:	add    edi,0xfffffffc
  41ebb5:	mov    r9d,r10d
  41ebb8:	xor    ebx,ebx
  41ebba:	jmp    41ebcb <flatcc_builder_create_offset_vector_direct@@Base+0xfb>
  41ebbc:	nop    DWORD PTR [rax+0x0]
  41ebc0:	inc    rbx
  41ebc3:	add    edi,0xfffffffc
  41ebc6:	cmp    r9,rbx
  41ebc9:	je     41ec1e <flatcc_builder_create_offset_vector_direct@@Base+0x14e>
  41ebcb:	mov    eax,DWORD PTR [rsi+rbx*4]
  41ebce:	test   eax,eax
  41ebd0:	je     41ebf0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
  41ebd2:	add    eax,edi
  41ebd4:	mov    DWORD PTR [rsi+rbx*4],eax
  41ebd7:	test   rcx,rcx
  41ebda:	je     41ebc0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41ebdc:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41ebe0:	jne    41ebc0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41ebe2:	jmp    41ec8f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  41ebe7:	nop    WORD PTR [rax+rax*1+0x0]
  41ebf0:	test   rcx,rcx
  41ebf3:	je     41ecae <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  41ebf9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41ebfd:	je     41ebc0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41ebff:	lea    rdi,[rip+0x182e1]        # 436ee7 <flatcc_builder_padding_base@@Base+0x14c7>
  41ec06:	lea    rsi,[rip+0x17095]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ec0d:	lea    rcx,[rip+0x18250]        # 436e64 <flatcc_builder_padding_base@@Base+0x1444>
  41ec14:	mov    edx,0x5b5
  41ec19:	call   406070 <__assert_fail@plt>
  41ec1e:	mov    ebx,DWORD PTR [r14+0xf0]
  41ec25:	cmp    r8,0x11
  41ec29:	setb   al
  41ec2c:	lea    rcx,[r8-0x10]
  41ec30:	shr    rcx,0x20
  41ec34:	sete   cl
  41ec37:	test   r8d,r8d
  41ec3a:	jle    41eccd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41ec40:	or     al,cl
  41ec42:	je     41eccd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41ec48:	sub    ebx,r8d
  41ec4b:	mov    rdi,QWORD PTR [r14+0x38]
  41ec4f:	lea    rsi,[rsp+0x18]
  41ec54:	mov    ecx,ebx
  41ec56:	call   QWORD PTR [r14+0x48]
  41ec5a:	test   eax,eax
  41ec5c:	jne    41ecec <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  41ec62:	mov    DWORD PTR [r14+0xf0],ebx
  41ec69:	mov    eax,ebx
  41ec6b:	add    rsp,0x98
  41ec72:	pop    rbx
  41ec73:	pop    r14
  41ec75:	ret    
  41ec76:	mov    r8d,0x4
  41ec7c:	mov    edx,0x1
  41ec81:	test   r9d,r9d
  41ec84:	jne    41eb83 <flatcc_builder_create_offset_vector_direct@@Base+0xb3>
  41ec8a:	jmp    41eba8 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  41ec8f:	lea    rdi,[rip+0x181c0]        # 436e56 <flatcc_builder_padding_base@@Base+0x1436>
  41ec96:	lea    rsi,[rip+0x17005]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ec9d:	lea    rcx,[rip+0x181c0]        # 436e64 <flatcc_builder_padding_base@@Base+0x1444>
  41eca4:	mov    edx,0x5b1
  41eca9:	call   406070 <__assert_fail@plt>
  41ecae:	lea    rdi,[rip+0x181ad]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41ecb5:	lea    rsi,[rip+0x16fe6]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ecbc:	lea    rcx,[rip+0x181a1]        # 436e64 <flatcc_builder_padding_base@@Base+0x1444>
  41ecc3:	mov    edx,0x5b7
  41ecc8:	call   406070 <__assert_fail@plt>
  41eccd:	lea    rdi,[rip+0x1818e]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41ecd4:	lea    rsi,[rip+0x16fc7]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ecdb:	lea    rcx,[rip+0x1803f]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41ece2:	mov    edx,0x287
  41ece7:	call   406070 <__assert_fail@plt>
  41ecec:	lea    rdi,[rip+0x1816f]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41ecf3:	lea    rsi,[rip+0x16fa8]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ecfa:	lea    rcx,[rip+0x18020]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41ed01:	mov    edx,0x28b
  41ed06:	call   406070 <__assert_fail@plt>
  41ed0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ed10 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41ed10:	push   rbp
  41ed11:	push   rbx
  41ed12:	push   rax
  41ed13:	mov    rax,QWORD PTR [rdi+0x30]
  41ed17:	cmp    WORD PTR [rax+0xe],0x5
  41ed1c:	jne    41edab <flatcc_builder_end_offset_vector_for_unions@@Base+0x9b>
  41ed22:	mov    rcx,rsi
  41ed25:	mov    rbx,rdi
  41ed28:	mov    rsi,QWORD PTR [rdi+0x18]
  41ed2c:	mov    edx,DWORD PTR [rax+0x14]
  41ed2f:	call   41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41ed34:	mov    ebp,eax
  41ed36:	test   eax,eax
  41ed38:	je     41eda2 <flatcc_builder_end_offset_vector_for_unions@@Base+0x92>
  41ed3a:	mov    rdi,QWORD PTR [rbx+0x18]
  41ed3e:	mov    edx,DWORD PTR [rbx+0x20]
  41ed41:	xor    esi,esi
  41ed43:	call   406080 <memset@plt>
  41ed48:	mov    rax,QWORD PTR [rbx+0x30]
  41ed4c:	mov    ecx,DWORD PTR [rax+0x8]
  41ed4f:	mov    DWORD PTR [rbx+0x20],ecx
  41ed52:	mov    ecx,DWORD PTR [rax]
  41ed54:	mov    DWORD PTR [rbx+0x28],ecx
  41ed57:	mov    edx,DWORD PTR [rax+0x4]
  41ed5a:	mov    rsi,rcx
  41ed5d:	add    rsi,QWORD PTR [rbx+0x68]
  41ed61:	mov    QWORD PTR [rbx+0x18],rsi
  41ed65:	mov    esi,DWORD PTR [rbx+0x70]
  41ed68:	sub    esi,ecx
  41ed6a:	cmp    esi,edx
  41ed6c:	cmova  esi,edx
  41ed6f:	mov    DWORD PTR [rbx+0x24],esi
  41ed72:	movzx  ecx,WORD PTR [rbx+0xea]
  41ed79:	cmp    WORD PTR [rbx+0xe8],cx
  41ed80:	jae    41ed89 <flatcc_builder_end_offset_vector_for_unions@@Base+0x79>
  41ed82:	mov    WORD PTR [rbx+0xe8],cx
  41ed89:	movzx  ecx,WORD PTR [rax+0xc]
  41ed8d:	mov    WORD PTR [rbx+0xea],cx
  41ed94:	add    rax,0xffffffffffffffdc
  41ed98:	mov    QWORD PTR [rbx+0x30],rax
  41ed9c:	dec    DWORD PTR [rbx+0x104]
  41eda2:	mov    eax,ebp
  41eda4:	add    rsp,0x8
  41eda8:	pop    rbx
  41eda9:	pop    rbp
  41edaa:	ret    
  41edab:	lea    rdi,[rip+0x17326]        # 4360d8 <flatcc_builder_padding_base@@Base+0x6b8>
  41edb2:	lea    rsi,[rip+0x16ee9]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41edb9:	lea    rcx,[rip+0x17991]        # 436751 <flatcc_builder_padding_base@@Base+0xd31>
  41edc0:	mov    edx,0x5d5
  41edc5:	call   406070 <__assert_fail@plt>
  41edca:	nop    WORD PTR [rax+rax*1+0x0]

000000000041edd0 <flatcc_builder_offset_vector_edit@@Base>:
  41edd0:	mov    rax,QWORD PTR [rdi+0x18]
  41edd4:	ret    
  41edd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eddf:	nop

000000000041ede0 <flatcc_builder_offset_vector_count@@Base>:
  41ede0:	mov    rax,QWORD PTR [rdi+0x30]
  41ede4:	mov    eax,DWORD PTR [rax+0x14]
  41ede7:	ret    
  41ede8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041edf0 <flatcc_builder_table_add_union@@Base>:
  41edf0:	push   rbp
  41edf1:	push   r15
  41edf3:	push   r14
  41edf5:	push   rbx
  41edf6:	push   rax
  41edf7:	mov    rax,QWORD PTR [rdi+0x30]
  41edfb:	cmp    WORD PTR [rax+0xe],0x3
  41ee00:	jne    41ee5e <flatcc_builder_table_add_union@@Base+0x6e>
  41ee02:	mov    r14,rdx
  41ee05:	mov    ebp,esi
  41ee07:	mov    r15,rdi
  41ee0a:	mov    rbx,rdx
  41ee0d:	shr    rbx,0x20
  41ee11:	test   r14b,r14b
  41ee14:	jne    41ee1a <flatcc_builder_table_add_union@@Base+0x2a>
  41ee16:	test   ebx,ebx
  41ee18:	jne    41ee7d <flatcc_builder_table_add_union@@Base+0x8d>
  41ee1a:	test   ebx,ebx
  41ee1c:	je     41ee33 <flatcc_builder_table_add_union@@Base+0x43>
  41ee1e:	mov    rdi,r15
  41ee21:	mov    esi,ebp
  41ee23:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  41ee28:	test   rax,rax
  41ee2b:	je     41eebb <flatcc_builder_table_add_union@@Base+0xcb>
  41ee31:	mov    DWORD PTR [rax],ebx
  41ee33:	dec    ebp
  41ee35:	mov    edx,0x1
  41ee3a:	mov    rdi,r15
  41ee3d:	mov    esi,ebp
  41ee3f:	mov    ecx,0x1
  41ee44:	call   41f040 <flatcc_builder_table_add@@Base>
  41ee49:	test   rax,rax
  41ee4c:	je     41ee9c <flatcc_builder_table_add_union@@Base+0xac>
  41ee4e:	mov    BYTE PTR [rax],r14b
  41ee51:	xor    eax,eax
  41ee53:	add    rsp,0x8
  41ee57:	pop    rbx
  41ee58:	pop    r14
  41ee5a:	pop    r15
  41ee5c:	pop    rbp
  41ee5d:	ret    
  41ee5e:	lea    rdi,[rip+0x1766c]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41ee65:	lea    rsi,[rip+0x16e36]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ee6c:	lea    rcx,[rip+0x17950]        # 4367c3 <flatcc_builder_padding_base@@Base+0xda3>
  41ee73:	mov    edx,0x5ee
  41ee78:	call   406070 <__assert_fail@plt>
  41ee7d:	lea    rdi,[rip+0x17997]        # 43681b <flatcc_builder_padding_base@@Base+0xdfb>
  41ee84:	lea    rsi,[rip+0x16e17]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41ee8b:	lea    rcx,[rip+0x17931]        # 4367c3 <flatcc_builder_padding_base@@Base+0xda3>
  41ee92:	mov    edx,0x5ef
  41ee97:	call   406070 <__assert_fail@plt>
  41ee9c:	lea    rdi,[rip+0x179a4]        # 436847 <flatcc_builder_padding_base@@Base+0xe27>
  41eea3:	lea    rsi,[rip+0x16df8]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41eeaa:	lea    rcx,[rip+0x17912]        # 4367c3 <flatcc_builder_padding_base@@Base+0xda3>
  41eeb1:	mov    edx,0x5f6
  41eeb6:	call   406070 <__assert_fail@plt>
  41eebb:	lea    rdi,[rip+0x1797b]        # 43683d <flatcc_builder_padding_base@@Base+0xe1d>
  41eec2:	lea    rsi,[rip+0x16dd9]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41eec9:	lea    rcx,[rip+0x178f3]        # 4367c3 <flatcc_builder_padding_base@@Base+0xda3>
  41eed0:	mov    edx,0x5f2
  41eed5:	call   406070 <__assert_fail@plt>
  41eeda:	nop    WORD PTR [rax+rax*1+0x0]

000000000041eee0 <flatcc_builder_table_add_offset@@Base>:
  41eee0:	push   rbp
  41eee1:	push   r15
  41eee3:	push   r14
  41eee5:	push   rbx
  41eee6:	push   rax
  41eee7:	mov    rax,QWORD PTR [rdi+0x30]
  41eeeb:	cmp    WORD PTR [rax+0xe],0x3
  41eef0:	jne    41efde <flatcc_builder_table_add_offset@@Base+0xfe>
  41eef6:	mov    r14d,esi
  41eef9:	cmp    esi,0x7ffd
  41eeff:	jae    41effd <flatcc_builder_table_add_offset@@Base+0x11d>
  41ef05:	mov    rbx,rdi
  41ef08:	mov    rax,QWORD PTR [rdi+0x8]
  41ef0c:	movsxd rcx,r14d
  41ef0f:	cmp    WORD PTR [rax+rcx*2],0x0
  41ef14:	jne    41f01c <flatcc_builder_table_add_offset@@Base+0x13c>
  41ef1a:	mov    ecx,DWORD PTR [rbx+0x14]
  41ef1d:	xor    ecx,r14d
  41ef20:	imul   ecx,ecx,0x9e3779b1
  41ef26:	xor    ecx,0x4
  41ef29:	imul   ecx,ecx,0x9e3779b1
  41ef2f:	mov    DWORD PTR [rbx+0x14],ecx
  41ef32:	mov    ebp,DWORD PTR [rbx+0x20]
  41ef35:	mov    ecx,DWORD PTR [rbx+0x24]
  41ef38:	add    ebp,0x3
  41ef3b:	and    ebp,0xfffffffc
  41ef3e:	lea    r15,[rbp+0x4]
  41ef42:	mov    DWORD PTR [rbx+0x20],r15d
  41ef46:	cmp    ecx,r15d
  41ef49:	jae    41efa8 <flatcc_builder_table_add_offset@@Base+0xc8>
  41ef4b:	mov    eax,r15d
  41ef4e:	and    eax,0xfffffffc
  41ef51:	lea    rsi,[rbx+0x68]
  41ef55:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef59:	mov    edx,DWORD PTR [rbx+0x28]
  41ef5c:	add    rdx,rax
  41ef5f:	mov    ecx,0x1
  41ef64:	mov    r8d,0x1
  41ef6a:	call   QWORD PTR [rbx+0x50]
  41ef6d:	test   eax,eax
  41ef6f:	je     41ef75 <flatcc_builder_table_add_offset@@Base+0x95>
  41ef71:	xor    ebp,ebp
  41ef73:	jmp    41efd0 <flatcc_builder_table_add_offset@@Base+0xf0>
  41ef75:	mov    eax,DWORD PTR [rbx+0x28]
  41ef78:	mov    rcx,rax
  41ef7b:	add    rcx,QWORD PTR [rbx+0x68]
  41ef7f:	mov    QWORD PTR [rbx+0x18],rcx
  41ef83:	mov    ecx,DWORD PTR [rbx+0x70]
  41ef86:	sub    ecx,eax
  41ef88:	cmp    ecx,0xfffc
  41ef8e:	mov    eax,0xfffc
  41ef93:	cmovb  eax,ecx
  41ef96:	mov    DWORD PTR [rbx+0x24],eax
  41ef99:	mov    rax,QWORD PTR [rbx+0x30]
  41ef9d:	mov    DWORD PTR [rax+0x4],0xfffc
  41efa4:	mov    rax,QWORD PTR [rbx+0x8]
  41efa8:	movzx  ecx,r14w
  41efac:	mov    WORD PTR [rax+rcx*2],r15w
  41efb1:	cmp    WORD PTR [rbx+0x10],cx
  41efb5:	ja     41efbf <flatcc_builder_table_add_offset@@Base+0xdf>
  41efb7:	inc    r14d
  41efba:	mov    WORD PTR [rbx+0x10],r14w
  41efbf:	mov    rax,QWORD PTR [rbx]
  41efc2:	lea    rcx,[rax+0x2]
  41efc6:	mov    QWORD PTR [rbx],rcx
  41efc9:	mov    WORD PTR [rax],bp
  41efcc:	add    rbp,QWORD PTR [rbx+0x18]
  41efd0:	mov    rax,rbp
  41efd3:	add    rsp,0x8
  41efd7:	pop    rbx
  41efd8:	pop    r14
  41efda:	pop    r15
  41efdc:	pop    rbp
  41efdd:	ret    
  41efde:	lea    rdi,[rip+0x174ec]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41efe5:	lea    rsi,[rip+0x16cb6]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41efec:	lea    rcx,[rip+0x17bd2]        # 436bc5 <flatcc_builder_padding_base@@Base+0x11a5>
  41eff3:	mov    edx,0x713
  41eff8:	call   406070 <__assert_fail@plt>
  41effd:	lea    rdi,[rip+0x17b41]        # 436b45 <flatcc_builder_padding_base@@Base+0x1125>
  41f004:	lea    rsi,[rip+0x16c97]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f00b:	lea    rcx,[rip+0x17bb3]        # 436bc5 <flatcc_builder_padding_base@@Base+0x11a5>
  41f012:	mov    edx,0x714
  41f017:	call   406070 <__assert_fail@plt>
  41f01c:	lea    rdi,[rip+0x17e3f]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41f023:	lea    rsi,[rip+0x16c78]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f02a:	lea    rcx,[rip+0x17b94]        # 436bc5 <flatcc_builder_padding_base@@Base+0x11a5>
  41f031:	mov    edx,0x71b
  41f036:	call   406070 <__assert_fail@plt>
  41f03b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f040 <flatcc_builder_table_add@@Base>:
  41f040:	push   rbp
  41f041:	push   r14
  41f043:	push   rbx
  41f044:	mov    rax,QWORD PTR [rdi+0x30]
  41f048:	cmp    WORD PTR [rax+0xe],0x3
  41f04d:	jne    41f138 <flatcc_builder_table_add@@Base+0xf8>
  41f053:	mov    r14d,esi
  41f056:	cmp    esi,0x7ffd
  41f05c:	jae    41f157 <flatcc_builder_table_add@@Base+0x117>
  41f062:	mov    rbx,rdi
  41f065:	cmp    WORD PTR [rdi+0xea],cx
  41f06c:	jae    41f075 <flatcc_builder_table_add@@Base+0x35>
  41f06e:	mov    WORD PTR [rbx+0xea],cx
  41f075:	mov    rsi,QWORD PTR [rbx+0x8]
  41f079:	movsxd rax,r14d
  41f07c:	cmp    WORD PTR [rsi+rax*2],0x0
  41f081:	jne    41f176 <flatcc_builder_table_add@@Base+0x136>
  41f087:	mov    eax,DWORD PTR [rbx+0x14]
  41f08a:	xor    eax,r14d
  41f08d:	imul   eax,eax,0x9e3779b1
  41f093:	xor    eax,edx
  41f095:	imul   eax,eax,0x9e3779b1
  41f09b:	mov    DWORD PTR [rbx+0x14],eax
  41f09e:	mov    eax,DWORD PTR [rbx+0x20]
  41f0a1:	movzx  ebp,cx
  41f0a4:	lea    eax,[rax+rbp*1]
  41f0a7:	add    eax,0xffffffff
  41f0aa:	neg    ebp
  41f0ac:	and    ebp,eax
  41f0ae:	add    edx,ebp
  41f0b0:	mov    DWORD PTR [rbx+0x20],edx
  41f0b3:	cmp    edx,DWORD PTR [rbx+0x24]
  41f0b6:	jb     41f114 <flatcc_builder_table_add@@Base+0xd4>
  41f0b8:	inc    edx
  41f0ba:	lea    rsi,[rbx+0x68]
  41f0be:	mov    rdi,QWORD PTR [rbx+0x40]
  41f0c2:	mov    eax,DWORD PTR [rbx+0x28]
  41f0c5:	add    rax,rdx
  41f0c8:	mov    rdx,rax
  41f0cb:	mov    ecx,0x1
  41f0d0:	mov    r8d,0x1
  41f0d6:	call   QWORD PTR [rbx+0x50]
  41f0d9:	test   eax,eax
  41f0db:	je     41f0e1 <flatcc_builder_table_add@@Base+0xa1>
  41f0dd:	xor    eax,eax
  41f0df:	jmp    41f133 <flatcc_builder_table_add@@Base+0xf3>
  41f0e1:	mov    eax,DWORD PTR [rbx+0x28]
  41f0e4:	mov    rcx,rax
  41f0e7:	add    rcx,QWORD PTR [rbx+0x68]
  41f0eb:	mov    QWORD PTR [rbx+0x18],rcx
  41f0ef:	mov    ecx,DWORD PTR [rbx+0x70]
  41f0f2:	sub    ecx,eax
  41f0f4:	cmp    ecx,0xfffc
  41f0fa:	mov    eax,0xfffc
  41f0ff:	cmovb  eax,ecx
  41f102:	mov    DWORD PTR [rbx+0x24],eax
  41f105:	mov    rax,QWORD PTR [rbx+0x30]
  41f109:	mov    DWORD PTR [rax+0x4],0xfffc
  41f110:	mov    rsi,QWORD PTR [rbx+0x8]
  41f114:	mov    eax,ebp
  41f116:	add    ebp,0x4
  41f119:	movzx  ecx,r14w
  41f11d:	mov    WORD PTR [rsi+rcx*2],bp
  41f121:	cmp    WORD PTR [rbx+0x10],cx
  41f125:	ja     41f12f <flatcc_builder_table_add@@Base+0xef>
  41f127:	inc    r14d
  41f12a:	mov    WORD PTR [rbx+0x10],r14w
  41f12f:	add    rax,QWORD PTR [rbx+0x18]
  41f133:	pop    rbx
  41f134:	pop    r14
  41f136:	pop    rbp
  41f137:	ret    
  41f138:	lea    rdi,[rip+0x17392]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41f13f:	lea    rsi,[rip+0x16b5c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f146:	lea    rcx,[rip+0x179ae]        # 436afb <flatcc_builder_padding_base@@Base+0x10db>
  41f14d:	mov    edx,0x6ed
  41f152:	call   406070 <__assert_fail@plt>
  41f157:	lea    rdi,[rip+0x179e7]        # 436b45 <flatcc_builder_padding_base@@Base+0x1125>
  41f15e:	lea    rsi,[rip+0x16b3d]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f165:	lea    rcx,[rip+0x1798f]        # 436afb <flatcc_builder_padding_base@@Base+0x10db>
  41f16c:	mov    edx,0x6ee
  41f171:	call   406070 <__assert_fail@plt>
  41f176:	lea    rdi,[rip+0x17ce5]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41f17d:	lea    rsi,[rip+0x16b1e]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f184:	lea    rcx,[rip+0x17970]        # 436afb <flatcc_builder_padding_base@@Base+0x10db>
  41f18b:	mov    edx,0x6f8
  41f190:	call   406070 <__assert_fail@plt>
  41f195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f19f:	nop

000000000041f1a0 <flatcc_builder_table_add_union_vector@@Base>:
  41f1a0:	push   r15
  41f1a2:	push   r14
  41f1a4:	push   r12
  41f1a6:	push   rbx
  41f1a7:	push   rax
  41f1a8:	mov    rax,QWORD PTR [rdi+0x30]
  41f1ac:	cmp    WORD PTR [rax+0xe],0x3
  41f1b1:	jne    41f207 <flatcc_builder_table_add_union_vector@@Base+0x67>
  41f1b3:	mov    rbx,rdx
  41f1b6:	mov    r12,rdx
  41f1b9:	shr    r12,0x20
  41f1bd:	test   ebx,ebx
  41f1bf:	setne  al
  41f1c2:	test   r12d,r12d
  41f1c5:	sete   cl
  41f1c8:	xor    cl,al
  41f1ca:	je     41f226 <flatcc_builder_table_add_union_vector@@Base+0x86>
  41f1cc:	test   ebx,ebx
  41f1ce:	je     41f1f9 <flatcc_builder_table_add_union_vector@@Base+0x59>
  41f1d0:	mov    r14d,esi
  41f1d3:	mov    r15,rdi
  41f1d6:	lea    esi,[r14-0x1]
  41f1da:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  41f1df:	test   rax,rax
  41f1e2:	je     41f245 <flatcc_builder_table_add_union_vector@@Base+0xa5>
  41f1e4:	mov    DWORD PTR [rax],ebx
  41f1e6:	mov    rdi,r15
  41f1e9:	mov    esi,r14d
  41f1ec:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  41f1f1:	test   rax,rax
  41f1f4:	je     41f264 <flatcc_builder_table_add_union_vector@@Base+0xc4>
  41f1f6:	mov    DWORD PTR [rax],r12d
  41f1f9:	xor    eax,eax
  41f1fb:	add    rsp,0x8
  41f1ff:	pop    rbx
  41f200:	pop    r12
  41f202:	pop    r14
  41f204:	pop    r15
  41f206:	ret    
  41f207:	lea    rdi,[rip+0x172c3]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  41f20e:	lea    rsi,[rip+0x16a8d]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f215:	lea    rcx,[rip+0x17637]        # 436853 <flatcc_builder_padding_base@@Base+0xe33>
  41f21c:	mov    edx,0x600
  41f221:	call   406070 <__assert_fail@plt>
  41f226:	lea    rdi,[rip+0x17689]        # 4368b6 <flatcc_builder_padding_base@@Base+0xe96>
  41f22d:	lea    rsi,[rip+0x16a6e]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f234:	lea    rcx,[rip+0x17618]        # 436853 <flatcc_builder_padding_base@@Base+0xe33>
  41f23b:	mov    edx,0x601
  41f240:	call   406070 <__assert_fail@plt>
  41f245:	lea    rdi,[rip+0x175f1]        # 43683d <flatcc_builder_padding_base@@Base+0xe1d>
  41f24c:	lea    rsi,[rip+0x16a4f]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f253:	lea    rcx,[rip+0x175f9]        # 436853 <flatcc_builder_padding_base@@Base+0xe33>
  41f25a:	mov    edx,0x604
  41f25f:	call   406070 <__assert_fail@plt>
  41f264:	lea    rdi,[rip+0x175d2]        # 43683d <flatcc_builder_padding_base@@Base+0xe1d>
  41f26b:	lea    rsi,[rip+0x16a30]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f272:	lea    rcx,[rip+0x175da]        # 436853 <flatcc_builder_padding_base@@Base+0xe33>
  41f279:	mov    edx,0x608
  41f27e:	call   406070 <__assert_fail@plt>
  41f283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f28d:	nop    DWORD PTR [rax]

000000000041f290 <flatcc_builder_create_union_vector@@Base>:
  41f290:	push   r15
  41f292:	push   r14
  41f294:	push   r13
  41f296:	push   r12
  41f298:	push   rbx
  41f299:	mov    r14,rdx
  41f29c:	mov    r15,rsi
  41f29f:	mov    rbx,rdi
  41f2a2:	mov    esi,0x4
  41f2a7:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41f2ac:	test   eax,eax
  41f2ae:	je     41f2c0 <flatcc_builder_create_union_vector@@Base+0x30>
  41f2b0:	xor    r14d,r14d
  41f2b3:	mov    rax,r14
  41f2b6:	pop    rbx
  41f2b7:	pop    r12
  41f2b9:	pop    r13
  41f2bb:	pop    r14
  41f2bd:	pop    r15
  41f2bf:	ret    
  41f2c0:	mov    rax,QWORD PTR [rbx+0x30]
  41f2c4:	mov    DWORD PTR [rax+0x10],0x4
  41f2cb:	mov    rax,QWORD PTR [rbx+0x30]
  41f2cf:	mov    DWORD PTR [rax+0x14],0x0
  41f2d6:	mov    rax,QWORD PTR [rbx+0x30]
  41f2da:	mov    WORD PTR [rax+0xe],0x5
  41f2e0:	mov    ecx,DWORD PTR [rbx+0x28]
  41f2e3:	mov    edx,DWORD PTR [rbx+0x70]
  41f2e6:	sub    edx,ecx
  41f2e8:	add    rcx,QWORD PTR [rbx+0x68]
  41f2ec:	mov    QWORD PTR [rbx+0x18],rcx
  41f2f0:	cmp    edx,0xfffffffc
  41f2f3:	mov    ecx,0xfffffffc
  41f2f8:	cmovb  ecx,edx
  41f2fb:	mov    DWORD PTR [rbx+0x24],ecx
  41f2fe:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f305:	mov    ecx,DWORD PTR [rax+0x14]
  41f308:	add    ecx,r14d
  41f30b:	jb     41f578 <flatcc_builder_create_union_vector@@Base+0x2e8>
  41f311:	cmp    ecx,0x40000000
  41f317:	jae    41f578 <flatcc_builder_create_union_vector@@Base+0x2e8>
  41f31d:	mov    DWORD PTR [rax+0x14],ecx
  41f320:	mov    r12d,DWORD PTR [rbx+0x20]
  41f324:	mov    eax,DWORD PTR [rbx+0x24]
  41f327:	lea    ecx,[r12+r14*4]
  41f32b:	mov    DWORD PTR [rbx+0x20],ecx
  41f32e:	cmp    ecx,eax
  41f330:	jae    41f340 <flatcc_builder_create_union_vector@@Base+0xb0>
  41f332:	mov    rsi,QWORD PTR [rbx+0x18]
  41f336:	add    r12,rsi
  41f339:	jne    41f39b <flatcc_builder_create_union_vector@@Base+0x10b>
  41f33b:	jmp    41f2b0 <flatcc_builder_create_union_vector@@Base+0x20>
  41f340:	inc    ecx
  41f342:	lea    rsi,[rbx+0x68]
  41f346:	mov    rdi,QWORD PTR [rbx+0x40]
  41f34a:	mov    edx,DWORD PTR [rbx+0x28]
  41f34d:	add    rdx,rcx
  41f350:	mov    ecx,0x1
  41f355:	mov    r8d,0x1
  41f35b:	call   QWORD PTR [rbx+0x50]
  41f35e:	test   eax,eax
  41f360:	jne    41f2b0 <flatcc_builder_create_union_vector@@Base+0x20>
  41f366:	mov    eax,DWORD PTR [rbx+0x28]
  41f369:	mov    rsi,rax
  41f36c:	add    rsi,QWORD PTR [rbx+0x68]
  41f370:	mov    QWORD PTR [rbx+0x18],rsi
  41f374:	mov    ecx,DWORD PTR [rbx+0x70]
  41f377:	sub    ecx,eax
  41f379:	cmp    ecx,0xfffffffc
  41f37c:	mov    eax,0xfffffffc
  41f381:	cmovb  eax,ecx
  41f384:	mov    DWORD PTR [rbx+0x24],eax
  41f387:	mov    rcx,QWORD PTR [rbx+0x30]
  41f38b:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41f392:	add    r12,rsi
  41f395:	je     41f2b0 <flatcc_builder_create_union_vector@@Base+0x20>
  41f39b:	mov    r13d,DWORD PTR [rbx+0x20]
  41f39f:	lea    ecx,[r14+r13*1]
  41f3a3:	mov    DWORD PTR [rbx+0x20],ecx
  41f3a6:	cmp    ecx,eax
  41f3a8:	jb     41f3fc <flatcc_builder_create_union_vector@@Base+0x16c>
  41f3aa:	inc    ecx
  41f3ac:	lea    rsi,[rbx+0x68]
  41f3b0:	mov    rdi,QWORD PTR [rbx+0x40]
  41f3b4:	mov    edx,DWORD PTR [rbx+0x28]
  41f3b7:	add    rdx,rcx
  41f3ba:	mov    ecx,0x1
  41f3bf:	mov    r8d,0x1
  41f3c5:	call   QWORD PTR [rbx+0x50]
  41f3c8:	test   eax,eax
  41f3ca:	jne    41f2b0 <flatcc_builder_create_union_vector@@Base+0x20>
  41f3d0:	mov    eax,DWORD PTR [rbx+0x28]
  41f3d3:	mov    rsi,rax
  41f3d6:	add    rsi,QWORD PTR [rbx+0x68]
  41f3da:	mov    QWORD PTR [rbx+0x18],rsi
  41f3de:	mov    ecx,DWORD PTR [rbx+0x70]
  41f3e1:	sub    ecx,eax
  41f3e3:	cmp    ecx,0xfffffffc
  41f3e6:	mov    eax,0xfffffffc
  41f3eb:	cmovb  eax,ecx
  41f3ee:	mov    DWORD PTR [rbx+0x24],eax
  41f3f1:	mov    rax,QWORD PTR [rbx+0x30]
  41f3f5:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f3fc:	mov    r12,rsi
  41f3ff:	add    r12,r13
  41f402:	je     41f2b0 <flatcc_builder_create_union_vector@@Base+0x20>
  41f408:	test   r14,r14
  41f40b:	je     41f4c8 <flatcc_builder_create_union_vector@@Base+0x238>
  41f411:	lea    rcx,[r14-0x1]
  41f415:	mov    r8d,r14d
  41f418:	and    r8d,0x3
  41f41c:	cmp    rcx,0x3
  41f420:	jae    41f42e <flatcc_builder_create_union_vector@@Base+0x19e>
  41f422:	xor    ecx,ecx
  41f424:	test   r8,r8
  41f427:	jne    41f497 <flatcc_builder_create_union_vector@@Base+0x207>
  41f429:	jmp    41f4c8 <flatcc_builder_create_union_vector@@Base+0x238>
  41f42e:	mov    rdx,r14
  41f431:	sub    rdx,r8
  41f434:	lea    rdi,[rsi+r13*1]
  41f438:	add    rdi,0x3
  41f43c:	xor    ecx,ecx
  41f43e:	xchg   ax,ax
  41f440:	movzx  eax,BYTE PTR [r15+rcx*8]
  41f445:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  41f449:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  41f44e:	mov    DWORD PTR [rsi+rcx*4],eax
  41f451:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  41f457:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  41f45b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  41f460:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  41f464:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  41f46a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  41f46e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  41f473:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  41f477:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  41f47d:	mov    BYTE PTR [rdi+rcx*1],al
  41f480:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  41f485:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  41f489:	add    rcx,0x4
  41f48d:	cmp    rdx,rcx
  41f490:	jne    41f440 <flatcc_builder_create_union_vector@@Base+0x1b0>
  41f492:	test   r8,r8
  41f495:	je     41f4c8 <flatcc_builder_create_union_vector@@Base+0x238>
  41f497:	lea    rdx,[rsi+rcx*4]
  41f49b:	lea    rdi,[r15+rcx*8]
  41f49f:	add    rdi,0x4
  41f4a3:	add    r13,rcx
  41f4a6:	add    r13,rsi
  41f4a9:	xor    ecx,ecx
  41f4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41f4b0:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  41f4b5:	mov    BYTE PTR [r13+rcx*1+0x0],al
  41f4ba:	mov    eax,DWORD PTR [rdi+rcx*8]
  41f4bd:	mov    DWORD PTR [rdx+rcx*4],eax
  41f4c0:	inc    rcx
  41f4c3:	cmp    r8,rcx
  41f4c6:	jne    41f4b0 <flatcc_builder_create_union_vector@@Base+0x220>
  41f4c8:	mov    rdi,rbx
  41f4cb:	mov    rdx,r14
  41f4ce:	mov    rcx,r12
  41f4d1:	call   41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41f4d6:	mov    r15d,eax
  41f4d9:	test   eax,eax
  41f4db:	je     41f501 <flatcc_builder_create_union_vector@@Base+0x271>
  41f4dd:	mov    ecx,0x1
  41f4e2:	mov    r9d,0xffffffff
  41f4e8:	mov    rdi,rbx
  41f4eb:	mov    rsi,r12
  41f4ee:	mov    rdx,r14
  41f4f1:	mov    r8d,0x1
  41f4f7:	call   41e860 <flatcc_builder_create_vector@@Base>
  41f4fc:	mov    r14d,eax
  41f4ff:	jmp    41f504 <flatcc_builder_create_union_vector@@Base+0x274>
  41f501:	xor    r14d,r14d
  41f504:	shl    r15,0x20
  41f508:	mov    rdi,QWORD PTR [rbx+0x18]
  41f50c:	mov    edx,DWORD PTR [rbx+0x20]
  41f50f:	xor    esi,esi
  41f511:	call   406080 <memset@plt>
  41f516:	mov    rax,QWORD PTR [rbx+0x30]
  41f51a:	mov    ecx,DWORD PTR [rax+0x8]
  41f51d:	mov    DWORD PTR [rbx+0x20],ecx
  41f520:	mov    ecx,DWORD PTR [rax]
  41f522:	mov    DWORD PTR [rbx+0x28],ecx
  41f525:	mov    edx,DWORD PTR [rax+0x4]
  41f528:	mov    rsi,rcx
  41f52b:	add    rsi,QWORD PTR [rbx+0x68]
  41f52f:	mov    QWORD PTR [rbx+0x18],rsi
  41f533:	mov    esi,DWORD PTR [rbx+0x70]
  41f536:	sub    esi,ecx
  41f538:	cmp    esi,edx
  41f53a:	cmova  esi,edx
  41f53d:	mov    DWORD PTR [rbx+0x24],esi
  41f540:	movzx  ecx,WORD PTR [rbx+0xea]
  41f547:	cmp    WORD PTR [rbx+0xe8],cx
  41f54e:	jae    41f557 <flatcc_builder_create_union_vector@@Base+0x2c7>
  41f550:	mov    WORD PTR [rbx+0xe8],cx
  41f557:	or     r14,r15
  41f55a:	movzx  ecx,WORD PTR [rax+0xc]
  41f55e:	mov    WORD PTR [rbx+0xea],cx
  41f565:	add    rax,0xffffffffffffffdc
  41f569:	mov    QWORD PTR [rbx+0x30],rax
  41f56d:	dec    DWORD PTR [rbx+0x104]
  41f573:	jmp    41f2b3 <flatcc_builder_create_union_vector@@Base+0x23>
  41f578:	lea    rdi,[rip+0x177ec]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41f57f:	lea    rsi,[rip+0x1671c]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41f586:	lea    rcx,[rip+0x177f9]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41f58d:	mov    edx,0x37c
  41f592:	call   406070 <__assert_fail@plt>
  41f597:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f5a0 <flatcc_builder_create_union_vector_direct@@Base>:
  41f5a0:	push   r15
  41f5a2:	push   r14
  41f5a4:	push   r12
  41f5a6:	push   rbx
  41f5a7:	push   rax
  41f5a8:	mov    r14,rcx
  41f5ab:	mov    r15,rsi
  41f5ae:	mov    r12,rdi
  41f5b1:	mov    rsi,rdx
  41f5b4:	mov    rdx,rcx
  41f5b7:	mov    rcx,r15
  41f5ba:	call   41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41f5bf:	mov    ebx,eax
  41f5c1:	test   eax,eax
  41f5c3:	je     41f5e8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  41f5c5:	mov    ecx,0x1
  41f5ca:	mov    r9d,0xffffffff
  41f5d0:	mov    rdi,r12
  41f5d3:	mov    rsi,r15
  41f5d6:	mov    rdx,r14
  41f5d9:	mov    r8d,0x1
  41f5df:	call   41e860 <flatcc_builder_create_vector@@Base>
  41f5e4:	mov    eax,eax
  41f5e6:	jmp    41f5ea <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  41f5e8:	xor    eax,eax
  41f5ea:	shl    rbx,0x20
  41f5ee:	or     rbx,rax
  41f5f1:	mov    rax,rbx
  41f5f4:	add    rsp,0x8
  41f5f8:	pop    rbx
  41f5f9:	pop    r12
  41f5fb:	pop    r14
  41f5fd:	pop    r15
  41f5ff:	ret    

000000000041f600 <flatcc_builder_start_union_vector@@Base>:
  41f600:	push   rbx
  41f601:	mov    rbx,rdi
  41f604:	mov    esi,0x4
  41f609:	call   41cb00 <flatcc_builder_start_buffer@@Base+0xe0>
  41f60e:	mov    ecx,eax
  41f610:	mov    eax,0xffffffff
  41f615:	test   ecx,ecx
  41f617:	je     41f61b <flatcc_builder_start_union_vector@@Base+0x1b>
  41f619:	pop    rbx
  41f61a:	ret    
  41f61b:	mov    rax,QWORD PTR [rbx+0x30]
  41f61f:	mov    DWORD PTR [rax+0x10],0x8
  41f626:	mov    rax,QWORD PTR [rbx+0x30]
  41f62a:	mov    DWORD PTR [rax+0x14],0x0
  41f631:	mov    rax,QWORD PTR [rbx+0x30]
  41f635:	mov    WORD PTR [rax+0xe],0x7
  41f63b:	mov    ecx,DWORD PTR [rbx+0x28]
  41f63e:	mov    edx,DWORD PTR [rbx+0x70]
  41f641:	sub    edx,ecx
  41f643:	add    rcx,QWORD PTR [rbx+0x68]
  41f647:	mov    QWORD PTR [rbx+0x18],rcx
  41f64b:	cmp    edx,0xfffffffc
  41f64e:	mov    ecx,0xfffffffc
  41f653:	cmovb  ecx,edx
  41f656:	mov    DWORD PTR [rbx+0x24],ecx
  41f659:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f660:	xor    eax,eax
  41f662:	pop    rbx
  41f663:	ret    
  41f664:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f66e:	xchg   ax,ax

000000000041f670 <flatcc_builder_end_union_vector@@Base>:
  41f670:	push   rbp
  41f671:	push   r15
  41f673:	push   r14
  41f675:	push   r13
  41f677:	push   r12
  41f679:	push   rbx
  41f67a:	push   rax
  41f67b:	mov    rax,QWORD PTR [rdi+0x30]
  41f67f:	cmp    WORD PTR [rax+0xe],0x7
  41f684:	jne    41fa74 <flatcc_builder_end_union_vector@@Base+0x404>
  41f68a:	mov    r13,rdi
  41f68d:	mov    r14d,DWORD PTR [rax+0x14]
  41f691:	lea    eax,[r14+r14*4]
  41f695:	mov    r12d,DWORD PTR [rdi+0x20]
  41f699:	add    eax,r12d
  41f69c:	mov    DWORD PTR [rdi+0x20],eax
  41f69f:	cmp    eax,DWORD PTR [rdi+0x24]
  41f6a2:	jae    41f6aa <flatcc_builder_end_union_vector@@Base+0x3a>
  41f6a4:	mov    r8,QWORD PTR [r13+0x18]
  41f6a8:	jmp    41f701 <flatcc_builder_end_union_vector@@Base+0x91>
  41f6aa:	inc    eax
  41f6ac:	lea    rsi,[r13+0x68]
  41f6b0:	mov    rdi,QWORD PTR [r13+0x40]
  41f6b4:	mov    edx,DWORD PTR [r13+0x28]
  41f6b8:	add    rdx,rax
  41f6bb:	mov    ecx,0x1
  41f6c0:	mov    r8d,0x1
  41f6c6:	call   QWORD PTR [r13+0x50]
  41f6ca:	test   eax,eax
  41f6cc:	jne    41f836 <flatcc_builder_end_union_vector@@Base+0x1c6>
  41f6d2:	mov    eax,DWORD PTR [r13+0x28]
  41f6d6:	mov    r8,rax
  41f6d9:	add    r8,QWORD PTR [r13+0x68]
  41f6dd:	mov    QWORD PTR [r13+0x18],r8
  41f6e1:	mov    ecx,DWORD PTR [r13+0x70]
  41f6e5:	sub    ecx,eax
  41f6e7:	cmp    ecx,0xfffffffc
  41f6ea:	mov    eax,0xfffffffc
  41f6ef:	cmovb  eax,ecx
  41f6f2:	mov    DWORD PTR [r13+0x24],eax
  41f6f6:	mov    rax,QWORD PTR [r13+0x30]
  41f6fa:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41f701:	mov    rsi,r8
  41f704:	add    rsi,r12
  41f707:	je     41f836 <flatcc_builder_end_union_vector@@Base+0x1c6>
  41f70d:	lea    r15,[rsi+r14*4]
  41f711:	test   r14d,r14d
  41f714:	je     41f7fa <flatcc_builder_end_union_vector@@Base+0x18a>
  41f71a:	cmp    r14d,0x9
  41f71e:	jae    41f8c9 <flatcc_builder_end_union_vector@@Base+0x259>
  41f724:	xor    r9d,r9d
  41f727:	mov    r11d,r14d
  41f72a:	sub    r11d,r9d
  41f72d:	mov    r10,r9
  41f730:	not    r10
  41f733:	add    r10,r14
  41f736:	and    r11,0x3
  41f73a:	je     41f780 <flatcc_builder_end_union_vector@@Base+0x110>
  41f73c:	mov    rdx,r9
  41f73f:	neg    rdx
  41f742:	lea    rbp,[r12+r9*4]
  41f746:	add    rbp,r8
  41f749:	lea    rbx,[r8+r9*8]
  41f74d:	add    rbx,0x4
  41f751:	lea    rax,[r9+r14*4]
  41f755:	add    rax,r12
  41f758:	add    rax,r8
  41f75b:	xor    edi,edi
  41f75d:	nop    DWORD PTR [rax]
  41f760:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  41f765:	mov    BYTE PTR [rax+rdi*1],cl
  41f768:	mov    ecx,DWORD PTR [rbx+rdi*8]
  41f76b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  41f76f:	dec    rdx
  41f772:	inc    rdi
  41f775:	cmp    r11,rdi
  41f778:	jne    41f760 <flatcc_builder_end_union_vector@@Base+0xf0>
  41f77a:	neg    rdx
  41f77d:	mov    r9,rdx
  41f780:	cmp    r10,0x3
  41f784:	jb     41f7fa <flatcc_builder_end_union_vector@@Base+0x18a>
  41f786:	mov    rbp,r14
  41f789:	sub    rbp,r9
  41f78c:	lea    rcx,[r12+r9*4]
  41f790:	lea    rdx,[r8+rcx*1]
  41f794:	add    rdx,0xc
  41f798:	lea    rdi,[r8+r9*8]
  41f79c:	add    rdi,0x1c
  41f7a0:	lea    rcx,[r9+r14*4]
  41f7a4:	add    rcx,r12
  41f7a7:	add    rcx,r8
  41f7aa:	add    rcx,0x3
  41f7ae:	xor    ebx,ebx
  41f7b0:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  41f7b5:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  41f7b9:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  41f7bd:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  41f7c1:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  41f7c6:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  41f7ca:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  41f7ce:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  41f7d2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  41f7d7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  41f7db:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  41f7df:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  41f7e3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  41f7e8:	mov    BYTE PTR [rcx+rbx*1],al
  41f7eb:	mov    eax,DWORD PTR [rdi+rbx*8]
  41f7ee:	mov    DWORD PTR [rdx+rbx*4],eax
  41f7f1:	add    rbx,0x4
  41f7f5:	cmp    rbp,rbx
  41f7f8:	jne    41f7b0 <flatcc_builder_end_union_vector@@Base+0x140>
  41f7fa:	mov    rdi,r13
  41f7fd:	mov    rdx,r14
  41f800:	mov    rcx,r15
  41f803:	vzeroupper 
  41f806:	call   41eae0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41f80b:	mov    r12d,eax
  41f80e:	test   eax,eax
  41f810:	je     41f83b <flatcc_builder_end_union_vector@@Base+0x1cb>
  41f812:	mov    ecx,0x1
  41f817:	mov    r9d,0xffffffff
  41f81d:	mov    rdi,r13
  41f820:	mov    rsi,r15
  41f823:	mov    rdx,r14
  41f826:	mov    r8d,0x1
  41f82c:	call   41e860 <flatcc_builder_create_vector@@Base>
  41f831:	mov    r14d,eax
  41f834:	jmp    41f83e <flatcc_builder_end_union_vector@@Base+0x1ce>
  41f836:	xor    r14d,r14d
  41f839:	jmp    41f8b7 <flatcc_builder_end_union_vector@@Base+0x247>
  41f83b:	xor    r14d,r14d
  41f83e:	shl    r12,0x20
  41f842:	mov    rdi,QWORD PTR [r13+0x18]
  41f846:	mov    edx,DWORD PTR [r13+0x20]
  41f84a:	xor    esi,esi
  41f84c:	call   406080 <memset@plt>
  41f851:	mov    rax,QWORD PTR [r13+0x30]
  41f855:	mov    ecx,DWORD PTR [rax+0x8]
  41f858:	mov    DWORD PTR [r13+0x20],ecx
  41f85c:	mov    ecx,DWORD PTR [rax]
  41f85e:	mov    DWORD PTR [r13+0x28],ecx
  41f862:	mov    edx,DWORD PTR [rax+0x4]
  41f865:	mov    rsi,rcx
  41f868:	add    rsi,QWORD PTR [r13+0x68]
  41f86c:	mov    QWORD PTR [r13+0x18],rsi
  41f870:	mov    esi,DWORD PTR [r13+0x70]
  41f874:	sub    esi,ecx
  41f876:	cmp    esi,edx
  41f878:	cmova  esi,edx
  41f87b:	mov    DWORD PTR [r13+0x24],esi
  41f87f:	movzx  ecx,WORD PTR [r13+0xea]
  41f887:	cmp    WORD PTR [r13+0xe8],cx
  41f88f:	jae    41f899 <flatcc_builder_end_union_vector@@Base+0x229>
  41f891:	mov    WORD PTR [r13+0xe8],cx
  41f899:	or     r14,r12
  41f89c:	movzx  ecx,WORD PTR [rax+0xc]
  41f8a0:	mov    WORD PTR [r13+0xea],cx
  41f8a8:	add    rax,0xffffffffffffffdc
  41f8ac:	mov    QWORD PTR [r13+0x30],rax
  41f8b0:	dec    DWORD PTR [r13+0x104]
  41f8b7:	mov    rax,r14
  41f8ba:	add    rsp,0x8
  41f8be:	pop    rbx
  41f8bf:	pop    r12
  41f8c1:	pop    r13
  41f8c3:	pop    r14
  41f8c5:	pop    r15
  41f8c7:	pop    rbp
  41f8c8:	ret    
  41f8c9:	lea    rax,[r14-0x1]
  41f8cd:	mov    ecx,0x8
  41f8d2:	mul    rcx
  41f8d5:	seto   cl
  41f8d8:	mov    rdx,r8
  41f8db:	not    rdx
  41f8de:	xor    r9d,r9d
  41f8e1:	cmp    rax,rdx
  41f8e4:	ja     41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f8ea:	test   cl,cl
  41f8ec:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f8f2:	lea    rdx,[r8+0x4]
  41f8f6:	mov    rdi,rdx
  41f8f9:	not    rdi
  41f8fc:	cmp    rax,rdi
  41f8ff:	ja     41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f905:	test   cl,cl
  41f907:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f90d:	lea    rcx,[r14+r14*4]
  41f911:	add    rcx,r12
  41f914:	add    rcx,r8
  41f917:	lea    rbx,[r8+r14*8]
  41f91b:	add    rbx,0xfffffffffffffff9
  41f91f:	cmp    rbx,r15
  41f922:	seta   r11b
  41f926:	lea    rdi,[r8+r14*8]
  41f92a:	cmp    r8,rcx
  41f92d:	setb   r10b
  41f931:	cmp    rdi,r15
  41f934:	seta   al
  41f937:	cmp    rdx,rcx
  41f93a:	setb   bpl
  41f93e:	cmp    rsi,rbx
  41f941:	setb   cl
  41f944:	cmp    r8,r15
  41f947:	setb   BYTE PTR [rsp+0x7]
  41f94c:	cmp    rsi,rdi
  41f94f:	setb   bl
  41f952:	cmp    rdx,r15
  41f955:	setb   dl
  41f958:	xor    r9d,r9d
  41f95b:	test   r11b,r10b
  41f95e:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f964:	and    al,bpl
  41f967:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f96d:	and    cl,BYTE PTR [rsp+0x7]
  41f971:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f977:	and    bl,dl
  41f979:	jne    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41f97f:	mov    eax,r14d
  41f982:	and    eax,0x7
  41f985:	test   rax,rax
  41f988:	mov    ecx,0x8
  41f98d:	cmovne rcx,rax
  41f991:	mov    r9,r14
  41f994:	sub    r9,rcx
  41f997:	vmovdqa ymm0,YMMWORD PTR [rip+0x16281]        # 435c20 <flatcc_builder_padding_base@@Base+0x200>
  41f99f:	vmovdqa ymm1,YMMWORD PTR [rip+0x16299]        # 435c40 <flatcc_builder_padding_base@@Base+0x220>
  41f9a7:	xor    eax,eax
  41f9a9:	vmovdqa xmm8,XMMWORD PTR [rip+0x162af]        # 435c60 <flatcc_builder_padding_base@@Base+0x240>
  41f9b1:	vmovdqa xmm9,XMMWORD PTR [rip+0x162b7]        # 435c70 <flatcc_builder_padding_base@@Base+0x250>
  41f9b9:	vpbroadcastq ymm4,QWORD PTR [rip+0x162be]        # 435c80 <flatcc_builder_padding_base@@Base+0x260>
  41f9c2:	vpbroadcastq ymm5,QWORD PTR [rip+0x162bd]        # 435c88 <flatcc_builder_padding_base@@Base+0x268>
  41f9cb:	mov    rdi,r8
  41f9ce:	xchg   ax,ax
  41f9d0:	vmovdqu xmm6,XMMWORD PTR [rdi]
  41f9d4:	vmovdqu xmm7,XMMWORD PTR [rdi+0x10]
  41f9d9:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  41f9de:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  41f9e3:	vpshufb xmm3,xmm3,xmm8
  41f9e8:	vpshufb xmm2,xmm2,xmm8
  41f9ed:	vpunpcklwd xmm2,xmm2,xmm3
  41f9f1:	vpshufb xmm3,xmm7,xmm9
  41f9f6:	vpshufb xmm6,xmm6,xmm9
  41f9fb:	vpunpcklwd xmm3,xmm6,xmm3
  41f9ff:	vpblendd xmm2,xmm3,xmm2,0x2
  41fa05:	vmovq  QWORD PTR [r15+rax*1],xmm2
  41fa0b:	vpsllq ymm2,ymm0,0x3
  41fa10:	vmovq  xmm3,r8
  41fa15:	vpbroadcastq ymm3,xmm3
  41fa1a:	vpaddq ymm2,ymm3,ymm2
  41fa1e:	vpaddq ymm2,ymm2,ymm4
  41fa22:	vpsllq ymm6,ymm1,0x3
  41fa27:	vpaddq ymm3,ymm3,ymm6
  41fa2b:	vpaddq ymm3,ymm3,ymm4
  41fa2f:	vpcmpeqd xmm6,xmm6,xmm6
  41fa33:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  41fa3d:	vpcmpeqd xmm3,xmm3,xmm3
  41fa41:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm3
  41fa4b:	vmovdqu XMMWORD PTR [rsi+rax*4+0x10],xmm6
  41fa51:	vmovdqu XMMWORD PTR [rsi+rax*4],xmm7
  41fa56:	add    rax,0x8
  41fa5a:	vpaddq ymm1,ymm1,ymm5
  41fa5e:	vpaddq ymm0,ymm0,ymm5
  41fa62:	add    rdi,0x40
  41fa66:	cmp    r9,rax
  41fa69:	jne    41f9d0 <flatcc_builder_end_union_vector@@Base+0x360>
  41fa6f:	jmp    41f727 <flatcc_builder_end_union_vector@@Base+0xb7>
  41fa74:	lea    rdi,[rip+0x16e63]        # 4368de <flatcc_builder_padding_base@@Base+0xebe>
  41fa7b:	lea    rsi,[rip+0x16220]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fa82:	lea    rcx,[rip+0x16e87]        # 436910 <flatcc_builder_padding_base@@Base+0xef0>
  41fa89:	mov    edx,0x651
  41fa8e:	call   406070 <__assert_fail@plt>
  41fa93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa9d:	nop    DWORD PTR [rax]

000000000041faa0 <flatcc_builder_union_vector_count@@Base>:
  41faa0:	mov    rax,QWORD PTR [rdi+0x30]
  41faa4:	mov    eax,DWORD PTR [rax+0x14]
  41faa7:	ret    
  41faa8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fab0 <flatcc_builder_union_vector_edit@@Base>:
  41fab0:	mov    rax,QWORD PTR [rdi+0x18]
  41fab4:	ret    
  41fab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fabf:	nop

000000000041fac0 <flatcc_builder_extend_union_vector@@Base>:
  41fac0:	push   r14
  41fac2:	push   rbx
  41fac3:	push   rax
  41fac4:	mov    rax,QWORD PTR [rdi+0x30]
  41fac8:	mov    ecx,DWORD PTR [rax+0x14]
  41facb:	add    ecx,esi
  41facd:	jb     41fb54 <flatcc_builder_extend_union_vector@@Base+0x94>
  41fad3:	cmp    ecx,0x20000000
  41fad9:	jae    41fb54 <flatcc_builder_extend_union_vector@@Base+0x94>
  41fadb:	mov    rbx,rdi
  41fade:	mov    DWORD PTR [rax+0x14],ecx
  41fae1:	mov    r14d,DWORD PTR [rdi+0x20]
  41fae5:	lea    eax,[r14+rsi*8]
  41fae9:	mov    DWORD PTR [rdi+0x20],eax
  41faec:	cmp    eax,DWORD PTR [rdi+0x24]
  41faef:	jae    41faf7 <flatcc_builder_extend_union_vector@@Base+0x37>
  41faf1:	mov    rax,QWORD PTR [rbx+0x18]
  41faf5:	jmp    41fb49 <flatcc_builder_extend_union_vector@@Base+0x89>
  41faf7:	inc    eax
  41faf9:	lea    rsi,[rbx+0x68]
  41fafd:	mov    rdi,QWORD PTR [rbx+0x40]
  41fb01:	mov    edx,DWORD PTR [rbx+0x28]
  41fb04:	add    rdx,rax
  41fb07:	mov    ecx,0x1
  41fb0c:	mov    r8d,0x1
  41fb12:	call   QWORD PTR [rbx+0x50]
  41fb15:	test   eax,eax
  41fb17:	je     41fb1d <flatcc_builder_extend_union_vector@@Base+0x5d>
  41fb19:	xor    eax,eax
  41fb1b:	jmp    41fb4c <flatcc_builder_extend_union_vector@@Base+0x8c>
  41fb1d:	mov    ecx,DWORD PTR [rbx+0x28]
  41fb20:	mov    rax,rcx
  41fb23:	add    rax,QWORD PTR [rbx+0x68]
  41fb27:	mov    QWORD PTR [rbx+0x18],rax
  41fb2b:	mov    edx,DWORD PTR [rbx+0x70]
  41fb2e:	sub    edx,ecx
  41fb30:	cmp    edx,0xfffffffc
  41fb33:	mov    ecx,0xfffffffc
  41fb38:	cmovb  ecx,edx
  41fb3b:	mov    DWORD PTR [rbx+0x24],ecx
  41fb3e:	mov    rcx,QWORD PTR [rbx+0x30]
  41fb42:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41fb49:	add    rax,r14
  41fb4c:	add    rsp,0x8
  41fb50:	pop    rbx
  41fb51:	pop    r14
  41fb53:	ret    
  41fb54:	lea    rdi,[rip+0x17210]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41fb5b:	lea    rsi,[rip+0x16140]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fb62:	lea    rcx,[rip+0x1721d]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41fb69:	mov    edx,0x37c
  41fb6e:	call   406070 <__assert_fail@plt>
  41fb73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb7d:	nop    DWORD PTR [rax]

000000000041fb80 <flatcc_builder_truncate_union_vector@@Base>:
  41fb80:	push   rax
  41fb81:	mov    rax,QWORD PTR [rdi+0x30]
  41fb85:	cmp    WORD PTR [rax+0xe],0x7
  41fb8a:	jne    41fbbb <flatcc_builder_truncate_union_vector@@Base+0x3b>
  41fb8c:	mov    rdx,rsi
  41fb8f:	mov    ecx,DWORD PTR [rax+0x14]
  41fb92:	sub    ecx,edx
  41fb94:	jb     41fbda <flatcc_builder_truncate_union_vector@@Base+0x5a>
  41fb96:	mov    DWORD PTR [rax+0x14],ecx
  41fb99:	mov    rax,QWORD PTR [rdi+0x30]
  41fb9d:	imul   edx,DWORD PTR [rax+0x10]
  41fba1:	mov    eax,DWORD PTR [rdi+0x20]
  41fba4:	sub    eax,edx
  41fba6:	mov    DWORD PTR [rdi+0x20],eax
  41fba9:	add    rax,QWORD PTR [rdi+0x18]
  41fbad:	mov    rdi,rax
  41fbb0:	xor    esi,esi
  41fbb2:	call   406080 <memset@plt>
  41fbb7:	xor    eax,eax
  41fbb9:	pop    rcx
  41fbba:	ret    
  41fbbb:	lea    rdi,[rip+0x16d1c]        # 4368de <flatcc_builder_padding_base@@Base+0xebe>
  41fbc2:	lea    rsi,[rip+0x160d9]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fbc9:	lea    rcx,[rip+0x16d93]        # 436963 <flatcc_builder_padding_base@@Base+0xf43>
  41fbd0:	mov    edx,0x681
  41fbd5:	call   406070 <__assert_fail@plt>
  41fbda:	lea    rdi,[rip+0x16761]        # 436342 <flatcc_builder_padding_base@@Base+0x922>
  41fbe1:	lea    rsi,[rip+0x160ba]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fbe8:	lea    rcx,[rip+0x16d74]        # 436963 <flatcc_builder_padding_base@@Base+0xf43>
  41fbef:	mov    edx,0x682
  41fbf4:	call   406070 <__assert_fail@plt>
  41fbf9:	nop    DWORD PTR [rax+0x0]

000000000041fc00 <flatcc_builder_union_vector_push@@Base>:
  41fc00:	push   r15
  41fc02:	push   r14
  41fc04:	push   rbx
  41fc05:	mov    rax,QWORD PTR [rdi+0x30]
  41fc09:	cmp    WORD PTR [rax+0xe],0x7
  41fc0e:	jne    41fca7 <flatcc_builder_union_vector_push@@Base+0xa7>
  41fc14:	mov    ecx,DWORD PTR [rax+0x14]
  41fc17:	cmp    ecx,0x1fffffff
  41fc1d:	je     41fc69 <flatcc_builder_union_vector_push@@Base+0x69>
  41fc1f:	mov    r14,rsi
  41fc22:	mov    rbx,rdi
  41fc25:	inc    ecx
  41fc27:	mov    DWORD PTR [rax+0x14],ecx
  41fc2a:	mov    r15d,DWORD PTR [rdi+0x20]
  41fc2e:	lea    eax,[r15+0x8]
  41fc32:	mov    DWORD PTR [rdi+0x20],eax
  41fc35:	cmp    eax,DWORD PTR [rdi+0x24]
  41fc38:	jae    41fc45 <flatcc_builder_union_vector_push@@Base+0x45>
  41fc3a:	mov    rax,QWORD PTR [rbx+0x18]
  41fc3e:	add    rax,r15
  41fc41:	jne    41fc9e <flatcc_builder_union_vector_push@@Base+0x9e>
  41fc43:	jmp    41fc69 <flatcc_builder_union_vector_push@@Base+0x69>
  41fc45:	lea    eax,[r15+0x9]
  41fc49:	lea    rsi,[rbx+0x68]
  41fc4d:	mov    rdi,QWORD PTR [rbx+0x40]
  41fc51:	mov    edx,DWORD PTR [rbx+0x28]
  41fc54:	add    rdx,rax
  41fc57:	mov    ecx,0x1
  41fc5c:	mov    r8d,0x1
  41fc62:	call   QWORD PTR [rbx+0x50]
  41fc65:	test   eax,eax
  41fc67:	je     41fc6d <flatcc_builder_union_vector_push@@Base+0x6d>
  41fc69:	xor    eax,eax
  41fc6b:	jmp    41fca1 <flatcc_builder_union_vector_push@@Base+0xa1>
  41fc6d:	mov    ecx,DWORD PTR [rbx+0x28]
  41fc70:	mov    rax,rcx
  41fc73:	add    rax,QWORD PTR [rbx+0x68]
  41fc77:	mov    QWORD PTR [rbx+0x18],rax
  41fc7b:	mov    edx,DWORD PTR [rbx+0x70]
  41fc7e:	sub    edx,ecx
  41fc80:	cmp    edx,0xfffffffc
  41fc83:	mov    ecx,0xfffffffc
  41fc88:	cmovb  ecx,edx
  41fc8b:	mov    DWORD PTR [rbx+0x24],ecx
  41fc8e:	mov    rcx,QWORD PTR [rbx+0x30]
  41fc92:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41fc99:	add    rax,r15
  41fc9c:	je     41fc69 <flatcc_builder_union_vector_push@@Base+0x69>
  41fc9e:	mov    QWORD PTR [rax],r14
  41fca1:	pop    rbx
  41fca2:	pop    r14
  41fca4:	pop    r15
  41fca6:	ret    
  41fca7:	lea    rdi,[rip+0x16c30]        # 4368de <flatcc_builder_padding_base@@Base+0xebe>
  41fcae:	lea    rsi,[rip+0x15fed]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fcb5:	lea    rcx,[rip+0x16cec]        # 4369a8 <flatcc_builder_padding_base@@Base+0xf88>
  41fcbc:	mov    edx,0x68d
  41fcc1:	call   406070 <__assert_fail@plt>
  41fcc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041fcd0 <flatcc_builder_append_union_vector@@Base>:
  41fcd0:	push   r15
  41fcd2:	push   r14
  41fcd4:	push   r13
  41fcd6:	push   r12
  41fcd8:	push   rbx
  41fcd9:	mov    rax,QWORD PTR [rdi+0x30]
  41fcdd:	cmp    WORD PTR [rax+0xe],0x7
  41fce2:	jne    41fdbe <flatcc_builder_append_union_vector@@Base+0xee>
  41fce8:	mov    r15,rdx
  41fceb:	mov    ecx,DWORD PTR [rax+0x14]
  41fcee:	add    ecx,r15d
  41fcf1:	jb     41fd9f <flatcc_builder_append_union_vector@@Base+0xcf>
  41fcf7:	cmp    ecx,0x20000000
  41fcfd:	jae    41fd9f <flatcc_builder_append_union_vector@@Base+0xcf>
  41fd03:	mov    r14,rsi
  41fd06:	mov    rbx,rdi
  41fd09:	mov    DWORD PTR [rax+0x14],ecx
  41fd0c:	mov    r13d,DWORD PTR [rdi+0x20]
  41fd10:	lea    eax,[r13+r15*8+0x0]
  41fd15:	mov    DWORD PTR [rdi+0x20],eax
  41fd18:	cmp    eax,DWORD PTR [rdi+0x24]
  41fd1b:	jae    41fd28 <flatcc_builder_append_union_vector@@Base+0x58>
  41fd1d:	mov    r12,QWORD PTR [rbx+0x18]
  41fd21:	add    r12,r13
  41fd24:	jne    41fd80 <flatcc_builder_append_union_vector@@Base+0xb0>
  41fd26:	jmp    41fd4a <flatcc_builder_append_union_vector@@Base+0x7a>
  41fd28:	inc    eax
  41fd2a:	lea    rsi,[rbx+0x68]
  41fd2e:	mov    rdi,QWORD PTR [rbx+0x40]
  41fd32:	mov    edx,DWORD PTR [rbx+0x28]
  41fd35:	add    rdx,rax
  41fd38:	mov    ecx,0x1
  41fd3d:	mov    r8d,0x1
  41fd43:	call   QWORD PTR [rbx+0x50]
  41fd46:	test   eax,eax
  41fd48:	je     41fd4f <flatcc_builder_append_union_vector@@Base+0x7f>
  41fd4a:	xor    r12d,r12d
  41fd4d:	jmp    41fd92 <flatcc_builder_append_union_vector@@Base+0xc2>
  41fd4f:	mov    eax,DWORD PTR [rbx+0x28]
  41fd52:	mov    r12,rax
  41fd55:	add    r12,QWORD PTR [rbx+0x68]
  41fd59:	mov    QWORD PTR [rbx+0x18],r12
  41fd5d:	mov    ecx,DWORD PTR [rbx+0x70]
  41fd60:	sub    ecx,eax
  41fd62:	cmp    ecx,0xfffffffc
  41fd65:	mov    eax,0xfffffffc
  41fd6a:	cmovb  eax,ecx
  41fd6d:	mov    DWORD PTR [rbx+0x24],eax
  41fd70:	mov    rax,QWORD PTR [rbx+0x30]
  41fd74:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41fd7b:	add    r12,r13
  41fd7e:	je     41fd4a <flatcc_builder_append_union_vector@@Base+0x7a>
  41fd80:	shl    r15d,0x3
  41fd84:	mov    edx,r15d
  41fd87:	mov    rdi,r12
  41fd8a:	mov    rsi,r14
  41fd8d:	call   4060d0 <memcpy@plt>
  41fd92:	mov    rax,r12
  41fd95:	pop    rbx
  41fd96:	pop    r12
  41fd98:	pop    r13
  41fd9a:	pop    r14
  41fd9c:	pop    r15
  41fd9e:	ret    
  41fd9f:	lea    rdi,[rip+0x16fc5]        # 436d6b <flatcc_builder_padding_base@@Base+0x134b>
  41fda6:	lea    rsi,[rip+0x15ef5]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fdad:	lea    rcx,[rip+0x16fd2]        # 436d86 <flatcc_builder_padding_base@@Base+0x1366>
  41fdb4:	mov    edx,0x37c
  41fdb9:	call   406070 <__assert_fail@plt>
  41fdbe:	lea    rdi,[rip+0x16b19]        # 4368de <flatcc_builder_padding_base@@Base+0xebe>
  41fdc5:	lea    rsi,[rip+0x15ed6]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fdcc:	lea    rcx,[rip+0x16c42]        # 436a15 <flatcc_builder_padding_base@@Base+0xff5>
  41fdd3:	mov    edx,0x69c
  41fdd8:	call   406070 <__assert_fail@plt>
  41fddd:	nop    DWORD PTR [rax]

000000000041fde0 <flatcc_builder_create_string@@Base>:
  41fde0:	push   rbp
  41fde1:	push   rbx
  41fde2:	sub    rsp,0x98
  41fde9:	xor    ebp,ebp
  41fdeb:	mov    rax,rdx
  41fdee:	shr    rax,0x20
  41fdf2:	jne    41fec6 <flatcc_builder_create_string@@Base+0xe6>
  41fdf8:	mov    rbx,rdi
  41fdfb:	mov    DWORD PTR [rsp+0x4],edx
  41fdff:	mov    ebp,DWORD PTR [rdi+0xf0]
  41fe05:	mov    eax,edx
  41fe07:	not    eax
  41fe09:	add    eax,ebp
  41fe0b:	and    eax,0x3
  41fe0e:	inc    eax
  41fe10:	mov    QWORD PTR [rsp+0x8],0x4
  41fe19:	lea    rcx,[rsp+0x4]
  41fe1e:	mov    QWORD PTR [rsp+0x18],rcx
  41fe23:	mov    QWORD PTR [rsp+0x20],0x4
  41fe2c:	mov    DWORD PTR [rsp+0x10],0x1
  41fe34:	test   rdx,rdx
  41fe37:	je     41fe5b <flatcc_builder_create_string@@Base+0x7b>
  41fe39:	lea    rcx,[rdx+0x4]
  41fe3d:	mov    QWORD PTR [rsp+0x8],rcx
  41fe42:	mov    QWORD PTR [rsp+0x28],rsi
  41fe47:	mov    QWORD PTR [rsp+0x30],rdx
  41fe4c:	mov    DWORD PTR [rsp+0x10],0x2
  41fe54:	mov    edx,0x2
  41fe59:	jmp    41fe65 <flatcc_builder_create_string@@Base+0x85>
  41fe5b:	mov    ecx,0x4
  41fe60:	mov    edx,0x1
  41fe65:	mov    esi,eax
  41fe67:	lea    r8,[rcx+rsi*1]
  41fe6b:	mov    QWORD PTR [rsp+0x8],r8
  41fe70:	mov    eax,edx
  41fe72:	shl    rax,0x4
  41fe76:	lea    rdi,[rip+0x15ba3]        # 435a20 <flatcc_builder_padding_base@@Base>
  41fe7d:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  41fe82:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  41fe87:	inc    edx
  41fe89:	mov    DWORD PTR [rsp+0x10],edx
  41fe8d:	cmp    r8,0x11
  41fe91:	setb   al
  41fe94:	add    rcx,rsi
  41fe97:	add    rcx,0xfffffffffffffff0
  41fe9b:	shr    rcx,0x20
  41fe9f:	sete   cl
  41fea2:	test   r8d,r8d
  41fea5:	jle    41fed2 <flatcc_builder_create_string@@Base+0xf2>
  41fea7:	or     al,cl
  41fea9:	je     41fed2 <flatcc_builder_create_string@@Base+0xf2>
  41feab:	sub    ebp,r8d
  41feae:	mov    rdi,QWORD PTR [rbx+0x38]
  41feb2:	lea    rsi,[rsp+0x18]
  41feb7:	mov    ecx,ebp
  41feb9:	call   QWORD PTR [rbx+0x48]
  41febc:	test   eax,eax
  41febe:	jne    41fef1 <flatcc_builder_create_string@@Base+0x111>
  41fec0:	mov    DWORD PTR [rbx+0xf0],ebp
  41fec6:	mov    eax,ebp
  41fec8:	add    rsp,0x98
  41fecf:	pop    rbx
  41fed0:	pop    rbp
  41fed1:	ret    
  41fed2:	lea    rdi,[rip+0x16f89]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41fed9:	lea    rsi,[rip+0x15dc2]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41fee0:	lea    rcx,[rip+0x16e3a]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41fee7:	mov    edx,0x287
  41feec:	call   406070 <__assert_fail@plt>
  41fef1:	lea    rdi,[rip+0x16f6a]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  41fef8:	lea    rsi,[rip+0x15da3]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  41feff:	lea    rcx,[rip+0x16e1b]        # 436d21 <flatcc_builder_padding_base@@Base+0x1301>
  41ff06:	mov    edx,0x28b
  41ff0b:	call   406070 <__assert_fail@plt>

000000000041ff10 <flatcc_builder_create_string_str@@Base>:
  41ff10:	push   r14
  41ff12:	push   rbx
  41ff13:	push   rax
  41ff14:	mov    rbx,rsi
  41ff17:	mov    r14,rdi
  41ff1a:	mov    rdi,rsi
  41ff1d:	call   406060 <strlen@plt>
  41ff22:	mov    rdi,r14
  41ff25:	mov    rsi,rbx
  41ff28:	mov    rdx,rax
  41ff2b:	add    rsp,0x8
  41ff2f:	pop    rbx
  41ff30:	pop    r14
  41ff32:	jmp    41fde0 <flatcc_builder_create_string@@Base>
  41ff37:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ff40 <flatcc_builder_create_string_strn@@Base>:
  41ff40:	push   r15
  41ff42:	push   r14
  41ff44:	push   rbx
  41ff45:	mov    rbx,rdx
  41ff48:	mov    r14,rsi
  41ff4b:	mov    r15,rdi
  41ff4e:	mov    rdi,rsi
  41ff51:	xor    esi,esi
  41ff53:	call   4060a0 <memchr@plt>
  41ff58:	mov    rcx,rax
  41ff5b:	sub    rcx,r14
  41ff5e:	test   rax,rax
  41ff61:	cmovne rbx,rcx
  41ff65:	mov    rdi,r15
  41ff68:	mov    rsi,r14
  41ff6b:	mov    rdx,rbx
  41ff6e:	pop    rbx
  41ff6f:	pop    r14
  41ff71:	pop    r15
  41ff73:	jmp    41fde0 <flatcc_builder_create_string@@Base>
  41ff78:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ff80 <flatcc_builder_end_string@@Base>:
  41ff80:	push   rbp
  41ff81:	push   rbx
  41ff82:	push   rax
  41ff83:	mov    rax,QWORD PTR [rdi+0x30]
  41ff87:	cmp    WORD PTR [rax+0xe],0x6
  41ff8c:	jne    420024 <flatcc_builder_end_string@@Base+0xa4>
  41ff92:	mov    rbx,rdi
  41ff95:	mov    edx,DWORD PTR [rax+0x14]
  41ff98:	cmp    edx,DWORD PTR [rdi+0x20]
  41ff9b:	jne    420043 <flatcc_builder_end_string@@Base+0xc3>
  41ffa1:	mov    rsi,QWORD PTR [rbx+0x18]
  41ffa5:	mov    rdi,rbx
  41ffa8:	call   41fde0 <flatcc_builder_create_string@@Base>
  41ffad:	mov    ebp,eax
  41ffaf:	test   eax,eax
  41ffb1:	je     42001b <flatcc_builder_end_string@@Base+0x9b>
  41ffb3:	mov    rdi,QWORD PTR [rbx+0x18]
  41ffb7:	mov    edx,DWORD PTR [rbx+0x20]
  41ffba:	xor    esi,esi
  41ffbc:	call   406080 <memset@plt>
  41ffc1:	mov    rax,QWORD PTR [rbx+0x30]
  41ffc5:	mov    ecx,DWORD PTR [rax+0x8]
  41ffc8:	mov    DWORD PTR [rbx+0x20],ecx
  41ffcb:	mov    ecx,DWORD PTR [rax]
  41ffcd:	mov    DWORD PTR [rbx+0x28],ecx
  41ffd0:	mov    edx,DWORD PTR [rax+0x4]
  41ffd3:	mov    rsi,rcx
  41ffd6:	add    rsi,QWORD PTR [rbx+0x68]
  41ffda:	mov    QWORD PTR [rbx+0x18],rsi
  41ffde:	mov    esi,DWORD PTR [rbx+0x70]
  41ffe1:	sub    esi,ecx
  41ffe3:	cmp    esi,edx
  41ffe5:	cmova  esi,edx
  41ffe8:	mov    DWORD PTR [rbx+0x24],esi
  41ffeb:	movzx  ecx,WORD PTR [rbx+0xea]
  41fff2:	cmp    WORD PTR [rbx+0xe8],cx
  41fff9:	jae    420002 <flatcc_builder_end_string@@Base+0x82>
  41fffb:	mov    WORD PTR [rbx+0xe8],cx
  420002:	movzx  ecx,WORD PTR [rax+0xc]
  420006:	mov    WORD PTR [rbx+0xea],cx
  42000d:	add    rax,0xffffffffffffffdc
  420011:	mov    QWORD PTR [rbx+0x30],rax
  420015:	dec    DWORD PTR [rbx+0x104]
  42001b:	mov    eax,ebp
  42001d:	add    rsp,0x8
  420021:	pop    rbx
  420022:	pop    rbp
  420023:	ret    
  420024:	lea    rdi,[rip+0x161b6]        # 4361e1 <flatcc_builder_padding_base@@Base+0x7c1>
  42002b:	lea    rsi,[rip+0x15c70]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  420032:	lea    rcx,[rip+0x16a5b]        # 436a94 <flatcc_builder_padding_base@@Base+0x1074>
  420039:	mov    edx,0x6c4
  42003e:	call   406070 <__assert_fail@plt>
  420043:	lea    rdi,[rip+0x16a8d]        # 436ad7 <flatcc_builder_padding_base@@Base+0x10b7>
  42004a:	lea    rsi,[rip+0x15c51]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  420051:	lea    rcx,[rip+0x16a3c]        # 436a94 <flatcc_builder_padding_base@@Base+0x1074>
  420058:	mov    edx,0x6c5
  42005d:	call   406070 <__assert_fail@plt>
  420062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42006c:	nop    DWORD PTR [rax+0x0]

0000000000420070 <flatcc_builder_string_edit@@Base>:
  420070:	mov    rax,QWORD PTR [rdi+0x18]
  420074:	ret    
  420075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42007f:	nop

0000000000420080 <flatcc_builder_string_len@@Base>:
  420080:	mov    rax,QWORD PTR [rdi+0x30]
  420084:	mov    eax,DWORD PTR [rax+0x14]
  420087:	ret    
  420088:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420090 <flatcc_builder_table_edit@@Base>:
  420090:	push   rax
  420091:	mov    rax,QWORD PTR [rdi+0x30]
  420095:	cmp    WORD PTR [rax+0xe],0x3
  42009a:	jne    4200a8 <flatcc_builder_table_edit@@Base+0x18>
  42009c:	mov    eax,DWORD PTR [rdi+0x20]
  42009f:	add    rax,QWORD PTR [rdi+0x18]
  4200a3:	sub    rax,rsi
  4200a6:	pop    rcx
  4200a7:	ret    
  4200a8:	lea    rdi,[rip+0x16422]        # 4364d1 <flatcc_builder_padding_base@@Base+0xab1>
  4200af:	lea    rsi,[rip+0x15bec]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  4200b6:	lea    rcx,[rip+0x16acc]        # 436b89 <flatcc_builder_padding_base@@Base+0x1169>
  4200bd:	mov    edx,0x702
  4200c2:	call   406070 <__assert_fail@plt>
  4200c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004200d0 <flatcc_builder_table_add_copy@@Base>:
  4200d0:	push   r15
  4200d2:	push   r14
  4200d4:	push   rbx
  4200d5:	mov    r15,rcx
  4200d8:	mov    r14,rdx
  4200db:	mov    rdx,rcx
  4200de:	mov    ecx,r8d
  4200e1:	call   41f040 <flatcc_builder_table_add@@Base>
  4200e6:	mov    rbx,rax
  4200e9:	test   rax,rax
  4200ec:	je     4200fc <flatcc_builder_table_add_copy@@Base+0x2c>
  4200ee:	mov    rdi,rbx
  4200f1:	mov    rsi,r14
  4200f4:	mov    rdx,r15
  4200f7:	call   4060d0 <memcpy@plt>
  4200fc:	mov    rax,rbx
  4200ff:	pop    rbx
  420100:	pop    r14
  420102:	pop    r15
  420104:	ret    
  420105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42010f:	nop

0000000000420110 <flatcc_builder_push_buffer_alignment@@Base>:
  420110:	movzx  eax,WORD PTR [rdi+0xe8]
  420117:	mov    WORD PTR [rdi+0xe8],0x4
  420120:	ret    
  420121:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42012b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420130 <flatcc_builder_pop_buffer_alignment@@Base>:
  420130:	cmp    WORD PTR [rdi+0xe8],si
  420137:	jae    420140 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  420139:	mov    WORD PTR [rdi+0xe8],si
  420140:	ret    
  420141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42014b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420150 <flatcc_builder_get_buffer_alignment@@Base>:
  420150:	movzx  eax,WORD PTR [rdi+0xe8]
  420157:	ret    
  420158:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420160 <flatcc_builder_set_vtable_clustering@@Base>:
  420160:	xor    eax,eax
  420162:	test   esi,esi
  420164:	sete   al
  420167:	mov    DWORD PTR [rdi+0x124],eax
  42016d:	ret    
  42016e:	xchg   ax,ax

0000000000420170 <flatcc_builder_set_block_align@@Base>:
  420170:	mov    WORD PTR [rdi+0xec],si
  420177:	ret    
  420178:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420180 <flatcc_builder_get_level@@Base>:
  420180:	mov    eax,DWORD PTR [rdi+0x104]
  420186:	ret    
  420187:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420190 <flatcc_builder_set_max_level@@Base>:
  420190:	mov    DWORD PTR [rdi+0x120],esi
  420196:	cmp    DWORD PTR [rdi+0x108],esi
  42019c:	jge    4201a4 <flatcc_builder_set_max_level@@Base+0x14>
  42019e:	mov    DWORD PTR [rdi+0x108],esi
  4201a4:	ret    
  4201a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201af:	nop

00000000004201b0 <flatcc_builder_get_buffer_size@@Base>:
  4201b0:	movsxd rax,DWORD PTR [rdi+0xf4]
  4201b7:	movsxd rcx,DWORD PTR [rdi+0xf0]
  4201be:	sub    rax,rcx
  4201c1:	ret    
  4201c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201cc:	nop    DWORD PTR [rax+0x0]

00000000004201d0 <flatcc_builder_get_buffer_start@@Base>:
  4201d0:	mov    eax,DWORD PTR [rdi+0xf0]
  4201d6:	ret    
  4201d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004201e0 <flatcc_builder_get_buffer_end@@Base>:
  4201e0:	mov    eax,DWORD PTR [rdi+0xf4]
  4201e6:	ret    
  4201e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004201f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  4201f0:	mov    QWORD PTR [rdi+0x118],rsi
  4201f7:	ret    
  4201f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420200 <flatcc_builder_set_identifier@@Base>:
  420200:	test   rsi,rsi
  420203:	jne    42020c <flatcc_builder_set_identifier@@Base+0xc>
  420205:	lea    rsi,[rip+0x15814]        # 435a20 <flatcc_builder_padding_base@@Base>
  42020c:	mov    eax,DWORD PTR [rsi]
  42020e:	mov    DWORD PTR [rdi+0x110],eax
  420214:	ret    
  420215:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42021f:	nop

0000000000420220 <flatcc_builder_get_type@@Base>:
  420220:	mov    rax,QWORD PTR [rdi+0x30]
  420224:	test   rax,rax
  420227:	je     42022e <flatcc_builder_get_type@@Base+0xe>
  420229:	movzx  eax,WORD PTR [rax+0xe]
  42022d:	ret    
  42022e:	xor    eax,eax
  420230:	ret    
  420231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42023b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420240 <flatcc_builder_get_type_at@@Base>:
  420240:	xor    eax,eax
  420242:	test   esi,esi
  420244:	jle    420262 <flatcc_builder_get_type_at@@Base+0x22>
  420246:	mov    ecx,DWORD PTR [rdi+0x104]
  42024c:	cmp    ecx,esi
  42024e:	jl     420262 <flatcc_builder_get_type_at@@Base+0x22>
  420250:	mov    rax,QWORD PTR [rdi+0x30]
  420254:	sub    esi,ecx
  420256:	movsxd rcx,esi
  420259:	lea    rcx,[rcx+rcx*8]
  42025d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  420262:	ret    
  420263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42026d:	nop    DWORD PTR [rax]

0000000000420270 <flatcc_builder_get_direct_buffer@@Base>:
  420270:	cmp    DWORD PTR [rdi+0x128],0x0
  420277:	je     420289 <flatcc_builder_get_direct_buffer@@Base+0x19>
  420279:	mov    rax,QWORD PTR [rdi+0x130]
  420280:	cmp    rax,QWORD PTR [rdi+0x138]
  420287:	je     420298 <flatcc_builder_get_direct_buffer@@Base+0x28>
  420289:	test   rsi,rsi
  42028c:	je     420295 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42028e:	mov    QWORD PTR [rsi],0x0
  420295:	xor    eax,eax
  420297:	ret    
  420298:	test   rsi,rsi
  42029b:	je     4202a7 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42029d:	mov    rax,QWORD PTR [rdi+0x160]
  4202a4:	mov    QWORD PTR [rsi],rax
  4202a7:	mov    rax,QWORD PTR [rdi+0x140]
  4202ae:	ret    
  4202af:	nop

00000000004202b0 <flatcc_builder_copy_buffer@@Base>:
  4202b0:	push   rax
  4202b1:	cmp    DWORD PTR [rdi+0x128],0x0
  4202b8:	je     4202cd <flatcc_builder_copy_buffer@@Base+0x1d>
  4202ba:	add    rdi,0x130
  4202c1:	call   420b30 <flatcc_emitter_copy_buffer@@Base>
  4202c6:	test   rax,rax
  4202c9:	je     4202d1 <flatcc_builder_copy_buffer@@Base+0x21>
  4202cb:	pop    rcx
  4202cc:	ret    
  4202cd:	xor    eax,eax
  4202cf:	pop    rcx
  4202d0:	ret    
  4202d1:	lea    rdi,[rip+0x12965]        # 432c3d <_IO_stdin_used@@Base+0xc3d>
  4202d8:	lea    rsi,[rip+0x159c3]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  4202df:	lea    rcx,[rip+0x1692e]        # 436c14 <flatcc_builder_padding_base@@Base+0x11f4>
  4202e6:	mov    edx,0x786
  4202eb:	call   406070 <__assert_fail@plt>

00000000004202f0 <flatcc_builder_finalize_buffer@@Base>:
  4202f0:	push   r15
  4202f2:	push   r14
  4202f4:	push   rbx
  4202f5:	mov    rbx,rdi
  4202f8:	movsxd r14,DWORD PTR [rdi+0xf4]
  4202ff:	movsxd rax,DWORD PTR [rdi+0xf0]
  420306:	sub    r14,rax
  420309:	test   rsi,rsi
  42030c:	je     420311 <flatcc_builder_finalize_buffer@@Base+0x21>
  42030e:	mov    QWORD PTR [rsi],r14
  420311:	mov    rdi,r14
  420314:	call   4060e0 <malloc@plt>
  420319:	test   rax,rax
  42031c:	je     42034d <flatcc_builder_finalize_buffer@@Base+0x5d>
  42031e:	cmp    DWORD PTR [rbx+0x128],0x0
  420325:	je     42036c <flatcc_builder_finalize_buffer@@Base+0x7c>
  420327:	mov    r15,rax
  42032a:	add    rbx,0x130
  420331:	mov    rdi,rbx
  420334:	mov    rsi,rax
  420337:	mov    rdx,r14
  42033a:	call   420b30 <flatcc_emitter_copy_buffer@@Base>
  42033f:	test   rax,rax
  420342:	je     42038b <flatcc_builder_finalize_buffer@@Base+0x9b>
  420344:	mov    rax,r15
  420347:	pop    rbx
  420348:	pop    r14
  42034a:	pop    r15
  42034c:	ret    
  42034d:	lea    rdi,[rip+0x16b0e]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  420354:	lea    rsi,[rip+0x15947]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  42035b:	lea    rcx,[rip+0x168f7]        # 436c59 <flatcc_builder_padding_base@@Base+0x1239>
  420362:	mov    edx,0x798
  420367:	call   406070 <__assert_fail@plt>
  42036c:	lea    rdi,[rip+0x16aef]        # 436e62 <flatcc_builder_padding_base@@Base+0x1442>
  420373:	lea    rsi,[rip+0x15928]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  42037a:	lea    rcx,[rip+0x168d8]        # 436c59 <flatcc_builder_padding_base@@Base+0x1239>
  420381:	mov    edx,0x79c
  420386:	call   406070 <__assert_fail@plt>
  42038b:	lea    rdi,[rip+0x128ab]        # 432c3d <_IO_stdin_used@@Base+0xc3d>
  420392:	lea    rsi,[rip+0x15909]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  420399:	lea    rcx,[rip+0x16874]        # 436c14 <flatcc_builder_padding_base@@Base+0x11f4>
  4203a0:	mov    edx,0x786
  4203a5:	call   406070 <__assert_fail@plt>
  4203aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004203b0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  4203b0:	push   r15
  4203b2:	push   r14
  4203b4:	push   r12
  4203b6:	push   rbx
  4203b7:	push   rax
  4203b8:	mov    r14,rsi
  4203bb:	mov    r15,rdi
  4203be:	movsxd rax,DWORD PTR [rdi+0xf4]
  4203c5:	movsxd rcx,DWORD PTR [rdi+0xf0]
  4203cc:	sub    rax,rcx
  4203cf:	test   rsi,rsi
  4203d2:	je     4203d7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  4203d4:	mov    QWORD PTR [r14],rax
  4203d7:	movzx  ecx,WORD PTR [r15+0xe8]
  4203df:	add    rax,rcx
  4203e2:	add    rax,0xffffffffffffffff
  4203e6:	mov    rbx,rcx
  4203e9:	neg    rbx
  4203ec:	and    rbx,rax
  4203ef:	cmp    rcx,0x8
  4203f3:	mov    QWORD PTR [rsp],0x0
  4203fb:	mov    esi,0x8
  420400:	cmova  rsi,rcx
  420404:	mov    rdi,rsp
  420407:	mov    rdx,rbx
  42040a:	call   406140 <posix_memalign@plt>
  42040f:	mov    r12,QWORD PTR [rsp]
  420413:	test   eax,eax
  420415:	je     420426 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  420417:	test   r12,r12
  42041a:	je     420426 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42041c:	mov    rdi,r12
  42041f:	call   406030 <free@plt>
  420424:	jmp    42046e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  420426:	test   r12,r12
  420429:	je     42046e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42042b:	cmp    DWORD PTR [r15+0x128],0x0
  420433:	je     42041c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  420435:	add    r15,0x130
  42043c:	mov    rdi,r15
  42043f:	mov    rsi,r12
  420442:	mov    rdx,rbx
  420445:	call   420b30 <flatcc_emitter_copy_buffer@@Base>
  42044a:	test   rax,rax
  42044d:	jne    42047d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42044f:	lea    rdi,[rip+0x127e7]        # 432c3d <_IO_stdin_used@@Base+0xc3d>
  420456:	lea    rsi,[rip+0x15845]        # 435ca2 <flatcc_builder_padding_base@@Base+0x282>
  42045d:	lea    rcx,[rip+0x167b0]        # 436c14 <flatcc_builder_padding_base@@Base+0x11f4>
  420464:	mov    edx,0x786
  420469:	call   406070 <__assert_fail@plt>
  42046e:	test   r14,r14
  420471:	je     42047a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  420473:	mov    QWORD PTR [r14],0x0
  42047a:	xor    r12d,r12d
  42047d:	mov    rax,r12
  420480:	add    rsp,0x8
  420484:	pop    rbx
  420485:	pop    r12
  420487:	pop    r14
  420489:	pop    r15
  42048b:	ret    
  42048c:	nop    DWORD PTR [rax+0x0]

0000000000420490 <flatcc_builder_aligned_alloc@@Base>:
  420490:	push   rax
  420491:	mov    rdx,rsi
  420494:	mov    QWORD PTR [rsp],0x0
  42049c:	cmp    rdi,0x8
  4204a0:	mov    esi,0x8
  4204a5:	cmova  rsi,rdi
  4204a9:	mov    rdi,rsp
  4204ac:	call   406140 <posix_memalign@plt>
  4204b1:	mov    ecx,eax
  4204b3:	mov    rax,QWORD PTR [rsp]
  4204b7:	test   ecx,ecx
  4204b9:	je     4204d2 <flatcc_builder_aligned_alloc@@Base+0x42>
  4204bb:	test   rax,rax
  4204be:	je     4204d2 <flatcc_builder_aligned_alloc@@Base+0x42>
  4204c0:	mov    rdi,rax
  4204c3:	call   406030 <free@plt>
  4204c8:	mov    QWORD PTR [rsp],0x0
  4204d0:	xor    eax,eax
  4204d2:	pop    rcx
  4204d3:	ret    
  4204d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204de:	xchg   ax,ax

00000000004204e0 <flatcc_builder_aligned_free@@Base>:
  4204e0:	jmp    406030 <free@plt>
  4204e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204ef:	nop

00000000004204f0 <flatcc_builder_get_emit_context@@Base>:
  4204f0:	mov    rax,QWORD PTR [rdi+0x38]
  4204f4:	ret    
  4204f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204ff:	nop

0000000000420500 <flatcc_emitter_recycle_page@@Base>:
  420500:	mov    rcx,QWORD PTR [rdi]
  420503:	mov    eax,0xffffffff
  420508:	cmp    rcx,rsi
  42050b:	je     420562 <flatcc_emitter_recycle_page@@Base+0x62>
  42050d:	cmp    QWORD PTR [rdi+0x8],rsi
  420511:	je     420562 <flatcc_emitter_recycle_page@@Base+0x62>
  420513:	mov    rax,QWORD PTR [rsi+0xb80]
  42051a:	mov    rdx,QWORD PTR [rsi+0xb88]
  420521:	mov    QWORD PTR [rax+0xb88],rdx
  420528:	mov    rdx,QWORD PTR [rsi+0xb88]
  42052f:	mov    QWORD PTR [rdx+0xb80],rax
  420536:	mov    rax,QWORD PTR [rcx+0xb88]
  42053d:	mov    QWORD PTR [rsi+0xb88],rax
  420544:	mov    QWORD PTR [rsi+0xb80],rcx
  42054b:	mov    QWORD PTR [rax+0xb80],rsi
  420552:	mov    rax,QWORD PTR [rsi+0xb80]
  420559:	mov    QWORD PTR [rax+0xb88],rsi
  420560:	xor    eax,eax
  420562:	ret    
  420563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42056d:	nop    DWORD PTR [rax]

0000000000420570 <flatcc_emitter_reset@@Base>:
  420570:	push   r14
  420572:	push   rbx
  420573:	push   rax
  420574:	mov    rax,QWORD PTR [rdi]
  420577:	test   rax,rax
  42057a:	je     42065b <flatcc_emitter_reset@@Base+0xeb>
  420580:	mov    rbx,rdi
  420583:	mov    QWORD PTR [rdi+0x8],rax
  420587:	lea    rcx,[rax+0x5c0]
  42058e:	mov    QWORD PTR [rdi+0x10],rcx
  420592:	mov    QWORD PTR [rdi+0x20],rcx
  420596:	mov    QWORD PTR [rdi+0x18],0x5c0
  42059e:	mov    QWORD PTR [rdi+0x28],0x5c0
  4205a6:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  4205b0:	mov    rcx,QWORD PTR [rdi+0x30]
  4205b4:	mov    rdx,QWORD PTR [rdi+0x40]
  4205b8:	test   rdx,rdx
  4205bb:	jne    4205c4 <flatcc_emitter_reset@@Base+0x54>
  4205bd:	mov    QWORD PTR [rbx+0x40],rcx
  4205c1:	mov    rdx,rcx
  4205c4:	lea    rdx,[rdx+rdx*2]
  4205c8:	shr    rdx,0x2
  4205cc:	shr    rcx,0x2
  4205d0:	add    rcx,rdx
  4205d3:	mov    QWORD PTR [rbx+0x40],rcx
  4205d7:	mov    QWORD PTR [rbx+0x30],0x0
  4205df:	add    rcx,rcx
  4205e2:	cmp    rcx,QWORD PTR [rbx+0x38]
  4205e6:	jae    42065b <flatcc_emitter_reset@@Base+0xeb>
  4205e8:	mov    rdi,QWORD PTR [rax+0xb80]
  4205ef:	cmp    rdi,rax
  4205f2:	je     42065b <flatcc_emitter_reset@@Base+0xeb>
  4205f4:	lea    rcx,[rax+0xb80]
  4205fb:	mov    r14,0xfffffffffffff480
  420602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42060c:	nop    DWORD PTR [rax+0x0]
  420610:	mov    rdx,QWORD PTR [rdi+0xb80]
  420617:	mov    QWORD PTR [rcx],rdx
  42061a:	mov    rcx,QWORD PTR [rdi+0xb80]
  420621:	mov    QWORD PTR [rcx+0xb88],rax
  420628:	call   406030 <free@plt>
  42062d:	mov    rax,QWORD PTR [rbx+0x38]
  420631:	add    rax,r14
  420634:	mov    QWORD PTR [rbx+0x38],rax
  420638:	mov    rcx,QWORD PTR [rbx+0x40]
  42063c:	add    rcx,rcx
  42063f:	cmp    rcx,rax
  420642:	jae    42065b <flatcc_emitter_reset@@Base+0xeb>
  420644:	mov    rax,QWORD PTR [rbx+0x8]
  420648:	lea    rcx,[rax+0xb80]
  42064f:	mov    rdi,QWORD PTR [rax+0xb80]
  420656:	cmp    rdi,QWORD PTR [rbx]
  420659:	jne    420610 <flatcc_emitter_reset@@Base+0xa0>
  42065b:	add    rsp,0x8
  42065f:	pop    rbx
  420660:	pop    r14
  420662:	ret    
  420663:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42066d:	nop    DWORD PTR [rax]

0000000000420670 <flatcc_emitter_clear@@Base>:
  420670:	push   r14
  420672:	push   rbx
  420673:	push   rax
  420674:	mov    rbx,QWORD PTR [rdi]
  420677:	test   rbx,rbx
  42067a:	je     4206dc <flatcc_emitter_clear@@Base+0x6c>
  42067c:	mov    r14,rdi
  42067f:	mov    rax,QWORD PTR [rbx+0xb88]
  420686:	mov    QWORD PTR [rax+0xb80],0x0
  420691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42069b:	nop    DWORD PTR [rax+rax*1+0x0]
  4206a0:	mov    rax,QWORD PTR [rbx+0xb80]
  4206a7:	test   rax,rax
  4206aa:	je     4206bd <flatcc_emitter_clear@@Base+0x4d>
  4206ac:	mov    rbx,rax
  4206af:	mov    rdi,QWORD PTR [rax+0xb88]
  4206b6:	call   406030 <free@plt>
  4206bb:	jmp    4206a0 <flatcc_emitter_clear@@Base+0x30>
  4206bd:	mov    rdi,rbx
  4206c0:	call   406030 <free@plt>
  4206c5:	vxorps xmm0,xmm0,xmm0
  4206c9:	vmovups YMMWORD PTR [r14+0x20],ymm0
  4206cf:	vmovups YMMWORD PTR [r14],ymm0
  4206d4:	mov    QWORD PTR [r14+0x40],0x0
  4206dc:	add    rsp,0x8
  4206e0:	pop    rbx
  4206e1:	pop    r14
  4206e3:	vzeroupper 
  4206e6:	ret    
  4206e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004206f0 <flatcc_emitter@@Base>:
  4206f0:	push   rbp
  4206f1:	push   r15
  4206f3:	push   r14
  4206f5:	push   r13
  4206f7:	push   r12
  4206f9:	push   rbx
  4206fa:	push   rax
  4206fb:	mov    r14d,edx
  4206fe:	mov    r12,rsi
  420701:	mov    rbp,rdi
  420704:	add    QWORD PTR [rdi+0x30],r8
  420708:	test   ecx,ecx
  42070a:	js     420885 <flatcc_emitter@@Base+0x195>
  420710:	mov    rdx,QWORD PTR [rbp+0x28]
  420714:	cmp    rdx,r8
  420717:	jae    420a38 <flatcc_emitter@@Base+0x348>
  42071d:	xor    eax,eax
  42071f:	test   r14d,r14d
  420722:	je     420b17 <flatcc_emitter@@Base+0x427>
  420728:	mov    r15,QWORD PTR [r12+0x8]
  42072d:	test   r15,r15
  420730:	je     420870 <flatcc_emitter@@Base+0x180>
  420736:	mov    r13,QWORD PTR [r12]
  42073a:	jmp    420769 <flatcc_emitter@@Base+0x79>
  42073c:	mov    rbx,r15
  42073f:	mov    rdi,QWORD PTR [rbp+0x20]
  420743:	mov    rsi,r13
  420746:	mov    rdx,rbx
  420749:	call   4060d0 <memcpy@plt>
  42074e:	add    QWORD PTR [rbp+0x20],rbx
  420752:	add    r13,rbx
  420755:	mov    rdx,QWORD PTR [rbp+0x28]
  420759:	sub    rdx,rbx
  42075c:	mov    QWORD PTR [rbp+0x28],rdx
  420760:	sub    r15,rbx
  420763:	je     420870 <flatcc_emitter@@Base+0x180>
  420769:	mov    rbx,r15
  42076c:	cmp    r15,rdx
  42076f:	jbe    42073f <flatcc_emitter@@Base+0x4f>
  420771:	mov    rbx,rdx
  420774:	test   rbx,rbx
  420777:	je     4207e1 <flatcc_emitter@@Base+0xf1>
  420779:	jmp    42073f <flatcc_emitter@@Base+0x4f>
  42077b:	nop    DWORD PTR [rax+rax*1+0x0]
  420780:	mov    QWORD PTR [rax+0xb88],rbx
  420787:	mov    rcx,QWORD PTR [rbp+0x0]
  42078b:	mov    QWORD PTR [rax+0xb80],rcx
  420792:	mov    QWORD PTR [rcx+0xb88],rax
  420799:	mov    QWORD PTR [rbx+0xb80],rax
  4207a0:	mov    QWORD PTR [rbp+0x8],rax
  4207a4:	mov    QWORD PTR [rbp+0x20],rax
  4207a8:	mov    QWORD PTR [rbp+0x28],0xb80
  4207b0:	mov    rcx,QWORD PTR [rax+0xb88]
  4207b7:	mov    ecx,DWORD PTR [rcx+0xb90]
  4207bd:	mov    edx,0xb80
  4207c2:	add    ecx,edx
  4207c4:	mov    DWORD PTR [rax+0xb90],ecx
  4207ca:	mov    ebx,0xb80
  4207cf:	cmp    r15,rbx
  4207d2:	jbe    42073c <flatcc_emitter@@Base+0x4c>
  4207d8:	test   rbx,rbx
  4207db:	jne    42073f <flatcc_emitter@@Base+0x4f>
  4207e1:	mov    rbx,QWORD PTR [rbp+0x8]
  4207e5:	test   rbx,rbx
  4207e8:	je     4207f7 <flatcc_emitter@@Base+0x107>
  4207ea:	mov    rax,QWORD PTR [rbx+0xb80]
  4207f1:	cmp    rax,QWORD PTR [rbp+0x0]
  4207f5:	jne    4207a0 <flatcc_emitter@@Base+0xb0>
  4207f7:	mov    edi,0xb98
  4207fc:	call   4060e0 <malloc@plt>
  420801:	test   rax,rax
  420804:	je     420a4a <flatcc_emitter@@Base+0x35a>
  42080a:	add    QWORD PTR [rbp+0x38],0xb80
  420812:	test   rbx,rbx
  420815:	jne    420780 <flatcc_emitter@@Base+0x90>
  42081b:	mov    QWORD PTR [rbp+0x0],rax
  42081f:	mov    QWORD PTR [rbp+0x8],rax
  420823:	mov    QWORD PTR [rax+0xb80],rax
  42082a:	mov    QWORD PTR [rax+0xb88],rax
  420831:	mov    rcx,rax
  420834:	add    rcx,0x5c0
  42083b:	mov    QWORD PTR [rbp+0x10],rcx
  42083f:	mov    QWORD PTR [rbp+0x20],rcx
  420843:	mov    QWORD PTR [rbp+0x18],0x5c0
  42084b:	mov    QWORD PTR [rbp+0x28],0x5c0
  420853:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42085d:	mov    ebx,0x5c0
  420862:	cmp    r15,rbx
  420865:	ja     4207d8 <flatcc_emitter@@Base+0xe8>
  42086b:	jmp    42073c <flatcc_emitter@@Base+0x4c>
  420870:	dec    r14d
  420873:	add    r12,0x10
  420877:	test   r14d,r14d
  42087a:	jne    420728 <flatcc_emitter@@Base+0x38>
  420880:	jmp    420b15 <flatcc_emitter@@Base+0x425>
  420885:	lea    rsi,[rbp+0x18]
  420889:	mov    rdx,QWORD PTR [rbp+0x18]
  42088d:	cmp    rdx,r8
  420890:	jae    420a54 <flatcc_emitter@@Base+0x364>
  420896:	xor    eax,eax
  420898:	test   r14d,r14d
  42089b:	je     420b17 <flatcc_emitter@@Base+0x427>
  4208a1:	mov    QWORD PTR [rsp],rsi
  4208a5:	movsxd rax,r14d
  4208a8:	shl    rax,0x4
  4208ac:	add    r12,rax
  4208af:	mov    edx,0xfffff480
  4208b4:	mov    r15,QWORD PTR [r12-0x8]
  4208b9:	add    r12,0xfffffffffffffff0
  4208bd:	test   r15,r15
  4208c0:	je     420a2a <flatcc_emitter@@Base+0x33a>
  4208c6:	mov    r13,QWORD PTR [r12]
  4208ca:	add    r13,r15
  4208cd:	jmp    420901 <flatcc_emitter@@Base+0x211>
  4208cf:	nop
  4208d0:	mov    rbx,r15
  4208d3:	mov    rdi,QWORD PTR [rbp+0x10]
  4208d7:	sub    rdi,rbx
  4208da:	mov    QWORD PTR [rbp+0x10],rdi
  4208de:	sub    rax,rbx
  4208e1:	mov    QWORD PTR [rbp+0x18],rax
  4208e5:	sub    r13,rbx
  4208e8:	mov    rsi,r13
  4208eb:	mov    rdx,rbx
  4208ee:	call   4060d0 <memcpy@plt>
  4208f3:	mov    edx,0xfffff480
  4208f8:	sub    r15,rbx
  4208fb:	je     420a2a <flatcc_emitter@@Base+0x33a>
  420901:	mov    rax,QWORD PTR [rsp]
  420905:	mov    rax,QWORD PTR [rax]
  420908:	cmp    r15,rax
  42090b:	ja     420958 <flatcc_emitter@@Base+0x268>
  42090d:	jmp    4208d0 <flatcc_emitter@@Base+0x1e0>
  42090f:	nop
  420910:	mov    ecx,DWORD PTR [rbx+0xb90]
  420916:	add    ecx,edx
  420918:	mov    DWORD PTR [rax+0xb90],ecx
  42091e:	mov    QWORD PTR [rbp+0x0],rax
  420922:	lea    rcx,[rax+0xb80]
  420929:	mov    QWORD PTR [rbp+0x10],rcx
  42092d:	mov    QWORD PTR [rbp+0x18],0xb80
  420935:	mov    rcx,QWORD PTR [rax+0xb80]
  42093c:	mov    ecx,DWORD PTR [rcx+0xb90]
  420942:	add    ecx,edx
  420944:	mov    DWORD PTR [rax+0xb90],ecx
  42094a:	mov    eax,0xb80
  42094f:	cmp    r15,rax
  420952:	jbe    4208d0 <flatcc_emitter@@Base+0x1e0>
  420958:	mov    rbx,rax
  42095b:	test   rax,rax
  42095e:	jne    4208d3 <flatcc_emitter@@Base+0x1e3>
  420964:	mov    rbx,QWORD PTR [rbp+0x0]
  420968:	test   rbx,rbx
  42096b:	je     42097a <flatcc_emitter@@Base+0x28a>
  42096d:	mov    rax,QWORD PTR [rbx+0xb88]
  420974:	cmp    rax,QWORD PTR [rbp+0x8]
  420978:	jne    420910 <flatcc_emitter@@Base+0x220>
  42097a:	mov    edi,0xb98
  42097f:	call   4060e0 <malloc@plt>
  420984:	test   rax,rax
  420987:	je     420a4a <flatcc_emitter@@Base+0x35a>
  42098d:	add    QWORD PTR [rbp+0x38],0xb80
  420995:	test   rbx,rbx
  420998:	je     4209d0 <flatcc_emitter@@Base+0x2e0>
  42099a:	mov    rcx,QWORD PTR [rbp+0x8]
  42099e:	mov    QWORD PTR [rax+0xb88],rcx
  4209a5:	mov    QWORD PTR [rax+0xb80],rbx
  4209ac:	mov    QWORD PTR [rbx+0xb88],rax
  4209b3:	mov    QWORD PTR [rcx+0xb80],rax
  4209ba:	mov    QWORD PTR [rbp+0x0],rax
  4209be:	mov    edx,0xfffff480
  4209c3:	jmp    420922 <flatcc_emitter@@Base+0x232>
  4209c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4209d0:	mov    QWORD PTR [rbp+0x0],rax
  4209d4:	mov    QWORD PTR [rbp+0x8],rax
  4209d8:	mov    QWORD PTR [rax+0xb80],rax
  4209df:	mov    QWORD PTR [rax+0xb88],rax
  4209e6:	mov    rcx,rax
  4209e9:	add    rcx,0x5c0
  4209f0:	mov    QWORD PTR [rbp+0x10],rcx
  4209f4:	mov    QWORD PTR [rbp+0x20],rcx
  4209f8:	mov    QWORD PTR [rbp+0x18],0x5c0
  420a00:	mov    QWORD PTR [rbp+0x28],0x5c0
  420a08:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  420a12:	mov    eax,0x5c0
  420a17:	mov    edx,0xfffff480
  420a1c:	cmp    r15,rax
  420a1f:	ja     420958 <flatcc_emitter@@Base+0x268>
  420a25:	jmp    4208d0 <flatcc_emitter@@Base+0x1e0>
  420a2a:	dec    r14d
  420a2d:	jne    4208b4 <flatcc_emitter@@Base+0x1c4>
  420a33:	jmp    420b15 <flatcc_emitter@@Base+0x425>
  420a38:	lea    rsi,[rbp+0x28]
  420a3c:	mov    rbx,QWORD PTR [rbp+0x20]
  420a40:	lea    rcx,[rbx+r8*1]
  420a44:	mov    QWORD PTR [rbp+0x20],rcx
  420a48:	jmp    420a5f <flatcc_emitter@@Base+0x36f>
  420a4a:	mov    eax,0xffffffff
  420a4f:	jmp    420b17 <flatcc_emitter@@Base+0x427>
  420a54:	mov    rbx,QWORD PTR [rbp+0x10]
  420a58:	sub    rbx,r8
  420a5b:	mov    QWORD PTR [rbp+0x10],rbx
  420a5f:	sub    rdx,r8
  420a62:	mov    QWORD PTR [rsi],rdx
  420a65:	xor    eax,eax
  420a67:	test   r14d,r14d
  420a6a:	je     420b17 <flatcc_emitter@@Base+0x427>
  420a70:	lea    r15d,[r14-0x1]
  420a74:	mov    r13d,r14d
  420a77:	and    r13d,0x3
  420a7b:	je     420aa4 <flatcc_emitter@@Base+0x3b4>
  420a7d:	xor    ebp,ebp
  420a7f:	nop
  420a80:	mov    rsi,QWORD PTR [r12]
  420a84:	mov    rdx,QWORD PTR [r12+0x8]
  420a89:	mov    rdi,rbx
  420a8c:	call   4060d0 <memcpy@plt>
  420a91:	add    rbx,QWORD PTR [r12+0x8]
  420a96:	add    r12,0x10
  420a9a:	inc    ebp
  420a9c:	cmp    r13d,ebp
  420a9f:	jne    420a80 <flatcc_emitter@@Base+0x390>
  420aa1:	sub    r14d,ebp
  420aa4:	cmp    r15d,0x3
  420aa8:	jb     420b15 <flatcc_emitter@@Base+0x425>
  420aaa:	nop    WORD PTR [rax+rax*1+0x0]
  420ab0:	mov    rsi,QWORD PTR [r12]
  420ab4:	mov    rdx,QWORD PTR [r12+0x8]
  420ab9:	mov    rdi,rbx
  420abc:	call   4060d0 <memcpy@plt>
  420ac1:	add    rbx,QWORD PTR [r12+0x8]
  420ac6:	mov    rsi,QWORD PTR [r12+0x10]
  420acb:	mov    rdx,QWORD PTR [r12+0x18]
  420ad0:	mov    rdi,rbx
  420ad3:	call   4060d0 <memcpy@plt>
  420ad8:	add    rbx,QWORD PTR [r12+0x18]
  420add:	mov    rsi,QWORD PTR [r12+0x20]
  420ae2:	mov    rdx,QWORD PTR [r12+0x28]
  420ae7:	mov    rdi,rbx
  420aea:	call   4060d0 <memcpy@plt>
  420aef:	add    rbx,QWORD PTR [r12+0x28]
  420af4:	mov    rsi,QWORD PTR [r12+0x30]
  420af9:	mov    rdx,QWORD PTR [r12+0x38]
  420afe:	mov    rdi,rbx
  420b01:	call   4060d0 <memcpy@plt>
  420b06:	add    rbx,QWORD PTR [r12+0x38]
  420b0b:	add    r12,0x40
  420b0f:	add    r14d,0xfffffffc
  420b13:	jne    420ab0 <flatcc_emitter@@Base+0x3c0>
  420b15:	xor    eax,eax
  420b17:	add    rsp,0x8
  420b1b:	pop    rbx
  420b1c:	pop    r12
  420b1e:	pop    r13
  420b20:	pop    r14
  420b22:	pop    r15
  420b24:	pop    rbp
  420b25:	ret    
  420b26:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420b30 <flatcc_emitter_copy_buffer@@Base>:
  420b30:	push   r15
  420b32:	push   r14
  420b34:	push   r13
  420b36:	push   r12
  420b38:	push   rbx
  420b39:	mov    rax,rdx
  420b3c:	mov    rdx,QWORD PTR [rdi+0x30]
  420b40:	cmp    rdx,rax
  420b43:	ja     420bdb <flatcc_emitter_copy_buffer@@Base+0xab>
  420b49:	mov    r14,rdi
  420b4c:	mov    rax,QWORD PTR [rdi]
  420b4f:	test   rax,rax
  420b52:	je     420bdb <flatcc_emitter_copy_buffer@@Base+0xab>
  420b58:	mov    r12,rsi
  420b5b:	cmp    rax,QWORD PTR [r14+0x8]
  420b5f:	je     420beb <flatcc_emitter_copy_buffer@@Base+0xbb>
  420b65:	mov    r15d,0xb80
  420b6b:	mov    r13d,0xb80
  420b71:	sub    r13,QWORD PTR [r14+0x18]
  420b75:	mov    rsi,QWORD PTR [r14+0x10]
  420b79:	mov    rdi,r12
  420b7c:	mov    rdx,r13
  420b7f:	call   4060d0 <memcpy@plt>
  420b84:	add    r13,r12
  420b87:	mov    rax,QWORD PTR [r14]
  420b8a:	mov    rbx,QWORD PTR [rax+0xb80]
  420b91:	cmp    rbx,QWORD PTR [r14+0x8]
  420b95:	je     420bc4 <flatcc_emitter_copy_buffer@@Base+0x94>
  420b97:	nop    WORD PTR [rax+rax*1+0x0]
  420ba0:	mov    edx,0xb80
  420ba5:	mov    rdi,r13
  420ba8:	mov    rsi,rbx
  420bab:	call   4060d0 <memcpy@plt>
  420bb0:	add    r13,0xb80
  420bb7:	mov    rbx,QWORD PTR [rbx+0xb80]
  420bbe:	cmp    rbx,QWORD PTR [r14+0x8]
  420bc2:	jne    420ba0 <flatcc_emitter_copy_buffer@@Base+0x70>
  420bc4:	sub    r15,QWORD PTR [r14+0x28]
  420bc8:	mov    rdi,r13
  420bcb:	mov    rsi,rbx
  420bce:	mov    rdx,r15
  420bd1:	call   4060d0 <memcpy@plt>
  420bd6:	mov    r12,r13
  420bd9:	jmp    420bde <flatcc_emitter_copy_buffer@@Base+0xae>
  420bdb:	xor    r12d,r12d
  420bde:	mov    rax,r12
  420be1:	pop    rbx
  420be2:	pop    r12
  420be4:	pop    r13
  420be6:	pop    r14
  420be8:	pop    r15
  420bea:	ret    
  420beb:	mov    rsi,QWORD PTR [r14+0x10]
  420bef:	mov    rdi,r12
  420bf2:	call   4060d0 <memcpy@plt>
  420bf7:	jmp    420bde <flatcc_emitter_copy_buffer@@Base+0xae>
  420bf9:	nop    DWORD PTR [rax+0x0]

0000000000420c00 <flatcc_verify_error_string@@Base>:
  420c00:	cmp    edi,0x24
  420c03:	ja     420c14 <flatcc_verify_error_string@@Base+0x14>
  420c05:	movsxd rax,edi
  420c08:	lea    rcx,[rip+0x1ef91]        # 43fba0 <flatcc_builder_padding_base@@Base+0xa180>
  420c0f:	mov    rax,QWORD PTR [rcx+rax*8]
  420c13:	ret    
  420c14:	lea    rax,[rip+0x16705]        # 437320 <flatcc_builder_padding_base@@Base+0x1900>
  420c1b:	ret    
  420c1c:	nop    DWORD PTR [rax+0x0]

0000000000420c20 <flatcc_verify_field@@Base>:
  420c20:	lea    esi,[rsi+rsi*1]
  420c23:	add    esi,0x4
  420c26:	xor    eax,eax
  420c28:	cmp    si,WORD PTR [rdi+0x1e]
  420c2c:	jae    420c71 <flatcc_verify_field@@Base+0x51>
  420c2e:	mov    r8,QWORD PTR [rdi+0x10]
  420c32:	movzx  esi,si
  420c35:	movzx  esi,WORD PTR [r8+rsi*1]
  420c3a:	test   esi,esi
  420c3c:	je     420c71 <flatcc_verify_field@@Base+0x51>
  420c3e:	add    edx,esi
  420c40:	movzx  r8d,WORD PTR [rdi+0x1c]
  420c45:	mov    eax,0xd
  420c4a:	cmp    edx,r8d
  420c4d:	ja     420c71 <flatcc_verify_field@@Base+0x51>
  420c4f:	add    esi,DWORD PTR [rdi]
  420c51:	mov    edx,DWORD PTR [rdi+0x18]
  420c54:	add    edx,esi
  420c56:	movzx  ecx,cx
  420c59:	dec    ecx
  420c5b:	mov    eax,0x0
  420c60:	test   edx,ecx
  420c62:	je     420c71 <flatcc_verify_field@@Base+0x51>
  420c64:	add    esi,DWORD PTR [rdi+0x18]
  420c67:	and    esi,ecx
  420c69:	mov    eax,0xc
  420c6e:	cmove  eax,esi
  420c71:	ret    
  420c72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c7c:	nop    DWORD PTR [rax+0x0]

0000000000420c80 <flatcc_verify_string_field@@Base>:
  420c80:	lea    eax,[rsi+rsi*1]
  420c83:	add    eax,0x4
  420c86:	cmp    ax,WORD PTR [rdi+0x1e]
  420c8a:	jae    420cba <flatcc_verify_string_field@@Base+0x3a>
  420c8c:	mov    rcx,QWORD PTR [rdi+0x10]
  420c90:	movzx  eax,ax
  420c93:	movzx  esi,WORD PTR [rcx+rax*1]
  420c97:	test   esi,esi
  420c99:	je     420cba <flatcc_verify_string_field@@Base+0x3a>
  420c9b:	lea    ecx,[rsi+0x4]
  420c9e:	movzx  edx,WORD PTR [rdi+0x1c]
  420ca2:	mov    eax,0xd
  420ca7:	cmp    ecx,edx
  420ca9:	ja     420cb9 <flatcc_verify_string_field@@Base+0x39>
  420cab:	add    esi,DWORD PTR [rdi+0x18]
  420cae:	mov    eax,0xc
  420cb3:	test   sil,0x3
  420cb7:	je     420cc5 <flatcc_verify_string_field@@Base+0x45>
  420cb9:	ret    
  420cba:	xor    eax,eax
  420cbc:	test   edx,edx
  420cbe:	setne  al
  420cc1:	shl    eax,0x2
  420cc4:	ret    
  420cc5:	test   esi,esi
  420cc7:	je     420d1f <flatcc_verify_string_field@@Base+0x9f>
  420cc9:	mov    rcx,QWORD PTR [rdi]
  420ccc:	mov    eax,esi
  420cce:	mov    edx,DWORD PTR [rcx+rax*1]
  420cd1:	add    edx,esi
  420cd3:	mov    eax,0x11
  420cd8:	cmp    edx,esi
  420cda:	jbe    420cb9 <flatcc_verify_string_field@@Base+0x39>
  420cdc:	mov    r8d,DWORD PTR [rdi+0x8]
  420ce0:	mov    edi,edx
  420ce2:	lea    rsi,[rdi+0x4]
  420ce6:	cmp    rsi,r8
  420ce9:	ja     420cb9 <flatcc_verify_string_field@@Base+0x39>
  420ceb:	mov    esi,edi
  420ced:	and    esi,0x3
  420cf0:	test   rsi,rsi
  420cf3:	jne    420cb9 <flatcc_verify_string_field@@Base+0x39>
  420cf5:	mov    edi,DWORD PTR [rcx+rdi*1]
  420cf8:	add    edx,0x4
  420cfb:	sub    r8d,edx
  420cfe:	lea    esi,[rdi+0x1]
  420d01:	mov    eax,0x8
  420d06:	cmp    r8d,esi
  420d09:	jb     420cb9 <flatcc_verify_string_field@@Base+0x39>
  420d0b:	mov    eax,edx
  420d0d:	add    rcx,rax
  420d10:	xor    edx,edx
  420d12:	cmp    BYTE PTR [rdi+rcx*1],0x0
  420d16:	mov    eax,0x7
  420d1b:	cmove  eax,edx
  420d1e:	ret    
  420d1f:	xor    eax,eax
  420d21:	ret    
  420d22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420d2c:	nop    DWORD PTR [rax+0x0]

0000000000420d30 <flatcc_verify_vector_field@@Base>:
  420d30:	push   rbx
  420d31:	lea    eax,[rsi+rsi*1]
  420d34:	add    eax,0x4
  420d37:	cmp    ax,WORD PTR [rdi+0x1e]
  420d3b:	jae    420d6e <flatcc_verify_vector_field@@Base+0x3e>
  420d3d:	mov    rsi,QWORD PTR [rdi+0x10]
  420d41:	movzx  eax,ax
  420d44:	movzx  esi,WORD PTR [rsi+rax*1]
  420d48:	test   esi,esi
  420d4a:	je     420d6e <flatcc_verify_vector_field@@Base+0x3e>
  420d4c:	lea    r10d,[rsi+0x4]
  420d50:	movzx  edx,WORD PTR [rdi+0x1c]
  420d54:	mov    eax,0xd
  420d59:	cmp    r10d,edx
  420d5c:	ja     420d6c <flatcc_verify_vector_field@@Base+0x3c>
  420d5e:	add    esi,DWORD PTR [rdi+0x18]
  420d61:	mov    eax,0xc
  420d66:	test   sil,0x3
  420d6a:	je     420d7a <flatcc_verify_vector_field@@Base+0x4a>
  420d6c:	pop    rbx
  420d6d:	ret    
  420d6e:	xor    eax,eax
  420d70:	test   edx,edx
  420d72:	setne  al
  420d75:	shl    eax,0x2
  420d78:	pop    rbx
  420d79:	ret    
  420d7a:	test   esi,esi
  420d7c:	je     420df2 <flatcc_verify_vector_field@@Base+0xc2>
  420d7e:	mov    r10,QWORD PTR [rdi]
  420d81:	mov    eax,esi
  420d83:	mov    r11d,DWORD PTR [r10+rax*1]
  420d87:	add    r11d,esi
  420d8a:	cmp    r8w,0x4
  420d8f:	mov    edx,0x4
  420d94:	cmova  edx,r8d
  420d98:	mov    eax,0x10
  420d9d:	cmp    r11d,esi
  420da0:	jbe    420d6c <flatcc_verify_vector_field@@Base+0x3c>
  420da2:	mov    r8d,DWORD PTR [rdi+0x8]
  420da6:	mov    edi,r11d
  420da9:	lea    rsi,[rdi+0x4]
  420dad:	cmp    rsi,r8
  420db0:	ja     420d6c <flatcc_verify_vector_field@@Base+0x3c>
  420db2:	movzx  edx,dx
  420db5:	movabs rbx,0x1ffffffff
  420dbf:	add    rbx,rdx
  420dc2:	or     rbx,0x3
  420dc6:	test   rsi,rbx
  420dc9:	jne    420d6c <flatcc_verify_vector_field@@Base+0x3c>
  420dcb:	mov    edx,DWORD PTR [r10+rdi*1]
  420dcf:	mov    eax,0x19
  420dd4:	cmp    edx,r9d
  420dd7:	ja     420d6c <flatcc_verify_vector_field@@Base+0x3c>
  420dd9:	sub    r8d,r11d
  420ddc:	add    r8d,0xfffffffc
  420de0:	imul   edx,ecx
  420de3:	xor    ecx,ecx
  420de5:	cmp    r8d,edx
  420de8:	mov    eax,0x1a
  420ded:	cmovae eax,ecx
  420df0:	pop    rbx
  420df1:	ret    
  420df2:	xor    eax,eax
  420df4:	pop    rbx
  420df5:	ret    
  420df6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420e00 <flatcc_verify_string_vector_field@@Base>:
  420e00:	push   r14
  420e02:	push   rbx
  420e03:	lea    eax,[rsi+rsi*1]
  420e06:	add    eax,0x4
  420e09:	cmp    ax,WORD PTR [rdi+0x1e]
  420e0d:	jae    420f39 <flatcc_verify_string_vector_field@@Base+0x139>
  420e13:	mov    rcx,QWORD PTR [rdi+0x10]
  420e17:	movzx  eax,ax
  420e1a:	movzx  esi,WORD PTR [rcx+rax*1]
  420e1e:	test   esi,esi
  420e20:	je     420f39 <flatcc_verify_string_vector_field@@Base+0x139>
  420e26:	lea    ecx,[rsi+0x4]
  420e29:	movzx  edx,WORD PTR [rdi+0x1c]
  420e2d:	mov    eax,0xd
  420e32:	cmp    ecx,edx
  420e34:	ja     420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420e3a:	mov    edx,DWORD PTR [rdi+0x18]
  420e3d:	lea    ebx,[rdx+rsi*1]
  420e40:	mov    eax,0xc
  420e45:	test   bl,0x3
  420e48:	jne    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420e4e:	test   ebx,ebx
  420e50:	je     420f35 <flatcc_verify_string_vector_field@@Base+0x135>
  420e56:	mov    r10,QWORD PTR [rdi]
  420e59:	mov    eax,ebx
  420e5b:	mov    r14d,DWORD PTR [r10+rax*1]
  420e5f:	lea    ecx,[r14+rbx*1]
  420e63:	mov    eax,0x10
  420e68:	cmp    ecx,ebx
  420e6a:	jbe    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420e70:	mov    r8d,DWORD PTR [rdi+0x8]
  420e74:	mov    edi,ecx
  420e76:	lea    rbx,[rdi+0x4]
  420e7a:	cmp    rbx,r8
  420e7d:	ja     420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420e83:	and    ebx,0x3
  420e86:	test   rbx,rbx
  420e89:	jne    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420e8f:	mov    r9d,DWORD PTR [r10+rdi*1]
  420e93:	mov    eax,0x19
  420e98:	cmp    r9d,0x3fffffff
  420e9f:	ja     420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420ea5:	mov    edi,r8d
  420ea8:	sub    edi,ecx
  420eaa:	add    edi,0xfffffffc
  420ead:	lea    ecx,[r9*4+0x0]
  420eb5:	mov    eax,0x1a
  420eba:	cmp    edi,ecx
  420ebc:	jb     420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420ec2:	test   r9d,r9d
  420ec5:	je     420f35 <flatcc_verify_string_vector_field@@Base+0x135>
  420ec7:	lea    eax,[r14+rdx*1]
  420ecb:	lea    edi,[rsi+rax*1]
  420ece:	add    edi,0x4
  420ed1:	mov    r11d,r8d
  420ed4:	sub    r11d,r14d
  420ed7:	sub    r11d,edx
  420eda:	sub    r11d,esi
  420edd:	add    r11d,0xfffffff8
  420ee1:	mov    eax,edi
  420ee3:	mov    ecx,DWORD PTR [r10+rax*1]
  420ee7:	lea    edx,[rdi+rcx*1]
  420eea:	mov    eax,0x11
  420eef:	cmp    edx,edi
  420ef1:	jbe    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420ef3:	mov    edx,edx
  420ef5:	lea    rsi,[rdx+0x4]
  420ef9:	cmp    rsi,r8
  420efc:	ja     420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420efe:	mov    esi,edx
  420f00:	and    esi,0x3
  420f03:	test   rsi,rsi
  420f06:	jne    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420f08:	mov    eax,DWORD PTR [r10+rdx*1]
  420f0c:	mov    edx,r11d
  420f0f:	sub    edx,ecx
  420f11:	lea    esi,[rax+0x1]
  420f14:	cmp    edx,esi
  420f16:	jb     420f47 <flatcc_verify_string_vector_field@@Base+0x147>
  420f18:	lea    ecx,[rdi+rcx*1]
  420f1b:	add    ecx,0x4
  420f1e:	mov    ecx,ecx
  420f20:	add    rcx,r10
  420f23:	cmp    BYTE PTR [rax+rcx*1],0x0
  420f27:	jne    420f4e <flatcc_verify_string_vector_field@@Base+0x14e>
  420f29:	add    edi,0x4
  420f2c:	add    r11d,0xfffffffc
  420f30:	dec    r9d
  420f33:	jne    420ee1 <flatcc_verify_string_vector_field@@Base+0xe1>
  420f35:	xor    eax,eax
  420f37:	jmp    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420f39:	xor    eax,eax
  420f3b:	test   edx,edx
  420f3d:	setne  al
  420f40:	shl    eax,0x2
  420f43:	pop    rbx
  420f44:	pop    r14
  420f46:	ret    
  420f47:	mov    eax,0x8
  420f4c:	jmp    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420f4e:	mov    eax,0x7
  420f53:	jmp    420f43 <flatcc_verify_string_vector_field@@Base+0x143>
  420f55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f5f:	nop

0000000000420f60 <flatcc_verify_table_field@@Base>:
  420f60:	sub    rsp,0x28
  420f64:	lea    eax,[rsi+rsi*1]
  420f67:	add    eax,0x4
  420f6a:	cmp    ax,WORD PTR [rdi+0x1e]
  420f6e:	jae    420fa4 <flatcc_verify_table_field@@Base+0x44>
  420f70:	mov    rsi,QWORD PTR [rdi+0x10]
  420f74:	movzx  eax,ax
  420f77:	movzx  esi,WORD PTR [rsi+rax*1]
  420f7b:	test   esi,esi
  420f7d:	je     420fa4 <flatcc_verify_table_field@@Base+0x44>
  420f7f:	lea    r8d,[rsi+0x4]
  420f83:	movzx  edx,WORD PTR [rdi+0x1c]
  420f87:	mov    eax,0xd
  420f8c:	cmp    r8d,edx
  420f8f:	ja     420f9f <flatcc_verify_table_field@@Base+0x3f>
  420f91:	add    esi,DWORD PTR [rdi+0x18]
  420f94:	mov    eax,0xc
  420f99:	test   sil,0x3
  420f9d:	je     420fb3 <flatcc_verify_table_field@@Base+0x53>
  420f9f:	add    rsp,0x28
  420fa3:	ret    
  420fa4:	xor    eax,eax
  420fa6:	test   edx,edx
  420fa8:	setne  al
  420fab:	shl    eax,0x2
  420fae:	add    rsp,0x28
  420fb2:	ret    
  420fb3:	test   esi,esi
  420fb5:	je     42108f <flatcc_verify_table_field@@Base+0x12f>
  420fbb:	mov    r9,QWORD PTR [rdi]
  420fbe:	mov    r8d,DWORD PTR [rdi+0x8]
  420fc2:	mov    eax,esi
  420fc4:	mov    edx,DWORD PTR [r9+rax*1]
  420fc8:	mov    eax,DWORD PTR [rdi+0xc]
  420fcb:	dec    eax
  420fcd:	mov    DWORD PTR [rsp+0x14],eax
  420fd1:	je     421096 <flatcc_verify_table_field@@Base+0x136>
  420fd7:	add    edx,esi
  420fd9:	mov    eax,0xf
  420fde:	cmp    edx,esi
  420fe0:	jbe    420f9f <flatcc_verify_table_field@@Base+0x3f>
  420fe2:	mov    esi,edx
  420fe4:	lea    rdi,[rsi+0x4]
  420fe8:	cmp    rdi,r8
  420feb:	ja     420f9f <flatcc_verify_table_field@@Base+0x3f>
  420fed:	mov    edi,esi
  420fef:	and    edi,0x3
  420ff2:	test   rdi,rdi
  420ff5:	jne    420f9f <flatcc_verify_table_field@@Base+0x3f>
  420ff7:	mov    DWORD PTR [rsp+0x20],edx
  420ffb:	mov    edi,edx
  420ffd:	sub    edi,DWORD PTR [r9+rsi*1]
  421001:	mov    eax,0x1d
  421006:	test   edi,0x80000001
  42100c:	jne    420f9f <flatcc_verify_table_field@@Base+0x3f>
  42100e:	mov    r10d,edi
  421011:	lea    r11,[r10+0x2]
  421015:	mov    eax,0x1b
  42101a:	cmp    r11,r8
  42101d:	ja     420f9f <flatcc_verify_table_field@@Base+0x3f>
  42101f:	movzx  esi,WORD PTR [r9+r10*1]
  421024:	mov    WORD PTR [rsp+0x26],si
  421029:	mov    eax,0x1e
  42102e:	test   sil,0x1
  421032:	jne    420f9f <flatcc_verify_table_field@@Base+0x3f>
  421038:	add    edi,esi
  42103a:	cmp    edi,r8d
  42103d:	ja     420f9f <flatcc_verify_table_field@@Base+0x3f>
  421043:	mov    eax,0x1c
  421048:	cmp    si,0x4
  42104c:	jb     420f9f <flatcc_verify_table_field@@Base+0x3f>
  421052:	mov    eax,r11d
  421055:	movzx  esi,WORD PTR [r9+rax*1]
  42105a:	mov    WORD PTR [rsp+0x24],si
  42105f:	mov    edi,r8d
  421062:	sub    edi,edx
  421064:	mov    eax,0x14
  421069:	cmp    edi,esi
  42106b:	jb     420f9f <flatcc_verify_table_field@@Base+0x3f>
  421071:	add    r10,r9
  421074:	mov    QWORD PTR [rsp+0x18],r10
  421079:	mov    QWORD PTR [rsp+0x8],r9
  42107e:	mov    DWORD PTR [rsp+0x10],r8d
  421083:	lea    rdi,[rsp+0x8]
  421088:	call   rcx
  42108a:	add    rsp,0x28
  42108e:	ret    
  42108f:	xor    eax,eax
  421091:	add    rsp,0x28
  421095:	ret    
  421096:	mov    eax,0x3
  42109b:	add    rsp,0x28
  42109f:	ret    

00000000004210a0 <flatcc_verify_table_vector_field@@Base>:
  4210a0:	push   rbp
  4210a1:	push   r15
  4210a3:	push   r14
  4210a5:	push   r13
  4210a7:	push   r12
  4210a9:	push   rbx
  4210aa:	sub    rsp,0x28
  4210ae:	lea    eax,[rsi+rsi*1]
  4210b1:	add    eax,0x4
  4210b4:	cmp    ax,WORD PTR [rdi+0x1e]
  4210b8:	jae    421290 <flatcc_verify_table_vector_field@@Base+0x1f0>
  4210be:	mov    rbx,rcx
  4210c1:	mov    rcx,QWORD PTR [rdi+0x10]
  4210c5:	movzx  eax,ax
  4210c8:	movzx  ecx,WORD PTR [rcx+rax*1]
  4210cc:	test   ecx,ecx
  4210ce:	je     421290 <flatcc_verify_table_vector_field@@Base+0x1f0>
  4210d4:	lea    edx,[rcx+0x4]
  4210d7:	movzx  esi,WORD PTR [rdi+0x1c]
  4210db:	mov    eax,0xd
  4210e0:	cmp    edx,esi
  4210e2:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4210e8:	mov    edx,DWORD PTR [rdi+0x18]
  4210eb:	lea    esi,[rdx+rcx*1]
  4210ee:	mov    eax,0xc
  4210f3:	test   sil,0x3
  4210f7:	jne    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4210fd:	test   esi,esi
  4210ff:	je     42128c <flatcc_verify_table_vector_field@@Base+0x1ec>
  421105:	mov    r13d,DWORD PTR [rdi+0xc]
  421109:	test   r13d,r13d
  42110c:	jle    4212a9 <flatcc_verify_table_vector_field@@Base+0x209>
  421112:	mov    r15,QWORD PTR [rdi]
  421115:	mov    eax,esi
  421117:	mov    r8d,DWORD PTR [r15+rax*1]
  42111b:	lea    ebp,[r8+rsi*1]
  42111f:	mov    eax,0x10
  421124:	cmp    ebp,esi
  421126:	jbe    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42112c:	mov    r9d,DWORD PTR [rdi+0x8]
  421130:	mov    esi,ebp
  421132:	lea    rdi,[rsi+0x4]
  421136:	cmp    rdi,r9
  421139:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42113f:	and    edi,0x3
  421142:	test   rdi,rdi
  421145:	jne    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42114b:	mov    r12d,DWORD PTR [r15+rsi*1]
  42114f:	mov    eax,0x19
  421154:	cmp    r12d,0x3fffffff
  42115b:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421161:	mov    esi,r9d
  421164:	sub    esi,ebp
  421166:	add    esi,0xfffffffc
  421169:	lea    edi,[r12*4+0x0]
  421171:	mov    eax,0x1a
  421176:	cmp    esi,edi
  421178:	jb     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42117e:	test   r12d,r12d
  421181:	je     42128c <flatcc_verify_table_vector_field@@Base+0x1ec>
  421187:	add    r13d,0xfffffffe
  42118b:	lea    eax,[r8+rdx*1]
  42118f:	lea    r14d,[rcx+rax*1]
  421193:	add    r14d,0x4
  421197:	mov    r11d,r9d
  42119a:	sub    r11d,r8d
  42119d:	sub    r11d,edx
  4211a0:	sub    r11d,ecx
  4211a3:	add    r11d,0xfffffffc
  4211a7:	mov    QWORD PTR [rsp+0x20],r9
  4211ac:	mov    r14d,r14d
  4211af:	mov    ecx,DWORD PTR [r15+r14*1]
  4211b3:	mov    DWORD PTR [rsp+0xc],r13d
  4211b8:	test   r13d,r13d
  4211bb:	je     421369 <flatcc_verify_table_vector_field@@Base+0x2c9>
  4211c1:	lea    eax,[r14+rcx*1]
  4211c5:	cmp    eax,r14d
  4211c8:	jbe    4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  4211ce:	mov    edx,eax
  4211d0:	lea    rsi,[rdx+0x4]
  4211d4:	cmp    rsi,r9
  4211d7:	ja     4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  4211dd:	mov    esi,edx
  4211df:	and    esi,0x3
  4211e2:	test   rsi,rsi
  4211e5:	jne    4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  4211eb:	mov    DWORD PTR [rsp+0x18],eax
  4211ef:	mov    edx,DWORD PTR [r15+rdx*1]
  4211f3:	mov    eax,ecx
  4211f5:	sub    eax,edx
  4211f7:	add    eax,r14d
  4211fa:	test   eax,0x80000001
  4211ff:	jne    4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  421205:	mov    eax,eax
  421207:	lea    rsi,[rax+0x2]
  42120b:	cmp    rsi,r9
  42120e:	ja     4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  421214:	movzx  ebp,WORD PTR [r15+rax*1]
  421219:	mov    WORD PTR [rsp+0x1e],bp
  42121e:	cmp    ebp,0x4
  421221:	jb     4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  421227:	mov    edi,ebp
  421229:	and    edi,0x1
  42122c:	test   di,di
  42122f:	jne    4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  421231:	add    ebp,ecx
  421233:	sub    ebp,edx
  421235:	add    ebp,r14d
  421238:	cmp    ebp,r9d
  42123b:	ja     4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  42123d:	mov    edx,esi
  42123f:	movzx  edx,WORD PTR [r15+rdx*1]
  421244:	mov    WORD PTR [rsp+0x1c],dx
  421249:	mov    esi,r11d
  42124c:	sub    esi,ecx
  42124e:	cmp    esi,edx
  421250:	jb     4212b0 <flatcc_verify_table_vector_field@@Base+0x210>
  421252:	mov    ebp,r11d
  421255:	add    rax,r15
  421258:	mov    QWORD PTR [rsp+0x10],rax
  42125d:	mov    QWORD PTR [rsp],r15
  421261:	mov    DWORD PTR [rsp+0x8],r9d
  421266:	mov    rdi,rsp
  421269:	call   rbx
  42126b:	test   eax,eax
  42126d:	jne    42137b <flatcc_verify_table_vector_field@@Base+0x2db>
  421273:	add    r14d,0x4
  421277:	mov    r11d,ebp
  42127a:	add    r11d,0xfffffffc
  42127e:	dec    r12d
  421281:	mov    r9,QWORD PTR [rsp+0x20]
  421286:	jne    4211ac <flatcc_verify_table_vector_field@@Base+0x10c>
  42128c:	xor    eax,eax
  42128e:	jmp    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421290:	xor    eax,eax
  421292:	test   edx,edx
  421294:	setne  al
  421297:	shl    eax,0x2
  42129a:	add    rsp,0x28
  42129e:	pop    rbx
  42129f:	pop    r12
  4212a1:	pop    r13
  4212a3:	pop    r14
  4212a5:	pop    r15
  4212a7:	pop    rbp
  4212a8:	ret    
  4212a9:	mov    eax,0x3
  4212ae:	jmp    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212b0:	mov    DWORD PTR [rsp+0xc],r13d
  4212b5:	add    ecx,r14d
  4212b8:	mov    eax,0xf
  4212bd:	cmp    ecx,r14d
  4212c0:	jbe    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212c2:	mov    edx,ecx
  4212c4:	lea    rsi,[rdx+0x4]
  4212c8:	cmp    rsi,r9
  4212cb:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212cd:	mov    esi,edx
  4212cf:	and    esi,0x3
  4212d2:	test   rsi,rsi
  4212d5:	jne    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212d7:	mov    DWORD PTR [rsp+0x18],ecx
  4212db:	mov    edi,ecx
  4212dd:	sub    edi,DWORD PTR [r15+rdx*1]
  4212e1:	mov    eax,0x1d
  4212e6:	test   edi,0x80000001
  4212ec:	jne    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212ee:	mov    edx,edi
  4212f0:	lea    rsi,[rdx+0x2]
  4212f4:	mov    eax,0x1b
  4212f9:	cmp    rsi,r9
  4212fc:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  4212fe:	movzx  ebp,WORD PTR [r15+rdx*1]
  421303:	mov    WORD PTR [rsp+0x1e],bp
  421308:	mov    eax,0x1e
  42130d:	test   bpl,0x1
  421311:	jne    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421313:	add    edi,ebp
  421315:	mov    r8,r9
  421318:	cmp    edi,r8d
  42131b:	ja     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421321:	mov    eax,0x1c
  421326:	cmp    bp,0x4
  42132a:	jb     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421330:	mov    eax,esi
  421332:	movzx  esi,WORD PTR [r15+rax*1]
  421337:	mov    WORD PTR [rsp+0x1c],si
  42133c:	mov    edi,r8d
  42133f:	sub    edi,ecx
  421341:	mov    eax,0x14
  421346:	cmp    edi,esi
  421348:	jb     42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42134e:	add    rdx,r15
  421351:	mov    QWORD PTR [rsp+0x10],rdx
  421356:	mov    QWORD PTR [rsp],r15
  42135a:	mov    DWORD PTR [rsp+0x8],r8d
  42135f:	mov    rdi,rsp
  421362:	call   rbx
  421364:	jmp    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  421369:	mov    DWORD PTR [rsp+0xc],0x0
  421371:	mov    eax,0x3
  421376:	jmp    42129a <flatcc_verify_table_vector_field@@Base+0x1fa>
  42137b:	mov    ecx,DWORD PTR [r15+r14*1]
  42137f:	add    ecx,r14d
  421382:	mov    DWORD PTR [rsp+0xc],r13d
  421387:	mov    r9,QWORD PTR [rsp+0x20]
  42138c:	jmp    4212b8 <flatcc_verify_table_vector_field@@Base+0x218>
  421391:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004213a0 <flatcc_verify_union_table@@Base>:
  4213a0:	sub    rsp,0x28
  4213a4:	mov    r8,QWORD PTR [rdi]
  4213a7:	mov    r11d,DWORD PTR [rdi+0x8]
  4213ab:	mov    edx,DWORD PTR [rdi+0x14]
  4213ae:	mov    ecx,DWORD PTR [rdi+0x18]
  4213b1:	mov    eax,DWORD PTR [rdi+0xc]
  4213b4:	dec    eax
  4213b6:	mov    DWORD PTR [rsp+0x14],eax
  4213ba:	je     421473 <flatcc_verify_union_table@@Base+0xd3>
  4213c0:	add    ecx,edx
  4213c2:	mov    eax,0xf
  4213c7:	cmp    ecx,edx
  4213c9:	jbe    42146e <flatcc_verify_union_table@@Base+0xce>
  4213cf:	mov    edx,ecx
  4213d1:	lea    rdi,[rdx+0x4]
  4213d5:	cmp    rdi,r11
  4213d8:	ja     42146e <flatcc_verify_union_table@@Base+0xce>
  4213de:	mov    edi,edx
  4213e0:	and    edi,0x3
  4213e3:	test   rdi,rdi
  4213e6:	jne    42146e <flatcc_verify_union_table@@Base+0xce>
  4213ec:	mov    DWORD PTR [rsp+0x20],ecx
  4213f0:	mov    edi,ecx
  4213f2:	sub    edi,DWORD PTR [r8+rdx*1]
  4213f6:	mov    eax,0x1d
  4213fb:	test   edi,0x80000001
  421401:	jne    42146e <flatcc_verify_union_table@@Base+0xce>
  421403:	mov    r9d,edi
  421406:	lea    r10,[r9+0x2]
  42140a:	mov    eax,0x1b
  42140f:	cmp    r10,r11
  421412:	ja     42146e <flatcc_verify_union_table@@Base+0xce>
  421414:	movzx  edx,WORD PTR [r8+r9*1]
  421419:	mov    WORD PTR [rsp+0x26],dx
  42141e:	mov    eax,0x1e
  421423:	test   dl,0x1
  421426:	jne    42146e <flatcc_verify_union_table@@Base+0xce>
  421428:	add    edi,edx
  42142a:	cmp    edi,r11d
  42142d:	ja     42146e <flatcc_verify_union_table@@Base+0xce>
  42142f:	mov    eax,0x1c
  421434:	cmp    dx,0x4
  421438:	jb     42146e <flatcc_verify_union_table@@Base+0xce>
  42143a:	mov    eax,r10d
  42143d:	movzx  edx,WORD PTR [r8+rax*1]
  421442:	mov    WORD PTR [rsp+0x24],dx
  421447:	mov    edi,r11d
  42144a:	sub    edi,ecx
  42144c:	mov    eax,0x14
  421451:	cmp    edi,edx
  421453:	jb     42146e <flatcc_verify_union_table@@Base+0xce>
  421455:	add    r9,r8
  421458:	mov    QWORD PTR [rsp+0x18],r9
  42145d:	mov    QWORD PTR [rsp+0x8],r8
  421462:	mov    DWORD PTR [rsp+0x10],r11d
  421467:	lea    rdi,[rsp+0x8]
  42146c:	call   rsi
  42146e:	add    rsp,0x28
  421472:	ret    
  421473:	mov    eax,0x3
  421478:	add    rsp,0x28
  42147c:	ret    
  42147d:	nop    DWORD PTR [rax]

0000000000421480 <flatcc_verify_union_struct@@Base>:
  421480:	mov    ecx,DWORD PTR [rdi+0x18]
  421483:	mov    eax,0x12
  421488:	test   ecx,ecx
  42148a:	je     4214ba <flatcc_verify_union_struct@@Base+0x3a>
  42148c:	mov    r8d,DWORD PTR [rdi+0x8]
  421490:	add    ecx,DWORD PTR [rdi+0x14]
  421493:	cmp    ecx,r8d
  421496:	ja     4214ba <flatcc_verify_union_struct@@Base+0x3a>
  421498:	mov    eax,0xa
  42149d:	add    esi,ecx
  42149f:	jb     4214ba <flatcc_verify_union_struct@@Base+0x3a>
  4214a1:	mov    eax,0x9
  4214a6:	cmp    esi,r8d
  4214a9:	ja     4214ba <flatcc_verify_union_struct@@Base+0x3a>
  4214ab:	movzx  eax,dx
  4214ae:	dec    eax
  4214b0:	and    ecx,eax
  4214b2:	mov    eax,0xb
  4214b7:	cmove  eax,ecx
  4214ba:	ret    
  4214bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004214c0 <flatcc_verify_union_string@@Base>:
  4214c0:	mov    edx,DWORD PTR [rdi+0x14]
  4214c3:	mov    ecx,DWORD PTR [rdi+0x18]
  4214c6:	add    ecx,edx
  4214c8:	mov    eax,0x11
  4214cd:	cmp    ecx,edx
  4214cf:	jbe    421516 <flatcc_verify_union_string@@Base+0x56>
  4214d1:	mov    r8d,DWORD PTR [rdi+0x8]
  4214d5:	mov    esi,ecx
  4214d7:	lea    rdx,[rsi+0x4]
  4214db:	cmp    rdx,r8
  4214de:	ja     421516 <flatcc_verify_union_string@@Base+0x56>
  4214e0:	mov    edx,esi
  4214e2:	and    edx,0x3
  4214e5:	test   rdx,rdx
  4214e8:	jne    421516 <flatcc_verify_union_string@@Base+0x56>
  4214ea:	mov    rdi,QWORD PTR [rdi]
  4214ed:	mov    esi,DWORD PTR [rdi+rsi*1]
  4214f0:	add    ecx,0x4
  4214f3:	sub    r8d,ecx
  4214f6:	lea    edx,[rsi+0x1]
  4214f9:	mov    eax,0x8
  4214fe:	cmp    r8d,edx
  421501:	jb     421516 <flatcc_verify_union_string@@Base+0x56>
  421503:	mov    eax,ecx
  421505:	add    rdi,rax
  421508:	xor    ecx,ecx
  42150a:	cmp    BYTE PTR [rsi+rdi*1],0x0
  42150e:	mov    eax,0x7
  421513:	cmove  eax,ecx
  421516:	ret    
  421517:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421520 <flatcc_verify_buffer_header@@Base>:
  421520:	push   rbx
  421521:	sub    rsp,0x10
  421525:	mov    rbx,rdi
  421528:	mov    eax,0x5
  42152d:	test   bl,0x3
  421530:	jne    421588 <flatcc_verify_buffer_header@@Base+0x68>
  421532:	mov    rcx,rdx
  421535:	mov    rdx,rsi
  421538:	shr    rdx,0x3
  42153c:	mov    eax,0x6
  421541:	cmp    rdx,0x1ffffffe
  421548:	ja     421588 <flatcc_verify_buffer_header@@Base+0x68>
  42154a:	mov    eax,0x1
  42154f:	cmp    rsi,0x8
  421553:	jb     421588 <flatcc_verify_buffer_header@@Base+0x68>
  421555:	test   rcx,rcx
  421558:	je     421586 <flatcc_verify_buffer_header@@Base+0x66>
  42155a:	mov    DWORD PTR [rsp+0xc],0x0
  421562:	lea    rdi,[rsp+0xc]
  421567:	mov    edx,0x4
  42156c:	mov    rsi,rcx
  42156f:	call   406040 <strncpy@plt>
  421574:	mov    ecx,DWORD PTR [rsp+0xc]
  421578:	test   ecx,ecx
  42157a:	je     421586 <flatcc_verify_buffer_header@@Base+0x66>
  42157c:	mov    eax,0x2
  421581:	cmp    DWORD PTR [rbx+0x4],ecx
  421584:	jne    421588 <flatcc_verify_buffer_header@@Base+0x68>
  421586:	xor    eax,eax
  421588:	add    rsp,0x10
  42158c:	pop    rbx
  42158d:	ret    
  42158e:	xchg   ax,ax

0000000000421590 <flatcc_verify_typed_buffer_header@@Base>:
  421590:	mov    eax,0x5
  421595:	test   dil,0x3
  421599:	jne    4215cb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  42159b:	mov    rcx,rsi
  42159e:	shr    rcx,0x3
  4215a2:	mov    eax,0x6
  4215a7:	cmp    rcx,0x1ffffffe
  4215ae:	ja     4215cb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4215b0:	mov    eax,0x1
  4215b5:	cmp    rsi,0x8
  4215b9:	jb     4215cb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4215bb:	test   edx,edx
  4215bd:	je     4215c9 <flatcc_verify_typed_buffer_header@@Base+0x39>
  4215bf:	mov    eax,0x2
  4215c4:	cmp    DWORD PTR [rdi+0x4],edx
  4215c7:	jne    4215cb <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4215c9:	xor    eax,eax
  4215cb:	ret    
  4215cc:	nop    DWORD PTR [rax+0x0]

00000000004215d0 <flatcc_verify_struct_as_root@@Base>:
  4215d0:	push   rbp
  4215d1:	push   r15
  4215d3:	push   r14
  4215d5:	push   r12
  4215d7:	push   rbx
  4215d8:	sub    rsp,0x10
  4215dc:	mov    rbx,rdi
  4215df:	mov    eax,0x5
  4215e4:	test   bl,0x3
  4215e7:	jne    4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  4215ed:	mov    r15,rcx
  4215f0:	mov    rbp,rsi
  4215f3:	mov    rcx,rsi
  4215f6:	shr    rcx,0x3
  4215fa:	mov    eax,0x6
  4215ff:	cmp    rcx,0x1ffffffe
  421606:	ja     4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  42160c:	mov    eax,0x1
  421611:	cmp    rbp,0x8
  421615:	jb     4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  42161b:	mov    r14d,r8d
  42161e:	mov    r12,rdx
  421621:	test   rdx,rdx
  421624:	je     42167c <flatcc_verify_struct_as_root@@Base+0xac>
  421626:	mov    DWORD PTR [rsp+0x8],0x0
  42162e:	lea    rdi,[rsp+0x8]
  421633:	mov    edx,0x4
  421638:	mov    rsi,r12
  42163b:	call   406040 <strncpy@plt>
  421640:	mov    eax,DWORD PTR [rsp+0x8]
  421644:	test   eax,eax
  421646:	je     42167c <flatcc_verify_struct_as_root@@Base+0xac>
  421648:	cmp    DWORD PTR [rbx+0x4],eax
  42164b:	je     42167c <flatcc_verify_struct_as_root@@Base+0xac>
  42164d:	mov    DWORD PTR [rsp+0xc],0x0
  421655:	lea    rdi,[rsp+0xc]
  42165a:	mov    edx,0x4
  42165f:	mov    rsi,r12
  421662:	call   406040 <strncpy@plt>
  421667:	mov    ecx,DWORD PTR [rsp+0xc]
  42166b:	xor    eax,eax
  42166d:	cmp    DWORD PTR [rbx+0x4],ecx
  421670:	setne  al
  421673:	add    eax,eax
  421675:	test   ecx,ecx
  421677:	cmove  eax,ecx
  42167a:	jmp    4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  42167c:	mov    ecx,DWORD PTR [rbx]
  42167e:	lea    edx,[rcx-0x1]
  421681:	mov    eax,0x12
  421686:	cmp    edx,ebp
  421688:	jae    4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  42168a:	mov    eax,0xa
  42168f:	add    r15d,ecx
  421692:	jb     4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  421694:	mov    eax,0x9
  421699:	cmp    r15d,ebp
  42169c:	ja     4216ae <flatcc_verify_struct_as_root@@Base+0xde>
  42169e:	movzx  eax,r14w
  4216a2:	dec    eax
  4216a4:	and    ecx,eax
  4216a6:	mov    eax,0xb
  4216ab:	cmove  eax,ecx
  4216ae:	add    rsp,0x10
  4216b2:	pop    rbx
  4216b3:	pop    r12
  4216b5:	pop    r14
  4216b7:	pop    r15
  4216b9:	pop    rbp
  4216ba:	ret    
  4216bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004216c0 <flatcc_verify_struct_as_typed_root@@Base>:
  4216c0:	mov    eax,0x5
  4216c5:	test   dil,0x3
  4216c9:	jne    421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4216cb:	mov    r9,rsi
  4216ce:	shr    r9,0x3
  4216d2:	mov    eax,0x6
  4216d7:	cmp    r9,0x1ffffffe
  4216de:	ja     421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4216e0:	mov    eax,0x1
  4216e5:	cmp    rsi,0x8
  4216e9:	jb     421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4216eb:	test   edx,edx
  4216ed:	je     4216f9 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  4216ef:	mov    eax,0x2
  4216f4:	cmp    DWORD PTR [rdi+0x4],edx
  4216f7:	jne    421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  4216f9:	mov    edx,DWORD PTR [rdi]
  4216fb:	lea    edi,[rdx-0x1]
  4216fe:	mov    eax,0x12
  421703:	cmp    edi,esi
  421705:	jae    421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  421707:	mov    eax,0xa
  42170c:	add    ecx,edx
  42170e:	jb     421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  421710:	mov    eax,0x9
  421715:	cmp    ecx,esi
  421717:	ja     421729 <flatcc_verify_struct_as_typed_root@@Base+0x69>
  421719:	movzx  eax,r8w
  42171d:	dec    eax
  42171f:	and    edx,eax
  421721:	mov    eax,0xb
  421726:	cmove  eax,edx
  421729:	ret    
  42172a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421730 <flatcc_verify_table_as_root@@Base>:
  421730:	push   r15
  421732:	push   r14
  421734:	push   r13
  421736:	push   r12
  421738:	push   rbx
  421739:	sub    rsp,0x20
  42173d:	mov    r12,rdi
  421740:	mov    eax,0x5
  421745:	test   r12b,0x3
  421749:	jne    42188c <flatcc_verify_table_as_root@@Base+0x15c>
  42174f:	mov    r14,rcx
  421752:	mov    r15,rsi
  421755:	mov    r13d,r15d
  421758:	mov    rcx,r13
  42175b:	shr    rcx,0x3
  42175f:	mov    eax,0x6
  421764:	cmp    rcx,0x1ffffffe
  42176b:	ja     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421771:	mov    eax,0x1
  421776:	cmp    r13,0x8
  42177a:	jb     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421780:	mov    rbx,rdx
  421783:	test   rdx,rdx
  421786:	je     4217dd <flatcc_verify_table_as_root@@Base+0xad>
  421788:	mov    DWORD PTR [rsp],0x0
  42178f:	mov    rdi,rsp
  421792:	mov    edx,0x4
  421797:	mov    rsi,rbx
  42179a:	call   406040 <strncpy@plt>
  42179f:	mov    eax,DWORD PTR [rsp]
  4217a2:	test   eax,eax
  4217a4:	je     4217dd <flatcc_verify_table_as_root@@Base+0xad>
  4217a6:	cmp    DWORD PTR [r12+0x4],eax
  4217ab:	je     4217dd <flatcc_verify_table_as_root@@Base+0xad>
  4217ad:	mov    DWORD PTR [rsp],0x0
  4217b4:	mov    rdi,rsp
  4217b7:	mov    edx,0x4
  4217bc:	mov    rsi,rbx
  4217bf:	call   406040 <strncpy@plt>
  4217c4:	mov    ecx,DWORD PTR [rsp]
  4217c7:	xor    eax,eax
  4217c9:	cmp    DWORD PTR [r12+0x4],ecx
  4217ce:	setne  al
  4217d1:	add    eax,eax
  4217d3:	test   ecx,ecx
  4217d5:	cmove  eax,ecx
  4217d8:	jmp    42188c <flatcc_verify_table_as_root@@Base+0x15c>
  4217dd:	mov    ecx,DWORD PTR [r12]
  4217e1:	mov    DWORD PTR [rsp+0xc],0x63
  4217e9:	mov    eax,0xf
  4217ee:	test   rcx,rcx
  4217f1:	je     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  4217f7:	lea    rdx,[rcx+0x4]
  4217fb:	cmp    rdx,r13
  4217fe:	ja     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421804:	mov    edx,ecx
  421806:	and    edx,0x3
  421809:	test   rdx,rdx
  42180c:	jne    42188c <flatcc_verify_table_as_root@@Base+0x15c>
  42180e:	mov    DWORD PTR [rsp+0x18],ecx
  421812:	mov    edi,ecx
  421814:	sub    edi,DWORD PTR [r12+rcx*1]
  421818:	mov    eax,0x1d
  42181d:	test   edi,0x80000001
  421823:	jne    42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421825:	mov    edx,edi
  421827:	lea    rsi,[rdx+0x2]
  42182b:	mov    eax,0x1b
  421830:	cmp    rsi,r13
  421833:	ja     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421835:	movzx  ebx,WORD PTR [r12+rdx*1]
  42183a:	mov    WORD PTR [rsp+0x1e],bx
  42183f:	mov    eax,0x1e
  421844:	test   bl,0x1
  421847:	jne    42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421849:	add    edi,ebx
  42184b:	cmp    edi,r15d
  42184e:	ja     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421850:	mov    eax,0x1c
  421855:	cmp    bx,0x4
  421859:	jb     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  42185b:	mov    eax,esi
  42185d:	movzx  esi,WORD PTR [r12+rax*1]
  421862:	mov    WORD PTR [rsp+0x1c],si
  421867:	mov    edi,r15d
  42186a:	sub    edi,ecx
  42186c:	mov    eax,0x14
  421871:	cmp    edi,esi
  421873:	jb     42188c <flatcc_verify_table_as_root@@Base+0x15c>
  421875:	add    rdx,r12
  421878:	mov    QWORD PTR [rsp+0x10],rdx
  42187d:	mov    QWORD PTR [rsp],r12
  421881:	mov    DWORD PTR [rsp+0x8],r15d
  421886:	mov    rdi,rsp
  421889:	call   r14
  42188c:	add    rsp,0x20
  421890:	pop    rbx
  421891:	pop    r12
  421893:	pop    r13
  421895:	pop    r14
  421897:	pop    r15
  421899:	ret    
  42189a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004218a0 <flatcc_verify_table_as_typed_root@@Base>:
  4218a0:	push   rbx
  4218a1:	sub    rsp,0x20
  4218a5:	mov    eax,0x5
  4218aa:	test   dil,0x3
  4218ae:	jne    4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4218b4:	mov    r8d,esi
  4218b7:	mov    r9,r8
  4218ba:	shr    r9,0x3
  4218be:	mov    eax,0x6
  4218c3:	cmp    r9,0x1ffffffe
  4218ca:	ja     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4218d0:	mov    eax,0x1
  4218d5:	cmp    r8,0x8
  4218d9:	jb     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4218df:	test   edx,edx
  4218e1:	je     4218f1 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4218e3:	mov    eax,0x2
  4218e8:	cmp    DWORD PTR [rdi+0x4],edx
  4218eb:	jne    4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  4218f1:	mov    ebx,DWORD PTR [rdi]
  4218f3:	mov    DWORD PTR [rsp+0xc],0x63
  4218fb:	mov    eax,0xf
  421900:	test   rbx,rbx
  421903:	je     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421909:	lea    rdx,[rbx+0x4]
  42190d:	cmp    rdx,r8
  421910:	ja     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421916:	mov    edx,ebx
  421918:	and    edx,0x3
  42191b:	test   rdx,rdx
  42191e:	jne    4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421924:	mov    DWORD PTR [rsp+0x18],ebx
  421928:	mov    r11d,ebx
  42192b:	sub    r11d,DWORD PTR [rdi+rbx*1]
  42192f:	mov    eax,0x1d
  421934:	test   r11d,0x80000001
  42193b:	jne    4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42193d:	mov    r9d,r11d
  421940:	lea    r10,[r9+0x2]
  421944:	mov    eax,0x1b
  421949:	cmp    r10,r8
  42194c:	ja     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42194e:	movzx  r8d,WORD PTR [rdi+r9*1]
  421953:	mov    WORD PTR [rsp+0x1e],r8w
  421959:	mov    eax,0x1e
  42195e:	test   r8b,0x1
  421962:	jne    4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421964:	add    r11d,r8d
  421967:	cmp    r11d,esi
  42196a:	ja     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  42196c:	mov    eax,0x1c
  421971:	cmp    r8w,0x4
  421976:	jb     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421978:	mov    eax,r10d
  42197b:	movzx  r8d,WORD PTR [rdi+rax*1]
  421980:	mov    WORD PTR [rsp+0x1c],r8w
  421986:	mov    edx,esi
  421988:	sub    edx,ebx
  42198a:	mov    eax,0x14
  42198f:	cmp    edx,r8d
  421992:	jb     4219a9 <flatcc_verify_table_as_typed_root@@Base+0x109>
  421994:	add    r9,rdi
  421997:	mov    QWORD PTR [rsp+0x10],r9
  42199c:	mov    QWORD PTR [rsp],rdi
  4219a0:	mov    DWORD PTR [rsp+0x8],esi
  4219a4:	mov    rdi,rsp
  4219a7:	call   rcx
  4219a9:	add    rsp,0x20
  4219ad:	pop    rbx
  4219ae:	ret    
  4219af:	nop

00000000004219b0 <flatcc_verify_struct_as_nested_root@@Base>:
  4219b0:	push   r15
  4219b2:	push   r14
  4219b4:	push   rbx
  4219b5:	lea    esi,[rsi+rsi*1]
  4219b8:	add    esi,0x4
  4219bb:	movzx  ebx,WORD PTR [rdi+0x1e]
  4219bf:	cmp    si,bx
  4219c2:	jae    421a2c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4219c4:	mov    r10,QWORD PTR [rdi+0x10]
  4219c8:	movzx  r11d,si
  4219cc:	movzx  eax,WORD PTR [r10+r11*1]
  4219d1:	test   eax,eax
  4219d3:	je     421a2c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4219d5:	lea    esi,[rax+0x4]
  4219d8:	movzx  ebx,WORD PTR [rdi+0x1c]
  4219dc:	cmp    esi,ebx
  4219de:	ja     421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4219e0:	add    eax,DWORD PTR [rdi+0x18]
  4219e3:	test   al,0x3
  4219e5:	jne    421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4219e7:	test   eax,eax
  4219e9:	je     421adf <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  4219ef:	mov    r15,QWORD PTR [rdi]
  4219f2:	mov    esi,eax
  4219f4:	mov    ebx,DWORD PTR [r15+rsi*1]
  4219f8:	add    ebx,eax
  4219fa:	cmp    ebx,eax
  4219fc:	jbe    421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  4219fe:	mov    eax,DWORD PTR [rdi+0x8]
  421a01:	mov    r14d,ebx
  421a04:	lea    rsi,[r14+0x4]
  421a08:	cmp    rsi,rax
  421a0b:	ja     421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  421a0d:	and    esi,0x3
  421a10:	test   rsi,rsi
  421a13:	jne    421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  421a15:	movzx  esi,r9w
  421a19:	sub    eax,ebx
  421a1b:	add    eax,0xfffffffc
  421a1e:	imul   esi,DWORD PTR [r15+r14*1]
  421a23:	cmp    eax,esi
  421a25:	jb     421a45 <flatcc_verify_struct_as_nested_root@@Base+0x95>
  421a27:	jmp    421adf <flatcc_verify_struct_as_nested_root@@Base+0x12f>
  421a2c:	test   edx,edx
  421a2e:	je     421ad0 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  421a34:	cmp    si,bx
  421a37:	jae    421ac4 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  421a3d:	mov    r10,QWORD PTR [rdi+0x10]
  421a41:	movzx  r11d,si
  421a45:	movzx  esi,WORD PTR [r10+r11*1]
  421a4a:	test   esi,esi
  421a4c:	je     421ac4 <flatcc_verify_struct_as_nested_root@@Base+0x114>
  421a4e:	lea    ecx,[rsi+0x4]
  421a51:	movzx  edx,WORD PTR [rdi+0x1c]
  421a55:	mov    eax,0xd
  421a5a:	cmp    ecx,edx
  421a5c:	ja     421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421a62:	add    esi,DWORD PTR [rdi+0x18]
  421a65:	mov    eax,0xc
  421a6a:	test   sil,0x3
  421a6e:	jne    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421a74:	test   esi,esi
  421a76:	je     421b1a <flatcc_verify_struct_as_nested_root@@Base+0x16a>
  421a7c:	mov    rcx,QWORD PTR [rdi]
  421a7f:	mov    eax,esi
  421a81:	mov    edx,DWORD PTR [rcx+rax*1]
  421a84:	add    edx,esi
  421a86:	mov    eax,0x10
  421a8b:	cmp    edx,esi
  421a8d:	jbe    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421a93:	mov    esi,DWORD PTR [rdi+0x8]
  421a96:	mov    edi,edx
  421a98:	lea    rbx,[rdi+0x4]
  421a9c:	cmp    rbx,rsi
  421a9f:	ja     421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421aa1:	and    ebx,0x3
  421aa4:	test   rbx,rbx
  421aa7:	jne    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421aa9:	movzx  eax,r9w
  421aad:	sub    esi,edx
  421aaf:	add    esi,0xfffffffc
  421ab2:	imul   eax,DWORD PTR [rcx+rdi*1]
  421ab6:	xor    ecx,ecx
  421ab8:	cmp    esi,eax
  421aba:	mov    eax,0x1a
  421abf:	cmovae eax,ecx
  421ac2:	jmp    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421ac4:	xor    eax,eax
  421ac6:	test   edx,edx
  421ac8:	setne  al
  421acb:	shl    eax,0x2
  421ace:	jmp    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421ad0:	xor    eax,eax
  421ad2:	cmp    si,bx
  421ad5:	jae    421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421ad7:	mov    r10,QWORD PTR [rdi+0x10]
  421adb:	movzx  r11d,si
  421adf:	movzx  esi,WORD PTR [r10+r11*1]
  421ae4:	xor    eax,eax
  421ae6:	test   rsi,rsi
  421ae9:	je     421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421aeb:	mov    edx,DWORD PTR [rdi+0x18]
  421aee:	add    rdx,QWORD PTR [rdi]
  421af1:	add    rdx,rsi
  421af4:	je     421b1c <flatcc_verify_struct_as_nested_root@@Base+0x16c>
  421af6:	mov    eax,DWORD PTR [rdx]
  421af8:	mov    esi,DWORD PTR [rax+rdx*1]
  421afb:	lea    rdi,[rax+rdx*1]
  421aff:	add    rdi,0x4
  421b03:	movzx  eax,r9w
  421b07:	mov    rdx,rcx
  421b0a:	mov    rcx,r8
  421b0d:	mov    r8d,eax
  421b10:	pop    rbx
  421b11:	pop    r14
  421b13:	pop    r15
  421b15:	jmp    4215d0 <flatcc_verify_struct_as_root@@Base>
  421b1a:	xor    eax,eax
  421b1c:	pop    rbx
  421b1d:	pop    r14
  421b1f:	pop    r15
  421b21:	ret    
  421b22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b2c:	nop    DWORD PTR [rax+0x0]

0000000000421b30 <flatcc_verify_table_as_nested_root@@Base>:
  421b30:	push   rbp
  421b31:	push   r15
  421b33:	push   r14
  421b35:	push   r13
  421b37:	push   r12
  421b39:	push   rbx
  421b3a:	sub    rsp,0x28
  421b3e:	mov    r14,r9
  421b41:	mov    r15,rcx
  421b44:	mov    rbx,rdi
  421b47:	lea    esi,[rsi+rsi*1]
  421b4a:	add    esi,0x4
  421b4d:	movzx  ebp,WORD PTR [rdi+0x1e]
  421b51:	cmp    si,bp
  421b54:	jae    421bbe <flatcc_verify_table_as_nested_root@@Base+0x8e>
  421b56:	mov    rax,QWORD PTR [rbx+0x10]
  421b5a:	movzx  ecx,si
  421b5d:	movzx  edi,WORD PTR [rax+rcx*1]
  421b61:	test   edi,edi
  421b63:	je     421bbe <flatcc_verify_table_as_nested_root@@Base+0x8e>
  421b65:	lea    esi,[rdi+0x4]
  421b68:	movzx  ebp,WORD PTR [rbx+0x1c]
  421b6c:	cmp    esi,ebp
  421b6e:	ja     421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421b70:	add    edi,DWORD PTR [rbx+0x18]
  421b73:	test   dil,0x3
  421b77:	jne    421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421b79:	test   edi,edi
  421b7b:	je     421c84 <flatcc_verify_table_as_nested_root@@Base+0x154>
  421b81:	mov    r10,QWORD PTR [rbx]
  421b84:	mov    esi,edi
  421b86:	mov    ebp,DWORD PTR [r10+rsi*1]
  421b8a:	add    ebp,edi
  421b8c:	cmp    ebp,edi
  421b8e:	jbe    421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421b90:	mov    edi,DWORD PTR [rbx+0x8]
  421b93:	mov    r9d,ebp
  421b96:	lea    rsi,[r9+0x4]
  421b9a:	cmp    rsi,rdi
  421b9d:	ja     421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421b9f:	and    esi,0x3
  421ba2:	test   rsi,rsi
  421ba5:	jne    421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421ba7:	movzx  esi,r8w
  421bab:	sub    edi,ebp
  421bad:	add    edi,0xfffffffc
  421bb0:	imul   esi,DWORD PTR [r10+r9*1]
  421bb5:	cmp    edi,esi
  421bb7:	jb     421bd6 <flatcc_verify_table_as_nested_root@@Base+0xa6>
  421bb9:	jmp    421c84 <flatcc_verify_table_as_nested_root@@Base+0x154>
  421bbe:	test   edx,edx
  421bc0:	je     421c72 <flatcc_verify_table_as_nested_root@@Base+0x142>
  421bc6:	cmp    si,bp
  421bc9:	jae    421c63 <flatcc_verify_table_as_nested_root@@Base+0x133>
  421bcf:	mov    rax,QWORD PTR [rbx+0x10]
  421bd3:	movzx  ecx,si
  421bd6:	movzx  esi,WORD PTR [rax+rcx*1]
  421bda:	test   esi,esi
  421bdc:	je     421c63 <flatcc_verify_table_as_nested_root@@Base+0x133>
  421be2:	lea    ecx,[rsi+0x4]
  421be5:	movzx  edx,WORD PTR [rbx+0x1c]
  421be9:	mov    eax,0xd
  421bee:	cmp    ecx,edx
  421bf0:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421bf6:	add    esi,DWORD PTR [rbx+0x18]
  421bf9:	mov    eax,0xc
  421bfe:	test   sil,0x3
  421c02:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c08:	test   esi,esi
  421c0a:	je     421d36 <flatcc_verify_table_as_nested_root@@Base+0x206>
  421c10:	mov    rcx,QWORD PTR [rbx]
  421c13:	mov    eax,esi
  421c15:	mov    edx,DWORD PTR [rcx+rax*1]
  421c18:	add    edx,esi
  421c1a:	mov    eax,0x10
  421c1f:	cmp    edx,esi
  421c21:	jbe    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c27:	mov    esi,DWORD PTR [rbx+0x8]
  421c2a:	mov    edi,edx
  421c2c:	lea    rbp,[rdi+0x4]
  421c30:	cmp    rbp,rsi
  421c33:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c39:	and    ebp,0x3
  421c3c:	test   rbp,rbp
  421c3f:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c45:	movzx  eax,r8w
  421c49:	sub    esi,edx
  421c4b:	add    esi,0xfffffffc
  421c4e:	imul   eax,DWORD PTR [rcx+rdi*1]
  421c52:	xor    ecx,ecx
  421c54:	cmp    esi,eax
  421c56:	mov    eax,0x1a
  421c5b:	cmovae eax,ecx
  421c5e:	jmp    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c63:	xor    eax,eax
  421c65:	test   edx,edx
  421c67:	setne  al
  421c6a:	shl    eax,0x2
  421c6d:	jmp    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c72:	xor    eax,eax
  421c74:	cmp    si,bp
  421c77:	jae    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c7d:	mov    rax,QWORD PTR [rbx+0x10]
  421c81:	movzx  ecx,si
  421c84:	movzx  ecx,WORD PTR [rax+rcx*1]
  421c88:	xor    eax,eax
  421c8a:	test   rcx,rcx
  421c8d:	je     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421c93:	mov    r13d,DWORD PTR [rbx+0x18]
  421c97:	add    r13,QWORD PTR [rbx]
  421c9a:	add    r13,rcx
  421c9d:	je     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421ca3:	mov    ebp,DWORD PTR [r13+0x0]
  421ca7:	lea    r12,[r13*1+0x4]
  421caf:	add    r12,rbp
  421cb2:	mov    eax,0x5
  421cb7:	test   r12b,0x3
  421cbb:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421cbd:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  421cc2:	mov    eax,0x6
  421cc7:	cmp    ecx,0xfffffff7
  421cca:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421ccc:	mov    eax,0x1
  421cd1:	cmp    ecx,0x8
  421cd4:	jb     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421cd6:	test   r15,r15
  421cd9:	je     421d47 <flatcc_verify_table_as_nested_root@@Base+0x217>
  421cdb:	mov    DWORD PTR [rsp],0x0
  421ce2:	mov    rdi,rsp
  421ce5:	mov    edx,0x4
  421cea:	mov    rsi,r15
  421ced:	mov    QWORD PTR [rsp+0x20],rcx
  421cf2:	call   406040 <strncpy@plt>
  421cf7:	mov    rcx,QWORD PTR [rsp+0x20]
  421cfc:	mov    eax,DWORD PTR [rsp]
  421cff:	test   eax,eax
  421d01:	je     421d47 <flatcc_verify_table_as_nested_root@@Base+0x217>
  421d03:	add    rbp,r13
  421d06:	cmp    DWORD PTR [rbp+0x8],eax
  421d09:	je     421d47 <flatcc_verify_table_as_nested_root@@Base+0x217>
  421d0b:	mov    DWORD PTR [rsp],0x0
  421d12:	mov    rdi,rsp
  421d15:	mov    edx,0x4
  421d1a:	mov    rsi,r15
  421d1d:	call   406040 <strncpy@plt>
  421d22:	mov    ecx,DWORD PTR [rsp]
  421d25:	xor    eax,eax
  421d27:	cmp    DWORD PTR [rbp+0x8],ecx
  421d2a:	setne  al
  421d2d:	add    eax,eax
  421d2f:	test   ecx,ecx
  421d31:	cmove  eax,ecx
  421d34:	jmp    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d36:	xor    eax,eax
  421d38:	add    rsp,0x28
  421d3c:	pop    rbx
  421d3d:	pop    r12
  421d3f:	pop    r13
  421d41:	pop    r14
  421d43:	pop    r15
  421d45:	pop    rbp
  421d46:	ret    
  421d47:	mov    esi,DWORD PTR [r12]
  421d4b:	mov    eax,DWORD PTR [rbx+0xc]
  421d4e:	dec    eax
  421d50:	mov    DWORD PTR [rsp+0xc],eax
  421d54:	je     421dff <flatcc_verify_table_as_nested_root@@Base+0x2cf>
  421d5a:	mov    eax,0xf
  421d5f:	test   esi,esi
  421d61:	je     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d63:	lea    rdx,[rsi+0x4]
  421d67:	cmp    rdx,rcx
  421d6a:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d6c:	mov    edx,esi
  421d6e:	and    edx,0x3
  421d71:	test   rdx,rdx
  421d74:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d76:	mov    DWORD PTR [rsp+0x18],esi
  421d7a:	mov    edi,esi
  421d7c:	sub    edi,DWORD PTR [r12+rsi*1]
  421d80:	mov    eax,0x1d
  421d85:	test   edi,0x80000001
  421d8b:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d8d:	mov    edx,edi
  421d8f:	lea    rbx,[rdx+0x2]
  421d93:	mov    eax,0x1b
  421d98:	cmp    rbx,rcx
  421d9b:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421d9d:	movzx  ebp,WORD PTR [r12+rdx*1]
  421da2:	mov    WORD PTR [rsp+0x1e],bp
  421da7:	mov    eax,0x1e
  421dac:	test   bpl,0x1
  421db0:	jne    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421db2:	add    edi,ebp
  421db4:	cmp    edi,ecx
  421db6:	ja     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421db8:	mov    eax,0x1c
  421dbd:	cmp    bp,0x4
  421dc1:	jb     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421dc7:	mov    eax,ebx
  421dc9:	movzx  ebp,WORD PTR [r12+rax*1]
  421dce:	mov    WORD PTR [rsp+0x1c],bp
  421dd3:	mov    edi,ecx
  421dd5:	sub    edi,esi
  421dd7:	mov    eax,0x14
  421ddc:	cmp    edi,ebp
  421dde:	jb     421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421de4:	add    rdx,r12
  421de7:	mov    QWORD PTR [rsp+0x10],rdx
  421dec:	mov    QWORD PTR [rsp],r12
  421df0:	mov    DWORD PTR [rsp+0x8],ecx
  421df4:	mov    rdi,rsp
  421df7:	call   r14
  421dfa:	jmp    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421dff:	mov    eax,0x3
  421e04:	jmp    421d38 <flatcc_verify_table_as_nested_root@@Base+0x208>
  421e09:	nop    DWORD PTR [rax+0x0]

0000000000421e10 <flatcc_verify_union_field@@Base>:
  421e10:	push   rbp
  421e11:	push   r14
  421e13:	push   rbx
  421e14:	sub    rsp,0x20
  421e18:	lea    eax,[rsi+rsi*1]
  421e1b:	add    eax,0x2
  421e1e:	add    esi,esi
  421e20:	movzx  r10d,WORD PTR [rdi+0x1e]
  421e25:	cmp    ax,r10w
  421e29:	jae    421f08 <flatcc_verify_union_field@@Base+0xf8>
  421e2f:	mov    rbx,QWORD PTR [rdi+0x10]
  421e33:	movzx  eax,ax
  421e36:	movzx  r9d,WORD PTR [rbx+rax*1]
  421e3b:	test   r9,r9
  421e3e:	je     421f08 <flatcc_verify_union_field@@Base+0xf8>
  421e44:	mov    eax,0xd
  421e49:	cmp    r9w,WORD PTR [rdi+0x1c]
  421e4e:	jae    421f2e <flatcc_verify_union_field@@Base+0x11e>
  421e54:	mov    r8,QWORD PTR [rdi]
  421e57:	add    esi,0x4
  421e5a:	mov    al,0x1
  421e5c:	cmp    si,r10w
  421e60:	jae    421e6d <flatcc_verify_union_field@@Base+0x5d>
  421e62:	movzx  eax,si
  421e65:	cmp    WORD PTR [rbx+rax*1],0x0
  421e6a:	sete   al
  421e6d:	mov    r14d,DWORD PTR [rdi+0x18]
  421e71:	lea    r11,[r8+r14*1]
  421e75:	mov    bpl,BYTE PTR [r9+r11*1]
  421e79:	test   al,al
  421e7b:	jne    421e8b <flatcc_verify_union_field@@Base+0x7b>
  421e7d:	mov    eax,0x18
  421e82:	test   bpl,bpl
  421e85:	je     421f2e <flatcc_verify_union_field@@Base+0x11e>
  421e8b:	xor    eax,eax
  421e8d:	test   bpl,bpl
  421e90:	je     421f2e <flatcc_verify_union_field@@Base+0x11e>
  421e96:	cmp    si,r10w
  421e9a:	jae    421f37 <flatcc_verify_union_field@@Base+0x127>
  421ea0:	movzx  eax,si
  421ea3:	movzx  esi,WORD PTR [rbx+rax*1]
  421ea7:	test   esi,esi
  421ea9:	je     421f37 <flatcc_verify_union_field@@Base+0x127>
  421eaf:	lea    edx,[rsi+0x4]
  421eb2:	movzx  ebp,WORD PTR [rdi+0x1c]
  421eb6:	mov    eax,0xd
  421ebb:	cmp    edx,ebp
  421ebd:	ja     421f2e <flatcc_verify_union_field@@Base+0x11e>
  421ebf:	add    r14d,esi
  421ec2:	mov    eax,0xc
  421ec7:	test   r14b,0x3
  421ecb:	jne    421f2e <flatcc_verify_union_field@@Base+0x11e>
  421ecd:	mov    eax,0x0
  421ed2:	test   r14d,r14d
  421ed5:	je     421f2e <flatcc_verify_union_field@@Base+0x11e>
  421ed7:	mov    QWORD PTR [rsp],r8
  421edb:	mov    eax,DWORD PTR [rdi+0x8]
  421ede:	mov    DWORD PTR [rsp+0x8],eax
  421ee2:	mov    eax,DWORD PTR [rdi+0xc]
  421ee5:	mov    DWORD PTR [rsp+0xc],eax
  421ee9:	mov    DWORD PTR [rsp+0x14],r14d
  421eee:	mov    eax,r14d
  421ef1:	mov    eax,DWORD PTR [r8+rax*1]
  421ef5:	mov    DWORD PTR [rsp+0x18],eax
  421ef9:	mov    al,BYTE PTR [r11+r9*1]
  421efd:	mov    BYTE PTR [rsp+0x10],al
  421f01:	mov    rdi,rsp
  421f04:	call   rcx
  421f06:	jmp    421f2e <flatcc_verify_union_field@@Base+0x11e>
  421f08:	add    esi,0x4
  421f0b:	cmp    si,r10w
  421f0f:	jae    421f24 <flatcc_verify_union_field@@Base+0x114>
  421f11:	mov    rcx,QWORD PTR [rdi+0x10]
  421f15:	movzx  esi,si
  421f18:	mov    eax,0x17
  421f1d:	cmp    WORD PTR [rcx+rsi*1],0x0
  421f22:	jne    421f2e <flatcc_verify_union_field@@Base+0x11e>
  421f24:	test   edx,edx
  421f26:	mov    eax,0x15
  421f2b:	cmove  eax,edx
  421f2e:	add    rsp,0x20
  421f32:	pop    rbx
  421f33:	pop    r14
  421f35:	pop    rbp
  421f36:	ret    
  421f37:	xor    eax,eax
  421f39:	test   edx,edx
  421f3b:	setne  al
  421f3e:	shl    eax,0x2
  421f41:	jmp    421f2e <flatcc_verify_union_field@@Base+0x11e>
  421f43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f4d:	nop    DWORD PTR [rax]

0000000000421f50 <flatcc_verify_union_vector_field@@Base>:
  421f50:	push   rbp
  421f51:	push   r15
  421f53:	push   r14
  421f55:	push   r13
  421f57:	push   r12
  421f59:	push   rbx
  421f5a:	sub    rsp,0x28
  421f5e:	mov    r12,rcx
  421f61:	lea    ebx,[rsi+rsi*1]
  421f64:	add    ebx,0x2
  421f67:	add    esi,esi
  421f69:	movzx  ecx,WORD PTR [rdi+0x1e]
  421f6d:	cmp    bx,cx
  421f70:	jae    421f82 <flatcc_verify_union_vector_field@@Base+0x32>
  421f72:	mov    r10,QWORD PTR [rdi+0x10]
  421f76:	movzx  r14d,bx
  421f7a:	cmp    WORD PTR [r10+r14*1],0x0
  421f80:	jne    421fb7 <flatcc_verify_union_vector_field@@Base+0x67>
  421f82:	lea    eax,[rsi+0x4]
  421f85:	cmp    ax,cx
  421f88:	jae    422015 <flatcc_verify_union_vector_field@@Base+0xc5>
  421f8e:	test   edx,edx
  421f90:	je     421faa <flatcc_verify_union_vector_field@@Base+0x5a>
  421f92:	mov    r8,QWORD PTR [rdi+0x10]
  421f96:	movzx  ebp,ax
  421f99:	mov    eax,0x16
  421f9e:	cmp    WORD PTR [r8+rbp*1],0x0
  421fa4:	je     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  421faa:	cmp    bx,cx
  421fad:	jae    422024 <flatcc_verify_union_vector_field@@Base+0xd4>
  421faf:	mov    r10,QWORD PTR [rdi+0x10]
  421fb3:	movzx  r14d,bx
  421fb7:	movzx  ebp,WORD PTR [r10+r14*1]
  421fbc:	test   ebp,ebp
  421fbe:	je     422024 <flatcc_verify_union_vector_field@@Base+0xd4>
  421fc0:	lea    ebx,[rbp+0x4]
  421fc3:	movzx  eax,WORD PTR [rdi+0x1c]
  421fc7:	cmp    ebx,eax
  421fc9:	ja     42203d <flatcc_verify_union_vector_field@@Base+0xed>
  421fcb:	add    ebp,DWORD PTR [rdi+0x18]
  421fce:	test   bpl,0x3
  421fd2:	jne    42203d <flatcc_verify_union_vector_field@@Base+0xed>
  421fd4:	test   ebp,ebp
  421fd6:	je     4220d7 <flatcc_verify_union_vector_field@@Base+0x187>
  421fdc:	mov    r8,QWORD PTR [rdi]
  421fdf:	mov    eax,ebp
  421fe1:	mov    ebx,DWORD PTR [r8+rax*1]
  421fe5:	add    ebx,ebp
  421fe7:	cmp    ebx,ebp
  421fe9:	jbe    42203d <flatcc_verify_union_vector_field@@Base+0xed>
  421feb:	mov    r11d,DWORD PTR [rdi+0x8]
  421fef:	mov    r9d,ebx
  421ff2:	lea    rbp,[r9+0x4]
  421ff6:	cmp    rbp,r11
  421ff9:	ja     42203d <flatcc_verify_union_vector_field@@Base+0xed>
  421ffb:	and    ebp,0x3
  421ffe:	test   rbp,rbp
  422001:	jne    42203d <flatcc_verify_union_vector_field@@Base+0xed>
  422003:	sub    r11d,ebx
  422006:	add    r11d,0xfffffffc
  42200a:	cmp    r11d,DWORD PTR [r8+r9*1]
  42200e:	jb     42203d <flatcc_verify_union_vector_field@@Base+0xed>
  422010:	jmp    4220d7 <flatcc_verify_union_vector_field@@Base+0x187>
  422015:	mov    eax,0x16
  42201a:	test   edx,edx
  42201c:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422022:	jmp    421faa <flatcc_verify_union_vector_field@@Base+0x5a>
  422024:	test   edx,edx
  422026:	je     4220c4 <flatcc_verify_union_vector_field@@Base+0x174>
  42202c:	cmp    bx,cx
  42202f:	jae    4221e4 <flatcc_verify_union_vector_field@@Base+0x294>
  422035:	mov    r10,QWORD PTR [rdi+0x10]
  422039:	movzx  r14d,bx
  42203d:	movzx  esi,WORD PTR [r10+r14*1]
  422042:	test   esi,esi
  422044:	je     4221e4 <flatcc_verify_union_vector_field@@Base+0x294>
  42204a:	lea    ecx,[rsi+0x4]
  42204d:	movzx  edx,WORD PTR [rdi+0x1c]
  422051:	mov    eax,0xd
  422056:	cmp    ecx,edx
  422058:	ja     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42205e:	add    esi,DWORD PTR [rdi+0x18]
  422061:	mov    eax,0xc
  422066:	test   sil,0x3
  42206a:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422070:	test   esi,esi
  422072:	je     4221fd <flatcc_verify_union_vector_field@@Base+0x2ad>
  422078:	mov    rcx,QWORD PTR [rdi]
  42207b:	mov    eax,esi
  42207d:	mov    edx,DWORD PTR [rcx+rax*1]
  422080:	add    edx,esi
  422082:	mov    eax,0x10
  422087:	cmp    edx,esi
  422089:	jbe    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42208f:	mov    esi,DWORD PTR [rdi+0x8]
  422092:	mov    edi,edx
  422094:	lea    rbp,[rdi+0x4]
  422098:	cmp    rbp,rsi
  42209b:	ja     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220a1:	and    ebp,0x3
  4220a4:	test   rbp,rbp
  4220a7:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220ad:	sub    esi,edx
  4220af:	add    esi,0xfffffffc
  4220b2:	xor    edx,edx
  4220b4:	cmp    esi,DWORD PTR [rcx+rdi*1]
  4220b7:	mov    eax,0x1a
  4220bc:	cmovae eax,edx
  4220bf:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220c4:	xor    eax,eax
  4220c6:	cmp    bx,cx
  4220c9:	jae    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220cf:	mov    r10,QWORD PTR [rdi+0x10]
  4220d3:	movzx  r14d,bx
  4220d7:	movzx  ebp,WORD PTR [r10+r14*1]
  4220dc:	xor    eax,eax
  4220de:	test   rbp,rbp
  4220e1:	je     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220e7:	mov    r15,QWORD PTR [rdi]
  4220ea:	mov    r8d,DWORD PTR [rdi+0x18]
  4220ee:	lea    r9,[r15+r8*1]
  4220f2:	add    r9,rbp
  4220f5:	je     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4220fb:	add    esi,0x4
  4220fe:	cmp    si,cx
  422101:	jae    4221e4 <flatcc_verify_union_vector_field@@Base+0x294>
  422107:	movzx  eax,si
  42210a:	movzx  ecx,WORD PTR [r10+rax*1]
  42210f:	test   ecx,ecx
  422111:	je     4221e4 <flatcc_verify_union_vector_field@@Base+0x294>
  422117:	lea    edx,[rcx+0x4]
  42211a:	movzx  esi,WORD PTR [rdi+0x1c]
  42211e:	mov    eax,0xd
  422123:	cmp    edx,esi
  422125:	ja     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42212b:	lea    ebx,[r8+rcx*1]
  42212f:	mov    eax,0xc
  422134:	test   bl,0x3
  422137:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42213d:	mov    eax,0x0
  422142:	test   ebx,ebx
  422144:	je     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42214a:	mov    esi,DWORD PTR [rdi+0xc]
  42214d:	test   esi,esi
  42214f:	jle    422201 <flatcc_verify_union_vector_field@@Base+0x2b1>
  422155:	mov    eax,ebx
  422157:	mov    edx,DWORD PTR [r15+rax*1]
  42215b:	lea    ebp,[rdx+rbx*1]
  42215e:	mov    eax,0x10
  422163:	cmp    ebp,ebx
  422165:	jbe    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42216b:	mov    r10d,DWORD PTR [rdi+0x8]
  42216f:	mov    ebx,ebp
  422171:	lea    rdi,[rbx+0x4]
  422175:	cmp    rdi,r10
  422178:	ja     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42217a:	and    edi,0x3
  42217d:	test   rdi,rdi
  422180:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422182:	mov    ebx,DWORD PTR [r15+rbx*1]
  422186:	mov    eax,0x19
  42218b:	cmp    ebx,0x3fffffff
  422191:	ja     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422193:	mov    edi,r10d
  422196:	sub    edi,ebp
  422198:	add    edi,0xfffffffc
  42219b:	lea    ebp,[rbx*4+0x0]
  4221a2:	mov    eax,0x1a
  4221a7:	cmp    edi,ebp
  4221a9:	jb     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4221ab:	mov    r13d,DWORD PTR [r9]
  4221ae:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  4221b3:	mov    eax,0x22
  4221b8:	cmp    ebx,edi
  4221ba:	jne    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  4221bc:	dec    esi
  4221be:	mov    QWORD PTR [rsp+0x8],r15
  4221c3:	mov    DWORD PTR [rsp+0x10],r10d
  4221c8:	mov    DWORD PTR [rsp+0x14],esi
  4221cc:	test   edi,edi
  4221ce:	je     4221fd <flatcc_verify_union_vector_field@@Base+0x2ad>
  4221d0:	mov    rbx,rdi
  4221d3:	add    r13,r9
  4221d6:	add    edx,r8d
  4221d9:	lea    ebp,[rcx+rdx*1]
  4221dc:	add    ebp,0x4
  4221df:	xor    r14d,r14d
  4221e2:	jmp    422219 <flatcc_verify_union_vector_field@@Base+0x2c9>
  4221e4:	xor    eax,eax
  4221e6:	test   edx,edx
  4221e8:	setne  al
  4221eb:	shl    eax,0x2
  4221ee:	add    rsp,0x28
  4221f2:	pop    rbx
  4221f3:	pop    r12
  4221f5:	pop    r13
  4221f7:	pop    r14
  4221f9:	pop    r15
  4221fb:	pop    rbp
  4221fc:	ret    
  4221fd:	xor    eax,eax
  4221ff:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422201:	mov    eax,0x3
  422206:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422208:	test   cl,cl
  42220a:	jne    422256 <flatcc_verify_union_vector_field@@Base+0x306>
  42220c:	inc    r14
  42220f:	add    ebp,0x4
  422212:	xor    eax,eax
  422214:	cmp    rbx,r14
  422217:	je     4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422219:	mov    eax,ebp
  42221b:	mov    eax,DWORD PTR [r15+rax*1]
  42221f:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  422225:	test   eax,eax
  422227:	je     422208 <flatcc_verify_union_vector_field@@Base+0x2b8>
  422229:	test   cl,cl
  42222b:	je     42224f <flatcc_verify_union_vector_field@@Base+0x2ff>
  42222d:	mov    BYTE PTR [rsp+0x18],cl
  422231:	mov    DWORD PTR [rsp+0x1c],ebp
  422235:	mov    DWORD PTR [rsp+0x20],eax
  422239:	lea    rdi,[rsp+0x8]
  42223e:	call   r12
  422241:	test   eax,eax
  422243:	je     42220c <flatcc_verify_union_vector_field@@Base+0x2bc>
  422245:	lea    rdi,[rsp+0x8]
  42224a:	call   r12
  42224d:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42224f:	mov    eax,0x21
  422254:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  422256:	mov    eax,0x20
  42225b:	jmp    4221ee <flatcc_verify_union_vector_field@@Base+0x29e>
  42225d:	nop    DWORD PTR [rax]

0000000000422260 <grisu3_diy_fp_encode_double@@Base>:
  422260:	push   rbp
  422261:	push   r15
  422263:	push   r14
  422265:	push   r13
  422267:	push   r12
  422269:	push   rbx
  42226a:	push   rax
  42226b:	xor    ebx,ebx
  42226d:	test   ecx,ecx
  42226f:	setne  r10b
  422273:	test   rdi,rdi
  422276:	je     4225b4 <grisu3_diy_fp_encode_double@@Base+0x354>
  42227c:	movabs r9,0x40000000000000
  422286:	xor    eax,eax
  422288:	mov    rcx,rdi
  42228b:	shr    rcx,0x36
  42228f:	jne    4222ac <grisu3_diy_fp_encode_double@@Base+0x4c>
  422291:	xor    eax,eax
  422293:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42229d:	nop    DWORD PTR [rax]
  4222a0:	shl    rdi,0xa
  4222a4:	add    eax,0xfffffff6
  4222a7:	cmp    rdi,r9
  4222aa:	jb     4222a0 <grisu3_diy_fp_encode_double@@Base+0x40>
  4222ac:	sub    esi,edx
  4222ae:	test   rdi,rdi
  4222b1:	js     4222ca <grisu3_diy_fp_encode_double@@Base+0x6a>
  4222b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4222bd:	nop    DWORD PTR [rax]
  4222c0:	add    rdi,rdi
  4222c3:	dec    eax
  4222c5:	test   rdi,rdi
  4222c8:	jns    4222c0 <grisu3_diy_fp_encode_double@@Base+0x60>
  4222ca:	cmp    esi,0xfffffea3
  4222d0:	jle    4225d3 <grisu3_diy_fp_encode_double@@Base+0x373>
  4222d6:	cmp    esi,0x15c
  4222dc:	jge    4225f2 <grisu3_diy_fp_encode_double@@Base+0x392>
  4222e2:	lea    ecx,[rsi+0x15c]
  4222e8:	sar    ecx,0x1f
  4222eb:	shr    ecx,0x1d
  4222ee:	lea    ecx,[rsi+rcx*1]
  4222f1:	add    ecx,0x15c
  4222f7:	sar    ecx,0x3
  4222fa:	movsxd r11,ecx
  4222fd:	shl    r11,0x4
  422301:	lea    r14,[rip+0x15478]        # 437780 <flatcc_builder_padding_base@@Base+0x1d60>
  422308:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  42230e:	cmp    esi,ecx
  422310:	jl     422611 <grisu3_diy_fp_encode_double@@Base+0x3b1>
  422316:	lea    ebp,[rcx+0x8]
  422319:	cmp    ebp,esi
  42231b:	jle    422630 <grisu3_diy_fp_encode_double@@Base+0x3d0>
  422321:	mov    bl,r10b
  422324:	shl    ebx,0x2
  422327:	mov    ebp,eax
  422329:	neg    bpl
  42232c:	shlx   r10d,ebx,ebp
  422331:	cmp    esi,ecx
  422333:	je     4223c5 <grisu3_diy_fp_encode_double@@Base+0x165>
  422339:	not    ecx
  42233b:	add    esi,ecx
  42233d:	cmp    esi,0x7
  422340:	jae    42264f <grisu3_diy_fp_encode_double@@Base+0x3ef>
  422346:	movsxd rcx,esi
  422349:	shl    rcx,0x4
  42234d:	lea    rbx,[rip+0x153bc]        # 437710 <flatcc_builder_padding_base@@Base+0x1cf0>
  422354:	mov    rbp,QWORD PTR [rcx+rbx*1]
  422358:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  42235d:	mov    rbx,rdi
  422360:	shr    rbx,0x20
  422364:	mov    r12d,edi
  422367:	mov    edi,ebp
  422369:	mov    rcx,rbp
  42236c:	shr    rcx,0x20
  422370:	mov    r13,rcx
  422373:	imul   r13,rbx
  422377:	imul   rcx,r12
  42237b:	imul   rbx,rdi
  42237f:	imul   rdi,r12
  422383:	shr    rdi,0x20
  422387:	mov    ebp,ebx
  422389:	add    rbp,rdi
  42238c:	mov    edi,ecx
  42238e:	add    rdi,rbp
  422391:	sub    rdi,0xffffffff80000000
  422398:	shr    rbx,0x20
  42239c:	add    rbx,r13
  42239f:	shr    rcx,0x20
  4223a3:	add    rcx,rbx
  4223a6:	shr    rdi,0x20
  4223aa:	add    rdi,rcx
  4223ad:	lea    eax,[rax+r15*1]
  4223b1:	add    eax,0x40
  4223b4:	lea    ecx,[rdx+rsi*1]
  4223b7:	add    ecx,0x1
  4223ba:	lea    edx,[r10+0x4]
  4223be:	cmp    ecx,0x13
  4223c1:	cmovg  r10d,edx
  4223c5:	mov    rsi,QWORD PTR [r11+r14*1]
  4223c9:	mov    rdx,rdi
  4223cc:	shr    rdx,0x20
  4223d0:	mov    ecx,edi
  4223d2:	mov    edi,esi
  4223d4:	shr    rsi,0x20
  4223d8:	mov    rbx,rdx
  4223db:	imul   rbx,rsi
  4223df:	imul   rsi,rcx
  4223e3:	imul   rdx,rdi
  4223e7:	imul   rcx,rdi
  4223eb:	shr    rcx,0x20
  4223ef:	mov    edi,edx
  4223f1:	add    rdi,rcx
  4223f4:	mov    ecx,esi
  4223f6:	add    rcx,rdi
  4223f9:	sub    rcx,0xffffffff80000000
  422400:	shr    rdx,0x20
  422404:	add    rdx,rbx
  422407:	shr    rsi,0x20
  42240b:	add    rsi,rdx
  42240e:	shr    rcx,0x20
  422412:	cmp    r10d,0x1
  422416:	sbb    r10d,0x0
  42241a:	add    rcx,rsi
  42241d:	je     4225b4 <grisu3_diy_fp_encode_double@@Base+0x354>
  422423:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  422429:	lea    eax,[rdx+rax*1]
  42242c:	add    eax,0x40
  42242f:	mov    edx,eax
  422431:	cmp    rcx,r9
  422434:	jae    42244c <grisu3_diy_fp_encode_double@@Base+0x1ec>
  422436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422440:	shl    rcx,0xa
  422444:	add    edx,0xfffffff6
  422447:	cmp    rcx,r9
  42244a:	jb     422440 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  42244c:	add    r10d,0x9
  422450:	test   rcx,rcx
  422453:	js     42246a <grisu3_diy_fp_encode_double@@Base+0x20a>
  422455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42245f:	nop
  422460:	add    rcx,rcx
  422463:	dec    edx
  422465:	test   rcx,rcx
  422468:	jns    422460 <grisu3_diy_fp_encode_double@@Base+0x200>
  42246a:	sub    eax,edx
  42246c:	shlx   r14d,r10d,eax
  422471:	lea    eax,[rdx+0x40]
  422474:	xor    ebx,ebx
  422476:	cmp    eax,0xfffffc0d
  42247b:	jg     4224b1 <grisu3_diy_fp_encode_double@@Base+0x251>
  42247d:	mov    ebx,0x40
  422482:	cmp    eax,0xfffffbcf
  422487:	jl     422495 <grisu3_diy_fp_encode_double@@Base+0x235>
  422489:	mov    ebx,0xfffffbce
  42248e:	sub    ebx,edx
  422490:	cmp    ebx,0x3d
  422493:	jl     4224b1 <grisu3_diy_fp_encode_double@@Base+0x251>
  422495:	lea    eax,[rbx-0x3e]
  422498:	shrx   rcx,rcx,rax
  42249d:	lea    edx,[rbx+rdx*1]
  4224a0:	add    edx,0xffffffc2
  4224a3:	sarx   r14d,r14d,eax
  4224a8:	add    r14d,0x9
  4224ac:	mov    ebx,0x3e
  4224b1:	movabs r11,0x1fffffffffffff
  4224bb:	shrx   rdi,rcx,rbx
  4224c0:	add    edx,ebx
  4224c2:	lea    eax,[rbx-0x1]
  4224c5:	mov    esi,0x1
  4224ca:	shlx   rsi,rsi,rax
  4224cf:	lea    r10d,[r14+rsi*8]
  4224d3:	cmp    ebx,r10d
  4224d6:	jl     4224e9 <grisu3_diy_fp_encode_double@@Base+0x289>
  4224d8:	inc    rdi
  4224db:	lea    rax,[r11+0x1]
  4224df:	test   rdi,rax
  4224e2:	je     4224e9 <grisu3_diy_fp_encode_double@@Base+0x289>
  4224e4:	shr    rdi,1
  4224e7:	inc    edx
  4224e9:	and    ecx,esi
  4224eb:	cmp    rdi,r11
  4224ee:	jbe    42250f <grisu3_diy_fp_encode_double@@Base+0x2af>
  4224f0:	dec    r9
  4224f3:	mov    rbx,rdi
  4224f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422500:	shr    rbx,1
  422503:	inc    edx
  422505:	cmp    rdi,r9
  422508:	mov    rdi,rbx
  42250b:	ja     422500 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  42250d:	jmp    422512 <grisu3_diy_fp_encode_double@@Base+0x2b2>
  42250f:	mov    rbx,rdi
  422512:	shl    ecx,0x3
  422515:	shl    esi,0x3
  422518:	vpxor  xmm0,xmm0,xmm0
  42251c:	cmp    edx,0xfffffbce
  422522:	jl     42258d <grisu3_diy_fp_encode_double@@Base+0x32d>
  422524:	movabs r9,0xfffffffffffff
  42252e:	lea    rdi,[r9+0x1]
  422532:	and    rdi,rbx
  422535:	sete   al
  422538:	cmp    edx,0xfffffbce
  42253e:	je     422566 <grisu3_diy_fp_encode_double@@Base+0x306>
  422540:	test   rdi,rdi
  422543:	jne    422566 <grisu3_diy_fp_encode_double@@Base+0x306>
  422545:	movabs rdi,0x8000000000000
  42254f:	nop
  422550:	dec    edx
  422552:	test   rbx,rdi
  422555:	lea    rbx,[rbx+rbx*1]
  422559:	sete   al
  42255c:	jne    422566 <grisu3_diy_fp_encode_double@@Base+0x306>
  42255e:	cmp    edx,0xfffffbce
  422564:	jg     422550 <grisu3_diy_fp_encode_double@@Base+0x2f0>
  422566:	lea    edi,[rdx+0x433]
  42256c:	shl    rdi,0x34
  422570:	xor    ebp,ebp
  422572:	test   al,al
  422574:	cmove  rbp,rdi
  422578:	cmp    edx,0xfffffbce
  42257e:	cmovne rbp,rdi
  422582:	and    rbx,r9
  422585:	or     rbx,rbp
  422588:	vmovq  xmm0,rbx
  42258d:	vmovq  QWORD PTR [r8],xmm0
  422592:	sub    esi,r14d
  422595:	cmp    esi,ecx
  422597:	setge  al
  42259a:	cmp    ecx,r10d
  42259d:	setge  cl
  4225a0:	or     cl,al
  4225a2:	movzx  eax,cl
  4225a5:	add    rsp,0x8
  4225a9:	pop    rbx
  4225aa:	pop    r12
  4225ac:	pop    r13
  4225ae:	pop    r14
  4225b0:	pop    r15
  4225b2:	pop    rbp
  4225b3:	ret    
  4225b4:	lea    rdi,[rip+0x15f63]        # 43851e <flatcc_builder_padding_base@@Base+0x2afe>
  4225bb:	lea    rsi,[rip+0x15f65]        # 438527 <flatcc_builder_padding_base@@Base+0x2b07>
  4225c2:	lea    rcx,[rip+0x15fce]        # 438597 <flatcc_builder_padding_base@@Base+0x2b77>
  4225c9:	mov    edx,0x104
  4225ce:	call   406070 <__assert_fail@plt>
  4225d3:	lea    rdi,[rip+0x15ff6]        # 4385d0 <flatcc_builder_padding_base@@Base+0x2bb0>
  4225da:	lea    rsi,[rip+0x159ff]        # 437fe0 <flatcc_builder_padding_base@@Base+0x25c0>
  4225e1:	lea    rcx,[rip+0x16007]        # 4385ef <flatcc_builder_padding_base@@Base+0x2bcf>
  4225e8:	mov    edx,0x50
  4225ed:	call   406070 <__assert_fail@plt>
  4225f2:	lea    rdi,[rip+0x1602f]        # 438628 <flatcc_builder_padding_base@@Base+0x2c08>
  4225f9:	lea    rsi,[rip+0x159e0]        # 437fe0 <flatcc_builder_padding_base@@Base+0x25c0>
  422600:	lea    rcx,[rip+0x15fe8]        # 4385ef <flatcc_builder_padding_base@@Base+0x2bcf>
  422607:	mov    edx,0x51
  42260c:	call   406070 <__assert_fail@plt>
  422611:	lea    rdi,[rip+0x1603b]        # 438653 <flatcc_builder_padding_base@@Base+0x2c33>
  422618:	lea    rsi,[rip+0x159c1]        # 437fe0 <flatcc_builder_padding_base@@Base+0x25c0>
  42261f:	lea    rcx,[rip+0x15fc9]        # 4385ef <flatcc_builder_padding_base@@Base+0x2bcf>
  422626:	mov    edx,0x58
  42262b:	call   406070 <__assert_fail@plt>
  422630:	lea    rdi,[rip+0x1602b]        # 438662 <flatcc_builder_padding_base@@Base+0x2c42>
  422637:	lea    rsi,[rip+0x159a2]        # 437fe0 <flatcc_builder_padding_base@@Base+0x25c0>
  42263e:	lea    rcx,[rip+0x15faa]        # 4385ef <flatcc_builder_padding_base@@Base+0x2bcf>
  422645:	mov    edx,0x59
  42264a:	call   406070 <__assert_fail@plt>
  42264f:	lea    rdi,[rip+0x1596e]        # 437fc4 <flatcc_builder_padding_base@@Base+0x25a4>
  422656:	lea    rsi,[rip+0x15983]        # 437fe0 <flatcc_builder_padding_base@@Base+0x25c0>
  42265d:	lea    rcx,[rip+0x159ed]        # 438051 <flatcc_builder_padding_base@@Base+0x2631>
  422664:	mov    edx,0xb9
  422669:	call   406070 <__assert_fail@plt>
  42266e:	xchg   ax,ax

0000000000422670 <flatcc_json_parser_error_string@@Base>:
  422670:	cmp    edi,0x22
  422673:	ja     422684 <flatcc_json_parser_error_string@@Base+0x14>
  422675:	movsxd rax,edi
  422678:	lea    rcx,[rip+0x1d649]        # 43fcc8 <flatcc_builder_padding_base@@Base+0xa2a8>
  42267f:	mov    rax,QWORD PTR [rcx+rax*8]
  422683:	ret    
  422684:	lea    rax,[rip+0x14c95]        # 437320 <flatcc_builder_padding_base@@Base+0x1900>
  42268b:	ret    
  42268c:	nop    DWORD PTR [rax+0x0]

0000000000422690 <flatcc_json_parser_set_error@@Base>:
  422690:	mov    rax,rdx
  422693:	cmp    DWORD PTR [rdi+0x1c],0x0
  422697:	je     42269a <flatcc_json_parser_set_error@@Base+0xa>
  422699:	ret    
  42269a:	mov    DWORD PTR [rdi+0x1c],ecx
  42269d:	mov    ecx,DWORD PTR [rdi+0x8]
  4226a0:	mov    edx,esi
  4226a2:	sub    edx,ecx
  4226a4:	inc    edx
  4226a6:	mov    DWORD PTR [rdi+0x18],edx
  4226a9:	mov    QWORD PTR [rdi+0x30],rsi
  4226ad:	ret    
  4226ae:	xchg   ax,ax

00000000004226b0 <flatcc_json_parser_string_part@@Base>:
  4226b0:	mov    rax,rsi
  4226b3:	cmp    rsi,rdx
  4226b6:	je     4226dd <flatcc_json_parser_string_part@@Base+0x2d>
  4226b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4226c0:	movzx  ecx,BYTE PTR [rax]
  4226c3:	cmp    cl,0x20
  4226c6:	jb     4226ec <flatcc_json_parser_string_part@@Base+0x3c>
  4226c8:	cmp    cl,0x22
  4226cb:	je     42270c <flatcc_json_parser_string_part@@Base+0x5c>
  4226cd:	cmp    cl,0x5c
  4226d0:	je     42270c <flatcc_json_parser_string_part@@Base+0x5c>
  4226d2:	inc    rax
  4226d5:	cmp    rdx,rax
  4226d8:	jne    4226c0 <flatcc_json_parser_string_part@@Base+0x10>
  4226da:	mov    rax,rdx
  4226dd:	cmp    DWORD PTR [rdi+0x1c],0x0
  4226e1:	jne    422709 <flatcc_json_parser_string_part@@Base+0x59>
  4226e3:	mov    DWORD PTR [rdi+0x1c],0x14
  4226ea:	jmp    4226f9 <flatcc_json_parser_string_part@@Base+0x49>
  4226ec:	cmp    DWORD PTR [rdi+0x1c],0x0
  4226f0:	jne    422709 <flatcc_json_parser_string_part@@Base+0x59>
  4226f2:	mov    DWORD PTR [rdi+0x1c],0x11
  4226f9:	mov    ecx,DWORD PTR [rdi+0x8]
  4226fc:	mov    esi,eax
  4226fe:	sub    esi,ecx
  422700:	inc    esi
  422702:	mov    DWORD PTR [rdi+0x18],esi
  422705:	mov    QWORD PTR [rdi+0x30],rax
  422709:	mov    rax,rdx
  42270c:	ret    
  42270d:	nop    DWORD PTR [rax]

0000000000422710 <flatcc_json_parser_space_ext@@Base>:
  422710:	mov    rax,rsi
  422713:	lea    rcx,[rip+0x14c16]        # 437330 <flatcc_builder_padding_base@@Base+0x1910>
  42271a:	mov    rsi,rdx
  42271d:	sub    rsi,rax
  422720:	cmp    rsi,0x10
  422724:	jl     422756 <flatcc_json_parser_space_ext@@Base+0x46>
  422726:	cmp    BYTE PTR [rax],0x20
  422729:	jg     4227f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  42272f:	movzx  r8d,WORD PTR [rax]
  422733:	lea    rsi,[rax+0x2]
  422737:	cmp    r8d,0x2020
  42273e:	cmovne rsi,rax
  422742:	lea    rax,[rsi+0x1]
  422746:	cmp    BYTE PTR [rsi],0x20
  422749:	cmovne rax,rsi
  42274d:	cmp    BYTE PTR [rax],0x20
  422750:	jg     4227f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  422756:	cmp    rax,rdx
  422759:	je     4227ed <flatcc_json_parser_space_ext@@Base+0xdd>
  42275f:	nop
  422760:	cmp    BYTE PTR [rax],0x20
  422763:	jne    422770 <flatcc_json_parser_space_ext@@Base+0x60>
  422765:	inc    rax
  422768:	cmp    rdx,rax
  42276b:	jne    422760 <flatcc_json_parser_space_ext@@Base+0x50>
  42276d:	jmp    4227ed <flatcc_json_parser_space_ext@@Base+0xdd>
  42276f:	nop
  422770:	cmp    rdx,rax
  422773:	jne    422795 <flatcc_json_parser_space_ext@@Base+0x85>
  422775:	jmp    4227ed <flatcc_json_parser_space_ext@@Base+0xdd>
  422777:	cmp    BYTE PTR [rax+0x1],0xa
  42277b:	sete   sil
  42277f:	movzx  esi,sil
  422783:	add    rax,rsi
  422786:	inc    DWORD PTR [rdi+0x14]
  422789:	inc    rax
  42278c:	mov    QWORD PTR [rdi+0x8],rax
  422790:	cmp    rax,rdx
  422793:	je     4227ed <flatcc_json_parser_space_ext@@Base+0xdd>
  422795:	movsx  esi,BYTE PTR [rax]
  422798:	cmp    esi,0x20
  42279b:	jg     4227f0 <flatcc_json_parser_space_ext@@Base+0xe0>
  42279d:	add    esi,0xfffffff7
  4227a0:	cmp    esi,0x17
  4227a3:	ja     4227d0 <flatcc_json_parser_space_ext@@Base+0xc0>
  4227a5:	movsxd rsi,DWORD PTR [rcx+rsi*4]
  4227a9:	add    rsi,rcx
  4227ac:	jmp    rsi
  4227ae:	inc    rax
  4227b1:	jmp    422790 <flatcc_json_parser_space_ext@@Base+0x80>
  4227b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227bd:	nop    DWORD PTR [rax]
  4227c0:	mov    rsi,rdx
  4227c3:	sub    rsi,rax
  4227c6:	cmp    rsi,0x2
  4227ca:	jge    422777 <flatcc_json_parser_space_ext@@Base+0x67>
  4227cc:	xor    esi,esi
  4227ce:	jmp    42277f <flatcc_json_parser_space_ext@@Base+0x6f>
  4227d0:	cmp    DWORD PTR [rdi+0x1c],0x0
  4227d4:	jne    4227ed <flatcc_json_parser_space_ext@@Base+0xdd>
  4227d6:	mov    DWORD PTR [rdi+0x1c],0x5
  4227dd:	mov    ecx,DWORD PTR [rdi+0x8]
  4227e0:	mov    esi,eax
  4227e2:	sub    esi,ecx
  4227e4:	inc    esi
  4227e6:	mov    DWORD PTR [rdi+0x18],esi
  4227e9:	mov    QWORD PTR [rdi+0x30],rax
  4227ed:	mov    rax,rdx
  4227f0:	ret    
  4227f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4227fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422800 <flatcc_json_parser_string_escape@@Base>:
  422800:	push   rbp
  422801:	push   r14
  422803:	push   rbx
  422804:	mov    rax,rdx
  422807:	sub    rdx,rsi
  42280a:	cmp    rdx,0x2
  42280e:	jl     422898 <flatcc_json_parser_string_escape@@Base+0x98>
  422814:	cmp    BYTE PTR [rsi],0x5c
  422817:	jne    422898 <flatcc_json_parser_string_escape@@Base+0x98>
  422819:	movsx  ebp,BYTE PTR [rsi+0x1]
  42281d:	add    ebp,0xffffffde
  422820:	cmp    ebp,0x56
  422823:	ja     422898 <flatcc_json_parser_string_escape@@Base+0x98>
  422825:	lea    rbx,[rip+0x14b64]        # 437390 <flatcc_builder_padding_base@@Base+0x1970>
  42282c:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  422830:	add    rbp,rbx
  422833:	jmp    rbp
  422835:	mov    WORD PTR [rcx],0x2201
  42283a:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  42283c:	mov    WORD PTR [rcx],0x2f01
  422841:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  422843:	mov    WORD PTR [rcx],0x5c01
  422848:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  42284a:	mov    WORD PTR [rcx],0x801
  42284f:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  422851:	mov    WORD PTR [rcx],0xc01
  422856:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  422858:	mov    WORD PTR [rcx],0xa01
  42285d:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  42285f:	mov    WORD PTR [rcx],0xd01
  422864:	jmp    42286b <flatcc_json_parser_string_escape@@Base+0x6b>
  422866:	mov    WORD PTR [rcx],0x901
  42286b:	add    rsi,0x2
  42286f:	mov    rax,rsi
  422872:	jmp    4228b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  422874:	cmp    rdx,0x5
  422878:	jle    422898 <flatcc_json_parser_string_escape@@Base+0x98>
  42287a:	movzx  edx,BYTE PTR [rsi+0x2]
  42287e:	lea    ebp,[rdx-0x30]
  422881:	cmp    bpl,0x9
  422885:	ja     4228d5 <flatcc_json_parser_string_escape@@Base+0xd5>
  422887:	movzx  edx,dx
  42288a:	shl    edx,0xc
  42288d:	jmp    4228ee <flatcc_json_parser_string_escape@@Base+0xee>
  42288f:	mov    BYTE PTR [rcx],0x1
  422892:	cmp    rdx,0x3
  422896:	jg     4228bd <flatcc_json_parser_string_escape@@Base+0xbd>
  422898:	mov    BYTE PTR [rcx],0x0
  42289b:	cmp    DWORD PTR [rdi+0x1c],0x0
  42289f:	jne    4228b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  4228a1:	mov    DWORD PTR [rdi+0x1c],0x12
  4228a8:	mov    ecx,DWORD PTR [rdi+0x8]
  4228ab:	mov    edx,esi
  4228ad:	sub    edx,ecx
  4228af:	inc    edx
  4228b1:	mov    DWORD PTR [rdi+0x18],edx
  4228b4:	mov    QWORD PTR [rdi+0x30],rsi
  4228b8:	pop    rbx
  4228b9:	pop    r14
  4228bb:	pop    rbp
  4228bc:	ret    
  4228bd:	mov    dl,BYTE PTR [rsi+0x2]
  4228c0:	lea    ebp,[rdx-0x30]
  4228c3:	cmp    bpl,0x9
  4228c7:	ja     42299c <flatcc_json_parser_string_escape@@Base+0x19c>
  4228cd:	shl    dl,0x4
  4228d0:	jmp    4229b3 <flatcc_json_parser_string_escape@@Base+0x1b3>
  4228d5:	mov    ebx,edx
  4228d7:	or     bl,0x20
  4228da:	add    bl,0x9f
  4228dd:	cmp    bl,0x5
  4228e0:	ja     422898 <flatcc_json_parser_string_escape@@Base+0x98>
  4228e2:	movzx  edx,dx
  4228e5:	shl    edx,0xc
  4228e8:	add    edx,0xffff9000
  4228ee:	mov    r8b,BYTE PTR [rsi+0x3]
  4228f2:	lea    ebp,[r8-0x30]
  4228f6:	mov    r9w,0xd000
  4228fb:	cmp    bpl,0xa
  4228ff:	jb     422914 <flatcc_json_parser_string_escape@@Base+0x114>
  422901:	or     r8b,0x20
  422905:	lea    ebp,[r8-0x61]
  422909:	mov    r9w,0xa900
  42290e:	cmp    bpl,0x6
  422912:	jae    422898 <flatcc_json_parser_string_escape@@Base+0x98>
  422914:	mov    r10b,BYTE PTR [rsi+0x4]
  422918:	lea    ebx,[r10-0x30]
  42291c:	mov    r11w,0xfd00
  422921:	cmp    bl,0xa
  422924:	jb     42293c <flatcc_json_parser_string_escape@@Base+0x13c>
  422926:	or     r10b,0x20
  42292a:	lea    ebx,[r10-0x61]
  42292e:	mov    r11w,0xfa90
  422933:	cmp    bl,0x6
  422936:	jae    422898 <flatcc_json_parser_string_escape@@Base+0x98>
  42293c:	mov    bl,BYTE PTR [rsi+0x5]
  42293f:	lea    ebp,[rbx-0x30]
  422942:	mov    r14w,0xffd0
  422947:	cmp    bpl,0xa
  42294b:	jb     422962 <flatcc_json_parser_string_escape@@Base+0x162>
  42294d:	or     bl,0x20
  422950:	lea    ebp,[rbx-0x61]
  422953:	mov    r14w,0xffa9
  422958:	cmp    bpl,0x6
  42295c:	jae    422898 <flatcc_json_parser_string_escape@@Base+0x98>
  422962:	movzx  eax,r8b
  422966:	shl    eax,0x8
  422969:	add    r9d,eax
  42296c:	or     edx,r9d
  42296f:	movsx  eax,r10b
  422973:	shl    eax,0x4
  422976:	movsx  edi,r11w
  42297a:	add    edi,eax
  42297c:	or     edx,edi
  42297e:	movsx  eax,bl
  422981:	movsx  edi,r14w
  422985:	add    edi,eax
  422987:	or     edx,edi
  422989:	cmp    dx,0x7f
  42298d:	ja     4229e6 <flatcc_json_parser_string_escape@@Base+0x1e6>
  42298f:	mov    BYTE PTR [rcx],0x1
  422992:	mov    eax,0x1
  422997:	jmp    422a2c <flatcc_json_parser_string_escape@@Base+0x22c>
  42299c:	mov    ebx,edx
  42299e:	or     bl,0x20
  4229a1:	add    bl,0x9f
  4229a4:	cmp    bl,0x5
  4229a7:	ja     422898 <flatcc_json_parser_string_escape@@Base+0x98>
  4229ad:	shl    dl,0x4
  4229b0:	add    dl,0x90
  4229b3:	mov    bpl,BYTE PTR [rsi+0x3]
  4229b7:	lea    ebx,[rbp-0x30]
  4229ba:	cmp    bl,0xa
  4229bd:	jb     4229d5 <flatcc_json_parser_string_escape@@Base+0x1d5>
  4229bf:	or     bpl,0x20
  4229c3:	lea    ebx,[rbp-0x61]
  4229c6:	cmp    bl,0x5
  4229c9:	ja     422898 <flatcc_json_parser_string_escape@@Base+0x98>
  4229cf:	add    bpl,0xa9
  4229d3:	mov    ebx,ebp
  4229d5:	or     bl,dl
  4229d7:	mov    BYTE PTR [rcx+0x1],bl
  4229da:	add    rsi,0x4
  4229de:	mov    rax,rsi
  4229e1:	jmp    4228b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  4229e6:	movzx  eax,dx
  4229e9:	cmp    eax,0x7ff
  4229ee:	ja     422a0a <flatcc_json_parser_string_escape@@Base+0x20a>
  4229f0:	mov    BYTE PTR [rcx],0x2
  4229f3:	mov    eax,edx
  4229f5:	shr    eax,0x6
  4229f8:	or     al,0xc0
  4229fa:	mov    BYTE PTR [rcx+0x1],al
  4229fd:	and    dl,0x3f
  422a00:	or     dl,0x80
  422a03:	mov    eax,0x2
  422a08:	jmp    422a2c <flatcc_json_parser_string_escape@@Base+0x22c>
  422a0a:	mov    BYTE PTR [rcx],0x3
  422a0d:	shr    eax,0xc
  422a10:	or     al,0xe0
  422a12:	mov    BYTE PTR [rcx+0x1],al
  422a15:	mov    eax,edx
  422a17:	shr    eax,0x6
  422a1a:	and    al,0x3f
  422a1c:	or     al,0x80
  422a1e:	mov    BYTE PTR [rcx+0x2],al
  422a21:	and    dl,0x3f
  422a24:	or     dl,0x80
  422a27:	mov    eax,0x3
  422a2c:	mov    BYTE PTR [rcx+rax*1],dl
  422a2f:	add    rsi,0x6
  422a33:	mov    rax,rsi
  422a36:	jmp    4228b8 <flatcc_json_parser_string_escape@@Base+0xb8>
  422a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422a40 <flatcc_json_parser_skip_constant@@Base>:
  422a40:	push   r15
  422a42:	push   r14
  422a44:	push   rbx
  422a45:	mov    rbx,rsi
  422a48:	cmp    rsi,rdx
  422a4b:	je     422ac2 <flatcc_json_parser_skip_constant@@Base+0x82>
  422a4d:	mov    r14,rdx
  422a50:	mov    r15,rdi
  422a53:	jmp    422a6e <flatcc_json_parser_skip_constant@@Base+0x2e>
  422a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a5f:	nop
  422a60:	inc    rbx
  422a63:	mov    rax,rbx
  422a66:	mov    rbx,rax
  422a69:	cmp    rax,r14
  422a6c:	je     422abf <flatcc_json_parser_skip_constant@@Base+0x7f>
  422a6e:	movzx  eax,BYTE PTR [rbx]
  422a71:	test   al,al
  422a73:	js     422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422a75:	cmp    al,0x5f
  422a77:	je     422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422a79:	cmp    al,0x2e
  422a7b:	je     422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422a7d:	lea    ecx,[rax-0x30]
  422a80:	cmp    cl,0x9
  422a83:	jbe    422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422a85:	mov    ecx,eax
  422a87:	or     cl,0x20
  422a8a:	add    cl,0x9f
  422a8d:	cmp    cl,0x19
  422a90:	jbe    422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422a92:	mov    rcx,r14
  422a95:	sub    rcx,rbx
  422a98:	cmp    rcx,0x2
  422a9c:	jl     422aaa <flatcc_json_parser_skip_constant@@Base+0x6a>
  422a9e:	cmp    al,0x20
  422aa0:	jg     422ac2 <flatcc_json_parser_skip_constant@@Base+0x82>
  422aa2:	jne    422aaa <flatcc_json_parser_skip_constant@@Base+0x6a>
  422aa4:	cmp    BYTE PTR [rbx+0x1],0x20
  422aa8:	jg     422a60 <flatcc_json_parser_skip_constant@@Base+0x20>
  422aaa:	mov    rdi,r15
  422aad:	mov    rsi,rbx
  422ab0:	mov    rdx,r14
  422ab3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422ab8:	cmp    rax,rbx
  422abb:	jne    422a66 <flatcc_json_parser_skip_constant@@Base+0x26>
  422abd:	jmp    422ac2 <flatcc_json_parser_skip_constant@@Base+0x82>
  422abf:	mov    rbx,r14
  422ac2:	mov    rax,rbx
  422ac5:	pop    rbx
  422ac6:	pop    r14
  422ac8:	pop    r15
  422aca:	ret    
  422acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422ad0 <flatcc_json_parser_match_constant@@Base>:
  422ad0:	push   r14
  422ad2:	push   rbx
  422ad3:	push   rax
  422ad4:	mov    r14,r8
  422ad7:	mov    rax,rsi
  422ada:	movsxd rcx,ecx
  422add:	mov    rsi,rdx
  422ae0:	sub    rsi,rax
  422ae3:	cmp    rsi,rcx
  422ae6:	jle    422b7a <flatcc_json_parser_match_constant@@Base+0xaa>
  422aec:	add    rcx,rax
  422aef:	movsx  esi,BYTE PTR [rcx]
  422af2:	cmp    esi,0x20
  422af5:	jne    422b22 <flatcc_json_parser_match_constant@@Base+0x52>
  422af7:	lea    rax,[rdx-0x1]
  422afb:	nop    DWORD PTR [rax+rax*1+0x0]
  422b00:	cmp    rax,rcx
  422b03:	je     422b64 <flatcc_json_parser_match_constant@@Base+0x94>
  422b05:	movzx  ebx,BYTE PTR [rcx+0x1]
  422b09:	inc    rcx
  422b0c:	cmp    bl,0x20
  422b0f:	je     422b00 <flatcc_json_parser_match_constant@@Base+0x30>
  422b11:	cmp    bl,0x22
  422b14:	je     422b3e <flatcc_json_parser_match_constant@@Base+0x6e>
  422b16:	mov    DWORD PTR [r14],0x1
  422b1d:	mov    rax,rcx
  422b20:	jmp    422b81 <flatcc_json_parser_match_constant@@Base+0xb1>
  422b22:	cmp    esi,0x22
  422b25:	je     422b3e <flatcc_json_parser_match_constant@@Base+0x6e>
  422b27:	cmp    esi,0x5c
  422b2a:	jne    422b7a <flatcc_json_parser_match_constant@@Base+0xaa>
  422b2c:	mov    DWORD PTR [r14],0x0
  422b33:	cmp    DWORD PTR [rdi+0x1c],0x0
  422b37:	je     422b89 <flatcc_json_parser_match_constant@@Base+0xb9>
  422b39:	mov    rax,rdx
  422b3c:	jmp    422b81 <flatcc_json_parser_match_constant@@Base+0xb1>
  422b3e:	lea    rax,[rcx+0x1]
  422b42:	mov    rdx,rcx
  422b45:	not    rdx
  422b48:	cmp    rdx,0x2
  422b4c:	jl     422b70 <flatcc_json_parser_match_constant@@Base+0xa0>
  422b4e:	cmp    BYTE PTR [rax],0x20
  422b51:	jg     422b7a <flatcc_json_parser_match_constant@@Base+0xaa>
  422b53:	jne    422b70 <flatcc_json_parser_match_constant@@Base+0xa0>
  422b55:	cmp    BYTE PTR [rcx+0x2],0x20
  422b59:	jle    422b70 <flatcc_json_parser_match_constant@@Base+0xa0>
  422b5b:	add    rcx,0x2
  422b5f:	mov    rax,rcx
  422b62:	jmp    422b7a <flatcc_json_parser_match_constant@@Base+0xaa>
  422b64:	mov    DWORD PTR [r14],0x0
  422b6b:	mov    rax,rdx
  422b6e:	jmp    422b81 <flatcc_json_parser_match_constant@@Base+0xb1>
  422b70:	mov    rsi,rax
  422b73:	xor    edx,edx
  422b75:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422b7a:	mov    DWORD PTR [r14],0x0
  422b81:	add    rsp,0x8
  422b85:	pop    rbx
  422b86:	pop    r14
  422b88:	ret    
  422b89:	mov    DWORD PTR [rdi+0x1c],0x12
  422b90:	mov    eax,DWORD PTR [rdi+0x8]
  422b93:	mov    esi,ecx
  422b95:	sub    esi,eax
  422b97:	inc    esi
  422b99:	mov    DWORD PTR [rdi+0x18],esi
  422b9c:	mov    QWORD PTR [rdi+0x30],rcx
  422ba0:	mov    rax,rdx
  422ba3:	jmp    422b81 <flatcc_json_parser_match_constant@@Base+0xb1>
  422ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422baf:	nop

0000000000422bb0 <flatcc_json_parser_unmatched_symbol@@Base>:
  422bb0:	push   r14
  422bb2:	push   rbx
  422bb3:	push   rax
  422bb4:	mov    rbx,rdx
  422bb7:	mov    r14,rdi
  422bba:	test   BYTE PTR [rdi+0x10],0x1
  422bbe:	jne    422bea <flatcc_json_parser_unmatched_symbol@@Base+0x3a>
  422bc0:	cmp    DWORD PTR [r14+0x1c],0x0
  422bc5:	jne    422cd5 <flatcc_json_parser_unmatched_symbol@@Base+0x125>
  422bcb:	mov    DWORD PTR [r14+0x1c],0xd
  422bd3:	mov    eax,DWORD PTR [r14+0x8]
  422bd7:	mov    ecx,esi
  422bd9:	sub    ecx,eax
  422bdb:	inc    ecx
  422bdd:	mov    DWORD PTR [r14+0x18],ecx
  422be1:	mov    QWORD PTR [r14+0x30],rsi
  422be5:	jmp    422cd5 <flatcc_json_parser_unmatched_symbol@@Base+0x125>
  422bea:	cmp    rsi,rbx
  422bed:	jne    422c0c <flatcc_json_parser_unmatched_symbol@@Base+0x5c>
  422bef:	jmp    422c2f <flatcc_json_parser_unmatched_symbol@@Base+0x7f>
  422bf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  422c00:	cmp    al,0x22
  422c02:	je     422c24 <flatcc_json_parser_unmatched_symbol@@Base+0x74>
  422c04:	inc    rsi
  422c07:	cmp    rsi,rbx
  422c0a:	je     422c2c <flatcc_json_parser_unmatched_symbol@@Base+0x7c>
  422c0c:	movzx  eax,BYTE PTR [rsi]
  422c0f:	cmp    al,0x5c
  422c11:	jne    422c00 <flatcc_json_parser_unmatched_symbol@@Base+0x50>
  422c13:	mov    rax,rbx
  422c16:	sub    rax,rsi
  422c19:	cmp    rax,0x2
  422c1d:	jl     422c2f <flatcc_json_parser_unmatched_symbol@@Base+0x7f>
  422c1f:	inc    rsi
  422c22:	jmp    422c04 <flatcc_json_parser_unmatched_symbol@@Base+0x54>
  422c24:	inc    rsi
  422c27:	mov    rax,rsi
  422c2a:	jmp    422c56 <flatcc_json_parser_unmatched_symbol@@Base+0xa6>
  422c2c:	mov    rsi,rbx
  422c2f:	cmp    DWORD PTR [r14+0x1c],0x0
  422c34:	mov    rax,rbx
  422c37:	jne    422c56 <flatcc_json_parser_unmatched_symbol@@Base+0xa6>
  422c39:	mov    DWORD PTR [r14+0x1c],0x14
  422c41:	mov    eax,DWORD PTR [r14+0x8]
  422c45:	mov    ecx,esi
  422c47:	sub    ecx,eax
  422c49:	inc    ecx
  422c4b:	mov    DWORD PTR [r14+0x18],ecx
  422c4f:	mov    QWORD PTR [r14+0x30],rsi
  422c53:	mov    rax,rbx
  422c56:	mov    rcx,rbx
  422c59:	sub    rcx,rax
  422c5c:	cmp    rcx,0x2
  422c60:	jl     422c79 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  422c62:	cmp    BYTE PTR [rax],0x20
  422c65:	jg     422c87 <flatcc_json_parser_unmatched_symbol@@Base+0xd7>
  422c67:	jne    422c79 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  422c69:	cmp    BYTE PTR [rax+0x1],0x20
  422c6d:	jle    422c79 <flatcc_json_parser_unmatched_symbol@@Base+0xc9>
  422c6f:	inc    rax
  422c72:	cmp    rax,rbx
  422c75:	jne    422c8c <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
  422c77:	jmp    422cb4 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
  422c79:	mov    rdi,r14
  422c7c:	mov    rsi,rax
  422c7f:	mov    rdx,rbx
  422c82:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422c87:	cmp    rax,rbx
  422c8a:	je     422cb4 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
  422c8c:	cmp    BYTE PTR [rax],0x3a
  422c8f:	jne    422cb4 <flatcc_json_parser_unmatched_symbol@@Base+0x104>
  422c91:	lea    rsi,[rax+0x1]
  422c95:	mov    rcx,rbx
  422c98:	sub    rcx,rsi
  422c9b:	cmp    rcx,0x2
  422c9f:	jl     422ce0 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
  422ca1:	cmp    BYTE PTR [rsi],0x20
  422ca4:	jg     422cee <flatcc_json_parser_unmatched_symbol@@Base+0x13e>
  422ca6:	jne    422ce0 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
  422ca8:	cmp    BYTE PTR [rax+0x2],0x20
  422cac:	jle    422ce0 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
  422cae:	add    rax,0x2
  422cb2:	jmp    422ceb <flatcc_json_parser_unmatched_symbol@@Base+0x13b>
  422cb4:	cmp    DWORD PTR [r14+0x1c],0x0
  422cb9:	jne    422cd5 <flatcc_json_parser_unmatched_symbol@@Base+0x125>
  422cbb:	mov    DWORD PTR [r14+0x1c],0x4
  422cc3:	mov    ecx,DWORD PTR [r14+0x8]
  422cc7:	mov    edx,eax
  422cc9:	sub    edx,ecx
  422ccb:	inc    edx
  422ccd:	mov    DWORD PTR [r14+0x18],edx
  422cd1:	mov    QWORD PTR [r14+0x30],rax
  422cd5:	mov    rax,rbx
  422cd8:	add    rsp,0x8
  422cdc:	pop    rbx
  422cdd:	pop    r14
  422cdf:	ret    
  422ce0:	mov    rdi,r14
  422ce3:	mov    rdx,rbx
  422ce6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422ceb:	mov    rsi,rax
  422cee:	mov    rdi,r14
  422cf1:	mov    rdx,rbx
  422cf4:	add    rsp,0x8
  422cf8:	pop    rbx
  422cf9:	pop    r14
  422cfb:	jmp    422d00 <flatcc_json_parser_generic_json@@Base>

0000000000422d00 <flatcc_json_parser_generic_json@@Base>:
  422d00:	push   rbp
  422d01:	push   r15
  422d03:	push   r14
  422d05:	push   r13
  422d07:	push   r12
  422d09:	push   rbx
  422d0a:	sub    rsp,0x228
  422d11:	cmp    rsi,rdx
  422d14:	je     423809 <flatcc_json_parser_generic_json@@Base+0xb09>
  422d1a:	mov    rbx,rdx
  422d1d:	mov    r14,rdi
  422d20:	lea    rax,[rsp+0x20]
  422d25:	lea    r15,[rdi+0x1c]
  422d29:	lea    rbp,[rdi+0x8]
  422d2d:	lea    rcx,[rdi+0x18]
  422d31:	mov    QWORD PTR [rsp+0x8],rcx
  422d36:	lea    r13,[rdi+0x30]
  422d3a:	lea    rcx,[rdx-0x1]
  422d3e:	mov    QWORD PTR [rsp+0x10],rcx
  422d43:	xor    r12d,r12d
  422d46:	test   r12,r12
  422d49:	je     422e84 <flatcc_json_parser_generic_json@@Base+0x184>
  422d4f:	cmp    BYTE PTR [rax-0x1],0x7d
  422d53:	jne    422e84 <flatcc_json_parser_generic_json@@Base+0x184>
  422d59:	cmp    BYTE PTR [rsi],0x22
  422d5c:	jne    422d98 <flatcc_json_parser_generic_json@@Base+0x98>
  422d5e:	inc    rsi
  422d61:	mov    rax,rbx
  422d64:	cmp    rsi,rbx
  422d67:	jne    422d7c <flatcc_json_parser_generic_json@@Base+0x7c>
  422d69:	jmp    422dc2 <flatcc_json_parser_generic_json@@Base+0xc2>
  422d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d70:	cmp    al,0x22
  422d72:	je     422df1 <flatcc_json_parser_generic_json@@Base+0xf1>
  422d74:	inc    rsi
  422d77:	cmp    rsi,rbx
  422d7a:	je     422dbf <flatcc_json_parser_generic_json@@Base+0xbf>
  422d7c:	movzx  eax,BYTE PTR [rsi]
  422d7f:	cmp    al,0x5c
  422d81:	jne    422d70 <flatcc_json_parser_generic_json@@Base+0x70>
  422d83:	mov    rax,rbx
  422d86:	sub    rax,rsi
  422d89:	cmp    rax,0x2
  422d8d:	jl     423330 <flatcc_json_parser_generic_json@@Base+0x630>
  422d93:	inc    rsi
  422d96:	jmp    422d74 <flatcc_json_parser_generic_json@@Base+0x74>
  422d98:	cmp    DWORD PTR [r15],0x0
  422d9c:	mov    rdx,rbx
  422d9f:	mov    rcx,rbx
  422da2:	jne    422e00 <flatcc_json_parser_generic_json@@Base+0x100>
  422da4:	mov    DWORD PTR [r15],0x5
  422dab:	mov    eax,DWORD PTR [rbp+0x0]
  422dae:	mov    ecx,esi
  422db0:	sub    ecx,eax
  422db2:	inc    ecx
  422db4:	mov    rax,QWORD PTR [rsp+0x8]
  422db9:	mov    DWORD PTR [rax],ecx
  422dbb:	mov    QWORD PTR [r13+0x0],rsi
  422dbf:	mov    rax,rbx
  422dc2:	cmp    DWORD PTR [r15],0x0
  422dc6:	mov    rdx,rbx
  422dc9:	mov    rcx,rbx
  422dcc:	jne    422e00 <flatcc_json_parser_generic_json@@Base+0x100>
  422dce:	mov    DWORD PTR [r15],0x14
  422dd5:	mov    ecx,DWORD PTR [rbp+0x0]
  422dd8:	mov    edx,eax
  422dda:	sub    edx,ecx
  422ddc:	inc    edx
  422dde:	mov    rcx,QWORD PTR [rsp+0x8]
  422de3:	mov    DWORD PTR [rcx],edx
  422de5:	mov    QWORD PTR [r13+0x0],rax
  422de9:	mov    rdx,rbx
  422dec:	mov    rcx,rbx
  422def:	jmp    422e00 <flatcc_json_parser_generic_json@@Base+0x100>
  422df1:	inc    rsi
  422df4:	mov    rdx,rsi
  422df7:	mov    rcx,rsi
  422dfa:	nop    WORD PTR [rax+rax*1+0x0]
  422e00:	mov    rax,rbx
  422e03:	sub    rax,rdx
  422e06:	cmp    rax,0x2
  422e0a:	jl     422e26 <flatcc_json_parser_generic_json@@Base+0x126>
  422e0c:	cmp    BYTE PTR [rcx],0x20
  422e0f:	jg     422e37 <flatcc_json_parser_generic_json@@Base+0x137>
  422e11:	jne    422e26 <flatcc_json_parser_generic_json@@Base+0x126>
  422e13:	cmp    BYTE PTR [rcx+0x1],0x20
  422e17:	jle    422e26 <flatcc_json_parser_generic_json@@Base+0x126>
  422e19:	inc    rcx
  422e1c:	cmp    rcx,rbx
  422e1f:	jne    422e40 <flatcc_json_parser_generic_json@@Base+0x140>
  422e21:	jmp    42381e <flatcc_json_parser_generic_json@@Base+0xb1e>
  422e26:	mov    rdi,r14
  422e29:	mov    rsi,rcx
  422e2c:	mov    rdx,rbx
  422e2f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422e34:	mov    rcx,rax
  422e37:	cmp    rcx,rbx
  422e3a:	je     42381e <flatcc_json_parser_generic_json@@Base+0xb1e>
  422e40:	cmp    BYTE PTR [rcx],0x3a
  422e43:	jne    42382d <flatcc_json_parser_generic_json@@Base+0xb2d>
  422e49:	lea    rax,[rcx+0x1]
  422e4d:	mov    rdx,rbx
  422e50:	sub    rdx,rax
  422e53:	cmp    rdx,0x2
  422e57:	jl     422e73 <flatcc_json_parser_generic_json@@Base+0x173>
  422e59:	mov    dl,BYTE PTR [rax]
  422e5b:	cmp    dl,0x20
  422e5e:	jg     422e89 <flatcc_json_parser_generic_json@@Base+0x189>
  422e60:	jne    422e73 <flatcc_json_parser_generic_json@@Base+0x173>
  422e62:	mov    dl,BYTE PTR [rcx+0x2]
  422e65:	cmp    dl,0x20
  422e68:	jle    422e73 <flatcc_json_parser_generic_json@@Base+0x173>
  422e6a:	add    rcx,0x2
  422e6e:	mov    rax,rcx
  422e71:	jmp    422e89 <flatcc_json_parser_generic_json@@Base+0x189>
  422e73:	mov    rdi,r14
  422e76:	mov    rsi,rax
  422e79:	mov    rdx,rbx
  422e7c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  422e81:	mov    rsi,rax
  422e84:	mov    dl,BYTE PTR [rsi]
  422e86:	mov    rax,rsi
  422e89:	movsx  ecx,dl
  422e8c:	add    ecx,0xffffffde
  422e8f:	cmp    ecx,0x59
  422e92:	ja     4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  422e98:	lea    rsi,[rip+0x1464d]        # 4374ec <flatcc_builder_padding_base@@Base+0x1acc>
  422e9f:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  422ea3:	add    rcx,rsi
  422ea6:	jmp    rcx
  422ea8:	cmp    rax,rbx
  422eab:	je     4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  422eb1:	cmp    dl,0x2d
  422eb4:	jne    422ec4 <flatcc_json_parser_generic_json@@Base+0x1c4>
  422eb6:	inc    rax
  422eb9:	cmp    rax,rbx
  422ebc:	je     4232b3 <flatcc_json_parser_generic_json@@Base+0x5b3>
  422ec2:	mov    dl,BYTE PTR [rax]
  422ec4:	cmp    dl,0x30
  422ec7:	jne    422f01 <flatcc_json_parser_generic_json@@Base+0x201>
  422ec9:	inc    rax
  422ecc:	mov    rdx,rbx
  422ecf:	cmp    rax,rbx
  422ed2:	je     4234b2 <flatcc_json_parser_generic_json@@Base+0x7b2>
  422ed8:	mov    cl,BYTE PTR [rax]
  422eda:	cmp    cl,0x2e
  422edd:	jne    423225 <flatcc_json_parser_generic_json@@Base+0x525>
  422ee3:	mov    cl,BYTE PTR [rax+0x1]
  422ee6:	add    cl,0xd0
  422ee9:	cmp    cl,0xa
  422eec:	jb     4231e5 <flatcc_json_parser_generic_json@@Base+0x4e5>
  422ef2:	cmp    DWORD PTR [r15],0x0
  422ef6:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  422efc:	inc    rax
  422eff:	jmp    422f17 <flatcc_json_parser_generic_json@@Base+0x217>
  422f01:	add    dl,0xcf
  422f04:	cmp    dl,0x8
  422f07:	jbe    422fdf <flatcc_json_parser_generic_json@@Base+0x2df>
  422f0d:	cmp    DWORD PTR [r15],0x0
  422f11:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  422f17:	mov    DWORD PTR [r15],0x6
  422f1e:	mov    ecx,DWORD PTR [rbp+0x0]
  422f21:	mov    edx,eax
  422f23:	sub    edx,ecx
  422f25:	inc    edx
  422f27:	mov    rcx,QWORD PTR [rsp+0x8]
  422f2c:	mov    DWORD PTR [rcx],edx
  422f2e:	mov    QWORD PTR [r13+0x0],rax
  422f32:	jmp    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  422f37:	mov    rcx,rbx
  422f3a:	sub    rcx,rax
  422f3d:	cmp    rcx,0x4
  422f41:	jl     422f6d <flatcc_json_parser_generic_json@@Base+0x26d>
  422f43:	cmp    DWORD PTR [rax],0x65757274
  422f49:	je     423314 <flatcc_json_parser_generic_json@@Base+0x614>
  422f4f:	cmp    rcx,0x5
  422f53:	jl     422f6d <flatcc_json_parser_generic_json@@Base+0x26d>
  422f55:	mov    ecx,DWORD PTR [rax]
  422f57:	mov    esi,0x736c6166
  422f5c:	xor    ecx,esi
  422f5e:	movzx  esi,BYTE PTR [rax+0x4]
  422f62:	xor    esi,0x65
  422f65:	or     esi,ecx
  422f67:	je     42346e <flatcc_json_parser_generic_json@@Base+0x76e>
  422f6d:	mov    rsi,rbx
  422f70:	cmp    rax,rbx
  422f73:	je     4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  422f79:	xor    ecx,ecx
  422f7b:	cmp    dl,0x2d
  422f7e:	sete   cl
  422f81:	add    rcx,rax
  422f84:	cmp    rcx,rbx
  422f87:	je     423326 <flatcc_json_parser_generic_json@@Base+0x626>
  422f8d:	mov    r10,rbp
  422f90:	xor    edi,edi
  422f92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f9c:	nop    DWORD PTR [rax+0x0]
  422fa0:	movsx  rsi,BYTE PTR [rcx]
  422fa4:	lea    ebp,[rsi-0x30]
  422fa7:	cmp    bpl,0x9
  422fab:	ja     42337d <flatcc_json_parser_generic_json@@Base+0x67d>
  422fb1:	lea    rbp,[rdi+rdi*4]
  422fb5:	lea    rsi,[rsi+rbp*2]
  422fb9:	add    rsi,0xffffffffffffffd0
  422fbd:	cmp    rdi,rsi
  422fc0:	ja     4233ce <flatcc_json_parser_generic_json@@Base+0x6ce>
  422fc6:	inc    rcx
  422fc9:	mov    rdi,rsi
  422fcc:	cmp    rbx,rcx
  422fcf:	jne    422fa0 <flatcc_json_parser_generic_json@@Base+0x2a0>
  422fd1:	xor    r8d,r8d
  422fd4:	mov    rcx,rbx
  422fd7:	mov    rdi,rsi
  422fda:	jmp    423380 <flatcc_json_parser_generic_json@@Base+0x680>
  422fdf:	mov    rdx,QWORD PTR [rsp+0x10]
  422fe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fee:	xchg   ax,ax
  422ff0:	cmp    rdx,rax
  422ff3:	je     423213 <flatcc_json_parser_generic_json@@Base+0x513>
  422ff9:	movzx  ecx,BYTE PTR [rax+0x1]
  422ffd:	inc    rax
  423000:	add    cl,0xd0
  423003:	cmp    cl,0xa
  423006:	jb     422ff0 <flatcc_json_parser_generic_json@@Base+0x2f0>
  423008:	jmp    422ecc <flatcc_json_parser_generic_json@@Base+0x1cc>
  42300d:	cmp    dl,0x22
  423010:	jne    4232dd <flatcc_json_parser_generic_json@@Base+0x5dd>
  423016:	cmp    rax,rbx
  423019:	je     4232dd <flatcc_json_parser_generic_json@@Base+0x5dd>
  42301f:	inc    rax
  423022:	mov    rcx,rbx
  423025:	cmp    rax,rbx
  423028:	jne    423051 <flatcc_json_parser_generic_json@@Base+0x351>
  42302a:	jmp    42347f <flatcc_json_parser_generic_json@@Base+0x77f>
  42302f:	cmp    DWORD PTR [r15],0x0
  423033:	mov    rsi,rbx
  423036:	je     42308d <flatcc_json_parser_generic_json@@Base+0x38d>
  423038:	mov    rdi,r14
  42303b:	mov    rdx,rbx
  42303e:	lea    rcx,[rsp+0x1c]
  423043:	call   422800 <flatcc_json_parser_string_escape@@Base>
  423048:	cmp    rax,rbx
  42304b:	je     423302 <flatcc_json_parser_generic_json@@Base+0x602>
  423051:	mov    cl,BYTE PTR [rax]
  423053:	cmp    cl,0x22
  423056:	je     42345c <flatcc_json_parser_generic_json@@Base+0x75c>
  42305c:	cmp    cl,0x20
  42305f:	mov    rdx,QWORD PTR [rsp+0x10]
  423064:	jb     42302f <flatcc_json_parser_generic_json@@Base+0x32f>
  423066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423070:	cmp    cl,0x22
  423073:	je     4230ad <flatcc_json_parser_generic_json@@Base+0x3ad>
  423075:	cmp    cl,0x5c
  423078:	je     4230ad <flatcc_json_parser_generic_json@@Base+0x3ad>
  42307a:	cmp    rdx,rax
  42307d:	je     4230c6 <flatcc_json_parser_generic_json@@Base+0x3c6>
  42307f:	movzx  ecx,BYTE PTR [rax+0x1]
  423083:	inc    rax
  423086:	cmp    cl,0x20
  423089:	jae    423070 <flatcc_json_parser_generic_json@@Base+0x370>
  42308b:	jmp    42302f <flatcc_json_parser_generic_json@@Base+0x32f>
  42308d:	mov    DWORD PTR [r15],0x11
  423094:	mov    ecx,DWORD PTR [rbp+0x0]
  423097:	mov    edx,eax
  423099:	sub    edx,ecx
  42309b:	inc    edx
  42309d:	mov    rcx,QWORD PTR [rsp+0x8]
  4230a2:	mov    DWORD PTR [rcx],edx
  4230a4:	mov    QWORD PTR [r13+0x0],rax
  4230a8:	mov    rsi,rbx
  4230ab:	jmp    423038 <flatcc_json_parser_generic_json@@Base+0x338>
  4230ad:	mov    rsi,rbx
  4230b0:	cmp    rbx,rax
  4230b3:	je     423038 <flatcc_json_parser_generic_json@@Base+0x338>
  4230b5:	mov    rsi,rax
  4230b8:	cmp    cl,0x22
  4230bb:	jne    423038 <flatcc_json_parser_generic_json@@Base+0x338>
  4230c1:	jmp    42345c <flatcc_json_parser_generic_json@@Base+0x75c>
  4230c6:	cmp    DWORD PTR [r15],0x0
  4230ca:	mov    rsi,rbx
  4230cd:	jne    423038 <flatcc_json_parser_generic_json@@Base+0x338>
  4230d3:	mov    DWORD PTR [r15],0x14
  4230da:	mov    eax,DWORD PTR [rbp+0x0]
  4230dd:	mov    ecx,ebx
  4230df:	sub    ecx,eax
  4230e1:	inc    ecx
  4230e3:	mov    rax,QWORD PTR [rsp+0x8]
  4230e8:	mov    DWORD PTR [rax],ecx
  4230ea:	mov    QWORD PTR [r13+0x0],rbx
  4230ee:	mov    rsi,rbx
  4230f1:	jmp    423038 <flatcc_json_parser_generic_json@@Base+0x338>
  4230f6:	cmp    r12,0x200
  4230fd:	je     423850 <flatcc_json_parser_generic_json@@Base+0xb50>
  423103:	mov    BYTE PTR [rsp+r12*1+0x20],0x5d
  423109:	lea    rsi,[rax+0x1]
  42310d:	mov    rcx,rbx
  423110:	sub    rcx,rsi
  423113:	cmp    rcx,0x2
  423117:	jl     423195 <flatcc_json_parser_generic_json@@Base+0x495>
  423119:	cmp    BYTE PTR [rsi],0x20
  42311c:	jg     4231a3 <flatcc_json_parser_generic_json@@Base+0x4a3>
  423122:	jne    423195 <flatcc_json_parser_generic_json@@Base+0x495>
  423124:	cmp    BYTE PTR [rax+0x2],0x20
  423128:	jle    423195 <flatcc_json_parser_generic_json@@Base+0x495>
  42312a:	add    rax,0x2
  42312e:	jmp    4231a0 <flatcc_json_parser_generic_json@@Base+0x4a0>
  423130:	mov    rcx,rbx
  423133:	sub    rcx,rax
  423136:	mov    rsi,rax
  423139:	cmp    rcx,0x4
  42313d:	jl     4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  423143:	lea    rsi,[rax+0x4]
  423147:	cmp    DWORD PTR [rax],0x6c6c756e
  42314d:	cmovne rsi,rax
  423151:	cmp    rax,rsi
  423154:	jne    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  42315a:	jmp    4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  42315f:	cmp    r12,0x200
  423166:	je     423850 <flatcc_json_parser_generic_json@@Base+0xb50>
  42316c:	mov    BYTE PTR [rsp+r12*1+0x20],0x7d
  423172:	lea    rsi,[rax+0x1]
  423176:	mov    rcx,rbx
  423179:	sub    rcx,rsi
  42317c:	cmp    rcx,0x2
  423180:	jl     4231bd <flatcc_json_parser_generic_json@@Base+0x4bd>
  423182:	cmp    BYTE PTR [rsi],0x20
  423185:	jg     4231cb <flatcc_json_parser_generic_json@@Base+0x4cb>
  423187:	jne    4231bd <flatcc_json_parser_generic_json@@Base+0x4bd>
  423189:	cmp    BYTE PTR [rax+0x2],0x20
  42318d:	jle    4231bd <flatcc_json_parser_generic_json@@Base+0x4bd>
  42318f:	add    rax,0x2
  423193:	jmp    4231c8 <flatcc_json_parser_generic_json@@Base+0x4c8>
  423195:	mov    rdi,r14
  423198:	mov    rdx,rbx
  42319b:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4231a0:	mov    rsi,rax
  4231a3:	cmp    rsi,rbx
  4231a6:	je     423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  4231ac:	inc    r12
  4231af:	cmp    BYTE PTR [rsi],0x5d
  4231b2:	je     4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  4231b8:	jmp    423786 <flatcc_json_parser_generic_json@@Base+0xa86>
  4231bd:	mov    rdi,r14
  4231c0:	mov    rdx,rbx
  4231c3:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4231c8:	mov    rsi,rax
  4231cb:	cmp    rsi,rbx
  4231ce:	je     423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  4231d4:	inc    r12
  4231d7:	cmp    BYTE PTR [rsi],0x7d
  4231da:	je     4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  4231e0:	jmp    423786 <flatcc_json_parser_generic_json@@Base+0xa86>
  4231e5:	add    rax,0x2
  4231e9:	mov    rdx,rbx
  4231ec:	cmp    rax,rbx
  4231ef:	je     4234b2 <flatcc_json_parser_generic_json@@Base+0x7b2>
  4231f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4231ff:	nop
  423200:	movzx  ecx,BYTE PTR [rax]
  423203:	lea    edx,[rcx-0x30]
  423206:	cmp    dl,0x9
  423209:	ja     423225 <flatcc_json_parser_generic_json@@Base+0x525>
  42320b:	inc    rax
  42320e:	cmp    rbx,rax
  423211:	jne    423200 <flatcc_json_parser_generic_json@@Base+0x500>
  423213:	mov    rdx,rbx
  423216:	cmp    DWORD PTR [r15],0x0
  42321a:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  423220:	jmp    4234b8 <flatcc_json_parser_generic_json@@Base+0x7b8>
  423225:	mov    rdx,rbx
  423228:	cmp    rax,rbx
  42322b:	je     4234b2 <flatcc_json_parser_generic_json@@Base+0x7b2>
  423231:	mov    edx,ecx
  423233:	or     dl,0x20
  423236:	cmp    dl,0x65
  423239:	jne    423338 <flatcc_json_parser_generic_json@@Base+0x638>
  42323f:	lea    rsi,[rax+0x1]
  423243:	cmp    rsi,rbx
  423246:	mov    rdx,QWORD PTR [rsp+0x10]
  42324b:	je     4232b3 <flatcc_json_parser_generic_json@@Base+0x5b3>
  42324d:	mov    cl,BYTE PTR [rsi]
  42324f:	cmp    cl,0x2d
  423252:	je     423259 <flatcc_json_parser_generic_json@@Base+0x559>
  423254:	cmp    cl,0x2b
  423257:	jne    423260 <flatcc_json_parser_generic_json@@Base+0x560>
  423259:	add    rax,0x2
  42325d:	mov    rsi,rax
  423260:	cmp    rsi,rbx
  423263:	je     42326d <flatcc_json_parser_generic_json@@Base+0x56d>
  423265:	mov    al,BYTE PTR [rsi]
  423267:	add    al,0xd0
  423269:	cmp    al,0x9
  42326b:	jbe    423297 <flatcc_json_parser_generic_json@@Base+0x597>
  42326d:	cmp    DWORD PTR [r15],0x0
  423271:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  423277:	mov    DWORD PTR [r15],0x6
  42327e:	mov    eax,DWORD PTR [rbp+0x0]
  423281:	mov    ecx,esi
  423283:	sub    ecx,eax
  423285:	inc    ecx
  423287:	mov    rax,QWORD PTR [rsp+0x8]
  42328c:	mov    DWORD PTR [rax],ecx
  42328e:	mov    QWORD PTR [r13+0x0],rsi
  423292:	jmp    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  423297:	cmp    rdx,rsi
  42329a:	je     4234af <flatcc_json_parser_generic_json@@Base+0x7af>
  4232a0:	movzx  ecx,BYTE PTR [rsi+0x1]
  4232a4:	inc    rsi
  4232a7:	lea    eax,[rcx-0x30]
  4232aa:	cmp    al,0xa
  4232ac:	jb     423297 <flatcc_json_parser_generic_json@@Base+0x597>
  4232ae:	jmp    42333b <flatcc_json_parser_generic_json@@Base+0x63b>
  4232b3:	cmp    DWORD PTR [r15],0x0
  4232b7:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  4232bd:	mov    DWORD PTR [r15],0x6
  4232c4:	mov    eax,DWORD PTR [rbp+0x0]
  4232c7:	mov    ecx,ebx
  4232c9:	sub    ecx,eax
  4232cb:	inc    ecx
  4232cd:	mov    rax,QWORD PTR [rsp+0x8]
  4232d2:	mov    DWORD PTR [rax],ecx
  4232d4:	mov    QWORD PTR [r13+0x0],rbx
  4232d8:	jmp    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  4232dd:	cmp    DWORD PTR [r15],0x0
  4232e1:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  4232e7:	mov    DWORD PTR [r15],0x10
  4232ee:	mov    ecx,DWORD PTR [rbp+0x0]
  4232f1:	mov    edx,eax
  4232f3:	sub    edx,ecx
  4232f5:	inc    edx
  4232f7:	mov    rcx,QWORD PTR [rsp+0x8]
  4232fc:	mov    DWORD PTR [rcx],edx
  4232fe:	mov    QWORD PTR [r13+0x0],rax
  423302:	mov    rcx,rbx
  423305:	cmp    DWORD PTR [r15],0x0
  423309:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  42330f:	jmp    423485 <flatcc_json_parser_generic_json@@Base+0x785>
  423314:	lea    rsi,[rax+0x4]
  423318:	cmp    rax,rsi
  42331b:	jne    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  423321:	jmp    4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  423326:	xor    edi,edi
  423328:	mov    rcx,rbx
  42332b:	xor    r8d,r8d
  42332e:	jmp    423383 <flatcc_json_parser_generic_json@@Base+0x683>
  423330:	mov    rax,rsi
  423333:	jmp    422dc2 <flatcc_json_parser_generic_json@@Base+0xc2>
  423338:	mov    rsi,rax
  42333b:	mov    rdx,rbx
  42333e:	cmp    rsi,rbx
  423341:	je     4234b2 <flatcc_json_parser_generic_json@@Base+0x7b2>
  423347:	movsx  eax,cl
  42334a:	cmp    eax,0x3a
  42334d:	ja     423363 <flatcc_json_parser_generic_json@@Base+0x663>
  42334f:	movabs rcx,0x400100100002e00
  423359:	bt     rcx,rax
  42335d:	jb     4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  423363:	cmp    eax,0x5d
  423366:	je     4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  42336c:	mov    rdx,rsi
  42336f:	cmp    eax,0x7d
  423372:	je     4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  423378:	jmp    4234b2 <flatcc_json_parser_generic_json@@Base+0x7b2>
  42337d:	mov    r8b,0x1
  423380:	mov    rbp,r10
  423383:	mov    rsi,rax
  423386:	cmp    rcx,rax
  423389:	je     4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  42338f:	test   r8b,r8b
  423392:	je     4233f7 <flatcc_json_parser_generic_json@@Base+0x6f7>
  423394:	mov    sil,BYTE PTR [rcx]
  423397:	add    sil,0xd2
  42339b:	cmp    sil,0x37
  42339f:	ja     4233f7 <flatcc_json_parser_generic_json@@Base+0x6f7>
  4233a1:	mov    r8,rbp
  4233a4:	movzx  esi,sil
  4233a8:	movabs rbp,0x80000000800001
  4233b2:	bt     rbp,rsi
  4233b6:	jae    423799 <flatcc_json_parser_generic_json@@Base+0xa99>
  4233bc:	cmp    DWORD PTR [r15],0x0
  4233c0:	mov    rbp,r8
  4233c3:	jne    4233f2 <flatcc_json_parser_generic_json@@Base+0x6f2>
  4233c5:	mov    DWORD PTR [r15],0xc
  4233cc:	jmp    4233de <flatcc_json_parser_generic_json@@Base+0x6de>
  4233ce:	cmp    DWORD PTR [r15],0x0
  4233d2:	mov    rbp,r10
  4233d5:	jne    4233f2 <flatcc_json_parser_generic_json@@Base+0x6f2>
  4233d7:	mov    DWORD PTR [r15],0x8
  4233de:	mov    esi,DWORD PTR [rbp+0x0]
  4233e1:	mov    edi,ecx
  4233e3:	sub    edi,esi
  4233e5:	inc    edi
  4233e7:	mov    rsi,QWORD PTR [rsp+0x8]
  4233ec:	mov    DWORD PTR [rsi],edi
  4233ee:	mov    QWORD PTR [r13+0x0],rcx
  4233f2:	xor    edi,edi
  4233f4:	mov    rcx,rbx
  4233f7:	mov    rsi,rax
  4233fa:	cmp    rcx,rax
  4233fd:	je     4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  423403:	cmp    dl,0x2d
  423406:	jne    42341e <flatcc_json_parser_generic_json@@Base+0x71e>
  423408:	cmp    DWORD PTR [r15],0x0
  42340c:	mov    rsi,rbx
  42340f:	jne    4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  423415:	mov    DWORD PTR [r15],0x8
  42341c:	jmp    423437 <flatcc_json_parser_generic_json@@Base+0x737>
  42341e:	cmp    rdi,0x100
  423425:	jb     4234a2 <flatcc_json_parser_generic_json@@Base+0x7a2>
  423427:	cmp    DWORD PTR [r15],0x0
  42342b:	mov    rsi,rbx
  42342e:	jne    4234a5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  423430:	mov    DWORD PTR [r15],0x7
  423437:	mov    edx,DWORD PTR [rbp+0x0]
  42343a:	mov    esi,ecx
  42343c:	sub    esi,edx
  42343e:	inc    esi
  423440:	mov    rdx,QWORD PTR [rsp+0x8]
  423445:	mov    DWORD PTR [rdx],esi
  423447:	mov    QWORD PTR [r13+0x0],rcx
  42344b:	mov    rsi,rbx
  42344e:	cmp    rax,rsi
  423451:	jne    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  423457:	jmp    4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  42345c:	cmp    rax,rbx
  42345f:	je     42347c <flatcc_json_parser_generic_json@@Base+0x77c>
  423461:	cmp    BYTE PTR [rax],0x22
  423464:	jne    42347c <flatcc_json_parser_generic_json@@Base+0x77c>
  423466:	inc    rax
  423469:	mov    rsi,rax
  42346c:	jmp    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  42346e:	lea    rsi,[rax+0x5]
  423472:	cmp    rax,rsi
  423475:	jne    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  423477:	jmp    4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  42347c:	mov    rcx,rax
  42347f:	cmp    DWORD PTR [r15],0x0
  423483:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  423485:	mov    DWORD PTR [r15],0x14
  42348c:	mov    eax,DWORD PTR [rbp+0x0]
  42348f:	mov    edx,ecx
  423491:	sub    edx,eax
  423493:	inc    edx
  423495:	mov    rax,QWORD PTR [rsp+0x8]
  42349a:	mov    DWORD PTR [rax],edx
  42349c:	mov    QWORD PTR [r13+0x0],rcx
  4234a0:	jmp    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  4234a2:	mov    rsi,rcx
  4234a5:	cmp    rax,rsi
  4234a8:	jne    4234e3 <flatcc_json_parser_generic_json@@Base+0x7e3>
  4234aa:	jmp    4237a1 <flatcc_json_parser_generic_json@@Base+0xaa1>
  4234af:	mov    rdx,rbx
  4234b2:	cmp    DWORD PTR [r15],0x0
  4234b6:	jne    4234e0 <flatcc_json_parser_generic_json@@Base+0x7e0>
  4234b8:	mov    DWORD PTR [r15],0x6
  4234bf:	mov    eax,DWORD PTR [rbp+0x0]
  4234c2:	mov    ecx,edx
  4234c4:	sub    ecx,eax
  4234c6:	inc    ecx
  4234c8:	mov    rax,QWORD PTR [rsp+0x8]
  4234cd:	mov    DWORD PTR [rax],ecx
  4234cf:	mov    QWORD PTR [r13+0x0],rdx
  4234d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4234dd:	nop    DWORD PTR [rax]
  4234e0:	mov    rsi,rbx
  4234e3:	test   r12,r12
  4234e6:	setne  al
  4234e9:	cmp    rsi,rbx
  4234ec:	setne  dl
  4234ef:	je     4237c4 <flatcc_json_parser_generic_json@@Base+0xac4>
  4234f5:	test   r12,r12
  4234f8:	je     4237cd <flatcc_json_parser_generic_json@@Base+0xacd>
  4234fe:	xchg   ax,ax
  423500:	mov    rax,rbx
  423503:	sub    rax,rsi
  423506:	cmp    BYTE PTR [rsp+r12*1+0x1f],0x5d
  42350c:	jne    423520 <flatcc_json_parser_generic_json@@Base+0x820>
  42350e:	cmp    rax,0x2
  423512:	jl     423540 <flatcc_json_parser_generic_json@@Base+0x840>
  423514:	cmp    BYTE PTR [rsi],0x20
  423517:	jle    423530 <flatcc_json_parser_generic_json@@Base+0x830>
  423519:	mov    rax,rsi
  42351c:	jmp    42354b <flatcc_json_parser_generic_json@@Base+0x84b>
  42351e:	xchg   ax,ax
  423520:	cmp    rax,0x2
  423524:	jl     4235a0 <flatcc_json_parser_generic_json@@Base+0x8a0>
  423526:	cmp    BYTE PTR [rsi],0x20
  423529:	jle    423581 <flatcc_json_parser_generic_json@@Base+0x881>
  42352b:	mov    rax,rsi
  42352e:	jmp    4235ab <flatcc_json_parser_generic_json@@Base+0x8ab>
  423530:	jne    423540 <flatcc_json_parser_generic_json@@Base+0x840>
  423532:	cmp    BYTE PTR [rsi+0x1],0x20
  423536:	jle    423540 <flatcc_json_parser_generic_json@@Base+0x840>
  423538:	inc    rsi
  42353b:	mov    rax,rsi
  42353e:	jmp    42354b <flatcc_json_parser_generic_json@@Base+0x84b>
  423540:	mov    rdi,r14
  423543:	mov    rdx,rbx
  423546:	call   422710 <flatcc_json_parser_space_ext@@Base>
  42354b:	mov    rsi,rbx
  42354e:	cmp    rax,rbx
  423551:	je     42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423557:	movzx  ecx,BYTE PTR [rax]
  42355a:	cmp    cl,0x2c
  42355d:	je     4235fe <flatcc_json_parser_generic_json@@Base+0x8fe>
  423563:	cmp    cl,0x5d
  423566:	je     4235c8 <flatcc_json_parser_generic_json@@Base+0x8c8>
  423568:	cmp    DWORD PTR [r15],0x0
  42356c:	mov    rsi,rbx
  42356f:	jne    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423575:	mov    DWORD PTR [r15],0x9
  42357c:	jmp    42366f <flatcc_json_parser_generic_json@@Base+0x96f>
  423581:	jne    4235a0 <flatcc_json_parser_generic_json@@Base+0x8a0>
  423583:	cmp    BYTE PTR [rsi+0x1],0x20
  423587:	jle    4235a0 <flatcc_json_parser_generic_json@@Base+0x8a0>
  423589:	inc    rsi
  42358c:	mov    rax,rsi
  42358f:	jmp    4235ab <flatcc_json_parser_generic_json@@Base+0x8ab>
  423591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42359b:	nop    DWORD PTR [rax+rax*1+0x0]
  4235a0:	mov    rdi,r14
  4235a3:	mov    rdx,rbx
  4235a6:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4235ab:	mov    rsi,rbx
  4235ae:	cmp    rax,rbx
  4235b1:	je     42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  4235b7:	movzx  ecx,BYTE PTR [rax]
  4235ba:	cmp    cl,0x2c
  4235bd:	je     423625 <flatcc_json_parser_generic_json@@Base+0x925>
  4235bf:	cmp    cl,0x7d
  4235c2:	jne    42365b <flatcc_json_parser_generic_json@@Base+0x95b>
  4235c8:	lea    rsi,[rax+0x1]
  4235cc:	mov    rcx,rbx
  4235cf:	sub    rcx,rsi
  4235d2:	cmp    rcx,0x2
  4235d6:	jl     423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4235dc:	cmp    BYTE PTR [rsi],0x20
  4235df:	jg     42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  4235e5:	jne    423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4235eb:	cmp    BYTE PTR [rax+0x2],0x20
  4235ef:	jle    423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4235f5:	add    rax,0x2
  4235f9:	jmp    42371b <flatcc_json_parser_generic_json@@Base+0xa1b>
  4235fe:	lea    rcx,[rax+0x1]
  423602:	mov    rdx,rbx
  423605:	sub    rdx,rcx
  423608:	cmp    rdx,0x2
  42360c:	jl     42368b <flatcc_json_parser_generic_json@@Base+0x98b>
  42360e:	cmp    BYTE PTR [rcx],0x20
  423611:	jg     42369c <flatcc_json_parser_generic_json@@Base+0x99c>
  423617:	jne    42368b <flatcc_json_parser_generic_json@@Base+0x98b>
  423619:	cmp    BYTE PTR [rax+0x2],0x20
  42361d:	jle    42368b <flatcc_json_parser_generic_json@@Base+0x98b>
  42361f:	add    rax,0x2
  423623:	jmp    423699 <flatcc_json_parser_generic_json@@Base+0x999>
  423625:	lea    rcx,[rax+0x1]
  423629:	mov    rdx,rbx
  42362c:	sub    rdx,rcx
  42362f:	cmp    rdx,0x2
  423633:	jl     4236d4 <flatcc_json_parser_generic_json@@Base+0x9d4>
  423639:	cmp    BYTE PTR [rcx],0x20
  42363c:	jg     4236e5 <flatcc_json_parser_generic_json@@Base+0x9e5>
  423642:	jne    4236d4 <flatcc_json_parser_generic_json@@Base+0x9d4>
  423648:	cmp    BYTE PTR [rax+0x2],0x20
  42364c:	jle    4236d4 <flatcc_json_parser_generic_json@@Base+0x9d4>
  423652:	add    rax,0x2
  423656:	jmp    4236e2 <flatcc_json_parser_generic_json@@Base+0x9e2>
  42365b:	cmp    DWORD PTR [r15],0x0
  42365f:	mov    rsi,rbx
  423662:	jne    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423668:	mov    DWORD PTR [r15],0xa
  42366f:	mov    ecx,DWORD PTR [rbp+0x0]
  423672:	mov    edx,eax
  423674:	sub    edx,ecx
  423676:	inc    edx
  423678:	mov    rcx,QWORD PTR [rsp+0x8]
  42367d:	mov    DWORD PTR [rcx],edx
  42367f:	mov    QWORD PTR [r13+0x0],rax
  423683:	mov    rsi,rbx
  423686:	jmp    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  42368b:	mov    rdi,r14
  42368e:	mov    rsi,rcx
  423691:	mov    rdx,rbx
  423694:	call   422710 <flatcc_json_parser_space_ext@@Base>
  423699:	mov    rcx,rax
  42369c:	cmp    rcx,rbx
  42369f:	je     423748 <flatcc_json_parser_generic_json@@Base+0xa48>
  4236a5:	cmp    BYTE PTR [rcx],0x5d
  4236a8:	jne    423783 <flatcc_json_parser_generic_json@@Base+0xa83>
  4236ae:	lea    rsi,[rcx+0x1]
  4236b2:	mov    rax,rbx
  4236b5:	sub    rax,rsi
  4236b8:	cmp    rax,0x2
  4236bc:	jl     423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4236be:	cmp    BYTE PTR [rsi],0x20
  4236c1:	jg     42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  4236c3:	jne    423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4236c5:	cmp    BYTE PTR [rcx+0x2],0x20
  4236c9:	jle    423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  4236cb:	add    rcx,0x2
  4236cf:	mov    rsi,rcx
  4236d2:	jmp    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  4236d4:	mov    rdi,r14
  4236d7:	mov    rsi,rcx
  4236da:	mov    rdx,rbx
  4236dd:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4236e2:	mov    rcx,rax
  4236e5:	cmp    rcx,rbx
  4236e8:	je     42375a <flatcc_json_parser_generic_json@@Base+0xa5a>
  4236ea:	cmp    BYTE PTR [rcx],0x7d
  4236ed:	jne    423783 <flatcc_json_parser_generic_json@@Base+0xa83>
  4236f3:	lea    rsi,[rcx+0x1]
  4236f7:	mov    rax,rbx
  4236fa:	sub    rax,rsi
  4236fd:	cmp    rax,0x2
  423701:	jl     423710 <flatcc_json_parser_generic_json@@Base+0xa10>
  423703:	cmp    BYTE PTR [rsi],0x20
  423706:	jg     42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423708:	je     4236c5 <flatcc_json_parser_generic_json@@Base+0x9c5>
  42370a:	nop    WORD PTR [rax+rax*1+0x0]
  423710:	mov    rdi,r14
  423713:	mov    rdx,rbx
  423716:	call   422710 <flatcc_json_parser_space_ext@@Base>
  42371b:	mov    rsi,rax
  42371e:	lea    rcx,[r12-0x1]
  423723:	cmp    r12,0x1
  423727:	setne  al
  42372a:	cmp    rsi,rbx
  42372d:	setne  dl
  423730:	je     4237d0 <flatcc_json_parser_generic_json@@Base+0xad0>
  423736:	cmp    r12,0x1
  42373a:	mov    r12,rcx
  42373d:	jne    423500 <flatcc_json_parser_generic_json@@Base+0x800>
  423743:	jmp    4237d0 <flatcc_json_parser_generic_json@@Base+0xad0>
  423748:	cmp    DWORD PTR [r15],0x0
  42374c:	mov    rsi,rbx
  42374f:	jne    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423751:	mov    DWORD PTR [r15],0x9
  423758:	jmp    42376a <flatcc_json_parser_generic_json@@Base+0xa6a>
  42375a:	cmp    DWORD PTR [r15],0x0
  42375e:	mov    rsi,rbx
  423761:	jne    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423763:	mov    DWORD PTR [r15],0xa
  42376a:	mov    eax,DWORD PTR [rbp+0x0]
  42376d:	mov    ecx,ebx
  42376f:	sub    ecx,eax
  423771:	inc    ecx
  423773:	mov    rax,QWORD PTR [rsp+0x8]
  423778:	mov    DWORD PTR [rax],ecx
  42377a:	mov    QWORD PTR [r13+0x0],rbx
  42377e:	mov    rsi,rbx
  423781:	jmp    42371e <flatcc_json_parser_generic_json@@Base+0xa1e>
  423783:	mov    rsi,rcx
  423786:	lea    rax,[rsp+r12*1]
  42378a:	add    rax,0x20
  42378e:	cmp    rsi,rbx
  423791:	jne    422d46 <flatcc_json_parser_generic_json@@Base+0x46>
  423797:	jmp    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  423799:	mov    rbp,r8
  42379c:	jmp    4233f7 <flatcc_json_parser_generic_json@@Base+0x6f7>
  4237a1:	cmp    DWORD PTR [r15],0x0
  4237a5:	jne    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  4237a7:	mov    DWORD PTR [r15],0x5
  4237ae:	mov    ecx,DWORD PTR [rbp+0x0]
  4237b1:	mov    edx,eax
  4237b3:	sub    edx,ecx
  4237b5:	inc    edx
  4237b7:	mov    rcx,QWORD PTR [rsp+0x8]
  4237bc:	mov    DWORD PTR [rcx],edx
  4237be:	mov    QWORD PTR [r13+0x0],rax
  4237c2:	jmp    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  4237c4:	mov    rcx,r12
  4237c7:	test   dl,dl
  4237c9:	je     4237d4 <flatcc_json_parser_generic_json@@Base+0xad4>
  4237cb:	jmp    423809 <flatcc_json_parser_generic_json@@Base+0xb09>
  4237cd:	mov    rcx,r12
  4237d0:	test   dl,dl
  4237d2:	jne    423809 <flatcc_json_parser_generic_json@@Base+0xb09>
  4237d4:	test   al,al
  4237d6:	je     423809 <flatcc_json_parser_generic_json@@Base+0xb09>
  4237d8:	cmp    DWORD PTR [r15],0x0
  4237dc:	jne    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  4237de:	xor    eax,eax
  4237e0:	cmp    BYTE PTR [rsp+rcx*1+0x1f],0x5d
  4237e5:	sete   al
  4237e8:	mov    ecx,0xa
  4237ed:	sub    ecx,eax
  4237ef:	mov    DWORD PTR [r15],ecx
  4237f2:	mov    eax,DWORD PTR [rbp+0x0]
  4237f5:	mov    ecx,ebx
  4237f7:	sub    ecx,eax
  4237f9:	inc    ecx
  4237fb:	mov    rax,QWORD PTR [rsp+0x8]
  423800:	mov    DWORD PTR [rax],ecx
  423802:	mov    QWORD PTR [r13+0x0],rbx
  423806:	mov    rsi,rbx
  423809:	mov    rax,rsi
  42380c:	add    rsp,0x228
  423813:	pop    rbx
  423814:	pop    r12
  423816:	pop    r13
  423818:	pop    r14
  42381a:	pop    r15
  42381c:	pop    rbp
  42381d:	ret    
  42381e:	cmp    DWORD PTR [r15],0x0
  423822:	jne    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  423824:	mov    DWORD PTR [r15],0xa
  42382b:	jmp    4237f2 <flatcc_json_parser_generic_json@@Base+0xaf2>
  42382d:	cmp    DWORD PTR [r15],0x0
  423831:	jne    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  423833:	mov    DWORD PTR [r15],0x4
  42383a:	mov    eax,DWORD PTR [rbp+0x0]
  42383d:	mov    edx,ecx
  42383f:	sub    edx,eax
  423841:	inc    edx
  423843:	mov    rax,QWORD PTR [rsp+0x8]
  423848:	mov    DWORD PTR [rax],edx
  42384a:	mov    QWORD PTR [r13+0x0],rcx
  42384e:	jmp    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  423850:	cmp    DWORD PTR [r15],0x0
  423854:	jne    423806 <flatcc_json_parser_generic_json@@Base+0xb06>
  423856:	mov    DWORD PTR [r15],0x2
  42385d:	jmp    4237ae <flatcc_json_parser_generic_json@@Base+0xaae>
  423862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42386c:	nop    DWORD PTR [rax+0x0]

0000000000423870 <flatcc_json_parser_double@@Base>:
  423870:	push   r15
  423872:	push   r14
  423874:	push   r12
  423876:	push   rbx
  423877:	push   rax
  423878:	mov    rbx,rsi
  42387b:	mov    QWORD PTR [rcx],0x0
  423882:	cmp    rsi,rdx
  423885:	je     423912 <flatcc_json_parser_double@@Base+0xa2>
  42388b:	mov    r12,rcx
  42388e:	mov    r14,rdx
  423891:	mov    r15,rdi
  423894:	lea    rax,[rbx+0x1]
  423898:	xor    ecx,ecx
  42389a:	cmp    BYTE PTR [rbx],0x2d
  42389d:	sete   dl
  4238a0:	cmovne rax,rbx
  4238a4:	mov    rsi,r14
  4238a7:	sub    rsi,rax
  4238aa:	cmp    rsi,0x2
  4238ae:	jl     4238ce <flatcc_json_parser_double@@Base+0x5e>
  4238b0:	mov    cl,dl
  4238b2:	mov    cl,BYTE PTR [rbx+rcx*1]
  4238b5:	cmp    cl,0x2e
  4238b8:	je     4238c5 <flatcc_json_parser_double@@Base+0x55>
  4238ba:	cmp    cl,0x30
  4238bd:	jne    4238ce <flatcc_json_parser_double@@Base+0x5e>
  4238bf:	cmp    BYTE PTR [rax+0x1],0x30
  4238c3:	jne    4238ce <flatcc_json_parser_double@@Base+0x5e>
  4238c5:	cmp    DWORD PTR [r15+0x1c],0x0
  4238ca:	jne    423935 <flatcc_json_parser_double@@Base+0xc5>
  4238cc:	jmp    42391b <flatcc_json_parser_double@@Base+0xab>
  4238ce:	mov    esi,r14d
  4238d1:	sub    esi,ebx
  4238d3:	mov    rdi,rbx
  4238d6:	mov    rdx,r12
  4238d9:	call   423950 <flatcc_json_parser_double@@Base+0xe0>
  4238de:	test   rax,rax
  4238e1:	je     4238e8 <flatcc_json_parser_double@@Base+0x78>
  4238e3:	cmp    rax,rbx
  4238e6:	jne    423938 <flatcc_json_parser_double@@Base+0xc8>
  4238e8:	vmovsd xmm0,QWORD PTR [r12]
  4238ee:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x145fa]        # 437ef0 <flatcc_builder_padding_base@@Base+0x24d0>
  4238f6:	vucomisd xmm0,QWORD PTR [rip+0x14602]        # 437f00 <flatcc_builder_padding_base@@Base+0x24e0>
  4238fe:	mov    eax,DWORD PTR [r15+0x1c]
  423902:	jb     423917 <flatcc_json_parser_double@@Base+0xa7>
  423904:	test   eax,eax
  423906:	jne    423935 <flatcc_json_parser_double@@Base+0xc5>
  423908:	mov    DWORD PTR [r15+0x1c],0x7
  423910:	jmp    423923 <flatcc_json_parser_double@@Base+0xb3>
  423912:	mov    rax,rbx
  423915:	jmp    423938 <flatcc_json_parser_double@@Base+0xc8>
  423917:	test   eax,eax
  423919:	jne    423935 <flatcc_json_parser_double@@Base+0xc5>
  42391b:	mov    DWORD PTR [r15+0x1c],0x6
  423923:	mov    eax,DWORD PTR [r15+0x8]
  423927:	mov    ecx,ebx
  423929:	sub    ecx,eax
  42392b:	inc    ecx
  42392d:	mov    DWORD PTR [r15+0x18],ecx
  423931:	mov    QWORD PTR [r15+0x30],rbx
  423935:	mov    rax,r14
  423938:	add    rsp,0x8
  42393c:	pop    rbx
  42393d:	pop    r12
  42393f:	pop    r14
  423941:	pop    r15
  423943:	ret    
  423944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42394e:	xchg   ax,ax
  423950:	push   rbp
  423951:	push   r15
  423953:	push   r14
  423955:	push   r13
  423957:	push   r12
  423959:	push   rbx
  42395a:	sub    rsp,0x18
  42395e:	mov    r14,rdx
  423961:	mov    r15,rdi
  423964:	mov    QWORD PTR [rdx],0x0
  42396b:	cmp    esi,0x3e9
  423971:	mov    edx,0x3e8
  423976:	cmovl  edx,esi
  423979:	movsxd r13,edx
  42397c:	lea    r12,[rdi+r13*1]
  423980:	add    r12,0x1
  423984:	cmp    r12,rdi
  423987:	je     423d95 <flatcc_json_parser_double@@Base+0x525>
  42398d:	mov    cl,BYTE PTR [r15]
  423990:	xor    r11d,r11d
  423993:	mov    rax,r15
  423996:	cmp    cl,0x2d
  423999:	jne    4239af <flatcc_json_parser_double@@Base+0x13f>
  42399b:	test   edx,edx
  42399d:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  4239a3:	lea    rax,[r15+0x1]
  4239a7:	mov    cl,BYTE PTR [rax]
  4239a9:	mov    r11d,0x1
  4239af:	lea    r8,[r15+r13*1]
  4239b3:	cmp    cl,0x30
  4239b6:	jne    4239d9 <flatcc_json_parser_double@@Base+0x169>
  4239b8:	lea    rsi,[rax+0x1]
  4239bc:	cmp    rax,r8
  4239bf:	je     423a24 <flatcc_json_parser_double@@Base+0x1b4>
  4239c1:	mov    al,BYTE PTR [rsi]
  4239c3:	mov    ecx,eax
  4239c5:	or     cl,0x20
  4239c8:	cmp    cl,0x78
  4239cb:	jne    4239fc <flatcc_json_parser_double@@Base+0x18c>
  4239cd:	mov    QWORD PTR [r14],0x0
  4239d4:	jmp    423d95 <flatcc_json_parser_double@@Base+0x525>
  4239d9:	lea    edx,[rcx-0x31]
  4239dc:	cmp    dl,0x9
  4239df:	jb     4239ef <flatcc_json_parser_double@@Base+0x17f>
  4239e1:	xor    eax,eax
  4239e3:	test   r11d,r11d
  4239e6:	cmovne r15,rax
  4239ea:	jmp    423d95 <flatcc_json_parser_double@@Base+0x525>
  4239ef:	movsx  rdi,cl
  4239f3:	inc    rax
  4239f6:	add    rdi,0xffffffffffffffd0
  4239fa:	jmp    423a17 <flatcc_json_parser_double@@Base+0x1a7>
  4239fc:	cmp    al,0x30
  4239fe:	jne    423a24 <flatcc_json_parser_double@@Base+0x1b4>
  423a00:	mov    rax,rsi
  423a03:	cmp    r8,rsi
  423a06:	je     423a12 <flatcc_json_parser_double@@Base+0x1a2>
  423a08:	lea    rsi,[rax+0x1]
  423a0c:	cmp    BYTE PTR [rax+0x1],0x30
  423a10:	je     423a00 <flatcc_json_parser_double@@Base+0x190>
  423a12:	inc    rax
  423a15:	xor    edi,edi
  423a17:	mov    rsi,rax
  423a1a:	cmp    rsi,r12
  423a1d:	jne    423a2f <flatcc_json_parser_double@@Base+0x1bf>
  423a1f:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423a24:	xor    edi,edi
  423a26:	cmp    rsi,r12
  423a29:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423a2f:	movabs r10,0x1999999999999998
  423a39:	mov    rbx,rsi
  423a3c:	xor    ecx,ecx
  423a3e:	xchg   ax,ax
  423a40:	movsx  rax,BYTE PTR [rbx]
  423a44:	lea    edx,[rax-0x30]
  423a47:	cmp    dl,0x9
  423a4a:	ja     423a65 <flatcc_json_parser_double@@Base+0x1f5>
  423a4c:	cmp    rdi,r10
  423a4f:	ja     423a6f <flatcc_json_parser_double@@Base+0x1ff>
  423a51:	lea    rdx,[rdi+rdi*4]
  423a55:	inc    rbx
  423a58:	lea    rdi,[rax+rdx*2]
  423a5c:	add    rdi,0xffffffffffffffd0
  423a60:	cmp    r12,rbx
  423a63:	jne    423a40 <flatcc_json_parser_double@@Base+0x1d0>
  423a65:	cmp    rbx,r12
  423a68:	jne    423a87 <flatcc_json_parser_double@@Base+0x217>
  423a6a:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423a6f:	xor    ecx,ecx
  423a71:	cmp    al,0x34
  423a73:	setg   cl
  423a76:	add    rdi,rcx
  423a79:	mov    ecx,0x1
  423a7e:	cmp    rbx,r12
  423a81:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423a87:	mov    r9d,ebx
  423a8a:	sub    r9d,esi
  423a8d:	mov    rbp,r13
  423a90:	sub    rbp,rbx
  423a93:	lea    rdx,[r15+rbp*1]
  423a97:	add    rdx,0x1
  423a9b:	xor    esi,esi
  423a9d:	nop    DWORD PTR [rax]
  423aa0:	movzx  eax,BYTE PTR [rbx+rsi*1]
  423aa4:	cmp    al,0x30
  423aa6:	jne    423ab2 <flatcc_json_parser_double@@Base+0x242>
  423aa8:	inc    rsi
  423aab:	cmp    rdx,rsi
  423aae:	jne    423aa0 <flatcc_json_parser_double@@Base+0x230>
  423ab0:	jmp    423b04 <flatcc_json_parser_double@@Base+0x294>
  423ab2:	add    al,0xcf
  423ab4:	cmp    al,0x9
  423ab6:	jae    423b04 <flatcc_json_parser_double@@Base+0x294>
  423ab8:	lea    rcx,[rsi+0x1]
  423abc:	not    rsi
  423abf:	add    rbp,r15
  423ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423acc:	nop    DWORD PTR [rax+0x0]
  423ad0:	mov    rdx,rsi
  423ad3:	lea    rax,[rsi+rbp*1]
  423ad7:	cmp    rax,0xffffffffffffffff
  423adb:	je     423aee <flatcc_json_parser_double@@Base+0x27e>
  423add:	movzx  eax,BYTE PTR [rbx+rcx*1]
  423ae1:	add    al,0xd0
  423ae3:	lea    rsi,[rdx-0x1]
  423ae7:	inc    rcx
  423aea:	cmp    al,0xa
  423aec:	jb     423ad0 <flatcc_json_parser_double@@Base+0x260>
  423aee:	mov    esi,edx
  423af0:	neg    esi
  423af2:	sub    rbx,rdx
  423af5:	mov    ecx,0x1
  423afa:	cmp    rbx,r12
  423afd:	jne    423b10 <flatcc_json_parser_double@@Base+0x2a0>
  423aff:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423b04:	add    rbx,rsi
  423b07:	cmp    rbx,r12
  423b0a:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423b10:	cmp    BYTE PTR [rbx],0x2e
  423b13:	jne    423b8d <flatcc_json_parser_double@@Base+0x31d>
  423b15:	mov    al,BYTE PTR [rbx+0x1]
  423b18:	lea    edx,[rax-0x30]
  423b1b:	cmp    dl,0x9
  423b1e:	ja     423d92 <flatcc_json_parser_double@@Base+0x522>
  423b24:	lea    rdx,[rbx+0x1]
  423b28:	cmp    rbx,r8
  423b2b:	je     423c44 <flatcc_json_parser_double@@Base+0x3d4>
  423b31:	mov    QWORD PTR [rsp+0x8],rdx
  423b36:	mov    DWORD PTR [rsp+0x4],r11d
  423b3b:	sub    r13,rbx
  423b3e:	add    r13,r15
  423b41:	add    r13,0xffffffffffffffff
  423b45:	xor    r11d,r11d
  423b48:	mov    rdx,r11
  423b4b:	cmp    rdi,r10
  423b4e:	ja     423c54 <flatcc_json_parser_double@@Base+0x3e4>
  423b54:	lea    rdi,[rdi+rdi*4]
  423b58:	movsx  rax,al
  423b5c:	lea    rdi,[rax+rdi*2]
  423b60:	add    rdi,0xffffffffffffffd0
  423b64:	cmp    r13,rdx
  423b67:	je     423b7b <flatcc_json_parser_double@@Base+0x30b>
  423b69:	movzx  eax,BYTE PTR [rbx+rdx*1+0x2]
  423b6e:	lea    ebp,[rax-0x30]
  423b71:	lea    r11,[rdx+0x1]
  423b75:	cmp    bpl,0xa
  423b79:	jb     423b48 <flatcc_json_parser_double@@Base+0x2d8>
  423b7b:	add    rbx,rdx
  423b7e:	add    rbx,0x2
  423b82:	not    edx
  423b84:	add    edx,esi
  423b86:	mov    esi,edx
  423b88:	jmp    423c73 <flatcc_json_parser_double@@Base+0x403>
  423b8d:	mov    edx,r9d
  423b90:	xor    r9d,r9d
  423b93:	cmp    rbx,r12
  423b96:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423b9c:	mov    al,BYTE PTR [rbx]
  423b9e:	or     al,0x20
  423ba0:	cmp    al,0x65
  423ba2:	jne    423bdf <flatcc_json_parser_double@@Base+0x36f>
  423ba4:	mov    rax,r12
  423ba7:	sub    rax,rbx
  423baa:	xor    r9d,r9d
  423bad:	cmp    rax,0x2
  423bb1:	jl     423d92 <flatcc_json_parser_double@@Base+0x522>
  423bb7:	mov    al,BYTE PTR [rbx+0x1]
  423bba:	cmp    al,0x2d
  423bbc:	je     423d2f <flatcc_json_parser_double@@Base+0x4bf>
  423bc2:	cmp    al,0x2b
  423bc4:	jne    423d40 <flatcc_json_parser_double@@Base+0x4d0>
  423bca:	add    rbx,0x2
  423bce:	xor    r9d,r9d
  423bd1:	cmp    rbx,r12
  423bd4:	jne    423d43 <flatcc_json_parser_double@@Base+0x4d3>
  423bda:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423bdf:	xor    r10d,r10d
  423be2:	cmp    rbx,r12
  423be5:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423beb:	mov    eax,r10d
  423bee:	neg    eax
  423bf0:	test   r9d,r9d
  423bf3:	cmove  eax,r10d
  423bf7:	vxorpd xmm0,xmm0,xmm0
  423bfb:	test   rdi,rdi
  423bfe:	je     423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423c00:	add    esi,edx
  423c02:	add    esi,eax
  423c04:	cmp    esi,0xfffffebc
  423c0a:	jl     423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423c0c:	cmp    esi,0x136
  423c12:	jle    423cd5 <flatcc_json_parser_double@@Base+0x465>
  423c18:	vmovsd xmm0,QWORD PTR [rip+0x142e0]        # 437f00 <flatcc_builder_padding_base@@Base+0x24e0>
  423c20:	vmovsd QWORD PTR [r14],xmm0
  423c25:	test   r11d,r11d
  423c28:	je     423c3c <flatcc_json_parser_double@@Base+0x3cc>
  423c2a:	vmovsd xmm0,QWORD PTR [r14]
  423c2f:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xee99]        # 432ad0 <_IO_stdin_used@@Base+0xad0>
  423c37:	vmovlpd QWORD PTR [r14],xmm0
  423c3c:	mov    r15,rbx
  423c3f:	jmp    423d95 <flatcc_json_parser_double@@Base+0x525>
  423c44:	mov    rbx,rdx
  423c47:	mov    rax,rdx
  423c4a:	cmp    rbx,r12
  423c4d:	jne    423c86 <flatcc_json_parser_double@@Base+0x416>
  423c4f:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423c54:	mov    esi,esi
  423c56:	sub    rsi,rdx
  423c59:	add    rbx,rdx
  423c5c:	add    rbx,0x1
  423c60:	test   ecx,ecx
  423c62:	jne    423c73 <flatcc_json_parser_double@@Base+0x403>
  423c64:	xor    ecx,ecx
  423c66:	cmp    al,0x34
  423c68:	setg   cl
  423c6b:	add    rdi,rcx
  423c6e:	mov    ecx,0x1
  423c73:	mov    r11d,DWORD PTR [rsp+0x4]
  423c78:	mov    rax,QWORD PTR [rsp+0x8]
  423c7d:	cmp    rbx,r12
  423c80:	je     423d92 <flatcc_json_parser_double@@Base+0x522>
  423c86:	mov    edx,ebx
  423c88:	sub    edx,eax
  423c8a:	add    edx,r9d
  423c8d:	movzx  eax,BYTE PTR [rbx]
  423c90:	cmp    al,0x30
  423c92:	jne    423ca3 <flatcc_json_parser_double@@Base+0x433>
  423c94:	inc    esi
  423c96:	inc    rbx
  423c99:	cmp    r12,rbx
  423c9c:	jne    423c8d <flatcc_json_parser_double@@Base+0x41d>
  423c9e:	jmp    423b90 <flatcc_json_parser_double@@Base+0x320>
  423ca3:	add    al,0xcf
  423ca5:	cmp    al,0x8
  423ca7:	ja     423b90 <flatcc_json_parser_double@@Base+0x320>
  423cad:	mov    rax,rbx
  423cb0:	cmp    r8,rbx
  423cb3:	je     423cc5 <flatcc_json_parser_double@@Base+0x455>
  423cb5:	lea    rbx,[rax+0x1]
  423cb9:	movzx  ecx,BYTE PTR [rax+0x1]
  423cbd:	add    cl,0xd0
  423cc0:	cmp    cl,0xa
  423cc3:	jb     423cad <flatcc_json_parser_double@@Base+0x43d>
  423cc5:	inc    rax
  423cc8:	mov    ecx,0x1
  423ccd:	mov    rbx,rax
  423cd0:	jmp    423b90 <flatcc_json_parser_double@@Base+0x320>
  423cd5:	mov    rax,rdi
  423cd8:	shr    rax,0x35
  423cdc:	jne    423da7 <flatcc_json_parser_double@@Base+0x537>
  423ce2:	cmp    esi,0x16
  423ce5:	ja     423da7 <flatcc_json_parser_double@@Base+0x537>
  423ceb:	vmovq  xmm0,rdi
  423cf0:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xedb8]        # 432ab0 <_IO_stdin_used@@Base+0xab0>
  423cf8:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xedc0]        # 432ac0 <_IO_stdin_used@@Base+0xac0>
  423d00:	vhaddpd xmm0,xmm0,xmm0
  423d04:	sub    esi,edx
  423d06:	add    esi,0x16
  423d09:	cmp    esi,0x2c
  423d0c:	ja     423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423d12:	lea    rax,[rip+0x1393b]        # 437654 <flatcc_builder_padding_base@@Base+0x1c34>
  423d19:	movsxd rcx,DWORD PTR [rax+rsi*4]
  423d1d:	add    rcx,rax
  423d20:	jmp    rcx
  423d22:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14286]        # 437fb0 <flatcc_builder_padding_base@@Base+0x2590>
  423d2a:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423d2f:	add    rbx,0x2
  423d33:	mov    r9d,0x1
  423d39:	cmp    rbx,r12
  423d3c:	jne    423d43 <flatcc_json_parser_double@@Base+0x4d3>
  423d3e:	jmp    423d92 <flatcc_json_parser_double@@Base+0x522>
  423d40:	inc    rbx
  423d43:	movsx  r10d,BYTE PTR [rbx]
  423d47:	lea    eax,[r10-0x30]
  423d4b:	cmp    al,0x9
  423d4d:	ja     423d92 <flatcc_json_parser_double@@Base+0x522>
  423d4f:	add    r10d,0xffffffd0
  423d53:	cmp    rbx,r8
  423d56:	jne    423d62 <flatcc_json_parser_double@@Base+0x4f2>
  423d58:	jmp    423d86 <flatcc_json_parser_double@@Base+0x516>
  423d5a:	inc    rbx
  423d5d:	cmp    r8,rbx
  423d60:	je     423d86 <flatcc_json_parser_double@@Base+0x516>
  423d62:	movsx  eax,BYTE PTR [rbx+0x1]
  423d66:	lea    ebp,[rax-0x30]
  423d69:	cmp    bpl,0x9
  423d6d:	ja     423d86 <flatcc_json_parser_double@@Base+0x516>
  423d6f:	cmp    r10d,0x7fff
  423d76:	jg     423d5a <flatcc_json_parser_double@@Base+0x4ea>
  423d78:	lea    ebp,[r10+r10*4]
  423d7c:	lea    r10d,[rax+rbp*2]
  423d80:	add    r10d,0xffffffd0
  423d84:	jmp    423d5a <flatcc_json_parser_double@@Base+0x4ea>
  423d86:	inc    rbx
  423d89:	cmp    rbx,r12
  423d8c:	jne    423beb <flatcc_json_parser_double@@Base+0x37b>
  423d92:	xor    r15d,r15d
  423d95:	mov    rax,r15
  423d98:	add    rsp,0x18
  423d9c:	pop    rbx
  423d9d:	pop    r12
  423d9f:	pop    r13
  423da1:	pop    r14
  423da3:	pop    r15
  423da5:	pop    rbp
  423da6:	ret    
  423da7:	mov    r8,r14
  423daa:	mov    ebp,r11d
  423dad:	call   422260 <grisu3_diy_fp_encode_double@@Base>
  423db2:	mov    r11d,ebp
  423db5:	test   eax,eax
  423db7:	jne    423c25 <flatcc_json_parser_double@@Base+0x3b5>
  423dbd:	lea    rsi,[rsp+0x10]
  423dc2:	mov    rdi,r15
  423dc5:	call   406050 <strtod@plt>
  423dca:	vmovsd QWORD PTR [r14],xmm0
  423dcf:	mov    rax,QWORD PTR [rsp+0x10]
  423dd4:	cmp    rax,rbx
  423dd7:	cmovb  rbx,rax
  423ddb:	jmp    423c3c <flatcc_json_parser_double@@Base+0x3cc>
  423de0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14120]        # 437f08 <flatcc_builder_padding_base@@Base+0x24e8>
  423de8:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ded:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1411b]        # 437f10 <flatcc_builder_padding_base@@Base+0x24f0>
  423df5:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423dfa:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14116]        # 437f18 <flatcc_builder_padding_base@@Base+0x24f8>
  423e02:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e07:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14111]        # 437f20 <flatcc_builder_padding_base@@Base+0x2500>
  423e0f:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e14:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1410c]        # 437f28 <flatcc_builder_padding_base@@Base+0x2508>
  423e1c:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e21:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14107]        # 437f30 <flatcc_builder_padding_base@@Base+0x2510>
  423e29:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e2e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14102]        # 437f38 <flatcc_builder_padding_base@@Base+0x2518>
  423e36:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e3b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140fd]        # 437f40 <flatcc_builder_padding_base@@Base+0x2520>
  423e43:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e48:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140f8]        # 437f48 <flatcc_builder_padding_base@@Base+0x2528>
  423e50:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e55:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140f3]        # 437f50 <flatcc_builder_padding_base@@Base+0x2530>
  423e5d:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e62:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140ee]        # 437f58 <flatcc_builder_padding_base@@Base+0x2538>
  423e6a:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e6f:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140e9]        # 437f60 <flatcc_builder_padding_base@@Base+0x2540>
  423e77:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e7c:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140e4]        # 437f68 <flatcc_builder_padding_base@@Base+0x2548>
  423e84:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e89:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140df]        # 437f70 <flatcc_builder_padding_base@@Base+0x2550>
  423e91:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423e96:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140da]        # 437f78 <flatcc_builder_padding_base@@Base+0x2558>
  423e9e:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ea3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140d5]        # 437f80 <flatcc_builder_padding_base@@Base+0x2560>
  423eab:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423eb0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140d0]        # 437f88 <flatcc_builder_padding_base@@Base+0x2568>
  423eb8:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ebd:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140cb]        # 437f90 <flatcc_builder_padding_base@@Base+0x2570>
  423ec5:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423eca:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140c6]        # 437f98 <flatcc_builder_padding_base@@Base+0x2578>
  423ed2:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ed7:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140c1]        # 437fa0 <flatcc_builder_padding_base@@Base+0x2580>
  423edf:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ee4:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x140bc]        # 437fa8 <flatcc_builder_padding_base@@Base+0x2588>
  423eec:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ef1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x140af]        # 437fa8 <flatcc_builder_padding_base@@Base+0x2588>
  423ef9:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423efe:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1409a]        # 437fa0 <flatcc_builder_padding_base@@Base+0x2580>
  423f06:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f0b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14085]        # 437f98 <flatcc_builder_padding_base@@Base+0x2578>
  423f13:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f18:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14070]        # 437f90 <flatcc_builder_padding_base@@Base+0x2570>
  423f20:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f25:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1405b]        # 437f88 <flatcc_builder_padding_base@@Base+0x2568>
  423f2d:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f32:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14046]        # 437f80 <flatcc_builder_padding_base@@Base+0x2560>
  423f3a:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f3f:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14031]        # 437f78 <flatcc_builder_padding_base@@Base+0x2558>
  423f47:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f4c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1401c]        # 437f70 <flatcc_builder_padding_base@@Base+0x2550>
  423f54:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f59:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14007]        # 437f68 <flatcc_builder_padding_base@@Base+0x2548>
  423f61:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f66:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13ff2]        # 437f60 <flatcc_builder_padding_base@@Base+0x2540>
  423f6e:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f73:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13fdd]        # 437f58 <flatcc_builder_padding_base@@Base+0x2538>
  423f7b:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f80:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13fc8]        # 437f50 <flatcc_builder_padding_base@@Base+0x2530>
  423f88:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f8d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13fb3]        # 437f48 <flatcc_builder_padding_base@@Base+0x2528>
  423f95:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423f9a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f9e]        # 437f40 <flatcc_builder_padding_base@@Base+0x2520>
  423fa2:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fa7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f89]        # 437f38 <flatcc_builder_padding_base@@Base+0x2518>
  423faf:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fb4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f74]        # 437f30 <flatcc_builder_padding_base@@Base+0x2510>
  423fbc:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fc1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f5f]        # 437f28 <flatcc_builder_padding_base@@Base+0x2508>
  423fc9:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fce:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f4a]        # 437f20 <flatcc_builder_padding_base@@Base+0x2500>
  423fd6:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fdb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f35]        # 437f18 <flatcc_builder_padding_base@@Base+0x24f8>
  423fe3:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423fe8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f20]        # 437f10 <flatcc_builder_padding_base@@Base+0x24f0>
  423ff0:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  423ff5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13f0b]        # 437f08 <flatcc_builder_padding_base@@Base+0x24e8>
  423ffd:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  424002:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x13fa6]        # 437fb0 <flatcc_builder_padding_base@@Base+0x2590>
  42400a:	jmp    423c20 <flatcc_json_parser_double@@Base+0x3b0>
  42400f:	nop

0000000000424010 <flatcc_json_parser_float@@Base>:
  424010:	push   r15
  424012:	push   r14
  424014:	push   r12
  424016:	push   rbx
  424017:	push   rax
  424018:	mov    rbx,rsi
  42401b:	mov    DWORD PTR [rcx],0x0
  424021:	cmp    rsi,rdx
  424024:	je     4240b8 <flatcc_json_parser_float@@Base+0xa8>
  42402a:	mov    r12,rcx
  42402d:	mov    r14,rdx
  424030:	mov    r15,rdi
  424033:	lea    rax,[rbx+0x1]
  424037:	xor    ecx,ecx
  424039:	cmp    BYTE PTR [rbx],0x2d
  42403c:	sete   dl
  42403f:	cmovne rax,rbx
  424043:	mov    rsi,r14
  424046:	sub    rsi,rax
  424049:	cmp    rsi,0x2
  42404d:	jl     424074 <flatcc_json_parser_float@@Base+0x64>
  42404f:	mov    cl,dl
  424051:	mov    cl,BYTE PTR [rbx+rcx*1]
  424054:	cmp    cl,0x2e
  424057:	je     424064 <flatcc_json_parser_float@@Base+0x54>
  424059:	cmp    cl,0x30
  42405c:	jne    424074 <flatcc_json_parser_float@@Base+0x64>
  42405e:	cmp    BYTE PTR [rax+0x1],0x30
  424062:	jne    424074 <flatcc_json_parser_float@@Base+0x64>
  424064:	cmp    DWORD PTR [r15+0x1c],0x0
  424069:	jne    424121 <flatcc_json_parser_float@@Base+0x111>
  42406f:	jmp    424107 <flatcc_json_parser_float@@Base+0xf7>
  424074:	mov    esi,r14d
  424077:	sub    esi,ebx
  424079:	mov    rdx,rsp
  42407c:	mov    rdi,rbx
  42407f:	call   423950 <flatcc_json_parser_double@@Base+0xe0>
  424084:	vmovsd xmm1,QWORD PTR [rsp]
  424089:	vcvtsd2ss xmm2,xmm1,xmm1
  42408d:	vbroadcastss xmm0,DWORD PTR [rip+0x13f22]        # 437fb8 <flatcc_builder_padding_base@@Base+0x2598>
  424096:	vandps xmm3,xmm2,xmm0
  42409a:	vxorps xmm4,xmm4,xmm4
  42409e:	vucomisd xmm4,xmm1
  4240a2:	vmovss xmm4,DWORD PTR [rip+0x13f16]        # 437fc0 <flatcc_builder_padding_base@@Base+0x25a0>
  4240aa:	ja     4240bd <flatcc_json_parser_float@@Base+0xad>
  4240ac:	vmovaps xmm1,xmm4
  4240b0:	vucomiss xmm3,xmm4
  4240b4:	jb     4240cb <flatcc_json_parser_float@@Base+0xbb>
  4240b6:	jmp    4240cf <flatcc_json_parser_float@@Base+0xbf>
  4240b8:	mov    rax,rbx
  4240bb:	jmp    424124 <flatcc_json_parser_float@@Base+0x114>
  4240bd:	vmovss xmm1,DWORD PTR [rip+0x13ef7]        # 437fbc <flatcc_builder_padding_base@@Base+0x259c>
  4240c5:	vucomiss xmm3,xmm4
  4240c9:	jae    4240cf <flatcc_json_parser_float@@Base+0xbf>
  4240cb:	vmovaps xmm1,xmm2
  4240cf:	cmovae rax,rbx
  4240d3:	vmovss DWORD PTR [r12],xmm1
  4240d9:	test   rax,rax
  4240dc:	je     4240e3 <flatcc_json_parser_float@@Base+0xd3>
  4240de:	cmp    rax,rbx
  4240e1:	jne    424124 <flatcc_json_parser_float@@Base+0x114>
  4240e3:	vandps xmm0,xmm1,xmm0
  4240e7:	vucomiss xmm0,DWORD PTR [rip+0x13ed1]        # 437fc0 <flatcc_builder_padding_base@@Base+0x25a0>
  4240ef:	mov    eax,DWORD PTR [r15+0x1c]
  4240f3:	jb     424103 <flatcc_json_parser_float@@Base+0xf3>
  4240f5:	test   eax,eax
  4240f7:	jne    424121 <flatcc_json_parser_float@@Base+0x111>
  4240f9:	mov    DWORD PTR [r15+0x1c],0x7
  424101:	jmp    42410f <flatcc_json_parser_float@@Base+0xff>
  424103:	test   eax,eax
  424105:	jne    424121 <flatcc_json_parser_float@@Base+0x111>
  424107:	mov    DWORD PTR [r15+0x1c],0x6
  42410f:	mov    eax,DWORD PTR [r15+0x8]
  424113:	mov    ecx,ebx
  424115:	sub    ecx,eax
  424117:	inc    ecx
  424119:	mov    DWORD PTR [r15+0x18],ecx
  42411d:	mov    QWORD PTR [r15+0x30],rbx
  424121:	mov    rax,r14
  424124:	add    rsp,0x8
  424128:	pop    rbx
  424129:	pop    r12
  42412b:	pop    r14
  42412d:	pop    r15
  42412f:	ret    

0000000000424130 <flatcc_json_parser_integer@@Base>:
  424130:	mov    rax,rsi
  424133:	cmp    rsi,rdx
  424136:	je     4241cb <flatcc_json_parser_integer@@Base+0x9b>
  42413c:	xor    r10d,r10d
  42413f:	cmp    BYTE PTR [rax],0x2d
  424142:	sete   r10b
  424146:	mov    DWORD PTR [rcx],r10d
  424149:	add    r10,rax
  42414c:	xor    r9d,r9d
  42414f:	cmp    r10,rdx
  424152:	je     4241c1 <flatcc_json_parser_integer@@Base+0x91>
  424154:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42415e:	xchg   ax,ax
  424160:	movsx  r11,BYTE PTR [r10]
  424164:	lea    esi,[r11-0x30]
  424168:	cmp    sil,0x9
  42416c:	ja     4241d3 <flatcc_json_parser_integer@@Base+0xa3>
  42416e:	lea    rsi,[r9+r9*4]
  424172:	lea    rsi,[r11+rsi*2]
  424176:	add    rsi,0xffffffffffffffd0
  42417a:	cmp    r9,rsi
  42417d:	ja     4241dc <flatcc_json_parser_integer@@Base+0xac>
  42417f:	inc    r10
  424182:	mov    r9,rsi
  424185:	cmp    rdx,r10
  424188:	jne    424160 <flatcc_json_parser_integer@@Base+0x30>
  42418a:	xor    ecx,ecx
  42418c:	mov    r10,rdx
  42418f:	mov    r9,rsi
  424192:	cmp    r10,rax
  424195:	je     4241cb <flatcc_json_parser_integer@@Base+0x9b>
  424197:	test   cl,cl
  424199:	je     4241cc <flatcc_json_parser_integer@@Base+0x9c>
  42419b:	mov    al,BYTE PTR [r10]
  42419e:	add    al,0xd2
  4241a0:	cmp    al,0x37
  4241a2:	ja     4241cc <flatcc_json_parser_integer@@Base+0x9c>
  4241a4:	movzx  eax,al
  4241a7:	movabs rcx,0x80000000800001
  4241b1:	bt     rcx,rax
  4241b5:	jae    4241cc <flatcc_json_parser_integer@@Base+0x9c>
  4241b7:	cmp    DWORD PTR [rdi+0x1c],0x0
  4241bb:	je     4241e6 <flatcc_json_parser_integer@@Base+0xb6>
  4241bd:	mov    rax,rdx
  4241c0:	ret    
  4241c1:	mov    r10,rdx
  4241c4:	xor    ecx,ecx
  4241c6:	cmp    r10,rax
  4241c9:	jne    424197 <flatcc_json_parser_integer@@Base+0x67>
  4241cb:	ret    
  4241cc:	mov    QWORD PTR [r8],r9
  4241cf:	mov    rax,r10
  4241d2:	ret    
  4241d3:	mov    cl,0x1
  4241d5:	cmp    r10,rax
  4241d8:	jne    424197 <flatcc_json_parser_integer@@Base+0x67>
  4241da:	jmp    4241cb <flatcc_json_parser_integer@@Base+0x9b>
  4241dc:	cmp    DWORD PTR [rdi+0x1c],0x0
  4241e0:	je     4241ef <flatcc_json_parser_integer@@Base+0xbf>
  4241e2:	mov    rax,rdx
  4241e5:	ret    
  4241e6:	mov    DWORD PTR [rdi+0x1c],0xc
  4241ed:	jmp    4241fe <flatcc_json_parser_integer@@Base+0xce>
  4241ef:	cmp    rcx,0x1
  4241f3:	mov    eax,0x8
  4241f8:	sbb    eax,0x0
  4241fb:	mov    DWORD PTR [rdi+0x1c],eax
  4241fe:	mov    eax,DWORD PTR [rdi+0x8]
  424201:	mov    ecx,r10d
  424204:	sub    ecx,eax
  424206:	inc    ecx
  424208:	mov    DWORD PTR [rdi+0x18],ecx
  42420b:	mov    QWORD PTR [rdi+0x30],r10
  42420f:	mov    rax,rdx
  424212:	ret    
  424213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42421d:	nop    DWORD PTR [rax]

0000000000424220 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  424220:	push   rbp
  424221:	push   r15
  424223:	push   r14
  424225:	push   r13
  424227:	push   r12
  424229:	push   rbx
  42422a:	sub    rsp,0x28
  42422e:	mov    r12d,r8d
  424231:	mov    r15,rcx
  424234:	mov    r14,rdx
  424237:	mov    r13,rsi
  42423a:	mov    rbx,rdi
  42423d:	cmp    rsi,rdx
  424240:	je     424289 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  424242:	cmp    BYTE PTR [r13+0x0],0x22
  424247:	jne    424289 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x69>
  424249:	inc    r13
  42424c:	cmp    r13,r14
  42424f:	je     4242a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  424251:	mov    rbp,r13
  424254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42425e:	xchg   ax,ax
  424260:	movzx  ecx,BYTE PTR [rbp+0x0]
  424264:	cmp    cl,0x20
  424267:	jb     424309 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xe9>
  42426d:	cmp    cl,0x22
  424270:	je     42432b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  424276:	cmp    cl,0x5c
  424279:	je     42432b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10b>
  42427f:	inc    rbp
  424282:	cmp    r14,rbp
  424285:	jne    424260 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  424287:	jmp    4242a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  424289:	cmp    DWORD PTR [rbx+0x1c],0x0
  42428d:	jne    4242a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x87>
  42428f:	mov    DWORD PTR [rbx+0x1c],0x10
  424296:	mov    eax,DWORD PTR [rbx+0x8]
  424299:	mov    ecx,r13d
  42429c:	sub    ecx,eax
  42429e:	inc    ecx
  4242a0:	mov    DWORD PTR [rbx+0x18],ecx
  4242a3:	mov    QWORD PTR [rbx+0x30],r13
  4242a7:	cmp    DWORD PTR [rbx+0x1c],0x0
  4242ab:	mov    rax,r14
  4242ae:	jne    4242cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4242b0:	mov    DWORD PTR [rbx+0x1c],0x14
  4242b7:	mov    eax,DWORD PTR [rbx+0x8]
  4242ba:	mov    ecx,r14d
  4242bd:	sub    ecx,eax
  4242bf:	inc    ecx
  4242c1:	mov    DWORD PTR [rbx+0x18],ecx
  4242c4:	mov    QWORD PTR [rbx+0x30],r14
  4242c8:	mov    rax,r14
  4242cb:	mov    DWORD PTR [r15],0x0
  4242d2:	cmp    DWORD PTR [rbx+0x1c],0x0
  4242d6:	jne    4242f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  4242d8:	cmp    r12d,0x1
  4242dc:	mov    ecx,0x1f
  4242e1:	sbb    ecx,0xffffffff
  4242e4:	mov    DWORD PTR [rbx+0x1c],ecx
  4242e7:	mov    ecx,DWORD PTR [rbx+0x8]
  4242ea:	mov    edx,eax
  4242ec:	sub    edx,ecx
  4242ee:	inc    edx
  4242f0:	mov    DWORD PTR [rbx+0x18],edx
  4242f3:	mov    QWORD PTR [rbx+0x30],rax
  4242f7:	mov    rax,r14
  4242fa:	add    rsp,0x28
  4242fe:	pop    rbx
  4242ff:	pop    r12
  424301:	pop    r13
  424303:	pop    r14
  424305:	pop    r15
  424307:	pop    rbp
  424308:	ret    
  424309:	cmp    DWORD PTR [rbx+0x1c],0x0
  42430d:	mov    rax,r14
  424310:	jne    4242cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  424312:	mov    DWORD PTR [rbx+0x1c],0x11
  424319:	mov    eax,DWORD PTR [rbx+0x8]
  42431c:	mov    ecx,ebp
  42431e:	sub    ecx,eax
  424320:	inc    ecx
  424322:	mov    DWORD PTR [rbx+0x18],ecx
  424325:	mov    QWORD PTR [rbx+0x30],rbp
  424329:	jmp    4242c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xa8>
  42432b:	mov    rax,r14
  42432e:	cmp    r14,rbp
  424331:	je     4242cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  424333:	cmp    cl,0x22
  424336:	jne    424362 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x142>
  424338:	mov    rcx,rbp
  42433b:	sub    rcx,r13
  42433e:	mov    eax,ecx
  424340:	and    eax,0x3
  424343:	mov    QWORD PTR [rsp+0x18],rcx
  424348:	shr    rcx,0x2
  42434c:	lea    rcx,[rcx+rcx*2]
  424350:	cmp    rax,0x2
  424354:	je     42436a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14a>
  424356:	cmp    rax,0x3
  42435a:	jne    42436d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  42435c:	add    rcx,0x2
  424360:	jmp    42436d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  424362:	mov    rax,rbp
  424365:	jmp    4242cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  42436a:	inc    rcx
  42436d:	mov    QWORD PTR [rsp+0x8],rcx
  424372:	mov    rdi,QWORD PTR [rbx]
  424375:	mov    esi,0x1
  42437a:	mov    ecx,0xffffffff
  42437f:	mov    edx,0x1
  424384:	call   41d850 <flatcc_builder_start_vector@@Base>
  424389:	test   eax,eax
  42438b:	je     4243ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19a>
  42438d:	mov    DWORD PTR [r15],0x0
  424394:	cmp    DWORD PTR [rbx+0x1c],0x0
  424398:	jne    4242f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  42439e:	mov    DWORD PTR [rbx+0x1c],0x21
  4243a5:	mov    eax,DWORD PTR [rbx+0x8]
  4243a8:	mov    ecx,ebp
  4243aa:	sub    ecx,eax
  4243ac:	inc    ecx
  4243ae:	mov    DWORD PTR [rbx+0x18],ecx
  4243b1:	mov    QWORD PTR [rbx+0x30],rbp
  4243b5:	jmp    4242f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  4243ba:	mov    rdi,QWORD PTR [rbx]
  4243bd:	mov    rsi,QWORD PTR [rsp+0x8]
  4243c2:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  4243c7:	test   rax,rax
  4243ca:	je     42438d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  4243cc:	test   r12d,r12d
  4243cf:	lea    rcx,[rip+0x13a1a]        # 437df0 <flatcc_builder_padding_base@@Base+0x23d0>
  4243d6:	lea    r11,[rip+0x13913]        # 437cf0 <flatcc_builder_padding_base@@Base+0x22d0>
  4243dd:	cmovne r11,rcx
  4243e1:	xor    r10d,r10d
  4243e4:	mov    rcx,QWORD PTR [rsp+0x8]
  4243e9:	cmp    rcx,0x1
  4243ed:	sbb    r10,r10
  4243f0:	or     r10,rcx
  4243f3:	mov    QWORD PTR [rsp+0x20],rax
  4243f8:	mov    r9,rax
  4243fb:	mov    rsi,QWORD PTR [rsp+0x18]
  424400:	mov    r8,r13
  424403:	mov    rdi,rsi
  424406:	xor    edx,edx
  424408:	cmp    rdi,rdx
  42440b:	jne    424424 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
  42440d:	jmp    4244a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  424412:	inc    rdx
  424415:	cmp    rdx,0x4
  424419:	jae    42444b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  42441b:	cmp    rdi,rdx
  42441e:	je     4244a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x287>
  424424:	movzx  ecx,BYTE PTR [r8+rdx*1]
  424429:	movzx  ecx,BYTE PTR [r11+rcx*1]
  42442e:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  424432:	cmp    cl,0x40
  424435:	jb     424412 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  424437:	cmp    cl,0x41
  42443a:	jne    4244fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
  424440:	inc    r8
  424443:	dec    rdi
  424446:	dec    rdx
  424449:	jmp    424412 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f2>
  42444b:	cmp    r10,0x3
  42444f:	jb     42457e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  424455:	mov    al,BYTE PTR [rsp+0x4]
  424459:	mov    cl,BYTE PTR [rsp+0x5]
  42445d:	shl    al,0x2
  424460:	mov    edx,ecx
  424462:	shr    dl,0x4
  424465:	or     dl,al
  424467:	mov    BYTE PTR [r9],dl
  42446a:	shl    cl,0x4
  42446d:	mov    al,BYTE PTR [rsp+0x6]
  424471:	shr    al,0x2
  424474:	or     al,cl
  424476:	mov    BYTE PTR [r9+0x1],al
  42447a:	mov    al,BYTE PTR [rsp+0x6]
  42447e:	shl    al,0x6
  424481:	or     al,BYTE PTR [rsp+0x7]
  424485:	mov    BYTE PTR [r9+0x2],al
  424489:	add    r9,0x3
  42448d:	add    r8,0x4
  424491:	add    rdi,0xfffffffffffffffc
  424495:	mov    rsi,rdi
  424498:	add    r10,0xfffffffffffffffd
  42449c:	jne    424406 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  4244a2:	jmp    42456f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  4244a7:	mov    QWORD PTR [rsp+0x10],rsi
  4244ac:	mov    rdx,rdi
  4244af:	mov    rsi,rdi
  4244b2:	sub    rdi,rsi
  4244b5:	test   rdx,rdx
  4244b8:	je     42456f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x34f>
  4244be:	cmp    rdx,0x3
  4244c2:	je     424532 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x312>
  4244c4:	cmp    rdx,0x2
  4244c8:	mov    rsi,QWORD PTR [rsp+0x10]
  4244cd:	jne    42457e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  4244d3:	mov    cl,BYTE PTR [rsp+0x5]
  4244d7:	test   cl,0xf
  4244da:	jne    42457e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  4244e0:	mov    al,BYTE PTR [rsp+0x4]
  4244e4:	shl    al,0x2
  4244e7:	shr    cl,0x4
  4244ea:	or     cl,al
  4244ec:	mov    BYTE PTR [r9],cl
  4244ef:	inc    r9
  4244f2:	test   rdi,rdi
  4244f5:	jne    424574 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x354>
  4244f7:	jmp    424591 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  4244fc:	mov    QWORD PTR [rsp+0x10],rsi
  424501:	cmp    cl,0x42
  424504:	jne    4245d6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b6>
  42450a:	lea    rcx,[rdx+0x1]
  42450e:	mov    rsi,rcx
  424511:	cmp    rcx,rdi
  424514:	jae    4244b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  424516:	cmp    rsi,0x7
  42451a:	ja     4244b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  42451c:	movzx  ecx,BYTE PTR [r8+rsi*1]
  424521:	movzx  eax,BYTE PTR [r11+rcx*1]
  424526:	add    al,0xbf
  424528:	lea    rcx,[rsi+0x1]
  42452c:	cmp    al,0x2
  42452e:	jb     42450e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ee>
  424530:	jmp    4244b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  424532:	cmp    r10,0x2
  424536:	mov    rsi,QWORD PTR [rsp+0x10]
  42453b:	jb     42457e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  42453d:	mov    cl,BYTE PTR [rsp+0x6]
  424541:	mov    eax,ecx
  424543:	and    al,0x3
  424545:	jne    42457e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35e>
  424547:	mov    sil,BYTE PTR [rsp+0x4]
  42454c:	mov    al,BYTE PTR [rsp+0x5]
  424550:	shl    sil,0x2
  424554:	mov    edx,eax
  424556:	shr    dl,0x4
  424559:	or     dl,sil
  42455c:	mov    BYTE PTR [r9],dl
  42455f:	shl    al,0x4
  424562:	shr    cl,0x2
  424565:	or     cl,al
  424567:	mov    BYTE PTR [r9+0x1],cl
  42456b:	add    r9,0x2
  42456f:	test   rdi,rdi
  424572:	je     424591 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x371>
  424574:	mov    rax,QWORD PTR [rsp+0x18]
  424579:	sub    rax,rdi
  42457c:	jmp    424586 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x366>
  42457e:	mov    rax,QWORD PTR [rsp+0x18]
  424583:	sub    rax,rsi
  424586:	add    r13,rax
  424589:	mov    rax,r13
  42458c:	jmp    4242cb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  424591:	sub    r9,QWORD PTR [rsp+0x20]
  424596:	sub    QWORD PTR [rsp+0x8],r9
  42459b:	jbe    4245b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x392>
  42459d:	mov    rdi,QWORD PTR [rbx]
  4245a0:	mov    rsi,QWORD PTR [rsp+0x8]
  4245a5:	call   41d6d0 <flatcc_builder_truncate_vector@@Base>
  4245aa:	test   eax,eax
  4245ac:	jne    42438d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  4245b2:	mov    rdi,QWORD PTR [rbx]
  4245b5:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  4245ba:	mov    DWORD PTR [r15],eax
  4245bd:	test   eax,eax
  4245bf:	je     42438d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16d>
  4245c5:	cmp    BYTE PTR [rbp+0x0],0x22
  4245c9:	jne    4245de <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3be>
  4245cb:	inc    rbp
  4245ce:	mov    r14,rbp
  4245d1:	jmp    4242f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  4245d6:	mov    rsi,rdx
  4245d9:	jmp    4244b2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x292>
  4245de:	cmp    DWORD PTR [rbx+0x1c],0x0
  4245e2:	jne    4242f7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd7>
  4245e8:	mov    DWORD PTR [rbx+0x1c],0x14
  4245ef:	jmp    4243a5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x185>
  4245f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4245fe:	xchg   ax,ax

0000000000424600 <flatcc_json_parser_build_string@@Base>:
  424600:	push   rbp
  424601:	push   r15
  424603:	push   r14
  424605:	push   r13
  424607:	push   r12
  424609:	push   rbx
  42460a:	push   rax
  42460b:	mov    r15,rcx
  42460e:	mov    r12,rdx
  424611:	mov    r14,rdi
  424614:	cmp    rsi,rdx
  424617:	je     42465f <flatcc_json_parser_build_string@@Base+0x5f>
  424619:	cmp    BYTE PTR [rsi],0x22
  42461c:	jne    42465f <flatcc_json_parser_build_string@@Base+0x5f>
  42461e:	inc    rsi
  424621:	mov    rbp,r12
  424624:	cmp    rsi,r12
  424627:	je     42466d <flatcc_json_parser_build_string@@Base+0x6d>
  424629:	mov    rbx,rsi
  42462c:	nop    DWORD PTR [rax+0x0]
  424630:	movzx  eax,BYTE PTR [rbx]
  424633:	cmp    al,0x20
  424635:	jb     4247ae <flatcc_json_parser_build_string@@Base+0x1ae>
  42463b:	cmp    al,0x22
  42463d:	je     4247d1 <flatcc_json_parser_build_string@@Base+0x1d1>
  424643:	cmp    al,0x5c
  424645:	je     4247d1 <flatcc_json_parser_build_string@@Base+0x1d1>
  42464b:	inc    rbx
  42464e:	cmp    r12,rbx
  424651:	jne    424630 <flatcc_json_parser_build_string@@Base+0x30>
  424653:	mov    rbp,rsi
  424656:	cmp    DWORD PTR [r14+0x1c],0x0
  42465b:	jne    42468f <flatcc_json_parser_build_string@@Base+0x8f>
  42465d:	jmp    424674 <flatcc_json_parser_build_string@@Base+0x74>
  42465f:	cmp    DWORD PTR [r14+0x1c],0x0
  424664:	mov    rbp,r12
  424667:	je     424781 <flatcc_json_parser_build_string@@Base+0x181>
  42466d:	cmp    DWORD PTR [r14+0x1c],0x0
  424672:	jne    42468f <flatcc_json_parser_build_string@@Base+0x8f>
  424674:	mov    DWORD PTR [r14+0x1c],0x14
  42467c:	mov    eax,DWORD PTR [r14+0x8]
  424680:	mov    ecx,r12d
  424683:	sub    ecx,eax
  424685:	inc    ecx
  424687:	mov    DWORD PTR [r14+0x18],ecx
  42468b:	mov    QWORD PTR [r14+0x30],r12
  42468f:	mov    rbx,r12
  424692:	mov    rdi,QWORD PTR [r14]
  424695:	call   41db50 <flatcc_builder_start_string@@Base>
  42469a:	test   eax,eax
  42469c:	je     4246ba <flatcc_json_parser_build_string@@Base+0xba>
  42469e:	mov    DWORD PTR [r15],0x0
  4246a5:	mov    r12,rbx
  4246a8:	mov    rax,r12
  4246ab:	add    rsp,0x8
  4246af:	pop    rbx
  4246b0:	pop    r12
  4246b2:	pop    r13
  4246b4:	pop    r14
  4246b6:	pop    r15
  4246b8:	pop    rbp
  4246b9:	ret    
  4246ba:	mov    rdi,QWORD PTR [r14]
  4246bd:	mov    rdx,rbx
  4246c0:	sub    rdx,rbp
  4246c3:	mov    rsi,rbp
  4246c6:	call   41d560 <flatcc_builder_append_string@@Base>
  4246cb:	test   rax,rax
  4246ce:	je     42469e <flatcc_json_parser_build_string@@Base+0x9e>
  4246d0:	mov    rbp,r12
  4246d3:	cmp    rbx,r12
  4246d6:	je     424843 <flatcc_json_parser_build_string@@Base+0x243>
  4246dc:	lea    rbp,[rsp+0x4]
  4246e1:	cmp    BYTE PTR [rbx],0x22
  4246e4:	je     42488d <flatcc_json_parser_build_string@@Base+0x28d>
  4246ea:	mov    rdi,r14
  4246ed:	mov    rsi,rbx
  4246f0:	mov    rdx,r12
  4246f3:	mov    rcx,rbp
  4246f6:	call   422800 <flatcc_json_parser_string_escape@@Base>
  4246fb:	mov    r13,rax
  4246fe:	mov    rdi,QWORD PTR [r14]
  424701:	movsx  rdx,BYTE PTR [rsp+0x4]
  424707:	lea    rsi,[rsp+0x5]
  42470c:	call   41d560 <flatcc_builder_append_string@@Base>
  424711:	test   rax,rax
  424714:	je     424892 <flatcc_json_parser_build_string@@Base+0x292>
  42471a:	cmp    r13,r12
  42471d:	je     4247f5 <flatcc_json_parser_build_string@@Base+0x1f5>
  424723:	mov    rbx,r13
  424726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424730:	movzx  eax,BYTE PTR [rbx]
  424733:	cmp    al,0x20
  424735:	jb     42481c <flatcc_json_parser_build_string@@Base+0x21c>
  42473b:	cmp    al,0x22
  42473d:	je     424750 <flatcc_json_parser_build_string@@Base+0x150>
  42473f:	cmp    al,0x5c
  424741:	je     424750 <flatcc_json_parser_build_string@@Base+0x150>
  424743:	inc    rbx
  424746:	cmp    r12,rbx
  424749:	jne    424730 <flatcc_json_parser_build_string@@Base+0x130>
  42474b:	jmp    4247f5 <flatcc_json_parser_build_string@@Base+0x1f5>
  424750:	cmp    r12,rbx
  424753:	je     424840 <flatcc_json_parser_build_string@@Base+0x240>
  424759:	mov    rdi,QWORD PTR [r14]
  42475c:	mov    rdx,rbx
  42475f:	sub    rdx,r13
  424762:	mov    rsi,r13
  424765:	call   41d560 <flatcc_builder_append_string@@Base>
  42476a:	test   rax,rax
  42476d:	je     42469e <flatcc_json_parser_build_string@@Base+0x9e>
  424773:	cmp    r12,rbx
  424776:	jne    4246e1 <flatcc_json_parser_build_string@@Base+0xe1>
  42477c:	jmp    424840 <flatcc_json_parser_build_string@@Base+0x240>
  424781:	mov    DWORD PTR [r14+0x1c],0x10
  424789:	mov    eax,DWORD PTR [r14+0x8]
  42478d:	mov    ecx,esi
  42478f:	sub    ecx,eax
  424791:	inc    ecx
  424793:	mov    DWORD PTR [r14+0x18],ecx
  424797:	mov    QWORD PTR [r14+0x30],rsi
  42479b:	mov    rbp,r12
  42479e:	cmp    DWORD PTR [r14+0x1c],0x0
  4247a3:	jne    42468f <flatcc_json_parser_build_string@@Base+0x8f>
  4247a9:	jmp    424674 <flatcc_json_parser_build_string@@Base+0x74>
  4247ae:	cmp    DWORD PTR [r14+0x1c],0x0
  4247b3:	jne    4247ea <flatcc_json_parser_build_string@@Base+0x1ea>
  4247b5:	mov    DWORD PTR [r14+0x1c],0x11
  4247bd:	mov    eax,DWORD PTR [r14+0x8]
  4247c1:	mov    ecx,ebx
  4247c3:	sub    ecx,eax
  4247c5:	inc    ecx
  4247c7:	mov    DWORD PTR [r14+0x18],ecx
  4247cb:	mov    QWORD PTR [r14+0x30],rbx
  4247cf:	jmp    4247ea <flatcc_json_parser_build_string@@Base+0x1ea>
  4247d1:	cmp    r12,rbx
  4247d4:	je     4247ea <flatcc_json_parser_build_string@@Base+0x1ea>
  4247d6:	cmp    al,0x22
  4247d8:	jne    4247ed <flatcc_json_parser_build_string@@Base+0x1ed>
  4247da:	mov    rdi,QWORD PTR [r14]
  4247dd:	mov    rdx,rbx
  4247e0:	sub    rdx,rsi
  4247e3:	call   41fde0 <flatcc_builder_create_string@@Base>
  4247e8:	jmp    42484e <flatcc_json_parser_build_string@@Base+0x24e>
  4247ea:	mov    rbx,r12
  4247ed:	mov    rbp,rsi
  4247f0:	jmp    424692 <flatcc_json_parser_build_string@@Base+0x92>
  4247f5:	cmp    DWORD PTR [r14+0x1c],0x0
  4247fa:	mov    rbp,r12
  4247fd:	jne    424843 <flatcc_json_parser_build_string@@Base+0x243>
  4247ff:	mov    DWORD PTR [r14+0x1c],0x14
  424807:	mov    eax,DWORD PTR [r14+0x8]
  42480b:	mov    ecx,r12d
  42480e:	sub    ecx,eax
  424810:	inc    ecx
  424812:	mov    DWORD PTR [r14+0x18],ecx
  424816:	mov    QWORD PTR [r14+0x30],r12
  42481a:	jmp    424840 <flatcc_json_parser_build_string@@Base+0x240>
  42481c:	cmp    DWORD PTR [r14+0x1c],0x0
  424821:	mov    rbp,r12
  424824:	jne    424843 <flatcc_json_parser_build_string@@Base+0x243>
  424826:	mov    DWORD PTR [r14+0x1c],0x11
  42482e:	mov    eax,DWORD PTR [r14+0x8]
  424832:	mov    ecx,ebx
  424834:	sub    ecx,eax
  424836:	inc    ecx
  424838:	mov    DWORD PTR [r14+0x18],ecx
  42483c:	mov    QWORD PTR [r14+0x30],rbx
  424840:	mov    rbp,r12
  424843:	mov    rdi,QWORD PTR [r14]
  424846:	call   41ff80 <flatcc_builder_end_string@@Base>
  42484b:	mov    rbx,rbp
  42484e:	mov    DWORD PTR [r15],eax
  424851:	cmp    rbx,r12
  424854:	je     424863 <flatcc_json_parser_build_string@@Base+0x263>
  424856:	cmp    BYTE PTR [rbx],0x22
  424859:	jne    424863 <flatcc_json_parser_build_string@@Base+0x263>
  42485b:	inc    rbx
  42485e:	jmp    4246a5 <flatcc_json_parser_build_string@@Base+0xa5>
  424863:	cmp    DWORD PTR [r14+0x1c],0x0
  424868:	jne    4246a8 <flatcc_json_parser_build_string@@Base+0xa8>
  42486e:	mov    DWORD PTR [r14+0x1c],0x14
  424876:	mov    eax,DWORD PTR [r14+0x8]
  42487a:	mov    ecx,ebx
  42487c:	sub    ecx,eax
  42487e:	inc    ecx
  424880:	mov    DWORD PTR [r14+0x18],ecx
  424884:	mov    QWORD PTR [r14+0x30],rbx
  424888:	jmp    4246a8 <flatcc_json_parser_build_string@@Base+0xa8>
  42488d:	mov    rbp,rbx
  424890:	jmp    424843 <flatcc_json_parser_build_string@@Base+0x243>
  424892:	mov    rbx,r13
  424895:	jmp    42469e <flatcc_json_parser_build_string@@Base+0x9e>
  42489a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004248a0 <flatcc_json_parser_prepare_unions@@Base>:
  4248a0:	push   r15
  4248a2:	push   r14
  4248a4:	push   r13
  4248a6:	push   r12
  4248a8:	push   rbx
  4248a9:	mov    r13,r8
  4248ac:	mov    r12,rcx
  4248af:	mov    r15,rdx
  4248b2:	mov    r14,rsi
  4248b5:	mov    rbx,rdi
  4248b8:	mov    rdi,QWORD PTR [rdi]
  4248bb:	lea    rax,[rcx+rcx*4]
  4248bf:	lea    rsi,[rax*8+0x10]
  4248c7:	call   41c250 <flatcc_builder_enter_user_frame@@Base>
  4248cc:	mov    QWORD PTR [r13+0x0],rax
  4248d0:	test   rax,rax
  4248d3:	je     4248e8 <flatcc_json_parser_prepare_unions@@Base+0x48>
  4248d5:	mov    rdi,QWORD PTR [rbx]
  4248d8:	mov    rsi,rax
  4248db:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4248e0:	mov    QWORD PTR [rax],r12
  4248e3:	mov    r15,r14
  4248e6:	jmp    424906 <flatcc_json_parser_prepare_unions@@Base+0x66>
  4248e8:	cmp    DWORD PTR [rbx+0x1c],0x0
  4248ec:	jne    424906 <flatcc_json_parser_prepare_unions@@Base+0x66>
  4248ee:	mov    DWORD PTR [rbx+0x1c],0x21
  4248f5:	mov    eax,DWORD PTR [rbx+0x8]
  4248f8:	mov    ecx,r14d
  4248fb:	sub    ecx,eax
  4248fd:	inc    ecx
  4248ff:	mov    DWORD PTR [rbx+0x18],ecx
  424902:	mov    QWORD PTR [rbx+0x30],r14
  424906:	mov    rax,r15
  424909:	pop    rbx
  42490a:	pop    r12
  42490c:	pop    r13
  42490e:	pop    r14
  424910:	pop    r15
  424912:	ret    
  424913:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42491d:	nop    DWORD PTR [rax]

0000000000424920 <flatcc_json_parser_finalize_unions@@Base>:
  424920:	push   r15
  424922:	push   r14
  424924:	push   r12
  424926:	push   rbx
  424927:	push   rax
  424928:	mov    r15,rcx
  42492b:	mov    r14,rdx
  42492e:	mov    r12,rsi
  424931:	mov    rbx,rdi
  424934:	mov    rdi,QWORD PTR [rdi]
  424937:	mov    rsi,rcx
  42493a:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42493f:	cmp    QWORD PTR [rax+0x8],0x0
  424944:	je     424966 <flatcc_json_parser_finalize_unions@@Base+0x46>
  424946:	cmp    DWORD PTR [rbx+0x1c],0x0
  42494a:	jne    424969 <flatcc_json_parser_finalize_unions@@Base+0x49>
  42494c:	mov    DWORD PTR [rbx+0x1c],0x1b
  424953:	mov    eax,DWORD PTR [rbx+0x8]
  424956:	mov    ecx,r12d
  424959:	sub    ecx,eax
  42495b:	inc    ecx
  42495d:	mov    DWORD PTR [rbx+0x18],ecx
  424960:	mov    QWORD PTR [rbx+0x30],r12
  424964:	jmp    424969 <flatcc_json_parser_finalize_unions@@Base+0x49>
  424966:	mov    r14,r12
  424969:	mov    rdi,QWORD PTR [rbx]
  42496c:	mov    rsi,r15
  42496f:	call   41c350 <flatcc_builder_exit_user_frame_at@@Base>
  424974:	mov    rax,r14
  424977:	add    rsp,0x8
  42497b:	pop    rbx
  42497c:	pop    r12
  42497e:	pop    r14
  424980:	pop    r15
  424982:	ret    
  424983:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42498d:	nop    DWORD PTR [rax]

0000000000424990 <flatcc_json_parser_union@@Base>:
  424990:	push   rbp
  424991:	push   r15
  424993:	push   r14
  424995:	push   r12
  424997:	push   rbx
  424998:	sub    rsp,0x10
  42499c:	mov    r12d,r8d
  42499f:	mov    rbp,rcx
  4249a2:	mov    r14,rdx
  4249a5:	mov    r15,rsi
  4249a8:	mov    rbx,rdi
  4249ab:	mov    rdi,QWORD PTR [rdi]
  4249ae:	mov    rsi,r9
  4249b1:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4249b6:	lea    rcx,[rbp*4+0x0]
  4249be:	add    rcx,rbp
  4249c1:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  4249c7:	je     4249f0 <flatcc_json_parser_union@@Base+0x60>
  4249c9:	cmp    DWORD PTR [rbx+0x1c],0x0
  4249cd:	jne    424a7d <flatcc_json_parser_union@@Base+0xed>
  4249d3:	mov    DWORD PTR [rbx+0x1c],0x1c
  4249da:	mov    eax,DWORD PTR [rbx+0x8]
  4249dd:	mov    ecx,r15d
  4249e0:	sub    ecx,eax
  4249e2:	inc    ecx
  4249e4:	mov    DWORD PTR [rbx+0x18],ecx
  4249e7:	mov    QWORD PTR [rbx+0x30],r15
  4249eb:	jmp    424a7d <flatcc_json_parser_union@@Base+0xed>
  4249f0:	lea    rdx,[rax+0x10]
  4249f4:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  4249f9:	je     424a45 <flatcc_json_parser_union@@Base+0xb5>
  4249fb:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  4249ff:	mov    BYTE PTR [rsp+0x8],cl
  424a03:	test   cl,cl
  424a05:	je     424a77 <flatcc_json_parser_union@@Base+0xe7>
  424a07:	mov    rbp,QWORD PTR [rsp+0x40]
  424a0c:	dec    QWORD PTR [rax+0x8]
  424a10:	lea    r8,[rsp+0xc]
  424a15:	movzx  ecx,cl
  424a18:	mov    rdi,rbx
  424a1b:	mov    rsi,r15
  424a1e:	mov    rdx,r14
  424a21:	call   rbp
  424a23:	cmp    rax,r14
  424a26:	je     424a7d <flatcc_json_parser_union@@Base+0xed>
  424a28:	mov    r15,rax
  424a2b:	mov    rdi,QWORD PTR [rbx]
  424a2e:	movzx  esi,r12w
  424a32:	mov    rdx,QWORD PTR [rsp+0x8]
  424a37:	call   41edf0 <flatcc_builder_table_add_union@@Base>
  424a3c:	test   eax,eax
  424a3e:	jne    4249c9 <flatcc_json_parser_union@@Base+0x39>
  424a40:	mov    r14,r15
  424a43:	jmp    424a7d <flatcc_json_parser_union@@Base+0xed>
  424a45:	inc    QWORD PTR [rax+0x8]
  424a49:	lea    rax,[rax+rcx*8]
  424a4d:	add    rax,0x10
  424a51:	mov    esi,DWORD PTR [rbx+0x14]
  424a54:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  424a58:	mov    rsi,QWORD PTR [rbx+0x8]
  424a5c:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  424a61:	mov    QWORD PTR [rax],r15
  424a64:	mov    rdi,rbx
  424a67:	mov    rsi,r15
  424a6a:	mov    rdx,r14
  424a6d:	call   422d00 <flatcc_json_parser_generic_json@@Base>
  424a72:	mov    r14,rax
  424a75:	jmp    424a7d <flatcc_json_parser_union@@Base+0xed>
  424a77:	cmp    DWORD PTR [rbx+0x1c],0x0
  424a7b:	je     424a8d <flatcc_json_parser_union@@Base+0xfd>
  424a7d:	mov    rax,r14
  424a80:	add    rsp,0x10
  424a84:	pop    rbx
  424a85:	pop    r12
  424a87:	pop    r14
  424a89:	pop    r15
  424a8b:	pop    rbp
  424a8c:	ret    
  424a8d:	mov    DWORD PTR [rbx+0x1c],0x19
  424a94:	jmp    4249da <flatcc_json_parser_union@@Base+0x4a>
  424a99:	nop    DWORD PTR [rax+0x0]

0000000000424aa0 <flatcc_json_parser_union_type@@Base>:
  424aa0:	push   rbp
  424aa1:	push   r15
  424aa3:	push   r14
  424aa5:	push   r13
  424aa7:	push   r12
  424aa9:	push   rbx
  424aaa:	sub    rsp,0x18
  424aae:	mov    ebx,r8d
  424ab1:	mov    rbp,rcx
  424ab4:	mov    r14,rdx
  424ab7:	mov    r12,rsi
  424aba:	mov    r15,rdi
  424abd:	mov    rdi,QWORD PTR [rdi]
  424ac0:	mov    rsi,r9
  424ac3:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  424ac8:	lea    r13,[rbp*4+0x0]
  424ad0:	add    r13,rbp
  424ad3:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  424ad9:	je     424b06 <flatcc_json_parser_union_type@@Base+0x66>
  424adb:	cmp    DWORD PTR [r15+0x1c],0x0
  424ae0:	jne    424d2f <flatcc_json_parser_union_type@@Base+0x28f>
  424ae6:	mov    DWORD PTR [r15+0x1c],0x1c
  424aee:	mov    eax,DWORD PTR [r15+0x8]
  424af2:	mov    ecx,r12d
  424af5:	sub    ecx,eax
  424af7:	inc    ecx
  424af9:	mov    DWORD PTR [r15+0x18],ecx
  424afd:	mov    QWORD PTR [r15+0x30],r12
  424b01:	jmp    424d2f <flatcc_json_parser_union_type@@Base+0x28f>
  424b06:	mov    r11,rax
  424b09:	mov    DWORD PTR [rsp+0xc],ebx
  424b0d:	lea    r10,[rax+0x10]
  424b11:	lea    rax,[rax+r13*8]
  424b15:	add    rax,0x24
  424b19:	mov    BYTE PTR [rax],0x1
  424b1c:	lea    r8,[r10+r13*8]
  424b20:	add    r8,0x15
  424b24:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  424b2a:	cmp    r12,r14
  424b2d:	je     424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424b33:	mov    r9b,BYTE PTR [r12]
  424b37:	xor    eax,eax
  424b39:	cmp    r9b,0x2d
  424b3d:	sete   al
  424b40:	add    rax,r12
  424b43:	xor    edx,edx
  424b45:	cmp    rax,r14
  424b48:	je     424b8a <flatcc_json_parser_union_type@@Base+0xea>
  424b4a:	nop    WORD PTR [rax+rax*1+0x0]
  424b50:	movsx  rdi,BYTE PTR [rax]
  424b54:	lea    ecx,[rdi-0x30]
  424b57:	cmp    cl,0x9
  424b5a:	ja     424bca <flatcc_json_parser_union_type@@Base+0x12a>
  424b5c:	lea    rcx,[rdx+rdx*4]
  424b60:	lea    rdi,[rdi+rcx*2]
  424b64:	add    rdi,0xffffffffffffffd0
  424b68:	cmp    rdx,rdi
  424b6b:	ja     424bd6 <flatcc_json_parser_union_type@@Base+0x136>
  424b6d:	inc    rax
  424b70:	mov    rdx,rdi
  424b73:	cmp    r14,rax
  424b76:	jne    424b50 <flatcc_json_parser_union_type@@Base+0xb0>
  424b78:	xor    ecx,ecx
  424b7a:	mov    rax,r14
  424b7d:	mov    rdx,rdi
  424b80:	cmp    rax,r12
  424b83:	jne    424b98 <flatcc_json_parser_union_type@@Base+0xf8>
  424b85:	jmp    424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424b8a:	mov    rax,r14
  424b8d:	xor    ecx,ecx
  424b8f:	cmp    rax,r12
  424b92:	je     424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424b98:	test   cl,cl
  424b9a:	je     424bfc <flatcc_json_parser_union_type@@Base+0x15c>
  424b9c:	mov    cl,BYTE PTR [rax]
  424b9e:	add    cl,0xd2
  424ba1:	cmp    cl,0x37
  424ba4:	ja     424bfc <flatcc_json_parser_union_type@@Base+0x15c>
  424ba6:	movzx  ecx,cl
  424ba9:	movabs rdi,0x80000000800001
  424bb3:	bt     rdi,rcx
  424bb7:	jae    424bfc <flatcc_json_parser_union_type@@Base+0x15c>
  424bb9:	cmp    DWORD PTR [r15+0x1c],0x0
  424bbe:	jne    424bf7 <flatcc_json_parser_union_type@@Base+0x157>
  424bc0:	mov    DWORD PTR [r15+0x1c],0xc
  424bc8:	jmp    424be5 <flatcc_json_parser_union_type@@Base+0x145>
  424bca:	mov    cl,0x1
  424bcc:	cmp    rax,r12
  424bcf:	jne    424b98 <flatcc_json_parser_union_type@@Base+0xf8>
  424bd1:	jmp    424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424bd6:	cmp    DWORD PTR [r15+0x1c],0x0
  424bdb:	jne    424bf7 <flatcc_json_parser_union_type@@Base+0x157>
  424bdd:	mov    DWORD PTR [r15+0x1c],0x8
  424be5:	mov    ecx,DWORD PTR [r15+0x8]
  424be9:	mov    edx,eax
  424beb:	sub    edx,ecx
  424bed:	inc    edx
  424bef:	mov    DWORD PTR [r15+0x18],edx
  424bf3:	mov    QWORD PTR [r15+0x30],rax
  424bf7:	xor    edx,edx
  424bf9:	mov    rax,r14
  424bfc:	cmp    rax,r12
  424bff:	je     424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424c01:	cmp    r9b,0x2d
  424c05:	jne    424c1b <flatcc_json_parser_union_type@@Base+0x17b>
  424c07:	cmp    DWORD PTR [r15+0x1c],0x0
  424c0c:	mov    rbp,r14
  424c0f:	jne    424c58 <flatcc_json_parser_union_type@@Base+0x1b8>
  424c11:	mov    DWORD PTR [r15+0x1c],0x8
  424c19:	jmp    424c36 <flatcc_json_parser_union_type@@Base+0x196>
  424c1b:	cmp    rdx,0x100
  424c22:	jb     424c52 <flatcc_json_parser_union_type@@Base+0x1b2>
  424c24:	cmp    DWORD PTR [r15+0x1c],0x0
  424c29:	mov    rbp,r14
  424c2c:	jne    424c58 <flatcc_json_parser_union_type@@Base+0x1b8>
  424c2e:	mov    DWORD PTR [r15+0x1c],0x7
  424c36:	mov    ecx,DWORD PTR [r15+0x8]
  424c3a:	mov    edx,eax
  424c3c:	sub    edx,ecx
  424c3e:	inc    edx
  424c40:	mov    DWORD PTR [r15+0x18],edx
  424c44:	mov    QWORD PTR [r15+0x30],rax
  424c48:	mov    rbp,r14
  424c4b:	cmp    rbp,r12
  424c4e:	jne    424c85 <flatcc_json_parser_union_type@@Base+0x1e5>
  424c50:	jmp    424c5d <flatcc_json_parser_union_type@@Base+0x1bd>
  424c52:	mov    BYTE PTR [r8],dl
  424c55:	mov    rbp,rax
  424c58:	cmp    rbp,r12
  424c5b:	jne    424c85 <flatcc_json_parser_union_type@@Base+0x1e5>
  424c5d:	mov    rcx,QWORD PTR [rsp+0x50]
  424c62:	mov    rdi,r15
  424c65:	mov    rsi,r12
  424c68:	mov    rdx,r14
  424c6b:	mov    rbx,r8
  424c6e:	mov    rbp,r10
  424c71:	mov    r12,r11
  424c74:	call   424d60 <flatcc_json_parser_union_type@@Base+0x2c0>
  424c79:	mov    r11,r12
  424c7c:	mov    r10,rbp
  424c7f:	mov    r8,rbx
  424c82:	mov    rbp,rax
  424c85:	mov    rsi,QWORD PTR [r10+r13*8]
  424c89:	test   rsi,rsi
  424c8c:	je     424d19 <flatcc_json_parser_union_type@@Base+0x279>
  424c92:	mov    rax,QWORD PTR [r11+0x8]
  424c96:	test   rax,rax
  424c99:	je     424d41 <flatcc_json_parser_union_type@@Base+0x2a1>
  424c9f:	mov    r9,QWORD PTR [rsp+0x58]
  424ca4:	dec    rax
  424ca7:	mov    QWORD PTR [r11+0x8],rax
  424cab:	mov    r12d,DWORD PTR [r15+0x14]
  424caf:	mov    rbx,QWORD PTR [r15+0x8]
  424cb3:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  424cb8:	mov    DWORD PTR [r15+0x14],eax
  424cbc:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  424cc1:	mov    QWORD PTR [r15+0x8],rax
  424cc5:	movzx  ecx,BYTE PTR [r8]
  424cc9:	mov    BYTE PTR [rsp+0x10],cl
  424ccd:	lea    r8,[rsp+0x14]
  424cd2:	mov    rdi,r15
  424cd5:	mov    rdx,r14
  424cd8:	call   r9
  424cdb:	cmp    rax,r14
  424cde:	je     424d2f <flatcc_json_parser_union_type@@Base+0x28f>
  424ce0:	mov    rdi,QWORD PTR [r15]
  424ce3:	movzx  esi,WORD PTR [rsp+0xc]
  424ce8:	mov    rdx,QWORD PTR [rsp+0x10]
  424ced:	call   41edf0 <flatcc_builder_table_add_union@@Base>
  424cf2:	test   eax,eax
  424cf4:	je     424d24 <flatcc_json_parser_union_type@@Base+0x284>
  424cf6:	cmp    DWORD PTR [r15+0x1c],0x0
  424cfb:	jne    424d2f <flatcc_json_parser_union_type@@Base+0x28f>
  424cfd:	mov    DWORD PTR [r15+0x1c],0x1c
  424d05:	mov    eax,DWORD PTR [r15+0x8]
  424d09:	mov    ecx,ebp
  424d0b:	sub    ecx,eax
  424d0d:	inc    ecx
  424d0f:	mov    DWORD PTR [r15+0x18],ecx
  424d13:	mov    QWORD PTR [r15+0x30],rbp
  424d17:	jmp    424d2f <flatcc_json_parser_union_type@@Base+0x28f>
  424d19:	cmp    BYTE PTR [r8],0x1
  424d1d:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  424d22:	jmp    424d2c <flatcc_json_parser_union_type@@Base+0x28c>
  424d24:	mov    DWORD PTR [r15+0x14],r12d
  424d28:	mov    QWORD PTR [r15+0x8],rbx
  424d2c:	mov    r14,rbp
  424d2f:	mov    rax,r14
  424d32:	add    rsp,0x18
  424d36:	pop    rbx
  424d37:	pop    r12
  424d39:	pop    r13
  424d3b:	pop    r14
  424d3d:	pop    r15
  424d3f:	pop    rbp
  424d40:	ret    
  424d41:	lea    rdi,[rip+0x1359e]        # 4382e6 <flatcc_builder_padding_base@@Base+0x28c6>
  424d48:	lea    rsi,[rip+0x135a6]        # 4382f5 <flatcc_builder_padding_base@@Base+0x28d5>
  424d4f:	lea    rcx,[rip+0x13603]        # 438359 <flatcc_builder_padding_base@@Base+0x2939>
  424d56:	mov    edx,0x3c5
  424d5b:	call   406070 <__assert_fail@plt>
  424d60:	push   rbp
  424d61:	push   r15
  424d63:	push   r14
  424d65:	push   r13
  424d67:	push   r12
  424d69:	push   rbx
  424d6a:	sub    rsp,0x28
  424d6e:	mov    rbx,r8
  424d71:	mov    rbp,rcx
  424d74:	mov    r15,rdx
  424d77:	mov    r14,rdi
  424d7a:	mov    BYTE PTR [r8],0x0
  424d7e:	cmp    rsi,rdx
  424d81:	je     424d8b <flatcc_json_parser_union_type@@Base+0x2eb>
  424d83:	cmp    BYTE PTR [rsi],0x22
  424d86:	jne    424d90 <flatcc_json_parser_union_type@@Base+0x2f0>
  424d88:	inc    rsi
  424d8b:	mov    r13,rsi
  424d8e:	jmp    424db7 <flatcc_json_parser_union_type@@Base+0x317>
  424d90:	cmp    DWORD PTR [r14+0x1c],0x0
  424d95:	mov    r13,r15
  424d98:	jne    424db7 <flatcc_json_parser_union_type@@Base+0x317>
  424d9a:	mov    DWORD PTR [r14+0x1c],0x5
  424da2:	mov    eax,DWORD PTR [r14+0x8]
  424da6:	mov    ecx,esi
  424da8:	sub    ecx,eax
  424daa:	inc    ecx
  424dac:	mov    DWORD PTR [r14+0x18],ecx
  424db0:	mov    QWORD PTR [r14+0x30],rsi
  424db4:	mov    r13,r15
  424db7:	mov    rax,r15
  424dba:	sub    rax,r13
  424dbd:	cmp    rax,0x2
  424dc1:	jl     424de0 <flatcc_json_parser_union_type@@Base+0x340>
  424dc3:	cmp    BYTE PTR [r13+0x0],0x20
  424dc8:	jg     424df1 <flatcc_json_parser_union_type@@Base+0x351>
  424dca:	jne    424de0 <flatcc_json_parser_union_type@@Base+0x340>
  424dcc:	cmp    BYTE PTR [r13+0x1],0x20
  424dd1:	jle    424de0 <flatcc_json_parser_union_type@@Base+0x340>
  424dd3:	inc    r13
  424dd6:	cmp    r13,r15
  424dd9:	jne    424dfa <flatcc_json_parser_union_type@@Base+0x35a>
  424ddb:	jmp    424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424de0:	mov    rdi,r14
  424de3:	mov    rsi,r13
  424de6:	mov    rdx,r15
  424de9:	call   422710 <flatcc_json_parser_space_ext@@Base>
  424dee:	mov    r13,rax
  424df1:	cmp    r13,r15
  424df4:	je     424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424dfa:	lea    rcx,[rbp+0x8]
  424dfe:	mov    r12,rsp
  424e01:	mov    QWORD PTR [rsp+0x18],rbx
  424e06:	mov    QWORD PTR [rsp+0x10],rbp
  424e0b:	mov    QWORD PTR [rsp+0x8],rcx
  424e10:	mov    rbx,QWORD PTR [rbp+0x0]
  424e14:	mov    rbp,rcx
  424e17:	nop    WORD PTR [rax+rax*1+0x0]
  424e20:	mov    rdi,r14
  424e23:	mov    rsi,r13
  424e26:	mov    rdx,r15
  424e29:	lea    rcx,[rsp+0x4]
  424e2e:	lea    r8,[rsp+0x20]
  424e33:	mov    r9,r12
  424e36:	call   rbx
  424e38:	cmp    rax,r15
  424e3b:	je     424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424e3d:	cmp    rax,r13
  424e40:	jne    424e60 <flatcc_json_parser_union_type@@Base+0x3c0>
  424e42:	mov    rbx,QWORD PTR [rbp+0x0]
  424e46:	add    rbp,0x8
  424e4a:	test   rbx,rbx
  424e4d:	jne    424e20 <flatcc_json_parser_union_type@@Base+0x380>
  424e4f:	jmp    424e91 <flatcc_json_parser_union_type@@Base+0x3f1>
  424e51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  424e60:	cmp    DWORD PTR [rsp+0x4],0x0
  424e65:	jne    424ec5 <flatcc_json_parser_union_type@@Base+0x425>
  424e67:	mov    rcx,QWORD PTR [rsp+0x20]
  424e6c:	cmp    rcx,0x100
  424e73:	jae    424ed6 <flatcc_json_parser_union_type@@Base+0x436>
  424e75:	mov    rbx,QWORD PTR [rsp+0x18]
  424e7a:	add    BYTE PTR [rbx],cl
  424e7c:	cmp    DWORD PTR [rsp],0x0
  424e80:	mov    r13,rax
  424e83:	mov    rbp,QWORD PTR [rsp+0x10]
  424e88:	mov    rcx,QWORD PTR [rsp+0x8]
  424e8d:	jne    424e10 <flatcc_json_parser_union_type@@Base+0x370>
  424e8f:	jmp    424eb6 <flatcc_json_parser_union_type@@Base+0x416>
  424e91:	cmp    DWORD PTR [r14+0x1c],0x0
  424e96:	jne    424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424e98:	mov    DWORD PTR [r14+0x1c],0x17
  424ea0:	mov    eax,DWORD PTR [r14+0x8]
  424ea4:	mov    ecx,r13d
  424ea7:	sub    ecx,eax
  424ea9:	inc    ecx
  424eab:	mov    DWORD PTR [r14+0x18],ecx
  424eaf:	mov    QWORD PTR [r14+0x30],r13
  424eb3:	mov    rax,r15
  424eb6:	add    rsp,0x28
  424eba:	pop    rbx
  424ebb:	pop    r12
  424ebd:	pop    r13
  424ebf:	pop    r14
  424ec1:	pop    r15
  424ec3:	pop    rbp
  424ec4:	ret    
  424ec5:	cmp    DWORD PTR [r14+0x1c],0x0
  424eca:	jne    424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424ecc:	mov    DWORD PTR [r14+0x1c],0x8
  424ed4:	jmp    424ee5 <flatcc_json_parser_union_type@@Base+0x445>
  424ed6:	cmp    DWORD PTR [r14+0x1c],0x0
  424edb:	jne    424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424edd:	mov    DWORD PTR [r14+0x1c],0x7
  424ee5:	mov    ecx,DWORD PTR [r14+0x8]
  424ee9:	mov    edx,eax
  424eeb:	sub    edx,ecx
  424eed:	inc    edx
  424eef:	mov    DWORD PTR [r14+0x18],edx
  424ef3:	mov    QWORD PTR [r14+0x30],rax
  424ef7:	jmp    424eb3 <flatcc_json_parser_union_type@@Base+0x413>
  424ef9:	nop    DWORD PTR [rax+0x0]

0000000000424f00 <flatcc_json_parser_union_vector@@Base>:
  424f00:	push   rbp
  424f01:	push   r15
  424f03:	push   r14
  424f05:	push   r12
  424f07:	push   rbx
  424f08:	mov    r12d,r8d
  424f0b:	mov    rbp,rcx
  424f0e:	mov    r14,rdx
  424f11:	mov    r15,rsi
  424f14:	mov    rbx,rdi
  424f17:	mov    rdi,QWORD PTR [rdi]
  424f1a:	mov    rsi,r9
  424f1d:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  424f22:	lea    rdx,[rbp*4+0x0]
  424f2a:	add    rdx,rbp
  424f2d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  424f33:	je     424f5f <flatcc_json_parser_union_vector@@Base+0x5f>
  424f35:	cmp    DWORD PTR [rbx+0x1c],0x0
  424f39:	jne    424f53 <flatcc_json_parser_union_vector@@Base+0x53>
  424f3b:	mov    DWORD PTR [rbx+0x1c],0x1c
  424f42:	mov    eax,DWORD PTR [rbx+0x8]
  424f45:	mov    ecx,r15d
  424f48:	sub    ecx,eax
  424f4a:	inc    ecx
  424f4c:	mov    DWORD PTR [rbx+0x18],ecx
  424f4f:	mov    QWORD PTR [rbx+0x30],r15
  424f53:	mov    rax,r14
  424f56:	pop    rbx
  424f57:	pop    r12
  424f59:	pop    r14
  424f5b:	pop    r15
  424f5d:	pop    rbp
  424f5e:	ret    
  424f5f:	lea    rsi,[rax+0x10]
  424f63:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  424f68:	mov    rcx,QWORD PTR [rax+0x8]
  424f6c:	je     424f96 <flatcc_json_parser_union_vector@@Base+0x96>
  424f6e:	dec    rcx
  424f71:	mov    QWORD PTR [rax+0x8],rcx
  424f75:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  424f7a:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  424f7f:	movzx  r9d,r12w
  424f83:	mov    rdi,rbx
  424f86:	mov    rsi,r15
  424f89:	mov    rdx,r14
  424f8c:	pop    rbx
  424f8d:	pop    r12
  424f8f:	pop    r14
  424f91:	pop    r15
  424f93:	pop    rbp
  424f94:	jmp    424fd0 <flatcc_json_parser_union_vector@@Base+0xd0>
  424f96:	lea    rdi,[rax+rdx*8]
  424f9a:	add    rdi,0x10
  424f9e:	inc    rcx
  424fa1:	mov    QWORD PTR [rax+0x8],rcx
  424fa5:	mov    eax,DWORD PTR [rbx+0x14]
  424fa8:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  424fac:	mov    rax,QWORD PTR [rbx+0x8]
  424fb0:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  424fb5:	mov    QWORD PTR [rdi],r15
  424fb8:	mov    rdi,rbx
  424fbb:	mov    rsi,r15
  424fbe:	mov    rdx,r14
  424fc1:	pop    rbx
  424fc2:	pop    r12
  424fc4:	pop    r14
  424fc6:	pop    r15
  424fc8:	pop    rbp
  424fc9:	jmp    422d00 <flatcc_json_parser_generic_json@@Base>
  424fce:	xchg   ax,ax
  424fd0:	push   rbp
  424fd1:	push   r15
  424fd3:	push   r14
  424fd5:	push   r13
  424fd7:	push   r12
  424fd9:	push   rbx
  424fda:	sub    rsp,0x18
  424fde:	mov    r14d,r9d
  424fe1:	mov    r13d,r8d
  424fe4:	mov    r12,rcx
  424fe7:	mov    r15,rdx
  424fea:	mov    rbp,rsi
  424fed:	mov    rbx,rdi
  424ff0:	mov    DWORD PTR [rsp+0xc],0x0
  424ff8:	mov    rdi,QWORD PTR [rdi]
  424ffb:	call   41d8d0 <flatcc_builder_start_offset_vector@@Base>
  425000:	test   eax,eax
  425002:	je     42501a <flatcc_json_parser_union_vector@@Base+0x11a>
  425004:	cmp    DWORD PTR [rbx+0x1c],0x0
  425008:	jne    425244 <flatcc_json_parser_union_vector@@Base+0x344>
  42500e:	mov    DWORD PTR [rbx+0x1c],0x21
  425015:	jmp    425234 <flatcc_json_parser_union_vector@@Base+0x334>
  42501a:	cmp    rbp,r15
  42501d:	je     425050 <flatcc_json_parser_union_vector@@Base+0x150>
  42501f:	cmp    BYTE PTR [rbp+0x0],0x5b
  425023:	jne    425050 <flatcc_json_parser_union_vector@@Base+0x150>
  425025:	lea    rax,[rbp+0x1]
  425029:	mov    rcx,r15
  42502c:	sub    rcx,rax
  42502f:	cmp    rcx,0x2
  425033:	mov    DWORD PTR [rsp+0x8],r14d
  425038:	jl     42507c <flatcc_json_parser_union_vector@@Base+0x17c>
  42503a:	cmp    BYTE PTR [rax],0x20
  42503d:	jg     42508a <flatcc_json_parser_union_vector@@Base+0x18a>
  42503f:	jne    42507c <flatcc_json_parser_union_vector@@Base+0x17c>
  425041:	cmp    BYTE PTR [rbp+0x2],0x20
  425045:	jle    42507c <flatcc_json_parser_union_vector@@Base+0x17c>
  425047:	add    rbp,0x2
  42504b:	mov    rax,rbp
  42504e:	jmp    42508a <flatcc_json_parser_union_vector@@Base+0x18a>
  425050:	cmp    DWORD PTR [rbx+0x1c],0x0
  425054:	mov    rsi,r15
  425057:	jne    42521b <flatcc_json_parser_union_vector@@Base+0x31b>
  42505d:	mov    DWORD PTR [rbx+0x1c],0x16
  425064:	mov    eax,DWORD PTR [rbx+0x8]
  425067:	mov    ecx,ebp
  425069:	sub    ecx,eax
  42506b:	inc    ecx
  42506d:	mov    DWORD PTR [rbx+0x18],ecx
  425070:	mov    QWORD PTR [rbx+0x30],rbp
  425074:	mov    rsi,r15
  425077:	jmp    42521b <flatcc_json_parser_union_vector@@Base+0x31b>
  42507c:	mov    rdi,rbx
  42507f:	mov    rsi,rax
  425082:	mov    rdx,r15
  425085:	call   422710 <flatcc_json_parser_space_ext@@Base>
  42508a:	mov    r14,r15
  42508d:	cmp    rax,r15
  425090:	je     4250d5 <flatcc_json_parser_union_vector@@Base+0x1d5>
  425092:	cmp    BYTE PTR [rax],0x5d
  425095:	jne    4250d2 <flatcc_json_parser_union_vector@@Base+0x1d2>
  425097:	lea    rsi,[rax+0x1]
  42509b:	mov    rcx,r15
  42509e:	sub    rcx,rsi
  4250a1:	cmp    rcx,0x2
  4250a5:	mov    r14d,DWORD PTR [rsp+0x8]
  4250aa:	jl     42520d <flatcc_json_parser_union_vector@@Base+0x30d>
  4250b0:	cmp    BYTE PTR [rsi],0x20
  4250b3:	jg     42521b <flatcc_json_parser_union_vector@@Base+0x31b>
  4250b9:	jne    42520d <flatcc_json_parser_union_vector@@Base+0x30d>
  4250bf:	cmp    BYTE PTR [rax+0x2],0x20
  4250c3:	jle    42520d <flatcc_json_parser_union_vector@@Base+0x30d>
  4250c9:	add    rax,0x2
  4250cd:	jmp    425218 <flatcc_json_parser_union_vector@@Base+0x318>
  4250d2:	mov    r14,rax
  4250d5:	test   r13d,r13d
  4250d8:	je     4251ed <flatcc_json_parser_union_vector@@Base+0x2ed>
  4250de:	mov    eax,r13d
  4250e1:	mov    QWORD PTR [rsp+0x10],rax
  4250e6:	xor    r13d,r13d
  4250e9:	nop    DWORD PTR [rax+0x0]
  4250f0:	mov    rdi,QWORD PTR [rbx]
  4250f3:	mov    rsi,r12
  4250f6:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4250fb:	movzx  ecx,BYTE PTR [rax+r13*1]
  425100:	mov    rdi,rbx
  425103:	mov    rsi,r14
  425106:	mov    rdx,r15
  425109:	lea    r8,[rsp+0xc]
  42510e:	call   QWORD PTR [rsp+0x50]
  425112:	cmp    rax,r15
  425115:	je     425244 <flatcc_json_parser_union_vector@@Base+0x344>
  42511b:	mov    rbp,rax
  42511e:	mov    rdi,QWORD PTR [rbx]
  425121:	mov    esi,0x1
  425126:	call   41d1e0 <flatcc_builder_extend_offset_vector@@Base>
  42512b:	test   rax,rax
  42512e:	je     425004 <flatcc_json_parser_union_vector@@Base+0x104>
  425134:	mov    ecx,DWORD PTR [rsp+0xc]
  425138:	mov    DWORD PTR [rax],ecx
  42513a:	mov    rax,r15
  42513d:	sub    rax,rbp
  425140:	cmp    rax,0x2
  425144:	mov    r14d,DWORD PTR [rsp+0x8]
  425149:	jl     425166 <flatcc_json_parser_union_vector@@Base+0x266>
  42514b:	cmp    BYTE PTR [rbp+0x0],0x20
  42514f:	jg     425177 <flatcc_json_parser_union_vector@@Base+0x277>
  425151:	jne    425166 <flatcc_json_parser_union_vector@@Base+0x266>
  425153:	cmp    BYTE PTR [rbp+0x1],0x20
  425157:	jle    425166 <flatcc_json_parser_union_vector@@Base+0x266>
  425159:	inc    rbp
  42515c:	cmp    rbp,r15
  42515f:	jne    425180 <flatcc_json_parser_union_vector@@Base+0x280>
  425161:	jmp    425256 <flatcc_json_parser_union_vector@@Base+0x356>
  425166:	mov    rdi,rbx
  425169:	mov    rsi,rbp
  42516c:	mov    rdx,r15
  42516f:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425174:	mov    rbp,rax
  425177:	cmp    rbp,r15
  42517a:	je     425256 <flatcc_json_parser_union_vector@@Base+0x356>
  425180:	movzx  eax,BYTE PTR [rbp+0x0]
  425184:	cmp    al,0x2c
  425186:	jne    42525e <flatcc_json_parser_union_vector@@Base+0x35e>
  42518c:	lea    r14,[rbp+0x1]
  425190:	mov    rax,r15
  425193:	sub    rax,r14
  425196:	cmp    rax,0x2
  42519a:	jl     4251bb <flatcc_json_parser_union_vector@@Base+0x2bb>
  42519c:	cmp    BYTE PTR [r14],0x20
  4251a0:	jg     4251cc <flatcc_json_parser_union_vector@@Base+0x2cc>
  4251a2:	jne    4251bb <flatcc_json_parser_union_vector@@Base+0x2bb>
  4251a4:	cmp    BYTE PTR [rbp+0x2],0x20
  4251a8:	jle    4251bb <flatcc_json_parser_union_vector@@Base+0x2bb>
  4251aa:	add    rbp,0x2
  4251ae:	mov    r14,rbp
  4251b1:	cmp    r14,r15
  4251b4:	jne    4251d5 <flatcc_json_parser_union_vector@@Base+0x2d5>
  4251b6:	jmp    42529f <flatcc_json_parser_union_vector@@Base+0x39f>
  4251bb:	mov    rdi,rbx
  4251be:	mov    rsi,r14
  4251c1:	mov    rdx,r15
  4251c4:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4251c9:	mov    r14,rax
  4251cc:	cmp    r14,r15
  4251cf:	je     42529f <flatcc_json_parser_union_vector@@Base+0x39f>
  4251d5:	cmp    BYTE PTR [r14],0x5d
  4251d9:	je     4252ce <flatcc_json_parser_union_vector@@Base+0x3ce>
  4251df:	inc    r13
  4251e2:	cmp    QWORD PTR [rsp+0x10],r13
  4251e7:	jne    4250f0 <flatcc_json_parser_union_vector@@Base+0x1f0>
  4251ed:	cmp    DWORD PTR [rbx+0x1c],0x0
  4251f1:	jne    425244 <flatcc_json_parser_union_vector@@Base+0x344>
  4251f3:	mov    DWORD PTR [rbx+0x1c],0x1e
  4251fa:	mov    eax,DWORD PTR [rbx+0x8]
  4251fd:	mov    ecx,r14d
  425200:	sub    ecx,eax
  425202:	inc    ecx
  425204:	mov    DWORD PTR [rbx+0x18],ecx
  425207:	mov    QWORD PTR [rbx+0x30],r14
  42520b:	jmp    425244 <flatcc_json_parser_union_vector@@Base+0x344>
  42520d:	mov    rdi,rbx
  425210:	mov    rdx,r15
  425213:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425218:	mov    rsi,rax
  42521b:	mov    rbp,rsi
  42521e:	test   r13d,r13d
  425221:	je     425351 <flatcc_json_parser_union_vector@@Base+0x451>
  425227:	cmp    DWORD PTR [rbx+0x1c],0x0
  42522b:	jne    425244 <flatcc_json_parser_union_vector@@Base+0x344>
  42522d:	mov    DWORD PTR [rbx+0x1c],0x1e
  425234:	mov    eax,DWORD PTR [rbx+0x8]
  425237:	mov    ecx,ebp
  425239:	sub    ecx,eax
  42523b:	inc    ecx
  42523d:	mov    DWORD PTR [rbx+0x18],ecx
  425240:	mov    QWORD PTR [rbx+0x30],rbp
  425244:	mov    rax,r15
  425247:	add    rsp,0x18
  42524b:	pop    rbx
  42524c:	pop    r12
  42524e:	pop    r13
  425250:	pop    r14
  425252:	pop    r15
  425254:	pop    rbp
  425255:	ret    
  425256:	mov    rax,r15
  425259:	jmp    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  42525e:	cmp    al,0x5d
  425260:	jne    42530a <flatcc_json_parser_union_vector@@Base+0x40a>
  425266:	lea    rax,[rbp+0x1]
  42526a:	mov    rcx,r15
  42526d:	sub    rcx,rax
  425270:	cmp    rcx,0x2
  425274:	jl     42532f <flatcc_json_parser_union_vector@@Base+0x42f>
  42527a:	cmp    BYTE PTR [rax],0x20
  42527d:	jg     42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  425283:	jne    42532f <flatcc_json_parser_union_vector@@Base+0x42f>
  425289:	cmp    BYTE PTR [rbp+0x2],0x20
  42528d:	jle    42532f <flatcc_json_parser_union_vector@@Base+0x42f>
  425293:	add    rbp,0x2
  425297:	mov    rax,rbp
  42529a:	jmp    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  42529f:	cmp    DWORD PTR [rbx+0x1c],0x0
  4252a3:	mov    rax,r15
  4252a6:	mov    r14d,DWORD PTR [rsp+0x8]
  4252ab:	jne    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  4252b1:	mov    DWORD PTR [rbx+0x1c],0x9
  4252b8:	mov    eax,DWORD PTR [rbx+0x8]
  4252bb:	mov    ecx,r15d
  4252be:	sub    ecx,eax
  4252c0:	inc    ecx
  4252c2:	mov    DWORD PTR [rbx+0x18],ecx
  4252c5:	mov    QWORD PTR [rbx+0x30],r15
  4252c9:	mov    rax,r15
  4252cc:	jmp    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  4252ce:	lea    rax,[r14+0x1]
  4252d2:	mov    rcx,r15
  4252d5:	sub    rcx,rax
  4252d8:	cmp    rcx,0x2
  4252dc:	jl     4252f5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4252de:	cmp    BYTE PTR [rax],0x20
  4252e1:	jg     425303 <flatcc_json_parser_union_vector@@Base+0x403>
  4252e3:	jne    4252f5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4252e5:	cmp    BYTE PTR [r14+0x2],0x20
  4252ea:	jle    4252f5 <flatcc_json_parser_union_vector@@Base+0x3f5>
  4252ec:	add    r14,0x2
  4252f0:	mov    rax,r14
  4252f3:	jmp    425303 <flatcc_json_parser_union_vector@@Base+0x403>
  4252f5:	mov    rdi,rbx
  4252f8:	mov    rsi,rax
  4252fb:	mov    rdx,r15
  4252fe:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425303:	mov    r14d,DWORD PTR [rsp+0x8]
  425308:	jmp    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  42530a:	cmp    DWORD PTR [rbx+0x1c],0x0
  42530e:	mov    rax,r15
  425311:	jne    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  425313:	mov    DWORD PTR [rbx+0x1c],0x9
  42531a:	mov    eax,DWORD PTR [rbx+0x8]
  42531d:	mov    ecx,ebp
  42531f:	sub    ecx,eax
  425321:	inc    ecx
  425323:	mov    DWORD PTR [rbx+0x18],ecx
  425326:	mov    QWORD PTR [rbx+0x30],rbp
  42532a:	mov    rax,r15
  42532d:	jmp    42533d <flatcc_json_parser_union_vector@@Base+0x43d>
  42532f:	mov    rdi,rbx
  425332:	mov    rsi,rax
  425335:	mov    rdx,r15
  425338:	call   422710 <flatcc_json_parser_space_ext@@Base>
  42533d:	mov    rcx,QWORD PTR [rsp+0x10]
  425342:	dec    rcx
  425345:	mov    rbp,rax
  425348:	cmp    rcx,r13
  42534b:	jne    425227 <flatcc_json_parser_union_vector@@Base+0x327>
  425351:	mov    rdi,QWORD PTR [rbx]
  425354:	mov    rsi,r12
  425357:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  42535c:	mov    rdi,QWORD PTR [rbx]
  42535f:	mov    rsi,rax
  425362:	call   41ed10 <flatcc_builder_end_offset_vector_for_unions@@Base>
  425367:	mov    DWORD PTR [rsp+0xc],eax
  42536b:	test   eax,eax
  42536d:	je     425004 <flatcc_json_parser_union_vector@@Base+0x104>
  425373:	mov    rdi,QWORD PTR [rbx]
  425376:	movzx  esi,r14w
  42537a:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  42537f:	test   rax,rax
  425382:	je     425004 <flatcc_json_parser_union_vector@@Base+0x104>
  425388:	mov    ecx,DWORD PTR [rsp+0xc]
  42538c:	mov    DWORD PTR [rax],ecx
  42538e:	mov    r15,rbp
  425391:	jmp    425244 <flatcc_json_parser_union_vector@@Base+0x344>
  425396:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004253a0 <flatcc_json_parser_union_type_vector@@Base>:
  4253a0:	push   rbp
  4253a1:	push   r15
  4253a3:	push   r14
  4253a5:	push   r13
  4253a7:	push   r12
  4253a9:	push   rbx
  4253aa:	sub    rsp,0x48
  4253ae:	mov    r13,r9
  4253b1:	mov    r12d,r8d
  4253b4:	mov    rbx,rcx
  4253b7:	mov    r14,rdx
  4253ba:	mov    r15,rsi
  4253bd:	mov    rbp,rdi
  4253c0:	mov    rdi,QWORD PTR [rdi]
  4253c3:	mov    rsi,r9
  4253c6:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4253cb:	lea    rbx,[rbx+rbx*4]
  4253cf:	cmp    BYTE PTR [rax+rbx*8+0x24],0x0
  4253d4:	je     4253e4 <flatcc_json_parser_union_type_vector@@Base+0x44>
  4253d6:	cmp    DWORD PTR [rbp+0x1c],0x0
  4253da:	je     425430 <flatcc_json_parser_union_type_vector@@Base+0x90>
  4253dc:	mov    r12,r14
  4253df:	jmp    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4253e4:	mov    DWORD PTR [rsp+0x28],r12d
  4253e9:	mov    r12,rax
  4253ec:	lea    rax,[rax+rbx*8]
  4253f0:	add    rax,0x24
  4253f4:	mov    BYTE PTR [rax],0x1
  4253f7:	mov    QWORD PTR [rsp+0x18],rbp
  4253fc:	mov    rdi,QWORD PTR [rbp+0x0]
  425400:	mov    esi,0x1
  425405:	mov    ecx,0xffffffff
  42540a:	mov    edx,0x1
  42540f:	call   41d850 <flatcc_builder_start_vector@@Base>
  425414:	test   eax,eax
  425416:	je     425450 <flatcc_json_parser_union_type_vector@@Base+0xb0>
  425418:	mov    r12,r14
  42541b:	mov    r13,QWORD PTR [rsp+0x18]
  425420:	cmp    DWORD PTR [r13+0x1c],0x0
  425425:	jne    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42542b:	jmp    4259b3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  425430:	mov    DWORD PTR [rbp+0x1c],0x1c
  425437:	mov    eax,DWORD PTR [rbp+0x8]
  42543a:	mov    ecx,r15d
  42543d:	sub    ecx,eax
  42543f:	inc    ecx
  425441:	mov    DWORD PTR [rbp+0x18],ecx
  425444:	mov    QWORD PTR [rbp+0x30],r15
  425448:	mov    r12,r14
  42544b:	jmp    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  425450:	mov    QWORD PTR [rsp+0x40],r12
  425455:	cmp    r15,r14
  425458:	mov    QWORD PTR [rsp+0x20],rbx
  42545d:	mov    QWORD PTR [rsp+0x30],r13
  425462:	je     425487 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  425464:	cmp    BYTE PTR [r15],0x5b
  425468:	jne    425487 <flatcc_json_parser_union_type_vector@@Base+0xe7>
  42546a:	lea    rax,[r15+0x1]
  42546e:	mov    rcx,r14
  425471:	sub    rcx,rax
  425474:	cmp    rcx,0x2
  425478:	jl     4254db <flatcc_json_parser_union_type_vector@@Base+0x13b>
  42547a:	cmp    BYTE PTR [rax],0x20
  42547d:	jle    4254c3 <flatcc_json_parser_union_type_vector@@Base+0x123>
  42547f:	mov    rbp,rbx
  425482:	mov    rbx,r14
  425485:	jmp    4254f1 <flatcc_json_parser_union_type_vector@@Base+0x151>
  425487:	mov    rbp,rbx
  42548a:	mov    r13,QWORD PTR [rsp+0x18]
  42548f:	cmp    DWORD PTR [r13+0x1c],0x0
  425494:	mov    r12,r14
  425497:	mov    rdx,r14
  42549a:	jne    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4254a0:	mov    DWORD PTR [r13+0x1c],0x16
  4254a8:	mov    eax,DWORD PTR [r13+0x8]
  4254ac:	mov    ecx,r15d
  4254af:	sub    ecx,eax
  4254b1:	inc    ecx
  4254b3:	mov    DWORD PTR [r13+0x18],ecx
  4254b7:	mov    QWORD PTR [r13+0x30],r15
  4254bb:	mov    rdx,r12
  4254be:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4254c3:	jne    4254db <flatcc_json_parser_union_type_vector@@Base+0x13b>
  4254c5:	cmp    BYTE PTR [r15+0x2],0x20
  4254ca:	jle    4254db <flatcc_json_parser_union_type_vector@@Base+0x13b>
  4254cc:	mov    rbp,rbx
  4254cf:	add    r15,0x2
  4254d3:	mov    rax,r15
  4254d6:	mov    rbx,r14
  4254d9:	jmp    4254f1 <flatcc_json_parser_union_type_vector@@Base+0x151>
  4254db:	mov    rbp,rbx
  4254de:	mov    rdi,QWORD PTR [rsp+0x18]
  4254e3:	mov    rsi,rax
  4254e6:	mov    rbx,r14
  4254e9:	mov    rdx,r14
  4254ec:	call   422710 <flatcc_json_parser_space_ext@@Base>
  4254f1:	mov    r15,rbx
  4254f4:	cmp    rax,rbx
  4254f7:	mov    rbx,QWORD PTR [rsp+0x18]
  4254fc:	je     425542 <flatcc_json_parser_union_type_vector@@Base+0x1a2>
  4254fe:	cmp    BYTE PTR [rax],0x5d
  425501:	jne    42553f <flatcc_json_parser_union_type_vector@@Base+0x19f>
  425503:	lea    rdx,[rax+0x1]
  425507:	mov    r12,r14
  42550a:	mov    rcx,r14
  42550d:	sub    rcx,rdx
  425510:	cmp    rcx,0x2
  425514:	mov    r13,rbx
  425517:	jl     425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42551d:	cmp    BYTE PTR [rdx],0x20
  425520:	jg     42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425526:	jne    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42552c:	cmp    BYTE PTR [rax+0x2],0x20
  425530:	jle    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425536:	add    rax,0x2
  42553a:	jmp    425887 <flatcc_json_parser_union_type_vector@@Base+0x4e7>
  42553f:	mov    r15,rax
  425542:	mov    rdi,QWORD PTR [rbx]
  425545:	mov    esi,0x1
  42554a:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  42554f:	test   rax,rax
  425552:	je     4257db <flatcc_json_parser_union_type_vector@@Base+0x43b>
  425558:	mov    rcx,QWORD PTR [rsp+0x90]
  425560:	mov    r12,r14
  425563:	mov    r13,rbx
  425566:	mov    rbx,rcx
  425569:	mov    BYTE PTR [rsp+0x17],0x0
  42556e:	cmp    r15,r12
  425571:	mov    QWORD PTR [rsp+0x38],rax
  425576:	je     4256a3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  42557c:	mov    al,BYTE PTR [r15]
  42557f:	xor    r14d,r14d
  425582:	cmp    al,0x2d
  425584:	sete   r14b
  425588:	add    r14,r15
  42558b:	xor    ebp,ebp
  42558d:	cmp    r14,r12
  425590:	je     4255e1 <flatcc_json_parser_union_type_vector@@Base+0x241>
  425592:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42559c:	nop    DWORD PTR [rax+0x0]
  4255a0:	movsx  rcx,BYTE PTR [r14]
  4255a4:	lea    edx,[rcx-0x30]
  4255a7:	cmp    dl,0x9
  4255aa:	ja     4255ed <flatcc_json_parser_union_type_vector@@Base+0x24d>
  4255ac:	lea    rdx,[rbp*4+0x0]
  4255b4:	add    rdx,rbp
  4255b7:	lea    rdx,[rcx+rdx*2]
  4255bb:	add    rdx,0xffffffffffffffd0
  4255bf:	cmp    rbp,rdx
  4255c2:	ja     425627 <flatcc_json_parser_union_type_vector@@Base+0x287>
  4255c4:	inc    r14
  4255c7:	mov    rbp,rdx
  4255ca:	cmp    r12,r14
  4255cd:	jne    4255a0 <flatcc_json_parser_union_type_vector@@Base+0x200>
  4255cf:	xor    ecx,ecx
  4255d1:	mov    r14,r12
  4255d4:	mov    rbp,rdx
  4255d7:	cmp    r14,r15
  4255da:	jne    4255f4 <flatcc_json_parser_union_type_vector@@Base+0x254>
  4255dc:	jmp    425668 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4255e1:	mov    r14,r12
  4255e4:	xor    ecx,ecx
  4255e6:	cmp    r14,r15
  4255e9:	jne    4255f4 <flatcc_json_parser_union_type_vector@@Base+0x254>
  4255eb:	jmp    425668 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4255ed:	mov    cl,0x1
  4255ef:	cmp    r14,r15
  4255f2:	je     425668 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  4255f4:	test   cl,cl
  4255f6:	je     42564e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  4255f8:	mov    cl,BYTE PTR [r14]
  4255fb:	add    cl,0xd2
  4255fe:	cmp    cl,0x37
  425601:	ja     42564e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  425603:	movzx  ecx,cl
  425606:	movabs rdx,0x80000000800001
  425610:	bt     rdx,rcx
  425614:	jae    42564e <flatcc_json_parser_union_type_vector@@Base+0x2ae>
  425616:	cmp    DWORD PTR [r13+0x1c],0x0
  42561b:	jne    425649 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42561d:	mov    DWORD PTR [r13+0x1c],0xc
  425625:	jmp    425636 <flatcc_json_parser_union_type_vector@@Base+0x296>
  425627:	cmp    DWORD PTR [r13+0x1c],0x0
  42562c:	jne    425649 <flatcc_json_parser_union_type_vector@@Base+0x2a9>
  42562e:	mov    DWORD PTR [r13+0x1c],0x8
  425636:	mov    ecx,DWORD PTR [r13+0x8]
  42563a:	mov    edx,r14d
  42563d:	sub    edx,ecx
  42563f:	inc    edx
  425641:	mov    DWORD PTR [r13+0x18],edx
  425645:	mov    QWORD PTR [r13+0x30],r14
  425649:	xor    ebp,ebp
  42564b:	mov    r14,r12
  42564e:	cmp    r14,r15
  425651:	je     425668 <flatcc_json_parser_union_type_vector@@Base+0x2c8>
  425653:	cmp    al,0x2d
  425655:	jne    425674 <flatcc_json_parser_union_type_vector@@Base+0x2d4>
  425657:	cmp    DWORD PTR [r13+0x1c],0x0
  42565c:	jne    4256a3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  42565e:	mov    DWORD PTR [r13+0x1c],0x8
  425666:	jmp    425690 <flatcc_json_parser_union_type_vector@@Base+0x2f0>
  425668:	xor    ebp,ebp
  42566a:	mov    r14,r15
  42566d:	cmp    r15,r14
  425670:	jne    4256e2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  425672:	jmp    4256ad <flatcc_json_parser_union_type_vector@@Base+0x30d>
  425674:	cmp    rbp,0x100
  42567b:	jb     4257c8 <flatcc_json_parser_union_type_vector@@Base+0x428>
  425681:	cmp    DWORD PTR [r13+0x1c],0x0
  425686:	jne    4256a3 <flatcc_json_parser_union_type_vector@@Base+0x303>
  425688:	mov    DWORD PTR [r13+0x1c],0x7
  425690:	mov    eax,DWORD PTR [r13+0x8]
  425694:	mov    ecx,r14d
  425697:	sub    ecx,eax
  425699:	inc    ecx
  42569b:	mov    DWORD PTR [r13+0x18],ecx
  42569f:	mov    QWORD PTR [r13+0x30],r14
  4256a3:	xor    ebp,ebp
  4256a5:	mov    r14,r12
  4256a8:	cmp    r15,r14
  4256ab:	jne    4256e2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  4256ad:	mov    rdi,r13
  4256b0:	mov    rsi,r15
  4256b3:	mov    rdx,r12
  4256b6:	mov    rcx,QWORD PTR [rsp+0x80]
  4256be:	lea    r8,[rsp+0x17]
  4256c3:	call   424d60 <flatcc_json_parser_union_type@@Base+0x2c0>
  4256c8:	mov    r14,rax
  4256cb:	cmp    rax,r15
  4256ce:	je     425a1f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  4256d4:	cmp    r14,r12
  4256d7:	je     425a1f <flatcc_json_parser_union_type_vector@@Base+0x67f>
  4256dd:	mov    bpl,BYTE PTR [rsp+0x17]
  4256e2:	movzx  edi,bpl
  4256e6:	call   rbx
  4256e8:	test   eax,eax
  4256ea:	jne    4256fe <flatcc_json_parser_union_type_vector@@Base+0x35e>
  4256ec:	test   BYTE PTR [r13+0x10],0x1
  4256f1:	je     425a2b <flatcc_json_parser_union_type_vector@@Base+0x68b>
  4256f7:	mov    BYTE PTR [rsp+0x17],0x0
  4256fc:	xor    ebp,ebp
  4256fe:	mov    rax,QWORD PTR [rsp+0x38]
  425703:	mov    BYTE PTR [rax],bpl
  425706:	mov    rax,r12
  425709:	sub    rax,r14
  42570c:	cmp    rax,0x2
  425710:	mov    rbp,QWORD PTR [rsp+0x20]
  425715:	jl     425733 <flatcc_json_parser_union_type_vector@@Base+0x393>
  425717:	cmp    BYTE PTR [r14],0x20
  42571b:	jg     425744 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
  42571d:	jne    425733 <flatcc_json_parser_union_type_vector@@Base+0x393>
  42571f:	cmp    BYTE PTR [r14+0x1],0x20
  425724:	jle    425733 <flatcc_json_parser_union_type_vector@@Base+0x393>
  425726:	inc    r14
  425729:	cmp    r14,r12
  42572c:	jne    42574d <flatcc_json_parser_union_type_vector@@Base+0x3ad>
  42572e:	jmp    4257f1 <flatcc_json_parser_union_type_vector@@Base+0x451>
  425733:	mov    rdi,r13
  425736:	mov    rsi,r14
  425739:	mov    rdx,r12
  42573c:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425741:	mov    r14,rax
  425744:	cmp    r14,r12
  425747:	je     4257f1 <flatcc_json_parser_union_type_vector@@Base+0x451>
  42574d:	mov    al,BYTE PTR [r14]
  425750:	cmp    al,0x2c
  425752:	jne    4257f9 <flatcc_json_parser_union_type_vector@@Base+0x459>
  425758:	lea    r15,[r14+0x1]
  42575c:	mov    rax,r12
  42575f:	sub    rax,r15
  425762:	cmp    rax,0x2
  425766:	jl     425788 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  425768:	cmp    BYTE PTR [r15],0x20
  42576c:	jg     425799 <flatcc_json_parser_union_type_vector@@Base+0x3f9>
  42576e:	jne    425788 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  425770:	cmp    BYTE PTR [r14+0x2],0x20
  425775:	jle    425788 <flatcc_json_parser_union_type_vector@@Base+0x3e8>
  425777:	add    r14,0x2
  42577b:	mov    r15,r14
  42577e:	cmp    r15,r12
  425781:	jne    4257a2 <flatcc_json_parser_union_type_vector@@Base+0x402>
  425783:	jmp    425828 <flatcc_json_parser_union_type_vector@@Base+0x488>
  425788:	mov    rdi,r13
  42578b:	mov    rsi,r15
  42578e:	mov    rdx,r12
  425791:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425796:	mov    r15,rax
  425799:	cmp    r15,r12
  42579c:	je     425828 <flatcc_json_parser_union_type_vector@@Base+0x488>
  4257a2:	cmp    BYTE PTR [r15],0x5d
  4257a6:	je     425852 <flatcc_json_parser_union_type_vector@@Base+0x4b2>
  4257ac:	mov    rdi,QWORD PTR [r13+0x0]
  4257b0:	mov    esi,0x1
  4257b5:	call   41cf00 <flatcc_builder_extend_vector@@Base>
  4257ba:	test   rax,rax
  4257bd:	jne    425569 <flatcc_json_parser_union_type_vector@@Base+0x1c9>
  4257c3:	jmp    4259ac <flatcc_json_parser_union_type_vector@@Base+0x60c>
  4257c8:	mov    BYTE PTR [rsp+0x17],bpl
  4257cd:	cmp    r15,r14
  4257d0:	jne    4256e2 <flatcc_json_parser_union_type_vector@@Base+0x342>
  4257d6:	jmp    4256ad <flatcc_json_parser_union_type_vector@@Base+0x30d>
  4257db:	mov    r12,r14
  4257de:	mov    r13,rbx
  4257e1:	cmp    DWORD PTR [r13+0x1c],0x0
  4257e6:	jne    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4257ec:	jmp    4259b3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  4257f1:	mov    rdx,r12
  4257f4:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4257f9:	cmp    al,0x5d
  4257fb:	jne    4259ee <flatcc_json_parser_union_type_vector@@Base+0x64e>
  425801:	lea    rdx,[r14+0x1]
  425805:	mov    rax,r12
  425808:	sub    rax,rdx
  42580b:	cmp    rax,0x2
  42580f:	jl     425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425811:	cmp    BYTE PTR [rdx],0x20
  425814:	jg     42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425816:	jne    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425818:	cmp    BYTE PTR [r14+0x2],0x20
  42581d:	jle    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  42581f:	add    r14,0x2
  425823:	mov    rdx,r14
  425826:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425828:	cmp    DWORD PTR [r13+0x1c],0x0
  42582d:	mov    rdx,r12
  425830:	jne    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425832:	mov    DWORD PTR [r13+0x1c],0x9
  42583a:	mov    eax,DWORD PTR [r13+0x8]
  42583e:	mov    ecx,r12d
  425841:	sub    ecx,eax
  425843:	inc    ecx
  425845:	mov    DWORD PTR [r13+0x18],ecx
  425849:	mov    QWORD PTR [r13+0x30],r12
  42584d:	mov    rdx,r12
  425850:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425852:	lea    rdx,[r15+0x1]
  425856:	mov    rax,r12
  425859:	sub    rax,rdx
  42585c:	cmp    rax,0x2
  425860:	jl     425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425862:	cmp    BYTE PTR [rdx],0x20
  425865:	jg     42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425867:	jne    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425869:	cmp    BYTE PTR [r15+0x2],0x20
  42586e:	jle    425879 <flatcc_json_parser_union_type_vector@@Base+0x4d9>
  425870:	add    r15,0x2
  425874:	mov    rdx,r15
  425877:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425879:	mov    rdi,r13
  42587c:	mov    rsi,rdx
  42587f:	mov    rdx,r12
  425882:	call   422710 <flatcc_json_parser_space_ext@@Base>
  425887:	mov    rdx,rax
  42588a:	mov    QWORD PTR [rsp+0x18],rdx
  42588f:	mov    rbx,QWORD PTR [rsp+0x40]
  425894:	add    rbx,0x10
  425898:	mov    rdi,QWORD PTR [r13+0x0]
  42589c:	call   41eab0 <flatcc_builder_vector_count@@Base>
  4258a1:	mov    r14,rax
  4258a4:	mov    DWORD PTR [rbx+rbp*8+0x18],r14d
  4258a9:	mov    rbx,r13
  4258ac:	mov    r13d,r14d
  4258af:	mov    rdi,QWORD PTR [rbx]
  4258b2:	mov    rsi,r13
  4258b5:	call   41c250 <flatcc_builder_enter_user_frame@@Base>
  4258ba:	mov    r15,rax
  4258bd:	mov    rdi,QWORD PTR [rbx]
  4258c0:	mov    rsi,rax
  4258c3:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  4258c8:	mov    rbp,rax
  4258cb:	mov    rdi,QWORD PTR [rbx]
  4258ce:	call   41eac0 <flatcc_builder_vector_edit@@Base>
  4258d3:	mov    rdi,rbp
  4258d6:	mov    rsi,rax
  4258d9:	mov    rdx,r13
  4258dc:	call   4060d0 <memcpy@plt>
  4258e1:	mov    rdi,QWORD PTR [rbx]
  4258e4:	call   41e9e0 <flatcc_builder_end_vector@@Base>
  4258e9:	test   eax,eax
  4258eb:	je     4259a4 <flatcc_json_parser_union_type_vector@@Base+0x604>
  4258f1:	mov    r13d,eax
  4258f4:	mov    rdi,QWORD PTR [rbx]
  4258f7:	movzx  ebp,WORD PTR [rsp+0x28]
  4258fc:	lea    esi,[rbp-0x1]
  4258ff:	call   41eee0 <flatcc_builder_table_add_offset@@Base>
  425904:	test   rax,rax
  425907:	je     4259a4 <flatcc_json_parser_union_type_vector@@Base+0x604>
  42590d:	mov    QWORD PTR [rsp+0x28],rbp
  425912:	mov    DWORD PTR [rax],r13d
  425915:	mov    rdi,QWORD PTR [rbx]
  425918:	mov    rsi,QWORD PTR [rsp+0x30]
  42591d:	call   41c3e0 <flatcc_builder_get_user_frame_ptr@@Base>
  425922:	mov    rcx,QWORD PTR [rsp+0x20]
  425927:	mov    QWORD PTR [rax+rcx*8+0x30],r15
  42592c:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  425931:	mov    rcx,QWORD PTR [rax+0x8]
  425935:	test   rsi,rsi
  425938:	je     4259d0 <flatcc_json_parser_union_type_vector@@Base+0x630>
  42593e:	test   rcx,rcx
  425941:	je     425a4f <flatcc_json_parser_union_type_vector@@Base+0x6af>
  425947:	mov    rbp,rbx
  42594a:	mov    rdx,QWORD PTR [rsp+0x88]
  425952:	mov    rdi,rax
  425955:	add    rdi,0x10
  425959:	dec    rcx
  42595c:	mov    QWORD PTR [rax+0x8],rcx
  425960:	mov    ebx,DWORD PTR [rbx+0x14]
  425963:	mov    r13,QWORD PTR [rbp+0x8]
  425967:	mov    rcx,QWORD PTR [rsp+0x20]
  42596c:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  425970:	mov    DWORD PTR [rbp+0x14],eax
  425973:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  425978:	mov    QWORD PTR [rbp+0x8],rax
  42597c:	mov    QWORD PTR [rsp],rdx
  425980:	mov    rdi,rbp
  425983:	mov    rdx,r12
  425986:	mov    rcx,r15
  425989:	mov    r8d,r14d
  42598c:	mov    r9,QWORD PTR [rsp+0x28]
  425991:	call   424fd0 <flatcc_json_parser_union_vector@@Base+0xd0>
  425996:	cmp    rax,r12
  425999:	je     4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  42599b:	mov    DWORD PTR [rbp+0x14],ebx
  42599e:	mov    QWORD PTR [rbp+0x8],r13
  4259a2:	jmp    4259d7 <flatcc_json_parser_union_type_vector@@Base+0x637>
  4259a4:	mov    r15,QWORD PTR [rsp+0x18]
  4259a9:	mov    r13,rbx
  4259ac:	cmp    DWORD PTR [r13+0x1c],0x0
  4259b1:	jne    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4259b3:	mov    DWORD PTR [r13+0x1c],0x21
  4259bb:	mov    eax,DWORD PTR [r13+0x8]
  4259bf:	mov    ecx,r15d
  4259c2:	sub    ecx,eax
  4259c4:	inc    ecx
  4259c6:	mov    DWORD PTR [r13+0x18],ecx
  4259ca:	mov    QWORD PTR [r13+0x30],r15
  4259ce:	jmp    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  4259d0:	inc    rcx
  4259d3:	mov    QWORD PTR [rax+0x8],rcx
  4259d7:	mov    r12,QWORD PTR [rsp+0x18]
  4259dc:	mov    rax,r12
  4259df:	add    rsp,0x48
  4259e3:	pop    rbx
  4259e4:	pop    r12
  4259e6:	pop    r13
  4259e8:	pop    r14
  4259ea:	pop    r15
  4259ec:	pop    rbp
  4259ed:	ret    
  4259ee:	cmp    DWORD PTR [r13+0x1c],0x0
  4259f3:	mov    rdx,r12
  4259f6:	jne    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  4259fc:	mov    DWORD PTR [r13+0x1c],0x9
  425a04:	mov    eax,DWORD PTR [r13+0x8]
  425a08:	mov    ecx,r14d
  425a0b:	sub    ecx,eax
  425a0d:	inc    ecx
  425a0f:	mov    DWORD PTR [r13+0x18],ecx
  425a13:	mov    QWORD PTR [r13+0x30],r14
  425a17:	mov    rdx,r12
  425a1a:	jmp    42588a <flatcc_json_parser_union_type_vector@@Base+0x4ea>
  425a1f:	mov    r15,r14
  425a22:	cmp    DWORD PTR [r13+0x1c],0x0
  425a27:	jne    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  425a29:	jmp    4259b3 <flatcc_json_parser_union_type_vector@@Base+0x613>
  425a2b:	cmp    DWORD PTR [r13+0x1c],0x0
  425a30:	jne    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  425a32:	mov    DWORD PTR [r13+0x1c],0xf
  425a3a:	mov    eax,DWORD PTR [r13+0x8]
  425a3e:	mov    ecx,r14d
  425a41:	sub    ecx,eax
  425a43:	inc    ecx
  425a45:	mov    DWORD PTR [r13+0x18],ecx
  425a49:	mov    QWORD PTR [r13+0x30],r14
  425a4d:	jmp    4259dc <flatcc_json_parser_union_type_vector@@Base+0x63c>
  425a4f:	lea    rdi,[rip+0x12890]        # 4382e6 <flatcc_builder_padding_base@@Base+0x28c6>
  425a56:	lea    rsi,[rip+0x12898]        # 4382f5 <flatcc_builder_padding_base@@Base+0x28d5>
  425a5d:	lea    rcx,[rip+0x129c1]        # 438425 <flatcc_builder_padding_base@@Base+0x2a05>
  425a64:	mov    edx,0x462
  425a69:	call   406070 <__assert_fail@plt>
  425a6e:	xchg   ax,ax

0000000000425a70 <flatcc_json_parser_table_as_root@@Base>:
  425a70:	push   r15
  425a72:	push   r14
  425a74:	push   r12
  425a76:	push   rbx
  425a77:	sub    rsp,0x48
  425a7b:	mov    r12,rcx
  425a7e:	mov    r14,rdx
  425a81:	mov    r15,rdi
  425a84:	mov    ecx,r8d
  425a87:	shr    ecx,1
  425a89:	and    ecx,0x2
  425a8c:	test   rsi,rsi
  425a8f:	lea    rbx,[rsp+0x8]
  425a94:	cmovne rbx,rsi
  425a98:	add    r12,rdx
  425a9b:	vxorps xmm0,xmm0,xmm0
  425a9f:	vmovups YMMWORD PTR [rbx+0x18],ymm0
  425aa4:	mov    QWORD PTR [rbx+0x38],0x0
  425aac:	mov    QWORD PTR [rbx],rdi
  425aaf:	mov    QWORD PTR [rbx+0x8],rdx
  425ab3:	mov    DWORD PTR [rbx+0x14],0x1
  425aba:	mov    DWORD PTR [rbx+0x10],r8d
  425abe:	mov    QWORD PTR [rbx+0x20],rdx
  425ac2:	mov    QWORD PTR [rbx+0x28],r12
  425ac6:	mov    QWORD PTR [rbx+0x30],rdx
  425aca:	mov    rsi,r9
  425acd:	xor    edx,edx
  425acf:	vzeroupper 
  425ad2:	call   41ca20 <flatcc_builder_start_buffer@@Base>
  425ad7:	mov    ecx,eax
  425ad9:	mov    eax,0xffffffff
  425ade:	test   ecx,ecx
  425ae0:	jne    425b18 <flatcc_json_parser_table_as_root@@Base+0xa8>
  425ae2:	lea    rcx,[rsp+0x4]
  425ae7:	mov    rdi,rbx
  425aea:	mov    rsi,r14
  425aed:	mov    rdx,r12
  425af0:	call   QWORD PTR [rsp+0x70]
  425af4:	mov    eax,DWORD PTR [rbx+0x1c]
  425af7:	test   eax,eax
  425af9:	jne    425b18 <flatcc_json_parser_table_as_root@@Base+0xa8>
  425afb:	mov    esi,DWORD PTR [rsp+0x4]
  425aff:	mov    rdi,r15
  425b02:	call   41cc40 <flatcc_builder_end_buffer@@Base>
  425b07:	mov    ecx,eax
  425b09:	mov    eax,0xffffffff
  425b0e:	test   ecx,ecx
  425b10:	je     425b18 <flatcc_json_parser_table_as_root@@Base+0xa8>
  425b12:	mov    QWORD PTR [rbx+0x38],r14
  425b16:	xor    eax,eax
  425b18:	add    rsp,0x48
  425b1c:	pop    rbx
  425b1d:	pop    r12
  425b1f:	pop    r14
  425b21:	pop    r15
  425b23:	ret    
  425b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b2e:	xchg   ax,ax

0000000000425b30 <flatcc_json_parser_struct_as_root@@Base>:
  425b30:	push   r15
  425b32:	push   r14
  425b34:	push   r12
  425b36:	push   rbx
  425b37:	sub    rsp,0x48
  425b3b:	mov    r12,rcx
  425b3e:	mov    r14,rdx
  425b41:	mov    r15,rdi
  425b44:	mov    ecx,r8d
  425b47:	shr    ecx,1
  425b49:	and    ecx,0x2
  425b4c:	test   rsi,rsi
  425b4f:	lea    rbx,[rsp+0x8]
  425b54:	cmovne rbx,rsi
  425b58:	add    r12,rdx
  425b5b:	vxorps xmm0,xmm0,xmm0
  425b5f:	vmovups YMMWORD PTR [rbx+0x18],ymm0
  425b64:	mov    QWORD PTR [rbx+0x38],0x0
  425b6c:	mov    QWORD PTR [rbx],rdi
  425b6f:	mov    QWORD PTR [rbx+0x8],rdx
  425b73:	mov    DWORD PTR [rbx+0x14],0x1
  425b7a:	mov    DWORD PTR [rbx+0x10],r8d
  425b7e:	mov    QWORD PTR [rbx+0x20],rdx
  425b82:	mov    QWORD PTR [rbx+0x28],r12
  425b86:	mov    QWORD PTR [rbx+0x30],rdx
  425b8a:	mov    rsi,r9
  425b8d:	xor    edx,edx
  425b8f:	vzeroupper 
  425b92:	call   41ca20 <flatcc_builder_start_buffer@@Base>
  425b97:	mov    ecx,eax
  425b99:	mov    eax,0xffffffff
  425b9e:	test   ecx,ecx
  425ba0:	jne    425bd8 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  425ba2:	lea    rcx,[rsp+0x4]
  425ba7:	mov    rdi,rbx
  425baa:	mov    rsi,r14
  425bad:	mov    rdx,r12
  425bb0:	call   QWORD PTR [rsp+0x70]
  425bb4:	mov    eax,DWORD PTR [rbx+0x1c]
  425bb7:	test   eax,eax
  425bb9:	jne    425bd8 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  425bbb:	mov    esi,DWORD PTR [rsp+0x4]
  425bbf:	mov    rdi,r15
  425bc2:	call   41cc40 <flatcc_builder_end_buffer@@Base>
  425bc7:	mov    ecx,eax
  425bc9:	mov    eax,0xffffffff
  425bce:	test   ecx,ecx
  425bd0:	je     425bd8 <flatcc_json_parser_struct_as_root@@Base+0xa8>
  425bd2:	mov    QWORD PTR [rbx+0x38],r14
  425bd6:	xor    eax,eax
  425bd8:	add    rsp,0x48
  425bdc:	pop    rbx
  425bdd:	pop    r12
  425bdf:	pop    r14
  425be1:	pop    r15
  425be3:	ret    
  425be4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bee:	xchg   ax,ax

0000000000425bf0 <flatcc_json_printer_error_string@@Base>:
  425bf0:	cmp    edi,0x3
  425bf3:	ja     425c04 <flatcc_json_printer_error_string@@Base+0x14>
  425bf5:	movsxd rax,edi
  425bf8:	lea    rcx,[rip+0x1a1e1]        # 43fde0 <flatcc_builder_padding_base@@Base+0xa3c0>
  425bff:	mov    rax,QWORD PTR [rcx+rax*8]
  425c03:	ret    
  425c04:	lea    rax,[rip+0x11715]        # 437320 <flatcc_builder_padding_base@@Base+0x1900>
  425c0b:	ret    
  425c0c:	nop    DWORD PTR [rax+0x0]

0000000000425c10 <flatcc_json_printer_fmt_float@@Base>:
  425c10:	vcvtss2sd xmm0,xmm0,xmm0
  425c14:	jmp    425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  425c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c20:	push   rbp
  425c21:	push   r15
  425c23:	push   r14
  425c25:	push   r13
  425c27:	push   r12
  425c29:	push   rbx
  425c2a:	sub    rsp,0x98
  425c31:	test   rdi,rdi
  425c34:	je     4268fa <flatcc_json_printer_fmt_float@@Base+0xcea>
  425c3a:	vmovq  rcx,xmm0
  425c3f:	lea    rax,[rcx+rcx*1]
  425c43:	movabs rdx,0xffe0000000000001
  425c4d:	cmp    rax,rdx
  425c50:	jb     425c78 <flatcc_json_printer_fmt_float@@Base+0x68>
  425c52:	mov    rdx,rcx
  425c55:	shr    rdx,0x20
  425c59:	lea    rsi,[rip+0x13365]        # 438fc5 <flatcc_builder_padding_base@@Base+0x35a5>
  425c60:	xor    eax,eax
  425c62:	add    rsp,0x98
  425c69:	pop    rbx
  425c6a:	pop    r12
  425c6c:	pop    r13
  425c6e:	pop    r14
  425c70:	pop    r15
  425c72:	pop    rbp
  425c73:	jmp    406120 <sprintf@plt>
  425c78:	test   rcx,rcx
  425c7b:	js     425c82 <flatcc_json_printer_fmt_float@@Base+0x72>
  425c7d:	mov    rdx,rdi
  425c80:	jmp    425c9e <flatcc_json_printer_fmt_float@@Base+0x8e>
  425c82:	lea    rdx,[rdi+0x1]
  425c86:	mov    BYTE PTR [rdi],0x2d
  425c89:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0xce3f]        # 432ad0 <_IO_stdin_used@@Base+0xad0>
  425c91:	movabs rax,0x8000000000000000
  425c9b:	xor    rcx,rax
  425c9e:	movabs r11,0x7ff0000000000000
  425ca8:	cmp    rcx,r11
  425cab:	je     425cc0 <flatcc_json_printer_fmt_float@@Base+0xb0>
  425cad:	test   rcx,rcx
  425cb0:	jne    425cd0 <flatcc_json_printer_fmt_float@@Base+0xc0>
  425cb2:	mov    WORD PTR [rdx],0x30
  425cb7:	sub    edx,edi
  425cb9:	inc    edx
  425cbb:	jmp    426358 <flatcc_json_printer_fmt_float@@Base+0x748>
  425cc0:	mov    DWORD PTR [rdx],0x666e69
  425cc6:	sub    edx,edi
  425cc8:	add    edx,0x3
  425ccb:	jmp    426358 <flatcc_json_printer_fmt_float@@Base+0x748>
  425cd0:	mov    QWORD PTR [rsp],rdx
  425cd4:	vmovq  rax,xmm0
  425cd9:	mov    cl,0x34
  425cdb:	bzhi   r8,rax,rcx
  425ce0:	and    r11,rax
  425ce3:	je     425d04 <flatcc_json_printer_fmt_float@@Base+0xf4>
  425ce5:	movabs r10,0xfffffffffffff
  425cef:	inc    r10
  425cf2:	or     r10,r8
  425cf5:	mov    rsi,r11
  425cf8:	shr    rsi,0x34
  425cfc:	add    esi,0xfffffbcd
  425d02:	jmp    425d15 <flatcc_json_printer_fmt_float@@Base+0x105>
  425d04:	mov    esi,0xfffffbce
  425d09:	mov    r10,r8
  425d0c:	test   r8,r8
  425d0f:	je     426957 <flatcc_json_printer_fmt_float@@Base+0xd47>
  425d15:	movabs rbp,0x40000000000000
  425d1f:	mov    rdx,r10
  425d22:	mov    eax,esi
  425d24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d2e:	xchg   ax,ax
  425d30:	shl    rdx,0xa
  425d34:	add    eax,0xfffffff6
  425d37:	cmp    rdx,rbp
  425d3a:	jb     425d30 <flatcc_json_printer_fmt_float@@Base+0x120>
  425d3c:	jmp    425d45 <flatcc_json_printer_fmt_float@@Base+0x135>
  425d3e:	xchg   ax,ax
  425d40:	add    rdx,rdx
  425d43:	dec    eax
  425d45:	test   rdx,rdx
  425d48:	jns    425d40 <flatcc_json_printer_fmt_float@@Base+0x130>
  425d4a:	lea    rcx,[r10+r10*1]
  425d4e:	add    rcx,0x1
  425d52:	lea    r9d,[rsi-0x1]
  425d56:	mov    ebx,r9d
  425d59:	cmp    rcx,rbp
  425d5c:	jae    425d75 <flatcc_json_printer_fmt_float@@Base+0x165>
  425d5e:	xchg   ax,ax
  425d60:	shl    rcx,0xa
  425d64:	add    ebx,0xfffffff6
  425d67:	cmp    rcx,rbp
  425d6a:	jb     425d60 <flatcc_json_printer_fmt_float@@Base+0x150>
  425d6c:	jmp    425d75 <flatcc_json_printer_fmt_float@@Base+0x165>
  425d6e:	xchg   ax,ax
  425d70:	add    rcx,rcx
  425d73:	dec    ebx
  425d75:	test   rcx,rcx
  425d78:	jns    425d70 <flatcc_json_printer_fmt_float@@Base+0x160>
  425d7a:	vxorps xmm1,xmm1,xmm1
  425d7e:	vucomisd xmm0,xmm1
  425d82:	jbe    426938 <flatcc_json_printer_fmt_float@@Base+0xd28>
  425d88:	vmovsd xmm1,QWORD PTR [rip+0x12900]        # 438690 <flatcc_builder_padding_base@@Base+0x2c70>
  425d90:	vucomisd xmm1,xmm0
  425d94:	jb     426938 <flatcc_json_printer_fmt_float@@Base+0xd28>
  425d9a:	test   r11,r11
  425d9d:	sete   r11b
  425da1:	test   r8,r8
  425da4:	setne  r8b
  425da8:	or     r8b,r11b
  425dab:	lea    r11,[r10+r10*1]
  425daf:	lea    rbp,[r10*4+0x0]
  425db7:	add    esi,0xfffffffe
  425dba:	test   r8b,r8b
  425dbd:	cmovne rbp,r11
  425dc1:	cmovne esi,r9d
  425dc5:	dec    rbp
  425dc8:	sub    esi,ebx
  425dca:	shlx   r8,rbp,rsi
  425dcf:	mov    esi,0xffffffc3
  425dd4:	sub    esi,eax
  425dd6:	vcvtsi2sd xmm1,xmm2,esi
  425dda:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x128b6]        # 438698 <flatcc_builder_padding_base@@Base+0x2c78>
  425de2:	vcvttsd2si esi,xmm1
  425de6:	vxorpd xmm2,xmm2,xmm2
  425dea:	vucomisd xmm2,xmm1
  425dee:	ja     425e09 <flatcc_json_printer_fmt_float@@Base+0x1f9>
  425df0:	vcvtsi2sd xmm3,xmm3,esi
  425df4:	vsubsd xmm1,xmm1,xmm3
  425df8:	vcmpneqsd xmm1,xmm1,xmm2
  425dfd:	vmovq  rbp,xmm1
  425e02:	and    ebp,0x1
  425e05:	add    ebp,esi
  425e07:	mov    esi,ebp
  425e09:	mov    ebp,esi
  425e0b:	add    ebp,0x15b
  425e11:	sar    ebp,0x1f
  425e14:	shr    ebp,0x1d
  425e17:	lea    esi,[rsi+rbp*1]
  425e1a:	add    esi,0x15b
  425e20:	sar    esi,0x3
  425e23:	movsxd rsi,esi
  425e26:	shl    rsi,0x4
  425e2a:	lea    rbp,[rip+0x1296f]        # 4387a0 <flatcc_builder_padding_base@@Base+0x2d80>
  425e31:	mov    QWORD PTR [rsp+0x60],rsi
  425e36:	mov    r14,QWORD PTR [rsi+rbp*1+0x10]
  425e3b:	mov    r12d,r14d
  425e3e:	shr    r14,0x20
  425e42:	mov    rbp,r8
  425e45:	shr    rbp,0x20
  425e49:	mov    esi,r8d
  425e4c:	mov    r8,r14
  425e4f:	imul   r8,rbp
  425e53:	mov    r15,r14
  425e56:	imul   r15,rsi
  425e5a:	mov    r9,r12
  425e5d:	mov    QWORD PTR [rsp+0x80],rbp
  425e65:	imul   r9,rbp
  425e69:	imul   rsi,r12
  425e6d:	shr    rsi,0x20
  425e71:	mov    ebp,r9d
  425e74:	add    rbp,rsi
  425e77:	mov    r10d,r15d
  425e7a:	add    r10,rbp
  425e7d:	sub    r10,0xffffffff80000000
  425e84:	shr    r9,0x20
  425e88:	shr    r15,0x20
  425e8c:	shr    r10,0x20
  425e90:	mov    rsi,rcx
  425e93:	shr    rsi,0x20
  425e97:	mov    ecx,ecx
  425e99:	mov    r13,r14
  425e9c:	imul   r13,rsi
  425ea0:	mov    r11,r14
  425ea3:	imul   r11,rcx
  425ea7:	mov    rbp,r12
  425eaa:	mov    QWORD PTR [rsp+0x70],rsi
  425eaf:	imul   rbp,rsi
  425eb3:	imul   rcx,r12
  425eb7:	shr    rcx,0x20
  425ebb:	mov    esi,ebp
  425ebd:	add    rsi,rcx
  425ec0:	mov    ecx,r11d
  425ec3:	add    rcx,rsi
  425ec6:	sub    rcx,0xffffffff80000000
  425ecd:	shr    rbp,0x20
  425ed1:	shr    r11,0x20
  425ed5:	shr    rcx,0x20
  425ed9:	mov    QWORD PTR [rsp+0x78],r9
  425ede:	add    r8,r9
  425ee1:	mov    QWORD PTR [rsp+0x88],r15
  425ee9:	add    r8,r15
  425eec:	mov    QWORD PTR [rsp+0x68],r10
  425ef1:	add    r8,r10
  425ef4:	add    r8,0xffffffffffffffff
  425ef8:	mov    QWORD PTR [rsp+0x30],rbp
  425efd:	mov    rsi,r13
  425f00:	add    rsi,rbp
  425f03:	mov    QWORD PTR [rsp+0x28],r11
  425f08:	add    rsi,r11
  425f0b:	mov    QWORD PTR [rsp+0x20],rcx
  425f10:	lea    r15,[rcx+rsi*1]
  425f14:	add    r15,0x1
  425f18:	mov    r11,r15
  425f1b:	sub    r11,r8
  425f1e:	jb     426919 <flatcc_json_printer_fmt_float@@Base+0xd09>
  425f24:	mov    QWORD PTR [rsp+0x50],r13
  425f29:	mov    rcx,QWORD PTR [rsp+0x60]
  425f2e:	lea    rsi,[rip+0x1286b]        # 4387a0 <flatcc_builder_padding_base@@Base+0x2d80>
  425f35:	movsx  r9d,WORD PTR [rcx+rsi*1+0x18]
  425f3b:	mov    r8,rdx
  425f3e:	shr    r8,0x20
  425f42:	and    edx,0xfffffffe
  425f45:	mov    r13,r14
  425f48:	imul   r13,r8
  425f4c:	mov    QWORD PTR [rsp+0x90],r14
  425f54:	imul   r14,rdx
  425f58:	mov    rcx,r12
  425f5b:	imul   rcx,r8
  425f5f:	imul   r12,rdx
  425f63:	shr    r12,0x20
  425f67:	mov    edx,ecx
  425f69:	add    rdx,r12
  425f6c:	mov    ebp,r14d
  425f6f:	add    rbp,rdx
  425f72:	sub    rbp,0xffffffff80000000
  425f79:	shr    rcx,0x20
  425f7d:	mov    QWORD PTR [rsp+0x40],r13
  425f82:	mov    QWORD PTR [rsp+0x18],rcx
  425f87:	add    rcx,r13
  425f8a:	shr    r14,0x20
  425f8e:	mov    QWORD PTR [rsp+0x48],r14
  425f93:	add    rcx,r14
  425f96:	shr    rbp,0x20
  425f9a:	mov    QWORD PTR [rsp+0x38],rbp
  425f9f:	add    rcx,rbp
  425fa2:	mov    QWORD PTR [rsp+0x58],rcx
  425fa7:	lea    eax,[r9+rax*1]
  425fab:	add    eax,0x40
  425fae:	lea    ecx,[r9+rbx*1]
  425fb2:	add    ecx,0x40
  425fb5:	mov    DWORD PTR [rsp+0x10],ecx
  425fb9:	mov    ebx,eax
  425fbb:	neg    ebx
  425fbd:	shrx   rdx,r15,rbx
  425fc2:	bzhi   r9,r15,rbx
  425fc7:	mov    DWORD PTR [rsp+0x14],eax
  425fcb:	imul   ecx,eax,0x4d1
  425fd1:	add    ecx,0x13911
  425fd7:	sar    ecx,0xc
  425fda:	movsxd r13,ecx
  425fdd:	inc    ecx
  425fdf:	lea    rax,[rip+0x12d2a]        # 438d10 <flatcc_builder_padding_base@@Base+0x32f0>
  425fe6:	cmp    DWORD PTR [rax+r13*4+0x4],edx
  425feb:	cmovbe r13d,ecx
  425fef:	test   r13d,r13d
  425ff2:	mov    QWORD PTR [rsp+0x8],rdi
  425ff7:	jle    42605f <flatcc_json_printer_fmt_float@@Base+0x44f>
  425ff9:	movsxd rcx,r13d
  425ffc:	mov    esi,DWORD PTR [rax+rcx*4]
  425fff:	lea    ebp,[r13-0x1]
  426003:	neg    rbp
  426006:	mov    r12d,0x1
  42600c:	mov    edi,0xcccccccd
  426011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42601b:	nop    DWORD PTR [rax+rax*1+0x0]
  426020:	mov    rcx,QWORD PTR [rsp]
  426024:	mov    eax,edx
  426026:	xor    edx,edx
  426028:	div    esi
  42602a:	add    al,0x30
  42602c:	mov    BYTE PTR [rcx+r12*1-0x1],al
  426031:	shlx   r14,rdx,rbx
  426036:	lea    rcx,[r14+r9*1]
  42603a:	mov    r10,r11
  42603d:	sub    r10,rcx
  426040:	ja     426067 <flatcc_json_printer_fmt_float@@Base+0x457>
  426042:	lea    rax,[r12+rbp*1]
  426046:	cmp    rax,0x1
  42604a:	je     42618e <flatcc_json_printer_fmt_float@@Base+0x57e>
  426050:	mov    esi,esi
  426052:	imul   rsi,rdi
  426056:	shr    rsi,0x23
  42605a:	inc    r12
  42605d:	jmp    426020 <flatcc_json_printer_fmt_float@@Base+0x410>
  42605f:	xor    r12d,r12d
  426062:	jmp    426191 <flatcc_json_printer_fmt_float@@Base+0x581>
  426067:	mov    eax,DWORD PTR [rsp+0x10]
  42606b:	cmp    eax,DWORD PTR [rsp+0x14]
  42606f:	jne    426919 <flatcc_json_printer_fmt_float@@Base+0xd09>
  426075:	sub    r15,QWORD PTR [rsp+0x58]
  42607a:	jb     426919 <flatcc_json_printer_fmt_float@@Base+0xd09>
  426080:	mov    eax,esi
  426082:	shlx   rax,rax,rbx
  426087:	lea    rbx,[r15-0x1]
  42608b:	inc    r15
  42608e:	cmp    r10,rax
  426091:	setb   dil
  426095:	cmp    rbx,rcx
  426098:	mov    rdx,QWORD PTR [rsp+0x90]
  4260a0:	jbe    4262bd <flatcc_json_printer_fmt_float@@Base+0x6ad>
  4260a6:	cmp    r10,rax
  4260a9:	jb     4262bd <flatcc_json_printer_fmt_float@@Base+0x6ad>
  4260af:	mov    rdi,QWORD PTR [rsp+0x70]
  4260b4:	mov    rbp,rdi
  4260b7:	sub    rbp,QWORD PTR [rsp+0x80]
  4260bf:	mov    r10,rdx
  4260c2:	mov    rdx,QWORD PTR [rsp+0x28]
  4260c7:	mov    rsi,QWORD PTR [rsp+0x30]
  4260cc:	add    rsi,rdx
  4260cf:	add    rsi,QWORD PTR [rsp+0x20]
  4260d4:	imul   rbp,r10
  4260d8:	add    rbp,rsi
  4260db:	sub    rbp,QWORD PTR [rsp+0x78]
  4260e0:	sub    rbp,QWORD PTR [rsp+0x88]
  4260e8:	sub    rbp,QWORD PTR [rsp+0x68]
  4260ed:	lea    rdx,[r9+rax*1]
  4260f1:	add    rdx,r14
  4260f4:	sub    rbp,rdx
  4260f7:	sub    r8,rdi
  4260fa:	imul   r8,r10
  4260fe:	mov    rdi,QWORD PTR [rsp+0x48]
  426103:	lea    rdx,[r9+rdi*1]
  426107:	add    rdx,QWORD PTR [rsp+0x18]
  42610c:	mov    r10,QWORD PTR [rsp+0x38]
  426111:	add    rdx,r10
  426114:	add    r8,rdx
  426117:	sub    r8,QWORD PTR [rsp+0x30]
  42611c:	sub    r8,QWORD PTR [rsp+0x28]
  426121:	sub    r8,QWORD PTR [rsp+0x20]
  426126:	add    rsi,QWORD PTR [rsp+0x50]
  42612b:	add    rdi,QWORD PTR [rsp+0x18]
  426130:	add    rdi,r10
  426133:	add    rdi,QWORD PTR [rsp+0x40]
  426138:	sub    rsi,rdi
  42613b:	add    r8,r14
  42613e:	add    r14,r9
  426141:	sub    rsi,r14
  426144:	add    rbp,0x2
  426148:	mov    r10,QWORD PTR [rsp]
  42614c:	nop    DWORD PTR [rax+0x0]
  426150:	lea    rdx,[rcx+rax*1]
  426154:	cmp    rdx,rbx
  426157:	jb     426166 <flatcc_json_printer_fmt_float@@Base+0x556>
  426159:	lea    rdi,[rax+r8*1]
  42615d:	cmp    rsi,rdi
  426160:	jb     426307 <flatcc_json_printer_fmt_float@@Base+0x6f7>
  426166:	dec    BYTE PTR [r10+r12*1-0x1]
  42616b:	sub    rbp,rax
  42616e:	setb   dil
  426172:	cmp    rdx,rbx
  426175:	jae    42630c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  42617b:	add    r8,rax
  42617e:	sub    rsi,rax
  426181:	mov    rcx,rdx
  426184:	test   dil,dil
  426187:	je     426150 <flatcc_json_printer_fmt_float@@Base+0x540>
  426189:	jmp    42630c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  42618e:	sub    r13d,r12d
  426191:	mov    r10,QWORD PTR [rsp]
  426195:	mov    esi,0x1
  42619a:	shlx   r14,rsi,rbx
  42619f:	lea    rax,[r14-0x1]
  4261a3:	mov    r8d,0xffffffff
  4261a9:	mov    r12d,r12d
  4261ac:	mov    rdx,r12
  4261af:	shl    rdx,0x20
  4261b3:	movabs rcx,0xffffffff00000000
  4261bd:	add    rcx,rdx
  4261c0:	mov    rdx,rsi
  4261c3:	add    r9,r9
  4261c6:	lea    r9,[r9+r9*4]
  4261ca:	add    rsi,rsi
  4261cd:	lea    rsi,[rsi+rsi*4]
  4261d1:	mov    rdi,r11
  4261d4:	add    rdi,r11
  4261d7:	lea    r11,[rdi+rdi*4]
  4261db:	shrx   rbp,r9,rbx
  4261e0:	add    bpl,0x30
  4261e4:	mov    BYTE PTR [r10+r12*1],bpl
  4261e8:	inc    r12
  4261eb:	and    r9,rax
  4261ee:	dec    r13d
  4261f1:	mov    rbp,r11
  4261f4:	add    rcx,r8
  4261f7:	add    rcx,0x1
  4261fb:	sub    rbp,r9
  4261fe:	jbe    4261c0 <flatcc_json_printer_fmt_float@@Base+0x5b0>
  426200:	mov    eax,DWORD PTR [rsp+0x10]
  426204:	cmp    eax,DWORD PTR [rsp+0x14]
  426208:	jne    426919 <flatcc_json_printer_fmt_float@@Base+0xd09>
  42620e:	sub    r15,QWORD PTR [rsp+0x58]
  426213:	jb     426919 <flatcc_json_printer_fmt_float@@Base+0xd09>
  426219:	imul   r15,rsi
  42621d:	lea    r8,[r15+rsi*1]
  426221:	cmp    rbp,r14
  426224:	setb   bl
  426227:	jb     4262c8 <flatcc_json_printer_fmt_float@@Base+0x6b8>
  42622d:	sub    r15,rsi
  426230:	mov    rbp,r15
  426233:	sub    rbp,r9
  426236:	jbe    4262c8 <flatcc_json_printer_fmt_float@@Base+0x6b8>
  42623c:	sar    rcx,0x20
  426240:	lea    rax,[rdi+rdi*4]
  426244:	lea    rsi,[r14+r9*1]
  426248:	sub    rax,rsi
  42624b:	mov    rsi,QWORD PTR [rsp+0x30]
  426250:	add    rsi,QWORD PTR [rsp+0x28]
  426255:	add    rsi,QWORD PTR [rsp+0x20]
  42625a:	add    rsi,QWORD PTR [rsp+0x50]
  42625f:	add    rsi,rsi
  426262:	lea    rsi,[rsi+rsi*4]
  426266:	mov    rdi,QWORD PTR [rsp+0x48]
  42626b:	add    rdi,QWORD PTR [rsp+0x18]
  426270:	add    rdi,QWORD PTR [rsp+0x38]
  426275:	add    rdi,QWORD PTR [rsp+0x40]
  42627a:	add    rdi,rdi
  42627d:	lea    rdi,[rdi+rdi*4]
  426281:	sub    rdi,rsi
  426284:	imul   rdi,rdx
  426288:	add    rdi,r14
  42628b:	nop    DWORD PTR [rax+rax*1+0x0]
  426290:	lea    rsi,[r9+r14*1]
  426294:	cmp    rsi,r15
  426297:	jb     4262a2 <flatcc_json_printer_fmt_float@@Base+0x692>
  426299:	lea    rbx,[rdi+r9*1]
  42629d:	cmp    rbp,rbx
  4262a0:	jb     4262c6 <flatcc_json_printer_fmt_float@@Base+0x6b6>
  4262a2:	dec    BYTE PTR [r10+rcx*1]
  4262a6:	sub    rax,r14
  4262a9:	setb   bl
  4262ac:	cmp    rsi,r15
  4262af:	jae    4262cb <flatcc_json_printer_fmt_float@@Base+0x6bb>
  4262b1:	sub    rbp,r14
  4262b4:	mov    r9,rsi
  4262b7:	test   bl,bl
  4262b9:	je     426290 <flatcc_json_printer_fmt_float@@Base+0x680>
  4262bb:	jmp    4262cb <flatcc_json_printer_fmt_float@@Base+0x6bb>
  4262bd:	mov    rdx,rcx
  4262c0:	mov    r10,QWORD PTR [rsp]
  4262c4:	jmp    42630c <flatcc_json_printer_fmt_float@@Base+0x6fc>
  4262c6:	xor    ebx,ebx
  4262c8:	mov    rsi,r9
  4262cb:	mov    rax,r8
  4262ce:	sub    rax,rsi
  4262d1:	jbe    4262e4 <flatcc_json_printer_fmt_float@@Base+0x6d4>
  4262d3:	test   bl,bl
  4262d5:	jne    4262e4 <flatcc_json_printer_fmt_float@@Base+0x6d4>
  4262d7:	add    r14,rsi
  4262da:	sub    r14,r8
  4262dd:	jb     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  4262df:	cmp    rax,r14
  4262e2:	ja     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  4262e4:	lea    rax,[rdx*4+0x0]
  4262ec:	lea    rax,[rax+rax*4]
  4262f0:	cmp    rax,rsi
  4262f3:	ja     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  4262f5:	shl    rdx,0x3
  4262f9:	lea    rax,[rdx+rdx*4]
  4262fd:	sub    r11,rax
  426300:	cmp    rsi,r11
  426303:	ja     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  426305:	jmp    426375 <flatcc_json_printer_fmt_float@@Base+0x765>
  426307:	xor    edi,edi
  426309:	mov    rdx,rcx
  42630c:	mov    rcx,r15
  42630f:	sub    rcx,rdx
  426312:	jbe    42632e <flatcc_json_printer_fmt_float@@Base+0x71e>
  426314:	test   dil,dil
  426317:	jne    42632e <flatcc_json_printer_fmt_float@@Base+0x71e>
  426319:	add    rax,rdx
  42631c:	sub    rax,r15
  42631f:	jb     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  426321:	cmp    rdx,0x2
  426325:	jb     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  426327:	cmp    rcx,rax
  42632a:	jbe    426334 <flatcc_json_printer_fmt_float@@Base+0x724>
  42632c:	jmp    42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  42632e:	cmp    rdx,0x2
  426332:	jb     42633d <flatcc_json_printer_fmt_float@@Base+0x72d>
  426334:	add    r11,0xfffffffffffffffc
  426338:	cmp    rdx,r11
  42633b:	jbe    42636f <flatcc_json_printer_fmt_float@@Base+0x75f>
  42633d:	lea    rsi,[rip+0x12c8f]        # 438fd3 <flatcc_builder_padding_base@@Base+0x35b3>
  426344:	mov    rdi,r10
  426347:	mov    al,0x1
  426349:	call   406120 <sprintf@plt>
  42634e:	mov    rdx,QWORD PTR [rsp]
  426352:	sub    edx,DWORD PTR [rsp+0x8]
  426356:	add    edx,eax
  426358:	mov    eax,edx
  42635a:	add    rsp,0x98
  426361:	pop    rbx
  426362:	pop    r12
  426364:	pop    r13
  426366:	pop    r14
  426368:	pop    r15
  42636a:	pop    rbp
  42636b:	vzeroupper 
  42636e:	ret    
  42636f:	mov    r13d,r13d
  426372:	sub    r13,r12
  426375:	mov    rax,QWORD PTR [rsp+0x60]
  42637a:	lea    rcx,[rip+0x1241f]        # 4387a0 <flatcc_builder_padding_base@@Base+0x2d80>
  426381:	movsx  ebp,WORD PTR [rax+rcx*1+0x1a]
  426386:	mov    ebx,r13d
  426389:	sub    ebx,ebp
  42638b:	mov    edx,ebx
  42638d:	neg    edx
  42638f:	lea    ecx,[r12-0x1]
  426394:	cmp    r12d,0x3
  426398:	mov    eax,0x1
  42639d:	cmovge eax,ecx
  4263a0:	cmp    eax,edx
  4263a2:	cmovg  eax,edx
  4263a5:	test   ebx,ebx
  4263a7:	js     4263d0 <flatcc_json_printer_fmt_float@@Base+0x7c0>
  4263a9:	cmp    ebx,0x3
  4263ac:	jb     426483 <flatcc_json_printer_fmt_float@@Base+0x873>
  4263b2:	movsxd rax,r12d
  4263b5:	mov    BYTE PTR [r10+rax*1],0x65
  4263ba:	movsxd rax,r12d
  4263bd:	inc    r12d
  4263c0:	lea    r8,[rax+r10*1]
  4263c4:	add    r8,0x1
  4263c8:	mov    rcx,r8
  4263cb:	jmp    42655b <flatcc_json_printer_fmt_float@@Base+0x94b>
  4263d0:	cmp    r12d,edx
  4263d3:	jg     4264ba <flatcc_json_printer_fmt_float@@Base+0x8aa>
  4263d9:	lea    r15d,[rbx+r12*1]
  4263dd:	cmp    r15d,0xfffffffe
  4263e1:	jl     4264ba <flatcc_json_printer_fmt_float@@Base+0x8aa>
  4263e7:	movsxd rax,ebx
  4263ea:	neg    rax
  4263ed:	lea    rdi,[r10+rax*1]
  4263f1:	add    rdi,0x2
  4263f5:	movsxd rdx,r12d
  4263f8:	sub    rdi,rdx
  4263fb:	mov    rsi,r10
  4263fe:	call   406110 <memmove@plt>
  426403:	mov    r10,QWORD PTR [rsp]
  426407:	mov    WORD PTR [r10],0x2e30
  42640d:	mov    eax,0x2
  426412:	mov    r14d,0x2
  426418:	sub    r14d,r15d
  42641b:	cmp    r14d,0x3
  42641f:	jl     426473 <flatcc_json_printer_fmt_float@@Base+0x863>
  426421:	lea    rdi,[r10+0x2]
  426425:	mov    ebx,r14d
  426428:	not    r13d
  42642b:	add    r13d,ebp
  42642e:	sub    r13d,r12d
  426431:	inc    r13
  426434:	mov    esi,0x30
  426439:	mov    rdx,r13
  42643c:	call   406080 <memset@plt>
  426441:	lea    eax,[r14-0x2]
  426445:	lea    rcx,[rbx-0x3]
  426449:	and    eax,0x7
  42644c:	cmp    rcx,0x7
  426450:	jb     426462 <flatcc_json_printer_fmt_float@@Base+0x852>
  426452:	mov    rcx,rax
  426455:	sub    rcx,rbx
  426458:	add    rcx,0x2
  42645c:	add    rcx,0x8
  426460:	jne    42645c <flatcc_json_printer_fmt_float@@Base+0x84c>
  426462:	test   rax,rax
  426465:	mov    r10,QWORD PTR [rsp]
  426469:	je     426470 <flatcc_json_printer_fmt_float@@Base+0x860>
  42646b:	dec    rax
  42646e:	jne    42646b <flatcc_json_printer_fmt_float@@Base+0x85b>
  426470:	mov    eax,r14d
  426473:	add    eax,r12d
  426476:	mov    r12d,eax
  426479:	mov    r14,QWORD PTR [rsp+0x8]
  42647e:	jmp    42671e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  426483:	test   ebx,ebx
  426485:	mov    r14,QWORD PTR [rsp+0x8]
  42648a:	je     42671e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  426490:	movsxd r12,r12d
  426493:	lea    rdi,[r10+r12*1]
  426497:	not    ebp
  426499:	add    r13d,ebp
  42649c:	inc    r13
  42649f:	mov    esi,0x30
  4264a4:	mov    rdx,r13
  4264a7:	call   406080 <memset@plt>
  4264ac:	cmp    ebx,0x10
  4264af:	jae    4264f5 <flatcc_json_printer_fmt_float@@Base+0x8e5>
  4264b1:	mov    r10,QWORD PTR [rsp]
  4264b5:	jmp    426717 <flatcc_json_printer_fmt_float@@Base+0xb07>
  4264ba:	cmp    r12d,0x2
  4264be:	jl     426534 <flatcc_json_printer_fmt_float@@Base+0x924>
  4264c0:	test   eax,eax
  4264c2:	mov    r14,QWORD PTR [rsp+0x8]
  4264c7:	jle    42678c <flatcc_json_printer_fmt_float@@Base+0xb7c>
  4264cd:	movsxd rdx,eax
  4264d0:	lea    rsi,[rdx-0x1]
  4264d4:	mov    r8d,eax
  4264d7:	and    r8d,0x7
  4264db:	cmp    rsi,0x7
  4264df:	jae    426733 <flatcc_json_printer_fmt_float@@Base+0xb23>
  4264e5:	xor    edx,edx
  4264e7:	test   r8,r8
  4264ea:	jne    42676e <flatcc_json_printer_fmt_float@@Base+0xb5e>
  4264f0:	jmp    42678c <flatcc_json_printer_fmt_float@@Base+0xb7c>
  4264f5:	mov    eax,ebx
  4264f7:	and    eax,0xfffffff0
  4264fa:	vmovq  xmm0,r12
  4264ff:	lea    edx,[rax-0x10]
  426502:	mov    esi,edx
  426504:	shr    esi,0x4
  426507:	inc    esi
  426509:	mov    ecx,esi
  42650b:	and    ecx,0x7
  42650e:	cmp    edx,0x70
  426511:	jae    42669d <flatcc_json_printer_fmt_float@@Base+0xa8d>
  426517:	vpxor  xmm1,xmm1,xmm1
  42651b:	vxorpd xmm2,xmm2,xmm2
  42651f:	vxorpd xmm3,xmm3,xmm3
  426523:	mov    r10,QWORD PTR [rsp]
  426527:	test   ecx,ecx
  426529:	jne    4266d3 <flatcc_json_printer_fmt_float@@Base+0xac3>
  42652f:	jmp    4266ed <flatcc_json_printer_fmt_float@@Base+0xadd>
  426534:	movsxd rax,r12d
  426537:	movsxd rcx,r12d
  42653a:	lea    r12,[rax+0x1]
  42653e:	mov    BYTE PTR [r10+rcx*1],0x65
  426543:	lea    r8,[r10+rax*1]
  426547:	add    r8,0x1
  42654b:	lea    rcx,[r10+rax*1]
  42654f:	add    rcx,0x2
  426553:	mov    BYTE PTR [r10+rax*1+0x1],0x2d
  426559:	mov    ebx,edx
  42655b:	mov    r14,QWORD PTR [rsp+0x8]
  426560:	mov    rdx,rcx
  426563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42656d:	nop    DWORD PTR [rax]
  426570:	movsxd rax,ebx
  426573:	imul   rbx,rax,0x66666667
  42657a:	mov    rsi,rbx
  42657d:	shr    rsi,0x3f
  426581:	sar    rbx,0x22
  426585:	add    ebx,esi
  426587:	lea    esi,[rbx+rbx*1]
  42658a:	lea    esi,[rsi+rsi*4]
  42658d:	mov    edi,eax
  42658f:	sub    edi,esi
  426591:	add    dil,0x30
  426595:	mov    BYTE PTR [rdx],dil
  426598:	inc    rdx
  42659b:	add    eax,0x9
  42659e:	cmp    eax,0x12
  4265a1:	ja     426570 <flatcc_json_printer_fmt_float@@Base+0x960>
  4265a3:	mov    BYTE PTR [rdx],0x0
  4265a6:	mov    rbp,rdx
  4265a9:	sub    rbp,rcx
  4265ac:	cmp    ebp,0x2
  4265af:	jl     42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4265b5:	mov    r10d,0xffffffff
  4265bb:	mov    rsi,rbp
  4265be:	shr    rsi,1
  4265c1:	mov    r9d,esi
  4265c4:	and    r9d,0x7fffffff
  4265cb:	lea    rbx,[r9-0x1]
  4265cf:	and    esi,0x3
  4265d2:	cmp    rbx,0x3
  4265d6:	jae    4265e8 <flatcc_json_printer_fmt_float@@Base+0x9d8>
  4265d8:	xor    ebx,ebx
  4265da:	test   rsi,rsi
  4265dd:	jne    42666c <flatcc_json_printer_fmt_float@@Base+0xa5c>
  4265e3:	jmp    42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4265e8:	sub    r9,rsi
  4265eb:	xor    ebx,ebx
  4265ed:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  4265f2:	mov    edi,ebx
  4265f4:	xor    edi,r10d
  4265f7:	add    edi,ebp
  4265f9:	movsxd rdi,edi
  4265fc:	movzx  eax,BYTE PTR [rcx+rdi*1]
  426600:	mov    BYTE PTR [rcx+rbx*1],al
  426603:	mov    BYTE PTR [rcx+rdi*1],r11b
  426607:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  42660d:	lea    edi,[r10-0x1]
  426611:	xor    edi,ebx
  426613:	add    edi,ebp
  426615:	movsxd rdi,edi
  426618:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42661c:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  426620:	mov    BYTE PTR [rcx+rdi*1],r11b
  426624:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  42662a:	lea    edi,[r10-0x2]
  42662e:	xor    edi,ebx
  426630:	add    edi,ebp
  426632:	movsxd rdi,edi
  426635:	movzx  eax,BYTE PTR [rcx+rdi*1]
  426639:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  42663d:	mov    BYTE PTR [rcx+rdi*1],r11b
  426641:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  426647:	lea    edi,[r10-0x3]
  42664b:	xor    edi,ebx
  42664d:	add    edi,ebp
  42664f:	movsxd rdi,edi
  426652:	movzx  eax,BYTE PTR [rcx+rdi*1]
  426656:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  42665a:	mov    BYTE PTR [rcx+rdi*1],r11b
  42665e:	add    rbx,0x4
  426662:	cmp    r9,rbx
  426665:	jne    4265ed <flatcc_json_printer_fmt_float@@Base+0x9dd>
  426667:	test   rsi,rsi
  42666a:	je     42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  42666c:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  426671:	mov    edi,ebx
  426673:	xor    edi,r10d
  426676:	add    edi,ebp
  426678:	movsxd rdi,edi
  42667b:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42667f:	mov    BYTE PTR [rcx+rbx*1],al
  426682:	mov    BYTE PTR [rcx+rdi*1],r9b
  426686:	inc    rbx
  426689:	dec    rsi
  42668c:	jne    42666c <flatcc_json_printer_fmt_float@@Base+0xa5c>
  42668e:	sub    edx,r8d
  426691:	add    r12d,edx
  426694:	mov    r10,QWORD PTR [rsp]
  426698:	jmp    42671e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  42669d:	mov    edx,ecx
  42669f:	sub    edx,esi
  4266a1:	vpxor  xmm1,xmm1,xmm1
  4266a5:	vpbroadcastq ymm4,QWORD PTR [rip+0xf5da]        # 435c88 <flatcc_builder_padding_base@@Base+0x268>
  4266ae:	vxorpd xmm2,xmm2,xmm2
  4266b2:	vxorpd xmm3,xmm3,xmm3
  4266b6:	mov    r10,QWORD PTR [rsp]
  4266ba:	vpaddq ymm0,ymm0,ymm4
  4266be:	vpaddq ymm1,ymm1,ymm4
  4266c2:	vpaddq ymm2,ymm2,ymm4
  4266c6:	vpaddq ymm3,ymm3,ymm4
  4266ca:	add    edx,0x8
  4266cd:	jne    4266ba <flatcc_json_printer_fmt_float@@Base+0xaaa>
  4266cf:	test   ecx,ecx
  4266d1:	je     4266ed <flatcc_json_printer_fmt_float@@Base+0xadd>
  4266d3:	neg    ecx
  4266d5:	vpcmpeqd ymm4,ymm4,ymm4
  4266d9:	vpsubq ymm0,ymm0,ymm4
  4266dd:	vpsubq ymm1,ymm1,ymm4
  4266e1:	vpsubq ymm2,ymm2,ymm4
  4266e5:	vpsubq ymm3,ymm3,ymm4
  4266e9:	inc    ecx
  4266eb:	jne    4266d9 <flatcc_json_printer_fmt_float@@Base+0xac9>
  4266ed:	vpaddq ymm1,ymm1,ymm3
  4266f1:	vpaddq ymm0,ymm0,ymm2
  4266f5:	vpaddq ymm0,ymm0,ymm1
  4266f9:	vextracti128 xmm1,ymm0,0x1
  4266ff:	vpaddq xmm0,xmm0,xmm1
  426703:	vpshufd xmm1,xmm0,0x4e
  426708:	vpaddq xmm0,xmm0,xmm1
  42670c:	vmovq  r12,xmm0
  426711:	cmp    ebx,eax
  426713:	je     42671e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  426715:	sub    ebx,eax
  426717:	inc    r12
  42671a:	dec    ebx
  42671c:	jg     426717 <flatcc_json_printer_fmt_float@@Base+0xb07>
  42671e:	movsxd rax,r12d
  426721:	mov    BYTE PTR [r10+rax*1],0x0
  426726:	add    rax,r10
  426729:	sub    eax,r14d
  42672c:	mov    edx,eax
  42672e:	jmp    426358 <flatcc_json_printer_fmt_float@@Base+0x748>
  426733:	movsxd rsi,r12d
  426736:	add    rsi,r10
  426739:	mov    rdi,r8
  42673c:	sub    rdi,rdx
  42673f:	xor    edx,edx
  426741:	mov    ebp,DWORD PTR [rsi+rdx*1-0x4]
  426745:	mov    DWORD PTR [rsi+rdx*1-0x3],ebp
  426749:	movzx  ebp,WORD PTR [rsi+rdx*1-0x8]
  42674e:	movzx  ecx,WORD PTR [rsi+rdx*1-0x6]
  426753:	mov    WORD PTR [rsi+rdx*1-0x5],cx
  426758:	mov    WORD PTR [rsi+rdx*1-0x7],bp
  42675d:	add    rdx,0xfffffffffffffff8
  426761:	cmp    rdi,rdx
  426764:	jne    426741 <flatcc_json_printer_fmt_float@@Base+0xb31>
  426766:	neg    rdx
  426769:	test   r8,r8
  42676c:	je     42678c <flatcc_json_printer_fmt_float@@Base+0xb7c>
  42676e:	movsxd rsi,r12d
  426771:	sub    rsi,rdx
  426774:	add    rsi,r10
  426777:	neg    r8
  42677a:	xor    edx,edx
  42677c:	movzx  ecx,BYTE PTR [rsi+rdx*1-0x1]
  426781:	mov    BYTE PTR [rsi+rdx*1],cl
  426784:	dec    rdx
  426787:	cmp    r8,rdx
  42678a:	jne    42677c <flatcc_json_printer_fmt_float@@Base+0xb6c>
  42678c:	movsxd rdx,r12d
  42678f:	lea    rcx,[rdx+0x1]
  426793:	mov    esi,r12d
  426796:	sub    esi,eax
  426798:	movsxd rsi,esi
  42679b:	mov    BYTE PTR [r10+rsi*1],0x2e
  4267a0:	add    ebx,eax
  4267a2:	je     4267ba <flatcc_json_printer_fmt_float@@Base+0xbaa>
  4267a4:	mov    BYTE PTR [r10+rcx*1],0x65
  4267a9:	lea    r8,[rdx+r10*1]
  4267ad:	add    r8,0x2
  4267b1:	test   ebx,ebx
  4267b3:	js     4267c2 <flatcc_json_printer_fmt_float@@Base+0xbb2>
  4267b5:	mov    rcx,r8
  4267b8:	jmp    4267cc <flatcc_json_printer_fmt_float@@Base+0xbbc>
  4267ba:	mov    r12d,ecx
  4267bd:	jmp    42671e <flatcc_json_printer_fmt_float@@Base+0xb0e>
  4267c2:	lea    rcx,[r8+0x1]
  4267c6:	mov    BYTE PTR [r8],0x2d
  4267ca:	neg    ebx
  4267cc:	add    r12d,0x2
  4267d0:	mov    rdx,rcx
  4267d3:	movsxd rax,ebx
  4267d6:	imul   rbx,rax,0x66666667
  4267dd:	mov    rsi,rbx
  4267e0:	shr    rsi,0x3f
  4267e4:	sar    rbx,0x22
  4267e8:	add    ebx,esi
  4267ea:	lea    esi,[rbx+rbx*1]
  4267ed:	lea    esi,[rsi+rsi*4]
  4267f0:	mov    edi,eax
  4267f2:	sub    edi,esi
  4267f4:	add    dil,0x30
  4267f8:	mov    BYTE PTR [rdx],dil
  4267fb:	inc    rdx
  4267fe:	add    eax,0x9
  426801:	cmp    eax,0x12
  426804:	ja     4267d3 <flatcc_json_printer_fmt_float@@Base+0xbc3>
  426806:	mov    BYTE PTR [rdx],0x0
  426809:	mov    rbp,rdx
  42680c:	sub    rbp,rcx
  42680f:	cmp    ebp,0x2
  426812:	jl     42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  426818:	mov    r10d,0xffffffff
  42681e:	mov    rsi,rbp
  426821:	shr    rsi,1
  426824:	mov    r9d,esi
  426827:	and    r9d,0x7fffffff
  42682e:	lea    rbx,[r9-0x1]
  426832:	and    esi,0x3
  426835:	cmp    rbx,0x3
  426839:	jae    42684b <flatcc_json_printer_fmt_float@@Base+0xc3b>
  42683b:	xor    ebx,ebx
  42683d:	test   rsi,rsi
  426840:	jne    4268d3 <flatcc_json_printer_fmt_float@@Base+0xcc3>
  426846:	jmp    42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  42684b:	sub    r9,rsi
  42684e:	xor    ebx,ebx
  426850:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  426855:	mov    edi,ebx
  426857:	xor    edi,r10d
  42685a:	add    edi,ebp
  42685c:	movsxd rdi,edi
  42685f:	movzx  eax,BYTE PTR [rcx+rdi*1]
  426863:	mov    BYTE PTR [rcx+rbx*1],al
  426866:	mov    BYTE PTR [rcx+rdi*1],r11b
  42686a:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  426870:	lea    edi,[r10-0x1]
  426874:	xor    edi,ebx
  426876:	add    edi,ebp
  426878:	movsxd rdi,edi
  42687b:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42687f:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  426883:	mov    BYTE PTR [rcx+rdi*1],r11b
  426887:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  42688d:	lea    edi,[r10-0x2]
  426891:	xor    edi,ebx
  426893:	add    edi,ebp
  426895:	movsxd rdi,edi
  426898:	movzx  eax,BYTE PTR [rcx+rdi*1]
  42689c:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  4268a0:	mov    BYTE PTR [rcx+rdi*1],r11b
  4268a4:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  4268aa:	lea    edi,[r10-0x3]
  4268ae:	xor    edi,ebx
  4268b0:	add    edi,ebp
  4268b2:	movsxd rdi,edi
  4268b5:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4268b9:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  4268bd:	mov    BYTE PTR [rcx+rdi*1],r11b
  4268c1:	add    rbx,0x4
  4268c5:	cmp    r9,rbx
  4268c8:	jne    426850 <flatcc_json_printer_fmt_float@@Base+0xc40>
  4268ca:	test   rsi,rsi
  4268cd:	je     42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4268d3:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  4268d8:	mov    edi,ebx
  4268da:	xor    edi,r10d
  4268dd:	add    edi,ebp
  4268df:	movsxd rdi,edi
  4268e2:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4268e6:	mov    BYTE PTR [rcx+rbx*1],al
  4268e9:	mov    BYTE PTR [rcx+rdi*1],r9b
  4268ed:	inc    rbx
  4268f0:	dec    rsi
  4268f3:	jne    4268d3 <flatcc_json_printer_fmt_float@@Base+0xcc3>
  4268f5:	jmp    42668e <flatcc_json_printer_fmt_float@@Base+0xa7e>
  4268fa:	lea    rdi,[rip+0x12627]        # 438f28 <flatcc_builder_padding_base@@Base+0x3508>
  426901:	lea    rsi,[rip+0x12624]        # 438f2c <flatcc_builder_padding_base@@Base+0x350c>
  426908:	lea    rcx,[rip+0x1268e]        # 438f9d <flatcc_builder_padding_base@@Base+0x357d>
  42690f:	mov    edx,0xbd
  426914:	call   406070 <__assert_fail@plt>
  426919:	lea    rdi,[rip+0x12707]        # 439027 <flatcc_builder_padding_base@@Base+0x3607>
  426920:	lea    rsi,[rip+0x11c00]        # 438527 <flatcc_builder_padding_base@@Base+0x2b07>
  426927:	lea    rcx,[rip+0x12712]        # 439040 <flatcc_builder_padding_base@@Base+0x3620>
  42692e:	mov    edx,0xef
  426933:	call   406070 <__assert_fail@plt>
  426938:	lea    rdi,[rip+0x1269a]        # 438fd9 <flatcc_builder_padding_base@@Base+0x35b9>
  42693f:	lea    rsi,[rip+0x125e6]        # 438f2c <flatcc_builder_padding_base@@Base+0x350c>
  426946:	lea    rcx,[rip+0x126b1]        # 438ffe <flatcc_builder_padding_base@@Base+0x35de>
  42694d:	mov    edx,0x8a
  426952:	call   406070 <__assert_fail@plt>
  426957:	lea    rdi,[rip+0x11bc0]        # 43851e <flatcc_builder_padding_base@@Base+0x2afe>
  42695e:	lea    rsi,[rip+0x11bc2]        # 438527 <flatcc_builder_padding_base@@Base+0x2b07>
  426965:	lea    rcx,[rip+0x11c2b]        # 438597 <flatcc_builder_padding_base@@Base+0x2b77>
  42696c:	mov    edx,0x104
  426971:	call   406070 <__assert_fail@plt>
  426976:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000426980 <flatcc_json_printer_fmt_double@@Base>:
  426980:	jmp    425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  426985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42698f:	nop

0000000000426990 <flatcc_json_printer_fmt_bool@@Base>:
  426990:	test   esi,esi
  426992:	je     4269a0 <flatcc_json_printer_fmt_bool@@Base+0x10>
  426994:	mov    DWORD PTR [rdi],0x65757274
  42699a:	mov    eax,0x4
  42699f:	ret    
  4269a0:	mov    BYTE PTR [rdi+0x4],0x65
  4269a4:	mov    DWORD PTR [rdi],0x736c6166
  4269aa:	mov    eax,0x5
  4269af:	ret    

00000000004269b0 <flatcc_json_printer_string@@Base>:
  4269b0:	movsxd rdx,edx
  4269b3:	jmp    4269c0 <flatcc_json_printer_string@@Base+0x10>
  4269b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4269bf:	nop
  4269c0:	push   rbp
  4269c1:	push   r15
  4269c3:	push   r14
  4269c5:	push   r13
  4269c7:	push   r12
  4269c9:	push   rbx
  4269ca:	sub    rsp,0x18
  4269ce:	mov    r8,rdx
  4269d1:	mov    r13,rsi
  4269d4:	mov    r15,rdi
  4269d7:	lea    rax,[rdi+0x28]
  4269db:	mov    QWORD PTR [rsp],rax
  4269df:	mov    rax,QWORD PTR [rdi+0x28]
  4269e3:	lea    rcx,[rax+0x1]
  4269e7:	mov    QWORD PTR [rdi+0x28],rcx
  4269eb:	mov    BYTE PTR [rax],0x22
  4269ee:	jmp    426a69 <flatcc_json_printer_string@@Base+0xb9>
  4269f0:	mov    rax,QWORD PTR [rsi]
  4269f3:	lea    rcx,[rax+0x1]
  4269f7:	mov    QWORD PTR [rsi],rcx
  4269fa:	mov    BYTE PTR [rax],0x75
  4269fd:	mov    rax,QWORD PTR [rsi]
  426a00:	lea    rcx,[rax+0x1]
  426a04:	mov    QWORD PTR [rsi],rcx
  426a07:	mov    BYTE PTR [rax],0x30
  426a0a:	mov    rax,QWORD PTR [rsi]
  426a0d:	lea    rcx,[rax+0x1]
  426a11:	mov    QWORD PTR [rsi],rcx
  426a14:	mov    BYTE PTR [rax],0x30
  426a17:	mov    eax,r14d
  426a1a:	shr    al,0x4
  426a1d:	cmp    r14b,0xa0
  426a21:	mov    ecx,0x57
  426a26:	mov    edi,0x30
  426a2b:	cmovb  ecx,edi
  426a2e:	add    cl,al
  426a30:	mov    rax,QWORD PTR [rsi]
  426a33:	lea    rdx,[rax+0x1]
  426a37:	mov    QWORD PTR [rsi],rdx
  426a3a:	mov    BYTE PTR [rax],cl
  426a3c:	and    r14b,0xf
  426a40:	cmp    r14b,0xa
  426a44:	mov    eax,0x57
  426a49:	cmovb  eax,edi
  426a4c:	add    al,r14b
  426a4f:	mov    rcx,QWORD PTR [rsi]
  426a52:	lea    rdx,[rcx+0x1]
  426a56:	mov    QWORD PTR [rsi],rdx
  426a59:	mov    BYTE PTR [rcx],al
  426a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  426a60:	inc    r12
  426a63:	dec    r8
  426a66:	mov    r13,r12
  426a69:	mov    r14b,BYTE PTR [r13+0x0]
  426a6d:	mov    r12,r13
  426a70:	cmp    r14b,0x20
  426a74:	jb     426a9b <flatcc_json_printer_string@@Base+0xeb>
  426a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a80:	cmp    r14b,0x22
  426a84:	je     426a9b <flatcc_json_printer_string@@Base+0xeb>
  426a86:	cmp    r14b,0x5c
  426a8a:	je     426a9b <flatcc_json_printer_string@@Base+0xeb>
  426a8c:	movzx  r14d,BYTE PTR [r12+0x1]
  426a92:	inc    r12
  426a95:	cmp    r14b,0x1f
  426a99:	ja     426a80 <flatcc_json_printer_string@@Base+0xd0>
  426a9b:	mov    rbx,r12
  426a9e:	sub    rbx,r13
  426aa1:	mov    rbp,QWORD PTR [r15+0x20]
  426aa5:	mov    rdi,QWORD PTR [r15+0x28]
  426aa9:	lea    rax,[rdi+rbx*1]
  426aad:	cmp    rax,rbp
  426ab0:	jae    426ad0 <flatcc_json_printer_string@@Base+0x120>
  426ab2:	mov    rsi,r13
  426ab5:	mov    rdx,rbx
  426ab8:	mov    rbp,r8
  426abb:	call   4060d0 <memcpy@plt>
  426ac0:	mov    rdx,rbx
  426ac3:	mov    rsi,QWORD PTR [rsp]
  426ac7:	mov    r8,rbp
  426aca:	jmp    426b47 <flatcc_json_printer_string@@Base+0x197>
  426acc:	nop    DWORD PTR [rax+0x0]
  426ad0:	cmp    rdi,rbp
  426ad3:	mov    QWORD PTR [rsp+0x10],r8
  426ad8:	jb     426aeb <flatcc_json_printer_string@@Base+0x13b>
  426ada:	mov    rdi,r15
  426add:	xor    esi,esi
  426adf:	call   QWORD PTR [r15+0x48]
  426ae3:	mov    rbp,QWORD PTR [r15+0x20]
  426ae7:	mov    rdi,QWORD PTR [r15+0x28]
  426aeb:	sub    rbp,rdi
  426aee:	cmp    rbp,rbx
  426af1:	mov    QWORD PTR [rsp+0x8],rbx
  426af6:	jae    426b2e <flatcc_json_printer_string@@Base+0x17e>
  426af8:	nop    DWORD PTR [rax+rax*1+0x0]
  426b00:	mov    rsi,r13
  426b03:	mov    rdx,rbp
  426b06:	call   4060d0 <memcpy@plt>
  426b0b:	add    QWORD PTR [r15+0x28],rbp
  426b0f:	add    r13,rbp
  426b12:	sub    rbx,rbp
  426b15:	mov    rdi,r15
  426b18:	xor    esi,esi
  426b1a:	call   QWORD PTR [r15+0x48]
  426b1e:	mov    rbp,QWORD PTR [r15+0x20]
  426b22:	mov    rdi,QWORD PTR [r15+0x28]
  426b26:	sub    rbp,rdi
  426b29:	cmp    rbx,rbp
  426b2c:	ja     426b00 <flatcc_json_printer_string@@Base+0x150>
  426b2e:	mov    rsi,r13
  426b31:	mov    rdx,rbx
  426b34:	call   4060d0 <memcpy@plt>
  426b39:	mov    r8,QWORD PTR [rsp+0x10]
  426b3e:	mov    rsi,QWORD PTR [rsp]
  426b42:	mov    rdx,QWORD PTR [rsp+0x8]
  426b47:	mov    rcx,QWORD PTR [rsi]
  426b4a:	lea    rax,[rcx+rbx*1]
  426b4e:	add    rcx,rbx
  426b51:	add    rcx,0x1
  426b55:	mov    QWORD PTR [rsi],rcx
  426b58:	sub    r8,rdx
  426b5b:	je     426c07 <flatcc_json_printer_string@@Base+0x257>
  426b61:	mov    BYTE PTR [rax],0x5c
  426b64:	lea    eax,[r14-0x8]
  426b68:	cmp    al,0x1a
  426b6a:	ja     426b91 <flatcc_json_printer_string@@Base+0x1e1>
  426b6c:	movzx  eax,al
  426b6f:	lea    rcx,[rip+0x11b2a]        # 4386a0 <flatcc_builder_padding_base@@Base+0x2c80>
  426b76:	movsxd rax,DWORD PTR [rcx+rax*4]
  426b7a:	add    rax,rcx
  426b7d:	jmp    rax
  426b7f:	mov    rax,QWORD PTR [rsi]
  426b82:	lea    rcx,[rax+0x1]
  426b86:	mov    QWORD PTR [rsi],rcx
  426b89:	mov    BYTE PTR [rax],0x62
  426b8c:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426b91:	cmp    r14b,0x5c
  426b95:	jne    4269f0 <flatcc_json_printer_string@@Base+0x40>
  426b9b:	mov    rax,QWORD PTR [rsi]
  426b9e:	lea    rcx,[rax+0x1]
  426ba2:	mov    QWORD PTR [rsi],rcx
  426ba5:	mov    BYTE PTR [rax],0x5c
  426ba8:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426bad:	mov    rax,QWORD PTR [rsi]
  426bb0:	lea    rcx,[rax+0x1]
  426bb4:	mov    QWORD PTR [rsi],rcx
  426bb7:	mov    BYTE PTR [rax],0x74
  426bba:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426bbf:	mov    rax,QWORD PTR [rsi]
  426bc2:	lea    rcx,[rax+0x1]
  426bc6:	mov    QWORD PTR [rsi],rcx
  426bc9:	mov    BYTE PTR [rax],0x6e
  426bcc:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426bd1:	mov    rax,QWORD PTR [rsi]
  426bd4:	lea    rcx,[rax+0x1]
  426bd8:	mov    QWORD PTR [rsi],rcx
  426bdb:	mov    BYTE PTR [rax],0x66
  426bde:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426be3:	mov    rax,QWORD PTR [rsi]
  426be6:	lea    rcx,[rax+0x1]
  426bea:	mov    QWORD PTR [rsi],rcx
  426bed:	mov    BYTE PTR [rax],0x72
  426bf0:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426bf5:	mov    rax,QWORD PTR [rsi]
  426bf8:	lea    rcx,[rax+0x1]
  426bfc:	mov    QWORD PTR [rsi],rcx
  426bff:	mov    BYTE PTR [rax],0x22
  426c02:	jmp    426a60 <flatcc_json_printer_string@@Base+0xb0>
  426c07:	mov    BYTE PTR [rax],0x22
  426c0a:	add    rsp,0x18
  426c0e:	pop    rbx
  426c0f:	pop    r12
  426c11:	pop    r13
  426c13:	pop    r14
  426c15:	pop    r15
  426c17:	pop    rbp
  426c18:	ret    
  426c19:	nop    DWORD PTR [rax+0x0]

0000000000426c20 <flatcc_json_printer_write@@Base>:
  426c20:	push   r15
  426c22:	push   r14
  426c24:	push   r12
  426c26:	push   rbx
  426c27:	push   rax
  426c28:	mov    r12,rsi
  426c2b:	mov    r14,rdi
  426c2e:	movsxd r15,edx
  426c31:	mov    rbx,QWORD PTR [rdi+0x20]
  426c35:	mov    rdi,QWORD PTR [rdi+0x28]
  426c39:	lea    rax,[rdi+r15*1]
  426c3d:	cmp    rax,rbx
  426c40:	jb     426c8e <flatcc_json_printer_write@@Base+0x6e>
  426c42:	cmp    rdi,rbx
  426c45:	jb     426c58 <flatcc_json_printer_write@@Base+0x38>
  426c47:	mov    rdi,r14
  426c4a:	xor    esi,esi
  426c4c:	call   QWORD PTR [r14+0x48]
  426c50:	mov    rbx,QWORD PTR [r14+0x20]
  426c54:	mov    rdi,QWORD PTR [r14+0x28]
  426c58:	sub    rbx,rdi
  426c5b:	cmp    rbx,r15
  426c5e:	jae    426c8e <flatcc_json_printer_write@@Base+0x6e>
  426c60:	mov    rsi,r12
  426c63:	mov    rdx,rbx
  426c66:	call   4060d0 <memcpy@plt>
  426c6b:	add    QWORD PTR [r14+0x28],rbx
  426c6f:	add    r12,rbx
  426c72:	sub    r15,rbx
  426c75:	mov    rdi,r14
  426c78:	xor    esi,esi
  426c7a:	call   QWORD PTR [r14+0x48]
  426c7e:	mov    rbx,QWORD PTR [r14+0x20]
  426c82:	mov    rdi,QWORD PTR [r14+0x28]
  426c86:	sub    rbx,rdi
  426c89:	cmp    r15,rbx
  426c8c:	ja     426c60 <flatcc_json_printer_write@@Base+0x40>
  426c8e:	mov    rsi,r12
  426c91:	mov    rdx,r15
  426c94:	call   4060d0 <memcpy@plt>
  426c99:	add    QWORD PTR [r14+0x28],r15
  426c9d:	add    rsp,0x8
  426ca1:	pop    rbx
  426ca2:	pop    r12
  426ca4:	pop    r14
  426ca6:	pop    r15
  426ca8:	ret    
  426ca9:	nop    DWORD PTR [rax+0x0]

0000000000426cb0 <flatcc_json_printer_nl@@Base>:
  426cb0:	mov    rax,QWORD PTR [rdi+0x28]
  426cb4:	lea    rcx,[rax+0x1]
  426cb8:	mov    QWORD PTR [rdi+0x28],rcx
  426cbc:	mov    BYTE PTR [rax],0xa
  426cbf:	mov    rax,QWORD PTR [rdi+0x28]
  426cc3:	cmp    rax,QWORD PTR [rdi+0x20]
  426cc7:	jae    426cca <flatcc_json_printer_nl@@Base+0x1a>
  426cc9:	ret    
  426cca:	mov    rax,QWORD PTR [rdi+0x48]
  426cce:	xor    esi,esi
  426cd0:	jmp    rax
  426cd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426cdc:	nop    DWORD PTR [rax+0x0]

0000000000426ce0 <flatcc_json_printer_char@@Base>:
  426ce0:	mov    rax,QWORD PTR [rdi+0x28]
  426ce4:	lea    rcx,[rax+0x1]
  426ce8:	mov    QWORD PTR [rdi+0x28],rcx
  426cec:	mov    BYTE PTR [rax],sil
  426cef:	ret    

0000000000426cf0 <flatcc_json_printer_indent@@Base>:
  426cf0:	push   r15
  426cf2:	push   r14
  426cf4:	push   rbx
  426cf5:	mov    r14,rdi
  426cf8:	movsxd rax,DWORD PTR [rdi+0x38]
  426cfc:	movzx  r15d,BYTE PTR [rdi+0x31]
  426d01:	imul   r15,rax
  426d05:	mov    rbx,QWORD PTR [rdi+0x20]
  426d09:	mov    rdi,QWORD PTR [rdi+0x28]
  426d0d:	lea    rax,[rdi+r15*1]
  426d11:	cmp    rax,rbx
  426d14:	jbe    426d6d <flatcc_json_printer_indent@@Base+0x7d>
  426d16:	cmp    rdi,rbx
  426d19:	jb     426d2c <flatcc_json_printer_indent@@Base+0x3c>
  426d1b:	mov    rdi,r14
  426d1e:	xor    esi,esi
  426d20:	call   QWORD PTR [r14+0x48]
  426d24:	mov    rbx,QWORD PTR [r14+0x20]
  426d28:	mov    rdi,QWORD PTR [r14+0x28]
  426d2c:	sub    rbx,rdi
  426d2f:	cmp    rbx,r15
  426d32:	jae    426d6d <flatcc_json_printer_indent@@Base+0x7d>
  426d34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d3e:	xchg   ax,ax
  426d40:	mov    esi,0x20
  426d45:	mov    rdx,rbx
  426d48:	call   406080 <memset@plt>
  426d4d:	add    QWORD PTR [r14+0x28],rbx
  426d51:	sub    r15,rbx
  426d54:	mov    rdi,r14
  426d57:	xor    esi,esi
  426d59:	call   QWORD PTR [r14+0x48]
  426d5d:	mov    rbx,QWORD PTR [r14+0x20]
  426d61:	mov    rdi,QWORD PTR [r14+0x28]
  426d65:	sub    rbx,rdi
  426d68:	cmp    r15,rbx
  426d6b:	ja     426d40 <flatcc_json_printer_indent@@Base+0x50>
  426d6d:	mov    esi,0x20
  426d72:	mov    rdx,r15
  426d75:	call   406080 <memset@plt>
  426d7a:	add    QWORD PTR [r14+0x28],r15
  426d7e:	pop    rbx
  426d7f:	pop    r14
  426d81:	pop    r15
  426d83:	ret    
  426d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d8e:	xchg   ax,ax

0000000000426d90 <flatcc_json_printer_add_level@@Base>:
  426d90:	add    DWORD PTR [rdi+0x38],esi
  426d93:	ret    
  426d94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d9e:	xchg   ax,ax

0000000000426da0 <flatcc_json_printer_get_level@@Base>:
  426da0:	mov    eax,DWORD PTR [rdi+0x38]
  426da3:	ret    
  426da4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426dae:	xchg   ax,ax

0000000000426db0 <flatcc_json_printer_uint8@@Base>:
  426db0:	mov    rax,QWORD PTR [rdi+0x28]
  426db4:	cmp    sil,0x64
  426db8:	jb     426df3 <flatcc_json_printer_uint8@@Base+0x43>
  426dba:	mov    BYTE PTR [rax+0x3],0x0
  426dbe:	movzx  ecx,sil
  426dc2:	lea    edx,[rcx+rcx*4]
  426dc5:	lea    ecx,[rcx+rdx*8]
  426dc8:	shr    ecx,0xc
  426dcb:	imul   edx,ecx,0x64
  426dce:	sub    sil,dl
  426dd1:	movzx  edx,sil
  426dd5:	lea    rsi,[rip+0x12414]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426ddc:	movzx  edx,WORD PTR [rsi+rdx*2]
  426de0:	mov    WORD PTR [rax+0x1],dx
  426de4:	or     cl,0x30
  426de7:	mov    BYTE PTR [rax],cl
  426de9:	mov    eax,0x3
  426dee:	add    QWORD PTR [rdi+0x28],rax
  426df2:	ret    
  426df3:	cmp    sil,0xa
  426df7:	jb     426e2c <flatcc_json_printer_uint8@@Base+0x7c>
  426df9:	mov    BYTE PTR [rax+0x2],0x0
  426dfd:	movzx  ecx,sil
  426e01:	lea    edx,[rcx+rcx*4]
  426e04:	lea    ecx,[rcx+rdx*8]
  426e07:	shr    ecx,0xc
  426e0a:	imul   ecx,ecx,0x64
  426e0d:	sub    sil,cl
  426e10:	movzx  ecx,sil
  426e14:	lea    rdx,[rip+0x123d5]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426e1b:	movzx  ecx,WORD PTR [rdx+rcx*2]
  426e1f:	mov    WORD PTR [rax],cx
  426e22:	mov    eax,0x2
  426e27:	add    QWORD PTR [rdi+0x28],rax
  426e2b:	ret    
  426e2c:	mov    BYTE PTR [rax+0x1],0x0
  426e30:	add    sil,0x30
  426e34:	mov    BYTE PTR [rax],sil
  426e37:	mov    eax,0x1
  426e3c:	add    QWORD PTR [rdi+0x28],rax
  426e40:	ret    
  426e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426e50 <flatcc_json_printer_uint16@@Base>:
  426e50:	mov    rdx,QWORD PTR [rdi+0x28]
  426e54:	cmp    esi,0x3e8
  426e5a:	jb     426e6f <flatcc_json_printer_uint16@@Base+0x1f>
  426e5c:	movzx  ecx,si
  426e5f:	xor    eax,eax
  426e61:	cmp    ecx,0x270f
  426e67:	seta   al
  426e6a:	or     eax,0x4
  426e6d:	jmp    426e95 <flatcc_json_printer_uint16@@Base+0x45>
  426e6f:	cmp    si,0x64
  426e73:	jb     426e8a <flatcc_json_printer_uint16@@Base+0x3a>
  426e75:	mov    BYTE PTR [rdx+0x3],0x0
  426e79:	add    rdx,0x3
  426e7d:	mov    eax,0x3
  426e82:	mov    r8,rdx
  426e85:	jmp    426f4a <flatcc_json_printer_uint16@@Base+0xfa>
  426e8a:	xor    eax,eax
  426e8c:	cmp    si,0x9
  426e90:	seta   al
  426e93:	inc    eax
  426e95:	mov    ecx,eax
  426e97:	lea    r8,[rdx+rcx*1]
  426e9b:	mov    BYTE PTR [rdx+rcx*1],0x0
  426e9f:	test   al,0x1
  426ea1:	jne    426f09 <flatcc_json_printer_uint16@@Base+0xb9>
  426ea3:	cmp    eax,0x2
  426ea6:	je     426ede <flatcc_json_printer_uint16@@Base+0x8e>
  426ea8:	cmp    eax,0x4
  426eab:	jne    426f7f <flatcc_json_printer_uint16@@Base+0x12f>
  426eb1:	movzx  ecx,si
  426eb4:	mov    edx,ecx
  426eb6:	shr    edx,0x2
  426eb9:	imul   esi,edx,0x147b
  426ebf:	shr    esi,0x11
  426ec2:	imul   edx,esi,0x64
  426ec5:	sub    ecx,edx
  426ec7:	movzx  ecx,cx
  426eca:	lea    rdx,[rip+0x1231f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426ed1:	movzx  ecx,WORD PTR [rdx+rcx*2]
  426ed5:	mov    WORD PTR [r8-0x2],cx
  426eda:	add    r8,0xfffffffffffffffe
  426ede:	movzx  ecx,si
  426ee1:	mov    edx,ecx
  426ee3:	shr    edx,0x2
  426ee6:	imul   edx,edx,0x147b
  426eec:	shr    edx,0x11
  426eef:	imul   edx,edx,0x64
  426ef2:	sub    ecx,edx
  426ef4:	movzx  ecx,cx
  426ef7:	lea    rdx,[rip+0x122f2]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426efe:	movzx  ecx,WORD PTR [rdx+rcx*2]
  426f02:	mov    WORD PTR [r8-0x2],cx
  426f07:	jmp    426f7f <flatcc_json_printer_uint16@@Base+0x12f>
  426f09:	cmp    eax,0x1
  426f0c:	je     426f77 <flatcc_json_printer_uint16@@Base+0x127>
  426f0e:	cmp    eax,0x3
  426f11:	je     426f4a <flatcc_json_printer_uint16@@Base+0xfa>
  426f13:	cmp    eax,0x5
  426f16:	jne    426f7f <flatcc_json_printer_uint16@@Base+0x12f>
  426f18:	movzx  eax,si
  426f1b:	mov    ecx,eax
  426f1d:	shr    ecx,0x2
  426f20:	imul   esi,ecx,0x147b
  426f26:	shr    esi,0x11
  426f29:	imul   ecx,esi,0x64
  426f2c:	sub    eax,ecx
  426f2e:	movzx  eax,ax
  426f31:	lea    rcx,[rip+0x122b8]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426f38:	movzx  eax,WORD PTR [rcx+rax*2]
  426f3c:	mov    WORD PTR [r8-0x2],ax
  426f41:	add    r8,0xfffffffffffffffe
  426f45:	mov    eax,0x5
  426f4a:	movzx  ecx,si
  426f4d:	mov    edx,ecx
  426f4f:	shr    edx,0x2
  426f52:	imul   esi,edx,0x147b
  426f58:	shr    esi,0x11
  426f5b:	imul   edx,esi,0x64
  426f5e:	sub    ecx,edx
  426f60:	movzx  ecx,cx
  426f63:	lea    rdx,[rip+0x12286]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426f6a:	movzx  ecx,WORD PTR [rdx+rcx*2]
  426f6e:	mov    WORD PTR [r8-0x2],cx
  426f73:	add    r8,0xfffffffffffffffe
  426f77:	add    sil,0x30
  426f7b:	mov    BYTE PTR [r8-0x1],sil
  426f7f:	mov    eax,eax
  426f81:	add    QWORD PTR [rdi+0x28],rax
  426f85:	ret    
  426f86:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000426f90 <flatcc_json_printer_uint32@@Base>:
  426f90:	push   rbx
  426f91:	mov    eax,esi
  426f93:	mov    rbx,rdi
  426f96:	mov    rsi,QWORD PTR [rdi+0x28]
  426f9a:	mov    edi,eax
  426f9c:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  426fa1:	cdqe   
  426fa3:	add    QWORD PTR [rbx+0x28],rax
  426fa7:	pop    rbx
  426fa8:	ret    
  426fa9:	nop    DWORD PTR [rax+0x0]
  426fb0:	cmp    edi,0x2710
  426fb6:	jb     426ff9 <flatcc_json_printer_uint32@@Base+0x69>
  426fb8:	cmp    edi,0x989680
  426fbe:	jb     42700e <flatcc_json_printer_uint32@@Base+0x7e>
  426fc0:	cmp    edi,0x3b9aca00
  426fc6:	jb     427035 <flatcc_json_printer_uint32@@Base+0xa5>
  426fc8:	mov    BYTE PTR [rsi+0xa],0x0
  426fcc:	mov    eax,edi
  426fce:	imul   rcx,rax,0x51eb851f
  426fd5:	shr    rcx,0x25
  426fd9:	imul   eax,ecx,0x64
  426fdc:	sub    edi,eax
  426fde:	lea    rax,[rip+0x1220b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  426fe5:	movzx  eax,WORD PTR [rax+rdi*2]
  426fe9:	mov    WORD PTR [rsi+0x8],ax
  426fed:	mov    eax,0xa
  426ff2:	mov    edi,ecx
  426ff4:	jmp    427081 <flatcc_json_printer_uint32@@Base+0xf1>
  426ff9:	xor    eax,eax
  426ffb:	cmp    edi,0x64
  426ffe:	jb     42702b <flatcc_json_printer_uint32@@Base+0x9b>
  427000:	cmp    edi,0x3e7
  427006:	seta   al
  427009:	add    eax,0x3
  42700c:	jmp    427053 <flatcc_json_printer_uint32@@Base+0xc3>
  42700e:	cmp    edi,0xf4240
  427014:	jb     427045 <flatcc_json_printer_uint32@@Base+0xb5>
  427016:	mov    BYTE PTR [rsi+0x7],0x0
  42701a:	add    rsi,0x7
  42701e:	mov    eax,0x7
  427023:	mov    r8,rsi
  427026:	jmp    42716b <flatcc_json_printer_uint32@@Base+0x1db>
  42702b:	cmp    edi,0x9
  42702e:	seta   al
  427031:	inc    eax
  427033:	jmp    427053 <flatcc_json_printer_uint32@@Base+0xc3>
  427035:	xor    eax,eax
  427037:	cmp    edi,0x5f5e0ff
  42703d:	seta   al
  427040:	or     eax,0x8
  427043:	jmp    427053 <flatcc_json_printer_uint32@@Base+0xc3>
  427045:	xor    eax,eax
  427047:	cmp    edi,0x1869f
  42704d:	seta   al
  427050:	add    eax,0x5
  427053:	mov    edx,eax
  427055:	lea    r8,[rsi+rdx*1]
  427059:	mov    BYTE PTR [rsi+rdx*1],0x0
  42705d:	test   al,0x1
  42705f:	jne    427122 <flatcc_json_printer_uint32@@Base+0x192>
  427065:	lea    ecx,[rax-0x2]
  427068:	cmp    ecx,0x6
  42706b:	ja     4271eb <flatcc_json_printer_uint32@@Base+0x25b>
  427071:	lea    r9,[rip+0x116b8]        # 438730 <flatcc_builder_padding_base@@Base+0x2d10>
  427078:	movsxd rcx,DWORD PTR [r9+rcx*4]
  42707c:	add    rcx,r9
  42707f:	jmp    rcx
  427081:	mov    ecx,edi
  427083:	imul   rcx,rcx,0x51eb851f
  42708a:	shr    rcx,0x25
  42708e:	imul   edx,ecx,0x64
  427091:	sub    edi,edx
  427093:	lea    rdx,[rip+0x12156]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42709a:	movzx  edx,WORD PTR [rdx+rdi*2]
  42709e:	mov    WORD PTR [rsi+0x6],dx
  4270a2:	mov    edx,0x6
  4270a7:	mov    edi,ecx
  4270a9:	lea    r8,[rsi+rdx*1]
  4270ad:	add    r8,0xfffffffffffffffe
  4270b1:	mov    ecx,edi
  4270b3:	imul   r9,rcx,0x51eb851f
  4270ba:	shr    r9,0x25
  4270be:	imul   ecx,r9d,0x64
  4270c2:	sub    edi,ecx
  4270c4:	lea    rcx,[rip+0x12125]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4270cb:	movzx  ecx,WORD PTR [rcx+rdi*2]
  4270cf:	mov    WORD PTR [rsi+rdx*1-0x2],cx
  4270d4:	mov    edi,r9d
  4270d7:	mov    ecx,edi
  4270d9:	imul   rcx,rcx,0x51eb851f
  4270e0:	shr    rcx,0x25
  4270e4:	imul   edx,ecx,0x64
  4270e7:	sub    edi,edx
  4270e9:	lea    rdx,[rip+0x12100]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4270f0:	movzx  edx,WORD PTR [rdx+rdi*2]
  4270f4:	mov    WORD PTR [r8-0x2],dx
  4270f9:	add    r8,0xfffffffffffffffe
  4270fd:	mov    edi,ecx
  4270ff:	mov    ecx,edi
  427101:	imul   rcx,rcx,0x51eb851f
  427108:	shr    rcx,0x25
  42710c:	imul   ecx,ecx,0x64
  42710f:	sub    edi,ecx
  427111:	lea    rcx,[rip+0x120d8]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427118:	movzx  ecx,WORD PTR [rcx+rdi*2]
  42711c:	mov    WORD PTR [r8-0x2],cx
  427121:	ret    
  427122:	lea    edx,[rax-0x1]
  427125:	cmp    edx,0x8
  427128:	ja     4271eb <flatcc_json_printer_uint32@@Base+0x25b>
  42712e:	lea    rcx,[rip+0x115d7]        # 43870c <flatcc_builder_padding_base@@Base+0x2cec>
  427135:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  427139:	add    rdx,rcx
  42713c:	jmp    rdx
  42713e:	mov    eax,edi
  427140:	imul   rcx,rax,0x51eb851f
  427147:	shr    rcx,0x25
  42714b:	imul   eax,ecx,0x64
  42714e:	sub    edi,eax
  427150:	lea    rax,[rip+0x12099]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427157:	movzx  eax,WORD PTR [rax+rdi*2]
  42715b:	mov    WORD PTR [r8-0x2],ax
  427160:	add    r8,0xfffffffffffffffe
  427164:	mov    eax,0x9
  427169:	mov    edi,ecx
  42716b:	mov    ecx,edi
  42716d:	imul   rcx,rcx,0x51eb851f
  427174:	shr    rcx,0x25
  427178:	imul   edx,ecx,0x64
  42717b:	sub    edi,edx
  42717d:	lea    rdx,[rip+0x1206c]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427184:	movzx  edx,WORD PTR [rdx+rdi*2]
  427188:	mov    WORD PTR [r8-0x2],dx
  42718d:	add    r8,0xfffffffffffffffe
  427191:	mov    edi,ecx
  427193:	mov    ecx,edi
  427195:	imul   rcx,rcx,0x51eb851f
  42719c:	shr    rcx,0x25
  4271a0:	imul   edx,ecx,0x64
  4271a3:	sub    edi,edx
  4271a5:	lea    rdx,[rip+0x12044]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4271ac:	movzx  edx,WORD PTR [rdx+rdi*2]
  4271b0:	mov    WORD PTR [r8-0x2],dx
  4271b5:	add    r8,0xfffffffffffffffe
  4271b9:	mov    edi,ecx
  4271bb:	mov    ecx,edi
  4271bd:	imul   rcx,rcx,0x51eb851f
  4271c4:	shr    rcx,0x25
  4271c8:	imul   edx,ecx,0x64
  4271cb:	sub    edi,edx
  4271cd:	lea    rdx,[rip+0x1201c]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4271d4:	movzx  edx,WORD PTR [rdx+rdi*2]
  4271d8:	mov    WORD PTR [r8-0x2],dx
  4271dd:	add    r8,0xfffffffffffffffe
  4271e1:	mov    edi,ecx
  4271e3:	add    dil,0x30
  4271e7:	mov    BYTE PTR [r8-0x1],dil
  4271eb:	ret    
  4271ec:	nop    DWORD PTR [rax+0x0]

00000000004271f0 <flatcc_json_printer_uint64@@Base>:
  4271f0:	push   rbx
  4271f1:	mov    rax,rsi
  4271f4:	mov    rbx,rdi
  4271f7:	mov    rsi,QWORD PTR [rdi+0x28]
  4271fb:	mov    rdi,rax
  4271fe:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  427203:	cdqe   
  427205:	add    QWORD PTR [rbx+0x28],rax
  427209:	pop    rbx
  42720a:	ret    
  42720b:	nop    DWORD PTR [rax+rax*1+0x0]
  427210:	cmp    rdi,0x3b9ac9ff
  427217:	ja     42721e <flatcc_json_printer_uint64@@Base+0x2e>
  427219:	jmp    426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  42721e:	mov    rax,rdi
  427221:	shr    rax,0xd
  427225:	movabs r8,0x28f5c28f5c28f5c3
  42722f:	cmp    rax,0x48c27395
  427235:	jb     427276 <flatcc_json_printer_uint64@@Base+0x86>
  427237:	movabs rax,0x2386f26fc10000
  427241:	cmp    rdi,rax
  427244:	jb     42729f <flatcc_json_printer_uint64@@Base+0xaf>
  427246:	movabs rax,0xde0b6b3a7640000
  427250:	cmp    rdi,rax
  427253:	jb     4272de <flatcc_json_printer_uint64@@Base+0xee>
  427259:	movabs rax,0x8ac7230489e7ffff
  427263:	xor    r9d,r9d
  427266:	cmp    rdi,rax
  427269:	seta   r9b
  42726d:	add    r9d,0x13
  427271:	jmp    427310 <flatcc_json_printer_uint64@@Base+0x120>
  427276:	mov    rax,rdi
  427279:	shr    rax,0xb
  42727d:	cmp    rax,0x2e90edd
  427283:	jb     4272c4 <flatcc_json_printer_uint64@@Base+0xd4>
  427285:	mov    rax,rdi
  427288:	shr    rax,0xc
  42728c:	xor    r9d,r9d
  42728f:	cmp    rax,0xe8d4a50
  427295:	seta   r9b
  427299:	or     r9d,0xc
  42729d:	jmp    427310 <flatcc_json_printer_uint64@@Base+0x120>
  42729f:	movabs rax,0x38d7ea4c68000
  4272a9:	cmp    rdi,rax
  4272ac:	jb     4272f8 <flatcc_json_printer_uint64@@Base+0x108>
  4272ae:	mov    BYTE PTR [rsi+0x10],0x0
  4272b2:	add    rsi,0x10
  4272b6:	mov    r9d,0x10
  4272bc:	mov    r11,rsi
  4272bf:	jmp    42739a <flatcc_json_printer_uint64@@Base+0x1aa>
  4272c4:	mov    rax,rdi
  4272c7:	shr    rax,0xa
  4272cb:	xor    r9d,r9d
  4272ce:	cmp    rax,0x9502f8
  4272d4:	seta   r9b
  4272d8:	or     r9d,0xa
  4272dc:	jmp    427310 <flatcc_json_printer_uint64@@Base+0x120>
  4272de:	movabs rax,0x16345785d89ffff
  4272e8:	xor    r9d,r9d
  4272eb:	cmp    rdi,rax
  4272ee:	seta   r9b
  4272f2:	add    r9d,0x11
  4272f6:	jmp    427310 <flatcc_json_printer_uint64@@Base+0x120>
  4272f8:	movabs rax,0x5af3107a3fff
  427302:	xor    r9d,r9d
  427305:	cmp    rdi,rax
  427308:	seta   r9b
  42730c:	or     r9d,0xe
  427310:	mov    eax,r9d
  427313:	lea    r11,[rsi+rax*1]
  427317:	mov    BYTE PTR [rsi+rax*1],0x0
  42731b:	test   r9b,0x1
  42731f:	jne    42744f <flatcc_json_printer_uint64@@Base+0x25f>
  427325:	lea    eax,[r9-0xa]
  427329:	cmp    eax,0xa
  42732c:	ja     42758a <flatcc_json_printer_uint64@@Base+0x39a>
  427332:	lea    rdx,[rip+0x11437]        # 438770 <flatcc_builder_padding_base@@Base+0x2d50>
  427339:	movsxd rax,DWORD PTR [rdx+rax*4]
  42733d:	add    rax,rdx
  427340:	jmp    rax
  427342:	lea    rsi,[rip+0x11ea7]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427349:	mov    rax,rdi
  42734c:	shr    rax,0x2
  427350:	mul    r8
  427353:	shr    rdx,0x2
  427357:	imul   rax,rdx,0x64
  42735b:	sub    rdi,rax
  42735e:	movzx  eax,WORD PTR [rsi+rdi*2]
  427362:	mov    WORD PTR [r11-0x2],ax
  427367:	add    r11,0xfffffffffffffffe
  42736b:	mov    rdi,rdx
  42736e:	lea    rsi,[rip+0x11e7b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427375:	mov    rax,rdi
  427378:	shr    rax,0x2
  42737c:	mul    r8
  42737f:	shr    rdx,0x2
  427383:	imul   rax,rdx,0x64
  427387:	sub    rdi,rax
  42738a:	movzx  eax,WORD PTR [rsi+rdi*2]
  42738e:	mov    WORD PTR [r11-0x2],ax
  427393:	add    r11,0xfffffffffffffffe
  427397:	mov    rdi,rdx
  42739a:	lea    rsi,[rip+0x11e4f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4273a1:	mov    rax,rdi
  4273a4:	shr    rax,0x2
  4273a8:	mul    r8
  4273ab:	shr    rdx,0x2
  4273af:	imul   rax,rdx,0x64
  4273b3:	sub    rdi,rax
  4273b6:	movzx  eax,WORD PTR [rsi+rdi*2]
  4273ba:	mov    WORD PTR [r11-0x2],ax
  4273bf:	add    r11,0xfffffffffffffffe
  4273c3:	mov    rdi,rdx
  4273c6:	lea    rsi,[rip+0x11e23]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4273cd:	mov    rax,rdi
  4273d0:	shr    rax,0x2
  4273d4:	mul    r8
  4273d7:	shr    rdx,0x2
  4273db:	imul   rax,rdx,0x64
  4273df:	sub    rdi,rax
  4273e2:	movzx  eax,WORD PTR [rsi+rdi*2]
  4273e6:	mov    WORD PTR [r11-0x2],ax
  4273eb:	add    r11,0xfffffffffffffffe
  4273ef:	mov    rdi,rdx
  4273f2:	lea    rsi,[rip+0x11df7]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4273f9:	mov    rax,rdi
  4273fc:	shr    rax,0x2
  427400:	mul    r8
  427403:	shr    rdx,0x2
  427407:	imul   rax,rdx,0x64
  42740b:	sub    rdi,rax
  42740e:	movzx  eax,WORD PTR [rsi+rdi*2]
  427412:	mov    WORD PTR [r11-0x2],ax
  427417:	add    r11,0xfffffffffffffffe
  42741b:	mov    rdi,rdx
  42741e:	lea    rsi,[rip+0x11dcb]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427425:	mov    rax,rdi
  427428:	shr    rax,0x2
  42742c:	mul    r8
  42742f:	shr    rdx,0x2
  427433:	imul   rax,rdx,0x64
  427437:	sub    rdi,rax
  42743a:	movzx  eax,WORD PTR [rsi+rdi*2]
  42743e:	mov    WORD PTR [r11-0x2],ax
  427443:	add    r11,0xfffffffffffffffe
  427447:	mov    rdi,rdx
  42744a:	jmp    42758a <flatcc_json_printer_uint64@@Base+0x39a>
  42744f:	lea    eax,[r9-0xb]
  427453:	cmp    eax,0x8
  427456:	ja     42758a <flatcc_json_printer_uint64@@Base+0x39a>
  42745c:	lea    rdx,[rip+0x112e9]        # 43874c <flatcc_builder_padding_base@@Base+0x2d2c>
  427463:	movsxd rax,DWORD PTR [rdx+rax*4]
  427467:	add    rax,rdx
  42746a:	jmp    rax
  42746c:	lea    rsi,[rip+0x11d7d]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427473:	mov    rax,rdi
  427476:	shr    rax,0x2
  42747a:	mul    r8
  42747d:	shr    rdx,0x2
  427481:	imul   rax,rdx,0x64
  427485:	sub    rdi,rax
  427488:	movzx  eax,WORD PTR [rsi+rdi*2]
  42748c:	mov    WORD PTR [r11-0x2],ax
  427491:	add    r11,0xfffffffffffffffe
  427495:	mov    rdi,rdx
  427498:	lea    rsi,[rip+0x11d51]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42749f:	mov    rax,rdi
  4274a2:	shr    rax,0x2
  4274a6:	mul    r8
  4274a9:	shr    rdx,0x2
  4274ad:	imul   rax,rdx,0x64
  4274b1:	sub    rdi,rax
  4274b4:	movzx  eax,WORD PTR [rsi+rdi*2]
  4274b8:	mov    WORD PTR [r11-0x2],ax
  4274bd:	add    r11,0xfffffffffffffffe
  4274c1:	mov    rdi,rdx
  4274c4:	lea    rsi,[rip+0x11d25]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4274cb:	mov    rax,rdi
  4274ce:	shr    rax,0x2
  4274d2:	mul    r8
  4274d5:	shr    rdx,0x2
  4274d9:	imul   rax,rdx,0x64
  4274dd:	sub    rdi,rax
  4274e0:	movzx  eax,WORD PTR [rsi+rdi*2]
  4274e4:	mov    WORD PTR [r11-0x2],ax
  4274e9:	add    r11,0xfffffffffffffffe
  4274ed:	mov    rdi,rdx
  4274f0:	lea    rsi,[rip+0x11cf9]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4274f7:	mov    rax,rdi
  4274fa:	shr    rax,0x2
  4274fe:	mul    r8
  427501:	shr    rdx,0x2
  427505:	imul   rax,rdx,0x64
  427509:	sub    rdi,rax
  42750c:	movzx  eax,WORD PTR [rsi+rdi*2]
  427510:	mov    WORD PTR [r11-0x2],ax
  427515:	add    r11,0xfffffffffffffffe
  427519:	mov    rdi,rdx
  42751c:	lea    r10,[rip+0x11ccd]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427523:	mov    rax,rdi
  427526:	shr    rax,0x2
  42752a:	mul    r8
  42752d:	mov    rsi,rdx
  427530:	shr    rsi,0x2
  427534:	imul   rax,rsi,0x64
  427538:	mov    rdx,rdi
  42753b:	sub    rdx,rax
  42753e:	movzx  eax,WORD PTR [r10+rdx*2]
  427543:	mov    WORD PTR [r11-0x2],ax
  427548:	movabs rdx,0xcccccccccccccccd
  427552:	mov    rax,rsi
  427555:	mul    rdx
  427558:	shr    edx,0x2
  42755b:	and    edx,0xfffffffe
  42755e:	lea    eax,[rdx+rdx*4]
  427561:	sub    esi,eax
  427563:	or     sil,0x30
  427567:	mov    BYTE PTR [r11-0x3],sil
  42756b:	add    r11,0xfffffffffffffffd
  42756f:	shr    rdi,0x3
  427573:	movabs rdx,0x20c49ba5e353f7cf
  42757d:	mov    rax,rdi
  427580:	mul    rdx
  427583:	mov    rdi,rdx
  427586:	shr    rdi,0x4
  42758a:	lea    r10,[rip+0x11c5f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427591:	mov    rax,rdi
  427594:	shr    rax,0x2
  427598:	mul    r8
  42759b:	mov    rax,rdx
  42759e:	mov    rsi,rdx
  4275a1:	shr    rsi,0x2
  4275a5:	imul   rdx,rsi,0x64
  4275a9:	mov    rcx,rdi
  4275ac:	sub    rcx,rdx
  4275af:	movzx  ecx,WORD PTR [r10+rcx*2]
  4275b4:	shr    rax,0x4
  4275b8:	mul    r8
  4275bb:	mov    WORD PTR [r11-0x2],cx
  4275c0:	shr    rdx,0x2
  4275c4:	imul   rcx,rdx,0x64
  4275c8:	movabs rdx,0x346dc5d63886594b
  4275d2:	mov    rax,rdi
  4275d5:	mul    rdx
  4275d8:	mov    rax,rdx
  4275db:	sub    rsi,rcx
  4275de:	mov    rcx,rdx
  4275e1:	shr    rcx,0xb
  4275e5:	movzx  esi,WORD PTR [r10+rsi*2]
  4275ea:	shr    rax,0xd
  4275ee:	mul    r8
  4275f1:	mov    WORD PTR [r11-0x4],si
  4275f6:	shr    rdx,0x2
  4275fa:	imul   rsi,rdx,0x64
  4275fe:	movabs rdx,0x431bde82d7b634db
  427608:	mov    rax,rdi
  42760b:	mul    rdx
  42760e:	mov    rax,rdx
  427611:	sub    rcx,rsi
  427614:	mov    rsi,rdx
  427617:	shr    rsi,0x12
  42761b:	movzx  ecx,WORD PTR [r10+rcx*2]
  427620:	shr    rax,0x14
  427624:	mul    r8
  427627:	mov    WORD PTR [r11-0x6],cx
  42762c:	shr    rdx,0x2
  427630:	imul   rax,rdx,0x64
  427634:	sub    rsi,rax
  427637:	movzx  eax,WORD PTR [r10+rsi*2]
  42763c:	mov    WORD PTR [r11-0x8],ax
  427641:	mov    eax,r9d
  427644:	ret    
  427645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42764f:	nop

0000000000427650 <flatcc_json_printer_int8@@Base>:
  427650:	mov    rcx,QWORD PTR [rdi+0x28]
  427654:	mov    eax,esi
  427656:	shr    al,0x7
  427659:	movzx  r8d,al
  42765d:	test   sil,sil
  427660:	js     42769d <flatcc_json_printer_int8@@Base+0x4d>
  427662:	cmp    sil,0x64
  427666:	jb     4276ac <flatcc_json_printer_int8@@Base+0x5c>
  427668:	mov    BYTE PTR [rcx+0x3],0x0
  42766c:	movzx  edx,sil
  427670:	lea    eax,[rdx+rdx*4]
  427673:	lea    eax,[rdx+rax*8]
  427676:	shr    eax,0xc
  427679:	imul   edx,eax,0x64
  42767c:	sub    sil,dl
  42767f:	movzx  edx,sil
  427683:	lea    rsi,[rip+0x11b66]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42768a:	movzx  edx,WORD PTR [rsi+rdx*2]
  42768e:	mov    WORD PTR [rcx+0x1],dx
  427692:	or     al,0x30
  427694:	mov    BYTE PTR [rcx],al
  427696:	mov    ecx,0x3
  42769b:	jmp    4276f2 <flatcc_json_printer_int8@@Base+0xa2>
  42769d:	mov    BYTE PTR [rcx],0x2d
  4276a0:	inc    rcx
  4276a3:	neg    sil
  4276a6:	cmp    sil,0x64
  4276aa:	jae    427668 <flatcc_json_printer_int8@@Base+0x18>
  4276ac:	cmp    sil,0xa
  4276b0:	jb     4276e2 <flatcc_json_printer_int8@@Base+0x92>
  4276b2:	mov    BYTE PTR [rcx+0x2],0x0
  4276b6:	movzx  eax,sil
  4276ba:	lea    edx,[rax+rax*4]
  4276bd:	lea    eax,[rax+rdx*8]
  4276c0:	shr    eax,0xc
  4276c3:	imul   eax,eax,0x64
  4276c6:	sub    sil,al
  4276c9:	movzx  eax,sil
  4276cd:	lea    rdx,[rip+0x11b1c]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4276d4:	movzx  eax,WORD PTR [rdx+rax*2]
  4276d8:	mov    WORD PTR [rcx],ax
  4276db:	mov    ecx,0x2
  4276e0:	jmp    4276f2 <flatcc_json_printer_int8@@Base+0xa2>
  4276e2:	mov    BYTE PTR [rcx+0x1],0x0
  4276e6:	add    sil,0x30
  4276ea:	mov    BYTE PTR [rcx],sil
  4276ed:	mov    ecx,0x1
  4276f2:	add    rcx,r8
  4276f5:	add    QWORD PTR [rdi+0x28],rcx
  4276f9:	ret    
  4276fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427700 <flatcc_json_printer_int16@@Base>:
  427700:	movzx  r8d,si
  427704:	mov    rdx,QWORD PTR [rdi+0x28]
  427708:	test   r8w,r8w
  42770c:	jns    427716 <flatcc_json_printer_int16@@Base+0x16>
  42770e:	mov    BYTE PTR [rdx],0x2d
  427711:	inc    rdx
  427714:	neg    esi
  427716:	shr    r8d,0xf
  42771a:	movzx  r10d,si
  42771e:	cmp    r10d,0x3e8
  427725:	jb     427738 <flatcc_json_printer_int16@@Base+0x38>
  427727:	xor    ecx,ecx
  427729:	cmp    r10d,0x270f
  427730:	seta   cl
  427733:	or     ecx,0x4
  427736:	jmp    42775e <flatcc_json_printer_int16@@Base+0x5e>
  427738:	cmp    si,0x64
  42773c:	jb     427753 <flatcc_json_printer_int16@@Base+0x53>
  42773e:	mov    BYTE PTR [rdx+0x3],0x0
  427742:	add    rdx,0x3
  427746:	mov    ecx,0x3
  42774b:	mov    r9,rdx
  42774e:	jmp    427814 <flatcc_json_printer_int16@@Base+0x114>
  427753:	xor    ecx,ecx
  427755:	cmp    si,0x9
  427759:	seta   cl
  42775c:	inc    ecx
  42775e:	mov    eax,ecx
  427760:	lea    r9,[rdx+rax*1]
  427764:	mov    BYTE PTR [rdx+rax*1],0x0
  427768:	test   cl,0x1
  42776b:	jne    4277d3 <flatcc_json_printer_int16@@Base+0xd3>
  42776d:	cmp    ecx,0x2
  427770:	je     4277a8 <flatcc_json_printer_int16@@Base+0xa8>
  427772:	cmp    ecx,0x4
  427775:	jne    427849 <flatcc_json_printer_int16@@Base+0x149>
  42777b:	mov    eax,r10d
  42777e:	shr    eax,0x2
  427781:	imul   esi,eax,0x147b
  427787:	shr    esi,0x11
  42778a:	imul   eax,esi,0x64
  42778d:	sub    r10d,eax
  427790:	movzx  eax,r10w
  427794:	lea    rdx,[rip+0x11a55]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42779b:	movzx  eax,WORD PTR [rdx+rax*2]
  42779f:	mov    WORD PTR [r9-0x2],ax
  4277a4:	add    r9,0xfffffffffffffffe
  4277a8:	movzx  eax,si
  4277ab:	mov    edx,eax
  4277ad:	shr    edx,0x2
  4277b0:	imul   edx,edx,0x147b
  4277b6:	shr    edx,0x11
  4277b9:	imul   edx,edx,0x64
  4277bc:	sub    eax,edx
  4277be:	movzx  eax,ax
  4277c1:	lea    rdx,[rip+0x11a28]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4277c8:	movzx  eax,WORD PTR [rdx+rax*2]
  4277cc:	mov    WORD PTR [r9-0x2],ax
  4277d1:	jmp    427849 <flatcc_json_printer_int16@@Base+0x149>
  4277d3:	cmp    ecx,0x1
  4277d6:	je     427841 <flatcc_json_printer_int16@@Base+0x141>
  4277d8:	cmp    ecx,0x3
  4277db:	je     427814 <flatcc_json_printer_int16@@Base+0x114>
  4277dd:	cmp    ecx,0x5
  4277e0:	jne    427849 <flatcc_json_printer_int16@@Base+0x149>
  4277e2:	mov    eax,r10d
  4277e5:	shr    eax,0x2
  4277e8:	imul   esi,eax,0x147b
  4277ee:	shr    esi,0x11
  4277f1:	imul   eax,esi,0x64
  4277f4:	sub    r10d,eax
  4277f7:	movzx  eax,r10w
  4277fb:	lea    rcx,[rip+0x119ee]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427802:	movzx  eax,WORD PTR [rcx+rax*2]
  427806:	mov    WORD PTR [r9-0x2],ax
  42780b:	add    r9,0xfffffffffffffffe
  42780f:	mov    ecx,0x5
  427814:	movzx  eax,si
  427817:	mov    edx,eax
  427819:	shr    edx,0x2
  42781c:	imul   esi,edx,0x147b
  427822:	shr    esi,0x11
  427825:	imul   edx,esi,0x64
  427828:	sub    eax,edx
  42782a:	movzx  eax,ax
  42782d:	lea    rdx,[rip+0x119bc]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427834:	movzx  eax,WORD PTR [rdx+rax*2]
  427838:	mov    WORD PTR [r9-0x2],ax
  42783d:	add    r9,0xfffffffffffffffe
  427841:	add    sil,0x30
  427845:	mov    BYTE PTR [r9-0x1],sil
  427849:	add    ecx,r8d
  42784c:	add    QWORD PTR [rdi+0x28],rcx
  427850:	ret    
  427851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42785b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427860 <flatcc_json_printer_int32@@Base>:
  427860:	push   rbp
  427861:	push   rbx
  427862:	push   rax
  427863:	mov    eax,esi
  427865:	mov    rbx,rdi
  427868:	mov    rsi,QWORD PTR [rdi+0x28]
  42786c:	mov    ebp,eax
  42786e:	shr    ebp,0x1f
  427871:	test   eax,eax
  427873:	jns    42787d <flatcc_json_printer_int32@@Base+0x1d>
  427875:	mov    BYTE PTR [rsi],0x2d
  427878:	inc    rsi
  42787b:	neg    eax
  42787d:	mov    edi,eax
  42787f:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  427884:	add    eax,ebp
  427886:	cdqe   
  427888:	add    QWORD PTR [rbx+0x28],rax
  42788c:	add    rsp,0x8
  427890:	pop    rbx
  427891:	pop    rbp
  427892:	ret    
  427893:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42789d:	nop    DWORD PTR [rax]

00000000004278a0 <flatcc_json_printer_int64@@Base>:
  4278a0:	push   r14
  4278a2:	push   rbx
  4278a3:	push   rax
  4278a4:	mov    rax,rsi
  4278a7:	mov    r14,rdi
  4278aa:	mov    rsi,QWORD PTR [rdi+0x28]
  4278ae:	mov    rbx,rax
  4278b1:	shr    rbx,0x3f
  4278b5:	test   rax,rax
  4278b8:	jns    4278c3 <flatcc_json_printer_int64@@Base+0x23>
  4278ba:	mov    BYTE PTR [rsi],0x2d
  4278bd:	inc    rsi
  4278c0:	neg    rax
  4278c3:	mov    rdi,rax
  4278c6:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  4278cb:	add    eax,ebx
  4278cd:	cdqe   
  4278cf:	add    QWORD PTR [r14+0x28],rax
  4278d3:	add    rsp,0x8
  4278d7:	pop    rbx
  4278d8:	pop    r14
  4278da:	ret    
  4278db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004278e0 <flatcc_json_printer_float@@Base>:
  4278e0:	push   rbx
  4278e1:	mov    rbx,rdi
  4278e4:	vcvtss2sd xmm0,xmm0,xmm0
  4278e8:	mov    rdi,QWORD PTR [rdi+0x28]
  4278ec:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  4278f1:	cdqe   
  4278f3:	add    QWORD PTR [rbx+0x28],rax
  4278f7:	pop    rbx
  4278f8:	ret    
  4278f9:	nop    DWORD PTR [rax+0x0]

0000000000427900 <flatcc_json_printer_double@@Base>:
  427900:	push   rbx
  427901:	mov    rbx,rdi
  427904:	mov    rdi,QWORD PTR [rdi+0x28]
  427908:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  42790d:	cdqe   
  42790f:	add    QWORD PTR [rbx+0x28],rax
  427913:	pop    rbx
  427914:	ret    
  427915:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42791f:	nop

0000000000427920 <flatcc_json_printer_enum@@Base>:
  427920:	push   r15
  427922:	push   r14
  427924:	push   r12
  427926:	push   rbx
  427927:	push   rax
  427928:	mov    r12,rsi
  42792b:	mov    r14,rdi
  42792e:	movsxd r15,edx
  427931:	mov    rax,QWORD PTR [rdi+0x28]
  427935:	mov    BYTE PTR [rax],0x22
  427938:	mov    rbx,QWORD PTR [rdi+0x20]
  42793c:	mov    rdi,QWORD PTR [rdi+0x28]
  427940:	cmp    BYTE PTR [r14+0x32],0x1
  427945:	adc    rdi,0x0
  427949:	mov    QWORD PTR [r14+0x28],rdi
  42794d:	lea    rax,[rdi+r15*1]
  427951:	cmp    rax,rbx
  427954:	jb     4279ae <flatcc_json_printer_enum@@Base+0x8e>
  427956:	cmp    rdi,rbx
  427959:	jb     42796c <flatcc_json_printer_enum@@Base+0x4c>
  42795b:	mov    rdi,r14
  42795e:	xor    esi,esi
  427960:	call   QWORD PTR [r14+0x48]
  427964:	mov    rbx,QWORD PTR [r14+0x20]
  427968:	mov    rdi,QWORD PTR [r14+0x28]
  42796c:	sub    rbx,rdi
  42796f:	cmp    rbx,r15
  427972:	jae    4279ae <flatcc_json_printer_enum@@Base+0x8e>
  427974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42797e:	xchg   ax,ax
  427980:	mov    rsi,r12
  427983:	mov    rdx,rbx
  427986:	call   4060d0 <memcpy@plt>
  42798b:	add    QWORD PTR [r14+0x28],rbx
  42798f:	add    r12,rbx
  427992:	sub    r15,rbx
  427995:	mov    rdi,r14
  427998:	xor    esi,esi
  42799a:	call   QWORD PTR [r14+0x48]
  42799e:	mov    rbx,QWORD PTR [r14+0x20]
  4279a2:	mov    rdi,QWORD PTR [r14+0x28]
  4279a6:	sub    rbx,rdi
  4279a9:	cmp    r15,rbx
  4279ac:	ja     427980 <flatcc_json_printer_enum@@Base+0x60>
  4279ae:	mov    rsi,r12
  4279b1:	mov    rdx,r15
  4279b4:	call   4060d0 <memcpy@plt>
  4279b9:	mov    rax,QWORD PTR [r14+0x28]
  4279bd:	lea    rcx,[rax+r15*1]
  4279c1:	mov    QWORD PTR [r14+0x28],rcx
  4279c5:	mov    BYTE PTR [rax+r15*1],0x22
  4279ca:	cmp    BYTE PTR [r14+0x32],0x1
  4279cf:	adc    QWORD PTR [r14+0x28],0x0
  4279d4:	add    rsp,0x8
  4279d8:	pop    rbx
  4279d9:	pop    r12
  4279db:	pop    r14
  4279dd:	pop    r15
  4279df:	ret    

00000000004279e0 <flatcc_json_printer_delimit_enum_flags@@Base>:
  4279e0:	cmp    BYTE PTR [rdi+0x32],0x0
  4279e4:	sete   al
  4279e7:	test   esi,esi
  4279e9:	setne  cl
  4279ec:	or     cl,al
  4279ee:	mov    rax,QWORD PTR [rdi+0x28]
  4279f2:	mov    BYTE PTR [rax],0x22
  4279f5:	movzx  eax,cl
  4279f8:	add    QWORD PTR [rdi+0x28],rax
  4279fc:	ret    
  4279fd:	nop    DWORD PTR [rax]

0000000000427a00 <flatcc_json_printer_enum_flag@@Base>:
  427a00:	push   r15
  427a02:	push   r14
  427a04:	push   r12
  427a06:	push   rbx
  427a07:	push   rax
  427a08:	mov    r14,rdi
  427a0b:	mov    rax,QWORD PTR [rdi+0x28]
  427a0f:	mov    BYTE PTR [rax],0x20
  427a12:	xor    edi,edi
  427a14:	test   esi,esi
  427a16:	setg   dil
  427a1a:	add    rdi,QWORD PTR [r14+0x28]
  427a1e:	mov    r12,rdx
  427a21:	mov    QWORD PTR [r14+0x28],rdi
  427a25:	movsxd r15,ecx
  427a28:	lea    rax,[rdi+r15*1]
  427a2c:	mov    rbx,QWORD PTR [r14+0x20]
  427a30:	cmp    rax,rbx
  427a33:	jb     427a8e <flatcc_json_printer_enum_flag@@Base+0x8e>
  427a35:	cmp    rdi,rbx
  427a38:	jb     427a4b <flatcc_json_printer_enum_flag@@Base+0x4b>
  427a3a:	mov    rdi,r14
  427a3d:	xor    esi,esi
  427a3f:	call   QWORD PTR [r14+0x48]
  427a43:	mov    rbx,QWORD PTR [r14+0x20]
  427a47:	mov    rdi,QWORD PTR [r14+0x28]
  427a4b:	sub    rbx,rdi
  427a4e:	cmp    rbx,r15
  427a51:	jae    427a8e <flatcc_json_printer_enum_flag@@Base+0x8e>
  427a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a5d:	nop    DWORD PTR [rax]
  427a60:	mov    rsi,r12
  427a63:	mov    rdx,rbx
  427a66:	call   4060d0 <memcpy@plt>
  427a6b:	add    QWORD PTR [r14+0x28],rbx
  427a6f:	add    r12,rbx
  427a72:	sub    r15,rbx
  427a75:	mov    rdi,r14
  427a78:	xor    esi,esi
  427a7a:	call   QWORD PTR [r14+0x48]
  427a7e:	mov    rbx,QWORD PTR [r14+0x20]
  427a82:	mov    rdi,QWORD PTR [r14+0x28]
  427a86:	sub    rbx,rdi
  427a89:	cmp    r15,rbx
  427a8c:	ja     427a60 <flatcc_json_printer_enum_flag@@Base+0x60>
  427a8e:	mov    rsi,r12
  427a91:	mov    rdx,r15
  427a94:	call   4060d0 <memcpy@plt>
  427a99:	add    QWORD PTR [r14+0x28],r15
  427a9d:	add    rsp,0x8
  427aa1:	pop    rbx
  427aa2:	pop    r12
  427aa4:	pop    r14
  427aa6:	pop    r15
  427aa8:	ret    
  427aa9:	nop    DWORD PTR [rax+0x0]

0000000000427ab0 <flatcc_json_printer_string_field@@Base>:
  427ab0:	push   r14
  427ab2:	push   rbx
  427ab3:	push   rax
  427ab4:	lea    eax,[rdx+rdx*1]
  427ab7:	add    eax,0x4
  427aba:	cmp    eax,DWORD PTR [rsi+0x10]
  427abd:	jge    427b1c <flatcc_json_printer_string_field@@Base+0x6c>
  427abf:	mov    rdx,QWORD PTR [rsi+0x8]
  427ac3:	mov    eax,eax
  427ac5:	movzx  ebx,WORD PTR [rdx+rax*1]
  427ac9:	test   rbx,rbx
  427acc:	je     427b1c <flatcc_json_printer_string_field@@Base+0x6c>
  427ace:	add    rbx,QWORD PTR [rsi]
  427ad1:	je     427b1c <flatcc_json_printer_string_field@@Base+0x6c>
  427ad3:	mov    r14,rdi
  427ad6:	mov    eax,DWORD PTR [rsi+0x18]
  427ad9:	lea    edx,[rax+0x1]
  427adc:	mov    DWORD PTR [rsi+0x18],edx
  427adf:	test   eax,eax
  427ae1:	je     427af2 <flatcc_json_printer_string_field@@Base+0x42>
  427ae3:	mov    rax,QWORD PTR [r14+0x28]
  427ae7:	lea    rdx,[rax+0x1]
  427aeb:	mov    QWORD PTR [r14+0x28],rdx
  427aef:	mov    BYTE PTR [rax],0x2c
  427af2:	movsxd rdx,r8d
  427af5:	mov    rdi,r14
  427af8:	mov    rsi,rcx
  427afb:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  427b00:	mov    eax,DWORD PTR [rbx]
  427b02:	mov    edx,DWORD PTR [rbx+rax*1]
  427b05:	lea    rsi,[rbx+rax*1]
  427b09:	add    rsi,0x4
  427b0d:	mov    rdi,r14
  427b10:	add    rsp,0x8
  427b14:	pop    rbx
  427b15:	pop    r14
  427b17:	jmp    4269c0 <flatcc_json_printer_string@@Base+0x10>
  427b1c:	add    rsp,0x8
  427b20:	pop    rbx
  427b21:	pop    r14
  427b23:	ret    
  427b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b2e:	xchg   ax,ax
  427b30:	push   r15
  427b32:	push   r14
  427b34:	push   r13
  427b36:	push   r12
  427b38:	push   rbx
  427b39:	mov    r14,rdx
  427b3c:	mov    r15,rsi
  427b3f:	mov    r13,rdi
  427b42:	cmp    BYTE PTR [rdi+0x31],0x0
  427b46:	mov    r12,QWORD PTR [rdi+0x28]
  427b4a:	je     427be4 <flatcc_json_printer_string_field@@Base+0x134>
  427b50:	lea    rax,[r12+0x1]
  427b55:	mov    QWORD PTR [r13+0x28],rax
  427b59:	mov    BYTE PTR [r12],0xa
  427b5e:	movsxd rax,DWORD PTR [r13+0x38]
  427b62:	movzx  r12d,BYTE PTR [r13+0x31]
  427b67:	imul   r12,rax
  427b6b:	mov    rbx,QWORD PTR [r13+0x20]
  427b6f:	mov    rdi,QWORD PTR [r13+0x28]
  427b73:	lea    rax,[rdi+r12*1]
  427b77:	cmp    rax,rbx
  427b7a:	jbe    427bcd <flatcc_json_printer_string_field@@Base+0x11d>
  427b7c:	cmp    rdi,rbx
  427b7f:	jb     427b92 <flatcc_json_printer_string_field@@Base+0xe2>
  427b81:	mov    rdi,r13
  427b84:	xor    esi,esi
  427b86:	call   QWORD PTR [r13+0x48]
  427b8a:	mov    rbx,QWORD PTR [r13+0x20]
  427b8e:	mov    rdi,QWORD PTR [r13+0x28]
  427b92:	sub    rbx,rdi
  427b95:	cmp    rbx,r12
  427b98:	jae    427bcd <flatcc_json_printer_string_field@@Base+0x11d>
  427b9a:	nop    WORD PTR [rax+rax*1+0x0]
  427ba0:	mov    esi,0x20
  427ba5:	mov    rdx,rbx
  427ba8:	call   406080 <memset@plt>
  427bad:	add    QWORD PTR [r13+0x28],rbx
  427bb1:	sub    r12,rbx
  427bb4:	mov    rdi,r13
  427bb7:	xor    esi,esi
  427bb9:	call   QWORD PTR [r13+0x48]
  427bbd:	mov    rbx,QWORD PTR [r13+0x20]
  427bc1:	mov    rdi,QWORD PTR [r13+0x28]
  427bc5:	sub    rbx,rdi
  427bc8:	cmp    r12,rbx
  427bcb:	ja     427ba0 <flatcc_json_printer_string_field@@Base+0xf0>
  427bcd:	mov    esi,0x20
  427bd2:	mov    rdx,r12
  427bd5:	call   406080 <memset@plt>
  427bda:	add    r12,QWORD PTR [r13+0x28]
  427bde:	mov    QWORD PTR [r13+0x28],r12
  427be2:	jmp    427bf7 <flatcc_json_printer_string_field@@Base+0x147>
  427be4:	cmp    r12,QWORD PTR [r13+0x20]
  427be8:	jb     427bf7 <flatcc_json_printer_string_field@@Base+0x147>
  427bea:	mov    rdi,r13
  427bed:	xor    esi,esi
  427bef:	call   QWORD PTR [r13+0x48]
  427bf3:	mov    r12,QWORD PTR [r13+0x28]
  427bf7:	mov    BYTE PTR [r12],0x22
  427bfc:	mov    rbx,QWORD PTR [r13+0x20]
  427c00:	mov    rdi,QWORD PTR [r13+0x28]
  427c04:	cmp    BYTE PTR [r13+0x32],0x1
  427c09:	adc    rdi,0x0
  427c0d:	mov    QWORD PTR [r13+0x28],rdi
  427c11:	lea    rax,[rdi+r14*1]
  427c15:	cmp    rax,rbx
  427c18:	jb     427c6e <flatcc_json_printer_string_field@@Base+0x1be>
  427c1a:	cmp    rdi,rbx
  427c1d:	jb     427c30 <flatcc_json_printer_string_field@@Base+0x180>
  427c1f:	mov    rdi,r13
  427c22:	xor    esi,esi
  427c24:	call   QWORD PTR [r13+0x48]
  427c28:	mov    rbx,QWORD PTR [r13+0x20]
  427c2c:	mov    rdi,QWORD PTR [r13+0x28]
  427c30:	sub    rbx,rdi
  427c33:	cmp    rbx,r14
  427c36:	jae    427c6e <flatcc_json_printer_string_field@@Base+0x1be>
  427c38:	nop    DWORD PTR [rax+rax*1+0x0]
  427c40:	mov    rsi,r15
  427c43:	mov    rdx,rbx
  427c46:	call   4060d0 <memcpy@plt>
  427c4b:	add    QWORD PTR [r13+0x28],rbx
  427c4f:	add    r15,rbx
  427c52:	sub    r14,rbx
  427c55:	mov    rdi,r13
  427c58:	xor    esi,esi
  427c5a:	call   QWORD PTR [r13+0x48]
  427c5e:	mov    rbx,QWORD PTR [r13+0x20]
  427c62:	mov    rdi,QWORD PTR [r13+0x28]
  427c66:	sub    rbx,rdi
  427c69:	cmp    r14,rbx
  427c6c:	ja     427c40 <flatcc_json_printer_string_field@@Base+0x190>
  427c6e:	mov    rsi,r15
  427c71:	mov    rdx,r14
  427c74:	call   4060d0 <memcpy@plt>
  427c79:	mov    rax,QWORD PTR [r13+0x28]
  427c7d:	lea    rcx,[rax+r14*1]
  427c81:	mov    QWORD PTR [r13+0x28],rcx
  427c85:	mov    BYTE PTR [rax+r14*1],0x22
  427c8a:	mov    rax,QWORD PTR [r13+0x28]
  427c8e:	cmp    BYTE PTR [r13+0x32],0x1
  427c93:	adc    rax,0x0
  427c97:	lea    rcx,[rax+0x1]
  427c9b:	mov    QWORD PTR [r13+0x28],rcx
  427c9f:	mov    BYTE PTR [rax],0x3a
  427ca2:	mov    rax,QWORD PTR [r13+0x28]
  427ca6:	mov    BYTE PTR [rax],0x20
  427ca9:	cmp    BYTE PTR [r13+0x31],0x1
  427cae:	sbb    QWORD PTR [r13+0x28],0xffffffffffffffff
  427cb3:	pop    rbx
  427cb4:	pop    r12
  427cb6:	pop    r13
  427cb8:	pop    r14
  427cba:	pop    r15
  427cbc:	ret    
  427cbd:	nop    DWORD PTR [rax]

0000000000427cc0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  427cc0:	push   rbp
  427cc1:	push   r15
  427cc3:	push   r14
  427cc5:	push   r13
  427cc7:	push   r12
  427cc9:	push   rbx
  427cca:	sub    rsp,0x18
  427cce:	lea    eax,[rdx+rdx*1]
  427cd1:	add    eax,0x4
  427cd4:	cmp    eax,DWORD PTR [rsi+0x10]
  427cd7:	jge    427e67 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  427cdd:	mov    rdx,QWORD PTR [rsi+0x8]
  427ce1:	mov    eax,eax
  427ce3:	movzx  ebp,WORD PTR [rdx+rax*1]
  427ce7:	test   rbp,rbp
  427cea:	je     427e67 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  427cf0:	xor    r14d,r14d
  427cf3:	test   r9d,r9d
  427cf6:	setne  al
  427cf9:	add    rbp,QWORD PTR [rsi]
  427cfc:	je     427e67 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a7>
  427d02:	mov    r15,rdi
  427d05:	mov    BYTE PTR [rsp+0x7],al
  427d09:	mov    eax,DWORD PTR [rsi+0x18]
  427d0c:	lea    edx,[rax+0x1]
  427d0f:	mov    DWORD PTR [rsi+0x18],edx
  427d12:	test   eax,eax
  427d14:	je     427d25 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x65>
  427d16:	mov    rax,QWORD PTR [r15+0x28]
  427d1a:	lea    rdx,[rax+0x1]
  427d1e:	mov    QWORD PTR [r15+0x28],rdx
  427d22:	mov    BYTE PTR [rax],0x2c
  427d25:	movsxd rdx,r8d
  427d28:	mov    rdi,r15
  427d2b:	mov    rsi,rcx
  427d2e:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  427d33:	mov    r12d,DWORD PTR [rbp+0x0]
  427d37:	mov    eax,DWORD PTR [rbp+r12*1+0x0]
  427d3c:	mov    QWORD PTR [rsp+0x8],rax
  427d41:	mov    rax,QWORD PTR [r15+0x28]
  427d45:	lea    rcx,[rax+0x1]
  427d49:	mov    QWORD PTR [r15+0x28],rcx
  427d4d:	mov    BYTE PTR [rax],0x22
  427d50:	mov    rax,QWORD PTR [rsp+0x8]
  427d55:	shl    rax,0x2
  427d59:	movabs rcx,0xaaaaaaaaaaaaaaab
  427d63:	mul    rcx
  427d66:	mov    rbx,rdx
  427d69:	shr    rbx,1
  427d6c:	add    rbx,0x3
  427d70:	and    rbx,0xfffffffffffffffc
  427d74:	mov    r13,QWORD PTR [r15+0x20]
  427d78:	mov    rdi,QWORD PTR [r15+0x28]
  427d7c:	lea    rax,[rdi+rbx*1]
  427d80:	cmp    rax,r13
  427d83:	jb     427d96 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd6>
  427d85:	mov    rdi,r15
  427d88:	xor    esi,esi
  427d8a:	call   QWORD PTR [r15+0x48]
  427d8e:	mov    r13,QWORD PTR [r15+0x20]
  427d92:	mov    rdi,QWORD PTR [r15+0x28]
  427d96:	mov    al,BYTE PTR [rsp+0x7]
  427d9a:	mov    r14b,al
  427d9d:	add    rbp,r12
  427da0:	add    rbp,0x4
  427da4:	lea    rax,[rdi+rbx*1]
  427da8:	cmp    rax,r13
  427dab:	jbe    427e3c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x17c>
  427db1:	lea    r12,[rsp+0x10]
  427db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427dc0:	sub    r13,rdi
  427dc3:	and    r13,0xfffffffffffffffc
  427dc7:	lea    rbx,[r13*2+0x0]
  427dcf:	add    rbx,r13
  427dd2:	test   rbx,rbx
  427dd5:	je     427e76 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b6>
  427ddb:	shr    rbx,0x2
  427ddf:	mov    QWORD PTR [rsp+0x10],rbx
  427de4:	mov    rsi,rbp
  427de7:	mov    rdx,r12
  427dea:	mov    ecx,r14d
  427ded:	call   4315e0 <flatcc_json_printer_clear@@Base+0x30>
  427df2:	add    QWORD PTR [r15+0x28],r13
  427df6:	add    rbp,rbx
  427df9:	sub    QWORD PTR [rsp+0x8],rbx
  427dfe:	mov    rdi,r15
  427e01:	xor    esi,esi
  427e03:	call   QWORD PTR [r15+0x48]
  427e07:	mov    rax,QWORD PTR [rsp+0x8]
  427e0c:	shl    rax,0x2
  427e10:	movabs rcx,0xaaaaaaaaaaaaaaab
  427e1a:	mul    rcx
  427e1d:	mov    rbx,rdx
  427e20:	shr    rbx,1
  427e23:	add    rbx,0x3
  427e27:	and    rbx,0xfffffffffffffffc
  427e2b:	mov    r13,QWORD PTR [r15+0x20]
  427e2f:	mov    rdi,QWORD PTR [r15+0x28]
  427e33:	lea    rax,[rdi+rbx*1]
  427e37:	cmp    rax,r13
  427e3a:	ja     427dc0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
  427e3c:	or     r14d,0x80
  427e43:	lea    rdx,[rsp+0x8]
  427e48:	mov    rsi,rbp
  427e4b:	mov    ecx,r14d
  427e4e:	call   4315e0 <flatcc_json_printer_clear@@Base+0x30>
  427e53:	mov    rax,QWORD PTR [r15+0x28]
  427e57:	lea    rcx,[rax+rbx*1]
  427e5b:	add    rcx,0x1
  427e5f:	mov    QWORD PTR [r15+0x28],rcx
  427e63:	mov    BYTE PTR [rax+rbx*1],0x22
  427e67:	add    rsp,0x18
  427e6b:	pop    rbx
  427e6c:	pop    r12
  427e6e:	pop    r13
  427e70:	pop    r14
  427e72:	pop    r15
  427e74:	pop    rbp
  427e75:	ret    
  427e76:	lea    rdi,[rip+0x11209]        # 439086 <flatcc_builder_padding_base@@Base+0x3666>
  427e7d:	lea    rsi,[rip+0x10ef9]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  427e84:	lea    rcx,[rip+0x11201]        # 43908c <flatcc_builder_padding_base@@Base+0x366c>
  427e8b:	mov    edx,0x115
  427e90:	call   406070 <__assert_fail@plt>
  427e95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e9f:	nop

0000000000427ea0 <flatcc_json_printer_uint8_field@@Base>:
  427ea0:	push   r14
  427ea2:	push   rbx
  427ea3:	push   rax
  427ea4:	mov    r14,rdi
  427ea7:	lea    eax,[rdx+rdx*1]
  427eaa:	add    eax,0x4
  427ead:	cmp    eax,DWORD PTR [rsi+0x10]
  427eb0:	jge    427edd <flatcc_json_printer_uint8_field@@Base+0x3d>
  427eb2:	mov    rdx,QWORD PTR [rsi+0x8]
  427eb6:	mov    eax,eax
  427eb8:	movzx  eax,WORD PTR [rdx+rax*1]
  427ebc:	test   rax,rax
  427ebf:	je     427edd <flatcc_json_printer_uint8_field@@Base+0x3d>
  427ec1:	add    rax,QWORD PTR [rsi]
  427ec4:	je     427edd <flatcc_json_printer_uint8_field@@Base+0x3d>
  427ec6:	mov    bl,BYTE PTR [rax]
  427ec8:	cmp    bl,r9b
  427ecb:	jne    427eeb <flatcc_json_printer_uint8_field@@Base+0x4b>
  427ecd:	cmp    BYTE PTR [r14+0x34],0x0
  427ed2:	mov    ebx,r9d
  427ed5:	jne    427f95 <flatcc_json_printer_uint8_field@@Base+0xf5>
  427edb:	jmp    427eeb <flatcc_json_printer_uint8_field@@Base+0x4b>
  427edd:	cmp    BYTE PTR [r14+0x35],0x0
  427ee2:	mov    ebx,r9d
  427ee5:	je     427f95 <flatcc_json_printer_uint8_field@@Base+0xf5>
  427eeb:	mov    eax,DWORD PTR [rsi+0x18]
  427eee:	lea    edx,[rax+0x1]
  427ef1:	mov    DWORD PTR [rsi+0x18],edx
  427ef4:	test   eax,eax
  427ef6:	je     427f07 <flatcc_json_printer_uint8_field@@Base+0x67>
  427ef8:	mov    rax,QWORD PTR [r14+0x28]
  427efc:	lea    rdx,[rax+0x1]
  427f00:	mov    QWORD PTR [r14+0x28],rdx
  427f04:	mov    BYTE PTR [rax],0x2c
  427f07:	movsxd rdx,r8d
  427f0a:	mov    rdi,r14
  427f0d:	mov    rsi,rcx
  427f10:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  427f15:	mov    rax,QWORD PTR [r14+0x28]
  427f19:	cmp    bl,0x64
  427f1c:	jb     427f51 <flatcc_json_printer_uint8_field@@Base+0xb1>
  427f1e:	mov    BYTE PTR [rax+0x3],0x0
  427f22:	movzx  ecx,bl
  427f25:	lea    edx,[rcx+rcx*4]
  427f28:	lea    ecx,[rcx+rdx*8]
  427f2b:	shr    ecx,0xc
  427f2e:	imul   edx,ecx,0x64
  427f31:	sub    bl,dl
  427f33:	movzx  edx,bl
  427f36:	lea    rsi,[rip+0x112b3]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427f3d:	movzx  edx,WORD PTR [rsi+rdx*2]
  427f41:	mov    WORD PTR [rax+0x1],dx
  427f45:	or     cl,0x30
  427f48:	mov    BYTE PTR [rax],cl
  427f4a:	mov    eax,0x3
  427f4f:	jmp    427f91 <flatcc_json_printer_uint8_field@@Base+0xf1>
  427f51:	cmp    bl,0xa
  427f54:	jb     427f83 <flatcc_json_printer_uint8_field@@Base+0xe3>
  427f56:	mov    BYTE PTR [rax+0x2],0x0
  427f5a:	movzx  ecx,bl
  427f5d:	lea    edx,[rcx+rcx*4]
  427f60:	lea    ecx,[rcx+rdx*8]
  427f63:	shr    ecx,0xc
  427f66:	imul   ecx,ecx,0x64
  427f69:	sub    bl,cl
  427f6b:	movzx  ecx,bl
  427f6e:	lea    rdx,[rip+0x1127b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  427f75:	movzx  ecx,WORD PTR [rdx+rcx*2]
  427f79:	mov    WORD PTR [rax],cx
  427f7c:	mov    eax,0x2
  427f81:	jmp    427f91 <flatcc_json_printer_uint8_field@@Base+0xf1>
  427f83:	mov    BYTE PTR [rax+0x1],0x0
  427f87:	add    bl,0x30
  427f8a:	mov    BYTE PTR [rax],bl
  427f8c:	mov    eax,0x1
  427f91:	add    QWORD PTR [r14+0x28],rax
  427f95:	add    rsp,0x8
  427f99:	pop    rbx
  427f9a:	pop    r14
  427f9c:	ret    
  427f9d:	nop    DWORD PTR [rax]

0000000000427fa0 <flatcc_json_printer_uint16_field@@Base>:
  427fa0:	push   rbp
  427fa1:	push   rbx
  427fa2:	push   rax
  427fa3:	mov    rbx,rdi
  427fa6:	lea    eax,[rdx+rdx*1]
  427fa9:	add    eax,0x4
  427fac:	cmp    eax,DWORD PTR [rsi+0x10]
  427faf:	jge    427fdd <flatcc_json_printer_uint16_field@@Base+0x3d>
  427fb1:	mov    rdx,QWORD PTR [rsi+0x8]
  427fb5:	mov    eax,eax
  427fb7:	movzx  eax,WORD PTR [rdx+rax*1]
  427fbb:	test   rax,rax
  427fbe:	je     427fdd <flatcc_json_printer_uint16_field@@Base+0x3d>
  427fc0:	add    rax,QWORD PTR [rsi]
  427fc3:	je     427fdd <flatcc_json_printer_uint16_field@@Base+0x3d>
  427fc5:	movzx  ebp,WORD PTR [rax]
  427fc8:	cmp    bp,r9w
  427fcc:	jne    427fea <flatcc_json_printer_uint16_field@@Base+0x4a>
  427fce:	cmp    BYTE PTR [rbx+0x34],0x0
  427fd2:	mov    ebp,r9d
  427fd5:	jne    42813f <flatcc_json_printer_uint16_field@@Base+0x19f>
  427fdb:	jmp    427fea <flatcc_json_printer_uint16_field@@Base+0x4a>
  427fdd:	cmp    BYTE PTR [rbx+0x35],0x0
  427fe1:	mov    ebp,r9d
  427fe4:	je     42813f <flatcc_json_printer_uint16_field@@Base+0x19f>
  427fea:	mov    eax,DWORD PTR [rsi+0x18]
  427fed:	lea    edx,[rax+0x1]
  427ff0:	mov    DWORD PTR [rsi+0x18],edx
  427ff3:	test   eax,eax
  427ff5:	je     428006 <flatcc_json_printer_uint16_field@@Base+0x66>
  427ff7:	mov    rax,QWORD PTR [rbx+0x28]
  427ffb:	lea    rdx,[rax+0x1]
  427fff:	mov    QWORD PTR [rbx+0x28],rdx
  428003:	mov    BYTE PTR [rax],0x2c
  428006:	movsxd rdx,r8d
  428009:	mov    rdi,rbx
  42800c:	mov    rsi,rcx
  42800f:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428014:	mov    rsi,QWORD PTR [rbx+0x28]
  428018:	movzx  edx,bp
  42801b:	cmp    edx,0x3e8
  428021:	jb     428033 <flatcc_json_printer_uint16_field@@Base+0x93>
  428023:	xor    eax,eax
  428025:	cmp    edx,0x270f
  42802b:	seta   al
  42802e:	or     eax,0x4
  428031:	jmp    428059 <flatcc_json_printer_uint16_field@@Base+0xb9>
  428033:	cmp    bp,0x64
  428037:	jb     42804e <flatcc_json_printer_uint16_field@@Base+0xae>
  428039:	mov    BYTE PTR [rsi+0x3],0x0
  42803d:	add    rsi,0x3
  428041:	mov    eax,0x3
  428046:	mov    rcx,rsi
  428049:	jmp    428105 <flatcc_json_printer_uint16_field@@Base+0x165>
  42804e:	xor    eax,eax
  428050:	cmp    bp,0x9
  428054:	seta   al
  428057:	inc    eax
  428059:	mov    edi,eax
  42805b:	lea    rcx,[rsi+rdi*1]
  42805f:	mov    BYTE PTR [rsi+rdi*1],0x0
  428063:	test   al,0x1
  428065:	jne    4280c8 <flatcc_json_printer_uint16_field@@Base+0x128>
  428067:	cmp    eax,0x2
  42806a:	je     42809e <flatcc_json_printer_uint16_field@@Base+0xfe>
  42806c:	cmp    eax,0x4
  42806f:	jne    428139 <flatcc_json_printer_uint16_field@@Base+0x199>
  428075:	mov    esi,edx
  428077:	shr    esi,0x2
  42807a:	imul   ebp,esi,0x147b
  428080:	shr    ebp,0x11
  428083:	imul   esi,ebp,0x64
  428086:	sub    edx,esi
  428088:	movzx  edx,dx
  42808b:	lea    rsi,[rip+0x1115e]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428092:	movzx  edx,WORD PTR [rsi+rdx*2]
  428096:	mov    WORD PTR [rcx-0x2],dx
  42809a:	add    rcx,0xfffffffffffffffe
  42809e:	movzx  edx,bp
  4280a1:	mov    esi,edx
  4280a3:	shr    esi,0x2
  4280a6:	imul   esi,esi,0x147b
  4280ac:	shr    esi,0x11
  4280af:	imul   esi,esi,0x64
  4280b2:	sub    edx,esi
  4280b4:	movzx  edx,dx
  4280b7:	lea    rsi,[rip+0x11132]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4280be:	movzx  edx,WORD PTR [rsi+rdx*2]
  4280c2:	mov    WORD PTR [rcx-0x2],dx
  4280c6:	jmp    428139 <flatcc_json_printer_uint16_field@@Base+0x199>
  4280c8:	cmp    eax,0x1
  4280cb:	je     428131 <flatcc_json_printer_uint16_field@@Base+0x191>
  4280cd:	cmp    eax,0x3
  4280d0:	je     428105 <flatcc_json_printer_uint16_field@@Base+0x165>
  4280d2:	cmp    eax,0x5
  4280d5:	jne    428139 <flatcc_json_printer_uint16_field@@Base+0x199>
  4280d7:	mov    eax,edx
  4280d9:	shr    eax,0x2
  4280dc:	imul   ebp,eax,0x147b
  4280e2:	shr    ebp,0x11
  4280e5:	imul   eax,ebp,0x64
  4280e8:	sub    edx,eax
  4280ea:	movzx  eax,dx
  4280ed:	lea    rdx,[rip+0x110fc]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4280f4:	movzx  eax,WORD PTR [rdx+rax*2]
  4280f8:	mov    WORD PTR [rcx-0x2],ax
  4280fc:	add    rcx,0xfffffffffffffffe
  428100:	mov    eax,0x5
  428105:	movzx  edx,bp
  428108:	mov    esi,edx
  42810a:	shr    esi,0x2
  42810d:	imul   ebp,esi,0x147b
  428113:	shr    ebp,0x11
  428116:	imul   esi,ebp,0x64
  428119:	sub    edx,esi
  42811b:	movzx  edx,dx
  42811e:	lea    rsi,[rip+0x110cb]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428125:	movzx  edx,WORD PTR [rsi+rdx*2]
  428129:	mov    WORD PTR [rcx-0x2],dx
  42812d:	add    rcx,0xfffffffffffffffe
  428131:	add    bpl,0x30
  428135:	mov    BYTE PTR [rcx-0x1],bpl
  428139:	mov    eax,eax
  42813b:	add    QWORD PTR [rbx+0x28],rax
  42813f:	add    rsp,0x8
  428143:	pop    rbx
  428144:	pop    rbp
  428145:	ret    
  428146:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428150 <flatcc_json_printer_uint32_field@@Base>:
  428150:	push   rbp
  428151:	push   rbx
  428152:	push   rax
  428153:	mov    rbx,rdi
  428156:	lea    eax,[rdx+rdx*1]
  428159:	add    eax,0x4
  42815c:	cmp    eax,DWORD PTR [rsi+0x10]
  42815f:	jge    428187 <flatcc_json_printer_uint32_field@@Base+0x37>
  428161:	mov    rdx,QWORD PTR [rsi+0x8]
  428165:	mov    eax,eax
  428167:	movzx  eax,WORD PTR [rdx+rax*1]
  42816b:	test   rax,rax
  42816e:	je     428187 <flatcc_json_printer_uint32_field@@Base+0x37>
  428170:	add    rax,QWORD PTR [rsi]
  428173:	je     428187 <flatcc_json_printer_uint32_field@@Base+0x37>
  428175:	mov    ebp,DWORD PTR [rax]
  428177:	cmp    ebp,r9d
  42817a:	jne    428190 <flatcc_json_printer_uint32_field@@Base+0x40>
  42817c:	cmp    BYTE PTR [rbx+0x34],0x0
  428180:	mov    ebp,r9d
  428183:	jne    4281cb <flatcc_json_printer_uint32_field@@Base+0x7b>
  428185:	jmp    428190 <flatcc_json_printer_uint32_field@@Base+0x40>
  428187:	cmp    BYTE PTR [rbx+0x35],0x0
  42818b:	mov    ebp,r9d
  42818e:	je     4281cb <flatcc_json_printer_uint32_field@@Base+0x7b>
  428190:	mov    eax,DWORD PTR [rsi+0x18]
  428193:	lea    edx,[rax+0x1]
  428196:	mov    DWORD PTR [rsi+0x18],edx
  428199:	test   eax,eax
  42819b:	je     4281ac <flatcc_json_printer_uint32_field@@Base+0x5c>
  42819d:	mov    rax,QWORD PTR [rbx+0x28]
  4281a1:	lea    rdx,[rax+0x1]
  4281a5:	mov    QWORD PTR [rbx+0x28],rdx
  4281a9:	mov    BYTE PTR [rax],0x2c
  4281ac:	movsxd rdx,r8d
  4281af:	mov    rdi,rbx
  4281b2:	mov    rsi,rcx
  4281b5:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4281ba:	mov    rsi,QWORD PTR [rbx+0x28]
  4281be:	mov    edi,ebp
  4281c0:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  4281c5:	cdqe   
  4281c7:	add    QWORD PTR [rbx+0x28],rax
  4281cb:	add    rsp,0x8
  4281cf:	pop    rbx
  4281d0:	pop    rbp
  4281d1:	ret    
  4281d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4281dc:	nop    DWORD PTR [rax+0x0]

00000000004281e0 <flatcc_json_printer_uint64_field@@Base>:
  4281e0:	push   r14
  4281e2:	push   rbx
  4281e3:	push   rax
  4281e4:	mov    rbx,rdi
  4281e7:	lea    eax,[rdx+rdx*1]
  4281ea:	add    eax,0x4
  4281ed:	cmp    eax,DWORD PTR [rsi+0x10]
  4281f0:	jge    428219 <flatcc_json_printer_uint64_field@@Base+0x39>
  4281f2:	mov    rdx,QWORD PTR [rsi+0x8]
  4281f6:	mov    eax,eax
  4281f8:	movzx  eax,WORD PTR [rdx+rax*1]
  4281fc:	test   rax,rax
  4281ff:	je     428219 <flatcc_json_printer_uint64_field@@Base+0x39>
  428201:	add    rax,QWORD PTR [rsi]
  428204:	je     428219 <flatcc_json_printer_uint64_field@@Base+0x39>
  428206:	mov    r14,QWORD PTR [rax]
  428209:	cmp    r14,r9
  42820c:	jne    428222 <flatcc_json_printer_uint64_field@@Base+0x42>
  42820e:	cmp    BYTE PTR [rbx+0x34],0x0
  428212:	mov    r14,r9
  428215:	jne    42825e <flatcc_json_printer_uint64_field@@Base+0x7e>
  428217:	jmp    428222 <flatcc_json_printer_uint64_field@@Base+0x42>
  428219:	cmp    BYTE PTR [rbx+0x35],0x0
  42821d:	mov    r14,r9
  428220:	je     42825e <flatcc_json_printer_uint64_field@@Base+0x7e>
  428222:	mov    eax,DWORD PTR [rsi+0x18]
  428225:	lea    edx,[rax+0x1]
  428228:	mov    DWORD PTR [rsi+0x18],edx
  42822b:	test   eax,eax
  42822d:	je     42823e <flatcc_json_printer_uint64_field@@Base+0x5e>
  42822f:	mov    rax,QWORD PTR [rbx+0x28]
  428233:	lea    rdx,[rax+0x1]
  428237:	mov    QWORD PTR [rbx+0x28],rdx
  42823b:	mov    BYTE PTR [rax],0x2c
  42823e:	movsxd rdx,r8d
  428241:	mov    rdi,rbx
  428244:	mov    rsi,rcx
  428247:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42824c:	mov    rsi,QWORD PTR [rbx+0x28]
  428250:	mov    rdi,r14
  428253:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  428258:	cdqe   
  42825a:	add    QWORD PTR [rbx+0x28],rax
  42825e:	add    rsp,0x8
  428262:	pop    rbx
  428263:	pop    r14
  428265:	ret    
  428266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428270 <flatcc_json_printer_int8_field@@Base>:
  428270:	push   r14
  428272:	push   rbx
  428273:	push   rax
  428274:	mov    r14,rdi
  428277:	lea    eax,[rdx+rdx*1]
  42827a:	add    eax,0x4
  42827d:	cmp    eax,DWORD PTR [rsi+0x10]
  428280:	jge    4282ad <flatcc_json_printer_int8_field@@Base+0x3d>
  428282:	mov    rdx,QWORD PTR [rsi+0x8]
  428286:	mov    eax,eax
  428288:	movzx  eax,WORD PTR [rdx+rax*1]
  42828c:	test   rax,rax
  42828f:	je     4282ad <flatcc_json_printer_int8_field@@Base+0x3d>
  428291:	add    rax,QWORD PTR [rsi]
  428294:	je     4282ad <flatcc_json_printer_int8_field@@Base+0x3d>
  428296:	mov    bl,BYTE PTR [rax]
  428298:	cmp    bl,r9b
  42829b:	jne    4282bb <flatcc_json_printer_int8_field@@Base+0x4b>
  42829d:	cmp    BYTE PTR [r14+0x34],0x0
  4282a2:	mov    ebx,r9d
  4282a5:	jne    428382 <flatcc_json_printer_int8_field@@Base+0x112>
  4282ab:	jmp    4282bb <flatcc_json_printer_int8_field@@Base+0x4b>
  4282ad:	cmp    BYTE PTR [r14+0x35],0x0
  4282b2:	mov    ebx,r9d
  4282b5:	je     428382 <flatcc_json_printer_int8_field@@Base+0x112>
  4282bb:	mov    eax,DWORD PTR [rsi+0x18]
  4282be:	lea    edx,[rax+0x1]
  4282c1:	mov    DWORD PTR [rsi+0x18],edx
  4282c4:	test   eax,eax
  4282c6:	je     4282d7 <flatcc_json_printer_int8_field@@Base+0x67>
  4282c8:	mov    rax,QWORD PTR [r14+0x28]
  4282cc:	lea    rdx,[rax+0x1]
  4282d0:	mov    QWORD PTR [r14+0x28],rdx
  4282d4:	mov    BYTE PTR [rax],0x2c
  4282d7:	movsxd rdx,r8d
  4282da:	mov    rdi,r14
  4282dd:	mov    rsi,rcx
  4282e0:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4282e5:	mov    rcx,QWORD PTR [r14+0x28]
  4282e9:	mov    eax,ebx
  4282eb:	shr    al,0x7
  4282ee:	movzx  eax,al
  4282f1:	test   bl,bl
  4282f3:	js     42832e <flatcc_json_printer_int8_field@@Base+0xbe>
  4282f5:	cmp    bl,0x64
  4282f8:	jb     42833b <flatcc_json_printer_int8_field@@Base+0xcb>
  4282fa:	mov    BYTE PTR [rcx+0x3],0x0
  4282fe:	movzx  edx,bl
  428301:	lea    esi,[rdx+rdx*4]
  428304:	lea    edx,[rdx+rsi*8]
  428307:	shr    edx,0xc
  42830a:	imul   esi,edx,0x64
  42830d:	sub    bl,sil
  428310:	movzx  esi,bl
  428313:	lea    rdi,[rip+0x10ed6]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42831a:	movzx  esi,WORD PTR [rdi+rsi*2]
  42831e:	mov    WORD PTR [rcx+0x1],si
  428322:	or     dl,0x30
  428325:	mov    BYTE PTR [rcx],dl
  428327:	mov    ecx,0x3
  42832c:	jmp    42837b <flatcc_json_printer_int8_field@@Base+0x10b>
  42832e:	mov    BYTE PTR [rcx],0x2d
  428331:	inc    rcx
  428334:	neg    bl
  428336:	cmp    bl,0x64
  428339:	jae    4282fa <flatcc_json_printer_int8_field@@Base+0x8a>
  42833b:	cmp    bl,0xa
  42833e:	jb     42836d <flatcc_json_printer_int8_field@@Base+0xfd>
  428340:	mov    BYTE PTR [rcx+0x2],0x0
  428344:	movzx  edx,bl
  428347:	lea    esi,[rdx+rdx*4]
  42834a:	lea    edx,[rdx+rsi*8]
  42834d:	shr    edx,0xc
  428350:	imul   edx,edx,0x64
  428353:	sub    bl,dl
  428355:	movzx  edx,bl
  428358:	lea    rsi,[rip+0x10e91]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42835f:	movzx  edx,WORD PTR [rsi+rdx*2]
  428363:	mov    WORD PTR [rcx],dx
  428366:	mov    ecx,0x2
  42836b:	jmp    42837b <flatcc_json_printer_int8_field@@Base+0x10b>
  42836d:	mov    BYTE PTR [rcx+0x1],0x0
  428371:	add    bl,0x30
  428374:	mov    BYTE PTR [rcx],bl
  428376:	mov    ecx,0x1
  42837b:	add    rcx,rax
  42837e:	add    QWORD PTR [r14+0x28],rcx
  428382:	add    rsp,0x8
  428386:	pop    rbx
  428387:	pop    r14
  428389:	ret    
  42838a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428390 <flatcc_json_printer_int16_field@@Base>:
  428390:	push   rbp
  428391:	push   rbx
  428392:	push   rax
  428393:	mov    rbx,rdi
  428396:	lea    eax,[rdx+rdx*1]
  428399:	add    eax,0x4
  42839c:	cmp    eax,DWORD PTR [rsi+0x10]
  42839f:	jge    4283cd <flatcc_json_printer_int16_field@@Base+0x3d>
  4283a1:	mov    rdx,QWORD PTR [rsi+0x8]
  4283a5:	mov    eax,eax
  4283a7:	movzx  eax,WORD PTR [rdx+rax*1]
  4283ab:	test   rax,rax
  4283ae:	je     4283cd <flatcc_json_printer_int16_field@@Base+0x3d>
  4283b0:	add    rax,QWORD PTR [rsi]
  4283b3:	je     4283cd <flatcc_json_printer_int16_field@@Base+0x3d>
  4283b5:	movzx  ebp,WORD PTR [rax]
  4283b8:	cmp    bp,r9w
  4283bc:	jne    4283da <flatcc_json_printer_int16_field@@Base+0x4a>
  4283be:	cmp    BYTE PTR [rbx+0x34],0x0
  4283c2:	mov    ebp,r9d
  4283c5:	jne    428547 <flatcc_json_printer_int16_field@@Base+0x1b7>
  4283cb:	jmp    4283da <flatcc_json_printer_int16_field@@Base+0x4a>
  4283cd:	cmp    BYTE PTR [rbx+0x35],0x0
  4283d1:	mov    ebp,r9d
  4283d4:	je     428547 <flatcc_json_printer_int16_field@@Base+0x1b7>
  4283da:	mov    eax,DWORD PTR [rsi+0x18]
  4283dd:	lea    edx,[rax+0x1]
  4283e0:	mov    DWORD PTR [rsi+0x18],edx
  4283e3:	test   eax,eax
  4283e5:	je     4283f6 <flatcc_json_printer_int16_field@@Base+0x66>
  4283e7:	mov    rax,QWORD PTR [rbx+0x28]
  4283eb:	lea    rdx,[rax+0x1]
  4283ef:	mov    QWORD PTR [rbx+0x28],rdx
  4283f3:	mov    BYTE PTR [rax],0x2c
  4283f6:	movsxd rdx,r8d
  4283f9:	mov    rdi,rbx
  4283fc:	mov    rsi,rcx
  4283ff:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428404:	mov    rdi,QWORD PTR [rbx+0x28]
  428408:	movzx  r8d,bp
  42840c:	test   r8w,r8w
  428410:	jns    42841a <flatcc_json_printer_int16_field@@Base+0x8a>
  428412:	mov    BYTE PTR [rdi],0x2d
  428415:	inc    rdi
  428418:	neg    ebp
  42841a:	shr    r8d,0xf
  42841e:	movzx  esi,bp
  428421:	cmp    esi,0x3e8
  428427:	jb     428439 <flatcc_json_printer_int16_field@@Base+0xa9>
  428429:	xor    ecx,ecx
  42842b:	cmp    esi,0x270f
  428431:	seta   cl
  428434:	or     ecx,0x4
  428437:	jmp    42845f <flatcc_json_printer_int16_field@@Base+0xcf>
  428439:	cmp    bp,0x64
  42843d:	jb     428454 <flatcc_json_printer_int16_field@@Base+0xc4>
  42843f:	mov    BYTE PTR [rdi+0x3],0x0
  428443:	add    rdi,0x3
  428447:	mov    ecx,0x3
  42844c:	mov    rdx,rdi
  42844f:	jmp    42850c <flatcc_json_printer_int16_field@@Base+0x17c>
  428454:	xor    ecx,ecx
  428456:	cmp    bp,0x9
  42845a:	seta   cl
  42845d:	inc    ecx
  42845f:	mov    eax,ecx
  428461:	lea    rdx,[rdi+rax*1]
  428465:	mov    BYTE PTR [rdi+rax*1],0x0
  428469:	test   cl,0x1
  42846c:	jne    4284cf <flatcc_json_printer_int16_field@@Base+0x13f>
  42846e:	cmp    ecx,0x2
  428471:	je     4284a5 <flatcc_json_printer_int16_field@@Base+0x115>
  428473:	cmp    ecx,0x4
  428476:	jne    428540 <flatcc_json_printer_int16_field@@Base+0x1b0>
  42847c:	mov    eax,esi
  42847e:	shr    eax,0x2
  428481:	imul   ebp,eax,0x147b
  428487:	shr    ebp,0x11
  42848a:	imul   eax,ebp,0x64
  42848d:	sub    esi,eax
  42848f:	movzx  eax,si
  428492:	lea    rsi,[rip+0x10d57]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428499:	movzx  eax,WORD PTR [rsi+rax*2]
  42849d:	mov    WORD PTR [rdx-0x2],ax
  4284a1:	add    rdx,0xfffffffffffffffe
  4284a5:	movzx  eax,bp
  4284a8:	mov    esi,eax
  4284aa:	shr    esi,0x2
  4284ad:	imul   esi,esi,0x147b
  4284b3:	shr    esi,0x11
  4284b6:	imul   esi,esi,0x64
  4284b9:	sub    eax,esi
  4284bb:	movzx  eax,ax
  4284be:	lea    rsi,[rip+0x10d2b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4284c5:	movzx  eax,WORD PTR [rsi+rax*2]
  4284c9:	mov    WORD PTR [rdx-0x2],ax
  4284cd:	jmp    428540 <flatcc_json_printer_int16_field@@Base+0x1b0>
  4284cf:	cmp    ecx,0x1
  4284d2:	je     428538 <flatcc_json_printer_int16_field@@Base+0x1a8>
  4284d4:	cmp    ecx,0x3
  4284d7:	je     42850c <flatcc_json_printer_int16_field@@Base+0x17c>
  4284d9:	cmp    ecx,0x5
  4284dc:	jne    428540 <flatcc_json_printer_int16_field@@Base+0x1b0>
  4284de:	mov    eax,esi
  4284e0:	shr    eax,0x2
  4284e3:	imul   ebp,eax,0x147b
  4284e9:	shr    ebp,0x11
  4284ec:	imul   eax,ebp,0x64
  4284ef:	sub    esi,eax
  4284f1:	movzx  eax,si
  4284f4:	lea    rcx,[rip+0x10cf5]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4284fb:	movzx  eax,WORD PTR [rcx+rax*2]
  4284ff:	mov    WORD PTR [rdx-0x2],ax
  428503:	add    rdx,0xfffffffffffffffe
  428507:	mov    ecx,0x5
  42850c:	movzx  eax,bp
  42850f:	mov    esi,eax
  428511:	shr    esi,0x2
  428514:	imul   ebp,esi,0x147b
  42851a:	shr    ebp,0x11
  42851d:	imul   esi,ebp,0x64
  428520:	sub    eax,esi
  428522:	movzx  eax,ax
  428525:	lea    rsi,[rip+0x10cc4]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42852c:	movzx  eax,WORD PTR [rsi+rax*2]
  428530:	mov    WORD PTR [rdx-0x2],ax
  428534:	add    rdx,0xfffffffffffffffe
  428538:	add    bpl,0x30
  42853c:	mov    BYTE PTR [rdx-0x1],bpl
  428540:	add    ecx,r8d
  428543:	add    QWORD PTR [rbx+0x28],rcx
  428547:	add    rsp,0x8
  42854b:	pop    rbx
  42854c:	pop    rbp
  42854d:	ret    
  42854e:	xchg   ax,ax

0000000000428550 <flatcc_json_printer_int32_field@@Base>:
  428550:	push   rbp
  428551:	push   r14
  428553:	push   rbx
  428554:	mov    r14,rdi
  428557:	lea    eax,[rdx+rdx*1]
  42855a:	add    eax,0x4
  42855d:	cmp    eax,DWORD PTR [rsi+0x10]
  428560:	jge    428589 <flatcc_json_printer_int32_field@@Base+0x39>
  428562:	mov    rdx,QWORD PTR [rsi+0x8]
  428566:	mov    eax,eax
  428568:	movzx  eax,WORD PTR [rdx+rax*1]
  42856c:	test   rax,rax
  42856f:	je     428589 <flatcc_json_printer_int32_field@@Base+0x39>
  428571:	add    rax,QWORD PTR [rsi]
  428574:	je     428589 <flatcc_json_printer_int32_field@@Base+0x39>
  428576:	mov    ebx,DWORD PTR [rax]
  428578:	cmp    ebx,r9d
  42857b:	jne    428593 <flatcc_json_printer_int32_field@@Base+0x43>
  42857d:	cmp    BYTE PTR [r14+0x34],0x0
  428582:	mov    ebx,r9d
  428585:	jne    4285e1 <flatcc_json_printer_int32_field@@Base+0x91>
  428587:	jmp    428593 <flatcc_json_printer_int32_field@@Base+0x43>
  428589:	cmp    BYTE PTR [r14+0x35],0x0
  42858e:	mov    ebx,r9d
  428591:	je     4285e1 <flatcc_json_printer_int32_field@@Base+0x91>
  428593:	mov    eax,DWORD PTR [rsi+0x18]
  428596:	lea    edx,[rax+0x1]
  428599:	mov    DWORD PTR [rsi+0x18],edx
  42859c:	test   eax,eax
  42859e:	je     4285af <flatcc_json_printer_int32_field@@Base+0x5f>
  4285a0:	mov    rax,QWORD PTR [r14+0x28]
  4285a4:	lea    rdx,[rax+0x1]
  4285a8:	mov    QWORD PTR [r14+0x28],rdx
  4285ac:	mov    BYTE PTR [rax],0x2c
  4285af:	movsxd rdx,r8d
  4285b2:	mov    rdi,r14
  4285b5:	mov    rsi,rcx
  4285b8:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4285bd:	mov    rsi,QWORD PTR [r14+0x28]
  4285c1:	mov    ebp,ebx
  4285c3:	shr    ebp,0x1f
  4285c6:	test   ebx,ebx
  4285c8:	jns    4285d2 <flatcc_json_printer_int32_field@@Base+0x82>
  4285ca:	mov    BYTE PTR [rsi],0x2d
  4285cd:	inc    rsi
  4285d0:	neg    ebx
  4285d2:	mov    edi,ebx
  4285d4:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  4285d9:	add    eax,ebp
  4285db:	cdqe   
  4285dd:	add    QWORD PTR [r14+0x28],rax
  4285e1:	pop    rbx
  4285e2:	pop    r14
  4285e4:	pop    rbp
  4285e5:	ret    
  4285e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004285f0 <flatcc_json_printer_int64_field@@Base>:
  4285f0:	push   r15
  4285f2:	push   r14
  4285f4:	push   rbx
  4285f5:	mov    r14,rdi
  4285f8:	lea    eax,[rdx+rdx*1]
  4285fb:	add    eax,0x4
  4285fe:	cmp    eax,DWORD PTR [rsi+0x10]
  428601:	jge    42862b <flatcc_json_printer_int64_field@@Base+0x3b>
  428603:	mov    rdx,QWORD PTR [rsi+0x8]
  428607:	mov    eax,eax
  428609:	movzx  eax,WORD PTR [rdx+rax*1]
  42860d:	test   rax,rax
  428610:	je     42862b <flatcc_json_printer_int64_field@@Base+0x3b>
  428612:	add    rax,QWORD PTR [rsi]
  428615:	je     42862b <flatcc_json_printer_int64_field@@Base+0x3b>
  428617:	mov    r15,QWORD PTR [rax]
  42861a:	cmp    r15,r9
  42861d:	jne    428635 <flatcc_json_printer_int64_field@@Base+0x45>
  42861f:	cmp    BYTE PTR [r14+0x34],0x0
  428624:	mov    r15,r9
  428627:	jne    428688 <flatcc_json_printer_int64_field@@Base+0x98>
  428629:	jmp    428635 <flatcc_json_printer_int64_field@@Base+0x45>
  42862b:	cmp    BYTE PTR [r14+0x35],0x0
  428630:	mov    r15,r9
  428633:	je     428688 <flatcc_json_printer_int64_field@@Base+0x98>
  428635:	mov    eax,DWORD PTR [rsi+0x18]
  428638:	lea    edx,[rax+0x1]
  42863b:	mov    DWORD PTR [rsi+0x18],edx
  42863e:	test   eax,eax
  428640:	je     428651 <flatcc_json_printer_int64_field@@Base+0x61>
  428642:	mov    rax,QWORD PTR [r14+0x28]
  428646:	lea    rdx,[rax+0x1]
  42864a:	mov    QWORD PTR [r14+0x28],rdx
  42864e:	mov    BYTE PTR [rax],0x2c
  428651:	movsxd rdx,r8d
  428654:	mov    rdi,r14
  428657:	mov    rsi,rcx
  42865a:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42865f:	mov    rsi,QWORD PTR [r14+0x28]
  428663:	mov    rbx,r15
  428666:	shr    rbx,0x3f
  42866a:	test   r15,r15
  42866d:	jns    428678 <flatcc_json_printer_int64_field@@Base+0x88>
  42866f:	mov    BYTE PTR [rsi],0x2d
  428672:	inc    rsi
  428675:	neg    r15
  428678:	mov    rdi,r15
  42867b:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  428680:	add    eax,ebx
  428682:	cdqe   
  428684:	add    QWORD PTR [r14+0x28],rax
  428688:	pop    rbx
  428689:	pop    r14
  42868b:	pop    r15
  42868d:	ret    
  42868e:	xchg   ax,ax

0000000000428690 <flatcc_json_printer_bool_field@@Base>:
  428690:	push   rbp
  428691:	push   rbx
  428692:	push   rax
  428693:	mov    rbx,rdi
  428696:	lea    eax,[rdx+rdx*1]
  428699:	add    eax,0x4
  42869c:	cmp    eax,DWORD PTR [rsi+0x10]
  42869f:	jge    4286c8 <flatcc_json_printer_bool_field@@Base+0x38>
  4286a1:	mov    rdx,QWORD PTR [rsi+0x8]
  4286a5:	mov    eax,eax
  4286a7:	movzx  eax,WORD PTR [rdx+rax*1]
  4286ab:	test   rax,rax
  4286ae:	je     4286c8 <flatcc_json_printer_bool_field@@Base+0x38>
  4286b0:	add    rax,QWORD PTR [rsi]
  4286b3:	je     4286c8 <flatcc_json_printer_bool_field@@Base+0x38>
  4286b5:	mov    bpl,BYTE PTR [rax]
  4286b8:	cmp    bpl,r9b
  4286bb:	jne    4286d1 <flatcc_json_printer_bool_field@@Base+0x41>
  4286bd:	cmp    BYTE PTR [rbx+0x34],0x0
  4286c1:	mov    ebp,r9d
  4286c4:	jne    42872a <flatcc_json_printer_bool_field@@Base+0x9a>
  4286c6:	jmp    4286d1 <flatcc_json_printer_bool_field@@Base+0x41>
  4286c8:	cmp    BYTE PTR [rbx+0x35],0x0
  4286cc:	mov    ebp,r9d
  4286cf:	je     42872a <flatcc_json_printer_bool_field@@Base+0x9a>
  4286d1:	mov    eax,DWORD PTR [rsi+0x18]
  4286d4:	lea    edx,[rax+0x1]
  4286d7:	mov    DWORD PTR [rsi+0x18],edx
  4286da:	test   eax,eax
  4286dc:	je     4286ed <flatcc_json_printer_bool_field@@Base+0x5d>
  4286de:	mov    rax,QWORD PTR [rbx+0x28]
  4286e2:	lea    rdx,[rax+0x1]
  4286e6:	mov    QWORD PTR [rbx+0x28],rdx
  4286ea:	mov    BYTE PTR [rax],0x2c
  4286ed:	movsxd rdx,r8d
  4286f0:	mov    rdi,rbx
  4286f3:	mov    rsi,rcx
  4286f6:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4286fb:	mov    rax,QWORD PTR [rbx+0x28]
  4286ff:	test   bpl,bpl
  428702:	je     428715 <flatcc_json_printer_bool_field@@Base+0x85>
  428704:	mov    BYTE PTR [rax+0x4],0x0
  428708:	mov    DWORD PTR [rax],0x65757274
  42870e:	mov    eax,0x4
  428713:	jmp    428726 <flatcc_json_printer_bool_field@@Base+0x96>
  428715:	mov    WORD PTR [rax+0x4],0x65
  42871b:	mov    DWORD PTR [rax],0x736c6166
  428721:	mov    eax,0x5
  428726:	add    QWORD PTR [rbx+0x28],rax
  42872a:	add    rsp,0x8
  42872e:	pop    rbx
  42872f:	pop    rbp
  428730:	ret    
  428731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42873b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428740 <flatcc_json_printer_float_field@@Base>:
  428740:	push   rbx
  428741:	sub    rsp,0x10
  428745:	mov    rbx,rdi
  428748:	lea    eax,[rdx+rdx*1]
  42874b:	add    eax,0x4
  42874e:	cmp    eax,DWORD PTR [rsi+0x10]
  428751:	jge    42877f <flatcc_json_printer_float_field@@Base+0x3f>
  428753:	mov    rdx,QWORD PTR [rsi+0x8]
  428757:	mov    eax,eax
  428759:	movzx  eax,WORD PTR [rdx+rax*1]
  42875d:	test   rax,rax
  428760:	je     42877f <flatcc_json_printer_float_field@@Base+0x3f>
  428762:	add    rax,QWORD PTR [rsi]
  428765:	je     42877f <flatcc_json_printer_float_field@@Base+0x3f>
  428767:	vmovss xmm1,DWORD PTR [rax]
  42876b:	vucomiss xmm1,xmm0
  42876f:	jne    4287d4 <flatcc_json_printer_float_field@@Base+0x94>
  428771:	jp     4287d4 <flatcc_json_printer_float_field@@Base+0x94>
  428773:	cmp    BYTE PTR [rbx+0x34],0x0
  428777:	vmovaps xmm0,xmm1
  42877b:	jne    4287ce <flatcc_json_printer_float_field@@Base+0x8e>
  42877d:	jmp    428785 <flatcc_json_printer_float_field@@Base+0x45>
  42877f:	cmp    BYTE PTR [rbx+0x35],0x0
  428783:	je     4287ce <flatcc_json_printer_float_field@@Base+0x8e>
  428785:	vmovss DWORD PTR [rsp+0xc],xmm0
  42878b:	mov    eax,DWORD PTR [rsi+0x18]
  42878e:	lea    edx,[rax+0x1]
  428791:	mov    DWORD PTR [rsi+0x18],edx
  428794:	test   eax,eax
  428796:	je     4287a7 <flatcc_json_printer_float_field@@Base+0x67>
  428798:	mov    rax,QWORD PTR [rbx+0x28]
  42879c:	lea    rdx,[rax+0x1]
  4287a0:	mov    QWORD PTR [rbx+0x28],rdx
  4287a4:	mov    BYTE PTR [rax],0x2c
  4287a7:	movsxd rdx,r8d
  4287aa:	mov    rdi,rbx
  4287ad:	mov    rsi,rcx
  4287b0:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4287b5:	vmovss xmm0,DWORD PTR [rsp+0xc]
  4287bb:	vcvtss2sd xmm0,xmm0,xmm0
  4287bf:	mov    rdi,QWORD PTR [rbx+0x28]
  4287c3:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  4287c8:	cdqe   
  4287ca:	add    QWORD PTR [rbx+0x28],rax
  4287ce:	add    rsp,0x10
  4287d2:	pop    rbx
  4287d3:	ret    
  4287d4:	vmovaps xmm0,xmm1
  4287d8:	jmp    428785 <flatcc_json_printer_float_field@@Base+0x45>
  4287da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004287e0 <flatcc_json_printer_double_field@@Base>:
  4287e0:	push   rbx
  4287e1:	sub    rsp,0x10
  4287e5:	mov    rbx,rdi
  4287e8:	lea    eax,[rdx+rdx*1]
  4287eb:	add    eax,0x4
  4287ee:	cmp    eax,DWORD PTR [rsi+0x10]
  4287f1:	jge    42881f <flatcc_json_printer_double_field@@Base+0x3f>
  4287f3:	mov    rdx,QWORD PTR [rsi+0x8]
  4287f7:	mov    eax,eax
  4287f9:	movzx  eax,WORD PTR [rdx+rax*1]
  4287fd:	test   rax,rax
  428800:	je     42881f <flatcc_json_printer_double_field@@Base+0x3f>
  428802:	add    rax,QWORD PTR [rsi]
  428805:	je     42881f <flatcc_json_printer_double_field@@Base+0x3f>
  428807:	vmovsd xmm1,QWORD PTR [rax]
  42880b:	vucomisd xmm1,xmm0
  42880f:	jne    428870 <flatcc_json_printer_double_field@@Base+0x90>
  428811:	jp     428870 <flatcc_json_printer_double_field@@Base+0x90>
  428813:	cmp    BYTE PTR [rbx+0x34],0x0
  428817:	vmovaps xmm0,xmm1
  42881b:	jne    42886a <flatcc_json_printer_double_field@@Base+0x8a>
  42881d:	jmp    428825 <flatcc_json_printer_double_field@@Base+0x45>
  42881f:	cmp    BYTE PTR [rbx+0x35],0x0
  428823:	je     42886a <flatcc_json_printer_double_field@@Base+0x8a>
  428825:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42882b:	mov    eax,DWORD PTR [rsi+0x18]
  42882e:	lea    edx,[rax+0x1]
  428831:	mov    DWORD PTR [rsi+0x18],edx
  428834:	test   eax,eax
  428836:	je     428847 <flatcc_json_printer_double_field@@Base+0x67>
  428838:	mov    rax,QWORD PTR [rbx+0x28]
  42883c:	lea    rdx,[rax+0x1]
  428840:	mov    QWORD PTR [rbx+0x28],rdx
  428844:	mov    BYTE PTR [rax],0x2c
  428847:	movsxd rdx,r8d
  42884a:	mov    rdi,rbx
  42884d:	mov    rsi,rcx
  428850:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428855:	mov    rdi,QWORD PTR [rbx+0x28]
  428859:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42885f:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  428864:	cdqe   
  428866:	add    QWORD PTR [rbx+0x28],rax
  42886a:	add    rsp,0x10
  42886e:	pop    rbx
  42886f:	ret    
  428870:	vmovaps xmm0,xmm1
  428874:	jmp    428825 <flatcc_json_printer_double_field@@Base+0x45>
  428876:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000428880 <flatcc_json_printer_uint8_enum_field@@Base>:
  428880:	push   r15
  428882:	push   r14
  428884:	push   rbx
  428885:	mov    r14,rdi
  428888:	mov    rdi,QWORD PTR [rsp+0x20]
  42888d:	lea    eax,[rdx+rdx*1]
  428890:	add    eax,0x4
  428893:	cmp    eax,DWORD PTR [rsi+0x10]
  428896:	jge    4288c3 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  428898:	mov    rdx,QWORD PTR [rsi+0x8]
  42889c:	mov    eax,eax
  42889e:	movzx  eax,WORD PTR [rdx+rax*1]
  4288a2:	test   rax,rax
  4288a5:	je     4288c3 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  4288a7:	add    rax,QWORD PTR [rsi]
  4288aa:	je     4288c3 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  4288ac:	mov    bl,BYTE PTR [rax]
  4288ae:	cmp    bl,r9b
  4288b1:	jne    4288d1 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  4288b3:	cmp    BYTE PTR [r14+0x34],0x0
  4288b8:	mov    ebx,r9d
  4288bb:	jne    428995 <flatcc_json_printer_uint8_enum_field@@Base+0x115>
  4288c1:	jmp    4288d1 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  4288c3:	cmp    BYTE PTR [r14+0x35],0x0
  4288c8:	mov    ebx,r9d
  4288cb:	je     428995 <flatcc_json_printer_uint8_enum_field@@Base+0x115>
  4288d1:	mov    r15,rdi
  4288d4:	mov    eax,DWORD PTR [rsi+0x18]
  4288d7:	lea    edx,[rax+0x1]
  4288da:	mov    DWORD PTR [rsi+0x18],edx
  4288dd:	test   eax,eax
  4288df:	je     4288f0 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
  4288e1:	mov    rax,QWORD PTR [r14+0x28]
  4288e5:	lea    rdx,[rax+0x1]
  4288e9:	mov    QWORD PTR [r14+0x28],rdx
  4288ed:	mov    BYTE PTR [rax],0x2c
  4288f0:	movsxd rdx,r8d
  4288f3:	mov    rdi,r14
  4288f6:	mov    rsi,rcx
  4288f9:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4288fe:	cmp    BYTE PTR [r14+0x33],0x0
  428903:	je     428941 <flatcc_json_printer_uint8_enum_field@@Base+0xc1>
  428905:	mov    rax,QWORD PTR [r14+0x28]
  428909:	cmp    bl,0x64
  42890c:	jb     428951 <flatcc_json_printer_uint8_enum_field@@Base+0xd1>
  42890e:	mov    BYTE PTR [rax+0x3],0x0
  428912:	movzx  ecx,bl
  428915:	lea    edx,[rcx+rcx*4]
  428918:	lea    ecx,[rcx+rdx*8]
  42891b:	shr    ecx,0xc
  42891e:	imul   edx,ecx,0x64
  428921:	sub    bl,dl
  428923:	movzx  edx,bl
  428926:	lea    rsi,[rip+0x108c3]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42892d:	movzx  edx,WORD PTR [rsi+rdx*2]
  428931:	mov    WORD PTR [rax+0x1],dx
  428935:	or     cl,0x30
  428938:	mov    BYTE PTR [rax],cl
  42893a:	mov    eax,0x3
  42893f:	jmp    428991 <flatcc_json_printer_uint8_enum_field@@Base+0x111>
  428941:	movzx  esi,bl
  428944:	mov    rdi,r14
  428947:	mov    rax,r15
  42894a:	pop    rbx
  42894b:	pop    r14
  42894d:	pop    r15
  42894f:	jmp    rax
  428951:	cmp    bl,0xa
  428954:	jb     428983 <flatcc_json_printer_uint8_enum_field@@Base+0x103>
  428956:	mov    BYTE PTR [rax+0x2],0x0
  42895a:	movzx  ecx,bl
  42895d:	lea    edx,[rcx+rcx*4]
  428960:	lea    ecx,[rcx+rdx*8]
  428963:	shr    ecx,0xc
  428966:	imul   ecx,ecx,0x64
  428969:	sub    bl,cl
  42896b:	movzx  ecx,bl
  42896e:	lea    rdx,[rip+0x1087b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428975:	movzx  ecx,WORD PTR [rdx+rcx*2]
  428979:	mov    WORD PTR [rax],cx
  42897c:	mov    eax,0x2
  428981:	jmp    428991 <flatcc_json_printer_uint8_enum_field@@Base+0x111>
  428983:	mov    BYTE PTR [rax+0x1],0x0
  428987:	add    bl,0x30
  42898a:	mov    BYTE PTR [rax],bl
  42898c:	mov    eax,0x1
  428991:	add    QWORD PTR [r14+0x28],rax
  428995:	pop    rbx
  428996:	pop    r14
  428998:	pop    r15
  42899a:	ret    
  42899b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004289a0 <flatcc_json_printer_uint16_enum_field@@Base>:
  4289a0:	push   rbp
  4289a1:	push   r14
  4289a3:	push   rbx
  4289a4:	mov    rbx,rdi
  4289a7:	mov    rdi,QWORD PTR [rsp+0x20]
  4289ac:	lea    eax,[rdx+rdx*1]
  4289af:	add    eax,0x4
  4289b2:	cmp    eax,DWORD PTR [rsi+0x10]
  4289b5:	jge    4289e3 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  4289b7:	mov    rdx,QWORD PTR [rsi+0x8]
  4289bb:	mov    eax,eax
  4289bd:	movzx  eax,WORD PTR [rdx+rax*1]
  4289c1:	test   rax,rax
  4289c4:	je     4289e3 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  4289c6:	add    rax,QWORD PTR [rsi]
  4289c9:	je     4289e3 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  4289cb:	movzx  ebp,WORD PTR [rax]
  4289ce:	cmp    bp,r9w
  4289d2:	jne    4289f0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  4289d4:	cmp    BYTE PTR [rbx+0x34],0x0
  4289d8:	mov    ebp,r9d
  4289db:	jne    428b5d <flatcc_json_printer_uint16_enum_field@@Base+0x1bd>
  4289e1:	jmp    4289f0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  4289e3:	cmp    BYTE PTR [rbx+0x35],0x0
  4289e7:	mov    ebp,r9d
  4289ea:	je     428b5d <flatcc_json_printer_uint16_enum_field@@Base+0x1bd>
  4289f0:	mov    r14,rdi
  4289f3:	mov    eax,DWORD PTR [rsi+0x18]
  4289f6:	lea    edx,[rax+0x1]
  4289f9:	mov    DWORD PTR [rsi+0x18],edx
  4289fc:	test   eax,eax
  4289fe:	je     428a0f <flatcc_json_printer_uint16_enum_field@@Base+0x6f>
  428a00:	mov    rax,QWORD PTR [rbx+0x28]
  428a04:	lea    rdx,[rax+0x1]
  428a08:	mov    QWORD PTR [rbx+0x28],rdx
  428a0c:	mov    BYTE PTR [rax],0x2c
  428a0f:	movsxd rdx,r8d
  428a12:	mov    rdi,rbx
  428a15:	mov    rsi,rcx
  428a18:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428a1d:	cmp    BYTE PTR [rbx+0x33],0x0
  428a21:	je     428a42 <flatcc_json_printer_uint16_enum_field@@Base+0xa2>
  428a23:	mov    rsi,QWORD PTR [rbx+0x28]
  428a27:	movzx  edx,bp
  428a2a:	cmp    edx,0x3e8
  428a30:	jb     428a51 <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  428a32:	xor    eax,eax
  428a34:	cmp    edx,0x270f
  428a3a:	seta   al
  428a3d:	or     eax,0x4
  428a40:	jmp    428a77 <flatcc_json_printer_uint16_enum_field@@Base+0xd7>
  428a42:	movzx  esi,bp
  428a45:	mov    rdi,rbx
  428a48:	mov    rax,r14
  428a4b:	pop    rbx
  428a4c:	pop    r14
  428a4e:	pop    rbp
  428a4f:	jmp    rax
  428a51:	cmp    bp,0x64
  428a55:	jb     428a6c <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
  428a57:	mov    BYTE PTR [rsi+0x3],0x0
  428a5b:	add    rsi,0x3
  428a5f:	mov    eax,0x3
  428a64:	mov    rcx,rsi
  428a67:	jmp    428b23 <flatcc_json_printer_uint16_enum_field@@Base+0x183>
  428a6c:	xor    eax,eax
  428a6e:	cmp    bp,0x9
  428a72:	seta   al
  428a75:	inc    eax
  428a77:	mov    edi,eax
  428a79:	lea    rcx,[rsi+rdi*1]
  428a7d:	mov    BYTE PTR [rsi+rdi*1],0x0
  428a81:	test   al,0x1
  428a83:	jne    428ae6 <flatcc_json_printer_uint16_enum_field@@Base+0x146>
  428a85:	cmp    eax,0x2
  428a88:	je     428abc <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
  428a8a:	cmp    eax,0x4
  428a8d:	jne    428b57 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  428a93:	mov    esi,edx
  428a95:	shr    esi,0x2
  428a98:	imul   ebp,esi,0x147b
  428a9e:	shr    ebp,0x11
  428aa1:	imul   esi,ebp,0x64
  428aa4:	sub    edx,esi
  428aa6:	movzx  edx,dx
  428aa9:	lea    rsi,[rip+0x10740]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428ab0:	movzx  edx,WORD PTR [rsi+rdx*2]
  428ab4:	mov    WORD PTR [rcx-0x2],dx
  428ab8:	add    rcx,0xfffffffffffffffe
  428abc:	movzx  edx,bp
  428abf:	mov    esi,edx
  428ac1:	shr    esi,0x2
  428ac4:	imul   esi,esi,0x147b
  428aca:	shr    esi,0x11
  428acd:	imul   esi,esi,0x64
  428ad0:	sub    edx,esi
  428ad2:	movzx  edx,dx
  428ad5:	lea    rsi,[rip+0x10714]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428adc:	movzx  edx,WORD PTR [rsi+rdx*2]
  428ae0:	mov    WORD PTR [rcx-0x2],dx
  428ae4:	jmp    428b57 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  428ae6:	cmp    eax,0x1
  428ae9:	je     428b4f <flatcc_json_printer_uint16_enum_field@@Base+0x1af>
  428aeb:	cmp    eax,0x3
  428aee:	je     428b23 <flatcc_json_printer_uint16_enum_field@@Base+0x183>
  428af0:	cmp    eax,0x5
  428af3:	jne    428b57 <flatcc_json_printer_uint16_enum_field@@Base+0x1b7>
  428af5:	mov    eax,edx
  428af7:	shr    eax,0x2
  428afa:	imul   ebp,eax,0x147b
  428b00:	shr    ebp,0x11
  428b03:	imul   eax,ebp,0x64
  428b06:	sub    edx,eax
  428b08:	movzx  eax,dx
  428b0b:	lea    rdx,[rip+0x106de]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428b12:	movzx  eax,WORD PTR [rdx+rax*2]
  428b16:	mov    WORD PTR [rcx-0x2],ax
  428b1a:	add    rcx,0xfffffffffffffffe
  428b1e:	mov    eax,0x5
  428b23:	movzx  edx,bp
  428b26:	mov    esi,edx
  428b28:	shr    esi,0x2
  428b2b:	imul   ebp,esi,0x147b
  428b31:	shr    ebp,0x11
  428b34:	imul   esi,ebp,0x64
  428b37:	sub    edx,esi
  428b39:	movzx  edx,dx
  428b3c:	lea    rsi,[rip+0x106ad]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428b43:	movzx  edx,WORD PTR [rsi+rdx*2]
  428b47:	mov    WORD PTR [rcx-0x2],dx
  428b4b:	add    rcx,0xfffffffffffffffe
  428b4f:	add    bpl,0x30
  428b53:	mov    BYTE PTR [rcx-0x1],bpl
  428b57:	mov    eax,eax
  428b59:	add    QWORD PTR [rbx+0x28],rax
  428b5d:	pop    rbx
  428b5e:	pop    r14
  428b60:	pop    rbp
  428b61:	ret    
  428b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428b6c:	nop    DWORD PTR [rax+0x0]

0000000000428b70 <flatcc_json_printer_uint32_enum_field@@Base>:
  428b70:	push   rbp
  428b71:	push   r14
  428b73:	push   rbx
  428b74:	mov    rbx,rdi
  428b77:	mov    rdi,QWORD PTR [rsp+0x20]
  428b7c:	lea    eax,[rdx+rdx*1]
  428b7f:	add    eax,0x4
  428b82:	cmp    eax,DWORD PTR [rsi+0x10]
  428b85:	jge    428bad <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  428b87:	mov    rdx,QWORD PTR [rsi+0x8]
  428b8b:	mov    eax,eax
  428b8d:	movzx  eax,WORD PTR [rdx+rax*1]
  428b91:	test   rax,rax
  428b94:	je     428bad <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  428b96:	add    rax,QWORD PTR [rsi]
  428b99:	je     428bad <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  428b9b:	mov    ebp,DWORD PTR [rax]
  428b9d:	cmp    ebp,r9d
  428ba0:	jne    428bb6 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  428ba2:	cmp    BYTE PTR [rbx+0x34],0x0
  428ba6:	mov    ebp,r9d
  428ba9:	jne    428bfa <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  428bab:	jmp    428bb6 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  428bad:	cmp    BYTE PTR [rbx+0x35],0x0
  428bb1:	mov    ebp,r9d
  428bb4:	je     428bfa <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  428bb6:	mov    r14,rdi
  428bb9:	mov    eax,DWORD PTR [rsi+0x18]
  428bbc:	lea    edx,[rax+0x1]
  428bbf:	mov    DWORD PTR [rsi+0x18],edx
  428bc2:	test   eax,eax
  428bc4:	je     428bd5 <flatcc_json_printer_uint32_enum_field@@Base+0x65>
  428bc6:	mov    rax,QWORD PTR [rbx+0x28]
  428bca:	lea    rdx,[rax+0x1]
  428bce:	mov    QWORD PTR [rbx+0x28],rdx
  428bd2:	mov    BYTE PTR [rax],0x2c
  428bd5:	movsxd rdx,r8d
  428bd8:	mov    rdi,rbx
  428bdb:	mov    rsi,rcx
  428bde:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428be3:	cmp    BYTE PTR [rbx+0x33],0x0
  428be7:	je     428bff <flatcc_json_printer_uint32_enum_field@@Base+0x8f>
  428be9:	mov    rsi,QWORD PTR [rbx+0x28]
  428bed:	mov    edi,ebp
  428bef:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  428bf4:	cdqe   
  428bf6:	add    QWORD PTR [rbx+0x28],rax
  428bfa:	pop    rbx
  428bfb:	pop    r14
  428bfd:	pop    rbp
  428bfe:	ret    
  428bff:	mov    rdi,rbx
  428c02:	mov    esi,ebp
  428c04:	mov    rax,r14
  428c07:	pop    rbx
  428c08:	pop    r14
  428c0a:	pop    rbp
  428c0b:	jmp    rax
  428c0d:	nop    DWORD PTR [rax]

0000000000428c10 <flatcc_json_printer_uint64_enum_field@@Base>:
  428c10:	push   r15
  428c12:	push   r14
  428c14:	push   rbx
  428c15:	mov    rbx,rdi
  428c18:	mov    rdi,QWORD PTR [rsp+0x20]
  428c1d:	lea    eax,[rdx+rdx*1]
  428c20:	add    eax,0x4
  428c23:	cmp    eax,DWORD PTR [rsi+0x10]
  428c26:	jge    428c4f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  428c28:	mov    rdx,QWORD PTR [rsi+0x8]
  428c2c:	mov    eax,eax
  428c2e:	movzx  eax,WORD PTR [rdx+rax*1]
  428c32:	test   rax,rax
  428c35:	je     428c4f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  428c37:	add    rax,QWORD PTR [rsi]
  428c3a:	je     428c4f <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  428c3c:	mov    r14,QWORD PTR [rax]
  428c3f:	cmp    r14,r9
  428c42:	jne    428c58 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  428c44:	cmp    BYTE PTR [rbx+0x34],0x0
  428c48:	mov    r14,r9
  428c4b:	jne    428c9d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  428c4d:	jmp    428c58 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  428c4f:	cmp    BYTE PTR [rbx+0x35],0x0
  428c53:	mov    r14,r9
  428c56:	je     428c9d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  428c58:	mov    r15,rdi
  428c5b:	mov    eax,DWORD PTR [rsi+0x18]
  428c5e:	lea    edx,[rax+0x1]
  428c61:	mov    DWORD PTR [rsi+0x18],edx
  428c64:	test   eax,eax
  428c66:	je     428c77 <flatcc_json_printer_uint64_enum_field@@Base+0x67>
  428c68:	mov    rax,QWORD PTR [rbx+0x28]
  428c6c:	lea    rdx,[rax+0x1]
  428c70:	mov    QWORD PTR [rbx+0x28],rdx
  428c74:	mov    BYTE PTR [rax],0x2c
  428c77:	movsxd rdx,r8d
  428c7a:	mov    rdi,rbx
  428c7d:	mov    rsi,rcx
  428c80:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428c85:	cmp    BYTE PTR [rbx+0x33],0x0
  428c89:	je     428ca3 <flatcc_json_printer_uint64_enum_field@@Base+0x93>
  428c8b:	mov    rsi,QWORD PTR [rbx+0x28]
  428c8f:	mov    rdi,r14
  428c92:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  428c97:	cdqe   
  428c99:	add    QWORD PTR [rbx+0x28],rax
  428c9d:	pop    rbx
  428c9e:	pop    r14
  428ca0:	pop    r15
  428ca2:	ret    
  428ca3:	mov    rdi,rbx
  428ca6:	mov    rsi,r14
  428ca9:	mov    rax,r15
  428cac:	pop    rbx
  428cad:	pop    r14
  428caf:	pop    r15
  428cb1:	jmp    rax
  428cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428cbd:	nop    DWORD PTR [rax]

0000000000428cc0 <flatcc_json_printer_int8_enum_field@@Base>:
  428cc0:	push   r15
  428cc2:	push   r14
  428cc4:	push   rbx
  428cc5:	mov    r14,rdi
  428cc8:	mov    rdi,QWORD PTR [rsp+0x20]
  428ccd:	lea    eax,[rdx+rdx*1]
  428cd0:	add    eax,0x4
  428cd3:	cmp    eax,DWORD PTR [rsi+0x10]
  428cd6:	jge    428d03 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  428cd8:	mov    rdx,QWORD PTR [rsi+0x8]
  428cdc:	mov    eax,eax
  428cde:	movzx  eax,WORD PTR [rdx+rax*1]
  428ce2:	test   rax,rax
  428ce5:	je     428d03 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  428ce7:	add    rax,QWORD PTR [rsi]
  428cea:	je     428d03 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  428cec:	mov    bl,BYTE PTR [rax]
  428cee:	cmp    bl,r9b
  428cf1:	jne    428d11 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  428cf3:	cmp    BYTE PTR [r14+0x34],0x0
  428cf8:	mov    ebx,r9d
  428cfb:	jne    428df2 <flatcc_json_printer_int8_enum_field@@Base+0x132>
  428d01:	jmp    428d11 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  428d03:	cmp    BYTE PTR [r14+0x35],0x0
  428d08:	mov    ebx,r9d
  428d0b:	je     428df2 <flatcc_json_printer_int8_enum_field@@Base+0x132>
  428d11:	mov    r15,rdi
  428d14:	mov    eax,DWORD PTR [rsi+0x18]
  428d17:	lea    edx,[rax+0x1]
  428d1a:	mov    DWORD PTR [rsi+0x18],edx
  428d1d:	test   eax,eax
  428d1f:	je     428d30 <flatcc_json_printer_int8_enum_field@@Base+0x70>
  428d21:	mov    rax,QWORD PTR [r14+0x28]
  428d25:	lea    rdx,[rax+0x1]
  428d29:	mov    QWORD PTR [r14+0x28],rdx
  428d2d:	mov    BYTE PTR [rax],0x2c
  428d30:	movsxd rdx,r8d
  428d33:	mov    rdi,r14
  428d36:	mov    rsi,rcx
  428d39:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428d3e:	cmp    BYTE PTR [r14+0x33],0x0
  428d43:	je     428d8e <flatcc_json_printer_int8_enum_field@@Base+0xce>
  428d45:	mov    rcx,QWORD PTR [r14+0x28]
  428d49:	mov    eax,ebx
  428d4b:	shr    al,0x7
  428d4e:	movzx  eax,al
  428d51:	test   bl,bl
  428d53:	js     428d9e <flatcc_json_printer_int8_enum_field@@Base+0xde>
  428d55:	cmp    bl,0x64
  428d58:	jb     428dab <flatcc_json_printer_int8_enum_field@@Base+0xeb>
  428d5a:	mov    BYTE PTR [rcx+0x3],0x0
  428d5e:	movzx  edx,bl
  428d61:	lea    esi,[rdx+rdx*4]
  428d64:	lea    edx,[rdx+rsi*8]
  428d67:	shr    edx,0xc
  428d6a:	imul   esi,edx,0x64
  428d6d:	sub    bl,sil
  428d70:	movzx  esi,bl
  428d73:	lea    rdi,[rip+0x10476]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428d7a:	movzx  esi,WORD PTR [rdi+rsi*2]
  428d7e:	mov    WORD PTR [rcx+0x1],si
  428d82:	or     dl,0x30
  428d85:	mov    BYTE PTR [rcx],dl
  428d87:	mov    ecx,0x3
  428d8c:	jmp    428deb <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  428d8e:	movsx  esi,bl
  428d91:	mov    rdi,r14
  428d94:	mov    rax,r15
  428d97:	pop    rbx
  428d98:	pop    r14
  428d9a:	pop    r15
  428d9c:	jmp    rax
  428d9e:	mov    BYTE PTR [rcx],0x2d
  428da1:	inc    rcx
  428da4:	neg    bl
  428da6:	cmp    bl,0x64
  428da9:	jae    428d5a <flatcc_json_printer_int8_enum_field@@Base+0x9a>
  428dab:	cmp    bl,0xa
  428dae:	jb     428ddd <flatcc_json_printer_int8_enum_field@@Base+0x11d>
  428db0:	mov    BYTE PTR [rcx+0x2],0x0
  428db4:	movzx  edx,bl
  428db7:	lea    esi,[rdx+rdx*4]
  428dba:	lea    edx,[rdx+rsi*8]
  428dbd:	shr    edx,0xc
  428dc0:	imul   edx,edx,0x64
  428dc3:	sub    bl,dl
  428dc5:	movzx  edx,bl
  428dc8:	lea    rsi,[rip+0x10421]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428dcf:	movzx  edx,WORD PTR [rsi+rdx*2]
  428dd3:	mov    WORD PTR [rcx],dx
  428dd6:	mov    ecx,0x2
  428ddb:	jmp    428deb <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  428ddd:	mov    BYTE PTR [rcx+0x1],0x0
  428de1:	add    bl,0x30
  428de4:	mov    BYTE PTR [rcx],bl
  428de6:	mov    ecx,0x1
  428deb:	add    rcx,rax
  428dee:	add    QWORD PTR [r14+0x28],rcx
  428df2:	pop    rbx
  428df3:	pop    r14
  428df5:	pop    r15
  428df7:	ret    
  428df8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428e00 <flatcc_json_printer_int16_enum_field@@Base>:
  428e00:	push   rbp
  428e01:	push   r14
  428e03:	push   rbx
  428e04:	mov    rbx,rdi
  428e07:	mov    rdi,QWORD PTR [rsp+0x20]
  428e0c:	lea    eax,[rdx+rdx*1]
  428e0f:	add    eax,0x4
  428e12:	cmp    eax,DWORD PTR [rsi+0x10]
  428e15:	jge    428e43 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  428e17:	mov    rdx,QWORD PTR [rsi+0x8]
  428e1b:	mov    eax,eax
  428e1d:	movzx  eax,WORD PTR [rdx+rax*1]
  428e21:	test   rax,rax
  428e24:	je     428e43 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  428e26:	add    rax,QWORD PTR [rsi]
  428e29:	je     428e43 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  428e2b:	movzx  ebp,WORD PTR [rax]
  428e2e:	cmp    bp,r9w
  428e32:	jne    428e50 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  428e34:	cmp    BYTE PTR [rbx+0x34],0x0
  428e38:	mov    ebp,r9d
  428e3b:	jne    428fd5 <flatcc_json_printer_int16_enum_field@@Base+0x1d5>
  428e41:	jmp    428e50 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  428e43:	cmp    BYTE PTR [rbx+0x35],0x0
  428e47:	mov    ebp,r9d
  428e4a:	je     428fd5 <flatcc_json_printer_int16_enum_field@@Base+0x1d5>
  428e50:	mov    r14,rdi
  428e53:	mov    eax,DWORD PTR [rsi+0x18]
  428e56:	lea    edx,[rax+0x1]
  428e59:	mov    DWORD PTR [rsi+0x18],edx
  428e5c:	test   eax,eax
  428e5e:	je     428e6f <flatcc_json_printer_int16_enum_field@@Base+0x6f>
  428e60:	mov    rax,QWORD PTR [rbx+0x28]
  428e64:	lea    rdx,[rax+0x1]
  428e68:	mov    QWORD PTR [rbx+0x28],rdx
  428e6c:	mov    BYTE PTR [rax],0x2c
  428e6f:	movsxd rdx,r8d
  428e72:	mov    rdi,rbx
  428e75:	mov    rsi,rcx
  428e78:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  428e7d:	cmp    BYTE PTR [rbx+0x33],0x0
  428e81:	je     428eb8 <flatcc_json_printer_int16_enum_field@@Base+0xb8>
  428e83:	mov    rdi,QWORD PTR [rbx+0x28]
  428e87:	movzx  r8d,bp
  428e8b:	test   r8w,r8w
  428e8f:	jns    428e99 <flatcc_json_printer_int16_enum_field@@Base+0x99>
  428e91:	mov    BYTE PTR [rdi],0x2d
  428e94:	inc    rdi
  428e97:	neg    ebp
  428e99:	shr    r8d,0xf
  428e9d:	movzx  esi,bp
  428ea0:	cmp    esi,0x3e8
  428ea6:	jb     428ec7 <flatcc_json_printer_int16_enum_field@@Base+0xc7>
  428ea8:	xor    ecx,ecx
  428eaa:	cmp    esi,0x270f
  428eb0:	seta   cl
  428eb3:	or     ecx,0x4
  428eb6:	jmp    428eed <flatcc_json_printer_int16_enum_field@@Base+0xed>
  428eb8:	movsx  esi,bp
  428ebb:	mov    rdi,rbx
  428ebe:	mov    rax,r14
  428ec1:	pop    rbx
  428ec2:	pop    r14
  428ec4:	pop    rbp
  428ec5:	jmp    rax
  428ec7:	cmp    bp,0x64
  428ecb:	jb     428ee2 <flatcc_json_printer_int16_enum_field@@Base+0xe2>
  428ecd:	mov    BYTE PTR [rdi+0x3],0x0
  428ed1:	add    rdi,0x3
  428ed5:	mov    ecx,0x3
  428eda:	mov    rdx,rdi
  428edd:	jmp    428f9a <flatcc_json_printer_int16_enum_field@@Base+0x19a>
  428ee2:	xor    ecx,ecx
  428ee4:	cmp    bp,0x9
  428ee8:	seta   cl
  428eeb:	inc    ecx
  428eed:	mov    eax,ecx
  428eef:	lea    rdx,[rdi+rax*1]
  428ef3:	mov    BYTE PTR [rdi+rax*1],0x0
  428ef7:	test   cl,0x1
  428efa:	jne    428f5d <flatcc_json_printer_int16_enum_field@@Base+0x15d>
  428efc:	cmp    ecx,0x2
  428eff:	je     428f33 <flatcc_json_printer_int16_enum_field@@Base+0x133>
  428f01:	cmp    ecx,0x4
  428f04:	jne    428fce <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  428f0a:	mov    eax,esi
  428f0c:	shr    eax,0x2
  428f0f:	imul   ebp,eax,0x147b
  428f15:	shr    ebp,0x11
  428f18:	imul   eax,ebp,0x64
  428f1b:	sub    esi,eax
  428f1d:	movzx  eax,si
  428f20:	lea    rsi,[rip+0x102c9]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428f27:	movzx  eax,WORD PTR [rsi+rax*2]
  428f2b:	mov    WORD PTR [rdx-0x2],ax
  428f2f:	add    rdx,0xfffffffffffffffe
  428f33:	movzx  eax,bp
  428f36:	mov    esi,eax
  428f38:	shr    esi,0x2
  428f3b:	imul   esi,esi,0x147b
  428f41:	shr    esi,0x11
  428f44:	imul   esi,esi,0x64
  428f47:	sub    eax,esi
  428f49:	movzx  eax,ax
  428f4c:	lea    rsi,[rip+0x1029d]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428f53:	movzx  eax,WORD PTR [rsi+rax*2]
  428f57:	mov    WORD PTR [rdx-0x2],ax
  428f5b:	jmp    428fce <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  428f5d:	cmp    ecx,0x1
  428f60:	je     428fc6 <flatcc_json_printer_int16_enum_field@@Base+0x1c6>
  428f62:	cmp    ecx,0x3
  428f65:	je     428f9a <flatcc_json_printer_int16_enum_field@@Base+0x19a>
  428f67:	cmp    ecx,0x5
  428f6a:	jne    428fce <flatcc_json_printer_int16_enum_field@@Base+0x1ce>
  428f6c:	mov    eax,esi
  428f6e:	shr    eax,0x2
  428f71:	imul   ebp,eax,0x147b
  428f77:	shr    ebp,0x11
  428f7a:	imul   eax,ebp,0x64
  428f7d:	sub    esi,eax
  428f7f:	movzx  eax,si
  428f82:	lea    rcx,[rip+0x10267]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428f89:	movzx  eax,WORD PTR [rcx+rax*2]
  428f8d:	mov    WORD PTR [rdx-0x2],ax
  428f91:	add    rdx,0xfffffffffffffffe
  428f95:	mov    ecx,0x5
  428f9a:	movzx  eax,bp
  428f9d:	mov    esi,eax
  428f9f:	shr    esi,0x2
  428fa2:	imul   ebp,esi,0x147b
  428fa8:	shr    ebp,0x11
  428fab:	imul   esi,ebp,0x64
  428fae:	sub    eax,esi
  428fb0:	movzx  eax,ax
  428fb3:	lea    rsi,[rip+0x10236]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  428fba:	movzx  eax,WORD PTR [rsi+rax*2]
  428fbe:	mov    WORD PTR [rdx-0x2],ax
  428fc2:	add    rdx,0xfffffffffffffffe
  428fc6:	add    bpl,0x30
  428fca:	mov    BYTE PTR [rdx-0x1],bpl
  428fce:	add    ecx,r8d
  428fd1:	add    QWORD PTR [rbx+0x28],rcx
  428fd5:	pop    rbx
  428fd6:	pop    r14
  428fd8:	pop    rbp
  428fd9:	ret    
  428fda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428fe0 <flatcc_json_printer_int32_enum_field@@Base>:
  428fe0:	push   rbp
  428fe1:	push   r14
  428fe3:	push   rbx
  428fe4:	mov    rbx,rdi
  428fe7:	mov    rdi,QWORD PTR [rsp+0x20]
  428fec:	lea    eax,[rdx+rdx*1]
  428fef:	add    eax,0x4
  428ff2:	cmp    eax,DWORD PTR [rsi+0x10]
  428ff5:	jge    42901d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  428ff7:	mov    rdx,QWORD PTR [rsi+0x8]
  428ffb:	mov    eax,eax
  428ffd:	movzx  eax,WORD PTR [rdx+rax*1]
  429001:	test   rax,rax
  429004:	je     42901d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  429006:	add    rax,QWORD PTR [rsi]
  429009:	je     42901d <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42900b:	mov    ebp,DWORD PTR [rax]
  42900d:	cmp    ebp,r9d
  429010:	jne    429026 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  429012:	cmp    BYTE PTR [rbx+0x34],0x0
  429016:	mov    ebp,r9d
  429019:	jne    429080 <flatcc_json_printer_int32_enum_field@@Base+0xa0>
  42901b:	jmp    429026 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42901d:	cmp    BYTE PTR [rbx+0x35],0x0
  429021:	mov    ebp,r9d
  429024:	je     429080 <flatcc_json_printer_int32_enum_field@@Base+0xa0>
  429026:	mov    r14,rdi
  429029:	mov    eax,DWORD PTR [rsi+0x18]
  42902c:	lea    edx,[rax+0x1]
  42902f:	mov    DWORD PTR [rsi+0x18],edx
  429032:	test   eax,eax
  429034:	je     429045 <flatcc_json_printer_int32_enum_field@@Base+0x65>
  429036:	mov    rax,QWORD PTR [rbx+0x28]
  42903a:	lea    rdx,[rax+0x1]
  42903e:	mov    QWORD PTR [rbx+0x28],rdx
  429042:	mov    BYTE PTR [rax],0x2c
  429045:	movsxd rdx,r8d
  429048:	mov    rdi,rbx
  42904b:	mov    rsi,rcx
  42904e:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429053:	cmp    BYTE PTR [rbx+0x33],0x0
  429057:	je     429085 <flatcc_json_printer_int32_enum_field@@Base+0xa5>
  429059:	mov    rsi,QWORD PTR [rbx+0x28]
  42905d:	mov    r14d,ebp
  429060:	shr    r14d,0x1f
  429064:	test   ebp,ebp
  429066:	jns    429070 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  429068:	mov    BYTE PTR [rsi],0x2d
  42906b:	inc    rsi
  42906e:	neg    ebp
  429070:	mov    edi,ebp
  429072:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  429077:	add    eax,r14d
  42907a:	cdqe   
  42907c:	add    QWORD PTR [rbx+0x28],rax
  429080:	pop    rbx
  429081:	pop    r14
  429083:	pop    rbp
  429084:	ret    
  429085:	mov    rdi,rbx
  429088:	mov    esi,ebp
  42908a:	mov    rax,r14
  42908d:	pop    rbx
  42908e:	pop    r14
  429090:	pop    rbp
  429091:	jmp    rax
  429093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42909d:	nop    DWORD PTR [rax]

00000000004290a0 <flatcc_json_printer_int64_enum_field@@Base>:
  4290a0:	push   r15
  4290a2:	push   r14
  4290a4:	push   rbx
  4290a5:	mov    rbx,rdi
  4290a8:	mov    rdi,QWORD PTR [rsp+0x20]
  4290ad:	lea    eax,[rdx+rdx*1]
  4290b0:	add    eax,0x4
  4290b3:	cmp    eax,DWORD PTR [rsi+0x10]
  4290b6:	jge    4290df <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  4290b8:	mov    rdx,QWORD PTR [rsi+0x8]
  4290bc:	mov    eax,eax
  4290be:	movzx  eax,WORD PTR [rdx+rax*1]
  4290c2:	test   rax,rax
  4290c5:	je     4290df <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  4290c7:	add    rax,QWORD PTR [rsi]
  4290ca:	je     4290df <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  4290cc:	mov    r14,QWORD PTR [rax]
  4290cf:	cmp    r14,r9
  4290d2:	jne    4290e8 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  4290d4:	cmp    BYTE PTR [rbx+0x34],0x0
  4290d8:	mov    r14,r9
  4290db:	jne    429145 <flatcc_json_printer_int64_enum_field@@Base+0xa5>
  4290dd:	jmp    4290e8 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  4290df:	cmp    BYTE PTR [rbx+0x35],0x0
  4290e3:	mov    r14,r9
  4290e6:	je     429145 <flatcc_json_printer_int64_enum_field@@Base+0xa5>
  4290e8:	mov    r15,rdi
  4290eb:	mov    eax,DWORD PTR [rsi+0x18]
  4290ee:	lea    edx,[rax+0x1]
  4290f1:	mov    DWORD PTR [rsi+0x18],edx
  4290f4:	test   eax,eax
  4290f6:	je     429107 <flatcc_json_printer_int64_enum_field@@Base+0x67>
  4290f8:	mov    rax,QWORD PTR [rbx+0x28]
  4290fc:	lea    rdx,[rax+0x1]
  429100:	mov    QWORD PTR [rbx+0x28],rdx
  429104:	mov    BYTE PTR [rax],0x2c
  429107:	movsxd rdx,r8d
  42910a:	mov    rdi,rbx
  42910d:	mov    rsi,rcx
  429110:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429115:	cmp    BYTE PTR [rbx+0x33],0x0
  429119:	je     42914b <flatcc_json_printer_int64_enum_field@@Base+0xab>
  42911b:	mov    rsi,QWORD PTR [rbx+0x28]
  42911f:	mov    r15,r14
  429122:	shr    r15,0x3f
  429126:	test   r14,r14
  429129:	jns    429134 <flatcc_json_printer_int64_enum_field@@Base+0x94>
  42912b:	mov    BYTE PTR [rsi],0x2d
  42912e:	inc    rsi
  429131:	neg    r14
  429134:	mov    rdi,r14
  429137:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  42913c:	add    eax,r15d
  42913f:	cdqe   
  429141:	add    QWORD PTR [rbx+0x28],rax
  429145:	pop    rbx
  429146:	pop    r14
  429148:	pop    r15
  42914a:	ret    
  42914b:	mov    rdi,rbx
  42914e:	mov    rsi,r14
  429151:	mov    rax,r15
  429154:	pop    rbx
  429155:	pop    r14
  429157:	pop    r15
  429159:	jmp    rax
  42915b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429160 <flatcc_json_printer_bool_enum_field@@Base>:
  429160:	push   rbp
  429161:	push   r14
  429163:	push   rbx
  429164:	mov    rbx,rdi
  429167:	mov    rdi,QWORD PTR [rsp+0x20]
  42916c:	lea    eax,[rdx+rdx*1]
  42916f:	add    eax,0x4
  429172:	cmp    eax,DWORD PTR [rsi+0x10]
  429175:	jge    42919e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  429177:	mov    rdx,QWORD PTR [rsi+0x8]
  42917b:	mov    eax,eax
  42917d:	movzx  eax,WORD PTR [rdx+rax*1]
  429181:	test   rax,rax
  429184:	je     42919e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  429186:	add    rax,QWORD PTR [rsi]
  429189:	je     42919e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42918b:	mov    bpl,BYTE PTR [rax]
  42918e:	cmp    bpl,r9b
  429191:	jne    4291a7 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  429193:	cmp    BYTE PTR [rbx+0x34],0x0
  429197:	mov    ebp,r9d
  42919a:	jne    429219 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42919c:	jmp    4291a7 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42919e:	cmp    BYTE PTR [rbx+0x35],0x0
  4291a2:	mov    ebp,r9d
  4291a5:	je     429219 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  4291a7:	mov    r14,rdi
  4291aa:	mov    eax,DWORD PTR [rsi+0x18]
  4291ad:	lea    edx,[rax+0x1]
  4291b0:	mov    DWORD PTR [rsi+0x18],edx
  4291b3:	test   eax,eax
  4291b5:	je     4291c6 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  4291b7:	mov    rax,QWORD PTR [rbx+0x28]
  4291bb:	lea    rdx,[rax+0x1]
  4291bf:	mov    QWORD PTR [rbx+0x28],rdx
  4291c3:	mov    BYTE PTR [rax],0x2c
  4291c6:	movsxd rdx,r8d
  4291c9:	mov    rdi,rbx
  4291cc:	mov    rsi,rcx
  4291cf:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4291d4:	cmp    BYTE PTR [rbx+0x33],0x0
  4291d8:	je     4291f4 <flatcc_json_printer_bool_enum_field@@Base+0x94>
  4291da:	mov    rax,QWORD PTR [rbx+0x28]
  4291de:	test   bpl,bpl
  4291e1:	je     429204 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
  4291e3:	mov    BYTE PTR [rax+0x4],0x0
  4291e7:	mov    DWORD PTR [rax],0x65757274
  4291ed:	mov    eax,0x4
  4291f2:	jmp    429215 <flatcc_json_printer_bool_enum_field@@Base+0xb5>
  4291f4:	movzx  esi,bpl
  4291f8:	mov    rdi,rbx
  4291fb:	mov    rax,r14
  4291fe:	pop    rbx
  4291ff:	pop    r14
  429201:	pop    rbp
  429202:	jmp    rax
  429204:	mov    WORD PTR [rax+0x4],0x65
  42920a:	mov    DWORD PTR [rax],0x736c6166
  429210:	mov    eax,0x5
  429215:	add    QWORD PTR [rbx+0x28],rax
  429219:	pop    rbx
  42921a:	pop    r14
  42921c:	pop    rbp
  42921d:	ret    
  42921e:	xchg   ax,ax

0000000000429220 <flatcc_json_printer_uint8_struct_field@@Base>:
  429220:	push   r14
  429222:	push   rbx
  429223:	push   rax
  429224:	mov    r14,rdi
  429227:	mov    bl,BYTE PTR [rdx+rcx*1]
  42922a:	test   esi,esi
  42922c:	je     42923d <flatcc_json_printer_uint8_struct_field@@Base+0x1d>
  42922e:	mov    rax,QWORD PTR [r14+0x28]
  429232:	lea    rcx,[rax+0x1]
  429236:	mov    QWORD PTR [r14+0x28],rcx
  42923a:	mov    BYTE PTR [rax],0x2c
  42923d:	movsxd rdx,r9d
  429240:	mov    rdi,r14
  429243:	mov    rsi,r8
  429246:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42924b:	mov    rax,QWORD PTR [r14+0x28]
  42924f:	cmp    bl,0x64
  429252:	jb     429287 <flatcc_json_printer_uint8_struct_field@@Base+0x67>
  429254:	mov    BYTE PTR [rax+0x3],0x0
  429258:	movzx  ecx,bl
  42925b:	lea    edx,[rcx+rcx*4]
  42925e:	lea    ecx,[rcx+rdx*8]
  429261:	shr    ecx,0xc
  429264:	imul   edx,ecx,0x64
  429267:	sub    bl,dl
  429269:	movzx  edx,bl
  42926c:	lea    rsi,[rip+0xff7d]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429273:	movzx  edx,WORD PTR [rsi+rdx*2]
  429277:	mov    WORD PTR [rax+0x1],dx
  42927b:	or     cl,0x30
  42927e:	mov    BYTE PTR [rax],cl
  429280:	mov    eax,0x3
  429285:	jmp    4292c7 <flatcc_json_printer_uint8_struct_field@@Base+0xa7>
  429287:	cmp    bl,0xa
  42928a:	jb     4292b9 <flatcc_json_printer_uint8_struct_field@@Base+0x99>
  42928c:	mov    BYTE PTR [rax+0x2],0x0
  429290:	movzx  ecx,bl
  429293:	lea    edx,[rcx+rcx*4]
  429296:	lea    ecx,[rcx+rdx*8]
  429299:	shr    ecx,0xc
  42929c:	imul   ecx,ecx,0x64
  42929f:	sub    bl,cl
  4292a1:	movzx  ecx,bl
  4292a4:	lea    rdx,[rip+0xff45]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4292ab:	movzx  ecx,WORD PTR [rdx+rcx*2]
  4292af:	mov    WORD PTR [rax],cx
  4292b2:	mov    eax,0x2
  4292b7:	jmp    4292c7 <flatcc_json_printer_uint8_struct_field@@Base+0xa7>
  4292b9:	mov    BYTE PTR [rax+0x1],0x0
  4292bd:	add    bl,0x30
  4292c0:	mov    BYTE PTR [rax],bl
  4292c2:	mov    eax,0x1
  4292c7:	add    QWORD PTR [r14+0x28],rax
  4292cb:	add    rsp,0x8
  4292cf:	pop    rbx
  4292d0:	pop    r14
  4292d2:	ret    
  4292d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4292dd:	nop    DWORD PTR [rax]

00000000004292e0 <flatcc_json_printer_uint16_struct_field@@Base>:
  4292e0:	push   rbp
  4292e1:	push   rbx
  4292e2:	push   rax
  4292e3:	mov    rbx,rdi
  4292e6:	movzx  ebp,WORD PTR [rdx+rcx*1]
  4292ea:	test   esi,esi
  4292ec:	je     4292fd <flatcc_json_printer_uint16_struct_field@@Base+0x1d>
  4292ee:	mov    rax,QWORD PTR [rbx+0x28]
  4292f2:	lea    rcx,[rax+0x1]
  4292f6:	mov    QWORD PTR [rbx+0x28],rcx
  4292fa:	mov    BYTE PTR [rax],0x2c
  4292fd:	movsxd rdx,r9d
  429300:	mov    rdi,rbx
  429303:	mov    rsi,r8
  429306:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42930b:	mov    rsi,QWORD PTR [rbx+0x28]
  42930f:	movzx  edx,bp
  429312:	cmp    edx,0x3e8
  429318:	jb     42932a <flatcc_json_printer_uint16_struct_field@@Base+0x4a>
  42931a:	xor    eax,eax
  42931c:	cmp    edx,0x270f
  429322:	seta   al
  429325:	or     eax,0x4
  429328:	jmp    429350 <flatcc_json_printer_uint16_struct_field@@Base+0x70>
  42932a:	cmp    bp,0x64
  42932e:	jb     429345 <flatcc_json_printer_uint16_struct_field@@Base+0x65>
  429330:	mov    BYTE PTR [rsi+0x3],0x0
  429334:	add    rsi,0x3
  429338:	mov    eax,0x3
  42933d:	mov    rcx,rsi
  429340:	jmp    4293fc <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
  429345:	xor    eax,eax
  429347:	cmp    bp,0x9
  42934b:	seta   al
  42934e:	inc    eax
  429350:	mov    edi,eax
  429352:	lea    rcx,[rsi+rdi*1]
  429356:	mov    BYTE PTR [rsi+rdi*1],0x0
  42935a:	test   al,0x1
  42935c:	jne    4293bf <flatcc_json_printer_uint16_struct_field@@Base+0xdf>
  42935e:	cmp    eax,0x2
  429361:	je     429395 <flatcc_json_printer_uint16_struct_field@@Base+0xb5>
  429363:	cmp    eax,0x4
  429366:	jne    429430 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  42936c:	mov    esi,edx
  42936e:	shr    esi,0x2
  429371:	imul   ebp,esi,0x147b
  429377:	shr    ebp,0x11
  42937a:	imul   esi,ebp,0x64
  42937d:	sub    edx,esi
  42937f:	movzx  edx,dx
  429382:	lea    rsi,[rip+0xfe67]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429389:	movzx  edx,WORD PTR [rsi+rdx*2]
  42938d:	mov    WORD PTR [rcx-0x2],dx
  429391:	add    rcx,0xfffffffffffffffe
  429395:	movzx  edx,bp
  429398:	mov    esi,edx
  42939a:	shr    esi,0x2
  42939d:	imul   esi,esi,0x147b
  4293a3:	shr    esi,0x11
  4293a6:	imul   esi,esi,0x64
  4293a9:	sub    edx,esi
  4293ab:	movzx  edx,dx
  4293ae:	lea    rsi,[rip+0xfe3b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4293b5:	movzx  edx,WORD PTR [rsi+rdx*2]
  4293b9:	mov    WORD PTR [rcx-0x2],dx
  4293bd:	jmp    429430 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  4293bf:	cmp    eax,0x1
  4293c2:	je     429428 <flatcc_json_printer_uint16_struct_field@@Base+0x148>
  4293c4:	cmp    eax,0x3
  4293c7:	je     4293fc <flatcc_json_printer_uint16_struct_field@@Base+0x11c>
  4293c9:	cmp    eax,0x5
  4293cc:	jne    429430 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
  4293ce:	mov    eax,edx
  4293d0:	shr    eax,0x2
  4293d3:	imul   ebp,eax,0x147b
  4293d9:	shr    ebp,0x11
  4293dc:	imul   eax,ebp,0x64
  4293df:	sub    edx,eax
  4293e1:	movzx  eax,dx
  4293e4:	lea    rdx,[rip+0xfe05]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4293eb:	movzx  eax,WORD PTR [rdx+rax*2]
  4293ef:	mov    WORD PTR [rcx-0x2],ax
  4293f3:	add    rcx,0xfffffffffffffffe
  4293f7:	mov    eax,0x5
  4293fc:	movzx  edx,bp
  4293ff:	mov    esi,edx
  429401:	shr    esi,0x2
  429404:	imul   ebp,esi,0x147b
  42940a:	shr    ebp,0x11
  42940d:	imul   esi,ebp,0x64
  429410:	sub    edx,esi
  429412:	movzx  edx,dx
  429415:	lea    rsi,[rip+0xfdd4]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42941c:	movzx  edx,WORD PTR [rsi+rdx*2]
  429420:	mov    WORD PTR [rcx-0x2],dx
  429424:	add    rcx,0xfffffffffffffffe
  429428:	add    bpl,0x30
  42942c:	mov    BYTE PTR [rcx-0x1],bpl
  429430:	mov    eax,eax
  429432:	add    QWORD PTR [rbx+0x28],rax
  429436:	add    rsp,0x8
  42943a:	pop    rbx
  42943b:	pop    rbp
  42943c:	ret    
  42943d:	nop    DWORD PTR [rax]

0000000000429440 <flatcc_json_printer_uint32_struct_field@@Base>:
  429440:	push   rbp
  429441:	push   rbx
  429442:	push   rax
  429443:	mov    rbx,rdi
  429446:	mov    ebp,DWORD PTR [rdx+rcx*1]
  429449:	test   esi,esi
  42944b:	je     42945c <flatcc_json_printer_uint32_struct_field@@Base+0x1c>
  42944d:	mov    rax,QWORD PTR [rbx+0x28]
  429451:	lea    rcx,[rax+0x1]
  429455:	mov    QWORD PTR [rbx+0x28],rcx
  429459:	mov    BYTE PTR [rax],0x2c
  42945c:	movsxd rdx,r9d
  42945f:	mov    rdi,rbx
  429462:	mov    rsi,r8
  429465:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42946a:	mov    rsi,QWORD PTR [rbx+0x28]
  42946e:	mov    edi,ebp
  429470:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  429475:	cdqe   
  429477:	add    QWORD PTR [rbx+0x28],rax
  42947b:	add    rsp,0x8
  42947f:	pop    rbx
  429480:	pop    rbp
  429481:	ret    
  429482:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42948c:	nop    DWORD PTR [rax+0x0]

0000000000429490 <flatcc_json_printer_uint64_struct_field@@Base>:
  429490:	push   r14
  429492:	push   rbx
  429493:	push   rax
  429494:	mov    rbx,rdi
  429497:	mov    r14,QWORD PTR [rdx+rcx*1]
  42949b:	test   esi,esi
  42949d:	je     4294ae <flatcc_json_printer_uint64_struct_field@@Base+0x1e>
  42949f:	mov    rax,QWORD PTR [rbx+0x28]
  4294a3:	lea    rcx,[rax+0x1]
  4294a7:	mov    QWORD PTR [rbx+0x28],rcx
  4294ab:	mov    BYTE PTR [rax],0x2c
  4294ae:	movsxd rdx,r9d
  4294b1:	mov    rdi,rbx
  4294b4:	mov    rsi,r8
  4294b7:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4294bc:	mov    rsi,QWORD PTR [rbx+0x28]
  4294c0:	mov    rdi,r14
  4294c3:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  4294c8:	cdqe   
  4294ca:	add    QWORD PTR [rbx+0x28],rax
  4294ce:	add    rsp,0x8
  4294d2:	pop    rbx
  4294d3:	pop    r14
  4294d5:	ret    
  4294d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004294e0 <flatcc_json_printer_int8_struct_field@@Base>:
  4294e0:	push   r15
  4294e2:	push   r14
  4294e4:	push   rbx
  4294e5:	mov    r15,rdi
  4294e8:	mov    bl,BYTE PTR [rdx+rcx*1]
  4294eb:	movzx  r14d,bl
  4294ef:	test   esi,esi
  4294f1:	je     429502 <flatcc_json_printer_int8_struct_field@@Base+0x22>
  4294f3:	mov    rax,QWORD PTR [r15+0x28]
  4294f7:	lea    rcx,[rax+0x1]
  4294fb:	mov    QWORD PTR [r15+0x28],rcx
  4294ff:	mov    BYTE PTR [rax],0x2c
  429502:	movsxd rdx,r9d
  429505:	mov    rdi,r15
  429508:	mov    rsi,r8
  42950b:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429510:	mov    rax,QWORD PTR [r15+0x28]
  429514:	test   r14b,r14b
  429517:	jns    429521 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  429519:	mov    BYTE PTR [rax],0x2d
  42951c:	inc    rax
  42951f:	neg    bl
  429521:	shr    r14,0x7
  429525:	cmp    bl,0x64
  429528:	jb     42955d <flatcc_json_printer_int8_struct_field@@Base+0x7d>
  42952a:	mov    BYTE PTR [rax+0x3],0x0
  42952e:	movzx  ecx,bl
  429531:	lea    edx,[rcx+rcx*4]
  429534:	lea    ecx,[rcx+rdx*8]
  429537:	shr    ecx,0xc
  42953a:	imul   edx,ecx,0x64
  42953d:	sub    bl,dl
  42953f:	movzx  edx,bl
  429542:	lea    rsi,[rip+0xfca7]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429549:	movzx  edx,WORD PTR [rsi+rdx*2]
  42954d:	mov    WORD PTR [rax+0x1],dx
  429551:	or     cl,0x30
  429554:	mov    BYTE PTR [rax],cl
  429556:	mov    eax,0x3
  42955b:	jmp    42959d <flatcc_json_printer_int8_struct_field@@Base+0xbd>
  42955d:	cmp    bl,0xa
  429560:	jb     42958f <flatcc_json_printer_int8_struct_field@@Base+0xaf>
  429562:	mov    BYTE PTR [rax+0x2],0x0
  429566:	movzx  ecx,bl
  429569:	lea    edx,[rcx+rcx*4]
  42956c:	lea    ecx,[rcx+rdx*8]
  42956f:	shr    ecx,0xc
  429572:	imul   ecx,ecx,0x64
  429575:	sub    bl,cl
  429577:	movzx  ecx,bl
  42957a:	lea    rdx,[rip+0xfc6f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429581:	movzx  ecx,WORD PTR [rdx+rcx*2]
  429585:	mov    WORD PTR [rax],cx
  429588:	mov    eax,0x2
  42958d:	jmp    42959d <flatcc_json_printer_int8_struct_field@@Base+0xbd>
  42958f:	mov    BYTE PTR [rax+0x1],0x0
  429593:	add    bl,0x30
  429596:	mov    BYTE PTR [rax],bl
  429598:	mov    eax,0x1
  42959d:	add    rax,r14
  4295a0:	add    QWORD PTR [r15+0x28],rax
  4295a4:	pop    rbx
  4295a5:	pop    r14
  4295a7:	pop    r15
  4295a9:	ret    
  4295aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004295b0 <flatcc_json_printer_int16_struct_field@@Base>:
  4295b0:	push   rbp
  4295b1:	push   r14
  4295b3:	push   rbx
  4295b4:	mov    rbx,rdi
  4295b7:	movzx  ebp,WORD PTR [rdx+rcx*1]
  4295bb:	test   esi,esi
  4295bd:	je     4295ce <flatcc_json_printer_int16_struct_field@@Base+0x1e>
  4295bf:	mov    rax,QWORD PTR [rbx+0x28]
  4295c3:	lea    rcx,[rax+0x1]
  4295c7:	mov    QWORD PTR [rbx+0x28],rcx
  4295cb:	mov    BYTE PTR [rax],0x2c
  4295ce:	movzx  r14d,bp
  4295d2:	movsxd rdx,r9d
  4295d5:	mov    rdi,rbx
  4295d8:	mov    rsi,r8
  4295db:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4295e0:	mov    rsi,QWORD PTR [rbx+0x28]
  4295e4:	test   r14w,r14w
  4295e8:	jns    4295f2 <flatcc_json_printer_int16_struct_field@@Base+0x42>
  4295ea:	mov    BYTE PTR [rsi],0x2d
  4295ed:	inc    rsi
  4295f0:	neg    ebp
  4295f2:	shr    r14d,0xf
  4295f6:	movzx  edx,bp
  4295f9:	cmp    edx,0x3e8
  4295ff:	jb     429611 <flatcc_json_printer_int16_struct_field@@Base+0x61>
  429601:	xor    eax,eax
  429603:	cmp    edx,0x270f
  429609:	seta   al
  42960c:	or     eax,0x4
  42960f:	jmp    429637 <flatcc_json_printer_int16_struct_field@@Base+0x87>
  429611:	cmp    bp,0x64
  429615:	jb     42962c <flatcc_json_printer_int16_struct_field@@Base+0x7c>
  429617:	mov    BYTE PTR [rsi+0x3],0x0
  42961b:	add    rsi,0x3
  42961f:	mov    eax,0x3
  429624:	mov    rcx,rsi
  429627:	jmp    4296e3 <flatcc_json_printer_int16_struct_field@@Base+0x133>
  42962c:	xor    eax,eax
  42962e:	cmp    bp,0x9
  429632:	seta   al
  429635:	inc    eax
  429637:	mov    edi,eax
  429639:	lea    rcx,[rsi+rdi*1]
  42963d:	mov    BYTE PTR [rsi+rdi*1],0x0
  429641:	test   al,0x1
  429643:	jne    4296a6 <flatcc_json_printer_int16_struct_field@@Base+0xf6>
  429645:	cmp    eax,0x2
  429648:	je     42967c <flatcc_json_printer_int16_struct_field@@Base+0xcc>
  42964a:	cmp    eax,0x4
  42964d:	jne    429717 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  429653:	mov    esi,edx
  429655:	shr    esi,0x2
  429658:	imul   ebp,esi,0x147b
  42965e:	shr    ebp,0x11
  429661:	imul   esi,ebp,0x64
  429664:	sub    edx,esi
  429666:	movzx  edx,dx
  429669:	lea    rsi,[rip+0xfb80]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429670:	movzx  edx,WORD PTR [rsi+rdx*2]
  429674:	mov    WORD PTR [rcx-0x2],dx
  429678:	add    rcx,0xfffffffffffffffe
  42967c:	movzx  edx,bp
  42967f:	mov    esi,edx
  429681:	shr    esi,0x2
  429684:	imul   esi,esi,0x147b
  42968a:	shr    esi,0x11
  42968d:	imul   esi,esi,0x64
  429690:	sub    edx,esi
  429692:	movzx  edx,dx
  429695:	lea    rsi,[rip+0xfb54]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42969c:	movzx  edx,WORD PTR [rsi+rdx*2]
  4296a0:	mov    WORD PTR [rcx-0x2],dx
  4296a4:	jmp    429717 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  4296a6:	cmp    eax,0x1
  4296a9:	je     42970f <flatcc_json_printer_int16_struct_field@@Base+0x15f>
  4296ab:	cmp    eax,0x3
  4296ae:	je     4296e3 <flatcc_json_printer_int16_struct_field@@Base+0x133>
  4296b0:	cmp    eax,0x5
  4296b3:	jne    429717 <flatcc_json_printer_int16_struct_field@@Base+0x167>
  4296b5:	mov    eax,edx
  4296b7:	shr    eax,0x2
  4296ba:	imul   ebp,eax,0x147b
  4296c0:	shr    ebp,0x11
  4296c3:	imul   eax,ebp,0x64
  4296c6:	sub    edx,eax
  4296c8:	movzx  eax,dx
  4296cb:	lea    rdx,[rip+0xfb1e]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4296d2:	movzx  eax,WORD PTR [rdx+rax*2]
  4296d6:	mov    WORD PTR [rcx-0x2],ax
  4296da:	add    rcx,0xfffffffffffffffe
  4296de:	mov    eax,0x5
  4296e3:	movzx  edx,bp
  4296e6:	mov    esi,edx
  4296e8:	shr    esi,0x2
  4296eb:	imul   ebp,esi,0x147b
  4296f1:	shr    ebp,0x11
  4296f4:	imul   esi,ebp,0x64
  4296f7:	sub    edx,esi
  4296f9:	movzx  edx,dx
  4296fc:	lea    rsi,[rip+0xfaed]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429703:	movzx  edx,WORD PTR [rsi+rdx*2]
  429707:	mov    WORD PTR [rcx-0x2],dx
  42970b:	add    rcx,0xfffffffffffffffe
  42970f:	add    bpl,0x30
  429713:	mov    BYTE PTR [rcx-0x1],bpl
  429717:	add    eax,r14d
  42971a:	add    QWORD PTR [rbx+0x28],rax
  42971e:	pop    rbx
  42971f:	pop    r14
  429721:	pop    rbp
  429722:	ret    
  429723:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42972d:	nop    DWORD PTR [rax]

0000000000429730 <flatcc_json_printer_int32_struct_field@@Base>:
  429730:	push   rbp
  429731:	push   r14
  429733:	push   rbx
  429734:	mov    r14,rdi
  429737:	mov    ebx,DWORD PTR [rdx+rcx*1]
  42973a:	test   esi,esi
  42973c:	je     42974d <flatcc_json_printer_int32_struct_field@@Base+0x1d>
  42973e:	mov    rax,QWORD PTR [r14+0x28]
  429742:	lea    rcx,[rax+0x1]
  429746:	mov    QWORD PTR [r14+0x28],rcx
  42974a:	mov    BYTE PTR [rax],0x2c
  42974d:	movsxd rdx,r9d
  429750:	mov    rdi,r14
  429753:	mov    rsi,r8
  429756:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42975b:	mov    rsi,QWORD PTR [r14+0x28]
  42975f:	mov    ebp,ebx
  429761:	shr    ebp,0x1f
  429764:	test   ebx,ebx
  429766:	jns    429770 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  429768:	mov    BYTE PTR [rsi],0x2d
  42976b:	inc    rsi
  42976e:	neg    ebx
  429770:	mov    edi,ebx
  429772:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  429777:	add    eax,ebp
  429779:	cdqe   
  42977b:	add    QWORD PTR [r14+0x28],rax
  42977f:	pop    rbx
  429780:	pop    r14
  429782:	pop    rbp
  429783:	ret    
  429784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42978e:	xchg   ax,ax

0000000000429790 <flatcc_json_printer_int64_struct_field@@Base>:
  429790:	push   r15
  429792:	push   r14
  429794:	push   rbx
  429795:	mov    r14,rdi
  429798:	mov    r15,QWORD PTR [rdx+rcx*1]
  42979c:	test   esi,esi
  42979e:	je     4297af <flatcc_json_printer_int64_struct_field@@Base+0x1f>
  4297a0:	mov    rax,QWORD PTR [r14+0x28]
  4297a4:	lea    rcx,[rax+0x1]
  4297a8:	mov    QWORD PTR [r14+0x28],rcx
  4297ac:	mov    BYTE PTR [rax],0x2c
  4297af:	movsxd rdx,r9d
  4297b2:	mov    rdi,r14
  4297b5:	mov    rsi,r8
  4297b8:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4297bd:	mov    rsi,QWORD PTR [r14+0x28]
  4297c1:	mov    rbx,r15
  4297c4:	shr    rbx,0x3f
  4297c8:	test   r15,r15
  4297cb:	jns    4297d6 <flatcc_json_printer_int64_struct_field@@Base+0x46>
  4297cd:	mov    BYTE PTR [rsi],0x2d
  4297d0:	inc    rsi
  4297d3:	neg    r15
  4297d6:	mov    rdi,r15
  4297d9:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  4297de:	add    eax,ebx
  4297e0:	cdqe   
  4297e2:	add    QWORD PTR [r14+0x28],rax
  4297e6:	pop    rbx
  4297e7:	pop    r14
  4297e9:	pop    r15
  4297eb:	ret    
  4297ec:	nop    DWORD PTR [rax+0x0]

00000000004297f0 <flatcc_json_printer_bool_struct_field@@Base>:
  4297f0:	push   rbp
  4297f1:	push   rbx
  4297f2:	push   rax
  4297f3:	mov    rbx,rdi
  4297f6:	mov    bpl,BYTE PTR [rdx+rcx*1]
  4297fa:	test   esi,esi
  4297fc:	je     42980d <flatcc_json_printer_bool_struct_field@@Base+0x1d>
  4297fe:	mov    rax,QWORD PTR [rbx+0x28]
  429802:	lea    rcx,[rax+0x1]
  429806:	mov    QWORD PTR [rbx+0x28],rcx
  42980a:	mov    BYTE PTR [rax],0x2c
  42980d:	movsxd rdx,r9d
  429810:	mov    rdi,rbx
  429813:	mov    rsi,r8
  429816:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42981b:	mov    rax,QWORD PTR [rbx+0x28]
  42981f:	test   bpl,bpl
  429822:	je     429835 <flatcc_json_printer_bool_struct_field@@Base+0x45>
  429824:	mov    BYTE PTR [rax+0x4],0x0
  429828:	mov    DWORD PTR [rax],0x65757274
  42982e:	mov    eax,0x4
  429833:	jmp    429846 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  429835:	mov    WORD PTR [rax+0x4],0x65
  42983b:	mov    DWORD PTR [rax],0x736c6166
  429841:	mov    eax,0x5
  429846:	add    QWORD PTR [rbx+0x28],rax
  42984a:	add    rsp,0x8
  42984e:	pop    rbx
  42984f:	pop    rbp
  429850:	ret    
  429851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42985b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429860 <flatcc_json_printer_float_struct_field@@Base>:
  429860:	push   rbx
  429861:	sub    rsp,0x10
  429865:	mov    rbx,rdi
  429868:	vmovss xmm0,DWORD PTR [rdx+rcx*1]
  42986d:	vmovss DWORD PTR [rsp+0xc],xmm0
  429873:	test   esi,esi
  429875:	je     429886 <flatcc_json_printer_float_struct_field@@Base+0x26>
  429877:	mov    rax,QWORD PTR [rbx+0x28]
  42987b:	lea    rcx,[rax+0x1]
  42987f:	mov    QWORD PTR [rbx+0x28],rcx
  429883:	mov    BYTE PTR [rax],0x2c
  429886:	movsxd rdx,r9d
  429889:	mov    rdi,rbx
  42988c:	mov    rsi,r8
  42988f:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429894:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42989a:	vcvtss2sd xmm0,xmm0,xmm0
  42989e:	mov    rdi,QWORD PTR [rbx+0x28]
  4298a2:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  4298a7:	cdqe   
  4298a9:	add    QWORD PTR [rbx+0x28],rax
  4298ad:	add    rsp,0x10
  4298b1:	pop    rbx
  4298b2:	ret    
  4298b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298bd:	nop    DWORD PTR [rax]

00000000004298c0 <flatcc_json_printer_double_struct_field@@Base>:
  4298c0:	push   rbx
  4298c1:	sub    rsp,0x10
  4298c5:	mov    rbx,rdi
  4298c8:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  4298cd:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4298d3:	test   esi,esi
  4298d5:	je     4298e6 <flatcc_json_printer_double_struct_field@@Base+0x26>
  4298d7:	mov    rax,QWORD PTR [rbx+0x28]
  4298db:	lea    rcx,[rax+0x1]
  4298df:	mov    QWORD PTR [rbx+0x28],rcx
  4298e3:	mov    BYTE PTR [rax],0x2c
  4298e6:	movsxd rdx,r9d
  4298e9:	mov    rdi,rbx
  4298ec:	mov    rsi,r8
  4298ef:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4298f4:	mov    rdi,QWORD PTR [rbx+0x28]
  4298f8:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4298fe:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  429903:	cdqe   
  429905:	add    QWORD PTR [rbx+0x28],rax
  429909:	add    rsp,0x10
  42990d:	pop    rbx
  42990e:	ret    
  42990f:	nop

0000000000429910 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  429910:	push   r15
  429912:	push   r14
  429914:	push   rbx
  429915:	mov    r14,rdi
  429918:	mov    r15,QWORD PTR [rsp+0x20]
  42991d:	mov    bl,BYTE PTR [rdx+rcx*1]
  429920:	test   esi,esi
  429922:	je     429933 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x23>
  429924:	mov    rax,QWORD PTR [r14+0x28]
  429928:	lea    rcx,[rax+0x1]
  42992c:	mov    QWORD PTR [r14+0x28],rcx
  429930:	mov    BYTE PTR [rax],0x2c
  429933:	movsxd rdx,r9d
  429936:	mov    rdi,r14
  429939:	mov    rsi,r8
  42993c:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429941:	cmp    BYTE PTR [r14+0x33],0x0
  429946:	je     429984 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x74>
  429948:	mov    rax,QWORD PTR [r14+0x28]
  42994c:	cmp    bl,0x64
  42994f:	jb     429994 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x84>
  429951:	mov    BYTE PTR [rax+0x3],0x0
  429955:	movzx  ecx,bl
  429958:	lea    edx,[rcx+rcx*4]
  42995b:	lea    ecx,[rcx+rdx*8]
  42995e:	shr    ecx,0xc
  429961:	imul   edx,ecx,0x64
  429964:	sub    bl,dl
  429966:	movzx  edx,bl
  429969:	lea    rsi,[rip+0xf880]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429970:	movzx  edx,WORD PTR [rsi+rdx*2]
  429974:	mov    WORD PTR [rax+0x1],dx
  429978:	or     cl,0x30
  42997b:	mov    BYTE PTR [rax],cl
  42997d:	mov    eax,0x3
  429982:	jmp    4299d4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
  429984:	movzx  esi,bl
  429987:	mov    rdi,r14
  42998a:	mov    rax,r15
  42998d:	pop    rbx
  42998e:	pop    r14
  429990:	pop    r15
  429992:	jmp    rax
  429994:	cmp    bl,0xa
  429997:	jb     4299c6 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb6>
  429999:	mov    BYTE PTR [rax+0x2],0x0
  42999d:	movzx  ecx,bl
  4299a0:	lea    edx,[rcx+rcx*4]
  4299a3:	lea    ecx,[rcx+rdx*8]
  4299a6:	shr    ecx,0xc
  4299a9:	imul   ecx,ecx,0x64
  4299ac:	sub    bl,cl
  4299ae:	movzx  ecx,bl
  4299b1:	lea    rdx,[rip+0xf838]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4299b8:	movzx  ecx,WORD PTR [rdx+rcx*2]
  4299bc:	mov    WORD PTR [rax],cx
  4299bf:	mov    eax,0x2
  4299c4:	jmp    4299d4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
  4299c6:	mov    BYTE PTR [rax+0x1],0x0
  4299ca:	add    bl,0x30
  4299cd:	mov    BYTE PTR [rax],bl
  4299cf:	mov    eax,0x1
  4299d4:	add    QWORD PTR [r14+0x28],rax
  4299d8:	pop    rbx
  4299d9:	pop    r14
  4299db:	pop    r15
  4299dd:	ret    
  4299de:	xchg   ax,ax

00000000004299e0 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  4299e0:	push   rbp
  4299e1:	push   r14
  4299e3:	push   rbx
  4299e4:	mov    r14,rdi
  4299e7:	mov    rbx,QWORD PTR [rsp+0x20]
  4299ec:	movzx  ebp,WORD PTR [rdx+rcx*1]
  4299f0:	test   esi,esi
  4299f2:	je     429a03 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x23>
  4299f4:	mov    rax,QWORD PTR [r14+0x28]
  4299f8:	lea    rcx,[rax+0x1]
  4299fc:	mov    QWORD PTR [r14+0x28],rcx
  429a00:	mov    BYTE PTR [rax],0x2c
  429a03:	movsxd rdx,r9d
  429a06:	mov    rdi,r14
  429a09:	mov    rsi,r8
  429a0c:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429a11:	cmp    BYTE PTR [r14+0x33],0x0
  429a16:	je     429a37 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  429a18:	mov    rsi,QWORD PTR [r14+0x28]
  429a1c:	movzx  edx,bp
  429a1f:	cmp    edx,0x3e8
  429a25:	jb     429a46 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x66>
  429a27:	xor    eax,eax
  429a29:	cmp    edx,0x270f
  429a2f:	seta   al
  429a32:	or     eax,0x4
  429a35:	jmp    429a6c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x8c>
  429a37:	movzx  esi,bp
  429a3a:	mov    rdi,r14
  429a3d:	mov    rax,rbx
  429a40:	pop    rbx
  429a41:	pop    r14
  429a43:	pop    rbp
  429a44:	jmp    rax
  429a46:	cmp    bp,0x64
  429a4a:	jb     429a61 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x81>
  429a4c:	mov    BYTE PTR [rsi+0x3],0x0
  429a50:	add    rsi,0x3
  429a54:	mov    eax,0x3
  429a59:	mov    rcx,rsi
  429a5c:	jmp    429b18 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  429a61:	xor    eax,eax
  429a63:	cmp    bp,0x9
  429a67:	seta   al
  429a6a:	inc    eax
  429a6c:	mov    edi,eax
  429a6e:	lea    rcx,[rsi+rdi*1]
  429a72:	mov    BYTE PTR [rsi+rdi*1],0x0
  429a76:	test   al,0x1
  429a78:	jne    429adb <flatcc_json_printer_uint16_enum_struct_field@@Base+0xfb>
  429a7a:	cmp    eax,0x2
  429a7d:	je     429ab1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd1>
  429a7f:	cmp    eax,0x4
  429a82:	jne    429b4c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  429a88:	mov    esi,edx
  429a8a:	shr    esi,0x2
  429a8d:	imul   ebp,esi,0x147b
  429a93:	shr    ebp,0x11
  429a96:	imul   esi,ebp,0x64
  429a99:	sub    edx,esi
  429a9b:	movzx  edx,dx
  429a9e:	lea    rsi,[rip+0xf74b]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429aa5:	movzx  edx,WORD PTR [rsi+rdx*2]
  429aa9:	mov    WORD PTR [rcx-0x2],dx
  429aad:	add    rcx,0xfffffffffffffffe
  429ab1:	movzx  edx,bp
  429ab4:	mov    esi,edx
  429ab6:	shr    esi,0x2
  429ab9:	imul   esi,esi,0x147b
  429abf:	shr    esi,0x11
  429ac2:	imul   esi,esi,0x64
  429ac5:	sub    edx,esi
  429ac7:	movzx  edx,dx
  429aca:	lea    rsi,[rip+0xf71f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429ad1:	movzx  edx,WORD PTR [rsi+rdx*2]
  429ad5:	mov    WORD PTR [rcx-0x2],dx
  429ad9:	jmp    429b4c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  429adb:	cmp    eax,0x1
  429ade:	je     429b44 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x164>
  429ae0:	cmp    eax,0x3
  429ae3:	je     429b18 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  429ae5:	cmp    eax,0x5
  429ae8:	jne    429b4c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
  429aea:	mov    eax,edx
  429aec:	shr    eax,0x2
  429aef:	imul   ebp,eax,0x147b
  429af5:	shr    ebp,0x11
  429af8:	imul   eax,ebp,0x64
  429afb:	sub    edx,eax
  429afd:	movzx  eax,dx
  429b00:	lea    rdx,[rip+0xf6e9]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429b07:	movzx  eax,WORD PTR [rdx+rax*2]
  429b0b:	mov    WORD PTR [rcx-0x2],ax
  429b0f:	add    rcx,0xfffffffffffffffe
  429b13:	mov    eax,0x5
  429b18:	movzx  edx,bp
  429b1b:	mov    esi,edx
  429b1d:	shr    esi,0x2
  429b20:	imul   ebp,esi,0x147b
  429b26:	shr    ebp,0x11
  429b29:	imul   esi,ebp,0x64
  429b2c:	sub    edx,esi
  429b2e:	movzx  edx,dx
  429b31:	lea    rsi,[rip+0xf6b8]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429b38:	movzx  edx,WORD PTR [rsi+rdx*2]
  429b3c:	mov    WORD PTR [rcx-0x2],dx
  429b40:	add    rcx,0xfffffffffffffffe
  429b44:	add    bpl,0x30
  429b48:	mov    BYTE PTR [rcx-0x1],bpl
  429b4c:	mov    eax,eax
  429b4e:	add    QWORD PTR [r14+0x28],rax
  429b52:	pop    rbx
  429b53:	pop    r14
  429b55:	pop    rbp
  429b56:	ret    
  429b57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429b60 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  429b60:	push   rbp
  429b61:	push   r14
  429b63:	push   rbx
  429b64:	mov    rbx,rdi
  429b67:	mov    r14,QWORD PTR [rsp+0x20]
  429b6c:	mov    ebp,DWORD PTR [rdx+rcx*1]
  429b6f:	test   esi,esi
  429b71:	je     429b82 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x22>
  429b73:	mov    rax,QWORD PTR [rbx+0x28]
  429b77:	lea    rcx,[rax+0x1]
  429b7b:	mov    QWORD PTR [rbx+0x28],rcx
  429b7f:	mov    BYTE PTR [rax],0x2c
  429b82:	movsxd rdx,r9d
  429b85:	mov    rdi,rbx
  429b88:	mov    rsi,r8
  429b8b:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429b90:	cmp    BYTE PTR [rbx+0x33],0x0
  429b94:	je     429bac <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
  429b96:	mov    rsi,QWORD PTR [rbx+0x28]
  429b9a:	mov    edi,ebp
  429b9c:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  429ba1:	cdqe   
  429ba3:	add    QWORD PTR [rbx+0x28],rax
  429ba7:	pop    rbx
  429ba8:	pop    r14
  429baa:	pop    rbp
  429bab:	ret    
  429bac:	mov    rdi,rbx
  429baf:	mov    esi,ebp
  429bb1:	mov    rax,r14
  429bb4:	pop    rbx
  429bb5:	pop    r14
  429bb7:	pop    rbp
  429bb8:	jmp    rax
  429bba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429bc0 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  429bc0:	push   r15
  429bc2:	push   r14
  429bc4:	push   rbx
  429bc5:	mov    rbx,rdi
  429bc8:	mov    r15,QWORD PTR [rsp+0x20]
  429bcd:	mov    r14,QWORD PTR [rdx+rcx*1]
  429bd1:	test   esi,esi
  429bd3:	je     429be4 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x24>
  429bd5:	mov    rax,QWORD PTR [rbx+0x28]
  429bd9:	lea    rcx,[rax+0x1]
  429bdd:	mov    QWORD PTR [rbx+0x28],rcx
  429be1:	mov    BYTE PTR [rax],0x2c
  429be4:	movsxd rdx,r9d
  429be7:	mov    rdi,rbx
  429bea:	mov    rsi,r8
  429bed:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429bf2:	cmp    BYTE PTR [rbx+0x33],0x0
  429bf6:	je     429c10 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
  429bf8:	mov    rsi,QWORD PTR [rbx+0x28]
  429bfc:	mov    rdi,r14
  429bff:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  429c04:	cdqe   
  429c06:	add    QWORD PTR [rbx+0x28],rax
  429c0a:	pop    rbx
  429c0b:	pop    r14
  429c0d:	pop    r15
  429c0f:	ret    
  429c10:	mov    rdi,rbx
  429c13:	mov    rsi,r14
  429c16:	mov    rax,r15
  429c19:	pop    rbx
  429c1a:	pop    r14
  429c1c:	pop    r15
  429c1e:	jmp    rax

0000000000429c20 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  429c20:	push   r15
  429c22:	push   r14
  429c24:	push   rbx
  429c25:	mov    r14,rdi
  429c28:	mov    r15,QWORD PTR [rsp+0x20]
  429c2d:	mov    bl,BYTE PTR [rdx+rcx*1]
  429c30:	test   esi,esi
  429c32:	je     429c43 <flatcc_json_printer_int8_enum_struct_field@@Base+0x23>
  429c34:	mov    rax,QWORD PTR [r14+0x28]
  429c38:	lea    rcx,[rax+0x1]
  429c3c:	mov    QWORD PTR [r14+0x28],rcx
  429c40:	mov    BYTE PTR [rax],0x2c
  429c43:	movsxd rdx,r9d
  429c46:	mov    rdi,r14
  429c49:	mov    rsi,r8
  429c4c:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429c51:	cmp    BYTE PTR [r14+0x33],0x0
  429c56:	je     429ca8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x88>
  429c58:	movzx  eax,bl
  429c5b:	mov    rcx,QWORD PTR [r14+0x28]
  429c5f:	test   al,al
  429c61:	jns    429c6b <flatcc_json_printer_int8_enum_struct_field@@Base+0x4b>
  429c63:	mov    BYTE PTR [rcx],0x2d
  429c66:	inc    rcx
  429c69:	neg    bl
  429c6b:	shr    rax,0x7
  429c6f:	cmp    bl,0x64
  429c72:	jb     429cb8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x98>
  429c74:	mov    BYTE PTR [rcx+0x3],0x0
  429c78:	movzx  edx,bl
  429c7b:	lea    esi,[rdx+rdx*4]
  429c7e:	lea    edx,[rdx+rsi*8]
  429c81:	shr    edx,0xc
  429c84:	imul   esi,edx,0x64
  429c87:	sub    bl,sil
  429c8a:	movzx  esi,bl
  429c8d:	lea    rdi,[rip+0xf55c]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429c94:	movzx  esi,WORD PTR [rdi+rsi*2]
  429c98:	mov    WORD PTR [rcx+0x1],si
  429c9c:	or     dl,0x30
  429c9f:	mov    BYTE PTR [rcx],dl
  429ca1:	mov    ecx,0x3
  429ca6:	jmp    429cf8 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
  429ca8:	movsx  esi,bl
  429cab:	mov    rdi,r14
  429cae:	mov    rax,r15
  429cb1:	pop    rbx
  429cb2:	pop    r14
  429cb4:	pop    r15
  429cb6:	jmp    rax
  429cb8:	cmp    bl,0xa
  429cbb:	jb     429cea <flatcc_json_printer_int8_enum_struct_field@@Base+0xca>
  429cbd:	mov    BYTE PTR [rcx+0x2],0x0
  429cc1:	movzx  edx,bl
  429cc4:	lea    esi,[rdx+rdx*4]
  429cc7:	lea    edx,[rdx+rsi*8]
  429cca:	shr    edx,0xc
  429ccd:	imul   edx,edx,0x64
  429cd0:	sub    bl,dl
  429cd2:	movzx  edx,bl
  429cd5:	lea    rsi,[rip+0xf514]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429cdc:	movzx  edx,WORD PTR [rsi+rdx*2]
  429ce0:	mov    WORD PTR [rcx],dx
  429ce3:	mov    ecx,0x2
  429ce8:	jmp    429cf8 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
  429cea:	mov    BYTE PTR [rcx+0x1],0x0
  429cee:	add    bl,0x30
  429cf1:	mov    BYTE PTR [rcx],bl
  429cf3:	mov    ecx,0x1
  429cf8:	add    rcx,rax
  429cfb:	add    QWORD PTR [r14+0x28],rcx
  429cff:	pop    rbx
  429d00:	pop    r14
  429d02:	pop    r15
  429d04:	ret    
  429d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d0f:	nop

0000000000429d10 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  429d10:	push   rbp
  429d11:	push   r14
  429d13:	push   rbx
  429d14:	mov    r14,rdi
  429d17:	mov    rbx,QWORD PTR [rsp+0x20]
  429d1c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  429d20:	test   esi,esi
  429d22:	je     429d33 <flatcc_json_printer_int16_enum_struct_field@@Base+0x23>
  429d24:	mov    rax,QWORD PTR [r14+0x28]
  429d28:	lea    rcx,[rax+0x1]
  429d2c:	mov    QWORD PTR [r14+0x28],rcx
  429d30:	mov    BYTE PTR [rax],0x2c
  429d33:	movsxd rdx,r9d
  429d36:	mov    rdi,r14
  429d39:	mov    rsi,r8
  429d3c:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429d41:	cmp    BYTE PTR [r14+0x33],0x0
  429d46:	je     429d7d <flatcc_json_printer_int16_enum_struct_field@@Base+0x6d>
  429d48:	movzx  r8d,bp
  429d4c:	mov    rdi,QWORD PTR [r14+0x28]
  429d50:	test   r8w,r8w
  429d54:	jns    429d5e <flatcc_json_printer_int16_enum_struct_field@@Base+0x4e>
  429d56:	mov    BYTE PTR [rdi],0x2d
  429d59:	inc    rdi
  429d5c:	neg    ebp
  429d5e:	shr    r8d,0xf
  429d62:	movzx  esi,bp
  429d65:	cmp    esi,0x3e8
  429d6b:	jb     429d8c <flatcc_json_printer_int16_enum_struct_field@@Base+0x7c>
  429d6d:	xor    ecx,ecx
  429d6f:	cmp    esi,0x270f
  429d75:	seta   cl
  429d78:	or     ecx,0x4
  429d7b:	jmp    429db2 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa2>
  429d7d:	movsx  esi,bp
  429d80:	mov    rdi,r14
  429d83:	mov    rax,rbx
  429d86:	pop    rbx
  429d87:	pop    r14
  429d89:	pop    rbp
  429d8a:	jmp    rax
  429d8c:	cmp    bp,0x64
  429d90:	jb     429da7 <flatcc_json_printer_int16_enum_struct_field@@Base+0x97>
  429d92:	mov    BYTE PTR [rdi+0x3],0x0
  429d96:	add    rdi,0x3
  429d9a:	mov    ecx,0x3
  429d9f:	mov    rdx,rdi
  429da2:	jmp    429e5f <flatcc_json_printer_int16_enum_struct_field@@Base+0x14f>
  429da7:	xor    ecx,ecx
  429da9:	cmp    bp,0x9
  429dad:	seta   cl
  429db0:	inc    ecx
  429db2:	mov    eax,ecx
  429db4:	lea    rdx,[rdi+rax*1]
  429db8:	mov    BYTE PTR [rdi+rax*1],0x0
  429dbc:	test   cl,0x1
  429dbf:	jne    429e22 <flatcc_json_printer_int16_enum_struct_field@@Base+0x112>
  429dc1:	cmp    ecx,0x2
  429dc4:	je     429df8 <flatcc_json_printer_int16_enum_struct_field@@Base+0xe8>
  429dc6:	cmp    ecx,0x4
  429dc9:	jne    429e93 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  429dcf:	mov    eax,esi
  429dd1:	shr    eax,0x2
  429dd4:	imul   ebp,eax,0x147b
  429dda:	shr    ebp,0x11
  429ddd:	imul   eax,ebp,0x64
  429de0:	sub    esi,eax
  429de2:	movzx  eax,si
  429de5:	lea    rsi,[rip+0xf404]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429dec:	movzx  eax,WORD PTR [rsi+rax*2]
  429df0:	mov    WORD PTR [rdx-0x2],ax
  429df4:	add    rdx,0xfffffffffffffffe
  429df8:	movzx  eax,bp
  429dfb:	mov    esi,eax
  429dfd:	shr    esi,0x2
  429e00:	imul   esi,esi,0x147b
  429e06:	shr    esi,0x11
  429e09:	imul   esi,esi,0x64
  429e0c:	sub    eax,esi
  429e0e:	movzx  eax,ax
  429e11:	lea    rsi,[rip+0xf3d8]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429e18:	movzx  eax,WORD PTR [rsi+rax*2]
  429e1c:	mov    WORD PTR [rdx-0x2],ax
  429e20:	jmp    429e93 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  429e22:	cmp    ecx,0x1
  429e25:	je     429e8b <flatcc_json_printer_int16_enum_struct_field@@Base+0x17b>
  429e27:	cmp    ecx,0x3
  429e2a:	je     429e5f <flatcc_json_printer_int16_enum_struct_field@@Base+0x14f>
  429e2c:	cmp    ecx,0x5
  429e2f:	jne    429e93 <flatcc_json_printer_int16_enum_struct_field@@Base+0x183>
  429e31:	mov    eax,esi
  429e33:	shr    eax,0x2
  429e36:	imul   ebp,eax,0x147b
  429e3c:	shr    ebp,0x11
  429e3f:	imul   eax,ebp,0x64
  429e42:	sub    esi,eax
  429e44:	movzx  eax,si
  429e47:	lea    rcx,[rip+0xf3a2]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429e4e:	movzx  eax,WORD PTR [rcx+rax*2]
  429e52:	mov    WORD PTR [rdx-0x2],ax
  429e56:	add    rdx,0xfffffffffffffffe
  429e5a:	mov    ecx,0x5
  429e5f:	movzx  eax,bp
  429e62:	mov    esi,eax
  429e64:	shr    esi,0x2
  429e67:	imul   ebp,esi,0x147b
  429e6d:	shr    ebp,0x11
  429e70:	imul   esi,ebp,0x64
  429e73:	sub    eax,esi
  429e75:	movzx  eax,ax
  429e78:	lea    rsi,[rip+0xf371]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  429e7f:	movzx  eax,WORD PTR [rsi+rax*2]
  429e83:	mov    WORD PTR [rdx-0x2],ax
  429e87:	add    rdx,0xfffffffffffffffe
  429e8b:	add    bpl,0x30
  429e8f:	mov    BYTE PTR [rdx-0x1],bpl
  429e93:	add    ecx,r8d
  429e96:	add    QWORD PTR [r14+0x28],rcx
  429e9a:	pop    rbx
  429e9b:	pop    r14
  429e9d:	pop    rbp
  429e9e:	ret    
  429e9f:	nop

0000000000429ea0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  429ea0:	push   rbp
  429ea1:	push   r14
  429ea3:	push   rbx
  429ea4:	mov    rbx,rdi
  429ea7:	mov    r14,QWORD PTR [rsp+0x20]
  429eac:	mov    ebp,DWORD PTR [rdx+rcx*1]
  429eaf:	test   esi,esi
  429eb1:	je     429ec2 <flatcc_json_printer_int32_enum_struct_field@@Base+0x22>
  429eb3:	mov    rax,QWORD PTR [rbx+0x28]
  429eb7:	lea    rcx,[rax+0x1]
  429ebb:	mov    QWORD PTR [rbx+0x28],rcx
  429ebf:	mov    BYTE PTR [rax],0x2c
  429ec2:	movsxd rdx,r9d
  429ec5:	mov    rdi,rbx
  429ec8:	mov    rsi,r8
  429ecb:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429ed0:	cmp    BYTE PTR [rbx+0x33],0x0
  429ed4:	je     429f02 <flatcc_json_printer_int32_enum_struct_field@@Base+0x62>
  429ed6:	mov    rsi,QWORD PTR [rbx+0x28]
  429eda:	mov    r14d,ebp
  429edd:	shr    r14d,0x1f
  429ee1:	test   ebp,ebp
  429ee3:	jns    429eed <flatcc_json_printer_int32_enum_struct_field@@Base+0x4d>
  429ee5:	mov    BYTE PTR [rsi],0x2d
  429ee8:	inc    rsi
  429eeb:	neg    ebp
  429eed:	mov    edi,ebp
  429eef:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  429ef4:	add    eax,r14d
  429ef7:	cdqe   
  429ef9:	add    QWORD PTR [rbx+0x28],rax
  429efd:	pop    rbx
  429efe:	pop    r14
  429f00:	pop    rbp
  429f01:	ret    
  429f02:	mov    rdi,rbx
  429f05:	mov    esi,ebp
  429f07:	mov    rax,r14
  429f0a:	pop    rbx
  429f0b:	pop    r14
  429f0d:	pop    rbp
  429f0e:	jmp    rax

0000000000429f10 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  429f10:	push   r15
  429f12:	push   r14
  429f14:	push   rbx
  429f15:	mov    rbx,rdi
  429f18:	mov    r15,QWORD PTR [rsp+0x20]
  429f1d:	mov    r14,QWORD PTR [rdx+rcx*1]
  429f21:	test   esi,esi
  429f23:	je     429f34 <flatcc_json_printer_int64_enum_struct_field@@Base+0x24>
  429f25:	mov    rax,QWORD PTR [rbx+0x28]
  429f29:	lea    rcx,[rax+0x1]
  429f2d:	mov    QWORD PTR [rbx+0x28],rcx
  429f31:	mov    BYTE PTR [rax],0x2c
  429f34:	movsxd rdx,r9d
  429f37:	mov    rdi,rbx
  429f3a:	mov    rsi,r8
  429f3d:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429f42:	cmp    BYTE PTR [rbx+0x33],0x0
  429f46:	je     429f78 <flatcc_json_printer_int64_enum_struct_field@@Base+0x68>
  429f48:	mov    rsi,QWORD PTR [rbx+0x28]
  429f4c:	mov    r15,r14
  429f4f:	shr    r15,0x3f
  429f53:	test   r14,r14
  429f56:	jns    429f61 <flatcc_json_printer_int64_enum_struct_field@@Base+0x51>
  429f58:	mov    BYTE PTR [rsi],0x2d
  429f5b:	inc    rsi
  429f5e:	neg    r14
  429f61:	mov    rdi,r14
  429f64:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  429f69:	add    eax,r15d
  429f6c:	cdqe   
  429f6e:	add    QWORD PTR [rbx+0x28],rax
  429f72:	pop    rbx
  429f73:	pop    r14
  429f75:	pop    r15
  429f77:	ret    
  429f78:	mov    rdi,rbx
  429f7b:	mov    rsi,r14
  429f7e:	mov    rax,r15
  429f81:	pop    rbx
  429f82:	pop    r14
  429f84:	pop    r15
  429f86:	jmp    rax
  429f88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429f90 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  429f90:	push   rbp
  429f91:	push   r14
  429f93:	push   rbx
  429f94:	mov    rbx,rdi
  429f97:	mov    r14,QWORD PTR [rsp+0x20]
  429f9c:	mov    bpl,BYTE PTR [rdx+rcx*1]
  429fa0:	test   esi,esi
  429fa2:	je     429fb3 <flatcc_json_printer_bool_enum_struct_field@@Base+0x23>
  429fa4:	mov    rax,QWORD PTR [rbx+0x28]
  429fa8:	lea    rcx,[rax+0x1]
  429fac:	mov    QWORD PTR [rbx+0x28],rcx
  429fb0:	mov    BYTE PTR [rax],0x2c
  429fb3:	movsxd rdx,r9d
  429fb6:	mov    rdi,rbx
  429fb9:	mov    rsi,r8
  429fbc:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  429fc1:	cmp    BYTE PTR [rbx+0x33],0x0
  429fc5:	je     429fe1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x51>
  429fc7:	mov    rax,QWORD PTR [rbx+0x28]
  429fcb:	test   bpl,bpl
  429fce:	je     429ff1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x61>
  429fd0:	mov    BYTE PTR [rax+0x4],0x0
  429fd4:	mov    DWORD PTR [rax],0x65757274
  429fda:	mov    eax,0x4
  429fdf:	jmp    42a002 <flatcc_json_printer_bool_enum_struct_field@@Base+0x72>
  429fe1:	movzx  esi,bpl
  429fe5:	mov    rdi,rbx
  429fe8:	mov    rax,r14
  429feb:	pop    rbx
  429fec:	pop    r14
  429fee:	pop    rbp
  429fef:	jmp    rax
  429ff1:	mov    WORD PTR [rax+0x4],0x65
  429ff7:	mov    DWORD PTR [rax],0x736c6166
  429ffd:	mov    eax,0x5
  42a002:	add    QWORD PTR [rbx+0x28],rax
  42a006:	pop    rbx
  42a007:	pop    r14
  42a009:	pop    rbp
  42a00a:	ret    
  42a00b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a010 <flatcc_json_printer_utype_vector_field@@Base>:
  42a010:	push   rbp
  42a011:	push   r15
  42a013:	push   r14
  42a015:	push   r13
  42a017:	push   r12
  42a019:	push   rbx
  42a01a:	push   rax
  42a01b:	lea    eax,[rdx+rdx*1]
  42a01e:	add    eax,0x4
  42a021:	cmp    eax,DWORD PTR [rsi+0x10]
  42a024:	jge    42a42e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42a02a:	mov    rdx,QWORD PTR [rsi+0x8]
  42a02e:	mov    eax,eax
  42a030:	movzx  r12d,WORD PTR [rdx+rax*1]
  42a035:	test   r12,r12
  42a038:	je     42a42e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42a03e:	add    r12,QWORD PTR [rsi]
  42a041:	je     42a42e <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42a047:	mov    r15,rdi
  42a04a:	mov    eax,DWORD PTR [rsi+0x18]
  42a04d:	lea    edx,[rax+0x1]
  42a050:	mov    DWORD PTR [rsi+0x18],edx
  42a053:	test   eax,eax
  42a055:	je     42a066 <flatcc_json_printer_utype_vector_field@@Base+0x56>
  42a057:	mov    rax,QWORD PTR [r15+0x28]
  42a05b:	lea    rdx,[rax+0x1]
  42a05f:	mov    QWORD PTR [r15+0x28],rdx
  42a063:	mov    BYTE PTR [rax],0x2c
  42a066:	mov    ebx,DWORD PTR [r12]
  42a06a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42a06e:	movsxd rdx,r8d
  42a071:	mov    rdi,r15
  42a074:	mov    rsi,rcx
  42a077:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42a07c:	inc    DWORD PTR [r15+0x38]
  42a080:	mov    rax,QWORD PTR [r15+0x28]
  42a084:	lea    rcx,[rax+0x1]
  42a088:	mov    QWORD PTR [r15+0x28],rcx
  42a08c:	mov    BYTE PTR [rax],0x5b
  42a08f:	test   ebp,ebp
  42a091:	je     42a374 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42a097:	add    r12,rbx
  42a09a:	cmp    BYTE PTR [r15+0x31],0x0
  42a09f:	mov    r14,QWORD PTR [r15+0x28]
  42a0a3:	je     42a144 <flatcc_json_printer_utype_vector_field@@Base+0x134>
  42a0a9:	lea    rax,[r14+0x1]
  42a0ad:	mov    QWORD PTR [r15+0x28],rax
  42a0b1:	mov    BYTE PTR [r14],0xa
  42a0b5:	movsxd rax,DWORD PTR [r15+0x38]
  42a0b9:	movzx  r14d,BYTE PTR [r15+0x31]
  42a0be:	imul   r14,rax
  42a0c2:	mov    rbx,QWORD PTR [r15+0x20]
  42a0c6:	mov    rdi,QWORD PTR [r15+0x28]
  42a0ca:	lea    rax,[rdi+r14*1]
  42a0ce:	cmp    rax,rbx
  42a0d1:	jbe    42a12d <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42a0d3:	cmp    rdi,rbx
  42a0d6:	jb     42a0e9 <flatcc_json_printer_utype_vector_field@@Base+0xd9>
  42a0d8:	mov    rdi,r15
  42a0db:	xor    esi,esi
  42a0dd:	call   QWORD PTR [r15+0x48]
  42a0e1:	mov    rbx,QWORD PTR [r15+0x20]
  42a0e5:	mov    rdi,QWORD PTR [r15+0x28]
  42a0e9:	sub    rbx,rdi
  42a0ec:	cmp    rbx,r14
  42a0ef:	jae    42a12d <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42a0f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a100:	mov    esi,0x20
  42a105:	mov    rdx,rbx
  42a108:	call   406080 <memset@plt>
  42a10d:	add    QWORD PTR [r15+0x28],rbx
  42a111:	sub    r14,rbx
  42a114:	mov    rdi,r15
  42a117:	xor    esi,esi
  42a119:	call   QWORD PTR [r15+0x48]
  42a11d:	mov    rbx,QWORD PTR [r15+0x20]
  42a121:	mov    rdi,QWORD PTR [r15+0x28]
  42a125:	sub    rbx,rdi
  42a128:	cmp    r14,rbx
  42a12b:	ja     42a100 <flatcc_json_printer_utype_vector_field@@Base+0xf0>
  42a12d:	mov    esi,0x20
  42a132:	mov    rdx,r14
  42a135:	call   406080 <memset@plt>
  42a13a:	add    r14,QWORD PTR [r15+0x28]
  42a13e:	mov    QWORD PTR [r15+0x28],r14
  42a142:	jmp    42a157 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42a144:	cmp    r14,QWORD PTR [r15+0x20]
  42a148:	jb     42a157 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42a14a:	mov    rdi,r15
  42a14d:	xor    esi,esi
  42a14f:	call   QWORD PTR [r15+0x48]
  42a153:	mov    r14,QWORD PTR [r15+0x28]
  42a157:	mov    al,BYTE PTR [r12+0x4]
  42a15c:	cmp    al,0x64
  42a15e:	jb     42a196 <flatcc_json_printer_utype_vector_field@@Base+0x186>
  42a160:	mov    BYTE PTR [r14+0x3],0x0
  42a165:	movzx  ecx,al
  42a168:	lea    edx,[rcx+rcx*4]
  42a16b:	lea    ecx,[rcx+rdx*8]
  42a16e:	shr    ecx,0xc
  42a171:	imul   edx,ecx,0x64
  42a174:	sub    al,dl
  42a176:	movzx  eax,al
  42a179:	lea    rdx,[rip+0xf070]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a180:	movzx  eax,WORD PTR [rdx+rax*2]
  42a184:	mov    WORD PTR [r14+0x1],ax
  42a189:	or     cl,0x30
  42a18c:	mov    BYTE PTR [r14],cl
  42a18f:	mov    eax,0x3
  42a194:	jmp    42a1d8 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
  42a196:	cmp    al,0xa
  42a198:	jb     42a1c9 <flatcc_json_printer_utype_vector_field@@Base+0x1b9>
  42a19a:	mov    BYTE PTR [r14+0x2],0x0
  42a19f:	movzx  ecx,al
  42a1a2:	lea    edx,[rcx+rcx*4]
  42a1a5:	lea    ecx,[rcx+rdx*8]
  42a1a8:	shr    ecx,0xc
  42a1ab:	imul   ecx,ecx,0x64
  42a1ae:	sub    al,cl
  42a1b0:	movzx  eax,al
  42a1b3:	lea    rcx,[rip+0xf036]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a1ba:	movzx  eax,WORD PTR [rcx+rax*2]
  42a1be:	mov    WORD PTR [r14],ax
  42a1c2:	mov    eax,0x2
  42a1c7:	jmp    42a1d8 <flatcc_json_printer_utype_vector_field@@Base+0x1c8>
  42a1c9:	mov    BYTE PTR [r14+0x1],0x0
  42a1ce:	add    al,0x30
  42a1d0:	mov    BYTE PTR [r14],al
  42a1d3:	mov    eax,0x1
  42a1d8:	add    QWORD PTR [r15+0x28],rax
  42a1dc:	dec    ebp
  42a1de:	je     42a374 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42a1e4:	add    r12,0x5
  42a1e8:	mov    rax,QWORD PTR [r15+0x28]
  42a1ec:	lea    r13,[rip+0xeffd]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a1f3:	jmp    42a242 <flatcc_json_printer_utype_vector_field@@Base+0x232>
  42a1f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a1ff:	nop
  42a200:	mov    BYTE PTR [r14+0x3],0x0
  42a205:	movzx  ecx,al
  42a208:	lea    edx,[rcx+rcx*4]
  42a20b:	lea    ecx,[rcx+rdx*8]
  42a20e:	shr    ecx,0xc
  42a211:	imul   edx,ecx,0x64
  42a214:	sub    al,dl
  42a216:	movzx  eax,al
  42a219:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42a21f:	mov    WORD PTR [r14+0x1],ax
  42a224:	or     cl,0x30
  42a227:	mov    BYTE PTR [r14],cl
  42a22a:	mov    eax,0x3
  42a22f:	add    rax,QWORD PTR [r15+0x28]
  42a233:	mov    QWORD PTR [r15+0x28],rax
  42a237:	inc    r12
  42a23a:	test   ebp,ebp
  42a23c:	je     42a374 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42a242:	lea    rcx,[rax+0x1]
  42a246:	mov    QWORD PTR [r15+0x28],rcx
  42a24a:	mov    BYTE PTR [rax],0x2c
  42a24d:	cmp    BYTE PTR [r15+0x31],0x0
  42a252:	mov    r14,QWORD PTR [r15+0x28]
  42a256:	je     42a300 <flatcc_json_printer_utype_vector_field@@Base+0x2f0>
  42a25c:	lea    rax,[r14+0x1]
  42a260:	mov    QWORD PTR [r15+0x28],rax
  42a264:	mov    BYTE PTR [r14],0xa
  42a268:	movsxd rax,DWORD PTR [r15+0x38]
  42a26c:	movzx  r14d,BYTE PTR [r15+0x31]
  42a271:	imul   r14,rax
  42a275:	mov    rbx,QWORD PTR [r15+0x20]
  42a279:	mov    rdi,QWORD PTR [r15+0x28]
  42a27d:	lea    rax,[rdi+r14*1]
  42a281:	cmp    rax,rbx
  42a284:	jbe    42a2dd <flatcc_json_printer_utype_vector_field@@Base+0x2cd>
  42a286:	cmp    rdi,rbx
  42a289:	jb     42a29c <flatcc_json_printer_utype_vector_field@@Base+0x28c>
  42a28b:	mov    rdi,r15
  42a28e:	xor    esi,esi
  42a290:	call   QWORD PTR [r15+0x48]
  42a294:	mov    rbx,QWORD PTR [r15+0x20]
  42a298:	mov    rdi,QWORD PTR [r15+0x28]
  42a29c:	sub    rbx,rdi
  42a29f:	cmp    rbx,r14
  42a2a2:	jae    42a2dd <flatcc_json_printer_utype_vector_field@@Base+0x2cd>
  42a2a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a2ae:	xchg   ax,ax
  42a2b0:	mov    esi,0x20
  42a2b5:	mov    rdx,rbx
  42a2b8:	call   406080 <memset@plt>
  42a2bd:	add    QWORD PTR [r15+0x28],rbx
  42a2c1:	sub    r14,rbx
  42a2c4:	mov    rdi,r15
  42a2c7:	xor    esi,esi
  42a2c9:	call   QWORD PTR [r15+0x48]
  42a2cd:	mov    rbx,QWORD PTR [r15+0x20]
  42a2d1:	mov    rdi,QWORD PTR [r15+0x28]
  42a2d5:	sub    rbx,rdi
  42a2d8:	cmp    r14,rbx
  42a2db:	ja     42a2b0 <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
  42a2dd:	mov    esi,0x20
  42a2e2:	mov    rdx,r14
  42a2e5:	call   406080 <memset@plt>
  42a2ea:	add    r14,QWORD PTR [r15+0x28]
  42a2ee:	mov    QWORD PTR [r15+0x28],r14
  42a2f2:	jmp    42a320 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42a2f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a2fe:	xchg   ax,ax
  42a300:	cmp    r14,QWORD PTR [r15+0x20]
  42a304:	jb     42a320 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42a306:	mov    rdi,r15
  42a309:	xor    esi,esi
  42a30b:	call   QWORD PTR [r15+0x48]
  42a30f:	mov    r14,QWORD PTR [r15+0x28]
  42a313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a31d:	nop    DWORD PTR [rax]
  42a320:	dec    ebp
  42a322:	mov    al,BYTE PTR [r12]
  42a326:	cmp    al,0x64
  42a328:	jae    42a200 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
  42a32e:	cmp    al,0xa
  42a330:	jb     42a360 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42a332:	mov    BYTE PTR [r14+0x2],0x0
  42a337:	movzx  ecx,al
  42a33a:	lea    edx,[rcx+rcx*4]
  42a33d:	lea    ecx,[rcx+rdx*8]
  42a340:	shr    ecx,0xc
  42a343:	imul   ecx,ecx,0x64
  42a346:	sub    al,cl
  42a348:	movzx  eax,al
  42a34b:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42a351:	mov    WORD PTR [r14],ax
  42a355:	mov    eax,0x2
  42a35a:	jmp    42a22f <flatcc_json_printer_utype_vector_field@@Base+0x21f>
  42a35f:	nop
  42a360:	mov    BYTE PTR [r14+0x1],0x0
  42a365:	add    al,0x30
  42a367:	mov    BYTE PTR [r14],al
  42a36a:	mov    eax,0x1
  42a36f:	jmp    42a22f <flatcc_json_printer_utype_vector_field@@Base+0x21f>
  42a374:	cmp    BYTE PTR [r15+0x31],0x0
  42a379:	mov    r14,QWORD PTR [r15+0x28]
  42a37d:	je     42a422 <flatcc_json_printer_utype_vector_field@@Base+0x412>
  42a383:	lea    rax,[r14+0x1]
  42a387:	mov    QWORD PTR [r15+0x28],rax
  42a38b:	mov    BYTE PTR [r14],0xa
  42a38f:	movsxd rax,DWORD PTR [r15+0x38]
  42a393:	dec    rax
  42a396:	mov    DWORD PTR [r15+0x38],eax
  42a39a:	movzx  r14d,BYTE PTR [r15+0x31]
  42a39f:	imul   r14,rax
  42a3a3:	mov    rbx,QWORD PTR [r15+0x20]
  42a3a7:	mov    rdi,QWORD PTR [r15+0x28]
  42a3ab:	lea    rax,[rdi+r14*1]
  42a3af:	cmp    rax,rbx
  42a3b2:	jbe    42a40d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42a3b4:	cmp    rdi,rbx
  42a3b7:	jb     42a3ca <flatcc_json_printer_utype_vector_field@@Base+0x3ba>
  42a3b9:	mov    rdi,r15
  42a3bc:	xor    esi,esi
  42a3be:	call   QWORD PTR [r15+0x48]
  42a3c2:	mov    rbx,QWORD PTR [r15+0x20]
  42a3c6:	mov    rdi,QWORD PTR [r15+0x28]
  42a3ca:	sub    rbx,rdi
  42a3cd:	cmp    rbx,r14
  42a3d0:	jae    42a40d <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42a3d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3dc:	nop    DWORD PTR [rax+0x0]
  42a3e0:	mov    esi,0x20
  42a3e5:	mov    rdx,rbx
  42a3e8:	call   406080 <memset@plt>
  42a3ed:	add    QWORD PTR [r15+0x28],rbx
  42a3f1:	sub    r14,rbx
  42a3f4:	mov    rdi,r15
  42a3f7:	xor    esi,esi
  42a3f9:	call   QWORD PTR [r15+0x48]
  42a3fd:	mov    rbx,QWORD PTR [r15+0x20]
  42a401:	mov    rdi,QWORD PTR [r15+0x28]
  42a405:	sub    rbx,rdi
  42a408:	cmp    r14,rbx
  42a40b:	ja     42a3e0 <flatcc_json_printer_utype_vector_field@@Base+0x3d0>
  42a40d:	mov    esi,0x20
  42a412:	mov    rdx,r14
  42a415:	call   406080 <memset@plt>
  42a41a:	add    r14,QWORD PTR [r15+0x28]
  42a41e:	mov    QWORD PTR [r15+0x28],r14
  42a422:	lea    rax,[r14+0x1]
  42a426:	mov    QWORD PTR [r15+0x28],rax
  42a42a:	mov    BYTE PTR [r14],0x5d
  42a42e:	add    rsp,0x8
  42a432:	pop    rbx
  42a433:	pop    r12
  42a435:	pop    r13
  42a437:	pop    r14
  42a439:	pop    r15
  42a43b:	pop    rbp
  42a43c:	ret    
  42a43d:	nop    DWORD PTR [rax]

000000000042a440 <flatcc_json_printer_uint8_vector_field@@Base>:
  42a440:	push   rbp
  42a441:	push   r15
  42a443:	push   r14
  42a445:	push   r13
  42a447:	push   r12
  42a449:	push   rbx
  42a44a:	push   rax
  42a44b:	lea    eax,[rdx+rdx*1]
  42a44e:	add    eax,0x4
  42a451:	cmp    eax,DWORD PTR [rsi+0x10]
  42a454:	jge    42a85e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42a45a:	mov    rdx,QWORD PTR [rsi+0x8]
  42a45e:	mov    eax,eax
  42a460:	movzx  r12d,WORD PTR [rdx+rax*1]
  42a465:	test   r12,r12
  42a468:	je     42a85e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42a46e:	add    r12,QWORD PTR [rsi]
  42a471:	je     42a85e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42a477:	mov    r15,rdi
  42a47a:	mov    eax,DWORD PTR [rsi+0x18]
  42a47d:	lea    edx,[rax+0x1]
  42a480:	mov    DWORD PTR [rsi+0x18],edx
  42a483:	test   eax,eax
  42a485:	je     42a496 <flatcc_json_printer_uint8_vector_field@@Base+0x56>
  42a487:	mov    rax,QWORD PTR [r15+0x28]
  42a48b:	lea    rdx,[rax+0x1]
  42a48f:	mov    QWORD PTR [r15+0x28],rdx
  42a493:	mov    BYTE PTR [rax],0x2c
  42a496:	mov    ebx,DWORD PTR [r12]
  42a49a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42a49e:	movsxd rdx,r8d
  42a4a1:	mov    rdi,r15
  42a4a4:	mov    rsi,rcx
  42a4a7:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42a4ac:	inc    DWORD PTR [r15+0x38]
  42a4b0:	mov    rax,QWORD PTR [r15+0x28]
  42a4b4:	lea    rcx,[rax+0x1]
  42a4b8:	mov    QWORD PTR [r15+0x28],rcx
  42a4bc:	mov    BYTE PTR [rax],0x5b
  42a4bf:	test   ebp,ebp
  42a4c1:	je     42a7a4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42a4c7:	add    r12,rbx
  42a4ca:	cmp    BYTE PTR [r15+0x31],0x0
  42a4cf:	mov    r14,QWORD PTR [r15+0x28]
  42a4d3:	je     42a574 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
  42a4d9:	lea    rax,[r14+0x1]
  42a4dd:	mov    QWORD PTR [r15+0x28],rax
  42a4e1:	mov    BYTE PTR [r14],0xa
  42a4e5:	movsxd rax,DWORD PTR [r15+0x38]
  42a4e9:	movzx  r14d,BYTE PTR [r15+0x31]
  42a4ee:	imul   r14,rax
  42a4f2:	mov    rbx,QWORD PTR [r15+0x20]
  42a4f6:	mov    rdi,QWORD PTR [r15+0x28]
  42a4fa:	lea    rax,[rdi+r14*1]
  42a4fe:	cmp    rax,rbx
  42a501:	jbe    42a55d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42a503:	cmp    rdi,rbx
  42a506:	jb     42a519 <flatcc_json_printer_uint8_vector_field@@Base+0xd9>
  42a508:	mov    rdi,r15
  42a50b:	xor    esi,esi
  42a50d:	call   QWORD PTR [r15+0x48]
  42a511:	mov    rbx,QWORD PTR [r15+0x20]
  42a515:	mov    rdi,QWORD PTR [r15+0x28]
  42a519:	sub    rbx,rdi
  42a51c:	cmp    rbx,r14
  42a51f:	jae    42a55d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42a521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a52b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a530:	mov    esi,0x20
  42a535:	mov    rdx,rbx
  42a538:	call   406080 <memset@plt>
  42a53d:	add    QWORD PTR [r15+0x28],rbx
  42a541:	sub    r14,rbx
  42a544:	mov    rdi,r15
  42a547:	xor    esi,esi
  42a549:	call   QWORD PTR [r15+0x48]
  42a54d:	mov    rbx,QWORD PTR [r15+0x20]
  42a551:	mov    rdi,QWORD PTR [r15+0x28]
  42a555:	sub    rbx,rdi
  42a558:	cmp    r14,rbx
  42a55b:	ja     42a530 <flatcc_json_printer_uint8_vector_field@@Base+0xf0>
  42a55d:	mov    esi,0x20
  42a562:	mov    rdx,r14
  42a565:	call   406080 <memset@plt>
  42a56a:	add    r14,QWORD PTR [r15+0x28]
  42a56e:	mov    QWORD PTR [r15+0x28],r14
  42a572:	jmp    42a587 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42a574:	cmp    r14,QWORD PTR [r15+0x20]
  42a578:	jb     42a587 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42a57a:	mov    rdi,r15
  42a57d:	xor    esi,esi
  42a57f:	call   QWORD PTR [r15+0x48]
  42a583:	mov    r14,QWORD PTR [r15+0x28]
  42a587:	mov    al,BYTE PTR [r12+0x4]
  42a58c:	cmp    al,0x64
  42a58e:	jb     42a5c6 <flatcc_json_printer_uint8_vector_field@@Base+0x186>
  42a590:	mov    BYTE PTR [r14+0x3],0x0
  42a595:	movzx  ecx,al
  42a598:	lea    edx,[rcx+rcx*4]
  42a59b:	lea    ecx,[rcx+rdx*8]
  42a59e:	shr    ecx,0xc
  42a5a1:	imul   edx,ecx,0x64
  42a5a4:	sub    al,dl
  42a5a6:	movzx  eax,al
  42a5a9:	lea    rdx,[rip+0xec40]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a5b0:	movzx  eax,WORD PTR [rdx+rax*2]
  42a5b4:	mov    WORD PTR [r14+0x1],ax
  42a5b9:	or     cl,0x30
  42a5bc:	mov    BYTE PTR [r14],cl
  42a5bf:	mov    eax,0x3
  42a5c4:	jmp    42a608 <flatcc_json_printer_uint8_vector_field@@Base+0x1c8>
  42a5c6:	cmp    al,0xa
  42a5c8:	jb     42a5f9 <flatcc_json_printer_uint8_vector_field@@Base+0x1b9>
  42a5ca:	mov    BYTE PTR [r14+0x2],0x0
  42a5cf:	movzx  ecx,al
  42a5d2:	lea    edx,[rcx+rcx*4]
  42a5d5:	lea    ecx,[rcx+rdx*8]
  42a5d8:	shr    ecx,0xc
  42a5db:	imul   ecx,ecx,0x64
  42a5de:	sub    al,cl
  42a5e0:	movzx  eax,al
  42a5e3:	lea    rcx,[rip+0xec06]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a5ea:	movzx  eax,WORD PTR [rcx+rax*2]
  42a5ee:	mov    WORD PTR [r14],ax
  42a5f2:	mov    eax,0x2
  42a5f7:	jmp    42a608 <flatcc_json_printer_uint8_vector_field@@Base+0x1c8>
  42a5f9:	mov    BYTE PTR [r14+0x1],0x0
  42a5fe:	add    al,0x30
  42a600:	mov    BYTE PTR [r14],al
  42a603:	mov    eax,0x1
  42a608:	add    QWORD PTR [r15+0x28],rax
  42a60c:	dec    ebp
  42a60e:	je     42a7a4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42a614:	add    r12,0x5
  42a618:	mov    rax,QWORD PTR [r15+0x28]
  42a61c:	lea    r13,[rip+0xebcd]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42a623:	jmp    42a672 <flatcc_json_printer_uint8_vector_field@@Base+0x232>
  42a625:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a62f:	nop
  42a630:	mov    BYTE PTR [r14+0x3],0x0
  42a635:	movzx  ecx,al
  42a638:	lea    edx,[rcx+rcx*4]
  42a63b:	lea    ecx,[rcx+rdx*8]
  42a63e:	shr    ecx,0xc
  42a641:	imul   edx,ecx,0x64
  42a644:	sub    al,dl
  42a646:	movzx  eax,al
  42a649:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42a64f:	mov    WORD PTR [r14+0x1],ax
  42a654:	or     cl,0x30
  42a657:	mov    BYTE PTR [r14],cl
  42a65a:	mov    eax,0x3
  42a65f:	add    rax,QWORD PTR [r15+0x28]
  42a663:	mov    QWORD PTR [r15+0x28],rax
  42a667:	inc    r12
  42a66a:	test   ebp,ebp
  42a66c:	je     42a7a4 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42a672:	lea    rcx,[rax+0x1]
  42a676:	mov    QWORD PTR [r15+0x28],rcx
  42a67a:	mov    BYTE PTR [rax],0x2c
  42a67d:	cmp    BYTE PTR [r15+0x31],0x0
  42a682:	mov    r14,QWORD PTR [r15+0x28]
  42a686:	je     42a730 <flatcc_json_printer_uint8_vector_field@@Base+0x2f0>
  42a68c:	lea    rax,[r14+0x1]
  42a690:	mov    QWORD PTR [r15+0x28],rax
  42a694:	mov    BYTE PTR [r14],0xa
  42a698:	movsxd rax,DWORD PTR [r15+0x38]
  42a69c:	movzx  r14d,BYTE PTR [r15+0x31]
  42a6a1:	imul   r14,rax
  42a6a5:	mov    rbx,QWORD PTR [r15+0x20]
  42a6a9:	mov    rdi,QWORD PTR [r15+0x28]
  42a6ad:	lea    rax,[rdi+r14*1]
  42a6b1:	cmp    rax,rbx
  42a6b4:	jbe    42a70d <flatcc_json_printer_uint8_vector_field@@Base+0x2cd>
  42a6b6:	cmp    rdi,rbx
  42a6b9:	jb     42a6cc <flatcc_json_printer_uint8_vector_field@@Base+0x28c>
  42a6bb:	mov    rdi,r15
  42a6be:	xor    esi,esi
  42a6c0:	call   QWORD PTR [r15+0x48]
  42a6c4:	mov    rbx,QWORD PTR [r15+0x20]
  42a6c8:	mov    rdi,QWORD PTR [r15+0x28]
  42a6cc:	sub    rbx,rdi
  42a6cf:	cmp    rbx,r14
  42a6d2:	jae    42a70d <flatcc_json_printer_uint8_vector_field@@Base+0x2cd>
  42a6d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a6de:	xchg   ax,ax
  42a6e0:	mov    esi,0x20
  42a6e5:	mov    rdx,rbx
  42a6e8:	call   406080 <memset@plt>
  42a6ed:	add    QWORD PTR [r15+0x28],rbx
  42a6f1:	sub    r14,rbx
  42a6f4:	mov    rdi,r15
  42a6f7:	xor    esi,esi
  42a6f9:	call   QWORD PTR [r15+0x48]
  42a6fd:	mov    rbx,QWORD PTR [r15+0x20]
  42a701:	mov    rdi,QWORD PTR [r15+0x28]
  42a705:	sub    rbx,rdi
  42a708:	cmp    r14,rbx
  42a70b:	ja     42a6e0 <flatcc_json_printer_uint8_vector_field@@Base+0x2a0>
  42a70d:	mov    esi,0x20
  42a712:	mov    rdx,r14
  42a715:	call   406080 <memset@plt>
  42a71a:	add    r14,QWORD PTR [r15+0x28]
  42a71e:	mov    QWORD PTR [r15+0x28],r14
  42a722:	jmp    42a750 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42a724:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a72e:	xchg   ax,ax
  42a730:	cmp    r14,QWORD PTR [r15+0x20]
  42a734:	jb     42a750 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42a736:	mov    rdi,r15
  42a739:	xor    esi,esi
  42a73b:	call   QWORD PTR [r15+0x48]
  42a73f:	mov    r14,QWORD PTR [r15+0x28]
  42a743:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a74d:	nop    DWORD PTR [rax]
  42a750:	dec    ebp
  42a752:	mov    al,BYTE PTR [r12]
  42a756:	cmp    al,0x64
  42a758:	jae    42a630 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  42a75e:	cmp    al,0xa
  42a760:	jb     42a790 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42a762:	mov    BYTE PTR [r14+0x2],0x0
  42a767:	movzx  ecx,al
  42a76a:	lea    edx,[rcx+rcx*4]
  42a76d:	lea    ecx,[rcx+rdx*8]
  42a770:	shr    ecx,0xc
  42a773:	imul   ecx,ecx,0x64
  42a776:	sub    al,cl
  42a778:	movzx  eax,al
  42a77b:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42a781:	mov    WORD PTR [r14],ax
  42a785:	mov    eax,0x2
  42a78a:	jmp    42a65f <flatcc_json_printer_uint8_vector_field@@Base+0x21f>
  42a78f:	nop
  42a790:	mov    BYTE PTR [r14+0x1],0x0
  42a795:	add    al,0x30
  42a797:	mov    BYTE PTR [r14],al
  42a79a:	mov    eax,0x1
  42a79f:	jmp    42a65f <flatcc_json_printer_uint8_vector_field@@Base+0x21f>
  42a7a4:	cmp    BYTE PTR [r15+0x31],0x0
  42a7a9:	mov    r14,QWORD PTR [r15+0x28]
  42a7ad:	je     42a852 <flatcc_json_printer_uint8_vector_field@@Base+0x412>
  42a7b3:	lea    rax,[r14+0x1]
  42a7b7:	mov    QWORD PTR [r15+0x28],rax
  42a7bb:	mov    BYTE PTR [r14],0xa
  42a7bf:	movsxd rax,DWORD PTR [r15+0x38]
  42a7c3:	dec    rax
  42a7c6:	mov    DWORD PTR [r15+0x38],eax
  42a7ca:	movzx  r14d,BYTE PTR [r15+0x31]
  42a7cf:	imul   r14,rax
  42a7d3:	mov    rbx,QWORD PTR [r15+0x20]
  42a7d7:	mov    rdi,QWORD PTR [r15+0x28]
  42a7db:	lea    rax,[rdi+r14*1]
  42a7df:	cmp    rax,rbx
  42a7e2:	jbe    42a83d <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42a7e4:	cmp    rdi,rbx
  42a7e7:	jb     42a7fa <flatcc_json_printer_uint8_vector_field@@Base+0x3ba>
  42a7e9:	mov    rdi,r15
  42a7ec:	xor    esi,esi
  42a7ee:	call   QWORD PTR [r15+0x48]
  42a7f2:	mov    rbx,QWORD PTR [r15+0x20]
  42a7f6:	mov    rdi,QWORD PTR [r15+0x28]
  42a7fa:	sub    rbx,rdi
  42a7fd:	cmp    rbx,r14
  42a800:	jae    42a83d <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42a802:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a80c:	nop    DWORD PTR [rax+0x0]
  42a810:	mov    esi,0x20
  42a815:	mov    rdx,rbx
  42a818:	call   406080 <memset@plt>
  42a81d:	add    QWORD PTR [r15+0x28],rbx
  42a821:	sub    r14,rbx
  42a824:	mov    rdi,r15
  42a827:	xor    esi,esi
  42a829:	call   QWORD PTR [r15+0x48]
  42a82d:	mov    rbx,QWORD PTR [r15+0x20]
  42a831:	mov    rdi,QWORD PTR [r15+0x28]
  42a835:	sub    rbx,rdi
  42a838:	cmp    r14,rbx
  42a83b:	ja     42a810 <flatcc_json_printer_uint8_vector_field@@Base+0x3d0>
  42a83d:	mov    esi,0x20
  42a842:	mov    rdx,r14
  42a845:	call   406080 <memset@plt>
  42a84a:	add    r14,QWORD PTR [r15+0x28]
  42a84e:	mov    QWORD PTR [r15+0x28],r14
  42a852:	lea    rax,[r14+0x1]
  42a856:	mov    QWORD PTR [r15+0x28],rax
  42a85a:	mov    BYTE PTR [r14],0x5d
  42a85e:	add    rsp,0x8
  42a862:	pop    rbx
  42a863:	pop    r12
  42a865:	pop    r13
  42a867:	pop    r14
  42a869:	pop    r15
  42a86b:	pop    rbp
  42a86c:	ret    
  42a86d:	nop    DWORD PTR [rax]

000000000042a870 <flatcc_json_printer_uint16_vector_field@@Base>:
  42a870:	push   rbp
  42a871:	push   r15
  42a873:	push   r14
  42a875:	push   r13
  42a877:	push   r12
  42a879:	push   rbx
  42a87a:	push   rax
  42a87b:	lea    eax,[rdx+rdx*1]
  42a87e:	add    eax,0x4
  42a881:	cmp    eax,DWORD PTR [rsi+0x10]
  42a884:	jge    42adee <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42a88a:	mov    rdx,QWORD PTR [rsi+0x8]
  42a88e:	mov    eax,eax
  42a890:	movzx  r12d,WORD PTR [rdx+rax*1]
  42a895:	test   r12,r12
  42a898:	je     42adee <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42a89e:	add    r12,QWORD PTR [rsi]
  42a8a1:	je     42adee <flatcc_json_printer_uint16_vector_field@@Base+0x57e>
  42a8a7:	mov    r15,rdi
  42a8aa:	mov    eax,DWORD PTR [rsi+0x18]
  42a8ad:	lea    edx,[rax+0x1]
  42a8b0:	mov    DWORD PTR [rsi+0x18],edx
  42a8b3:	test   eax,eax
  42a8b5:	je     42a8c6 <flatcc_json_printer_uint16_vector_field@@Base+0x56>
  42a8b7:	mov    rax,QWORD PTR [r15+0x28]
  42a8bb:	lea    rdx,[rax+0x1]
  42a8bf:	mov    QWORD PTR [r15+0x28],rdx
  42a8c3:	mov    BYTE PTR [rax],0x2c
  42a8c6:	mov    ebx,DWORD PTR [r12]
  42a8ca:	mov    ebp,DWORD PTR [r12+rbx*1]
  42a8ce:	movsxd rdx,r8d
  42a8d1:	mov    rdi,r15
  42a8d4:	mov    rsi,rcx
  42a8d7:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42a8dc:	inc    DWORD PTR [r15+0x38]
  42a8e0:	mov    rax,QWORD PTR [r15+0x28]
  42a8e4:	lea    rcx,[rax+0x1]
  42a8e8:	mov    QWORD PTR [r15+0x28],rcx
  42a8ec:	mov    BYTE PTR [rax],0x5b
  42a8ef:	test   ebp,ebp
  42a8f1:	je     42ad40 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42a8f7:	add    r12,rbx
  42a8fa:	cmp    BYTE PTR [r15+0x31],0x0
  42a8ff:	mov    r14,QWORD PTR [r15+0x28]
  42a903:	je     42a9a4 <flatcc_json_printer_uint16_vector_field@@Base+0x134>
  42a909:	lea    rax,[r14+0x1]
  42a90d:	mov    QWORD PTR [r15+0x28],rax
  42a911:	mov    BYTE PTR [r14],0xa
  42a915:	movsxd rax,DWORD PTR [r15+0x38]
  42a919:	movzx  r14d,BYTE PTR [r15+0x31]
  42a91e:	imul   r14,rax
  42a922:	mov    rbx,QWORD PTR [r15+0x20]
  42a926:	mov    rdi,QWORD PTR [r15+0x28]
  42a92a:	lea    rax,[rdi+r14*1]
  42a92e:	cmp    rax,rbx
  42a931:	jbe    42a98d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42a933:	cmp    rdi,rbx
  42a936:	jb     42a949 <flatcc_json_printer_uint16_vector_field@@Base+0xd9>
  42a938:	mov    rdi,r15
  42a93b:	xor    esi,esi
  42a93d:	call   QWORD PTR [r15+0x48]
  42a941:	mov    rbx,QWORD PTR [r15+0x20]
  42a945:	mov    rdi,QWORD PTR [r15+0x28]
  42a949:	sub    rbx,rdi
  42a94c:	cmp    rbx,r14
  42a94f:	jae    42a98d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42a951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a95b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a960:	mov    esi,0x20
  42a965:	mov    rdx,rbx
  42a968:	call   406080 <memset@plt>
  42a96d:	add    QWORD PTR [r15+0x28],rbx
  42a971:	sub    r14,rbx
  42a974:	mov    rdi,r15
  42a977:	xor    esi,esi
  42a979:	call   QWORD PTR [r15+0x48]
  42a97d:	mov    rbx,QWORD PTR [r15+0x20]
  42a981:	mov    rdi,QWORD PTR [r15+0x28]
  42a985:	sub    rbx,rdi
  42a988:	cmp    r14,rbx
  42a98b:	ja     42a960 <flatcc_json_printer_uint16_vector_field@@Base+0xf0>
  42a98d:	mov    esi,0x20
  42a992:	mov    rdx,r14
  42a995:	call   406080 <memset@plt>
  42a99a:	add    r14,QWORD PTR [r15+0x28]
  42a99e:	mov    QWORD PTR [r15+0x28],r14
  42a9a2:	jmp    42a9b7 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42a9a4:	cmp    r14,QWORD PTR [r15+0x20]
  42a9a8:	jb     42a9b7 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42a9aa:	mov    rdi,r15
  42a9ad:	xor    esi,esi
  42a9af:	call   QWORD PTR [r15+0x48]
  42a9b3:	mov    r14,QWORD PTR [r15+0x28]
  42a9b7:	movzx  eax,WORD PTR [r12+0x4]
  42a9bd:	cmp    eax,0x3e8
  42a9c2:	jb     42a9d7 <flatcc_json_printer_uint16_vector_field@@Base+0x167>
  42a9c4:	movzx  edx,ax
  42a9c7:	xor    ecx,ecx
  42a9c9:	cmp    edx,0x270f
  42a9cf:	seta   cl
  42a9d2:	or     ecx,0x4
  42a9d5:	jmp    42a9fe <flatcc_json_printer_uint16_vector_field@@Base+0x18e>
  42a9d7:	cmp    ax,0x64
  42a9db:	jb     42a9f3 <flatcc_json_printer_uint16_vector_field@@Base+0x183>
  42a9dd:	mov    BYTE PTR [r14+0x3],0x0
  42a9e2:	add    r14,0x3
  42a9e6:	mov    ecx,0x3
  42a9eb:	mov    rdx,r14
  42a9ee:	jmp    42aab2 <flatcc_json_printer_uint16_vector_field@@Base+0x242>
  42a9f3:	xor    ecx,ecx
  42a9f5:	cmp    ax,0x9
  42a9f9:	seta   cl
  42a9fc:	inc    ecx
  42a9fe:	mov    esi,ecx
  42aa00:	lea    rdx,[r14+rsi*1]
  42aa04:	mov    BYTE PTR [r14+rsi*1],0x0
  42aa09:	test   cl,0x1
  42aa0c:	jne    42aa72 <flatcc_json_printer_uint16_vector_field@@Base+0x202>
  42aa0e:	cmp    ecx,0x2
  42aa11:	je     42aa48 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
  42aa13:	cmp    ecx,0x4
  42aa16:	jne    42aae3 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42aa1c:	movzx  esi,ax
  42aa1f:	mov    eax,esi
  42aa21:	shr    eax,0x2
  42aa24:	imul   eax,eax,0x147b
  42aa2a:	shr    eax,0x11
  42aa2d:	imul   edi,eax,0x64
  42aa30:	sub    esi,edi
  42aa32:	movzx  esi,si
  42aa35:	lea    rdi,[rip+0xe7b4]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42aa3c:	movzx  esi,WORD PTR [rdi+rsi*2]
  42aa40:	mov    WORD PTR [rdx-0x2],si
  42aa44:	add    rdx,0xfffffffffffffffe
  42aa48:	movzx  eax,ax
  42aa4b:	mov    esi,eax
  42aa4d:	shr    esi,0x2
  42aa50:	imul   esi,esi,0x147b
  42aa56:	shr    esi,0x11
  42aa59:	imul   esi,esi,0x64
  42aa5c:	sub    eax,esi
  42aa5e:	movzx  eax,ax
  42aa61:	lea    rsi,[rip+0xe788]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42aa68:	movzx  eax,WORD PTR [rsi+rax*2]
  42aa6c:	mov    WORD PTR [rdx-0x2],ax
  42aa70:	jmp    42aae3 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42aa72:	cmp    ecx,0x1
  42aa75:	je     42aade <flatcc_json_printer_uint16_vector_field@@Base+0x26e>
  42aa77:	cmp    ecx,0x3
  42aa7a:	je     42aab2 <flatcc_json_printer_uint16_vector_field@@Base+0x242>
  42aa7c:	cmp    ecx,0x5
  42aa7f:	jne    42aae3 <flatcc_json_printer_uint16_vector_field@@Base+0x273>
  42aa81:	movzx  ecx,ax
  42aa84:	mov    eax,ecx
  42aa86:	shr    eax,0x2
  42aa89:	imul   eax,eax,0x147b
  42aa8f:	shr    eax,0x11
  42aa92:	imul   esi,eax,0x64
  42aa95:	sub    ecx,esi
  42aa97:	movzx  ecx,cx
  42aa9a:	lea    rsi,[rip+0xe74f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42aaa1:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42aaa5:	mov    WORD PTR [rdx-0x2],cx
  42aaa9:	add    rdx,0xfffffffffffffffe
  42aaad:	mov    ecx,0x5
  42aab2:	movzx  esi,ax
  42aab5:	mov    eax,esi
  42aab7:	shr    eax,0x2
  42aaba:	imul   eax,eax,0x147b
  42aac0:	shr    eax,0x11
  42aac3:	imul   edi,eax,0x64
  42aac6:	sub    esi,edi
  42aac8:	movzx  esi,si
  42aacb:	lea    rdi,[rip+0xe71e]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42aad2:	movzx  esi,WORD PTR [rdi+rsi*2]
  42aad6:	mov    WORD PTR [rdx-0x2],si
  42aada:	add    rdx,0xfffffffffffffffe
  42aade:	add    al,0x30
  42aae0:	mov    BYTE PTR [rdx-0x1],al
  42aae3:	mov    eax,ecx
  42aae5:	add    QWORD PTR [r15+0x28],rax
  42aae9:	dec    ebp
  42aaeb:	je     42ad40 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42aaf1:	add    r12,0x6
  42aaf5:	mov    rax,QWORD PTR [r15+0x28]
  42aaf9:	lea    r13,[rip+0xe6f0]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42ab00:	jmp    42ab49 <flatcc_json_printer_uint16_vector_field@@Base+0x2d9>
  42ab02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab0c:	nop    DWORD PTR [rax+0x0]
  42ab10:	movzx  eax,ax
  42ab13:	mov    esi,eax
  42ab15:	shr    esi,0x2
  42ab18:	imul   esi,esi,0x147b
  42ab1e:	shr    esi,0x11
  42ab21:	imul   esi,esi,0x64
  42ab24:	sub    eax,esi
  42ab26:	movzx  eax,ax
  42ab29:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42ab2f:	mov    WORD PTR [rdx-0x2],ax
  42ab33:	mov    eax,ecx
  42ab35:	add    rax,QWORD PTR [r15+0x28]
  42ab39:	mov    QWORD PTR [r15+0x28],rax
  42ab3d:	add    r12,0x2
  42ab41:	test   ebp,ebp
  42ab43:	je     42ad40 <flatcc_json_printer_uint16_vector_field@@Base+0x4d0>
  42ab49:	lea    rcx,[rax+0x1]
  42ab4d:	mov    QWORD PTR [r15+0x28],rcx
  42ab51:	mov    BYTE PTR [rax],0x2c
  42ab54:	cmp    BYTE PTR [r15+0x31],0x0
  42ab59:	mov    r14,QWORD PTR [r15+0x28]
  42ab5d:	je     42ac00 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
  42ab63:	lea    rax,[r14+0x1]
  42ab67:	mov    QWORD PTR [r15+0x28],rax
  42ab6b:	mov    BYTE PTR [r14],0xa
  42ab6f:	movsxd rax,DWORD PTR [r15+0x38]
  42ab73:	movzx  r14d,BYTE PTR [r15+0x31]
  42ab78:	imul   r14,rax
  42ab7c:	mov    rbx,QWORD PTR [r15+0x20]
  42ab80:	mov    rdi,QWORD PTR [r15+0x28]
  42ab84:	lea    rax,[rdi+r14*1]
  42ab88:	cmp    rax,rbx
  42ab8b:	jbe    42abdd <flatcc_json_printer_uint16_vector_field@@Base+0x36d>
  42ab8d:	cmp    rdi,rbx
  42ab90:	jb     42aba3 <flatcc_json_printer_uint16_vector_field@@Base+0x333>
  42ab92:	mov    rdi,r15
  42ab95:	xor    esi,esi
  42ab97:	call   QWORD PTR [r15+0x48]
  42ab9b:	mov    rbx,QWORD PTR [r15+0x20]
  42ab9f:	mov    rdi,QWORD PTR [r15+0x28]
  42aba3:	sub    rbx,rdi
  42aba6:	cmp    rbx,r14
  42aba9:	jae    42abdd <flatcc_json_printer_uint16_vector_field@@Base+0x36d>
  42abab:	nop    DWORD PTR [rax+rax*1+0x0]
  42abb0:	mov    esi,0x20
  42abb5:	mov    rdx,rbx
  42abb8:	call   406080 <memset@plt>
  42abbd:	add    QWORD PTR [r15+0x28],rbx
  42abc1:	sub    r14,rbx
  42abc4:	mov    rdi,r15
  42abc7:	xor    esi,esi
  42abc9:	call   QWORD PTR [r15+0x48]
  42abcd:	mov    rbx,QWORD PTR [r15+0x20]
  42abd1:	mov    rdi,QWORD PTR [r15+0x28]
  42abd5:	sub    rbx,rdi
  42abd8:	cmp    r14,rbx
  42abdb:	ja     42abb0 <flatcc_json_printer_uint16_vector_field@@Base+0x340>
  42abdd:	mov    esi,0x20
  42abe2:	mov    rdx,r14
  42abe5:	call   406080 <memset@plt>
  42abea:	add    r14,QWORD PTR [r15+0x28]
  42abee:	mov    QWORD PTR [r15+0x28],r14
  42abf2:	jmp    42ac20 <flatcc_json_printer_uint16_vector_field@@Base+0x3b0>
  42abf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42abfe:	xchg   ax,ax
  42ac00:	cmp    r14,QWORD PTR [r15+0x20]
  42ac04:	jb     42ac20 <flatcc_json_printer_uint16_vector_field@@Base+0x3b0>
  42ac06:	mov    rdi,r15
  42ac09:	xor    esi,esi
  42ac0b:	call   QWORD PTR [r15+0x48]
  42ac0f:	mov    r14,QWORD PTR [r15+0x28]
  42ac13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac1d:	nop    DWORD PTR [rax]
  42ac20:	dec    ebp
  42ac22:	movzx  eax,WORD PTR [r12]
  42ac27:	cmp    eax,0x3e8
  42ac2c:	jb     42ac50 <flatcc_json_printer_uint16_vector_field@@Base+0x3e0>
  42ac2e:	movzx  edx,ax
  42ac31:	xor    ecx,ecx
  42ac33:	cmp    edx,0x270f
  42ac39:	seta   cl
  42ac3c:	or     ecx,0x4
  42ac3f:	jmp    42ac7b <flatcc_json_printer_uint16_vector_field@@Base+0x40b>
  42ac41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ac50:	cmp    ax,0x64
  42ac54:	jb     42ac70 <flatcc_json_printer_uint16_vector_field@@Base+0x400>
  42ac56:	mov    BYTE PTR [r14+0x3],0x0
  42ac5b:	add    r14,0x3
  42ac5f:	mov    ecx,0x3
  42ac64:	mov    rdx,r14
  42ac67:	jmp    42ad0f <flatcc_json_printer_uint16_vector_field@@Base+0x49f>
  42ac6c:	nop    DWORD PTR [rax+0x0]
  42ac70:	xor    ecx,ecx
  42ac72:	cmp    ax,0x9
  42ac76:	seta   cl
  42ac79:	inc    ecx
  42ac7b:	mov    esi,ecx
  42ac7d:	lea    rdx,[r14+rsi*1]
  42ac81:	mov    BYTE PTR [r14+rsi*1],0x0
  42ac86:	test   cl,0x1
  42ac89:	jne    42acd0 <flatcc_json_printer_uint16_vector_field@@Base+0x460>
  42ac8b:	cmp    ecx,0x2
  42ac8e:	je     42ab10 <flatcc_json_printer_uint16_vector_field@@Base+0x2a0>
  42ac94:	cmp    ecx,0x4
  42ac97:	jne    42ab33 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42ac9d:	movzx  esi,ax
  42aca0:	mov    eax,esi
  42aca2:	shr    eax,0x2
  42aca5:	imul   eax,eax,0x147b
  42acab:	shr    eax,0x11
  42acae:	imul   edi,eax,0x64
  42acb1:	sub    esi,edi
  42acb3:	movzx  esi,si
  42acb6:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42acbc:	mov    WORD PTR [rdx-0x2],si
  42acc0:	add    rdx,0xfffffffffffffffe
  42acc4:	jmp    42ab10 <flatcc_json_printer_uint16_vector_field@@Base+0x2a0>
  42acc9:	nop    DWORD PTR [rax+0x0]
  42acd0:	cmp    ecx,0x1
  42acd3:	je     42ad36 <flatcc_json_printer_uint16_vector_field@@Base+0x4c6>
  42acd5:	cmp    ecx,0x3
  42acd8:	je     42ad0f <flatcc_json_printer_uint16_vector_field@@Base+0x49f>
  42acda:	cmp    ecx,0x5
  42acdd:	jne    42ab33 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42ace3:	movzx  ecx,ax
  42ace6:	mov    eax,ecx
  42ace8:	shr    eax,0x2
  42aceb:	imul   eax,eax,0x147b
  42acf1:	shr    eax,0x11
  42acf4:	imul   esi,eax,0x64
  42acf7:	sub    ecx,esi
  42acf9:	movzx  ecx,cx
  42acfc:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42ad02:	mov    WORD PTR [rdx-0x2],cx
  42ad06:	add    rdx,0xfffffffffffffffe
  42ad0a:	mov    ecx,0x5
  42ad0f:	movzx  esi,ax
  42ad12:	mov    eax,esi
  42ad14:	shr    eax,0x2
  42ad17:	imul   eax,eax,0x147b
  42ad1d:	shr    eax,0x11
  42ad20:	imul   edi,eax,0x64
  42ad23:	sub    esi,edi
  42ad25:	movzx  esi,si
  42ad28:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42ad2e:	mov    WORD PTR [rdx-0x2],si
  42ad32:	add    rdx,0xfffffffffffffffe
  42ad36:	add    al,0x30
  42ad38:	mov    BYTE PTR [rdx-0x1],al
  42ad3b:	jmp    42ab33 <flatcc_json_printer_uint16_vector_field@@Base+0x2c3>
  42ad40:	cmp    BYTE PTR [r15+0x31],0x0
  42ad45:	mov    r14,QWORD PTR [r15+0x28]
  42ad49:	je     42ade2 <flatcc_json_printer_uint16_vector_field@@Base+0x572>
  42ad4f:	lea    rax,[r14+0x1]
  42ad53:	mov    QWORD PTR [r15+0x28],rax
  42ad57:	mov    BYTE PTR [r14],0xa
  42ad5b:	movsxd rax,DWORD PTR [r15+0x38]
  42ad5f:	dec    rax
  42ad62:	mov    DWORD PTR [r15+0x38],eax
  42ad66:	movzx  r14d,BYTE PTR [r15+0x31]
  42ad6b:	imul   r14,rax
  42ad6f:	mov    rbx,QWORD PTR [r15+0x20]
  42ad73:	mov    rdi,QWORD PTR [r15+0x28]
  42ad77:	lea    rax,[rdi+r14*1]
  42ad7b:	cmp    rax,rbx
  42ad7e:	jbe    42adcd <flatcc_json_printer_uint16_vector_field@@Base+0x55d>
  42ad80:	cmp    rdi,rbx
  42ad83:	jb     42ad96 <flatcc_json_printer_uint16_vector_field@@Base+0x526>
  42ad85:	mov    rdi,r15
  42ad88:	xor    esi,esi
  42ad8a:	call   QWORD PTR [r15+0x48]
  42ad8e:	mov    rbx,QWORD PTR [r15+0x20]
  42ad92:	mov    rdi,QWORD PTR [r15+0x28]
  42ad96:	sub    rbx,rdi
  42ad99:	cmp    rbx,r14
  42ad9c:	jae    42adcd <flatcc_json_printer_uint16_vector_field@@Base+0x55d>
  42ad9e:	xchg   ax,ax
  42ada0:	mov    esi,0x20
  42ada5:	mov    rdx,rbx
  42ada8:	call   406080 <memset@plt>
  42adad:	add    QWORD PTR [r15+0x28],rbx
  42adb1:	sub    r14,rbx
  42adb4:	mov    rdi,r15
  42adb7:	xor    esi,esi
  42adb9:	call   QWORD PTR [r15+0x48]
  42adbd:	mov    rbx,QWORD PTR [r15+0x20]
  42adc1:	mov    rdi,QWORD PTR [r15+0x28]
  42adc5:	sub    rbx,rdi
  42adc8:	cmp    r14,rbx
  42adcb:	ja     42ada0 <flatcc_json_printer_uint16_vector_field@@Base+0x530>
  42adcd:	mov    esi,0x20
  42add2:	mov    rdx,r14
  42add5:	call   406080 <memset@plt>
  42adda:	add    r14,QWORD PTR [r15+0x28]
  42adde:	mov    QWORD PTR [r15+0x28],r14
  42ade2:	lea    rax,[r14+0x1]
  42ade6:	mov    QWORD PTR [r15+0x28],rax
  42adea:	mov    BYTE PTR [r14],0x5d
  42adee:	add    rsp,0x8
  42adf2:	pop    rbx
  42adf3:	pop    r12
  42adf5:	pop    r13
  42adf7:	pop    r14
  42adf9:	pop    r15
  42adfb:	pop    rbp
  42adfc:	ret    
  42adfd:	nop    DWORD PTR [rax]

000000000042ae00 <flatcc_json_printer_uint32_vector_field@@Base>:
  42ae00:	push   rbp
  42ae01:	push   r15
  42ae03:	push   r14
  42ae05:	push   r12
  42ae07:	push   rbx
  42ae08:	lea    eax,[rdx+rdx*1]
  42ae0b:	add    eax,0x4
  42ae0e:	cmp    eax,DWORD PTR [rsi+0x10]
  42ae11:	jge    42b10e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42ae17:	mov    rdx,QWORD PTR [rsi+0x8]
  42ae1b:	mov    eax,eax
  42ae1d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42ae22:	test   r12,r12
  42ae25:	je     42b10e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42ae2b:	add    r12,QWORD PTR [rsi]
  42ae2e:	je     42b10e <flatcc_json_printer_uint32_vector_field@@Base+0x30e>
  42ae34:	mov    r15,rdi
  42ae37:	mov    eax,DWORD PTR [rsi+0x18]
  42ae3a:	lea    edx,[rax+0x1]
  42ae3d:	mov    DWORD PTR [rsi+0x18],edx
  42ae40:	test   eax,eax
  42ae42:	je     42ae53 <flatcc_json_printer_uint32_vector_field@@Base+0x53>
  42ae44:	mov    rax,QWORD PTR [r15+0x28]
  42ae48:	lea    rdx,[rax+0x1]
  42ae4c:	mov    QWORD PTR [r15+0x28],rdx
  42ae50:	mov    BYTE PTR [rax],0x2c
  42ae53:	mov    ebx,DWORD PTR [r12]
  42ae57:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ae5b:	movsxd rdx,r8d
  42ae5e:	mov    rdi,r15
  42ae61:	mov    rsi,rcx
  42ae64:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42ae69:	inc    DWORD PTR [r15+0x38]
  42ae6d:	mov    rax,QWORD PTR [r15+0x28]
  42ae71:	lea    rcx,[rax+0x1]
  42ae75:	mov    QWORD PTR [r15+0x28],rcx
  42ae79:	mov    BYTE PTR [rax],0x5b
  42ae7c:	test   ebp,ebp
  42ae7e:	je     42b05c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42ae84:	add    r12,rbx
  42ae87:	cmp    BYTE PTR [r15+0x31],0x0
  42ae8c:	mov    r14,QWORD PTR [r15+0x28]
  42ae90:	je     42af24 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
  42ae96:	lea    rax,[r14+0x1]
  42ae9a:	mov    QWORD PTR [r15+0x28],rax
  42ae9e:	mov    BYTE PTR [r14],0xa
  42aea2:	movsxd rax,DWORD PTR [r15+0x38]
  42aea6:	movzx  r14d,BYTE PTR [r15+0x31]
  42aeab:	imul   r14,rax
  42aeaf:	mov    rbx,QWORD PTR [r15+0x20]
  42aeb3:	mov    rdi,QWORD PTR [r15+0x28]
  42aeb7:	lea    rax,[rdi+r14*1]
  42aebb:	cmp    rax,rbx
  42aebe:	jbe    42af0d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42aec0:	cmp    rdi,rbx
  42aec3:	jb     42aed6 <flatcc_json_printer_uint32_vector_field@@Base+0xd6>
  42aec5:	mov    rdi,r15
  42aec8:	xor    esi,esi
  42aeca:	call   QWORD PTR [r15+0x48]
  42aece:	mov    rbx,QWORD PTR [r15+0x20]
  42aed2:	mov    rdi,QWORD PTR [r15+0x28]
  42aed6:	sub    rbx,rdi
  42aed9:	cmp    rbx,r14
  42aedc:	jae    42af0d <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42aede:	xchg   ax,ax
  42aee0:	mov    esi,0x20
  42aee5:	mov    rdx,rbx
  42aee8:	call   406080 <memset@plt>
  42aeed:	add    QWORD PTR [r15+0x28],rbx
  42aef1:	sub    r14,rbx
  42aef4:	mov    rdi,r15
  42aef7:	xor    esi,esi
  42aef9:	call   QWORD PTR [r15+0x48]
  42aefd:	mov    rbx,QWORD PTR [r15+0x20]
  42af01:	mov    rdi,QWORD PTR [r15+0x28]
  42af05:	sub    rbx,rdi
  42af08:	cmp    r14,rbx
  42af0b:	ja     42aee0 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
  42af0d:	mov    esi,0x20
  42af12:	mov    rdx,r14
  42af15:	call   406080 <memset@plt>
  42af1a:	add    r14,QWORD PTR [r15+0x28]
  42af1e:	mov    QWORD PTR [r15+0x28],r14
  42af22:	jmp    42af37 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42af24:	cmp    r14,QWORD PTR [r15+0x20]
  42af28:	jb     42af37 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42af2a:	mov    rdi,r15
  42af2d:	xor    esi,esi
  42af2f:	call   QWORD PTR [r15+0x48]
  42af33:	mov    r14,QWORD PTR [r15+0x28]
  42af37:	mov    edi,DWORD PTR [r12+0x4]
  42af3c:	mov    rsi,r14
  42af3f:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  42af44:	cdqe   
  42af46:	add    QWORD PTR [r15+0x28],rax
  42af4a:	dec    ebp
  42af4c:	je     42b05c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42af52:	add    r12,0x8
  42af56:	mov    rax,QWORD PTR [r15+0x28]
  42af5a:	jmp    42af97 <flatcc_json_printer_uint32_vector_field@@Base+0x197>
  42af5c:	nop    DWORD PTR [rax+0x0]
  42af60:	mov    esi,0x20
  42af65:	mov    rdx,r14
  42af68:	call   406080 <memset@plt>
  42af6d:	add    r14,QWORD PTR [r15+0x28]
  42af71:	mov    QWORD PTR [r15+0x28],r14
  42af75:	mov    edi,DWORD PTR [r12]
  42af79:	mov    rsi,r14
  42af7c:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  42af81:	cdqe   
  42af83:	add    rax,QWORD PTR [r15+0x28]
  42af87:	mov    QWORD PTR [r15+0x28],rax
  42af8b:	add    r12,0x4
  42af8f:	test   ebp,ebp
  42af91:	je     42b05c <flatcc_json_printer_uint32_vector_field@@Base+0x25c>
  42af97:	dec    ebp
  42af99:	lea    rcx,[rax+0x1]
  42af9d:	mov    QWORD PTR [r15+0x28],rcx
  42afa1:	mov    BYTE PTR [rax],0x2c
  42afa4:	cmp    BYTE PTR [r15+0x31],0x0
  42afa9:	mov    r14,QWORD PTR [r15+0x28]
  42afad:	je     42b040 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42afb3:	lea    rax,[r14+0x1]
  42afb7:	mov    QWORD PTR [r15+0x28],rax
  42afbb:	mov    BYTE PTR [r14],0xa
  42afbf:	movsxd rax,DWORD PTR [r15+0x38]
  42afc3:	movzx  r14d,BYTE PTR [r15+0x31]
  42afc8:	imul   r14,rax
  42afcc:	mov    rbx,QWORD PTR [r15+0x20]
  42afd0:	mov    rdi,QWORD PTR [r15+0x28]
  42afd4:	lea    rax,[rdi+r14*1]
  42afd8:	cmp    rax,rbx
  42afdb:	jbe    42af60 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42afdd:	cmp    rdi,rbx
  42afe0:	jb     42aff3 <flatcc_json_printer_uint32_vector_field@@Base+0x1f3>
  42afe2:	mov    rdi,r15
  42afe5:	xor    esi,esi
  42afe7:	call   QWORD PTR [r15+0x48]
  42afeb:	mov    rbx,QWORD PTR [r15+0x20]
  42afef:	mov    rdi,QWORD PTR [r15+0x28]
  42aff3:	sub    rbx,rdi
  42aff6:	cmp    rbx,r14
  42aff9:	jae    42af60 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42afff:	nop
  42b000:	mov    esi,0x20
  42b005:	mov    rdx,rbx
  42b008:	call   406080 <memset@plt>
  42b00d:	add    QWORD PTR [r15+0x28],rbx
  42b011:	sub    r14,rbx
  42b014:	mov    rdi,r15
  42b017:	xor    esi,esi
  42b019:	call   QWORD PTR [r15+0x48]
  42b01d:	mov    rbx,QWORD PTR [r15+0x20]
  42b021:	mov    rdi,QWORD PTR [r15+0x28]
  42b025:	sub    rbx,rdi
  42b028:	cmp    r14,rbx
  42b02b:	ja     42b000 <flatcc_json_printer_uint32_vector_field@@Base+0x200>
  42b02d:	jmp    42af60 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42b032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b03c:	nop    DWORD PTR [rax+0x0]
  42b040:	cmp    r14,QWORD PTR [r15+0x20]
  42b044:	jb     42af75 <flatcc_json_printer_uint32_vector_field@@Base+0x175>
  42b04a:	mov    rdi,r15
  42b04d:	xor    esi,esi
  42b04f:	call   QWORD PTR [r15+0x48]
  42b053:	mov    r14,QWORD PTR [r15+0x28]
  42b057:	jmp    42af75 <flatcc_json_printer_uint32_vector_field@@Base+0x175>
  42b05c:	cmp    BYTE PTR [r15+0x31],0x0
  42b061:	mov    r14,QWORD PTR [r15+0x28]
  42b065:	je     42b102 <flatcc_json_printer_uint32_vector_field@@Base+0x302>
  42b06b:	lea    rax,[r14+0x1]
  42b06f:	mov    QWORD PTR [r15+0x28],rax
  42b073:	mov    BYTE PTR [r14],0xa
  42b077:	movsxd rax,DWORD PTR [r15+0x38]
  42b07b:	dec    rax
  42b07e:	mov    DWORD PTR [r15+0x38],eax
  42b082:	movzx  r14d,BYTE PTR [r15+0x31]
  42b087:	imul   r14,rax
  42b08b:	mov    rbx,QWORD PTR [r15+0x20]
  42b08f:	mov    rdi,QWORD PTR [r15+0x28]
  42b093:	lea    rax,[rdi+r14*1]
  42b097:	cmp    rax,rbx
  42b09a:	jbe    42b0ed <flatcc_json_printer_uint32_vector_field@@Base+0x2ed>
  42b09c:	cmp    rdi,rbx
  42b09f:	jb     42b0b2 <flatcc_json_printer_uint32_vector_field@@Base+0x2b2>
  42b0a1:	mov    rdi,r15
  42b0a4:	xor    esi,esi
  42b0a6:	call   QWORD PTR [r15+0x48]
  42b0aa:	mov    rbx,QWORD PTR [r15+0x20]
  42b0ae:	mov    rdi,QWORD PTR [r15+0x28]
  42b0b2:	sub    rbx,rdi
  42b0b5:	cmp    rbx,r14
  42b0b8:	jae    42b0ed <flatcc_json_printer_uint32_vector_field@@Base+0x2ed>
  42b0ba:	nop    WORD PTR [rax+rax*1+0x0]
  42b0c0:	mov    esi,0x20
  42b0c5:	mov    rdx,rbx
  42b0c8:	call   406080 <memset@plt>
  42b0cd:	add    QWORD PTR [r15+0x28],rbx
  42b0d1:	sub    r14,rbx
  42b0d4:	mov    rdi,r15
  42b0d7:	xor    esi,esi
  42b0d9:	call   QWORD PTR [r15+0x48]
  42b0dd:	mov    rbx,QWORD PTR [r15+0x20]
  42b0e1:	mov    rdi,QWORD PTR [r15+0x28]
  42b0e5:	sub    rbx,rdi
  42b0e8:	cmp    r14,rbx
  42b0eb:	ja     42b0c0 <flatcc_json_printer_uint32_vector_field@@Base+0x2c0>
  42b0ed:	mov    esi,0x20
  42b0f2:	mov    rdx,r14
  42b0f5:	call   406080 <memset@plt>
  42b0fa:	add    r14,QWORD PTR [r15+0x28]
  42b0fe:	mov    QWORD PTR [r15+0x28],r14
  42b102:	lea    rax,[r14+0x1]
  42b106:	mov    QWORD PTR [r15+0x28],rax
  42b10a:	mov    BYTE PTR [r14],0x5d
  42b10e:	pop    rbx
  42b10f:	pop    r12
  42b111:	pop    r14
  42b113:	pop    r15
  42b115:	pop    rbp
  42b116:	ret    
  42b117:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b120 <flatcc_json_printer_uint64_vector_field@@Base>:
  42b120:	push   rbp
  42b121:	push   r15
  42b123:	push   r14
  42b125:	push   r12
  42b127:	push   rbx
  42b128:	lea    eax,[rdx+rdx*1]
  42b12b:	add    eax,0x4
  42b12e:	cmp    eax,DWORD PTR [rsi+0x10]
  42b131:	jge    42b42e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42b137:	mov    rdx,QWORD PTR [rsi+0x8]
  42b13b:	mov    eax,eax
  42b13d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42b142:	test   r12,r12
  42b145:	je     42b42e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42b14b:	add    r12,QWORD PTR [rsi]
  42b14e:	je     42b42e <flatcc_json_printer_uint64_vector_field@@Base+0x30e>
  42b154:	mov    r15,rdi
  42b157:	mov    eax,DWORD PTR [rsi+0x18]
  42b15a:	lea    edx,[rax+0x1]
  42b15d:	mov    DWORD PTR [rsi+0x18],edx
  42b160:	test   eax,eax
  42b162:	je     42b173 <flatcc_json_printer_uint64_vector_field@@Base+0x53>
  42b164:	mov    rax,QWORD PTR [r15+0x28]
  42b168:	lea    rdx,[rax+0x1]
  42b16c:	mov    QWORD PTR [r15+0x28],rdx
  42b170:	mov    BYTE PTR [rax],0x2c
  42b173:	mov    ebx,DWORD PTR [r12]
  42b177:	mov    ebp,DWORD PTR [r12+rbx*1]
  42b17b:	movsxd rdx,r8d
  42b17e:	mov    rdi,r15
  42b181:	mov    rsi,rcx
  42b184:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42b189:	inc    DWORD PTR [r15+0x38]
  42b18d:	mov    rax,QWORD PTR [r15+0x28]
  42b191:	lea    rcx,[rax+0x1]
  42b195:	mov    QWORD PTR [r15+0x28],rcx
  42b199:	mov    BYTE PTR [rax],0x5b
  42b19c:	test   ebp,ebp
  42b19e:	je     42b37c <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42b1a4:	add    r12,rbx
  42b1a7:	cmp    BYTE PTR [r15+0x31],0x0
  42b1ac:	mov    r14,QWORD PTR [r15+0x28]
  42b1b0:	je     42b244 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
  42b1b6:	lea    rax,[r14+0x1]
  42b1ba:	mov    QWORD PTR [r15+0x28],rax
  42b1be:	mov    BYTE PTR [r14],0xa
  42b1c2:	movsxd rax,DWORD PTR [r15+0x38]
  42b1c6:	movzx  r14d,BYTE PTR [r15+0x31]
  42b1cb:	imul   r14,rax
  42b1cf:	mov    rbx,QWORD PTR [r15+0x20]
  42b1d3:	mov    rdi,QWORD PTR [r15+0x28]
  42b1d7:	lea    rax,[rdi+r14*1]
  42b1db:	cmp    rax,rbx
  42b1de:	jbe    42b22d <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42b1e0:	cmp    rdi,rbx
  42b1e3:	jb     42b1f6 <flatcc_json_printer_uint64_vector_field@@Base+0xd6>
  42b1e5:	mov    rdi,r15
  42b1e8:	xor    esi,esi
  42b1ea:	call   QWORD PTR [r15+0x48]
  42b1ee:	mov    rbx,QWORD PTR [r15+0x20]
  42b1f2:	mov    rdi,QWORD PTR [r15+0x28]
  42b1f6:	sub    rbx,rdi
  42b1f9:	cmp    rbx,r14
  42b1fc:	jae    42b22d <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42b1fe:	xchg   ax,ax
  42b200:	mov    esi,0x20
  42b205:	mov    rdx,rbx
  42b208:	call   406080 <memset@plt>
  42b20d:	add    QWORD PTR [r15+0x28],rbx
  42b211:	sub    r14,rbx
  42b214:	mov    rdi,r15
  42b217:	xor    esi,esi
  42b219:	call   QWORD PTR [r15+0x48]
  42b21d:	mov    rbx,QWORD PTR [r15+0x20]
  42b221:	mov    rdi,QWORD PTR [r15+0x28]
  42b225:	sub    rbx,rdi
  42b228:	cmp    r14,rbx
  42b22b:	ja     42b200 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  42b22d:	mov    esi,0x20
  42b232:	mov    rdx,r14
  42b235:	call   406080 <memset@plt>
  42b23a:	add    r14,QWORD PTR [r15+0x28]
  42b23e:	mov    QWORD PTR [r15+0x28],r14
  42b242:	jmp    42b257 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42b244:	cmp    r14,QWORD PTR [r15+0x20]
  42b248:	jb     42b257 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42b24a:	mov    rdi,r15
  42b24d:	xor    esi,esi
  42b24f:	call   QWORD PTR [r15+0x48]
  42b253:	mov    r14,QWORD PTR [r15+0x28]
  42b257:	mov    rdi,QWORD PTR [r12+0x4]
  42b25c:	mov    rsi,r14
  42b25f:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  42b264:	cdqe   
  42b266:	add    QWORD PTR [r15+0x28],rax
  42b26a:	dec    ebp
  42b26c:	je     42b37c <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42b272:	add    r12,0xc
  42b276:	mov    rax,QWORD PTR [r15+0x28]
  42b27a:	jmp    42b2b7 <flatcc_json_printer_uint64_vector_field@@Base+0x197>
  42b27c:	nop    DWORD PTR [rax+0x0]
  42b280:	mov    esi,0x20
  42b285:	mov    rdx,r14
  42b288:	call   406080 <memset@plt>
  42b28d:	add    r14,QWORD PTR [r15+0x28]
  42b291:	mov    QWORD PTR [r15+0x28],r14
  42b295:	mov    rdi,QWORD PTR [r12]
  42b299:	mov    rsi,r14
  42b29c:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  42b2a1:	cdqe   
  42b2a3:	add    rax,QWORD PTR [r15+0x28]
  42b2a7:	mov    QWORD PTR [r15+0x28],rax
  42b2ab:	add    r12,0x8
  42b2af:	test   ebp,ebp
  42b2b1:	je     42b37c <flatcc_json_printer_uint64_vector_field@@Base+0x25c>
  42b2b7:	dec    ebp
  42b2b9:	lea    rcx,[rax+0x1]
  42b2bd:	mov    QWORD PTR [r15+0x28],rcx
  42b2c1:	mov    BYTE PTR [rax],0x2c
  42b2c4:	cmp    BYTE PTR [r15+0x31],0x0
  42b2c9:	mov    r14,QWORD PTR [r15+0x28]
  42b2cd:	je     42b360 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42b2d3:	lea    rax,[r14+0x1]
  42b2d7:	mov    QWORD PTR [r15+0x28],rax
  42b2db:	mov    BYTE PTR [r14],0xa
  42b2df:	movsxd rax,DWORD PTR [r15+0x38]
  42b2e3:	movzx  r14d,BYTE PTR [r15+0x31]
  42b2e8:	imul   r14,rax
  42b2ec:	mov    rbx,QWORD PTR [r15+0x20]
  42b2f0:	mov    rdi,QWORD PTR [r15+0x28]
  42b2f4:	lea    rax,[rdi+r14*1]
  42b2f8:	cmp    rax,rbx
  42b2fb:	jbe    42b280 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42b2fd:	cmp    rdi,rbx
  42b300:	jb     42b313 <flatcc_json_printer_uint64_vector_field@@Base+0x1f3>
  42b302:	mov    rdi,r15
  42b305:	xor    esi,esi
  42b307:	call   QWORD PTR [r15+0x48]
  42b30b:	mov    rbx,QWORD PTR [r15+0x20]
  42b30f:	mov    rdi,QWORD PTR [r15+0x28]
  42b313:	sub    rbx,rdi
  42b316:	cmp    rbx,r14
  42b319:	jae    42b280 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42b31f:	nop
  42b320:	mov    esi,0x20
  42b325:	mov    rdx,rbx
  42b328:	call   406080 <memset@plt>
  42b32d:	add    QWORD PTR [r15+0x28],rbx
  42b331:	sub    r14,rbx
  42b334:	mov    rdi,r15
  42b337:	xor    esi,esi
  42b339:	call   QWORD PTR [r15+0x48]
  42b33d:	mov    rbx,QWORD PTR [r15+0x20]
  42b341:	mov    rdi,QWORD PTR [r15+0x28]
  42b345:	sub    rbx,rdi
  42b348:	cmp    r14,rbx
  42b34b:	ja     42b320 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
  42b34d:	jmp    42b280 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42b352:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b35c:	nop    DWORD PTR [rax+0x0]
  42b360:	cmp    r14,QWORD PTR [r15+0x20]
  42b364:	jb     42b295 <flatcc_json_printer_uint64_vector_field@@Base+0x175>
  42b36a:	mov    rdi,r15
  42b36d:	xor    esi,esi
  42b36f:	call   QWORD PTR [r15+0x48]
  42b373:	mov    r14,QWORD PTR [r15+0x28]
  42b377:	jmp    42b295 <flatcc_json_printer_uint64_vector_field@@Base+0x175>
  42b37c:	cmp    BYTE PTR [r15+0x31],0x0
  42b381:	mov    r14,QWORD PTR [r15+0x28]
  42b385:	je     42b422 <flatcc_json_printer_uint64_vector_field@@Base+0x302>
  42b38b:	lea    rax,[r14+0x1]
  42b38f:	mov    QWORD PTR [r15+0x28],rax
  42b393:	mov    BYTE PTR [r14],0xa
  42b397:	movsxd rax,DWORD PTR [r15+0x38]
  42b39b:	dec    rax
  42b39e:	mov    DWORD PTR [r15+0x38],eax
  42b3a2:	movzx  r14d,BYTE PTR [r15+0x31]
  42b3a7:	imul   r14,rax
  42b3ab:	mov    rbx,QWORD PTR [r15+0x20]
  42b3af:	mov    rdi,QWORD PTR [r15+0x28]
  42b3b3:	lea    rax,[rdi+r14*1]
  42b3b7:	cmp    rax,rbx
  42b3ba:	jbe    42b40d <flatcc_json_printer_uint64_vector_field@@Base+0x2ed>
  42b3bc:	cmp    rdi,rbx
  42b3bf:	jb     42b3d2 <flatcc_json_printer_uint64_vector_field@@Base+0x2b2>
  42b3c1:	mov    rdi,r15
  42b3c4:	xor    esi,esi
  42b3c6:	call   QWORD PTR [r15+0x48]
  42b3ca:	mov    rbx,QWORD PTR [r15+0x20]
  42b3ce:	mov    rdi,QWORD PTR [r15+0x28]
  42b3d2:	sub    rbx,rdi
  42b3d5:	cmp    rbx,r14
  42b3d8:	jae    42b40d <flatcc_json_printer_uint64_vector_field@@Base+0x2ed>
  42b3da:	nop    WORD PTR [rax+rax*1+0x0]
  42b3e0:	mov    esi,0x20
  42b3e5:	mov    rdx,rbx
  42b3e8:	call   406080 <memset@plt>
  42b3ed:	add    QWORD PTR [r15+0x28],rbx
  42b3f1:	sub    r14,rbx
  42b3f4:	mov    rdi,r15
  42b3f7:	xor    esi,esi
  42b3f9:	call   QWORD PTR [r15+0x48]
  42b3fd:	mov    rbx,QWORD PTR [r15+0x20]
  42b401:	mov    rdi,QWORD PTR [r15+0x28]
  42b405:	sub    rbx,rdi
  42b408:	cmp    r14,rbx
  42b40b:	ja     42b3e0 <flatcc_json_printer_uint64_vector_field@@Base+0x2c0>
  42b40d:	mov    esi,0x20
  42b412:	mov    rdx,r14
  42b415:	call   406080 <memset@plt>
  42b41a:	add    r14,QWORD PTR [r15+0x28]
  42b41e:	mov    QWORD PTR [r15+0x28],r14
  42b422:	lea    rax,[r14+0x1]
  42b426:	mov    QWORD PTR [r15+0x28],rax
  42b42a:	mov    BYTE PTR [r14],0x5d
  42b42e:	pop    rbx
  42b42f:	pop    r12
  42b431:	pop    r14
  42b433:	pop    r15
  42b435:	pop    rbp
  42b436:	ret    
  42b437:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b440 <flatcc_json_printer_int8_vector_field@@Base>:
  42b440:	push   rbp
  42b441:	push   r15
  42b443:	push   r14
  42b445:	push   r13
  42b447:	push   r12
  42b449:	push   rbx
  42b44a:	push   rax
  42b44b:	lea    eax,[rdx+rdx*1]
  42b44e:	add    eax,0x4
  42b451:	cmp    eax,DWORD PTR [rsi+0x10]
  42b454:	jge    42b89e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42b45a:	mov    rdx,QWORD PTR [rsi+0x8]
  42b45e:	mov    eax,eax
  42b460:	movzx  r12d,WORD PTR [rdx+rax*1]
  42b465:	test   r12,r12
  42b468:	je     42b89e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42b46e:	add    r12,QWORD PTR [rsi]
  42b471:	je     42b89e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42b477:	mov    r15,rdi
  42b47a:	mov    eax,DWORD PTR [rsi+0x18]
  42b47d:	lea    edx,[rax+0x1]
  42b480:	mov    DWORD PTR [rsi+0x18],edx
  42b483:	test   eax,eax
  42b485:	je     42b496 <flatcc_json_printer_int8_vector_field@@Base+0x56>
  42b487:	mov    rax,QWORD PTR [r15+0x28]
  42b48b:	lea    rdx,[rax+0x1]
  42b48f:	mov    QWORD PTR [r15+0x28],rdx
  42b493:	mov    BYTE PTR [rax],0x2c
  42b496:	mov    ebx,DWORD PTR [r12]
  42b49a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42b49e:	movsxd rdx,r8d
  42b4a1:	mov    rdi,r15
  42b4a4:	mov    rsi,rcx
  42b4a7:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42b4ac:	inc    DWORD PTR [r15+0x38]
  42b4b0:	mov    rax,QWORD PTR [r15+0x28]
  42b4b4:	lea    rcx,[rax+0x1]
  42b4b8:	mov    QWORD PTR [r15+0x28],rcx
  42b4bc:	mov    BYTE PTR [rax],0x5b
  42b4bf:	test   ebp,ebp
  42b4c1:	je     42b7e5 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42b4c7:	add    r12,rbx
  42b4ca:	cmp    BYTE PTR [r15+0x31],0x0
  42b4cf:	mov    r14,QWORD PTR [r15+0x28]
  42b4d3:	je     42b574 <flatcc_json_printer_int8_vector_field@@Base+0x134>
  42b4d9:	lea    rax,[r14+0x1]
  42b4dd:	mov    QWORD PTR [r15+0x28],rax
  42b4e1:	mov    BYTE PTR [r14],0xa
  42b4e5:	movsxd rax,DWORD PTR [r15+0x38]
  42b4e9:	movzx  r14d,BYTE PTR [r15+0x31]
  42b4ee:	imul   r14,rax
  42b4f2:	mov    rbx,QWORD PTR [r15+0x20]
  42b4f6:	mov    rdi,QWORD PTR [r15+0x28]
  42b4fa:	lea    rax,[rdi+r14*1]
  42b4fe:	cmp    rax,rbx
  42b501:	jbe    42b55d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42b503:	cmp    rdi,rbx
  42b506:	jb     42b519 <flatcc_json_printer_int8_vector_field@@Base+0xd9>
  42b508:	mov    rdi,r15
  42b50b:	xor    esi,esi
  42b50d:	call   QWORD PTR [r15+0x48]
  42b511:	mov    rbx,QWORD PTR [r15+0x20]
  42b515:	mov    rdi,QWORD PTR [r15+0x28]
  42b519:	sub    rbx,rdi
  42b51c:	cmp    rbx,r14
  42b51f:	jae    42b55d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42b521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b52b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b530:	mov    esi,0x20
  42b535:	mov    rdx,rbx
  42b538:	call   406080 <memset@plt>
  42b53d:	add    QWORD PTR [r15+0x28],rbx
  42b541:	sub    r14,rbx
  42b544:	mov    rdi,r15
  42b547:	xor    esi,esi
  42b549:	call   QWORD PTR [r15+0x48]
  42b54d:	mov    rbx,QWORD PTR [r15+0x20]
  42b551:	mov    rdi,QWORD PTR [r15+0x28]
  42b555:	sub    rbx,rdi
  42b558:	cmp    r14,rbx
  42b55b:	ja     42b530 <flatcc_json_printer_int8_vector_field@@Base+0xf0>
  42b55d:	mov    esi,0x20
  42b562:	mov    rdx,r14
  42b565:	call   406080 <memset@plt>
  42b56a:	add    r14,QWORD PTR [r15+0x28]
  42b56e:	mov    QWORD PTR [r15+0x28],r14
  42b572:	jmp    42b587 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42b574:	cmp    r14,QWORD PTR [r15+0x20]
  42b578:	jb     42b587 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42b57a:	mov    rdi,r15
  42b57d:	xor    esi,esi
  42b57f:	call   QWORD PTR [r15+0x48]
  42b583:	mov    r14,QWORD PTR [r15+0x28]
  42b587:	movzx  eax,BYTE PTR [r12+0x4]
  42b58d:	test   al,al
  42b58f:	js     42b595 <flatcc_json_printer_int8_vector_field@@Base+0x155>
  42b591:	mov    ecx,eax
  42b593:	jmp    42b5a0 <flatcc_json_printer_int8_vector_field@@Base+0x160>
  42b595:	mov    BYTE PTR [r14],0x2d
  42b599:	inc    r14
  42b59c:	mov    ecx,eax
  42b59e:	neg    cl
  42b5a0:	shr    rax,0x7
  42b5a4:	cmp    cl,0x64
  42b5a7:	jb     42b5e0 <flatcc_json_printer_int8_vector_field@@Base+0x1a0>
  42b5a9:	mov    BYTE PTR [r14+0x3],0x0
  42b5ae:	movzx  edx,cl
  42b5b1:	lea    esi,[rdx+rdx*4]
  42b5b4:	lea    edx,[rdx+rsi*8]
  42b5b7:	shr    edx,0xc
  42b5ba:	imul   esi,edx,0x64
  42b5bd:	sub    cl,sil
  42b5c0:	movzx  ecx,cl
  42b5c3:	lea    rsi,[rip+0xdc26]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42b5ca:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42b5ce:	mov    WORD PTR [r14+0x1],cx
  42b5d3:	or     dl,0x30
  42b5d6:	mov    BYTE PTR [r14],dl
  42b5d9:	mov    ecx,0x3
  42b5de:	jmp    42b624 <flatcc_json_printer_int8_vector_field@@Base+0x1e4>
  42b5e0:	cmp    cl,0xa
  42b5e3:	jb     42b614 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
  42b5e5:	mov    BYTE PTR [r14+0x2],0x0
  42b5ea:	movzx  edx,cl
  42b5ed:	lea    esi,[rdx+rdx*4]
  42b5f0:	lea    edx,[rdx+rsi*8]
  42b5f3:	shr    edx,0xc
  42b5f6:	imul   edx,edx,0x64
  42b5f9:	sub    cl,dl
  42b5fb:	movzx  ecx,cl
  42b5fe:	lea    rdx,[rip+0xdbeb]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42b605:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42b609:	mov    WORD PTR [r14],cx
  42b60d:	mov    ecx,0x2
  42b612:	jmp    42b624 <flatcc_json_printer_int8_vector_field@@Base+0x1e4>
  42b614:	mov    BYTE PTR [r14+0x1],0x0
  42b619:	add    cl,0x30
  42b61c:	mov    BYTE PTR [r14],cl
  42b61f:	mov    ecx,0x1
  42b624:	add    rcx,rax
  42b627:	add    QWORD PTR [r15+0x28],rcx
  42b62b:	dec    ebp
  42b62d:	je     42b7e5 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42b633:	add    r12,0x5
  42b637:	mov    rcx,QWORD PTR [r15+0x28]
  42b63b:	lea    r13,[rip+0xdbae]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42b642:	jmp    42b696 <flatcc_json_printer_int8_vector_field@@Base+0x256>
  42b644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b64e:	xchg   ax,ax
  42b650:	mov    BYTE PTR [r14+0x3],0x0
  42b655:	movzx  edx,cl
  42b658:	lea    esi,[rdx+rdx*4]
  42b65b:	lea    edx,[rdx+rsi*8]
  42b65e:	shr    edx,0xc
  42b661:	imul   esi,edx,0x64
  42b664:	sub    cl,sil
  42b667:	movzx  ecx,cl
  42b66a:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42b670:	mov    WORD PTR [r14+0x1],cx
  42b675:	or     dl,0x30
  42b678:	mov    BYTE PTR [r14],dl
  42b67b:	mov    ecx,0x3
  42b680:	add    rcx,rax
  42b683:	add    rcx,QWORD PTR [r15+0x28]
  42b687:	mov    QWORD PTR [r15+0x28],rcx
  42b68b:	inc    r12
  42b68e:	test   ebp,ebp
  42b690:	je     42b7e5 <flatcc_json_printer_int8_vector_field@@Base+0x3a5>
  42b696:	lea    rax,[rcx+0x1]
  42b69a:	mov    QWORD PTR [r15+0x28],rax
  42b69e:	mov    BYTE PTR [rcx],0x2c
  42b6a1:	cmp    BYTE PTR [r15+0x31],0x0
  42b6a6:	mov    r14,QWORD PTR [r15+0x28]
  42b6aa:	je     42b750 <flatcc_json_printer_int8_vector_field@@Base+0x310>
  42b6b0:	lea    rax,[r14+0x1]
  42b6b4:	mov    QWORD PTR [r15+0x28],rax
  42b6b8:	mov    BYTE PTR [r14],0xa
  42b6bc:	movsxd rax,DWORD PTR [r15+0x38]
  42b6c0:	movzx  r14d,BYTE PTR [r15+0x31]
  42b6c5:	imul   r14,rax
  42b6c9:	mov    rbx,QWORD PTR [r15+0x20]
  42b6cd:	mov    rdi,QWORD PTR [r15+0x28]
  42b6d1:	lea    rax,[rdi+r14*1]
  42b6d5:	cmp    rax,rbx
  42b6d8:	jbe    42b72d <flatcc_json_printer_int8_vector_field@@Base+0x2ed>
  42b6da:	cmp    rdi,rbx
  42b6dd:	jb     42b6f0 <flatcc_json_printer_int8_vector_field@@Base+0x2b0>
  42b6df:	mov    rdi,r15
  42b6e2:	xor    esi,esi
  42b6e4:	call   QWORD PTR [r15+0x48]
  42b6e8:	mov    rbx,QWORD PTR [r15+0x20]
  42b6ec:	mov    rdi,QWORD PTR [r15+0x28]
  42b6f0:	sub    rbx,rdi
  42b6f3:	cmp    rbx,r14
  42b6f6:	jae    42b72d <flatcc_json_printer_int8_vector_field@@Base+0x2ed>
  42b6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b700:	mov    esi,0x20
  42b705:	mov    rdx,rbx
  42b708:	call   406080 <memset@plt>
  42b70d:	add    QWORD PTR [r15+0x28],rbx
  42b711:	sub    r14,rbx
  42b714:	mov    rdi,r15
  42b717:	xor    esi,esi
  42b719:	call   QWORD PTR [r15+0x48]
  42b71d:	mov    rbx,QWORD PTR [r15+0x20]
  42b721:	mov    rdi,QWORD PTR [r15+0x28]
  42b725:	sub    rbx,rdi
  42b728:	cmp    r14,rbx
  42b72b:	ja     42b700 <flatcc_json_printer_int8_vector_field@@Base+0x2c0>
  42b72d:	mov    esi,0x20
  42b732:	mov    rdx,r14
  42b735:	call   406080 <memset@plt>
  42b73a:	add    r14,QWORD PTR [r15+0x28]
  42b73e:	mov    QWORD PTR [r15+0x28],r14
  42b742:	jmp    42b770 <flatcc_json_printer_int8_vector_field@@Base+0x330>
  42b744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b74e:	xchg   ax,ax
  42b750:	cmp    r14,QWORD PTR [r15+0x20]
  42b754:	jb     42b770 <flatcc_json_printer_int8_vector_field@@Base+0x330>
  42b756:	mov    rdi,r15
  42b759:	xor    esi,esi
  42b75b:	call   QWORD PTR [r15+0x48]
  42b75f:	mov    r14,QWORD PTR [r15+0x28]
  42b763:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b76d:	nop    DWORD PTR [rax]
  42b770:	movzx  eax,BYTE PTR [r12]
  42b775:	test   al,al
  42b777:	js     42b780 <flatcc_json_printer_int8_vector_field@@Base+0x340>
  42b779:	mov    ecx,eax
  42b77b:	jmp    42b78b <flatcc_json_printer_int8_vector_field@@Base+0x34b>
  42b77d:	nop    DWORD PTR [rax]
  42b780:	mov    BYTE PTR [r14],0x2d
  42b784:	inc    r14
  42b787:	mov    ecx,eax
  42b789:	neg    cl
  42b78b:	dec    ebp
  42b78d:	shr    rax,0x7
  42b791:	cmp    cl,0x64
  42b794:	jae    42b650 <flatcc_json_printer_int8_vector_field@@Base+0x210>
  42b79a:	cmp    cl,0xa
  42b79d:	jb     42b7d0 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42b79f:	mov    BYTE PTR [r14+0x2],0x0
  42b7a4:	movzx  edx,cl
  42b7a7:	lea    esi,[rdx+rdx*4]
  42b7aa:	lea    edx,[rdx+rsi*8]
  42b7ad:	shr    edx,0xc
  42b7b0:	imul   edx,edx,0x64
  42b7b3:	sub    cl,dl
  42b7b5:	movzx  ecx,cl
  42b7b8:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42b7be:	mov    WORD PTR [r14],cx
  42b7c2:	mov    ecx,0x2
  42b7c7:	jmp    42b680 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  42b7cc:	nop    DWORD PTR [rax+0x0]
  42b7d0:	mov    BYTE PTR [r14+0x1],0x0
  42b7d5:	add    cl,0x30
  42b7d8:	mov    BYTE PTR [r14],cl
  42b7db:	mov    ecx,0x1
  42b7e0:	jmp    42b680 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  42b7e5:	cmp    BYTE PTR [r15+0x31],0x0
  42b7ea:	mov    r14,QWORD PTR [r15+0x28]
  42b7ee:	je     42b892 <flatcc_json_printer_int8_vector_field@@Base+0x452>
  42b7f4:	lea    rax,[r14+0x1]
  42b7f8:	mov    QWORD PTR [r15+0x28],rax
  42b7fc:	mov    BYTE PTR [r14],0xa
  42b800:	movsxd rax,DWORD PTR [r15+0x38]
  42b804:	dec    rax
  42b807:	mov    DWORD PTR [r15+0x38],eax
  42b80b:	movzx  r14d,BYTE PTR [r15+0x31]
  42b810:	imul   r14,rax
  42b814:	mov    rbx,QWORD PTR [r15+0x20]
  42b818:	mov    rdi,QWORD PTR [r15+0x28]
  42b81c:	lea    rax,[rdi+r14*1]
  42b820:	cmp    rax,rbx
  42b823:	jbe    42b87d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42b825:	cmp    rdi,rbx
  42b828:	jb     42b83b <flatcc_json_printer_int8_vector_field@@Base+0x3fb>
  42b82a:	mov    rdi,r15
  42b82d:	xor    esi,esi
  42b82f:	call   QWORD PTR [r15+0x48]
  42b833:	mov    rbx,QWORD PTR [r15+0x20]
  42b837:	mov    rdi,QWORD PTR [r15+0x28]
  42b83b:	sub    rbx,rdi
  42b83e:	cmp    rbx,r14
  42b841:	jae    42b87d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42b843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b84d:	nop    DWORD PTR [rax]
  42b850:	mov    esi,0x20
  42b855:	mov    rdx,rbx
  42b858:	call   406080 <memset@plt>
  42b85d:	add    QWORD PTR [r15+0x28],rbx
  42b861:	sub    r14,rbx
  42b864:	mov    rdi,r15
  42b867:	xor    esi,esi
  42b869:	call   QWORD PTR [r15+0x48]
  42b86d:	mov    rbx,QWORD PTR [r15+0x20]
  42b871:	mov    rdi,QWORD PTR [r15+0x28]
  42b875:	sub    rbx,rdi
  42b878:	cmp    r14,rbx
  42b87b:	ja     42b850 <flatcc_json_printer_int8_vector_field@@Base+0x410>
  42b87d:	mov    esi,0x20
  42b882:	mov    rdx,r14
  42b885:	call   406080 <memset@plt>
  42b88a:	add    r14,QWORD PTR [r15+0x28]
  42b88e:	mov    QWORD PTR [r15+0x28],r14
  42b892:	lea    rax,[r14+0x1]
  42b896:	mov    QWORD PTR [r15+0x28],rax
  42b89a:	mov    BYTE PTR [r14],0x5d
  42b89e:	add    rsp,0x8
  42b8a2:	pop    rbx
  42b8a3:	pop    r12
  42b8a5:	pop    r13
  42b8a7:	pop    r14
  42b8a9:	pop    r15
  42b8ab:	pop    rbp
  42b8ac:	ret    
  42b8ad:	nop    DWORD PTR [rax]

000000000042b8b0 <flatcc_json_printer_int16_vector_field@@Base>:
  42b8b0:	push   rbp
  42b8b1:	push   r15
  42b8b3:	push   r14
  42b8b5:	push   r13
  42b8b7:	push   r12
  42b8b9:	push   rbx
  42b8ba:	push   rax
  42b8bb:	lea    eax,[rdx+rdx*1]
  42b8be:	add    eax,0x4
  42b8c1:	cmp    eax,DWORD PTR [rsi+0x10]
  42b8c4:	jge    42be4e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42b8ca:	mov    rdx,QWORD PTR [rsi+0x8]
  42b8ce:	mov    eax,eax
  42b8d0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42b8d5:	test   r12,r12
  42b8d8:	je     42be4e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42b8de:	add    r12,QWORD PTR [rsi]
  42b8e1:	je     42be4e <flatcc_json_printer_int16_vector_field@@Base+0x59e>
  42b8e7:	mov    r15,rdi
  42b8ea:	mov    eax,DWORD PTR [rsi+0x18]
  42b8ed:	lea    edx,[rax+0x1]
  42b8f0:	mov    DWORD PTR [rsi+0x18],edx
  42b8f3:	test   eax,eax
  42b8f5:	je     42b906 <flatcc_json_printer_int16_vector_field@@Base+0x56>
  42b8f7:	mov    rax,QWORD PTR [r15+0x28]
  42b8fb:	lea    rdx,[rax+0x1]
  42b8ff:	mov    QWORD PTR [r15+0x28],rdx
  42b903:	mov    BYTE PTR [rax],0x2c
  42b906:	mov    ebx,DWORD PTR [r12]
  42b90a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42b90e:	movsxd rdx,r8d
  42b911:	mov    rdi,r15
  42b914:	mov    rsi,rcx
  42b917:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42b91c:	inc    DWORD PTR [r15+0x38]
  42b920:	mov    rax,QWORD PTR [r15+0x28]
  42b924:	lea    rcx,[rax+0x1]
  42b928:	mov    QWORD PTR [r15+0x28],rcx
  42b92c:	mov    BYTE PTR [rax],0x5b
  42b92f:	test   ebp,ebp
  42b931:	je     42bd9e <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42b937:	add    r12,rbx
  42b93a:	cmp    BYTE PTR [r15+0x31],0x0
  42b93f:	mov    r14,QWORD PTR [r15+0x28]
  42b943:	je     42b9e4 <flatcc_json_printer_int16_vector_field@@Base+0x134>
  42b949:	lea    rax,[r14+0x1]
  42b94d:	mov    QWORD PTR [r15+0x28],rax
  42b951:	mov    BYTE PTR [r14],0xa
  42b955:	movsxd rax,DWORD PTR [r15+0x38]
  42b959:	movzx  r14d,BYTE PTR [r15+0x31]
  42b95e:	imul   r14,rax
  42b962:	mov    rbx,QWORD PTR [r15+0x20]
  42b966:	mov    rdi,QWORD PTR [r15+0x28]
  42b96a:	lea    rax,[rdi+r14*1]
  42b96e:	cmp    rax,rbx
  42b971:	jbe    42b9cd <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42b973:	cmp    rdi,rbx
  42b976:	jb     42b989 <flatcc_json_printer_int16_vector_field@@Base+0xd9>
  42b978:	mov    rdi,r15
  42b97b:	xor    esi,esi
  42b97d:	call   QWORD PTR [r15+0x48]
  42b981:	mov    rbx,QWORD PTR [r15+0x20]
  42b985:	mov    rdi,QWORD PTR [r15+0x28]
  42b989:	sub    rbx,rdi
  42b98c:	cmp    rbx,r14
  42b98f:	jae    42b9cd <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42b991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b99b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b9a0:	mov    esi,0x20
  42b9a5:	mov    rdx,rbx
  42b9a8:	call   406080 <memset@plt>
  42b9ad:	add    QWORD PTR [r15+0x28],rbx
  42b9b1:	sub    r14,rbx
  42b9b4:	mov    rdi,r15
  42b9b7:	xor    esi,esi
  42b9b9:	call   QWORD PTR [r15+0x48]
  42b9bd:	mov    rbx,QWORD PTR [r15+0x20]
  42b9c1:	mov    rdi,QWORD PTR [r15+0x28]
  42b9c5:	sub    rbx,rdi
  42b9c8:	cmp    r14,rbx
  42b9cb:	ja     42b9a0 <flatcc_json_printer_int16_vector_field@@Base+0xf0>
  42b9cd:	mov    esi,0x20
  42b9d2:	mov    rdx,r14
  42b9d5:	call   406080 <memset@plt>
  42b9da:	add    r14,QWORD PTR [r15+0x28]
  42b9de:	mov    QWORD PTR [r15+0x28],r14
  42b9e2:	jmp    42b9f7 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42b9e4:	cmp    r14,QWORD PTR [r15+0x20]
  42b9e8:	jb     42b9f7 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42b9ea:	mov    rdi,r15
  42b9ed:	xor    esi,esi
  42b9ef:	call   QWORD PTR [r15+0x48]
  42b9f3:	mov    r14,QWORD PTR [r15+0x28]
  42b9f7:	movzx  eax,WORD PTR [r12+0x4]
  42b9fd:	test   ax,ax
  42ba00:	js     42ba06 <flatcc_json_printer_int16_vector_field@@Base+0x156>
  42ba02:	mov    edx,eax
  42ba04:	jmp    42ba11 <flatcc_json_printer_int16_vector_field@@Base+0x161>
  42ba06:	mov    BYTE PTR [r14],0x2d
  42ba0a:	inc    r14
  42ba0d:	mov    edx,eax
  42ba0f:	neg    edx
  42ba11:	shr    eax,0xf
  42ba14:	movzx  edi,dx
  42ba17:	cmp    edi,0x3e8
  42ba1d:	jb     42ba2f <flatcc_json_printer_int16_vector_field@@Base+0x17f>
  42ba1f:	xor    ecx,ecx
  42ba21:	cmp    edi,0x270f
  42ba27:	seta   cl
  42ba2a:	or     ecx,0x4
  42ba2d:	jmp    42ba56 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  42ba2f:	cmp    dx,0x64
  42ba33:	jb     42ba4b <flatcc_json_printer_int16_vector_field@@Base+0x19b>
  42ba35:	mov    BYTE PTR [r14+0x3],0x0
  42ba3a:	add    r14,0x3
  42ba3e:	mov    ecx,0x3
  42ba43:	mov    rsi,r14
  42ba46:	jmp    42bb04 <flatcc_json_printer_int16_vector_field@@Base+0x254>
  42ba4b:	xor    ecx,ecx
  42ba4d:	cmp    dx,0x9
  42ba51:	seta   cl
  42ba54:	inc    ecx
  42ba56:	mov    ebx,ecx
  42ba58:	lea    rsi,[r14+rbx*1]
  42ba5c:	mov    BYTE PTR [r14+rbx*1],0x0
  42ba61:	test   cl,0x1
  42ba64:	jne    42bac7 <flatcc_json_printer_int16_vector_field@@Base+0x217>
  42ba66:	cmp    ecx,0x2
  42ba69:	je     42ba9d <flatcc_json_printer_int16_vector_field@@Base+0x1ed>
  42ba6b:	cmp    ecx,0x4
  42ba6e:	jne    42bb36 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42ba74:	mov    edx,edi
  42ba76:	shr    edx,0x2
  42ba79:	imul   edx,edx,0x147b
  42ba7f:	shr    edx,0x11
  42ba82:	imul   ebx,edx,0x64
  42ba85:	sub    edi,ebx
  42ba87:	movzx  edi,di
  42ba8a:	lea    rbx,[rip+0xd75f]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42ba91:	movzx  edi,WORD PTR [rbx+rdi*2]
  42ba95:	mov    WORD PTR [rsi-0x2],di
  42ba99:	add    rsi,0xfffffffffffffffe
  42ba9d:	movzx  edx,dx
  42baa0:	mov    edi,edx
  42baa2:	shr    edi,0x2
  42baa5:	imul   edi,edi,0x147b
  42baab:	shr    edi,0x11
  42baae:	imul   edi,edi,0x64
  42bab1:	sub    edx,edi
  42bab3:	movzx  edx,dx
  42bab6:	lea    rdi,[rip+0xd733]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42babd:	movzx  edx,WORD PTR [rdi+rdx*2]
  42bac1:	mov    WORD PTR [rsi-0x2],dx
  42bac5:	jmp    42bb36 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42bac7:	cmp    ecx,0x1
  42baca:	je     42bb30 <flatcc_json_printer_int16_vector_field@@Base+0x280>
  42bacc:	cmp    ecx,0x3
  42bacf:	je     42bb04 <flatcc_json_printer_int16_vector_field@@Base+0x254>
  42bad1:	cmp    ecx,0x5
  42bad4:	jne    42bb36 <flatcc_json_printer_int16_vector_field@@Base+0x286>
  42bad6:	mov    ecx,edi
  42bad8:	shr    ecx,0x2
  42badb:	imul   edx,ecx,0x147b
  42bae1:	shr    edx,0x11
  42bae4:	imul   ecx,edx,0x64
  42bae7:	sub    edi,ecx
  42bae9:	movzx  ecx,di
  42baec:	lea    rdi,[rip+0xd6fd]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42baf3:	movzx  ecx,WORD PTR [rdi+rcx*2]
  42baf7:	mov    WORD PTR [rsi-0x2],cx
  42bafb:	add    rsi,0xfffffffffffffffe
  42baff:	mov    ecx,0x5
  42bb04:	movzx  edi,dx
  42bb07:	mov    edx,edi
  42bb09:	shr    edx,0x2
  42bb0c:	imul   edx,edx,0x147b
  42bb12:	shr    edx,0x11
  42bb15:	imul   ebx,edx,0x64
  42bb18:	sub    edi,ebx
  42bb1a:	movzx  edi,di
  42bb1d:	lea    rbx,[rip+0xd6cc]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42bb24:	movzx  edi,WORD PTR [rbx+rdi*2]
  42bb28:	mov    WORD PTR [rsi-0x2],di
  42bb2c:	add    rsi,0xfffffffffffffffe
  42bb30:	add    dl,0x30
  42bb33:	mov    BYTE PTR [rsi-0x1],dl
  42bb36:	add    ecx,eax
  42bb38:	add    QWORD PTR [r15+0x28],rcx
  42bb3c:	dec    ebp
  42bb3e:	je     42bd9e <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42bb44:	add    r12,0x6
  42bb48:	mov    rcx,QWORD PTR [r15+0x28]
  42bb4c:	lea    r13,[rip+0xd69d]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  42bb53:	jmp    42bb99 <flatcc_json_printer_int16_vector_field@@Base+0x2e9>
  42bb55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb5f:	nop
  42bb60:	movzx  edx,dx
  42bb63:	mov    edi,edx
  42bb65:	shr    edi,0x2
  42bb68:	imul   edi,edi,0x147b
  42bb6e:	shr    edi,0x11
  42bb71:	imul   edi,edi,0x64
  42bb74:	sub    edx,edi
  42bb76:	movzx  edx,dx
  42bb79:	movzx  edx,WORD PTR [r13+rdx*2+0x0]
  42bb7f:	mov    WORD PTR [rsi-0x2],dx
  42bb83:	add    ecx,eax
  42bb85:	add    rcx,QWORD PTR [r15+0x28]
  42bb89:	mov    QWORD PTR [r15+0x28],rcx
  42bb8d:	add    r12,0x2
  42bb91:	test   ebp,ebp
  42bb93:	je     42bd9e <flatcc_json_printer_int16_vector_field@@Base+0x4ee>
  42bb99:	lea    rax,[rcx+0x1]
  42bb9d:	mov    QWORD PTR [r15+0x28],rax
  42bba1:	mov    BYTE PTR [rcx],0x2c
  42bba4:	cmp    BYTE PTR [r15+0x31],0x0
  42bba9:	mov    r14,QWORD PTR [r15+0x28]
  42bbad:	je     42bc50 <flatcc_json_printer_int16_vector_field@@Base+0x3a0>
  42bbb3:	lea    rax,[r14+0x1]
  42bbb7:	mov    QWORD PTR [r15+0x28],rax
  42bbbb:	mov    BYTE PTR [r14],0xa
  42bbbf:	movsxd rax,DWORD PTR [r15+0x38]
  42bbc3:	movzx  r14d,BYTE PTR [r15+0x31]
  42bbc8:	imul   r14,rax
  42bbcc:	mov    rbx,QWORD PTR [r15+0x20]
  42bbd0:	mov    rdi,QWORD PTR [r15+0x28]
  42bbd4:	lea    rax,[rdi+r14*1]
  42bbd8:	cmp    rax,rbx
  42bbdb:	jbe    42bc2d <flatcc_json_printer_int16_vector_field@@Base+0x37d>
  42bbdd:	cmp    rdi,rbx
  42bbe0:	jb     42bbf3 <flatcc_json_printer_int16_vector_field@@Base+0x343>
  42bbe2:	mov    rdi,r15
  42bbe5:	xor    esi,esi
  42bbe7:	call   QWORD PTR [r15+0x48]
  42bbeb:	mov    rbx,QWORD PTR [r15+0x20]
  42bbef:	mov    rdi,QWORD PTR [r15+0x28]
  42bbf3:	sub    rbx,rdi
  42bbf6:	cmp    rbx,r14
  42bbf9:	jae    42bc2d <flatcc_json_printer_int16_vector_field@@Base+0x37d>
  42bbfb:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc00:	mov    esi,0x20
  42bc05:	mov    rdx,rbx
  42bc08:	call   406080 <memset@plt>
  42bc0d:	add    QWORD PTR [r15+0x28],rbx
  42bc11:	sub    r14,rbx
  42bc14:	mov    rdi,r15
  42bc17:	xor    esi,esi
  42bc19:	call   QWORD PTR [r15+0x48]
  42bc1d:	mov    rbx,QWORD PTR [r15+0x20]
  42bc21:	mov    rdi,QWORD PTR [r15+0x28]
  42bc25:	sub    rbx,rdi
  42bc28:	cmp    r14,rbx
  42bc2b:	ja     42bc00 <flatcc_json_printer_int16_vector_field@@Base+0x350>
  42bc2d:	mov    esi,0x20
  42bc32:	mov    rdx,r14
  42bc35:	call   406080 <memset@plt>
  42bc3a:	add    r14,QWORD PTR [r15+0x28]
  42bc3e:	mov    QWORD PTR [r15+0x28],r14
  42bc42:	jmp    42bc70 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42bc44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc4e:	xchg   ax,ax
  42bc50:	cmp    r14,QWORD PTR [r15+0x20]
  42bc54:	jb     42bc70 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42bc56:	mov    rdi,r15
  42bc59:	xor    esi,esi
  42bc5b:	call   QWORD PTR [r15+0x48]
  42bc5f:	mov    r14,QWORD PTR [r15+0x28]
  42bc63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc6d:	nop    DWORD PTR [rax]
  42bc70:	movzx  eax,WORD PTR [r12]
  42bc75:	test   ax,ax
  42bc78:	js     42bc80 <flatcc_json_printer_int16_vector_field@@Base+0x3d0>
  42bc7a:	mov    edx,eax
  42bc7c:	jmp    42bc8b <flatcc_json_printer_int16_vector_field@@Base+0x3db>
  42bc7e:	xchg   ax,ax
  42bc80:	mov    BYTE PTR [r14],0x2d
  42bc84:	inc    r14
  42bc87:	mov    edx,eax
  42bc89:	neg    edx
  42bc8b:	dec    ebp
  42bc8d:	shr    eax,0xf
  42bc90:	movzx  edi,dx
  42bc93:	cmp    edi,0x3e8
  42bc99:	jb     42bcb0 <flatcc_json_printer_int16_vector_field@@Base+0x400>
  42bc9b:	xor    ecx,ecx
  42bc9d:	cmp    edi,0x270f
  42bca3:	seta   cl
  42bca6:	or     ecx,0x4
  42bca9:	jmp    42bcdb <flatcc_json_printer_int16_vector_field@@Base+0x42b>
  42bcab:	nop    DWORD PTR [rax+rax*1+0x0]
  42bcb0:	cmp    dx,0x64
  42bcb4:	jb     42bcd0 <flatcc_json_printer_int16_vector_field@@Base+0x420>
  42bcb6:	mov    BYTE PTR [r14+0x3],0x0
  42bcbb:	add    r14,0x3
  42bcbf:	mov    ecx,0x3
  42bcc4:	mov    rsi,r14
  42bcc7:	jmp    42bd6c <flatcc_json_printer_int16_vector_field@@Base+0x4bc>
  42bccc:	nop    DWORD PTR [rax+0x0]
  42bcd0:	xor    ecx,ecx
  42bcd2:	cmp    dx,0x9
  42bcd6:	seta   cl
  42bcd9:	inc    ecx
  42bcdb:	mov    ebx,ecx
  42bcdd:	lea    rsi,[r14+rbx*1]
  42bce1:	mov    BYTE PTR [r14+rbx*1],0x0
  42bce6:	test   cl,0x1
  42bce9:	jne    42bd30 <flatcc_json_printer_int16_vector_field@@Base+0x480>
  42bceb:	cmp    ecx,0x2
  42bcee:	je     42bb60 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
  42bcf4:	cmp    ecx,0x4
  42bcf7:	jne    42bb83 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42bcfd:	mov    edx,edi
  42bcff:	shr    edx,0x2
  42bd02:	imul   edx,edx,0x147b
  42bd08:	shr    edx,0x11
  42bd0b:	imul   ebx,edx,0x64
  42bd0e:	sub    edi,ebx
  42bd10:	movzx  edi,di
  42bd13:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42bd19:	mov    WORD PTR [rsi-0x2],di
  42bd1d:	add    rsi,0xfffffffffffffffe
  42bd21:	jmp    42bb60 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
  42bd26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd30:	cmp    ecx,0x1
  42bd33:	je     42bd93 <flatcc_json_printer_int16_vector_field@@Base+0x4e3>
  42bd35:	cmp    ecx,0x3
  42bd38:	je     42bd6c <flatcc_json_printer_int16_vector_field@@Base+0x4bc>
  42bd3a:	cmp    ecx,0x5
  42bd3d:	jne    42bb83 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42bd43:	mov    ecx,edi
  42bd45:	shr    ecx,0x2
  42bd48:	imul   edx,ecx,0x147b
  42bd4e:	shr    edx,0x11
  42bd51:	imul   ecx,edx,0x64
  42bd54:	sub    edi,ecx
  42bd56:	movzx  ecx,di
  42bd59:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42bd5f:	mov    WORD PTR [rsi-0x2],cx
  42bd63:	add    rsi,0xfffffffffffffffe
  42bd67:	mov    ecx,0x5
  42bd6c:	movzx  edi,dx
  42bd6f:	mov    edx,edi
  42bd71:	shr    edx,0x2
  42bd74:	imul   edx,edx,0x147b
  42bd7a:	shr    edx,0x11
  42bd7d:	imul   ebx,edx,0x64
  42bd80:	sub    edi,ebx
  42bd82:	movzx  edi,di
  42bd85:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42bd8b:	mov    WORD PTR [rsi-0x2],di
  42bd8f:	add    rsi,0xfffffffffffffffe
  42bd93:	add    dl,0x30
  42bd96:	mov    BYTE PTR [rsi-0x1],dl
  42bd99:	jmp    42bb83 <flatcc_json_printer_int16_vector_field@@Base+0x2d3>
  42bd9e:	cmp    BYTE PTR [r15+0x31],0x0
  42bda3:	mov    r14,QWORD PTR [r15+0x28]
  42bda7:	je     42be42 <flatcc_json_printer_int16_vector_field@@Base+0x592>
  42bdad:	lea    rax,[r14+0x1]
  42bdb1:	mov    QWORD PTR [r15+0x28],rax
  42bdb5:	mov    BYTE PTR [r14],0xa
  42bdb9:	movsxd rax,DWORD PTR [r15+0x38]
  42bdbd:	dec    rax
  42bdc0:	mov    DWORD PTR [r15+0x38],eax
  42bdc4:	movzx  r14d,BYTE PTR [r15+0x31]
  42bdc9:	imul   r14,rax
  42bdcd:	mov    rbx,QWORD PTR [r15+0x20]
  42bdd1:	mov    rdi,QWORD PTR [r15+0x28]
  42bdd5:	lea    rax,[rdi+r14*1]
  42bdd9:	cmp    rax,rbx
  42bddc:	jbe    42be2d <flatcc_json_printer_int16_vector_field@@Base+0x57d>
  42bdde:	cmp    rdi,rbx
  42bde1:	jb     42bdf4 <flatcc_json_printer_int16_vector_field@@Base+0x544>
  42bde3:	mov    rdi,r15
  42bde6:	xor    esi,esi
  42bde8:	call   QWORD PTR [r15+0x48]
  42bdec:	mov    rbx,QWORD PTR [r15+0x20]
  42bdf0:	mov    rdi,QWORD PTR [r15+0x28]
  42bdf4:	sub    rbx,rdi
  42bdf7:	cmp    rbx,r14
  42bdfa:	jae    42be2d <flatcc_json_printer_int16_vector_field@@Base+0x57d>
  42bdfc:	nop    DWORD PTR [rax+0x0]
  42be00:	mov    esi,0x20
  42be05:	mov    rdx,rbx
  42be08:	call   406080 <memset@plt>
  42be0d:	add    QWORD PTR [r15+0x28],rbx
  42be11:	sub    r14,rbx
  42be14:	mov    rdi,r15
  42be17:	xor    esi,esi
  42be19:	call   QWORD PTR [r15+0x48]
  42be1d:	mov    rbx,QWORD PTR [r15+0x20]
  42be21:	mov    rdi,QWORD PTR [r15+0x28]
  42be25:	sub    rbx,rdi
  42be28:	cmp    r14,rbx
  42be2b:	ja     42be00 <flatcc_json_printer_int16_vector_field@@Base+0x550>
  42be2d:	mov    esi,0x20
  42be32:	mov    rdx,r14
  42be35:	call   406080 <memset@plt>
  42be3a:	add    r14,QWORD PTR [r15+0x28]
  42be3e:	mov    QWORD PTR [r15+0x28],r14
  42be42:	lea    rax,[r14+0x1]
  42be46:	mov    QWORD PTR [r15+0x28],rax
  42be4a:	mov    BYTE PTR [r14],0x5d
  42be4e:	add    rsp,0x8
  42be52:	pop    rbx
  42be53:	pop    r12
  42be55:	pop    r13
  42be57:	pop    r14
  42be59:	pop    r15
  42be5b:	pop    rbp
  42be5c:	ret    
  42be5d:	nop    DWORD PTR [rax]

000000000042be60 <flatcc_json_printer_int32_vector_field@@Base>:
  42be60:	push   rbp
  42be61:	push   r15
  42be63:	push   r14
  42be65:	push   r12
  42be67:	push   rbx
  42be68:	lea    eax,[rdx+rdx*1]
  42be6b:	add    eax,0x4
  42be6e:	cmp    eax,DWORD PTR [rsi+0x10]
  42be71:	jge    42c19e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42be77:	mov    rdx,QWORD PTR [rsi+0x8]
  42be7b:	mov    eax,eax
  42be7d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42be82:	test   r12,r12
  42be85:	je     42c19e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42be8b:	add    r12,QWORD PTR [rsi]
  42be8e:	je     42c19e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42be94:	mov    r15,rdi
  42be97:	mov    eax,DWORD PTR [rsi+0x18]
  42be9a:	lea    edx,[rax+0x1]
  42be9d:	mov    DWORD PTR [rsi+0x18],edx
  42bea0:	test   eax,eax
  42bea2:	je     42beb3 <flatcc_json_printer_int32_vector_field@@Base+0x53>
  42bea4:	mov    rax,QWORD PTR [r15+0x28]
  42bea8:	lea    rdx,[rax+0x1]
  42beac:	mov    QWORD PTR [r15+0x28],rdx
  42beb0:	mov    BYTE PTR [rax],0x2c
  42beb3:	mov    ebx,DWORD PTR [r12]
  42beb7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42bebb:	movsxd rdx,r8d
  42bebe:	mov    rdi,r15
  42bec1:	mov    rsi,rcx
  42bec4:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42bec9:	inc    DWORD PTR [r15+0x38]
  42becd:	mov    rax,QWORD PTR [r15+0x28]
  42bed1:	lea    rcx,[rax+0x1]
  42bed5:	mov    QWORD PTR [r15+0x28],rcx
  42bed9:	mov    BYTE PTR [rax],0x5b
  42bedc:	test   ebp,ebp
  42bede:	je     42c0f1 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42bee4:	add    r12,rbx
  42bee7:	cmp    BYTE PTR [r15+0x31],0x0
  42beec:	mov    r14,QWORD PTR [r15+0x28]
  42bef0:	je     42bf84 <flatcc_json_printer_int32_vector_field@@Base+0x124>
  42bef6:	lea    rax,[r14+0x1]
  42befa:	mov    QWORD PTR [r15+0x28],rax
  42befe:	mov    BYTE PTR [r14],0xa
  42bf02:	movsxd rax,DWORD PTR [r15+0x38]
  42bf06:	movzx  r14d,BYTE PTR [r15+0x31]
  42bf0b:	imul   r14,rax
  42bf0f:	mov    rbx,QWORD PTR [r15+0x20]
  42bf13:	mov    rdi,QWORD PTR [r15+0x28]
  42bf17:	lea    rax,[rdi+r14*1]
  42bf1b:	cmp    rax,rbx
  42bf1e:	jbe    42bf6d <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42bf20:	cmp    rdi,rbx
  42bf23:	jb     42bf36 <flatcc_json_printer_int32_vector_field@@Base+0xd6>
  42bf25:	mov    rdi,r15
  42bf28:	xor    esi,esi
  42bf2a:	call   QWORD PTR [r15+0x48]
  42bf2e:	mov    rbx,QWORD PTR [r15+0x20]
  42bf32:	mov    rdi,QWORD PTR [r15+0x28]
  42bf36:	sub    rbx,rdi
  42bf39:	cmp    rbx,r14
  42bf3c:	jae    42bf6d <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42bf3e:	xchg   ax,ax
  42bf40:	mov    esi,0x20
  42bf45:	mov    rdx,rbx
  42bf48:	call   406080 <memset@plt>
  42bf4d:	add    QWORD PTR [r15+0x28],rbx
  42bf51:	sub    r14,rbx
  42bf54:	mov    rdi,r15
  42bf57:	xor    esi,esi
  42bf59:	call   QWORD PTR [r15+0x48]
  42bf5d:	mov    rbx,QWORD PTR [r15+0x20]
  42bf61:	mov    rdi,QWORD PTR [r15+0x28]
  42bf65:	sub    rbx,rdi
  42bf68:	cmp    r14,rbx
  42bf6b:	ja     42bf40 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
  42bf6d:	mov    esi,0x20
  42bf72:	mov    rdx,r14
  42bf75:	call   406080 <memset@plt>
  42bf7a:	add    r14,QWORD PTR [r15+0x28]
  42bf7e:	mov    QWORD PTR [r15+0x28],r14
  42bf82:	jmp    42bf97 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42bf84:	cmp    r14,QWORD PTR [r15+0x20]
  42bf88:	jb     42bf97 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42bf8a:	mov    rdi,r15
  42bf8d:	xor    esi,esi
  42bf8f:	call   QWORD PTR [r15+0x48]
  42bf93:	mov    r14,QWORD PTR [r15+0x28]
  42bf97:	mov    edi,DWORD PTR [r12+0x4]
  42bf9c:	mov    ebx,edi
  42bf9e:	shr    ebx,0x1f
  42bfa1:	test   edi,edi
  42bfa3:	jns    42bfae <flatcc_json_printer_int32_vector_field@@Base+0x14e>
  42bfa5:	mov    BYTE PTR [r14],0x2d
  42bfa9:	inc    r14
  42bfac:	neg    edi
  42bfae:	mov    rsi,r14
  42bfb1:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  42bfb6:	add    eax,ebx
  42bfb8:	cdqe   
  42bfba:	add    QWORD PTR [r15+0x28],rax
  42bfbe:	dec    ebp
  42bfc0:	je     42c0f1 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42bfc6:	add    r12,0x8
  42bfca:	mov    rax,QWORD PTR [r15+0x28]
  42bfce:	jmp    42bff0 <flatcc_json_printer_int32_vector_field@@Base+0x190>
  42bfd0:	mov    rsi,r14
  42bfd3:	call   426fb0 <flatcc_json_printer_uint32@@Base+0x20>
  42bfd8:	add    eax,ebx
  42bfda:	cdqe   
  42bfdc:	add    rax,QWORD PTR [r15+0x28]
  42bfe0:	mov    QWORD PTR [r15+0x28],rax
  42bfe4:	add    r12,0x4
  42bfe8:	test   ebp,ebp
  42bfea:	je     42c0f1 <flatcc_json_printer_int32_vector_field@@Base+0x291>
  42bff0:	lea    rcx,[rax+0x1]
  42bff4:	mov    QWORD PTR [r15+0x28],rcx
  42bff8:	mov    BYTE PTR [rax],0x2c
  42bffb:	cmp    BYTE PTR [r15+0x31],0x0
  42c000:	mov    r14,QWORD PTR [r15+0x28]
  42c004:	je     42c0b0 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42c00a:	lea    rax,[r14+0x1]
  42c00e:	mov    QWORD PTR [r15+0x28],rax
  42c012:	mov    BYTE PTR [r14],0xa
  42c016:	movsxd rax,DWORD PTR [r15+0x38]
  42c01a:	movzx  r14d,BYTE PTR [r15+0x31]
  42c01f:	imul   r14,rax
  42c023:	mov    rbx,QWORD PTR [r15+0x20]
  42c027:	mov    rdi,QWORD PTR [r15+0x28]
  42c02b:	lea    rax,[rdi+r14*1]
  42c02f:	cmp    rax,rbx
  42c032:	jbe    42c08d <flatcc_json_printer_int32_vector_field@@Base+0x22d>
  42c034:	cmp    rdi,rbx
  42c037:	jb     42c04a <flatcc_json_printer_int32_vector_field@@Base+0x1ea>
  42c039:	mov    rdi,r15
  42c03c:	xor    esi,esi
  42c03e:	call   QWORD PTR [r15+0x48]
  42c042:	mov    rbx,QWORD PTR [r15+0x20]
  42c046:	mov    rdi,QWORD PTR [r15+0x28]
  42c04a:	sub    rbx,rdi
  42c04d:	cmp    rbx,r14
  42c050:	jae    42c08d <flatcc_json_printer_int32_vector_field@@Base+0x22d>
  42c052:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c05c:	nop    DWORD PTR [rax+0x0]
  42c060:	mov    esi,0x20
  42c065:	mov    rdx,rbx
  42c068:	call   406080 <memset@plt>
  42c06d:	add    QWORD PTR [r15+0x28],rbx
  42c071:	sub    r14,rbx
  42c074:	mov    rdi,r15
  42c077:	xor    esi,esi
  42c079:	call   QWORD PTR [r15+0x48]
  42c07d:	mov    rbx,QWORD PTR [r15+0x20]
  42c081:	mov    rdi,QWORD PTR [r15+0x28]
  42c085:	sub    rbx,rdi
  42c088:	cmp    r14,rbx
  42c08b:	ja     42c060 <flatcc_json_printer_int32_vector_field@@Base+0x200>
  42c08d:	mov    esi,0x20
  42c092:	mov    rdx,r14
  42c095:	call   406080 <memset@plt>
  42c09a:	add    r14,QWORD PTR [r15+0x28]
  42c09e:	mov    QWORD PTR [r15+0x28],r14
  42c0a2:	jmp    42c0d0 <flatcc_json_printer_int32_vector_field@@Base+0x270>
  42c0a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c0ae:	xchg   ax,ax
  42c0b0:	cmp    r14,QWORD PTR [r15+0x20]
  42c0b4:	jb     42c0d0 <flatcc_json_printer_int32_vector_field@@Base+0x270>
  42c0b6:	mov    rdi,r15
  42c0b9:	xor    esi,esi
  42c0bb:	call   QWORD PTR [r15+0x48]
  42c0bf:	mov    r14,QWORD PTR [r15+0x28]
  42c0c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c0cd:	nop    DWORD PTR [rax]
  42c0d0:	dec    ebp
  42c0d2:	mov    edi,DWORD PTR [r12]
  42c0d6:	mov    ebx,edi
  42c0d8:	shr    ebx,0x1f
  42c0db:	test   edi,edi
  42c0dd:	jns    42bfd0 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42c0e3:	mov    BYTE PTR [r14],0x2d
  42c0e7:	inc    r14
  42c0ea:	neg    edi
  42c0ec:	jmp    42bfd0 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42c0f1:	cmp    BYTE PTR [r15+0x31],0x0
  42c0f6:	mov    r14,QWORD PTR [r15+0x28]
  42c0fa:	je     42c192 <flatcc_json_printer_int32_vector_field@@Base+0x332>
  42c100:	lea    rax,[r14+0x1]
  42c104:	mov    QWORD PTR [r15+0x28],rax
  42c108:	mov    BYTE PTR [r14],0xa
  42c10c:	movsxd rax,DWORD PTR [r15+0x38]
  42c110:	dec    rax
  42c113:	mov    DWORD PTR [r15+0x38],eax
  42c117:	movzx  r14d,BYTE PTR [r15+0x31]
  42c11c:	imul   r14,rax
  42c120:	mov    rbx,QWORD PTR [r15+0x20]
  42c124:	mov    rdi,QWORD PTR [r15+0x28]
  42c128:	lea    rax,[rdi+r14*1]
  42c12c:	cmp    rax,rbx
  42c12f:	jbe    42c17d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42c131:	cmp    rdi,rbx
  42c134:	jb     42c147 <flatcc_json_printer_int32_vector_field@@Base+0x2e7>
  42c136:	mov    rdi,r15
  42c139:	xor    esi,esi
  42c13b:	call   QWORD PTR [r15+0x48]
  42c13f:	mov    rbx,QWORD PTR [r15+0x20]
  42c143:	mov    rdi,QWORD PTR [r15+0x28]
  42c147:	sub    rbx,rdi
  42c14a:	cmp    rbx,r14
  42c14d:	jae    42c17d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42c14f:	nop
  42c150:	mov    esi,0x20
  42c155:	mov    rdx,rbx
  42c158:	call   406080 <memset@plt>
  42c15d:	add    QWORD PTR [r15+0x28],rbx
  42c161:	sub    r14,rbx
  42c164:	mov    rdi,r15
  42c167:	xor    esi,esi
  42c169:	call   QWORD PTR [r15+0x48]
  42c16d:	mov    rbx,QWORD PTR [r15+0x20]
  42c171:	mov    rdi,QWORD PTR [r15+0x28]
  42c175:	sub    rbx,rdi
  42c178:	cmp    r14,rbx
  42c17b:	ja     42c150 <flatcc_json_printer_int32_vector_field@@Base+0x2f0>
  42c17d:	mov    esi,0x20
  42c182:	mov    rdx,r14
  42c185:	call   406080 <memset@plt>
  42c18a:	add    r14,QWORD PTR [r15+0x28]
  42c18e:	mov    QWORD PTR [r15+0x28],r14
  42c192:	lea    rax,[r14+0x1]
  42c196:	mov    QWORD PTR [r15+0x28],rax
  42c19a:	mov    BYTE PTR [r14],0x5d
  42c19e:	pop    rbx
  42c19f:	pop    r12
  42c1a1:	pop    r14
  42c1a3:	pop    r15
  42c1a5:	pop    rbp
  42c1a6:	ret    
  42c1a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c1b0 <flatcc_json_printer_int64_vector_field@@Base>:
  42c1b0:	push   rbp
  42c1b1:	push   r15
  42c1b3:	push   r14
  42c1b5:	push   r12
  42c1b7:	push   rbx
  42c1b8:	lea    eax,[rdx+rdx*1]
  42c1bb:	add    eax,0x4
  42c1be:	cmp    eax,DWORD PTR [rsi+0x10]
  42c1c1:	jge    42c50e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42c1c7:	mov    rdx,QWORD PTR [rsi+0x8]
  42c1cb:	mov    eax,eax
  42c1cd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c1d2:	test   r12,r12
  42c1d5:	je     42c50e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42c1db:	add    r12,QWORD PTR [rsi]
  42c1de:	je     42c50e <flatcc_json_printer_int64_vector_field@@Base+0x35e>
  42c1e4:	mov    r15,rdi
  42c1e7:	mov    eax,DWORD PTR [rsi+0x18]
  42c1ea:	lea    edx,[rax+0x1]
  42c1ed:	mov    DWORD PTR [rsi+0x18],edx
  42c1f0:	test   eax,eax
  42c1f2:	je     42c203 <flatcc_json_printer_int64_vector_field@@Base+0x53>
  42c1f4:	mov    rax,QWORD PTR [r15+0x28]
  42c1f8:	lea    rdx,[rax+0x1]
  42c1fc:	mov    QWORD PTR [r15+0x28],rdx
  42c200:	mov    BYTE PTR [rax],0x2c
  42c203:	mov    ebx,DWORD PTR [r12]
  42c207:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c20b:	movsxd rdx,r8d
  42c20e:	mov    rdi,r15
  42c211:	mov    rsi,rcx
  42c214:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42c219:	inc    DWORD PTR [r15+0x38]
  42c21d:	mov    rax,QWORD PTR [r15+0x28]
  42c221:	lea    rcx,[rax+0x1]
  42c225:	mov    QWORD PTR [r15+0x28],rcx
  42c229:	mov    BYTE PTR [rax],0x5b
  42c22c:	test   ebp,ebp
  42c22e:	je     42c455 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42c234:	add    r12,rbx
  42c237:	cmp    BYTE PTR [r15+0x31],0x0
  42c23c:	mov    r14,QWORD PTR [r15+0x28]
  42c240:	je     42c2d4 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  42c246:	lea    rax,[r14+0x1]
  42c24a:	mov    QWORD PTR [r15+0x28],rax
  42c24e:	mov    BYTE PTR [r14],0xa
  42c252:	movsxd rax,DWORD PTR [r15+0x38]
  42c256:	movzx  r14d,BYTE PTR [r15+0x31]
  42c25b:	imul   r14,rax
  42c25f:	mov    rbx,QWORD PTR [r15+0x20]
  42c263:	mov    rdi,QWORD PTR [r15+0x28]
  42c267:	lea    rax,[rdi+r14*1]
  42c26b:	cmp    rax,rbx
  42c26e:	jbe    42c2bd <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42c270:	cmp    rdi,rbx
  42c273:	jb     42c286 <flatcc_json_printer_int64_vector_field@@Base+0xd6>
  42c275:	mov    rdi,r15
  42c278:	xor    esi,esi
  42c27a:	call   QWORD PTR [r15+0x48]
  42c27e:	mov    rbx,QWORD PTR [r15+0x20]
  42c282:	mov    rdi,QWORD PTR [r15+0x28]
  42c286:	sub    rbx,rdi
  42c289:	cmp    rbx,r14
  42c28c:	jae    42c2bd <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42c28e:	xchg   ax,ax
  42c290:	mov    esi,0x20
  42c295:	mov    rdx,rbx
  42c298:	call   406080 <memset@plt>
  42c29d:	add    QWORD PTR [r15+0x28],rbx
  42c2a1:	sub    r14,rbx
  42c2a4:	mov    rdi,r15
  42c2a7:	xor    esi,esi
  42c2a9:	call   QWORD PTR [r15+0x48]
  42c2ad:	mov    rbx,QWORD PTR [r15+0x20]
  42c2b1:	mov    rdi,QWORD PTR [r15+0x28]
  42c2b5:	sub    rbx,rdi
  42c2b8:	cmp    r14,rbx
  42c2bb:	ja     42c290 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
  42c2bd:	mov    esi,0x20
  42c2c2:	mov    rdx,r14
  42c2c5:	call   406080 <memset@plt>
  42c2ca:	add    r14,QWORD PTR [r15+0x28]
  42c2ce:	mov    QWORD PTR [r15+0x28],r14
  42c2d2:	jmp    42c2e7 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42c2d4:	cmp    r14,QWORD PTR [r15+0x20]
  42c2d8:	jb     42c2e7 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42c2da:	mov    rdi,r15
  42c2dd:	xor    esi,esi
  42c2df:	call   QWORD PTR [r15+0x48]
  42c2e3:	mov    r14,QWORD PTR [r15+0x28]
  42c2e7:	mov    rdi,QWORD PTR [r12+0x4]
  42c2ec:	mov    rbx,rdi
  42c2ef:	shr    rbx,0x3f
  42c2f3:	test   rdi,rdi
  42c2f6:	jns    42c302 <flatcc_json_printer_int64_vector_field@@Base+0x152>
  42c2f8:	mov    BYTE PTR [r14],0x2d
  42c2fc:	inc    r14
  42c2ff:	neg    rdi
  42c302:	mov    rsi,r14
  42c305:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  42c30a:	add    eax,ebx
  42c30c:	cdqe   
  42c30e:	add    QWORD PTR [r15+0x28],rax
  42c312:	dec    ebp
  42c314:	je     42c455 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42c31a:	add    r12,0xc
  42c31e:	mov    rax,QWORD PTR [r15+0x28]
  42c322:	jmp    42c350 <flatcc_json_printer_int64_vector_field@@Base+0x1a0>
  42c324:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c32e:	xchg   ax,ax
  42c330:	mov    rsi,r14
  42c333:	call   427210 <flatcc_json_printer_uint64@@Base+0x20>
  42c338:	add    eax,ebx
  42c33a:	cdqe   
  42c33c:	add    rax,QWORD PTR [r15+0x28]
  42c340:	mov    QWORD PTR [r15+0x28],rax
  42c344:	add    r12,0x8
  42c348:	test   ebp,ebp
  42c34a:	je     42c455 <flatcc_json_printer_int64_vector_field@@Base+0x2a5>
  42c350:	lea    rcx,[rax+0x1]
  42c354:	mov    QWORD PTR [r15+0x28],rcx
  42c358:	mov    BYTE PTR [rax],0x2c
  42c35b:	cmp    BYTE PTR [r15+0x31],0x0
  42c360:	mov    r14,QWORD PTR [r15+0x28]
  42c364:	je     42c410 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42c36a:	lea    rax,[r14+0x1]
  42c36e:	mov    QWORD PTR [r15+0x28],rax
  42c372:	mov    BYTE PTR [r14],0xa
  42c376:	movsxd rax,DWORD PTR [r15+0x38]
  42c37a:	movzx  r14d,BYTE PTR [r15+0x31]
  42c37f:	imul   r14,rax
  42c383:	mov    rbx,QWORD PTR [r15+0x20]
  42c387:	mov    rdi,QWORD PTR [r15+0x28]
  42c38b:	lea    rax,[rdi+r14*1]
  42c38f:	cmp    rax,rbx
  42c392:	jbe    42c3ed <flatcc_json_printer_int64_vector_field@@Base+0x23d>
  42c394:	cmp    rdi,rbx
  42c397:	jb     42c3aa <flatcc_json_printer_int64_vector_field@@Base+0x1fa>
  42c399:	mov    rdi,r15
  42c39c:	xor    esi,esi
  42c39e:	call   QWORD PTR [r15+0x48]
  42c3a2:	mov    rbx,QWORD PTR [r15+0x20]
  42c3a6:	mov    rdi,QWORD PTR [r15+0x28]
  42c3aa:	sub    rbx,rdi
  42c3ad:	cmp    rbx,r14
  42c3b0:	jae    42c3ed <flatcc_json_printer_int64_vector_field@@Base+0x23d>
  42c3b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c3bc:	nop    DWORD PTR [rax+0x0]
  42c3c0:	mov    esi,0x20
  42c3c5:	mov    rdx,rbx
  42c3c8:	call   406080 <memset@plt>
  42c3cd:	add    QWORD PTR [r15+0x28],rbx
  42c3d1:	sub    r14,rbx
  42c3d4:	mov    rdi,r15
  42c3d7:	xor    esi,esi
  42c3d9:	call   QWORD PTR [r15+0x48]
  42c3dd:	mov    rbx,QWORD PTR [r15+0x20]
  42c3e1:	mov    rdi,QWORD PTR [r15+0x28]
  42c3e5:	sub    rbx,rdi
  42c3e8:	cmp    r14,rbx
  42c3eb:	ja     42c3c0 <flatcc_json_printer_int64_vector_field@@Base+0x210>
  42c3ed:	mov    esi,0x20
  42c3f2:	mov    rdx,r14
  42c3f5:	call   406080 <memset@plt>
  42c3fa:	add    r14,QWORD PTR [r15+0x28]
  42c3fe:	mov    QWORD PTR [r15+0x28],r14
  42c402:	jmp    42c430 <flatcc_json_printer_int64_vector_field@@Base+0x280>
  42c404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c40e:	xchg   ax,ax
  42c410:	cmp    r14,QWORD PTR [r15+0x20]
  42c414:	jb     42c430 <flatcc_json_printer_int64_vector_field@@Base+0x280>
  42c416:	mov    rdi,r15
  42c419:	xor    esi,esi
  42c41b:	call   QWORD PTR [r15+0x48]
  42c41f:	mov    r14,QWORD PTR [r15+0x28]
  42c423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c42d:	nop    DWORD PTR [rax]
  42c430:	dec    ebp
  42c432:	mov    rdi,QWORD PTR [r12]
  42c436:	mov    rbx,rdi
  42c439:	shr    rbx,0x3f
  42c43d:	test   rdi,rdi
  42c440:	jns    42c330 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42c446:	mov    BYTE PTR [r14],0x2d
  42c44a:	inc    r14
  42c44d:	neg    rdi
  42c450:	jmp    42c330 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42c455:	cmp    BYTE PTR [r15+0x31],0x0
  42c45a:	mov    r14,QWORD PTR [r15+0x28]
  42c45e:	je     42c502 <flatcc_json_printer_int64_vector_field@@Base+0x352>
  42c464:	lea    rax,[r14+0x1]
  42c468:	mov    QWORD PTR [r15+0x28],rax
  42c46c:	mov    BYTE PTR [r14],0xa
  42c470:	movsxd rax,DWORD PTR [r15+0x38]
  42c474:	dec    rax
  42c477:	mov    DWORD PTR [r15+0x38],eax
  42c47b:	movzx  r14d,BYTE PTR [r15+0x31]
  42c480:	imul   r14,rax
  42c484:	mov    rbx,QWORD PTR [r15+0x20]
  42c488:	mov    rdi,QWORD PTR [r15+0x28]
  42c48c:	lea    rax,[rdi+r14*1]
  42c490:	cmp    rax,rbx
  42c493:	jbe    42c4ed <flatcc_json_printer_int64_vector_field@@Base+0x33d>
  42c495:	cmp    rdi,rbx
  42c498:	jb     42c4ab <flatcc_json_printer_int64_vector_field@@Base+0x2fb>
  42c49a:	mov    rdi,r15
  42c49d:	xor    esi,esi
  42c49f:	call   QWORD PTR [r15+0x48]
  42c4a3:	mov    rbx,QWORD PTR [r15+0x20]
  42c4a7:	mov    rdi,QWORD PTR [r15+0x28]
  42c4ab:	sub    rbx,rdi
  42c4ae:	cmp    rbx,r14
  42c4b1:	jae    42c4ed <flatcc_json_printer_int64_vector_field@@Base+0x33d>
  42c4b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4bd:	nop    DWORD PTR [rax]
  42c4c0:	mov    esi,0x20
  42c4c5:	mov    rdx,rbx
  42c4c8:	call   406080 <memset@plt>
  42c4cd:	add    QWORD PTR [r15+0x28],rbx
  42c4d1:	sub    r14,rbx
  42c4d4:	mov    rdi,r15
  42c4d7:	xor    esi,esi
  42c4d9:	call   QWORD PTR [r15+0x48]
  42c4dd:	mov    rbx,QWORD PTR [r15+0x20]
  42c4e1:	mov    rdi,QWORD PTR [r15+0x28]
  42c4e5:	sub    rbx,rdi
  42c4e8:	cmp    r14,rbx
  42c4eb:	ja     42c4c0 <flatcc_json_printer_int64_vector_field@@Base+0x310>
  42c4ed:	mov    esi,0x20
  42c4f2:	mov    rdx,r14
  42c4f5:	call   406080 <memset@plt>
  42c4fa:	add    r14,QWORD PTR [r15+0x28]
  42c4fe:	mov    QWORD PTR [r15+0x28],r14
  42c502:	lea    rax,[r14+0x1]
  42c506:	mov    QWORD PTR [r15+0x28],rax
  42c50a:	mov    BYTE PTR [r14],0x5d
  42c50e:	pop    rbx
  42c50f:	pop    r12
  42c511:	pop    r14
  42c513:	pop    r15
  42c515:	pop    rbp
  42c516:	ret    
  42c517:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c520 <flatcc_json_printer_bool_vector_field@@Base>:
  42c520:	push   rbp
  42c521:	push   r15
  42c523:	push   r14
  42c525:	push   r12
  42c527:	push   rbx
  42c528:	lea    eax,[rdx+rdx*1]
  42c52b:	add    eax,0x4
  42c52e:	cmp    eax,DWORD PTR [rsi+0x10]
  42c531:	jge    42c88e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42c537:	mov    rdx,QWORD PTR [rsi+0x8]
  42c53b:	mov    eax,eax
  42c53d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c542:	test   r12,r12
  42c545:	je     42c88e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42c54b:	add    r12,QWORD PTR [rsi]
  42c54e:	je     42c88e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42c554:	mov    r15,rdi
  42c557:	mov    eax,DWORD PTR [rsi+0x18]
  42c55a:	lea    edx,[rax+0x1]
  42c55d:	mov    DWORD PTR [rsi+0x18],edx
  42c560:	test   eax,eax
  42c562:	je     42c573 <flatcc_json_printer_bool_vector_field@@Base+0x53>
  42c564:	mov    rax,QWORD PTR [r15+0x28]
  42c568:	lea    rdx,[rax+0x1]
  42c56c:	mov    QWORD PTR [r15+0x28],rdx
  42c570:	mov    BYTE PTR [rax],0x2c
  42c573:	mov    ebx,DWORD PTR [r12]
  42c577:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c57b:	movsxd rdx,r8d
  42c57e:	mov    rdi,r15
  42c581:	mov    rsi,rcx
  42c584:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42c589:	inc    DWORD PTR [r15+0x38]
  42c58d:	mov    rax,QWORD PTR [r15+0x28]
  42c591:	lea    rcx,[rax+0x1]
  42c595:	mov    QWORD PTR [r15+0x28],rcx
  42c599:	mov    BYTE PTR [rax],0x5b
  42c59c:	test   ebp,ebp
  42c59e:	je     42c7d3 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42c5a4:	add    r12,rbx
  42c5a7:	cmp    BYTE PTR [r15+0x31],0x0
  42c5ac:	mov    r14,QWORD PTR [r15+0x28]
  42c5b0:	je     42c64c <flatcc_json_printer_bool_vector_field@@Base+0x12c>
  42c5b6:	lea    rax,[r14+0x1]
  42c5ba:	mov    QWORD PTR [r15+0x28],rax
  42c5be:	mov    BYTE PTR [r14],0xa
  42c5c2:	movsxd rax,DWORD PTR [r15+0x38]
  42c5c6:	movzx  r14d,BYTE PTR [r15+0x31]
  42c5cb:	imul   r14,rax
  42c5cf:	mov    rbx,QWORD PTR [r15+0x20]
  42c5d3:	mov    rdi,QWORD PTR [r15+0x28]
  42c5d7:	lea    rax,[rdi+r14*1]
  42c5db:	cmp    rax,rbx
  42c5de:	jbe    42c62d <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42c5e0:	cmp    rdi,rbx
  42c5e3:	jb     42c5f6 <flatcc_json_printer_bool_vector_field@@Base+0xd6>
  42c5e5:	mov    rdi,r15
  42c5e8:	xor    esi,esi
  42c5ea:	call   QWORD PTR [r15+0x48]
  42c5ee:	mov    rbx,QWORD PTR [r15+0x20]
  42c5f2:	mov    rdi,QWORD PTR [r15+0x28]
  42c5f6:	sub    rbx,rdi
  42c5f9:	cmp    rbx,r14
  42c5fc:	jae    42c62d <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42c5fe:	xchg   ax,ax
  42c600:	mov    esi,0x20
  42c605:	mov    rdx,rbx
  42c608:	call   406080 <memset@plt>
  42c60d:	add    QWORD PTR [r15+0x28],rbx
  42c611:	sub    r14,rbx
  42c614:	mov    rdi,r15
  42c617:	xor    esi,esi
  42c619:	call   QWORD PTR [r15+0x48]
  42c61d:	mov    rbx,QWORD PTR [r15+0x20]
  42c621:	mov    rdi,QWORD PTR [r15+0x28]
  42c625:	sub    rbx,rdi
  42c628:	cmp    r14,rbx
  42c62b:	ja     42c600 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
  42c62d:	mov    esi,0x20
  42c632:	mov    rdx,r14
  42c635:	call   406080 <memset@plt>
  42c63a:	add    r14,QWORD PTR [r15+0x28]
  42c63e:	mov    QWORD PTR [r15+0x28],r14
  42c642:	cmp    BYTE PTR [r12+0x4],0x0
  42c648:	jne    42c667 <flatcc_json_printer_bool_vector_field@@Base+0x147>
  42c64a:	jmp    42c67a <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42c64c:	cmp    r14,QWORD PTR [r15+0x20]
  42c650:	jb     42c65f <flatcc_json_printer_bool_vector_field@@Base+0x13f>
  42c652:	mov    rdi,r15
  42c655:	xor    esi,esi
  42c657:	call   QWORD PTR [r15+0x48]
  42c65b:	mov    r14,QWORD PTR [r15+0x28]
  42c65f:	cmp    BYTE PTR [r12+0x4],0x0
  42c665:	je     42c67a <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42c667:	mov    BYTE PTR [r14+0x4],0x0
  42c66c:	mov    DWORD PTR [r14],0x65757274
  42c673:	mov    eax,0x4
  42c678:	jmp    42c68d <flatcc_json_printer_bool_vector_field@@Base+0x16d>
  42c67a:	mov    WORD PTR [r14+0x4],0x65
  42c681:	mov    DWORD PTR [r14],0x736c6166
  42c688:	mov    eax,0x5
  42c68d:	add    QWORD PTR [r15+0x28],rax
  42c691:	dec    ebp
  42c693:	je     42c7d3 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42c699:	add    r12,0x5
  42c69d:	mov    rax,QWORD PTR [r15+0x28]
  42c6a1:	jmp    42c6d6 <flatcc_json_printer_bool_vector_field@@Base+0x1b6>
  42c6a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c6ad:	nop    DWORD PTR [rax]
  42c6b0:	mov    WORD PTR [r14+0x4],0x65
  42c6b7:	mov    DWORD PTR [r14],0x736c6166
  42c6be:	mov    eax,0x5
  42c6c3:	add    rax,QWORD PTR [r15+0x28]
  42c6c7:	mov    QWORD PTR [r15+0x28],rax
  42c6cb:	inc    r12
  42c6ce:	test   ebp,ebp
  42c6d0:	je     42c7d3 <flatcc_json_printer_bool_vector_field@@Base+0x2b3>
  42c6d6:	lea    rcx,[rax+0x1]
  42c6da:	mov    QWORD PTR [r15+0x28],rcx
  42c6de:	mov    BYTE PTR [rax],0x2c
  42c6e1:	cmp    BYTE PTR [r15+0x31],0x0
  42c6e6:	mov    r14,QWORD PTR [r15+0x28]
  42c6ea:	je     42c790 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42c6f0:	lea    rax,[r14+0x1]
  42c6f4:	mov    QWORD PTR [r15+0x28],rax
  42c6f8:	mov    BYTE PTR [r14],0xa
  42c6fc:	movsxd rax,DWORD PTR [r15+0x38]
  42c700:	movzx  r14d,BYTE PTR [r15+0x31]
  42c705:	imul   r14,rax
  42c709:	mov    rbx,QWORD PTR [r15+0x20]
  42c70d:	mov    rdi,QWORD PTR [r15+0x28]
  42c711:	lea    rax,[rdi+r14*1]
  42c715:	cmp    rax,rbx
  42c718:	jbe    42c76d <flatcc_json_printer_bool_vector_field@@Base+0x24d>
  42c71a:	cmp    rdi,rbx
  42c71d:	jb     42c730 <flatcc_json_printer_bool_vector_field@@Base+0x210>
  42c71f:	mov    rdi,r15
  42c722:	xor    esi,esi
  42c724:	call   QWORD PTR [r15+0x48]
  42c728:	mov    rbx,QWORD PTR [r15+0x20]
  42c72c:	mov    rdi,QWORD PTR [r15+0x28]
  42c730:	sub    rbx,rdi
  42c733:	cmp    rbx,r14
  42c736:	jae    42c76d <flatcc_json_printer_bool_vector_field@@Base+0x24d>
  42c738:	nop    DWORD PTR [rax+rax*1+0x0]
  42c740:	mov    esi,0x20
  42c745:	mov    rdx,rbx
  42c748:	call   406080 <memset@plt>
  42c74d:	add    QWORD PTR [r15+0x28],rbx
  42c751:	sub    r14,rbx
  42c754:	mov    rdi,r15
  42c757:	xor    esi,esi
  42c759:	call   QWORD PTR [r15+0x48]
  42c75d:	mov    rbx,QWORD PTR [r15+0x20]
  42c761:	mov    rdi,QWORD PTR [r15+0x28]
  42c765:	sub    rbx,rdi
  42c768:	cmp    r14,rbx
  42c76b:	ja     42c740 <flatcc_json_printer_bool_vector_field@@Base+0x220>
  42c76d:	mov    esi,0x20
  42c772:	mov    rdx,r14
  42c775:	call   406080 <memset@plt>
  42c77a:	add    r14,QWORD PTR [r15+0x28]
  42c77e:	mov    QWORD PTR [r15+0x28],r14
  42c782:	jmp    42c7b0 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42c784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c78e:	xchg   ax,ax
  42c790:	cmp    r14,QWORD PTR [r15+0x20]
  42c794:	jb     42c7b0 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42c796:	mov    rdi,r15
  42c799:	xor    esi,esi
  42c79b:	call   QWORD PTR [r15+0x48]
  42c79f:	mov    r14,QWORD PTR [r15+0x28]
  42c7a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c7ad:	nop    DWORD PTR [rax]
  42c7b0:	dec    ebp
  42c7b2:	cmp    BYTE PTR [r12],0x0
  42c7b7:	je     42c6b0 <flatcc_json_printer_bool_vector_field@@Base+0x190>
  42c7bd:	mov    BYTE PTR [r14+0x4],0x0
  42c7c2:	mov    DWORD PTR [r14],0x65757274
  42c7c9:	mov    eax,0x4
  42c7ce:	jmp    42c6c3 <flatcc_json_printer_bool_vector_field@@Base+0x1a3>
  42c7d3:	cmp    BYTE PTR [r15+0x31],0x0
  42c7d8:	mov    r14,QWORD PTR [r15+0x28]
  42c7dc:	je     42c882 <flatcc_json_printer_bool_vector_field@@Base+0x362>
  42c7e2:	lea    rax,[r14+0x1]
  42c7e6:	mov    QWORD PTR [r15+0x28],rax
  42c7ea:	mov    BYTE PTR [r14],0xa
  42c7ee:	movsxd rax,DWORD PTR [r15+0x38]
  42c7f2:	dec    rax
  42c7f5:	mov    DWORD PTR [r15+0x38],eax
  42c7f9:	movzx  r14d,BYTE PTR [r15+0x31]
  42c7fe:	imul   r14,rax
  42c802:	mov    rbx,QWORD PTR [r15+0x20]
  42c806:	mov    rdi,QWORD PTR [r15+0x28]
  42c80a:	lea    rax,[rdi+r14*1]
  42c80e:	cmp    rax,rbx
  42c811:	jbe    42c86d <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42c813:	cmp    rdi,rbx
  42c816:	jb     42c829 <flatcc_json_printer_bool_vector_field@@Base+0x309>
  42c818:	mov    rdi,r15
  42c81b:	xor    esi,esi
  42c81d:	call   QWORD PTR [r15+0x48]
  42c821:	mov    rbx,QWORD PTR [r15+0x20]
  42c825:	mov    rdi,QWORD PTR [r15+0x28]
  42c829:	sub    rbx,rdi
  42c82c:	cmp    rbx,r14
  42c82f:	jae    42c86d <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42c831:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c83b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c840:	mov    esi,0x20
  42c845:	mov    rdx,rbx
  42c848:	call   406080 <memset@plt>
  42c84d:	add    QWORD PTR [r15+0x28],rbx
  42c851:	sub    r14,rbx
  42c854:	mov    rdi,r15
  42c857:	xor    esi,esi
  42c859:	call   QWORD PTR [r15+0x48]
  42c85d:	mov    rbx,QWORD PTR [r15+0x20]
  42c861:	mov    rdi,QWORD PTR [r15+0x28]
  42c865:	sub    rbx,rdi
  42c868:	cmp    r14,rbx
  42c86b:	ja     42c840 <flatcc_json_printer_bool_vector_field@@Base+0x320>
  42c86d:	mov    esi,0x20
  42c872:	mov    rdx,r14
  42c875:	call   406080 <memset@plt>
  42c87a:	add    r14,QWORD PTR [r15+0x28]
  42c87e:	mov    QWORD PTR [r15+0x28],r14
  42c882:	lea    rax,[r14+0x1]
  42c886:	mov    QWORD PTR [r15+0x28],rax
  42c88a:	mov    BYTE PTR [r14],0x5d
  42c88e:	pop    rbx
  42c88f:	pop    r12
  42c891:	pop    r14
  42c893:	pop    r15
  42c895:	pop    rbp
  42c896:	ret    
  42c897:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c8a0 <flatcc_json_printer_float_vector_field@@Base>:
  42c8a0:	push   rbp
  42c8a1:	push   r15
  42c8a3:	push   r14
  42c8a5:	push   r12
  42c8a7:	push   rbx
  42c8a8:	lea    eax,[rdx+rdx*1]
  42c8ab:	add    eax,0x4
  42c8ae:	cmp    eax,DWORD PTR [rsi+0x10]
  42c8b1:	jge    42cbce <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42c8b7:	mov    rdx,QWORD PTR [rsi+0x8]
  42c8bb:	mov    eax,eax
  42c8bd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42c8c2:	test   r12,r12
  42c8c5:	je     42cbce <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42c8cb:	add    r12,QWORD PTR [rsi]
  42c8ce:	je     42cbce <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42c8d4:	mov    r15,rdi
  42c8d7:	mov    eax,DWORD PTR [rsi+0x18]
  42c8da:	lea    edx,[rax+0x1]
  42c8dd:	mov    DWORD PTR [rsi+0x18],edx
  42c8e0:	test   eax,eax
  42c8e2:	je     42c8f3 <flatcc_json_printer_float_vector_field@@Base+0x53>
  42c8e4:	mov    rax,QWORD PTR [r15+0x28]
  42c8e8:	lea    rdx,[rax+0x1]
  42c8ec:	mov    QWORD PTR [r15+0x28],rdx
  42c8f0:	mov    BYTE PTR [rax],0x2c
  42c8f3:	mov    ebx,DWORD PTR [r12]
  42c8f7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42c8fb:	movsxd rdx,r8d
  42c8fe:	mov    rdi,r15
  42c901:	mov    rsi,rcx
  42c904:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42c909:	inc    DWORD PTR [r15+0x38]
  42c90d:	mov    rax,QWORD PTR [r15+0x28]
  42c911:	lea    rcx,[rax+0x1]
  42c915:	mov    QWORD PTR [r15+0x28],rcx
  42c919:	mov    BYTE PTR [rax],0x5b
  42c91c:	test   ebp,ebp
  42c91e:	je     42cb1c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42c924:	add    r12,rbx
  42c927:	cmp    BYTE PTR [r15+0x31],0x0
  42c92c:	mov    r14,QWORD PTR [r15+0x28]
  42c930:	je     42c9c4 <flatcc_json_printer_float_vector_field@@Base+0x124>
  42c936:	lea    rax,[r14+0x1]
  42c93a:	mov    QWORD PTR [r15+0x28],rax
  42c93e:	mov    BYTE PTR [r14],0xa
  42c942:	movsxd rax,DWORD PTR [r15+0x38]
  42c946:	movzx  r14d,BYTE PTR [r15+0x31]
  42c94b:	imul   r14,rax
  42c94f:	mov    rbx,QWORD PTR [r15+0x20]
  42c953:	mov    rdi,QWORD PTR [r15+0x28]
  42c957:	lea    rax,[rdi+r14*1]
  42c95b:	cmp    rax,rbx
  42c95e:	jbe    42c9ad <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42c960:	cmp    rdi,rbx
  42c963:	jb     42c976 <flatcc_json_printer_float_vector_field@@Base+0xd6>
  42c965:	mov    rdi,r15
  42c968:	xor    esi,esi
  42c96a:	call   QWORD PTR [r15+0x48]
  42c96e:	mov    rbx,QWORD PTR [r15+0x20]
  42c972:	mov    rdi,QWORD PTR [r15+0x28]
  42c976:	sub    rbx,rdi
  42c979:	cmp    rbx,r14
  42c97c:	jae    42c9ad <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42c97e:	xchg   ax,ax
  42c980:	mov    esi,0x20
  42c985:	mov    rdx,rbx
  42c988:	call   406080 <memset@plt>
  42c98d:	add    QWORD PTR [r15+0x28],rbx
  42c991:	sub    r14,rbx
  42c994:	mov    rdi,r15
  42c997:	xor    esi,esi
  42c999:	call   QWORD PTR [r15+0x48]
  42c99d:	mov    rbx,QWORD PTR [r15+0x20]
  42c9a1:	mov    rdi,QWORD PTR [r15+0x28]
  42c9a5:	sub    rbx,rdi
  42c9a8:	cmp    r14,rbx
  42c9ab:	ja     42c980 <flatcc_json_printer_float_vector_field@@Base+0xe0>
  42c9ad:	mov    esi,0x20
  42c9b2:	mov    rdx,r14
  42c9b5:	call   406080 <memset@plt>
  42c9ba:	add    r14,QWORD PTR [r15+0x28]
  42c9be:	mov    QWORD PTR [r15+0x28],r14
  42c9c2:	jmp    42c9d7 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42c9c4:	cmp    r14,QWORD PTR [r15+0x20]
  42c9c8:	jb     42c9d7 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42c9ca:	mov    rdi,r15
  42c9cd:	xor    esi,esi
  42c9cf:	call   QWORD PTR [r15+0x48]
  42c9d3:	mov    r14,QWORD PTR [r15+0x28]
  42c9d7:	vmovss xmm0,DWORD PTR [r12+0x4]
  42c9de:	vcvtss2sd xmm0,xmm0,xmm0
  42c9e2:	mov    rdi,r14
  42c9e5:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  42c9ea:	cdqe   
  42c9ec:	add    QWORD PTR [r15+0x28],rax
  42c9f0:	dec    ebp
  42c9f2:	je     42cb1c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42c9f8:	add    r12,0x8
  42c9fc:	mov    rax,QWORD PTR [r15+0x28]
  42ca00:	jmp    42ca4d <flatcc_json_printer_float_vector_field@@Base+0x1ad>
  42ca02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ca0c:	nop    DWORD PTR [rax+0x0]
  42ca10:	mov    esi,0x20
  42ca15:	mov    rdx,r14
  42ca18:	call   406080 <memset@plt>
  42ca1d:	add    r14,QWORD PTR [r15+0x28]
  42ca21:	mov    QWORD PTR [r15+0x28],r14
  42ca25:	vmovss xmm0,DWORD PTR [r12]
  42ca2b:	vcvtss2sd xmm0,xmm0,xmm0
  42ca2f:	mov    rdi,r14
  42ca32:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  42ca37:	cdqe   
  42ca39:	add    rax,QWORD PTR [r15+0x28]
  42ca3d:	mov    QWORD PTR [r15+0x28],rax
  42ca41:	add    r12,0x4
  42ca45:	test   ebp,ebp
  42ca47:	je     42cb1c <flatcc_json_printer_float_vector_field@@Base+0x27c>
  42ca4d:	dec    ebp
  42ca4f:	lea    rcx,[rax+0x1]
  42ca53:	mov    QWORD PTR [r15+0x28],rcx
  42ca57:	mov    BYTE PTR [rax],0x2c
  42ca5a:	cmp    BYTE PTR [r15+0x31],0x0
  42ca5f:	mov    r14,QWORD PTR [r15+0x28]
  42ca63:	je     42cb00 <flatcc_json_printer_float_vector_field@@Base+0x260>
  42ca69:	lea    rax,[r14+0x1]
  42ca6d:	mov    QWORD PTR [r15+0x28],rax
  42ca71:	mov    BYTE PTR [r14],0xa
  42ca75:	movsxd rax,DWORD PTR [r15+0x38]
  42ca79:	movzx  r14d,BYTE PTR [r15+0x31]
  42ca7e:	imul   r14,rax
  42ca82:	mov    rbx,QWORD PTR [r15+0x20]
  42ca86:	mov    rdi,QWORD PTR [r15+0x28]
  42ca8a:	lea    rax,[rdi+r14*1]
  42ca8e:	cmp    rax,rbx
  42ca91:	jbe    42ca10 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42ca97:	cmp    rdi,rbx
  42ca9a:	jb     42caad <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42ca9c:	mov    rdi,r15
  42ca9f:	xor    esi,esi
  42caa1:	call   QWORD PTR [r15+0x48]
  42caa5:	mov    rbx,QWORD PTR [r15+0x20]
  42caa9:	mov    rdi,QWORD PTR [r15+0x28]
  42caad:	sub    rbx,rdi
  42cab0:	cmp    rbx,r14
  42cab3:	jae    42ca10 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42cab9:	nop    DWORD PTR [rax+0x0]
  42cac0:	mov    esi,0x20
  42cac5:	mov    rdx,rbx
  42cac8:	call   406080 <memset@plt>
  42cacd:	add    QWORD PTR [r15+0x28],rbx
  42cad1:	sub    r14,rbx
  42cad4:	mov    rdi,r15
  42cad7:	xor    esi,esi
  42cad9:	call   QWORD PTR [r15+0x48]
  42cadd:	mov    rbx,QWORD PTR [r15+0x20]
  42cae1:	mov    rdi,QWORD PTR [r15+0x28]
  42cae5:	sub    rbx,rdi
  42cae8:	cmp    r14,rbx
  42caeb:	ja     42cac0 <flatcc_json_printer_float_vector_field@@Base+0x220>
  42caed:	jmp    42ca10 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42caf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cafc:	nop    DWORD PTR [rax+0x0]
  42cb00:	cmp    r14,QWORD PTR [r15+0x20]
  42cb04:	jb     42ca25 <flatcc_json_printer_float_vector_field@@Base+0x185>
  42cb0a:	mov    rdi,r15
  42cb0d:	xor    esi,esi
  42cb0f:	call   QWORD PTR [r15+0x48]
  42cb13:	mov    r14,QWORD PTR [r15+0x28]
  42cb17:	jmp    42ca25 <flatcc_json_printer_float_vector_field@@Base+0x185>
  42cb1c:	cmp    BYTE PTR [r15+0x31],0x0
  42cb21:	mov    r14,QWORD PTR [r15+0x28]
  42cb25:	je     42cbc2 <flatcc_json_printer_float_vector_field@@Base+0x322>
  42cb2b:	lea    rax,[r14+0x1]
  42cb2f:	mov    QWORD PTR [r15+0x28],rax
  42cb33:	mov    BYTE PTR [r14],0xa
  42cb37:	movsxd rax,DWORD PTR [r15+0x38]
  42cb3b:	dec    rax
  42cb3e:	mov    DWORD PTR [r15+0x38],eax
  42cb42:	movzx  r14d,BYTE PTR [r15+0x31]
  42cb47:	imul   r14,rax
  42cb4b:	mov    rbx,QWORD PTR [r15+0x20]
  42cb4f:	mov    rdi,QWORD PTR [r15+0x28]
  42cb53:	lea    rax,[rdi+r14*1]
  42cb57:	cmp    rax,rbx
  42cb5a:	jbe    42cbad <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42cb5c:	cmp    rdi,rbx
  42cb5f:	jb     42cb72 <flatcc_json_printer_float_vector_field@@Base+0x2d2>
  42cb61:	mov    rdi,r15
  42cb64:	xor    esi,esi
  42cb66:	call   QWORD PTR [r15+0x48]
  42cb6a:	mov    rbx,QWORD PTR [r15+0x20]
  42cb6e:	mov    rdi,QWORD PTR [r15+0x28]
  42cb72:	sub    rbx,rdi
  42cb75:	cmp    rbx,r14
  42cb78:	jae    42cbad <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42cb7a:	nop    WORD PTR [rax+rax*1+0x0]
  42cb80:	mov    esi,0x20
  42cb85:	mov    rdx,rbx
  42cb88:	call   406080 <memset@plt>
  42cb8d:	add    QWORD PTR [r15+0x28],rbx
  42cb91:	sub    r14,rbx
  42cb94:	mov    rdi,r15
  42cb97:	xor    esi,esi
  42cb99:	call   QWORD PTR [r15+0x48]
  42cb9d:	mov    rbx,QWORD PTR [r15+0x20]
  42cba1:	mov    rdi,QWORD PTR [r15+0x28]
  42cba5:	sub    rbx,rdi
  42cba8:	cmp    r14,rbx
  42cbab:	ja     42cb80 <flatcc_json_printer_float_vector_field@@Base+0x2e0>
  42cbad:	mov    esi,0x20
  42cbb2:	mov    rdx,r14
  42cbb5:	call   406080 <memset@plt>
  42cbba:	add    r14,QWORD PTR [r15+0x28]
  42cbbe:	mov    QWORD PTR [r15+0x28],r14
  42cbc2:	lea    rax,[r14+0x1]
  42cbc6:	mov    QWORD PTR [r15+0x28],rax
  42cbca:	mov    BYTE PTR [r14],0x5d
  42cbce:	pop    rbx
  42cbcf:	pop    r12
  42cbd1:	pop    r14
  42cbd3:	pop    r15
  42cbd5:	pop    rbp
  42cbd6:	ret    
  42cbd7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cbe0 <flatcc_json_printer_double_vector_field@@Base>:
  42cbe0:	push   rbp
  42cbe1:	push   r15
  42cbe3:	push   r14
  42cbe5:	push   r12
  42cbe7:	push   rbx
  42cbe8:	lea    eax,[rdx+rdx*1]
  42cbeb:	add    eax,0x4
  42cbee:	cmp    eax,DWORD PTR [rsi+0x10]
  42cbf1:	jge    42cefe <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42cbf7:	mov    rdx,QWORD PTR [rsi+0x8]
  42cbfb:	mov    eax,eax
  42cbfd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42cc02:	test   r12,r12
  42cc05:	je     42cefe <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42cc0b:	add    r12,QWORD PTR [rsi]
  42cc0e:	je     42cefe <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42cc14:	mov    r15,rdi
  42cc17:	mov    eax,DWORD PTR [rsi+0x18]
  42cc1a:	lea    edx,[rax+0x1]
  42cc1d:	mov    DWORD PTR [rsi+0x18],edx
  42cc20:	test   eax,eax
  42cc22:	je     42cc33 <flatcc_json_printer_double_vector_field@@Base+0x53>
  42cc24:	mov    rax,QWORD PTR [r15+0x28]
  42cc28:	lea    rdx,[rax+0x1]
  42cc2c:	mov    QWORD PTR [r15+0x28],rdx
  42cc30:	mov    BYTE PTR [rax],0x2c
  42cc33:	mov    ebx,DWORD PTR [r12]
  42cc37:	mov    ebp,DWORD PTR [r12+rbx*1]
  42cc3b:	movsxd rdx,r8d
  42cc3e:	mov    rdi,r15
  42cc41:	mov    rsi,rcx
  42cc44:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42cc49:	inc    DWORD PTR [r15+0x38]
  42cc4d:	mov    rax,QWORD PTR [r15+0x28]
  42cc51:	lea    rcx,[rax+0x1]
  42cc55:	mov    QWORD PTR [r15+0x28],rcx
  42cc59:	mov    BYTE PTR [rax],0x5b
  42cc5c:	test   ebp,ebp
  42cc5e:	je     42ce4c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42cc64:	add    r12,rbx
  42cc67:	cmp    BYTE PTR [r15+0x31],0x0
  42cc6c:	mov    r14,QWORD PTR [r15+0x28]
  42cc70:	je     42cd04 <flatcc_json_printer_double_vector_field@@Base+0x124>
  42cc76:	lea    rax,[r14+0x1]
  42cc7a:	mov    QWORD PTR [r15+0x28],rax
  42cc7e:	mov    BYTE PTR [r14],0xa
  42cc82:	movsxd rax,DWORD PTR [r15+0x38]
  42cc86:	movzx  r14d,BYTE PTR [r15+0x31]
  42cc8b:	imul   r14,rax
  42cc8f:	mov    rbx,QWORD PTR [r15+0x20]
  42cc93:	mov    rdi,QWORD PTR [r15+0x28]
  42cc97:	lea    rax,[rdi+r14*1]
  42cc9b:	cmp    rax,rbx
  42cc9e:	jbe    42cced <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42cca0:	cmp    rdi,rbx
  42cca3:	jb     42ccb6 <flatcc_json_printer_double_vector_field@@Base+0xd6>
  42cca5:	mov    rdi,r15
  42cca8:	xor    esi,esi
  42ccaa:	call   QWORD PTR [r15+0x48]
  42ccae:	mov    rbx,QWORD PTR [r15+0x20]
  42ccb2:	mov    rdi,QWORD PTR [r15+0x28]
  42ccb6:	sub    rbx,rdi
  42ccb9:	cmp    rbx,r14
  42ccbc:	jae    42cced <flatcc_json_printer_double_vector_field@@Base+0x10d>
  42ccbe:	xchg   ax,ax
  42ccc0:	mov    esi,0x20
  42ccc5:	mov    rdx,rbx
  42ccc8:	call   406080 <memset@plt>
  42cccd:	add    QWORD PTR [r15+0x28],rbx
  42ccd1:	sub    r14,rbx
  42ccd4:	mov    rdi,r15
  42ccd7:	xor    esi,esi
  42ccd9:	call   QWORD PTR [r15+0x48]
  42ccdd:	mov    rbx,QWORD PTR [r15+0x20]
  42cce1:	mov    rdi,QWORD PTR [r15+0x28]
  42cce5:	sub    rbx,rdi
  42cce8:	cmp    r14,rbx
  42cceb:	ja     42ccc0 <flatcc_json_printer_double_vector_field@@Base+0xe0>
  42cced:	mov    esi,0x20
  42ccf2:	mov    rdx,r14
  42ccf5:	call   406080 <memset@plt>
  42ccfa:	add    r14,QWORD PTR [r15+0x28]
  42ccfe:	mov    QWORD PTR [r15+0x28],r14
  42cd02:	jmp    42cd17 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42cd04:	cmp    r14,QWORD PTR [r15+0x20]
  42cd08:	jb     42cd17 <flatcc_json_printer_double_vector_field@@Base+0x137>
  42cd0a:	mov    rdi,r15
  42cd0d:	xor    esi,esi
  42cd0f:	call   QWORD PTR [r15+0x48]
  42cd13:	mov    r14,QWORD PTR [r15+0x28]
  42cd17:	vmovsd xmm0,QWORD PTR [r12+0x4]
  42cd1e:	mov    rdi,r14
  42cd21:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  42cd26:	cdqe   
  42cd28:	add    QWORD PTR [r15+0x28],rax
  42cd2c:	dec    ebp
  42cd2e:	je     42ce4c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42cd34:	add    r12,0xc
  42cd38:	mov    rax,QWORD PTR [r15+0x28]
  42cd3c:	jmp    42cd79 <flatcc_json_printer_double_vector_field@@Base+0x199>
  42cd3e:	xchg   ax,ax
  42cd40:	mov    esi,0x20
  42cd45:	mov    rdx,r14
  42cd48:	call   406080 <memset@plt>
  42cd4d:	add    r14,QWORD PTR [r15+0x28]
  42cd51:	mov    QWORD PTR [r15+0x28],r14
  42cd55:	vmovsd xmm0,QWORD PTR [r12]
  42cd5b:	mov    rdi,r14
  42cd5e:	call   425c20 <flatcc_json_printer_fmt_float@@Base+0x10>
  42cd63:	cdqe   
  42cd65:	add    rax,QWORD PTR [r15+0x28]
  42cd69:	mov    QWORD PTR [r15+0x28],rax
  42cd6d:	add    r12,0x8
  42cd71:	test   ebp,ebp
  42cd73:	je     42ce4c <flatcc_json_printer_double_vector_field@@Base+0x26c>
  42cd79:	dec    ebp
  42cd7b:	lea    rcx,[rax+0x1]
  42cd7f:	mov    QWORD PTR [r15+0x28],rcx
  42cd83:	mov    BYTE PTR [rax],0x2c
  42cd86:	cmp    BYTE PTR [r15+0x31],0x0
  42cd8b:	mov    r14,QWORD PTR [r15+0x28]
  42cd8f:	je     42ce30 <flatcc_json_printer_double_vector_field@@Base+0x250>
  42cd95:	lea    rax,[r14+0x1]
  42cd99:	mov    QWORD PTR [r15+0x28],rax
  42cd9d:	mov    BYTE PTR [r14],0xa
  42cda1:	movsxd rax,DWORD PTR [r15+0x38]
  42cda5:	movzx  r14d,BYTE PTR [r15+0x31]
  42cdaa:	imul   r14,rax
  42cdae:	mov    rbx,QWORD PTR [r15+0x20]
  42cdb2:	mov    rdi,QWORD PTR [r15+0x28]
  42cdb6:	lea    rax,[rdi+r14*1]
  42cdba:	cmp    rax,rbx
  42cdbd:	jbe    42cd40 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42cdbf:	cmp    rdi,rbx
  42cdc2:	jb     42cdd5 <flatcc_json_printer_double_vector_field@@Base+0x1f5>
  42cdc4:	mov    rdi,r15
  42cdc7:	xor    esi,esi
  42cdc9:	call   QWORD PTR [r15+0x48]
  42cdcd:	mov    rbx,QWORD PTR [r15+0x20]
  42cdd1:	mov    rdi,QWORD PTR [r15+0x28]
  42cdd5:	sub    rbx,rdi
  42cdd8:	cmp    rbx,r14
  42cddb:	jae    42cd40 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42cde1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cdeb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cdf0:	mov    esi,0x20
  42cdf5:	mov    rdx,rbx
  42cdf8:	call   406080 <memset@plt>
  42cdfd:	add    QWORD PTR [r15+0x28],rbx
  42ce01:	sub    r14,rbx
  42ce04:	mov    rdi,r15
  42ce07:	xor    esi,esi
  42ce09:	call   QWORD PTR [r15+0x48]
  42ce0d:	mov    rbx,QWORD PTR [r15+0x20]
  42ce11:	mov    rdi,QWORD PTR [r15+0x28]
  42ce15:	sub    rbx,rdi
  42ce18:	cmp    r14,rbx
  42ce1b:	ja     42cdf0 <flatcc_json_printer_double_vector_field@@Base+0x210>
  42ce1d:	jmp    42cd40 <flatcc_json_printer_double_vector_field@@Base+0x160>
  42ce22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce2c:	nop    DWORD PTR [rax+0x0]
  42ce30:	cmp    r14,QWORD PTR [r15+0x20]
  42ce34:	jb     42cd55 <flatcc_json_printer_double_vector_field@@Base+0x175>
  42ce3a:	mov    rdi,r15
  42ce3d:	xor    esi,esi
  42ce3f:	call   QWORD PTR [r15+0x48]
  42ce43:	mov    r14,QWORD PTR [r15+0x28]
  42ce47:	jmp    42cd55 <flatcc_json_printer_double_vector_field@@Base+0x175>
  42ce4c:	cmp    BYTE PTR [r15+0x31],0x0
  42ce51:	mov    r14,QWORD PTR [r15+0x28]
  42ce55:	je     42cef2 <flatcc_json_printer_double_vector_field@@Base+0x312>
  42ce5b:	lea    rax,[r14+0x1]
  42ce5f:	mov    QWORD PTR [r15+0x28],rax
  42ce63:	mov    BYTE PTR [r14],0xa
  42ce67:	movsxd rax,DWORD PTR [r15+0x38]
  42ce6b:	dec    rax
  42ce6e:	mov    DWORD PTR [r15+0x38],eax
  42ce72:	movzx  r14d,BYTE PTR [r15+0x31]
  42ce77:	imul   r14,rax
  42ce7b:	mov    rbx,QWORD PTR [r15+0x20]
  42ce7f:	mov    rdi,QWORD PTR [r15+0x28]
  42ce83:	lea    rax,[rdi+r14*1]
  42ce87:	cmp    rax,rbx
  42ce8a:	jbe    42cedd <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42ce8c:	cmp    rdi,rbx
  42ce8f:	jb     42cea2 <flatcc_json_printer_double_vector_field@@Base+0x2c2>
  42ce91:	mov    rdi,r15
  42ce94:	xor    esi,esi
  42ce96:	call   QWORD PTR [r15+0x48]
  42ce9a:	mov    rbx,QWORD PTR [r15+0x20]
  42ce9e:	mov    rdi,QWORD PTR [r15+0x28]
  42cea2:	sub    rbx,rdi
  42cea5:	cmp    rbx,r14
  42cea8:	jae    42cedd <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  42ceaa:	nop    WORD PTR [rax+rax*1+0x0]
  42ceb0:	mov    esi,0x20
  42ceb5:	mov    rdx,rbx
  42ceb8:	call   406080 <memset@plt>
  42cebd:	add    QWORD PTR [r15+0x28],rbx
  42cec1:	sub    r14,rbx
  42cec4:	mov    rdi,r15
  42cec7:	xor    esi,esi
  42cec9:	call   QWORD PTR [r15+0x48]
  42cecd:	mov    rbx,QWORD PTR [r15+0x20]
  42ced1:	mov    rdi,QWORD PTR [r15+0x28]
  42ced5:	sub    rbx,rdi
  42ced8:	cmp    r14,rbx
  42cedb:	ja     42ceb0 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
  42cedd:	mov    esi,0x20
  42cee2:	mov    rdx,r14
  42cee5:	call   406080 <memset@plt>
  42ceea:	add    r14,QWORD PTR [r15+0x28]
  42ceee:	mov    QWORD PTR [r15+0x28],r14
  42cef2:	lea    rax,[r14+0x1]
  42cef6:	mov    QWORD PTR [r15+0x28],rax
  42cefa:	mov    BYTE PTR [r14],0x5d
  42cefe:	pop    rbx
  42ceff:	pop    r12
  42cf01:	pop    r14
  42cf03:	pop    r15
  42cf05:	pop    rbp
  42cf06:	ret    
  42cf07:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cf10 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  42cf10:	push   rbp
  42cf11:	push   r15
  42cf13:	push   r14
  42cf15:	push   r13
  42cf17:	push   r12
  42cf19:	push   rbx
  42cf1a:	push   rax
  42cf1b:	mov    r12,rdi
  42cf1e:	cmp    BYTE PTR [rdi+0x33],0x0
  42cf22:	je     42cf3a <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a>
  42cf24:	mov    rdi,r12
  42cf27:	add    rsp,0x8
  42cf2b:	pop    rbx
  42cf2c:	pop    r12
  42cf2e:	pop    r13
  42cf30:	pop    r14
  42cf32:	pop    r15
  42cf34:	pop    rbp
  42cf35:	jmp    42a010 <flatcc_json_printer_utype_vector_field@@Base>
  42cf3a:	lea    eax,[rdx+rdx*1]
  42cf3d:	add    eax,0x4
  42cf40:	cmp    eax,DWORD PTR [rsi+0x10]
  42cf43:	jge    42d255 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42cf49:	mov    rdx,QWORD PTR [rsi+0x8]
  42cf4d:	mov    eax,eax
  42cf4f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42cf54:	test   r13,r13
  42cf57:	je     42d255 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42cf5d:	add    r13,QWORD PTR [rsi]
  42cf60:	je     42d255 <flatcc_json_printer_utype_enum_vector_field@@Base+0x345>
  42cf66:	mov    r14,r9
  42cf69:	mov    eax,DWORD PTR [rsi+0x18]
  42cf6c:	lea    edx,[rax+0x1]
  42cf6f:	mov    DWORD PTR [rsi+0x18],edx
  42cf72:	test   eax,eax
  42cf74:	je     42cf87 <flatcc_json_printer_utype_enum_vector_field@@Base+0x77>
  42cf76:	mov    rax,QWORD PTR [r12+0x28]
  42cf7b:	lea    rdx,[rax+0x1]
  42cf7f:	mov    QWORD PTR [r12+0x28],rdx
  42cf84:	mov    BYTE PTR [rax],0x2c
  42cf87:	mov    ebx,DWORD PTR [r13+0x0]
  42cf8b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42cf90:	movsxd rdx,r8d
  42cf93:	mov    rdi,r12
  42cf96:	mov    rsi,rcx
  42cf99:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42cf9e:	inc    DWORD PTR [r12+0x38]
  42cfa3:	mov    rax,QWORD PTR [r12+0x28]
  42cfa8:	lea    rcx,[rax+0x1]
  42cfac:	mov    QWORD PTR [r12+0x28],rcx
  42cfb1:	mov    BYTE PTR [rax],0x5b
  42cfb4:	test   ebp,ebp
  42cfb6:	je     42d18a <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42cfbc:	add    r13,rbx
  42cfbf:	cmp    BYTE PTR [r12+0x31],0x0
  42cfc5:	mov    rax,QWORD PTR [r12+0x28]
  42cfca:	je     42d065 <flatcc_json_printer_utype_enum_vector_field@@Base+0x155>
  42cfd0:	lea    rcx,[rax+0x1]
  42cfd4:	mov    QWORD PTR [r12+0x28],rcx
  42cfd9:	mov    BYTE PTR [rax],0xa
  42cfdc:	movsxd rax,DWORD PTR [r12+0x38]
  42cfe1:	movzx  r15d,BYTE PTR [r12+0x31]
  42cfe7:	imul   r15,rax
  42cfeb:	mov    rbx,QWORD PTR [r12+0x20]
  42cff0:	mov    rdi,QWORD PTR [r12+0x28]
  42cff5:	lea    rax,[rdi+r15*1]
  42cff9:	cmp    rax,rbx
  42cffc:	jbe    42d051 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42cffe:	cmp    rdi,rbx
  42d001:	jb     42d017 <flatcc_json_printer_utype_enum_vector_field@@Base+0x107>
  42d003:	mov    rdi,r12
  42d006:	xor    esi,esi
  42d008:	call   QWORD PTR [r12+0x48]
  42d00d:	mov    rbx,QWORD PTR [r12+0x20]
  42d012:	mov    rdi,QWORD PTR [r12+0x28]
  42d017:	sub    rbx,rdi
  42d01a:	cmp    rbx,r15
  42d01d:	jae    42d051 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  42d01f:	nop
  42d020:	mov    esi,0x20
  42d025:	mov    rdx,rbx
  42d028:	call   406080 <memset@plt>
  42d02d:	add    QWORD PTR [r12+0x28],rbx
  42d032:	sub    r15,rbx
  42d035:	mov    rdi,r12
  42d038:	xor    esi,esi
  42d03a:	call   QWORD PTR [r12+0x48]
  42d03f:	mov    rbx,QWORD PTR [r12+0x20]
  42d044:	mov    rdi,QWORD PTR [r12+0x28]
  42d049:	sub    rbx,rdi
  42d04c:	cmp    r15,rbx
  42d04f:	ja     42d020 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
  42d051:	mov    esi,0x20
  42d056:	mov    rdx,r15
  42d059:	call   406080 <memset@plt>
  42d05e:	add    QWORD PTR [r12+0x28],r15
  42d063:	jmp    42d076 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42d065:	cmp    rax,QWORD PTR [r12+0x20]
  42d06a:	jb     42d076 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  42d06c:	mov    rdi,r12
  42d06f:	xor    esi,esi
  42d071:	call   QWORD PTR [r12+0x48]
  42d076:	movzx  esi,BYTE PTR [r13+0x4]
  42d07b:	mov    rdi,r12
  42d07e:	call   r14
  42d081:	dec    ebp
  42d083:	je     42d18a <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42d089:	add    r13,0x5
  42d08d:	jmp    42d0b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a8>
  42d08f:	nop
  42d090:	mov    esi,0x20
  42d095:	mov    rdx,r15
  42d098:	call   406080 <memset@plt>
  42d09d:	add    QWORD PTR [r12+0x28],r15
  42d0a2:	movzx  esi,BYTE PTR [r13+0x0]
  42d0a7:	mov    rdi,r12
  42d0aa:	call   r14
  42d0ad:	inc    r13
  42d0b0:	test   ebp,ebp
  42d0b2:	je     42d18a <flatcc_json_printer_utype_enum_vector_field@@Base+0x27a>
  42d0b8:	dec    ebp
  42d0ba:	mov    rax,QWORD PTR [r12+0x28]
  42d0bf:	lea    rcx,[rax+0x1]
  42d0c3:	mov    QWORD PTR [r12+0x28],rcx
  42d0c8:	mov    BYTE PTR [rax],0x2c
  42d0cb:	cmp    BYTE PTR [r12+0x31],0x0
  42d0d1:	mov    rax,QWORD PTR [r12+0x28]
  42d0d6:	je     42d170 <flatcc_json_printer_utype_enum_vector_field@@Base+0x260>
  42d0dc:	lea    rcx,[rax+0x1]
  42d0e0:	mov    QWORD PTR [r12+0x28],rcx
  42d0e5:	mov    BYTE PTR [rax],0xa
  42d0e8:	movsxd rax,DWORD PTR [r12+0x38]
  42d0ed:	movzx  r15d,BYTE PTR [r12+0x31]
  42d0f3:	imul   r15,rax
  42d0f7:	mov    rbx,QWORD PTR [r12+0x20]
  42d0fc:	mov    rdi,QWORD PTR [r12+0x28]
  42d101:	lea    rax,[rdi+r15*1]
  42d105:	cmp    rax,rbx
  42d108:	jbe    42d090 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42d10a:	cmp    rdi,rbx
  42d10d:	jb     42d123 <flatcc_json_printer_utype_enum_vector_field@@Base+0x213>
  42d10f:	mov    rdi,r12
  42d112:	xor    esi,esi
  42d114:	call   QWORD PTR [r12+0x48]
  42d119:	mov    rbx,QWORD PTR [r12+0x20]
  42d11e:	mov    rdi,QWORD PTR [r12+0x28]
  42d123:	sub    rbx,rdi
  42d126:	cmp    rbx,r15
  42d129:	jae    42d090 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42d12f:	nop
  42d130:	mov    esi,0x20
  42d135:	mov    rdx,rbx
  42d138:	call   406080 <memset@plt>
  42d13d:	add    QWORD PTR [r12+0x28],rbx
  42d142:	sub    r15,rbx
  42d145:	mov    rdi,r12
  42d148:	xor    esi,esi
  42d14a:	call   QWORD PTR [r12+0x48]
  42d14f:	mov    rbx,QWORD PTR [r12+0x20]
  42d154:	mov    rdi,QWORD PTR [r12+0x28]
  42d159:	sub    rbx,rdi
  42d15c:	cmp    r15,rbx
  42d15f:	ja     42d130 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
  42d161:	jmp    42d090 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  42d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d170:	cmp    rax,QWORD PTR [r12+0x20]
  42d175:	jb     42d0a2 <flatcc_json_printer_utype_enum_vector_field@@Base+0x192>
  42d17b:	mov    rdi,r12
  42d17e:	xor    esi,esi
  42d180:	call   QWORD PTR [r12+0x48]
  42d185:	jmp    42d0a2 <flatcc_json_printer_utype_enum_vector_field@@Base+0x192>
  42d18a:	cmp    BYTE PTR [r12+0x31],0x0
  42d190:	mov    r14,QWORD PTR [r12+0x28]
  42d195:	je     42d248 <flatcc_json_printer_utype_enum_vector_field@@Base+0x338>
  42d19b:	lea    rax,[r14+0x1]
  42d19f:	mov    QWORD PTR [r12+0x28],rax
  42d1a4:	mov    BYTE PTR [r14],0xa
  42d1a8:	movsxd rax,DWORD PTR [r12+0x38]
  42d1ad:	dec    rax
  42d1b0:	mov    DWORD PTR [r12+0x38],eax
  42d1b5:	movzx  r14d,BYTE PTR [r12+0x31]
  42d1bb:	imul   r14,rax
  42d1bf:	mov    rbx,QWORD PTR [r12+0x20]
  42d1c4:	mov    rdi,QWORD PTR [r12+0x28]
  42d1c9:	lea    rax,[rdi+r14*1]
  42d1cd:	cmp    rax,rbx
  42d1d0:	jbe    42d231 <flatcc_json_printer_utype_enum_vector_field@@Base+0x321>
  42d1d2:	cmp    rdi,rbx
  42d1d5:	jb     42d1eb <flatcc_json_printer_utype_enum_vector_field@@Base+0x2db>
  42d1d7:	mov    rdi,r12
  42d1da:	xor    esi,esi
  42d1dc:	call   QWORD PTR [r12+0x48]
  42d1e1:	mov    rbx,QWORD PTR [r12+0x20]
  42d1e6:	mov    rdi,QWORD PTR [r12+0x28]
  42d1eb:	sub    rbx,rdi
  42d1ee:	cmp    rbx,r14
  42d1f1:	jae    42d231 <flatcc_json_printer_utype_enum_vector_field@@Base+0x321>
  42d1f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1fd:	nop    DWORD PTR [rax]
  42d200:	mov    esi,0x20
  42d205:	mov    rdx,rbx
  42d208:	call   406080 <memset@plt>
  42d20d:	add    QWORD PTR [r12+0x28],rbx
  42d212:	sub    r14,rbx
  42d215:	mov    rdi,r12
  42d218:	xor    esi,esi
  42d21a:	call   QWORD PTR [r12+0x48]
  42d21f:	mov    rbx,QWORD PTR [r12+0x20]
  42d224:	mov    rdi,QWORD PTR [r12+0x28]
  42d229:	sub    rbx,rdi
  42d22c:	cmp    r14,rbx
  42d22f:	ja     42d200 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2f0>
  42d231:	mov    esi,0x20
  42d236:	mov    rdx,r14
  42d239:	call   406080 <memset@plt>
  42d23e:	add    r14,QWORD PTR [r12+0x28]
  42d243:	mov    QWORD PTR [r12+0x28],r14
  42d248:	lea    rax,[r14+0x1]
  42d24c:	mov    QWORD PTR [r12+0x28],rax
  42d251:	mov    BYTE PTR [r14],0x5d
  42d255:	add    rsp,0x8
  42d259:	pop    rbx
  42d25a:	pop    r12
  42d25c:	pop    r13
  42d25e:	pop    r14
  42d260:	pop    r15
  42d262:	pop    rbp
  42d263:	ret    
  42d264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d26e:	xchg   ax,ax

000000000042d270 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  42d270:	push   rbp
  42d271:	push   r15
  42d273:	push   r14
  42d275:	push   r13
  42d277:	push   r12
  42d279:	push   rbx
  42d27a:	push   rax
  42d27b:	mov    r12,rdi
  42d27e:	cmp    BYTE PTR [rdi+0x33],0x0
  42d282:	je     42d29a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a>
  42d284:	mov    rdi,r12
  42d287:	add    rsp,0x8
  42d28b:	pop    rbx
  42d28c:	pop    r12
  42d28e:	pop    r13
  42d290:	pop    r14
  42d292:	pop    r15
  42d294:	pop    rbp
  42d295:	jmp    42a440 <flatcc_json_printer_uint8_vector_field@@Base>
  42d29a:	lea    eax,[rdx+rdx*1]
  42d29d:	add    eax,0x4
  42d2a0:	cmp    eax,DWORD PTR [rsi+0x10]
  42d2a3:	jge    42d5b5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42d2a9:	mov    rdx,QWORD PTR [rsi+0x8]
  42d2ad:	mov    eax,eax
  42d2af:	movzx  r13d,WORD PTR [rdx+rax*1]
  42d2b4:	test   r13,r13
  42d2b7:	je     42d5b5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42d2bd:	add    r13,QWORD PTR [rsi]
  42d2c0:	je     42d5b5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x345>
  42d2c6:	mov    r14,r9
  42d2c9:	mov    eax,DWORD PTR [rsi+0x18]
  42d2cc:	lea    edx,[rax+0x1]
  42d2cf:	mov    DWORD PTR [rsi+0x18],edx
  42d2d2:	test   eax,eax
  42d2d4:	je     42d2e7 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x77>
  42d2d6:	mov    rax,QWORD PTR [r12+0x28]
  42d2db:	lea    rdx,[rax+0x1]
  42d2df:	mov    QWORD PTR [r12+0x28],rdx
  42d2e4:	mov    BYTE PTR [rax],0x2c
  42d2e7:	mov    ebx,DWORD PTR [r13+0x0]
  42d2eb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42d2f0:	movsxd rdx,r8d
  42d2f3:	mov    rdi,r12
  42d2f6:	mov    rsi,rcx
  42d2f9:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42d2fe:	inc    DWORD PTR [r12+0x38]
  42d303:	mov    rax,QWORD PTR [r12+0x28]
  42d308:	lea    rcx,[rax+0x1]
  42d30c:	mov    QWORD PTR [r12+0x28],rcx
  42d311:	mov    BYTE PTR [rax],0x5b
  42d314:	test   ebp,ebp
  42d316:	je     42d4ea <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42d31c:	add    r13,rbx
  42d31f:	cmp    BYTE PTR [r12+0x31],0x0
  42d325:	mov    rax,QWORD PTR [r12+0x28]
  42d32a:	je     42d3c5 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x155>
  42d330:	lea    rcx,[rax+0x1]
  42d334:	mov    QWORD PTR [r12+0x28],rcx
  42d339:	mov    BYTE PTR [rax],0xa
  42d33c:	movsxd rax,DWORD PTR [r12+0x38]
  42d341:	movzx  r15d,BYTE PTR [r12+0x31]
  42d347:	imul   r15,rax
  42d34b:	mov    rbx,QWORD PTR [r12+0x20]
  42d350:	mov    rdi,QWORD PTR [r12+0x28]
  42d355:	lea    rax,[rdi+r15*1]
  42d359:	cmp    rax,rbx
  42d35c:	jbe    42d3b1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42d35e:	cmp    rdi,rbx
  42d361:	jb     42d377 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x107>
  42d363:	mov    rdi,r12
  42d366:	xor    esi,esi
  42d368:	call   QWORD PTR [r12+0x48]
  42d36d:	mov    rbx,QWORD PTR [r12+0x20]
  42d372:	mov    rdi,QWORD PTR [r12+0x28]
  42d377:	sub    rbx,rdi
  42d37a:	cmp    rbx,r15
  42d37d:	jae    42d3b1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  42d37f:	nop
  42d380:	mov    esi,0x20
  42d385:	mov    rdx,rbx
  42d388:	call   406080 <memset@plt>
  42d38d:	add    QWORD PTR [r12+0x28],rbx
  42d392:	sub    r15,rbx
  42d395:	mov    rdi,r12
  42d398:	xor    esi,esi
  42d39a:	call   QWORD PTR [r12+0x48]
  42d39f:	mov    rbx,QWORD PTR [r12+0x20]
  42d3a4:	mov    rdi,QWORD PTR [r12+0x28]
  42d3a9:	sub    rbx,rdi
  42d3ac:	cmp    r15,rbx
  42d3af:	ja     42d380 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
  42d3b1:	mov    esi,0x20
  42d3b6:	mov    rdx,r15
  42d3b9:	call   406080 <memset@plt>
  42d3be:	add    QWORD PTR [r12+0x28],r15
  42d3c3:	jmp    42d3d6 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42d3c5:	cmp    rax,QWORD PTR [r12+0x20]
  42d3ca:	jb     42d3d6 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  42d3cc:	mov    rdi,r12
  42d3cf:	xor    esi,esi
  42d3d1:	call   QWORD PTR [r12+0x48]
  42d3d6:	movzx  esi,BYTE PTR [r13+0x4]
  42d3db:	mov    rdi,r12
  42d3de:	call   r14
  42d3e1:	dec    ebp
  42d3e3:	je     42d4ea <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42d3e9:	add    r13,0x5
  42d3ed:	jmp    42d418 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a8>
  42d3ef:	nop
  42d3f0:	mov    esi,0x20
  42d3f5:	mov    rdx,r15
  42d3f8:	call   406080 <memset@plt>
  42d3fd:	add    QWORD PTR [r12+0x28],r15
  42d402:	movzx  esi,BYTE PTR [r13+0x0]
  42d407:	mov    rdi,r12
  42d40a:	call   r14
  42d40d:	inc    r13
  42d410:	test   ebp,ebp
  42d412:	je     42d4ea <flatcc_json_printer_uint8_enum_vector_field@@Base+0x27a>
  42d418:	dec    ebp
  42d41a:	mov    rax,QWORD PTR [r12+0x28]
  42d41f:	lea    rcx,[rax+0x1]
  42d423:	mov    QWORD PTR [r12+0x28],rcx
  42d428:	mov    BYTE PTR [rax],0x2c
  42d42b:	cmp    BYTE PTR [r12+0x31],0x0
  42d431:	mov    rax,QWORD PTR [r12+0x28]
  42d436:	je     42d4d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x260>
  42d43c:	lea    rcx,[rax+0x1]
  42d440:	mov    QWORD PTR [r12+0x28],rcx
  42d445:	mov    BYTE PTR [rax],0xa
  42d448:	movsxd rax,DWORD PTR [r12+0x38]
  42d44d:	movzx  r15d,BYTE PTR [r12+0x31]
  42d453:	imul   r15,rax
  42d457:	mov    rbx,QWORD PTR [r12+0x20]
  42d45c:	mov    rdi,QWORD PTR [r12+0x28]
  42d461:	lea    rax,[rdi+r15*1]
  42d465:	cmp    rax,rbx
  42d468:	jbe    42d3f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42d46a:	cmp    rdi,rbx
  42d46d:	jb     42d483 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x213>
  42d46f:	mov    rdi,r12
  42d472:	xor    esi,esi
  42d474:	call   QWORD PTR [r12+0x48]
  42d479:	mov    rbx,QWORD PTR [r12+0x20]
  42d47e:	mov    rdi,QWORD PTR [r12+0x28]
  42d483:	sub    rbx,rdi
  42d486:	cmp    rbx,r15
  42d489:	jae    42d3f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42d48f:	nop
  42d490:	mov    esi,0x20
  42d495:	mov    rdx,rbx
  42d498:	call   406080 <memset@plt>
  42d49d:	add    QWORD PTR [r12+0x28],rbx
  42d4a2:	sub    r15,rbx
  42d4a5:	mov    rdi,r12
  42d4a8:	xor    esi,esi
  42d4aa:	call   QWORD PTR [r12+0x48]
  42d4af:	mov    rbx,QWORD PTR [r12+0x20]
  42d4b4:	mov    rdi,QWORD PTR [r12+0x28]
  42d4b9:	sub    rbx,rdi
  42d4bc:	cmp    r15,rbx
  42d4bf:	ja     42d490 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
  42d4c1:	jmp    42d3f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  42d4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4d0:	cmp    rax,QWORD PTR [r12+0x20]
  42d4d5:	jb     42d402 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x192>
  42d4db:	mov    rdi,r12
  42d4de:	xor    esi,esi
  42d4e0:	call   QWORD PTR [r12+0x48]
  42d4e5:	jmp    42d402 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x192>
  42d4ea:	cmp    BYTE PTR [r12+0x31],0x0
  42d4f0:	mov    r14,QWORD PTR [r12+0x28]
  42d4f5:	je     42d5a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x338>
  42d4fb:	lea    rax,[r14+0x1]
  42d4ff:	mov    QWORD PTR [r12+0x28],rax
  42d504:	mov    BYTE PTR [r14],0xa
  42d508:	movsxd rax,DWORD PTR [r12+0x38]
  42d50d:	dec    rax
  42d510:	mov    DWORD PTR [r12+0x38],eax
  42d515:	movzx  r14d,BYTE PTR [r12+0x31]
  42d51b:	imul   r14,rax
  42d51f:	mov    rbx,QWORD PTR [r12+0x20]
  42d524:	mov    rdi,QWORD PTR [r12+0x28]
  42d529:	lea    rax,[rdi+r14*1]
  42d52d:	cmp    rax,rbx
  42d530:	jbe    42d591 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x321>
  42d532:	cmp    rdi,rbx
  42d535:	jb     42d54b <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2db>
  42d537:	mov    rdi,r12
  42d53a:	xor    esi,esi
  42d53c:	call   QWORD PTR [r12+0x48]
  42d541:	mov    rbx,QWORD PTR [r12+0x20]
  42d546:	mov    rdi,QWORD PTR [r12+0x28]
  42d54b:	sub    rbx,rdi
  42d54e:	cmp    rbx,r14
  42d551:	jae    42d591 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x321>
  42d553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d55d:	nop    DWORD PTR [rax]
  42d560:	mov    esi,0x20
  42d565:	mov    rdx,rbx
  42d568:	call   406080 <memset@plt>
  42d56d:	add    QWORD PTR [r12+0x28],rbx
  42d572:	sub    r14,rbx
  42d575:	mov    rdi,r12
  42d578:	xor    esi,esi
  42d57a:	call   QWORD PTR [r12+0x48]
  42d57f:	mov    rbx,QWORD PTR [r12+0x20]
  42d584:	mov    rdi,QWORD PTR [r12+0x28]
  42d589:	sub    rbx,rdi
  42d58c:	cmp    r14,rbx
  42d58f:	ja     42d560 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2f0>
  42d591:	mov    esi,0x20
  42d596:	mov    rdx,r14
  42d599:	call   406080 <memset@plt>
  42d59e:	add    r14,QWORD PTR [r12+0x28]
  42d5a3:	mov    QWORD PTR [r12+0x28],r14
  42d5a8:	lea    rax,[r14+0x1]
  42d5ac:	mov    QWORD PTR [r12+0x28],rax
  42d5b1:	mov    BYTE PTR [r14],0x5d
  42d5b5:	add    rsp,0x8
  42d5b9:	pop    rbx
  42d5ba:	pop    r12
  42d5bc:	pop    r13
  42d5be:	pop    r14
  42d5c0:	pop    r15
  42d5c2:	pop    rbp
  42d5c3:	ret    
  42d5c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d5ce:	xchg   ax,ax

000000000042d5d0 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  42d5d0:	push   rbp
  42d5d1:	push   r15
  42d5d3:	push   r14
  42d5d5:	push   r13
  42d5d7:	push   r12
  42d5d9:	push   rbx
  42d5da:	push   rax
  42d5db:	mov    r12,rdi
  42d5de:	cmp    BYTE PTR [rdi+0x33],0x0
  42d5e2:	je     42d5fa <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a>
  42d5e4:	mov    rdi,r12
  42d5e7:	add    rsp,0x8
  42d5eb:	pop    rbx
  42d5ec:	pop    r12
  42d5ee:	pop    r13
  42d5f0:	pop    r14
  42d5f2:	pop    r15
  42d5f4:	pop    rbp
  42d5f5:	jmp    42a870 <flatcc_json_printer_uint16_vector_field@@Base>
  42d5fa:	lea    eax,[rdx+rdx*1]
  42d5fd:	add    eax,0x4
  42d600:	cmp    eax,DWORD PTR [rsi+0x10]
  42d603:	jge    42d915 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42d609:	mov    rdx,QWORD PTR [rsi+0x8]
  42d60d:	mov    eax,eax
  42d60f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42d614:	test   r13,r13
  42d617:	je     42d915 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42d61d:	add    r13,QWORD PTR [rsi]
  42d620:	je     42d915 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x345>
  42d626:	mov    r14,r9
  42d629:	mov    eax,DWORD PTR [rsi+0x18]
  42d62c:	lea    edx,[rax+0x1]
  42d62f:	mov    DWORD PTR [rsi+0x18],edx
  42d632:	test   eax,eax
  42d634:	je     42d647 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x77>
  42d636:	mov    rax,QWORD PTR [r12+0x28]
  42d63b:	lea    rdx,[rax+0x1]
  42d63f:	mov    QWORD PTR [r12+0x28],rdx
  42d644:	mov    BYTE PTR [rax],0x2c
  42d647:	mov    ebx,DWORD PTR [r13+0x0]
  42d64b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42d650:	movsxd rdx,r8d
  42d653:	mov    rdi,r12
  42d656:	mov    rsi,rcx
  42d659:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42d65e:	inc    DWORD PTR [r12+0x38]
  42d663:	mov    rax,QWORD PTR [r12+0x28]
  42d668:	lea    rcx,[rax+0x1]
  42d66c:	mov    QWORD PTR [r12+0x28],rcx
  42d671:	mov    BYTE PTR [rax],0x5b
  42d674:	test   ebp,ebp
  42d676:	je     42d84a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42d67c:	add    r13,rbx
  42d67f:	cmp    BYTE PTR [r12+0x31],0x0
  42d685:	mov    rax,QWORD PTR [r12+0x28]
  42d68a:	je     42d725 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x155>
  42d690:	lea    rcx,[rax+0x1]
  42d694:	mov    QWORD PTR [r12+0x28],rcx
  42d699:	mov    BYTE PTR [rax],0xa
  42d69c:	movsxd rax,DWORD PTR [r12+0x38]
  42d6a1:	movzx  r15d,BYTE PTR [r12+0x31]
  42d6a7:	imul   r15,rax
  42d6ab:	mov    rbx,QWORD PTR [r12+0x20]
  42d6b0:	mov    rdi,QWORD PTR [r12+0x28]
  42d6b5:	lea    rax,[rdi+r15*1]
  42d6b9:	cmp    rax,rbx
  42d6bc:	jbe    42d711 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42d6be:	cmp    rdi,rbx
  42d6c1:	jb     42d6d7 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x107>
  42d6c3:	mov    rdi,r12
  42d6c6:	xor    esi,esi
  42d6c8:	call   QWORD PTR [r12+0x48]
  42d6cd:	mov    rbx,QWORD PTR [r12+0x20]
  42d6d2:	mov    rdi,QWORD PTR [r12+0x28]
  42d6d7:	sub    rbx,rdi
  42d6da:	cmp    rbx,r15
  42d6dd:	jae    42d711 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  42d6df:	nop
  42d6e0:	mov    esi,0x20
  42d6e5:	mov    rdx,rbx
  42d6e8:	call   406080 <memset@plt>
  42d6ed:	add    QWORD PTR [r12+0x28],rbx
  42d6f2:	sub    r15,rbx
  42d6f5:	mov    rdi,r12
  42d6f8:	xor    esi,esi
  42d6fa:	call   QWORD PTR [r12+0x48]
  42d6ff:	mov    rbx,QWORD PTR [r12+0x20]
  42d704:	mov    rdi,QWORD PTR [r12+0x28]
  42d709:	sub    rbx,rdi
  42d70c:	cmp    r15,rbx
  42d70f:	ja     42d6e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
  42d711:	mov    esi,0x20
  42d716:	mov    rdx,r15
  42d719:	call   406080 <memset@plt>
  42d71e:	add    QWORD PTR [r12+0x28],r15
  42d723:	jmp    42d736 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42d725:	cmp    rax,QWORD PTR [r12+0x20]
  42d72a:	jb     42d736 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  42d72c:	mov    rdi,r12
  42d72f:	xor    esi,esi
  42d731:	call   QWORD PTR [r12+0x48]
  42d736:	movzx  esi,WORD PTR [r13+0x4]
  42d73b:	mov    rdi,r12
  42d73e:	call   r14
  42d741:	dec    ebp
  42d743:	je     42d84a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42d749:	add    r13,0x6
  42d74d:	jmp    42d779 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a9>
  42d74f:	nop
  42d750:	mov    esi,0x20
  42d755:	mov    rdx,r15
  42d758:	call   406080 <memset@plt>
  42d75d:	add    QWORD PTR [r12+0x28],r15
  42d762:	movzx  esi,WORD PTR [r13+0x0]
  42d767:	mov    rdi,r12
  42d76a:	call   r14
  42d76d:	add    r13,0x2
  42d771:	test   ebp,ebp
  42d773:	je     42d84a <flatcc_json_printer_uint16_enum_vector_field@@Base+0x27a>
  42d779:	dec    ebp
  42d77b:	mov    rax,QWORD PTR [r12+0x28]
  42d780:	lea    rcx,[rax+0x1]
  42d784:	mov    QWORD PTR [r12+0x28],rcx
  42d789:	mov    BYTE PTR [rax],0x2c
  42d78c:	cmp    BYTE PTR [r12+0x31],0x0
  42d792:	mov    rax,QWORD PTR [r12+0x28]
  42d797:	je     42d830 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x260>
  42d79d:	lea    rcx,[rax+0x1]
  42d7a1:	mov    QWORD PTR [r12+0x28],rcx
  42d7a6:	mov    BYTE PTR [rax],0xa
  42d7a9:	movsxd rax,DWORD PTR [r12+0x38]
  42d7ae:	movzx  r15d,BYTE PTR [r12+0x31]
  42d7b4:	imul   r15,rax
  42d7b8:	mov    rbx,QWORD PTR [r12+0x20]
  42d7bd:	mov    rdi,QWORD PTR [r12+0x28]
  42d7c2:	lea    rax,[rdi+r15*1]
  42d7c6:	cmp    rax,rbx
  42d7c9:	jbe    42d750 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42d7cb:	cmp    rdi,rbx
  42d7ce:	jb     42d7e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
  42d7d0:	mov    rdi,r12
  42d7d3:	xor    esi,esi
  42d7d5:	call   QWORD PTR [r12+0x48]
  42d7da:	mov    rbx,QWORD PTR [r12+0x20]
  42d7df:	mov    rdi,QWORD PTR [r12+0x28]
  42d7e4:	sub    rbx,rdi
  42d7e7:	cmp    rbx,r15
  42d7ea:	jae    42d750 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42d7f0:	mov    esi,0x20
  42d7f5:	mov    rdx,rbx
  42d7f8:	call   406080 <memset@plt>
  42d7fd:	add    QWORD PTR [r12+0x28],rbx
  42d802:	sub    r15,rbx
  42d805:	mov    rdi,r12
  42d808:	xor    esi,esi
  42d80a:	call   QWORD PTR [r12+0x48]
  42d80f:	mov    rbx,QWORD PTR [r12+0x20]
  42d814:	mov    rdi,QWORD PTR [r12+0x28]
  42d819:	sub    rbx,rdi
  42d81c:	cmp    r15,rbx
  42d81f:	ja     42d7f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
  42d821:	jmp    42d750 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  42d826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d830:	cmp    rax,QWORD PTR [r12+0x20]
  42d835:	jb     42d762 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x192>
  42d83b:	mov    rdi,r12
  42d83e:	xor    esi,esi
  42d840:	call   QWORD PTR [r12+0x48]
  42d845:	jmp    42d762 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x192>
  42d84a:	cmp    BYTE PTR [r12+0x31],0x0
  42d850:	mov    r14,QWORD PTR [r12+0x28]
  42d855:	je     42d908 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x338>
  42d85b:	lea    rax,[r14+0x1]
  42d85f:	mov    QWORD PTR [r12+0x28],rax
  42d864:	mov    BYTE PTR [r14],0xa
  42d868:	movsxd rax,DWORD PTR [r12+0x38]
  42d86d:	dec    rax
  42d870:	mov    DWORD PTR [r12+0x38],eax
  42d875:	movzx  r14d,BYTE PTR [r12+0x31]
  42d87b:	imul   r14,rax
  42d87f:	mov    rbx,QWORD PTR [r12+0x20]
  42d884:	mov    rdi,QWORD PTR [r12+0x28]
  42d889:	lea    rax,[rdi+r14*1]
  42d88d:	cmp    rax,rbx
  42d890:	jbe    42d8f1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x321>
  42d892:	cmp    rdi,rbx
  42d895:	jb     42d8ab <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2db>
  42d897:	mov    rdi,r12
  42d89a:	xor    esi,esi
  42d89c:	call   QWORD PTR [r12+0x48]
  42d8a1:	mov    rbx,QWORD PTR [r12+0x20]
  42d8a6:	mov    rdi,QWORD PTR [r12+0x28]
  42d8ab:	sub    rbx,rdi
  42d8ae:	cmp    rbx,r14
  42d8b1:	jae    42d8f1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x321>
  42d8b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d8bd:	nop    DWORD PTR [rax]
  42d8c0:	mov    esi,0x20
  42d8c5:	mov    rdx,rbx
  42d8c8:	call   406080 <memset@plt>
  42d8cd:	add    QWORD PTR [r12+0x28],rbx
  42d8d2:	sub    r14,rbx
  42d8d5:	mov    rdi,r12
  42d8d8:	xor    esi,esi
  42d8da:	call   QWORD PTR [r12+0x48]
  42d8df:	mov    rbx,QWORD PTR [r12+0x20]
  42d8e4:	mov    rdi,QWORD PTR [r12+0x28]
  42d8e9:	sub    rbx,rdi
  42d8ec:	cmp    r14,rbx
  42d8ef:	ja     42d8c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2f0>
  42d8f1:	mov    esi,0x20
  42d8f6:	mov    rdx,r14
  42d8f9:	call   406080 <memset@plt>
  42d8fe:	add    r14,QWORD PTR [r12+0x28]
  42d903:	mov    QWORD PTR [r12+0x28],r14
  42d908:	lea    rax,[r14+0x1]
  42d90c:	mov    QWORD PTR [r12+0x28],rax
  42d911:	mov    BYTE PTR [r14],0x5d
  42d915:	add    rsp,0x8
  42d919:	pop    rbx
  42d91a:	pop    r12
  42d91c:	pop    r13
  42d91e:	pop    r14
  42d920:	pop    r15
  42d922:	pop    rbp
  42d923:	ret    
  42d924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d92e:	xchg   ax,ax

000000000042d930 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  42d930:	push   rbp
  42d931:	push   r15
  42d933:	push   r14
  42d935:	push   r13
  42d937:	push   r12
  42d939:	push   rbx
  42d93a:	push   rax
  42d93b:	mov    r12,rdi
  42d93e:	cmp    BYTE PTR [rdi+0x33],0x0
  42d942:	je     42d95a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a>
  42d944:	mov    rdi,r12
  42d947:	add    rsp,0x8
  42d94b:	pop    rbx
  42d94c:	pop    r12
  42d94e:	pop    r13
  42d950:	pop    r14
  42d952:	pop    r15
  42d954:	pop    rbp
  42d955:	jmp    42ae00 <flatcc_json_printer_uint32_vector_field@@Base>
  42d95a:	lea    eax,[rdx+rdx*1]
  42d95d:	add    eax,0x4
  42d960:	cmp    eax,DWORD PTR [rsi+0x10]
  42d963:	jge    42dc75 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42d969:	mov    rdx,QWORD PTR [rsi+0x8]
  42d96d:	mov    eax,eax
  42d96f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42d974:	test   r13,r13
  42d977:	je     42dc75 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42d97d:	add    r13,QWORD PTR [rsi]
  42d980:	je     42dc75 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  42d986:	mov    r14,r9
  42d989:	mov    eax,DWORD PTR [rsi+0x18]
  42d98c:	lea    edx,[rax+0x1]
  42d98f:	mov    DWORD PTR [rsi+0x18],edx
  42d992:	test   eax,eax
  42d994:	je     42d9a7 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x77>
  42d996:	mov    rax,QWORD PTR [r12+0x28]
  42d99b:	lea    rdx,[rax+0x1]
  42d99f:	mov    QWORD PTR [r12+0x28],rdx
  42d9a4:	mov    BYTE PTR [rax],0x2c
  42d9a7:	mov    ebx,DWORD PTR [r13+0x0]
  42d9ab:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42d9b0:	movsxd rdx,r8d
  42d9b3:	mov    rdi,r12
  42d9b6:	mov    rsi,rcx
  42d9b9:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42d9be:	inc    DWORD PTR [r12+0x38]
  42d9c3:	mov    rax,QWORD PTR [r12+0x28]
  42d9c8:	lea    rcx,[rax+0x1]
  42d9cc:	mov    QWORD PTR [r12+0x28],rcx
  42d9d1:	mov    BYTE PTR [rax],0x5b
  42d9d4:	test   ebp,ebp
  42d9d6:	je     42dbaa <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42d9dc:	add    r13,rbx
  42d9df:	cmp    BYTE PTR [r12+0x31],0x0
  42d9e5:	mov    rax,QWORD PTR [r12+0x28]
  42d9ea:	je     42da85 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x155>
  42d9f0:	lea    rcx,[rax+0x1]
  42d9f4:	mov    QWORD PTR [r12+0x28],rcx
  42d9f9:	mov    BYTE PTR [rax],0xa
  42d9fc:	movsxd rax,DWORD PTR [r12+0x38]
  42da01:	movzx  r15d,BYTE PTR [r12+0x31]
  42da07:	imul   r15,rax
  42da0b:	mov    rbx,QWORD PTR [r12+0x20]
  42da10:	mov    rdi,QWORD PTR [r12+0x28]
  42da15:	lea    rax,[rdi+r15*1]
  42da19:	cmp    rax,rbx
  42da1c:	jbe    42da71 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42da1e:	cmp    rdi,rbx
  42da21:	jb     42da37 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x107>
  42da23:	mov    rdi,r12
  42da26:	xor    esi,esi
  42da28:	call   QWORD PTR [r12+0x48]
  42da2d:	mov    rbx,QWORD PTR [r12+0x20]
  42da32:	mov    rdi,QWORD PTR [r12+0x28]
  42da37:	sub    rbx,rdi
  42da3a:	cmp    rbx,r15
  42da3d:	jae    42da71 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  42da3f:	nop
  42da40:	mov    esi,0x20
  42da45:	mov    rdx,rbx
  42da48:	call   406080 <memset@plt>
  42da4d:	add    QWORD PTR [r12+0x28],rbx
  42da52:	sub    r15,rbx
  42da55:	mov    rdi,r12
  42da58:	xor    esi,esi
  42da5a:	call   QWORD PTR [r12+0x48]
  42da5f:	mov    rbx,QWORD PTR [r12+0x20]
  42da64:	mov    rdi,QWORD PTR [r12+0x28]
  42da69:	sub    rbx,rdi
  42da6c:	cmp    r15,rbx
  42da6f:	ja     42da40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
  42da71:	mov    esi,0x20
  42da76:	mov    rdx,r15
  42da79:	call   406080 <memset@plt>
  42da7e:	add    QWORD PTR [r12+0x28],r15
  42da83:	jmp    42da96 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42da85:	cmp    rax,QWORD PTR [r12+0x20]
  42da8a:	jb     42da96 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  42da8c:	mov    rdi,r12
  42da8f:	xor    esi,esi
  42da91:	call   QWORD PTR [r12+0x48]
  42da96:	mov    esi,DWORD PTR [r13+0x4]
  42da9a:	mov    rdi,r12
  42da9d:	call   r14
  42daa0:	dec    ebp
  42daa2:	je     42dbaa <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42daa8:	add    r13,0x8
  42daac:	jmp    42dad8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
  42daae:	xchg   ax,ax
  42dab0:	mov    esi,0x20
  42dab5:	mov    rdx,r15
  42dab8:	call   406080 <memset@plt>
  42dabd:	add    QWORD PTR [r12+0x28],r15
  42dac2:	mov    esi,DWORD PTR [r13+0x0]
  42dac6:	mov    rdi,r12
  42dac9:	call   r14
  42dacc:	add    r13,0x4
  42dad0:	test   ebp,ebp
  42dad2:	je     42dbaa <flatcc_json_printer_uint32_enum_vector_field@@Base+0x27a>
  42dad8:	dec    ebp
  42dada:	mov    rax,QWORD PTR [r12+0x28]
  42dadf:	lea    rcx,[rax+0x1]
  42dae3:	mov    QWORD PTR [r12+0x28],rcx
  42dae8:	mov    BYTE PTR [rax],0x2c
  42daeb:	cmp    BYTE PTR [r12+0x31],0x0
  42daf1:	mov    rax,QWORD PTR [r12+0x28]
  42daf6:	je     42db90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
  42dafc:	lea    rcx,[rax+0x1]
  42db00:	mov    QWORD PTR [r12+0x28],rcx
  42db05:	mov    BYTE PTR [rax],0xa
  42db08:	movsxd rax,DWORD PTR [r12+0x38]
  42db0d:	movzx  r15d,BYTE PTR [r12+0x31]
  42db13:	imul   r15,rax
  42db17:	mov    rbx,QWORD PTR [r12+0x20]
  42db1c:	mov    rdi,QWORD PTR [r12+0x28]
  42db21:	lea    rax,[rdi+r15*1]
  42db25:	cmp    rax,rbx
  42db28:	jbe    42dab0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42db2a:	cmp    rdi,rbx
  42db2d:	jb     42db43 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x213>
  42db2f:	mov    rdi,r12
  42db32:	xor    esi,esi
  42db34:	call   QWORD PTR [r12+0x48]
  42db39:	mov    rbx,QWORD PTR [r12+0x20]
  42db3e:	mov    rdi,QWORD PTR [r12+0x28]
  42db43:	sub    rbx,rdi
  42db46:	cmp    rbx,r15
  42db49:	jae    42dab0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42db4f:	nop
  42db50:	mov    esi,0x20
  42db55:	mov    rdx,rbx
  42db58:	call   406080 <memset@plt>
  42db5d:	add    QWORD PTR [r12+0x28],rbx
  42db62:	sub    r15,rbx
  42db65:	mov    rdi,r12
  42db68:	xor    esi,esi
  42db6a:	call   QWORD PTR [r12+0x48]
  42db6f:	mov    rbx,QWORD PTR [r12+0x20]
  42db74:	mov    rdi,QWORD PTR [r12+0x28]
  42db79:	sub    rbx,rdi
  42db7c:	cmp    r15,rbx
  42db7f:	ja     42db50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
  42db81:	jmp    42dab0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  42db86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42db90:	cmp    rax,QWORD PTR [r12+0x20]
  42db95:	jb     42dac2 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x192>
  42db9b:	mov    rdi,r12
  42db9e:	xor    esi,esi
  42dba0:	call   QWORD PTR [r12+0x48]
  42dba5:	jmp    42dac2 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x192>
  42dbaa:	cmp    BYTE PTR [r12+0x31],0x0
  42dbb0:	mov    r14,QWORD PTR [r12+0x28]
  42dbb5:	je     42dc68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
  42dbbb:	lea    rax,[r14+0x1]
  42dbbf:	mov    QWORD PTR [r12+0x28],rax
  42dbc4:	mov    BYTE PTR [r14],0xa
  42dbc8:	movsxd rax,DWORD PTR [r12+0x38]
  42dbcd:	dec    rax
  42dbd0:	mov    DWORD PTR [r12+0x38],eax
  42dbd5:	movzx  r14d,BYTE PTR [r12+0x31]
  42dbdb:	imul   r14,rax
  42dbdf:	mov    rbx,QWORD PTR [r12+0x20]
  42dbe4:	mov    rdi,QWORD PTR [r12+0x28]
  42dbe9:	lea    rax,[rdi+r14*1]
  42dbed:	cmp    rax,rbx
  42dbf0:	jbe    42dc51 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42dbf2:	cmp    rdi,rbx
  42dbf5:	jb     42dc0b <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2db>
  42dbf7:	mov    rdi,r12
  42dbfa:	xor    esi,esi
  42dbfc:	call   QWORD PTR [r12+0x48]
  42dc01:	mov    rbx,QWORD PTR [r12+0x20]
  42dc06:	mov    rdi,QWORD PTR [r12+0x28]
  42dc0b:	sub    rbx,rdi
  42dc0e:	cmp    rbx,r14
  42dc11:	jae    42dc51 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  42dc13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc1d:	nop    DWORD PTR [rax]
  42dc20:	mov    esi,0x20
  42dc25:	mov    rdx,rbx
  42dc28:	call   406080 <memset@plt>
  42dc2d:	add    QWORD PTR [r12+0x28],rbx
  42dc32:	sub    r14,rbx
  42dc35:	mov    rdi,r12
  42dc38:	xor    esi,esi
  42dc3a:	call   QWORD PTR [r12+0x48]
  42dc3f:	mov    rbx,QWORD PTR [r12+0x20]
  42dc44:	mov    rdi,QWORD PTR [r12+0x28]
  42dc49:	sub    rbx,rdi
  42dc4c:	cmp    r14,rbx
  42dc4f:	ja     42dc20 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2f0>
  42dc51:	mov    esi,0x20
  42dc56:	mov    rdx,r14
  42dc59:	call   406080 <memset@plt>
  42dc5e:	add    r14,QWORD PTR [r12+0x28]
  42dc63:	mov    QWORD PTR [r12+0x28],r14
  42dc68:	lea    rax,[r14+0x1]
  42dc6c:	mov    QWORD PTR [r12+0x28],rax
  42dc71:	mov    BYTE PTR [r14],0x5d
  42dc75:	add    rsp,0x8
  42dc79:	pop    rbx
  42dc7a:	pop    r12
  42dc7c:	pop    r13
  42dc7e:	pop    r14
  42dc80:	pop    r15
  42dc82:	pop    rbp
  42dc83:	ret    
  42dc84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc8e:	xchg   ax,ax

000000000042dc90 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  42dc90:	push   rbp
  42dc91:	push   r15
  42dc93:	push   r14
  42dc95:	push   r13
  42dc97:	push   r12
  42dc99:	push   rbx
  42dc9a:	push   rax
  42dc9b:	mov    r12,rdi
  42dc9e:	cmp    BYTE PTR [rdi+0x33],0x0
  42dca2:	je     42dcba <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a>
  42dca4:	mov    rdi,r12
  42dca7:	add    rsp,0x8
  42dcab:	pop    rbx
  42dcac:	pop    r12
  42dcae:	pop    r13
  42dcb0:	pop    r14
  42dcb2:	pop    r15
  42dcb4:	pop    rbp
  42dcb5:	jmp    42b120 <flatcc_json_printer_uint64_vector_field@@Base>
  42dcba:	lea    eax,[rdx+rdx*1]
  42dcbd:	add    eax,0x4
  42dcc0:	cmp    eax,DWORD PTR [rsi+0x10]
  42dcc3:	jge    42dfd5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42dcc9:	mov    rdx,QWORD PTR [rsi+0x8]
  42dccd:	mov    eax,eax
  42dccf:	movzx  r13d,WORD PTR [rdx+rax*1]
  42dcd4:	test   r13,r13
  42dcd7:	je     42dfd5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42dcdd:	add    r13,QWORD PTR [rsi]
  42dce0:	je     42dfd5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  42dce6:	mov    r14,r9
  42dce9:	mov    eax,DWORD PTR [rsi+0x18]
  42dcec:	lea    edx,[rax+0x1]
  42dcef:	mov    DWORD PTR [rsi+0x18],edx
  42dcf2:	test   eax,eax
  42dcf4:	je     42dd07 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x77>
  42dcf6:	mov    rax,QWORD PTR [r12+0x28]
  42dcfb:	lea    rdx,[rax+0x1]
  42dcff:	mov    QWORD PTR [r12+0x28],rdx
  42dd04:	mov    BYTE PTR [rax],0x2c
  42dd07:	mov    ebx,DWORD PTR [r13+0x0]
  42dd0b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42dd10:	movsxd rdx,r8d
  42dd13:	mov    rdi,r12
  42dd16:	mov    rsi,rcx
  42dd19:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42dd1e:	inc    DWORD PTR [r12+0x38]
  42dd23:	mov    rax,QWORD PTR [r12+0x28]
  42dd28:	lea    rcx,[rax+0x1]
  42dd2c:	mov    QWORD PTR [r12+0x28],rcx
  42dd31:	mov    BYTE PTR [rax],0x5b
  42dd34:	test   ebp,ebp
  42dd36:	je     42df0a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42dd3c:	add    r13,rbx
  42dd3f:	cmp    BYTE PTR [r12+0x31],0x0
  42dd45:	mov    rax,QWORD PTR [r12+0x28]
  42dd4a:	je     42dde5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x155>
  42dd50:	lea    rcx,[rax+0x1]
  42dd54:	mov    QWORD PTR [r12+0x28],rcx
  42dd59:	mov    BYTE PTR [rax],0xa
  42dd5c:	movsxd rax,DWORD PTR [r12+0x38]
  42dd61:	movzx  r15d,BYTE PTR [r12+0x31]
  42dd67:	imul   r15,rax
  42dd6b:	mov    rbx,QWORD PTR [r12+0x20]
  42dd70:	mov    rdi,QWORD PTR [r12+0x28]
  42dd75:	lea    rax,[rdi+r15*1]
  42dd79:	cmp    rax,rbx
  42dd7c:	jbe    42ddd1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42dd7e:	cmp    rdi,rbx
  42dd81:	jb     42dd97 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x107>
  42dd83:	mov    rdi,r12
  42dd86:	xor    esi,esi
  42dd88:	call   QWORD PTR [r12+0x48]
  42dd8d:	mov    rbx,QWORD PTR [r12+0x20]
  42dd92:	mov    rdi,QWORD PTR [r12+0x28]
  42dd97:	sub    rbx,rdi
  42dd9a:	cmp    rbx,r15
  42dd9d:	jae    42ddd1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  42dd9f:	nop
  42dda0:	mov    esi,0x20
  42dda5:	mov    rdx,rbx
  42dda8:	call   406080 <memset@plt>
  42ddad:	add    QWORD PTR [r12+0x28],rbx
  42ddb2:	sub    r15,rbx
  42ddb5:	mov    rdi,r12
  42ddb8:	xor    esi,esi
  42ddba:	call   QWORD PTR [r12+0x48]
  42ddbf:	mov    rbx,QWORD PTR [r12+0x20]
  42ddc4:	mov    rdi,QWORD PTR [r12+0x28]
  42ddc9:	sub    rbx,rdi
  42ddcc:	cmp    r15,rbx
  42ddcf:	ja     42dda0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
  42ddd1:	mov    esi,0x20
  42ddd6:	mov    rdx,r15
  42ddd9:	call   406080 <memset@plt>
  42ddde:	add    QWORD PTR [r12+0x28],r15
  42dde3:	jmp    42ddf6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42dde5:	cmp    rax,QWORD PTR [r12+0x20]
  42ddea:	jb     42ddf6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  42ddec:	mov    rdi,r12
  42ddef:	xor    esi,esi
  42ddf1:	call   QWORD PTR [r12+0x48]
  42ddf6:	mov    rsi,QWORD PTR [r13+0x4]
  42ddfa:	mov    rdi,r12
  42ddfd:	call   r14
  42de00:	dec    ebp
  42de02:	je     42df0a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42de08:	add    r13,0xc
  42de0c:	jmp    42de38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a8>
  42de0e:	xchg   ax,ax
  42de10:	mov    esi,0x20
  42de15:	mov    rdx,r15
  42de18:	call   406080 <memset@plt>
  42de1d:	add    QWORD PTR [r12+0x28],r15
  42de22:	mov    rsi,QWORD PTR [r13+0x0]
  42de26:	mov    rdi,r12
  42de29:	call   r14
  42de2c:	add    r13,0x8
  42de30:	test   ebp,ebp
  42de32:	je     42df0a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x27a>
  42de38:	dec    ebp
  42de3a:	mov    rax,QWORD PTR [r12+0x28]
  42de3f:	lea    rcx,[rax+0x1]
  42de43:	mov    QWORD PTR [r12+0x28],rcx
  42de48:	mov    BYTE PTR [rax],0x2c
  42de4b:	cmp    BYTE PTR [r12+0x31],0x0
  42de51:	mov    rax,QWORD PTR [r12+0x28]
  42de56:	je     42def0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x260>
  42de5c:	lea    rcx,[rax+0x1]
  42de60:	mov    QWORD PTR [r12+0x28],rcx
  42de65:	mov    BYTE PTR [rax],0xa
  42de68:	movsxd rax,DWORD PTR [r12+0x38]
  42de6d:	movzx  r15d,BYTE PTR [r12+0x31]
  42de73:	imul   r15,rax
  42de77:	mov    rbx,QWORD PTR [r12+0x20]
  42de7c:	mov    rdi,QWORD PTR [r12+0x28]
  42de81:	lea    rax,[rdi+r15*1]
  42de85:	cmp    rax,rbx
  42de88:	jbe    42de10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42de8a:	cmp    rdi,rbx
  42de8d:	jb     42dea3 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x213>
  42de8f:	mov    rdi,r12
  42de92:	xor    esi,esi
  42de94:	call   QWORD PTR [r12+0x48]
  42de99:	mov    rbx,QWORD PTR [r12+0x20]
  42de9e:	mov    rdi,QWORD PTR [r12+0x28]
  42dea3:	sub    rbx,rdi
  42dea6:	cmp    rbx,r15
  42dea9:	jae    42de10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42deaf:	nop
  42deb0:	mov    esi,0x20
  42deb5:	mov    rdx,rbx
  42deb8:	call   406080 <memset@plt>
  42debd:	add    QWORD PTR [r12+0x28],rbx
  42dec2:	sub    r15,rbx
  42dec5:	mov    rdi,r12
  42dec8:	xor    esi,esi
  42deca:	call   QWORD PTR [r12+0x48]
  42decf:	mov    rbx,QWORD PTR [r12+0x20]
  42ded4:	mov    rdi,QWORD PTR [r12+0x28]
  42ded9:	sub    rbx,rdi
  42dedc:	cmp    r15,rbx
  42dedf:	ja     42deb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
  42dee1:	jmp    42de10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  42dee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42def0:	cmp    rax,QWORD PTR [r12+0x20]
  42def5:	jb     42de22 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x192>
  42defb:	mov    rdi,r12
  42defe:	xor    esi,esi
  42df00:	call   QWORD PTR [r12+0x48]
  42df05:	jmp    42de22 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x192>
  42df0a:	cmp    BYTE PTR [r12+0x31],0x0
  42df10:	mov    r14,QWORD PTR [r12+0x28]
  42df15:	je     42dfc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x338>
  42df1b:	lea    rax,[r14+0x1]
  42df1f:	mov    QWORD PTR [r12+0x28],rax
  42df24:	mov    BYTE PTR [r14],0xa
  42df28:	movsxd rax,DWORD PTR [r12+0x38]
  42df2d:	dec    rax
  42df30:	mov    DWORD PTR [r12+0x38],eax
  42df35:	movzx  r14d,BYTE PTR [r12+0x31]
  42df3b:	imul   r14,rax
  42df3f:	mov    rbx,QWORD PTR [r12+0x20]
  42df44:	mov    rdi,QWORD PTR [r12+0x28]
  42df49:	lea    rax,[rdi+r14*1]
  42df4d:	cmp    rax,rbx
  42df50:	jbe    42dfb1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42df52:	cmp    rdi,rbx
  42df55:	jb     42df6b <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2db>
  42df57:	mov    rdi,r12
  42df5a:	xor    esi,esi
  42df5c:	call   QWORD PTR [r12+0x48]
  42df61:	mov    rbx,QWORD PTR [r12+0x20]
  42df66:	mov    rdi,QWORD PTR [r12+0x28]
  42df6b:	sub    rbx,rdi
  42df6e:	cmp    rbx,r14
  42df71:	jae    42dfb1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  42df73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df7d:	nop    DWORD PTR [rax]
  42df80:	mov    esi,0x20
  42df85:	mov    rdx,rbx
  42df88:	call   406080 <memset@plt>
  42df8d:	add    QWORD PTR [r12+0x28],rbx
  42df92:	sub    r14,rbx
  42df95:	mov    rdi,r12
  42df98:	xor    esi,esi
  42df9a:	call   QWORD PTR [r12+0x48]
  42df9f:	mov    rbx,QWORD PTR [r12+0x20]
  42dfa4:	mov    rdi,QWORD PTR [r12+0x28]
  42dfa9:	sub    rbx,rdi
  42dfac:	cmp    r14,rbx
  42dfaf:	ja     42df80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2f0>
  42dfb1:	mov    esi,0x20
  42dfb6:	mov    rdx,r14
  42dfb9:	call   406080 <memset@plt>
  42dfbe:	add    r14,QWORD PTR [r12+0x28]
  42dfc3:	mov    QWORD PTR [r12+0x28],r14
  42dfc8:	lea    rax,[r14+0x1]
  42dfcc:	mov    QWORD PTR [r12+0x28],rax
  42dfd1:	mov    BYTE PTR [r14],0x5d
  42dfd5:	add    rsp,0x8
  42dfd9:	pop    rbx
  42dfda:	pop    r12
  42dfdc:	pop    r13
  42dfde:	pop    r14
  42dfe0:	pop    r15
  42dfe2:	pop    rbp
  42dfe3:	ret    
  42dfe4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dfee:	xchg   ax,ax

000000000042dff0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  42dff0:	push   rbp
  42dff1:	push   r15
  42dff3:	push   r14
  42dff5:	push   r13
  42dff7:	push   r12
  42dff9:	push   rbx
  42dffa:	push   rax
  42dffb:	mov    r12,rdi
  42dffe:	cmp    BYTE PTR [rdi+0x33],0x0
  42e002:	je     42e01a <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a>
  42e004:	mov    rdi,r12
  42e007:	add    rsp,0x8
  42e00b:	pop    rbx
  42e00c:	pop    r12
  42e00e:	pop    r13
  42e010:	pop    r14
  42e012:	pop    r15
  42e014:	pop    rbp
  42e015:	jmp    42b440 <flatcc_json_printer_int8_vector_field@@Base>
  42e01a:	lea    eax,[rdx+rdx*1]
  42e01d:	add    eax,0x4
  42e020:	cmp    eax,DWORD PTR [rsi+0x10]
  42e023:	jge    42e335 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42e029:	mov    rdx,QWORD PTR [rsi+0x8]
  42e02d:	mov    eax,eax
  42e02f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e034:	test   r13,r13
  42e037:	je     42e335 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42e03d:	add    r13,QWORD PTR [rsi]
  42e040:	je     42e335 <flatcc_json_printer_int8_enum_vector_field@@Base+0x345>
  42e046:	mov    r14,r9
  42e049:	mov    eax,DWORD PTR [rsi+0x18]
  42e04c:	lea    edx,[rax+0x1]
  42e04f:	mov    DWORD PTR [rsi+0x18],edx
  42e052:	test   eax,eax
  42e054:	je     42e067 <flatcc_json_printer_int8_enum_vector_field@@Base+0x77>
  42e056:	mov    rax,QWORD PTR [r12+0x28]
  42e05b:	lea    rdx,[rax+0x1]
  42e05f:	mov    QWORD PTR [r12+0x28],rdx
  42e064:	mov    BYTE PTR [rax],0x2c
  42e067:	mov    ebx,DWORD PTR [r13+0x0]
  42e06b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e070:	movsxd rdx,r8d
  42e073:	mov    rdi,r12
  42e076:	mov    rsi,rcx
  42e079:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42e07e:	inc    DWORD PTR [r12+0x38]
  42e083:	mov    rax,QWORD PTR [r12+0x28]
  42e088:	lea    rcx,[rax+0x1]
  42e08c:	mov    QWORD PTR [r12+0x28],rcx
  42e091:	mov    BYTE PTR [rax],0x5b
  42e094:	test   ebp,ebp
  42e096:	je     42e26a <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42e09c:	add    r13,rbx
  42e09f:	cmp    BYTE PTR [r12+0x31],0x0
  42e0a5:	mov    rax,QWORD PTR [r12+0x28]
  42e0aa:	je     42e145 <flatcc_json_printer_int8_enum_vector_field@@Base+0x155>
  42e0b0:	lea    rcx,[rax+0x1]
  42e0b4:	mov    QWORD PTR [r12+0x28],rcx
  42e0b9:	mov    BYTE PTR [rax],0xa
  42e0bc:	movsxd rax,DWORD PTR [r12+0x38]
  42e0c1:	movzx  r15d,BYTE PTR [r12+0x31]
  42e0c7:	imul   r15,rax
  42e0cb:	mov    rbx,QWORD PTR [r12+0x20]
  42e0d0:	mov    rdi,QWORD PTR [r12+0x28]
  42e0d5:	lea    rax,[rdi+r15*1]
  42e0d9:	cmp    rax,rbx
  42e0dc:	jbe    42e131 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42e0de:	cmp    rdi,rbx
  42e0e1:	jb     42e0f7 <flatcc_json_printer_int8_enum_vector_field@@Base+0x107>
  42e0e3:	mov    rdi,r12
  42e0e6:	xor    esi,esi
  42e0e8:	call   QWORD PTR [r12+0x48]
  42e0ed:	mov    rbx,QWORD PTR [r12+0x20]
  42e0f2:	mov    rdi,QWORD PTR [r12+0x28]
  42e0f7:	sub    rbx,rdi
  42e0fa:	cmp    rbx,r15
  42e0fd:	jae    42e131 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  42e0ff:	nop
  42e100:	mov    esi,0x20
  42e105:	mov    rdx,rbx
  42e108:	call   406080 <memset@plt>
  42e10d:	add    QWORD PTR [r12+0x28],rbx
  42e112:	sub    r15,rbx
  42e115:	mov    rdi,r12
  42e118:	xor    esi,esi
  42e11a:	call   QWORD PTR [r12+0x48]
  42e11f:	mov    rbx,QWORD PTR [r12+0x20]
  42e124:	mov    rdi,QWORD PTR [r12+0x28]
  42e129:	sub    rbx,rdi
  42e12c:	cmp    r15,rbx
  42e12f:	ja     42e100 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
  42e131:	mov    esi,0x20
  42e136:	mov    rdx,r15
  42e139:	call   406080 <memset@plt>
  42e13e:	add    QWORD PTR [r12+0x28],r15
  42e143:	jmp    42e156 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42e145:	cmp    rax,QWORD PTR [r12+0x20]
  42e14a:	jb     42e156 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  42e14c:	mov    rdi,r12
  42e14f:	xor    esi,esi
  42e151:	call   QWORD PTR [r12+0x48]
  42e156:	movsx  esi,BYTE PTR [r13+0x4]
  42e15b:	mov    rdi,r12
  42e15e:	call   r14
  42e161:	dec    ebp
  42e163:	je     42e26a <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42e169:	add    r13,0x5
  42e16d:	jmp    42e198 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a8>
  42e16f:	nop
  42e170:	mov    esi,0x20
  42e175:	mov    rdx,r15
  42e178:	call   406080 <memset@plt>
  42e17d:	add    QWORD PTR [r12+0x28],r15
  42e182:	movsx  esi,BYTE PTR [r13+0x0]
  42e187:	mov    rdi,r12
  42e18a:	call   r14
  42e18d:	inc    r13
  42e190:	test   ebp,ebp
  42e192:	je     42e26a <flatcc_json_printer_int8_enum_vector_field@@Base+0x27a>
  42e198:	dec    ebp
  42e19a:	mov    rax,QWORD PTR [r12+0x28]
  42e19f:	lea    rcx,[rax+0x1]
  42e1a3:	mov    QWORD PTR [r12+0x28],rcx
  42e1a8:	mov    BYTE PTR [rax],0x2c
  42e1ab:	cmp    BYTE PTR [r12+0x31],0x0
  42e1b1:	mov    rax,QWORD PTR [r12+0x28]
  42e1b6:	je     42e250 <flatcc_json_printer_int8_enum_vector_field@@Base+0x260>
  42e1bc:	lea    rcx,[rax+0x1]
  42e1c0:	mov    QWORD PTR [r12+0x28],rcx
  42e1c5:	mov    BYTE PTR [rax],0xa
  42e1c8:	movsxd rax,DWORD PTR [r12+0x38]
  42e1cd:	movzx  r15d,BYTE PTR [r12+0x31]
  42e1d3:	imul   r15,rax
  42e1d7:	mov    rbx,QWORD PTR [r12+0x20]
  42e1dc:	mov    rdi,QWORD PTR [r12+0x28]
  42e1e1:	lea    rax,[rdi+r15*1]
  42e1e5:	cmp    rax,rbx
  42e1e8:	jbe    42e170 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42e1ea:	cmp    rdi,rbx
  42e1ed:	jb     42e203 <flatcc_json_printer_int8_enum_vector_field@@Base+0x213>
  42e1ef:	mov    rdi,r12
  42e1f2:	xor    esi,esi
  42e1f4:	call   QWORD PTR [r12+0x48]
  42e1f9:	mov    rbx,QWORD PTR [r12+0x20]
  42e1fe:	mov    rdi,QWORD PTR [r12+0x28]
  42e203:	sub    rbx,rdi
  42e206:	cmp    rbx,r15
  42e209:	jae    42e170 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42e20f:	nop
  42e210:	mov    esi,0x20
  42e215:	mov    rdx,rbx
  42e218:	call   406080 <memset@plt>
  42e21d:	add    QWORD PTR [r12+0x28],rbx
  42e222:	sub    r15,rbx
  42e225:	mov    rdi,r12
  42e228:	xor    esi,esi
  42e22a:	call   QWORD PTR [r12+0x48]
  42e22f:	mov    rbx,QWORD PTR [r12+0x20]
  42e234:	mov    rdi,QWORD PTR [r12+0x28]
  42e239:	sub    rbx,rdi
  42e23c:	cmp    r15,rbx
  42e23f:	ja     42e210 <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
  42e241:	jmp    42e170 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  42e246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e250:	cmp    rax,QWORD PTR [r12+0x20]
  42e255:	jb     42e182 <flatcc_json_printer_int8_enum_vector_field@@Base+0x192>
  42e25b:	mov    rdi,r12
  42e25e:	xor    esi,esi
  42e260:	call   QWORD PTR [r12+0x48]
  42e265:	jmp    42e182 <flatcc_json_printer_int8_enum_vector_field@@Base+0x192>
  42e26a:	cmp    BYTE PTR [r12+0x31],0x0
  42e270:	mov    r14,QWORD PTR [r12+0x28]
  42e275:	je     42e328 <flatcc_json_printer_int8_enum_vector_field@@Base+0x338>
  42e27b:	lea    rax,[r14+0x1]
  42e27f:	mov    QWORD PTR [r12+0x28],rax
  42e284:	mov    BYTE PTR [r14],0xa
  42e288:	movsxd rax,DWORD PTR [r12+0x38]
  42e28d:	dec    rax
  42e290:	mov    DWORD PTR [r12+0x38],eax
  42e295:	movzx  r14d,BYTE PTR [r12+0x31]
  42e29b:	imul   r14,rax
  42e29f:	mov    rbx,QWORD PTR [r12+0x20]
  42e2a4:	mov    rdi,QWORD PTR [r12+0x28]
  42e2a9:	lea    rax,[rdi+r14*1]
  42e2ad:	cmp    rax,rbx
  42e2b0:	jbe    42e311 <flatcc_json_printer_int8_enum_vector_field@@Base+0x321>
  42e2b2:	cmp    rdi,rbx
  42e2b5:	jb     42e2cb <flatcc_json_printer_int8_enum_vector_field@@Base+0x2db>
  42e2b7:	mov    rdi,r12
  42e2ba:	xor    esi,esi
  42e2bc:	call   QWORD PTR [r12+0x48]
  42e2c1:	mov    rbx,QWORD PTR [r12+0x20]
  42e2c6:	mov    rdi,QWORD PTR [r12+0x28]
  42e2cb:	sub    rbx,rdi
  42e2ce:	cmp    rbx,r14
  42e2d1:	jae    42e311 <flatcc_json_printer_int8_enum_vector_field@@Base+0x321>
  42e2d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e2dd:	nop    DWORD PTR [rax]
  42e2e0:	mov    esi,0x20
  42e2e5:	mov    rdx,rbx
  42e2e8:	call   406080 <memset@plt>
  42e2ed:	add    QWORD PTR [r12+0x28],rbx
  42e2f2:	sub    r14,rbx
  42e2f5:	mov    rdi,r12
  42e2f8:	xor    esi,esi
  42e2fa:	call   QWORD PTR [r12+0x48]
  42e2ff:	mov    rbx,QWORD PTR [r12+0x20]
  42e304:	mov    rdi,QWORD PTR [r12+0x28]
  42e309:	sub    rbx,rdi
  42e30c:	cmp    r14,rbx
  42e30f:	ja     42e2e0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2f0>
  42e311:	mov    esi,0x20
  42e316:	mov    rdx,r14
  42e319:	call   406080 <memset@plt>
  42e31e:	add    r14,QWORD PTR [r12+0x28]
  42e323:	mov    QWORD PTR [r12+0x28],r14
  42e328:	lea    rax,[r14+0x1]
  42e32c:	mov    QWORD PTR [r12+0x28],rax
  42e331:	mov    BYTE PTR [r14],0x5d
  42e335:	add    rsp,0x8
  42e339:	pop    rbx
  42e33a:	pop    r12
  42e33c:	pop    r13
  42e33e:	pop    r14
  42e340:	pop    r15
  42e342:	pop    rbp
  42e343:	ret    
  42e344:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e34e:	xchg   ax,ax

000000000042e350 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  42e350:	push   rbp
  42e351:	push   r15
  42e353:	push   r14
  42e355:	push   r13
  42e357:	push   r12
  42e359:	push   rbx
  42e35a:	push   rax
  42e35b:	mov    r12,rdi
  42e35e:	cmp    BYTE PTR [rdi+0x33],0x0
  42e362:	je     42e37a <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a>
  42e364:	mov    rdi,r12
  42e367:	add    rsp,0x8
  42e36b:	pop    rbx
  42e36c:	pop    r12
  42e36e:	pop    r13
  42e370:	pop    r14
  42e372:	pop    r15
  42e374:	pop    rbp
  42e375:	jmp    42b8b0 <flatcc_json_printer_int16_vector_field@@Base>
  42e37a:	lea    eax,[rdx+rdx*1]
  42e37d:	add    eax,0x4
  42e380:	cmp    eax,DWORD PTR [rsi+0x10]
  42e383:	jge    42e695 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42e389:	mov    rdx,QWORD PTR [rsi+0x8]
  42e38d:	mov    eax,eax
  42e38f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e394:	test   r13,r13
  42e397:	je     42e695 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42e39d:	add    r13,QWORD PTR [rsi]
  42e3a0:	je     42e695 <flatcc_json_printer_int16_enum_vector_field@@Base+0x345>
  42e3a6:	mov    r14,r9
  42e3a9:	mov    eax,DWORD PTR [rsi+0x18]
  42e3ac:	lea    edx,[rax+0x1]
  42e3af:	mov    DWORD PTR [rsi+0x18],edx
  42e3b2:	test   eax,eax
  42e3b4:	je     42e3c7 <flatcc_json_printer_int16_enum_vector_field@@Base+0x77>
  42e3b6:	mov    rax,QWORD PTR [r12+0x28]
  42e3bb:	lea    rdx,[rax+0x1]
  42e3bf:	mov    QWORD PTR [r12+0x28],rdx
  42e3c4:	mov    BYTE PTR [rax],0x2c
  42e3c7:	mov    ebx,DWORD PTR [r13+0x0]
  42e3cb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e3d0:	movsxd rdx,r8d
  42e3d3:	mov    rdi,r12
  42e3d6:	mov    rsi,rcx
  42e3d9:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42e3de:	inc    DWORD PTR [r12+0x38]
  42e3e3:	mov    rax,QWORD PTR [r12+0x28]
  42e3e8:	lea    rcx,[rax+0x1]
  42e3ec:	mov    QWORD PTR [r12+0x28],rcx
  42e3f1:	mov    BYTE PTR [rax],0x5b
  42e3f4:	test   ebp,ebp
  42e3f6:	je     42e5ca <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  42e3fc:	add    r13,rbx
  42e3ff:	cmp    BYTE PTR [r12+0x31],0x0
  42e405:	mov    rax,QWORD PTR [r12+0x28]
  42e40a:	je     42e4a5 <flatcc_json_printer_int16_enum_vector_field@@Base+0x155>
  42e410:	lea    rcx,[rax+0x1]
  42e414:	mov    QWORD PTR [r12+0x28],rcx
  42e419:	mov    BYTE PTR [rax],0xa
  42e41c:	movsxd rax,DWORD PTR [r12+0x38]
  42e421:	movzx  r15d,BYTE PTR [r12+0x31]
  42e427:	imul   r15,rax
  42e42b:	mov    rbx,QWORD PTR [r12+0x20]
  42e430:	mov    rdi,QWORD PTR [r12+0x28]
  42e435:	lea    rax,[rdi+r15*1]
  42e439:	cmp    rax,rbx
  42e43c:	jbe    42e491 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42e43e:	cmp    rdi,rbx
  42e441:	jb     42e457 <flatcc_json_printer_int16_enum_vector_field@@Base+0x107>
  42e443:	mov    rdi,r12
  42e446:	xor    esi,esi
  42e448:	call   QWORD PTR [r12+0x48]
  42e44d:	mov    rbx,QWORD PTR [r12+0x20]
  42e452:	mov    rdi,QWORD PTR [r12+0x28]
  42e457:	sub    rbx,rdi
  42e45a:	cmp    rbx,r15
  42e45d:	jae    42e491 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  42e45f:	nop
  42e460:	mov    esi,0x20
  42e465:	mov    rdx,rbx
  42e468:	call   406080 <memset@plt>
  42e46d:	add    QWORD PTR [r12+0x28],rbx
  42e472:	sub    r15,rbx
  42e475:	mov    rdi,r12
  42e478:	xor    esi,esi
  42e47a:	call   QWORD PTR [r12+0x48]
  42e47f:	mov    rbx,QWORD PTR [r12+0x20]
  42e484:	mov    rdi,QWORD PTR [r12+0x28]
  42e489:	sub    rbx,rdi
  42e48c:	cmp    r15,rbx
  42e48f:	ja     42e460 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
  42e491:	mov    esi,0x20
  42e496:	mov    rdx,r15
  42e499:	call   406080 <memset@plt>
  42e49e:	add    QWORD PTR [r12+0x28],r15
  42e4a3:	jmp    42e4b6 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42e4a5:	cmp    rax,QWORD PTR [r12+0x20]
  42e4aa:	jb     42e4b6 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  42e4ac:	mov    rdi,r12
  42e4af:	xor    esi,esi
  42e4b1:	call   QWORD PTR [r12+0x48]
  42e4b6:	movsx  esi,WORD PTR [r13+0x4]
  42e4bb:	mov    rdi,r12
  42e4be:	call   r14
  42e4c1:	dec    ebp
  42e4c3:	je     42e5ca <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  42e4c9:	add    r13,0x6
  42e4cd:	jmp    42e4f9 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a9>
  42e4cf:	nop
  42e4d0:	mov    esi,0x20
  42e4d5:	mov    rdx,r15
  42e4d8:	call   406080 <memset@plt>
  42e4dd:	add    QWORD PTR [r12+0x28],r15
  42e4e2:	movsx  esi,WORD PTR [r13+0x0]
  42e4e7:	mov    rdi,r12
  42e4ea:	call   r14
  42e4ed:	add    r13,0x2
  42e4f1:	test   ebp,ebp
  42e4f3:	je     42e5ca <flatcc_json_printer_int16_enum_vector_field@@Base+0x27a>
  42e4f9:	dec    ebp
  42e4fb:	mov    rax,QWORD PTR [r12+0x28]
  42e500:	lea    rcx,[rax+0x1]
  42e504:	mov    QWORD PTR [r12+0x28],rcx
  42e509:	mov    BYTE PTR [rax],0x2c
  42e50c:	cmp    BYTE PTR [r12+0x31],0x0
  42e512:	mov    rax,QWORD PTR [r12+0x28]
  42e517:	je     42e5b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x260>
  42e51d:	lea    rcx,[rax+0x1]
  42e521:	mov    QWORD PTR [r12+0x28],rcx
  42e526:	mov    BYTE PTR [rax],0xa
  42e529:	movsxd rax,DWORD PTR [r12+0x38]
  42e52e:	movzx  r15d,BYTE PTR [r12+0x31]
  42e534:	imul   r15,rax
  42e538:	mov    rbx,QWORD PTR [r12+0x20]
  42e53d:	mov    rdi,QWORD PTR [r12+0x28]
  42e542:	lea    rax,[rdi+r15*1]
  42e546:	cmp    rax,rbx
  42e549:	jbe    42e4d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  42e54b:	cmp    rdi,rbx
  42e54e:	jb     42e564 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
  42e550:	mov    rdi,r12
  42e553:	xor    esi,esi
  42e555:	call   QWORD PTR [r12+0x48]
  42e55a:	mov    rbx,QWORD PTR [r12+0x20]
  42e55f:	mov    rdi,QWORD PTR [r12+0x28]
  42e564:	sub    rbx,rdi
  42e567:	cmp    rbx,r15
  42e56a:	jae    42e4d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  42e570:	mov    esi,0x20
  42e575:	mov    rdx,rbx
  42e578:	call   406080 <memset@plt>
  42e57d:	add    QWORD PTR [r12+0x28],rbx
  42e582:	sub    r15,rbx
  42e585:	mov    rdi,r12
  42e588:	xor    esi,esi
  42e58a:	call   QWORD PTR [r12+0x48]
  42e58f:	mov    rbx,QWORD PTR [r12+0x20]
  42e594:	mov    rdi,QWORD PTR [r12+0x28]
  42e599:	sub    rbx,rdi
  42e59c:	cmp    r15,rbx
  42e59f:	ja     42e570 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
  42e5a1:	jmp    42e4d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  42e5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e5b0:	cmp    rax,QWORD PTR [r12+0x20]
  42e5b5:	jb     42e4e2 <flatcc_json_printer_int16_enum_vector_field@@Base+0x192>
  42e5bb:	mov    rdi,r12
  42e5be:	xor    esi,esi
  42e5c0:	call   QWORD PTR [r12+0x48]
  42e5c5:	jmp    42e4e2 <flatcc_json_printer_int16_enum_vector_field@@Base+0x192>
  42e5ca:	cmp    BYTE PTR [r12+0x31],0x0
  42e5d0:	mov    r14,QWORD PTR [r12+0x28]
  42e5d5:	je     42e688 <flatcc_json_printer_int16_enum_vector_field@@Base+0x338>
  42e5db:	lea    rax,[r14+0x1]
  42e5df:	mov    QWORD PTR [r12+0x28],rax
  42e5e4:	mov    BYTE PTR [r14],0xa
  42e5e8:	movsxd rax,DWORD PTR [r12+0x38]
  42e5ed:	dec    rax
  42e5f0:	mov    DWORD PTR [r12+0x38],eax
  42e5f5:	movzx  r14d,BYTE PTR [r12+0x31]
  42e5fb:	imul   r14,rax
  42e5ff:	mov    rbx,QWORD PTR [r12+0x20]
  42e604:	mov    rdi,QWORD PTR [r12+0x28]
  42e609:	lea    rax,[rdi+r14*1]
  42e60d:	cmp    rax,rbx
  42e610:	jbe    42e671 <flatcc_json_printer_int16_enum_vector_field@@Base+0x321>
  42e612:	cmp    rdi,rbx
  42e615:	jb     42e62b <flatcc_json_printer_int16_enum_vector_field@@Base+0x2db>
  42e617:	mov    rdi,r12
  42e61a:	xor    esi,esi
  42e61c:	call   QWORD PTR [r12+0x48]
  42e621:	mov    rbx,QWORD PTR [r12+0x20]
  42e626:	mov    rdi,QWORD PTR [r12+0x28]
  42e62b:	sub    rbx,rdi
  42e62e:	cmp    rbx,r14
  42e631:	jae    42e671 <flatcc_json_printer_int16_enum_vector_field@@Base+0x321>
  42e633:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e63d:	nop    DWORD PTR [rax]
  42e640:	mov    esi,0x20
  42e645:	mov    rdx,rbx
  42e648:	call   406080 <memset@plt>
  42e64d:	add    QWORD PTR [r12+0x28],rbx
  42e652:	sub    r14,rbx
  42e655:	mov    rdi,r12
  42e658:	xor    esi,esi
  42e65a:	call   QWORD PTR [r12+0x48]
  42e65f:	mov    rbx,QWORD PTR [r12+0x20]
  42e664:	mov    rdi,QWORD PTR [r12+0x28]
  42e669:	sub    rbx,rdi
  42e66c:	cmp    r14,rbx
  42e66f:	ja     42e640 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2f0>
  42e671:	mov    esi,0x20
  42e676:	mov    rdx,r14
  42e679:	call   406080 <memset@plt>
  42e67e:	add    r14,QWORD PTR [r12+0x28]
  42e683:	mov    QWORD PTR [r12+0x28],r14
  42e688:	lea    rax,[r14+0x1]
  42e68c:	mov    QWORD PTR [r12+0x28],rax
  42e691:	mov    BYTE PTR [r14],0x5d
  42e695:	add    rsp,0x8
  42e699:	pop    rbx
  42e69a:	pop    r12
  42e69c:	pop    r13
  42e69e:	pop    r14
  42e6a0:	pop    r15
  42e6a2:	pop    rbp
  42e6a3:	ret    
  42e6a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e6ae:	xchg   ax,ax

000000000042e6b0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  42e6b0:	push   rbp
  42e6b1:	push   r15
  42e6b3:	push   r14
  42e6b5:	push   r13
  42e6b7:	push   r12
  42e6b9:	push   rbx
  42e6ba:	push   rax
  42e6bb:	mov    r12,rdi
  42e6be:	cmp    BYTE PTR [rdi+0x33],0x0
  42e6c2:	je     42e6da <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a>
  42e6c4:	mov    rdi,r12
  42e6c7:	add    rsp,0x8
  42e6cb:	pop    rbx
  42e6cc:	pop    r12
  42e6ce:	pop    r13
  42e6d0:	pop    r14
  42e6d2:	pop    r15
  42e6d4:	pop    rbp
  42e6d5:	jmp    42be60 <flatcc_json_printer_int32_vector_field@@Base>
  42e6da:	lea    eax,[rdx+rdx*1]
  42e6dd:	add    eax,0x4
  42e6e0:	cmp    eax,DWORD PTR [rsi+0x10]
  42e6e3:	jge    42e9f5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42e6e9:	mov    rdx,QWORD PTR [rsi+0x8]
  42e6ed:	mov    eax,eax
  42e6ef:	movzx  r13d,WORD PTR [rdx+rax*1]
  42e6f4:	test   r13,r13
  42e6f7:	je     42e9f5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42e6fd:	add    r13,QWORD PTR [rsi]
  42e700:	je     42e9f5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  42e706:	mov    r14,r9
  42e709:	mov    eax,DWORD PTR [rsi+0x18]
  42e70c:	lea    edx,[rax+0x1]
  42e70f:	mov    DWORD PTR [rsi+0x18],edx
  42e712:	test   eax,eax
  42e714:	je     42e727 <flatcc_json_printer_int32_enum_vector_field@@Base+0x77>
  42e716:	mov    rax,QWORD PTR [r12+0x28]
  42e71b:	lea    rdx,[rax+0x1]
  42e71f:	mov    QWORD PTR [r12+0x28],rdx
  42e724:	mov    BYTE PTR [rax],0x2c
  42e727:	mov    ebx,DWORD PTR [r13+0x0]
  42e72b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42e730:	movsxd rdx,r8d
  42e733:	mov    rdi,r12
  42e736:	mov    rsi,rcx
  42e739:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42e73e:	inc    DWORD PTR [r12+0x38]
  42e743:	mov    rax,QWORD PTR [r12+0x28]
  42e748:	lea    rcx,[rax+0x1]
  42e74c:	mov    QWORD PTR [r12+0x28],rcx
  42e751:	mov    BYTE PTR [rax],0x5b
  42e754:	test   ebp,ebp
  42e756:	je     42e92a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  42e75c:	add    r13,rbx
  42e75f:	cmp    BYTE PTR [r12+0x31],0x0
  42e765:	mov    rax,QWORD PTR [r12+0x28]
  42e76a:	je     42e805 <flatcc_json_printer_int32_enum_vector_field@@Base+0x155>
  42e770:	lea    rcx,[rax+0x1]
  42e774:	mov    QWORD PTR [r12+0x28],rcx
  42e779:	mov    BYTE PTR [rax],0xa
  42e77c:	movsxd rax,DWORD PTR [r12+0x38]
  42e781:	movzx  r15d,BYTE PTR [r12+0x31]
  42e787:	imul   r15,rax
  42e78b:	mov    rbx,QWORD PTR [r12+0x20]
  42e790:	mov    rdi,QWORD PTR [r12+0x28]
  42e795:	lea    rax,[rdi+r15*1]
  42e799:	cmp    rax,rbx
  42e79c:	jbe    42e7f1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  42e79e:	cmp    rdi,rbx
  42e7a1:	jb     42e7b7 <flatcc_json_printer_int32_enum_vector_field@@Base+0x107>
  42e7a3:	mov    rdi,r12
  42e7a6:	xor    esi,esi
  42e7a8:	call   QWORD PTR [r12+0x48]
  42e7ad:	mov    rbx,QWORD PTR [r12+0x20]
  42e7b2:	mov    rdi,QWORD PTR [r12+0x28]
  42e7b7:	sub    rbx,rdi
  42e7ba:	cmp    rbx,r15
  42e7bd:	jae    42e7f1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  42e7bf:	nop
  42e7c0:	mov    esi,0x20
  42e7c5:	mov    rdx,rbx
  42e7c8:	call   406080 <memset@plt>
  42e7cd:	add    QWORD PTR [r12+0x28],rbx
  42e7d2:	sub    r15,rbx
  42e7d5:	mov    rdi,r12
  42e7d8:	xor    esi,esi
  42e7da:	call   QWORD PTR [r12+0x48]
  42e7df:	mov    rbx,QWORD PTR [r12+0x20]
  42e7e4:	mov    rdi,QWORD PTR [r12+0x28]
  42e7e9:	sub    rbx,rdi
  42e7ec:	cmp    r15,rbx
  42e7ef:	ja     42e7c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
  42e7f1:	mov    esi,0x20
  42e7f6:	mov    rdx,r15
  42e7f9:	call   406080 <memset@plt>
  42e7fe:	add    QWORD PTR [r12+0x28],r15
  42e803:	jmp    42e816 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  42e805:	cmp    rax,QWORD PTR [r12+0x20]
  42e80a:	jb     42e816 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  42e80c:	mov    rdi,r12
  42e80f:	xor    esi,esi
  42e811:	call   QWORD PTR [r12+0x48]
  42e816:	mov    esi,DWORD PTR [r13+0x4]
  42e81a:	mov    rdi,r12
  42e81d:	call   r14
  42e820:	dec    ebp
  42e822:	je     42e92a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  42e828:	add    r13,0x8
  42e82c:	jmp    42e858 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
  42e82e:	xchg   ax,ax
  42e830:	mov    esi,0x20
  42e835:	mov    rdx,r15
  42e838:	call   406080 <memset@plt>
  42e83d:	add    QWORD PTR [r12+0x28],r15
  42e842:	mov    esi,DWORD PTR [r13+0x0]
  42e846:	mov    rdi,r12
  42e849:	call   r14
  42e84c:	add    r13,0x4
  42e850:	test   ebp,ebp
  42e852:	je     42e92a <flatcc_json_printer_int32_enum_vector_field@@Base+0x27a>
  42e858:	dec    ebp
  42e85a:	mov    rax,QWORD PTR [r12+0x28]
  42e85f:	lea    rcx,[rax+0x1]
  42e863:	mov    QWORD PTR [r12+0x28],rcx
  42e868:	mov    BYTE PTR [rax],0x2c
  42e86b:	cmp    BYTE PTR [r12+0x31],0x0
  42e871:	mov    rax,QWORD PTR [r12+0x28]
  42e876:	je     42e910 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
  42e87c:	lea    rcx,[rax+0x1]
  42e880:	mov    QWORD PTR [r12+0x28],rcx
  42e885:	mov    BYTE PTR [rax],0xa
  42e888:	movsxd rax,DWORD PTR [r12+0x38]
  42e88d:	movzx  r15d,BYTE PTR [r12+0x31]
  42e893:	imul   r15,rax
  42e897:	mov    rbx,QWORD PTR [r12+0x20]
  42e89c:	mov    rdi,QWORD PTR [r12+0x28]
  42e8a1:	lea    rax,[rdi+r15*1]
  42e8a5:	cmp    rax,rbx
  42e8a8:	jbe    42e830 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  42e8aa:	cmp    rdi,rbx
  42e8ad:	jb     42e8c3 <flatcc_json_printer_int32_enum_vector_field@@Base+0x213>
  42e8af:	mov    rdi,r12
  42e8b2:	xor    esi,esi
  42e8b4:	call   QWORD PTR [r12+0x48]
  42e8b9:	mov    rbx,QWORD PTR [r12+0x20]
  42e8be:	mov    rdi,QWORD PTR [r12+0x28]
  42e8c3:	sub    rbx,rdi
  42e8c6:	cmp    rbx,r15
  42e8c9:	jae    42e830 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  42e8cf:	nop
  42e8d0:	mov    esi,0x20
  42e8d5:	mov    rdx,rbx
  42e8d8:	call   406080 <memset@plt>
  42e8dd:	add    QWORD PTR [r12+0x28],rbx
  42e8e2:	sub    r15,rbx
  42e8e5:	mov    rdi,r12
  42e8e8:	xor    esi,esi
  42e8ea:	call   QWORD PTR [r12+0x48]
  42e8ef:	mov    rbx,QWORD PTR [r12+0x20]
  42e8f4:	mov    rdi,QWORD PTR [r12+0x28]
  42e8f9:	sub    rbx,rdi
  42e8fc:	cmp    r15,rbx
  42e8ff:	ja     42e8d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
  42e901:	jmp    42e830 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  42e906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e910:	cmp    rax,QWORD PTR [r12+0x20]
  42e915:	jb     42e842 <flatcc_json_printer_int32_enum_vector_field@@Base+0x192>
  42e91b:	mov    rdi,r12
  42e91e:	xor    esi,esi
  42e920:	call   QWORD PTR [r12+0x48]
  42e925:	jmp    42e842 <flatcc_json_printer_int32_enum_vector_field@@Base+0x192>
  42e92a:	cmp    BYTE PTR [r12+0x31],0x0
  42e930:	mov    r14,QWORD PTR [r12+0x28]
  42e935:	je     42e9e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
  42e93b:	lea    rax,[r14+0x1]
  42e93f:	mov    QWORD PTR [r12+0x28],rax
  42e944:	mov    BYTE PTR [r14],0xa
  42e948:	movsxd rax,DWORD PTR [r12+0x38]
  42e94d:	dec    rax
  42e950:	mov    DWORD PTR [r12+0x38],eax
  42e955:	movzx  r14d,BYTE PTR [r12+0x31]
  42e95b:	imul   r14,rax
  42e95f:	mov    rbx,QWORD PTR [r12+0x20]
  42e964:	mov    rdi,QWORD PTR [r12+0x28]
  42e969:	lea    rax,[rdi+r14*1]
  42e96d:	cmp    rax,rbx
  42e970:	jbe    42e9d1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  42e972:	cmp    rdi,rbx
  42e975:	jb     42e98b <flatcc_json_printer_int32_enum_vector_field@@Base+0x2db>
  42e977:	mov    rdi,r12
  42e97a:	xor    esi,esi
  42e97c:	call   QWORD PTR [r12+0x48]
  42e981:	mov    rbx,QWORD PTR [r12+0x20]
  42e986:	mov    rdi,QWORD PTR [r12+0x28]
  42e98b:	sub    rbx,rdi
  42e98e:	cmp    rbx,r14
  42e991:	jae    42e9d1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  42e993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e99d:	nop    DWORD PTR [rax]
  42e9a0:	mov    esi,0x20
  42e9a5:	mov    rdx,rbx
  42e9a8:	call   406080 <memset@plt>
  42e9ad:	add    QWORD PTR [r12+0x28],rbx
  42e9b2:	sub    r14,rbx
  42e9b5:	mov    rdi,r12
  42e9b8:	xor    esi,esi
  42e9ba:	call   QWORD PTR [r12+0x48]
  42e9bf:	mov    rbx,QWORD PTR [r12+0x20]
  42e9c4:	mov    rdi,QWORD PTR [r12+0x28]
  42e9c9:	sub    rbx,rdi
  42e9cc:	cmp    r14,rbx
  42e9cf:	ja     42e9a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2f0>
  42e9d1:	mov    esi,0x20
  42e9d6:	mov    rdx,r14
  42e9d9:	call   406080 <memset@plt>
  42e9de:	add    r14,QWORD PTR [r12+0x28]
  42e9e3:	mov    QWORD PTR [r12+0x28],r14
  42e9e8:	lea    rax,[r14+0x1]
  42e9ec:	mov    QWORD PTR [r12+0x28],rax
  42e9f1:	mov    BYTE PTR [r14],0x5d
  42e9f5:	add    rsp,0x8
  42e9f9:	pop    rbx
  42e9fa:	pop    r12
  42e9fc:	pop    r13
  42e9fe:	pop    r14
  42ea00:	pop    r15
  42ea02:	pop    rbp
  42ea03:	ret    
  42ea04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea0e:	xchg   ax,ax

000000000042ea10 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  42ea10:	push   rbp
  42ea11:	push   r15
  42ea13:	push   r14
  42ea15:	push   r13
  42ea17:	push   r12
  42ea19:	push   rbx
  42ea1a:	push   rax
  42ea1b:	mov    r12,rdi
  42ea1e:	cmp    BYTE PTR [rdi+0x33],0x0
  42ea22:	je     42ea3a <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a>
  42ea24:	mov    rdi,r12
  42ea27:	add    rsp,0x8
  42ea2b:	pop    rbx
  42ea2c:	pop    r12
  42ea2e:	pop    r13
  42ea30:	pop    r14
  42ea32:	pop    r15
  42ea34:	pop    rbp
  42ea35:	jmp    42c1b0 <flatcc_json_printer_int64_vector_field@@Base>
  42ea3a:	lea    eax,[rdx+rdx*1]
  42ea3d:	add    eax,0x4
  42ea40:	cmp    eax,DWORD PTR [rsi+0x10]
  42ea43:	jge    42ed55 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42ea49:	mov    rdx,QWORD PTR [rsi+0x8]
  42ea4d:	mov    eax,eax
  42ea4f:	movzx  r13d,WORD PTR [rdx+rax*1]
  42ea54:	test   r13,r13
  42ea57:	je     42ed55 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42ea5d:	add    r13,QWORD PTR [rsi]
  42ea60:	je     42ed55 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  42ea66:	mov    r14,r9
  42ea69:	mov    eax,DWORD PTR [rsi+0x18]
  42ea6c:	lea    edx,[rax+0x1]
  42ea6f:	mov    DWORD PTR [rsi+0x18],edx
  42ea72:	test   eax,eax
  42ea74:	je     42ea87 <flatcc_json_printer_int64_enum_vector_field@@Base+0x77>
  42ea76:	mov    rax,QWORD PTR [r12+0x28]
  42ea7b:	lea    rdx,[rax+0x1]
  42ea7f:	mov    QWORD PTR [r12+0x28],rdx
  42ea84:	mov    BYTE PTR [rax],0x2c
  42ea87:	mov    ebx,DWORD PTR [r13+0x0]
  42ea8b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42ea90:	movsxd rdx,r8d
  42ea93:	mov    rdi,r12
  42ea96:	mov    rsi,rcx
  42ea99:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42ea9e:	inc    DWORD PTR [r12+0x38]
  42eaa3:	mov    rax,QWORD PTR [r12+0x28]
  42eaa8:	lea    rcx,[rax+0x1]
  42eaac:	mov    QWORD PTR [r12+0x28],rcx
  42eab1:	mov    BYTE PTR [rax],0x5b
  42eab4:	test   ebp,ebp
  42eab6:	je     42ec8a <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  42eabc:	add    r13,rbx
  42eabf:	cmp    BYTE PTR [r12+0x31],0x0
  42eac5:	mov    rax,QWORD PTR [r12+0x28]
  42eaca:	je     42eb65 <flatcc_json_printer_int64_enum_vector_field@@Base+0x155>
  42ead0:	lea    rcx,[rax+0x1]
  42ead4:	mov    QWORD PTR [r12+0x28],rcx
  42ead9:	mov    BYTE PTR [rax],0xa
  42eadc:	movsxd rax,DWORD PTR [r12+0x38]
  42eae1:	movzx  r15d,BYTE PTR [r12+0x31]
  42eae7:	imul   r15,rax
  42eaeb:	mov    rbx,QWORD PTR [r12+0x20]
  42eaf0:	mov    rdi,QWORD PTR [r12+0x28]
  42eaf5:	lea    rax,[rdi+r15*1]
  42eaf9:	cmp    rax,rbx
  42eafc:	jbe    42eb51 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  42eafe:	cmp    rdi,rbx
  42eb01:	jb     42eb17 <flatcc_json_printer_int64_enum_vector_field@@Base+0x107>
  42eb03:	mov    rdi,r12
  42eb06:	xor    esi,esi
  42eb08:	call   QWORD PTR [r12+0x48]
  42eb0d:	mov    rbx,QWORD PTR [r12+0x20]
  42eb12:	mov    rdi,QWORD PTR [r12+0x28]
  42eb17:	sub    rbx,rdi
  42eb1a:	cmp    rbx,r15
  42eb1d:	jae    42eb51 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  42eb1f:	nop
  42eb20:	mov    esi,0x20
  42eb25:	mov    rdx,rbx
  42eb28:	call   406080 <memset@plt>
  42eb2d:	add    QWORD PTR [r12+0x28],rbx
  42eb32:	sub    r15,rbx
  42eb35:	mov    rdi,r12
  42eb38:	xor    esi,esi
  42eb3a:	call   QWORD PTR [r12+0x48]
  42eb3f:	mov    rbx,QWORD PTR [r12+0x20]
  42eb44:	mov    rdi,QWORD PTR [r12+0x28]
  42eb49:	sub    rbx,rdi
  42eb4c:	cmp    r15,rbx
  42eb4f:	ja     42eb20 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
  42eb51:	mov    esi,0x20
  42eb56:	mov    rdx,r15
  42eb59:	call   406080 <memset@plt>
  42eb5e:	add    QWORD PTR [r12+0x28],r15
  42eb63:	jmp    42eb76 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  42eb65:	cmp    rax,QWORD PTR [r12+0x20]
  42eb6a:	jb     42eb76 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  42eb6c:	mov    rdi,r12
  42eb6f:	xor    esi,esi
  42eb71:	call   QWORD PTR [r12+0x48]
  42eb76:	mov    rsi,QWORD PTR [r13+0x4]
  42eb7a:	mov    rdi,r12
  42eb7d:	call   r14
  42eb80:	dec    ebp
  42eb82:	je     42ec8a <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  42eb88:	add    r13,0xc
  42eb8c:	jmp    42ebb8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a8>
  42eb8e:	xchg   ax,ax
  42eb90:	mov    esi,0x20
  42eb95:	mov    rdx,r15
  42eb98:	call   406080 <memset@plt>
  42eb9d:	add    QWORD PTR [r12+0x28],r15
  42eba2:	mov    rsi,QWORD PTR [r13+0x0]
  42eba6:	mov    rdi,r12
  42eba9:	call   r14
  42ebac:	add    r13,0x8
  42ebb0:	test   ebp,ebp
  42ebb2:	je     42ec8a <flatcc_json_printer_int64_enum_vector_field@@Base+0x27a>
  42ebb8:	dec    ebp
  42ebba:	mov    rax,QWORD PTR [r12+0x28]
  42ebbf:	lea    rcx,[rax+0x1]
  42ebc3:	mov    QWORD PTR [r12+0x28],rcx
  42ebc8:	mov    BYTE PTR [rax],0x2c
  42ebcb:	cmp    BYTE PTR [r12+0x31],0x0
  42ebd1:	mov    rax,QWORD PTR [r12+0x28]
  42ebd6:	je     42ec70 <flatcc_json_printer_int64_enum_vector_field@@Base+0x260>
  42ebdc:	lea    rcx,[rax+0x1]
  42ebe0:	mov    QWORD PTR [r12+0x28],rcx
  42ebe5:	mov    BYTE PTR [rax],0xa
  42ebe8:	movsxd rax,DWORD PTR [r12+0x38]
  42ebed:	movzx  r15d,BYTE PTR [r12+0x31]
  42ebf3:	imul   r15,rax
  42ebf7:	mov    rbx,QWORD PTR [r12+0x20]
  42ebfc:	mov    rdi,QWORD PTR [r12+0x28]
  42ec01:	lea    rax,[rdi+r15*1]
  42ec05:	cmp    rax,rbx
  42ec08:	jbe    42eb90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  42ec0a:	cmp    rdi,rbx
  42ec0d:	jb     42ec23 <flatcc_json_printer_int64_enum_vector_field@@Base+0x213>
  42ec0f:	mov    rdi,r12
  42ec12:	xor    esi,esi
  42ec14:	call   QWORD PTR [r12+0x48]
  42ec19:	mov    rbx,QWORD PTR [r12+0x20]
  42ec1e:	mov    rdi,QWORD PTR [r12+0x28]
  42ec23:	sub    rbx,rdi
  42ec26:	cmp    rbx,r15
  42ec29:	jae    42eb90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  42ec2f:	nop
  42ec30:	mov    esi,0x20
  42ec35:	mov    rdx,rbx
  42ec38:	call   406080 <memset@plt>
  42ec3d:	add    QWORD PTR [r12+0x28],rbx
  42ec42:	sub    r15,rbx
  42ec45:	mov    rdi,r12
  42ec48:	xor    esi,esi
  42ec4a:	call   QWORD PTR [r12+0x48]
  42ec4f:	mov    rbx,QWORD PTR [r12+0x20]
  42ec54:	mov    rdi,QWORD PTR [r12+0x28]
  42ec59:	sub    rbx,rdi
  42ec5c:	cmp    r15,rbx
  42ec5f:	ja     42ec30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
  42ec61:	jmp    42eb90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  42ec66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec70:	cmp    rax,QWORD PTR [r12+0x20]
  42ec75:	jb     42eba2 <flatcc_json_printer_int64_enum_vector_field@@Base+0x192>
  42ec7b:	mov    rdi,r12
  42ec7e:	xor    esi,esi
  42ec80:	call   QWORD PTR [r12+0x48]
  42ec85:	jmp    42eba2 <flatcc_json_printer_int64_enum_vector_field@@Base+0x192>
  42ec8a:	cmp    BYTE PTR [r12+0x31],0x0
  42ec90:	mov    r14,QWORD PTR [r12+0x28]
  42ec95:	je     42ed48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x338>
  42ec9b:	lea    rax,[r14+0x1]
  42ec9f:	mov    QWORD PTR [r12+0x28],rax
  42eca4:	mov    BYTE PTR [r14],0xa
  42eca8:	movsxd rax,DWORD PTR [r12+0x38]
  42ecad:	dec    rax
  42ecb0:	mov    DWORD PTR [r12+0x38],eax
  42ecb5:	movzx  r14d,BYTE PTR [r12+0x31]
  42ecbb:	imul   r14,rax
  42ecbf:	mov    rbx,QWORD PTR [r12+0x20]
  42ecc4:	mov    rdi,QWORD PTR [r12+0x28]
  42ecc9:	lea    rax,[rdi+r14*1]
  42eccd:	cmp    rax,rbx
  42ecd0:	jbe    42ed31 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  42ecd2:	cmp    rdi,rbx
  42ecd5:	jb     42eceb <flatcc_json_printer_int64_enum_vector_field@@Base+0x2db>
  42ecd7:	mov    rdi,r12
  42ecda:	xor    esi,esi
  42ecdc:	call   QWORD PTR [r12+0x48]
  42ece1:	mov    rbx,QWORD PTR [r12+0x20]
  42ece6:	mov    rdi,QWORD PTR [r12+0x28]
  42eceb:	sub    rbx,rdi
  42ecee:	cmp    rbx,r14
  42ecf1:	jae    42ed31 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  42ecf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ecfd:	nop    DWORD PTR [rax]
  42ed00:	mov    esi,0x20
  42ed05:	mov    rdx,rbx
  42ed08:	call   406080 <memset@plt>
  42ed0d:	add    QWORD PTR [r12+0x28],rbx
  42ed12:	sub    r14,rbx
  42ed15:	mov    rdi,r12
  42ed18:	xor    esi,esi
  42ed1a:	call   QWORD PTR [r12+0x48]
  42ed1f:	mov    rbx,QWORD PTR [r12+0x20]
  42ed24:	mov    rdi,QWORD PTR [r12+0x28]
  42ed29:	sub    rbx,rdi
  42ed2c:	cmp    r14,rbx
  42ed2f:	ja     42ed00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2f0>
  42ed31:	mov    esi,0x20
  42ed36:	mov    rdx,r14
  42ed39:	call   406080 <memset@plt>
  42ed3e:	add    r14,QWORD PTR [r12+0x28]
  42ed43:	mov    QWORD PTR [r12+0x28],r14
  42ed48:	lea    rax,[r14+0x1]
  42ed4c:	mov    QWORD PTR [r12+0x28],rax
  42ed51:	mov    BYTE PTR [r14],0x5d
  42ed55:	add    rsp,0x8
  42ed59:	pop    rbx
  42ed5a:	pop    r12
  42ed5c:	pop    r13
  42ed5e:	pop    r14
  42ed60:	pop    r15
  42ed62:	pop    rbp
  42ed63:	ret    
  42ed64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ed6e:	xchg   ax,ax

000000000042ed70 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  42ed70:	push   rbp
  42ed71:	push   r15
  42ed73:	push   r14
  42ed75:	push   r13
  42ed77:	push   r12
  42ed79:	push   rbx
  42ed7a:	push   rax
  42ed7b:	mov    r12,rdi
  42ed7e:	cmp    BYTE PTR [rdi+0x33],0x0
  42ed82:	je     42ed9a <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a>
  42ed84:	mov    rdi,r12
  42ed87:	add    rsp,0x8
  42ed8b:	pop    rbx
  42ed8c:	pop    r12
  42ed8e:	pop    r13
  42ed90:	pop    r14
  42ed92:	pop    r15
  42ed94:	pop    rbp
  42ed95:	jmp    42c520 <flatcc_json_printer_bool_vector_field@@Base>
  42ed9a:	lea    eax,[rdx+rdx*1]
  42ed9d:	add    eax,0x4
  42eda0:	cmp    eax,DWORD PTR [rsi+0x10]
  42eda3:	jge    42f0b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  42eda9:	mov    rdx,QWORD PTR [rsi+0x8]
  42edad:	mov    eax,eax
  42edaf:	movzx  r13d,WORD PTR [rdx+rax*1]
  42edb4:	test   r13,r13
  42edb7:	je     42f0b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  42edbd:	add    r13,QWORD PTR [rsi]
  42edc0:	je     42f0b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x345>
  42edc6:	mov    r14,r9
  42edc9:	mov    eax,DWORD PTR [rsi+0x18]
  42edcc:	lea    edx,[rax+0x1]
  42edcf:	mov    DWORD PTR [rsi+0x18],edx
  42edd2:	test   eax,eax
  42edd4:	je     42ede7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x77>
  42edd6:	mov    rax,QWORD PTR [r12+0x28]
  42eddb:	lea    rdx,[rax+0x1]
  42eddf:	mov    QWORD PTR [r12+0x28],rdx
  42ede4:	mov    BYTE PTR [rax],0x2c
  42ede7:	mov    ebx,DWORD PTR [r13+0x0]
  42edeb:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  42edf0:	movsxd rdx,r8d
  42edf3:	mov    rdi,r12
  42edf6:	mov    rsi,rcx
  42edf9:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42edfe:	inc    DWORD PTR [r12+0x38]
  42ee03:	mov    rax,QWORD PTR [r12+0x28]
  42ee08:	lea    rcx,[rax+0x1]
  42ee0c:	mov    QWORD PTR [r12+0x28],rcx
  42ee11:	mov    BYTE PTR [rax],0x5b
  42ee14:	test   ebp,ebp
  42ee16:	je     42efea <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  42ee1c:	add    r13,rbx
  42ee1f:	cmp    BYTE PTR [r12+0x31],0x0
  42ee25:	mov    rax,QWORD PTR [r12+0x28]
  42ee2a:	je     42eec5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x155>
  42ee30:	lea    rcx,[rax+0x1]
  42ee34:	mov    QWORD PTR [r12+0x28],rcx
  42ee39:	mov    BYTE PTR [rax],0xa
  42ee3c:	movsxd rax,DWORD PTR [r12+0x38]
  42ee41:	movzx  r15d,BYTE PTR [r12+0x31]
  42ee47:	imul   r15,rax
  42ee4b:	mov    rbx,QWORD PTR [r12+0x20]
  42ee50:	mov    rdi,QWORD PTR [r12+0x28]
  42ee55:	lea    rax,[rdi+r15*1]
  42ee59:	cmp    rax,rbx
  42ee5c:	jbe    42eeb1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  42ee5e:	cmp    rdi,rbx
  42ee61:	jb     42ee77 <flatcc_json_printer_bool_enum_vector_field@@Base+0x107>
  42ee63:	mov    rdi,r12
  42ee66:	xor    esi,esi
  42ee68:	call   QWORD PTR [r12+0x48]
  42ee6d:	mov    rbx,QWORD PTR [r12+0x20]
  42ee72:	mov    rdi,QWORD PTR [r12+0x28]
  42ee77:	sub    rbx,rdi
  42ee7a:	cmp    rbx,r15
  42ee7d:	jae    42eeb1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  42ee7f:	nop
  42ee80:	mov    esi,0x20
  42ee85:	mov    rdx,rbx
  42ee88:	call   406080 <memset@plt>
  42ee8d:	add    QWORD PTR [r12+0x28],rbx
  42ee92:	sub    r15,rbx
  42ee95:	mov    rdi,r12
  42ee98:	xor    esi,esi
  42ee9a:	call   QWORD PTR [r12+0x48]
  42ee9f:	mov    rbx,QWORD PTR [r12+0x20]
  42eea4:	mov    rdi,QWORD PTR [r12+0x28]
  42eea9:	sub    rbx,rdi
  42eeac:	cmp    r15,rbx
  42eeaf:	ja     42ee80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
  42eeb1:	mov    esi,0x20
  42eeb6:	mov    rdx,r15
  42eeb9:	call   406080 <memset@plt>
  42eebe:	add    QWORD PTR [r12+0x28],r15
  42eec3:	jmp    42eed6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  42eec5:	cmp    rax,QWORD PTR [r12+0x20]
  42eeca:	jb     42eed6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  42eecc:	mov    rdi,r12
  42eecf:	xor    esi,esi
  42eed1:	call   QWORD PTR [r12+0x48]
  42eed6:	movzx  esi,BYTE PTR [r13+0x4]
  42eedb:	mov    rdi,r12
  42eede:	call   r14
  42eee1:	dec    ebp
  42eee3:	je     42efea <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  42eee9:	add    r13,0x5
  42eeed:	jmp    42ef18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a8>
  42eeef:	nop
  42eef0:	mov    esi,0x20
  42eef5:	mov    rdx,r15
  42eef8:	call   406080 <memset@plt>
  42eefd:	add    QWORD PTR [r12+0x28],r15
  42ef02:	movzx  esi,BYTE PTR [r13+0x0]
  42ef07:	mov    rdi,r12
  42ef0a:	call   r14
  42ef0d:	inc    r13
  42ef10:	test   ebp,ebp
  42ef12:	je     42efea <flatcc_json_printer_bool_enum_vector_field@@Base+0x27a>
  42ef18:	dec    ebp
  42ef1a:	mov    rax,QWORD PTR [r12+0x28]
  42ef1f:	lea    rcx,[rax+0x1]
  42ef23:	mov    QWORD PTR [r12+0x28],rcx
  42ef28:	mov    BYTE PTR [rax],0x2c
  42ef2b:	cmp    BYTE PTR [r12+0x31],0x0
  42ef31:	mov    rax,QWORD PTR [r12+0x28]
  42ef36:	je     42efd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x260>
  42ef3c:	lea    rcx,[rax+0x1]
  42ef40:	mov    QWORD PTR [r12+0x28],rcx
  42ef45:	mov    BYTE PTR [rax],0xa
  42ef48:	movsxd rax,DWORD PTR [r12+0x38]
  42ef4d:	movzx  r15d,BYTE PTR [r12+0x31]
  42ef53:	imul   r15,rax
  42ef57:	mov    rbx,QWORD PTR [r12+0x20]
  42ef5c:	mov    rdi,QWORD PTR [r12+0x28]
  42ef61:	lea    rax,[rdi+r15*1]
  42ef65:	cmp    rax,rbx
  42ef68:	jbe    42eef0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  42ef6a:	cmp    rdi,rbx
  42ef6d:	jb     42ef83 <flatcc_json_printer_bool_enum_vector_field@@Base+0x213>
  42ef6f:	mov    rdi,r12
  42ef72:	xor    esi,esi
  42ef74:	call   QWORD PTR [r12+0x48]
  42ef79:	mov    rbx,QWORD PTR [r12+0x20]
  42ef7e:	mov    rdi,QWORD PTR [r12+0x28]
  42ef83:	sub    rbx,rdi
  42ef86:	cmp    rbx,r15
  42ef89:	jae    42eef0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  42ef8f:	nop
  42ef90:	mov    esi,0x20
  42ef95:	mov    rdx,rbx
  42ef98:	call   406080 <memset@plt>
  42ef9d:	add    QWORD PTR [r12+0x28],rbx
  42efa2:	sub    r15,rbx
  42efa5:	mov    rdi,r12
  42efa8:	xor    esi,esi
  42efaa:	call   QWORD PTR [r12+0x48]
  42efaf:	mov    rbx,QWORD PTR [r12+0x20]
  42efb4:	mov    rdi,QWORD PTR [r12+0x28]
  42efb9:	sub    rbx,rdi
  42efbc:	cmp    r15,rbx
  42efbf:	ja     42ef90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
  42efc1:	jmp    42eef0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  42efc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42efd0:	cmp    rax,QWORD PTR [r12+0x20]
  42efd5:	jb     42ef02 <flatcc_json_printer_bool_enum_vector_field@@Base+0x192>
  42efdb:	mov    rdi,r12
  42efde:	xor    esi,esi
  42efe0:	call   QWORD PTR [r12+0x48]
  42efe5:	jmp    42ef02 <flatcc_json_printer_bool_enum_vector_field@@Base+0x192>
  42efea:	cmp    BYTE PTR [r12+0x31],0x0
  42eff0:	mov    r14,QWORD PTR [r12+0x28]
  42eff5:	je     42f0a8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x338>
  42effb:	lea    rax,[r14+0x1]
  42efff:	mov    QWORD PTR [r12+0x28],rax
  42f004:	mov    BYTE PTR [r14],0xa
  42f008:	movsxd rax,DWORD PTR [r12+0x38]
  42f00d:	dec    rax
  42f010:	mov    DWORD PTR [r12+0x38],eax
  42f015:	movzx  r14d,BYTE PTR [r12+0x31]
  42f01b:	imul   r14,rax
  42f01f:	mov    rbx,QWORD PTR [r12+0x20]
  42f024:	mov    rdi,QWORD PTR [r12+0x28]
  42f029:	lea    rax,[rdi+r14*1]
  42f02d:	cmp    rax,rbx
  42f030:	jbe    42f091 <flatcc_json_printer_bool_enum_vector_field@@Base+0x321>
  42f032:	cmp    rdi,rbx
  42f035:	jb     42f04b <flatcc_json_printer_bool_enum_vector_field@@Base+0x2db>
  42f037:	mov    rdi,r12
  42f03a:	xor    esi,esi
  42f03c:	call   QWORD PTR [r12+0x48]
  42f041:	mov    rbx,QWORD PTR [r12+0x20]
  42f046:	mov    rdi,QWORD PTR [r12+0x28]
  42f04b:	sub    rbx,rdi
  42f04e:	cmp    rbx,r14
  42f051:	jae    42f091 <flatcc_json_printer_bool_enum_vector_field@@Base+0x321>
  42f053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f05d:	nop    DWORD PTR [rax]
  42f060:	mov    esi,0x20
  42f065:	mov    rdx,rbx
  42f068:	call   406080 <memset@plt>
  42f06d:	add    QWORD PTR [r12+0x28],rbx
  42f072:	sub    r14,rbx
  42f075:	mov    rdi,r12
  42f078:	xor    esi,esi
  42f07a:	call   QWORD PTR [r12+0x48]
  42f07f:	mov    rbx,QWORD PTR [r12+0x20]
  42f084:	mov    rdi,QWORD PTR [r12+0x28]
  42f089:	sub    rbx,rdi
  42f08c:	cmp    r14,rbx
  42f08f:	ja     42f060 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2f0>
  42f091:	mov    esi,0x20
  42f096:	mov    rdx,r14
  42f099:	call   406080 <memset@plt>
  42f09e:	add    r14,QWORD PTR [r12+0x28]
  42f0a3:	mov    QWORD PTR [r12+0x28],r14
  42f0a8:	lea    rax,[r14+0x1]
  42f0ac:	mov    QWORD PTR [r12+0x28],rax
  42f0b1:	mov    BYTE PTR [r14],0x5d
  42f0b5:	add    rsp,0x8
  42f0b9:	pop    rbx
  42f0ba:	pop    r12
  42f0bc:	pop    r13
  42f0be:	pop    r14
  42f0c0:	pop    r15
  42f0c2:	pop    rbp
  42f0c3:	ret    
  42f0c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f0ce:	xchg   ax,ax

000000000042f0d0 <flatcc_json_printer_struct_vector_field@@Base>:
  42f0d0:	push   rbp
  42f0d1:	push   r15
  42f0d3:	push   r14
  42f0d5:	push   r13
  42f0d7:	push   r12
  42f0d9:	push   rbx
  42f0da:	push   rax
  42f0db:	lea    eax,[rdx+rdx*1]
  42f0de:	add    eax,0x4
  42f0e1:	cmp    eax,DWORD PTR [rsi+0x10]
  42f0e4:	jge    42f57e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  42f0ea:	mov    rdx,QWORD PTR [rsi+0x8]
  42f0ee:	mov    eax,eax
  42f0f0:	movzx  ebx,WORD PTR [rdx+rax*1]
  42f0f4:	test   rbx,rbx
  42f0f7:	je     42f57e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  42f0fd:	add    rbx,QWORD PTR [rsi]
  42f100:	je     42f57e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  42f106:	mov    r14,r9
  42f109:	mov    r13,rdi
  42f10c:	mov    eax,DWORD PTR [rsi+0x18]
  42f10f:	lea    edx,[rax+0x1]
  42f112:	mov    DWORD PTR [rsi+0x18],edx
  42f115:	test   eax,eax
  42f117:	je     42f128 <flatcc_json_printer_struct_vector_field@@Base+0x58>
  42f119:	mov    rax,QWORD PTR [r13+0x28]
  42f11d:	lea    rdx,[rax+0x1]
  42f121:	mov    QWORD PTR [r13+0x28],rdx
  42f125:	mov    BYTE PTR [rax],0x2c
  42f128:	mov    r15d,DWORD PTR [rbx]
  42f12b:	mov    ebp,DWORD PTR [rbx+r15*1]
  42f12f:	movsxd rdx,r8d
  42f132:	mov    rdi,r13
  42f135:	mov    rsi,rcx
  42f138:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42f13d:	inc    DWORD PTR [r13+0x38]
  42f141:	mov    rax,QWORD PTR [r13+0x28]
  42f145:	lea    rcx,[rax+0x1]
  42f149:	mov    QWORD PTR [r13+0x28],rcx
  42f14d:	mov    BYTE PTR [rax],0x5b
  42f150:	test   ebp,ebp
  42f152:	je     42f4d2 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  42f158:	add    r15,rbx
  42f15b:	add    r15,0x4
  42f15f:	cmp    BYTE PTR [r13+0x31],0x0
  42f164:	mov    r12,QWORD PTR [r13+0x28]
  42f168:	je     42f204 <flatcc_json_printer_struct_vector_field@@Base+0x134>
  42f16e:	lea    rax,[r12+0x1]
  42f173:	mov    QWORD PTR [r13+0x28],rax
  42f177:	mov    BYTE PTR [r12],0xa
  42f17c:	movsxd rax,DWORD PTR [r13+0x38]
  42f180:	movzx  r12d,BYTE PTR [r13+0x31]
  42f185:	imul   r12,rax
  42f189:	mov    rbx,QWORD PTR [r13+0x20]
  42f18d:	mov    rdi,QWORD PTR [r13+0x28]
  42f191:	lea    rax,[rdi+r12*1]
  42f195:	cmp    rax,rbx
  42f198:	jbe    42f1ed <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  42f19a:	cmp    rdi,rbx
  42f19d:	jb     42f1b0 <flatcc_json_printer_struct_vector_field@@Base+0xe0>
  42f19f:	mov    rdi,r13
  42f1a2:	xor    esi,esi
  42f1a4:	call   QWORD PTR [r13+0x48]
  42f1a8:	mov    rbx,QWORD PTR [r13+0x20]
  42f1ac:	mov    rdi,QWORD PTR [r13+0x28]
  42f1b0:	sub    rbx,rdi
  42f1b3:	cmp    rbx,r12
  42f1b6:	jae    42f1ed <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  42f1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f1c0:	mov    esi,0x20
  42f1c5:	mov    rdx,rbx
  42f1c8:	call   406080 <memset@plt>
  42f1cd:	add    QWORD PTR [r13+0x28],rbx
  42f1d1:	sub    r12,rbx
  42f1d4:	mov    rdi,r13
  42f1d7:	xor    esi,esi
  42f1d9:	call   QWORD PTR [r13+0x48]
  42f1dd:	mov    rbx,QWORD PTR [r13+0x20]
  42f1e1:	mov    rdi,QWORD PTR [r13+0x28]
  42f1e5:	sub    rbx,rdi
  42f1e8:	cmp    r12,rbx
  42f1eb:	ja     42f1c0 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
  42f1ed:	mov    esi,0x20
  42f1f2:	mov    rdx,r12
  42f1f5:	call   406080 <memset@plt>
  42f1fa:	add    r12,QWORD PTR [r13+0x28]
  42f1fe:	mov    QWORD PTR [r13+0x28],r12
  42f202:	jmp    42f217 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  42f204:	cmp    r12,QWORD PTR [r13+0x20]
  42f208:	jb     42f217 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  42f20a:	mov    rdi,r13
  42f20d:	xor    esi,esi
  42f20f:	call   QWORD PTR [r13+0x48]
  42f213:	mov    r12,QWORD PTR [r13+0x28]
  42f217:	inc    DWORD PTR [r13+0x38]
  42f21b:	lea    rax,[r12+0x1]
  42f220:	mov    QWORD PTR [r13+0x28],rax
  42f224:	mov    BYTE PTR [r12],0x7b
  42f229:	mov    rdi,r13
  42f22c:	mov    rsi,r15
  42f22f:	call   QWORD PTR [rsp+0x40]
  42f233:	cmp    BYTE PTR [r13+0x31],0x0
  42f238:	mov    r12,QWORD PTR [r13+0x28]
  42f23c:	je     42f2e2 <flatcc_json_printer_struct_vector_field@@Base+0x212>
  42f242:	lea    rax,[r12+0x1]
  42f247:	mov    QWORD PTR [r13+0x28],rax
  42f24b:	mov    BYTE PTR [r12],0xa
  42f250:	movsxd rax,DWORD PTR [r13+0x38]
  42f254:	dec    rax
  42f257:	mov    DWORD PTR [r13+0x38],eax
  42f25b:	movzx  r12d,BYTE PTR [r13+0x31]
  42f260:	imul   r12,rax
  42f264:	mov    rbx,QWORD PTR [r13+0x20]
  42f268:	mov    rdi,QWORD PTR [r13+0x28]
  42f26c:	lea    rax,[rdi+r12*1]
  42f270:	cmp    rax,rbx
  42f273:	jbe    42f2cd <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  42f275:	cmp    rdi,rbx
  42f278:	jb     42f28b <flatcc_json_printer_struct_vector_field@@Base+0x1bb>
  42f27a:	mov    rdi,r13
  42f27d:	xor    esi,esi
  42f27f:	call   QWORD PTR [r13+0x48]
  42f283:	mov    rbx,QWORD PTR [r13+0x20]
  42f287:	mov    rdi,QWORD PTR [r13+0x28]
  42f28b:	sub    rbx,rdi
  42f28e:	cmp    rbx,r12
  42f291:	jae    42f2cd <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  42f293:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f29d:	nop    DWORD PTR [rax]
  42f2a0:	mov    esi,0x20
  42f2a5:	mov    rdx,rbx
  42f2a8:	call   406080 <memset@plt>
  42f2ad:	add    QWORD PTR [r13+0x28],rbx
  42f2b1:	sub    r12,rbx
  42f2b4:	mov    rdi,r13
  42f2b7:	xor    esi,esi
  42f2b9:	call   QWORD PTR [r13+0x48]
  42f2bd:	mov    rbx,QWORD PTR [r13+0x20]
  42f2c1:	mov    rdi,QWORD PTR [r13+0x28]
  42f2c5:	sub    rbx,rdi
  42f2c8:	cmp    r12,rbx
  42f2cb:	ja     42f2a0 <flatcc_json_printer_struct_vector_field@@Base+0x1d0>
  42f2cd:	mov    esi,0x20
  42f2d2:	mov    rdx,r12
  42f2d5:	call   406080 <memset@plt>
  42f2da:	add    r12,QWORD PTR [r13+0x28]
  42f2de:	mov    QWORD PTR [r13+0x28],r12
  42f2e2:	lea    rax,[r12+0x1]
  42f2e7:	mov    QWORD PTR [r13+0x28],rax
  42f2eb:	mov    BYTE PTR [r12],0x7d
  42f2f0:	dec    ebp
  42f2f2:	jne    42f32b <flatcc_json_printer_struct_vector_field@@Base+0x25b>
  42f2f4:	jmp    42f4d2 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  42f2f9:	nop    DWORD PTR [rax+0x0]
  42f300:	mov    esi,0x20
  42f305:	mov    rdx,r12
  42f308:	call   406080 <memset@plt>
  42f30d:	add    r12,QWORD PTR [r13+0x28]
  42f311:	mov    QWORD PTR [r13+0x28],r12
  42f315:	lea    rax,[r12+0x1]
  42f31a:	mov    QWORD PTR [r13+0x28],rax
  42f31e:	mov    BYTE PTR [r12],0x7d
  42f323:	test   ebp,ebp
  42f325:	je     42f4d2 <flatcc_json_printer_struct_vector_field@@Base+0x402>
  42f32b:	add    r15,r14
  42f32e:	mov    rax,QWORD PTR [r13+0x28]
  42f332:	lea    rcx,[rax+0x1]
  42f336:	mov    QWORD PTR [r13+0x28],rcx
  42f33a:	mov    BYTE PTR [rax],0x2c
  42f33d:	cmp    BYTE PTR [r13+0x31],0x0
  42f342:	mov    r12,QWORD PTR [r13+0x28]
  42f346:	je     42f3f0 <flatcc_json_printer_struct_vector_field@@Base+0x320>
  42f34c:	lea    rax,[r12+0x1]
  42f351:	mov    QWORD PTR [r13+0x28],rax
  42f355:	mov    BYTE PTR [r12],0xa
  42f35a:	movsxd rax,DWORD PTR [r13+0x38]
  42f35e:	movzx  r12d,BYTE PTR [r13+0x31]
  42f363:	imul   r12,rax
  42f367:	mov    rbx,QWORD PTR [r13+0x20]
  42f36b:	mov    rdi,QWORD PTR [r13+0x28]
  42f36f:	lea    rax,[rdi+r12*1]
  42f373:	cmp    rax,rbx
  42f376:	jbe    42f3cd <flatcc_json_printer_struct_vector_field@@Base+0x2fd>
  42f378:	cmp    rdi,rbx
  42f37b:	jb     42f38e <flatcc_json_printer_struct_vector_field@@Base+0x2be>
  42f37d:	mov    rdi,r13
  42f380:	xor    esi,esi
  42f382:	call   QWORD PTR [r13+0x48]
  42f386:	mov    rbx,QWORD PTR [r13+0x20]
  42f38a:	mov    rdi,QWORD PTR [r13+0x28]
  42f38e:	sub    rbx,rdi
  42f391:	cmp    rbx,r12
  42f394:	jae    42f3cd <flatcc_json_printer_struct_vector_field@@Base+0x2fd>
  42f396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f3a0:	mov    esi,0x20
  42f3a5:	mov    rdx,rbx
  42f3a8:	call   406080 <memset@plt>
  42f3ad:	add    QWORD PTR [r13+0x28],rbx
  42f3b1:	sub    r12,rbx
  42f3b4:	mov    rdi,r13
  42f3b7:	xor    esi,esi
  42f3b9:	call   QWORD PTR [r13+0x48]
  42f3bd:	mov    rbx,QWORD PTR [r13+0x20]
  42f3c1:	mov    rdi,QWORD PTR [r13+0x28]
  42f3c5:	sub    rbx,rdi
  42f3c8:	cmp    r12,rbx
  42f3cb:	ja     42f3a0 <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
  42f3cd:	mov    esi,0x20
  42f3d2:	mov    rdx,r12
  42f3d5:	call   406080 <memset@plt>
  42f3da:	add    r12,QWORD PTR [r13+0x28]
  42f3de:	mov    QWORD PTR [r13+0x28],r12
  42f3e2:	jmp    42f410 <flatcc_json_printer_struct_vector_field@@Base+0x340>
  42f3e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f3ee:	xchg   ax,ax
  42f3f0:	cmp    r12,QWORD PTR [r13+0x20]
  42f3f4:	jb     42f410 <flatcc_json_printer_struct_vector_field@@Base+0x340>
  42f3f6:	mov    rdi,r13
  42f3f9:	xor    esi,esi
  42f3fb:	call   QWORD PTR [r13+0x48]
  42f3ff:	mov    r12,QWORD PTR [r13+0x28]
  42f403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f40d:	nop    DWORD PTR [rax]
  42f410:	dec    ebp
  42f412:	inc    DWORD PTR [r13+0x38]
  42f416:	lea    rax,[r12+0x1]
  42f41b:	mov    QWORD PTR [r13+0x28],rax
  42f41f:	mov    BYTE PTR [r12],0x7b
  42f424:	mov    rdi,r13
  42f427:	mov    rsi,r15
  42f42a:	call   QWORD PTR [rsp+0x40]
  42f42e:	cmp    BYTE PTR [r13+0x31],0x0
  42f433:	mov    r12,QWORD PTR [r13+0x28]
  42f437:	je     42f315 <flatcc_json_printer_struct_vector_field@@Base+0x245>
  42f43d:	lea    rax,[r12+0x1]
  42f442:	mov    QWORD PTR [r13+0x28],rax
  42f446:	mov    BYTE PTR [r12],0xa
  42f44b:	movsxd rax,DWORD PTR [r13+0x38]
  42f44f:	dec    rax
  42f452:	mov    DWORD PTR [r13+0x38],eax
  42f456:	movzx  r12d,BYTE PTR [r13+0x31]
  42f45b:	imul   r12,rax
  42f45f:	mov    rbx,QWORD PTR [r13+0x20]
  42f463:	mov    rdi,QWORD PTR [r13+0x28]
  42f467:	lea    rax,[rdi+r12*1]
  42f46b:	cmp    rax,rbx
  42f46e:	jbe    42f300 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  42f474:	cmp    rdi,rbx
  42f477:	jb     42f48a <flatcc_json_printer_struct_vector_field@@Base+0x3ba>
  42f479:	mov    rdi,r13
  42f47c:	xor    esi,esi
  42f47e:	call   QWORD PTR [r13+0x48]
  42f482:	mov    rbx,QWORD PTR [r13+0x20]
  42f486:	mov    rdi,QWORD PTR [r13+0x28]
  42f48a:	sub    rbx,rdi
  42f48d:	cmp    rbx,r12
  42f490:	jae    42f300 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  42f496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f4a0:	mov    esi,0x20
  42f4a5:	mov    rdx,rbx
  42f4a8:	call   406080 <memset@plt>
  42f4ad:	add    QWORD PTR [r13+0x28],rbx
  42f4b1:	sub    r12,rbx
  42f4b4:	mov    rdi,r13
  42f4b7:	xor    esi,esi
  42f4b9:	call   QWORD PTR [r13+0x48]
  42f4bd:	mov    rbx,QWORD PTR [r13+0x20]
  42f4c1:	mov    rdi,QWORD PTR [r13+0x28]
  42f4c5:	sub    rbx,rdi
  42f4c8:	cmp    r12,rbx
  42f4cb:	ja     42f4a0 <flatcc_json_printer_struct_vector_field@@Base+0x3d0>
  42f4cd:	jmp    42f300 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  42f4d2:	cmp    BYTE PTR [r13+0x31],0x0
  42f4d7:	mov    r14,QWORD PTR [r13+0x28]
  42f4db:	je     42f572 <flatcc_json_printer_struct_vector_field@@Base+0x4a2>
  42f4e1:	lea    rax,[r14+0x1]
  42f4e5:	mov    QWORD PTR [r13+0x28],rax
  42f4e9:	mov    BYTE PTR [r14],0xa
  42f4ed:	movsxd rax,DWORD PTR [r13+0x38]
  42f4f1:	dec    rax
  42f4f4:	mov    DWORD PTR [r13+0x38],eax
  42f4f8:	movzx  r14d,BYTE PTR [r13+0x31]
  42f4fd:	imul   r14,rax
  42f501:	mov    rbx,QWORD PTR [r13+0x20]
  42f505:	mov    rdi,QWORD PTR [r13+0x28]
  42f509:	lea    rax,[rdi+r14*1]
  42f50d:	cmp    rax,rbx
  42f510:	jbe    42f55d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  42f512:	cmp    rdi,rbx
  42f515:	jb     42f528 <flatcc_json_printer_struct_vector_field@@Base+0x458>
  42f517:	mov    rdi,r13
  42f51a:	xor    esi,esi
  42f51c:	call   QWORD PTR [r13+0x48]
  42f520:	mov    rbx,QWORD PTR [r13+0x20]
  42f524:	mov    rdi,QWORD PTR [r13+0x28]
  42f528:	sub    rbx,rdi
  42f52b:	cmp    rbx,r14
  42f52e:	jae    42f55d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  42f530:	mov    esi,0x20
  42f535:	mov    rdx,rbx
  42f538:	call   406080 <memset@plt>
  42f53d:	add    QWORD PTR [r13+0x28],rbx
  42f541:	sub    r14,rbx
  42f544:	mov    rdi,r13
  42f547:	xor    esi,esi
  42f549:	call   QWORD PTR [r13+0x48]
  42f54d:	mov    rbx,QWORD PTR [r13+0x20]
  42f551:	mov    rdi,QWORD PTR [r13+0x28]
  42f555:	sub    rbx,rdi
  42f558:	cmp    r14,rbx
  42f55b:	ja     42f530 <flatcc_json_printer_struct_vector_field@@Base+0x460>
  42f55d:	mov    esi,0x20
  42f562:	mov    rdx,r14
  42f565:	call   406080 <memset@plt>
  42f56a:	add    r14,QWORD PTR [r13+0x28]
  42f56e:	mov    QWORD PTR [r13+0x28],r14
  42f572:	lea    rax,[r14+0x1]
  42f576:	mov    QWORD PTR [r13+0x28],rax
  42f57a:	mov    BYTE PTR [r14],0x5d
  42f57e:	add    rsp,0x8
  42f582:	pop    rbx
  42f583:	pop    r12
  42f585:	pop    r13
  42f587:	pop    r14
  42f589:	pop    r15
  42f58b:	pop    rbp
  42f58c:	ret    
  42f58d:	nop    DWORD PTR [rax]

000000000042f590 <flatcc_json_printer_string_vector_field@@Base>:
  42f590:	push   rbp
  42f591:	push   r15
  42f593:	push   r14
  42f595:	push   r12
  42f597:	push   rbx
  42f598:	lea    eax,[rdx+rdx*1]
  42f59b:	add    eax,0x4
  42f59e:	cmp    eax,DWORD PTR [rsi+0x10]
  42f5a1:	jge    42f89e <flatcc_json_printer_string_vector_field@@Base+0x30e>
  42f5a7:	mov    rdx,QWORD PTR [rsi+0x8]
  42f5ab:	mov    eax,eax
  42f5ad:	movzx  ebx,WORD PTR [rdx+rax*1]
  42f5b1:	test   rbx,rbx
  42f5b4:	je     42f89e <flatcc_json_printer_string_vector_field@@Base+0x30e>
  42f5ba:	add    rbx,QWORD PTR [rsi]
  42f5bd:	je     42f89e <flatcc_json_printer_string_vector_field@@Base+0x30e>
  42f5c3:	mov    r15,rdi
  42f5c6:	mov    eax,DWORD PTR [rsi+0x18]
  42f5c9:	lea    edx,[rax+0x1]
  42f5cc:	mov    DWORD PTR [rsi+0x18],edx
  42f5cf:	test   eax,eax
  42f5d1:	je     42f5e2 <flatcc_json_printer_string_vector_field@@Base+0x52>
  42f5d3:	mov    rax,QWORD PTR [r15+0x28]
  42f5d7:	lea    rdx,[rax+0x1]
  42f5db:	mov    QWORD PTR [r15+0x28],rdx
  42f5df:	mov    BYTE PTR [rax],0x2c
  42f5e2:	mov    ebp,DWORD PTR [rbx]
  42f5e4:	mov    r12d,DWORD PTR [rbx+rbp*1]
  42f5e8:	movsxd rdx,r8d
  42f5eb:	mov    rdi,r15
  42f5ee:	mov    rsi,rcx
  42f5f1:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42f5f6:	inc    DWORD PTR [r15+0x38]
  42f5fa:	mov    rax,QWORD PTR [r15+0x28]
  42f5fe:	lea    rcx,[rax+0x1]
  42f602:	mov    QWORD PTR [r15+0x28],rcx
  42f606:	mov    BYTE PTR [rax],0x5b
  42f609:	test   r12d,r12d
  42f60c:	je     42f7e8 <flatcc_json_printer_string_vector_field@@Base+0x258>
  42f612:	add    rbp,rbx
  42f615:	add    rbp,0x4
  42f619:	cmp    BYTE PTR [r15+0x31],0x0
  42f61e:	mov    rax,QWORD PTR [r15+0x28]
  42f622:	je     42f6b0 <flatcc_json_printer_string_vector_field@@Base+0x120>
  42f628:	lea    rcx,[rax+0x1]
  42f62c:	mov    QWORD PTR [r15+0x28],rcx
  42f630:	mov    BYTE PTR [rax],0xa
  42f633:	movsxd rax,DWORD PTR [r15+0x38]
  42f637:	movzx  r14d,BYTE PTR [r15+0x31]
  42f63c:	imul   r14,rax
  42f640:	mov    rbx,QWORD PTR [r15+0x20]
  42f644:	mov    rdi,QWORD PTR [r15+0x28]
  42f648:	lea    rax,[rdi+r14*1]
  42f64c:	cmp    rax,rbx
  42f64f:	jbe    42f69d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  42f651:	cmp    rdi,rbx
  42f654:	jb     42f667 <flatcc_json_printer_string_vector_field@@Base+0xd7>
  42f656:	mov    rdi,r15
  42f659:	xor    esi,esi
  42f65b:	call   QWORD PTR [r15+0x48]
  42f65f:	mov    rbx,QWORD PTR [r15+0x20]
  42f663:	mov    rdi,QWORD PTR [r15+0x28]
  42f667:	sub    rbx,rdi
  42f66a:	cmp    rbx,r14
  42f66d:	jae    42f69d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  42f66f:	nop
  42f670:	mov    esi,0x20
  42f675:	mov    rdx,rbx
  42f678:	call   406080 <memset@plt>
  42f67d:	add    QWORD PTR [r15+0x28],rbx
  42f681:	sub    r14,rbx
  42f684:	mov    rdi,r15
  42f687:	xor    esi,esi
  42f689:	call   QWORD PTR [r15+0x48]
  42f68d:	mov    rbx,QWORD PTR [r15+0x20]
  42f691:	mov    rdi,QWORD PTR [r15+0x28]
  42f695:	sub    rbx,rdi
  42f698:	cmp    r14,rbx
  42f69b:	ja     42f670 <flatcc_json_printer_string_vector_field@@Base+0xe0>
  42f69d:	mov    esi,0x20
  42f6a2:	mov    rdx,r14
  42f6a5:	call   406080 <memset@plt>
  42f6aa:	add    QWORD PTR [r15+0x28],r14
  42f6ae:	jmp    42f6bf <flatcc_json_printer_string_vector_field@@Base+0x12f>
  42f6b0:	cmp    rax,QWORD PTR [r15+0x20]
  42f6b4:	jb     42f6bf <flatcc_json_printer_string_vector_field@@Base+0x12f>
  42f6b6:	mov    rdi,r15
  42f6b9:	xor    esi,esi
  42f6bb:	call   QWORD PTR [r15+0x48]
  42f6bf:	mov    eax,DWORD PTR [rbp+0x0]
  42f6c2:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  42f6c6:	lea    rsi,[rax+rbp*1]
  42f6ca:	add    rsi,0x4
  42f6ce:	mov    rdi,r15
  42f6d1:	call   4269c0 <flatcc_json_printer_string@@Base+0x10>
  42f6d6:	dec    r12d
  42f6d9:	jne    42f711 <flatcc_json_printer_string_vector_field@@Base+0x181>
  42f6db:	jmp    42f7e8 <flatcc_json_printer_string_vector_field@@Base+0x258>
  42f6e0:	mov    esi,0x20
  42f6e5:	mov    rdx,r14
  42f6e8:	call   406080 <memset@plt>
  42f6ed:	add    QWORD PTR [r15+0x28],r14
  42f6f1:	mov    eax,DWORD PTR [rbp+0x0]
  42f6f4:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  42f6f8:	lea    rsi,[rax+rbp*1]
  42f6fc:	add    rsi,0x4
  42f700:	mov    rdi,r15
  42f703:	call   4269c0 <flatcc_json_printer_string@@Base+0x10>
  42f708:	test   r12d,r12d
  42f70b:	je     42f7e8 <flatcc_json_printer_string_vector_field@@Base+0x258>
  42f711:	dec    r12d
  42f714:	add    rbp,0x4
  42f718:	mov    rax,QWORD PTR [r15+0x28]
  42f71c:	lea    rcx,[rax+0x1]
  42f720:	mov    QWORD PTR [r15+0x28],rcx
  42f724:	mov    BYTE PTR [rax],0x2c
  42f727:	cmp    BYTE PTR [r15+0x31],0x0
  42f72c:	mov    rax,QWORD PTR [r15+0x28]
  42f730:	je     42f7d0 <flatcc_json_printer_string_vector_field@@Base+0x240>
  42f736:	lea    rcx,[rax+0x1]
  42f73a:	mov    QWORD PTR [r15+0x28],rcx
  42f73e:	mov    BYTE PTR [rax],0xa
  42f741:	movsxd rax,DWORD PTR [r15+0x38]
  42f745:	movzx  r14d,BYTE PTR [r15+0x31]
  42f74a:	imul   r14,rax
  42f74e:	mov    rbx,QWORD PTR [r15+0x20]
  42f752:	mov    rdi,QWORD PTR [r15+0x28]
  42f756:	lea    rax,[rdi+r14*1]
  42f75a:	cmp    rax,rbx
  42f75d:	jbe    42f6e0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  42f75f:	cmp    rdi,rbx
  42f762:	jb     42f775 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  42f764:	mov    rdi,r15
  42f767:	xor    esi,esi
  42f769:	call   QWORD PTR [r15+0x48]
  42f76d:	mov    rbx,QWORD PTR [r15+0x20]
  42f771:	mov    rdi,QWORD PTR [r15+0x28]
  42f775:	sub    rbx,rdi
  42f778:	cmp    rbx,r14
  42f77b:	jae    42f6e0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  42f781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f78b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f790:	mov    esi,0x20
  42f795:	mov    rdx,rbx
  42f798:	call   406080 <memset@plt>
  42f79d:	add    QWORD PTR [r15+0x28],rbx
  42f7a1:	sub    r14,rbx
  42f7a4:	mov    rdi,r15
  42f7a7:	xor    esi,esi
  42f7a9:	call   QWORD PTR [r15+0x48]
  42f7ad:	mov    rbx,QWORD PTR [r15+0x20]
  42f7b1:	mov    rdi,QWORD PTR [r15+0x28]
  42f7b5:	sub    rbx,rdi
  42f7b8:	cmp    r14,rbx
  42f7bb:	ja     42f790 <flatcc_json_printer_string_vector_field@@Base+0x200>
  42f7bd:	jmp    42f6e0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  42f7c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f7cc:	nop    DWORD PTR [rax+0x0]
  42f7d0:	cmp    rax,QWORD PTR [r15+0x20]
  42f7d4:	jb     42f6f1 <flatcc_json_printer_string_vector_field@@Base+0x161>
  42f7da:	mov    rdi,r15
  42f7dd:	xor    esi,esi
  42f7df:	call   QWORD PTR [r15+0x48]
  42f7e3:	jmp    42f6f1 <flatcc_json_printer_string_vector_field@@Base+0x161>
  42f7e8:	cmp    BYTE PTR [r15+0x31],0x0
  42f7ed:	mov    r14,QWORD PTR [r15+0x28]
  42f7f1:	je     42f892 <flatcc_json_printer_string_vector_field@@Base+0x302>
  42f7f7:	lea    rax,[r14+0x1]
  42f7fb:	mov    QWORD PTR [r15+0x28],rax
  42f7ff:	mov    BYTE PTR [r14],0xa
  42f803:	movsxd rax,DWORD PTR [r15+0x38]
  42f807:	dec    rax
  42f80a:	mov    DWORD PTR [r15+0x38],eax
  42f80e:	movzx  r14d,BYTE PTR [r15+0x31]
  42f813:	imul   r14,rax
  42f817:	mov    rbx,QWORD PTR [r15+0x20]
  42f81b:	mov    rdi,QWORD PTR [r15+0x28]
  42f81f:	lea    rax,[rdi+r14*1]
  42f823:	cmp    rax,rbx
  42f826:	jbe    42f87d <flatcc_json_printer_string_vector_field@@Base+0x2ed>
  42f828:	cmp    rdi,rbx
  42f82b:	jb     42f83e <flatcc_json_printer_string_vector_field@@Base+0x2ae>
  42f82d:	mov    rdi,r15
  42f830:	xor    esi,esi
  42f832:	call   QWORD PTR [r15+0x48]
  42f836:	mov    rbx,QWORD PTR [r15+0x20]
  42f83a:	mov    rdi,QWORD PTR [r15+0x28]
  42f83e:	sub    rbx,rdi
  42f841:	cmp    rbx,r14
  42f844:	jae    42f87d <flatcc_json_printer_string_vector_field@@Base+0x2ed>
  42f846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f850:	mov    esi,0x20
  42f855:	mov    rdx,rbx
  42f858:	call   406080 <memset@plt>
  42f85d:	add    QWORD PTR [r15+0x28],rbx
  42f861:	sub    r14,rbx
  42f864:	mov    rdi,r15
  42f867:	xor    esi,esi
  42f869:	call   QWORD PTR [r15+0x48]
  42f86d:	mov    rbx,QWORD PTR [r15+0x20]
  42f871:	mov    rdi,QWORD PTR [r15+0x28]
  42f875:	sub    rbx,rdi
  42f878:	cmp    r14,rbx
  42f87b:	ja     42f850 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
  42f87d:	mov    esi,0x20
  42f882:	mov    rdx,r14
  42f885:	call   406080 <memset@plt>
  42f88a:	add    r14,QWORD PTR [r15+0x28]
  42f88e:	mov    QWORD PTR [r15+0x28],r14
  42f892:	lea    rax,[r14+0x1]
  42f896:	mov    QWORD PTR [r15+0x28],rax
  42f89a:	mov    BYTE PTR [r14],0x5d
  42f89e:	pop    rbx
  42f89f:	pop    r12
  42f8a1:	pop    r14
  42f8a3:	pop    r15
  42f8a5:	pop    rbp
  42f8a6:	ret    
  42f8a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042f8b0 <flatcc_json_printer_table_vector_field@@Base>:
  42f8b0:	push   rbp
  42f8b1:	push   r15
  42f8b3:	push   r14
  42f8b5:	push   r13
  42f8b7:	push   r12
  42f8b9:	push   rbx
  42f8ba:	sub    rsp,0x38
  42f8be:	mov    QWORD PTR [rsp+0x10],r9
  42f8c3:	lea    eax,[rdx+rdx*1]
  42f8c6:	add    eax,0x4
  42f8c9:	cmp    eax,DWORD PTR [rsi+0x10]
  42f8cc:	jge    42fcbe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  42f8d2:	mov    rdx,QWORD PTR [rsi+0x8]
  42f8d6:	mov    eax,eax
  42f8d8:	movzx  ebx,WORD PTR [rdx+rax*1]
  42f8dc:	test   rbx,rbx
  42f8df:	je     42fcbe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  42f8e5:	add    rbx,QWORD PTR [rsi]
  42f8e8:	je     42fcbe <flatcc_json_printer_table_vector_field@@Base+0x40e>
  42f8ee:	mov    r13,rdi
  42f8f1:	mov    eax,DWORD PTR [rsi+0x18]
  42f8f4:	lea    edx,[rax+0x1]
  42f8f7:	mov    QWORD PTR [rsp+0x8],rsi
  42f8fc:	mov    DWORD PTR [rsi+0x18],edx
  42f8ff:	test   eax,eax
  42f901:	je     42f912 <flatcc_json_printer_table_vector_field@@Base+0x62>
  42f903:	mov    rax,QWORD PTR [r13+0x28]
  42f907:	lea    rdx,[rax+0x1]
  42f90b:	mov    QWORD PTR [r13+0x28],rdx
  42f90f:	mov    BYTE PTR [rax],0x2c
  42f912:	mov    ebp,DWORD PTR [rbx]
  42f914:	mov    r14d,DWORD PTR [rbx+rbp*1]
  42f918:	movsxd rdx,r8d
  42f91b:	mov    rdi,r13
  42f91e:	mov    rsi,rcx
  42f921:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42f926:	inc    DWORD PTR [r13+0x38]
  42f92a:	mov    rax,QWORD PTR [r13+0x28]
  42f92e:	lea    rcx,[rax+0x1]
  42f932:	mov    QWORD PTR [r13+0x28],rcx
  42f936:	mov    BYTE PTR [rax],0x5b
  42f939:	test   r14d,r14d
  42f93c:	mov    rdx,QWORD PTR [rsp+0x8]
  42f941:	je     42fc0a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  42f947:	lea    r15,[rbx+rbp*1]
  42f94b:	add    r15,0x4
  42f94f:	mov    eax,DWORD PTR [rdx+0x14]
  42f952:	dec    eax
  42f954:	je     42fa59 <flatcc_json_printer_table_vector_field@@Base+0x1a9>
  42f95a:	mov    ecx,DWORD PTR [r15]
  42f95d:	add    rcx,r15
  42f960:	inc    DWORD PTR [r13+0x38]
  42f964:	mov    rdx,QWORD PTR [r13+0x28]
  42f968:	lea    rsi,[rdx+0x1]
  42f96c:	mov    QWORD PTR [r13+0x28],rsi
  42f970:	mov    BYTE PTR [rdx],0x7b
  42f973:	mov    DWORD PTR [rsp+0x30],0x0
  42f97b:	mov    DWORD PTR [rsp+0x2c],eax
  42f97f:	mov    QWORD PTR [rsp+0x18],rcx
  42f984:	movsxd rax,DWORD PTR [rcx]
  42f987:	sub    rcx,rax
  42f98a:	mov    QWORD PTR [rsp+0x20],rcx
  42f98f:	movzx  eax,WORD PTR [rcx]
  42f992:	mov    DWORD PTR [rsp+0x28],eax
  42f996:	lea    rsi,[rsp+0x18]
  42f99b:	mov    rdi,r13
  42f99e:	call   QWORD PTR [rsp+0x10]
  42f9a2:	cmp    BYTE PTR [r13+0x31],0x0
  42f9a7:	mov    r12,QWORD PTR [r13+0x28]
  42f9ab:	je     42fa72 <flatcc_json_printer_table_vector_field@@Base+0x1c2>
  42f9b1:	lea    rax,[r12+0x1]
  42f9b6:	mov    QWORD PTR [r13+0x28],rax
  42f9ba:	mov    BYTE PTR [r12],0xa
  42f9bf:	movsxd rax,DWORD PTR [r13+0x38]
  42f9c3:	dec    rax
  42f9c6:	mov    DWORD PTR [r13+0x38],eax
  42f9ca:	movzx  r12d,BYTE PTR [r13+0x31]
  42f9cf:	imul   r12,rax
  42f9d3:	mov    rbx,QWORD PTR [r13+0x20]
  42f9d7:	mov    rdi,QWORD PTR [r13+0x28]
  42f9db:	lea    rax,[rdi+r12*1]
  42f9df:	cmp    rax,rbx
  42f9e2:	jbe    42fa3d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  42f9e4:	cmp    rdi,rbx
  42f9e7:	jb     42f9fa <flatcc_json_printer_table_vector_field@@Base+0x14a>
  42f9e9:	mov    rdi,r13
  42f9ec:	xor    esi,esi
  42f9ee:	call   QWORD PTR [r13+0x48]
  42f9f2:	mov    rbx,QWORD PTR [r13+0x20]
  42f9f6:	mov    rdi,QWORD PTR [r13+0x28]
  42f9fa:	sub    rbx,rdi
  42f9fd:	cmp    rbx,r12
  42fa00:	jae    42fa3d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  42fa02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa0c:	nop    DWORD PTR [rax+0x0]
  42fa10:	mov    esi,0x20
  42fa15:	mov    rdx,rbx
  42fa18:	call   406080 <memset@plt>
  42fa1d:	add    QWORD PTR [r13+0x28],rbx
  42fa21:	sub    r12,rbx
  42fa24:	mov    rdi,r13
  42fa27:	xor    esi,esi
  42fa29:	call   QWORD PTR [r13+0x48]
  42fa2d:	mov    rbx,QWORD PTR [r13+0x20]
  42fa31:	mov    rdi,QWORD PTR [r13+0x28]
  42fa35:	sub    rbx,rdi
  42fa38:	cmp    r12,rbx
  42fa3b:	ja     42fa10 <flatcc_json_printer_table_vector_field@@Base+0x160>
  42fa3d:	mov    esi,0x20
  42fa42:	mov    rdx,r12
  42fa45:	call   406080 <memset@plt>
  42fa4a:	mov    rdx,QWORD PTR [rsp+0x8]
  42fa4f:	add    r12,QWORD PTR [r13+0x28]
  42fa53:	mov    QWORD PTR [r13+0x28],r12
  42fa57:	jmp    42fa77 <flatcc_json_printer_table_vector_field@@Base+0x1c7>
  42fa59:	cmp    DWORD PTR [r13+0x3c],0x0
  42fa5e:	jne    42fa85 <flatcc_json_printer_table_vector_field@@Base+0x1d5>
  42fa60:	mov    DWORD PTR [r13+0x3c],0x2
  42fa68:	dec    r14d
  42fa6b:	jne    42fa8e <flatcc_json_printer_table_vector_field@@Base+0x1de>
  42fa6d:	jmp    42fc0a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  42fa72:	mov    rdx,QWORD PTR [rsp+0x8]
  42fa77:	lea    rax,[r12+0x1]
  42fa7c:	mov    QWORD PTR [r13+0x28],rax
  42fa80:	mov    BYTE PTR [r12],0x7d
  42fa85:	dec    r14d
  42fa88:	je     42fc0a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  42fa8e:	lea    r12,[rsp+0x18]
  42fa93:	jmp    42fad2 <flatcc_json_printer_table_vector_field@@Base+0x222>
  42fa95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa9f:	nop
  42faa0:	mov    esi,0x20
  42faa5:	mov    rdx,rbx
  42faa8:	call   406080 <memset@plt>
  42faad:	mov    rdx,QWORD PTR [rsp+0x8]
  42fab2:	add    rbx,QWORD PTR [r13+0x28]
  42fab6:	mov    QWORD PTR [r13+0x28],rbx
  42faba:	lea    rax,[rbx+0x1]
  42fabe:	mov    QWORD PTR [r13+0x28],rax
  42fac2:	mov    BYTE PTR [rbx],0x7d
  42fac5:	add    r15,0x4
  42fac9:	test   r14d,r14d
  42facc:	je     42fc0a <flatcc_json_printer_table_vector_field@@Base+0x35a>
  42fad2:	dec    r14d
  42fad5:	mov    rax,QWORD PTR [r13+0x28]
  42fad9:	lea    rcx,[rax+0x1]
  42fadd:	mov    QWORD PTR [r13+0x28],rcx
  42fae1:	mov    BYTE PTR [rax],0x2c
  42fae4:	mov    eax,DWORD PTR [rdx+0x14]
  42fae7:	dec    eax
  42fae9:	je     42fbe0 <flatcc_json_printer_table_vector_field@@Base+0x330>
  42faef:	mov    ecx,DWORD PTR [r15+0x4]
  42faf3:	add    rcx,r15
  42faf6:	add    rcx,0x4
  42fafa:	inc    DWORD PTR [r13+0x38]
  42fafe:	mov    rdx,QWORD PTR [r13+0x28]
  42fb02:	lea    rsi,[rdx+0x1]
  42fb06:	mov    QWORD PTR [r13+0x28],rsi
  42fb0a:	mov    BYTE PTR [rdx],0x7b
  42fb0d:	mov    DWORD PTR [rsp+0x30],0x0
  42fb15:	mov    DWORD PTR [rsp+0x2c],eax
  42fb19:	mov    QWORD PTR [rsp+0x18],rcx
  42fb1e:	movsxd rax,DWORD PTR [rcx]
  42fb21:	sub    rcx,rax
  42fb24:	mov    QWORD PTR [rsp+0x20],rcx
  42fb29:	movzx  eax,WORD PTR [rcx]
  42fb2c:	mov    DWORD PTR [rsp+0x28],eax
  42fb30:	mov    rdi,r13
  42fb33:	mov    rsi,r12
  42fb36:	call   QWORD PTR [rsp+0x10]
  42fb3a:	cmp    BYTE PTR [r13+0x31],0x0
  42fb3f:	mov    rbx,QWORD PTR [r13+0x28]
  42fb43:	je     42fc00 <flatcc_json_printer_table_vector_field@@Base+0x350>
  42fb49:	lea    rax,[rbx+0x1]
  42fb4d:	mov    QWORD PTR [r13+0x28],rax
  42fb51:	mov    BYTE PTR [rbx],0xa
  42fb54:	movsxd rax,DWORD PTR [r13+0x38]
  42fb58:	dec    rax
  42fb5b:	mov    DWORD PTR [r13+0x38],eax
  42fb5f:	movzx  ebx,BYTE PTR [r13+0x31]
  42fb64:	imul   rbx,rax
  42fb68:	mov    rbp,QWORD PTR [r13+0x20]
  42fb6c:	mov    rdi,QWORD PTR [r13+0x28]
  42fb70:	lea    rax,[rdi+rbx*1]
  42fb74:	cmp    rax,rbp
  42fb77:	jbe    42faa0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  42fb7d:	cmp    rdi,rbp
  42fb80:	jb     42fb93 <flatcc_json_printer_table_vector_field@@Base+0x2e3>
  42fb82:	mov    rdi,r13
  42fb85:	xor    esi,esi
  42fb87:	call   QWORD PTR [r13+0x48]
  42fb8b:	mov    rbp,QWORD PTR [r13+0x20]
  42fb8f:	mov    rdi,QWORD PTR [r13+0x28]
  42fb93:	sub    rbp,rdi
  42fb96:	cmp    rbp,rbx
  42fb99:	jae    42faa0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  42fb9f:	nop
  42fba0:	mov    esi,0x20
  42fba5:	mov    rdx,rbp
  42fba8:	call   406080 <memset@plt>
  42fbad:	add    QWORD PTR [r13+0x28],rbp
  42fbb1:	sub    rbx,rbp
  42fbb4:	mov    rdi,r13
  42fbb7:	xor    esi,esi
  42fbb9:	call   QWORD PTR [r13+0x48]
  42fbbd:	mov    rbp,QWORD PTR [r13+0x20]
  42fbc1:	mov    rdi,QWORD PTR [r13+0x28]
  42fbc5:	sub    rbp,rdi
  42fbc8:	cmp    rbx,rbp
  42fbcb:	ja     42fba0 <flatcc_json_printer_table_vector_field@@Base+0x2f0>
  42fbcd:	jmp    42faa0 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  42fbd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fbdc:	nop    DWORD PTR [rax+0x0]
  42fbe0:	cmp    DWORD PTR [r13+0x3c],0x0
  42fbe5:	jne    42fac5 <flatcc_json_printer_table_vector_field@@Base+0x215>
  42fbeb:	mov    DWORD PTR [r13+0x3c],0x2
  42fbf3:	jmp    42fac5 <flatcc_json_printer_table_vector_field@@Base+0x215>
  42fbf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42fc00:	mov    rdx,QWORD PTR [rsp+0x8]
  42fc05:	jmp    42faba <flatcc_json_printer_table_vector_field@@Base+0x20a>
  42fc0a:	cmp    BYTE PTR [r13+0x31],0x0
  42fc0f:	mov    r14,QWORD PTR [r13+0x28]
  42fc13:	je     42fcb2 <flatcc_json_printer_table_vector_field@@Base+0x402>
  42fc19:	lea    rax,[r14+0x1]
  42fc1d:	mov    QWORD PTR [r13+0x28],rax
  42fc21:	mov    BYTE PTR [r14],0xa
  42fc25:	movsxd rax,DWORD PTR [r13+0x38]
  42fc29:	dec    rax
  42fc2c:	mov    DWORD PTR [r13+0x38],eax
  42fc30:	movzx  r14d,BYTE PTR [r13+0x31]
  42fc35:	imul   r14,rax
  42fc39:	mov    rbx,QWORD PTR [r13+0x20]
  42fc3d:	mov    rdi,QWORD PTR [r13+0x28]
  42fc41:	lea    rax,[rdi+r14*1]
  42fc45:	cmp    rax,rbx
  42fc48:	jbe    42fc9d <flatcc_json_printer_table_vector_field@@Base+0x3ed>
  42fc4a:	cmp    rdi,rbx
  42fc4d:	jb     42fc60 <flatcc_json_printer_table_vector_field@@Base+0x3b0>
  42fc4f:	mov    rdi,r13
  42fc52:	xor    esi,esi
  42fc54:	call   QWORD PTR [r13+0x48]
  42fc58:	mov    rbx,QWORD PTR [r13+0x20]
  42fc5c:	mov    rdi,QWORD PTR [r13+0x28]
  42fc60:	sub    rbx,rdi
  42fc63:	cmp    rbx,r14
  42fc66:	jae    42fc9d <flatcc_json_printer_table_vector_field@@Base+0x3ed>
  42fc68:	nop    DWORD PTR [rax+rax*1+0x0]
  42fc70:	mov    esi,0x20
  42fc75:	mov    rdx,rbx
  42fc78:	call   406080 <memset@plt>
  42fc7d:	add    QWORD PTR [r13+0x28],rbx
  42fc81:	sub    r14,rbx
  42fc84:	mov    rdi,r13
  42fc87:	xor    esi,esi
  42fc89:	call   QWORD PTR [r13+0x48]
  42fc8d:	mov    rbx,QWORD PTR [r13+0x20]
  42fc91:	mov    rdi,QWORD PTR [r13+0x28]
  42fc95:	sub    rbx,rdi
  42fc98:	cmp    r14,rbx
  42fc9b:	ja     42fc70 <flatcc_json_printer_table_vector_field@@Base+0x3c0>
  42fc9d:	mov    esi,0x20
  42fca2:	mov    rdx,r14
  42fca5:	call   406080 <memset@plt>
  42fcaa:	add    r14,QWORD PTR [r13+0x28]
  42fcae:	mov    QWORD PTR [r13+0x28],r14
  42fcb2:	lea    rax,[r14+0x1]
  42fcb6:	mov    QWORD PTR [r13+0x28],rax
  42fcba:	mov    BYTE PTR [r14],0x5d
  42fcbe:	add    rsp,0x38
  42fcc2:	pop    rbx
  42fcc3:	pop    r12
  42fcc5:	pop    r13
  42fcc7:	pop    r14
  42fcc9:	pop    r15
  42fccb:	pop    rbp
  42fccc:	ret    
  42fccd:	nop    DWORD PTR [rax]

000000000042fcd0 <flatcc_json_printer_union_vector_field@@Base>:
  42fcd0:	push   rbp
  42fcd1:	push   r15
  42fcd3:	push   r14
  42fcd5:	push   r13
  42fcd7:	push   r12
  42fcd9:	push   rbx
  42fcda:	sub    rsp,0xa8
  42fce1:	mov    QWORD PTR [rsp+0x10],r9
  42fce6:	mov    r13d,r8d
  42fce9:	mov    r15,rcx
  42fcec:	mov    ebp,edx
  42fcee:	mov    rbx,rsi
  42fcf1:	mov    r14,rdi
  42fcf4:	lea    ecx,[rbp+rbp*1+0x2]
  42fcf8:	mov    eax,DWORD PTR [rsi+0x10]
  42fcfb:	cmp    ecx,eax
  42fcfd:	jge    42fd13 <flatcc_json_printer_union_vector_field@@Base+0x43>
  42fcff:	mov    rdx,QWORD PTR [rbx+0x8]
  42fd03:	mov    ecx,ecx
  42fd05:	movzx  edx,WORD PTR [rdx+rcx*1]
  42fd09:	test   rdx,rdx
  42fd0c:	je     42fd13 <flatcc_json_printer_union_vector_field@@Base+0x43>
  42fd0e:	add    rdx,QWORD PTR [rbx]
  42fd11:	jmp    42fd15 <flatcc_json_printer_union_vector_field@@Base+0x45>
  42fd13:	xor    edx,edx
  42fd15:	lea    ecx,[rbp+rbp*1+0x4]
  42fd19:	cmp    ecx,eax
  42fd1b:	jge    42fd31 <flatcc_json_printer_union_vector_field@@Base+0x61>
  42fd1d:	mov    rax,QWORD PTR [rbx+0x8]
  42fd21:	mov    ecx,ecx
  42fd23:	movzx  eax,WORD PTR [rax+rcx*1]
  42fd27:	test   rax,rax
  42fd2a:	je     42fd31 <flatcc_json_printer_union_vector_field@@Base+0x61>
  42fd2c:	add    rax,QWORD PTR [rbx]
  42fd2f:	jmp    42fd33 <flatcc_json_printer_union_vector_field@@Base+0x63>
  42fd31:	xor    eax,eax
  42fd33:	mov    QWORD PTR [rsp+0x8],rax
  42fd38:	mov    QWORD PTR [rsp+0x18],rdx
  42fd3d:	mov    eax,DWORD PTR [rbx+0x14]
  42fd40:	mov    DWORD PTR [rsp+0x28],eax
  42fd44:	cmp    r13d,0x65
  42fd48:	jge    42ffdc <flatcc_json_printer_union_vector_field@@Base+0x30c>
  42fd4e:	movsxd r12,r13d
  42fd51:	lea    rdi,[rsp+0x30]
  42fd56:	mov    rsi,r15
  42fd59:	mov    rdx,r12
  42fd5c:	call   4060d0 <memcpy@plt>
  42fd61:	mov    DWORD PTR [rsp+r12*1+0x30],0x7079745f
  42fd6a:	mov    BYTE PTR [rsp+r12*1+0x34],0x65
  42fd70:	cmp    QWORD PTR [rsp+0x18],0x0
  42fd76:	je     42ffca <flatcc_json_printer_union_vector_field@@Base+0x2fa>
  42fd7c:	cmp    QWORD PTR [rsp+0x8],0x0
  42fd82:	je     42ffca <flatcc_json_printer_union_vector_field@@Base+0x2fa>
  42fd88:	dec    ebp
  42fd8a:	add    r13d,0x5
  42fd8e:	lea    rcx,[rsp+0x30]
  42fd93:	mov    rdi,r14
  42fd96:	mov    rsi,rbx
  42fd99:	mov    edx,ebp
  42fd9b:	mov    r8d,r13d
  42fd9e:	mov    r9,QWORD PTR [rsp+0x10]
  42fda3:	call   42cf10 <flatcc_json_printer_utype_enum_vector_field@@Base>
  42fda8:	mov    eax,DWORD PTR [rbx+0x18]
  42fdab:	lea    ecx,[rax+0x1]
  42fdae:	mov    DWORD PTR [rbx+0x18],ecx
  42fdb1:	test   eax,eax
  42fdb3:	je     42fdc4 <flatcc_json_printer_union_vector_field@@Base+0xf4>
  42fdb5:	mov    rax,QWORD PTR [r14+0x28]
  42fdb9:	lea    rcx,[rax+0x1]
  42fdbd:	mov    QWORD PTR [r14+0x28],rcx
  42fdc1:	mov    BYTE PTR [rax],0x2c
  42fdc4:	mov    rax,QWORD PTR [rsp+0x8]
  42fdc9:	mov    ecx,DWORD PTR [rax]
  42fdcb:	mov    rbx,QWORD PTR [rsp+0x18]
  42fdd0:	mov    r13d,DWORD PTR [rbx]
  42fdd3:	mov    QWORD PTR [rsp+0x10],rcx
  42fdd8:	mov    ebp,DWORD PTR [rax+rcx*1]
  42fddb:	mov    rdi,r14
  42fdde:	mov    rsi,r15
  42fde1:	mov    rdx,r12
  42fde4:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  42fde9:	inc    DWORD PTR [r14+0x38]
  42fded:	lea    r15,[r14+0x28]
  42fdf1:	mov    rax,QWORD PTR [r14+0x28]
  42fdf5:	lea    rcx,[rax+0x1]
  42fdf9:	mov    QWORD PTR [r14+0x28],rcx
  42fdfd:	mov    BYTE PTR [rax],0x5b
  42fe00:	test   ebp,ebp
  42fe02:	je     42ff20 <flatcc_json_printer_union_vector_field@@Base+0x250>
  42fe08:	mov    rdx,rbx
  42fe0b:	mov    al,BYTE PTR [rbx+r13*1+0x4]
  42fe10:	test   al,al
  42fe12:	je     42fe4b <flatcc_json_printer_union_vector_field@@Base+0x17b>
  42fe14:	mov    rcx,QWORD PTR [rsp+0x8]
  42fe19:	mov    rdx,QWORD PTR [rsp+0x10]
  42fe1e:	add    rcx,rdx
  42fe21:	add    rcx,0x4
  42fe25:	mov    BYTE PTR [rsp+0x2c],al
  42fe29:	mov    QWORD PTR [rsp+0x20],rcx
  42fe2e:	lea    rsi,[rsp+0x20]
  42fe33:	mov    rdi,r14
  42fe36:	call   QWORD PTR [rsp+0xe0]
  42fe3d:	mov    rdx,QWORD PTR [rsp+0x18]
  42fe42:	dec    ebp
  42fe44:	jne    42fe87 <flatcc_json_printer_union_vector_field@@Base+0x1b7>
  42fe46:	jmp    42ff20 <flatcc_json_printer_union_vector_field@@Base+0x250>
  42fe4b:	mov    rax,QWORD PTR [r15]
  42fe4e:	lea    rcx,[rax+0x1]
  42fe52:	mov    QWORD PTR [r15],rcx
  42fe55:	mov    BYTE PTR [rax],0x6e
  42fe58:	mov    rax,QWORD PTR [r15]
  42fe5b:	lea    rcx,[rax+0x1]
  42fe5f:	mov    QWORD PTR [r15],rcx
  42fe62:	mov    BYTE PTR [rax],0x75
  42fe65:	mov    rax,QWORD PTR [r15]
  42fe68:	lea    rcx,[rax+0x1]
  42fe6c:	mov    QWORD PTR [r15],rcx
  42fe6f:	mov    BYTE PTR [rax],0x6c
  42fe72:	mov    rax,QWORD PTR [r15]
  42fe75:	lea    rcx,[rax+0x1]
  42fe79:	mov    QWORD PTR [r15],rcx
  42fe7c:	mov    BYTE PTR [rax],0x6c
  42fe7f:	dec    ebp
  42fe81:	je     42ff20 <flatcc_json_printer_union_vector_field@@Base+0x250>
  42fe87:	mov    ebp,ebp
  42fe89:	lea    rbx,[rdx+r13*1]
  42fe8d:	add    rbx,0x5
  42fe91:	mov    rax,QWORD PTR [rsp+0x8]
  42fe96:	mov    rcx,QWORD PTR [rsp+0x10]
  42fe9b:	lea    r12,[rcx+rax*1]
  42fe9f:	add    r12,0x8
  42fea3:	xor    r13d,r13d
  42fea6:	jmp    42fef0 <flatcc_json_printer_union_vector_field@@Base+0x220>
  42fea8:	nop    DWORD PTR [rax+rax*1+0x0]
  42feb0:	mov    rax,QWORD PTR [r15]
  42feb3:	lea    rcx,[rax+0x1]
  42feb7:	mov    QWORD PTR [r15],rcx
  42feba:	mov    BYTE PTR [rax],0x6e
  42febd:	mov    rax,QWORD PTR [r15]
  42fec0:	lea    rcx,[rax+0x1]
  42fec4:	mov    QWORD PTR [r15],rcx
  42fec7:	mov    BYTE PTR [rax],0x75
  42feca:	mov    rax,QWORD PTR [r15]
  42fecd:	lea    rcx,[rax+0x1]
  42fed1:	mov    QWORD PTR [r15],rcx
  42fed4:	mov    BYTE PTR [rax],0x6c
  42fed7:	mov    rax,QWORD PTR [r15]
  42feda:	lea    rcx,[rax+0x1]
  42fede:	mov    QWORD PTR [r15],rcx
  42fee1:	mov    BYTE PTR [rax],0x6c
  42fee4:	inc    r13
  42fee7:	add    r12,0x4
  42feeb:	cmp    ebp,r13d
  42feee:	je     42ff20 <flatcc_json_printer_union_vector_field@@Base+0x250>
  42fef0:	movzx  eax,BYTE PTR [rbx+r13*1]
  42fef5:	mov    rcx,QWORD PTR [r15]
  42fef8:	lea    rdx,[rcx+0x1]
  42fefc:	mov    QWORD PTR [r15],rdx
  42feff:	mov    BYTE PTR [rcx],0x2c
  42ff02:	test   al,al
  42ff04:	je     42feb0 <flatcc_json_printer_union_vector_field@@Base+0x1e0>
  42ff06:	mov    BYTE PTR [rsp+0x2c],al
  42ff0a:	mov    QWORD PTR [rsp+0x20],r12
  42ff0f:	mov    rdi,r14
  42ff12:	lea    rsi,[rsp+0x20]
  42ff17:	call   QWORD PTR [rsp+0xe0]
  42ff1e:	jmp    42fee4 <flatcc_json_printer_union_vector_field@@Base+0x214>
  42ff20:	cmp    BYTE PTR [r14+0x31],0x0
  42ff25:	mov    rbx,QWORD PTR [r14+0x28]
  42ff29:	je     42ffc0 <flatcc_json_printer_union_vector_field@@Base+0x2f0>
  42ff2f:	lea    rax,[rbx+0x1]
  42ff33:	mov    QWORD PTR [r14+0x28],rax
  42ff37:	mov    BYTE PTR [rbx],0xa
  42ff3a:	movsxd rax,DWORD PTR [r14+0x38]
  42ff3e:	dec    rax
  42ff41:	mov    DWORD PTR [r14+0x38],eax
  42ff45:	movzx  ebx,BYTE PTR [r14+0x31]
  42ff4a:	imul   rbx,rax
  42ff4e:	mov    rbp,QWORD PTR [r14+0x20]
  42ff52:	mov    rdi,QWORD PTR [r14+0x28]
  42ff56:	lea    rax,[rdi+rbx*1]
  42ff5a:	cmp    rax,rbp
  42ff5d:	jbe    42ffad <flatcc_json_printer_union_vector_field@@Base+0x2dd>
  42ff5f:	cmp    rdi,rbp
  42ff62:	jb     42ff75 <flatcc_json_printer_union_vector_field@@Base+0x2a5>
  42ff64:	mov    rdi,r14
  42ff67:	xor    esi,esi
  42ff69:	call   QWORD PTR [r14+0x48]
  42ff6d:	mov    rbp,QWORD PTR [r14+0x20]
  42ff71:	mov    rdi,QWORD PTR [r14+0x28]
  42ff75:	sub    rbp,rdi
  42ff78:	cmp    rbp,rbx
  42ff7b:	jae    42ffad <flatcc_json_printer_union_vector_field@@Base+0x2dd>
  42ff7d:	nop    DWORD PTR [rax]
  42ff80:	mov    esi,0x20
  42ff85:	mov    rdx,rbp
  42ff88:	call   406080 <memset@plt>
  42ff8d:	add    QWORD PTR [r14+0x28],rbp
  42ff91:	sub    rbx,rbp
  42ff94:	mov    rdi,r14
  42ff97:	xor    esi,esi
  42ff99:	call   QWORD PTR [r14+0x48]
  42ff9d:	mov    rbp,QWORD PTR [r14+0x20]
  42ffa1:	mov    rdi,QWORD PTR [r14+0x28]
  42ffa5:	sub    rbp,rdi
  42ffa8:	cmp    rbx,rbp
  42ffab:	ja     42ff80 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
  42ffad:	mov    esi,0x20
  42ffb2:	mov    rdx,rbx
  42ffb5:	call   406080 <memset@plt>
  42ffba:	add    rbx,QWORD PTR [r15]
  42ffbd:	mov    QWORD PTR [r15],rbx
  42ffc0:	lea    rax,[rbx+0x1]
  42ffc4:	mov    QWORD PTR [r15],rax
  42ffc7:	mov    BYTE PTR [rbx],0x5d
  42ffca:	add    rsp,0xa8
  42ffd1:	pop    rbx
  42ffd2:	pop    r12
  42ffd4:	pop    r13
  42ffd6:	pop    r14
  42ffd8:	pop    r15
  42ffda:	pop    rbp
  42ffdb:	ret    
  42ffdc:	cmp    DWORD PTR [r14+0x3c],0x0
  42ffe1:	jne    42ffeb <flatcc_json_printer_union_vector_field@@Base+0x31b>
  42ffe3:	mov    DWORD PTR [r14+0x3c],0x1
  42ffeb:	lea    rdi,[rip+0x8d70]        # 438d62 <flatcc_builder_padding_base@@Base+0x3342>
  42fff2:	lea    rsi,[rip+0x8d84]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  42fff9:	lea    rcx,[rip+0x8de2]        # 438de2 <flatcc_builder_padding_base@@Base+0x33c2>
  430000:	mov    edx,0x34b
  430005:	call   406070 <__assert_fail@plt>
  43000a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000430010 <flatcc_json_printer_table_field@@Base>:
  430010:	push   r15
  430012:	push   r14
  430014:	push   r12
  430016:	push   rbx
  430017:	sub    rsp,0x28
  43001b:	lea    eax,[rdx+rdx*1]
  43001e:	add    eax,0x4
  430021:	cmp    eax,DWORD PTR [rsi+0x10]
  430024:	jge    43018f <flatcc_json_printer_table_field@@Base+0x17f>
  43002a:	mov    rbx,rsi
  43002d:	mov    rdx,QWORD PTR [rsi+0x8]
  430031:	mov    eax,eax
  430033:	movzx  r12d,WORD PTR [rdx+rax*1]
  430038:	test   r12,r12
  43003b:	je     43018f <flatcc_json_printer_table_field@@Base+0x17f>
  430041:	add    r12,QWORD PTR [rbx]
  430044:	je     43018f <flatcc_json_printer_table_field@@Base+0x17f>
  43004a:	mov    r15,r9
  43004d:	mov    r14,rdi
  430050:	mov    eax,DWORD PTR [rbx+0x18]
  430053:	lea    edx,[rax+0x1]
  430056:	mov    DWORD PTR [rbx+0x18],edx
  430059:	test   eax,eax
  43005b:	je     43006c <flatcc_json_printer_table_field@@Base+0x5c>
  43005d:	mov    rax,QWORD PTR [r14+0x28]
  430061:	lea    rdx,[rax+0x1]
  430065:	mov    QWORD PTR [r14+0x28],rdx
  430069:	mov    BYTE PTR [rax],0x2c
  43006c:	movsxd rdx,r8d
  43006f:	mov    rdi,r14
  430072:	mov    rsi,rcx
  430075:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  43007a:	mov    eax,DWORD PTR [rbx+0x14]
  43007d:	dec    eax
  43007f:	je     430180 <flatcc_json_printer_table_field@@Base+0x170>
  430085:	mov    ecx,DWORD PTR [r12]
  430089:	add    rcx,r12
  43008c:	inc    DWORD PTR [r14+0x38]
  430090:	mov    rdx,QWORD PTR [r14+0x28]
  430094:	lea    rsi,[rdx+0x1]
  430098:	mov    QWORD PTR [r14+0x28],rsi
  43009c:	mov    BYTE PTR [rdx],0x7b
  43009f:	mov    DWORD PTR [rsp+0x20],0x0
  4300a7:	mov    DWORD PTR [rsp+0x1c],eax
  4300ab:	mov    QWORD PTR [rsp+0x8],rcx
  4300b0:	movsxd rax,DWORD PTR [rcx]
  4300b3:	sub    rcx,rax
  4300b6:	mov    QWORD PTR [rsp+0x10],rcx
  4300bb:	movzx  eax,WORD PTR [rcx]
  4300be:	mov    DWORD PTR [rsp+0x18],eax
  4300c2:	lea    rsi,[rsp+0x8]
  4300c7:	mov    rdi,r14
  4300ca:	call   r15
  4300cd:	cmp    BYTE PTR [r14+0x31],0x0
  4300d2:	mov    r15,QWORD PTR [r14+0x28]
  4300d6:	je     430172 <flatcc_json_printer_table_field@@Base+0x162>
  4300dc:	lea    rax,[r15+0x1]
  4300e0:	mov    QWORD PTR [r14+0x28],rax
  4300e4:	mov    BYTE PTR [r15],0xa
  4300e8:	movsxd rax,DWORD PTR [r14+0x38]
  4300ec:	dec    rax
  4300ef:	mov    DWORD PTR [r14+0x38],eax
  4300f3:	movzx  r15d,BYTE PTR [r14+0x31]
  4300f8:	imul   r15,rax
  4300fc:	mov    rbx,QWORD PTR [r14+0x20]
  430100:	mov    rdi,QWORD PTR [r14+0x28]
  430104:	lea    rax,[rdi+r15*1]
  430108:	cmp    rax,rbx
  43010b:	jbe    43015d <flatcc_json_printer_table_field@@Base+0x14d>
  43010d:	cmp    rdi,rbx
  430110:	jb     430123 <flatcc_json_printer_table_field@@Base+0x113>
  430112:	mov    rdi,r14
  430115:	xor    esi,esi
  430117:	call   QWORD PTR [r14+0x48]
  43011b:	mov    rbx,QWORD PTR [r14+0x20]
  43011f:	mov    rdi,QWORD PTR [r14+0x28]
  430123:	sub    rbx,rdi
  430126:	cmp    rbx,r15
  430129:	jae    43015d <flatcc_json_printer_table_field@@Base+0x14d>
  43012b:	nop    DWORD PTR [rax+rax*1+0x0]
  430130:	mov    esi,0x20
  430135:	mov    rdx,rbx
  430138:	call   406080 <memset@plt>
  43013d:	add    QWORD PTR [r14+0x28],rbx
  430141:	sub    r15,rbx
  430144:	mov    rdi,r14
  430147:	xor    esi,esi
  430149:	call   QWORD PTR [r14+0x48]
  43014d:	mov    rbx,QWORD PTR [r14+0x20]
  430151:	mov    rdi,QWORD PTR [r14+0x28]
  430155:	sub    rbx,rdi
  430158:	cmp    r15,rbx
  43015b:	ja     430130 <flatcc_json_printer_table_field@@Base+0x120>
  43015d:	mov    esi,0x20
  430162:	mov    rdx,r15
  430165:	call   406080 <memset@plt>
  43016a:	add    r15,QWORD PTR [r14+0x28]
  43016e:	mov    QWORD PTR [r14+0x28],r15
  430172:	lea    rax,[r15+0x1]
  430176:	mov    QWORD PTR [r14+0x28],rax
  43017a:	mov    BYTE PTR [r15],0x7d
  43017e:	jmp    43018f <flatcc_json_printer_table_field@@Base+0x17f>
  430180:	cmp    DWORD PTR [r14+0x3c],0x0
  430185:	jne    43018f <flatcc_json_printer_table_field@@Base+0x17f>
  430187:	mov    DWORD PTR [r14+0x3c],0x2
  43018f:	add    rsp,0x28
  430193:	pop    rbx
  430194:	pop    r12
  430196:	pop    r14
  430198:	pop    r15
  43019a:	ret    
  43019b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004301a0 <flatcc_json_printer_union_field@@Base>:
  4301a0:	push   rbp
  4301a1:	push   r15
  4301a3:	push   r14
  4301a5:	push   r13
  4301a7:	push   r12
  4301a9:	push   rbx
  4301aa:	sub    rsp,0x38
  4301ae:	mov    r13d,r8d
  4301b1:	mov    r12,rcx
  4301b4:	mov    r14,rsi
  4301b7:	mov    r15,rdi
  4301ba:	lea    eax,[rdx+rdx*1]
  4301bd:	add    eax,0x2
  4301c0:	mov    ecx,edx
  4301c2:	add    ecx,edx
  4301c4:	mov    edx,DWORD PTR [rsi+0x10]
  4301c7:	cmp    eax,edx
  4301c9:	jge    4301df <flatcc_json_printer_union_field@@Base+0x3f>
  4301cb:	mov    rsi,QWORD PTR [r14+0x8]
  4301cf:	mov    eax,eax
  4301d1:	movzx  eax,WORD PTR [rsi+rax*1]
  4301d5:	test   rax,rax
  4301d8:	je     4301df <flatcc_json_printer_union_field@@Base+0x3f>
  4301da:	add    rax,QWORD PTR [r14]
  4301dd:	jmp    4301e1 <flatcc_json_printer_union_field@@Base+0x41>
  4301df:	xor    eax,eax
  4301e1:	add    ecx,0x4
  4301e4:	cmp    ecx,edx
  4301e6:	jge    430587 <flatcc_json_printer_union_field@@Base+0x3e7>
  4301ec:	mov    rdx,QWORD PTR [r14+0x8]
  4301f0:	mov    ecx,ecx
  4301f2:	movzx  ecx,WORD PTR [rdx+rcx*1]
  4301f6:	test   rcx,rcx
  4301f9:	je     430587 <flatcc_json_printer_union_field@@Base+0x3e7>
  4301ff:	test   rax,rax
  430202:	je     430587 <flatcc_json_printer_union_field@@Base+0x3e7>
  430208:	add    rcx,QWORD PTR [r14]
  43020b:	je     430587 <flatcc_json_printer_union_field@@Base+0x3e7>
  430211:	mov    QWORD PTR [rsp+0x18],r9
  430216:	mov    QWORD PTR [rsp],rcx
  43021a:	mov    al,BYTE PTR [rax]
  43021c:	mov    QWORD PTR [rsp+0x10],rax
  430221:	mov    eax,DWORD PTR [r14+0x18]
  430225:	lea    ecx,[rax+0x1]
  430228:	mov    DWORD PTR [r14+0x18],ecx
  43022c:	test   eax,eax
  43022e:	je     43023f <flatcc_json_printer_union_field@@Base+0x9f>
  430230:	mov    rax,QWORD PTR [r15+0x28]
  430234:	lea    rcx,[rax+0x1]
  430238:	mov    QWORD PTR [r15+0x28],rcx
  43023c:	mov    BYTE PTR [rax],0x2c
  43023f:	cmp    BYTE PTR [r15+0x31],0x0
  430244:	mov    rbp,QWORD PTR [r15+0x28]
  430248:	je     4302e4 <flatcc_json_printer_union_field@@Base+0x144>
  43024e:	lea    rax,[rbp+0x1]
  430252:	mov    QWORD PTR [r15+0x28],rax
  430256:	mov    BYTE PTR [rbp+0x0],0xa
  43025a:	movsxd rax,DWORD PTR [r15+0x38]
  43025e:	movzx  ebp,BYTE PTR [r15+0x31]
  430263:	imul   rbp,rax
  430267:	mov    rbx,QWORD PTR [r15+0x20]
  43026b:	mov    rdi,QWORD PTR [r15+0x28]
  43026f:	lea    rax,[rdi+rbp*1]
  430273:	cmp    rax,rbx
  430276:	jbe    4302cd <flatcc_json_printer_union_field@@Base+0x12d>
  430278:	cmp    rdi,rbx
  43027b:	jb     43028e <flatcc_json_printer_union_field@@Base+0xee>
  43027d:	mov    rdi,r15
  430280:	xor    esi,esi
  430282:	call   QWORD PTR [r15+0x48]
  430286:	mov    rbx,QWORD PTR [r15+0x20]
  43028a:	mov    rdi,QWORD PTR [r15+0x28]
  43028e:	sub    rbx,rdi
  430291:	cmp    rbx,rbp
  430294:	jae    4302cd <flatcc_json_printer_union_field@@Base+0x12d>
  430296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4302a0:	mov    esi,0x20
  4302a5:	mov    rdx,rbx
  4302a8:	call   406080 <memset@plt>
  4302ad:	add    QWORD PTR [r15+0x28],rbx
  4302b1:	sub    rbp,rbx
  4302b4:	mov    rdi,r15
  4302b7:	xor    esi,esi
  4302b9:	call   QWORD PTR [r15+0x48]
  4302bd:	mov    rbx,QWORD PTR [r15+0x20]
  4302c1:	mov    rdi,QWORD PTR [r15+0x28]
  4302c5:	sub    rbx,rdi
  4302c8:	cmp    rbp,rbx
  4302cb:	ja     4302a0 <flatcc_json_printer_union_field@@Base+0x100>
  4302cd:	mov    esi,0x20
  4302d2:	mov    rdx,rbp
  4302d5:	call   406080 <memset@plt>
  4302da:	add    rbp,QWORD PTR [r15+0x28]
  4302de:	mov    QWORD PTR [r15+0x28],rbp
  4302e2:	jmp    4302f7 <flatcc_json_printer_union_field@@Base+0x157>
  4302e4:	cmp    rbp,QWORD PTR [r15+0x20]
  4302e8:	jb     4302f7 <flatcc_json_printer_union_field@@Base+0x157>
  4302ea:	mov    rdi,r15
  4302ed:	xor    esi,esi
  4302ef:	call   QWORD PTR [r15+0x48]
  4302f3:	mov    rbp,QWORD PTR [r15+0x28]
  4302f7:	mov    BYTE PTR [rbp+0x0],0x22
  4302fb:	mov    rbp,QWORD PTR [r15+0x20]
  4302ff:	cmp    BYTE PTR [r15+0x32],0x1
  430304:	mov    rdi,QWORD PTR [r15+0x28]
  430308:	adc    rdi,0x0
  43030c:	mov    QWORD PTR [r15+0x28],rdi
  430310:	movsxd r13,r13d
  430313:	lea    rax,[rdi+r13*1]
  430317:	cmp    rax,rbp
  43031a:	mov    QWORD PTR [rsp+0x8],r12
  43031f:	mov    QWORD PTR [rsp+0x20],r13
  430324:	jae    430336 <flatcc_json_printer_union_field@@Base+0x196>
  430326:	mov    rsi,r12
  430329:	mov    rdx,r13
  43032c:	call   4060d0 <memcpy@plt>
  430331:	mov    r12,r13
  430334:	jmp    4303a9 <flatcc_json_printer_union_field@@Base+0x209>
  430336:	cmp    rdi,rbp
  430339:	jb     43034c <flatcc_json_printer_union_field@@Base+0x1ac>
  43033b:	mov    rdi,r15
  43033e:	xor    esi,esi
  430340:	call   QWORD PTR [r15+0x48]
  430344:	mov    rbp,QWORD PTR [r15+0x20]
  430348:	mov    rdi,QWORD PTR [r15+0x28]
  43034c:	sub    rbp,rdi
  43034f:	mov    rbx,r12
  430352:	mov    r12,r13
  430355:	cmp    rbp,r13
  430358:	jae    43039e <flatcc_json_printer_union_field@@Base+0x1fe>
  43035a:	mov    r12,r13
  43035d:	mov    rbx,QWORD PTR [rsp+0x8]
  430362:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43036c:	nop    DWORD PTR [rax+0x0]
  430370:	mov    rsi,rbx
  430373:	mov    rdx,rbp
  430376:	call   4060d0 <memcpy@plt>
  43037b:	add    QWORD PTR [r15+0x28],rbp
  43037f:	add    rbx,rbp
  430382:	sub    r12,rbp
  430385:	mov    rdi,r15
  430388:	xor    esi,esi
  43038a:	call   QWORD PTR [r15+0x48]
  43038e:	mov    rbp,QWORD PTR [r15+0x20]
  430392:	mov    rdi,QWORD PTR [r15+0x28]
  430396:	sub    rbp,rdi
  430399:	cmp    r12,rbp
  43039c:	ja     430370 <flatcc_json_printer_union_field@@Base+0x1d0>
  43039e:	mov    rsi,rbx
  4303a1:	mov    rdx,r12
  4303a4:	call   4060d0 <memcpy@plt>
  4303a9:	mov    r13,QWORD PTR [r15+0x20]
  4303ad:	mov    rax,QWORD PTR [r15+0x28]
  4303b1:	lea    rdi,[rax+r12*1]
  4303b5:	mov    QWORD PTR [r15+0x28],rdi
  4303b9:	add    rax,r12
  4303bc:	add    rax,0x5
  4303c0:	cmp    rax,r13
  4303c3:	jae    4303e0 <flatcc_json_printer_union_field@@Base+0x240>
  4303c5:	mov    BYTE PTR [rdi+0x4],0x65
  4303c9:	mov    DWORD PTR [rdi],0x7079745f
  4303cf:	mov    ebp,0x5
  4303d4:	mov    r12,QWORD PTR [rsp+0x8]
  4303d9:	mov    r13,QWORD PTR [rsp+0x10]
  4303de:	jmp    43045c <flatcc_json_printer_union_field@@Base+0x2bc>
  4303e0:	cmp    rdi,r13
  4303e3:	jb     4303f6 <flatcc_json_printer_union_field@@Base+0x256>
  4303e5:	mov    rdi,r15
  4303e8:	xor    esi,esi
  4303ea:	call   QWORD PTR [r15+0x48]
  4303ee:	mov    r13,QWORD PTR [r15+0x20]
  4303f2:	mov    rdi,QWORD PTR [r15+0x28]
  4303f6:	mov    r12,QWORD PTR [rsp+0x8]
  4303fb:	sub    r13,rdi
  4303fe:	cmp    r13,0x4
  430402:	ja     430440 <flatcc_json_printer_union_field@@Base+0x2a0>
  430404:	lea    rbx,[rip+0x8aa1]        # 438eac <flatcc_builder_padding_base@@Base+0x348c>
  43040b:	mov    ebp,0x5
  430410:	mov    rsi,rbx
  430413:	mov    rdx,r13
  430416:	call   4060d0 <memcpy@plt>
  43041b:	add    QWORD PTR [r15+0x28],r13
  43041f:	add    rbx,r13
  430422:	sub    rbp,r13
  430425:	mov    rdi,r15
  430428:	xor    esi,esi
  43042a:	call   QWORD PTR [r15+0x48]
  43042e:	mov    r13,QWORD PTR [r15+0x20]
  430432:	mov    rdi,QWORD PTR [r15+0x28]
  430436:	sub    r13,rdi
  430439:	cmp    rbp,r13
  43043c:	ja     430410 <flatcc_json_printer_union_field@@Base+0x270>
  43043e:	jmp    43044c <flatcc_json_printer_union_field@@Base+0x2ac>
  430440:	mov    ebp,0x5
  430445:	lea    rbx,[rip+0x8a60]        # 438eac <flatcc_builder_padding_base@@Base+0x348c>
  43044c:	mov    r13,QWORD PTR [rsp+0x10]
  430451:	mov    rsi,rbx
  430454:	mov    rdx,rbp
  430457:	call   4060d0 <memcpy@plt>
  43045c:	mov    rax,QWORD PTR [r15+0x28]
  430460:	lea    rcx,[rax+rbp*1]
  430464:	mov    QWORD PTR [r15+0x28],rcx
  430468:	mov    BYTE PTR [rax+rbp*1],0x22
  43046c:	mov    rax,QWORD PTR [r15+0x28]
  430470:	cmp    BYTE PTR [r15+0x32],0x1
  430475:	adc    rax,0x0
  430479:	lea    rcx,[rax+0x1]
  43047d:	mov    QWORD PTR [r15+0x28],rcx
  430481:	mov    BYTE PTR [rax],0x3a
  430484:	mov    rax,QWORD PTR [r15+0x28]
  430488:	mov    BYTE PTR [rax],0x20
  43048b:	mov    rax,QWORD PTR [r15+0x28]
  43048f:	cmp    BYTE PTR [r15+0x31],0x1
  430494:	sbb    rax,0xffffffffffffffff
  430498:	mov    QWORD PTR [r15+0x28],rax
  43049c:	cmp    BYTE PTR [r15+0x33],0x0
  4304a1:	je     4304e0 <flatcc_json_printer_union_field@@Base+0x340>
  4304a3:	cmp    r13b,0x64
  4304a7:	jb     4304ed <flatcc_json_printer_union_field@@Base+0x34d>
  4304a9:	mov    BYTE PTR [rax+0x3],0x0
  4304ad:	movzx  ecx,r13b
  4304b1:	lea    edx,[rcx+rcx*4]
  4304b4:	lea    ecx,[rcx+rdx*8]
  4304b7:	shr    ecx,0xc
  4304ba:	imul   edx,ecx,0x64
  4304bd:	mov    ebx,r13d
  4304c0:	sub    bl,dl
  4304c2:	movzx  edx,bl
  4304c5:	lea    rsi,[rip+0x8d24]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  4304cc:	movzx  edx,WORD PTR [rsi+rdx*2]
  4304d0:	mov    WORD PTR [rax+0x1],dx
  4304d4:	or     cl,0x30
  4304d7:	mov    BYTE PTR [rax],cl
  4304d9:	mov    eax,0x3
  4304de:	jmp    430533 <flatcc_json_printer_union_field@@Base+0x393>
  4304e0:	movzx  esi,r13b
  4304e4:	mov    rdi,r15
  4304e7:	call   QWORD PTR [rsp+0x18]
  4304eb:	jmp    430537 <flatcc_json_printer_union_field@@Base+0x397>
  4304ed:	cmp    r13b,0xa
  4304f1:	jb     430524 <flatcc_json_printer_union_field@@Base+0x384>
  4304f3:	mov    BYTE PTR [rax+0x2],0x0
  4304f7:	movzx  ecx,r13b
  4304fb:	lea    edx,[rcx+rcx*4]
  4304fe:	lea    ecx,[rcx+rdx*8]
  430501:	shr    ecx,0xc
  430504:	imul   ecx,ecx,0x64
  430507:	mov    edx,r13d
  43050a:	sub    dl,cl
  43050c:	movzx  ecx,dl
  43050f:	lea    rdx,[rip+0x8cda]        # 4391f0 <flatcc_builder_padding_base@@Base+0x37d0>
  430516:	movzx  ecx,WORD PTR [rdx+rcx*2]
  43051a:	mov    WORD PTR [rax],cx
  43051d:	mov    eax,0x2
  430522:	jmp    430533 <flatcc_json_printer_union_field@@Base+0x393>
  430524:	mov    BYTE PTR [rax+0x1],0x0
  430528:	lea    ecx,[r13+0x30]
  43052c:	mov    BYTE PTR [rax],cl
  43052e:	mov    eax,0x1
  430533:	add    QWORD PTR [r15+0x28],rax
  430537:	mov    rcx,QWORD PTR [rsp]
  43053b:	test   r13b,r13b
  43053e:	je     430587 <flatcc_json_printer_union_field@@Base+0x3e7>
  430540:	mov    rsi,r12
  430543:	mov    r12,QWORD PTR [rsp+0x70]
  430548:	lea    rbx,[rsp+0x28]
  43054d:	mov    rax,QWORD PTR [r15+0x28]
  430551:	mov    rbp,rcx
  430554:	lea    rcx,[rax+0x1]
  430558:	mov    QWORD PTR [r15+0x28],rcx
  43055c:	mov    BYTE PTR [rax],0x2c
  43055f:	mov    rdi,r15
  430562:	mov    rdx,QWORD PTR [rsp+0x20]
  430567:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  43056c:	mov    eax,DWORD PTR [r14+0x14]
  430570:	mov    DWORD PTR [rsp+0x30],eax
  430574:	mov    BYTE PTR [rsp+0x34],r13b
  430579:	mov    QWORD PTR [rsp+0x28],rbp
  43057e:	mov    rdi,r15
  430581:	mov    rsi,rbx
  430584:	call   r12
  430587:	add    rsp,0x38
  43058b:	pop    rbx
  43058c:	pop    r12
  43058e:	pop    r13
  430590:	pop    r14
  430592:	pop    r15
  430594:	pop    rbp
  430595:	ret    
  430596:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004305a0 <flatcc_json_printer_union_table@@Base>:
  4305a0:	push   r15
  4305a2:	push   r14
  4305a4:	push   rbx
  4305a5:	sub    rsp,0x20
  4305a9:	mov    r14,rdi
  4305ac:	mov    eax,DWORD PTR [rsi+0x8]
  4305af:	dec    eax
  4305b1:	je     4306b0 <flatcc_json_printer_union_table@@Base+0x110>
  4305b7:	mov    rcx,QWORD PTR [rsi]
  4305ba:	mov    esi,DWORD PTR [rcx]
  4305bc:	add    rsi,rcx
  4305bf:	inc    DWORD PTR [r14+0x38]
  4305c3:	mov    rcx,QWORD PTR [r14+0x28]
  4305c7:	lea    rdi,[rcx+0x1]
  4305cb:	mov    QWORD PTR [r14+0x28],rdi
  4305cf:	mov    BYTE PTR [rcx],0x7b
  4305d2:	mov    DWORD PTR [rsp+0x18],0x0
  4305da:	mov    DWORD PTR [rsp+0x14],eax
  4305de:	mov    QWORD PTR [rsp],rsi
  4305e2:	movsxd rax,DWORD PTR [rsi]
  4305e5:	sub    rsi,rax
  4305e8:	mov    QWORD PTR [rsp+0x8],rsi
  4305ed:	movzx  eax,WORD PTR [rsi]
  4305f0:	mov    DWORD PTR [rsp+0x10],eax
  4305f4:	mov    rsi,rsp
  4305f7:	mov    rdi,r14
  4305fa:	call   rdx
  4305fc:	cmp    BYTE PTR [r14+0x31],0x0
  430601:	mov    r15,QWORD PTR [r14+0x28]
  430605:	je     4306a2 <flatcc_json_printer_union_table@@Base+0x102>
  43060b:	lea    rax,[r15+0x1]
  43060f:	mov    QWORD PTR [r14+0x28],rax
  430613:	mov    BYTE PTR [r15],0xa
  430617:	movsxd rax,DWORD PTR [r14+0x38]
  43061b:	dec    rax
  43061e:	mov    DWORD PTR [r14+0x38],eax
  430622:	movzx  r15d,BYTE PTR [r14+0x31]
  430627:	imul   r15,rax
  43062b:	mov    rbx,QWORD PTR [r14+0x20]
  43062f:	mov    rdi,QWORD PTR [r14+0x28]
  430633:	lea    rax,[rdi+r15*1]
  430637:	cmp    rax,rbx
  43063a:	jbe    43068d <flatcc_json_printer_union_table@@Base+0xed>
  43063c:	cmp    rdi,rbx
  43063f:	jb     430652 <flatcc_json_printer_union_table@@Base+0xb2>
  430641:	mov    rdi,r14
  430644:	xor    esi,esi
  430646:	call   QWORD PTR [r14+0x48]
  43064a:	mov    rbx,QWORD PTR [r14+0x20]
  43064e:	mov    rdi,QWORD PTR [r14+0x28]
  430652:	sub    rbx,rdi
  430655:	cmp    rbx,r15
  430658:	jae    43068d <flatcc_json_printer_union_table@@Base+0xed>
  43065a:	nop    WORD PTR [rax+rax*1+0x0]
  430660:	mov    esi,0x20
  430665:	mov    rdx,rbx
  430668:	call   406080 <memset@plt>
  43066d:	add    QWORD PTR [r14+0x28],rbx
  430671:	sub    r15,rbx
  430674:	mov    rdi,r14
  430677:	xor    esi,esi
  430679:	call   QWORD PTR [r14+0x48]
  43067d:	mov    rbx,QWORD PTR [r14+0x20]
  430681:	mov    rdi,QWORD PTR [r14+0x28]
  430685:	sub    rbx,rdi
  430688:	cmp    r15,rbx
  43068b:	ja     430660 <flatcc_json_printer_union_table@@Base+0xc0>
  43068d:	mov    esi,0x20
  430692:	mov    rdx,r15
  430695:	call   406080 <memset@plt>
  43069a:	add    r15,QWORD PTR [r14+0x28]
  43069e:	mov    QWORD PTR [r14+0x28],r15
  4306a2:	lea    rax,[r15+0x1]
  4306a6:	mov    QWORD PTR [r14+0x28],rax
  4306aa:	mov    BYTE PTR [r15],0x7d
  4306ae:	jmp    4306bf <flatcc_json_printer_union_table@@Base+0x11f>
  4306b0:	cmp    DWORD PTR [r14+0x3c],0x0
  4306b5:	jne    4306bf <flatcc_json_printer_union_table@@Base+0x11f>
  4306b7:	mov    DWORD PTR [r14+0x3c],0x2
  4306bf:	add    rsp,0x20
  4306c3:	pop    rbx
  4306c4:	pop    r14
  4306c6:	pop    r15
  4306c8:	ret    
  4306c9:	nop    DWORD PTR [rax+0x0]

00000000004306d0 <flatcc_json_printer_union_struct@@Base>:
  4306d0:	push   r15
  4306d2:	push   r14
  4306d4:	push   rbx
  4306d5:	mov    r14,rdi
  4306d8:	inc    DWORD PTR [rdi+0x38]
  4306db:	mov    rax,QWORD PTR [rdi+0x28]
  4306df:	lea    rcx,[rax+0x1]
  4306e3:	mov    QWORD PTR [rdi+0x28],rcx
  4306e7:	mov    BYTE PTR [rax],0x7b
  4306ea:	mov    rax,QWORD PTR [rsi]
  4306ed:	mov    esi,DWORD PTR [rax]
  4306ef:	add    rsi,rax
  4306f2:	call   rdx
  4306f4:	cmp    BYTE PTR [r14+0x31],0x0
  4306f9:	mov    r15,QWORD PTR [r14+0x28]
  4306fd:	je     4307a2 <flatcc_json_printer_union_struct@@Base+0xd2>
  430703:	lea    rax,[r15+0x1]
  430707:	mov    QWORD PTR [r14+0x28],rax
  43070b:	mov    BYTE PTR [r15],0xa
  43070f:	movsxd rax,DWORD PTR [r14+0x38]
  430713:	dec    rax
  430716:	mov    DWORD PTR [r14+0x38],eax
  43071a:	movzx  r15d,BYTE PTR [r14+0x31]
  43071f:	imul   r15,rax
  430723:	mov    rbx,QWORD PTR [r14+0x20]
  430727:	mov    rdi,QWORD PTR [r14+0x28]
  43072b:	lea    rax,[rdi+r15*1]
  43072f:	cmp    rax,rbx
  430732:	jbe    43078d <flatcc_json_printer_union_struct@@Base+0xbd>
  430734:	cmp    rdi,rbx
  430737:	jb     43074a <flatcc_json_printer_union_struct@@Base+0x7a>
  430739:	mov    rdi,r14
  43073c:	xor    esi,esi
  43073e:	call   QWORD PTR [r14+0x48]
  430742:	mov    rbx,QWORD PTR [r14+0x20]
  430746:	mov    rdi,QWORD PTR [r14+0x28]
  43074a:	sub    rbx,rdi
  43074d:	cmp    rbx,r15
  430750:	jae    43078d <flatcc_json_printer_union_struct@@Base+0xbd>
  430752:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43075c:	nop    DWORD PTR [rax+0x0]
  430760:	mov    esi,0x20
  430765:	mov    rdx,rbx
  430768:	call   406080 <memset@plt>
  43076d:	add    QWORD PTR [r14+0x28],rbx
  430771:	sub    r15,rbx
  430774:	mov    rdi,r14
  430777:	xor    esi,esi
  430779:	call   QWORD PTR [r14+0x48]
  43077d:	mov    rbx,QWORD PTR [r14+0x20]
  430781:	mov    rdi,QWORD PTR [r14+0x28]
  430785:	sub    rbx,rdi
  430788:	cmp    r15,rbx
  43078b:	ja     430760 <flatcc_json_printer_union_struct@@Base+0x90>
  43078d:	mov    esi,0x20
  430792:	mov    rdx,r15
  430795:	call   406080 <memset@plt>
  43079a:	add    r15,QWORD PTR [r14+0x28]
  43079e:	mov    QWORD PTR [r14+0x28],r15
  4307a2:	lea    rax,[r15+0x1]
  4307a6:	mov    QWORD PTR [r14+0x28],rax
  4307aa:	mov    BYTE PTR [r15],0x7d
  4307ae:	pop    rbx
  4307af:	pop    r14
  4307b1:	pop    r15
  4307b3:	ret    
  4307b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307be:	xchg   ax,ax

00000000004307c0 <flatcc_json_printer_union_string@@Base>:
  4307c0:	mov    rax,QWORD PTR [rsi]
  4307c3:	mov    ecx,DWORD PTR [rax]
  4307c5:	mov    edx,DWORD PTR [rax+rcx*1]
  4307c8:	lea    rsi,[rax+rcx*1]
  4307cc:	add    rsi,0x4
  4307d0:	jmp    4269c0 <flatcc_json_printer_string@@Base+0x10>
  4307d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307df:	nop

00000000004307e0 <flatcc_json_printer_embedded_struct_field@@Base>:
  4307e0:	push   r15
  4307e2:	push   r14
  4307e4:	push   r12
  4307e6:	push   rbx
  4307e7:	push   rax
  4307e8:	mov    r15,rcx
  4307eb:	mov    rbx,rdx
  4307ee:	mov    r14,rdi
  4307f1:	mov    r12,QWORD PTR [rsp+0x30]
  4307f6:	test   esi,esi
  4307f8:	je     430809 <flatcc_json_printer_embedded_struct_field@@Base+0x29>
  4307fa:	mov    rax,QWORD PTR [r14+0x28]
  4307fe:	lea    rcx,[rax+0x1]
  430802:	mov    QWORD PTR [r14+0x28],rcx
  430806:	mov    BYTE PTR [rax],0x2c
  430809:	movsxd rdx,r9d
  43080c:	mov    rdi,r14
  43080f:	mov    rsi,r8
  430812:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  430817:	inc    DWORD PTR [r14+0x38]
  43081b:	mov    rax,QWORD PTR [r14+0x28]
  43081f:	lea    rcx,[rax+0x1]
  430823:	mov    QWORD PTR [r14+0x28],rcx
  430827:	mov    BYTE PTR [rax],0x7b
  43082a:	add    rbx,r15
  43082d:	mov    rdi,r14
  430830:	mov    rsi,rbx
  430833:	call   r12
  430836:	cmp    BYTE PTR [r14+0x31],0x0
  43083b:	mov    r15,QWORD PTR [r14+0x28]
  43083f:	je     4308e2 <flatcc_json_printer_embedded_struct_field@@Base+0x102>
  430845:	lea    rax,[r15+0x1]
  430849:	mov    QWORD PTR [r14+0x28],rax
  43084d:	mov    BYTE PTR [r15],0xa
  430851:	movsxd rax,DWORD PTR [r14+0x38]
  430855:	dec    rax
  430858:	mov    DWORD PTR [r14+0x38],eax
  43085c:	movzx  r15d,BYTE PTR [r14+0x31]
  430861:	imul   r15,rax
  430865:	mov    rbx,QWORD PTR [r14+0x20]
  430869:	mov    rdi,QWORD PTR [r14+0x28]
  43086d:	lea    rax,[rdi+r15*1]
  430871:	cmp    rax,rbx
  430874:	jbe    4308cd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  430876:	cmp    rdi,rbx
  430879:	jb     43088c <flatcc_json_printer_embedded_struct_field@@Base+0xac>
  43087b:	mov    rdi,r14
  43087e:	xor    esi,esi
  430880:	call   QWORD PTR [r14+0x48]
  430884:	mov    rbx,QWORD PTR [r14+0x20]
  430888:	mov    rdi,QWORD PTR [r14+0x28]
  43088c:	sub    rbx,rdi
  43088f:	cmp    rbx,r15
  430892:	jae    4308cd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  430894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43089e:	xchg   ax,ax
  4308a0:	mov    esi,0x20
  4308a5:	mov    rdx,rbx
  4308a8:	call   406080 <memset@plt>
  4308ad:	add    QWORD PTR [r14+0x28],rbx
  4308b1:	sub    r15,rbx
  4308b4:	mov    rdi,r14
  4308b7:	xor    esi,esi
  4308b9:	call   QWORD PTR [r14+0x48]
  4308bd:	mov    rbx,QWORD PTR [r14+0x20]
  4308c1:	mov    rdi,QWORD PTR [r14+0x28]
  4308c5:	sub    rbx,rdi
  4308c8:	cmp    r15,rbx
  4308cb:	ja     4308a0 <flatcc_json_printer_embedded_struct_field@@Base+0xc0>
  4308cd:	mov    esi,0x20
  4308d2:	mov    rdx,r15
  4308d5:	call   406080 <memset@plt>
  4308da:	add    r15,QWORD PTR [r14+0x28]
  4308de:	mov    QWORD PTR [r14+0x28],r15
  4308e2:	lea    rax,[r15+0x1]
  4308e6:	mov    QWORD PTR [r14+0x28],rax
  4308ea:	mov    BYTE PTR [r15],0x7d
  4308ee:	add    rsp,0x8
  4308f2:	pop    rbx
  4308f3:	pop    r12
  4308f5:	pop    r14
  4308f7:	pop    r15
  4308f9:	ret    
  4308fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000430900 <flatcc_json_printer_struct_field@@Base>:
  430900:	push   r15
  430902:	push   r14
  430904:	push   rbx
  430905:	lea    eax,[rdx+rdx*1]
  430908:	add    eax,0x4
  43090b:	cmp    eax,DWORD PTR [rsi+0x10]
  43090e:	jge    430a2e <flatcc_json_printer_struct_field@@Base+0x12e>
  430914:	mov    rdx,QWORD PTR [rsi+0x8]
  430918:	mov    eax,eax
  43091a:	movzx  ebx,WORD PTR [rdx+rax*1]
  43091e:	test   rbx,rbx
  430921:	je     430a2e <flatcc_json_printer_struct_field@@Base+0x12e>
  430927:	add    rbx,QWORD PTR [rsi]
  43092a:	je     430a2e <flatcc_json_printer_struct_field@@Base+0x12e>
  430930:	mov    r15,r9
  430933:	mov    r14,rdi
  430936:	mov    eax,DWORD PTR [rsi+0x18]
  430939:	lea    edx,[rax+0x1]
  43093c:	mov    DWORD PTR [rsi+0x18],edx
  43093f:	test   eax,eax
  430941:	je     430952 <flatcc_json_printer_struct_field@@Base+0x52>
  430943:	mov    rax,QWORD PTR [r14+0x28]
  430947:	lea    rdx,[rax+0x1]
  43094b:	mov    QWORD PTR [r14+0x28],rdx
  43094f:	mov    BYTE PTR [rax],0x2c
  430952:	movsxd rdx,r8d
  430955:	mov    rdi,r14
  430958:	mov    rsi,rcx
  43095b:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  430960:	inc    DWORD PTR [r14+0x38]
  430964:	mov    rax,QWORD PTR [r14+0x28]
  430968:	lea    rcx,[rax+0x1]
  43096c:	mov    QWORD PTR [r14+0x28],rcx
  430970:	mov    BYTE PTR [rax],0x7b
  430973:	mov    rdi,r14
  430976:	mov    rsi,rbx
  430979:	call   r15
  43097c:	cmp    BYTE PTR [r14+0x31],0x0
  430981:	mov    r15,QWORD PTR [r14+0x28]
  430985:	je     430a22 <flatcc_json_printer_struct_field@@Base+0x122>
  43098b:	lea    rax,[r15+0x1]
  43098f:	mov    QWORD PTR [r14+0x28],rax
  430993:	mov    BYTE PTR [r15],0xa
  430997:	movsxd rax,DWORD PTR [r14+0x38]
  43099b:	dec    rax
  43099e:	mov    DWORD PTR [r14+0x38],eax
  4309a2:	movzx  r15d,BYTE PTR [r14+0x31]
  4309a7:	imul   r15,rax
  4309ab:	mov    rbx,QWORD PTR [r14+0x20]
  4309af:	mov    rdi,QWORD PTR [r14+0x28]
  4309b3:	lea    rax,[rdi+r15*1]
  4309b7:	cmp    rax,rbx
  4309ba:	jbe    430a0d <flatcc_json_printer_struct_field@@Base+0x10d>
  4309bc:	cmp    rdi,rbx
  4309bf:	jb     4309d2 <flatcc_json_printer_struct_field@@Base+0xd2>
  4309c1:	mov    rdi,r14
  4309c4:	xor    esi,esi
  4309c6:	call   QWORD PTR [r14+0x48]
  4309ca:	mov    rbx,QWORD PTR [r14+0x20]
  4309ce:	mov    rdi,QWORD PTR [r14+0x28]
  4309d2:	sub    rbx,rdi
  4309d5:	cmp    rbx,r15
  4309d8:	jae    430a0d <flatcc_json_printer_struct_field@@Base+0x10d>
  4309da:	nop    WORD PTR [rax+rax*1+0x0]
  4309e0:	mov    esi,0x20
  4309e5:	mov    rdx,rbx
  4309e8:	call   406080 <memset@plt>
  4309ed:	add    QWORD PTR [r14+0x28],rbx
  4309f1:	sub    r15,rbx
  4309f4:	mov    rdi,r14
  4309f7:	xor    esi,esi
  4309f9:	call   QWORD PTR [r14+0x48]
  4309fd:	mov    rbx,QWORD PTR [r14+0x20]
  430a01:	mov    rdi,QWORD PTR [r14+0x28]
  430a05:	sub    rbx,rdi
  430a08:	cmp    r15,rbx
  430a0b:	ja     4309e0 <flatcc_json_printer_struct_field@@Base+0xe0>
  430a0d:	mov    esi,0x20
  430a12:	mov    rdx,r15
  430a15:	call   406080 <memset@plt>
  430a1a:	add    r15,QWORD PTR [r14+0x28]
  430a1e:	mov    QWORD PTR [r14+0x28],r15
  430a22:	lea    rax,[r15+0x1]
  430a26:	mov    QWORD PTR [r14+0x28],rax
  430a2a:	mov    BYTE PTR [r15],0x7d
  430a2e:	pop    rbx
  430a2f:	pop    r14
  430a31:	pop    r15
  430a33:	ret    
  430a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430a3e:	xchg   ax,ax

0000000000430a40 <flatcc_json_printer_struct_as_root@@Base>:
  430a40:	push   r15
  430a42:	push   r14
  430a44:	push   rbx
  430a45:	sub    rsp,0x10
  430a49:	mov    r14,rdi
  430a4c:	mov    DWORD PTR [rsp+0xc],0x0
  430a54:	test   rsi,rsi
  430a57:	je     430bb8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  430a5d:	cmp    rdx,0x7
  430a61:	jbe    430bb8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  430a67:	mov    r15,r8
  430a6a:	mov    rbx,rsi
  430a6d:	test   rcx,rcx
  430a70:	je     430a95 <flatcc_json_printer_struct_as_root@@Base+0x55>
  430a72:	lea    rdi,[rsp+0xc]
  430a77:	mov    edx,0x4
  430a7c:	mov    rsi,rcx
  430a7f:	call   406040 <strncpy@plt>
  430a84:	mov    eax,DWORD PTR [rsp+0xc]
  430a88:	test   eax,eax
  430a8a:	je     430a95 <flatcc_json_printer_struct_as_root@@Base+0x55>
  430a8c:	cmp    DWORD PTR [rbx+0x4],eax
  430a8f:	jne    430be6 <flatcc_json_printer_struct_as_root@@Base+0x1a6>
  430a95:	inc    DWORD PTR [r14+0x38]
  430a99:	mov    rax,QWORD PTR [r14+0x28]
  430a9d:	lea    rcx,[rax+0x1]
  430aa1:	mov    QWORD PTR [r14+0x28],rcx
  430aa5:	mov    BYTE PTR [rax],0x7b
  430aa8:	mov    esi,DWORD PTR [rbx]
  430aaa:	add    rsi,rbx
  430aad:	mov    rdi,r14
  430ab0:	call   r15
  430ab3:	cmp    BYTE PTR [r14+0x31],0x0
  430ab8:	mov    r15,QWORD PTR [r14+0x28]
  430abc:	je     430b62 <flatcc_json_printer_struct_as_root@@Base+0x122>
  430ac2:	lea    rax,[r15+0x1]
  430ac6:	mov    QWORD PTR [r14+0x28],rax
  430aca:	mov    BYTE PTR [r15],0xa
  430ace:	movsxd rax,DWORD PTR [r14+0x38]
  430ad2:	dec    rax
  430ad5:	mov    DWORD PTR [r14+0x38],eax
  430ad9:	movzx  r15d,BYTE PTR [r14+0x31]
  430ade:	imul   r15,rax
  430ae2:	mov    rbx,QWORD PTR [r14+0x20]
  430ae6:	mov    rdi,QWORD PTR [r14+0x28]
  430aea:	lea    rax,[rdi+r15*1]
  430aee:	cmp    rax,rbx
  430af1:	jbe    430b4d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  430af3:	cmp    rdi,rbx
  430af6:	jb     430b09 <flatcc_json_printer_struct_as_root@@Base+0xc9>
  430af8:	mov    rdi,r14
  430afb:	xor    esi,esi
  430afd:	call   QWORD PTR [r14+0x48]
  430b01:	mov    rbx,QWORD PTR [r14+0x20]
  430b05:	mov    rdi,QWORD PTR [r14+0x28]
  430b09:	sub    rbx,rdi
  430b0c:	cmp    rbx,r15
  430b0f:	jae    430b4d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  430b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  430b20:	mov    esi,0x20
  430b25:	mov    rdx,rbx
  430b28:	call   406080 <memset@plt>
  430b2d:	add    QWORD PTR [r14+0x28],rbx
  430b31:	sub    r15,rbx
  430b34:	mov    rdi,r14
  430b37:	xor    esi,esi
  430b39:	call   QWORD PTR [r14+0x48]
  430b3d:	mov    rbx,QWORD PTR [r14+0x20]
  430b41:	mov    rdi,QWORD PTR [r14+0x28]
  430b45:	sub    rbx,rdi
  430b48:	cmp    r15,rbx
  430b4b:	ja     430b20 <flatcc_json_printer_struct_as_root@@Base+0xe0>
  430b4d:	mov    esi,0x20
  430b52:	mov    rdx,r15
  430b55:	call   406080 <memset@plt>
  430b5a:	add    r15,QWORD PTR [r14+0x28]
  430b5e:	mov    QWORD PTR [r14+0x28],r15
  430b62:	lea    rax,[r15+0x1]
  430b66:	mov    QWORD PTR [r14+0x28],rax
  430b6a:	mov    BYTE PTR [r15],0x7d
  430b6e:	cmp    BYTE PTR [r14+0x31],0x0
  430b73:	je     430b8b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  430b75:	cmp    DWORD PTR [r14+0x38],0x0
  430b7a:	jne    430b8b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  430b7c:	mov    rax,QWORD PTR [r14+0x28]
  430b80:	lea    rcx,[rax+0x1]
  430b84:	mov    QWORD PTR [r14+0x28],rcx
  430b88:	mov    BYTE PTR [rax],0xa
  430b8b:	mov    rdi,r14
  430b8e:	mov    esi,0x1
  430b93:	call   QWORD PTR [r14+0x48]
  430b97:	mov    eax,0xffffffff
  430b9c:	cmp    DWORD PTR [r14+0x3c],0x0
  430ba1:	jne    430bae <flatcc_json_printer_struct_as_root@@Base+0x16e>
  430ba3:	mov    eax,DWORD PTR [r14+0x28]
  430ba7:	add    eax,DWORD PTR [r14+0x18]
  430bab:	sub    eax,DWORD PTR [r14]
  430bae:	add    rsp,0x10
  430bb2:	pop    rbx
  430bb3:	pop    r14
  430bb5:	pop    r15
  430bb7:	ret    
  430bb8:	cmp    DWORD PTR [r14+0x3c],0x0
  430bbd:	jne    430bc7 <flatcc_json_printer_struct_as_root@@Base+0x187>
  430bbf:	mov    DWORD PTR [r14+0x3c],0x1
  430bc7:	lea    rdi,[rip+0x8592]        # 439160 <flatcc_builder_padding_base@@Base+0x3740>
  430bce:	lea    rsi,[rip+0x81a8]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  430bd5:	lea    rcx,[rip+0x85a3]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  430bdc:	mov    edx,0x3fb
  430be1:	call   406070 <__assert_fail@plt>
  430be6:	cmp    DWORD PTR [r14+0x3c],0x0
  430beb:	jne    430bf5 <flatcc_json_printer_struct_as_root@@Base+0x1b5>
  430bed:	mov    DWORD PTR [r14+0x3c],0x1
  430bf5:	lea    rdi,[rip+0x85d2]        # 4391ce <flatcc_builder_padding_base@@Base+0x37ae>
  430bfc:	lea    rsi,[rip+0x817a]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  430c03:	lea    rcx,[rip+0x8575]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  430c0a:	mov    edx,0x404
  430c0f:	call   406070 <__assert_fail@plt>
  430c14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c1e:	xchg   ax,ax

0000000000430c20 <flatcc_json_printer_table_as_root@@Base>:
  430c20:	push   r15
  430c22:	push   r14
  430c24:	push   rbx
  430c25:	sub    rsp,0x20
  430c29:	mov    r14,rdi
  430c2c:	mov    DWORD PTR [rsp],0x0
  430c33:	test   rsi,rsi
  430c36:	je     430db8 <flatcc_json_printer_table_as_root@@Base+0x198>
  430c3c:	cmp    rdx,0x7
  430c40:	jbe    430db8 <flatcc_json_printer_table_as_root@@Base+0x198>
  430c46:	mov    r15,r8
  430c49:	mov    rbx,rsi
  430c4c:	test   rcx,rcx
  430c4f:	je     430c71 <flatcc_json_printer_table_as_root@@Base+0x51>
  430c51:	mov    rdi,rsp
  430c54:	mov    edx,0x4
  430c59:	mov    rsi,rcx
  430c5c:	call   406040 <strncpy@plt>
  430c61:	mov    eax,DWORD PTR [rsp]
  430c64:	test   eax,eax
  430c66:	je     430c71 <flatcc_json_printer_table_as_root@@Base+0x51>
  430c68:	cmp    DWORD PTR [rbx+0x4],eax
  430c6b:	jne    430de6 <flatcc_json_printer_table_as_root@@Base+0x1c6>
  430c71:	mov    eax,DWORD PTR [rbx]
  430c73:	inc    DWORD PTR [r14+0x38]
  430c77:	lea    rcx,[rbx+rax*1]
  430c7b:	mov    rdx,QWORD PTR [r14+0x28]
  430c7f:	lea    rsi,[rdx+0x1]
  430c83:	mov    QWORD PTR [r14+0x28],rsi
  430c87:	mov    BYTE PTR [rdx],0x7b
  430c8a:	mov    QWORD PTR [rsp+0x14],0x63
  430c93:	mov    QWORD PTR [rsp],rcx
  430c97:	movsxd rax,DWORD PTR [rbx+rax*1]
  430c9b:	sub    rcx,rax
  430c9e:	mov    QWORD PTR [rsp+0x8],rcx
  430ca3:	movzx  eax,WORD PTR [rcx]
  430ca6:	mov    DWORD PTR [rsp+0x10],eax
  430caa:	mov    rsi,rsp
  430cad:	mov    rdi,r14
  430cb0:	call   r15
  430cb3:	cmp    BYTE PTR [r14+0x31],0x0
  430cb8:	mov    r15,QWORD PTR [r14+0x28]
  430cbc:	je     430d62 <flatcc_json_printer_table_as_root@@Base+0x142>
  430cc2:	lea    rax,[r15+0x1]
  430cc6:	mov    QWORD PTR [r14+0x28],rax
  430cca:	mov    BYTE PTR [r15],0xa
  430cce:	movsxd rax,DWORD PTR [r14+0x38]
  430cd2:	dec    rax
  430cd5:	mov    DWORD PTR [r14+0x38],eax
  430cd9:	movzx  r15d,BYTE PTR [r14+0x31]
  430cde:	imul   r15,rax
  430ce2:	mov    rbx,QWORD PTR [r14+0x20]
  430ce6:	mov    rdi,QWORD PTR [r14+0x28]
  430cea:	lea    rax,[rdi+r15*1]
  430cee:	cmp    rax,rbx
  430cf1:	jbe    430d4d <flatcc_json_printer_table_as_root@@Base+0x12d>
  430cf3:	cmp    rdi,rbx
  430cf6:	jb     430d09 <flatcc_json_printer_table_as_root@@Base+0xe9>
  430cf8:	mov    rdi,r14
  430cfb:	xor    esi,esi
  430cfd:	call   QWORD PTR [r14+0x48]
  430d01:	mov    rbx,QWORD PTR [r14+0x20]
  430d05:	mov    rdi,QWORD PTR [r14+0x28]
  430d09:	sub    rbx,rdi
  430d0c:	cmp    rbx,r15
  430d0f:	jae    430d4d <flatcc_json_printer_table_as_root@@Base+0x12d>
  430d11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  430d20:	mov    esi,0x20
  430d25:	mov    rdx,rbx
  430d28:	call   406080 <memset@plt>
  430d2d:	add    QWORD PTR [r14+0x28],rbx
  430d31:	sub    r15,rbx
  430d34:	mov    rdi,r14
  430d37:	xor    esi,esi
  430d39:	call   QWORD PTR [r14+0x48]
  430d3d:	mov    rbx,QWORD PTR [r14+0x20]
  430d41:	mov    rdi,QWORD PTR [r14+0x28]
  430d45:	sub    rbx,rdi
  430d48:	cmp    r15,rbx
  430d4b:	ja     430d20 <flatcc_json_printer_table_as_root@@Base+0x100>
  430d4d:	mov    esi,0x20
  430d52:	mov    rdx,r15
  430d55:	call   406080 <memset@plt>
  430d5a:	add    r15,QWORD PTR [r14+0x28]
  430d5e:	mov    QWORD PTR [r14+0x28],r15
  430d62:	lea    rax,[r15+0x1]
  430d66:	mov    QWORD PTR [r14+0x28],rax
  430d6a:	mov    BYTE PTR [r15],0x7d
  430d6e:	cmp    BYTE PTR [r14+0x31],0x0
  430d73:	je     430d8b <flatcc_json_printer_table_as_root@@Base+0x16b>
  430d75:	cmp    DWORD PTR [r14+0x38],0x0
  430d7a:	jne    430d8b <flatcc_json_printer_table_as_root@@Base+0x16b>
  430d7c:	mov    rax,QWORD PTR [r14+0x28]
  430d80:	lea    rcx,[rax+0x1]
  430d84:	mov    QWORD PTR [r14+0x28],rcx
  430d88:	mov    BYTE PTR [rax],0xa
  430d8b:	mov    rdi,r14
  430d8e:	mov    esi,0x1
  430d93:	call   QWORD PTR [r14+0x48]
  430d97:	mov    eax,0xffffffff
  430d9c:	cmp    DWORD PTR [r14+0x3c],0x0
  430da1:	jne    430dae <flatcc_json_printer_table_as_root@@Base+0x18e>
  430da3:	mov    eax,DWORD PTR [r14+0x28]
  430da7:	add    eax,DWORD PTR [r14+0x18]
  430dab:	sub    eax,DWORD PTR [r14]
  430dae:	add    rsp,0x20
  430db2:	pop    rbx
  430db3:	pop    r14
  430db5:	pop    r15
  430db7:	ret    
  430db8:	cmp    DWORD PTR [r14+0x3c],0x0
  430dbd:	jne    430dc7 <flatcc_json_printer_table_as_root@@Base+0x1a7>
  430dbf:	mov    DWORD PTR [r14+0x3c],0x1
  430dc7:	lea    rdi,[rip+0x8392]        # 439160 <flatcc_builder_padding_base@@Base+0x3740>
  430dce:	lea    rsi,[rip+0x7fa8]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  430dd5:	lea    rcx,[rip+0x83a3]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  430ddc:	mov    edx,0x3fb
  430de1:	call   406070 <__assert_fail@plt>
  430de6:	cmp    DWORD PTR [r14+0x3c],0x0
  430deb:	jne    430df5 <flatcc_json_printer_table_as_root@@Base+0x1d5>
  430ded:	mov    DWORD PTR [r14+0x3c],0x1
  430df5:	lea    rdi,[rip+0x83d2]        # 4391ce <flatcc_builder_padding_base@@Base+0x37ae>
  430dfc:	lea    rsi,[rip+0x7f7a]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  430e03:	lea    rcx,[rip+0x8375]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  430e0a:	mov    edx,0x404
  430e0f:	call   406070 <__assert_fail@plt>
  430e14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430e1e:	xchg   ax,ax

0000000000430e20 <flatcc_json_printer_struct_as_nested_root@@Base>:
  430e20:	push   rbp
  430e21:	push   r15
  430e23:	push   r14
  430e25:	push   r13
  430e27:	push   r12
  430e29:	push   rbx
  430e2a:	push   rax
  430e2b:	lea    eax,[rdx+rdx*1]
  430e2e:	add    eax,0x4
  430e31:	cmp    eax,DWORD PTR [rsi+0x10]
  430e34:	jge    430fad <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  430e3a:	mov    r15,rcx
  430e3d:	mov    rbx,rsi
  430e40:	mov    rcx,QWORD PTR [rsi+0x8]
  430e44:	mov    eax,eax
  430e46:	movzx  eax,WORD PTR [rcx+rax*1]
  430e4a:	test   rax,rax
  430e4d:	je     430fad <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  430e53:	add    rax,QWORD PTR [rbx]
  430e56:	je     430fad <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  430e5c:	mov    r14,rdi
  430e5f:	mov    ebp,DWORD PTR [rax]
  430e61:	mov    ecx,DWORD PTR [rbp+rax*1+0x0]
  430e65:	mov    DWORD PTR [rsp+0x4],0x0
  430e6d:	cmp    ecx,0x8
  430e70:	jb     430fbc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  430e76:	add    rbp,rax
  430e79:	je     430fbc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  430e7f:	mov    r12d,r8d
  430e82:	test   r9,r9
  430e85:	je     430eaa <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  430e87:	lea    rdi,[rsp+0x4]
  430e8c:	mov    edx,0x4
  430e91:	mov    rsi,r9
  430e94:	call   406040 <strncpy@plt>
  430e99:	mov    eax,DWORD PTR [rsp+0x4]
  430e9d:	test   eax,eax
  430e9f:	je     430eaa <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  430ea1:	cmp    DWORD PTR [rbp+0x4],eax
  430ea4:	jne    430fea <flatcc_json_printer_struct_as_nested_root@@Base+0x1ca>
  430eaa:	mov    r13,QWORD PTR [rsp+0x40]
  430eaf:	mov    eax,DWORD PTR [rbx+0x18]
  430eb2:	lea    ecx,[rax+0x1]
  430eb5:	mov    DWORD PTR [rbx+0x18],ecx
  430eb8:	test   eax,eax
  430eba:	je     430ecb <flatcc_json_printer_struct_as_nested_root@@Base+0xab>
  430ebc:	mov    rax,QWORD PTR [r14+0x28]
  430ec0:	lea    rcx,[rax+0x1]
  430ec4:	mov    QWORD PTR [r14+0x28],rcx
  430ec8:	mov    BYTE PTR [rax],0x2c
  430ecb:	movsxd rdx,r12d
  430ece:	mov    rdi,r14
  430ed1:	mov    rsi,r15
  430ed4:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  430ed9:	inc    DWORD PTR [r14+0x38]
  430edd:	mov    rax,QWORD PTR [r14+0x28]
  430ee1:	lea    rcx,[rax+0x1]
  430ee5:	mov    QWORD PTR [r14+0x28],rcx
  430ee9:	mov    BYTE PTR [rax],0x7b
  430eec:	mov    esi,DWORD PTR [rbp+0x0]
  430eef:	add    rsi,rbp
  430ef2:	mov    rdi,r14
  430ef5:	call   r13
  430ef8:	cmp    BYTE PTR [r14+0x31],0x0
  430efd:	mov    rbx,QWORD PTR [r14+0x28]
  430f01:	je     430fa2 <flatcc_json_printer_struct_as_nested_root@@Base+0x182>
  430f07:	lea    rax,[rbx+0x1]
  430f0b:	mov    QWORD PTR [r14+0x28],rax
  430f0f:	mov    BYTE PTR [rbx],0xa
  430f12:	movsxd rax,DWORD PTR [r14+0x38]
  430f16:	dec    rax
  430f19:	mov    DWORD PTR [r14+0x38],eax
  430f1d:	movzx  ebx,BYTE PTR [r14+0x31]
  430f22:	imul   rbx,rax
  430f26:	mov    rbp,QWORD PTR [r14+0x20]
  430f2a:	mov    rdi,QWORD PTR [r14+0x28]
  430f2e:	lea    rax,[rdi+rbx*1]
  430f32:	cmp    rax,rbp
  430f35:	jbe    430f8d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  430f37:	cmp    rdi,rbp
  430f3a:	jb     430f4d <flatcc_json_printer_struct_as_nested_root@@Base+0x12d>
  430f3c:	mov    rdi,r14
  430f3f:	xor    esi,esi
  430f41:	call   QWORD PTR [r14+0x48]
  430f45:	mov    rbp,QWORD PTR [r14+0x20]
  430f49:	mov    rdi,QWORD PTR [r14+0x28]
  430f4d:	sub    rbp,rdi
  430f50:	cmp    rbp,rbx
  430f53:	jae    430f8d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  430f55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f5f:	nop
  430f60:	mov    esi,0x20
  430f65:	mov    rdx,rbp
  430f68:	call   406080 <memset@plt>
  430f6d:	add    QWORD PTR [r14+0x28],rbp
  430f71:	sub    rbx,rbp
  430f74:	mov    rdi,r14
  430f77:	xor    esi,esi
  430f79:	call   QWORD PTR [r14+0x48]
  430f7d:	mov    rbp,QWORD PTR [r14+0x20]
  430f81:	mov    rdi,QWORD PTR [r14+0x28]
  430f85:	sub    rbp,rdi
  430f88:	cmp    rbx,rbp
  430f8b:	ja     430f60 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
  430f8d:	mov    esi,0x20
  430f92:	mov    rdx,rbx
  430f95:	call   406080 <memset@plt>
  430f9a:	add    rbx,QWORD PTR [r14+0x28]
  430f9e:	mov    QWORD PTR [r14+0x28],rbx
  430fa2:	lea    rax,[rbx+0x1]
  430fa6:	mov    QWORD PTR [r14+0x28],rax
  430faa:	mov    BYTE PTR [rbx],0x7d
  430fad:	add    rsp,0x8
  430fb1:	pop    rbx
  430fb2:	pop    r12
  430fb4:	pop    r13
  430fb6:	pop    r14
  430fb8:	pop    r15
  430fba:	pop    rbp
  430fbb:	ret    
  430fbc:	cmp    DWORD PTR [r14+0x3c],0x0
  430fc1:	jne    430fcb <flatcc_json_printer_struct_as_nested_root@@Base+0x1ab>
  430fc3:	mov    DWORD PTR [r14+0x3c],0x1
  430fcb:	lea    rdi,[rip+0x818e]        # 439160 <flatcc_builder_padding_base@@Base+0x3740>
  430fd2:	lea    rsi,[rip+0x7da4]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  430fd9:	lea    rcx,[rip+0x819f]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  430fe0:	mov    edx,0x3fb
  430fe5:	call   406070 <__assert_fail@plt>
  430fea:	cmp    DWORD PTR [r14+0x3c],0x0
  430fef:	jne    430ff9 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d9>
  430ff1:	mov    DWORD PTR [r14+0x3c],0x1
  430ff9:	lea    rdi,[rip+0x81ce]        # 4391ce <flatcc_builder_padding_base@@Base+0x37ae>
  431000:	lea    rsi,[rip+0x7d76]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  431007:	lea    rcx,[rip+0x8171]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  43100e:	mov    edx,0x404
  431013:	call   406070 <__assert_fail@plt>
  431018:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000431020 <flatcc_json_printer_table_as_nested_root@@Base>:
  431020:	push   rbp
  431021:	push   r15
  431023:	push   r14
  431025:	push   r13
  431027:	push   r12
  431029:	push   rbx
  43102a:	sub    rsp,0x28
  43102e:	lea    eax,[rdx+rdx*1]
  431031:	add    eax,0x4
  431034:	cmp    eax,DWORD PTR [rsi+0x10]
  431037:	jge    4311fe <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43103d:	mov    r15,rcx
  431040:	mov    rbx,rsi
  431043:	mov    rcx,QWORD PTR [rsi+0x8]
  431047:	mov    eax,eax
  431049:	movzx  ebp,WORD PTR [rcx+rax*1]
  43104d:	test   rbp,rbp
  431050:	je     4311fe <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  431056:	add    rbp,QWORD PTR [rbx]
  431059:	je     4311fe <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43105f:	mov    r14,rdi
  431062:	mov    r13d,DWORD PTR [rbp+0x0]
  431066:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  43106b:	mov    DWORD PTR [rsp+0x8],0x0
  431073:	cmp    eax,0x7
  431076:	jbe    43120d <flatcc_json_printer_table_as_nested_root@@Base+0x1ed>
  43107c:	mov    r12d,r8d
  43107f:	test   r9,r9
  431082:	je     4310ad <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  431084:	lea    rdi,[rsp+0x8]
  431089:	mov    edx,0x4
  43108e:	mov    rsi,r9
  431091:	call   406040 <strncpy@plt>
  431096:	mov    eax,DWORD PTR [rsp+0x8]
  43109a:	test   eax,eax
  43109c:	je     4310ad <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  43109e:	mov    rcx,r13
  4310a1:	add    rcx,rbp
  4310a4:	cmp    DWORD PTR [rcx+0x8],eax
  4310a7:	jne    43123b <flatcc_json_printer_table_as_nested_root@@Base+0x21b>
  4310ad:	mov    eax,DWORD PTR [rbx+0x18]
  4310b0:	lea    ecx,[rax+0x1]
  4310b3:	mov    DWORD PTR [rbx+0x18],ecx
  4310b6:	test   eax,eax
  4310b8:	je     4310c9 <flatcc_json_printer_table_as_nested_root@@Base+0xa9>
  4310ba:	mov    rax,QWORD PTR [r14+0x28]
  4310be:	lea    rcx,[rax+0x1]
  4310c2:	mov    QWORD PTR [r14+0x28],rcx
  4310c6:	mov    BYTE PTR [rax],0x2c
  4310c9:	movsxd rdx,r12d
  4310cc:	mov    rdi,r14
  4310cf:	mov    rsi,r15
  4310d2:	call   427b30 <flatcc_json_printer_string_field@@Base+0x80>
  4310d7:	mov    eax,DWORD PTR [rbx+0x14]
  4310da:	dec    eax
  4310dc:	je     4311ef <flatcc_json_printer_table_as_nested_root@@Base+0x1cf>
  4310e2:	lea    rcx,[rbp*1+0x4]
  4310ea:	add    rcx,r13
  4310ed:	mov    rdx,QWORD PTR [rsp+0x60]
  4310f2:	mov    esi,DWORD PTR [rcx]
  4310f4:	add    rsi,rcx
  4310f7:	inc    DWORD PTR [r14+0x38]
  4310fb:	mov    rcx,QWORD PTR [r14+0x28]
  4310ff:	lea    rdi,[rcx+0x1]
  431103:	mov    QWORD PTR [r14+0x28],rdi
  431107:	mov    BYTE PTR [rcx],0x7b
  43110a:	mov    DWORD PTR [rsp+0x20],0x0
  431112:	mov    DWORD PTR [rsp+0x1c],eax
  431116:	mov    QWORD PTR [rsp+0x8],rsi
  43111b:	movsxd rax,DWORD PTR [rsi]
  43111e:	sub    rsi,rax
  431121:	mov    QWORD PTR [rsp+0x10],rsi
  431126:	movzx  eax,WORD PTR [rsi]
  431129:	mov    DWORD PTR [rsp+0x18],eax
  43112d:	lea    rsi,[rsp+0x8]
  431132:	mov    rdi,r14
  431135:	call   rdx
  431137:	cmp    BYTE PTR [r14+0x31],0x0
  43113c:	mov    rbx,QWORD PTR [r14+0x28]
  431140:	je     4311e2 <flatcc_json_printer_table_as_nested_root@@Base+0x1c2>
  431146:	lea    rax,[rbx+0x1]
  43114a:	mov    QWORD PTR [r14+0x28],rax
  43114e:	mov    BYTE PTR [rbx],0xa
  431151:	movsxd rax,DWORD PTR [r14+0x38]
  431155:	dec    rax
  431158:	mov    DWORD PTR [r14+0x38],eax
  43115c:	movzx  ebx,BYTE PTR [r14+0x31]
  431161:	imul   rbx,rax
  431165:	mov    rbp,QWORD PTR [r14+0x20]
  431169:	mov    rdi,QWORD PTR [r14+0x28]
  43116d:	lea    rax,[rdi+rbx*1]
  431171:	cmp    rax,rbp
  431174:	jbe    4311cd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  431176:	cmp    rdi,rbp
  431179:	jb     43118c <flatcc_json_printer_table_as_nested_root@@Base+0x16c>
  43117b:	mov    rdi,r14
  43117e:	xor    esi,esi
  431180:	call   QWORD PTR [r14+0x48]
  431184:	mov    rbp,QWORD PTR [r14+0x20]
  431188:	mov    rdi,QWORD PTR [r14+0x28]
  43118c:	sub    rbp,rdi
  43118f:	cmp    rbp,rbx
  431192:	jae    4311cd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  431194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43119e:	xchg   ax,ax
  4311a0:	mov    esi,0x20
  4311a5:	mov    rdx,rbp
  4311a8:	call   406080 <memset@plt>
  4311ad:	add    QWORD PTR [r14+0x28],rbp
  4311b1:	sub    rbx,rbp
  4311b4:	mov    rdi,r14
  4311b7:	xor    esi,esi
  4311b9:	call   QWORD PTR [r14+0x48]
  4311bd:	mov    rbp,QWORD PTR [r14+0x20]
  4311c1:	mov    rdi,QWORD PTR [r14+0x28]
  4311c5:	sub    rbp,rdi
  4311c8:	cmp    rbx,rbp
  4311cb:	ja     4311a0 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
  4311cd:	mov    esi,0x20
  4311d2:	mov    rdx,rbx
  4311d5:	call   406080 <memset@plt>
  4311da:	add    rbx,QWORD PTR [r14+0x28]
  4311de:	mov    QWORD PTR [r14+0x28],rbx
  4311e2:	lea    rax,[rbx+0x1]
  4311e6:	mov    QWORD PTR [r14+0x28],rax
  4311ea:	mov    BYTE PTR [rbx],0x7d
  4311ed:	jmp    4311fe <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  4311ef:	cmp    DWORD PTR [r14+0x3c],0x0
  4311f4:	jne    4311fe <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  4311f6:	mov    DWORD PTR [r14+0x3c],0x2
  4311fe:	add    rsp,0x28
  431202:	pop    rbx
  431203:	pop    r12
  431205:	pop    r13
  431207:	pop    r14
  431209:	pop    r15
  43120b:	pop    rbp
  43120c:	ret    
  43120d:	cmp    DWORD PTR [r14+0x3c],0x0
  431212:	jne    43121c <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
  431214:	mov    DWORD PTR [r14+0x3c],0x1
  43121c:	lea    rdi,[rip+0x7f3d]        # 439160 <flatcc_builder_padding_base@@Base+0x3740>
  431223:	lea    rsi,[rip+0x7b53]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  43122a:	lea    rcx,[rip+0x7f4e]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  431231:	mov    edx,0x3fb
  431236:	call   406070 <__assert_fail@plt>
  43123b:	cmp    DWORD PTR [r14+0x3c],0x0
  431240:	jne    43124a <flatcc_json_printer_table_as_nested_root@@Base+0x22a>
  431242:	mov    DWORD PTR [r14+0x3c],0x1
  43124a:	lea    rdi,[rip+0x7f7d]        # 4391ce <flatcc_builder_padding_base@@Base+0x37ae>
  431251:	lea    rsi,[rip+0x7b25]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  431258:	lea    rcx,[rip+0x7f20]        # 43917f <flatcc_builder_padding_base@@Base+0x375f>
  43125f:	mov    edx,0x404
  431264:	call   406070 <__assert_fail@plt>
  431269:	nop    DWORD PTR [rax+0x0]

0000000000431270 <flatcc_json_printer_init@@Base>:
  431270:	push   rbx
  431271:	mov    rbx,rdi
  431274:	vxorps xmm0,xmm0,xmm0
  431278:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  43127d:	vmovups YMMWORD PTR [rdi],ymm0
  431281:	test   rsi,rsi
  431284:	jne    431290 <flatcc_json_printer_init@@Base+0x20>
  431286:	mov    rax,QWORD PTR [rip+0xed53]        # 43ffe0 <stdout@GLIBC_2.2.5>
  43128d:	mov    rsi,QWORD PTR [rax]
  431290:	mov    QWORD PTR [rbx+0x40],rsi
  431294:	lea    rax,[rip+0x45]        # 4312e0 <flatcc_json_printer_init@@Base+0x70>
  43129b:	mov    QWORD PTR [rbx+0x48],rax
  43129f:	mov    edi,0x4040
  4312a4:	vzeroupper 
  4312a7:	call   4060e0 <malloc@plt>
  4312ac:	mov    QWORD PTR [rbx],rax
  4312af:	test   rax,rax
  4312b2:	je     4312d7 <flatcc_json_printer_init@@Base+0x67>
  4312b4:	mov    BYTE PTR [rbx+0x30],0x1
  4312b8:	vmovaps xmm0,XMMWORD PTR [rip+0x73c0]        # 438680 <flatcc_builder_padding_base@@Base+0x2c60>
  4312c0:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4312c5:	mov    QWORD PTR [rbx+0x28],rax
  4312c9:	add    rax,0x4000
  4312cf:	mov    QWORD PTR [rbx+0x20],rax
  4312d3:	xor    eax,eax
  4312d5:	pop    rbx
  4312d6:	ret    
  4312d7:	mov    eax,0xffffffff
  4312dc:	pop    rbx
  4312dd:	ret    
  4312de:	xchg   ax,ax
  4312e0:	push   r15
  4312e2:	push   r14
  4312e4:	push   rbx
  4312e5:	mov    rbx,rdi
  4312e8:	test   esi,esi
  4312ea:	je     4312f2 <flatcc_json_printer_init@@Base+0x82>
  4312ec:	mov    r15,QWORD PTR [rbx+0x28]
  4312f0:	jmp    4312ff <flatcc_json_printer_init@@Base+0x8f>
  4312f2:	mov    r15,QWORD PTR [rbx+0x28]
  4312f6:	mov    r14,r15
  4312f9:	sub    r14,QWORD PTR [rbx+0x20]
  4312fd:	jae    431323 <flatcc_json_printer_init@@Base+0xb3>
  4312ff:	mov    rdi,QWORD PTR [rbx]
  431302:	mov    rcx,QWORD PTR [rbx+0x40]
  431306:	sub    r15,rdi
  431309:	mov    edx,0x1
  43130e:	mov    rsi,r15
  431311:	call   406130 <fwrite@plt>
  431316:	mov    r14,QWORD PTR [rbx]
  431319:	mov    QWORD PTR [rbx+0x28],r14
  43131d:	add    QWORD PTR [rbx+0x18],r15
  431321:	jmp    431359 <flatcc_json_printer_init@@Base+0xe9>
  431323:	mov    rdi,QWORD PTR [rbx]
  431326:	mov    rsi,QWORD PTR [rbx+0x10]
  43132a:	mov    rcx,QWORD PTR [rbx+0x40]
  43132e:	mov    edx,0x1
  431333:	call   406130 <fwrite@plt>
  431338:	mov    rdi,QWORD PTR [rbx]
  43133b:	mov    rsi,QWORD PTR [rbx+0x10]
  43133f:	add    rsi,rdi
  431342:	mov    rdx,r14
  431345:	call   4060d0 <memcpy@plt>
  43134a:	add    r14,QWORD PTR [rbx]
  43134d:	mov    QWORD PTR [rbx+0x28],r14
  431351:	mov    rax,QWORD PTR [rbx+0x10]
  431355:	add    QWORD PTR [rbx+0x18],rax
  431359:	mov    BYTE PTR [r14],0x0
  43135d:	pop    rbx
  43135e:	pop    r14
  431360:	pop    r15
  431362:	ret    
  431363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43136d:	nop    DWORD PTR [rax]

0000000000431370 <flatcc_json_printer_init_buffer@@Base>:
  431370:	push   rax
  431371:	cmp    rdx,0x3f
  431375:	jbe    4313b3 <flatcc_json_printer_init_buffer@@Base+0x43>
  431377:	vxorps xmm0,xmm0,xmm0
  43137b:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  431380:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  431385:	mov    QWORD PTR [rdi],rsi
  431388:	mov    QWORD PTR [rdi+0x8],rdx
  43138c:	lea    rax,[rdx-0x40]
  431390:	mov    QWORD PTR [rdi+0x10],rax
  431394:	mov    QWORD PTR [rdi+0x28],rsi
  431398:	lea    rax,[rsi+rdx*1-0x40]
  43139d:	mov    QWORD PTR [rdi+0x20],rax
  4313a1:	lea    rax,[rip+0x38]        # 4313e0 <flatcc_json_printer_init_buffer@@Base+0x70>
  4313a8:	mov    QWORD PTR [rdi+0x48],rax
  4313ac:	xor    eax,eax
  4313ae:	pop    rcx
  4313af:	vzeroupper 
  4313b2:	ret    
  4313b3:	lea    rdi,[rip+0x7af8]        # 438eb2 <flatcc_builder_padding_base@@Base+0x3492>
  4313ba:	lea    rsi,[rip+0x79bc]        # 438d7d <flatcc_builder_padding_base@@Base+0x335d>
  4313c1:	lea    rcx,[rip+0x7b13]        # 438edb <flatcc_builder_padding_base@@Base+0x34bb>
  4313c8:	mov    edx,0x48d
  4313cd:	call   406070 <__assert_fail@plt>
  4313d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4313dc:	nop    DWORD PTR [rax+0x0]
  4313e0:	mov    rax,QWORD PTR [rdi+0x28]
  4313e4:	cmp    rax,QWORD PTR [rdi+0x20]
  4313e8:	jb     431408 <flatcc_json_printer_init_buffer@@Base+0x98>
  4313ea:	cmp    DWORD PTR [rdi+0x3c],0x0
  4313ee:	jne    4313f7 <flatcc_json_printer_init_buffer@@Base+0x87>
  4313f0:	mov    DWORD PTR [rdi+0x3c],0x3
  4313f7:	mov    rcx,QWORD PTR [rdi]
  4313fa:	sub    rax,rcx
  4313fd:	add    QWORD PTR [rdi+0x18],rax
  431401:	mov    QWORD PTR [rdi+0x28],rcx
  431405:	mov    rax,rcx
  431408:	mov    BYTE PTR [rax],0x0
  43140b:	ret    
  43140c:	nop    DWORD PTR [rax+0x0]

0000000000431410 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  431410:	push   r14
  431412:	push   rbx
  431413:	push   rax
  431414:	test   rsi,rsi
  431417:	mov    eax,0x1000
  43141c:	cmovne rax,rsi
  431420:	cmp    rax,0x40
  431424:	mov    r14d,0x40
  43142a:	cmova  r14,rax
  43142e:	mov    rbx,rdi
  431431:	vxorps xmm0,xmm0,xmm0
  431435:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  43143a:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  43143f:	mov    rdi,r14
  431442:	vzeroupper 
  431445:	call   4060e0 <malloc@plt>
  43144a:	mov    rcx,rax
  43144d:	mov    QWORD PTR [rbx],rax
  431450:	mov    BYTE PTR [rbx+0x30],0x1
  431454:	mov    QWORD PTR [rbx+0x8],r14
  431458:	lea    rax,[r14-0x40]
  43145c:	mov    QWORD PTR [rbx+0x10],rax
  431460:	mov    QWORD PTR [rbx+0x28],rcx
  431464:	lea    rax,[rcx+r14*1-0x40]
  431469:	mov    QWORD PTR [rbx+0x20],rax
  43146d:	lea    rax,[rip+0x2c]        # 4314a0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
  431474:	mov    QWORD PTR [rbx+0x48],rax
  431478:	xor    eax,eax
  43147a:	test   rcx,rcx
  43147d:	jne    43148b <flatcc_json_printer_init_dynamic_buffer@@Base+0x7b>
  43147f:	mov    DWORD PTR [rbx+0x3c],0x3
  431486:	mov    eax,0xffffffff
  43148b:	add    rsp,0x8
  43148f:	pop    rbx
  431490:	pop    r14
  431492:	ret    
  431493:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43149d:	nop    DWORD PTR [rax]
  4314a0:	push   r14
  4314a2:	push   rbx
  4314a3:	push   rax
  4314a4:	mov    rax,QWORD PTR [rdi+0x28]
  4314a8:	mov    r14,rax
  4314ab:	sub    r14,QWORD PTR [rdi]
  4314ae:	mov    BYTE PTR [rax],0x0
  4314b1:	mov    rax,QWORD PTR [rdi+0x28]
  4314b5:	cmp    rax,QWORD PTR [rdi+0x20]
  4314b9:	jb     43151e <flatcc_json_printer_init_dynamic_buffer@@Base+0x10e>
  4314bb:	mov    rbx,rdi
  4314be:	mov    rdi,QWORD PTR [rdi]
  4314c1:	mov    rsi,QWORD PTR [rbx+0x8]
  4314c5:	add    rsi,rsi
  4314c8:	call   406100 <realloc@plt>
  4314cd:	test   rax,rax
  4314d0:	je     431502 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf2>
  4314d2:	mov    rcx,QWORD PTR [rbx+0x8]
  4314d6:	lea    rdx,[rcx+rcx*1]
  4314da:	mov    QWORD PTR [rbx+0x8],rdx
  4314de:	lea    rdx,[rcx+rcx*1]
  4314e2:	add    rdx,0xffffffffffffffc0
  4314e6:	mov    QWORD PTR [rbx+0x10],rdx
  4314ea:	mov    QWORD PTR [rbx],rax
  4314ed:	add    r14,rax
  4314f0:	mov    QWORD PTR [rbx+0x28],r14
  4314f4:	lea    rax,[rax+rcx*2]
  4314f8:	add    rax,0xffffffffffffffc0
  4314fc:	mov    QWORD PTR [rbx+0x20],rax
  431500:	jmp    43151a <flatcc_json_printer_init_dynamic_buffer@@Base+0x10a>
  431502:	cmp    DWORD PTR [rbx+0x3c],0x0
  431506:	jne    43150f <flatcc_json_printer_init_dynamic_buffer@@Base+0xff>
  431508:	mov    DWORD PTR [rbx+0x3c],0x3
  43150f:	add    QWORD PTR [rbx+0x18],r14
  431513:	mov    r14,QWORD PTR [rbx]
  431516:	mov    QWORD PTR [rbx+0x28],r14
  43151a:	mov    BYTE PTR [r14],0x0
  43151e:	add    rsp,0x8
  431522:	pop    rbx
  431523:	pop    r14
  431525:	ret    
  431526:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000431530 <flatcc_json_printer_get_buffer@@Base>:
  431530:	push   r14
  431532:	push   rbx
  431533:	push   rax
  431534:	mov    r14,rsi
  431537:	mov    rbx,rdi
  43153a:	xor    esi,esi
  43153c:	call   QWORD PTR [rdi+0x48]
  43153f:	test   r14,r14
  431542:	je     431553 <flatcc_json_printer_get_buffer@@Base+0x23>
  431544:	mov    rax,QWORD PTR [rbx]
  431547:	mov    rcx,QWORD PTR [rbx+0x28]
  43154b:	sub    rcx,rax
  43154e:	mov    QWORD PTR [r14],rcx
  431551:	jmp    431556 <flatcc_json_printer_get_buffer@@Base+0x26>
  431553:	mov    rax,QWORD PTR [rbx]
  431556:	add    rsp,0x8
  43155a:	pop    rbx
  43155b:	pop    r14
  43155d:	ret    
  43155e:	xchg   ax,ax

0000000000431560 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  431560:	push   r14
  431562:	push   rbx
  431563:	push   rax
  431564:	mov    r14,rsi
  431567:	mov    rbx,rdi
  43156a:	xor    esi,esi
  43156c:	call   QWORD PTR [rdi+0x48]
  43156f:	test   r14,r14
  431572:	je     431583 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x23>
  431574:	mov    rax,QWORD PTR [rbx]
  431577:	mov    rcx,QWORD PTR [rbx+0x28]
  43157b:	sub    rcx,rax
  43157e:	mov    QWORD PTR [r14],rcx
  431581:	jmp    431586 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x26>
  431583:	mov    rax,QWORD PTR [rbx]
  431586:	vxorps xmm0,xmm0,xmm0
  43158a:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  43158f:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  431594:	vmovups YMMWORD PTR [rbx],ymm0
  431598:	add    rsp,0x8
  43159c:	pop    rbx
  43159d:	pop    r14
  43159f:	vzeroupper 
  4315a2:	ret    
  4315a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4315ad:	nop    DWORD PTR [rax]

00000000004315b0 <flatcc_json_printer_clear@@Base>:
  4315b0:	push   rbx
  4315b1:	mov    rbx,rdi
  4315b4:	cmp    BYTE PTR [rdi+0x30],0x0
  4315b8:	je     4315c7 <flatcc_json_printer_clear@@Base+0x17>
  4315ba:	mov    rdi,QWORD PTR [rbx]
  4315bd:	test   rdi,rdi
  4315c0:	je     4315c7 <flatcc_json_printer_clear@@Base+0x17>
  4315c2:	call   406030 <free@plt>
  4315c7:	vxorps xmm0,xmm0,xmm0
  4315cb:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  4315d0:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4315d5:	vmovups YMMWORD PTR [rbx],ymm0
  4315d9:	pop    rbx
  4315da:	vzeroupper 
  4315dd:	ret    
  4315de:	xchg   ax,ax
  4315e0:	test   rdx,rdx
  4315e3:	je     431723 <flatcc_json_printer_clear@@Base+0x173>
  4315e9:	mov    r9,QWORD PTR [rdx]
  4315ec:	mov    r8d,ecx
  4315ef:	and    r8d,0xffffff1f
  4315f6:	je     431614 <flatcc_json_printer_clear@@Base+0x64>
  4315f8:	cmp    r8d,0x1
  4315fc:	jne    4316eb <flatcc_json_printer_clear@@Base+0x13b>
  431602:	lea    r8,[rip+0x7b16]        # 43911f <flatcc_builder_padding_base@@Base+0x36ff>
  431609:	cmp    r9,0x3
  43160d:	jae    431630 <flatcc_json_printer_clear@@Base+0x80>
  43160f:	jmp    43169b <flatcc_json_printer_clear@@Base+0xeb>
  431614:	lea    r8,[rip+0x7ac3]        # 4390de <flatcc_builder_padding_base@@Base+0x36be>
  43161b:	cmp    r9,0x3
  43161f:	jb     43169b <flatcc_json_printer_clear@@Base+0xeb>
  431621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43162b:	nop    DWORD PTR [rax+rax*1+0x0]
  431630:	movzx  eax,BYTE PTR [rsi]
  431633:	shr    rax,0x2
  431637:	movzx  eax,BYTE PTR [r8+rax*1]
  43163c:	mov    BYTE PTR [rdi],al
  43163e:	movzx  r10d,BYTE PTR [rsi]
  431642:	shl    r10d,0x4
  431646:	and    r10d,0x30
  43164a:	movzx  eax,BYTE PTR [rsi+0x1]
  43164e:	shr    rax,0x4
  431652:	or     rax,r10
  431655:	movzx  eax,BYTE PTR [r8+rax*1]
  43165a:	mov    BYTE PTR [rdi+0x1],al
  43165d:	movzx  r10d,BYTE PTR [rsi+0x1]
  431662:	and    r10d,0xf
  431666:	movzx  eax,BYTE PTR [rsi+0x2]
  43166a:	shr    rax,0x6
  43166e:	lea    rax,[rax+r10*4]
  431672:	movzx  eax,BYTE PTR [r8+rax*1]
  431677:	mov    BYTE PTR [rdi+0x2],al
  43167a:	movzx  eax,BYTE PTR [rsi+0x2]
  43167e:	and    eax,0x3f
  431681:	movzx  eax,BYTE PTR [r8+rax*1]
  431686:	mov    BYTE PTR [rdi+0x3],al
  431689:	add    r9,0xfffffffffffffffd
  43168d:	add    rdi,0x4
  431691:	add    rsi,0x3
  431695:	cmp    r9,0x2
  431699:	ja     431630 <flatcc_json_printer_clear@@Base+0x80>
  43169b:	cmp    r9,0x1
  43169f:	je     4316f0 <flatcc_json_printer_clear@@Base+0x140>
  4316a1:	cmp    r9,0x2
  4316a5:	jne    431718 <flatcc_json_printer_clear@@Base+0x168>
  4316a7:	movzx  eax,BYTE PTR [rsi]
  4316aa:	shr    rax,0x2
  4316ae:	mov    al,BYTE PTR [r8+rax*1]
  4316b2:	mov    BYTE PTR [rdi],al
  4316b4:	movzx  r9d,BYTE PTR [rsi]
  4316b8:	shl    r9d,0x4
  4316bc:	and    r9d,0x30
  4316c0:	movzx  eax,BYTE PTR [rsi+0x1]
  4316c4:	shr    rax,0x4
  4316c8:	or     rax,r9
  4316cb:	mov    al,BYTE PTR [r8+rax*1]
  4316cf:	mov    BYTE PTR [rdi+0x1],al
  4316d2:	movzx  eax,BYTE PTR [rsi+0x1]
  4316d6:	and    eax,0xf
  4316d9:	mov    al,BYTE PTR [r8+rax*4]
  4316dd:	mov    BYTE PTR [rdi+0x2],al
  4316e0:	test   cl,0x80
  4316e3:	je     431718 <flatcc_json_printer_clear@@Base+0x168>
  4316e5:	mov    BYTE PTR [rdi+0x3],0x3d
  4316e9:	jmp    431718 <flatcc_json_printer_clear@@Base+0x168>
  4316eb:	mov    rcx,r9
  4316ee:	jmp    43171d <flatcc_json_printer_clear@@Base+0x16d>
  4316f0:	movzx  eax,BYTE PTR [rsi]
  4316f3:	shr    rax,0x2
  4316f7:	mov    al,BYTE PTR [r8+rax*1]
  4316fb:	mov    BYTE PTR [rdi],al
  4316fd:	movzx  eax,BYTE PTR [rsi]
  431700:	shl    eax,0x4
  431703:	and    eax,0x30
  431706:	mov    al,BYTE PTR [r8+rax*1]
  43170a:	mov    BYTE PTR [rdi+0x1],al
  43170d:	test   cl,0x80
  431710:	je     431718 <flatcc_json_printer_clear@@Base+0x168>
  431712:	mov    WORD PTR [rdi+0x2],0x3d3d
  431718:	mov    r9,QWORD PTR [rdx]
  43171b:	xor    ecx,ecx
  43171d:	sub    r9,rcx
  431720:	mov    QWORD PTR [rdx],r9
  431723:	ret    
  431724:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43172e:	xchg   ax,ax

0000000000431730 <__libc_csu_init@@Base>:
  431730:	endbr64 
  431734:	push   r15
  431736:	lea    r15,[rip+0xe3b3]        # 43faf0 <flatcc_builder_padding_base@@Base+0xa0d0>
  43173d:	push   r14
  43173f:	mov    r14,rdx
  431742:	push   r13
  431744:	mov    r13,rsi
  431747:	push   r12
  431749:	mov    r12d,edi
  43174c:	push   rbp
  43174d:	lea    rbp,[rip+0xe3a4]        # 43faf8 <flatcc_builder_padding_base@@Base+0xa0d8>
  431754:	push   rbx
  431755:	sub    rbp,r15
  431758:	sub    rsp,0x8
  43175c:	call   406000 <free@plt-0x30>
  431761:	sar    rbp,0x3
  431765:	je     431786 <__libc_csu_init@@Base+0x56>
  431767:	xor    ebx,ebx
  431769:	nop    DWORD PTR [rax+0x0]
  431770:	mov    rdx,r14
  431773:	mov    rsi,r13
  431776:	mov    edi,r12d
  431779:	call   QWORD PTR [r15+rbx*8]
  43177d:	add    rbx,0x1
  431781:	cmp    rbp,rbx
  431784:	jne    431770 <__libc_csu_init@@Base+0x40>
  431786:	add    rsp,0x8
  43178a:	pop    rbx
  43178b:	pop    rbp
  43178c:	pop    r12
  43178e:	pop    r13
  431790:	pop    r14
  431792:	pop    r15
  431794:	ret    
  431795:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004317a0 <__libc_csu_fini@@Base>:
  4317a0:	endbr64 
  4317a4:	ret    

Disassembly of section .fini:

00000000004317a8 <.fini>:
  4317a8:	endbr64 
  4317ac:	sub    rsp,0x8
  4317b0:	add    rsp,0x8
  4317b4:	ret    
