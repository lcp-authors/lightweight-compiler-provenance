
../repos/prog2/0.5:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strlen@plt-0x6a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <strlen@plt-0x60>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <strlen@plt-0x60>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <strlen@plt-0x60>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <strlen@plt-0x60>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <strlen@plt-0x60>
  40107f:	nop

Disassembly of section .plt.sec:

0000000000401080 <strlen@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f8d]        # 404018 <strlen@GLIBC_2.2.5>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401090 <__stack_chk_fail@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f85]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <printf@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404028 <printf@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <strcmp@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404030 <strcmp@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <__isoc99_scanf@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404038 <__isoc99_scanf@GLIBC_2.7>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010d0 <_start@@Base>:
  4010d0:	endbr64 
  4010d4:	xor    ebp,ebp
  4010d6:	mov    r9,rdx
  4010d9:	pop    rsi
  4010da:	mov    rdx,rsp
  4010dd:	and    rsp,0xfffffffffffffff0
  4010e1:	push   rax
  4010e2:	push   rsp
  4010e3:	mov    r8,0x4013d0
  4010ea:	mov    rcx,0x401360
  4010f1:	mov    rdi,0x40122d
  4010f8:	call   QWORD PTR [rip+0x2ef2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010fe:	hlt    
  4010ff:	nop
  401100:	endbr64 
  401104:	ret    
  401105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40110f:	nop
  401110:	mov    eax,0x404050
  401115:	cmp    rax,0x404050
  40111b:	je     401130 <_start@@Base+0x60>
  40111d:	mov    eax,0x0
  401122:	test   rax,rax
  401125:	je     401130 <_start@@Base+0x60>
  401127:	mov    edi,0x404050
  40112c:	jmp    rax
  40112e:	xchg   ax,ax
  401130:	ret    
  401131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	mov    esi,0x404050
  401145:	sub    rsi,0x404050
  40114c:	sar    rsi,0x3
  401150:	mov    rax,rsi
  401153:	shr    rax,0x3f
  401157:	add    rsi,rax
  40115a:	sar    rsi,1
  40115d:	je     401170 <_start@@Base+0xa0>
  40115f:	mov    eax,0x0
  401164:	test   rax,rax
  401167:	je     401170 <_start@@Base+0xa0>
  401169:	mov    edi,0x404050
  40116e:	jmp    rax
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	cmp    BYTE PTR [rip+0x2ec5],0x0        # 404050 <__bss_start@@Base>
  40118b:	jne    4011a0 <_start@@Base+0xd0>
  40118d:	push   rbp
  40118e:	mov    rbp,rsp
  401191:	call   401110 <_start@@Base+0x40>
  401196:	mov    BYTE PTR [rip+0x2eb3],0x1        # 404050 <__bss_start@@Base>
  40119d:	pop    rbp
  40119e:	ret    
  40119f:	nop
  4011a0:	ret    
  4011a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011ac:	nop    DWORD PTR [rax+0x0]
  4011b0:	endbr64 
  4011b4:	jmp    401140 <_start@@Base+0x70>

00000000004011b6 <inverte@@Base>:
  4011b6:	endbr64 
  4011ba:	push   rbp
  4011bb:	mov    rbp,rsp
  4011be:	push   rbx
  4011bf:	sub    rsp,0x28
  4011c3:	mov    QWORD PTR [rbp-0x28],rdi
  4011c7:	mov    QWORD PTR [rbp-0x30],rsi
  4011cb:	mov    DWORD PTR [rbp-0x14],0x0
  4011d2:	jmp    40120e <inverte@@Base+0x58>
  4011d4:	mov    rax,QWORD PTR [rbp-0x28]
  4011d8:	mov    rdi,rax
  4011db:	call   401080 <strlen@plt>
  4011e0:	mov    rdx,rax
  4011e3:	mov    eax,DWORD PTR [rbp-0x14]
  4011e6:	cdqe   
  4011e8:	sub    rdx,rax
  4011eb:	mov    rax,rdx
  4011ee:	lea    rdx,[rax-0x1]
  4011f2:	mov    rax,QWORD PTR [rbp-0x28]
  4011f6:	add    rax,rdx
  4011f9:	mov    edx,DWORD PTR [rbp-0x14]
  4011fc:	movsxd rcx,edx
  4011ff:	mov    rdx,QWORD PTR [rbp-0x30]
  401203:	add    rdx,rcx
  401206:	movzx  eax,BYTE PTR [rax]
  401209:	mov    BYTE PTR [rdx],al
  40120b:	inc    DWORD PTR [rbp-0x14]
  40120e:	mov    eax,DWORD PTR [rbp-0x14]
  401211:	movsxd rbx,eax
  401214:	mov    rax,QWORD PTR [rbp-0x28]
  401218:	mov    rdi,rax
  40121b:	call   401080 <strlen@plt>
  401220:	cmp    rbx,rax
  401223:	jb     4011d4 <inverte@@Base+0x1e>
  401225:	nop
  401226:	add    rsp,0x28
  40122a:	pop    rbx
  40122b:	pop    rbp
  40122c:	ret    

000000000040122d <main@@Base>:
  40122d:	endbr64 
  401231:	push   rbp
  401232:	mov    rbp,rsp
  401235:	sub    rsp,0xe0
  40123c:	mov    rax,QWORD PTR fs:0x28
  401245:	mov    QWORD PTR [rbp-0x8],rax
  401249:	xor    eax,eax
  40124b:	lea    rdx,[rbp-0xe0]
  401252:	mov    eax,0x0
  401257:	mov    ecx,0xc
  40125c:	mov    rdi,rdx
  40125f:	rep stos QWORD PTR es:[rdi],rax
  401262:	mov    rdx,rdi
  401265:	mov    DWORD PTR [rdx],eax
  401267:	add    rdx,0x4
  40126b:	lea    rdx,[rbp-0x70]
  40126f:	mov    eax,0x0
  401274:	mov    ecx,0xc
  401279:	mov    rdi,rdx
  40127c:	rep stos QWORD PTR es:[rdi],rax
  40127f:	mov    rdx,rdi
  401282:	mov    DWORD PTR [rdx],eax
  401284:	add    rdx,0x4
  401288:	lea    rdi,[rip+0xd75]        # 402004 <_IO_stdin_used@@Base+0x4>
  40128f:	mov    eax,0x0
  401294:	call   4010a0 <printf@plt>
  401299:	lea    rax,[rbp-0xe0]
  4012a0:	mov    rsi,rax
  4012a3:	lea    rdi,[rip+0xd64]        # 40200e <_IO_stdin_used@@Base+0xe>
  4012aa:	mov    eax,0x0
  4012af:	call   4010c0 <__isoc99_scanf@plt>
  4012b4:	lea    rax,[rbp-0xe0]
  4012bb:	lea    rsi,[rip+0xd4f]        # 402011 <_IO_stdin_used@@Base+0x11>
  4012c2:	mov    rdi,rax
  4012c5:	call   4010b0 <strcmp@plt>
  4012ca:	test   eax,eax
  4012cc:	jne    4012e4 <main@@Base+0xb7>
  4012ce:	mov    eax,0x0
  4012d3:	mov    rcx,QWORD PTR [rbp-0x8]
  4012d7:	xor    rcx,QWORD PTR fs:0x28
  4012e0:	je     401359 <main@@Base+0x12c>
  4012e2:	jmp    401354 <main@@Base+0x127>
  4012e4:	lea    rdx,[rbp-0x70]
  4012e8:	lea    rax,[rbp-0xe0]
  4012ef:	mov    rsi,rdx
  4012f2:	mov    rdi,rax
  4012f5:	call   4011b6 <inverte@@Base>
  4012fa:	lea    rdx,[rbp-0x70]
  4012fe:	lea    rax,[rbp-0xe0]
  401305:	mov    rsi,rdx
  401308:	mov    rdi,rax
  40130b:	call   4010b0 <strcmp@plt>
  401310:	test   eax,eax
  401312:	jne    401334 <main@@Base+0x107>
  401314:	lea    rax,[rbp-0xe0]
  40131b:	mov    rsi,rax
  40131e:	lea    rdi,[rip+0xcee]        # 402013 <_IO_stdin_used@@Base+0x13>
  401325:	mov    eax,0x0
  40132a:	call   4010a0 <printf@plt>
  40132f:	jmp    401288 <main@@Base+0x5b>
  401334:	lea    rax,[rbp-0xe0]
  40133b:	mov    rsi,rax
  40133e:	lea    rdi,[rip+0xce8]        # 40202d <_IO_stdin_used@@Base+0x2d>
  401345:	mov    eax,0x0
  40134a:	call   4010a0 <printf@plt>
  40134f:	jmp    401288 <main@@Base+0x5b>
  401354:	call   401090 <__stack_chk_fail@plt>
  401359:	leave  
  40135a:	ret    
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__libc_csu_init@@Base>:
  401360:	endbr64 
  401364:	push   r15
  401366:	lea    r15,[rip+0x2aa3]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40136d:	push   r14
  40136f:	mov    r14,rdx
  401372:	push   r13
  401374:	mov    r13,rsi
  401377:	push   r12
  401379:	mov    r12d,edi
  40137c:	push   rbp
  40137d:	lea    rbp,[rip+0x2a94]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401384:	push   rbx
  401385:	sub    rbp,r15
  401388:	sub    rsp,0x8
  40138c:	call   401000 <strlen@plt-0x80>
  401391:	sar    rbp,0x3
  401395:	je     4013b6 <__libc_csu_init@@Base+0x56>
  401397:	xor    ebx,ebx
  401399:	nop    DWORD PTR [rax+0x0]
  4013a0:	mov    rdx,r14
  4013a3:	mov    rsi,r13
  4013a6:	mov    edi,r12d
  4013a9:	call   QWORD PTR [r15+rbx*8]
  4013ad:	add    rbx,0x1
  4013b1:	cmp    rbp,rbx
  4013b4:	jne    4013a0 <__libc_csu_init@@Base+0x40>
  4013b6:	add    rsp,0x8
  4013ba:	pop    rbx
  4013bb:	pop    rbp
  4013bc:	pop    r12
  4013be:	pop    r13
  4013c0:	pop    r14
  4013c2:	pop    r15
  4013c4:	ret    
  4013c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004013d0 <__libc_csu_fini@@Base>:
  4013d0:	endbr64 
  4013d4:	ret    

Disassembly of section .fini:

00000000004013d8 <.fini>:
  4013d8:	endbr64 
  4013dc:	sub    rsp,0x8
  4013e0:	add    rsp,0x8
  4013e4:	ret    
