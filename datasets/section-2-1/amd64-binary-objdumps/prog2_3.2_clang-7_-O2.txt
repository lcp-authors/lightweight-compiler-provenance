
../repos/prog2/3.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <putchar@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <putchar@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <putchar@plt>:
  401030:	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <putchar@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <putchar@plt-0x10>

0000000000401040 <puts@plt>:
  401040:	jmp    QWORD PTR [rip+0x3fda]        # 405020 <puts@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <putchar@plt-0x10>

0000000000401050 <strlen@plt>:
  401050:	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <strlen@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <putchar@plt-0x10>

0000000000401060 <printf@plt>:
  401060:	jmp    QWORD PTR [rip+0x3fca]        # 405030 <printf@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <putchar@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x402a00
  40108a:	mov    rcx,0x402990
  401091:	mov    rdi,0x401e80
  401098:	call   QWORD PTR [rip+0x3f52]        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x405048
  4010b5:	cmp    rax,0x405048
  4010bb:	je     4010d0 <_start@@Base+0x60>
  4010bd:	mov    eax,0x0
  4010c2:	test   rax,rax
  4010c5:	je     4010d0 <_start@@Base+0x60>
  4010c7:	mov    edi,0x405048
  4010cc:	jmp    rax
  4010ce:	xchg   ax,ax
  4010d0:	ret    
  4010d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    esi,0x405048
  4010e5:	sub    rsi,0x405048
  4010ec:	mov    rax,rsi
  4010ef:	shr    rsi,0x3f
  4010f3:	sar    rax,0x3
  4010f7:	add    rsi,rax
  4010fa:	sar    rsi,1
  4010fd:	je     401110 <_start@@Base+0xa0>
  4010ff:	mov    eax,0x0
  401104:	test   rax,rax
  401107:	je     401110 <_start@@Base+0xa0>
  401109:	mov    edi,0x405048
  40110e:	jmp    rax
  401110:	ret    
  401111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40111c:	nop    DWORD PTR [rax+0x0]
  401120:	endbr64 
  401124:	cmp    BYTE PTR [rip+0x3f1d],0x0        # 405048 <__bss_start@@Base>
  40112b:	jne    401140 <_start@@Base+0xd0>
  40112d:	push   rbp
  40112e:	mov    rbp,rsp
  401131:	call   4010b0 <_start@@Base+0x40>
  401136:	mov    BYTE PTR [rip+0x3f0b],0x1        # 405048 <__bss_start@@Base>
  40113d:	pop    rbp
  40113e:	ret    
  40113f:	nop
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	jmp    4010e0 <_start@@Base+0x70>
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401160 <comp_int_asc@@Base>:
  401160:	mov    eax,DWORD PTR [rdi]
  401162:	mov    ecx,DWORD PTR [rsi]
  401164:	xor    edx,edx
  401166:	cmp    eax,ecx
  401168:	setg   dl
  40116b:	cmp    ecx,eax
  40116d:	mov    eax,0xffffffff
  401172:	cmovle eax,edx
  401175:	ret    
  401176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401180 <get_elem@@Base>:
  401180:	imul   esi,edx
  401183:	movsxd rax,esi
  401186:	add    rax,rdi
  401189:	ret    
  40118a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401190 <swap@@Base>:
  401190:	test   edx,edx
  401192:	jle    40140f <swap@@Base+0x27f>
  401198:	mov    r8d,edx
  40119b:	cmp    edx,0x40
  40119e:	jb     4011ba <swap@@Base+0x2a>
  4011a0:	lea    rax,[rsi+r8*1]
  4011a4:	cmp    rax,rdi
  4011a7:	jbe    401276 <swap@@Base+0xe6>
  4011ad:	lea    rax,[rdi+r8*1]
  4011b1:	cmp    rax,rsi
  4011b4:	jbe    401276 <swap@@Base+0xe6>
  4011ba:	xor    r10d,r10d
  4011bd:	mov    r9,r10
  4011c0:	not    r9
  4011c3:	add    r9,r8
  4011c6:	mov    rdx,r8
  4011c9:	and    rdx,0x3
  4011cd:	je     4011fc <swap@@Base+0x6c>
  4011cf:	neg    rdx
  4011d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011dc:	nop    DWORD PTR [rax+0x0]
  4011e0:	movzx  eax,BYTE PTR [rdi+r10*1]
  4011e5:	movzx  ecx,BYTE PTR [rsi+r10*1]
  4011ea:	mov    BYTE PTR [rdi+r10*1],cl
  4011ee:	mov    BYTE PTR [rsi+r10*1],al
  4011f2:	add    r10,0x1
  4011f6:	add    rdx,0x1
  4011fa:	jne    4011e0 <swap@@Base+0x50>
  4011fc:	cmp    r9,0x3
  401200:	jb     40140f <swap@@Base+0x27f>
  401206:	sub    r8,r10
  401209:	add    rsi,r10
  40120c:	add    rsi,0x3
  401210:	lea    rcx,[rdi+r10*1]
  401214:	add    rcx,0x3
  401218:	xor    edx,edx
  40121a:	nop    WORD PTR [rax+rax*1+0x0]
  401220:	movzx  edi,BYTE PTR [rcx+rdx*1-0x3]
  401225:	movzx  eax,BYTE PTR [rsi+rdx*1-0x3]
  40122a:	mov    BYTE PTR [rcx+rdx*1-0x3],al
  40122e:	mov    BYTE PTR [rsi+rdx*1-0x3],dil
  401233:	movzx  edi,BYTE PTR [rcx+rdx*1-0x2]
  401238:	movzx  eax,BYTE PTR [rsi+rdx*1-0x2]
  40123d:	mov    BYTE PTR [rcx+rdx*1-0x2],al
  401241:	mov    BYTE PTR [rsi+rdx*1-0x2],dil
  401246:	movzx  edi,BYTE PTR [rcx+rdx*1-0x1]
  40124b:	movzx  eax,BYTE PTR [rsi+rdx*1-0x1]
  401250:	mov    BYTE PTR [rcx+rdx*1-0x1],al
  401254:	mov    BYTE PTR [rsi+rdx*1-0x1],dil
  401259:	movzx  edi,BYTE PTR [rcx+rdx*1]
  40125d:	movzx  eax,BYTE PTR [rsi+rdx*1]
  401261:	mov    BYTE PTR [rcx+rdx*1],al
  401264:	mov    BYTE PTR [rsi+rdx*1],dil
  401268:	add    rdx,0x4
  40126c:	cmp    r8,rdx
  40126f:	jne    401220 <swap@@Base+0x90>
  401271:	jmp    40140f <swap@@Base+0x27f>
  401276:	mov    r10d,r8d
  401279:	and    r10d,0xffffffc0
  40127d:	lea    rdx,[r10-0x40]
  401281:	mov    rax,rdx
  401284:	shr    rax,0x6
  401288:	add    rax,0x1
  40128c:	mov    r9d,eax
  40128f:	and    r9d,0x3
  401293:	cmp    rdx,0xc0
  40129a:	jae    4012ac <swap@@Base+0x11c>
  40129c:	xor    eax,eax
  40129e:	test   r9,r9
  4012a1:	jne    4013c1 <swap@@Base+0x231>
  4012a7:	jmp    401406 <swap@@Base+0x276>
  4012ac:	mov    edx,0x1
  4012b1:	sub    rdx,rax
  4012b4:	add    rdx,r9
  4012b7:	add    rdx,0xffffffffffffffff
  4012bb:	xor    eax,eax
  4012bd:	nop    DWORD PTR [rax]
  4012c0:	vmovups ymm0,YMMWORD PTR [rdi+rax*1]
  4012c5:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0x20]
  4012cb:	vmovups ymm2,YMMWORD PTR [rsi+rax*1]
  4012d0:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x20]
  4012d6:	vmovups YMMWORD PTR [rdi+rax*1],ymm2
  4012db:	vmovups YMMWORD PTR [rdi+rax*1+0x20],ymm3
  4012e1:	vmovups YMMWORD PTR [rsi+rax*1],ymm0
  4012e6:	vmovups YMMWORD PTR [rsi+rax*1+0x20],ymm1
  4012ec:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0x40]
  4012f2:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0x60]
  4012f8:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x40]
  4012fe:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0x60]
  401304:	vmovups YMMWORD PTR [rdi+rax*1+0x40],ymm2
  40130a:	vmovups YMMWORD PTR [rdi+rax*1+0x60],ymm3
  401310:	vmovups YMMWORD PTR [rsi+rax*1+0x40],ymm0
  401316:	vmovups YMMWORD PTR [rsi+rax*1+0x60],ymm1
  40131c:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0x80]
  401325:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0xa0]
  40132e:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0x80]
  401337:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xa0]
  401340:	vmovups YMMWORD PTR [rdi+rax*1+0x80],ymm2
  401349:	vmovups YMMWORD PTR [rdi+rax*1+0xa0],ymm3
  401352:	vmovups YMMWORD PTR [rsi+rax*1+0x80],ymm0
  40135b:	vmovups YMMWORD PTR [rsi+rax*1+0xa0],ymm1
  401364:	vmovups ymm0,YMMWORD PTR [rdi+rax*1+0xc0]
  40136d:	vmovups ymm1,YMMWORD PTR [rdi+rax*1+0xe0]
  401376:	vmovups ymm2,YMMWORD PTR [rsi+rax*1+0xc0]
  40137f:	vmovups ymm3,YMMWORD PTR [rsi+rax*1+0xe0]
  401388:	vmovups YMMWORD PTR [rdi+rax*1+0xc0],ymm2
  401391:	vmovups YMMWORD PTR [rdi+rax*1+0xe0],ymm3
  40139a:	vmovups YMMWORD PTR [rsi+rax*1+0xc0],ymm0
  4013a3:	vmovups YMMWORD PTR [rsi+rax*1+0xe0],ymm1
  4013ac:	add    rax,0x100
  4013b2:	add    rdx,0x4
  4013b6:	jne    4012c0 <swap@@Base+0x130>
  4013bc:	test   r9,r9
  4013bf:	je     401406 <swap@@Base+0x276>
  4013c1:	add    rax,0x20
  4013c5:	neg    r9
  4013c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4013d0:	vmovups ymm0,YMMWORD PTR [rdi+rax*1-0x20]
  4013d6:	vmovups ymm1,YMMWORD PTR [rdi+rax*1]
  4013db:	vmovups ymm2,YMMWORD PTR [rsi+rax*1-0x20]
  4013e1:	vmovups ymm3,YMMWORD PTR [rsi+rax*1]
  4013e6:	vmovups YMMWORD PTR [rdi+rax*1-0x20],ymm2
  4013ec:	vmovups YMMWORD PTR [rdi+rax*1],ymm3
  4013f1:	vmovups YMMWORD PTR [rsi+rax*1-0x20],ymm0
  4013f7:	vmovups YMMWORD PTR [rsi+rax*1],ymm1
  4013fc:	add    rax,0x40
  401400:	add    r9,0x1
  401404:	jne    4013d0 <swap@@Base+0x240>
  401406:	cmp    r10,r8
  401409:	jne    4011bd <swap@@Base+0x2d>
  40140f:	vzeroupper 
  401412:	ret    
  401413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40141d:	nop    DWORD PTR [rax]

0000000000401420 <sort@@Base>:
  401420:	push   rbp
  401421:	push   r15
  401423:	push   r14
  401425:	push   r13
  401427:	push   r12
  401429:	push   rbx
  40142a:	sub    rsp,0x98
  401431:	mov    QWORD PTR [rsp+0x90],rcx
  401439:	mov    DWORD PTR [rsp+0x4],edx
  40143d:	mov    QWORD PTR [rsp+0x8],rdi
  401442:	test   esi,esi
  401444:	jle    401817 <sort@@Base+0x3f7>
  40144a:	mov    eax,DWORD PTR [rsp+0x4]
  40144e:	mov    r8d,eax
  401451:	movsxd r12,eax
  401454:	movsxd rax,esi
  401457:	mov    QWORD PTR [rsp+0x68],rax
  40145c:	mov    edx,esi
  40145e:	mov    eax,r8d
  401461:	and    eax,0xffffffc0
  401464:	mov    QWORD PTR [rsp+0x48],rax
  401469:	lea    rax,[rax-0x40]
  40146d:	mov    QWORD PTR [rsp+0x40],rax
  401472:	shr    rax,0x6
  401476:	lea    esi,[rax+0x1]
  401479:	mov    ebp,r8d
  40147c:	and    ebp,0x3
  40147f:	and    esi,0x3
  401482:	mov    r13,QWORD PTR [rsp+0x8]
  401487:	lea    rbx,[r12+r13*1]
  40148b:	mov    QWORD PTR [rsp+0x20],rbx
  401490:	mov    QWORD PTR [rsp+0x60],rdx
  401495:	lea    rdx,[rdx-0x1]
  401499:	mov    QWORD PTR [rsp+0x18],rdx
  40149e:	lea    r15,[r13+0xe0]
  4014a5:	mov    rdx,rsi
  4014a8:	sub    rdx,rax
  4014ab:	add    rdx,0xffffffffffffffff
  4014af:	mov    QWORD PTR [rsp+0x30],rdx
  4014b4:	lea    r9,[r13+0x20]
  4014b8:	mov    QWORD PTR [rsp+0x38],rsi
  4014bd:	shl    rsi,0x6
  4014c1:	mov    QWORD PTR [rsp+0x10],rsi
  4014c6:	mov    QWORD PTR [rsp+0x58],rbp
  4014cb:	neg    rbp
  4014ce:	mov    QWORD PTR [rsp+0x50],rbp
  4014d3:	xor    edx,edx
  4014d5:	mov    QWORD PTR [rsp+0x70],r8
  4014da:	nop    WORD PTR [rax+rax*1+0x0]
  4014e0:	mov    QWORD PTR [rsp+0x88],r9
  4014e8:	mov    rcx,rdx
  4014eb:	imul   rcx,r12
  4014ef:	mov    rax,QWORD PTR [rsp+0x8]
  4014f4:	mov    QWORD PTR [rsp+0x78],rcx
  4014f9:	lea    rcx,[rax+rcx*1]
  4014fd:	add    rdx,0x1
  401501:	mov    QWORD PTR [rsp+0x28],rcx
  401506:	mov    QWORD PTR [rsp+0x80],rdx
  40150e:	cmp    rdx,QWORD PTR [rsp+0x68]
  401513:	jge    401556 <sort@@Base+0x136>
  401515:	mov    r14,QWORD PTR [rsp+0x18]
  40151a:	mov    rbp,QWORD PTR [rsp+0x20]
  40151f:	mov    rbx,QWORD PTR [rsp+0x28]
  401524:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40152e:	xchg   ax,ax
  401530:	mov    rdi,rbp
  401533:	mov    rsi,rbx
  401536:	vzeroupper 
  401539:	call   QWORD PTR [rsp+0x90]
  401540:	mov    rcx,rbp
  401543:	test   eax,eax
  401545:	js     40154a <sort@@Base+0x12a>
  401547:	mov    rcx,rbx
  40154a:	add    rbp,r12
  40154d:	mov    rbx,rcx
  401550:	add    r14,0xffffffffffffffff
  401554:	jne    401530 <sort@@Base+0x110>
  401556:	cmp    DWORD PTR [rsp+0x4],0x0
  40155b:	mov    r8,QWORD PTR [rsp+0x70]
  401560:	mov    r9,QWORD PTR [rsp+0x88]
  401568:	jle    4017f0 <sort@@Base+0x3d0>
  40156e:	cmp    DWORD PTR [rsp+0x4],0x40
  401573:	jb     40159a <sort@@Base+0x17a>
  401575:	mov    rax,QWORD PTR [rsp+0x78]
  40157a:	add    rax,r8
  40157d:	add    rax,QWORD PTR [rsp+0x8]
  401582:	cmp    rcx,rax
  401585:	jae    40164c <sort@@Base+0x22c>
  40158b:	lea    rax,[rcx+r8*1]
  40158f:	cmp    QWORD PTR [rsp+0x28],rax
  401594:	jae    40164c <sort@@Base+0x22c>
  40159a:	xor    eax,eax
  40159c:	mov    rbp,rax
  40159f:	not    rbp
  4015a2:	add    rbp,r8
  4015a5:	cmp    QWORD PTR [rsp+0x58],0x0
  4015ab:	je     4015dc <sort@@Base+0x1bc>
  4015ad:	mov    rsi,QWORD PTR [rsp+0x50]
  4015b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015bc:	nop    DWORD PTR [rax+0x0]
  4015c0:	movzx  ebx,BYTE PTR [rcx+rax*1]
  4015c4:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
  4015ca:	mov    BYTE PTR [rcx+rax*1],dl
  4015cd:	mov    BYTE PTR [r13+rax*1+0x0],bl
  4015d2:	add    rax,0x1
  4015d6:	add    rsi,0x1
  4015da:	jne    4015c0 <sort@@Base+0x1a0>
  4015dc:	cmp    rbp,0x3
  4015e0:	jb     4017f0 <sort@@Base+0x3d0>
  4015e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015f0:	movzx  edx,BYTE PTR [rcx+rax*1]
  4015f4:	movzx  ebx,BYTE PTR [r13+rax*1+0x0]
  4015fa:	mov    BYTE PTR [rcx+rax*1],bl
  4015fd:	mov    BYTE PTR [r13+rax*1+0x0],dl
  401602:	movzx  edx,BYTE PTR [rcx+rax*1+0x1]
  401607:	movzx  ebx,BYTE PTR [r13+rax*1+0x1]
  40160d:	mov    BYTE PTR [rcx+rax*1+0x1],bl
  401611:	mov    BYTE PTR [r13+rax*1+0x1],dl
  401616:	movzx  edx,BYTE PTR [rcx+rax*1+0x2]
  40161b:	movzx  ebx,BYTE PTR [r13+rax*1+0x2]
  401621:	mov    BYTE PTR [rcx+rax*1+0x2],bl
  401625:	mov    BYTE PTR [r13+rax*1+0x2],dl
  40162a:	movzx  edx,BYTE PTR [rcx+rax*1+0x3]
  40162f:	movzx  ebx,BYTE PTR [r13+rax*1+0x3]
  401635:	mov    BYTE PTR [rcx+rax*1+0x3],bl
  401639:	mov    BYTE PTR [r13+rax*1+0x3],dl
  40163e:	add    rax,0x4
  401642:	cmp    r8,rax
  401645:	jne    4015f0 <sort@@Base+0x1d0>
  401647:	jmp    4017f0 <sort@@Base+0x3d0>
  40164c:	cmp    QWORD PTR [rsp+0x40],0xc0
  401655:	jae    40166f <sort@@Base+0x24f>
  401657:	xor    eax,eax
  401659:	mov    rbp,QWORD PTR [rsp+0x10]
  40165e:	cmp    QWORD PTR [rsp+0x38],0x0
  401664:	jne    40178e <sort@@Base+0x36e>
  40166a:	jmp    4017d5 <sort@@Base+0x3b5>
  40166f:	mov    rdx,QWORD PTR [rsp+0x30]
  401674:	xor    eax,eax
  401676:	mov    rbp,QWORD PTR [rsp+0x10]
  40167b:	nop    DWORD PTR [rax+rax*1+0x0]
  401680:	vmovups ymm0,YMMWORD PTR [rcx+rax*1]
  401685:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0x20]
  40168b:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0xe0]
  401695:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0xc0]
  40169f:	vmovups YMMWORD PTR [rcx+rax*1],ymm2
  4016a4:	vmovups YMMWORD PTR [rcx+rax*1+0x20],ymm3
  4016aa:	vmovups YMMWORD PTR [r15+rax*1-0xe0],ymm0
  4016b4:	vmovups YMMWORD PTR [r15+rax*1-0xc0],ymm1
  4016be:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0x40]
  4016c4:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0x60]
  4016ca:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0xa0]
  4016d4:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0x80]
  4016db:	vmovups YMMWORD PTR [rcx+rax*1+0x40],ymm2
  4016e1:	vmovups YMMWORD PTR [rcx+rax*1+0x60],ymm3
  4016e7:	vmovups YMMWORD PTR [r15+rax*1-0xa0],ymm0
  4016f1:	vmovups YMMWORD PTR [r15+rax*1-0x80],ymm1
  4016f8:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0x80]
  401701:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0xa0]
  40170a:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0x60]
  401711:	vmovups ymm3,YMMWORD PTR [r15+rax*1-0x40]
  401718:	vmovups YMMWORD PTR [rcx+rax*1+0x80],ymm2
  401721:	vmovups YMMWORD PTR [rcx+rax*1+0xa0],ymm3
  40172a:	vmovups YMMWORD PTR [r15+rax*1-0x60],ymm0
  401731:	vmovups YMMWORD PTR [r15+rax*1-0x40],ymm1
  401738:	vmovups ymm0,YMMWORD PTR [rcx+rax*1+0xc0]
  401741:	vmovups ymm1,YMMWORD PTR [rcx+rax*1+0xe0]
  40174a:	vmovups ymm2,YMMWORD PTR [r15+rax*1-0x20]
  401751:	vmovups ymm3,YMMWORD PTR [r15+rax*1]
  401757:	vmovups YMMWORD PTR [rcx+rax*1+0xc0],ymm2
  401760:	vmovups YMMWORD PTR [rcx+rax*1+0xe0],ymm3
  401769:	vmovups YMMWORD PTR [r15+rax*1-0x20],ymm0
  401770:	vmovups YMMWORD PTR [r15+rax*1],ymm1
  401776:	add    rax,0x100
  40177c:	add    rdx,0x4
  401780:	jne    401680 <sort@@Base+0x260>
  401786:	cmp    QWORD PTR [rsp+0x38],0x0
  40178c:	je     4017d5 <sort@@Base+0x3b5>
  40178e:	lea    rdx,[r9+rax*1]
  401792:	add    rax,rcx
  401795:	add    rax,0x20
  401799:	xor    esi,esi
  40179b:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	vmovups ymm0,YMMWORD PTR [rax+rsi*1-0x20]
  4017a6:	vmovups ymm1,YMMWORD PTR [rax+rsi*1]
  4017ab:	vmovups ymm2,YMMWORD PTR [rdx+rsi*1-0x20]
  4017b1:	vmovups ymm3,YMMWORD PTR [rdx+rsi*1]
  4017b6:	vmovups YMMWORD PTR [rax+rsi*1-0x20],ymm2
  4017bc:	vmovups YMMWORD PTR [rax+rsi*1],ymm3
  4017c1:	vmovups YMMWORD PTR [rdx+rsi*1-0x20],ymm0
  4017c7:	vmovups YMMWORD PTR [rdx+rsi*1],ymm1
  4017cc:	add    rsi,0x40
  4017d0:	cmp    rbp,rsi
  4017d3:	jne    4017a0 <sort@@Base+0x380>
  4017d5:	mov    rdx,QWORD PTR [rsp+0x48]
  4017da:	mov    rax,rdx
  4017dd:	cmp    rdx,r8
  4017e0:	jne    40159c <sort@@Base+0x17c>
  4017e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017f0:	add    QWORD PTR [rsp+0x20],r12
  4017f5:	add    QWORD PTR [rsp+0x18],0xffffffffffffffff
  4017fb:	add    r15,r12
  4017fe:	add    r9,r12
  401801:	add    r13,r12
  401804:	mov    rdx,QWORD PTR [rsp+0x80]
  40180c:	cmp    rdx,QWORD PTR [rsp+0x60]
  401811:	jne    4014e0 <sort@@Base+0xc0>
  401817:	add    rsp,0x98
  40181e:	pop    rbx
  40181f:	pop    r12
  401821:	pop    r13
  401823:	pop    r14
  401825:	pop    r15
  401827:	pop    rbp
  401828:	vzeroupper 
  40182b:	ret    
  40182c:	nop    DWORD PTR [rax+0x0]

0000000000401830 <linear_search@@Base>:
  401830:	push   rbp
  401831:	push   r15
  401833:	push   r14
  401835:	push   r13
  401837:	push   r12
  401839:	push   rbx
  40183a:	sub    rsp,0x18
  40183e:	mov    DWORD PTR [rsp+0xc],ecx
  401842:	xor    eax,eax
  401844:	test   edx,edx
  401846:	jle    401890 <linear_search@@Base+0x60>
  401848:	mov    r13,r8
  40184b:	mov    rbp,rdi
  40184e:	movsxd r14,edx
  401851:	mov    QWORD PTR [rsp+0x10],rsi
  401856:	mov    rbx,rsi
  401859:	xor    r15d,r15d
  40185c:	xor    r12d,r12d
  40185f:	nop
  401860:	mov    rdi,rbx
  401863:	mov    rsi,rbp
  401866:	call   r13
  401869:	test   eax,eax
  40186b:	je     401882 <linear_search@@Base+0x52>
  40186d:	add    r12,0x1
  401871:	add    r15d,DWORD PTR [rsp+0xc]
  401876:	add    rbx,r14
  401879:	cmp    r12,r14
  40187c:	jl     401860 <linear_search@@Base+0x30>
  40187e:	xor    eax,eax
  401880:	jmp    401890 <linear_search@@Base+0x60>
  401882:	movsxd rax,r15d
  401885:	mov    rcx,QWORD PTR [rsp+0x10]
  40188a:	add    rcx,rax
  40188d:	mov    rax,rcx
  401890:	add    rsp,0x18
  401894:	pop    rbx
  401895:	pop    r12
  401897:	pop    r13
  401899:	pop    r14
  40189b:	pop    r15
  40189d:	pop    rbp
  40189e:	ret    
  40189f:	nop

00000000004018a0 <binary_search@@Base>:
  4018a0:	push   rbp
  4018a1:	push   r15
  4018a3:	push   r14
  4018a5:	push   r13
  4018a7:	push   r12
  4018a9:	push   rbx
  4018aa:	sub    rsp,0x18
  4018ae:	mov    DWORD PTR [rsp+0xc],ecx
  4018b2:	mov    QWORD PTR [rsp+0x10],rsi
  4018b7:	test   edx,edx
  4018b9:	jle    40192c <binary_search@@Base+0x8c>
  4018bb:	mov    r12,r8
  4018be:	mov    ebx,edx
  4018c0:	mov    r13,rdi
  4018c3:	add    ebx,0xffffffff
  4018c6:	xor    r14d,r14d
  4018c9:	nop    DWORD PTR [rax+0x0]
  4018d0:	lea    eax,[rbx+r14*1]
  4018d4:	mov    r15d,eax
  4018d7:	shr    r15d,0x1f
  4018db:	add    r15d,eax
  4018de:	sar    r15d,1
  4018e1:	mov    eax,r15d
  4018e4:	imul   eax,DWORD PTR [rsp+0xc]
  4018e9:	movsxd rbp,eax
  4018ec:	add    rbp,QWORD PTR [rsp+0x10]
  4018f1:	mov    rdi,r13
  4018f4:	mov    rsi,rbp
  4018f7:	call   r12
  4018fa:	test   eax,eax
  4018fc:	jne    40192e <binary_search@@Base+0x8e>
  4018fe:	mov    rdi,r13
  401901:	mov    rsi,rbp
  401904:	call   r12
  401907:	cmp    eax,0xffffffff
  40190a:	je     401920 <binary_search@@Base+0x80>
  40190c:	add    r15d,0x1
  401910:	mov    r14d,r15d
  401913:	cmp    r14d,ebx
  401916:	jle    4018d0 <binary_search@@Base+0x30>
  401918:	jmp    40192c <binary_search@@Base+0x8c>
  40191a:	nop    WORD PTR [rax+rax*1+0x0]
  401920:	add    r15d,0xffffffff
  401924:	mov    ebx,r15d
  401927:	cmp    r14d,ebx
  40192a:	jle    4018d0 <binary_search@@Base+0x30>
  40192c:	xor    ebp,ebp
  40192e:	mov    rax,rbp
  401931:	add    rsp,0x18
  401935:	pop    rbx
  401936:	pop    r12
  401938:	pop    r13
  40193a:	pop    r14
  40193c:	pop    r15
  40193e:	pop    rbp
  40193f:	ret    

0000000000401940 <insertion_sort@@Base>:
  401940:	push   rbp
  401941:	push   r15
  401943:	push   r14
  401945:	push   r13
  401947:	push   r12
  401949:	push   rbx
  40194a:	sub    rsp,0xe8
  401951:	mov    QWORD PTR [rsp+0xd8],rcx
  401959:	mov    DWORD PTR [rsp+0x4],edx
  40195d:	cmp    esi,0x2
  401960:	jl     401e41 <insertion_sort@@Base+0x501>
  401966:	mov    r8,rdi
  401969:	mov    eax,DWORD PTR [rsp+0x4]
  40196d:	mov    ebp,eax
  40196f:	movsxd r10,eax
  401972:	mov    eax,esi
  401974:	mov    QWORD PTR [rsp+0x40],rax
  401979:	mov    rax,r10
  40197c:	neg    rax
  40197f:	mov    QWORD PTR [rsp+0x20],rax
  401984:	lea    rax,[r10+rbp*1]
  401988:	mov    QWORD PTR [rsp+0x38],rax
  40198d:	mov    eax,ebp
  40198f:	and    eax,0xffffffc0
  401992:	mov    QWORD PTR [rsp+0x98],rax
  40199a:	lea    rax,[rax-0x40]
  40199e:	mov    QWORD PTR [rsp+0x90],rax
  4019a6:	shr    rax,0x6
  4019aa:	lea    esi,[rax+0x1]
  4019ad:	mov    r9d,ebp
  4019b0:	and    r9d,0x3
  4019b4:	and    esi,0x3
  4019b7:	lea    r12,[rdi+r10*1]
  4019bb:	add    r12,0xe0
  4019c2:	lea    r14,[rdi+0xe0]
  4019c9:	mov    rdx,rsi
  4019cc:	sub    rdx,rax
  4019cf:	add    rdx,0xffffffffffffffff
  4019d3:	mov    QWORD PTR [rsp+0x48],rdx
  4019d8:	lea    rdx,[rdi+0x20]
  4019dc:	mov    QWORD PTR [rsp+0x88],rsi
  4019e4:	shl    rsi,0x6
  4019e8:	mov    QWORD PTR [rsp+0x10],rsi
  4019ed:	mov    QWORD PTR [rsp+0xd0],r9
  4019f5:	neg    r9
  4019f8:	mov    QWORD PTR [rsp+0xb8],r9
  401a00:	lea    r13,[rdi+r10*1]
  401a04:	add    r13,0x20
  401a08:	lea    rax,[r10+0x3]
  401a0c:	mov    QWORD PTR [rsp+0xa0],rax
  401a14:	mov    ecx,0x1
  401a19:	xor    eax,eax
  401a1b:	mov    r15,rdi
  401a1e:	mov    QWORD PTR [rsp+0x8],r10
  401a23:	mov    QWORD PTR [rsp+0x18],rbp
  401a28:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	mov    QWORD PTR [rsp+0x58],rax
  401a35:	mov    rbx,rax
  401a38:	imul   rbx,r10
  401a3c:	lea    rax,[rbx+r10*1]
  401a40:	mov    QWORD PTR [rsp+0xc8],rax
  401a48:	mov    rax,QWORD PTR [rsp+0x38]
  401a4d:	lea    rax,[rax+rbx*1]
  401a51:	mov    QWORD PTR [rsp+0xa8],rax
  401a59:	mov    QWORD PTR [rsp+0xb0],rbx
  401a61:	lea    rax,[rbx+rbp*1]
  401a65:	mov    QWORD PTR [rsp+0xc0],rax
  401a6d:	mov    QWORD PTR [rsp+0x50],r15
  401a72:	mov    QWORD PTR [rsp+0x68],r13
  401a77:	mov    QWORD PTR [rsp+0x70],rdx
  401a7c:	mov    rbp,rdx
  401a7f:	mov    QWORD PTR [rsp+0x78],r14
  401a84:	mov    QWORD PTR [rsp+0x80],r12
  401a8c:	xor    eax,eax
  401a8e:	mov    QWORD PTR [rsp+0x28],rax
  401a93:	mov    QWORD PTR [rsp+0x60],rcx
  401a98:	mov    QWORD PTR [rsp+0x30],rcx
  401a9d:	nop    DWORD PTR [rax]
  401aa0:	mov    rcx,QWORD PTR [rsp+0x30]
  401aa5:	mov    rdi,rcx
  401aa8:	mov    rax,QWORD PTR [rsp+0x8]
  401aad:	imul   rdi,rax
  401ab1:	add    rdi,r8
  401ab4:	mov    QWORD PTR [rsp+0xe0],rcx
  401abc:	lea    rsi,[rcx-0x1]
  401ac0:	mov    QWORD PTR [rsp+0x30],rsi
  401ac5:	imul   rsi,rax
  401ac9:	add    rsi,r8
  401acc:	mov    rbx,r8
  401acf:	vzeroupper 
  401ad2:	call   QWORD PTR [rsp+0xd8]
  401ad9:	mov    r8,rbx
  401adc:	cmp    eax,0xffffffff
  401adf:	jne    401def <insertion_sort@@Base+0x4af>
  401ae5:	cmp    DWORD PTR [rsp+0x4],0x0
  401aea:	mov    r10,rbp
  401aed:	mov    rbp,QWORD PTR [rsp+0x18]
  401af2:	mov    r11,QWORD PTR [rsp+0x28]
  401af7:	jle    401dc0 <insertion_sort@@Base+0x480>
  401afd:	cmp    DWORD PTR [rsp+0x4],0x40
  401b02:	jb     401b57 <insertion_sort@@Base+0x217>
  401b04:	mov    rax,r11
  401b07:	imul   rax,QWORD PTR [rsp+0x20]
  401b0d:	mov    rcx,QWORD PTR [rsp+0xc8]
  401b15:	lea    rcx,[rcx+rax*1]
  401b19:	add    rcx,r8
  401b1c:	mov    rdx,QWORD PTR [rsp+0xc0]
  401b24:	lea    rdx,[rdx+rax*1]
  401b28:	add    rdx,r8
  401b2b:	cmp    rcx,rdx
  401b2e:	jae    401c0a <insertion_sort@@Base+0x2ca>
  401b34:	mov    rcx,QWORD PTR [rsp+0xa8]
  401b3c:	lea    rcx,[rcx+rax*1]
  401b40:	add    rcx,r8
  401b43:	add    rax,QWORD PTR [rsp+0xb0]
  401b4b:	add    rax,r8
  401b4e:	cmp    rax,rcx
  401b51:	jae    401c0a <insertion_sort@@Base+0x2ca>
  401b57:	xor    eax,eax
  401b59:	mov    rdi,rax
  401b5c:	not    rdi
  401b5f:	add    rdi,rbp
  401b62:	cmp    QWORD PTR [rsp+0xd0],0x0
  401b6b:	je     401b9a <insertion_sort@@Base+0x25a>
  401b6d:	mov    rcx,QWORD PTR [rsp+0x8]
  401b72:	lea    rdx,[r15+rcx*1]
  401b76:	mov    rsi,QWORD PTR [rsp+0xb8]
  401b7e:	xchg   ax,ax
  401b80:	movzx  ebx,BYTE PTR [rdx+rax*1]
  401b84:	movzx  ecx,BYTE PTR [r15+rax*1]
  401b89:	mov    BYTE PTR [rdx+rax*1],cl
  401b8c:	mov    BYTE PTR [r15+rax*1],bl
  401b90:	add    rax,0x1
  401b94:	add    rsi,0x1
  401b98:	jne    401b80 <insertion_sort@@Base+0x240>
  401b9a:	cmp    rdi,0x3
  401b9e:	jb     401dc0 <insertion_sort@@Base+0x480>
  401ba4:	mov    rcx,QWORD PTR [rsp+0xa0]
  401bac:	lea    rcx,[r15+rcx*1]
  401bb0:	movzx  edx,BYTE PTR [rcx+rax*1-0x3]
  401bb5:	movzx  ebx,BYTE PTR [r15+rax*1]
  401bba:	mov    BYTE PTR [rcx+rax*1-0x3],bl
  401bbe:	mov    BYTE PTR [r15+rax*1],dl
  401bc2:	movzx  edx,BYTE PTR [rcx+rax*1-0x2]
  401bc7:	movzx  ebx,BYTE PTR [r15+rax*1+0x1]
  401bcd:	mov    BYTE PTR [rcx+rax*1-0x2],bl
  401bd1:	mov    BYTE PTR [r15+rax*1+0x1],dl
  401bd6:	movzx  edx,BYTE PTR [rcx+rax*1-0x1]
  401bdb:	movzx  ebx,BYTE PTR [r15+rax*1+0x2]
  401be1:	mov    BYTE PTR [rcx+rax*1-0x1],bl
  401be5:	mov    BYTE PTR [r15+rax*1+0x2],dl
  401bea:	movzx  edx,BYTE PTR [rcx+rax*1]
  401bee:	movzx  ebx,BYTE PTR [r15+rax*1+0x3]
  401bf4:	mov    BYTE PTR [rcx+rax*1],bl
  401bf7:	mov    BYTE PTR [r15+rax*1+0x3],dl
  401bfc:	add    rax,0x4
  401c00:	cmp    rbp,rax
  401c03:	jne    401bb0 <insertion_sort@@Base+0x270>
  401c05:	jmp    401dc0 <insertion_sort@@Base+0x480>
  401c0a:	cmp    QWORD PTR [rsp+0x90],0xc0
  401c16:	jae    401c33 <insertion_sort@@Base+0x2f3>
  401c18:	xor    eax,eax
  401c1a:	mov    rsi,QWORD PTR [rsp+0x10]
  401c1f:	cmp    QWORD PTR [rsp+0x88],0x0
  401c28:	jne    401d5b <insertion_sort@@Base+0x41b>
  401c2e:	jmp    401da5 <insertion_sort@@Base+0x465>
  401c33:	mov    rcx,QWORD PTR [rsp+0x48]
  401c38:	xor    eax,eax
  401c3a:	mov    rsi,QWORD PTR [rsp+0x10]
  401c3f:	nop
  401c40:	vmovups ymm0,YMMWORD PTR [r12+rax*1-0xe0]
  401c4a:	vmovups ymm1,YMMWORD PTR [r12+rax*1-0xc0]
  401c54:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0xe0]
  401c5e:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0xc0]
  401c68:	vmovups YMMWORD PTR [r12+rax*1-0xe0],ymm2
  401c72:	vmovups YMMWORD PTR [r12+rax*1-0xc0],ymm3
  401c7c:	vmovups YMMWORD PTR [r14+rax*1-0xe0],ymm0
  401c86:	vmovups YMMWORD PTR [r14+rax*1-0xc0],ymm1
  401c90:	vmovups ymm0,YMMWORD PTR [r12+rax*1-0xa0]
  401c9a:	vmovups ymm1,YMMWORD PTR [r12+rax*1-0x80]
  401ca1:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0xa0]
  401cab:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0x80]
  401cb2:	vmovups YMMWORD PTR [r12+rax*1-0xa0],ymm2
  401cbc:	vmovups YMMWORD PTR [r12+rax*1-0x80],ymm3
  401cc3:	vmovups YMMWORD PTR [r14+rax*1-0xa0],ymm0
  401ccd:	vmovups YMMWORD PTR [r14+rax*1-0x80],ymm1
  401cd4:	vmovups ymm0,YMMWORD PTR [r12+rax*1-0x60]
  401cdb:	vmovups ymm1,YMMWORD PTR [r12+rax*1-0x40]
  401ce2:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0x60]
  401ce9:	vmovups ymm3,YMMWORD PTR [r14+rax*1-0x40]
  401cf0:	vmovups YMMWORD PTR [r12+rax*1-0x60],ymm2
  401cf7:	vmovups YMMWORD PTR [r12+rax*1-0x40],ymm3
  401cfe:	vmovups YMMWORD PTR [r14+rax*1-0x60],ymm0
  401d05:	vmovups YMMWORD PTR [r14+rax*1-0x40],ymm1
  401d0c:	vmovups ymm0,YMMWORD PTR [r12+rax*1-0x20]
  401d13:	vmovups ymm1,YMMWORD PTR [r12+rax*1]
  401d19:	vmovups ymm2,YMMWORD PTR [r14+rax*1-0x20]
  401d20:	vmovups ymm3,YMMWORD PTR [r14+rax*1]
  401d26:	vmovups YMMWORD PTR [r12+rax*1-0x20],ymm2
  401d2d:	vmovups YMMWORD PTR [r12+rax*1],ymm3
  401d33:	vmovups YMMWORD PTR [r14+rax*1-0x20],ymm0
  401d3a:	vmovups YMMWORD PTR [r14+rax*1],ymm1
  401d40:	add    rax,0x100
  401d46:	add    rcx,0x4
  401d4a:	jne    401c40 <insertion_sort@@Base+0x300>
  401d50:	cmp    QWORD PTR [rsp+0x88],0x0
  401d59:	je     401da5 <insertion_sort@@Base+0x465>
  401d5b:	lea    rcx,[r10+rax*1]
  401d5f:	add    rax,r13
  401d62:	xor    edx,edx
  401d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d6e:	xchg   ax,ax
  401d70:	vmovups ymm0,YMMWORD PTR [rax+rdx*1-0x20]
  401d76:	vmovups ymm1,YMMWORD PTR [rax+rdx*1]
  401d7b:	vmovups ymm2,YMMWORD PTR [rcx-0x20]
  401d80:	vmovups ymm3,YMMWORD PTR [rcx]
  401d84:	vmovups YMMWORD PTR [rax+rdx*1-0x20],ymm2
  401d8a:	vmovups YMMWORD PTR [rax+rdx*1],ymm3
  401d8f:	vmovups YMMWORD PTR [rcx-0x20],ymm0
  401d94:	vmovups YMMWORD PTR [rcx],ymm1
  401d98:	add    rcx,0x40
  401d9c:	add    rdx,0x40
  401da0:	cmp    rsi,rdx
  401da3:	jne    401d70 <insertion_sort@@Base+0x430>
  401da5:	mov    rcx,QWORD PTR [rsp+0x98]
  401dad:	mov    rax,rcx
  401db0:	cmp    rcx,rbp
  401db3:	jne    401b59 <insertion_sort@@Base+0x219>
  401db9:	nop    DWORD PTR [rax+0x0]
  401dc0:	add    r11,0x1
  401dc4:	mov    QWORD PTR [rsp+0x28],r11
  401dc9:	mov    rax,QWORD PTR [rsp+0x20]
  401dce:	add    r12,rax
  401dd1:	add    r14,rax
  401dd4:	add    r10,rax
  401dd7:	mov    rbp,r10
  401dda:	add    r13,rax
  401ddd:	add    r15,rax
  401de0:	cmp    QWORD PTR [rsp+0xe0],0x1
  401de9:	jg     401aa0 <insertion_sort@@Base+0x160>
  401def:	mov    rcx,QWORD PTR [rsp+0x60]
  401df4:	add    rcx,0x1
  401df8:	mov    rax,QWORD PTR [rsp+0x58]
  401dfd:	add    rax,0x1
  401e01:	mov    r10,QWORD PTR [rsp+0x8]
  401e06:	mov    r12,QWORD PTR [rsp+0x80]
  401e0e:	add    r12,r10
  401e11:	mov    r14,QWORD PTR [rsp+0x78]
  401e16:	add    r14,r10
  401e19:	mov    rdx,QWORD PTR [rsp+0x70]
  401e1e:	add    rdx,r10
  401e21:	mov    r13,QWORD PTR [rsp+0x68]
  401e26:	add    r13,r10
  401e29:	mov    r15,QWORD PTR [rsp+0x50]
  401e2e:	add    r15,r10
  401e31:	cmp    rcx,QWORD PTR [rsp+0x40]
  401e36:	mov    rbp,QWORD PTR [rsp+0x18]
  401e3b:	jne    401a30 <insertion_sort@@Base+0xf0>
  401e41:	add    rsp,0xe8
  401e48:	pop    rbx
  401e49:	pop    r12
  401e4b:	pop    r13
  401e4d:	pop    r14
  401e4f:	pop    r15
  401e51:	pop    rbp
  401e52:	vzeroupper 
  401e55:	ret    
  401e56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401e60 <comp_char_desc@@Base>:
  401e60:	mov    al,BYTE PTR [rdi]
  401e62:	mov    cl,BYTE PTR [rsi]
  401e64:	xor    edx,edx
  401e66:	cmp    al,cl
  401e68:	setg   dl
  401e6b:	neg    edx
  401e6d:	cmp    al,cl
  401e6f:	mov    eax,0x1
  401e74:	cmovge eax,edx
  401e77:	ret    
  401e78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401e80 <main@@Base>:
  401e80:	push   rbp
  401e81:	push   r15
  401e83:	push   r14
  401e85:	push   r13
  401e87:	push   r12
  401e89:	push   rbx
  401e8a:	sub    rsp,0x28
  401e8e:	mov    r14,QWORD PTR [rip+0x118b]        # 403020 <_IO_stdin_used@@Base+0x20>
  401e95:	mov    QWORD PTR [rsp+0x10],r14
  401e9a:	vmovaps xmm0,XMMWORD PTR [rip+0x116e]        # 403010 <_IO_stdin_used@@Base+0x10>
  401ea2:	vmovaps XMMWORD PTR [rsp],xmm0
  401ea7:	lea    rdi,[rip+0x117a]        # 403028 <_IO_stdin_used@@Base+0x28>
  401eae:	call   401040 <puts@plt>
  401eb3:	lea    rdi,[rip+0x117c]        # 403036 <_IO_stdin_used@@Base+0x36>
  401eba:	xor    r12d,r12d
  401ebd:	xor    eax,eax
  401ebf:	call   401060 <printf@plt>
  401ec4:	lea    r15,[rip+0x1172]        # 40303d <_IO_stdin_used@@Base+0x3d>
  401ecb:	mov    esi,0x3
  401ed0:	xor    eax,eax
  401ed2:	mov    rdi,r15
  401ed5:	call   401060 <printf@plt>
  401eda:	mov    esi,0xfffffffe
  401edf:	xor    eax,eax
  401ee1:	mov    rdi,r15
  401ee4:	call   401060 <printf@plt>
  401ee9:	mov    esi,0x4
  401eee:	xor    eax,eax
  401ef0:	mov    rdi,r15
  401ef3:	call   401060 <printf@plt>
  401ef8:	mov    esi,0x5
  401efd:	xor    eax,eax
  401eff:	mov    rdi,r15
  401f02:	call   401060 <printf@plt>
  401f07:	mov    esi,0x9
  401f0c:	xor    eax,eax
  401f0e:	mov    rdi,r15
  401f11:	call   401060 <printf@plt>
  401f16:	mov    esi,0x1
  401f1b:	xor    eax,eax
  401f1d:	mov    rdi,r15
  401f20:	call   401060 <printf@plt>
  401f25:	mov    edi,0xa
  401f2a:	call   401030 <putchar@plt>
  401f2f:	lea    r10,[rsp+0x4]
  401f34:	mov    rcx,0xffffffffffffffff
  401f3b:	mov    r9d,0x1
  401f41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f50:	mov    rdi,r12
  401f53:	lea    rsi,[rsp+r12*4]
  401f57:	lea    r12,[r12+0x1]
  401f5c:	mov    rax,rsi
  401f5f:	cmp    r12,0x5
  401f63:	ja     402059 <main@@Base+0x1d9>
  401f69:	mov    r8d,0x4
  401f6f:	sub    r8,rdi
  401f72:	mov    eax,0x5
  401f77:	sub    eax,edi
  401f79:	test   al,0x7
  401f7b:	je     401fbb <main@@Base+0x13b>
  401f7d:	mov    rbx,r10
  401f80:	mov    rdi,rcx
  401f83:	mov    rdx,rsi
  401f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f90:	mov    ebp,DWORD PTR [rdx]
  401f92:	mov    rax,rbx
  401f95:	cmp    ebp,DWORD PTR [rbx]
  401f97:	jg     401f9c <main@@Base+0x11c>
  401f99:	mov    rax,rdx
  401f9c:	add    rdi,0xffffffffffffffff
  401fa0:	add    rbx,0x4
  401fa4:	mov    rdx,rax
  401fa7:	cmp    rdi,0xfffffffffffffffa
  401fab:	jne    401f90 <main@@Base+0x110>
  401fad:	neg    rdi
  401fb0:	cmp    r8,0x7
  401fb4:	jae    401fcb <main@@Base+0x14b>
  401fb6:	jmp    402059 <main@@Base+0x1d9>
  401fbb:	mov    rdi,r9
  401fbe:	mov    rax,rsi
  401fc1:	cmp    r8,0x7
  401fc5:	jb     402059 <main@@Base+0x1d9>
  401fcb:	shl    rdi,0x2
  401fcf:	nop
  401fd0:	mov    edx,DWORD PTR [rax]
  401fd2:	cmp    edx,DWORD PTR [rsp+rdi*1]
  401fd5:	jle    401fdb <main@@Base+0x15b>
  401fd7:	lea    rax,[rsp+rdi*1]
  401fdb:	mov    edx,DWORD PTR [rax]
  401fdd:	cmp    edx,DWORD PTR [rsp+rdi*1+0x4]
  401fe1:	jle    401feb <main@@Base+0x16b>
  401fe3:	lea    rax,[rsp+rdi*1]
  401fe7:	add    rax,0x4
  401feb:	mov    edx,DWORD PTR [rax]
  401fed:	cmp    edx,DWORD PTR [rsp+rdi*1+0x8]
  401ff1:	jle    401ffb <main@@Base+0x17b>
  401ff3:	lea    rax,[rsp+rdi*1]
  401ff7:	add    rax,0x8
  401ffb:	mov    edx,DWORD PTR [rax]
  401ffd:	cmp    edx,DWORD PTR [rsp+rdi*1+0xc]
  402001:	jle    40200b <main@@Base+0x18b>
  402003:	lea    rax,[rsp+rdi*1]
  402007:	add    rax,0xc
  40200b:	mov    edx,DWORD PTR [rax]
  40200d:	cmp    edx,DWORD PTR [rsp+rdi*1+0x10]
  402011:	jle    40201b <main@@Base+0x19b>
  402013:	lea    rax,[rsp+rdi*1]
  402017:	add    rax,0x10
  40201b:	mov    edx,DWORD PTR [rax]
  40201d:	cmp    edx,DWORD PTR [rsp+rdi*1+0x14]
  402021:	jle    40202b <main@@Base+0x1ab>
  402023:	lea    rax,[rsp+rdi*1]
  402027:	add    rax,0x14
  40202b:	mov    edx,DWORD PTR [rax]
  40202d:	cmp    edx,DWORD PTR [rsp+rdi*1+0x18]
  402031:	jle    40203b <main@@Base+0x1bb>
  402033:	lea    rax,[rsp+rdi*1]
  402037:	add    rax,0x18
  40203b:	mov    edx,DWORD PTR [rax]
  40203d:	cmp    edx,DWORD PTR [rsp+rdi*1+0x1c]
  402041:	jle    40204b <main@@Base+0x1cb>
  402043:	lea    rax,[rsp+rdi*1]
  402047:	add    rax,0x1c
  40204b:	add    rdi,0x20
  40204f:	cmp    rdi,0x18
  402053:	jne    401fd0 <main@@Base+0x150>
  402059:	mov    dl,BYTE PTR [rax]
  40205b:	mov    bl,BYTE PTR [rsi]
  40205d:	mov    BYTE PTR [rax],bl
  40205f:	mov    BYTE PTR [rsi],dl
  402061:	mov    dl,BYTE PTR [rax+0x1]
  402064:	mov    bl,BYTE PTR [rsi+0x1]
  402067:	mov    BYTE PTR [rax+0x1],bl
  40206a:	mov    BYTE PTR [rsi+0x1],dl
  40206d:	mov    dl,BYTE PTR [rax+0x2]
  402070:	mov    bl,BYTE PTR [rsi+0x2]
  402073:	mov    BYTE PTR [rax+0x2],bl
  402076:	mov    BYTE PTR [rsi+0x2],dl
  402079:	mov    dl,BYTE PTR [rax+0x3]
  40207c:	mov    bl,BYTE PTR [rsi+0x3]
  40207f:	mov    BYTE PTR [rax+0x3],bl
  402082:	mov    BYTE PTR [rsi+0x3],dl
  402085:	add    r9,0x1
  402089:	add    rcx,0xffffffffffffffff
  40208d:	add    r10,0x4
  402091:	cmp    r12,0x6
  402095:	jne    401f50 <main@@Base+0xd0>
  40209b:	lea    rdi,[rip+0xf9f]        # 403041 <_IO_stdin_used@@Base+0x41>
  4020a2:	xor    eax,eax
  4020a4:	call   401060 <printf@plt>
  4020a9:	mov    esi,DWORD PTR [rsp]
  4020ac:	lea    rbx,[rip+0xf8a]        # 40303d <_IO_stdin_used@@Base+0x3d>
  4020b3:	xor    eax,eax
  4020b5:	mov    rdi,rbx
  4020b8:	call   401060 <printf@plt>
  4020bd:	mov    esi,DWORD PTR [rsp+0x4]
  4020c1:	xor    eax,eax
  4020c3:	mov    rdi,rbx
  4020c6:	call   401060 <printf@plt>
  4020cb:	mov    esi,DWORD PTR [rsp+0x8]
  4020cf:	xor    eax,eax
  4020d1:	mov    rdi,rbx
  4020d4:	call   401060 <printf@plt>
  4020d9:	mov    esi,DWORD PTR [rsp+0xc]
  4020dd:	xor    eax,eax
  4020df:	mov    rdi,rbx
  4020e2:	call   401060 <printf@plt>
  4020e7:	mov    esi,DWORD PTR [rsp+0x10]
  4020eb:	xor    eax,eax
  4020ed:	mov    rdi,rbx
  4020f0:	call   401060 <printf@plt>
  4020f5:	mov    esi,DWORD PTR [rsp+0x14]
  4020f9:	xor    eax,eax
  4020fb:	mov    rdi,rbx
  4020fe:	call   401060 <printf@plt>
  402103:	mov    edi,0xa
  402108:	call   401030 <putchar@plt>
  40210d:	vmovaps xmm0,XMMWORD PTR [rip+0xefb]        # 403010 <_IO_stdin_used@@Base+0x10>
  402115:	vmovaps XMMWORD PTR [rsp],xmm0
  40211a:	mov    QWORD PTR [rsp+0x10],r14
  40211f:	lea    rdi,[rip+0xf23]        # 403049 <_IO_stdin_used@@Base+0x49>
  402126:	call   401040 <puts@plt>
  40212b:	cmp    DWORD PTR [rsp+0x18],0x4
  402130:	jne    402139 <main@@Base+0x2b9>
  402132:	mov    edx,0x4
  402137:	jmp    402145 <main@@Base+0x2c5>
  402139:	cmp    DWORD PTR [rsp+0x1e],0x4
  40213e:	jne    40215a <main@@Base+0x2da>
  402140:	mov    edx,0x5
  402145:	lea    rdi,[rip+0xf07]        # 403053 <_IO_stdin_used@@Base+0x53>
  40214c:	mov    esi,0x4
  402151:	xor    eax,eax
  402153:	call   401060 <printf@plt>
  402158:	jmp    40216d <main@@Base+0x2ed>
  40215a:	lea    rdi,[rip+0xf1f]        # 403080 <_IO_stdin_used@@Base+0x80>
  402161:	mov    esi,0x4
  402166:	xor    eax,eax
  402168:	call   401060 <printf@plt>
  40216d:	mov    QWORD PTR [rsp+0x10],r14
  402172:	vmovaps xmm0,XMMWORD PTR [rip+0xe96]        # 403010 <_IO_stdin_used@@Base+0x10>
  40217a:	vmovaps XMMWORD PTR [rsp],xmm0
  40217f:	lea    r11,[rsp+0x4]
  402184:	mov    rbx,0xffffffffffffffff
  40218b:	mov    r10d,0x1
  402191:	xor    r8d,r8d
  402194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219e:	xchg   ax,ax
  4021a0:	mov    rcx,r8
  4021a3:	lea    rdi,[rsp+r8*4]
  4021a7:	lea    r8,[r8+0x1]
  4021ab:	mov    rax,rdi
  4021ae:	cmp    r8,0x5
  4021b2:	ja     4022a9 <main@@Base+0x429>
  4021b8:	mov    r9d,0x4
  4021be:	sub    r9,rcx
  4021c1:	mov    eax,0x5
  4021c6:	sub    eax,ecx
  4021c8:	test   al,0x7
  4021ca:	je     40220b <main@@Base+0x38b>
  4021cc:	mov    rsi,r11
  4021cf:	mov    rcx,rbx
  4021d2:	mov    rdx,rdi
  4021d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021df:	nop
  4021e0:	mov    ebp,DWORD PTR [rdx]
  4021e2:	mov    rax,rsi
  4021e5:	cmp    ebp,DWORD PTR [rsi]
  4021e7:	jg     4021ec <main@@Base+0x36c>
  4021e9:	mov    rax,rdx
  4021ec:	add    rcx,0xffffffffffffffff
  4021f0:	add    rsi,0x4
  4021f4:	mov    rdx,rax
  4021f7:	cmp    rcx,0xfffffffffffffffa
  4021fb:	jne    4021e0 <main@@Base+0x360>
  4021fd:	neg    rcx
  402200:	cmp    r9,0x7
  402204:	jae    40221b <main@@Base+0x39b>
  402206:	jmp    4022a9 <main@@Base+0x429>
  40220b:	mov    rcx,r10
  40220e:	mov    rax,rdi
  402211:	cmp    r9,0x7
  402215:	jb     4022a9 <main@@Base+0x429>
  40221b:	shl    rcx,0x2
  40221f:	nop
  402220:	mov    edx,DWORD PTR [rax]
  402222:	cmp    edx,DWORD PTR [rsp+rcx*1]
  402225:	jle    40222b <main@@Base+0x3ab>
  402227:	lea    rax,[rsp+rcx*1]
  40222b:	mov    edx,DWORD PTR [rax]
  40222d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x4]
  402231:	jle    40223b <main@@Base+0x3bb>
  402233:	lea    rax,[rsp+rcx*1]
  402237:	add    rax,0x4
  40223b:	mov    edx,DWORD PTR [rax]
  40223d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x8]
  402241:	jle    40224b <main@@Base+0x3cb>
  402243:	lea    rax,[rsp+rcx*1]
  402247:	add    rax,0x8
  40224b:	mov    edx,DWORD PTR [rax]
  40224d:	cmp    edx,DWORD PTR [rsp+rcx*1+0xc]
  402251:	jle    40225b <main@@Base+0x3db>
  402253:	lea    rax,[rsp+rcx*1]
  402257:	add    rax,0xc
  40225b:	mov    edx,DWORD PTR [rax]
  40225d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x10]
  402261:	jle    40226b <main@@Base+0x3eb>
  402263:	lea    rax,[rsp+rcx*1]
  402267:	add    rax,0x10
  40226b:	mov    edx,DWORD PTR [rax]
  40226d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x14]
  402271:	jle    40227b <main@@Base+0x3fb>
  402273:	lea    rax,[rsp+rcx*1]
  402277:	add    rax,0x14
  40227b:	mov    edx,DWORD PTR [rax]
  40227d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x18]
  402281:	jle    40228b <main@@Base+0x40b>
  402283:	lea    rax,[rsp+rcx*1]
  402287:	add    rax,0x18
  40228b:	mov    edx,DWORD PTR [rax]
  40228d:	cmp    edx,DWORD PTR [rsp+rcx*1+0x1c]
  402291:	jle    40229b <main@@Base+0x41b>
  402293:	lea    rax,[rsp+rcx*1]
  402297:	add    rax,0x1c
  40229b:	add    rcx,0x20
  40229f:	cmp    rcx,0x18
  4022a3:	jne    402220 <main@@Base+0x3a0>
  4022a9:	mov    cl,BYTE PTR [rax]
  4022ab:	mov    dl,BYTE PTR [rdi]
  4022ad:	mov    BYTE PTR [rax],dl
  4022af:	mov    BYTE PTR [rdi],cl
  4022b1:	mov    cl,BYTE PTR [rax+0x1]
  4022b4:	mov    dl,BYTE PTR [rdi+0x1]
  4022b7:	mov    BYTE PTR [rax+0x1],dl
  4022ba:	mov    BYTE PTR [rdi+0x1],cl
  4022bd:	mov    cl,BYTE PTR [rax+0x2]
  4022c0:	mov    dl,BYTE PTR [rdi+0x2]
  4022c3:	mov    BYTE PTR [rax+0x2],dl
  4022c6:	mov    BYTE PTR [rdi+0x2],cl
  4022c9:	mov    cl,BYTE PTR [rax+0x3]
  4022cc:	mov    dl,BYTE PTR [rdi+0x3]
  4022cf:	mov    BYTE PTR [rax+0x3],dl
  4022d2:	mov    BYTE PTR [rdi+0x3],cl
  4022d5:	add    r10,0x1
  4022d9:	add    rbx,0xffffffffffffffff
  4022dd:	add    r11,0x4
  4022e1:	cmp    r8,0x6
  4022e5:	jne    4021a0 <main@@Base+0x320>
  4022eb:	lea    rdi,[rip+0xdb0]        # 4030a2 <_IO_stdin_used@@Base+0xa2>
  4022f2:	call   401040 <puts@plt>
  4022f7:	xor    ebp,ebp
  4022f9:	mov    ecx,0x5
  4022fe:	xchg   ax,ax
  402300:	lea    edx,[rcx+rbp*1]
  402303:	mov    esi,edx
  402305:	shr    esi,0x1f
  402308:	add    esi,edx
  40230a:	sar    esi,1
  40230c:	movsxd rdx,esi
  40230f:	mov    edi,DWORD PTR [rsp+rdx*4]
  402312:	cmp    edi,0x4
  402315:	setg   bl
  402318:	cmp    edi,0x3
  40231b:	setg   al
  40231e:	cmp    bl,al
  402320:	je     40235e <main@@Base+0x4de>
  402322:	cmp    edi,0x4
  402325:	jg     402340 <main@@Base+0x4c0>
  402327:	add    esi,0x1
  40232a:	mov    ebp,esi
  40232c:	cmp    ebp,ecx
  40232e:	jle    402300 <main@@Base+0x480>
  402330:	jmp    402349 <main@@Base+0x4c9>
  402332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40233c:	nop    DWORD PTR [rax+0x0]
  402340:	add    esi,0xffffffff
  402343:	mov    ecx,esi
  402345:	cmp    ebp,ecx
  402347:	jle    402300 <main@@Base+0x480>
  402349:	lea    rdi,[rip+0xd30]        # 403080 <_IO_stdin_used@@Base+0x80>
  402350:	mov    esi,0x4
  402355:	xor    eax,eax
  402357:	call   401060 <printf@plt>
  40235c:	jmp    402371 <main@@Base+0x4f1>
  40235e:	lea    rdi,[rip+0xcee]        # 403053 <_IO_stdin_used@@Base+0x53>
  402365:	mov    esi,0x4
  40236a:	xor    eax,eax
  40236c:	call   401060 <printf@plt>
  402371:	mov    QWORD PTR [rsp+0x10],r14
  402376:	vmovaps xmm0,XMMWORD PTR [rip+0xc92]        # 403010 <_IO_stdin_used@@Base+0x10>
  40237e:	vmovaps XMMWORD PTR [rsp],xmm0
  402383:	lea    rdi,[rip+0xd22]        # 4030ac <_IO_stdin_used@@Base+0xac>
  40238a:	call   401040 <puts@plt>
  40238f:	lea    rdi,[rip+0xca0]        # 403036 <_IO_stdin_used@@Base+0x36>
  402396:	xor    eax,eax
  402398:	call   401060 <printf@plt>
  40239d:	lea    rbx,[rip+0xc99]        # 40303d <_IO_stdin_used@@Base+0x3d>
  4023a4:	mov    esi,0x3
  4023a9:	xor    eax,eax
  4023ab:	mov    rdi,rbx
  4023ae:	call   401060 <printf@plt>
  4023b3:	mov    esi,0xfffffffe
  4023b8:	xor    eax,eax
  4023ba:	mov    rdi,rbx
  4023bd:	call   401060 <printf@plt>
  4023c2:	mov    esi,0x4
  4023c7:	xor    eax,eax
  4023c9:	mov    rdi,rbx
  4023cc:	call   401060 <printf@plt>
  4023d1:	mov    esi,0x5
  4023d6:	xor    eax,eax
  4023d8:	mov    rdi,rbx
  4023db:	call   401060 <printf@plt>
  4023e0:	mov    esi,0x9
  4023e5:	xor    eax,eax
  4023e7:	mov    rdi,rbx
  4023ea:	call   401060 <printf@plt>
  4023ef:	mov    esi,0x1
  4023f4:	xor    eax,eax
  4023f6:	mov    rdi,rbx
  4023f9:	call   401060 <printf@plt>
  4023fe:	mov    edi,0xa
  402403:	call   401030 <putchar@plt>
  402408:	mov    eax,DWORD PTR [rsp]
  40240b:	cmp    eax,0xffffffff
  40240e:	jl     40243f <main@@Base+0x5bf>
  402410:	mov    cl,BYTE PTR [rsp+0x4]
  402414:	mov    BYTE PTR [rsp+0x4],al
  402418:	mov    BYTE PTR [rsp],cl
  40241b:	mov    al,BYTE PTR [rsp+0x5]
  40241f:	mov    cl,BYTE PTR [rsp+0x1]
  402423:	mov    BYTE PTR [rsp+0x5],cl
  402427:	mov    BYTE PTR [rsp+0x1],al
  40242b:	movzx  eax,WORD PTR [rsp+0x6]
  402430:	movzx  ecx,WORD PTR [rsp+0x2]
  402435:	mov    WORD PTR [rsp+0x6],cx
  40243a:	mov    WORD PTR [rsp+0x2],ax
  40243f:	mov    ecx,DWORD PTR [rsp+0x4]
  402443:	mov    eax,DWORD PTR [rsp+0x8]
  402447:	cmp    ecx,eax
  402449:	jle    4024ad <main@@Base+0x62d>
  40244b:	mov    BYTE PTR [rsp+0x8],cl
  40244f:	mov    BYTE PTR [rsp+0x4],al
  402453:	mov    al,BYTE PTR [rsp+0x9]
  402457:	mov    cl,BYTE PTR [rsp+0x5]
  40245b:	mov    BYTE PTR [rsp+0x9],cl
  40245f:	mov    BYTE PTR [rsp+0x5],al
  402463:	movzx  eax,WORD PTR [rsp+0xa]
  402468:	movzx  ecx,WORD PTR [rsp+0x6]
  40246d:	mov    WORD PTR [rsp+0xa],cx
  402472:	mov    WORD PTR [rsp+0x6],ax
  402477:	mov    eax,DWORD PTR [rsp+0x4]
  40247b:	mov    ecx,DWORD PTR [rsp]
  40247e:	cmp    ecx,eax
  402480:	jle    4024ad <main@@Base+0x62d>
  402482:	mov    BYTE PTR [rsp+0x4],cl
  402486:	mov    BYTE PTR [rsp],al
  402489:	mov    al,BYTE PTR [rsp+0x5]
  40248d:	mov    cl,BYTE PTR [rsp+0x1]
  402491:	mov    BYTE PTR [rsp+0x5],cl
  402495:	mov    BYTE PTR [rsp+0x1],al
  402499:	movzx  eax,WORD PTR [rsp+0x6]
  40249e:	movzx  ecx,WORD PTR [rsp+0x2]
  4024a3:	mov    WORD PTR [rsp+0x6],cx
  4024a8:	mov    WORD PTR [rsp+0x2],ax
  4024ad:	mov    ecx,DWORD PTR [rsp+0x8]
  4024b1:	mov    eax,DWORD PTR [rsp+0xc]
  4024b5:	cmp    ecx,eax
  4024b7:	jle    402557 <main@@Base+0x6d7>
  4024bd:	mov    BYTE PTR [rsp+0xc],cl
  4024c1:	mov    BYTE PTR [rsp+0x8],al
  4024c5:	mov    al,BYTE PTR [rsp+0xd]
  4024c9:	mov    cl,BYTE PTR [rsp+0x9]
  4024cd:	mov    BYTE PTR [rsp+0xd],cl
  4024d1:	mov    BYTE PTR [rsp+0x9],al
  4024d5:	movzx  eax,WORD PTR [rsp+0xe]
  4024da:	movzx  ecx,WORD PTR [rsp+0xa]
  4024df:	mov    WORD PTR [rsp+0xe],cx
  4024e4:	mov    WORD PTR [rsp+0xa],ax
  4024e9:	mov    eax,DWORD PTR [rsp+0x8]
  4024ed:	mov    ecx,DWORD PTR [rsp+0x4]
  4024f1:	cmp    ecx,eax
  4024f3:	jle    402557 <main@@Base+0x6d7>
  4024f5:	mov    BYTE PTR [rsp+0x8],cl
  4024f9:	mov    BYTE PTR [rsp+0x4],al
  4024fd:	mov    al,BYTE PTR [rsp+0x9]
  402501:	mov    cl,BYTE PTR [rsp+0x5]
  402505:	mov    BYTE PTR [rsp+0x9],cl
  402509:	mov    BYTE PTR [rsp+0x5],al
  40250d:	movzx  eax,WORD PTR [rsp+0xa]
  402512:	movzx  ecx,WORD PTR [rsp+0x6]
  402517:	mov    WORD PTR [rsp+0xa],cx
  40251c:	mov    WORD PTR [rsp+0x6],ax
  402521:	mov    eax,DWORD PTR [rsp+0x4]
  402525:	mov    ecx,DWORD PTR [rsp]
  402528:	cmp    ecx,eax
  40252a:	jle    402557 <main@@Base+0x6d7>
  40252c:	mov    BYTE PTR [rsp+0x4],cl
  402530:	mov    BYTE PTR [rsp],al
  402533:	mov    al,BYTE PTR [rsp+0x5]
  402537:	mov    cl,BYTE PTR [rsp+0x1]
  40253b:	mov    BYTE PTR [rsp+0x5],cl
  40253f:	mov    BYTE PTR [rsp+0x1],al
  402543:	movzx  eax,WORD PTR [rsp+0x6]
  402548:	movzx  ecx,WORD PTR [rsp+0x2]
  40254d:	mov    WORD PTR [rsp+0x6],cx
  402552:	mov    WORD PTR [rsp+0x2],ax
  402557:	mov    ecx,DWORD PTR [rsp+0xc]
  40255b:	mov    eax,DWORD PTR [rsp+0x10]
  40255f:	cmp    ecx,eax
  402561:	jle    40263d <main@@Base+0x7bd>
  402567:	mov    BYTE PTR [rsp+0x10],cl
  40256b:	mov    BYTE PTR [rsp+0xc],al
  40256f:	mov    al,BYTE PTR [rsp+0x11]
  402573:	mov    cl,BYTE PTR [rsp+0xd]
  402577:	mov    BYTE PTR [rsp+0x11],cl
  40257b:	mov    BYTE PTR [rsp+0xd],al
  40257f:	movzx  eax,WORD PTR [rsp+0x12]
  402584:	movzx  ecx,WORD PTR [rsp+0xe]
  402589:	mov    WORD PTR [rsp+0x12],cx
  40258e:	mov    WORD PTR [rsp+0xe],ax
  402593:	mov    eax,DWORD PTR [rsp+0xc]
  402597:	mov    ecx,DWORD PTR [rsp+0x8]
  40259b:	cmp    ecx,eax
  40259d:	jle    40263d <main@@Base+0x7bd>
  4025a3:	mov    BYTE PTR [rsp+0xc],cl
  4025a7:	mov    BYTE PTR [rsp+0x8],al
  4025ab:	mov    al,BYTE PTR [rsp+0xd]
  4025af:	mov    cl,BYTE PTR [rsp+0x9]
  4025b3:	mov    BYTE PTR [rsp+0xd],cl
  4025b7:	mov    BYTE PTR [rsp+0x9],al
  4025bb:	movzx  eax,WORD PTR [rsp+0xe]
  4025c0:	movzx  ecx,WORD PTR [rsp+0xa]
  4025c5:	mov    WORD PTR [rsp+0xe],cx
  4025ca:	mov    WORD PTR [rsp+0xa],ax
  4025cf:	mov    eax,DWORD PTR [rsp+0x8]
  4025d3:	mov    ecx,DWORD PTR [rsp+0x4]
  4025d7:	cmp    ecx,eax
  4025d9:	jle    40263d <main@@Base+0x7bd>
  4025db:	mov    BYTE PTR [rsp+0x8],cl
  4025df:	mov    BYTE PTR [rsp+0x4],al
  4025e3:	mov    al,BYTE PTR [rsp+0x9]
  4025e7:	mov    cl,BYTE PTR [rsp+0x5]
  4025eb:	mov    BYTE PTR [rsp+0x9],cl
  4025ef:	mov    BYTE PTR [rsp+0x5],al
  4025f3:	movzx  eax,WORD PTR [rsp+0xa]
  4025f8:	movzx  ecx,WORD PTR [rsp+0x6]
  4025fd:	mov    WORD PTR [rsp+0xa],cx
  402602:	mov    WORD PTR [rsp+0x6],ax
  402607:	mov    eax,DWORD PTR [rsp+0x4]
  40260b:	mov    ecx,DWORD PTR [rsp]
  40260e:	cmp    ecx,eax
  402610:	jle    40263d <main@@Base+0x7bd>
  402612:	mov    BYTE PTR [rsp+0x4],cl
  402616:	mov    BYTE PTR [rsp],al
  402619:	mov    al,BYTE PTR [rsp+0x5]
  40261d:	mov    cl,BYTE PTR [rsp+0x1]
  402621:	mov    BYTE PTR [rsp+0x5],cl
  402625:	mov    BYTE PTR [rsp+0x1],al
  402629:	movzx  eax,WORD PTR [rsp+0x6]
  40262e:	movzx  ecx,WORD PTR [rsp+0x2]
  402633:	mov    WORD PTR [rsp+0x6],cx
  402638:	mov    WORD PTR [rsp+0x2],ax
  40263d:	mov    ecx,DWORD PTR [rsp+0x10]
  402641:	mov    eax,DWORD PTR [rsp+0x14]
  402645:	cmp    ecx,eax
  402647:	jle    40275f <main@@Base+0x8df>
  40264d:	mov    BYTE PTR [rsp+0x14],cl
  402651:	mov    BYTE PTR [rsp+0x10],al
  402655:	mov    al,BYTE PTR [rsp+0x15]
  402659:	mov    cl,BYTE PTR [rsp+0x11]
  40265d:	mov    BYTE PTR [rsp+0x15],cl
  402661:	mov    BYTE PTR [rsp+0x11],al
  402665:	movzx  eax,WORD PTR [rsp+0x16]
  40266a:	movzx  ecx,WORD PTR [rsp+0x12]
  40266f:	mov    WORD PTR [rsp+0x16],cx
  402674:	mov    WORD PTR [rsp+0x12],ax
  402679:	mov    eax,DWORD PTR [rsp+0x10]
  40267d:	mov    ecx,DWORD PTR [rsp+0xc]
  402681:	cmp    ecx,eax
  402683:	jle    40275f <main@@Base+0x8df>
  402689:	mov    BYTE PTR [rsp+0x10],cl
  40268d:	mov    BYTE PTR [rsp+0xc],al
  402691:	mov    al,BYTE PTR [rsp+0x11]
  402695:	mov    cl,BYTE PTR [rsp+0xd]
  402699:	mov    BYTE PTR [rsp+0x11],cl
  40269d:	mov    BYTE PTR [rsp+0xd],al
  4026a1:	movzx  eax,WORD PTR [rsp+0x12]
  4026a6:	movzx  ecx,WORD PTR [rsp+0xe]
  4026ab:	mov    WORD PTR [rsp+0x12],cx
  4026b0:	mov    WORD PTR [rsp+0xe],ax
  4026b5:	mov    eax,DWORD PTR [rsp+0xc]
  4026b9:	mov    ecx,DWORD PTR [rsp+0x8]
  4026bd:	cmp    ecx,eax
  4026bf:	jle    40275f <main@@Base+0x8df>
  4026c5:	mov    BYTE PTR [rsp+0xc],cl
  4026c9:	mov    BYTE PTR [rsp+0x8],al
  4026cd:	mov    al,BYTE PTR [rsp+0xd]
  4026d1:	mov    cl,BYTE PTR [rsp+0x9]
  4026d5:	mov    BYTE PTR [rsp+0xd],cl
  4026d9:	mov    BYTE PTR [rsp+0x9],al
  4026dd:	movzx  eax,WORD PTR [rsp+0xe]
  4026e2:	movzx  ecx,WORD PTR [rsp+0xa]
  4026e7:	mov    WORD PTR [rsp+0xe],cx
  4026ec:	mov    WORD PTR [rsp+0xa],ax
  4026f1:	mov    eax,DWORD PTR [rsp+0x8]
  4026f5:	mov    ecx,DWORD PTR [rsp+0x4]
  4026f9:	cmp    ecx,eax
  4026fb:	jle    40275f <main@@Base+0x8df>
  4026fd:	mov    BYTE PTR [rsp+0x8],cl
  402701:	mov    BYTE PTR [rsp+0x4],al
  402705:	mov    al,BYTE PTR [rsp+0x9]
  402709:	mov    cl,BYTE PTR [rsp+0x5]
  40270d:	mov    BYTE PTR [rsp+0x9],cl
  402711:	mov    BYTE PTR [rsp+0x5],al
  402715:	movzx  eax,WORD PTR [rsp+0xa]
  40271a:	movzx  ecx,WORD PTR [rsp+0x6]
  40271f:	mov    WORD PTR [rsp+0xa],cx
  402724:	mov    WORD PTR [rsp+0x6],ax
  402729:	mov    eax,DWORD PTR [rsp+0x4]
  40272d:	mov    ecx,DWORD PTR [rsp]
  402730:	cmp    ecx,eax
  402732:	jle    40275f <main@@Base+0x8df>
  402734:	mov    BYTE PTR [rsp+0x4],cl
  402738:	mov    BYTE PTR [rsp],al
  40273b:	mov    al,BYTE PTR [rsp+0x5]
  40273f:	mov    cl,BYTE PTR [rsp+0x1]
  402743:	mov    BYTE PTR [rsp+0x5],cl
  402747:	mov    BYTE PTR [rsp+0x1],al
  40274b:	movzx  eax,WORD PTR [rsp+0x6]
  402750:	movzx  ecx,WORD PTR [rsp+0x2]
  402755:	mov    WORD PTR [rsp+0x6],cx
  40275a:	mov    WORD PTR [rsp+0x2],ax
  40275f:	lea    rdi,[rip+0x8db]        # 403041 <_IO_stdin_used@@Base+0x41>
  402766:	xor    eax,eax
  402768:	call   401060 <printf@plt>
  40276d:	mov    esi,DWORD PTR [rsp]
  402770:	lea    rbx,[rip+0x8c6]        # 40303d <_IO_stdin_used@@Base+0x3d>
  402777:	xor    eax,eax
  402779:	mov    rdi,rbx
  40277c:	call   401060 <printf@plt>
  402781:	mov    esi,DWORD PTR [rsp+0x4]
  402785:	xor    eax,eax
  402787:	mov    rdi,rbx
  40278a:	call   401060 <printf@plt>
  40278f:	mov    esi,DWORD PTR [rsp+0x8]
  402793:	xor    eax,eax
  402795:	mov    rdi,rbx
  402798:	call   401060 <printf@plt>
  40279d:	mov    esi,DWORD PTR [rsp+0xc]
  4027a1:	xor    eax,eax
  4027a3:	mov    rdi,rbx
  4027a6:	call   401060 <printf@plt>
  4027ab:	mov    esi,DWORD PTR [rsp+0x10]
  4027af:	xor    eax,eax
  4027b1:	mov    rdi,rbx
  4027b4:	call   401060 <printf@plt>
  4027b9:	mov    esi,DWORD PTR [rsp+0x14]
  4027bd:	xor    eax,eax
  4027bf:	mov    rdi,rbx
  4027c2:	call   401060 <printf@plt>
  4027c7:	mov    edi,0xa
  4027cc:	call   401030 <putchar@plt>
  4027d1:	lea    rdi,[rip+0x8de]        # 4030b6 <_IO_stdin_used@@Base+0xb6>
  4027d8:	call   401040 <puts@plt>
  4027dd:	mov    BYTE PTR [rsp+0x24],0x0
  4027e2:	mov    DWORD PTR [rsp+0x20],0x615a6241
  4027ea:	lea    rdi,[rip+0x845]        # 403036 <_IO_stdin_used@@Base+0x36>
  4027f1:	xor    eax,eax
  4027f3:	call   401060 <printf@plt>
  4027f8:	lea    rbx,[rsp+0x20]
  4027fd:	mov    rdi,rbx
  402800:	call   401040 <puts@plt>
  402805:	mov    rdi,rbx
  402808:	call   401050 <strlen@plt>
  40280d:	test   eax,eax
  40280f:	jle    402965 <main@@Base+0xae5>
  402815:	movsxd r9,eax
  402818:	mov    r10d,r9d
  40281b:	lea    r8,[r10-0x2]
  40281f:	lea    rdi,[rsp+0x21]
  402824:	mov    r12,0xffffffffffffffff
  40282b:	mov    r13d,0x1
  402831:	xor    r11d,r11d
  402834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40283e:	xchg   ax,ax
  402840:	mov    rbx,r11
  402843:	lea    r15,[rsp+r11*1]
  402847:	add    r15,0x20
  40284b:	lea    r11,[r11+0x1]
  40284f:	mov    rdx,r15
  402852:	cmp    r11,r9
  402855:	jge    402946 <main@@Base+0xac6>
  40285b:	mov    rbp,r8
  40285e:	sub    rbp,rbx
  402861:	not    ebx
  402863:	add    ebx,eax
  402865:	mov    rsi,r13
  402868:	mov    rdx,r15
  40286b:	and    rbx,0x7
  40286f:	je     402898 <main@@Base+0xa18>
  402871:	xor    esi,esi
  402873:	mov    rdx,r15
  402876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402880:	movzx  ecx,BYTE PTR [rdi+rsi*1]
  402884:	cmp    cl,BYTE PTR [rdx]
  402886:	jle    40288c <main@@Base+0xa0c>
  402888:	lea    rdx,[rdi+rsi*1]
  40288c:	add    rsi,0x1
  402890:	cmp    rbx,rsi
  402893:	jne    402880 <main@@Base+0xa00>
  402895:	sub    rsi,r12
  402898:	cmp    rbp,0x7
  40289c:	jb     402946 <main@@Base+0xac6>
  4028a2:	lea    rbx,[rsp+0x20]
  4028a7:	mov    rbp,r10
  4028aa:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	movzx  r14d,BYTE PTR [rbx+rsi*1]
  4028b5:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x1]
  4028ba:	cmp    r14b,BYTE PTR [rdx]
  4028bd:	jle    4028c3 <main@@Base+0xa43>
  4028bf:	lea    rdx,[rbx+rsi*1]
  4028c3:	cmp    cl,BYTE PTR [rdx]
  4028c5:	jle    4028cf <main@@Base+0xa4f>
  4028c7:	lea    rdx,[rbx+rsi*1]
  4028cb:	add    rdx,0x1
  4028cf:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x2]
  4028d4:	cmp    cl,BYTE PTR [rdx]
  4028d6:	jle    4028e0 <main@@Base+0xa60>
  4028d8:	lea    rdx,[rbx+rsi*1]
  4028dc:	add    rdx,0x2
  4028e0:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x3]
  4028e5:	cmp    cl,BYTE PTR [rdx]
  4028e7:	jle    4028f1 <main@@Base+0xa71>
  4028e9:	lea    rdx,[rbx+rsi*1]
  4028ed:	add    rdx,0x3
  4028f1:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x4]
  4028f6:	cmp    cl,BYTE PTR [rdx]
  4028f8:	jle    402902 <main@@Base+0xa82>
  4028fa:	lea    rdx,[rbx+rsi*1]
  4028fe:	add    rdx,0x4
  402902:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x5]
  402907:	cmp    cl,BYTE PTR [rdx]
  402909:	jle    402913 <main@@Base+0xa93>
  40290b:	lea    rdx,[rbx+rsi*1]
  40290f:	add    rdx,0x5
  402913:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x6]
  402918:	cmp    cl,BYTE PTR [rdx]
  40291a:	jle    402924 <main@@Base+0xaa4>
  40291c:	lea    rdx,[rbx+rsi*1]
  402920:	add    rdx,0x6
  402924:	movzx  ecx,BYTE PTR [rbx+rsi*1+0x7]
  402929:	cmp    cl,BYTE PTR [rdx]
  40292b:	jle    402935 <main@@Base+0xab5>
  40292d:	lea    rdx,[rbx+rsi*1]
  402931:	add    rdx,0x7
  402935:	add    rbp,0xfffffffffffffff8
  402939:	add    rbx,0x8
  40293d:	cmp    rsi,rbp
  402940:	jne    4028b0 <main@@Base+0xa30>
  402946:	mov    cl,BYTE PTR [rdx]
  402948:	mov    bl,BYTE PTR [r15]
  40294b:	mov    BYTE PTR [rdx],bl
  40294d:	mov    BYTE PTR [r15],cl
  402950:	add    r13,0x1
  402954:	add    r12,0xffffffffffffffff
  402958:	add    rdi,0x1
  40295c:	cmp    r11,r10
  40295f:	jne    402840 <main@@Base+0x9c0>
  402965:	lea    rdi,[rip+0x6d5]        # 403041 <_IO_stdin_used@@Base+0x41>
  40296c:	xor    eax,eax
  40296e:	call   401060 <printf@plt>
  402973:	lea    rdi,[rsp+0x20]
  402978:	call   401040 <puts@plt>
  40297d:	xor    eax,eax
  40297f:	add    rsp,0x28
  402983:	pop    rbx
  402984:	pop    r12
  402986:	pop    r13
  402988:	pop    r14
  40298a:	pop    r15
  40298c:	pop    rbp
  40298d:	ret    
  40298e:	xchg   ax,ax

0000000000402990 <__libc_csu_init@@Base>:
  402990:	endbr64 
  402994:	push   r15
  402996:	lea    r15,[rip+0x2463]        # 404e00 <_IO_stdin_used@@Base+0x1e00>
  40299d:	push   r14
  40299f:	mov    r14,rdx
  4029a2:	push   r13
  4029a4:	mov    r13,rsi
  4029a7:	push   r12
  4029a9:	mov    r12d,edi
  4029ac:	push   rbp
  4029ad:	lea    rbp,[rip+0x2454]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  4029b4:	push   rbx
  4029b5:	sub    rbp,r15
  4029b8:	sub    rsp,0x8
  4029bc:	call   401000 <putchar@plt-0x30>
  4029c1:	sar    rbp,0x3
  4029c5:	je     4029e6 <__libc_csu_init@@Base+0x56>
  4029c7:	xor    ebx,ebx
  4029c9:	nop    DWORD PTR [rax+0x0]
  4029d0:	mov    rdx,r14
  4029d3:	mov    rsi,r13
  4029d6:	mov    edi,r12d
  4029d9:	call   QWORD PTR [r15+rbx*8]
  4029dd:	add    rbx,0x1
  4029e1:	cmp    rbp,rbx
  4029e4:	jne    4029d0 <__libc_csu_init@@Base+0x40>
  4029e6:	add    rsp,0x8
  4029ea:	pop    rbx
  4029eb:	pop    rbp
  4029ec:	pop    r12
  4029ee:	pop    r13
  4029f0:	pop    r14
  4029f2:	pop    r15
  4029f4:	ret    
  4029f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402a00 <__libc_csu_fini@@Base>:
  402a00:	endbr64 
  402a04:	ret    

Disassembly of section .fini:

0000000000402a08 <.fini>:
  402a08:	endbr64 
  402a0c:	sub    rsp,0x8
  402a10:	add    rsp,0x8
  402a14:	ret    
