
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x14fd9]        # 417fe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x14fe2]        # 418008 <UnitySizeMask@@Base+0x57f8>
  403026:	jmp    QWORD PTR [rip+0x14fe4]        # 418010 <UnitySizeMask@@Base+0x5800>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0x14fe2]        # 418018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0x14fda]        # 418020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <putchar@plt>:
  403050:	jmp    QWORD PTR [rip+0x14fd2]        # 418028 <putchar@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <__errno_location@plt>:
  403060:	jmp    QWORD PTR [rip+0x14fca]        # 418030 <__errno_location@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncpy@plt>:
  403070:	jmp    QWORD PTR [rip+0x14fc2]        # 418038 <strncpy@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0x14fba]        # 418040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0x14fb2]        # 418048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x14faa]        # 418050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fclose@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x14fa2]        # 418058 <fclose@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <msync@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x14f9a]        # 418060 <msync@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <strlen@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x14f92]        # 418068 <strlen@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <mmap@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x14f8a]        # 418070 <mmap@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <strchr@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x14f82]        # 418078 <strchr@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strrchr@plt>:
  403100:	jmp    QWORD PTR [rip+0x14f7a]        # 418080 <strrchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <uname@plt>:
  403110:	jmp    QWORD PTR [rip+0x14f72]        # 418088 <uname@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <memset@plt>:
  403120:	jmp    QWORD PTR [rip+0x14f6a]        # 418090 <memset@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <_setjmp@plt>:
  403130:	jmp    QWORD PTR [rip+0x14f62]        # 418098 <_setjmp@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <fprintf@plt>:
  403140:	jmp    QWORD PTR [rip+0x14f5a]        # 4180a0 <fprintf@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <ftell@plt>:
  403150:	jmp    QWORD PTR [rip+0x14f52]        # 4180a8 <ftell@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strtol@plt>:
  403160:	jmp    QWORD PTR [rip+0x14f4a]        # 4180b0 <strtol@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <memcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0x14f42]        # 4180b8 <memcpy@GLIBC_2.14>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <prctl@plt>:
  403180:	jmp    QWORD PTR [rip+0x14f3a]        # 4180c0 <prctl@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <malloc@plt>:
  403190:	jmp    QWORD PTR [rip+0x14f32]        # 4180c8 <malloc@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <fflush@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x14f2a]        # 4180d0 <fflush@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fseek@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x14f22]        # 4180d8 <fseek@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <realloc@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x14f1a]        # 4180e0 <realloc@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fdopen@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x14f12]        # 4180e8 <fdopen@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <munmap@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x14f0a]        # 4180f0 <munmap@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <longjmp@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x14f02]        # 4180f8 <longjmp@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <open@plt>:
  403200:	jmp    QWORD PTR [rip+0x14efa]        # 418100 <open@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <__cxa_atexit@plt>:
  403210:	jmp    QWORD PTR [rip+0x14ef2]        # 418108 <__cxa_atexit@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <atoi@plt>:
  403220:	jmp    QWORD PTR [rip+0x14eea]        # 418110 <atoi@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <exit@plt>:
  403230:	jmp    QWORD PTR [rip+0x14ee2]        # 418118 <exit@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <fwrite@plt>:
  403240:	jmp    QWORD PTR [rip+0x14eda]        # 418120 <fwrite@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <strdup@plt>:
  403250:	jmp    QWORD PTR [rip+0x14ed2]        # 418128 <strdup@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <strerror@plt>:
  403260:	jmp    QWORD PTR [rip+0x14eca]        # 418130 <strerror@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403270 <_start@@Base>:
  403270:	endbr64 
  403274:	xor    ebp,ebp
  403276:	mov    r9,rdx
  403279:	pop    rsi
  40327a:	mov    rdx,rsp
  40327d:	and    rsp,0xfffffffffffffff0
  403281:	push   rax
  403282:	push   rsp
  403283:	mov    r8,0x411490
  40328a:	mov    rcx,0x411420
  403291:	mov    rdi,0x404fa0
  403298:	call   QWORD PTR [rip+0x14d42]        # 417fe0 <__libc_start_main@GLIBC_2.2.5>
  40329e:	hlt    
  40329f:	nop
  4032a0:	endbr64 
  4032a4:	ret    
  4032a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032af:	nop
  4032b0:	mov    eax,0x418160
  4032b5:	cmp    rax,0x418160
  4032bb:	je     4032d0 <_start@@Base+0x60>
  4032bd:	mov    eax,0x0
  4032c2:	test   rax,rax
  4032c5:	je     4032d0 <_start@@Base+0x60>
  4032c7:	mov    edi,0x418160
  4032cc:	jmp    rax
  4032ce:	xchg   ax,ax
  4032d0:	ret    
  4032d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032dc:	nop    DWORD PTR [rax+0x0]
  4032e0:	mov    esi,0x418160
  4032e5:	sub    rsi,0x418160
  4032ec:	mov    rax,rsi
  4032ef:	shr    rsi,0x3f
  4032f3:	sar    rax,0x3
  4032f7:	add    rsi,rax
  4032fa:	sar    rsi,1
  4032fd:	je     403310 <_start@@Base+0xa0>
  4032ff:	mov    eax,0x0
  403304:	test   rax,rax
  403307:	je     403310 <_start@@Base+0xa0>
  403309:	mov    edi,0x418160
  40330e:	jmp    rax
  403310:	ret    
  403311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40331c:	nop    DWORD PTR [rax+0x0]
  403320:	endbr64 
  403324:	cmp    BYTE PTR [rip+0x14e35],0x0        # 418160 <__bss_start@@Base+0x4>
  40332b:	jne    403340 <_start@@Base+0xd0>
  40332d:	push   rbp
  40332e:	mov    rbp,rsp
  403331:	call   4032b0 <_start@@Base+0x40>
  403336:	mov    BYTE PTR [rip+0x14e23],0x1        # 418160 <__bss_start@@Base+0x4>
  40333d:	pop    rbp
  40333e:	ret    
  40333f:	nop
  403340:	ret    
  403341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	endbr64 
  403354:	jmp    4032e0 <_start@@Base+0x70>
  403356:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403360 <simple_file_only_main@@Base>:
  403360:	push   rbp
  403361:	mov    rbp,rsp
  403364:	sub    rsp,0x30
  403368:	mov    rax,QWORD PTR [rip+0x14df9]        # 418168 <__bss_start@@Base+0xc>
  40336f:	add    rax,0x1
  403373:	mov    QWORD PTR [rip+0x14dee],rax        # 418168 <__bss_start@@Base+0xc>
  40337a:	mov    rax,QWORD PTR [rip+0x14def]        # 418170 <__bss_start@@Base+0x14>
  403381:	add    rax,0x1
  403385:	mov    QWORD PTR [rip+0x14de4],rax        # 418170 <__bss_start@@Base+0x14>
  40338c:	lea    rax,[rip+0xec71]        # 412004 <_IO_stdin_used@@Base+0x4>
  403393:	mov    QWORD PTR [rbp-0x8],rax
  403397:	mov    rsi,QWORD PTR [rbp-0x8]
  40339b:	lea    rdi,[rbp-0x20]
  40339f:	call   40ced0 <init_lexer@@Base>
  4033a4:	lea    rdi,[rbp-0x20]
  4033a8:	call   40d290 <next@@Base>
  4033ad:	xor    ecx,ecx
  4033af:	mov    esi,ecx
  4033b1:	mov    ecx,0x17
  4033b6:	mov    QWORD PTR [rbp-0x28],rax
  4033ba:	mov    rax,QWORD PTR [rbp-0x28]
  4033be:	mov    edx,DWORD PTR [rax]
  4033c0:	mov    eax,edx
  4033c2:	mov    rdi,rsi
  4033c5:	mov    QWORD PTR [rbp-0x30],rsi
  4033c9:	mov    rsi,rax
  4033cc:	mov    rdx,QWORD PTR [rbp-0x30]
  4033d0:	mov    r8d,0x94
  4033d6:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4033db:	lea    rdi,[rbp-0x20]
  4033df:	call   40d290 <next@@Base>
  4033e4:	mov    r8d,0x2
  4033ea:	mov    edi,r8d
  4033ed:	xor    r8d,r8d
  4033f0:	mov    edx,r8d
  4033f3:	mov    r8d,0x19
  4033f9:	mov    ecx,r8d
  4033fc:	mov    QWORD PTR [rbp-0x28],rax
  403400:	mov    rax,QWORD PTR [rbp-0x28]
  403404:	mov    r8d,DWORD PTR [rax]
  403407:	mov    esi,r8d
  40340a:	mov    r8d,0x94
  403410:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403415:	lea    rdi,[rbp-0x20]
  403419:	call   40d290 <next@@Base>
  40341e:	mov    r8d,0x3
  403424:	mov    edi,r8d
  403427:	xor    r8d,r8d
  40342a:	mov    edx,r8d
  40342d:	mov    r8d,0x1b
  403433:	mov    ecx,r8d
  403436:	mov    QWORD PTR [rbp-0x28],rax
  40343a:	mov    rax,QWORD PTR [rbp-0x28]
  40343e:	mov    r8d,DWORD PTR [rax]
  403441:	mov    esi,r8d
  403444:	mov    r8d,0x94
  40344a:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40344f:	lea    rdi,[rbp-0x20]
  403453:	call   40d290 <next@@Base>
  403458:	mov    r8d,0x4
  40345e:	mov    edi,r8d
  403461:	xor    r8d,r8d
  403464:	mov    edx,r8d
  403467:	mov    r8d,0x1d
  40346d:	mov    ecx,r8d
  403470:	mov    QWORD PTR [rbp-0x28],rax
  403474:	mov    rax,QWORD PTR [rbp-0x28]
  403478:	mov    r8d,DWORD PTR [rax]
  40347b:	mov    esi,r8d
  40347e:	mov    r8d,0x94
  403484:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403489:	lea    rdi,[rbp-0x20]
  40348d:	call   40d290 <next@@Base>
  403492:	mov    r8d,0x5
  403498:	mov    edi,r8d
  40349b:	xor    r8d,r8d
  40349e:	mov    edx,r8d
  4034a1:	mov    r8d,0x1f
  4034a7:	mov    ecx,r8d
  4034aa:	mov    QWORD PTR [rbp-0x28],rax
  4034ae:	mov    rax,QWORD PTR [rbp-0x28]
  4034b2:	mov    r8d,DWORD PTR [rax]
  4034b5:	mov    esi,r8d
  4034b8:	mov    r8d,0x94
  4034be:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4034c3:	lea    rdi,[rbp-0x20]
  4034c7:	call   40d290 <next@@Base>
  4034cc:	mov    r8d,0x7
  4034d2:	mov    edi,r8d
  4034d5:	xor    r8d,r8d
  4034d8:	mov    edx,r8d
  4034db:	mov    r8d,0x21
  4034e1:	mov    ecx,r8d
  4034e4:	mov    QWORD PTR [rbp-0x28],rax
  4034e8:	mov    rax,QWORD PTR [rbp-0x28]
  4034ec:	mov    r8d,DWORD PTR [rax]
  4034ef:	mov    esi,r8d
  4034f2:	mov    r8d,0x94
  4034f8:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4034fd:	lea    rdi,[rbp-0x20]
  403501:	call   40d290 <next@@Base>
  403506:	mov    r8d,0x1
  40350c:	mov    edi,r8d
  40350f:	xor    r8d,r8d
  403512:	mov    edx,r8d
  403515:	mov    r8d,0x23
  40351b:	mov    ecx,r8d
  40351e:	mov    QWORD PTR [rbp-0x28],rax
  403522:	mov    rax,QWORD PTR [rbp-0x28]
  403526:	mov    r8d,DWORD PTR [rax]
  403529:	mov    esi,r8d
  40352c:	mov    r8d,0x94
  403532:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403537:	lea    rdi,[rbp-0x20]
  40353b:	call   40d290 <next@@Base>
  403540:	mov    r8d,0x8
  403546:	mov    edi,r8d
  403549:	xor    r8d,r8d
  40354c:	mov    edx,r8d
  40354f:	mov    r8d,0x25
  403555:	mov    ecx,r8d
  403558:	mov    QWORD PTR [rbp-0x28],rax
  40355c:	mov    rax,QWORD PTR [rbp-0x28]
  403560:	mov    r8d,DWORD PTR [rax]
  403563:	mov    esi,r8d
  403566:	mov    r8d,0x94
  40356c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403571:	lea    rdi,[rbp-0x20]
  403575:	call   40d290 <next@@Base>
  40357a:	mov    r8d,0x6
  403580:	mov    edi,r8d
  403583:	xor    r8d,r8d
  403586:	mov    edx,r8d
  403589:	mov    r8d,0x27
  40358f:	mov    ecx,r8d
  403592:	mov    QWORD PTR [rbp-0x28],rax
  403596:	mov    rax,QWORD PTR [rbp-0x28]
  40359a:	mov    r8d,DWORD PTR [rax]
  40359d:	mov    esi,r8d
  4035a0:	mov    r8d,0x94
  4035a6:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4035ab:	lea    rdi,[rbp-0x20]
  4035af:	call   40d290 <next@@Base>
  4035b4:	mov    r8d,0x9
  4035ba:	mov    edi,r8d
  4035bd:	xor    r8d,r8d
  4035c0:	mov    edx,r8d
  4035c3:	mov    r8d,0x29
  4035c9:	mov    ecx,r8d
  4035cc:	mov    QWORD PTR [rbp-0x28],rax
  4035d0:	mov    rax,QWORD PTR [rbp-0x28]
  4035d4:	mov    r8d,DWORD PTR [rax]
  4035d7:	mov    esi,r8d
  4035da:	mov    r8d,0x94
  4035e0:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4035e5:	lea    rdi,[rbp-0x20]
  4035e9:	call   40cf40 <destroy_lexer@@Base>
  4035ee:	add    rsp,0x30
  4035f2:	pop    rbp
  4035f3:	ret    
  4035f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035fe:	xchg   ax,ax

0000000000403600 <push_token_to_stack@@Base>:
  403600:	push   rbp
  403601:	mov    rbp,rsp
  403604:	sub    rsp,0x30
  403608:	mov    rax,QWORD PTR [rip+0x14b69]        # 418178 <__bss_start@@Base+0x1c>
  40360f:	add    rax,0x1
  403613:	mov    QWORD PTR [rip+0x14b5e],rax        # 418178 <__bss_start@@Base+0x1c>
  40361a:	mov    rax,QWORD PTR [rip+0x14b5f]        # 418180 <__bss_start@@Base+0x24>
  403621:	add    rax,0x1
  403625:	mov    QWORD PTR [rip+0x14b54],rax        # 418180 <__bss_start@@Base+0x24>
  40362c:	lea    rax,[rip+0xe9d1]        # 412004 <_IO_stdin_used@@Base+0x4>
  403633:	mov    QWORD PTR [rbp-0x8],rax
  403637:	mov    rsi,QWORD PTR [rbp-0x8]
  40363b:	lea    rdi,[rbp-0x20]
  40363f:	call   40ced0 <init_lexer@@Base>
  403644:	mov    ecx,0x8
  403649:	mov    edi,ecx
  40364b:	call   403190 <malloc@plt>
  403650:	mov    QWORD PTR [rbp-0x28],rax
  403654:	mov    rsi,QWORD PTR [rbp-0x28]
  403658:	lea    rdi,[rbp-0x20]
  40365c:	call   40d060 <push_back@@Base>
  403661:	xor    ecx,ecx
  403663:	mov    edx,ecx
  403665:	mov    ecx,0x3e
  40366a:	mov    rax,QWORD PTR [rbp-0x18]
  40366e:	mov    rdi,QWORD PTR [rax+0x8]
  403672:	mov    rsi,QWORD PTR [rbp-0x28]
  403676:	mov    r8d,0x94
  40367c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403681:	lea    rdi,[rbp-0x20]
  403685:	call   40cf40 <destroy_lexer@@Base>
  40368a:	mov    rax,QWORD PTR [rbp-0x28]
  40368e:	mov    rdi,rax
  403691:	call   403040 <free@plt>
  403696:	add    rsp,0x30
  40369a:	pop    rbp
  40369b:	ret    
  40369c:	nop    DWORD PTR [rax+0x0]

00000000004036a0 <push_two_tokens_to_stack@@Base>:
  4036a0:	push   rbp
  4036a1:	mov    rbp,rsp
  4036a4:	sub    rsp,0x30
  4036a8:	mov    rax,QWORD PTR [rip+0x14ad9]        # 418188 <__bss_start@@Base+0x2c>
  4036af:	add    rax,0x1
  4036b3:	mov    QWORD PTR [rip+0x14ace],rax        # 418188 <__bss_start@@Base+0x2c>
  4036ba:	mov    rax,QWORD PTR [rip+0x14acf]        # 418190 <__bss_start@@Base+0x34>
  4036c1:	add    rax,0x1
  4036c5:	mov    QWORD PTR [rip+0x14ac4],rax        # 418190 <__bss_start@@Base+0x34>
  4036cc:	lea    rax,[rip+0xe931]        # 412004 <_IO_stdin_used@@Base+0x4>
  4036d3:	mov    QWORD PTR [rbp-0x8],rax
  4036d7:	mov    rsi,QWORD PTR [rbp-0x8]
  4036db:	lea    rdi,[rbp-0x20]
  4036df:	call   40ced0 <init_lexer@@Base>
  4036e4:	mov    ecx,0x8
  4036e9:	mov    edi,ecx
  4036eb:	call   403190 <malloc@plt>
  4036f0:	mov    ecx,0x8
  4036f5:	mov    edi,ecx
  4036f7:	mov    QWORD PTR [rbp-0x28],rax
  4036fb:	call   403190 <malloc@plt>
  403700:	mov    QWORD PTR [rbp-0x30],rax
  403704:	mov    rsi,QWORD PTR [rbp-0x28]
  403708:	lea    rdi,[rbp-0x20]
  40370c:	call   40d060 <push_back@@Base>
  403711:	xor    ecx,ecx
  403713:	mov    edx,ecx
  403715:	mov    ecx,0x56
  40371a:	mov    rax,QWORD PTR [rbp-0x18]
  40371e:	mov    rdi,QWORD PTR [rax+0x8]
  403722:	mov    rsi,QWORD PTR [rbp-0x28]
  403726:	mov    r8d,0x94
  40372c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403731:	mov    rsi,QWORD PTR [rbp-0x30]
  403735:	lea    rdi,[rbp-0x20]
  403739:	call   40d060 <push_back@@Base>
  40373e:	xor    r8d,r8d
  403741:	mov    edx,r8d
  403744:	mov    r8d,0x58
  40374a:	mov    ecx,r8d
  40374d:	mov    rax,QWORD PTR [rbp-0x18]
  403751:	mov    rdi,QWORD PTR [rax+0x8]
  403755:	mov    rsi,QWORD PTR [rbp-0x30]
  403759:	mov    r8d,0x94
  40375f:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403764:	lea    rdi,[rbp-0x20]
  403768:	call   40cf40 <destroy_lexer@@Base>
  40376d:	mov    rax,QWORD PTR [rbp-0x28]
  403771:	mov    rdi,rax
  403774:	call   403040 <free@plt>
  403779:	mov    rax,QWORD PTR [rbp-0x30]
  40377d:	mov    rdi,rax
  403780:	call   403040 <free@plt>
  403785:	add    rsp,0x30
  403789:	pop    rbp
  40378a:	ret    
  40378b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403790 <push_token_and_call_next@@Base>:
  403790:	push   rbp
  403791:	mov    rbp,rsp
  403794:	sub    rsp,0x30
  403798:	mov    rax,QWORD PTR [rip+0x149f9]        # 418198 <__bss_start@@Base+0x3c>
  40379f:	add    rax,0x1
  4037a3:	mov    QWORD PTR [rip+0x149ee],rax        # 418198 <__bss_start@@Base+0x3c>
  4037aa:	mov    rax,QWORD PTR [rip+0x149ef]        # 4181a0 <__bss_start@@Base+0x44>
  4037b1:	add    rax,0x1
  4037b5:	mov    QWORD PTR [rip+0x149e4],rax        # 4181a0 <__bss_start@@Base+0x44>
  4037bc:	lea    rax,[rip+0xe841]        # 412004 <_IO_stdin_used@@Base+0x4>
  4037c3:	mov    QWORD PTR [rbp-0x8],rax
  4037c7:	mov    rsi,QWORD PTR [rbp-0x8]
  4037cb:	lea    rdi,[rbp-0x20]
  4037cf:	call   40ced0 <init_lexer@@Base>
  4037d4:	mov    ecx,0x8
  4037d9:	mov    edi,ecx
  4037db:	call   403190 <malloc@plt>
  4037e0:	mov    QWORD PTR [rbp-0x28],rax
  4037e4:	mov    rsi,QWORD PTR [rbp-0x28]
  4037e8:	lea    rdi,[rbp-0x20]
  4037ec:	call   40d060 <push_back@@Base>
  4037f1:	lea    rdi,[rbp-0x20]
  4037f5:	call   40d290 <next@@Base>
  4037fa:	xor    ecx,ecx
  4037fc:	mov    edx,ecx
  4037fe:	mov    ecx,0x71
  403803:	mov    QWORD PTR [rbp-0x30],rax
  403807:	mov    rdi,QWORD PTR [rbp-0x28]
  40380b:	mov    rsi,QWORD PTR [rbp-0x30]
  40380f:	mov    r8d,0x94
  403815:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40381a:	lea    rdi,[rbp-0x20]
  40381e:	call   40cf40 <destroy_lexer@@Base>
  403823:	mov    rax,QWORD PTR [rbp-0x28]
  403827:	mov    rdi,rax
  40382a:	call   403040 <free@plt>
  40382f:	add    rsp,0x30
  403833:	pop    rbp
  403834:	ret    
  403835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40383f:	nop

0000000000403840 <if_without_else@@Base>:
  403840:	push   rbp
  403841:	mov    rbp,rsp
  403844:	sub    rsp,0x30
  403848:	mov    rax,QWORD PTR [rip+0x14959]        # 4181a8 <__bss_start@@Base+0x4c>
  40384f:	add    rax,0x1
  403853:	mov    QWORD PTR [rip+0x1494e],rax        # 4181a8 <__bss_start@@Base+0x4c>
  40385a:	mov    rax,QWORD PTR [rip+0x1494f]        # 4181b0 <__bss_start@@Base+0x54>
  403861:	add    rax,0x1
  403865:	mov    QWORD PTR [rip+0x14944],rax        # 4181b0 <__bss_start@@Base+0x54>
  40386c:	lea    rax,[rip+0xe7ab]        # 41201e <_IO_stdin_used@@Base+0x1e>
  403873:	mov    QWORD PTR [rbp-0x8],rax
  403877:	mov    rsi,QWORD PTR [rbp-0x8]
  40387b:	lea    rdi,[rbp-0x20]
  40387f:	call   40ced0 <init_lexer@@Base>
  403884:	lea    rdi,[rbp-0x20]
  403888:	call   40d290 <next@@Base>
  40388d:	xor    ecx,ecx
  40388f:	mov    esi,ecx
  403891:	mov    ecx,0x8c
  403896:	mov    QWORD PTR [rbp-0x28],rax
  40389a:	mov    rax,QWORD PTR [rbp-0x28]
  40389e:	mov    edx,DWORD PTR [rax]
  4038a0:	mov    eax,edx
  4038a2:	mov    rdi,rsi
  4038a5:	mov    QWORD PTR [rbp-0x30],rsi
  4038a9:	mov    rsi,rax
  4038ac:	mov    rdx,QWORD PTR [rbp-0x30]
  4038b0:	mov    r8d,0x94
  4038b6:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4038bb:	lea    rdi,[rbp-0x20]
  4038bf:	call   40d290 <next@@Base>
  4038c4:	mov    r8d,0x2
  4038ca:	mov    edi,r8d
  4038cd:	xor    r8d,r8d
  4038d0:	mov    edx,r8d
  4038d3:	mov    r8d,0x8e
  4038d9:	mov    ecx,r8d
  4038dc:	mov    QWORD PTR [rbp-0x28],rax
  4038e0:	mov    rax,QWORD PTR [rbp-0x28]
  4038e4:	mov    r8d,DWORD PTR [rax]
  4038e7:	mov    esi,r8d
  4038ea:	mov    r8d,0x94
  4038f0:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4038f5:	lea    rdi,[rbp-0x20]
  4038f9:	call   40d290 <next@@Base>
  4038fe:	mov    r8d,0x3
  403904:	mov    edi,r8d
  403907:	xor    r8d,r8d
  40390a:	mov    edx,r8d
  40390d:	mov    r8d,0x90
  403913:	mov    ecx,r8d
  403916:	mov    QWORD PTR [rbp-0x28],rax
  40391a:	mov    rax,QWORD PTR [rbp-0x28]
  40391e:	mov    r8d,DWORD PTR [rax]
  403921:	mov    esi,r8d
  403924:	mov    r8d,0x94
  40392a:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40392f:	lea    rdi,[rbp-0x20]
  403933:	call   40d290 <next@@Base>
  403938:	mov    r8d,0x4
  40393e:	mov    edi,r8d
  403941:	xor    r8d,r8d
  403944:	mov    edx,r8d
  403947:	mov    r8d,0x92
  40394d:	mov    ecx,r8d
  403950:	mov    QWORD PTR [rbp-0x28],rax
  403954:	mov    rax,QWORD PTR [rbp-0x28]
  403958:	mov    r8d,DWORD PTR [rax]
  40395b:	mov    esi,r8d
  40395e:	mov    r8d,0x94
  403964:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403969:	lea    rdi,[rbp-0x20]
  40396d:	call   40d290 <next@@Base>
  403972:	mov    r8d,0x5
  403978:	mov    edi,r8d
  40397b:	xor    r8d,r8d
  40397e:	mov    edx,r8d
  403981:	mov    r8d,0x94
  403987:	mov    ecx,r8d
  40398a:	mov    QWORD PTR [rbp-0x28],rax
  40398e:	mov    rax,QWORD PTR [rbp-0x28]
  403992:	mov    r8d,DWORD PTR [rax]
  403995:	mov    esi,r8d
  403998:	mov    r8d,0x94
  40399e:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4039a3:	lea    rdi,[rbp-0x20]
  4039a7:	call   40d290 <next@@Base>
  4039ac:	mov    r8d,0xa
  4039b2:	mov    edi,r8d
  4039b5:	xor    r8d,r8d
  4039b8:	mov    edx,r8d
  4039bb:	mov    r8d,0x96
  4039c1:	mov    ecx,r8d
  4039c4:	mov    QWORD PTR [rbp-0x28],rax
  4039c8:	mov    rax,QWORD PTR [rbp-0x28]
  4039cc:	mov    r8d,DWORD PTR [rax]
  4039cf:	mov    esi,r8d
  4039d2:	mov    r8d,0x94
  4039d8:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4039dd:	lea    rdi,[rbp-0x20]
  4039e1:	call   40d290 <next@@Base>
  4039e6:	mov    r8d,0x3
  4039ec:	mov    edi,r8d
  4039ef:	xor    r8d,r8d
  4039f2:	mov    edx,r8d
  4039f5:	mov    r8d,0x98
  4039fb:	mov    ecx,r8d
  4039fe:	mov    QWORD PTR [rbp-0x28],rax
  403a02:	mov    rax,QWORD PTR [rbp-0x28]
  403a06:	mov    r8d,DWORD PTR [rax]
  403a09:	mov    esi,r8d
  403a0c:	mov    r8d,0x94
  403a12:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403a17:	lea    rdi,[rbp-0x20]
  403a1b:	call   40d290 <next@@Base>
  403a20:	mov    r8d,0x1
  403a26:	mov    edi,r8d
  403a29:	xor    r8d,r8d
  403a2c:	mov    edx,r8d
  403a2f:	mov    r8d,0x9a
  403a35:	mov    ecx,r8d
  403a38:	mov    QWORD PTR [rbp-0x28],rax
  403a3c:	mov    rax,QWORD PTR [rbp-0x28]
  403a40:	mov    r8d,DWORD PTR [rax]
  403a43:	mov    esi,r8d
  403a46:	mov    r8d,0x94
  403a4c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403a51:	lea    rdi,[rbp-0x20]
  403a55:	call   40d290 <next@@Base>
  403a5a:	mov    r8d,0xc
  403a60:	mov    edi,r8d
  403a63:	xor    r8d,r8d
  403a66:	mov    edx,r8d
  403a69:	mov    r8d,0x9c
  403a6f:	mov    ecx,r8d
  403a72:	mov    QWORD PTR [rbp-0x28],rax
  403a76:	mov    rax,QWORD PTR [rbp-0x28]
  403a7a:	mov    r8d,DWORD PTR [rax]
  403a7d:	mov    esi,r8d
  403a80:	mov    r8d,0x94
  403a86:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403a8b:	lea    rdi,[rbp-0x20]
  403a8f:	call   40d290 <next@@Base>
  403a94:	mov    r8d,0x1
  403a9a:	mov    edi,r8d
  403a9d:	xor    r8d,r8d
  403aa0:	mov    edx,r8d
  403aa3:	mov    r8d,0x9e
  403aa9:	mov    ecx,r8d
  403aac:	mov    QWORD PTR [rbp-0x28],rax
  403ab0:	mov    rax,QWORD PTR [rbp-0x28]
  403ab4:	mov    r8d,DWORD PTR [rax]
  403ab7:	mov    esi,r8d
  403aba:	mov    r8d,0x94
  403ac0:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403ac5:	lea    rdi,[rbp-0x20]
  403ac9:	call   40d290 <next@@Base>
  403ace:	mov    r8d,0x4
  403ad4:	mov    edi,r8d
  403ad7:	xor    r8d,r8d
  403ada:	mov    edx,r8d
  403add:	mov    r8d,0xa0
  403ae3:	mov    ecx,r8d
  403ae6:	mov    QWORD PTR [rbp-0x28],rax
  403aea:	mov    rax,QWORD PTR [rbp-0x28]
  403aee:	mov    r8d,DWORD PTR [rax]
  403af1:	mov    esi,r8d
  403af4:	mov    r8d,0x94
  403afa:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403aff:	lea    rdi,[rbp-0x20]
  403b03:	call   40d290 <next@@Base>
  403b08:	mov    r8d,0x5
  403b0e:	mov    edi,r8d
  403b11:	xor    r8d,r8d
  403b14:	mov    edx,r8d
  403b17:	mov    r8d,0xa2
  403b1d:	mov    ecx,r8d
  403b20:	mov    QWORD PTR [rbp-0x28],rax
  403b24:	mov    rax,QWORD PTR [rbp-0x28]
  403b28:	mov    r8d,DWORD PTR [rax]
  403b2b:	mov    esi,r8d
  403b2e:	mov    r8d,0x94
  403b34:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403b39:	lea    rdi,[rbp-0x20]
  403b3d:	call   40d290 <next@@Base>
  403b42:	mov    r8d,0x7
  403b48:	mov    edi,r8d
  403b4b:	xor    r8d,r8d
  403b4e:	mov    edx,r8d
  403b51:	mov    r8d,0xa4
  403b57:	mov    ecx,r8d
  403b5a:	mov    QWORD PTR [rbp-0x28],rax
  403b5e:	mov    rax,QWORD PTR [rbp-0x28]
  403b62:	mov    r8d,DWORD PTR [rax]
  403b65:	mov    esi,r8d
  403b68:	mov    r8d,0x94
  403b6e:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403b73:	lea    rdi,[rbp-0x20]
  403b77:	call   40d290 <next@@Base>
  403b7c:	mov    r8d,0x1
  403b82:	mov    edi,r8d
  403b85:	xor    r8d,r8d
  403b88:	mov    edx,r8d
  403b8b:	mov    r8d,0xa6
  403b91:	mov    ecx,r8d
  403b94:	mov    QWORD PTR [rbp-0x28],rax
  403b98:	mov    rax,QWORD PTR [rbp-0x28]
  403b9c:	mov    r8d,DWORD PTR [rax]
  403b9f:	mov    esi,r8d
  403ba2:	mov    r8d,0x94
  403ba8:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403bad:	lea    rdi,[rbp-0x20]
  403bb1:	call   40d290 <next@@Base>
  403bb6:	mov    r8d,0x8
  403bbc:	mov    edi,r8d
  403bbf:	xor    r8d,r8d
  403bc2:	mov    edx,r8d
  403bc5:	mov    r8d,0xa8
  403bcb:	mov    ecx,r8d
  403bce:	mov    QWORD PTR [rbp-0x28],rax
  403bd2:	mov    rax,QWORD PTR [rbp-0x28]
  403bd6:	mov    r8d,DWORD PTR [rax]
  403bd9:	mov    esi,r8d
  403bdc:	mov    r8d,0x94
  403be2:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403be7:	lea    rdi,[rbp-0x20]
  403beb:	call   40d290 <next@@Base>
  403bf0:	mov    r8d,0x6
  403bf6:	mov    edi,r8d
  403bf9:	xor    r8d,r8d
  403bfc:	mov    edx,r8d
  403bff:	mov    r8d,0xaa
  403c05:	mov    ecx,r8d
  403c08:	mov    QWORD PTR [rbp-0x28],rax
  403c0c:	mov    rax,QWORD PTR [rbp-0x28]
  403c10:	mov    r8d,DWORD PTR [rax]
  403c13:	mov    esi,r8d
  403c16:	mov    r8d,0x94
  403c1c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403c21:	lea    rdi,[rbp-0x20]
  403c25:	call   40d290 <next@@Base>
  403c2a:	mov    r8d,0x7
  403c30:	mov    edi,r8d
  403c33:	xor    r8d,r8d
  403c36:	mov    edx,r8d
  403c39:	mov    r8d,0xac
  403c3f:	mov    ecx,r8d
  403c42:	mov    QWORD PTR [rbp-0x28],rax
  403c46:	mov    rax,QWORD PTR [rbp-0x28]
  403c4a:	mov    r8d,DWORD PTR [rax]
  403c4d:	mov    esi,r8d
  403c50:	mov    r8d,0x94
  403c56:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403c5b:	lea    rdi,[rbp-0x20]
  403c5f:	call   40d290 <next@@Base>
  403c64:	mov    r8d,0x1
  403c6a:	mov    edi,r8d
  403c6d:	xor    r8d,r8d
  403c70:	mov    edx,r8d
  403c73:	mov    r8d,0xae
  403c79:	mov    ecx,r8d
  403c7c:	mov    QWORD PTR [rbp-0x28],rax
  403c80:	mov    rax,QWORD PTR [rbp-0x28]
  403c84:	mov    r8d,DWORD PTR [rax]
  403c87:	mov    esi,r8d
  403c8a:	mov    r8d,0x94
  403c90:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403c95:	lea    rdi,[rbp-0x20]
  403c99:	call   40d290 <next@@Base>
  403c9e:	mov    r8d,0x8
  403ca4:	mov    edi,r8d
  403ca7:	xor    r8d,r8d
  403caa:	mov    edx,r8d
  403cad:	mov    r8d,0xb0
  403cb3:	mov    ecx,r8d
  403cb6:	mov    QWORD PTR [rbp-0x28],rax
  403cba:	mov    rax,QWORD PTR [rbp-0x28]
  403cbe:	mov    r8d,DWORD PTR [rax]
  403cc1:	mov    esi,r8d
  403cc4:	mov    r8d,0x94
  403cca:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403ccf:	lea    rdi,[rbp-0x20]
  403cd3:	call   40d290 <next@@Base>
  403cd8:	mov    r8d,0x6
  403cde:	mov    edi,r8d
  403ce1:	xor    r8d,r8d
  403ce4:	mov    edx,r8d
  403ce7:	mov    r8d,0xb2
  403ced:	mov    ecx,r8d
  403cf0:	mov    QWORD PTR [rbp-0x28],rax
  403cf4:	mov    rax,QWORD PTR [rbp-0x28]
  403cf8:	mov    r8d,DWORD PTR [rax]
  403cfb:	mov    esi,r8d
  403cfe:	mov    r8d,0x94
  403d04:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403d09:	lea    rdi,[rbp-0x20]
  403d0d:	call   40d290 <next@@Base>
  403d12:	mov    r8d,0x9
  403d18:	mov    edi,r8d
  403d1b:	xor    r8d,r8d
  403d1e:	mov    edx,r8d
  403d21:	mov    r8d,0xb4
  403d27:	mov    ecx,r8d
  403d2a:	mov    QWORD PTR [rbp-0x28],rax
  403d2e:	mov    rax,QWORD PTR [rbp-0x28]
  403d32:	mov    r8d,DWORD PTR [rax]
  403d35:	mov    esi,r8d
  403d38:	mov    r8d,0x94
  403d3e:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403d43:	lea    rdi,[rbp-0x20]
  403d47:	call   40cf40 <destroy_lexer@@Base>
  403d4c:	add    rsp,0x30
  403d50:	pop    rbp
  403d51:	ret    
  403d52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d5c:	nop    DWORD PTR [rax+0x0]

0000000000403d60 <if_with_else@@Base>:
  403d60:	push   rbp
  403d61:	mov    rbp,rsp
  403d64:	sub    rsp,0x30
  403d68:	mov    rax,QWORD PTR [rip+0x14449]        # 4181b8 <__bss_start@@Base+0x5c>
  403d6f:	add    rax,0x1
  403d73:	mov    QWORD PTR [rip+0x1443e],rax        # 4181b8 <__bss_start@@Base+0x5c>
  403d7a:	mov    rax,QWORD PTR [rip+0x1443f]        # 4181c0 <__bss_start@@Base+0x64>
  403d81:	add    rax,0x1
  403d85:	mov    QWORD PTR [rip+0x14434],rax        # 4181c0 <__bss_start@@Base+0x64>
  403d8c:	lea    rax,[rip+0xe2c4]        # 412057 <_IO_stdin_used@@Base+0x57>
  403d93:	mov    QWORD PTR [rbp-0x8],rax
  403d97:	mov    rsi,QWORD PTR [rbp-0x8]
  403d9b:	lea    rdi,[rbp-0x20]
  403d9f:	call   40ced0 <init_lexer@@Base>
  403da4:	lea    rdi,[rbp-0x20]
  403da8:	call   40d290 <next@@Base>
  403dad:	xor    ecx,ecx
  403daf:	mov    esi,ecx
  403db1:	mov    ecx,0xd2
  403db6:	mov    QWORD PTR [rbp-0x28],rax
  403dba:	mov    rax,QWORD PTR [rbp-0x28]
  403dbe:	mov    edx,DWORD PTR [rax]
  403dc0:	mov    eax,edx
  403dc2:	mov    rdi,rsi
  403dc5:	mov    QWORD PTR [rbp-0x30],rsi
  403dc9:	mov    rsi,rax
  403dcc:	mov    rdx,QWORD PTR [rbp-0x30]
  403dd0:	mov    r8d,0x94
  403dd6:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403ddb:	lea    rdi,[rbp-0x20]
  403ddf:	call   40d290 <next@@Base>
  403de4:	mov    r8d,0x2
  403dea:	mov    edi,r8d
  403ded:	xor    r8d,r8d
  403df0:	mov    edx,r8d
  403df3:	mov    r8d,0xd4
  403df9:	mov    ecx,r8d
  403dfc:	mov    QWORD PTR [rbp-0x28],rax
  403e00:	mov    rax,QWORD PTR [rbp-0x28]
  403e04:	mov    r8d,DWORD PTR [rax]
  403e07:	mov    esi,r8d
  403e0a:	mov    r8d,0x94
  403e10:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403e15:	lea    rdi,[rbp-0x20]
  403e19:	call   40d290 <next@@Base>
  403e1e:	mov    r8d,0x3
  403e24:	mov    edi,r8d
  403e27:	xor    r8d,r8d
  403e2a:	mov    edx,r8d
  403e2d:	mov    r8d,0xd6
  403e33:	mov    ecx,r8d
  403e36:	mov    QWORD PTR [rbp-0x28],rax
  403e3a:	mov    rax,QWORD PTR [rbp-0x28]
  403e3e:	mov    r8d,DWORD PTR [rax]
  403e41:	mov    esi,r8d
  403e44:	mov    r8d,0x94
  403e4a:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403e4f:	lea    rdi,[rbp-0x20]
  403e53:	call   40d290 <next@@Base>
  403e58:	mov    r8d,0x4
  403e5e:	mov    edi,r8d
  403e61:	xor    r8d,r8d
  403e64:	mov    edx,r8d
  403e67:	mov    r8d,0xd8
  403e6d:	mov    ecx,r8d
  403e70:	mov    QWORD PTR [rbp-0x28],rax
  403e74:	mov    rax,QWORD PTR [rbp-0x28]
  403e78:	mov    r8d,DWORD PTR [rax]
  403e7b:	mov    esi,r8d
  403e7e:	mov    r8d,0x94
  403e84:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403e89:	lea    rdi,[rbp-0x20]
  403e8d:	call   40d290 <next@@Base>
  403e92:	mov    r8d,0x5
  403e98:	mov    edi,r8d
  403e9b:	xor    r8d,r8d
  403e9e:	mov    edx,r8d
  403ea1:	mov    r8d,0xda
  403ea7:	mov    ecx,r8d
  403eaa:	mov    QWORD PTR [rbp-0x28],rax
  403eae:	mov    rax,QWORD PTR [rbp-0x28]
  403eb2:	mov    r8d,DWORD PTR [rax]
  403eb5:	mov    esi,r8d
  403eb8:	mov    r8d,0x94
  403ebe:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403ec3:	lea    rdi,[rbp-0x20]
  403ec7:	call   40d290 <next@@Base>
  403ecc:	mov    r8d,0xa
  403ed2:	mov    edi,r8d
  403ed5:	xor    r8d,r8d
  403ed8:	mov    edx,r8d
  403edb:	mov    r8d,0xdc
  403ee1:	mov    ecx,r8d
  403ee4:	mov    QWORD PTR [rbp-0x28],rax
  403ee8:	mov    rax,QWORD PTR [rbp-0x28]
  403eec:	mov    r8d,DWORD PTR [rax]
  403eef:	mov    esi,r8d
  403ef2:	mov    r8d,0x94
  403ef8:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403efd:	lea    rdi,[rbp-0x20]
  403f01:	call   40d290 <next@@Base>
  403f06:	mov    r8d,0x3
  403f0c:	mov    edi,r8d
  403f0f:	xor    r8d,r8d
  403f12:	mov    edx,r8d
  403f15:	mov    r8d,0xde
  403f1b:	mov    ecx,r8d
  403f1e:	mov    QWORD PTR [rbp-0x28],rax
  403f22:	mov    rax,QWORD PTR [rbp-0x28]
  403f26:	mov    r8d,DWORD PTR [rax]
  403f29:	mov    esi,r8d
  403f2c:	mov    r8d,0x94
  403f32:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403f37:	lea    rdi,[rbp-0x20]
  403f3b:	call   40d290 <next@@Base>
  403f40:	mov    r8d,0x1
  403f46:	mov    edi,r8d
  403f49:	xor    r8d,r8d
  403f4c:	mov    edx,r8d
  403f4f:	mov    r8d,0xe0
  403f55:	mov    ecx,r8d
  403f58:	mov    QWORD PTR [rbp-0x28],rax
  403f5c:	mov    rax,QWORD PTR [rbp-0x28]
  403f60:	mov    r8d,DWORD PTR [rax]
  403f63:	mov    esi,r8d
  403f66:	mov    r8d,0x94
  403f6c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403f71:	lea    rdi,[rbp-0x20]
  403f75:	call   40d290 <next@@Base>
  403f7a:	mov    r8d,0xc
  403f80:	mov    edi,r8d
  403f83:	xor    r8d,r8d
  403f86:	mov    edx,r8d
  403f89:	mov    r8d,0xe2
  403f8f:	mov    ecx,r8d
  403f92:	mov    QWORD PTR [rbp-0x28],rax
  403f96:	mov    rax,QWORD PTR [rbp-0x28]
  403f9a:	mov    r8d,DWORD PTR [rax]
  403f9d:	mov    esi,r8d
  403fa0:	mov    r8d,0x94
  403fa6:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403fab:	lea    rdi,[rbp-0x20]
  403faf:	call   40d290 <next@@Base>
  403fb4:	mov    r8d,0x1
  403fba:	mov    edi,r8d
  403fbd:	xor    r8d,r8d
  403fc0:	mov    edx,r8d
  403fc3:	mov    r8d,0xe4
  403fc9:	mov    ecx,r8d
  403fcc:	mov    QWORD PTR [rbp-0x28],rax
  403fd0:	mov    rax,QWORD PTR [rbp-0x28]
  403fd4:	mov    r8d,DWORD PTR [rax]
  403fd7:	mov    esi,r8d
  403fda:	mov    r8d,0x94
  403fe0:	call   406cc0 <UnityAssertEqualNumber@@Base>
  403fe5:	lea    rdi,[rbp-0x20]
  403fe9:	call   40d290 <next@@Base>
  403fee:	mov    r8d,0x4
  403ff4:	mov    edi,r8d
  403ff7:	xor    r8d,r8d
  403ffa:	mov    edx,r8d
  403ffd:	mov    r8d,0xe6
  404003:	mov    ecx,r8d
  404006:	mov    QWORD PTR [rbp-0x28],rax
  40400a:	mov    rax,QWORD PTR [rbp-0x28]
  40400e:	mov    r8d,DWORD PTR [rax]
  404011:	mov    esi,r8d
  404014:	mov    r8d,0x94
  40401a:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40401f:	lea    rdi,[rbp-0x20]
  404023:	call   40d290 <next@@Base>
  404028:	mov    r8d,0x5
  40402e:	mov    edi,r8d
  404031:	xor    r8d,r8d
  404034:	mov    edx,r8d
  404037:	mov    r8d,0xe8
  40403d:	mov    ecx,r8d
  404040:	mov    QWORD PTR [rbp-0x28],rax
  404044:	mov    rax,QWORD PTR [rbp-0x28]
  404048:	mov    r8d,DWORD PTR [rax]
  40404b:	mov    esi,r8d
  40404e:	mov    r8d,0x94
  404054:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404059:	lea    rdi,[rbp-0x20]
  40405d:	call   40d290 <next@@Base>
  404062:	mov    r8d,0x7
  404068:	mov    edi,r8d
  40406b:	xor    r8d,r8d
  40406e:	mov    edx,r8d
  404071:	mov    r8d,0xea
  404077:	mov    ecx,r8d
  40407a:	mov    QWORD PTR [rbp-0x28],rax
  40407e:	mov    rax,QWORD PTR [rbp-0x28]
  404082:	mov    r8d,DWORD PTR [rax]
  404085:	mov    esi,r8d
  404088:	mov    r8d,0x94
  40408e:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404093:	lea    rdi,[rbp-0x20]
  404097:	call   40d290 <next@@Base>
  40409c:	mov    r8d,0x1
  4040a2:	mov    edi,r8d
  4040a5:	xor    r8d,r8d
  4040a8:	mov    edx,r8d
  4040ab:	mov    r8d,0xec
  4040b1:	mov    ecx,r8d
  4040b4:	mov    QWORD PTR [rbp-0x28],rax
  4040b8:	mov    rax,QWORD PTR [rbp-0x28]
  4040bc:	mov    r8d,DWORD PTR [rax]
  4040bf:	mov    esi,r8d
  4040c2:	mov    r8d,0x94
  4040c8:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4040cd:	lea    rdi,[rbp-0x20]
  4040d1:	call   40d290 <next@@Base>
  4040d6:	mov    r8d,0x8
  4040dc:	mov    edi,r8d
  4040df:	xor    r8d,r8d
  4040e2:	mov    edx,r8d
  4040e5:	mov    r8d,0xee
  4040eb:	mov    ecx,r8d
  4040ee:	mov    QWORD PTR [rbp-0x28],rax
  4040f2:	mov    rax,QWORD PTR [rbp-0x28]
  4040f6:	mov    r8d,DWORD PTR [rax]
  4040f9:	mov    esi,r8d
  4040fc:	mov    r8d,0x94
  404102:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404107:	lea    rdi,[rbp-0x20]
  40410b:	call   40d290 <next@@Base>
  404110:	mov    r8d,0x6
  404116:	mov    edi,r8d
  404119:	xor    r8d,r8d
  40411c:	mov    edx,r8d
  40411f:	mov    r8d,0xf0
  404125:	mov    ecx,r8d
  404128:	mov    QWORD PTR [rbp-0x28],rax
  40412c:	mov    rax,QWORD PTR [rbp-0x28]
  404130:	mov    r8d,DWORD PTR [rax]
  404133:	mov    esi,r8d
  404136:	mov    r8d,0x94
  40413c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404141:	lea    rdi,[rbp-0x20]
  404145:	call   40d290 <next@@Base>
  40414a:	mov    r8d,0xb
  404150:	mov    edi,r8d
  404153:	xor    r8d,r8d
  404156:	mov    edx,r8d
  404159:	mov    r8d,0xf2
  40415f:	mov    ecx,r8d
  404162:	mov    QWORD PTR [rbp-0x28],rax
  404166:	mov    rax,QWORD PTR [rbp-0x28]
  40416a:	mov    r8d,DWORD PTR [rax]
  40416d:	mov    esi,r8d
  404170:	mov    r8d,0x94
  404176:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40417b:	lea    rdi,[rbp-0x20]
  40417f:	call   40d290 <next@@Base>
  404184:	mov    r8d,0x5
  40418a:	mov    edi,r8d
  40418d:	xor    r8d,r8d
  404190:	mov    edx,r8d
  404193:	mov    r8d,0xf4
  404199:	mov    ecx,r8d
  40419c:	mov    QWORD PTR [rbp-0x28],rax
  4041a0:	mov    rax,QWORD PTR [rbp-0x28]
  4041a4:	mov    r8d,DWORD PTR [rax]
  4041a7:	mov    esi,r8d
  4041aa:	mov    r8d,0x94
  4041b0:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4041b5:	lea    rdi,[rbp-0x20]
  4041b9:	call   40d290 <next@@Base>
  4041be:	mov    r8d,0x7
  4041c4:	mov    edi,r8d
  4041c7:	xor    r8d,r8d
  4041ca:	mov    edx,r8d
  4041cd:	mov    r8d,0xf6
  4041d3:	mov    ecx,r8d
  4041d6:	mov    QWORD PTR [rbp-0x28],rax
  4041da:	mov    rax,QWORD PTR [rbp-0x28]
  4041de:	mov    r8d,DWORD PTR [rax]
  4041e1:	mov    esi,r8d
  4041e4:	mov    r8d,0x94
  4041ea:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4041ef:	lea    rdi,[rbp-0x20]
  4041f3:	call   40d290 <next@@Base>
  4041f8:	mov    r8d,0x1
  4041fe:	mov    edi,r8d
  404201:	xor    r8d,r8d
  404204:	mov    edx,r8d
  404207:	mov    r8d,0xf8
  40420d:	mov    ecx,r8d
  404210:	mov    QWORD PTR [rbp-0x28],rax
  404214:	mov    rax,QWORD PTR [rbp-0x28]
  404218:	mov    r8d,DWORD PTR [rax]
  40421b:	mov    esi,r8d
  40421e:	mov    r8d,0x94
  404224:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404229:	lea    rdi,[rbp-0x20]
  40422d:	call   40d290 <next@@Base>
  404232:	mov    r8d,0x8
  404238:	mov    edi,r8d
  40423b:	xor    r8d,r8d
  40423e:	mov    edx,r8d
  404241:	mov    r8d,0xfa
  404247:	mov    ecx,r8d
  40424a:	mov    QWORD PTR [rbp-0x28],rax
  40424e:	mov    rax,QWORD PTR [rbp-0x28]
  404252:	mov    r8d,DWORD PTR [rax]
  404255:	mov    esi,r8d
  404258:	mov    r8d,0x94
  40425e:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404263:	lea    rdi,[rbp-0x20]
  404267:	call   40d290 <next@@Base>
  40426c:	mov    r8d,0x6
  404272:	mov    edi,r8d
  404275:	xor    r8d,r8d
  404278:	mov    edx,r8d
  40427b:	mov    r8d,0xfc
  404281:	mov    ecx,r8d
  404284:	mov    QWORD PTR [rbp-0x28],rax
  404288:	mov    rax,QWORD PTR [rbp-0x28]
  40428c:	mov    r8d,DWORD PTR [rax]
  40428f:	mov    esi,r8d
  404292:	mov    r8d,0x94
  404298:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40429d:	lea    rdi,[rbp-0x20]
  4042a1:	call   40d290 <next@@Base>
  4042a6:	mov    r8d,0x7
  4042ac:	mov    edi,r8d
  4042af:	xor    r8d,r8d
  4042b2:	mov    edx,r8d
  4042b5:	mov    r8d,0xfe
  4042bb:	mov    ecx,r8d
  4042be:	mov    QWORD PTR [rbp-0x28],rax
  4042c2:	mov    rax,QWORD PTR [rbp-0x28]
  4042c6:	mov    r8d,DWORD PTR [rax]
  4042c9:	mov    esi,r8d
  4042cc:	mov    r8d,0x94
  4042d2:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4042d7:	lea    rdi,[rbp-0x20]
  4042db:	call   40d290 <next@@Base>
  4042e0:	mov    r8d,0x1
  4042e6:	mov    edi,r8d
  4042e9:	xor    r8d,r8d
  4042ec:	mov    edx,r8d
  4042ef:	mov    r8d,0x100
  4042f5:	mov    ecx,r8d
  4042f8:	mov    QWORD PTR [rbp-0x28],rax
  4042fc:	mov    rax,QWORD PTR [rbp-0x28]
  404300:	mov    r8d,DWORD PTR [rax]
  404303:	mov    esi,r8d
  404306:	mov    r8d,0x94
  40430c:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404311:	lea    rdi,[rbp-0x20]
  404315:	call   40d290 <next@@Base>
  40431a:	mov    r8d,0x8
  404320:	mov    edi,r8d
  404323:	xor    r8d,r8d
  404326:	mov    edx,r8d
  404329:	mov    r8d,0x102
  40432f:	mov    ecx,r8d
  404332:	mov    QWORD PTR [rbp-0x28],rax
  404336:	mov    rax,QWORD PTR [rbp-0x28]
  40433a:	mov    r8d,DWORD PTR [rax]
  40433d:	mov    esi,r8d
  404340:	mov    r8d,0x94
  404346:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40434b:	lea    rdi,[rbp-0x20]
  40434f:	call   40d290 <next@@Base>
  404354:	mov    r8d,0x6
  40435a:	mov    edi,r8d
  40435d:	xor    r8d,r8d
  404360:	mov    edx,r8d
  404363:	mov    r8d,0x104
  404369:	mov    ecx,r8d
  40436c:	mov    QWORD PTR [rbp-0x28],rax
  404370:	mov    rax,QWORD PTR [rbp-0x28]
  404374:	mov    r8d,DWORD PTR [rax]
  404377:	mov    esi,r8d
  40437a:	mov    r8d,0x94
  404380:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404385:	lea    rdi,[rbp-0x20]
  404389:	call   40d290 <next@@Base>
  40438e:	mov    r8d,0x9
  404394:	mov    edi,r8d
  404397:	xor    r8d,r8d
  40439a:	mov    edx,r8d
  40439d:	mov    r8d,0x106
  4043a3:	mov    ecx,r8d
  4043a6:	mov    QWORD PTR [rbp-0x28],rax
  4043aa:	mov    rax,QWORD PTR [rbp-0x28]
  4043ae:	mov    r8d,DWORD PTR [rax]
  4043b1:	mov    esi,r8d
  4043b4:	mov    r8d,0x94
  4043ba:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4043bf:	lea    rdi,[rbp-0x20]
  4043c3:	call   40cf40 <destroy_lexer@@Base>
  4043c8:	add    rsp,0x30
  4043cc:	pop    rbp
  4043cd:	ret    
  4043ce:	xchg   ax,ax

00000000004043d0 <read_token_int_type@@Base>:
  4043d0:	push   rbp
  4043d1:	mov    rbp,rsp
  4043d4:	sub    rsp,0x30
  4043d8:	mov    rax,QWORD PTR [rip+0x13de9]        # 4181c8 <__bss_start@@Base+0x6c>
  4043df:	add    rax,0x1
  4043e3:	mov    QWORD PTR [rip+0x13dde],rax        # 4181c8 <__bss_start@@Base+0x6c>
  4043ea:	mov    rax,QWORD PTR [rip+0x13ddf]        # 4181d0 <__bss_start@@Base+0x74>
  4043f1:	add    rax,0x1
  4043f5:	mov    QWORD PTR [rip+0x13dd4],rax        # 4181d0 <__bss_start@@Base+0x74>
  4043fc:	lea    rax,[rip+0xe7a8]        # 412bab <UnitySizeMask@@Base+0x39b>
  404403:	mov    QWORD PTR [rbp-0x8],rax
  404407:	mov    rsi,QWORD PTR [rbp-0x8]
  40440b:	lea    rdi,[rbp-0x20]
  40440f:	call   40ced0 <init_lexer@@Base>
  404414:	lea    rdi,[rbp-0x20]
  404418:	call   40d290 <next@@Base>
  40441d:	xor    ecx,ecx
  40441f:	mov    esi,ecx
  404421:	mov    ecx,0x117
  404426:	mov    QWORD PTR [rbp-0x28],rax
  40442a:	mov    rax,QWORD PTR [rbp-0x28]
  40442e:	mov    edx,DWORD PTR [rax]
  404430:	mov    eax,edx
  404432:	mov    rdi,rsi
  404435:	mov    QWORD PTR [rbp-0x30],rsi
  404439:	mov    rsi,rax
  40443c:	mov    rdx,QWORD PTR [rbp-0x30]
  404440:	mov    r8d,0x94
  404446:	call   406cc0 <UnityAssertEqualNumber@@Base>
  40444b:	lea    rdi,[rbp-0x20]
  40444f:	call   40cf40 <destroy_lexer@@Base>
  404454:	add    rsp,0x30
  404458:	pop    rbp
  404459:	ret    
  40445a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404460 <read_token_int_value@@Base>:
  404460:	push   rbp
  404461:	mov    rbp,rsp
  404464:	sub    rsp,0x30
  404468:	mov    rax,QWORD PTR [rip+0x13d69]        # 4181d8 <__bss_start@@Base+0x7c>
  40446f:	add    rax,0x1
  404473:	mov    QWORD PTR [rip+0x13d5e],rax        # 4181d8 <__bss_start@@Base+0x7c>
  40447a:	mov    rax,QWORD PTR [rip+0x13d5f]        # 4181e0 <__bss_start@@Base+0x84>
  404481:	add    rax,0x1
  404485:	mov    QWORD PTR [rip+0x13d54],rax        # 4181e0 <__bss_start@@Base+0x84>
  40448c:	lea    rax,[rip+0xdc15]        # 4120a8 <_IO_stdin_used@@Base+0xa8>
  404493:	mov    QWORD PTR [rbp-0x8],rax
  404497:	mov    rsi,QWORD PTR [rbp-0x8]
  40449b:	lea    rdi,[rbp-0x20]
  40449f:	call   40ced0 <init_lexer@@Base>
  4044a4:	lea    rdi,[rbp-0x20]
  4044a8:	call   40d290 <next@@Base>
  4044ad:	mov    ecx,0x1
  4044b2:	mov    edi,ecx
  4044b4:	xor    ecx,ecx
  4044b6:	mov    edx,ecx
  4044b8:	mov    ecx,0x128
  4044bd:	mov    QWORD PTR [rbp-0x28],rax
  4044c1:	mov    rax,QWORD PTR [rbp-0x28]
  4044c5:	mov    r8d,DWORD PTR [rax]
  4044c8:	mov    esi,r8d
  4044cb:	mov    r8d,0x94
  4044d1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4044d6:	lea    rdi,[rbp-0x20]
  4044da:	call   40cf40 <destroy_lexer@@Base>
  4044df:	add    rsp,0x30
  4044e3:	pop    rbp
  4044e4:	ret    
  4044e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044ef:	nop

00000000004044f0 <read_token_function@@Base>:
  4044f0:	push   rbp
  4044f1:	mov    rbp,rsp
  4044f4:	sub    rsp,0x30
  4044f8:	mov    rax,QWORD PTR [rip+0x13ce9]        # 4181e8 <__bss_start@@Base+0x8c>
  4044ff:	add    rax,0x1
  404503:	mov    QWORD PTR [rip+0x13cde],rax        # 4181e8 <__bss_start@@Base+0x8c>
  40450a:	mov    rax,QWORD PTR [rip+0x13cdf]        # 4181f0 <__bss_start@@Base+0x94>
  404511:	add    rax,0x1
  404515:	mov    QWORD PTR [rip+0x13cd4],rax        # 4181f0 <__bss_start@@Base+0x94>
  40451c:	lea    rax,[rip+0xdc17]        # 41213a <_IO_stdin_used@@Base+0x13a>
  404523:	mov    QWORD PTR [rbp-0x8],rax
  404527:	mov    rsi,QWORD PTR [rbp-0x8]
  40452b:	lea    rdi,[rbp-0x20]
  40452f:	call   40ced0 <init_lexer@@Base>
  404534:	lea    rdi,[rbp-0x20]
  404538:	call   40d290 <next@@Base>
  40453d:	mov    ecx,0x2
  404542:	mov    edi,ecx
  404544:	xor    ecx,ecx
  404546:	mov    edx,ecx
  404548:	mov    ecx,0x139
  40454d:	mov    QWORD PTR [rbp-0x28],rax
  404551:	mov    rax,QWORD PTR [rbp-0x28]
  404555:	mov    r8d,DWORD PTR [rax]
  404558:	mov    esi,r8d
  40455b:	mov    r8d,0x94
  404561:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404566:	lea    rdi,[rbp-0x20]
  40456a:	call   40cf40 <destroy_lexer@@Base>
  40456f:	add    rsp,0x30
  404573:	pop    rbp
  404574:	ret    
  404575:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40457f:	nop

0000000000404580 <read_token_opar@@Base>:
  404580:	push   rbp
  404581:	mov    rbp,rsp
  404584:	sub    rsp,0x30
  404588:	mov    rax,QWORD PTR [rip+0x13c69]        # 4181f8 <__bss_start@@Base+0x9c>
  40458f:	add    rax,0x1
  404593:	mov    QWORD PTR [rip+0x13c5e],rax        # 4181f8 <__bss_start@@Base+0x9c>
  40459a:	mov    rax,QWORD PTR [rip+0x13c5f]        # 418200 <__bss_start@@Base+0xa4>
  4045a1:	add    rax,0x1
  4045a5:	mov    QWORD PTR [rip+0x13c54],rax        # 418200 <__bss_start@@Base+0xa4>
  4045ac:	lea    rax,[rip+0xdafa]        # 4120ad <_IO_stdin_used@@Base+0xad>
  4045b3:	mov    QWORD PTR [rbp-0x8],rax
  4045b7:	mov    rsi,QWORD PTR [rbp-0x8]
  4045bb:	lea    rdi,[rbp-0x20]
  4045bf:	call   40ced0 <init_lexer@@Base>
  4045c4:	lea    rdi,[rbp-0x20]
  4045c8:	call   40d290 <next@@Base>
  4045cd:	mov    ecx,0x3
  4045d2:	mov    edi,ecx
  4045d4:	xor    ecx,ecx
  4045d6:	mov    edx,ecx
  4045d8:	mov    ecx,0x14a
  4045dd:	mov    QWORD PTR [rbp-0x28],rax
  4045e1:	mov    rax,QWORD PTR [rbp-0x28]
  4045e5:	mov    r8d,DWORD PTR [rax]
  4045e8:	mov    esi,r8d
  4045eb:	mov    r8d,0x94
  4045f1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4045f6:	lea    rdi,[rbp-0x20]
  4045fa:	call   40cf40 <destroy_lexer@@Base>
  4045ff:	add    rsp,0x30
  404603:	pop    rbp
  404604:	ret    
  404605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40460f:	nop

0000000000404610 <read_token_cpar@@Base>:
  404610:	push   rbp
  404611:	mov    rbp,rsp
  404614:	sub    rsp,0x30
  404618:	mov    rax,QWORD PTR [rip+0x13be9]        # 418208 <__bss_start@@Base+0xac>
  40461f:	add    rax,0x1
  404623:	mov    QWORD PTR [rip+0x13bde],rax        # 418208 <__bss_start@@Base+0xac>
  40462a:	mov    rax,QWORD PTR [rip+0x13bdf]        # 418210 <__bss_start@@Base+0xb4>
  404631:	add    rax,0x1
  404635:	mov    QWORD PTR [rip+0x13bd4],rax        # 418210 <__bss_start@@Base+0xb4>
  40463c:	lea    rax,[rip+0xda6c]        # 4120af <_IO_stdin_used@@Base+0xaf>
  404643:	mov    QWORD PTR [rbp-0x8],rax
  404647:	mov    rsi,QWORD PTR [rbp-0x8]
  40464b:	lea    rdi,[rbp-0x20]
  40464f:	call   40ced0 <init_lexer@@Base>
  404654:	lea    rdi,[rbp-0x20]
  404658:	call   40d290 <next@@Base>
  40465d:	mov    ecx,0x4
  404662:	mov    edi,ecx
  404664:	xor    ecx,ecx
  404666:	mov    edx,ecx
  404668:	mov    ecx,0x15b
  40466d:	mov    QWORD PTR [rbp-0x28],rax
  404671:	mov    rax,QWORD PTR [rbp-0x28]
  404675:	mov    r8d,DWORD PTR [rax]
  404678:	mov    esi,r8d
  40467b:	mov    r8d,0x94
  404681:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404686:	lea    rdi,[rbp-0x20]
  40468a:	call   40cf40 <destroy_lexer@@Base>
  40468f:	add    rsp,0x30
  404693:	pop    rbp
  404694:	ret    
  404695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40469f:	nop

00000000004046a0 <read_token_obra@@Base>:
  4046a0:	push   rbp
  4046a1:	mov    rbp,rsp
  4046a4:	sub    rsp,0x30
  4046a8:	mov    rax,QWORD PTR [rip+0x13b69]        # 418218 <__bss_start@@Base+0xbc>
  4046af:	add    rax,0x1
  4046b3:	mov    QWORD PTR [rip+0x13b5e],rax        # 418218 <__bss_start@@Base+0xbc>
  4046ba:	mov    rax,QWORD PTR [rip+0x13b5f]        # 418220 <__bss_start@@Base+0xc4>
  4046c1:	add    rax,0x1
  4046c5:	mov    QWORD PTR [rip+0x13b54],rax        # 418220 <__bss_start@@Base+0xc4>
  4046cc:	lea    rax,[rip+0xd9de]        # 4120b1 <_IO_stdin_used@@Base+0xb1>
  4046d3:	mov    QWORD PTR [rbp-0x8],rax
  4046d7:	mov    rsi,QWORD PTR [rbp-0x8]
  4046db:	lea    rdi,[rbp-0x20]
  4046df:	call   40ced0 <init_lexer@@Base>
  4046e4:	lea    rdi,[rbp-0x20]
  4046e8:	call   40d290 <next@@Base>
  4046ed:	mov    ecx,0x5
  4046f2:	mov    edi,ecx
  4046f4:	xor    ecx,ecx
  4046f6:	mov    edx,ecx
  4046f8:	mov    ecx,0x16c
  4046fd:	mov    QWORD PTR [rbp-0x28],rax
  404701:	mov    rax,QWORD PTR [rbp-0x28]
  404705:	mov    r8d,DWORD PTR [rax]
  404708:	mov    esi,r8d
  40470b:	mov    r8d,0x94
  404711:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404716:	lea    rdi,[rbp-0x20]
  40471a:	call   40cf40 <destroy_lexer@@Base>
  40471f:	add    rsp,0x30
  404723:	pop    rbp
  404724:	ret    
  404725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40472f:	nop

0000000000404730 <read_token_cbra@@Base>:
  404730:	push   rbp
  404731:	mov    rbp,rsp
  404734:	sub    rsp,0x30
  404738:	mov    rax,QWORD PTR [rip+0x13ae9]        # 418228 <__bss_start@@Base+0xcc>
  40473f:	add    rax,0x1
  404743:	mov    QWORD PTR [rip+0x13ade],rax        # 418228 <__bss_start@@Base+0xcc>
  40474a:	mov    rax,QWORD PTR [rip+0x13adf]        # 418230 <__bss_start@@Base+0xd4>
  404751:	add    rax,0x1
  404755:	mov    QWORD PTR [rip+0x13ad4],rax        # 418230 <__bss_start@@Base+0xd4>
  40475c:	lea    rax,[rip+0xd8b9]        # 41201c <_IO_stdin_used@@Base+0x1c>
  404763:	mov    QWORD PTR [rbp-0x8],rax
  404767:	mov    rsi,QWORD PTR [rbp-0x8]
  40476b:	lea    rdi,[rbp-0x20]
  40476f:	call   40ced0 <init_lexer@@Base>
  404774:	lea    rdi,[rbp-0x20]
  404778:	call   40d290 <next@@Base>
  40477d:	mov    ecx,0x6
  404782:	mov    edi,ecx
  404784:	xor    ecx,ecx
  404786:	mov    edx,ecx
  404788:	mov    ecx,0x17e
  40478d:	mov    QWORD PTR [rbp-0x28],rax
  404791:	mov    rax,QWORD PTR [rbp-0x28]
  404795:	mov    r8d,DWORD PTR [rax]
  404798:	mov    esi,r8d
  40479b:	mov    r8d,0x94
  4047a1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4047a6:	lea    rdi,[rbp-0x20]
  4047aa:	call   40cf40 <destroy_lexer@@Base>
  4047af:	add    rsp,0x30
  4047b3:	pop    rbp
  4047b4:	ret    
  4047b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047bf:	nop

00000000004047c0 <read_token_return@@Base>:
  4047c0:	push   rbp
  4047c1:	mov    rbp,rsp
  4047c4:	sub    rsp,0x30
  4047c8:	mov    rax,QWORD PTR [rip+0x13a69]        # 418238 <__bss_start@@Base+0xdc>
  4047cf:	add    rax,0x1
  4047d3:	mov    QWORD PTR [rip+0x13a5e],rax        # 418238 <__bss_start@@Base+0xdc>
  4047da:	mov    rax,QWORD PTR [rip+0x13a5f]        # 418240 <__bss_start@@Base+0xe4>
  4047e1:	add    rax,0x1
  4047e5:	mov    QWORD PTR [rip+0x13a54],rax        # 418240 <__bss_start@@Base+0xe4>
  4047ec:	lea    rax,[rip+0xda37]        # 41222a <_IO_stdin_used@@Base+0x22a>
  4047f3:	mov    QWORD PTR [rbp-0x8],rax
  4047f7:	mov    rsi,QWORD PTR [rbp-0x8]
  4047fb:	lea    rdi,[rbp-0x20]
  4047ff:	call   40ced0 <init_lexer@@Base>
  404804:	lea    rdi,[rbp-0x20]
  404808:	call   40d290 <next@@Base>
  40480d:	mov    ecx,0x7
  404812:	mov    edi,ecx
  404814:	xor    ecx,ecx
  404816:	mov    edx,ecx
  404818:	mov    ecx,0x18f
  40481d:	mov    QWORD PTR [rbp-0x28],rax
  404821:	mov    rax,QWORD PTR [rbp-0x28]
  404825:	mov    r8d,DWORD PTR [rax]
  404828:	mov    esi,r8d
  40482b:	mov    r8d,0x94
  404831:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404836:	lea    rdi,[rbp-0x20]
  40483a:	call   40cf40 <destroy_lexer@@Base>
  40483f:	add    rsp,0x30
  404843:	pop    rbp
  404844:	ret    
  404845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40484f:	nop

0000000000404850 <read_token_semicolon@@Base>:
  404850:	push   rbp
  404851:	mov    rbp,rsp
  404854:	sub    rsp,0x30
  404858:	mov    rax,QWORD PTR [rip+0x139e9]        # 418248 <__bss_start@@Base+0xec>
  40485f:	add    rax,0x1
  404863:	mov    QWORD PTR [rip+0x139de],rax        # 418248 <__bss_start@@Base+0xec>
  40486a:	mov    rax,QWORD PTR [rip+0x139df]        # 418250 <__bss_start@@Base+0xf4>
  404871:	add    rax,0x1
  404875:	mov    QWORD PTR [rip+0x139d4],rax        # 418250 <__bss_start@@Base+0xf4>
  40487c:	lea    rax,[rip+0xd830]        # 4120b3 <_IO_stdin_used@@Base+0xb3>
  404883:	mov    QWORD PTR [rbp-0x8],rax
  404887:	mov    rsi,QWORD PTR [rbp-0x8]
  40488b:	lea    rdi,[rbp-0x20]
  40488f:	call   40ced0 <init_lexer@@Base>
  404894:	lea    rdi,[rbp-0x20]
  404898:	call   40d290 <next@@Base>
  40489d:	mov    ecx,0x8
  4048a2:	mov    edi,ecx
  4048a4:	xor    ecx,ecx
  4048a6:	mov    edx,ecx
  4048a8:	mov    ecx,0x1a0
  4048ad:	mov    QWORD PTR [rbp-0x28],rax
  4048b1:	mov    rax,QWORD PTR [rbp-0x28]
  4048b5:	mov    r8d,DWORD PTR [rax]
  4048b8:	mov    esi,r8d
  4048bb:	mov    r8d,0x94
  4048c1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4048c6:	lea    rdi,[rbp-0x20]
  4048ca:	call   40cf40 <destroy_lexer@@Base>
  4048cf:	add    rsp,0x30
  4048d3:	pop    rbp
  4048d4:	ret    
  4048d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048df:	nop

00000000004048e0 <read_token_eof@@Base>:
  4048e0:	push   rbp
  4048e1:	mov    rbp,rsp
  4048e4:	sub    rsp,0x30
  4048e8:	mov    rax,QWORD PTR [rip+0x13969]        # 418258 <__bss_start@@Base+0xfc>
  4048ef:	add    rax,0x1
  4048f3:	mov    QWORD PTR [rip+0x1395e],rax        # 418258 <__bss_start@@Base+0xfc>
  4048fa:	mov    rax,QWORD PTR [rip+0x1395f]        # 418260 <__bss_start@@Base+0x104>
  404901:	add    rax,0x1
  404905:	mov    QWORD PTR [rip+0x13954],rax        # 418260 <__bss_start@@Base+0x104>
  40490c:	lea    rax,[rip+0xe8a1]        # 4131b4 <UnitySizeMask@@Base+0x9a4>
  404913:	mov    QWORD PTR [rbp-0x8],rax
  404917:	mov    rsi,QWORD PTR [rbp-0x8]
  40491b:	lea    rdi,[rbp-0x20]
  40491f:	call   40ced0 <init_lexer@@Base>
  404924:	lea    rdi,[rbp-0x20]
  404928:	call   40d290 <next@@Base>
  40492d:	mov    ecx,0x9
  404932:	mov    edi,ecx
  404934:	xor    ecx,ecx
  404936:	mov    edx,ecx
  404938:	mov    ecx,0x1b1
  40493d:	mov    QWORD PTR [rbp-0x28],rax
  404941:	mov    rax,QWORD PTR [rbp-0x28]
  404945:	mov    r8d,DWORD PTR [rax]
  404948:	mov    esi,r8d
  40494b:	mov    r8d,0x94
  404951:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404956:	lea    rdi,[rbp-0x20]
  40495a:	call   40cf40 <destroy_lexer@@Base>
  40495f:	add    rsp,0x30
  404963:	pop    rbp
  404964:	ret    
  404965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40496f:	nop

0000000000404970 <read_token_if@@Base>:
  404970:	push   rbp
  404971:	mov    rbp,rsp
  404974:	sub    rsp,0x30
  404978:	mov    rax,QWORD PTR [rip+0x138e9]        # 418268 <__bss_start@@Base+0x10c>
  40497f:	add    rax,0x1
  404983:	mov    QWORD PTR [rip+0x138de],rax        # 418268 <__bss_start@@Base+0x10c>
  40498a:	mov    rax,QWORD PTR [rip+0x138df]        # 418270 <__bss_start@@Base+0x114>
  404991:	add    rax,0x1
  404995:	mov    QWORD PTR [rip+0x138d4],rax        # 418270 <__bss_start@@Base+0x114>
  40499c:	lea    rax,[rip+0xd8bd]        # 412260 <_IO_stdin_used@@Base+0x260>
  4049a3:	mov    QWORD PTR [rbp-0x8],rax
  4049a7:	mov    rsi,QWORD PTR [rbp-0x8]
  4049ab:	lea    rdi,[rbp-0x20]
  4049af:	call   40ced0 <init_lexer@@Base>
  4049b4:	lea    rdi,[rbp-0x20]
  4049b8:	call   40d290 <next@@Base>
  4049bd:	mov    ecx,0xa
  4049c2:	mov    edi,ecx
  4049c4:	xor    ecx,ecx
  4049c6:	mov    edx,ecx
  4049c8:	mov    ecx,0x1c2
  4049cd:	mov    QWORD PTR [rbp-0x28],rax
  4049d1:	mov    rax,QWORD PTR [rbp-0x28]
  4049d5:	mov    r8d,DWORD PTR [rax]
  4049d8:	mov    esi,r8d
  4049db:	mov    r8d,0x94
  4049e1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  4049e6:	lea    rdi,[rbp-0x20]
  4049ea:	call   40cf40 <destroy_lexer@@Base>
  4049ef:	add    rsp,0x30
  4049f3:	pop    rbp
  4049f4:	ret    
  4049f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049ff:	nop

0000000000404a00 <read_token_else@@Base>:
  404a00:	push   rbp
  404a01:	mov    rbp,rsp
  404a04:	sub    rsp,0x30
  404a08:	mov    rax,QWORD PTR [rip+0x13869]        # 418278 <__bss_start@@Base+0x11c>
  404a0f:	add    rax,0x1
  404a13:	mov    QWORD PTR [rip+0x1385e],rax        # 418278 <__bss_start@@Base+0x11c>
  404a1a:	mov    rax,QWORD PTR [rip+0x1385f]        # 418280 <__bss_start@@Base+0x124>
  404a21:	add    rax,0x1
  404a25:	mov    QWORD PTR [rip+0x13854],rax        # 418280 <__bss_start@@Base+0x124>
  404a2c:	lea    rax,[rip+0xd76a]        # 41219d <_IO_stdin_used@@Base+0x19d>
  404a33:	mov    QWORD PTR [rbp-0x8],rax
  404a37:	mov    rsi,QWORD PTR [rbp-0x8]
  404a3b:	lea    rdi,[rbp-0x20]
  404a3f:	call   40ced0 <init_lexer@@Base>
  404a44:	lea    rdi,[rbp-0x20]
  404a48:	call   40d290 <next@@Base>
  404a4d:	mov    ecx,0xb
  404a52:	mov    edi,ecx
  404a54:	xor    ecx,ecx
  404a56:	mov    edx,ecx
  404a58:	mov    ecx,0x1d3
  404a5d:	mov    QWORD PTR [rbp-0x28],rax
  404a61:	mov    rax,QWORD PTR [rbp-0x28]
  404a65:	mov    r8d,DWORD PTR [rax]
  404a68:	mov    esi,r8d
  404a6b:	mov    r8d,0x94
  404a71:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404a76:	lea    rdi,[rbp-0x20]
  404a7a:	call   40cf40 <destroy_lexer@@Base>
  404a7f:	add    rsp,0x30
  404a83:	pop    rbp
  404a84:	ret    
  404a85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a8f:	nop

0000000000404a90 <read_token_equalequal@@Base>:
  404a90:	push   rbp
  404a91:	mov    rbp,rsp
  404a94:	sub    rsp,0x30
  404a98:	mov    rax,QWORD PTR [rip+0x137e9]        # 418288 <__bss_start@@Base+0x12c>
  404a9f:	add    rax,0x1
  404aa3:	mov    QWORD PTR [rip+0x137de],rax        # 418288 <__bss_start@@Base+0x12c>
  404aaa:	mov    rax,QWORD PTR [rip+0x137df]        # 418290 <__bss_start@@Base+0x134>
  404ab1:	add    rax,0x1
  404ab5:	mov    QWORD PTR [rip+0x137d4],rax        # 418290 <__bss_start@@Base+0x134>
  404abc:	lea    rax,[rip+0xd5f2]        # 4120b5 <_IO_stdin_used@@Base+0xb5>
  404ac3:	mov    QWORD PTR [rbp-0x8],rax
  404ac7:	mov    rsi,QWORD PTR [rbp-0x8]
  404acb:	lea    rdi,[rbp-0x20]
  404acf:	call   40ced0 <init_lexer@@Base>
  404ad4:	lea    rdi,[rbp-0x20]
  404ad8:	call   40d290 <next@@Base>
  404add:	mov    ecx,0xc
  404ae2:	mov    edi,ecx
  404ae4:	xor    ecx,ecx
  404ae6:	mov    edx,ecx
  404ae8:	mov    ecx,0x1e4
  404aed:	mov    QWORD PTR [rbp-0x28],rax
  404af1:	mov    rax,QWORD PTR [rbp-0x28]
  404af5:	mov    r8d,DWORD PTR [rax]
  404af8:	mov    esi,r8d
  404afb:	mov    r8d,0x94
  404b01:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404b06:	lea    rdi,[rbp-0x20]
  404b0a:	call   40cf40 <destroy_lexer@@Base>
  404b0f:	add    rsp,0x30
  404b13:	pop    rbp
  404b14:	ret    
  404b15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b1f:	nop

0000000000404b20 <read_token_notequal@@Base>:
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x30
  404b28:	mov    rax,QWORD PTR [rip+0x13769]        # 418298 <__bss_start@@Base+0x13c>
  404b2f:	add    rax,0x1
  404b33:	mov    QWORD PTR [rip+0x1375e],rax        # 418298 <__bss_start@@Base+0x13c>
  404b3a:	mov    rax,QWORD PTR [rip+0x1375f]        # 4182a0 <__bss_start@@Base+0x144>
  404b41:	add    rax,0x1
  404b45:	mov    QWORD PTR [rip+0x13754],rax        # 4182a0 <__bss_start@@Base+0x144>
  404b4c:	lea    rax,[rip+0xd565]        # 4120b8 <_IO_stdin_used@@Base+0xb8>
  404b53:	mov    QWORD PTR [rbp-0x8],rax
  404b57:	mov    rsi,QWORD PTR [rbp-0x8]
  404b5b:	lea    rdi,[rbp-0x20]
  404b5f:	call   40ced0 <init_lexer@@Base>
  404b64:	lea    rdi,[rbp-0x20]
  404b68:	call   40d290 <next@@Base>
  404b6d:	mov    ecx,0xc
  404b72:	mov    edi,ecx
  404b74:	xor    ecx,ecx
  404b76:	mov    edx,ecx
  404b78:	mov    ecx,0x1f5
  404b7d:	mov    QWORD PTR [rbp-0x28],rax
  404b81:	mov    rax,QWORD PTR [rbp-0x28]
  404b85:	mov    r8d,DWORD PTR [rax]
  404b88:	mov    esi,r8d
  404b8b:	mov    r8d,0x94
  404b91:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404b96:	lea    rdi,[rbp-0x20]
  404b9a:	call   40cf40 <destroy_lexer@@Base>
  404b9f:	add    rsp,0x30
  404ba3:	pop    rbp
  404ba4:	ret    
  404ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404baf:	nop

0000000000404bb0 <read_token_lessequalthan@@Base>:
  404bb0:	push   rbp
  404bb1:	mov    rbp,rsp
  404bb4:	sub    rsp,0x30
  404bb8:	mov    rax,QWORD PTR [rip+0x136e9]        # 4182a8 <__bss_start@@Base+0x14c>
  404bbf:	add    rax,0x1
  404bc3:	mov    QWORD PTR [rip+0x136de],rax        # 4182a8 <__bss_start@@Base+0x14c>
  404bca:	mov    rax,QWORD PTR [rip+0x136df]        # 4182b0 <__bss_start@@Base+0x154>
  404bd1:	add    rax,0x1
  404bd5:	mov    QWORD PTR [rip+0x136d4],rax        # 4182b0 <__bss_start@@Base+0x154>
  404bdc:	lea    rax,[rip+0xd4d8]        # 4120bb <_IO_stdin_used@@Base+0xbb>
  404be3:	mov    QWORD PTR [rbp-0x8],rax
  404be7:	mov    rsi,QWORD PTR [rbp-0x8]
  404beb:	lea    rdi,[rbp-0x20]
  404bef:	call   40ced0 <init_lexer@@Base>
  404bf4:	lea    rdi,[rbp-0x20]
  404bf8:	call   40d290 <next@@Base>
  404bfd:	mov    ecx,0xc
  404c02:	mov    edi,ecx
  404c04:	xor    ecx,ecx
  404c06:	mov    edx,ecx
  404c08:	mov    ecx,0x206
  404c0d:	mov    QWORD PTR [rbp-0x28],rax
  404c11:	mov    rax,QWORD PTR [rbp-0x28]
  404c15:	mov    r8d,DWORD PTR [rax]
  404c18:	mov    esi,r8d
  404c1b:	mov    r8d,0x94
  404c21:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404c26:	lea    rdi,[rbp-0x20]
  404c2a:	call   40cf40 <destroy_lexer@@Base>
  404c2f:	add    rsp,0x30
  404c33:	pop    rbp
  404c34:	ret    
  404c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c3f:	nop

0000000000404c40 <read_token_oror@@Base>:
  404c40:	push   rbp
  404c41:	mov    rbp,rsp
  404c44:	sub    rsp,0x30
  404c48:	mov    rax,QWORD PTR [rip+0x13669]        # 4182b8 <__bss_start@@Base+0x15c>
  404c4f:	add    rax,0x1
  404c53:	mov    QWORD PTR [rip+0x1365e],rax        # 4182b8 <__bss_start@@Base+0x15c>
  404c5a:	mov    rax,QWORD PTR [rip+0x1365f]        # 4182c0 <__bss_start@@Base+0x164>
  404c61:	add    rax,0x1
  404c65:	mov    QWORD PTR [rip+0x13654],rax        # 4182c0 <__bss_start@@Base+0x164>
  404c6c:	lea    rax,[rip+0xd44b]        # 4120be <_IO_stdin_used@@Base+0xbe>
  404c73:	mov    QWORD PTR [rbp-0x8],rax
  404c77:	mov    rsi,QWORD PTR [rbp-0x8]
  404c7b:	lea    rdi,[rbp-0x20]
  404c7f:	call   40ced0 <init_lexer@@Base>
  404c84:	lea    rdi,[rbp-0x20]
  404c88:	call   40d290 <next@@Base>
  404c8d:	mov    ecx,0xc
  404c92:	mov    edi,ecx
  404c94:	xor    ecx,ecx
  404c96:	mov    edx,ecx
  404c98:	mov    ecx,0x217
  404c9d:	mov    QWORD PTR [rbp-0x28],rax
  404ca1:	mov    rax,QWORD PTR [rbp-0x28]
  404ca5:	mov    r8d,DWORD PTR [rax]
  404ca8:	mov    esi,r8d
  404cab:	mov    r8d,0x94
  404cb1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404cb6:	lea    rdi,[rbp-0x20]
  404cba:	call   40cf40 <destroy_lexer@@Base>
  404cbf:	add    rsp,0x30
  404cc3:	pop    rbp
  404cc4:	ret    
  404cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ccf:	nop

0000000000404cd0 <read_token_andand@@Base>:
  404cd0:	push   rbp
  404cd1:	mov    rbp,rsp
  404cd4:	sub    rsp,0x30
  404cd8:	mov    rax,QWORD PTR [rip+0x135e9]        # 4182c8 <__bss_start@@Base+0x16c>
  404cdf:	add    rax,0x1
  404ce3:	mov    QWORD PTR [rip+0x135de],rax        # 4182c8 <__bss_start@@Base+0x16c>
  404cea:	mov    rax,QWORD PTR [rip+0x135df]        # 4182d0 <__bss_start@@Base+0x174>
  404cf1:	add    rax,0x1
  404cf5:	mov    QWORD PTR [rip+0x135d4],rax        # 4182d0 <__bss_start@@Base+0x174>
  404cfc:	lea    rax,[rip+0xd3be]        # 4120c1 <_IO_stdin_used@@Base+0xc1>
  404d03:	mov    QWORD PTR [rbp-0x8],rax
  404d07:	mov    rsi,QWORD PTR [rbp-0x8]
  404d0b:	lea    rdi,[rbp-0x20]
  404d0f:	call   40ced0 <init_lexer@@Base>
  404d14:	lea    rdi,[rbp-0x20]
  404d18:	call   40d290 <next@@Base>
  404d1d:	mov    ecx,0xc
  404d22:	mov    edi,ecx
  404d24:	xor    ecx,ecx
  404d26:	mov    edx,ecx
  404d28:	mov    ecx,0x228
  404d2d:	mov    QWORD PTR [rbp-0x28],rax
  404d31:	mov    rax,QWORD PTR [rbp-0x28]
  404d35:	mov    r8d,DWORD PTR [rax]
  404d38:	mov    esi,r8d
  404d3b:	mov    r8d,0x94
  404d41:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404d46:	lea    rdi,[rbp-0x20]
  404d4a:	call   40cf40 <destroy_lexer@@Base>
  404d4f:	add    rsp,0x30
  404d53:	pop    rbp
  404d54:	ret    
  404d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d5f:	nop

0000000000404d60 <read_token_greaterequalthan@@Base>:
  404d60:	push   rbp
  404d61:	mov    rbp,rsp
  404d64:	sub    rsp,0x30
  404d68:	mov    rax,QWORD PTR [rip+0x13569]        # 4182d8 <__bss_start@@Base+0x17c>
  404d6f:	add    rax,0x1
  404d73:	mov    QWORD PTR [rip+0x1355e],rax        # 4182d8 <__bss_start@@Base+0x17c>
  404d7a:	mov    rax,QWORD PTR [rip+0x1355f]        # 4182e0 <__bss_start@@Base+0x184>
  404d81:	add    rax,0x1
  404d85:	mov    QWORD PTR [rip+0x13554],rax        # 4182e0 <__bss_start@@Base+0x184>
  404d8c:	lea    rax,[rip+0xd331]        # 4120c4 <_IO_stdin_used@@Base+0xc4>
  404d93:	mov    QWORD PTR [rbp-0x8],rax
  404d97:	mov    rsi,QWORD PTR [rbp-0x8]
  404d9b:	lea    rdi,[rbp-0x20]
  404d9f:	call   40ced0 <init_lexer@@Base>
  404da4:	lea    rdi,[rbp-0x20]
  404da8:	call   40d290 <next@@Base>
  404dad:	mov    ecx,0xc
  404db2:	mov    edi,ecx
  404db4:	xor    ecx,ecx
  404db6:	mov    edx,ecx
  404db8:	mov    ecx,0x239
  404dbd:	mov    QWORD PTR [rbp-0x28],rax
  404dc1:	mov    rax,QWORD PTR [rbp-0x28]
  404dc5:	mov    r8d,DWORD PTR [rax]
  404dc8:	mov    esi,r8d
  404dcb:	mov    r8d,0x94
  404dd1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404dd6:	lea    rdi,[rbp-0x20]
  404dda:	call   40cf40 <destroy_lexer@@Base>
  404ddf:	add    rsp,0x30
  404de3:	pop    rbp
  404de4:	ret    
  404de5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404def:	nop

0000000000404df0 <read_token_lessthan@@Base>:
  404df0:	push   rbp
  404df1:	mov    rbp,rsp
  404df4:	sub    rsp,0x30
  404df8:	mov    rax,QWORD PTR [rip+0x134e9]        # 4182e8 <__bss_start@@Base+0x18c>
  404dff:	add    rax,0x1
  404e03:	mov    QWORD PTR [rip+0x134de],rax        # 4182e8 <__bss_start@@Base+0x18c>
  404e0a:	mov    rax,QWORD PTR [rip+0x134df]        # 4182f0 <__bss_start@@Base+0x194>
  404e11:	add    rax,0x1
  404e15:	mov    QWORD PTR [rip+0x134d4],rax        # 4182f0 <__bss_start@@Base+0x194>
  404e1c:	lea    rax,[rip+0xd2a4]        # 4120c7 <_IO_stdin_used@@Base+0xc7>
  404e23:	mov    QWORD PTR [rbp-0x8],rax
  404e27:	mov    rsi,QWORD PTR [rbp-0x8]
  404e2b:	lea    rdi,[rbp-0x20]
  404e2f:	call   40ced0 <init_lexer@@Base>
  404e34:	lea    rdi,[rbp-0x20]
  404e38:	call   40d290 <next@@Base>
  404e3d:	mov    ecx,0xc
  404e42:	mov    edi,ecx
  404e44:	xor    ecx,ecx
  404e46:	mov    edx,ecx
  404e48:	mov    ecx,0x24a
  404e4d:	mov    QWORD PTR [rbp-0x28],rax
  404e51:	mov    rax,QWORD PTR [rbp-0x28]
  404e55:	mov    r8d,DWORD PTR [rax]
  404e58:	mov    esi,r8d
  404e5b:	mov    r8d,0x94
  404e61:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404e66:	lea    rdi,[rbp-0x20]
  404e6a:	call   40cf40 <destroy_lexer@@Base>
  404e6f:	add    rsp,0x30
  404e73:	pop    rbp
  404e74:	ret    
  404e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e7f:	nop

0000000000404e80 <read_token_greaterthan@@Base>:
  404e80:	push   rbp
  404e81:	mov    rbp,rsp
  404e84:	sub    rsp,0x30
  404e88:	mov    rax,QWORD PTR [rip+0x13469]        # 4182f8 <__bss_start@@Base+0x19c>
  404e8f:	add    rax,0x1
  404e93:	mov    QWORD PTR [rip+0x1345e],rax        # 4182f8 <__bss_start@@Base+0x19c>
  404e9a:	mov    rax,QWORD PTR [rip+0x1345f]        # 418300 <__bss_start@@Base+0x1a4>
  404ea1:	add    rax,0x1
  404ea5:	mov    QWORD PTR [rip+0x13454],rax        # 418300 <__bss_start@@Base+0x1a4>
  404eac:	lea    rax,[rip+0xd216]        # 4120c9 <_IO_stdin_used@@Base+0xc9>
  404eb3:	mov    QWORD PTR [rbp-0x8],rax
  404eb7:	mov    rsi,QWORD PTR [rbp-0x8]
  404ebb:	lea    rdi,[rbp-0x20]
  404ebf:	call   40ced0 <init_lexer@@Base>
  404ec4:	lea    rdi,[rbp-0x20]
  404ec8:	call   40d290 <next@@Base>
  404ecd:	mov    ecx,0xc
  404ed2:	mov    edi,ecx
  404ed4:	xor    ecx,ecx
  404ed6:	mov    edx,ecx
  404ed8:	mov    ecx,0x25b
  404edd:	mov    QWORD PTR [rbp-0x28],rax
  404ee1:	mov    rax,QWORD PTR [rbp-0x28]
  404ee5:	mov    r8d,DWORD PTR [rax]
  404ee8:	mov    esi,r8d
  404eeb:	mov    r8d,0x94
  404ef1:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404ef6:	lea    rdi,[rbp-0x20]
  404efa:	call   40cf40 <destroy_lexer@@Base>
  404eff:	add    rsp,0x30
  404f03:	pop    rbp
  404f04:	ret    
  404f05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f0f:	nop

0000000000404f10 <read_token_not@@Base>:
  404f10:	push   rbp
  404f11:	mov    rbp,rsp
  404f14:	sub    rsp,0x30
  404f18:	mov    rax,QWORD PTR [rip+0x133e9]        # 418308 <__bss_start@@Base+0x1ac>
  404f1f:	add    rax,0x1
  404f23:	mov    QWORD PTR [rip+0x133de],rax        # 418308 <__bss_start@@Base+0x1ac>
  404f2a:	mov    rax,QWORD PTR [rip+0x133df]        # 418310 <__bss_start@@Base+0x1b4>
  404f31:	add    rax,0x1
  404f35:	mov    QWORD PTR [rip+0x133d4],rax        # 418310 <__bss_start@@Base+0x1b4>
  404f3c:	lea    rax,[rip+0xd188]        # 4120cb <_IO_stdin_used@@Base+0xcb>
  404f43:	mov    QWORD PTR [rbp-0x8],rax
  404f47:	mov    rsi,QWORD PTR [rbp-0x8]
  404f4b:	lea    rdi,[rbp-0x20]
  404f4f:	call   40ced0 <init_lexer@@Base>
  404f54:	lea    rdi,[rbp-0x20]
  404f58:	call   40d290 <next@@Base>
  404f5d:	mov    ecx,0xc
  404f62:	mov    edi,ecx
  404f64:	xor    ecx,ecx
  404f66:	mov    edx,ecx
  404f68:	mov    ecx,0x26c
  404f6d:	mov    QWORD PTR [rbp-0x28],rax
  404f71:	mov    rax,QWORD PTR [rbp-0x28]
  404f75:	mov    r8d,DWORD PTR [rax]
  404f78:	mov    esi,r8d
  404f7b:	mov    r8d,0x94
  404f81:	call   406cc0 <UnityAssertEqualNumber@@Base>
  404f86:	lea    rdi,[rbp-0x20]
  404f8a:	call   40cf40 <destroy_lexer@@Base>
  404f8f:	add    rsp,0x30
  404f93:	pop    rbp
  404f94:	ret    
  404f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f9f:	nop

0000000000404fa0 <main@@Base>:
  404fa0:	push   rbp
  404fa1:	mov    rbp,rsp
  404fa4:	sub    rsp,0x10
  404fa8:	mov    rax,QWORD PTR [rip+0x13369]        # 418318 <__bss_start@@Base+0x1bc>
  404faf:	add    rax,0x1
  404fb3:	mov    QWORD PTR [rip+0x1335e],rax        # 418318 <__bss_start@@Base+0x1bc>
  404fba:	mov    rax,QWORD PTR [rip+0x1335f]        # 418320 <__bss_start@@Base+0x1c4>
  404fc1:	add    rax,0x1
  404fc5:	mov    QWORD PTR [rip+0x13354],rax        # 418320 <__bss_start@@Base+0x1c4>
  404fcc:	mov    DWORD PTR [rbp-0x4],0x0
  404fd3:	lea    rdi,[rip+0xd0f3]        # 4120cd <_IO_stdin_used@@Base+0xcd>
  404fda:	call   40a960 <UnityBegin@@Base>
  404fdf:	lea    rdi,[rip+0xffffffffffffe37a]        # 403360 <simple_file_only_main@@Base>
  404fe6:	lea    rsi,[rip+0xd13c]        # 412129 <_IO_stdin_used@@Base+0x129>
  404fed:	mov    edx,0x275
  404ff2:	call   40a7b0 <UnityDefaultTestRun@@Base>
  404ff7:	lea    rdi,[rip+0xffffffffffffe602]        # 403600 <push_token_to_stack@@Base>
  404ffe:	lea    rsi,[rip+0xd13a]        # 41213f <_IO_stdin_used@@Base+0x13f>
  405005:	mov    edx,0x276
  40500a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40500f:	lea    rdi,[rip+0xffffffffffffe68a]        # 4036a0 <push_two_tokens_to_stack@@Base>
  405016:	lea    rsi,[rip+0xd136]        # 412153 <_IO_stdin_used@@Base+0x153>
  40501d:	mov    edx,0x277
  405022:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405027:	lea    rdi,[rip+0xffffffffffffe762]        # 403790 <push_token_and_call_next@@Base>
  40502e:	lea    rsi,[rip+0xd137]        # 41216c <_IO_stdin_used@@Base+0x16c>
  405035:	mov    edx,0x278
  40503a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40503f:	lea    rdi,[rip+0xffffffffffffe7fa]        # 403840 <if_without_else@@Base>
  405046:	lea    rsi,[rip+0xd138]        # 412185 <_IO_stdin_used@@Base+0x185>
  40504d:	mov    edx,0x279
  405052:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405057:	lea    rdi,[rip+0xffffffffffffed02]        # 403d60 <if_with_else@@Base>
  40505e:	lea    rsi,[rip+0xd130]        # 412195 <_IO_stdin_used@@Base+0x195>
  405065:	mov    edx,0x27a
  40506a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40506f:	lea    rdi,[rip+0xfffffffffffff35a]        # 4043d0 <read_token_int_type@@Base>
  405076:	lea    rsi,[rip+0xd125]        # 4121a2 <_IO_stdin_used@@Base+0x1a2>
  40507d:	mov    edx,0x27b
  405082:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405087:	lea    rdi,[rip+0xfffffffffffff3d2]        # 404460 <read_token_int_value@@Base>
  40508e:	lea    rsi,[rip+0xd121]        # 4121b6 <_IO_stdin_used@@Base+0x1b6>
  405095:	mov    edx,0x27c
  40509a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40509f:	lea    rdi,[rip+0xfffffffffffff44a]        # 4044f0 <read_token_function@@Base>
  4050a6:	lea    rsi,[rip+0xd11e]        # 4121cb <_IO_stdin_used@@Base+0x1cb>
  4050ad:	mov    edx,0x27d
  4050b2:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4050b7:	lea    rdi,[rip+0xfffffffffffff4c2]        # 404580 <read_token_opar@@Base>
  4050be:	lea    rsi,[rip+0xd11a]        # 4121df <_IO_stdin_used@@Base+0x1df>
  4050c5:	mov    edx,0x27e
  4050ca:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4050cf:	lea    rdi,[rip+0xfffffffffffff53a]        # 404610 <read_token_cpar@@Base>
  4050d6:	lea    rsi,[rip+0xd112]        # 4121ef <_IO_stdin_used@@Base+0x1ef>
  4050dd:	mov    edx,0x27f
  4050e2:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4050e7:	lea    rdi,[rip+0xfffffffffffff5b2]        # 4046a0 <read_token_obra@@Base>
  4050ee:	lea    rsi,[rip+0xd10a]        # 4121ff <_IO_stdin_used@@Base+0x1ff>
  4050f5:	mov    edx,0x280
  4050fa:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4050ff:	lea    rdi,[rip+0xfffffffffffff62a]        # 404730 <read_token_cbra@@Base>
  405106:	lea    rsi,[rip+0xd102]        # 41220f <_IO_stdin_used@@Base+0x20f>
  40510d:	mov    edx,0x281
  405112:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405117:	lea    rdi,[rip+0xfffffffffffff6a2]        # 4047c0 <read_token_return@@Base>
  40511e:	lea    rsi,[rip+0xd0fa]        # 41221f <_IO_stdin_used@@Base+0x21f>
  405125:	mov    edx,0x282
  40512a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40512f:	lea    rdi,[rip+0xfffffffffffff71a]        # 404850 <read_token_semicolon@@Base>
  405136:	lea    rsi,[rip+0xd0f4]        # 412231 <_IO_stdin_used@@Base+0x231>
  40513d:	mov    edx,0x283
  405142:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405147:	lea    rdi,[rip+0xfffffffffffff792]        # 4048e0 <read_token_eof@@Base>
  40514e:	lea    rsi,[rip+0xd0f1]        # 412246 <_IO_stdin_used@@Base+0x246>
  405155:	mov    edx,0x284
  40515a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40515f:	lea    rdi,[rip+0xfffffffffffff80a]        # 404970 <read_token_if@@Base>
  405166:	lea    rsi,[rip+0xd0e8]        # 412255 <_IO_stdin_used@@Base+0x255>
  40516d:	mov    edx,0x285
  405172:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405177:	lea    rdi,[rip+0xfffffffffffff882]        # 404a00 <read_token_else@@Base>
  40517e:	lea    rsi,[rip+0xd0de]        # 412263 <_IO_stdin_used@@Base+0x263>
  405185:	mov    edx,0x286
  40518a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40518f:	lea    rdi,[rip+0xfffffffffffff8fa]        # 404a90 <read_token_equalequal@@Base>
  405196:	lea    rsi,[rip+0xd0d6]        # 412273 <_IO_stdin_used@@Base+0x273>
  40519d:	mov    edx,0x287
  4051a2:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4051a7:	lea    rdi,[rip+0xfffffffffffff972]        # 404b20 <read_token_notequal@@Base>
  4051ae:	lea    rsi,[rip+0xd0d4]        # 412289 <_IO_stdin_used@@Base+0x289>
  4051b5:	mov    edx,0x288
  4051ba:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4051bf:	lea    rdi,[rip+0xfffffffffffff9ea]        # 404bb0 <read_token_lessequalthan@@Base>
  4051c6:	lea    rsi,[rip+0xd0d0]        # 41229d <_IO_stdin_used@@Base+0x29d>
  4051cd:	mov    edx,0x289
  4051d2:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4051d7:	lea    rdi,[rip+0xfffffffffffffb82]        # 404d60 <read_token_greaterequalthan@@Base>
  4051de:	lea    rsi,[rip+0xd0d1]        # 4122b6 <_IO_stdin_used@@Base+0x2b6>
  4051e5:	mov    edx,0x28a
  4051ea:	call   40a7b0 <UnityDefaultTestRun@@Base>
  4051ef:	lea    rdi,[rip+0xfffffffffffffa4a]        # 404c40 <read_token_oror@@Base>
  4051f6:	lea    rsi,[rip+0xd0d5]        # 4122d2 <_IO_stdin_used@@Base+0x2d2>
  4051fd:	mov    edx,0x28b
  405202:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405207:	lea    rdi,[rip+0xfffffffffffffac2]        # 404cd0 <read_token_andand@@Base>
  40520e:	lea    rsi,[rip+0xd0cd]        # 4122e2 <_IO_stdin_used@@Base+0x2e2>
  405215:	mov    edx,0x28c
  40521a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40521f:	lea    rdi,[rip+0xfffffffffffffbca]        # 404df0 <read_token_lessthan@@Base>
  405226:	lea    rsi,[rip+0xd0c7]        # 4122f4 <_IO_stdin_used@@Base+0x2f4>
  40522d:	mov    edx,0x28d
  405232:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405237:	lea    rdi,[rip+0xfffffffffffffc42]        # 404e80 <read_token_greaterthan@@Base>
  40523e:	lea    rsi,[rip+0xd0c3]        # 412308 <_IO_stdin_used@@Base+0x308>
  405245:	mov    edx,0x28e
  40524a:	call   40a7b0 <UnityDefaultTestRun@@Base>
  40524f:	lea    rdi,[rip+0xfffffffffffffcba]        # 404f10 <read_token_not@@Base>
  405256:	lea    rsi,[rip+0xd0c2]        # 41231f <_IO_stdin_used@@Base+0x31f>
  40525d:	mov    edx,0x28f
  405262:	call   40a7b0 <UnityDefaultTestRun@@Base>
  405267:	call   40a9f0 <UnityEnd@@Base>
  40526c:	add    rsp,0x10
  405270:	pop    rbp
  405271:	ret    
  405272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40527c:	nop    DWORD PTR [rax+0x0]
  405280:	sub    rsp,0x38
  405284:	xor    eax,eax
  405286:	mov    DWORD PTR [rsp+0x34],eax
  40528a:	jmp    40528f <main@@Base+0x2ef>
  40528f:	mov    eax,DWORD PTR [rsp+0x34]
  405293:	movsxd rcx,eax
  405296:	imul   rcx,rcx,0x30
  40529a:	lea    rdx,[rip+0x11ccf]        # 416f70 <UnitySizeMask@@Base+0x4760>
  4052a1:	add    rdx,rcx
  4052a4:	mov    rdi,QWORD PTR [rdx]
  4052a7:	mov    rsi,QWORD PTR [rdx+0x8]
  4052ab:	mov    r8d,DWORD PTR [rdx+0x10]
  4052af:	mov    QWORD PTR [rsp+0x28],rdx
  4052b4:	mov    edx,r8d
  4052b7:	mov    DWORD PTR [rsp+0x24],eax
  4052bb:	call   40f730 <next@@Base+0x24a0>
  4052c0:	xor    eax,eax
  4052c2:	mov    rcx,QWORD PTR [rsp+0x28]
  4052c7:	mov    edx,DWORD PTR [rcx+0x18]
  4052ca:	mov    rsi,QWORD PTR [rcx+0x20]
  4052ce:	mov    rdi,QWORD PTR [rcx+0x28]
  4052d2:	cmp    eax,edx
  4052d4:	mov    QWORD PTR [rsp+0x18],rdi
  4052d9:	mov    DWORD PTR [rsp+0x14],edx
  4052dd:	mov    QWORD PTR [rsp+0x8],rsi
  4052e2:	mov    DWORD PTR [rsp+0x4],eax
  4052e6:	jge    405357 <main@@Base+0x3b7>
  4052ec:	mov    eax,DWORD PTR [rsp+0x4]
  4052f0:	movsxd rcx,eax
  4052f3:	shl    rcx,0x5
  4052f7:	mov    rdx,QWORD PTR [rsp+0x8]
  4052fc:	add    rdx,rcx
  4052ff:	mov    edi,DWORD PTR [rdx]
  405301:	mov    rsi,QWORD PTR [rdx+0x8]
  405305:	mov    r8d,DWORD PTR [rdx+0x10]
  405309:	mov    r9b,BYTE PTR [rdx+0x14]
  40530d:	mov    r10d,DWORD PTR [rdx+0x18]
  405311:	mov    edx,r8d
  405314:	movzx  ecx,r9b
  405318:	mov    r8d,r10d
  40531b:	mov    DWORD PTR [rsp],eax
  40531e:	call   40fb80 <next@@Base+0x28f0>
  405323:	mov    eax,DWORD PTR [rsp]
  405326:	movsxd rsi,eax
  405329:	shl    rsi,0x4
  40532d:	mov    r11,QWORD PTR [rsp+0x18]
  405332:	add    r11,rsi
  405335:	mov    edi,DWORD PTR [r11]
  405338:	mov    rsi,QWORD PTR [r11+0x8]
  40533c:	call   40ffb0 <next@@Base+0x2d20>
  405341:	mov    eax,DWORD PTR [rsp]
  405344:	add    eax,0x1
  405347:	mov    ecx,DWORD PTR [rsp+0x14]
  40534b:	cmp    eax,ecx
  40534d:	mov    DWORD PTR [rsp+0x4],eax
  405351:	jl     4052ec <main@@Base+0x34c>
  405357:	call   4103d0 <next@@Base+0x3140>
  40535c:	call   410b70 <next@@Base+0x38e0>
  405361:	mov    eax,DWORD PTR [rsp+0x24]
  405365:	add    eax,0x1
  405368:	cmp    eax,0x1
  40536b:	mov    DWORD PTR [rsp+0x34],eax
  40536f:	jl     40528f <main@@Base+0x2ef>
  405375:	add    rsp,0x38
  405379:	ret    
  40537a:	nop    WORD PTR [rax+rax*1+0x0]
  405380:	push   rax
  405381:	call   405280 <main@@Base+0x2e0>
  405386:	mov    QWORD PTR [rip+0x12ddf],0x0        # 418170 <__bss_start@@Base+0x14>
  405391:	mov    QWORD PTR [rip+0x12dcc],0x0        # 418168 <__bss_start@@Base+0xc>
  40539c:	mov    QWORD PTR [rip+0x12dd9],0x0        # 418180 <__bss_start@@Base+0x24>
  4053a7:	mov    QWORD PTR [rip+0x12dc6],0x0        # 418178 <__bss_start@@Base+0x1c>
  4053b2:	mov    QWORD PTR [rip+0x12dd3],0x0        # 418190 <__bss_start@@Base+0x34>
  4053bd:	mov    QWORD PTR [rip+0x12dc0],0x0        # 418188 <__bss_start@@Base+0x2c>
  4053c8:	mov    QWORD PTR [rip+0x12dcd],0x0        # 4181a0 <__bss_start@@Base+0x44>
  4053d3:	mov    QWORD PTR [rip+0x12dba],0x0        # 418198 <__bss_start@@Base+0x3c>
  4053de:	mov    QWORD PTR [rip+0x12dc7],0x0        # 4181b0 <__bss_start@@Base+0x54>
  4053e9:	mov    QWORD PTR [rip+0x12db4],0x0        # 4181a8 <__bss_start@@Base+0x4c>
  4053f4:	mov    QWORD PTR [rip+0x12dc1],0x0        # 4181c0 <__bss_start@@Base+0x64>
  4053ff:	mov    QWORD PTR [rip+0x12dae],0x0        # 4181b8 <__bss_start@@Base+0x5c>
  40540a:	mov    QWORD PTR [rip+0x12dbb],0x0        # 4181d0 <__bss_start@@Base+0x74>
  405415:	mov    QWORD PTR [rip+0x12da8],0x0        # 4181c8 <__bss_start@@Base+0x6c>
  405420:	mov    QWORD PTR [rip+0x12db5],0x0        # 4181e0 <__bss_start@@Base+0x84>
  40542b:	mov    QWORD PTR [rip+0x12da2],0x0        # 4181d8 <__bss_start@@Base+0x7c>
  405436:	mov    QWORD PTR [rip+0x12daf],0x0        # 4181f0 <__bss_start@@Base+0x94>
  405441:	mov    QWORD PTR [rip+0x12d9c],0x0        # 4181e8 <__bss_start@@Base+0x8c>
  40544c:	mov    QWORD PTR [rip+0x12da9],0x0        # 418200 <__bss_start@@Base+0xa4>
  405457:	mov    QWORD PTR [rip+0x12d96],0x0        # 4181f8 <__bss_start@@Base+0x9c>
  405462:	mov    QWORD PTR [rip+0x12da3],0x0        # 418210 <__bss_start@@Base+0xb4>
  40546d:	mov    QWORD PTR [rip+0x12d90],0x0        # 418208 <__bss_start@@Base+0xac>
  405478:	mov    QWORD PTR [rip+0x12d9d],0x0        # 418220 <__bss_start@@Base+0xc4>
  405483:	mov    QWORD PTR [rip+0x12d8a],0x0        # 418218 <__bss_start@@Base+0xbc>
  40548e:	mov    QWORD PTR [rip+0x12d97],0x0        # 418230 <__bss_start@@Base+0xd4>
  405499:	mov    QWORD PTR [rip+0x12d84],0x0        # 418228 <__bss_start@@Base+0xcc>
  4054a4:	mov    QWORD PTR [rip+0x12d91],0x0        # 418240 <__bss_start@@Base+0xe4>
  4054af:	mov    QWORD PTR [rip+0x12d7e],0x0        # 418238 <__bss_start@@Base+0xdc>
  4054ba:	mov    QWORD PTR [rip+0x12d8b],0x0        # 418250 <__bss_start@@Base+0xf4>
  4054c5:	mov    QWORD PTR [rip+0x12d78],0x0        # 418248 <__bss_start@@Base+0xec>
  4054d0:	mov    QWORD PTR [rip+0x12d85],0x0        # 418260 <__bss_start@@Base+0x104>
  4054db:	mov    QWORD PTR [rip+0x12d72],0x0        # 418258 <__bss_start@@Base+0xfc>
  4054e6:	mov    QWORD PTR [rip+0x12d7f],0x0        # 418270 <__bss_start@@Base+0x114>
  4054f1:	mov    QWORD PTR [rip+0x12d6c],0x0        # 418268 <__bss_start@@Base+0x10c>
  4054fc:	mov    QWORD PTR [rip+0x12d79],0x0        # 418280 <__bss_start@@Base+0x124>
  405507:	mov    QWORD PTR [rip+0x12d66],0x0        # 418278 <__bss_start@@Base+0x11c>
  405512:	mov    QWORD PTR [rip+0x12d73],0x0        # 418290 <__bss_start@@Base+0x134>
  40551d:	mov    QWORD PTR [rip+0x12d60],0x0        # 418288 <__bss_start@@Base+0x12c>
  405528:	mov    QWORD PTR [rip+0x12d6d],0x0        # 4182a0 <__bss_start@@Base+0x144>
  405533:	mov    QWORD PTR [rip+0x12d5a],0x0        # 418298 <__bss_start@@Base+0x13c>
  40553e:	mov    QWORD PTR [rip+0x12d67],0x0        # 4182b0 <__bss_start@@Base+0x154>
  405549:	mov    QWORD PTR [rip+0x12d54],0x0        # 4182a8 <__bss_start@@Base+0x14c>
  405554:	mov    QWORD PTR [rip+0x12d61],0x0        # 4182c0 <__bss_start@@Base+0x164>
  40555f:	mov    QWORD PTR [rip+0x12d4e],0x0        # 4182b8 <__bss_start@@Base+0x15c>
  40556a:	mov    QWORD PTR [rip+0x12d5b],0x0        # 4182d0 <__bss_start@@Base+0x174>
  405575:	mov    QWORD PTR [rip+0x12d48],0x0        # 4182c8 <__bss_start@@Base+0x16c>
  405580:	mov    QWORD PTR [rip+0x12d55],0x0        # 4182e0 <__bss_start@@Base+0x184>
  40558b:	mov    QWORD PTR [rip+0x12d42],0x0        # 4182d8 <__bss_start@@Base+0x17c>
  405596:	mov    QWORD PTR [rip+0x12d4f],0x0        # 4182f0 <__bss_start@@Base+0x194>
  4055a1:	mov    QWORD PTR [rip+0x12d3c],0x0        # 4182e8 <__bss_start@@Base+0x18c>
  4055ac:	mov    QWORD PTR [rip+0x12d49],0x0        # 418300 <__bss_start@@Base+0x1a4>
  4055b7:	mov    QWORD PTR [rip+0x12d36],0x0        # 4182f8 <__bss_start@@Base+0x19c>
  4055c2:	mov    QWORD PTR [rip+0x12d43],0x0        # 418310 <__bss_start@@Base+0x1b4>
  4055cd:	mov    QWORD PTR [rip+0x12d30],0x0        # 418308 <__bss_start@@Base+0x1ac>
  4055d8:	mov    QWORD PTR [rip+0x12d3d],0x0        # 418320 <__bss_start@@Base+0x1c4>
  4055e3:	mov    QWORD PTR [rip+0x12d2a],0x0        # 418318 <__bss_start@@Base+0x1bc>
  4055ee:	pop    rax
  4055ef:	ret    
  4055f0:	push   rax
  4055f1:	lea    rdi,[rip+0xfffffffffffffc88]        # 405280 <main@@Base+0x2e0>
  4055f8:	lea    rsi,[rip+0xfffffffffffffd81]        # 405380 <main@@Base+0x3e0>
  4055ff:	call   410f30 <__gcov_flush@@Base+0xa0>
  405604:	pop    rax
  405605:	ret    
  405606:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405610 <UnityPrint@@Base>:
  405610:	push   rbp
  405611:	mov    rbp,rsp
  405614:	sub    rsp,0x30
  405618:	mov    rax,QWORD PTR [rip+0x12d11]        # 418330 <__bss_start@@Base+0x1d4>
  40561f:	add    rax,0x1
  405623:	mov    QWORD PTR [rip+0x12d06],rax        # 418330 <__bss_start@@Base+0x1d4>
  40562a:	mov    QWORD PTR [rbp-0x18],rdi
  40562e:	mov    eax,0x2
  405633:	mov    ecx,eax
  405635:	mov    eax,0x1
  40563a:	mov    edx,eax
  40563c:	mov    rsi,QWORD PTR [rbp-0x18]
  405640:	mov    QWORD PTR [rbp-0x8],rsi
  405644:	mov    rdi,QWORD PTR [rbp-0x8]
  405648:	mov    QWORD PTR [rbp-0x10],rdi
  40564c:	mov    rdi,QWORD PTR [rbp-0x10]
  405650:	cmp    rdi,0x0
  405654:	setne  r8b
  405658:	cmp    rdi,0x0
  40565c:	cmovne rcx,rdx
  405660:	lea    rdx,[rip+0x12cc9]        # 418330 <__bss_start@@Base+0x1d4>
  405667:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40566b:	add    rdi,0x1
  40566f:	mov    QWORD PTR [rdx+rcx*8],rdi
  405673:	test   r8b,0x1
  405677:	jne    405682 <UnityPrint@@Base+0x72>
  40567d:	jmp    405901 <UnityPrint@@Base+0x2f1>
  405682:	mov    rax,QWORD PTR [rip+0x12cbf]        # 418348 <__bss_start@@Base+0x1ec>
  405689:	add    rax,0x1
  40568d:	mov    QWORD PTR [rip+0x12cb4],rax        # 418348 <__bss_start@@Base+0x1ec>
  405694:	mov    eax,0x5
  405699:	mov    ecx,eax
  40569b:	mov    eax,0x4
  4056a0:	mov    edx,eax
  4056a2:	mov    rsi,QWORD PTR [rbp-0x10]
  4056a6:	mov    dil,BYTE PTR [rsi]
  4056a9:	cmp    dil,0x0
  4056ad:	setne  r8b
  4056b1:	cmp    dil,0x0
  4056b5:	cmovne rcx,rdx
  4056b9:	lea    rdx,[rip+0x12c70]        # 418330 <__bss_start@@Base+0x1d4>
  4056c0:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4056c4:	add    rsi,0x1
  4056c8:	mov    QWORD PTR [rdx+rcx*8],rsi
  4056cc:	test   r8b,0x1
  4056d0:	jne    4056db <UnityPrint@@Base+0xcb>
  4056d6:	jmp    4058ef <UnityPrint@@Base+0x2df>
  4056db:	mov    eax,0x7
  4056e0:	mov    ecx,eax
  4056e2:	mov    eax,0x6
  4056e7:	mov    edx,eax
  4056e9:	mov    rsi,QWORD PTR [rbp-0x10]
  4056ed:	movsx  eax,BYTE PTR [rsi]
  4056f0:	cmp    eax,0x7e
  4056f3:	setle  dil
  4056f7:	cmp    eax,0x7e
  4056fa:	cmovle rcx,rdx
  4056fe:	lea    rdx,[rip+0x12c2b]        # 418330 <__bss_start@@Base+0x1d4>
  405705:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405709:	add    rsi,0x1
  40570d:	mov    QWORD PTR [rdx+rcx*8],rsi
  405711:	test   dil,0x1
  405715:	jne    405720 <UnityPrint@@Base+0x110>
  40571b:	jmp    40578b <UnityPrint@@Base+0x17b>
  405720:	mov    eax,0x9
  405725:	mov    ecx,eax
  405727:	mov    eax,0x8
  40572c:	mov    edx,eax
  40572e:	mov    rsi,QWORD PTR [rbp-0x10]
  405732:	movsx  eax,BYTE PTR [rsi]
  405735:	cmp    eax,0x20
  405738:	setge  dil
  40573c:	cmp    eax,0x20
  40573f:	cmovge rcx,rdx
  405743:	lea    rdx,[rip+0x12be6]        # 418330 <__bss_start@@Base+0x1d4>
  40574a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40574e:	add    rsi,0x1
  405752:	mov    QWORD PTR [rdx+rcx*8],rsi
  405756:	test   dil,0x1
  40575a:	jne    405765 <UnityPrint@@Base+0x155>
  405760:	jmp    40578b <UnityPrint@@Base+0x17b>
  405765:	mov    rax,QWORD PTR [rip+0x12c14]        # 418380 <__bss_start@@Base+0x224>
  40576c:	add    rax,0x1
  405770:	mov    QWORD PTR [rip+0x12c09],rax        # 418380 <__bss_start@@Base+0x224>
  405777:	mov    rax,QWORD PTR [rbp-0x10]
  40577b:	movsx  edi,BYTE PTR [rax]
  40577e:	call   403050 <putchar@plt>
  405783:	mov    DWORD PTR [rbp-0x1c],eax
  405786:	jmp    4058cc <UnityPrint@@Base+0x2bc>
  40578b:	mov    eax,0xc
  405790:	mov    ecx,eax
  405792:	mov    eax,0xb
  405797:	mov    edx,eax
  405799:	mov    rsi,QWORD PTR [rbp-0x10]
  40579d:	movsx  eax,BYTE PTR [rsi]
  4057a0:	cmp    eax,0xd
  4057a3:	sete   dil
  4057a7:	cmp    eax,0xd
  4057aa:	cmove  rcx,rdx
  4057ae:	lea    rdx,[rip+0x12b7b]        # 418330 <__bss_start@@Base+0x1d4>
  4057b5:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4057b9:	add    rsi,0x1
  4057bd:	mov    QWORD PTR [rdx+rcx*8],rsi
  4057c1:	test   dil,0x1
  4057c5:	jne    4057d0 <UnityPrint@@Base+0x1c0>
  4057cb:	jmp    405801 <UnityPrint@@Base+0x1f1>
  4057d0:	mov    rax,QWORD PTR [rip+0x12bc1]        # 418398 <__bss_start@@Base+0x23c>
  4057d7:	add    rax,0x1
  4057db:	mov    QWORD PTR [rip+0x12bb6],rax        # 418398 <__bss_start@@Base+0x23c>
  4057e2:	mov    edi,0x5c
  4057e7:	call   403050 <putchar@plt>
  4057ec:	mov    edi,0x72
  4057f1:	mov    DWORD PTR [rbp-0x20],eax
  4057f4:	call   403050 <putchar@plt>
  4057f9:	mov    DWORD PTR [rbp-0x24],eax
  4057fc:	jmp    4058ba <UnityPrint@@Base+0x2aa>
  405801:	mov    eax,0xf
  405806:	mov    ecx,eax
  405808:	mov    eax,0xe
  40580d:	mov    edx,eax
  40580f:	mov    rsi,QWORD PTR [rbp-0x10]
  405813:	movsx  eax,BYTE PTR [rsi]
  405816:	cmp    eax,0xa
  405819:	sete   dil
  40581d:	cmp    eax,0xa
  405820:	cmove  rcx,rdx
  405824:	lea    rdx,[rip+0x12b05]        # 418330 <__bss_start@@Base+0x1d4>
  40582b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40582f:	add    rsi,0x1
  405833:	mov    QWORD PTR [rdx+rcx*8],rsi
  405837:	test   dil,0x1
  40583b:	jne    405846 <UnityPrint@@Base+0x236>
  405841:	jmp    405877 <UnityPrint@@Base+0x267>
  405846:	mov    rax,QWORD PTR [rip+0x12b63]        # 4183b0 <__bss_start@@Base+0x254>
  40584d:	add    rax,0x1
  405851:	mov    QWORD PTR [rip+0x12b58],rax        # 4183b0 <__bss_start@@Base+0x254>
  405858:	mov    edi,0x5c
  40585d:	call   403050 <putchar@plt>
  405862:	mov    edi,0x6e
  405867:	mov    DWORD PTR [rbp-0x28],eax
  40586a:	call   403050 <putchar@plt>
  40586f:	mov    DWORD PTR [rbp-0x2c],eax
  405872:	jmp    4058a8 <UnityPrint@@Base+0x298>
  405877:	mov    rax,QWORD PTR [rip+0x12b3a]        # 4183b8 <__bss_start@@Base+0x25c>
  40587e:	add    rax,0x1
  405882:	mov    QWORD PTR [rip+0x12b2f],rax        # 4183b8 <__bss_start@@Base+0x25c>
  405889:	mov    edi,0x5c
  40588e:	call   403050 <putchar@plt>
  405893:	mov    rcx,QWORD PTR [rbp-0x10]
  405897:	movsx  rdi,BYTE PTR [rcx]
  40589b:	mov    esi,0x2
  4058a0:	mov    DWORD PTR [rbp-0x30],eax
  4058a3:	call   405920 <UnityPrintNumberHex@@Base>
  4058a8:	mov    rax,QWORD PTR [rip+0x12b11]        # 4183c0 <__bss_start@@Base+0x264>
  4058af:	add    rax,0x1
  4058b3:	mov    QWORD PTR [rip+0x12b06],rax        # 4183c0 <__bss_start@@Base+0x264>
  4058ba:	mov    rax,QWORD PTR [rip+0x12b07]        # 4183c8 <__bss_start@@Base+0x26c>
  4058c1:	add    rax,0x1
  4058c5:	mov    QWORD PTR [rip+0x12afc],rax        # 4183c8 <__bss_start@@Base+0x26c>
  4058cc:	mov    rax,QWORD PTR [rip+0x12afd]        # 4183d0 <__bss_start@@Base+0x274>
  4058d3:	add    rax,0x1
  4058d7:	mov    QWORD PTR [rip+0x12af2],rax        # 4183d0 <__bss_start@@Base+0x274>
  4058de:	mov    rax,QWORD PTR [rbp-0x10]
  4058e2:	add    rax,0x1
  4058e6:	mov    QWORD PTR [rbp-0x10],rax
  4058ea:	jmp    405694 <UnityPrint@@Base+0x84>
  4058ef:	mov    rax,QWORD PTR [rip+0x12ae2]        # 4183d8 <__bss_start@@Base+0x27c>
  4058f6:	add    rax,0x1
  4058fa:	mov    QWORD PTR [rip+0x12ad7],rax        # 4183d8 <__bss_start@@Base+0x27c>
  405901:	mov    rax,QWORD PTR [rip+0x12ad8]        # 4183e0 <__bss_start@@Base+0x284>
  405908:	add    rax,0x1
  40590c:	mov    QWORD PTR [rip+0x12acd],rax        # 4183e0 <__bss_start@@Base+0x284>
  405913:	add    rsp,0x30
  405917:	pop    rbp
  405918:	ret    
  405919:	nop    DWORD PTR [rax+0x0]

0000000000405920 <UnityPrintNumberHex@@Base>:
  405920:	push   rbp
  405921:	mov    rbp,rsp
  405924:	sub    rsp,0x40
  405928:	mov    al,sil
  40592b:	mov    rcx,QWORD PTR [rip+0x12abe]        # 4183f0 <__bss_start@@Base+0x294>
  405932:	add    rcx,0x1
  405936:	mov    QWORD PTR [rip+0x12ab3],rcx        # 4183f0 <__bss_start@@Base+0x294>
  40593d:	mov    BYTE PTR [rbp-0x1a],al
  405940:	mov    QWORD PTR [rbp-0x28],rdi
  405944:	mov    rax,QWORD PTR [rip+0x12aad]        # 4183f8 <__bss_start@@Base+0x29c>
  40594b:	add    rax,0x1
  40594f:	mov    QWORD PTR [rip+0x12aa2],rax        # 4183f8 <__bss_start@@Base+0x29c>
  405956:	mov    rax,QWORD PTR [rbp-0x28]
  40595a:	mov    QWORD PTR [rbp-0x8],rax
  40595e:	mov    cl,BYTE PTR [rbp-0x1a]
  405961:	mov    BYTE PTR [rbp-0x9],cl
  405964:	mov    dl,BYTE PTR [rbp-0x9]
  405967:	mov    BYTE PTR [rbp-0x19],dl
  40596a:	mov    edi,0x30
  40596f:	call   403050 <putchar@plt>
  405974:	mov    edi,0x78
  405979:	mov    DWORD PTR [rbp-0x2c],eax
  40597c:	call   403050 <putchar@plt>
  405981:	mov    DWORD PTR [rbp-0x30],eax
  405984:	mov    eax,0x3
  405989:	mov    ecx,eax
  40598b:	mov    eax,0x2
  405990:	mov    edx,eax
  405992:	movsx  eax,BYTE PTR [rbp-0x19]
  405996:	cmp    eax,0x0
  405999:	setg   sil
  40599d:	cmp    eax,0x0
  4059a0:	cmovg  rcx,rdx
  4059a4:	lea    rdx,[rip+0x12a45]        # 4183f0 <__bss_start@@Base+0x294>
  4059ab:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4059af:	add    rdi,0x1
  4059b3:	mov    QWORD PTR [rdx+rcx*8],rdi
  4059b7:	test   sil,0x1
  4059bb:	jne    4059c6 <UnityPrintNumberHex@@Base+0xa6>
  4059c1:	jmp    405aa4 <UnityPrintNumberHex@@Base+0x184>
  4059c6:	mov    eax,0x5
  4059cb:	mov    ecx,eax
  4059cd:	mov    eax,0x4
  4059d2:	mov    edx,eax
  4059d4:	mov    rsi,QWORD PTR [rbp-0x8]
  4059d8:	mov    dil,BYTE PTR [rbp-0x19]
  4059dc:	add    dil,0xff
  4059e0:	mov    BYTE PTR [rbp-0x19],dil
  4059e4:	movsx  eax,dil
  4059e8:	shl    eax,0x2
  4059eb:	mov    eax,eax
  4059ed:	mov    r8d,eax
  4059f0:	mov    QWORD PTR [rbp-0x38],rcx
  4059f4:	mov    rcx,r8
  4059f7:	shr    rsi,cl
  4059fa:	and    rsi,0xf
  4059fe:	mov    QWORD PTR [rbp-0x18],rsi
  405a02:	mov    rsi,QWORD PTR [rbp-0x18]
  405a06:	cmp    rsi,0x9
  405a0a:	setbe  cl
  405a0d:	cmp    rsi,0x9
  405a11:	mov    rsi,QWORD PTR [rbp-0x38]
  405a15:	cmovbe rsi,rdx
  405a19:	lea    rdx,[rip+0x129d0]        # 4183f0 <__bss_start@@Base+0x294>
  405a20:	mov    r8,QWORD PTR [rdx+rsi*8]
  405a24:	add    r8,0x1
  405a28:	mov    QWORD PTR [rdx+rsi*8],r8
  405a2c:	test   cl,0x1
  405a2f:	jne    405a3a <UnityPrintNumberHex@@Base+0x11a>
  405a35:	jmp    405a66 <UnityPrintNumberHex@@Base+0x146>
  405a3a:	mov    rax,QWORD PTR [rip+0x129df]        # 418420 <__bss_start@@Base+0x2c4>
  405a41:	add    rax,0x1
  405a45:	mov    QWORD PTR [rip+0x129d4],rax        # 418420 <__bss_start@@Base+0x2c4>
  405a4c:	mov    rax,QWORD PTR [rbp-0x18]
  405a50:	add    rax,0x30
  405a54:	mov    cl,al
  405a56:	movsx  edi,cl
  405a59:	call   403050 <putchar@plt>
  405a5e:	mov    DWORD PTR [rbp-0x3c],eax
  405a61:	jmp    405a8d <UnityPrintNumberHex@@Base+0x16d>
  405a66:	mov    rax,QWORD PTR [rip+0x129bb]        # 418428 <__bss_start@@Base+0x2cc>
  405a6d:	add    rax,0x1
  405a71:	mov    QWORD PTR [rip+0x129b0],rax        # 418428 <__bss_start@@Base+0x2cc>
  405a78:	mov    rax,QWORD PTR [rbp-0x18]
  405a7c:	add    rax,0x37
  405a80:	mov    cl,al
  405a82:	movsx  edi,cl
  405a85:	call   403050 <putchar@plt>
  405a8a:	mov    DWORD PTR [rbp-0x40],eax
  405a8d:	mov    rax,QWORD PTR [rip+0x1299c]        # 418430 <__bss_start@@Base+0x2d4>
  405a94:	add    rax,0x1
  405a98:	mov    QWORD PTR [rip+0x12991],rax        # 418430 <__bss_start@@Base+0x2d4>
  405a9f:	jmp    405984 <UnityPrintNumberHex@@Base+0x64>
  405aa4:	mov    rax,QWORD PTR [rip+0x1298d]        # 418438 <__bss_start@@Base+0x2dc>
  405aab:	add    rax,0x1
  405aaf:	mov    QWORD PTR [rip+0x12982],rax        # 418438 <__bss_start@@Base+0x2dc>
  405ab6:	add    rsp,0x40
  405aba:	pop    rbp
  405abb:	ret    
  405abc:	nop    DWORD PTR [rax+0x0]

0000000000405ac0 <UnityPrintLen@@Base>:
  405ac0:	push   rbp
  405ac1:	mov    rbp,rsp
  405ac4:	sub    rsp,0x40
  405ac8:	mov    rax,QWORD PTR [rip+0x12971]        # 418440 <__bss_start@@Base+0x2e4>
  405acf:	add    rax,0x1
  405ad3:	mov    QWORD PTR [rip+0x12966],rax        # 418440 <__bss_start@@Base+0x2e4>
  405ada:	mov    QWORD PTR [rbp-0x20],rdi
  405ade:	mov    DWORD PTR [rbp-0x24],esi
  405ae1:	mov    eax,0x2
  405ae6:	mov    ecx,eax
  405ae8:	mov    eax,0x1
  405aed:	mov    edx,eax
  405aef:	mov    rsi,QWORD PTR [rbp-0x20]
  405af3:	mov    QWORD PTR [rbp-0x8],rsi
  405af7:	mov    eax,DWORD PTR [rbp-0x24]
  405afa:	mov    DWORD PTR [rbp-0xc],eax
  405afd:	mov    rdi,QWORD PTR [rbp-0x8]
  405b01:	mov    QWORD PTR [rbp-0x18],rdi
  405b05:	mov    rdi,QWORD PTR [rbp-0x18]
  405b09:	cmp    rdi,0x0
  405b0d:	setne  r8b
  405b11:	cmp    rdi,0x0
  405b15:	cmovne rcx,rdx
  405b19:	lea    rdx,[rip+0x12920]        # 418440 <__bss_start@@Base+0x2e4>
  405b20:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405b24:	add    rdi,0x1
  405b28:	mov    QWORD PTR [rdx+rcx*8],rdi
  405b2c:	test   r8b,0x1
  405b30:	jne    405b3b <UnityPrintLen@@Base+0x7b>
  405b36:	jmp    405e20 <UnityPrintLen@@Base+0x360>
  405b3b:	mov    rax,QWORD PTR [rip+0x12916]        # 418458 <__bss_start@@Base+0x2fc>
  405b42:	add    rax,0x1
  405b46:	mov    QWORD PTR [rip+0x1290b],rax        # 418458 <__bss_start@@Base+0x2fc>
  405b4d:	xor    eax,eax
  405b4f:	mov    cl,al
  405b51:	mov    eax,0x5
  405b56:	mov    edx,eax
  405b58:	mov    eax,0x4
  405b5d:	mov    esi,eax
  405b5f:	mov    rdi,QWORD PTR [rbp-0x18]
  405b63:	movsx  eax,BYTE PTR [rdi]
  405b66:	cmp    eax,0x0
  405b69:	setne  r8b
  405b6d:	cmp    eax,0x0
  405b70:	cmovne rdx,rsi
  405b74:	lea    rsi,[rip+0x128c5]        # 418440 <__bss_start@@Base+0x2e4>
  405b7b:	mov    rdi,QWORD PTR [rsi+rdx*8]
  405b7f:	add    rdi,0x1
  405b83:	mov    QWORD PTR [rsi+rdx*8],rdi
  405b87:	test   r8b,0x1
  405b8b:	mov    BYTE PTR [rbp-0x25],cl
  405b8e:	jne    405b99 <UnityPrintLen@@Base+0xd9>
  405b94:	jmp    405bc3 <UnityPrintLen@@Base+0x103>
  405b99:	mov    rax,QWORD PTR [rip+0x128d0]        # 418470 <__bss_start@@Base+0x314>
  405ba0:	add    rax,0x1
  405ba4:	mov    QWORD PTR [rip+0x128c5],rax        # 418470 <__bss_start@@Base+0x314>
  405bab:	mov    rax,QWORD PTR [rbp-0x18]
  405baf:	mov    rcx,QWORD PTR [rbp-0x8]
  405bb3:	sub    rax,rcx
  405bb6:	mov    edx,eax
  405bb8:	cmp    edx,DWORD PTR [rbp-0xc]
  405bbb:	setb   sil
  405bbf:	mov    BYTE PTR [rbp-0x25],sil
  405bc3:	mov    al,BYTE PTR [rbp-0x25]
  405bc6:	mov    ecx,0x8
  405bcb:	mov    edx,ecx
  405bcd:	mov    ecx,0x7
  405bd2:	mov    esi,ecx
  405bd4:	test   al,0x1
  405bd6:	cmovne rdx,rsi
  405bda:	lea    rsi,[rip+0x1285f]        # 418440 <__bss_start@@Base+0x2e4>
  405be1:	mov    rdi,QWORD PTR [rsi+rdx*8]
  405be5:	add    rdi,0x1
  405be9:	mov    QWORD PTR [rsi+rdx*8],rdi
  405bed:	test   al,0x1
  405bef:	jne    405bfa <UnityPrintLen@@Base+0x13a>
  405bf5:	jmp    405e0e <UnityPrintLen@@Base+0x34e>
  405bfa:	mov    eax,0xa
  405bff:	mov    ecx,eax
  405c01:	mov    eax,0x9
  405c06:	mov    edx,eax
  405c08:	mov    rsi,QWORD PTR [rbp-0x18]
  405c0c:	movsx  eax,BYTE PTR [rsi]
  405c0f:	cmp    eax,0x7e
  405c12:	setle  dil
  405c16:	cmp    eax,0x7e
  405c19:	cmovle rcx,rdx
  405c1d:	lea    rdx,[rip+0x1281c]        # 418440 <__bss_start@@Base+0x2e4>
  405c24:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405c28:	add    rsi,0x1
  405c2c:	mov    QWORD PTR [rdx+rcx*8],rsi
  405c30:	test   dil,0x1
  405c34:	jne    405c3f <UnityPrintLen@@Base+0x17f>
  405c3a:	jmp    405caa <UnityPrintLen@@Base+0x1ea>
  405c3f:	mov    eax,0xc
  405c44:	mov    ecx,eax
  405c46:	mov    eax,0xb
  405c4b:	mov    edx,eax
  405c4d:	mov    rsi,QWORD PTR [rbp-0x18]
  405c51:	movsx  eax,BYTE PTR [rsi]
  405c54:	cmp    eax,0x20
  405c57:	setge  dil
  405c5b:	cmp    eax,0x20
  405c5e:	cmovge rcx,rdx
  405c62:	lea    rdx,[rip+0x127d7]        # 418440 <__bss_start@@Base+0x2e4>
  405c69:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405c6d:	add    rsi,0x1
  405c71:	mov    QWORD PTR [rdx+rcx*8],rsi
  405c75:	test   dil,0x1
  405c79:	jne    405c84 <UnityPrintLen@@Base+0x1c4>
  405c7f:	jmp    405caa <UnityPrintLen@@Base+0x1ea>
  405c84:	mov    rax,QWORD PTR [rip+0x1281d]        # 4184a8 <__bss_start@@Base+0x34c>
  405c8b:	add    rax,0x1
  405c8f:	mov    QWORD PTR [rip+0x12812],rax        # 4184a8 <__bss_start@@Base+0x34c>
  405c96:	mov    rax,QWORD PTR [rbp-0x18]
  405c9a:	movsx  edi,BYTE PTR [rax]
  405c9d:	call   403050 <putchar@plt>
  405ca2:	mov    DWORD PTR [rbp-0x2c],eax
  405ca5:	jmp    405deb <UnityPrintLen@@Base+0x32b>
  405caa:	mov    eax,0xf
  405caf:	mov    ecx,eax
  405cb1:	mov    eax,0xe
  405cb6:	mov    edx,eax
  405cb8:	mov    rsi,QWORD PTR [rbp-0x18]
  405cbc:	movsx  eax,BYTE PTR [rsi]
  405cbf:	cmp    eax,0xd
  405cc2:	sete   dil
  405cc6:	cmp    eax,0xd
  405cc9:	cmove  rcx,rdx
  405ccd:	lea    rdx,[rip+0x1276c]        # 418440 <__bss_start@@Base+0x2e4>
  405cd4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405cd8:	add    rsi,0x1
  405cdc:	mov    QWORD PTR [rdx+rcx*8],rsi
  405ce0:	test   dil,0x1
  405ce4:	jne    405cef <UnityPrintLen@@Base+0x22f>
  405cea:	jmp    405d20 <UnityPrintLen@@Base+0x260>
  405cef:	mov    rax,QWORD PTR [rip+0x127ca]        # 4184c0 <__bss_start@@Base+0x364>
  405cf6:	add    rax,0x1
  405cfa:	mov    QWORD PTR [rip+0x127bf],rax        # 4184c0 <__bss_start@@Base+0x364>
  405d01:	mov    edi,0x5c
  405d06:	call   403050 <putchar@plt>
  405d0b:	mov    edi,0x72
  405d10:	mov    DWORD PTR [rbp-0x30],eax
  405d13:	call   403050 <putchar@plt>
  405d18:	mov    DWORD PTR [rbp-0x34],eax
  405d1b:	jmp    405dd9 <UnityPrintLen@@Base+0x319>
  405d20:	mov    eax,0x12
  405d25:	mov    ecx,eax
  405d27:	mov    eax,0x11
  405d2c:	mov    edx,eax
  405d2e:	mov    rsi,QWORD PTR [rbp-0x18]
  405d32:	movsx  eax,BYTE PTR [rsi]
  405d35:	cmp    eax,0xa
  405d38:	sete   dil
  405d3c:	cmp    eax,0xa
  405d3f:	cmove  rcx,rdx
  405d43:	lea    rdx,[rip+0x126f6]        # 418440 <__bss_start@@Base+0x2e4>
  405d4a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405d4e:	add    rsi,0x1
  405d52:	mov    QWORD PTR [rdx+rcx*8],rsi
  405d56:	test   dil,0x1
  405d5a:	jne    405d65 <UnityPrintLen@@Base+0x2a5>
  405d60:	jmp    405d96 <UnityPrintLen@@Base+0x2d6>
  405d65:	mov    rax,QWORD PTR [rip+0x1276c]        # 4184d8 <__bss_start@@Base+0x37c>
  405d6c:	add    rax,0x1
  405d70:	mov    QWORD PTR [rip+0x12761],rax        # 4184d8 <__bss_start@@Base+0x37c>
  405d77:	mov    edi,0x5c
  405d7c:	call   403050 <putchar@plt>
  405d81:	mov    edi,0x6e
  405d86:	mov    DWORD PTR [rbp-0x38],eax
  405d89:	call   403050 <putchar@plt>
  405d8e:	mov    DWORD PTR [rbp-0x3c],eax
  405d91:	jmp    405dc7 <UnityPrintLen@@Base+0x307>
  405d96:	mov    rax,QWORD PTR [rip+0x12743]        # 4184e0 <__bss_start@@Base+0x384>
  405d9d:	add    rax,0x1
  405da1:	mov    QWORD PTR [rip+0x12738],rax        # 4184e0 <__bss_start@@Base+0x384>
  405da8:	mov    edi,0x5c
  405dad:	call   403050 <putchar@plt>
  405db2:	mov    rcx,QWORD PTR [rbp-0x18]
  405db6:	movsx  rdi,BYTE PTR [rcx]
  405dba:	mov    esi,0x2
  405dbf:	mov    DWORD PTR [rbp-0x40],eax
  405dc2:	call   405920 <UnityPrintNumberHex@@Base>
  405dc7:	mov    rax,QWORD PTR [rip+0x1271a]        # 4184e8 <__bss_start@@Base+0x38c>
  405dce:	add    rax,0x1
  405dd2:	mov    QWORD PTR [rip+0x1270f],rax        # 4184e8 <__bss_start@@Base+0x38c>
  405dd9:	mov    rax,QWORD PTR [rip+0x12710]        # 4184f0 <__bss_start@@Base+0x394>
  405de0:	add    rax,0x1
  405de4:	mov    QWORD PTR [rip+0x12705],rax        # 4184f0 <__bss_start@@Base+0x394>
  405deb:	mov    rax,QWORD PTR [rip+0x12706]        # 4184f8 <__bss_start@@Base+0x39c>
  405df2:	add    rax,0x1
  405df6:	mov    QWORD PTR [rip+0x126fb],rax        # 4184f8 <__bss_start@@Base+0x39c>
  405dfd:	mov    rax,QWORD PTR [rbp-0x18]
  405e01:	add    rax,0x1
  405e05:	mov    QWORD PTR [rbp-0x18],rax
  405e09:	jmp    405b4d <UnityPrintLen@@Base+0x8d>
  405e0e:	mov    rax,QWORD PTR [rip+0x126eb]        # 418500 <__bss_start@@Base+0x3a4>
  405e15:	add    rax,0x1
  405e19:	mov    QWORD PTR [rip+0x126e0],rax        # 418500 <__bss_start@@Base+0x3a4>
  405e20:	mov    rax,QWORD PTR [rip+0x126e1]        # 418508 <__bss_start@@Base+0x3ac>
  405e27:	add    rax,0x1
  405e2b:	mov    QWORD PTR [rip+0x126d6],rax        # 418508 <__bss_start@@Base+0x3ac>
  405e32:	add    rsp,0x40
  405e36:	pop    rbp
  405e37:	ret    
  405e38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e40 <UnityPrintNumberByStyle@@Base>:
  405e40:	push   rbp
  405e41:	mov    rbp,rsp
  405e44:	sub    rsp,0x20
  405e48:	mov    rax,QWORD PTR [rip+0x126c1]        # 418510 <__bss_start@@Base+0x3b4>
  405e4f:	add    rax,0x1
  405e53:	mov    QWORD PTR [rip+0x126b6],rax        # 418510 <__bss_start@@Base+0x3b4>
  405e5a:	mov    QWORD PTR [rbp-0x18],rdi
  405e5e:	mov    DWORD PTR [rbp-0x1c],esi
  405e61:	mov    eax,0x2
  405e66:	mov    ecx,eax
  405e68:	mov    eax,0x1
  405e6d:	mov    edx,eax
  405e6f:	mov    rsi,QWORD PTR [rbp-0x18]
  405e73:	mov    QWORD PTR [rbp-0x8],rsi
  405e77:	mov    eax,DWORD PTR [rbp-0x1c]
  405e7a:	mov    DWORD PTR [rbp-0xc],eax
  405e7d:	mov    edi,DWORD PTR [rbp-0xc]
  405e80:	and    edi,0x10
  405e83:	cmp    edi,0x10
  405e86:	sete   r8b
  405e8a:	cmp    edi,0x10
  405e8d:	cmove  rcx,rdx
  405e91:	lea    rdx,[rip+0x12678]        # 418510 <__bss_start@@Base+0x3b4>
  405e98:	mov    r9,QWORD PTR [rdx+rcx*8]
  405e9c:	add    r9,0x1
  405ea0:	mov    QWORD PTR [rdx+rcx*8],r9
  405ea4:	test   r8b,0x1
  405ea8:	jne    405eb3 <UnityPrintNumberByStyle@@Base+0x73>
  405eae:	jmp    405ed3 <UnityPrintNumberByStyle@@Base+0x93>
  405eb3:	mov    rax,QWORD PTR [rip+0x1266e]        # 418528 <__bss_start@@Base+0x3cc>
  405eba:	add    rax,0x1
  405ebe:	mov    QWORD PTR [rip+0x12663],rax        # 418528 <__bss_start@@Base+0x3cc>
  405ec5:	mov    rdi,QWORD PTR [rbp-0x8]
  405ec9:	call   405fb0 <UnityPrintNumber@@Base>
  405ece:	jmp    405f8d <UnityPrintNumberByStyle@@Base+0x14d>
  405ed3:	mov    eax,0x5
  405ed8:	mov    ecx,eax
  405eda:	mov    eax,0x4
  405edf:	mov    edx,eax
  405ee1:	mov    eax,DWORD PTR [rbp-0xc]
  405ee4:	and    eax,0x20
  405ee7:	cmp    eax,0x20
  405eea:	sete   sil
  405eee:	cmp    eax,0x20
  405ef1:	cmove  rcx,rdx
  405ef5:	lea    rdx,[rip+0x12614]        # 418510 <__bss_start@@Base+0x3b4>
  405efc:	mov    rdi,QWORD PTR [rdx+rcx*8]
  405f00:	add    rdi,0x1
  405f04:	mov    QWORD PTR [rdx+rcx*8],rdi
  405f08:	test   sil,0x1
  405f0c:	jne    405f17 <UnityPrintNumberByStyle@@Base+0xd7>
  405f12:	jmp    405f52 <UnityPrintNumberByStyle@@Base+0x112>
  405f17:	lea    rax,[rip+0xc8f2]        # 412810 <UnitySizeMask@@Base>
  405f1e:	mov    rcx,QWORD PTR [rip+0x1261b]        # 418540 <__bss_start@@Base+0x3e4>
  405f25:	add    rcx,0x1
  405f29:	mov    QWORD PTR [rip+0x12610],rcx        # 418540 <__bss_start@@Base+0x3e4>
  405f30:	mov    rcx,QWORD PTR [rbp-0x8]
  405f34:	mov    edx,DWORD PTR [rbp-0xc]
  405f37:	mov    esi,edx
  405f39:	and    rsi,0xf
  405f3d:	sub    rsi,0x1
  405f41:	and    rcx,QWORD PTR [rax+rsi*8]
  405f45:	mov    rdi,rcx
  405f48:	call   406230 <UnityPrintNumberUnsigned@@Base>
  405f4d:	jmp    405f7b <UnityPrintNumberByStyle@@Base+0x13b>
  405f52:	mov    rax,QWORD PTR [rip+0x125ef]        # 418548 <__bss_start@@Base+0x3ec>
  405f59:	add    rax,0x1
  405f5d:	mov    QWORD PTR [rip+0x125e4],rax        # 418548 <__bss_start@@Base+0x3ec>
  405f64:	mov    rdi,QWORD PTR [rbp-0x8]
  405f68:	mov    ecx,DWORD PTR [rbp-0xc]
  405f6b:	and    ecx,0xf
  405f6e:	shl    ecx,0x1
  405f71:	mov    dl,cl
  405f73:	movsx  esi,dl
  405f76:	call   405920 <UnityPrintNumberHex@@Base>
  405f7b:	mov    rax,QWORD PTR [rip+0x125ce]        # 418550 <__bss_start@@Base+0x3f4>
  405f82:	add    rax,0x1
  405f86:	mov    QWORD PTR [rip+0x125c3],rax        # 418550 <__bss_start@@Base+0x3f4>
  405f8d:	mov    rax,QWORD PTR [rip+0x125c4]        # 418558 <__bss_start@@Base+0x3fc>
  405f94:	add    rax,0x1
  405f98:	mov    QWORD PTR [rip+0x125b9],rax        # 418558 <__bss_start@@Base+0x3fc>
  405f9f:	add    rsp,0x20
  405fa3:	pop    rbp
  405fa4:	ret    
  405fa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405faf:	nop

0000000000405fb0 <UnityPrintNumber@@Base>:
  405fb0:	push   rbp
  405fb1:	mov    rbp,rsp
  405fb4:	sub    rsp,0x40
  405fb8:	mov    rax,QWORD PTR [rip+0x125a1]        # 418560 <__bss_start@@Base+0x404>
  405fbf:	add    rax,0x1
  405fc3:	mov    QWORD PTR [rip+0x12596],rax        # 418560 <__bss_start@@Base+0x404>
  405fca:	mov    QWORD PTR [rbp-0x28],rdi
  405fce:	mov    eax,0x2
  405fd3:	mov    ecx,eax
  405fd5:	mov    eax,0x1
  405fda:	mov    edx,eax
  405fdc:	mov    rsi,QWORD PTR [rbp-0x28]
  405fe0:	mov    QWORD PTR [rbp-0x8],rsi
  405fe4:	mov    QWORD PTR [rbp-0x10],0x1
  405fec:	mov    rdi,QWORD PTR [rbp-0x8]
  405ff0:	cmp    rdi,0x0
  405ff4:	setl   r8b
  405ff8:	cmp    rdi,0x0
  405ffc:	cmovl  rcx,rdx
  406000:	lea    rdx,[rip+0x12559]        # 418560 <__bss_start@@Base+0x404>
  406007:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40600b:	add    rdi,0x1
  40600f:	mov    QWORD PTR [rdx+rcx*8],rdi
  406013:	test   r8b,0x1
  406017:	jne    406022 <UnityPrintNumber@@Base+0x72>
  40601d:	jmp    406052 <UnityPrintNumber@@Base+0xa2>
  406022:	mov    rax,QWORD PTR [rip+0x1254f]        # 418578 <__bss_start@@Base+0x41c>
  406029:	add    rax,0x1
  40602d:	mov    QWORD PTR [rip+0x12544],rax        # 418578 <__bss_start@@Base+0x41c>
  406034:	mov    edi,0x2d
  406039:	call   403050 <putchar@plt>
  40603e:	xor    edi,edi
  406040:	mov    ecx,edi
  406042:	sub    rcx,QWORD PTR [rbp-0x8]
  406046:	mov    QWORD PTR [rbp-0x20],rcx
  40604a:	mov    DWORD PTR [rbp-0x2c],eax
  40604d:	jmp    40606c <UnityPrintNumber@@Base+0xbc>
  406052:	mov    rax,QWORD PTR [rip+0x12527]        # 418580 <__bss_start@@Base+0x424>
  406059:	add    rax,0x1
  40605d:	mov    QWORD PTR [rip+0x1251c],rax        # 418580 <__bss_start@@Base+0x424>
  406064:	mov    rax,QWORD PTR [rbp-0x8]
  406068:	mov    QWORD PTR [rbp-0x20],rax
  40606c:	mov    rax,QWORD PTR [rip+0x12515]        # 418588 <__bss_start@@Base+0x42c>
  406073:	add    rax,0x1
  406077:	mov    QWORD PTR [rip+0x1250a],rax        # 418588 <__bss_start@@Base+0x42c>
  40607e:	mov    eax,0x7
  406083:	mov    ecx,eax
  406085:	mov    eax,0x6
  40608a:	mov    edx,eax
  40608c:	mov    rax,QWORD PTR [rbp-0x20]
  406090:	xor    esi,esi
  406092:	mov    QWORD PTR [rbp-0x38],rdx
  406096:	mov    edx,esi
  406098:	div    QWORD PTR [rbp-0x10]
  40609c:	cmp    rax,0x9
  4060a0:	seta   dil
  4060a4:	cmp    rax,0x9
  4060a8:	mov    rax,QWORD PTR [rbp-0x38]
  4060ac:	cmova  rcx,rax
  4060b0:	lea    r8,[rip+0x124a9]        # 418560 <__bss_start@@Base+0x404>
  4060b7:	mov    r9,QWORD PTR [r8+rcx*8]
  4060bb:	add    r9,0x1
  4060bf:	mov    QWORD PTR [r8+rcx*8],r9
  4060c3:	test   dil,0x1
  4060c7:	jne    4060d2 <UnityPrintNumber@@Base+0x122>
  4060cd:	jmp    40616e <UnityPrintNumber@@Base+0x1be>
  4060d2:	mov    eax,0x9
  4060d7:	mov    ecx,eax
  4060d9:	mov    eax,0x8
  4060de:	mov    edx,eax
  4060e0:	imul   rsi,QWORD PTR [rbp-0x10],0xa
  4060e5:	mov    QWORD PTR [rbp-0x18],rsi
  4060e9:	mov    rsi,QWORD PTR [rbp-0x18]
  4060ed:	mov    rdi,QWORD PTR [rbp-0x10]
  4060f1:	cmp    rsi,rdi
  4060f4:	seta   r8b
  4060f8:	cmp    rsi,rdi
  4060fb:	cmova  rcx,rdx
  4060ff:	lea    rdx,[rip+0x1245a]        # 418560 <__bss_start@@Base+0x404>
  406106:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40610a:	add    rsi,0x1
  40610e:	mov    QWORD PTR [rdx+rcx*8],rsi
  406112:	test   r8b,0x1
  406116:	jne    406121 <UnityPrintNumber@@Base+0x171>
  40611c:	jmp    406140 <UnityPrintNumber@@Base+0x190>
  406121:	mov    rax,QWORD PTR [rip+0x12488]        # 4185b0 <__bss_start@@Base+0x454>
  406128:	add    rax,0x1
  40612c:	mov    QWORD PTR [rip+0x1247d],rax        # 4185b0 <__bss_start@@Base+0x454>
  406133:	mov    rax,QWORD PTR [rbp-0x18]
  406137:	mov    QWORD PTR [rbp-0x10],rax
  40613b:	jmp    406157 <UnityPrintNumber@@Base+0x1a7>
  406140:	mov    rax,QWORD PTR [rip+0x12471]        # 4185b8 <__bss_start@@Base+0x45c>
  406147:	add    rax,0x1
  40614b:	mov    QWORD PTR [rip+0x12466],rax        # 4185b8 <__bss_start@@Base+0x45c>
  406152:	jmp    40616e <UnityPrintNumber@@Base+0x1be>
  406157:	mov    rax,QWORD PTR [rip+0x12462]        # 4185c0 <__bss_start@@Base+0x464>
  40615e:	add    rax,0x1
  406162:	mov    QWORD PTR [rip+0x12457],rax        # 4185c0 <__bss_start@@Base+0x464>
  406169:	jmp    40607e <UnityPrintNumber@@Base+0xce>
  40616e:	mov    rax,QWORD PTR [rip+0x12453]        # 4185c8 <__bss_start@@Base+0x46c>
  406175:	add    rax,0x1
  406179:	mov    QWORD PTR [rip+0x12448],rax        # 4185c8 <__bss_start@@Base+0x46c>
  406180:	mov    eax,0xa
  406185:	mov    ecx,eax
  406187:	mov    rdx,QWORD PTR [rip+0x12442]        # 4185d0 <__bss_start@@Base+0x474>
  40618e:	add    rdx,0x1
  406192:	mov    QWORD PTR [rip+0x12437],rdx        # 4185d0 <__bss_start@@Base+0x474>
  406199:	mov    rax,QWORD PTR [rbp-0x20]
  40619d:	xor    esi,esi
  40619f:	mov    edx,esi
  4061a1:	div    QWORD PTR [rbp-0x10]
  4061a5:	xor    esi,esi
  4061a7:	mov    edx,esi
  4061a9:	div    rcx
  4061ac:	add    rdx,0x30
  4061b0:	mov    dil,dl
  4061b3:	movsx  edi,dil
  4061b7:	call   403050 <putchar@plt>
  4061bc:	mov    esi,0xa
  4061c1:	mov    ecx,esi
  4061c3:	mov    rdx,QWORD PTR [rbp-0x10]
  4061c7:	mov    DWORD PTR [rbp-0x3c],eax
  4061ca:	mov    rax,rdx
  4061cd:	xor    esi,esi
  4061cf:	mov    edx,esi
  4061d1:	div    rcx
  4061d4:	mov    QWORD PTR [rbp-0x10],rax
  4061d8:	mov    eax,0x10
  4061dd:	mov    ecx,eax
  4061df:	mov    eax,0xf
  4061e4:	mov    edx,eax
  4061e6:	mov    rsi,QWORD PTR [rbp-0x10]
  4061ea:	cmp    rsi,0x0
  4061ee:	seta   dil
  4061f2:	cmp    rsi,0x0
  4061f6:	cmova  rcx,rdx
  4061fa:	lea    rdx,[rip+0x1235f]        # 418560 <__bss_start@@Base+0x404>
  406201:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406205:	add    rsi,0x1
  406209:	mov    QWORD PTR [rdx+rcx*8],rsi
  40620d:	test   dil,0x1
  406211:	jne    406180 <UnityPrintNumber@@Base+0x1d0>
  406217:	mov    rax,QWORD PTR [rip+0x123ca]        # 4185e8 <__bss_start@@Base+0x48c>
  40621e:	add    rax,0x1
  406222:	mov    QWORD PTR [rip+0x123bf],rax        # 4185e8 <__bss_start@@Base+0x48c>
  406229:	add    rsp,0x40
  40622d:	pop    rbp
  40622e:	ret    
  40622f:	nop

0000000000406230 <UnityPrintNumberUnsigned@@Base>:
  406230:	push   rbp
  406231:	mov    rbp,rsp
  406234:	sub    rsp,0x30
  406238:	mov    rax,QWORD PTR [rip+0x123b1]        # 4185f0 <__bss_start@@Base+0x494>
  40623f:	add    rax,0x1
  406243:	mov    QWORD PTR [rip+0x123a6],rax        # 4185f0 <__bss_start@@Base+0x494>
  40624a:	mov    QWORD PTR [rbp-0x20],rdi
  40624e:	mov    rax,QWORD PTR [rip+0x123a3]        # 4185f8 <__bss_start@@Base+0x49c>
  406255:	add    rax,0x1
  406259:	mov    QWORD PTR [rip+0x12398],rax        # 4185f8 <__bss_start@@Base+0x49c>
  406260:	mov    rax,QWORD PTR [rbp-0x20]
  406264:	mov    QWORD PTR [rbp-0x8],rax
  406268:	mov    QWORD PTR [rbp-0x10],0x1
  406270:	mov    eax,0x3
  406275:	mov    ecx,eax
  406277:	mov    eax,0x2
  40627c:	mov    edx,eax
  40627e:	mov    rax,QWORD PTR [rbp-0x8]
  406282:	xor    esi,esi
  406284:	mov    QWORD PTR [rbp-0x28],rdx
  406288:	mov    edx,esi
  40628a:	div    QWORD PTR [rbp-0x10]
  40628e:	cmp    rax,0x9
  406292:	seta   dil
  406296:	cmp    rax,0x9
  40629a:	mov    rax,QWORD PTR [rbp-0x28]
  40629e:	cmova  rcx,rax
  4062a2:	lea    r8,[rip+0x12347]        # 4185f0 <__bss_start@@Base+0x494>
  4062a9:	mov    r9,QWORD PTR [r8+rcx*8]
  4062ad:	add    r9,0x1
  4062b1:	mov    QWORD PTR [r8+rcx*8],r9
  4062b5:	test   dil,0x1
  4062b9:	jne    4062c4 <UnityPrintNumberUnsigned@@Base+0x94>
  4062bf:	jmp    406360 <UnityPrintNumberUnsigned@@Base+0x130>
  4062c4:	mov    eax,0x5
  4062c9:	mov    ecx,eax
  4062cb:	mov    eax,0x4
  4062d0:	mov    edx,eax
  4062d2:	imul   rsi,QWORD PTR [rbp-0x10],0xa
  4062d7:	mov    QWORD PTR [rbp-0x18],rsi
  4062db:	mov    rsi,QWORD PTR [rbp-0x18]
  4062df:	mov    rdi,QWORD PTR [rbp-0x10]
  4062e3:	cmp    rsi,rdi
  4062e6:	seta   r8b
  4062ea:	cmp    rsi,rdi
  4062ed:	cmova  rcx,rdx
  4062f1:	lea    rdx,[rip+0x122f8]        # 4185f0 <__bss_start@@Base+0x494>
  4062f8:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4062fc:	add    rsi,0x1
  406300:	mov    QWORD PTR [rdx+rcx*8],rsi
  406304:	test   r8b,0x1
  406308:	jne    406313 <UnityPrintNumberUnsigned@@Base+0xe3>
  40630e:	jmp    406332 <UnityPrintNumberUnsigned@@Base+0x102>
  406313:	mov    rax,QWORD PTR [rip+0x12306]        # 418620 <__bss_start@@Base+0x4c4>
  40631a:	add    rax,0x1
  40631e:	mov    QWORD PTR [rip+0x122fb],rax        # 418620 <__bss_start@@Base+0x4c4>
  406325:	mov    rax,QWORD PTR [rbp-0x18]
  406329:	mov    QWORD PTR [rbp-0x10],rax
  40632d:	jmp    406349 <UnityPrintNumberUnsigned@@Base+0x119>
  406332:	mov    rax,QWORD PTR [rip+0x122ef]        # 418628 <__bss_start@@Base+0x4cc>
  406339:	add    rax,0x1
  40633d:	mov    QWORD PTR [rip+0x122e4],rax        # 418628 <__bss_start@@Base+0x4cc>
  406344:	jmp    406360 <UnityPrintNumberUnsigned@@Base+0x130>
  406349:	mov    rax,QWORD PTR [rip+0x122e0]        # 418630 <__bss_start@@Base+0x4d4>
  406350:	add    rax,0x1
  406354:	mov    QWORD PTR [rip+0x122d5],rax        # 418630 <__bss_start@@Base+0x4d4>
  40635b:	jmp    406270 <UnityPrintNumberUnsigned@@Base+0x40>
  406360:	mov    rax,QWORD PTR [rip+0x122d1]        # 418638 <__bss_start@@Base+0x4dc>
  406367:	add    rax,0x1
  40636b:	mov    QWORD PTR [rip+0x122c6],rax        # 418638 <__bss_start@@Base+0x4dc>
  406372:	mov    eax,0xa
  406377:	mov    ecx,eax
  406379:	mov    rdx,QWORD PTR [rip+0x122c0]        # 418640 <__bss_start@@Base+0x4e4>
  406380:	add    rdx,0x1
  406384:	mov    QWORD PTR [rip+0x122b5],rdx        # 418640 <__bss_start@@Base+0x4e4>
  40638b:	mov    rax,QWORD PTR [rbp-0x8]
  40638f:	xor    esi,esi
  406391:	mov    edx,esi
  406393:	div    QWORD PTR [rbp-0x10]
  406397:	xor    esi,esi
  406399:	mov    edx,esi
  40639b:	div    rcx
  40639e:	add    rdx,0x30
  4063a2:	mov    dil,dl
  4063a5:	movsx  edi,dil
  4063a9:	call   403050 <putchar@plt>
  4063ae:	mov    esi,0xa
  4063b3:	mov    ecx,esi
  4063b5:	mov    rdx,QWORD PTR [rbp-0x10]
  4063b9:	mov    DWORD PTR [rbp-0x2c],eax
  4063bc:	mov    rax,rdx
  4063bf:	xor    esi,esi
  4063c1:	mov    edx,esi
  4063c3:	div    rcx
  4063c6:	mov    QWORD PTR [rbp-0x10],rax
  4063ca:	mov    eax,0xc
  4063cf:	mov    ecx,eax
  4063d1:	mov    eax,0xb
  4063d6:	mov    edx,eax
  4063d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4063dc:	cmp    rsi,0x0
  4063e0:	seta   dil
  4063e4:	cmp    rsi,0x0
  4063e8:	cmova  rcx,rdx
  4063ec:	lea    rdx,[rip+0x121fd]        # 4185f0 <__bss_start@@Base+0x494>
  4063f3:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4063f7:	add    rsi,0x1
  4063fb:	mov    QWORD PTR [rdx+rcx*8],rsi
  4063ff:	test   dil,0x1
  406403:	jne    406372 <UnityPrintNumberUnsigned@@Base+0x142>
  406409:	mov    rax,QWORD PTR [rip+0x12248]        # 418658 <__bss_start@@Base+0x4fc>
  406410:	add    rax,0x1
  406414:	mov    QWORD PTR [rip+0x1223d],rax        # 418658 <__bss_start@@Base+0x4fc>
  40641b:	add    rsp,0x30
  40641f:	pop    rbp
  406420:	ret    
  406421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40642b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406430 <UnityPrintMask@@Base>:
  406430:	push   rbp
  406431:	mov    rbp,rsp
  406434:	sub    rsp,0x40
  406438:	mov    rax,QWORD PTR [rip+0x12221]        # 418660 <__bss_start@@Base+0x504>
  40643f:	add    rax,0x1
  406443:	mov    QWORD PTR [rip+0x12216],rax        # 418660 <__bss_start@@Base+0x504>
  40644a:	mov    QWORD PTR [rbp-0x28],rdi
  40644e:	mov    QWORD PTR [rbp-0x30],rsi
  406452:	mov    eax,0x80000000
  406457:	mov    ecx,eax
  406459:	mov    rdx,QWORD PTR [rip+0x12208]        # 418668 <__bss_start@@Base+0x50c>
  406460:	add    rdx,0x1
  406464:	mov    QWORD PTR [rip+0x121fd],rdx        # 418668 <__bss_start@@Base+0x50c>
  40646b:	mov    rdx,QWORD PTR [rbp-0x28]
  40646f:	mov    QWORD PTR [rbp-0x8],rdx
  406473:	mov    rsi,QWORD PTR [rbp-0x30]
  406477:	mov    QWORD PTR [rbp-0x10],rsi
  40647b:	mov    QWORD PTR [rbp-0x18],rcx
  40647f:	mov    DWORD PTR [rbp-0x1c],0x0
  406486:	mov    eax,0x3
  40648b:	mov    ecx,eax
  40648d:	mov    eax,0x2
  406492:	mov    edx,eax
  406494:	mov    eax,DWORD PTR [rbp-0x1c]
  406497:	cmp    eax,0x20
  40649a:	setl   sil
  40649e:	cmp    eax,0x20
  4064a1:	cmovl  rcx,rdx
  4064a5:	lea    rdx,[rip+0x121b4]        # 418660 <__bss_start@@Base+0x504>
  4064ac:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4064b0:	add    rdi,0x1
  4064b4:	mov    QWORD PTR [rdx+rcx*8],rdi
  4064b8:	test   sil,0x1
  4064bc:	jne    4064c7 <UnityPrintMask@@Base+0x97>
  4064c2:	jmp    40660e <UnityPrintMask@@Base+0x1de>
  4064c7:	mov    eax,0x5
  4064cc:	mov    ecx,eax
  4064ce:	mov    eax,0x4
  4064d3:	mov    edx,eax
  4064d5:	mov    rsi,QWORD PTR [rbp-0x18]
  4064d9:	and    rsi,QWORD PTR [rbp-0x8]
  4064dd:	cmp    rsi,0x0
  4064e1:	setne  dil
  4064e5:	cmp    rsi,0x0
  4064e9:	cmovne rcx,rdx
  4064ed:	lea    rdx,[rip+0x1216c]        # 418660 <__bss_start@@Base+0x504>
  4064f4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4064f8:	add    rsi,0x1
  4064fc:	mov    QWORD PTR [rdx+rcx*8],rsi
  406500:	test   dil,0x1
  406504:	jne    40650f <UnityPrintMask@@Base+0xdf>
  40650a:	jmp    4065b1 <UnityPrintMask@@Base+0x181>
  40650f:	mov    eax,0x7
  406514:	mov    ecx,eax
  406516:	mov    eax,0x6
  40651b:	mov    edx,eax
  40651d:	mov    rsi,QWORD PTR [rbp-0x18]
  406521:	and    rsi,QWORD PTR [rbp-0x10]
  406525:	cmp    rsi,0x0
  406529:	setne  dil
  40652d:	cmp    rsi,0x0
  406531:	cmovne rcx,rdx
  406535:	lea    rdx,[rip+0x12124]        # 418660 <__bss_start@@Base+0x504>
  40653c:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406540:	add    rsi,0x1
  406544:	mov    QWORD PTR [rdx+rcx*8],rsi
  406548:	test   dil,0x1
  40654c:	jne    406557 <UnityPrintMask@@Base+0x127>
  406552:	jmp    40657b <UnityPrintMask@@Base+0x14b>
  406557:	mov    rax,QWORD PTR [rip+0x12142]        # 4186a0 <__bss_start@@Base+0x544>
  40655e:	add    rax,0x1
  406562:	mov    QWORD PTR [rip+0x12137],rax        # 4186a0 <__bss_start@@Base+0x544>
  406569:	mov    edi,0x31
  40656e:	call   403050 <putchar@plt>
  406573:	mov    DWORD PTR [rbp-0x34],eax
  406576:	jmp    40659a <UnityPrintMask@@Base+0x16a>
  40657b:	mov    rax,QWORD PTR [rip+0x12126]        # 4186a8 <__bss_start@@Base+0x54c>
  406582:	add    rax,0x1
  406586:	mov    QWORD PTR [rip+0x1211b],rax        # 4186a8 <__bss_start@@Base+0x54c>
  40658d:	mov    edi,0x30
  406592:	call   403050 <putchar@plt>
  406597:	mov    DWORD PTR [rbp-0x38],eax
  40659a:	mov    rax,QWORD PTR [rip+0x1210f]        # 4186b0 <__bss_start@@Base+0x554>
  4065a1:	add    rax,0x1
  4065a5:	mov    QWORD PTR [rip+0x12104],rax        # 4186b0 <__bss_start@@Base+0x554>
  4065ac:	jmp    4065d0 <UnityPrintMask@@Base+0x1a0>
  4065b1:	mov    rax,QWORD PTR [rip+0x12100]        # 4186b8 <__bss_start@@Base+0x55c>
  4065b8:	add    rax,0x1
  4065bc:	mov    QWORD PTR [rip+0x120f5],rax        # 4186b8 <__bss_start@@Base+0x55c>
  4065c3:	mov    edi,0x58
  4065c8:	call   403050 <putchar@plt>
  4065cd:	mov    DWORD PTR [rbp-0x3c],eax
  4065d0:	mov    rax,QWORD PTR [rip+0x120e9]        # 4186c0 <__bss_start@@Base+0x564>
  4065d7:	add    rax,0x1
  4065db:	mov    QWORD PTR [rip+0x120de],rax        # 4186c0 <__bss_start@@Base+0x564>
  4065e2:	mov    rax,QWORD PTR [rbp-0x18]
  4065e6:	shr    rax,0x1
  4065ea:	mov    QWORD PTR [rbp-0x18],rax
  4065ee:	mov    rax,QWORD PTR [rip+0x120d3]        # 4186c8 <__bss_start@@Base+0x56c>
  4065f5:	add    rax,0x1
  4065f9:	mov    QWORD PTR [rip+0x120c8],rax        # 4186c8 <__bss_start@@Base+0x56c>
  406600:	mov    ecx,DWORD PTR [rbp-0x1c]
  406603:	add    ecx,0x1
  406606:	mov    DWORD PTR [rbp-0x1c],ecx
  406609:	jmp    406486 <UnityPrintMask@@Base+0x56>
  40660e:	mov    rax,QWORD PTR [rip+0x120bb]        # 4186d0 <__bss_start@@Base+0x574>
  406615:	add    rax,0x1
  406619:	mov    QWORD PTR [rip+0x120b0],rax        # 4186d0 <__bss_start@@Base+0x574>
  406620:	add    rsp,0x40
  406624:	pop    rbp
  406625:	ret    
  406626:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406630 <UnityPrintFail@@Base>:
  406630:	push   rbp
  406631:	mov    rbp,rsp
  406634:	mov    rax,QWORD PTR [rip+0x1209d]        # 4186d8 <__bss_start@@Base+0x57c>
  40663b:	add    rax,0x1
  40663f:	mov    QWORD PTR [rip+0x12092],rax        # 4186d8 <__bss_start@@Base+0x57c>
  406646:	lea    rdi,[rip+0xbfab]        # 4125f8 <UnityStrFail@@Base>
  40664d:	mov    rax,QWORD PTR [rip+0x1208c]        # 4186e0 <__bss_start@@Base+0x584>
  406654:	add    rax,0x1
  406658:	mov    QWORD PTR [rip+0x12081],rax        # 4186e0 <__bss_start@@Base+0x584>
  40665f:	call   405610 <UnityPrint@@Base>
  406664:	pop    rbp
  406665:	ret    
  406666:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406670 <UnityPrintOk@@Base>:
  406670:	push   rbp
  406671:	mov    rbp,rsp
  406674:	mov    rax,QWORD PTR [rip+0x1206d]        # 4186e8 <__bss_start@@Base+0x58c>
  40667b:	add    rax,0x1
  40667f:	mov    QWORD PTR [rip+0x12062],rax        # 4186e8 <__bss_start@@Base+0x58c>
  406686:	lea    rdi,[rip+0xbf63]        # 4125f0 <UnityStrOk@@Base>
  40668d:	mov    rax,QWORD PTR [rip+0x1205c]        # 4186f0 <__bss_start@@Base+0x594>
  406694:	add    rax,0x1
  406698:	mov    QWORD PTR [rip+0x12051],rax        # 4186f0 <__bss_start@@Base+0x594>
  40669f:	call   405610 <UnityPrint@@Base>
  4066a4:	pop    rbp
  4066a5:	ret    
  4066a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004066b0 <UnityConcludeTest@@Base>:
  4066b0:	push   rbp
  4066b1:	mov    rbp,rsp
  4066b4:	sub    rsp,0x10
  4066b8:	mov    rax,QWORD PTR [rip+0x12041]        # 418700 <__bss_start@@Base+0x5a4>
  4066bf:	add    rax,0x1
  4066c3:	mov    QWORD PTR [rip+0x12036],rax        # 418700 <__bss_start@@Base+0x5a4>
  4066ca:	mov    eax,0x2
  4066cf:	mov    ecx,eax
  4066d1:	mov    eax,0x1
  4066d6:	mov    edx,eax
  4066d8:	lea    rsi,[rip+0x13421]        # 419b00 <Unity@@Base>
  4066df:	mov    rsi,QWORD PTR [rsi+0x48]
  4066e3:	cmp    rsi,0x0
  4066e7:	setne  dil
  4066eb:	cmp    rsi,0x0
  4066ef:	cmovne rcx,rdx
  4066f3:	lea    rdx,[rip+0x12006]        # 418700 <__bss_start@@Base+0x5a4>
  4066fa:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4066fe:	add    rsi,0x1
  406702:	mov    QWORD PTR [rdx+rcx*8],rsi
  406706:	test   dil,0x1
  40670a:	jne    406715 <UnityConcludeTest@@Base+0x65>
  406710:	jmp    40673f <UnityConcludeTest@@Base+0x8f>
  406715:	lea    rax,[rip+0x133e4]        # 419b00 <Unity@@Base>
  40671c:	mov    rcx,QWORD PTR [rip+0x11ff5]        # 418718 <__bss_start@@Base+0x5bc>
  406723:	add    rcx,0x1
  406727:	mov    QWORD PTR [rip+0x11fea],rcx        # 418718 <__bss_start@@Base+0x5bc>
  40672e:	mov    rcx,QWORD PTR [rax+0x38]
  406732:	add    rcx,0x1
  406736:	mov    QWORD PTR [rax+0x38],rcx
  40673a:	jmp    4067f2 <UnityConcludeTest@@Base+0x142>
  40673f:	mov    eax,0x5
  406744:	mov    ecx,eax
  406746:	mov    eax,0x4
  40674b:	mov    edx,eax
  40674d:	lea    rsi,[rip+0x133ac]        # 419b00 <Unity@@Base>
  406754:	mov    rsi,QWORD PTR [rsi+0x40]
  406758:	cmp    rsi,0x0
  40675c:	setne  dil
  406760:	cmp    rsi,0x0
  406764:	cmovne rcx,rdx
  406768:	lea    rdx,[rip+0x11f91]        # 418700 <__bss_start@@Base+0x5a4>
  40676f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406773:	add    rsi,0x1
  406777:	mov    QWORD PTR [rdx+rcx*8],rsi
  40677b:	test   dil,0x1
  40677f:	jne    4067bb <UnityConcludeTest@@Base+0x10b>
  406785:	lea    rax,[rip+0x13374]        # 419b00 <Unity@@Base>
  40678c:	mov    rcx,QWORD PTR [rip+0x11f9d]        # 418730 <__bss_start@@Base+0x5d4>
  406793:	add    rcx,0x1
  406797:	mov    QWORD PTR [rip+0x11f92],rcx        # 418730 <__bss_start@@Base+0x5d4>
  40679e:	mov    rdi,QWORD PTR [rax]
  4067a1:	mov    rsi,QWORD PTR [rax+0x20]
  4067a5:	call   406830 <UnityConcludeTest@@Base+0x180>
  4067aa:	lea    rdi,[rip+0xbe42]        # 4125f3 <UnityStrPass@@Base>
  4067b1:	call   405610 <UnityPrint@@Base>
  4067b6:	jmp    4067e0 <UnityConcludeTest@@Base+0x130>
  4067bb:	lea    rax,[rip+0x1333e]        # 419b00 <Unity@@Base>
  4067c2:	mov    rcx,QWORD PTR [rip+0x11f6f]        # 418738 <__bss_start@@Base+0x5dc>
  4067c9:	add    rcx,0x1
  4067cd:	mov    QWORD PTR [rip+0x11f64],rcx        # 418738 <__bss_start@@Base+0x5dc>
  4067d4:	mov    rcx,QWORD PTR [rax+0x30]
  4067d8:	add    rcx,0x1
  4067dc:	mov    QWORD PTR [rax+0x30],rcx
  4067e0:	mov    rax,QWORD PTR [rip+0x11f59]        # 418740 <__bss_start@@Base+0x5e4>
  4067e7:	add    rax,0x1
  4067eb:	mov    QWORD PTR [rip+0x11f4e],rax        # 418740 <__bss_start@@Base+0x5e4>
  4067f2:	lea    rax,[rip+0x13307]        # 419b00 <Unity@@Base>
  4067f9:	mov    rcx,QWORD PTR [rip+0x11f48]        # 418748 <__bss_start@@Base+0x5ec>
  406800:	add    rcx,0x1
  406804:	mov    QWORD PTR [rip+0x11f3d],rcx        # 418748 <__bss_start@@Base+0x5ec>
  40680b:	mov    QWORD PTR [rax+0x40],0x0
  406813:	mov    QWORD PTR [rax+0x48],0x0
  40681b:	mov    edi,0xa
  406820:	call   403050 <putchar@plt>
  406825:	mov    DWORD PTR [rbp-0x4],eax
  406828:	add    rsp,0x10
  40682c:	pop    rbp
  40682d:	ret    
  40682e:	xchg   ax,ax
  406830:	push   rbp
  406831:	mov    rbp,rsp
  406834:	sub    rsp,0x30
  406838:	mov    rax,QWORD PTR [rip+0x11f11]        # 418750 <__bss_start@@Base+0x5f4>
  40683f:	add    rax,0x1
  406843:	mov    QWORD PTR [rip+0x11f06],rax        # 418750 <__bss_start@@Base+0x5f4>
  40684a:	mov    QWORD PTR [rbp-0x18],rdi
  40684e:	mov    QWORD PTR [rbp-0x20],rsi
  406852:	mov    rax,QWORD PTR [rip+0x11eff]        # 418758 <__bss_start@@Base+0x5fc>
  406859:	add    rax,0x1
  40685d:	mov    QWORD PTR [rip+0x11ef4],rax        # 418758 <__bss_start@@Base+0x5fc>
  406864:	mov    rax,QWORD PTR [rbp-0x18]
  406868:	mov    QWORD PTR [rbp-0x8],rax
  40686c:	mov    rcx,QWORD PTR [rbp-0x20]
  406870:	mov    QWORD PTR [rbp-0x10],rcx
  406874:	mov    rdi,QWORD PTR [rbp-0x8]
  406878:	call   405610 <UnityPrint@@Base>
  40687d:	mov    edi,0x3a
  406882:	call   403050 <putchar@plt>
  406887:	mov    rdi,QWORD PTR [rbp-0x10]
  40688b:	mov    DWORD PTR [rbp-0x24],eax
  40688e:	call   405fb0 <UnityPrintNumber@@Base>
  406893:	mov    edi,0x3a
  406898:	call   403050 <putchar@plt>
  40689d:	lea    rcx,[rip+0x1325c]        # 419b00 <Unity@@Base>
  4068a4:	mov    rdi,QWORD PTR [rcx+0x8]
  4068a8:	mov    DWORD PTR [rbp-0x28],eax
  4068ab:	call   405610 <UnityPrint@@Base>
  4068b0:	mov    edi,0x3a
  4068b5:	call   403050 <putchar@plt>
  4068ba:	mov    DWORD PTR [rbp-0x2c],eax
  4068bd:	add    rsp,0x30
  4068c1:	pop    rbp
  4068c2:	ret    
  4068c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068cd:	nop    DWORD PTR [rax]

00000000004068d0 <UnityAssertBits@@Base>:
  4068d0:	push   rbp
  4068d1:	mov    rbp,rsp
  4068d4:	push   rbx
  4068d5:	sub    rsp,0x58
  4068d9:	mov    rax,QWORD PTR [rip+0x11e80]        # 418760 <__bss_start@@Base+0x604>
  4068e0:	add    rax,0x1
  4068e4:	mov    QWORD PTR [rip+0x11e75],rax        # 418760 <__bss_start@@Base+0x604>
  4068eb:	mov    QWORD PTR [rbp-0x38],rcx
  4068ef:	mov    QWORD PTR [rbp-0x40],rdx
  4068f3:	mov    QWORD PTR [rbp-0x48],rsi
  4068f7:	mov    QWORD PTR [rbp-0x50],rdi
  4068fb:	mov    QWORD PTR [rbp-0x58],r8
  4068ff:	mov    eax,0x2
  406904:	mov    ecx,eax
  406906:	mov    eax,0x1
  40690b:	mov    edx,eax
  40690d:	lea    rsi,[rip+0x131ec]        # 419b00 <Unity@@Base>
  406914:	mov    rdi,QWORD PTR [rbp-0x50]
  406918:	mov    QWORD PTR [rbp-0x10],rdi
  40691c:	mov    r8,QWORD PTR [rbp-0x48]
  406920:	mov    QWORD PTR [rbp-0x18],r8
  406924:	mov    r9,QWORD PTR [rbp-0x40]
  406928:	mov    QWORD PTR [rbp-0x20],r9
  40692c:	mov    r10,QWORD PTR [rbp-0x38]
  406930:	mov    QWORD PTR [rbp-0x28],r10
  406934:	mov    r11,QWORD PTR [rbp-0x58]
  406938:	mov    QWORD PTR [rbp-0x30],r11
  40693c:	mov    rsi,QWORD PTR [rsi+0x40]
  406940:	cmp    rsi,0x0
  406944:	setne  bl
  406947:	cmp    rsi,0x0
  40694b:	cmovne rcx,rdx
  40694f:	lea    rdx,[rip+0x11e0a]        # 418760 <__bss_start@@Base+0x604>
  406956:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40695a:	add    rsi,0x1
  40695e:	mov    QWORD PTR [rdx+rcx*8],rsi
  406962:	test   bl,0x1
  406965:	jne    4069b6 <UnityAssertBits@@Base+0xe6>
  40696b:	mov    eax,0x4
  406970:	mov    ecx,eax
  406972:	mov    eax,0x3
  406977:	mov    edx,eax
  406979:	lea    rsi,[rip+0x13180]        # 419b00 <Unity@@Base>
  406980:	mov    rsi,QWORD PTR [rsi+0x48]
  406984:	cmp    rsi,0x0
  406988:	setne  dil
  40698c:	cmp    rsi,0x0
  406990:	cmovne rcx,rdx
  406994:	lea    rdx,[rip+0x11dc5]        # 418760 <__bss_start@@Base+0x604>
  40699b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40699f:	add    rsi,0x1
  4069a3:	mov    QWORD PTR [rdx+rcx*8],rsi
  4069a7:	test   dil,0x1
  4069ab:	jne    4069b6 <UnityAssertBits@@Base+0xe6>
  4069b1:	jmp    4069cd <UnityAssertBits@@Base+0xfd>
  4069b6:	mov    rax,QWORD PTR [rip+0x11dcb]        # 418788 <__bss_start@@Base+0x62c>
  4069bd:	add    rax,0x1
  4069c1:	mov    QWORD PTR [rip+0x11dc0],rax        # 418788 <__bss_start@@Base+0x62c>
  4069c8:	jmp    406a7f <UnityAssertBits@@Base+0x1af>
  4069cd:	mov    eax,0x7
  4069d2:	mov    ecx,eax
  4069d4:	mov    eax,0x6
  4069d9:	mov    edx,eax
  4069db:	mov    rsi,QWORD PTR [rbp-0x10]
  4069df:	and    rsi,QWORD PTR [rbp-0x18]
  4069e3:	mov    rdi,QWORD PTR [rbp-0x10]
  4069e7:	and    rdi,QWORD PTR [rbp-0x20]
  4069eb:	cmp    rsi,rdi
  4069ee:	setne  r8b
  4069f2:	cmp    rsi,rdi
  4069f5:	cmovne rcx,rdx
  4069f9:	lea    rdx,[rip+0x11d60]        # 418760 <__bss_start@@Base+0x604>
  406a00:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406a04:	add    rsi,0x1
  406a08:	mov    QWORD PTR [rdx+rcx*8],rsi
  406a0c:	test   r8b,0x1
  406a10:	jne    406a1b <UnityAssertBits@@Base+0x14b>
  406a16:	jmp    406a7f <UnityAssertBits@@Base+0x1af>
  406a1b:	mov    rdi,QWORD PTR [rbp-0x30]
  406a1f:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  406a24:	lea    rdi,[rip+0xbbe1]        # 41260c <UnityStrExpected@@Base>
  406a2b:	call   405610 <UnityPrint@@Base>
  406a30:	mov    rdi,QWORD PTR [rbp-0x10]
  406a34:	mov    rsi,QWORD PTR [rbp-0x18]
  406a38:	call   406430 <UnityPrintMask@@Base>
  406a3d:	lea    rdi,[rip+0xbbd3]        # 412617 <UnityStrWas@@Base>
  406a44:	call   405610 <UnityPrint@@Base>
  406a49:	mov    rdi,QWORD PTR [rbp-0x10]
  406a4d:	mov    rsi,QWORD PTR [rbp-0x20]
  406a51:	call   406430 <UnityPrintMask@@Base>
  406a56:	mov    rdi,QWORD PTR [rbp-0x28]
  406a5a:	call   406b10 <UnityAssertBits@@Base+0x240>
  406a5f:	lea    rsi,[rip+0x1309a]        # 419b00 <Unity@@Base>
  406a66:	mov    rdi,rsi
  406a69:	add    rdi,0x50
  406a6d:	mov    QWORD PTR [rsi+0x40],0x1
  406a75:	mov    esi,0x1
  406a7a:	call   4031f0 <longjmp@plt>
  406a7f:	mov    rax,QWORD PTR [rip+0x11d1a]        # 4187a0 <__bss_start@@Base+0x644>
  406a86:	add    rax,0x1
  406a8a:	mov    QWORD PTR [rip+0x11d0f],rax        # 4187a0 <__bss_start@@Base+0x644>
  406a91:	add    rsp,0x58
  406a95:	pop    rbx
  406a96:	pop    rbp
  406a97:	ret    
  406a98:	nop    DWORD PTR [rax+rax*1+0x0]
  406aa0:	push   rbp
  406aa1:	mov    rbp,rsp
  406aa4:	sub    rsp,0x20
  406aa8:	mov    rax,QWORD PTR [rip+0x11cf9]        # 4187a8 <__bss_start@@Base+0x64c>
  406aaf:	add    rax,0x1
  406ab3:	mov    QWORD PTR [rip+0x11cee],rax        # 4187a8 <__bss_start@@Base+0x64c>
  406aba:	mov    QWORD PTR [rbp-0x10],rdi
  406abe:	lea    rax,[rip+0x1303b]        # 419b00 <Unity@@Base>
  406ac5:	mov    rcx,QWORD PTR [rip+0x11ce4]        # 4187b0 <__bss_start@@Base+0x654>
  406acc:	add    rcx,0x1
  406ad0:	mov    QWORD PTR [rip+0x11cd9],rcx        # 4187b0 <__bss_start@@Base+0x654>
  406ad7:	mov    rcx,QWORD PTR [rbp-0x10]
  406adb:	mov    QWORD PTR [rbp-0x8],rcx
  406adf:	mov    rdi,QWORD PTR [rax]
  406ae2:	mov    rsi,QWORD PTR [rbp-0x8]
  406ae6:	call   406830 <UnityConcludeTest@@Base+0x180>
  406aeb:	lea    rdi,[rip+0xbb06]        # 4125f8 <UnityStrFail@@Base>
  406af2:	call   405610 <UnityPrint@@Base>
  406af7:	mov    edi,0x3a
  406afc:	call   403050 <putchar@plt>
  406b01:	mov    DWORD PTR [rbp-0x14],eax
  406b04:	add    rsp,0x20
  406b08:	pop    rbp
  406b09:	ret    
  406b0a:	nop    WORD PTR [rax+rax*1+0x0]
  406b10:	push   rbp
  406b11:	mov    rbp,rsp
  406b14:	sub    rsp,0x10
  406b18:	mov    rax,QWORD PTR [rip+0x11ca1]        # 4187c0 <__bss_start@@Base+0x664>
  406b1f:	add    rax,0x1
  406b23:	mov    QWORD PTR [rip+0x11c96],rax        # 4187c0 <__bss_start@@Base+0x664>
  406b2a:	mov    QWORD PTR [rbp-0x10],rdi
  406b2e:	mov    eax,0x2
  406b33:	mov    ecx,eax
  406b35:	mov    eax,0x1
  406b3a:	mov    edx,eax
  406b3c:	mov    rsi,QWORD PTR [rbp-0x10]
  406b40:	mov    QWORD PTR [rbp-0x8],rsi
  406b44:	mov    rdi,QWORD PTR [rbp-0x8]
  406b48:	cmp    rdi,0x0
  406b4c:	setne  r8b
  406b50:	cmp    rdi,0x0
  406b54:	cmovne rcx,rdx
  406b58:	lea    rdx,[rip+0x11c61]        # 4187c0 <__bss_start@@Base+0x664>
  406b5f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  406b63:	add    rdi,0x1
  406b67:	mov    QWORD PTR [rdx+rcx*8],rdi
  406b6b:	test   r8b,0x1
  406b6f:	jne    406b7a <UnityAssertBits@@Base+0x2aa>
  406b75:	jmp    406c9f <UnityAssertBits@@Base+0x3cf>
  406b7a:	lea    rdi,[rip+0xba88]        # 412609 <UnityStrSpacer@@Base>
  406b81:	call   405610 <UnityPrint@@Base>
  406b86:	mov    eax,0x4
  406b8b:	mov    edi,eax
  406b8d:	mov    eax,0x3
  406b92:	mov    ecx,eax
  406b94:	lea    rdx,[rip+0x12f65]        # 419b00 <Unity@@Base>
  406b9b:	mov    rdx,QWORD PTR [rdx+0x10]
  406b9f:	cmp    rdx,0x0
  406ba3:	setne  sil
  406ba7:	cmp    rdx,0x0
  406bab:	cmovne rdi,rcx
  406baf:	lea    rcx,[rip+0x11c0a]        # 4187c0 <__bss_start@@Base+0x664>
  406bb6:	mov    rdx,QWORD PTR [rcx+rdi*8]
  406bba:	add    rdx,0x1
  406bbe:	mov    QWORD PTR [rcx+rdi*8],rdx
  406bc2:	test   sil,0x1
  406bc6:	jne    406bd1 <UnityAssertBits@@Base+0x301>
  406bcc:	jmp    406c84 <UnityAssertBits@@Base+0x3b4>
  406bd1:	lea    rdi,[rip+0xbc1d]        # 4127f5 <UnityStrDetail1Name@@Base>
  406bd8:	call   405610 <UnityPrint@@Base>
  406bdd:	lea    rdi,[rip+0x12f1c]        # 419b00 <Unity@@Base>
  406be4:	mov    rdi,QWORD PTR [rdi+0x10]
  406be8:	call   405610 <UnityPrint@@Base>
  406bed:	mov    eax,0x6
  406bf2:	mov    edi,eax
  406bf4:	mov    eax,0x5
  406bf9:	mov    ecx,eax
  406bfb:	lea    rdx,[rip+0x12efe]        # 419b00 <Unity@@Base>
  406c02:	mov    rdx,QWORD PTR [rdx+0x18]
  406c06:	cmp    rdx,0x0
  406c0a:	setne  sil
  406c0e:	cmp    rdx,0x0
  406c12:	cmovne rdi,rcx
  406c16:	lea    rcx,[rip+0x11ba3]        # 4187c0 <__bss_start@@Base+0x664>
  406c1d:	mov    rdx,QWORD PTR [rcx+rdi*8]
  406c21:	add    rdx,0x1
  406c25:	mov    QWORD PTR [rcx+rdi*8],rdx
  406c29:	test   sil,0x1
  406c2d:	jne    406c38 <UnityAssertBits@@Base+0x368>
  406c33:	jmp    406c66 <UnityAssertBits@@Base+0x396>
  406c38:	lea    rdi,[rip+0xbbc0]        # 4127ff <UnityStrDetail2Name@@Base>
  406c3f:	mov    rax,QWORD PTR [rip+0x11bb2]        # 4187f8 <__bss_start@@Base+0x69c>
  406c46:	add    rax,0x1
  406c4a:	mov    QWORD PTR [rip+0x11ba7],rax        # 4187f8 <__bss_start@@Base+0x69c>
  406c51:	call   405610 <UnityPrint@@Base>
  406c56:	lea    rax,[rip+0x12ea3]        # 419b00 <Unity@@Base>
  406c5d:	mov    rdi,QWORD PTR [rax+0x18]
  406c61:	call   405610 <UnityPrint@@Base>
  406c66:	lea    rdi,[rip+0xb99c]        # 412609 <UnityStrSpacer@@Base>
  406c6d:	mov    rax,QWORD PTR [rip+0x11b8c]        # 418800 <__bss_start@@Base+0x6a4>
  406c74:	add    rax,0x1
  406c78:	mov    QWORD PTR [rip+0x11b81],rax        # 418800 <__bss_start@@Base+0x6a4>
  406c7f:	call   405610 <UnityPrint@@Base>
  406c84:	mov    rax,QWORD PTR [rip+0x11b7d]        # 418808 <__bss_start@@Base+0x6ac>
  406c8b:	add    rax,0x1
  406c8f:	mov    QWORD PTR [rip+0x11b72],rax        # 418808 <__bss_start@@Base+0x6ac>
  406c96:	mov    rdi,QWORD PTR [rbp-0x8]
  406c9a:	call   405610 <UnityPrint@@Base>
  406c9f:	mov    rax,QWORD PTR [rip+0x11b6a]        # 418810 <__bss_start@@Base+0x6b4>
  406ca6:	add    rax,0x1
  406caa:	mov    QWORD PTR [rip+0x11b5f],rax        # 418810 <__bss_start@@Base+0x6b4>
  406cb1:	add    rsp,0x10
  406cb5:	pop    rbp
  406cb6:	ret    
  406cb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406cc0 <UnityAssertEqualNumber@@Base>:
  406cc0:	push   rbp
  406cc1:	mov    rbp,rsp
  406cc4:	sub    rsp,0x50
  406cc8:	mov    rax,QWORD PTR [rip+0x11b51]        # 418820 <__bss_start@@Base+0x6c4>
  406ccf:	add    rax,0x1
  406cd3:	mov    QWORD PTR [rip+0x11b46],rax        # 418820 <__bss_start@@Base+0x6c4>
  406cda:	mov    QWORD PTR [rbp-0x30],rcx
  406cde:	mov    QWORD PTR [rbp-0x38],rdx
  406ce2:	mov    QWORD PTR [rbp-0x40],rsi
  406ce6:	mov    QWORD PTR [rbp-0x48],rdi
  406cea:	mov    DWORD PTR [rbp-0x4c],r8d
  406cee:	mov    eax,0x2
  406cf3:	mov    ecx,eax
  406cf5:	mov    eax,0x1
  406cfa:	mov    edx,eax
  406cfc:	lea    rsi,[rip+0x12dfd]        # 419b00 <Unity@@Base>
  406d03:	mov    rdi,QWORD PTR [rbp-0x48]
  406d07:	mov    QWORD PTR [rbp-0x8],rdi
  406d0b:	mov    r8,QWORD PTR [rbp-0x40]
  406d0f:	mov    QWORD PTR [rbp-0x10],r8
  406d13:	mov    r9,QWORD PTR [rbp-0x38]
  406d17:	mov    QWORD PTR [rbp-0x18],r9
  406d1b:	mov    r10,QWORD PTR [rbp-0x30]
  406d1f:	mov    QWORD PTR [rbp-0x20],r10
  406d23:	mov    eax,DWORD PTR [rbp-0x4c]
  406d26:	mov    DWORD PTR [rbp-0x24],eax
  406d29:	mov    rsi,QWORD PTR [rsi+0x40]
  406d2d:	cmp    rsi,0x0
  406d31:	setne  r11b
  406d35:	cmp    rsi,0x0
  406d39:	cmovne rcx,rdx
  406d3d:	lea    rdx,[rip+0x11adc]        # 418820 <__bss_start@@Base+0x6c4>
  406d44:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406d48:	add    rsi,0x1
  406d4c:	mov    QWORD PTR [rdx+rcx*8],rsi
  406d50:	test   r11b,0x1
  406d54:	jne    406da5 <UnityAssertEqualNumber@@Base+0xe5>
  406d5a:	mov    eax,0x4
  406d5f:	mov    ecx,eax
  406d61:	mov    eax,0x3
  406d66:	mov    edx,eax
  406d68:	lea    rsi,[rip+0x12d91]        # 419b00 <Unity@@Base>
  406d6f:	mov    rsi,QWORD PTR [rsi+0x48]
  406d73:	cmp    rsi,0x0
  406d77:	setne  dil
  406d7b:	cmp    rsi,0x0
  406d7f:	cmovne rcx,rdx
  406d83:	lea    rdx,[rip+0x11a96]        # 418820 <__bss_start@@Base+0x6c4>
  406d8a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406d8e:	add    rsi,0x1
  406d92:	mov    QWORD PTR [rdx+rcx*8],rsi
  406d96:	test   dil,0x1
  406d9a:	jne    406da5 <UnityAssertEqualNumber@@Base+0xe5>
  406da0:	jmp    406dbc <UnityAssertEqualNumber@@Base+0xfc>
  406da5:	mov    rax,QWORD PTR [rip+0x11a9c]        # 418848 <__bss_start@@Base+0x6ec>
  406dac:	add    rax,0x1
  406db0:	mov    QWORD PTR [rip+0x11a91],rax        # 418848 <__bss_start@@Base+0x6ec>
  406db7:	jmp    406e67 <UnityAssertEqualNumber@@Base+0x1a7>
  406dbc:	mov    eax,0x7
  406dc1:	mov    ecx,eax
  406dc3:	mov    eax,0x6
  406dc8:	mov    edx,eax
  406dca:	mov    rsi,QWORD PTR [rbp-0x8]
  406dce:	mov    rdi,QWORD PTR [rbp-0x10]
  406dd2:	cmp    rsi,rdi
  406dd5:	setne  r8b
  406dd9:	cmp    rsi,rdi
  406ddc:	cmovne rcx,rdx
  406de0:	lea    rdx,[rip+0x11a39]        # 418820 <__bss_start@@Base+0x6c4>
  406de7:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406deb:	add    rsi,0x1
  406def:	mov    QWORD PTR [rdx+rcx*8],rsi
  406df3:	test   r8b,0x1
  406df7:	jne    406e02 <UnityAssertEqualNumber@@Base+0x142>
  406dfd:	jmp    406e67 <UnityAssertEqualNumber@@Base+0x1a7>
  406e02:	mov    rdi,QWORD PTR [rbp-0x20]
  406e06:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  406e0b:	lea    rdi,[rip+0xb7fa]        # 41260c <UnityStrExpected@@Base>
  406e12:	call   405610 <UnityPrint@@Base>
  406e17:	mov    rdi,QWORD PTR [rbp-0x8]
  406e1b:	mov    esi,DWORD PTR [rbp-0x24]
  406e1e:	call   405e40 <UnityPrintNumberByStyle@@Base>
  406e23:	lea    rdi,[rip+0xb7ed]        # 412617 <UnityStrWas@@Base>
  406e2a:	call   405610 <UnityPrint@@Base>
  406e2f:	mov    rdi,QWORD PTR [rbp-0x10]
  406e33:	mov    esi,DWORD PTR [rbp-0x24]
  406e36:	call   405e40 <UnityPrintNumberByStyle@@Base>
  406e3b:	mov    rdi,QWORD PTR [rbp-0x18]
  406e3f:	call   406b10 <UnityAssertBits@@Base+0x240>
  406e44:	lea    rdi,[rip+0x12cb5]        # 419b00 <Unity@@Base>
  406e4b:	mov    rax,rdi
  406e4e:	add    rax,0x50
  406e52:	mov    QWORD PTR [rdi+0x40],0x1
  406e5a:	mov    rdi,rax
  406e5d:	mov    esi,0x1
  406e62:	call   4031f0 <longjmp@plt>
  406e67:	mov    rax,QWORD PTR [rip+0x119f2]        # 418860 <__bss_start@@Base+0x704>
  406e6e:	add    rax,0x1
  406e72:	mov    QWORD PTR [rip+0x119e7],rax        # 418860 <__bss_start@@Base+0x704>
  406e79:	add    rsp,0x50
  406e7d:	pop    rbp
  406e7e:	ret    
  406e7f:	nop

0000000000406e80 <UnityAssertEqualIntArray@@Base>:
  406e80:	push   rbp
  406e81:	mov    rbp,rsp
  406e84:	push   r15
  406e86:	push   r14
  406e88:	push   rbx
  406e89:	sub    rsp,0x98
  406e90:	mov    rax,QWORD PTR [rip+0x119d9]        # 418870 <__bss_start@@Base+0x714>
  406e97:	add    rax,0x1
  406e9b:	mov    QWORD PTR [rip+0x119ce],rax        # 418870 <__bss_start@@Base+0x714>
  406ea2:	mov    QWORD PTR [rbp-0x60],r8
  406ea6:	mov    QWORD PTR [rbp-0x68],rcx
  406eaa:	mov    DWORD PTR [rbp-0x6c],edx
  406ead:	mov    QWORD PTR [rbp-0x78],rsi
  406eb1:	mov    QWORD PTR [rbp-0x80],rdi
  406eb5:	mov    DWORD PTR [rbp-0x84],r9d
  406ebc:	mov    eax,0x2
  406ec1:	mov    ecx,eax
  406ec3:	mov    eax,0x1
  406ec8:	mov    edx,eax
  406eca:	lea    rsi,[rip+0x12c2f]        # 419b00 <Unity@@Base>
  406ed1:	mov    rdi,QWORD PTR [rbp-0x80]
  406ed5:	mov    QWORD PTR [rbp-0x20],rdi
  406ed9:	mov    r8,QWORD PTR [rbp-0x78]
  406edd:	mov    QWORD PTR [rbp-0x28],r8
  406ee1:	mov    eax,DWORD PTR [rbp-0x6c]
  406ee4:	mov    DWORD PTR [rbp-0x2c],eax
  406ee7:	mov    r9,QWORD PTR [rbp-0x68]
  406eeb:	mov    QWORD PTR [rbp-0x38],r9
  406eef:	mov    r10,QWORD PTR [rbp-0x60]
  406ef3:	mov    QWORD PTR [rbp-0x40],r10
  406ef7:	mov    r11d,DWORD PTR [rbp-0x84]
  406efe:	mov    DWORD PTR [rbp-0x44],r11d
  406f02:	mov    ebx,DWORD PTR [rbp-0x2c]
  406f05:	mov    DWORD PTR [rbp-0x48],ebx
  406f08:	mov    r14,QWORD PTR [rbp-0x20]
  406f0c:	mov    QWORD PTR [rbp-0x50],r14
  406f10:	mov    r14,QWORD PTR [rbp-0x28]
  406f14:	mov    QWORD PTR [rbp-0x58],r14
  406f18:	mov    rsi,QWORD PTR [rsi+0x40]
  406f1c:	cmp    rsi,0x0
  406f20:	setne  r15b
  406f24:	cmp    rsi,0x0
  406f28:	cmovne rcx,rdx
  406f2c:	lea    rdx,[rip+0x1193d]        # 418870 <__bss_start@@Base+0x714>
  406f33:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406f37:	add    rsi,0x1
  406f3b:	mov    QWORD PTR [rdx+rcx*8],rsi
  406f3f:	test   r15b,0x1
  406f43:	jne    406f94 <UnityAssertEqualIntArray@@Base+0x114>
  406f49:	mov    eax,0x4
  406f4e:	mov    ecx,eax
  406f50:	mov    eax,0x3
  406f55:	mov    edx,eax
  406f57:	lea    rsi,[rip+0x12ba2]        # 419b00 <Unity@@Base>
  406f5e:	mov    rsi,QWORD PTR [rsi+0x48]
  406f62:	cmp    rsi,0x0
  406f66:	setne  dil
  406f6a:	cmp    rsi,0x0
  406f6e:	cmovne rcx,rdx
  406f72:	lea    rdx,[rip+0x118f7]        # 418870 <__bss_start@@Base+0x714>
  406f79:	mov    rsi,QWORD PTR [rdx+rcx*8]
  406f7d:	add    rsi,0x1
  406f81:	mov    QWORD PTR [rdx+rcx*8],rsi
  406f85:	test   dil,0x1
  406f89:	jne    406f94 <UnityAssertEqualIntArray@@Base+0x114>
  406f8f:	jmp    406fab <UnityAssertEqualIntArray@@Base+0x12b>
  406f94:	mov    rax,QWORD PTR [rip+0x118fd]        # 418898 <__bss_start@@Base+0x73c>
  406f9b:	add    rax,0x1
  406f9f:	mov    QWORD PTR [rip+0x118f2],rax        # 418898 <__bss_start@@Base+0x73c>
  406fa6:	jmp    4077c9 <UnityAssertEqualIntArray@@Base+0x949>
  406fab:	mov    eax,0x7
  406fb0:	mov    ecx,eax
  406fb2:	mov    eax,0x6
  406fb7:	mov    edx,eax
  406fb9:	mov    eax,DWORD PTR [rbp-0x48]
  406fbc:	cmp    eax,0x0
  406fbf:	sete   sil
  406fc3:	cmp    eax,0x0
  406fc6:	cmove  rcx,rdx
  406fca:	lea    rdx,[rip+0x1189f]        # 418870 <__bss_start@@Base+0x714>
  406fd1:	mov    rdi,QWORD PTR [rdx+rcx*8]
  406fd5:	add    rdi,0x1
  406fd9:	mov    QWORD PTR [rdx+rcx*8],rdi
  406fdd:	test   sil,0x1
  406fe1:	jne    406fec <UnityAssertEqualIntArray@@Base+0x16c>
  406fe7:	jmp    40702d <UnityAssertEqualIntArray@@Base+0x1ad>
  406fec:	mov    rdi,QWORD PTR [rbp-0x40]
  406ff0:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  406ff5:	lea    rdi,[rip+0xb684]        # 412680 <UnityStrPointless@@Base>
  406ffc:	call   405610 <UnityPrint@@Base>
  407001:	mov    rdi,QWORD PTR [rbp-0x38]
  407005:	call   406b10 <UnityAssertBits@@Base+0x240>
  40700a:	lea    rdi,[rip+0x12aef]        # 419b00 <Unity@@Base>
  407011:	mov    rax,rdi
  407014:	add    rax,0x50
  407018:	mov    QWORD PTR [rdi+0x40],0x1
  407020:	mov    rdi,rax
  407023:	mov    esi,0x1
  407028:	call   4031f0 <longjmp@plt>
  40702d:	mov    rdi,QWORD PTR [rbp-0x20]
  407031:	mov    rsi,QWORD PTR [rbp-0x28]
  407035:	mov    rdx,QWORD PTR [rbp-0x40]
  407039:	mov    rcx,QWORD PTR [rbp-0x38]
  40703d:	call   4077f0 <UnityAssertEqualIntArray@@Base+0x970>
  407042:	mov    r8d,0x9
  407048:	mov    ecx,r8d
  40704b:	mov    r8d,0x8
  407051:	mov    edx,r8d
  407054:	cmp    eax,0x1
  407057:	sete   r9b
  40705b:	cmp    eax,0x1
  40705e:	cmove  rcx,rdx
  407062:	lea    rdx,[rip+0x11807]        # 418870 <__bss_start@@Base+0x714>
  407069:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40706d:	add    rsi,0x1
  407071:	mov    QWORD PTR [rdx+rcx*8],rsi
  407075:	test   r9b,0x1
  407079:	jne    407084 <UnityAssertEqualIntArray@@Base+0x204>
  40707f:	jmp    40709b <UnityAssertEqualIntArray@@Base+0x21b>
  407084:	mov    rax,QWORD PTR [rip+0x11835]        # 4188c0 <__bss_start@@Base+0x764>
  40708b:	add    rax,0x1
  40708f:	mov    QWORD PTR [rip+0x1182a],rax        # 4188c0 <__bss_start@@Base+0x764>
  407096:	jmp    4077c9 <UnityAssertEqualIntArray@@Base+0x949>
  40709b:	mov    DWORD PTR [rip+0x110a3],0x0        # 418148 <__data_start@@Base+0x10>
  4070a5:	mov    eax,DWORD PTR [rbp-0x44]
  4070a8:	and    eax,0xffffff7f
  4070ad:	mov    ecx,eax
  4070af:	sub    ecx,0x11
  4070b2:	mov    DWORD PTR [rbp-0x88],eax
  4070b8:	mov    DWORD PTR [rbp-0x8c],ecx
  4070be:	je     407199 <UnityAssertEqualIntArray@@Base+0x319>
  4070c4:	jmp    4070c9 <UnityAssertEqualIntArray@@Base+0x249>
  4070c9:	mov    eax,DWORD PTR [rbp-0x88]
  4070cf:	sub    eax,0x12
  4070d2:	mov    DWORD PTR [rbp-0x90],eax
  4070d8:	je     407329 <UnityAssertEqualIntArray@@Base+0x4a9>
  4070de:	jmp    4070e3 <UnityAssertEqualIntArray@@Base+0x263>
  4070e3:	mov    eax,DWORD PTR [rbp-0x88]
  4070e9:	sub    eax,0x18
  4070ec:	mov    DWORD PTR [rbp-0x94],eax
  4070f2:	je     4074b9 <UnityAssertEqualIntArray@@Base+0x639>
  4070f8:	jmp    4070fd <UnityAssertEqualIntArray@@Base+0x27d>
  4070fd:	mov    eax,DWORD PTR [rbp-0x88]
  407103:	sub    eax,0x21
  407106:	mov    DWORD PTR [rbp-0x98],eax
  40710c:	je     407199 <UnityAssertEqualIntArray@@Base+0x319>
  407112:	jmp    407117 <UnityAssertEqualIntArray@@Base+0x297>
  407117:	mov    eax,DWORD PTR [rbp-0x88]
  40711d:	sub    eax,0x22
  407120:	mov    DWORD PTR [rbp-0x9c],eax
  407126:	je     407329 <UnityAssertEqualIntArray@@Base+0x4a9>
  40712c:	jmp    407131 <UnityAssertEqualIntArray@@Base+0x2b1>
  407131:	mov    eax,DWORD PTR [rbp-0x88]
  407137:	sub    eax,0x28
  40713a:	mov    DWORD PTR [rbp-0xa0],eax
  407140:	je     4074b9 <UnityAssertEqualIntArray@@Base+0x639>
  407146:	jmp    40714b <UnityAssertEqualIntArray@@Base+0x2cb>
  40714b:	mov    eax,DWORD PTR [rbp-0x88]
  407151:	sub    eax,0x41
  407154:	mov    DWORD PTR [rbp-0xa4],eax
  40715a:	je     407199 <UnityAssertEqualIntArray@@Base+0x319>
  407160:	jmp    407165 <UnityAssertEqualIntArray@@Base+0x2e5>
  407165:	mov    eax,DWORD PTR [rbp-0x88]
  40716b:	sub    eax,0x42
  40716e:	mov    DWORD PTR [rbp-0xa8],eax
  407174:	je     407329 <UnityAssertEqualIntArray@@Base+0x4a9>
  40717a:	jmp    40717f <UnityAssertEqualIntArray@@Base+0x2ff>
  40717f:	mov    eax,DWORD PTR [rbp-0x88]
  407185:	sub    eax,0x48
  407188:	mov    DWORD PTR [rbp-0xac],eax
  40718e:	je     4074b9 <UnityAssertEqualIntArray@@Base+0x639>
  407194:	jmp    407649 <UnityAssertEqualIntArray@@Base+0x7c9>
  407199:	lea    rax,[rip+0xfe20]        # 416fc0 <UnitySizeMask@@Base+0x47b0>
  4071a0:	add    rax,0x8
  4071a4:	lea    rdi,[rip+0x10f9d]        # 418148 <__data_start@@Base+0x10>
  4071ab:	mov    rsi,rax
  4071ae:	call   40ab50 <UnityEnd@@Base+0x160>
  4071b3:	mov    rax,QWORD PTR [rip+0x1175e]        # 418918 <__bss_start@@Base+0x7bc>
  4071ba:	add    rax,0x1
  4071be:	mov    QWORD PTR [rip+0x11753],rax        # 418918 <__bss_start@@Base+0x7bc>
  4071c5:	mov    eax,0x17
  4071ca:	mov    ecx,eax
  4071cc:	mov    eax,0x16
  4071d1:	mov    edx,eax
  4071d3:	mov    eax,DWORD PTR [rbp-0x48]
  4071d6:	mov    esi,eax
  4071d8:	add    esi,0xffffffff
  4071db:	mov    DWORD PTR [rbp-0x48],esi
  4071de:	cmp    eax,0x0
  4071e1:	setne  dil
  4071e5:	cmp    eax,0x0
  4071e8:	cmovne rcx,rdx
  4071ec:	lea    rdx,[rip+0x1167d]        # 418870 <__bss_start@@Base+0x714>
  4071f3:	mov    r8,QWORD PTR [rdx+rcx*8]
  4071f7:	add    r8,0x1
  4071fb:	mov    QWORD PTR [rdx+rcx*8],r8
  4071ff:	test   dil,0x1
  407203:	jne    40720e <UnityAssertEqualIntArray@@Base+0x38e>
  407209:	jmp    407312 <UnityAssertEqualIntArray@@Base+0x492>
  40720e:	mov    eax,0x19
  407213:	mov    ecx,eax
  407215:	mov    eax,0x18
  40721a:	mov    edx,eax
  40721c:	mov    rsi,QWORD PTR [rbp-0x50]
  407220:	movsx  eax,BYTE PTR [rsi]
  407223:	mov    rsi,QWORD PTR [rbp-0x58]
  407227:	movsx  edi,BYTE PTR [rsi]
  40722a:	cmp    eax,edi
  40722c:	setne  r8b
  407230:	cmp    eax,edi
  407232:	cmovne rcx,rdx
  407236:	lea    rdx,[rip+0x11633]        # 418870 <__bss_start@@Base+0x714>
  40723d:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407241:	add    rsi,0x1
  407245:	mov    QWORD PTR [rdx+rcx*8],rsi
  407249:	test   r8b,0x1
  40724d:	jne    407258 <UnityAssertEqualIntArray@@Base+0x3d8>
  407253:	jmp    4072e3 <UnityAssertEqualIntArray@@Base+0x463>
  407258:	mov    rdi,QWORD PTR [rbp-0x40]
  40725c:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  407261:	lea    rdi,[rip+0xb3ba]        # 412622 <UnityStrElement@@Base>
  407268:	call   405610 <UnityPrint@@Base>
  40726d:	mov    eax,DWORD PTR [rbp-0x2c]
  407270:	sub    eax,DWORD PTR [rbp-0x48]
  407273:	sub    eax,0x1
  407276:	mov    eax,eax
  407278:	mov    edi,eax
  40727a:	call   406230 <UnityPrintNumberUnsigned@@Base>
  40727f:	lea    rdi,[rip+0xb386]        # 41260c <UnityStrExpected@@Base>
  407286:	call   405610 <UnityPrint@@Base>
  40728b:	mov    rdi,QWORD PTR [rbp-0x50]
  40728f:	movsx  rdi,BYTE PTR [rdi]
  407293:	mov    esi,DWORD PTR [rbp-0x44]
  407296:	call   405e40 <UnityPrintNumberByStyle@@Base>
  40729b:	lea    rdi,[rip+0xb375]        # 412617 <UnityStrWas@@Base>
  4072a2:	call   405610 <UnityPrint@@Base>
  4072a7:	mov    rdi,QWORD PTR [rbp-0x58]
  4072ab:	movsx  rdi,BYTE PTR [rdi]
  4072af:	mov    esi,DWORD PTR [rbp-0x44]
  4072b2:	call   405e40 <UnityPrintNumberByStyle@@Base>
  4072b7:	mov    rdi,QWORD PTR [rbp-0x38]
  4072bb:	call   406b10 <UnityAssertBits@@Base+0x240>
  4072c0:	lea    rdi,[rip+0x12839]        # 419b00 <Unity@@Base>
  4072c7:	mov    rcx,rdi
  4072ca:	add    rcx,0x50
  4072ce:	mov    QWORD PTR [rdi+0x40],0x1
  4072d6:	mov    rdi,rcx
  4072d9:	mov    esi,0x1
  4072de:	call   4031f0 <longjmp@plt>
  4072e3:	mov    rax,QWORD PTR [rip+0x11656]        # 418940 <__bss_start@@Base+0x7e4>
  4072ea:	add    rax,0x1
  4072ee:	mov    QWORD PTR [rip+0x1164b],rax        # 418940 <__bss_start@@Base+0x7e4>
  4072f5:	mov    rax,QWORD PTR [rbp-0x50]
  4072f9:	add    rax,0x1
  4072fd:	mov    QWORD PTR [rbp-0x50],rax
  407301:	mov    rax,QWORD PTR [rbp-0x58]
  407305:	add    rax,0x1
  407309:	mov    QWORD PTR [rbp-0x58],rax
  40730d:	jmp    4071c5 <UnityAssertEqualIntArray@@Base+0x345>
  407312:	mov    rax,QWORD PTR [rip+0x1162f]        # 418948 <__bss_start@@Base+0x7ec>
  407319:	add    rax,0x1
  40731d:	mov    QWORD PTR [rip+0x11624],rax        # 418948 <__bss_start@@Base+0x7ec>
  407324:	jmp    4077c9 <UnityAssertEqualIntArray@@Base+0x949>
  407329:	lea    rax,[rip+0xfc90]        # 416fc0 <UnitySizeMask@@Base+0x47b0>
  407330:	add    rax,0x10
  407334:	lea    rdi,[rip+0x10e0d]        # 418148 <__data_start@@Base+0x10>
  40733b:	mov    rsi,rax
  40733e:	call   40ab50 <UnityEnd@@Base+0x160>
  407343:	mov    rax,QWORD PTR [rip+0x11606]        # 418950 <__bss_start@@Base+0x7f4>
  40734a:	add    rax,0x1
  40734e:	mov    QWORD PTR [rip+0x115fb],rax        # 418950 <__bss_start@@Base+0x7f4>
  407355:	mov    eax,0x1e
  40735a:	mov    ecx,eax
  40735c:	mov    eax,0x1d
  407361:	mov    edx,eax
  407363:	mov    eax,DWORD PTR [rbp-0x48]
  407366:	mov    esi,eax
  407368:	add    esi,0xffffffff
  40736b:	mov    DWORD PTR [rbp-0x48],esi
  40736e:	cmp    eax,0x0
  407371:	setne  dil
  407375:	cmp    eax,0x0
  407378:	cmovne rcx,rdx
  40737c:	lea    rdx,[rip+0x114ed]        # 418870 <__bss_start@@Base+0x714>
  407383:	mov    r8,QWORD PTR [rdx+rcx*8]
  407387:	add    r8,0x1
  40738b:	mov    QWORD PTR [rdx+rcx*8],r8
  40738f:	test   dil,0x1
  407393:	jne    40739e <UnityAssertEqualIntArray@@Base+0x51e>
  407399:	jmp    4074a2 <UnityAssertEqualIntArray@@Base+0x622>
  40739e:	mov    eax,0x20
  4073a3:	mov    ecx,eax
  4073a5:	mov    eax,0x1f
  4073aa:	mov    edx,eax
  4073ac:	mov    rsi,QWORD PTR [rbp-0x50]
  4073b0:	movsx  eax,WORD PTR [rsi]
  4073b3:	mov    rsi,QWORD PTR [rbp-0x58]
  4073b7:	movsx  edi,WORD PTR [rsi]
  4073ba:	cmp    eax,edi
  4073bc:	setne  r8b
  4073c0:	cmp    eax,edi
  4073c2:	cmovne rcx,rdx
  4073c6:	lea    rdx,[rip+0x114a3]        # 418870 <__bss_start@@Base+0x714>
  4073cd:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4073d1:	add    rsi,0x1
  4073d5:	mov    QWORD PTR [rdx+rcx*8],rsi
  4073d9:	test   r8b,0x1
  4073dd:	jne    4073e8 <UnityAssertEqualIntArray@@Base+0x568>
  4073e3:	jmp    407473 <UnityAssertEqualIntArray@@Base+0x5f3>
  4073e8:	mov    rdi,QWORD PTR [rbp-0x40]
  4073ec:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  4073f1:	lea    rdi,[rip+0xb22a]        # 412622 <UnityStrElement@@Base>
  4073f8:	call   405610 <UnityPrint@@Base>
  4073fd:	mov    eax,DWORD PTR [rbp-0x2c]
  407400:	sub    eax,DWORD PTR [rbp-0x48]
  407403:	sub    eax,0x1
  407406:	mov    eax,eax
  407408:	mov    edi,eax
  40740a:	call   406230 <UnityPrintNumberUnsigned@@Base>
  40740f:	lea    rdi,[rip+0xb1f6]        # 41260c <UnityStrExpected@@Base>
  407416:	call   405610 <UnityPrint@@Base>
  40741b:	mov    rdi,QWORD PTR [rbp-0x50]
  40741f:	movsx  rdi,WORD PTR [rdi]
  407423:	mov    esi,DWORD PTR [rbp-0x44]
  407426:	call   405e40 <UnityPrintNumberByStyle@@Base>
  40742b:	lea    rdi,[rip+0xb1e5]        # 412617 <UnityStrWas@@Base>
  407432:	call   405610 <UnityPrint@@Base>
  407437:	mov    rdi,QWORD PTR [rbp-0x58]
  40743b:	movsx  rdi,WORD PTR [rdi]
  40743f:	mov    esi,DWORD PTR [rbp-0x44]
  407442:	call   405e40 <UnityPrintNumberByStyle@@Base>
  407447:	mov    rdi,QWORD PTR [rbp-0x38]
  40744b:	call   406b10 <UnityAssertBits@@Base+0x240>
  407450:	lea    rdi,[rip+0x126a9]        # 419b00 <Unity@@Base>
  407457:	mov    rcx,rdi
  40745a:	add    rcx,0x50
  40745e:	mov    QWORD PTR [rdi+0x40],0x1
  407466:	mov    rdi,rcx
  407469:	mov    esi,0x1
  40746e:	call   4031f0 <longjmp@plt>
  407473:	mov    rax,QWORD PTR [rip+0x114fe]        # 418978 <__bss_start@@Base+0x81c>
  40747a:	add    rax,0x1
  40747e:	mov    QWORD PTR [rip+0x114f3],rax        # 418978 <__bss_start@@Base+0x81c>
  407485:	mov    rax,QWORD PTR [rbp-0x50]
  407489:	add    rax,0x2
  40748d:	mov    QWORD PTR [rbp-0x50],rax
  407491:	mov    rax,QWORD PTR [rbp-0x58]
  407495:	add    rax,0x2
  407499:	mov    QWORD PTR [rbp-0x58],rax
  40749d:	jmp    407355 <UnityAssertEqualIntArray@@Base+0x4d5>
  4074a2:	mov    rax,QWORD PTR [rip+0x114d7]        # 418980 <__bss_start@@Base+0x824>
  4074a9:	add    rax,0x1
  4074ad:	mov    QWORD PTR [rip+0x114cc],rax        # 418980 <__bss_start@@Base+0x824>
  4074b4:	jmp    4077c9 <UnityAssertEqualIntArray@@Base+0x949>
  4074b9:	lea    rax,[rip+0xfb00]        # 416fc0 <UnitySizeMask@@Base+0x47b0>
  4074c0:	add    rax,0x18
  4074c4:	lea    rdi,[rip+0x10c7d]        # 418148 <__data_start@@Base+0x10>
  4074cb:	mov    rsi,rax
  4074ce:	call   40ab50 <UnityEnd@@Base+0x160>
  4074d3:	mov    rax,QWORD PTR [rip+0x114ae]        # 418988 <__bss_start@@Base+0x82c>
  4074da:	add    rax,0x1
  4074de:	mov    QWORD PTR [rip+0x114a3],rax        # 418988 <__bss_start@@Base+0x82c>
  4074e5:	mov    eax,0x25
  4074ea:	mov    ecx,eax
  4074ec:	mov    eax,0x24
  4074f1:	mov    edx,eax
  4074f3:	mov    eax,DWORD PTR [rbp-0x48]
  4074f6:	mov    esi,eax
  4074f8:	add    esi,0xffffffff
  4074fb:	mov    DWORD PTR [rbp-0x48],esi
  4074fe:	cmp    eax,0x0
  407501:	setne  dil
  407505:	cmp    eax,0x0
  407508:	cmovne rcx,rdx
  40750c:	lea    rdx,[rip+0x1135d]        # 418870 <__bss_start@@Base+0x714>
  407513:	mov    r8,QWORD PTR [rdx+rcx*8]
  407517:	add    r8,0x1
  40751b:	mov    QWORD PTR [rdx+rcx*8],r8
  40751f:	test   dil,0x1
  407523:	jne    40752e <UnityAssertEqualIntArray@@Base+0x6ae>
  407529:	jmp    407632 <UnityAssertEqualIntArray@@Base+0x7b2>
  40752e:	mov    eax,0x27
  407533:	mov    ecx,eax
  407535:	mov    eax,0x26
  40753a:	mov    edx,eax
  40753c:	mov    rsi,QWORD PTR [rbp-0x50]
  407540:	mov    rsi,QWORD PTR [rsi]
  407543:	mov    rdi,QWORD PTR [rbp-0x58]
  407547:	mov    rdi,QWORD PTR [rdi]
  40754a:	cmp    rsi,rdi
  40754d:	setne  r8b
  407551:	cmp    rsi,rdi
  407554:	cmovne rcx,rdx
  407558:	lea    rdx,[rip+0x11311]        # 418870 <__bss_start@@Base+0x714>
  40755f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407563:	add    rsi,0x1
  407567:	mov    QWORD PTR [rdx+rcx*8],rsi
  40756b:	test   r8b,0x1
  40756f:	jne    40757a <UnityAssertEqualIntArray@@Base+0x6fa>
  407575:	jmp    407603 <UnityAssertEqualIntArray@@Base+0x783>
  40757a:	mov    rdi,QWORD PTR [rbp-0x40]
  40757e:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  407583:	lea    rdi,[rip+0xb098]        # 412622 <UnityStrElement@@Base>
  40758a:	call   405610 <UnityPrint@@Base>
  40758f:	mov    eax,DWORD PTR [rbp-0x2c]
  407592:	sub    eax,DWORD PTR [rbp-0x48]
  407595:	sub    eax,0x1
  407598:	mov    eax,eax
  40759a:	mov    edi,eax
  40759c:	call   406230 <UnityPrintNumberUnsigned@@Base>
  4075a1:	lea    rdi,[rip+0xb064]        # 41260c <UnityStrExpected@@Base>
  4075a8:	call   405610 <UnityPrint@@Base>
  4075ad:	mov    rdi,QWORD PTR [rbp-0x50]
  4075b1:	mov    rdi,QWORD PTR [rdi]
  4075b4:	mov    esi,DWORD PTR [rbp-0x44]
  4075b7:	call   405e40 <UnityPrintNumberByStyle@@Base>
  4075bc:	lea    rdi,[rip+0xb054]        # 412617 <UnityStrWas@@Base>
  4075c3:	call   405610 <UnityPrint@@Base>
  4075c8:	mov    rdi,QWORD PTR [rbp-0x58]
  4075cc:	mov    rdi,QWORD PTR [rdi]
  4075cf:	mov    esi,DWORD PTR [rbp-0x44]
  4075d2:	call   405e40 <UnityPrintNumberByStyle@@Base>
  4075d7:	mov    rdi,QWORD PTR [rbp-0x38]
  4075db:	call   406b10 <UnityAssertBits@@Base+0x240>
  4075e0:	lea    rdi,[rip+0x12519]        # 419b00 <Unity@@Base>
  4075e7:	mov    rcx,rdi
  4075ea:	add    rcx,0x50
  4075ee:	mov    QWORD PTR [rdi+0x40],0x1
  4075f6:	mov    rdi,rcx
  4075f9:	mov    esi,0x1
  4075fe:	call   4031f0 <longjmp@plt>
  407603:	mov    rax,QWORD PTR [rip+0x113a6]        # 4189b0 <__bss_start@@Base+0x854>
  40760a:	add    rax,0x1
  40760e:	mov    QWORD PTR [rip+0x1139b],rax        # 4189b0 <__bss_start@@Base+0x854>
  407615:	mov    rax,QWORD PTR [rbp-0x50]
  407619:	add    rax,0x8
  40761d:	mov    QWORD PTR [rbp-0x50],rax
  407621:	mov    rax,QWORD PTR [rbp-0x58]
  407625:	add    rax,0x8
  407629:	mov    QWORD PTR [rbp-0x58],rax
  40762d:	jmp    4074e5 <UnityAssertEqualIntArray@@Base+0x665>
  407632:	mov    rax,QWORD PTR [rip+0x1137f]        # 4189b8 <__bss_start@@Base+0x85c>
  407639:	add    rax,0x1
  40763d:	mov    QWORD PTR [rip+0x11374],rax        # 4189b8 <__bss_start@@Base+0x85c>
  407644:	jmp    4077c9 <UnityAssertEqualIntArray@@Base+0x949>
  407649:	lea    rdi,[rip+0x10af8]        # 418148 <__data_start@@Base+0x10>
  407650:	lea    rsi,[rip+0xf969]        # 416fc0 <UnitySizeMask@@Base+0x47b0>
  407657:	call   40ab50 <UnityEnd@@Base+0x160>
  40765c:	mov    rsi,QWORD PTR [rip+0x1135d]        # 4189c0 <__bss_start@@Base+0x864>
  407663:	add    rsi,0x1
  407667:	mov    QWORD PTR [rip+0x11352],rsi        # 4189c0 <__bss_start@@Base+0x864>
  40766e:	mov    eax,0x2c
  407673:	mov    ecx,eax
  407675:	mov    eax,0x2b
  40767a:	mov    edx,eax
  40767c:	mov    eax,DWORD PTR [rbp-0x48]
  40767f:	mov    esi,eax
  407681:	add    esi,0xffffffff
  407684:	mov    DWORD PTR [rbp-0x48],esi
  407687:	cmp    eax,0x0
  40768a:	setne  dil
  40768e:	cmp    eax,0x0
  407691:	cmovne rcx,rdx
  407695:	lea    rdx,[rip+0x111d4]        # 418870 <__bss_start@@Base+0x714>
  40769c:	mov    r8,QWORD PTR [rdx+rcx*8]
  4076a0:	add    r8,0x1
  4076a4:	mov    QWORD PTR [rdx+rcx*8],r8
  4076a8:	test   dil,0x1
  4076ac:	jne    4076b7 <UnityAssertEqualIntArray@@Base+0x837>
  4076b2:	jmp    4077b7 <UnityAssertEqualIntArray@@Base+0x937>
  4076b7:	mov    eax,0x2e
  4076bc:	mov    ecx,eax
  4076be:	mov    eax,0x2d
  4076c3:	mov    edx,eax
  4076c5:	mov    rsi,QWORD PTR [rbp-0x50]
  4076c9:	mov    eax,DWORD PTR [rsi]
  4076cb:	mov    rsi,QWORD PTR [rbp-0x58]
  4076cf:	mov    edi,DWORD PTR [rsi]
  4076d1:	cmp    eax,edi
  4076d3:	setne  r8b
  4076d7:	cmp    eax,edi
  4076d9:	cmovne rcx,rdx
  4076dd:	lea    rdx,[rip+0x1118c]        # 418870 <__bss_start@@Base+0x714>
  4076e4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4076e8:	add    rsi,0x1
  4076ec:	mov    QWORD PTR [rdx+rcx*8],rsi
  4076f0:	test   r8b,0x1
  4076f4:	jne    4076ff <UnityAssertEqualIntArray@@Base+0x87f>
  4076fa:	jmp    407788 <UnityAssertEqualIntArray@@Base+0x908>
  4076ff:	mov    rdi,QWORD PTR [rbp-0x40]
  407703:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  407708:	lea    rdi,[rip+0xaf13]        # 412622 <UnityStrElement@@Base>
  40770f:	call   405610 <UnityPrint@@Base>
  407714:	mov    eax,DWORD PTR [rbp-0x2c]
  407717:	sub    eax,DWORD PTR [rbp-0x48]
  40771a:	sub    eax,0x1
  40771d:	mov    eax,eax
  40771f:	mov    edi,eax
  407721:	call   406230 <UnityPrintNumberUnsigned@@Base>
  407726:	lea    rdi,[rip+0xaedf]        # 41260c <UnityStrExpected@@Base>
  40772d:	call   405610 <UnityPrint@@Base>
  407732:	mov    rdi,QWORD PTR [rbp-0x50]
  407736:	movsxd rdi,DWORD PTR [rdi]
  407739:	mov    esi,DWORD PTR [rbp-0x44]
  40773c:	call   405e40 <UnityPrintNumberByStyle@@Base>
  407741:	lea    rdi,[rip+0xaecf]        # 412617 <UnityStrWas@@Base>
  407748:	call   405610 <UnityPrint@@Base>
  40774d:	mov    rdi,QWORD PTR [rbp-0x58]
  407751:	movsxd rdi,DWORD PTR [rdi]
  407754:	mov    esi,DWORD PTR [rbp-0x44]
  407757:	call   405e40 <UnityPrintNumberByStyle@@Base>
  40775c:	mov    rdi,QWORD PTR [rbp-0x38]
  407760:	call   406b10 <UnityAssertBits@@Base+0x240>
  407765:	lea    rdi,[rip+0x12394]        # 419b00 <Unity@@Base>
  40776c:	mov    rcx,rdi
  40776f:	add    rcx,0x50
  407773:	mov    QWORD PTR [rdi+0x40],0x1
  40777b:	mov    rdi,rcx
  40777e:	mov    esi,0x1
  407783:	call   4031f0 <longjmp@plt>
  407788:	mov    rax,QWORD PTR [rip+0x11259]        # 4189e8 <__bss_start@@Base+0x88c>
  40778f:	add    rax,0x1
  407793:	mov    QWORD PTR [rip+0x1124e],rax        # 4189e8 <__bss_start@@Base+0x88c>
  40779a:	mov    rax,QWORD PTR [rbp-0x50]
  40779e:	add    rax,0x4
  4077a2:	mov    QWORD PTR [rbp-0x50],rax
  4077a6:	mov    rax,QWORD PTR [rbp-0x58]
  4077aa:	add    rax,0x4
  4077ae:	mov    QWORD PTR [rbp-0x58],rax
  4077b2:	jmp    40766e <UnityAssertEqualIntArray@@Base+0x7ee>
  4077b7:	mov    rax,QWORD PTR [rip+0x11232]        # 4189f0 <__bss_start@@Base+0x894>
  4077be:	add    rax,0x1
  4077c2:	mov    QWORD PTR [rip+0x11227],rax        # 4189f0 <__bss_start@@Base+0x894>
  4077c9:	mov    rax,QWORD PTR [rip+0x11228]        # 4189f8 <__bss_start@@Base+0x89c>
  4077d0:	add    rax,0x1
  4077d4:	mov    QWORD PTR [rip+0x1121d],rax        # 4189f8 <__bss_start@@Base+0x89c>
  4077db:	add    rsp,0x98
  4077e2:	pop    rbx
  4077e3:	pop    r14
  4077e5:	pop    r15
  4077e7:	pop    rbp
  4077e8:	ret    
  4077e9:	nop    DWORD PTR [rax+0x0]
  4077f0:	push   rbp
  4077f1:	mov    rbp,rsp
  4077f4:	sub    rsp,0x50
  4077f8:	mov    rax,QWORD PTR [rip+0x11201]        # 418a00 <__bss_start@@Base+0x8a4>
  4077ff:	add    rax,0x1
  407803:	mov    QWORD PTR [rip+0x111f6],rax        # 418a00 <__bss_start@@Base+0x8a4>
  40780a:	mov    QWORD PTR [rbp-0x30],rdx
  40780e:	mov    QWORD PTR [rbp-0x38],rsi
  407812:	mov    QWORD PTR [rbp-0x40],rdi
  407816:	mov    QWORD PTR [rbp-0x48],rcx
  40781a:	mov    eax,0x2
  40781f:	mov    ecx,eax
  407821:	mov    eax,0x1
  407826:	mov    edx,eax
  407828:	mov    rsi,QWORD PTR [rbp-0x40]
  40782c:	mov    QWORD PTR [rbp-0x10],rsi
  407830:	mov    rdi,QWORD PTR [rbp-0x38]
  407834:	mov    QWORD PTR [rbp-0x18],rdi
  407838:	mov    r8,QWORD PTR [rbp-0x30]
  40783c:	mov    QWORD PTR [rbp-0x20],r8
  407840:	mov    r9,QWORD PTR [rbp-0x48]
  407844:	mov    QWORD PTR [rbp-0x28],r9
  407848:	mov    r10,QWORD PTR [rbp-0x10]
  40784c:	cmp    r10,0x0
  407850:	sete   r11b
  407854:	cmp    r10,0x0
  407858:	cmove  rcx,rdx
  40785c:	lea    rdx,[rip+0x1119d]        # 418a00 <__bss_start@@Base+0x8a4>
  407863:	mov    r10,QWORD PTR [rdx+rcx*8]
  407867:	add    r10,0x1
  40786b:	mov    QWORD PTR [rdx+rcx*8],r10
  40786f:	test   r11b,0x1
  407873:	jne    40787e <UnityAssertEqualIntArray@@Base+0x9fe>
  407879:	jmp    4078e0 <UnityAssertEqualIntArray@@Base+0xa60>
  40787e:	mov    eax,0x4
  407883:	mov    ecx,eax
  407885:	mov    eax,0x3
  40788a:	mov    edx,eax
  40788c:	mov    rsi,QWORD PTR [rbp-0x18]
  407890:	cmp    rsi,0x0
  407894:	sete   dil
  407898:	cmp    rsi,0x0
  40789c:	cmove  rcx,rdx
  4078a0:	lea    rdx,[rip+0x11159]        # 418a00 <__bss_start@@Base+0x8a4>
  4078a7:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4078ab:	add    rsi,0x1
  4078af:	mov    QWORD PTR [rdx+rcx*8],rsi
  4078b3:	test   dil,0x1
  4078b7:	jne    4078c2 <UnityAssertEqualIntArray@@Base+0xa42>
  4078bd:	jmp    4078e0 <UnityAssertEqualIntArray@@Base+0xa60>
  4078c2:	mov    rax,QWORD PTR [rip+0x1115f]        # 418a28 <__bss_start@@Base+0x8cc>
  4078c9:	add    rax,0x1
  4078cd:	mov    QWORD PTR [rip+0x11154],rax        # 418a28 <__bss_start@@Base+0x8cc>
  4078d4:	mov    DWORD PTR [rbp-0x4],0x1
  4078db:	jmp    407a03 <UnityAssertEqualIntArray@@Base+0xb83>
  4078e0:	mov    eax,0x7
  4078e5:	mov    ecx,eax
  4078e7:	mov    eax,0x6
  4078ec:	mov    edx,eax
  4078ee:	mov    rsi,QWORD PTR [rbp-0x10]
  4078f2:	cmp    rsi,0x0
  4078f6:	sete   dil
  4078fa:	cmp    rsi,0x0
  4078fe:	cmove  rcx,rdx
  407902:	lea    rdx,[rip+0x110f7]        # 418a00 <__bss_start@@Base+0x8a4>
  407909:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40790d:	add    rsi,0x1
  407911:	mov    QWORD PTR [rdx+rcx*8],rsi
  407915:	test   dil,0x1
  407919:	jne    407924 <UnityAssertEqualIntArray@@Base+0xaa4>
  40791f:	jmp    407965 <UnityAssertEqualIntArray@@Base+0xae5>
  407924:	mov    rdi,QWORD PTR [rbp-0x20]
  407928:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  40792d:	lea    rdi,[rip+0xad8c]        # 4126c0 <UnityStrNullPointerForExpected@@Base>
  407934:	call   405610 <UnityPrint@@Base>
  407939:	mov    rdi,QWORD PTR [rbp-0x28]
  40793d:	call   406b10 <UnityAssertBits@@Base+0x240>
  407942:	lea    rdi,[rip+0x121b7]        # 419b00 <Unity@@Base>
  407949:	mov    rax,rdi
  40794c:	add    rax,0x50
  407950:	mov    QWORD PTR [rdi+0x40],0x1
  407958:	mov    rdi,rax
  40795b:	mov    esi,0x1
  407960:	call   4031f0 <longjmp@plt>
  407965:	mov    eax,0x9
  40796a:	mov    ecx,eax
  40796c:	mov    eax,0x8
  407971:	mov    edx,eax
  407973:	mov    rsi,QWORD PTR [rbp-0x18]
  407977:	cmp    rsi,0x0
  40797b:	sete   dil
  40797f:	cmp    rsi,0x0
  407983:	cmove  rcx,rdx
  407987:	lea    rdx,[rip+0x11072]        # 418a00 <__bss_start@@Base+0x8a4>
  40798e:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407992:	add    rsi,0x1
  407996:	mov    QWORD PTR [rdx+rcx*8],rsi
  40799a:	test   dil,0x1
  40799e:	jne    4079a9 <UnityAssertEqualIntArray@@Base+0xb29>
  4079a4:	jmp    4079ea <UnityAssertEqualIntArray@@Base+0xb6a>
  4079a9:	mov    rdi,QWORD PTR [rbp-0x20]
  4079ad:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  4079b2:	lea    rdi,[rip+0xad27]        # 4126e0 <UnityStrNullPointerForActual@@Base>
  4079b9:	call   405610 <UnityPrint@@Base>
  4079be:	mov    rdi,QWORD PTR [rbp-0x28]
  4079c2:	call   406b10 <UnityAssertBits@@Base+0x240>
  4079c7:	lea    rdi,[rip+0x12132]        # 419b00 <Unity@@Base>
  4079ce:	mov    rax,rdi
  4079d1:	add    rax,0x50
  4079d5:	mov    QWORD PTR [rdi+0x40],0x1
  4079dd:	mov    rdi,rax
  4079e0:	mov    esi,0x1
  4079e5:	call   4031f0 <longjmp@plt>
  4079ea:	mov    rax,QWORD PTR [rip+0x1105f]        # 418a50 <__bss_start@@Base+0x8f4>
  4079f1:	add    rax,0x1
  4079f5:	mov    QWORD PTR [rip+0x11054],rax        # 418a50 <__bss_start@@Base+0x8f4>
  4079fc:	mov    DWORD PTR [rbp-0x4],0x0
  407a03:	mov    rax,QWORD PTR [rip+0x1104e]        # 418a58 <__bss_start@@Base+0x8fc>
  407a0a:	add    rax,0x1
  407a0e:	mov    QWORD PTR [rip+0x11043],rax        # 418a58 <__bss_start@@Base+0x8fc>
  407a15:	mov    eax,DWORD PTR [rbp-0x4]
  407a18:	add    rsp,0x50
  407a1c:	pop    rbp
  407a1d:	ret    
  407a1e:	xchg   ax,ax

0000000000407a20 <UnityAssertEqualFloatArray@@Base>:
  407a20:	push   rbp
  407a21:	mov    rbp,rsp
  407a24:	push   r14
  407a26:	push   rbx
  407a27:	sub    rsp,0x80
  407a2e:	mov    rax,QWORD PTR [rip+0x1102b]        # 418a60 <__bss_start@@Base+0x904>
  407a35:	add    rax,0x1
  407a39:	mov    QWORD PTR [rip+0x11020],rax        # 418a60 <__bss_start@@Base+0x904>
  407a40:	mov    QWORD PTR [rbp-0x60],rcx
  407a44:	mov    DWORD PTR [rbp-0x64],edx
  407a47:	mov    QWORD PTR [rbp-0x70],rsi
  407a4b:	mov    QWORD PTR [rbp-0x78],rdi
  407a4f:	mov    QWORD PTR [rbp-0x80],r8
  407a53:	mov    eax,0x2
  407a58:	mov    ecx,eax
  407a5a:	mov    eax,0x1
  407a5f:	mov    edx,eax
  407a61:	lea    rsi,[rip+0x12098]        # 419b00 <Unity@@Base>
  407a68:	mov    rdi,QWORD PTR [rbp-0x78]
  407a6c:	mov    QWORD PTR [rbp-0x18],rdi
  407a70:	mov    r8,QWORD PTR [rbp-0x70]
  407a74:	mov    QWORD PTR [rbp-0x20],r8
  407a78:	mov    eax,DWORD PTR [rbp-0x64]
  407a7b:	mov    DWORD PTR [rbp-0x24],eax
  407a7e:	mov    r9,QWORD PTR [rbp-0x60]
  407a82:	mov    QWORD PTR [rbp-0x30],r9
  407a86:	mov    r10,QWORD PTR [rbp-0x80]
  407a8a:	mov    QWORD PTR [rbp-0x38],r10
  407a8e:	mov    r11d,DWORD PTR [rbp-0x24]
  407a92:	mov    DWORD PTR [rbp-0x3c],r11d
  407a96:	mov    rbx,QWORD PTR [rbp-0x18]
  407a9a:	mov    QWORD PTR [rbp-0x48],rbx
  407a9e:	mov    rbx,QWORD PTR [rbp-0x20]
  407aa2:	mov    QWORD PTR [rbp-0x50],rbx
  407aa6:	mov    rsi,QWORD PTR [rsi+0x40]
  407aaa:	cmp    rsi,0x0
  407aae:	setne  r14b
  407ab2:	cmp    rsi,0x0
  407ab6:	cmovne rcx,rdx
  407aba:	lea    rdx,[rip+0x10f9f]        # 418a60 <__bss_start@@Base+0x904>
  407ac1:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407ac5:	add    rsi,0x1
  407ac9:	mov    QWORD PTR [rdx+rcx*8],rsi
  407acd:	test   r14b,0x1
  407ad1:	jne    407b22 <UnityAssertEqualFloatArray@@Base+0x102>
  407ad7:	mov    eax,0x4
  407adc:	mov    ecx,eax
  407ade:	mov    eax,0x3
  407ae3:	mov    edx,eax
  407ae5:	lea    rsi,[rip+0x12014]        # 419b00 <Unity@@Base>
  407aec:	mov    rsi,QWORD PTR [rsi+0x48]
  407af0:	cmp    rsi,0x0
  407af4:	setne  dil
  407af8:	cmp    rsi,0x0
  407afc:	cmovne rcx,rdx
  407b00:	lea    rdx,[rip+0x10f59]        # 418a60 <__bss_start@@Base+0x904>
  407b07:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407b0b:	add    rsi,0x1
  407b0f:	mov    QWORD PTR [rdx+rcx*8],rsi
  407b13:	test   dil,0x1
  407b17:	jne    407b22 <UnityAssertEqualFloatArray@@Base+0x102>
  407b1d:	jmp    407b39 <UnityAssertEqualFloatArray@@Base+0x119>
  407b22:	mov    rax,QWORD PTR [rip+0x10f5f]        # 418a88 <__bss_start@@Base+0x92c>
  407b29:	add    rax,0x1
  407b2d:	mov    QWORD PTR [rip+0x10f54],rax        # 418a88 <__bss_start@@Base+0x92c>
  407b34:	jmp    407ec9 <UnityAssertEqualFloatArray@@Base+0x4a9>
  407b39:	mov    eax,0x7
  407b3e:	mov    ecx,eax
  407b40:	mov    eax,0x6
  407b45:	mov    edx,eax
  407b47:	mov    eax,DWORD PTR [rbp-0x3c]
  407b4a:	cmp    eax,0x0
  407b4d:	sete   sil
  407b51:	cmp    eax,0x0
  407b54:	cmove  rcx,rdx
  407b58:	lea    rdx,[rip+0x10f01]        # 418a60 <__bss_start@@Base+0x904>
  407b5f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407b63:	add    rdi,0x1
  407b67:	mov    QWORD PTR [rdx+rcx*8],rdi
  407b6b:	test   sil,0x1
  407b6f:	jne    407b7a <UnityAssertEqualFloatArray@@Base+0x15a>
  407b75:	jmp    407bbb <UnityAssertEqualFloatArray@@Base+0x19b>
  407b7a:	mov    rdi,QWORD PTR [rbp-0x38]
  407b7e:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  407b83:	lea    rdi,[rip+0xaaf6]        # 412680 <UnityStrPointless@@Base>
  407b8a:	call   405610 <UnityPrint@@Base>
  407b8f:	mov    rdi,QWORD PTR [rbp-0x30]
  407b93:	call   406b10 <UnityAssertBits@@Base+0x240>
  407b98:	lea    rdi,[rip+0x11f61]        # 419b00 <Unity@@Base>
  407b9f:	mov    rax,rdi
  407ba2:	add    rax,0x50
  407ba6:	mov    QWORD PTR [rdi+0x40],0x1
  407bae:	mov    rdi,rax
  407bb1:	mov    esi,0x1
  407bb6:	call   4031f0 <longjmp@plt>
  407bbb:	mov    rax,QWORD PTR [rbp-0x18]
  407bbf:	mov    rcx,QWORD PTR [rbp-0x20]
  407bc3:	mov    rdx,QWORD PTR [rbp-0x38]
  407bc7:	mov    rsi,QWORD PTR [rbp-0x30]
  407bcb:	mov    rdi,rax
  407bce:	mov    QWORD PTR [rbp-0x88],rsi
  407bd5:	mov    rsi,rcx
  407bd8:	mov    rcx,QWORD PTR [rbp-0x88]
  407bdf:	call   4077f0 <UnityAssertEqualIntArray@@Base+0x970>
  407be4:	mov    r8d,0x9
  407bea:	mov    ecx,r8d
  407bed:	mov    r8d,0x8
  407bf3:	mov    edx,r8d
  407bf6:	cmp    eax,0x1
  407bf9:	sete   r9b
  407bfd:	cmp    eax,0x1
  407c00:	cmove  rcx,rdx
  407c04:	lea    rdx,[rip+0x10e55]        # 418a60 <__bss_start@@Base+0x904>
  407c0b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407c0f:	add    rsi,0x1
  407c13:	mov    QWORD PTR [rdx+rcx*8],rsi
  407c17:	test   r9b,0x1
  407c1b:	jne    407c26 <UnityAssertEqualFloatArray@@Base+0x206>
  407c21:	jmp    407c3d <UnityAssertEqualFloatArray@@Base+0x21d>
  407c26:	mov    rax,QWORD PTR [rip+0x10e83]        # 418ab0 <__bss_start@@Base+0x954>
  407c2d:	add    rax,0x1
  407c31:	mov    QWORD PTR [rip+0x10e78],rax        # 418ab0 <__bss_start@@Base+0x954>
  407c38:	jmp    407ec9 <UnityAssertEqualFloatArray@@Base+0x4a9>
  407c3d:	mov    rax,QWORD PTR [rip+0x10e74]        # 418ab8 <__bss_start@@Base+0x95c>
  407c44:	add    rax,0x1
  407c48:	mov    QWORD PTR [rip+0x10e69],rax        # 418ab8 <__bss_start@@Base+0x95c>
  407c4f:	mov    eax,0xd
  407c54:	mov    ecx,eax
  407c56:	mov    eax,0xc
  407c5b:	mov    edx,eax
  407c5d:	mov    eax,DWORD PTR [rbp-0x3c]
  407c60:	mov    esi,eax
  407c62:	add    esi,0xffffffff
  407c65:	mov    DWORD PTR [rbp-0x3c],esi
  407c68:	cmp    eax,0x0
  407c6b:	setne  dil
  407c6f:	cmp    eax,0x0
  407c72:	cmovne rcx,rdx
  407c76:	lea    rdx,[rip+0x10de3]        # 418a60 <__bss_start@@Base+0x904>
  407c7d:	mov    r8,QWORD PTR [rdx+rcx*8]
  407c81:	add    r8,0x1
  407c85:	mov    QWORD PTR [rdx+rcx*8],r8
  407c89:	test   dil,0x1
  407c8d:	jne    407c98 <UnityAssertEqualFloatArray@@Base+0x278>
  407c93:	jmp    407ec9 <UnityAssertEqualFloatArray@@Base+0x4a9>
  407c98:	mov    eax,0xf
  407c9d:	mov    ecx,eax
  407c9f:	mov    eax,0xe
  407ca4:	mov    edx,eax
  407ca6:	mov    rsi,QWORD PTR [rbp-0x48]
  407caa:	vmovss xmm0,DWORD PTR [rsi]
  407cae:	mov    rsi,QWORD PTR [rbp-0x50]
  407cb2:	vsubss xmm0,xmm0,DWORD PTR [rsi]
  407cb6:	vmovss DWORD PTR [rbp-0x54],xmm0
  407cbb:	vmovss xmm0,DWORD PTR [rbp-0x54]
  407cc0:	vxorps xmm1,xmm1,xmm1
  407cc4:	vucomiss xmm1,xmm0
  407cc8:	seta   dil
  407ccc:	vucomiss xmm1,xmm0
  407cd0:	cmova  rcx,rdx
  407cd4:	lea    rdx,[rip+0x10d85]        # 418a60 <__bss_start@@Base+0x904>
  407cdb:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407cdf:	add    rsi,0x1
  407ce3:	mov    QWORD PTR [rdx+rcx*8],rsi
  407ce7:	test   dil,0x1
  407ceb:	jne    407cf6 <UnityAssertEqualFloatArray@@Base+0x2d6>
  407cf1:	jmp    407d16 <UnityAssertEqualFloatArray@@Base+0x2f6>
  407cf6:	mov    rax,QWORD PTR [rip+0x10de3]        # 418ae0 <__bss_start@@Base+0x984>
  407cfd:	add    rax,0x1
  407d01:	mov    QWORD PTR [rip+0x10dd8],rax        # 418ae0 <__bss_start@@Base+0x984>
  407d08:	vxorps xmm0,xmm0,xmm0
  407d0c:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x54]
  407d11:	vmovss DWORD PTR [rbp-0x54],xmm0
  407d16:	mov    eax,0x12
  407d1b:	mov    ecx,eax
  407d1d:	mov    eax,0x11
  407d22:	mov    edx,eax
  407d24:	vmovss xmm0,DWORD PTR [rip+0xa88c]        # 4125b8 <_IO_stdin_used@@Base+0x5b8>
  407d2c:	mov    rsi,QWORD PTR [rbp-0x48]
  407d30:	vmulss xmm0,xmm0,DWORD PTR [rsi]
  407d34:	vmovss DWORD PTR [rbp-0x58],xmm0
  407d39:	vmovss xmm0,DWORD PTR [rbp-0x58]
  407d3e:	vxorps xmm1,xmm1,xmm1
  407d42:	vucomiss xmm1,xmm0
  407d46:	seta   dil
  407d4a:	vucomiss xmm1,xmm0
  407d4e:	cmova  rcx,rdx
  407d52:	lea    rdx,[rip+0x10d07]        # 418a60 <__bss_start@@Base+0x904>
  407d59:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407d5d:	add    rsi,0x1
  407d61:	mov    QWORD PTR [rdx+rcx*8],rsi
  407d65:	test   dil,0x1
  407d69:	jne    407d74 <UnityAssertEqualFloatArray@@Base+0x354>
  407d6f:	jmp    407d94 <UnityAssertEqualFloatArray@@Base+0x374>
  407d74:	mov    rax,QWORD PTR [rip+0x10d7d]        # 418af8 <__bss_start@@Base+0x99c>
  407d7b:	add    rax,0x1
  407d7f:	mov    QWORD PTR [rip+0x10d72],rax        # 418af8 <__bss_start@@Base+0x99c>
  407d86:	vxorps xmm0,xmm0,xmm0
  407d8a:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x58]
  407d8f:	vmovss DWORD PTR [rbp-0x58],xmm0
  407d94:	mov    eax,0x15
  407d99:	mov    ecx,eax
  407d9b:	mov    eax,0x14
  407da0:	mov    edx,eax
  407da2:	vxorps xmm0,xmm0,xmm0
  407da6:	vmulss xmm1,xmm0,DWORD PTR [rbp-0x54]
  407dab:	vucomiss xmm1,xmm0
  407daf:	setne  sil
  407db3:	setp   dil
  407db7:	or     sil,dil
  407dba:	vucomiss xmm1,xmm0
  407dbe:	setp   dil
  407dc2:	setne  r8b
  407dc6:	or     r8b,dil
  407dc9:	cmovne rcx,rdx
  407dcd:	lea    rdx,[rip+0x10c8c]        # 418a60 <__bss_start@@Base+0x904>
  407dd4:	mov    r9,QWORD PTR [rdx+rcx*8]
  407dd8:	add    r9,0x1
  407ddc:	mov    QWORD PTR [rdx+rcx*8],r9
  407de0:	test   sil,0x1
  407de4:	mov    BYTE PTR [rbp-0x89],r8b
  407deb:	jne    407e3b <UnityAssertEqualFloatArray@@Base+0x41b>
  407df1:	mov    eax,0x17
  407df6:	mov    ecx,eax
  407df8:	mov    eax,0x16
  407dfd:	mov    edx,eax
  407dff:	vmovss xmm0,DWORD PTR [rbp-0x54]
  407e04:	vmovss xmm1,DWORD PTR [rbp-0x58]
  407e09:	vucomiss xmm0,xmm1
  407e0d:	seta   sil
  407e11:	vucomiss xmm0,xmm1
  407e15:	cmova  rcx,rdx
  407e19:	lea    rdx,[rip+0x10c40]        # 418a60 <__bss_start@@Base+0x904>
  407e20:	mov    rdi,QWORD PTR [rdx+rcx*8]
  407e24:	add    rdi,0x1
  407e28:	mov    QWORD PTR [rdx+rcx*8],rdi
  407e2c:	test   sil,0x1
  407e30:	jne    407e3b <UnityAssertEqualFloatArray@@Base+0x41b>
  407e36:	jmp    407e9a <UnityAssertEqualFloatArray@@Base+0x47a>
  407e3b:	mov    rdi,QWORD PTR [rbp-0x38]
  407e3f:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  407e44:	lea    rdi,[rip+0xa7d7]        # 412622 <UnityStrElement@@Base>
  407e4b:	call   405610 <UnityPrint@@Base>
  407e50:	mov    eax,DWORD PTR [rbp-0x24]
  407e53:	sub    eax,DWORD PTR [rbp-0x3c]
  407e56:	sub    eax,0x1
  407e59:	mov    eax,eax
  407e5b:	mov    edi,eax
  407e5d:	call   406230 <UnityPrintNumberUnsigned@@Base>
  407e62:	lea    rdi,[rip+0xa7f7]        # 412660 <UnityStrDelta@@Base>
  407e69:	call   405610 <UnityPrint@@Base>
  407e6e:	mov    rdi,QWORD PTR [rbp-0x30]
  407e72:	call   406b10 <UnityAssertBits@@Base+0x240>
  407e77:	lea    rdi,[rip+0x11c82]        # 419b00 <Unity@@Base>
  407e7e:	mov    rcx,rdi
  407e81:	add    rcx,0x50
  407e85:	mov    QWORD PTR [rdi+0x40],0x1
  407e8d:	mov    rdi,rcx
  407e90:	mov    esi,0x1
  407e95:	call   4031f0 <longjmp@plt>
  407e9a:	mov    rax,QWORD PTR [rip+0x10c7f]        # 418b20 <__bss_start@@Base+0x9c4>
  407ea1:	add    rax,0x1
  407ea5:	mov    QWORD PTR [rip+0x10c74],rax        # 418b20 <__bss_start@@Base+0x9c4>
  407eac:	mov    rax,QWORD PTR [rbp-0x48]
  407eb0:	add    rax,0x4
  407eb4:	mov    QWORD PTR [rbp-0x48],rax
  407eb8:	mov    rax,QWORD PTR [rbp-0x50]
  407ebc:	add    rax,0x4
  407ec0:	mov    QWORD PTR [rbp-0x50],rax
  407ec4:	jmp    407c4f <UnityAssertEqualFloatArray@@Base+0x22f>
  407ec9:	mov    rax,QWORD PTR [rip+0x10c58]        # 418b28 <__bss_start@@Base+0x9cc>
  407ed0:	add    rax,0x1
  407ed4:	mov    QWORD PTR [rip+0x10c4d],rax        # 418b28 <__bss_start@@Base+0x9cc>
  407edb:	add    rsp,0x80
  407ee2:	pop    rbx
  407ee3:	pop    r14
  407ee5:	pop    rbp
  407ee6:	ret    
  407ee7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407ef0 <UnityAssertFloatsWithin@@Base>:
  407ef0:	push   rbp
  407ef1:	mov    rbp,rsp
  407ef4:	sub    rsp,0x50
  407ef8:	mov    rax,QWORD PTR [rip+0x10c31]        # 418b30 <__bss_start@@Base+0x9d4>
  407eff:	add    rax,0x1
  407f03:	mov    QWORD PTR [rip+0x10c26],rax        # 418b30 <__bss_start@@Base+0x9d4>
  407f0a:	mov    QWORD PTR [rbp-0x30],rdi
  407f0e:	vmovss DWORD PTR [rbp-0x34],xmm2
  407f13:	vmovss DWORD PTR [rbp-0x38],xmm1
  407f18:	vmovss DWORD PTR [rbp-0x3c],xmm0
  407f1d:	mov    QWORD PTR [rbp-0x48],rsi
  407f21:	mov    eax,0x2
  407f26:	mov    ecx,eax
  407f28:	mov    eax,0x1
  407f2d:	mov    edx,eax
  407f2f:	lea    rsi,[rip+0x11bca]        # 419b00 <Unity@@Base>
  407f36:	vmovss xmm0,DWORD PTR [rbp-0x3c]
  407f3b:	vmovss DWORD PTR [rbp-0x4],xmm0
  407f40:	vmovss xmm1,DWORD PTR [rbp-0x38]
  407f45:	vmovss DWORD PTR [rbp-0x8],xmm1
  407f4a:	vmovss xmm2,DWORD PTR [rbp-0x34]
  407f4f:	vmovss DWORD PTR [rbp-0xc],xmm2
  407f54:	mov    rdi,QWORD PTR [rbp-0x30]
  407f58:	mov    QWORD PTR [rbp-0x18],rdi
  407f5c:	mov    r8,QWORD PTR [rbp-0x48]
  407f60:	mov    QWORD PTR [rbp-0x20],r8
  407f64:	vmovss xmm3,DWORD PTR [rbp-0xc]
  407f69:	vsubss xmm3,xmm3,DWORD PTR [rbp-0x8]
  407f6e:	vmovss DWORD PTR [rbp-0x24],xmm3
  407f73:	vmovss xmm3,DWORD PTR [rbp-0x4]
  407f78:	vmovss DWORD PTR [rbp-0x28],xmm3
  407f7d:	mov    rsi,QWORD PTR [rsi+0x40]
  407f81:	cmp    rsi,0x0
  407f85:	setne  r9b
  407f89:	cmp    rsi,0x0
  407f8d:	cmovne rcx,rdx
  407f91:	lea    rdx,[rip+0x10b98]        # 418b30 <__bss_start@@Base+0x9d4>
  407f98:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407f9c:	add    rsi,0x1
  407fa0:	mov    QWORD PTR [rdx+rcx*8],rsi
  407fa4:	test   r9b,0x1
  407fa8:	jne    407ff9 <UnityAssertFloatsWithin@@Base+0x109>
  407fae:	mov    eax,0x4
  407fb3:	mov    ecx,eax
  407fb5:	mov    eax,0x3
  407fba:	mov    edx,eax
  407fbc:	lea    rsi,[rip+0x11b3d]        # 419b00 <Unity@@Base>
  407fc3:	mov    rsi,QWORD PTR [rsi+0x48]
  407fc7:	cmp    rsi,0x0
  407fcb:	setne  dil
  407fcf:	cmp    rsi,0x0
  407fd3:	cmovne rcx,rdx
  407fd7:	lea    rdx,[rip+0x10b52]        # 418b30 <__bss_start@@Base+0x9d4>
  407fde:	mov    rsi,QWORD PTR [rdx+rcx*8]
  407fe2:	add    rsi,0x1
  407fe6:	mov    QWORD PTR [rdx+rcx*8],rsi
  407fea:	test   dil,0x1
  407fee:	jne    407ff9 <UnityAssertFloatsWithin@@Base+0x109>
  407ff4:	jmp    408010 <UnityAssertFloatsWithin@@Base+0x120>
  407ff9:	mov    rax,QWORD PTR [rip+0x10b58]        # 418b58 <__bss_start@@Base+0x9fc>
  408000:	add    rax,0x1
  408004:	mov    QWORD PTR [rip+0x10b4d],rax        # 418b58 <__bss_start@@Base+0x9fc>
  40800b:	jmp    4081c7 <UnityAssertFloatsWithin@@Base+0x2d7>
  408010:	mov    eax,0x7
  408015:	mov    ecx,eax
  408017:	mov    eax,0x6
  40801c:	mov    edx,eax
  40801e:	vmovss xmm0,DWORD PTR [rbp-0x24]
  408023:	vxorps xmm1,xmm1,xmm1
  408027:	vucomiss xmm1,xmm0
  40802b:	seta   sil
  40802f:	vucomiss xmm1,xmm0
  408033:	cmova  rcx,rdx
  408037:	lea    rdx,[rip+0x10af2]        # 418b30 <__bss_start@@Base+0x9d4>
  40803e:	mov    rdi,QWORD PTR [rdx+rcx*8]
  408042:	add    rdi,0x1
  408046:	mov    QWORD PTR [rdx+rcx*8],rdi
  40804a:	test   sil,0x1
  40804e:	jne    408059 <UnityAssertFloatsWithin@@Base+0x169>
  408054:	jmp    408079 <UnityAssertFloatsWithin@@Base+0x189>
  408059:	mov    rax,QWORD PTR [rip+0x10b10]        # 418b70 <__bss_start@@Base+0xa14>
  408060:	add    rax,0x1
  408064:	mov    QWORD PTR [rip+0x10b05],rax        # 418b70 <__bss_start@@Base+0xa14>
  40806b:	vxorps xmm0,xmm0,xmm0
  40806f:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x24]
  408074:	vmovss DWORD PTR [rbp-0x24],xmm0
  408079:	mov    eax,0xa
  40807e:	mov    ecx,eax
  408080:	mov    eax,0x9
  408085:	mov    edx,eax
  408087:	vmovss xmm0,DWORD PTR [rbp-0x28]
  40808c:	vxorps xmm1,xmm1,xmm1
  408090:	vucomiss xmm1,xmm0
  408094:	seta   sil
  408098:	vucomiss xmm1,xmm0
  40809c:	cmova  rcx,rdx
  4080a0:	lea    rdx,[rip+0x10a89]        # 418b30 <__bss_start@@Base+0x9d4>
  4080a7:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4080ab:	add    rdi,0x1
  4080af:	mov    QWORD PTR [rdx+rcx*8],rdi
  4080b3:	test   sil,0x1
  4080b7:	jne    4080c2 <UnityAssertFloatsWithin@@Base+0x1d2>
  4080bd:	jmp    4080e2 <UnityAssertFloatsWithin@@Base+0x1f2>
  4080c2:	mov    rax,QWORD PTR [rip+0x10abf]        # 418b88 <__bss_start@@Base+0xa2c>
  4080c9:	add    rax,0x1
  4080cd:	mov    QWORD PTR [rip+0x10ab4],rax        # 418b88 <__bss_start@@Base+0xa2c>
  4080d4:	vxorps xmm0,xmm0,xmm0
  4080d8:	vsubss xmm0,xmm0,DWORD PTR [rbp-0x28]
  4080dd:	vmovss DWORD PTR [rbp-0x28],xmm0
  4080e2:	mov    eax,0xd
  4080e7:	mov    ecx,eax
  4080e9:	mov    eax,0xc
  4080ee:	mov    edx,eax
  4080f0:	vxorps xmm0,xmm0,xmm0
  4080f4:	vmulss xmm1,xmm0,DWORD PTR [rbp-0x24]
  4080f9:	vucomiss xmm1,xmm0
  4080fd:	setne  sil
  408101:	setp   dil
  408105:	or     sil,dil
  408108:	vucomiss xmm1,xmm0
  40810c:	setp   dil
  408110:	setne  r8b
  408114:	or     r8b,dil
  408117:	cmovne rcx,rdx
  40811b:	lea    rdx,[rip+0x10a0e]        # 418b30 <__bss_start@@Base+0x9d4>
  408122:	mov    r9,QWORD PTR [rdx+rcx*8]
  408126:	add    r9,0x1
  40812a:	mov    QWORD PTR [rdx+rcx*8],r9
  40812e:	test   sil,0x1
  408132:	mov    BYTE PTR [rbp-0x49],r8b
  408136:	jne    408186 <UnityAssertFloatsWithin@@Base+0x296>
  40813c:	mov    eax,0xf
  408141:	mov    ecx,eax
  408143:	mov    eax,0xe
  408148:	mov    edx,eax
  40814a:	vmovss xmm0,DWORD PTR [rbp-0x28]
  40814f:	vmovss xmm1,DWORD PTR [rbp-0x24]
  408154:	vucomiss xmm1,xmm0
  408158:	seta   sil
  40815c:	vucomiss xmm1,xmm0
  408160:	cmova  rcx,rdx
  408164:	lea    rdx,[rip+0x109c5]        # 418b30 <__bss_start@@Base+0x9d4>
  40816b:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40816f:	add    rdi,0x1
  408173:	mov    QWORD PTR [rdx+rcx*8],rdi
  408177:	test   sil,0x1
  40817b:	jne    408186 <UnityAssertFloatsWithin@@Base+0x296>
  408181:	jmp    4081c7 <UnityAssertFloatsWithin@@Base+0x2d7>
  408186:	mov    rdi,QWORD PTR [rbp-0x20]
  40818a:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  40818f:	lea    rdi,[rip+0xa4ca]        # 412660 <UnityStrDelta@@Base>
  408196:	call   405610 <UnityPrint@@Base>
  40819b:	mov    rdi,QWORD PTR [rbp-0x18]
  40819f:	call   406b10 <UnityAssertBits@@Base+0x240>
  4081a4:	lea    rdi,[rip+0x11955]        # 419b00 <Unity@@Base>
  4081ab:	mov    rax,rdi
  4081ae:	add    rax,0x50
  4081b2:	mov    QWORD PTR [rdi+0x40],0x1
  4081ba:	mov    rdi,rax
  4081bd:	mov    esi,0x1
  4081c2:	call   4031f0 <longjmp@plt>
  4081c7:	mov    rax,QWORD PTR [rip+0x109e2]        # 418bb0 <__bss_start@@Base+0xa54>
  4081ce:	add    rax,0x1
  4081d2:	mov    QWORD PTR [rip+0x109d7],rax        # 418bb0 <__bss_start@@Base+0xa54>
  4081d9:	add    rsp,0x50
  4081dd:	pop    rbp
  4081de:	ret    
  4081df:	nop

00000000004081e0 <UnityAssertFloatSpecial@@Base>:
  4081e0:	push   rbp
  4081e1:	mov    rbp,rsp
  4081e4:	sub    rsp,0x80
  4081eb:	mov    rax,QWORD PTR [rip+0x109ce]        # 418bc0 <__bss_start@@Base+0xa64>
  4081f2:	add    rax,0x1
  4081f6:	mov    QWORD PTR [rip+0x109c3],rax        # 418bc0 <__bss_start@@Base+0xa64>
  4081fd:	mov    QWORD PTR [rbp-0x60],rsi
  408201:	mov    QWORD PTR [rbp-0x68],rdi
  408205:	vmovss DWORD PTR [rbp-0x6c],xmm0
  40820a:	mov    DWORD PTR [rbp-0x70],edx
  40820d:	mov    eax,0x2
  408212:	mov    ecx,eax
  408214:	mov    eax,0x1
  408219:	mov    edx,eax
  40821b:	lea    rsi,[rip+0x118de]        # 419b00 <Unity@@Base>
  408222:	vmovss xmm0,DWORD PTR [rbp-0x6c]
  408227:	vmovss DWORD PTR [rbp-0x4],xmm0
  40822c:	mov    rdi,QWORD PTR [rbp-0x68]
  408230:	mov    QWORD PTR [rbp-0x10],rdi
  408234:	mov    r8,QWORD PTR [rbp-0x60]
  408238:	mov    QWORD PTR [rbp-0x18],r8
  40823c:	mov    eax,DWORD PTR [rbp-0x70]
  40823f:	mov    DWORD PTR [rbp-0x1c],eax
  408242:	mov    r9,QWORD PTR [rip+0xed57]        # 416fa0 <UnitySizeMask@@Base+0x4790>
  408249:	mov    QWORD PTR [rbp-0x40],r9
  40824d:	mov    r9,QWORD PTR [rip+0xed54]        # 416fa8 <UnitySizeMask@@Base+0x4798>
  408254:	mov    QWORD PTR [rbp-0x38],r9
  408258:	mov    r9,QWORD PTR [rip+0xed51]        # 416fb0 <UnitySizeMask@@Base+0x47a0>
  40825f:	mov    QWORD PTR [rbp-0x30],r9
  408263:	mov    r9,QWORD PTR [rip+0xed4e]        # 416fb8 <UnitySizeMask@@Base+0x47a8>
  40826a:	mov    QWORD PTR [rbp-0x28],r9
  40826e:	mov    r10d,DWORD PTR [rbp-0x1c]
  408272:	mov    r9d,r10d
  408275:	and    r9,0x1
  408279:	mov    QWORD PTR [rbp-0x48],r9
  40827d:	cmp    QWORD PTR [rbp-0x48],0x0
  408282:	setne  r11b
  408286:	xor    r11b,0xff
  40828a:	and    r11b,0x1
  40828e:	movzx  r10d,r11b
  408292:	movsxd r9,r10d
  408295:	mov    QWORD PTR [rbp-0x50],r9
  408299:	mov    r10d,DWORD PTR [rbp-0x1c]
  40829d:	shr    r10d,0x1
  4082a1:	mov    r10d,r10d
  4082a4:	mov    r9d,r10d
  4082a7:	mov    QWORD PTR [rbp-0x58],r9
  4082ab:	mov    rsi,QWORD PTR [rsi+0x40]
  4082af:	cmp    rsi,0x0
  4082b3:	setne  r11b
  4082b7:	cmp    rsi,0x0
  4082bb:	cmovne rcx,rdx
  4082bf:	lea    rdx,[rip+0x108fa]        # 418bc0 <__bss_start@@Base+0xa64>
  4082c6:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4082ca:	add    rsi,0x1
  4082ce:	mov    QWORD PTR [rdx+rcx*8],rsi
  4082d2:	test   r11b,0x1
  4082d6:	jne    408327 <UnityAssertFloatSpecial@@Base+0x147>
  4082dc:	mov    eax,0x4
  4082e1:	mov    ecx,eax
  4082e3:	mov    eax,0x3
  4082e8:	mov    edx,eax
  4082ea:	lea    rsi,[rip+0x1180f]        # 419b00 <Unity@@Base>
  4082f1:	mov    rsi,QWORD PTR [rsi+0x48]
  4082f5:	cmp    rsi,0x0
  4082f9:	setne  dil
  4082fd:	cmp    rsi,0x0
  408301:	cmovne rcx,rdx
  408305:	lea    rdx,[rip+0x108b4]        # 418bc0 <__bss_start@@Base+0xa64>
  40830c:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408310:	add    rsi,0x1
  408314:	mov    QWORD PTR [rdx+rcx*8],rsi
  408318:	test   dil,0x1
  40831c:	jne    408327 <UnityAssertFloatSpecial@@Base+0x147>
  408322:	jmp    40833e <UnityAssertFloatSpecial@@Base+0x15e>
  408327:	mov    rax,QWORD PTR [rip+0x108ba]        # 418be8 <__bss_start@@Base+0xa8c>
  40832e:	add    rax,0x1
  408332:	mov    QWORD PTR [rip+0x108af],rax        # 418be8 <__bss_start@@Base+0xa8c>
  408339:	jmp    40879d <UnityAssertFloatSpecial@@Base+0x5bd>
  40833e:	mov    DWORD PTR [rip+0xfe04],0x0        # 41814c <__data_start@@Base+0x14>
  408348:	mov    eax,DWORD PTR [rbp-0x1c]
  40834b:	mov    ecx,eax
  40834d:	mov    rdx,rcx
  408350:	sub    rdx,0x7
  408354:	mov    QWORD PTR [rbp-0x78],rcx
  408358:	mov    QWORD PTR [rbp-0x80],rdx
  40835c:	ja     4085fa <UnityAssertFloatSpecial@@Base+0x41a>
  408362:	lea    rax,[rip+0xa267]        # 4125d0 <_IO_stdin_used@@Base+0x5d0>
  408369:	mov    rcx,QWORD PTR [rbp-0x78]
  40836d:	movsxd rdx,DWORD PTR [rax+rcx*4]
  408371:	add    rdx,rax
  408374:	jmp    rdx
  408376:	lea    rax,[rip+0xec63]        # 416fe0 <UnitySizeMask@@Base+0x47d0>
  40837d:	add    rax,0x8
  408381:	lea    rdi,[rip+0xfdc4]        # 41814c <__data_start@@Base+0x14>
  408388:	mov    rsi,rax
  40838b:	call   40ab50 <UnityEnd@@Base+0x160>
  408390:	xor    ecx,ecx
  408392:	vmovss xmm0,DWORD PTR [rip+0xa222]        # 4125bc <_IO_stdin_used@@Base+0x5bc>
  40839a:	mov    rax,QWORD PTR [rip+0x10897]        # 418c38 <__bss_start@@Base+0xadc>
  4083a1:	add    rax,0x1
  4083a5:	mov    QWORD PTR [rip+0x1088c],rax        # 418c38 <__bss_start@@Base+0xadc>
  4083ac:	vmovss xmm1,DWORD PTR [rbp-0x4]
  4083b1:	vmovaps xmm2,xmm1
  4083b5:	vbroadcastss xmm3,DWORD PTR [rip+0xa202]        # 4125c0 <_IO_stdin_used@@Base+0x5c0>
  4083be:	vpand  xmm2,xmm2,xmm3
  4083c2:	vmovd  edx,xmm1
  4083c6:	cmp    edx,0x0
  4083c9:	mov    edx,0xffffffff
  4083ce:	mov    r8d,0x1
  4083d4:	mov    r9d,r8d
  4083d7:	cmovl  r9d,edx
  4083db:	vucomiss xmm2,xmm0
  4083df:	setnp  r10b
  4083e3:	sete   r11b
  4083e7:	test   r11b,r10b
  4083ea:	mov    edx,ecx
  4083ec:	cmovne edx,r9d
  4083f0:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4083f5:	vxorps xmm1,xmm1,xmm1
  4083f9:	vucomiss xmm0,xmm1
  4083fd:	cmova  ecx,r8d
  408401:	and    edx,ecx
  408403:	movsxd rax,edx
  408406:	mov    QWORD PTR [rbp-0x50],rax
  40840a:	jmp    408632 <UnityAssertFloatSpecial@@Base+0x452>
  40840f:	lea    rax,[rip+0xebca]        # 416fe0 <UnitySizeMask@@Base+0x47d0>
  408416:	add    rax,0x10
  40841a:	lea    rdi,[rip+0xfd2b]        # 41814c <__data_start@@Base+0x14>
  408421:	mov    rsi,rax
  408424:	call   40ab50 <UnityEnd@@Base+0x160>
  408429:	xor    ecx,ecx
  40842b:	vmovss xmm0,DWORD PTR [rip+0xa189]        # 4125bc <_IO_stdin_used@@Base+0x5bc>
  408433:	mov    rax,QWORD PTR [rip+0x10806]        # 418c40 <__bss_start@@Base+0xae4>
  40843a:	add    rax,0x1
  40843e:	mov    QWORD PTR [rip+0x107fb],rax        # 418c40 <__bss_start@@Base+0xae4>
  408445:	vmovss xmm1,DWORD PTR [rbp-0x4]
  40844a:	vmovaps xmm2,xmm1
  40844e:	vbroadcastss xmm3,DWORD PTR [rip+0xa169]        # 4125c0 <_IO_stdin_used@@Base+0x5c0>
  408457:	vpand  xmm2,xmm2,xmm3
  40845b:	vmovd  edx,xmm1
  40845f:	cmp    edx,0x0
  408462:	mov    edx,0xffffffff
  408467:	mov    r8d,0x1
  40846d:	mov    r9d,r8d
  408470:	cmovl  r9d,edx
  408474:	vucomiss xmm2,xmm0
  408478:	setnp  r10b
  40847c:	sete   r11b
  408480:	test   r11b,r10b
  408483:	mov    edx,ecx
  408485:	cmovne edx,r9d
  408489:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40848e:	vxorps xmm1,xmm1,xmm1
  408492:	vucomiss xmm1,xmm0
  408496:	cmova  ecx,r8d
  40849a:	and    edx,ecx
  40849c:	movsxd rax,edx
  40849f:	mov    QWORD PTR [rbp-0x50],rax
  4084a3:	jmp    408632 <UnityAssertFloatSpecial@@Base+0x452>
  4084a8:	lea    rax,[rip+0xeb31]        # 416fe0 <UnitySizeMask@@Base+0x47d0>
  4084af:	add    rax,0x18
  4084b3:	lea    rdi,[rip+0xfc92]        # 41814c <__data_start@@Base+0x14>
  4084ba:	mov    rsi,rax
  4084bd:	call   40ab50 <UnityEnd@@Base+0x160>
  4084c2:	mov    rax,QWORD PTR [rip+0x1077f]        # 418c48 <__bss_start@@Base+0xaec>
  4084c9:	add    rax,0x1
  4084cd:	mov    QWORD PTR [rip+0x10774],rax        # 418c48 <__bss_start@@Base+0xaec>
  4084d4:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4084d9:	vucomiss xmm0,xmm0
  4084dd:	setp   cl
  4084e0:	and    cl,0x1
  4084e3:	movzx  edx,cl
  4084e6:	movsxd rax,edx
  4084e9:	mov    QWORD PTR [rbp-0x50],rax
  4084ed:	jmp    408632 <UnityAssertFloatSpecial@@Base+0x452>
  4084f2:	lea    rax,[rip+0xeae7]        # 416fe0 <UnitySizeMask@@Base+0x47d0>
  4084f9:	add    rax,0x20
  4084fd:	lea    rdi,[rip+0xfc48]        # 41814c <__data_start@@Base+0x14>
  408504:	mov    rsi,rax
  408507:	call   40ab50 <UnityEnd@@Base+0x160>
  40850c:	mov    ecx,0x13
  408511:	mov    eax,ecx
  408513:	mov    ecx,0x12
  408518:	mov    esi,ecx
  40851a:	vmovss xmm0,DWORD PTR [rip+0xa09a]        # 4125bc <_IO_stdin_used@@Base+0x5bc>
  408522:	xor    ecx,ecx
  408524:	vmovss xmm1,DWORD PTR [rbp-0x4]
  408529:	vmovaps xmm2,xmm1
  40852d:	vbroadcastss xmm3,DWORD PTR [rip+0xa08a]        # 4125c0 <_IO_stdin_used@@Base+0x5c0>
  408536:	vpand  xmm2,xmm2,xmm3
  40853a:	vmovd  edx,xmm1
  40853e:	cmp    edx,0x0
  408541:	mov    edx,0xffffffff
  408546:	mov    r8d,0x1
  40854c:	cmovl  r8d,edx
  408550:	vucomiss xmm2,xmm0
  408554:	setnp  r9b
  408558:	sete   r10b
  40855c:	test   r10b,r9b
  40855f:	cmovne ecx,r8d
  408563:	vmovss xmm0,DWORD PTR [rbp-0x4]
  408568:	vucomiss xmm0,xmm0
  40856c:	setp   r9b
  408570:	and    r9b,0x1
  408574:	movzx  edx,r9b
  408578:	or     ecx,edx
  40857a:	cmp    ecx,0x0
  40857d:	setne  r9b
  408581:	cmp    ecx,0x0
  408584:	cmovne rax,rsi
  408588:	lea    rsi,[rip+0x10631]        # 418bc0 <__bss_start@@Base+0xa64>
  40858f:	mov    rdi,QWORD PTR [rsi+rax*8]
  408593:	add    rdi,0x1
  408597:	mov    QWORD PTR [rsi+rax*8],rdi
  40859b:	test   r9b,0x1
  40859f:	jne    4085aa <UnityAssertFloatSpecial@@Base+0x3ca>
  4085a5:	jmp    4085c9 <UnityAssertFloatSpecial@@Base+0x3e9>
  4085aa:	mov    rax,QWORD PTR [rip+0x106af]        # 418c60 <__bss_start@@Base+0xb04>
  4085b1:	add    rax,0x1
  4085b5:	mov    QWORD PTR [rip+0x106a4],rax        # 418c60 <__bss_start@@Base+0xb04>
  4085bc:	mov    QWORD PTR [rbp-0x50],0x0
  4085c4:	jmp    4085e3 <UnityAssertFloatSpecial@@Base+0x403>
  4085c9:	mov    rax,QWORD PTR [rip+0x10698]        # 418c68 <__bss_start@@Base+0xb0c>
  4085d0:	add    rax,0x1
  4085d4:	mov    QWORD PTR [rip+0x1068d],rax        # 418c68 <__bss_start@@Base+0xb0c>
  4085db:	mov    QWORD PTR [rbp-0x50],0x1
  4085e3:	mov    rax,QWORD PTR [rip+0x10686]        # 418c70 <__bss_start@@Base+0xb14>
  4085ea:	add    rax,0x1
  4085ee:	mov    QWORD PTR [rip+0x1067b],rax        # 418c70 <__bss_start@@Base+0xb14>
  4085f5:	jmp    408632 <UnityAssertFloatSpecial@@Base+0x452>
  4085fa:	lea    rdi,[rip+0xfb4b]        # 41814c <__data_start@@Base+0x14>
  408601:	lea    rsi,[rip+0xe9d8]        # 416fe0 <UnitySizeMask@@Base+0x47d0>
  408608:	call   40ab50 <UnityEnd@@Base+0x160>
  40860d:	lea    rsi,[rip+0xa12c]        # 412740 <UnityStrInvalidFloatTrait@@Base>
  408614:	mov    rdi,QWORD PTR [rip+0x1065d]        # 418c78 <__bss_start@@Base+0xb1c>
  40861b:	add    rdi,0x1
  40861f:	mov    QWORD PTR [rip+0x10652],rdi        # 418c78 <__bss_start@@Base+0xb1c>
  408626:	mov    QWORD PTR [rbp-0x58],0x0
  40862e:	mov    QWORD PTR [rbp-0x40],rsi
  408632:	mov    eax,0x19
  408637:	mov    ecx,eax
  408639:	mov    eax,0x18
  40863e:	mov    edx,eax
  408640:	mov    rsi,QWORD PTR [rbp-0x50]
  408644:	mov    rdi,QWORD PTR [rbp-0x48]
  408648:	cmp    rsi,rdi
  40864b:	setne  r8b
  40864f:	cmp    rsi,rdi
  408652:	cmovne rcx,rdx
  408656:	lea    rdx,[rip+0x10563]        # 418bc0 <__bss_start@@Base+0xa64>
  40865d:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408661:	add    rsi,0x1
  408665:	mov    QWORD PTR [rdx+rcx*8],rsi
  408669:	test   r8b,0x1
  40866d:	jne    408678 <UnityAssertFloatSpecial@@Base+0x498>
  408673:	jmp    40879d <UnityAssertFloatSpecial@@Base+0x5bd>
  408678:	mov    rdi,QWORD PTR [rbp-0x18]
  40867c:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  408681:	lea    rdi,[rip+0x9f84]        # 41260c <UnityStrExpected@@Base>
  408688:	call   405610 <UnityPrint@@Base>
  40868d:	mov    eax,0x1b
  408692:	mov    edi,eax
  408694:	mov    eax,0x1a
  408699:	mov    ecx,eax
  40869b:	mov    rdx,QWORD PTR [rbp-0x48]
  40869f:	cmp    rdx,0x0
  4086a3:	setne  sil
  4086a7:	cmp    rdx,0x0
  4086ab:	cmovne rdi,rcx
  4086af:	lea    rcx,[rip+0x1050a]        # 418bc0 <__bss_start@@Base+0xa64>
  4086b6:	mov    rdx,QWORD PTR [rcx+rdi*8]
  4086ba:	add    rdx,0x1
  4086be:	mov    QWORD PTR [rcx+rdi*8],rdx
  4086c2:	test   sil,0x1
  4086c6:	jne    4086ea <UnityAssertFloatSpecial@@Base+0x50a>
  4086cc:	lea    rdi,[rip+0xa026]        # 4126f9 <UnityStrNot@@Base>
  4086d3:	mov    rax,QWORD PTR [rip+0x105c6]        # 418ca0 <__bss_start@@Base+0xb44>
  4086da:	add    rax,0x1
  4086de:	mov    QWORD PTR [rip+0x105bb],rax        # 418ca0 <__bss_start@@Base+0xb44>
  4086e5:	call   405610 <UnityPrint@@Base>
  4086ea:	mov    rax,QWORD PTR [rbp-0x58]
  4086ee:	mov    rdi,QWORD PTR [rbp+rax*8-0x40]
  4086f3:	call   405610 <UnityPrint@@Base>
  4086f8:	lea    rdi,[rip+0x9f18]        # 412617 <UnityStrWas@@Base>
  4086ff:	call   405610 <UnityPrint@@Base>
  408704:	mov    ecx,0x1e
  408709:	mov    eax,ecx
  40870b:	mov    ecx,0x1d
  408710:	mov    edi,ecx
  408712:	mov    rdx,QWORD PTR [rbp-0x48]
  408716:	cmp    rdx,0x0
  40871a:	setne  sil
  40871e:	cmp    rdx,0x0
  408722:	cmovne rax,rdi
  408726:	lea    rdx,[rip+0x10493]        # 418bc0 <__bss_start@@Base+0xa64>
  40872d:	mov    rdi,QWORD PTR [rdx+rax*8]
  408731:	add    rdi,0x1
  408735:	mov    QWORD PTR [rdx+rax*8],rdi
  408739:	test   sil,0x1
  40873d:	jne    408748 <UnityAssertFloatSpecial@@Base+0x568>
  408743:	jmp    408766 <UnityAssertFloatSpecial@@Base+0x586>
  408748:	lea    rdi,[rip+0x9faa]        # 4126f9 <UnityStrNot@@Base>
  40874f:	mov    rax,QWORD PTR [rip+0x10562]        # 418cb8 <__bss_start@@Base+0xb5c>
  408756:	add    rax,0x1
  40875a:	mov    QWORD PTR [rip+0x10557],rax        # 418cb8 <__bss_start@@Base+0xb5c>
  408761:	call   405610 <UnityPrint@@Base>
  408766:	mov    rax,QWORD PTR [rbp-0x58]
  40876a:	mov    rdi,QWORD PTR [rbp+rax*8-0x40]
  40876f:	call   405610 <UnityPrint@@Base>
  408774:	mov    rdi,QWORD PTR [rbp-0x10]
  408778:	call   406b10 <UnityAssertBits@@Base+0x240>
  40877d:	lea    rax,[rip+0x1137c]        # 419b00 <Unity@@Base>
  408784:	mov    rdi,rax
  408787:	add    rdi,0x50
  40878b:	mov    QWORD PTR [rax+0x40],0x1
  408793:	mov    esi,0x1
  408798:	call   4031f0 <longjmp@plt>
  40879d:	mov    rax,QWORD PTR [rip+0x1051c]        # 418cc0 <__bss_start@@Base+0xb64>
  4087a4:	add    rax,0x1
  4087a8:	mov    QWORD PTR [rip+0x10511],rax        # 418cc0 <__bss_start@@Base+0xb64>
  4087af:	add    rsp,0x80
  4087b6:	pop    rbp
  4087b7:	ret    
  4087b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004087c0 <UnityAssertNumbersWithin@@Base>:
  4087c0:	push   rbp
  4087c1:	mov    rbp,rsp
  4087c4:	push   rbx
  4087c5:	sub    rsp,0x68
  4087c9:	mov    rax,QWORD PTR [rip+0x10500]        # 418cd0 <__bss_start@@Base+0xb74>
  4087d0:	add    rax,0x1
  4087d4:	mov    QWORD PTR [rip+0x104f5],rax        # 418cd0 <__bss_start@@Base+0xb74>
  4087db:	mov    QWORD PTR [rbp-0x40],r8
  4087df:	mov    QWORD PTR [rbp-0x48],rcx
  4087e3:	mov    QWORD PTR [rbp-0x50],rdx
  4087e7:	mov    QWORD PTR [rbp-0x58],rsi
  4087eb:	mov    QWORD PTR [rbp-0x60],rdi
  4087ef:	mov    DWORD PTR [rbp-0x64],r9d
  4087f3:	mov    eax,0x2
  4087f8:	mov    ecx,eax
  4087fa:	mov    eax,0x1
  4087ff:	mov    edx,eax
  408801:	lea    rsi,[rip+0x112f8]        # 419b00 <Unity@@Base>
  408808:	mov    rdi,QWORD PTR [rbp-0x60]
  40880c:	mov    QWORD PTR [rbp-0x10],rdi
  408810:	mov    r8,QWORD PTR [rbp-0x58]
  408814:	mov    QWORD PTR [rbp-0x18],r8
  408818:	mov    r9,QWORD PTR [rbp-0x50]
  40881c:	mov    QWORD PTR [rbp-0x20],r9
  408820:	mov    r10,QWORD PTR [rbp-0x48]
  408824:	mov    QWORD PTR [rbp-0x28],r10
  408828:	mov    r11,QWORD PTR [rbp-0x40]
  40882c:	mov    QWORD PTR [rbp-0x30],r11
  408830:	mov    eax,DWORD PTR [rbp-0x64]
  408833:	mov    DWORD PTR [rbp-0x34],eax
  408836:	mov    rsi,QWORD PTR [rsi+0x40]
  40883a:	cmp    rsi,0x0
  40883e:	setne  bl
  408841:	cmp    rsi,0x0
  408845:	cmovne rcx,rdx
  408849:	lea    rdx,[rip+0x10480]        # 418cd0 <__bss_start@@Base+0xb74>
  408850:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408854:	add    rsi,0x1
  408858:	mov    QWORD PTR [rdx+rcx*8],rsi
  40885c:	test   bl,0x1
  40885f:	jne    4088b0 <UnityAssertNumbersWithin@@Base+0xf0>
  408865:	mov    eax,0x4
  40886a:	mov    ecx,eax
  40886c:	mov    eax,0x3
  408871:	mov    edx,eax
  408873:	lea    rsi,[rip+0x11286]        # 419b00 <Unity@@Base>
  40887a:	mov    rsi,QWORD PTR [rsi+0x48]
  40887e:	cmp    rsi,0x0
  408882:	setne  dil
  408886:	cmp    rsi,0x0
  40888a:	cmovne rcx,rdx
  40888e:	lea    rdx,[rip+0x1043b]        # 418cd0 <__bss_start@@Base+0xb74>
  408895:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408899:	add    rsi,0x1
  40889d:	mov    QWORD PTR [rdx+rcx*8],rsi
  4088a1:	test   dil,0x1
  4088a5:	jne    4088b0 <UnityAssertNumbersWithin@@Base+0xf0>
  4088ab:	jmp    4088c7 <UnityAssertNumbersWithin@@Base+0x107>
  4088b0:	mov    rax,QWORD PTR [rip+0x10441]        # 418cf8 <__bss_start@@Base+0xb9c>
  4088b7:	add    rax,0x1
  4088bb:	mov    QWORD PTR [rip+0x10436],rax        # 418cf8 <__bss_start@@Base+0xb9c>
  4088c2:	jmp    408b66 <UnityAssertNumbersWithin@@Base+0x3a6>
  4088c7:	mov    eax,0x7
  4088cc:	mov    ecx,eax
  4088ce:	mov    eax,0x6
  4088d3:	mov    edx,eax
  4088d5:	mov    eax,DWORD PTR [rbp-0x34]
  4088d8:	and    eax,0x10
  4088db:	cmp    eax,0x10
  4088de:	sete   sil
  4088e2:	cmp    eax,0x10
  4088e5:	cmove  rcx,rdx
  4088e9:	lea    rdx,[rip+0x103e0]        # 418cd0 <__bss_start@@Base+0xb74>
  4088f0:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4088f4:	add    rdi,0x1
  4088f8:	mov    QWORD PTR [rdx+rcx*8],rdi
  4088fc:	test   sil,0x1
  408900:	jne    40890b <UnityAssertNumbersWithin@@Base+0x14b>
  408906:	jmp    4089d7 <UnityAssertNumbersWithin@@Base+0x217>
  40890b:	mov    eax,0x9
  408910:	mov    ecx,eax
  408912:	mov    eax,0x8
  408917:	mov    edx,eax
  408919:	mov    rsi,QWORD PTR [rbp-0x20]
  40891d:	mov    rdi,QWORD PTR [rbp-0x18]
  408921:	cmp    rsi,rdi
  408924:	setg   r8b
  408928:	cmp    rsi,rdi
  40892b:	cmovg  rcx,rdx
  40892f:	lea    rdx,[rip+0x1039a]        # 418cd0 <__bss_start@@Base+0xb74>
  408936:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40893a:	add    rsi,0x1
  40893e:	mov    QWORD PTR [rdx+rcx*8],rsi
  408942:	test   r8b,0x1
  408946:	jne    408951 <UnityAssertNumbersWithin@@Base+0x191>
  40894c:	jmp    40898b <UnityAssertNumbersWithin@@Base+0x1cb>
  408951:	lea    rax,[rip+0x111a8]        # 419b00 <Unity@@Base>
  408958:	mov    rcx,QWORD PTR [rip+0x103c1]        # 418d20 <__bss_start@@Base+0xbc4>
  40895f:	add    rcx,0x1
  408963:	mov    QWORD PTR [rip+0x103b6],rcx        # 418d20 <__bss_start@@Base+0xbc4>
  40896a:	mov    rcx,QWORD PTR [rbp-0x20]
  40896e:	sub    rcx,QWORD PTR [rbp-0x18]
  408972:	cmp    rcx,QWORD PTR [rbp-0x10]
  408976:	seta   dl
  408979:	and    dl,0x1
  40897c:	movzx  esi,dl
  40897f:	movsxd rcx,esi
  408982:	mov    QWORD PTR [rax+0x40],rcx
  408986:	jmp    4089c0 <UnityAssertNumbersWithin@@Base+0x200>
  40898b:	lea    rax,[rip+0x1116e]        # 419b00 <Unity@@Base>
  408992:	mov    rcx,QWORD PTR [rip+0x1038f]        # 418d28 <__bss_start@@Base+0xbcc>
  408999:	add    rcx,0x1
  40899d:	mov    QWORD PTR [rip+0x10384],rcx        # 418d28 <__bss_start@@Base+0xbcc>
  4089a4:	mov    rcx,QWORD PTR [rbp-0x18]
  4089a8:	sub    rcx,QWORD PTR [rbp-0x20]
  4089ac:	cmp    rcx,QWORD PTR [rbp-0x10]
  4089b0:	seta   dl
  4089b3:	and    dl,0x1
  4089b6:	movzx  esi,dl
  4089b9:	movsxd rcx,esi
  4089bc:	mov    QWORD PTR [rax+0x40],rcx
  4089c0:	mov    rax,QWORD PTR [rip+0x10369]        # 418d30 <__bss_start@@Base+0xbd4>
  4089c7:	add    rax,0x1
  4089cb:	mov    QWORD PTR [rip+0x1035e],rax        # 418d30 <__bss_start@@Base+0xbd4>
  4089d2:	jmp    408a9e <UnityAssertNumbersWithin@@Base+0x2de>
  4089d7:	mov    eax,0xe
  4089dc:	mov    ecx,eax
  4089de:	mov    eax,0xd
  4089e3:	mov    edx,eax
  4089e5:	mov    rsi,QWORD PTR [rbp-0x20]
  4089e9:	mov    rdi,QWORD PTR [rbp-0x18]
  4089ed:	cmp    rsi,rdi
  4089f0:	seta   r8b
  4089f4:	cmp    rsi,rdi
  4089f7:	cmova  rcx,rdx
  4089fb:	lea    rdx,[rip+0x102ce]        # 418cd0 <__bss_start@@Base+0xb74>
  408a02:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408a06:	add    rsi,0x1
  408a0a:	mov    QWORD PTR [rdx+rcx*8],rsi
  408a0e:	test   r8b,0x1
  408a12:	jne    408a1d <UnityAssertNumbersWithin@@Base+0x25d>
  408a18:	jmp    408a57 <UnityAssertNumbersWithin@@Base+0x297>
  408a1d:	lea    rax,[rip+0x110dc]        # 419b00 <Unity@@Base>
  408a24:	mov    rcx,QWORD PTR [rip+0x1031d]        # 418d48 <__bss_start@@Base+0xbec>
  408a2b:	add    rcx,0x1
  408a2f:	mov    QWORD PTR [rip+0x10312],rcx        # 418d48 <__bss_start@@Base+0xbec>
  408a36:	mov    rcx,QWORD PTR [rbp-0x20]
  408a3a:	sub    rcx,QWORD PTR [rbp-0x18]
  408a3e:	cmp    rcx,QWORD PTR [rbp-0x10]
  408a42:	seta   dl
  408a45:	and    dl,0x1
  408a48:	movzx  esi,dl
  408a4b:	movsxd rcx,esi
  408a4e:	mov    QWORD PTR [rax+0x40],rcx
  408a52:	jmp    408a8c <UnityAssertNumbersWithin@@Base+0x2cc>
  408a57:	lea    rax,[rip+0x110a2]        # 419b00 <Unity@@Base>
  408a5e:	mov    rcx,QWORD PTR [rip+0x102eb]        # 418d50 <__bss_start@@Base+0xbf4>
  408a65:	add    rcx,0x1
  408a69:	mov    QWORD PTR [rip+0x102e0],rcx        # 418d50 <__bss_start@@Base+0xbf4>
  408a70:	mov    rcx,QWORD PTR [rbp-0x18]
  408a74:	sub    rcx,QWORD PTR [rbp-0x20]
  408a78:	cmp    rcx,QWORD PTR [rbp-0x10]
  408a7c:	seta   dl
  408a7f:	and    dl,0x1
  408a82:	movzx  esi,dl
  408a85:	movsxd rcx,esi
  408a88:	mov    QWORD PTR [rax+0x40],rcx
  408a8c:	mov    rax,QWORD PTR [rip+0x102c5]        # 418d58 <__bss_start@@Base+0xbfc>
  408a93:	add    rax,0x1
  408a97:	mov    QWORD PTR [rip+0x102ba],rax        # 418d58 <__bss_start@@Base+0xbfc>
  408a9e:	mov    eax,0x13
  408aa3:	mov    ecx,eax
  408aa5:	mov    eax,0x12
  408aaa:	mov    edx,eax
  408aac:	lea    rsi,[rip+0x1104d]        # 419b00 <Unity@@Base>
  408ab3:	mov    rsi,QWORD PTR [rsi+0x40]
  408ab7:	cmp    rsi,0x0
  408abb:	setne  dil
  408abf:	cmp    rsi,0x0
  408ac3:	cmovne rcx,rdx
  408ac7:	lea    rdx,[rip+0x10202]        # 418cd0 <__bss_start@@Base+0xb74>
  408ace:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408ad2:	add    rsi,0x1
  408ad6:	mov    QWORD PTR [rdx+rcx*8],rsi
  408ada:	test   dil,0x1
  408ade:	jne    408ae9 <UnityAssertNumbersWithin@@Base+0x329>
  408ae4:	jmp    408b66 <UnityAssertNumbersWithin@@Base+0x3a6>
  408ae9:	mov    rdi,QWORD PTR [rbp-0x30]
  408aed:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  408af2:	lea    rdi,[rip+0x9b67]        # 412660 <UnityStrDelta@@Base>
  408af9:	call   405610 <UnityPrint@@Base>
  408afe:	mov    rdi,QWORD PTR [rbp-0x10]
  408b02:	mov    esi,DWORD PTR [rbp-0x34]
  408b05:	call   405e40 <UnityPrintNumberByStyle@@Base>
  408b0a:	lea    rdi,[rip+0x9afb]        # 41260c <UnityStrExpected@@Base>
  408b11:	call   405610 <UnityPrint@@Base>
  408b16:	mov    rdi,QWORD PTR [rbp-0x18]
  408b1a:	mov    esi,DWORD PTR [rbp-0x34]
  408b1d:	call   405e40 <UnityPrintNumberByStyle@@Base>
  408b22:	lea    rdi,[rip+0x9aee]        # 412617 <UnityStrWas@@Base>
  408b29:	call   405610 <UnityPrint@@Base>
  408b2e:	mov    rdi,QWORD PTR [rbp-0x20]
  408b32:	mov    esi,DWORD PTR [rbp-0x34]
  408b35:	call   405e40 <UnityPrintNumberByStyle@@Base>
  408b3a:	mov    rdi,QWORD PTR [rbp-0x28]
  408b3e:	call   406b10 <UnityAssertBits@@Base+0x240>
  408b43:	lea    rdi,[rip+0x10fb6]        # 419b00 <Unity@@Base>
  408b4a:	mov    rax,rdi
  408b4d:	add    rax,0x50
  408b51:	mov    QWORD PTR [rdi+0x40],0x1
  408b59:	mov    rdi,rax
  408b5c:	mov    esi,0x1
  408b61:	call   4031f0 <longjmp@plt>
  408b66:	mov    rax,QWORD PTR [rip+0x10203]        # 418d70 <__bss_start@@Base+0xc14>
  408b6d:	add    rax,0x1
  408b71:	mov    QWORD PTR [rip+0x101f8],rax        # 418d70 <__bss_start@@Base+0xc14>
  408b78:	add    rsp,0x68
  408b7c:	pop    rbx
  408b7d:	pop    rbp
  408b7e:	ret    
  408b7f:	nop

0000000000408b80 <UnityAssertEqualString@@Base>:
  408b80:	push   rbp
  408b81:	mov    rbp,rsp
  408b84:	sub    rsp,0x50
  408b88:	mov    rax,QWORD PTR [rip+0x101f1]        # 418d80 <__bss_start@@Base+0xc24>
  408b8f:	add    rax,0x1
  408b93:	mov    QWORD PTR [rip+0x101e6],rax        # 418d80 <__bss_start@@Base+0xc24>
  408b9a:	mov    QWORD PTR [rbp-0x30],rdx
  408b9e:	mov    QWORD PTR [rbp-0x38],rsi
  408ba2:	mov    QWORD PTR [rbp-0x40],rdi
  408ba6:	mov    QWORD PTR [rbp-0x48],rcx
  408baa:	mov    eax,0x2
  408baf:	mov    ecx,eax
  408bb1:	mov    eax,0x1
  408bb6:	mov    edx,eax
  408bb8:	lea    rsi,[rip+0x10f41]        # 419b00 <Unity@@Base>
  408bbf:	mov    rdi,QWORD PTR [rbp-0x40]
  408bc3:	mov    QWORD PTR [rbp-0x8],rdi
  408bc7:	mov    r8,QWORD PTR [rbp-0x38]
  408bcb:	mov    QWORD PTR [rbp-0x10],r8
  408bcf:	mov    r9,QWORD PTR [rbp-0x30]
  408bd3:	mov    QWORD PTR [rbp-0x18],r9
  408bd7:	mov    r10,QWORD PTR [rbp-0x48]
  408bdb:	mov    QWORD PTR [rbp-0x20],r10
  408bdf:	mov    rsi,QWORD PTR [rsi+0x40]
  408be3:	cmp    rsi,0x0
  408be7:	setne  r11b
  408beb:	cmp    rsi,0x0
  408bef:	cmovne rcx,rdx
  408bf3:	lea    rdx,[rip+0x10186]        # 418d80 <__bss_start@@Base+0xc24>
  408bfa:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408bfe:	add    rsi,0x1
  408c02:	mov    QWORD PTR [rdx+rcx*8],rsi
  408c06:	test   r11b,0x1
  408c0a:	jne    408c5b <UnityAssertEqualString@@Base+0xdb>
  408c10:	mov    eax,0x4
  408c15:	mov    ecx,eax
  408c17:	mov    eax,0x3
  408c1c:	mov    edx,eax
  408c1e:	lea    rsi,[rip+0x10edb]        # 419b00 <Unity@@Base>
  408c25:	mov    rsi,QWORD PTR [rsi+0x48]
  408c29:	cmp    rsi,0x0
  408c2d:	setne  dil
  408c31:	cmp    rsi,0x0
  408c35:	cmovne rcx,rdx
  408c39:	lea    rdx,[rip+0x10140]        # 418d80 <__bss_start@@Base+0xc24>
  408c40:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408c44:	add    rsi,0x1
  408c48:	mov    QWORD PTR [rdx+rcx*8],rsi
  408c4c:	test   dil,0x1
  408c50:	jne    408c5b <UnityAssertEqualString@@Base+0xdb>
  408c56:	jmp    408c72 <UnityAssertEqualString@@Base+0xf2>
  408c5b:	mov    rax,QWORD PTR [rip+0x10146]        # 418da8 <__bss_start@@Base+0xc4c>
  408c62:	add    rax,0x1
  408c66:	mov    QWORD PTR [rip+0x1013b],rax        # 418da8 <__bss_start@@Base+0xc4c>
  408c6d:	jmp    408f8e <UnityAssertEqualString@@Base+0x40e>
  408c72:	mov    eax,0x7
  408c77:	mov    ecx,eax
  408c79:	mov    eax,0x6
  408c7e:	mov    edx,eax
  408c80:	mov    rsi,QWORD PTR [rbp-0x8]
  408c84:	cmp    rsi,0x0
  408c88:	setne  dil
  408c8c:	cmp    rsi,0x0
  408c90:	cmovne rcx,rdx
  408c94:	lea    rdx,[rip+0x100e5]        # 418d80 <__bss_start@@Base+0xc24>
  408c9b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408c9f:	add    rsi,0x1
  408ca3:	mov    QWORD PTR [rdx+rcx*8],rsi
  408ca7:	test   dil,0x1
  408cab:	jne    408cb6 <UnityAssertEqualString@@Base+0x136>
  408cb1:	jmp    408e8b <UnityAssertEqualString@@Base+0x30b>
  408cb6:	mov    eax,0x9
  408cbb:	mov    ecx,eax
  408cbd:	mov    eax,0x8
  408cc2:	mov    edx,eax
  408cc4:	mov    rsi,QWORD PTR [rbp-0x10]
  408cc8:	cmp    rsi,0x0
  408ccc:	setne  dil
  408cd0:	cmp    rsi,0x0
  408cd4:	cmovne rcx,rdx
  408cd8:	lea    rdx,[rip+0x100a1]        # 418d80 <__bss_start@@Base+0xc24>
  408cdf:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408ce3:	add    rsi,0x1
  408ce7:	mov    QWORD PTR [rdx+rcx*8],rsi
  408ceb:	test   dil,0x1
  408cef:	jne    408cfa <UnityAssertEqualString@@Base+0x17a>
  408cf5:	jmp    408e8b <UnityAssertEqualString@@Base+0x30b>
  408cfa:	mov    rax,QWORD PTR [rip+0x100cf]        # 418dd0 <__bss_start@@Base+0xc74>
  408d01:	add    rax,0x1
  408d05:	mov    QWORD PTR [rip+0x100c4],rax        # 418dd0 <__bss_start@@Base+0xc74>
  408d0c:	mov    DWORD PTR [rbp-0x24],0x0
  408d13:	mov    eax,0xc
  408d18:	mov    ecx,eax
  408d1a:	mov    eax,0xb
  408d1f:	mov    edx,eax
  408d21:	mov    rsi,QWORD PTR [rbp-0x8]
  408d25:	mov    eax,DWORD PTR [rbp-0x24]
  408d28:	mov    edi,eax
  408d2a:	movsx  eax,BYTE PTR [rsi+rdi*1]
  408d2e:	cmp    eax,0x0
  408d31:	setne  r8b
  408d35:	cmp    eax,0x0
  408d38:	cmovne rcx,rdx
  408d3c:	lea    rdx,[rip+0x1003d]        # 418d80 <__bss_start@@Base+0xc24>
  408d43:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408d47:	add    rsi,0x1
  408d4b:	mov    QWORD PTR [rdx+rcx*8],rsi
  408d4f:	test   r8b,0x1
  408d53:	mov    r8b,0x1
  408d56:	mov    BYTE PTR [rbp-0x49],r8b
  408d5a:	jne    408d8a <UnityAssertEqualString@@Base+0x20a>
  408d60:	mov    rax,QWORD PTR [rip+0x10081]        # 418de8 <__bss_start@@Base+0xc8c>
  408d67:	add    rax,0x1
  408d6b:	mov    QWORD PTR [rip+0x10076],rax        # 418de8 <__bss_start@@Base+0xc8c>
  408d72:	mov    rax,QWORD PTR [rbp-0x10]
  408d76:	mov    ecx,DWORD PTR [rbp-0x24]
  408d79:	mov    edx,ecx
  408d7b:	movsx  ecx,BYTE PTR [rax+rdx*1]
  408d7f:	cmp    ecx,0x0
  408d82:	setne  sil
  408d86:	mov    BYTE PTR [rbp-0x49],sil
  408d8a:	mov    al,BYTE PTR [rbp-0x49]
  408d8d:	mov    ecx,0xf
  408d92:	mov    edx,ecx
  408d94:	mov    ecx,0xe
  408d99:	mov    esi,ecx
  408d9b:	test   al,0x1
  408d9d:	cmovne rdx,rsi
  408da1:	lea    rsi,[rip+0xffd8]        # 418d80 <__bss_start@@Base+0xc24>
  408da8:	mov    rdi,QWORD PTR [rsi+rdx*8]
  408dac:	add    rdi,0x1
  408db0:	mov    QWORD PTR [rsi+rdx*8],rdi
  408db4:	test   al,0x1
  408db6:	jne    408dc1 <UnityAssertEqualString@@Base+0x241>
  408dbc:	jmp    408e74 <UnityAssertEqualString@@Base+0x2f4>
  408dc1:	mov    eax,0x11
  408dc6:	mov    ecx,eax
  408dc8:	mov    eax,0x10
  408dcd:	mov    edx,eax
  408dcf:	mov    rsi,QWORD PTR [rbp-0x8]
  408dd3:	mov    eax,DWORD PTR [rbp-0x24]
  408dd6:	mov    edi,eax
  408dd8:	movsx  eax,BYTE PTR [rsi+rdi*1]
  408ddc:	mov    rsi,QWORD PTR [rbp-0x10]
  408de0:	mov    r8d,DWORD PTR [rbp-0x24]
  408de4:	mov    edi,r8d
  408de7:	movsx  r8d,BYTE PTR [rsi+rdi*1]
  408dec:	cmp    eax,r8d
  408def:	setne  r9b
  408df3:	cmp    eax,r8d
  408df6:	cmovne rcx,rdx
  408dfa:	lea    rdx,[rip+0xff7f]        # 418d80 <__bss_start@@Base+0xc24>
  408e01:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408e05:	add    rsi,0x1
  408e09:	mov    QWORD PTR [rdx+rcx*8],rsi
  408e0d:	test   r9b,0x1
  408e11:	jne    408e1c <UnityAssertEqualString@@Base+0x29c>
  408e17:	jmp    408e42 <UnityAssertEqualString@@Base+0x2c2>
  408e1c:	lea    rax,[rip+0x10cdd]        # 419b00 <Unity@@Base>
  408e23:	mov    rcx,QWORD PTR [rip+0xffe6]        # 418e10 <__bss_start@@Base+0xcb4>
  408e2a:	add    rcx,0x1
  408e2e:	mov    QWORD PTR [rip+0xffdb],rcx        # 418e10 <__bss_start@@Base+0xcb4>
  408e35:	mov    QWORD PTR [rax+0x40],0x1
  408e3d:	jmp    408e74 <UnityAssertEqualString@@Base+0x2f4>
  408e42:	mov    rax,QWORD PTR [rip+0xffcf]        # 418e18 <__bss_start@@Base+0xcbc>
  408e49:	add    rax,0x1
  408e4d:	mov    QWORD PTR [rip+0xffc4],rax        # 418e18 <__bss_start@@Base+0xcbc>
  408e54:	mov    rax,QWORD PTR [rip+0xffc5]        # 418e20 <__bss_start@@Base+0xcc4>
  408e5b:	add    rax,0x1
  408e5f:	mov    QWORD PTR [rip+0xffba],rax        # 418e20 <__bss_start@@Base+0xcc4>
  408e66:	mov    ecx,DWORD PTR [rbp-0x24]
  408e69:	add    ecx,0x1
  408e6c:	mov    DWORD PTR [rbp-0x24],ecx
  408e6f:	jmp    408d13 <UnityAssertEqualString@@Base+0x193>
  408e74:	mov    rax,QWORD PTR [rip+0xffad]        # 418e28 <__bss_start@@Base+0xccc>
  408e7b:	add    rax,0x1
  408e7f:	mov    QWORD PTR [rip+0xffa2],rax        # 418e28 <__bss_start@@Base+0xccc>
  408e86:	jmp    408f04 <UnityAssertEqualString@@Base+0x384>
  408e8b:	mov    eax,0x17
  408e90:	mov    ecx,eax
  408e92:	mov    eax,0x16
  408e97:	mov    edx,eax
  408e99:	mov    rsi,QWORD PTR [rbp-0x8]
  408e9d:	mov    rdi,QWORD PTR [rbp-0x10]
  408ea1:	cmp    rsi,rdi
  408ea4:	setne  r8b
  408ea8:	cmp    rsi,rdi
  408eab:	cmovne rcx,rdx
  408eaf:	lea    rdx,[rip+0xfeca]        # 418d80 <__bss_start@@Base+0xc24>
  408eb6:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408eba:	add    rsi,0x1
  408ebe:	mov    QWORD PTR [rdx+rcx*8],rsi
  408ec2:	test   r8b,0x1
  408ec6:	jne    408ed1 <UnityAssertEqualString@@Base+0x351>
  408ecc:	jmp    408ef2 <UnityAssertEqualString@@Base+0x372>
  408ed1:	lea    rax,[rip+0x10c28]        # 419b00 <Unity@@Base>
  408ed8:	mov    rcx,QWORD PTR [rip+0xff61]        # 418e40 <__bss_start@@Base+0xce4>
  408edf:	add    rcx,0x1
  408ee3:	mov    QWORD PTR [rip+0xff56],rcx        # 418e40 <__bss_start@@Base+0xce4>
  408eea:	mov    QWORD PTR [rax+0x40],0x1
  408ef2:	mov    rax,QWORD PTR [rip+0xff4f]        # 418e48 <__bss_start@@Base+0xcec>
  408ef9:	add    rax,0x1
  408efd:	mov    QWORD PTR [rip+0xff44],rax        # 418e48 <__bss_start@@Base+0xcec>
  408f04:	mov    eax,0x1b
  408f09:	mov    ecx,eax
  408f0b:	mov    eax,0x1a
  408f10:	mov    edx,eax
  408f12:	lea    rsi,[rip+0x10be7]        # 419b00 <Unity@@Base>
  408f19:	mov    rsi,QWORD PTR [rsi+0x40]
  408f1d:	cmp    rsi,0x0
  408f21:	setne  dil
  408f25:	cmp    rsi,0x0
  408f29:	cmovne rcx,rdx
  408f2d:	lea    rdx,[rip+0xfe4c]        # 418d80 <__bss_start@@Base+0xc24>
  408f34:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408f38:	add    rsi,0x1
  408f3c:	mov    QWORD PTR [rdx+rcx*8],rsi
  408f40:	test   dil,0x1
  408f44:	jne    408f4f <UnityAssertEqualString@@Base+0x3cf>
  408f4a:	jmp    408f8e <UnityAssertEqualString@@Base+0x40e>
  408f4f:	mov    rdi,QWORD PTR [rbp-0x20]
  408f53:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  408f58:	mov    rdi,QWORD PTR [rbp-0x8]
  408f5c:	mov    rsi,QWORD PTR [rbp-0x10]
  408f60:	call   408fb0 <UnityAssertEqualString@@Base+0x430>
  408f65:	mov    rdi,QWORD PTR [rbp-0x18]
  408f69:	call   406b10 <UnityAssertBits@@Base+0x240>
  408f6e:	lea    rsi,[rip+0x10b8b]        # 419b00 <Unity@@Base>
  408f75:	mov    rdi,rsi
  408f78:	add    rdi,0x50
  408f7c:	mov    QWORD PTR [rsi+0x40],0x1
  408f84:	mov    esi,0x1
  408f89:	call   4031f0 <longjmp@plt>
  408f8e:	mov    rax,QWORD PTR [rip+0xfecb]        # 418e60 <__bss_start@@Base+0xd04>
  408f95:	add    rax,0x1
  408f99:	mov    QWORD PTR [rip+0xfec0],rax        # 418e60 <__bss_start@@Base+0xd04>
  408fa0:	add    rsp,0x50
  408fa4:	pop    rbp
  408fa5:	ret    
  408fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fb0:	push   rbp
  408fb1:	mov    rbp,rsp
  408fb4:	sub    rsp,0x30
  408fb8:	mov    rax,QWORD PTR [rip+0xfeb1]        # 418e70 <__bss_start@@Base+0xd14>
  408fbf:	add    rax,0x1
  408fc3:	mov    QWORD PTR [rip+0xfea6],rax        # 418e70 <__bss_start@@Base+0xd14>
  408fca:	mov    QWORD PTR [rbp-0x18],rdi
  408fce:	mov    QWORD PTR [rbp-0x20],rsi
  408fd2:	lea    rdi,[rip+0x9633]        # 41260c <UnityStrExpected@@Base>
  408fd9:	mov    rax,QWORD PTR [rbp-0x18]
  408fdd:	mov    QWORD PTR [rbp-0x8],rax
  408fe1:	mov    rcx,QWORD PTR [rbp-0x20]
  408fe5:	mov    QWORD PTR [rbp-0x10],rcx
  408fe9:	call   405610 <UnityPrint@@Base>
  408fee:	mov    edx,0x2
  408ff3:	mov    eax,edx
  408ff5:	mov    edx,0x1
  408ffa:	mov    ecx,edx
  408ffc:	mov    rdi,QWORD PTR [rbp-0x8]
  409000:	cmp    rdi,0x0
  409004:	setne  sil
  409008:	cmp    rdi,0x0
  40900c:	cmovne rax,rcx
  409010:	lea    rcx,[rip+0xfe59]        # 418e70 <__bss_start@@Base+0xd14>
  409017:	mov    rdi,QWORD PTR [rcx+rax*8]
  40901b:	add    rdi,0x1
  40901f:	mov    QWORD PTR [rcx+rax*8],rdi
  409023:	test   sil,0x1
  409027:	jne    409032 <UnityAssertEqualString@@Base+0x4b2>
  40902d:	jmp    40906c <UnityAssertEqualString@@Base+0x4ec>
  409032:	mov    rax,QWORD PTR [rip+0xfe4f]        # 418e88 <__bss_start@@Base+0xd2c>
  409039:	add    rax,0x1
  40903d:	mov    QWORD PTR [rip+0xfe44],rax        # 418e88 <__bss_start@@Base+0xd2c>
  409044:	mov    edi,0x27
  409049:	call   403050 <putchar@plt>
  40904e:	mov    rdi,QWORD PTR [rbp-0x8]
  409052:	mov    DWORD PTR [rbp-0x24],eax
  409055:	call   405610 <UnityPrint@@Base>
  40905a:	mov    edi,0x27
  40905f:	call   403050 <putchar@plt>
  409064:	mov    DWORD PTR [rbp-0x28],eax
  409067:	jmp    40908a <UnityAssertEqualString@@Base+0x50a>
  40906c:	lea    rdi,[rip+0x9591]        # 412604 <UnityStrNull@@Base>
  409073:	mov    rax,QWORD PTR [rip+0xfe16]        # 418e90 <__bss_start@@Base+0xd34>
  40907a:	add    rax,0x1
  40907e:	mov    QWORD PTR [rip+0xfe0b],rax        # 418e90 <__bss_start@@Base+0xd34>
  409085:	call   405610 <UnityPrint@@Base>
  40908a:	lea    rdi,[rip+0x9586]        # 412617 <UnityStrWas@@Base>
  409091:	call   405610 <UnityPrint@@Base>
  409096:	mov    eax,0x6
  40909b:	mov    edi,eax
  40909d:	mov    eax,0x5
  4090a2:	mov    ecx,eax
  4090a4:	mov    rdx,QWORD PTR [rbp-0x10]
  4090a8:	cmp    rdx,0x0
  4090ac:	setne  sil
  4090b0:	cmp    rdx,0x0
  4090b4:	cmovne rdi,rcx
  4090b8:	lea    rcx,[rip+0xfdb1]        # 418e70 <__bss_start@@Base+0xd14>
  4090bf:	mov    rdx,QWORD PTR [rcx+rdi*8]
  4090c3:	add    rdx,0x1
  4090c7:	mov    QWORD PTR [rcx+rdi*8],rdx
  4090cb:	test   sil,0x1
  4090cf:	jne    4090da <UnityAssertEqualString@@Base+0x55a>
  4090d5:	jmp    409114 <UnityAssertEqualString@@Base+0x594>
  4090da:	mov    rax,QWORD PTR [rip+0xfdc7]        # 418ea8 <__bss_start@@Base+0xd4c>
  4090e1:	add    rax,0x1
  4090e5:	mov    QWORD PTR [rip+0xfdbc],rax        # 418ea8 <__bss_start@@Base+0xd4c>
  4090ec:	mov    edi,0x27
  4090f1:	call   403050 <putchar@plt>
  4090f6:	mov    rdi,QWORD PTR [rbp-0x10]
  4090fa:	mov    DWORD PTR [rbp-0x2c],eax
  4090fd:	call   405610 <UnityPrint@@Base>
  409102:	mov    edi,0x27
  409107:	call   403050 <putchar@plt>
  40910c:	mov    DWORD PTR [rbp-0x30],eax
  40910f:	jmp    409132 <UnityAssertEqualString@@Base+0x5b2>
  409114:	lea    rdi,[rip+0x94e9]        # 412604 <UnityStrNull@@Base>
  40911b:	mov    rax,QWORD PTR [rip+0xfd8e]        # 418eb0 <__bss_start@@Base+0xd54>
  409122:	add    rax,0x1
  409126:	mov    QWORD PTR [rip+0xfd83],rax        # 418eb0 <__bss_start@@Base+0xd54>
  40912d:	call   405610 <UnityPrint@@Base>
  409132:	mov    rax,QWORD PTR [rip+0xfd7f]        # 418eb8 <__bss_start@@Base+0xd5c>
  409139:	add    rax,0x1
  40913d:	mov    QWORD PTR [rip+0xfd74],rax        # 418eb8 <__bss_start@@Base+0xd5c>
  409144:	add    rsp,0x30
  409148:	pop    rbp
  409149:	ret    
  40914a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409150 <UnityAssertEqualStringLen@@Base>:
  409150:	push   rbp
  409151:	mov    rbp,rsp
  409154:	sub    rsp,0x60
  409158:	mov    rax,QWORD PTR [rip+0xfd61]        # 418ec0 <__bss_start@@Base+0xd64>
  40915f:	add    rax,0x1
  409163:	mov    QWORD PTR [rip+0xfd56],rax        # 418ec0 <__bss_start@@Base+0xd64>
  40916a:	mov    QWORD PTR [rbp-0x38],rcx
  40916e:	mov    DWORD PTR [rbp-0x3c],edx
  409171:	mov    QWORD PTR [rbp-0x48],rsi
  409175:	mov    QWORD PTR [rbp-0x50],rdi
  409179:	mov    QWORD PTR [rbp-0x58],r8
  40917d:	mov    eax,0x2
  409182:	mov    ecx,eax
  409184:	mov    eax,0x1
  409189:	mov    edx,eax
  40918b:	lea    rsi,[rip+0x1096e]        # 419b00 <Unity@@Base>
  409192:	mov    rdi,QWORD PTR [rbp-0x50]
  409196:	mov    QWORD PTR [rbp-0x8],rdi
  40919a:	mov    r8,QWORD PTR [rbp-0x48]
  40919e:	mov    QWORD PTR [rbp-0x10],r8
  4091a2:	mov    eax,DWORD PTR [rbp-0x3c]
  4091a5:	mov    DWORD PTR [rbp-0x14],eax
  4091a8:	mov    r9,QWORD PTR [rbp-0x38]
  4091ac:	mov    QWORD PTR [rbp-0x20],r9
  4091b0:	mov    r10,QWORD PTR [rbp-0x58]
  4091b4:	mov    QWORD PTR [rbp-0x28],r10
  4091b8:	mov    rsi,QWORD PTR [rsi+0x40]
  4091bc:	cmp    rsi,0x0
  4091c0:	setne  r11b
  4091c4:	cmp    rsi,0x0
  4091c8:	cmovne rcx,rdx
  4091cc:	lea    rdx,[rip+0xfced]        # 418ec0 <__bss_start@@Base+0xd64>
  4091d3:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4091d7:	add    rsi,0x1
  4091db:	mov    QWORD PTR [rdx+rcx*8],rsi
  4091df:	test   r11b,0x1
  4091e3:	jne    409234 <UnityAssertEqualStringLen@@Base+0xe4>
  4091e9:	mov    eax,0x4
  4091ee:	mov    ecx,eax
  4091f0:	mov    eax,0x3
  4091f5:	mov    edx,eax
  4091f7:	lea    rsi,[rip+0x10902]        # 419b00 <Unity@@Base>
  4091fe:	mov    rsi,QWORD PTR [rsi+0x48]
  409202:	cmp    rsi,0x0
  409206:	setne  dil
  40920a:	cmp    rsi,0x0
  40920e:	cmovne rcx,rdx
  409212:	lea    rdx,[rip+0xfca7]        # 418ec0 <__bss_start@@Base+0xd64>
  409219:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40921d:	add    rsi,0x1
  409221:	mov    QWORD PTR [rdx+rcx*8],rsi
  409225:	test   dil,0x1
  409229:	jne    409234 <UnityAssertEqualStringLen@@Base+0xe4>
  40922f:	jmp    40924b <UnityAssertEqualStringLen@@Base+0xfb>
  409234:	mov    rax,QWORD PTR [rip+0xfcad]        # 418ee8 <__bss_start@@Base+0xd8c>
  40923b:	add    rax,0x1
  40923f:	mov    QWORD PTR [rip+0xfca2],rax        # 418ee8 <__bss_start@@Base+0xd8c>
  409246:	jmp    4095ab <UnityAssertEqualStringLen@@Base+0x45b>
  40924b:	mov    eax,0x7
  409250:	mov    ecx,eax
  409252:	mov    eax,0x6
  409257:	mov    edx,eax
  409259:	mov    rsi,QWORD PTR [rbp-0x8]
  40925d:	cmp    rsi,0x0
  409261:	setne  dil
  409265:	cmp    rsi,0x0
  409269:	cmovne rcx,rdx
  40926d:	lea    rdx,[rip+0xfc4c]        # 418ec0 <__bss_start@@Base+0xd64>
  409274:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409278:	add    rsi,0x1
  40927c:	mov    QWORD PTR [rdx+rcx*8],rsi
  409280:	test   dil,0x1
  409284:	jne    40928f <UnityAssertEqualStringLen@@Base+0x13f>
  40928a:	jmp    4094a5 <UnityAssertEqualStringLen@@Base+0x355>
  40928f:	mov    eax,0x9
  409294:	mov    ecx,eax
  409296:	mov    eax,0x8
  40929b:	mov    edx,eax
  40929d:	mov    rsi,QWORD PTR [rbp-0x10]
  4092a1:	cmp    rsi,0x0
  4092a5:	setne  dil
  4092a9:	cmp    rsi,0x0
  4092ad:	cmovne rcx,rdx
  4092b1:	lea    rdx,[rip+0xfc08]        # 418ec0 <__bss_start@@Base+0xd64>
  4092b8:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4092bc:	add    rsi,0x1
  4092c0:	mov    QWORD PTR [rdx+rcx*8],rsi
  4092c4:	test   dil,0x1
  4092c8:	jne    4092d3 <UnityAssertEqualStringLen@@Base+0x183>
  4092ce:	jmp    4094a5 <UnityAssertEqualStringLen@@Base+0x355>
  4092d3:	mov    rax,QWORD PTR [rip+0xfc36]        # 418f10 <__bss_start@@Base+0xdb4>
  4092da:	add    rax,0x1
  4092de:	mov    QWORD PTR [rip+0xfc2b],rax        # 418f10 <__bss_start@@Base+0xdb4>
  4092e5:	mov    DWORD PTR [rbp-0x2c],0x0
  4092ec:	mov    eax,0xc
  4092f1:	mov    ecx,eax
  4092f3:	mov    eax,0xb
  4092f8:	mov    edx,eax
  4092fa:	mov    rsi,QWORD PTR [rbp-0x8]
  4092fe:	mov    eax,DWORD PTR [rbp-0x2c]
  409301:	mov    edi,eax
  409303:	movsx  eax,BYTE PTR [rsi+rdi*1]
  409307:	cmp    eax,0x0
  40930a:	setne  r8b
  40930e:	cmp    eax,0x0
  409311:	cmovne rcx,rdx
  409315:	lea    rdx,[rip+0xfba4]        # 418ec0 <__bss_start@@Base+0xd64>
  40931c:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409320:	add    rsi,0x1
  409324:	mov    QWORD PTR [rdx+rcx*8],rsi
  409328:	test   r8b,0x1
  40932c:	jne    409386 <UnityAssertEqualStringLen@@Base+0x236>
  409332:	xor    eax,eax
  409334:	mov    cl,al
  409336:	mov    eax,0xe
  40933b:	mov    edx,eax
  40933d:	mov    eax,0xd
  409342:	mov    esi,eax
  409344:	mov    rdi,QWORD PTR [rbp-0x10]
  409348:	mov    eax,DWORD PTR [rbp-0x2c]
  40934b:	mov    r8d,eax
  40934e:	movsx  eax,BYTE PTR [rdi+r8*1]
  409353:	cmp    eax,0x0
  409356:	setne  r9b
  40935a:	cmp    eax,0x0
  40935d:	cmovne rdx,rsi
  409361:	lea    rsi,[rip+0xfb58]        # 418ec0 <__bss_start@@Base+0xd64>
  409368:	mov    rdi,QWORD PTR [rsi+rdx*8]
  40936c:	add    rdi,0x1
  409370:	mov    QWORD PTR [rsi+rdx*8],rdi
  409374:	test   r9b,0x1
  409378:	mov    BYTE PTR [rbp-0x59],cl
  40937b:	jne    409386 <UnityAssertEqualStringLen@@Base+0x236>
  409381:	jmp    4093a4 <UnityAssertEqualStringLen@@Base+0x254>
  409386:	mov    rax,QWORD PTR [rip+0xfbab]        # 418f38 <__bss_start@@Base+0xddc>
  40938d:	add    rax,0x1
  409391:	mov    QWORD PTR [rip+0xfba0],rax        # 418f38 <__bss_start@@Base+0xddc>
  409398:	mov    ecx,DWORD PTR [rbp-0x2c]
  40939b:	cmp    ecx,DWORD PTR [rbp-0x14]
  40939e:	setb   dl
  4093a1:	mov    BYTE PTR [rbp-0x59],dl
  4093a4:	mov    al,BYTE PTR [rbp-0x59]
  4093a7:	mov    ecx,0x11
  4093ac:	mov    edx,ecx
  4093ae:	mov    ecx,0x10
  4093b3:	mov    esi,ecx
  4093b5:	test   al,0x1
  4093b7:	cmovne rdx,rsi
  4093bb:	lea    rsi,[rip+0xfafe]        # 418ec0 <__bss_start@@Base+0xd64>
  4093c2:	mov    rdi,QWORD PTR [rsi+rdx*8]
  4093c6:	add    rdi,0x1
  4093ca:	mov    QWORD PTR [rsi+rdx*8],rdi
  4093ce:	test   al,0x1
  4093d0:	jne    4093db <UnityAssertEqualStringLen@@Base+0x28b>
  4093d6:	jmp    40948e <UnityAssertEqualStringLen@@Base+0x33e>
  4093db:	mov    eax,0x13
  4093e0:	mov    ecx,eax
  4093e2:	mov    eax,0x12
  4093e7:	mov    edx,eax
  4093e9:	mov    rsi,QWORD PTR [rbp-0x8]
  4093ed:	mov    eax,DWORD PTR [rbp-0x2c]
  4093f0:	mov    edi,eax
  4093f2:	movsx  eax,BYTE PTR [rsi+rdi*1]
  4093f6:	mov    rsi,QWORD PTR [rbp-0x10]
  4093fa:	mov    r8d,DWORD PTR [rbp-0x2c]
  4093fe:	mov    edi,r8d
  409401:	movsx  r8d,BYTE PTR [rsi+rdi*1]
  409406:	cmp    eax,r8d
  409409:	setne  r9b
  40940d:	cmp    eax,r8d
  409410:	cmovne rcx,rdx
  409414:	lea    rdx,[rip+0xfaa5]        # 418ec0 <__bss_start@@Base+0xd64>
  40941b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40941f:	add    rsi,0x1
  409423:	mov    QWORD PTR [rdx+rcx*8],rsi
  409427:	test   r9b,0x1
  40942b:	jne    409436 <UnityAssertEqualStringLen@@Base+0x2e6>
  409431:	jmp    40945c <UnityAssertEqualStringLen@@Base+0x30c>
  409436:	lea    rax,[rip+0x106c3]        # 419b00 <Unity@@Base>
  40943d:	mov    rcx,QWORD PTR [rip+0xfb1c]        # 418f60 <__bss_start@@Base+0xe04>
  409444:	add    rcx,0x1
  409448:	mov    QWORD PTR [rip+0xfb11],rcx        # 418f60 <__bss_start@@Base+0xe04>
  40944f:	mov    QWORD PTR [rax+0x40],0x1
  409457:	jmp    40948e <UnityAssertEqualStringLen@@Base+0x33e>
  40945c:	mov    rax,QWORD PTR [rip+0xfb05]        # 418f68 <__bss_start@@Base+0xe0c>
  409463:	add    rax,0x1
  409467:	mov    QWORD PTR [rip+0xfafa],rax        # 418f68 <__bss_start@@Base+0xe0c>
  40946e:	mov    rax,QWORD PTR [rip+0xfafb]        # 418f70 <__bss_start@@Base+0xe14>
  409475:	add    rax,0x1
  409479:	mov    QWORD PTR [rip+0xfaf0],rax        # 418f70 <__bss_start@@Base+0xe14>
  409480:	mov    ecx,DWORD PTR [rbp-0x2c]
  409483:	add    ecx,0x1
  409486:	mov    DWORD PTR [rbp-0x2c],ecx
  409489:	jmp    4092ec <UnityAssertEqualStringLen@@Base+0x19c>
  40948e:	mov    rax,QWORD PTR [rip+0xfae3]        # 418f78 <__bss_start@@Base+0xe1c>
  409495:	add    rax,0x1
  409499:	mov    QWORD PTR [rip+0xfad8],rax        # 418f78 <__bss_start@@Base+0xe1c>
  4094a0:	jmp    40951e <UnityAssertEqualStringLen@@Base+0x3ce>
  4094a5:	mov    eax,0x19
  4094aa:	mov    ecx,eax
  4094ac:	mov    eax,0x18
  4094b1:	mov    edx,eax
  4094b3:	mov    rsi,QWORD PTR [rbp-0x8]
  4094b7:	mov    rdi,QWORD PTR [rbp-0x10]
  4094bb:	cmp    rsi,rdi
  4094be:	setne  r8b
  4094c2:	cmp    rsi,rdi
  4094c5:	cmovne rcx,rdx
  4094c9:	lea    rdx,[rip+0xf9f0]        # 418ec0 <__bss_start@@Base+0xd64>
  4094d0:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4094d4:	add    rsi,0x1
  4094d8:	mov    QWORD PTR [rdx+rcx*8],rsi
  4094dc:	test   r8b,0x1
  4094e0:	jne    4094eb <UnityAssertEqualStringLen@@Base+0x39b>
  4094e6:	jmp    40950c <UnityAssertEqualStringLen@@Base+0x3bc>
  4094eb:	lea    rax,[rip+0x1060e]        # 419b00 <Unity@@Base>
  4094f2:	mov    rcx,QWORD PTR [rip+0xfa97]        # 418f90 <__bss_start@@Base+0xe34>
  4094f9:	add    rcx,0x1
  4094fd:	mov    QWORD PTR [rip+0xfa8c],rcx        # 418f90 <__bss_start@@Base+0xe34>
  409504:	mov    QWORD PTR [rax+0x40],0x1
  40950c:	mov    rax,QWORD PTR [rip+0xfa85]        # 418f98 <__bss_start@@Base+0xe3c>
  409513:	add    rax,0x1
  409517:	mov    QWORD PTR [rip+0xfa7a],rax        # 418f98 <__bss_start@@Base+0xe3c>
  40951e:	mov    eax,0x1d
  409523:	mov    ecx,eax
  409525:	mov    eax,0x1c
  40952a:	mov    edx,eax
  40952c:	lea    rsi,[rip+0x105cd]        # 419b00 <Unity@@Base>
  409533:	mov    rsi,QWORD PTR [rsi+0x40]
  409537:	cmp    rsi,0x0
  40953b:	setne  dil
  40953f:	cmp    rsi,0x0
  409543:	cmovne rcx,rdx
  409547:	lea    rdx,[rip+0xf972]        # 418ec0 <__bss_start@@Base+0xd64>
  40954e:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409552:	add    rsi,0x1
  409556:	mov    QWORD PTR [rdx+rcx*8],rsi
  40955a:	test   dil,0x1
  40955e:	jne    409569 <UnityAssertEqualStringLen@@Base+0x419>
  409564:	jmp    4095ab <UnityAssertEqualStringLen@@Base+0x45b>
  409569:	mov    rdi,QWORD PTR [rbp-0x28]
  40956d:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  409572:	mov    rdi,QWORD PTR [rbp-0x8]
  409576:	mov    rsi,QWORD PTR [rbp-0x10]
  40957a:	mov    edx,DWORD PTR [rbp-0x14]
  40957d:	call   4095d0 <UnityAssertEqualStringLen@@Base+0x480>
  409582:	mov    rdi,QWORD PTR [rbp-0x20]
  409586:	call   406b10 <UnityAssertBits@@Base+0x240>
  40958b:	lea    rsi,[rip+0x1056e]        # 419b00 <Unity@@Base>
  409592:	mov    rdi,rsi
  409595:	add    rdi,0x50
  409599:	mov    QWORD PTR [rsi+0x40],0x1
  4095a1:	mov    esi,0x1
  4095a6:	call   4031f0 <longjmp@plt>
  4095ab:	mov    rax,QWORD PTR [rip+0xf9fe]        # 418fb0 <__bss_start@@Base+0xe54>
  4095b2:	add    rax,0x1
  4095b6:	mov    QWORD PTR [rip+0xf9f3],rax        # 418fb0 <__bss_start@@Base+0xe54>
  4095bd:	add    rsp,0x60
  4095c1:	pop    rbp
  4095c2:	ret    
  4095c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095cd:	nop    DWORD PTR [rax]
  4095d0:	push   rbp
  4095d1:	mov    rbp,rsp
  4095d4:	sub    rsp,0x40
  4095d8:	mov    rax,QWORD PTR [rip+0xf9e1]        # 418fc0 <__bss_start@@Base+0xe64>
  4095df:	add    rax,0x1
  4095e3:	mov    QWORD PTR [rip+0xf9d6],rax        # 418fc0 <__bss_start@@Base+0xe64>
  4095ea:	mov    QWORD PTR [rbp-0x20],rsi
  4095ee:	mov    QWORD PTR [rbp-0x28],rdi
  4095f2:	mov    DWORD PTR [rbp-0x2c],edx
  4095f5:	lea    rdi,[rip+0x9010]        # 41260c <UnityStrExpected@@Base>
  4095fc:	mov    rax,QWORD PTR [rbp-0x28]
  409600:	mov    QWORD PTR [rbp-0x8],rax
  409604:	mov    rcx,QWORD PTR [rbp-0x20]
  409608:	mov    QWORD PTR [rbp-0x10],rcx
  40960c:	mov    edx,DWORD PTR [rbp-0x2c]
  40960f:	mov    DWORD PTR [rbp-0x14],edx
  409612:	call   405610 <UnityPrint@@Base>
  409617:	mov    edx,0x2
  40961c:	mov    eax,edx
  40961e:	mov    edx,0x1
  409623:	mov    ecx,edx
  409625:	mov    rdi,QWORD PTR [rbp-0x8]
  409629:	cmp    rdi,0x0
  40962d:	setne  sil
  409631:	cmp    rdi,0x0
  409635:	cmovne rax,rcx
  409639:	lea    rcx,[rip+0xf980]        # 418fc0 <__bss_start@@Base+0xe64>
  409640:	mov    rdi,QWORD PTR [rcx+rax*8]
  409644:	add    rdi,0x1
  409648:	mov    QWORD PTR [rcx+rax*8],rdi
  40964c:	test   sil,0x1
  409650:	jne    40965b <UnityAssertEqualStringLen@@Base+0x50b>
  409656:	jmp    409698 <UnityAssertEqualStringLen@@Base+0x548>
  40965b:	mov    rax,QWORD PTR [rip+0xf976]        # 418fd8 <__bss_start@@Base+0xe7c>
  409662:	add    rax,0x1
  409666:	mov    QWORD PTR [rip+0xf96b],rax        # 418fd8 <__bss_start@@Base+0xe7c>
  40966d:	mov    edi,0x27
  409672:	call   403050 <putchar@plt>
  409677:	mov    rdi,QWORD PTR [rbp-0x8]
  40967b:	mov    esi,DWORD PTR [rbp-0x14]
  40967e:	mov    DWORD PTR [rbp-0x30],eax
  409681:	call   405ac0 <UnityPrintLen@@Base>
  409686:	mov    edi,0x27
  40968b:	call   403050 <putchar@plt>
  409690:	mov    DWORD PTR [rbp-0x34],eax
  409693:	jmp    4096b6 <UnityAssertEqualStringLen@@Base+0x566>
  409698:	lea    rdi,[rip+0x8f65]        # 412604 <UnityStrNull@@Base>
  40969f:	mov    rax,QWORD PTR [rip+0xf93a]        # 418fe0 <__bss_start@@Base+0xe84>
  4096a6:	add    rax,0x1
  4096aa:	mov    QWORD PTR [rip+0xf92f],rax        # 418fe0 <__bss_start@@Base+0xe84>
  4096b1:	call   405610 <UnityPrint@@Base>
  4096b6:	lea    rdi,[rip+0x8f5a]        # 412617 <UnityStrWas@@Base>
  4096bd:	call   405610 <UnityPrint@@Base>
  4096c2:	mov    eax,0x6
  4096c7:	mov    edi,eax
  4096c9:	mov    eax,0x5
  4096ce:	mov    ecx,eax
  4096d0:	mov    rdx,QWORD PTR [rbp-0x10]
  4096d4:	cmp    rdx,0x0
  4096d8:	setne  sil
  4096dc:	cmp    rdx,0x0
  4096e0:	cmovne rdi,rcx
  4096e4:	lea    rcx,[rip+0xf8d5]        # 418fc0 <__bss_start@@Base+0xe64>
  4096eb:	mov    rdx,QWORD PTR [rcx+rdi*8]
  4096ef:	add    rdx,0x1
  4096f3:	mov    QWORD PTR [rcx+rdi*8],rdx
  4096f7:	test   sil,0x1
  4096fb:	jne    409706 <UnityAssertEqualStringLen@@Base+0x5b6>
  409701:	jmp    409743 <UnityAssertEqualStringLen@@Base+0x5f3>
  409706:	mov    rax,QWORD PTR [rip+0xf8eb]        # 418ff8 <__bss_start@@Base+0xe9c>
  40970d:	add    rax,0x1
  409711:	mov    QWORD PTR [rip+0xf8e0],rax        # 418ff8 <__bss_start@@Base+0xe9c>
  409718:	mov    edi,0x27
  40971d:	call   403050 <putchar@plt>
  409722:	mov    rdi,QWORD PTR [rbp-0x10]
  409726:	mov    esi,DWORD PTR [rbp-0x14]
  409729:	mov    DWORD PTR [rbp-0x38],eax
  40972c:	call   405ac0 <UnityPrintLen@@Base>
  409731:	mov    edi,0x27
  409736:	call   403050 <putchar@plt>
  40973b:	mov    DWORD PTR [rbp-0x3c],eax
  40973e:	jmp    409761 <UnityAssertEqualStringLen@@Base+0x611>
  409743:	lea    rdi,[rip+0x8eba]        # 412604 <UnityStrNull@@Base>
  40974a:	mov    rax,QWORD PTR [rip+0xf8af]        # 419000 <__bss_start@@Base+0xea4>
  409751:	add    rax,0x1
  409755:	mov    QWORD PTR [rip+0xf8a4],rax        # 419000 <__bss_start@@Base+0xea4>
  40975c:	call   405610 <UnityPrint@@Base>
  409761:	mov    rax,QWORD PTR [rip+0xf8a0]        # 419008 <__bss_start@@Base+0xeac>
  409768:	add    rax,0x1
  40976c:	mov    QWORD PTR [rip+0xf895],rax        # 419008 <__bss_start@@Base+0xeac>
  409773:	add    rsp,0x40
  409777:	pop    rbp
  409778:	ret    
  409779:	nop    DWORD PTR [rax+0x0]

0000000000409780 <UnityAssertEqualStringArray@@Base>:
  409780:	push   rbp
  409781:	mov    rbp,rsp
  409784:	sub    rsp,0x70
  409788:	mov    rax,QWORD PTR [rip+0xf881]        # 419010 <__bss_start@@Base+0xeb4>
  40978f:	add    rax,0x1
  409793:	mov    QWORD PTR [rip+0xf876],rax        # 419010 <__bss_start@@Base+0xeb4>
  40979a:	mov    QWORD PTR [rbp-0x38],rcx
  40979e:	mov    DWORD PTR [rbp-0x3c],edx
  4097a1:	mov    QWORD PTR [rbp-0x48],rsi
  4097a5:	mov    QWORD PTR [rbp-0x50],rdi
  4097a9:	mov    QWORD PTR [rbp-0x58],r8
  4097ad:	mov    eax,0x2
  4097b2:	mov    ecx,eax
  4097b4:	mov    eax,0x1
  4097b9:	mov    edx,eax
  4097bb:	lea    rsi,[rip+0x1033e]        # 419b00 <Unity@@Base>
  4097c2:	mov    rdi,QWORD PTR [rbp-0x50]
  4097c6:	mov    QWORD PTR [rbp-0x8],rdi
  4097ca:	mov    r8,QWORD PTR [rbp-0x48]
  4097ce:	mov    QWORD PTR [rbp-0x10],r8
  4097d2:	mov    eax,DWORD PTR [rbp-0x3c]
  4097d5:	mov    DWORD PTR [rbp-0x14],eax
  4097d8:	mov    r9,QWORD PTR [rbp-0x38]
  4097dc:	mov    QWORD PTR [rbp-0x20],r9
  4097e0:	mov    r10,QWORD PTR [rbp-0x58]
  4097e4:	mov    QWORD PTR [rbp-0x28],r10
  4097e8:	mov    DWORD PTR [rbp-0x30],0x0
  4097ef:	mov    rsi,QWORD PTR [rsi+0x40]
  4097f3:	cmp    rsi,0x0
  4097f7:	setne  r11b
  4097fb:	cmp    rsi,0x0
  4097ff:	cmovne rcx,rdx
  409803:	lea    rdx,[rip+0xf806]        # 419010 <__bss_start@@Base+0xeb4>
  40980a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40980e:	add    rsi,0x1
  409812:	mov    QWORD PTR [rdx+rcx*8],rsi
  409816:	test   r11b,0x1
  40981a:	jne    40986b <UnityAssertEqualStringArray@@Base+0xeb>
  409820:	mov    eax,0x4
  409825:	mov    ecx,eax
  409827:	mov    eax,0x3
  40982c:	mov    edx,eax
  40982e:	lea    rsi,[rip+0x102cb]        # 419b00 <Unity@@Base>
  409835:	mov    rsi,QWORD PTR [rsi+0x48]
  409839:	cmp    rsi,0x0
  40983d:	setne  dil
  409841:	cmp    rsi,0x0
  409845:	cmovne rcx,rdx
  409849:	lea    rdx,[rip+0xf7c0]        # 419010 <__bss_start@@Base+0xeb4>
  409850:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409854:	add    rsi,0x1
  409858:	mov    QWORD PTR [rdx+rcx*8],rsi
  40985c:	test   dil,0x1
  409860:	jne    40986b <UnityAssertEqualStringArray@@Base+0xeb>
  409866:	jmp    409882 <UnityAssertEqualStringArray@@Base+0x102>
  40986b:	mov    rax,QWORD PTR [rip+0xf7c6]        # 419038 <__bss_start@@Base+0xedc>
  409872:	add    rax,0x1
  409876:	mov    QWORD PTR [rip+0xf7bb],rax        # 419038 <__bss_start@@Base+0xedc>
  40987d:	jmp    409dca <UnityAssertEqualStringArray@@Base+0x64a>
  409882:	mov    eax,0x7
  409887:	mov    ecx,eax
  409889:	mov    eax,0x6
  40988e:	mov    edx,eax
  409890:	mov    eax,DWORD PTR [rbp-0x14]
  409893:	cmp    eax,0x0
  409896:	sete   sil
  40989a:	cmp    eax,0x0
  40989d:	cmove  rcx,rdx
  4098a1:	lea    rdx,[rip+0xf768]        # 419010 <__bss_start@@Base+0xeb4>
  4098a8:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4098ac:	add    rdi,0x1
  4098b0:	mov    QWORD PTR [rdx+rcx*8],rdi
  4098b4:	test   sil,0x1
  4098b8:	jne    4098c3 <UnityAssertEqualStringArray@@Base+0x143>
  4098be:	jmp    409904 <UnityAssertEqualStringArray@@Base+0x184>
  4098c3:	mov    rdi,QWORD PTR [rbp-0x28]
  4098c7:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  4098cc:	lea    rdi,[rip+0x8dad]        # 412680 <UnityStrPointless@@Base>
  4098d3:	call   405610 <UnityPrint@@Base>
  4098d8:	mov    rdi,QWORD PTR [rbp-0x20]
  4098dc:	call   406b10 <UnityAssertBits@@Base+0x240>
  4098e1:	lea    rdi,[rip+0x10218]        # 419b00 <Unity@@Base>
  4098e8:	mov    rax,rdi
  4098eb:	add    rax,0x50
  4098ef:	mov    QWORD PTR [rdi+0x40],0x1
  4098f7:	mov    rdi,rax
  4098fa:	mov    esi,0x1
  4098ff:	call   4031f0 <longjmp@plt>
  409904:	mov    rax,QWORD PTR [rbp-0x8]
  409908:	mov    rcx,QWORD PTR [rbp-0x10]
  40990c:	mov    rdx,QWORD PTR [rbp-0x28]
  409910:	mov    rsi,QWORD PTR [rbp-0x20]
  409914:	mov    rdi,rax
  409917:	mov    QWORD PTR [rbp-0x60],rsi
  40991b:	mov    rsi,rcx
  40991e:	mov    rcx,QWORD PTR [rbp-0x60]
  409922:	call   4077f0 <UnityAssertEqualIntArray@@Base+0x970>
  409927:	mov    r8d,0x9
  40992d:	mov    ecx,r8d
  409930:	mov    r8d,0x8
  409936:	mov    edx,r8d
  409939:	cmp    eax,0x1
  40993c:	sete   r9b
  409940:	cmp    eax,0x1
  409943:	cmove  rcx,rdx
  409947:	lea    rdx,[rip+0xf6c2]        # 419010 <__bss_start@@Base+0xeb4>
  40994e:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409952:	add    rsi,0x1
  409956:	mov    QWORD PTR [rdx+rcx*8],rsi
  40995a:	test   r9b,0x1
  40995e:	jne    409969 <UnityAssertEqualStringArray@@Base+0x1e9>
  409964:	jmp    409980 <UnityAssertEqualStringArray@@Base+0x200>
  409969:	mov    rax,QWORD PTR [rip+0xf6f0]        # 419060 <__bss_start@@Base+0xf04>
  409970:	add    rax,0x1
  409974:	mov    QWORD PTR [rip+0xf6e5],rax        # 419060 <__bss_start@@Base+0xf04>
  40997b:	jmp    409dca <UnityAssertEqualStringArray@@Base+0x64a>
  409980:	mov    rax,QWORD PTR [rip+0xf6e1]        # 419068 <__bss_start@@Base+0xf0c>
  409987:	add    rax,0x1
  40998b:	mov    QWORD PTR [rip+0xf6d6],rax        # 419068 <__bss_start@@Base+0xf0c>
  409992:	mov    eax,0xd
  409997:	mov    ecx,eax
  409999:	mov    eax,0xc
  40999e:	mov    edx,eax
  4099a0:	mov    rsi,QWORD PTR [rbp-0x8]
  4099a4:	mov    eax,DWORD PTR [rbp-0x30]
  4099a7:	mov    edi,eax
  4099a9:	mov    rsi,QWORD PTR [rsi+rdi*8]
  4099ad:	cmp    rsi,0x0
  4099b1:	setne  r8b
  4099b5:	cmp    rsi,0x0
  4099b9:	cmovne rcx,rdx
  4099bd:	lea    rdx,[rip+0xf64c]        # 419010 <__bss_start@@Base+0xeb4>
  4099c4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4099c8:	add    rsi,0x1
  4099cc:	mov    QWORD PTR [rdx+rcx*8],rsi
  4099d0:	test   r8b,0x1
  4099d4:	jne    4099df <UnityAssertEqualStringArray@@Base+0x25f>
  4099da:	jmp    409be3 <UnityAssertEqualStringArray@@Base+0x463>
  4099df:	mov    eax,0xf
  4099e4:	mov    ecx,eax
  4099e6:	mov    eax,0xe
  4099eb:	mov    edx,eax
  4099ed:	mov    rsi,QWORD PTR [rbp-0x10]
  4099f1:	mov    eax,DWORD PTR [rbp-0x30]
  4099f4:	mov    edi,eax
  4099f6:	mov    rsi,QWORD PTR [rsi+rdi*8]
  4099fa:	cmp    rsi,0x0
  4099fe:	setne  r8b
  409a02:	cmp    rsi,0x0
  409a06:	cmovne rcx,rdx
  409a0a:	lea    rdx,[rip+0xf5ff]        # 419010 <__bss_start@@Base+0xeb4>
  409a11:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409a15:	add    rsi,0x1
  409a19:	mov    QWORD PTR [rdx+rcx*8],rsi
  409a1d:	test   r8b,0x1
  409a21:	jne    409a2c <UnityAssertEqualStringArray@@Base+0x2ac>
  409a27:	jmp    409be3 <UnityAssertEqualStringArray@@Base+0x463>
  409a2c:	mov    rax,QWORD PTR [rip+0xf65d]        # 419090 <__bss_start@@Base+0xf34>
  409a33:	add    rax,0x1
  409a37:	mov    QWORD PTR [rip+0xf652],rax        # 419090 <__bss_start@@Base+0xf34>
  409a3e:	mov    DWORD PTR [rbp-0x2c],0x0
  409a45:	mov    eax,0x12
  409a4a:	mov    ecx,eax
  409a4c:	mov    eax,0x11
  409a51:	mov    edx,eax
  409a53:	mov    rsi,QWORD PTR [rbp-0x8]
  409a57:	mov    eax,DWORD PTR [rbp-0x30]
  409a5a:	mov    edi,eax
  409a5c:	mov    rsi,QWORD PTR [rsi+rdi*8]
  409a60:	mov    eax,DWORD PTR [rbp-0x2c]
  409a63:	mov    edi,eax
  409a65:	movsx  eax,BYTE PTR [rsi+rdi*1]
  409a69:	cmp    eax,0x0
  409a6c:	setne  r8b
  409a70:	cmp    eax,0x0
  409a73:	cmovne rcx,rdx
  409a77:	lea    rdx,[rip+0xf592]        # 419010 <__bss_start@@Base+0xeb4>
  409a7e:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409a82:	add    rsi,0x1
  409a86:	mov    QWORD PTR [rdx+rcx*8],rsi
  409a8a:	test   r8b,0x1
  409a8e:	mov    r8b,0x1
  409a91:	mov    BYTE PTR [rbp-0x61],r8b
  409a95:	jne    409ace <UnityAssertEqualStringArray@@Base+0x34e>
  409a9b:	mov    rax,QWORD PTR [rip+0xf606]        # 4190a8 <__bss_start@@Base+0xf4c>
  409aa2:	add    rax,0x1
  409aa6:	mov    QWORD PTR [rip+0xf5fb],rax        # 4190a8 <__bss_start@@Base+0xf4c>
  409aad:	mov    rax,QWORD PTR [rbp-0x10]
  409ab1:	mov    ecx,DWORD PTR [rbp-0x30]
  409ab4:	mov    edx,ecx
  409ab6:	mov    rax,QWORD PTR [rax+rdx*8]
  409aba:	mov    ecx,DWORD PTR [rbp-0x2c]
  409abd:	mov    edx,ecx
  409abf:	movsx  ecx,BYTE PTR [rax+rdx*1]
  409ac3:	cmp    ecx,0x0
  409ac6:	setne  sil
  409aca:	mov    BYTE PTR [rbp-0x61],sil
  409ace:	mov    al,BYTE PTR [rbp-0x61]
  409ad1:	mov    ecx,0x15
  409ad6:	mov    edx,ecx
  409ad8:	mov    ecx,0x14
  409add:	mov    esi,ecx
  409adf:	test   al,0x1
  409ae1:	cmovne rdx,rsi
  409ae5:	lea    rsi,[rip+0xf524]        # 419010 <__bss_start@@Base+0xeb4>
  409aec:	mov    rdi,QWORD PTR [rsi+rdx*8]
  409af0:	add    rdi,0x1
  409af4:	mov    QWORD PTR [rsi+rdx*8],rdi
  409af8:	test   al,0x1
  409afa:	jne    409b05 <UnityAssertEqualStringArray@@Base+0x385>
  409b00:	jmp    409bcc <UnityAssertEqualStringArray@@Base+0x44c>
  409b05:	mov    eax,0x17
  409b0a:	mov    ecx,eax
  409b0c:	mov    eax,0x16
  409b11:	mov    edx,eax
  409b13:	mov    rsi,QWORD PTR [rbp-0x8]
  409b17:	mov    eax,DWORD PTR [rbp-0x30]
  409b1a:	mov    edi,eax
  409b1c:	mov    rsi,QWORD PTR [rsi+rdi*8]
  409b20:	mov    eax,DWORD PTR [rbp-0x2c]
  409b23:	mov    edi,eax
  409b25:	movsx  eax,BYTE PTR [rsi+rdi*1]
  409b29:	mov    rsi,QWORD PTR [rbp-0x10]
  409b2d:	mov    r8d,DWORD PTR [rbp-0x30]
  409b31:	mov    edi,r8d
  409b34:	mov    rsi,QWORD PTR [rsi+rdi*8]
  409b38:	mov    r8d,DWORD PTR [rbp-0x2c]
  409b3c:	mov    edi,r8d
  409b3f:	movsx  r8d,BYTE PTR [rsi+rdi*1]
  409b44:	cmp    eax,r8d
  409b47:	setne  r9b
  409b4b:	cmp    eax,r8d
  409b4e:	cmovne rcx,rdx
  409b52:	lea    rdx,[rip+0xf4b7]        # 419010 <__bss_start@@Base+0xeb4>
  409b59:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409b5d:	add    rsi,0x1
  409b61:	mov    QWORD PTR [rdx+rcx*8],rsi
  409b65:	test   r9b,0x1
  409b69:	jne    409b74 <UnityAssertEqualStringArray@@Base+0x3f4>
  409b6f:	jmp    409b9a <UnityAssertEqualStringArray@@Base+0x41a>
  409b74:	lea    rax,[rip+0xff85]        # 419b00 <Unity@@Base>
  409b7b:	mov    rcx,QWORD PTR [rip+0xf54e]        # 4190d0 <__bss_start@@Base+0xf74>
  409b82:	add    rcx,0x1
  409b86:	mov    QWORD PTR [rip+0xf543],rcx        # 4190d0 <__bss_start@@Base+0xf74>
  409b8d:	mov    QWORD PTR [rax+0x40],0x1
  409b95:	jmp    409bcc <UnityAssertEqualStringArray@@Base+0x44c>
  409b9a:	mov    rax,QWORD PTR [rip+0xf537]        # 4190d8 <__bss_start@@Base+0xf7c>
  409ba1:	add    rax,0x1
  409ba5:	mov    QWORD PTR [rip+0xf52c],rax        # 4190d8 <__bss_start@@Base+0xf7c>
  409bac:	mov    rax,QWORD PTR [rip+0xf52d]        # 4190e0 <__bss_start@@Base+0xf84>
  409bb3:	add    rax,0x1
  409bb7:	mov    QWORD PTR [rip+0xf522],rax        # 4190e0 <__bss_start@@Base+0xf84>
  409bbe:	mov    ecx,DWORD PTR [rbp-0x2c]
  409bc1:	add    ecx,0x1
  409bc4:	mov    DWORD PTR [rbp-0x2c],ecx
  409bc7:	jmp    409a45 <UnityAssertEqualStringArray@@Base+0x2c5>
  409bcc:	mov    rax,QWORD PTR [rip+0xf515]        # 4190e8 <__bss_start@@Base+0xf8c>
  409bd3:	add    rax,0x1
  409bd7:	mov    QWORD PTR [rip+0xf50a],rax        # 4190e8 <__bss_start@@Base+0xf8c>
  409bde:	jmp    409c6f <UnityAssertEqualStringArray@@Base+0x4ef>
  409be3:	mov    eax,0x1d
  409be8:	mov    ecx,eax
  409bea:	mov    eax,0x1c
  409bef:	mov    edx,eax
  409bf1:	mov    rsi,QWORD PTR [rbp-0x8]
  409bf5:	mov    eax,DWORD PTR [rbp-0x30]
  409bf8:	mov    edi,eax
  409bfa:	mov    rsi,QWORD PTR [rsi+rdi*8]
  409bfe:	mov    rdi,QWORD PTR [rbp-0x10]
  409c02:	mov    eax,DWORD PTR [rbp-0x30]
  409c05:	mov    r8d,eax
  409c08:	mov    rdi,QWORD PTR [rdi+r8*8]
  409c0c:	cmp    rsi,rdi
  409c0f:	setne  r9b
  409c13:	cmp    rsi,rdi
  409c16:	cmovne rcx,rdx
  409c1a:	lea    rdx,[rip+0xf3ef]        # 419010 <__bss_start@@Base+0xeb4>
  409c21:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409c25:	add    rsi,0x1
  409c29:	mov    QWORD PTR [rdx+rcx*8],rsi
  409c2d:	test   r9b,0x1
  409c31:	jne    409c3c <UnityAssertEqualStringArray@@Base+0x4bc>
  409c37:	jmp    409c5d <UnityAssertEqualStringArray@@Base+0x4dd>
  409c3c:	lea    rax,[rip+0xfebd]        # 419b00 <Unity@@Base>
  409c43:	mov    rcx,QWORD PTR [rip+0xf4b6]        # 419100 <__bss_start@@Base+0xfa4>
  409c4a:	add    rcx,0x1
  409c4e:	mov    QWORD PTR [rip+0xf4ab],rcx        # 419100 <__bss_start@@Base+0xfa4>
  409c55:	mov    QWORD PTR [rax+0x40],0x1
  409c5d:	mov    rax,QWORD PTR [rip+0xf4a4]        # 419108 <__bss_start@@Base+0xfac>
  409c64:	add    rax,0x1
  409c68:	mov    QWORD PTR [rip+0xf499],rax        # 419108 <__bss_start@@Base+0xfac>
  409c6f:	mov    eax,0x21
  409c74:	mov    ecx,eax
  409c76:	mov    eax,0x20
  409c7b:	mov    edx,eax
  409c7d:	lea    rsi,[rip+0xfe7c]        # 419b00 <Unity@@Base>
  409c84:	mov    rsi,QWORD PTR [rsi+0x40]
  409c88:	cmp    rsi,0x0
  409c8c:	setne  dil
  409c90:	cmp    rsi,0x0
  409c94:	cmovne rcx,rdx
  409c98:	lea    rdx,[rip+0xf371]        # 419010 <__bss_start@@Base+0xeb4>
  409c9f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409ca3:	add    rsi,0x1
  409ca7:	mov    QWORD PTR [rdx+rcx*8],rsi
  409cab:	test   dil,0x1
  409caf:	jne    409cba <UnityAssertEqualStringArray@@Base+0x53a>
  409cb5:	jmp    409d75 <UnityAssertEqualStringArray@@Base+0x5f5>
  409cba:	mov    rdi,QWORD PTR [rbp-0x28]
  409cbe:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  409cc3:	mov    eax,0x23
  409cc8:	mov    edi,eax
  409cca:	mov    eax,0x22
  409ccf:	mov    ecx,eax
  409cd1:	mov    eax,DWORD PTR [rbp-0x14]
  409cd4:	cmp    eax,0x1
  409cd7:	seta   dl
  409cda:	cmp    eax,0x1
  409cdd:	cmova  rdi,rcx
  409ce1:	lea    rcx,[rip+0xf328]        # 419010 <__bss_start@@Base+0xeb4>
  409ce8:	mov    rsi,QWORD PTR [rcx+rdi*8]
  409cec:	add    rsi,0x1
  409cf0:	mov    QWORD PTR [rcx+rdi*8],rsi
  409cf4:	test   dl,0x1
  409cf7:	jne    409d02 <UnityAssertEqualStringArray@@Base+0x582>
  409cfd:	jmp    409d2a <UnityAssertEqualStringArray@@Base+0x5aa>
  409d02:	lea    rdi,[rip+0x8919]        # 412622 <UnityStrElement@@Base>
  409d09:	mov    rax,QWORD PTR [rip+0xf420]        # 419130 <__bss_start@@Base+0xfd4>
  409d10:	add    rax,0x1
  409d14:	mov    QWORD PTR [rip+0xf415],rax        # 419130 <__bss_start@@Base+0xfd4>
  409d1b:	call   405610 <UnityPrint@@Base>
  409d20:	mov    ecx,DWORD PTR [rbp-0x30]
  409d23:	mov    edi,ecx
  409d25:	call   406230 <UnityPrintNumberUnsigned@@Base>
  409d2a:	mov    rax,QWORD PTR [rbp-0x8]
  409d2e:	mov    ecx,DWORD PTR [rbp-0x30]
  409d31:	mov    edx,ecx
  409d33:	mov    rdi,QWORD PTR [rax+rdx*8]
  409d37:	mov    rax,QWORD PTR [rbp-0x10]
  409d3b:	mov    ecx,DWORD PTR [rbp-0x30]
  409d3e:	mov    edx,ecx
  409d40:	mov    rsi,QWORD PTR [rax+rdx*8]
  409d44:	call   408fb0 <UnityAssertEqualString@@Base+0x430>
  409d49:	mov    rdi,QWORD PTR [rbp-0x20]
  409d4d:	call   406b10 <UnityAssertBits@@Base+0x240>
  409d52:	lea    rax,[rip+0xfda7]        # 419b00 <Unity@@Base>
  409d59:	mov    rdx,rax
  409d5c:	add    rdx,0x50
  409d60:	mov    QWORD PTR [rax+0x40],0x1
  409d68:	mov    rdi,rdx
  409d6b:	mov    esi,0x1
  409d70:	call   4031f0 <longjmp@plt>
  409d75:	mov    rax,QWORD PTR [rip+0xf3bc]        # 419138 <__bss_start@@Base+0xfdc>
  409d7c:	add    rax,0x1
  409d80:	mov    QWORD PTR [rip+0xf3b1],rax        # 419138 <__bss_start@@Base+0xfdc>
  409d87:	mov    eax,0x27
  409d8c:	mov    ecx,eax
  409d8e:	mov    eax,0x26
  409d93:	mov    edx,eax
  409d95:	mov    eax,DWORD PTR [rbp-0x30]
  409d98:	add    eax,0x1
  409d9b:	mov    DWORD PTR [rbp-0x30],eax
  409d9e:	mov    esi,DWORD PTR [rbp-0x14]
  409da1:	cmp    eax,esi
  409da3:	setb   dil
  409da7:	cmp    eax,esi
  409da9:	cmovb  rcx,rdx
  409dad:	lea    rdx,[rip+0xf25c]        # 419010 <__bss_start@@Base+0xeb4>
  409db4:	mov    r8,QWORD PTR [rdx+rcx*8]
  409db8:	add    r8,0x1
  409dbc:	mov    QWORD PTR [rdx+rcx*8],r8
  409dc0:	test   dil,0x1
  409dc4:	jne    409992 <UnityAssertEqualStringArray@@Base+0x212>
  409dca:	mov    rax,QWORD PTR [rip+0xf37f]        # 419150 <__bss_start@@Base+0xff4>
  409dd1:	add    rax,0x1
  409dd5:	mov    QWORD PTR [rip+0xf374],rax        # 419150 <__bss_start@@Base+0xff4>
  409ddc:	add    rsp,0x70
  409de0:	pop    rbp
  409de1:	ret    
  409de2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dec:	nop    DWORD PTR [rax+0x0]

0000000000409df0 <UnityAssertEqualMemory@@Base>:
  409df0:	push   rbp
  409df1:	mov    rbp,rsp
  409df4:	push   r15
  409df6:	push   r14
  409df8:	push   rbx
  409df9:	sub    rsp,0x68
  409dfd:	mov    rax,QWORD PTR [rip+0xf35c]        # 419160 <__bss_start@@Base+0x1004>
  409e04:	add    rax,0x1
  409e08:	mov    QWORD PTR [rip+0xf351],rax        # 419160 <__bss_start@@Base+0x1004>
  409e0f:	mov    QWORD PTR [rbp-0x60],r8
  409e13:	mov    DWORD PTR [rbp-0x64],ecx
  409e16:	mov    DWORD PTR [rbp-0x68],edx
  409e19:	mov    QWORD PTR [rbp-0x70],rsi
  409e1d:	mov    QWORD PTR [rbp-0x78],rdi
  409e21:	mov    QWORD PTR [rbp-0x80],r9
  409e25:	mov    eax,0x2
  409e2a:	mov    ecx,eax
  409e2c:	mov    eax,0x1
  409e31:	mov    edx,eax
  409e33:	lea    rsi,[rip+0xfcc6]        # 419b00 <Unity@@Base>
  409e3a:	mov    rdi,QWORD PTR [rbp-0x78]
  409e3e:	mov    QWORD PTR [rbp-0x20],rdi
  409e42:	mov    r8,QWORD PTR [rbp-0x70]
  409e46:	mov    QWORD PTR [rbp-0x28],r8
  409e4a:	mov    eax,DWORD PTR [rbp-0x68]
  409e4d:	mov    DWORD PTR [rbp-0x2c],eax
  409e50:	mov    r9d,DWORD PTR [rbp-0x64]
  409e54:	mov    DWORD PTR [rbp-0x30],r9d
  409e58:	mov    r10,QWORD PTR [rbp-0x60]
  409e5c:	mov    QWORD PTR [rbp-0x38],r10
  409e60:	mov    r11,QWORD PTR [rbp-0x80]
  409e64:	mov    QWORD PTR [rbp-0x40],r11
  409e68:	mov    rbx,QWORD PTR [rbp-0x20]
  409e6c:	mov    QWORD PTR [rbp-0x48],rbx
  409e70:	mov    rbx,QWORD PTR [rbp-0x28]
  409e74:	mov    QWORD PTR [rbp-0x50],rbx
  409e78:	mov    r14d,DWORD PTR [rbp-0x30]
  409e7c:	mov    DWORD PTR [rbp-0x54],r14d
  409e80:	mov    rsi,QWORD PTR [rsi+0x40]
  409e84:	cmp    rsi,0x0
  409e88:	setne  r15b
  409e8c:	cmp    rsi,0x0
  409e90:	cmovne rcx,rdx
  409e94:	lea    rdx,[rip+0xf2c5]        # 419160 <__bss_start@@Base+0x1004>
  409e9b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409e9f:	add    rsi,0x1
  409ea3:	mov    QWORD PTR [rdx+rcx*8],rsi
  409ea7:	test   r15b,0x1
  409eab:	jne    409efc <UnityAssertEqualMemory@@Base+0x10c>
  409eb1:	mov    eax,0x4
  409eb6:	mov    ecx,eax
  409eb8:	mov    eax,0x3
  409ebd:	mov    edx,eax
  409ebf:	lea    rsi,[rip+0xfc3a]        # 419b00 <Unity@@Base>
  409ec6:	mov    rsi,QWORD PTR [rsi+0x48]
  409eca:	cmp    rsi,0x0
  409ece:	setne  dil
  409ed2:	cmp    rsi,0x0
  409ed6:	cmovne rcx,rdx
  409eda:	lea    rdx,[rip+0xf27f]        # 419160 <__bss_start@@Base+0x1004>
  409ee1:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409ee5:	add    rsi,0x1
  409ee9:	mov    QWORD PTR [rdx+rcx*8],rsi
  409eed:	test   dil,0x1
  409ef1:	jne    409efc <UnityAssertEqualMemory@@Base+0x10c>
  409ef7:	jmp    409f13 <UnityAssertEqualMemory@@Base+0x123>
  409efc:	mov    rax,QWORD PTR [rip+0xf285]        # 419188 <__bss_start@@Base+0x102c>
  409f03:	add    rax,0x1
  409f07:	mov    QWORD PTR [rip+0xf27a],rax        # 419188 <__bss_start@@Base+0x102c>
  409f0e:	jmp    40a297 <UnityAssertEqualMemory@@Base+0x4a7>
  409f13:	mov    eax,0x7
  409f18:	mov    ecx,eax
  409f1a:	mov    eax,0x6
  409f1f:	mov    edx,eax
  409f21:	mov    eax,DWORD PTR [rbp-0x54]
  409f24:	cmp    eax,0x0
  409f27:	sete   sil
  409f2b:	cmp    eax,0x0
  409f2e:	cmove  rcx,rdx
  409f32:	lea    rdx,[rip+0xf227]        # 419160 <__bss_start@@Base+0x1004>
  409f39:	mov    rdi,QWORD PTR [rdx+rcx*8]
  409f3d:	add    rdi,0x1
  409f41:	mov    QWORD PTR [rdx+rcx*8],rdi
  409f45:	test   sil,0x1
  409f49:	jne    409f90 <UnityAssertEqualMemory@@Base+0x1a0>
  409f4f:	mov    eax,0x9
  409f54:	mov    ecx,eax
  409f56:	mov    eax,0x8
  409f5b:	mov    edx,eax
  409f5d:	mov    eax,DWORD PTR [rbp-0x2c]
  409f60:	cmp    eax,0x0
  409f63:	sete   sil
  409f67:	cmp    eax,0x0
  409f6a:	cmove  rcx,rdx
  409f6e:	lea    rdx,[rip+0xf1eb]        # 419160 <__bss_start@@Base+0x1004>
  409f75:	mov    rdi,QWORD PTR [rdx+rcx*8]
  409f79:	add    rdi,0x1
  409f7d:	mov    QWORD PTR [rdx+rcx*8],rdi
  409f81:	test   sil,0x1
  409f85:	jne    409f90 <UnityAssertEqualMemory@@Base+0x1a0>
  409f8b:	jmp    409fd1 <UnityAssertEqualMemory@@Base+0x1e1>
  409f90:	mov    rdi,QWORD PTR [rbp-0x40]
  409f94:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  409f99:	lea    rdi,[rip+0x86e0]        # 412680 <UnityStrPointless@@Base>
  409fa0:	call   405610 <UnityPrint@@Base>
  409fa5:	mov    rdi,QWORD PTR [rbp-0x38]
  409fa9:	call   406b10 <UnityAssertBits@@Base+0x240>
  409fae:	lea    rdi,[rip+0xfb4b]        # 419b00 <Unity@@Base>
  409fb5:	mov    rax,rdi
  409fb8:	add    rax,0x50
  409fbc:	mov    QWORD PTR [rdi+0x40],0x1
  409fc4:	mov    rdi,rax
  409fc7:	mov    esi,0x1
  409fcc:	call   4031f0 <longjmp@plt>
  409fd1:	mov    rdi,QWORD PTR [rbp-0x20]
  409fd5:	mov    rsi,QWORD PTR [rbp-0x28]
  409fd9:	mov    rdx,QWORD PTR [rbp-0x40]
  409fdd:	mov    rcx,QWORD PTR [rbp-0x38]
  409fe1:	call   4077f0 <UnityAssertEqualIntArray@@Base+0x970>
  409fe6:	mov    r8d,0xb
  409fec:	mov    ecx,r8d
  409fef:	mov    r8d,0xa
  409ff5:	mov    edx,r8d
  409ff8:	cmp    eax,0x1
  409ffb:	sete   r9b
  409fff:	cmp    eax,0x1
  40a002:	cmove  rcx,rdx
  40a006:	lea    rdx,[rip+0xf153]        # 419160 <__bss_start@@Base+0x1004>
  40a00d:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a011:	add    rsi,0x1
  40a015:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a019:	test   r9b,0x1
  40a01d:	jne    40a028 <UnityAssertEqualMemory@@Base+0x238>
  40a023:	jmp    40a03f <UnityAssertEqualMemory@@Base+0x24f>
  40a028:	mov    rax,QWORD PTR [rip+0xf191]        # 4191c0 <__bss_start@@Base+0x1064>
  40a02f:	add    rax,0x1
  40a033:	mov    QWORD PTR [rip+0xf186],rax        # 4191c0 <__bss_start@@Base+0x1064>
  40a03a:	jmp    40a297 <UnityAssertEqualMemory@@Base+0x4a7>
  40a03f:	mov    rax,QWORD PTR [rip+0xf182]        # 4191c8 <__bss_start@@Base+0x106c>
  40a046:	add    rax,0x1
  40a04a:	mov    QWORD PTR [rip+0xf177],rax        # 4191c8 <__bss_start@@Base+0x106c>
  40a051:	mov    eax,0xf
  40a056:	mov    ecx,eax
  40a058:	mov    eax,0xe
  40a05d:	mov    edx,eax
  40a05f:	mov    eax,DWORD PTR [rbp-0x54]
  40a062:	mov    esi,eax
  40a064:	add    esi,0xffffffff
  40a067:	mov    DWORD PTR [rbp-0x54],esi
  40a06a:	cmp    eax,0x0
  40a06d:	setne  dil
  40a071:	cmp    eax,0x0
  40a074:	cmovne rcx,rdx
  40a078:	lea    rdx,[rip+0xf0e1]        # 419160 <__bss_start@@Base+0x1004>
  40a07f:	mov    r8,QWORD PTR [rdx+rcx*8]
  40a083:	add    r8,0x1
  40a087:	mov    QWORD PTR [rdx+rcx*8],r8
  40a08b:	test   dil,0x1
  40a08f:	jne    40a09a <UnityAssertEqualMemory@@Base+0x2aa>
  40a095:	jmp    40a297 <UnityAssertEqualMemory@@Base+0x4a7>
  40a09a:	mov    rax,QWORD PTR [rip+0xf13f]        # 4191e0 <__bss_start@@Base+0x1084>
  40a0a1:	add    rax,0x1
  40a0a5:	mov    QWORD PTR [rip+0xf134],rax        # 4191e0 <__bss_start@@Base+0x1084>
  40a0ac:	mov    ecx,DWORD PTR [rbp-0x2c]
  40a0af:	mov    DWORD PTR [rbp-0x58],ecx
  40a0b2:	mov    eax,0x12
  40a0b7:	mov    ecx,eax
  40a0b9:	mov    eax,0x11
  40a0be:	mov    edx,eax
  40a0c0:	mov    eax,DWORD PTR [rbp-0x58]
  40a0c3:	mov    esi,eax
  40a0c5:	add    esi,0xffffffff
  40a0c8:	mov    DWORD PTR [rbp-0x58],esi
  40a0cb:	cmp    eax,0x0
  40a0ce:	setne  dil
  40a0d2:	cmp    eax,0x0
  40a0d5:	cmovne rcx,rdx
  40a0d9:	lea    rdx,[rip+0xf080]        # 419160 <__bss_start@@Base+0x1004>
  40a0e0:	mov    r8,QWORD PTR [rdx+rcx*8]
  40a0e4:	add    r8,0x1
  40a0e8:	mov    QWORD PTR [rdx+rcx*8],r8
  40a0ec:	test   dil,0x1
  40a0f0:	jne    40a0fb <UnityAssertEqualMemory@@Base+0x30b>
  40a0f6:	jmp    40a280 <UnityAssertEqualMemory@@Base+0x490>
  40a0fb:	mov    eax,0x14
  40a100:	mov    ecx,eax
  40a102:	mov    eax,0x13
  40a107:	mov    edx,eax
  40a109:	mov    rsi,QWORD PTR [rbp-0x48]
  40a10d:	movzx  eax,BYTE PTR [rsi]
  40a110:	mov    rsi,QWORD PTR [rbp-0x50]
  40a114:	movzx  edi,BYTE PTR [rsi]
  40a117:	cmp    eax,edi
  40a119:	setne  r8b
  40a11d:	cmp    eax,edi
  40a11f:	cmovne rcx,rdx
  40a123:	lea    rdx,[rip+0xf036]        # 419160 <__bss_start@@Base+0x1004>
  40a12a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a12e:	add    rsi,0x1
  40a132:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a136:	test   r8b,0x1
  40a13a:	jne    40a145 <UnityAssertEqualMemory@@Base+0x355>
  40a140:	jmp    40a251 <UnityAssertEqualMemory@@Base+0x461>
  40a145:	mov    rdi,QWORD PTR [rbp-0x40]
  40a149:	call   406aa0 <UnityAssertBits@@Base+0x1d0>
  40a14e:	lea    rdi,[rip+0x84eb]        # 412640 <UnityStrMemory@@Base>
  40a155:	call   405610 <UnityPrint@@Base>
  40a15a:	mov    eax,0x16
  40a15f:	mov    edi,eax
  40a161:	mov    eax,0x15
  40a166:	mov    ecx,eax
  40a168:	mov    eax,DWORD PTR [rbp-0x30]
  40a16b:	cmp    eax,0x1
  40a16e:	seta   dl
  40a171:	cmp    eax,0x1
  40a174:	cmova  rdi,rcx
  40a178:	lea    rcx,[rip+0xefe1]        # 419160 <__bss_start@@Base+0x1004>
  40a17f:	mov    rsi,QWORD PTR [rcx+rdi*8]
  40a183:	add    rsi,0x1
  40a187:	mov    QWORD PTR [rcx+rdi*8],rsi
  40a18b:	test   dl,0x1
  40a18e:	jne    40a199 <UnityAssertEqualMemory@@Base+0x3a9>
  40a194:	jmp    40a1c9 <UnityAssertEqualMemory@@Base+0x3d9>
  40a199:	lea    rdi,[rip+0x8482]        # 412622 <UnityStrElement@@Base>
  40a1a0:	mov    rax,QWORD PTR [rip+0xf071]        # 419218 <__bss_start@@Base+0x10bc>
  40a1a7:	add    rax,0x1
  40a1ab:	mov    QWORD PTR [rip+0xf066],rax        # 419218 <__bss_start@@Base+0x10bc>
  40a1b2:	call   405610 <UnityPrint@@Base>
  40a1b7:	mov    ecx,DWORD PTR [rbp-0x30]
  40a1ba:	sub    ecx,DWORD PTR [rbp-0x54]
  40a1bd:	sub    ecx,0x1
  40a1c0:	mov    ecx,ecx
  40a1c2:	mov    edi,ecx
  40a1c4:	call   406230 <UnityPrintNumberUnsigned@@Base>
  40a1c9:	lea    rdi,[rip+0x845c]        # 41262c <UnityStrByte@@Base>
  40a1d0:	call   405610 <UnityPrint@@Base>
  40a1d5:	mov    eax,DWORD PTR [rbp-0x2c]
  40a1d8:	sub    eax,DWORD PTR [rbp-0x58]
  40a1db:	sub    eax,0x1
  40a1de:	mov    eax,eax
  40a1e0:	mov    edi,eax
  40a1e2:	call   406230 <UnityPrintNumberUnsigned@@Base>
  40a1e7:	lea    rdi,[rip+0x841e]        # 41260c <UnityStrExpected@@Base>
  40a1ee:	call   405610 <UnityPrint@@Base>
  40a1f3:	mov    rdi,QWORD PTR [rbp-0x48]
  40a1f7:	movzx  eax,BYTE PTR [rdi]
  40a1fa:	mov    edi,eax
  40a1fc:	mov    esi,0x41
  40a201:	call   405e40 <UnityPrintNumberByStyle@@Base>
  40a206:	lea    rdi,[rip+0x840a]        # 412617 <UnityStrWas@@Base>
  40a20d:	call   405610 <UnityPrint@@Base>
  40a212:	mov    rdi,QWORD PTR [rbp-0x50]
  40a216:	movzx  eax,BYTE PTR [rdi]
  40a219:	mov    edi,eax
  40a21b:	mov    esi,0x41
  40a220:	call   405e40 <UnityPrintNumberByStyle@@Base>
  40a225:	mov    rdi,QWORD PTR [rbp-0x38]
  40a229:	call   406b10 <UnityAssertBits@@Base+0x240>
  40a22e:	lea    rdi,[rip+0xf8cb]        # 419b00 <Unity@@Base>
  40a235:	mov    rcx,rdi
  40a238:	add    rcx,0x50
  40a23c:	mov    QWORD PTR [rdi+0x40],0x1
  40a244:	mov    rdi,rcx
  40a247:	mov    esi,0x1
  40a24c:	call   4031f0 <longjmp@plt>
  40a251:	mov    rax,QWORD PTR [rip+0xefc8]        # 419220 <__bss_start@@Base+0x10c4>
  40a258:	add    rax,0x1
  40a25c:	mov    QWORD PTR [rip+0xefbd],rax        # 419220 <__bss_start@@Base+0x10c4>
  40a263:	mov    rax,QWORD PTR [rbp-0x48]
  40a267:	add    rax,0x1
  40a26b:	mov    QWORD PTR [rbp-0x48],rax
  40a26f:	mov    rax,QWORD PTR [rbp-0x50]
  40a273:	add    rax,0x1
  40a277:	mov    QWORD PTR [rbp-0x50],rax
  40a27b:	jmp    40a0b2 <UnityAssertEqualMemory@@Base+0x2c2>
  40a280:	mov    rax,QWORD PTR [rip+0xefa1]        # 419228 <__bss_start@@Base+0x10cc>
  40a287:	add    rax,0x1
  40a28b:	mov    QWORD PTR [rip+0xef96],rax        # 419228 <__bss_start@@Base+0x10cc>
  40a292:	jmp    40a051 <UnityAssertEqualMemory@@Base+0x261>
  40a297:	mov    rax,QWORD PTR [rip+0xef92]        # 419230 <__bss_start@@Base+0x10d4>
  40a29e:	add    rax,0x1
  40a2a2:	mov    QWORD PTR [rip+0xef87],rax        # 419230 <__bss_start@@Base+0x10d4>
  40a2a9:	add    rsp,0x68
  40a2ad:	pop    rbx
  40a2ae:	pop    r14
  40a2b0:	pop    r15
  40a2b2:	pop    rbp
  40a2b3:	ret    
  40a2b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2be:	xchg   ax,ax

000000000040a2c0 <UnityFail@@Base>:
  40a2c0:	push   rbp
  40a2c1:	mov    rbp,rsp
  40a2c4:	sub    rsp,0x30
  40a2c8:	mov    rax,QWORD PTR [rip+0xef71]        # 419240 <__bss_start@@Base+0x10e4>
  40a2cf:	add    rax,0x1
  40a2d3:	mov    QWORD PTR [rip+0xef66],rax        # 419240 <__bss_start@@Base+0x10e4>
  40a2da:	mov    QWORD PTR [rbp-0x18],rdi
  40a2de:	mov    QWORD PTR [rbp-0x20],rsi
  40a2e2:	mov    eax,0x2
  40a2e7:	mov    ecx,eax
  40a2e9:	mov    eax,0x1
  40a2ee:	mov    edx,eax
  40a2f0:	lea    rsi,[rip+0xf809]        # 419b00 <Unity@@Base>
  40a2f7:	mov    rdi,QWORD PTR [rbp-0x18]
  40a2fb:	mov    QWORD PTR [rbp-0x8],rdi
  40a2ff:	mov    r8,QWORD PTR [rbp-0x20]
  40a303:	mov    QWORD PTR [rbp-0x10],r8
  40a307:	mov    rsi,QWORD PTR [rsi+0x40]
  40a30b:	cmp    rsi,0x0
  40a30f:	setne  r9b
  40a313:	cmp    rsi,0x0
  40a317:	cmovne rcx,rdx
  40a31b:	lea    rdx,[rip+0xef1e]        # 419240 <__bss_start@@Base+0x10e4>
  40a322:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a326:	add    rsi,0x1
  40a32a:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a32e:	test   r9b,0x1
  40a332:	jne    40a383 <UnityFail@@Base+0xc3>
  40a338:	mov    eax,0x4
  40a33d:	mov    ecx,eax
  40a33f:	mov    eax,0x3
  40a344:	mov    edx,eax
  40a346:	lea    rsi,[rip+0xf7b3]        # 419b00 <Unity@@Base>
  40a34d:	mov    rsi,QWORD PTR [rsi+0x48]
  40a351:	cmp    rsi,0x0
  40a355:	setne  dil
  40a359:	cmp    rsi,0x0
  40a35d:	cmovne rcx,rdx
  40a361:	lea    rdx,[rip+0xeed8]        # 419240 <__bss_start@@Base+0x10e4>
  40a368:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a36c:	add    rsi,0x1
  40a370:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a374:	test   dil,0x1
  40a378:	jne    40a383 <UnityFail@@Base+0xc3>
  40a37e:	jmp    40a39b <UnityFail@@Base+0xdb>
  40a383:	mov    rax,QWORD PTR [rip+0xeede]        # 419268 <__bss_start@@Base+0x110c>
  40a38a:	add    rax,0x1
  40a38e:	mov    QWORD PTR [rip+0xeed3],rax        # 419268 <__bss_start@@Base+0x110c>
  40a395:	add    rsp,0x30
  40a399:	pop    rbp
  40a39a:	ret    
  40a39b:	lea    rax,[rip+0xf75e]        # 419b00 <Unity@@Base>
  40a3a2:	mov    rdi,QWORD PTR [rax]
  40a3a5:	mov    rsi,QWORD PTR [rbp-0x10]
  40a3a9:	call   406830 <UnityConcludeTest@@Base+0x180>
  40a3ae:	call   406630 <UnityPrintFail@@Base>
  40a3b3:	mov    ecx,0x7
  40a3b8:	mov    eax,ecx
  40a3ba:	mov    ecx,0x6
  40a3bf:	mov    esi,ecx
  40a3c1:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3c5:	cmp    rdi,0x0
  40a3c9:	setne  dl
  40a3cc:	cmp    rdi,0x0
  40a3d0:	cmovne rax,rsi
  40a3d4:	lea    rsi,[rip+0xee65]        # 419240 <__bss_start@@Base+0x10e4>
  40a3db:	mov    rdi,QWORD PTR [rsi+rax*8]
  40a3df:	add    rdi,0x1
  40a3e3:	mov    QWORD PTR [rsi+rax*8],rdi
  40a3e7:	test   dl,0x1
  40a3ea:	jne    40a3f5 <UnityFail@@Base+0x135>
  40a3f0:	jmp    40a57f <UnityFail@@Base+0x2bf>
  40a3f5:	mov    edi,0x3a
  40a3fa:	call   403050 <putchar@plt>
  40a3ff:	mov    edi,0x9
  40a404:	mov    ecx,edi
  40a406:	mov    edi,0x8
  40a40b:	mov    edx,edi
  40a40d:	lea    rsi,[rip+0xf6ec]        # 419b00 <Unity@@Base>
  40a414:	mov    rsi,QWORD PTR [rsi+0x10]
  40a418:	cmp    rsi,0x0
  40a41c:	setne  r8b
  40a420:	cmp    rsi,0x0
  40a424:	cmovne rcx,rdx
  40a428:	lea    rdx,[rip+0xee11]        # 419240 <__bss_start@@Base+0x10e4>
  40a42f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a433:	add    rsi,0x1
  40a437:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a43b:	test   r8b,0x1
  40a43f:	mov    DWORD PTR [rbp-0x24],eax
  40a442:	jne    40a44d <UnityFail@@Base+0x18d>
  40a448:	jmp    40a500 <UnityFail@@Base+0x240>
  40a44d:	lea    rdi,[rip+0x83a1]        # 4127f5 <UnityStrDetail1Name@@Base>
  40a454:	call   405610 <UnityPrint@@Base>
  40a459:	lea    rdi,[rip+0xf6a0]        # 419b00 <Unity@@Base>
  40a460:	mov    rdi,QWORD PTR [rdi+0x10]
  40a464:	call   405610 <UnityPrint@@Base>
  40a469:	mov    eax,0xb
  40a46e:	mov    edi,eax
  40a470:	mov    eax,0xa
  40a475:	mov    ecx,eax
  40a477:	lea    rdx,[rip+0xf682]        # 419b00 <Unity@@Base>
  40a47e:	mov    rdx,QWORD PTR [rdx+0x18]
  40a482:	cmp    rdx,0x0
  40a486:	setne  sil
  40a48a:	cmp    rdx,0x0
  40a48e:	cmovne rdi,rcx
  40a492:	lea    rcx,[rip+0xeda7]        # 419240 <__bss_start@@Base+0x10e4>
  40a499:	mov    rdx,QWORD PTR [rcx+rdi*8]
  40a49d:	add    rdx,0x1
  40a4a1:	mov    QWORD PTR [rcx+rdi*8],rdx
  40a4a5:	test   sil,0x1
  40a4a9:	jne    40a4b4 <UnityFail@@Base+0x1f4>
  40a4af:	jmp    40a4e2 <UnityFail@@Base+0x222>
  40a4b4:	lea    rdi,[rip+0x8344]        # 4127ff <UnityStrDetail2Name@@Base>
  40a4bb:	mov    rax,QWORD PTR [rip+0xedde]        # 4192a0 <__bss_start@@Base+0x1144>
  40a4c2:	add    rax,0x1
  40a4c6:	mov    QWORD PTR [rip+0xedd3],rax        # 4192a0 <__bss_start@@Base+0x1144>
  40a4cd:	call   405610 <UnityPrint@@Base>
  40a4d2:	lea    rax,[rip+0xf627]        # 419b00 <Unity@@Base>
  40a4d9:	mov    rdi,QWORD PTR [rax+0x18]
  40a4dd:	call   405610 <UnityPrint@@Base>
  40a4e2:	lea    rdi,[rip+0x8120]        # 412609 <UnityStrSpacer@@Base>
  40a4e9:	mov    rax,QWORD PTR [rip+0xedb8]        # 4192a8 <__bss_start@@Base+0x114c>
  40a4f0:	add    rax,0x1
  40a4f4:	mov    QWORD PTR [rip+0xedad],rax        # 4192a8 <__bss_start@@Base+0x114c>
  40a4fb:	call   405610 <UnityPrint@@Base>
  40a500:	mov    eax,0xf
  40a505:	mov    ecx,eax
  40a507:	mov    eax,0xe
  40a50c:	mov    edx,eax
  40a50e:	mov    rsi,QWORD PTR [rbp-0x8]
  40a512:	movsx  eax,BYTE PTR [rsi]
  40a515:	cmp    eax,0x20
  40a518:	setne  dil
  40a51c:	cmp    eax,0x20
  40a51f:	cmovne rcx,rdx
  40a523:	lea    rdx,[rip+0xed16]        # 419240 <__bss_start@@Base+0x10e4>
  40a52a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a52e:	add    rsi,0x1
  40a532:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a536:	test   dil,0x1
  40a53a:	jne    40a545 <UnityFail@@Base+0x285>
  40a540:	jmp    40a564 <UnityFail@@Base+0x2a4>
  40a545:	mov    rax,QWORD PTR [rip+0xed74]        # 4192c0 <__bss_start@@Base+0x1164>
  40a54c:	add    rax,0x1
  40a550:	mov    QWORD PTR [rip+0xed69],rax        # 4192c0 <__bss_start@@Base+0x1164>
  40a557:	mov    edi,0x20
  40a55c:	call   403050 <putchar@plt>
  40a561:	mov    DWORD PTR [rbp-0x28],eax
  40a564:	mov    rax,QWORD PTR [rip+0xed5d]        # 4192c8 <__bss_start@@Base+0x116c>
  40a56b:	add    rax,0x1
  40a56f:	mov    QWORD PTR [rip+0xed52],rax        # 4192c8 <__bss_start@@Base+0x116c>
  40a576:	mov    rdi,QWORD PTR [rbp-0x8]
  40a57a:	call   405610 <UnityPrint@@Base>
  40a57f:	lea    rax,[rip+0xf57a]        # 419b00 <Unity@@Base>
  40a586:	mov    rcx,rax
  40a589:	add    rcx,0x50
  40a58d:	mov    QWORD PTR [rax+0x40],0x1
  40a595:	mov    rdi,rcx
  40a598:	mov    esi,0x1
  40a59d:	call   4031f0 <longjmp@plt>
  40a5a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5ac:	nop    DWORD PTR [rax+0x0]

000000000040a5b0 <UnityIgnore@@Base>:
  40a5b0:	push   rbp
  40a5b1:	mov    rbp,rsp
  40a5b4:	sub    rsp,0x30
  40a5b8:	mov    rax,QWORD PTR [rip+0xed11]        # 4192d0 <__bss_start@@Base+0x1174>
  40a5bf:	add    rax,0x1
  40a5c3:	mov    QWORD PTR [rip+0xed06],rax        # 4192d0 <__bss_start@@Base+0x1174>
  40a5ca:	mov    QWORD PTR [rbp-0x18],rdi
  40a5ce:	mov    QWORD PTR [rbp-0x20],rsi
  40a5d2:	mov    eax,0x2
  40a5d7:	mov    ecx,eax
  40a5d9:	mov    eax,0x1
  40a5de:	mov    edx,eax
  40a5e0:	lea    rsi,[rip+0xf519]        # 419b00 <Unity@@Base>
  40a5e7:	mov    rdi,QWORD PTR [rbp-0x18]
  40a5eb:	mov    QWORD PTR [rbp-0x8],rdi
  40a5ef:	mov    r8,QWORD PTR [rbp-0x20]
  40a5f3:	mov    QWORD PTR [rbp-0x10],r8
  40a5f7:	mov    rsi,QWORD PTR [rsi+0x40]
  40a5fb:	cmp    rsi,0x0
  40a5ff:	setne  r9b
  40a603:	cmp    rsi,0x0
  40a607:	cmovne rcx,rdx
  40a60b:	lea    rdx,[rip+0xecbe]        # 4192d0 <__bss_start@@Base+0x1174>
  40a612:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a616:	add    rsi,0x1
  40a61a:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a61e:	test   r9b,0x1
  40a622:	jne    40a673 <UnityIgnore@@Base+0xc3>
  40a628:	mov    eax,0x4
  40a62d:	mov    ecx,eax
  40a62f:	mov    eax,0x3
  40a634:	mov    edx,eax
  40a636:	lea    rsi,[rip+0xf4c3]        # 419b00 <Unity@@Base>
  40a63d:	mov    rsi,QWORD PTR [rsi+0x48]
  40a641:	cmp    rsi,0x0
  40a645:	setne  dil
  40a649:	cmp    rsi,0x0
  40a64d:	cmovne rcx,rdx
  40a651:	lea    rdx,[rip+0xec78]        # 4192d0 <__bss_start@@Base+0x1174>
  40a658:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a65c:	add    rsi,0x1
  40a660:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a664:	test   dil,0x1
  40a668:	jne    40a673 <UnityIgnore@@Base+0xc3>
  40a66e:	jmp    40a68b <UnityIgnore@@Base+0xdb>
  40a673:	mov    rax,QWORD PTR [rip+0xec7e]        # 4192f8 <__bss_start@@Base+0x119c>
  40a67a:	add    rax,0x1
  40a67e:	mov    QWORD PTR [rip+0xec73],rax        # 4192f8 <__bss_start@@Base+0x119c>
  40a685:	add    rsp,0x30
  40a689:	pop    rbp
  40a68a:	ret    
  40a68b:	lea    rax,[rip+0xf46e]        # 419b00 <Unity@@Base>
  40a692:	mov    rdi,QWORD PTR [rax]
  40a695:	mov    rsi,QWORD PTR [rbp-0x10]
  40a699:	call   406830 <UnityConcludeTest@@Base+0x180>
  40a69e:	lea    rdi,[rip+0x7f58]        # 4125fd <UnityStrIgnore@@Base>
  40a6a5:	call   405610 <UnityPrint@@Base>
  40a6aa:	mov    ecx,0x7
  40a6af:	mov    eax,ecx
  40a6b1:	mov    ecx,0x6
  40a6b6:	mov    esi,ecx
  40a6b8:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6bc:	cmp    rdi,0x0
  40a6c0:	setne  dl
  40a6c3:	cmp    rdi,0x0
  40a6c7:	cmovne rax,rsi
  40a6cb:	lea    rsi,[rip+0xebfe]        # 4192d0 <__bss_start@@Base+0x1174>
  40a6d2:	mov    rdi,QWORD PTR [rsi+rax*8]
  40a6d6:	add    rdi,0x1
  40a6da:	mov    QWORD PTR [rsi+rax*8],rdi
  40a6de:	test   dl,0x1
  40a6e1:	jne    40a6ec <UnityIgnore@@Base+0x13c>
  40a6e7:	jmp    40a721 <UnityIgnore@@Base+0x171>
  40a6ec:	mov    rax,QWORD PTR [rip+0xec1d]        # 419310 <__bss_start@@Base+0x11b4>
  40a6f3:	add    rax,0x1
  40a6f7:	mov    QWORD PTR [rip+0xec12],rax        # 419310 <__bss_start@@Base+0x11b4>
  40a6fe:	mov    edi,0x3a
  40a703:	call   403050 <putchar@plt>
  40a708:	mov    edi,0x20
  40a70d:	mov    DWORD PTR [rbp-0x24],eax
  40a710:	call   403050 <putchar@plt>
  40a715:	mov    rdi,QWORD PTR [rbp-0x8]
  40a719:	mov    DWORD PTR [rbp-0x28],eax
  40a71c:	call   405610 <UnityPrint@@Base>
  40a721:	lea    rax,[rip+0xf3d8]        # 419b00 <Unity@@Base>
  40a728:	mov    rcx,rax
  40a72b:	add    rcx,0x50
  40a72f:	mov    QWORD PTR [rax+0x48],0x1
  40a737:	mov    rdi,rcx
  40a73a:	mov    esi,0x1
  40a73f:	call   4031f0 <longjmp@plt>
  40a744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a74e:	xchg   ax,ax

000000000040a750 <setUp@@Base>:
  40a750:	push   rbp
  40a751:	mov    rbp,rsp
  40a754:	mov    rax,QWORD PTR [rip+0xebbd]        # 419318 <__bss_start@@Base+0x11bc>
  40a75b:	add    rax,0x1
  40a75f:	mov    QWORD PTR [rip+0xebb2],rax        # 419318 <__bss_start@@Base+0x11bc>
  40a766:	mov    rax,QWORD PTR [rip+0xebb3]        # 419320 <__bss_start@@Base+0x11c4>
  40a76d:	add    rax,0x1
  40a771:	mov    QWORD PTR [rip+0xeba8],rax        # 419320 <__bss_start@@Base+0x11c4>
  40a778:	pop    rbp
  40a779:	ret    
  40a77a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a780 <tearDown@@Base>:
  40a780:	push   rbp
  40a781:	mov    rbp,rsp
  40a784:	mov    rax,QWORD PTR [rip+0xeb9d]        # 419328 <__bss_start@@Base+0x11cc>
  40a78b:	add    rax,0x1
  40a78f:	mov    QWORD PTR [rip+0xeb92],rax        # 419328 <__bss_start@@Base+0x11cc>
  40a796:	mov    rax,QWORD PTR [rip+0xeb93]        # 419330 <__bss_start@@Base+0x11d4>
  40a79d:	add    rax,0x1
  40a7a1:	mov    QWORD PTR [rip+0xeb88],rax        # 419330 <__bss_start@@Base+0x11d4>
  40a7a8:	pop    rbp
  40a7a9:	ret    
  40a7aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a7b0 <UnityDefaultTestRun@@Base>:
  40a7b0:	push   rbp
  40a7b1:	mov    rbp,rsp
  40a7b4:	sub    rsp,0x30
  40a7b8:	mov    rax,QWORD PTR [rip+0xeb81]        # 419340 <__bss_start@@Base+0x11e4>
  40a7bf:	add    rax,0x1
  40a7c3:	mov    QWORD PTR [rip+0xeb76],rax        # 419340 <__bss_start@@Base+0x11e4>
  40a7ca:	mov    QWORD PTR [rbp-0x20],rsi
  40a7ce:	mov    QWORD PTR [rbp-0x28],rdi
  40a7d2:	mov    DWORD PTR [rbp-0x2c],edx
  40a7d5:	lea    rax,[rip+0xf324]        # 419b00 <Unity@@Base>
  40a7dc:	mov    rcx,rax
  40a7df:	add    rcx,0x50
  40a7e3:	mov    rdx,QWORD PTR [rbp-0x28]
  40a7e7:	mov    QWORD PTR [rbp-0x8],rdx
  40a7eb:	mov    rsi,QWORD PTR [rbp-0x20]
  40a7ef:	mov    QWORD PTR [rbp-0x10],rsi
  40a7f3:	mov    edi,DWORD PTR [rbp-0x2c]
  40a7f6:	mov    DWORD PTR [rbp-0x14],edi
  40a7f9:	mov    r8,QWORD PTR [rbp-0x10]
  40a7fd:	mov    QWORD PTR [rax+0x8],r8
  40a801:	movsxd r8,DWORD PTR [rbp-0x14]
  40a805:	mov    QWORD PTR [rax+0x20],r8
  40a809:	mov    r8,QWORD PTR [rax+0x28]
  40a80d:	add    r8,0x1
  40a811:	mov    QWORD PTR [rax+0x28],r8
  40a815:	mov    QWORD PTR [rax+0x10],0x0
  40a81d:	mov    QWORD PTR [rax+0x18],0x0
  40a825:	mov    rdi,rcx
  40a828:	call   403130 <_setjmp@plt>
  40a82d:	mov    r9d,0x2
  40a833:	mov    ecx,r9d
  40a836:	mov    r9d,0x1
  40a83c:	mov    edx,r9d
  40a83f:	cmp    eax,0x0
  40a842:	sete   r10b
  40a846:	cmp    eax,0x0
  40a849:	cmove  rcx,rdx
  40a84d:	lea    rdx,[rip+0xeaec]        # 419340 <__bss_start@@Base+0x11e4>
  40a854:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a858:	add    rsi,0x1
  40a85c:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a860:	test   r10b,0x1
  40a864:	jne    40a86f <UnityDefaultTestRun@@Base+0xbf>
  40a86a:	jmp    40a889 <UnityDefaultTestRun@@Base+0xd9>
  40a86f:	mov    rax,QWORD PTR [rip+0xeae2]        # 419358 <__bss_start@@Base+0x11fc>
  40a876:	add    rax,0x1
  40a87a:	mov    QWORD PTR [rip+0xead7],rax        # 419358 <__bss_start@@Base+0x11fc>
  40a881:	call   40a750 <setUp@@Base>
  40a886:	call   QWORD PTR [rbp-0x8]
  40a889:	lea    rax,[rip+0xf270]        # 419b00 <Unity@@Base>
  40a890:	add    rax,0x50
  40a894:	mov    rdi,rax
  40a897:	call   403130 <_setjmp@plt>
  40a89c:	mov    ecx,0x5
  40a8a1:	mov    edi,ecx
  40a8a3:	mov    ecx,0x4
  40a8a8:	mov    edx,ecx
  40a8aa:	cmp    eax,0x0
  40a8ad:	sete   sil
  40a8b1:	cmp    eax,0x0
  40a8b4:	cmove  rdi,rdx
  40a8b8:	lea    rdx,[rip+0xea81]        # 419340 <__bss_start@@Base+0x11e4>
  40a8bf:	mov    r8,QWORD PTR [rdx+rdi*8]
  40a8c3:	add    r8,0x1
  40a8c7:	mov    QWORD PTR [rdx+rdi*8],r8
  40a8cb:	test   sil,0x1
  40a8cf:	jne    40a8da <UnityDefaultTestRun@@Base+0x12a>
  40a8d5:	jmp    40a937 <UnityDefaultTestRun@@Base+0x187>
  40a8da:	mov    eax,0x7
  40a8df:	mov    ecx,eax
  40a8e1:	mov    eax,0x6
  40a8e6:	mov    edx,eax
  40a8e8:	lea    rsi,[rip+0xf211]        # 419b00 <Unity@@Base>
  40a8ef:	mov    rsi,QWORD PTR [rsi+0x48]
  40a8f3:	cmp    rsi,0x0
  40a8f7:	setne  dil
  40a8fb:	cmp    rsi,0x0
  40a8ff:	cmovne rcx,rdx
  40a903:	lea    rdx,[rip+0xea36]        # 419340 <__bss_start@@Base+0x11e4>
  40a90a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a90e:	add    rsi,0x1
  40a912:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a916:	test   dil,0x1
  40a91a:	jne    40a937 <UnityDefaultTestRun@@Base+0x187>
  40a920:	mov    rax,QWORD PTR [rip+0xea59]        # 419380 <__bss_start@@Base+0x1224>
  40a927:	add    rax,0x1
  40a92b:	mov    QWORD PTR [rip+0xea4e],rax        # 419380 <__bss_start@@Base+0x1224>
  40a932:	call   40a780 <tearDown@@Base>
  40a937:	mov    rax,QWORD PTR [rip+0xea4a]        # 419388 <__bss_start@@Base+0x122c>
  40a93e:	add    rax,0x1
  40a942:	mov    QWORD PTR [rip+0xea3f],rax        # 419388 <__bss_start@@Base+0x122c>
  40a949:	call   4066b0 <UnityConcludeTest@@Base>
  40a94e:	add    rsp,0x30
  40a952:	pop    rbp
  40a953:	ret    
  40a954:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a95e:	xchg   ax,ax

000000000040a960 <UnityBegin@@Base>:
  40a960:	push   rbp
  40a961:	mov    rbp,rsp
  40a964:	mov    rax,QWORD PTR [rip+0xea25]        # 419390 <__bss_start@@Base+0x1234>
  40a96b:	add    rax,0x1
  40a96f:	mov    QWORD PTR [rip+0xea1a],rax        # 419390 <__bss_start@@Base+0x1234>
  40a976:	mov    QWORD PTR [rbp-0x10],rdi
  40a97a:	lea    rax,[rip+0xf17f]        # 419b00 <Unity@@Base>
  40a981:	mov    rcx,QWORD PTR [rip+0xea10]        # 419398 <__bss_start@@Base+0x123c>
  40a988:	add    rcx,0x1
  40a98c:	mov    QWORD PTR [rip+0xea05],rcx        # 419398 <__bss_start@@Base+0x123c>
  40a993:	mov    rcx,QWORD PTR [rbp-0x10]
  40a997:	mov    QWORD PTR [rbp-0x8],rcx
  40a99b:	mov    rdx,QWORD PTR [rbp-0x8]
  40a99f:	mov    QWORD PTR [rax],rdx
  40a9a2:	mov    QWORD PTR [rax+0x8],0x0
  40a9aa:	mov    QWORD PTR [rax+0x20],0x0
  40a9b2:	mov    QWORD PTR [rax+0x28],0x0
  40a9ba:	mov    QWORD PTR [rax+0x30],0x0
  40a9c2:	mov    QWORD PTR [rax+0x38],0x0
  40a9ca:	mov    QWORD PTR [rax+0x40],0x0
  40a9d2:	mov    QWORD PTR [rax+0x48],0x0
  40a9da:	mov    QWORD PTR [rax+0x10],0x0
  40a9e2:	mov    QWORD PTR [rax+0x18],0x0
  40a9ea:	pop    rbp
  40a9eb:	ret    
  40a9ec:	nop    DWORD PTR [rax+0x0]

000000000040a9f0 <UnityEnd@@Base>:
  40a9f0:	push   rbp
  40a9f1:	mov    rbp,rsp
  40a9f4:	sub    rsp,0x10
  40a9f8:	mov    rax,QWORD PTR [rip+0xe9a1]        # 4193a0 <__bss_start@@Base+0x1244>
  40a9ff:	add    rax,0x1
  40aa03:	mov    QWORD PTR [rip+0xe996],rax        # 4193a0 <__bss_start@@Base+0x1244>
  40aa0a:	mov    edi,0xa
  40aa0f:	call   403050 <putchar@plt>
  40aa14:	lea    rdi,[rip+0x7da5]        # 4127c0 <UnityStrBreaker@@Base>
  40aa1b:	mov    DWORD PTR [rbp-0x4],eax
  40aa1e:	call   405610 <UnityPrint@@Base>
  40aa23:	mov    edi,0xa
  40aa28:	call   403050 <putchar@plt>
  40aa2d:	lea    rcx,[rip+0xf0cc]        # 419b00 <Unity@@Base>
  40aa34:	mov    rdi,QWORD PTR [rcx+0x28]
  40aa38:	mov    DWORD PTR [rbp-0x8],eax
  40aa3b:	call   405fb0 <UnityPrintNumber@@Base>
  40aa40:	lea    rdi,[rip+0x7d91]        # 4127d8 <UnityStrResultsTests@@Base>
  40aa47:	call   405610 <UnityPrint@@Base>
  40aa4c:	lea    rcx,[rip+0xf0ad]        # 419b00 <Unity@@Base>
  40aa53:	mov    rdi,QWORD PTR [rcx+0x30]
  40aa57:	call   405fb0 <UnityPrintNumber@@Base>
  40aa5c:	lea    rdi,[rip+0x7d7d]        # 4127e0 <UnityStrResultsFailures@@Base>
  40aa63:	call   405610 <UnityPrint@@Base>
  40aa68:	lea    rcx,[rip+0xf091]        # 419b00 <Unity@@Base>
  40aa6f:	mov    rdi,QWORD PTR [rcx+0x38]
  40aa73:	call   405fb0 <UnityPrintNumber@@Base>
  40aa78:	lea    rdi,[rip+0x7d6c]        # 4127eb <UnityStrResultsIgnored@@Base>
  40aa7f:	call   405610 <UnityPrint@@Base>
  40aa84:	mov    edi,0xa
  40aa89:	call   403050 <putchar@plt>
  40aa8e:	mov    edi,0x2
  40aa93:	mov    ecx,edi
  40aa95:	mov    edi,0x1
  40aa9a:	mov    edx,edi
  40aa9c:	lea    rsi,[rip+0xf05d]        # 419b00 <Unity@@Base>
  40aaa3:	mov    rsi,QWORD PTR [rsi+0x30]
  40aaa7:	cmp    rsi,0x0
  40aaab:	sete   r8b
  40aaaf:	cmp    rsi,0x0
  40aab3:	cmove  rcx,rdx
  40aab7:	lea    rdx,[rip+0xe8e2]        # 4193a0 <__bss_start@@Base+0x1244>
  40aabe:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40aac2:	add    rsi,0x1
  40aac6:	mov    QWORD PTR [rdx+rcx*8],rsi
  40aaca:	test   r8b,0x1
  40aace:	mov    DWORD PTR [rbp-0xc],eax
  40aad1:	jne    40aadc <UnityEnd@@Base+0xec>
  40aad7:	jmp    40aaf8 <UnityEnd@@Base+0x108>
  40aadc:	mov    rax,QWORD PTR [rip+0xe8d5]        # 4193b8 <__bss_start@@Base+0x125c>
  40aae3:	add    rax,0x1
  40aae7:	mov    QWORD PTR [rip+0xe8ca],rax        # 4193b8 <__bss_start@@Base+0x125c>
  40aaee:	call   406670 <UnityPrintOk@@Base>
  40aaf3:	jmp    40ab0f <UnityEnd@@Base+0x11f>
  40aaf8:	mov    rax,QWORD PTR [rip+0xe8c1]        # 4193c0 <__bss_start@@Base+0x1264>
  40aaff:	add    rax,0x1
  40ab03:	mov    QWORD PTR [rip+0xe8b6],rax        # 4193c0 <__bss_start@@Base+0x1264>
  40ab0a:	call   406630 <UnityPrintFail@@Base>
  40ab0f:	mov    rax,QWORD PTR [rip+0xe8b2]        # 4193c8 <__bss_start@@Base+0x126c>
  40ab16:	add    rax,0x1
  40ab1a:	mov    QWORD PTR [rip+0xe8a7],rax        # 4193c8 <__bss_start@@Base+0x126c>
  40ab21:	mov    edi,0xa
  40ab26:	call   403050 <putchar@plt>
  40ab2b:	lea    rcx,[rip+0xefce]        # 419b00 <Unity@@Base>
  40ab32:	mov    rcx,QWORD PTR [rcx+0x30]
  40ab36:	mov    edi,ecx
  40ab38:	mov    DWORD PTR [rbp-0x10],eax
  40ab3b:	mov    eax,edi
  40ab3d:	add    rsp,0x10
  40ab41:	pop    rbp
  40ab42:	ret    
  40ab43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab4d:	nop    DWORD PTR [rax]
  40ab50:	mov    eax,DWORD PTR [rdi]
  40ab52:	cmp    eax,0xffffffff
  40ab55:	mov    QWORD PTR [rsp-0x8],rsi
  40ab5a:	mov    DWORD PTR [rsp-0xc],eax
  40ab5e:	je     40ab93 <UnityEnd@@Base+0x1a3>
  40ab64:	mov    eax,DWORD PTR [rsp-0xc]
  40ab68:	mov    ecx,eax
  40ab6a:	mov    edx,ecx
  40ab6c:	mov    rsi,QWORD PTR [rsp-0x8]
  40ab71:	mov    rdx,QWORD PTR [rsi+rdx*8]
  40ab75:	cmp    rdx,0x0
  40ab79:	mov    QWORD PTR [rsp-0x18],rdx
  40ab7e:	je     40ab93 <UnityEnd@@Base+0x1a3>
  40ab84:	mov    rax,QWORD PTR [rsp-0x18]
  40ab89:	mov    rcx,QWORD PTR [rax]
  40ab8c:	add    rcx,0x1
  40ab90:	mov    QWORD PTR [rax],rcx
  40ab93:	ret    
  40ab94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab9e:	xchg   ax,ax
  40aba0:	sub    rsp,0x38
  40aba4:	xor    eax,eax
  40aba6:	mov    DWORD PTR [rsp+0x34],eax
  40abaa:	jmp    40abaf <UnityEnd@@Base+0x1bf>
  40abaf:	mov    eax,DWORD PTR [rsp+0x34]
  40abb3:	movsxd rcx,eax
  40abb6:	imul   rcx,rcx,0x30
  40abba:	lea    rdx,[rip+0xcaaf]        # 417670 <UnitySizeMask@@Base+0x4e60>
  40abc1:	add    rdx,rcx
  40abc4:	mov    rdi,QWORD PTR [rdx]
  40abc7:	mov    rsi,QWORD PTR [rdx+0x8]
  40abcb:	mov    r8d,DWORD PTR [rdx+0x10]
  40abcf:	mov    QWORD PTR [rsp+0x28],rdx
  40abd4:	mov    edx,r8d
  40abd7:	mov    DWORD PTR [rsp+0x24],eax
  40abdb:	call   40f730 <next@@Base+0x24a0>
  40abe0:	xor    eax,eax
  40abe2:	mov    rcx,QWORD PTR [rsp+0x28]
  40abe7:	mov    edx,DWORD PTR [rcx+0x18]
  40abea:	mov    rsi,QWORD PTR [rcx+0x20]
  40abee:	mov    rdi,QWORD PTR [rcx+0x28]
  40abf2:	cmp    eax,edx
  40abf4:	mov    QWORD PTR [rsp+0x18],rdi
  40abf9:	mov    DWORD PTR [rsp+0x14],edx
  40abfd:	mov    QWORD PTR [rsp+0x8],rsi
  40ac02:	mov    DWORD PTR [rsp+0x4],eax
  40ac06:	jge    40ac77 <UnityEnd@@Base+0x287>
  40ac0c:	mov    eax,DWORD PTR [rsp+0x4]
  40ac10:	movsxd rcx,eax
  40ac13:	shl    rcx,0x5
  40ac17:	mov    rdx,QWORD PTR [rsp+0x8]
  40ac1c:	add    rdx,rcx
  40ac1f:	mov    edi,DWORD PTR [rdx]
  40ac21:	mov    rsi,QWORD PTR [rdx+0x8]
  40ac25:	mov    r8d,DWORD PTR [rdx+0x10]
  40ac29:	mov    r9b,BYTE PTR [rdx+0x14]
  40ac2d:	mov    r10d,DWORD PTR [rdx+0x18]
  40ac31:	mov    edx,r8d
  40ac34:	movzx  ecx,r9b
  40ac38:	mov    r8d,r10d
  40ac3b:	mov    DWORD PTR [rsp],eax
  40ac3e:	call   40fb80 <next@@Base+0x28f0>
  40ac43:	mov    eax,DWORD PTR [rsp]
  40ac46:	movsxd rsi,eax
  40ac49:	shl    rsi,0x4
  40ac4d:	mov    r11,QWORD PTR [rsp+0x18]
  40ac52:	add    r11,rsi
  40ac55:	mov    edi,DWORD PTR [r11]
  40ac58:	mov    rsi,QWORD PTR [r11+0x8]
  40ac5c:	call   40ffb0 <next@@Base+0x2d20>
  40ac61:	mov    eax,DWORD PTR [rsp]
  40ac64:	add    eax,0x1
  40ac67:	mov    ecx,DWORD PTR [rsp+0x14]
  40ac6b:	cmp    eax,ecx
  40ac6d:	mov    DWORD PTR [rsp+0x4],eax
  40ac71:	jl     40ac0c <UnityEnd@@Base+0x21c>
  40ac77:	call   4103d0 <next@@Base+0x3140>
  40ac7c:	call   410b70 <next@@Base+0x38e0>
  40ac81:	mov    eax,DWORD PTR [rsp+0x24]
  40ac85:	add    eax,0x1
  40ac88:	cmp    eax,0x1
  40ac8b:	mov    DWORD PTR [rsp+0x34],eax
  40ac8f:	jl     40abaf <UnityEnd@@Base+0x1bf>
  40ac95:	add    rsp,0x38
  40ac99:	ret    
  40ac9a:	nop    WORD PTR [rax+rax*1+0x0]
  40aca0:	push   rax
  40aca1:	call   40aba0 <UnityEnd@@Base+0x1b0>
  40aca6:	mov    QWORD PTR [rip+0xd72f],0x0        # 4183e0 <__bss_start@@Base+0x284>
  40acb1:	mov    QWORD PTR [rip+0xd71c],0x0        # 4183d8 <__bss_start@@Base+0x27c>
  40acbc:	mov    QWORD PTR [rip+0xd709],0x0        # 4183d0 <__bss_start@@Base+0x274>
  40acc7:	mov    QWORD PTR [rip+0xd6f6],0x0        # 4183c8 <__bss_start@@Base+0x26c>
  40acd2:	mov    QWORD PTR [rip+0xd6e3],0x0        # 4183c0 <__bss_start@@Base+0x264>
  40acdd:	mov    QWORD PTR [rip+0xd6d0],0x0        # 4183b8 <__bss_start@@Base+0x25c>
  40ace8:	mov    QWORD PTR [rip+0xd6bd],0x0        # 4183b0 <__bss_start@@Base+0x254>
  40acf3:	mov    QWORD PTR [rip+0xd6aa],0x0        # 4183a8 <__bss_start@@Base+0x24c>
  40acfe:	mov    QWORD PTR [rip+0xd697],0x0        # 4183a0 <__bss_start@@Base+0x244>
  40ad09:	mov    QWORD PTR [rip+0xd684],0x0        # 418398 <__bss_start@@Base+0x23c>
  40ad14:	mov    QWORD PTR [rip+0xd671],0x0        # 418390 <__bss_start@@Base+0x234>
  40ad1f:	mov    QWORD PTR [rip+0xd65e],0x0        # 418388 <__bss_start@@Base+0x22c>
  40ad2a:	mov    QWORD PTR [rip+0xd64b],0x0        # 418380 <__bss_start@@Base+0x224>
  40ad35:	mov    QWORD PTR [rip+0xd638],0x0        # 418378 <__bss_start@@Base+0x21c>
  40ad40:	mov    QWORD PTR [rip+0xd625],0x0        # 418370 <__bss_start@@Base+0x214>
  40ad4b:	mov    QWORD PTR [rip+0xd612],0x0        # 418368 <__bss_start@@Base+0x20c>
  40ad56:	mov    QWORD PTR [rip+0xd5ff],0x0        # 418360 <__bss_start@@Base+0x204>
  40ad61:	mov    QWORD PTR [rip+0xd5ec],0x0        # 418358 <__bss_start@@Base+0x1fc>
  40ad6c:	mov    QWORD PTR [rip+0xd5d9],0x0        # 418350 <__bss_start@@Base+0x1f4>
  40ad77:	mov    QWORD PTR [rip+0xd5c6],0x0        # 418348 <__bss_start@@Base+0x1ec>
  40ad82:	mov    QWORD PTR [rip+0xd5b3],0x0        # 418340 <__bss_start@@Base+0x1e4>
  40ad8d:	mov    QWORD PTR [rip+0xd5a0],0x0        # 418338 <__bss_start@@Base+0x1dc>
  40ad98:	mov    QWORD PTR [rip+0xd58d],0x0        # 418330 <__bss_start@@Base+0x1d4>
  40ada3:	mov    QWORD PTR [rip+0xd68a],0x0        # 418438 <__bss_start@@Base+0x2dc>
  40adae:	mov    QWORD PTR [rip+0xd677],0x0        # 418430 <__bss_start@@Base+0x2d4>
  40adb9:	mov    QWORD PTR [rip+0xd664],0x0        # 418428 <__bss_start@@Base+0x2cc>
  40adc4:	mov    QWORD PTR [rip+0xd651],0x0        # 418420 <__bss_start@@Base+0x2c4>
  40adcf:	mov    QWORD PTR [rip+0xd63e],0x0        # 418418 <__bss_start@@Base+0x2bc>
  40adda:	mov    QWORD PTR [rip+0xd62b],0x0        # 418410 <__bss_start@@Base+0x2b4>
  40ade5:	mov    QWORD PTR [rip+0xd618],0x0        # 418408 <__bss_start@@Base+0x2ac>
  40adf0:	mov    QWORD PTR [rip+0xd605],0x0        # 418400 <__bss_start@@Base+0x2a4>
  40adfb:	mov    QWORD PTR [rip+0xd5f2],0x0        # 4183f8 <__bss_start@@Base+0x29c>
  40ae06:	mov    QWORD PTR [rip+0xd5df],0x0        # 4183f0 <__bss_start@@Base+0x294>
  40ae11:	mov    QWORD PTR [rip+0xd6ec],0x0        # 418508 <__bss_start@@Base+0x3ac>
  40ae1c:	mov    QWORD PTR [rip+0xd6d9],0x0        # 418500 <__bss_start@@Base+0x3a4>
  40ae27:	mov    QWORD PTR [rip+0xd6c6],0x0        # 4184f8 <__bss_start@@Base+0x39c>
  40ae32:	mov    QWORD PTR [rip+0xd6b3],0x0        # 4184f0 <__bss_start@@Base+0x394>
  40ae3d:	mov    QWORD PTR [rip+0xd6a0],0x0        # 4184e8 <__bss_start@@Base+0x38c>
  40ae48:	mov    QWORD PTR [rip+0xd68d],0x0        # 4184e0 <__bss_start@@Base+0x384>
  40ae53:	mov    QWORD PTR [rip+0xd67a],0x0        # 4184d8 <__bss_start@@Base+0x37c>
  40ae5e:	mov    QWORD PTR [rip+0xd667],0x0        # 4184d0 <__bss_start@@Base+0x374>
  40ae69:	mov    QWORD PTR [rip+0xd654],0x0        # 4184c8 <__bss_start@@Base+0x36c>
  40ae74:	mov    QWORD PTR [rip+0xd641],0x0        # 4184c0 <__bss_start@@Base+0x364>
  40ae7f:	mov    QWORD PTR [rip+0xd62e],0x0        # 4184b8 <__bss_start@@Base+0x35c>
  40ae8a:	mov    QWORD PTR [rip+0xd61b],0x0        # 4184b0 <__bss_start@@Base+0x354>
  40ae95:	mov    QWORD PTR [rip+0xd608],0x0        # 4184a8 <__bss_start@@Base+0x34c>
  40aea0:	mov    QWORD PTR [rip+0xd5f5],0x0        # 4184a0 <__bss_start@@Base+0x344>
  40aeab:	mov    QWORD PTR [rip+0xd5e2],0x0        # 418498 <__bss_start@@Base+0x33c>
  40aeb6:	mov    QWORD PTR [rip+0xd5cf],0x0        # 418490 <__bss_start@@Base+0x334>
  40aec1:	mov    QWORD PTR [rip+0xd5bc],0x0        # 418488 <__bss_start@@Base+0x32c>
  40aecc:	mov    QWORD PTR [rip+0xd5a9],0x0        # 418480 <__bss_start@@Base+0x324>
  40aed7:	mov    QWORD PTR [rip+0xd596],0x0        # 418478 <__bss_start@@Base+0x31c>
  40aee2:	mov    QWORD PTR [rip+0xd583],0x0        # 418470 <__bss_start@@Base+0x314>
  40aeed:	mov    QWORD PTR [rip+0xd570],0x0        # 418468 <__bss_start@@Base+0x30c>
  40aef8:	mov    QWORD PTR [rip+0xd55d],0x0        # 418460 <__bss_start@@Base+0x304>
  40af03:	mov    QWORD PTR [rip+0xd54a],0x0        # 418458 <__bss_start@@Base+0x2fc>
  40af0e:	mov    QWORD PTR [rip+0xd537],0x0        # 418450 <__bss_start@@Base+0x2f4>
  40af19:	mov    QWORD PTR [rip+0xd524],0x0        # 418448 <__bss_start@@Base+0x2ec>
  40af24:	mov    QWORD PTR [rip+0xd511],0x0        # 418440 <__bss_start@@Base+0x2e4>
  40af2f:	mov    QWORD PTR [rip+0xd61e],0x0        # 418558 <__bss_start@@Base+0x3fc>
  40af3a:	mov    QWORD PTR [rip+0xd60b],0x0        # 418550 <__bss_start@@Base+0x3f4>
  40af45:	mov    QWORD PTR [rip+0xd5f8],0x0        # 418548 <__bss_start@@Base+0x3ec>
  40af50:	mov    QWORD PTR [rip+0xd5e5],0x0        # 418540 <__bss_start@@Base+0x3e4>
  40af5b:	mov    QWORD PTR [rip+0xd5d2],0x0        # 418538 <__bss_start@@Base+0x3dc>
  40af66:	mov    QWORD PTR [rip+0xd5bf],0x0        # 418530 <__bss_start@@Base+0x3d4>
  40af71:	mov    QWORD PTR [rip+0xd5ac],0x0        # 418528 <__bss_start@@Base+0x3cc>
  40af7c:	mov    QWORD PTR [rip+0xd599],0x0        # 418520 <__bss_start@@Base+0x3c4>
  40af87:	mov    QWORD PTR [rip+0xd586],0x0        # 418518 <__bss_start@@Base+0x3bc>
  40af92:	mov    QWORD PTR [rip+0xd573],0x0        # 418510 <__bss_start@@Base+0x3b4>
  40af9d:	mov    QWORD PTR [rip+0xd640],0x0        # 4185e8 <__bss_start@@Base+0x48c>
  40afa8:	mov    QWORD PTR [rip+0xd62d],0x0        # 4185e0 <__bss_start@@Base+0x484>
  40afb3:	mov    QWORD PTR [rip+0xd61a],0x0        # 4185d8 <__bss_start@@Base+0x47c>
  40afbe:	mov    QWORD PTR [rip+0xd607],0x0        # 4185d0 <__bss_start@@Base+0x474>
  40afc9:	mov    QWORD PTR [rip+0xd5f4],0x0        # 4185c8 <__bss_start@@Base+0x46c>
  40afd4:	mov    QWORD PTR [rip+0xd5e1],0x0        # 4185c0 <__bss_start@@Base+0x464>
  40afdf:	mov    QWORD PTR [rip+0xd5ce],0x0        # 4185b8 <__bss_start@@Base+0x45c>
  40afea:	mov    QWORD PTR [rip+0xd5bb],0x0        # 4185b0 <__bss_start@@Base+0x454>
  40aff5:	mov    QWORD PTR [rip+0xd5a8],0x0        # 4185a8 <__bss_start@@Base+0x44c>
  40b000:	mov    QWORD PTR [rip+0xd595],0x0        # 4185a0 <__bss_start@@Base+0x444>
  40b00b:	mov    QWORD PTR [rip+0xd582],0x0        # 418598 <__bss_start@@Base+0x43c>
  40b016:	mov    QWORD PTR [rip+0xd56f],0x0        # 418590 <__bss_start@@Base+0x434>
  40b021:	mov    QWORD PTR [rip+0xd55c],0x0        # 418588 <__bss_start@@Base+0x42c>
  40b02c:	mov    QWORD PTR [rip+0xd549],0x0        # 418580 <__bss_start@@Base+0x424>
  40b037:	mov    QWORD PTR [rip+0xd536],0x0        # 418578 <__bss_start@@Base+0x41c>
  40b042:	mov    QWORD PTR [rip+0xd523],0x0        # 418570 <__bss_start@@Base+0x414>
  40b04d:	mov    QWORD PTR [rip+0xd510],0x0        # 418568 <__bss_start@@Base+0x40c>
  40b058:	mov    QWORD PTR [rip+0xd4fd],0x0        # 418560 <__bss_start@@Base+0x404>
  40b063:	mov    QWORD PTR [rip+0xd5ea],0x0        # 418658 <__bss_start@@Base+0x4fc>
  40b06e:	mov    QWORD PTR [rip+0xd5d7],0x0        # 418650 <__bss_start@@Base+0x4f4>
  40b079:	mov    QWORD PTR [rip+0xd5c4],0x0        # 418648 <__bss_start@@Base+0x4ec>
  40b084:	mov    QWORD PTR [rip+0xd5b1],0x0        # 418640 <__bss_start@@Base+0x4e4>
  40b08f:	mov    QWORD PTR [rip+0xd59e],0x0        # 418638 <__bss_start@@Base+0x4dc>
  40b09a:	mov    QWORD PTR [rip+0xd58b],0x0        # 418630 <__bss_start@@Base+0x4d4>
  40b0a5:	mov    QWORD PTR [rip+0xd578],0x0        # 418628 <__bss_start@@Base+0x4cc>
  40b0b0:	mov    QWORD PTR [rip+0xd565],0x0        # 418620 <__bss_start@@Base+0x4c4>
  40b0bb:	mov    QWORD PTR [rip+0xd552],0x0        # 418618 <__bss_start@@Base+0x4bc>
  40b0c6:	mov    QWORD PTR [rip+0xd53f],0x0        # 418610 <__bss_start@@Base+0x4b4>
  40b0d1:	mov    QWORD PTR [rip+0xd52c],0x0        # 418608 <__bss_start@@Base+0x4ac>
  40b0dc:	mov    QWORD PTR [rip+0xd519],0x0        # 418600 <__bss_start@@Base+0x4a4>
  40b0e7:	mov    QWORD PTR [rip+0xd506],0x0        # 4185f8 <__bss_start@@Base+0x49c>
  40b0f2:	mov    QWORD PTR [rip+0xd4f3],0x0        # 4185f0 <__bss_start@@Base+0x494>
  40b0fd:	mov    QWORD PTR [rip+0xd5c8],0x0        # 4186d0 <__bss_start@@Base+0x574>
  40b108:	mov    QWORD PTR [rip+0xd5b5],0x0        # 4186c8 <__bss_start@@Base+0x56c>
  40b113:	mov    QWORD PTR [rip+0xd5a2],0x0        # 4186c0 <__bss_start@@Base+0x564>
  40b11e:	mov    QWORD PTR [rip+0xd58f],0x0        # 4186b8 <__bss_start@@Base+0x55c>
  40b129:	mov    QWORD PTR [rip+0xd57c],0x0        # 4186b0 <__bss_start@@Base+0x554>
  40b134:	mov    QWORD PTR [rip+0xd569],0x0        # 4186a8 <__bss_start@@Base+0x54c>
  40b13f:	mov    QWORD PTR [rip+0xd556],0x0        # 4186a0 <__bss_start@@Base+0x544>
  40b14a:	mov    QWORD PTR [rip+0xd543],0x0        # 418698 <__bss_start@@Base+0x53c>
  40b155:	mov    QWORD PTR [rip+0xd530],0x0        # 418690 <__bss_start@@Base+0x534>
  40b160:	mov    QWORD PTR [rip+0xd51d],0x0        # 418688 <__bss_start@@Base+0x52c>
  40b16b:	mov    QWORD PTR [rip+0xd50a],0x0        # 418680 <__bss_start@@Base+0x524>
  40b176:	mov    QWORD PTR [rip+0xd4f7],0x0        # 418678 <__bss_start@@Base+0x51c>
  40b181:	mov    QWORD PTR [rip+0xd4e4],0x0        # 418670 <__bss_start@@Base+0x514>
  40b18c:	mov    QWORD PTR [rip+0xd4d1],0x0        # 418668 <__bss_start@@Base+0x50c>
  40b197:	mov    QWORD PTR [rip+0xd4be],0x0        # 418660 <__bss_start@@Base+0x504>
  40b1a2:	mov    QWORD PTR [rip+0xd533],0x0        # 4186e0 <__bss_start@@Base+0x584>
  40b1ad:	mov    QWORD PTR [rip+0xd520],0x0        # 4186d8 <__bss_start@@Base+0x57c>
  40b1b8:	mov    QWORD PTR [rip+0xd52d],0x0        # 4186f0 <__bss_start@@Base+0x594>
  40b1c3:	mov    QWORD PTR [rip+0xd51a],0x0        # 4186e8 <__bss_start@@Base+0x58c>
  40b1ce:	mov    QWORD PTR [rip+0xd56f],0x0        # 418748 <__bss_start@@Base+0x5ec>
  40b1d9:	mov    QWORD PTR [rip+0xd55c],0x0        # 418740 <__bss_start@@Base+0x5e4>
  40b1e4:	mov    QWORD PTR [rip+0xd549],0x0        # 418738 <__bss_start@@Base+0x5dc>
  40b1ef:	mov    QWORD PTR [rip+0xd536],0x0        # 418730 <__bss_start@@Base+0x5d4>
  40b1fa:	mov    QWORD PTR [rip+0xd523],0x0        # 418728 <__bss_start@@Base+0x5cc>
  40b205:	mov    QWORD PTR [rip+0xd510],0x0        # 418720 <__bss_start@@Base+0x5c4>
  40b210:	mov    QWORD PTR [rip+0xd4fd],0x0        # 418718 <__bss_start@@Base+0x5bc>
  40b21b:	mov    QWORD PTR [rip+0xd4ea],0x0        # 418710 <__bss_start@@Base+0x5b4>
  40b226:	mov    QWORD PTR [rip+0xd4d7],0x0        # 418708 <__bss_start@@Base+0x5ac>
  40b231:	mov    QWORD PTR [rip+0xd4c4],0x0        # 418700 <__bss_start@@Base+0x5a4>
  40b23c:	mov    QWORD PTR [rip+0xd511],0x0        # 418758 <__bss_start@@Base+0x5fc>
  40b247:	mov    QWORD PTR [rip+0xd4fe],0x0        # 418750 <__bss_start@@Base+0x5f4>
  40b252:	mov    QWORD PTR [rip+0xd543],0x0        # 4187a0 <__bss_start@@Base+0x644>
  40b25d:	mov    QWORD PTR [rip+0xd530],0x0        # 418798 <__bss_start@@Base+0x63c>
  40b268:	mov    QWORD PTR [rip+0xd51d],0x0        # 418790 <__bss_start@@Base+0x634>
  40b273:	mov    QWORD PTR [rip+0xd50a],0x0        # 418788 <__bss_start@@Base+0x62c>
  40b27e:	mov    QWORD PTR [rip+0xd4f7],0x0        # 418780 <__bss_start@@Base+0x624>
  40b289:	mov    QWORD PTR [rip+0xd4e4],0x0        # 418778 <__bss_start@@Base+0x61c>
  40b294:	mov    QWORD PTR [rip+0xd4d1],0x0        # 418770 <__bss_start@@Base+0x614>
  40b29f:	mov    QWORD PTR [rip+0xd4be],0x0        # 418768 <__bss_start@@Base+0x60c>
  40b2aa:	mov    QWORD PTR [rip+0xd4ab],0x0        # 418760 <__bss_start@@Base+0x604>
  40b2b5:	mov    QWORD PTR [rip+0xd4f0],0x0        # 4187b0 <__bss_start@@Base+0x654>
  40b2c0:	mov    QWORD PTR [rip+0xd4dd],0x0        # 4187a8 <__bss_start@@Base+0x64c>
  40b2cb:	mov    QWORD PTR [rip+0xd53a],0x0        # 418810 <__bss_start@@Base+0x6b4>
  40b2d6:	mov    QWORD PTR [rip+0xd527],0x0        # 418808 <__bss_start@@Base+0x6ac>
  40b2e1:	mov    QWORD PTR [rip+0xd514],0x0        # 418800 <__bss_start@@Base+0x6a4>
  40b2ec:	mov    QWORD PTR [rip+0xd501],0x0        # 4187f8 <__bss_start@@Base+0x69c>
  40b2f7:	mov    QWORD PTR [rip+0xd4ee],0x0        # 4187f0 <__bss_start@@Base+0x694>
  40b302:	mov    QWORD PTR [rip+0xd4db],0x0        # 4187e8 <__bss_start@@Base+0x68c>
  40b30d:	mov    QWORD PTR [rip+0xd4c8],0x0        # 4187e0 <__bss_start@@Base+0x684>
  40b318:	mov    QWORD PTR [rip+0xd4b5],0x0        # 4187d8 <__bss_start@@Base+0x67c>
  40b323:	mov    QWORD PTR [rip+0xd4a2],0x0        # 4187d0 <__bss_start@@Base+0x674>
  40b32e:	mov    QWORD PTR [rip+0xd48f],0x0        # 4187c8 <__bss_start@@Base+0x66c>
  40b339:	mov    QWORD PTR [rip+0xd47c],0x0        # 4187c0 <__bss_start@@Base+0x664>
  40b344:	mov    QWORD PTR [rip+0xd511],0x0        # 418860 <__bss_start@@Base+0x704>
  40b34f:	mov    QWORD PTR [rip+0xd4fe],0x0        # 418858 <__bss_start@@Base+0x6fc>
  40b35a:	mov    QWORD PTR [rip+0xd4eb],0x0        # 418850 <__bss_start@@Base+0x6f4>
  40b365:	mov    QWORD PTR [rip+0xd4d8],0x0        # 418848 <__bss_start@@Base+0x6ec>
  40b370:	mov    QWORD PTR [rip+0xd4c5],0x0        # 418840 <__bss_start@@Base+0x6e4>
  40b37b:	mov    QWORD PTR [rip+0xd4b2],0x0        # 418838 <__bss_start@@Base+0x6dc>
  40b386:	mov    QWORD PTR [rip+0xd49f],0x0        # 418830 <__bss_start@@Base+0x6d4>
  40b391:	mov    QWORD PTR [rip+0xd48c],0x0        # 418828 <__bss_start@@Base+0x6cc>
  40b39c:	mov    QWORD PTR [rip+0xd479],0x0        # 418820 <__bss_start@@Base+0x6c4>
  40b3a7:	mov    QWORD PTR [rip+0xd646],0x0        # 4189f8 <__bss_start@@Base+0x89c>
  40b3b2:	mov    QWORD PTR [rip+0xd633],0x0        # 4189f0 <__bss_start@@Base+0x894>
  40b3bd:	mov    QWORD PTR [rip+0xd620],0x0        # 4189e8 <__bss_start@@Base+0x88c>
  40b3c8:	mov    QWORD PTR [rip+0xd60d],0x0        # 4189e0 <__bss_start@@Base+0x884>
  40b3d3:	mov    QWORD PTR [rip+0xd5fa],0x0        # 4189d8 <__bss_start@@Base+0x87c>
  40b3de:	mov    QWORD PTR [rip+0xd5e7],0x0        # 4189d0 <__bss_start@@Base+0x874>
  40b3e9:	mov    QWORD PTR [rip+0xd5d4],0x0        # 4189c8 <__bss_start@@Base+0x86c>
  40b3f4:	mov    QWORD PTR [rip+0xd5c1],0x0        # 4189c0 <__bss_start@@Base+0x864>
  40b3ff:	mov    QWORD PTR [rip+0xd5ae],0x0        # 4189b8 <__bss_start@@Base+0x85c>
  40b40a:	mov    QWORD PTR [rip+0xd59b],0x0        # 4189b0 <__bss_start@@Base+0x854>
  40b415:	mov    QWORD PTR [rip+0xd588],0x0        # 4189a8 <__bss_start@@Base+0x84c>
  40b420:	mov    QWORD PTR [rip+0xd575],0x0        # 4189a0 <__bss_start@@Base+0x844>
  40b42b:	mov    QWORD PTR [rip+0xd562],0x0        # 418998 <__bss_start@@Base+0x83c>
  40b436:	mov    QWORD PTR [rip+0xd54f],0x0        # 418990 <__bss_start@@Base+0x834>
  40b441:	mov    QWORD PTR [rip+0xd53c],0x0        # 418988 <__bss_start@@Base+0x82c>
  40b44c:	mov    QWORD PTR [rip+0xd529],0x0        # 418980 <__bss_start@@Base+0x824>
  40b457:	mov    QWORD PTR [rip+0xd516],0x0        # 418978 <__bss_start@@Base+0x81c>
  40b462:	mov    QWORD PTR [rip+0xd503],0x0        # 418970 <__bss_start@@Base+0x814>
  40b46d:	mov    QWORD PTR [rip+0xd4f0],0x0        # 418968 <__bss_start@@Base+0x80c>
  40b478:	mov    QWORD PTR [rip+0xd4dd],0x0        # 418960 <__bss_start@@Base+0x804>
  40b483:	mov    QWORD PTR [rip+0xd4ca],0x0        # 418958 <__bss_start@@Base+0x7fc>
  40b48e:	mov    QWORD PTR [rip+0xd4b7],0x0        # 418950 <__bss_start@@Base+0x7f4>
  40b499:	mov    QWORD PTR [rip+0xd4a4],0x0        # 418948 <__bss_start@@Base+0x7ec>
  40b4a4:	mov    QWORD PTR [rip+0xd491],0x0        # 418940 <__bss_start@@Base+0x7e4>
  40b4af:	mov    QWORD PTR [rip+0xd47e],0x0        # 418938 <__bss_start@@Base+0x7dc>
  40b4ba:	mov    QWORD PTR [rip+0xd46b],0x0        # 418930 <__bss_start@@Base+0x7d4>
  40b4c5:	mov    QWORD PTR [rip+0xd458],0x0        # 418928 <__bss_start@@Base+0x7cc>
  40b4d0:	mov    QWORD PTR [rip+0xd445],0x0        # 418920 <__bss_start@@Base+0x7c4>
  40b4db:	mov    QWORD PTR [rip+0xd432],0x0        # 418918 <__bss_start@@Base+0x7bc>
  40b4e6:	mov    QWORD PTR [rip+0xd41f],0x0        # 418910 <__bss_start@@Base+0x7b4>
  40b4f1:	mov    QWORD PTR [rip+0xd40c],0x0        # 418908 <__bss_start@@Base+0x7ac>
  40b4fc:	mov    QWORD PTR [rip+0xd3f9],0x0        # 418900 <__bss_start@@Base+0x7a4>
  40b507:	mov    QWORD PTR [rip+0xd3e6],0x0        # 4188f8 <__bss_start@@Base+0x79c>
  40b512:	mov    QWORD PTR [rip+0xd3d3],0x0        # 4188f0 <__bss_start@@Base+0x794>
  40b51d:	mov    QWORD PTR [rip+0xd3c0],0x0        # 4188e8 <__bss_start@@Base+0x78c>
  40b528:	mov    QWORD PTR [rip+0xd3ad],0x0        # 4188e0 <__bss_start@@Base+0x784>
  40b533:	mov    QWORD PTR [rip+0xd39a],0x0        # 4188d8 <__bss_start@@Base+0x77c>
  40b53e:	mov    QWORD PTR [rip+0xd387],0x0        # 4188d0 <__bss_start@@Base+0x774>
  40b549:	mov    QWORD PTR [rip+0xd374],0x0        # 4188c8 <__bss_start@@Base+0x76c>
  40b554:	mov    QWORD PTR [rip+0xd361],0x0        # 4188c0 <__bss_start@@Base+0x764>
  40b55f:	mov    QWORD PTR [rip+0xd34e],0x0        # 4188b8 <__bss_start@@Base+0x75c>
  40b56a:	mov    QWORD PTR [rip+0xd33b],0x0        # 4188b0 <__bss_start@@Base+0x754>
  40b575:	mov    QWORD PTR [rip+0xd328],0x0        # 4188a8 <__bss_start@@Base+0x74c>
  40b580:	mov    QWORD PTR [rip+0xd315],0x0        # 4188a0 <__bss_start@@Base+0x744>
  40b58b:	mov    QWORD PTR [rip+0xd302],0x0        # 418898 <__bss_start@@Base+0x73c>
  40b596:	mov    QWORD PTR [rip+0xd2ef],0x0        # 418890 <__bss_start@@Base+0x734>
  40b5a1:	mov    QWORD PTR [rip+0xd2dc],0x0        # 418888 <__bss_start@@Base+0x72c>
  40b5ac:	mov    QWORD PTR [rip+0xd2c9],0x0        # 418880 <__bss_start@@Base+0x724>
  40b5b7:	mov    QWORD PTR [rip+0xd2b6],0x0        # 418878 <__bss_start@@Base+0x71c>
  40b5c2:	mov    QWORD PTR [rip+0xd2a3],0x0        # 418870 <__bss_start@@Base+0x714>
  40b5cd:	mov    QWORD PTR [rip+0xd480],0x0        # 418a58 <__bss_start@@Base+0x8fc>
  40b5d8:	mov    QWORD PTR [rip+0xd46d],0x0        # 418a50 <__bss_start@@Base+0x8f4>
  40b5e3:	mov    QWORD PTR [rip+0xd45a],0x0        # 418a48 <__bss_start@@Base+0x8ec>
  40b5ee:	mov    QWORD PTR [rip+0xd447],0x0        # 418a40 <__bss_start@@Base+0x8e4>
  40b5f9:	mov    QWORD PTR [rip+0xd434],0x0        # 418a38 <__bss_start@@Base+0x8dc>
  40b604:	mov    QWORD PTR [rip+0xd421],0x0        # 418a30 <__bss_start@@Base+0x8d4>
  40b60f:	mov    QWORD PTR [rip+0xd40e],0x0        # 418a28 <__bss_start@@Base+0x8cc>
  40b61a:	mov    QWORD PTR [rip+0xd3fb],0x0        # 418a20 <__bss_start@@Base+0x8c4>
  40b625:	mov    QWORD PTR [rip+0xd3e8],0x0        # 418a18 <__bss_start@@Base+0x8bc>
  40b630:	mov    QWORD PTR [rip+0xd3d5],0x0        # 418a10 <__bss_start@@Base+0x8b4>
  40b63b:	mov    QWORD PTR [rip+0xd3c2],0x0        # 418a08 <__bss_start@@Base+0x8ac>
  40b646:	mov    QWORD PTR [rip+0xd3af],0x0        # 418a00 <__bss_start@@Base+0x8a4>
  40b651:	mov    QWORD PTR [rip+0xd4cc],0x0        # 418b28 <__bss_start@@Base+0x9cc>
  40b65c:	mov    QWORD PTR [rip+0xd4b9],0x0        # 418b20 <__bss_start@@Base+0x9c4>
  40b667:	mov    QWORD PTR [rip+0xd4a6],0x0        # 418b18 <__bss_start@@Base+0x9bc>
  40b672:	mov    QWORD PTR [rip+0xd493],0x0        # 418b10 <__bss_start@@Base+0x9b4>
  40b67d:	mov    QWORD PTR [rip+0xd480],0x0        # 418b08 <__bss_start@@Base+0x9ac>
  40b688:	mov    QWORD PTR [rip+0xd46d],0x0        # 418b00 <__bss_start@@Base+0x9a4>
  40b693:	mov    QWORD PTR [rip+0xd45a],0x0        # 418af8 <__bss_start@@Base+0x99c>
  40b69e:	mov    QWORD PTR [rip+0xd447],0x0        # 418af0 <__bss_start@@Base+0x994>
  40b6a9:	mov    QWORD PTR [rip+0xd434],0x0        # 418ae8 <__bss_start@@Base+0x98c>
  40b6b4:	mov    QWORD PTR [rip+0xd421],0x0        # 418ae0 <__bss_start@@Base+0x984>
  40b6bf:	mov    QWORD PTR [rip+0xd40e],0x0        # 418ad8 <__bss_start@@Base+0x97c>
  40b6ca:	mov    QWORD PTR [rip+0xd3fb],0x0        # 418ad0 <__bss_start@@Base+0x974>
  40b6d5:	mov    QWORD PTR [rip+0xd3e8],0x0        # 418ac8 <__bss_start@@Base+0x96c>
  40b6e0:	mov    QWORD PTR [rip+0xd3d5],0x0        # 418ac0 <__bss_start@@Base+0x964>
  40b6eb:	mov    QWORD PTR [rip+0xd3c2],0x0        # 418ab8 <__bss_start@@Base+0x95c>
  40b6f6:	mov    QWORD PTR [rip+0xd3af],0x0        # 418ab0 <__bss_start@@Base+0x954>
  40b701:	mov    QWORD PTR [rip+0xd39c],0x0        # 418aa8 <__bss_start@@Base+0x94c>
  40b70c:	mov    QWORD PTR [rip+0xd389],0x0        # 418aa0 <__bss_start@@Base+0x944>
  40b717:	mov    QWORD PTR [rip+0xd376],0x0        # 418a98 <__bss_start@@Base+0x93c>
  40b722:	mov    QWORD PTR [rip+0xd363],0x0        # 418a90 <__bss_start@@Base+0x934>
  40b72d:	mov    QWORD PTR [rip+0xd350],0x0        # 418a88 <__bss_start@@Base+0x92c>
  40b738:	mov    QWORD PTR [rip+0xd33d],0x0        # 418a80 <__bss_start@@Base+0x924>
  40b743:	mov    QWORD PTR [rip+0xd32a],0x0        # 418a78 <__bss_start@@Base+0x91c>
  40b74e:	mov    QWORD PTR [rip+0xd317],0x0        # 418a70 <__bss_start@@Base+0x914>
  40b759:	mov    QWORD PTR [rip+0xd304],0x0        # 418a68 <__bss_start@@Base+0x90c>
  40b764:	mov    QWORD PTR [rip+0xd2f1],0x0        # 418a60 <__bss_start@@Base+0x904>
  40b76f:	mov    QWORD PTR [rip+0xd436],0x0        # 418bb0 <__bss_start@@Base+0xa54>
  40b77a:	mov    QWORD PTR [rip+0xd423],0x0        # 418ba8 <__bss_start@@Base+0xa4c>
  40b785:	mov    QWORD PTR [rip+0xd410],0x0        # 418ba0 <__bss_start@@Base+0xa44>
  40b790:	mov    QWORD PTR [rip+0xd3fd],0x0        # 418b98 <__bss_start@@Base+0xa3c>
  40b79b:	mov    QWORD PTR [rip+0xd3ea],0x0        # 418b90 <__bss_start@@Base+0xa34>
  40b7a6:	mov    QWORD PTR [rip+0xd3d7],0x0        # 418b88 <__bss_start@@Base+0xa2c>
  40b7b1:	mov    QWORD PTR [rip+0xd3c4],0x0        # 418b80 <__bss_start@@Base+0xa24>
  40b7bc:	mov    QWORD PTR [rip+0xd3b1],0x0        # 418b78 <__bss_start@@Base+0xa1c>
  40b7c7:	mov    QWORD PTR [rip+0xd39e],0x0        # 418b70 <__bss_start@@Base+0xa14>
  40b7d2:	mov    QWORD PTR [rip+0xd38b],0x0        # 418b68 <__bss_start@@Base+0xa0c>
  40b7dd:	mov    QWORD PTR [rip+0xd378],0x0        # 418b60 <__bss_start@@Base+0xa04>
  40b7e8:	mov    QWORD PTR [rip+0xd365],0x0        # 418b58 <__bss_start@@Base+0x9fc>
  40b7f3:	mov    QWORD PTR [rip+0xd352],0x0        # 418b50 <__bss_start@@Base+0x9f4>
  40b7fe:	mov    QWORD PTR [rip+0xd33f],0x0        # 418b48 <__bss_start@@Base+0x9ec>
  40b809:	mov    QWORD PTR [rip+0xd32c],0x0        # 418b40 <__bss_start@@Base+0x9e4>
  40b814:	mov    QWORD PTR [rip+0xd319],0x0        # 418b38 <__bss_start@@Base+0x9dc>
  40b81f:	mov    QWORD PTR [rip+0xd306],0x0        # 418b30 <__bss_start@@Base+0x9d4>
  40b82a:	mov    QWORD PTR [rip+0xd48b],0x0        # 418cc0 <__bss_start@@Base+0xb64>
  40b835:	mov    QWORD PTR [rip+0xd478],0x0        # 418cb8 <__bss_start@@Base+0xb5c>
  40b840:	mov    QWORD PTR [rip+0xd465],0x0        # 418cb0 <__bss_start@@Base+0xb54>
  40b84b:	mov    QWORD PTR [rip+0xd452],0x0        # 418ca8 <__bss_start@@Base+0xb4c>
  40b856:	mov    QWORD PTR [rip+0xd43f],0x0        # 418ca0 <__bss_start@@Base+0xb44>
  40b861:	mov    QWORD PTR [rip+0xd42c],0x0        # 418c98 <__bss_start@@Base+0xb3c>
  40b86c:	mov    QWORD PTR [rip+0xd419],0x0        # 418c90 <__bss_start@@Base+0xb34>
  40b877:	mov    QWORD PTR [rip+0xd406],0x0        # 418c88 <__bss_start@@Base+0xb2c>
  40b882:	mov    QWORD PTR [rip+0xd3f3],0x0        # 418c80 <__bss_start@@Base+0xb24>
  40b88d:	mov    QWORD PTR [rip+0xd3e0],0x0        # 418c78 <__bss_start@@Base+0xb1c>
  40b898:	mov    QWORD PTR [rip+0xd3cd],0x0        # 418c70 <__bss_start@@Base+0xb14>
  40b8a3:	mov    QWORD PTR [rip+0xd3ba],0x0        # 418c68 <__bss_start@@Base+0xb0c>
  40b8ae:	mov    QWORD PTR [rip+0xd3a7],0x0        # 418c60 <__bss_start@@Base+0xb04>
  40b8b9:	mov    QWORD PTR [rip+0xd394],0x0        # 418c58 <__bss_start@@Base+0xafc>
  40b8c4:	mov    QWORD PTR [rip+0xd381],0x0        # 418c50 <__bss_start@@Base+0xaf4>
  40b8cf:	mov    QWORD PTR [rip+0xd36e],0x0        # 418c48 <__bss_start@@Base+0xaec>
  40b8da:	mov    QWORD PTR [rip+0xd35b],0x0        # 418c40 <__bss_start@@Base+0xae4>
  40b8e5:	mov    QWORD PTR [rip+0xd348],0x0        # 418c38 <__bss_start@@Base+0xadc>
  40b8f0:	mov    QWORD PTR [rip+0xd335],0x0        # 418c30 <__bss_start@@Base+0xad4>
  40b8fb:	mov    QWORD PTR [rip+0xd322],0x0        # 418c28 <__bss_start@@Base+0xacc>
  40b906:	mov    QWORD PTR [rip+0xd30f],0x0        # 418c20 <__bss_start@@Base+0xac4>
  40b911:	mov    QWORD PTR [rip+0xd2fc],0x0        # 418c18 <__bss_start@@Base+0xabc>
  40b91c:	mov    QWORD PTR [rip+0xd2e9],0x0        # 418c10 <__bss_start@@Base+0xab4>
  40b927:	mov    QWORD PTR [rip+0xd2d6],0x0        # 418c08 <__bss_start@@Base+0xaac>
  40b932:	mov    QWORD PTR [rip+0xd2c3],0x0        # 418c00 <__bss_start@@Base+0xaa4>
  40b93d:	mov    QWORD PTR [rip+0xd2b0],0x0        # 418bf8 <__bss_start@@Base+0xa9c>
  40b948:	mov    QWORD PTR [rip+0xd29d],0x0        # 418bf0 <__bss_start@@Base+0xa94>
  40b953:	mov    QWORD PTR [rip+0xd28a],0x0        # 418be8 <__bss_start@@Base+0xa8c>
  40b95e:	mov    QWORD PTR [rip+0xd277],0x0        # 418be0 <__bss_start@@Base+0xa84>
  40b969:	mov    QWORD PTR [rip+0xd264],0x0        # 418bd8 <__bss_start@@Base+0xa7c>
  40b974:	mov    QWORD PTR [rip+0xd251],0x0        # 418bd0 <__bss_start@@Base+0xa74>
  40b97f:	mov    QWORD PTR [rip+0xd23e],0x0        # 418bc8 <__bss_start@@Base+0xa6c>
  40b98a:	mov    QWORD PTR [rip+0xd22b],0x0        # 418bc0 <__bss_start@@Base+0xa64>
  40b995:	mov    QWORD PTR [rip+0xd3d0],0x0        # 418d70 <__bss_start@@Base+0xc14>
  40b9a0:	mov    QWORD PTR [rip+0xd3bd],0x0        # 418d68 <__bss_start@@Base+0xc0c>
  40b9ab:	mov    QWORD PTR [rip+0xd3aa],0x0        # 418d60 <__bss_start@@Base+0xc04>
  40b9b6:	mov    QWORD PTR [rip+0xd397],0x0        # 418d58 <__bss_start@@Base+0xbfc>
  40b9c1:	mov    QWORD PTR [rip+0xd384],0x0        # 418d50 <__bss_start@@Base+0xbf4>
  40b9cc:	mov    QWORD PTR [rip+0xd371],0x0        # 418d48 <__bss_start@@Base+0xbec>
  40b9d7:	mov    QWORD PTR [rip+0xd35e],0x0        # 418d40 <__bss_start@@Base+0xbe4>
  40b9e2:	mov    QWORD PTR [rip+0xd34b],0x0        # 418d38 <__bss_start@@Base+0xbdc>
  40b9ed:	mov    QWORD PTR [rip+0xd338],0x0        # 418d30 <__bss_start@@Base+0xbd4>
  40b9f8:	mov    QWORD PTR [rip+0xd325],0x0        # 418d28 <__bss_start@@Base+0xbcc>
  40ba03:	mov    QWORD PTR [rip+0xd312],0x0        # 418d20 <__bss_start@@Base+0xbc4>
  40ba0e:	mov    QWORD PTR [rip+0xd2ff],0x0        # 418d18 <__bss_start@@Base+0xbbc>
  40ba19:	mov    QWORD PTR [rip+0xd2ec],0x0        # 418d10 <__bss_start@@Base+0xbb4>
  40ba24:	mov    QWORD PTR [rip+0xd2d9],0x0        # 418d08 <__bss_start@@Base+0xbac>
  40ba2f:	mov    QWORD PTR [rip+0xd2c6],0x0        # 418d00 <__bss_start@@Base+0xba4>
  40ba3a:	mov    QWORD PTR [rip+0xd2b3],0x0        # 418cf8 <__bss_start@@Base+0xb9c>
  40ba45:	mov    QWORD PTR [rip+0xd2a0],0x0        # 418cf0 <__bss_start@@Base+0xb94>
  40ba50:	mov    QWORD PTR [rip+0xd28d],0x0        # 418ce8 <__bss_start@@Base+0xb8c>
  40ba5b:	mov    QWORD PTR [rip+0xd27a],0x0        # 418ce0 <__bss_start@@Base+0xb84>
  40ba66:	mov    QWORD PTR [rip+0xd267],0x0        # 418cd8 <__bss_start@@Base+0xb7c>
  40ba71:	mov    QWORD PTR [rip+0xd254],0x0        # 418cd0 <__bss_start@@Base+0xb74>
  40ba7c:	mov    QWORD PTR [rip+0xd3d9],0x0        # 418e60 <__bss_start@@Base+0xd04>
  40ba87:	mov    QWORD PTR [rip+0xd3c6],0x0        # 418e58 <__bss_start@@Base+0xcfc>
  40ba92:	mov    QWORD PTR [rip+0xd3b3],0x0        # 418e50 <__bss_start@@Base+0xcf4>
  40ba9d:	mov    QWORD PTR [rip+0xd3a0],0x0        # 418e48 <__bss_start@@Base+0xcec>
  40baa8:	mov    QWORD PTR [rip+0xd38d],0x0        # 418e40 <__bss_start@@Base+0xce4>
  40bab3:	mov    QWORD PTR [rip+0xd37a],0x0        # 418e38 <__bss_start@@Base+0xcdc>
  40babe:	mov    QWORD PTR [rip+0xd367],0x0        # 418e30 <__bss_start@@Base+0xcd4>
  40bac9:	mov    QWORD PTR [rip+0xd354],0x0        # 418e28 <__bss_start@@Base+0xccc>
  40bad4:	mov    QWORD PTR [rip+0xd341],0x0        # 418e20 <__bss_start@@Base+0xcc4>
  40badf:	mov    QWORD PTR [rip+0xd32e],0x0        # 418e18 <__bss_start@@Base+0xcbc>
  40baea:	mov    QWORD PTR [rip+0xd31b],0x0        # 418e10 <__bss_start@@Base+0xcb4>
  40baf5:	mov    QWORD PTR [rip+0xd308],0x0        # 418e08 <__bss_start@@Base+0xcac>
  40bb00:	mov    QWORD PTR [rip+0xd2f5],0x0        # 418e00 <__bss_start@@Base+0xca4>
  40bb0b:	mov    QWORD PTR [rip+0xd2e2],0x0        # 418df8 <__bss_start@@Base+0xc9c>
  40bb16:	mov    QWORD PTR [rip+0xd2cf],0x0        # 418df0 <__bss_start@@Base+0xc94>
  40bb21:	mov    QWORD PTR [rip+0xd2bc],0x0        # 418de8 <__bss_start@@Base+0xc8c>
  40bb2c:	mov    QWORD PTR [rip+0xd2a9],0x0        # 418de0 <__bss_start@@Base+0xc84>
  40bb37:	mov    QWORD PTR [rip+0xd296],0x0        # 418dd8 <__bss_start@@Base+0xc7c>
  40bb42:	mov    QWORD PTR [rip+0xd283],0x0        # 418dd0 <__bss_start@@Base+0xc74>
  40bb4d:	mov    QWORD PTR [rip+0xd270],0x0        # 418dc8 <__bss_start@@Base+0xc6c>
  40bb58:	mov    QWORD PTR [rip+0xd25d],0x0        # 418dc0 <__bss_start@@Base+0xc64>
  40bb63:	mov    QWORD PTR [rip+0xd24a],0x0        # 418db8 <__bss_start@@Base+0xc5c>
  40bb6e:	mov    QWORD PTR [rip+0xd237],0x0        # 418db0 <__bss_start@@Base+0xc54>
  40bb79:	mov    QWORD PTR [rip+0xd224],0x0        # 418da8 <__bss_start@@Base+0xc4c>
  40bb84:	mov    QWORD PTR [rip+0xd211],0x0        # 418da0 <__bss_start@@Base+0xc44>
  40bb8f:	mov    QWORD PTR [rip+0xd1fe],0x0        # 418d98 <__bss_start@@Base+0xc3c>
  40bb9a:	mov    QWORD PTR [rip+0xd1eb],0x0        # 418d90 <__bss_start@@Base+0xc34>
  40bba5:	mov    QWORD PTR [rip+0xd1d8],0x0        # 418d88 <__bss_start@@Base+0xc2c>
  40bbb0:	mov    QWORD PTR [rip+0xd1c5],0x0        # 418d80 <__bss_start@@Base+0xc24>
  40bbbb:	mov    QWORD PTR [rip+0xd2f2],0x0        # 418eb8 <__bss_start@@Base+0xd5c>
  40bbc6:	mov    QWORD PTR [rip+0xd2df],0x0        # 418eb0 <__bss_start@@Base+0xd54>
  40bbd1:	mov    QWORD PTR [rip+0xd2cc],0x0        # 418ea8 <__bss_start@@Base+0xd4c>
  40bbdc:	mov    QWORD PTR [rip+0xd2b9],0x0        # 418ea0 <__bss_start@@Base+0xd44>
  40bbe7:	mov    QWORD PTR [rip+0xd2a6],0x0        # 418e98 <__bss_start@@Base+0xd3c>
  40bbf2:	mov    QWORD PTR [rip+0xd293],0x0        # 418e90 <__bss_start@@Base+0xd34>
  40bbfd:	mov    QWORD PTR [rip+0xd280],0x0        # 418e88 <__bss_start@@Base+0xd2c>
  40bc08:	mov    QWORD PTR [rip+0xd26d],0x0        # 418e80 <__bss_start@@Base+0xd24>
  40bc13:	mov    QWORD PTR [rip+0xd25a],0x0        # 418e78 <__bss_start@@Base+0xd1c>
  40bc1e:	mov    QWORD PTR [rip+0xd247],0x0        # 418e70 <__bss_start@@Base+0xd14>
  40bc29:	mov    QWORD PTR [rip+0xd37c],0x0        # 418fb0 <__bss_start@@Base+0xe54>
  40bc34:	mov    QWORD PTR [rip+0xd369],0x0        # 418fa8 <__bss_start@@Base+0xe4c>
  40bc3f:	mov    QWORD PTR [rip+0xd356],0x0        # 418fa0 <__bss_start@@Base+0xe44>
  40bc4a:	mov    QWORD PTR [rip+0xd343],0x0        # 418f98 <__bss_start@@Base+0xe3c>
  40bc55:	mov    QWORD PTR [rip+0xd330],0x0        # 418f90 <__bss_start@@Base+0xe34>
  40bc60:	mov    QWORD PTR [rip+0xd31d],0x0        # 418f88 <__bss_start@@Base+0xe2c>
  40bc6b:	mov    QWORD PTR [rip+0xd30a],0x0        # 418f80 <__bss_start@@Base+0xe24>
  40bc76:	mov    QWORD PTR [rip+0xd2f7],0x0        # 418f78 <__bss_start@@Base+0xe1c>
  40bc81:	mov    QWORD PTR [rip+0xd2e4],0x0        # 418f70 <__bss_start@@Base+0xe14>
  40bc8c:	mov    QWORD PTR [rip+0xd2d1],0x0        # 418f68 <__bss_start@@Base+0xe0c>
  40bc97:	mov    QWORD PTR [rip+0xd2be],0x0        # 418f60 <__bss_start@@Base+0xe04>
  40bca2:	mov    QWORD PTR [rip+0xd2ab],0x0        # 418f58 <__bss_start@@Base+0xdfc>
  40bcad:	mov    QWORD PTR [rip+0xd298],0x0        # 418f50 <__bss_start@@Base+0xdf4>
  40bcb8:	mov    QWORD PTR [rip+0xd285],0x0        # 418f48 <__bss_start@@Base+0xdec>
  40bcc3:	mov    QWORD PTR [rip+0xd272],0x0        # 418f40 <__bss_start@@Base+0xde4>
  40bcce:	mov    QWORD PTR [rip+0xd25f],0x0        # 418f38 <__bss_start@@Base+0xddc>
  40bcd9:	mov    QWORD PTR [rip+0xd24c],0x0        # 418f30 <__bss_start@@Base+0xdd4>
  40bce4:	mov    QWORD PTR [rip+0xd239],0x0        # 418f28 <__bss_start@@Base+0xdcc>
  40bcef:	mov    QWORD PTR [rip+0xd226],0x0        # 418f20 <__bss_start@@Base+0xdc4>
  40bcfa:	mov    QWORD PTR [rip+0xd213],0x0        # 418f18 <__bss_start@@Base+0xdbc>
  40bd05:	mov    QWORD PTR [rip+0xd200],0x0        # 418f10 <__bss_start@@Base+0xdb4>
  40bd10:	mov    QWORD PTR [rip+0xd1ed],0x0        # 418f08 <__bss_start@@Base+0xdac>
  40bd1b:	mov    QWORD PTR [rip+0xd1da],0x0        # 418f00 <__bss_start@@Base+0xda4>
  40bd26:	mov    QWORD PTR [rip+0xd1c7],0x0        # 418ef8 <__bss_start@@Base+0xd9c>
  40bd31:	mov    QWORD PTR [rip+0xd1b4],0x0        # 418ef0 <__bss_start@@Base+0xd94>
  40bd3c:	mov    QWORD PTR [rip+0xd1a1],0x0        # 418ee8 <__bss_start@@Base+0xd8c>
  40bd47:	mov    QWORD PTR [rip+0xd18e],0x0        # 418ee0 <__bss_start@@Base+0xd84>
  40bd52:	mov    QWORD PTR [rip+0xd17b],0x0        # 418ed8 <__bss_start@@Base+0xd7c>
  40bd5d:	mov    QWORD PTR [rip+0xd168],0x0        # 418ed0 <__bss_start@@Base+0xd74>
  40bd68:	mov    QWORD PTR [rip+0xd155],0x0        # 418ec8 <__bss_start@@Base+0xd6c>
  40bd73:	mov    QWORD PTR [rip+0xd142],0x0        # 418ec0 <__bss_start@@Base+0xd64>
  40bd7e:	mov    QWORD PTR [rip+0xd27f],0x0        # 419008 <__bss_start@@Base+0xeac>
  40bd89:	mov    QWORD PTR [rip+0xd26c],0x0        # 419000 <__bss_start@@Base+0xea4>
  40bd94:	mov    QWORD PTR [rip+0xd259],0x0        # 418ff8 <__bss_start@@Base+0xe9c>
  40bd9f:	mov    QWORD PTR [rip+0xd246],0x0        # 418ff0 <__bss_start@@Base+0xe94>
  40bdaa:	mov    QWORD PTR [rip+0xd233],0x0        # 418fe8 <__bss_start@@Base+0xe8c>
  40bdb5:	mov    QWORD PTR [rip+0xd220],0x0        # 418fe0 <__bss_start@@Base+0xe84>
  40bdc0:	mov    QWORD PTR [rip+0xd20d],0x0        # 418fd8 <__bss_start@@Base+0xe7c>
  40bdcb:	mov    QWORD PTR [rip+0xd1fa],0x0        # 418fd0 <__bss_start@@Base+0xe74>
  40bdd6:	mov    QWORD PTR [rip+0xd1e7],0x0        # 418fc8 <__bss_start@@Base+0xe6c>
  40bde1:	mov    QWORD PTR [rip+0xd1d4],0x0        # 418fc0 <__bss_start@@Base+0xe64>
  40bdec:	mov    QWORD PTR [rip+0xd359],0x0        # 419150 <__bss_start@@Base+0xff4>
  40bdf7:	mov    QWORD PTR [rip+0xd346],0x0        # 419148 <__bss_start@@Base+0xfec>
  40be02:	mov    QWORD PTR [rip+0xd333],0x0        # 419140 <__bss_start@@Base+0xfe4>
  40be0d:	mov    QWORD PTR [rip+0xd320],0x0        # 419138 <__bss_start@@Base+0xfdc>
  40be18:	mov    QWORD PTR [rip+0xd30d],0x0        # 419130 <__bss_start@@Base+0xfd4>
  40be23:	mov    QWORD PTR [rip+0xd2fa],0x0        # 419128 <__bss_start@@Base+0xfcc>
  40be2e:	mov    QWORD PTR [rip+0xd2e7],0x0        # 419120 <__bss_start@@Base+0xfc4>
  40be39:	mov    QWORD PTR [rip+0xd2d4],0x0        # 419118 <__bss_start@@Base+0xfbc>
  40be44:	mov    QWORD PTR [rip+0xd2c1],0x0        # 419110 <__bss_start@@Base+0xfb4>
  40be4f:	mov    QWORD PTR [rip+0xd2ae],0x0        # 419108 <__bss_start@@Base+0xfac>
  40be5a:	mov    QWORD PTR [rip+0xd29b],0x0        # 419100 <__bss_start@@Base+0xfa4>
  40be65:	mov    QWORD PTR [rip+0xd288],0x0        # 4190f8 <__bss_start@@Base+0xf9c>
  40be70:	mov    QWORD PTR [rip+0xd275],0x0        # 4190f0 <__bss_start@@Base+0xf94>
  40be7b:	mov    QWORD PTR [rip+0xd262],0x0        # 4190e8 <__bss_start@@Base+0xf8c>
  40be86:	mov    QWORD PTR [rip+0xd24f],0x0        # 4190e0 <__bss_start@@Base+0xf84>
  40be91:	mov    QWORD PTR [rip+0xd23c],0x0        # 4190d8 <__bss_start@@Base+0xf7c>
  40be9c:	mov    QWORD PTR [rip+0xd229],0x0        # 4190d0 <__bss_start@@Base+0xf74>
  40bea7:	mov    QWORD PTR [rip+0xd216],0x0        # 4190c8 <__bss_start@@Base+0xf6c>
  40beb2:	mov    QWORD PTR [rip+0xd203],0x0        # 4190c0 <__bss_start@@Base+0xf64>
  40bebd:	mov    QWORD PTR [rip+0xd1f0],0x0        # 4190b8 <__bss_start@@Base+0xf5c>
  40bec8:	mov    QWORD PTR [rip+0xd1dd],0x0        # 4190b0 <__bss_start@@Base+0xf54>
  40bed3:	mov    QWORD PTR [rip+0xd1ca],0x0        # 4190a8 <__bss_start@@Base+0xf4c>
  40bede:	mov    QWORD PTR [rip+0xd1b7],0x0        # 4190a0 <__bss_start@@Base+0xf44>
  40bee9:	mov    QWORD PTR [rip+0xd1a4],0x0        # 419098 <__bss_start@@Base+0xf3c>
  40bef4:	mov    QWORD PTR [rip+0xd191],0x0        # 419090 <__bss_start@@Base+0xf34>
  40beff:	mov    QWORD PTR [rip+0xd17e],0x0        # 419088 <__bss_start@@Base+0xf2c>
  40bf0a:	mov    QWORD PTR [rip+0xd16b],0x0        # 419080 <__bss_start@@Base+0xf24>
  40bf15:	mov    QWORD PTR [rip+0xd158],0x0        # 419078 <__bss_start@@Base+0xf1c>
  40bf20:	mov    QWORD PTR [rip+0xd145],0x0        # 419070 <__bss_start@@Base+0xf14>
  40bf2b:	mov    QWORD PTR [rip+0xd132],0x0        # 419068 <__bss_start@@Base+0xf0c>
  40bf36:	mov    QWORD PTR [rip+0xd11f],0x0        # 419060 <__bss_start@@Base+0xf04>
  40bf41:	mov    QWORD PTR [rip+0xd10c],0x0        # 419058 <__bss_start@@Base+0xefc>
  40bf4c:	mov    QWORD PTR [rip+0xd0f9],0x0        # 419050 <__bss_start@@Base+0xef4>
  40bf57:	mov    QWORD PTR [rip+0xd0e6],0x0        # 419048 <__bss_start@@Base+0xeec>
  40bf62:	mov    QWORD PTR [rip+0xd0d3],0x0        # 419040 <__bss_start@@Base+0xee4>
  40bf6d:	mov    QWORD PTR [rip+0xd0c0],0x0        # 419038 <__bss_start@@Base+0xedc>
  40bf78:	mov    QWORD PTR [rip+0xd0ad],0x0        # 419030 <__bss_start@@Base+0xed4>
  40bf83:	mov    QWORD PTR [rip+0xd09a],0x0        # 419028 <__bss_start@@Base+0xecc>
  40bf8e:	mov    QWORD PTR [rip+0xd087],0x0        # 419020 <__bss_start@@Base+0xec4>
  40bf99:	mov    QWORD PTR [rip+0xd074],0x0        # 419018 <__bss_start@@Base+0xebc>
  40bfa4:	mov    QWORD PTR [rip+0xd061],0x0        # 419010 <__bss_start@@Base+0xeb4>
  40bfaf:	mov    QWORD PTR [rip+0xd276],0x0        # 419230 <__bss_start@@Base+0x10d4>
  40bfba:	mov    QWORD PTR [rip+0xd263],0x0        # 419228 <__bss_start@@Base+0x10cc>
  40bfc5:	mov    QWORD PTR [rip+0xd250],0x0        # 419220 <__bss_start@@Base+0x10c4>
  40bfd0:	mov    QWORD PTR [rip+0xd23d],0x0        # 419218 <__bss_start@@Base+0x10bc>
  40bfdb:	mov    QWORD PTR [rip+0xd22a],0x0        # 419210 <__bss_start@@Base+0x10b4>
  40bfe6:	mov    QWORD PTR [rip+0xd217],0x0        # 419208 <__bss_start@@Base+0x10ac>
  40bff1:	mov    QWORD PTR [rip+0xd204],0x0        # 419200 <__bss_start@@Base+0x10a4>
  40bffc:	mov    QWORD PTR [rip+0xd1f1],0x0        # 4191f8 <__bss_start@@Base+0x109c>
  40c007:	mov    QWORD PTR [rip+0xd1de],0x0        # 4191f0 <__bss_start@@Base+0x1094>
  40c012:	mov    QWORD PTR [rip+0xd1cb],0x0        # 4191e8 <__bss_start@@Base+0x108c>
  40c01d:	mov    QWORD PTR [rip+0xd1b8],0x0        # 4191e0 <__bss_start@@Base+0x1084>
  40c028:	mov    QWORD PTR [rip+0xd1a5],0x0        # 4191d8 <__bss_start@@Base+0x107c>
  40c033:	mov    QWORD PTR [rip+0xd192],0x0        # 4191d0 <__bss_start@@Base+0x1074>
  40c03e:	mov    QWORD PTR [rip+0xd17f],0x0        # 4191c8 <__bss_start@@Base+0x106c>
  40c049:	mov    QWORD PTR [rip+0xd16c],0x0        # 4191c0 <__bss_start@@Base+0x1064>
  40c054:	mov    QWORD PTR [rip+0xd159],0x0        # 4191b8 <__bss_start@@Base+0x105c>
  40c05f:	mov    QWORD PTR [rip+0xd146],0x0        # 4191b0 <__bss_start@@Base+0x1054>
  40c06a:	mov    QWORD PTR [rip+0xd133],0x0        # 4191a8 <__bss_start@@Base+0x104c>
  40c075:	mov    QWORD PTR [rip+0xd120],0x0        # 4191a0 <__bss_start@@Base+0x1044>
  40c080:	mov    QWORD PTR [rip+0xd10d],0x0        # 419198 <__bss_start@@Base+0x103c>
  40c08b:	mov    QWORD PTR [rip+0xd0fa],0x0        # 419190 <__bss_start@@Base+0x1034>
  40c096:	mov    QWORD PTR [rip+0xd0e7],0x0        # 419188 <__bss_start@@Base+0x102c>
  40c0a1:	mov    QWORD PTR [rip+0xd0d4],0x0        # 419180 <__bss_start@@Base+0x1024>
  40c0ac:	mov    QWORD PTR [rip+0xd0c1],0x0        # 419178 <__bss_start@@Base+0x101c>
  40c0b7:	mov    QWORD PTR [rip+0xd0ae],0x0        # 419170 <__bss_start@@Base+0x1014>
  40c0c2:	mov    QWORD PTR [rip+0xd09b],0x0        # 419168 <__bss_start@@Base+0x100c>
  40c0cd:	mov    QWORD PTR [rip+0xd088],0x0        # 419160 <__bss_start@@Base+0x1004>
  40c0d8:	mov    QWORD PTR [rip+0xd1e5],0x0        # 4192c8 <__bss_start@@Base+0x116c>
  40c0e3:	mov    QWORD PTR [rip+0xd1d2],0x0        # 4192c0 <__bss_start@@Base+0x1164>
  40c0ee:	mov    QWORD PTR [rip+0xd1bf],0x0        # 4192b8 <__bss_start@@Base+0x115c>
  40c0f9:	mov    QWORD PTR [rip+0xd1ac],0x0        # 4192b0 <__bss_start@@Base+0x1154>
  40c104:	mov    QWORD PTR [rip+0xd199],0x0        # 4192a8 <__bss_start@@Base+0x114c>
  40c10f:	mov    QWORD PTR [rip+0xd186],0x0        # 4192a0 <__bss_start@@Base+0x1144>
  40c11a:	mov    QWORD PTR [rip+0xd173],0x0        # 419298 <__bss_start@@Base+0x113c>
  40c125:	mov    QWORD PTR [rip+0xd160],0x0        # 419290 <__bss_start@@Base+0x1134>
  40c130:	mov    QWORD PTR [rip+0xd14d],0x0        # 419288 <__bss_start@@Base+0x112c>
  40c13b:	mov    QWORD PTR [rip+0xd13a],0x0        # 419280 <__bss_start@@Base+0x1124>
  40c146:	mov    QWORD PTR [rip+0xd127],0x0        # 419278 <__bss_start@@Base+0x111c>
  40c151:	mov    QWORD PTR [rip+0xd114],0x0        # 419270 <__bss_start@@Base+0x1114>
  40c15c:	mov    QWORD PTR [rip+0xd101],0x0        # 419268 <__bss_start@@Base+0x110c>
  40c167:	mov    QWORD PTR [rip+0xd0ee],0x0        # 419260 <__bss_start@@Base+0x1104>
  40c172:	mov    QWORD PTR [rip+0xd0db],0x0        # 419258 <__bss_start@@Base+0x10fc>
  40c17d:	mov    QWORD PTR [rip+0xd0c8],0x0        # 419250 <__bss_start@@Base+0x10f4>
  40c188:	mov    QWORD PTR [rip+0xd0b5],0x0        # 419248 <__bss_start@@Base+0x10ec>
  40c193:	mov    QWORD PTR [rip+0xd0a2],0x0        # 419240 <__bss_start@@Base+0x10e4>
  40c19e:	mov    QWORD PTR [rip+0xd167],0x0        # 419310 <__bss_start@@Base+0x11b4>
  40c1a9:	mov    QWORD PTR [rip+0xd154],0x0        # 419308 <__bss_start@@Base+0x11ac>
  40c1b4:	mov    QWORD PTR [rip+0xd141],0x0        # 419300 <__bss_start@@Base+0x11a4>
  40c1bf:	mov    QWORD PTR [rip+0xd12e],0x0        # 4192f8 <__bss_start@@Base+0x119c>
  40c1ca:	mov    QWORD PTR [rip+0xd11b],0x0        # 4192f0 <__bss_start@@Base+0x1194>
  40c1d5:	mov    QWORD PTR [rip+0xd108],0x0        # 4192e8 <__bss_start@@Base+0x118c>
  40c1e0:	mov    QWORD PTR [rip+0xd0f5],0x0        # 4192e0 <__bss_start@@Base+0x1184>
  40c1eb:	mov    QWORD PTR [rip+0xd0e2],0x0        # 4192d8 <__bss_start@@Base+0x117c>
  40c1f6:	mov    QWORD PTR [rip+0xd0cf],0x0        # 4192d0 <__bss_start@@Base+0x1174>
  40c201:	mov    QWORD PTR [rip+0xd114],0x0        # 419320 <__bss_start@@Base+0x11c4>
  40c20c:	mov    QWORD PTR [rip+0xd101],0x0        # 419318 <__bss_start@@Base+0x11bc>
  40c217:	mov    QWORD PTR [rip+0xd10e],0x0        # 419330 <__bss_start@@Base+0x11d4>
  40c222:	mov    QWORD PTR [rip+0xd0fb],0x0        # 419328 <__bss_start@@Base+0x11cc>
  40c22d:	mov    QWORD PTR [rip+0xd150],0x0        # 419388 <__bss_start@@Base+0x122c>
  40c238:	mov    QWORD PTR [rip+0xd13d],0x0        # 419380 <__bss_start@@Base+0x1224>
  40c243:	mov    QWORD PTR [rip+0xd12a],0x0        # 419378 <__bss_start@@Base+0x121c>
  40c24e:	mov    QWORD PTR [rip+0xd117],0x0        # 419370 <__bss_start@@Base+0x1214>
  40c259:	mov    QWORD PTR [rip+0xd104],0x0        # 419368 <__bss_start@@Base+0x120c>
  40c264:	mov    QWORD PTR [rip+0xd0f1],0x0        # 419360 <__bss_start@@Base+0x1204>
  40c26f:	mov    QWORD PTR [rip+0xd0de],0x0        # 419358 <__bss_start@@Base+0x11fc>
  40c27a:	mov    QWORD PTR [rip+0xd0cb],0x0        # 419350 <__bss_start@@Base+0x11f4>
  40c285:	mov    QWORD PTR [rip+0xd0b8],0x0        # 419348 <__bss_start@@Base+0x11ec>
  40c290:	mov    QWORD PTR [rip+0xd0a5],0x0        # 419340 <__bss_start@@Base+0x11e4>
  40c29b:	mov    QWORD PTR [rip+0xd0f2],0x0        # 419398 <__bss_start@@Base+0x123c>
  40c2a6:	mov    QWORD PTR [rip+0xd0df],0x0        # 419390 <__bss_start@@Base+0x1234>
  40c2b1:	mov    QWORD PTR [rip+0xd10c],0x0        # 4193c8 <__bss_start@@Base+0x126c>
  40c2bc:	mov    QWORD PTR [rip+0xd0f9],0x0        # 4193c0 <__bss_start@@Base+0x1264>
  40c2c7:	mov    QWORD PTR [rip+0xd0e6],0x0        # 4193b8 <__bss_start@@Base+0x125c>
  40c2d2:	mov    QWORD PTR [rip+0xd0d3],0x0        # 4193b0 <__bss_start@@Base+0x1254>
  40c2dd:	mov    QWORD PTR [rip+0xd0c0],0x0        # 4193a8 <__bss_start@@Base+0x124c>
  40c2e8:	mov    QWORD PTR [rip+0xd0ad],0x0        # 4193a0 <__bss_start@@Base+0x1244>
  40c2f3:	pop    rax
  40c2f4:	ret    
  40c2f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2ff:	nop
  40c300:	push   rax
  40c301:	lea    rdi,[rip+0xffffffffffffe898]        # 40aba0 <UnityEnd@@Base+0x1b0>
  40c308:	lea    rsi,[rip+0xffffffffffffe991]        # 40aca0 <UnityEnd@@Base+0x2b0>
  40c30f:	call   410f30 <__gcov_flush@@Base+0xa0>
  40c314:	pop    rax
  40c315:	ret    
  40c316:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040c320 <init_token_int_type@@Base>:
  40c320:	push   rbp
  40c321:	mov    rbp,rsp
  40c324:	mov    rax,QWORD PTR [rip+0xd0a5]        # 4193d0 <__bss_start@@Base+0x1274>
  40c32b:	add    rax,0x1
  40c32f:	mov    QWORD PTR [rip+0xd09a],rax        # 4193d0 <__bss_start@@Base+0x1274>
  40c336:	mov    QWORD PTR [rbp-0x10],rdi
  40c33a:	mov    rax,QWORD PTR [rip+0xd097]        # 4193d8 <__bss_start@@Base+0x127c>
  40c341:	add    rax,0x1
  40c345:	mov    QWORD PTR [rip+0xd08c],rax        # 4193d8 <__bss_start@@Base+0x127c>
  40c34c:	mov    rax,QWORD PTR [rbp-0x10]
  40c350:	mov    QWORD PTR [rbp-0x8],rax
  40c354:	mov    rcx,QWORD PTR [rbp-0x8]
  40c358:	mov    DWORD PTR [rcx],0x0
  40c35e:	pop    rbp
  40c35f:	ret    

000000000040c360 <init_token_int_value@@Base>:
  40c360:	push   rbp
  40c361:	mov    rbp,rsp
  40c364:	mov    rax,QWORD PTR [rip+0xd075]        # 4193e0 <__bss_start@@Base+0x1284>
  40c36b:	add    rax,0x1
  40c36f:	mov    QWORD PTR [rip+0xd06a],rax        # 4193e0 <__bss_start@@Base+0x1284>
  40c376:	mov    QWORD PTR [rbp-0x18],rdi
  40c37a:	mov    DWORD PTR [rbp-0x1c],esi
  40c37d:	mov    rax,QWORD PTR [rip+0xd064]        # 4193e8 <__bss_start@@Base+0x128c>
  40c384:	add    rax,0x1
  40c388:	mov    QWORD PTR [rip+0xd059],rax        # 4193e8 <__bss_start@@Base+0x128c>
  40c38f:	mov    rax,QWORD PTR [rbp-0x18]
  40c393:	mov    QWORD PTR [rbp-0x8],rax
  40c397:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c39a:	mov    DWORD PTR [rbp-0xc],ecx
  40c39d:	mov    rdx,QWORD PTR [rbp-0x8]
  40c3a1:	mov    DWORD PTR [rdx],0x1
  40c3a7:	mov    esi,DWORD PTR [rbp-0xc]
  40c3aa:	mov    rdx,QWORD PTR [rbp-0x8]
  40c3ae:	mov    DWORD PTR [rdx+0x4],esi
  40c3b1:	pop    rbp
  40c3b2:	ret    
  40c3b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c3bd:	nop    DWORD PTR [rax]

000000000040c3c0 <init_token_function@@Base>:
  40c3c0:	push   rbp
  40c3c1:	mov    rbp,rsp
  40c3c4:	mov    rax,QWORD PTR [rip+0xd025]        # 4193f0 <__bss_start@@Base+0x1294>
  40c3cb:	add    rax,0x1
  40c3cf:	mov    QWORD PTR [rip+0xd01a],rax        # 4193f0 <__bss_start@@Base+0x1294>
  40c3d6:	mov    QWORD PTR [rbp-0x18],rdi
  40c3da:	mov    QWORD PTR [rbp-0x20],rsi
  40c3de:	mov    rax,QWORD PTR [rip+0xd013]        # 4193f8 <__bss_start@@Base+0x129c>
  40c3e5:	add    rax,0x1
  40c3e9:	mov    QWORD PTR [rip+0xd008],rax        # 4193f8 <__bss_start@@Base+0x129c>
  40c3f0:	mov    rax,QWORD PTR [rbp-0x18]
  40c3f4:	mov    QWORD PTR [rbp-0x8],rax
  40c3f8:	mov    rcx,QWORD PTR [rbp-0x20]
  40c3fc:	mov    QWORD PTR [rbp-0x10],rcx
  40c400:	mov    rdx,QWORD PTR [rbp-0x8]
  40c404:	mov    DWORD PTR [rdx],0x2
  40c40a:	mov    rdx,QWORD PTR [rbp-0x10]
  40c40e:	mov    rsi,QWORD PTR [rbp-0x8]
  40c412:	mov    QWORD PTR [rsi+0x8],rdx
  40c416:	pop    rbp
  40c417:	ret    
  40c418:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c420 <init_token_opar@@Base>:
  40c420:	push   rbp
  40c421:	mov    rbp,rsp
  40c424:	mov    rax,QWORD PTR [rip+0xcfd5]        # 419400 <__bss_start@@Base+0x12a4>
  40c42b:	add    rax,0x1
  40c42f:	mov    QWORD PTR [rip+0xcfca],rax        # 419400 <__bss_start@@Base+0x12a4>
  40c436:	mov    QWORD PTR [rbp-0x10],rdi
  40c43a:	mov    rax,QWORD PTR [rip+0xcfc7]        # 419408 <__bss_start@@Base+0x12ac>
  40c441:	add    rax,0x1
  40c445:	mov    QWORD PTR [rip+0xcfbc],rax        # 419408 <__bss_start@@Base+0x12ac>
  40c44c:	mov    rax,QWORD PTR [rbp-0x10]
  40c450:	mov    QWORD PTR [rbp-0x8],rax
  40c454:	mov    rcx,QWORD PTR [rbp-0x8]
  40c458:	mov    DWORD PTR [rcx],0x3
  40c45e:	pop    rbp
  40c45f:	ret    

000000000040c460 <init_token_cpar@@Base>:
  40c460:	push   rbp
  40c461:	mov    rbp,rsp
  40c464:	mov    rax,QWORD PTR [rip+0xcfa5]        # 419410 <__bss_start@@Base+0x12b4>
  40c46b:	add    rax,0x1
  40c46f:	mov    QWORD PTR [rip+0xcf9a],rax        # 419410 <__bss_start@@Base+0x12b4>
  40c476:	mov    QWORD PTR [rbp-0x10],rdi
  40c47a:	mov    rax,QWORD PTR [rip+0xcf97]        # 419418 <__bss_start@@Base+0x12bc>
  40c481:	add    rax,0x1
  40c485:	mov    QWORD PTR [rip+0xcf8c],rax        # 419418 <__bss_start@@Base+0x12bc>
  40c48c:	mov    rax,QWORD PTR [rbp-0x10]
  40c490:	mov    QWORD PTR [rbp-0x8],rax
  40c494:	mov    rcx,QWORD PTR [rbp-0x8]
  40c498:	mov    DWORD PTR [rcx],0x4
  40c49e:	pop    rbp
  40c49f:	ret    

000000000040c4a0 <init_token_obra@@Base>:
  40c4a0:	push   rbp
  40c4a1:	mov    rbp,rsp
  40c4a4:	mov    rax,QWORD PTR [rip+0xcf75]        # 419420 <__bss_start@@Base+0x12c4>
  40c4ab:	add    rax,0x1
  40c4af:	mov    QWORD PTR [rip+0xcf6a],rax        # 419420 <__bss_start@@Base+0x12c4>
  40c4b6:	mov    QWORD PTR [rbp-0x10],rdi
  40c4ba:	mov    rax,QWORD PTR [rip+0xcf67]        # 419428 <__bss_start@@Base+0x12cc>
  40c4c1:	add    rax,0x1
  40c4c5:	mov    QWORD PTR [rip+0xcf5c],rax        # 419428 <__bss_start@@Base+0x12cc>
  40c4cc:	mov    rax,QWORD PTR [rbp-0x10]
  40c4d0:	mov    QWORD PTR [rbp-0x8],rax
  40c4d4:	mov    rcx,QWORD PTR [rbp-0x8]
  40c4d8:	mov    DWORD PTR [rcx],0x5
  40c4de:	pop    rbp
  40c4df:	ret    

000000000040c4e0 <init_token_cbra@@Base>:
  40c4e0:	push   rbp
  40c4e1:	mov    rbp,rsp
  40c4e4:	mov    rax,QWORD PTR [rip+0xcf45]        # 419430 <__bss_start@@Base+0x12d4>
  40c4eb:	add    rax,0x1
  40c4ef:	mov    QWORD PTR [rip+0xcf3a],rax        # 419430 <__bss_start@@Base+0x12d4>
  40c4f6:	mov    QWORD PTR [rbp-0x10],rdi
  40c4fa:	mov    rax,QWORD PTR [rip+0xcf37]        # 419438 <__bss_start@@Base+0x12dc>
  40c501:	add    rax,0x1
  40c505:	mov    QWORD PTR [rip+0xcf2c],rax        # 419438 <__bss_start@@Base+0x12dc>
  40c50c:	mov    rax,QWORD PTR [rbp-0x10]
  40c510:	mov    QWORD PTR [rbp-0x8],rax
  40c514:	mov    rcx,QWORD PTR [rbp-0x8]
  40c518:	mov    DWORD PTR [rcx],0x6
  40c51e:	pop    rbp
  40c51f:	ret    

000000000040c520 <init_token_return@@Base>:
  40c520:	push   rbp
  40c521:	mov    rbp,rsp
  40c524:	mov    rax,QWORD PTR [rip+0xcf15]        # 419440 <__bss_start@@Base+0x12e4>
  40c52b:	add    rax,0x1
  40c52f:	mov    QWORD PTR [rip+0xcf0a],rax        # 419440 <__bss_start@@Base+0x12e4>
  40c536:	mov    QWORD PTR [rbp-0x10],rdi
  40c53a:	mov    rax,QWORD PTR [rip+0xcf07]        # 419448 <__bss_start@@Base+0x12ec>
  40c541:	add    rax,0x1
  40c545:	mov    QWORD PTR [rip+0xcefc],rax        # 419448 <__bss_start@@Base+0x12ec>
  40c54c:	mov    rax,QWORD PTR [rbp-0x10]
  40c550:	mov    QWORD PTR [rbp-0x8],rax
  40c554:	mov    rcx,QWORD PTR [rbp-0x8]
  40c558:	mov    DWORD PTR [rcx],0x7
  40c55e:	pop    rbp
  40c55f:	ret    

000000000040c560 <init_token_semicolon@@Base>:
  40c560:	push   rbp
  40c561:	mov    rbp,rsp
  40c564:	mov    rax,QWORD PTR [rip+0xcee5]        # 419450 <__bss_start@@Base+0x12f4>
  40c56b:	add    rax,0x1
  40c56f:	mov    QWORD PTR [rip+0xceda],rax        # 419450 <__bss_start@@Base+0x12f4>
  40c576:	mov    QWORD PTR [rbp-0x10],rdi
  40c57a:	mov    rax,QWORD PTR [rip+0xced7]        # 419458 <__bss_start@@Base+0x12fc>
  40c581:	add    rax,0x1
  40c585:	mov    QWORD PTR [rip+0xcecc],rax        # 419458 <__bss_start@@Base+0x12fc>
  40c58c:	mov    rax,QWORD PTR [rbp-0x10]
  40c590:	mov    QWORD PTR [rbp-0x8],rax
  40c594:	mov    rcx,QWORD PTR [rbp-0x8]
  40c598:	mov    DWORD PTR [rcx],0x8
  40c59e:	pop    rbp
  40c59f:	ret    

000000000040c5a0 <init_token_eof@@Base>:
  40c5a0:	push   rbp
  40c5a1:	mov    rbp,rsp
  40c5a4:	mov    rax,QWORD PTR [rip+0xceb5]        # 419460 <__bss_start@@Base+0x1304>
  40c5ab:	add    rax,0x1
  40c5af:	mov    QWORD PTR [rip+0xceaa],rax        # 419460 <__bss_start@@Base+0x1304>
  40c5b6:	mov    QWORD PTR [rbp-0x10],rdi
  40c5ba:	mov    rax,QWORD PTR [rip+0xcea7]        # 419468 <__bss_start@@Base+0x130c>
  40c5c1:	add    rax,0x1
  40c5c5:	mov    QWORD PTR [rip+0xce9c],rax        # 419468 <__bss_start@@Base+0x130c>
  40c5cc:	mov    rax,QWORD PTR [rbp-0x10]
  40c5d0:	mov    QWORD PTR [rbp-0x8],rax
  40c5d4:	mov    rcx,QWORD PTR [rbp-0x8]
  40c5d8:	mov    DWORD PTR [rcx],0x9
  40c5de:	pop    rbp
  40c5df:	ret    

000000000040c5e0 <init_token_if@@Base>:
  40c5e0:	push   rbp
  40c5e1:	mov    rbp,rsp
  40c5e4:	mov    rax,QWORD PTR [rip+0xce85]        # 419470 <__bss_start@@Base+0x1314>
  40c5eb:	add    rax,0x1
  40c5ef:	mov    QWORD PTR [rip+0xce7a],rax        # 419470 <__bss_start@@Base+0x1314>
  40c5f6:	mov    QWORD PTR [rbp-0x10],rdi
  40c5fa:	mov    rax,QWORD PTR [rip+0xce77]        # 419478 <__bss_start@@Base+0x131c>
  40c601:	add    rax,0x1
  40c605:	mov    QWORD PTR [rip+0xce6c],rax        # 419478 <__bss_start@@Base+0x131c>
  40c60c:	mov    rax,QWORD PTR [rbp-0x10]
  40c610:	mov    QWORD PTR [rbp-0x8],rax
  40c614:	mov    rcx,QWORD PTR [rbp-0x8]
  40c618:	mov    DWORD PTR [rcx],0xa
  40c61e:	pop    rbp
  40c61f:	ret    

000000000040c620 <init_token_else@@Base>:
  40c620:	push   rbp
  40c621:	mov    rbp,rsp
  40c624:	mov    rax,QWORD PTR [rip+0xce55]        # 419480 <__bss_start@@Base+0x1324>
  40c62b:	add    rax,0x1
  40c62f:	mov    QWORD PTR [rip+0xce4a],rax        # 419480 <__bss_start@@Base+0x1324>
  40c636:	mov    QWORD PTR [rbp-0x10],rdi
  40c63a:	mov    rax,QWORD PTR [rip+0xce47]        # 419488 <__bss_start@@Base+0x132c>
  40c641:	add    rax,0x1
  40c645:	mov    QWORD PTR [rip+0xce3c],rax        # 419488 <__bss_start@@Base+0x132c>
  40c64c:	mov    rax,QWORD PTR [rbp-0x10]
  40c650:	mov    QWORD PTR [rbp-0x8],rax
  40c654:	mov    rcx,QWORD PTR [rbp-0x8]
  40c658:	mov    DWORD PTR [rcx],0xb
  40c65e:	pop    rbp
  40c65f:	ret    

000000000040c660 <init_token_boolean_op@@Base>:
  40c660:	push   rbp
  40c661:	mov    rbp,rsp
  40c664:	mov    rax,QWORD PTR [rip+0xce25]        # 419490 <__bss_start@@Base+0x1334>
  40c66b:	add    rax,0x1
  40c66f:	mov    QWORD PTR [rip+0xce1a],rax        # 419490 <__bss_start@@Base+0x1334>
  40c676:	mov    QWORD PTR [rbp-0x18],rdi
  40c67a:	mov    QWORD PTR [rbp-0x20],rsi
  40c67e:	mov    rax,QWORD PTR [rip+0xce13]        # 419498 <__bss_start@@Base+0x133c>
  40c685:	add    rax,0x1
  40c689:	mov    QWORD PTR [rip+0xce08],rax        # 419498 <__bss_start@@Base+0x133c>
  40c690:	mov    rax,QWORD PTR [rbp-0x18]
  40c694:	mov    QWORD PTR [rbp-0x8],rax
  40c698:	mov    rcx,QWORD PTR [rbp-0x20]
  40c69c:	mov    QWORD PTR [rbp-0x10],rcx
  40c6a0:	mov    rdx,QWORD PTR [rbp-0x8]
  40c6a4:	mov    DWORD PTR [rdx],0xc
  40c6aa:	mov    rdx,QWORD PTR [rbp-0x10]
  40c6ae:	mov    rsi,QWORD PTR [rbp-0x8]
  40c6b2:	mov    QWORD PTR [rsi+0x8],rdx
  40c6b6:	pop    rbp
  40c6b7:	ret    
  40c6b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c6c0 <free_token_int_type@@Base>:
  40c6c0:	push   rbp
  40c6c1:	mov    rbp,rsp
  40c6c4:	sub    rsp,0x10
  40c6c8:	mov    rax,QWORD PTR [rip+0xcdd1]        # 4194a0 <__bss_start@@Base+0x1344>
  40c6cf:	add    rax,0x1
  40c6d3:	mov    QWORD PTR [rip+0xcdc6],rax        # 4194a0 <__bss_start@@Base+0x1344>
  40c6da:	mov    QWORD PTR [rbp-0x10],rdi
  40c6de:	mov    rax,QWORD PTR [rip+0xcdc3]        # 4194a8 <__bss_start@@Base+0x134c>
  40c6e5:	add    rax,0x1
  40c6e9:	mov    QWORD PTR [rip+0xcdb8],rax        # 4194a8 <__bss_start@@Base+0x134c>
  40c6f0:	mov    rax,QWORD PTR [rbp-0x10]
  40c6f4:	mov    QWORD PTR [rbp-0x8],rax
  40c6f8:	mov    rcx,QWORD PTR [rbp-0x8]
  40c6fc:	mov    rdi,rcx
  40c6ff:	call   403040 <free@plt>
  40c704:	add    rsp,0x10
  40c708:	pop    rbp
  40c709:	ret    
  40c70a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c710 <free_token_int_value@@Base>:
  40c710:	push   rbp
  40c711:	mov    rbp,rsp
  40c714:	sub    rsp,0x10
  40c718:	mov    rax,QWORD PTR [rip+0xcd91]        # 4194b0 <__bss_start@@Base+0x1354>
  40c71f:	add    rax,0x1
  40c723:	mov    QWORD PTR [rip+0xcd86],rax        # 4194b0 <__bss_start@@Base+0x1354>
  40c72a:	mov    QWORD PTR [rbp-0x10],rdi
  40c72e:	mov    rax,QWORD PTR [rip+0xcd83]        # 4194b8 <__bss_start@@Base+0x135c>
  40c735:	add    rax,0x1
  40c739:	mov    QWORD PTR [rip+0xcd78],rax        # 4194b8 <__bss_start@@Base+0x135c>
  40c740:	mov    rax,QWORD PTR [rbp-0x10]
  40c744:	mov    QWORD PTR [rbp-0x8],rax
  40c748:	mov    rcx,QWORD PTR [rbp-0x8]
  40c74c:	mov    rdi,rcx
  40c74f:	call   403040 <free@plt>
  40c754:	add    rsp,0x10
  40c758:	pop    rbp
  40c759:	ret    
  40c75a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c760 <free_token_function@@Base>:
  40c760:	push   rbp
  40c761:	mov    rbp,rsp
  40c764:	sub    rsp,0x10
  40c768:	mov    rax,QWORD PTR [rip+0xcd51]        # 4194c0 <__bss_start@@Base+0x1364>
  40c76f:	add    rax,0x1
  40c773:	mov    QWORD PTR [rip+0xcd46],rax        # 4194c0 <__bss_start@@Base+0x1364>
  40c77a:	mov    QWORD PTR [rbp-0x10],rdi
  40c77e:	mov    rax,QWORD PTR [rip+0xcd43]        # 4194c8 <__bss_start@@Base+0x136c>
  40c785:	add    rax,0x1
  40c789:	mov    QWORD PTR [rip+0xcd38],rax        # 4194c8 <__bss_start@@Base+0x136c>
  40c790:	mov    rax,QWORD PTR [rbp-0x10]
  40c794:	mov    QWORD PTR [rbp-0x8],rax
  40c798:	mov    rcx,QWORD PTR [rbp-0x8]
  40c79c:	mov    rdi,rcx
  40c79f:	call   403040 <free@plt>
  40c7a4:	add    rsp,0x10
  40c7a8:	pop    rbp
  40c7a9:	ret    
  40c7aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c7b0 <free_token_opar@@Base>:
  40c7b0:	push   rbp
  40c7b1:	mov    rbp,rsp
  40c7b4:	sub    rsp,0x10
  40c7b8:	mov    rax,QWORD PTR [rip+0xcd11]        # 4194d0 <__bss_start@@Base+0x1374>
  40c7bf:	add    rax,0x1
  40c7c3:	mov    QWORD PTR [rip+0xcd06],rax        # 4194d0 <__bss_start@@Base+0x1374>
  40c7ca:	mov    QWORD PTR [rbp-0x10],rdi
  40c7ce:	mov    rax,QWORD PTR [rip+0xcd03]        # 4194d8 <__bss_start@@Base+0x137c>
  40c7d5:	add    rax,0x1
  40c7d9:	mov    QWORD PTR [rip+0xccf8],rax        # 4194d8 <__bss_start@@Base+0x137c>
  40c7e0:	mov    rax,QWORD PTR [rbp-0x10]
  40c7e4:	mov    QWORD PTR [rbp-0x8],rax
  40c7e8:	mov    rcx,QWORD PTR [rbp-0x8]
  40c7ec:	mov    rdi,rcx
  40c7ef:	call   403040 <free@plt>
  40c7f4:	add    rsp,0x10
  40c7f8:	pop    rbp
  40c7f9:	ret    
  40c7fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c800 <free_token_cpar@@Base>:
  40c800:	push   rbp
  40c801:	mov    rbp,rsp
  40c804:	sub    rsp,0x10
  40c808:	mov    rax,QWORD PTR [rip+0xccd1]        # 4194e0 <__bss_start@@Base+0x1384>
  40c80f:	add    rax,0x1
  40c813:	mov    QWORD PTR [rip+0xccc6],rax        # 4194e0 <__bss_start@@Base+0x1384>
  40c81a:	mov    QWORD PTR [rbp-0x10],rdi
  40c81e:	mov    rax,QWORD PTR [rip+0xccc3]        # 4194e8 <__bss_start@@Base+0x138c>
  40c825:	add    rax,0x1
  40c829:	mov    QWORD PTR [rip+0xccb8],rax        # 4194e8 <__bss_start@@Base+0x138c>
  40c830:	mov    rax,QWORD PTR [rbp-0x10]
  40c834:	mov    QWORD PTR [rbp-0x8],rax
  40c838:	mov    rcx,QWORD PTR [rbp-0x8]
  40c83c:	mov    rdi,rcx
  40c83f:	call   403040 <free@plt>
  40c844:	add    rsp,0x10
  40c848:	pop    rbp
  40c849:	ret    
  40c84a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c850 <free_token_obra@@Base>:
  40c850:	push   rbp
  40c851:	mov    rbp,rsp
  40c854:	sub    rsp,0x10
  40c858:	mov    rax,QWORD PTR [rip+0xcc91]        # 4194f0 <__bss_start@@Base+0x1394>
  40c85f:	add    rax,0x1
  40c863:	mov    QWORD PTR [rip+0xcc86],rax        # 4194f0 <__bss_start@@Base+0x1394>
  40c86a:	mov    QWORD PTR [rbp-0x10],rdi
  40c86e:	mov    rax,QWORD PTR [rip+0xcc83]        # 4194f8 <__bss_start@@Base+0x139c>
  40c875:	add    rax,0x1
  40c879:	mov    QWORD PTR [rip+0xcc78],rax        # 4194f8 <__bss_start@@Base+0x139c>
  40c880:	mov    rax,QWORD PTR [rbp-0x10]
  40c884:	mov    QWORD PTR [rbp-0x8],rax
  40c888:	mov    rcx,QWORD PTR [rbp-0x8]
  40c88c:	mov    rdi,rcx
  40c88f:	call   403040 <free@plt>
  40c894:	add    rsp,0x10
  40c898:	pop    rbp
  40c899:	ret    
  40c89a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c8a0 <free_token_cbra@@Base>:
  40c8a0:	push   rbp
  40c8a1:	mov    rbp,rsp
  40c8a4:	sub    rsp,0x10
  40c8a8:	mov    rax,QWORD PTR [rip+0xcc51]        # 419500 <__bss_start@@Base+0x13a4>
  40c8af:	add    rax,0x1
  40c8b3:	mov    QWORD PTR [rip+0xcc46],rax        # 419500 <__bss_start@@Base+0x13a4>
  40c8ba:	mov    QWORD PTR [rbp-0x10],rdi
  40c8be:	mov    rax,QWORD PTR [rip+0xcc43]        # 419508 <__bss_start@@Base+0x13ac>
  40c8c5:	add    rax,0x1
  40c8c9:	mov    QWORD PTR [rip+0xcc38],rax        # 419508 <__bss_start@@Base+0x13ac>
  40c8d0:	mov    rax,QWORD PTR [rbp-0x10]
  40c8d4:	mov    QWORD PTR [rbp-0x8],rax
  40c8d8:	mov    rcx,QWORD PTR [rbp-0x8]
  40c8dc:	mov    rdi,rcx
  40c8df:	call   403040 <free@plt>
  40c8e4:	add    rsp,0x10
  40c8e8:	pop    rbp
  40c8e9:	ret    
  40c8ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c8f0 <free_token_return@@Base>:
  40c8f0:	push   rbp
  40c8f1:	mov    rbp,rsp
  40c8f4:	sub    rsp,0x10
  40c8f8:	mov    rax,QWORD PTR [rip+0xcc11]        # 419510 <__bss_start@@Base+0x13b4>
  40c8ff:	add    rax,0x1
  40c903:	mov    QWORD PTR [rip+0xcc06],rax        # 419510 <__bss_start@@Base+0x13b4>
  40c90a:	mov    QWORD PTR [rbp-0x10],rdi
  40c90e:	mov    rax,QWORD PTR [rip+0xcc03]        # 419518 <__bss_start@@Base+0x13bc>
  40c915:	add    rax,0x1
  40c919:	mov    QWORD PTR [rip+0xcbf8],rax        # 419518 <__bss_start@@Base+0x13bc>
  40c920:	mov    rax,QWORD PTR [rbp-0x10]
  40c924:	mov    QWORD PTR [rbp-0x8],rax
  40c928:	mov    rcx,QWORD PTR [rbp-0x8]
  40c92c:	mov    rdi,rcx
  40c92f:	call   403040 <free@plt>
  40c934:	add    rsp,0x10
  40c938:	pop    rbp
  40c939:	ret    
  40c93a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c940 <free_token_semicolon@@Base>:
  40c940:	push   rbp
  40c941:	mov    rbp,rsp
  40c944:	sub    rsp,0x10
  40c948:	mov    rax,QWORD PTR [rip+0xcbd1]        # 419520 <__bss_start@@Base+0x13c4>
  40c94f:	add    rax,0x1
  40c953:	mov    QWORD PTR [rip+0xcbc6],rax        # 419520 <__bss_start@@Base+0x13c4>
  40c95a:	mov    QWORD PTR [rbp-0x10],rdi
  40c95e:	mov    rax,QWORD PTR [rip+0xcbc3]        # 419528 <__bss_start@@Base+0x13cc>
  40c965:	add    rax,0x1
  40c969:	mov    QWORD PTR [rip+0xcbb8],rax        # 419528 <__bss_start@@Base+0x13cc>
  40c970:	mov    rax,QWORD PTR [rbp-0x10]
  40c974:	mov    QWORD PTR [rbp-0x8],rax
  40c978:	mov    rcx,QWORD PTR [rbp-0x8]
  40c97c:	mov    rdi,rcx
  40c97f:	call   403040 <free@plt>
  40c984:	add    rsp,0x10
  40c988:	pop    rbp
  40c989:	ret    
  40c98a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c990 <free_token_eof@@Base>:
  40c990:	push   rbp
  40c991:	mov    rbp,rsp
  40c994:	sub    rsp,0x10
  40c998:	mov    rax,QWORD PTR [rip+0xcb91]        # 419530 <__bss_start@@Base+0x13d4>
  40c99f:	add    rax,0x1
  40c9a3:	mov    QWORD PTR [rip+0xcb86],rax        # 419530 <__bss_start@@Base+0x13d4>
  40c9aa:	mov    QWORD PTR [rbp-0x10],rdi
  40c9ae:	mov    rax,QWORD PTR [rip+0xcb83]        # 419538 <__bss_start@@Base+0x13dc>
  40c9b5:	add    rax,0x1
  40c9b9:	mov    QWORD PTR [rip+0xcb78],rax        # 419538 <__bss_start@@Base+0x13dc>
  40c9c0:	mov    rax,QWORD PTR [rbp-0x10]
  40c9c4:	mov    QWORD PTR [rbp-0x8],rax
  40c9c8:	mov    rcx,QWORD PTR [rbp-0x8]
  40c9cc:	mov    rdi,rcx
  40c9cf:	call   403040 <free@plt>
  40c9d4:	add    rsp,0x10
  40c9d8:	pop    rbp
  40c9d9:	ret    
  40c9da:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c9e0 <free_token_if@@Base>:
  40c9e0:	push   rbp
  40c9e1:	mov    rbp,rsp
  40c9e4:	sub    rsp,0x10
  40c9e8:	mov    rax,QWORD PTR [rip+0xcb51]        # 419540 <__bss_start@@Base+0x13e4>
  40c9ef:	add    rax,0x1
  40c9f3:	mov    QWORD PTR [rip+0xcb46],rax        # 419540 <__bss_start@@Base+0x13e4>
  40c9fa:	mov    QWORD PTR [rbp-0x10],rdi
  40c9fe:	mov    rax,QWORD PTR [rip+0xcb43]        # 419548 <__bss_start@@Base+0x13ec>
  40ca05:	add    rax,0x1
  40ca09:	mov    QWORD PTR [rip+0xcb38],rax        # 419548 <__bss_start@@Base+0x13ec>
  40ca10:	mov    rax,QWORD PTR [rbp-0x10]
  40ca14:	mov    QWORD PTR [rbp-0x8],rax
  40ca18:	mov    rcx,QWORD PTR [rbp-0x8]
  40ca1c:	mov    rdi,rcx
  40ca1f:	call   403040 <free@plt>
  40ca24:	add    rsp,0x10
  40ca28:	pop    rbp
  40ca29:	ret    
  40ca2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ca30 <free_token_else@@Base>:
  40ca30:	push   rbp
  40ca31:	mov    rbp,rsp
  40ca34:	sub    rsp,0x10
  40ca38:	mov    rax,QWORD PTR [rip+0xcb11]        # 419550 <__bss_start@@Base+0x13f4>
  40ca3f:	add    rax,0x1
  40ca43:	mov    QWORD PTR [rip+0xcb06],rax        # 419550 <__bss_start@@Base+0x13f4>
  40ca4a:	mov    QWORD PTR [rbp-0x10],rdi
  40ca4e:	mov    rax,QWORD PTR [rip+0xcb03]        # 419558 <__bss_start@@Base+0x13fc>
  40ca55:	add    rax,0x1
  40ca59:	mov    QWORD PTR [rip+0xcaf8],rax        # 419558 <__bss_start@@Base+0x13fc>
  40ca60:	mov    rax,QWORD PTR [rbp-0x10]
  40ca64:	mov    QWORD PTR [rbp-0x8],rax
  40ca68:	mov    rcx,QWORD PTR [rbp-0x8]
  40ca6c:	mov    rdi,rcx
  40ca6f:	call   403040 <free@plt>
  40ca74:	add    rsp,0x10
  40ca78:	pop    rbp
  40ca79:	ret    
  40ca7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ca80 <free_token_boolean_op@@Base>:
  40ca80:	push   rbp
  40ca81:	mov    rbp,rsp
  40ca84:	sub    rsp,0x10
  40ca88:	mov    rax,QWORD PTR [rip+0xcad1]        # 419560 <__bss_start@@Base+0x1404>
  40ca8f:	add    rax,0x1
  40ca93:	mov    QWORD PTR [rip+0xcac6],rax        # 419560 <__bss_start@@Base+0x1404>
  40ca9a:	mov    QWORD PTR [rbp-0x10],rdi
  40ca9e:	mov    eax,0x2
  40caa3:	mov    ecx,eax
  40caa5:	mov    eax,0x1
  40caaa:	mov    edx,eax
  40caac:	mov    rsi,QWORD PTR [rbp-0x10]
  40cab0:	mov    QWORD PTR [rbp-0x8],rsi
  40cab4:	mov    rdi,QWORD PTR [rbp-0x8]
  40cab8:	mov    rdi,QWORD PTR [rdi+0x8]
  40cabc:	cmp    rdi,0x0
  40cac0:	setne  r8b
  40cac4:	cmp    rdi,0x0
  40cac8:	cmovne rcx,rdx
  40cacc:	lea    rdx,[rip+0xca8d]        # 419560 <__bss_start@@Base+0x1404>
  40cad3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40cad7:	add    rdi,0x1
  40cadb:	mov    QWORD PTR [rdx+rcx*8],rdi
  40cadf:	test   r8b,0x1
  40cae3:	jne    40caee <free_token_boolean_op@@Base+0x6e>
  40cae9:	jmp    40cb0d <free_token_boolean_op@@Base+0x8d>
  40caee:	mov    rax,QWORD PTR [rip+0xca83]        # 419578 <__bss_start@@Base+0x141c>
  40caf5:	add    rax,0x1
  40caf9:	mov    QWORD PTR [rip+0xca78],rax        # 419578 <__bss_start@@Base+0x141c>
  40cb00:	mov    rax,QWORD PTR [rbp-0x8]
  40cb04:	mov    rdi,QWORD PTR [rax+0x8]
  40cb08:	call   403040 <free@plt>
  40cb0d:	mov    rax,QWORD PTR [rip+0xca6c]        # 419580 <__bss_start@@Base+0x1424>
  40cb14:	add    rax,0x1
  40cb18:	mov    QWORD PTR [rip+0xca61],rax        # 419580 <__bss_start@@Base+0x1424>
  40cb1f:	mov    rax,QWORD PTR [rbp-0x8]
  40cb23:	mov    rdi,rax
  40cb26:	call   403040 <free@plt>
  40cb2b:	add    rsp,0x10
  40cb2f:	pop    rbp
  40cb30:	ret    
  40cb31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb40:	sub    rsp,0x38
  40cb44:	xor    eax,eax
  40cb46:	mov    DWORD PTR [rsp+0x34],eax
  40cb4a:	jmp    40cb4f <free_token_boolean_op@@Base+0xcf>
  40cb4f:	mov    eax,DWORD PTR [rsp+0x34]
  40cb53:	movsxd rcx,eax
  40cb56:	imul   rcx,rcx,0x30
  40cb5a:	lea    rdx,[rip+0xb01f]        # 417b80 <UnitySizeMask@@Base+0x5370>
  40cb61:	add    rdx,rcx
  40cb64:	mov    rdi,QWORD PTR [rdx]
  40cb67:	mov    rsi,QWORD PTR [rdx+0x8]
  40cb6b:	mov    r8d,DWORD PTR [rdx+0x10]
  40cb6f:	mov    QWORD PTR [rsp+0x28],rdx
  40cb74:	mov    edx,r8d
  40cb77:	mov    DWORD PTR [rsp+0x24],eax
  40cb7b:	call   40f730 <next@@Base+0x24a0>
  40cb80:	xor    eax,eax
  40cb82:	mov    rcx,QWORD PTR [rsp+0x28]
  40cb87:	mov    edx,DWORD PTR [rcx+0x18]
  40cb8a:	mov    rsi,QWORD PTR [rcx+0x20]
  40cb8e:	mov    rdi,QWORD PTR [rcx+0x28]
  40cb92:	cmp    eax,edx
  40cb94:	mov    QWORD PTR [rsp+0x18],rdi
  40cb99:	mov    DWORD PTR [rsp+0x14],edx
  40cb9d:	mov    QWORD PTR [rsp+0x8],rsi
  40cba2:	mov    DWORD PTR [rsp+0x4],eax
  40cba6:	jge    40cc17 <free_token_boolean_op@@Base+0x197>
  40cbac:	mov    eax,DWORD PTR [rsp+0x4]
  40cbb0:	movsxd rcx,eax
  40cbb3:	shl    rcx,0x5
  40cbb7:	mov    rdx,QWORD PTR [rsp+0x8]
  40cbbc:	add    rdx,rcx
  40cbbf:	mov    edi,DWORD PTR [rdx]
  40cbc1:	mov    rsi,QWORD PTR [rdx+0x8]
  40cbc5:	mov    r8d,DWORD PTR [rdx+0x10]
  40cbc9:	mov    r9b,BYTE PTR [rdx+0x14]
  40cbcd:	mov    r10d,DWORD PTR [rdx+0x18]
  40cbd1:	mov    edx,r8d
  40cbd4:	movzx  ecx,r9b
  40cbd8:	mov    r8d,r10d
  40cbdb:	mov    DWORD PTR [rsp],eax
  40cbde:	call   40fb80 <next@@Base+0x28f0>
  40cbe3:	mov    eax,DWORD PTR [rsp]
  40cbe6:	movsxd rsi,eax
  40cbe9:	shl    rsi,0x4
  40cbed:	mov    r11,QWORD PTR [rsp+0x18]
  40cbf2:	add    r11,rsi
  40cbf5:	mov    edi,DWORD PTR [r11]
  40cbf8:	mov    rsi,QWORD PTR [r11+0x8]
  40cbfc:	call   40ffb0 <next@@Base+0x2d20>
  40cc01:	mov    eax,DWORD PTR [rsp]
  40cc04:	add    eax,0x1
  40cc07:	mov    ecx,DWORD PTR [rsp+0x14]
  40cc0b:	cmp    eax,ecx
  40cc0d:	mov    DWORD PTR [rsp+0x4],eax
  40cc11:	jl     40cbac <free_token_boolean_op@@Base+0x12c>
  40cc17:	call   4103d0 <next@@Base+0x3140>
  40cc1c:	call   410b70 <next@@Base+0x38e0>
  40cc21:	mov    eax,DWORD PTR [rsp+0x24]
  40cc25:	add    eax,0x1
  40cc28:	cmp    eax,0x1
  40cc2b:	mov    DWORD PTR [rsp+0x34],eax
  40cc2f:	jl     40cb4f <free_token_boolean_op@@Base+0xcf>
  40cc35:	add    rsp,0x38
  40cc39:	ret    
  40cc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc40:	push   rax
  40cc41:	call   40cb40 <free_token_boolean_op@@Base+0xc0>
  40cc46:	mov    QWORD PTR [rip+0xc787],0x0        # 4193d8 <__bss_start@@Base+0x127c>
  40cc51:	mov    QWORD PTR [rip+0xc774],0x0        # 4193d0 <__bss_start@@Base+0x1274>
  40cc5c:	mov    QWORD PTR [rip+0xc781],0x0        # 4193e8 <__bss_start@@Base+0x128c>
  40cc67:	mov    QWORD PTR [rip+0xc76e],0x0        # 4193e0 <__bss_start@@Base+0x1284>
  40cc72:	mov    QWORD PTR [rip+0xc77b],0x0        # 4193f8 <__bss_start@@Base+0x129c>
  40cc7d:	mov    QWORD PTR [rip+0xc768],0x0        # 4193f0 <__bss_start@@Base+0x1294>
  40cc88:	mov    QWORD PTR [rip+0xc775],0x0        # 419408 <__bss_start@@Base+0x12ac>
  40cc93:	mov    QWORD PTR [rip+0xc762],0x0        # 419400 <__bss_start@@Base+0x12a4>
  40cc9e:	mov    QWORD PTR [rip+0xc76f],0x0        # 419418 <__bss_start@@Base+0x12bc>
  40cca9:	mov    QWORD PTR [rip+0xc75c],0x0        # 419410 <__bss_start@@Base+0x12b4>
  40ccb4:	mov    QWORD PTR [rip+0xc769],0x0        # 419428 <__bss_start@@Base+0x12cc>
  40ccbf:	mov    QWORD PTR [rip+0xc756],0x0        # 419420 <__bss_start@@Base+0x12c4>
  40ccca:	mov    QWORD PTR [rip+0xc763],0x0        # 419438 <__bss_start@@Base+0x12dc>
  40ccd5:	mov    QWORD PTR [rip+0xc750],0x0        # 419430 <__bss_start@@Base+0x12d4>
  40cce0:	mov    QWORD PTR [rip+0xc75d],0x0        # 419448 <__bss_start@@Base+0x12ec>
  40cceb:	mov    QWORD PTR [rip+0xc74a],0x0        # 419440 <__bss_start@@Base+0x12e4>
  40ccf6:	mov    QWORD PTR [rip+0xc757],0x0        # 419458 <__bss_start@@Base+0x12fc>
  40cd01:	mov    QWORD PTR [rip+0xc744],0x0        # 419450 <__bss_start@@Base+0x12f4>
  40cd0c:	mov    QWORD PTR [rip+0xc751],0x0        # 419468 <__bss_start@@Base+0x130c>
  40cd17:	mov    QWORD PTR [rip+0xc73e],0x0        # 419460 <__bss_start@@Base+0x1304>
  40cd22:	mov    QWORD PTR [rip+0xc74b],0x0        # 419478 <__bss_start@@Base+0x131c>
  40cd2d:	mov    QWORD PTR [rip+0xc738],0x0        # 419470 <__bss_start@@Base+0x1314>
  40cd38:	mov    QWORD PTR [rip+0xc745],0x0        # 419488 <__bss_start@@Base+0x132c>
  40cd43:	mov    QWORD PTR [rip+0xc732],0x0        # 419480 <__bss_start@@Base+0x1324>
  40cd4e:	mov    QWORD PTR [rip+0xc73f],0x0        # 419498 <__bss_start@@Base+0x133c>
  40cd59:	mov    QWORD PTR [rip+0xc72c],0x0        # 419490 <__bss_start@@Base+0x1334>
  40cd64:	mov    QWORD PTR [rip+0xc739],0x0        # 4194a8 <__bss_start@@Base+0x134c>
  40cd6f:	mov    QWORD PTR [rip+0xc726],0x0        # 4194a0 <__bss_start@@Base+0x1344>
  40cd7a:	mov    QWORD PTR [rip+0xc733],0x0        # 4194b8 <__bss_start@@Base+0x135c>
  40cd85:	mov    QWORD PTR [rip+0xc720],0x0        # 4194b0 <__bss_start@@Base+0x1354>
  40cd90:	mov    QWORD PTR [rip+0xc72d],0x0        # 4194c8 <__bss_start@@Base+0x136c>
  40cd9b:	mov    QWORD PTR [rip+0xc71a],0x0        # 4194c0 <__bss_start@@Base+0x1364>
  40cda6:	mov    QWORD PTR [rip+0xc727],0x0        # 4194d8 <__bss_start@@Base+0x137c>
  40cdb1:	mov    QWORD PTR [rip+0xc714],0x0        # 4194d0 <__bss_start@@Base+0x1374>
  40cdbc:	mov    QWORD PTR [rip+0xc721],0x0        # 4194e8 <__bss_start@@Base+0x138c>
  40cdc7:	mov    QWORD PTR [rip+0xc70e],0x0        # 4194e0 <__bss_start@@Base+0x1384>
  40cdd2:	mov    QWORD PTR [rip+0xc71b],0x0        # 4194f8 <__bss_start@@Base+0x139c>
  40cddd:	mov    QWORD PTR [rip+0xc708],0x0        # 4194f0 <__bss_start@@Base+0x1394>
  40cde8:	mov    QWORD PTR [rip+0xc715],0x0        # 419508 <__bss_start@@Base+0x13ac>
  40cdf3:	mov    QWORD PTR [rip+0xc702],0x0        # 419500 <__bss_start@@Base+0x13a4>
  40cdfe:	mov    QWORD PTR [rip+0xc70f],0x0        # 419518 <__bss_start@@Base+0x13bc>
  40ce09:	mov    QWORD PTR [rip+0xc6fc],0x0        # 419510 <__bss_start@@Base+0x13b4>
  40ce14:	mov    QWORD PTR [rip+0xc709],0x0        # 419528 <__bss_start@@Base+0x13cc>
  40ce1f:	mov    QWORD PTR [rip+0xc6f6],0x0        # 419520 <__bss_start@@Base+0x13c4>
  40ce2a:	mov    QWORD PTR [rip+0xc703],0x0        # 419538 <__bss_start@@Base+0x13dc>
  40ce35:	mov    QWORD PTR [rip+0xc6f0],0x0        # 419530 <__bss_start@@Base+0x13d4>
  40ce40:	mov    QWORD PTR [rip+0xc6fd],0x0        # 419548 <__bss_start@@Base+0x13ec>
  40ce4b:	mov    QWORD PTR [rip+0xc6ea],0x0        # 419540 <__bss_start@@Base+0x13e4>
  40ce56:	mov    QWORD PTR [rip+0xc6f7],0x0        # 419558 <__bss_start@@Base+0x13fc>
  40ce61:	mov    QWORD PTR [rip+0xc6e4],0x0        # 419550 <__bss_start@@Base+0x13f4>
  40ce6c:	mov    QWORD PTR [rip+0xc709],0x0        # 419580 <__bss_start@@Base+0x1424>
  40ce77:	mov    QWORD PTR [rip+0xc6f6],0x0        # 419578 <__bss_start@@Base+0x141c>
  40ce82:	mov    QWORD PTR [rip+0xc6e3],0x0        # 419570 <__bss_start@@Base+0x1414>
  40ce8d:	mov    QWORD PTR [rip+0xc6d0],0x0        # 419568 <__bss_start@@Base+0x140c>
  40ce98:	mov    QWORD PTR [rip+0xc6bd],0x0        # 419560 <__bss_start@@Base+0x1404>
  40cea3:	pop    rax
  40cea4:	ret    
  40cea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ceaf:	nop
  40ceb0:	push   rax
  40ceb1:	lea    rdi,[rip+0xfffffffffffffc88]        # 40cb40 <free_token_boolean_op@@Base+0xc0>
  40ceb8:	lea    rsi,[rip+0xfffffffffffffd81]        # 40cc40 <free_token_boolean_op@@Base+0x1c0>
  40cebf:	call   410f30 <__gcov_flush@@Base+0xa0>
  40cec4:	pop    rax
  40cec5:	ret    
  40cec6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ced0 <init_lexer@@Base>:
  40ced0:	push   rbp
  40ced1:	mov    rbp,rsp
  40ced4:	mov    rax,QWORD PTR [rip+0xc6b5]        # 419590 <__bss_start@@Base+0x1434>
  40cedb:	add    rax,0x1
  40cedf:	mov    QWORD PTR [rip+0xc6aa],rax        # 419590 <__bss_start@@Base+0x1434>
  40cee6:	mov    QWORD PTR [rbp-0x18],rdi
  40ceea:	mov    QWORD PTR [rbp-0x20],rsi
  40ceee:	mov    rax,QWORD PTR [rip+0xc6a3]        # 419598 <__bss_start@@Base+0x143c>
  40cef5:	add    rax,0x1
  40cef9:	mov    QWORD PTR [rip+0xc698],rax        # 419598 <__bss_start@@Base+0x143c>
  40cf00:	mov    rax,QWORD PTR [rbp-0x18]
  40cf04:	mov    QWORD PTR [rbp-0x8],rax
  40cf08:	mov    rcx,QWORD PTR [rbp-0x20]
  40cf0c:	mov    QWORD PTR [rbp-0x10],rcx
  40cf10:	mov    rdx,QWORD PTR [rbp-0x10]
  40cf14:	mov    rsi,QWORD PTR [rbp-0x8]
  40cf18:	mov    QWORD PTR [rsi],rdx
  40cf1b:	mov    rdx,QWORD PTR [rbp-0x8]
  40cf1f:	mov    QWORD PTR [rdx+0x8],0x0
  40cf27:	mov    rdx,QWORD PTR [rbp-0x8]
  40cf2b:	mov    QWORD PTR [rdx+0x10],0x0
  40cf33:	pop    rbp
  40cf34:	ret    
  40cf35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf3f:	nop

000000000040cf40 <destroy_lexer@@Base>:
  40cf40:	push   rbp
  40cf41:	mov    rbp,rsp
  40cf44:	sub    rsp,0x20
  40cf48:	mov    rax,QWORD PTR [rip+0xc651]        # 4195a0 <__bss_start@@Base+0x1444>
  40cf4f:	add    rax,0x1
  40cf53:	mov    QWORD PTR [rip+0xc646],rax        # 4195a0 <__bss_start@@Base+0x1444>
  40cf5a:	mov    QWORD PTR [rbp-0x20],rdi
  40cf5e:	mov    eax,0x2
  40cf63:	mov    ecx,eax
  40cf65:	mov    eax,0x1
  40cf6a:	mov    edx,eax
  40cf6c:	mov    rsi,QWORD PTR [rbp-0x20]
  40cf70:	mov    QWORD PTR [rbp-0x8],rsi
  40cf74:	mov    QWORD PTR [rbp-0x10],0x0
  40cf7c:	mov    rdi,QWORD PTR [rbp-0x8]
  40cf80:	mov    rdi,QWORD PTR [rdi+0x8]
  40cf84:	mov    QWORD PTR [rbp-0x18],rdi
  40cf88:	mov    rdi,QWORD PTR [rbp-0x18]
  40cf8c:	cmp    rdi,0x0
  40cf90:	setne  r8b
  40cf94:	cmp    rdi,0x0
  40cf98:	cmovne rcx,rdx
  40cf9c:	lea    rdx,[rip+0xc5fd]        # 4195a0 <__bss_start@@Base+0x1444>
  40cfa3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40cfa7:	add    rdi,0x1
  40cfab:	mov    QWORD PTR [rdx+rcx*8],rdi
  40cfaf:	test   r8b,0x1
  40cfb3:	jne    40cfbe <destroy_lexer@@Base+0x7e>
  40cfb9:	jmp    40cfec <destroy_lexer@@Base+0xac>
  40cfbe:	mov    rax,QWORD PTR [rip+0xc5f3]        # 4195b8 <__bss_start@@Base+0x145c>
  40cfc5:	add    rax,0x1
  40cfc9:	mov    QWORD PTR [rip+0xc5e8],rax        # 4195b8 <__bss_start@@Base+0x145c>
  40cfd0:	mov    rax,QWORD PTR [rbp-0x18]
  40cfd4:	mov    QWORD PTR [rbp-0x10],rax
  40cfd8:	mov    rax,QWORD PTR [rbp-0x18]
  40cfdc:	mov    rax,QWORD PTR [rax]
  40cfdf:	mov    QWORD PTR [rbp-0x18],rax
  40cfe3:	mov    rdi,QWORD PTR [rbp-0x10]
  40cfe7:	call   40d010 <free_stack_base@@Base>
  40cfec:	mov    rax,QWORD PTR [rip+0xc5cd]        # 4195c0 <__bss_start@@Base+0x1464>
  40cff3:	add    rax,0x1
  40cff7:	mov    QWORD PTR [rip+0xc5c2],rax        # 4195c0 <__bss_start@@Base+0x1464>
  40cffe:	add    rsp,0x20
  40d002:	pop    rbp
  40d003:	ret    
  40d004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d00e:	xchg   ax,ax

000000000040d010 <free_stack_base@@Base>:
  40d010:	push   rbp
  40d011:	mov    rbp,rsp
  40d014:	sub    rsp,0x10
  40d018:	mov    rax,QWORD PTR [rip+0xc5a9]        # 4195c8 <__bss_start@@Base+0x146c>
  40d01f:	add    rax,0x1
  40d023:	mov    QWORD PTR [rip+0xc59e],rax        # 4195c8 <__bss_start@@Base+0x146c>
  40d02a:	mov    QWORD PTR [rbp-0x10],rdi
  40d02e:	mov    rax,QWORD PTR [rip+0xc59b]        # 4195d0 <__bss_start@@Base+0x1474>
  40d035:	add    rax,0x1
  40d039:	mov    QWORD PTR [rip+0xc590],rax        # 4195d0 <__bss_start@@Base+0x1474>
  40d040:	mov    rax,QWORD PTR [rbp-0x10]
  40d044:	mov    QWORD PTR [rbp-0x8],rax
  40d048:	mov    rcx,QWORD PTR [rbp-0x8]
  40d04c:	mov    rdi,rcx
  40d04f:	call   403040 <free@plt>
  40d054:	add    rsp,0x10
  40d058:	pop    rbp
  40d059:	ret    
  40d05a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040d060 <push_back@@Base>:
  40d060:	push   rbp
  40d061:	mov    rbp,rsp
  40d064:	sub    rsp,0x30
  40d068:	mov    rax,QWORD PTR [rip+0xc569]        # 4195d8 <__bss_start@@Base+0x147c>
  40d06f:	add    rax,0x1
  40d073:	mov    QWORD PTR [rip+0xc55e],rax        # 4195d8 <__bss_start@@Base+0x147c>
  40d07a:	mov    QWORD PTR [rbp-0x20],rdi
  40d07e:	mov    QWORD PTR [rbp-0x28],rsi
  40d082:	mov    eax,0x10
  40d087:	mov    edi,eax
  40d089:	mov    rcx,QWORD PTR [rip+0xc550]        # 4195e0 <__bss_start@@Base+0x1484>
  40d090:	add    rcx,0x1
  40d094:	mov    QWORD PTR [rip+0xc545],rcx        # 4195e0 <__bss_start@@Base+0x1484>
  40d09b:	mov    rcx,QWORD PTR [rbp-0x20]
  40d09f:	mov    QWORD PTR [rbp-0x8],rcx
  40d0a3:	mov    rdx,QWORD PTR [rbp-0x28]
  40d0a7:	mov    QWORD PTR [rbp-0x10],rdx
  40d0ab:	call   403190 <malloc@plt>
  40d0b0:	mov    QWORD PTR [rbp-0x18],rax
  40d0b4:	mov    rax,QWORD PTR [rbp-0x10]
  40d0b8:	mov    rcx,QWORD PTR [rbp-0x18]
  40d0bc:	mov    QWORD PTR [rcx+0x8],rax
  40d0c0:	mov    rax,QWORD PTR [rbp-0x8]
  40d0c4:	mov    rax,QWORD PTR [rax+0x8]
  40d0c8:	mov    rcx,QWORD PTR [rbp-0x18]
  40d0cc:	mov    QWORD PTR [rcx],rax
  40d0cf:	mov    rax,QWORD PTR [rbp-0x18]
  40d0d3:	mov    rcx,QWORD PTR [rbp-0x8]
  40d0d7:	mov    QWORD PTR [rcx+0x8],rax
  40d0db:	add    rsp,0x30
  40d0df:	pop    rbp
  40d0e0:	ret    
  40d0e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040d0f0 <get_char@@Base>:
  40d0f0:	push   rbp
  40d0f1:	mov    rbp,rsp
  40d0f4:	mov    rax,QWORD PTR [rip+0xc4ed]        # 4195e8 <__bss_start@@Base+0x148c>
  40d0fb:	add    rax,0x1
  40d0ff:	mov    QWORD PTR [rip+0xc4e2],rax        # 4195e8 <__bss_start@@Base+0x148c>
  40d106:	mov    QWORD PTR [rbp-0x10],rdi
  40d10a:	mov    rax,QWORD PTR [rip+0xc4df]        # 4195f0 <__bss_start@@Base+0x1494>
  40d111:	add    rax,0x1
  40d115:	mov    QWORD PTR [rip+0xc4d4],rax        # 4195f0 <__bss_start@@Base+0x1494>
  40d11c:	mov    rax,QWORD PTR [rbp-0x10]
  40d120:	mov    QWORD PTR [rbp-0x8],rax
  40d124:	mov    rcx,QWORD PTR [rbp-0x8]
  40d128:	mov    rcx,QWORD PTR [rcx]
  40d12b:	mov    rdx,QWORD PTR [rbp-0x8]
  40d12f:	mov    rsi,QWORD PTR [rdx+0x10]
  40d133:	mov    rdi,rsi
  40d136:	add    rdi,0x1
  40d13a:	mov    QWORD PTR [rdx+0x10],rdi
  40d13e:	movsx  eax,BYTE PTR [rcx+rsi*1]
  40d142:	pop    rbp
  40d143:	ret    
  40d144:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d14e:	xchg   ax,ax

000000000040d150 <push_back_chars@@Base>:
  40d150:	push   rbp
  40d151:	mov    rbp,rsp
  40d154:	sub    rsp,0x30
  40d158:	mov    rax,QWORD PTR [rip+0xc4a1]        # 419600 <__bss_start@@Base+0x14a4>
  40d15f:	add    rax,0x1
  40d163:	mov    QWORD PTR [rip+0xc496],rax        # 419600 <__bss_start@@Base+0x14a4>
  40d16a:	mov    QWORD PTR [rbp-0x18],rdi
  40d16e:	mov    QWORD PTR [rbp-0x20],rsi
  40d172:	mov    eax,0x2
  40d177:	mov    ecx,eax
  40d179:	mov    eax,0x1
  40d17e:	mov    edx,eax
  40d180:	mov    rsi,QWORD PTR [rbp-0x18]
  40d184:	mov    QWORD PTR [rbp-0x8],rsi
  40d188:	mov    rdi,QWORD PTR [rbp-0x20]
  40d18c:	mov    QWORD PTR [rbp-0x10],rdi
  40d190:	mov    r8,QWORD PTR [rbp-0x8]
  40d194:	mov    r8,QWORD PTR [r8+0x10]
  40d198:	mov    r9,QWORD PTR [rbp-0x10]
  40d19c:	cmp    r8,r9
  40d19f:	setae  r10b
  40d1a3:	cmp    r8,r9
  40d1a6:	cmovae rcx,rdx
  40d1aa:	lea    rdx,[rip+0xc44f]        # 419600 <__bss_start@@Base+0x14a4>
  40d1b1:	mov    r8,QWORD PTR [rdx+rcx*8]
  40d1b5:	add    r8,0x1
  40d1b9:	mov    QWORD PTR [rdx+rcx*8],r8
  40d1bd:	test   r10b,0x1
  40d1c1:	jne    40d1cc <push_back_chars@@Base+0x7c>
  40d1c7:	jmp    40d1f6 <push_back_chars@@Base+0xa6>
  40d1cc:	mov    rax,QWORD PTR [rip+0xc445]        # 419618 <__bss_start@@Base+0x14bc>
  40d1d3:	add    rax,0x1
  40d1d7:	mov    QWORD PTR [rip+0xc43a],rax        # 419618 <__bss_start@@Base+0x14bc>
  40d1de:	mov    rax,QWORD PTR [rbp-0x10]
  40d1e2:	mov    rcx,QWORD PTR [rbp-0x8]
  40d1e6:	mov    rdx,QWORD PTR [rcx+0x10]
  40d1ea:	sub    rdx,rax
  40d1ed:	mov    QWORD PTR [rcx+0x10],rdx
  40d1f1:	jmp    40d21b <push_back_chars@@Base+0xcb>
  40d1f6:	mov    rax,QWORD PTR [rip+0xadf3]        # 417ff0 <stderr@GLIBC_2.2.5>
  40d1fd:	mov    rdi,QWORD PTR [rax]
  40d200:	lea    rsi,[rip+0x5d21]        # 412f28 <UnitySizeMask@@Base+0x718>
  40d207:	mov    al,0x0
  40d209:	call   403140 <fprintf@plt>
  40d20e:	mov    edi,0x1
  40d213:	mov    DWORD PTR [rbp-0x24],eax
  40d216:	call   403230 <exit@plt>
  40d21b:	mov    rax,QWORD PTR [rip+0xc3fe]        # 419620 <__bss_start@@Base+0x14c4>
  40d222:	add    rax,0x1
  40d226:	mov    QWORD PTR [rip+0xc3f3],rax        # 419620 <__bss_start@@Base+0x14c4>
  40d22d:	add    rsp,0x30
  40d231:	pop    rbp
  40d232:	ret    
  40d233:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d23d:	nop    DWORD PTR [rax]

000000000040d240 <push_back_one_char@@Base>:
  40d240:	push   rbp
  40d241:	mov    rbp,rsp
  40d244:	sub    rsp,0x10
  40d248:	mov    rax,QWORD PTR [rip+0xc3d9]        # 419628 <__bss_start@@Base+0x14cc>
  40d24f:	add    rax,0x1
  40d253:	mov    QWORD PTR [rip+0xc3ce],rax        # 419628 <__bss_start@@Base+0x14cc>
  40d25a:	mov    QWORD PTR [rbp-0x10],rdi
  40d25e:	mov    eax,0x1
  40d263:	mov    esi,eax
  40d265:	mov    rcx,QWORD PTR [rip+0xc3c4]        # 419630 <__bss_start@@Base+0x14d4>
  40d26c:	add    rcx,0x1
  40d270:	mov    QWORD PTR [rip+0xc3b9],rcx        # 419630 <__bss_start@@Base+0x14d4>
  40d277:	mov    rcx,QWORD PTR [rbp-0x10]
  40d27b:	mov    QWORD PTR [rbp-0x8],rcx
  40d27f:	mov    rdi,QWORD PTR [rbp-0x8]
  40d283:	call   40d150 <push_back_chars@@Base>
  40d288:	add    rsp,0x10
  40d28c:	pop    rbp
  40d28d:	ret    
  40d28e:	xchg   ax,ax

000000000040d290 <next@@Base>:
  40d290:	push   rbp
  40d291:	mov    rbp,rsp
  40d294:	sub    rsp,0x290
  40d29b:	mov    rax,QWORD PTR [rip+0xc39e]        # 419640 <__bss_start@@Base+0x14e4>
  40d2a2:	add    rax,0x1
  40d2a6:	mov    QWORD PTR [rip+0xc393],rax        # 419640 <__bss_start@@Base+0x14e4>
  40d2ad:	mov    QWORD PTR [rbp-0x250],rdi
  40d2b4:	mov    eax,0x2
  40d2b9:	mov    ecx,eax
  40d2bb:	mov    eax,0x1
  40d2c0:	mov    edx,eax
  40d2c2:	mov    rsi,QWORD PTR [rbp-0x250]
  40d2c9:	mov    QWORD PTR [rbp-0x10],rsi
  40d2cd:	mov    QWORD PTR [rbp-0x218],0x0
  40d2d8:	mov    DWORD PTR [rbp-0x21c],0x0
  40d2e2:	mov    QWORD PTR [rbp-0x228],0x0
  40d2ed:	mov    QWORD PTR [rbp-0x238],0x0
  40d2f8:	mov    QWORD PTR [rbp-0x240],0x0
  40d303:	mov    rdi,QWORD PTR [rbp-0x10]
  40d307:	mov    rdi,QWORD PTR [rdi+0x8]
  40d30b:	cmp    rdi,0x0
  40d30f:	setne  r8b
  40d313:	cmp    rdi,0x0
  40d317:	cmovne rcx,rdx
  40d31b:	lea    rdx,[rip+0xc31e]        # 419640 <__bss_start@@Base+0x14e4>
  40d322:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d326:	add    rdi,0x1
  40d32a:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d32e:	test   r8b,0x1
  40d332:	jne    40d33d <next@@Base+0xad>
  40d338:	jmp    40d3ae <next@@Base+0x11e>
  40d33d:	mov    rax,QWORD PTR [rip+0xc314]        # 419658 <__bss_start@@Base+0x14fc>
  40d344:	add    rax,0x1
  40d348:	mov    QWORD PTR [rip+0xc309],rax        # 419658 <__bss_start@@Base+0x14fc>
  40d34f:	mov    rax,QWORD PTR [rbp-0x10]
  40d353:	mov    rax,QWORD PTR [rax+0x8]
  40d357:	mov    QWORD PTR [rbp-0x248],rax
  40d35e:	mov    rax,QWORD PTR [rbp-0x10]
  40d362:	mov    rax,QWORD PTR [rax+0x8]
  40d366:	mov    rax,QWORD PTR [rax]
  40d369:	mov    rcx,QWORD PTR [rbp-0x10]
  40d36d:	mov    QWORD PTR [rcx+0x8],rax
  40d371:	mov    rax,QWORD PTR [rbp-0x248]
  40d378:	mov    rax,QWORD PTR [rax+0x8]
  40d37c:	mov    QWORD PTR [rbp-0x238],rax
  40d383:	mov    rax,QWORD PTR [rbp-0x248]
  40d38a:	mov    QWORD PTR [rax+0x8],0x0
  40d392:	mov    rdi,QWORD PTR [rbp-0x248]
  40d399:	call   40d010 <free_stack_base@@Base>
  40d39e:	mov    rax,QWORD PTR [rbp-0x238]
  40d3a5:	mov    QWORD PTR [rbp-0x8],rax
  40d3a9:	jmp    40ee96 <next@@Base+0x1c06>
  40d3ae:	mov    rax,QWORD PTR [rip+0xc2ab]        # 419660 <__bss_start@@Base+0x1504>
  40d3b5:	add    rax,0x1
  40d3b9:	mov    QWORD PTR [rip+0xc2a0],rax        # 419660 <__bss_start@@Base+0x1504>
  40d3c0:	mov    rdi,QWORD PTR [rbp-0x10]
  40d3c4:	call   40d0f0 <get_char@@Base>
  40d3c9:	mov    BYTE PTR [rbp-0x229],al
  40d3cf:	mov    eax,0x6
  40d3d4:	mov    ecx,eax
  40d3d6:	mov    eax,0x5
  40d3db:	mov    edx,eax
  40d3dd:	movsx  eax,BYTE PTR [rbp-0x229]
  40d3e4:	cmp    eax,0x0
  40d3e7:	setne  sil
  40d3eb:	cmp    eax,0x0
  40d3ee:	cmovne rcx,rdx
  40d3f2:	lea    rdx,[rip+0xc247]        # 419640 <__bss_start@@Base+0x14e4>
  40d3f9:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d3fd:	add    rdi,0x1
  40d401:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d405:	test   sil,0x1
  40d409:	jne    40d414 <next@@Base+0x184>
  40d40f:	jmp    40ee57 <next@@Base+0x1bc7>
  40d414:	mov    DWORD PTR [rip+0xad32],0x0        # 418150 <__data_start@@Base+0x18>
  40d41e:	mov    rax,QWORD PTR [rbp-0x228]
  40d425:	mov    rcx,rax
  40d428:	sub    rcx,0x5
  40d42c:	mov    QWORD PTR [rbp-0x258],rax
  40d433:	mov    QWORD PTR [rbp-0x260],rcx
  40d43a:	ja     40ee2d <next@@Base+0x1b9d>
  40d440:	lea    rax,[rip+0x5ac9]        # 412f10 <UnitySizeMask@@Base+0x700>
  40d447:	mov    rcx,QWORD PTR [rbp-0x258]
  40d44e:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40d452:	add    rdx,rax
  40d455:	jmp    rdx
  40d457:	lea    rax,[rip+0xa752]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40d45e:	add    rax,0x10
  40d462:	lea    rdi,[rip+0xace7]        # 418150 <__data_start@@Base+0x18>
  40d469:	mov    rsi,rax
  40d46c:	call   40eec0 <next@@Base+0x1c30>
  40d471:	mov    ecx,0xf
  40d476:	mov    eax,ecx
  40d478:	mov    ecx,0xe
  40d47d:	mov    esi,ecx
  40d47f:	movsx  ecx,BYTE PTR [rbp-0x229]
  40d486:	cmp    ecx,0x9
  40d489:	sete   dl
  40d48c:	cmp    ecx,0x9
  40d48f:	cmove  rax,rsi
  40d493:	lea    rsi,[rip+0xc1a6]        # 419640 <__bss_start@@Base+0x14e4>
  40d49a:	mov    rdi,QWORD PTR [rsi+rax*8]
  40d49e:	add    rdi,0x1
  40d4a2:	mov    QWORD PTR [rsi+rax*8],rdi
  40d4a6:	test   dl,0x1
  40d4a9:	jne    40d534 <next@@Base+0x2a4>
  40d4af:	mov    eax,0x11
  40d4b4:	mov    ecx,eax
  40d4b6:	mov    eax,0x10
  40d4bb:	mov    edx,eax
  40d4bd:	movsx  eax,BYTE PTR [rbp-0x229]
  40d4c4:	cmp    eax,0x20
  40d4c7:	sete   sil
  40d4cb:	cmp    eax,0x20
  40d4ce:	cmove  rcx,rdx
  40d4d2:	lea    rdx,[rip+0xc167]        # 419640 <__bss_start@@Base+0x14e4>
  40d4d9:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d4dd:	add    rdi,0x1
  40d4e1:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d4e5:	test   sil,0x1
  40d4e9:	jne    40d534 <next@@Base+0x2a4>
  40d4ef:	mov    eax,0x13
  40d4f4:	mov    ecx,eax
  40d4f6:	mov    eax,0x12
  40d4fb:	mov    edx,eax
  40d4fd:	movsx  eax,BYTE PTR [rbp-0x229]
  40d504:	cmp    eax,0xa
  40d507:	sete   sil
  40d50b:	cmp    eax,0xa
  40d50e:	cmove  rcx,rdx
  40d512:	lea    rdx,[rip+0xc127]        # 419640 <__bss_start@@Base+0x14e4>
  40d519:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d51d:	add    rdi,0x1
  40d521:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d525:	test   sil,0x1
  40d529:	jne    40d534 <next@@Base+0x2a4>
  40d52f:	jmp    40d55a <next@@Base+0x2ca>
  40d534:	mov    rax,QWORD PTR [rip+0xc1a5]        # 4196e0 <__bss_start@@Base+0x1584>
  40d53b:	add    rax,0x1
  40d53f:	mov    QWORD PTR [rip+0xc19a],rax        # 4196e0 <__bss_start@@Base+0x1584>
  40d546:	mov    rdi,QWORD PTR [rbp-0x10]
  40d54a:	call   40d0f0 <get_char@@Base>
  40d54f:	mov    BYTE PTR [rbp-0x229],al
  40d555:	jmp    40e425 <next@@Base+0x1195>
  40d55a:	mov    eax,0x16
  40d55f:	mov    ecx,eax
  40d561:	mov    eax,0x15
  40d566:	mov    edx,eax
  40d568:	movsx  eax,BYTE PTR [rbp-0x229]
  40d56f:	cmp    eax,0x30
  40d572:	sete   sil
  40d576:	cmp    eax,0x30
  40d579:	cmove  rcx,rdx
  40d57d:	lea    rdx,[rip+0xc0bc]        # 419640 <__bss_start@@Base+0x14e4>
  40d584:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d588:	add    rdi,0x1
  40d58c:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d590:	test   sil,0x1
  40d594:	jne    40d59f <next@@Base+0x30f>
  40d59a:	jmp    40d5e5 <next@@Base+0x355>
  40d59f:	mov    eax,0x8
  40d5a4:	mov    edi,eax
  40d5a6:	mov    rcx,QWORD PTR [rip+0xc14b]        # 4196f8 <__bss_start@@Base+0x159c>
  40d5ad:	add    rcx,0x1
  40d5b1:	mov    QWORD PTR [rip+0xc140],rcx        # 4196f8 <__bss_start@@Base+0x159c>
  40d5b8:	call   403190 <malloc@plt>
  40d5bd:	xor    esi,esi
  40d5bf:	mov    QWORD PTR [rbp-0x238],rax
  40d5c6:	mov    rax,QWORD PTR [rbp-0x238]
  40d5cd:	mov    rdi,rax
  40d5d0:	call   40c360 <init_token_int_value@@Base>
  40d5d5:	mov    rax,QWORD PTR [rbp-0x238]
  40d5dc:	mov    QWORD PTR [rbp-0x8],rax
  40d5e0:	jmp    40ee96 <next@@Base+0x1c06>
  40d5e5:	mov    eax,0x19
  40d5ea:	mov    ecx,eax
  40d5ec:	mov    eax,0x18
  40d5f1:	mov    edx,eax
  40d5f3:	movsx  eax,BYTE PTR [rbp-0x229]
  40d5fa:	cmp    eax,0x31
  40d5fd:	setge  sil
  40d601:	cmp    eax,0x31
  40d604:	cmovge rcx,rdx
  40d608:	lea    rdx,[rip+0xc031]        # 419640 <__bss_start@@Base+0x14e4>
  40d60f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d613:	add    rdi,0x1
  40d617:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d61b:	test   sil,0x1
  40d61f:	jne    40d62a <next@@Base+0x39a>
  40d625:	jmp    40d6c1 <next@@Base+0x431>
  40d62a:	mov    eax,0x1b
  40d62f:	mov    ecx,eax
  40d631:	mov    eax,0x1a
  40d636:	mov    edx,eax
  40d638:	movsx  eax,BYTE PTR [rbp-0x229]
  40d63f:	cmp    eax,0x39
  40d642:	setle  sil
  40d646:	cmp    eax,0x39
  40d649:	cmovle rcx,rdx
  40d64d:	lea    rdx,[rip+0xbfec]        # 419640 <__bss_start@@Base+0x14e4>
  40d654:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d658:	add    rdi,0x1
  40d65c:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d660:	test   sil,0x1
  40d664:	jne    40d66f <next@@Base+0x3df>
  40d66a:	jmp    40d6c1 <next@@Base+0x431>
  40d66f:	mov    rax,QWORD PTR [rip+0xc0aa]        # 419720 <__bss_start@@Base+0x15c4>
  40d676:	add    rax,0x1
  40d67a:	mov    QWORD PTR [rip+0xc09f],rax        # 419720 <__bss_start@@Base+0x15c4>
  40d681:	mov    cl,BYTE PTR [rbp-0x229]
  40d687:	mov    edx,DWORD PTR [rbp-0x21c]
  40d68d:	mov    esi,edx
  40d68f:	add    esi,0x1
  40d692:	mov    DWORD PTR [rbp-0x21c],esi
  40d698:	movsxd rax,edx
  40d69b:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40d6a2:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6a6:	call   40d0f0 <get_char@@Base>
  40d6ab:	mov    BYTE PTR [rbp-0x229],al
  40d6b1:	mov    QWORD PTR [rbp-0x228],0x1
  40d6bc:	jmp    40e401 <next@@Base+0x1171>
  40d6c1:	mov    eax,0x1e
  40d6c6:	mov    ecx,eax
  40d6c8:	mov    eax,0x1d
  40d6cd:	mov    edx,eax
  40d6cf:	movsx  eax,BYTE PTR [rbp-0x229]
  40d6d6:	cmp    eax,0x28
  40d6d9:	sete   sil
  40d6dd:	cmp    eax,0x28
  40d6e0:	cmove  rcx,rdx
  40d6e4:	lea    rdx,[rip+0xbf55]        # 419640 <__bss_start@@Base+0x14e4>
  40d6eb:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d6ef:	add    rdi,0x1
  40d6f3:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d6f7:	test   sil,0x1
  40d6fb:	jne    40d706 <next@@Base+0x476>
  40d701:	jmp    40d74a <next@@Base+0x4ba>
  40d706:	mov    eax,0x4
  40d70b:	mov    edi,eax
  40d70d:	mov    rcx,QWORD PTR [rip+0xc024]        # 419738 <__bss_start@@Base+0x15dc>
  40d714:	add    rcx,0x1
  40d718:	mov    QWORD PTR [rip+0xc019],rcx        # 419738 <__bss_start@@Base+0x15dc>
  40d71f:	call   403190 <malloc@plt>
  40d724:	mov    QWORD PTR [rbp-0x238],rax
  40d72b:	mov    rax,QWORD PTR [rbp-0x238]
  40d732:	mov    rdi,rax
  40d735:	call   40c420 <init_token_opar@@Base>
  40d73a:	mov    rax,QWORD PTR [rbp-0x238]
  40d741:	mov    QWORD PTR [rbp-0x8],rax
  40d745:	jmp    40ee96 <next@@Base+0x1c06>
  40d74a:	mov    eax,0x21
  40d74f:	mov    ecx,eax
  40d751:	mov    eax,0x20
  40d756:	mov    edx,eax
  40d758:	movsx  eax,BYTE PTR [rbp-0x229]
  40d75f:	cmp    eax,0x29
  40d762:	sete   sil
  40d766:	cmp    eax,0x29
  40d769:	cmove  rcx,rdx
  40d76d:	lea    rdx,[rip+0xbecc]        # 419640 <__bss_start@@Base+0x14e4>
  40d774:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d778:	add    rdi,0x1
  40d77c:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d780:	test   sil,0x1
  40d784:	jne    40d78f <next@@Base+0x4ff>
  40d78a:	jmp    40d7d3 <next@@Base+0x543>
  40d78f:	mov    eax,0x4
  40d794:	mov    edi,eax
  40d796:	mov    rcx,QWORD PTR [rip+0xbfb3]        # 419750 <__bss_start@@Base+0x15f4>
  40d79d:	add    rcx,0x1
  40d7a1:	mov    QWORD PTR [rip+0xbfa8],rcx        # 419750 <__bss_start@@Base+0x15f4>
  40d7a8:	call   403190 <malloc@plt>
  40d7ad:	mov    QWORD PTR [rbp-0x238],rax
  40d7b4:	mov    rax,QWORD PTR [rbp-0x238]
  40d7bb:	mov    rdi,rax
  40d7be:	call   40c460 <init_token_cpar@@Base>
  40d7c3:	mov    rax,QWORD PTR [rbp-0x238]
  40d7ca:	mov    QWORD PTR [rbp-0x8],rax
  40d7ce:	jmp    40ee96 <next@@Base+0x1c06>
  40d7d3:	mov    eax,0x24
  40d7d8:	mov    ecx,eax
  40d7da:	mov    eax,0x23
  40d7df:	mov    edx,eax
  40d7e1:	movsx  eax,BYTE PTR [rbp-0x229]
  40d7e8:	cmp    eax,0x7b
  40d7eb:	sete   sil
  40d7ef:	cmp    eax,0x7b
  40d7f2:	cmove  rcx,rdx
  40d7f6:	lea    rdx,[rip+0xbe43]        # 419640 <__bss_start@@Base+0x14e4>
  40d7fd:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d801:	add    rdi,0x1
  40d805:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d809:	test   sil,0x1
  40d80d:	jne    40d818 <next@@Base+0x588>
  40d813:	jmp    40d85c <next@@Base+0x5cc>
  40d818:	mov    eax,0x4
  40d81d:	mov    edi,eax
  40d81f:	mov    rcx,QWORD PTR [rip+0xbf42]        # 419768 <__bss_start@@Base+0x160c>
  40d826:	add    rcx,0x1
  40d82a:	mov    QWORD PTR [rip+0xbf37],rcx        # 419768 <__bss_start@@Base+0x160c>
  40d831:	call   403190 <malloc@plt>
  40d836:	mov    QWORD PTR [rbp-0x238],rax
  40d83d:	mov    rax,QWORD PTR [rbp-0x238]
  40d844:	mov    rdi,rax
  40d847:	call   40c4a0 <init_token_obra@@Base>
  40d84c:	mov    rax,QWORD PTR [rbp-0x238]
  40d853:	mov    QWORD PTR [rbp-0x8],rax
  40d857:	jmp    40ee96 <next@@Base+0x1c06>
  40d85c:	mov    eax,0x27
  40d861:	mov    ecx,eax
  40d863:	mov    eax,0x26
  40d868:	mov    edx,eax
  40d86a:	movsx  eax,BYTE PTR [rbp-0x229]
  40d871:	cmp    eax,0x7d
  40d874:	sete   sil
  40d878:	cmp    eax,0x7d
  40d87b:	cmove  rcx,rdx
  40d87f:	lea    rdx,[rip+0xbdba]        # 419640 <__bss_start@@Base+0x14e4>
  40d886:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d88a:	add    rdi,0x1
  40d88e:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d892:	test   sil,0x1
  40d896:	jne    40d8a1 <next@@Base+0x611>
  40d89c:	jmp    40d8e5 <next@@Base+0x655>
  40d8a1:	mov    eax,0x4
  40d8a6:	mov    edi,eax
  40d8a8:	mov    rcx,QWORD PTR [rip+0xbed1]        # 419780 <__bss_start@@Base+0x1624>
  40d8af:	add    rcx,0x1
  40d8b3:	mov    QWORD PTR [rip+0xbec6],rcx        # 419780 <__bss_start@@Base+0x1624>
  40d8ba:	call   403190 <malloc@plt>
  40d8bf:	mov    QWORD PTR [rbp-0x238],rax
  40d8c6:	mov    rax,QWORD PTR [rbp-0x238]
  40d8cd:	mov    rdi,rax
  40d8d0:	call   40c4e0 <init_token_cbra@@Base>
  40d8d5:	mov    rax,QWORD PTR [rbp-0x238]
  40d8dc:	mov    QWORD PTR [rbp-0x8],rax
  40d8e0:	jmp    40ee96 <next@@Base+0x1c06>
  40d8e5:	mov    eax,0x2a
  40d8ea:	mov    ecx,eax
  40d8ec:	mov    eax,0x29
  40d8f1:	mov    edx,eax
  40d8f3:	movsx  eax,BYTE PTR [rbp-0x229]
  40d8fa:	cmp    eax,0x3b
  40d8fd:	sete   sil
  40d901:	cmp    eax,0x3b
  40d904:	cmove  rcx,rdx
  40d908:	lea    rdx,[rip+0xbd31]        # 419640 <__bss_start@@Base+0x14e4>
  40d90f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d913:	add    rdi,0x1
  40d917:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d91b:	test   sil,0x1
  40d91f:	jne    40d92a <next@@Base+0x69a>
  40d925:	jmp    40d96e <next@@Base+0x6de>
  40d92a:	mov    eax,0x4
  40d92f:	mov    edi,eax
  40d931:	mov    rcx,QWORD PTR [rip+0xbe60]        # 419798 <__bss_start@@Base+0x163c>
  40d938:	add    rcx,0x1
  40d93c:	mov    QWORD PTR [rip+0xbe55],rcx        # 419798 <__bss_start@@Base+0x163c>
  40d943:	call   403190 <malloc@plt>
  40d948:	mov    QWORD PTR [rbp-0x238],rax
  40d94f:	mov    rax,QWORD PTR [rbp-0x238]
  40d956:	mov    rdi,rax
  40d959:	call   40c560 <init_token_semicolon@@Base>
  40d95e:	mov    rax,QWORD PTR [rbp-0x238]
  40d965:	mov    QWORD PTR [rbp-0x8],rax
  40d969:	jmp    40ee96 <next@@Base+0x1c06>
  40d96e:	mov    eax,0x2d
  40d973:	mov    ecx,eax
  40d975:	mov    eax,0x2c
  40d97a:	mov    edx,eax
  40d97c:	movsx  eax,BYTE PTR [rbp-0x229]
  40d983:	cmp    eax,0x65
  40d986:	sete   sil
  40d98a:	cmp    eax,0x65
  40d98d:	cmove  rcx,rdx
  40d991:	lea    rdx,[rip+0xbca8]        # 419640 <__bss_start@@Base+0x14e4>
  40d998:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40d99c:	add    rdi,0x1
  40d9a0:	mov    QWORD PTR [rdx+rcx*8],rdi
  40d9a4:	test   sil,0x1
  40d9a8:	jne    40d9b3 <next@@Base+0x723>
  40d9ae:	jmp    40da05 <next@@Base+0x775>
  40d9b3:	mov    rax,QWORD PTR [rip+0xbdf6]        # 4197b0 <__bss_start@@Base+0x1654>
  40d9ba:	add    rax,0x1
  40d9be:	mov    QWORD PTR [rip+0xbdeb],rax        # 4197b0 <__bss_start@@Base+0x1654>
  40d9c5:	mov    cl,BYTE PTR [rbp-0x229]
  40d9cb:	mov    edx,DWORD PTR [rbp-0x21c]
  40d9d1:	mov    esi,edx
  40d9d3:	add    esi,0x1
  40d9d6:	mov    DWORD PTR [rbp-0x21c],esi
  40d9dc:	movsxd rax,edx
  40d9df:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40d9e6:	mov    rdi,QWORD PTR [rbp-0x10]
  40d9ea:	call   40d0f0 <get_char@@Base>
  40d9ef:	mov    BYTE PTR [rbp-0x229],al
  40d9f5:	mov    QWORD PTR [rbp-0x228],0x5
  40da00:	jmp    40e395 <next@@Base+0x1105>
  40da05:	mov    eax,0x30
  40da0a:	mov    ecx,eax
  40da0c:	mov    eax,0x2f
  40da11:	mov    edx,eax
  40da13:	movsx  eax,BYTE PTR [rbp-0x229]
  40da1a:	cmp    eax,0x69
  40da1d:	sete   sil
  40da21:	cmp    eax,0x69
  40da24:	cmove  rcx,rdx
  40da28:	lea    rdx,[rip+0xbc11]        # 419640 <__bss_start@@Base+0x14e4>
  40da2f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40da33:	add    rdi,0x1
  40da37:	mov    QWORD PTR [rdx+rcx*8],rdi
  40da3b:	test   sil,0x1
  40da3f:	jne    40da4a <next@@Base+0x7ba>
  40da45:	jmp    40da9c <next@@Base+0x80c>
  40da4a:	mov    rax,QWORD PTR [rip+0xbd77]        # 4197c8 <__bss_start@@Base+0x166c>
  40da51:	add    rax,0x1
  40da55:	mov    QWORD PTR [rip+0xbd6c],rax        # 4197c8 <__bss_start@@Base+0x166c>
  40da5c:	mov    cl,BYTE PTR [rbp-0x229]
  40da62:	mov    edx,DWORD PTR [rbp-0x21c]
  40da68:	mov    esi,edx
  40da6a:	add    esi,0x1
  40da6d:	mov    DWORD PTR [rbp-0x21c],esi
  40da73:	movsxd rax,edx
  40da76:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40da7d:	mov    rdi,QWORD PTR [rbp-0x10]
  40da81:	call   40d0f0 <get_char@@Base>
  40da86:	mov    BYTE PTR [rbp-0x229],al
  40da8c:	mov    QWORD PTR [rbp-0x228],0x2
  40da97:	jmp    40e383 <next@@Base+0x10f3>
  40da9c:	mov    eax,0x33
  40daa1:	mov    ecx,eax
  40daa3:	mov    eax,0x32
  40daa8:	mov    edx,eax
  40daaa:	movsx  eax,BYTE PTR [rbp-0x229]
  40dab1:	cmp    eax,0x6d
  40dab4:	sete   sil
  40dab8:	cmp    eax,0x6d
  40dabb:	cmove  rcx,rdx
  40dabf:	lea    rdx,[rip+0xbb7a]        # 419640 <__bss_start@@Base+0x14e4>
  40dac6:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40daca:	add    rdi,0x1
  40dace:	mov    QWORD PTR [rdx+rcx*8],rdi
  40dad2:	test   sil,0x1
  40dad6:	jne    40dae1 <next@@Base+0x851>
  40dadc:	jmp    40db33 <next@@Base+0x8a3>
  40dae1:	mov    rax,QWORD PTR [rip+0xbcf8]        # 4197e0 <__bss_start@@Base+0x1684>
  40dae8:	add    rax,0x1
  40daec:	mov    QWORD PTR [rip+0xbced],rax        # 4197e0 <__bss_start@@Base+0x1684>
  40daf3:	mov    cl,BYTE PTR [rbp-0x229]
  40daf9:	mov    edx,DWORD PTR [rbp-0x21c]
  40daff:	mov    esi,edx
  40db01:	add    esi,0x1
  40db04:	mov    DWORD PTR [rbp-0x21c],esi
  40db0a:	movsxd rax,edx
  40db0d:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40db14:	mov    rdi,QWORD PTR [rbp-0x10]
  40db18:	call   40d0f0 <get_char@@Base>
  40db1d:	mov    BYTE PTR [rbp-0x229],al
  40db23:	mov    QWORD PTR [rbp-0x228],0x3
  40db2e:	jmp    40e371 <next@@Base+0x10e1>
  40db33:	mov    eax,0x36
  40db38:	mov    ecx,eax
  40db3a:	mov    eax,0x35
  40db3f:	mov    edx,eax
  40db41:	movsx  eax,BYTE PTR [rbp-0x229]
  40db48:	cmp    eax,0x72
  40db4b:	sete   sil
  40db4f:	cmp    eax,0x72
  40db52:	cmove  rcx,rdx
  40db56:	lea    rdx,[rip+0xbae3]        # 419640 <__bss_start@@Base+0x14e4>
  40db5d:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40db61:	add    rdi,0x1
  40db65:	mov    QWORD PTR [rdx+rcx*8],rdi
  40db69:	test   sil,0x1
  40db6d:	jne    40db78 <next@@Base+0x8e8>
  40db73:	jmp    40dbca <next@@Base+0x93a>
  40db78:	mov    rax,QWORD PTR [rip+0xbc79]        # 4197f8 <__bss_start@@Base+0x169c>
  40db7f:	add    rax,0x1
  40db83:	mov    QWORD PTR [rip+0xbc6e],rax        # 4197f8 <__bss_start@@Base+0x169c>
  40db8a:	mov    cl,BYTE PTR [rbp-0x229]
  40db90:	mov    edx,DWORD PTR [rbp-0x21c]
  40db96:	mov    esi,edx
  40db98:	add    esi,0x1
  40db9b:	mov    DWORD PTR [rbp-0x21c],esi
  40dba1:	movsxd rax,edx
  40dba4:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40dbab:	mov    rdi,QWORD PTR [rbp-0x10]
  40dbaf:	call   40d0f0 <get_char@@Base>
  40dbb4:	mov    BYTE PTR [rbp-0x229],al
  40dbba:	mov    QWORD PTR [rbp-0x228],0x4
  40dbc5:	jmp    40e35f <next@@Base+0x10cf>
  40dbca:	mov    eax,0x39
  40dbcf:	mov    ecx,eax
  40dbd1:	mov    eax,0x38
  40dbd6:	mov    edx,eax
  40dbd8:	movsx  eax,BYTE PTR [rbp-0x229]
  40dbdf:	cmp    eax,0x21
  40dbe2:	sete   sil
  40dbe6:	cmp    eax,0x21
  40dbe9:	cmove  rcx,rdx
  40dbed:	lea    rdx,[rip+0xba4c]        # 419640 <__bss_start@@Base+0x14e4>
  40dbf4:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40dbf8:	add    rdi,0x1
  40dbfc:	mov    QWORD PTR [rdx+rcx*8],rdi
  40dc00:	test   sil,0x1
  40dc04:	jne    40dc0f <next@@Base+0x97f>
  40dc0a:	jmp    40dd6b <next@@Base+0xadb>
  40dc0f:	mov    al,BYTE PTR [rbp-0x229]
  40dc15:	mov    ecx,DWORD PTR [rbp-0x21c]
  40dc1b:	mov    edx,ecx
  40dc1d:	add    edx,0x1
  40dc20:	mov    DWORD PTR [rbp-0x21c],edx
  40dc26:	movsxd rsi,ecx
  40dc29:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40dc30:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc34:	call   40d0f0 <get_char@@Base>
  40dc39:	mov    ecx,0x10
  40dc3e:	mov    edi,ecx
  40dc40:	mov    BYTE PTR [rbp-0x229],al
  40dc46:	call   403190 <malloc@plt>
  40dc4b:	mov    ecx,0x3b
  40dc50:	mov    esi,ecx
  40dc52:	mov    ecx,0x3a
  40dc57:	mov    edi,ecx
  40dc59:	mov    QWORD PTR [rbp-0x238],rax
  40dc60:	movsx  ecx,BYTE PTR [rbp-0x229]
  40dc67:	cmp    ecx,0x3d
  40dc6a:	setne  r8b
  40dc6e:	cmp    ecx,0x3d
  40dc71:	cmovne rsi,rdi
  40dc75:	lea    rax,[rip+0xb9c4]        # 419640 <__bss_start@@Base+0x14e4>
  40dc7c:	mov    rdi,QWORD PTR [rax+rsi*8]
  40dc80:	add    rdi,0x1
  40dc84:	mov    QWORD PTR [rax+rsi*8],rdi
  40dc88:	test   r8b,0x1
  40dc8c:	jne    40dc97 <next@@Base+0xa07>
  40dc92:	jmp    40dce4 <next@@Base+0xa54>
  40dc97:	mov    rax,QWORD PTR [rip+0xbb82]        # 419820 <__bss_start@@Base+0x16c4>
  40dc9e:	add    rax,0x1
  40dca2:	mov    QWORD PTR [rip+0xbb77],rax        # 419820 <__bss_start@@Base+0x16c4>
  40dca9:	mov    rdi,QWORD PTR [rbp-0x10]
  40dcad:	call   40d240 <push_back_one_char@@Base>
  40dcb2:	mov    ecx,0x2
  40dcb7:	mov    edi,ecx
  40dcb9:	call   403190 <malloc@plt>
  40dcbe:	mov    QWORD PTR [rbp-0x218],rax
  40dcc5:	mov    dl,BYTE PTR [rbp-0x210]
  40dccb:	mov    rax,QWORD PTR [rbp-0x218]
  40dcd2:	mov    BYTE PTR [rax],dl
  40dcd4:	mov    rax,QWORD PTR [rbp-0x218]
  40dcdb:	mov    BYTE PTR [rax+0x1],0x0
  40dcdf:	jmp    40dd33 <next@@Base+0xaa3>
  40dce4:	mov    eax,0x3
  40dce9:	mov    edi,eax
  40dceb:	mov    rcx,QWORD PTR [rip+0xbb36]        # 419828 <__bss_start@@Base+0x16cc>
  40dcf2:	add    rcx,0x1
  40dcf6:	mov    QWORD PTR [rip+0xbb2b],rcx        # 419828 <__bss_start@@Base+0x16cc>
  40dcfd:	call   403190 <malloc@plt>
  40dd02:	mov    QWORD PTR [rbp-0x218],rax
  40dd09:	mov    dl,BYTE PTR [rbp-0x210]
  40dd0f:	mov    rax,QWORD PTR [rbp-0x218]
  40dd16:	mov    BYTE PTR [rax],dl
  40dd18:	mov    dl,BYTE PTR [rbp-0x229]
  40dd1e:	mov    rax,QWORD PTR [rbp-0x218]
  40dd25:	mov    BYTE PTR [rax+0x1],dl
  40dd28:	mov    rax,QWORD PTR [rbp-0x218]
  40dd2f:	mov    BYTE PTR [rax+0x2],0x0
  40dd33:	mov    rax,QWORD PTR [rip+0xbaf6]        # 419830 <__bss_start@@Base+0x16d4>
  40dd3a:	add    rax,0x1
  40dd3e:	mov    QWORD PTR [rip+0xbaeb],rax        # 419830 <__bss_start@@Base+0x16d4>
  40dd45:	mov    rax,QWORD PTR [rbp-0x238]
  40dd4c:	mov    rsi,QWORD PTR [rbp-0x218]
  40dd53:	mov    rdi,rax
  40dd56:	call   40c660 <init_token_boolean_op@@Base>
  40dd5b:	mov    rax,QWORD PTR [rbp-0x238]
  40dd62:	mov    QWORD PTR [rbp-0x8],rax
  40dd66:	jmp    40ee96 <next@@Base+0x1c06>
  40dd6b:	mov    eax,0x40
  40dd70:	mov    ecx,eax
  40dd72:	mov    eax,0x3f
  40dd77:	mov    edx,eax
  40dd79:	movsx  eax,BYTE PTR [rbp-0x229]
  40dd80:	cmp    eax,0x3c
  40dd83:	sete   sil
  40dd87:	cmp    eax,0x3c
  40dd8a:	cmove  rcx,rdx
  40dd8e:	lea    rdx,[rip+0xb8ab]        # 419640 <__bss_start@@Base+0x14e4>
  40dd95:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40dd99:	add    rdi,0x1
  40dd9d:	mov    QWORD PTR [rdx+rcx*8],rdi
  40dda1:	test   sil,0x1
  40dda5:	jne    40ddf0 <next@@Base+0xb60>
  40ddab:	mov    eax,0x42
  40ddb0:	mov    ecx,eax
  40ddb2:	mov    eax,0x41
  40ddb7:	mov    edx,eax
  40ddb9:	movsx  eax,BYTE PTR [rbp-0x229]
  40ddc0:	cmp    eax,0x3e
  40ddc3:	sete   sil
  40ddc7:	cmp    eax,0x3e
  40ddca:	cmove  rcx,rdx
  40ddce:	lea    rdx,[rip+0xb86b]        # 419640 <__bss_start@@Base+0x14e4>
  40ddd5:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40ddd9:	add    rdi,0x1
  40dddd:	mov    QWORD PTR [rdx+rcx*8],rdi
  40dde1:	test   sil,0x1
  40dde5:	jne    40ddf0 <next@@Base+0xb60>
  40ddeb:	jmp    40df4c <next@@Base+0xcbc>
  40ddf0:	mov    al,BYTE PTR [rbp-0x229]
  40ddf6:	mov    ecx,DWORD PTR [rbp-0x21c]
  40ddfc:	mov    edx,ecx
  40ddfe:	add    edx,0x1
  40de01:	mov    DWORD PTR [rbp-0x21c],edx
  40de07:	movsxd rsi,ecx
  40de0a:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40de11:	mov    rdi,QWORD PTR [rbp-0x10]
  40de15:	call   40d0f0 <get_char@@Base>
  40de1a:	mov    ecx,0x10
  40de1f:	mov    edi,ecx
  40de21:	mov    BYTE PTR [rbp-0x229],al
  40de27:	call   403190 <malloc@plt>
  40de2c:	mov    ecx,0x44
  40de31:	mov    esi,ecx
  40de33:	mov    ecx,0x43
  40de38:	mov    edi,ecx
  40de3a:	mov    QWORD PTR [rbp-0x238],rax
  40de41:	movsx  ecx,BYTE PTR [rbp-0x229]
  40de48:	cmp    ecx,0x3d
  40de4b:	setne  r8b
  40de4f:	cmp    ecx,0x3d
  40de52:	cmovne rsi,rdi
  40de56:	lea    rax,[rip+0xb7e3]        # 419640 <__bss_start@@Base+0x14e4>
  40de5d:	mov    rdi,QWORD PTR [rax+rsi*8]
  40de61:	add    rdi,0x1
  40de65:	mov    QWORD PTR [rax+rsi*8],rdi
  40de69:	test   r8b,0x1
  40de6d:	jne    40de78 <next@@Base+0xbe8>
  40de73:	jmp    40dec5 <next@@Base+0xc35>
  40de78:	mov    rax,QWORD PTR [rip+0xb9e9]        # 419868 <__bss_start@@Base+0x170c>
  40de7f:	add    rax,0x1
  40de83:	mov    QWORD PTR [rip+0xb9de],rax        # 419868 <__bss_start@@Base+0x170c>
  40de8a:	mov    rdi,QWORD PTR [rbp-0x10]
  40de8e:	call   40d240 <push_back_one_char@@Base>
  40de93:	mov    ecx,0x2
  40de98:	mov    edi,ecx
  40de9a:	call   403190 <malloc@plt>
  40de9f:	mov    QWORD PTR [rbp-0x218],rax
  40dea6:	mov    dl,BYTE PTR [rbp-0x210]
  40deac:	mov    rax,QWORD PTR [rbp-0x218]
  40deb3:	mov    BYTE PTR [rax],dl
  40deb5:	mov    rax,QWORD PTR [rbp-0x218]
  40debc:	mov    BYTE PTR [rax+0x1],0x0
  40dec0:	jmp    40df14 <next@@Base+0xc84>
  40dec5:	mov    eax,0x3
  40deca:	mov    edi,eax
  40decc:	mov    rcx,QWORD PTR [rip+0xb99d]        # 419870 <__bss_start@@Base+0x1714>
  40ded3:	add    rcx,0x1
  40ded7:	mov    QWORD PTR [rip+0xb992],rcx        # 419870 <__bss_start@@Base+0x1714>
  40dede:	call   403190 <malloc@plt>
  40dee3:	mov    QWORD PTR [rbp-0x218],rax
  40deea:	mov    dl,BYTE PTR [rbp-0x210]
  40def0:	mov    rax,QWORD PTR [rbp-0x218]
  40def7:	mov    BYTE PTR [rax],dl
  40def9:	mov    dl,BYTE PTR [rbp-0x229]
  40deff:	mov    rax,QWORD PTR [rbp-0x218]
  40df06:	mov    BYTE PTR [rax+0x1],dl
  40df09:	mov    rax,QWORD PTR [rbp-0x218]
  40df10:	mov    BYTE PTR [rax+0x2],0x0
  40df14:	mov    rax,QWORD PTR [rip+0xb95d]        # 419878 <__bss_start@@Base+0x171c>
  40df1b:	add    rax,0x1
  40df1f:	mov    QWORD PTR [rip+0xb952],rax        # 419878 <__bss_start@@Base+0x171c>
  40df26:	mov    rax,QWORD PTR [rbp-0x238]
  40df2d:	mov    rsi,QWORD PTR [rbp-0x218]
  40df34:	mov    rdi,rax
  40df37:	call   40c660 <init_token_boolean_op@@Base>
  40df3c:	mov    rax,QWORD PTR [rbp-0x238]
  40df43:	mov    QWORD PTR [rbp-0x8],rax
  40df47:	jmp    40ee96 <next@@Base+0x1c06>
  40df4c:	mov    eax,0x49
  40df51:	mov    ecx,eax
  40df53:	mov    eax,0x48
  40df58:	mov    edx,eax
  40df5a:	movsx  eax,BYTE PTR [rbp-0x229]
  40df61:	cmp    eax,0x3d
  40df64:	sete   sil
  40df68:	cmp    eax,0x3d
  40df6b:	cmove  rcx,rdx
  40df6f:	lea    rdx,[rip+0xb6ca]        # 419640 <__bss_start@@Base+0x14e4>
  40df76:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40df7a:	add    rdi,0x1
  40df7e:	mov    QWORD PTR [rdx+rcx*8],rdi
  40df82:	test   sil,0x1
  40df86:	jne    40df91 <next@@Base+0xd01>
  40df8c:	jmp    40e098 <next@@Base+0xe08>
  40df91:	mov    al,BYTE PTR [rbp-0x229]
  40df97:	mov    ecx,DWORD PTR [rbp-0x21c]
  40df9d:	mov    edx,ecx
  40df9f:	add    edx,0x1
  40dfa2:	mov    DWORD PTR [rbp-0x21c],edx
  40dfa8:	movsxd rsi,ecx
  40dfab:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40dfb2:	mov    rdi,QWORD PTR [rbp-0x10]
  40dfb6:	call   40d0f0 <get_char@@Base>
  40dfbb:	mov    ecx,0x10
  40dfc0:	mov    edi,ecx
  40dfc2:	mov    BYTE PTR [rbp-0x229],al
  40dfc8:	call   403190 <malloc@plt>
  40dfcd:	mov    ecx,0x4b
  40dfd2:	mov    esi,ecx
  40dfd4:	mov    ecx,0x4a
  40dfd9:	mov    edi,ecx
  40dfdb:	mov    QWORD PTR [rbp-0x238],rax
  40dfe2:	movsx  ecx,BYTE PTR [rbp-0x229]
  40dfe9:	cmp    ecx,0x3d
  40dfec:	setne  r8b
  40dff0:	cmp    ecx,0x3d
  40dff3:	cmovne rsi,rdi
  40dff7:	lea    rax,[rip+0xb642]        # 419640 <__bss_start@@Base+0x14e4>
  40dffe:	mov    rdi,QWORD PTR [rax+rsi*8]
  40e002:	add    rdi,0x1
  40e006:	mov    QWORD PTR [rax+rsi*8],rdi
  40e00a:	test   r8b,0x1
  40e00e:	jne    40e019 <next@@Base+0xd89>
  40e014:	jmp    40e023 <next@@Base+0xd93>
  40e019:	mov    edi,0x1
  40e01e:	call   403230 <exit@plt>
  40e023:	mov    eax,0x3
  40e028:	mov    edi,eax
  40e02a:	mov    rcx,QWORD PTR [rip+0xb86f]        # 4198a0 <__bss_start@@Base+0x1744>
  40e031:	add    rcx,0x1
  40e035:	mov    QWORD PTR [rip+0xb864],rcx        # 4198a0 <__bss_start@@Base+0x1744>
  40e03c:	call   403190 <malloc@plt>
  40e041:	mov    QWORD PTR [rbp-0x218],rax
  40e048:	mov    dl,BYTE PTR [rbp-0x210]
  40e04e:	mov    rax,QWORD PTR [rbp-0x218]
  40e055:	mov    BYTE PTR [rax],dl
  40e057:	mov    dl,BYTE PTR [rbp-0x229]
  40e05d:	mov    rax,QWORD PTR [rbp-0x218]
  40e064:	mov    BYTE PTR [rax+0x1],dl
  40e067:	mov    rax,QWORD PTR [rbp-0x218]
  40e06e:	mov    BYTE PTR [rax+0x2],0x0
  40e072:	mov    rax,QWORD PTR [rbp-0x238]
  40e079:	mov    rsi,QWORD PTR [rbp-0x218]
  40e080:	mov    rdi,rax
  40e083:	call   40c660 <init_token_boolean_op@@Base>
  40e088:	mov    rax,QWORD PTR [rbp-0x238]
  40e08f:	mov    QWORD PTR [rbp-0x8],rax
  40e093:	jmp    40ee96 <next@@Base+0x1c06>
  40e098:	mov    eax,0x4e
  40e09d:	mov    ecx,eax
  40e09f:	mov    eax,0x4d
  40e0a4:	mov    edx,eax
  40e0a6:	movsx  eax,BYTE PTR [rbp-0x229]
  40e0ad:	cmp    eax,0x7c
  40e0b0:	sete   sil
  40e0b4:	cmp    eax,0x7c
  40e0b7:	cmove  rcx,rdx
  40e0bb:	lea    rdx,[rip+0xb57e]        # 419640 <__bss_start@@Base+0x14e4>
  40e0c2:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40e0c6:	add    rdi,0x1
  40e0ca:	mov    QWORD PTR [rdx+rcx*8],rdi
  40e0ce:	test   sil,0x1
  40e0d2:	jne    40e0dd <next@@Base+0xe4d>
  40e0d8:	jmp    40e1e4 <next@@Base+0xf54>
  40e0dd:	mov    al,BYTE PTR [rbp-0x229]
  40e0e3:	mov    ecx,DWORD PTR [rbp-0x21c]
  40e0e9:	mov    edx,ecx
  40e0eb:	add    edx,0x1
  40e0ee:	mov    DWORD PTR [rbp-0x21c],edx
  40e0f4:	movsxd rsi,ecx
  40e0f7:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40e0fe:	mov    rdi,QWORD PTR [rbp-0x10]
  40e102:	call   40d0f0 <get_char@@Base>
  40e107:	mov    ecx,0x10
  40e10c:	mov    edi,ecx
  40e10e:	mov    BYTE PTR [rbp-0x229],al
  40e114:	call   403190 <malloc@plt>
  40e119:	mov    ecx,0x50
  40e11e:	mov    esi,ecx
  40e120:	mov    ecx,0x4f
  40e125:	mov    edi,ecx
  40e127:	mov    QWORD PTR [rbp-0x238],rax
  40e12e:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e135:	cmp    ecx,0x7c
  40e138:	setne  r8b
  40e13c:	cmp    ecx,0x7c
  40e13f:	cmovne rsi,rdi
  40e143:	lea    rax,[rip+0xb4f6]        # 419640 <__bss_start@@Base+0x14e4>
  40e14a:	mov    rdi,QWORD PTR [rax+rsi*8]
  40e14e:	add    rdi,0x1
  40e152:	mov    QWORD PTR [rax+rsi*8],rdi
  40e156:	test   r8b,0x1
  40e15a:	jne    40e165 <next@@Base+0xed5>
  40e160:	jmp    40e16f <next@@Base+0xedf>
  40e165:	mov    edi,0x1
  40e16a:	call   403230 <exit@plt>
  40e16f:	mov    eax,0x3
  40e174:	mov    edi,eax
  40e176:	mov    rcx,QWORD PTR [rip+0xb74b]        # 4198c8 <__bss_start@@Base+0x176c>
  40e17d:	add    rcx,0x1
  40e181:	mov    QWORD PTR [rip+0xb740],rcx        # 4198c8 <__bss_start@@Base+0x176c>
  40e188:	call   403190 <malloc@plt>
  40e18d:	mov    QWORD PTR [rbp-0x218],rax
  40e194:	mov    dl,BYTE PTR [rbp-0x210]
  40e19a:	mov    rax,QWORD PTR [rbp-0x218]
  40e1a1:	mov    BYTE PTR [rax],dl
  40e1a3:	mov    dl,BYTE PTR [rbp-0x229]
  40e1a9:	mov    rax,QWORD PTR [rbp-0x218]
  40e1b0:	mov    BYTE PTR [rax+0x1],dl
  40e1b3:	mov    rax,QWORD PTR [rbp-0x218]
  40e1ba:	mov    BYTE PTR [rax+0x2],0x0
  40e1be:	mov    rax,QWORD PTR [rbp-0x238]
  40e1c5:	mov    rsi,QWORD PTR [rbp-0x218]
  40e1cc:	mov    rdi,rax
  40e1cf:	call   40c660 <init_token_boolean_op@@Base>
  40e1d4:	mov    rax,QWORD PTR [rbp-0x238]
  40e1db:	mov    QWORD PTR [rbp-0x8],rax
  40e1df:	jmp    40ee96 <next@@Base+0x1c06>
  40e1e4:	mov    eax,0x53
  40e1e9:	mov    ecx,eax
  40e1eb:	mov    eax,0x52
  40e1f0:	mov    edx,eax
  40e1f2:	movsx  eax,BYTE PTR [rbp-0x229]
  40e1f9:	cmp    eax,0x26
  40e1fc:	sete   sil
  40e200:	cmp    eax,0x26
  40e203:	cmove  rcx,rdx
  40e207:	lea    rdx,[rip+0xb432]        # 419640 <__bss_start@@Base+0x14e4>
  40e20e:	mov    rdi,QWORD PTR [rdx+rcx*8]
  40e212:	add    rdi,0x1
  40e216:	mov    QWORD PTR [rdx+rcx*8],rdi
  40e21a:	test   sil,0x1
  40e21e:	jne    40e229 <next@@Base+0xf99>
  40e224:	jmp    40e330 <next@@Base+0x10a0>
  40e229:	mov    al,BYTE PTR [rbp-0x229]
  40e22f:	mov    ecx,DWORD PTR [rbp-0x21c]
  40e235:	mov    edx,ecx
  40e237:	add    edx,0x1
  40e23a:	mov    DWORD PTR [rbp-0x21c],edx
  40e240:	movsxd rsi,ecx
  40e243:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40e24a:	mov    rdi,QWORD PTR [rbp-0x10]
  40e24e:	call   40d0f0 <get_char@@Base>
  40e253:	mov    ecx,0x10
  40e258:	mov    edi,ecx
  40e25a:	mov    BYTE PTR [rbp-0x229],al
  40e260:	call   403190 <malloc@plt>
  40e265:	mov    ecx,0x55
  40e26a:	mov    esi,ecx
  40e26c:	mov    ecx,0x54
  40e271:	mov    edi,ecx
  40e273:	mov    QWORD PTR [rbp-0x238],rax
  40e27a:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e281:	cmp    ecx,0x26
  40e284:	setne  r8b
  40e288:	cmp    ecx,0x26
  40e28b:	cmovne rsi,rdi
  40e28f:	lea    rax,[rip+0xb3aa]        # 419640 <__bss_start@@Base+0x14e4>
  40e296:	mov    rdi,QWORD PTR [rax+rsi*8]
  40e29a:	add    rdi,0x1
  40e29e:	mov    QWORD PTR [rax+rsi*8],rdi
  40e2a2:	test   r8b,0x1
  40e2a6:	jne    40e2b1 <next@@Base+0x1021>
  40e2ac:	jmp    40e2bb <next@@Base+0x102b>
  40e2b1:	mov    edi,0x1
  40e2b6:	call   403230 <exit@plt>
  40e2bb:	mov    eax,0x3
  40e2c0:	mov    edi,eax
  40e2c2:	mov    rcx,QWORD PTR [rip+0xb627]        # 4198f0 <__bss_start@@Base+0x1794>
  40e2c9:	add    rcx,0x1
  40e2cd:	mov    QWORD PTR [rip+0xb61c],rcx        # 4198f0 <__bss_start@@Base+0x1794>
  40e2d4:	call   403190 <malloc@plt>
  40e2d9:	mov    QWORD PTR [rbp-0x218],rax
  40e2e0:	mov    dl,BYTE PTR [rbp-0x210]
  40e2e6:	mov    rax,QWORD PTR [rbp-0x218]
  40e2ed:	mov    BYTE PTR [rax],dl
  40e2ef:	mov    dl,BYTE PTR [rbp-0x229]
  40e2f5:	mov    rax,QWORD PTR [rbp-0x218]
  40e2fc:	mov    BYTE PTR [rax+0x1],dl
  40e2ff:	mov    rax,QWORD PTR [rbp-0x218]
  40e306:	mov    BYTE PTR [rax+0x2],0x0
  40e30a:	mov    rax,QWORD PTR [rbp-0x238]
  40e311:	mov    rsi,QWORD PTR [rbp-0x218]
  40e318:	mov    rdi,rax
  40e31b:	call   40c660 <init_token_boolean_op@@Base>
  40e320:	mov    rax,QWORD PTR [rbp-0x238]
  40e327:	mov    QWORD PTR [rbp-0x8],rax
  40e32b:	jmp    40ee96 <next@@Base+0x1c06>
  40e330:	mov    rax,QWORD PTR [rip+0x9cb9]        # 417ff0 <stderr@GLIBC_2.2.5>
  40e337:	mov    rdi,QWORD PTR [rax]
  40e33a:	movsx  edx,BYTE PTR [rbp-0x229]
  40e341:	lea    rsi,[rip+0x4c01]        # 412f49 <UnitySizeMask@@Base+0x739>
  40e348:	mov    al,0x0
  40e34a:	call   403140 <fprintf@plt>
  40e34f:	mov    edi,0x1
  40e354:	mov    DWORD PTR [rbp-0x264],eax
  40e35a:	call   403230 <exit@plt>
  40e35f:	mov    rax,QWORD PTR [rip+0xb592]        # 4198f8 <__bss_start@@Base+0x179c>
  40e366:	add    rax,0x1
  40e36a:	mov    QWORD PTR [rip+0xb587],rax        # 4198f8 <__bss_start@@Base+0x179c>
  40e371:	mov    rax,QWORD PTR [rip+0xb588]        # 419900 <__bss_start@@Base+0x17a4>
  40e378:	add    rax,0x1
  40e37c:	mov    QWORD PTR [rip+0xb57d],rax        # 419900 <__bss_start@@Base+0x17a4>
  40e383:	mov    rax,QWORD PTR [rip+0xb57e]        # 419908 <__bss_start@@Base+0x17ac>
  40e38a:	add    rax,0x1
  40e38e:	mov    QWORD PTR [rip+0xb573],rax        # 419908 <__bss_start@@Base+0x17ac>
  40e395:	mov    rax,QWORD PTR [rip+0xb574]        # 419910 <__bss_start@@Base+0x17b4>
  40e39c:	add    rax,0x1
  40e3a0:	mov    QWORD PTR [rip+0xb569],rax        # 419910 <__bss_start@@Base+0x17b4>
  40e3a7:	mov    rax,QWORD PTR [rip+0xb56a]        # 419918 <__bss_start@@Base+0x17bc>
  40e3ae:	add    rax,0x1
  40e3b2:	mov    QWORD PTR [rip+0xb55f],rax        # 419918 <__bss_start@@Base+0x17bc>
  40e3b9:	mov    rax,QWORD PTR [rip+0xb560]        # 419920 <__bss_start@@Base+0x17c4>
  40e3c0:	add    rax,0x1
  40e3c4:	mov    QWORD PTR [rip+0xb555],rax        # 419920 <__bss_start@@Base+0x17c4>
  40e3cb:	mov    rax,QWORD PTR [rip+0xb556]        # 419928 <__bss_start@@Base+0x17cc>
  40e3d2:	add    rax,0x1
  40e3d6:	mov    QWORD PTR [rip+0xb54b],rax        # 419928 <__bss_start@@Base+0x17cc>
  40e3dd:	mov    rax,QWORD PTR [rip+0xb54c]        # 419930 <__bss_start@@Base+0x17d4>
  40e3e4:	add    rax,0x1
  40e3e8:	mov    QWORD PTR [rip+0xb541],rax        # 419930 <__bss_start@@Base+0x17d4>
  40e3ef:	mov    rax,QWORD PTR [rip+0xb542]        # 419938 <__bss_start@@Base+0x17dc>
  40e3f6:	add    rax,0x1
  40e3fa:	mov    QWORD PTR [rip+0xb537],rax        # 419938 <__bss_start@@Base+0x17dc>
  40e401:	mov    rax,QWORD PTR [rip+0xb538]        # 419940 <__bss_start@@Base+0x17e4>
  40e408:	add    rax,0x1
  40e40c:	mov    QWORD PTR [rip+0xb52d],rax        # 419940 <__bss_start@@Base+0x17e4>
  40e413:	mov    rax,QWORD PTR [rip+0xb52e]        # 419948 <__bss_start@@Base+0x17ec>
  40e41a:	add    rax,0x1
  40e41e:	mov    QWORD PTR [rip+0xb523],rax        # 419948 <__bss_start@@Base+0x17ec>
  40e425:	mov    rax,QWORD PTR [rip+0xb524]        # 419950 <__bss_start@@Base+0x17f4>
  40e42c:	add    rax,0x1
  40e430:	mov    QWORD PTR [rip+0xb519],rax        # 419950 <__bss_start@@Base+0x17f4>
  40e437:	jmp    40ee2d <next@@Base+0x1b9d>
  40e43c:	lea    rax,[rip+0x976d]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e443:	add    rax,0x20
  40e447:	lea    rdi,[rip+0x9d02]        # 418150 <__data_start@@Base+0x18>
  40e44e:	mov    rsi,rax
  40e451:	call   40eec0 <next@@Base+0x1c30>
  40e456:	mov    rax,QWORD PTR [rip+0xb4fb]        # 419958 <__bss_start@@Base+0x17fc>
  40e45d:	add    rax,0x1
  40e461:	mov    QWORD PTR [rip+0xb4f0],rax        # 419958 <__bss_start@@Base+0x17fc>
  40e468:	xor    eax,eax
  40e46a:	mov    cl,al
  40e46c:	mov    eax,0x65
  40e471:	mov    edx,eax
  40e473:	mov    eax,0x64
  40e478:	mov    esi,eax
  40e47a:	movsx  eax,BYTE PTR [rbp-0x229]
  40e481:	cmp    eax,0x30
  40e484:	setge  dil
  40e488:	cmp    eax,0x30
  40e48b:	cmovge rdx,rsi
  40e48f:	lea    rsi,[rip+0xb1aa]        # 419640 <__bss_start@@Base+0x14e4>
  40e496:	mov    r8,QWORD PTR [rsi+rdx*8]
  40e49a:	add    r8,0x1
  40e49e:	mov    QWORD PTR [rsi+rdx*8],r8
  40e4a2:	test   dil,0x1
  40e4a6:	mov    BYTE PTR [rbp-0x265],cl
  40e4ac:	jne    40e4b7 <next@@Base+0x1227>
  40e4b2:	jmp    40e4dc <next@@Base+0x124c>
  40e4b7:	mov    rax,QWORD PTR [rip+0xb4b2]        # 419970 <__bss_start@@Base+0x1814>
  40e4be:	add    rax,0x1
  40e4c2:	mov    QWORD PTR [rip+0xb4a7],rax        # 419970 <__bss_start@@Base+0x1814>
  40e4c9:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e4d0:	cmp    ecx,0x39
  40e4d3:	setle  dl
  40e4d6:	mov    BYTE PTR [rbp-0x265],dl
  40e4dc:	mov    al,BYTE PTR [rbp-0x265]
  40e4e2:	mov    ecx,0x68
  40e4e7:	mov    edx,ecx
  40e4e9:	mov    ecx,0x67
  40e4ee:	mov    esi,ecx
  40e4f0:	test   al,0x1
  40e4f2:	cmovne rdx,rsi
  40e4f6:	lea    rsi,[rip+0xb143]        # 419640 <__bss_start@@Base+0x14e4>
  40e4fd:	mov    rdi,QWORD PTR [rsi+rdx*8]
  40e501:	add    rdi,0x1
  40e505:	mov    QWORD PTR [rsi+rdx*8],rdi
  40e509:	test   al,0x1
  40e50b:	jne    40e516 <next@@Base+0x1286>
  40e511:	jmp    40e55d <next@@Base+0x12cd>
  40e516:	mov    rax,QWORD PTR [rip+0xb46b]        # 419988 <__bss_start@@Base+0x182c>
  40e51d:	add    rax,0x1
  40e521:	mov    QWORD PTR [rip+0xb460],rax        # 419988 <__bss_start@@Base+0x182c>
  40e528:	mov    cl,BYTE PTR [rbp-0x229]
  40e52e:	mov    edx,DWORD PTR [rbp-0x21c]
  40e534:	mov    esi,edx
  40e536:	add    esi,0x1
  40e539:	mov    DWORD PTR [rbp-0x21c],esi
  40e53f:	movsxd rax,edx
  40e542:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40e549:	mov    rdi,QWORD PTR [rbp-0x10]
  40e54d:	call   40d0f0 <get_char@@Base>
  40e552:	mov    BYTE PTR [rbp-0x229],al
  40e558:	jmp    40e468 <next@@Base+0x11d8>
  40e55d:	mov    rax,QWORD PTR [rip+0xb42c]        # 419990 <__bss_start@@Base+0x1834>
  40e564:	add    rax,0x1
  40e568:	mov    QWORD PTR [rip+0xb421],rax        # 419990 <__bss_start@@Base+0x1834>
  40e56f:	mov    rdi,QWORD PTR [rbp-0x10]
  40e573:	call   40d240 <push_back_one_char@@Base>
  40e578:	mov    ecx,0x8
  40e57d:	mov    edi,ecx
  40e57f:	movsxd rax,DWORD PTR [rbp-0x21c]
  40e586:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40e58e:	call   403190 <malloc@plt>
  40e593:	lea    rdi,[rbp-0x210]
  40e59a:	mov    QWORD PTR [rbp-0x238],rax
  40e5a1:	mov    rax,QWORD PTR [rbp-0x238]
  40e5a8:	mov    QWORD PTR [rbp-0x270],rax
  40e5af:	call   403220 <atoi@plt>
  40e5b4:	mov    rdi,QWORD PTR [rbp-0x270]
  40e5bb:	mov    esi,eax
  40e5bd:	call   40c360 <init_token_int_value@@Base>
  40e5c2:	mov    rdi,QWORD PTR [rbp-0x238]
  40e5c9:	mov    QWORD PTR [rbp-0x8],rdi
  40e5cd:	jmp    40ee96 <next@@Base+0x1c06>
  40e5d2:	lea    rdi,[rip+0x9b77]        # 418150 <__data_start@@Base+0x18>
  40e5d9:	lea    rsi,[rip+0x9600]        # 417be0 <UnitySizeMask@@Base+0x53d0>
  40e5e0:	call   40eec0 <next@@Base+0x1c30>
  40e5e5:	mov    DWORD PTR [rip+0x9b61],0x1        # 418150 <__data_start@@Base+0x18>
  40e5ef:	movsx  eax,BYTE PTR [rbp-0x229]
  40e5f6:	mov    ecx,eax
  40e5f8:	sub    ecx,0x66
  40e5fb:	mov    DWORD PTR [rbp-0x274],eax
  40e601:	mov    DWORD PTR [rbp-0x278],ecx
  40e607:	je     40e70b <next@@Base+0x147b>
  40e60d:	jmp    40e612 <next@@Base+0x1382>
  40e612:	mov    eax,DWORD PTR [rbp-0x274]
  40e618:	sub    eax,0x6e
  40e61b:	mov    DWORD PTR [rbp-0x27c],eax
  40e621:	jne    40e79e <next@@Base+0x150e>
  40e627:	jmp    40e62c <next@@Base+0x139c>
  40e62c:	lea    rax,[rip+0x957d]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e633:	add    rax,0x80
  40e639:	lea    rdi,[rip+0x9b10]        # 418150 <__data_start@@Base+0x18>
  40e640:	mov    rsi,rax
  40e643:	call   40eec0 <next@@Base+0x1c30>
  40e648:	mov    cl,BYTE PTR [rbp-0x229]
  40e64e:	mov    edx,DWORD PTR [rbp-0x21c]
  40e654:	mov    r8d,edx
  40e657:	add    r8d,0x1
  40e65b:	mov    DWORD PTR [rbp-0x21c],r8d
  40e662:	movsxd rax,edx
  40e665:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40e66c:	mov    rdi,QWORD PTR [rbp-0x10]
  40e670:	call   40d0f0 <get_char@@Base>
  40e675:	mov    edx,0x6f
  40e67a:	mov    esi,edx
  40e67c:	mov    edx,0x6e
  40e681:	mov    edi,edx
  40e683:	mov    BYTE PTR [rbp-0x229],al
  40e689:	movsx  edx,BYTE PTR [rbp-0x229]
  40e690:	cmp    edx,0x74
  40e693:	setne  al
  40e696:	cmp    edx,0x74
  40e699:	cmovne rsi,rdi
  40e69d:	lea    rdi,[rip+0xaf9c]        # 419640 <__bss_start@@Base+0x14e4>
  40e6a4:	mov    r9,QWORD PTR [rdi+rsi*8]
  40e6a8:	add    r9,0x1
  40e6ac:	mov    QWORD PTR [rdi+rsi*8],r9
  40e6b0:	test   al,0x1
  40e6b2:	jne    40e6bd <next@@Base+0x142d>
  40e6b8:	jmp    40e6c7 <next@@Base+0x1437>
  40e6bd:	mov    edi,0x1
  40e6c2:	call   403230 <exit@plt>
  40e6c7:	mov    eax,0x4
  40e6cc:	mov    edi,eax
  40e6ce:	mov    rcx,QWORD PTR [rip+0xb2eb]        # 4199c0 <__bss_start@@Base+0x1864>
  40e6d5:	add    rcx,0x1
  40e6d9:	mov    QWORD PTR [rip+0xb2e0],rcx        # 4199c0 <__bss_start@@Base+0x1864>
  40e6e0:	call   403190 <malloc@plt>
  40e6e5:	mov    QWORD PTR [rbp-0x238],rax
  40e6ec:	mov    rax,QWORD PTR [rbp-0x238]
  40e6f3:	mov    rdi,rax
  40e6f6:	call   40c320 <init_token_int_type@@Base>
  40e6fb:	mov    rax,QWORD PTR [rbp-0x238]
  40e702:	mov    QWORD PTR [rbp-0x8],rax
  40e706:	jmp    40ee96 <next@@Base+0x1c06>
  40e70b:	lea    rax,[rip+0x949e]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e712:	add    rax,0x90
  40e718:	lea    rdi,[rip+0x9a31]        # 418150 <__data_start@@Base+0x18>
  40e71f:	mov    rsi,rax
  40e722:	call   40eec0 <next@@Base+0x1c30>
  40e727:	mov    ecx,0x4
  40e72c:	mov    edi,ecx
  40e72e:	mov    rax,QWORD PTR [rip+0xb293]        # 4199c8 <__bss_start@@Base+0x186c>
  40e735:	add    rax,0x1
  40e739:	mov    QWORD PTR [rip+0xb288],rax        # 4199c8 <__bss_start@@Base+0x186c>
  40e740:	mov    dl,BYTE PTR [rbp-0x229]
  40e746:	mov    ecx,DWORD PTR [rbp-0x21c]
  40e74c:	mov    r8d,ecx
  40e74f:	add    r8d,0x1
  40e753:	mov    DWORD PTR [rbp-0x21c],r8d
  40e75a:	movsxd rax,ecx
  40e75d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40e764:	movsxd rax,DWORD PTR [rbp-0x21c]
  40e76b:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40e773:	call   403190 <malloc@plt>
  40e778:	mov    QWORD PTR [rbp-0x238],rax
  40e77f:	mov    rax,QWORD PTR [rbp-0x238]
  40e786:	mov    rdi,rax
  40e789:	call   40c5e0 <init_token_if@@Base>
  40e78e:	mov    rax,QWORD PTR [rbp-0x238]
  40e795:	mov    QWORD PTR [rbp-0x8],rax
  40e799:	jmp    40ee96 <next@@Base+0x1c06>
  40e79e:	lea    rax,[rip+0x940b]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e7a5:	add    rax,0x70
  40e7a9:	lea    rdi,[rip+0x99a0]        # 418150 <__data_start@@Base+0x18>
  40e7b0:	mov    rsi,rax
  40e7b3:	call   40eec0 <next@@Base+0x1c30>
  40e7b8:	mov    edi,0x1
  40e7bd:	call   403230 <exit@plt>
  40e7c2:	lea    rax,[rip+0x93e7]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e7c9:	add    rax,0x40
  40e7cd:	lea    rdi,[rip+0x997c]        # 418150 <__data_start@@Base+0x18>
  40e7d4:	mov    rsi,rax
  40e7d7:	call   40eec0 <next@@Base+0x1c30>
  40e7dc:	mov    ecx,0x73
  40e7e1:	mov    eax,ecx
  40e7e3:	mov    ecx,0x72
  40e7e8:	mov    esi,ecx
  40e7ea:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e7f1:	cmp    ecx,0x61
  40e7f4:	setne  dl
  40e7f7:	cmp    ecx,0x61
  40e7fa:	cmovne rax,rsi
  40e7fe:	lea    rsi,[rip+0xae3b]        # 419640 <__bss_start@@Base+0x14e4>
  40e805:	mov    rdi,QWORD PTR [rsi+rax*8]
  40e809:	add    rdi,0x1
  40e80d:	mov    QWORD PTR [rsi+rax*8],rdi
  40e811:	test   dl,0x1
  40e814:	jne    40e81f <next@@Base+0x158f>
  40e81a:	jmp    40e829 <next@@Base+0x1599>
  40e81f:	mov    edi,0x1
  40e824:	call   403230 <exit@plt>
  40e829:	mov    al,BYTE PTR [rbp-0x229]
  40e82f:	mov    ecx,DWORD PTR [rbp-0x21c]
  40e835:	mov    edx,ecx
  40e837:	add    edx,0x1
  40e83a:	mov    DWORD PTR [rbp-0x21c],edx
  40e840:	movsxd rsi,ecx
  40e843:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40e84a:	mov    rdi,QWORD PTR [rbp-0x10]
  40e84e:	call   40d0f0 <get_char@@Base>
  40e853:	mov    ecx,0x75
  40e858:	mov    esi,ecx
  40e85a:	mov    ecx,0x74
  40e85f:	mov    edi,ecx
  40e861:	mov    BYTE PTR [rbp-0x229],al
  40e867:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e86e:	cmp    ecx,0x69
  40e871:	setne  al
  40e874:	cmp    ecx,0x69
  40e877:	cmovne rsi,rdi
  40e87b:	lea    rdi,[rip+0xadbe]        # 419640 <__bss_start@@Base+0x14e4>
  40e882:	mov    r8,QWORD PTR [rdi+rsi*8]
  40e886:	add    r8,0x1
  40e88a:	mov    QWORD PTR [rdi+rsi*8],r8
  40e88e:	test   al,0x1
  40e890:	jne    40e89b <next@@Base+0x160b>
  40e896:	jmp    40e8a5 <next@@Base+0x1615>
  40e89b:	mov    edi,0x1
  40e8a0:	call   403230 <exit@plt>
  40e8a5:	mov    al,BYTE PTR [rbp-0x229]
  40e8ab:	mov    ecx,DWORD PTR [rbp-0x21c]
  40e8b1:	mov    edx,ecx
  40e8b3:	add    edx,0x1
  40e8b6:	mov    DWORD PTR [rbp-0x21c],edx
  40e8bc:	movsxd rsi,ecx
  40e8bf:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40e8c6:	mov    rdi,QWORD PTR [rbp-0x10]
  40e8ca:	call   40d0f0 <get_char@@Base>
  40e8cf:	mov    ecx,0x77
  40e8d4:	mov    esi,ecx
  40e8d6:	mov    ecx,0x76
  40e8db:	mov    edi,ecx
  40e8dd:	mov    BYTE PTR [rbp-0x229],al
  40e8e3:	movsx  ecx,BYTE PTR [rbp-0x229]
  40e8ea:	cmp    ecx,0x6e
  40e8ed:	setne  al
  40e8f0:	cmp    ecx,0x6e
  40e8f3:	cmovne rsi,rdi
  40e8f7:	lea    rdi,[rip+0xad42]        # 419640 <__bss_start@@Base+0x14e4>
  40e8fe:	mov    r8,QWORD PTR [rdi+rsi*8]
  40e902:	add    r8,0x1
  40e906:	mov    QWORD PTR [rdi+rsi*8],r8
  40e90a:	test   al,0x1
  40e90c:	jne    40e917 <next@@Base+0x1687>
  40e912:	jmp    40e921 <next@@Base+0x1691>
  40e917:	mov    edi,0x1
  40e91c:	call   403230 <exit@plt>
  40e921:	mov    rax,QWORD PTR [rip+0xb0d8]        # 419a00 <__bss_start@@Base+0x18a4>
  40e928:	add    rax,0x1
  40e92c:	mov    QWORD PTR [rip+0xb0cd],rax        # 419a00 <__bss_start@@Base+0x18a4>
  40e933:	mov    cl,BYTE PTR [rbp-0x229]
  40e939:	mov    edx,DWORD PTR [rbp-0x21c]
  40e93f:	mov    esi,edx
  40e941:	add    esi,0x1
  40e944:	mov    DWORD PTR [rbp-0x21c],esi
  40e94a:	movsxd rax,edx
  40e94d:	mov    BYTE PTR [rbp+rax*1-0x210],cl
  40e954:	movsxd rax,DWORD PTR [rbp-0x21c]
  40e95b:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  40e963:	movsxd rax,DWORD PTR [rbp-0x21c]
  40e96a:	shl    rax,0x0
  40e96e:	add    rax,0x1
  40e972:	mov    rdi,rax
  40e975:	call   403190 <malloc@plt>
  40e97a:	lea    rsi,[rbp-0x210]
  40e981:	mov    QWORD PTR [rbp-0x218],rax
  40e988:	mov    rdi,QWORD PTR [rbp-0x218]
  40e98f:	movsxd rdx,DWORD PTR [rbp-0x21c]
  40e996:	call   403070 <strncpy@plt>
  40e99b:	mov    r8d,0x10
  40e9a1:	mov    edi,r8d
  40e9a4:	mov    rdx,QWORD PTR [rbp-0x218]
  40e9ab:	movsxd rsi,DWORD PTR [rbp-0x21c]
  40e9b2:	mov    BYTE PTR [rdx+rsi*1],0x0
  40e9b6:	mov    QWORD PTR [rbp-0x288],rax
  40e9bd:	call   403190 <malloc@plt>
  40e9c2:	mov    QWORD PTR [rbp-0x238],rax
  40e9c9:	mov    rax,QWORD PTR [rbp-0x238]
  40e9d0:	mov    rsi,QWORD PTR [rbp-0x218]
  40e9d7:	mov    rdi,rax
  40e9da:	call   40c3c0 <init_token_function@@Base>
  40e9df:	mov    rax,QWORD PTR [rbp-0x238]
  40e9e6:	mov    QWORD PTR [rbp-0x8],rax
  40e9ea:	jmp    40ee96 <next@@Base+0x1c06>
  40e9ef:	lea    rax,[rip+0x91ba]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40e9f6:	add    rax,0x50
  40e9fa:	lea    rdi,[rip+0x974f]        # 418150 <__data_start@@Base+0x18>
  40ea01:	mov    rsi,rax
  40ea04:	call   40eec0 <next@@Base+0x1c30>
  40ea09:	mov    ecx,0x7a
  40ea0e:	mov    eax,ecx
  40ea10:	mov    ecx,0x79
  40ea15:	mov    esi,ecx
  40ea17:	movsx  ecx,BYTE PTR [rbp-0x229]
  40ea1e:	cmp    ecx,0x65
  40ea21:	setne  dl
  40ea24:	cmp    ecx,0x65
  40ea27:	cmovne rax,rsi
  40ea2b:	lea    rsi,[rip+0xac0e]        # 419640 <__bss_start@@Base+0x14e4>
  40ea32:	mov    rdi,QWORD PTR [rsi+rax*8]
  40ea36:	add    rdi,0x1
  40ea3a:	mov    QWORD PTR [rsi+rax*8],rdi
  40ea3e:	test   dl,0x1
  40ea41:	jne    40ea4c <next@@Base+0x17bc>
  40ea47:	jmp    40ea56 <next@@Base+0x17c6>
  40ea4c:	mov    edi,0x1
  40ea51:	call   403230 <exit@plt>
  40ea56:	mov    al,BYTE PTR [rbp-0x229]
  40ea5c:	mov    ecx,DWORD PTR [rbp-0x21c]
  40ea62:	mov    edx,ecx
  40ea64:	add    edx,0x1
  40ea67:	mov    DWORD PTR [rbp-0x21c],edx
  40ea6d:	movsxd rsi,ecx
  40ea70:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40ea77:	mov    rdi,QWORD PTR [rbp-0x10]
  40ea7b:	call   40d0f0 <get_char@@Base>
  40ea80:	mov    ecx,0x7c
  40ea85:	mov    esi,ecx
  40ea87:	mov    ecx,0x7b
  40ea8c:	mov    edi,ecx
  40ea8e:	mov    BYTE PTR [rbp-0x229],al
  40ea94:	movsx  ecx,BYTE PTR [rbp-0x229]
  40ea9b:	cmp    ecx,0x74
  40ea9e:	setne  al
  40eaa1:	cmp    ecx,0x74
  40eaa4:	cmovne rsi,rdi
  40eaa8:	lea    rdi,[rip+0xab91]        # 419640 <__bss_start@@Base+0x14e4>
  40eaaf:	mov    r8,QWORD PTR [rdi+rsi*8]
  40eab3:	add    r8,0x1
  40eab7:	mov    QWORD PTR [rdi+rsi*8],r8
  40eabb:	test   al,0x1
  40eabd:	jne    40eac8 <next@@Base+0x1838>
  40eac3:	jmp    40ead2 <next@@Base+0x1842>
  40eac8:	mov    edi,0x1
  40eacd:	call   403230 <exit@plt>
  40ead2:	mov    al,BYTE PTR [rbp-0x229]
  40ead8:	mov    ecx,DWORD PTR [rbp-0x21c]
  40eade:	mov    edx,ecx
  40eae0:	add    edx,0x1
  40eae3:	mov    DWORD PTR [rbp-0x21c],edx
  40eae9:	movsxd rsi,ecx
  40eaec:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40eaf3:	mov    rdi,QWORD PTR [rbp-0x10]
  40eaf7:	call   40d0f0 <get_char@@Base>
  40eafc:	mov    ecx,0x7e
  40eb01:	mov    esi,ecx
  40eb03:	mov    ecx,0x7d
  40eb08:	mov    edi,ecx
  40eb0a:	mov    BYTE PTR [rbp-0x229],al
  40eb10:	movsx  ecx,BYTE PTR [rbp-0x229]
  40eb17:	cmp    ecx,0x75
  40eb1a:	setne  al
  40eb1d:	cmp    ecx,0x75
  40eb20:	cmovne rsi,rdi
  40eb24:	lea    rdi,[rip+0xab15]        # 419640 <__bss_start@@Base+0x14e4>
  40eb2b:	mov    r8,QWORD PTR [rdi+rsi*8]
  40eb2f:	add    r8,0x1
  40eb33:	mov    QWORD PTR [rdi+rsi*8],r8
  40eb37:	test   al,0x1
  40eb39:	jne    40eb44 <next@@Base+0x18b4>
  40eb3f:	jmp    40eb4e <next@@Base+0x18be>
  40eb44:	mov    edi,0x1
  40eb49:	call   403230 <exit@plt>
  40eb4e:	mov    al,BYTE PTR [rbp-0x229]
  40eb54:	mov    ecx,DWORD PTR [rbp-0x21c]
  40eb5a:	mov    edx,ecx
  40eb5c:	add    edx,0x1
  40eb5f:	mov    DWORD PTR [rbp-0x21c],edx
  40eb65:	movsxd rsi,ecx
  40eb68:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40eb6f:	mov    rdi,QWORD PTR [rbp-0x10]
  40eb73:	call   40d0f0 <get_char@@Base>
  40eb78:	mov    ecx,0x80
  40eb7d:	mov    esi,ecx
  40eb7f:	mov    ecx,0x7f
  40eb84:	mov    edi,ecx
  40eb86:	mov    BYTE PTR [rbp-0x229],al
  40eb8c:	movsx  ecx,BYTE PTR [rbp-0x229]
  40eb93:	cmp    ecx,0x72
  40eb96:	setne  al
  40eb99:	cmp    ecx,0x72
  40eb9c:	cmovne rsi,rdi
  40eba0:	lea    rdi,[rip+0xaa99]        # 419640 <__bss_start@@Base+0x14e4>
  40eba7:	mov    r8,QWORD PTR [rdi+rsi*8]
  40ebab:	add    r8,0x1
  40ebaf:	mov    QWORD PTR [rdi+rsi*8],r8
  40ebb3:	test   al,0x1
  40ebb5:	jne    40ebc0 <next@@Base+0x1930>
  40ebbb:	jmp    40ebca <next@@Base+0x193a>
  40ebc0:	mov    edi,0x1
  40ebc5:	call   403230 <exit@plt>
  40ebca:	mov    al,BYTE PTR [rbp-0x229]
  40ebd0:	mov    ecx,DWORD PTR [rbp-0x21c]
  40ebd6:	mov    edx,ecx
  40ebd8:	add    edx,0x1
  40ebdb:	mov    DWORD PTR [rbp-0x21c],edx
  40ebe1:	movsxd rsi,ecx
  40ebe4:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40ebeb:	mov    rdi,QWORD PTR [rbp-0x10]
  40ebef:	call   40d0f0 <get_char@@Base>
  40ebf4:	mov    ecx,0x82
  40ebf9:	mov    esi,ecx
  40ebfb:	mov    ecx,0x81
  40ec00:	mov    edi,ecx
  40ec02:	mov    BYTE PTR [rbp-0x229],al
  40ec08:	movsx  ecx,BYTE PTR [rbp-0x229]
  40ec0f:	cmp    ecx,0x6e
  40ec12:	setne  al
  40ec15:	cmp    ecx,0x6e
  40ec18:	cmovne rsi,rdi
  40ec1c:	lea    rdi,[rip+0xaa1d]        # 419640 <__bss_start@@Base+0x14e4>
  40ec23:	mov    r8,QWORD PTR [rdi+rsi*8]
  40ec27:	add    r8,0x1
  40ec2b:	mov    QWORD PTR [rdi+rsi*8],r8
  40ec2f:	test   al,0x1
  40ec31:	jne    40ec3c <next@@Base+0x19ac>
  40ec37:	jmp    40ec46 <next@@Base+0x19b6>
  40ec3c:	mov    edi,0x1
  40ec41:	call   403230 <exit@plt>
  40ec46:	mov    eax,0x4
  40ec4b:	mov    edi,eax
  40ec4d:	mov    rcx,QWORD PTR [rip+0xae04]        # 419a58 <__bss_start@@Base+0x18fc>
  40ec54:	add    rcx,0x1
  40ec58:	mov    QWORD PTR [rip+0xadf9],rcx        # 419a58 <__bss_start@@Base+0x18fc>
  40ec5f:	call   403190 <malloc@plt>
  40ec64:	mov    QWORD PTR [rbp-0x238],rax
  40ec6b:	mov    rax,QWORD PTR [rbp-0x238]
  40ec72:	mov    rdi,rax
  40ec75:	call   40c520 <init_token_return@@Base>
  40ec7a:	mov    rax,QWORD PTR [rbp-0x238]
  40ec81:	mov    QWORD PTR [rbp-0x8],rax
  40ec85:	jmp    40ee96 <next@@Base+0x1c06>
  40ec8a:	lea    rax,[rip+0x8f1f]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40ec91:	add    rax,0x60
  40ec95:	lea    rdi,[rip+0x94b4]        # 418150 <__data_start@@Base+0x18>
  40ec9c:	mov    rsi,rax
  40ec9f:	call   40eec0 <next@@Base+0x1c30>
  40eca4:	mov    ecx,0x85
  40eca9:	mov    eax,ecx
  40ecab:	mov    ecx,0x84
  40ecb0:	mov    esi,ecx
  40ecb2:	movsx  ecx,BYTE PTR [rbp-0x229]
  40ecb9:	cmp    ecx,0x6c
  40ecbc:	setne  dl
  40ecbf:	cmp    ecx,0x6c
  40ecc2:	cmovne rax,rsi
  40ecc6:	lea    rsi,[rip+0xa973]        # 419640 <__bss_start@@Base+0x14e4>
  40eccd:	mov    rdi,QWORD PTR [rsi+rax*8]
  40ecd1:	add    rdi,0x1
  40ecd5:	mov    QWORD PTR [rsi+rax*8],rdi
  40ecd9:	test   dl,0x1
  40ecdc:	jne    40ece7 <next@@Base+0x1a57>
  40ece2:	jmp    40ecf1 <next@@Base+0x1a61>
  40ece7:	mov    edi,0x1
  40ecec:	call   403230 <exit@plt>
  40ecf1:	mov    al,BYTE PTR [rbp-0x229]
  40ecf7:	mov    ecx,DWORD PTR [rbp-0x21c]
  40ecfd:	mov    edx,ecx
  40ecff:	add    edx,0x1
  40ed02:	mov    DWORD PTR [rbp-0x21c],edx
  40ed08:	movsxd rsi,ecx
  40ed0b:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40ed12:	mov    rdi,QWORD PTR [rbp-0x10]
  40ed16:	call   40d0f0 <get_char@@Base>
  40ed1b:	mov    ecx,0x87
  40ed20:	mov    esi,ecx
  40ed22:	mov    ecx,0x86
  40ed27:	mov    edi,ecx
  40ed29:	mov    BYTE PTR [rbp-0x229],al
  40ed2f:	movsx  ecx,BYTE PTR [rbp-0x229]
  40ed36:	cmp    ecx,0x73
  40ed39:	setne  al
  40ed3c:	cmp    ecx,0x73
  40ed3f:	cmovne rsi,rdi
  40ed43:	lea    rdi,[rip+0xa8f6]        # 419640 <__bss_start@@Base+0x14e4>
  40ed4a:	mov    r8,QWORD PTR [rdi+rsi*8]
  40ed4e:	add    r8,0x1
  40ed52:	mov    QWORD PTR [rdi+rsi*8],r8
  40ed56:	test   al,0x1
  40ed58:	jne    40ed63 <next@@Base+0x1ad3>
  40ed5e:	jmp    40ed6d <next@@Base+0x1add>
  40ed63:	mov    edi,0x1
  40ed68:	call   403230 <exit@plt>
  40ed6d:	mov    al,BYTE PTR [rbp-0x229]
  40ed73:	mov    ecx,DWORD PTR [rbp-0x21c]
  40ed79:	mov    edx,ecx
  40ed7b:	add    edx,0x1
  40ed7e:	mov    DWORD PTR [rbp-0x21c],edx
  40ed84:	movsxd rsi,ecx
  40ed87:	mov    BYTE PTR [rbp+rsi*1-0x210],al
  40ed8e:	mov    rdi,QWORD PTR [rbp-0x10]
  40ed92:	call   40d0f0 <get_char@@Base>
  40ed97:	mov    ecx,0x89
  40ed9c:	mov    esi,ecx
  40ed9e:	mov    ecx,0x88
  40eda3:	mov    edi,ecx
  40eda5:	mov    BYTE PTR [rbp-0x229],al
  40edab:	movsx  ecx,BYTE PTR [rbp-0x229]
  40edb2:	cmp    ecx,0x65
  40edb5:	setne  al
  40edb8:	cmp    ecx,0x65
  40edbb:	cmovne rsi,rdi
  40edbf:	lea    rdi,[rip+0xa87a]        # 419640 <__bss_start@@Base+0x14e4>
  40edc6:	mov    r8,QWORD PTR [rdi+rsi*8]
  40edca:	add    r8,0x1
  40edce:	mov    QWORD PTR [rdi+rsi*8],r8
  40edd2:	test   al,0x1
  40edd4:	jne    40eddf <next@@Base+0x1b4f>
  40edda:	jmp    40ede9 <next@@Base+0x1b59>
  40eddf:	mov    edi,0x1
  40ede4:	call   403230 <exit@plt>
  40ede9:	mov    eax,0x4
  40edee:	mov    edi,eax
  40edf0:	mov    rcx,QWORD PTR [rip+0xac99]        # 419a90 <__bss_start@@Base+0x1934>
  40edf7:	add    rcx,0x1
  40edfb:	mov    QWORD PTR [rip+0xac8e],rcx        # 419a90 <__bss_start@@Base+0x1934>
  40ee02:	call   403190 <malloc@plt>
  40ee07:	mov    QWORD PTR [rbp-0x238],rax
  40ee0e:	mov    rax,QWORD PTR [rbp-0x238]
  40ee15:	mov    rdi,rax
  40ee18:	call   40c620 <init_token_else@@Base>
  40ee1d:	mov    rax,QWORD PTR [rbp-0x238]
  40ee24:	mov    QWORD PTR [rbp-0x8],rax
  40ee28:	jmp    40ee96 <next@@Base+0x1c06>
  40ee2d:	lea    rdi,[rip+0x931c]        # 418150 <__data_start@@Base+0x18>
  40ee34:	lea    rsi,[rip+0x8d75]        # 417bb0 <UnitySizeMask@@Base+0x53a0>
  40ee3b:	call   40eec0 <next@@Base+0x1c30>
  40ee40:	mov    rsi,QWORD PTR [rip+0xac51]        # 419a98 <__bss_start@@Base+0x193c>
  40ee47:	add    rsi,0x1
  40ee4b:	mov    QWORD PTR [rip+0xac46],rsi        # 419a98 <__bss_start@@Base+0x193c>
  40ee52:	jmp    40d3cf <next@@Base+0x13f>
  40ee57:	mov    eax,0x4
  40ee5c:	mov    edi,eax
  40ee5e:	mov    rcx,QWORD PTR [rip+0xac3b]        # 419aa0 <__bss_start@@Base+0x1944>
  40ee65:	add    rcx,0x1
  40ee69:	mov    QWORD PTR [rip+0xac30],rcx        # 419aa0 <__bss_start@@Base+0x1944>
  40ee70:	call   403190 <malloc@plt>
  40ee75:	mov    QWORD PTR [rbp-0x238],rax
  40ee7c:	mov    rax,QWORD PTR [rbp-0x238]
  40ee83:	mov    rdi,rax
  40ee86:	call   40c5a0 <init_token_eof@@Base>
  40ee8b:	mov    rax,QWORD PTR [rbp-0x238]
  40ee92:	mov    QWORD PTR [rbp-0x8],rax
  40ee96:	mov    rax,QWORD PTR [rip+0xac0b]        # 419aa8 <__bss_start@@Base+0x194c>
  40ee9d:	add    rax,0x1
  40eea1:	mov    QWORD PTR [rip+0xac00],rax        # 419aa8 <__bss_start@@Base+0x194c>
  40eea8:	mov    rax,QWORD PTR [rbp-0x8]
  40eeac:	add    rsp,0x290
  40eeb3:	pop    rbp
  40eeb4:	ret    
  40eeb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eebf:	nop
  40eec0:	mov    eax,DWORD PTR [rdi]
  40eec2:	cmp    eax,0xffffffff
  40eec5:	mov    QWORD PTR [rsp-0x8],rsi
  40eeca:	mov    DWORD PTR [rsp-0xc],eax
  40eece:	je     40ef03 <next@@Base+0x1c73>
  40eed4:	mov    eax,DWORD PTR [rsp-0xc]
  40eed8:	mov    ecx,eax
  40eeda:	mov    edx,ecx
  40eedc:	mov    rsi,QWORD PTR [rsp-0x8]
  40eee1:	mov    rdx,QWORD PTR [rsi+rdx*8]
  40eee5:	cmp    rdx,0x0
  40eee9:	mov    QWORD PTR [rsp-0x18],rdx
  40eeee:	je     40ef03 <next@@Base+0x1c73>
  40eef4:	mov    rax,QWORD PTR [rsp-0x18]
  40eef9:	mov    rcx,QWORD PTR [rax]
  40eefc:	add    rcx,0x1
  40ef00:	mov    QWORD PTR [rax],rcx
  40ef03:	ret    
  40ef04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef0e:	xchg   ax,ax
  40ef10:	sub    rsp,0x38
  40ef14:	xor    eax,eax
  40ef16:	mov    DWORD PTR [rsp+0x34],eax
  40ef1a:	jmp    40ef1f <next@@Base+0x1c8f>
  40ef1f:	mov    eax,DWORD PTR [rsp+0x34]
  40ef23:	movsxd rcx,eax
  40ef26:	imul   rcx,rcx,0x30
  40ef2a:	lea    rdx,[rip+0x8e9f]        # 417dd0 <UnitySizeMask@@Base+0x55c0>
  40ef31:	add    rdx,rcx
  40ef34:	mov    rdi,QWORD PTR [rdx]
  40ef37:	mov    rsi,QWORD PTR [rdx+0x8]
  40ef3b:	mov    r8d,DWORD PTR [rdx+0x10]
  40ef3f:	mov    QWORD PTR [rsp+0x28],rdx
  40ef44:	mov    edx,r8d
  40ef47:	mov    DWORD PTR [rsp+0x24],eax
  40ef4b:	call   40f730 <next@@Base+0x24a0>
  40ef50:	xor    eax,eax
  40ef52:	mov    rcx,QWORD PTR [rsp+0x28]
  40ef57:	mov    edx,DWORD PTR [rcx+0x18]
  40ef5a:	mov    rsi,QWORD PTR [rcx+0x20]
  40ef5e:	mov    rdi,QWORD PTR [rcx+0x28]
  40ef62:	cmp    eax,edx
  40ef64:	mov    QWORD PTR [rsp+0x18],rdi
  40ef69:	mov    DWORD PTR [rsp+0x14],edx
  40ef6d:	mov    QWORD PTR [rsp+0x8],rsi
  40ef72:	mov    DWORD PTR [rsp+0x4],eax
  40ef76:	jge    40efe7 <next@@Base+0x1d57>
  40ef7c:	mov    eax,DWORD PTR [rsp+0x4]
  40ef80:	movsxd rcx,eax
  40ef83:	shl    rcx,0x5
  40ef87:	mov    rdx,QWORD PTR [rsp+0x8]
  40ef8c:	add    rdx,rcx
  40ef8f:	mov    edi,DWORD PTR [rdx]
  40ef91:	mov    rsi,QWORD PTR [rdx+0x8]
  40ef95:	mov    r8d,DWORD PTR [rdx+0x10]
  40ef99:	mov    r9b,BYTE PTR [rdx+0x14]
  40ef9d:	mov    r10d,DWORD PTR [rdx+0x18]
  40efa1:	mov    edx,r8d
  40efa4:	movzx  ecx,r9b
  40efa8:	mov    r8d,r10d
  40efab:	mov    DWORD PTR [rsp],eax
  40efae:	call   40fb80 <next@@Base+0x28f0>
  40efb3:	mov    eax,DWORD PTR [rsp]
  40efb6:	movsxd rsi,eax
  40efb9:	shl    rsi,0x4
  40efbd:	mov    r11,QWORD PTR [rsp+0x18]
  40efc2:	add    r11,rsi
  40efc5:	mov    edi,DWORD PTR [r11]
  40efc8:	mov    rsi,QWORD PTR [r11+0x8]
  40efcc:	call   40ffb0 <next@@Base+0x2d20>
  40efd1:	mov    eax,DWORD PTR [rsp]
  40efd4:	add    eax,0x1
  40efd7:	mov    ecx,DWORD PTR [rsp+0x14]
  40efdb:	cmp    eax,ecx
  40efdd:	mov    DWORD PTR [rsp+0x4],eax
  40efe1:	jl     40ef7c <next@@Base+0x1cec>
  40efe7:	call   4103d0 <next@@Base+0x3140>
  40efec:	call   410b70 <next@@Base+0x38e0>
  40eff1:	mov    eax,DWORD PTR [rsp+0x24]
  40eff5:	add    eax,0x1
  40eff8:	cmp    eax,0x1
  40effb:	mov    DWORD PTR [rsp+0x34],eax
  40efff:	jl     40ef1f <next@@Base+0x1c8f>
  40f005:	add    rsp,0x38
  40f009:	ret    
  40f00a:	nop    WORD PTR [rax+rax*1+0x0]
  40f010:	push   rax
  40f011:	call   40ef10 <next@@Base+0x1c80>
  40f016:	mov    QWORD PTR [rip+0xa577],0x0        # 419598 <__bss_start@@Base+0x143c>
  40f021:	mov    QWORD PTR [rip+0xa564],0x0        # 419590 <__bss_start@@Base+0x1434>
  40f02c:	mov    QWORD PTR [rip+0xa589],0x0        # 4195c0 <__bss_start@@Base+0x1464>
  40f037:	mov    QWORD PTR [rip+0xa576],0x0        # 4195b8 <__bss_start@@Base+0x145c>
  40f042:	mov    QWORD PTR [rip+0xa563],0x0        # 4195b0 <__bss_start@@Base+0x1454>
  40f04d:	mov    QWORD PTR [rip+0xa550],0x0        # 4195a8 <__bss_start@@Base+0x144c>
  40f058:	mov    QWORD PTR [rip+0xa53d],0x0        # 4195a0 <__bss_start@@Base+0x1444>
  40f063:	mov    QWORD PTR [rip+0xa562],0x0        # 4195d0 <__bss_start@@Base+0x1474>
  40f06e:	mov    QWORD PTR [rip+0xa54f],0x0        # 4195c8 <__bss_start@@Base+0x146c>
  40f079:	mov    QWORD PTR [rip+0xa55c],0x0        # 4195e0 <__bss_start@@Base+0x1484>
  40f084:	mov    QWORD PTR [rip+0xa549],0x0        # 4195d8 <__bss_start@@Base+0x147c>
  40f08f:	mov    QWORD PTR [rip+0xa556],0x0        # 4195f0 <__bss_start@@Base+0x1494>
  40f09a:	mov    QWORD PTR [rip+0xa543],0x0        # 4195e8 <__bss_start@@Base+0x148c>
  40f0a5:	mov    QWORD PTR [rip+0xa570],0x0        # 419620 <__bss_start@@Base+0x14c4>
  40f0b0:	mov    QWORD PTR [rip+0xa55d],0x0        # 419618 <__bss_start@@Base+0x14bc>
  40f0bb:	mov    QWORD PTR [rip+0xa54a],0x0        # 419610 <__bss_start@@Base+0x14b4>
  40f0c6:	mov    QWORD PTR [rip+0xa537],0x0        # 419608 <__bss_start@@Base+0x14ac>
  40f0d1:	mov    QWORD PTR [rip+0xa524],0x0        # 419600 <__bss_start@@Base+0x14a4>
  40f0dc:	mov    QWORD PTR [rip+0xa549],0x0        # 419630 <__bss_start@@Base+0x14d4>
  40f0e7:	mov    QWORD PTR [rip+0xa536],0x0        # 419628 <__bss_start@@Base+0x14cc>
  40f0f2:	mov    QWORD PTR [rip+0xa73b],0x0        # 419838 <__bss_start@@Base+0x16dc>
  40f0fd:	mov    QWORD PTR [rip+0xa728],0x0        # 419830 <__bss_start@@Base+0x16d4>
  40f108:	mov    QWORD PTR [rip+0xa715],0x0        # 419828 <__bss_start@@Base+0x16cc>
  40f113:	mov    QWORD PTR [rip+0xa702],0x0        # 419820 <__bss_start@@Base+0x16c4>
  40f11e:	mov    QWORD PTR [rip+0xa6ef],0x0        # 419818 <__bss_start@@Base+0x16bc>
  40f129:	mov    QWORD PTR [rip+0xa6dc],0x0        # 419810 <__bss_start@@Base+0x16b4>
  40f134:	mov    QWORD PTR [rip+0xa6c9],0x0        # 419808 <__bss_start@@Base+0x16ac>
  40f13f:	mov    QWORD PTR [rip+0xa6b6],0x0        # 419800 <__bss_start@@Base+0x16a4>
  40f14a:	mov    QWORD PTR [rip+0xa6a3],0x0        # 4197f8 <__bss_start@@Base+0x169c>
  40f155:	mov    QWORD PTR [rip+0xa690],0x0        # 4197f0 <__bss_start@@Base+0x1694>
  40f160:	mov    QWORD PTR [rip+0xa67d],0x0        # 4197e8 <__bss_start@@Base+0x168c>
  40f16b:	mov    QWORD PTR [rip+0xa66a],0x0        # 4197e0 <__bss_start@@Base+0x1684>
  40f176:	mov    QWORD PTR [rip+0xa657],0x0        # 4197d8 <__bss_start@@Base+0x167c>
  40f181:	mov    QWORD PTR [rip+0xa644],0x0        # 4197d0 <__bss_start@@Base+0x1674>
  40f18c:	mov    QWORD PTR [rip+0xa631],0x0        # 4197c8 <__bss_start@@Base+0x166c>
  40f197:	mov    QWORD PTR [rip+0xa61e],0x0        # 4197c0 <__bss_start@@Base+0x1664>
  40f1a2:	mov    QWORD PTR [rip+0xa60b],0x0        # 4197b8 <__bss_start@@Base+0x165c>
  40f1ad:	mov    QWORD PTR [rip+0xa5f8],0x0        # 4197b0 <__bss_start@@Base+0x1654>
  40f1b8:	mov    QWORD PTR [rip+0xa5e5],0x0        # 4197a8 <__bss_start@@Base+0x164c>
  40f1c3:	mov    QWORD PTR [rip+0xa5d2],0x0        # 4197a0 <__bss_start@@Base+0x1644>
  40f1ce:	mov    QWORD PTR [rip+0xa5bf],0x0        # 419798 <__bss_start@@Base+0x163c>
  40f1d9:	mov    QWORD PTR [rip+0xa5ac],0x0        # 419790 <__bss_start@@Base+0x1634>
  40f1e4:	mov    QWORD PTR [rip+0xa599],0x0        # 419788 <__bss_start@@Base+0x162c>
  40f1ef:	mov    QWORD PTR [rip+0xa586],0x0        # 419780 <__bss_start@@Base+0x1624>
  40f1fa:	mov    QWORD PTR [rip+0xa573],0x0        # 419778 <__bss_start@@Base+0x161c>
  40f205:	mov    QWORD PTR [rip+0xa560],0x0        # 419770 <__bss_start@@Base+0x1614>
  40f210:	mov    QWORD PTR [rip+0xa54d],0x0        # 419768 <__bss_start@@Base+0x160c>
  40f21b:	mov    QWORD PTR [rip+0xa53a],0x0        # 419760 <__bss_start@@Base+0x1604>
  40f226:	mov    QWORD PTR [rip+0xa527],0x0        # 419758 <__bss_start@@Base+0x15fc>
  40f231:	mov    QWORD PTR [rip+0xa514],0x0        # 419750 <__bss_start@@Base+0x15f4>
  40f23c:	mov    QWORD PTR [rip+0xa501],0x0        # 419748 <__bss_start@@Base+0x15ec>
  40f247:	mov    QWORD PTR [rip+0xa4ee],0x0        # 419740 <__bss_start@@Base+0x15e4>
  40f252:	mov    QWORD PTR [rip+0xa4db],0x0        # 419738 <__bss_start@@Base+0x15dc>
  40f25d:	mov    QWORD PTR [rip+0xa4c8],0x0        # 419730 <__bss_start@@Base+0x15d4>
  40f268:	mov    QWORD PTR [rip+0xa4b5],0x0        # 419728 <__bss_start@@Base+0x15cc>
  40f273:	mov    QWORD PTR [rip+0xa4a2],0x0        # 419720 <__bss_start@@Base+0x15c4>
  40f27e:	mov    QWORD PTR [rip+0xa48f],0x0        # 419718 <__bss_start@@Base+0x15bc>
  40f289:	mov    QWORD PTR [rip+0xa47c],0x0        # 419710 <__bss_start@@Base+0x15b4>
  40f294:	mov    QWORD PTR [rip+0xa469],0x0        # 419708 <__bss_start@@Base+0x15ac>
  40f29f:	mov    QWORD PTR [rip+0xa456],0x0        # 419700 <__bss_start@@Base+0x15a4>
  40f2aa:	mov    QWORD PTR [rip+0xa443],0x0        # 4196f8 <__bss_start@@Base+0x159c>
  40f2b5:	mov    QWORD PTR [rip+0xa430],0x0        # 4196f0 <__bss_start@@Base+0x1594>
  40f2c0:	mov    QWORD PTR [rip+0xa41d],0x0        # 4196e8 <__bss_start@@Base+0x158c>
  40f2cb:	mov    QWORD PTR [rip+0xa40a],0x0        # 4196e0 <__bss_start@@Base+0x1584>
  40f2d6:	mov    QWORD PTR [rip+0xa3f7],0x0        # 4196d8 <__bss_start@@Base+0x157c>
  40f2e1:	mov    QWORD PTR [rip+0xa3e4],0x0        # 4196d0 <__bss_start@@Base+0x1574>
  40f2ec:	mov    QWORD PTR [rip+0xa3d1],0x0        # 4196c8 <__bss_start@@Base+0x156c>
  40f2f7:	mov    QWORD PTR [rip+0xa3be],0x0        # 4196c0 <__bss_start@@Base+0x1564>
  40f302:	mov    QWORD PTR [rip+0xa3ab],0x0        # 4196b8 <__bss_start@@Base+0x155c>
  40f30d:	mov    QWORD PTR [rip+0xa398],0x0        # 4196b0 <__bss_start@@Base+0x1554>
  40f318:	mov    QWORD PTR [rip+0xa385],0x0        # 4196a8 <__bss_start@@Base+0x154c>
  40f323:	mov    QWORD PTR [rip+0xa372],0x0        # 4196a0 <__bss_start@@Base+0x1544>
  40f32e:	mov    QWORD PTR [rip+0xa35f],0x0        # 419698 <__bss_start@@Base+0x153c>
  40f339:	mov    QWORD PTR [rip+0xa34c],0x0        # 419690 <__bss_start@@Base+0x1534>
  40f344:	mov    QWORD PTR [rip+0xa339],0x0        # 419688 <__bss_start@@Base+0x152c>
  40f34f:	mov    QWORD PTR [rip+0xa326],0x0        # 419680 <__bss_start@@Base+0x1524>
  40f35a:	mov    QWORD PTR [rip+0xa313],0x0        # 419678 <__bss_start@@Base+0x151c>
  40f365:	mov    QWORD PTR [rip+0xa300],0x0        # 419670 <__bss_start@@Base+0x1514>
  40f370:	mov    QWORD PTR [rip+0xa2ed],0x0        # 419668 <__bss_start@@Base+0x150c>
  40f37b:	mov    QWORD PTR [rip+0xa2da],0x0        # 419660 <__bss_start@@Base+0x1504>
  40f386:	mov    QWORD PTR [rip+0xa2c7],0x0        # 419658 <__bss_start@@Base+0x14fc>
  40f391:	mov    QWORD PTR [rip+0xa2b4],0x0        # 419650 <__bss_start@@Base+0x14f4>
  40f39c:	mov    QWORD PTR [rip+0xa2a1],0x0        # 419648 <__bss_start@@Base+0x14ec>
  40f3a7:	mov    QWORD PTR [rip+0xa28e],0x0        # 419640 <__bss_start@@Base+0x14e4>
  40f3b2:	mov    QWORD PTR [rip+0xa67b],0x0        # 419a38 <__bss_start@@Base+0x18dc>
  40f3bd:	mov    QWORD PTR [rip+0xa668],0x0        # 419a30 <__bss_start@@Base+0x18d4>
  40f3c8:	mov    QWORD PTR [rip+0xa655],0x0        # 419a28 <__bss_start@@Base+0x18cc>
  40f3d3:	mov    QWORD PTR [rip+0xa642],0x0        # 419a20 <__bss_start@@Base+0x18c4>
  40f3de:	mov    QWORD PTR [rip+0xa62f],0x0        # 419a18 <__bss_start@@Base+0x18bc>
  40f3e9:	mov    QWORD PTR [rip+0xa61c],0x0        # 419a10 <__bss_start@@Base+0x18b4>
  40f3f4:	mov    QWORD PTR [rip+0xa609],0x0        # 419a08 <__bss_start@@Base+0x18ac>
  40f3ff:	mov    QWORD PTR [rip+0xa5f6],0x0        # 419a00 <__bss_start@@Base+0x18a4>
  40f40a:	mov    QWORD PTR [rip+0xa5e3],0x0        # 4199f8 <__bss_start@@Base+0x189c>
  40f415:	mov    QWORD PTR [rip+0xa5d0],0x0        # 4199f0 <__bss_start@@Base+0x1894>
  40f420:	mov    QWORD PTR [rip+0xa5bd],0x0        # 4199e8 <__bss_start@@Base+0x188c>
  40f42b:	mov    QWORD PTR [rip+0xa5aa],0x0        # 4199e0 <__bss_start@@Base+0x1884>
  40f436:	mov    QWORD PTR [rip+0xa597],0x0        # 4199d8 <__bss_start@@Base+0x187c>
  40f441:	mov    QWORD PTR [rip+0xa584],0x0        # 4199d0 <__bss_start@@Base+0x1874>
  40f44c:	mov    QWORD PTR [rip+0xa571],0x0        # 4199c8 <__bss_start@@Base+0x186c>
  40f457:	mov    QWORD PTR [rip+0xa55e],0x0        # 4199c0 <__bss_start@@Base+0x1864>
  40f462:	mov    QWORD PTR [rip+0xa54b],0x0        # 4199b8 <__bss_start@@Base+0x185c>
  40f46d:	mov    QWORD PTR [rip+0xa538],0x0        # 4199b0 <__bss_start@@Base+0x1854>
  40f478:	mov    QWORD PTR [rip+0xa525],0x0        # 4199a8 <__bss_start@@Base+0x184c>
  40f483:	mov    QWORD PTR [rip+0xa512],0x0        # 4199a0 <__bss_start@@Base+0x1844>
  40f48e:	mov    QWORD PTR [rip+0xa4ff],0x0        # 419998 <__bss_start@@Base+0x183c>
  40f499:	mov    QWORD PTR [rip+0xa4ec],0x0        # 419990 <__bss_start@@Base+0x1834>
  40f4a4:	mov    QWORD PTR [rip+0xa4d9],0x0        # 419988 <__bss_start@@Base+0x182c>
  40f4af:	mov    QWORD PTR [rip+0xa4c6],0x0        # 419980 <__bss_start@@Base+0x1824>
  40f4ba:	mov    QWORD PTR [rip+0xa4b3],0x0        # 419978 <__bss_start@@Base+0x181c>
  40f4c5:	mov    QWORD PTR [rip+0xa4a0],0x0        # 419970 <__bss_start@@Base+0x1814>
  40f4d0:	mov    QWORD PTR [rip+0xa48d],0x0        # 419968 <__bss_start@@Base+0x180c>
  40f4db:	mov    QWORD PTR [rip+0xa47a],0x0        # 419960 <__bss_start@@Base+0x1804>
  40f4e6:	mov    QWORD PTR [rip+0xa467],0x0        # 419958 <__bss_start@@Base+0x17fc>
  40f4f1:	mov    QWORD PTR [rip+0xa454],0x0        # 419950 <__bss_start@@Base+0x17f4>
  40f4fc:	mov    QWORD PTR [rip+0xa441],0x0        # 419948 <__bss_start@@Base+0x17ec>
  40f507:	mov    QWORD PTR [rip+0xa42e],0x0        # 419940 <__bss_start@@Base+0x17e4>
  40f512:	mov    QWORD PTR [rip+0xa41b],0x0        # 419938 <__bss_start@@Base+0x17dc>
  40f51d:	mov    QWORD PTR [rip+0xa408],0x0        # 419930 <__bss_start@@Base+0x17d4>
  40f528:	mov    QWORD PTR [rip+0xa3f5],0x0        # 419928 <__bss_start@@Base+0x17cc>
  40f533:	mov    QWORD PTR [rip+0xa3e2],0x0        # 419920 <__bss_start@@Base+0x17c4>
  40f53e:	mov    QWORD PTR [rip+0xa3cf],0x0        # 419918 <__bss_start@@Base+0x17bc>
  40f549:	mov    QWORD PTR [rip+0xa3bc],0x0        # 419910 <__bss_start@@Base+0x17b4>
  40f554:	mov    QWORD PTR [rip+0xa3a9],0x0        # 419908 <__bss_start@@Base+0x17ac>
  40f55f:	mov    QWORD PTR [rip+0xa396],0x0        # 419900 <__bss_start@@Base+0x17a4>
  40f56a:	mov    QWORD PTR [rip+0xa383],0x0        # 4198f8 <__bss_start@@Base+0x179c>
  40f575:	mov    QWORD PTR [rip+0xa370],0x0        # 4198f0 <__bss_start@@Base+0x1794>
  40f580:	mov    QWORD PTR [rip+0xa35d],0x0        # 4198e8 <__bss_start@@Base+0x178c>
  40f58b:	mov    QWORD PTR [rip+0xa34a],0x0        # 4198e0 <__bss_start@@Base+0x1784>
  40f596:	mov    QWORD PTR [rip+0xa337],0x0        # 4198d8 <__bss_start@@Base+0x177c>
  40f5a1:	mov    QWORD PTR [rip+0xa324],0x0        # 4198d0 <__bss_start@@Base+0x1774>
  40f5ac:	mov    QWORD PTR [rip+0xa311],0x0        # 4198c8 <__bss_start@@Base+0x176c>
  40f5b7:	mov    QWORD PTR [rip+0xa2fe],0x0        # 4198c0 <__bss_start@@Base+0x1764>
  40f5c2:	mov    QWORD PTR [rip+0xa2eb],0x0        # 4198b8 <__bss_start@@Base+0x175c>
  40f5cd:	mov    QWORD PTR [rip+0xa2d8],0x0        # 4198b0 <__bss_start@@Base+0x1754>
  40f5d8:	mov    QWORD PTR [rip+0xa2c5],0x0        # 4198a8 <__bss_start@@Base+0x174c>
  40f5e3:	mov    QWORD PTR [rip+0xa2b2],0x0        # 4198a0 <__bss_start@@Base+0x1744>
  40f5ee:	mov    QWORD PTR [rip+0xa29f],0x0        # 419898 <__bss_start@@Base+0x173c>
  40f5f9:	mov    QWORD PTR [rip+0xa28c],0x0        # 419890 <__bss_start@@Base+0x1734>
  40f604:	mov    QWORD PTR [rip+0xa279],0x0        # 419888 <__bss_start@@Base+0x172c>
  40f60f:	mov    QWORD PTR [rip+0xa266],0x0        # 419880 <__bss_start@@Base+0x1724>
  40f61a:	mov    QWORD PTR [rip+0xa253],0x0        # 419878 <__bss_start@@Base+0x171c>
  40f625:	mov    QWORD PTR [rip+0xa240],0x0        # 419870 <__bss_start@@Base+0x1714>
  40f630:	mov    QWORD PTR [rip+0xa22d],0x0        # 419868 <__bss_start@@Base+0x170c>
  40f63b:	mov    QWORD PTR [rip+0xa21a],0x0        # 419860 <__bss_start@@Base+0x1704>
  40f646:	mov    QWORD PTR [rip+0xa207],0x0        # 419858 <__bss_start@@Base+0x16fc>
  40f651:	mov    QWORD PTR [rip+0xa1f4],0x0        # 419850 <__bss_start@@Base+0x16f4>
  40f65c:	mov    QWORD PTR [rip+0xa1e1],0x0        # 419848 <__bss_start@@Base+0x16ec>
  40f667:	mov    QWORD PTR [rip+0xa1ce],0x0        # 419840 <__bss_start@@Base+0x16e4>
  40f672:	mov    QWORD PTR [rip+0xa42b],0x0        # 419aa8 <__bss_start@@Base+0x194c>
  40f67d:	mov    QWORD PTR [rip+0xa418],0x0        # 419aa0 <__bss_start@@Base+0x1944>
  40f688:	mov    QWORD PTR [rip+0xa405],0x0        # 419a98 <__bss_start@@Base+0x193c>
  40f693:	mov    QWORD PTR [rip+0xa3f2],0x0        # 419a90 <__bss_start@@Base+0x1934>
  40f69e:	mov    QWORD PTR [rip+0xa3df],0x0        # 419a88 <__bss_start@@Base+0x192c>
  40f6a9:	mov    QWORD PTR [rip+0xa3cc],0x0        # 419a80 <__bss_start@@Base+0x1924>
  40f6b4:	mov    QWORD PTR [rip+0xa3b9],0x0        # 419a78 <__bss_start@@Base+0x191c>
  40f6bf:	mov    QWORD PTR [rip+0xa3a6],0x0        # 419a70 <__bss_start@@Base+0x1914>
  40f6ca:	mov    QWORD PTR [rip+0xa393],0x0        # 419a68 <__bss_start@@Base+0x190c>
  40f6d5:	mov    QWORD PTR [rip+0xa380],0x0        # 419a60 <__bss_start@@Base+0x1904>
  40f6e0:	mov    QWORD PTR [rip+0xa36d],0x0        # 419a58 <__bss_start@@Base+0x18fc>
  40f6eb:	mov    QWORD PTR [rip+0xa35a],0x0        # 419a50 <__bss_start@@Base+0x18f4>
  40f6f6:	mov    QWORD PTR [rip+0xa347],0x0        # 419a48 <__bss_start@@Base+0x18ec>
  40f701:	mov    QWORD PTR [rip+0xa334],0x0        # 419a40 <__bss_start@@Base+0x18e4>
  40f70c:	pop    rax
  40f70d:	ret    
  40f70e:	xchg   ax,ax
  40f710:	push   rax
  40f711:	lea    rdi,[rip+0xfffffffffffff7f8]        # 40ef10 <next@@Base+0x1c80>
  40f718:	lea    rsi,[rip+0xfffffffffffff8f1]        # 40f010 <next@@Base+0x1d80>
  40f71f:	call   410f30 <__gcov_flush@@Base+0xa0>
  40f724:	pop    rax
  40f725:	ret    
  40f726:	xchg   ax,ax
  40f728:	nop    DWORD PTR [rax+rax*1+0x0]
  40f730:	push   rbp
  40f731:	push   r15
  40f733:	push   r14
  40f735:	push   r13
  40f737:	push   r12
  40f739:	push   rbx
  40f73a:	sub    rsp,0x18
  40f73e:	mov    r14d,edx
  40f741:	mov    r15,rsi
  40f744:	mov    r12,rdi
  40f747:	lea    rdi,[rsp+0xc]
  40f74c:	lea    rsi,[rsp+0x10]
  40f751:	call   411270 <__gcov_flush@@Base+0x3e0>
  40f756:	test   rax,rax
  40f759:	je     40f793 <next@@Base+0x2503>
  40f75b:	mov    rbx,rax
  40f75e:	mov    r13,QWORD PTR [rsp+0x10]
  40f763:	mov    rdi,r12
  40f766:	call   4030d0 <strlen@plt>
  40f76b:	lea    rdi,[rax+r13*1]
  40f76f:	add    rdi,0x2
  40f773:	call   403190 <malloc@plt>
  40f778:	mov    rbp,rax
  40f77b:	mov    r8d,DWORD PTR [rsp+0xc]
  40f780:	mov    rdi,rax
  40f783:	mov    rsi,r12
  40f786:	mov    rdx,rbx
  40f789:	mov    rcx,r13
  40f78c:	call   411300 <__gcov_flush@@Base+0x470>
  40f791:	jmp    40f79e <next@@Base+0x250e>
  40f793:	mov    rdi,r12
  40f796:	call   403250 <strdup@plt>
  40f79b:	mov    rbp,rax
  40f79e:	mov    QWORD PTR [rip+0xa30b],rbp        # 419ab0 <__bss_start@@Base+0x1954>
  40f7a5:	mov    BYTE PTR [rip+0xa30c],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  40f7ac:	mov    esi,0x2
  40f7b1:	xor    eax,eax
  40f7b3:	mov    rdi,rbp
  40f7b6:	call   403200 <open@plt>
  40f7bb:	mov    DWORD PTR [rip+0x8993],eax        # 418154 <__data_start@@Base+0x1c>
  40f7c1:	cmp    eax,0xffffffff
  40f7c4:	je     40f7cf <next@@Base+0x253f>
  40f7c6:	lea    rbx,[rip+0x3886]        # 413053 <UnitySizeMask@@Base+0x843>
  40f7cd:	jmp    40f833 <next@@Base+0x25a3>
  40f7cf:	mov    BYTE PTR [rip+0xa2e2],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40f7d6:	mov    rdi,QWORD PTR [rip+0xa2d3]        # 419ab0 <__bss_start@@Base+0x1954>
  40f7dd:	mov    esi,0x42
  40f7e2:	mov    edx,0x1a4
  40f7e7:	xor    eax,eax
  40f7e9:	call   403200 <open@plt>
  40f7ee:	mov    DWORD PTR [rip+0x8960],eax        # 418154 <__data_start@@Base+0x1c>
  40f7f4:	lea    rbx,[rip+0x385c]        # 413057 <UnitySizeMask@@Base+0x847>
  40f7fb:	cmp    eax,0xffffffff
  40f7fe:	jne    40f833 <next@@Base+0x25a3>
  40f800:	mov    rdi,QWORD PTR [rip+0xa2a9]        # 419ab0 <__bss_start@@Base+0x1954>
  40f807:	call   411020 <__gcov_flush@@Base+0x190>
  40f80c:	mov    rdi,QWORD PTR [rip+0xa29d]        # 419ab0 <__bss_start@@Base+0x1954>
  40f813:	mov    esi,0x42
  40f818:	mov    edx,0x1a4
  40f81d:	xor    eax,eax
  40f81f:	call   403200 <open@plt>
  40f824:	mov    DWORD PTR [rip+0x892a],eax        # 418154 <__data_start@@Base+0x1c>
  40f82a:	cmp    eax,0xffffffff
  40f82d:	je     40fb29 <next@@Base+0x2899>
  40f833:	mov    edi,eax
  40f835:	call   4110e0 <__gcov_flush@@Base+0x250>
  40f83a:	mov    edi,DWORD PTR [rip+0x8914]        # 418154 <__data_start@@Base+0x1c>
  40f840:	mov    rsi,rbx
  40f843:	call   4031d0 <fdopen@plt>
  40f848:	mov    QWORD PTR [rip+0xa271],rax        # 419ac0 <__bss_start@@Base+0x1964>
  40f84f:	mov    QWORD PTR [rip+0xa26e],0x0        # 419ac8 <__bss_start@@Base+0x196c>
  40f85a:	mov    QWORD PTR [rip+0xa26b],0x0        # 419ad0 <__bss_start@@Base+0x1974>
  40f865:	mov    QWORD PTR [rip+0xa268],0x0        # 419ad8 <__bss_start@@Base+0x197c>
  40f870:	cmp    BYTE PTR [rip+0xa241],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40f877:	jne    40f8a7 <next@@Base+0x2617>
  40f879:	mov    edi,0x20000
  40f87e:	call   403190 <malloc@plt>
  40f883:	mov    r12,rax
  40f886:	mov    QWORD PTR [rip+0xa23b],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40f88d:	mov    QWORD PTR [rip+0xa238],0x20000        # 419ad0 <__bss_start@@Base+0x1974>
  40f898:	xor    esi,esi
  40f89a:	mov    edx,0x20000
  40f89f:	mov    rdi,rax
  40f8a2:	jmp    40f9c3 <next@@Base+0x2733>
  40f8a7:	xor    esi,esi
  40f8a9:	mov    edx,0x2
  40f8ae:	mov    rdi,rax
  40f8b1:	call   4031b0 <fseek@plt>
  40f8b6:	mov    rdi,QWORD PTR [rip+0xa203]        # 419ac0 <__bss_start@@Base+0x1964>
  40f8bd:	call   403150 <ftell@plt>
  40f8c2:	mov    QWORD PTR [rip+0xa22f],rax        # 419af8 <__bss_start@@Base+0x199c>
  40f8c9:	test   rax,rax
  40f8cc:	je     40f960 <next@@Base+0x26d0>
  40f8d2:	mov    r8d,DWORD PTR [rip+0x887b]        # 418154 <__data_start@@Base+0x1c>
  40f8d9:	xor    edi,edi
  40f8db:	mov    edx,0x3
  40f8e0:	mov    ecx,0x1
  40f8e5:	xor    r9d,r9d
  40f8e8:	mov    rsi,rax
  40f8eb:	call   4030e0 <mmap@plt>
  40f8f0:	mov    QWORD PTR [rip+0xa1d1],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40f8f7:	cmp    rax,0xffffffffffffffff
  40f8fb:	je     40f92c <next@@Base+0x269c>
  40f8fd:	mov    r12,rax
  40f900:	cmp    BYTE PTR [rip+0xa1b1],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  40f907:	jne    40f9c8 <next@@Base+0x2738>
  40f90d:	mov    rbx,QWORD PTR [rip+0xa1c4]        # 419ad8 <__bss_start@@Base+0x197c>
  40f914:	mov    DWORD PTR [r12+rbx*1],0x67636461
  40f91c:	add    rbx,0x4
  40f920:	mov    QWORD PTR [rip+0xa1b1],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40f927:	jmp    40fa2a <next@@Base+0x279a>
  40f92c:	call   403060 <__errno_location@plt>
  40f931:	mov    edi,DWORD PTR [rax]
  40f933:	mov    rax,QWORD PTR [rip+0x86b6]        # 417ff0 <stderr@GLIBC_2.2.5>
  40f93a:	mov    rbx,QWORD PTR [rax]
  40f93d:	mov    rbp,QWORD PTR [rip+0xa16c]        # 419ab0 <__bss_start@@Base+0x1954>
  40f944:	call   403260 <strerror@plt>
  40f949:	mov    rcx,rax
  40f94c:	lea    rsi,[rip+0x3862]        # 4131b5 <UnitySizeMask@@Base+0x9a5>
  40f953:	xor    eax,eax
  40f955:	mov    rdi,rbx
  40f958:	mov    rdx,rbp
  40f95b:	call   403140 <fprintf@plt>
  40f960:	mov    BYTE PTR [rip+0xa151],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40f967:	mov    QWORD PTR [rip+0xa156],0x0        # 419ac8 <__bss_start@@Base+0x196c>
  40f972:	mov    QWORD PTR [rip+0xa153],0x0        # 419ad0 <__bss_start@@Base+0x1974>
  40f97d:	mov    rbx,QWORD PTR [rip+0xa154]        # 419ad8 <__bss_start@@Base+0x197c>
  40f984:	cmp    rbx,0xfffffffffffe0000
  40f98b:	jne    40f992 <next@@Base+0x2702>
  40f98d:	xor    r12d,r12d
  40f990:	jmp    40f9b9 <next@@Base+0x2729>
  40f992:	add    rbx,0x3ffff
  40f999:	and    rbx,0xfffffffffffe0000
  40f9a0:	mov    rdi,rbx
  40f9a3:	call   403190 <malloc@plt>
  40f9a8:	mov    r12,rax
  40f9ab:	mov    QWORD PTR [rip+0xa116],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40f9b2:	mov    QWORD PTR [rip+0xa117],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40f9b9:	xor    esi,esi
  40f9bb:	mov    edx,0x20000
  40f9c0:	mov    rdi,r12
  40f9c3:	call   403120 <memset@plt>
  40f9c8:	mov    rbx,QWORD PTR [rip+0xa109]        # 419ad8 <__bss_start@@Base+0x197c>
  40f9cf:	lea    rax,[rbx+0x4]
  40f9d3:	cmp    rax,QWORD PTR [rip+0xa0f6]        # 419ad0 <__bss_start@@Base+0x1974>
  40f9da:	jbe    40fa44 <next@@Base+0x27b4>
  40f9dc:	add    rbx,0x20003
  40f9e3:	and    rbx,0xfffffffffffe0000
  40f9ea:	mov    rdi,r12
  40f9ed:	mov    rsi,rbx
  40f9f0:	call   4031c0 <realloc@plt>
  40f9f5:	mov    r12,rax
  40f9f8:	mov    QWORD PTR [rip+0xa0c9],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40f9ff:	mov    QWORD PTR [rip+0xa0ca],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40fa06:	mov    al,BYTE PTR [rip+0xa0ac]        # 419ab8 <__bss_start@@Base+0x195c>
  40fa0c:	mov    rbp,QWORD PTR [rip+0xa0c5]        # 419ad8 <__bss_start@@Base+0x197c>
  40fa13:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40fa1b:	lea    rbx,[rbp+0x4]
  40fa1f:	mov    QWORD PTR [rip+0xa0b2],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40fa26:	cmp    al,0x1
  40fa28:	je     40fa5e <next@@Base+0x27ce>
  40fa2a:	mov    eax,DWORD PTR [r15]
  40fa2d:	mov    DWORD PTR [r12+rbx*1],eax
  40fa31:	add    rbx,0x4
  40fa35:	mov    QWORD PTR [rip+0xa09c],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40fa3c:	mov    rax,rbx
  40fa3f:	jmp    40fb0b <next@@Base+0x287b>
  40fa44:	mov    rbp,QWORD PTR [rip+0xa08d]        # 419ad8 <__bss_start@@Base+0x197c>
  40fa4b:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40fa53:	lea    rbx,[rbp+0x4]
  40fa57:	mov    QWORD PTR [rip+0xa07a],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40fa5e:	lea    rax,[rbp+0x8]
  40fa62:	cmp    rax,QWORD PTR [rip+0xa067]        # 419ad0 <__bss_start@@Base+0x1974>
  40fa69:	jbe    40fabb <next@@Base+0x282b>
  40fa6b:	add    rbp,0x20007
  40fa72:	and    rbp,0xfffffffffffe0000
  40fa79:	mov    rdi,r12
  40fa7c:	mov    rsi,rbp
  40fa7f:	call   4031c0 <realloc@plt>
  40fa84:	mov    r12,rax
  40fa87:	mov    QWORD PTR [rip+0xa03a],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fa8e:	mov    QWORD PTR [rip+0xa03b],rbp        # 419ad0 <__bss_start@@Base+0x1974>
  40fa95:	mov    rbx,QWORD PTR [rip+0xa03c]        # 419ad8 <__bss_start@@Base+0x197c>
  40fa9c:	mov    cl,BYTE PTR [rip+0xa016]        # 419ab8 <__bss_start@@Base+0x195c>
  40faa2:	mov    eax,DWORD PTR [r15]
  40faa5:	mov    DWORD PTR [r12+rbx*1],eax
  40faa9:	lea    rax,[rbx+0x4]
  40faad:	mov    QWORD PTR [rip+0xa024],rax        # 419ad8 <__bss_start@@Base+0x197c>
  40fab4:	cmp    cl,0x1
  40fab7:	je     40facd <next@@Base+0x283d>
  40fab9:	jmp    40fb0b <next@@Base+0x287b>
  40fabb:	mov    eax,DWORD PTR [r15]
  40fabe:	mov    DWORD PTR [r12+rbx*1],eax
  40fac2:	lea    rax,[rbx+0x4]
  40fac6:	mov    QWORD PTR [rip+0xa00b],rax        # 419ad8 <__bss_start@@Base+0x197c>
  40facd:	lea    rcx,[rbx+0x8]
  40fad1:	cmp    rcx,QWORD PTR [rip+0x9ff8]        # 419ad0 <__bss_start@@Base+0x1974>
  40fad8:	jbe    40fb0b <next@@Base+0x287b>
  40fada:	add    rbx,0x20007
  40fae1:	and    rbx,0xfffffffffffe0000
  40fae8:	mov    rdi,r12
  40faeb:	mov    rsi,rbx
  40faee:	call   4031c0 <realloc@plt>
  40faf3:	mov    r12,rax
  40faf6:	mov    QWORD PTR [rip+0x9fcb],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fafd:	mov    QWORD PTR [rip+0x9fcc],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40fb04:	mov    rax,QWORD PTR [rip+0x9fcd]        # 419ad8 <__bss_start@@Base+0x197c>
  40fb0b:	mov    DWORD PTR [r12+rax*1],r14d
  40fb0f:	add    rax,0x4
  40fb13:	mov    QWORD PTR [rip+0x9fbe],rax        # 419ad8 <__bss_start@@Base+0x197c>
  40fb1a:	add    rsp,0x18
  40fb1e:	pop    rbx
  40fb1f:	pop    r12
  40fb21:	pop    r13
  40fb23:	pop    r14
  40fb25:	pop    r15
  40fb27:	pop    rbp
  40fb28:	ret    
  40fb29:	call   403060 <__errno_location@plt>
  40fb2e:	mov    edi,DWORD PTR [rax]
  40fb30:	mov    rax,QWORD PTR [rip+0x84b9]        # 417ff0 <stderr@GLIBC_2.2.5>
  40fb37:	mov    rbx,QWORD PTR [rax]
  40fb3a:	mov    rbp,QWORD PTR [rip+0x9f6f]        # 419ab0 <__bss_start@@Base+0x1954>
  40fb41:	call   403260 <strerror@plt>
  40fb46:	mov    rcx,rax
  40fb49:	lea    rsi,[rip+0x350b]        # 41305b <UnitySizeMask@@Base+0x84b>
  40fb50:	xor    eax,eax
  40fb52:	mov    rdi,rbx
  40fb55:	mov    rdx,rbp
  40fb58:	call   403140 <fprintf@plt>
  40fb5d:	jmp    40fb1a <next@@Base+0x288a>
  40fb5f:	nop
  40fb60:	mov    eax,DWORD PTR [rdi]
  40fb62:	mov    ecx,0xffffffff
  40fb67:	cmp    rax,rcx
  40fb6a:	je     40fb79 <next@@Base+0x28e9>
  40fb6c:	mov    rax,QWORD PTR [rsi+rax*8]
  40fb70:	test   rax,rax
  40fb73:	je     40fb79 <next@@Base+0x28e9>
  40fb75:	add    QWORD PTR [rax],0x1
  40fb79:	ret    
  40fb7a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb80:	push   rbp
  40fb81:	push   r15
  40fb83:	push   r14
  40fb85:	push   r13
  40fb87:	push   r12
  40fb89:	push   rbx
  40fb8a:	sub    rsp,0x18
  40fb8e:	xor    r14d,r14d
  40fb91:	test   cl,cl
  40fb93:	setne  al
  40fb96:	cmp    QWORD PTR [rip+0x9f22],0x0        # 419ac0 <__bss_start@@Base+0x1964>
  40fb9e:	je     40feb6 <next@@Base+0x2c26>
  40fba4:	mov    DWORD PTR [rsp+0xc],edi
  40fba8:	mov    DWORD PTR [rsp+0x10],edx
  40fbac:	mov    DWORD PTR [rsp+0x14],ecx
  40fbb0:	mov    DWORD PTR [rsp+0x8],r8d
  40fbb5:	mov    r15,rsi
  40fbb8:	mov    r14b,al
  40fbbb:	cmp    BYTE PTR [rip+0x9ef6],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40fbc2:	jne    40fc03 <next@@Base+0x2973>
  40fbc4:	mov    rbx,QWORD PTR [rip+0x9f0d]        # 419ad8 <__bss_start@@Base+0x197c>
  40fbcb:	lea    rax,[rbx+0x4]
  40fbcf:	cmp    rax,QWORD PTR [rip+0x9efa]        # 419ad0 <__bss_start@@Base+0x1974>
  40fbd6:	jbe    40fc03 <next@@Base+0x2973>
  40fbd8:	add    rbx,0x20003
  40fbdf:	and    rbx,0xfffffffffffe0000
  40fbe6:	mov    rdi,QWORD PTR [rip+0x9edb]        # 419ac8 <__bss_start@@Base+0x196c>
  40fbed:	mov    rsi,rbx
  40fbf0:	call   4031c0 <realloc@plt>
  40fbf5:	mov    QWORD PTR [rip+0x9ecc],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fbfc:	mov    QWORD PTR [rip+0x9ecd],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40fc03:	or     r14d,0x2
  40fc07:	mov    r12,QWORD PTR [rip+0x9eba]        # 419ac8 <__bss_start@@Base+0x196c>
  40fc0e:	mov    r13,QWORD PTR [rip+0x9ec3]        # 419ad8 <__bss_start@@Base+0x197c>
  40fc15:	mov    DWORD PTR [r12+r13*1],0x1000000
  40fc1d:	lea    rbx,[r13+0x4]
  40fc21:	mov    QWORD PTR [rip+0x9eb0],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40fc28:	test   r15,r15
  40fc2b:	je     40fc41 <next@@Base+0x29b1>
  40fc2d:	mov    rdi,r15
  40fc30:	call   4030d0 <strlen@plt>
  40fc35:	shr    rax,0x2
  40fc39:	lea    r14d,[r14+rax*1]
  40fc3d:	add    r14d,0x2
  40fc41:	cmp    BYTE PTR [rip+0x9e70],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  40fc48:	je     40fcaa <next@@Base+0x2a1a>
  40fc4a:	lea    rbp,[r13+0x8]
  40fc4e:	cmp    rbp,QWORD PTR [rip+0x9e7b]        # 419ad0 <__bss_start@@Base+0x1974>
  40fc55:	jbe    40fec5 <next@@Base+0x2c35>
  40fc5b:	add    r13,0x20007
  40fc62:	and    r13,0xfffffffffffe0000
  40fc69:	mov    rdi,r12
  40fc6c:	mov    rsi,r13
  40fc6f:	call   4031c0 <realloc@plt>
  40fc74:	mov    r12,rax
  40fc77:	mov    QWORD PTR [rip+0x9e4a],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fc7e:	mov    QWORD PTR [rip+0x9e4b],r13        # 419ad0 <__bss_start@@Base+0x1974>
  40fc85:	mov    rbx,QWORD PTR [rip+0x9e4c]        # 419ad8 <__bss_start@@Base+0x197c>
  40fc8c:	mov    al,BYTE PTR [rip+0x9e26]        # 419ab8 <__bss_start@@Base+0x195c>
  40fc92:	mov    DWORD PTR [r12+rbx*1],r14d
  40fc96:	lea    rbp,[rbx+0x4]
  40fc9a:	mov    QWORD PTR [rip+0x9e37],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fca1:	cmp    al,0x1
  40fca3:	jne    40fcbd <next@@Base+0x2a2d>
  40fca5:	jmp    40fed1 <next@@Base+0x2c41>
  40fcaa:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40fcaf:	add    r13,0x8
  40fcb3:	mov    QWORD PTR [rip+0x9e1e],r13        # 419ad8 <__bss_start@@Base+0x197c>
  40fcba:	mov    rbp,r13
  40fcbd:	mov    eax,DWORD PTR [rsp+0xc]
  40fcc1:	mov    DWORD PTR [r12+rbp*1],eax
  40fcc5:	add    rbp,0x4
  40fcc9:	mov    QWORD PTR [rip+0x9e08],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fcd0:	mov    rbx,rbp
  40fcd3:	mov    r13,r15
  40fcd6:	mov    r14d,DWORD PTR [rsp+0x14]
  40fcdb:	mov    r15d,DWORD PTR [rsp+0x10]
  40fce0:	lea    rbp,[rbx+0x4]
  40fce4:	mov    DWORD PTR [r12+rbx*1],r15d
  40fce8:	mov    QWORD PTR [rip+0x9de9],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fcef:	test   r14b,r14b
  40fcf2:	je     40fd4e <next@@Base+0x2abe>
  40fcf4:	cmp    BYTE PTR [rip+0x9dbd],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40fcfb:	jne    40fd3b <next@@Base+0x2aab>
  40fcfd:	lea    rax,[rbx+0x8]
  40fd01:	cmp    rax,QWORD PTR [rip+0x9dc8]        # 419ad0 <__bss_start@@Base+0x1974>
  40fd08:	jbe    40fd3b <next@@Base+0x2aab>
  40fd0a:	add    rbx,0x20007
  40fd11:	and    rbx,0xfffffffffffe0000
  40fd18:	mov    rdi,r12
  40fd1b:	mov    rsi,rbx
  40fd1e:	call   4031c0 <realloc@plt>
  40fd23:	mov    r12,rax
  40fd26:	mov    QWORD PTR [rip+0x9d9b],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fd2d:	mov    QWORD PTR [rip+0x9d9c],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40fd34:	mov    rbp,QWORD PTR [rip+0x9d9d]        # 419ad8 <__bss_start@@Base+0x197c>
  40fd3b:	mov    eax,DWORD PTR [rsp+0x8]
  40fd3f:	mov    DWORD PTR [r12+rbp*1],eax
  40fd43:	add    rbp,0x4
  40fd47:	mov    QWORD PTR [rip+0x9d8a],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fd4e:	test   r13,r13
  40fd51:	je     40feb6 <next@@Base+0x2c26>
  40fd57:	mov    rdi,r13
  40fd5a:	call   4030d0 <strlen@plt>
  40fd5f:	mov    rbx,rax
  40fd62:	shr    rbx,0x2
  40fd66:	add    ebx,0x1
  40fd69:	cmp    BYTE PTR [rip+0x9d48],0x1        # 419ab8 <__bss_start@@Base+0x195c>
  40fd70:	jne    40fdbc <next@@Base+0x2b2c>
  40fd72:	lea    rax,[rbp+0x4]
  40fd76:	mov    r14b,0x1
  40fd79:	cmp    rax,QWORD PTR [rip+0x9d50]        # 419ad0 <__bss_start@@Base+0x1974>
  40fd80:	jbe    40fdbf <next@@Base+0x2b2f>
  40fd82:	add    rbp,0x20003
  40fd89:	and    rbp,0xfffffffffffe0000
  40fd90:	mov    rdi,r12
  40fd93:	mov    rsi,rbp
  40fd96:	call   4031c0 <realloc@plt>
  40fd9b:	mov    r12,rax
  40fd9e:	mov    QWORD PTR [rip+0x9d23],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fda5:	mov    QWORD PTR [rip+0x9d24],rbp        # 419ad0 <__bss_start@@Base+0x1974>
  40fdac:	mov    r14b,BYTE PTR [rip+0x9d05]        # 419ab8 <__bss_start@@Base+0x195c>
  40fdb3:	mov    rbp,QWORD PTR [rip+0x9d1e]        # 419ad8 <__bss_start@@Base+0x197c>
  40fdba:	jmp    40fdbf <next@@Base+0x2b2f>
  40fdbc:	xor    r14d,r14d
  40fdbf:	mov    DWORD PTR [r12+rbp*1],ebx
  40fdc3:	add    rbp,0x4
  40fdc7:	mov    QWORD PTR [rip+0x9d0a],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fdce:	mov    rdi,r13
  40fdd1:	call   4030d0 <strlen@plt>
  40fdd6:	mov    rbx,rax
  40fdd9:	test   r14b,0x1
  40fddd:	je     40fe29 <next@@Base+0x2b99>
  40fddf:	lea    r15,[rbx+rbp*1]
  40fde3:	mov    r14b,0x1
  40fde6:	cmp    r15,QWORD PTR [rip+0x9ce3]        # 419ad0 <__bss_start@@Base+0x1974>
  40fded:	jbe    40fe2c <next@@Base+0x2b9c>
  40fdef:	add    r15,0x1ffff
  40fdf6:	and    r15,0xfffffffffffe0000
  40fdfd:	mov    rdi,r12
  40fe00:	mov    rsi,r15
  40fe03:	call   4031c0 <realloc@plt>
  40fe08:	mov    r12,rax
  40fe0b:	mov    QWORD PTR [rip+0x9cb6],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fe12:	mov    QWORD PTR [rip+0x9cb7],r15        # 419ad0 <__bss_start@@Base+0x1974>
  40fe19:	mov    rbp,QWORD PTR [rip+0x9cb8]        # 419ad8 <__bss_start@@Base+0x197c>
  40fe20:	mov    r14b,BYTE PTR [rip+0x9c91]        # 419ab8 <__bss_start@@Base+0x195c>
  40fe27:	jmp    40fe2c <next@@Base+0x2b9c>
  40fe29:	xor    r14d,r14d
  40fe2c:	lea    rdi,[r12+rbp*1]
  40fe30:	mov    rsi,r13
  40fe33:	mov    rdx,rbx
  40fe36:	call   403170 <memcpy@plt>
  40fe3b:	add    rbx,rbp
  40fe3e:	mov    QWORD PTR [rip+0x9c93],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40fe45:	mov    rdi,r13
  40fe48:	call   4030d0 <strlen@plt>
  40fe4d:	and    eax,0x3
  40fe50:	mov    ebp,0x4
  40fe55:	sub    rbp,rax
  40fe58:	test   r14b,0x1
  40fe5c:	je     40fe9c <next@@Base+0x2c0c>
  40fe5e:	lea    r14,[rbx+rbp*1]
  40fe62:	cmp    r14,QWORD PTR [rip+0x9c67]        # 419ad0 <__bss_start@@Base+0x1974>
  40fe69:	jbe    40fe9c <next@@Base+0x2c0c>
  40fe6b:	add    r14,0x1ffff
  40fe72:	and    r14,0xfffffffffffe0000
  40fe79:	mov    rdi,r12
  40fe7c:	mov    rsi,r14
  40fe7f:	call   4031c0 <realloc@plt>
  40fe84:	mov    r12,rax
  40fe87:	mov    QWORD PTR [rip+0x9c3a],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40fe8e:	mov    QWORD PTR [rip+0x9c3b],r14        # 419ad0 <__bss_start@@Base+0x1974>
  40fe95:	mov    rbx,QWORD PTR [rip+0x9c3c]        # 419ad8 <__bss_start@@Base+0x197c>
  40fe9c:	add    r12,rbx
  40fe9f:	xor    esi,esi
  40fea1:	mov    rdi,r12
  40fea4:	mov    rdx,rbp
  40fea7:	call   403120 <memset@plt>
  40feac:	add    rbx,rbp
  40feaf:	mov    QWORD PTR [rip+0x9c22],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40feb6:	add    rsp,0x18
  40feba:	pop    rbx
  40febb:	pop    r12
  40febd:	pop    r13
  40febf:	pop    r14
  40fec1:	pop    r15
  40fec3:	pop    rbp
  40fec4:	ret    
  40fec5:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40feca:	mov    QWORD PTR [rip+0x9c07],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  40fed1:	lea    rax,[rbx+0x8]
  40fed5:	cmp    rax,QWORD PTR [rip+0x9bf4]        # 419ad0 <__bss_start@@Base+0x1974>
  40fedc:	mov    r13,r15
  40fedf:	jbe    40ff3f <next@@Base+0x2caf>
  40fee1:	add    rbx,0x20007
  40fee8:	and    rbx,0xfffffffffffe0000
  40feef:	mov    rdi,r12
  40fef2:	mov    rsi,rbx
  40fef5:	call   4031c0 <realloc@plt>
  40fefa:	mov    r12,rax
  40fefd:	mov    QWORD PTR [rip+0x9bc4],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40ff04:	mov    QWORD PTR [rip+0x9bc5],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  40ff0b:	mov    rbp,QWORD PTR [rip+0x9bc6]        # 419ad8 <__bss_start@@Base+0x197c>
  40ff12:	mov    al,BYTE PTR [rip+0x9ba0]        # 419ab8 <__bss_start@@Base+0x195c>
  40ff18:	mov    ecx,DWORD PTR [rsp+0xc]
  40ff1c:	mov    DWORD PTR [r12+rbp*1],ecx
  40ff20:	lea    rbx,[rbp+0x4]
  40ff24:	mov    QWORD PTR [rip+0x9bad],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40ff2b:	cmp    al,0x1
  40ff2d:	mov    r14d,DWORD PTR [rsp+0x14]
  40ff32:	mov    r15d,DWORD PTR [rsp+0x10]
  40ff37:	jne    40fce0 <next@@Base+0x2a50>
  40ff3d:	jmp    40ff5c <next@@Base+0x2ccc>
  40ff3f:	mov    eax,DWORD PTR [rsp+0xc]
  40ff43:	mov    DWORD PTR [r12+rbp*1],eax
  40ff47:	lea    rbx,[rbp+0x4]
  40ff4b:	mov    QWORD PTR [rip+0x9b86],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  40ff52:	mov    r14d,DWORD PTR [rsp+0x14]
  40ff57:	mov    r15d,DWORD PTR [rsp+0x10]
  40ff5c:	lea    rax,[rbp+0x8]
  40ff60:	cmp    rax,QWORD PTR [rip+0x9b69]        # 419ad0 <__bss_start@@Base+0x1974>
  40ff67:	jbe    40fce0 <next@@Base+0x2a50>
  40ff6d:	add    rbp,0x20007
  40ff74:	and    rbp,0xfffffffffffe0000
  40ff7b:	mov    rdi,r12
  40ff7e:	mov    rsi,rbp
  40ff81:	call   4031c0 <realloc@plt>
  40ff86:	mov    r12,rax
  40ff89:	mov    QWORD PTR [rip+0x9b38],rax        # 419ac8 <__bss_start@@Base+0x196c>
  40ff90:	mov    QWORD PTR [rip+0x9b39],rbp        # 419ad0 <__bss_start@@Base+0x1974>
  40ff97:	mov    rbx,QWORD PTR [rip+0x9b3a]        # 419ad8 <__bss_start@@Base+0x197c>
  40ff9e:	jmp    40fce0 <next@@Base+0x2a50>
  40ffa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffad:	nop    DWORD PTR [rax]
  40ffb0:	push   rbp
  40ffb1:	push   r15
  40ffb3:	push   r14
  40ffb5:	push   r13
  40ffb7:	push   r12
  40ffb9:	push   rbx
  40ffba:	sub    rsp,0x18
  40ffbe:	cmp    QWORD PTR [rip+0x9afa],0x0        # 419ac0 <__bss_start@@Base+0x1964>
  40ffc6:	je     41006a <next@@Base+0x2dda>
  40ffcc:	mov    r13d,edi
  40ffcf:	mov    r14,QWORD PTR [rip+0x9b02]        # 419ad8 <__bss_start@@Base+0x197c>
  40ffd6:	cmp    BYTE PTR [rip+0x9adb],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  40ffdd:	mov    QWORD PTR [rsp+0x8],rsi
  40ffe2:	je     410079 <next@@Base+0x2de9>
  40ffe8:	lea    rbx,[r14+0x4]
  40ffec:	cmp    rbx,QWORD PTR [rip+0x9add]        # 419ad0 <__bss_start@@Base+0x1974>
  40fff3:	jbe    410101 <next@@Base+0x2e71>
  40fff9:	add    r14,0x20003
  410000:	and    r14,0xfffffffffffe0000
  410007:	mov    rdi,QWORD PTR [rip+0x9aba]        # 419ac8 <__bss_start@@Base+0x196c>
  41000e:	mov    rsi,r14
  410011:	call   4031c0 <realloc@plt>
  410016:	mov    rsi,QWORD PTR [rsp+0x8]
  41001b:	mov    r15,rax
  41001e:	mov    QWORD PTR [rip+0x9aa3],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410025:	mov    QWORD PTR [rip+0x9aa4],r14        # 419ad0 <__bss_start@@Base+0x1974>
  41002c:	mov    r14,QWORD PTR [rip+0x9aa5]        # 419ad8 <__bss_start@@Base+0x197c>
  410033:	mov    al,BYTE PTR [rip+0x9a7f]        # 419ab8 <__bss_start@@Base+0x195c>
  410039:	lea    rbx,[r14+0x4]
  41003d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  410045:	mov    QWORD PTR [rip+0x9a8c],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41004c:	lea    ebp,[r13+r13*1+0x0]
  410051:	xor    ecx,ecx
  410053:	mov    QWORD PTR [rsp],rcx
  410057:	mov    r12d,0x0
  41005d:	cmp    al,0x1
  41005f:	je     41011c <next@@Base+0x2e8c>
  410065:	jmp    41024f <next@@Base+0x2fbf>
  41006a:	add    rsp,0x18
  41006e:	pop    rbx
  41006f:	pop    r12
  410071:	pop    r13
  410073:	pop    r14
  410075:	pop    r15
  410077:	pop    rbp
  410078:	ret    
  410079:	mov    r15,QWORD PTR [rip+0x9a48]        # 419ac8 <__bss_start@@Base+0x196c>
  410080:	mov    ecx,DWORD PTR [r15+r14*1]
  410084:	lea    rbx,[r14+0x4]
  410088:	mov    QWORD PTR [rip+0x9a49],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41008f:	cmp    ecx,0xffffffff
  410092:	je     410175 <next@@Base+0x2ee5>
  410098:	cmp    ecx,0x1a10000
  41009e:	jne    410183 <next@@Base+0x2ef3>
  4100a4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  4100a9:	lea    rbp,[r14+0x8]
  4100ad:	mov    QWORD PTR [rip+0x9a24],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  4100b4:	cmp    ecx,0xffffffff
  4100b7:	je     41019d <next@@Base+0x2f0d>
  4100bd:	mov    eax,ecx
  4100bf:	shr    eax,1
  4100c1:	cmp    eax,r13d
  4100c4:	jne    41019d <next@@Base+0x2f0d>
  4100ca:	mov    r12d,r13d
  4100cd:	lea    rdi,[r12*8+0x0]
  4100d5:	call   403190 <malloc@plt>
  4100da:	test   r13d,r13d
  4100dd:	mov    rcx,rax
  4100e0:	mov    QWORD PTR [rsp],rax
  4100e4:	je     4101ca <next@@Base+0x2f3a>
  4100ea:	mov    eax,r12d
  4100ed:	and    eax,0x1
  4100f0:	cmp    r13d,0x1
  4100f4:	jne    4101d4 <next@@Base+0x2f44>
  4100fa:	xor    ecx,ecx
  4100fc:	jmp    410213 <next@@Base+0x2f83>
  410101:	mov    r15,QWORD PTR [rip+0x99c0]        # 419ac8 <__bss_start@@Base+0x196c>
  410108:	mov    DWORD PTR [r15+r14*1],0x1a10000
  410110:	mov    QWORD PTR [rip+0x99c1],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410117:	lea    ebp,[r13+r13*1+0x0]
  41011c:	lea    rax,[r14+0x8]
  410120:	cmp    rax,QWORD PTR [rip+0x99a9]        # 419ad0 <__bss_start@@Base+0x1974>
  410127:	jbe    410167 <next@@Base+0x2ed7>
  410129:	add    r14,0x20007
  410130:	and    r14,0xfffffffffffe0000
  410137:	mov    rdi,r15
  41013a:	mov    rsi,r14
  41013d:	call   4031c0 <realloc@plt>
  410142:	mov    rsi,QWORD PTR [rsp+0x8]
  410147:	mov    r15,rax
  41014a:	mov    QWORD PTR [rip+0x9977],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410151:	mov    QWORD PTR [rip+0x9978],r14        # 419ad0 <__bss_start@@Base+0x1974>
  410158:	xor    eax,eax
  41015a:	mov    QWORD PTR [rsp],rax
  41015e:	mov    rbx,QWORD PTR [rip+0x9973]        # 419ad8 <__bss_start@@Base+0x197c>
  410165:	jmp    41016d <next@@Base+0x2edd>
  410167:	xor    eax,eax
  410169:	mov    QWORD PTR [rsp],rax
  41016d:	xor    r12d,r12d
  410170:	jmp    41024f <next@@Base+0x2fbf>
  410175:	xor    r12d,r12d
  410178:	xor    eax,eax
  41017a:	mov    QWORD PTR [rsp],rax
  41017e:	jmp    410234 <next@@Base+0x2fa4>
  410183:	mov    rax,QWORD PTR [rip+0x7e66]        # 417ff0 <stderr@GLIBC_2.2.5>
  41018a:	mov    rdi,QWORD PTR [rax]
  41018d:	mov    rdx,QWORD PTR [rip+0x991c]        # 419ab0 <__bss_start@@Base+0x1954>
  410194:	lea    rsi,[rip+0x2ee0]        # 41307b <UnitySizeMask@@Base+0x86b>
  41019b:	jmp    4101b5 <next@@Base+0x2f25>
  41019d:	mov    rax,QWORD PTR [rip+0x7e4c]        # 417ff0 <stderr@GLIBC_2.2.5>
  4101a4:	mov    rdi,QWORD PTR [rax]
  4101a7:	mov    rdx,QWORD PTR [rip+0x9902]        # 419ab0 <__bss_start@@Base+0x1954>
  4101ae:	lea    rsi,[rip+0x2f10]        # 4130c5 <UnitySizeMask@@Base+0x8b5>
  4101b5:	xor    eax,eax
  4101b7:	add    rsp,0x18
  4101bb:	pop    rbx
  4101bc:	pop    r12
  4101be:	pop    r13
  4101c0:	pop    r14
  4101c2:	pop    r15
  4101c4:	pop    rbp
  4101c5:	jmp    403140 <fprintf@plt>
  4101ca:	mov    r12,rax
  4101cd:	mov    rsi,QWORD PTR [rsp+0x8]
  4101d2:	jmp    410234 <next@@Base+0x2fa4>
  4101d4:	mov    rbp,0xfffffffffffffff8
  4101db:	sub    rbp,r14
  4101de:	lea    rdx,[r15+r14*1]
  4101e2:	add    rdx,0x14
  4101e6:	sub    r12,rax
  4101e9:	xor    ecx,ecx
  4101eb:	mov    rdi,QWORD PTR [rsp]
  4101ef:	nop
  4101f0:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  4101f5:	mov    QWORD PTR [rdi+rcx*8],rsi
  4101f9:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  4101fe:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  410203:	add    rcx,0x2
  410207:	add    rbp,0xfffffffffffffff0
  41020b:	cmp    r12,rcx
  41020e:	jne    4101f0 <next@@Base+0x2f60>
  410210:	neg    rbp
  410213:	mov    rsi,QWORD PTR [rsp+0x8]
  410218:	test   rax,rax
  41021b:	mov    r12,QWORD PTR [rsp]
  41021f:	je     41022d <next@@Base+0x2f9d>
  410221:	mov    rax,QWORD PTR [r15+rbp*1]
  410225:	mov    QWORD PTR [r12+rcx*8],rax
  410229:	add    rbp,0x8
  41022d:	mov    QWORD PTR [rip+0x98a4],rbp        # 419ad8 <__bss_start@@Base+0x197c>
  410234:	mov    QWORD PTR [rip+0x989d],r14        # 419ad8 <__bss_start@@Base+0x197c>
  41023b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  410243:	mov    QWORD PTR [rip+0x988e],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41024a:	lea    ebp,[r13+r13*1+0x0]
  41024f:	mov    DWORD PTR [r15+rbx*1],ebp
  410253:	add    rbx,0x4
  410257:	mov    QWORD PTR [rip+0x987a],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41025e:	test   r13d,r13d
  410261:	je     4103af <next@@Base+0x311f>
  410267:	mov    edi,r13d
  41026a:	shl    rdi,0x3
  41026e:	xor    ebp,ebp
  410270:	mov    QWORD PTR [rsp+0x10],rdi
  410275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41027f:	nop
  410280:	test   r12,r12
  410283:	je     410290 <next@@Base+0x3000>
  410285:	mov    r14,QWORD PTR [r12+rbp*1]
  410289:	jmp    410293 <next@@Base+0x3003>
  41028b:	nop    DWORD PTR [rax+rax*1+0x0]
  410290:	xor    r14d,r14d
  410293:	add    r14,QWORD PTR [rsi+rbp*1]
  410297:	mov    QWORD PTR [rsi+rbp*1],r14
  41029b:	mov    r13,r14
  41029e:	shr    r13,0x20
  4102a2:	cmp    BYTE PTR [rip+0x980f],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  4102a9:	je     410320 <next@@Base+0x3090>
  4102ab:	lea    rax,[rbx+0x4]
  4102af:	mov    rcx,QWORD PTR [rip+0x981a]        # 419ad0 <__bss_start@@Base+0x1974>
  4102b6:	cmp    rax,rcx
  4102b9:	jbe    410340 <next@@Base+0x30b0>
  4102bf:	add    rbx,0x20003
  4102c6:	and    rbx,0xfffffffffffe0000
  4102cd:	mov    rdi,r15
  4102d0:	mov    rsi,rbx
  4102d3:	call   4031c0 <realloc@plt>
  4102d8:	mov    rdi,QWORD PTR [rsp+0x10]
  4102dd:	mov    rsi,QWORD PTR [rsp+0x8]
  4102e2:	mov    r15,rax
  4102e5:	mov    QWORD PTR [rip+0x97dc],rax        # 419ac8 <__bss_start@@Base+0x196c>
  4102ec:	mov    QWORD PTR [rip+0x97dd],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  4102f3:	movzx  edx,BYTE PTR [rip+0x97be]        # 419ab8 <__bss_start@@Base+0x195c>
  4102fa:	mov    rcx,rbx
  4102fd:	mov    rbx,QWORD PTR [rip+0x97d4]        # 419ad8 <__bss_start@@Base+0x197c>
  410304:	mov    DWORD PTR [rax+rbx*1],r14d
  410308:	lea    rax,[rbx+0x4]
  41030c:	mov    QWORD PTR [rip+0x97c5],rax        # 419ad8 <__bss_start@@Base+0x197c>
  410313:	cmp    dl,0x1
  410316:	je     41034b <next@@Base+0x30bb>
  410318:	jmp    410390 <next@@Base+0x3100>
  41031a:	nop    WORD PTR [rax+rax*1+0x0]
  410320:	mov    DWORD PTR [r15+rbx*1],r14d
  410324:	add    rbx,0x4
  410328:	mov    QWORD PTR [rip+0x97a9],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41032f:	mov    rax,rbx
  410332:	jmp    410390 <next@@Base+0x3100>
  410334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41033e:	xchg   ax,ax
  410340:	mov    DWORD PTR [r15+rbx*1],r14d
  410344:	mov    QWORD PTR [rip+0x978d],rax        # 419ad8 <__bss_start@@Base+0x197c>
  41034b:	lea    rdx,[rbx+0x8]
  41034f:	cmp    rdx,rcx
  410352:	jbe    410390 <next@@Base+0x3100>
  410354:	add    rbx,0x20007
  41035b:	and    rbx,0xfffffffffffe0000
  410362:	mov    rdi,r15
  410365:	mov    rsi,rbx
  410368:	call   4031c0 <realloc@plt>
  41036d:	mov    rdi,QWORD PTR [rsp+0x10]
  410372:	mov    rsi,QWORD PTR [rsp+0x8]
  410377:	mov    r15,rax
  41037a:	mov    QWORD PTR [rip+0x9747],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410381:	mov    QWORD PTR [rip+0x9748],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410388:	mov    rax,QWORD PTR [rip+0x9749]        # 419ad8 <__bss_start@@Base+0x197c>
  41038f:	nop
  410390:	mov    DWORD PTR [r15+rax*1],r13d
  410394:	add    rax,0x4
  410398:	mov    QWORD PTR [rip+0x9739],rax        # 419ad8 <__bss_start@@Base+0x197c>
  41039f:	add    rbp,0x8
  4103a3:	mov    rbx,rax
  4103a6:	cmp    rdi,rbp
  4103a9:	jne    410280 <next@@Base+0x2ff0>
  4103af:	mov    rdi,QWORD PTR [rsp]
  4103b3:	add    rsp,0x18
  4103b7:	pop    rbx
  4103b8:	pop    r12
  4103ba:	pop    r13
  4103bc:	pop    r14
  4103be:	pop    r15
  4103c0:	pop    rbp
  4103c1:	jmp    403040 <free@plt>
  4103c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4103d0:	push   rbp
  4103d1:	push   r15
  4103d3:	push   r14
  4103d5:	push   rbx
  4103d6:	push   rax
  4103d7:	cmp    QWORD PTR [rip+0x96e1],0x0        # 419ac0 <__bss_start@@Base+0x1964>
  4103df:	je     410756 <next@@Base+0x34c6>
  4103e5:	mov    rbx,QWORD PTR [rip+0x96ec]        # 419ad8 <__bss_start@@Base+0x197c>
  4103ec:	cmp    BYTE PTR [rip+0x96c5],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  4103f3:	je     41045f <next@@Base+0x31cf>
  4103f5:	lea    r14,[rbx+0x4]
  4103f9:	cmp    r14,QWORD PTR [rip+0x96d0]        # 419ad0 <__bss_start@@Base+0x1974>
  410400:	jbe    4104ab <next@@Base+0x321b>
  410406:	add    rbx,0x20003
  41040d:	and    rbx,0xfffffffffffe0000
  410414:	mov    rdi,QWORD PTR [rip+0x96ad]        # 419ac8 <__bss_start@@Base+0x196c>
  41041b:	mov    rsi,rbx
  41041e:	call   4031c0 <realloc@plt>
  410423:	mov    QWORD PTR [rip+0x969e],rax        # 419ac8 <__bss_start@@Base+0x196c>
  41042a:	mov    QWORD PTR [rip+0x969f],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410431:	mov    rbx,QWORD PTR [rip+0x96a0]        # 419ad8 <__bss_start@@Base+0x197c>
  410438:	mov    cl,BYTE PTR [rip+0x967a]        # 419ab8 <__bss_start@@Base+0x195c>
  41043e:	lea    r14,[rbx+0x4]
  410442:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  410449:	mov    QWORD PTR [rip+0x9688],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410450:	mov    ebp,0x1
  410455:	cmp    cl,0x1
  410458:	je     4104c0 <next@@Base+0x3230>
  41045a:	jmp    4105db <next@@Base+0x334b>
  41045f:	mov    rax,QWORD PTR [rip+0x9662]        # 419ac8 <__bss_start@@Base+0x196c>
  410466:	mov    ecx,DWORD PTR [rax+rbx*1]
  410469:	lea    r14,[rbx+0x4]
  41046d:	mov    QWORD PTR [rip+0x9664],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410474:	cmp    ecx,0xa1000000
  41047a:	je     41059c <next@@Base+0x330c>
  410480:	mov    ebp,0x1
  410485:	cmp    ecx,0xffffffff
  410488:	je     4105cd <next@@Base+0x333d>
  41048e:	mov    rax,QWORD PTR [rip+0x7b5b]        # 417ff0 <stderr@GLIBC_2.2.5>
  410495:	mov    rdi,QWORD PTR [rax]
  410498:	mov    rdx,QWORD PTR [rip+0x9611]        # 419ab0 <__bss_start@@Base+0x1954>
  41049f:	lea    rsi,[rip+0x2c73]        # 413119 <UnitySizeMask@@Base+0x909>
  4104a6:	jmp    4109b5 <next@@Base+0x3725>
  4104ab:	mov    rax,QWORD PTR [rip+0x9616]        # 419ac8 <__bss_start@@Base+0x196c>
  4104b2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4104b9:	mov    QWORD PTR [rip+0x9618],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4104c0:	lea    rcx,[rbx+0x8]
  4104c4:	cmp    rcx,QWORD PTR [rip+0x9605]        # 419ad0 <__bss_start@@Base+0x1974>
  4104cb:	jbe    410523 <next@@Base+0x3293>
  4104cd:	add    rbx,0x20007
  4104d4:	and    rbx,0xfffffffffffe0000
  4104db:	mov    rdi,rax
  4104de:	mov    rsi,rbx
  4104e1:	call   4031c0 <realloc@plt>
  4104e6:	mov    QWORD PTR [rip+0x95db],rax        # 419ac8 <__bss_start@@Base+0x196c>
  4104ed:	mov    QWORD PTR [rip+0x95dc],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  4104f4:	mov    r14,QWORD PTR [rip+0x95dd]        # 419ad8 <__bss_start@@Base+0x197c>
  4104fb:	mov    cl,BYTE PTR [rip+0x95b7]        # 419ab8 <__bss_start@@Base+0x195c>
  410501:	mov    DWORD PTR [rax+r14*1],0x9
  410509:	lea    rbx,[r14+0x4]
  41050d:	mov    QWORD PTR [rip+0x95c4],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410514:	mov    ebp,0x1
  410519:	cmp    cl,0x1
  41051c:	je     410536 <next@@Base+0x32a6>
  41051e:	jmp    4105f1 <next@@Base+0x3361>
  410523:	mov    DWORD PTR [rax+r14*1],0x9
  41052b:	lea    rbx,[r14+0x4]
  41052f:	mov    QWORD PTR [rip+0x95a2],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410536:	lea    rcx,[r14+0x8]
  41053a:	cmp    rcx,QWORD PTR [rip+0x958f]        # 419ad0 <__bss_start@@Base+0x1974>
  410541:	jbe    4107dd <next@@Base+0x354d>
  410547:	add    r14,0x20007
  41054e:	and    r14,0xfffffffffffe0000
  410555:	mov    rdi,rax
  410558:	mov    rsi,r14
  41055b:	call   4031c0 <realloc@plt>
  410560:	mov    QWORD PTR [rip+0x9561],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410567:	mov    QWORD PTR [rip+0x9562],r14        # 419ad0 <__bss_start@@Base+0x1974>
  41056e:	mov    rbx,QWORD PTR [rip+0x9563]        # 419ad8 <__bss_start@@Base+0x197c>
  410575:	mov    cl,BYTE PTR [rip+0x953d]        # 419ab8 <__bss_start@@Base+0x195c>
  41057b:	mov    DWORD PTR [rax+rbx*1],0x0
  410582:	lea    r14,[rbx+0x4]
  410586:	mov    QWORD PTR [rip+0x954b],r14        # 419ad8 <__bss_start@@Base+0x197c>
  41058d:	mov    ebp,0x1
  410592:	cmp    cl,0x1
  410595:	jne    410606 <next@@Base+0x3376>
  410597:	jmp    4107ef <next@@Base+0x355f>
  41059c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  4105a0:	lea    rdx,[rbx+0x8]
  4105a4:	mov    QWORD PTR [rip+0x952d],rdx        # 419ad8 <__bss_start@@Base+0x197c>
  4105ab:	cmp    ecx,0x9
  4105ae:	jne    41099d <next@@Base+0x370d>
  4105b4:	lea    rcx,[rbx+0x14]
  4105b8:	movzx  ebp,BYTE PTR [rip+0x9521]        # 419ae0 <__bss_start@@Base+0x1984>
  4105bf:	xor    ebp,0x1
  4105c2:	add    ebp,DWORD PTR [rax+rbx*1+0x10]
  4105c6:	mov    QWORD PTR [rip+0x950b],rcx        # 419ad8 <__bss_start@@Base+0x197c>
  4105cd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4105d4:	mov    QWORD PTR [rip+0x94fd],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4105db:	mov    DWORD PTR [rax+r14*1],0x9
  4105e3:	add    r14,0x4
  4105e7:	mov    QWORD PTR [rip+0x94ea],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4105ee:	mov    rbx,r14
  4105f1:	mov    DWORD PTR [rax+rbx*1],0x0
  4105f8:	add    rbx,0x4
  4105fc:	mov    QWORD PTR [rip+0x94d5],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410603:	mov    r14,rbx
  410606:	mov    DWORD PTR [rax+r14*1],0x0
  41060e:	add    r14,0x4
  410612:	mov    QWORD PTR [rip+0x94bf],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410619:	mov    rbx,r14
  41061c:	mov    DWORD PTR [rax+rbx*1],ebp
  41061f:	lea    r14,[rbx+0x4]
  410623:	mov    QWORD PTR [rip+0x94ae],r14        # 419ad8 <__bss_start@@Base+0x197c>
  41062a:	cmp    BYTE PTR [rip+0x9487],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  410631:	je     410697 <next@@Base+0x3407>
  410633:	lea    r15,[rbx+0x8]
  410637:	cmp    r15,QWORD PTR [rip+0x9492]        # 419ad0 <__bss_start@@Base+0x1974>
  41063e:	jbe    410761 <next@@Base+0x34d1>
  410644:	add    rbx,0x20007
  41064b:	and    rbx,0xfffffffffffe0000
  410652:	mov    rdi,QWORD PTR [rip+0x946f]        # 419ac8 <__bss_start@@Base+0x196c>
  410659:	mov    rsi,rbx
  41065c:	call   4031c0 <realloc@plt>
  410661:	mov    QWORD PTR [rip+0x9460],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410668:	mov    QWORD PTR [rip+0x9461],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  41066f:	mov    r14,QWORD PTR [rip+0x9462]        # 419ad8 <__bss_start@@Base+0x197c>
  410676:	lea    r15,[r14+0x4]
  41067a:	cmp    BYTE PTR [rip+0x9437],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  410681:	mov    DWORD PTR [rax+r14*1],0x0
  410689:	mov    QWORD PTR [rip+0x9448],r15        # 419ad8 <__bss_start@@Base+0x197c>
  410690:	je     4106b4 <next@@Base+0x3424>
  410692:	jmp    410777 <next@@Base+0x34e7>
  410697:	mov    rax,QWORD PTR [rip+0x942a]        # 419ac8 <__bss_start@@Base+0x196c>
  41069e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  4106a6:	add    rbx,0x8
  4106aa:	mov    QWORD PTR [rip+0x9427],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  4106b1:	mov    r15,rbx
  4106b4:	mov    DWORD PTR [rax+r15*1],0x0
  4106bc:	add    r15,0x4
  4106c0:	mov    QWORD PTR [rip+0x9411],r15        # 419ad8 <__bss_start@@Base+0x197c>
  4106c7:	mov    r14,r15
  4106ca:	mov    DWORD PTR [rax+r14*1],0x0
  4106d2:	add    r14,0x4
  4106d6:	mov    QWORD PTR [rip+0x93fb],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4106dd:	mov    rbx,r14
  4106e0:	mov    DWORD PTR [rax+rbx*1],0x0
  4106e7:	add    rbx,0x4
  4106eb:	mov    QWORD PTR [rip+0x93e6],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  4106f2:	mov    r14,rbx
  4106f5:	mov    DWORD PTR [rax+r14*1],0x0
  4106fd:	add    r14,0x4
  410701:	mov    QWORD PTR [rip+0x93d0],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410708:	mov    rbx,r14
  41070b:	mov    DWORD PTR [rax+rbx*1],0x0
  410712:	add    rbx,0x4
  410716:	mov    QWORD PTR [rip+0x93bb],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41071d:	mov    r14,rbx
  410720:	mov    DWORD PTR [rax+r14*1],0xa3000000
  410728:	add    r14,0x4
  41072c:	mov    QWORD PTR [rip+0x93a5],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410733:	mov    rcx,r14
  410736:	mov    rax,QWORD PTR [rip+0x938b]        # 419ac8 <__bss_start@@Base+0x196c>
  41073d:	mov    DWORD PTR [rax+rcx*1],0x0
  410744:	add    rcx,0x4
  410748:	mov    QWORD PTR [rip+0x9389],rcx        # 419ad8 <__bss_start@@Base+0x197c>
  41074f:	mov    BYTE PTR [rip+0x938a],0x1        # 419ae0 <__bss_start@@Base+0x1984>
  410756:	add    rsp,0x8
  41075a:	pop    rbx
  41075b:	pop    r14
  41075d:	pop    r15
  41075f:	pop    rbp
  410760:	ret    
  410761:	mov    rax,QWORD PTR [rip+0x9360]        # 419ac8 <__bss_start@@Base+0x196c>
  410768:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  410770:	mov    QWORD PTR [rip+0x9361],r15        # 419ad8 <__bss_start@@Base+0x197c>
  410777:	lea    rcx,[r14+0x8]
  41077b:	cmp    rcx,QWORD PTR [rip+0x934e]        # 419ad0 <__bss_start@@Base+0x1974>
  410782:	jbe    41085a <next@@Base+0x35ca>
  410788:	add    r14,0x20007
  41078f:	and    r14,0xfffffffffffe0000
  410796:	mov    rdi,rax
  410799:	mov    rsi,r14
  41079c:	call   4031c0 <realloc@plt>
  4107a1:	mov    QWORD PTR [rip+0x9320],rax        # 419ac8 <__bss_start@@Base+0x196c>
  4107a8:	mov    QWORD PTR [rip+0x9321],r14        # 419ad0 <__bss_start@@Base+0x1974>
  4107af:	mov    r15,QWORD PTR [rip+0x9322]        # 419ad8 <__bss_start@@Base+0x197c>
  4107b6:	mov    cl,BYTE PTR [rip+0x92fc]        # 419ab8 <__bss_start@@Base+0x195c>
  4107bc:	mov    DWORD PTR [rax+r15*1],0x0
  4107c4:	lea    r14,[r15+0x4]
  4107c8:	mov    QWORD PTR [rip+0x9309],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4107cf:	cmp    cl,0x1
  4107d2:	jne    4106ca <next@@Base+0x343a>
  4107d8:	jmp    41086d <next@@Base+0x35dd>
  4107dd:	mov    DWORD PTR [rax+rbx*1],0x0
  4107e4:	lea    r14,[rbx+0x4]
  4107e8:	mov    QWORD PTR [rip+0x92e9],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4107ef:	lea    rcx,[rbx+0x8]
  4107f3:	cmp    rcx,QWORD PTR [rip+0x92d6]        # 419ad0 <__bss_start@@Base+0x1974>
  4107fa:	jbe    4108d0 <next@@Base+0x3640>
  410800:	add    rbx,0x20007
  410807:	and    rbx,0xfffffffffffe0000
  41080e:	mov    rdi,rax
  410811:	mov    rsi,rbx
  410814:	call   4031c0 <realloc@plt>
  410819:	mov    QWORD PTR [rip+0x92a8],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410820:	mov    QWORD PTR [rip+0x92a9],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410827:	mov    r14,QWORD PTR [rip+0x92aa]        # 419ad8 <__bss_start@@Base+0x197c>
  41082e:	mov    cl,BYTE PTR [rip+0x9284]        # 419ab8 <__bss_start@@Base+0x195c>
  410834:	mov    DWORD PTR [rax+r14*1],0x0
  41083c:	lea    rbx,[r14+0x4]
  410840:	mov    QWORD PTR [rip+0x9291],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410847:	mov    ebp,0x1
  41084c:	cmp    cl,0x1
  41084f:	jne    41061c <next@@Base+0x338c>
  410855:	jmp    4108e3 <next@@Base+0x3653>
  41085a:	mov    DWORD PTR [rax+r15*1],0x0
  410862:	lea    r14,[r15+0x4]
  410866:	mov    QWORD PTR [rip+0x926b],r14        # 419ad8 <__bss_start@@Base+0x197c>
  41086d:	lea    rcx,[r15+0x8]
  410871:	cmp    rcx,QWORD PTR [rip+0x9258]        # 419ad0 <__bss_start@@Base+0x1974>
  410878:	jbe    41092c <next@@Base+0x369c>
  41087e:	add    r15,0x20007
  410885:	and    r15,0xfffffffffffe0000
  41088c:	mov    rdi,rax
  41088f:	mov    rsi,r15
  410892:	call   4031c0 <realloc@plt>
  410897:	mov    QWORD PTR [rip+0x922a],rax        # 419ac8 <__bss_start@@Base+0x196c>
  41089e:	mov    QWORD PTR [rip+0x922b],r15        # 419ad0 <__bss_start@@Base+0x1974>
  4108a5:	mov    r14,QWORD PTR [rip+0x922c]        # 419ad8 <__bss_start@@Base+0x197c>
  4108ac:	mov    cl,BYTE PTR [rip+0x9206]        # 419ab8 <__bss_start@@Base+0x195c>
  4108b2:	mov    DWORD PTR [rax+r14*1],0x0
  4108ba:	lea    rbx,[r14+0x4]
  4108be:	mov    QWORD PTR [rip+0x9213],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  4108c5:	cmp    cl,0x1
  4108c8:	jne    4106e0 <next@@Base+0x3450>
  4108ce:	jmp    41093f <next@@Base+0x36af>
  4108d0:	mov    DWORD PTR [rax+r14*1],0x0
  4108d8:	lea    rbx,[r14+0x4]
  4108dc:	mov    QWORD PTR [rip+0x91f5],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  4108e3:	lea    rcx,[r14+0x8]
  4108e7:	mov    ebp,0x1
  4108ec:	cmp    rcx,QWORD PTR [rip+0x91dd]        # 419ad0 <__bss_start@@Base+0x1974>
  4108f3:	jbe    41061c <next@@Base+0x338c>
  4108f9:	add    r14,0x20007
  410900:	and    r14,0xfffffffffffe0000
  410907:	mov    rdi,rax
  41090a:	mov    rsi,r14
  41090d:	call   4031c0 <realloc@plt>
  410912:	mov    QWORD PTR [rip+0x91af],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410919:	mov    QWORD PTR [rip+0x91b0],r14        # 419ad0 <__bss_start@@Base+0x1974>
  410920:	mov    rbx,QWORD PTR [rip+0x91b1]        # 419ad8 <__bss_start@@Base+0x197c>
  410927:	jmp    41061c <next@@Base+0x338c>
  41092c:	mov    DWORD PTR [rax+r14*1],0x0
  410934:	lea    rbx,[r14+0x4]
  410938:	mov    QWORD PTR [rip+0x9199],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  41093f:	lea    rcx,[r14+0x8]
  410943:	cmp    rcx,QWORD PTR [rip+0x9186]        # 419ad0 <__bss_start@@Base+0x1974>
  41094a:	jbe    4109c6 <next@@Base+0x3736>
  41094c:	add    r14,0x20007
  410953:	and    r14,0xfffffffffffe0000
  41095a:	mov    rdi,rax
  41095d:	mov    rsi,r14
  410960:	call   4031c0 <realloc@plt>
  410965:	mov    QWORD PTR [rip+0x915c],rax        # 419ac8 <__bss_start@@Base+0x196c>
  41096c:	mov    QWORD PTR [rip+0x915d],r14        # 419ad0 <__bss_start@@Base+0x1974>
  410973:	mov    rbx,QWORD PTR [rip+0x915e]        # 419ad8 <__bss_start@@Base+0x197c>
  41097a:	mov    cl,BYTE PTR [rip+0x9138]        # 419ab8 <__bss_start@@Base+0x195c>
  410980:	mov    DWORD PTR [rax+rbx*1],0x0
  410987:	lea    r14,[rbx+0x4]
  41098b:	mov    QWORD PTR [rip+0x9146],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410992:	cmp    cl,0x1
  410995:	jne    4106f5 <next@@Base+0x3465>
  41099b:	jmp    4109d8 <next@@Base+0x3748>
  41099d:	mov    rax,QWORD PTR [rip+0x764c]        # 417ff0 <stderr@GLIBC_2.2.5>
  4109a4:	mov    rdi,QWORD PTR [rax]
  4109a7:	mov    rdx,QWORD PTR [rip+0x9102]        # 419ab0 <__bss_start@@Base+0x1954>
  4109ae:	lea    rsi,[rip+0x27b1]        # 413166 <UnitySizeMask@@Base+0x956>
  4109b5:	xor    eax,eax
  4109b7:	add    rsp,0x8
  4109bb:	pop    rbx
  4109bc:	pop    r14
  4109be:	pop    r15
  4109c0:	pop    rbp
  4109c1:	jmp    403140 <fprintf@plt>
  4109c6:	mov    DWORD PTR [rax+rbx*1],0x0
  4109cd:	lea    r14,[rbx+0x4]
  4109d1:	mov    QWORD PTR [rip+0x9100],r14        # 419ad8 <__bss_start@@Base+0x197c>
  4109d8:	lea    rcx,[rbx+0x8]
  4109dc:	cmp    rcx,QWORD PTR [rip+0x90ed]        # 419ad0 <__bss_start@@Base+0x1974>
  4109e3:	jbe    410a37 <next@@Base+0x37a7>
  4109e5:	add    rbx,0x20007
  4109ec:	and    rbx,0xfffffffffffe0000
  4109f3:	mov    rdi,rax
  4109f6:	mov    rsi,rbx
  4109f9:	call   4031c0 <realloc@plt>
  4109fe:	mov    QWORD PTR [rip+0x90c3],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410a05:	mov    QWORD PTR [rip+0x90c4],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410a0c:	mov    r14,QWORD PTR [rip+0x90c5]        # 419ad8 <__bss_start@@Base+0x197c>
  410a13:	mov    cl,BYTE PTR [rip+0x909f]        # 419ab8 <__bss_start@@Base+0x195c>
  410a19:	mov    DWORD PTR [rax+r14*1],0x0
  410a21:	lea    rbx,[r14+0x4]
  410a25:	mov    QWORD PTR [rip+0x90ac],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410a2c:	cmp    cl,0x1
  410a2f:	jne    41070b <next@@Base+0x347b>
  410a35:	jmp    410a4a <next@@Base+0x37ba>
  410a37:	mov    DWORD PTR [rax+r14*1],0x0
  410a3f:	lea    rbx,[r14+0x4]
  410a43:	mov    QWORD PTR [rip+0x908e],rbx        # 419ad8 <__bss_start@@Base+0x197c>
  410a4a:	lea    rcx,[r14+0x8]
  410a4e:	cmp    rcx,QWORD PTR [rip+0x907b]        # 419ad0 <__bss_start@@Base+0x1974>
  410a55:	jbe    410aa6 <next@@Base+0x3816>
  410a57:	add    r14,0x20007
  410a5e:	and    r14,0xfffffffffffe0000
  410a65:	mov    rdi,rax
  410a68:	mov    rsi,r14
  410a6b:	call   4031c0 <realloc@plt>
  410a70:	mov    QWORD PTR [rip+0x9051],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410a77:	mov    QWORD PTR [rip+0x9052],r14        # 419ad0 <__bss_start@@Base+0x1974>
  410a7e:	mov    rbx,QWORD PTR [rip+0x9053]        # 419ad8 <__bss_start@@Base+0x197c>
  410a85:	lea    r14,[rbx+0x4]
  410a89:	cmp    BYTE PTR [rip+0x9028],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  410a90:	mov    DWORD PTR [rax+rbx*1],0x0
  410a97:	mov    QWORD PTR [rip+0x903a],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410a9e:	je     410720 <next@@Base+0x3490>
  410aa4:	jmp    410ab8 <next@@Base+0x3828>
  410aa6:	mov    DWORD PTR [rax+rbx*1],0x0
  410aad:	lea    r14,[rbx+0x4]
  410ab1:	mov    QWORD PTR [rip+0x9020],r14        # 419ad8 <__bss_start@@Base+0x197c>
  410ab8:	lea    rcx,[rbx+0x8]
  410abc:	cmp    rcx,QWORD PTR [rip+0x900d]        # 419ad0 <__bss_start@@Base+0x1974>
  410ac3:	jbe    410b17 <next@@Base+0x3887>
  410ac5:	add    rbx,0x20007
  410acc:	and    rbx,0xfffffffffffe0000
  410ad3:	mov    rdi,rax
  410ad6:	mov    rsi,rbx
  410ad9:	call   4031c0 <realloc@plt>
  410ade:	mov    QWORD PTR [rip+0x8fe3],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410ae5:	mov    QWORD PTR [rip+0x8fe4],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410aec:	mov    dl,BYTE PTR [rip+0x8fc6]        # 419ab8 <__bss_start@@Base+0x195c>
  410af2:	mov    r14,QWORD PTR [rip+0x8fdf]        # 419ad8 <__bss_start@@Base+0x197c>
  410af9:	mov    DWORD PTR [rax+r14*1],0xa3000000
  410b01:	lea    rcx,[r14+0x4]
  410b05:	mov    QWORD PTR [rip+0x8fcc],rcx        # 419ad8 <__bss_start@@Base+0x197c>
  410b0c:	cmp    dl,0x1
  410b0f:	jne    410736 <next@@Base+0x34a6>
  410b15:	jmp    410b2a <next@@Base+0x389a>
  410b17:	mov    DWORD PTR [rax+r14*1],0xa3000000
  410b1f:	lea    rcx,[r14+0x4]
  410b23:	mov    QWORD PTR [rip+0x8fae],rcx        # 419ad8 <__bss_start@@Base+0x197c>
  410b2a:	lea    rdx,[r14+0x8]
  410b2e:	cmp    rdx,QWORD PTR [rip+0x8f9b]        # 419ad0 <__bss_start@@Base+0x1974>
  410b35:	jbe    410736 <next@@Base+0x34a6>
  410b3b:	add    r14,0x20007
  410b42:	and    r14,0xfffffffffffe0000
  410b49:	mov    rdi,rax
  410b4c:	mov    rsi,r14
  410b4f:	call   4031c0 <realloc@plt>
  410b54:	mov    QWORD PTR [rip+0x8f6d],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410b5b:	mov    QWORD PTR [rip+0x8f6e],r14        # 419ad0 <__bss_start@@Base+0x1974>
  410b62:	mov    rcx,QWORD PTR [rip+0x8f6f]        # 419ad8 <__bss_start@@Base+0x197c>
  410b69:	jmp    410736 <next@@Base+0x34a6>
  410b6e:	xchg   ax,ax
  410b70:	cmp    QWORD PTR [rip+0x8f48],0x0        # 419ac0 <__bss_start@@Base+0x1964>
  410b78:	je     410cde <next@@Base+0x3a4e>
  410b7e:	push   r14
  410b80:	push   rbx
  410b81:	push   rax
  410b82:	cmp    BYTE PTR [rip+0x8f2f],0x0        # 419ab8 <__bss_start@@Base+0x195c>
  410b89:	je     410bfa <next@@Base+0x396a>
  410b8b:	mov    rbx,QWORD PTR [rip+0x8f46]        # 419ad8 <__bss_start@@Base+0x197c>
  410b92:	lea    rax,[rbx+0x8]
  410b96:	cmp    rax,QWORD PTR [rip+0x8f33]        # 419ad0 <__bss_start@@Base+0x1974>
  410b9d:	jbe    410c60 <next@@Base+0x39d0>
  410ba3:	add    rbx,0x20007
  410baa:	and    rbx,0xfffffffffffe0000
  410bb1:	mov    rdi,QWORD PTR [rip+0x8f10]        # 419ac8 <__bss_start@@Base+0x196c>
  410bb8:	mov    rsi,rbx
  410bbb:	call   4031c0 <realloc@plt>
  410bc0:	mov    rdi,rax
  410bc3:	mov    QWORD PTR [rip+0x8efe],rax        # 419ac8 <__bss_start@@Base+0x196c>
  410bca:	mov    QWORD PTR [rip+0x8eff],rbx        # 419ad0 <__bss_start@@Base+0x1974>
  410bd1:	mov    al,BYTE PTR [rip+0x8ee1]        # 419ab8 <__bss_start@@Base+0x195c>
  410bd7:	mov    rsi,QWORD PTR [rip+0x8efa]        # 419ad8 <__bss_start@@Base+0x197c>
  410bde:	mov    QWORD PTR [rdi+rsi*1],0x0
  410be6:	add    rsi,0x8
  410bea:	mov    QWORD PTR [rip+0x8ee7],rsi        # 419ad8 <__bss_start@@Base+0x197c>
  410bf1:	cmp    al,0x1
  410bf3:	jne    410c1b <next@@Base+0x398b>
  410bf5:	jmp    410c81 <next@@Base+0x39f1>
  410bfa:	mov    rdi,QWORD PTR [rip+0x8ec7]        # 419ac8 <__bss_start@@Base+0x196c>
  410c01:	mov    rax,QWORD PTR [rip+0x8ed0]        # 419ad8 <__bss_start@@Base+0x197c>
  410c08:	mov    QWORD PTR [rdi+rax*1],0x0
  410c10:	add    rax,0x8
  410c14:	mov    QWORD PTR [rip+0x8ebd],rax        # 419ad8 <__bss_start@@Base+0x197c>
  410c1b:	mov    rsi,QWORD PTR [rip+0x8ed6]        # 419af8 <__bss_start@@Base+0x199c>
  410c22:	mov    edx,0x4
  410c27:	call   4030c0 <msync@plt>
  410c2c:	cmp    eax,0xffffffff
  410c2f:	je     410cea <next@@Base+0x3a5a>
  410c35:	mov    rdi,QWORD PTR [rip+0x8e8c]        # 419ac8 <__bss_start@@Base+0x196c>
  410c3c:	mov    rsi,QWORD PTR [rip+0x8eb5]        # 419af8 <__bss_start@@Base+0x199c>
  410c43:	call   4031e0 <munmap@plt>
  410c48:	mov    QWORD PTR [rip+0x8e75],0x0        # 419ac8 <__bss_start@@Base+0x196c>
  410c53:	mov    QWORD PTR [rip+0x8e9a],0x0        # 419af8 <__bss_start@@Base+0x199c>
  410c5e:	jmp    410c9e <next@@Base+0x3a0e>
  410c60:	mov    rdi,QWORD PTR [rip+0x8e61]        # 419ac8 <__bss_start@@Base+0x196c>
  410c67:	mov    rsi,QWORD PTR [rip+0x8e6a]        # 419ad8 <__bss_start@@Base+0x197c>
  410c6e:	mov    QWORD PTR [rdi+rsi*1],0x0
  410c76:	add    rsi,0x8
  410c7a:	mov    QWORD PTR [rip+0x8e57],rsi        # 419ad8 <__bss_start@@Base+0x197c>
  410c81:	mov    rcx,QWORD PTR [rip+0x8e38]        # 419ac0 <__bss_start@@Base+0x1964>
  410c88:	mov    edx,0x1
  410c8d:	call   403240 <fwrite@plt>
  410c92:	mov    rdi,QWORD PTR [rip+0x8e2f]        # 419ac8 <__bss_start@@Base+0x196c>
  410c99:	call   403040 <free@plt>
  410c9e:	mov    rdi,QWORD PTR [rip+0x8e1b]        # 419ac0 <__bss_start@@Base+0x1964>
  410ca5:	call   4031a0 <fflush@plt>
  410caa:	mov    edi,DWORD PTR [rip+0x74a4]        # 418154 <__data_start@@Base+0x1c>
  410cb0:	call   411150 <__gcov_flush@@Base+0x2c0>
  410cb5:	mov    rdi,QWORD PTR [rip+0x8e04]        # 419ac0 <__bss_start@@Base+0x1964>
  410cbc:	call   4030b0 <fclose@plt>
  410cc1:	mov    QWORD PTR [rip+0x8df4],0x0        # 419ac0 <__bss_start@@Base+0x1964>
  410ccc:	mov    QWORD PTR [rip+0x8df1],0x0        # 419ac8 <__bss_start@@Base+0x196c>
  410cd7:	add    rsp,0x8
  410cdb:	pop    rbx
  410cdc:	pop    r14
  410cde:	mov    rdi,QWORD PTR [rip+0x8dcb]        # 419ab0 <__bss_start@@Base+0x1954>
  410ce5:	jmp    403040 <free@plt>
  410cea:	call   403060 <__errno_location@plt>
  410cef:	mov    edi,DWORD PTR [rax]
  410cf1:	mov    rax,QWORD PTR [rip+0x72f8]        # 417ff0 <stderr@GLIBC_2.2.5>
  410cf8:	mov    r14,QWORD PTR [rax]
  410cfb:	mov    rbx,QWORD PTR [rip+0x8dae]        # 419ab0 <__bss_start@@Base+0x1954>
  410d02:	call   403260 <strerror@plt>
  410d07:	mov    rcx,rax
  410d0a:	lea    rsi,[rip+0x24c3]        # 4131d4 <UnitySizeMask@@Base+0x9c4>
  410d11:	xor    eax,eax
  410d13:	mov    rdi,r14
  410d16:	mov    rdx,rbx
  410d19:	call   403140 <fprintf@plt>
  410d1e:	jmp    410c35 <next@@Base+0x39a5>
  410d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d2d:	nop    DWORD PTR [rax]
  410d30:	push   rbx
  410d31:	mov    rbx,rdi
  410d34:	mov    edi,0x18
  410d39:	call   403190 <malloc@plt>
  410d3e:	mov    QWORD PTR [rax+0x8],rbx
  410d42:	mov    QWORD PTR [rax+0x10],0x0
  410d4a:	lea    rcx,[rip+0x8d97]        # 419ae8 <__bss_start@@Base+0x198c>
  410d51:	mov    QWORD PTR [rax],rcx
  410d54:	lea    rcx,[rip+0x8ecd]        # 419c28 <writeout_fn_list@@Base>
  410d5b:	lea    rdx,[rcx+0x8]
  410d5f:	mov    rsi,QWORD PTR [rcx+0x8]
  410d63:	add    rsi,0x10
  410d67:	xor    edi,edi
  410d69:	cmp    QWORD PTR [rcx],0x0
  410d6d:	setne  dil
  410d71:	cmove  rsi,rdx
  410d75:	mov    QWORD PTR [rsi],rax
  410d78:	mov    QWORD PTR [rcx+rdi*8],rax
  410d7c:	pop    rbx
  410d7d:	ret    
  410d7e:	xchg   ax,ax
  410d80:	push   r14
  410d82:	push   rbx
  410d83:	push   rax
  410d84:	lea    rax,[rip+0x8e9d]        # 419c28 <writeout_fn_list@@Base>
  410d8b:	mov    rbx,QWORD PTR [rax]
  410d8e:	test   rbx,rbx
  410d91:	je     410db3 <next@@Base+0x3b23>
  410d93:	lea    r14,[rip+0x8d4e]        # 419ae8 <__bss_start@@Base+0x198c>
  410d9a:	nop    WORD PTR [rax+rax*1+0x0]
  410da0:	cmp    QWORD PTR [rbx],r14
  410da3:	jne    410daa <next@@Base+0x3b1a>
  410da5:	xor    eax,eax
  410da7:	call   QWORD PTR [rbx+0x8]
  410daa:	mov    rbx,QWORD PTR [rbx+0x10]
  410dae:	test   rbx,rbx
  410db1:	jne    410da0 <next@@Base+0x3b10>
  410db3:	add    rsp,0x8
  410db7:	pop    rbx
  410db8:	pop    r14
  410dba:	ret    
  410dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  410dc0:	push   r15
  410dc2:	push   r14
  410dc4:	push   r12
  410dc6:	push   rbx
  410dc7:	push   rax
  410dc8:	lea    r14,[rip+0x8e59]        # 419c28 <writeout_fn_list@@Base>
  410dcf:	mov    rdi,QWORD PTR [r14]
  410dd2:	test   rdi,rdi
  410dd5:	je     410e32 <next@@Base+0x3ba2>
  410dd7:	xor    r12d,r12d
  410dda:	lea    r15,[rip+0x8d07]        # 419ae8 <__bss_start@@Base+0x198c>
  410de1:	jmp    410e00 <next@@Base+0x3b70>
  410de3:	mov    QWORD PTR [r14],rbx
  410de6:	cmp    rdi,QWORD PTR [r14+0x8]
  410dea:	jne    410e1b <next@@Base+0x3b8b>
  410dec:	mov    QWORD PTR [r14+0x8],r12
  410df0:	test   r12,r12
  410df3:	jne    410e20 <next@@Base+0x3b90>
  410df5:	jmp    410e25 <next@@Base+0x3b95>
  410df7:	nop    WORD PTR [rax+rax*1+0x0]
  410e00:	mov    rbx,QWORD PTR [rdi+0x10]
  410e04:	cmp    QWORD PTR [rdi],r15
  410e07:	je     410e10 <next@@Base+0x3b80>
  410e09:	mov    r12,rdi
  410e0c:	jmp    410e2a <next@@Base+0x3b9a>
  410e0e:	xchg   ax,ax
  410e10:	cmp    rdi,QWORD PTR [r14]
  410e13:	je     410de3 <next@@Base+0x3b53>
  410e15:	cmp    rdi,QWORD PTR [r14+0x8]
  410e19:	je     410dec <next@@Base+0x3b5c>
  410e1b:	test   r12,r12
  410e1e:	je     410e25 <next@@Base+0x3b95>
  410e20:	mov    QWORD PTR [r12+0x10],rbx
  410e25:	call   403040 <free@plt>
  410e2a:	mov    rdi,rbx
  410e2d:	test   rbx,rbx
  410e30:	jne    410e00 <next@@Base+0x3b70>
  410e32:	add    rsp,0x8
  410e36:	pop    rbx
  410e37:	pop    r12
  410e39:	pop    r14
  410e3b:	pop    r15
  410e3d:	ret    
  410e3e:	xchg   ax,ax
  410e40:	push   rbx
  410e41:	mov    rbx,rdi
  410e44:	mov    edi,0x18
  410e49:	call   403190 <malloc@plt>
  410e4e:	mov    QWORD PTR [rax+0x8],rbx
  410e52:	mov    QWORD PTR [rax+0x10],0x0
  410e5a:	lea    rcx,[rip+0x8c87]        # 419ae8 <__bss_start@@Base+0x198c>
  410e61:	mov    QWORD PTR [rax],rcx
  410e64:	lea    rcx,[rip+0x8dad]        # 419c18 <flush_fn_list@@Base>
  410e6b:	lea    rdx,[rcx+0x8]
  410e6f:	mov    rsi,QWORD PTR [rcx+0x8]
  410e73:	add    rsi,0x10
  410e77:	xor    edi,edi
  410e79:	cmp    QWORD PTR [rcx],0x0
  410e7d:	setne  dil
  410e81:	cmove  rsi,rdx
  410e85:	mov    QWORD PTR [rsi],rax
  410e88:	mov    QWORD PTR [rcx+rdi*8],rax
  410e8c:	pop    rbx
  410e8d:	ret    
  410e8e:	xchg   ax,ax

0000000000410e90 <__gcov_flush@@Base>:
  410e90:	push   rbx
  410e91:	lea    rax,[rip+0x8d80]        # 419c18 <flush_fn_list@@Base>
  410e98:	mov    rbx,QWORD PTR [rax]
  410e9b:	test   rbx,rbx
  410e9e:	je     410eae <__gcov_flush@@Base+0x1e>
  410ea0:	xor    eax,eax
  410ea2:	call   QWORD PTR [rbx+0x8]
  410ea5:	mov    rbx,QWORD PTR [rbx+0x10]
  410ea9:	test   rbx,rbx
  410eac:	jne    410ea0 <__gcov_flush@@Base+0x10>
  410eae:	pop    rbx
  410eaf:	ret    
  410eb0:	push   r15
  410eb2:	push   r14
  410eb4:	push   r12
  410eb6:	push   rbx
  410eb7:	push   rax
  410eb8:	lea    r14,[rip+0x8d59]        # 419c18 <flush_fn_list@@Base>
  410ebf:	mov    rdi,QWORD PTR [r14]
  410ec2:	test   rdi,rdi
  410ec5:	je     410f22 <__gcov_flush@@Base+0x92>
  410ec7:	xor    r12d,r12d
  410eca:	lea    r15,[rip+0x8c17]        # 419ae8 <__bss_start@@Base+0x198c>
  410ed1:	jmp    410ef0 <__gcov_flush@@Base+0x60>
  410ed3:	mov    QWORD PTR [r14],rbx
  410ed6:	cmp    rdi,QWORD PTR [r14+0x8]
  410eda:	jne    410f0b <__gcov_flush@@Base+0x7b>
  410edc:	mov    QWORD PTR [r14+0x8],r12
  410ee0:	test   r12,r12
  410ee3:	jne    410f10 <__gcov_flush@@Base+0x80>
  410ee5:	jmp    410f15 <__gcov_flush@@Base+0x85>
  410ee7:	nop    WORD PTR [rax+rax*1+0x0]
  410ef0:	mov    rbx,QWORD PTR [rdi+0x10]
  410ef4:	cmp    QWORD PTR [rdi],r15
  410ef7:	je     410f00 <__gcov_flush@@Base+0x70>
  410ef9:	mov    r12,rdi
  410efc:	jmp    410f1a <__gcov_flush@@Base+0x8a>
  410efe:	xchg   ax,ax
  410f00:	cmp    rdi,QWORD PTR [r14]
  410f03:	je     410ed3 <__gcov_flush@@Base+0x43>
  410f05:	cmp    rdi,QWORD PTR [r14+0x8]
  410f09:	je     410edc <__gcov_flush@@Base+0x4c>
  410f0b:	test   r12,r12
  410f0e:	je     410f15 <__gcov_flush@@Base+0x85>
  410f10:	mov    QWORD PTR [r12+0x10],rbx
  410f15:	call   403040 <free@plt>
  410f1a:	mov    rdi,rbx
  410f1d:	test   rbx,rbx
  410f20:	jne    410ef0 <__gcov_flush@@Base+0x60>
  410f22:	add    rsp,0x8
  410f26:	pop    rbx
  410f27:	pop    r12
  410f29:	pop    r14
  410f2b:	pop    r15
  410f2d:	ret    
  410f2e:	xchg   ax,ax
  410f30:	push   r14
  410f32:	push   rbx
  410f33:	push   rax
  410f34:	mov    r14,rsi
  410f37:	test   rdi,rdi
  410f3a:	je     410f87 <__gcov_flush@@Base+0xf7>
  410f3c:	mov    rbx,rdi
  410f3f:	mov    edi,0x18
  410f44:	call   403190 <malloc@plt>
  410f49:	mov    QWORD PTR [rax+0x8],rbx
  410f4d:	mov    QWORD PTR [rax+0x10],0x0
  410f55:	lea    rcx,[rip+0x8b8c]        # 419ae8 <__bss_start@@Base+0x198c>
  410f5c:	mov    QWORD PTR [rax],rcx
  410f5f:	lea    rcx,[rip+0x8cc2]        # 419c28 <writeout_fn_list@@Base>
  410f66:	lea    rdx,[rcx+0x8]
  410f6a:	mov    rsi,QWORD PTR [rcx+0x8]
  410f6e:	add    rsi,0x10
  410f72:	xor    edi,edi
  410f74:	cmp    QWORD PTR [rcx],0x0
  410f78:	setne  dil
  410f7c:	cmove  rsi,rdx
  410f80:	mov    QWORD PTR [rsi],rax
  410f83:	mov    QWORD PTR [rcx+rdi*8],rax
  410f87:	test   r14,r14
  410f8a:	je     410fd4 <__gcov_flush@@Base+0x144>
  410f8c:	mov    edi,0x18
  410f91:	call   403190 <malloc@plt>
  410f96:	mov    QWORD PTR [rax+0x8],r14
  410f9a:	mov    QWORD PTR [rax+0x10],0x0
  410fa2:	lea    rcx,[rip+0x8b3f]        # 419ae8 <__bss_start@@Base+0x198c>
  410fa9:	mov    QWORD PTR [rax],rcx
  410fac:	lea    rcx,[rip+0x8c65]        # 419c18 <flush_fn_list@@Base>
  410fb3:	lea    rdx,[rcx+0x8]
  410fb7:	mov    rsi,QWORD PTR [rcx+0x8]
  410fbb:	add    rsi,0x10
  410fbf:	xor    edi,edi
  410fc1:	cmp    QWORD PTR [rcx],0x0
  410fc5:	setne  dil
  410fc9:	cmove  rsi,rdx
  410fcd:	mov    QWORD PTR [rsi],rax
  410fd0:	mov    QWORD PTR [rcx+rdi*8],rax
  410fd4:	cmp    BYTE PTR [rip+0x8b15],0x0        # 419af0 <__bss_start@@Base+0x1994>
  410fdb:	je     410fe5 <__gcov_flush@@Base+0x155>
  410fdd:	add    rsp,0x8
  410fe1:	pop    rbx
  410fe2:	pop    r14
  410fe4:	ret    
  410fe5:	mov    BYTE PTR [rip+0x8b04],0x1        # 419af0 <__bss_start@@Base+0x1994>
  410fec:	lea    rdi,[rip+0xfffffffffffffebd]        # 410eb0 <__gcov_flush@@Base+0x20>
  410ff3:	call   4114a0 <__libc_csu_fini@@Base+0x10>
  410ff8:	lea    rdi,[rip+0xfffffffffffffdc1]        # 410dc0 <next@@Base+0x3b30>
  410fff:	call   4114a0 <__libc_csu_fini@@Base+0x10>
  411004:	lea    rdi,[rip+0xfffffffffffffd75]        # 410d80 <next@@Base+0x3af0>
  41100b:	add    rsp,0x8
  41100f:	pop    rbx
  411010:	pop    r14
  411012:	jmp    4114a0 <__libc_csu_fini@@Base+0x10>
  411017:	nop
  411018:	nop    DWORD PTR [rax+rax*1+0x0]
  411020:	push   r15
  411022:	push   r14
  411024:	push   rbx
  411025:	mov    r14,rdi
  411028:	lea    rbx,[rdi+0x1]
  41102c:	lea    r15,[rip+0x7125]        # 418158 <lprofDirMode@@Base>
  411033:	jmp    411044 <__gcov_flush@@Base+0x1b4>
  411035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41103f:	nop
  411040:	add    rbx,0x1
  411044:	movzx  eax,BYTE PTR [rbx]
  411047:	cmp    al,0x2f
  411049:	je     411060 <__gcov_flush@@Base+0x1d0>
  41104b:	test   al,al
  41104d:	jne    411040 <__gcov_flush@@Base+0x1b0>
  41104f:	jmp    411073 <__gcov_flush@@Base+0x1e3>
  411051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41105b:	nop    DWORD PTR [rax+rax*1+0x0]
  411060:	mov    BYTE PTR [rbx],0x0
  411063:	mov    esi,DWORD PTR [r15]
  411066:	mov    rdi,r14
  411069:	call   403080 <mkdir@plt>
  41106e:	mov    BYTE PTR [rbx],0x2f
  411071:	jmp    411040 <__gcov_flush@@Base+0x1b0>
  411073:	pop    rbx
  411074:	pop    r14
  411076:	pop    r15
  411078:	ret    
  411079:	nop    DWORD PTR [rax+0x0]
  411080:	lea    rax,[rip+0x70d1]        # 418158 <lprofDirMode@@Base>
  411087:	mov    eax,DWORD PTR [rax]
  411089:	ret    
  41108a:	nop    WORD PTR [rax+rax*1+0x0]
  411090:	lea    rax,[rip+0x70c1]        # 418158 <lprofDirMode@@Base>
  411097:	mov    DWORD PTR [rax],edi
  411099:	ret    
  41109a:	nop    WORD PTR [rax+rax*1+0x0]
  4110a0:	push   rbp
  4110a1:	push   rbx
  4110a2:	sub    rsp,0x188
  4110a9:	mov    ebp,esi
  4110ab:	mov    rbx,rdi
  4110ae:	mov    rdi,rsp
  4110b1:	call   403110 <uname@plt>
  4110b6:	test   eax,eax
  4110b8:	js     4110cc <__gcov_flush@@Base+0x23c>
  4110ba:	lea    rsi,[rsp+0x41]
  4110bf:	movsxd rdx,ebp
  4110c2:	mov    rdi,rbx
  4110c5:	call   403070 <strncpy@plt>
  4110ca:	xor    eax,eax
  4110cc:	add    rsp,0x188
  4110d3:	pop    rbx
  4110d4:	pop    rbp
  4110d5:	ret    
  4110d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110e0:	push   rbp
  4110e1:	push   r14
  4110e3:	push   rbx
  4110e4:	sub    rsp,0x20
  4110e8:	mov    ebx,edi
  4110ea:	mov    WORD PTR [rsp+0x2],0x0
  4110f1:	xorps  xmm0,xmm0
  4110f4:	movups XMMWORD PTR [rsp+0x8],xmm0
  4110f9:	call   4030a0 <getpid@plt>
  4110fe:	mov    DWORD PTR [rsp+0x18],eax
  411102:	mov    WORD PTR [rsp],0x1
  411108:	mov    r14,rsp
  41110b:	nop    DWORD PTR [rax+rax*1+0x0]
  411110:	xor    ebp,ebp
  411112:	mov    esi,0x7
  411117:	xor    eax,eax
  411119:	mov    edi,ebx
  41111b:	mov    rdx,r14
  41111e:	call   403090 <fcntl@plt>
  411123:	cmp    eax,0xffffffff
  411126:	jne    41113e <__gcov_flush@@Base+0x2ae>
  411128:	call   403060 <__errno_location@plt>
  41112d:	mov    eax,DWORD PTR [rax]
  41112f:	cmp    eax,0x4
  411132:	je     411110 <__gcov_flush@@Base+0x280>
  411134:	cmp    eax,0x25
  411137:	jne    41113e <__gcov_flush@@Base+0x2ae>
  411139:	mov    ebp,0xffffffff
  41113e:	mov    eax,ebp
  411140:	add    rsp,0x20
  411144:	pop    rbx
  411145:	pop    r14
  411147:	pop    rbp
  411148:	ret    
  411149:	nop    DWORD PTR [rax+0x0]
  411150:	push   rbp
  411151:	push   r14
  411153:	push   rbx
  411154:	sub    rsp,0x20
  411158:	mov    ebx,edi
  41115a:	mov    WORD PTR [rsp+0x2],0x0
  411161:	xorps  xmm0,xmm0
  411164:	movups XMMWORD PTR [rsp+0x8],xmm0
  411169:	call   4030a0 <getpid@plt>
  41116e:	mov    DWORD PTR [rsp+0x18],eax
  411172:	mov    WORD PTR [rsp],0x2
  411178:	mov    r14,rsp
  41117b:	nop    DWORD PTR [rax+rax*1+0x0]
  411180:	xor    ebp,ebp
  411182:	mov    esi,0x7
  411187:	xor    eax,eax
  411189:	mov    edi,ebx
  41118b:	mov    rdx,r14
  41118e:	call   403090 <fcntl@plt>
  411193:	cmp    eax,0xffffffff
  411196:	jne    4111ae <__gcov_flush@@Base+0x31e>
  411198:	call   403060 <__errno_location@plt>
  41119d:	mov    eax,DWORD PTR [rax]
  41119f:	cmp    eax,0x4
  4111a2:	je     411180 <__gcov_flush@@Base+0x2f0>
  4111a4:	cmp    eax,0x25
  4111a7:	jne    4111ae <__gcov_flush@@Base+0x31e>
  4111a9:	mov    ebp,0xffffffff
  4111ae:	mov    eax,ebp
  4111b0:	add    rsp,0x20
  4111b4:	pop    rbx
  4111b5:	pop    r14
  4111b7:	pop    rbp
  4111b8:	ret    
  4111b9:	nop    DWORD PTR [rax+0x0]
  4111c0:	push   rbp
  4111c1:	push   r14
  4111c3:	push   rbx
  4111c4:	sub    rsp,0x20
  4111c8:	xor    ebx,ebx
  4111ca:	mov    esi,0x42
  4111cf:	mov    edx,0x1b6
  4111d4:	xor    eax,eax
  4111d6:	call   403200 <open@plt>
  4111db:	test   eax,eax
  4111dd:	js     41123a <__gcov_flush@@Base+0x3aa>
  4111df:	mov    ebp,eax
  4111e1:	mov    WORD PTR [rsp+0x2],0x0
  4111e8:	xorps  xmm0,xmm0
  4111eb:	movups XMMWORD PTR [rsp+0x8],xmm0
  4111f0:	call   4030a0 <getpid@plt>
  4111f5:	mov    DWORD PTR [rsp+0x18],eax
  4111f9:	mov    WORD PTR [rsp],0x1
  4111ff:	mov    r14,rsp
  411202:	mov    esi,0x7
  411207:	xor    eax,eax
  411209:	mov    edi,ebp
  41120b:	mov    rdx,r14
  41120e:	call   403090 <fcntl@plt>
  411213:	cmp    eax,0xffffffff
  411216:	jne    411229 <__gcov_flush@@Base+0x399>
  411218:	call   403060 <__errno_location@plt>
  41121d:	mov    eax,DWORD PTR [rax]
  41121f:	cmp    eax,0x4
  411222:	je     411202 <__gcov_flush@@Base+0x372>
  411224:	cmp    eax,0x25
  411227:	je     411246 <__gcov_flush@@Base+0x3b6>
  411229:	lea    rsi,[rip+0x1e23]        # 413053 <UnitySizeMask@@Base+0x843>
  411230:	mov    edi,ebp
  411232:	call   4031d0 <fdopen@plt>
  411237:	mov    rbx,rax
  41123a:	mov    rax,rbx
  41123d:	add    rsp,0x20
  411241:	pop    rbx
  411242:	pop    r14
  411244:	pop    rbp
  411245:	ret    
  411246:	mov    rax,QWORD PTR [rip+0x6da3]        # 417ff0 <stderr@GLIBC_2.2.5>
  41124d:	mov    rdi,QWORD PTR [rax]
  411250:	lea    rsi,[rip+0x1f9e]        # 4131f5 <UnitySizeMask@@Base+0x9e5>
  411257:	lea    rdx,[rip+0x1fe0]        # 41323e <UnitySizeMask@@Base+0xa2e>
  41125e:	xor    eax,eax
  411260:	call   403140 <fprintf@plt>
  411265:	jmp    411229 <__gcov_flush@@Base+0x399>
  411267:	nop    WORD PTR [rax+rax*1+0x0]
  411270:	push   r15
  411272:	push   r14
  411274:	push   r12
  411276:	push   rbx
  411277:	push   rax
  411278:	mov    r14,rsi
  41127b:	mov    r15,rdi
  41127e:	lea    rdi,[rip+0x1fe7]        # 41326c <UnitySizeMask@@Base+0xa5c>
  411285:	call   403030 <getenv@plt>
  41128a:	mov    rbx,rax
  41128d:	lea    rdi,[rip+0x1fe4]        # 413278 <UnitySizeMask@@Base+0xa68>
  411294:	call   403030 <getenv@plt>
  411299:	mov    QWORD PTR [r14],0x0
  4112a0:	mov    DWORD PTR [r15],0x0
  4112a7:	test   rbx,rbx
  4112aa:	je     4112e1 <__gcov_flush@@Base+0x451>
  4112ac:	xor    r12d,r12d
  4112af:	cmp    BYTE PTR [rbx],0x0
  4112b2:	je     4112e1 <__gcov_flush@@Base+0x451>
  4112b4:	test   rax,rax
  4112b7:	je     4112d1 <__gcov_flush@@Base+0x441>
  4112b9:	xor    r12d,r12d
  4112bc:	xor    esi,esi
  4112be:	mov    edx,0xa
  4112c3:	mov    rdi,rax
  4112c6:	call   403160 <strtol@plt>
  4112cb:	test   eax,eax
  4112cd:	cmovns r12d,eax
  4112d1:	mov    DWORD PTR [r15],r12d
  4112d4:	mov    rdi,rbx
  4112d7:	call   4030d0 <strlen@plt>
  4112dc:	mov    QWORD PTR [r14],rax
  4112df:	jmp    4112e3 <__gcov_flush@@Base+0x453>
  4112e1:	xor    ebx,ebx
  4112e3:	mov    rax,rbx
  4112e6:	add    rsp,0x8
  4112ea:	pop    rbx
  4112eb:	pop    r12
  4112ed:	pop    r14
  4112ef:	pop    r15
  4112f1:	ret    
  4112f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112fc:	nop    DWORD PTR [rax+0x0]
  411300:	push   r15
  411302:	push   r14
  411304:	push   r12
  411306:	push   rbx
  411307:	push   rax
  411308:	mov    r15,rcx
  41130b:	mov    r12,rdx
  41130e:	mov    rbx,rsi
  411311:	mov    r14,rdi
  411314:	test   r8d,r8d
  411317:	jle    41133f <__gcov_flush@@Base+0x4af>
  411319:	lea    rax,[rbx+0x1]
  41131d:	xor    ecx,ecx
  41131f:	nop
  411320:	movzx  edx,BYTE PTR [rax]
  411323:	cmp    dl,0x2f
  411326:	je     411330 <__gcov_flush@@Base+0x4a0>
  411328:	test   dl,dl
  41132a:	jne    411336 <__gcov_flush@@Base+0x4a6>
  41132c:	jmp    41133f <__gcov_flush@@Base+0x4af>
  41132e:	xchg   ax,ax
  411330:	add    ecx,0x1
  411333:	mov    rbx,rax
  411336:	add    rax,0x1
  41133a:	cmp    ecx,r8d
  41133d:	jl     411320 <__gcov_flush@@Base+0x490>
  41133f:	mov    rdi,r14
  411342:	mov    rsi,r12
  411345:	mov    rdx,r15
  411348:	call   403170 <memcpy@plt>
  41134d:	cmp    BYTE PTR [r12+r15*1-0x1],0x2f
  411353:	je     41135e <__gcov_flush@@Base+0x4ce>
  411355:	mov    BYTE PTR [r14+r15*1],0x2f
  41135a:	add    r15,0x1
  41135e:	add    r14,r15
  411361:	mov    rdi,rbx
  411364:	call   4030d0 <strlen@plt>
  411369:	lea    rdx,[rax+0x1]
  41136d:	mov    rdi,r14
  411370:	mov    rsi,rbx
  411373:	add    rsp,0x8
  411377:	pop    rbx
  411378:	pop    r12
  41137a:	pop    r14
  41137c:	pop    r15
  41137e:	jmp    403170 <memcpy@plt>
  411383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41138d:	nop    DWORD PTR [rax]
  411390:	mov    esi,0x2f
  411395:	jmp    4030f0 <strchr@plt>
  41139a:	nop    WORD PTR [rax+rax*1+0x0]
  4113a0:	mov    esi,0x2f
  4113a5:	jmp    403100 <strrchr@plt>
  4113aa:	nop    WORD PTR [rax+rax*1+0x0]
  4113b0:	push   rax
  4113b1:	mov    DWORD PTR [rsp+0x4],0x0
  4113b9:	lea    rsi,[rsp+0x4]
  4113be:	mov    edi,0x2
  4113c3:	xor    eax,eax
  4113c5:	call   403180 <prctl@plt>
  4113ca:	mov    ecx,DWORD PTR [rsp+0x4]
  4113ce:	test   eax,eax
  4113d0:	jne    4113e9 <__gcov_flush@@Base+0x559>
  4113d2:	cmp    ecx,0x9
  4113d5:	jne    4113e9 <__gcov_flush@@Base+0x559>
  4113d7:	mov    edi,0x1
  4113dc:	xor    esi,esi
  4113de:	xor    eax,eax
  4113e0:	call   403180 <prctl@plt>
  4113e5:	mov    ecx,DWORD PTR [rsp+0x4]
  4113e9:	xor    eax,eax
  4113eb:	cmp    ecx,0x9
  4113ee:	sete   al
  4113f1:	pop    rcx
  4113f2:	ret    
  4113f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113fd:	nop    DWORD PTR [rax]
  411400:	mov    edi,0x1
  411405:	mov    esi,0x9
  41140a:	xor    eax,eax
  41140c:	jmp    403180 <prctl@plt>
  411411:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41141b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000411420 <__libc_csu_init@@Base>:
  411420:	endbr64 
  411424:	push   r15
  411426:	lea    r15,[rip+0x55d3]        # 416a00 <UnitySizeMask@@Base+0x41f0>
  41142d:	push   r14
  41142f:	mov    r14,rdx
  411432:	push   r13
  411434:	mov    r13,rsi
  411437:	push   r12
  411439:	mov    r12d,edi
  41143c:	push   rbp
  41143d:	lea    rbp,[rip+0x55e4]        # 416a28 <UnitySizeMask@@Base+0x4218>
  411444:	push   rbx
  411445:	sub    rbp,r15
  411448:	sub    rsp,0x8
  41144c:	call   403000 <getenv@plt-0x30>
  411451:	sar    rbp,0x3
  411455:	je     411476 <__libc_csu_init@@Base+0x56>
  411457:	xor    ebx,ebx
  411459:	nop    DWORD PTR [rax+0x0]
  411460:	mov    rdx,r14
  411463:	mov    rsi,r13
  411466:	mov    edi,r12d
  411469:	call   QWORD PTR [r15+rbx*8]
  41146d:	add    rbx,0x1
  411471:	cmp    rbp,rbx
  411474:	jne    411460 <__libc_csu_init@@Base+0x40>
  411476:	add    rsp,0x8
  41147a:	pop    rbx
  41147b:	pop    rbp
  41147c:	pop    r12
  41147e:	pop    r13
  411480:	pop    r14
  411482:	pop    r15
  411484:	ret    
  411485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000411490 <__libc_csu_fini@@Base>:
  411490:	endbr64 
  411494:	ret    
  411495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41149f:	nop
  4114a0:	endbr64 
  4114a4:	mov    rdx,QWORD PTR [rip+0x6c95]        # 418140 <__data_start@@Base+0x8>
  4114ab:	xor    esi,esi
  4114ad:	jmp    403210 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004114b4 <.fini>:
  4114b4:	endbr64 
  4114b8:	sub    rsp,0x8
  4114bc:	add    rsp,0x8
  4114c0:	ret    
