
../repos/prog2/1.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <fclose@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <fclose@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <fclose@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <fclose@plt-0x10>

0000000000401040 <__stack_chk_fail@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  401046:	push   0x1
  40104b:	jmp    401020 <fclose@plt-0x10>

0000000000401050 <fseek@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <fseek@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <fclose@plt-0x10>

0000000000401060 <__printf_chk@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__printf_chk@GLIBC_2.3.4>
  401066:	push   0x3
  40106b:	jmp    401020 <fclose@plt-0x10>

0000000000401070 <fopen@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <fopen@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <fclose@plt-0x10>

0000000000401080 <getc@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <getc@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <fclose@plt-0x10>

Disassembly of section .text:

0000000000401090 <main@@Base>:
  401090:	push   r15
  401092:	push   r14
  401094:	lea    rsi,[rip+0xf69]        # 402004 <_IO_stdin_used@@Base+0x4>
  40109b:	push   r13
  40109d:	push   r12
  40109f:	lea    rdi,[rip+0xf60]        # 402006 <_IO_stdin_used@@Base+0x6>
  4010a6:	push   rbp
  4010a7:	push   rbx
  4010a8:	sub    rsp,0x9f8
  4010af:	lea    r15,[rsp+0x980]
  4010b7:	mov    rax,QWORD PTR fs:0x28
  4010c0:	mov    QWORD PTR [rsp+0x9e8],rax
  4010c8:	xor    eax,eax
  4010ca:	lea    r12,[r15+0x1e]
  4010ce:	mov    rbp,r15
  4010d1:	call   401070 <fopen@plt>
  4010d6:	mov    edx,0x2
  4010db:	mov    rsi,0xffffffffffffff83
  4010e2:	mov    rdi,rax
  4010e5:	mov    rbx,rax
  4010e8:	call   401050 <fseek@plt>
  4010ed:	nop    DWORD PTR [rax]
  4010f0:	mov    rdi,rbx
  4010f3:	add    rbp,0x1
  4010f7:	call   401080 <getc@plt>
  4010fc:	mov    BYTE PTR [rbp-0x1],al
  4010ff:	cmp    rbp,r12
  401102:	jne    4010f0 <main@@Base+0x60>
  401104:	lea    r14,[rsp+0x9a0]
  40110c:	mov    BYTE PTR [rsp+0x99e],0x0
  401114:	lea    r12,[r14+0x1e]
  401118:	mov    rbp,r14
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	mov    rdi,rbx
  401123:	add    rbp,0x1
  401127:	call   401080 <getc@plt>
  40112c:	mov    BYTE PTR [rbp-0x1],al
  40112f:	cmp    rbp,r12
  401132:	jne    401120 <main@@Base+0x90>
  401134:	lea    r13,[rsp+0x9c0]
  40113c:	mov    BYTE PTR [rsp+0x9be],0x0
  401144:	lea    r12,[r13+0x1e]
  401148:	mov    rbp,r13
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]
  401150:	mov    rdi,rbx
  401153:	add    rbp,0x1
  401157:	call   401080 <getc@plt>
  40115c:	mov    BYTE PTR [rbp-0x1],al
  40115f:	cmp    r12,rbp
  401162:	jne    401150 <main@@Base+0xc0>
  401164:	lea    rbp,[rsp+0x97b]
  40116c:	mov    BYTE PTR [rsp+0x9de],0x0
  401174:	xor    r12d,r12d
  401177:	mov    rdi,rbx
  40117a:	call   401080 <getc@plt>
  40117f:	mov    BYTE PTR [rbp+r12*1+0x0],al
  401184:	add    r12,0x1
  401188:	cmp    r12,0x4
  40118c:	jne    401177 <main@@Base+0xe7>
  40118e:	mov    BYTE PTR [rsp+0x97f],0x0
  401196:	mov    r12d,0x1c
  40119c:	nop    DWORD PTR [rax+0x0]
  4011a0:	mov    rdi,rbx
  4011a3:	call   401080 <getc@plt>
  4011a8:	sub    r12d,0x1
  4011ac:	jne    4011a0 <main@@Base+0x110>
  4011ae:	mov    rdi,rbx
  4011b1:	lea    r12,[rsp+0x10]
  4011b6:	call   401080 <getc@plt>
  4011bb:	mov    rdi,rbx
  4011be:	call   401080 <getc@plt>
  4011c3:	mov    rdi,rbx
  4011c6:	mov    DWORD PTR [rsp+0x8],eax
  4011ca:	call   401080 <getc@plt>
  4011cf:	movabs rcx,0x2063697373616c43
  4011d9:	mov    DWORD PTR [rsp+0x88],0x63736944
  4011e4:	mov    DWORD PTR [rsp+0xc],eax
  4011e8:	mov    QWORD PTR [rsp+0x2e],rcx
  4011ed:	movabs rcx,0x7972746e756f43
  4011f7:	mov    eax,0x73
  4011fc:	mov    QWORD PTR [rsp+0x4c],rcx
  401201:	mov    ecx,0x6f
  401206:	mov    WORD PTR [rsp+0x14],ax
  40120b:	mov    WORD PTR [r12+0x7c],cx
  401211:	movabs rcx,0x706f482d706948
  40121b:	mov    edx,0x65
  401220:	mov    QWORD PTR [rsp+0xe2],rcx
  401228:	movabs rcx,0x6567412077654e
  401232:	mov    esi,0x6567
  401237:	mov    edi,0x6c
  40123c:	mov    QWORD PTR [rsp+0x13c],rcx
  401244:	mov    r8d,0x7365
  40124a:	mov    r9d,0x72
  401250:	mov    r10d,0x6561
  401256:	movabs rcx,0x6972747375646e49
  401260:	mov    eax,0x6c61
  401265:	mov    DWORD PTR [rsp+0xc4],0x6e757247
  401270:	mov    DWORD PTR [rsp+0x15a],0x69646c4f
  40127b:	mov    DWORD PTR [rsp+0x6a],0x636e6144
  401283:	mov    DWORD PTR [rsp+0xa6],0x6b6e7546
  40128e:	mov    r11d,0x6f6e
  401294:	mov    WORD PTR [r12+0x5e],dx
  40129a:	mov    WORD PTR [r12+0xb8],si
  4012a3:	movabs rsi,0x74616e7265746c41
  4012ad:	mov    DWORD PTR [rsp+0x100],0x7a7a614a
  4012b8:	mov    DWORD PTR [rsp+0x11e],0x6174654d
  4012c3:	mov    edx,0x6563
  4012c8:	mov    WORD PTR [r12+0x112],di
  4012d1:	mov    WORD PTR [r12+0x14e],r8w
  4012da:	mov    edi,0x7069
  4012df:	mov    DWORD PTR [rsp+0x178],0x6568744f
  4012ea:	mov    DWORD PTR [rsp+0x1f0],0x67676552
  4012f5:	mov    r8d,0x6c65
  4012fb:	mov    WORD PTR [r12+0x16c],r9w
  401304:	mov    WORD PTR [r12+0x1e4],r10w
  40130d:	mov    r9d,0x65
  401313:	mov    DWORD PTR [rsp+0x10],0x65756c42
  40131b:	mov    DWORD PTR [r12+0x26],0x6b636f52
  401324:	mov    r10d,0x6b63
  40132a:	mov    BYTE PTR [r12+0x2a],0x0
  401330:	mov    BYTE PTR [r12+0x9a],0x0
  401339:	mov    BYTE PTR [r12+0xba],0x0
  401342:	mov    BYTE PTR [r12+0xf4],0x0
  40134b:	mov    BYTE PTR [r12+0x150],0x0
  401354:	mov    DWORD PTR [rsp+0x196],0x706f50
  40135f:	mov    DWORD PTR [rsp+0x1b4],0x422652
  40136a:	mov    DWORD PTR [rsp+0x1d2],0x706152
  401375:	mov    BYTE PTR [r12+0x1e6],0x0
  40137e:	mov    QWORD PTR [rsp+0x24a],rcx
  401386:	movabs rcx,0x654d206874616544
  401390:	mov    WORD PTR [r12+0x242],ax
  401399:	mov    eax,0x736b
  40139e:	mov    QWORD PTR [rsp+0x268],rsi
  4013a6:	mov    DWORD PTR [rsp+0x2c2],0x6e617250
  4013b1:	movabs rsi,0x617274646e756f53
  4013bb:	mov    WORD PTR [r12+0x2b6],ax
  4013c4:	mov    eax,0x6b63
  4013c9:	mov    QWORD PTR [rsp+0x2e0],rsi
  4013d1:	mov    QWORD PTR [rsp+0x2a4],rcx
  4013d9:	mov    WORD PTR [r12+0x2d8],ax
  4013e2:	movabs rcx,0x6365542d6f727545
  4013ec:	movabs rsi,0x746e6569626d41
  4013f6:	mov    eax,0x6c
  4013fb:	mov    QWORD PTR [rsp+0x2fe],rcx
  401403:	mov    QWORD PTR [rsp+0x31c],rsi
  40140b:	movabs rcx,0x706f482d70697254
  401415:	mov    DWORD PTR [rsp+0x358],0x61636f56
  401420:	movabs rsi,0x6e75462b7a7a614a
  40142a:	mov    WORD PTR [r12+0x34c],ax
  401433:	mov    eax,0x6b
  401438:	mov    QWORD PTR [rsp+0x33a],rcx
  401440:	mov    QWORD PTR [rsp+0x376],rsi
  401448:	movabs rcx,0x6163697373616c43
  401452:	mov    WORD PTR [r12+0x36e],ax
  40145b:	mov    eax,0x6e6f
  401460:	mov    DWORD PTR [rsp+0x22c],0x68636554
  40146b:	mov    DWORD PTR [rsp+0x394],0x69737546
  401476:	mov    DWORD PTR [rsp+0x20e],0x6b636f52
  401481:	mov    WORD PTR [r12+0x220],r11w
  40148a:	mov    esi,0x65
  40148f:	mov    WORD PTR [r12+0x388],ax
  401498:	mov    BYTE PTR [r12+0x202],0x0
  4014a1:	movabs rax,0x656d757274736e49
  4014ab:	mov    BYTE PTR [r12+0x222],0x0
  4014b4:	mov    BYTE PTR [r12+0x244],0x0
  4014bd:	mov    r11d,0x65
  4014c3:	mov    DWORD PTR [r12+0x260],0x657669
  4014cf:	mov    DWORD PTR [rsp+0x286],0x616b53
  4014da:	mov    DWORD PTR [r12+0x29c],0x6c6174
  4014e6:	mov    BYTE PTR [r12+0x2b8],0x0
  4014ef:	mov    BYTE PTR [r12+0x2da],0x0
  4014f8:	mov    DWORD PTR [r12+0x2f6],0x6f6e68
  401504:	mov    BYTE PTR [r12+0x332],0x0
  40150d:	mov    BYTE PTR [r12+0x38a],0x0
  401516:	mov    DWORD PTR [rsp+0x3b2],0x6e617254
  401521:	mov    WORD PTR [r12+0x3a6],dx
  40152a:	mov    edx,0x6576
  40152f:	mov    QWORD PTR [rsp+0x3d0],rcx
  401537:	mov    ecx,0x6c
  40153c:	mov    DWORD PTR [rsp+0x42a],0x73756f48
  401547:	mov    WORD PTR [r12+0x3c8],cx
  401550:	mov    WORD PTR [r12+0x41e],si
  401559:	movabs rcx,0x6f526e7265746c41
  401563:	movabs rsi,0x6c4320646e756f53
  40156d:	mov    QWORD PTR [rsp+0x4c0],rcx
  401575:	movabs rcx,0x706f50206c61746e
  40157f:	mov    QWORD PTR [rsp+0x466],rsi
  401587:	movabs rsi,0x697461746964654d
  401591:	mov    QWORD PTR [rsp+0x3ee],rax
  401599:	mov    DWORD PTR [rsp+0x484],0x70736f47
  4015a4:	mov    DWORD PTR [rsp+0x40c],0x64696341
  4015af:	mov    DWORD PTR [rsp+0x448],0x656d6147
  4015ba:	mov    WORD PTR [r12+0x45e],di
  4015c3:	mov    edi,0x6369
  4015c8:	mov    WORD PTR [r12+0x478],r8w
  4015d1:	mov    DWORD PTR [rsp+0x4a2],0x73696f4e
  4015dc:	mov    r8d,0x6c
  4015e2:	mov    WORD PTR [r12+0x496],r9w
  4015eb:	mov    WORD PTR [r12+0x4b8],r10w
  4015f4:	mov    r9d,0x6369
  4015fa:	mov    DWORD PTR [rsp+0x4de],0x73736142
  401605:	mov    DWORD PTR [rsp+0x4fc],0x6c756f53
  401610:	mov    r10d,0x65
  401616:	mov    DWORD PTR [rsp+0x51a],0x6b6e7550
  401621:	mov    DWORD PTR [rsp+0x538],0x63617053
  40162c:	mov    QWORD PTR [rsp+0x556],rsi
  401634:	mov    WORD PTR [r12+0x52c],r11w
  40163d:	movabs rsi,0x636f52206c61746e
  401647:	mov    BYTE PTR [r12+0x3a8],0x0
  401650:	mov    DWORD PTR [r12+0x3e6],0x6c61746e
  40165c:	mov    r11d,0x6d
  401662:	mov    BYTE PTR [r12+0x3ea],0x0
  40166b:	mov    BYTE PTR [r12+0x400],0x0
  401674:	mov    BYTE PTR [r12+0x43c],0x0
  40167d:	mov    BYTE PTR [r12+0x460],0x0
  401686:	mov    BYTE PTR [r12+0x47a],0x0
  40168f:	mov    BYTE PTR [r12+0x4ba],0x0
  401698:	mov    BYTE PTR [r12+0x4d2],0x0
  4016a1:	mov    BYTE PTR [r12+0x4f0],0x0
  4016aa:	mov    BYTE PTR [r12+0x50e],0x0
  4016b3:	mov    WORD PTR [r12+0x54e],dx
  4016bc:	mov    edx,0x69
  4016c1:	mov    QWORD PTR [rsp+0x574],rax
  4016c9:	mov    QWORD PTR [r12+0x56c],rcx
  4016d1:	mov    ecx,0x6b
  4016d6:	mov    BYTE PTR [r12+0x574],0x0
  4016df:	mov    QWORD PTR [rsp+0x592],rax
  4016e7:	mov    eax,0x6b
  4016ec:	mov    WORD PTR [r12+0x592],cx
  4016f5:	mov    QWORD PTR [r12+0x58a],rsi
  4016fd:	movabs rcx,0x657661776b726144
  401707:	mov    esi,0x6369
  40170c:	mov    DWORD PTR [rsp+0x5b0],0x6e687445
  401717:	mov    QWORD PTR [rsp+0x5ec],rcx
  40171f:	mov    WORD PTR [r12+0x5a4],si
  401728:	movabs rcx,0x616972747375646e
  401732:	movabs rsi,0x492d6f6e68636554
  40173c:	mov    QWORD PTR [rsp+0x60a],rsi
  401744:	mov    QWORD PTR [r12+0x602],rcx
  40174c:	movabs rsi,0x6e6f727463656c45
  401756:	movabs rcx,0x6b6c6f462d706f50
  401760:	mov    WORD PTR [r12+0x60a],r8w
  401769:	mov    QWORD PTR [rsp+0x628],rsi
  401771:	mov    QWORD PTR [rsp+0x646],rcx
  401779:	movabs rsi,0x636e61646f727545
  401783:	movabs rcx,0x6e72656874756f53
  40178d:	mov    QWORD PTR [rsp+0x6a0],rcx
  401795:	mov    QWORD PTR [rsp+0x664],rsi
  40179d:	movabs rsi,0x617473676e6147
  4017a7:	mov    WORD PTR [r12+0x69c],ax
  4017b0:	mov    eax,0x7964
  4017b5:	mov    DWORD PTR [rsp+0x5ce],0x68746f47
  4017c0:	mov    WORD PTR [r12+0x620],r9w
  4017c9:	mov    WORD PTR [r12+0x5c2],di
  4017d2:	movabs rcx,0x6169747369726843
  4017dc:	mov    WORD PTR [r12+0x65c],r10w
  4017e5:	mov    DWORD PTR [rsp+0x682],0x61657244
  4017f0:	mov    r8d,0x61
  4017f6:	mov    WORD PTR [r12+0x676],r11w
  4017ff:	mov    DWORD PTR [rsp+0x6be],0x656d6f43
  40180a:	mov    r9d,0x6f
  401810:	mov    WORD PTR [r12+0x6b2],ax
  401819:	mov    BYTE PTR [r12+0x550],0x0
  401822:	mov    eax,0x3034
  401827:	mov    BYTE PTR [r12+0x5a6],0x0
  401830:	mov    BYTE PTR [r12+0x5c4],0x0
  401839:	mov    r10d,0x6b
  40183f:	mov    BYTE PTR [r12+0x5e4],0x0
  401848:	mov    BYTE PTR [r12+0x622],0x0
  401851:	mov    edi,0x7a
  401856:	mov    BYTE PTR [r12+0x63e],0x0
  40185f:	mov    DWORD PTR [r12+0x698],0x636f5220
  40186b:	mov    BYTE PTR [r12+0x6b4],0x0
  401874:	mov    QWORD PTR [rsp+0x6fa],rsi
  40187c:	movabs rsi,0x6b6e75462f706f50
  401886:	mov    QWORD PTR [rsp+0x736],rcx
  40188e:	mov    QWORD PTR [rsp+0x754],rsi
  401896:	movabs rcx,0x412065766974614e
  4018a0:	movabs rsi,0x6e61636972656d
  4018aa:	mov    QWORD PTR [rsp+0x790],rcx
  4018b2:	movabs rcx,0x74657261626143
  4018bc:	mov    QWORD PTR [r12+0x788],rsi
  4018c4:	movabs rsi,0x657661572077654e
  4018ce:	mov    DWORD PTR [rsp+0x718],0x20706f54
  4018d9:	mov    QWORD PTR [rsp+0x7cc],rsi
  4018e1:	mov    WORD PTR [r12+0x70c],ax
  4018ea:	movabs rsi,0x656e7574776f6853
  4018f4:	mov    eax,0x70
  4018f9:	mov    QWORD PTR [rsp+0x7ae],rcx
  401901:	movabs rcx,0x6564616863797350
  40190b:	mov    QWORD PTR [rsp+0x7ea],rcx
  401913:	mov    QWORD PTR [rsp+0x826],rsi
  40191b:	movabs rcx,0x72656c69617254
  401925:	mov    WORD PTR [r12+0x732],ax
  40192e:	movabs rsi,0x6e75502064696341
  401938:	mov    eax,0x656c
  40193d:	mov    DWORD PTR [rsp+0x772],0x676e754a
  401948:	mov    QWORD PTR [rsp+0x844],rcx
  401950:	mov    ecx,0x6c61
  401955:	mov    WORD PTR [r12+0x766],ax
  40195e:	mov    QWORD PTR [rsp+0x89e],rsi
  401966:	mov    eax,0x73
  40196b:	mov    esi,0x6b
  401970:	mov    DWORD PTR [rsp+0x880],0x62697254
  40197b:	mov    DWORD PTR [rsp+0x6dc],0x746c7543
  401986:	mov    DWORD PTR [rsp+0x808],0x65766152
  401991:	mov    WORD PTR [r12+0x81e],ax
  40199a:	xor    eax,eax
  40199c:	mov    DWORD PTR [rsp+0x862],0x462d6f4c
  4019a7:	mov    WORD PTR [r12+0x874],cx
  4019b0:	movabs rcx,0x6c61636973754d
  4019ba:	mov    WORD PTR [r12+0x856],dx
  4019c3:	mov    BYTE PTR [r12+0x6d0],0x0
  4019cc:	movabs rdx,0x7a614a2064696341
  4019d6:	mov    BYTE PTR [r12+0x70e],0x0
  4019df:	mov    DWORD PTR [r12+0x72e],0x6152206e
  4019eb:	mov    BYTE PTR [r12+0x74c],0x0
  4019f4:	mov    BYTE PTR [r12+0x768],0x0
  4019fd:	mov    BYTE PTR [r12+0x7c4],0x0
  401a06:	mov    DWORD PTR [r12+0x7e2],0x63696c
  401a12:	mov    BYTE PTR [r12+0x7fc],0x0
  401a1b:	mov    BYTE PTR [r12+0x876],0x0
  401a24:	mov    WORD PTR [r12+0x896],si
  401a2d:	movabs rsi,0x522026206b636f52
  401a37:	mov    QWORD PTR [rsp+0x8bc],rdx
  401a3f:	mov    QWORD PTR [rsp+0x934],rsi
  401a47:	movabs rdx,0x636f522064726148
  401a51:	lea    rsi,[rip+0x5c3]        # 40201b <_IO_stdin_used@@Base+0x1b>
  401a58:	mov    QWORD PTR [rsp+0x952],rdx
  401a60:	mov    WORD PTR [r12+0x8b4],di
  401a69:	mov    rdx,r15
  401a6c:	mov    WORD PTR [r12+0x94a],r10w
  401a75:	mov    DWORD PTR [rsp+0x8da],0x6b6c6f50
  401a80:	mov    edi,0x1
  401a85:	mov    WORD PTR [r12+0x8ce],r8w
  401a8e:	mov    DWORD PTR [rsp+0x8f8],0x72746552
  401a99:	mov    DWORD PTR [r12+0x92c],0x6c6c6f
  401aa5:	mov    WORD PTR [r12+0x8ec],r9w
  401aae:	mov    QWORD PTR [rsp+0x916],rcx
  401ab6:	call   401060 <__printf_chk@plt>
  401abb:	lea    rsi,[rip+0x566]        # 402028 <_IO_stdin_used@@Base+0x28>
  401ac2:	mov    rdx,r14
  401ac5:	mov    edi,0x1
  401aca:	xor    eax,eax
  401acc:	call   401060 <__printf_chk@plt>
  401ad1:	lea    rsi,[rip+0x55e]        # 402036 <_IO_stdin_used@@Base+0x36>
  401ad8:	mov    rdx,r13
  401adb:	mov    edi,0x1
  401ae0:	xor    eax,eax
  401ae2:	call   401060 <__printf_chk@plt>
  401ae7:	lea    rsi,[rip+0x554]        # 402042 <_IO_stdin_used@@Base+0x42>
  401aee:	mov    rdx,rbp
  401af1:	mov    edi,0x1
  401af6:	xor    eax,eax
  401af8:	call   401060 <__printf_chk@plt>
  401afd:	movsx  edx,BYTE PTR [rsp+0x8]
  401b02:	lea    rsi,[rip+0x543]        # 40204c <_IO_stdin_used@@Base+0x4c>
  401b09:	mov    edi,0x1
  401b0e:	xor    eax,eax
  401b10:	call   401060 <__printf_chk@plt>
  401b15:	movsx  rax,BYTE PTR [rsp+0xc]
  401b1b:	lea    rsi,[rip+0x538]        # 40205a <_IO_stdin_used@@Base+0x5a>
  401b22:	mov    edi,0x1
  401b27:	mov    rdx,rax
  401b2a:	shl    rdx,0x4
  401b2e:	sub    rdx,rax
  401b31:	xor    eax,eax
  401b33:	lea    rdx,[r12+rdx*2]
  401b37:	call   401060 <__printf_chk@plt>
  401b3c:	mov    rdi,rbx
  401b3f:	call   401030 <fclose@plt>
  401b44:	xor    eax,eax
  401b46:	mov    rcx,QWORD PTR [rsp+0x9e8]
  401b4e:	xor    rcx,QWORD PTR fs:0x28
  401b57:	jne    401b6b <main@@Base+0xadb>
  401b59:	add    rsp,0x9f8
  401b60:	pop    rbx
  401b61:	pop    rbp
  401b62:	pop    r12
  401b64:	pop    r13
  401b66:	pop    r14
  401b68:	pop    r15
  401b6a:	ret    
  401b6b:	call   401040 <__stack_chk_fail@plt>

0000000000401b70 <_start@@Base>:
  401b70:	endbr64 
  401b74:	xor    ebp,ebp
  401b76:	mov    r9,rdx
  401b79:	pop    rsi
  401b7a:	mov    rdx,rsp
  401b7d:	and    rsp,0xfffffffffffffff0
  401b81:	push   rax
  401b82:	push   rsp
  401b83:	mov    r8,0x401cf0
  401b8a:	mov    rcx,0x401c80
  401b91:	mov    rdi,0x401090
  401b98:	call   QWORD PTR [rip+0x2452]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  401b9e:	hlt    
  401b9f:	nop
  401ba0:	endbr64 
  401ba4:	ret    
  401ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401baf:	nop
  401bb0:	mov    eax,0x40405f
  401bb5:	push   rbp
  401bb6:	sub    rax,0x404058
  401bbc:	cmp    rax,0xe
  401bc0:	mov    rbp,rsp
  401bc3:	jbe    401be0 <_start@@Base+0x70>
  401bc5:	mov    eax,0x0
  401bca:	test   rax,rax
  401bcd:	je     401be0 <_start@@Base+0x70>
  401bcf:	pop    rbp
  401bd0:	mov    edi,0x404058
  401bd5:	jmp    rax
  401bd7:	nop    WORD PTR [rax+rax*1+0x0]
  401be0:	pop    rbp
  401be1:	ret    
  401be2:	nop    DWORD PTR [rax+0x0]
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	mov    esi,0x404058
  401bf5:	push   rbp
  401bf6:	sub    rsi,0x404058
  401bfd:	sar    rsi,0x3
  401c01:	mov    rbp,rsp
  401c04:	mov    rax,rsi
  401c07:	shr    rax,0x3f
  401c0b:	add    rsi,rax
  401c0e:	sar    rsi,1
  401c11:	je     401c28 <_start@@Base+0xb8>
  401c13:	mov    eax,0x0
  401c18:	test   rax,rax
  401c1b:	je     401c28 <_start@@Base+0xb8>
  401c1d:	pop    rbp
  401c1e:	mov    edi,0x404058
  401c23:	jmp    rax
  401c25:	nop    DWORD PTR [rax]
  401c28:	pop    rbp
  401c29:	ret    
  401c2a:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	cmp    BYTE PTR [rip+0x2421],0x0        # 404058 <__bss_start@@Base>
  401c37:	jne    401c4a <_start@@Base+0xda>
  401c39:	push   rbp
  401c3a:	mov    rbp,rsp
  401c3d:	call   401bb0 <_start@@Base+0x40>
  401c42:	pop    rbp
  401c43:	mov    BYTE PTR [rip+0x240e],0x1        # 404058 <__bss_start@@Base>
  401c4a:	repz ret 
  401c4c:	nop    DWORD PTR [rax+0x0]
  401c50:	mov    edi,0x403e18
  401c55:	cmp    QWORD PTR [rdi],0x0
  401c59:	jne    401c60 <_start@@Base+0xf0>
  401c5b:	jmp    401bf0 <_start@@Base+0x80>
  401c5d:	nop    DWORD PTR [rax]
  401c60:	mov    eax,0x0
  401c65:	test   rax,rax
  401c68:	je     401c5b <_start@@Base+0xeb>
  401c6a:	push   rbp
  401c6b:	mov    rbp,rsp
  401c6e:	call   rax
  401c70:	pop    rbp
  401c71:	jmp    401bf0 <_start@@Base+0x80>
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401c80 <__libc_csu_init@@Base>:
  401c80:	endbr64 
  401c84:	push   r15
  401c86:	lea    r15,[rip+0x217b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401c8d:	push   r14
  401c8f:	mov    r14,rdx
  401c92:	push   r13
  401c94:	mov    r13,rsi
  401c97:	push   r12
  401c99:	mov    r12d,edi
  401c9c:	push   rbp
  401c9d:	lea    rbp,[rip+0x216c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401ca4:	push   rbx
  401ca5:	sub    rbp,r15
  401ca8:	sub    rsp,0x8
  401cac:	call   401000 <fclose@plt-0x30>
  401cb1:	sar    rbp,0x3
  401cb5:	je     401cd6 <__libc_csu_init@@Base+0x56>
  401cb7:	xor    ebx,ebx
  401cb9:	nop    DWORD PTR [rax+0x0]
  401cc0:	mov    rdx,r14
  401cc3:	mov    rsi,r13
  401cc6:	mov    edi,r12d
  401cc9:	call   QWORD PTR [r15+rbx*8]
  401ccd:	add    rbx,0x1
  401cd1:	cmp    rbp,rbx
  401cd4:	jne    401cc0 <__libc_csu_init@@Base+0x40>
  401cd6:	add    rsp,0x8
  401cda:	pop    rbx
  401cdb:	pop    rbp
  401cdc:	pop    r12
  401cde:	pop    r13
  401ce0:	pop    r14
  401ce2:	pop    r15
  401ce4:	ret    
  401ce5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401cf0 <__libc_csu_fini@@Base>:
  401cf0:	endbr64 
  401cf4:	ret    

Disassembly of section .fini:

0000000000401cf8 <.fini>:
  401cf8:	endbr64 
  401cfc:	sub    rsp,0x8
  401d00:	add    rsp,0x8
  401d04:	ret    
