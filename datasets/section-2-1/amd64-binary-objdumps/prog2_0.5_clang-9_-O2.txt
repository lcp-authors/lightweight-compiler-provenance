
../repos/prog2/0.5:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strlen@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strlen@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strlen@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strlen@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strlen@plt-0x10>

0000000000401040 <printf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <printf@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strlen@plt-0x10>

0000000000401050 <strcmp@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <strcmp@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strlen@plt-0x10>

0000000000401060 <__isoc99_scanf@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__isoc99_scanf@GLIBC_2.7>
  401066:	push   0x3
  40106b:	jmp    401020 <strlen@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x401540
  40108a:	mov    rcx,0x4014d0
  401091:	mov    rdi,0x4011b0
  401098:	call   QWORD PTR [rip+0x2f52]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x404048
  4010b5:	cmp    rax,0x404048
  4010bb:	je     4010d0 <_start@@Base+0x60>
  4010bd:	mov    eax,0x0
  4010c2:	test   rax,rax
  4010c5:	je     4010d0 <_start@@Base+0x60>
  4010c7:	mov    edi,0x404048
  4010cc:	jmp    rax
  4010ce:	xchg   ax,ax
  4010d0:	ret    
  4010d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010dc:	nop    DWORD PTR [rax+0x0]
  4010e0:	mov    esi,0x404048
  4010e5:	sub    rsi,0x404048
  4010ec:	mov    rax,rsi
  4010ef:	shr    rsi,0x3f
  4010f3:	sar    rax,0x3
  4010f7:	add    rsi,rax
  4010fa:	sar    rsi,1
  4010fd:	je     401110 <_start@@Base+0xa0>
  4010ff:	mov    eax,0x0
  401104:	test   rax,rax
  401107:	je     401110 <_start@@Base+0xa0>
  401109:	mov    edi,0x404048
  40110e:	jmp    rax
  401110:	ret    
  401111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40111c:	nop    DWORD PTR [rax+0x0]
  401120:	endbr64 
  401124:	cmp    BYTE PTR [rip+0x2f1d],0x0        # 404048 <__bss_start@@Base>
  40112b:	jne    401140 <_start@@Base+0xd0>
  40112d:	push   rbp
  40112e:	mov    rbp,rsp
  401131:	call   4010b0 <_start@@Base+0x40>
  401136:	mov    BYTE PTR [rip+0x2f0b],0x1        # 404048 <__bss_start@@Base>
  40113d:	pop    rbp
  40113e:	ret    
  40113f:	nop
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	jmp    4010e0 <_start@@Base+0x70>
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401160 <inverte@@Base>:
  401160:	push   r15
  401162:	push   r14
  401164:	push   r12
  401166:	push   rbx
  401167:	push   rax
  401168:	mov    r14,rsi
  40116b:	mov    r15,rdi
  40116e:	call   401030 <strlen@plt>
  401173:	test   rax,rax
  401176:	je     40119d <inverte@@Base+0x3d>
  401178:	xor    ebx,ebx
  40117a:	mov    r12,r15
  40117d:	nop    DWORD PTR [rax]
  401180:	movzx  eax,BYTE PTR [rax+r12*1-0x1]
  401186:	mov    BYTE PTR [r14+rbx*1],al
  40118a:	inc    rbx
  40118d:	mov    rdi,r15
  401190:	call   401030 <strlen@plt>
  401195:	dec    r12
  401198:	cmp    rax,rbx
  40119b:	ja     401180 <inverte@@Base+0x20>
  40119d:	add    rsp,0x8
  4011a1:	pop    rbx
  4011a2:	pop    r12
  4011a4:	pop    r14
  4011a6:	pop    r15
  4011a8:	ret    
  4011a9:	nop    DWORD PTR [rax+0x0]

00000000004011b0 <main@@Base>:
  4011b0:	push   rbp
  4011b1:	mov    rbp,rsp
  4011b4:	push   r15
  4011b6:	push   r14
  4011b8:	push   r13
  4011ba:	push   r12
  4011bc:	push   rbx
  4011bd:	and    rsp,0xffffffffffffffe0
  4011c1:	sub    rsp,0x100
  4011c8:	vpxor  xmm0,xmm0,xmm0
  4011cc:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  4011d2:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  4011d8:	vmovdqa YMMWORD PTR [rsp],ymm0
  4011dd:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  4011e6:	mov    DWORD PTR [rsp+0x60],0x0
  4011ee:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  4011f7:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  401200:	mov    DWORD PTR [rsp+0xe0],0x0
  40120b:	lea    rdi,[rip+0xe2e]        # 402040 <_IO_stdin_used@@Base+0x40>
  401212:	xor    eax,eax
  401214:	vzeroupper 
  401217:	call   401040 <printf@plt>
  40121c:	lea    rdi,[rip+0xe27]        # 40204a <_IO_stdin_used@@Base+0x4a>
  401223:	mov    rsi,rsp
  401226:	xor    eax,eax
  401228:	call   401060 <__isoc99_scanf@plt>
  40122d:	cmp    WORD PTR [rsp],0x2e
  401232:	je     4014b9 <main@@Base+0x309>
  401238:	mov    r14,rsp
  40123b:	lea    rbx,[rsp+0x80]
  401243:	lea    r13,[rip+0xe1d]        # 402067 <_IO_stdin_used@@Base+0x67>
  40124a:	lea    r15,[rip+0xdef]        # 402040 <_IO_stdin_used@@Base+0x40>
  401251:	lea    r12,[rip+0xdf2]        # 40204a <_IO_stdin_used@@Base+0x4a>
  401258:	jmp    4012aa <main@@Base+0xfa>
  40125a:	nop    WORD PTR [rax+rax*1+0x0]
  401260:	mov    rdi,r14
  401263:	mov    rsi,rbx
  401266:	vzeroupper 
  401269:	call   401050 <strcmp@plt>
  40126e:	test   eax,eax
  401270:	mov    rdi,r13
  401273:	lea    rax,[rip+0xdd3]        # 40204d <_IO_stdin_used@@Base+0x4d>
  40127a:	cmove  rdi,rax
  40127e:	mov    rsi,r14
  401281:	xor    eax,eax
  401283:	call   401040 <printf@plt>
  401288:	mov    rdi,r15
  40128b:	xor    eax,eax
  40128d:	call   401040 <printf@plt>
  401292:	mov    rdi,r12
  401295:	mov    rsi,r14
  401298:	xor    eax,eax
  40129a:	call   401060 <__isoc99_scanf@plt>
  40129f:	cmp    WORD PTR [rsp],0x2e
  4012a4:	je     4014b9 <main@@Base+0x309>
  4012aa:	mov    rdi,r14
  4012ad:	call   401030 <strlen@plt>
  4012b2:	test   rax,rax
  4012b5:	je     401260 <main@@Base+0xb0>
  4012b7:	cmp    rax,0x80
  4012bd:	jae    4012d0 <main@@Base+0x120>
  4012bf:	xor    ecx,ecx
  4012c1:	jmp    40147d <main@@Base+0x2cd>
  4012c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012d0:	mov    rcx,rax
  4012d3:	and    rcx,0xffffffffffffff80
  4012d7:	lea    rdx,[rcx-0x80]
  4012db:	mov    rdi,rdx
  4012de:	shr    rdi,0x7
  4012e2:	inc    rdi
  4012e5:	mov    r8d,edi
  4012e8:	and    r8d,0x1
  4012ec:	test   rdx,rdx
  4012ef:	je     4014a4 <main@@Base+0x2f4>
  4012f5:	mov    r9,rbx
  4012f8:	sub    rdi,r8
  4012fb:	lea    rdx,[rsp-0x20]
  401300:	lea    rbx,[rdx+rax*1]
  401304:	xor    edx,edx
  401306:	lea    rsi,[rsp+0x160]
  40130e:	vmovdqa ymm4,YMMWORD PTR [rip+0xd0a]        # 402020 <_IO_stdin_used@@Base+0x20>
  401316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401320:	vmovdqu ymm0,YMMWORD PTR [rbx+rdx*1-0x60]
  401326:	vmovdqu ymm1,YMMWORD PTR [rbx+rdx*1-0x40]
  40132c:	vmovdqu ymm2,YMMWORD PTR [rbx+rdx*1-0x20]
  401332:	vmovdqu ymm3,YMMWORD PTR [rbx+rdx*1]
  401337:	vpshufb ymm3,ymm3,ymm4
  40133c:	vpermq ymm3,ymm3,0x4e
  401342:	vpshufb ymm2,ymm2,ymm4
  401347:	vpermq ymm2,ymm2,0x4e
  40134d:	vpshufb ymm1,ymm1,ymm4
  401352:	vpermq ymm1,ymm1,0x4e
  401358:	vpshufb ymm0,ymm0,ymm4
  40135d:	vpermq ymm0,ymm0,0x4e
  401363:	vmovdqu YMMWORD PTR [rsi-0xe0],ymm3
  40136b:	vmovdqu YMMWORD PTR [rsi-0xc0],ymm2
  401373:	vmovdqu YMMWORD PTR [rsi-0xa0],ymm1
  40137b:	vmovdqu YMMWORD PTR [rsi-0x80],ymm0
  401380:	vmovdqu ymm0,YMMWORD PTR [rbx+rdx*1-0xe0]
  401389:	vmovdqu ymm1,YMMWORD PTR [rbx+rdx*1-0xc0]
  401392:	vmovdqu ymm2,YMMWORD PTR [rbx+rdx*1-0xa0]
  40139b:	vmovdqu ymm3,YMMWORD PTR [rbx+rdx*1-0x80]
  4013a1:	vpshufb ymm3,ymm3,ymm4
  4013a6:	vpermq ymm3,ymm3,0x4e
  4013ac:	vpshufb ymm2,ymm2,ymm4
  4013b1:	vpermq ymm2,ymm2,0x4e
  4013b7:	vpshufb ymm1,ymm1,ymm4
  4013bc:	vpermq ymm1,ymm1,0x4e
  4013c2:	vpshufb ymm0,ymm0,ymm4
  4013c7:	vmovdqu YMMWORD PTR [rsi-0x60],ymm3
  4013cc:	vmovdqu YMMWORD PTR [rsi-0x40],ymm2
  4013d1:	vmovdqu YMMWORD PTR [rsi-0x20],ymm1
  4013d6:	vpermq ymm0,ymm0,0x4e
  4013dc:	vmovdqu YMMWORD PTR [rsi],ymm0
  4013e0:	add    rsi,0x100
  4013e7:	add    rdx,0xffffffffffffff00
  4013ee:	add    rdi,0xfffffffffffffffe
  4013f2:	jne    401320 <main@@Base+0x170>
  4013f8:	neg    rdx
  4013fb:	mov    rbx,r9
  4013fe:	test   r8,r8
  401401:	je     401474 <main@@Base+0x2c4>
  401403:	mov    rsi,rdx
  401406:	not    rsi
  401409:	add    rsi,rax
  40140c:	vmovdqu ymm0,YMMWORD PTR [rsp+rsi*1-0x7f]
  401412:	vmovdqu ymm1,YMMWORD PTR [rsp+rsi*1-0x5f]
  401418:	vmovdqu ymm2,YMMWORD PTR [rsp+rsi*1-0x3f]
  40141e:	vmovdqu ymm3,YMMWORD PTR [rsp+rsi*1-0x1f]
  401424:	vpshufb ymm3,ymm3,ymm4
  401429:	vpermq ymm3,ymm3,0x4e
  40142f:	vpshufb ymm2,ymm2,ymm4
  401434:	vpermq ymm2,ymm2,0x4e
  40143a:	vpshufb ymm1,ymm1,ymm4
  40143f:	vpermq ymm1,ymm1,0x4e
  401445:	vpshufb ymm0,ymm0,ymm4
  40144a:	vpermq ymm0,ymm0,0x4e
  401450:	vmovdqu YMMWORD PTR [rsp+rdx*1+0x80],ymm3
  401459:	vmovdqu YMMWORD PTR [rsp+rdx*1+0xa0],ymm2
  401462:	vmovdqu YMMWORD PTR [rsp+rdx*1+0xc0],ymm1
  40146b:	vmovdqu YMMWORD PTR [rsp+rdx*1+0xe0],ymm0
  401474:	cmp    rax,rcx
  401477:	je     401260 <main@@Base+0xb0>
  40147d:	lea    rdx,[rsp+rcx*1]
  401481:	add    rdx,0x80
  401488:	sub    rax,rcx
  40148b:	nop    DWORD PTR [rax+rax*1+0x0]
  401490:	movzx  ecx,BYTE PTR [rsp+rax*1-0x1]
  401495:	mov    BYTE PTR [rdx],cl
  401497:	inc    rdx
  40149a:	dec    rax
  40149d:	jne    401490 <main@@Base+0x2e0>
  40149f:	jmp    401260 <main@@Base+0xb0>
  4014a4:	xor    edx,edx
  4014a6:	vmovdqa ymm4,YMMWORD PTR [rip+0xb72]        # 402020 <_IO_stdin_used@@Base+0x20>
  4014ae:	test   r8,r8
  4014b1:	jne    401403 <main@@Base+0x253>
  4014b7:	jmp    401474 <main@@Base+0x2c4>
  4014b9:	xor    eax,eax
  4014bb:	lea    rsp,[rbp-0x28]
  4014bf:	pop    rbx
  4014c0:	pop    r12
  4014c2:	pop    r13
  4014c4:	pop    r14
  4014c6:	pop    r15
  4014c8:	pop    rbp
  4014c9:	ret    
  4014ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004014d0 <__libc_csu_init@@Base>:
  4014d0:	endbr64 
  4014d4:	push   r15
  4014d6:	lea    r15,[rip+0x2923]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  4014dd:	push   r14
  4014df:	mov    r14,rdx
  4014e2:	push   r13
  4014e4:	mov    r13,rsi
  4014e7:	push   r12
  4014e9:	mov    r12d,edi
  4014ec:	push   rbp
  4014ed:	lea    rbp,[rip+0x2914]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4014f4:	push   rbx
  4014f5:	sub    rbp,r15
  4014f8:	sub    rsp,0x8
  4014fc:	call   401000 <strlen@plt-0x30>
  401501:	sar    rbp,0x3
  401505:	je     401526 <__libc_csu_init@@Base+0x56>
  401507:	xor    ebx,ebx
  401509:	nop    DWORD PTR [rax+0x0]
  401510:	mov    rdx,r14
  401513:	mov    rsi,r13
  401516:	mov    edi,r12d
  401519:	call   QWORD PTR [r15+rbx*8]
  40151d:	add    rbx,0x1
  401521:	cmp    rbp,rbx
  401524:	jne    401510 <__libc_csu_init@@Base+0x40>
  401526:	add    rsp,0x8
  40152a:	pop    rbx
  40152b:	pop    rbp
  40152c:	pop    r12
  40152e:	pop    r13
  401530:	pop    r14
  401532:	pop    r15
  401534:	ret    
  401535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401540 <__libc_csu_fini@@Base>:
  401540:	endbr64 
  401544:	ret    

Disassembly of section .fini:

0000000000401548 <.fini>:
  401548:	endbr64 
  40154c:	sub    rsp,0x8
  401550:	add    rsp,0x8
  401554:	ret    
