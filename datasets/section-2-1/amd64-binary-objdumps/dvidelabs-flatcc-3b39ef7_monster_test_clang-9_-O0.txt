
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x2cfe1]        # 430ff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x2cfe2]        # 431008 <flatcc_builder_padding_base@@Base+0xa458>
  404026:	jmp    QWORD PTR [rip+0x2cfe4]        # 431010 <flatcc_builder_padding_base@@Base+0xa460>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x2cfe2]        # 431018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strncpy@plt>:
  404040:	jmp    QWORD PTR [rip+0x2cfda]        # 431020 <strncpy@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <strncmp@plt>:
  404050:	jmp    QWORD PTR [rip+0x2cfd2]        # 431028 <strncmp@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <strlen@plt>:
  404060:	jmp    QWORD PTR [rip+0x2cfca]        # 431030 <strlen@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <printf@plt>:
  404070:	jmp    QWORD PTR [rip+0x2cfc2]        # 431038 <printf@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <gettimeofday@plt>:
  404080:	jmp    QWORD PTR [rip+0x2cfba]        # 431040 <gettimeofday@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <__assert_fail@plt>:
  404090:	jmp    QWORD PTR [rip+0x2cfb2]        # 431048 <__assert_fail@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <memset@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x2cfaa]        # 431050 <memset@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <memchr@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x2cfa2]        # 431058 <memchr@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <memcmp@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x2cf9a]        # 431060 <memcmp@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <strcmp@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x2cf92]        # 431068 <strcmp@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <fprintf@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x2cf8a]        # 431070 <fprintf@GLIBC_2.2.5>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <memcpy@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x2cf82]        # 431078 <memcpy@GLIBC_2.14>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <malloc@plt>:
  404100:	jmp    QWORD PTR [rip+0x2cf7a]        # 431080 <malloc@GLIBC_2.2.5>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <realloc@plt>:
  404110:	jmp    QWORD PTR [rip+0x2cf72]        # 431088 <realloc@GLIBC_2.2.5>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <posix_memalign@plt>:
  404120:	jmp    QWORD PTR [rip+0x2cf6a]        # 431090 <posix_memalign@GLIBC_2.2.5>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404130 <_start@@Base>:
  404130:	endbr64 
  404134:	xor    ebp,ebp
  404136:	mov    r9,rdx
  404139:	pop    rsi
  40413a:	mov    rdx,rsp
  40413d:	and    rsp,0xfffffffffffffff0
  404141:	push   rax
  404142:	push   rsp
  404143:	mov    r8,0x421810
  40414a:	mov    rcx,0x4217a0
  404151:	mov    rdi,0x413d30
  404158:	call   QWORD PTR [rip+0x2ce8a]        # 430fe8 <__libc_start_main@GLIBC_2.2.5>
  40415e:	hlt    
  40415f:	nop
  404160:	endbr64 
  404164:	ret    
  404165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40416f:	nop
  404170:	mov    eax,0x4310b8
  404175:	cmp    rax,0x4310b8
  40417b:	je     404190 <_start@@Base+0x60>
  40417d:	mov    eax,0x0
  404182:	test   rax,rax
  404185:	je     404190 <_start@@Base+0x60>
  404187:	mov    edi,0x4310b8
  40418c:	jmp    rax
  40418e:	xchg   ax,ax
  404190:	ret    
  404191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    esi,0x4310b8
  4041a5:	sub    rsi,0x4310b8
  4041ac:	mov    rax,rsi
  4041af:	shr    rsi,0x3f
  4041b3:	sar    rax,0x3
  4041b7:	add    rsi,rax
  4041ba:	sar    rsi,1
  4041bd:	je     4041d0 <_start@@Base+0xa0>
  4041bf:	mov    eax,0x0
  4041c4:	test   rax,rax
  4041c7:	je     4041d0 <_start@@Base+0xa0>
  4041c9:	mov    edi,0x4310b8
  4041ce:	jmp    rax
  4041d0:	ret    
  4041d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041dc:	nop    DWORD PTR [rax+0x0]
  4041e0:	endbr64 
  4041e4:	cmp    BYTE PTR [rip+0x2cecd],0x0        # 4310b8 <__bss_start@@Base>
  4041eb:	jne    404200 <_start@@Base+0xd0>
  4041ed:	push   rbp
  4041ee:	mov    rbp,rsp
  4041f1:	call   404170 <_start@@Base+0x40>
  4041f6:	mov    BYTE PTR [rip+0x2cebb],0x1        # 4310b8 <__bss_start@@Base>
  4041fd:	pop    rbp
  4041fe:	ret    
  4041ff:	nop
  404200:	ret    
  404201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40420c:	nop    DWORD PTR [rax+0x0]
  404210:	endbr64 
  404214:	jmp    4041a0 <_start@@Base+0x70>
  404216:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404220 <verify_empty_monster@@Base>:
  404220:	push   rbp
  404221:	mov    rbp,rsp
  404224:	sub    rsp,0x40
  404228:	mov    QWORD PTR [rbp-0x10],rdi
  40422c:	mov    rdi,QWORD PTR [rbp-0x10]
  404230:	lea    rsi,[rip+0x1df49]        # 422180 <_IO_stdin_used@@Base+0x180>
  404237:	call   404410 <verify_empty_monster@@Base+0x1f0>
  40423c:	mov    QWORD PTR [rbp-0x18],rax
  404240:	mov    rdi,QWORD PTR [rbp-0x10]
  404244:	lea    rsi,[rip+0x1df3a]        # 422185 <_IO_stdin_used@@Base+0x185>
  40424b:	call   404410 <verify_empty_monster@@Base+0x1f0>
  404250:	xor    ecx,ecx
  404252:	mov    esi,ecx
  404254:	mov    QWORD PTR [rbp-0x20],rax
  404258:	mov    rdi,QWORD PTR [rbp-0x10]
  40425c:	call   404410 <verify_empty_monster@@Base+0x1f0>
  404261:	mov    QWORD PTR [rbp-0x28],rax
  404265:	mov    rdi,QWORD PTR [rbp-0x10]
  404269:	lea    rsi,[rip+0x1df1a]        # 42218a <_IO_stdin_used@@Base+0x18a>
  404270:	call   404410 <verify_empty_monster@@Base+0x1f0>
  404275:	mov    QWORD PTR [rbp-0x30],rax
  404279:	mov    rdi,QWORD PTR [rbp-0x10]
  40427d:	call   404480 <verify_empty_monster@@Base+0x260>
  404282:	mov    QWORD PTR [rbp-0x38],rax
  404286:	cmp    QWORD PTR [rbp-0x18],0x0
  40428b:	jne    4042ab <verify_empty_monster@@Base+0x8b>
  404291:	lea    rdi,[rip+0x1def8]        # 422190 <_IO_stdin_used@@Base+0x190>
  404298:	mov    al,0x0
  40429a:	call   404070 <printf@plt>
  40429f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042a6:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4042ab:	cmp    QWORD PTR [rbp-0x20],0x0
  4042b0:	je     4042d0 <verify_empty_monster@@Base+0xb0>
  4042b6:	lea    rdi,[rip+0x1deea]        # 4221a7 <_IO_stdin_used@@Base+0x1a7>
  4042bd:	mov    al,0x0
  4042bf:	call   404070 <printf@plt>
  4042c4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042cb:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4042d0:	mov    rax,QWORD PTR [rbp-0x28]
  4042d4:	cmp    rax,QWORD PTR [rbp-0x18]
  4042d8:	je     4042f8 <verify_empty_monster@@Base+0xd8>
  4042de:	lea    rdi,[rip+0x1def0]        # 4221d5 <_IO_stdin_used@@Base+0x1d5>
  4042e5:	mov    al,0x0
  4042e7:	call   404070 <printf@plt>
  4042ec:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042f3:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4042f8:	mov    rax,QWORD PTR [rbp-0x30]
  4042fc:	cmp    rax,QWORD PTR [rbp-0x18]
  404300:	je     404320 <verify_empty_monster@@Base+0x100>
  404306:	lea    rdi,[rip+0x1deff]        # 42220c <_IO_stdin_used@@Base+0x20c>
  40430d:	mov    al,0x0
  40430f:	call   404070 <printf@plt>
  404314:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40431b:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  404320:	mov    rax,QWORD PTR [rbp-0x38]
  404324:	cmp    rax,QWORD PTR [rbp-0x18]
  404328:	je     404348 <verify_empty_monster@@Base+0x128>
  40432e:	lea    rdi,[rip+0x1df0a]        # 42223f <_IO_stdin_used@@Base+0x23f>
  404335:	mov    al,0x0
  404337:	call   404070 <printf@plt>
  40433c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404343:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  404348:	mov    rdi,QWORD PTR [rbp-0x18]
  40434c:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  404351:	movsx  ecx,ax
  404354:	cmp    ecx,0x64
  404357:	je     404377 <verify_empty_monster@@Base+0x157>
  40435d:	lea    rdi,[rip+0x1df06]        # 42226a <_IO_stdin_used@@Base+0x26a>
  404364:	mov    al,0x0
  404366:	call   404070 <printf@plt>
  40436b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404372:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  404377:	mov    rdi,QWORD PTR [rbp-0x18]
  40437b:	call   404600 <verify_empty_monster@@Base+0x3e0>
  404380:	cmp    eax,0x0
  404383:	je     4043a3 <verify_empty_monster@@Base+0x183>
  404389:	lea    rdi,[rip+0x1defd]        # 42228d <_IO_stdin_used@@Base+0x28d>
  404390:	mov    al,0x0
  404392:	call   404070 <printf@plt>
  404397:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40439e:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4043a3:	mov    rdi,QWORD PTR [rbp-0x18]
  4043a7:	call   4046f0 <verify_empty_monster@@Base+0x4d0>
  4043ac:	cmp    eax,0x0
  4043af:	je     4043cf <verify_empty_monster@@Base+0x1af>
  4043b5:	lea    rdi,[rip+0x1deef]        # 4222ab <_IO_stdin_used@@Base+0x2ab>
  4043bc:	mov    al,0x0
  4043be:	call   404070 <printf@plt>
  4043c3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4043ca:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4043cf:	mov    rdi,QWORD PTR [rbp-0x18]
  4043d3:	call   4047e0 <verify_empty_monster@@Base+0x5c0>
  4043d8:	cmp    rax,0x0
  4043dc:	je     4043fc <verify_empty_monster@@Base+0x1dc>
  4043e2:	lea    rdi,[rip+0x1dede]        # 4222c7 <_IO_stdin_used@@Base+0x2c7>
  4043e9:	mov    al,0x0
  4043eb:	call   404070 <printf@plt>
  4043f0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4043f7:	jmp    404403 <verify_empty_monster@@Base+0x1e3>
  4043fc:	mov    DWORD PTR [rbp-0x4],0x0
  404403:	mov    eax,DWORD PTR [rbp-0x4]
  404406:	add    rsp,0x40
  40440a:	pop    rbp
  40440b:	ret    
  40440c:	nop    DWORD PTR [rax+0x0]
  404410:	push   rbp
  404411:	mov    rbp,rsp
  404414:	sub    rsp,0x20
  404418:	mov    QWORD PTR [rbp-0x8],rdi
  40441c:	mov    QWORD PTR [rbp-0x10],rsi
  404420:	cmp    QWORD PTR [rbp-0x8],0x0
  404425:	je     404441 <verify_empty_monster@@Base+0x221>
  40442b:	mov    rdi,QWORD PTR [rbp-0x8]
  40442f:	mov    rsi,QWORD PTR [rbp-0x10]
  404433:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  404438:	cmp    eax,0x0
  40443b:	jne    40444e <verify_empty_monster@@Base+0x22e>
  404441:	xor    eax,eax
  404443:	mov    ecx,eax
  404445:	mov    QWORD PTR [rbp-0x18],rcx
  404449:	jmp    40446e <verify_empty_monster@@Base+0x24e>
  40444e:	mov    rax,QWORD PTR [rbp-0x8]
  404452:	mov    rdi,QWORD PTR [rbp-0x8]
  404456:	mov    QWORD PTR [rbp-0x20],rax
  40445a:	call   4141e0 <main@@Base+0x4b0>
  40445f:	mov    eax,eax
  404461:	mov    ecx,eax
  404463:	mov    rdx,QWORD PTR [rbp-0x20]
  404467:	add    rdx,rcx
  40446a:	mov    QWORD PTR [rbp-0x18],rdx
  40446e:	mov    rax,QWORD PTR [rbp-0x18]
  404472:	add    rsp,0x20
  404476:	pop    rbp
  404477:	ret    
  404478:	nop    DWORD PTR [rax+rax*1+0x0]
  404480:	push   rbp
  404481:	mov    rbp,rsp
  404484:	sub    rsp,0x20
  404488:	mov    QWORD PTR [rbp-0x8],rdi
  40448c:	lea    rax,[rip+0x1dced]        # 422180 <_IO_stdin_used@@Base+0x180>
  404493:	mov    QWORD PTR [rbp-0x10],rax
  404497:	cmp    QWORD PTR [rbp-0x8],0x0
  40449c:	je     4044b8 <verify_empty_monster@@Base+0x298>
  4044a2:	mov    rdi,QWORD PTR [rbp-0x8]
  4044a6:	mov    rsi,QWORD PTR [rbp-0x10]
  4044aa:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  4044af:	cmp    eax,0x0
  4044b2:	jne    4044c5 <verify_empty_monster@@Base+0x2a5>
  4044b8:	xor    eax,eax
  4044ba:	mov    ecx,eax
  4044bc:	mov    QWORD PTR [rbp-0x18],rcx
  4044c0:	jmp    4044e5 <verify_empty_monster@@Base+0x2c5>
  4044c5:	mov    rax,QWORD PTR [rbp-0x8]
  4044c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4044cd:	mov    QWORD PTR [rbp-0x20],rax
  4044d1:	call   4141e0 <main@@Base+0x4b0>
  4044d6:	mov    eax,eax
  4044d8:	mov    ecx,eax
  4044da:	mov    rdx,QWORD PTR [rbp-0x20]
  4044de:	add    rdx,rcx
  4044e1:	mov    QWORD PTR [rbp-0x18],rdx
  4044e5:	mov    rax,QWORD PTR [rbp-0x18]
  4044e9:	add    rsp,0x20
  4044ed:	pop    rbp
  4044ee:	ret    
  4044ef:	nop
  4044f0:	push   rbp
  4044f1:	mov    rbp,rsp
  4044f4:	sub    rsp,0x30
  4044f8:	mov    QWORD PTR [rbp-0x8],rdi
  4044fc:	mov    WORD PTR [rbp-0xa],0x0
  404502:	cmp    QWORD PTR [rbp-0x8],0x0
  404507:	je     404521 <verify_empty_monster@@Base+0x301>
  40450d:	mov    al,0x1
  40450f:	test   al,0x1
  404511:	jne    40451c <verify_empty_monster@@Base+0x2fc>
  404517:	jmp    404521 <verify_empty_monster@@Base+0x301>
  40451c:	jmp    404540 <verify_empty_monster@@Base+0x320>
  404521:	lea    rdi,[rip+0x20570]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  404528:	lea    rsi,[rip+0x2058f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40452f:	mov    edx,0x2b9
  404534:	lea    rcx,[rip+0x205ff]        # 424b3a <_IO_stdin_used@@Base+0x2b3a>
  40453b:	call   404090 <__assert_fail@plt>
  404540:	mov    WORD PTR [rbp-0xc],0x2
  404546:	mov    rax,QWORD PTR [rbp-0x8]
  40454a:	mov    rcx,QWORD PTR [rbp-0x8]
  40454e:	mov    rdi,rcx
  404551:	mov    QWORD PTR [rbp-0x20],rax
  404555:	call   414210 <main@@Base+0x4e0>
  40455a:	xor    edx,edx
  40455c:	mov    ecx,edx
  40455e:	movsxd rsi,eax
  404561:	sub    rcx,rsi
  404564:	mov    rsi,QWORD PTR [rbp-0x20]
  404568:	add    rsi,rcx
  40456b:	mov    QWORD PTR [rbp-0x18],rsi
  40456f:	mov    rcx,QWORD PTR [rbp-0x18]
  404573:	mov    rdi,rcx
  404576:	call   414230 <main@@Base+0x500>
  40457b:	movzx  edx,ax
  40457e:	mov    ecx,edx
  404580:	movzx  edx,WORD PTR [rbp-0xc]
  404584:	add    edx,0x3
  404587:	movsxd rsi,edx
  40458a:	shl    rsi,0x1
  40458e:	cmp    rcx,rsi
  404591:	jb     4045bb <verify_empty_monster@@Base+0x39b>
  404597:	mov    rax,QWORD PTR [rbp-0x18]
  40459b:	movzx  ecx,WORD PTR [rbp-0xc]
  40459f:	movsxd rdx,ecx
  4045a2:	shl    rdx,0x1
  4045a6:	add    rax,rdx
  4045a9:	add    rax,0x4
  4045af:	mov    rdi,rax
  4045b2:	call   414230 <main@@Base+0x500>
  4045b7:	mov    WORD PTR [rbp-0xa],ax
  4045bb:	movzx  eax,WORD PTR [rbp-0xa]
  4045bf:	cmp    eax,0x0
  4045c2:	je     4045e9 <verify_empty_monster@@Base+0x3c9>
  4045c8:	mov    rax,QWORD PTR [rbp-0x8]
  4045cc:	movzx  ecx,WORD PTR [rbp-0xa]
  4045d0:	movsxd rdx,ecx
  4045d3:	add    rax,rdx
  4045d6:	mov    rdi,rax
  4045d9:	call   414260 <main@@Base+0x530>
  4045de:	movsx  ecx,ax
  4045e1:	mov    DWORD PTR [rbp-0x24],ecx
  4045e4:	jmp    4045f6 <verify_empty_monster@@Base+0x3d6>
  4045e9:	mov    eax,0x64
  4045ee:	mov    DWORD PTR [rbp-0x24],eax
  4045f1:	jmp    4045f6 <verify_empty_monster@@Base+0x3d6>
  4045f6:	mov    eax,DWORD PTR [rbp-0x24]
  4045f9:	cwde   
  4045fa:	add    rsp,0x30
  4045fe:	pop    rbp
  4045ff:	ret    
  404600:	push   rbp
  404601:	mov    rbp,rsp
  404604:	sub    rsp,0x20
  404608:	mov    QWORD PTR [rbp-0x8],rdi
  40460c:	mov    WORD PTR [rbp-0xa],0x0
  404612:	cmp    QWORD PTR [rbp-0x8],0x0
  404617:	je     404631 <verify_empty_monster@@Base+0x411>
  40461d:	mov    al,0x1
  40461f:	test   al,0x1
  404621:	jne    40462c <verify_empty_monster@@Base+0x40c>
  404627:	jmp    404631 <verify_empty_monster@@Base+0x411>
  40462c:	jmp    404650 <verify_empty_monster@@Base+0x430>
  404631:	lea    rdi,[rip+0x20460]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  404638:	lea    rsi,[rip+0x2047f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40463f:	mov    edx,0x2b9
  404644:	lea    rcx,[rip+0x20531]        # 424b7c <_IO_stdin_used@@Base+0x2b7c>
  40464b:	call   404090 <__assert_fail@plt>
  404650:	mov    WORD PTR [rbp-0xc],0x2
  404656:	mov    rax,QWORD PTR [rbp-0x8]
  40465a:	mov    rcx,QWORD PTR [rbp-0x8]
  40465e:	mov    rdi,rcx
  404661:	mov    QWORD PTR [rbp-0x20],rax
  404665:	call   414210 <main@@Base+0x4e0>
  40466a:	xor    edx,edx
  40466c:	mov    ecx,edx
  40466e:	movsxd rsi,eax
  404671:	sub    rcx,rsi
  404674:	mov    rsi,QWORD PTR [rbp-0x20]
  404678:	add    rsi,rcx
  40467b:	mov    QWORD PTR [rbp-0x18],rsi
  40467f:	mov    rcx,QWORD PTR [rbp-0x18]
  404683:	mov    rdi,rcx
  404686:	call   414230 <main@@Base+0x500>
  40468b:	movzx  edx,ax
  40468e:	mov    ecx,edx
  404690:	movzx  edx,WORD PTR [rbp-0xc]
  404694:	add    edx,0x3
  404697:	movsxd rsi,edx
  40469a:	shl    rsi,0x1
  40469e:	cmp    rcx,rsi
  4046a1:	jb     4046cb <verify_empty_monster@@Base+0x4ab>
  4046a7:	mov    rax,QWORD PTR [rbp-0x18]
  4046ab:	movzx  ecx,WORD PTR [rbp-0xc]
  4046af:	movsxd rdx,ecx
  4046b2:	shl    rdx,0x1
  4046b6:	add    rax,rdx
  4046b9:	add    rax,0x4
  4046bf:	mov    rdi,rax
  4046c2:	call   414230 <main@@Base+0x500>
  4046c7:	mov    WORD PTR [rbp-0xa],ax
  4046cb:	movzx  eax,WORD PTR [rbp-0xa]
  4046cf:	cmp    eax,0x0
  4046d2:	setne  cl
  4046d5:	and    cl,0x1
  4046d8:	movzx  eax,cl
  4046db:	add    rsp,0x20
  4046df:	pop    rbp
  4046e0:	ret    
  4046e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4046f0:	push   rbp
  4046f1:	mov    rbp,rsp
  4046f4:	sub    rsp,0x20
  4046f8:	mov    QWORD PTR [rbp-0x8],rdi
  4046fc:	mov    WORD PTR [rbp-0xa],0x0
  404702:	cmp    QWORD PTR [rbp-0x8],0x0
  404707:	je     404721 <verify_empty_monster@@Base+0x501>
  40470d:	mov    al,0x1
  40470f:	test   al,0x1
  404711:	jne    40471c <verify_empty_monster@@Base+0x4fc>
  404717:	jmp    404721 <verify_empty_monster@@Base+0x501>
  40471c:	jmp    404740 <verify_empty_monster@@Base+0x520>
  404721:	lea    rdi,[rip+0x20370]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  404728:	lea    rsi,[rip+0x2038f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40472f:	mov    edx,0x2b8
  404734:	lea    rcx,[rip+0x2048a]        # 424bc5 <_IO_stdin_used@@Base+0x2bc5>
  40473b:	call   404090 <__assert_fail@plt>
  404740:	mov    WORD PTR [rbp-0xc],0x0
  404746:	mov    rax,QWORD PTR [rbp-0x8]
  40474a:	mov    rcx,QWORD PTR [rbp-0x8]
  40474e:	mov    rdi,rcx
  404751:	mov    QWORD PTR [rbp-0x20],rax
  404755:	call   414210 <main@@Base+0x4e0>
  40475a:	xor    edx,edx
  40475c:	mov    ecx,edx
  40475e:	movsxd rsi,eax
  404761:	sub    rcx,rsi
  404764:	mov    rsi,QWORD PTR [rbp-0x20]
  404768:	add    rsi,rcx
  40476b:	mov    QWORD PTR [rbp-0x18],rsi
  40476f:	mov    rcx,QWORD PTR [rbp-0x18]
  404773:	mov    rdi,rcx
  404776:	call   414230 <main@@Base+0x500>
  40477b:	movzx  edx,ax
  40477e:	mov    ecx,edx
  404780:	movzx  edx,WORD PTR [rbp-0xc]
  404784:	add    edx,0x3
  404787:	movsxd rsi,edx
  40478a:	shl    rsi,0x1
  40478e:	cmp    rcx,rsi
  404791:	jb     4047bb <verify_empty_monster@@Base+0x59b>
  404797:	mov    rax,QWORD PTR [rbp-0x18]
  40479b:	movzx  ecx,WORD PTR [rbp-0xc]
  40479f:	movsxd rdx,ecx
  4047a2:	shl    rdx,0x1
  4047a6:	add    rax,rdx
  4047a9:	add    rax,0x4
  4047af:	mov    rdi,rax
  4047b2:	call   414230 <main@@Base+0x500>
  4047b7:	mov    WORD PTR [rbp-0xa],ax
  4047bb:	movzx  eax,WORD PTR [rbp-0xa]
  4047bf:	cmp    eax,0x0
  4047c2:	setne  cl
  4047c5:	and    cl,0x1
  4047c8:	movzx  eax,cl
  4047cb:	add    rsp,0x20
  4047cf:	pop    rbp
  4047d0:	ret    
  4047d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047db:	nop    DWORD PTR [rax+rax*1+0x0]
  4047e0:	push   rbp
  4047e1:	mov    rbp,rsp
  4047e4:	sub    rsp,0x30
  4047e8:	mov    QWORD PTR [rbp-0x10],rdi
  4047ec:	mov    WORD PTR [rbp-0x12],0x0
  4047f2:	cmp    QWORD PTR [rbp-0x10],0x0
  4047f7:	je     404811 <verify_empty_monster@@Base+0x5f1>
  4047fd:	mov    al,0x1
  4047ff:	test   al,0x1
  404801:	jne    40480c <verify_empty_monster@@Base+0x5ec>
  404807:	jmp    404811 <verify_empty_monster@@Base+0x5f1>
  40480c:	jmp    404830 <verify_empty_monster@@Base+0x610>
  404811:	lea    rdi,[rip+0x20280]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  404818:	lea    rsi,[rip+0x2029f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40481f:	mov    edx,0x2b8
  404824:	lea    rcx,[rip+0x203e4]        # 424c0f <_IO_stdin_used@@Base+0x2c0f>
  40482b:	call   404090 <__assert_fail@plt>
  404830:	mov    WORD PTR [rbp-0x14],0x0
  404836:	mov    rax,QWORD PTR [rbp-0x10]
  40483a:	mov    rcx,QWORD PTR [rbp-0x10]
  40483e:	mov    rdi,rcx
  404841:	mov    QWORD PTR [rbp-0x28],rax
  404845:	call   414210 <main@@Base+0x4e0>
  40484a:	xor    edx,edx
  40484c:	mov    ecx,edx
  40484e:	movsxd rsi,eax
  404851:	sub    rcx,rsi
  404854:	mov    rsi,QWORD PTR [rbp-0x28]
  404858:	add    rsi,rcx
  40485b:	mov    QWORD PTR [rbp-0x20],rsi
  40485f:	mov    rcx,QWORD PTR [rbp-0x20]
  404863:	mov    rdi,rcx
  404866:	call   414230 <main@@Base+0x500>
  40486b:	movzx  edx,ax
  40486e:	mov    ecx,edx
  404870:	movzx  edx,WORD PTR [rbp-0x14]
  404874:	add    edx,0x3
  404877:	movsxd rsi,edx
  40487a:	shl    rsi,0x1
  40487e:	cmp    rcx,rsi
  404881:	jb     4048ab <verify_empty_monster@@Base+0x68b>
  404887:	mov    rax,QWORD PTR [rbp-0x20]
  40488b:	movzx  ecx,WORD PTR [rbp-0x14]
  40488f:	movsxd rdx,ecx
  404892:	shl    rdx,0x1
  404896:	add    rax,rdx
  404899:	add    rax,0x4
  40489f:	mov    rdi,rax
  4048a2:	call   414230 <main@@Base+0x500>
  4048a7:	mov    WORD PTR [rbp-0x12],ax
  4048ab:	cmp    WORD PTR [rbp-0x12],0x0
  4048b0:	je     4048cd <verify_empty_monster@@Base+0x6ad>
  4048b6:	mov    rax,QWORD PTR [rbp-0x10]
  4048ba:	movzx  ecx,WORD PTR [rbp-0x12]
  4048be:	movsxd rdx,ecx
  4048c1:	add    rax,rdx
  4048c4:	mov    QWORD PTR [rbp-0x8],rax
  4048c8:	jmp    4048d5 <verify_empty_monster@@Base+0x6b5>
  4048cd:	mov    QWORD PTR [rbp-0x8],0x0
  4048d5:	mov    rax,QWORD PTR [rbp-0x8]
  4048d9:	add    rsp,0x30
  4048dd:	pop    rbp
  4048de:	ret    
  4048df:	nop

00000000004048e0 <test_enums@@Base>:
  4048e0:	push   rbp
  4048e1:	mov    rbp,rsp
  4048e4:	xor    eax,eax
  4048e6:	mov    QWORD PTR [rbp-0x8],rdi
  4048ea:	pop    rbp
  4048eb:	ret    
  4048ec:	nop    DWORD PTR [rax+0x0]

00000000004048f0 <test_type_aliases@@Base>:
  4048f0:	push   rbp
  4048f1:	mov    rbp,rsp
  4048f4:	sub    rsp,0x70
  4048f8:	mov    QWORD PTR [rbp-0x8],rdi
  4048fc:	mov    DWORD PTR [rbp-0xc],0x0
  404903:	mov    QWORD PTR [rbp-0x18],0x0
  40490b:	mov    rdi,QWORD PTR [rbp-0x8]
  40490f:	call   418ef0 <flatcc_builder_reset@@Base>
  404914:	xor    ecx,ecx
  404916:	mov    edx,ecx
  404918:	mov    rdi,QWORD PTR [rbp-0x8]
  40491c:	mov    rsi,rdx
  40491f:	mov    DWORD PTR [rbp-0x34],eax
  404922:	call   404b80 <test_type_aliases@@Base+0x290>
  404927:	xor    ecx,ecx
  404929:	mov    edx,ecx
  40492b:	mov    DWORD PTR [rbp-0x2c],eax
  40492e:	mov    rdi,QWORD PTR [rbp-0x8]
  404932:	mov    rsi,rdx
  404935:	call   404bc0 <test_type_aliases@@Base+0x2d0>
  40493a:	vmovss xmm0,DWORD PTR [rip+0x1d6c2]        # 422004 <_IO_stdin_used@@Base+0x4>
  404942:	vmovsd xmm1,QWORD PTR [rip+0x1d6d6]        # 422020 <_IO_stdin_used@@Base+0x20>
  40494a:	mov    DWORD PTR [rbp-0x30],eax
  40494d:	mov    rdi,QWORD PTR [rbp-0x8]
  404951:	mov    eax,DWORD PTR [rbp-0x2c]
  404954:	mov    ecx,DWORD PTR [rbp-0x30]
  404957:	mov    esi,0xffffff80
  40495c:	mov    edx,0xff
  404961:	mov    r8d,0xffff8000
  404967:	mov    DWORD PTR [rbp-0x38],ecx
  40496a:	mov    ecx,r8d
  40496d:	mov    r8d,0xffff
  404973:	mov    r9d,0x80000000
  404979:	mov    DWORD PTR [rsp],0xffffffff
  404980:	movabs r10,0x8000000000000000
  40498a:	mov    QWORD PTR [rsp+0x8],r10
  40498f:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  404998:	mov    DWORD PTR [rsp+0x18],eax
  40499c:	mov    eax,DWORD PTR [rbp-0x38]
  40499f:	mov    DWORD PTR [rsp+0x20],eax
  4049a3:	call   404c00 <test_type_aliases@@Base+0x310>
  4049a8:	mov    rdi,QWORD PTR [rbp-0x8]
  4049ac:	lea    rsi,[rbp-0x20]
  4049b0:	mov    DWORD PTR [rbp-0x3c],eax
  4049b3:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  4049b8:	mov    QWORD PTR [rbp-0x18],rax
  4049bc:	mov    rdi,QWORD PTR [rbp-0x18]
  4049c0:	mov    rsi,QWORD PTR [rbp-0x20]
  4049c4:	call   404d20 <test_type_aliases@@Base+0x430>
  4049c9:	mov    DWORD PTR [rbp-0xc],eax
  4049cc:	cmp    eax,0x0
  4049cf:	je     404a11 <test_type_aliases@@Base+0x121>
  4049d5:	mov    rax,QWORD PTR [rip+0x2c61c]        # 430ff8 <stderr@GLIBC_2.2.5>
  4049dc:	mov    rsi,QWORD PTR [rbp-0x18]
  4049e0:	mov    rdx,QWORD PTR [rbp-0x20]
  4049e4:	mov    rcx,QWORD PTR [rax]
  4049e7:	lea    rdi,[rip+0x1d8fa]        # 4222e8 <_IO_stdin_used@@Base+0x2e8>
  4049ee:	call   404d60 <test_type_aliases@@Base+0x470>
  4049f3:	mov    edi,DWORD PTR [rbp-0xc]
  4049f6:	call   41f3a0 <flatcc_verify_error_string@@Base>
  4049fb:	lea    rdi,[rip+0x1d8f9]        # 4222fb <_IO_stdin_used@@Base+0x2fb>
  404a02:	mov    rsi,rax
  404a05:	mov    al,0x0
  404a07:	call   404070 <printf@plt>
  404a0c:	jmp    404b53 <test_type_aliases@@Base+0x263>
  404a11:	mov    rdi,QWORD PTR [rbp-0x18]
  404a15:	call   404f20 <test_type_aliases@@Base+0x630>
  404a1a:	mov    QWORD PTR [rbp-0x28],rax
  404a1e:	mov    rdi,QWORD PTR [rbp-0x28]
  404a22:	call   404f90 <test_type_aliases@@Base+0x6a0>
  404a27:	movsx  ecx,al
  404a2a:	cmp    ecx,0xffffff80
  404a2d:	je     404a38 <test_type_aliases@@Base+0x148>
  404a33:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404a38:	mov    rdi,QWORD PTR [rbp-0x28]
  404a3c:	call   4050a0 <test_type_aliases@@Base+0x7b0>
  404a41:	movsx  ecx,ax
  404a44:	cmp    ecx,0xffff8000
  404a4a:	je     404a55 <test_type_aliases@@Base+0x165>
  404a50:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404a55:	mov    rdi,QWORD PTR [rbp-0x28]
  404a59:	call   4051b0 <test_type_aliases@@Base+0x8c0>
  404a5e:	cmp    eax,0x80000000
  404a63:	je     404a6e <test_type_aliases@@Base+0x17e>
  404a69:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404a6e:	mov    rdi,QWORD PTR [rbp-0x28]
  404a72:	call   4052c0 <test_type_aliases@@Base+0x9d0>
  404a77:	movabs rcx,0x8000000000000000
  404a81:	cmp    rax,rcx
  404a84:	je     404a8f <test_type_aliases@@Base+0x19f>
  404a8a:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404a8f:	mov    rdi,QWORD PTR [rbp-0x28]
  404a93:	call   4053d0 <test_type_aliases@@Base+0xae0>
  404a98:	movzx  ecx,al
  404a9b:	cmp    ecx,0xff
  404aa1:	je     404aac <test_type_aliases@@Base+0x1bc>
  404aa7:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404aac:	mov    rdi,QWORD PTR [rbp-0x28]
  404ab0:	call   4054e0 <test_type_aliases@@Base+0xbf0>
  404ab5:	movzx  ecx,ax
  404ab8:	cmp    ecx,0xffff
  404abe:	je     404ac9 <test_type_aliases@@Base+0x1d9>
  404ac4:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404ac9:	mov    rdi,QWORD PTR [rbp-0x28]
  404acd:	call   4055f0 <test_type_aliases@@Base+0xd00>
  404ad2:	cmp    eax,0xffffffff
  404ad5:	je     404ae0 <test_type_aliases@@Base+0x1f0>
  404adb:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404ae0:	mov    rdi,QWORD PTR [rbp-0x28]
  404ae4:	call   405700 <test_type_aliases@@Base+0xe10>
  404ae9:	cmp    rax,0xffffffffffffffff
  404aed:	je     404af8 <test_type_aliases@@Base+0x208>
  404af3:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404af8:	mov    rdi,QWORD PTR [rbp-0x28]
  404afc:	call   405810 <test_type_aliases@@Base+0xf20>
  404b01:	vmovss xmm1,DWORD PTR [rip+0x1d4fb]        # 422004 <_IO_stdin_used@@Base+0x4>
  404b09:	vucomiss xmm0,xmm1
  404b0d:	jne    404b1e <test_type_aliases@@Base+0x22e>
  404b13:	jp     404b1e <test_type_aliases@@Base+0x22e>
  404b19:	jmp    404b23 <test_type_aliases@@Base+0x233>
  404b1e:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404b23:	mov    rdi,QWORD PTR [rbp-0x28]
  404b27:	call   405930 <test_type_aliases@@Base+0x1040>
  404b2c:	vmovsd xmm1,QWORD PTR [rip+0x1d4ec]        # 422020 <_IO_stdin_used@@Base+0x20>
  404b34:	vucomisd xmm0,xmm1
  404b38:	jne    404b49 <test_type_aliases@@Base+0x259>
  404b3e:	jp     404b49 <test_type_aliases@@Base+0x259>
  404b44:	jmp    404b4e <test_type_aliases@@Base+0x25e>
  404b49:	jmp    404b65 <test_type_aliases@@Base+0x275>
  404b4e:	jmp    404b53 <test_type_aliases@@Base+0x263>
  404b53:	mov    rdi,QWORD PTR [rbp-0x18]
  404b57:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  404b5c:	mov    eax,DWORD PTR [rbp-0xc]
  404b5f:	add    rsp,0x70
  404b63:	pop    rbp
  404b64:	ret    
  404b65:	mov    DWORD PTR [rbp-0xc],0xffffffff
  404b6c:	lea    rdi,[rip+0x1d7b4]        # 422327 <_IO_stdin_used@@Base+0x327>
  404b73:	mov    al,0x0
  404b75:	call   404070 <printf@plt>
  404b7a:	jmp    404b53 <test_type_aliases@@Base+0x263>
  404b7f:	nop
  404b80:	push   rbp
  404b81:	mov    rbp,rsp
  404b84:	sub    rsp,0x20
  404b88:	mov    QWORD PTR [rbp-0x8],rdi
  404b8c:	mov    QWORD PTR [rbp-0x10],rsi
  404b90:	mov    QWORD PTR [rbp-0x18],rdx
  404b94:	mov    rdi,QWORD PTR [rbp-0x8]
  404b98:	mov    rsi,QWORD PTR [rbp-0x10]
  404b9c:	mov    rdx,QWORD PTR [rbp-0x18]
  404ba0:	mov    ecx,0x1
  404ba5:	mov    r8d,0x1
  404bab:	mov    r9d,0xffffffff
  404bb1:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  404bb6:	add    rsp,0x20
  404bba:	pop    rbp
  404bbb:	ret    
  404bbc:	nop    DWORD PTR [rax+0x0]
  404bc0:	push   rbp
  404bc1:	mov    rbp,rsp
  404bc4:	sub    rsp,0x20
  404bc8:	mov    QWORD PTR [rbp-0x8],rdi
  404bcc:	mov    QWORD PTR [rbp-0x10],rsi
  404bd0:	mov    QWORD PTR [rbp-0x18],rdx
  404bd4:	mov    rdi,QWORD PTR [rbp-0x8]
  404bd8:	mov    rax,QWORD PTR [rbp-0x10]
  404bdc:	mov    rdx,QWORD PTR [rbp-0x18]
  404be0:	mov    rsi,rax
  404be3:	mov    ecx,0x8
  404be8:	mov    r8d,0x8
  404bee:	mov    r9d,0x1fffffff
  404bf4:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  404bf9:	add    rsp,0x20
  404bfd:	pop    rbp
  404bfe:	ret    
  404bff:	nop
  404c00:	push   rbp
  404c01:	mov    rbp,rsp
  404c04:	push   r15
  404c06:	push   r14
  404c08:	push   r13
  404c0a:	push   r12
  404c0c:	push   rbx
  404c0d:	sub    rsp,0x88
  404c14:	mov    eax,DWORD PTR [rbp+0x30]
  404c17:	mov    r10d,DWORD PTR [rbp+0x28]
  404c1b:	mov    r11,QWORD PTR [rbp+0x20]
  404c1f:	mov    rbx,QWORD PTR [rbp+0x18]
  404c23:	mov    r14d,DWORD PTR [rbp+0x10]
  404c27:	mov    QWORD PTR [rbp-0x38],rdi
  404c2b:	mov    BYTE PTR [rbp-0x39],sil
  404c2f:	mov    BYTE PTR [rbp-0x3a],dl
  404c32:	mov    WORD PTR [rbp-0x3c],cx
  404c36:	mov    WORD PTR [rbp-0x3e],r8w
  404c3b:	mov    DWORD PTR [rbp-0x44],r9d
  404c3f:	vmovss DWORD PTR [rbp-0x48],xmm0
  404c44:	vmovsd QWORD PTR [rbp-0x50],xmm1
  404c49:	mov    rdi,QWORD PTR [rbp-0x38]
  404c4d:	lea    rsi,[rip+0x1d52c]        # 422180 <_IO_stdin_used@@Base+0x180>
  404c54:	mov    DWORD PTR [rbp-0x54],eax
  404c57:	mov    DWORD PTR [rbp-0x58],r10d
  404c5b:	mov    QWORD PTR [rbp-0x60],r11
  404c5f:	mov    QWORD PTR [rbp-0x68],rbx
  404c63:	mov    DWORD PTR [rbp-0x6c],r14d
  404c67:	call   405ba0 <test_empty_monster@@Base+0x150>
  404c6c:	cmp    eax,0x0
  404c6f:	je     404c81 <test_type_aliases@@Base+0x391>
  404c75:	mov    DWORD PTR [rbp-0x2c],0x0
  404c7c:	jmp    404d07 <test_type_aliases@@Base+0x417>
  404c81:	mov    rdi,QWORD PTR [rbp-0x38]
  404c85:	mov    rax,QWORD PTR [rbp-0x38]
  404c89:	mov    cl,BYTE PTR [rbp-0x39]
  404c8c:	mov    dl,BYTE PTR [rbp-0x3a]
  404c8f:	mov    si,WORD PTR [rbp-0x3c]
  404c93:	mov    r8w,WORD PTR [rbp-0x3e]
  404c98:	mov    r9d,DWORD PTR [rbp-0x44]
  404c9c:	mov    r10d,DWORD PTR [rbp+0x10]
  404ca0:	mov    r11,QWORD PTR [rbp+0x18]
  404ca4:	mov    rbx,QWORD PTR [rbp+0x20]
  404ca8:	vmovss xmm0,DWORD PTR [rbp-0x48]
  404cad:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  404cb2:	mov    r14d,DWORD PTR [rbp+0x28]
  404cb6:	mov    r15d,DWORD PTR [rbp+0x30]
  404cba:	mov    QWORD PTR [rbp-0x78],rdi
  404cbe:	mov    rdi,rax
  404cc1:	movsx  r12d,cl
  404cc5:	mov    WORD PTR [rbp-0x7a],si
  404cc9:	mov    esi,r12d
  404ccc:	movzx  edx,dl
  404ccf:	mov    r13w,WORD PTR [rbp-0x7a]
  404cd4:	movsx  ecx,r13w
  404cd8:	movzx  r8d,r8w
  404cdc:	mov    DWORD PTR [rsp],r10d
  404ce0:	mov    QWORD PTR [rsp+0x8],r11
  404ce5:	mov    QWORD PTR [rsp+0x10],rbx
  404cea:	mov    DWORD PTR [rsp+0x18],r14d
  404cef:	mov    DWORD PTR [rsp+0x20],r15d
  404cf4:	call   4142b0 <main@@Base+0x580>
  404cf9:	mov    rdi,QWORD PTR [rbp-0x78]
  404cfd:	mov    esi,eax
  404cff:	call   405c90 <test_empty_monster@@Base+0x240>
  404d04:	mov    DWORD PTR [rbp-0x2c],eax
  404d07:	mov    eax,DWORD PTR [rbp-0x2c]
  404d0a:	add    rsp,0x88
  404d11:	pop    rbx
  404d12:	pop    r12
  404d14:	pop    r13
  404d16:	pop    r14
  404d18:	pop    r15
  404d1a:	pop    rbp
  404d1b:	ret    
  404d1c:	nop    DWORD PTR [rax+0x0]
  404d20:	push   rbp
  404d21:	mov    rbp,rsp
  404d24:	sub    rsp,0x10
  404d28:	mov    QWORD PTR [rbp-0x8],rdi
  404d2c:	mov    QWORD PTR [rbp-0x10],rsi
  404d30:	mov    rdi,QWORD PTR [rbp-0x8]
  404d34:	mov    rsi,QWORD PTR [rbp-0x10]
  404d38:	lea    rdx,[rip+0x1d441]        # 422180 <_IO_stdin_used@@Base+0x180>
  404d3f:	lea    rcx,[rip+0x1000a]        # 414d50 <main@@Base+0x1020>
  404d46:	call   420a30 <flatcc_verify_table_as_root@@Base>
  404d4b:	add    rsp,0x10
  404d4f:	pop    rbp
  404d50:	ret    
  404d51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d60:	push   rbp
  404d61:	mov    rbp,rsp
  404d64:	sub    rsp,0x50
  404d68:	mov    QWORD PTR [rbp-0x8],rdi
  404d6c:	mov    QWORD PTR [rbp-0x10],rsi
  404d70:	mov    QWORD PTR [rbp-0x18],rdx
  404d74:	mov    QWORD PTR [rbp-0x20],rcx
  404d78:	mov    rax,QWORD PTR [rbp-0x10]
  404d7c:	mov    QWORD PTR [rbp-0x48],rax
  404d80:	cmp    QWORD PTR [rbp-0x8],0x0
  404d85:	je     404da1 <test_type_aliases@@Base+0x4b1>
  404d8b:	mov    rdi,QWORD PTR [rbp-0x20]
  404d8f:	mov    rdx,QWORD PTR [rbp-0x8]
  404d93:	lea    rsi,[rip+0x20051]        # 424deb <_IO_stdin_used@@Base+0x2deb>
  404d9a:	mov    al,0x0
  404d9c:	call   4040e0 <fprintf@plt>
  404da1:	mov    DWORD PTR [rbp-0x24],0x0
  404da8:	mov    eax,DWORD PTR [rbp-0x24]
  404dab:	mov    rcx,QWORD PTR [rbp-0x18]
  404daf:	cmp    eax,ecx
  404db1:	jae    404ec1 <test_type_aliases@@Base+0x5d1>
  404db7:	mov    eax,DWORD PTR [rbp-0x24]
  404dba:	and    eax,0xf
  404dbd:	cmp    eax,0x0
  404dc0:	jne    404e00 <test_type_aliases@@Base+0x510>
  404dc6:	cmp    DWORD PTR [rbp-0x24],0x0
  404dca:	je     404de6 <test_type_aliases@@Base+0x4f6>
  404dd0:	lea    rdx,[rbp-0x40]
  404dd4:	mov    rdi,QWORD PTR [rbp-0x20]
  404dd8:	lea    rsi,[rip+0x20011]        # 424df0 <_IO_stdin_used@@Base+0x2df0>
  404ddf:	mov    al,0x0
  404de1:	call   4040e0 <fprintf@plt>
  404de6:	mov    rdi,QWORD PTR [rbp-0x20]
  404dea:	mov    edx,DWORD PTR [rbp-0x24]
  404ded:	lea    rsi,[rip+0x20002]        # 424df6 <_IO_stdin_used@@Base+0x2df6>
  404df4:	mov    al,0x0
  404df6:	call   4040e0 <fprintf@plt>
  404dfb:	jmp    404e26 <test_type_aliases@@Base+0x536>
  404e00:	mov    eax,DWORD PTR [rbp-0x24]
  404e03:	and    eax,0x7
  404e06:	cmp    eax,0x0
  404e09:	jne    404e21 <test_type_aliases@@Base+0x531>
  404e0f:	mov    rdi,QWORD PTR [rbp-0x20]
  404e13:	lea    rsi,[rip+0x1ffec]        # 424e06 <_IO_stdin_used@@Base+0x2e06>
  404e1a:	mov    al,0x0
  404e1c:	call   4040e0 <fprintf@plt>
  404e21:	jmp    404e26 <test_type_aliases@@Base+0x536>
  404e26:	mov    rdi,QWORD PTR [rbp-0x20]
  404e2a:	mov    rax,QWORD PTR [rbp-0x48]
  404e2e:	mov    ecx,DWORD PTR [rbp-0x24]
  404e31:	mov    edx,ecx
  404e33:	movzx  edx,BYTE PTR [rax+rdx*1]
  404e37:	lea    rsi,[rip+0x1ffc0]        # 424dfe <_IO_stdin_used@@Base+0x2dfe>
  404e3e:	mov    al,0x0
  404e40:	call   4040e0 <fprintf@plt>
  404e45:	mov    rsi,QWORD PTR [rbp-0x48]
  404e49:	mov    ecx,DWORD PTR [rbp-0x24]
  404e4c:	mov    edi,ecx
  404e4e:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  404e52:	cmp    ecx,0x20
  404e55:	jl     404e71 <test_type_aliases@@Base+0x581>
  404e5b:	mov    rax,QWORD PTR [rbp-0x48]
  404e5f:	mov    ecx,DWORD PTR [rbp-0x24]
  404e62:	mov    edx,ecx
  404e64:	movzx  ecx,BYTE PTR [rax+rdx*1]
  404e68:	cmp    ecx,0x7e
  404e6b:	jle    404e85 <test_type_aliases@@Base+0x595>
  404e71:	mov    eax,DWORD PTR [rbp-0x24]
  404e74:	and    eax,0xf
  404e77:	mov    eax,eax
  404e79:	mov    ecx,eax
  404e7b:	mov    BYTE PTR [rbp+rcx*1-0x40],0x2e
  404e80:	jmp    404ea1 <test_type_aliases@@Base+0x5b1>
  404e85:	mov    rax,QWORD PTR [rbp-0x48]
  404e89:	mov    ecx,DWORD PTR [rbp-0x24]
  404e8c:	mov    edx,ecx
  404e8e:	mov    sil,BYTE PTR [rax+rdx*1]
  404e92:	mov    ecx,DWORD PTR [rbp-0x24]
  404e95:	and    ecx,0xf
  404e98:	mov    ecx,ecx
  404e9a:	mov    eax,ecx
  404e9c:	mov    BYTE PTR [rbp+rax*1-0x40],sil
  404ea1:	mov    eax,DWORD PTR [rbp-0x24]
  404ea4:	and    eax,0xf
  404ea7:	add    eax,0x1
  404eaa:	mov    eax,eax
  404eac:	mov    ecx,eax
  404eae:	mov    BYTE PTR [rbp+rcx*1-0x40],0x0
  404eb3:	mov    eax,DWORD PTR [rbp-0x24]
  404eb6:	add    eax,0x1
  404eb9:	mov    DWORD PTR [rbp-0x24],eax
  404ebc:	jmp    404da8 <test_type_aliases@@Base+0x4b8>
  404ec1:	jmp    404ec6 <test_type_aliases@@Base+0x5d6>
  404ec6:	mov    eax,DWORD PTR [rbp-0x24]
  404ec9:	and    eax,0xf
  404ecc:	cmp    eax,0x0
  404ecf:	je     404ef5 <test_type_aliases@@Base+0x605>
  404ed5:	mov    rdi,QWORD PTR [rbp-0x20]
  404ed9:	lea    rsi,[rip+0x1ff24]        # 424e04 <_IO_stdin_used@@Base+0x2e04>
  404ee0:	mov    al,0x0
  404ee2:	call   4040e0 <fprintf@plt>
  404ee7:	mov    ecx,DWORD PTR [rbp-0x24]
  404eea:	add    ecx,0x1
  404eed:	mov    DWORD PTR [rbp-0x24],ecx
  404ef0:	jmp    404ec6 <test_type_aliases@@Base+0x5d6>
  404ef5:	lea    rdx,[rbp-0x40]
  404ef9:	mov    rdi,QWORD PTR [rbp-0x20]
  404efd:	lea    rsi,[rip+0x1feec]        # 424df0 <_IO_stdin_used@@Base+0x2df0>
  404f04:	mov    al,0x0
  404f06:	call   4040e0 <fprintf@plt>
  404f0b:	add    rsp,0x50
  404f0f:	pop    rbp
  404f10:	ret    
  404f11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404f20:	push   rbp
  404f21:	mov    rbp,rsp
  404f24:	sub    rsp,0x20
  404f28:	mov    QWORD PTR [rbp-0x8],rdi
  404f2c:	lea    rax,[rip+0x1d24d]        # 422180 <_IO_stdin_used@@Base+0x180>
  404f33:	mov    QWORD PTR [rbp-0x10],rax
  404f37:	cmp    QWORD PTR [rbp-0x8],0x0
  404f3c:	je     404f58 <test_type_aliases@@Base+0x668>
  404f42:	mov    rdi,QWORD PTR [rbp-0x8]
  404f46:	mov    rsi,QWORD PTR [rbp-0x10]
  404f4a:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  404f4f:	cmp    eax,0x0
  404f52:	jne    404f65 <test_type_aliases@@Base+0x675>
  404f58:	xor    eax,eax
  404f5a:	mov    ecx,eax
  404f5c:	mov    QWORD PTR [rbp-0x18],rcx
  404f60:	jmp    404f85 <test_type_aliases@@Base+0x695>
  404f65:	mov    rax,QWORD PTR [rbp-0x8]
  404f69:	mov    rdi,QWORD PTR [rbp-0x8]
  404f6d:	mov    QWORD PTR [rbp-0x20],rax
  404f71:	call   4141e0 <main@@Base+0x4b0>
  404f76:	mov    eax,eax
  404f78:	mov    ecx,eax
  404f7a:	mov    rdx,QWORD PTR [rbp-0x20]
  404f7e:	add    rdx,rcx
  404f81:	mov    QWORD PTR [rbp-0x18],rdx
  404f85:	mov    rax,QWORD PTR [rbp-0x18]
  404f89:	add    rsp,0x20
  404f8d:	pop    rbp
  404f8e:	ret    
  404f8f:	nop
  404f90:	push   rbp
  404f91:	mov    rbp,rsp
  404f94:	sub    rsp,0x30
  404f98:	mov    QWORD PTR [rbp-0x8],rdi
  404f9c:	mov    WORD PTR [rbp-0xa],0x0
  404fa2:	cmp    QWORD PTR [rbp-0x8],0x0
  404fa7:	je     404fc1 <test_type_aliases@@Base+0x6d1>
  404fad:	mov    al,0x1
  404faf:	test   al,0x1
  404fb1:	jne    404fbc <test_type_aliases@@Base+0x6cc>
  404fb7:	jmp    404fc1 <test_type_aliases@@Base+0x6d1>
  404fbc:	jmp    404fe0 <test_type_aliases@@Base+0x6f0>
  404fc1:	lea    rdi,[rip+0x1fad0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  404fc8:	lea    rsi,[rip+0x1faef]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  404fcf:	mov    edx,0x2ed
  404fd4:	lea    rcx,[rip+0x1fe2d]        # 424e08 <_IO_stdin_used@@Base+0x2e08>
  404fdb:	call   404090 <__assert_fail@plt>
  404fe0:	mov    WORD PTR [rbp-0xc],0x0
  404fe6:	mov    rax,QWORD PTR [rbp-0x8]
  404fea:	mov    rcx,QWORD PTR [rbp-0x8]
  404fee:	mov    rdi,rcx
  404ff1:	mov    QWORD PTR [rbp-0x20],rax
  404ff5:	call   414210 <main@@Base+0x4e0>
  404ffa:	xor    edx,edx
  404ffc:	mov    ecx,edx
  404ffe:	movsxd rsi,eax
  405001:	sub    rcx,rsi
  405004:	mov    rsi,QWORD PTR [rbp-0x20]
  405008:	add    rsi,rcx
  40500b:	mov    QWORD PTR [rbp-0x18],rsi
  40500f:	mov    rcx,QWORD PTR [rbp-0x18]
  405013:	mov    rdi,rcx
  405016:	call   414230 <main@@Base+0x500>
  40501b:	movzx  edx,ax
  40501e:	mov    ecx,edx
  405020:	movzx  edx,WORD PTR [rbp-0xc]
  405024:	add    edx,0x3
  405027:	movsxd rsi,edx
  40502a:	shl    rsi,0x1
  40502e:	cmp    rcx,rsi
  405031:	jb     40505b <test_type_aliases@@Base+0x76b>
  405037:	mov    rax,QWORD PTR [rbp-0x18]
  40503b:	movzx  ecx,WORD PTR [rbp-0xc]
  40503f:	movsxd rdx,ecx
  405042:	shl    rdx,0x1
  405046:	add    rax,rdx
  405049:	add    rax,0x4
  40504f:	mov    rdi,rax
  405052:	call   414230 <main@@Base+0x500>
  405057:	mov    WORD PTR [rbp-0xa],ax
  40505b:	movzx  eax,WORD PTR [rbp-0xa]
  40505f:	cmp    eax,0x0
  405062:	je     405089 <test_type_aliases@@Base+0x799>
  405068:	mov    rax,QWORD PTR [rbp-0x8]
  40506c:	movzx  ecx,WORD PTR [rbp-0xa]
  405070:	movsxd rdx,ecx
  405073:	add    rax,rdx
  405076:	mov    rdi,rax
  405079:	call   414fb0 <main@@Base+0x1280>
  40507e:	movsx  ecx,al
  405081:	mov    DWORD PTR [rbp-0x24],ecx
  405084:	jmp    405093 <test_type_aliases@@Base+0x7a3>
  405089:	xor    eax,eax
  40508b:	mov    DWORD PTR [rbp-0x24],eax
  40508e:	jmp    405093 <test_type_aliases@@Base+0x7a3>
  405093:	mov    eax,DWORD PTR [rbp-0x24]
  405096:	movsx  eax,al
  405099:	add    rsp,0x30
  40509d:	pop    rbp
  40509e:	ret    
  40509f:	nop
  4050a0:	push   rbp
  4050a1:	mov    rbp,rsp
  4050a4:	sub    rsp,0x30
  4050a8:	mov    QWORD PTR [rbp-0x8],rdi
  4050ac:	mov    WORD PTR [rbp-0xa],0x0
  4050b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4050b7:	je     4050d1 <test_type_aliases@@Base+0x7e1>
  4050bd:	mov    al,0x1
  4050bf:	test   al,0x1
  4050c1:	jne    4050cc <test_type_aliases@@Base+0x7dc>
  4050c7:	jmp    4050d1 <test_type_aliases@@Base+0x7e1>
  4050cc:	jmp    4050f0 <test_type_aliases@@Base+0x800>
  4050d1:	lea    rdi,[rip+0x1f9c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4050d8:	lea    rsi,[rip+0x1f9df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4050df:	mov    edx,0x2ef
  4050e4:	lea    rcx,[rip+0x1fd66]        # 424e51 <_IO_stdin_used@@Base+0x2e51>
  4050eb:	call   404090 <__assert_fail@plt>
  4050f0:	mov    WORD PTR [rbp-0xc],0x2
  4050f6:	mov    rax,QWORD PTR [rbp-0x8]
  4050fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4050fe:	mov    rdi,rcx
  405101:	mov    QWORD PTR [rbp-0x20],rax
  405105:	call   414210 <main@@Base+0x4e0>
  40510a:	xor    edx,edx
  40510c:	mov    ecx,edx
  40510e:	movsxd rsi,eax
  405111:	sub    rcx,rsi
  405114:	mov    rsi,QWORD PTR [rbp-0x20]
  405118:	add    rsi,rcx
  40511b:	mov    QWORD PTR [rbp-0x18],rsi
  40511f:	mov    rcx,QWORD PTR [rbp-0x18]
  405123:	mov    rdi,rcx
  405126:	call   414230 <main@@Base+0x500>
  40512b:	movzx  edx,ax
  40512e:	mov    ecx,edx
  405130:	movzx  edx,WORD PTR [rbp-0xc]
  405134:	add    edx,0x3
  405137:	movsxd rsi,edx
  40513a:	shl    rsi,0x1
  40513e:	cmp    rcx,rsi
  405141:	jb     40516b <test_type_aliases@@Base+0x87b>
  405147:	mov    rax,QWORD PTR [rbp-0x18]
  40514b:	movzx  ecx,WORD PTR [rbp-0xc]
  40514f:	movsxd rdx,ecx
  405152:	shl    rdx,0x1
  405156:	add    rax,rdx
  405159:	add    rax,0x4
  40515f:	mov    rdi,rax
  405162:	call   414230 <main@@Base+0x500>
  405167:	mov    WORD PTR [rbp-0xa],ax
  40516b:	movzx  eax,WORD PTR [rbp-0xa]
  40516f:	cmp    eax,0x0
  405172:	je     405199 <test_type_aliases@@Base+0x8a9>
  405178:	mov    rax,QWORD PTR [rbp-0x8]
  40517c:	movzx  ecx,WORD PTR [rbp-0xa]
  405180:	movsxd rdx,ecx
  405183:	add    rax,rdx
  405186:	mov    rdi,rax
  405189:	call   414260 <main@@Base+0x530>
  40518e:	movsx  ecx,ax
  405191:	mov    DWORD PTR [rbp-0x24],ecx
  405194:	jmp    4051a3 <test_type_aliases@@Base+0x8b3>
  405199:	xor    eax,eax
  40519b:	mov    DWORD PTR [rbp-0x24],eax
  40519e:	jmp    4051a3 <test_type_aliases@@Base+0x8b3>
  4051a3:	mov    eax,DWORD PTR [rbp-0x24]
  4051a6:	cwde   
  4051a7:	add    rsp,0x30
  4051ab:	pop    rbp
  4051ac:	ret    
  4051ad:	nop    DWORD PTR [rax]
  4051b0:	push   rbp
  4051b1:	mov    rbp,rsp
  4051b4:	sub    rsp,0x30
  4051b8:	mov    QWORD PTR [rbp-0x8],rdi
  4051bc:	mov    WORD PTR [rbp-0xa],0x0
  4051c2:	cmp    QWORD PTR [rbp-0x8],0x0
  4051c7:	je     4051e1 <test_type_aliases@@Base+0x8f1>
  4051cd:	mov    al,0x1
  4051cf:	test   al,0x1
  4051d1:	jne    4051dc <test_type_aliases@@Base+0x8ec>
  4051d7:	jmp    4051e1 <test_type_aliases@@Base+0x8f1>
  4051dc:	jmp    405200 <test_type_aliases@@Base+0x910>
  4051e1:	lea    rdi,[rip+0x1f8b0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4051e8:	lea    rsi,[rip+0x1f8cf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4051ef:	mov    edx,0x2f1
  4051f4:	lea    rcx,[rip+0x1fca1]        # 424e9c <_IO_stdin_used@@Base+0x2e9c>
  4051fb:	call   404090 <__assert_fail@plt>
  405200:	mov    WORD PTR [rbp-0xc],0x4
  405206:	mov    rax,QWORD PTR [rbp-0x8]
  40520a:	mov    rcx,QWORD PTR [rbp-0x8]
  40520e:	mov    rdi,rcx
  405211:	mov    QWORD PTR [rbp-0x20],rax
  405215:	call   414210 <main@@Base+0x4e0>
  40521a:	xor    edx,edx
  40521c:	mov    ecx,edx
  40521e:	movsxd rsi,eax
  405221:	sub    rcx,rsi
  405224:	mov    rsi,QWORD PTR [rbp-0x20]
  405228:	add    rsi,rcx
  40522b:	mov    QWORD PTR [rbp-0x18],rsi
  40522f:	mov    rcx,QWORD PTR [rbp-0x18]
  405233:	mov    rdi,rcx
  405236:	call   414230 <main@@Base+0x500>
  40523b:	movzx  edx,ax
  40523e:	mov    ecx,edx
  405240:	movzx  edx,WORD PTR [rbp-0xc]
  405244:	add    edx,0x3
  405247:	movsxd rsi,edx
  40524a:	shl    rsi,0x1
  40524e:	cmp    rcx,rsi
  405251:	jb     40527b <test_type_aliases@@Base+0x98b>
  405257:	mov    rax,QWORD PTR [rbp-0x18]
  40525b:	movzx  ecx,WORD PTR [rbp-0xc]
  40525f:	movsxd rdx,ecx
  405262:	shl    rdx,0x1
  405266:	add    rax,rdx
  405269:	add    rax,0x4
  40526f:	mov    rdi,rax
  405272:	call   414230 <main@@Base+0x500>
  405277:	mov    WORD PTR [rbp-0xa],ax
  40527b:	movzx  eax,WORD PTR [rbp-0xa]
  40527f:	cmp    eax,0x0
  405282:	je     4052a6 <test_type_aliases@@Base+0x9b6>
  405288:	mov    rax,QWORD PTR [rbp-0x8]
  40528c:	movzx  ecx,WORD PTR [rbp-0xa]
  405290:	movsxd rdx,ecx
  405293:	add    rax,rdx
  405296:	mov    rdi,rax
  405299:	call   414ff0 <main@@Base+0x12c0>
  40529e:	mov    DWORD PTR [rbp-0x24],eax
  4052a1:	jmp    4052b0 <test_type_aliases@@Base+0x9c0>
  4052a6:	xor    eax,eax
  4052a8:	mov    DWORD PTR [rbp-0x24],eax
  4052ab:	jmp    4052b0 <test_type_aliases@@Base+0x9c0>
  4052b0:	mov    eax,DWORD PTR [rbp-0x24]
  4052b3:	add    rsp,0x30
  4052b7:	pop    rbp
  4052b8:	ret    
  4052b9:	nop    DWORD PTR [rax+0x0]
  4052c0:	push   rbp
  4052c1:	mov    rbp,rsp
  4052c4:	sub    rsp,0x30
  4052c8:	mov    QWORD PTR [rbp-0x8],rdi
  4052cc:	mov    WORD PTR [rbp-0xa],0x0
  4052d2:	cmp    QWORD PTR [rbp-0x8],0x0
  4052d7:	je     4052f1 <test_type_aliases@@Base+0xa01>
  4052dd:	mov    al,0x1
  4052df:	test   al,0x1
  4052e1:	jne    4052ec <test_type_aliases@@Base+0x9fc>
  4052e7:	jmp    4052f1 <test_type_aliases@@Base+0xa01>
  4052ec:	jmp    405310 <test_type_aliases@@Base+0xa20>
  4052f1:	lea    rdi,[rip+0x1f7a0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4052f8:	lea    rsi,[rip+0x1f7bf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4052ff:	mov    edx,0x2f3
  405304:	lea    rcx,[rip+0x1fbdc]        # 424ee7 <_IO_stdin_used@@Base+0x2ee7>
  40530b:	call   404090 <__assert_fail@plt>
  405310:	mov    WORD PTR [rbp-0xc],0x6
  405316:	mov    rax,QWORD PTR [rbp-0x8]
  40531a:	mov    rcx,QWORD PTR [rbp-0x8]
  40531e:	mov    rdi,rcx
  405321:	mov    QWORD PTR [rbp-0x20],rax
  405325:	call   414210 <main@@Base+0x4e0>
  40532a:	xor    edx,edx
  40532c:	mov    ecx,edx
  40532e:	movsxd rsi,eax
  405331:	sub    rcx,rsi
  405334:	mov    rsi,QWORD PTR [rbp-0x20]
  405338:	add    rsi,rcx
  40533b:	mov    QWORD PTR [rbp-0x18],rsi
  40533f:	mov    rcx,QWORD PTR [rbp-0x18]
  405343:	mov    rdi,rcx
  405346:	call   414230 <main@@Base+0x500>
  40534b:	movzx  edx,ax
  40534e:	mov    ecx,edx
  405350:	movzx  edx,WORD PTR [rbp-0xc]
  405354:	add    edx,0x3
  405357:	movsxd rsi,edx
  40535a:	shl    rsi,0x1
  40535e:	cmp    rcx,rsi
  405361:	jb     40538b <test_type_aliases@@Base+0xa9b>
  405367:	mov    rax,QWORD PTR [rbp-0x18]
  40536b:	movzx  ecx,WORD PTR [rbp-0xc]
  40536f:	movsxd rdx,ecx
  405372:	shl    rdx,0x1
  405376:	add    rax,rdx
  405379:	add    rax,0x4
  40537f:	mov    rdi,rax
  405382:	call   414230 <main@@Base+0x500>
  405387:	mov    WORD PTR [rbp-0xa],ax
  40538b:	movzx  eax,WORD PTR [rbp-0xa]
  40538f:	cmp    eax,0x0
  405392:	je     4053b7 <test_type_aliases@@Base+0xac7>
  405398:	mov    rax,QWORD PTR [rbp-0x8]
  40539c:	movzx  ecx,WORD PTR [rbp-0xa]
  4053a0:	movsxd rdx,ecx
  4053a3:	add    rax,rdx
  4053a6:	mov    rdi,rax
  4053a9:	call   415020 <main@@Base+0x12f0>
  4053ae:	mov    QWORD PTR [rbp-0x28],rax
  4053b2:	jmp    4053c4 <test_type_aliases@@Base+0xad4>
  4053b7:	xor    eax,eax
  4053b9:	mov    ecx,eax
  4053bb:	mov    QWORD PTR [rbp-0x28],rcx
  4053bf:	jmp    4053c4 <test_type_aliases@@Base+0xad4>
  4053c4:	mov    rax,QWORD PTR [rbp-0x28]
  4053c8:	add    rsp,0x30
  4053cc:	pop    rbp
  4053cd:	ret    
  4053ce:	xchg   ax,ax
  4053d0:	push   rbp
  4053d1:	mov    rbp,rsp
  4053d4:	sub    rsp,0x30
  4053d8:	mov    QWORD PTR [rbp-0x8],rdi
  4053dc:	mov    WORD PTR [rbp-0xa],0x0
  4053e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4053e7:	je     405401 <test_type_aliases@@Base+0xb11>
  4053ed:	mov    al,0x1
  4053ef:	test   al,0x1
  4053f1:	jne    4053fc <test_type_aliases@@Base+0xb0c>
  4053f7:	jmp    405401 <test_type_aliases@@Base+0xb11>
  4053fc:	jmp    405420 <test_type_aliases@@Base+0xb30>
  405401:	lea    rdi,[rip+0x1f690]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405408:	lea    rsi,[rip+0x1f6af]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40540f:	mov    edx,0x2ee
  405414:	lea    rcx,[rip+0x1fb17]        # 424f32 <_IO_stdin_used@@Base+0x2f32>
  40541b:	call   404090 <__assert_fail@plt>
  405420:	mov    WORD PTR [rbp-0xc],0x1
  405426:	mov    rax,QWORD PTR [rbp-0x8]
  40542a:	mov    rcx,QWORD PTR [rbp-0x8]
  40542e:	mov    rdi,rcx
  405431:	mov    QWORD PTR [rbp-0x20],rax
  405435:	call   414210 <main@@Base+0x4e0>
  40543a:	xor    edx,edx
  40543c:	mov    ecx,edx
  40543e:	movsxd rsi,eax
  405441:	sub    rcx,rsi
  405444:	mov    rsi,QWORD PTR [rbp-0x20]
  405448:	add    rsi,rcx
  40544b:	mov    QWORD PTR [rbp-0x18],rsi
  40544f:	mov    rcx,QWORD PTR [rbp-0x18]
  405453:	mov    rdi,rcx
  405456:	call   414230 <main@@Base+0x500>
  40545b:	movzx  edx,ax
  40545e:	mov    ecx,edx
  405460:	movzx  edx,WORD PTR [rbp-0xc]
  405464:	add    edx,0x3
  405467:	movsxd rsi,edx
  40546a:	shl    rsi,0x1
  40546e:	cmp    rcx,rsi
  405471:	jb     40549b <test_type_aliases@@Base+0xbab>
  405477:	mov    rax,QWORD PTR [rbp-0x18]
  40547b:	movzx  ecx,WORD PTR [rbp-0xc]
  40547f:	movsxd rdx,ecx
  405482:	shl    rdx,0x1
  405486:	add    rax,rdx
  405489:	add    rax,0x4
  40548f:	mov    rdi,rax
  405492:	call   414230 <main@@Base+0x500>
  405497:	mov    WORD PTR [rbp-0xa],ax
  40549b:	movzx  eax,WORD PTR [rbp-0xa]
  40549f:	cmp    eax,0x0
  4054a2:	je     4054c9 <test_type_aliases@@Base+0xbd9>
  4054a8:	mov    rax,QWORD PTR [rbp-0x8]
  4054ac:	movzx  ecx,WORD PTR [rbp-0xa]
  4054b0:	movsxd rdx,ecx
  4054b3:	add    rax,rdx
  4054b6:	mov    rdi,rax
  4054b9:	call   415050 <main@@Base+0x1320>
  4054be:	movzx  ecx,al
  4054c1:	mov    DWORD PTR [rbp-0x24],ecx
  4054c4:	jmp    4054d3 <test_type_aliases@@Base+0xbe3>
  4054c9:	xor    eax,eax
  4054cb:	mov    DWORD PTR [rbp-0x24],eax
  4054ce:	jmp    4054d3 <test_type_aliases@@Base+0xbe3>
  4054d3:	mov    eax,DWORD PTR [rbp-0x24]
  4054d6:	movzx  eax,al
  4054d9:	add    rsp,0x30
  4054dd:	pop    rbp
  4054de:	ret    
  4054df:	nop
  4054e0:	push   rbp
  4054e1:	mov    rbp,rsp
  4054e4:	sub    rsp,0x30
  4054e8:	mov    QWORD PTR [rbp-0x8],rdi
  4054ec:	mov    WORD PTR [rbp-0xa],0x0
  4054f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4054f7:	je     405511 <test_type_aliases@@Base+0xc21>
  4054fd:	mov    al,0x1
  4054ff:	test   al,0x1
  405501:	jne    40550c <test_type_aliases@@Base+0xc1c>
  405507:	jmp    405511 <test_type_aliases@@Base+0xc21>
  40550c:	jmp    405530 <test_type_aliases@@Base+0xc40>
  405511:	lea    rdi,[rip+0x1f580]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405518:	lea    rsi,[rip+0x1f59f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40551f:	mov    edx,0x2f0
  405524:	lea    rcx,[rip+0x1fa51]        # 424f7c <_IO_stdin_used@@Base+0x2f7c>
  40552b:	call   404090 <__assert_fail@plt>
  405530:	mov    WORD PTR [rbp-0xc],0x3
  405536:	mov    rax,QWORD PTR [rbp-0x8]
  40553a:	mov    rcx,QWORD PTR [rbp-0x8]
  40553e:	mov    rdi,rcx
  405541:	mov    QWORD PTR [rbp-0x20],rax
  405545:	call   414210 <main@@Base+0x4e0>
  40554a:	xor    edx,edx
  40554c:	mov    ecx,edx
  40554e:	movsxd rsi,eax
  405551:	sub    rcx,rsi
  405554:	mov    rsi,QWORD PTR [rbp-0x20]
  405558:	add    rsi,rcx
  40555b:	mov    QWORD PTR [rbp-0x18],rsi
  40555f:	mov    rcx,QWORD PTR [rbp-0x18]
  405563:	mov    rdi,rcx
  405566:	call   414230 <main@@Base+0x500>
  40556b:	movzx  edx,ax
  40556e:	mov    ecx,edx
  405570:	movzx  edx,WORD PTR [rbp-0xc]
  405574:	add    edx,0x3
  405577:	movsxd rsi,edx
  40557a:	shl    rsi,0x1
  40557e:	cmp    rcx,rsi
  405581:	jb     4055ab <test_type_aliases@@Base+0xcbb>
  405587:	mov    rax,QWORD PTR [rbp-0x18]
  40558b:	movzx  ecx,WORD PTR [rbp-0xc]
  40558f:	movsxd rdx,ecx
  405592:	shl    rdx,0x1
  405596:	add    rax,rdx
  405599:	add    rax,0x4
  40559f:	mov    rdi,rax
  4055a2:	call   414230 <main@@Base+0x500>
  4055a7:	mov    WORD PTR [rbp-0xa],ax
  4055ab:	movzx  eax,WORD PTR [rbp-0xa]
  4055af:	cmp    eax,0x0
  4055b2:	je     4055d9 <test_type_aliases@@Base+0xce9>
  4055b8:	mov    rax,QWORD PTR [rbp-0x8]
  4055bc:	movzx  ecx,WORD PTR [rbp-0xa]
  4055c0:	movsxd rdx,ecx
  4055c3:	add    rax,rdx
  4055c6:	mov    rdi,rax
  4055c9:	call   415090 <main@@Base+0x1360>
  4055ce:	movzx  ecx,ax
  4055d1:	mov    DWORD PTR [rbp-0x24],ecx
  4055d4:	jmp    4055e3 <test_type_aliases@@Base+0xcf3>
  4055d9:	xor    eax,eax
  4055db:	mov    DWORD PTR [rbp-0x24],eax
  4055de:	jmp    4055e3 <test_type_aliases@@Base+0xcf3>
  4055e3:	mov    eax,DWORD PTR [rbp-0x24]
  4055e6:	movzx  eax,ax
  4055e9:	add    rsp,0x30
  4055ed:	pop    rbp
  4055ee:	ret    
  4055ef:	nop
  4055f0:	push   rbp
  4055f1:	mov    rbp,rsp
  4055f4:	sub    rsp,0x30
  4055f8:	mov    QWORD PTR [rbp-0x8],rdi
  4055fc:	mov    WORD PTR [rbp-0xa],0x0
  405602:	cmp    QWORD PTR [rbp-0x8],0x0
  405607:	je     405621 <test_type_aliases@@Base+0xd31>
  40560d:	mov    al,0x1
  40560f:	test   al,0x1
  405611:	jne    40561c <test_type_aliases@@Base+0xd2c>
  405617:	jmp    405621 <test_type_aliases@@Base+0xd31>
  40561c:	jmp    405640 <test_type_aliases@@Base+0xd50>
  405621:	lea    rdi,[rip+0x1f470]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405628:	lea    rsi,[rip+0x1f48f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40562f:	mov    edx,0x2f2
  405634:	lea    rcx,[rip+0x1f98d]        # 424fc8 <_IO_stdin_used@@Base+0x2fc8>
  40563b:	call   404090 <__assert_fail@plt>
  405640:	mov    WORD PTR [rbp-0xc],0x5
  405646:	mov    rax,QWORD PTR [rbp-0x8]
  40564a:	mov    rcx,QWORD PTR [rbp-0x8]
  40564e:	mov    rdi,rcx
  405651:	mov    QWORD PTR [rbp-0x20],rax
  405655:	call   414210 <main@@Base+0x4e0>
  40565a:	xor    edx,edx
  40565c:	mov    ecx,edx
  40565e:	movsxd rsi,eax
  405661:	sub    rcx,rsi
  405664:	mov    rsi,QWORD PTR [rbp-0x20]
  405668:	add    rsi,rcx
  40566b:	mov    QWORD PTR [rbp-0x18],rsi
  40566f:	mov    rcx,QWORD PTR [rbp-0x18]
  405673:	mov    rdi,rcx
  405676:	call   414230 <main@@Base+0x500>
  40567b:	movzx  edx,ax
  40567e:	mov    ecx,edx
  405680:	movzx  edx,WORD PTR [rbp-0xc]
  405684:	add    edx,0x3
  405687:	movsxd rsi,edx
  40568a:	shl    rsi,0x1
  40568e:	cmp    rcx,rsi
  405691:	jb     4056bb <test_type_aliases@@Base+0xdcb>
  405697:	mov    rax,QWORD PTR [rbp-0x18]
  40569b:	movzx  ecx,WORD PTR [rbp-0xc]
  40569f:	movsxd rdx,ecx
  4056a2:	shl    rdx,0x1
  4056a6:	add    rax,rdx
  4056a9:	add    rax,0x4
  4056af:	mov    rdi,rax
  4056b2:	call   414230 <main@@Base+0x500>
  4056b7:	mov    WORD PTR [rbp-0xa],ax
  4056bb:	movzx  eax,WORD PTR [rbp-0xa]
  4056bf:	cmp    eax,0x0
  4056c2:	je     4056e6 <test_type_aliases@@Base+0xdf6>
  4056c8:	mov    rax,QWORD PTR [rbp-0x8]
  4056cc:	movzx  ecx,WORD PTR [rbp-0xa]
  4056d0:	movsxd rdx,ecx
  4056d3:	add    rax,rdx
  4056d6:	mov    rdi,rax
  4056d9:	call   4150d0 <main@@Base+0x13a0>
  4056de:	mov    DWORD PTR [rbp-0x24],eax
  4056e1:	jmp    4056f0 <test_type_aliases@@Base+0xe00>
  4056e6:	xor    eax,eax
  4056e8:	mov    DWORD PTR [rbp-0x24],eax
  4056eb:	jmp    4056f0 <test_type_aliases@@Base+0xe00>
  4056f0:	mov    eax,DWORD PTR [rbp-0x24]
  4056f3:	add    rsp,0x30
  4056f7:	pop    rbp
  4056f8:	ret    
  4056f9:	nop    DWORD PTR [rax+0x0]
  405700:	push   rbp
  405701:	mov    rbp,rsp
  405704:	sub    rsp,0x30
  405708:	mov    QWORD PTR [rbp-0x8],rdi
  40570c:	mov    WORD PTR [rbp-0xa],0x0
  405712:	cmp    QWORD PTR [rbp-0x8],0x0
  405717:	je     405731 <test_type_aliases@@Base+0xe41>
  40571d:	mov    al,0x1
  40571f:	test   al,0x1
  405721:	jne    40572c <test_type_aliases@@Base+0xe3c>
  405727:	jmp    405731 <test_type_aliases@@Base+0xe41>
  40572c:	jmp    405750 <test_type_aliases@@Base+0xe60>
  405731:	lea    rdi,[rip+0x1f360]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405738:	lea    rsi,[rip+0x1f37f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40573f:	mov    edx,0x2f4
  405744:	lea    rcx,[rip+0x1f8c9]        # 425014 <_IO_stdin_used@@Base+0x3014>
  40574b:	call   404090 <__assert_fail@plt>
  405750:	mov    WORD PTR [rbp-0xc],0x7
  405756:	mov    rax,QWORD PTR [rbp-0x8]
  40575a:	mov    rcx,QWORD PTR [rbp-0x8]
  40575e:	mov    rdi,rcx
  405761:	mov    QWORD PTR [rbp-0x20],rax
  405765:	call   414210 <main@@Base+0x4e0>
  40576a:	xor    edx,edx
  40576c:	mov    ecx,edx
  40576e:	movsxd rsi,eax
  405771:	sub    rcx,rsi
  405774:	mov    rsi,QWORD PTR [rbp-0x20]
  405778:	add    rsi,rcx
  40577b:	mov    QWORD PTR [rbp-0x18],rsi
  40577f:	mov    rcx,QWORD PTR [rbp-0x18]
  405783:	mov    rdi,rcx
  405786:	call   414230 <main@@Base+0x500>
  40578b:	movzx  edx,ax
  40578e:	mov    ecx,edx
  405790:	movzx  edx,WORD PTR [rbp-0xc]
  405794:	add    edx,0x3
  405797:	movsxd rsi,edx
  40579a:	shl    rsi,0x1
  40579e:	cmp    rcx,rsi
  4057a1:	jb     4057cb <test_type_aliases@@Base+0xedb>
  4057a7:	mov    rax,QWORD PTR [rbp-0x18]
  4057ab:	movzx  ecx,WORD PTR [rbp-0xc]
  4057af:	movsxd rdx,ecx
  4057b2:	shl    rdx,0x1
  4057b6:	add    rax,rdx
  4057b9:	add    rax,0x4
  4057bf:	mov    rdi,rax
  4057c2:	call   414230 <main@@Base+0x500>
  4057c7:	mov    WORD PTR [rbp-0xa],ax
  4057cb:	movzx  eax,WORD PTR [rbp-0xa]
  4057cf:	cmp    eax,0x0
  4057d2:	je     4057f7 <test_type_aliases@@Base+0xf07>
  4057d8:	mov    rax,QWORD PTR [rbp-0x8]
  4057dc:	movzx  ecx,WORD PTR [rbp-0xa]
  4057e0:	movsxd rdx,ecx
  4057e3:	add    rax,rdx
  4057e6:	mov    rdi,rax
  4057e9:	call   415100 <main@@Base+0x13d0>
  4057ee:	mov    QWORD PTR [rbp-0x28],rax
  4057f2:	jmp    405804 <test_type_aliases@@Base+0xf14>
  4057f7:	xor    eax,eax
  4057f9:	mov    ecx,eax
  4057fb:	mov    QWORD PTR [rbp-0x28],rcx
  4057ff:	jmp    405804 <test_type_aliases@@Base+0xf14>
  405804:	mov    rax,QWORD PTR [rbp-0x28]
  405808:	add    rsp,0x30
  40580c:	pop    rbp
  40580d:	ret    
  40580e:	xchg   ax,ax
  405810:	push   rbp
  405811:	mov    rbp,rsp
  405814:	sub    rsp,0x30
  405818:	mov    QWORD PTR [rbp-0x8],rdi
  40581c:	mov    WORD PTR [rbp-0xa],0x0
  405822:	cmp    QWORD PTR [rbp-0x8],0x0
  405827:	je     405841 <test_type_aliases@@Base+0xf51>
  40582d:	mov    al,0x1
  40582f:	test   al,0x1
  405831:	jne    40583c <test_type_aliases@@Base+0xf4c>
  405837:	jmp    405841 <test_type_aliases@@Base+0xf51>
  40583c:	jmp    405860 <test_type_aliases@@Base+0xf70>
  405841:	lea    rdi,[rip+0x1f250]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405848:	lea    rsi,[rip+0x1f26f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40584f:	mov    edx,0x2f5
  405854:	lea    rcx,[rip+0x1f805]        # 425060 <_IO_stdin_used@@Base+0x3060>
  40585b:	call   404090 <__assert_fail@plt>
  405860:	mov    WORD PTR [rbp-0xc],0x8
  405866:	mov    rax,QWORD PTR [rbp-0x8]
  40586a:	mov    rcx,QWORD PTR [rbp-0x8]
  40586e:	mov    rdi,rcx
  405871:	mov    QWORD PTR [rbp-0x20],rax
  405875:	call   414210 <main@@Base+0x4e0>
  40587a:	xor    edx,edx
  40587c:	mov    ecx,edx
  40587e:	movsxd rsi,eax
  405881:	sub    rcx,rsi
  405884:	mov    rsi,QWORD PTR [rbp-0x20]
  405888:	add    rsi,rcx
  40588b:	mov    QWORD PTR [rbp-0x18],rsi
  40588f:	mov    rcx,QWORD PTR [rbp-0x18]
  405893:	mov    rdi,rcx
  405896:	call   414230 <main@@Base+0x500>
  40589b:	movzx  edx,ax
  40589e:	mov    ecx,edx
  4058a0:	movzx  edx,WORD PTR [rbp-0xc]
  4058a4:	add    edx,0x3
  4058a7:	movsxd rsi,edx
  4058aa:	shl    rsi,0x1
  4058ae:	cmp    rcx,rsi
  4058b1:	jb     4058db <test_type_aliases@@Base+0xfeb>
  4058b7:	mov    rax,QWORD PTR [rbp-0x18]
  4058bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4058bf:	movsxd rdx,ecx
  4058c2:	shl    rdx,0x1
  4058c6:	add    rax,rdx
  4058c9:	add    rax,0x4
  4058cf:	mov    rdi,rax
  4058d2:	call   414230 <main@@Base+0x500>
  4058d7:	mov    WORD PTR [rbp-0xa],ax
  4058db:	movzx  eax,WORD PTR [rbp-0xa]
  4058df:	cmp    eax,0x0
  4058e2:	je     405908 <test_type_aliases@@Base+0x1018>
  4058e8:	mov    rax,QWORD PTR [rbp-0x8]
  4058ec:	movzx  ecx,WORD PTR [rbp-0xa]
  4058f0:	movsxd rdx,ecx
  4058f3:	add    rax,rdx
  4058f6:	mov    rdi,rax
  4058f9:	call   415130 <main@@Base+0x1400>
  4058fe:	vmovss DWORD PTR [rbp-0x24],xmm0
  405903:	jmp    405916 <test_type_aliases@@Base+0x1026>
  405908:	vxorps xmm0,xmm0,xmm0
  40590c:	vmovss DWORD PTR [rbp-0x24],xmm0
  405911:	jmp    405916 <test_type_aliases@@Base+0x1026>
  405916:	vmovss xmm0,DWORD PTR [rbp-0x24]
  40591b:	add    rsp,0x30
  40591f:	pop    rbp
  405920:	ret    
  405921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40592b:	nop    DWORD PTR [rax+rax*1+0x0]
  405930:	push   rbp
  405931:	mov    rbp,rsp
  405934:	sub    rsp,0x30
  405938:	mov    QWORD PTR [rbp-0x8],rdi
  40593c:	mov    WORD PTR [rbp-0xa],0x0
  405942:	cmp    QWORD PTR [rbp-0x8],0x0
  405947:	je     405961 <test_type_aliases@@Base+0x1071>
  40594d:	mov    al,0x1
  40594f:	test   al,0x1
  405951:	jne    40595c <test_type_aliases@@Base+0x106c>
  405957:	jmp    405961 <test_type_aliases@@Base+0x1071>
  40595c:	jmp    405980 <test_type_aliases@@Base+0x1090>
  405961:	lea    rdi,[rip+0x1f130]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  405968:	lea    rsi,[rip+0x1f14f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40596f:	mov    edx,0x2f6
  405974:	lea    rcx,[rip+0x1f72e]        # 4250a9 <_IO_stdin_used@@Base+0x30a9>
  40597b:	call   404090 <__assert_fail@plt>
  405980:	mov    WORD PTR [rbp-0xc],0x9
  405986:	mov    rax,QWORD PTR [rbp-0x8]
  40598a:	mov    rcx,QWORD PTR [rbp-0x8]
  40598e:	mov    rdi,rcx
  405991:	mov    QWORD PTR [rbp-0x20],rax
  405995:	call   414210 <main@@Base+0x4e0>
  40599a:	xor    edx,edx
  40599c:	mov    ecx,edx
  40599e:	movsxd rsi,eax
  4059a1:	sub    rcx,rsi
  4059a4:	mov    rsi,QWORD PTR [rbp-0x20]
  4059a8:	add    rsi,rcx
  4059ab:	mov    QWORD PTR [rbp-0x18],rsi
  4059af:	mov    rcx,QWORD PTR [rbp-0x18]
  4059b3:	mov    rdi,rcx
  4059b6:	call   414230 <main@@Base+0x500>
  4059bb:	movzx  edx,ax
  4059be:	mov    ecx,edx
  4059c0:	movzx  edx,WORD PTR [rbp-0xc]
  4059c4:	add    edx,0x3
  4059c7:	movsxd rsi,edx
  4059ca:	shl    rsi,0x1
  4059ce:	cmp    rcx,rsi
  4059d1:	jb     4059fb <test_type_aliases@@Base+0x110b>
  4059d7:	mov    rax,QWORD PTR [rbp-0x18]
  4059db:	movzx  ecx,WORD PTR [rbp-0xc]
  4059df:	movsxd rdx,ecx
  4059e2:	shl    rdx,0x1
  4059e6:	add    rax,rdx
  4059e9:	add    rax,0x4
  4059ef:	mov    rdi,rax
  4059f2:	call   414230 <main@@Base+0x500>
  4059f7:	mov    WORD PTR [rbp-0xa],ax
  4059fb:	movzx  eax,WORD PTR [rbp-0xa]
  4059ff:	cmp    eax,0x0
  405a02:	je     405a28 <test_type_aliases@@Base+0x1138>
  405a08:	mov    rax,QWORD PTR [rbp-0x8]
  405a0c:	movzx  ecx,WORD PTR [rbp-0xa]
  405a10:	movsxd rdx,ecx
  405a13:	add    rax,rdx
  405a16:	mov    rdi,rax
  405a19:	call   415170 <main@@Base+0x1440>
  405a1e:	vmovsd QWORD PTR [rbp-0x28],xmm0
  405a23:	jmp    405a36 <test_type_aliases@@Base+0x1146>
  405a28:	vxorps xmm0,xmm0,xmm0
  405a2c:	vmovsd QWORD PTR [rbp-0x28],xmm0
  405a31:	jmp    405a36 <test_type_aliases@@Base+0x1146>
  405a36:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  405a3b:	add    rsp,0x30
  405a3f:	pop    rbp
  405a40:	ret    
  405a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a50 <test_empty_monster@@Base>:
  405a50:	push   rbp
  405a51:	mov    rbp,rsp
  405a54:	sub    rsp,0x40
  405a58:	mov    QWORD PTR [rbp-0x10],rdi
  405a5c:	mov    rdi,QWORD PTR [rbp-0x10]
  405a60:	call   418ef0 <flatcc_builder_reset@@Base>
  405a65:	mov    rdi,QWORD PTR [rbp-0x10]
  405a69:	lea    rsi,[rip+0x1c710]        # 422180 <_IO_stdin_used@@Base+0x180>
  405a70:	mov    DWORD PTR [rbp-0x2c],eax
  405a73:	call   405ba0 <test_empty_monster@@Base+0x150>
  405a78:	mov    rdi,QWORD PTR [rbp-0x10]
  405a7c:	mov    DWORD PTR [rbp-0x30],eax
  405a7f:	call   405bd0 <test_empty_monster@@Base+0x180>
  405a84:	mov    rdi,QWORD PTR [rbp-0x10]
  405a88:	lea    rsi,[rip+0x1c8c8]        # 422357 <_IO_stdin_used@@Base+0x357>
  405a8f:	mov    DWORD PTR [rbp-0x34],eax
  405a92:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  405a97:	mov    rdi,QWORD PTR [rbp-0x10]
  405a9b:	mov    DWORD PTR [rbp-0x38],eax
  405a9e:	call   405c30 <test_empty_monster@@Base+0x1e0>
  405aa3:	mov    DWORD PTR [rbp-0x18],eax
  405aa6:	mov    rdi,QWORD PTR [rbp-0x10]
  405aaa:	mov    esi,DWORD PTR [rbp-0x18]
  405aad:	call   405c90 <test_empty_monster@@Base+0x240>
  405ab2:	mov    rdi,QWORD PTR [rbp-0x10]
  405ab6:	lea    rsi,[rbp-0x28]
  405aba:	mov    DWORD PTR [rbp-0x3c],eax
  405abd:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  405ac2:	mov    rcx,QWORD PTR [rip+0x2b52f]        # 430ff8 <stderr@GLIBC_2.2.5>
  405ac9:	mov    QWORD PTR [rbp-0x20],rax
  405acd:	mov    rsi,QWORD PTR [rbp-0x20]
  405ad1:	mov    rdx,QWORD PTR [rbp-0x28]
  405ad5:	mov    rcx,QWORD PTR [rcx]
  405ad8:	lea    rdi,[rip+0x1c882]        # 422361 <_IO_stdin_used@@Base+0x361>
  405adf:	call   404d60 <test_type_aliases@@Base+0x470>
  405ae4:	mov    rdi,QWORD PTR [rbp-0x20]
  405ae8:	call   404220 <verify_empty_monster@@Base>
  405aed:	mov    DWORD PTR [rbp-0x14],eax
  405af0:	cmp    eax,0x0
  405af3:	je     405afe <test_empty_monster@@Base+0xae>
  405af9:	jmp    405b82 <test_empty_monster@@Base+0x132>
  405afe:	mov    rdi,QWORD PTR [rbp-0x20]
  405b02:	mov    rsi,QWORD PTR [rbp-0x28]
  405b06:	lea    rdx,[rip+0x1c673]        # 422180 <_IO_stdin_used@@Base+0x180>
  405b0d:	call   405cc0 <test_empty_monster@@Base+0x270>
  405b12:	mov    DWORD PTR [rbp-0x14],eax
  405b15:	cmp    eax,0x0
  405b18:	je     405b43 <test_empty_monster@@Base+0xf3>
  405b1e:	mov    edi,DWORD PTR [rbp-0x14]
  405b21:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405b26:	lea    rdi,[rip+0x1c848]        # 422375 <_IO_stdin_used@@Base+0x375>
  405b2d:	mov    rsi,rax
  405b30:	mov    al,0x0
  405b32:	call   404070 <printf@plt>
  405b37:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b3e:	jmp    405b91 <test_empty_monster@@Base+0x141>
  405b43:	mov    rdi,QWORD PTR [rbp-0x20]
  405b47:	mov    rax,QWORD PTR [rbp-0x28]
  405b4b:	sub    rax,0x1
  405b51:	mov    rsi,rax
  405b54:	call   405d00 <test_empty_monster@@Base+0x2b0>
  405b59:	xor    ecx,ecx
  405b5b:	cmp    ecx,eax
  405b5d:	jne    405b7d <test_empty_monster@@Base+0x12d>
  405b63:	lea    rdi,[rip+0x1c833]        # 42239d <_IO_stdin_used@@Base+0x39d>
  405b6a:	mov    al,0x0
  405b6c:	call   404070 <printf@plt>
  405b71:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b78:	jmp    405b91 <test_empty_monster@@Base+0x141>
  405b7d:	jmp    405b82 <test_empty_monster@@Base+0x132>
  405b82:	mov    rdi,QWORD PTR [rbp-0x20]
  405b86:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  405b8b:	mov    eax,DWORD PTR [rbp-0x14]
  405b8e:	mov    DWORD PTR [rbp-0x4],eax
  405b91:	mov    eax,DWORD PTR [rbp-0x4]
  405b94:	add    rsp,0x40
  405b98:	pop    rbp
  405b99:	ret    
  405b9a:	nop    WORD PTR [rax+rax*1+0x0]
  405ba0:	push   rbp
  405ba1:	mov    rbp,rsp
  405ba4:	sub    rsp,0x10
  405ba8:	xor    eax,eax
  405baa:	mov    QWORD PTR [rbp-0x8],rdi
  405bae:	mov    QWORD PTR [rbp-0x10],rsi
  405bb2:	mov    rdi,QWORD PTR [rbp-0x8]
  405bb6:	mov    rsi,QWORD PTR [rbp-0x10]
  405bba:	mov    edx,eax
  405bbc:	mov    ecx,eax
  405bbe:	call   419f10 <flatcc_builder_start_buffer@@Base>
  405bc3:	add    rsp,0x10
  405bc7:	pop    rbp
  405bc8:	ret    
  405bc9:	nop    DWORD PTR [rax+0x0]
  405bd0:	push   rbp
  405bd1:	mov    rbp,rsp
  405bd4:	sub    rsp,0x10
  405bd8:	mov    QWORD PTR [rbp-0x8],rdi
  405bdc:	mov    rdi,QWORD PTR [rbp-0x8]
  405be0:	mov    esi,0x24
  405be5:	call   41b550 <flatcc_builder_start_table@@Base>
  405bea:	add    rsp,0x10
  405bee:	pop    rbp
  405bef:	ret    
  405bf0:	push   rbp
  405bf1:	mov    rbp,rsp
  405bf4:	sub    rsp,0x20
  405bf8:	mov    QWORD PTR [rbp-0x8],rdi
  405bfc:	mov    QWORD PTR [rbp-0x10],rsi
  405c00:	mov    rdi,QWORD PTR [rbp-0x8]
  405c04:	mov    rax,QWORD PTR [rbp-0x8]
  405c08:	mov    rsi,QWORD PTR [rbp-0x10]
  405c0c:	mov    QWORD PTR [rbp-0x18],rdi
  405c10:	mov    rdi,rax
  405c13:	call   41d980 <flatcc_builder_create_string_str@@Base>
  405c18:	mov    rdi,QWORD PTR [rbp-0x18]
  405c1c:	mov    esi,eax
  405c1e:	call   40a550 <gen_monster@@Base+0xbe0>
  405c23:	add    rsp,0x20
  405c27:	pop    rbp
  405c28:	ret    
  405c29:	nop    DWORD PTR [rax+0x0]
  405c30:	push   rbp
  405c31:	mov    rbp,rsp
  405c34:	sub    rsp,0x10
  405c38:	mov    QWORD PTR [rbp-0x8],rdi
  405c3c:	mov    rdi,QWORD PTR [rbp-0x8]
  405c40:	lea    rsi,[rip+0x1c4f3]        # 42213a <_IO_stdin_used@@Base+0x13a>
  405c47:	mov    edx,0x1
  405c4c:	call   41c100 <flatcc_builder_check_required@@Base>
  405c51:	cmp    eax,0x0
  405c54:	je     405c5f <test_empty_monster@@Base+0x20f>
  405c5a:	jmp    405c7e <test_empty_monster@@Base+0x22e>
  405c5f:	lea    rdi,[rip+0x1f48d]        # 4250f3 <_IO_stdin_used@@Base+0x30f3>
  405c66:	lea    rsi,[rip+0x1f0a8]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  405c6d:	mov    edx,0xeb
  405c72:	lea    rcx,[rip+0x1f51c]        # 425195 <_IO_stdin_used@@Base+0x3195>
  405c79:	call   404090 <__assert_fail@plt>
  405c7e:	mov    rdi,QWORD PTR [rbp-0x8]
  405c82:	call   41c1d0 <flatcc_builder_end_table@@Base>
  405c87:	add    rsp,0x10
  405c8b:	pop    rbp
  405c8c:	ret    
  405c8d:	nop    DWORD PTR [rax]
  405c90:	push   rbp
  405c91:	mov    rbp,rsp
  405c94:	sub    rsp,0x10
  405c98:	mov    QWORD PTR [rbp-0x8],rdi
  405c9c:	mov    DWORD PTR [rbp-0xc],esi
  405c9f:	mov    rdi,QWORD PTR [rbp-0x8]
  405ca3:	mov    esi,DWORD PTR [rbp-0xc]
  405ca6:	call   41a240 <flatcc_builder_end_buffer@@Base>
  405cab:	add    rsp,0x10
  405caf:	pop    rbp
  405cb0:	ret    
  405cb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  405cc0:	push   rbp
  405cc1:	mov    rbp,rsp
  405cc4:	sub    rsp,0x20
  405cc8:	mov    QWORD PTR [rbp-0x8],rdi
  405ccc:	mov    QWORD PTR [rbp-0x10],rsi
  405cd0:	mov    QWORD PTR [rbp-0x18],rdx
  405cd4:	mov    rdi,QWORD PTR [rbp-0x8]
  405cd8:	mov    rsi,QWORD PTR [rbp-0x10]
  405cdc:	mov    rdx,QWORD PTR [rbp-0x18]
  405ce0:	lea    rcx,[rip+0xf4d9]        # 4151c0 <main@@Base+0x1490>
  405ce7:	call   420a30 <flatcc_verify_table_as_root@@Base>
  405cec:	add    rsp,0x20
  405cf0:	pop    rbp
  405cf1:	ret    
  405cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cfc:	nop    DWORD PTR [rax+0x0]
  405d00:	push   rbp
  405d01:	mov    rbp,rsp
  405d04:	sub    rsp,0x10
  405d08:	mov    QWORD PTR [rbp-0x8],rdi
  405d0c:	mov    QWORD PTR [rbp-0x10],rsi
  405d10:	mov    rdi,QWORD PTR [rbp-0x8]
  405d14:	mov    rsi,QWORD PTR [rbp-0x10]
  405d18:	lea    rdx,[rip+0x1c461]        # 422180 <_IO_stdin_used@@Base+0x180>
  405d1f:	lea    rcx,[rip+0xf49a]        # 4151c0 <main@@Base+0x1490>
  405d26:	call   420a30 <flatcc_verify_table_as_root@@Base>
  405d2b:	add    rsp,0x10
  405d2f:	pop    rbp
  405d30:	ret    
  405d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405d40 <test_typed_empty_monster@@Base>:
  405d40:	push   rbp
  405d41:	mov    rbp,rsp
  405d44:	sub    rsp,0x50
  405d48:	xor    esi,esi
  405d4a:	mov    QWORD PTR [rbp-0x8],rdi
  405d4e:	mov    DWORD PTR [rbp-0xc],0xffffffff
  405d55:	lea    rax,[rbp-0x24]
  405d59:	mov    rdi,rax
  405d5c:	mov    edx,0x4
  405d61:	call   4040a0 <memset@plt>
  405d66:	mov    rdi,QWORD PTR [rbp-0x8]
  405d6a:	call   418ef0 <flatcc_builder_reset@@Base>
  405d6f:	mov    rdi,QWORD PTR [rbp-0x8]
  405d73:	lea    rsi,[rip+0x1c651]        # 4223cb <_IO_stdin_used@@Base+0x3cb>
  405d7a:	mov    DWORD PTR [rbp-0x28],eax
  405d7d:	call   405ba0 <test_empty_monster@@Base+0x150>
  405d82:	mov    rdi,QWORD PTR [rbp-0x8]
  405d86:	mov    DWORD PTR [rbp-0x2c],eax
  405d89:	call   405bd0 <test_empty_monster@@Base+0x180>
  405d8e:	mov    rdi,QWORD PTR [rbp-0x8]
  405d92:	lea    rsi,[rip+0x1c5be]        # 422357 <_IO_stdin_used@@Base+0x357>
  405d99:	mov    DWORD PTR [rbp-0x30],eax
  405d9c:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  405da1:	mov    rdi,QWORD PTR [rbp-0x8]
  405da5:	mov    DWORD PTR [rbp-0x34],eax
  405da8:	call   405c30 <test_empty_monster@@Base+0x1e0>
  405dad:	mov    DWORD PTR [rbp-0x10],eax
  405db0:	mov    rdi,QWORD PTR [rbp-0x8]
  405db4:	mov    esi,DWORD PTR [rbp-0x10]
  405db7:	call   405c90 <test_empty_monster@@Base+0x240>
  405dbc:	mov    rdi,QWORD PTR [rbp-0x8]
  405dc0:	lea    rsi,[rbp-0x20]
  405dc4:	mov    DWORD PTR [rbp-0x38],eax
  405dc7:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  405dcc:	mov    rcx,QWORD PTR [rip+0x2b225]        # 430ff8 <stderr@GLIBC_2.2.5>
  405dd3:	mov    QWORD PTR [rbp-0x18],rax
  405dd7:	mov    rsi,QWORD PTR [rbp-0x18]
  405ddb:	mov    rdx,QWORD PTR [rbp-0x20]
  405ddf:	mov    rcx,QWORD PTR [rcx]
  405de2:	lea    rdi,[rip+0x1c5e7]        # 4223d0 <_IO_stdin_used@@Base+0x3d0>
  405de9:	call   404d60 <test_type_aliases@@Base+0x470>
  405dee:	mov    rdi,QWORD PTR [rbp-0x18]
  405df2:	call   406040 <test_typed_empty_monster@@Base+0x300>
  405df7:	lea    rdi,[rip+0x1c5ec]        # 4223ea <_IO_stdin_used@@Base+0x3ea>
  405dfe:	mov    DWORD PTR [rbp-0x3c],eax
  405e01:	call   406070 <test_typed_empty_monster@@Base+0x330>
  405e06:	mov    r8d,DWORD PTR [rbp-0x3c]
  405e0a:	cmp    r8d,eax
  405e0d:	je     405e33 <test_typed_empty_monster@@Base+0xf3>
  405e13:	mov    rdi,QWORD PTR [rbp-0x18]
  405e17:	call   406040 <test_typed_empty_monster@@Base+0x300>
  405e1c:	mov    eax,eax
  405e1e:	mov    esi,eax
  405e20:	lea    rdi,[rip+0x1c5da]        # 422401 <_IO_stdin_used@@Base+0x401>
  405e27:	mov    al,0x0
  405e29:	call   404070 <printf@plt>
  405e2e:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405e33:	mov    rdi,QWORD PTR [rbp-0x18]
  405e37:	mov    esi,0x330ef481
  405e3c:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  405e41:	cmp    eax,0x0
  405e44:	jne    405e5d <test_typed_empty_monster@@Base+0x11d>
  405e4a:	lea    rdi,[rip+0x1c5e2]        # 422433 <_IO_stdin_used@@Base+0x433>
  405e51:	mov    al,0x0
  405e53:	call   404070 <printf@plt>
  405e58:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405e5d:	mov    rdi,QWORD PTR [rbp-0x18]
  405e61:	mov    esi,0x330ef481
  405e66:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  405e6b:	cmp    eax,0x0
  405e6e:	jne    405e87 <test_typed_empty_monster@@Base+0x147>
  405e74:	lea    rdi,[rip+0x1c5b8]        # 422433 <_IO_stdin_used@@Base+0x433>
  405e7b:	mov    al,0x0
  405e7d:	call   404070 <printf@plt>
  405e82:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405e87:	mov    rdi,QWORD PTR [rbp-0x18]
  405e8b:	call   404220 <verify_empty_monster@@Base>
  405e90:	cmp    eax,0x0
  405e93:	jne    405eac <test_typed_empty_monster@@Base+0x16c>
  405e99:	lea    rdi,[rip+0x1c5bc]        # 42245c <_IO_stdin_used@@Base+0x45c>
  405ea0:	mov    al,0x0
  405ea2:	call   404070 <printf@plt>
  405ea7:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405eac:	mov    rdi,QWORD PTR [rbp-0x18]
  405eb0:	mov    rsi,QWORD PTR [rbp-0x20]
  405eb4:	lea    rdx,[rip+0x1c510]        # 4223cb <_IO_stdin_used@@Base+0x3cb>
  405ebb:	call   405cc0 <test_empty_monster@@Base+0x270>
  405ec0:	mov    DWORD PTR [rbp-0xc],eax
  405ec3:	cmp    eax,0x0
  405ec6:	je     405eea <test_typed_empty_monster@@Base+0x1aa>
  405ecc:	mov    edi,DWORD PTR [rbp-0xc]
  405ecf:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405ed4:	lea    rdi,[rip+0x1c5c0]        # 42249b <_IO_stdin_used@@Base+0x49b>
  405edb:	mov    rsi,rax
  405ede:	mov    al,0x0
  405ee0:	call   404070 <printf@plt>
  405ee5:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405eea:	mov    rdi,QWORD PTR [rbp-0x18]
  405eee:	mov    rsi,QWORD PTR [rbp-0x20]
  405ef2:	call   406130 <test_typed_empty_monster@@Base+0x3f0>
  405ef7:	mov    DWORD PTR [rbp-0xc],eax
  405efa:	cmp    eax,0x0
  405efd:	je     405f21 <test_typed_empty_monster@@Base+0x1e1>
  405f03:	mov    edi,DWORD PTR [rbp-0xc]
  405f06:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405f0b:	lea    rdi,[rip+0x1c589]        # 42249b <_IO_stdin_used@@Base+0x49b>
  405f12:	mov    rsi,rax
  405f15:	mov    al,0x0
  405f17:	call   404070 <printf@plt>
  405f1c:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405f21:	mov    rdi,QWORD PTR [rbp-0x18]
  405f25:	mov    rsi,QWORD PTR [rbp-0x20]
  405f29:	mov    edx,0x330ef481
  405f2e:	call   406170 <test_typed_empty_monster@@Base+0x430>
  405f33:	mov    DWORD PTR [rbp-0xc],eax
  405f36:	cmp    eax,0x0
  405f39:	je     405f5d <test_typed_empty_monster@@Base+0x21d>
  405f3f:	mov    edi,DWORD PTR [rbp-0xc]
  405f42:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405f47:	lea    rdi,[rip+0x1c57b]        # 4224c9 <_IO_stdin_used@@Base+0x4c9>
  405f4e:	mov    rsi,rax
  405f51:	mov    al,0x0
  405f53:	call   404070 <printf@plt>
  405f58:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405f5d:	mov    rdi,QWORD PTR [rbp-0x18]
  405f61:	mov    rsi,QWORD PTR [rbp-0x20]
  405f65:	lea    rax,[rip+0x1c47e]        # 4223ea <_IO_stdin_used@@Base+0x3ea>
  405f6c:	mov    QWORD PTR [rbp-0x48],rdi
  405f70:	mov    rdi,rax
  405f73:	mov    QWORD PTR [rbp-0x50],rsi
  405f77:	call   406070 <test_typed_empty_monster@@Base+0x330>
  405f7c:	mov    rdi,QWORD PTR [rbp-0x48]
  405f80:	mov    rsi,QWORD PTR [rbp-0x50]
  405f84:	mov    edx,eax
  405f86:	call   406170 <test_typed_empty_monster@@Base+0x430>
  405f8b:	mov    DWORD PTR [rbp-0xc],eax
  405f8e:	cmp    eax,0x0
  405f91:	je     405fb5 <test_typed_empty_monster@@Base+0x275>
  405f97:	mov    edi,DWORD PTR [rbp-0xc]
  405f9a:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405f9f:	lea    rdi,[rip+0x1c55a]        # 422500 <_IO_stdin_used@@Base+0x500>
  405fa6:	mov    rsi,rax
  405fa9:	mov    al,0x0
  405fab:	call   404070 <printf@plt>
  405fb0:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405fb5:	lea    rsi,[rbp-0x24]
  405fb9:	mov    edi,0x330ef481
  405fbe:	call   4061a0 <test_typed_empty_monster@@Base+0x460>
  405fc3:	lea    rdx,[rbp-0x24]
  405fc7:	mov    rdi,QWORD PTR [rbp-0x18]
  405fcb:	mov    rsi,QWORD PTR [rbp-0x20]
  405fcf:	call   405cc0 <test_empty_monster@@Base+0x270>
  405fd4:	mov    DWORD PTR [rbp-0xc],eax
  405fd7:	cmp    eax,0x0
  405fda:	je     405ffe <test_typed_empty_monster@@Base+0x2be>
  405fe0:	mov    edi,DWORD PTR [rbp-0xc]
  405fe3:	call   41f3a0 <flatcc_verify_error_string@@Base>
  405fe8:	lea    rdi,[rip+0x1c4ac]        # 42249b <_IO_stdin_used@@Base+0x49b>
  405fef:	mov    rsi,rax
  405ff2:	mov    al,0x0
  405ff4:	call   404070 <printf@plt>
  405ff9:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  405ffe:	mov    rdi,QWORD PTR [rbp-0x18]
  406002:	mov    rsi,QWORD PTR [rbp-0x20]
  406006:	call   405d00 <test_empty_monster@@Base+0x2b0>
  40600b:	cmp    eax,0x0
  40600e:	jne    406027 <test_typed_empty_monster@@Base+0x2e7>
  406014:	lea    rdi,[rip+0x1c525]        # 422540 <_IO_stdin_used@@Base+0x540>
  40601b:	mov    al,0x0
  40601d:	call   404070 <printf@plt>
  406022:	jmp    40602e <test_typed_empty_monster@@Base+0x2ee>
  406027:	mov    DWORD PTR [rbp-0xc],0x0
  40602e:	mov    rdi,QWORD PTR [rbp-0x18]
  406032:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  406037:	mov    eax,DWORD PTR [rbp-0xc]
  40603a:	add    rsp,0x50
  40603e:	pop    rbp
  40603f:	ret    
  406040:	push   rbp
  406041:	mov    rbp,rsp
  406044:	sub    rsp,0x10
  406048:	mov    QWORD PTR [rbp-0x8],rdi
  40604c:	mov    rax,QWORD PTR [rbp-0x8]
  406050:	add    rax,0x4
  406056:	mov    rdi,rax
  406059:	call   416200 <main@@Base+0x24d0>
  40605e:	add    rsp,0x10
  406062:	pop    rbp
  406063:	ret    
  406064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40606e:	xchg   ax,ax
  406070:	push   rbp
  406071:	mov    rbp,rsp
  406074:	mov    QWORD PTR [rbp-0x8],rdi
  406078:	mov    DWORD PTR [rbp-0xc],0x811c9dc5
  40607f:	mov    rax,QWORD PTR [rbp-0x8]
  406083:	cmp    BYTE PTR [rax],0x0
  406086:	je     4060bc <test_typed_empty_monster@@Base+0x37c>
  40608c:	mov    rax,QWORD PTR [rbp-0x8]
  406090:	movsx  ecx,BYTE PTR [rax]
  406093:	xor    ecx,DWORD PTR [rbp-0xc]
  406096:	mov    DWORD PTR [rbp-0xc],ecx
  406099:	mov    ecx,DWORD PTR [rbp-0xc]
  40609c:	mov    eax,ecx
  40609e:	imul   rax,rax,0x1000193
  4060a5:	mov    DWORD PTR [rbp-0xc],eax
  4060a8:	mov    rdx,QWORD PTR [rbp-0x8]
  4060ac:	add    rdx,0x1
  4060b3:	mov    QWORD PTR [rbp-0x8],rdx
  4060b7:	jmp    40607f <test_typed_empty_monster@@Base+0x33f>
  4060bc:	cmp    DWORD PTR [rbp-0xc],0x0
  4060c0:	jne    4060cd <test_typed_empty_monster@@Base+0x38d>
  4060c6:	mov    DWORD PTR [rbp-0xc],0x811c9dc5
  4060cd:	mov    eax,DWORD PTR [rbp-0xc]
  4060d0:	pop    rbp
  4060d1:	ret    
  4060d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060dc:	nop    DWORD PTR [rax+0x0]
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	sub    rsp,0x10
  4060e8:	mov    QWORD PTR [rbp-0x8],rdi
  4060ec:	mov    DWORD PTR [rbp-0xc],esi
  4060ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4060f3:	mov    al,0x1
  4060f5:	mov    BYTE PTR [rbp-0xd],al
  4060f8:	je     406119 <test_typed_empty_monster@@Base+0x3d9>
  4060fe:	mov    rax,QWORD PTR [rbp-0x8]
  406102:	add    rax,0x4
  406108:	mov    rdi,rax
  40610b:	call   416200 <main@@Base+0x24d0>
  406110:	cmp    eax,DWORD PTR [rbp-0xc]
  406113:	sete   cl
  406116:	mov    BYTE PTR [rbp-0xd],cl
  406119:	mov    al,BYTE PTR [rbp-0xd]
  40611c:	and    al,0x1
  40611e:	movzx  eax,al
  406121:	add    rsp,0x10
  406125:	pop    rbp
  406126:	ret    
  406127:	nop    WORD PTR [rax+rax*1+0x0]
  406130:	push   rbp
  406131:	mov    rbp,rsp
  406134:	sub    rsp,0x10
  406138:	mov    QWORD PTR [rbp-0x8],rdi
  40613c:	mov    QWORD PTR [rbp-0x10],rsi
  406140:	mov    rdi,QWORD PTR [rbp-0x8]
  406144:	mov    rsi,QWORD PTR [rbp-0x10]
  406148:	lea    rdx,[rip+0x1c27c]        # 4223cb <_IO_stdin_used@@Base+0x3cb>
  40614f:	lea    rcx,[rip+0xf06a]        # 4151c0 <main@@Base+0x1490>
  406156:	call   420a30 <flatcc_verify_table_as_root@@Base>
  40615b:	add    rsp,0x10
  40615f:	pop    rbp
  406160:	ret    
  406161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40616b:	nop    DWORD PTR [rax+rax*1+0x0]
  406170:	push   rbp
  406171:	mov    rbp,rsp
  406174:	sub    rsp,0x20
  406178:	mov    QWORD PTR [rbp-0x8],rdi
  40617c:	mov    QWORD PTR [rbp-0x10],rsi
  406180:	mov    DWORD PTR [rbp-0x14],edx
  406183:	mov    rdi,QWORD PTR [rbp-0x8]
  406187:	mov    rsi,QWORD PTR [rbp-0x10]
  40618b:	mov    edx,DWORD PTR [rbp-0x14]
  40618e:	lea    rcx,[rip+0xf02b]        # 4151c0 <main@@Base+0x1490>
  406195:	call   420ad0 <flatcc_verify_table_as_typed_root@@Base>
  40619a:	add    rsp,0x20
  40619e:	pop    rbp
  40619f:	ret    
  4061a0:	push   rbp
  4061a1:	mov    rbp,rsp
  4061a4:	mov    DWORD PTR [rbp-0x4],edi
  4061a7:	mov    QWORD PTR [rbp-0x10],rsi
  4061ab:	mov    eax,DWORD PTR [rbp-0x4]
  4061ae:	and    eax,0xff
  4061b3:	mov    rcx,QWORD PTR [rbp-0x10]
  4061b7:	mov    BYTE PTR [rcx],al
  4061b9:	mov    edx,DWORD PTR [rbp-0x4]
  4061bc:	shr    edx,0x8
  4061bf:	mov    DWORD PTR [rbp-0x4],edx
  4061c2:	mov    edx,DWORD PTR [rbp-0x4]
  4061c5:	and    edx,0xff
  4061cb:	mov    rcx,QWORD PTR [rbp-0x10]
  4061cf:	mov    BYTE PTR [rcx+0x1],dl
  4061d2:	mov    edi,DWORD PTR [rbp-0x4]
  4061d5:	shr    edi,0x8
  4061d8:	mov    DWORD PTR [rbp-0x4],edi
  4061db:	mov    edi,DWORD PTR [rbp-0x4]
  4061de:	and    edi,0xff
  4061e4:	mov    rcx,QWORD PTR [rbp-0x10]
  4061e8:	mov    BYTE PTR [rcx+0x2],dil
  4061ec:	mov    r8d,DWORD PTR [rbp-0x4]
  4061f0:	shr    r8d,0x8
  4061f4:	mov    DWORD PTR [rbp-0x4],r8d
  4061f8:	mov    r8d,DWORD PTR [rbp-0x4]
  4061fc:	and    r8d,0xff
  406203:	mov    rcx,QWORD PTR [rbp-0x10]
  406207:	mov    BYTE PTR [rcx+0x3],r8b
  40620b:	pop    rbp
  40620c:	ret    
  40620d:	nop    DWORD PTR [rax]

0000000000406210 <verify_table_with_emptystruct@@Base>:
  406210:	push   rbp
  406211:	mov    rbp,rsp
  406214:	sub    rsp,0x20
  406218:	mov    QWORD PTR [rbp-0x10],rdi
  40621c:	mov    rdi,QWORD PTR [rbp-0x10]
  406220:	call   4062c0 <verify_table_with_emptystruct@@Base+0xb0>
  406225:	mov    QWORD PTR [rbp-0x18],rax
  406229:	cmp    QWORD PTR [rbp-0x18],0x0
  40622e:	jne    40624e <verify_table_with_emptystruct@@Base+0x3e>
  406234:	lea    rdi,[rip+0x1c34f]        # 42258a <_IO_stdin_used@@Base+0x58a>
  40623b:	mov    al,0x0
  40623d:	call   404070 <printf@plt>
  406242:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406249:	jmp    4062b0 <verify_table_with_emptystruct@@Base+0xa0>
  40624e:	mov    rdi,QWORD PTR [rbp-0x18]
  406252:	call   406330 <verify_table_with_emptystruct@@Base+0x120>
  406257:	mov    QWORD PTR [rbp-0x20],rax
  40625b:	cmp    QWORD PTR [rbp-0x20],0x0
  406260:	jne    406280 <verify_table_with_emptystruct@@Base+0x70>
  406266:	lea    rdi,[rip+0x1c343]        # 4225b0 <_IO_stdin_used@@Base+0x5b0>
  40626d:	mov    al,0x0
  40626f:	call   404070 <printf@plt>
  406274:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40627b:	jmp    4062b0 <verify_table_with_emptystruct@@Base+0xa0>
  406280:	call   416230 <main@@Base+0x2500>
  406285:	cmp    rax,0x0
  406289:	je     4062a9 <verify_table_with_emptystruct@@Base+0x99>
  40628f:	lea    rdi,[rip+0x1c336]        # 4225cc <_IO_stdin_used@@Base+0x5cc>
  406296:	mov    al,0x0
  406298:	call   404070 <printf@plt>
  40629d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4062a4:	jmp    4062b0 <verify_table_with_emptystruct@@Base+0xa0>
  4062a9:	mov    DWORD PTR [rbp-0x4],0x0
  4062b0:	mov    eax,DWORD PTR [rbp-0x4]
  4062b3:	add    rsp,0x20
  4062b7:	pop    rbp
  4062b8:	ret    
  4062b9:	nop    DWORD PTR [rax+0x0]
  4062c0:	push   rbp
  4062c1:	mov    rbp,rsp
  4062c4:	sub    rsp,0x20
  4062c8:	mov    QWORD PTR [rbp-0x8],rdi
  4062cc:	lea    rax,[rip+0x1bead]        # 422180 <_IO_stdin_used@@Base+0x180>
  4062d3:	mov    QWORD PTR [rbp-0x10],rax
  4062d7:	cmp    QWORD PTR [rbp-0x8],0x0
  4062dc:	je     4062f8 <verify_table_with_emptystruct@@Base+0xe8>
  4062e2:	mov    rdi,QWORD PTR [rbp-0x8]
  4062e6:	mov    rsi,QWORD PTR [rbp-0x10]
  4062ea:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  4062ef:	cmp    eax,0x0
  4062f2:	jne    406305 <verify_table_with_emptystruct@@Base+0xf5>
  4062f8:	xor    eax,eax
  4062fa:	mov    ecx,eax
  4062fc:	mov    QWORD PTR [rbp-0x18],rcx
  406300:	jmp    406325 <verify_table_with_emptystruct@@Base+0x115>
  406305:	mov    rax,QWORD PTR [rbp-0x8]
  406309:	mov    rdi,QWORD PTR [rbp-0x8]
  40630d:	mov    QWORD PTR [rbp-0x20],rax
  406311:	call   4141e0 <main@@Base+0x4b0>
  406316:	mov    eax,eax
  406318:	mov    ecx,eax
  40631a:	mov    rdx,QWORD PTR [rbp-0x20]
  40631e:	add    rdx,rcx
  406321:	mov    QWORD PTR [rbp-0x18],rdx
  406325:	mov    rax,QWORD PTR [rbp-0x18]
  406329:	add    rsp,0x20
  40632d:	pop    rbp
  40632e:	ret    
  40632f:	nop
  406330:	push   rbp
  406331:	mov    rbp,rsp
  406334:	sub    rsp,0x30
  406338:	mov    QWORD PTR [rbp-0x10],rdi
  40633c:	mov    WORD PTR [rbp-0x12],0x0
  406342:	cmp    QWORD PTR [rbp-0x10],0x0
  406347:	je     406361 <verify_table_with_emptystruct@@Base+0x151>
  40634d:	mov    al,0x1
  40634f:	test   al,0x1
  406351:	jne    40635c <verify_table_with_emptystruct@@Base+0x14c>
  406357:	jmp    406361 <verify_table_with_emptystruct@@Base+0x151>
  40635c:	jmp    406380 <verify_table_with_emptystruct@@Base+0x170>
  406361:	lea    rdi,[rip+0x1e730]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  406368:	lea    rsi,[rip+0x1e74f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40636f:	mov    edx,0x239
  406374:	lea    rcx,[rip+0x1ee6b]        # 4251e6 <_IO_stdin_used@@Base+0x31e6>
  40637b:	call   404090 <__assert_fail@plt>
  406380:	mov    WORD PTR [rbp-0x14],0x0
  406386:	mov    rax,QWORD PTR [rbp-0x10]
  40638a:	mov    rcx,QWORD PTR [rbp-0x10]
  40638e:	mov    rdi,rcx
  406391:	mov    QWORD PTR [rbp-0x28],rax
  406395:	call   414210 <main@@Base+0x4e0>
  40639a:	xor    edx,edx
  40639c:	mov    ecx,edx
  40639e:	movsxd rsi,eax
  4063a1:	sub    rcx,rsi
  4063a4:	mov    rsi,QWORD PTR [rbp-0x28]
  4063a8:	add    rsi,rcx
  4063ab:	mov    QWORD PTR [rbp-0x20],rsi
  4063af:	mov    rcx,QWORD PTR [rbp-0x20]
  4063b3:	mov    rdi,rcx
  4063b6:	call   414230 <main@@Base+0x500>
  4063bb:	movzx  edx,ax
  4063be:	mov    ecx,edx
  4063c0:	movzx  edx,WORD PTR [rbp-0x14]
  4063c4:	add    edx,0x3
  4063c7:	movsxd rsi,edx
  4063ca:	shl    rsi,0x1
  4063ce:	cmp    rcx,rsi
  4063d1:	jb     4063fb <verify_table_with_emptystruct@@Base+0x1eb>
  4063d7:	mov    rax,QWORD PTR [rbp-0x20]
  4063db:	movzx  ecx,WORD PTR [rbp-0x14]
  4063df:	movsxd rdx,ecx
  4063e2:	shl    rdx,0x1
  4063e6:	add    rax,rdx
  4063e9:	add    rax,0x4
  4063ef:	mov    rdi,rax
  4063f2:	call   414230 <main@@Base+0x500>
  4063f7:	mov    WORD PTR [rbp-0x12],ax
  4063fb:	cmp    WORD PTR [rbp-0x12],0x0
  406400:	je     40641d <verify_table_with_emptystruct@@Base+0x20d>
  406406:	mov    rax,QWORD PTR [rbp-0x10]
  40640a:	movzx  ecx,WORD PTR [rbp-0x12]
  40640e:	movsxd rdx,ecx
  406411:	add    rax,rdx
  406414:	mov    QWORD PTR [rbp-0x8],rax
  406418:	jmp    406425 <verify_table_with_emptystruct@@Base+0x215>
  40641d:	mov    QWORD PTR [rbp-0x8],0x0
  406425:	mov    rax,QWORD PTR [rbp-0x8]
  406429:	add    rsp,0x30
  40642d:	pop    rbp
  40642e:	ret    
  40642f:	nop

0000000000406430 <test_table_with_emptystruct@@Base>:
  406430:	push   rbp
  406431:	mov    rbp,rsp
  406434:	sub    rsp,0x30
  406438:	mov    QWORD PTR [rbp-0x8],rdi
  40643c:	mov    QWORD PTR [rbp-0x18],0x0
  406444:	mov    rdi,QWORD PTR [rbp-0x8]
  406448:	call   418ef0 <flatcc_builder_reset@@Base>
  40644d:	mov    rdi,QWORD PTR [rbp-0x8]
  406451:	mov    rsi,QWORD PTR [rbp-0x18]
  406455:	mov    DWORD PTR [rbp-0x2c],eax
  406458:	call   4064b0 <test_table_with_emptystruct@@Base+0x80>
  40645d:	mov    rdi,QWORD PTR [rbp-0x8]
  406461:	lea    rsi,[rbp-0x28]
  406465:	mov    DWORD PTR [rbp-0x30],eax
  406468:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40646d:	mov    rcx,QWORD PTR [rip+0x2ab84]        # 430ff8 <stderr@GLIBC_2.2.5>
  406474:	mov    QWORD PTR [rbp-0x20],rax
  406478:	mov    rsi,QWORD PTR [rbp-0x20]
  40647c:	mov    rdx,QWORD PTR [rbp-0x28]
  406480:	mov    rcx,QWORD PTR [rcx]
  406483:	lea    rdi,[rip+0x1c162]        # 4225ec <_IO_stdin_used@@Base+0x5ec>
  40648a:	call   404d60 <test_type_aliases@@Base+0x470>
  40648f:	mov    rdi,QWORD PTR [rbp-0x20]
  406493:	call   406210 <verify_table_with_emptystruct@@Base>
  406498:	mov    DWORD PTR [rbp-0xc],eax
  40649b:	mov    rdi,QWORD PTR [rbp-0x20]
  40649f:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  4064a4:	mov    eax,DWORD PTR [rbp-0xc]
  4064a7:	add    rsp,0x30
  4064ab:	pop    rbp
  4064ac:	ret    
  4064ad:	nop    DWORD PTR [rax]
  4064b0:	push   rbp
  4064b1:	mov    rbp,rsp
  4064b4:	sub    rsp,0x20
  4064b8:	mov    QWORD PTR [rbp-0x10],rdi
  4064bc:	mov    QWORD PTR [rbp-0x18],rsi
  4064c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4064c4:	lea    rsi,[rip+0x1bcb5]        # 422180 <_IO_stdin_used@@Base+0x180>
  4064cb:	call   405ba0 <test_empty_monster@@Base+0x150>
  4064d0:	cmp    eax,0x0
  4064d3:	je     4064e5 <test_table_with_emptystruct@@Base+0xb5>
  4064d9:	mov    DWORD PTR [rbp-0x4],0x0
  4064e0:	jmp    40650b <test_table_with_emptystruct@@Base+0xdb>
  4064e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4064e9:	mov    rax,QWORD PTR [rbp-0x10]
  4064ed:	mov    rsi,QWORD PTR [rbp-0x18]
  4064f1:	mov    QWORD PTR [rbp-0x20],rdi
  4064f5:	mov    rdi,rax
  4064f8:	call   416240 <main@@Base+0x2510>
  4064fd:	mov    rdi,QWORD PTR [rbp-0x20]
  406501:	mov    esi,eax
  406503:	call   405c90 <test_empty_monster@@Base+0x240>
  406508:	mov    DWORD PTR [rbp-0x4],eax
  40650b:	mov    eax,DWORD PTR [rbp-0x4]
  40650e:	add    rsp,0x20
  406512:	pop    rbp
  406513:	ret    
  406514:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40651e:	xchg   ax,ax

0000000000406520 <test_typed_table_with_emptystruct@@Base>:
  406520:	push   rbp
  406521:	mov    rbp,rsp
  406524:	sub    rsp,0x40
  406528:	mov    QWORD PTR [rbp-0x10],rdi
  40652c:	mov    DWORD PTR [rbp-0x14],0x0
  406533:	mov    QWORD PTR [rbp-0x20],0x0
  40653b:	mov    rdi,QWORD PTR [rbp-0x10]
  40653f:	call   418ef0 <flatcc_builder_reset@@Base>
  406544:	mov    rdi,QWORD PTR [rbp-0x10]
  406548:	mov    rsi,QWORD PTR [rbp-0x20]
  40654c:	mov    DWORD PTR [rbp-0x34],eax
  40654f:	call   406840 <test_typed_table_with_emptystruct@@Base+0x320>
  406554:	mov    rdi,QWORD PTR [rbp-0x10]
  406558:	lea    rsi,[rbp-0x30]
  40655c:	mov    DWORD PTR [rbp-0x38],eax
  40655f:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  406564:	mov    rcx,QWORD PTR [rip+0x2aa8d]        # 430ff8 <stderr@GLIBC_2.2.5>
  40656b:	mov    QWORD PTR [rbp-0x28],rax
  40656f:	mov    rsi,QWORD PTR [rbp-0x28]
  406573:	mov    rdx,QWORD PTR [rbp-0x30]
  406577:	mov    rcx,QWORD PTR [rcx]
  40657a:	lea    rdi,[rip+0x1c065]        # 4225e6 <_IO_stdin_used@@Base+0x5e6>
  406581:	call   404d60 <test_type_aliases@@Base+0x470>
  406586:	mov    rdi,QWORD PTR [rbp-0x28]
  40658a:	mov    rsi,QWORD PTR [rbp-0x30]
  40658e:	lea    rdx,[rip+0x1c06f]        # 422604 <_IO_stdin_used@@Base+0x604>
  406595:	call   4068b0 <test_typed_table_with_emptystruct@@Base+0x390>
  40659a:	xor    r8d,r8d
  40659d:	cmp    r8d,eax
  4065a0:	je     4065c0 <test_typed_table_with_emptystruct@@Base+0xa0>
  4065a6:	lea    rdi,[rip+0x1c05c]        # 422609 <_IO_stdin_used@@Base+0x609>
  4065ad:	mov    al,0x0
  4065af:	call   404070 <printf@plt>
  4065b4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4065bb:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4065c0:	mov    rdi,QWORD PTR [rbp-0x28]
  4065c4:	mov    rsi,QWORD PTR [rbp-0x30]
  4065c8:	call   4068f0 <test_typed_table_with_emptystruct@@Base+0x3d0>
  4065cd:	xor    ecx,ecx
  4065cf:	cmp    ecx,eax
  4065d1:	je     4065f1 <test_typed_table_with_emptystruct@@Base+0xd1>
  4065d7:	lea    rdi,[rip+0x1c04b]        # 422629 <_IO_stdin_used@@Base+0x629>
  4065de:	mov    al,0x0
  4065e0:	call   404070 <printf@plt>
  4065e5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4065ec:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4065f1:	mov    rdi,QWORD PTR [rbp-0x28]
  4065f5:	mov    rsi,QWORD PTR [rbp-0x30]
  4065f9:	mov    edx,0xb0dd37b6
  4065fe:	call   406930 <test_typed_table_with_emptystruct@@Base+0x410>
  406603:	xor    ecx,ecx
  406605:	cmp    ecx,eax
  406607:	je     406627 <test_typed_table_with_emptystruct@@Base+0x107>
  40660d:	lea    rdi,[rip+0x1c032]        # 422646 <_IO_stdin_used@@Base+0x646>
  406614:	mov    al,0x0
  406616:	call   404070 <printf@plt>
  40661b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406622:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  406627:	cmp    QWORD PTR [rbp-0x28],0x0
  40662c:	jne    40664c <test_typed_table_with_emptystruct@@Base+0x12c>
  406632:	lea    rdi,[rip+0x1c033]        # 42266c <_IO_stdin_used@@Base+0x66c>
  406639:	mov    al,0x0
  40663b:	call   404070 <printf@plt>
  406640:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406647:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40664c:	mov    rdi,QWORD PTR [rbp-0x28]
  406650:	mov    esi,0xb0dd37b6
  406655:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  40665a:	cmp    eax,0x0
  40665d:	jne    40667d <test_typed_table_with_emptystruct@@Base+0x15d>
  406663:	lea    rdi,[rip+0x1c01b]        # 422685 <_IO_stdin_used@@Base+0x685>
  40666a:	mov    al,0x0
  40666c:	call   404070 <printf@plt>
  406671:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406678:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40667d:	xor    esi,esi
  40667f:	mov    rdi,QWORD PTR [rbp-0x28]
  406683:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  406688:	cmp    eax,0x0
  40668b:	jne    4066ab <test_typed_table_with_emptystruct@@Base+0x18b>
  406691:	lea    rdi,[rip+0x1bffe]        # 422696 <_IO_stdin_used@@Base+0x696>
  406698:	mov    al,0x0
  40669a:	call   404070 <printf@plt>
  40669f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066a6:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4066ab:	mov    rdi,QWORD PTR [rbp-0x28]
  4066af:	mov    esi,0x1
  4066b4:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  4066b9:	cmp    eax,0x0
  4066bc:	je     4066dc <test_typed_table_with_emptystruct@@Base+0x1bc>
  4066c2:	lea    rdi,[rip+0x1bfdf]        # 4226a8 <_IO_stdin_used@@Base+0x6a8>
  4066c9:	mov    al,0x0
  4066cb:	call   404070 <printf@plt>
  4066d0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066d7:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4066dc:	xor    eax,eax
  4066de:	mov    esi,eax
  4066e0:	mov    rdi,QWORD PTR [rbp-0x28]
  4066e4:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  4066e9:	cmp    eax,0x0
  4066ec:	jne    40670c <test_typed_table_with_emptystruct@@Base+0x1ec>
  4066f2:	lea    rdi,[rip+0x1bfd3]        # 4226cc <_IO_stdin_used@@Base+0x6cc>
  4066f9:	mov    al,0x0
  4066fb:	call   404070 <printf@plt>
  406700:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406707:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40670c:	mov    rdi,QWORD PTR [rbp-0x28]
  406710:	lea    rsi,[rip+0x1beed]        # 422604 <_IO_stdin_used@@Base+0x604>
  406717:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  40671c:	cmp    eax,0x0
  40671f:	jne    40673f <test_typed_table_with_emptystruct@@Base+0x21f>
  406725:	lea    rdi,[rip+0x1bfc3]        # 4226ef <_IO_stdin_used@@Base+0x6ef>
  40672c:	mov    al,0x0
  40672e:	call   404070 <printf@plt>
  406733:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40673a:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40673f:	mov    rdi,QWORD PTR [rbp-0x28]
  406743:	call   4062c0 <verify_table_with_emptystruct@@Base+0xb0>
  406748:	cmp    rax,0x0
  40674c:	je     40676c <test_typed_table_with_emptystruct@@Base+0x24c>
  406752:	lea    rdi,[rip+0x1bfc1]        # 42271a <_IO_stdin_used@@Base+0x71a>
  406759:	mov    al,0x0
  40675b:	call   404070 <printf@plt>
  406760:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406767:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40676c:	mov    rdi,QWORD PTR [rbp-0x28]
  406770:	mov    esi,0x1
  406775:	call   406a00 <test_typed_table_with_emptystruct@@Base+0x4e0>
  40677a:	cmp    rax,0x0
  40677e:	je     40679e <test_typed_table_with_emptystruct@@Base+0x27e>
  406784:	lea    rdi,[rip+0x1bfae]        # 422739 <_IO_stdin_used@@Base+0x739>
  40678b:	mov    al,0x0
  40678d:	call   404070 <printf@plt>
  406792:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406799:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40679e:	mov    rdi,QWORD PTR [rbp-0x28]
  4067a2:	lea    rsi,[rip+0x1be5b]        # 422604 <_IO_stdin_used@@Base+0x604>
  4067a9:	call   406a70 <test_typed_table_with_emptystruct@@Base+0x550>
  4067ae:	cmp    rax,0x0
  4067b2:	jne    4067d2 <test_typed_table_with_emptystruct@@Base+0x2b2>
  4067b8:	lea    rdi,[rip+0x1bfa0]        # 42275f <_IO_stdin_used@@Base+0x75f>
  4067bf:	mov    al,0x0
  4067c1:	call   404070 <printf@plt>
  4067c6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4067cd:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4067d2:	mov    rdi,QWORD PTR [rbp-0x28]
  4067d6:	call   406ae0 <test_typed_table_with_emptystruct@@Base+0x5c0>
  4067db:	cmp    rax,0x0
  4067df:	jne    4067ff <test_typed_table_with_emptystruct@@Base+0x2df>
  4067e5:	lea    rdi,[rip+0x1bfac]        # 422798 <_IO_stdin_used@@Base+0x798>
  4067ec:	mov    al,0x0
  4067ee:	call   404070 <printf@plt>
  4067f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4067fa:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  4067ff:	xor    esi,esi
  406801:	mov    rdi,QWORD PTR [rbp-0x28]
  406805:	call   406a00 <test_typed_table_with_emptystruct@@Base+0x4e0>
  40680a:	cmp    rax,0x0
  40680e:	jne    40682e <test_typed_table_with_emptystruct@@Base+0x30e>
  406814:	lea    rdi,[rip+0x1bf93]        # 4227ae <_IO_stdin_used@@Base+0x7ae>
  40681b:	mov    al,0x0
  40681d:	call   404070 <printf@plt>
  406822:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406829:	jmp    406834 <test_typed_table_with_emptystruct@@Base+0x314>
  40682e:	mov    eax,DWORD PTR [rbp-0x14]
  406831:	mov    DWORD PTR [rbp-0x4],eax
  406834:	mov    eax,DWORD PTR [rbp-0x4]
  406837:	add    rsp,0x40
  40683b:	pop    rbp
  40683c:	ret    
  40683d:	nop    DWORD PTR [rax]
  406840:	push   rbp
  406841:	mov    rbp,rsp
  406844:	sub    rsp,0x20
  406848:	mov    QWORD PTR [rbp-0x10],rdi
  40684c:	mov    QWORD PTR [rbp-0x18],rsi
  406850:	mov    rdi,QWORD PTR [rbp-0x10]
  406854:	lea    rsi,[rip+0x1bda9]        # 422604 <_IO_stdin_used@@Base+0x604>
  40685b:	call   405ba0 <test_empty_monster@@Base+0x150>
  406860:	cmp    eax,0x0
  406863:	je     406875 <test_typed_table_with_emptystruct@@Base+0x355>
  406869:	mov    DWORD PTR [rbp-0x4],0x0
  406870:	jmp    40689b <test_typed_table_with_emptystruct@@Base+0x37b>
  406875:	mov    rdi,QWORD PTR [rbp-0x10]
  406879:	mov    rax,QWORD PTR [rbp-0x10]
  40687d:	mov    rsi,QWORD PTR [rbp-0x18]
  406881:	mov    QWORD PTR [rbp-0x20],rdi
  406885:	mov    rdi,rax
  406888:	call   416240 <main@@Base+0x2510>
  40688d:	mov    rdi,QWORD PTR [rbp-0x20]
  406891:	mov    esi,eax
  406893:	call   405c90 <test_empty_monster@@Base+0x240>
  406898:	mov    DWORD PTR [rbp-0x4],eax
  40689b:	mov    eax,DWORD PTR [rbp-0x4]
  40689e:	add    rsp,0x20
  4068a2:	pop    rbp
  4068a3:	ret    
  4068a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ae:	xchg   ax,ax
  4068b0:	push   rbp
  4068b1:	mov    rbp,rsp
  4068b4:	sub    rsp,0x20
  4068b8:	mov    QWORD PTR [rbp-0x8],rdi
  4068bc:	mov    QWORD PTR [rbp-0x10],rsi
  4068c0:	mov    QWORD PTR [rbp-0x18],rdx
  4068c4:	mov    rdi,QWORD PTR [rbp-0x8]
  4068c8:	mov    rsi,QWORD PTR [rbp-0x10]
  4068cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4068d0:	lea    rcx,[rip+0xfaf9]        # 4163d0 <main@@Base+0x26a0>
  4068d7:	call   420a30 <flatcc_verify_table_as_root@@Base>
  4068dc:	add    rsp,0x20
  4068e0:	pop    rbp
  4068e1:	ret    
  4068e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ec:	nop    DWORD PTR [rax+0x0]
  4068f0:	push   rbp
  4068f1:	mov    rbp,rsp
  4068f4:	sub    rsp,0x10
  4068f8:	mov    QWORD PTR [rbp-0x8],rdi
  4068fc:	mov    QWORD PTR [rbp-0x10],rsi
  406900:	mov    rdi,QWORD PTR [rbp-0x8]
  406904:	mov    rsi,QWORD PTR [rbp-0x10]
  406908:	lea    rdx,[rip+0x1bcf5]        # 422604 <_IO_stdin_used@@Base+0x604>
  40690f:	lea    rcx,[rip+0xfaba]        # 4163d0 <main@@Base+0x26a0>
  406916:	call   420a30 <flatcc_verify_table_as_root@@Base>
  40691b:	add    rsp,0x10
  40691f:	pop    rbp
  406920:	ret    
  406921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40692b:	nop    DWORD PTR [rax+rax*1+0x0]
  406930:	push   rbp
  406931:	mov    rbp,rsp
  406934:	sub    rsp,0x20
  406938:	mov    QWORD PTR [rbp-0x8],rdi
  40693c:	mov    QWORD PTR [rbp-0x10],rsi
  406940:	mov    DWORD PTR [rbp-0x14],edx
  406943:	mov    rdi,QWORD PTR [rbp-0x8]
  406947:	mov    rsi,QWORD PTR [rbp-0x10]
  40694b:	mov    edx,DWORD PTR [rbp-0x14]
  40694e:	lea    rcx,[rip+0xfa7b]        # 4163d0 <main@@Base+0x26a0>
  406955:	call   420ad0 <flatcc_verify_table_as_typed_root@@Base>
  40695a:	add    rsp,0x20
  40695e:	pop    rbp
  40695f:	ret    
  406960:	push   rbp
  406961:	mov    rbp,rsp
  406964:	sub    rsp,0x30
  406968:	mov    QWORD PTR [rbp-0x10],rdi
  40696c:	mov    QWORD PTR [rbp-0x18],rsi
  406970:	mov    DWORD PTR [rbp-0x20],0x0
  406977:	cmp    QWORD PTR [rbp-0x18],0x0
  40697c:	jne    40698e <test_typed_table_with_emptystruct@@Base+0x46e>
  406982:	mov    DWORD PTR [rbp-0x4],0x1
  406989:	jmp    4069f0 <test_typed_table_with_emptystruct@@Base+0x4d0>
  40698e:	lea    rax,[rbp-0x20]
  406992:	mov    rsi,QWORD PTR [rbp-0x18]
  406996:	mov    rdi,rax
  406999:	mov    edx,0x4
  40699e:	call   404040 <strncpy@plt>
  4069a3:	mov    edi,DWORD PTR [rbp-0x20]
  4069a6:	mov    QWORD PTR [rbp-0x28],rax
  4069aa:	call   416420 <main@@Base+0x26f0>
  4069af:	mov    DWORD PTR [rbp-0x20],eax
  4069b2:	mov    rcx,QWORD PTR [rbp-0x10]
  4069b6:	add    rcx,0x4
  4069bd:	mov    rdi,rcx
  4069c0:	call   416200 <main@@Base+0x24d0>
  4069c5:	mov    DWORD PTR [rbp-0x1c],eax
  4069c8:	cmp    DWORD PTR [rbp-0x20],0x0
  4069cc:	mov    r8b,0x1
  4069cf:	mov    BYTE PTR [rbp-0x29],r8b
  4069d3:	je     4069e5 <test_typed_table_with_emptystruct@@Base+0x4c5>
  4069d9:	mov    eax,DWORD PTR [rbp-0x1c]
  4069dc:	cmp    eax,DWORD PTR [rbp-0x20]
  4069df:	sete   cl
  4069e2:	mov    BYTE PTR [rbp-0x29],cl
  4069e5:	mov    al,BYTE PTR [rbp-0x29]
  4069e8:	and    al,0x1
  4069ea:	movzx  ecx,al
  4069ed:	mov    DWORD PTR [rbp-0x4],ecx
  4069f0:	mov    eax,DWORD PTR [rbp-0x4]
  4069f3:	add    rsp,0x30
  4069f7:	pop    rbp
  4069f8:	ret    
  4069f9:	nop    DWORD PTR [rax+0x0]
  406a00:	push   rbp
  406a01:	mov    rbp,rsp
  406a04:	sub    rsp,0x20
  406a08:	mov    QWORD PTR [rbp-0x8],rdi
  406a0c:	mov    DWORD PTR [rbp-0xc],esi
  406a0f:	cmp    QWORD PTR [rbp-0x8],0x0
  406a14:	je     406a2f <test_typed_table_with_emptystruct@@Base+0x50f>
  406a1a:	mov    rdi,QWORD PTR [rbp-0x8]
  406a1e:	mov    esi,DWORD PTR [rbp-0xc]
  406a21:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  406a26:	cmp    eax,0x0
  406a29:	jne    406a3c <test_typed_table_with_emptystruct@@Base+0x51c>
  406a2f:	xor    eax,eax
  406a31:	mov    ecx,eax
  406a33:	mov    QWORD PTR [rbp-0x18],rcx
  406a37:	jmp    406a5c <test_typed_table_with_emptystruct@@Base+0x53c>
  406a3c:	mov    rax,QWORD PTR [rbp-0x8]
  406a40:	mov    rdi,QWORD PTR [rbp-0x8]
  406a44:	mov    QWORD PTR [rbp-0x20],rax
  406a48:	call   4141e0 <main@@Base+0x4b0>
  406a4d:	mov    eax,eax
  406a4f:	mov    ecx,eax
  406a51:	mov    rdx,QWORD PTR [rbp-0x20]
  406a55:	add    rdx,rcx
  406a58:	mov    QWORD PTR [rbp-0x18],rdx
  406a5c:	mov    rax,QWORD PTR [rbp-0x18]
  406a60:	add    rsp,0x20
  406a64:	pop    rbp
  406a65:	ret    
  406a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a70:	push   rbp
  406a71:	mov    rbp,rsp
  406a74:	sub    rsp,0x20
  406a78:	mov    QWORD PTR [rbp-0x8],rdi
  406a7c:	mov    QWORD PTR [rbp-0x10],rsi
  406a80:	cmp    QWORD PTR [rbp-0x8],0x0
  406a85:	je     406aa1 <test_typed_table_with_emptystruct@@Base+0x581>
  406a8b:	mov    rdi,QWORD PTR [rbp-0x8]
  406a8f:	mov    rsi,QWORD PTR [rbp-0x10]
  406a93:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406a98:	cmp    eax,0x0
  406a9b:	jne    406aae <test_typed_table_with_emptystruct@@Base+0x58e>
  406aa1:	xor    eax,eax
  406aa3:	mov    ecx,eax
  406aa5:	mov    QWORD PTR [rbp-0x18],rcx
  406aa9:	jmp    406ace <test_typed_table_with_emptystruct@@Base+0x5ae>
  406aae:	mov    rax,QWORD PTR [rbp-0x8]
  406ab2:	mov    rdi,QWORD PTR [rbp-0x8]
  406ab6:	mov    QWORD PTR [rbp-0x20],rax
  406aba:	call   4141e0 <main@@Base+0x4b0>
  406abf:	mov    eax,eax
  406ac1:	mov    ecx,eax
  406ac3:	mov    rdx,QWORD PTR [rbp-0x20]
  406ac7:	add    rdx,rcx
  406aca:	mov    QWORD PTR [rbp-0x18],rdx
  406ace:	mov    rax,QWORD PTR [rbp-0x18]
  406ad2:	add    rsp,0x20
  406ad6:	pop    rbp
  406ad7:	ret    
  406ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ae0:	push   rbp
  406ae1:	mov    rbp,rsp
  406ae4:	sub    rsp,0x20
  406ae8:	mov    QWORD PTR [rbp-0x8],rdi
  406aec:	cmp    QWORD PTR [rbp-0x8],0x0
  406af1:	je     406b0e <test_typed_table_with_emptystruct@@Base+0x5ee>
  406af7:	mov    rdi,QWORD PTR [rbp-0x8]
  406afb:	mov    esi,0xb0dd37b6
  406b00:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  406b05:	cmp    eax,0x0
  406b08:	jne    406b1b <test_typed_table_with_emptystruct@@Base+0x5fb>
  406b0e:	xor    eax,eax
  406b10:	mov    ecx,eax
  406b12:	mov    QWORD PTR [rbp-0x10],rcx
  406b16:	jmp    406b3b <test_typed_table_with_emptystruct@@Base+0x61b>
  406b1b:	mov    rax,QWORD PTR [rbp-0x8]
  406b1f:	mov    rdi,QWORD PTR [rbp-0x8]
  406b23:	mov    QWORD PTR [rbp-0x18],rax
  406b27:	call   4141e0 <main@@Base+0x4b0>
  406b2c:	mov    eax,eax
  406b2e:	mov    ecx,eax
  406b30:	mov    rdx,QWORD PTR [rbp-0x18]
  406b34:	add    rdx,rcx
  406b37:	mov    QWORD PTR [rbp-0x10],rdx
  406b3b:	mov    rax,QWORD PTR [rbp-0x10]
  406b3f:	add    rsp,0x20
  406b43:	pop    rbp
  406b44:	ret    
  406b45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b4f:	nop

0000000000406b50 <verify_monster@@Base>:
  406b50:	push   rbp
  406b51:	mov    rbp,rsp
  406b54:	sub    rsp,0x120
  406b5b:	xor    eax,eax
  406b5d:	mov    esi,eax
  406b5f:	mov    QWORD PTR [rbp-0x10],rdi
  406b63:	mov    rcx,QWORD PTR [rip+0x1b516]        # 422080 <_IO_stdin_used@@Base+0x80>
  406b6a:	mov    QWORD PTR [rbp-0xa0],rcx
  406b71:	mov    rcx,QWORD PTR [rip+0x1b510]        # 422088 <_IO_stdin_used@@Base+0x88>
  406b78:	mov    QWORD PTR [rbp-0x98],rcx
  406b7f:	mov    eax,DWORD PTR [rip+0x1b50b]        # 422090 <_IO_stdin_used@@Base+0x90>
  406b85:	mov    DWORD PTR [rbp-0x90],eax
  406b8b:	mov    rcx,QWORD PTR [rip+0x1b5de]        # 422170 <_IO_stdin_used@@Base+0x170>
  406b92:	mov    QWORD PTR [rbp-0xe0],rcx
  406b99:	mov    rcx,QWORD PTR [rip+0x1b5d8]        # 422178 <_IO_stdin_used@@Base+0x178>
  406ba0:	mov    QWORD PTR [rbp-0xd8],rcx
  406ba7:	mov    rdi,QWORD PTR [rbp-0x10]
  406bab:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406bb0:	cmp    eax,0x0
  406bb3:	jne    406bd3 <verify_monster@@Base+0x83>
  406bb9:	lea    rdi,[rip+0x1bc08]        # 4227c8 <_IO_stdin_used@@Base+0x7c8>
  406bc0:	mov    al,0x0
  406bc2:	call   404070 <printf@plt>
  406bc7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406bce:	jmp    407c91 <verify_monster@@Base+0x1141>
  406bd3:	mov    rdi,QWORD PTR [rbp-0x10]
  406bd7:	lea    rsi,[rip+0x1b5a2]        # 422180 <_IO_stdin_used@@Base+0x180>
  406bde:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406be3:	cmp    eax,0x0
  406be6:	jne    406c06 <verify_monster@@Base+0xb6>
  406bec:	lea    rdi,[rip+0x1bc47]        # 42283a <_IO_stdin_used@@Base+0x83a>
  406bf3:	mov    al,0x0
  406bf5:	call   404070 <printf@plt>
  406bfa:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c01:	jmp    407c91 <verify_monster@@Base+0x1141>
  406c06:	mov    rdi,QWORD PTR [rbp-0x10]
  406c0a:	lea    rsi,[rip+0x1bbe1]        # 4227f2 <_IO_stdin_used@@Base+0x7f2>
  406c11:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406c16:	cmp    eax,0x0
  406c19:	jne    406c39 <verify_monster@@Base+0xe9>
  406c1f:	lea    rdi,[rip+0x1bbd4]        # 4227fa <_IO_stdin_used@@Base+0x7fa>
  406c26:	mov    al,0x0
  406c28:	call   404070 <printf@plt>
  406c2d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c34:	jmp    407c91 <verify_monster@@Base+0x1141>
  406c39:	mov    rdi,QWORD PTR [rbp-0x10]
  406c3d:	lea    rsi,[rip+0x1bbe8]        # 42282c <_IO_stdin_used@@Base+0x82c>
  406c44:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406c49:	cmp    eax,0x0
  406c4c:	je     406c6c <verify_monster@@Base+0x11c>
  406c52:	lea    rdi,[rip+0x1bbd8]        # 422831 <_IO_stdin_used@@Base+0x831>
  406c59:	mov    al,0x0
  406c5b:	call   404070 <printf@plt>
  406c60:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c67:	jmp    407c91 <verify_monster@@Base+0x1141>
  406c6c:	mov    rdi,QWORD PTR [rbp-0x10]
  406c70:	lea    rsi,[rip+0x1b509]        # 422180 <_IO_stdin_used@@Base+0x180>
  406c77:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  406c7c:	cmp    eax,0x0
  406c7f:	jne    406c9f <verify_monster@@Base+0x14f>
  406c85:	lea    rdi,[rip+0x1bbd8]        # 422864 <_IO_stdin_used@@Base+0x864>
  406c8c:	mov    al,0x0
  406c8e:	call   404070 <printf@plt>
  406c93:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c9a:	jmp    407c91 <verify_monster@@Base+0x1141>
  406c9f:	mov    rdi,QWORD PTR [rbp-0x10]
  406ca3:	call   404480 <verify_empty_monster@@Base+0x260>
  406ca8:	mov    QWORD PTR [rbp-0x18],rax
  406cac:	cmp    rax,0x0
  406cb0:	jne    406cd0 <verify_monster@@Base+0x180>
  406cb6:	lea    rdi,[rip+0x1b4d3]        # 422190 <_IO_stdin_used@@Base+0x190>
  406cbd:	mov    al,0x0
  406cbf:	call   404070 <printf@plt>
  406cc4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406ccb:	jmp    407c91 <verify_monster@@Base+0x1141>
  406cd0:	mov    rdi,QWORD PTR [rbp-0x18]
  406cd4:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  406cd9:	movsx  ecx,ax
  406cdc:	cmp    ecx,0x50
  406cdf:	je     406cff <verify_monster@@Base+0x1af>
  406ce5:	lea    rdi,[rip+0x1b57e]        # 42226a <_IO_stdin_used@@Base+0x26a>
  406cec:	mov    al,0x0
  406cee:	call   404070 <printf@plt>
  406cf3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cfa:	jmp    407c91 <verify_monster@@Base+0x1141>
  406cff:	mov    rdi,QWORD PTR [rbp-0x18]
  406d03:	call   4047e0 <verify_empty_monster@@Base+0x5c0>
  406d08:	mov    QWORD PTR [rbp-0x50],rax
  406d0c:	cmp    rax,0x0
  406d10:	jne    406d30 <verify_monster@@Base+0x1e0>
  406d16:	lea    rdi,[rip+0x1bb7a]        # 422897 <_IO_stdin_used@@Base+0x897>
  406d1d:	mov    al,0x0
  406d1f:	call   404070 <printf@plt>
  406d24:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d2b:	jmp    407c91 <verify_monster@@Base+0x1141>
  406d30:	mov    rax,QWORD PTR [rbp-0x50]
  406d34:	and    rax,0xf
  406d3a:	cmp    rax,0x0
  406d3e:	je     406d52 <verify_monster@@Base+0x202>
  406d44:	lea    rdi,[rip+0x1bb60]        # 4228ab <_IO_stdin_used@@Base+0x8ab>
  406d4b:	mov    al,0x0
  406d4d:	call   404070 <printf@plt>
  406d52:	mov    rdi,QWORD PTR [rbp-0x50]
  406d56:	call   407ca0 <verify_monster@@Base+0x1150>
  406d5b:	vmovss xmm1,DWORD PTR [rip+0x1b2a5]        # 422008 <_IO_stdin_used@@Base+0x8>
  406d63:	vucomiss xmm0,xmm1
  406d67:	jne    406d78 <verify_monster@@Base+0x228>
  406d6d:	jp     406d78 <verify_monster@@Base+0x228>
  406d73:	jmp    406d92 <verify_monster@@Base+0x242>
  406d78:	lea    rdi,[rip+0x1bb54]        # 4228d3 <_IO_stdin_used@@Base+0x8d3>
  406d7f:	mov    al,0x0
  406d81:	call   404070 <printf@plt>
  406d86:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d8d:	jmp    407c91 <verify_monster@@Base+0x1141>
  406d92:	vmovss xmm0,DWORD PTR [rip+0x1b272]        # 42200c <_IO_stdin_used@@Base+0xc>
  406d9a:	mov    rax,QWORD PTR [rbp-0x50]
  406d9e:	vmovss xmm1,DWORD PTR [rax]
  406da2:	vucomiss xmm1,xmm0
  406da6:	jne    406df9 <verify_monster@@Base+0x2a9>
  406dac:	jp     406df9 <verify_monster@@Base+0x2a9>
  406db2:	vmovss xmm0,DWORD PTR [rip+0x1b256]        # 422010 <_IO_stdin_used@@Base+0x10>
  406dba:	mov    rax,QWORD PTR [rbp-0x50]
  406dbe:	vmovss xmm1,DWORD PTR [rax+0x4]
  406dc3:	vucomiss xmm1,xmm0
  406dc7:	jne    406df9 <verify_monster@@Base+0x2a9>
  406dcd:	jp     406df9 <verify_monster@@Base+0x2a9>
  406dd3:	vmovss xmm0,DWORD PTR [rip+0x1b22d]        # 422008 <_IO_stdin_used@@Base+0x8>
  406ddb:	mov    rax,QWORD PTR [rbp-0x50]
  406ddf:	vmovss xmm1,DWORD PTR [rax+0x8]
  406de4:	vucomiss xmm1,xmm0
  406de8:	jne    406df9 <verify_monster@@Base+0x2a9>
  406dee:	jp     406df9 <verify_monster@@Base+0x2a9>
  406df4:	jmp    406e13 <verify_monster@@Base+0x2c3>
  406df9:	lea    rdi,[rip+0x1baf5]        # 4228f5 <_IO_stdin_used@@Base+0x8f5>
  406e00:	mov    al,0x0
  406e02:	call   404070 <printf@plt>
  406e07:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406e0e:	jmp    407c91 <verify_monster@@Base+0x1141>
  406e13:	lea    rdi,[rbp-0x80]
  406e17:	call   407cf0 <verify_monster@@Base+0x11a0>
  406e1c:	mov    rsi,QWORD PTR [rbp-0x50]
  406e20:	lea    rdi,[rbp-0x80]
  406e24:	mov    QWORD PTR [rbp-0x108],rax
  406e2b:	call   407d30 <verify_monster@@Base+0x11e0>
  406e30:	vmovss xmm0,DWORD PTR [rip+0x1b1d4]        # 42200c <_IO_stdin_used@@Base+0xc>
  406e38:	vmovss xmm1,DWORD PTR [rbp-0x80]
  406e3d:	vucomiss xmm1,xmm0
  406e41:	jne    406e8c <verify_monster@@Base+0x33c>
  406e47:	jp     406e8c <verify_monster@@Base+0x33c>
  406e4d:	vmovss xmm0,DWORD PTR [rip+0x1b1bb]        # 422010 <_IO_stdin_used@@Base+0x10>
  406e55:	vmovss xmm1,DWORD PTR [rbp-0x7c]
  406e5a:	vucomiss xmm1,xmm0
  406e5e:	jne    406e8c <verify_monster@@Base+0x33c>
  406e64:	jp     406e8c <verify_monster@@Base+0x33c>
  406e6a:	vmovss xmm0,DWORD PTR [rip+0x1b196]        # 422008 <_IO_stdin_used@@Base+0x8>
  406e72:	vmovss xmm1,DWORD PTR [rbp-0x78]
  406e77:	vucomiss xmm1,xmm0
  406e7b:	jne    406e8c <verify_monster@@Base+0x33c>
  406e81:	jp     406e8c <verify_monster@@Base+0x33c>
  406e87:	jmp    406ea6 <verify_monster@@Base+0x356>
  406e8c:	lea    rdi,[rip+0x1ba79]        # 42290c <_IO_stdin_used@@Base+0x90c>
  406e93:	mov    al,0x0
  406e95:	call   404070 <printf@plt>
  406e9a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406ea1:	jmp    407c91 <verify_monster@@Base+0x1141>
  406ea6:	mov    rax,QWORD PTR [rbp-0x50]
  406eaa:	vmovsd xmm0,QWORD PTR [rax+0x10]
  406eaf:	vxorps xmm1,xmm1,xmm1
  406eb3:	vucomisd xmm0,xmm1
  406eb7:	jne    406efd <verify_monster@@Base+0x3ad>
  406ebd:	jp     406efd <verify_monster@@Base+0x3ad>
  406ec3:	mov    rax,QWORD PTR [rbp-0x50]
  406ec7:	vmovsd xmm0,QWORD PTR [rax+0x10]
  406ecc:	vxorps xmm1,xmm1,xmm1
  406ed0:	vucomisd xmm0,xmm1
  406ed4:	jne    406efd <verify_monster@@Base+0x3ad>
  406eda:	jp     406efd <verify_monster@@Base+0x3ad>
  406ee0:	mov    rax,QWORD PTR [rbp-0x50]
  406ee4:	add    rax,0x1a
  406eea:	mov    ecx,DWORD PTR [rax]
  406eec:	test   ecx,ecx
  406eee:	setne  dl
  406ef1:	movzx  ecx,dl
  406ef4:	cmp    ecx,0x0
  406ef7:	je     406f17 <verify_monster@@Base+0x3c7>
  406efd:	lea    rdi,[rip+0x1ba2a]        # 42292e <_IO_stdin_used@@Base+0x92e>
  406f04:	mov    al,0x0
  406f06:	call   404070 <printf@plt>
  406f0b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406f12:	jmp    407c91 <verify_monster@@Base+0x1141>
  406f17:	mov    rdi,QWORD PTR [rbp-0x18]
  406f1b:	call   407e10 <verify_monster@@Base+0x12c0>
  406f20:	mov    QWORD PTR [rbp-0x58],rax
  406f24:	cmp    QWORD PTR [rbp-0x58],0x0
  406f29:	je     406f48 <verify_monster@@Base+0x3f8>
  406f2f:	mov    rdi,QWORD PTR [rbp-0x58]
  406f33:	lea    rsi,[rip+0x1b41d]        # 422357 <_IO_stdin_used@@Base+0x357>
  406f3a:	call   4040d0 <strcmp@plt>
  406f3f:	cmp    eax,0x0
  406f42:	je     406f62 <verify_monster@@Base+0x412>
  406f48:	lea    rdi,[rip+0x1ba04]        # 422953 <_IO_stdin_used@@Base+0x953>
  406f4f:	mov    al,0x0
  406f51:	call   404070 <printf@plt>
  406f56:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406f5d:	jmp    407c91 <verify_monster@@Base+0x1141>
  406f62:	mov    rdi,QWORD PTR [rbp-0x18]
  406f66:	call   407e10 <verify_monster@@Base+0x12c0>
  406f6b:	mov    QWORD PTR [rbp-0x60],rax
  406f6f:	mov    rdi,QWORD PTR [rbp-0x58]
  406f73:	call   407f50 <verify_monster@@Base+0x1400>
  406f78:	cmp    rax,0x9
  406f7c:	jne    406f95 <verify_monster@@Base+0x445>
  406f82:	mov    rdi,QWORD PTR [rbp-0x60]
  406f86:	call   407f50 <verify_monster@@Base+0x1400>
  406f8b:	cmp    rax,0x9
  406f8f:	je     406faf <verify_monster@@Base+0x45f>
  406f95:	lea    rdi,[rip+0x1b9cc]        # 422968 <_IO_stdin_used@@Base+0x968>
  406f9c:	mov    al,0x0
  406f9e:	call   404070 <printf@plt>
  406fa3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406faa:	jmp    407c91 <verify_monster@@Base+0x1141>
  406faf:	mov    rdi,QWORD PTR [rbp-0x18]
  406fb3:	call   407fa0 <verify_monster@@Base+0x1450>
  406fb8:	movsx  ecx,al
  406fbb:	cmp    ecx,0x2
  406fbe:	je     406fde <verify_monster@@Base+0x48e>
  406fc4:	lea    rdi,[rip+0x1b9b9]        # 422984 <_IO_stdin_used@@Base+0x984>
  406fcb:	mov    al,0x0
  406fcd:	call   404070 <printf@plt>
  406fd2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406fd9:	jmp    407c91 <verify_monster@@Base+0x1141>
  406fde:	mov    edi,0x2
  406fe3:	call   4080c0 <verify_monster@@Base+0x1570>
  406fe8:	lea    rsi,[rip+0x1b9b4]        # 4229a3 <_IO_stdin_used@@Base+0x9a3>
  406fef:	mov    rdi,rax
  406ff2:	call   4040d0 <strcmp@plt>
  406ff7:	cmp    eax,0x0
  406ffa:	je     40701a <verify_monster@@Base+0x4ca>
  407000:	lea    rdi,[rip+0x1b9a2]        # 4229a9 <_IO_stdin_used@@Base+0x9a9>
  407007:	mov    al,0x0
  407009:	call   404070 <printf@plt>
  40700e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407015:	jmp    407c91 <verify_monster@@Base+0x1141>
  40701a:	mov    edi,0x2
  40701f:	call   408150 <verify_monster@@Base+0x1600>
  407024:	cmp    eax,0x0
  407027:	jne    407047 <verify_monster@@Base+0x4f7>
  40702d:	lea    rdi,[rip+0x1b9a3]        # 4229d7 <_IO_stdin_used@@Base+0x9d7>
  407034:	mov    al,0x0
  407036:	call   404070 <printf@plt>
  40703b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407042:	jmp    407c91 <verify_monster@@Base+0x1141>
  407047:	mov    edi,0x1
  40704c:	call   408150 <verify_monster@@Base+0x1600>
  407051:	cmp    eax,0x0
  407054:	jne    407074 <verify_monster@@Base+0x524>
  40705a:	lea    rdi,[rip+0x1b9b1]        # 422a12 <_IO_stdin_used@@Base+0xa12>
  407061:	mov    al,0x0
  407063:	call   404070 <printf@plt>
  407068:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40706f:	jmp    407c91 <verify_monster@@Base+0x1141>
  407074:	mov    edi,0x4
  407079:	call   408150 <verify_monster@@Base+0x1600>
  40707e:	cmp    eax,0x0
  407081:	je     4070a1 <verify_monster@@Base+0x551>
  407087:	lea    rdi,[rip+0x1b9bd]        # 422a4b <_IO_stdin_used@@Base+0xa4b>
  40708e:	mov    al,0x0
  407090:	call   404070 <printf@plt>
  407095:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40709c:	jmp    407c91 <verify_monster@@Base+0x1141>
  4070a1:	mov    edi,0x8
  4070a6:	call   408150 <verify_monster@@Base+0x1600>
  4070ab:	cmp    eax,0x0
  4070ae:	jne    4070ce <verify_monster@@Base+0x57e>
  4070b4:	lea    rdi,[rip+0x1b9bc]        # 422a77 <_IO_stdin_used@@Base+0xa77>
  4070bb:	mov    al,0x0
  4070bd:	call   404070 <printf@plt>
  4070c2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070c9:	jmp    407c91 <verify_monster@@Base+0x1141>
  4070ce:	mov    edi,0x9
  4070d3:	call   408150 <verify_monster@@Base+0x1600>
  4070d8:	cmp    eax,0x0
  4070db:	je     4070fb <verify_monster@@Base+0x5ab>
  4070e1:	lea    rdi,[rip+0x1b963]        # 422a4b <_IO_stdin_used@@Base+0xa4b>
  4070e8:	mov    al,0x0
  4070ea:	call   404070 <printf@plt>
  4070ef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070f6:	jmp    407c91 <verify_monster@@Base+0x1141>
  4070fb:	mov    edi,0x1
  407100:	call   4081d0 <verify_monster@@Base+0x1680>
  407105:	cmp    eax,0x0
  407108:	jne    407128 <verify_monster@@Base+0x5d8>
  40710e:	lea    rdi,[rip+0x1b99c]        # 422ab1 <_IO_stdin_used@@Base+0xab1>
  407115:	mov    al,0x0
  407117:	call   404070 <printf@plt>
  40711c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407123:	jmp    407c91 <verify_monster@@Base+0x1141>
  407128:	mov    edi,0x2a
  40712d:	call   4081d0 <verify_monster@@Base+0x1680>
  407132:	cmp    eax,0x0
  407135:	je     407155 <verify_monster@@Base+0x605>
  40713b:	lea    rdi,[rip+0x1b991]        # 422ad3 <_IO_stdin_used@@Base+0xad3>
  407142:	mov    al,0x0
  407144:	call   404070 <printf@plt>
  407149:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407150:	jmp    407c91 <verify_monster@@Base+0x1141>
  407155:	mov    rdi,QWORD PTR [rbp-0x18]
  407159:	call   408250 <verify_monster@@Base+0x1700>
  40715e:	mov    QWORD PTR [rbp-0xe8],rax
  407165:	mov    rdi,QWORD PTR [rbp-0xe8]
  40716c:	call   408380 <verify_monster@@Base+0x1830>
  407171:	cmp    rax,0xa
  407175:	je     407195 <verify_monster@@Base+0x645>
  40717b:	lea    rdi,[rip+0x1b976]        # 422af8 <_IO_stdin_used@@Base+0xaf8>
  407182:	mov    al,0x0
  407184:	call   404070 <printf@plt>
  407189:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407190:	jmp    407c91 <verify_monster@@Base+0x1141>
  407195:	mov    QWORD PTR [rbp-0xf0],0x0
  4071a0:	mov    rax,QWORD PTR [rbp-0xf0]
  4071a7:	mov    rdi,QWORD PTR [rbp-0xe8]
  4071ae:	mov    QWORD PTR [rbp-0x110],rax
  4071b5:	call   408380 <verify_monster@@Base+0x1830>
  4071ba:	mov    rcx,QWORD PTR [rbp-0x110]
  4071c1:	cmp    rcx,rax
  4071c4:	jae    407230 <verify_monster@@Base+0x6e0>
  4071ca:	mov    rdi,QWORD PTR [rbp-0xe8]
  4071d1:	mov    rsi,QWORD PTR [rbp-0xf0]
  4071d8:	call   4083a0 <verify_monster@@Base+0x1850>
  4071dd:	movzx  ecx,al
  4071e0:	mov    edx,ecx
  4071e2:	cmp    rdx,QWORD PTR [rbp-0xf0]
  4071e9:	je     407212 <verify_monster@@Base+0x6c2>
  4071ef:	mov    rax,QWORD PTR [rbp-0xf0]
  4071f6:	lea    rdi,[rip+0x1b918]        # 422b15 <_IO_stdin_used@@Base+0xb15>
  4071fd:	mov    esi,eax
  4071ff:	mov    al,0x0
  407201:	call   404070 <printf@plt>
  407206:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40720d:	jmp    407c91 <verify_monster@@Base+0x1141>
  407212:	jmp    407217 <verify_monster@@Base+0x6c7>
  407217:	mov    rax,QWORD PTR [rbp-0xf0]
  40721e:	add    rax,0x1
  407224:	mov    QWORD PTR [rbp-0xf0],rax
  40722b:	jmp    4071a0 <verify_monster@@Base+0x650>
  407230:	mov    rdi,QWORD PTR [rbp-0x18]
  407234:	call   408410 <verify_monster@@Base+0x18c0>
  407239:	movsx  ecx,ax
  40723c:	cmp    ecx,0x96
  407242:	je     407262 <verify_monster@@Base+0x712>
  407248:	lea    rdi,[rip+0x1b8e3]        # 422b32 <_IO_stdin_used@@Base+0xb32>
  40724f:	mov    al,0x0
  407251:	call   404070 <printf@plt>
  407256:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40725d:	jmp    407c91 <verify_monster@@Base+0x1141>
  407262:	mov    rdi,QWORD PTR [rbp-0x18]
  407266:	call   408520 <verify_monster@@Base+0x19d0>
  40726b:	cmp    eax,0x0
  40726e:	je     40728e <verify_monster@@Base+0x73e>
  407274:	lea    rdi,[rip+0x1b8c9]        # 422b44 <_IO_stdin_used@@Base+0xb44>
  40727b:	mov    al,0x0
  40727d:	call   404070 <printf@plt>
  407282:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407289:	jmp    407c91 <verify_monster@@Base+0x1141>
  40728e:	mov    rdi,QWORD PTR [rbp-0x18]
  407292:	call   404600 <verify_empty_monster@@Base+0x3e0>
  407297:	cmp    eax,0x0
  40729a:	jne    4072ba <verify_monster@@Base+0x76a>
  4072a0:	lea    rdi,[rip+0x1b8b2]        # 422b59 <_IO_stdin_used@@Base+0xb59>
  4072a7:	mov    al,0x0
  4072a9:	call   404070 <printf@plt>
  4072ae:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4072b5:	jmp    407c91 <verify_monster@@Base+0x1141>
  4072ba:	mov    rdi,QWORD PTR [rbp-0x18]
  4072be:	call   4046f0 <verify_empty_monster@@Base+0x4d0>
  4072c3:	cmp    eax,0x0
  4072c6:	jne    4072e6 <verify_monster@@Base+0x796>
  4072cc:	lea    rdi,[rip+0x1afd8]        # 4222ab <_IO_stdin_used@@Base+0x2ab>
  4072d3:	mov    al,0x0
  4072d5:	call   404070 <printf@plt>
  4072da:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4072e1:	jmp    407c91 <verify_monster@@Base+0x1141>
  4072e6:	mov    rdi,QWORD PTR [rbp-0x18]
  4072ea:	call   408610 <verify_monster@@Base+0x1ac0>
  4072ef:	mov    QWORD PTR [rbp-0x88],rax
  4072f6:	mov    rdi,QWORD PTR [rbp-0x88]
  4072fd:	call   408740 <verify_monster@@Base+0x1bf0>
  407302:	cmp    rax,0x5
  407306:	je     407326 <verify_monster@@Base+0x7d6>
  40730c:	lea    rdi,[rip+0x1b867]        # 422b7a <_IO_stdin_used@@Base+0xb7a>
  407313:	mov    al,0x0
  407315:	call   404070 <printf@plt>
  40731a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407321:	jmp    407c91 <verify_monster@@Base+0x1141>
  407326:	mov    QWORD PTR [rbp-0xf0],0x0
  407331:	cmp    QWORD PTR [rbp-0xf0],0x5
  407339:	jae    407421 <verify_monster@@Base+0x8d1>
  40733f:	mov    rdi,QWORD PTR [rbp-0x88]
  407346:	mov    rsi,QWORD PTR [rbp-0xf0]
  40734d:	call   408790 <verify_monster@@Base+0x1c40>
  407352:	mov    QWORD PTR [rbp-0xa8],rax
  407359:	mov    rax,QWORD PTR [rbp-0xf0]
  407360:	movsx  ecx,WORD PTR [rbp+rax*4-0xa0]
  407368:	mov    rdi,QWORD PTR [rbp-0xa8]
  40736f:	mov    DWORD PTR [rbp-0x114],ecx
  407375:	call   408800 <verify_monster@@Base+0x1cb0>
  40737a:	movsx  ecx,ax
  40737d:	mov    edx,DWORD PTR [rbp-0x114]
  407383:	cmp    edx,ecx
  407385:	je     4073ae <verify_monster@@Base+0x85e>
  40738b:	mov    rax,QWORD PTR [rbp-0xf0]
  407392:	lea    rdi,[rip+0x1b808]        # 422ba1 <_IO_stdin_used@@Base+0xba1>
  407399:	mov    esi,eax
  40739b:	mov    al,0x0
  40739d:	call   404070 <printf@plt>
  4073a2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073a9:	jmp    407c91 <verify_monster@@Base+0x1141>
  4073ae:	mov    rax,QWORD PTR [rbp-0xf0]
  4073b5:	movsx  ecx,BYTE PTR [rbp+rax*4-0x9e]
  4073bd:	mov    rdi,QWORD PTR [rbp-0xa8]
  4073c4:	mov    DWORD PTR [rbp-0x118],ecx
  4073ca:	call   408850 <verify_monster@@Base+0x1d00>
  4073cf:	movsx  ecx,al
  4073d2:	mov    edx,DWORD PTR [rbp-0x118]
  4073d8:	cmp    edx,ecx
  4073da:	je     407403 <verify_monster@@Base+0x8b3>
  4073e0:	mov    rax,QWORD PTR [rbp-0xf0]
  4073e7:	lea    rdi,[rip+0x1b7b3]        # 422ba1 <_IO_stdin_used@@Base+0xba1>
  4073ee:	mov    esi,eax
  4073f0:	mov    al,0x0
  4073f2:	call   404070 <printf@plt>
  4073f7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073fe:	jmp    407c91 <verify_monster@@Base+0x1141>
  407403:	jmp    407408 <verify_monster@@Base+0x8b8>
  407408:	mov    rax,QWORD PTR [rbp-0xf0]
  40740f:	add    rax,0x1
  407415:	mov    QWORD PTR [rbp-0xf0],rax
  40741c:	jmp    407331 <verify_monster@@Base+0x7e1>
  407421:	mov    rdi,QWORD PTR [rbp-0x18]
  407425:	call   4088a0 <verify_monster@@Base+0x1d50>
  40742a:	mov    QWORD PTR [rbp-0x30],rax
  40742e:	mov    rdi,QWORD PTR [rbp-0x30]
  407432:	call   4089d0 <verify_monster@@Base+0x1e80>
  407437:	cmp    rax,0x8
  40743b:	je     40745b <verify_monster@@Base+0x90b>
  407441:	lea    rdi,[rip+0x1b781]        # 422bc9 <_IO_stdin_used@@Base+0xbc9>
  407448:	mov    al,0x0
  40744a:	call   404070 <printf@plt>
  40744f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407456:	jmp    407c91 <verify_monster@@Base+0x1141>
  40745b:	mov    rdi,QWORD PTR [rbp-0x30]
  40745f:	mov    esi,0x5
  407464:	call   408a20 <verify_monster@@Base+0x1ed0>
  407469:	mov    QWORD PTR [rbp-0x20],rax
  40746d:	cmp    QWORD PTR [rbp-0x20],0x0
  407472:	je     40747d <verify_monster@@Base+0x92d>
  407478:	jmp    40749c <verify_monster@@Base+0x94c>
  40747d:	lea    rdi,[rip+0x1b767]        # 422beb <_IO_stdin_used@@Base+0xbeb>
  407484:	lea    rsi,[rip+0x1b764]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40748b:	mov    edx,0x296
  407490:	lea    rcx,[rip+0x1b7c3]        # 422c5a <_IO_stdin_used@@Base+0xc5a>
  407497:	call   404090 <__assert_fail@plt>
  40749c:	mov    rdi,QWORD PTR [rbp-0x20]
  4074a0:	call   407e10 <verify_monster@@Base+0x12c0>
  4074a5:	mov    QWORD PTR [rbp-0x58],rax
  4074a9:	mov    rdi,QWORD PTR [rbp-0x58]
  4074ad:	lea    rsi,[rip+0x1b7d1]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  4074b4:	call   4040d0 <strcmp@plt>
  4074b9:	cmp    eax,0x0
  4074bc:	je     4074dc <verify_monster@@Base+0x98c>
  4074c2:	lea    rdi,[rip+0x1b7ac]        # 422c75 <_IO_stdin_used@@Base+0xc75>
  4074c9:	mov    al,0x0
  4074cb:	call   404070 <printf@plt>
  4074d0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4074d7:	jmp    407c91 <verify_monster@@Base+0x1141>
  4074dc:	mov    rdi,QWORD PTR [rbp-0x30]
  4074e0:	mov    esi,0x1
  4074e5:	call   408a20 <verify_monster@@Base+0x1ed0>
  4074ea:	mov    QWORD PTR [rbp-0x28],rax
  4074ee:	mov    rax,QWORD PTR [rbp-0x28]
  4074f2:	cmp    rax,QWORD PTR [rbp-0x20]
  4074f6:	je     407516 <verify_monster@@Base+0x9c6>
  4074fc:	lea    rdi,[rip+0x1b78a]        # 422c8d <_IO_stdin_used@@Base+0xc8d>
  407503:	mov    al,0x0
  407505:	call   404070 <printf@plt>
  40750a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407511:	jmp    407c91 <verify_monster@@Base+0x1141>
  407516:	mov    rdi,QWORD PTR [rbp-0x28]
  40751a:	call   407e10 <verify_monster@@Base+0x12c0>
  40751f:	mov    QWORD PTR [rbp-0x58],rax
  407523:	mov    rdi,QWORD PTR [rbp-0x58]
  407527:	lea    rsi,[rip+0x1b757]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40752e:	call   4040d0 <strcmp@plt>
  407533:	cmp    eax,0x0
  407536:	je     40755a <verify_monster@@Base+0xa0a>
  40753c:	mov    rsi,QWORD PTR [rbp-0x58]
  407540:	lea    rdi,[rip+0x1b77c]        # 422cc3 <_IO_stdin_used@@Base+0xcc3>
  407547:	mov    al,0x0
  407549:	call   404070 <printf@plt>
  40754e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407555:	jmp    407c91 <verify_monster@@Base+0x1141>
  40755a:	mov    rdi,QWORD PTR [rbp-0x30]
  40755e:	mov    esi,0x2
  407563:	call   408a20 <verify_monster@@Base+0x1ed0>
  407568:	mov    QWORD PTR [rbp-0x20],rax
  40756c:	mov    rdi,QWORD PTR [rbp-0x20]
  407570:	call   407e10 <verify_monster@@Base+0x12c0>
  407575:	mov    QWORD PTR [rbp-0x58],rax
  407579:	mov    rdi,QWORD PTR [rbp-0x58]
  40757d:	lea    rsi,[rip+0x1b761]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  407584:	call   4040d0 <strcmp@plt>
  407589:	cmp    eax,0x0
  40758c:	je     4075b0 <verify_monster@@Base+0xa60>
  407592:	mov    rsi,QWORD PTR [rbp-0x58]
  407596:	lea    rdi,[rip+0x1b74e]        # 422ceb <_IO_stdin_used@@Base+0xceb>
  40759d:	mov    al,0x0
  40759f:	call   404070 <printf@plt>
  4075a4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4075ab:	jmp    407c91 <verify_monster@@Base+0x1141>
  4075b0:	xor    eax,eax
  4075b2:	mov    esi,eax
  4075b4:	mov    rdi,QWORD PTR [rbp-0x30]
  4075b8:	call   408a20 <verify_monster@@Base+0x1ed0>
  4075bd:	mov    QWORD PTR [rbp-0x20],rax
  4075c1:	mov    rdi,QWORD PTR [rbp-0x20]
  4075c5:	call   407e10 <verify_monster@@Base+0x12c0>
  4075ca:	mov    QWORD PTR [rbp-0x58],rax
  4075ce:	mov    rdi,QWORD PTR [rbp-0x58]
  4075d2:	lea    rsi,[rip+0x1b734]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  4075d9:	call   4040d0 <strcmp@plt>
  4075de:	cmp    eax,0x0
  4075e1:	je     407605 <verify_monster@@Base+0xab5>
  4075e7:	mov    rsi,QWORD PTR [rbp-0x58]
  4075eb:	lea    rdi,[rip+0x1b724]        # 422d16 <_IO_stdin_used@@Base+0xd16>
  4075f2:	mov    al,0x0
  4075f4:	call   404070 <printf@plt>
  4075f9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407600:	jmp    407c91 <verify_monster@@Base+0x1141>
  407605:	mov    rdi,QWORD PTR [rbp-0x30]
  407609:	mov    esi,0x3
  40760e:	call   408a20 <verify_monster@@Base+0x1ed0>
  407613:	mov    QWORD PTR [rbp-0x20],rax
  407617:	mov    rdi,QWORD PTR [rbp-0x20]
  40761b:	call   407e10 <verify_monster@@Base+0x12c0>
  407620:	mov    QWORD PTR [rbp-0x58],rax
  407624:	mov    rdi,QWORD PTR [rbp-0x58]
  407628:	lea    rsi,[rip+0x1b656]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40762f:	call   4040d0 <strcmp@plt>
  407634:	cmp    eax,0x0
  407637:	je     40765b <verify_monster@@Base+0xb0b>
  40763d:	mov    rsi,QWORD PTR [rbp-0x58]
  407641:	lea    rdi,[rip+0x1b6f3]        # 422d3b <_IO_stdin_used@@Base+0xd3b>
  407648:	mov    al,0x0
  40764a:	call   404070 <printf@plt>
  40764f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407656:	jmp    407c91 <verify_monster@@Base+0x1141>
  40765b:	mov    rdi,QWORD PTR [rbp-0x30]
  40765f:	mov    esi,0x4
  407664:	call   408a20 <verify_monster@@Base+0x1ed0>
  407669:	mov    QWORD PTR [rbp-0x20],rax
  40766d:	mov    rdi,QWORD PTR [rbp-0x20]
  407671:	call   407e10 <verify_monster@@Base+0x12c0>
  407676:	mov    QWORD PTR [rbp-0x58],rax
  40767a:	mov    rdi,QWORD PTR [rbp-0x58]
  40767e:	lea    rsi,[rip+0x1b660]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  407685:	call   4040d0 <strcmp@plt>
  40768a:	cmp    eax,0x0
  40768d:	je     4076b1 <verify_monster@@Base+0xb61>
  407693:	mov    rsi,QWORD PTR [rbp-0x58]
  407697:	lea    rdi,[rip+0x1b6c1]        # 422d5f <_IO_stdin_used@@Base+0xd5f>
  40769e:	mov    al,0x0
  4076a0:	call   404070 <printf@plt>
  4076a5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076ac:	jmp    407c91 <verify_monster@@Base+0x1141>
  4076b1:	mov    rdi,QWORD PTR [rbp-0x30]
  4076b5:	mov    esi,0x6
  4076ba:	call   408a20 <verify_monster@@Base+0x1ed0>
  4076bf:	mov    QWORD PTR [rbp-0x20],rax
  4076c3:	mov    rdi,QWORD PTR [rbp-0x20]
  4076c7:	call   407e10 <verify_monster@@Base+0x12c0>
  4076cc:	mov    QWORD PTR [rbp-0x58],rax
  4076d0:	mov    rdi,QWORD PTR [rbp-0x58]
  4076d4:	lea    rsi,[rip+0x1b632]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  4076db:	call   4040d0 <strcmp@plt>
  4076e0:	cmp    eax,0x0
  4076e3:	je     407707 <verify_monster@@Base+0xbb7>
  4076e9:	mov    rsi,QWORD PTR [rbp-0x58]
  4076ed:	lea    rdi,[rip+0x1b68d]        # 422d81 <_IO_stdin_used@@Base+0xd81>
  4076f4:	mov    al,0x0
  4076f6:	call   404070 <printf@plt>
  4076fb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407702:	jmp    407c91 <verify_monster@@Base+0x1141>
  407707:	mov    rdi,QWORD PTR [rbp-0x30]
  40770b:	mov    esi,0x7
  407710:	call   408a20 <verify_monster@@Base+0x1ed0>
  407715:	mov    QWORD PTR [rbp-0x20],rax
  407719:	mov    rdi,QWORD PTR [rbp-0x20]
  40771d:	call   407e10 <verify_monster@@Base+0x12c0>
  407722:	mov    QWORD PTR [rbp-0x58],rax
  407726:	mov    rdi,QWORD PTR [rbp-0x58]
  40772a:	lea    rsi,[rip+0x1b5b4]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  407731:	call   4040d0 <strcmp@plt>
  407736:	cmp    eax,0x0
  407739:	je     40775d <verify_monster@@Base+0xc0d>
  40773f:	mov    rsi,QWORD PTR [rbp-0x58]
  407743:	lea    rdi,[rip+0x1b65c]        # 422da6 <_IO_stdin_used@@Base+0xda6>
  40774a:	mov    al,0x0
  40774c:	call   404070 <printf@plt>
  407751:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407758:	jmp    407c91 <verify_monster@@Base+0x1141>
  40775d:	mov    rdi,QWORD PTR [rbp-0x18]
  407761:	call   408ac0 <verify_monster@@Base+0x1f70>
  407766:	mov    QWORD PTR [rbp-0xb0],rax
  40776d:	mov    rdi,QWORD PTR [rbp-0xb0]
  407774:	call   408bf0 <verify_monster@@Base+0x20a0>
  407779:	cmp    rax,0x3
  40777d:	je     40779d <verify_monster@@Base+0xc4d>
  407783:	lea    rdi,[rip+0x1b641]        # 422dcb <_IO_stdin_used@@Base+0xdcb>
  40778a:	mov    al,0x0
  40778c:	call   404070 <printf@plt>
  407791:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407798:	jmp    407c91 <verify_monster@@Base+0x1141>
  40779d:	xor    eax,eax
  40779f:	mov    esi,eax
  4077a1:	mov    rdi,QWORD PTR [rbp-0xb0]
  4077a8:	call   408c40 <verify_monster@@Base+0x20f0>
  4077ad:	lea    rsi,[rip+0x1b642]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  4077b4:	mov    rdi,rax
  4077b7:	call   4040d0 <strcmp@plt>
  4077bc:	cmp    eax,0x0
  4077bf:	je     4077df <verify_monster@@Base+0xc8f>
  4077c5:	lea    rdi,[rip+0x1b630]        # 422dfc <_IO_stdin_used@@Base+0xdfc>
  4077cc:	mov    al,0x0
  4077ce:	call   404070 <printf@plt>
  4077d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4077da:	jmp    407c91 <verify_monster@@Base+0x1141>
  4077df:	mov    rdi,QWORD PTR [rbp-0xb0]
  4077e6:	mov    esi,0x1
  4077eb:	call   408c40 <verify_monster@@Base+0x20f0>
  4077f0:	mov    QWORD PTR [rbp-0xb8],rax
  4077f7:	mov    rdi,QWORD PTR [rbp-0xb8]
  4077fe:	call   407f50 <verify_monster@@Base+0x1400>
  407803:	cmp    rax,0x2
  407807:	je     407827 <verify_monster@@Base+0xcd7>
  40780d:	lea    rdi,[rip+0x1b600]        # 422e14 <_IO_stdin_used@@Base+0xe14>
  407814:	mov    al,0x0
  407816:	call   404070 <printf@plt>
  40781b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407822:	jmp    407c91 <verify_monster@@Base+0x1141>
  407827:	mov    rax,QWORD PTR [rbp-0xb8]
  40782e:	mov    cx,WORD PTR [rax]
  407831:	sub    cx,0x2c
  407835:	setne  dl
  407838:	movzx  esi,dl
  40783b:	cmp    esi,0x0
  40783e:	je     40785e <verify_monster@@Base+0xd0e>
  407844:	lea    rdi,[rip+0x1b5e3]        # 422e2e <_IO_stdin_used@@Base+0xe2e>
  40784b:	mov    al,0x0
  40784d:	call   404070 <printf@plt>
  407852:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407859:	jmp    407c91 <verify_monster@@Base+0x1141>
  40785e:	mov    rdi,QWORD PTR [rbp-0xb0]
  407865:	mov    esi,0x2
  40786a:	call   408c40 <verify_monster@@Base+0x20f0>
  40786f:	lea    rsi,[rip+0x1b5d9]        # 422e4f <_IO_stdin_used@@Base+0xe4f>
  407876:	mov    rdi,rax
  407879:	call   4040d0 <strcmp@plt>
  40787e:	cmp    eax,0x0
  407881:	je     4078a1 <verify_monster@@Base+0xd51>
  407887:	lea    rdi,[rip+0x1b5c8]        # 422e56 <_IO_stdin_used@@Base+0xe56>
  40788e:	mov    al,0x0
  407890:	call   404070 <printf@plt>
  407895:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40789c:	jmp    407c91 <verify_monster@@Base+0x1141>
  4078a1:	mov    rdi,QWORD PTR [rbp-0x18]
  4078a5:	call   408ce0 <verify_monster@@Base+0x2190>
  4078aa:	cmp    eax,0x0
  4078ad:	jne    4078cd <verify_monster@@Base+0xd7d>
  4078b3:	lea    rdi,[rip+0x1b5b4]        # 422e6e <_IO_stdin_used@@Base+0xe6e>
  4078ba:	mov    al,0x0
  4078bc:	call   404070 <printf@plt>
  4078c1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4078c8:	jmp    407c91 <verify_monster@@Base+0x1141>
  4078cd:	mov    rdi,QWORD PTR [rbp-0x18]
  4078d1:	call   408dd0 <verify_monster@@Base+0x2280>
  4078d6:	mov    QWORD PTR [rbp-0xc0],rax
  4078dd:	mov    rdi,QWORD PTR [rbp-0xc0]
  4078e4:	call   408f00 <verify_monster@@Base+0x23b0>
  4078e9:	cmp    rax,0x4
  4078ed:	je     40790d <verify_monster@@Base+0xdbd>
  4078f3:	lea    rdi,[rip+0x1b58f]        # 422e89 <_IO_stdin_used@@Base+0xe89>
  4078fa:	mov    al,0x0
  4078fc:	call   404070 <printf@plt>
  407901:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407908:	jmp    407c91 <verify_monster@@Base+0x1141>
  40790d:	mov    QWORD PTR [rbp-0xf0],0x0
  407918:	cmp    QWORD PTR [rbp-0xf0],0x4
  407920:	jae    407991 <verify_monster@@Base+0xe41>
  407926:	mov    rdi,QWORD PTR [rbp-0xc0]
  40792d:	mov    rsi,QWORD PTR [rbp-0xf0]
  407934:	call   408f20 <verify_monster@@Base+0x23d0>
  407939:	movzx  ecx,al
  40793c:	mov    rdx,QWORD PTR [rbp-0xf0]
  407943:	cmp    ecx,DWORD PTR [rbp+rdx*4-0xe0]
  40794a:	je     407973 <verify_monster@@Base+0xe23>
  407950:	mov    rax,QWORD PTR [rbp-0xf0]
  407957:	lea    rdi,[rip+0x1b54b]        # 422ea9 <_IO_stdin_used@@Base+0xea9>
  40795e:	mov    esi,eax
  407960:	mov    al,0x0
  407962:	call   404070 <printf@plt>
  407967:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40796e:	jmp    407c91 <verify_monster@@Base+0x1141>
  407973:	jmp    407978 <verify_monster@@Base+0xe28>
  407978:	mov    rax,QWORD PTR [rbp-0xf0]
  40797f:	add    rax,0x1
  407985:	mov    QWORD PTR [rbp-0xf0],rax
  40798c:	jmp    407918 <verify_monster@@Base+0xdc8>
  407991:	mov    rdi,QWORD PTR [rbp-0x18]
  407995:	call   408f90 <verify_monster@@Base+0x2440>
  40799a:	mov    BYTE PTR [rbp-0x31],al
  40799d:	movzx  ecx,BYTE PTR [rbp-0x31]
  4079a1:	cmp    ecx,0x1
  4079a4:	je     4079c4 <verify_monster@@Base+0xe74>
  4079aa:	lea    rdi,[rip+0x1b517]        # 422ec8 <_IO_stdin_used@@Base+0xec8>
  4079b1:	mov    al,0x0
  4079b3:	call   404070 <printf@plt>
  4079b8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4079bf:	jmp    407c91 <verify_monster@@Base+0x1141>
  4079c4:	mov    rdi,QWORD PTR [rbp-0x18]
  4079c8:	call   4090a0 <verify_monster@@Base+0x2550>
  4079cd:	mov    QWORD PTR [rbp-0x20],rax
  4079d1:	mov    rdi,QWORD PTR [rbp-0x20]
  4079d5:	call   407e10 <verify_monster@@Base+0x12c0>
  4079da:	lea    rsi,[rip+0x1b2a4]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  4079e1:	mov    rdi,rax
  4079e4:	call   4040d0 <strcmp@plt>
  4079e9:	cmp    eax,0x0
  4079ec:	je     407a0c <verify_monster@@Base+0xebc>
  4079f2:	lea    rdi,[rip+0x1b4f9]        # 422ef2 <_IO_stdin_used@@Base+0xef2>
  4079f9:	mov    al,0x0
  4079fb:	call   404070 <printf@plt>
  407a00:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a07:	jmp    407c91 <verify_monster@@Base+0x1141>
  407a0c:	mov    rdi,QWORD PTR [rbp-0x18]
  407a10:	call   4091d0 <verify_monster@@Base+0x2680>
  407a15:	mov    QWORD PTR [rbp-0x20],rax
  407a19:	mov    rdi,QWORD PTR [rbp-0x20]
  407a1d:	call   407e10 <verify_monster@@Base+0x12c0>
  407a22:	lea    rsi,[rip+0x1b4ea]        # 422f13 <_IO_stdin_used@@Base+0xf13>
  407a29:	mov    rdi,rax
  407a2c:	call   4040d0 <strcmp@plt>
  407a31:	cmp    eax,0x0
  407a34:	je     407a54 <verify_monster@@Base+0xf04>
  407a3a:	lea    rdi,[rip+0x1b4dc]        # 422f1d <_IO_stdin_used@@Base+0xf1d>
  407a41:	mov    al,0x0
  407a43:	call   404070 <printf@plt>
  407a48:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a4f:	jmp    407c91 <verify_monster@@Base+0x1141>
  407a54:	mov    rdi,QWORD PTR [rbp-0x20]
  407a58:	call   408f90 <verify_monster@@Base+0x2440>
  407a5d:	movzx  ecx,al
  407a60:	cmp    ecx,0x0
  407a63:	je     407a83 <verify_monster@@Base+0xf33>
  407a69:	lea    rdi,[rip+0x1b4cb]        # 422f3b <_IO_stdin_used@@Base+0xf3b>
  407a70:	mov    al,0x0
  407a72:	call   404070 <printf@plt>
  407a77:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a7e:	jmp    407c91 <verify_monster@@Base+0x1141>
  407a83:	mov    rdi,QWORD PTR [rbp-0x18]
  407a87:	call   409300 <verify_monster@@Base+0x27b0>
  407a8c:	mov    BYTE PTR [rbp-0x100],al
  407a92:	mov    QWORD PTR [rbp-0xf8],rdx
  407a99:	mov    rcx,QWORD PTR [rbp-0x100]
  407aa0:	mov    QWORD PTR [rbp-0x48],rcx
  407aa4:	mov    rcx,QWORD PTR [rbp-0xf8]
  407aab:	mov    QWORD PTR [rbp-0x40],rcx
  407aaf:	movzx  esi,BYTE PTR [rbp-0x48]
  407ab3:	movzx  r8d,BYTE PTR [rbp-0x31]
  407ab8:	cmp    esi,r8d
  407abb:	je     407adb <verify_monster@@Base+0xf8b>
  407ac1:	lea    rdi,[rip+0x1b498]        # 422f60 <_IO_stdin_used@@Base+0xf60>
  407ac8:	mov    al,0x0
  407aca:	call   404070 <printf@plt>
  407acf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407ad6:	jmp    407c91 <verify_monster@@Base+0x1141>
  407adb:	mov    rax,QWORD PTR [rbp-0x40]
  407adf:	mov    rdi,QWORD PTR [rbp-0x18]
  407ae3:	mov    QWORD PTR [rbp-0x120],rax
  407aea:	call   4090a0 <verify_monster@@Base+0x2550>
  407aef:	mov    rcx,QWORD PTR [rbp-0x120]
  407af6:	cmp    rcx,rax
  407af9:	je     407b19 <verify_monster@@Base+0xfc9>
  407aff:	lea    rdi,[rip+0x1b48a]        # 422f90 <_IO_stdin_used@@Base+0xf90>
  407b06:	mov    al,0x0
  407b08:	call   404070 <printf@plt>
  407b0d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b14:	jmp    407c91 <verify_monster@@Base+0x1141>
  407b19:	mov    rdi,QWORD PTR [rbp-0x20]
  407b1d:	call   4088a0 <verify_monster@@Base+0x1d50>
  407b22:	mov    QWORD PTR [rbp-0x30],rax
  407b26:	mov    rdi,QWORD PTR [rbp-0x30]
  407b2a:	call   4089d0 <verify_monster@@Base+0x1e80>
  407b2f:	mov    QWORD PTR [rbp-0xf0],rax
  407b36:	mov    rdi,QWORD PTR [rbp-0x30]
  407b3a:	mov    rax,QWORD PTR [rbp-0xf0]
  407b41:	sub    rax,0x1
  407b47:	mov    rsi,rax
  407b4a:	call   408a20 <verify_monster@@Base+0x1ed0>
  407b4f:	mov    QWORD PTR [rbp-0x20],rax
  407b53:	mov    rdi,QWORD PTR [rbp-0x20]
  407b57:	call   408f90 <verify_monster@@Base+0x2440>
  407b5c:	movzx  ecx,al
  407b5f:	cmp    ecx,0x1
  407b62:	je     407b82 <verify_monster@@Base+0x1032>
  407b68:	lea    rdi,[rip+0x1b442]        # 422fb1 <_IO_stdin_used@@Base+0xfb1>
  407b6f:	mov    al,0x0
  407b71:	call   404070 <printf@plt>
  407b76:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b7d:	jmp    407c91 <verify_monster@@Base+0x1141>
  407b82:	mov    rdi,QWORD PTR [rbp-0x20]
  407b86:	call   4090a0 <verify_monster@@Base+0x2550>
  407b8b:	mov    QWORD PTR [rbp-0x20],rax
  407b8f:	mov    rdi,QWORD PTR [rbp-0x20]
  407b93:	call   407e10 <verify_monster@@Base+0x12c0>
  407b98:	lea    rsi,[rip+0x1b0e6]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  407b9f:	mov    rdi,rax
  407ba2:	call   4040d0 <strcmp@plt>
  407ba7:	cmp    eax,0x0
  407baa:	je     407bca <verify_monster@@Base+0x107a>
  407bb0:	lea    rdi,[rip+0x1b43d]        # 422ff4 <_IO_stdin_used@@Base+0xff4>
  407bb7:	mov    al,0x0
  407bb9:	call   404070 <printf@plt>
  407bbe:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407bc5:	jmp    407c91 <verify_monster@@Base+0x1141>
  407bca:	mov    rdi,QWORD PTR [rbp-0x18]
  407bce:	call   409360 <verify_monster@@Base+0x2810>
  407bd3:	cmp    al,0x0
  407bd5:	je     407bf5 <verify_monster@@Base+0x10a5>
  407bdb:	lea    rdi,[rip+0x1b44c]        # 42302e <_IO_stdin_used@@Base+0x102e>
  407be2:	mov    al,0x0
  407be4:	call   404070 <printf@plt>
  407be9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407bf0:	jmp    407c91 <verify_monster@@Base+0x1141>
  407bf5:	mov    rdi,QWORD PTR [rbp-0x18]
  407bf9:	call   409480 <verify_monster@@Base+0x2930>
  407bfe:	cmp    eax,0x0
  407c01:	jne    407c21 <verify_monster@@Base+0x10d1>
  407c07:	lea    rdi,[rip+0x1b435]        # 423043 <_IO_stdin_used@@Base+0x1043>
  407c0e:	mov    al,0x0
  407c10:	call   404070 <printf@plt>
  407c15:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c1c:	jmp    407c91 <verify_monster@@Base+0x1141>
  407c21:	mov    rdi,QWORD PTR [rbp-0x18]
  407c25:	call   409570 <verify_monster@@Base+0x2a20>
  407c2a:	mov    QWORD PTR [rbp-0xc8],rax
  407c31:	mov    rdi,QWORD PTR [rbp-0xc8]
  407c38:	call   4096a0 <verify_monster@@Base+0x2b50>
  407c3d:	cmp    eax,0x0
  407c40:	jne    407c70 <verify_monster@@Base+0x1120>
  407c46:	mov    rdi,QWORD PTR [rbp-0xc8]
  407c4d:	call   409790 <verify_monster@@Base+0x2c40>
  407c52:	cmp    eax,0x0
  407c55:	jne    407c70 <verify_monster@@Base+0x1120>
  407c5b:	mov    rdi,QWORD PTR [rbp-0xc8]
  407c62:	call   409880 <verify_monster@@Base+0x2d30>
  407c67:	cmp    eax,0x0
  407c6a:	je     407c8a <verify_monster@@Base+0x113a>
  407c70:	lea    rdi,[rip+0x1b3eb]        # 423062 <_IO_stdin_used@@Base+0x1062>
  407c77:	mov    al,0x0
  407c79:	call   404070 <printf@plt>
  407c7e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c85:	jmp    407c91 <verify_monster@@Base+0x1141>
  407c8a:	mov    DWORD PTR [rbp-0x4],0x0
  407c91:	mov    eax,DWORD PTR [rbp-0x4]
  407c94:	add    rsp,0x120
  407c9b:	pop    rbp
  407c9c:	ret    
  407c9d:	nop    DWORD PTR [rax]
  407ca0:	push   rbp
  407ca1:	mov    rbp,rsp
  407ca4:	sub    rsp,0x10
  407ca8:	mov    QWORD PTR [rbp-0x8],rdi
  407cac:	cmp    QWORD PTR [rbp-0x8],0x0
  407cb1:	je     407cd3 <verify_monster@@Base+0x1183>
  407cb7:	mov    rax,QWORD PTR [rbp-0x8]
  407cbb:	add    rax,0x8
  407cc1:	mov    rdi,rax
  407cc4:	call   415130 <main@@Base+0x1400>
  407cc9:	vmovss DWORD PTR [rbp-0xc],xmm0
  407cce:	jmp    407ce1 <verify_monster@@Base+0x1191>
  407cd3:	vxorps xmm0,xmm0,xmm0
  407cd7:	vmovss DWORD PTR [rbp-0xc],xmm0
  407cdc:	jmp    407ce1 <verify_monster@@Base+0x1191>
  407ce1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  407ce6:	add    rsp,0x10
  407cea:	pop    rbp
  407ceb:	ret    
  407cec:	nop    DWORD PTR [rax+0x0]
  407cf0:	push   rbp
  407cf1:	mov    rbp,rsp
  407cf4:	sub    rsp,0x10
  407cf8:	mov    QWORD PTR [rbp-0x8],rdi
  407cfc:	mov    rax,QWORD PTR [rbp-0x8]
  407d00:	mov    QWORD PTR [rbp-0x10],rax
  407d04:	call   416430 <main@@Base+0x2700>
  407d09:	xor    esi,esi
  407d0b:	mov    rdi,QWORD PTR [rbp-0x10]
  407d0f:	mov    rdx,rax
  407d12:	call   4040a0 <memset@plt>
  407d17:	mov    rax,QWORD PTR [rbp-0x10]
  407d1b:	add    rsp,0x10
  407d1f:	pop    rbp
  407d20:	ret    
  407d21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d30:	push   rbp
  407d31:	mov    rbp,rsp
  407d34:	sub    rsp,0x40
  407d38:	mov    QWORD PTR [rbp-0x8],rdi
  407d3c:	mov    QWORD PTR [rbp-0x10],rsi
  407d40:	mov    rdi,QWORD PTR [rbp-0x8]
  407d44:	mov    rsi,QWORD PTR [rbp-0x10]
  407d48:	call   416440 <main@@Base+0x2710>
  407d4d:	mov    rcx,QWORD PTR [rbp-0x8]
  407d51:	add    rcx,0x4
  407d58:	mov    rdx,QWORD PTR [rbp-0x10]
  407d5c:	add    rdx,0x4
  407d63:	mov    rdi,rcx
  407d66:	mov    rsi,rdx
  407d69:	mov    QWORD PTR [rbp-0x18],rax
  407d6d:	call   416440 <main@@Base+0x2710>
  407d72:	mov    rcx,QWORD PTR [rbp-0x8]
  407d76:	add    rcx,0x8
  407d7d:	mov    rdx,QWORD PTR [rbp-0x10]
  407d81:	add    rdx,0x8
  407d88:	mov    rdi,rcx
  407d8b:	mov    rsi,rdx
  407d8e:	mov    QWORD PTR [rbp-0x20],rax
  407d92:	call   416440 <main@@Base+0x2710>
  407d97:	mov    rcx,QWORD PTR [rbp-0x8]
  407d9b:	add    rcx,0x10
  407da2:	mov    rdx,QWORD PTR [rbp-0x10]
  407da6:	add    rdx,0x10
  407dad:	mov    rdi,rcx
  407db0:	mov    rsi,rdx
  407db3:	mov    QWORD PTR [rbp-0x28],rax
  407db7:	call   416470 <main@@Base+0x2740>
  407dbc:	mov    rcx,QWORD PTR [rbp-0x10]
  407dc0:	mov    r8b,BYTE PTR [rcx+0x18]
  407dc4:	mov    rcx,QWORD PTR [rbp-0x8]
  407dc8:	mov    BYTE PTR [rcx+0x18],r8b
  407dcc:	mov    rcx,QWORD PTR [rbp-0x8]
  407dd0:	add    rcx,0x1a
  407dd7:	mov    rdx,QWORD PTR [rbp-0x10]
  407ddb:	add    rdx,0x1a
  407de2:	mov    rdi,rcx
  407de5:	mov    rsi,rdx
  407de8:	mov    QWORD PTR [rbp-0x30],rax
  407dec:	call   4164a0 <main@@Base+0x2770>
  407df1:	mov    rcx,QWORD PTR [rbp-0x8]
  407df5:	mov    QWORD PTR [rbp-0x38],rax
  407df9:	mov    rax,rcx
  407dfc:	add    rsp,0x40
  407e00:	pop    rbp
  407e01:	ret    
  407e02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e0c:	nop    DWORD PTR [rax+0x0]
  407e10:	push   rbp
  407e11:	mov    rbp,rsp
  407e14:	sub    rsp,0x30
  407e18:	mov    QWORD PTR [rbp-0x8],rdi
  407e1c:	mov    WORD PTR [rbp-0x12],0x0
  407e22:	cmp    QWORD PTR [rbp-0x8],0x0
  407e27:	je     407e41 <verify_monster@@Base+0x12f1>
  407e2d:	mov    al,0x1
  407e2f:	test   al,0x1
  407e31:	jne    407e3c <verify_monster@@Base+0x12ec>
  407e37:	jmp    407e41 <verify_monster@@Base+0x12f1>
  407e3c:	jmp    407e60 <verify_monster@@Base+0x1310>
  407e41:	lea    rdi,[rip+0x1cc50]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  407e48:	lea    rsi,[rip+0x1cc6f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  407e4f:	mov    edx,0x2bb
  407e54:	lea    rcx,[rip+0x1d51e]        # 425379 <_IO_stdin_used@@Base+0x3379>
  407e5b:	call   404090 <__assert_fail@plt>
  407e60:	mov    WORD PTR [rbp-0x14],0x3
  407e66:	mov    rax,QWORD PTR [rbp-0x8]
  407e6a:	mov    rcx,QWORD PTR [rbp-0x8]
  407e6e:	mov    rdi,rcx
  407e71:	mov    QWORD PTR [rbp-0x28],rax
  407e75:	call   414210 <main@@Base+0x4e0>
  407e7a:	xor    edx,edx
  407e7c:	mov    ecx,edx
  407e7e:	movsxd rsi,eax
  407e81:	sub    rcx,rsi
  407e84:	mov    rsi,QWORD PTR [rbp-0x28]
  407e88:	add    rsi,rcx
  407e8b:	mov    QWORD PTR [rbp-0x20],rsi
  407e8f:	mov    rcx,QWORD PTR [rbp-0x20]
  407e93:	mov    rdi,rcx
  407e96:	call   414230 <main@@Base+0x500>
  407e9b:	movzx  edx,ax
  407e9e:	mov    ecx,edx
  407ea0:	movzx  edx,WORD PTR [rbp-0x14]
  407ea4:	add    edx,0x3
  407ea7:	movsxd rsi,edx
  407eaa:	shl    rsi,0x1
  407eae:	cmp    rcx,rsi
  407eb1:	jb     407edb <verify_monster@@Base+0x138b>
  407eb7:	mov    rax,QWORD PTR [rbp-0x20]
  407ebb:	movzx  ecx,WORD PTR [rbp-0x14]
  407ebf:	movsxd rdx,ecx
  407ec2:	shl    rdx,0x1
  407ec6:	add    rax,rdx
  407ec9:	add    rax,0x4
  407ecf:	mov    rdi,rax
  407ed2:	call   414230 <main@@Base+0x500>
  407ed7:	mov    WORD PTR [rbp-0x12],ax
  407edb:	cmp    WORD PTR [rbp-0x12],0x0
  407ee0:	je     407f26 <verify_monster@@Base+0x13d6>
  407ee6:	mov    rax,QWORD PTR [rbp-0x8]
  407eea:	movzx  ecx,WORD PTR [rbp-0x12]
  407eee:	movsxd rdx,ecx
  407ef1:	add    rax,rdx
  407ef4:	mov    QWORD PTR [rbp-0x10],rax
  407ef8:	mov    rax,QWORD PTR [rbp-0x10]
  407efc:	add    rax,0x4
  407f02:	mov    rdx,QWORD PTR [rbp-0x10]
  407f06:	mov    rdi,rdx
  407f09:	mov    QWORD PTR [rbp-0x30],rax
  407f0d:	call   4141e0 <main@@Base+0x4b0>
  407f12:	mov    eax,eax
  407f14:	mov    edx,eax
  407f16:	mov    rsi,QWORD PTR [rbp-0x30]
  407f1a:	add    rsi,rdx
  407f1d:	mov    rax,rsi
  407f20:	add    rsp,0x30
  407f24:	pop    rbp
  407f25:	ret    
  407f26:	lea    rdi,[rip+0x1d49d]        # 4253ca <_IO_stdin_used@@Base+0x33ca>
  407f2d:	lea    rsi,[rip+0x1cb8a]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  407f34:	mov    edx,0x2bb
  407f39:	lea    rcx,[rip+0x1d439]        # 425379 <_IO_stdin_used@@Base+0x3379>
  407f40:	call   404090 <__assert_fail@plt>
  407f45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f4f:	nop
  407f50:	push   rbp
  407f51:	mov    rbp,rsp
  407f54:	sub    rsp,0x10
  407f58:	mov    QWORD PTR [rbp-0x8],rdi
  407f5c:	cmp    QWORD PTR [rbp-0x8],0x0
  407f61:	je     407f86 <verify_monster@@Base+0x1436>
  407f67:	mov    rax,QWORD PTR [rbp-0x8]
  407f6b:	add    rax,0xfffffffffffffffc
  407f71:	mov    rdi,rax
  407f74:	call   4141e0 <main@@Base+0x4b0>
  407f79:	mov    eax,eax
  407f7b:	mov    ecx,eax
  407f7d:	mov    QWORD PTR [rbp-0x10],rcx
  407f81:	jmp    407f93 <verify_monster@@Base+0x1443>
  407f86:	xor    eax,eax
  407f88:	mov    ecx,eax
  407f8a:	mov    QWORD PTR [rbp-0x10],rcx
  407f8e:	jmp    407f93 <verify_monster@@Base+0x1443>
  407f93:	mov    rax,QWORD PTR [rbp-0x10]
  407f97:	add    rsp,0x10
  407f9b:	pop    rbp
  407f9c:	ret    
  407f9d:	nop    DWORD PTR [rax]
  407fa0:	push   rbp
  407fa1:	mov    rbp,rsp
  407fa4:	sub    rsp,0x30
  407fa8:	mov    QWORD PTR [rbp-0x8],rdi
  407fac:	mov    WORD PTR [rbp-0xa],0x0
  407fb2:	cmp    QWORD PTR [rbp-0x8],0x0
  407fb7:	je     407fd1 <verify_monster@@Base+0x1481>
  407fbd:	mov    al,0x1
  407fbf:	test   al,0x1
  407fc1:	jne    407fcc <verify_monster@@Base+0x147c>
  407fc7:	jmp    407fd1 <verify_monster@@Base+0x1481>
  407fcc:	jmp    407ff0 <verify_monster@@Base+0x14a0>
  407fd1:	lea    rdi,[rip+0x1cac0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  407fd8:	lea    rsi,[rip+0x1cadf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  407fdf:	mov    edx,0x2c1
  407fe4:	lea    rcx,[rip+0x1d400]        # 4253eb <_IO_stdin_used@@Base+0x33eb>
  407feb:	call   404090 <__assert_fail@plt>
  407ff0:	mov    WORD PTR [rbp-0xc],0x6
  407ff6:	mov    rax,QWORD PTR [rbp-0x8]
  407ffa:	mov    rcx,QWORD PTR [rbp-0x8]
  407ffe:	mov    rdi,rcx
  408001:	mov    QWORD PTR [rbp-0x20],rax
  408005:	call   414210 <main@@Base+0x4e0>
  40800a:	xor    edx,edx
  40800c:	mov    ecx,edx
  40800e:	movsxd rsi,eax
  408011:	sub    rcx,rsi
  408014:	mov    rsi,QWORD PTR [rbp-0x20]
  408018:	add    rsi,rcx
  40801b:	mov    QWORD PTR [rbp-0x18],rsi
  40801f:	mov    rcx,QWORD PTR [rbp-0x18]
  408023:	mov    rdi,rcx
  408026:	call   414230 <main@@Base+0x500>
  40802b:	movzx  edx,ax
  40802e:	mov    ecx,edx
  408030:	movzx  edx,WORD PTR [rbp-0xc]
  408034:	add    edx,0x3
  408037:	movsxd rsi,edx
  40803a:	shl    rsi,0x1
  40803e:	cmp    rcx,rsi
  408041:	jb     40806b <verify_monster@@Base+0x151b>
  408047:	mov    rax,QWORD PTR [rbp-0x18]
  40804b:	movzx  ecx,WORD PTR [rbp-0xc]
  40804f:	movsxd rdx,ecx
  408052:	shl    rdx,0x1
  408056:	add    rax,rdx
  408059:	add    rax,0x4
  40805f:	mov    rdi,rax
  408062:	call   414230 <main@@Base+0x500>
  408067:	mov    WORD PTR [rbp-0xa],ax
  40806b:	movzx  eax,WORD PTR [rbp-0xa]
  40806f:	cmp    eax,0x0
  408072:	je     408099 <verify_monster@@Base+0x1549>
  408078:	mov    rax,QWORD PTR [rbp-0x8]
  40807c:	movzx  ecx,WORD PTR [rbp-0xa]
  408080:	movsxd rdx,ecx
  408083:	add    rax,rdx
  408086:	mov    rdi,rax
  408089:	call   416510 <main@@Base+0x27e0>
  40808e:	movsx  ecx,al
  408091:	mov    DWORD PTR [rbp-0x24],ecx
  408094:	jmp    4080a6 <verify_monster@@Base+0x1556>
  408099:	mov    eax,0x8
  40809e:	mov    DWORD PTR [rbp-0x24],eax
  4080a1:	jmp    4080a6 <verify_monster@@Base+0x1556>
  4080a6:	mov    eax,DWORD PTR [rbp-0x24]
  4080a9:	movsx  eax,al
  4080ac:	add    rsp,0x30
  4080b0:	pop    rbp
  4080b1:	ret    
  4080b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080bc:	nop    DWORD PTR [rax+0x0]
  4080c0:	push   rbp
  4080c1:	mov    rbp,rsp
  4080c4:	mov    BYTE PTR [rbp-0x9],dil
  4080c8:	movsx  eax,BYTE PTR [rbp-0x9]
  4080cc:	mov    ecx,eax
  4080ce:	sub    ecx,0x1
  4080d1:	mov    DWORD PTR [rbp-0x10],eax
  4080d4:	je     408101 <verify_monster@@Base+0x15b1>
  4080da:	jmp    4080df <verify_monster@@Base+0x158f>
  4080df:	mov    eax,DWORD PTR [rbp-0x10]
  4080e2:	sub    eax,0x2
  4080e5:	je     408111 <verify_monster@@Base+0x15c1>
  4080eb:	jmp    4080f0 <verify_monster@@Base+0x15a0>
  4080f0:	mov    eax,DWORD PTR [rbp-0x10]
  4080f3:	sub    eax,0x8
  4080f6:	je     408121 <verify_monster@@Base+0x15d1>
  4080fc:	jmp    408131 <verify_monster@@Base+0x15e1>
  408101:	lea    rax,[rip+0x1d33c]        # 425444 <_IO_stdin_used@@Base+0x3444>
  408108:	mov    QWORD PTR [rbp-0x8],rax
  40810c:	jmp    40813c <verify_monster@@Base+0x15ec>
  408111:	lea    rax,[rip+0x1a88b]        # 4229a3 <_IO_stdin_used@@Base+0x9a3>
  408118:	mov    QWORD PTR [rbp-0x8],rax
  40811c:	jmp    40813c <verify_monster@@Base+0x15ec>
  408121:	lea    rax,[rip+0x1d320]        # 425448 <_IO_stdin_used@@Base+0x3448>
  408128:	mov    QWORD PTR [rbp-0x8],rax
  40812c:	jmp    40813c <verify_monster@@Base+0x15ec>
  408131:	lea    rax,[rip+0x1c26b]        # 4243a3 <_IO_stdin_used@@Base+0x23a3>
  408138:	mov    QWORD PTR [rbp-0x8],rax
  40813c:	mov    rax,QWORD PTR [rbp-0x8]
  408140:	pop    rbp
  408141:	ret    
  408142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40814c:	nop    DWORD PTR [rax+0x0]
  408150:	push   rbp
  408151:	mov    rbp,rsp
  408154:	mov    BYTE PTR [rbp-0x5],dil
  408158:	movsx  eax,BYTE PTR [rbp-0x5]
  40815c:	mov    ecx,eax
  40815e:	sub    ecx,0x1
  408161:	mov    DWORD PTR [rbp-0xc],eax
  408164:	je     408191 <verify_monster@@Base+0x1641>
  40816a:	jmp    40816f <verify_monster@@Base+0x161f>
  40816f:	mov    eax,DWORD PTR [rbp-0xc]
  408172:	sub    eax,0x2
  408175:	je     40819d <verify_monster@@Base+0x164d>
  40817b:	jmp    408180 <verify_monster@@Base+0x1630>
  408180:	mov    eax,DWORD PTR [rbp-0xc]
  408183:	sub    eax,0x8
  408186:	je     4081a9 <verify_monster@@Base+0x1659>
  40818c:	jmp    4081b5 <verify_monster@@Base+0x1665>
  408191:	mov    DWORD PTR [rbp-0x4],0x1
  408198:	jmp    4081bc <verify_monster@@Base+0x166c>
  40819d:	mov    DWORD PTR [rbp-0x4],0x1
  4081a4:	jmp    4081bc <verify_monster@@Base+0x166c>
  4081a9:	mov    DWORD PTR [rbp-0x4],0x1
  4081b0:	jmp    4081bc <verify_monster@@Base+0x166c>
  4081b5:	mov    DWORD PTR [rbp-0x4],0x0
  4081bc:	mov    eax,DWORD PTR [rbp-0x4]
  4081bf:	pop    rbp
  4081c0:	ret    
  4081c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4081d0:	push   rbp
  4081d1:	mov    rbp,rsp
  4081d4:	mov    BYTE PTR [rbp-0x5],dil
  4081d8:	movzx  eax,BYTE PTR [rbp-0x5]
  4081dc:	mov    ecx,eax
  4081de:	mov    rdx,rcx
  4081e1:	sub    rdx,0x4
  4081e5:	mov    QWORD PTR [rbp-0x10],rcx
  4081e9:	ja     40823f <verify_monster@@Base+0x16ef>
  4081ef:	lea    rax,[rip+0x19e5a]        # 422050 <_IO_stdin_used@@Base+0x50>
  4081f6:	mov    rcx,QWORD PTR [rbp-0x10]
  4081fa:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4081fe:	add    rdx,rax
  408201:	jmp    rdx
  408203:	mov    DWORD PTR [rbp-0x4],0x1
  40820a:	jmp    408246 <verify_monster@@Base+0x16f6>
  40820f:	mov    DWORD PTR [rbp-0x4],0x1
  408216:	jmp    408246 <verify_monster@@Base+0x16f6>
  40821b:	mov    DWORD PTR [rbp-0x4],0x1
  408222:	jmp    408246 <verify_monster@@Base+0x16f6>
  408227:	mov    DWORD PTR [rbp-0x4],0x1
  40822e:	jmp    408246 <verify_monster@@Base+0x16f6>
  408233:	mov    DWORD PTR [rbp-0x4],0x1
  40823a:	jmp    408246 <verify_monster@@Base+0x16f6>
  40823f:	mov    DWORD PTR [rbp-0x4],0x0
  408246:	mov    eax,DWORD PTR [rbp-0x4]
  408249:	pop    rbp
  40824a:	ret    
  40824b:	nop    DWORD PTR [rax+rax*1+0x0]
  408250:	push   rbp
  408251:	mov    rbp,rsp
  408254:	sub    rsp,0x40
  408258:	mov    QWORD PTR [rbp-0x10],rdi
  40825c:	mov    WORD PTR [rbp-0x1a],0x0
  408262:	cmp    QWORD PTR [rbp-0x10],0x0
  408267:	je     408281 <verify_monster@@Base+0x1731>
  40826d:	mov    al,0x1
  40826f:	test   al,0x1
  408271:	jne    40827c <verify_monster@@Base+0x172c>
  408277:	jmp    408281 <verify_monster@@Base+0x1731>
  40827c:	jmp    4082a0 <verify_monster@@Base+0x1750>
  408281:	lea    rdi,[rip+0x1c810]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408288:	lea    rsi,[rip+0x1c82f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40828f:	mov    edx,0x2c2
  408294:	lea    rcx,[rip+0x1d1b2]        # 42544d <_IO_stdin_used@@Base+0x344d>
  40829b:	call   404090 <__assert_fail@plt>
  4082a0:	mov    WORD PTR [rbp-0x1c],0x5
  4082a6:	mov    rax,QWORD PTR [rbp-0x10]
  4082aa:	mov    rcx,QWORD PTR [rbp-0x10]
  4082ae:	mov    rdi,rcx
  4082b1:	mov    QWORD PTR [rbp-0x30],rax
  4082b5:	call   414210 <main@@Base+0x4e0>
  4082ba:	xor    edx,edx
  4082bc:	mov    ecx,edx
  4082be:	movsxd rsi,eax
  4082c1:	sub    rcx,rsi
  4082c4:	mov    rsi,QWORD PTR [rbp-0x30]
  4082c8:	add    rsi,rcx
  4082cb:	mov    QWORD PTR [rbp-0x28],rsi
  4082cf:	mov    rcx,QWORD PTR [rbp-0x28]
  4082d3:	mov    rdi,rcx
  4082d6:	call   414230 <main@@Base+0x500>
  4082db:	movzx  edx,ax
  4082de:	mov    ecx,edx
  4082e0:	movzx  edx,WORD PTR [rbp-0x1c]
  4082e4:	add    edx,0x3
  4082e7:	movsxd rsi,edx
  4082ea:	shl    rsi,0x1
  4082ee:	cmp    rcx,rsi
  4082f1:	jb     40831b <verify_monster@@Base+0x17cb>
  4082f7:	mov    rax,QWORD PTR [rbp-0x28]
  4082fb:	movzx  ecx,WORD PTR [rbp-0x1c]
  4082ff:	movsxd rdx,ecx
  408302:	shl    rdx,0x1
  408306:	add    rax,rdx
  408309:	add    rax,0x4
  40830f:	mov    rdi,rax
  408312:	call   414230 <main@@Base+0x500>
  408317:	mov    WORD PTR [rbp-0x1a],ax
  40831b:	cmp    WORD PTR [rbp-0x1a],0x0
  408320:	je     408366 <verify_monster@@Base+0x1816>
  408326:	mov    rax,QWORD PTR [rbp-0x10]
  40832a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40832e:	movsxd rdx,ecx
  408331:	add    rax,rdx
  408334:	mov    QWORD PTR [rbp-0x18],rax
  408338:	mov    rax,QWORD PTR [rbp-0x18]
  40833c:	add    rax,0x4
  408342:	mov    rdx,QWORD PTR [rbp-0x18]
  408346:	mov    rdi,rdx
  408349:	mov    QWORD PTR [rbp-0x38],rax
  40834d:	call   4141e0 <main@@Base+0x4b0>
  408352:	mov    eax,eax
  408354:	mov    edx,eax
  408356:	mov    rsi,QWORD PTR [rbp-0x38]
  40835a:	add    rsi,rdx
  40835d:	mov    QWORD PTR [rbp-0x8],rsi
  408361:	jmp    40836e <verify_monster@@Base+0x181e>
  408366:	mov    QWORD PTR [rbp-0x8],0x0
  40836e:	mov    rax,QWORD PTR [rbp-0x8]
  408372:	add    rsp,0x40
  408376:	pop    rbp
  408377:	ret    
  408378:	nop    DWORD PTR [rax+rax*1+0x0]
  408380:	push   rbp
  408381:	mov    rbp,rsp
  408384:	sub    rsp,0x10
  408388:	mov    QWORD PTR [rbp-0x8],rdi
  40838c:	mov    rdi,QWORD PTR [rbp-0x8]
  408390:	call   416550 <main@@Base+0x2820>
  408395:	add    rsp,0x10
  408399:	pop    rbp
  40839a:	ret    
  40839b:	nop    DWORD PTR [rax+rax*1+0x0]
  4083a0:	push   rbp
  4083a1:	mov    rbp,rsp
  4083a4:	sub    rsp,0x10
  4083a8:	mov    QWORD PTR [rbp-0x8],rdi
  4083ac:	mov    QWORD PTR [rbp-0x10],rsi
  4083b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4083b4:	call   416550 <main@@Base+0x2820>
  4083b9:	cmp    rax,QWORD PTR [rbp-0x10]
  4083bd:	jbe    4083d7 <verify_monster@@Base+0x1887>
  4083c3:	mov    al,0x1
  4083c5:	test   al,0x1
  4083c7:	jne    4083d2 <verify_monster@@Base+0x1882>
  4083cd:	jmp    4083d7 <verify_monster@@Base+0x1887>
  4083d2:	jmp    4083f6 <verify_monster@@Base+0x18a6>
  4083d7:	lea    rdi,[rip+0x1d0db]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  4083de:	lea    rsi,[rip+0x1d10b]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  4083e5:	mov    edx,0x18b
  4083ea:	lea    rcx,[rip+0x1d181]        # 425572 <_IO_stdin_used@@Base+0x3572>
  4083f1:	call   404090 <__assert_fail@plt>
  4083f6:	mov    rax,QWORD PTR [rbp-0x8]
  4083fa:	add    rax,QWORD PTR [rbp-0x10]
  4083fe:	mov    rdi,rax
  408401:	call   415050 <main@@Base+0x1320>
  408406:	movzx  eax,al
  408409:	add    rsp,0x10
  40840d:	pop    rbp
  40840e:	ret    
  40840f:	nop
  408410:	push   rbp
  408411:	mov    rbp,rsp
  408414:	sub    rsp,0x30
  408418:	mov    QWORD PTR [rbp-0x8],rdi
  40841c:	mov    WORD PTR [rbp-0xa],0x0
  408422:	cmp    QWORD PTR [rbp-0x8],0x0
  408427:	je     408441 <verify_monster@@Base+0x18f1>
  40842d:	mov    al,0x1
  40842f:	test   al,0x1
  408431:	jne    40843c <verify_monster@@Base+0x18ec>
  408437:	jmp    408441 <verify_monster@@Base+0x18f1>
  40843c:	jmp    408460 <verify_monster@@Base+0x1910>
  408441:	lea    rdi,[rip+0x1c650]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408448:	lea    rsi,[rip+0x1c66f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40844f:	mov    edx,0x2ba
  408454:	lea    rcx,[rip+0x1d159]        # 4255b4 <_IO_stdin_used@@Base+0x35b4>
  40845b:	call   404090 <__assert_fail@plt>
  408460:	mov    WORD PTR [rbp-0xc],0x1
  408466:	mov    rax,QWORD PTR [rbp-0x8]
  40846a:	mov    rcx,QWORD PTR [rbp-0x8]
  40846e:	mov    rdi,rcx
  408471:	mov    QWORD PTR [rbp-0x20],rax
  408475:	call   414210 <main@@Base+0x4e0>
  40847a:	xor    edx,edx
  40847c:	mov    ecx,edx
  40847e:	movsxd rsi,eax
  408481:	sub    rcx,rsi
  408484:	mov    rsi,QWORD PTR [rbp-0x20]
  408488:	add    rsi,rcx
  40848b:	mov    QWORD PTR [rbp-0x18],rsi
  40848f:	mov    rcx,QWORD PTR [rbp-0x18]
  408493:	mov    rdi,rcx
  408496:	call   414230 <main@@Base+0x500>
  40849b:	movzx  edx,ax
  40849e:	mov    ecx,edx
  4084a0:	movzx  edx,WORD PTR [rbp-0xc]
  4084a4:	add    edx,0x3
  4084a7:	movsxd rsi,edx
  4084aa:	shl    rsi,0x1
  4084ae:	cmp    rcx,rsi
  4084b1:	jb     4084db <verify_monster@@Base+0x198b>
  4084b7:	mov    rax,QWORD PTR [rbp-0x18]
  4084bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4084bf:	movsxd rdx,ecx
  4084c2:	shl    rdx,0x1
  4084c6:	add    rax,rdx
  4084c9:	add    rax,0x4
  4084cf:	mov    rdi,rax
  4084d2:	call   414230 <main@@Base+0x500>
  4084d7:	mov    WORD PTR [rbp-0xa],ax
  4084db:	movzx  eax,WORD PTR [rbp-0xa]
  4084df:	cmp    eax,0x0
  4084e2:	je     408509 <verify_monster@@Base+0x19b9>
  4084e8:	mov    rax,QWORD PTR [rbp-0x8]
  4084ec:	movzx  ecx,WORD PTR [rbp-0xa]
  4084f0:	movsxd rdx,ecx
  4084f3:	add    rax,rdx
  4084f6:	mov    rdi,rax
  4084f9:	call   414260 <main@@Base+0x530>
  4084fe:	movsx  ecx,ax
  408501:	mov    DWORD PTR [rbp-0x24],ecx
  408504:	jmp    408516 <verify_monster@@Base+0x19c6>
  408509:	mov    eax,0x96
  40850e:	mov    DWORD PTR [rbp-0x24],eax
  408511:	jmp    408516 <verify_monster@@Base+0x19c6>
  408516:	mov    eax,DWORD PTR [rbp-0x24]
  408519:	cwde   
  40851a:	add    rsp,0x30
  40851e:	pop    rbp
  40851f:	ret    
  408520:	push   rbp
  408521:	mov    rbp,rsp
  408524:	sub    rsp,0x20
  408528:	mov    QWORD PTR [rbp-0x8],rdi
  40852c:	mov    WORD PTR [rbp-0xa],0x0
  408532:	cmp    QWORD PTR [rbp-0x8],0x0
  408537:	je     408551 <verify_monster@@Base+0x1a01>
  40853d:	mov    al,0x1
  40853f:	test   al,0x1
  408541:	jne    40854c <verify_monster@@Base+0x19fc>
  408547:	jmp    408551 <verify_monster@@Base+0x1a01>
  40854c:	jmp    408570 <verify_monster@@Base+0x1a20>
  408551:	lea    rdi,[rip+0x1c540]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408558:	lea    rsi,[rip+0x1c55f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40855f:	mov    edx,0x2ba
  408564:	lea    rcx,[rip+0x1d08d]        # 4255f8 <_IO_stdin_used@@Base+0x35f8>
  40856b:	call   404090 <__assert_fail@plt>
  408570:	mov    WORD PTR [rbp-0xc],0x1
  408576:	mov    rax,QWORD PTR [rbp-0x8]
  40857a:	mov    rcx,QWORD PTR [rbp-0x8]
  40857e:	mov    rdi,rcx
  408581:	mov    QWORD PTR [rbp-0x20],rax
  408585:	call   414210 <main@@Base+0x4e0>
  40858a:	xor    edx,edx
  40858c:	mov    ecx,edx
  40858e:	movsxd rsi,eax
  408591:	sub    rcx,rsi
  408594:	mov    rsi,QWORD PTR [rbp-0x20]
  408598:	add    rsi,rcx
  40859b:	mov    QWORD PTR [rbp-0x18],rsi
  40859f:	mov    rcx,QWORD PTR [rbp-0x18]
  4085a3:	mov    rdi,rcx
  4085a6:	call   414230 <main@@Base+0x500>
  4085ab:	movzx  edx,ax
  4085ae:	mov    ecx,edx
  4085b0:	movzx  edx,WORD PTR [rbp-0xc]
  4085b4:	add    edx,0x3
  4085b7:	movsxd rsi,edx
  4085ba:	shl    rsi,0x1
  4085be:	cmp    rcx,rsi
  4085c1:	jb     4085eb <verify_monster@@Base+0x1a9b>
  4085c7:	mov    rax,QWORD PTR [rbp-0x18]
  4085cb:	movzx  ecx,WORD PTR [rbp-0xc]
  4085cf:	movsxd rdx,ecx
  4085d2:	shl    rdx,0x1
  4085d6:	add    rax,rdx
  4085d9:	add    rax,0x4
  4085df:	mov    rdi,rax
  4085e2:	call   414230 <main@@Base+0x500>
  4085e7:	mov    WORD PTR [rbp-0xa],ax
  4085eb:	movzx  eax,WORD PTR [rbp-0xa]
  4085ef:	cmp    eax,0x0
  4085f2:	setne  cl
  4085f5:	and    cl,0x1
  4085f8:	movzx  eax,cl
  4085fb:	add    rsp,0x20
  4085ff:	pop    rbp
  408600:	ret    
  408601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40860b:	nop    DWORD PTR [rax+rax*1+0x0]
  408610:	push   rbp
  408611:	mov    rbp,rsp
  408614:	sub    rsp,0x40
  408618:	mov    QWORD PTR [rbp-0x10],rdi
  40861c:	mov    WORD PTR [rbp-0x1a],0x0
  408622:	cmp    QWORD PTR [rbp-0x10],0x0
  408627:	je     408641 <verify_monster@@Base+0x1af1>
  40862d:	mov    al,0x1
  40862f:	test   al,0x1
  408631:	jne    40863c <verify_monster@@Base+0x1aec>
  408637:	jmp    408641 <verify_monster@@Base+0x1af1>
  40863c:	jmp    408660 <verify_monster@@Base+0x1b10>
  408641:	lea    rdi,[rip+0x1c450]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408648:	lea    rsi,[rip+0x1c46f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40864f:	mov    edx,0x2ce
  408654:	lea    rcx,[rip+0x1cfe8]        # 425643 <_IO_stdin_used@@Base+0x3643>
  40865b:	call   404090 <__assert_fail@plt>
  408660:	mov    WORD PTR [rbp-0x1c],0x9
  408666:	mov    rax,QWORD PTR [rbp-0x10]
  40866a:	mov    rcx,QWORD PTR [rbp-0x10]
  40866e:	mov    rdi,rcx
  408671:	mov    QWORD PTR [rbp-0x30],rax
  408675:	call   414210 <main@@Base+0x4e0>
  40867a:	xor    edx,edx
  40867c:	mov    ecx,edx
  40867e:	movsxd rsi,eax
  408681:	sub    rcx,rsi
  408684:	mov    rsi,QWORD PTR [rbp-0x30]
  408688:	add    rsi,rcx
  40868b:	mov    QWORD PTR [rbp-0x28],rsi
  40868f:	mov    rcx,QWORD PTR [rbp-0x28]
  408693:	mov    rdi,rcx
  408696:	call   414230 <main@@Base+0x500>
  40869b:	movzx  edx,ax
  40869e:	mov    ecx,edx
  4086a0:	movzx  edx,WORD PTR [rbp-0x1c]
  4086a4:	add    edx,0x3
  4086a7:	movsxd rsi,edx
  4086aa:	shl    rsi,0x1
  4086ae:	cmp    rcx,rsi
  4086b1:	jb     4086db <verify_monster@@Base+0x1b8b>
  4086b7:	mov    rax,QWORD PTR [rbp-0x28]
  4086bb:	movzx  ecx,WORD PTR [rbp-0x1c]
  4086bf:	movsxd rdx,ecx
  4086c2:	shl    rdx,0x1
  4086c6:	add    rax,rdx
  4086c9:	add    rax,0x4
  4086cf:	mov    rdi,rax
  4086d2:	call   414230 <main@@Base+0x500>
  4086d7:	mov    WORD PTR [rbp-0x1a],ax
  4086db:	cmp    WORD PTR [rbp-0x1a],0x0
  4086e0:	je     408726 <verify_monster@@Base+0x1bd6>
  4086e6:	mov    rax,QWORD PTR [rbp-0x10]
  4086ea:	movzx  ecx,WORD PTR [rbp-0x1a]
  4086ee:	movsxd rdx,ecx
  4086f1:	add    rax,rdx
  4086f4:	mov    QWORD PTR [rbp-0x18],rax
  4086f8:	mov    rax,QWORD PTR [rbp-0x18]
  4086fc:	add    rax,0x4
  408702:	mov    rdx,QWORD PTR [rbp-0x18]
  408706:	mov    rdi,rdx
  408709:	mov    QWORD PTR [rbp-0x38],rax
  40870d:	call   4141e0 <main@@Base+0x4b0>
  408712:	mov    eax,eax
  408714:	mov    edx,eax
  408716:	mov    rsi,QWORD PTR [rbp-0x38]
  40871a:	add    rsi,rdx
  40871d:	mov    QWORD PTR [rbp-0x8],rsi
  408721:	jmp    40872e <verify_monster@@Base+0x1bde>
  408726:	mov    QWORD PTR [rbp-0x8],0x0
  40872e:	mov    rax,QWORD PTR [rbp-0x8]
  408732:	add    rsp,0x40
  408736:	pop    rbp
  408737:	ret    
  408738:	nop    DWORD PTR [rax+rax*1+0x0]
  408740:	push   rbp
  408741:	mov    rbp,rsp
  408744:	sub    rsp,0x10
  408748:	mov    QWORD PTR [rbp-0x8],rdi
  40874c:	cmp    QWORD PTR [rbp-0x8],0x0
  408751:	je     408776 <verify_monster@@Base+0x1c26>
  408757:	mov    rax,QWORD PTR [rbp-0x8]
  40875b:	add    rax,0xfffffffffffffffc
  408761:	mov    rdi,rax
  408764:	call   4141e0 <main@@Base+0x4b0>
  408769:	mov    eax,eax
  40876b:	mov    ecx,eax
  40876d:	mov    QWORD PTR [rbp-0x10],rcx
  408771:	jmp    408783 <verify_monster@@Base+0x1c33>
  408776:	xor    eax,eax
  408778:	mov    ecx,eax
  40877a:	mov    QWORD PTR [rbp-0x10],rcx
  40877e:	jmp    408783 <verify_monster@@Base+0x1c33>
  408783:	mov    rax,QWORD PTR [rbp-0x10]
  408787:	add    rsp,0x10
  40878b:	pop    rbp
  40878c:	ret    
  40878d:	nop    DWORD PTR [rax]
  408790:	push   rbp
  408791:	mov    rbp,rsp
  408794:	sub    rsp,0x10
  408798:	mov    QWORD PTR [rbp-0x8],rdi
  40879c:	mov    QWORD PTR [rbp-0x10],rsi
  4087a0:	mov    rax,QWORD PTR [rbp-0x8]
  4087a4:	mov    rdi,rax
  4087a7:	call   416550 <main@@Base+0x2820>
  4087ac:	cmp    rax,QWORD PTR [rbp-0x10]
  4087b0:	jbe    4087ca <verify_monster@@Base+0x1c7a>
  4087b6:	mov    al,0x1
  4087b8:	test   al,0x1
  4087ba:	jne    4087c5 <verify_monster@@Base+0x1c75>
  4087c0:	jmp    4087ca <verify_monster@@Base+0x1c7a>
  4087c5:	jmp    4087e9 <verify_monster@@Base+0x1c99>
  4087ca:	lea    rdi,[rip+0x1cce8]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  4087d1:	lea    rsi,[rip+0x1c2e6]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4087d8:	mov    edx,0x17c
  4087dd:	lea    rcx,[rip+0x1ceb6]        # 42569a <_IO_stdin_used@@Base+0x369a>
  4087e4:	call   404090 <__assert_fail@plt>
  4087e9:	mov    rax,QWORD PTR [rbp-0x8]
  4087ed:	mov    rcx,QWORD PTR [rbp-0x10]
  4087f1:	shl    rcx,0x2
  4087f5:	add    rax,rcx
  4087f8:	add    rsp,0x10
  4087fc:	pop    rbp
  4087fd:	ret    
  4087fe:	xchg   ax,ax
  408800:	push   rbp
  408801:	mov    rbp,rsp
  408804:	sub    rsp,0x10
  408808:	mov    QWORD PTR [rbp-0x8],rdi
  40880c:	cmp    QWORD PTR [rbp-0x8],0x0
  408811:	je     40882e <verify_monster@@Base+0x1cde>
  408817:	mov    rax,QWORD PTR [rbp-0x8]
  40881b:	mov    rdi,rax
  40881e:	call   414260 <main@@Base+0x530>
  408823:	movsx  ecx,ax
  408826:	mov    DWORD PTR [rbp-0xc],ecx
  408829:	jmp    408838 <verify_monster@@Base+0x1ce8>
  40882e:	xor    eax,eax
  408830:	mov    DWORD PTR [rbp-0xc],eax
  408833:	jmp    408838 <verify_monster@@Base+0x1ce8>
  408838:	mov    eax,DWORD PTR [rbp-0xc]
  40883b:	cwde   
  40883c:	add    rsp,0x10
  408840:	pop    rbp
  408841:	ret    
  408842:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40884c:	nop    DWORD PTR [rax+0x0]
  408850:	push   rbp
  408851:	mov    rbp,rsp
  408854:	sub    rsp,0x10
  408858:	mov    QWORD PTR [rbp-0x8],rdi
  40885c:	cmp    QWORD PTR [rbp-0x8],0x0
  408861:	je     408884 <verify_monster@@Base+0x1d34>
  408867:	mov    rax,QWORD PTR [rbp-0x8]
  40886b:	add    rax,0x2
  408871:	mov    rdi,rax
  408874:	call   414fb0 <main@@Base+0x1280>
  408879:	movsx  ecx,al
  40887c:	mov    DWORD PTR [rbp-0xc],ecx
  40887f:	jmp    40888e <verify_monster@@Base+0x1d3e>
  408884:	xor    eax,eax
  408886:	mov    DWORD PTR [rbp-0xc],eax
  408889:	jmp    40888e <verify_monster@@Base+0x1d3e>
  40888e:	mov    eax,DWORD PTR [rbp-0xc]
  408891:	movsx  eax,al
  408894:	add    rsp,0x10
  408898:	pop    rbp
  408899:	ret    
  40889a:	nop    WORD PTR [rax+rax*1+0x0]
  4088a0:	push   rbp
  4088a1:	mov    rbp,rsp
  4088a4:	sub    rsp,0x40
  4088a8:	mov    QWORD PTR [rbp-0x10],rdi
  4088ac:	mov    WORD PTR [rbp-0x1a],0x0
  4088b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4088b7:	je     4088d1 <verify_monster@@Base+0x1d81>
  4088bd:	mov    al,0x1
  4088bf:	test   al,0x1
  4088c1:	jne    4088cc <verify_monster@@Base+0x1d7c>
  4088c7:	jmp    4088d1 <verify_monster@@Base+0x1d81>
  4088cc:	jmp    4088f0 <verify_monster@@Base+0x1da0>
  4088d1:	lea    rdi,[rip+0x1c1c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4088d8:	lea    rsi,[rip+0x1c1df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4088df:	mov    edx,0x2c7
  4088e4:	lea    rcx,[rip+0x1ce0a]        # 4256f5 <_IO_stdin_used@@Base+0x36f5>
  4088eb:	call   404090 <__assert_fail@plt>
  4088f0:	mov    WORD PTR [rbp-0x1c],0xb
  4088f6:	mov    rax,QWORD PTR [rbp-0x10]
  4088fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4088fe:	mov    rdi,rcx
  408901:	mov    QWORD PTR [rbp-0x30],rax
  408905:	call   414210 <main@@Base+0x4e0>
  40890a:	xor    edx,edx
  40890c:	mov    ecx,edx
  40890e:	movsxd rsi,eax
  408911:	sub    rcx,rsi
  408914:	mov    rsi,QWORD PTR [rbp-0x30]
  408918:	add    rsi,rcx
  40891b:	mov    QWORD PTR [rbp-0x28],rsi
  40891f:	mov    rcx,QWORD PTR [rbp-0x28]
  408923:	mov    rdi,rcx
  408926:	call   414230 <main@@Base+0x500>
  40892b:	movzx  edx,ax
  40892e:	mov    ecx,edx
  408930:	movzx  edx,WORD PTR [rbp-0x1c]
  408934:	add    edx,0x3
  408937:	movsxd rsi,edx
  40893a:	shl    rsi,0x1
  40893e:	cmp    rcx,rsi
  408941:	jb     40896b <verify_monster@@Base+0x1e1b>
  408947:	mov    rax,QWORD PTR [rbp-0x28]
  40894b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40894f:	movsxd rdx,ecx
  408952:	shl    rdx,0x1
  408956:	add    rax,rdx
  408959:	add    rax,0x4
  40895f:	mov    rdi,rax
  408962:	call   414230 <main@@Base+0x500>
  408967:	mov    WORD PTR [rbp-0x1a],ax
  40896b:	cmp    WORD PTR [rbp-0x1a],0x0
  408970:	je     4089b6 <verify_monster@@Base+0x1e66>
  408976:	mov    rax,QWORD PTR [rbp-0x10]
  40897a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40897e:	movsxd rdx,ecx
  408981:	add    rax,rdx
  408984:	mov    QWORD PTR [rbp-0x18],rax
  408988:	mov    rax,QWORD PTR [rbp-0x18]
  40898c:	add    rax,0x4
  408992:	mov    rdx,QWORD PTR [rbp-0x18]
  408996:	mov    rdi,rdx
  408999:	mov    QWORD PTR [rbp-0x38],rax
  40899d:	call   4141e0 <main@@Base+0x4b0>
  4089a2:	mov    eax,eax
  4089a4:	mov    edx,eax
  4089a6:	mov    rsi,QWORD PTR [rbp-0x38]
  4089aa:	add    rsi,rdx
  4089ad:	mov    QWORD PTR [rbp-0x8],rsi
  4089b1:	jmp    4089be <verify_monster@@Base+0x1e6e>
  4089b6:	mov    QWORD PTR [rbp-0x8],0x0
  4089be:	mov    rax,QWORD PTR [rbp-0x8]
  4089c2:	add    rsp,0x40
  4089c6:	pop    rbp
  4089c7:	ret    
  4089c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089d0:	push   rbp
  4089d1:	mov    rbp,rsp
  4089d4:	sub    rsp,0x10
  4089d8:	mov    QWORD PTR [rbp-0x8],rdi
  4089dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4089e1:	je     408a06 <verify_monster@@Base+0x1eb6>
  4089e7:	mov    rax,QWORD PTR [rbp-0x8]
  4089eb:	add    rax,0xfffffffffffffffc
  4089f1:	mov    rdi,rax
  4089f4:	call   4141e0 <main@@Base+0x4b0>
  4089f9:	mov    eax,eax
  4089fb:	mov    ecx,eax
  4089fd:	mov    QWORD PTR [rbp-0x10],rcx
  408a01:	jmp    408a13 <verify_monster@@Base+0x1ec3>
  408a06:	xor    eax,eax
  408a08:	mov    ecx,eax
  408a0a:	mov    QWORD PTR [rbp-0x10],rcx
  408a0e:	jmp    408a13 <verify_monster@@Base+0x1ec3>
  408a13:	mov    rax,QWORD PTR [rbp-0x10]
  408a17:	add    rsp,0x10
  408a1b:	pop    rbp
  408a1c:	ret    
  408a1d:	nop    DWORD PTR [rax]
  408a20:	push   rbp
  408a21:	mov    rbp,rsp
  408a24:	sub    rsp,0x20
  408a28:	mov    QWORD PTR [rbp-0x8],rdi
  408a2c:	mov    QWORD PTR [rbp-0x10],rsi
  408a30:	mov    rax,QWORD PTR [rbp-0x8]
  408a34:	mov    rcx,QWORD PTR [rbp-0x10]
  408a38:	shl    rcx,0x2
  408a3c:	add    rax,rcx
  408a3f:	mov    QWORD PTR [rbp-0x18],rax
  408a43:	mov    rax,QWORD PTR [rbp-0x8]
  408a47:	mov    rdi,rax
  408a4a:	call   416550 <main@@Base+0x2820>
  408a4f:	cmp    rax,QWORD PTR [rbp-0x10]
  408a53:	jbe    408a6d <verify_monster@@Base+0x1f1d>
  408a59:	mov    al,0x1
  408a5b:	test   al,0x1
  408a5d:	jne    408a68 <verify_monster@@Base+0x1f18>
  408a63:	jmp    408a6d <verify_monster@@Base+0x1f1d>
  408a68:	jmp    408a8c <verify_monster@@Base+0x1f3c>
  408a6d:	lea    rdi,[rip+0x1ca45]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  408a74:	lea    rsi,[rip+0x1c043]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  408a7b:	mov    edx,0x2b5
  408a80:	lea    rcx,[rip+0x1ccd4]        # 42575b <_IO_stdin_used@@Base+0x375b>
  408a87:	call   404090 <__assert_fail@plt>
  408a8c:	mov    rax,QWORD PTR [rbp-0x18]
  408a90:	mov    rcx,QWORD PTR [rbp-0x18]
  408a94:	mov    rdi,rcx
  408a97:	mov    QWORD PTR [rbp-0x20],rax
  408a9b:	call   4141e0 <main@@Base+0x4b0>
  408aa0:	mov    eax,eax
  408aa2:	mov    ecx,eax
  408aa4:	mov    rdx,QWORD PTR [rbp-0x20]
  408aa8:	add    rdx,rcx
  408aab:	mov    rax,rdx
  408aae:	add    rsp,0x20
  408ab2:	pop    rbp
  408ab3:	ret    
  408ab4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408abe:	xchg   ax,ax
  408ac0:	push   rbp
  408ac1:	mov    rbp,rsp
  408ac4:	sub    rsp,0x40
  408ac8:	mov    QWORD PTR [rbp-0x10],rdi
  408acc:	mov    WORD PTR [rbp-0x1a],0x0
  408ad2:	cmp    QWORD PTR [rbp-0x10],0x0
  408ad7:	je     408af1 <verify_monster@@Base+0x1fa1>
  408add:	mov    al,0x1
  408adf:	test   al,0x1
  408ae1:	jne    408aec <verify_monster@@Base+0x1f9c>
  408ae7:	jmp    408af1 <verify_monster@@Base+0x1fa1>
  408aec:	jmp    408b10 <verify_monster@@Base+0x1fc0>
  408af1:	lea    rdi,[rip+0x1bfa0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408af8:	lea    rsi,[rip+0x1bfbf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  408aff:	mov    edx,0x2c8
  408b04:	lea    rcx,[rip+0x1ccb3]        # 4257be <_IO_stdin_used@@Base+0x37be>
  408b0b:	call   404090 <__assert_fail@plt>
  408b10:	mov    WORD PTR [rbp-0x1c],0xa
  408b16:	mov    rax,QWORD PTR [rbp-0x10]
  408b1a:	mov    rcx,QWORD PTR [rbp-0x10]
  408b1e:	mov    rdi,rcx
  408b21:	mov    QWORD PTR [rbp-0x30],rax
  408b25:	call   414210 <main@@Base+0x4e0>
  408b2a:	xor    edx,edx
  408b2c:	mov    ecx,edx
  408b2e:	movsxd rsi,eax
  408b31:	sub    rcx,rsi
  408b34:	mov    rsi,QWORD PTR [rbp-0x30]
  408b38:	add    rsi,rcx
  408b3b:	mov    QWORD PTR [rbp-0x28],rsi
  408b3f:	mov    rcx,QWORD PTR [rbp-0x28]
  408b43:	mov    rdi,rcx
  408b46:	call   414230 <main@@Base+0x500>
  408b4b:	movzx  edx,ax
  408b4e:	mov    ecx,edx
  408b50:	movzx  edx,WORD PTR [rbp-0x1c]
  408b54:	add    edx,0x3
  408b57:	movsxd rsi,edx
  408b5a:	shl    rsi,0x1
  408b5e:	cmp    rcx,rsi
  408b61:	jb     408b8b <verify_monster@@Base+0x203b>
  408b67:	mov    rax,QWORD PTR [rbp-0x28]
  408b6b:	movzx  ecx,WORD PTR [rbp-0x1c]
  408b6f:	movsxd rdx,ecx
  408b72:	shl    rdx,0x1
  408b76:	add    rax,rdx
  408b79:	add    rax,0x4
  408b7f:	mov    rdi,rax
  408b82:	call   414230 <main@@Base+0x500>
  408b87:	mov    WORD PTR [rbp-0x1a],ax
  408b8b:	cmp    WORD PTR [rbp-0x1a],0x0
  408b90:	je     408bd6 <verify_monster@@Base+0x2086>
  408b96:	mov    rax,QWORD PTR [rbp-0x10]
  408b9a:	movzx  ecx,WORD PTR [rbp-0x1a]
  408b9e:	movsxd rdx,ecx
  408ba1:	add    rax,rdx
  408ba4:	mov    QWORD PTR [rbp-0x18],rax
  408ba8:	mov    rax,QWORD PTR [rbp-0x18]
  408bac:	add    rax,0x4
  408bb2:	mov    rdx,QWORD PTR [rbp-0x18]
  408bb6:	mov    rdi,rdx
  408bb9:	mov    QWORD PTR [rbp-0x38],rax
  408bbd:	call   4141e0 <main@@Base+0x4b0>
  408bc2:	mov    eax,eax
  408bc4:	mov    edx,eax
  408bc6:	mov    rsi,QWORD PTR [rbp-0x38]
  408bca:	add    rsi,rdx
  408bcd:	mov    QWORD PTR [rbp-0x8],rsi
  408bd1:	jmp    408bde <verify_monster@@Base+0x208e>
  408bd6:	mov    QWORD PTR [rbp-0x8],0x0
  408bde:	mov    rax,QWORD PTR [rbp-0x8]
  408be2:	add    rsp,0x40
  408be6:	pop    rbp
  408be7:	ret    
  408be8:	nop    DWORD PTR [rax+rax*1+0x0]
  408bf0:	push   rbp
  408bf1:	mov    rbp,rsp
  408bf4:	sub    rsp,0x10
  408bf8:	mov    QWORD PTR [rbp-0x8],rdi
  408bfc:	cmp    QWORD PTR [rbp-0x8],0x0
  408c01:	je     408c26 <verify_monster@@Base+0x20d6>
  408c07:	mov    rax,QWORD PTR [rbp-0x8]
  408c0b:	add    rax,0xfffffffffffffffc
  408c11:	mov    rdi,rax
  408c14:	call   4141e0 <main@@Base+0x4b0>
  408c19:	mov    eax,eax
  408c1b:	mov    ecx,eax
  408c1d:	mov    QWORD PTR [rbp-0x10],rcx
  408c21:	jmp    408c33 <verify_monster@@Base+0x20e3>
  408c26:	xor    eax,eax
  408c28:	mov    ecx,eax
  408c2a:	mov    QWORD PTR [rbp-0x10],rcx
  408c2e:	jmp    408c33 <verify_monster@@Base+0x20e3>
  408c33:	mov    rax,QWORD PTR [rbp-0x10]
  408c37:	add    rsp,0x10
  408c3b:	pop    rbp
  408c3c:	ret    
  408c3d:	nop    DWORD PTR [rax]
  408c40:	push   rbp
  408c41:	mov    rbp,rsp
  408c44:	sub    rsp,0x20
  408c48:	mov    QWORD PTR [rbp-0x8],rdi
  408c4c:	mov    QWORD PTR [rbp-0x10],rsi
  408c50:	mov    rax,QWORD PTR [rbp-0x8]
  408c54:	mov    rcx,QWORD PTR [rbp-0x10]
  408c58:	shl    rcx,0x2
  408c5c:	add    rax,rcx
  408c5f:	mov    QWORD PTR [rbp-0x18],rax
  408c63:	mov    rax,QWORD PTR [rbp-0x8]
  408c67:	mov    rdi,rax
  408c6a:	call   416550 <main@@Base+0x2820>
  408c6f:	cmp    rax,QWORD PTR [rbp-0x10]
  408c73:	jbe    408c8d <verify_monster@@Base+0x213d>
  408c79:	mov    al,0x1
  408c7b:	test   al,0x1
  408c7d:	jne    408c88 <verify_monster@@Base+0x2138>
  408c83:	jmp    408c8d <verify_monster@@Base+0x213d>
  408c88:	jmp    408cac <verify_monster@@Base+0x215c>
  408c8d:	lea    rdi,[rip+0x1c825]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  408c94:	lea    rsi,[rip+0x1c855]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  408c9b:	mov    edx,0x6c
  408ca0:	lea    rcx,[rip+0x1cb79]        # 425820 <_IO_stdin_used@@Base+0x3820>
  408ca7:	call   404090 <__assert_fail@plt>
  408cac:	mov    rax,QWORD PTR [rbp-0x18]
  408cb0:	mov    rcx,QWORD PTR [rbp-0x18]
  408cb4:	mov    rdi,rcx
  408cb7:	mov    QWORD PTR [rbp-0x20],rax
  408cbb:	call   4141e0 <main@@Base+0x4b0>
  408cc0:	mov    eax,eax
  408cc2:	mov    ecx,eax
  408cc4:	mov    rdx,QWORD PTR [rbp-0x20]
  408cc8:	add    rdx,rcx
  408ccb:	add    rdx,0x4
  408cd2:	mov    rax,rdx
  408cd5:	add    rsp,0x20
  408cd9:	pop    rbp
  408cda:	ret    
  408cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ce0:	push   rbp
  408ce1:	mov    rbp,rsp
  408ce4:	sub    rsp,0x20
  408ce8:	mov    QWORD PTR [rbp-0x8],rdi
  408cec:	mov    WORD PTR [rbp-0xa],0x0
  408cf2:	cmp    QWORD PTR [rbp-0x8],0x0
  408cf7:	je     408d11 <verify_monster@@Base+0x21c1>
  408cfd:	mov    al,0x1
  408cff:	test   al,0x1
  408d01:	jne    408d0c <verify_monster@@Base+0x21bc>
  408d07:	jmp    408d11 <verify_monster@@Base+0x21c1>
  408d0c:	jmp    408d30 <verify_monster@@Base+0x21e0>
  408d11:	lea    rdi,[rip+0x1bd80]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408d18:	lea    rsi,[rip+0x1bd9f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  408d1f:	mov    edx,0x2ca
  408d24:	lea    rcx,[rip+0x1cb46]        # 425871 <_IO_stdin_used@@Base+0x3871>
  408d2b:	call   404090 <__assert_fail@plt>
  408d30:	mov    WORD PTR [rbp-0xc],0x18
  408d36:	mov    rax,QWORD PTR [rbp-0x8]
  408d3a:	mov    rcx,QWORD PTR [rbp-0x8]
  408d3e:	mov    rdi,rcx
  408d41:	mov    QWORD PTR [rbp-0x20],rax
  408d45:	call   414210 <main@@Base+0x4e0>
  408d4a:	xor    edx,edx
  408d4c:	mov    ecx,edx
  408d4e:	movsxd rsi,eax
  408d51:	sub    rcx,rsi
  408d54:	mov    rsi,QWORD PTR [rbp-0x20]
  408d58:	add    rsi,rcx
  408d5b:	mov    QWORD PTR [rbp-0x18],rsi
  408d5f:	mov    rcx,QWORD PTR [rbp-0x18]
  408d63:	mov    rdi,rcx
  408d66:	call   414230 <main@@Base+0x500>
  408d6b:	movzx  edx,ax
  408d6e:	mov    ecx,edx
  408d70:	movzx  edx,WORD PTR [rbp-0xc]
  408d74:	add    edx,0x3
  408d77:	movsxd rsi,edx
  408d7a:	shl    rsi,0x1
  408d7e:	cmp    rcx,rsi
  408d81:	jb     408dab <verify_monster@@Base+0x225b>
  408d87:	mov    rax,QWORD PTR [rbp-0x18]
  408d8b:	movzx  ecx,WORD PTR [rbp-0xc]
  408d8f:	movsxd rdx,ecx
  408d92:	shl    rdx,0x1
  408d96:	add    rax,rdx
  408d99:	add    rax,0x4
  408d9f:	mov    rdi,rax
  408da2:	call   414230 <main@@Base+0x500>
  408da7:	mov    WORD PTR [rbp-0xa],ax
  408dab:	movzx  eax,WORD PTR [rbp-0xa]
  408daf:	cmp    eax,0x0
  408db2:	setne  cl
  408db5:	and    cl,0x1
  408db8:	movzx  eax,cl
  408dbb:	add    rsp,0x20
  408dbf:	pop    rbp
  408dc0:	ret    
  408dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dd0:	push   rbp
  408dd1:	mov    rbp,rsp
  408dd4:	sub    rsp,0x40
  408dd8:	mov    QWORD PTR [rbp-0x10],rdi
  408ddc:	mov    WORD PTR [rbp-0x1a],0x0
  408de2:	cmp    QWORD PTR [rbp-0x10],0x0
  408de7:	je     408e01 <verify_monster@@Base+0x22b1>
  408ded:	mov    al,0x1
  408def:	test   al,0x1
  408df1:	jne    408dfc <verify_monster@@Base+0x22ac>
  408df7:	jmp    408e01 <verify_monster@@Base+0x22b1>
  408dfc:	jmp    408e20 <verify_monster@@Base+0x22d0>
  408e01:	lea    rdi,[rip+0x1bc90]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408e08:	lea    rsi,[rip+0x1bcaf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  408e0f:	mov    edx,0x2ca
  408e14:	lea    rcx,[rip+0x1caad]        # 4258c8 <_IO_stdin_used@@Base+0x38c8>
  408e1b:	call   404090 <__assert_fail@plt>
  408e20:	mov    WORD PTR [rbp-0x1c],0x18
  408e26:	mov    rax,QWORD PTR [rbp-0x10]
  408e2a:	mov    rcx,QWORD PTR [rbp-0x10]
  408e2e:	mov    rdi,rcx
  408e31:	mov    QWORD PTR [rbp-0x30],rax
  408e35:	call   414210 <main@@Base+0x4e0>
  408e3a:	xor    edx,edx
  408e3c:	mov    ecx,edx
  408e3e:	movsxd rsi,eax
  408e41:	sub    rcx,rsi
  408e44:	mov    rsi,QWORD PTR [rbp-0x30]
  408e48:	add    rsi,rcx
  408e4b:	mov    QWORD PTR [rbp-0x28],rsi
  408e4f:	mov    rcx,QWORD PTR [rbp-0x28]
  408e53:	mov    rdi,rcx
  408e56:	call   414230 <main@@Base+0x500>
  408e5b:	movzx  edx,ax
  408e5e:	mov    ecx,edx
  408e60:	movzx  edx,WORD PTR [rbp-0x1c]
  408e64:	add    edx,0x3
  408e67:	movsxd rsi,edx
  408e6a:	shl    rsi,0x1
  408e6e:	cmp    rcx,rsi
  408e71:	jb     408e9b <verify_monster@@Base+0x234b>
  408e77:	mov    rax,QWORD PTR [rbp-0x28]
  408e7b:	movzx  ecx,WORD PTR [rbp-0x1c]
  408e7f:	movsxd rdx,ecx
  408e82:	shl    rdx,0x1
  408e86:	add    rax,rdx
  408e89:	add    rax,0x4
  408e8f:	mov    rdi,rax
  408e92:	call   414230 <main@@Base+0x500>
  408e97:	mov    WORD PTR [rbp-0x1a],ax
  408e9b:	cmp    WORD PTR [rbp-0x1a],0x0
  408ea0:	je     408ee6 <verify_monster@@Base+0x2396>
  408ea6:	mov    rax,QWORD PTR [rbp-0x10]
  408eaa:	movzx  ecx,WORD PTR [rbp-0x1a]
  408eae:	movsxd rdx,ecx
  408eb1:	add    rax,rdx
  408eb4:	mov    QWORD PTR [rbp-0x18],rax
  408eb8:	mov    rax,QWORD PTR [rbp-0x18]
  408ebc:	add    rax,0x4
  408ec2:	mov    rdx,QWORD PTR [rbp-0x18]
  408ec6:	mov    rdi,rdx
  408ec9:	mov    QWORD PTR [rbp-0x38],rax
  408ecd:	call   4141e0 <main@@Base+0x4b0>
  408ed2:	mov    eax,eax
  408ed4:	mov    edx,eax
  408ed6:	mov    rsi,QWORD PTR [rbp-0x38]
  408eda:	add    rsi,rdx
  408edd:	mov    QWORD PTR [rbp-0x8],rsi
  408ee1:	jmp    408eee <verify_monster@@Base+0x239e>
  408ee6:	mov    QWORD PTR [rbp-0x8],0x0
  408eee:	mov    rax,QWORD PTR [rbp-0x8]
  408ef2:	add    rsp,0x40
  408ef6:	pop    rbp
  408ef7:	ret    
  408ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  408f00:	push   rbp
  408f01:	mov    rbp,rsp
  408f04:	sub    rsp,0x10
  408f08:	mov    QWORD PTR [rbp-0x8],rdi
  408f0c:	mov    rdi,QWORD PTR [rbp-0x8]
  408f10:	call   416550 <main@@Base+0x2820>
  408f15:	add    rsp,0x10
  408f19:	pop    rbp
  408f1a:	ret    
  408f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f20:	push   rbp
  408f21:	mov    rbp,rsp
  408f24:	sub    rsp,0x10
  408f28:	mov    QWORD PTR [rbp-0x8],rdi
  408f2c:	mov    QWORD PTR [rbp-0x10],rsi
  408f30:	mov    rdi,QWORD PTR [rbp-0x8]
  408f34:	call   416550 <main@@Base+0x2820>
  408f39:	cmp    rax,QWORD PTR [rbp-0x10]
  408f3d:	jbe    408f57 <verify_monster@@Base+0x2407>
  408f43:	mov    al,0x1
  408f45:	test   al,0x1
  408f47:	jne    408f52 <verify_monster@@Base+0x2402>
  408f4d:	jmp    408f57 <verify_monster@@Base+0x2407>
  408f52:	jmp    408f76 <verify_monster@@Base+0x2426>
  408f57:	lea    rdi,[rip+0x1c55b]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  408f5e:	lea    rsi,[rip+0x1c58b]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  408f65:	mov    edx,0x18a
  408f6a:	lea    rcx,[rip+0x1c9b7]        # 425928 <_IO_stdin_used@@Base+0x3928>
  408f71:	call   404090 <__assert_fail@plt>
  408f76:	mov    rax,QWORD PTR [rbp-0x8]
  408f7a:	add    rax,QWORD PTR [rbp-0x10]
  408f7e:	mov    rdi,rax
  408f81:	call   4165a0 <main@@Base+0x2870>
  408f86:	movzx  eax,al
  408f89:	add    rsp,0x10
  408f8d:	pop    rbp
  408f8e:	ret    
  408f8f:	nop
  408f90:	push   rbp
  408f91:	mov    rbp,rsp
  408f94:	sub    rsp,0x30
  408f98:	mov    QWORD PTR [rbp-0x8],rdi
  408f9c:	mov    WORD PTR [rbp-0xa],0x0
  408fa2:	cmp    QWORD PTR [rbp-0x8],0x0
  408fa7:	je     408fc1 <verify_monster@@Base+0x2471>
  408fad:	mov    al,0x1
  408faf:	test   al,0x1
  408fb1:	jne    408fbc <verify_monster@@Base+0x246c>
  408fb7:	jmp    408fc1 <verify_monster@@Base+0x2471>
  408fbc:	jmp    408fe0 <verify_monster@@Base+0x2490>
  408fc1:	lea    rdi,[rip+0x1bad0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  408fc8:	lea    rsi,[rip+0x1baef]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  408fcf:	mov    edx,0x2cd
  408fd4:	lea    rcx,[rip+0x1c998]        # 425973 <_IO_stdin_used@@Base+0x3973>
  408fdb:	call   404090 <__assert_fail@plt>
  408fe0:	mov    WORD PTR [rbp-0xc],0x7
  408fe6:	mov    rax,QWORD PTR [rbp-0x8]
  408fea:	mov    rcx,QWORD PTR [rbp-0x8]
  408fee:	mov    rdi,rcx
  408ff1:	mov    QWORD PTR [rbp-0x20],rax
  408ff5:	call   414210 <main@@Base+0x4e0>
  408ffa:	xor    edx,edx
  408ffc:	mov    ecx,edx
  408ffe:	movsxd rsi,eax
  409001:	sub    rcx,rsi
  409004:	mov    rsi,QWORD PTR [rbp-0x20]
  409008:	add    rsi,rcx
  40900b:	mov    QWORD PTR [rbp-0x18],rsi
  40900f:	mov    rcx,QWORD PTR [rbp-0x18]
  409013:	mov    rdi,rcx
  409016:	call   414230 <main@@Base+0x500>
  40901b:	movzx  edx,ax
  40901e:	mov    ecx,edx
  409020:	movzx  edx,WORD PTR [rbp-0xc]
  409024:	add    edx,0x3
  409027:	movsxd rsi,edx
  40902a:	shl    rsi,0x1
  40902e:	cmp    rcx,rsi
  409031:	jb     40905b <verify_monster@@Base+0x250b>
  409037:	mov    rax,QWORD PTR [rbp-0x18]
  40903b:	movzx  ecx,WORD PTR [rbp-0xc]
  40903f:	movsxd rdx,ecx
  409042:	shl    rdx,0x1
  409046:	add    rax,rdx
  409049:	add    rax,0x4
  40904f:	mov    rdi,rax
  409052:	call   414230 <main@@Base+0x500>
  409057:	mov    WORD PTR [rbp-0xa],ax
  40905b:	movzx  eax,WORD PTR [rbp-0xa]
  40905f:	cmp    eax,0x0
  409062:	je     409089 <verify_monster@@Base+0x2539>
  409068:	mov    rax,QWORD PTR [rbp-0x8]
  40906c:	movzx  ecx,WORD PTR [rbp-0xa]
  409070:	movsxd rdx,ecx
  409073:	add    rax,rdx
  409076:	mov    rdi,rax
  409079:	call   4165e0 <main@@Base+0x28b0>
  40907e:	movzx  ecx,al
  409081:	mov    DWORD PTR [rbp-0x24],ecx
  409084:	jmp    409093 <verify_monster@@Base+0x2543>
  409089:	xor    eax,eax
  40908b:	mov    DWORD PTR [rbp-0x24],eax
  40908e:	jmp    409093 <verify_monster@@Base+0x2543>
  409093:	mov    eax,DWORD PTR [rbp-0x24]
  409096:	movzx  eax,al
  409099:	add    rsp,0x30
  40909d:	pop    rbp
  40909e:	ret    
  40909f:	nop
  4090a0:	push   rbp
  4090a1:	mov    rbp,rsp
  4090a4:	sub    rsp,0x40
  4090a8:	mov    QWORD PTR [rbp-0x10],rdi
  4090ac:	mov    WORD PTR [rbp-0x1a],0x0
  4090b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4090b7:	je     4090d1 <verify_monster@@Base+0x2581>
  4090bd:	mov    al,0x1
  4090bf:	test   al,0x1
  4090c1:	jne    4090cc <verify_monster@@Base+0x257c>
  4090c7:	jmp    4090d1 <verify_monster@@Base+0x2581>
  4090cc:	jmp    4090f0 <verify_monster@@Base+0x25a0>
  4090d1:	lea    rdi,[rip+0x1b9c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4090d8:	lea    rsi,[rip+0x1b9df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4090df:	mov    edx,0x2cd
  4090e4:	lea    rcx,[rip+0x1c8e9]        # 4259d4 <_IO_stdin_used@@Base+0x39d4>
  4090eb:	call   404090 <__assert_fail@plt>
  4090f0:	mov    WORD PTR [rbp-0x1c],0x8
  4090f6:	mov    rax,QWORD PTR [rbp-0x10]
  4090fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4090fe:	mov    rdi,rcx
  409101:	mov    QWORD PTR [rbp-0x30],rax
  409105:	call   414210 <main@@Base+0x4e0>
  40910a:	xor    edx,edx
  40910c:	mov    ecx,edx
  40910e:	movsxd rsi,eax
  409111:	sub    rcx,rsi
  409114:	mov    rsi,QWORD PTR [rbp-0x30]
  409118:	add    rsi,rcx
  40911b:	mov    QWORD PTR [rbp-0x28],rsi
  40911f:	mov    rcx,QWORD PTR [rbp-0x28]
  409123:	mov    rdi,rcx
  409126:	call   414230 <main@@Base+0x500>
  40912b:	movzx  edx,ax
  40912e:	mov    ecx,edx
  409130:	movzx  edx,WORD PTR [rbp-0x1c]
  409134:	add    edx,0x3
  409137:	movsxd rsi,edx
  40913a:	shl    rsi,0x1
  40913e:	cmp    rcx,rsi
  409141:	jb     40916b <verify_monster@@Base+0x261b>
  409147:	mov    rax,QWORD PTR [rbp-0x28]
  40914b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40914f:	movsxd rdx,ecx
  409152:	shl    rdx,0x1
  409156:	add    rax,rdx
  409159:	add    rax,0x4
  40915f:	mov    rdi,rax
  409162:	call   414230 <main@@Base+0x500>
  409167:	mov    WORD PTR [rbp-0x1a],ax
  40916b:	cmp    WORD PTR [rbp-0x1a],0x0
  409170:	je     4091b0 <verify_monster@@Base+0x2660>
  409176:	mov    rax,QWORD PTR [rbp-0x10]
  40917a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40917e:	movsxd rdx,ecx
  409181:	add    rax,rdx
  409184:	mov    QWORD PTR [rbp-0x18],rax
  409188:	mov    rax,QWORD PTR [rbp-0x18]
  40918c:	mov    rdx,QWORD PTR [rbp-0x18]
  409190:	mov    rdi,rdx
  409193:	mov    QWORD PTR [rbp-0x38],rax
  409197:	call   4141e0 <main@@Base+0x4b0>
  40919c:	mov    eax,eax
  40919e:	mov    edx,eax
  4091a0:	mov    rsi,QWORD PTR [rbp-0x38]
  4091a4:	add    rsi,rdx
  4091a7:	mov    QWORD PTR [rbp-0x8],rsi
  4091ab:	jmp    4091b8 <verify_monster@@Base+0x2668>
  4091b0:	mov    QWORD PTR [rbp-0x8],0x0
  4091b8:	mov    rax,QWORD PTR [rbp-0x8]
  4091bc:	add    rsp,0x40
  4091c0:	pop    rbp
  4091c1:	ret    
  4091c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091cc:	nop    DWORD PTR [rax+0x0]
  4091d0:	push   rbp
  4091d1:	mov    rbp,rsp
  4091d4:	sub    rsp,0x40
  4091d8:	mov    QWORD PTR [rbp-0x10],rdi
  4091dc:	mov    WORD PTR [rbp-0x1a],0x0
  4091e2:	cmp    QWORD PTR [rbp-0x10],0x0
  4091e7:	je     409201 <verify_monster@@Base+0x26b1>
  4091ed:	mov    al,0x1
  4091ef:	test   al,0x1
  4091f1:	jne    4091fc <verify_monster@@Base+0x26ac>
  4091f7:	jmp    409201 <verify_monster@@Base+0x26b1>
  4091fc:	jmp    409220 <verify_monster@@Base+0x26d0>
  409201:	lea    rdi,[rip+0x1b890]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  409208:	lea    rsi,[rip+0x1b8af]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40920f:	mov    edx,0x2cc
  409214:	lea    rcx,[rip+0x1c80b]        # 425a26 <_IO_stdin_used@@Base+0x3a26>
  40921b:	call   404090 <__assert_fail@plt>
  409220:	mov    WORD PTR [rbp-0x1c],0xc
  409226:	mov    rax,QWORD PTR [rbp-0x10]
  40922a:	mov    rcx,QWORD PTR [rbp-0x10]
  40922e:	mov    rdi,rcx
  409231:	mov    QWORD PTR [rbp-0x30],rax
  409235:	call   414210 <main@@Base+0x4e0>
  40923a:	xor    edx,edx
  40923c:	mov    ecx,edx
  40923e:	movsxd rsi,eax
  409241:	sub    rcx,rsi
  409244:	mov    rsi,QWORD PTR [rbp-0x30]
  409248:	add    rsi,rcx
  40924b:	mov    QWORD PTR [rbp-0x28],rsi
  40924f:	mov    rcx,QWORD PTR [rbp-0x28]
  409253:	mov    rdi,rcx
  409256:	call   414230 <main@@Base+0x500>
  40925b:	movzx  edx,ax
  40925e:	mov    ecx,edx
  409260:	movzx  edx,WORD PTR [rbp-0x1c]
  409264:	add    edx,0x3
  409267:	movsxd rsi,edx
  40926a:	shl    rsi,0x1
  40926e:	cmp    rcx,rsi
  409271:	jb     40929b <verify_monster@@Base+0x274b>
  409277:	mov    rax,QWORD PTR [rbp-0x28]
  40927b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40927f:	movsxd rdx,ecx
  409282:	shl    rdx,0x1
  409286:	add    rax,rdx
  409289:	add    rax,0x4
  40928f:	mov    rdi,rax
  409292:	call   414230 <main@@Base+0x500>
  409297:	mov    WORD PTR [rbp-0x1a],ax
  40929b:	cmp    WORD PTR [rbp-0x1a],0x0
  4092a0:	je     4092e0 <verify_monster@@Base+0x2790>
  4092a6:	mov    rax,QWORD PTR [rbp-0x10]
  4092aa:	movzx  ecx,WORD PTR [rbp-0x1a]
  4092ae:	movsxd rdx,ecx
  4092b1:	add    rax,rdx
  4092b4:	mov    QWORD PTR [rbp-0x18],rax
  4092b8:	mov    rax,QWORD PTR [rbp-0x18]
  4092bc:	mov    rdx,QWORD PTR [rbp-0x18]
  4092c0:	mov    rdi,rdx
  4092c3:	mov    QWORD PTR [rbp-0x38],rax
  4092c7:	call   4141e0 <main@@Base+0x4b0>
  4092cc:	mov    eax,eax
  4092ce:	mov    edx,eax
  4092d0:	mov    rsi,QWORD PTR [rbp-0x38]
  4092d4:	add    rsi,rdx
  4092d7:	mov    QWORD PTR [rbp-0x8],rsi
  4092db:	jmp    4092e8 <verify_monster@@Base+0x2798>
  4092e0:	mov    QWORD PTR [rbp-0x8],0x0
  4092e8:	mov    rax,QWORD PTR [rbp-0x8]
  4092ec:	add    rsp,0x40
  4092f0:	pop    rbp
  4092f1:	ret    
  4092f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092fc:	nop    DWORD PTR [rax+0x0]
  409300:	push   rbp
  409301:	mov    rbp,rsp
  409304:	sub    rsp,0x20
  409308:	xor    esi,esi
  40930a:	mov    QWORD PTR [rbp-0x18],rdi
  40930e:	lea    rax,[rbp-0x10]
  409312:	mov    rdi,rax
  409315:	mov    edx,0x10
  40931a:	call   4040a0 <memset@plt>
  40931f:	mov    rdi,QWORD PTR [rbp-0x18]
  409323:	call   408f90 <verify_monster@@Base+0x2440>
  409328:	mov    BYTE PTR [rbp-0x10],al
  40932b:	movzx  ecx,BYTE PTR [rbp-0x10]
  40932f:	cmp    ecx,0x0
  409332:	jne    40933d <verify_monster@@Base+0x27ed>
  409338:	jmp    40934a <verify_monster@@Base+0x27fa>
  40933d:	mov    rdi,QWORD PTR [rbp-0x18]
  409341:	call   4090a0 <verify_monster@@Base+0x2550>
  409346:	mov    QWORD PTR [rbp-0x8],rax
  40934a:	mov    al,BYTE PTR [rbp-0x10]
  40934d:	mov    rdx,QWORD PTR [rbp-0x8]
  409351:	add    rsp,0x20
  409355:	pop    rbp
  409356:	ret    
  409357:	nop    WORD PTR [rax+rax*1+0x0]
  409360:	push   rbp
  409361:	mov    rbp,rsp
  409364:	sub    rsp,0x30
  409368:	mov    QWORD PTR [rbp-0x8],rdi
  40936c:	mov    WORD PTR [rbp-0xa],0x0
  409372:	cmp    QWORD PTR [rbp-0x8],0x0
  409377:	je     409391 <verify_monster@@Base+0x2841>
  40937d:	mov    al,0x1
  40937f:	test   al,0x1
  409381:	jne    40938c <verify_monster@@Base+0x283c>
  409387:	jmp    409391 <verify_monster@@Base+0x2841>
  40938c:	jmp    4093b0 <verify_monster@@Base+0x2860>
  409391:	lea    rdi,[rip+0x1b700]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  409398:	lea    rsi,[rip+0x1b71f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40939f:	mov    edx,0x2d3
  4093a4:	lea    rcx,[rip+0x1c6d7]        # 425a82 <_IO_stdin_used@@Base+0x3a82>
  4093ab:	call   404090 <__assert_fail@plt>
  4093b0:	mov    WORD PTR [rbp-0xc],0xf
  4093b6:	mov    rax,QWORD PTR [rbp-0x8]
  4093ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4093be:	mov    rdi,rcx
  4093c1:	mov    QWORD PTR [rbp-0x20],rax
  4093c5:	call   414210 <main@@Base+0x4e0>
  4093ca:	xor    edx,edx
  4093cc:	mov    ecx,edx
  4093ce:	movsxd rsi,eax
  4093d1:	sub    rcx,rsi
  4093d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4093d8:	add    rsi,rcx
  4093db:	mov    QWORD PTR [rbp-0x18],rsi
  4093df:	mov    rcx,QWORD PTR [rbp-0x18]
  4093e3:	mov    rdi,rcx
  4093e6:	call   414230 <main@@Base+0x500>
  4093eb:	movzx  edx,ax
  4093ee:	mov    ecx,edx
  4093f0:	movzx  edx,WORD PTR [rbp-0xc]
  4093f4:	add    edx,0x3
  4093f7:	movsxd rsi,edx
  4093fa:	shl    rsi,0x1
  4093fe:	cmp    rcx,rsi
  409401:	jb     40942b <verify_monster@@Base+0x28db>
  409407:	mov    rax,QWORD PTR [rbp-0x18]
  40940b:	movzx  ecx,WORD PTR [rbp-0xc]
  40940f:	movsxd rdx,ecx
  409412:	shl    rdx,0x1
  409416:	add    rax,rdx
  409419:	add    rax,0x4
  40941f:	mov    rdi,rax
  409422:	call   414230 <main@@Base+0x500>
  409427:	mov    WORD PTR [rbp-0xa],ax
  40942b:	movzx  eax,WORD PTR [rbp-0xa]
  40942f:	cmp    eax,0x0
  409432:	je     409459 <verify_monster@@Base+0x2909>
  409438:	mov    rax,QWORD PTR [rbp-0x8]
  40943c:	movzx  ecx,WORD PTR [rbp-0xa]
  409440:	movsxd rdx,ecx
  409443:	add    rax,rdx
  409446:	mov    rdi,rax
  409449:	call   4165a0 <main@@Base+0x2870>
  40944e:	movzx  ecx,al
  409451:	mov    DWORD PTR [rbp-0x24],ecx
  409454:	jmp    409466 <verify_monster@@Base+0x2916>
  409459:	mov    eax,0x1
  40945e:	mov    DWORD PTR [rbp-0x24],eax
  409461:	jmp    409466 <verify_monster@@Base+0x2916>
  409466:	mov    eax,DWORD PTR [rbp-0x24]
  409469:	movzx  eax,al
  40946c:	add    rsp,0x30
  409470:	pop    rbp
  409471:	ret    
  409472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40947c:	nop    DWORD PTR [rax+0x0]
  409480:	push   rbp
  409481:	mov    rbp,rsp
  409484:	sub    rsp,0x20
  409488:	mov    QWORD PTR [rbp-0x8],rdi
  40948c:	mov    WORD PTR [rbp-0xa],0x0
  409492:	cmp    QWORD PTR [rbp-0x8],0x0
  409497:	je     4094b1 <verify_monster@@Base+0x2961>
  40949d:	mov    al,0x1
  40949f:	test   al,0x1
  4094a1:	jne    4094ac <verify_monster@@Base+0x295c>
  4094a7:	jmp    4094b1 <verify_monster@@Base+0x2961>
  4094ac:	jmp    4094d0 <verify_monster@@Base+0x2980>
  4094b1:	lea    rdi,[rip+0x1b5e0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4094b8:	lea    rsi,[rip+0x1b5ff]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4094bf:	mov    edx,0x2d2
  4094c4:	lea    rcx,[rip+0x1c60a]        # 425ad5 <_IO_stdin_used@@Base+0x3ad5>
  4094cb:	call   404090 <__assert_fail@plt>
  4094d0:	mov    WORD PTR [rbp-0xc],0xe
  4094d6:	mov    rax,QWORD PTR [rbp-0x8]
  4094da:	mov    rcx,QWORD PTR [rbp-0x8]
  4094de:	mov    rdi,rcx
  4094e1:	mov    QWORD PTR [rbp-0x20],rax
  4094e5:	call   414210 <main@@Base+0x4e0>
  4094ea:	xor    edx,edx
  4094ec:	mov    ecx,edx
  4094ee:	movsxd rsi,eax
  4094f1:	sub    rcx,rsi
  4094f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4094f8:	add    rsi,rcx
  4094fb:	mov    QWORD PTR [rbp-0x18],rsi
  4094ff:	mov    rcx,QWORD PTR [rbp-0x18]
  409503:	mov    rdi,rcx
  409506:	call   414230 <main@@Base+0x500>
  40950b:	movzx  edx,ax
  40950e:	mov    ecx,edx
  409510:	movzx  edx,WORD PTR [rbp-0xc]
  409514:	add    edx,0x3
  409517:	movsxd rsi,edx
  40951a:	shl    rsi,0x1
  40951e:	cmp    rcx,rsi
  409521:	jb     40954b <verify_monster@@Base+0x29fb>
  409527:	mov    rax,QWORD PTR [rbp-0x18]
  40952b:	movzx  ecx,WORD PTR [rbp-0xc]
  40952f:	movsxd rdx,ecx
  409532:	shl    rdx,0x1
  409536:	add    rax,rdx
  409539:	add    rax,0x4
  40953f:	mov    rdi,rax
  409542:	call   414230 <main@@Base+0x500>
  409547:	mov    WORD PTR [rbp-0xa],ax
  40954b:	movzx  eax,WORD PTR [rbp-0xa]
  40954f:	cmp    eax,0x0
  409552:	setne  cl
  409555:	and    cl,0x1
  409558:	movzx  eax,cl
  40955b:	add    rsp,0x20
  40955f:	pop    rbp
  409560:	ret    
  409561:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40956b:	nop    DWORD PTR [rax+rax*1+0x0]
  409570:	push   rbp
  409571:	mov    rbp,rsp
  409574:	sub    rsp,0x40
  409578:	mov    QWORD PTR [rbp-0x10],rdi
  40957c:	mov    WORD PTR [rbp-0x1a],0x0
  409582:	cmp    QWORD PTR [rbp-0x10],0x0
  409587:	je     4095a1 <verify_monster@@Base+0x2a51>
  40958d:	mov    al,0x1
  40958f:	test   al,0x1
  409591:	jne    40959c <verify_monster@@Base+0x2a4c>
  409597:	jmp    4095a1 <verify_monster@@Base+0x2a51>
  40959c:	jmp    4095c0 <verify_monster@@Base+0x2a70>
  4095a1:	lea    rdi,[rip+0x1b4f0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4095a8:	lea    rsi,[rip+0x1b50f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4095af:	mov    edx,0x2d2
  4095b4:	lea    rcx,[rip+0x1c56a]        # 425b25 <_IO_stdin_used@@Base+0x3b25>
  4095bb:	call   404090 <__assert_fail@plt>
  4095c0:	mov    WORD PTR [rbp-0x1c],0xe
  4095c6:	mov    rax,QWORD PTR [rbp-0x10]
  4095ca:	mov    rcx,QWORD PTR [rbp-0x10]
  4095ce:	mov    rdi,rcx
  4095d1:	mov    QWORD PTR [rbp-0x30],rax
  4095d5:	call   414210 <main@@Base+0x4e0>
  4095da:	xor    edx,edx
  4095dc:	mov    ecx,edx
  4095de:	movsxd rsi,eax
  4095e1:	sub    rcx,rsi
  4095e4:	mov    rsi,QWORD PTR [rbp-0x30]
  4095e8:	add    rsi,rcx
  4095eb:	mov    QWORD PTR [rbp-0x28],rsi
  4095ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4095f3:	mov    rdi,rcx
  4095f6:	call   414230 <main@@Base+0x500>
  4095fb:	movzx  edx,ax
  4095fe:	mov    ecx,edx
  409600:	movzx  edx,WORD PTR [rbp-0x1c]
  409604:	add    edx,0x3
  409607:	movsxd rsi,edx
  40960a:	shl    rsi,0x1
  40960e:	cmp    rcx,rsi
  409611:	jb     40963b <verify_monster@@Base+0x2aeb>
  409617:	mov    rax,QWORD PTR [rbp-0x28]
  40961b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40961f:	movsxd rdx,ecx
  409622:	shl    rdx,0x1
  409626:	add    rax,rdx
  409629:	add    rax,0x4
  40962f:	mov    rdi,rax
  409632:	call   414230 <main@@Base+0x500>
  409637:	mov    WORD PTR [rbp-0x1a],ax
  40963b:	cmp    WORD PTR [rbp-0x1a],0x0
  409640:	je     409680 <verify_monster@@Base+0x2b30>
  409646:	mov    rax,QWORD PTR [rbp-0x10]
  40964a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40964e:	movsxd rdx,ecx
  409651:	add    rax,rdx
  409654:	mov    QWORD PTR [rbp-0x18],rax
  409658:	mov    rax,QWORD PTR [rbp-0x18]
  40965c:	mov    rdx,QWORD PTR [rbp-0x18]
  409660:	mov    rdi,rdx
  409663:	mov    QWORD PTR [rbp-0x38],rax
  409667:	call   4141e0 <main@@Base+0x4b0>
  40966c:	mov    eax,eax
  40966e:	mov    edx,eax
  409670:	mov    rsi,QWORD PTR [rbp-0x38]
  409674:	add    rsi,rdx
  409677:	mov    QWORD PTR [rbp-0x8],rsi
  40967b:	jmp    409688 <verify_monster@@Base+0x2b38>
  409680:	mov    QWORD PTR [rbp-0x8],0x0
  409688:	mov    rax,QWORD PTR [rbp-0x8]
  40968c:	add    rsp,0x40
  409690:	pop    rbp
  409691:	ret    
  409692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40969c:	nop    DWORD PTR [rax+0x0]
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	sub    rsp,0x20
  4096a8:	mov    QWORD PTR [rbp-0x8],rdi
  4096ac:	mov    WORD PTR [rbp-0xa],0x0
  4096b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4096b7:	je     4096d1 <verify_monster@@Base+0x2b81>
  4096bd:	mov    al,0x1
  4096bf:	test   al,0x1
  4096c1:	jne    4096cc <verify_monster@@Base+0x2b7c>
  4096c7:	jmp    4096d1 <verify_monster@@Base+0x2b81>
  4096cc:	jmp    4096f0 <verify_monster@@Base+0x2ba0>
  4096d1:	lea    rdi,[rip+0x1b3c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4096d8:	lea    rsi,[rip+0x1b3df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4096df:	mov    edx,0x25f
  4096e4:	lea    rcx,[rip+0x1c497]        # 425b82 <_IO_stdin_used@@Base+0x3b82>
  4096eb:	call   404090 <__assert_fail@plt>
  4096f0:	mov    WORD PTR [rbp-0xc],0x0
  4096f6:	mov    rax,QWORD PTR [rbp-0x8]
  4096fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4096fe:	mov    rdi,rcx
  409701:	mov    QWORD PTR [rbp-0x20],rax
  409705:	call   414210 <main@@Base+0x4e0>
  40970a:	xor    edx,edx
  40970c:	mov    ecx,edx
  40970e:	movsxd rsi,eax
  409711:	sub    rcx,rsi
  409714:	mov    rsi,QWORD PTR [rbp-0x20]
  409718:	add    rsi,rcx
  40971b:	mov    QWORD PTR [rbp-0x18],rsi
  40971f:	mov    rcx,QWORD PTR [rbp-0x18]
  409723:	mov    rdi,rcx
  409726:	call   414230 <main@@Base+0x500>
  40972b:	movzx  edx,ax
  40972e:	mov    ecx,edx
  409730:	movzx  edx,WORD PTR [rbp-0xc]
  409734:	add    edx,0x3
  409737:	movsxd rsi,edx
  40973a:	shl    rsi,0x1
  40973e:	cmp    rcx,rsi
  409741:	jb     40976b <verify_monster@@Base+0x2c1b>
  409747:	mov    rax,QWORD PTR [rbp-0x18]
  40974b:	movzx  ecx,WORD PTR [rbp-0xc]
  40974f:	movsxd rdx,ecx
  409752:	shl    rdx,0x1
  409756:	add    rax,rdx
  409759:	add    rax,0x4
  40975f:	mov    rdi,rax
  409762:	call   414230 <main@@Base+0x500>
  409767:	mov    WORD PTR [rbp-0xa],ax
  40976b:	movzx  eax,WORD PTR [rbp-0xa]
  40976f:	cmp    eax,0x0
  409772:	setne  cl
  409775:	and    cl,0x1
  409778:	movzx  eax,cl
  40977b:	add    rsp,0x20
  40977f:	pop    rbp
  409780:	ret    
  409781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40978b:	nop    DWORD PTR [rax+rax*1+0x0]
  409790:	push   rbp
  409791:	mov    rbp,rsp
  409794:	sub    rsp,0x20
  409798:	mov    QWORD PTR [rbp-0x8],rdi
  40979c:	mov    WORD PTR [rbp-0xa],0x0
  4097a2:	cmp    QWORD PTR [rbp-0x8],0x0
  4097a7:	je     4097c1 <verify_monster@@Base+0x2c71>
  4097ad:	mov    al,0x1
  4097af:	test   al,0x1
  4097b1:	jne    4097bc <verify_monster@@Base+0x2c6c>
  4097b7:	jmp    4097c1 <verify_monster@@Base+0x2c71>
  4097bc:	jmp    4097e0 <verify_monster@@Base+0x2c90>
  4097c1:	lea    rdi,[rip+0x1b2d0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4097c8:	lea    rsi,[rip+0x1b2ef]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4097cf:	mov    edx,0x260
  4097d4:	lea    rcx,[rip+0x1c3ea]        # 425bc5 <_IO_stdin_used@@Base+0x3bc5>
  4097db:	call   404090 <__assert_fail@plt>
  4097e0:	mov    WORD PTR [rbp-0xc],0x1
  4097e6:	mov    rax,QWORD PTR [rbp-0x8]
  4097ea:	mov    rcx,QWORD PTR [rbp-0x8]
  4097ee:	mov    rdi,rcx
  4097f1:	mov    QWORD PTR [rbp-0x20],rax
  4097f5:	call   414210 <main@@Base+0x4e0>
  4097fa:	xor    edx,edx
  4097fc:	mov    ecx,edx
  4097fe:	movsxd rsi,eax
  409801:	sub    rcx,rsi
  409804:	mov    rsi,QWORD PTR [rbp-0x20]
  409808:	add    rsi,rcx
  40980b:	mov    QWORD PTR [rbp-0x18],rsi
  40980f:	mov    rcx,QWORD PTR [rbp-0x18]
  409813:	mov    rdi,rcx
  409816:	call   414230 <main@@Base+0x500>
  40981b:	movzx  edx,ax
  40981e:	mov    ecx,edx
  409820:	movzx  edx,WORD PTR [rbp-0xc]
  409824:	add    edx,0x3
  409827:	movsxd rsi,edx
  40982a:	shl    rsi,0x1
  40982e:	cmp    rcx,rsi
  409831:	jb     40985b <verify_monster@@Base+0x2d0b>
  409837:	mov    rax,QWORD PTR [rbp-0x18]
  40983b:	movzx  ecx,WORD PTR [rbp-0xc]
  40983f:	movsxd rdx,ecx
  409842:	shl    rdx,0x1
  409846:	add    rax,rdx
  409849:	add    rax,0x4
  40984f:	mov    rdi,rax
  409852:	call   414230 <main@@Base+0x500>
  409857:	mov    WORD PTR [rbp-0xa],ax
  40985b:	movzx  eax,WORD PTR [rbp-0xa]
  40985f:	cmp    eax,0x0
  409862:	setne  cl
  409865:	and    cl,0x1
  409868:	movzx  eax,cl
  40986b:	add    rsp,0x20
  40986f:	pop    rbp
  409870:	ret    
  409871:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40987b:	nop    DWORD PTR [rax+rax*1+0x0]
  409880:	push   rbp
  409881:	mov    rbp,rsp
  409884:	sub    rsp,0x20
  409888:	mov    QWORD PTR [rbp-0x8],rdi
  40988c:	mov    WORD PTR [rbp-0xa],0x0
  409892:	cmp    QWORD PTR [rbp-0x8],0x0
  409897:	je     4098b1 <verify_monster@@Base+0x2d61>
  40989d:	mov    al,0x1
  40989f:	test   al,0x1
  4098a1:	jne    4098ac <verify_monster@@Base+0x2d5c>
  4098a7:	jmp    4098b1 <verify_monster@@Base+0x2d61>
  4098ac:	jmp    4098d0 <verify_monster@@Base+0x2d80>
  4098b1:	lea    rdi,[rip+0x1b1e0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4098b8:	lea    rsi,[rip+0x1b1ff]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4098bf:	mov    edx,0x261
  4098c4:	lea    rcx,[rip+0x1c33e]        # 425c09 <_IO_stdin_used@@Base+0x3c09>
  4098cb:	call   404090 <__assert_fail@plt>
  4098d0:	mov    WORD PTR [rbp-0xc],0x2
  4098d6:	mov    rax,QWORD PTR [rbp-0x8]
  4098da:	mov    rcx,QWORD PTR [rbp-0x8]
  4098de:	mov    rdi,rcx
  4098e1:	mov    QWORD PTR [rbp-0x20],rax
  4098e5:	call   414210 <main@@Base+0x4e0>
  4098ea:	xor    edx,edx
  4098ec:	mov    ecx,edx
  4098ee:	movsxd rsi,eax
  4098f1:	sub    rcx,rsi
  4098f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4098f8:	add    rsi,rcx
  4098fb:	mov    QWORD PTR [rbp-0x18],rsi
  4098ff:	mov    rcx,QWORD PTR [rbp-0x18]
  409903:	mov    rdi,rcx
  409906:	call   414230 <main@@Base+0x500>
  40990b:	movzx  edx,ax
  40990e:	mov    ecx,edx
  409910:	movzx  edx,WORD PTR [rbp-0xc]
  409914:	add    edx,0x3
  409917:	movsxd rsi,edx
  40991a:	shl    rsi,0x1
  40991e:	cmp    rcx,rsi
  409921:	jb     40994b <verify_monster@@Base+0x2dfb>
  409927:	mov    rax,QWORD PTR [rbp-0x18]
  40992b:	movzx  ecx,WORD PTR [rbp-0xc]
  40992f:	movsxd rdx,ecx
  409932:	shl    rdx,0x1
  409936:	add    rax,rdx
  409939:	add    rax,0x4
  40993f:	mov    rdi,rax
  409942:	call   414230 <main@@Base+0x500>
  409947:	mov    WORD PTR [rbp-0xa],ax
  40994b:	movzx  eax,WORD PTR [rbp-0xa]
  40994f:	cmp    eax,0x0
  409952:	setne  cl
  409955:	and    cl,0x1
  409958:	movzx  eax,cl
  40995b:	add    rsp,0x20
  40995f:	pop    rbp
  409960:	ret    
  409961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40996b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409970 <gen_monster@@Base>:
  409970:	push   rbp
  409971:	mov    rbp,rsp
  409974:	sub    rsp,0x190
  40997b:	mov    QWORD PTR [rbp-0x8],rdi
  40997f:	mov    DWORD PTR [rbp-0xc],esi
  409982:	mov    rax,QWORD PTR [rip+0x1877e]        # 422107 <_IO_stdin_used@@Base+0x107>
  409989:	mov    QWORD PTR [rbp-0x16],rax
  40998d:	mov    cx,WORD PTR [rip+0x1877b]        # 42210f <_IO_stdin_used@@Base+0x10f>
  409994:	mov    WORD PTR [rbp-0xe],cx
  409998:	mov    edx,DWORD PTR [rip+0x1867e]        # 42201c <_IO_stdin_used@@Base+0x1c>
  40999e:	mov    DWORD PTR [rbp-0x5c],edx
  4099a1:	mov    rdi,QWORD PTR [rbp-0x8]
  4099a5:	call   418ef0 <flatcc_builder_reset@@Base>
  4099aa:	cmp    DWORD PTR [rbp-0xc],0x0
  4099ae:	je     4099c2 <gen_monster@@Base+0x52>
  4099b4:	mov    rdi,QWORD PTR [rbp-0x8]
  4099b8:	call   40a080 <gen_monster@@Base+0x710>
  4099bd:	jmp    4099cb <gen_monster@@Base+0x5b>
  4099c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4099c6:	call   40a0d0 <gen_monster@@Base+0x760>
  4099cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4099cf:	mov    esi,0x50
  4099d4:	call   40a120 <gen_monster@@Base+0x7b0>
  4099d9:	mov    rdi,QWORD PTR [rbp-0x8]
  4099dd:	mov    DWORD PTR [rbp-0x7c],eax
  4099e0:	call   40a1a0 <gen_monster@@Base+0x830>
  4099e5:	vmovss xmm0,DWORD PTR [rip+0x1861b]        # 422008 <_IO_stdin_used@@Base+0x8>
  4099ed:	vmovss xmm1,DWORD PTR [rip+0x1861b]        # 422010 <_IO_stdin_used@@Base+0x10>
  4099f5:	vmovss xmm2,DWORD PTR [rip+0x1860f]        # 42200c <_IO_stdin_used@@Base+0xc>
  4099fd:	mov    QWORD PTR [rbp-0x20],rax
  409a01:	mov    rax,QWORD PTR [rbp-0x20]
  409a05:	vmovss DWORD PTR [rax],xmm2
  409a09:	mov    rax,QWORD PTR [rbp-0x20]
  409a0d:	vmovss DWORD PTR [rax+0x4],xmm1
  409a12:	mov    rax,QWORD PTR [rbp-0x20]
  409a16:	vmovss DWORD PTR [rax+0x8],xmm0
  409a1b:	mov    rdi,QWORD PTR [rbp-0x8]
  409a1f:	call   40a1d0 <gen_monster@@Base+0x860>
  409a24:	mov    rdi,QWORD PTR [rbp-0x8]
  409a28:	lea    rsi,[rip+0x18928]        # 422357 <_IO_stdin_used@@Base+0x357>
  409a2f:	mov    DWORD PTR [rbp-0x80],eax
  409a32:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  409a37:	mov    rdi,QWORD PTR [rbp-0x8]
  409a3b:	mov    esi,0x2
  409a40:	mov    DWORD PTR [rbp-0x84],eax
  409a46:	call   40a1e0 <gen_monster@@Base+0x870>
  409a4b:	lea    rsi,[rbp-0x16]
  409a4f:	mov    rdi,QWORD PTR [rbp-0x8]
  409a53:	mov    edx,0xa
  409a58:	mov    DWORD PTR [rbp-0x88],eax
  409a5e:	call   40a260 <gen_monster@@Base+0x8f0>
  409a63:	mov    rdi,QWORD PTR [rbp-0x8]
  409a67:	mov    DWORD PTR [rbp-0x8c],eax
  409a6d:	call   40a2b0 <gen_monster@@Base+0x940>
  409a72:	mov    rdi,QWORD PTR [rbp-0x8]
  409a76:	mov    esi,0x1
  409a7b:	mov    DWORD PTR [rbp-0x90],eax
  409a81:	call   40a2d0 <gen_monster@@Base+0x960>
  409a86:	mov    QWORD PTR [rbp-0x28],rax
  409a8a:	mov    rax,QWORD PTR [rbp-0x28]
  409a8e:	mov    WORD PTR [rax],0x10
  409a93:	mov    rax,QWORD PTR [rbp-0x28]
  409a97:	mov    BYTE PTR [rax+0x2],0x20
  409a9b:	mov    rdi,QWORD PTR [rbp-0x8]
  409a9f:	mov    esi,0x2
  409aa4:	call   40a2d0 <gen_monster@@Base+0x960>
  409aa9:	mov    QWORD PTR [rbp-0x28],rax
  409aad:	mov    rax,QWORD PTR [rbp-0x28]
  409ab1:	mov    WORD PTR [rax],0x30
  409ab6:	mov    rax,QWORD PTR [rbp-0x28]
  409aba:	mov    BYTE PTR [rax+0x2],0x40
  409abe:	mov    rax,QWORD PTR [rbp-0x28]
  409ac2:	mov    WORD PTR [rax+0x4],0x50
  409ac8:	mov    rax,QWORD PTR [rbp-0x28]
  409acc:	mov    BYTE PTR [rax+0x6],0x60
  409ad0:	mov    rdi,QWORD PTR [rbp-0x8]
  409ad4:	mov    esi,0x70
  409ad9:	mov    edx,0xffffff80
  409ade:	call   40a300 <gen_monster@@Base+0x990>
  409ae3:	mov    WORD PTR [rbp-0x30],0x190
  409ae9:	mov    BYTE PTR [rbp-0x2e],0x91
  409aed:	mov    rdi,QWORD PTR [rbp-0x8]
  409af1:	lea    rsi,[rbp-0x30]
  409af5:	mov    QWORD PTR [rbp-0x98],rax
  409afc:	call   40a370 <gen_monster@@Base+0xa00>
  409b01:	mov    rdi,QWORD PTR [rbp-0x8]
  409b05:	lea    rsi,[rbp-0x30]
  409b09:	mov    QWORD PTR [rbp-0xa0],rax
  409b10:	call   40a370 <gen_monster@@Base+0xa00>
  409b15:	mov    rdi,QWORD PTR [rbp-0x8]
  409b19:	lea    rsi,[rbp-0x30]
  409b1d:	mov    QWORD PTR [rbp-0xa8],rax
  409b24:	call   40a3f0 <gen_monster@@Base+0xa80>
  409b29:	mov    rdi,QWORD PTR [rbp-0x8]
  409b2d:	mov    QWORD PTR [rbp-0xb0],rax
  409b34:	call   40a470 <gen_monster@@Base+0xb00>
  409b39:	cmp    rax,0x7
  409b3d:	jne    409b48 <gen_monster@@Base+0x1d8>
  409b43:	jmp    409b67 <gen_monster@@Base+0x1f7>
  409b48:	lea    rdi,[rip+0x1952c]        # 42307b <_IO_stdin_used@@Base+0x107b>
  409b4f:	lea    rsi,[rip+0x19099]        # 422bef <_IO_stdin_used@@Base+0xbef>
  409b56:	mov    edx,0x371
  409b5b:	lea    rcx,[rip+0x19540]        # 4230a2 <_IO_stdin_used@@Base+0x10a2>
  409b62:	call   404090 <__assert_fail@plt>
  409b67:	mov    rdi,QWORD PTR [rbp-0x8]
  409b6b:	mov    esi,0x2
  409b70:	call   40a490 <gen_monster@@Base+0xb20>
  409b75:	mov    rdi,QWORD PTR [rbp-0x8]
  409b79:	mov    DWORD PTR [rbp-0xb4],eax
  409b7f:	call   40a470 <gen_monster@@Base+0xb00>
  409b84:	cmp    rax,0x5
  409b88:	jne    409b93 <gen_monster@@Base+0x223>
  409b8e:	jmp    409bb2 <gen_monster@@Base+0x242>
  409b93:	lea    rdi,[rip+0x19531]        # 4230cb <_IO_stdin_used@@Base+0x10cb>
  409b9a:	lea    rsi,[rip+0x1904e]        # 422bef <_IO_stdin_used@@Base+0xbef>
  409ba1:	mov    edx,0x373
  409ba6:	lea    rcx,[rip+0x194f5]        # 4230a2 <_IO_stdin_used@@Base+0x10a2>
  409bad:	call   404090 <__assert_fail@plt>
  409bb2:	mov    rdi,QWORD PTR [rbp-0x8]
  409bb6:	call   40a4c0 <gen_monster@@Base+0xb50>
  409bbb:	mov    QWORD PTR [rbp-0x28],rax
  409bbf:	mov    rax,QWORD PTR [rbp-0x28]
  409bc3:	movsx  ecx,WORD PTR [rax+0x10]
  409bc7:	add    ecx,0x1
  409bca:	mov    WORD PTR [rax+0x10],cx
  409bce:	mov    rdi,QWORD PTR [rbp-0x8]
  409bd2:	call   40a4e0 <gen_monster@@Base+0xb70>
  409bd7:	mov    rdi,QWORD PTR [rbp-0x8]
  409bdb:	mov    DWORD PTR [rbp-0xb8],eax
  409be1:	call   405bd0 <test_empty_monster@@Base+0x180>
  409be6:	mov    rdi,QWORD PTR [rbp-0x8]
  409bea:	lea    rsi,[rip+0x19094]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  409bf1:	mov    edx,0x7
  409bf6:	mov    DWORD PTR [rbp-0xbc],eax
  409bfc:	call   40a520 <gen_monster@@Base+0xbb0>
  409c01:	mov    DWORD PTR [rbp-0x4c],eax
  409c04:	mov    rdi,QWORD PTR [rbp-0x8]
  409c08:	mov    esi,DWORD PTR [rbp-0x4c]
  409c0b:	call   40a550 <gen_monster@@Base+0xbe0>
  409c10:	mov    rdi,QWORD PTR [rbp-0x8]
  409c14:	mov    DWORD PTR [rbp-0xc0],eax
  409c1a:	call   405c30 <test_empty_monster@@Base+0x1e0>
  409c1f:	mov    DWORD PTR [rbp-0x34],eax
  409c22:	mov    rdi,QWORD PTR [rbp-0x8]
  409c26:	call   40a5b0 <gen_monster@@Base+0xc40>
  409c2b:	mov    rdi,QWORD PTR [rbp-0x8]
  409c2f:	mov    esi,0x2
  409c34:	mov    DWORD PTR [rbp-0xc4],eax
  409c3a:	call   40a5d0 <gen_monster@@Base+0xc60>
  409c3f:	mov    QWORD PTR [rbp-0x48],rax
  409c43:	mov    r8d,DWORD PTR [rbp-0x34]
  409c47:	mov    rax,QWORD PTR [rbp-0x48]
  409c4b:	mov    DWORD PTR [rax],r8d
  409c4e:	mov    r8d,DWORD PTR [rbp-0x34]
  409c52:	mov    rax,QWORD PTR [rbp-0x48]
  409c56:	mov    DWORD PTR [rax+0x4],r8d
  409c5a:	mov    rdi,QWORD PTR [rbp-0x8]
  409c5e:	call   40a600 <gen_monster@@Base+0xc90>
  409c63:	mov    rdi,QWORD PTR [rbp-0x8]
  409c67:	lea    rsi,[rip+0x19077]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  409c6e:	mov    edx,0x1e
  409c73:	mov    DWORD PTR [rbp-0xc8],eax
  409c79:	call   40a620 <gen_monster@@Base+0xcb0>
  409c7e:	mov    rdi,QWORD PTR [rbp-0x8]
  409c82:	mov    DWORD PTR [rbp-0xcc],eax
  409c88:	call   40a670 <gen_monster@@Base+0xd00>
  409c8d:	mov    r8d,DWORD PTR [rax]
  409c90:	mov    DWORD PTR [rbp-0x38],r8d
  409c94:	mov    rdi,QWORD PTR [rbp-0x8]
  409c98:	mov    esi,0x3
  409c9d:	call   40a5d0 <gen_monster@@Base+0xc60>
  409ca2:	mov    QWORD PTR [rbp-0x48],rax
  409ca6:	mov    r8d,DWORD PTR [rbp-0x34]
  409caa:	mov    rax,QWORD PTR [rbp-0x48]
  409cae:	mov    DWORD PTR [rax],r8d
  409cb1:	mov    r8d,DWORD PTR [rbp-0x38]
  409cb5:	mov    rax,QWORD PTR [rbp-0x48]
  409cb9:	mov    DWORD PTR [rax+0x4],r8d
  409cbd:	mov    rdi,QWORD PTR [rbp-0x8]
  409cc1:	mov    esi,0x1
  409cc6:	call   40a6b0 <gen_monster@@Base+0xd40>
  409ccb:	mov    rdi,QWORD PTR [rbp-0x8]
  409ccf:	mov    DWORD PTR [rbp-0xd0],eax
  409cd5:	call   40a6e0 <gen_monster@@Base+0xd70>
  409cda:	cmp    rax,0x5
  409cde:	jne    409ce9 <gen_monster@@Base+0x379>
  409ce4:	jmp    409d08 <gen_monster@@Base+0x398>
  409ce9:	lea    rdi,[rip+0x19402]        # 4230f2 <_IO_stdin_used@@Base+0x10f2>
  409cf0:	lea    rsi,[rip+0x18ef8]        # 422bef <_IO_stdin_used@@Base+0xbef>
  409cf7:	mov    edx,0x39b
  409cfc:	lea    rcx,[rip+0x1939f]        # 4230a2 <_IO_stdin_used@@Base+0x10a2>
  409d03:	call   404090 <__assert_fail@plt>
  409d08:	mov    rdi,QWORD PTR [rbp-0x8]
  409d0c:	call   40a600 <gen_monster@@Base+0xc90>
  409d11:	mov    rdi,QWORD PTR [rbp-0x8]
  409d15:	lea    rsi,[rip+0x19409]        # 423125 <_IO_stdin_used@@Base+0x1125>
  409d1c:	mov    edx,0x8
  409d21:	mov    DWORD PTR [rbp-0xd4],eax
  409d27:	call   40a620 <gen_monster@@Base+0xcb0>
  409d2c:	mov    rdi,QWORD PTR [rbp-0x8]
  409d30:	mov    DWORD PTR [rbp-0xd8],eax
  409d36:	call   40a670 <gen_monster@@Base+0xd00>
  409d3b:	mov    ecx,DWORD PTR [rax]
  409d3d:	mov    DWORD PTR [rbp-0x40],ecx
  409d40:	mov    rdi,QWORD PTR [rbp-0x8]
  409d44:	call   40a6e0 <gen_monster@@Base+0xd70>
  409d49:	cmp    rax,0x6
  409d4d:	jne    409d58 <gen_monster@@Base+0x3e8>
  409d53:	jmp    409d77 <gen_monster@@Base+0x407>
  409d58:	lea    rdi,[rip+0x193e2]        # 423141 <_IO_stdin_used@@Base+0x1141>
  409d5f:	lea    rsi,[rip+0x18e89]        # 422bef <_IO_stdin_used@@Base+0xbef>
  409d66:	mov    edx,0x3a1
  409d6b:	lea    rcx,[rip+0x19330]        # 4230a2 <_IO_stdin_used@@Base+0x10a2>
  409d72:	call   404090 <__assert_fail@plt>
  409d77:	mov    rdi,QWORD PTR [rbp-0x8]
  409d7b:	call   40a700 <gen_monster@@Base+0xd90>
  409d80:	lea    rsi,[rbp-0x40]
  409d84:	mov    QWORD PTR [rbp-0x48],rax
  409d88:	mov    rax,QWORD PTR [rbp-0x48]
  409d8c:	mov    ecx,DWORD PTR [rax+0x14]
  409d8f:	mov    DWORD PTR [rbp-0x38],ecx
  409d92:	mov    rax,QWORD PTR [rbp-0x48]
  409d96:	mov    ecx,DWORD PTR [rax+0x8]
  409d99:	mov    DWORD PTR [rbp-0x3c],ecx
  409d9c:	mov    ecx,DWORD PTR [rbp-0x34]
  409d9f:	mov    rax,QWORD PTR [rbp-0x48]
  409da3:	mov    DWORD PTR [rax+0x14],ecx
  409da6:	mov    ecx,DWORD PTR [rbp-0x38]
  409da9:	mov    rax,QWORD PTR [rbp-0x48]
  409dad:	mov    DWORD PTR [rax],ecx
  409daf:	mov    rdi,QWORD PTR [rbp-0x8]
  409db3:	mov    edx,0x2
  409db8:	call   40a720 <gen_monster@@Base+0xdb0>
  409dbd:	mov    rdi,QWORD PTR [rbp-0x8]
  409dc1:	mov    QWORD PTR [rbp-0xe0],rax
  409dc8:	call   40a750 <gen_monster@@Base+0xde0>
  409dcd:	mov    rdi,QWORD PTR [rbp-0x8]
  409dd1:	lea    rsi,[rip+0x1901e]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  409dd8:	mov    DWORD PTR [rbp-0xe4],eax
  409dde:	call   40a790 <gen_monster@@Base+0xe20>
  409de3:	mov    DWORD PTR [rbp-0x58],eax
  409de6:	mov    rdi,QWORD PTR [rbp-0x8]
  409dea:	lea    rsi,[rip+0x18313]        # 422104 <_IO_stdin_used@@Base+0x104>
  409df1:	mov    edx,0x2
  409df6:	call   40a520 <gen_monster@@Base+0xbb0>
  409dfb:	mov    DWORD PTR [rbp-0x54],eax
  409dfe:	mov    rdi,QWORD PTR [rbp-0x8]
  409e02:	lea    rsi,[rip+0x19046]        # 422e4f <_IO_stdin_used@@Base+0xe4f>
  409e09:	call   40a790 <gen_monster@@Base+0xe20>
  409e0e:	lea    rsi,[rbp-0x58]
  409e12:	mov    DWORD PTR [rbp-0x50],eax
  409e15:	mov    rdi,QWORD PTR [rbp-0x8]
  409e19:	mov    edx,0x3
  409e1e:	call   40a7c0 <gen_monster@@Base+0xe50>
  409e23:	mov    rdi,QWORD PTR [rbp-0x8]
  409e27:	mov    DWORD PTR [rbp-0xe8],eax
  409e2d:	call   40a810 <gen_monster@@Base+0xea0>
  409e32:	lea    rsi,[rbp-0x5c]
  409e36:	mov    rdi,QWORD PTR [rbp-0x8]
  409e3a:	mov    edx,0x1
  409e3f:	mov    DWORD PTR [rbp-0xec],eax
  409e45:	call   40a830 <gen_monster@@Base+0xec0>
  409e4a:	lea    rdx,[rbp-0x5c]
  409e4e:	mov    rdi,QWORD PTR [rbp-0x8]
  409e52:	add    rdx,0x1
  409e59:	mov    rsi,rdx
  409e5c:	mov    edx,0x3
  409e61:	mov    QWORD PTR [rbp-0xf8],rax
  409e68:	call   40a830 <gen_monster@@Base+0xec0>
  409e6d:	mov    rdi,QWORD PTR [rbp-0x8]
  409e71:	mov    QWORD PTR [rbp-0x100],rax
  409e78:	call   40a860 <gen_monster@@Base+0xef0>
  409e7d:	mov    rdi,QWORD PTR [rbp-0x8]
  409e81:	mov    ecx,DWORD PTR [rbp-0x34]
  409e84:	mov    QWORD PTR [rbp-0x108],rdi
  409e8b:	mov    edi,ecx
  409e8d:	mov    DWORD PTR [rbp-0x10c],eax
  409e93:	call   40a950 <gen_monster@@Base+0xfe0>
  409e98:	mov    QWORD PTR [rbp-0x68],rax
  409e9c:	mov    rsi,QWORD PTR [rbp-0x68]
  409ea0:	mov    rdi,QWORD PTR [rbp-0x108]
  409ea7:	call   40a8a0 <gen_monster@@Base+0xf30>
  409eac:	mov    rdi,QWORD PTR [rbp-0x8]
  409eb0:	mov    DWORD PTR [rbp-0x110],eax
  409eb6:	call   40a970 <gen_monster@@Base+0x1000>
  409ebb:	mov    rdi,QWORD PTR [rbp-0x8]
  409ebf:	lea    rsi,[rip+0x1904d]        # 422f13 <_IO_stdin_used@@Base+0xf13>
  409ec6:	mov    DWORD PTR [rbp-0x114],eax
  409ecc:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  409ed1:	mov    rdi,QWORD PTR [rbp-0x8]
  409ed5:	mov    DWORD PTR [rbp-0x118],eax
  409edb:	call   40a5b0 <gen_monster@@Base+0xc40>
  409ee0:	mov    rdi,QWORD PTR [rbp-0x8]
  409ee4:	mov    DWORD PTR [rbp-0x11c],eax
  409eea:	call   40a990 <gen_monster@@Base+0x1020>
  409eef:	mov    rdi,QWORD PTR [rbp-0x8]
  409ef3:	mov    ecx,DWORD PTR [rbp-0x34]
  409ef6:	mov    QWORD PTR [rbp-0x128],rdi
  409efd:	mov    edi,ecx
  409eff:	mov    DWORD PTR [rbp-0x12c],eax
  409f05:	call   40a950 <gen_monster@@Base+0xfe0>
  409f0a:	mov    QWORD PTR [rbp-0x70],rax
  409f0e:	mov    rsi,QWORD PTR [rbp-0x70]
  409f12:	mov    rdi,QWORD PTR [rbp-0x128]
  409f19:	call   40a8a0 <gen_monster@@Base+0xf30>
  409f1e:	mov    rdi,QWORD PTR [rbp-0x8]
  409f22:	lea    rsi,[rip+0x1924b]        # 423174 <_IO_stdin_used@@Base+0x1174>
  409f29:	mov    DWORD PTR [rbp-0x130],eax
  409f2f:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  409f34:	mov    rdi,QWORD PTR [rbp-0x8]
  409f38:	mov    DWORD PTR [rbp-0x134],eax
  409f3e:	call   40a670 <gen_monster@@Base+0xd00>
  409f43:	mov    rdi,QWORD PTR [rbp-0x8]
  409f47:	mov    QWORD PTR [rbp-0x140],rax
  409f4e:	call   40a600 <gen_monster@@Base+0xc90>
  409f53:	mov    rdi,QWORD PTR [rbp-0x8]
  409f57:	mov    esi,DWORD PTR [rbp-0x34]
  409f5a:	mov    DWORD PTR [rbp-0x144],eax
  409f60:	call   40a9b0 <gen_monster@@Base+0x1040>
  409f65:	mov    rdi,QWORD PTR [rbp-0x8]
  409f69:	lea    rsi,[rip+0x19204]        # 423174 <_IO_stdin_used@@Base+0x1174>
  409f70:	mov    DWORD PTR [rbp-0x148],eax
  409f76:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  409f7b:	mov    rdi,QWORD PTR [rbp-0x8]
  409f7f:	mov    DWORD PTR [rbp-0x14c],eax
  409f85:	call   40a9f0 <gen_monster@@Base+0x1080>
  409f8a:	mov    rdi,QWORD PTR [rbp-0x8]
  409f8e:	mov    QWORD PTR [rbp-0x158],rax
  409f95:	call   40a600 <gen_monster@@Base+0xc90>
  409f9a:	mov    rdi,QWORD PTR [rbp-0x8]
  409f9e:	mov    ecx,DWORD PTR [rbp-0x34]
  409fa1:	mov    QWORD PTR [rbp-0x160],rdi
  409fa8:	mov    edi,ecx
  409faa:	mov    DWORD PTR [rbp-0x164],eax
  409fb0:	call   40a950 <gen_monster@@Base+0xfe0>
  409fb5:	mov    QWORD PTR [rbp-0x78],rax
  409fb9:	mov    rsi,QWORD PTR [rbp-0x78]
  409fbd:	mov    rdi,QWORD PTR [rbp-0x160]
  409fc4:	call   40aa30 <gen_monster@@Base+0x10c0>
  409fc9:	mov    rdi,QWORD PTR [rbp-0x8]
  409fcd:	lea    rsi,[rip+0x191a0]        # 423174 <_IO_stdin_used@@Base+0x1174>
  409fd4:	mov    DWORD PTR [rbp-0x168],eax
  409fda:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  409fdf:	mov    rdi,QWORD PTR [rbp-0x8]
  409fe3:	mov    esi,0x1
  409fe8:	mov    DWORD PTR [rbp-0x16c],eax
  409fee:	call   40aab0 <gen_monster@@Base+0x1140>
  409ff3:	mov    rdi,QWORD PTR [rbp-0x8]
  409ff7:	mov    DWORD PTR [rbp-0x170],eax
  409ffd:	call   40a670 <gen_monster@@Base+0xd00>
  40a002:	mov    rdi,QWORD PTR [rbp-0x8]
  40a006:	mov    QWORD PTR [rbp-0x178],rax
  40a00d:	call   40a750 <gen_monster@@Base+0xde0>
  40a012:	mov    rdi,QWORD PTR [rbp-0x8]
  40a016:	mov    DWORD PTR [rbp-0x17c],eax
  40a01c:	call   40ab30 <gen_monster@@Base+0x11c0>
  40a021:	xor    esi,esi
  40a023:	mov    rdi,QWORD PTR [rbp-0x8]
  40a027:	mov    DWORD PTR [rbp-0x180],eax
  40a02d:	call   40ab70 <gen_monster@@Base+0x1200>
  40a032:	mov    rdi,QWORD PTR [rbp-0x8]
  40a036:	mov    DWORD PTR [rbp-0x184],eax
  40a03c:	call   40abf0 <gen_monster@@Base+0x1280>
  40a041:	mov    rdi,QWORD PTR [rbp-0x8]
  40a045:	mov    DWORD PTR [rbp-0x188],eax
  40a04b:	call   40ac10 <gen_monster@@Base+0x12a0>
  40a050:	mov    rdi,QWORD PTR [rbp-0x8]
  40a054:	mov    DWORD PTR [rbp-0x18c],eax
  40a05a:	call   40ac50 <gen_monster@@Base+0x12e0>
  40a05f:	xor    ecx,ecx
  40a061:	mov    DWORD PTR [rbp-0x190],eax
  40a067:	mov    eax,ecx
  40a069:	add    rsp,0x190
  40a070:	pop    rbp
  40a071:	ret    
  40a072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a07c:	nop    DWORD PTR [rax+0x0]
  40a080:	push   rbp
  40a081:	mov    rbp,rsp
  40a084:	sub    rsp,0x10
  40a088:	mov    QWORD PTR [rbp-0x8],rdi
  40a08c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a090:	lea    rsi,[rip+0x180e9]        # 422180 <_IO_stdin_used@@Base+0x180>
  40a097:	call   416620 <main@@Base+0x28f0>
  40a09c:	cmp    eax,0x0
  40a09f:	je     40a0b2 <gen_monster@@Base+0x742>
  40a0a5:	mov    eax,0xffffffff
  40a0aa:	mov    DWORD PTR [rbp-0xc],eax
  40a0ad:	jmp    40a0be <gen_monster@@Base+0x74e>
  40a0b2:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0b6:	call   405bd0 <test_empty_monster@@Base+0x180>
  40a0bb:	mov    DWORD PTR [rbp-0xc],eax
  40a0be:	mov    eax,DWORD PTR [rbp-0xc]
  40a0c1:	add    rsp,0x10
  40a0c5:	pop    rbp
  40a0c6:	ret    
  40a0c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a0d0:	push   rbp
  40a0d1:	mov    rbp,rsp
  40a0d4:	sub    rsp,0x10
  40a0d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a0dc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0e0:	lea    rsi,[rip+0x18099]        # 422180 <_IO_stdin_used@@Base+0x180>
  40a0e7:	call   405ba0 <test_empty_monster@@Base+0x150>
  40a0ec:	cmp    eax,0x0
  40a0ef:	je     40a102 <gen_monster@@Base+0x792>
  40a0f5:	mov    eax,0xffffffff
  40a0fa:	mov    DWORD PTR [rbp-0xc],eax
  40a0fd:	jmp    40a10e <gen_monster@@Base+0x79e>
  40a102:	mov    rdi,QWORD PTR [rbp-0x8]
  40a106:	call   405bd0 <test_empty_monster@@Base+0x180>
  40a10b:	mov    DWORD PTR [rbp-0xc],eax
  40a10e:	mov    eax,DWORD PTR [rbp-0xc]
  40a111:	add    rsp,0x10
  40a115:	pop    rbp
  40a116:	ret    
  40a117:	nop    WORD PTR [rax+rax*1+0x0]
  40a120:	push   rbp
  40a121:	mov    rbp,rsp
  40a124:	sub    rsp,0x20
  40a128:	mov    QWORD PTR [rbp-0x10],rdi
  40a12c:	mov    WORD PTR [rbp-0x12],si
  40a130:	movsx  eax,WORD PTR [rbp-0x12]
  40a134:	cmp    eax,0x64
  40a137:	jne    40a149 <gen_monster@@Base+0x7d9>
  40a13d:	mov    DWORD PTR [rbp-0x4],0x0
  40a144:	jmp    40a18e <gen_monster@@Base+0x81e>
  40a149:	mov    rdi,QWORD PTR [rbp-0x10]
  40a14d:	mov    eax,0x2
  40a152:	mov    esi,eax
  40a154:	mov    edx,0x2
  40a159:	mov    ecx,eax
  40a15b:	call   41ce20 <flatcc_builder_table_add@@Base>
  40a160:	mov    QWORD PTR [rbp-0x20],rax
  40a164:	cmp    rax,0x0
  40a168:	jne    40a17a <gen_monster@@Base+0x80a>
  40a16e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a175:	jmp    40a18e <gen_monster@@Base+0x81e>
  40a17a:	mov    rdi,QWORD PTR [rbp-0x20]
  40a17e:	movsx  esi,WORD PTR [rbp-0x12]
  40a182:	call   414c50 <main@@Base+0xf20>
  40a187:	mov    DWORD PTR [rbp-0x4],0x0
  40a18e:	mov    eax,DWORD PTR [rbp-0x4]
  40a191:	add    rsp,0x20
  40a195:	pop    rbp
  40a196:	ret    
  40a197:	nop    WORD PTR [rax+rax*1+0x0]
  40a1a0:	push   rbp
  40a1a1:	mov    rbp,rsp
  40a1a4:	sub    rsp,0x10
  40a1a8:	xor    esi,esi
  40a1aa:	mov    QWORD PTR [rbp-0x8],rdi
  40a1ae:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1b2:	mov    edx,0x20
  40a1b7:	mov    ecx,0x10
  40a1bc:	call   41ce20 <flatcc_builder_table_add@@Base>
  40a1c1:	add    rsp,0x10
  40a1c5:	pop    rbp
  40a1c6:	ret    
  40a1c7:	nop    WORD PTR [rax+rax*1+0x0]
  40a1d0:	push   rbp
  40a1d1:	mov    rbp,rsp
  40a1d4:	xor    eax,eax
  40a1d6:	mov    QWORD PTR [rbp-0x8],rdi
  40a1da:	pop    rbp
  40a1db:	ret    
  40a1dc:	nop    DWORD PTR [rax+0x0]
  40a1e0:	push   rbp
  40a1e1:	mov    rbp,rsp
  40a1e4:	sub    rsp,0x20
  40a1e8:	mov    QWORD PTR [rbp-0x10],rdi
  40a1ec:	mov    BYTE PTR [rbp-0x11],sil
  40a1f0:	movsx  eax,BYTE PTR [rbp-0x11]
  40a1f4:	cmp    eax,0x8
  40a1f7:	jne    40a209 <gen_monster@@Base+0x899>
  40a1fd:	mov    DWORD PTR [rbp-0x4],0x0
  40a204:	jmp    40a24f <gen_monster@@Base+0x8df>
  40a209:	mov    rdi,QWORD PTR [rbp-0x10]
  40a20d:	mov    esi,0x6
  40a212:	mov    edx,0x1
  40a217:	mov    ecx,0x1
  40a21c:	call   41ce20 <flatcc_builder_table_add@@Base>
  40a221:	mov    QWORD PTR [rbp-0x20],rax
  40a225:	cmp    rax,0x0
  40a229:	jne    40a23b <gen_monster@@Base+0x8cb>
  40a22f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a236:	jmp    40a24f <gen_monster@@Base+0x8df>
  40a23b:	mov    rdi,QWORD PTR [rbp-0x20]
  40a23f:	movsx  esi,BYTE PTR [rbp-0x11]
  40a243:	call   416650 <main@@Base+0x2920>
  40a248:	mov    DWORD PTR [rbp-0x4],0x0
  40a24f:	mov    eax,DWORD PTR [rbp-0x4]
  40a252:	add    rsp,0x20
  40a256:	pop    rbp
  40a257:	ret    
  40a258:	nop    DWORD PTR [rax+rax*1+0x0]
  40a260:	push   rbp
  40a261:	mov    rbp,rsp
  40a264:	sub    rsp,0x20
  40a268:	mov    QWORD PTR [rbp-0x8],rdi
  40a26c:	mov    QWORD PTR [rbp-0x10],rsi
  40a270:	mov    QWORD PTR [rbp-0x18],rdx
  40a274:	mov    rdi,QWORD PTR [rbp-0x8]
  40a278:	mov    rax,QWORD PTR [rbp-0x8]
  40a27c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a280:	mov    rdx,QWORD PTR [rbp-0x18]
  40a284:	mov    QWORD PTR [rbp-0x20],rdi
  40a288:	mov    rdi,rax
  40a28b:	call   404b80 <test_type_aliases@@Base+0x290>
  40a290:	mov    rdi,QWORD PTR [rbp-0x20]
  40a294:	mov    esi,eax
  40a296:	call   416690 <main@@Base+0x2960>
  40a29b:	add    rsp,0x20
  40a29f:	pop    rbp
  40a2a0:	ret    
  40a2a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2b0:	push   rbp
  40a2b1:	mov    rbp,rsp
  40a2b4:	sub    rsp,0x10
  40a2b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a2bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2c0:	call   4166f0 <main@@Base+0x29c0>
  40a2c5:	add    rsp,0x10
  40a2c9:	pop    rbp
  40a2ca:	ret    
  40a2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x10
  40a2d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a2dc:	mov    QWORD PTR [rbp-0x10],rsi
  40a2e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2e4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a2e8:	call   41a6a0 <flatcc_builder_extend_vector@@Base>
  40a2ed:	add    rsp,0x10
  40a2f1:	pop    rbp
  40a2f2:	ret    
  40a2f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2fd:	nop    DWORD PTR [rax]
  40a300:	push   rbp
  40a301:	mov    rbp,rsp
  40a304:	sub    rsp,0x20
  40a308:	mov    QWORD PTR [rbp-0x8],rdi
  40a30c:	mov    WORD PTR [rbp-0xa],si
  40a310:	mov    BYTE PTR [rbp-0xb],dl
  40a313:	mov    rdi,QWORD PTR [rbp-0x8]
  40a317:	mov    esi,0x1
  40a31c:	call   41a6a0 <flatcc_builder_extend_vector@@Base>
  40a321:	mov    QWORD PTR [rbp-0x18],rax
  40a325:	cmp    rax,0x0
  40a329:	je     40a34c <gen_monster@@Base+0x9dc>
  40a32f:	mov    rdi,QWORD PTR [rbp-0x18]
  40a333:	mov    ax,WORD PTR [rbp-0xa]
  40a337:	movsx  esi,ax
  40a33a:	movsx  edx,BYTE PTR [rbp-0xb]
  40a33e:	call   416720 <main@@Base+0x29f0>
  40a343:	mov    QWORD PTR [rbp-0x20],rax
  40a347:	jmp    40a359 <gen_monster@@Base+0x9e9>
  40a34c:	xor    eax,eax
  40a34e:	mov    ecx,eax
  40a350:	mov    QWORD PTR [rbp-0x20],rcx
  40a354:	jmp    40a359 <gen_monster@@Base+0x9e9>
  40a359:	mov    rax,QWORD PTR [rbp-0x20]
  40a35d:	add    rsp,0x20
  40a361:	pop    rbp
  40a362:	ret    
  40a363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a36d:	nop    DWORD PTR [rax]
  40a370:	push   rbp
  40a371:	mov    rbp,rsp
  40a374:	sub    rsp,0x30
  40a378:	mov    QWORD PTR [rbp-0x8],rdi
  40a37c:	mov    QWORD PTR [rbp-0x10],rsi
  40a380:	mov    rdi,QWORD PTR [rbp-0x8]
  40a384:	mov    esi,0x1
  40a389:	call   41a6a0 <flatcc_builder_extend_vector@@Base>
  40a38e:	mov    QWORD PTR [rbp-0x18],rax
  40a392:	cmp    rax,0x0
  40a396:	je     40a3ce <gen_monster@@Base+0xa5e>
  40a39c:	mov    rax,QWORD PTR [rbp-0x18]
  40a3a0:	mov    rcx,QWORD PTR [rbp-0x10]
  40a3a4:	mov    QWORD PTR [rbp-0x20],rax
  40a3a8:	mov    QWORD PTR [rbp-0x28],rcx
  40a3ac:	call   416750 <main@@Base+0x2a20>
  40a3b1:	mov    rdi,QWORD PTR [rbp-0x20]
  40a3b5:	mov    rsi,QWORD PTR [rbp-0x28]
  40a3b9:	mov    rdx,rax
  40a3bc:	call   4040f0 <memcpy@plt>
  40a3c1:	mov    rax,QWORD PTR [rbp-0x18]
  40a3c5:	mov    QWORD PTR [rbp-0x30],rax
  40a3c9:	jmp    40a3db <gen_monster@@Base+0xa6b>
  40a3ce:	xor    eax,eax
  40a3d0:	mov    ecx,eax
  40a3d2:	mov    QWORD PTR [rbp-0x30],rcx
  40a3d6:	jmp    40a3db <gen_monster@@Base+0xa6b>
  40a3db:	mov    rax,QWORD PTR [rbp-0x30]
  40a3df:	add    rsp,0x30
  40a3e3:	pop    rbp
  40a3e4:	ret    
  40a3e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3ef:	nop
  40a3f0:	push   rbp
  40a3f1:	mov    rbp,rsp
  40a3f4:	sub    rsp,0x30
  40a3f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a3fc:	mov    QWORD PTR [rbp-0x10],rsi
  40a400:	mov    rdi,QWORD PTR [rbp-0x8]
  40a404:	mov    esi,0x1
  40a409:	call   41a6a0 <flatcc_builder_extend_vector@@Base>
  40a40e:	mov    QWORD PTR [rbp-0x18],rax
  40a412:	cmp    rax,0x0
  40a416:	je     40a44e <gen_monster@@Base+0xade>
  40a41c:	mov    rax,QWORD PTR [rbp-0x18]
  40a420:	mov    rcx,QWORD PTR [rbp-0x10]
  40a424:	mov    QWORD PTR [rbp-0x20],rax
  40a428:	mov    QWORD PTR [rbp-0x28],rcx
  40a42c:	call   416750 <main@@Base+0x2a20>
  40a431:	mov    rdi,QWORD PTR [rbp-0x20]
  40a435:	mov    rsi,QWORD PTR [rbp-0x28]
  40a439:	mov    rdx,rax
  40a43c:	call   4040f0 <memcpy@plt>
  40a441:	mov    rax,QWORD PTR [rbp-0x18]
  40a445:	mov    QWORD PTR [rbp-0x30],rax
  40a449:	jmp    40a45b <gen_monster@@Base+0xaeb>
  40a44e:	xor    eax,eax
  40a450:	mov    ecx,eax
  40a452:	mov    QWORD PTR [rbp-0x30],rcx
  40a456:	jmp    40a45b <gen_monster@@Base+0xaeb>
  40a45b:	mov    rax,QWORD PTR [rbp-0x30]
  40a45f:	add    rsp,0x30
  40a463:	pop    rbp
  40a464:	ret    
  40a465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a46f:	nop
  40a470:	push   rbp
  40a471:	mov    rbp,rsp
  40a474:	sub    rsp,0x10
  40a478:	mov    QWORD PTR [rbp-0x8],rdi
  40a47c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a480:	call   41c6f0 <flatcc_builder_vector_count@@Base>
  40a485:	add    rsp,0x10
  40a489:	pop    rbp
  40a48a:	ret    
  40a48b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a490:	push   rbp
  40a491:	mov    rbp,rsp
  40a494:	sub    rsp,0x10
  40a498:	mov    QWORD PTR [rbp-0x8],rdi
  40a49c:	mov    QWORD PTR [rbp-0x10],rsi
  40a4a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4a4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4a8:	call   41add0 <flatcc_builder_truncate_vector@@Base>
  40a4ad:	add    rsp,0x10
  40a4b1:	pop    rbp
  40a4b2:	ret    
  40a4b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4bd:	nop    DWORD PTR [rax]
  40a4c0:	push   rbp
  40a4c1:	mov    rbp,rsp
  40a4c4:	sub    rsp,0x10
  40a4c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4d0:	call   41c710 <flatcc_builder_vector_edit@@Base>
  40a4d5:	add    rsp,0x10
  40a4d9:	pop    rbp
  40a4da:	ret    
  40a4db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4e0:	push   rbp
  40a4e1:	mov    rbp,rsp
  40a4e4:	sub    rsp,0x10
  40a4e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4f0:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f4:	mov    QWORD PTR [rbp-0x10],rdi
  40a4f8:	mov    rdi,rax
  40a4fb:	call   4167c0 <main@@Base+0x2a90>
  40a500:	mov    rdi,QWORD PTR [rbp-0x10]
  40a504:	mov    esi,eax
  40a506:	call   416760 <main@@Base+0x2a30>
  40a50b:	add    rsp,0x10
  40a50f:	pop    rbp
  40a510:	ret    
  40a511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a51b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a520:	push   rbp
  40a521:	mov    rbp,rsp
  40a524:	sub    rsp,0x20
  40a528:	mov    QWORD PTR [rbp-0x8],rdi
  40a52c:	mov    QWORD PTR [rbp-0x10],rsi
  40a530:	mov    QWORD PTR [rbp-0x18],rdx
  40a534:	mov    rdi,QWORD PTR [rbp-0x8]
  40a538:	mov    rsi,QWORD PTR [rbp-0x10]
  40a53c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a540:	call   41d7a0 <flatcc_builder_create_string@@Base>
  40a545:	add    rsp,0x20
  40a549:	pop    rbp
  40a54a:	ret    
  40a54b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a550:	push   rbp
  40a551:	mov    rbp,rsp
  40a554:	sub    rsp,0x20
  40a558:	mov    QWORD PTR [rbp-0x8],rdi
  40a55c:	mov    DWORD PTR [rbp-0xc],esi
  40a55f:	cmp    DWORD PTR [rbp-0xc],0x0
  40a563:	je     40a598 <gen_monster@@Base+0xc28>
  40a569:	mov    rdi,QWORD PTR [rbp-0x8]
  40a56d:	mov    esi,0x3
  40a572:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40a577:	mov    QWORD PTR [rbp-0x18],rax
  40a57b:	cmp    rax,0x0
  40a57f:	je     40a598 <gen_monster@@Base+0xc28>
  40a585:	xor    eax,eax
  40a587:	mov    ecx,DWORD PTR [rbp-0xc]
  40a58a:	mov    rdx,QWORD PTR [rbp-0x18]
  40a58e:	mov    DWORD PTR [rdx],ecx
  40a590:	mov    DWORD PTR [rbp-0x1c],eax
  40a593:	jmp    40a5a5 <gen_monster@@Base+0xc35>
  40a598:	mov    eax,0xffffffff
  40a59d:	mov    DWORD PTR [rbp-0x1c],eax
  40a5a0:	jmp    40a5a5 <gen_monster@@Base+0xc35>
  40a5a5:	mov    eax,DWORD PTR [rbp-0x1c]
  40a5a8:	add    rsp,0x20
  40a5ac:	pop    rbp
  40a5ad:	ret    
  40a5ae:	xchg   ax,ax
  40a5b0:	push   rbp
  40a5b1:	mov    rbp,rsp
  40a5b4:	sub    rsp,0x10
  40a5b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5c0:	call   41b1d0 <flatcc_builder_start_offset_vector@@Base>
  40a5c5:	add    rsp,0x10
  40a5c9:	pop    rbp
  40a5ca:	ret    
  40a5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5d0:	push   rbp
  40a5d1:	mov    rbp,rsp
  40a5d4:	sub    rsp,0x10
  40a5d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5dc:	mov    QWORD PTR [rbp-0x10],rsi
  40a5e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5e4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a5e8:	call   41a9c0 <flatcc_builder_extend_offset_vector@@Base>
  40a5ed:	add    rsp,0x10
  40a5f1:	pop    rbp
  40a5f2:	ret    
  40a5f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5fd:	nop    DWORD PTR [rax]
  40a600:	push   rbp
  40a601:	mov    rbp,rsp
  40a604:	sub    rsp,0x10
  40a608:	mov    QWORD PTR [rbp-0x8],rdi
  40a60c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a610:	call   405bd0 <test_empty_monster@@Base+0x180>
  40a615:	add    rsp,0x10
  40a619:	pop    rbp
  40a61a:	ret    
  40a61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a620:	push   rbp
  40a621:	mov    rbp,rsp
  40a624:	sub    rsp,0x20
  40a628:	mov    QWORD PTR [rbp-0x8],rdi
  40a62c:	mov    QWORD PTR [rbp-0x10],rsi
  40a630:	mov    QWORD PTR [rbp-0x18],rdx
  40a634:	mov    rdi,QWORD PTR [rbp-0x8]
  40a638:	mov    rax,QWORD PTR [rbp-0x8]
  40a63c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a640:	mov    rdx,QWORD PTR [rbp-0x18]
  40a644:	mov    QWORD PTR [rbp-0x20],rdi
  40a648:	mov    rdi,rax
  40a64b:	call   41d9d0 <flatcc_builder_create_string_strn@@Base>
  40a650:	mov    rdi,QWORD PTR [rbp-0x20]
  40a654:	mov    esi,eax
  40a656:	call   40a550 <gen_monster@@Base+0xbe0>
  40a65b:	add    rsp,0x20
  40a65f:	pop    rbp
  40a660:	ret    
  40a661:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a66b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a670:	push   rbp
  40a671:	mov    rbp,rsp
  40a674:	sub    rsp,0x10
  40a678:	mov    QWORD PTR [rbp-0x8],rdi
  40a67c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a680:	mov    rax,QWORD PTR [rbp-0x8]
  40a684:	mov    QWORD PTR [rbp-0x10],rdi
  40a688:	mov    rdi,rax
  40a68b:	call   405c30 <test_empty_monster@@Base+0x1e0>
  40a690:	mov    rdi,QWORD PTR [rbp-0x10]
  40a694:	mov    esi,eax
  40a696:	call   4167e0 <main@@Base+0x2ab0>
  40a69b:	add    rsp,0x10
  40a69f:	pop    rbp
  40a6a0:	ret    
  40a6a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6b0:	push   rbp
  40a6b1:	mov    rbp,rsp
  40a6b4:	sub    rsp,0x10
  40a6b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a6bc:	mov    QWORD PTR [rbp-0x10],rsi
  40a6c0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6c4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a6c8:	call   41af20 <flatcc_builder_truncate_offset_vector@@Base>
  40a6cd:	add    rsp,0x10
  40a6d1:	pop    rbp
  40a6d2:	ret    
  40a6d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6dd:	nop    DWORD PTR [rax]
  40a6e0:	push   rbp
  40a6e1:	mov    rbp,rsp
  40a6e4:	sub    rsp,0x10
  40a6e8:	mov    QWORD PTR [rbp-0x8],rdi
  40a6ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6f0:	call   41cb70 <flatcc_builder_offset_vector_count@@Base>
  40a6f5:	add    rsp,0x10
  40a6f9:	pop    rbp
  40a6fa:	ret    
  40a6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a700:	push   rbp
  40a701:	mov    rbp,rsp
  40a704:	sub    rsp,0x10
  40a708:	mov    QWORD PTR [rbp-0x8],rdi
  40a70c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a710:	call   41cb50 <flatcc_builder_offset_vector_edit@@Base>
  40a715:	add    rsp,0x10
  40a719:	pop    rbp
  40a71a:	ret    
  40a71b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a720:	push   rbp
  40a721:	mov    rbp,rsp
  40a724:	sub    rsp,0x20
  40a728:	mov    QWORD PTR [rbp-0x8],rdi
  40a72c:	mov    QWORD PTR [rbp-0x10],rsi
  40a730:	mov    QWORD PTR [rbp-0x18],rdx
  40a734:	mov    rdi,QWORD PTR [rbp-0x8]
  40a738:	mov    rsi,QWORD PTR [rbp-0x10]
  40a73c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a740:	call   41aaf0 <flatcc_builder_append_offset_vector@@Base>
  40a745:	add    rsp,0x20
  40a749:	pop    rbp
  40a74a:	ret    
  40a74b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a750:	push   rbp
  40a751:	mov    rbp,rsp
  40a754:	sub    rsp,0x10
  40a758:	mov    QWORD PTR [rbp-0x8],rdi
  40a75c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a760:	mov    rax,QWORD PTR [rbp-0x8]
  40a764:	mov    QWORD PTR [rbp-0x10],rdi
  40a768:	mov    rdi,rax
  40a76b:	call   41b2e0 <flatcc_builder_end_offset_vector@@Base>
  40a770:	mov    rdi,QWORD PTR [rbp-0x10]
  40a774:	mov    esi,eax
  40a776:	call   416830 <main@@Base+0x2b00>
  40a77b:	add    rsp,0x10
  40a77f:	pop    rbp
  40a780:	ret    
  40a781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a78b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a790:	push   rbp
  40a791:	mov    rbp,rsp
  40a794:	sub    rsp,0x10
  40a798:	mov    QWORD PTR [rbp-0x8],rdi
  40a79c:	mov    QWORD PTR [rbp-0x10],rsi
  40a7a0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7a4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a7a8:	call   41d980 <flatcc_builder_create_string_str@@Base>
  40a7ad:	add    rsp,0x10
  40a7b1:	pop    rbp
  40a7b2:	ret    
  40a7b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7bd:	nop    DWORD PTR [rax]
  40a7c0:	push   rbp
  40a7c1:	mov    rbp,rsp
  40a7c4:	sub    rsp,0x20
  40a7c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a7d0:	mov    QWORD PTR [rbp-0x18],rdx
  40a7d4:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a7dc:	mov    rsi,QWORD PTR [rbp-0x10]
  40a7e0:	mov    rdx,QWORD PTR [rbp-0x18]
  40a7e4:	mov    QWORD PTR [rbp-0x20],rdi
  40a7e8:	mov    rdi,rax
  40a7eb:	call   41b250 <flatcc_builder_create_offset_vector@@Base>
  40a7f0:	mov    rdi,QWORD PTR [rbp-0x20]
  40a7f4:	mov    esi,eax
  40a7f6:	call   416890 <main@@Base+0x2b60>
  40a7fb:	add    rsp,0x20
  40a7ff:	pop    rbp
  40a800:	ret    
  40a801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a810:	push   rbp
  40a811:	mov    rbp,rsp
  40a814:	sub    rsp,0x10
  40a818:	mov    QWORD PTR [rbp-0x8],rdi
  40a81c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a820:	call   4168f0 <main@@Base+0x2bc0>
  40a825:	add    rsp,0x10
  40a829:	pop    rbp
  40a82a:	ret    
  40a82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a830:	push   rbp
  40a831:	mov    rbp,rsp
  40a834:	sub    rsp,0x20
  40a838:	mov    QWORD PTR [rbp-0x8],rdi
  40a83c:	mov    QWORD PTR [rbp-0x10],rsi
  40a840:	mov    QWORD PTR [rbp-0x18],rdx
  40a844:	mov    rdi,QWORD PTR [rbp-0x8]
  40a848:	mov    rsi,QWORD PTR [rbp-0x10]
  40a84c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a850:	call   41a910 <flatcc_builder_append_vector@@Base>
  40a855:	add    rsp,0x20
  40a859:	pop    rbp
  40a85a:	ret    
  40a85b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a860:	push   rbp
  40a861:	mov    rbp,rsp
  40a864:	sub    rsp,0x10
  40a868:	mov    QWORD PTR [rbp-0x8],rdi
  40a86c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a870:	mov    rax,QWORD PTR [rbp-0x8]
  40a874:	mov    QWORD PTR [rbp-0x10],rdi
  40a878:	mov    rdi,rax
  40a87b:	call   416980 <main@@Base+0x2c50>
  40a880:	mov    rdi,QWORD PTR [rbp-0x10]
  40a884:	mov    esi,eax
  40a886:	call   416920 <main@@Base+0x2bf0>
  40a88b:	add    rsp,0x10
  40a88f:	pop    rbp
  40a890:	ret    
  40a891:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8a0:	push   rbp
  40a8a1:	mov    rbp,rsp
  40a8a4:	sub    rsp,0x30
  40a8a8:	mov    QWORD PTR [rbp-0x10],rsi
  40a8ac:	mov    QWORD PTR [rbp-0x18],rdi
  40a8b0:	movzx  eax,BYTE PTR [rbp-0x10]
  40a8b4:	cmp    eax,0x0
  40a8b7:	jne    40a8c9 <gen_monster@@Base+0xf59>
  40a8bd:	mov    DWORD PTR [rbp-0x4],0x0
  40a8c4:	jmp    40a946 <gen_monster@@Base+0xfd6>
  40a8c9:	cmp    DWORD PTR [rbp-0xc],0x0
  40a8cd:	jne    40a8df <gen_monster@@Base+0xf6f>
  40a8d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a8da:	jmp    40a946 <gen_monster@@Base+0xfd6>
  40a8df:	mov    rdi,QWORD PTR [rbp-0x18]
  40a8e3:	mov    esi,0x7
  40a8e8:	mov    edx,0x1
  40a8ed:	mov    ecx,0x1
  40a8f2:	call   41ce20 <flatcc_builder_table_add@@Base>
  40a8f7:	mov    QWORD PTR [rbp-0x28],rax
  40a8fb:	cmp    rax,0x0
  40a8ff:	je     40a921 <gen_monster@@Base+0xfb1>
  40a905:	mov    rdi,QWORD PTR [rbp-0x18]
  40a909:	mov    esi,0x8
  40a90e:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40a913:	mov    QWORD PTR [rbp-0x20],rax
  40a917:	cmp    rax,0x0
  40a91b:	jne    40a92d <gen_monster@@Base+0xfbd>
  40a921:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a928:	jmp    40a946 <gen_monster@@Base+0xfd6>
  40a92d:	mov    al,BYTE PTR [rbp-0x10]
  40a930:	mov    rcx,QWORD PTR [rbp-0x28]
  40a934:	mov    BYTE PTR [rcx],al
  40a936:	mov    edx,DWORD PTR [rbp-0xc]
  40a939:	mov    rcx,QWORD PTR [rbp-0x20]
  40a93d:	mov    DWORD PTR [rcx],edx
  40a93f:	mov    DWORD PTR [rbp-0x4],0x0
  40a946:	mov    eax,DWORD PTR [rbp-0x4]
  40a949:	add    rsp,0x30
  40a94d:	pop    rbp
  40a94e:	ret    
  40a94f:	nop
  40a950:	push   rbp
  40a951:	mov    rbp,rsp
  40a954:	mov    DWORD PTR [rbp-0xc],edi
  40a957:	mov    BYTE PTR [rbp-0x8],0x1
  40a95b:	mov    eax,DWORD PTR [rbp-0xc]
  40a95e:	mov    DWORD PTR [rbp-0x4],eax
  40a961:	mov    rax,QWORD PTR [rbp-0x8]
  40a965:	pop    rbp
  40a966:	ret    
  40a967:	nop    WORD PTR [rax+rax*1+0x0]
  40a970:	push   rbp
  40a971:	mov    rbp,rsp
  40a974:	sub    rsp,0x10
  40a978:	mov    QWORD PTR [rbp-0x8],rdi
  40a97c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a980:	call   405bd0 <test_empty_monster@@Base+0x180>
  40a985:	add    rsp,0x10
  40a989:	pop    rbp
  40a98a:	ret    
  40a98b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a990:	push   rbp
  40a991:	mov    rbp,rsp
  40a994:	sub    rsp,0x10
  40a998:	mov    QWORD PTR [rbp-0x8],rdi
  40a99c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a9a0:	call   405bd0 <test_empty_monster@@Base+0x180>
  40a9a5:	add    rsp,0x10
  40a9a9:	pop    rbp
  40a9aa:	ret    
  40a9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9b0:	push   rbp
  40a9b1:	mov    rbp,rsp
  40a9b4:	sub    rsp,0x20
  40a9b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a9bc:	mov    DWORD PTR [rbp-0xc],esi
  40a9bf:	mov    rdi,QWORD PTR [rbp-0x8]
  40a9c3:	mov    eax,DWORD PTR [rbp-0xc]
  40a9c6:	mov    QWORD PTR [rbp-0x20],rdi
  40a9ca:	mov    edi,eax
  40a9cc:	call   40a950 <gen_monster@@Base+0xfe0>
  40a9d1:	mov    QWORD PTR [rbp-0x18],rax
  40a9d5:	mov    rsi,QWORD PTR [rbp-0x18]
  40a9d9:	mov    rdi,QWORD PTR [rbp-0x20]
  40a9dd:	call   40a8a0 <gen_monster@@Base+0xf30>
  40a9e2:	add    rsp,0x20
  40a9e6:	pop    rbp
  40a9e7:	ret    
  40a9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a9f0:	push   rbp
  40a9f1:	mov    rbp,rsp
  40a9f4:	sub    rsp,0x10
  40a9f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a9fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa00:	mov    rax,QWORD PTR [rbp-0x8]
  40aa04:	mov    QWORD PTR [rbp-0x10],rdi
  40aa08:	mov    rdi,rax
  40aa0b:	call   405c30 <test_empty_monster@@Base+0x1e0>
  40aa10:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa14:	mov    esi,eax
  40aa16:	call   4169a0 <main@@Base+0x2c70>
  40aa1b:	add    rsp,0x10
  40aa1f:	pop    rbp
  40aa20:	ret    
  40aa21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa30:	push   rbp
  40aa31:	mov    rbp,rsp
  40aa34:	sub    rsp,0x30
  40aa38:	mov    QWORD PTR [rbp-0x10],rsi
  40aa3c:	mov    QWORD PTR [rbp-0x18],rdi
  40aa40:	movzx  eax,BYTE PTR [rbp-0x10]
  40aa44:	cmp    eax,0x0
  40aa47:	jne    40aa59 <gen_monster@@Base+0x10e9>
  40aa4d:	mov    DWORD PTR [rbp-0x4],0x0
  40aa54:	jmp    40aa9b <gen_monster@@Base+0x112b>
  40aa59:	mov    rdi,QWORD PTR [rbp-0x18]
  40aa5d:	mov    esi,0x8
  40aa62:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40aa67:	mov    QWORD PTR [rbp-0x20],rax
  40aa6b:	cmp    rax,0x0
  40aa6f:	je     40aa88 <gen_monster@@Base+0x1118>
  40aa75:	xor    eax,eax
  40aa77:	mov    ecx,DWORD PTR [rbp-0xc]
  40aa7a:	mov    rdx,QWORD PTR [rbp-0x20]
  40aa7e:	mov    DWORD PTR [rdx],ecx
  40aa80:	mov    DWORD PTR [rbp-0x24],eax
  40aa83:	jmp    40aa95 <gen_monster@@Base+0x1125>
  40aa88:	mov    eax,0xffffffff
  40aa8d:	mov    DWORD PTR [rbp-0x24],eax
  40aa90:	jmp    40aa95 <gen_monster@@Base+0x1125>
  40aa95:	mov    eax,DWORD PTR [rbp-0x24]
  40aa98:	mov    DWORD PTR [rbp-0x4],eax
  40aa9b:	mov    eax,DWORD PTR [rbp-0x4]
  40aa9e:	add    rsp,0x30
  40aaa2:	pop    rbp
  40aaa3:	ret    
  40aaa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aaae:	xchg   ax,ax
  40aab0:	push   rbp
  40aab1:	mov    rbp,rsp
  40aab4:	sub    rsp,0x30
  40aab8:	mov    QWORD PTR [rbp-0x10],rdi
  40aabc:	mov    BYTE PTR [rbp-0x11],sil
  40aac0:	movzx  eax,BYTE PTR [rbp-0x11]
  40aac4:	cmp    eax,0x0
  40aac7:	jne    40aad9 <gen_monster@@Base+0x1169>
  40aacd:	mov    DWORD PTR [rbp-0x4],0x0
  40aad4:	jmp    40ab25 <gen_monster@@Base+0x11b5>
  40aad9:	mov    rdi,QWORD PTR [rbp-0x10]
  40aadd:	mov    esi,0x7
  40aae2:	mov    edx,0x1
  40aae7:	mov    ecx,0x1
  40aaec:	call   41ce20 <flatcc_builder_table_add@@Base>
  40aaf1:	mov    QWORD PTR [rbp-0x20],rax
  40aaf5:	cmp    rax,0x0
  40aaf9:	je     40ab12 <gen_monster@@Base+0x11a2>
  40aaff:	xor    eax,eax
  40ab01:	mov    cl,BYTE PTR [rbp-0x11]
  40ab04:	mov    rdx,QWORD PTR [rbp-0x20]
  40ab08:	mov    BYTE PTR [rdx],cl
  40ab0a:	mov    DWORD PTR [rbp-0x24],eax
  40ab0d:	jmp    40ab1f <gen_monster@@Base+0x11af>
  40ab12:	mov    eax,0xffffffff
  40ab17:	mov    DWORD PTR [rbp-0x24],eax
  40ab1a:	jmp    40ab1f <gen_monster@@Base+0x11af>
  40ab1f:	mov    eax,DWORD PTR [rbp-0x24]
  40ab22:	mov    DWORD PTR [rbp-0x4],eax
  40ab25:	mov    eax,DWORD PTR [rbp-0x4]
  40ab28:	add    rsp,0x30
  40ab2c:	pop    rbp
  40ab2d:	ret    
  40ab2e:	xchg   ax,ax
  40ab30:	push   rbp
  40ab31:	mov    rbp,rsp
  40ab34:	sub    rsp,0x10
  40ab38:	mov    QWORD PTR [rbp-0x8],rdi
  40ab3c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ab40:	mov    rax,QWORD PTR [rbp-0x8]
  40ab44:	mov    QWORD PTR [rbp-0x10],rdi
  40ab48:	mov    rdi,rax
  40ab4b:	call   405c30 <test_empty_monster@@Base+0x1e0>
  40ab50:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab54:	mov    esi,eax
  40ab56:	call   40eee0 <test_create_add_field@@Base+0x170>
  40ab5b:	add    rsp,0x10
  40ab5f:	pop    rbp
  40ab60:	ret    
  40ab61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab70:	push   rbp
  40ab71:	mov    rbp,rsp
  40ab74:	sub    rsp,0x20
  40ab78:	mov    QWORD PTR [rbp-0x10],rdi
  40ab7c:	mov    BYTE PTR [rbp-0x11],sil
  40ab80:	movzx  eax,BYTE PTR [rbp-0x11]
  40ab84:	cmp    eax,0x1
  40ab87:	jne    40ab99 <gen_monster@@Base+0x1229>
  40ab8d:	mov    DWORD PTR [rbp-0x4],0x0
  40ab94:	jmp    40abdf <gen_monster@@Base+0x126f>
  40ab99:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab9d:	mov    esi,0xf
  40aba2:	mov    edx,0x1
  40aba7:	mov    ecx,0x1
  40abac:	call   41ce20 <flatcc_builder_table_add@@Base>
  40abb1:	mov    QWORD PTR [rbp-0x20],rax
  40abb5:	cmp    rax,0x0
  40abb9:	jne    40abcb <gen_monster@@Base+0x125b>
  40abbf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40abc6:	jmp    40abdf <gen_monster@@Base+0x126f>
  40abcb:	mov    rdi,QWORD PTR [rbp-0x20]
  40abcf:	movzx  esi,BYTE PTR [rbp-0x11]
  40abd3:	call   4169f0 <main@@Base+0x2cc0>
  40abd8:	mov    DWORD PTR [rbp-0x4],0x0
  40abdf:	mov    eax,DWORD PTR [rbp-0x4]
  40abe2:	add    rsp,0x20
  40abe6:	pop    rbp
  40abe7:	ret    
  40abe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40abf0:	push   rbp
  40abf1:	mov    rbp,rsp
  40abf4:	sub    rsp,0x10
  40abf8:	mov    QWORD PTR [rbp-0x8],rdi
  40abfc:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac00:	call   416a30 <main@@Base+0x2d00>
  40ac05:	add    rsp,0x10
  40ac09:	pop    rbp
  40ac0a:	ret    
  40ac0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac10:	push   rbp
  40ac11:	mov    rbp,rsp
  40ac14:	sub    rsp,0x10
  40ac18:	mov    QWORD PTR [rbp-0x8],rdi
  40ac1c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac20:	mov    rax,QWORD PTR [rbp-0x8]
  40ac24:	mov    QWORD PTR [rbp-0x10],rdi
  40ac28:	mov    rdi,rax
  40ac2b:	call   416ab0 <main@@Base+0x2d80>
  40ac30:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac34:	mov    esi,eax
  40ac36:	call   416a50 <main@@Base+0x2d20>
  40ac3b:	add    rsp,0x10
  40ac3f:	pop    rbp
  40ac40:	ret    
  40ac41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac50:	push   rbp
  40ac51:	mov    rbp,rsp
  40ac54:	sub    rsp,0x10
  40ac58:	mov    QWORD PTR [rbp-0x8],rdi
  40ac5c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac60:	mov    rax,QWORD PTR [rbp-0x8]
  40ac64:	mov    QWORD PTR [rbp-0x10],rdi
  40ac68:	mov    rdi,rax
  40ac6b:	call   405c30 <test_empty_monster@@Base+0x1e0>
  40ac70:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac74:	mov    esi,eax
  40ac76:	call   405c90 <test_empty_monster@@Base+0x240>
  40ac7b:	add    rsp,0x10
  40ac7f:	pop    rbp
  40ac80:	ret    
  40ac81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ac90 <test_monster@@Base>:
  40ac90:	push   rbp
  40ac91:	mov    rbp,rsp
  40ac94:	sub    rsp,0x30
  40ac98:	xor    esi,esi
  40ac9a:	mov    QWORD PTR [rbp-0x10],rdi
  40ac9e:	mov    rdi,QWORD PTR [rbp-0x10]
  40aca2:	call   409970 <gen_monster@@Base>
  40aca7:	mov    rdi,QWORD PTR [rbp-0x10]
  40acab:	lea    rsi,[rbp-0x20]
  40acaf:	mov    DWORD PTR [rbp-0x28],eax
  40acb2:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40acb7:	mov    rcx,QWORD PTR [rip+0x2633a]        # 430ff8 <stderr@GLIBC_2.2.5>
  40acbe:	mov    QWORD PTR [rbp-0x18],rax
  40acc2:	mov    rsi,QWORD PTR [rbp-0x18]
  40acc6:	mov    rdx,QWORD PTR [rbp-0x20]
  40acca:	mov    rcx,QWORD PTR [rcx]
  40accd:	lea    rdi,[rip+0x17708]        # 4223dc <_IO_stdin_used@@Base+0x3dc>
  40acd4:	call   404d60 <test_type_aliases@@Base+0x470>
  40acd9:	mov    rdi,QWORD PTR [rbp-0x18]
  40acdd:	mov    rsi,QWORD PTR [rbp-0x20]
  40ace1:	call   405d00 <test_empty_monster@@Base+0x2b0>
  40ace6:	mov    DWORD PTR [rbp-0x24],eax
  40ace9:	cmp    eax,0x0
  40acec:	je     40ad17 <test_monster@@Base+0x87>
  40acf2:	mov    edi,DWORD PTR [rbp-0x24]
  40acf5:	call   41f3a0 <flatcc_verify_error_string@@Base>
  40acfa:	lea    rdi,[rip+0x1847c]        # 42317d <_IO_stdin_used@@Base+0x117d>
  40ad01:	mov    rsi,rax
  40ad04:	mov    al,0x0
  40ad06:	call   404070 <printf@plt>
  40ad0b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ad12:	jmp    40ad32 <test_monster@@Base+0xa2>
  40ad17:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad1b:	call   406b50 <verify_monster@@Base>
  40ad20:	mov    DWORD PTR [rbp-0x24],eax
  40ad23:	mov    rdi,QWORD PTR [rbp-0x18]
  40ad27:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40ad2c:	mov    eax,DWORD PTR [rbp-0x24]
  40ad2f:	mov    DWORD PTR [rbp-0x4],eax
  40ad32:	mov    eax,DWORD PTR [rbp-0x4]
  40ad35:	add    rsp,0x30
  40ad39:	pop    rbp
  40ad3a:	ret    
  40ad3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ad40 <test_monster_with_size@@Base>:
  40ad40:	push   rbp
  40ad41:	mov    rbp,rsp
  40ad44:	sub    rsp,0x50
  40ad48:	mov    QWORD PTR [rbp-0x10],rdi
  40ad4c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad50:	mov    esi,0x1
  40ad55:	call   409970 <gen_monster@@Base>
  40ad5a:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad5e:	lea    rsi,[rbp-0x28]
  40ad62:	mov    DWORD PTR [rbp-0x40],eax
  40ad65:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40ad6a:	mov    rcx,QWORD PTR [rip+0x26287]        # 430ff8 <stderr@GLIBC_2.2.5>
  40ad71:	mov    QWORD PTR [rbp-0x20],rax
  40ad75:	mov    rsi,QWORD PTR [rbp-0x20]
  40ad79:	mov    rdx,QWORD PTR [rbp-0x28]
  40ad7d:	mov    rcx,QWORD PTR [rcx]
  40ad80:	lea    rdi,[rip+0x18420]        # 4231a7 <_IO_stdin_used@@Base+0x11a7>
  40ad87:	call   404d60 <test_type_aliases@@Base+0x470>
  40ad8c:	mov    rax,QWORD PTR [rbp-0x20]
  40ad90:	and    rax,0xf
  40ad96:	cmp    rax,0x0
  40ad9a:	je     40add1 <test_monster_with_size@@Base+0x91>
  40ada0:	lea    rdi,[rip+0x18418]        # 4231bf <_IO_stdin_used@@Base+0x11bf>
  40ada7:	mov    al,0x0
  40ada9:	call   404070 <printf@plt>
  40adae:	mov    rcx,QWORD PTR [rbp-0x20]
  40adb2:	lea    rdi,[rip+0x18457]        # 423210 <_IO_stdin_used@@Base+0x1210>
  40adb9:	mov    esi,ecx
  40adbb:	mov    DWORD PTR [rbp-0x44],eax
  40adbe:	mov    al,0x0
  40adc0:	call   404070 <printf@plt>
  40adc5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40adcc:	jmp    40ae7d <test_monster_with_size@@Base+0x13d>
  40add1:	mov    rdi,QWORD PTR [rbp-0x20]
  40add5:	lea    rsi,[rbp-0x30]
  40add9:	call   40ae90 <test_monster_with_size@@Base+0x150>
  40adde:	mov    QWORD PTR [rbp-0x18],rax
  40ade2:	mov    rax,QWORD PTR [rbp-0x28]
  40ade6:	sub    rax,0x4
  40adec:	mov    QWORD PTR [rbp-0x38],rax
  40adf0:	mov    rax,QWORD PTR [rbp-0x30]
  40adf4:	cmp    rax,QWORD PTR [rbp-0x38]
  40adf8:	je     40ae24 <test_monster_with_size@@Base+0xe4>
  40adfe:	mov    rax,QWORD PTR [rbp-0x30]
  40ae02:	mov    rcx,QWORD PTR [rbp-0x38]
  40ae06:	lea    rdi,[rip+0x18417]        # 423224 <_IO_stdin_used@@Base+0x1224>
  40ae0d:	mov    esi,eax
  40ae0f:	mov    edx,ecx
  40ae11:	mov    al,0x0
  40ae13:	call   404070 <printf@plt>
  40ae18:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ae1f:	jmp    40ae7d <test_monster_with_size@@Base+0x13d>
  40ae24:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae28:	mov    rsi,QWORD PTR [rbp-0x30]
  40ae2c:	call   405d00 <test_empty_monster@@Base+0x2b0>
  40ae31:	mov    DWORD PTR [rbp-0x3c],eax
  40ae34:	cmp    eax,0x0
  40ae37:	je     40ae62 <test_monster_with_size@@Base+0x122>
  40ae3d:	mov    edi,DWORD PTR [rbp-0x3c]
  40ae40:	call   41f3a0 <flatcc_verify_error_string@@Base>
  40ae45:	lea    rdi,[rip+0x1840e]        # 42325a <_IO_stdin_used@@Base+0x125a>
  40ae4c:	mov    rsi,rax
  40ae4f:	mov    al,0x0
  40ae51:	call   404070 <printf@plt>
  40ae56:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ae5d:	jmp    40ae7d <test_monster_with_size@@Base+0x13d>
  40ae62:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae66:	call   406b50 <verify_monster@@Base>
  40ae6b:	mov    DWORD PTR [rbp-0x3c],eax
  40ae6e:	mov    rdi,QWORD PTR [rbp-0x20]
  40ae72:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40ae77:	mov    eax,DWORD PTR [rbp-0x3c]
  40ae7a:	mov    DWORD PTR [rbp-0x4],eax
  40ae7d:	mov    eax,DWORD PTR [rbp-0x4]
  40ae80:	add    rsp,0x50
  40ae84:	pop    rbp
  40ae85:	ret    
  40ae86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae90:	push   rbp
  40ae91:	mov    rbp,rsp
  40ae94:	sub    rsp,0x10
  40ae98:	mov    QWORD PTR [rbp-0x8],rdi
  40ae9c:	mov    QWORD PTR [rbp-0x10],rsi
  40aea0:	cmp    QWORD PTR [rbp-0x10],0x0
  40aea5:	je     40aebf <test_monster_with_size@@Base+0x17f>
  40aeab:	mov    rdi,QWORD PTR [rbp-0x8]
  40aeaf:	call   4141e0 <main@@Base+0x4b0>
  40aeb4:	mov    eax,eax
  40aeb6:	mov    ecx,eax
  40aeb8:	mov    rdx,QWORD PTR [rbp-0x10]
  40aebc:	mov    QWORD PTR [rdx],rcx
  40aebf:	mov    rax,QWORD PTR [rbp-0x8]
  40aec3:	add    rax,0x4
  40aec9:	add    rsp,0x10
  40aecd:	pop    rbp
  40aece:	ret    
  40aecf:	nop

000000000040aed0 <test_string@@Base>:
  40aed0:	push   rbp
  40aed1:	mov    rbp,rsp
  40aed4:	sub    rsp,0x60
  40aed8:	mov    QWORD PTR [rbp-0x10],rdi
  40aedc:	mov    rdi,QWORD PTR [rbp-0x10]
  40aee0:	call   418ef0 <flatcc_builder_reset@@Base>
  40aee5:	mov    rdi,QWORD PTR [rbp-0x10]
  40aee9:	mov    DWORD PTR [rbp-0x2c],eax
  40aeec:	call   40a0d0 <gen_monster@@Base+0x760>
  40aef1:	mov    rdi,QWORD PTR [rbp-0x10]
  40aef5:	mov    DWORD PTR [rbp-0x30],eax
  40aef8:	call   40b130 <test_string@@Base+0x260>
  40aefd:	mov    rdi,QWORD PTR [rbp-0x10]
  40af01:	mov    esi,0x3
  40af06:	mov    DWORD PTR [rbp-0x34],eax
  40af09:	call   40b150 <test_string@@Base+0x280>
  40af0e:	mov    QWORD PTR [rbp-0x28],rax
  40af12:	mov    rax,QWORD PTR [rbp-0x28]
  40af16:	mov    BYTE PTR [rax],0x31
  40af19:	mov    rax,QWORD PTR [rbp-0x28]
  40af1d:	mov    BYTE PTR [rax+0x1],0x32
  40af21:	mov    rax,QWORD PTR [rbp-0x28]
  40af25:	mov    BYTE PTR [rax+0x2],0x33
  40af29:	mov    rdi,QWORD PTR [rbp-0x10]
  40af2d:	lea    rsi,[rip+0x18385]        # 4232b9 <_IO_stdin_used@@Base+0x12b9>
  40af34:	call   40b180 <test_string@@Base+0x2b0>
  40af39:	mov    rdi,QWORD PTR [rbp-0x10]
  40af3d:	mov    QWORD PTR [rbp-0x40],rax
  40af41:	call   40b1b0 <test_string@@Base+0x2e0>
  40af46:	cmp    rax,0x4
  40af4a:	jne    40af55 <test_string@@Base+0x85>
  40af50:	jmp    40af74 <test_string@@Base+0xa4>
  40af55:	lea    rdi,[rip+0x18339]        # 423295 <_IO_stdin_used@@Base+0x1295>
  40af5c:	lea    rsi,[rip+0x17c8c]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40af63:	mov    edx,0x438
  40af68:	lea    rcx,[rip+0x1834c]        # 4232bb <_IO_stdin_used@@Base+0x12bb>
  40af6f:	call   404090 <__assert_fail@plt>
  40af74:	mov    rdi,QWORD PTR [rbp-0x10]
  40af78:	lea    rsi,[rip+0x18360]        # 4232df <_IO_stdin_used@@Base+0x12df>
  40af7f:	mov    edx,0x1e
  40af84:	call   40b1d0 <test_string@@Base+0x300>
  40af89:	mov    rdi,QWORD PTR [rbp-0x10]
  40af8d:	mov    QWORD PTR [rbp-0x48],rax
  40af91:	call   40b1b0 <test_string@@Base+0x2e0>
  40af96:	cmp    rax,0x8
  40af9a:	jne    40afa5 <test_string@@Base+0xd5>
  40afa0:	jmp    40afc4 <test_string@@Base+0xf4>
  40afa5:	lea    rdi,[rip+0x18338]        # 4232e4 <_IO_stdin_used@@Base+0x12e4>
  40afac:	lea    rsi,[rip+0x17c3c]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40afb3:	mov    edx,0x43a
  40afb8:	lea    rcx,[rip+0x182fc]        # 4232bb <_IO_stdin_used@@Base+0x12bb>
  40afbf:	call   404090 <__assert_fail@plt>
  40afc4:	mov    rdi,QWORD PTR [rbp-0x10]
  40afc8:	lea    rsi,[rip+0x1833b]        # 42330a <_IO_stdin_used@@Base+0x130a>
  40afcf:	mov    edx,0x2
  40afd4:	call   40b200 <test_string@@Base+0x330>
  40afd9:	mov    rdi,QWORD PTR [rbp-0x10]
  40afdd:	mov    QWORD PTR [rbp-0x50],rax
  40afe1:	call   40b1b0 <test_string@@Base+0x2e0>
  40afe6:	cmp    rax,0xa
  40afea:	jne    40aff5 <test_string@@Base+0x125>
  40aff0:	jmp    40b014 <test_string@@Base+0x144>
  40aff5:	lea    rdi,[rip+0x18311]        # 42330d <_IO_stdin_used@@Base+0x130d>
  40affc:	lea    rsi,[rip+0x17bec]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40b003:	mov    edx,0x43c
  40b008:	lea    rcx,[rip+0x182ac]        # 4232bb <_IO_stdin_used@@Base+0x12bb>
  40b00f:	call   404090 <__assert_fail@plt>
  40b014:	mov    rdi,QWORD PTR [rbp-0x10]
  40b018:	mov    esi,0x3
  40b01d:	call   40b230 <test_string@@Base+0x360>
  40b022:	mov    rdi,QWORD PTR [rbp-0x10]
  40b026:	mov    DWORD PTR [rbp-0x54],eax
  40b029:	call   40b1b0 <test_string@@Base+0x2e0>
  40b02e:	cmp    rax,0x7
  40b032:	jne    40b03d <test_string@@Base+0x16d>
  40b038:	jmp    40b05c <test_string@@Base+0x18c>
  40b03d:	lea    rdi,[rip+0x182f0]        # 423334 <_IO_stdin_used@@Base+0x1334>
  40b044:	lea    rsi,[rip+0x17ba4]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40b04b:	mov    edx,0x43e
  40b050:	lea    rcx,[rip+0x18264]        # 4232bb <_IO_stdin_used@@Base+0x12bb>
  40b057:	call   404090 <__assert_fail@plt>
  40b05c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b060:	call   40b260 <test_string@@Base+0x390>
  40b065:	mov    QWORD PTR [rbp-0x28],rax
  40b069:	mov    rax,QWORD PTR [rbp-0x28]
  40b06d:	mov    BYTE PTR [rax+0x4],0x2e
  40b071:	mov    rdi,QWORD PTR [rbp-0x10]
  40b075:	call   40b280 <test_string@@Base+0x3b0>
  40b07a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b07e:	mov    DWORD PTR [rbp-0x58],eax
  40b081:	call   40ac50 <gen_monster@@Base+0x12e0>
  40b086:	xor    ecx,ecx
  40b088:	mov    esi,ecx
  40b08a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b08e:	mov    DWORD PTR [rbp-0x5c],eax
  40b091:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  40b096:	mov    QWORD PTR [rbp-0x20],rax
  40b09a:	cmp    QWORD PTR [rbp-0x20],0x0
  40b09f:	je     40b0aa <test_string@@Base+0x1da>
  40b0a5:	jmp    40b0c9 <test_string@@Base+0x1f9>
  40b0aa:	lea    rdi,[rip+0x18ab6]        # 423b67 <_IO_stdin_used@@Base+0x1b67>
  40b0b1:	lea    rsi,[rip+0x17b37]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40b0b8:	mov    edx,0x445
  40b0bd:	lea    rcx,[rip+0x181f7]        # 4232bb <_IO_stdin_used@@Base+0x12bb>
  40b0c4:	call   404090 <__assert_fail@plt>
  40b0c9:	mov    rdi,QWORD PTR [rbp-0x20]
  40b0cd:	call   404480 <verify_empty_monster@@Base+0x260>
  40b0d2:	mov    QWORD PTR [rbp-0x18],rax
  40b0d6:	mov    rdi,QWORD PTR [rbp-0x18]
  40b0da:	call   407e10 <verify_monster@@Base+0x12c0>
  40b0df:	lea    rsi,[rip+0x18274]        # 42335a <_IO_stdin_used@@Base+0x135a>
  40b0e6:	mov    rdi,rax
  40b0e9:	call   4040d0 <strcmp@plt>
  40b0ee:	cmp    eax,0x0
  40b0f1:	je     40b111 <test_string@@Base+0x241>
  40b0f7:	lea    rdi,[rip+0x18264]        # 423362 <_IO_stdin_used@@Base+0x1362>
  40b0fe:	mov    al,0x0
  40b100:	call   404070 <printf@plt>
  40b105:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b10c:	jmp    40b118 <test_string@@Base+0x248>
  40b111:	mov    DWORD PTR [rbp-0x4],0x0
  40b118:	mov    eax,DWORD PTR [rbp-0x4]
  40b11b:	add    rsp,0x60
  40b11f:	pop    rbp
  40b120:	ret    
  40b121:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b12b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b130:	push   rbp
  40b131:	mov    rbp,rsp
  40b134:	sub    rsp,0x10
  40b138:	mov    QWORD PTR [rbp-0x8],rdi
  40b13c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b140:	call   41b380 <flatcc_builder_start_string@@Base>
  40b145:	add    rsp,0x10
  40b149:	pop    rbp
  40b14a:	ret    
  40b14b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b150:	push   rbp
  40b151:	mov    rbp,rsp
  40b154:	sub    rsp,0x10
  40b158:	mov    QWORD PTR [rbp-0x8],rdi
  40b15c:	mov    QWORD PTR [rbp-0x10],rsi
  40b160:	mov    rdi,QWORD PTR [rbp-0x8]
  40b164:	mov    rsi,QWORD PTR [rbp-0x10]
  40b168:	call   41aba0 <flatcc_builder_extend_string@@Base>
  40b16d:	add    rsp,0x10
  40b171:	pop    rbp
  40b172:	ret    
  40b173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b17d:	nop    DWORD PTR [rax]
  40b180:	push   rbp
  40b181:	mov    rbp,rsp
  40b184:	sub    rsp,0x10
  40b188:	mov    QWORD PTR [rbp-0x8],rdi
  40b18c:	mov    QWORD PTR [rbp-0x10],rsi
  40b190:	mov    rdi,QWORD PTR [rbp-0x8]
  40b194:	mov    rsi,QWORD PTR [rbp-0x10]
  40b198:	call   41acd0 <flatcc_builder_append_string_str@@Base>
  40b19d:	add    rsp,0x10
  40b1a1:	pop    rbp
  40b1a2:	ret    
  40b1a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1ad:	nop    DWORD PTR [rax]
  40b1b0:	push   rbp
  40b1b1:	mov    rbp,rsp
  40b1b4:	sub    rsp,0x10
  40b1b8:	mov    QWORD PTR [rbp-0x8],rdi
  40b1bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40b1c0:	call   41db10 <flatcc_builder_string_len@@Base>
  40b1c5:	add    rsp,0x10
  40b1c9:	pop    rbp
  40b1ca:	ret    
  40b1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1d0:	push   rbp
  40b1d1:	mov    rbp,rsp
  40b1d4:	sub    rsp,0x20
  40b1d8:	mov    QWORD PTR [rbp-0x8],rdi
  40b1dc:	mov    QWORD PTR [rbp-0x10],rsi
  40b1e0:	mov    QWORD PTR [rbp-0x18],rdx
  40b1e4:	mov    rdi,QWORD PTR [rbp-0x8]
  40b1e8:	mov    rsi,QWORD PTR [rbp-0x10]
  40b1ec:	mov    rdx,QWORD PTR [rbp-0x18]
  40b1f0:	call   41ad20 <flatcc_builder_append_string_strn@@Base>
  40b1f5:	add    rsp,0x20
  40b1f9:	pop    rbp
  40b1fa:	ret    
  40b1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b200:	push   rbp
  40b201:	mov    rbp,rsp
  40b204:	sub    rsp,0x20
  40b208:	mov    QWORD PTR [rbp-0x8],rdi
  40b20c:	mov    QWORD PTR [rbp-0x10],rsi
  40b210:	mov    QWORD PTR [rbp-0x18],rdx
  40b214:	mov    rdi,QWORD PTR [rbp-0x8]
  40b218:	mov    rsi,QWORD PTR [rbp-0x10]
  40b21c:	mov    rdx,QWORD PTR [rbp-0x18]
  40b220:	call   41ac30 <flatcc_builder_append_string@@Base>
  40b225:	add    rsp,0x20
  40b229:	pop    rbp
  40b22a:	ret    
  40b22b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b230:	push   rbp
  40b231:	mov    rbp,rsp
  40b234:	sub    rsp,0x10
  40b238:	mov    QWORD PTR [rbp-0x8],rdi
  40b23c:	mov    QWORD PTR [rbp-0x10],rsi
  40b240:	mov    rdi,QWORD PTR [rbp-0x8]
  40b244:	mov    rsi,QWORD PTR [rbp-0x10]
  40b248:	call   41b010 <flatcc_builder_truncate_string@@Base>
  40b24d:	add    rsp,0x10
  40b251:	pop    rbp
  40b252:	ret    
  40b253:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b25d:	nop    DWORD PTR [rax]
  40b260:	push   rbp
  40b261:	mov    rbp,rsp
  40b264:	sub    rsp,0x10
  40b268:	mov    QWORD PTR [rbp-0x8],rdi
  40b26c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b270:	call   41daf0 <flatcc_builder_string_edit@@Base>
  40b275:	add    rsp,0x10
  40b279:	pop    rbp
  40b27a:	ret    
  40b27b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b280:	push   rbp
  40b281:	mov    rbp,rsp
  40b284:	sub    rsp,0x10
  40b288:	mov    QWORD PTR [rbp-0x8],rdi
  40b28c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b290:	mov    rax,QWORD PTR [rbp-0x8]
  40b294:	mov    QWORD PTR [rbp-0x10],rdi
  40b298:	mov    rdi,rax
  40b29b:	call   41da20 <flatcc_builder_end_string@@Base>
  40b2a0:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2a4:	mov    esi,eax
  40b2a6:	call   40a550 <gen_monster@@Base+0xbe0>
  40b2ab:	add    rsp,0x10
  40b2af:	pop    rbp
  40b2b0:	ret    
  40b2b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b2c0 <test_sort_find@@Base>:
  40b2c0:	push   rbp
  40b2c1:	mov    rbp,rsp
  40b2c4:	sub    rsp,0xc0
  40b2cb:	mov    QWORD PTR [rbp-0x8],rdi
  40b2cf:	mov    DWORD PTR [rbp-0x3c],0xffffffff
  40b2d6:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2da:	call   418ef0 <flatcc_builder_reset@@Base>
  40b2df:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2e3:	mov    DWORD PTR [rbp-0x40],eax
  40b2e6:	call   40a0d0 <gen_monster@@Base+0x760>
  40b2eb:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2ef:	lea    rsi,[rip+0x17061]        # 422357 <_IO_stdin_used@@Base+0x357>
  40b2f6:	mov    DWORD PTR [rbp-0x44],eax
  40b2f9:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b2fe:	mov    rdi,QWORD PTR [rbp-0x8]
  40b302:	mov    DWORD PTR [rbp-0x48],eax
  40b305:	call   40a5b0 <gen_monster@@Base+0xc40>
  40b30a:	mov    rdi,QWORD PTR [rbp-0x8]
  40b30e:	mov    DWORD PTR [rbp-0x4c],eax
  40b311:	call   40a600 <gen_monster@@Base+0xc90>
  40b316:	mov    rdi,QWORD PTR [rbp-0x8]
  40b31a:	lea    rsi,[rip+0x17964]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40b321:	mov    DWORD PTR [rbp-0x50],eax
  40b324:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b329:	mov    rdi,QWORD PTR [rbp-0x8]
  40b32d:	mov    DWORD PTR [rbp-0x54],eax
  40b330:	call   40a670 <gen_monster@@Base+0xd00>
  40b335:	mov    rdi,QWORD PTR [rbp-0x8]
  40b339:	mov    QWORD PTR [rbp-0x60],rax
  40b33d:	call   40a600 <gen_monster@@Base+0xc90>
  40b342:	mov    rdi,QWORD PTR [rbp-0x8]
  40b346:	lea    rsi,[rip+0x17998]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40b34d:	mov    DWORD PTR [rbp-0x64],eax
  40b350:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b355:	mov    rdi,QWORD PTR [rbp-0x8]
  40b359:	mov    DWORD PTR [rbp-0x68],eax
  40b35c:	call   40a670 <gen_monster@@Base+0xd00>
  40b361:	mov    rdi,QWORD PTR [rbp-0x8]
  40b365:	mov    QWORD PTR [rbp-0x70],rax
  40b369:	call   40a600 <gen_monster@@Base+0xc90>
  40b36e:	mov    rdi,QWORD PTR [rbp-0x8]
  40b372:	lea    rsi,[rip+0x17994]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40b379:	mov    DWORD PTR [rbp-0x74],eax
  40b37c:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b381:	mov    rdi,QWORD PTR [rbp-0x8]
  40b385:	mov    DWORD PTR [rbp-0x78],eax
  40b388:	call   40a670 <gen_monster@@Base+0xd00>
  40b38d:	mov    rdi,QWORD PTR [rbp-0x8]
  40b391:	mov    QWORD PTR [rbp-0x80],rax
  40b395:	call   40a600 <gen_monster@@Base+0xc90>
  40b39a:	mov    rdi,QWORD PTR [rbp-0x8]
  40b39e:	lea    rsi,[rip+0x17fd1]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40b3a5:	mov    DWORD PTR [rbp-0x84],eax
  40b3ab:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b3b0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3b4:	mov    DWORD PTR [rbp-0x88],eax
  40b3ba:	call   40a670 <gen_monster@@Base+0xd00>
  40b3bf:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3c3:	mov    QWORD PTR [rbp-0x90],rax
  40b3ca:	call   40a600 <gen_monster@@Base+0xc90>
  40b3cf:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3d3:	lea    rsi,[rip+0x17933]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40b3da:	mov    DWORD PTR [rbp-0x94],eax
  40b3e0:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40b3e5:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3e9:	mov    DWORD PTR [rbp-0x98],eax
  40b3ef:	call   40a670 <gen_monster@@Base+0xd00>
  40b3f4:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3f8:	mov    QWORD PTR [rbp-0xa0],rax
  40b3ff:	call   40a750 <gen_monster@@Base+0xde0>
  40b404:	mov    rdi,QWORD PTR [rbp-0x8]
  40b408:	mov    DWORD PTR [rbp-0xa4],eax
  40b40e:	call   40ac50 <gen_monster@@Base+0x12e0>
  40b413:	mov    rdi,QWORD PTR [rbp-0x8]
  40b417:	lea    rsi,[rbp-0x38]
  40b41b:	mov    DWORD PTR [rbp-0xa8],eax
  40b421:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40b426:	mov    rcx,QWORD PTR [rip+0x25bcb]        # 430ff8 <stderr@GLIBC_2.2.5>
  40b42d:	mov    QWORD PTR [rbp-0x30],rax
  40b431:	mov    rsi,QWORD PTR [rbp-0x30]
  40b435:	mov    rdx,QWORD PTR [rbp-0x38]
  40b439:	mov    rcx,QWORD PTR [rcx]
  40b43c:	lea    rdi,[rip+0x17f39]        # 42337c <_IO_stdin_used@@Base+0x137c>
  40b443:	call   404d60 <test_type_aliases@@Base+0x470>
  40b448:	mov    rdi,QWORD PTR [rbp-0x30]
  40b44c:	call   404480 <verify_empty_monster@@Base+0x260>
  40b451:	mov    QWORD PTR [rbp-0x18],rax
  40b455:	mov    rdi,QWORD PTR [rbp-0x18]
  40b459:	call   4088a0 <verify_monster@@Base+0x1d50>
  40b45e:	mov    QWORD PTR [rbp-0x20],rax
  40b462:	cmp    QWORD PTR [rbp-0x20],0x0
  40b467:	je     40b472 <test_sort_find@@Base+0x1b2>
  40b46d:	jmp    40b491 <test_sort_find@@Base+0x1d1>
  40b472:	lea    rdi,[rip+0x17f1b]        # 423394 <_IO_stdin_used@@Base+0x1394>
  40b479:	lea    rsi,[rip+0x1776f]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40b480:	mov    edx,0x47b
  40b485:	lea    rcx,[rip+0x17f11]        # 42339d <_IO_stdin_used@@Base+0x139d>
  40b48c:	call   404090 <__assert_fail@plt>
  40b491:	mov    rax,QWORD PTR [rbp-0x20]
  40b495:	mov    QWORD PTR [rbp-0x28],rax
  40b499:	mov    rdi,QWORD PTR [rbp-0x28]
  40b49d:	call   40b880 <test_sort_find@@Base+0x5c0>
  40b4a2:	mov    rax,QWORD PTR [rip+0x25b4f]        # 430ff8 <stderr@GLIBC_2.2.5>
  40b4a9:	mov    rsi,QWORD PTR [rbp-0x30]
  40b4ad:	mov    rdx,QWORD PTR [rbp-0x38]
  40b4b1:	mov    rcx,QWORD PTR [rax]
  40b4b4:	lea    rdi,[rip+0x17ec3]        # 42337e <_IO_stdin_used@@Base+0x137e>
  40b4bb:	call   404d60 <test_type_aliases@@Base+0x470>
  40b4c0:	mov    rdi,QWORD PTR [rbp-0x20]
  40b4c4:	call   4089d0 <verify_monster@@Base+0x1e80>
  40b4c9:	cmp    rax,0x5
  40b4cd:	je     40b4e6 <test_sort_find@@Base+0x226>
  40b4d3:	lea    rdi,[rip+0x17eea]        # 4233c4 <_IO_stdin_used@@Base+0x13c4>
  40b4da:	mov    al,0x0
  40b4dc:	call   404070 <printf@plt>
  40b4e1:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b4e6:	xor    eax,eax
  40b4e8:	mov    esi,eax
  40b4ea:	mov    rdi,QWORD PTR [rbp-0x20]
  40b4ee:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b4f3:	mov    rdi,rax
  40b4f6:	call   407e10 <verify_monster@@Base+0x12c0>
  40b4fb:	lea    rsi,[rip+0x17e74]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40b502:	mov    rdi,rax
  40b505:	call   4040d0 <strcmp@plt>
  40b50a:	cmp    eax,0x0
  40b50d:	je     40b526 <test_sort_find@@Base+0x266>
  40b513:	lea    rdi,[rip+0x17ed2]        # 4233ec <_IO_stdin_used@@Base+0x13ec>
  40b51a:	mov    al,0x0
  40b51c:	call   404070 <printf@plt>
  40b521:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b526:	mov    rdi,QWORD PTR [rbp-0x20]
  40b52a:	mov    esi,0x1
  40b52f:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b534:	mov    rdi,rax
  40b537:	call   407e10 <verify_monster@@Base+0x12c0>
  40b53c:	lea    rsi,[rip+0x177ca]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40b543:	mov    rdi,rax
  40b546:	call   4040d0 <strcmp@plt>
  40b54b:	cmp    eax,0x0
  40b54e:	je     40b567 <test_sort_find@@Base+0x2a7>
  40b554:	lea    rdi,[rip+0x17eaf]        # 42340a <_IO_stdin_used@@Base+0x140a>
  40b55b:	mov    al,0x0
  40b55d:	call   404070 <printf@plt>
  40b562:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b567:	mov    rdi,QWORD PTR [rbp-0x20]
  40b56b:	mov    esi,0x2
  40b570:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b575:	mov    rdi,rax
  40b578:	call   407e10 <verify_monster@@Base+0x12c0>
  40b57d:	lea    rsi,[rip+0x17789]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40b584:	mov    rdi,rax
  40b587:	call   4040d0 <strcmp@plt>
  40b58c:	cmp    eax,0x0
  40b58f:	je     40b5a8 <test_sort_find@@Base+0x2e8>
  40b595:	lea    rdi,[rip+0x17e8c]        # 423428 <_IO_stdin_used@@Base+0x1428>
  40b59c:	mov    al,0x0
  40b59e:	call   404070 <printf@plt>
  40b5a3:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b5a8:	mov    rdi,QWORD PTR [rbp-0x20]
  40b5ac:	mov    esi,0x3
  40b5b1:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b5b6:	mov    rdi,rax
  40b5b9:	call   407e10 <verify_monster@@Base+0x12c0>
  40b5be:	lea    rsi,[rip+0x17720]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40b5c5:	mov    rdi,rax
  40b5c8:	call   4040d0 <strcmp@plt>
  40b5cd:	cmp    eax,0x0
  40b5d0:	je     40b5e9 <test_sort_find@@Base+0x329>
  40b5d6:	lea    rdi,[rip+0x17e69]        # 423446 <_IO_stdin_used@@Base+0x1446>
  40b5dd:	mov    al,0x0
  40b5df:	call   404070 <printf@plt>
  40b5e4:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b5e9:	mov    rdi,QWORD PTR [rbp-0x20]
  40b5ed:	mov    esi,0x4
  40b5f2:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b5f7:	mov    rdi,rax
  40b5fa:	call   407e10 <verify_monster@@Base+0x12c0>
  40b5ff:	lea    rsi,[rip+0x1767f]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40b606:	mov    rdi,rax
  40b609:	call   4040d0 <strcmp@plt>
  40b60e:	cmp    eax,0x0
  40b611:	je     40b62a <test_sort_find@@Base+0x36a>
  40b617:	lea    rdi,[rip+0x17e46]        # 423464 <_IO_stdin_used@@Base+0x1464>
  40b61e:	mov    al,0x0
  40b620:	call   404070 <printf@plt>
  40b625:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b62a:	mov    rdi,QWORD PTR [rbp-0x20]
  40b62e:	mov    esi,0x1
  40b633:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b638:	mov    rdi,QWORD PTR [rbp-0x20]
  40b63c:	mov    esi,0x2
  40b641:	mov    QWORD PTR [rbp-0xb0],rax
  40b648:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b64d:	mov    rcx,QWORD PTR [rbp-0xb0]
  40b654:	cmp    rcx,rax
  40b657:	jne    40b670 <test_sort_find@@Base+0x3b0>
  40b65d:	lea    rdi,[rip+0x17e1e]        # 423482 <_IO_stdin_used@@Base+0x1482>
  40b664:	mov    al,0x0
  40b666:	call   404070 <printf@plt>
  40b66b:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b670:	mov    rdi,QWORD PTR [rbp-0x20]
  40b674:	lea    rsi,[rip+0x1766a]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40b67b:	call   40b8a0 <test_sort_find@@Base+0x5e0>
  40b680:	mov    ecx,0x3
  40b685:	cmp    rcx,rax
  40b688:	je     40b6a1 <test_sort_find@@Base+0x3e1>
  40b68e:	lea    rdi,[rip+0x17e35]        # 4234ca <_IO_stdin_used@@Base+0x14ca>
  40b695:	mov    al,0x0
  40b697:	call   404070 <printf@plt>
  40b69c:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b6a1:	mov    rdi,QWORD PTR [rbp-0x20]
  40b6a5:	lea    rsi,[rip+0x17e4a]        # 4234f6 <_IO_stdin_used@@Base+0x14f6>
  40b6ac:	mov    edx,0x5
  40b6b1:	call   40b8d0 <test_sort_find@@Base+0x610>
  40b6b6:	mov    ecx,0x3
  40b6bb:	cmp    rcx,rax
  40b6be:	je     40b6d7 <test_sort_find@@Base+0x417>
  40b6c4:	lea    rdi,[rip+0x17e32]        # 4234fd <_IO_stdin_used@@Base+0x14fd>
  40b6cb:	mov    al,0x0
  40b6cd:	call   404070 <printf@plt>
  40b6d2:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b6d7:	mov    rdi,QWORD PTR [rbp-0x20]
  40b6db:	lea    rsi,[rip+0x17603]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40b6e2:	call   40b900 <test_sort_find@@Base+0x640>
  40b6e7:	mov    ecx,0x3
  40b6ec:	cmp    rcx,rax
  40b6ef:	je     40b708 <test_sort_find@@Base+0x448>
  40b6f5:	lea    rdi,[rip+0x17e34]        # 423530 <_IO_stdin_used@@Base+0x1530>
  40b6fc:	mov    al,0x0
  40b6fe:	call   404070 <printf@plt>
  40b703:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b708:	mov    rdi,QWORD PTR [rbp-0x20]
  40b70c:	lea    rsi,[rip+0x17e3a]        # 42354d <_IO_stdin_used@@Base+0x154d>
  40b713:	mov    edx,0x5
  40b718:	call   40ba30 <test_sort_find@@Base+0x770>
  40b71d:	mov    ecx,0x3
  40b722:	cmp    rcx,rax
  40b725:	je     40b73e <test_sort_find@@Base+0x47e>
  40b72b:	lea    rdi,[rip+0x17e22]        # 423554 <_IO_stdin_used@@Base+0x1554>
  40b732:	mov    al,0x0
  40b734:	call   404070 <printf@plt>
  40b739:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b73e:	mov    rax,QWORD PTR [rip+0x25963]        # 4310a8 <__data_start@@Base+0x10>
  40b745:	mov    rdi,QWORD PTR [rbp-0x20]
  40b749:	lea    rsi,[rip+0x17e28]        # 423578 <_IO_stdin_used@@Base+0x1578>
  40b750:	mov    QWORD PTR [rbp-0xb8],rax
  40b757:	call   40b900 <test_sort_find@@Base+0x640>
  40b75c:	mov    rcx,QWORD PTR [rbp-0xb8]
  40b763:	cmp    rcx,rax
  40b766:	je     40b77f <test_sort_find@@Base+0x4bf>
  40b76c:	lea    rdi,[rip+0x17e0c]        # 42357f <_IO_stdin_used@@Base+0x157f>
  40b773:	mov    al,0x0
  40b775:	call   404070 <printf@plt>
  40b77a:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b77f:	mov    rdi,QWORD PTR [rbp-0x20]
  40b783:	lea    rsi,[rip+0x17bec]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40b78a:	call   40b900 <test_sort_find@@Base+0x640>
  40b78f:	xor    ecx,ecx
  40b791:	mov    edx,ecx
  40b793:	cmp    rdx,rax
  40b796:	je     40b7af <test_sort_find@@Base+0x4ef>
  40b79c:	lea    rdi,[rip+0x17df3]        # 423596 <_IO_stdin_used@@Base+0x1596>
  40b7a3:	mov    al,0x0
  40b7a5:	call   404070 <printf@plt>
  40b7aa:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b7af:	mov    rdi,QWORD PTR [rbp-0x20]
  40b7b3:	lea    rsi,[rip+0x17553]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40b7ba:	call   40b900 <test_sort_find@@Base+0x640>
  40b7bf:	mov    QWORD PTR [rbp-0x10],rax
  40b7c3:	mov    ecx,0x1
  40b7c8:	cmp    rcx,rax
  40b7cb:	je     40b7fe <test_sort_find@@Base+0x53e>
  40b7d1:	lea    rdi,[rip+0x17ee5]        # 4236bd <_IO_stdin_used@@Base+0x16bd>
  40b7d8:	mov    al,0x0
  40b7da:	call   404070 <printf@plt>
  40b7df:	mov    rcx,QWORD PTR [rbp-0x10]
  40b7e3:	lea    rdi,[rip+0x17dbd]        # 4235a7 <_IO_stdin_used@@Base+0x15a7>
  40b7ea:	mov    esi,ecx
  40b7ec:	mov    DWORD PTR [rbp-0xbc],eax
  40b7f2:	mov    al,0x0
  40b7f4:	call   404070 <printf@plt>
  40b7f9:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b7fe:	mov    rdi,QWORD PTR [rbp-0x20]
  40b802:	lea    rsi,[rip+0x1747c]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40b809:	call   40b900 <test_sort_find@@Base+0x640>
  40b80e:	mov    QWORD PTR [rbp-0x10],rax
  40b812:	mov    ecx,0x4
  40b817:	cmp    rcx,rax
  40b81a:	je     40b84d <test_sort_find@@Base+0x58d>
  40b820:	lea    rdi,[rip+0x17d88]        # 4235af <_IO_stdin_used@@Base+0x15af>
  40b827:	mov    al,0x0
  40b829:	call   404070 <printf@plt>
  40b82e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b832:	lea    rdi,[rip+0x17d6e]        # 4235a7 <_IO_stdin_used@@Base+0x15a7>
  40b839:	mov    esi,ecx
  40b83b:	mov    DWORD PTR [rbp-0xc0],eax
  40b841:	mov    al,0x0
  40b843:	call   404070 <printf@plt>
  40b848:	jmp    40b85d <test_sort_find@@Base+0x59d>
  40b84d:	mov    rdi,QWORD PTR [rbp-0x28]
  40b851:	call   40b880 <test_sort_find@@Base+0x5c0>
  40b856:	mov    DWORD PTR [rbp-0x3c],0x0
  40b85d:	mov    rdi,QWORD PTR [rbp-0x30]
  40b861:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40b866:	mov    eax,DWORD PTR [rbp-0x3c]
  40b869:	add    rsp,0xc0
  40b870:	pop    rbp
  40b871:	ret    
  40b872:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b87c:	nop    DWORD PTR [rax+0x0]
  40b880:	push   rbp
  40b881:	mov    rbp,rsp
  40b884:	sub    rsp,0x10
  40b888:	mov    QWORD PTR [rbp-0x8],rdi
  40b88c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b890:	call   416b10 <main@@Base+0x2de0>
  40b895:	add    rsp,0x10
  40b899:	pop    rbp
  40b89a:	ret    
  40b89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8a0:	push   rbp
  40b8a1:	mov    rbp,rsp
  40b8a4:	sub    rsp,0x10
  40b8a8:	mov    QWORD PTR [rbp-0x8],rdi
  40b8ac:	mov    QWORD PTR [rbp-0x10],rsi
  40b8b0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b8b4:	mov    rsi,QWORD PTR [rbp-0x10]
  40b8b8:	call   40b900 <test_sort_find@@Base+0x640>
  40b8bd:	add    rsp,0x10
  40b8c1:	pop    rbp
  40b8c2:	ret    
  40b8c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b8cd:	nop    DWORD PTR [rax]
  40b8d0:	push   rbp
  40b8d1:	mov    rbp,rsp
  40b8d4:	sub    rsp,0x20
  40b8d8:	mov    QWORD PTR [rbp-0x8],rdi
  40b8dc:	mov    QWORD PTR [rbp-0x10],rsi
  40b8e0:	mov    DWORD PTR [rbp-0x14],edx
  40b8e3:	mov    rdi,QWORD PTR [rbp-0x8]
  40b8e7:	mov    rsi,QWORD PTR [rbp-0x10]
  40b8eb:	mov    edx,DWORD PTR [rbp-0x14]
  40b8ee:	call   40ba30 <test_sort_find@@Base+0x770>
  40b8f3:	add    rsp,0x20
  40b8f7:	pop    rbp
  40b8f8:	ret    
  40b8f9:	nop    DWORD PTR [rax+0x0]
  40b900:	push   rbp
  40b901:	mov    rbp,rsp
  40b904:	sub    rsp,0x40
  40b908:	mov    QWORD PTR [rbp-0x10],rdi
  40b90c:	mov    QWORD PTR [rbp-0x18],rsi
  40b910:	mov    QWORD PTR [rbp-0x28],0x0
  40b918:	mov    rdi,QWORD PTR [rbp-0x10]
  40b91c:	call   4089d0 <verify_monster@@Base+0x1e80>
  40b921:	mov    QWORD PTR [rbp-0x30],rax
  40b925:	cmp    rax,0x0
  40b929:	jne    40b93f <test_sort_find@@Base+0x67f>
  40b92f:	mov    rax,QWORD PTR [rip+0x25772]        # 4310a8 <__data_start@@Base+0x10>
  40b936:	mov    QWORD PTR [rbp-0x8],rax
  40b93a:	jmp    40ba21 <test_sort_find@@Base+0x761>
  40b93f:	mov    rax,QWORD PTR [rbp-0x30]
  40b943:	add    rax,0xffffffffffffffff
  40b949:	mov    QWORD PTR [rbp-0x30],rax
  40b94d:	mov    rax,QWORD PTR [rbp-0x28]
  40b951:	cmp    rax,QWORD PTR [rbp-0x30]
  40b955:	jae    40b9c3 <test_sort_find@@Base+0x703>
  40b95b:	mov    rax,QWORD PTR [rbp-0x28]
  40b95f:	mov    rcx,QWORD PTR [rbp-0x30]
  40b963:	sub    rcx,QWORD PTR [rbp-0x28]
  40b967:	shr    rcx,0x1
  40b96b:	add    rax,rcx
  40b96e:	mov    QWORD PTR [rbp-0x38],rax
  40b972:	mov    rdi,QWORD PTR [rbp-0x10]
  40b976:	mov    rsi,QWORD PTR [rbp-0x38]
  40b97a:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b97f:	mov    rdi,rax
  40b982:	call   407e10 <verify_monster@@Base+0x12c0>
  40b987:	xor    edx,edx
  40b989:	mov    QWORD PTR [rbp-0x20],rax
  40b98d:	mov    rdi,QWORD PTR [rbp-0x20]
  40b991:	mov    rsi,QWORD PTR [rbp-0x18]
  40b995:	call   416ef0 <main@@Base+0x31c0>
  40b99a:	cmp    eax,0x0
  40b99d:	jge    40b9b6 <test_sort_find@@Base+0x6f6>
  40b9a3:	mov    rax,QWORD PTR [rbp-0x38]
  40b9a7:	add    rax,0x1
  40b9ad:	mov    QWORD PTR [rbp-0x28],rax
  40b9b1:	jmp    40b9be <test_sort_find@@Base+0x6fe>
  40b9b6:	mov    rax,QWORD PTR [rbp-0x38]
  40b9ba:	mov    QWORD PTR [rbp-0x30],rax
  40b9be:	jmp    40b94d <test_sort_find@@Base+0x68d>
  40b9c3:	mov    rax,QWORD PTR [rbp-0x28]
  40b9c7:	cmp    rax,QWORD PTR [rbp-0x30]
  40b9cb:	jne    40ba16 <test_sort_find@@Base+0x756>
  40b9d1:	mov    rdi,QWORD PTR [rbp-0x10]
  40b9d5:	mov    rsi,QWORD PTR [rbp-0x28]
  40b9d9:	call   408a20 <verify_monster@@Base+0x1ed0>
  40b9de:	mov    rdi,rax
  40b9e1:	call   407e10 <verify_monster@@Base+0x12c0>
  40b9e6:	xor    ecx,ecx
  40b9e8:	mov    edx,ecx
  40b9ea:	mov    QWORD PTR [rbp-0x20],rax
  40b9ee:	mov    rdi,QWORD PTR [rbp-0x20]
  40b9f2:	mov    rsi,QWORD PTR [rbp-0x18]
  40b9f6:	call   416ef0 <main@@Base+0x31c0>
  40b9fb:	cmp    eax,0x0
  40b9fe:	jne    40ba11 <test_sort_find@@Base+0x751>
  40ba04:	mov    rax,QWORD PTR [rbp-0x28]
  40ba08:	mov    QWORD PTR [rbp-0x8],rax
  40ba0c:	jmp    40ba21 <test_sort_find@@Base+0x761>
  40ba11:	jmp    40ba16 <test_sort_find@@Base+0x756>
  40ba16:	mov    rax,QWORD PTR [rip+0x2568b]        # 4310a8 <__data_start@@Base+0x10>
  40ba1d:	mov    QWORD PTR [rbp-0x8],rax
  40ba21:	mov    rax,QWORD PTR [rbp-0x8]
  40ba25:	add    rsp,0x40
  40ba29:	pop    rbp
  40ba2a:	ret    
  40ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba30:	push   rbp
  40ba31:	mov    rbp,rsp
  40ba34:	sub    rsp,0x40
  40ba38:	mov    QWORD PTR [rbp-0x10],rdi
  40ba3c:	mov    QWORD PTR [rbp-0x18],rsi
  40ba40:	mov    DWORD PTR [rbp-0x1c],edx
  40ba43:	mov    QWORD PTR [rbp-0x30],0x0
  40ba4b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ba4f:	call   4089d0 <verify_monster@@Base+0x1e80>
  40ba54:	mov    QWORD PTR [rbp-0x38],rax
  40ba58:	cmp    rax,0x0
  40ba5c:	jne    40ba72 <test_sort_find@@Base+0x7b2>
  40ba62:	mov    rax,QWORD PTR [rip+0x2563f]        # 4310a8 <__data_start@@Base+0x10>
  40ba69:	mov    QWORD PTR [rbp-0x8],rax
  40ba6d:	jmp    40bb56 <test_sort_find@@Base+0x896>
  40ba72:	mov    rax,QWORD PTR [rbp-0x38]
  40ba76:	add    rax,0xffffffffffffffff
  40ba7c:	mov    QWORD PTR [rbp-0x38],rax
  40ba80:	mov    rax,QWORD PTR [rbp-0x30]
  40ba84:	cmp    rax,QWORD PTR [rbp-0x38]
  40ba88:	jae    40baf8 <test_sort_find@@Base+0x838>
  40ba8e:	mov    rax,QWORD PTR [rbp-0x30]
  40ba92:	mov    rcx,QWORD PTR [rbp-0x38]
  40ba96:	sub    rcx,QWORD PTR [rbp-0x30]
  40ba9a:	shr    rcx,0x1
  40ba9e:	add    rax,rcx
  40baa1:	mov    QWORD PTR [rbp-0x40],rax
  40baa5:	mov    rdi,QWORD PTR [rbp-0x10]
  40baa9:	mov    rsi,QWORD PTR [rbp-0x40]
  40baad:	call   408a20 <verify_monster@@Base+0x1ed0>
  40bab2:	mov    rdi,rax
  40bab5:	call   407e10 <verify_monster@@Base+0x12c0>
  40baba:	mov    QWORD PTR [rbp-0x28],rax
  40babe:	mov    rdi,QWORD PTR [rbp-0x28]
  40bac2:	mov    rsi,QWORD PTR [rbp-0x18]
  40bac6:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40baca:	call   416e20 <main@@Base+0x30f0>
  40bacf:	cmp    eax,0x0
  40bad2:	jge    40baeb <test_sort_find@@Base+0x82b>
  40bad8:	mov    rax,QWORD PTR [rbp-0x40]
  40badc:	add    rax,0x1
  40bae2:	mov    QWORD PTR [rbp-0x30],rax
  40bae6:	jmp    40baf3 <test_sort_find@@Base+0x833>
  40baeb:	mov    rax,QWORD PTR [rbp-0x40]
  40baef:	mov    QWORD PTR [rbp-0x38],rax
  40baf3:	jmp    40ba80 <test_sort_find@@Base+0x7c0>
  40baf8:	mov    rax,QWORD PTR [rbp-0x30]
  40bafc:	cmp    rax,QWORD PTR [rbp-0x38]
  40bb00:	jne    40bb4b <test_sort_find@@Base+0x88b>
  40bb06:	mov    rdi,QWORD PTR [rbp-0x10]
  40bb0a:	mov    rsi,QWORD PTR [rbp-0x30]
  40bb0e:	call   408a20 <verify_monster@@Base+0x1ed0>
  40bb13:	mov    rdi,rax
  40bb16:	call   407e10 <verify_monster@@Base+0x12c0>
  40bb1b:	mov    QWORD PTR [rbp-0x28],rax
  40bb1f:	mov    rdi,QWORD PTR [rbp-0x28]
  40bb23:	mov    rsi,QWORD PTR [rbp-0x18]
  40bb27:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40bb2b:	call   416e20 <main@@Base+0x30f0>
  40bb30:	cmp    eax,0x0
  40bb33:	jne    40bb46 <test_sort_find@@Base+0x886>
  40bb39:	mov    rax,QWORD PTR [rbp-0x30]
  40bb3d:	mov    QWORD PTR [rbp-0x8],rax
  40bb41:	jmp    40bb56 <test_sort_find@@Base+0x896>
  40bb46:	jmp    40bb4b <test_sort_find@@Base+0x88b>
  40bb4b:	mov    rax,QWORD PTR [rip+0x25556]        # 4310a8 <__data_start@@Base+0x10>
  40bb52:	mov    QWORD PTR [rbp-0x8],rax
  40bb56:	mov    rax,QWORD PTR [rbp-0x8]
  40bb5a:	add    rsp,0x40
  40bb5e:	pop    rbp
  40bb5f:	ret    

000000000040bb60 <test_scan@@Base>:
  40bb60:	push   rbp
  40bb61:	mov    rbp,rsp
  40bb64:	sub    rsp,0x1c0
  40bb6b:	mov    QWORD PTR [rbp-0x8],rdi
  40bb6f:	mov    eax,DWORD PTR [rip+0x1659c]        # 422111 <_IO_stdin_used@@Base+0x111>
  40bb75:	mov    DWORD PTR [rbp-0x47],eax
  40bb78:	mov    cx,WORD PTR [rip+0x16596]        # 422115 <_IO_stdin_used@@Base+0x115>
  40bb7f:	mov    WORD PTR [rbp-0x43],cx
  40bb83:	mov    dl,BYTE PTR [rip+0x1658e]        # 422117 <_IO_stdin_used@@Base+0x117>
  40bb89:	mov    BYTE PTR [rbp-0x41],dl
  40bb8c:	mov    DWORD PTR [rbp-0x4c],0xffffffff
  40bb93:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb97:	call   418ef0 <flatcc_builder_reset@@Base>
  40bb9c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bba0:	mov    DWORD PTR [rbp-0x50],eax
  40bba3:	call   40a0d0 <gen_monster@@Base+0x760>
  40bba8:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbac:	lea    rsi,[rip+0x167a4]        # 422357 <_IO_stdin_used@@Base+0x357>
  40bbb3:	mov    DWORD PTR [rbp-0x54],eax
  40bbb6:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bbbb:	lea    rsi,[rbp-0x47]
  40bbbf:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbc3:	mov    edx,0x7
  40bbc8:	mov    DWORD PTR [rbp-0x58],eax
  40bbcb:	call   40a260 <gen_monster@@Base+0x8f0>
  40bbd0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbd4:	mov    DWORD PTR [rbp-0x5c],eax
  40bbd7:	call   40cad0 <test_scan@@Base+0xf70>
  40bbdc:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbe0:	mov    DWORD PTR [rbp-0x60],eax
  40bbe3:	call   40caf0 <test_scan@@Base+0xf90>
  40bbe8:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbec:	mov    DWORD PTR [rbp-0x64],eax
  40bbef:	call   40a5b0 <gen_monster@@Base+0xc40>
  40bbf4:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbf8:	mov    DWORD PTR [rbp-0x68],eax
  40bbfb:	call   40a600 <gen_monster@@Base+0xc90>
  40bc00:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc04:	lea    rsi,[rip+0x1707a]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40bc0b:	mov    DWORD PTR [rbp-0x6c],eax
  40bc0e:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bc13:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc17:	mov    DWORD PTR [rbp-0x70],eax
  40bc1a:	call   40a670 <gen_monster@@Base+0xd00>
  40bc1f:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc23:	mov    QWORD PTR [rbp-0x78],rax
  40bc27:	call   40a600 <gen_monster@@Base+0xc90>
  40bc2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc30:	lea    rsi,[rip+0x170ae]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40bc37:	mov    DWORD PTR [rbp-0x7c],eax
  40bc3a:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bc3f:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc43:	mov    DWORD PTR [rbp-0x80],eax
  40bc46:	call   40a670 <gen_monster@@Base+0xd00>
  40bc4b:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc4f:	mov    QWORD PTR [rbp-0x88],rax
  40bc56:	call   40a600 <gen_monster@@Base+0xc90>
  40bc5b:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc5f:	lea    rsi,[rip+0x170a7]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40bc66:	mov    DWORD PTR [rbp-0x8c],eax
  40bc6c:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bc71:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc75:	mov    DWORD PTR [rbp-0x90],eax
  40bc7b:	call   40a670 <gen_monster@@Base+0xd00>
  40bc80:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc84:	mov    QWORD PTR [rbp-0x98],rax
  40bc8b:	call   40a600 <gen_monster@@Base+0xc90>
  40bc90:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc94:	lea    rsi,[rip+0x176db]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40bc9b:	mov    DWORD PTR [rbp-0x9c],eax
  40bca1:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bca6:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcaa:	mov    DWORD PTR [rbp-0xa0],eax
  40bcb0:	call   40a670 <gen_monster@@Base+0xd00>
  40bcb5:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcb9:	mov    QWORD PTR [rbp-0xa8],rax
  40bcc0:	call   40a600 <gen_monster@@Base+0xc90>
  40bcc5:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcc9:	lea    rsi,[rip+0x1703d]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40bcd0:	mov    DWORD PTR [rbp-0xac],eax
  40bcd6:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40bcdb:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcdf:	mov    DWORD PTR [rbp-0xb0],eax
  40bce5:	call   40a670 <gen_monster@@Base+0xd00>
  40bcea:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcee:	mov    QWORD PTR [rbp-0xb8],rax
  40bcf5:	call   40a750 <gen_monster@@Base+0xde0>
  40bcfa:	mov    rdi,QWORD PTR [rbp-0x8]
  40bcfe:	mov    DWORD PTR [rbp-0xbc],eax
  40bd04:	call   40ac50 <gen_monster@@Base+0x12e0>
  40bd09:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd0d:	lea    rsi,[rbp-0x40]
  40bd11:	mov    DWORD PTR [rbp-0xc0],eax
  40bd17:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40bd1c:	mov    QWORD PTR [rbp-0x38],rax
  40bd20:	mov    rdi,QWORD PTR [rbp-0x38]
  40bd24:	call   404480 <verify_empty_monster@@Base+0x260>
  40bd29:	mov    QWORD PTR [rbp-0x18],rax
  40bd2d:	mov    rdi,QWORD PTR [rbp-0x18]
  40bd31:	call   4088a0 <verify_monster@@Base+0x1d50>
  40bd36:	mov    QWORD PTR [rbp-0x20],rax
  40bd3a:	cmp    QWORD PTR [rbp-0x20],0x0
  40bd3f:	je     40bd4a <test_scan@@Base+0x1ea>
  40bd45:	jmp    40bd69 <test_scan@@Base+0x209>
  40bd4a:	lea    rdi,[rip+0x17643]        # 423394 <_IO_stdin_used@@Base+0x1394>
  40bd51:	lea    rsi,[rip+0x16e97]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40bd58:	mov    edx,0x519
  40bd5d:	lea    rcx,[rip+0x1785e]        # 4235c2 <_IO_stdin_used@@Base+0x15c2>
  40bd64:	call   404090 <__assert_fail@plt>
  40bd69:	mov    rdi,QWORD PTR [rbp-0x18]
  40bd6d:	call   408250 <verify_monster@@Base+0x1700>
  40bd72:	mov    QWORD PTR [rbp-0x28],rax
  40bd76:	cmp    QWORD PTR [rbp-0x28],0x0
  40bd7b:	je     40bd86 <test_scan@@Base+0x226>
  40bd81:	jmp    40bda5 <test_scan@@Base+0x245>
  40bd86:	lea    rdi,[rip+0x17857]        # 4235e4 <_IO_stdin_used@@Base+0x15e4>
  40bd8d:	lea    rsi,[rip+0x16e5b]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40bd94:	mov    edx,0x51b
  40bd99:	lea    rcx,[rip+0x17822]        # 4235c2 <_IO_stdin_used@@Base+0x15c2>
  40bda0:	call   404090 <__assert_fail@plt>
  40bda5:	mov    rdi,QWORD PTR [rbp-0x18]
  40bda9:	call   408ac0 <verify_monster@@Base+0x1f70>
  40bdae:	mov    QWORD PTR [rbp-0x30],rax
  40bdb2:	cmp    QWORD PTR [rbp-0x30],0x0
  40bdb7:	je     40bdc2 <test_scan@@Base+0x262>
  40bdbd:	jmp    40bde1 <test_scan@@Base+0x281>
  40bdc2:	lea    rdi,[rip+0x1781f]        # 4235e8 <_IO_stdin_used@@Base+0x15e8>
  40bdc9:	lea    rsi,[rip+0x16e1f]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40bdd0:	mov    edx,0x51d
  40bdd5:	lea    rcx,[rip+0x177e6]        # 4235c2 <_IO_stdin_used@@Base+0x15c2>
  40bddc:	call   404090 <__assert_fail@plt>
  40bde1:	mov    rdi,QWORD PTR [rbp-0x20]
  40bde5:	lea    rsi,[rip+0x16ef9]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40bdec:	call   40cb30 <test_scan@@Base+0xfd0>
  40bdf1:	mov    ecx,0x1
  40bdf6:	cmp    rcx,rax
  40bdf9:	je     40be12 <test_scan@@Base+0x2b2>
  40bdff:	lea    rdi,[rip+0x177eb]        # 4235f1 <_IO_stdin_used@@Base+0x15f1>
  40be06:	mov    al,0x0
  40be08:	call   404070 <printf@plt>
  40be0d:	jmp    40cab6 <test_scan@@Base+0xf56>
  40be12:	mov    rdi,QWORD PTR [rbp-0x20]
  40be16:	lea    rsi,[rip+0x16ec8]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40be1d:	call   40cb60 <test_scan@@Base+0x1000>
  40be22:	mov    ecx,0x1
  40be27:	cmp    rcx,rax
  40be2a:	je     40be43 <test_scan@@Base+0x2e3>
  40be30:	lea    rdi,[rip+0x177b9]        # 4235f0 <_IO_stdin_used@@Base+0x15f0>
  40be37:	mov    al,0x0
  40be39:	call   404070 <printf@plt>
  40be3e:	jmp    40cab6 <test_scan@@Base+0xf56>
  40be43:	mov    rdi,QWORD PTR [rbp-0x20]
  40be47:	lea    rsi,[rip+0x176ff]        # 42354d <_IO_stdin_used@@Base+0x154d>
  40be4e:	mov    edx,0x5
  40be53:	call   40cb90 <test_scan@@Base+0x1030>
  40be58:	mov    ecx,0x1
  40be5d:	cmp    rcx,rax
  40be60:	je     40be79 <test_scan@@Base+0x319>
  40be66:	lea    rdi,[rip+0x177a4]        # 423611 <_IO_stdin_used@@Base+0x1611>
  40be6d:	mov    al,0x0
  40be6f:	call   404070 <printf@plt>
  40be74:	jmp    40cab6 <test_scan@@Base+0xf56>
  40be79:	mov    rdi,QWORD PTR [rbp-0x20]
  40be7d:	lea    rsi,[rip+0x176c9]        # 42354d <_IO_stdin_used@@Base+0x154d>
  40be84:	mov    edx,0x5
  40be89:	call   40cbc0 <test_scan@@Base+0x1060>
  40be8e:	mov    ecx,0x1
  40be93:	cmp    rcx,rax
  40be96:	je     40beaf <test_scan@@Base+0x34f>
  40be9c:	lea    rdi,[rip+0x1776e]        # 423611 <_IO_stdin_used@@Base+0x1611>
  40bea3:	mov    al,0x0
  40bea5:	call   404070 <printf@plt>
  40beaa:	jmp    40cab6 <test_scan@@Base+0xf56>
  40beaf:	mov    rax,QWORD PTR [rip+0x251f2]        # 4310a8 <__data_start@@Base+0x10>
  40beb6:	mov    rdi,QWORD PTR [rbp-0x20]
  40beba:	mov    rdx,QWORD PTR [rip+0x251ef]        # 4310b0 <__data_start@@Base+0x18>
  40bec1:	mov    esi,0x2
  40bec6:	lea    rcx,[rip+0x16e18]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40becd:	mov    QWORD PTR [rbp-0xc8],rax
  40bed4:	call   40cbf0 <test_scan@@Base+0x1090>
  40bed9:	mov    rcx,QWORD PTR [rbp-0xc8]
  40bee0:	cmp    rcx,rax
  40bee3:	je     40befc <test_scan@@Base+0x39c>
  40bee9:	lea    rdi,[rip+0x17748]        # 423638 <_IO_stdin_used@@Base+0x1638>
  40bef0:	mov    al,0x0
  40bef2:	call   404070 <printf@plt>
  40bef7:	jmp    40cab6 <test_scan@@Base+0xf56>
  40befc:	mov    rax,QWORD PTR [rip+0x251a5]        # 4310a8 <__data_start@@Base+0x10>
  40bf03:	mov    rdi,QWORD PTR [rbp-0x20]
  40bf07:	lea    rsi,[rip+0x1766a]        # 423578 <_IO_stdin_used@@Base+0x1578>
  40bf0e:	mov    QWORD PTR [rbp-0xd0],rax
  40bf15:	call   40cb30 <test_scan@@Base+0xfd0>
  40bf1a:	mov    rcx,QWORD PTR [rbp-0xd0]
  40bf21:	cmp    rcx,rax
  40bf24:	je     40bf3d <test_scan@@Base+0x3dd>
  40bf2a:	lea    rdi,[rip+0x1764e]        # 42357f <_IO_stdin_used@@Base+0x157f>
  40bf31:	mov    al,0x0
  40bf33:	call   404070 <printf@plt>
  40bf38:	jmp    40cab6 <test_scan@@Base+0xf56>
  40bf3d:	mov    rdi,QWORD PTR [rbp-0x20]
  40bf41:	lea    rsi,[rip+0x16d3d]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40bf48:	call   40cb30 <test_scan@@Base+0xfd0>
  40bf4d:	xor    ecx,ecx
  40bf4f:	mov    edx,ecx
  40bf51:	cmp    rdx,rax
  40bf54:	je     40bf6d <test_scan@@Base+0x40d>
  40bf5a:	lea    rdi,[rip+0x1764e]        # 4235af <_IO_stdin_used@@Base+0x15af>
  40bf61:	mov    al,0x0
  40bf63:	call   404070 <printf@plt>
  40bf68:	jmp    40cab6 <test_scan@@Base+0xf56>
  40bf6d:	mov    rdi,QWORD PTR [rbp-0x20]
  40bf71:	lea    rsi,[rip+0x16d95]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40bf78:	call   40cc30 <test_scan@@Base+0x10d0>
  40bf7d:	mov    ecx,0x2
  40bf82:	cmp    rcx,rax
  40bf85:	je     40bf9e <test_scan@@Base+0x43e>
  40bf8b:	lea    rdi,[rip+0x1772b]        # 4236bd <_IO_stdin_used@@Base+0x16bd>
  40bf92:	mov    al,0x0
  40bf94:	call   404070 <printf@plt>
  40bf99:	jmp    40cab6 <test_scan@@Base+0xf56>
  40bf9e:	mov    rdi,QWORD PTR [rbp-0x20]
  40bfa2:	lea    rsi,[rip+0x16d64]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40bfa9:	call   40cce0 <test_scan@@Base+0x1180>
  40bfae:	mov    ecx,0x4
  40bfb3:	cmp    rcx,rax
  40bfb6:	je     40bfcf <test_scan@@Base+0x46f>
  40bfbc:	lea    rdi,[rip+0x176fa]        # 4236bd <_IO_stdin_used@@Base+0x16bd>
  40bfc3:	mov    al,0x0
  40bfc5:	call   404070 <printf@plt>
  40bfca:	jmp    40cab6 <test_scan@@Base+0xf56>
  40bfcf:	mov    rdi,QWORD PTR [rbp-0x20]
  40bfd3:	lea    rsi,[rip+0x1768a]        # 423664 <_IO_stdin_used@@Base+0x1664>
  40bfda:	mov    edx,0x8
  40bfdf:	call   40cd80 <test_scan@@Base+0x1220>
  40bfe4:	mov    ecx,0x4
  40bfe9:	cmp    rcx,rax
  40bfec:	je     40c005 <test_scan@@Base+0x4a5>
  40bff2:	lea    rdi,[rip+0x17676]        # 42366f <_IO_stdin_used@@Base+0x166f>
  40bff9:	mov    al,0x0
  40bffb:	call   404070 <printf@plt>
  40c000:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c005:	mov    rdi,QWORD PTR [rbp-0x20]
  40c009:	mov    esi,0x1
  40c00e:	mov    edx,0x3
  40c013:	lea    rcx,[rip+0x1764a]        # 423664 <_IO_stdin_used@@Base+0x1664>
  40c01a:	mov    r8d,0x8
  40c020:	call   40ce20 <test_scan@@Base+0x12c0>
  40c025:	mov    ecx,0x2
  40c02a:	cmp    rcx,rax
  40c02d:	je     40c046 <test_scan@@Base+0x4e6>
  40c033:	lea    rdi,[rip+0x17635]        # 42366f <_IO_stdin_used@@Base+0x166f>
  40c03a:	mov    al,0x0
  40c03c:	call   404070 <printf@plt>
  40c041:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c046:	mov    rdi,QWORD PTR [rbp-0x20]
  40c04a:	mov    rdx,QWORD PTR [rip+0x2505f]        # 4310b0 <__data_start@@Base+0x18>
  40c051:	mov    esi,0x2
  40c056:	lea    rcx,[rip+0x16cb0]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40c05d:	call   40cf00 <test_scan@@Base+0x13a0>
  40c062:	mov    ecx,0x2
  40c067:	cmp    rcx,rax
  40c06a:	je     40c083 <test_scan@@Base+0x523>
  40c070:	lea    rdi,[rip+0x17613]        # 42368a <_IO_stdin_used@@Base+0x168a>
  40c077:	mov    al,0x0
  40c079:	call   404070 <printf@plt>
  40c07e:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c083:	mov    rdi,QWORD PTR [rbp-0x20]
  40c087:	mov    rdx,QWORD PTR [rip+0x25022]        # 4310b0 <__data_start@@Base+0x18>
  40c08e:	mov    esi,0x2
  40c093:	lea    rcx,[rip+0x175ca]        # 423664 <_IO_stdin_used@@Base+0x1664>
  40c09a:	mov    r8d,0x8
  40c0a0:	call   40cfe0 <test_scan@@Base+0x1480>
  40c0a5:	mov    ecx,0x2
  40c0aa:	cmp    rcx,rax
  40c0ad:	je     40c0c6 <test_scan@@Base+0x566>
  40c0b3:	lea    rdi,[rip+0x175d0]        # 42368a <_IO_stdin_used@@Base+0x168a>
  40c0ba:	mov    al,0x0
  40c0bc:	call   404070 <printf@plt>
  40c0c1:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c0c6:	mov    rdi,QWORD PTR [rbp-0x20]
  40c0ca:	mov    rdx,QWORD PTR [rip+0x24fdf]        # 4310b0 <__data_start@@Base+0x18>
  40c0d1:	mov    esi,0x3
  40c0d6:	lea    rcx,[rip+0x16c30]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40c0dd:	call   40cf00 <test_scan@@Base+0x13a0>
  40c0e2:	mov    ecx,0x4
  40c0e7:	cmp    rcx,rax
  40c0ea:	je     40c103 <test_scan@@Base+0x5a3>
  40c0f0:	lea    rdi,[rip+0x175be]        # 4236b5 <_IO_stdin_used@@Base+0x16b5>
  40c0f7:	mov    al,0x0
  40c0f9:	call   404070 <printf@plt>
  40c0fe:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c103:	mov    rax,QWORD PTR [rip+0x24f9e]        # 4310a8 <__data_start@@Base+0x10>
  40c10a:	mov    rdi,QWORD PTR [rbp-0x20]
  40c10e:	mov    esi,0x1
  40c113:	mov    edx,0x3
  40c118:	lea    rcx,[rip+0x17459]        # 423578 <_IO_stdin_used@@Base+0x1578>
  40c11f:	mov    QWORD PTR [rbp-0xd8],rax
  40c126:	call   40cbf0 <test_scan@@Base+0x1090>
  40c12b:	mov    rcx,QWORD PTR [rbp-0xd8]
  40c132:	cmp    rcx,rax
  40c135:	je     40c14e <test_scan@@Base+0x5ee>
  40c13b:	lea    rdi,[rip+0x1758f]        # 4236d1 <_IO_stdin_used@@Base+0x16d1>
  40c142:	mov    al,0x0
  40c144:	call   404070 <printf@plt>
  40c149:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c14e:	mov    rax,QWORD PTR [rip+0x24f53]        # 4310a8 <__data_start@@Base+0x10>
  40c155:	mov    rdi,QWORD PTR [rbp-0x20]
  40c159:	mov    esi,0x1
  40c15e:	mov    edx,0x3
  40c163:	lea    rcx,[rip+0x16b1b]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c16a:	mov    QWORD PTR [rbp-0xe0],rax
  40c171:	call   40cbf0 <test_scan@@Base+0x1090>
  40c176:	mov    rcx,QWORD PTR [rbp-0xe0]
  40c17d:	cmp    rcx,rax
  40c180:	je     40c199 <test_scan@@Base+0x639>
  40c186:	lea    rdi,[rip+0x17567]        # 4236f4 <_IO_stdin_used@@Base+0x16f4>
  40c18d:	mov    al,0x0
  40c18f:	call   404070 <printf@plt>
  40c194:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c199:	mov    rdi,QWORD PTR [rbp-0x20]
  40c19d:	mov    esi,0x1
  40c1a2:	mov    edx,0x3
  40c1a7:	lea    rcx,[rip+0x16b37]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c1ae:	call   40cbf0 <test_scan@@Base+0x1090>
  40c1b3:	mov    ecx,0x1
  40c1b8:	cmp    rcx,rax
  40c1bb:	je     40c1d4 <test_scan@@Base+0x674>
  40c1c1:	lea    rdi,[rip+0x175d6]        # 42379e <_IO_stdin_used@@Base+0x179e>
  40c1c8:	mov    al,0x0
  40c1ca:	call   404070 <printf@plt>
  40c1cf:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c1d4:	mov    rdi,QWORD PTR [rbp-0x20]
  40c1d8:	mov    esi,0x1
  40c1dd:	mov    edx,0x3
  40c1e2:	lea    rcx,[rip+0x16b24]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40c1e9:	call   40cf00 <test_scan@@Base+0x13a0>
  40c1ee:	mov    ecx,0x2
  40c1f3:	cmp    rcx,rax
  40c1f6:	je     40c20f <test_scan@@Base+0x6af>
  40c1fc:	lea    rdi,[rip+0x175c1]        # 4237c4 <_IO_stdin_used@@Base+0x17c4>
  40c203:	mov    al,0x0
  40c205:	call   404070 <printf@plt>
  40c20a:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c20f:	mov    rax,QWORD PTR [rip+0x24e92]        # 4310a8 <__data_start@@Base+0x10>
  40c216:	mov    rdi,QWORD PTR [rbp-0x20]
  40c21a:	mov    esi,0x1
  40c21f:	mov    edx,0x3
  40c224:	lea    rcx,[rip+0x1714b]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40c22b:	mov    QWORD PTR [rbp-0xe8],rax
  40c232:	call   40cf00 <test_scan@@Base+0x13a0>
  40c237:	mov    rcx,QWORD PTR [rbp-0xe8]
  40c23e:	cmp    rcx,rax
  40c241:	je     40c25a <test_scan@@Base+0x6fa>
  40c247:	lea    rdi,[rip+0x174c8]        # 423716 <_IO_stdin_used@@Base+0x1716>
  40c24e:	mov    al,0x0
  40c250:	call   404070 <printf@plt>
  40c255:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c25a:	mov    rax,QWORD PTR [rip+0x24e47]        # 4310a8 <__data_start@@Base+0x10>
  40c261:	mov    rdi,QWORD PTR [rbp-0x20]
  40c265:	mov    esi,0x1
  40c26a:	mov    edx,0x3
  40c26f:	lea    rcx,[rip+0x17302]        # 423578 <_IO_stdin_used@@Base+0x1578>
  40c276:	mov    QWORD PTR [rbp-0xf0],rax
  40c27d:	call   40d0d0 <test_scan@@Base+0x1570>
  40c282:	mov    rcx,QWORD PTR [rbp-0xf0]
  40c289:	cmp    rcx,rax
  40c28c:	je     40c2a5 <test_scan@@Base+0x745>
  40c292:	lea    rdi,[rip+0x174a9]        # 423742 <_IO_stdin_used@@Base+0x1742>
  40c299:	mov    al,0x0
  40c29b:	call   404070 <printf@plt>
  40c2a0:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c2a5:	mov    rax,QWORD PTR [rip+0x24dfc]        # 4310a8 <__data_start@@Base+0x10>
  40c2ac:	mov    rdi,QWORD PTR [rbp-0x20]
  40c2b0:	mov    esi,0x1
  40c2b5:	mov    edx,0x3
  40c2ba:	lea    rcx,[rip+0x169c4]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c2c1:	mov    QWORD PTR [rbp-0xf8],rax
  40c2c8:	call   40d0d0 <test_scan@@Base+0x1570>
  40c2cd:	mov    rcx,QWORD PTR [rbp-0xf8]
  40c2d4:	cmp    rcx,rax
  40c2d7:	je     40c2f0 <test_scan@@Base+0x790>
  40c2dd:	lea    rdi,[rip+0x1748c]        # 423770 <_IO_stdin_used@@Base+0x1770>
  40c2e4:	mov    al,0x0
  40c2e6:	call   404070 <printf@plt>
  40c2eb:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c2f0:	mov    rdi,QWORD PTR [rbp-0x20]
  40c2f4:	mov    esi,0x1
  40c2f9:	mov    edx,0x3
  40c2fe:	lea    rcx,[rip+0x169e0]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c305:	call   40d0d0 <test_scan@@Base+0x1570>
  40c30a:	mov    ecx,0x1
  40c30f:	cmp    rcx,rax
  40c312:	je     40c32b <test_scan@@Base+0x7cb>
  40c318:	lea    rdi,[rip+0x1747e]        # 42379d <_IO_stdin_used@@Base+0x179d>
  40c31f:	mov    al,0x0
  40c321:	call   404070 <printf@plt>
  40c326:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c32b:	mov    rdi,QWORD PTR [rbp-0x20]
  40c32f:	mov    esi,0x1
  40c334:	mov    edx,0x3
  40c339:	lea    rcx,[rip+0x169cd]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40c340:	call   40d110 <test_scan@@Base+0x15b0>
  40c345:	mov    ecx,0x2
  40c34a:	cmp    rcx,rax
  40c34d:	je     40c366 <test_scan@@Base+0x806>
  40c353:	lea    rdi,[rip+0x17469]        # 4237c3 <_IO_stdin_used@@Base+0x17c3>
  40c35a:	mov    al,0x0
  40c35c:	call   404070 <printf@plt>
  40c361:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c366:	mov    rax,QWORD PTR [rip+0x24d3b]        # 4310a8 <__data_start@@Base+0x10>
  40c36d:	mov    rdi,QWORD PTR [rbp-0x20]
  40c371:	mov    esi,0x1
  40c376:	mov    edx,0x3
  40c37b:	lea    rcx,[rip+0x16ff4]        # 423376 <_IO_stdin_used@@Base+0x1376>
  40c382:	mov    QWORD PTR [rbp-0x100],rax
  40c389:	call   40d110 <test_scan@@Base+0x15b0>
  40c38e:	mov    rcx,QWORD PTR [rbp-0x100]
  40c395:	cmp    rcx,rax
  40c398:	je     40c3b1 <test_scan@@Base+0x851>
  40c39e:	lea    rdi,[rip+0x17447]        # 4237ec <_IO_stdin_used@@Base+0x17ec>
  40c3a5:	mov    al,0x0
  40c3a7:	call   404070 <printf@plt>
  40c3ac:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c3b1:	xor    eax,eax
  40c3b3:	mov    ecx,eax
  40c3b5:	mov    rdx,QWORD PTR [rip+0x24cec]        # 4310a8 <__data_start@@Base+0x10>
  40c3bc:	mov    rdi,QWORD PTR [rbp-0x20]
  40c3c0:	mov    rsi,rcx
  40c3c3:	mov    QWORD PTR [rbp-0x108],rdx
  40c3ca:	mov    rdx,rcx
  40c3cd:	lea    rcx,[rip+0x168b1]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c3d4:	call   40cbf0 <test_scan@@Base+0x1090>
  40c3d9:	mov    rcx,QWORD PTR [rbp-0x108]
  40c3e0:	cmp    rcx,rax
  40c3e3:	je     40c3fc <test_scan@@Base+0x89c>
  40c3e9:	lea    rdi,[rip+0x17429]        # 423819 <_IO_stdin_used@@Base+0x1819>
  40c3f0:	mov    al,0x0
  40c3f2:	call   404070 <printf@plt>
  40c3f7:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c3fc:	xor    eax,eax
  40c3fe:	mov    ecx,eax
  40c400:	mov    rdx,QWORD PTR [rip+0x24ca1]        # 4310a8 <__data_start@@Base+0x10>
  40c407:	mov    rdi,QWORD PTR [rbp-0x20]
  40c40b:	mov    rsi,rcx
  40c40e:	mov    QWORD PTR [rbp-0x110],rdx
  40c415:	mov    rdx,rcx
  40c418:	lea    rcx,[rip+0x168c6]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c41f:	call   40cbf0 <test_scan@@Base+0x1090>
  40c424:	mov    rcx,QWORD PTR [rbp-0x110]
  40c42b:	cmp    rcx,rax
  40c42e:	je     40c447 <test_scan@@Base+0x8e7>
  40c434:	lea    rdi,[rip+0x173ff]        # 42383a <_IO_stdin_used@@Base+0x183a>
  40c43b:	mov    al,0x0
  40c43d:	call   404070 <printf@plt>
  40c442:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c447:	mov    rax,QWORD PTR [rip+0x24c5a]        # 4310a8 <__data_start@@Base+0x10>
  40c44e:	mov    rdi,QWORD PTR [rbp-0x20]
  40c452:	mov    ecx,0x1
  40c457:	mov    rsi,rcx
  40c45a:	mov    rdx,rcx
  40c45d:	lea    rcx,[rip+0x16881]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c464:	mov    QWORD PTR [rbp-0x118],rax
  40c46b:	call   40cbf0 <test_scan@@Base+0x1090>
  40c470:	mov    rcx,QWORD PTR [rbp-0x118]
  40c477:	cmp    rcx,rax
  40c47a:	je     40c493 <test_scan@@Base+0x933>
  40c480:	lea    rdi,[rip+0x173d2]        # 423859 <_IO_stdin_used@@Base+0x1859>
  40c487:	mov    al,0x0
  40c489:	call   404070 <printf@plt>
  40c48e:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c493:	mov    rax,QWORD PTR [rip+0x24c0e]        # 4310a8 <__data_start@@Base+0x10>
  40c49a:	mov    rdi,QWORD PTR [rbp-0x20]
  40c49e:	mov    rcx,QWORD PTR [rbp-0x20]
  40c4a2:	mov    QWORD PTR [rbp-0x120],rdi
  40c4a9:	mov    rdi,rcx
  40c4ac:	mov    QWORD PTR [rbp-0x128],rax
  40c4b3:	call   4089d0 <verify_monster@@Base+0x1e80>
  40c4b8:	mov    rdx,QWORD PTR [rip+0x24bf1]        # 4310b0 <__data_start@@Base+0x18>
  40c4bf:	mov    rdi,QWORD PTR [rbp-0x120]
  40c4c6:	mov    rsi,rax
  40c4c9:	lea    rcx,[rip+0x167b5]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c4d0:	call   40cbf0 <test_scan@@Base+0x1090>
  40c4d5:	mov    rcx,QWORD PTR [rbp-0x128]
  40c4dc:	cmp    rcx,rax
  40c4df:	je     40c4f8 <test_scan@@Base+0x998>
  40c4e5:	lea    rdi,[rip+0x17394]        # 423880 <_IO_stdin_used@@Base+0x1880>
  40c4ec:	mov    al,0x0
  40c4ee:	call   404070 <printf@plt>
  40c4f3:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c4f8:	xor    eax,eax
  40c4fa:	mov    ecx,eax
  40c4fc:	mov    rdx,QWORD PTR [rip+0x24ba5]        # 4310a8 <__data_start@@Base+0x10>
  40c503:	mov    rdi,QWORD PTR [rbp-0x20]
  40c507:	mov    rsi,rcx
  40c50a:	mov    QWORD PTR [rbp-0x130],rdx
  40c511:	mov    rdx,rcx
  40c514:	lea    rcx,[rip+0x1676a]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c51b:	call   40d0d0 <test_scan@@Base+0x1570>
  40c520:	mov    rcx,QWORD PTR [rbp-0x130]
  40c527:	cmp    rcx,rax
  40c52a:	je     40c543 <test_scan@@Base+0x9e3>
  40c530:	lea    rdi,[rip+0x172e2]        # 423819 <_IO_stdin_used@@Base+0x1819>
  40c537:	mov    al,0x0
  40c539:	call   404070 <printf@plt>
  40c53e:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c543:	xor    eax,eax
  40c545:	mov    ecx,eax
  40c547:	mov    rdx,QWORD PTR [rip+0x24b5a]        # 4310a8 <__data_start@@Base+0x10>
  40c54e:	mov    rdi,QWORD PTR [rbp-0x20]
  40c552:	mov    rsi,rcx
  40c555:	mov    QWORD PTR [rbp-0x138],rdx
  40c55c:	mov    rdx,rcx
  40c55f:	lea    rcx,[rip+0x1677f]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c566:	call   40d0d0 <test_scan@@Base+0x1570>
  40c56b:	mov    rcx,QWORD PTR [rbp-0x138]
  40c572:	cmp    rcx,rax
  40c575:	je     40c58e <test_scan@@Base+0xa2e>
  40c57b:	lea    rdi,[rip+0x172b8]        # 42383a <_IO_stdin_used@@Base+0x183a>
  40c582:	mov    al,0x0
  40c584:	call   404070 <printf@plt>
  40c589:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c58e:	mov    rax,QWORD PTR [rip+0x24b13]        # 4310a8 <__data_start@@Base+0x10>
  40c595:	mov    rdi,QWORD PTR [rbp-0x20]
  40c599:	mov    ecx,0x1
  40c59e:	mov    rsi,rcx
  40c5a1:	mov    rdx,rcx
  40c5a4:	lea    rcx,[rip+0x1673a]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c5ab:	mov    QWORD PTR [rbp-0x140],rax
  40c5b2:	call   40d0d0 <test_scan@@Base+0x1570>
  40c5b7:	mov    rcx,QWORD PTR [rbp-0x140]
  40c5be:	cmp    rcx,rax
  40c5c1:	je     40c5da <test_scan@@Base+0xa7a>
  40c5c7:	lea    rdi,[rip+0x1728b]        # 423859 <_IO_stdin_used@@Base+0x1859>
  40c5ce:	mov    al,0x0
  40c5d0:	call   404070 <printf@plt>
  40c5d5:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c5da:	mov    rax,QWORD PTR [rip+0x24ac7]        # 4310a8 <__data_start@@Base+0x10>
  40c5e1:	mov    rdi,QWORD PTR [rbp-0x20]
  40c5e5:	mov    rcx,QWORD PTR [rbp-0x20]
  40c5e9:	mov    QWORD PTR [rbp-0x148],rdi
  40c5f0:	mov    rdi,rcx
  40c5f3:	mov    QWORD PTR [rbp-0x150],rax
  40c5fa:	call   4089d0 <verify_monster@@Base+0x1e80>
  40c5ff:	mov    rdx,QWORD PTR [rip+0x24aaa]        # 4310b0 <__data_start@@Base+0x18>
  40c606:	mov    rdi,QWORD PTR [rbp-0x148]
  40c60d:	mov    rsi,rax
  40c610:	lea    rcx,[rip+0x1666e]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c617:	call   40d0d0 <test_scan@@Base+0x1570>
  40c61c:	mov    rcx,QWORD PTR [rbp-0x150]
  40c623:	cmp    rcx,rax
  40c626:	je     40c63f <test_scan@@Base+0xadf>
  40c62c:	lea    rdi,[rip+0x1724d]        # 423880 <_IO_stdin_used@@Base+0x1880>
  40c633:	mov    al,0x0
  40c635:	call   404070 <printf@plt>
  40c63a:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c63f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c643:	lea    rsi,[rip+0x1669b]        # 422ce5 <_IO_stdin_used@@Base+0xce5>
  40c64a:	call   40d1e0 <test_scan@@Base+0x1680>
  40c64f:	mov    ecx,0x1
  40c654:	cmp    rcx,rax
  40c657:	je     40c670 <test_scan@@Base+0xb10>
  40c65d:	lea    rdi,[rip+0x17248]        # 4238ac <_IO_stdin_used@@Base+0x18ac>
  40c664:	mov    al,0x0
  40c666:	call   404070 <printf@plt>
  40c66b:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c670:	mov    rdi,QWORD PTR [rbp-0x20]
  40c674:	lea    rsi,[rip+0x16efd]        # 423578 <_IO_stdin_used@@Base+0x1578>
  40c67b:	call   40d1e0 <test_scan@@Base+0x1680>
  40c680:	xor    ecx,ecx
  40c682:	mov    edx,ecx
  40c684:	cmp    rdx,rax
  40c687:	je     40c6a0 <test_scan@@Base+0xb40>
  40c68d:	lea    rdi,[rip+0x17233]        # 4238c7 <_IO_stdin_used@@Base+0x18c7>
  40c694:	mov    al,0x0
  40c696:	call   404070 <printf@plt>
  40c69b:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c6a0:	mov    rdi,QWORD PTR [rbp-0x20]
  40c6a4:	lea    rsi,[rip+0x165da]        # 422c85 <_IO_stdin_used@@Base+0xc85>
  40c6ab:	call   40d1e0 <test_scan@@Base+0x1680>
  40c6b0:	mov    ecx,0x1
  40c6b5:	cmp    rcx,rax
  40c6b8:	je     40c6d1 <test_scan@@Base+0xb71>
  40c6be:	lea    rdi,[rip+0x1721e]        # 4238e3 <_IO_stdin_used@@Base+0x18e3>
  40c6c5:	mov    al,0x0
  40c6c7:	call   404070 <printf@plt>
  40c6cc:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c6d1:	mov    rdi,QWORD PTR [rbp-0x20]
  40c6d5:	lea    rsi,[rip+0x16631]        # 422d0d <_IO_stdin_used@@Base+0xd0d>
  40c6dc:	call   40d1e0 <test_scan@@Base+0x1680>
  40c6e1:	mov    ecx,0x2
  40c6e6:	cmp    rcx,rax
  40c6e9:	je     40c702 <test_scan@@Base+0xba2>
  40c6ef:	lea    rdi,[rip+0x17209]        # 4238ff <_IO_stdin_used@@Base+0x18ff>
  40c6f6:	mov    al,0x0
  40c6f8:	call   404070 <printf@plt>
  40c6fd:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c702:	mov    rdi,QWORD PTR [rbp-0x28]
  40c706:	mov    esi,0x6
  40c70b:	call   40d260 <test_scan@@Base+0x1700>
  40c710:	xor    ecx,ecx
  40c712:	mov    edx,ecx
  40c714:	mov    QWORD PTR [rbp-0x10],rax
  40c718:	cmp    rdx,rax
  40c71b:	je     40c734 <test_scan@@Base+0xbd4>
  40c721:	lea    rdi,[rip+0x171f5]        # 42391d <_IO_stdin_used@@Base+0x191d>
  40c728:	mov    al,0x0
  40c72a:	call   404070 <printf@plt>
  40c72f:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c734:	mov    rdi,QWORD PTR [rbp-0x28]
  40c738:	mov    esi,0x1
  40c73d:	call   40d260 <test_scan@@Base+0x1700>
  40c742:	mov    QWORD PTR [rbp-0x10],rax
  40c746:	mov    ecx,0x2
  40c74b:	cmp    rcx,rax
  40c74e:	je     40c767 <test_scan@@Base+0xc07>
  40c754:	lea    rdi,[rip+0x171ef]        # 42394a <_IO_stdin_used@@Base+0x194a>
  40c75b:	mov    al,0x0
  40c75d:	call   404070 <printf@plt>
  40c762:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c767:	mov    rax,QWORD PTR [rip+0x2493a]        # 4310a8 <__data_start@@Base+0x10>
  40c76e:	mov    rdi,QWORD PTR [rbp-0x28]
  40c772:	mov    rdx,QWORD PTR [rip+0x24937]        # 4310b0 <__data_start@@Base+0x18>
  40c779:	mov    esi,0x3
  40c77e:	mov    ecx,0x1
  40c783:	mov    QWORD PTR [rbp-0x158],rax
  40c78a:	call   40d320 <test_scan@@Base+0x17c0>
  40c78f:	mov    QWORD PTR [rbp-0x10],rax
  40c793:	mov    rdx,QWORD PTR [rbp-0x158]
  40c79a:	cmp    rdx,rax
  40c79d:	je     40c7b6 <test_scan@@Base+0xc56>
  40c7a3:	lea    rdi,[rip+0x171ce]        # 423978 <_IO_stdin_used@@Base+0x1978>
  40c7aa:	mov    al,0x0
  40c7ac:	call   404070 <printf@plt>
  40c7b1:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c7b6:	mov    rax,QWORD PTR [rip+0x248eb]        # 4310a8 <__data_start@@Base+0x10>
  40c7bd:	mov    rdi,QWORD PTR [rbp-0x28]
  40c7c1:	mov    esi,0x5
  40c7c6:	mov    QWORD PTR [rbp-0x160],rax
  40c7cd:	call   40d260 <test_scan@@Base+0x1700>
  40c7d2:	mov    QWORD PTR [rbp-0x10],rax
  40c7d6:	mov    rcx,QWORD PTR [rbp-0x160]
  40c7dd:	cmp    rcx,rax
  40c7e0:	je     40c7f9 <test_scan@@Base+0xc99>
  40c7e6:	lea    rdi,[rip+0x17269]        # 423a56 <_IO_stdin_used@@Base+0x1a56>
  40c7ed:	mov    al,0x0
  40c7ef:	call   404070 <printf@plt>
  40c7f4:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c7f9:	mov    rdi,QWORD PTR [rbp-0x28]
  40c7fd:	mov    esi,0x2
  40c802:	call   40d260 <test_scan@@Base+0x1700>
  40c807:	mov    QWORD PTR [rbp-0x10],rax
  40c80b:	mov    ecx,0x6
  40c810:	cmp    rcx,rax
  40c813:	je     40c82c <test_scan@@Base+0xccc>
  40c819:	lea    rdi,[rip+0x17191]        # 4239b1 <_IO_stdin_used@@Base+0x19b1>
  40c820:	mov    al,0x0
  40c822:	call   404070 <printf@plt>
  40c827:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c82c:	mov    rdi,QWORD PTR [rbp-0x28]
  40c830:	mov    esi,0x3
  40c835:	call   40d260 <test_scan@@Base+0x1700>
  40c83a:	mov    QWORD PTR [rbp-0x10],rax
  40c83e:	mov    ecx,0x3
  40c843:	cmp    rcx,rax
  40c846:	je     40c85f <test_scan@@Base+0xcff>
  40c84c:	lea    rdi,[rip+0x17203]        # 423a56 <_IO_stdin_used@@Base+0x1a56>
  40c853:	mov    al,0x0
  40c855:	call   404070 <printf@plt>
  40c85a:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c85f:	mov    rdi,QWORD PTR [rbp-0x28]
  40c863:	mov    rdx,QWORD PTR [rip+0x24846]        # 4310b0 <__data_start@@Base+0x18>
  40c86a:	mov    esi,0x3
  40c86f:	mov    ecx,0x3
  40c874:	call   40d320 <test_scan@@Base+0x17c0>
  40c879:	mov    QWORD PTR [rbp-0x10],rax
  40c87d:	mov    edx,0x3
  40c882:	cmp    rdx,rax
  40c885:	je     40c89e <test_scan@@Base+0xd3e>
  40c88b:	lea    rdi,[rip+0x1714b]        # 4239dd <_IO_stdin_used@@Base+0x19dd>
  40c892:	mov    al,0x0
  40c894:	call   404070 <printf@plt>
  40c899:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c89e:	mov    rdi,QWORD PTR [rbp-0x28]
  40c8a2:	mov    rdx,QWORD PTR [rip+0x24807]        # 4310b0 <__data_start@@Base+0x18>
  40c8a9:	mov    esi,0x4
  40c8ae:	mov    ecx,0x3
  40c8b3:	call   40d320 <test_scan@@Base+0x17c0>
  40c8b8:	mov    QWORD PTR [rbp-0x10],rax
  40c8bc:	mov    edx,0x5
  40c8c1:	cmp    rdx,rax
  40c8c4:	je     40c8dd <test_scan@@Base+0xd7d>
  40c8ca:	lea    rdi,[rip+0x17147]        # 423a18 <_IO_stdin_used@@Base+0x1a18>
  40c8d1:	mov    al,0x0
  40c8d3:	call   404070 <printf@plt>
  40c8d8:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c8dd:	mov    rdi,QWORD PTR [rbp-0x28]
  40c8e1:	mov    esi,0x3
  40c8e6:	call   40d420 <test_scan@@Base+0x18c0>
  40c8eb:	mov    QWORD PTR [rbp-0x10],rax
  40c8ef:	mov    ecx,0x5
  40c8f4:	cmp    rcx,rax
  40c8f7:	je     40c910 <test_scan@@Base+0xdb0>
  40c8fd:	lea    rdi,[rip+0x17151]        # 423a55 <_IO_stdin_used@@Base+0x1a55>
  40c904:	mov    al,0x0
  40c906:	call   404070 <printf@plt>
  40c90b:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c910:	mov    rdi,QWORD PTR [rbp-0x28]
  40c914:	mov    esi,0x1
  40c919:	mov    edx,0x4
  40c91e:	mov    ecx,0x3
  40c923:	call   40d4d0 <test_scan@@Base+0x1970>
  40c928:	mov    QWORD PTR [rbp-0x10],rax
  40c92c:	mov    edx,0x3
  40c931:	cmp    rdx,rax
  40c934:	je     40c94d <test_scan@@Base+0xded>
  40c93a:	lea    rdi,[rip+0x17147]        # 423a88 <_IO_stdin_used@@Base+0x1a88>
  40c941:	mov    al,0x0
  40c943:	call   404070 <printf@plt>
  40c948:	jmp    40cab6 <test_scan@@Base+0xf56>
  40c94d:	mov    rdi,QWORD PTR [rbp-0x30]
  40c951:	lea    rsi,[rip+0x1649e]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c958:	call   40d5c0 <test_scan@@Base+0x1a60>
  40c95d:	xor    ecx,ecx
  40c95f:	mov    esi,ecx
  40c961:	mov    rdi,QWORD PTR [rbp-0x30]
  40c965:	mov    rdx,QWORD PTR [rip+0x24744]        # 4310b0 <__data_start@@Base+0x18>
  40c96c:	lea    rcx,[rip+0x16483]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c973:	mov    QWORD PTR [rbp-0x168],rax
  40c97a:	call   40d660 <test_scan@@Base+0x1b00>
  40c97f:	mov    rdi,QWORD PTR [rbp-0x30]
  40c983:	lea    rsi,[rip+0x1646c]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c98a:	mov    edx,0x4
  40c98f:	mov    QWORD PTR [rbp-0x170],rax
  40c996:	call   40d740 <test_scan@@Base+0x1be0>
  40c99b:	xor    r8d,r8d
  40c99e:	mov    esi,r8d
  40c9a1:	mov    rdi,QWORD PTR [rbp-0x30]
  40c9a5:	mov    rdx,QWORD PTR [rip+0x24704]        # 4310b0 <__data_start@@Base+0x18>
  40c9ac:	lea    rcx,[rip+0x16443]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c9b3:	mov    r8d,0x4
  40c9b9:	mov    QWORD PTR [rbp-0x178],rax
  40c9c0:	call   40d7e0 <test_scan@@Base+0x1c80>
  40c9c5:	mov    rdi,QWORD PTR [rbp-0x30]
  40c9c9:	lea    rsi,[rip+0x16426]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c9d0:	mov    QWORD PTR [rbp-0x180],rax
  40c9d7:	call   40d8c0 <test_scan@@Base+0x1d60>
  40c9dc:	xor    r9d,r9d
  40c9df:	mov    esi,r9d
  40c9e2:	mov    rdi,QWORD PTR [rbp-0x30]
  40c9e6:	mov    rdx,QWORD PTR [rip+0x246c3]        # 4310b0 <__data_start@@Base+0x18>
  40c9ed:	lea    rcx,[rip+0x16402]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40c9f4:	mov    QWORD PTR [rbp-0x188],rax
  40c9fb:	call   40d950 <test_scan@@Base+0x1df0>
  40ca00:	mov    rdi,QWORD PTR [rbp-0x30]
  40ca04:	lea    rsi,[rip+0x163eb]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40ca0b:	mov    edx,0x4
  40ca10:	mov    QWORD PTR [rbp-0x190],rax
  40ca17:	call   40da20 <test_scan@@Base+0x1ec0>
  40ca1c:	xor    r9d,r9d
  40ca1f:	mov    esi,r9d
  40ca22:	mov    rdi,QWORD PTR [rbp-0x30]
  40ca26:	mov    rdx,QWORD PTR [rip+0x24683]        # 4310b0 <__data_start@@Base+0x18>
  40ca2d:	lea    rcx,[rip+0x163c2]        # 422df6 <_IO_stdin_used@@Base+0xdf6>
  40ca34:	mov    r8d,0x4
  40ca3a:	mov    QWORD PTR [rbp-0x198],rax
  40ca41:	call   40dab0 <test_scan@@Base+0x1f50>
  40ca46:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca4a:	mov    esi,0xd
  40ca4f:	mov    QWORD PTR [rbp-0x1a0],rax
  40ca56:	call   40db80 <test_scan@@Base+0x2020>
  40ca5b:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca5f:	mov    rdx,QWORD PTR [rip+0x2464a]        # 4310b0 <__data_start@@Base+0x18>
  40ca66:	mov    esi,0x1
  40ca6b:	mov    ecx,0x2a
  40ca70:	mov    QWORD PTR [rbp-0x1a8],rax
  40ca77:	call   40dc50 <test_scan@@Base+0x20f0>
  40ca7c:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca80:	mov    esi,0x1
  40ca85:	mov    QWORD PTR [rbp-0x1b0],rax
  40ca8c:	call   40dd60 <test_scan@@Base+0x2200>
  40ca91:	xor    ecx,ecx
  40ca93:	mov    esi,ecx
  40ca95:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca99:	mov    edx,0x2
  40ca9e:	mov    ecx,0x2a
  40caa3:	mov    QWORD PTR [rbp-0x1b8],rax
  40caaa:	call   40de20 <test_scan@@Base+0x22c0>
  40caaf:	mov    DWORD PTR [rbp-0x4c],0x0
  40cab6:	mov    rdi,QWORD PTR [rbp-0x38]
  40caba:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40cabf:	mov    eax,DWORD PTR [rbp-0x4c]
  40cac2:	add    rsp,0x1c0
  40cac9:	pop    rbp
  40caca:	ret    
  40cacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	push   rbp
  40cad1:	mov    rbp,rsp
  40cad4:	sub    rsp,0x10
  40cad8:	mov    QWORD PTR [rbp-0x8],rdi
  40cadc:	mov    rdi,QWORD PTR [rbp-0x8]
  40cae0:	call   41b1d0 <flatcc_builder_start_offset_vector@@Base>
  40cae5:	add    rsp,0x10
  40cae9:	pop    rbp
  40caea:	ret    
  40caeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40caf0:	push   rbp
  40caf1:	mov    rbp,rsp
  40caf4:	sub    rsp,0x10
  40caf8:	mov    QWORD PTR [rbp-0x8],rdi
  40cafc:	mov    rdi,QWORD PTR [rbp-0x8]
  40cb00:	mov    rax,QWORD PTR [rbp-0x8]
  40cb04:	mov    QWORD PTR [rbp-0x10],rdi
  40cb08:	mov    rdi,rax
  40cb0b:	call   41b2e0 <flatcc_builder_end_offset_vector@@Base>
  40cb10:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb14:	mov    esi,eax
  40cb16:	call   416890 <main@@Base+0x2b60>
  40cb1b:	add    rsp,0x10
  40cb1f:	pop    rbp
  40cb20:	ret    
  40cb21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb30:	push   rbp
  40cb31:	mov    rbp,rsp
  40cb34:	sub    rsp,0x10
  40cb38:	mov    QWORD PTR [rbp-0x8],rdi
  40cb3c:	mov    QWORD PTR [rbp-0x10],rsi
  40cb40:	mov    rdi,QWORD PTR [rbp-0x8]
  40cb44:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb48:	call   40cc30 <test_scan@@Base+0x10d0>
  40cb4d:	add    rsp,0x10
  40cb51:	pop    rbp
  40cb52:	ret    
  40cb53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb5d:	nop    DWORD PTR [rax]
  40cb60:	push   rbp
  40cb61:	mov    rbp,rsp
  40cb64:	sub    rsp,0x10
  40cb68:	mov    QWORD PTR [rbp-0x8],rdi
  40cb6c:	mov    QWORD PTR [rbp-0x10],rsi
  40cb70:	mov    rdi,QWORD PTR [rbp-0x8]
  40cb74:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb78:	call   40cce0 <test_scan@@Base+0x1180>
  40cb7d:	add    rsp,0x10
  40cb81:	pop    rbp
  40cb82:	ret    
  40cb83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb8d:	nop    DWORD PTR [rax]
  40cb90:	push   rbp
  40cb91:	mov    rbp,rsp
  40cb94:	sub    rsp,0x20
  40cb98:	mov    QWORD PTR [rbp-0x8],rdi
  40cb9c:	mov    QWORD PTR [rbp-0x10],rsi
  40cba0:	mov    DWORD PTR [rbp-0x14],edx
  40cba3:	mov    rdi,QWORD PTR [rbp-0x8]
  40cba7:	mov    rsi,QWORD PTR [rbp-0x10]
  40cbab:	mov    edx,DWORD PTR [rbp-0x14]
  40cbae:	call   416f20 <main@@Base+0x31f0>
  40cbb3:	add    rsp,0x20
  40cbb7:	pop    rbp
  40cbb8:	ret    
  40cbb9:	nop    DWORD PTR [rax+0x0]
  40cbc0:	push   rbp
  40cbc1:	mov    rbp,rsp
  40cbc4:	sub    rsp,0x20
  40cbc8:	mov    QWORD PTR [rbp-0x8],rdi
  40cbcc:	mov    QWORD PTR [rbp-0x10],rsi
  40cbd0:	mov    DWORD PTR [rbp-0x14],edx
  40cbd3:	mov    rdi,QWORD PTR [rbp-0x8]
  40cbd7:	mov    rsi,QWORD PTR [rbp-0x10]
  40cbdb:	mov    edx,DWORD PTR [rbp-0x14]
  40cbde:	call   40cd80 <test_scan@@Base+0x1220>
  40cbe3:	add    rsp,0x20
  40cbe7:	pop    rbp
  40cbe8:	ret    
  40cbe9:	nop    DWORD PTR [rax+0x0]
  40cbf0:	push   rbp
  40cbf1:	mov    rbp,rsp
  40cbf4:	sub    rsp,0x20
  40cbf8:	mov    QWORD PTR [rbp-0x8],rdi
  40cbfc:	mov    QWORD PTR [rbp-0x10],rsi
  40cc00:	mov    QWORD PTR [rbp-0x18],rdx
  40cc04:	mov    QWORD PTR [rbp-0x20],rcx
  40cc08:	mov    rdi,QWORD PTR [rbp-0x8]
  40cc0c:	mov    rsi,QWORD PTR [rbp-0x10]
  40cc10:	mov    rdx,QWORD PTR [rbp-0x18]
  40cc14:	mov    rcx,QWORD PTR [rbp-0x20]
  40cc18:	call   40cf00 <test_scan@@Base+0x13a0>
  40cc1d:	add    rsp,0x20
  40cc21:	pop    rbp
  40cc22:	ret    
  40cc23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc2d:	nop    DWORD PTR [rax]
  40cc30:	push   rbp
  40cc31:	mov    rbp,rsp
  40cc34:	sub    rsp,0x30
  40cc38:	mov    QWORD PTR [rbp-0x10],rdi
  40cc3c:	mov    QWORD PTR [rbp-0x18],rsi
  40cc40:	mov    QWORD PTR [rbp-0x28],0x0
  40cc48:	mov    rax,QWORD PTR [rbp-0x28]
  40cc4c:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc50:	mov    QWORD PTR [rbp-0x30],rax
  40cc54:	call   4089d0 <verify_monster@@Base+0x1e80>
  40cc59:	mov    rcx,QWORD PTR [rbp-0x30]
  40cc5d:	cmp    rcx,rax
  40cc60:	jae    40ccbe <test_scan@@Base+0x115e>
  40cc66:	mov    rdi,QWORD PTR [rbp-0x10]
  40cc6a:	mov    rsi,QWORD PTR [rbp-0x28]
  40cc6e:	call   408a20 <verify_monster@@Base+0x1ed0>
  40cc73:	mov    rdi,rax
  40cc76:	call   407e10 <verify_monster@@Base+0x12c0>
  40cc7b:	xor    ecx,ecx
  40cc7d:	mov    edx,ecx
  40cc7f:	mov    QWORD PTR [rbp-0x20],rax
  40cc83:	mov    rdi,QWORD PTR [rbp-0x20]
  40cc87:	mov    rsi,QWORD PTR [rbp-0x18]
  40cc8b:	call   416ef0 <main@@Base+0x31c0>
  40cc90:	cmp    eax,0x0
  40cc93:	jne    40cca6 <test_scan@@Base+0x1146>
  40cc99:	mov    rax,QWORD PTR [rbp-0x28]
  40cc9d:	mov    QWORD PTR [rbp-0x8],rax
  40cca1:	jmp    40ccc9 <test_scan@@Base+0x1169>
  40cca6:	jmp    40ccab <test_scan@@Base+0x114b>
  40ccab:	mov    rax,QWORD PTR [rbp-0x28]
  40ccaf:	add    rax,0x1
  40ccb5:	mov    QWORD PTR [rbp-0x28],rax
  40ccb9:	jmp    40cc48 <test_scan@@Base+0x10e8>
  40ccbe:	mov    rax,QWORD PTR [rip+0x243e3]        # 4310a8 <__data_start@@Base+0x10>
  40ccc5:	mov    QWORD PTR [rbp-0x8],rax
  40ccc9:	mov    rax,QWORD PTR [rbp-0x8]
  40cccd:	add    rsp,0x30
  40ccd1:	pop    rbp
  40ccd2:	ret    
  40ccd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccdd:	nop    DWORD PTR [rax]
  40cce0:	push   rbp
  40cce1:	mov    rbp,rsp
  40cce4:	sub    rsp,0x30
  40cce8:	mov    QWORD PTR [rbp-0x10],rdi
  40ccec:	mov    QWORD PTR [rbp-0x18],rsi
  40ccf0:	mov    rdi,QWORD PTR [rbp-0x10]
  40ccf4:	call   4089d0 <verify_monster@@Base+0x1e80>
  40ccf9:	mov    QWORD PTR [rbp-0x28],rax
  40ccfd:	mov    rax,QWORD PTR [rbp-0x28]
  40cd01:	mov    rcx,rax
  40cd04:	add    rcx,0xffffffffffffffff
  40cd0b:	mov    QWORD PTR [rbp-0x28],rcx
  40cd0f:	cmp    rax,0x0
  40cd13:	jbe    40cd5e <test_scan@@Base+0x11fe>
  40cd19:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd1d:	mov    rsi,QWORD PTR [rbp-0x28]
  40cd21:	call   408a20 <verify_monster@@Base+0x1ed0>
  40cd26:	mov    rdi,rax
  40cd29:	call   407e10 <verify_monster@@Base+0x12c0>
  40cd2e:	xor    ecx,ecx
  40cd30:	mov    edx,ecx
  40cd32:	mov    QWORD PTR [rbp-0x20],rax
  40cd36:	mov    rdi,QWORD PTR [rbp-0x20]
  40cd3a:	mov    rsi,QWORD PTR [rbp-0x18]
  40cd3e:	call   416ef0 <main@@Base+0x31c0>
  40cd43:	cmp    eax,0x0
  40cd46:	jne    40cd59 <test_scan@@Base+0x11f9>
  40cd4c:	mov    rax,QWORD PTR [rbp-0x28]
  40cd50:	mov    QWORD PTR [rbp-0x8],rax
  40cd54:	jmp    40cd69 <test_scan@@Base+0x1209>
  40cd59:	jmp    40ccfd <test_scan@@Base+0x119d>
  40cd5e:	mov    rax,QWORD PTR [rip+0x24343]        # 4310a8 <__data_start@@Base+0x10>
  40cd65:	mov    QWORD PTR [rbp-0x8],rax
  40cd69:	mov    rax,QWORD PTR [rbp-0x8]
  40cd6d:	add    rsp,0x30
  40cd71:	pop    rbp
  40cd72:	ret    
  40cd73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd7d:	nop    DWORD PTR [rax]
  40cd80:	push   rbp
  40cd81:	mov    rbp,rsp
  40cd84:	sub    rsp,0x30
  40cd88:	mov    QWORD PTR [rbp-0x10],rdi
  40cd8c:	mov    QWORD PTR [rbp-0x18],rsi
  40cd90:	mov    DWORD PTR [rbp-0x1c],edx
  40cd93:	mov    rdi,QWORD PTR [rbp-0x10]
  40cd97:	call   4089d0 <verify_monster@@Base+0x1e80>
  40cd9c:	mov    QWORD PTR [rbp-0x30],rax
  40cda0:	mov    rax,QWORD PTR [rbp-0x30]
  40cda4:	mov    rcx,rax
  40cda7:	add    rcx,0xffffffffffffffff
  40cdae:	mov    QWORD PTR [rbp-0x30],rcx
  40cdb2:	cmp    rax,0x0
  40cdb6:	jbe    40ce01 <test_scan@@Base+0x12a1>
  40cdbc:	mov    rdi,QWORD PTR [rbp-0x10]
  40cdc0:	mov    rsi,QWORD PTR [rbp-0x30]
  40cdc4:	call   408a20 <verify_monster@@Base+0x1ed0>
  40cdc9:	mov    rdi,rax
  40cdcc:	call   407e10 <verify_monster@@Base+0x12c0>
  40cdd1:	mov    QWORD PTR [rbp-0x28],rax
  40cdd5:	mov    rdi,QWORD PTR [rbp-0x28]
  40cdd9:	mov    rsi,QWORD PTR [rbp-0x18]
  40cddd:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40cde1:	call   416e20 <main@@Base+0x30f0>
  40cde6:	cmp    eax,0x0
  40cde9:	jne    40cdfc <test_scan@@Base+0x129c>
  40cdef:	mov    rax,QWORD PTR [rbp-0x30]
  40cdf3:	mov    QWORD PTR [rbp-0x8],rax
  40cdf7:	jmp    40ce0c <test_scan@@Base+0x12ac>
  40cdfc:	jmp    40cda0 <test_scan@@Base+0x1240>
  40ce01:	mov    rax,QWORD PTR [rip+0x242a0]        # 4310a8 <__data_start@@Base+0x10>
  40ce08:	mov    QWORD PTR [rbp-0x8],rax
  40ce0c:	mov    rax,QWORD PTR [rbp-0x8]
  40ce10:	add    rsp,0x30
  40ce14:	pop    rbp
  40ce15:	ret    
  40ce16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce20:	push   rbp
  40ce21:	mov    rbp,rsp
  40ce24:	sub    rsp,0x50
  40ce28:	mov    QWORD PTR [rbp-0x10],rdi
  40ce2c:	mov    QWORD PTR [rbp-0x18],rsi
  40ce30:	mov    QWORD PTR [rbp-0x20],rdx
  40ce34:	mov    QWORD PTR [rbp-0x28],rcx
  40ce38:	mov    DWORD PTR [rbp-0x2c],r8d
  40ce3c:	mov    rax,QWORD PTR [rbp-0x20]
  40ce40:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce44:	mov    QWORD PTR [rbp-0x48],rax
  40ce48:	call   4089d0 <verify_monster@@Base+0x1e80>
  40ce4d:	mov    rcx,QWORD PTR [rbp-0x48]
  40ce51:	cmp    rcx,rax
  40ce54:	jae    40ce67 <test_scan@@Base+0x1307>
  40ce5a:	mov    rax,QWORD PTR [rbp-0x20]
  40ce5e:	mov    QWORD PTR [rbp-0x50],rax
  40ce62:	jmp    40ce74 <test_scan@@Base+0x1314>
  40ce67:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce6b:	call   4089d0 <verify_monster@@Base+0x1e80>
  40ce70:	mov    QWORD PTR [rbp-0x50],rax
  40ce74:	mov    rax,QWORD PTR [rbp-0x50]
  40ce78:	mov    QWORD PTR [rbp-0x40],rax
  40ce7c:	mov    rax,QWORD PTR [rbp-0x40]
  40ce80:	mov    rcx,rax
  40ce83:	add    rcx,0xffffffffffffffff
  40ce8a:	mov    QWORD PTR [rbp-0x40],rcx
  40ce8e:	cmp    rax,QWORD PTR [rbp-0x18]
  40ce92:	jbe    40cedd <test_scan@@Base+0x137d>
  40ce98:	mov    rdi,QWORD PTR [rbp-0x10]
  40ce9c:	mov    rsi,QWORD PTR [rbp-0x40]
  40cea0:	call   408a20 <verify_monster@@Base+0x1ed0>
  40cea5:	mov    rdi,rax
  40cea8:	call   407e10 <verify_monster@@Base+0x12c0>
  40cead:	mov    QWORD PTR [rbp-0x38],rax
  40ceb1:	mov    rdi,QWORD PTR [rbp-0x38]
  40ceb5:	mov    rsi,QWORD PTR [rbp-0x28]
  40ceb9:	movsxd rdx,DWORD PTR [rbp-0x2c]
  40cebd:	call   416e20 <main@@Base+0x30f0>
  40cec2:	cmp    eax,0x0
  40cec5:	jne    40ced8 <test_scan@@Base+0x1378>
  40cecb:	mov    rax,QWORD PTR [rbp-0x40]
  40cecf:	mov    QWORD PTR [rbp-0x8],rax
  40ced3:	jmp    40cee8 <test_scan@@Base+0x1388>
  40ced8:	jmp    40ce7c <test_scan@@Base+0x131c>
  40cedd:	mov    rax,QWORD PTR [rip+0x241c4]        # 4310a8 <__data_start@@Base+0x10>
  40cee4:	mov    QWORD PTR [rbp-0x8],rax
  40cee8:	mov    rax,QWORD PTR [rbp-0x8]
  40ceec:	add    rsp,0x50
  40cef0:	pop    rbp
  40cef1:	ret    
  40cef2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cefc:	nop    DWORD PTR [rax+0x0]
  40cf00:	push   rbp
  40cf01:	mov    rbp,rsp
  40cf04:	sub    rsp,0x50
  40cf08:	mov    QWORD PTR [rbp-0x10],rdi
  40cf0c:	mov    QWORD PTR [rbp-0x18],rsi
  40cf10:	mov    QWORD PTR [rbp-0x20],rdx
  40cf14:	mov    QWORD PTR [rbp-0x28],rcx
  40cf18:	mov    rax,QWORD PTR [rbp-0x18]
  40cf1c:	mov    QWORD PTR [rbp-0x38],rax
  40cf20:	mov    rax,QWORD PTR [rbp-0x38]
  40cf24:	mov    rcx,QWORD PTR [rbp-0x20]
  40cf28:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf2c:	mov    QWORD PTR [rbp-0x40],rax
  40cf30:	mov    QWORD PTR [rbp-0x48],rcx
  40cf34:	call   4089d0 <verify_monster@@Base+0x1e80>
  40cf39:	mov    rcx,QWORD PTR [rbp-0x48]
  40cf3d:	cmp    rcx,rax
  40cf40:	jae    40cf53 <test_scan@@Base+0x13f3>
  40cf46:	mov    rax,QWORD PTR [rbp-0x20]
  40cf4a:	mov    QWORD PTR [rbp-0x50],rax
  40cf4e:	jmp    40cf60 <test_scan@@Base+0x1400>
  40cf53:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf57:	call   4089d0 <verify_monster@@Base+0x1e80>
  40cf5c:	mov    QWORD PTR [rbp-0x50],rax
  40cf60:	mov    rax,QWORD PTR [rbp-0x50]
  40cf64:	mov    rcx,QWORD PTR [rbp-0x40]
  40cf68:	cmp    rcx,rax
  40cf6b:	jae    40cfc9 <test_scan@@Base+0x1469>
  40cf71:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf75:	mov    rsi,QWORD PTR [rbp-0x38]
  40cf79:	call   408a20 <verify_monster@@Base+0x1ed0>
  40cf7e:	mov    rdi,rax
  40cf81:	call   407e10 <verify_monster@@Base+0x12c0>
  40cf86:	xor    ecx,ecx
  40cf88:	mov    edx,ecx
  40cf8a:	mov    QWORD PTR [rbp-0x30],rax
  40cf8e:	mov    rdi,QWORD PTR [rbp-0x30]
  40cf92:	mov    rsi,QWORD PTR [rbp-0x28]
  40cf96:	call   416ef0 <main@@Base+0x31c0>
  40cf9b:	cmp    eax,0x0
  40cf9e:	jne    40cfb1 <test_scan@@Base+0x1451>
  40cfa4:	mov    rax,QWORD PTR [rbp-0x38]
  40cfa8:	mov    QWORD PTR [rbp-0x8],rax
  40cfac:	jmp    40cfd4 <test_scan@@Base+0x1474>
  40cfb1:	jmp    40cfb6 <test_scan@@Base+0x1456>
  40cfb6:	mov    rax,QWORD PTR [rbp-0x38]
  40cfba:	add    rax,0x1
  40cfc0:	mov    QWORD PTR [rbp-0x38],rax
  40cfc4:	jmp    40cf20 <test_scan@@Base+0x13c0>
  40cfc9:	mov    rax,QWORD PTR [rip+0x240d8]        # 4310a8 <__data_start@@Base+0x10>
  40cfd0:	mov    QWORD PTR [rbp-0x8],rax
  40cfd4:	mov    rax,QWORD PTR [rbp-0x8]
  40cfd8:	add    rsp,0x50
  40cfdc:	pop    rbp
  40cfdd:	ret    
  40cfde:	xchg   ax,ax
  40cfe0:	push   rbp
  40cfe1:	mov    rbp,rsp
  40cfe4:	sub    rsp,0x60
  40cfe8:	mov    QWORD PTR [rbp-0x10],rdi
  40cfec:	mov    QWORD PTR [rbp-0x18],rsi
  40cff0:	mov    QWORD PTR [rbp-0x20],rdx
  40cff4:	mov    QWORD PTR [rbp-0x28],rcx
  40cff8:	mov    DWORD PTR [rbp-0x2c],r8d
  40cffc:	mov    rax,QWORD PTR [rbp-0x18]
  40d000:	mov    QWORD PTR [rbp-0x40],rax
  40d004:	mov    rax,QWORD PTR [rbp-0x40]
  40d008:	mov    rcx,QWORD PTR [rbp-0x20]
  40d00c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d010:	mov    QWORD PTR [rbp-0x48],rax
  40d014:	mov    QWORD PTR [rbp-0x50],rcx
  40d018:	call   4089d0 <verify_monster@@Base+0x1e80>
  40d01d:	mov    rcx,QWORD PTR [rbp-0x50]
  40d021:	cmp    rcx,rax
  40d024:	jae    40d037 <test_scan@@Base+0x14d7>
  40d02a:	mov    rax,QWORD PTR [rbp-0x20]
  40d02e:	mov    QWORD PTR [rbp-0x58],rax
  40d032:	jmp    40d044 <test_scan@@Base+0x14e4>
  40d037:	mov    rdi,QWORD PTR [rbp-0x10]
  40d03b:	call   4089d0 <verify_monster@@Base+0x1e80>
  40d040:	mov    QWORD PTR [rbp-0x58],rax
  40d044:	mov    rax,QWORD PTR [rbp-0x58]
  40d048:	mov    rcx,QWORD PTR [rbp-0x48]
  40d04c:	cmp    rcx,rax
  40d04f:	jae    40d0ad <test_scan@@Base+0x154d>
  40d055:	mov    rdi,QWORD PTR [rbp-0x10]
  40d059:	mov    rsi,QWORD PTR [rbp-0x40]
  40d05d:	call   408a20 <verify_monster@@Base+0x1ed0>
  40d062:	mov    rdi,rax
  40d065:	call   407e10 <verify_monster@@Base+0x12c0>
  40d06a:	mov    QWORD PTR [rbp-0x38],rax
  40d06e:	mov    rdi,QWORD PTR [rbp-0x38]
  40d072:	mov    rsi,QWORD PTR [rbp-0x28]
  40d076:	movsxd rdx,DWORD PTR [rbp-0x2c]
  40d07a:	call   416e20 <main@@Base+0x30f0>
  40d07f:	cmp    eax,0x0
  40d082:	jne    40d095 <test_scan@@Base+0x1535>
  40d088:	mov    rax,QWORD PTR [rbp-0x40]
  40d08c:	mov    QWORD PTR [rbp-0x8],rax
  40d090:	jmp    40d0b8 <test_scan@@Base+0x1558>
  40d095:	jmp    40d09a <test_scan@@Base+0x153a>
  40d09a:	mov    rax,QWORD PTR [rbp-0x40]
  40d09e:	add    rax,0x1
  40d0a4:	mov    QWORD PTR [rbp-0x40],rax
  40d0a8:	jmp    40d004 <test_scan@@Base+0x14a4>
  40d0ad:	mov    rax,QWORD PTR [rip+0x23ff4]        # 4310a8 <__data_start@@Base+0x10>
  40d0b4:	mov    QWORD PTR [rbp-0x8],rax
  40d0b8:	mov    rax,QWORD PTR [rbp-0x8]
  40d0bc:	add    rsp,0x60
  40d0c0:	pop    rbp
  40d0c1:	ret    
  40d0c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0cc:	nop    DWORD PTR [rax+0x0]
  40d0d0:	push   rbp
  40d0d1:	mov    rbp,rsp
  40d0d4:	sub    rsp,0x20
  40d0d8:	mov    QWORD PTR [rbp-0x8],rdi
  40d0dc:	mov    QWORD PTR [rbp-0x10],rsi
  40d0e0:	mov    QWORD PTR [rbp-0x18],rdx
  40d0e4:	mov    QWORD PTR [rbp-0x20],rcx
  40d0e8:	mov    rdi,QWORD PTR [rbp-0x8]
  40d0ec:	mov    rsi,QWORD PTR [rbp-0x10]
  40d0f0:	mov    rdx,QWORD PTR [rbp-0x18]
  40d0f4:	mov    rcx,QWORD PTR [rbp-0x20]
  40d0f8:	call   40d110 <test_scan@@Base+0x15b0>
  40d0fd:	add    rsp,0x20
  40d101:	pop    rbp
  40d102:	ret    
  40d103:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d10d:	nop    DWORD PTR [rax]
  40d110:	push   rbp
  40d111:	mov    rbp,rsp
  40d114:	sub    rsp,0x50
  40d118:	mov    QWORD PTR [rbp-0x10],rdi
  40d11c:	mov    QWORD PTR [rbp-0x18],rsi
  40d120:	mov    QWORD PTR [rbp-0x20],rdx
  40d124:	mov    QWORD PTR [rbp-0x28],rcx
  40d128:	mov    rax,QWORD PTR [rbp-0x20]
  40d12c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d130:	mov    QWORD PTR [rbp-0x40],rax
  40d134:	call   4089d0 <verify_monster@@Base+0x1e80>
  40d139:	mov    rcx,QWORD PTR [rbp-0x40]
  40d13d:	cmp    rcx,rax
  40d140:	jae    40d153 <test_scan@@Base+0x15f3>
  40d146:	mov    rax,QWORD PTR [rbp-0x20]
  40d14a:	mov    QWORD PTR [rbp-0x48],rax
  40d14e:	jmp    40d160 <test_scan@@Base+0x1600>
  40d153:	mov    rdi,QWORD PTR [rbp-0x10]
  40d157:	call   4089d0 <verify_monster@@Base+0x1e80>
  40d15c:	mov    QWORD PTR [rbp-0x48],rax
  40d160:	mov    rax,QWORD PTR [rbp-0x48]
  40d164:	mov    QWORD PTR [rbp-0x38],rax
  40d168:	mov    rax,QWORD PTR [rbp-0x38]
  40d16c:	mov    rcx,rax
  40d16f:	add    rcx,0xffffffffffffffff
  40d176:	mov    QWORD PTR [rbp-0x38],rcx
  40d17a:	cmp    rax,QWORD PTR [rbp-0x18]
  40d17e:	jbe    40d1c9 <test_scan@@Base+0x1669>
  40d184:	mov    rdi,QWORD PTR [rbp-0x10]
  40d188:	mov    rsi,QWORD PTR [rbp-0x38]
  40d18c:	call   408a20 <verify_monster@@Base+0x1ed0>
  40d191:	mov    rdi,rax
  40d194:	call   407e10 <verify_monster@@Base+0x12c0>
  40d199:	xor    ecx,ecx
  40d19b:	mov    edx,ecx
  40d19d:	mov    QWORD PTR [rbp-0x30],rax
  40d1a1:	mov    rdi,QWORD PTR [rbp-0x30]
  40d1a5:	mov    rsi,QWORD PTR [rbp-0x28]
  40d1a9:	call   416ef0 <main@@Base+0x31c0>
  40d1ae:	cmp    eax,0x0
  40d1b1:	jne    40d1c4 <test_scan@@Base+0x1664>
  40d1b7:	mov    rax,QWORD PTR [rbp-0x38]
  40d1bb:	mov    QWORD PTR [rbp-0x8],rax
  40d1bf:	jmp    40d1d4 <test_scan@@Base+0x1674>
  40d1c4:	jmp    40d168 <test_scan@@Base+0x1608>
  40d1c9:	mov    rax,QWORD PTR [rip+0x23ed8]        # 4310a8 <__data_start@@Base+0x10>
  40d1d0:	mov    QWORD PTR [rbp-0x8],rax
  40d1d4:	mov    rax,QWORD PTR [rbp-0x8]
  40d1d8:	add    rsp,0x50
  40d1dc:	pop    rbp
  40d1dd:	ret    
  40d1de:	xchg   ax,ax
  40d1e0:	push   rbp
  40d1e1:	mov    rbp,rsp
  40d1e4:	sub    rsp,0x20
  40d1e8:	mov    QWORD PTR [rbp-0x8],rdi
  40d1ec:	mov    QWORD PTR [rbp-0x10],rsi
  40d1f0:	mov    QWORD PTR [rbp-0x20],0x0
  40d1f8:	mov    rdi,QWORD PTR [rbp-0x8]
  40d1fc:	mov    rsi,QWORD PTR [rbp-0x10]
  40d200:	call   40cb30 <test_scan@@Base+0xfd0>
  40d205:	mov    QWORD PTR [rbp-0x18],rax
  40d209:	mov    rax,QWORD PTR [rbp-0x18]
  40d20d:	cmp    rax,QWORD PTR [rip+0x23e94]        # 4310a8 <__data_start@@Base+0x10>
  40d214:	je     40d252 <test_scan@@Base+0x16f2>
  40d21a:	mov    rax,QWORD PTR [rbp-0x20]
  40d21e:	add    rax,0x1
  40d224:	mov    QWORD PTR [rbp-0x20],rax
  40d228:	mov    rdi,QWORD PTR [rbp-0x8]
  40d22c:	mov    rax,QWORD PTR [rbp-0x18]
  40d230:	add    rax,0x1
  40d236:	mov    rdx,QWORD PTR [rip+0x23e73]        # 4310b0 <__data_start@@Base+0x18>
  40d23d:	mov    rcx,QWORD PTR [rbp-0x10]
  40d241:	mov    rsi,rax
  40d244:	call   40cbf0 <test_scan@@Base+0x1090>
  40d249:	mov    QWORD PTR [rbp-0x18],rax
  40d24d:	jmp    40d209 <test_scan@@Base+0x16a9>
  40d252:	mov    rax,QWORD PTR [rbp-0x20]
  40d256:	add    rsp,0x20
  40d25a:	pop    rbp
  40d25b:	ret    
  40d25c:	nop    DWORD PTR [rax+0x0]
  40d260:	push   rbp
  40d261:	mov    rbp,rsp
  40d264:	sub    rsp,0x30
  40d268:	mov    QWORD PTR [rbp-0x10],rdi
  40d26c:	mov    BYTE PTR [rbp-0x11],sil
  40d270:	mov    QWORD PTR [rbp-0x20],0x0
  40d278:	mov    rax,QWORD PTR [rbp-0x20]
  40d27c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d280:	mov    QWORD PTR [rbp-0x28],rax
  40d284:	call   408380 <verify_monster@@Base+0x1830>
  40d289:	mov    rcx,QWORD PTR [rbp-0x28]
  40d28d:	cmp    rcx,rax
  40d290:	jae    40d30a <test_scan@@Base+0x17aa>
  40d296:	mov    rdi,QWORD PTR [rbp-0x10]
  40d29a:	mov    rsi,QWORD PTR [rbp-0x20]
  40d29e:	call   4083a0 <verify_monster@@Base+0x1850>
  40d2a3:	mov    BYTE PTR [rbp-0x12],al
  40d2a6:	movzx  ecx,BYTE PTR [rbp-0x12]
  40d2aa:	movzx  edx,BYTE PTR [rbp-0x11]
  40d2ae:	cmp    ecx,edx
  40d2b0:	jge    40d2c3 <test_scan@@Base+0x1763>
  40d2b6:	mov    eax,0xffffffff
  40d2bb:	mov    DWORD PTR [rbp-0x2c],eax
  40d2be:	jmp    40d2d9 <test_scan@@Base+0x1779>
  40d2c3:	movzx  eax,BYTE PTR [rbp-0x12]
  40d2c7:	movzx  ecx,BYTE PTR [rbp-0x11]
  40d2cb:	cmp    eax,ecx
  40d2cd:	setg   dl
  40d2d0:	and    dl,0x1
  40d2d3:	movzx  eax,dl
  40d2d6:	mov    DWORD PTR [rbp-0x2c],eax
  40d2d9:	mov    eax,DWORD PTR [rbp-0x2c]
  40d2dc:	cmp    eax,0x0
  40d2df:	jne    40d2f2 <test_scan@@Base+0x1792>
  40d2e5:	mov    rax,QWORD PTR [rbp-0x20]
  40d2e9:	mov    QWORD PTR [rbp-0x8],rax
  40d2ed:	jmp    40d315 <test_scan@@Base+0x17b5>
  40d2f2:	jmp    40d2f7 <test_scan@@Base+0x1797>
  40d2f7:	mov    rax,QWORD PTR [rbp-0x20]
  40d2fb:	add    rax,0x1
  40d301:	mov    QWORD PTR [rbp-0x20],rax
  40d305:	jmp    40d278 <test_scan@@Base+0x1718>
  40d30a:	mov    rax,QWORD PTR [rip+0x23d97]        # 4310a8 <__data_start@@Base+0x10>
  40d311:	mov    QWORD PTR [rbp-0x8],rax
  40d315:	mov    rax,QWORD PTR [rbp-0x8]
  40d319:	add    rsp,0x30
  40d31d:	pop    rbp
  40d31e:	ret    
  40d31f:	nop
  40d320:	push   rbp
  40d321:	mov    rbp,rsp
  40d324:	sub    rsp,0x50
  40d328:	mov    QWORD PTR [rbp-0x10],rdi
  40d32c:	mov    QWORD PTR [rbp-0x18],rsi
  40d330:	mov    QWORD PTR [rbp-0x20],rdx
  40d334:	mov    BYTE PTR [rbp-0x21],cl
  40d337:	mov    rax,QWORD PTR [rbp-0x18]
  40d33b:	mov    QWORD PTR [rbp-0x30],rax
  40d33f:	mov    rax,QWORD PTR [rbp-0x30]
  40d343:	mov    rcx,QWORD PTR [rbp-0x20]
  40d347:	mov    rdi,QWORD PTR [rbp-0x10]
  40d34b:	mov    QWORD PTR [rbp-0x38],rax
  40d34f:	mov    QWORD PTR [rbp-0x40],rcx
  40d353:	call   408380 <verify_monster@@Base+0x1830>
  40d358:	mov    rcx,QWORD PTR [rbp-0x40]
  40d35c:	cmp    rcx,rax
  40d35f:	jae    40d372 <test_scan@@Base+0x1812>
  40d365:	mov    rax,QWORD PTR [rbp-0x20]
  40d369:	mov    QWORD PTR [rbp-0x48],rax
  40d36d:	jmp    40d37f <test_scan@@Base+0x181f>
  40d372:	mov    rdi,QWORD PTR [rbp-0x10]
  40d376:	call   408380 <verify_monster@@Base+0x1830>
  40d37b:	mov    QWORD PTR [rbp-0x48],rax
  40d37f:	mov    rax,QWORD PTR [rbp-0x48]
  40d383:	mov    rcx,QWORD PTR [rbp-0x38]
  40d387:	cmp    rcx,rax
  40d38a:	jae    40d404 <test_scan@@Base+0x18a4>
  40d390:	mov    rdi,QWORD PTR [rbp-0x10]
  40d394:	mov    rsi,QWORD PTR [rbp-0x30]
  40d398:	call   4083a0 <verify_monster@@Base+0x1850>
  40d39d:	mov    BYTE PTR [rbp-0x22],al
  40d3a0:	movzx  ecx,BYTE PTR [rbp-0x22]
  40d3a4:	movzx  edx,BYTE PTR [rbp-0x21]
  40d3a8:	cmp    ecx,edx
  40d3aa:	jge    40d3bd <test_scan@@Base+0x185d>
  40d3b0:	mov    eax,0xffffffff
  40d3b5:	mov    DWORD PTR [rbp-0x4c],eax
  40d3b8:	jmp    40d3d3 <test_scan@@Base+0x1873>
  40d3bd:	movzx  eax,BYTE PTR [rbp-0x22]
  40d3c1:	movzx  ecx,BYTE PTR [rbp-0x21]
  40d3c5:	cmp    eax,ecx
  40d3c7:	setg   dl
  40d3ca:	and    dl,0x1
  40d3cd:	movzx  eax,dl
  40d3d0:	mov    DWORD PTR [rbp-0x4c],eax
  40d3d3:	mov    eax,DWORD PTR [rbp-0x4c]
  40d3d6:	cmp    eax,0x0
  40d3d9:	jne    40d3ec <test_scan@@Base+0x188c>
  40d3df:	mov    rax,QWORD PTR [rbp-0x30]
  40d3e3:	mov    QWORD PTR [rbp-0x8],rax
  40d3e7:	jmp    40d40f <test_scan@@Base+0x18af>
  40d3ec:	jmp    40d3f1 <test_scan@@Base+0x1891>
  40d3f1:	mov    rax,QWORD PTR [rbp-0x30]
  40d3f5:	add    rax,0x1
  40d3fb:	mov    QWORD PTR [rbp-0x30],rax
  40d3ff:	jmp    40d33f <test_scan@@Base+0x17df>
  40d404:	mov    rax,QWORD PTR [rip+0x23c9d]        # 4310a8 <__data_start@@Base+0x10>
  40d40b:	mov    QWORD PTR [rbp-0x8],rax
  40d40f:	mov    rax,QWORD PTR [rbp-0x8]
  40d413:	add    rsp,0x50
  40d417:	pop    rbp
  40d418:	ret    
  40d419:	nop    DWORD PTR [rax+0x0]
  40d420:	push   rbp
  40d421:	mov    rbp,rsp
  40d424:	sub    rsp,0x30
  40d428:	mov    QWORD PTR [rbp-0x10],rdi
  40d42c:	mov    BYTE PTR [rbp-0x11],sil
  40d430:	mov    rdi,QWORD PTR [rbp-0x10]
  40d434:	call   408380 <verify_monster@@Base+0x1830>
  40d439:	mov    QWORD PTR [rbp-0x20],rax
  40d43d:	mov    rax,QWORD PTR [rbp-0x20]
  40d441:	mov    rcx,rax
  40d444:	add    rcx,0xffffffffffffffff
  40d44b:	mov    QWORD PTR [rbp-0x20],rcx
  40d44f:	cmp    rax,0x0
  40d453:	jbe    40d4ba <test_scan@@Base+0x195a>
  40d459:	mov    rdi,QWORD PTR [rbp-0x10]
  40d45d:	mov    rsi,QWORD PTR [rbp-0x20]
  40d461:	call   4083a0 <verify_monster@@Base+0x1850>
  40d466:	mov    BYTE PTR [rbp-0x12],al
  40d469:	movzx  ecx,BYTE PTR [rbp-0x12]
  40d46d:	movzx  edx,BYTE PTR [rbp-0x11]
  40d471:	cmp    ecx,edx
  40d473:	jge    40d486 <test_scan@@Base+0x1926>
  40d479:	mov    eax,0xffffffff
  40d47e:	mov    DWORD PTR [rbp-0x24],eax
  40d481:	jmp    40d49c <test_scan@@Base+0x193c>
  40d486:	movzx  eax,BYTE PTR [rbp-0x12]
  40d48a:	movzx  ecx,BYTE PTR [rbp-0x11]
  40d48e:	cmp    eax,ecx
  40d490:	setg   dl
  40d493:	and    dl,0x1
  40d496:	movzx  eax,dl
  40d499:	mov    DWORD PTR [rbp-0x24],eax
  40d49c:	mov    eax,DWORD PTR [rbp-0x24]
  40d49f:	cmp    eax,0x0
  40d4a2:	jne    40d4b5 <test_scan@@Base+0x1955>
  40d4a8:	mov    rax,QWORD PTR [rbp-0x20]
  40d4ac:	mov    QWORD PTR [rbp-0x8],rax
  40d4b0:	jmp    40d4c5 <test_scan@@Base+0x1965>
  40d4b5:	jmp    40d43d <test_scan@@Base+0x18dd>
  40d4ba:	mov    rax,QWORD PTR [rip+0x23be7]        # 4310a8 <__data_start@@Base+0x10>
  40d4c1:	mov    QWORD PTR [rbp-0x8],rax
  40d4c5:	mov    rax,QWORD PTR [rbp-0x8]
  40d4c9:	add    rsp,0x30
  40d4cd:	pop    rbp
  40d4ce:	ret    
  40d4cf:	nop
  40d4d0:	push   rbp
  40d4d1:	mov    rbp,rsp
  40d4d4:	sub    rsp,0x50
  40d4d8:	mov    QWORD PTR [rbp-0x10],rdi
  40d4dc:	mov    QWORD PTR [rbp-0x18],rsi
  40d4e0:	mov    QWORD PTR [rbp-0x20],rdx
  40d4e4:	mov    BYTE PTR [rbp-0x21],cl
  40d4e7:	mov    rax,QWORD PTR [rbp-0x20]
  40d4eb:	mov    rdi,QWORD PTR [rbp-0x10]
  40d4ef:	mov    QWORD PTR [rbp-0x38],rax
  40d4f3:	call   408380 <verify_monster@@Base+0x1830>
  40d4f8:	mov    rdx,QWORD PTR [rbp-0x38]
  40d4fc:	cmp    rdx,rax
  40d4ff:	jae    40d512 <test_scan@@Base+0x19b2>
  40d505:	mov    rax,QWORD PTR [rbp-0x20]
  40d509:	mov    QWORD PTR [rbp-0x40],rax
  40d50d:	jmp    40d51f <test_scan@@Base+0x19bf>
  40d512:	mov    rdi,QWORD PTR [rbp-0x10]
  40d516:	call   408380 <verify_monster@@Base+0x1830>
  40d51b:	mov    QWORD PTR [rbp-0x40],rax
  40d51f:	mov    rax,QWORD PTR [rbp-0x40]
  40d523:	mov    QWORD PTR [rbp-0x30],rax
  40d527:	mov    rax,QWORD PTR [rbp-0x30]
  40d52b:	mov    rcx,rax
  40d52e:	add    rcx,0xffffffffffffffff
  40d535:	mov    QWORD PTR [rbp-0x30],rcx
  40d539:	cmp    rax,QWORD PTR [rbp-0x18]
  40d53d:	jbe    40d5a4 <test_scan@@Base+0x1a44>
  40d543:	mov    rdi,QWORD PTR [rbp-0x10]
  40d547:	mov    rsi,QWORD PTR [rbp-0x30]
  40d54b:	call   4083a0 <verify_monster@@Base+0x1850>
  40d550:	mov    BYTE PTR [rbp-0x22],al
  40d553:	movzx  ecx,BYTE PTR [rbp-0x22]
  40d557:	movzx  edx,BYTE PTR [rbp-0x21]
  40d55b:	cmp    ecx,edx
  40d55d:	jge    40d570 <test_scan@@Base+0x1a10>
  40d563:	mov    eax,0xffffffff
  40d568:	mov    DWORD PTR [rbp-0x44],eax
  40d56b:	jmp    40d586 <test_scan@@Base+0x1a26>
  40d570:	movzx  eax,BYTE PTR [rbp-0x22]
  40d574:	movzx  ecx,BYTE PTR [rbp-0x21]
  40d578:	cmp    eax,ecx
  40d57a:	setg   dl
  40d57d:	and    dl,0x1
  40d580:	movzx  eax,dl
  40d583:	mov    DWORD PTR [rbp-0x44],eax
  40d586:	mov    eax,DWORD PTR [rbp-0x44]
  40d589:	cmp    eax,0x0
  40d58c:	jne    40d59f <test_scan@@Base+0x1a3f>
  40d592:	mov    rax,QWORD PTR [rbp-0x30]
  40d596:	mov    QWORD PTR [rbp-0x8],rax
  40d59a:	jmp    40d5af <test_scan@@Base+0x1a4f>
  40d59f:	jmp    40d527 <test_scan@@Base+0x19c7>
  40d5a4:	mov    rax,QWORD PTR [rip+0x23afd]        # 4310a8 <__data_start@@Base+0x10>
  40d5ab:	mov    QWORD PTR [rbp-0x8],rax
  40d5af:	mov    rax,QWORD PTR [rbp-0x8]
  40d5b3:	add    rsp,0x50
  40d5b7:	pop    rbp
  40d5b8:	ret    
  40d5b9:	nop    DWORD PTR [rax+0x0]
  40d5c0:	push   rbp
  40d5c1:	mov    rbp,rsp
  40d5c4:	sub    rsp,0x30
  40d5c8:	mov    QWORD PTR [rbp-0x10],rdi
  40d5cc:	mov    QWORD PTR [rbp-0x18],rsi
  40d5d0:	mov    QWORD PTR [rbp-0x28],0x0
  40d5d8:	mov    rax,QWORD PTR [rbp-0x28]
  40d5dc:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5e0:	mov    QWORD PTR [rbp-0x30],rax
  40d5e4:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d5e9:	mov    rcx,QWORD PTR [rbp-0x30]
  40d5ed:	cmp    rcx,rax
  40d5f0:	jae    40d646 <test_scan@@Base+0x1ae6>
  40d5f6:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5fa:	mov    rsi,QWORD PTR [rbp-0x28]
  40d5fe:	call   408c40 <verify_monster@@Base+0x20f0>
  40d603:	xor    ecx,ecx
  40d605:	mov    edx,ecx
  40d607:	mov    QWORD PTR [rbp-0x20],rax
  40d60b:	mov    rdi,QWORD PTR [rbp-0x20]
  40d60f:	mov    rsi,QWORD PTR [rbp-0x18]
  40d613:	call   416ef0 <main@@Base+0x31c0>
  40d618:	cmp    eax,0x0
  40d61b:	jne    40d62e <test_scan@@Base+0x1ace>
  40d621:	mov    rax,QWORD PTR [rbp-0x28]
  40d625:	mov    QWORD PTR [rbp-0x8],rax
  40d629:	jmp    40d651 <test_scan@@Base+0x1af1>
  40d62e:	jmp    40d633 <test_scan@@Base+0x1ad3>
  40d633:	mov    rax,QWORD PTR [rbp-0x28]
  40d637:	add    rax,0x1
  40d63d:	mov    QWORD PTR [rbp-0x28],rax
  40d641:	jmp    40d5d8 <test_scan@@Base+0x1a78>
  40d646:	mov    rax,QWORD PTR [rip+0x23a5b]        # 4310a8 <__data_start@@Base+0x10>
  40d64d:	mov    QWORD PTR [rbp-0x8],rax
  40d651:	mov    rax,QWORD PTR [rbp-0x8]
  40d655:	add    rsp,0x30
  40d659:	pop    rbp
  40d65a:	ret    
  40d65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d660:	push   rbp
  40d661:	mov    rbp,rsp
  40d664:	sub    rsp,0x50
  40d668:	mov    QWORD PTR [rbp-0x10],rdi
  40d66c:	mov    QWORD PTR [rbp-0x18],rsi
  40d670:	mov    QWORD PTR [rbp-0x20],rdx
  40d674:	mov    QWORD PTR [rbp-0x28],rcx
  40d678:	mov    rax,QWORD PTR [rbp-0x18]
  40d67c:	mov    QWORD PTR [rbp-0x38],rax
  40d680:	mov    rax,QWORD PTR [rbp-0x38]
  40d684:	mov    rcx,QWORD PTR [rbp-0x20]
  40d688:	mov    rdi,QWORD PTR [rbp-0x10]
  40d68c:	mov    QWORD PTR [rbp-0x40],rax
  40d690:	mov    QWORD PTR [rbp-0x48],rcx
  40d694:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d699:	mov    rcx,QWORD PTR [rbp-0x48]
  40d69d:	cmp    rcx,rax
  40d6a0:	jae    40d6b3 <test_scan@@Base+0x1b53>
  40d6a6:	mov    rax,QWORD PTR [rbp-0x20]
  40d6aa:	mov    QWORD PTR [rbp-0x50],rax
  40d6ae:	jmp    40d6c0 <test_scan@@Base+0x1b60>
  40d6b3:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6b7:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d6bc:	mov    QWORD PTR [rbp-0x50],rax
  40d6c0:	mov    rax,QWORD PTR [rbp-0x50]
  40d6c4:	mov    rcx,QWORD PTR [rbp-0x40]
  40d6c8:	cmp    rcx,rax
  40d6cb:	jae    40d721 <test_scan@@Base+0x1bc1>
  40d6d1:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6d5:	mov    rsi,QWORD PTR [rbp-0x38]
  40d6d9:	call   408c40 <verify_monster@@Base+0x20f0>
  40d6de:	xor    ecx,ecx
  40d6e0:	mov    edx,ecx
  40d6e2:	mov    QWORD PTR [rbp-0x30],rax
  40d6e6:	mov    rdi,QWORD PTR [rbp-0x30]
  40d6ea:	mov    rsi,QWORD PTR [rbp-0x28]
  40d6ee:	call   416ef0 <main@@Base+0x31c0>
  40d6f3:	cmp    eax,0x0
  40d6f6:	jne    40d709 <test_scan@@Base+0x1ba9>
  40d6fc:	mov    rax,QWORD PTR [rbp-0x38]
  40d700:	mov    QWORD PTR [rbp-0x8],rax
  40d704:	jmp    40d72c <test_scan@@Base+0x1bcc>
  40d709:	jmp    40d70e <test_scan@@Base+0x1bae>
  40d70e:	mov    rax,QWORD PTR [rbp-0x38]
  40d712:	add    rax,0x1
  40d718:	mov    QWORD PTR [rbp-0x38],rax
  40d71c:	jmp    40d680 <test_scan@@Base+0x1b20>
  40d721:	mov    rax,QWORD PTR [rip+0x23980]        # 4310a8 <__data_start@@Base+0x10>
  40d728:	mov    QWORD PTR [rbp-0x8],rax
  40d72c:	mov    rax,QWORD PTR [rbp-0x8]
  40d730:	add    rsp,0x50
  40d734:	pop    rbp
  40d735:	ret    
  40d736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d740:	push   rbp
  40d741:	mov    rbp,rsp
  40d744:	sub    rsp,0x40
  40d748:	mov    QWORD PTR [rbp-0x10],rdi
  40d74c:	mov    QWORD PTR [rbp-0x18],rsi
  40d750:	mov    QWORD PTR [rbp-0x20],rdx
  40d754:	mov    QWORD PTR [rbp-0x30],0x0
  40d75c:	mov    rax,QWORD PTR [rbp-0x30]
  40d760:	mov    rdi,QWORD PTR [rbp-0x10]
  40d764:	mov    QWORD PTR [rbp-0x38],rax
  40d768:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d76d:	mov    rcx,QWORD PTR [rbp-0x38]
  40d771:	cmp    rcx,rax
  40d774:	jae    40d7ca <test_scan@@Base+0x1c6a>
  40d77a:	mov    rdi,QWORD PTR [rbp-0x10]
  40d77e:	mov    rsi,QWORD PTR [rbp-0x30]
  40d782:	call   408c40 <verify_monster@@Base+0x20f0>
  40d787:	mov    QWORD PTR [rbp-0x28],rax
  40d78b:	mov    rdi,QWORD PTR [rbp-0x28]
  40d78f:	mov    rsi,QWORD PTR [rbp-0x18]
  40d793:	mov    rdx,QWORD PTR [rbp-0x20]
  40d797:	call   416e20 <main@@Base+0x30f0>
  40d79c:	cmp    eax,0x0
  40d79f:	jne    40d7b2 <test_scan@@Base+0x1c52>
  40d7a5:	mov    rax,QWORD PTR [rbp-0x30]
  40d7a9:	mov    QWORD PTR [rbp-0x8],rax
  40d7ad:	jmp    40d7d5 <test_scan@@Base+0x1c75>
  40d7b2:	jmp    40d7b7 <test_scan@@Base+0x1c57>
  40d7b7:	mov    rax,QWORD PTR [rbp-0x30]
  40d7bb:	add    rax,0x1
  40d7c1:	mov    QWORD PTR [rbp-0x30],rax
  40d7c5:	jmp    40d75c <test_scan@@Base+0x1bfc>
  40d7ca:	mov    rax,QWORD PTR [rip+0x238d7]        # 4310a8 <__data_start@@Base+0x10>
  40d7d1:	mov    QWORD PTR [rbp-0x8],rax
  40d7d5:	mov    rax,QWORD PTR [rbp-0x8]
  40d7d9:	add    rsp,0x40
  40d7dd:	pop    rbp
  40d7de:	ret    
  40d7df:	nop
  40d7e0:	push   rbp
  40d7e1:	mov    rbp,rsp
  40d7e4:	sub    rsp,0x60
  40d7e8:	mov    QWORD PTR [rbp-0x10],rdi
  40d7ec:	mov    QWORD PTR [rbp-0x18],rsi
  40d7f0:	mov    QWORD PTR [rbp-0x20],rdx
  40d7f4:	mov    QWORD PTR [rbp-0x28],rcx
  40d7f8:	mov    QWORD PTR [rbp-0x30],r8
  40d7fc:	mov    rax,QWORD PTR [rbp-0x18]
  40d800:	mov    QWORD PTR [rbp-0x40],rax
  40d804:	mov    rax,QWORD PTR [rbp-0x40]
  40d808:	mov    rcx,QWORD PTR [rbp-0x20]
  40d80c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d810:	mov    QWORD PTR [rbp-0x48],rax
  40d814:	mov    QWORD PTR [rbp-0x50],rcx
  40d818:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d81d:	mov    rcx,QWORD PTR [rbp-0x50]
  40d821:	cmp    rcx,rax
  40d824:	jae    40d837 <test_scan@@Base+0x1cd7>
  40d82a:	mov    rax,QWORD PTR [rbp-0x20]
  40d82e:	mov    QWORD PTR [rbp-0x58],rax
  40d832:	jmp    40d844 <test_scan@@Base+0x1ce4>
  40d837:	mov    rdi,QWORD PTR [rbp-0x10]
  40d83b:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d840:	mov    QWORD PTR [rbp-0x58],rax
  40d844:	mov    rax,QWORD PTR [rbp-0x58]
  40d848:	mov    rcx,QWORD PTR [rbp-0x48]
  40d84c:	cmp    rcx,rax
  40d84f:	jae    40d8a5 <test_scan@@Base+0x1d45>
  40d855:	mov    rdi,QWORD PTR [rbp-0x10]
  40d859:	mov    rsi,QWORD PTR [rbp-0x40]
  40d85d:	call   408c40 <verify_monster@@Base+0x20f0>
  40d862:	mov    QWORD PTR [rbp-0x38],rax
  40d866:	mov    rdi,QWORD PTR [rbp-0x38]
  40d86a:	mov    rsi,QWORD PTR [rbp-0x28]
  40d86e:	mov    rdx,QWORD PTR [rbp-0x30]
  40d872:	call   416e20 <main@@Base+0x30f0>
  40d877:	cmp    eax,0x0
  40d87a:	jne    40d88d <test_scan@@Base+0x1d2d>
  40d880:	mov    rax,QWORD PTR [rbp-0x40]
  40d884:	mov    QWORD PTR [rbp-0x8],rax
  40d888:	jmp    40d8b0 <test_scan@@Base+0x1d50>
  40d88d:	jmp    40d892 <test_scan@@Base+0x1d32>
  40d892:	mov    rax,QWORD PTR [rbp-0x40]
  40d896:	add    rax,0x1
  40d89c:	mov    QWORD PTR [rbp-0x40],rax
  40d8a0:	jmp    40d804 <test_scan@@Base+0x1ca4>
  40d8a5:	mov    rax,QWORD PTR [rip+0x237fc]        # 4310a8 <__data_start@@Base+0x10>
  40d8ac:	mov    QWORD PTR [rbp-0x8],rax
  40d8b0:	mov    rax,QWORD PTR [rbp-0x8]
  40d8b4:	add    rsp,0x60
  40d8b8:	pop    rbp
  40d8b9:	ret    
  40d8ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d8c0:	push   rbp
  40d8c1:	mov    rbp,rsp
  40d8c4:	sub    rsp,0x30
  40d8c8:	mov    QWORD PTR [rbp-0x10],rdi
  40d8cc:	mov    QWORD PTR [rbp-0x18],rsi
  40d8d0:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8d4:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d8d9:	mov    QWORD PTR [rbp-0x28],rax
  40d8dd:	mov    rax,QWORD PTR [rbp-0x28]
  40d8e1:	mov    rcx,rax
  40d8e4:	add    rcx,0xffffffffffffffff
  40d8eb:	mov    QWORD PTR [rbp-0x28],rcx
  40d8ef:	cmp    rax,0x0
  40d8f3:	jbe    40d936 <test_scan@@Base+0x1dd6>
  40d8f9:	mov    rdi,QWORD PTR [rbp-0x10]
  40d8fd:	mov    rsi,QWORD PTR [rbp-0x28]
  40d901:	call   408c40 <verify_monster@@Base+0x20f0>
  40d906:	xor    ecx,ecx
  40d908:	mov    edx,ecx
  40d90a:	mov    QWORD PTR [rbp-0x20],rax
  40d90e:	mov    rdi,QWORD PTR [rbp-0x20]
  40d912:	mov    rsi,QWORD PTR [rbp-0x18]
  40d916:	call   416ef0 <main@@Base+0x31c0>
  40d91b:	cmp    eax,0x0
  40d91e:	jne    40d931 <test_scan@@Base+0x1dd1>
  40d924:	mov    rax,QWORD PTR [rbp-0x28]
  40d928:	mov    QWORD PTR [rbp-0x8],rax
  40d92c:	jmp    40d941 <test_scan@@Base+0x1de1>
  40d931:	jmp    40d8dd <test_scan@@Base+0x1d7d>
  40d936:	mov    rax,QWORD PTR [rip+0x2376b]        # 4310a8 <__data_start@@Base+0x10>
  40d93d:	mov    QWORD PTR [rbp-0x8],rax
  40d941:	mov    rax,QWORD PTR [rbp-0x8]
  40d945:	add    rsp,0x30
  40d949:	pop    rbp
  40d94a:	ret    
  40d94b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d950:	push   rbp
  40d951:	mov    rbp,rsp
  40d954:	sub    rsp,0x50
  40d958:	mov    QWORD PTR [rbp-0x10],rdi
  40d95c:	mov    QWORD PTR [rbp-0x18],rsi
  40d960:	mov    QWORD PTR [rbp-0x20],rdx
  40d964:	mov    QWORD PTR [rbp-0x28],rcx
  40d968:	mov    rax,QWORD PTR [rbp-0x20]
  40d96c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d970:	mov    QWORD PTR [rbp-0x40],rax
  40d974:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d979:	mov    rcx,QWORD PTR [rbp-0x40]
  40d97d:	cmp    rcx,rax
  40d980:	jae    40d993 <test_scan@@Base+0x1e33>
  40d986:	mov    rax,QWORD PTR [rbp-0x20]
  40d98a:	mov    QWORD PTR [rbp-0x48],rax
  40d98e:	jmp    40d9a0 <test_scan@@Base+0x1e40>
  40d993:	mov    rdi,QWORD PTR [rbp-0x10]
  40d997:	call   408bf0 <verify_monster@@Base+0x20a0>
  40d99c:	mov    QWORD PTR [rbp-0x48],rax
  40d9a0:	mov    rax,QWORD PTR [rbp-0x48]
  40d9a4:	mov    QWORD PTR [rbp-0x38],rax
  40d9a8:	mov    rax,QWORD PTR [rbp-0x38]
  40d9ac:	mov    rcx,rax
  40d9af:	add    rcx,0xffffffffffffffff
  40d9b6:	mov    QWORD PTR [rbp-0x38],rcx
  40d9ba:	cmp    rax,QWORD PTR [rbp-0x18]
  40d9be:	jbe    40da01 <test_scan@@Base+0x1ea1>
  40d9c4:	mov    rdi,QWORD PTR [rbp-0x10]
  40d9c8:	mov    rsi,QWORD PTR [rbp-0x38]
  40d9cc:	call   408c40 <verify_monster@@Base+0x20f0>
  40d9d1:	xor    ecx,ecx
  40d9d3:	mov    edx,ecx
  40d9d5:	mov    QWORD PTR [rbp-0x30],rax
  40d9d9:	mov    rdi,QWORD PTR [rbp-0x30]
  40d9dd:	mov    rsi,QWORD PTR [rbp-0x28]
  40d9e1:	call   416ef0 <main@@Base+0x31c0>
  40d9e6:	cmp    eax,0x0
  40d9e9:	jne    40d9fc <test_scan@@Base+0x1e9c>
  40d9ef:	mov    rax,QWORD PTR [rbp-0x38]
  40d9f3:	mov    QWORD PTR [rbp-0x8],rax
  40d9f7:	jmp    40da0c <test_scan@@Base+0x1eac>
  40d9fc:	jmp    40d9a8 <test_scan@@Base+0x1e48>
  40da01:	mov    rax,QWORD PTR [rip+0x236a0]        # 4310a8 <__data_start@@Base+0x10>
  40da08:	mov    QWORD PTR [rbp-0x8],rax
  40da0c:	mov    rax,QWORD PTR [rbp-0x8]
  40da10:	add    rsp,0x50
  40da14:	pop    rbp
  40da15:	ret    
  40da16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da20:	push   rbp
  40da21:	mov    rbp,rsp
  40da24:	sub    rsp,0x30
  40da28:	mov    QWORD PTR [rbp-0x10],rdi
  40da2c:	mov    QWORD PTR [rbp-0x18],rsi
  40da30:	mov    QWORD PTR [rbp-0x20],rdx
  40da34:	mov    rdi,QWORD PTR [rbp-0x10]
  40da38:	call   408bf0 <verify_monster@@Base+0x20a0>
  40da3d:	mov    QWORD PTR [rbp-0x30],rax
  40da41:	mov    rax,QWORD PTR [rbp-0x30]
  40da45:	mov    rcx,rax
  40da48:	add    rcx,0xffffffffffffffff
  40da4f:	mov    QWORD PTR [rbp-0x30],rcx
  40da53:	cmp    rax,0x0
  40da57:	jbe    40da9a <test_scan@@Base+0x1f3a>
  40da5d:	mov    rdi,QWORD PTR [rbp-0x10]
  40da61:	mov    rsi,QWORD PTR [rbp-0x30]
  40da65:	call   408c40 <verify_monster@@Base+0x20f0>
  40da6a:	mov    QWORD PTR [rbp-0x28],rax
  40da6e:	mov    rdi,QWORD PTR [rbp-0x28]
  40da72:	mov    rsi,QWORD PTR [rbp-0x18]
  40da76:	mov    rdx,QWORD PTR [rbp-0x20]
  40da7a:	call   416e20 <main@@Base+0x30f0>
  40da7f:	cmp    eax,0x0
  40da82:	jne    40da95 <test_scan@@Base+0x1f35>
  40da88:	mov    rax,QWORD PTR [rbp-0x30]
  40da8c:	mov    QWORD PTR [rbp-0x8],rax
  40da90:	jmp    40daa5 <test_scan@@Base+0x1f45>
  40da95:	jmp    40da41 <test_scan@@Base+0x1ee1>
  40da9a:	mov    rax,QWORD PTR [rip+0x23607]        # 4310a8 <__data_start@@Base+0x10>
  40daa1:	mov    QWORD PTR [rbp-0x8],rax
  40daa5:	mov    rax,QWORD PTR [rbp-0x8]
  40daa9:	add    rsp,0x30
  40daad:	pop    rbp
  40daae:	ret    
  40daaf:	nop
  40dab0:	push   rbp
  40dab1:	mov    rbp,rsp
  40dab4:	sub    rsp,0x50
  40dab8:	mov    QWORD PTR [rbp-0x10],rdi
  40dabc:	mov    QWORD PTR [rbp-0x18],rsi
  40dac0:	mov    QWORD PTR [rbp-0x20],rdx
  40dac4:	mov    QWORD PTR [rbp-0x28],rcx
  40dac8:	mov    QWORD PTR [rbp-0x30],r8
  40dacc:	mov    rax,QWORD PTR [rbp-0x20]
  40dad0:	mov    rdi,QWORD PTR [rbp-0x10]
  40dad4:	mov    QWORD PTR [rbp-0x48],rax
  40dad8:	call   408bf0 <verify_monster@@Base+0x20a0>
  40dadd:	mov    rcx,QWORD PTR [rbp-0x48]
  40dae1:	cmp    rcx,rax
  40dae4:	jae    40daf7 <test_scan@@Base+0x1f97>
  40daea:	mov    rax,QWORD PTR [rbp-0x20]
  40daee:	mov    QWORD PTR [rbp-0x50],rax
  40daf2:	jmp    40db04 <test_scan@@Base+0x1fa4>
  40daf7:	mov    rdi,QWORD PTR [rbp-0x10]
  40dafb:	call   408bf0 <verify_monster@@Base+0x20a0>
  40db00:	mov    QWORD PTR [rbp-0x50],rax
  40db04:	mov    rax,QWORD PTR [rbp-0x50]
  40db08:	mov    QWORD PTR [rbp-0x40],rax
  40db0c:	mov    rax,QWORD PTR [rbp-0x40]
  40db10:	mov    rcx,rax
  40db13:	add    rcx,0xffffffffffffffff
  40db1a:	mov    QWORD PTR [rbp-0x40],rcx
  40db1e:	cmp    rax,QWORD PTR [rbp-0x18]
  40db22:	jbe    40db65 <test_scan@@Base+0x2005>
  40db28:	mov    rdi,QWORD PTR [rbp-0x10]
  40db2c:	mov    rsi,QWORD PTR [rbp-0x40]
  40db30:	call   408c40 <verify_monster@@Base+0x20f0>
  40db35:	mov    QWORD PTR [rbp-0x38],rax
  40db39:	mov    rdi,QWORD PTR [rbp-0x38]
  40db3d:	mov    rsi,QWORD PTR [rbp-0x28]
  40db41:	mov    rdx,QWORD PTR [rbp-0x30]
  40db45:	call   416e20 <main@@Base+0x30f0>
  40db4a:	cmp    eax,0x0
  40db4d:	jne    40db60 <test_scan@@Base+0x2000>
  40db53:	mov    rax,QWORD PTR [rbp-0x40]
  40db57:	mov    QWORD PTR [rbp-0x8],rax
  40db5b:	jmp    40db70 <test_scan@@Base+0x2010>
  40db60:	jmp    40db0c <test_scan@@Base+0x1fac>
  40db65:	mov    rax,QWORD PTR [rip+0x2353c]        # 4310a8 <__data_start@@Base+0x10>
  40db6c:	mov    QWORD PTR [rbp-0x8],rax
  40db70:	mov    rax,QWORD PTR [rbp-0x8]
  40db74:	add    rsp,0x50
  40db78:	pop    rbp
  40db79:	ret    
  40db7a:	nop    WORD PTR [rax+rax*1+0x0]
  40db80:	push   rbp
  40db81:	mov    rbp,rsp
  40db84:	sub    rsp,0x30
  40db88:	mov    QWORD PTR [rbp-0x10],rdi
  40db8c:	mov    WORD PTR [rbp-0x12],si
  40db90:	mov    QWORD PTR [rbp-0x20],0x0
  40db98:	mov    rax,QWORD PTR [rbp-0x20]
  40db9c:	mov    rdi,QWORD PTR [rbp-0x10]
  40dba0:	mov    QWORD PTR [rbp-0x28],rax
  40dba4:	call   4089d0 <verify_monster@@Base+0x1e80>
  40dba9:	mov    rcx,QWORD PTR [rbp-0x28]
  40dbad:	cmp    rcx,rax
  40dbb0:	jae    40dc33 <test_scan@@Base+0x20d3>
  40dbb6:	mov    rdi,QWORD PTR [rbp-0x10]
  40dbba:	mov    rsi,QWORD PTR [rbp-0x20]
  40dbbe:	call   408a20 <verify_monster@@Base+0x1ed0>
  40dbc3:	mov    rdi,rax
  40dbc6:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  40dbcb:	mov    WORD PTR [rbp-0x14],ax
  40dbcf:	movsx  ecx,WORD PTR [rbp-0x14]
  40dbd3:	movsx  edx,WORD PTR [rbp-0x12]
  40dbd7:	cmp    ecx,edx
  40dbd9:	jge    40dbec <test_scan@@Base+0x208c>
  40dbdf:	mov    eax,0xffffffff
  40dbe4:	mov    DWORD PTR [rbp-0x2c],eax
  40dbe7:	jmp    40dc02 <test_scan@@Base+0x20a2>
  40dbec:	movsx  eax,WORD PTR [rbp-0x14]
  40dbf0:	movsx  ecx,WORD PTR [rbp-0x12]
  40dbf4:	cmp    eax,ecx
  40dbf6:	setg   dl
  40dbf9:	and    dl,0x1
  40dbfc:	movzx  eax,dl
  40dbff:	mov    DWORD PTR [rbp-0x2c],eax
  40dc02:	mov    eax,DWORD PTR [rbp-0x2c]
  40dc05:	cmp    eax,0x0
  40dc08:	jne    40dc1b <test_scan@@Base+0x20bb>
  40dc0e:	mov    rax,QWORD PTR [rbp-0x20]
  40dc12:	mov    QWORD PTR [rbp-0x8],rax
  40dc16:	jmp    40dc3e <test_scan@@Base+0x20de>
  40dc1b:	jmp    40dc20 <test_scan@@Base+0x20c0>
  40dc20:	mov    rax,QWORD PTR [rbp-0x20]
  40dc24:	add    rax,0x1
  40dc2a:	mov    QWORD PTR [rbp-0x20],rax
  40dc2e:	jmp    40db98 <test_scan@@Base+0x2038>
  40dc33:	mov    rax,QWORD PTR [rip+0x2346e]        # 4310a8 <__data_start@@Base+0x10>
  40dc3a:	mov    QWORD PTR [rbp-0x8],rax
  40dc3e:	mov    rax,QWORD PTR [rbp-0x8]
  40dc42:	add    rsp,0x30
  40dc46:	pop    rbp
  40dc47:	ret    
  40dc48:	nop    DWORD PTR [rax+rax*1+0x0]
  40dc50:	push   rbp
  40dc51:	mov    rbp,rsp
  40dc54:	sub    rsp,0x50
  40dc58:	mov    QWORD PTR [rbp-0x10],rdi
  40dc5c:	mov    QWORD PTR [rbp-0x18],rsi
  40dc60:	mov    QWORD PTR [rbp-0x20],rdx
  40dc64:	mov    WORD PTR [rbp-0x22],cx
  40dc68:	mov    rax,QWORD PTR [rbp-0x18]
  40dc6c:	mov    QWORD PTR [rbp-0x30],rax
  40dc70:	mov    rax,QWORD PTR [rbp-0x30]
  40dc74:	mov    rcx,QWORD PTR [rbp-0x20]
  40dc78:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc7c:	mov    QWORD PTR [rbp-0x38],rax
  40dc80:	mov    QWORD PTR [rbp-0x40],rcx
  40dc84:	call   4089d0 <verify_monster@@Base+0x1e80>
  40dc89:	mov    rcx,QWORD PTR [rbp-0x40]
  40dc8d:	cmp    rcx,rax
  40dc90:	jae    40dca3 <test_scan@@Base+0x2143>
  40dc96:	mov    rax,QWORD PTR [rbp-0x20]
  40dc9a:	mov    QWORD PTR [rbp-0x48],rax
  40dc9e:	jmp    40dcb0 <test_scan@@Base+0x2150>
  40dca3:	mov    rdi,QWORD PTR [rbp-0x10]
  40dca7:	call   4089d0 <verify_monster@@Base+0x1e80>
  40dcac:	mov    QWORD PTR [rbp-0x48],rax
  40dcb0:	mov    rax,QWORD PTR [rbp-0x48]
  40dcb4:	mov    rcx,QWORD PTR [rbp-0x38]
  40dcb8:	cmp    rcx,rax
  40dcbb:	jae    40dd3e <test_scan@@Base+0x21de>
  40dcc1:	mov    rdi,QWORD PTR [rbp-0x10]
  40dcc5:	mov    rsi,QWORD PTR [rbp-0x30]
  40dcc9:	call   408a20 <verify_monster@@Base+0x1ed0>
  40dcce:	mov    rdi,rax
  40dcd1:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  40dcd6:	mov    WORD PTR [rbp-0x24],ax
  40dcda:	movsx  ecx,WORD PTR [rbp-0x24]
  40dcde:	movsx  edx,WORD PTR [rbp-0x22]
  40dce2:	cmp    ecx,edx
  40dce4:	jge    40dcf7 <test_scan@@Base+0x2197>
  40dcea:	mov    eax,0xffffffff
  40dcef:	mov    DWORD PTR [rbp-0x4c],eax
  40dcf2:	jmp    40dd0d <test_scan@@Base+0x21ad>
  40dcf7:	movsx  eax,WORD PTR [rbp-0x24]
  40dcfb:	movsx  ecx,WORD PTR [rbp-0x22]
  40dcff:	cmp    eax,ecx
  40dd01:	setg   dl
  40dd04:	and    dl,0x1
  40dd07:	movzx  eax,dl
  40dd0a:	mov    DWORD PTR [rbp-0x4c],eax
  40dd0d:	mov    eax,DWORD PTR [rbp-0x4c]
  40dd10:	cmp    eax,0x0
  40dd13:	jne    40dd26 <test_scan@@Base+0x21c6>
  40dd19:	mov    rax,QWORD PTR [rbp-0x30]
  40dd1d:	mov    QWORD PTR [rbp-0x8],rax
  40dd21:	jmp    40dd49 <test_scan@@Base+0x21e9>
  40dd26:	jmp    40dd2b <test_scan@@Base+0x21cb>
  40dd2b:	mov    rax,QWORD PTR [rbp-0x30]
  40dd2f:	add    rax,0x1
  40dd35:	mov    QWORD PTR [rbp-0x30],rax
  40dd39:	jmp    40dc70 <test_scan@@Base+0x2110>
  40dd3e:	mov    rax,QWORD PTR [rip+0x23363]        # 4310a8 <__data_start@@Base+0x10>
  40dd45:	mov    QWORD PTR [rbp-0x8],rax
  40dd49:	mov    rax,QWORD PTR [rbp-0x8]
  40dd4d:	add    rsp,0x50
  40dd51:	pop    rbp
  40dd52:	ret    
  40dd53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd5d:	nop    DWORD PTR [rax]
  40dd60:	push   rbp
  40dd61:	mov    rbp,rsp
  40dd64:	sub    rsp,0x30
  40dd68:	mov    QWORD PTR [rbp-0x10],rdi
  40dd6c:	mov    WORD PTR [rbp-0x12],si
  40dd70:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd74:	call   4089d0 <verify_monster@@Base+0x1e80>
  40dd79:	mov    QWORD PTR [rbp-0x20],rax
  40dd7d:	mov    rax,QWORD PTR [rbp-0x20]
  40dd81:	mov    rcx,rax
  40dd84:	add    rcx,0xffffffffffffffff
  40dd8b:	mov    QWORD PTR [rbp-0x20],rcx
  40dd8f:	cmp    rax,0x0
  40dd93:	jbe    40de03 <test_scan@@Base+0x22a3>
  40dd99:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd9d:	mov    rsi,QWORD PTR [rbp-0x20]
  40dda1:	call   408a20 <verify_monster@@Base+0x1ed0>
  40dda6:	mov    rdi,rax
  40dda9:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  40ddae:	mov    WORD PTR [rbp-0x14],ax
  40ddb2:	movsx  ecx,WORD PTR [rbp-0x14]
  40ddb6:	movsx  edx,WORD PTR [rbp-0x12]
  40ddba:	cmp    ecx,edx
  40ddbc:	jge    40ddcf <test_scan@@Base+0x226f>
  40ddc2:	mov    eax,0xffffffff
  40ddc7:	mov    DWORD PTR [rbp-0x24],eax
  40ddca:	jmp    40dde5 <test_scan@@Base+0x2285>
  40ddcf:	movsx  eax,WORD PTR [rbp-0x14]
  40ddd3:	movsx  ecx,WORD PTR [rbp-0x12]
  40ddd7:	cmp    eax,ecx
  40ddd9:	setg   dl
  40dddc:	and    dl,0x1
  40dddf:	movzx  eax,dl
  40dde2:	mov    DWORD PTR [rbp-0x24],eax
  40dde5:	mov    eax,DWORD PTR [rbp-0x24]
  40dde8:	cmp    eax,0x0
  40ddeb:	jne    40ddfe <test_scan@@Base+0x229e>
  40ddf1:	mov    rax,QWORD PTR [rbp-0x20]
  40ddf5:	mov    QWORD PTR [rbp-0x8],rax
  40ddf9:	jmp    40de0e <test_scan@@Base+0x22ae>
  40ddfe:	jmp    40dd7d <test_scan@@Base+0x221d>
  40de03:	mov    rax,QWORD PTR [rip+0x2329e]        # 4310a8 <__data_start@@Base+0x10>
  40de0a:	mov    QWORD PTR [rbp-0x8],rax
  40de0e:	mov    rax,QWORD PTR [rbp-0x8]
  40de12:	add    rsp,0x30
  40de16:	pop    rbp
  40de17:	ret    
  40de18:	nop    DWORD PTR [rax+rax*1+0x0]
  40de20:	push   rbp
  40de21:	mov    rbp,rsp
  40de24:	sub    rsp,0x50
  40de28:	mov    QWORD PTR [rbp-0x10],rdi
  40de2c:	mov    QWORD PTR [rbp-0x18],rsi
  40de30:	mov    QWORD PTR [rbp-0x20],rdx
  40de34:	mov    WORD PTR [rbp-0x22],cx
  40de38:	mov    rax,QWORD PTR [rbp-0x20]
  40de3c:	mov    rdi,QWORD PTR [rbp-0x10]
  40de40:	mov    QWORD PTR [rbp-0x38],rax
  40de44:	call   4089d0 <verify_monster@@Base+0x1e80>
  40de49:	mov    rdx,QWORD PTR [rbp-0x38]
  40de4d:	cmp    rdx,rax
  40de50:	jae    40de63 <test_scan@@Base+0x2303>
  40de56:	mov    rax,QWORD PTR [rbp-0x20]
  40de5a:	mov    QWORD PTR [rbp-0x40],rax
  40de5e:	jmp    40de70 <test_scan@@Base+0x2310>
  40de63:	mov    rdi,QWORD PTR [rbp-0x10]
  40de67:	call   4089d0 <verify_monster@@Base+0x1e80>
  40de6c:	mov    QWORD PTR [rbp-0x40],rax
  40de70:	mov    rax,QWORD PTR [rbp-0x40]
  40de74:	mov    QWORD PTR [rbp-0x30],rax
  40de78:	mov    rax,QWORD PTR [rbp-0x30]
  40de7c:	mov    rcx,rax
  40de7f:	add    rcx,0xffffffffffffffff
  40de86:	mov    QWORD PTR [rbp-0x30],rcx
  40de8a:	cmp    rax,QWORD PTR [rbp-0x18]
  40de8e:	jbe    40defe <test_scan@@Base+0x239e>
  40de94:	mov    rdi,QWORD PTR [rbp-0x10]
  40de98:	mov    rsi,QWORD PTR [rbp-0x30]
  40de9c:	call   408a20 <verify_monster@@Base+0x1ed0>
  40dea1:	mov    rdi,rax
  40dea4:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  40dea9:	mov    WORD PTR [rbp-0x24],ax
  40dead:	movsx  ecx,WORD PTR [rbp-0x24]
  40deb1:	movsx  edx,WORD PTR [rbp-0x22]
  40deb5:	cmp    ecx,edx
  40deb7:	jge    40deca <test_scan@@Base+0x236a>
  40debd:	mov    eax,0xffffffff
  40dec2:	mov    DWORD PTR [rbp-0x44],eax
  40dec5:	jmp    40dee0 <test_scan@@Base+0x2380>
  40deca:	movsx  eax,WORD PTR [rbp-0x24]
  40dece:	movsx  ecx,WORD PTR [rbp-0x22]
  40ded2:	cmp    eax,ecx
  40ded4:	setg   dl
  40ded7:	and    dl,0x1
  40deda:	movzx  eax,dl
  40dedd:	mov    DWORD PTR [rbp-0x44],eax
  40dee0:	mov    eax,DWORD PTR [rbp-0x44]
  40dee3:	cmp    eax,0x0
  40dee6:	jne    40def9 <test_scan@@Base+0x2399>
  40deec:	mov    rax,QWORD PTR [rbp-0x30]
  40def0:	mov    QWORD PTR [rbp-0x8],rax
  40def4:	jmp    40df09 <test_scan@@Base+0x23a9>
  40def9:	jmp    40de78 <test_scan@@Base+0x2318>
  40defe:	mov    rax,QWORD PTR [rip+0x231a3]        # 4310a8 <__data_start@@Base+0x10>
  40df05:	mov    QWORD PTR [rbp-0x8],rax
  40df09:	mov    rax,QWORD PTR [rbp-0x8]
  40df0d:	add    rsp,0x50
  40df11:	pop    rbp
  40df12:	ret    
  40df13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40df1d:	nop    DWORD PTR [rax]

000000000040df20 <test_basic_sort@@Base>:
  40df20:	push   rbp
  40df21:	mov    rbp,rsp
  40df24:	sub    rsp,0x80
  40df2b:	mov    QWORD PTR [rbp-0x10],rdi
  40df2f:	mov    eax,DWORD PTR [rip+0x141e3]        # 422118 <_IO_stdin_used@@Base+0x118>
  40df35:	mov    DWORD PTR [rbp-0x3f],eax
  40df38:	mov    cx,WORD PTR [rip+0x141dd]        # 42211c <_IO_stdin_used@@Base+0x11c>
  40df3f:	mov    WORD PTR [rbp-0x3b],cx
  40df43:	mov    dl,BYTE PTR [rip+0x141d5]        # 42211e <_IO_stdin_used@@Base+0x11e>
  40df49:	mov    BYTE PTR [rbp-0x39],dl
  40df4c:	mov    eax,DWORD PTR [rip+0x141cd]        # 42211f <_IO_stdin_used@@Base+0x11f>
  40df52:	mov    DWORD PTR [rbp-0x46],eax
  40df55:	mov    cx,WORD PTR [rip+0x141c7]        # 422123 <_IO_stdin_used@@Base+0x123>
  40df5c:	mov    WORD PTR [rbp-0x42],cx
  40df60:	mov    dl,BYTE PTR [rip+0x141bf]        # 422125 <_IO_stdin_used@@Base+0x125>
  40df66:	mov    BYTE PTR [rbp-0x40],dl
  40df69:	mov    rdi,QWORD PTR [rbp-0x10]
  40df6d:	call   418ef0 <flatcc_builder_reset@@Base>
  40df72:	mov    rdi,QWORD PTR [rbp-0x10]
  40df76:	mov    DWORD PTR [rbp-0x4c],eax
  40df79:	call   40a0d0 <gen_monster@@Base+0x760>
  40df7e:	mov    rdi,QWORD PTR [rbp-0x10]
  40df82:	lea    rsi,[rip+0x143ce]        # 422357 <_IO_stdin_used@@Base+0x357>
  40df89:	mov    DWORD PTR [rbp-0x50],eax
  40df8c:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40df91:	lea    rsi,[rbp-0x3f]
  40df95:	mov    rdi,QWORD PTR [rbp-0x10]
  40df99:	mov    edx,0x7
  40df9e:	mov    DWORD PTR [rbp-0x54],eax
  40dfa1:	call   40a260 <gen_monster@@Base+0x8f0>
  40dfa6:	mov    rdi,QWORD PTR [rbp-0x10]
  40dfaa:	mov    DWORD PTR [rbp-0x58],eax
  40dfad:	call   40ac50 <gen_monster@@Base+0x12e0>
  40dfb2:	mov    rdi,QWORD PTR [rbp-0x10]
  40dfb6:	lea    rsi,[rbp-0x38]
  40dfba:	mov    DWORD PTR [rbp-0x5c],eax
  40dfbd:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  40dfc2:	mov    QWORD PTR [rbp-0x30],rax
  40dfc6:	mov    rdi,QWORD PTR [rbp-0x30]
  40dfca:	call   404480 <verify_empty_monster@@Base+0x260>
  40dfcf:	mov    QWORD PTR [rbp-0x18],rax
  40dfd3:	mov    rdi,QWORD PTR [rbp-0x18]
  40dfd7:	call   408250 <verify_monster@@Base+0x1700>
  40dfdc:	mov    QWORD PTR [rbp-0x20],rax
  40dfe0:	mov    rax,QWORD PTR [rbp-0x20]
  40dfe4:	mov    QWORD PTR [rbp-0x28],rax
  40dfe8:	mov    rdi,QWORD PTR [rbp-0x28]
  40dfec:	call   40e120 <test_basic_sort@@Base+0x200>
  40dff1:	mov    rdi,QWORD PTR [rbp-0x20]
  40dff5:	call   408380 <verify_monster@@Base+0x1830>
  40dffa:	cmp    rax,0x7
  40dffe:	jne    40e009 <test_basic_sort@@Base+0xe9>
  40e004:	jmp    40e028 <test_basic_sort@@Base+0x108>
  40e009:	lea    rdi,[rip+0x15aae]        # 423abe <_IO_stdin_used@@Base+0x1abe>
  40e010:	lea    rsi,[rip+0x14bd8]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40e017:	mov    edx,0x610
  40e01c:	lea    rcx,[rip+0x15ac9]        # 423aec <_IO_stdin_used@@Base+0x1aec>
  40e023:	call   404090 <__assert_fail@plt>
  40e028:	mov    BYTE PTR [rbp-0x48],0x0
  40e02c:	movzx  eax,BYTE PTR [rbp-0x48]
  40e030:	mov    ecx,eax
  40e032:	mov    rdi,QWORD PTR [rbp-0x20]
  40e036:	mov    QWORD PTR [rbp-0x68],rcx
  40e03a:	call   408380 <verify_monster@@Base+0x1830>
  40e03f:	mov    rcx,QWORD PTR [rbp-0x68]
  40e043:	cmp    rcx,rax
  40e046:	jae    40e100 <test_basic_sort@@Base+0x1e0>
  40e04c:	mov    rdi,QWORD PTR [rbp-0x20]
  40e050:	movzx  eax,BYTE PTR [rbp-0x48]
  40e054:	mov    esi,eax
  40e056:	call   4083a0 <verify_monster@@Base+0x1850>
  40e05b:	mov    BYTE PTR [rbp-0x47],al
  40e05e:	movzx  ecx,BYTE PTR [rbp-0x47]
  40e062:	movzx  edx,BYTE PTR [rbp-0x48]
  40e066:	mov    esi,edx
  40e068:	movzx  edx,BYTE PTR [rbp+rsi*1-0x46]
  40e06d:	cmp    ecx,edx
  40e06f:	je     40e08f <test_basic_sort@@Base+0x16f>
  40e075:	lea    rdi,[rip+0x15a98]        # 423b14 <_IO_stdin_used@@Base+0x1b14>
  40e07c:	mov    al,0x0
  40e07e:	call   404070 <printf@plt>
  40e083:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40e08a:	jmp    40e107 <test_basic_sort@@Base+0x1e7>
  40e08f:	mov    rdi,QWORD PTR [rbp-0x20]
  40e093:	movzx  esi,BYTE PTR [rbp-0x47]
  40e097:	call   40e140 <test_basic_sort@@Base+0x220>
  40e09c:	movzx  ecx,BYTE PTR [rbp-0x48]
  40e0a0:	cmp    ecx,0x3
  40e0a3:	mov    QWORD PTR [rbp-0x70],rax
  40e0a7:	jne    40e0ba <test_basic_sort@@Base+0x19a>
  40e0ad:	mov    eax,0x2
  40e0b2:	mov    DWORD PTR [rbp-0x74],eax
  40e0b5:	jmp    40e0c1 <test_basic_sort@@Base+0x1a1>
  40e0ba:	movzx  eax,BYTE PTR [rbp-0x48]
  40e0be:	mov    DWORD PTR [rbp-0x74],eax
  40e0c1:	mov    eax,DWORD PTR [rbp-0x74]
  40e0c4:	movsxd rcx,eax
  40e0c7:	mov    rdx,QWORD PTR [rbp-0x70]
  40e0cb:	cmp    rdx,rcx
  40e0ce:	je     40e0ee <test_basic_sort@@Base+0x1ce>
  40e0d4:	lea    rdi,[rip+0x15a4f]        # 423b2a <_IO_stdin_used@@Base+0x1b2a>
  40e0db:	mov    al,0x0
  40e0dd:	call   404070 <printf@plt>
  40e0e2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40e0e9:	jmp    40e107 <test_basic_sort@@Base+0x1e7>
  40e0ee:	jmp    40e0f3 <test_basic_sort@@Base+0x1d3>
  40e0f3:	mov    al,BYTE PTR [rbp-0x48]
  40e0f6:	add    al,0x1
  40e0f8:	mov    BYTE PTR [rbp-0x48],al
  40e0fb:	jmp    40e02c <test_basic_sort@@Base+0x10c>
  40e100:	mov    DWORD PTR [rbp-0x4],0x0
  40e107:	mov    eax,DWORD PTR [rbp-0x4]
  40e10a:	add    rsp,0x80
  40e111:	pop    rbp
  40e112:	ret    
  40e113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e11d:	nop    DWORD PTR [rax]
  40e120:	push   rbp
  40e121:	mov    rbp,rsp
  40e124:	sub    rsp,0x10
  40e128:	mov    QWORD PTR [rbp-0x8],rdi
  40e12c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e130:	call   416fd0 <main@@Base+0x32a0>
  40e135:	add    rsp,0x10
  40e139:	pop    rbp
  40e13a:	ret    
  40e13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e140:	push   rbp
  40e141:	mov    rbp,rsp
  40e144:	sub    rsp,0x40
  40e148:	mov    QWORD PTR [rbp-0x10],rdi
  40e14c:	mov    BYTE PTR [rbp-0x11],sil
  40e150:	mov    QWORD PTR [rbp-0x20],0x0
  40e158:	mov    rdi,QWORD PTR [rbp-0x10]
  40e15c:	call   408380 <verify_monster@@Base+0x1830>
  40e161:	mov    QWORD PTR [rbp-0x28],rax
  40e165:	cmp    rax,0x0
  40e169:	jne    40e17f <test_basic_sort@@Base+0x25f>
  40e16f:	mov    rax,QWORD PTR [rip+0x22f32]        # 4310a8 <__data_start@@Base+0x10>
  40e176:	mov    QWORD PTR [rbp-0x8],rax
  40e17a:	jmp    40e29d <test_basic_sort@@Base+0x37d>
  40e17f:	mov    rax,QWORD PTR [rbp-0x28]
  40e183:	add    rax,0xffffffffffffffff
  40e189:	mov    QWORD PTR [rbp-0x28],rax
  40e18d:	mov    rax,QWORD PTR [rbp-0x20]
  40e191:	cmp    rax,QWORD PTR [rbp-0x28]
  40e195:	jae    40e223 <test_basic_sort@@Base+0x303>
  40e19b:	mov    rax,QWORD PTR [rbp-0x20]
  40e19f:	mov    rcx,QWORD PTR [rbp-0x28]
  40e1a3:	sub    rcx,QWORD PTR [rbp-0x20]
  40e1a7:	shr    rcx,0x1
  40e1ab:	add    rax,rcx
  40e1ae:	mov    QWORD PTR [rbp-0x30],rax
  40e1b2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1b6:	mov    rsi,QWORD PTR [rbp-0x30]
  40e1ba:	call   4083a0 <verify_monster@@Base+0x1850>
  40e1bf:	mov    BYTE PTR [rbp-0x12],al
  40e1c2:	movzx  edx,BYTE PTR [rbp-0x12]
  40e1c6:	movzx  r8d,BYTE PTR [rbp-0x11]
  40e1cb:	cmp    edx,r8d
  40e1ce:	jge    40e1e1 <test_basic_sort@@Base+0x2c1>
  40e1d4:	mov    eax,0xffffffff
  40e1d9:	mov    DWORD PTR [rbp-0x34],eax
  40e1dc:	jmp    40e1f7 <test_basic_sort@@Base+0x2d7>
  40e1e1:	movzx  eax,BYTE PTR [rbp-0x12]
  40e1e5:	movzx  ecx,BYTE PTR [rbp-0x11]
  40e1e9:	cmp    eax,ecx
  40e1eb:	setg   dl
  40e1ee:	and    dl,0x1
  40e1f1:	movzx  eax,dl
  40e1f4:	mov    DWORD PTR [rbp-0x34],eax
  40e1f7:	mov    eax,DWORD PTR [rbp-0x34]
  40e1fa:	cmp    eax,0x0
  40e1fd:	jge    40e216 <test_basic_sort@@Base+0x2f6>
  40e203:	mov    rax,QWORD PTR [rbp-0x30]
  40e207:	add    rax,0x1
  40e20d:	mov    QWORD PTR [rbp-0x20],rax
  40e211:	jmp    40e21e <test_basic_sort@@Base+0x2fe>
  40e216:	mov    rax,QWORD PTR [rbp-0x30]
  40e21a:	mov    QWORD PTR [rbp-0x28],rax
  40e21e:	jmp    40e18d <test_basic_sort@@Base+0x26d>
  40e223:	mov    rax,QWORD PTR [rbp-0x20]
  40e227:	cmp    rax,QWORD PTR [rbp-0x28]
  40e22b:	jne    40e292 <test_basic_sort@@Base+0x372>
  40e231:	mov    rdi,QWORD PTR [rbp-0x10]
  40e235:	mov    rsi,QWORD PTR [rbp-0x20]
  40e239:	call   4083a0 <verify_monster@@Base+0x1850>
  40e23e:	mov    BYTE PTR [rbp-0x12],al
  40e241:	movzx  ecx,BYTE PTR [rbp-0x12]
  40e245:	movzx  edx,BYTE PTR [rbp-0x11]
  40e249:	cmp    ecx,edx
  40e24b:	jge    40e25e <test_basic_sort@@Base+0x33e>
  40e251:	mov    eax,0xffffffff
  40e256:	mov    DWORD PTR [rbp-0x38],eax
  40e259:	jmp    40e274 <test_basic_sort@@Base+0x354>
  40e25e:	movzx  eax,BYTE PTR [rbp-0x12]
  40e262:	movzx  ecx,BYTE PTR [rbp-0x11]
  40e266:	cmp    eax,ecx
  40e268:	setg   dl
  40e26b:	and    dl,0x1
  40e26e:	movzx  eax,dl
  40e271:	mov    DWORD PTR [rbp-0x38],eax
  40e274:	mov    eax,DWORD PTR [rbp-0x38]
  40e277:	cmp    eax,0x0
  40e27a:	jne    40e28d <test_basic_sort@@Base+0x36d>
  40e280:	mov    rax,QWORD PTR [rbp-0x20]
  40e284:	mov    QWORD PTR [rbp-0x8],rax
  40e288:	jmp    40e29d <test_basic_sort@@Base+0x37d>
  40e28d:	jmp    40e292 <test_basic_sort@@Base+0x372>
  40e292:	mov    rax,QWORD PTR [rip+0x22e0f]        # 4310a8 <__data_start@@Base+0x10>
  40e299:	mov    QWORD PTR [rbp-0x8],rax
  40e29d:	mov    rax,QWORD PTR [rbp-0x8]
  40e2a1:	add    rsp,0x40
  40e2a5:	pop    rbp
  40e2a6:	ret    
  40e2a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040e2b0 <test_clone_slice@@Base>:
  40e2b0:	push   rbp
  40e2b1:	mov    rbp,rsp
  40e2b4:	sub    rsp,0x110
  40e2bb:	mov    QWORD PTR [rbp-0x8],rdi
  40e2bf:	mov    DWORD PTR [rbp-0x6c],0xffffffff
  40e2c6:	mov    eax,DWORD PTR [rip+0x13e5a]        # 422126 <_IO_stdin_used@@Base+0x126>
  40e2cc:	mov    DWORD PTR [rbp-0x73],eax
  40e2cf:	mov    cx,WORD PTR [rip+0x13e54]        # 42212a <_IO_stdin_used@@Base+0x12a>
  40e2d6:	mov    WORD PTR [rbp-0x6f],cx
  40e2da:	mov    dl,BYTE PTR [rip+0x13e4c]        # 42212c <_IO_stdin_used@@Base+0x12c>
  40e2e0:	mov    BYTE PTR [rbp-0x6d],dl
  40e2e3:	mov    rdi,QWORD PTR [rbp-0x8]
  40e2e7:	call   418ef0 <flatcc_builder_reset@@Base>
  40e2ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40e2f0:	mov    DWORD PTR [rbp-0x84],eax
  40e2f6:	call   40a0d0 <gen_monster@@Base+0x760>
  40e2fb:	mov    rdi,QWORD PTR [rbp-0x8]
  40e2ff:	lea    rsi,[rip+0x15843]        # 423b49 <_IO_stdin_used@@Base+0x1b49>
  40e306:	mov    DWORD PTR [rbp-0x88],eax
  40e30c:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40e311:	lea    rsi,[rbp-0x73]
  40e315:	mov    rdi,QWORD PTR [rbp-0x8]
  40e319:	mov    edx,0x7
  40e31e:	mov    DWORD PTR [rbp-0x8c],eax
  40e324:	call   40ea90 <test_clone_slice@@Base+0x7e0>
  40e329:	mov    rdi,QWORD PTR [rbp-0x8]
  40e32d:	mov    DWORD PTR [rbp-0x90],eax
  40e333:	call   40a2b0 <gen_monster@@Base+0x940>
  40e338:	mov    rdi,QWORD PTR [rbp-0x8]
  40e33c:	mov    esi,0x2
  40e341:	mov    DWORD PTR [rbp-0x94],eax
  40e347:	call   40a2d0 <gen_monster@@Base+0x960>
  40e34c:	mov    QWORD PTR [rbp-0x40],rax
  40e350:	mov    rax,QWORD PTR [rbp-0x40]
  40e354:	mov    WORD PTR [rax],0x16
  40e359:	mov    rax,QWORD PTR [rbp-0x40]
  40e35d:	mov    WORD PTR [rax+0x4],0x2c
  40e363:	mov    rdi,QWORD PTR [rbp-0x8]
  40e367:	call   40a4e0 <gen_monster@@Base+0xb70>
  40e36c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e370:	mov    DWORD PTR [rbp-0x98],eax
  40e376:	call   40a1a0 <gen_monster@@Base+0x830>
  40e37b:	vmovss xmm0,DWORD PTR [rip+0x13c91]        # 422014 <_IO_stdin_used@@Base+0x14>
  40e383:	vmovss DWORD PTR [rax],xmm0
  40e387:	mov    rdi,QWORD PTR [rbp-0x8]
  40e38b:	call   40ac50 <gen_monster@@Base+0x12e0>
  40e390:	mov    rdi,QWORD PTR [rbp-0x8]
  40e394:	lea    rsi,[rbp-0x68]
  40e398:	mov    DWORD PTR [rbp-0x9c],eax
  40e39e:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40e3a3:	mov    rdx,QWORD PTR [rip+0x22c4e]        # 430ff8 <stderr@GLIBC_2.2.5>
  40e3aa:	mov    QWORD PTR [rbp-0x58],rax
  40e3ae:	mov    rsi,QWORD PTR [rbp-0x58]
  40e3b2:	mov    rax,QWORD PTR [rbp-0x68]
  40e3b6:	mov    rcx,QWORD PTR [rdx]
  40e3b9:	lea    rdi,[rip+0x15794]        # 423b54 <_IO_stdin_used@@Base+0x1b54>
  40e3c0:	mov    rdx,rax
  40e3c3:	call   404d60 <test_type_aliases@@Base+0x470>
  40e3c8:	mov    rdi,QWORD PTR [rbp-0x58]
  40e3cc:	call   404480 <verify_empty_monster@@Base+0x260>
  40e3d1:	mov    QWORD PTR [rbp-0x10],rax
  40e3d5:	mov    rdi,QWORD PTR [rbp-0x8]
  40e3d9:	call   418ef0 <flatcc_builder_reset@@Base>
  40e3de:	mov    rdi,QWORD PTR [rbp-0x8]
  40e3e2:	mov    DWORD PTR [rbp-0xa0],eax
  40e3e8:	call   40a0d0 <gen_monster@@Base+0x760>
  40e3ed:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3f1:	mov    DWORD PTR [rbp-0xa4],eax
  40e3f7:	call   407e10 <verify_monster@@Base+0x12c0>
  40e3fc:	mov    QWORD PTR [rbp-0x30],rax
  40e400:	cmp    QWORD PTR [rbp-0x30],0x0
  40e405:	je     40e410 <test_clone_slice@@Base+0x160>
  40e40b:	jmp    40e42f <test_clone_slice@@Base+0x17f>
  40e410:	lea    rdi,[rip+0x14d61]        # 423178 <_IO_stdin_used@@Base+0x1178>
  40e417:	lea    rsi,[rip+0x147d1]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40e41e:	mov    edx,0x644
  40e423:	lea    rcx,[rip+0x15744]        # 423b6e <_IO_stdin_used@@Base+0x1b6e>
  40e42a:	call   404090 <__assert_fail@plt>
  40e42f:	mov    rdi,QWORD PTR [rbp-0x10]
  40e433:	call   408dd0 <verify_monster@@Base+0x2280>
  40e438:	mov    QWORD PTR [rbp-0x28],rax
  40e43c:	cmp    QWORD PTR [rbp-0x28],0x0
  40e441:	je     40e44c <test_clone_slice@@Base+0x19c>
  40e447:	jmp    40e46b <test_clone_slice@@Base+0x1bb>
  40e44c:	lea    rdi,[rip+0x15744]        # 423b97 <_IO_stdin_used@@Base+0x1b97>
  40e453:	lea    rsi,[rip+0x14795]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40e45a:	mov    edx,0x646
  40e45f:	lea    rcx,[rip+0x15708]        # 423b6e <_IO_stdin_used@@Base+0x1b6e>
  40e466:	call   404090 <__assert_fail@plt>
  40e46b:	mov    rdi,QWORD PTR [rbp-0x10]
  40e46f:	call   408610 <verify_monster@@Base+0x1ac0>
  40e474:	mov    QWORD PTR [rbp-0x48],rax
  40e478:	cmp    QWORD PTR [rbp-0x48],0x0
  40e47d:	je     40e488 <test_clone_slice@@Base+0x1d8>
  40e483:	jmp    40e4a7 <test_clone_slice@@Base+0x1f7>
  40e488:	lea    rdi,[rip+0x1570e]        # 423b9d <_IO_stdin_used@@Base+0x1b9d>
  40e48f:	lea    rsi,[rip+0x14759]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40e496:	mov    edx,0x648
  40e49b:	lea    rcx,[rip+0x156cc]        # 423b6e <_IO_stdin_used@@Base+0x1b6e>
  40e4a2:	call   404090 <__assert_fail@plt>
  40e4a7:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4ab:	mov    rsi,QWORD PTR [rbp-0x30]
  40e4af:	call   40eae0 <test_clone_slice@@Base+0x830>
  40e4b4:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4b8:	mov    DWORD PTR [rbp-0xa8],eax
  40e4be:	call   40cad0 <test_scan@@Base+0xf70>
  40e4c3:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4c7:	mov    rsi,QWORD PTR [rbp-0x30]
  40e4cb:	mov    DWORD PTR [rbp-0xac],eax
  40e4d1:	call   40eb20 <test_clone_slice@@Base+0x870>
  40e4d6:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4da:	mov    rsi,QWORD PTR [rbp-0x30]
  40e4de:	mov    edx,0x4
  40e4e3:	mov    ecx,0x14
  40e4e8:	mov    QWORD PTR [rbp-0xb8],rax
  40e4ef:	call   40eb60 <test_clone_slice@@Base+0x8b0>
  40e4f4:	xor    r8d,r8d
  40e4f7:	mov    edx,r8d
  40e4fa:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4fe:	mov    rsi,QWORD PTR [rbp-0x30]
  40e502:	mov    ecx,0x3
  40e507:	mov    QWORD PTR [rbp-0xc0],rax
  40e50e:	call   40eb60 <test_clone_slice@@Base+0x8b0>
  40e513:	mov    rdi,QWORD PTR [rbp-0x8]
  40e517:	mov    QWORD PTR [rbp-0xc8],rax
  40e51e:	call   40caf0 <test_scan@@Base+0xf90>
  40e523:	mov    rdi,QWORD PTR [rbp-0x8]
  40e527:	mov    DWORD PTR [rbp-0xcc],eax
  40e52d:	call   405bd0 <test_empty_monster@@Base+0x180>
  40e532:	mov    rdi,QWORD PTR [rbp-0x8]
  40e536:	mov    rsi,QWORD PTR [rbp-0x30]
  40e53a:	mov    edx,0x2
  40e53f:	mov    ecx,0x14
  40e544:	mov    DWORD PTR [rbp-0xd0],eax
  40e54a:	call   40ebb0 <test_clone_slice@@Base+0x900>
  40e54f:	mov    rdi,QWORD PTR [rbp-0x8]
  40e553:	mov    rsi,QWORD PTR [rbp-0x28]
  40e557:	mov    DWORD PTR [rbp-0xd4],eax
  40e55d:	call   40ec00 <test_clone_slice@@Base+0x950>
  40e562:	mov    rdi,QWORD PTR [rbp-0x8]
  40e566:	mov    rsi,QWORD PTR [rbp-0x48]
  40e56a:	mov    edx,0x1
  40e56f:	mov    ecx,0x2
  40e574:	mov    DWORD PTR [rbp-0xd8],eax
  40e57a:	call   40ec40 <test_clone_slice@@Base+0x990>
  40e57f:	mov    rdi,QWORD PTR [rbp-0x8]
  40e583:	mov    DWORD PTR [rbp-0xdc],eax
  40e589:	call   405c30 <test_empty_monster@@Base+0x1e0>
  40e58e:	mov    DWORD PTR [rbp-0x34],eax
  40e591:	mov    rdi,QWORD PTR [rbp-0x8]
  40e595:	mov    eax,DWORD PTR [rbp-0x34]
  40e598:	mov    QWORD PTR [rbp-0xe8],rdi
  40e59f:	mov    edi,eax
  40e5a1:	call   40a950 <gen_monster@@Base+0xfe0>
  40e5a6:	mov    QWORD PTR [rbp-0x80],rax
  40e5aa:	mov    rsi,QWORD PTR [rbp-0x80]
  40e5ae:	mov    rdi,QWORD PTR [rbp-0xe8]
  40e5b5:	call   40a8a0 <gen_monster@@Base+0xf30>
  40e5ba:	mov    rdi,QWORD PTR [rbp-0x8]
  40e5be:	mov    rsi,QWORD PTR [rbp-0x28]
  40e5c2:	mov    edx,0x3
  40e5c7:	mov    rcx,0xffffffffffffffff
  40e5ce:	mov    DWORD PTR [rbp-0xec],eax
  40e5d4:	call   40ec90 <test_clone_slice@@Base+0x9e0>
  40e5d9:	mov    rdi,QWORD PTR [rbp-0x8]
  40e5dd:	mov    rcx,QWORD PTR [rbp-0x10]
  40e5e1:	mov    QWORD PTR [rbp-0xf8],rdi
  40e5e8:	mov    rdi,rcx
  40e5eb:	mov    DWORD PTR [rbp-0xfc],eax
  40e5f1:	call   4047e0 <verify_empty_monster@@Base+0x5c0>
  40e5f6:	mov    rdi,QWORD PTR [rbp-0xf8]
  40e5fd:	mov    rsi,rax
  40e600:	call   40ece0 <test_clone_slice@@Base+0xa30>
  40e605:	mov    rdi,QWORD PTR [rbp-0x8]
  40e609:	mov    rsi,QWORD PTR [rbp-0x48]
  40e60d:	mov    DWORD PTR [rbp-0x100],eax
  40e613:	call   40ed30 <test_clone_slice@@Base+0xa80>
  40e618:	mov    rdi,QWORD PTR [rbp-0x8]
  40e61c:	mov    DWORD PTR [rbp-0x104],eax
  40e622:	call   40ac50 <gen_monster@@Base+0x12e0>
  40e627:	mov    rdi,QWORD PTR [rbp-0x8]
  40e62b:	lea    rsi,[rbp-0x68]
  40e62f:	mov    DWORD PTR [rbp-0x108],eax
  40e635:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  40e63a:	mov    rcx,QWORD PTR [rip+0x229b7]        # 430ff8 <stderr@GLIBC_2.2.5>
  40e641:	mov    QWORD PTR [rbp-0x60],rax
  40e645:	mov    rsi,QWORD PTR [rbp-0x60]
  40e649:	mov    rdx,QWORD PTR [rbp-0x68]
  40e64d:	mov    rcx,QWORD PTR [rcx]
  40e650:	lea    rdi,[rip+0x1554c]        # 423ba3 <_IO_stdin_used@@Base+0x1ba3>
  40e657:	call   404d60 <test_type_aliases@@Base+0x470>
  40e65c:	mov    rdi,QWORD PTR [rbp-0x60]
  40e660:	call   404480 <verify_empty_monster@@Base+0x260>
  40e665:	mov    QWORD PTR [rbp-0x18],rax
  40e669:	mov    rdi,QWORD PTR [rbp-0x18]
  40e66d:	call   407e10 <verify_monster@@Base+0x12c0>
  40e672:	lea    rsi,[rip+0x154d0]        # 423b49 <_IO_stdin_used@@Base+0x1b49>
  40e679:	mov    rdi,rax
  40e67c:	call   4040d0 <strcmp@plt>
  40e681:	cmp    eax,0x0
  40e684:	je     40e69d <test_clone_slice@@Base+0x3ed>
  40e68a:	lea    rdi,[rip+0x15529]        # 423bba <_IO_stdin_used@@Base+0x1bba>
  40e691:	mov    al,0x0
  40e693:	call   404070 <printf@plt>
  40e698:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e69d:	mov    rdi,QWORD PTR [rbp-0x18]
  40e6a1:	call   408ac0 <verify_monster@@Base+0x1f70>
  40e6a6:	xor    ecx,ecx
  40e6a8:	mov    esi,ecx
  40e6aa:	mov    QWORD PTR [rbp-0x20],rax
  40e6ae:	mov    rdi,QWORD PTR [rbp-0x20]
  40e6b2:	call   408c40 <verify_monster@@Base+0x20f0>
  40e6b7:	lea    rsi,[rip+0x1548b]        # 423b49 <_IO_stdin_used@@Base+0x1b49>
  40e6be:	mov    rdi,rax
  40e6c1:	call   4040d0 <strcmp@plt>
  40e6c6:	cmp    eax,0x0
  40e6c9:	je     40e6e2 <test_clone_slice@@Base+0x432>
  40e6cf:	lea    rdi,[rip+0x154ff]        # 423bd5 <_IO_stdin_used@@Base+0x1bd5>
  40e6d6:	mov    al,0x0
  40e6d8:	call   404070 <printf@plt>
  40e6dd:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e6e2:	mov    rdi,QWORD PTR [rbp-0x20]
  40e6e6:	mov    esi,0x1
  40e6eb:	call   408c40 <verify_monster@@Base+0x20f0>
  40e6f0:	mov    rdi,rax
  40e6f3:	call   407f50 <verify_monster@@Base+0x1400>
  40e6f8:	cmp    rax,0x6
  40e6fc:	je     40e715 <test_clone_slice@@Base+0x465>
  40e702:	lea    rdi,[rip+0x154ea]        # 423bf3 <_IO_stdin_used@@Base+0x1bf3>
  40e709:	mov    al,0x0
  40e70b:	call   404070 <printf@plt>
  40e710:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e715:	mov    rdi,QWORD PTR [rbp-0x20]
  40e719:	mov    esi,0x1
  40e71e:	call   408c40 <verify_monster@@Base+0x20f0>
  40e723:	lea    rsi,[rip+0x15423]        # 423b4d <_IO_stdin_used@@Base+0x1b4d>
  40e72a:	mov    rdi,rax
  40e72d:	call   4040d0 <strcmp@plt>
  40e732:	cmp    eax,0x0
  40e735:	je     40e74e <test_clone_slice@@Base+0x49e>
  40e73b:	lea    rdi,[rip+0x154d6]        # 423c18 <_IO_stdin_used@@Base+0x1c18>
  40e742:	mov    al,0x0
  40e744:	call   404070 <printf@plt>
  40e749:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e74e:	mov    rdi,QWORD PTR [rbp-0x20]
  40e752:	mov    esi,0x2
  40e757:	call   408c40 <verify_monster@@Base+0x20f0>
  40e75c:	mov    rdi,rax
  40e75f:	call   407f50 <verify_monster@@Base+0x1400>
  40e764:	cmp    rax,0x3
  40e768:	je     40e781 <test_clone_slice@@Base+0x4d1>
  40e76e:	lea    rdi,[rip+0x154bd]        # 423c32 <_IO_stdin_used@@Base+0x1c32>
  40e775:	mov    al,0x0
  40e777:	call   404070 <printf@plt>
  40e77c:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e781:	mov    rdi,QWORD PTR [rbp-0x20]
  40e785:	mov    esi,0x2
  40e78a:	call   408c40 <verify_monster@@Base+0x20f0>
  40e78f:	lea    rsi,[rip+0x154bd]        # 423c53 <_IO_stdin_used@@Base+0x1c53>
  40e796:	mov    rdi,rax
  40e799:	call   4040d0 <strcmp@plt>
  40e79e:	cmp    eax,0x0
  40e7a1:	je     40e7ba <test_clone_slice@@Base+0x50a>
  40e7a7:	lea    rdi,[rip+0x154a9]        # 423c57 <_IO_stdin_used@@Base+0x1c57>
  40e7ae:	mov    al,0x0
  40e7b0:	call   404070 <printf@plt>
  40e7b5:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e7ba:	mov    rdi,QWORD PTR [rbp-0x18]
  40e7be:	call   4090a0 <verify_monster@@Base+0x2550>
  40e7c3:	mov    QWORD PTR [rbp-0x10],rax
  40e7c7:	cmp    QWORD PTR [rbp-0x10],0x0
  40e7cc:	je     40e7d7 <test_clone_slice@@Base+0x527>
  40e7d2:	jmp    40e7f6 <test_clone_slice@@Base+0x546>
  40e7d7:	lea    rdi,[rip+0x1440d]        # 422beb <_IO_stdin_used@@Base+0xbeb>
  40e7de:	lea    rsi,[rip+0x1440a]        # 422bef <_IO_stdin_used@@Base+0xbef>
  40e7e5:	mov    edx,0x680
  40e7ea:	lea    rcx,[rip+0x1537d]        # 423b6e <_IO_stdin_used@@Base+0x1b6e>
  40e7f1:	call   404090 <__assert_fail@plt>
  40e7f6:	mov    rdi,QWORD PTR [rbp-0x10]
  40e7fa:	call   407e10 <verify_monster@@Base+0x12c0>
  40e7ff:	lea    rsi,[rip+0x15345]        # 423b4b <_IO_stdin_used@@Base+0x1b4b>
  40e806:	mov    rdi,rax
  40e809:	call   4040d0 <strcmp@plt>
  40e80e:	cmp    eax,0x0
  40e811:	je     40e82a <test_clone_slice@@Base+0x57a>
  40e817:	lea    rdi,[rip+0x15450]        # 423c6e <_IO_stdin_used@@Base+0x1c6e>
  40e81e:	mov    al,0x0
  40e820:	call   404070 <printf@plt>
  40e825:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e82a:	mov    rdi,QWORD PTR [rbp-0x10]
  40e82e:	call   408dd0 <verify_monster@@Base+0x2280>
  40e833:	mov    QWORD PTR [rbp-0x28],rax
  40e837:	mov    rdi,QWORD PTR [rbp-0x28]
  40e83b:	call   408f00 <verify_monster@@Base+0x23b0>
  40e840:	cmp    rax,0x7
  40e844:	je     40e85d <test_clone_slice@@Base+0x5ad>
  40e84a:	lea    rdi,[rip+0x1544d]        # 423c9e <_IO_stdin_used@@Base+0x1c9e>
  40e851:	mov    al,0x0
  40e853:	call   404070 <printf@plt>
  40e858:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e85d:	lea    rsi,[rbp-0x73]
  40e861:	mov    rdi,QWORD PTR [rbp-0x28]
  40e865:	mov    edx,0x7
  40e86a:	call   4040c0 <memcmp@plt>
  40e86f:	cmp    eax,0x0
  40e872:	je     40e88b <test_clone_slice@@Base+0x5db>
  40e878:	lea    rdi,[rip+0x1543c]        # 423cbb <_IO_stdin_used@@Base+0x1cbb>
  40e87f:	mov    al,0x0
  40e881:	call   404070 <printf@plt>
  40e886:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e88b:	mov    rdi,QWORD PTR [rbp-0x18]
  40e88f:	call   408dd0 <verify_monster@@Base+0x2280>
  40e894:	mov    QWORD PTR [rbp-0x28],rax
  40e898:	mov    rdi,QWORD PTR [rbp-0x28]
  40e89c:	call   408f00 <verify_monster@@Base+0x23b0>
  40e8a1:	cmp    rax,0x4
  40e8a5:	je     40e8be <test_clone_slice@@Base+0x60e>
  40e8ab:	lea    rdi,[rip+0x15428]        # 423cda <_IO_stdin_used@@Base+0x1cda>
  40e8b2:	mov    al,0x0
  40e8b4:	call   404070 <printf@plt>
  40e8b9:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e8be:	lea    rax,[rbp-0x73]
  40e8c2:	mov    rcx,QWORD PTR [rbp-0x28]
  40e8c6:	add    rax,0x3
  40e8cc:	mov    edx,DWORD PTR [rax]
  40e8ce:	mov    esi,DWORD PTR [rcx]
  40e8d0:	sub    esi,edx
  40e8d2:	setne  dil
  40e8d6:	movzx  edx,dil
  40e8da:	cmp    edx,0x0
  40e8dd:	je     40e8f6 <test_clone_slice@@Base+0x646>
  40e8e3:	lea    rdi,[rip+0x1540d]        # 423cf7 <_IO_stdin_used@@Base+0x1cf7>
  40e8ea:	mov    al,0x0
  40e8ec:	call   404070 <printf@plt>
  40e8f1:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e8f6:	mov    rdi,QWORD PTR [rbp-0x18]
  40e8fa:	call   4047e0 <verify_empty_monster@@Base+0x5c0>
  40e8ff:	vmovss xmm0,DWORD PTR [rip+0x1370d]        # 422014 <_IO_stdin_used@@Base+0x14>
  40e907:	vmovss xmm1,DWORD PTR [rax]
  40e90b:	vucomiss xmm1,xmm0
  40e90f:	jne    40e920 <test_clone_slice@@Base+0x670>
  40e915:	jp     40e920 <test_clone_slice@@Base+0x670>
  40e91b:	jmp    40e933 <test_clone_slice@@Base+0x683>
  40e920:	lea    rdi,[rip+0x153ef]        # 423d16 <_IO_stdin_used@@Base+0x1d16>
  40e927:	mov    al,0x0
  40e929:	call   404070 <printf@plt>
  40e92e:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e933:	mov    rdi,QWORD PTR [rbp-0x18]
  40e937:	call   408610 <verify_monster@@Base+0x1ac0>
  40e93c:	mov    QWORD PTR [rbp-0x48],rax
  40e940:	mov    rdi,QWORD PTR [rbp-0x48]
  40e944:	call   408740 <verify_monster@@Base+0x1bf0>
  40e949:	cmp    rax,0x2
  40e94d:	je     40e966 <test_clone_slice@@Base+0x6b6>
  40e953:	lea    rdi,[rip+0x153d6]        # 423d30 <_IO_stdin_used@@Base+0x1d30>
  40e95a:	mov    al,0x0
  40e95c:	call   404070 <printf@plt>
  40e961:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e966:	xor    eax,eax
  40e968:	mov    esi,eax
  40e96a:	mov    rdi,QWORD PTR [rbp-0x48]
  40e96e:	call   408790 <verify_monster@@Base+0x1c40>
  40e973:	mov    QWORD PTR [rbp-0x50],rax
  40e977:	mov    rdi,QWORD PTR [rbp-0x50]
  40e97b:	call   408800 <verify_monster@@Base+0x1cb0>
  40e980:	movsx  ecx,ax
  40e983:	cmp    ecx,0x16
  40e986:	je     40e99f <test_clone_slice@@Base+0x6ef>
  40e98c:	lea    rdi,[rip+0x153d1]        # 423d64 <_IO_stdin_used@@Base+0x1d64>
  40e993:	mov    al,0x0
  40e995:	call   404070 <printf@plt>
  40e99a:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e99f:	xor    eax,eax
  40e9a1:	mov    esi,eax
  40e9a3:	mov    rdi,QWORD PTR [rbp-0x48]
  40e9a7:	call   408790 <verify_monster@@Base+0x1c40>
  40e9ac:	movsx  ecx,WORD PTR [rax]
  40e9af:	cmp    ecx,0x16
  40e9b2:	je     40e9cb <test_clone_slice@@Base+0x71b>
  40e9b8:	lea    rdi,[rip+0x153c1]        # 423d80 <_IO_stdin_used@@Base+0x1d80>
  40e9bf:	mov    al,0x0
  40e9c1:	call   404070 <printf@plt>
  40e9c6:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40e9cb:	mov    rdi,QWORD PTR [rbp-0x48]
  40e9cf:	mov    esi,0x1
  40e9d4:	call   408790 <verify_monster@@Base+0x1c40>
  40e9d9:	mov    QWORD PTR [rbp-0x50],rax
  40e9dd:	mov    rdi,QWORD PTR [rbp-0x50]
  40e9e1:	call   408800 <verify_monster@@Base+0x1cb0>
  40e9e6:	movsx  ecx,ax
  40e9e9:	cmp    ecx,0x2c
  40e9ec:	je     40ea05 <test_clone_slice@@Base+0x755>
  40e9f2:	lea    rdi,[rip+0x153b2]        # 423dab <_IO_stdin_used@@Base+0x1dab>
  40e9f9:	mov    al,0x0
  40e9fb:	call   404070 <printf@plt>
  40ea00:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40ea05:	mov    rdi,QWORD PTR [rbp-0x10]
  40ea09:	call   408610 <verify_monster@@Base+0x1ac0>
  40ea0e:	mov    QWORD PTR [rbp-0x48],rax
  40ea12:	mov    rdi,QWORD PTR [rbp-0x48]
  40ea16:	call   408740 <verify_monster@@Base+0x1bf0>
  40ea1b:	cmp    rax,0x1
  40ea1f:	je     40ea38 <test_clone_slice@@Base+0x788>
  40ea25:	lea    rdi,[rip+0x1539b]        # 423dc7 <_IO_stdin_used@@Base+0x1dc7>
  40ea2c:	mov    al,0x0
  40ea2e:	call   404070 <printf@plt>
  40ea33:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40ea38:	xor    eax,eax
  40ea3a:	mov    esi,eax
  40ea3c:	mov    rdi,QWORD PTR [rbp-0x48]
  40ea40:	call   408790 <verify_monster@@Base+0x1c40>
  40ea45:	mov    QWORD PTR [rbp-0x50],rax
  40ea49:	mov    rdi,QWORD PTR [rbp-0x50]
  40ea4d:	call   408800 <verify_monster@@Base+0x1cb0>
  40ea52:	movsx  ecx,ax
  40ea55:	cmp    ecx,0x2c
  40ea58:	je     40ea71 <test_clone_slice@@Base+0x7c1>
  40ea5e:	lea    rdi,[rip+0x15380]        # 423de5 <_IO_stdin_used@@Base+0x1de5>
  40ea65:	mov    al,0x0
  40ea67:	call   404070 <printf@plt>
  40ea6c:	jmp    40ea78 <test_clone_slice@@Base+0x7c8>
  40ea71:	mov    DWORD PTR [rbp-0x6c],0x0
  40ea78:	mov    rdi,QWORD PTR [rbp-0x58]
  40ea7c:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40ea81:	mov    eax,DWORD PTR [rbp-0x6c]
  40ea84:	add    rsp,0x110
  40ea8b:	pop    rbp
  40ea8c:	ret    
  40ea8d:	nop    DWORD PTR [rax]
  40ea90:	push   rbp
  40ea91:	mov    rbp,rsp
  40ea94:	sub    rsp,0x20
  40ea98:	mov    QWORD PTR [rbp-0x8],rdi
  40ea9c:	mov    QWORD PTR [rbp-0x10],rsi
  40eaa0:	mov    QWORD PTR [rbp-0x18],rdx
  40eaa4:	mov    rdi,QWORD PTR [rbp-0x8]
  40eaa8:	mov    rax,QWORD PTR [rbp-0x8]
  40eaac:	mov    rsi,QWORD PTR [rbp-0x10]
  40eab0:	mov    rdx,QWORD PTR [rbp-0x18]
  40eab4:	mov    QWORD PTR [rbp-0x20],rdi
  40eab8:	mov    rdi,rax
  40eabb:	call   417230 <main@@Base+0x3500>
  40eac0:	mov    rdi,QWORD PTR [rbp-0x20]
  40eac4:	mov    esi,eax
  40eac6:	call   416920 <main@@Base+0x2bf0>
  40eacb:	add    rsp,0x20
  40eacf:	pop    rbp
  40ead0:	ret    
  40ead1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eadb:	nop    DWORD PTR [rax+rax*1+0x0]
  40eae0:	push   rbp
  40eae1:	mov    rbp,rsp
  40eae4:	sub    rsp,0x20
  40eae8:	mov    QWORD PTR [rbp-0x8],rdi
  40eaec:	mov    QWORD PTR [rbp-0x10],rsi
  40eaf0:	mov    rdi,QWORD PTR [rbp-0x8]
  40eaf4:	mov    rax,QWORD PTR [rbp-0x8]
  40eaf8:	mov    rsi,QWORD PTR [rbp-0x10]
  40eafc:	mov    QWORD PTR [rbp-0x18],rdi
  40eb00:	mov    rdi,rax
  40eb03:	call   417270 <main@@Base+0x3540>
  40eb08:	mov    rdi,QWORD PTR [rbp-0x18]
  40eb0c:	mov    esi,eax
  40eb0e:	call   40a550 <gen_monster@@Base+0xbe0>
  40eb13:	add    rsp,0x20
  40eb17:	pop    rbp
  40eb18:	ret    
  40eb19:	nop    DWORD PTR [rax+0x0]
  40eb20:	push   rbp
  40eb21:	mov    rbp,rsp
  40eb24:	sub    rsp,0x20
  40eb28:	mov    QWORD PTR [rbp-0x8],rdi
  40eb2c:	mov    QWORD PTR [rbp-0x10],rsi
  40eb30:	mov    rdi,QWORD PTR [rbp-0x8]
  40eb34:	mov    rax,QWORD PTR [rbp-0x8]
  40eb38:	mov    rsi,QWORD PTR [rbp-0x10]
  40eb3c:	mov    QWORD PTR [rbp-0x18],rdi
  40eb40:	mov    rdi,rax
  40eb43:	call   417270 <main@@Base+0x3540>
  40eb48:	mov    rdi,QWORD PTR [rbp-0x18]
  40eb4c:	mov    esi,eax
  40eb4e:	call   4172c0 <main@@Base+0x3590>
  40eb53:	add    rsp,0x20
  40eb57:	pop    rbp
  40eb58:	ret    
  40eb59:	nop    DWORD PTR [rax+0x0]
  40eb60:	push   rbp
  40eb61:	mov    rbp,rsp
  40eb64:	sub    rsp,0x30
  40eb68:	mov    QWORD PTR [rbp-0x8],rdi
  40eb6c:	mov    QWORD PTR [rbp-0x10],rsi
  40eb70:	mov    QWORD PTR [rbp-0x18],rdx
  40eb74:	mov    QWORD PTR [rbp-0x20],rcx
  40eb78:	mov    rdi,QWORD PTR [rbp-0x8]
  40eb7c:	mov    rax,QWORD PTR [rbp-0x8]
  40eb80:	mov    rsi,QWORD PTR [rbp-0x10]
  40eb84:	mov    rdx,QWORD PTR [rbp-0x18]
  40eb88:	mov    rcx,QWORD PTR [rbp-0x20]
  40eb8c:	mov    QWORD PTR [rbp-0x28],rdi
  40eb90:	mov    rdi,rax
  40eb93:	call   417310 <main@@Base+0x35e0>
  40eb98:	mov    rdi,QWORD PTR [rbp-0x28]
  40eb9c:	mov    esi,eax
  40eb9e:	call   4172c0 <main@@Base+0x3590>
  40eba3:	add    rsp,0x30
  40eba7:	pop    rbp
  40eba8:	ret    
  40eba9:	nop    DWORD PTR [rax+0x0]
  40ebb0:	push   rbp
  40ebb1:	mov    rbp,rsp
  40ebb4:	sub    rsp,0x30
  40ebb8:	mov    QWORD PTR [rbp-0x8],rdi
  40ebbc:	mov    QWORD PTR [rbp-0x10],rsi
  40ebc0:	mov    QWORD PTR [rbp-0x18],rdx
  40ebc4:	mov    QWORD PTR [rbp-0x20],rcx
  40ebc8:	mov    rdi,QWORD PTR [rbp-0x8]
  40ebcc:	mov    rax,QWORD PTR [rbp-0x8]
  40ebd0:	mov    rsi,QWORD PTR [rbp-0x10]
  40ebd4:	mov    rdx,QWORD PTR [rbp-0x18]
  40ebd8:	mov    rcx,QWORD PTR [rbp-0x20]
  40ebdc:	mov    QWORD PTR [rbp-0x28],rdi
  40ebe0:	mov    rdi,rax
  40ebe3:	call   417310 <main@@Base+0x35e0>
  40ebe8:	mov    rdi,QWORD PTR [rbp-0x28]
  40ebec:	mov    esi,eax
  40ebee:	call   40a550 <gen_monster@@Base+0xbe0>
  40ebf3:	add    rsp,0x30
  40ebf7:	pop    rbp
  40ebf8:	ret    
  40ebf9:	nop    DWORD PTR [rax+0x0]
  40ec00:	push   rbp
  40ec01:	mov    rbp,rsp
  40ec04:	sub    rsp,0x20
  40ec08:	mov    QWORD PTR [rbp-0x8],rdi
  40ec0c:	mov    QWORD PTR [rbp-0x10],rsi
  40ec10:	mov    rdi,QWORD PTR [rbp-0x8]
  40ec14:	mov    rax,QWORD PTR [rbp-0x8]
  40ec18:	mov    rsi,QWORD PTR [rbp-0x10]
  40ec1c:	mov    QWORD PTR [rbp-0x18],rdi
  40ec20:	mov    rdi,rax
  40ec23:	call   417390 <main@@Base+0x3660>
  40ec28:	mov    rdi,QWORD PTR [rbp-0x18]
  40ec2c:	mov    esi,eax
  40ec2e:	call   416920 <main@@Base+0x2bf0>
  40ec33:	add    rsp,0x20
  40ec37:	pop    rbp
  40ec38:	ret    
  40ec39:	nop    DWORD PTR [rax+0x0]
  40ec40:	push   rbp
  40ec41:	mov    rbp,rsp
  40ec44:	sub    rsp,0x30
  40ec48:	mov    QWORD PTR [rbp-0x8],rdi
  40ec4c:	mov    QWORD PTR [rbp-0x10],rsi
  40ec50:	mov    QWORD PTR [rbp-0x18],rdx
  40ec54:	mov    QWORD PTR [rbp-0x20],rcx
  40ec58:	mov    rdi,QWORD PTR [rbp-0x8]
  40ec5c:	mov    rax,QWORD PTR [rbp-0x8]
  40ec60:	mov    rsi,QWORD PTR [rbp-0x10]
  40ec64:	mov    rdx,QWORD PTR [rbp-0x18]
  40ec68:	mov    rcx,QWORD PTR [rbp-0x20]
  40ec6c:	mov    QWORD PTR [rbp-0x28],rdi
  40ec70:	mov    rdi,rax
  40ec73:	call   4173f0 <main@@Base+0x36c0>
  40ec78:	mov    rdi,QWORD PTR [rbp-0x28]
  40ec7c:	mov    esi,eax
  40ec7e:	call   416760 <main@@Base+0x2a30>
  40ec83:	add    rsp,0x30
  40ec87:	pop    rbp
  40ec88:	ret    
  40ec89:	nop    DWORD PTR [rax+0x0]
  40ec90:	push   rbp
  40ec91:	mov    rbp,rsp
  40ec94:	sub    rsp,0x30
  40ec98:	mov    QWORD PTR [rbp-0x8],rdi
  40ec9c:	mov    QWORD PTR [rbp-0x10],rsi
  40eca0:	mov    QWORD PTR [rbp-0x18],rdx
  40eca4:	mov    QWORD PTR [rbp-0x20],rcx
  40eca8:	mov    rdi,QWORD PTR [rbp-0x8]
  40ecac:	mov    rax,QWORD PTR [rbp-0x8]
  40ecb0:	mov    rsi,QWORD PTR [rbp-0x10]
  40ecb4:	mov    rdx,QWORD PTR [rbp-0x18]
  40ecb8:	mov    rcx,QWORD PTR [rbp-0x20]
  40ecbc:	mov    QWORD PTR [rbp-0x28],rdi
  40ecc0:	mov    rdi,rax
  40ecc3:	call   4174b0 <main@@Base+0x3780>
  40ecc8:	mov    rdi,QWORD PTR [rbp-0x28]
  40eccc:	mov    esi,eax
  40ecce:	call   416920 <main@@Base+0x2bf0>
  40ecd3:	add    rsp,0x30
  40ecd7:	pop    rbp
  40ecd8:	ret    
  40ecd9:	nop    DWORD PTR [rax+0x0]
  40ece0:	push   rbp
  40ece1:	mov    rbp,rsp
  40ece4:	sub    rsp,0x10
  40ece8:	xor    eax,eax
  40ecea:	mov    QWORD PTR [rbp-0x8],rdi
  40ecee:	mov    QWORD PTR [rbp-0x10],rsi
  40ecf2:	mov    rdi,QWORD PTR [rbp-0x8]
  40ecf6:	mov    rcx,QWORD PTR [rbp-0x10]
  40ecfa:	mov    esi,eax
  40ecfc:	mov    rdx,rcx
  40ecff:	mov    ecx,0x20
  40ed04:	mov    r8d,0x10
  40ed0a:	call   41dca0 <flatcc_builder_table_add_copy@@Base>
  40ed0f:	xor    esi,esi
  40ed11:	mov    ecx,esi
  40ed13:	xor    esi,esi
  40ed15:	cmp    rcx,rax
  40ed18:	mov    r8d,0xffffffff
  40ed1e:	cmove  esi,r8d
  40ed22:	mov    eax,esi
  40ed24:	add    rsp,0x10
  40ed28:	pop    rbp
  40ed29:	ret    
  40ed2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed30:	push   rbp
  40ed31:	mov    rbp,rsp
  40ed34:	sub    rsp,0x20
  40ed38:	mov    QWORD PTR [rbp-0x8],rdi
  40ed3c:	mov    QWORD PTR [rbp-0x10],rsi
  40ed40:	mov    rdi,QWORD PTR [rbp-0x8]
  40ed44:	mov    rax,QWORD PTR [rbp-0x8]
  40ed48:	mov    rsi,QWORD PTR [rbp-0x10]
  40ed4c:	mov    QWORD PTR [rbp-0x18],rdi
  40ed50:	mov    rdi,rax
  40ed53:	call   417570 <main@@Base+0x3840>
  40ed58:	mov    rdi,QWORD PTR [rbp-0x18]
  40ed5c:	mov    esi,eax
  40ed5e:	call   416760 <main@@Base+0x2a30>
  40ed63:	add    rsp,0x20
  40ed67:	pop    rbp
  40ed68:	ret    
  40ed69:	nop    DWORD PTR [rax+0x0]

000000000040ed70 <test_create_add_field@@Base>:
  40ed70:	push   rbp
  40ed71:	mov    rbp,rsp
  40ed74:	sub    rsp,0x50
  40ed78:	mov    QWORD PTR [rbp-0x8],rdi
  40ed7c:	mov    DWORD PTR [rbp-0x1c],0xffffffff
  40ed83:	mov    rdi,QWORD PTR [rbp-0x8]
  40ed87:	call   418ef0 <flatcc_builder_reset@@Base>
  40ed8c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ed90:	mov    DWORD PTR [rbp-0x34],eax
  40ed93:	call   40a0d0 <gen_monster@@Base+0x760>
  40ed98:	mov    rdi,QWORD PTR [rbp-0x8]
  40ed9c:	lea    rsi,[rip+0x135b4]        # 422357 <_IO_stdin_used@@Base+0x357>
  40eda3:	mov    DWORD PTR [rbp-0x38],eax
  40eda6:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40edab:	mov    rdi,QWORD PTR [rbp-0x8]
  40edaf:	mov    rcx,QWORD PTR [rbp-0x8]
  40edb3:	mov    QWORD PTR [rbp-0x40],rdi
  40edb7:	mov    rdi,rcx
  40edba:	lea    rsi,[rip+0x15049]        # 423e0a <_IO_stdin_used@@Base+0x1e0a>
  40edc1:	mov    DWORD PTR [rbp-0x44],eax
  40edc4:	call   40a790 <gen_monster@@Base+0xe20>
  40edc9:	mov    rdi,QWORD PTR [rbp-0x40]
  40edcd:	mov    esi,eax
  40edcf:	mov    rdx,0xffffffffffffff9c
  40edd6:	mov    ecx,0x2
  40eddb:	call   40ee90 <test_create_add_field@@Base+0x120>
  40ede0:	xor    esi,esi
  40ede2:	mov    rdi,QWORD PTR [rbp-0x8]
  40ede6:	mov    DWORD PTR [rbp-0x48],eax
  40ede9:	call   40eee0 <test_create_add_field@@Base+0x170>
  40edee:	mov    rdi,QWORD PTR [rbp-0x8]
  40edf2:	mov    DWORD PTR [rbp-0x4c],eax
  40edf5:	call   40ac50 <gen_monster@@Base+0x12e0>
  40edfa:	mov    rdi,QWORD PTR [rbp-0x8]
  40edfe:	lea    rsi,[rbp-0x18]
  40ee02:	mov    DWORD PTR [rbp-0x50],eax
  40ee05:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40ee0a:	mov    QWORD PTR [rbp-0x10],rax
  40ee0e:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee12:	call   404480 <verify_empty_monster@@Base+0x260>
  40ee17:	mov    QWORD PTR [rbp-0x28],rax
  40ee1b:	mov    rdi,QWORD PTR [rbp-0x28]
  40ee1f:	call   40ef40 <test_create_add_field@@Base+0x1d0>
  40ee24:	cmp    eax,0x0
  40ee27:	je     40ee40 <test_create_add_field@@Base+0xd0>
  40ee2d:	lea    rdi,[rip+0x14fdc]        # 423e10 <_IO_stdin_used@@Base+0x1e10>
  40ee34:	mov    al,0x0
  40ee36:	call   404070 <printf@plt>
  40ee3b:	jmp    40ee7a <test_create_add_field@@Base+0x10a>
  40ee40:	mov    rdi,QWORD PTR [rbp-0x28]
  40ee44:	call   409570 <verify_monster@@Base+0x2a20>
  40ee49:	mov    QWORD PTR [rbp-0x30],rax
  40ee4d:	mov    rdi,QWORD PTR [rbp-0x30]
  40ee51:	call   40f030 <test_create_add_field@@Base+0x2c0>
  40ee56:	cmp    rax,0xffffffffffffff9c
  40ee5a:	je     40ee73 <test_create_add_field@@Base+0x103>
  40ee60:	lea    rdi,[rip+0x14fd7]        # 423e3e <_IO_stdin_used@@Base+0x1e3e>
  40ee67:	mov    al,0x0
  40ee69:	call   404070 <printf@plt>
  40ee6e:	jmp    40ee7a <test_create_add_field@@Base+0x10a>
  40ee73:	mov    DWORD PTR [rbp-0x1c],0x0
  40ee7a:	mov    rdi,QWORD PTR [rbp-0x10]
  40ee7e:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40ee83:	mov    eax,DWORD PTR [rbp-0x1c]
  40ee86:	add    rsp,0x50
  40ee8a:	pop    rbp
  40ee8b:	ret    
  40ee8c:	nop    DWORD PTR [rax+0x0]
  40ee90:	push   rbp
  40ee91:	mov    rbp,rsp
  40ee94:	sub    rsp,0x30
  40ee98:	mov    QWORD PTR [rbp-0x8],rdi
  40ee9c:	mov    DWORD PTR [rbp-0xc],esi
  40ee9f:	mov    QWORD PTR [rbp-0x18],rdx
  40eea3:	mov    WORD PTR [rbp-0x1a],cx
  40eea7:	mov    rdi,QWORD PTR [rbp-0x8]
  40eeab:	mov    rax,QWORD PTR [rbp-0x8]
  40eeaf:	mov    esi,DWORD PTR [rbp-0xc]
  40eeb2:	mov    rdx,QWORD PTR [rbp-0x18]
  40eeb6:	mov    QWORD PTR [rbp-0x28],rdi
  40eeba:	mov    rdi,rax
  40eebd:	movzx  ecx,WORD PTR [rbp-0x1a]
  40eec1:	call   4175d0 <main@@Base+0x38a0>
  40eec6:	mov    rdi,QWORD PTR [rbp-0x28]
  40eeca:	mov    esi,eax
  40eecc:	call   416a50 <main@@Base+0x2d20>
  40eed1:	add    rsp,0x30
  40eed5:	pop    rbp
  40eed6:	ret    
  40eed7:	nop    WORD PTR [rax+rax*1+0x0]
  40eee0:	push   rbp
  40eee1:	mov    rbp,rsp
  40eee4:	sub    rsp,0x20
  40eee8:	mov    QWORD PTR [rbp-0x8],rdi
  40eeec:	mov    DWORD PTR [rbp-0xc],esi
  40eeef:	cmp    DWORD PTR [rbp-0xc],0x0
  40eef3:	je     40ef28 <test_create_add_field@@Base+0x1b8>
  40eef9:	mov    rdi,QWORD PTR [rbp-0x8]
  40eefd:	mov    esi,0xc
  40ef02:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40ef07:	mov    QWORD PTR [rbp-0x18],rax
  40ef0b:	cmp    rax,0x0
  40ef0f:	je     40ef28 <test_create_add_field@@Base+0x1b8>
  40ef15:	xor    eax,eax
  40ef17:	mov    ecx,DWORD PTR [rbp-0xc]
  40ef1a:	mov    rdx,QWORD PTR [rbp-0x18]
  40ef1e:	mov    DWORD PTR [rdx],ecx
  40ef20:	mov    DWORD PTR [rbp-0x1c],eax
  40ef23:	jmp    40ef35 <test_create_add_field@@Base+0x1c5>
  40ef28:	mov    eax,0xffffffff
  40ef2d:	mov    DWORD PTR [rbp-0x1c],eax
  40ef30:	jmp    40ef35 <test_create_add_field@@Base+0x1c5>
  40ef35:	mov    eax,DWORD PTR [rbp-0x1c]
  40ef38:	add    rsp,0x20
  40ef3c:	pop    rbp
  40ef3d:	ret    
  40ef3e:	xchg   ax,ax
  40ef40:	push   rbp
  40ef41:	mov    rbp,rsp
  40ef44:	sub    rsp,0x20
  40ef48:	mov    QWORD PTR [rbp-0x8],rdi
  40ef4c:	mov    WORD PTR [rbp-0xa],0x0
  40ef52:	cmp    QWORD PTR [rbp-0x8],0x0
  40ef57:	je     40ef71 <test_create_add_field@@Base+0x201>
  40ef5d:	mov    al,0x1
  40ef5f:	test   al,0x1
  40ef61:	jne    40ef6c <test_create_add_field@@Base+0x1fc>
  40ef67:	jmp    40ef71 <test_create_add_field@@Base+0x201>
  40ef6c:	jmp    40ef90 <test_create_add_field@@Base+0x220>
  40ef71:	lea    rdi,[rip+0x15b20]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40ef78:	lea    rsi,[rip+0x15b3f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40ef7f:	mov    edx,0x2cc
  40ef84:	lea    rcx,[rip+0x16da8]        # 425d33 <_IO_stdin_used@@Base+0x3d33>
  40ef8b:	call   404090 <__assert_fail@plt>
  40ef90:	mov    WORD PTR [rbp-0xc],0xc
  40ef96:	mov    rax,QWORD PTR [rbp-0x8]
  40ef9a:	mov    rcx,QWORD PTR [rbp-0x8]
  40ef9e:	mov    rdi,rcx
  40efa1:	mov    QWORD PTR [rbp-0x20],rax
  40efa5:	call   414210 <main@@Base+0x4e0>
  40efaa:	xor    edx,edx
  40efac:	mov    ecx,edx
  40efae:	movsxd rsi,eax
  40efb1:	sub    rcx,rsi
  40efb4:	mov    rsi,QWORD PTR [rbp-0x20]
  40efb8:	add    rsi,rcx
  40efbb:	mov    QWORD PTR [rbp-0x18],rsi
  40efbf:	mov    rcx,QWORD PTR [rbp-0x18]
  40efc3:	mov    rdi,rcx
  40efc6:	call   414230 <main@@Base+0x500>
  40efcb:	movzx  edx,ax
  40efce:	mov    ecx,edx
  40efd0:	movzx  edx,WORD PTR [rbp-0xc]
  40efd4:	add    edx,0x3
  40efd7:	movsxd rsi,edx
  40efda:	shl    rsi,0x1
  40efde:	cmp    rcx,rsi
  40efe1:	jb     40f00b <test_create_add_field@@Base+0x29b>
  40efe7:	mov    rax,QWORD PTR [rbp-0x18]
  40efeb:	movzx  ecx,WORD PTR [rbp-0xc]
  40efef:	movsxd rdx,ecx
  40eff2:	shl    rdx,0x1
  40eff6:	add    rax,rdx
  40eff9:	add    rax,0x4
  40efff:	mov    rdi,rax
  40f002:	call   414230 <main@@Base+0x500>
  40f007:	mov    WORD PTR [rbp-0xa],ax
  40f00b:	movzx  eax,WORD PTR [rbp-0xa]
  40f00f:	cmp    eax,0x0
  40f012:	setne  cl
  40f015:	and    cl,0x1
  40f018:	movzx  eax,cl
  40f01b:	add    rsp,0x20
  40f01f:	pop    rbp
  40f020:	ret    
  40f021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f02b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f030:	push   rbp
  40f031:	mov    rbp,rsp
  40f034:	sub    rsp,0x30
  40f038:	mov    QWORD PTR [rbp-0x8],rdi
  40f03c:	mov    WORD PTR [rbp-0xa],0x0
  40f042:	cmp    QWORD PTR [rbp-0x8],0x0
  40f047:	je     40f061 <test_create_add_field@@Base+0x2f1>
  40f04d:	mov    al,0x1
  40f04f:	test   al,0x1
  40f051:	jne    40f05c <test_create_add_field@@Base+0x2ec>
  40f057:	jmp    40f061 <test_create_add_field@@Base+0x2f1>
  40f05c:	jmp    40f080 <test_create_add_field@@Base+0x310>
  40f061:	lea    rdi,[rip+0x15a30]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40f068:	lea    rsi,[rip+0x15a4f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40f06f:	mov    edx,0x260
  40f074:	lea    rcx,[rip+0x16d04]        # 425d7f <_IO_stdin_used@@Base+0x3d7f>
  40f07b:	call   404090 <__assert_fail@plt>
  40f080:	mov    WORD PTR [rbp-0xc],0x1
  40f086:	mov    rax,QWORD PTR [rbp-0x8]
  40f08a:	mov    rcx,QWORD PTR [rbp-0x8]
  40f08e:	mov    rdi,rcx
  40f091:	mov    QWORD PTR [rbp-0x20],rax
  40f095:	call   414210 <main@@Base+0x4e0>
  40f09a:	xor    edx,edx
  40f09c:	mov    ecx,edx
  40f09e:	movsxd rsi,eax
  40f0a1:	sub    rcx,rsi
  40f0a4:	mov    rsi,QWORD PTR [rbp-0x20]
  40f0a8:	add    rsi,rcx
  40f0ab:	mov    QWORD PTR [rbp-0x18],rsi
  40f0af:	mov    rcx,QWORD PTR [rbp-0x18]
  40f0b3:	mov    rdi,rcx
  40f0b6:	call   414230 <main@@Base+0x500>
  40f0bb:	movzx  edx,ax
  40f0be:	mov    ecx,edx
  40f0c0:	movzx  edx,WORD PTR [rbp-0xc]
  40f0c4:	add    edx,0x3
  40f0c7:	movsxd rsi,edx
  40f0ca:	shl    rsi,0x1
  40f0ce:	cmp    rcx,rsi
  40f0d1:	jb     40f0fb <test_create_add_field@@Base+0x38b>
  40f0d7:	mov    rax,QWORD PTR [rbp-0x18]
  40f0db:	movzx  ecx,WORD PTR [rbp-0xc]
  40f0df:	movsxd rdx,ecx
  40f0e2:	shl    rdx,0x1
  40f0e6:	add    rax,rdx
  40f0e9:	add    rax,0x4
  40f0ef:	mov    rdi,rax
  40f0f2:	call   414230 <main@@Base+0x500>
  40f0f7:	mov    WORD PTR [rbp-0xa],ax
  40f0fb:	movzx  eax,WORD PTR [rbp-0xa]
  40f0ff:	cmp    eax,0x0
  40f102:	je     40f127 <test_create_add_field@@Base+0x3b7>
  40f108:	mov    rax,QWORD PTR [rbp-0x8]
  40f10c:	movzx  ecx,WORD PTR [rbp-0xa]
  40f110:	movsxd rdx,ecx
  40f113:	add    rax,rdx
  40f116:	mov    rdi,rax
  40f119:	call   415020 <main@@Base+0x12f0>
  40f11e:	mov    QWORD PTR [rbp-0x28],rax
  40f122:	jmp    40f134 <test_create_add_field@@Base+0x3c4>
  40f127:	xor    eax,eax
  40f129:	mov    ecx,eax
  40f12b:	mov    QWORD PTR [rbp-0x28],rcx
  40f12f:	jmp    40f134 <test_create_add_field@@Base+0x3c4>
  40f134:	mov    rax,QWORD PTR [rbp-0x28]
  40f138:	add    rsp,0x30
  40f13c:	pop    rbp
  40f13d:	ret    
  40f13e:	xchg   ax,ax

000000000040f140 <test_union_vector@@Base>:
  40f140:	push   rbp
  40f141:	mov    rbp,rsp
  40f144:	sub    rsp,0x100
  40f14b:	mov    QWORD PTR [rbp-0x10],rdi
  40f14f:	mov    DWORD PTR [rbp-0x30],0xffffffff
  40f156:	mov    rdi,QWORD PTR [rbp-0x10]
  40f15a:	call   418ef0 <flatcc_builder_reset@@Base>
  40f15f:	mov    rdi,QWORD PTR [rbp-0x10]
  40f163:	mov    DWORD PTR [rbp-0xc4],eax
  40f169:	call   40a0d0 <gen_monster@@Base+0x760>
  40f16e:	mov    rdi,QWORD PTR [rbp-0x10]
  40f172:	lea    rsi,[rip+0x14cd9]        # 423e52 <_IO_stdin_used@@Base+0x1e52>
  40f179:	mov    DWORD PTR [rbp-0xc8],eax
  40f17f:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  40f184:	mov    rdi,QWORD PTR [rbp-0x10]
  40f188:	mov    ecx,0x2
  40f18d:	mov    esi,ecx
  40f18f:	mov    edx,ecx
  40f191:	mov    DWORD PTR [rbp-0xcc],ecx
  40f197:	mov    r8d,DWORD PTR [rbp-0xcc]
  40f19e:	mov    DWORD PTR [rbp-0xd0],eax
  40f1a4:	call   40f510 <test_union_vector@@Base+0x3d0>
  40f1a9:	mov    DWORD PTR [rbp-0x4c],eax
  40f1ac:	mov    rdi,QWORD PTR [rbp-0x10]
  40f1b0:	call   40f5c0 <test_union_vector@@Base+0x480>
  40f1b5:	mov    rdi,QWORD PTR [rbp-0x10]
  40f1b9:	mov    ecx,DWORD PTR [rbp-0x4c]
  40f1bc:	mov    QWORD PTR [rbp-0xd8],rdi
  40f1c3:	mov    edi,ecx
  40f1c5:	mov    DWORD PTR [rbp-0xdc],eax
  40f1cb:	call   40f610 <test_union_vector@@Base+0x4d0>
  40f1d0:	mov    QWORD PTR [rbp-0x98],rax
  40f1d7:	mov    rsi,QWORD PTR [rbp-0x98]
  40f1de:	mov    rdi,QWORD PTR [rbp-0xd8]
  40f1e5:	call   40f5e0 <test_union_vector@@Base+0x4a0>
  40f1ea:	mov    rdi,QWORD PTR [rbp-0x10]
  40f1ee:	mov    QWORD PTR [rbp-0xe8],rax
  40f1f5:	call   40f630 <test_union_vector@@Base+0x4f0>
  40f1fa:	mov    QWORD PTR [rbp-0xa0],rax
  40f201:	mov    rax,QWORD PTR [rbp-0xa0]
  40f208:	mov    QWORD PTR [rbp-0x48],rax
  40f20c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f210:	call   40f660 <test_union_vector@@Base+0x520>
  40f215:	mov    rdi,QWORD PTR [rbp-0x10]
  40f219:	mov    rsi,QWORD PTR [rbp-0x48]
  40f21d:	mov    DWORD PTR [rbp-0xec],eax
  40f223:	call   40f680 <test_union_vector@@Base+0x540>
  40f228:	mov    rdi,QWORD PTR [rbp-0x10]
  40f22c:	mov    DWORD PTR [rbp-0xf0],eax
  40f232:	call   40f730 <test_union_vector@@Base+0x5f0>
  40f237:	mov    rdi,QWORD PTR [rbp-0x10]
  40f23b:	mov    DWORD PTR [rbp-0xf4],eax
  40f241:	call   40ac50 <gen_monster@@Base+0x12e0>
  40f246:	mov    rdi,QWORD PTR [rbp-0x10]
  40f24a:	lea    rsi,[rbp-0x20]
  40f24e:	mov    DWORD PTR [rbp-0xf8],eax
  40f254:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  40f259:	mov    QWORD PTR [rbp-0x18],rax
  40f25d:	mov    rdi,QWORD PTR [rbp-0x18]
  40f261:	mov    rsi,QWORD PTR [rbp-0x20]
  40f265:	call   405d00 <test_empty_monster@@Base+0x2b0>
  40f26a:	mov    DWORD PTR [rbp-0x30],eax
  40f26d:	cmp    eax,0x0
  40f270:	je     40f29b <test_union_vector@@Base+0x15b>
  40f276:	mov    edi,DWORD PTR [rbp-0x30]
  40f279:	call   41f3a0 <flatcc_verify_error_string@@Base>
  40f27e:	lea    rdi,[rip+0x14bd4]        # 423e59 <_IO_stdin_used@@Base+0x1e59>
  40f285:	mov    rsi,rax
  40f288:	mov    al,0x0
  40f28a:	call   404070 <printf@plt>
  40f28f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40f296:	jmp    40f4f6 <test_union_vector@@Base+0x3b6>
  40f29b:	mov    rdi,QWORD PTR [rbp-0x18]
  40f29f:	call   404480 <verify_empty_monster@@Base+0x260>
  40f2a4:	mov    QWORD PTR [rbp-0x38],rax
  40f2a8:	mov    rdi,QWORD PTR [rbp-0x38]
  40f2ac:	call   408f90 <verify_monster@@Base+0x2440>
  40f2b1:	movzx  ecx,al
  40f2b4:	cmp    ecx,0x4
  40f2b7:	je     40f2d0 <test_union_vector@@Base+0x190>
  40f2bd:	lea    rdi,[rip+0x14bd1]        # 423e95 <_IO_stdin_used@@Base+0x1e95>
  40f2c4:	mov    al,0x0
  40f2c6:	call   404070 <printf@plt>
  40f2cb:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f2d0:	mov    rdi,QWORD PTR [rbp-0x38]
  40f2d4:	call   4090a0 <verify_monster@@Base+0x2550>
  40f2d9:	mov    QWORD PTR [rbp-0x90],rax
  40f2e0:	cmp    QWORD PTR [rbp-0x90],0x0
  40f2e8:	je     40f303 <test_union_vector@@Base+0x1c3>
  40f2ee:	mov    rdi,QWORD PTR [rbp-0x90]
  40f2f5:	call   40f780 <test_union_vector@@Base+0x640>
  40f2fa:	cmp    eax,0x0
  40f2fd:	je     40f316 <test_union_vector@@Base+0x1d6>
  40f303:	lea    rdi,[rip+0x14bad]        # 423eb7 <_IO_stdin_used@@Base+0x1eb7>
  40f30a:	mov    al,0x0
  40f30c:	call   404070 <printf@plt>
  40f311:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f316:	mov    rdi,QWORD PTR [rbp-0x90]
  40f31d:	call   40f870 <test_union_vector@@Base+0x730>
  40f322:	mov    QWORD PTR [rbp-0x68],rax
  40f326:	mov    rdi,QWORD PTR [rbp-0x90]
  40f32d:	call   40f9a0 <test_union_vector@@Base+0x860>
  40f332:	mov    QWORD PTR [rbp-0x60],rax
  40f336:	mov    rdi,QWORD PTR [rbp-0x68]
  40f33a:	call   40fad0 <test_union_vector@@Base+0x990>
  40f33f:	mov    QWORD PTR [rbp-0x28],rax
  40f343:	cmp    QWORD PTR [rbp-0x28],0x1
  40f348:	je     40f361 <test_union_vector@@Base+0x221>
  40f34e:	lea    rdi,[rip+0x14b8b]        # 423ee0 <_IO_stdin_used@@Base+0x1ee0>
  40f355:	mov    al,0x0
  40f357:	call   404070 <printf@plt>
  40f35c:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f361:	xor    eax,eax
  40f363:	mov    esi,eax
  40f365:	mov    rdi,QWORD PTR [rbp-0x68]
  40f369:	call   40faf0 <test_union_vector@@Base+0x9b0>
  40f36e:	movzx  ecx,al
  40f371:	cmp    ecx,0x2
  40f374:	je     40f38d <test_union_vector@@Base+0x24d>
  40f37a:	lea    rdi,[rip+0x14b87]        # 423f08 <_IO_stdin_used@@Base+0x1f08>
  40f381:	mov    al,0x0
  40f383:	call   404070 <printf@plt>
  40f388:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f38d:	xor    eax,eax
  40f38f:	mov    esi,eax
  40f391:	mov    rdi,QWORD PTR [rbp-0x60]
  40f395:	call   40fb60 <test_union_vector@@Base+0xa20>
  40f39a:	mov    QWORD PTR [rbp-0x58],rax
  40f39e:	cmp    QWORD PTR [rbp-0x58],0x0
  40f3a3:	jne    40f3bc <test_union_vector@@Base+0x27c>
  40f3a9:	lea    rdi,[rip+0x14b86]        # 423f36 <_IO_stdin_used@@Base+0x1f36>
  40f3b0:	mov    al,0x0
  40f3b2:	call   404070 <printf@plt>
  40f3b7:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f3bc:	mov    rdi,QWORD PTR [rbp-0x58]
  40f3c0:	call   40fc00 <test_union_vector@@Base+0xac0>
  40f3c5:	movsx  ecx,al
  40f3c8:	mov    DWORD PTR [rbp-0x2c],ecx
  40f3cb:	cmp    DWORD PTR [rbp-0x2c],0x2
  40f3cf:	je     40f3eb <test_union_vector@@Base+0x2ab>
  40f3d5:	mov    esi,DWORD PTR [rbp-0x2c]
  40f3d8:	lea    rdi,[rip+0x14b68]        # 423f47 <_IO_stdin_used@@Base+0x1f47>
  40f3df:	mov    al,0x0
  40f3e1:	call   404070 <printf@plt>
  40f3e6:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f3eb:	mov    rdi,QWORD PTR [rbp-0x90]
  40f3f2:	call   40fd20 <test_union_vector@@Base+0xbe0>
  40f3f7:	mov    QWORD PTR [rbp-0xb0],rax
  40f3fe:	mov    QWORD PTR [rbp-0xa8],rdx
  40f405:	mov    rax,QWORD PTR [rbp-0xb0]
  40f40c:	mov    QWORD PTR [rbp-0x78],rax
  40f410:	mov    rax,QWORD PTR [rbp-0xa8]
  40f417:	mov    QWORD PTR [rbp-0x70],rax
  40f41b:	mov    rdi,QWORD PTR [rbp-0x78]
  40f41f:	mov    rsi,QWORD PTR [rbp-0x70]
  40f423:	call   40fdb0 <test_union_vector@@Base+0xc70>
  40f428:	cmp    rax,0x1
  40f42c:	je     40f445 <test_union_vector@@Base+0x305>
  40f432:	lea    rdi,[rip+0x14b2b]        # 423f64 <_IO_stdin_used@@Base+0x1f64>
  40f439:	mov    al,0x0
  40f43b:	call   404070 <printf@plt>
  40f440:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f445:	xor    eax,eax
  40f447:	mov    edx,eax
  40f449:	mov    rdi,QWORD PTR [rbp-0x78]
  40f44d:	mov    rsi,QWORD PTR [rbp-0x70]
  40f451:	call   40fdd0 <test_union_vector@@Base+0xc90>
  40f456:	xor    ecx,ecx
  40f458:	mov    esi,ecx
  40f45a:	mov    BYTE PTR [rbp-0xc0],al
  40f460:	mov    QWORD PTR [rbp-0xb8],rdx
  40f467:	mov    rdx,QWORD PTR [rbp-0xc0]
  40f46e:	mov    QWORD PTR [rbp-0x88],rdx
  40f475:	mov    rdx,QWORD PTR [rbp-0xb8]
  40f47c:	mov    QWORD PTR [rbp-0x80],rdx
  40f480:	movzx  ecx,BYTE PTR [rbp-0x88]
  40f487:	mov    rdi,QWORD PTR [rbp-0x68]
  40f48b:	mov    DWORD PTR [rbp-0xfc],ecx
  40f491:	call   40faf0 <test_union_vector@@Base+0x9b0>
  40f496:	movzx  ecx,al
  40f499:	mov    r8d,DWORD PTR [rbp-0xfc]
  40f4a0:	cmp    r8d,ecx
  40f4a3:	je     40f4bc <test_union_vector@@Base+0x37c>
  40f4a9:	lea    rdi,[rip+0x14af9]        # 423fa9 <_IO_stdin_used@@Base+0x1fa9>
  40f4b0:	mov    al,0x0
  40f4b2:	call   404070 <printf@plt>
  40f4b7:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f4bc:	mov    rax,QWORD PTR [rbp-0x80]
  40f4c0:	mov    rcx,QWORD PTR [rbp-0x58]
  40f4c4:	cmp    rax,rcx
  40f4c7:	je     40f4e0 <test_union_vector@@Base+0x3a0>
  40f4cd:	lea    rdi,[rip+0x14aef]        # 423fc3 <_IO_stdin_used@@Base+0x1fc3>
  40f4d4:	mov    al,0x0
  40f4d6:	call   404070 <printf@plt>
  40f4db:	jmp    40f4e7 <test_union_vector@@Base+0x3a7>
  40f4e0:	mov    DWORD PTR [rbp-0x30],0x0
  40f4e7:	mov    rdi,QWORD PTR [rbp-0x18]
  40f4eb:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  40f4f0:	mov    eax,DWORD PTR [rbp-0x30]
  40f4f3:	mov    DWORD PTR [rbp-0x4],eax
  40f4f6:	mov    eax,DWORD PTR [rbp-0x4]
  40f4f9:	add    rsp,0x100
  40f500:	pop    rbp
  40f501:	ret    
  40f502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f50c:	nop    DWORD PTR [rax+0x0]
  40f510:	push   rbp
  40f511:	mov    rbp,rsp
  40f514:	sub    rsp,0x20
  40f518:	mov    QWORD PTR [rbp-0x10],rdi
  40f51c:	mov    BYTE PTR [rbp-0x11],sil
  40f520:	mov    BYTE PTR [rbp-0x12],dl
  40f523:	mov    BYTE PTR [rbp-0x13],cl
  40f526:	mov    BYTE PTR [rbp-0x14],r8b
  40f52a:	mov    rdi,QWORD PTR [rbp-0x10]
  40f52e:	call   4177c0 <main@@Base+0x3a90>
  40f533:	cmp    eax,0x0
  40f536:	jne    40f594 <test_union_vector@@Base+0x454>
  40f53c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f540:	movsx  esi,BYTE PTR [rbp-0x11]
  40f544:	call   4177e0 <main@@Base+0x3ab0>
  40f549:	cmp    eax,0x0
  40f54c:	jne    40f594 <test_union_vector@@Base+0x454>
  40f552:	mov    rdi,QWORD PTR [rbp-0x10]
  40f556:	movsx  esi,BYTE PTR [rbp-0x12]
  40f55a:	call   417860 <main@@Base+0x3b30>
  40f55f:	cmp    eax,0x0
  40f562:	jne    40f594 <test_union_vector@@Base+0x454>
  40f568:	mov    rdi,QWORD PTR [rbp-0x10]
  40f56c:	movzx  esi,BYTE PTR [rbp-0x13]
  40f570:	call   4178e0 <main@@Base+0x3bb0>
  40f575:	cmp    eax,0x0
  40f578:	jne    40f594 <test_union_vector@@Base+0x454>
  40f57e:	mov    rdi,QWORD PTR [rbp-0x10]
  40f582:	movzx  esi,BYTE PTR [rbp-0x14]
  40f586:	call   417960 <main@@Base+0x3c30>
  40f58b:	cmp    eax,0x0
  40f58e:	je     40f5a0 <test_union_vector@@Base+0x460>
  40f594:	mov    DWORD PTR [rbp-0x4],0x0
  40f59b:	jmp    40f5ac <test_union_vector@@Base+0x46c>
  40f5a0:	mov    rdi,QWORD PTR [rbp-0x10]
  40f5a4:	call   4179e0 <main@@Base+0x3cb0>
  40f5a9:	mov    DWORD PTR [rbp-0x4],eax
  40f5ac:	mov    eax,DWORD PTR [rbp-0x4]
  40f5af:	add    rsp,0x20
  40f5b3:	pop    rbp
  40f5b4:	ret    
  40f5b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5bf:	nop
  40f5c0:	push   rbp
  40f5c1:	mov    rbp,rsp
  40f5c4:	sub    rsp,0x10
  40f5c8:	mov    QWORD PTR [rbp-0x8],rdi
  40f5cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40f5d0:	call   41d2d0 <flatcc_builder_start_union_vector@@Base>
  40f5d5:	add    rsp,0x10
  40f5d9:	pop    rbp
  40f5da:	ret    
  40f5db:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5e0:	push   rbp
  40f5e1:	mov    rbp,rsp
  40f5e4:	sub    rsp,0x10
  40f5e8:	mov    QWORD PTR [rbp-0x8],rsi
  40f5ec:	mov    QWORD PTR [rbp-0x10],rdi
  40f5f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40f5f4:	mov    rsi,QWORD PTR [rbp-0x8]
  40f5f8:	call   41d620 <flatcc_builder_union_vector_push@@Base>
  40f5fd:	add    rsp,0x10
  40f601:	pop    rbp
  40f602:	ret    
  40f603:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f60d:	nop    DWORD PTR [rax]
  40f610:	push   rbp
  40f611:	mov    rbp,rsp
  40f614:	mov    DWORD PTR [rbp-0xc],edi
  40f617:	mov    BYTE PTR [rbp-0x8],0x2
  40f61b:	mov    eax,DWORD PTR [rbp-0xc]
  40f61e:	mov    DWORD PTR [rbp-0x4],eax
  40f621:	mov    rax,QWORD PTR [rbp-0x8]
  40f625:	pop    rbp
  40f626:	ret    
  40f627:	nop    WORD PTR [rax+rax*1+0x0]
  40f630:	push   rbp
  40f631:	mov    rbp,rsp
  40f634:	sub    rsp,0x10
  40f638:	mov    QWORD PTR [rbp-0x10],rdi
  40f63c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f640:	call   41d350 <flatcc_builder_end_union_vector@@Base>
  40f645:	mov    QWORD PTR [rbp-0x8],rax
  40f649:	mov    rax,QWORD PTR [rbp-0x8]
  40f64d:	add    rsp,0x10
  40f651:	pop    rbp
  40f652:	ret    
  40f653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f65d:	nop    DWORD PTR [rax]
  40f660:	push   rbp
  40f661:	mov    rbp,rsp
  40f664:	sub    rsp,0x10
  40f668:	mov    QWORD PTR [rbp-0x8],rdi
  40f66c:	mov    rdi,QWORD PTR [rbp-0x8]
  40f670:	call   417a40 <main@@Base+0x3d10>
  40f675:	add    rsp,0x10
  40f679:	pop    rbp
  40f67a:	ret    
  40f67b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f680:	push   rbp
  40f681:	mov    rbp,rsp
  40f684:	sub    rsp,0x20
  40f688:	mov    QWORD PTR [rbp-0x10],rsi
  40f68c:	mov    QWORD PTR [rbp-0x18],rdi
  40f690:	cmp    DWORD PTR [rbp-0x10],0x0
  40f694:	je     40f6a4 <test_union_vector@@Base+0x564>
  40f69a:	cmp    DWORD PTR [rbp-0xc],0x0
  40f69e:	jne    40f6be <test_union_vector@@Base+0x57e>
  40f6a4:	xor    eax,eax
  40f6a6:	mov    ecx,DWORD PTR [rbp-0x10]
  40f6a9:	mov    edx,DWORD PTR [rbp-0xc]
  40f6ac:	cmp    ecx,edx
  40f6ae:	mov    ecx,0xffffffff
  40f6b3:	cmove  ecx,eax
  40f6b6:	mov    DWORD PTR [rbp-0x4],ecx
  40f6b9:	jmp    40f727 <test_union_vector@@Base+0x5e7>
  40f6be:	mov    rdi,QWORD PTR [rbp-0x18]
  40f6c2:	mov    esi,0x2
  40f6c7:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40f6cc:	mov    QWORD PTR [rbp-0x20],rax
  40f6d0:	cmp    rax,0x0
  40f6d4:	jne    40f6e6 <test_union_vector@@Base+0x5a6>
  40f6da:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40f6e1:	jmp    40f727 <test_union_vector@@Base+0x5e7>
  40f6e6:	mov    eax,DWORD PTR [rbp-0x10]
  40f6e9:	mov    rcx,QWORD PTR [rbp-0x20]
  40f6ed:	mov    DWORD PTR [rcx],eax
  40f6ef:	mov    rdi,QWORD PTR [rbp-0x18]
  40f6f3:	mov    esi,0x3
  40f6f8:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  40f6fd:	mov    QWORD PTR [rbp-0x20],rax
  40f701:	cmp    rax,0x0
  40f705:	jne    40f717 <test_union_vector@@Base+0x5d7>
  40f70b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40f712:	jmp    40f727 <test_union_vector@@Base+0x5e7>
  40f717:	mov    eax,DWORD PTR [rbp-0xc]
  40f71a:	mov    rcx,QWORD PTR [rbp-0x20]
  40f71e:	mov    DWORD PTR [rcx],eax
  40f720:	mov    DWORD PTR [rbp-0x4],0x0
  40f727:	mov    eax,DWORD PTR [rbp-0x4]
  40f72a:	add    rsp,0x20
  40f72e:	pop    rbp
  40f72f:	ret    
  40f730:	push   rbp
  40f731:	mov    rbp,rsp
  40f734:	sub    rsp,0x10
  40f738:	mov    QWORD PTR [rbp-0x8],rdi
  40f73c:	mov    rdi,QWORD PTR [rbp-0x8]
  40f740:	call   417a60 <main@@Base+0x3d30>
  40f745:	mov    DWORD PTR [rbp-0xc],eax
  40f748:	cmp    DWORD PTR [rbp-0xc],0x0
  40f74c:	je     40f766 <test_union_vector@@Base+0x626>
  40f752:	mov    rdi,QWORD PTR [rbp-0x8]
  40f756:	mov    esi,DWORD PTR [rbp-0xc]
  40f759:	call   417ac0 <main@@Base+0x3d90>
  40f75e:	mov    DWORD PTR [rbp-0x10],eax
  40f761:	jmp    40f773 <test_union_vector@@Base+0x633>
  40f766:	mov    eax,0xffffffff
  40f76b:	mov    DWORD PTR [rbp-0x10],eax
  40f76e:	jmp    40f773 <test_union_vector@@Base+0x633>
  40f773:	mov    eax,DWORD PTR [rbp-0x10]
  40f776:	add    rsp,0x10
  40f77a:	pop    rbp
  40f77b:	ret    
  40f77c:	nop    DWORD PTR [rax+0x0]
  40f780:	push   rbp
  40f781:	mov    rbp,rsp
  40f784:	sub    rsp,0x20
  40f788:	mov    QWORD PTR [rbp-0x8],rdi
  40f78c:	mov    WORD PTR [rbp-0xa],0x0
  40f792:	cmp    QWORD PTR [rbp-0x8],0x0
  40f797:	je     40f7b1 <test_union_vector@@Base+0x671>
  40f79d:	mov    al,0x1
  40f79f:	test   al,0x1
  40f7a1:	jne    40f7ac <test_union_vector@@Base+0x66c>
  40f7a7:	jmp    40f7b1 <test_union_vector@@Base+0x671>
  40f7ac:	jmp    40f7d0 <test_union_vector@@Base+0x690>
  40f7b1:	lea    rdi,[rip+0x152e0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40f7b8:	lea    rsi,[rip+0x152ff]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40f7bf:	mov    edx,0x26d
  40f7c4:	lea    rcx,[rip+0x16813]        # 425fde <_IO_stdin_used@@Base+0x3fde>
  40f7cb:	call   404090 <__assert_fail@plt>
  40f7d0:	mov    WORD PTR [rbp-0xc],0x3
  40f7d6:	mov    rax,QWORD PTR [rbp-0x8]
  40f7da:	mov    rcx,QWORD PTR [rbp-0x8]
  40f7de:	mov    rdi,rcx
  40f7e1:	mov    QWORD PTR [rbp-0x20],rax
  40f7e5:	call   414210 <main@@Base+0x4e0>
  40f7ea:	xor    edx,edx
  40f7ec:	mov    ecx,edx
  40f7ee:	movsxd rsi,eax
  40f7f1:	sub    rcx,rsi
  40f7f4:	mov    rsi,QWORD PTR [rbp-0x20]
  40f7f8:	add    rsi,rcx
  40f7fb:	mov    QWORD PTR [rbp-0x18],rsi
  40f7ff:	mov    rcx,QWORD PTR [rbp-0x18]
  40f803:	mov    rdi,rcx
  40f806:	call   414230 <main@@Base+0x500>
  40f80b:	movzx  edx,ax
  40f80e:	mov    ecx,edx
  40f810:	movzx  edx,WORD PTR [rbp-0xc]
  40f814:	add    edx,0x3
  40f817:	movsxd rsi,edx
  40f81a:	shl    rsi,0x1
  40f81e:	cmp    rcx,rsi
  40f821:	jb     40f84b <test_union_vector@@Base+0x70b>
  40f827:	mov    rax,QWORD PTR [rbp-0x18]
  40f82b:	movzx  ecx,WORD PTR [rbp-0xc]
  40f82f:	movsxd rdx,ecx
  40f832:	shl    rdx,0x1
  40f836:	add    rax,rdx
  40f839:	add    rax,0x4
  40f83f:	mov    rdi,rax
  40f842:	call   414230 <main@@Base+0x500>
  40f847:	mov    WORD PTR [rbp-0xa],ax
  40f84b:	movzx  eax,WORD PTR [rbp-0xa]
  40f84f:	cmp    eax,0x0
  40f852:	setne  cl
  40f855:	and    cl,0x1
  40f858:	movzx  eax,cl
  40f85b:	add    rsp,0x20
  40f85f:	pop    rbp
  40f860:	ret    
  40f861:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f86b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f870:	push   rbp
  40f871:	mov    rbp,rsp
  40f874:	sub    rsp,0x40
  40f878:	mov    QWORD PTR [rbp-0x10],rdi
  40f87c:	mov    WORD PTR [rbp-0x1a],0x0
  40f882:	cmp    QWORD PTR [rbp-0x10],0x0
  40f887:	je     40f8a1 <test_union_vector@@Base+0x761>
  40f88d:	mov    al,0x1
  40f88f:	test   al,0x1
  40f891:	jne    40f89c <test_union_vector@@Base+0x75c>
  40f897:	jmp    40f8a1 <test_union_vector@@Base+0x761>
  40f89c:	jmp    40f8c0 <test_union_vector@@Base+0x780>
  40f8a1:	lea    rdi,[rip+0x151f0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40f8a8:	lea    rsi,[rip+0x1520f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40f8af:	mov    edx,0x26d
  40f8b4:	lea    rcx,[rip+0x16769]        # 426024 <_IO_stdin_used@@Base+0x4024>
  40f8bb:	call   404090 <__assert_fail@plt>
  40f8c0:	mov    WORD PTR [rbp-0x1c],0x2
  40f8c6:	mov    rax,QWORD PTR [rbp-0x10]
  40f8ca:	mov    rcx,QWORD PTR [rbp-0x10]
  40f8ce:	mov    rdi,rcx
  40f8d1:	mov    QWORD PTR [rbp-0x30],rax
  40f8d5:	call   414210 <main@@Base+0x4e0>
  40f8da:	xor    edx,edx
  40f8dc:	mov    ecx,edx
  40f8de:	movsxd rsi,eax
  40f8e1:	sub    rcx,rsi
  40f8e4:	mov    rsi,QWORD PTR [rbp-0x30]
  40f8e8:	add    rsi,rcx
  40f8eb:	mov    QWORD PTR [rbp-0x28],rsi
  40f8ef:	mov    rcx,QWORD PTR [rbp-0x28]
  40f8f3:	mov    rdi,rcx
  40f8f6:	call   414230 <main@@Base+0x500>
  40f8fb:	movzx  edx,ax
  40f8fe:	mov    ecx,edx
  40f900:	movzx  edx,WORD PTR [rbp-0x1c]
  40f904:	add    edx,0x3
  40f907:	movsxd rsi,edx
  40f90a:	shl    rsi,0x1
  40f90e:	cmp    rcx,rsi
  40f911:	jb     40f93b <test_union_vector@@Base+0x7fb>
  40f917:	mov    rax,QWORD PTR [rbp-0x28]
  40f91b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40f91f:	movsxd rdx,ecx
  40f922:	shl    rdx,0x1
  40f926:	add    rax,rdx
  40f929:	add    rax,0x4
  40f92f:	mov    rdi,rax
  40f932:	call   414230 <main@@Base+0x500>
  40f937:	mov    WORD PTR [rbp-0x1a],ax
  40f93b:	cmp    WORD PTR [rbp-0x1a],0x0
  40f940:	je     40f986 <test_union_vector@@Base+0x846>
  40f946:	mov    rax,QWORD PTR [rbp-0x10]
  40f94a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40f94e:	movsxd rdx,ecx
  40f951:	add    rax,rdx
  40f954:	mov    QWORD PTR [rbp-0x18],rax
  40f958:	mov    rax,QWORD PTR [rbp-0x18]
  40f95c:	add    rax,0x4
  40f962:	mov    rdx,QWORD PTR [rbp-0x18]
  40f966:	mov    rdi,rdx
  40f969:	mov    QWORD PTR [rbp-0x38],rax
  40f96d:	call   4141e0 <main@@Base+0x4b0>
  40f972:	mov    eax,eax
  40f974:	mov    edx,eax
  40f976:	mov    rsi,QWORD PTR [rbp-0x38]
  40f97a:	add    rsi,rdx
  40f97d:	mov    QWORD PTR [rbp-0x8],rsi
  40f981:	jmp    40f98e <test_union_vector@@Base+0x84e>
  40f986:	mov    QWORD PTR [rbp-0x8],0x0
  40f98e:	mov    rax,QWORD PTR [rbp-0x8]
  40f992:	add    rsp,0x40
  40f996:	pop    rbp
  40f997:	ret    
  40f998:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9a0:	push   rbp
  40f9a1:	mov    rbp,rsp
  40f9a4:	sub    rsp,0x40
  40f9a8:	mov    QWORD PTR [rbp-0x10],rdi
  40f9ac:	mov    WORD PTR [rbp-0x1a],0x0
  40f9b2:	cmp    QWORD PTR [rbp-0x10],0x0
  40f9b7:	je     40f9d1 <test_union_vector@@Base+0x891>
  40f9bd:	mov    al,0x1
  40f9bf:	test   al,0x1
  40f9c1:	jne    40f9cc <test_union_vector@@Base+0x88c>
  40f9c7:	jmp    40f9d1 <test_union_vector@@Base+0x891>
  40f9cc:	jmp    40f9f0 <test_union_vector@@Base+0x8b0>
  40f9d1:	lea    rdi,[rip+0x150c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40f9d8:	lea    rsi,[rip+0x150df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40f9df:	mov    edx,0x26d
  40f9e4:	lea    rcx,[rip+0x1668e]        # 426079 <_IO_stdin_used@@Base+0x4079>
  40f9eb:	call   404090 <__assert_fail@plt>
  40f9f0:	mov    WORD PTR [rbp-0x1c],0x3
  40f9f6:	mov    rax,QWORD PTR [rbp-0x10]
  40f9fa:	mov    rcx,QWORD PTR [rbp-0x10]
  40f9fe:	mov    rdi,rcx
  40fa01:	mov    QWORD PTR [rbp-0x30],rax
  40fa05:	call   414210 <main@@Base+0x4e0>
  40fa0a:	xor    edx,edx
  40fa0c:	mov    ecx,edx
  40fa0e:	movsxd rsi,eax
  40fa11:	sub    rcx,rsi
  40fa14:	mov    rsi,QWORD PTR [rbp-0x30]
  40fa18:	add    rsi,rcx
  40fa1b:	mov    QWORD PTR [rbp-0x28],rsi
  40fa1f:	mov    rcx,QWORD PTR [rbp-0x28]
  40fa23:	mov    rdi,rcx
  40fa26:	call   414230 <main@@Base+0x500>
  40fa2b:	movzx  edx,ax
  40fa2e:	mov    ecx,edx
  40fa30:	movzx  edx,WORD PTR [rbp-0x1c]
  40fa34:	add    edx,0x3
  40fa37:	movsxd rsi,edx
  40fa3a:	shl    rsi,0x1
  40fa3e:	cmp    rcx,rsi
  40fa41:	jb     40fa6b <test_union_vector@@Base+0x92b>
  40fa47:	mov    rax,QWORD PTR [rbp-0x28]
  40fa4b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40fa4f:	movsxd rdx,ecx
  40fa52:	shl    rdx,0x1
  40fa56:	add    rax,rdx
  40fa59:	add    rax,0x4
  40fa5f:	mov    rdi,rax
  40fa62:	call   414230 <main@@Base+0x500>
  40fa67:	mov    WORD PTR [rbp-0x1a],ax
  40fa6b:	cmp    WORD PTR [rbp-0x1a],0x0
  40fa70:	je     40fab6 <test_union_vector@@Base+0x976>
  40fa76:	mov    rax,QWORD PTR [rbp-0x10]
  40fa7a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40fa7e:	movsxd rdx,ecx
  40fa81:	add    rax,rdx
  40fa84:	mov    QWORD PTR [rbp-0x18],rax
  40fa88:	mov    rax,QWORD PTR [rbp-0x18]
  40fa8c:	add    rax,0x4
  40fa92:	mov    rdx,QWORD PTR [rbp-0x18]
  40fa96:	mov    rdi,rdx
  40fa99:	mov    QWORD PTR [rbp-0x38],rax
  40fa9d:	call   4141e0 <main@@Base+0x4b0>
  40faa2:	mov    eax,eax
  40faa4:	mov    edx,eax
  40faa6:	mov    rsi,QWORD PTR [rbp-0x38]
  40faaa:	add    rsi,rdx
  40faad:	mov    QWORD PTR [rbp-0x8],rsi
  40fab1:	jmp    40fabe <test_union_vector@@Base+0x97e>
  40fab6:	mov    QWORD PTR [rbp-0x8],0x0
  40fabe:	mov    rax,QWORD PTR [rbp-0x8]
  40fac2:	add    rsp,0x40
  40fac6:	pop    rbp
  40fac7:	ret    
  40fac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fad0:	push   rbp
  40fad1:	mov    rbp,rsp
  40fad4:	sub    rsp,0x10
  40fad8:	mov    QWORD PTR [rbp-0x8],rdi
  40fadc:	mov    rdi,QWORD PTR [rbp-0x8]
  40fae0:	call   416550 <main@@Base+0x2820>
  40fae5:	add    rsp,0x10
  40fae9:	pop    rbp
  40faea:	ret    
  40faeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40faf0:	push   rbp
  40faf1:	mov    rbp,rsp
  40faf4:	sub    rsp,0x10
  40faf8:	mov    QWORD PTR [rbp-0x8],rdi
  40fafc:	mov    QWORD PTR [rbp-0x10],rsi
  40fb00:	mov    rdi,QWORD PTR [rbp-0x8]
  40fb04:	call   416550 <main@@Base+0x2820>
  40fb09:	cmp    rax,QWORD PTR [rbp-0x10]
  40fb0d:	jbe    40fb27 <test_union_vector@@Base+0x9e7>
  40fb13:	mov    al,0x1
  40fb15:	test   al,0x1
  40fb17:	jne    40fb22 <test_union_vector@@Base+0x9e2>
  40fb1d:	jmp    40fb27 <test_union_vector@@Base+0x9e7>
  40fb22:	jmp    40fb46 <test_union_vector@@Base+0xa06>
  40fb27:	lea    rdi,[rip+0x1598b]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  40fb2e:	lea    rsi,[rip+0x159bb]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  40fb35:	mov    edx,0x195
  40fb3a:	lea    rcx,[rip+0x16589]        # 4260ca <_IO_stdin_used@@Base+0x40ca>
  40fb41:	call   404090 <__assert_fail@plt>
  40fb46:	mov    rax,QWORD PTR [rbp-0x8]
  40fb4a:	add    rax,QWORD PTR [rbp-0x10]
  40fb4e:	mov    rdi,rax
  40fb51:	call   417b20 <main@@Base+0x3df0>
  40fb56:	movzx  eax,al
  40fb59:	add    rsp,0x10
  40fb5d:	pop    rbp
  40fb5e:	ret    
  40fb5f:	nop
  40fb60:	push   rbp
  40fb61:	mov    rbp,rsp
  40fb64:	sub    rsp,0x20
  40fb68:	mov    QWORD PTR [rbp-0x8],rdi
  40fb6c:	mov    QWORD PTR [rbp-0x10],rsi
  40fb70:	mov    rax,QWORD PTR [rbp-0x8]
  40fb74:	mov    rcx,QWORD PTR [rbp-0x10]
  40fb78:	shl    rcx,0x2
  40fb7c:	add    rax,rcx
  40fb7f:	mov    QWORD PTR [rbp-0x18],rax
  40fb83:	mov    rax,QWORD PTR [rbp-0x8]
  40fb87:	mov    rdi,rax
  40fb8a:	call   416550 <main@@Base+0x2820>
  40fb8f:	cmp    rax,QWORD PTR [rbp-0x10]
  40fb93:	jbe    40fbad <test_union_vector@@Base+0xa6d>
  40fb99:	mov    al,0x1
  40fb9b:	test   al,0x1
  40fb9d:	jne    40fba8 <test_union_vector@@Base+0xa68>
  40fba3:	jmp    40fbad <test_union_vector@@Base+0xa6d>
  40fba8:	jmp    40fbcc <test_union_vector@@Base+0xa8c>
  40fbad:	lea    rdi,[rip+0x15905]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  40fbb4:	lea    rsi,[rip+0x15935]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  40fbbb:	mov    edx,0x75
  40fbc0:	lea    rcx,[rip+0x16560]        # 426127 <_IO_stdin_used@@Base+0x4127>
  40fbc7:	call   404090 <__assert_fail@plt>
  40fbcc:	mov    rax,QWORD PTR [rbp-0x18]
  40fbd0:	mov    rcx,QWORD PTR [rbp-0x18]
  40fbd4:	mov    rdi,rcx
  40fbd7:	mov    QWORD PTR [rbp-0x20],rax
  40fbdb:	call   4141e0 <main@@Base+0x4b0>
  40fbe0:	mov    eax,eax
  40fbe2:	mov    ecx,eax
  40fbe4:	mov    rdx,QWORD PTR [rbp-0x20]
  40fbe8:	add    rdx,rcx
  40fbeb:	mov    rax,rdx
  40fbee:	add    rsp,0x20
  40fbf2:	pop    rbp
  40fbf3:	ret    
  40fbf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fbfe:	xchg   ax,ax
  40fc00:	push   rbp
  40fc01:	mov    rbp,rsp
  40fc04:	sub    rsp,0x30
  40fc08:	mov    QWORD PTR [rbp-0x8],rdi
  40fc0c:	mov    WORD PTR [rbp-0xa],0x0
  40fc12:	cmp    QWORD PTR [rbp-0x8],0x0
  40fc17:	je     40fc31 <test_union_vector@@Base+0xaf1>
  40fc1d:	mov    al,0x1
  40fc1f:	test   al,0x1
  40fc21:	jne    40fc2c <test_union_vector@@Base+0xaec>
  40fc27:	jmp    40fc31 <test_union_vector@@Base+0xaf1>
  40fc2c:	jmp    40fc50 <test_union_vector@@Base+0xb10>
  40fc31:	lea    rdi,[rip+0x14e60]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  40fc38:	lea    rsi,[rip+0x14e7f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40fc3f:	mov    edx,0x243
  40fc44:	lea    rcx,[rip+0x16530]        # 42617b <_IO_stdin_used@@Base+0x417b>
  40fc4b:	call   404090 <__assert_fail@plt>
  40fc50:	mov    WORD PTR [rbp-0xc],0x0
  40fc56:	mov    rax,QWORD PTR [rbp-0x8]
  40fc5a:	mov    rcx,QWORD PTR [rbp-0x8]
  40fc5e:	mov    rdi,rcx
  40fc61:	mov    QWORD PTR [rbp-0x20],rax
  40fc65:	call   414210 <main@@Base+0x4e0>
  40fc6a:	xor    edx,edx
  40fc6c:	mov    ecx,edx
  40fc6e:	movsxd rsi,eax
  40fc71:	sub    rcx,rsi
  40fc74:	mov    rsi,QWORD PTR [rbp-0x20]
  40fc78:	add    rsi,rcx
  40fc7b:	mov    QWORD PTR [rbp-0x18],rsi
  40fc7f:	mov    rcx,QWORD PTR [rbp-0x18]
  40fc83:	mov    rdi,rcx
  40fc86:	call   414230 <main@@Base+0x500>
  40fc8b:	movzx  edx,ax
  40fc8e:	mov    ecx,edx
  40fc90:	movzx  edx,WORD PTR [rbp-0xc]
  40fc94:	add    edx,0x3
  40fc97:	movsxd rsi,edx
  40fc9a:	shl    rsi,0x1
  40fc9e:	cmp    rcx,rsi
  40fca1:	jb     40fccb <test_union_vector@@Base+0xb8b>
  40fca7:	mov    rax,QWORD PTR [rbp-0x18]
  40fcab:	movzx  ecx,WORD PTR [rbp-0xc]
  40fcaf:	movsxd rdx,ecx
  40fcb2:	shl    rdx,0x1
  40fcb6:	add    rax,rdx
  40fcb9:	add    rax,0x4
  40fcbf:	mov    rdi,rax
  40fcc2:	call   414230 <main@@Base+0x500>
  40fcc7:	mov    WORD PTR [rbp-0xa],ax
  40fccb:	movzx  eax,WORD PTR [rbp-0xa]
  40fccf:	cmp    eax,0x0
  40fcd2:	je     40fcf9 <test_union_vector@@Base+0xbb9>
  40fcd8:	mov    rax,QWORD PTR [rbp-0x8]
  40fcdc:	movzx  ecx,WORD PTR [rbp-0xa]
  40fce0:	movsxd rdx,ecx
  40fce3:	add    rax,rdx
  40fce6:	mov    rdi,rax
  40fce9:	call   416510 <main@@Base+0x27e0>
  40fcee:	movsx  ecx,al
  40fcf1:	mov    DWORD PTR [rbp-0x24],ecx
  40fcf4:	jmp    40fd06 <test_union_vector@@Base+0xbc6>
  40fcf9:	mov    eax,0x2
  40fcfe:	mov    DWORD PTR [rbp-0x24],eax
  40fd01:	jmp    40fd06 <test_union_vector@@Base+0xbc6>
  40fd06:	mov    eax,DWORD PTR [rbp-0x24]
  40fd09:	movsx  eax,al
  40fd0c:	add    rsp,0x30
  40fd10:	pop    rbp
  40fd11:	ret    
  40fd12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd1c:	nop    DWORD PTR [rax+0x0]
  40fd20:	push   rbp
  40fd21:	mov    rbp,rsp
  40fd24:	sub    rsp,0x20
  40fd28:	mov    QWORD PTR [rbp-0x18],rdi
  40fd2c:	mov    rdi,QWORD PTR [rbp-0x18]
  40fd30:	call   40f870 <test_union_vector@@Base+0x730>
  40fd35:	mov    QWORD PTR [rbp-0x10],rax
  40fd39:	mov    rdi,QWORD PTR [rbp-0x18]
  40fd3d:	call   40f9a0 <test_union_vector@@Base+0x860>
  40fd42:	mov    QWORD PTR [rbp-0x8],rax
  40fd46:	mov    rdi,QWORD PTR [rbp-0x10]
  40fd4a:	call   416550 <main@@Base+0x2820>
  40fd4f:	mov    rcx,QWORD PTR [rbp-0x8]
  40fd53:	mov    rdi,rcx
  40fd56:	mov    QWORD PTR [rbp-0x20],rax
  40fd5a:	call   416550 <main@@Base+0x2820>
  40fd5f:	mov    rcx,QWORD PTR [rbp-0x20]
  40fd63:	cmp    rcx,rax
  40fd66:	jne    40fd80 <test_union_vector@@Base+0xc40>
  40fd6c:	mov    al,0x1
  40fd6e:	test   al,0x1
  40fd70:	jne    40fd7b <test_union_vector@@Base+0xc3b>
  40fd76:	jmp    40fd80 <test_union_vector@@Base+0xc40>
  40fd7b:	jmp    40fd9f <test_union_vector@@Base+0xc5f>
  40fd80:	lea    rdi,[rip+0x1648f]        # 426216 <_IO_stdin_used@@Base+0x4216>
  40fd87:	lea    rsi,[rip+0x14d30]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40fd8e:	mov    edx,0x26d
  40fd93:	lea    rcx,[rip+0x164e1]        # 42627b <_IO_stdin_used@@Base+0x427b>
  40fd9a:	call   404090 <__assert_fail@plt>
  40fd9f:	mov    rax,QWORD PTR [rbp-0x10]
  40fda3:	mov    rdx,QWORD PTR [rbp-0x8]
  40fda7:	add    rsp,0x20
  40fdab:	pop    rbp
  40fdac:	ret    
  40fdad:	nop    DWORD PTR [rax]
  40fdb0:	push   rbp
  40fdb1:	mov    rbp,rsp
  40fdb4:	sub    rsp,0x10
  40fdb8:	mov    QWORD PTR [rbp-0x10],rdi
  40fdbc:	mov    QWORD PTR [rbp-0x8],rsi
  40fdc0:	mov    rdi,QWORD PTR [rbp-0x10]
  40fdc4:	call   416550 <main@@Base+0x2820>
  40fdc9:	add    rsp,0x10
  40fdcd:	pop    rbp
  40fdce:	ret    
  40fdcf:	nop
  40fdd0:	push   rbp
  40fdd1:	mov    rbp,rsp
  40fdd4:	sub    rsp,0x30
  40fdd8:	xor    eax,eax
  40fdda:	mov    QWORD PTR [rbp-0x20],rdi
  40fdde:	mov    QWORD PTR [rbp-0x18],rsi
  40fde2:	mov    QWORD PTR [rbp-0x28],rdx
  40fde6:	lea    rcx,[rbp-0x10]
  40fdea:	mov    rdi,rcx
  40fded:	mov    esi,eax
  40fdef:	mov    edx,0x10
  40fdf4:	call   4040a0 <memset@plt>
  40fdf9:	mov    rdi,QWORD PTR [rbp-0x20]
  40fdfd:	call   416550 <main@@Base+0x2820>
  40fe02:	mov    QWORD PTR [rbp-0x30],rax
  40fe06:	mov    rax,QWORD PTR [rbp-0x30]
  40fe0a:	cmp    rax,QWORD PTR [rbp-0x28]
  40fe0e:	jbe    40fe28 <test_union_vector@@Base+0xce8>
  40fe14:	mov    al,0x1
  40fe16:	test   al,0x1
  40fe18:	jne    40fe23 <test_union_vector@@Base+0xce3>
  40fe1e:	jmp    40fe28 <test_union_vector@@Base+0xce8>
  40fe23:	jmp    40fe47 <test_union_vector@@Base+0xd07>
  40fe28:	lea    rdi,[rip+0x164a8]        # 4262d7 <_IO_stdin_used@@Base+0x42d7>
  40fe2f:	lea    rsi,[rip+0x14c88]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  40fe36:	mov    edx,0x208
  40fe3b:	lea    rcx,[rip+0x164b5]        # 4262f7 <_IO_stdin_used@@Base+0x42f7>
  40fe42:	call   404090 <__assert_fail@plt>
  40fe47:	mov    rax,QWORD PTR [rbp-0x20]
  40fe4b:	mov    rcx,QWORD PTR [rbp-0x28]
  40fe4f:	mov    dl,BYTE PTR [rax+rcx*1]
  40fe52:	mov    BYTE PTR [rbp-0x10],dl
  40fe55:	movzx  esi,BYTE PTR [rbp-0x10]
  40fe59:	cmp    esi,0x0
  40fe5c:	jne    40fe67 <test_union_vector@@Base+0xd27>
  40fe62:	jmp    40fe78 <test_union_vector@@Base+0xd38>
  40fe67:	mov    rdi,QWORD PTR [rbp-0x18]
  40fe6b:	mov    rsi,QWORD PTR [rbp-0x28]
  40fe6f:	call   40fb60 <test_union_vector@@Base+0xa20>
  40fe74:	mov    QWORD PTR [rbp-0x8],rax
  40fe78:	mov    al,BYTE PTR [rbp-0x10]
  40fe7b:	mov    rdx,QWORD PTR [rbp-0x8]
  40fe7f:	add    rsp,0x30
  40fe83:	pop    rbp
  40fe84:	ret    
  40fe85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe8f:	nop

000000000040fe90 <test_mixed_type_union@@Base>:
  40fe90:	push   rbp
  40fe91:	mov    rbp,rsp
  40fe94:	sub    rsp,0x210
  40fe9b:	mov    QWORD PTR [rbp-0x10],rdi
  40fe9f:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  40fea6:	mov    rdi,QWORD PTR [rbp-0x10]
  40feaa:	call   418ef0 <flatcc_builder_reset@@Base>
  40feaf:	mov    rdi,QWORD PTR [rbp-0x10]
  40feb3:	mov    DWORD PTR [rbp-0x174],eax
  40feb9:	call   4109f0 <test_mixed_type_union@@Base+0xb60>
  40febe:	mov    rdi,QWORD PTR [rbp-0x10]
  40fec2:	mov    esi,0xa
  40fec7:	mov    DWORD PTR [rbp-0x178],eax
  40fecd:	call   410a40 <test_mixed_type_union@@Base+0xbb0>
  40fed2:	mov    DWORD PTR [rbp-0x44],eax
  40fed5:	mov    rdi,QWORD PTR [rbp-0x10]
  40fed9:	mov    esi,0x16
  40fede:	call   410aa0 <test_mixed_type_union@@Base+0xc10>
  40fee3:	mov    DWORD PTR [rbp-0x3c],eax
  40fee6:	mov    edi,DWORD PTR [rbp-0x3c]
  40fee9:	call   410b00 <test_mixed_type_union@@Base+0xc70>
  40feee:	mov    QWORD PTR [rbp-0x98],rax
  40fef5:	mov    rax,QWORD PTR [rbp-0x98]
  40fefc:	mov    QWORD PTR [rbp-0x38],rax
  40ff00:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff04:	mov    esi,0x13
  40ff09:	call   410b20 <test_mixed_type_union@@Base+0xc90>
  40ff0e:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff12:	mov    esi,DWORD PTR [rbp-0x3c]
  40ff15:	mov    DWORD PTR [rbp-0x17c],eax
  40ff1b:	call   410b90 <test_mixed_type_union@@Base+0xd00>
  40ff20:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff24:	mov    esi,0x2a
  40ff29:	mov    DWORD PTR [rbp-0x180],eax
  40ff2f:	call   410bd0 <test_mixed_type_union@@Base+0xd40>
  40ff34:	mov    DWORD PTR [rbp-0x40],eax
  40ff37:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff3b:	mov    esi,DWORD PTR [rbp-0x40]
  40ff3e:	call   410c30 <test_mixed_type_union@@Base+0xda0>
  40ff43:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff47:	lea    rsi,[rip+0x1408c]        # 423fda <_IO_stdin_used@@Base+0x1fda>
  40ff4e:	mov    DWORD PTR [rbp-0x184],eax
  40ff54:	call   410c70 <test_mixed_type_union@@Base+0xde0>
  40ff59:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff5d:	mov    DWORD PTR [rbp-0x188],eax
  40ff63:	call   410cb0 <test_mixed_type_union@@Base+0xe20>
  40ff68:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff6c:	mov    rsi,QWORD PTR [rbp-0x38]
  40ff70:	mov    DWORD PTR [rbp-0x18c],eax
  40ff76:	call   410cd0 <test_mixed_type_union@@Base+0xe40>
  40ff7b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff7f:	mov    esi,DWORD PTR [rbp-0x40]
  40ff82:	mov    QWORD PTR [rbp-0x198],rax
  40ff89:	call   410d00 <test_mixed_type_union@@Base+0xe70>
  40ff8e:	mov    rdi,QWORD PTR [rbp-0x10]
  40ff92:	mov    esi,0x1
  40ff97:	mov    QWORD PTR [rbp-0x1a0],rax
  40ff9e:	call   410d40 <test_mixed_type_union@@Base+0xeb0>
  40ffa3:	mov    rdi,QWORD PTR [rbp-0x10]
  40ffa7:	mov    rcx,QWORD PTR [rbp-0x10]
  40ffab:	mov    QWORD PTR [rbp-0x1a8],rdi
  40ffb2:	mov    rdi,rcx
  40ffb5:	lea    rsi,[rip+0x14029]        # 423fe5 <_IO_stdin_used@@Base+0x1fe5>
  40ffbc:	mov    QWORD PTR [rbp-0x1b0],rax
  40ffc3:	call   40a790 <gen_monster@@Base+0xe20>
  40ffc8:	mov    edi,eax
  40ffca:	call   410dc0 <test_mixed_type_union@@Base+0xf30>
  40ffcf:	mov    QWORD PTR [rbp-0xa0],rax
  40ffd6:	mov    rsi,QWORD PTR [rbp-0xa0]
  40ffdd:	mov    rdi,QWORD PTR [rbp-0x1a8]
  40ffe4:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  40ffe9:	mov    rdi,QWORD PTR [rbp-0x10]
  40ffed:	mov    esi,DWORD PTR [rbp-0x44]
  40fff0:	mov    QWORD PTR [rbp-0x1b8],rax
  40fff7:	call   410de0 <test_mixed_type_union@@Base+0xf50>
  40fffc:	mov    rdi,QWORD PTR [rbp-0x10]
  410000:	mov    QWORD PTR [rbp-0x1c0],rax
  410007:	call   410e20 <test_mixed_type_union@@Base+0xf90>
  41000c:	mov    QWORD PTR [rbp-0x50],rax
  410010:	mov    rax,QWORD PTR [rbp-0x50]
  410014:	mov    DWORD PTR [rax],0x3
  41001a:	mov    rdi,QWORD PTR [rbp-0x10]
  41001e:	call   410e40 <test_mixed_type_union@@Base+0xfb0>
  410023:	mov    rdi,QWORD PTR [rbp-0x10]
  410027:	mov    rcx,QWORD PTR [rbp-0x10]
  41002b:	mov    QWORD PTR [rbp-0x1c8],rdi
  410032:	mov    rdi,rcx
  410035:	mov    esi,0x1
  41003a:	mov    QWORD PTR [rbp-0x1d0],rax
  410041:	call   410a40 <test_mixed_type_union@@Base+0xbb0>
  410046:	mov    rdi,QWORD PTR [rbp-0x1c8]
  41004d:	mov    esi,eax
  41004f:	call   410de0 <test_mixed_type_union@@Base+0xf50>
  410054:	mov    rdi,QWORD PTR [rbp-0x10]
  410058:	mov    esi,0x2
  41005d:	mov    QWORD PTR [rbp-0x1d8],rax
  410064:	call   410e80 <test_mixed_type_union@@Base+0xff0>
  410069:	mov    rdi,QWORD PTR [rbp-0x10]
  41006d:	mov    rcx,QWORD PTR [rbp-0x10]
  410071:	mov    QWORD PTR [rbp-0x1e0],rdi
  410078:	mov    rdi,rcx
  41007b:	lea    rsi,[rip+0x13f61]        # 423fe3 <_IO_stdin_used@@Base+0x1fe3>
  410082:	mov    QWORD PTR [rbp-0x1e8],rax
  410089:	call   40a790 <gen_monster@@Base+0xe20>
  41008e:	mov    rdi,QWORD PTR [rbp-0x1e0]
  410095:	mov    esi,eax
  410097:	call   410ed0 <test_mixed_type_union@@Base+0x1040>
  41009c:	mov    rdi,QWORD PTR [rbp-0x10]
  4100a0:	lea    rsi,[rip+0x13f38]        # 423fdf <_IO_stdin_used@@Base+0x1fdf>
  4100a7:	mov    QWORD PTR [rbp-0x1f0],rax
  4100ae:	call   410f10 <test_mixed_type_union@@Base+0x1080>
  4100b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4100b7:	mov    QWORD PTR [rbp-0x1f8],rax
  4100be:	call   410f60 <test_mixed_type_union@@Base+0x10d0>
  4100c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4100c7:	mov    DWORD PTR [rbp-0x1fc],eax
  4100cd:	call   410fa0 <test_mixed_type_union@@Base+0x1110>
  4100d2:	mov    rdi,QWORD PTR [rbp-0x10]
  4100d6:	lea    rsi,[rbp-0x20]
  4100da:	mov    DWORD PTR [rbp-0x200],eax
  4100e0:	call   41e330 <flatcc_builder_finalize_aligned_buffer@@Base>
  4100e5:	mov    rcx,QWORD PTR [rip+0x20f0c]        # 430ff8 <stderr@GLIBC_2.2.5>
  4100ec:	mov    QWORD PTR [rbp-0x18],rax
  4100f0:	mov    rsi,QWORD PTR [rbp-0x18]
  4100f4:	mov    rdx,QWORD PTR [rbp-0x20]
  4100f8:	mov    rcx,QWORD PTR [rcx]
  4100fb:	lea    rdi,[rip+0x13ee9]        # 423feb <_IO_stdin_used@@Base+0x1feb>
  410102:	call   404d60 <test_type_aliases@@Base+0x470>
  410107:	mov    rdi,QWORD PTR [rbp-0x18]
  41010b:	mov    rsi,QWORD PTR [rbp-0x20]
  41010f:	call   410fe0 <test_mixed_type_union@@Base+0x1150>
  410114:	mov    DWORD PTR [rbp-0x2c],eax
  410117:	cmp    eax,0x0
  41011a:	je     410145 <test_mixed_type_union@@Base+0x2b5>
  410120:	mov    edi,DWORD PTR [rbp-0x2c]
  410123:	call   41f3a0 <flatcc_verify_error_string@@Base>
  410128:	lea    rdi,[rip+0x13ec9]        # 423ff8 <_IO_stdin_used@@Base+0x1ff8>
  41012f:	mov    rsi,rax
  410132:	mov    al,0x0
  410134:	call   404070 <printf@plt>
  410139:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410140:	jmp    4109e4 <test_mixed_type_union@@Base+0xb54>
  410145:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  41014c:	mov    rdi,QWORD PTR [rbp-0x18]
  410150:	call   411020 <test_mixed_type_union@@Base+0x1190>
  410155:	mov    QWORD PTR [rbp-0x58],rax
  410159:	mov    rdi,QWORD PTR [rbp-0x58]
  41015d:	call   411090 <test_mixed_type_union@@Base+0x1200>
  410162:	cmp    eax,0x0
  410165:	jne    41017e <test_mixed_type_union@@Base+0x2ee>
  41016b:	lea    rdi,[rip+0x13ed5]        # 424047 <_IO_stdin_used@@Base+0x2047>
  410172:	mov    al,0x0
  410174:	call   404070 <printf@plt>
  410179:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  41017e:	mov    rdi,QWORD PTR [rbp-0x58]
  410182:	call   411180 <test_mixed_type_union@@Base+0x12f0>
  410187:	cmp    eax,0x0
  41018a:	jne    4101a3 <test_mixed_type_union@@Base+0x313>
  410190:	lea    rdi,[rip+0x13eda]        # 424071 <_IO_stdin_used@@Base+0x2071>
  410197:	mov    al,0x0
  410199:	call   404070 <printf@plt>
  41019e:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4101a3:	mov    rdi,QWORD PTR [rbp-0x58]
  4101a7:	call   411270 <test_mixed_type_union@@Base+0x13e0>
  4101ac:	mov    BYTE PTR [rbp-0xb0],al
  4101b2:	mov    QWORD PTR [rbp-0xa8],rdx
  4101b9:	mov    rcx,QWORD PTR [rbp-0xb0]
  4101c0:	mov    QWORD PTR [rbp-0x78],rcx
  4101c4:	mov    rcx,QWORD PTR [rbp-0xa8]
  4101cb:	mov    QWORD PTR [rbp-0x70],rcx
  4101cf:	movzx  esi,BYTE PTR [rbp-0x78]
  4101d3:	cmp    esi,0x8
  4101d6:	je     4101ef <test_mixed_type_union@@Base+0x35f>
  4101dc:	lea    rdi,[rip+0x13eba]        # 42409d <_IO_stdin_used@@Base+0x209d>
  4101e3:	mov    al,0x0
  4101e5:	call   404070 <printf@plt>
  4101ea:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4101ef:	mov    rax,QWORD PTR [rbp-0x70]
  4101f3:	mov    QWORD PTR [rbp-0x80],rax
  4101f7:	cmp    QWORD PTR [rbp-0x80],0x0
  4101fc:	jne    410210 <test_mixed_type_union@@Base+0x380>
  410202:	lea    rdi,[rip+0x13eb0]        # 4240b9 <_IO_stdin_used@@Base+0x20b9>
  410209:	mov    al,0x0
  41020b:	call   404070 <printf@plt>
  410210:	mov    rdi,QWORD PTR [rbp-0x80]
  410214:	call   4112d0 <test_mixed_type_union@@Base+0x1440>
  410219:	movzx  ecx,ax
  41021c:	cmp    ecx,0x13
  41021f:	jle    410238 <test_mixed_type_union@@Base+0x3a8>
  410225:	lea    rdi,[rip+0x13ea5]        # 4240d1 <_IO_stdin_used@@Base+0x20d1>
  41022c:	mov    al,0x0
  41022e:	call   404070 <printf@plt>
  410233:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410238:	mov    rdi,QWORD PTR [rbp-0x80]
  41023c:	call   4112d0 <test_mixed_type_union@@Base+0x1440>
  410241:	movzx  ecx,ax
  410244:	cmp    ecx,0x13
  410247:	jge    410260 <test_mixed_type_union@@Base+0x3d0>
  41024d:	lea    rdi,[rip+0x13ea5]        # 4240f9 <_IO_stdin_used@@Base+0x20f9>
  410254:	mov    al,0x0
  410256:	call   404070 <printf@plt>
  41025b:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410260:	mov    rdi,QWORD PTR [rbp-0x58]
  410264:	call   411320 <test_mixed_type_union@@Base+0x1490>
  410269:	movzx  ecx,al
  41026c:	cmp    ecx,0x8
  41026f:	je     410288 <test_mixed_type_union@@Base+0x3f8>
  410275:	lea    rdi,[rip+0x13eac]        # 424128 <_IO_stdin_used@@Base+0x2128>
  41027c:	mov    al,0x0
  41027e:	call   404070 <printf@plt>
  410283:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410288:	mov    rdi,QWORD PTR [rbp-0x58]
  41028c:	call   411430 <test_mixed_type_union@@Base+0x15a0>
  410291:	mov    QWORD PTR [rbp-0x80],rax
  410295:	cmp    QWORD PTR [rbp-0x80],0x0
  41029a:	jne    4102b3 <test_mixed_type_union@@Base+0x423>
  4102a0:	lea    rdi,[rip+0x13eb6]        # 42415d <_IO_stdin_used@@Base+0x215d>
  4102a7:	mov    al,0x0
  4102a9:	call   404070 <printf@plt>
  4102ae:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4102b3:	mov    rdi,QWORD PTR [rbp-0x80]
  4102b7:	call   4112d0 <test_mixed_type_union@@Base+0x1440>
  4102bc:	movzx  ecx,ax
  4102bf:	cmp    ecx,0x16
  4102c2:	je     4102db <test_mixed_type_union@@Base+0x44b>
  4102c8:	lea    rdi,[rip+0x13ebe]        # 42418d <_IO_stdin_used@@Base+0x218d>
  4102cf:	mov    al,0x0
  4102d1:	call   404070 <printf@plt>
  4102d6:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4102db:	mov    rdi,QWORD PTR [rbp-0x58]
  4102df:	call   411560 <test_mixed_type_union@@Base+0x16d0>
  4102e4:	movzx  ecx,al
  4102e7:	cmp    ecx,0x2
  4102ea:	je     410303 <test_mixed_type_union@@Base+0x473>
  4102f0:	lea    rdi,[rip+0x13ec6]        # 4241bd <_IO_stdin_used@@Base+0x21bd>
  4102f7:	mov    al,0x0
  4102f9:	call   404070 <printf@plt>
  4102fe:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410303:	mov    rdi,QWORD PTR [rbp-0x58]
  410307:	call   411670 <test_mixed_type_union@@Base+0x17e0>
  41030c:	mov    QWORD PTR [rbp-0x88],rax
  410313:	cmp    QWORD PTR [rbp-0x88],0x0
  41031b:	je     410336 <test_mixed_type_union@@Base+0x4a6>
  410321:	mov    rdi,QWORD PTR [rbp-0x88]
  410328:	call   4117a0 <test_mixed_type_union@@Base+0x1910>
  41032d:	cmp    eax,0x2a
  410330:	je     410349 <test_mixed_type_union@@Base+0x4b9>
  410336:	lea    rdi,[rip+0x13e98]        # 4241d5 <_IO_stdin_used@@Base+0x21d5>
  41033d:	mov    al,0x0
  41033f:	call   404070 <printf@plt>
  410344:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410349:	mov    rdi,QWORD PTR [rbp-0x58]
  41034d:	call   4118b0 <test_mixed_type_union@@Base+0x1a20>
  410352:	movzx  ecx,al
  410355:	cmp    ecx,0xb
  410358:	je     410371 <test_mixed_type_union@@Base+0x4e1>
  41035e:	lea    rdi,[rip+0x13e93]        # 4241f8 <_IO_stdin_used@@Base+0x21f8>
  410365:	mov    al,0x0
  410367:	call   404070 <printf@plt>
  41036c:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410371:	mov    rdi,QWORD PTR [rbp-0x58]
  410375:	call   411a10 <test_mixed_type_union@@Base+0x1b80>
  41037a:	mov    rdi,rax
  41037d:	call   4119c0 <test_mixed_type_union@@Base+0x1b30>
  410382:	mov    QWORD PTR [rbp-0x90],rax
  410389:	cmp    QWORD PTR [rbp-0x90],0x0
  410391:	jne    4103aa <test_mixed_type_union@@Base+0x51a>
  410397:	lea    rdi,[rip+0x13e71]        # 42420f <_IO_stdin_used@@Base+0x220f>
  41039e:	mov    al,0x0
  4103a0:	call   404070 <printf@plt>
  4103a5:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4103aa:	mov    rdi,QWORD PTR [rbp-0x90]
  4103b1:	lea    rsi,[rip+0x13c22]        # 423fda <_IO_stdin_used@@Base+0x1fda>
  4103b8:	call   4040d0 <strcmp@plt>
  4103bd:	cmp    eax,0x0
  4103c0:	je     4103e0 <test_mixed_type_union@@Base+0x550>
  4103c6:	mov    rsi,QWORD PTR [rbp-0x90]
  4103cd:	lea    rdi,[rip+0x13e56]        # 42422a <_IO_stdin_used@@Base+0x222a>
  4103d4:	mov    al,0x0
  4103d6:	call   404070 <printf@plt>
  4103db:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4103e0:	mov    rdi,QWORD PTR [rbp-0x58]
  4103e4:	call   411b40 <test_mixed_type_union@@Base+0x1cb0>
  4103e9:	mov    QWORD PTR [rbp-0x90],rax
  4103f0:	cmp    QWORD PTR [rbp-0x90],0x0
  4103f8:	jne    410411 <test_mixed_type_union@@Base+0x581>
  4103fe:	lea    rdi,[rip+0x13e0a]        # 42420f <_IO_stdin_used@@Base+0x220f>
  410405:	mov    al,0x0
  410407:	call   404070 <printf@plt>
  41040c:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410411:	mov    rdi,QWORD PTR [rbp-0x90]
  410418:	lea    rsi,[rip+0x13bbb]        # 423fda <_IO_stdin_used@@Base+0x1fda>
  41041f:	call   4040d0 <strcmp@plt>
  410424:	cmp    eax,0x0
  410427:	je     410447 <test_mixed_type_union@@Base+0x5b7>
  41042d:	mov    rsi,QWORD PTR [rbp-0x90]
  410434:	lea    rdi,[rip+0x13e13]        # 42424e <_IO_stdin_used@@Base+0x224e>
  41043b:	mov    al,0x0
  41043d:	call   404070 <printf@plt>
  410442:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410447:	mov    rdi,QWORD PTR [rbp-0x58]
  41044b:	call   411b70 <test_mixed_type_union@@Base+0x1ce0>
  410450:	mov    BYTE PTR [rbp-0xc0],al
  410456:	mov    QWORD PTR [rbp-0xb8],rdx
  41045d:	mov    rcx,QWORD PTR [rbp-0xc0]
  410464:	mov    QWORD PTR [rbp-0x78],rcx
  410468:	mov    rcx,QWORD PTR [rbp-0xb8]
  41046f:	mov    QWORD PTR [rbp-0x70],rcx
  410473:	mov    al,BYTE PTR [rbp-0x78]
  410476:	mov    rsi,QWORD PTR [rbp-0x70]
  41047a:	movzx  edi,al
  41047d:	call   411bd0 <test_mixed_type_union@@Base+0x1d40>
  410482:	mov    QWORD PTR [rbp-0x90],rax
  410489:	mov    rdi,QWORD PTR [rbp-0x90]
  410490:	lea    rsi,[rip+0x13b43]        # 423fda <_IO_stdin_used@@Base+0x1fda>
  410497:	call   4040d0 <strcmp@plt>
  41049c:	cmp    eax,0x0
  41049f:	je     4104bf <test_mixed_type_union@@Base+0x62f>
  4104a5:	mov    rsi,QWORD PTR [rbp-0x90]
  4104ac:	lea    rdi,[rip+0x13dc8]        # 42427b <_IO_stdin_used@@Base+0x227b>
  4104b3:	mov    al,0x0
  4104b5:	call   404070 <printf@plt>
  4104ba:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4104bf:	mov    rdi,QWORD PTR [rbp-0x58]
  4104c3:	call   411bf0 <test_mixed_type_union@@Base+0x1d60>
  4104c8:	xor    ecx,ecx
  4104ca:	mov    esi,ecx
  4104cc:	mov    QWORD PTR [rbp-0xd0],rax
  4104d3:	mov    QWORD PTR [rbp-0xc8],rdx
  4104da:	mov    rax,QWORD PTR [rbp-0xd0]
  4104e1:	mov    QWORD PTR [rbp-0x68],rax
  4104e5:	mov    rax,QWORD PTR [rbp-0xc8]
  4104ec:	mov    QWORD PTR [rbp-0x60],rax
  4104f0:	mov    rdi,QWORD PTR [rbp-0x68]
  4104f4:	mov    rax,QWORD PTR [rbp-0x60]
  4104f8:	mov    QWORD PTR [rbp-0x208],rsi
  4104ff:	mov    rsi,rax
  410502:	mov    rdx,QWORD PTR [rbp-0x208]
  410509:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  41050e:	mov    BYTE PTR [rbp-0xe0],al
  410514:	mov    QWORD PTR [rbp-0xd8],rdx
  41051b:	mov    rdx,QWORD PTR [rbp-0xe0]
  410522:	mov    QWORD PTR [rbp-0x78],rdx
  410526:	mov    rdx,QWORD PTR [rbp-0xd8]
  41052d:	mov    QWORD PTR [rbp-0x70],rdx
  410531:	movzx  ecx,BYTE PTR [rbp-0x78]
  410535:	cmp    ecx,0x8
  410538:	je     410551 <test_mixed_type_union@@Base+0x6c1>
  41053e:	lea    rdi,[rip+0x13d63]        # 4242a8 <_IO_stdin_used@@Base+0x22a8>
  410545:	mov    al,0x0
  410547:	call   404070 <printf@plt>
  41054c:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410551:	mov    rdi,QWORD PTR [rbp-0x68]
  410555:	mov    rsi,QWORD PTR [rbp-0x60]
  410559:	mov    edx,0x1
  41055e:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  410563:	mov    BYTE PTR [rbp-0xf0],al
  410569:	mov    QWORD PTR [rbp-0xe8],rdx
  410570:	mov    rcx,QWORD PTR [rbp-0xf0]
  410577:	mov    QWORD PTR [rbp-0x78],rcx
  41057b:	mov    rcx,QWORD PTR [rbp-0xe8]
  410582:	mov    QWORD PTR [rbp-0x70],rcx
  410586:	movzx  r8d,BYTE PTR [rbp-0x78]
  41058b:	cmp    r8d,0x2
  41058f:	je     4105a8 <test_mixed_type_union@@Base+0x718>
  410595:	lea    rdi,[rip+0x13d31]        # 4242cd <_IO_stdin_used@@Base+0x22cd>
  41059c:	mov    al,0x0
  41059e:	call   404070 <printf@plt>
  4105a3:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4105a8:	mov    rax,QWORD PTR [rbp-0x70]
  4105ac:	mov    QWORD PTR [rbp-0x88],rax
  4105b3:	mov    rdi,QWORD PTR [rbp-0x88]
  4105ba:	call   4117a0 <test_mixed_type_union@@Base+0x1910>
  4105bf:	cmp    eax,0x2a
  4105c2:	je     4105db <test_mixed_type_union@@Base+0x74b>
  4105c8:	lea    rdi,[rip+0x13d21]        # 4242f0 <_IO_stdin_used@@Base+0x22f0>
  4105cf:	mov    al,0x0
  4105d1:	call   404070 <printf@plt>
  4105d6:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4105db:	mov    rdi,QWORD PTR [rbp-0x68]
  4105df:	mov    rsi,QWORD PTR [rbp-0x60]
  4105e3:	mov    edx,0x2
  4105e8:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  4105ed:	mov    BYTE PTR [rbp-0x100],al
  4105f3:	mov    QWORD PTR [rbp-0xf8],rdx
  4105fa:	mov    rcx,QWORD PTR [rbp-0x100]
  410601:	mov    QWORD PTR [rbp-0x78],rcx
  410605:	mov    rcx,QWORD PTR [rbp-0xf8]
  41060c:	mov    QWORD PTR [rbp-0x70],rcx
  410610:	movzx  r8d,BYTE PTR [rbp-0x78]
  410615:	cmp    r8d,0x2
  410619:	je     410632 <test_mixed_type_union@@Base+0x7a2>
  41061f:	lea    rdi,[rip+0x13cfc]        # 424322 <_IO_stdin_used@@Base+0x2322>
  410626:	mov    al,0x0
  410628:	call   404070 <printf@plt>
  41062d:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410632:	mov    rax,QWORD PTR [rbp-0x70]
  410636:	mov    QWORD PTR [rbp-0x88],rax
  41063d:	mov    rdi,QWORD PTR [rbp-0x88]
  410644:	call   4117a0 <test_mixed_type_union@@Base+0x1910>
  410649:	cmp    eax,0x1
  41064c:	je     410665 <test_mixed_type_union@@Base+0x7d5>
  410652:	lea    rdi,[rip+0x13ceb]        # 424344 <_IO_stdin_used@@Base+0x2344>
  410659:	mov    al,0x0
  41065b:	call   404070 <printf@plt>
  410660:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410665:	mov    rdi,QWORD PTR [rbp-0x58]
  410669:	call   411d40 <test_mixed_type_union@@Base+0x1eb0>
  41066e:	mov    rdi,rax
  410671:	mov    esi,0x3
  410676:	call   40faf0 <test_union_vector@@Base+0x9b0>
  41067b:	movzx  ecx,al
  41067e:	cmp    ecx,0xb
  410681:	je     41069a <test_mixed_type_union@@Base+0x80a>
  410687:	lea    rdi,[rip+0x13ce7]        # 424375 <_IO_stdin_used@@Base+0x2375>
  41068e:	mov    al,0x0
  410690:	call   404070 <printf@plt>
  410695:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  41069a:	mov    rdi,QWORD PTR [rbp-0x68]
  41069e:	mov    rsi,QWORD PTR [rbp-0x60]
  4106a2:	mov    edx,0x3
  4106a7:	call   411e70 <test_mixed_type_union@@Base+0x1fe0>
  4106ac:	mov    QWORD PTR [rbp-0x90],rax
  4106b3:	cmp    QWORD PTR [rbp-0x90],0x0
  4106bb:	je     4106dd <test_mixed_type_union@@Base+0x84d>
  4106c1:	mov    rdi,QWORD PTR [rbp-0x90]
  4106c8:	lea    rsi,[rip+0x13916]        # 423fe5 <_IO_stdin_used@@Base+0x1fe5>
  4106cf:	call   4040d0 <strcmp@plt>
  4106d4:	cmp    eax,0x0
  4106d7:	je     4106f0 <test_mixed_type_union@@Base+0x860>
  4106dd:	lea    rdi,[rip+0x13cc0]        # 4243a4 <_IO_stdin_used@@Base+0x23a4>
  4106e4:	mov    al,0x0
  4106e6:	call   404070 <printf@plt>
  4106eb:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4106f0:	mov    rdi,QWORD PTR [rbp-0x68]
  4106f4:	mov    rsi,QWORD PTR [rbp-0x60]
  4106f8:	mov    edx,0x3
  4106fd:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  410702:	mov    BYTE PTR [rbp-0x110],al
  410708:	mov    QWORD PTR [rbp-0x108],rdx
  41070f:	mov    rcx,QWORD PTR [rbp-0x110]
  410716:	mov    QWORD PTR [rbp-0x78],rcx
  41071a:	mov    rcx,QWORD PTR [rbp-0x108]
  410721:	mov    QWORD PTR [rbp-0x70],rcx
  410725:	movzx  r8d,BYTE PTR [rbp-0x78]
  41072a:	cmp    r8d,0xb
  41072e:	je     410747 <test_mixed_type_union@@Base+0x8b7>
  410734:	lea    rdi,[rip+0x13c9d]        # 4243d8 <_IO_stdin_used@@Base+0x23d8>
  41073b:	mov    al,0x0
  41073d:	call   404070 <printf@plt>
  410742:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410747:	mov    al,BYTE PTR [rbp-0x78]
  41074a:	mov    rsi,QWORD PTR [rbp-0x70]
  41074e:	movzx  edi,al
  410751:	call   411bd0 <test_mixed_type_union@@Base+0x1d40>
  410756:	mov    QWORD PTR [rbp-0x90],rax
  41075d:	cmp    QWORD PTR [rbp-0x90],0x0
  410765:	je     410787 <test_mixed_type_union@@Base+0x8f7>
  41076b:	mov    rdi,QWORD PTR [rbp-0x90]
  410772:	lea    rsi,[rip+0x1386c]        # 423fe5 <_IO_stdin_used@@Base+0x1fe5>
  410779:	call   4040d0 <strcmp@plt>
  41077e:	cmp    eax,0x0
  410781:	je     41079a <test_mixed_type_union@@Base+0x90a>
  410787:	lea    rdi,[rip+0x13c82]        # 424410 <_IO_stdin_used@@Base+0x2410>
  41078e:	mov    al,0x0
  410790:	call   404070 <printf@plt>
  410795:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  41079a:	mov    rdi,QWORD PTR [rbp-0x68]
  41079e:	mov    rsi,QWORD PTR [rbp-0x60]
  4107a2:	mov    edx,0x4
  4107a7:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  4107ac:	mov    BYTE PTR [rbp-0x120],al
  4107b2:	mov    QWORD PTR [rbp-0x118],rdx
  4107b9:	mov    rcx,QWORD PTR [rbp-0x120]
  4107c0:	mov    QWORD PTR [rbp-0x78],rcx
  4107c4:	mov    rcx,QWORD PTR [rbp-0x118]
  4107cb:	mov    QWORD PTR [rbp-0x70],rcx
  4107cf:	movzx  r8d,BYTE PTR [rbp-0x78]
  4107d4:	cmp    r8d,0x9
  4107d8:	je     4107f1 <test_mixed_type_union@@Base+0x961>
  4107de:	lea    rdi,[rip+0x13c6a]        # 42444f <_IO_stdin_used@@Base+0x244f>
  4107e5:	mov    al,0x0
  4107e7:	call   404070 <printf@plt>
  4107ec:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4107f1:	mov    rdi,QWORD PTR [rbp-0x68]
  4107f5:	mov    rsi,QWORD PTR [rbp-0x60]
  4107f9:	mov    edx,0x5
  4107fe:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  410803:	mov    BYTE PTR [rbp-0x130],al
  410809:	mov    QWORD PTR [rbp-0x128],rdx
  410810:	mov    rcx,QWORD PTR [rbp-0x130]
  410817:	mov    QWORD PTR [rbp-0x78],rcx
  41081b:	mov    rcx,QWORD PTR [rbp-0x128]
  410822:	mov    QWORD PTR [rbp-0x70],rcx
  410826:	movzx  r8d,BYTE PTR [rbp-0x78]
  41082b:	cmp    r8d,0x9
  41082f:	je     410848 <test_mixed_type_union@@Base+0x9b8>
  410835:	lea    rdi,[rip+0x13c35]        # 424471 <_IO_stdin_used@@Base+0x2471>
  41083c:	mov    al,0x0
  41083e:	call   404070 <printf@plt>
  410843:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  410848:	mov    rdi,QWORD PTR [rbp-0x68]
  41084c:	mov    rsi,QWORD PTR [rbp-0x60]
  410850:	mov    edx,0x6
  410855:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  41085a:	mov    BYTE PTR [rbp-0x140],al
  410860:	mov    QWORD PTR [rbp-0x138],rdx
  410867:	mov    rcx,QWORD PTR [rbp-0x140]
  41086e:	mov    QWORD PTR [rbp-0x78],rcx
  410872:	mov    rcx,QWORD PTR [rbp-0x138]
  410879:	mov    QWORD PTR [rbp-0x70],rcx
  41087d:	movzx  r8d,BYTE PTR [rbp-0x78]
  410882:	cmp    r8d,0x9
  410886:	je     41089f <test_mixed_type_union@@Base+0xa0f>
  41088c:	lea    rdi,[rip+0x13c00]        # 424493 <_IO_stdin_used@@Base+0x2493>
  410893:	mov    al,0x0
  410895:	call   404070 <printf@plt>
  41089a:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  41089f:	mov    rdi,QWORD PTR [rbp-0x68]
  4108a3:	mov    rsi,QWORD PTR [rbp-0x60]
  4108a7:	mov    edx,0x7
  4108ac:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  4108b1:	mov    BYTE PTR [rbp-0x150],al
  4108b7:	mov    QWORD PTR [rbp-0x148],rdx
  4108be:	mov    rcx,QWORD PTR [rbp-0x150]
  4108c5:	mov    QWORD PTR [rbp-0x78],rcx
  4108c9:	mov    rcx,QWORD PTR [rbp-0x148]
  4108d0:	mov    QWORD PTR [rbp-0x70],rcx
  4108d4:	movzx  r8d,BYTE PTR [rbp-0x78]
  4108d9:	cmp    r8d,0x9
  4108dd:	je     4108f6 <test_mixed_type_union@@Base+0xa66>
  4108e3:	lea    rdi,[rip+0x13bcd]        # 4244b7 <_IO_stdin_used@@Base+0x24b7>
  4108ea:	mov    al,0x0
  4108ec:	call   404070 <printf@plt>
  4108f1:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4108f6:	mov    rdi,QWORD PTR [rbp-0x68]
  4108fa:	mov    rsi,QWORD PTR [rbp-0x60]
  4108fe:	mov    edx,0x8
  410903:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  410908:	mov    BYTE PTR [rbp-0x160],al
  41090e:	mov    QWORD PTR [rbp-0x158],rdx
  410915:	mov    rcx,QWORD PTR [rbp-0x160]
  41091c:	mov    QWORD PTR [rbp-0x78],rcx
  410920:	mov    rcx,QWORD PTR [rbp-0x158]
  410927:	mov    QWORD PTR [rbp-0x70],rcx
  41092b:	movzx  r8d,BYTE PTR [rbp-0x78]
  410930:	cmp    r8d,0xb
  410934:	je     41094d <test_mixed_type_union@@Base+0xabd>
  41093a:	lea    rdi,[rip+0x13b99]        # 4244da <_IO_stdin_used@@Base+0x24da>
  410941:	mov    al,0x0
  410943:	call   404070 <printf@plt>
  410948:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  41094d:	mov    rdi,QWORD PTR [rbp-0x68]
  410951:	mov    rsi,QWORD PTR [rbp-0x60]
  410955:	mov    edx,0x9
  41095a:	call   411c80 <test_mixed_type_union@@Base+0x1df0>
  41095f:	mov    BYTE PTR [rbp-0x170],al
  410965:	mov    QWORD PTR [rbp-0x168],rdx
  41096c:	mov    rcx,QWORD PTR [rbp-0x170]
  410973:	mov    QWORD PTR [rbp-0x78],rcx
  410977:	mov    rcx,QWORD PTR [rbp-0x168]
  41097e:	mov    QWORD PTR [rbp-0x70],rcx
  410982:	movzx  r8d,BYTE PTR [rbp-0x78]
  410987:	cmp    r8d,0xb
  41098b:	je     4109a4 <test_mixed_type_union@@Base+0xb14>
  410991:	lea    rdi,[rip+0x13b42]        # 4244da <_IO_stdin_used@@Base+0x24da>
  410998:	mov    al,0x0
  41099a:	call   404070 <printf@plt>
  41099f:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4109a4:	mov    rdi,QWORD PTR [rbp-0x68]
  4109a8:	mov    rsi,QWORD PTR [rbp-0x60]
  4109ac:	call   411ea0 <test_mixed_type_union@@Base+0x2010>
  4109b1:	cmp    rax,0xa
  4109b5:	je     4109ce <test_mixed_type_union@@Base+0xb3e>
  4109bb:	lea    rdi,[rip+0x13b44]        # 424506 <_IO_stdin_used@@Base+0x2506>
  4109c2:	mov    al,0x0
  4109c4:	call   404070 <printf@plt>
  4109c9:	jmp    4109d5 <test_mixed_type_union@@Base+0xb45>
  4109ce:	mov    DWORD PTR [rbp-0x2c],0x0
  4109d5:	mov    rdi,QWORD PTR [rbp-0x18]
  4109d9:	call   41e4c0 <flatcc_builder_aligned_free@@Base>
  4109de:	mov    eax,DWORD PTR [rbp-0x2c]
  4109e1:	mov    DWORD PTR [rbp-0x4],eax
  4109e4:	mov    eax,DWORD PTR [rbp-0x4]
  4109e7:	add    rsp,0x210
  4109ee:	pop    rbp
  4109ef:	ret    
  4109f0:	push   rbp
  4109f1:	mov    rbp,rsp
  4109f4:	sub    rsp,0x10
  4109f8:	mov    QWORD PTR [rbp-0x8],rdi
  4109fc:	mov    rdi,QWORD PTR [rbp-0x8]
  410a00:	lea    rsi,[rip+0x11779]        # 422180 <_IO_stdin_used@@Base+0x180>
  410a07:	call   405ba0 <test_empty_monster@@Base+0x150>
  410a0c:	cmp    eax,0x0
  410a0f:	je     410a22 <test_mixed_type_union@@Base+0xb92>
  410a15:	mov    eax,0xffffffff
  410a1a:	mov    DWORD PTR [rbp-0xc],eax
  410a1d:	jmp    410a2e <test_mixed_type_union@@Base+0xb9e>
  410a22:	mov    rdi,QWORD PTR [rbp-0x8]
  410a26:	call   417b60 <main@@Base+0x3e30>
  410a2b:	mov    DWORD PTR [rbp-0xc],eax
  410a2e:	mov    eax,DWORD PTR [rbp-0xc]
  410a31:	add    rsp,0x10
  410a35:	pop    rbp
  410a36:	ret    
  410a37:	nop    WORD PTR [rax+rax*1+0x0]
  410a40:	push   rbp
  410a41:	mov    rbp,rsp
  410a44:	sub    rsp,0x30
  410a48:	mov    QWORD PTR [rbp-0x10],rdi
  410a4c:	mov    DWORD PTR [rbp-0x14],esi
  410a4f:	mov    rdi,QWORD PTR [rbp-0x10]
  410a53:	call   417b80 <main@@Base+0x3e50>
  410a58:	mov    QWORD PTR [rbp-0x20],rax
  410a5c:	cmp    QWORD PTR [rbp-0x20],0x0
  410a61:	jne    410a73 <test_mixed_type_union@@Base+0xbe3>
  410a67:	mov    DWORD PTR [rbp-0x4],0x0
  410a6e:	jmp    410a8f <test_mixed_type_union@@Base+0xbff>
  410a73:	mov    rdi,QWORD PTR [rbp-0x20]
  410a77:	mov    esi,DWORD PTR [rbp-0x14]
  410a7a:	call   417bb0 <main@@Base+0x3e80>
  410a7f:	mov    rdi,QWORD PTR [rbp-0x10]
  410a83:	mov    QWORD PTR [rbp-0x28],rax
  410a87:	call   417be0 <main@@Base+0x3eb0>
  410a8c:	mov    DWORD PTR [rbp-0x4],eax
  410a8f:	mov    eax,DWORD PTR [rbp-0x4]
  410a92:	add    rsp,0x30
  410a96:	pop    rbp
  410a97:	ret    
  410a98:	nop    DWORD PTR [rax+rax*1+0x0]
  410aa0:	push   rbp
  410aa1:	mov    rbp,rsp
  410aa4:	sub    rsp,0x30
  410aa8:	mov    QWORD PTR [rbp-0x10],rdi
  410aac:	mov    WORD PTR [rbp-0x12],si
  410ab0:	mov    rdi,QWORD PTR [rbp-0x10]
  410ab4:	call   417c00 <main@@Base+0x3ed0>
  410ab9:	mov    QWORD PTR [rbp-0x20],rax
  410abd:	cmp    QWORD PTR [rbp-0x20],0x0
  410ac2:	jne    410ad4 <test_mixed_type_union@@Base+0xc44>
  410ac8:	mov    DWORD PTR [rbp-0x4],0x0
  410acf:	jmp    410af1 <test_mixed_type_union@@Base+0xc61>
  410ad4:	mov    rdi,QWORD PTR [rbp-0x20]
  410ad8:	movzx  esi,WORD PTR [rbp-0x12]
  410adc:	call   417c30 <main@@Base+0x3f00>
  410ae1:	mov    rdi,QWORD PTR [rbp-0x10]
  410ae5:	mov    QWORD PTR [rbp-0x28],rax
  410ae9:	call   417c60 <main@@Base+0x3f30>
  410aee:	mov    DWORD PTR [rbp-0x4],eax
  410af1:	mov    eax,DWORD PTR [rbp-0x4]
  410af4:	add    rsp,0x30
  410af8:	pop    rbp
  410af9:	ret    
  410afa:	nop    WORD PTR [rax+rax*1+0x0]
  410b00:	push   rbp
  410b01:	mov    rbp,rsp
  410b04:	mov    DWORD PTR [rbp-0xc],edi
  410b07:	mov    BYTE PTR [rbp-0x8],0x8
  410b0b:	mov    eax,DWORD PTR [rbp-0xc]
  410b0e:	mov    DWORD PTR [rbp-0x4],eax
  410b11:	mov    rax,QWORD PTR [rbp-0x8]
  410b15:	pop    rbp
  410b16:	ret    
  410b17:	nop    WORD PTR [rax+rax*1+0x0]
  410b20:	push   rbp
  410b21:	mov    rbp,rsp
  410b24:	sub    rsp,0x30
  410b28:	mov    QWORD PTR [rbp-0x8],rdi
  410b2c:	mov    WORD PTR [rbp-0xa],si
  410b30:	mov    rdi,QWORD PTR [rbp-0x8]
  410b34:	movzx  esi,WORD PTR [rbp-0xa]
  410b38:	call   410aa0 <test_mixed_type_union@@Base+0xc10>
  410b3d:	mov    DWORD PTR [rbp-0x10],eax
  410b40:	cmp    DWORD PTR [rbp-0x10],0x0
  410b44:	je     410b75 <test_mixed_type_union@@Base+0xce5>
  410b4a:	mov    rdi,QWORD PTR [rbp-0x8]
  410b4e:	mov    eax,DWORD PTR [rbp-0x10]
  410b51:	mov    QWORD PTR [rbp-0x20],rdi
  410b55:	mov    edi,eax
  410b57:	call   410b00 <test_mixed_type_union@@Base+0xc70>
  410b5c:	mov    QWORD PTR [rbp-0x18],rax
  410b60:	mov    rsi,QWORD PTR [rbp-0x18]
  410b64:	mov    rdi,QWORD PTR [rbp-0x20]
  410b68:	call   417c80 <main@@Base+0x3f50>
  410b6d:	mov    DWORD PTR [rbp-0x24],eax
  410b70:	jmp    410b82 <test_mixed_type_union@@Base+0xcf2>
  410b75:	mov    eax,0xffffffff
  410b7a:	mov    DWORD PTR [rbp-0x24],eax
  410b7d:	jmp    410b82 <test_mixed_type_union@@Base+0xcf2>
  410b82:	mov    eax,DWORD PTR [rbp-0x24]
  410b85:	add    rsp,0x30
  410b89:	pop    rbp
  410b8a:	ret    
  410b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  410b90:	push   rbp
  410b91:	mov    rbp,rsp
  410b94:	sub    rsp,0x20
  410b98:	mov    QWORD PTR [rbp-0x8],rdi
  410b9c:	mov    DWORD PTR [rbp-0xc],esi
  410b9f:	mov    rdi,QWORD PTR [rbp-0x8]
  410ba3:	mov    eax,DWORD PTR [rbp-0xc]
  410ba6:	mov    QWORD PTR [rbp-0x20],rdi
  410baa:	mov    edi,eax
  410bac:	call   410b00 <test_mixed_type_union@@Base+0xc70>
  410bb1:	mov    QWORD PTR [rbp-0x18],rax
  410bb5:	mov    rsi,QWORD PTR [rbp-0x18]
  410bb9:	mov    rdi,QWORD PTR [rbp-0x20]
  410bbd:	call   417d30 <main@@Base+0x4000>
  410bc2:	add    rsp,0x20
  410bc6:	pop    rbp
  410bc7:	ret    
  410bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  410bd0:	push   rbp
  410bd1:	mov    rbp,rsp
  410bd4:	sub    rsp,0x20
  410bd8:	mov    QWORD PTR [rbp-0x10],rdi
  410bdc:	mov    DWORD PTR [rbp-0x14],esi
  410bdf:	mov    rdi,QWORD PTR [rbp-0x10]
  410be3:	call   417de0 <main@@Base+0x40b0>
  410be8:	cmp    eax,0x0
  410beb:	jne    410c06 <test_mixed_type_union@@Base+0xd76>
  410bf1:	mov    rdi,QWORD PTR [rbp-0x10]
  410bf5:	mov    esi,DWORD PTR [rbp-0x14]
  410bf8:	call   417e00 <main@@Base+0x40d0>
  410bfd:	cmp    eax,0x0
  410c00:	je     410c12 <test_mixed_type_union@@Base+0xd82>
  410c06:	mov    DWORD PTR [rbp-0x4],0x0
  410c0d:	jmp    410c1e <test_mixed_type_union@@Base+0xd8e>
  410c12:	mov    rdi,QWORD PTR [rbp-0x10]
  410c16:	call   417e70 <main@@Base+0x4140>
  410c1b:	mov    DWORD PTR [rbp-0x4],eax
  410c1e:	mov    eax,DWORD PTR [rbp-0x4]
  410c21:	add    rsp,0x20
  410c25:	pop    rbp
  410c26:	ret    
  410c27:	nop    WORD PTR [rax+rax*1+0x0]
  410c30:	push   rbp
  410c31:	mov    rbp,rsp
  410c34:	sub    rsp,0x20
  410c38:	mov    QWORD PTR [rbp-0x8],rdi
  410c3c:	mov    DWORD PTR [rbp-0xc],esi
  410c3f:	mov    rdi,QWORD PTR [rbp-0x8]
  410c43:	mov    eax,DWORD PTR [rbp-0xc]
  410c46:	mov    QWORD PTR [rbp-0x20],rdi
  410c4a:	mov    edi,eax
  410c4c:	call   417f80 <main@@Base+0x4250>
  410c51:	mov    QWORD PTR [rbp-0x18],rax
  410c55:	mov    rsi,QWORD PTR [rbp-0x18]
  410c59:	mov    rdi,QWORD PTR [rbp-0x20]
  410c5d:	call   417ed0 <main@@Base+0x41a0>
  410c62:	add    rsp,0x20
  410c66:	pop    rbp
  410c67:	ret    
  410c68:	nop    DWORD PTR [rax+rax*1+0x0]
  410c70:	push   rbp
  410c71:	mov    rbp,rsp
  410c74:	sub    rsp,0x20
  410c78:	mov    QWORD PTR [rbp-0x8],rdi
  410c7c:	mov    QWORD PTR [rbp-0x10],rsi
  410c80:	mov    rdi,QWORD PTR [rbp-0x8]
  410c84:	mov    rax,QWORD PTR [rbp-0x8]
  410c88:	mov    rsi,QWORD PTR [rbp-0x10]
  410c8c:	mov    QWORD PTR [rbp-0x18],rdi
  410c90:	mov    rdi,rax
  410c93:	call   41d980 <flatcc_builder_create_string_str@@Base>
  410c98:	mov    rdi,QWORD PTR [rbp-0x18]
  410c9c:	mov    esi,eax
  410c9e:	call   417fa0 <main@@Base+0x4270>
  410ca3:	add    rsp,0x20
  410ca7:	pop    rbp
  410ca8:	ret    
  410ca9:	nop    DWORD PTR [rax+0x0]
  410cb0:	push   rbp
  410cb1:	mov    rbp,rsp
  410cb4:	sub    rsp,0x10
  410cb8:	mov    QWORD PTR [rbp-0x8],rdi
  410cbc:	mov    rdi,QWORD PTR [rbp-0x8]
  410cc0:	call   41d2d0 <flatcc_builder_start_union_vector@@Base>
  410cc5:	add    rsp,0x10
  410cc9:	pop    rbp
  410cca:	ret    
  410ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  410cd0:	push   rbp
  410cd1:	mov    rbp,rsp
  410cd4:	sub    rsp,0x10
  410cd8:	mov    QWORD PTR [rbp-0x8],rsi
  410cdc:	mov    QWORD PTR [rbp-0x10],rdi
  410ce0:	mov    rdi,QWORD PTR [rbp-0x10]
  410ce4:	mov    rsi,QWORD PTR [rbp-0x8]
  410ce8:	call   41d620 <flatcc_builder_union_vector_push@@Base>
  410ced:	add    rsp,0x10
  410cf1:	pop    rbp
  410cf2:	ret    
  410cf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410cfd:	nop    DWORD PTR [rax]
  410d00:	push   rbp
  410d01:	mov    rbp,rsp
  410d04:	sub    rsp,0x20
  410d08:	mov    QWORD PTR [rbp-0x8],rdi
  410d0c:	mov    DWORD PTR [rbp-0xc],esi
  410d0f:	mov    rdi,QWORD PTR [rbp-0x8]
  410d13:	mov    eax,DWORD PTR [rbp-0xc]
  410d16:	mov    QWORD PTR [rbp-0x20],rdi
  410d1a:	mov    edi,eax
  410d1c:	call   417f80 <main@@Base+0x4250>
  410d21:	mov    QWORD PTR [rbp-0x18],rax
  410d25:	mov    rsi,QWORD PTR [rbp-0x18]
  410d29:	mov    rdi,QWORD PTR [rbp-0x20]
  410d2d:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410d32:	add    rsp,0x20
  410d36:	pop    rbp
  410d37:	ret    
  410d38:	nop    DWORD PTR [rax+rax*1+0x0]
  410d40:	push   rbp
  410d41:	mov    rbp,rsp
  410d44:	sub    rsp,0x20
  410d48:	mov    QWORD PTR [rbp-0x8],rdi
  410d4c:	mov    DWORD PTR [rbp-0xc],esi
  410d4f:	mov    rdi,QWORD PTR [rbp-0x8]
  410d53:	mov    rax,QWORD PTR [rbp-0x8]
  410d57:	mov    esi,DWORD PTR [rbp-0xc]
  410d5a:	mov    QWORD PTR [rbp-0x20],rdi
  410d5e:	mov    rdi,rax
  410d61:	call   410bd0 <test_mixed_type_union@@Base+0xd40>
  410d66:	mov    edi,eax
  410d68:	call   417f80 <main@@Base+0x4250>
  410d6d:	mov    QWORD PTR [rbp-0x18],rax
  410d71:	mov    rsi,QWORD PTR [rbp-0x18]
  410d75:	mov    rdi,QWORD PTR [rbp-0x20]
  410d79:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410d7e:	add    rsp,0x20
  410d82:	pop    rbp
  410d83:	ret    
  410d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d8e:	xchg   ax,ax
  410d90:	push   rbp
  410d91:	mov    rbp,rsp
  410d94:	sub    rsp,0x10
  410d98:	mov    QWORD PTR [rbp-0x8],rsi
  410d9c:	mov    QWORD PTR [rbp-0x10],rdi
  410da0:	mov    rdi,QWORD PTR [rbp-0x10]
  410da4:	mov    rsi,QWORD PTR [rbp-0x8]
  410da8:	call   41d620 <flatcc_builder_union_vector_push@@Base>
  410dad:	add    rsp,0x10
  410db1:	pop    rbp
  410db2:	ret    
  410db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410dbd:	nop    DWORD PTR [rax]
  410dc0:	push   rbp
  410dc1:	mov    rbp,rsp
  410dc4:	mov    DWORD PTR [rbp-0xc],edi
  410dc7:	mov    BYTE PTR [rbp-0x8],0xb
  410dcb:	mov    eax,DWORD PTR [rbp-0xc]
  410dce:	mov    DWORD PTR [rbp-0x4],eax
  410dd1:	mov    rax,QWORD PTR [rbp-0x8]
  410dd5:	pop    rbp
  410dd6:	ret    
  410dd7:	nop    WORD PTR [rax+rax*1+0x0]
  410de0:	push   rbp
  410de1:	mov    rbp,rsp
  410de4:	sub    rsp,0x20
  410de8:	mov    QWORD PTR [rbp-0x8],rdi
  410dec:	mov    DWORD PTR [rbp-0xc],esi
  410def:	mov    rdi,QWORD PTR [rbp-0x8]
  410df3:	mov    eax,DWORD PTR [rbp-0xc]
  410df6:	mov    QWORD PTR [rbp-0x20],rdi
  410dfa:	mov    edi,eax
  410dfc:	call   418090 <main@@Base+0x4360>
  410e01:	mov    QWORD PTR [rbp-0x18],rax
  410e05:	mov    rsi,QWORD PTR [rbp-0x18]
  410e09:	mov    rdi,QWORD PTR [rbp-0x20]
  410e0d:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410e12:	add    rsp,0x20
  410e16:	pop    rbp
  410e17:	ret    
  410e18:	nop    DWORD PTR [rax+rax*1+0x0]
  410e20:	push   rbp
  410e21:	mov    rbp,rsp
  410e24:	sub    rsp,0x10
  410e28:	mov    QWORD PTR [rbp-0x8],rdi
  410e2c:	mov    rdi,QWORD PTR [rbp-0x8]
  410e30:	call   417b80 <main@@Base+0x3e50>
  410e35:	add    rsp,0x10
  410e39:	pop    rbp
  410e3a:	ret    
  410e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  410e40:	push   rbp
  410e41:	mov    rbp,rsp
  410e44:	sub    rsp,0x20
  410e48:	mov    QWORD PTR [rbp-0x8],rdi
  410e4c:	mov    rdi,QWORD PTR [rbp-0x8]
  410e50:	mov    rax,QWORD PTR [rbp-0x8]
  410e54:	mov    QWORD PTR [rbp-0x18],rdi
  410e58:	mov    rdi,rax
  410e5b:	call   4180b0 <main@@Base+0x4380>
  410e60:	mov    edi,eax
  410e62:	call   418090 <main@@Base+0x4360>
  410e67:	mov    QWORD PTR [rbp-0x10],rax
  410e6b:	mov    rsi,QWORD PTR [rbp-0x10]
  410e6f:	mov    rdi,QWORD PTR [rbp-0x18]
  410e73:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410e78:	add    rsp,0x20
  410e7c:	pop    rbp
  410e7d:	ret    
  410e7e:	xchg   ax,ax
  410e80:	push   rbp
  410e81:	mov    rbp,rsp
  410e84:	sub    rsp,0x20
  410e88:	mov    QWORD PTR [rbp-0x8],rdi
  410e8c:	mov    DWORD PTR [rbp-0xc],esi
  410e8f:	mov    rdi,QWORD PTR [rbp-0x8]
  410e93:	mov    rax,QWORD PTR [rbp-0x8]
  410e97:	mov    esi,DWORD PTR [rbp-0xc]
  410e9a:	mov    QWORD PTR [rbp-0x20],rdi
  410e9e:	mov    rdi,rax
  410ea1:	call   410a40 <test_mixed_type_union@@Base+0xbb0>
  410ea6:	mov    edi,eax
  410ea8:	call   418090 <main@@Base+0x4360>
  410ead:	mov    QWORD PTR [rbp-0x18],rax
  410eb1:	mov    rsi,QWORD PTR [rbp-0x18]
  410eb5:	mov    rdi,QWORD PTR [rbp-0x20]
  410eb9:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410ebe:	add    rsp,0x20
  410ec2:	pop    rbp
  410ec3:	ret    
  410ec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ece:	xchg   ax,ax
  410ed0:	push   rbp
  410ed1:	mov    rbp,rsp
  410ed4:	sub    rsp,0x20
  410ed8:	mov    QWORD PTR [rbp-0x8],rdi
  410edc:	mov    DWORD PTR [rbp-0xc],esi
  410edf:	mov    rdi,QWORD PTR [rbp-0x8]
  410ee3:	mov    eax,DWORD PTR [rbp-0xc]
  410ee6:	mov    QWORD PTR [rbp-0x20],rdi
  410eea:	mov    edi,eax
  410eec:	call   410dc0 <test_mixed_type_union@@Base+0xf30>
  410ef1:	mov    QWORD PTR [rbp-0x18],rax
  410ef5:	mov    rsi,QWORD PTR [rbp-0x18]
  410ef9:	mov    rdi,QWORD PTR [rbp-0x20]
  410efd:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410f02:	add    rsp,0x20
  410f06:	pop    rbp
  410f07:	ret    
  410f08:	nop    DWORD PTR [rax+rax*1+0x0]
  410f10:	push   rbp
  410f11:	mov    rbp,rsp
  410f14:	sub    rsp,0x20
  410f18:	mov    QWORD PTR [rbp-0x8],rdi
  410f1c:	mov    QWORD PTR [rbp-0x10],rsi
  410f20:	mov    rdi,QWORD PTR [rbp-0x8]
  410f24:	mov    rax,QWORD PTR [rbp-0x8]
  410f28:	mov    rsi,QWORD PTR [rbp-0x10]
  410f2c:	mov    QWORD PTR [rbp-0x20],rdi
  410f30:	mov    rdi,rax
  410f33:	call   40a790 <gen_monster@@Base+0xe20>
  410f38:	mov    edi,eax
  410f3a:	call   410dc0 <test_mixed_type_union@@Base+0xf30>
  410f3f:	mov    QWORD PTR [rbp-0x18],rax
  410f43:	mov    rsi,QWORD PTR [rbp-0x18]
  410f47:	mov    rdi,QWORD PTR [rbp-0x20]
  410f4b:	call   410d90 <test_mixed_type_union@@Base+0xf00>
  410f50:	add    rsp,0x20
  410f54:	pop    rbp
  410f55:	ret    
  410f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f60:	push   rbp
  410f61:	mov    rbp,rsp
  410f64:	sub    rsp,0x20
  410f68:	mov    QWORD PTR [rbp-0x8],rdi
  410f6c:	mov    rdi,QWORD PTR [rbp-0x8]
  410f70:	mov    rax,QWORD PTR [rbp-0x8]
  410f74:	mov    QWORD PTR [rbp-0x18],rdi
  410f78:	mov    rdi,rax
  410f7b:	call   41d350 <flatcc_builder_end_union_vector@@Base>
  410f80:	mov    QWORD PTR [rbp-0x10],rax
  410f84:	mov    rsi,QWORD PTR [rbp-0x10]
  410f88:	mov    rdi,QWORD PTR [rbp-0x18]
  410f8c:	call   4180d0 <main@@Base+0x43a0>
  410f91:	add    rsp,0x20
  410f95:	pop    rbp
  410f96:	ret    
  410f97:	nop    WORD PTR [rax+rax*1+0x0]
  410fa0:	push   rbp
  410fa1:	mov    rbp,rsp
  410fa4:	sub    rsp,0x10
  410fa8:	mov    QWORD PTR [rbp-0x8],rdi
  410fac:	mov    rdi,QWORD PTR [rbp-0x8]
  410fb0:	mov    rax,QWORD PTR [rbp-0x8]
  410fb4:	mov    QWORD PTR [rbp-0x10],rdi
  410fb8:	mov    rdi,rax
  410fbb:	call   418180 <main@@Base+0x4450>
  410fc0:	mov    rdi,QWORD PTR [rbp-0x10]
  410fc4:	mov    esi,eax
  410fc6:	call   405c90 <test_empty_monster@@Base+0x240>
  410fcb:	add    rsp,0x10
  410fcf:	pop    rbp
  410fd0:	ret    
  410fd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  410fe0:	push   rbp
  410fe1:	mov    rbp,rsp
  410fe4:	sub    rsp,0x10
  410fe8:	mov    QWORD PTR [rbp-0x8],rdi
  410fec:	mov    QWORD PTR [rbp-0x10],rsi
  410ff0:	mov    rdi,QWORD PTR [rbp-0x8]
  410ff4:	mov    rsi,QWORD PTR [rbp-0x10]
  410ff8:	lea    rdx,[rip+0x11181]        # 422180 <_IO_stdin_used@@Base+0x180>
  410fff:	lea    rcx,[rip+0x4cca]        # 415cd0 <main@@Base+0x1fa0>
  411006:	call   420a30 <flatcc_verify_table_as_root@@Base>
  41100b:	add    rsp,0x10
  41100f:	pop    rbp
  411010:	ret    
  411011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41101b:	nop    DWORD PTR [rax+rax*1+0x0]
  411020:	push   rbp
  411021:	mov    rbp,rsp
  411024:	sub    rsp,0x20
  411028:	mov    QWORD PTR [rbp-0x8],rdi
  41102c:	lea    rax,[rip+0x1114d]        # 422180 <_IO_stdin_used@@Base+0x180>
  411033:	mov    QWORD PTR [rbp-0x10],rax
  411037:	cmp    QWORD PTR [rbp-0x8],0x0
  41103c:	je     411058 <test_mixed_type_union@@Base+0x11c8>
  411042:	mov    rdi,QWORD PTR [rbp-0x8]
  411046:	mov    rsi,QWORD PTR [rbp-0x10]
  41104a:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  41104f:	cmp    eax,0x0
  411052:	jne    411065 <test_mixed_type_union@@Base+0x11d5>
  411058:	xor    eax,eax
  41105a:	mov    ecx,eax
  41105c:	mov    QWORD PTR [rbp-0x18],rcx
  411060:	jmp    411085 <test_mixed_type_union@@Base+0x11f5>
  411065:	mov    rax,QWORD PTR [rbp-0x8]
  411069:	mov    rdi,QWORD PTR [rbp-0x8]
  41106d:	mov    QWORD PTR [rbp-0x20],rax
  411071:	call   4141e0 <main@@Base+0x4b0>
  411076:	mov    eax,eax
  411078:	mov    ecx,eax
  41107a:	mov    rdx,QWORD PTR [rbp-0x20]
  41107e:	add    rdx,rcx
  411081:	mov    QWORD PTR [rbp-0x18],rdx
  411085:	mov    rax,QWORD PTR [rbp-0x18]
  411089:	add    rsp,0x20
  41108d:	pop    rbp
  41108e:	ret    
  41108f:	nop
  411090:	push   rbp
  411091:	mov    rbp,rsp
  411094:	sub    rsp,0x20
  411098:	mov    QWORD PTR [rbp-0x8],rdi
  41109c:	mov    WORD PTR [rbp-0xa],0x0
  4110a2:	cmp    QWORD PTR [rbp-0x8],0x0
  4110a7:	je     4110c1 <test_mixed_type_union@@Base+0x1231>
  4110ad:	mov    al,0x1
  4110af:	test   al,0x1
  4110b1:	jne    4110bc <test_mixed_type_union@@Base+0x122c>
  4110b7:	jmp    4110c1 <test_mixed_type_union@@Base+0x1231>
  4110bc:	jmp    4110e0 <test_mixed_type_union@@Base+0x1250>
  4110c1:	lea    rdi,[rip+0x139d0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4110c8:	lea    rsi,[rip+0x139ef]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4110cf:	mov    edx,0x333
  4110d4:	lea    rcx,[rip+0x1541a]        # 4264f5 <_IO_stdin_used@@Base+0x44f5>
  4110db:	call   404090 <__assert_fail@plt>
  4110e0:	mov    WORD PTR [rbp-0xc],0x1
  4110e6:	mov    rax,QWORD PTR [rbp-0x8]
  4110ea:	mov    rcx,QWORD PTR [rbp-0x8]
  4110ee:	mov    rdi,rcx
  4110f1:	mov    QWORD PTR [rbp-0x20],rax
  4110f5:	call   414210 <main@@Base+0x4e0>
  4110fa:	xor    edx,edx
  4110fc:	mov    ecx,edx
  4110fe:	movsxd rsi,eax
  411101:	sub    rcx,rsi
  411104:	mov    rsi,QWORD PTR [rbp-0x20]
  411108:	add    rsi,rcx
  41110b:	mov    QWORD PTR [rbp-0x18],rsi
  41110f:	mov    rcx,QWORD PTR [rbp-0x18]
  411113:	mov    rdi,rcx
  411116:	call   414230 <main@@Base+0x500>
  41111b:	movzx  edx,ax
  41111e:	mov    ecx,edx
  411120:	movzx  edx,WORD PTR [rbp-0xc]
  411124:	add    edx,0x3
  411127:	movsxd rsi,edx
  41112a:	shl    rsi,0x1
  41112e:	cmp    rcx,rsi
  411131:	jb     41115b <test_mixed_type_union@@Base+0x12cb>
  411137:	mov    rax,QWORD PTR [rbp-0x18]
  41113b:	movzx  ecx,WORD PTR [rbp-0xc]
  41113f:	movsxd rdx,ecx
  411142:	shl    rdx,0x1
  411146:	add    rax,rdx
  411149:	add    rax,0x4
  41114f:	mov    rdi,rax
  411152:	call   414230 <main@@Base+0x500>
  411157:	mov    WORD PTR [rbp-0xa],ax
  41115b:	movzx  eax,WORD PTR [rbp-0xa]
  41115f:	cmp    eax,0x0
  411162:	setne  cl
  411165:	and    cl,0x1
  411168:	movzx  eax,cl
  41116b:	add    rsp,0x20
  41116f:	pop    rbp
  411170:	ret    
  411171:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41117b:	nop    DWORD PTR [rax+rax*1+0x0]
  411180:	push   rbp
  411181:	mov    rbp,rsp
  411184:	sub    rsp,0x20
  411188:	mov    QWORD PTR [rbp-0x8],rdi
  41118c:	mov    WORD PTR [rbp-0xa],0x0
  411192:	cmp    QWORD PTR [rbp-0x8],0x0
  411197:	je     4111b1 <test_mixed_type_union@@Base+0x1321>
  41119d:	mov    al,0x1
  41119f:	test   al,0x1
  4111a1:	jne    4111ac <test_mixed_type_union@@Base+0x131c>
  4111a7:	jmp    4111b1 <test_mixed_type_union@@Base+0x1321>
  4111ac:	jmp    4111d0 <test_mixed_type_union@@Base+0x1340>
  4111b1:	lea    rdi,[rip+0x138e0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4111b8:	lea    rsi,[rip+0x138ff]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4111bf:	mov    edx,0x337
  4111c4:	lea    rcx,[rip+0x1536d]        # 426538 <_IO_stdin_used@@Base+0x4538>
  4111cb:	call   404090 <__assert_fail@plt>
  4111d0:	mov    WORD PTR [rbp-0xc],0x9
  4111d6:	mov    rax,QWORD PTR [rbp-0x8]
  4111da:	mov    rcx,QWORD PTR [rbp-0x8]
  4111de:	mov    rdi,rcx
  4111e1:	mov    QWORD PTR [rbp-0x20],rax
  4111e5:	call   414210 <main@@Base+0x4e0>
  4111ea:	xor    edx,edx
  4111ec:	mov    ecx,edx
  4111ee:	movsxd rsi,eax
  4111f1:	sub    rcx,rsi
  4111f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4111f8:	add    rsi,rcx
  4111fb:	mov    QWORD PTR [rbp-0x18],rsi
  4111ff:	mov    rcx,QWORD PTR [rbp-0x18]
  411203:	mov    rdi,rcx
  411206:	call   414230 <main@@Base+0x500>
  41120b:	movzx  edx,ax
  41120e:	mov    ecx,edx
  411210:	movzx  edx,WORD PTR [rbp-0xc]
  411214:	add    edx,0x3
  411217:	movsxd rsi,edx
  41121a:	shl    rsi,0x1
  41121e:	cmp    rcx,rsi
  411221:	jb     41124b <test_mixed_type_union@@Base+0x13bb>
  411227:	mov    rax,QWORD PTR [rbp-0x18]
  41122b:	movzx  ecx,WORD PTR [rbp-0xc]
  41122f:	movsxd rdx,ecx
  411232:	shl    rdx,0x1
  411236:	add    rax,rdx
  411239:	add    rax,0x4
  41123f:	mov    rdi,rax
  411242:	call   414230 <main@@Base+0x500>
  411247:	mov    WORD PTR [rbp-0xa],ax
  41124b:	movzx  eax,WORD PTR [rbp-0xa]
  41124f:	cmp    eax,0x0
  411252:	setne  cl
  411255:	and    cl,0x1
  411258:	movzx  eax,cl
  41125b:	add    rsp,0x20
  41125f:	pop    rbp
  411260:	ret    
  411261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41126b:	nop    DWORD PTR [rax+rax*1+0x0]
  411270:	push   rbp
  411271:	mov    rbp,rsp
  411274:	sub    rsp,0x20
  411278:	xor    esi,esi
  41127a:	mov    QWORD PTR [rbp-0x18],rdi
  41127e:	lea    rax,[rbp-0x10]
  411282:	mov    rdi,rax
  411285:	mov    edx,0x10
  41128a:	call   4040a0 <memset@plt>
  41128f:	mov    rdi,QWORD PTR [rbp-0x18]
  411293:	call   4181e0 <main@@Base+0x44b0>
  411298:	mov    BYTE PTR [rbp-0x10],al
  41129b:	movzx  ecx,BYTE PTR [rbp-0x10]
  41129f:	cmp    ecx,0x0
  4112a2:	jne    4112ad <test_mixed_type_union@@Base+0x141d>
  4112a8:	jmp    4112ba <test_mixed_type_union@@Base+0x142a>
  4112ad:	mov    rdi,QWORD PTR [rbp-0x18]
  4112b1:	call   4182f0 <main@@Base+0x45c0>
  4112b6:	mov    QWORD PTR [rbp-0x8],rax
  4112ba:	mov    al,BYTE PTR [rbp-0x10]
  4112bd:	mov    rdx,QWORD PTR [rbp-0x8]
  4112c1:	add    rsp,0x20
  4112c5:	pop    rbp
  4112c6:	ret    
  4112c7:	nop    WORD PTR [rax+rax*1+0x0]
  4112d0:	push   rbp
  4112d1:	mov    rbp,rsp
  4112d4:	sub    rsp,0x10
  4112d8:	mov    QWORD PTR [rbp-0x8],rdi
  4112dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4112e1:	je     4112fe <test_mixed_type_union@@Base+0x146e>
  4112e7:	mov    rax,QWORD PTR [rbp-0x8]
  4112eb:	mov    rdi,rax
  4112ee:	call   415090 <main@@Base+0x1360>
  4112f3:	movzx  ecx,ax
  4112f6:	mov    DWORD PTR [rbp-0xc],ecx
  4112f9:	jmp    411308 <test_mixed_type_union@@Base+0x1478>
  4112fe:	xor    eax,eax
  411300:	mov    DWORD PTR [rbp-0xc],eax
  411303:	jmp    411308 <test_mixed_type_union@@Base+0x1478>
  411308:	mov    eax,DWORD PTR [rbp-0xc]
  41130b:	movzx  eax,ax
  41130e:	add    rsp,0x10
  411312:	pop    rbp
  411313:	ret    
  411314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41131e:	xchg   ax,ax
  411320:	push   rbp
  411321:	mov    rbp,rsp
  411324:	sub    rsp,0x30
  411328:	mov    QWORD PTR [rbp-0x8],rdi
  41132c:	mov    WORD PTR [rbp-0xa],0x0
  411332:	cmp    QWORD PTR [rbp-0x8],0x0
  411337:	je     411351 <test_mixed_type_union@@Base+0x14c1>
  41133d:	mov    al,0x1
  41133f:	test   al,0x1
  411341:	jne    41134c <test_mixed_type_union@@Base+0x14bc>
  411347:	jmp    411351 <test_mixed_type_union@@Base+0x14c1>
  41134c:	jmp    411370 <test_mixed_type_union@@Base+0x14e0>
  411351:	lea    rdi,[rip+0x13740]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  411358:	lea    rsi,[rip+0x1375f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41135f:	mov    edx,0x336
  411364:	lea    rcx,[rip+0x152ae]        # 426619 <_IO_stdin_used@@Base+0x4619>
  41136b:	call   404090 <__assert_fail@plt>
  411370:	mov    WORD PTR [rbp-0xc],0x6
  411376:	mov    rax,QWORD PTR [rbp-0x8]
  41137a:	mov    rcx,QWORD PTR [rbp-0x8]
  41137e:	mov    rdi,rcx
  411381:	mov    QWORD PTR [rbp-0x20],rax
  411385:	call   414210 <main@@Base+0x4e0>
  41138a:	xor    edx,edx
  41138c:	mov    ecx,edx
  41138e:	movsxd rsi,eax
  411391:	sub    rcx,rsi
  411394:	mov    rsi,QWORD PTR [rbp-0x20]
  411398:	add    rsi,rcx
  41139b:	mov    QWORD PTR [rbp-0x18],rsi
  41139f:	mov    rcx,QWORD PTR [rbp-0x18]
  4113a3:	mov    rdi,rcx
  4113a6:	call   414230 <main@@Base+0x500>
  4113ab:	movzx  edx,ax
  4113ae:	mov    ecx,edx
  4113b0:	movzx  edx,WORD PTR [rbp-0xc]
  4113b4:	add    edx,0x3
  4113b7:	movsxd rsi,edx
  4113ba:	shl    rsi,0x1
  4113be:	cmp    rcx,rsi
  4113c1:	jb     4113eb <test_mixed_type_union@@Base+0x155b>
  4113c7:	mov    rax,QWORD PTR [rbp-0x18]
  4113cb:	movzx  ecx,WORD PTR [rbp-0xc]
  4113cf:	movsxd rdx,ecx
  4113d2:	shl    rdx,0x1
  4113d6:	add    rax,rdx
  4113d9:	add    rax,0x4
  4113df:	mov    rdi,rax
  4113e2:	call   414230 <main@@Base+0x500>
  4113e7:	mov    WORD PTR [rbp-0xa],ax
  4113eb:	movzx  eax,WORD PTR [rbp-0xa]
  4113ef:	cmp    eax,0x0
  4113f2:	je     411419 <test_mixed_type_union@@Base+0x1589>
  4113f8:	mov    rax,QWORD PTR [rbp-0x8]
  4113fc:	movzx  ecx,WORD PTR [rbp-0xa]
  411400:	movsxd rdx,ecx
  411403:	add    rax,rdx
  411406:	mov    rdi,rax
  411409:	call   4165e0 <main@@Base+0x28b0>
  41140e:	movzx  ecx,al
  411411:	mov    DWORD PTR [rbp-0x24],ecx
  411414:	jmp    411423 <test_mixed_type_union@@Base+0x1593>
  411419:	xor    eax,eax
  41141b:	mov    DWORD PTR [rbp-0x24],eax
  41141e:	jmp    411423 <test_mixed_type_union@@Base+0x1593>
  411423:	mov    eax,DWORD PTR [rbp-0x24]
  411426:	movzx  eax,al
  411429:	add    rsp,0x30
  41142d:	pop    rbp
  41142e:	ret    
  41142f:	nop
  411430:	push   rbp
  411431:	mov    rbp,rsp
  411434:	sub    rsp,0x40
  411438:	mov    QWORD PTR [rbp-0x10],rdi
  41143c:	mov    WORD PTR [rbp-0x1a],0x0
  411442:	cmp    QWORD PTR [rbp-0x10],0x0
  411447:	je     411461 <test_mixed_type_union@@Base+0x15d1>
  41144d:	mov    al,0x1
  41144f:	test   al,0x1
  411451:	jne    41145c <test_mixed_type_union@@Base+0x15cc>
  411457:	jmp    411461 <test_mixed_type_union@@Base+0x15d1>
  41145c:	jmp    411480 <test_mixed_type_union@@Base+0x15f0>
  411461:	lea    rdi,[rip+0x13630]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  411468:	lea    rsi,[rip+0x1364f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41146f:	mov    edx,0x336
  411474:	lea    rcx,[rip+0x151ed]        # 426668 <_IO_stdin_used@@Base+0x4668>
  41147b:	call   404090 <__assert_fail@plt>
  411480:	mov    WORD PTR [rbp-0x1c],0x7
  411486:	mov    rax,QWORD PTR [rbp-0x10]
  41148a:	mov    rcx,QWORD PTR [rbp-0x10]
  41148e:	mov    rdi,rcx
  411491:	mov    QWORD PTR [rbp-0x30],rax
  411495:	call   414210 <main@@Base+0x4e0>
  41149a:	xor    edx,edx
  41149c:	mov    ecx,edx
  41149e:	movsxd rsi,eax
  4114a1:	sub    rcx,rsi
  4114a4:	mov    rsi,QWORD PTR [rbp-0x30]
  4114a8:	add    rsi,rcx
  4114ab:	mov    QWORD PTR [rbp-0x28],rsi
  4114af:	mov    rcx,QWORD PTR [rbp-0x28]
  4114b3:	mov    rdi,rcx
  4114b6:	call   414230 <main@@Base+0x500>
  4114bb:	movzx  edx,ax
  4114be:	mov    ecx,edx
  4114c0:	movzx  edx,WORD PTR [rbp-0x1c]
  4114c4:	add    edx,0x3
  4114c7:	movsxd rsi,edx
  4114ca:	shl    rsi,0x1
  4114ce:	cmp    rcx,rsi
  4114d1:	jb     4114fb <test_mixed_type_union@@Base+0x166b>
  4114d7:	mov    rax,QWORD PTR [rbp-0x28]
  4114db:	movzx  ecx,WORD PTR [rbp-0x1c]
  4114df:	movsxd rdx,ecx
  4114e2:	shl    rdx,0x1
  4114e6:	add    rax,rdx
  4114e9:	add    rax,0x4
  4114ef:	mov    rdi,rax
  4114f2:	call   414230 <main@@Base+0x500>
  4114f7:	mov    WORD PTR [rbp-0x1a],ax
  4114fb:	cmp    WORD PTR [rbp-0x1a],0x0
  411500:	je     411540 <test_mixed_type_union@@Base+0x16b0>
  411506:	mov    rax,QWORD PTR [rbp-0x10]
  41150a:	movzx  ecx,WORD PTR [rbp-0x1a]
  41150e:	movsxd rdx,ecx
  411511:	add    rax,rdx
  411514:	mov    QWORD PTR [rbp-0x18],rax
  411518:	mov    rax,QWORD PTR [rbp-0x18]
  41151c:	mov    rdx,QWORD PTR [rbp-0x18]
  411520:	mov    rdi,rdx
  411523:	mov    QWORD PTR [rbp-0x38],rax
  411527:	call   4141e0 <main@@Base+0x4b0>
  41152c:	mov    eax,eax
  41152e:	mov    edx,eax
  411530:	mov    rsi,QWORD PTR [rbp-0x38]
  411534:	add    rsi,rdx
  411537:	mov    QWORD PTR [rbp-0x8],rsi
  41153b:	jmp    411548 <test_mixed_type_union@@Base+0x16b8>
  411540:	mov    QWORD PTR [rbp-0x8],0x0
  411548:	mov    rax,QWORD PTR [rbp-0x8]
  41154c:	add    rsp,0x40
  411550:	pop    rbp
  411551:	ret    
  411552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41155c:	nop    DWORD PTR [rax+0x0]
  411560:	push   rbp
  411561:	mov    rbp,rsp
  411564:	sub    rsp,0x30
  411568:	mov    QWORD PTR [rbp-0x8],rdi
  41156c:	mov    WORD PTR [rbp-0xa],0x0
  411572:	cmp    QWORD PTR [rbp-0x8],0x0
  411577:	je     411591 <test_mixed_type_union@@Base+0x1701>
  41157d:	mov    al,0x1
  41157f:	test   al,0x1
  411581:	jne    41158c <test_mixed_type_union@@Base+0x16fc>
  411587:	jmp    411591 <test_mixed_type_union@@Base+0x1701>
  41158c:	jmp    4115b0 <test_mixed_type_union@@Base+0x1720>
  411591:	lea    rdi,[rip+0x13500]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  411598:	lea    rsi,[rip+0x1351f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41159f:	mov    edx,0x334
  4115a4:	lea    rcx,[rip+0x150fe]        # 4266a9 <_IO_stdin_used@@Base+0x46a9>
  4115ab:	call   404090 <__assert_fail@plt>
  4115b0:	mov    WORD PTR [rbp-0xc],0x2
  4115b6:	mov    rax,QWORD PTR [rbp-0x8]
  4115ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4115be:	mov    rdi,rcx
  4115c1:	mov    QWORD PTR [rbp-0x20],rax
  4115c5:	call   414210 <main@@Base+0x4e0>
  4115ca:	xor    edx,edx
  4115cc:	mov    ecx,edx
  4115ce:	movsxd rsi,eax
  4115d1:	sub    rcx,rsi
  4115d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4115d8:	add    rsi,rcx
  4115db:	mov    QWORD PTR [rbp-0x18],rsi
  4115df:	mov    rcx,QWORD PTR [rbp-0x18]
  4115e3:	mov    rdi,rcx
  4115e6:	call   414230 <main@@Base+0x500>
  4115eb:	movzx  edx,ax
  4115ee:	mov    ecx,edx
  4115f0:	movzx  edx,WORD PTR [rbp-0xc]
  4115f4:	add    edx,0x3
  4115f7:	movsxd rsi,edx
  4115fa:	shl    rsi,0x1
  4115fe:	cmp    rcx,rsi
  411601:	jb     41162b <test_mixed_type_union@@Base+0x179b>
  411607:	mov    rax,QWORD PTR [rbp-0x18]
  41160b:	movzx  ecx,WORD PTR [rbp-0xc]
  41160f:	movsxd rdx,ecx
  411612:	shl    rdx,0x1
  411616:	add    rax,rdx
  411619:	add    rax,0x4
  41161f:	mov    rdi,rax
  411622:	call   414230 <main@@Base+0x500>
  411627:	mov    WORD PTR [rbp-0xa],ax
  41162b:	movzx  eax,WORD PTR [rbp-0xa]
  41162f:	cmp    eax,0x0
  411632:	je     411659 <test_mixed_type_union@@Base+0x17c9>
  411638:	mov    rax,QWORD PTR [rbp-0x8]
  41163c:	movzx  ecx,WORD PTR [rbp-0xa]
  411640:	movsxd rdx,ecx
  411643:	add    rax,rdx
  411646:	mov    rdi,rax
  411649:	call   4165e0 <main@@Base+0x28b0>
  41164e:	movzx  ecx,al
  411651:	mov    DWORD PTR [rbp-0x24],ecx
  411654:	jmp    411663 <test_mixed_type_union@@Base+0x17d3>
  411659:	xor    eax,eax
  41165b:	mov    DWORD PTR [rbp-0x24],eax
  41165e:	jmp    411663 <test_mixed_type_union@@Base+0x17d3>
  411663:	mov    eax,DWORD PTR [rbp-0x24]
  411666:	movzx  eax,al
  411669:	add    rsp,0x30
  41166d:	pop    rbp
  41166e:	ret    
  41166f:	nop
  411670:	push   rbp
  411671:	mov    rbp,rsp
  411674:	sub    rsp,0x40
  411678:	mov    QWORD PTR [rbp-0x10],rdi
  41167c:	mov    WORD PTR [rbp-0x1a],0x0
  411682:	cmp    QWORD PTR [rbp-0x10],0x0
  411687:	je     4116a1 <test_mixed_type_union@@Base+0x1811>
  41168d:	mov    al,0x1
  41168f:	test   al,0x1
  411691:	jne    41169c <test_mixed_type_union@@Base+0x180c>
  411697:	jmp    4116a1 <test_mixed_type_union@@Base+0x1811>
  41169c:	jmp    4116c0 <test_mixed_type_union@@Base+0x1830>
  4116a1:	lea    rdi,[rip+0x133f0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4116a8:	lea    rsi,[rip+0x1340f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4116af:	mov    edx,0x334
  4116b4:	lea    rcx,[rip+0x15042]        # 4266fd <_IO_stdin_used@@Base+0x46fd>
  4116bb:	call   404090 <__assert_fail@plt>
  4116c0:	mov    WORD PTR [rbp-0x1c],0x3
  4116c6:	mov    rax,QWORD PTR [rbp-0x10]
  4116ca:	mov    rcx,QWORD PTR [rbp-0x10]
  4116ce:	mov    rdi,rcx
  4116d1:	mov    QWORD PTR [rbp-0x30],rax
  4116d5:	call   414210 <main@@Base+0x4e0>
  4116da:	xor    edx,edx
  4116dc:	mov    ecx,edx
  4116de:	movsxd rsi,eax
  4116e1:	sub    rcx,rsi
  4116e4:	mov    rsi,QWORD PTR [rbp-0x30]
  4116e8:	add    rsi,rcx
  4116eb:	mov    QWORD PTR [rbp-0x28],rsi
  4116ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4116f3:	mov    rdi,rcx
  4116f6:	call   414230 <main@@Base+0x500>
  4116fb:	movzx  edx,ax
  4116fe:	mov    ecx,edx
  411700:	movzx  edx,WORD PTR [rbp-0x1c]
  411704:	add    edx,0x3
  411707:	movsxd rsi,edx
  41170a:	shl    rsi,0x1
  41170e:	cmp    rcx,rsi
  411711:	jb     41173b <test_mixed_type_union@@Base+0x18ab>
  411717:	mov    rax,QWORD PTR [rbp-0x28]
  41171b:	movzx  ecx,WORD PTR [rbp-0x1c]
  41171f:	movsxd rdx,ecx
  411722:	shl    rdx,0x1
  411726:	add    rax,rdx
  411729:	add    rax,0x4
  41172f:	mov    rdi,rax
  411732:	call   414230 <main@@Base+0x500>
  411737:	mov    WORD PTR [rbp-0x1a],ax
  41173b:	cmp    WORD PTR [rbp-0x1a],0x0
  411740:	je     411780 <test_mixed_type_union@@Base+0x18f0>
  411746:	mov    rax,QWORD PTR [rbp-0x10]
  41174a:	movzx  ecx,WORD PTR [rbp-0x1a]
  41174e:	movsxd rdx,ecx
  411751:	add    rax,rdx
  411754:	mov    QWORD PTR [rbp-0x18],rax
  411758:	mov    rax,QWORD PTR [rbp-0x18]
  41175c:	mov    rdx,QWORD PTR [rbp-0x18]
  411760:	mov    rdi,rdx
  411763:	mov    QWORD PTR [rbp-0x38],rax
  411767:	call   4141e0 <main@@Base+0x4b0>
  41176c:	mov    eax,eax
  41176e:	mov    edx,eax
  411770:	mov    rsi,QWORD PTR [rbp-0x38]
  411774:	add    rsi,rdx
  411777:	mov    QWORD PTR [rbp-0x8],rsi
  41177b:	jmp    411788 <test_mixed_type_union@@Base+0x18f8>
  411780:	mov    QWORD PTR [rbp-0x8],0x0
  411788:	mov    rax,QWORD PTR [rbp-0x8]
  41178c:	add    rsp,0x40
  411790:	pop    rbp
  411791:	ret    
  411792:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41179c:	nop    DWORD PTR [rax+0x0]
  4117a0:	push   rbp
  4117a1:	mov    rbp,rsp
  4117a4:	sub    rsp,0x30
  4117a8:	mov    QWORD PTR [rbp-0x8],rdi
  4117ac:	mov    WORD PTR [rbp-0xa],0x0
  4117b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4117b7:	je     4117d1 <test_mixed_type_union@@Base+0x1941>
  4117bd:	mov    al,0x1
  4117bf:	test   al,0x1
  4117c1:	jne    4117cc <test_mixed_type_union@@Base+0x193c>
  4117c7:	jmp    4117d1 <test_mixed_type_union@@Base+0x1941>
  4117cc:	jmp    4117f0 <test_mixed_type_union@@Base+0x1960>
  4117d1:	lea    rdi,[rip+0x132c0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4117d8:	lea    rsi,[rip+0x132df]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4117df:	mov    edx,0x302
  4117e4:	lea    rcx,[rip+0x14f58]        # 426743 <_IO_stdin_used@@Base+0x4743>
  4117eb:	call   404090 <__assert_fail@plt>
  4117f0:	mov    WORD PTR [rbp-0xc],0x0
  4117f6:	mov    rax,QWORD PTR [rbp-0x8]
  4117fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4117fe:	mov    rdi,rcx
  411801:	mov    QWORD PTR [rbp-0x20],rax
  411805:	call   414210 <main@@Base+0x4e0>
  41180a:	xor    edx,edx
  41180c:	mov    ecx,edx
  41180e:	movsxd rsi,eax
  411811:	sub    rcx,rsi
  411814:	mov    rsi,QWORD PTR [rbp-0x20]
  411818:	add    rsi,rcx
  41181b:	mov    QWORD PTR [rbp-0x18],rsi
  41181f:	mov    rcx,QWORD PTR [rbp-0x18]
  411823:	mov    rdi,rcx
  411826:	call   414230 <main@@Base+0x500>
  41182b:	movzx  edx,ax
  41182e:	mov    ecx,edx
  411830:	movzx  edx,WORD PTR [rbp-0xc]
  411834:	add    edx,0x3
  411837:	movsxd rsi,edx
  41183a:	shl    rsi,0x1
  41183e:	cmp    rcx,rsi
  411841:	jb     41186b <test_mixed_type_union@@Base+0x19db>
  411847:	mov    rax,QWORD PTR [rbp-0x18]
  41184b:	movzx  ecx,WORD PTR [rbp-0xc]
  41184f:	movsxd rdx,ecx
  411852:	shl    rdx,0x1
  411856:	add    rax,rdx
  411859:	add    rax,0x4
  41185f:	mov    rdi,rax
  411862:	call   414230 <main@@Base+0x500>
  411867:	mov    WORD PTR [rbp-0xa],ax
  41186b:	movzx  eax,WORD PTR [rbp-0xa]
  41186f:	cmp    eax,0x0
  411872:	je     411896 <test_mixed_type_union@@Base+0x1a06>
  411878:	mov    rax,QWORD PTR [rbp-0x8]
  41187c:	movzx  ecx,WORD PTR [rbp-0xa]
  411880:	movsxd rdx,ecx
  411883:	add    rax,rdx
  411886:	mov    rdi,rax
  411889:	call   414ff0 <main@@Base+0x12c0>
  41188e:	mov    DWORD PTR [rbp-0x24],eax
  411891:	jmp    4118a0 <test_mixed_type_union@@Base+0x1a10>
  411896:	xor    eax,eax
  411898:	mov    DWORD PTR [rbp-0x24],eax
  41189b:	jmp    4118a0 <test_mixed_type_union@@Base+0x1a10>
  4118a0:	mov    eax,DWORD PTR [rbp-0x24]
  4118a3:	add    rsp,0x30
  4118a7:	pop    rbp
  4118a8:	ret    
  4118a9:	nop    DWORD PTR [rax+0x0]
  4118b0:	push   rbp
  4118b1:	mov    rbp,rsp
  4118b4:	sub    rsp,0x30
  4118b8:	mov    QWORD PTR [rbp-0x8],rdi
  4118bc:	mov    WORD PTR [rbp-0xa],0x0
  4118c2:	cmp    QWORD PTR [rbp-0x8],0x0
  4118c7:	je     4118e1 <test_mixed_type_union@@Base+0x1a51>
  4118cd:	mov    al,0x1
  4118cf:	test   al,0x1
  4118d1:	jne    4118dc <test_mixed_type_union@@Base+0x1a4c>
  4118d7:	jmp    4118e1 <test_mixed_type_union@@Base+0x1a51>
  4118dc:	jmp    411900 <test_mixed_type_union@@Base+0x1a70>
  4118e1:	lea    rdi,[rip+0x131b0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4118e8:	lea    rsi,[rip+0x131cf]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4118ef:	mov    edx,0x335
  4118f4:	lea    rcx,[rip+0x14e8f]        # 42678a <_IO_stdin_used@@Base+0x478a>
  4118fb:	call   404090 <__assert_fail@plt>
  411900:	mov    WORD PTR [rbp-0xc],0x4
  411906:	mov    rax,QWORD PTR [rbp-0x8]
  41190a:	mov    rcx,QWORD PTR [rbp-0x8]
  41190e:	mov    rdi,rcx
  411911:	mov    QWORD PTR [rbp-0x20],rax
  411915:	call   414210 <main@@Base+0x4e0>
  41191a:	xor    edx,edx
  41191c:	mov    ecx,edx
  41191e:	movsxd rsi,eax
  411921:	sub    rcx,rsi
  411924:	mov    rsi,QWORD PTR [rbp-0x20]
  411928:	add    rsi,rcx
  41192b:	mov    QWORD PTR [rbp-0x18],rsi
  41192f:	mov    rcx,QWORD PTR [rbp-0x18]
  411933:	mov    rdi,rcx
  411936:	call   414230 <main@@Base+0x500>
  41193b:	movzx  edx,ax
  41193e:	mov    ecx,edx
  411940:	movzx  edx,WORD PTR [rbp-0xc]
  411944:	add    edx,0x3
  411947:	movsxd rsi,edx
  41194a:	shl    rsi,0x1
  41194e:	cmp    rcx,rsi
  411951:	jb     41197b <test_mixed_type_union@@Base+0x1aeb>
  411957:	mov    rax,QWORD PTR [rbp-0x18]
  41195b:	movzx  ecx,WORD PTR [rbp-0xc]
  41195f:	movsxd rdx,ecx
  411962:	shl    rdx,0x1
  411966:	add    rax,rdx
  411969:	add    rax,0x4
  41196f:	mov    rdi,rax
  411972:	call   414230 <main@@Base+0x500>
  411977:	mov    WORD PTR [rbp-0xa],ax
  41197b:	movzx  eax,WORD PTR [rbp-0xa]
  41197f:	cmp    eax,0x0
  411982:	je     4119a9 <test_mixed_type_union@@Base+0x1b19>
  411988:	mov    rax,QWORD PTR [rbp-0x8]
  41198c:	movzx  ecx,WORD PTR [rbp-0xa]
  411990:	movsxd rdx,ecx
  411993:	add    rax,rdx
  411996:	mov    rdi,rax
  411999:	call   4165e0 <main@@Base+0x28b0>
  41199e:	movzx  ecx,al
  4119a1:	mov    DWORD PTR [rbp-0x24],ecx
  4119a4:	jmp    4119b3 <test_mixed_type_union@@Base+0x1b23>
  4119a9:	xor    eax,eax
  4119ab:	mov    DWORD PTR [rbp-0x24],eax
  4119ae:	jmp    4119b3 <test_mixed_type_union@@Base+0x1b23>
  4119b3:	mov    eax,DWORD PTR [rbp-0x24]
  4119b6:	movzx  eax,al
  4119b9:	add    rsp,0x30
  4119bd:	pop    rbp
  4119be:	ret    
  4119bf:	nop
  4119c0:	push   rbp
  4119c1:	mov    rbp,rsp
  4119c4:	sub    rsp,0x20
  4119c8:	mov    QWORD PTR [rbp-0x8],rdi
  4119cc:	cmp    QWORD PTR [rbp-0x8],0x0
  4119d1:	je     4119f4 <test_mixed_type_union@@Base+0x1b64>
  4119d7:	mov    rax,QWORD PTR [rbp-0x8]
  4119db:	mov    QWORD PTR [rbp-0x10],rax
  4119df:	call   418420 <main@@Base+0x46f0>
  4119e4:	mov    rcx,QWORD PTR [rbp-0x10]
  4119e8:	add    rcx,rax
  4119eb:	mov    QWORD PTR [rbp-0x18],rcx
  4119ef:	jmp    411a01 <test_mixed_type_union@@Base+0x1b71>
  4119f4:	xor    eax,eax
  4119f6:	mov    ecx,eax
  4119f8:	mov    QWORD PTR [rbp-0x18],rcx
  4119fc:	jmp    411a01 <test_mixed_type_union@@Base+0x1b71>
  411a01:	mov    rax,QWORD PTR [rbp-0x18]
  411a05:	add    rsp,0x20
  411a09:	pop    rbp
  411a0a:	ret    
  411a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  411a10:	push   rbp
  411a11:	mov    rbp,rsp
  411a14:	sub    rsp,0x40
  411a18:	mov    QWORD PTR [rbp-0x10],rdi
  411a1c:	mov    WORD PTR [rbp-0x1a],0x0
  411a22:	cmp    QWORD PTR [rbp-0x10],0x0
  411a27:	je     411a41 <test_mixed_type_union@@Base+0x1bb1>
  411a2d:	mov    al,0x1
  411a2f:	test   al,0x1
  411a31:	jne    411a3c <test_mixed_type_union@@Base+0x1bac>
  411a37:	jmp    411a41 <test_mixed_type_union@@Base+0x1bb1>
  411a3c:	jmp    411a60 <test_mixed_type_union@@Base+0x1bd0>
  411a41:	lea    rdi,[rip+0x13050]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  411a48:	lea    rsi,[rip+0x1306f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  411a4f:	mov    edx,0x335
  411a54:	lea    rcx,[rip+0x14d82]        # 4267dd <_IO_stdin_used@@Base+0x47dd>
  411a5b:	call   404090 <__assert_fail@plt>
  411a60:	mov    WORD PTR [rbp-0x1c],0x5
  411a66:	mov    rax,QWORD PTR [rbp-0x10]
  411a6a:	mov    rcx,QWORD PTR [rbp-0x10]
  411a6e:	mov    rdi,rcx
  411a71:	mov    QWORD PTR [rbp-0x30],rax
  411a75:	call   414210 <main@@Base+0x4e0>
  411a7a:	xor    edx,edx
  411a7c:	mov    ecx,edx
  411a7e:	movsxd rsi,eax
  411a81:	sub    rcx,rsi
  411a84:	mov    rsi,QWORD PTR [rbp-0x30]
  411a88:	add    rsi,rcx
  411a8b:	mov    QWORD PTR [rbp-0x28],rsi
  411a8f:	mov    rcx,QWORD PTR [rbp-0x28]
  411a93:	mov    rdi,rcx
  411a96:	call   414230 <main@@Base+0x500>
  411a9b:	movzx  edx,ax
  411a9e:	mov    ecx,edx
  411aa0:	movzx  edx,WORD PTR [rbp-0x1c]
  411aa4:	add    edx,0x3
  411aa7:	movsxd rsi,edx
  411aaa:	shl    rsi,0x1
  411aae:	cmp    rcx,rsi
  411ab1:	jb     411adb <test_mixed_type_union@@Base+0x1c4b>
  411ab7:	mov    rax,QWORD PTR [rbp-0x28]
  411abb:	movzx  ecx,WORD PTR [rbp-0x1c]
  411abf:	movsxd rdx,ecx
  411ac2:	shl    rdx,0x1
  411ac6:	add    rax,rdx
  411ac9:	add    rax,0x4
  411acf:	mov    rdi,rax
  411ad2:	call   414230 <main@@Base+0x500>
  411ad7:	mov    WORD PTR [rbp-0x1a],ax
  411adb:	cmp    WORD PTR [rbp-0x1a],0x0
  411ae0:	je     411b20 <test_mixed_type_union@@Base+0x1c90>
  411ae6:	mov    rax,QWORD PTR [rbp-0x10]
  411aea:	movzx  ecx,WORD PTR [rbp-0x1a]
  411aee:	movsxd rdx,ecx
  411af1:	add    rax,rdx
  411af4:	mov    QWORD PTR [rbp-0x18],rax
  411af8:	mov    rax,QWORD PTR [rbp-0x18]
  411afc:	mov    rdx,QWORD PTR [rbp-0x18]
  411b00:	mov    rdi,rdx
  411b03:	mov    QWORD PTR [rbp-0x38],rax
  411b07:	call   4141e0 <main@@Base+0x4b0>
  411b0c:	mov    eax,eax
  411b0e:	mov    edx,eax
  411b10:	mov    rsi,QWORD PTR [rbp-0x38]
  411b14:	add    rsi,rdx
  411b17:	mov    QWORD PTR [rbp-0x8],rsi
  411b1b:	jmp    411b28 <test_mixed_type_union@@Base+0x1c98>
  411b20:	mov    QWORD PTR [rbp-0x8],0x0
  411b28:	mov    rax,QWORD PTR [rbp-0x8]
  411b2c:	add    rsp,0x40
  411b30:	pop    rbp
  411b31:	ret    
  411b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411b3c:	nop    DWORD PTR [rax+0x0]
  411b40:	push   rbp
  411b41:	mov    rbp,rsp
  411b44:	sub    rsp,0x10
  411b48:	mov    QWORD PTR [rbp-0x8],rdi
  411b4c:	mov    rdi,QWORD PTR [rbp-0x8]
  411b50:	call   411a10 <test_mixed_type_union@@Base+0x1b80>
  411b55:	mov    rdi,rax
  411b58:	call   4119c0 <test_mixed_type_union@@Base+0x1b30>
  411b5d:	add    rsp,0x10
  411b61:	pop    rbp
  411b62:	ret    
  411b63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411b6d:	nop    DWORD PTR [rax]
  411b70:	push   rbp
  411b71:	mov    rbp,rsp
  411b74:	sub    rsp,0x20
  411b78:	xor    esi,esi
  411b7a:	mov    QWORD PTR [rbp-0x18],rdi
  411b7e:	lea    rax,[rbp-0x10]
  411b82:	mov    rdi,rax
  411b85:	mov    edx,0x10
  411b8a:	call   4040a0 <memset@plt>
  411b8f:	mov    rdi,QWORD PTR [rbp-0x18]
  411b93:	call   4118b0 <test_mixed_type_union@@Base+0x1a20>
  411b98:	mov    BYTE PTR [rbp-0x10],al
  411b9b:	movzx  ecx,BYTE PTR [rbp-0x10]
  411b9f:	cmp    ecx,0x0
  411ba2:	jne    411bad <test_mixed_type_union@@Base+0x1d1d>
  411ba8:	jmp    411bba <test_mixed_type_union@@Base+0x1d2a>
  411bad:	mov    rdi,QWORD PTR [rbp-0x18]
  411bb1:	call   411a10 <test_mixed_type_union@@Base+0x1b80>
  411bb6:	mov    QWORD PTR [rbp-0x8],rax
  411bba:	mov    al,BYTE PTR [rbp-0x10]
  411bbd:	mov    rdx,QWORD PTR [rbp-0x8]
  411bc1:	add    rsp,0x20
  411bc5:	pop    rbp
  411bc6:	ret    
  411bc7:	nop    WORD PTR [rax+rax*1+0x0]
  411bd0:	push   rbp
  411bd1:	mov    rbp,rsp
  411bd4:	sub    rsp,0x10
  411bd8:	mov    BYTE PTR [rbp-0x10],dil
  411bdc:	mov    QWORD PTR [rbp-0x8],rsi
  411be0:	mov    rdi,QWORD PTR [rbp-0x8]
  411be4:	call   4119c0 <test_mixed_type_union@@Base+0x1b30>
  411be9:	add    rsp,0x10
  411bed:	pop    rbp
  411bee:	ret    
  411bef:	nop
  411bf0:	push   rbp
  411bf1:	mov    rbp,rsp
  411bf4:	sub    rsp,0x20
  411bf8:	mov    QWORD PTR [rbp-0x18],rdi
  411bfc:	mov    rdi,QWORD PTR [rbp-0x18]
  411c00:	call   411d40 <test_mixed_type_union@@Base+0x1eb0>
  411c05:	mov    QWORD PTR [rbp-0x10],rax
  411c09:	mov    rdi,QWORD PTR [rbp-0x18]
  411c0d:	call   418430 <main@@Base+0x4700>
  411c12:	mov    QWORD PTR [rbp-0x8],rax
  411c16:	mov    rdi,QWORD PTR [rbp-0x10]
  411c1a:	call   416550 <main@@Base+0x2820>
  411c1f:	mov    rcx,QWORD PTR [rbp-0x8]
  411c23:	mov    rdi,rcx
  411c26:	mov    QWORD PTR [rbp-0x20],rax
  411c2a:	call   416550 <main@@Base+0x2820>
  411c2f:	mov    rcx,QWORD PTR [rbp-0x20]
  411c33:	cmp    rcx,rax
  411c36:	jne    411c50 <test_mixed_type_union@@Base+0x1dc0>
  411c3c:	mov    al,0x1
  411c3e:	test   al,0x1
  411c40:	jne    411c4b <test_mixed_type_union@@Base+0x1dbb>
  411c46:	jmp    411c50 <test_mixed_type_union@@Base+0x1dc0>
  411c4b:	jmp    411c6f <test_mixed_type_union@@Base+0x1ddf>
  411c50:	lea    rdi,[rip+0x145bf]        # 426216 <_IO_stdin_used@@Base+0x4216>
  411c57:	lea    rsi,[rip+0x12e60]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  411c5e:	mov    edx,0x337
  411c63:	lea    rcx,[rip+0x14bb8]        # 426822 <_IO_stdin_used@@Base+0x4822>
  411c6a:	call   404090 <__assert_fail@plt>
  411c6f:	mov    rax,QWORD PTR [rbp-0x10]
  411c73:	mov    rdx,QWORD PTR [rbp-0x8]
  411c77:	add    rsp,0x20
  411c7b:	pop    rbp
  411c7c:	ret    
  411c7d:	nop    DWORD PTR [rax]
  411c80:	push   rbp
  411c81:	mov    rbp,rsp
  411c84:	sub    rsp,0x30
  411c88:	xor    eax,eax
  411c8a:	mov    QWORD PTR [rbp-0x20],rdi
  411c8e:	mov    QWORD PTR [rbp-0x18],rsi
  411c92:	mov    QWORD PTR [rbp-0x28],rdx
  411c96:	lea    rcx,[rbp-0x10]
  411c9a:	mov    rdi,rcx
  411c9d:	mov    esi,eax
  411c9f:	mov    edx,0x10
  411ca4:	call   4040a0 <memset@plt>
  411ca9:	mov    rdi,QWORD PTR [rbp-0x20]
  411cad:	call   416550 <main@@Base+0x2820>
  411cb2:	mov    QWORD PTR [rbp-0x30],rax
  411cb6:	mov    rax,QWORD PTR [rbp-0x30]
  411cba:	cmp    rax,QWORD PTR [rbp-0x28]
  411cbe:	jbe    411cd8 <test_mixed_type_union@@Base+0x1e48>
  411cc4:	mov    al,0x1
  411cc6:	test   al,0x1
  411cc8:	jne    411cd3 <test_mixed_type_union@@Base+0x1e43>
  411cce:	jmp    411cd8 <test_mixed_type_union@@Base+0x1e48>
  411cd3:	jmp    411cf7 <test_mixed_type_union@@Base+0x1e67>
  411cd8:	lea    rdi,[rip+0x145f8]        # 4262d7 <_IO_stdin_used@@Base+0x42d7>
  411cdf:	lea    rsi,[rip+0x12dd8]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  411ce6:	mov    edx,0x305
  411ceb:	lea    rcx,[rip+0x14bce]        # 4268c0 <_IO_stdin_used@@Base+0x48c0>
  411cf2:	call   404090 <__assert_fail@plt>
  411cf7:	mov    rax,QWORD PTR [rbp-0x20]
  411cfb:	mov    rcx,QWORD PTR [rbp-0x28]
  411cff:	mov    dl,BYTE PTR [rax+rcx*1]
  411d02:	mov    BYTE PTR [rbp-0x10],dl
  411d05:	movzx  esi,BYTE PTR [rbp-0x10]
  411d09:	cmp    esi,0x0
  411d0c:	jne    411d17 <test_mixed_type_union@@Base+0x1e87>
  411d12:	jmp    411d28 <test_mixed_type_union@@Base+0x1e98>
  411d17:	mov    rdi,QWORD PTR [rbp-0x18]
  411d1b:	mov    rsi,QWORD PTR [rbp-0x28]
  411d1f:	call   40fb60 <test_union_vector@@Base+0xa20>
  411d24:	mov    QWORD PTR [rbp-0x8],rax
  411d28:	mov    al,BYTE PTR [rbp-0x10]
  411d2b:	mov    rdx,QWORD PTR [rbp-0x8]
  411d2f:	add    rsp,0x30
  411d33:	pop    rbp
  411d34:	ret    
  411d35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d3f:	nop
  411d40:	push   rbp
  411d41:	mov    rbp,rsp
  411d44:	sub    rsp,0x40
  411d48:	mov    QWORD PTR [rbp-0x10],rdi
  411d4c:	mov    WORD PTR [rbp-0x1a],0x0
  411d52:	cmp    QWORD PTR [rbp-0x10],0x0
  411d57:	je     411d71 <test_mixed_type_union@@Base+0x1ee1>
  411d5d:	mov    al,0x1
  411d5f:	test   al,0x1
  411d61:	jne    411d6c <test_mixed_type_union@@Base+0x1edc>
  411d67:	jmp    411d71 <test_mixed_type_union@@Base+0x1ee1>
  411d6c:	jmp    411d90 <test_mixed_type_union@@Base+0x1f00>
  411d71:	lea    rdi,[rip+0x12d20]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  411d78:	lea    rsi,[rip+0x12d3f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  411d7f:	mov    edx,0x337
  411d84:	lea    rcx,[rip+0x14b95]        # 426920 <_IO_stdin_used@@Base+0x4920>
  411d8b:	call   404090 <__assert_fail@plt>
  411d90:	mov    WORD PTR [rbp-0x1c],0x8
  411d96:	mov    rax,QWORD PTR [rbp-0x10]
  411d9a:	mov    rcx,QWORD PTR [rbp-0x10]
  411d9e:	mov    rdi,rcx
  411da1:	mov    QWORD PTR [rbp-0x30],rax
  411da5:	call   414210 <main@@Base+0x4e0>
  411daa:	xor    edx,edx
  411dac:	mov    ecx,edx
  411dae:	movsxd rsi,eax
  411db1:	sub    rcx,rsi
  411db4:	mov    rsi,QWORD PTR [rbp-0x30]
  411db8:	add    rsi,rcx
  411dbb:	mov    QWORD PTR [rbp-0x28],rsi
  411dbf:	mov    rcx,QWORD PTR [rbp-0x28]
  411dc3:	mov    rdi,rcx
  411dc6:	call   414230 <main@@Base+0x500>
  411dcb:	movzx  edx,ax
  411dce:	mov    ecx,edx
  411dd0:	movzx  edx,WORD PTR [rbp-0x1c]
  411dd4:	add    edx,0x3
  411dd7:	movsxd rsi,edx
  411dda:	shl    rsi,0x1
  411dde:	cmp    rcx,rsi
  411de1:	jb     411e0b <test_mixed_type_union@@Base+0x1f7b>
  411de7:	mov    rax,QWORD PTR [rbp-0x28]
  411deb:	movzx  ecx,WORD PTR [rbp-0x1c]
  411def:	movsxd rdx,ecx
  411df2:	shl    rdx,0x1
  411df6:	add    rax,rdx
  411df9:	add    rax,0x4
  411dff:	mov    rdi,rax
  411e02:	call   414230 <main@@Base+0x500>
  411e07:	mov    WORD PTR [rbp-0x1a],ax
  411e0b:	cmp    WORD PTR [rbp-0x1a],0x0
  411e10:	je     411e56 <test_mixed_type_union@@Base+0x1fc6>
  411e16:	mov    rax,QWORD PTR [rbp-0x10]
  411e1a:	movzx  ecx,WORD PTR [rbp-0x1a]
  411e1e:	movsxd rdx,ecx
  411e21:	add    rax,rdx
  411e24:	mov    QWORD PTR [rbp-0x18],rax
  411e28:	mov    rax,QWORD PTR [rbp-0x18]
  411e2c:	add    rax,0x4
  411e32:	mov    rdx,QWORD PTR [rbp-0x18]
  411e36:	mov    rdi,rdx
  411e39:	mov    QWORD PTR [rbp-0x38],rax
  411e3d:	call   4141e0 <main@@Base+0x4b0>
  411e42:	mov    eax,eax
  411e44:	mov    edx,eax
  411e46:	mov    rsi,QWORD PTR [rbp-0x38]
  411e4a:	add    rsi,rdx
  411e4d:	mov    QWORD PTR [rbp-0x8],rsi
  411e51:	jmp    411e5e <test_mixed_type_union@@Base+0x1fce>
  411e56:	mov    QWORD PTR [rbp-0x8],0x0
  411e5e:	mov    rax,QWORD PTR [rbp-0x8]
  411e62:	add    rsp,0x40
  411e66:	pop    rbp
  411e67:	ret    
  411e68:	nop    DWORD PTR [rax+rax*1+0x0]
  411e70:	push   rbp
  411e71:	mov    rbp,rsp
  411e74:	sub    rsp,0x20
  411e78:	mov    QWORD PTR [rbp-0x10],rdi
  411e7c:	mov    QWORD PTR [rbp-0x8],rsi
  411e80:	mov    QWORD PTR [rbp-0x18],rdx
  411e84:	mov    rdi,QWORD PTR [rbp-0x8]
  411e88:	mov    rsi,QWORD PTR [rbp-0x18]
  411e8c:	call   418560 <main@@Base+0x4830>
  411e91:	add    rsp,0x20
  411e95:	pop    rbp
  411e96:	ret    
  411e97:	nop    WORD PTR [rax+rax*1+0x0]
  411ea0:	push   rbp
  411ea1:	mov    rbp,rsp
  411ea4:	sub    rsp,0x10
  411ea8:	mov    QWORD PTR [rbp-0x10],rdi
  411eac:	mov    QWORD PTR [rbp-0x8],rsi
  411eb0:	mov    rdi,QWORD PTR [rbp-0x10]
  411eb4:	call   416550 <main@@Base+0x2820>
  411eb9:	add    rsp,0x10
  411ebd:	pop    rbp
  411ebe:	ret    
  411ebf:	nop

0000000000411ec0 <test_add_set_defaults@@Base>:
  411ec0:	push   rbp
  411ec1:	mov    rbp,rsp
  411ec4:	sub    rsp,0x60
  411ec8:	mov    QWORD PTR [rbp-0x10],rdi
  411ecc:	mov    rdi,QWORD PTR [rbp-0x10]
  411ed0:	call   418ef0 <flatcc_builder_reset@@Base>
  411ed5:	mov    rdi,QWORD PTR [rbp-0x10]
  411ed9:	mov    DWORD PTR [rbp-0x2c],eax
  411edc:	call   40a0d0 <gen_monster@@Base+0x760>
  411ee1:	mov    rdi,QWORD PTR [rbp-0x10]
  411ee5:	lea    rsi,[rip+0x1046b]        # 422357 <_IO_stdin_used@@Base+0x357>
  411eec:	mov    DWORD PTR [rbp-0x30],eax
  411eef:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  411ef4:	mov    rdi,QWORD PTR [rbp-0x10]
  411ef8:	mov    esi,0x64
  411efd:	mov    DWORD PTR [rbp-0x34],eax
  411f00:	call   40a120 <gen_monster@@Base+0x7b0>
  411f05:	mov    rdi,QWORD PTR [rbp-0x10]
  411f09:	mov    esi,0x64
  411f0e:	mov    DWORD PTR [rbp-0x38],eax
  411f11:	call   412100 <test_add_set_defaults@@Base+0x240>
  411f16:	mov    rdi,QWORD PTR [rbp-0x10]
  411f1a:	mov    esi,0x8
  411f1f:	mov    DWORD PTR [rbp-0x3c],eax
  411f22:	call   40a1e0 <gen_monster@@Base+0x870>
  411f27:	mov    rdi,QWORD PTR [rbp-0x10]
  411f2b:	mov    DWORD PTR [rbp-0x40],eax
  411f2e:	call   40ac50 <gen_monster@@Base+0x12e0>
  411f33:	mov    rdi,QWORD PTR [rbp-0x10]
  411f37:	lea    rsi,[rbp-0x20]
  411f3b:	mov    DWORD PTR [rbp-0x44],eax
  411f3e:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  411f43:	mov    QWORD PTR [rbp-0x18],rax
  411f47:	mov    rdi,QWORD PTR [rbp-0x18]
  411f4b:	call   404480 <verify_empty_monster@@Base+0x260>
  411f50:	mov    QWORD PTR [rbp-0x28],rax
  411f54:	mov    rdi,QWORD PTR [rbp-0x28]
  411f58:	call   404600 <verify_empty_monster@@Base+0x3e0>
  411f5d:	cmp    eax,0x0
  411f60:	je     411f80 <test_add_set_defaults@@Base+0xc0>
  411f66:	lea    rdi,[rip+0x125bf]        # 42452c <_IO_stdin_used@@Base+0x252c>
  411f6d:	mov    al,0x0
  411f6f:	call   404070 <printf@plt>
  411f74:	mov    DWORD PTR [rbp-0x4],0xffffffff
  411f7b:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  411f80:	mov    rdi,QWORD PTR [rbp-0x28]
  411f84:	call   408520 <verify_monster@@Base+0x19d0>
  411f89:	cmp    eax,0x0
  411f8c:	jne    411fac <test_add_set_defaults@@Base+0xec>
  411f92:	lea    rdi,[rip+0x125bf]        # 424558 <_IO_stdin_used@@Base+0x2558>
  411f99:	mov    al,0x0
  411f9b:	call   404070 <printf@plt>
  411fa0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  411fa7:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  411fac:	mov    rdi,QWORD PTR [rbp-0x28]
  411fb0:	call   412180 <test_add_set_defaults@@Base+0x2c0>
  411fb5:	cmp    eax,0x0
  411fb8:	je     411fd8 <test_add_set_defaults@@Base+0x118>
  411fbe:	lea    rdi,[rip+0x125c1]        # 424586 <_IO_stdin_used@@Base+0x2586>
  411fc5:	mov    al,0x0
  411fc7:	call   404070 <printf@plt>
  411fcc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  411fd3:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  411fd8:	mov    rdi,QWORD PTR [rbp-0x10]
  411fdc:	call   418ef0 <flatcc_builder_reset@@Base>
  411fe1:	mov    rdi,QWORD PTR [rbp-0x10]
  411fe5:	mov    DWORD PTR [rbp-0x48],eax
  411fe8:	call   40a0d0 <gen_monster@@Base+0x760>
  411fed:	mov    rdi,QWORD PTR [rbp-0x10]
  411ff1:	lea    rsi,[rip+0x1035f]        # 422357 <_IO_stdin_used@@Base+0x357>
  411ff8:	mov    DWORD PTR [rbp-0x4c],eax
  411ffb:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  412000:	mov    rdi,QWORD PTR [rbp-0x10]
  412004:	mov    esi,0x64
  412009:	mov    DWORD PTR [rbp-0x50],eax
  41200c:	call   412270 <test_add_set_defaults@@Base+0x3b0>
  412011:	mov    rdi,QWORD PTR [rbp-0x10]
  412015:	mov    esi,0x64
  41201a:	mov    DWORD PTR [rbp-0x54],eax
  41201d:	call   4122d0 <test_add_set_defaults@@Base+0x410>
  412022:	mov    rdi,QWORD PTR [rbp-0x10]
  412026:	mov    esi,0x8
  41202b:	mov    DWORD PTR [rbp-0x58],eax
  41202e:	call   412330 <test_add_set_defaults@@Base+0x470>
  412033:	mov    rdi,QWORD PTR [rbp-0x10]
  412037:	mov    DWORD PTR [rbp-0x5c],eax
  41203a:	call   40ac50 <gen_monster@@Base+0x12e0>
  41203f:	mov    rdi,QWORD PTR [rbp-0x10]
  412043:	lea    rsi,[rbp-0x20]
  412047:	mov    DWORD PTR [rbp-0x60],eax
  41204a:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  41204f:	mov    QWORD PTR [rbp-0x18],rax
  412053:	mov    rdi,QWORD PTR [rbp-0x18]
  412057:	call   404480 <verify_empty_monster@@Base+0x260>
  41205c:	mov    QWORD PTR [rbp-0x28],rax
  412060:	mov    rdi,QWORD PTR [rbp-0x28]
  412064:	call   404600 <verify_empty_monster@@Base+0x3e0>
  412069:	cmp    eax,0x0
  41206c:	jne    41208c <test_add_set_defaults@@Base+0x1cc>
  412072:	lea    rdi,[rip+0x1253c]        # 4245b5 <_IO_stdin_used@@Base+0x25b5>
  412079:	mov    al,0x0
  41207b:	call   404070 <printf@plt>
  412080:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412087:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  41208c:	mov    rdi,QWORD PTR [rbp-0x28]
  412090:	call   408520 <verify_monster@@Base+0x19d0>
  412095:	cmp    eax,0x0
  412098:	jne    4120b8 <test_add_set_defaults@@Base+0x1f8>
  41209e:	lea    rdi,[rip+0x12544]        # 4245e9 <_IO_stdin_used@@Base+0x25e9>
  4120a5:	mov    al,0x0
  4120a7:	call   404070 <printf@plt>
  4120ac:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4120b3:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  4120b8:	mov    rdi,QWORD PTR [rbp-0x28]
  4120bc:	call   412180 <test_add_set_defaults@@Base+0x2c0>
  4120c1:	cmp    eax,0x0
  4120c4:	jne    4120e4 <test_add_set_defaults@@Base+0x224>
  4120ca:	lea    rdi,[rip+0x12558]        # 424629 <_IO_stdin_used@@Base+0x2629>
  4120d1:	mov    al,0x0
  4120d3:	call   404070 <printf@plt>
  4120d8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4120df:	jmp    4120eb <test_add_set_defaults@@Base+0x22b>
  4120e4:	mov    DWORD PTR [rbp-0x4],0x0
  4120eb:	mov    eax,DWORD PTR [rbp-0x4]
  4120ee:	add    rsp,0x60
  4120f2:	pop    rbp
  4120f3:	ret    
  4120f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120fe:	xchg   ax,ax
  412100:	push   rbp
  412101:	mov    rbp,rsp
  412104:	sub    rsp,0x20
  412108:	mov    QWORD PTR [rbp-0x10],rdi
  41210c:	mov    WORD PTR [rbp-0x12],si
  412110:	movsx  eax,WORD PTR [rbp-0x12]
  412114:	cmp    eax,0x96
  412119:	jne    41212b <test_add_set_defaults@@Base+0x26b>
  41211f:	mov    DWORD PTR [rbp-0x4],0x0
  412126:	jmp    412171 <test_add_set_defaults@@Base+0x2b1>
  41212b:	mov    rdi,QWORD PTR [rbp-0x10]
  41212f:	mov    esi,0x1
  412134:	mov    edx,0x2
  412139:	mov    ecx,0x2
  41213e:	call   41ce20 <flatcc_builder_table_add@@Base>
  412143:	mov    QWORD PTR [rbp-0x20],rax
  412147:	cmp    rax,0x0
  41214b:	jne    41215d <test_add_set_defaults@@Base+0x29d>
  412151:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412158:	jmp    412171 <test_add_set_defaults@@Base+0x2b1>
  41215d:	mov    rdi,QWORD PTR [rbp-0x20]
  412161:	movsx  esi,WORD PTR [rbp-0x12]
  412165:	call   414c50 <main@@Base+0xf20>
  41216a:	mov    DWORD PTR [rbp-0x4],0x0
  412171:	mov    eax,DWORD PTR [rbp-0x4]
  412174:	add    rsp,0x20
  412178:	pop    rbp
  412179:	ret    
  41217a:	nop    WORD PTR [rax+rax*1+0x0]
  412180:	push   rbp
  412181:	mov    rbp,rsp
  412184:	sub    rsp,0x20
  412188:	mov    QWORD PTR [rbp-0x8],rdi
  41218c:	mov    WORD PTR [rbp-0xa],0x0
  412192:	cmp    QWORD PTR [rbp-0x8],0x0
  412197:	je     4121b1 <test_add_set_defaults@@Base+0x2f1>
  41219d:	mov    al,0x1
  41219f:	test   al,0x1
  4121a1:	jne    4121ac <test_add_set_defaults@@Base+0x2ec>
  4121a7:	jmp    4121b1 <test_add_set_defaults@@Base+0x2f1>
  4121ac:	jmp    4121d0 <test_add_set_defaults@@Base+0x310>
  4121b1:	lea    rdi,[rip+0x128e0]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  4121b8:	lea    rsi,[rip+0x128ff]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  4121bf:	mov    edx,0x2c1
  4121c4:	lea    rcx,[rip+0x14800]        # 4269cb <_IO_stdin_used@@Base+0x49cb>
  4121cb:	call   404090 <__assert_fail@plt>
  4121d0:	mov    WORD PTR [rbp-0xc],0x6
  4121d6:	mov    rax,QWORD PTR [rbp-0x8]
  4121da:	mov    rcx,QWORD PTR [rbp-0x8]
  4121de:	mov    rdi,rcx
  4121e1:	mov    QWORD PTR [rbp-0x20],rax
  4121e5:	call   414210 <main@@Base+0x4e0>
  4121ea:	xor    edx,edx
  4121ec:	mov    ecx,edx
  4121ee:	movsxd rsi,eax
  4121f1:	sub    rcx,rsi
  4121f4:	mov    rsi,QWORD PTR [rbp-0x20]
  4121f8:	add    rsi,rcx
  4121fb:	mov    QWORD PTR [rbp-0x18],rsi
  4121ff:	mov    rcx,QWORD PTR [rbp-0x18]
  412203:	mov    rdi,rcx
  412206:	call   414230 <main@@Base+0x500>
  41220b:	movzx  edx,ax
  41220e:	mov    ecx,edx
  412210:	movzx  edx,WORD PTR [rbp-0xc]
  412214:	add    edx,0x3
  412217:	movsxd rsi,edx
  41221a:	shl    rsi,0x1
  41221e:	cmp    rcx,rsi
  412221:	jb     41224b <test_add_set_defaults@@Base+0x38b>
  412227:	mov    rax,QWORD PTR [rbp-0x18]
  41222b:	movzx  ecx,WORD PTR [rbp-0xc]
  41222f:	movsxd rdx,ecx
  412232:	shl    rdx,0x1
  412236:	add    rax,rdx
  412239:	add    rax,0x4
  41223f:	mov    rdi,rax
  412242:	call   414230 <main@@Base+0x500>
  412247:	mov    WORD PTR [rbp-0xa],ax
  41224b:	movzx  eax,WORD PTR [rbp-0xa]
  41224f:	cmp    eax,0x0
  412252:	setne  cl
  412255:	and    cl,0x1
  412258:	movzx  eax,cl
  41225b:	add    rsp,0x20
  41225f:	pop    rbp
  412260:	ret    
  412261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41226b:	nop    DWORD PTR [rax+rax*1+0x0]
  412270:	push   rbp
  412271:	mov    rbp,rsp
  412274:	sub    rsp,0x20
  412278:	mov    QWORD PTR [rbp-0x10],rdi
  41227c:	mov    WORD PTR [rbp-0x12],si
  412280:	mov    rdi,QWORD PTR [rbp-0x10]
  412284:	mov    eax,0x2
  412289:	mov    esi,eax
  41228b:	mov    edx,0x2
  412290:	mov    ecx,eax
  412292:	call   41ce20 <flatcc_builder_table_add@@Base>
  412297:	mov    QWORD PTR [rbp-0x20],rax
  41229b:	cmp    rax,0x0
  41229f:	jne    4122b1 <test_add_set_defaults@@Base+0x3f1>
  4122a5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4122ac:	jmp    4122c5 <test_add_set_defaults@@Base+0x405>
  4122b1:	mov    rdi,QWORD PTR [rbp-0x20]
  4122b5:	movsx  esi,WORD PTR [rbp-0x12]
  4122b9:	call   414c50 <main@@Base+0xf20>
  4122be:	mov    DWORD PTR [rbp-0x4],0x0
  4122c5:	mov    eax,DWORD PTR [rbp-0x4]
  4122c8:	add    rsp,0x20
  4122cc:	pop    rbp
  4122cd:	ret    
  4122ce:	xchg   ax,ax
  4122d0:	push   rbp
  4122d1:	mov    rbp,rsp
  4122d4:	sub    rsp,0x20
  4122d8:	mov    QWORD PTR [rbp-0x10],rdi
  4122dc:	mov    WORD PTR [rbp-0x12],si
  4122e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4122e4:	mov    esi,0x1
  4122e9:	mov    edx,0x2
  4122ee:	mov    ecx,0x2
  4122f3:	call   41ce20 <flatcc_builder_table_add@@Base>
  4122f8:	mov    QWORD PTR [rbp-0x20],rax
  4122fc:	cmp    rax,0x0
  412300:	jne    412312 <test_add_set_defaults@@Base+0x452>
  412306:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41230d:	jmp    412326 <test_add_set_defaults@@Base+0x466>
  412312:	mov    rdi,QWORD PTR [rbp-0x20]
  412316:	movsx  esi,WORD PTR [rbp-0x12]
  41231a:	call   414c50 <main@@Base+0xf20>
  41231f:	mov    DWORD PTR [rbp-0x4],0x0
  412326:	mov    eax,DWORD PTR [rbp-0x4]
  412329:	add    rsp,0x20
  41232d:	pop    rbp
  41232e:	ret    
  41232f:	nop
  412330:	push   rbp
  412331:	mov    rbp,rsp
  412334:	sub    rsp,0x20
  412338:	mov    QWORD PTR [rbp-0x10],rdi
  41233c:	mov    BYTE PTR [rbp-0x11],sil
  412340:	mov    rdi,QWORD PTR [rbp-0x10]
  412344:	mov    esi,0x6
  412349:	mov    edx,0x1
  41234e:	mov    ecx,0x1
  412353:	call   41ce20 <flatcc_builder_table_add@@Base>
  412358:	mov    QWORD PTR [rbp-0x20],rax
  41235c:	cmp    rax,0x0
  412360:	jne    412372 <test_add_set_defaults@@Base+0x4b2>
  412366:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41236d:	jmp    412386 <test_add_set_defaults@@Base+0x4c6>
  412372:	mov    rdi,QWORD PTR [rbp-0x20]
  412376:	movsx  esi,BYTE PTR [rbp-0x11]
  41237a:	call   416650 <main@@Base+0x2920>
  41237f:	mov    DWORD PTR [rbp-0x4],0x0
  412386:	mov    eax,DWORD PTR [rbp-0x4]
  412389:	add    rsp,0x20
  41238d:	pop    rbp
  41238e:	ret    
  41238f:	nop

0000000000412390 <test_nested_buffer@@Base>:
  412390:	push   rbp
  412391:	mov    rbp,rsp
  412394:	sub    rsp,0x50
  412398:	mov    QWORD PTR [rbp-0x10],rdi
  41239c:	mov    rdi,QWORD PTR [rbp-0x10]
  4123a0:	call   418ef0 <flatcc_builder_reset@@Base>
  4123a5:	mov    rdi,QWORD PTR [rbp-0x10]
  4123a9:	mov    DWORD PTR [rbp-0x34],eax
  4123ac:	call   40a0d0 <gen_monster@@Base+0x760>
  4123b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4123b5:	lea    rsi,[rip+0xff9b]        # 422357 <_IO_stdin_used@@Base+0x357>
  4123bc:	mov    DWORD PTR [rbp-0x38],eax
  4123bf:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  4123c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4123c8:	mov    DWORD PTR [rbp-0x3c],eax
  4123cb:	call   412550 <test_nested_buffer@@Base+0x1c0>
  4123d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4123d4:	lea    rsi,[rip+0x12285]        # 424660 <_IO_stdin_used@@Base+0x2660>
  4123db:	mov    DWORD PTR [rbp-0x40],eax
  4123de:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  4123e3:	mov    rdi,QWORD PTR [rbp-0x10]
  4123e7:	mov    DWORD PTR [rbp-0x44],eax
  4123ea:	call   4125a0 <test_nested_buffer@@Base+0x210>
  4123ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4123f3:	mov    esi,0xa
  4123f8:	mov    DWORD PTR [rbp-0x48],eax
  4123fb:	call   40a120 <gen_monster@@Base+0x7b0>
  412400:	mov    rdi,QWORD PTR [rbp-0x10]
  412404:	mov    DWORD PTR [rbp-0x4c],eax
  412407:	call   40ac50 <gen_monster@@Base+0x12e0>
  41240c:	mov    rdi,QWORD PTR [rbp-0x10]
  412410:	lea    rsi,[rbp-0x20]
  412414:	mov    DWORD PTR [rbp-0x50],eax
  412417:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  41241c:	mov    rcx,QWORD PTR [rip+0x1ebd5]        # 430ff8 <stderr@GLIBC_2.2.5>
  412423:	mov    QWORD PTR [rbp-0x18],rax
  412427:	mov    rsi,QWORD PTR [rbp-0x18]
  41242b:	mov    rdx,QWORD PTR [rbp-0x20]
  41242f:	mov    rcx,QWORD PTR [rcx]
  412432:	lea    rdi,[rip+0x12237]        # 424670 <_IO_stdin_used@@Base+0x2670>
  412439:	call   404d60 <test_type_aliases@@Base+0x470>
  41243e:	mov    rdi,QWORD PTR [rbp-0x18]
  412442:	call   404480 <verify_empty_monster@@Base+0x260>
  412447:	mov    QWORD PTR [rbp-0x28],rax
  41244b:	mov    rdi,QWORD PTR [rbp-0x28]
  41244f:	call   407e10 <verify_monster@@Base+0x12c0>
  412454:	lea    rsi,[rip+0xfefc]        # 422357 <_IO_stdin_used@@Base+0x357>
  41245b:	mov    rdi,rax
  41245e:	call   4040d0 <strcmp@plt>
  412463:	cmp    eax,0x0
  412466:	je     412486 <test_nested_buffer@@Base+0xf6>
  41246c:	lea    rdi,[rip+0x1220f]        # 424682 <_IO_stdin_used@@Base+0x2682>
  412473:	mov    al,0x0
  412475:	call   404070 <printf@plt>
  41247a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412481:	jmp    41253b <test_nested_buffer@@Base+0x1ab>
  412486:	mov    rdi,QWORD PTR [rbp-0x28]
  41248a:	call   4125f0 <test_nested_buffer@@Base+0x260>
  41248f:	mov    QWORD PTR [rbp-0x30],rax
  412493:	mov    rdi,QWORD PTR [rbp-0x28]
  412497:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  41249c:	movsx  ecx,ax
  41249f:	cmp    ecx,0xa
  4124a2:	je     4124c2 <test_nested_buffer@@Base+0x132>
  4124a8:	lea    rdi,[rip+0x121ef]        # 42469e <_IO_stdin_used@@Base+0x269e>
  4124af:	mov    al,0x0
  4124b1:	call   404070 <printf@plt>
  4124b6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4124bd:	jmp    41253b <test_nested_buffer@@Base+0x1ab>
  4124c2:	mov    rdi,QWORD PTR [rbp-0x30]
  4124c6:	call   407e10 <verify_monster@@Base+0x12c0>
  4124cb:	cmp    rax,0x0
  4124cf:	je     4124da <test_nested_buffer@@Base+0x14a>
  4124d5:	jmp    4124f9 <test_nested_buffer@@Base+0x169>
  4124da:	lea    rdi,[rip+0x121e2]        # 4246c3 <_IO_stdin_used@@Base+0x26c3>
  4124e1:	lea    rsi,[rip+0x10707]        # 422bef <_IO_stdin_used@@Base+0xbef>
  4124e8:	mov    edx,0x88c
  4124ed:	lea    rcx,[rip+0x121e8]        # 4246dc <_IO_stdin_used@@Base+0x26dc>
  4124f4:	call   404090 <__assert_fail@plt>
  4124f9:	mov    rdi,QWORD PTR [rbp-0x30]
  4124fd:	call   407e10 <verify_monster@@Base+0x12c0>
  412502:	lea    rsi,[rip+0x12157]        # 424660 <_IO_stdin_used@@Base+0x2660>
  412509:	mov    rdi,rax
  41250c:	call   4040d0 <strcmp@plt>
  412511:	cmp    eax,0x0
  412514:	je     412534 <test_nested_buffer@@Base+0x1a4>
  41251a:	lea    rdi,[rip+0x121e6]        # 424707 <_IO_stdin_used@@Base+0x2707>
  412521:	mov    al,0x0
  412523:	call   404070 <printf@plt>
  412528:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41252f:	jmp    41253b <test_nested_buffer@@Base+0x1ab>
  412534:	mov    DWORD PTR [rbp-0x4],0x0
  41253b:	mov    eax,DWORD PTR [rbp-0x4]
  41253e:	add    rsp,0x50
  412542:	pop    rbp
  412543:	ret    
  412544:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41254e:	xchg   ax,ax
  412550:	push   rbp
  412551:	mov    rbp,rsp
  412554:	sub    rsp,0x10
  412558:	mov    QWORD PTR [rbp-0x8],rdi
  41255c:	mov    rdi,QWORD PTR [rbp-0x8]
  412560:	lea    rsi,[rip+0xfc19]        # 422180 <_IO_stdin_used@@Base+0x180>
  412567:	call   405ba0 <test_empty_monster@@Base+0x150>
  41256c:	cmp    eax,0x0
  41256f:	je     412582 <test_nested_buffer@@Base+0x1f2>
  412575:	mov    eax,0xffffffff
  41257a:	mov    DWORD PTR [rbp-0xc],eax
  41257d:	jmp    41258e <test_nested_buffer@@Base+0x1fe>
  412582:	mov    rdi,QWORD PTR [rbp-0x8]
  412586:	call   405bd0 <test_empty_monster@@Base+0x180>
  41258b:	mov    DWORD PTR [rbp-0xc],eax
  41258e:	mov    eax,DWORD PTR [rbp-0xc]
  412591:	add    rsp,0x10
  412595:	pop    rbp
  412596:	ret    
  412597:	nop    WORD PTR [rax+rax*1+0x0]
  4125a0:	push   rbp
  4125a1:	mov    rbp,rsp
  4125a4:	sub    rsp,0x20
  4125a8:	mov    QWORD PTR [rbp-0x8],rdi
  4125ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4125b0:	mov    rax,QWORD PTR [rbp-0x8]
  4125b4:	mov    rcx,QWORD PTR [rbp-0x8]
  4125b8:	mov    QWORD PTR [rbp-0x10],rdi
  4125bc:	mov    rdi,rcx
  4125bf:	mov    QWORD PTR [rbp-0x18],rax
  4125c3:	call   405c30 <test_empty_monster@@Base+0x1e0>
  4125c8:	mov    rdi,QWORD PTR [rbp-0x18]
  4125cc:	mov    esi,eax
  4125ce:	call   405c90 <test_empty_monster@@Base+0x240>
  4125d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4125d7:	mov    esi,eax
  4125d9:	call   418600 <main@@Base+0x48d0>
  4125de:	add    rsp,0x20
  4125e2:	pop    rbp
  4125e3:	ret    
  4125e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125ee:	xchg   ax,ax
  4125f0:	push   rbp
  4125f1:	mov    rbp,rsp
  4125f4:	sub    rsp,0x30
  4125f8:	mov    QWORD PTR [rbp-0x8],rdi
  4125fc:	lea    rax,[rip+0xfb7d]        # 422180 <_IO_stdin_used@@Base+0x180>
  412603:	mov    QWORD PTR [rbp-0x10],rax
  412607:	mov    rdi,QWORD PTR [rbp-0x8]
  41260b:	call   418660 <main@@Base+0x4930>
  412610:	mov    QWORD PTR [rbp-0x18],rax
  412614:	cmp    QWORD PTR [rbp-0x18],0x0
  412619:	je     412635 <test_nested_buffer@@Base+0x2a5>
  41261f:	mov    rdi,QWORD PTR [rbp-0x18]
  412623:	mov    rsi,QWORD PTR [rbp-0x10]
  412627:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  41262c:	cmp    eax,0x0
  41262f:	jne    412642 <test_nested_buffer@@Base+0x2b2>
  412635:	xor    eax,eax
  412637:	mov    ecx,eax
  412639:	mov    QWORD PTR [rbp-0x20],rcx
  41263d:	jmp    412662 <test_nested_buffer@@Base+0x2d2>
  412642:	mov    rax,QWORD PTR [rbp-0x18]
  412646:	mov    rdi,QWORD PTR [rbp-0x18]
  41264a:	mov    QWORD PTR [rbp-0x28],rax
  41264e:	call   4141e0 <main@@Base+0x4b0>
  412653:	mov    eax,eax
  412655:	mov    ecx,eax
  412657:	mov    rdx,QWORD PTR [rbp-0x28]
  41265b:	add    rdx,rcx
  41265e:	mov    QWORD PTR [rbp-0x20],rdx
  412662:	mov    rax,QWORD PTR [rbp-0x20]
  412666:	add    rsp,0x30
  41266a:	pop    rbp
  41266b:	ret    
  41266c:	nop    DWORD PTR [rax+0x0]

0000000000412670 <test_nested_buffer_first@@Base>:
  412670:	push   rbp
  412671:	mov    rbp,rsp
  412674:	sub    rsp,0x50
  412678:	mov    QWORD PTR [rbp-0x10],rdi
  41267c:	mov    rdi,QWORD PTR [rbp-0x10]
  412680:	call   418ef0 <flatcc_builder_reset@@Base>
  412685:	mov    rdi,QWORD PTR [rbp-0x10]
  412689:	mov    DWORD PTR [rbp-0x34],eax
  41268c:	call   40a0d0 <gen_monster@@Base+0x760>
  412691:	mov    rdi,QWORD PTR [rbp-0x10]
  412695:	mov    DWORD PTR [rbp-0x38],eax
  412698:	call   412550 <test_nested_buffer@@Base+0x1c0>
  41269d:	mov    rdi,QWORD PTR [rbp-0x10]
  4126a1:	lea    rsi,[rip+0x11fb8]        # 424660 <_IO_stdin_used@@Base+0x2660>
  4126a8:	mov    DWORD PTR [rbp-0x3c],eax
  4126ab:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  4126b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4126b4:	mov    DWORD PTR [rbp-0x40],eax
  4126b7:	call   4125a0 <test_nested_buffer@@Base+0x210>
  4126bc:	mov    rdi,QWORD PTR [rbp-0x10]
  4126c0:	mov    esi,0xa
  4126c5:	mov    DWORD PTR [rbp-0x44],eax
  4126c8:	call   40a120 <gen_monster@@Base+0x7b0>
  4126cd:	mov    rdi,QWORD PTR [rbp-0x10]
  4126d1:	lea    rsi,[rip+0xfc7f]        # 422357 <_IO_stdin_used@@Base+0x357>
  4126d8:	mov    DWORD PTR [rbp-0x48],eax
  4126db:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  4126e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4126e4:	mov    DWORD PTR [rbp-0x4c],eax
  4126e7:	call   40ac50 <gen_monster@@Base+0x12e0>
  4126ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4126f0:	lea    rsi,[rbp-0x20]
  4126f4:	mov    DWORD PTR [rbp-0x50],eax
  4126f7:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  4126fc:	mov    rcx,QWORD PTR [rip+0x1e8f5]        # 430ff8 <stderr@GLIBC_2.2.5>
  412703:	mov    QWORD PTR [rbp-0x18],rax
  412707:	mov    rsi,QWORD PTR [rbp-0x18]
  41270b:	mov    rdx,QWORD PTR [rbp-0x20]
  41270f:	mov    rcx,QWORD PTR [rcx]
  412712:	lea    rdi,[rip+0x11f57]        # 424670 <_IO_stdin_used@@Base+0x2670>
  412719:	call   404d60 <test_type_aliases@@Base+0x470>
  41271e:	mov    rdi,QWORD PTR [rbp-0x18]
  412722:	call   404480 <verify_empty_monster@@Base+0x260>
  412727:	mov    QWORD PTR [rbp-0x28],rax
  41272b:	mov    rdi,QWORD PTR [rbp-0x28]
  41272f:	call   407e10 <verify_monster@@Base+0x12c0>
  412734:	lea    rsi,[rip+0xfc1c]        # 422357 <_IO_stdin_used@@Base+0x357>
  41273b:	mov    rdi,rax
  41273e:	call   4040d0 <strcmp@plt>
  412743:	cmp    eax,0x0
  412746:	je     412766 <test_nested_buffer_first@@Base+0xf6>
  41274c:	lea    rdi,[rip+0x11f2f]        # 424682 <_IO_stdin_used@@Base+0x2682>
  412753:	mov    al,0x0
  412755:	call   404070 <printf@plt>
  41275a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412761:	jmp    41281b <test_nested_buffer_first@@Base+0x1ab>
  412766:	mov    rdi,QWORD PTR [rbp-0x28]
  41276a:	call   4125f0 <test_nested_buffer@@Base+0x260>
  41276f:	mov    QWORD PTR [rbp-0x30],rax
  412773:	mov    rdi,QWORD PTR [rbp-0x28]
  412777:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  41277c:	movsx  ecx,ax
  41277f:	cmp    ecx,0xa
  412782:	je     4127a2 <test_nested_buffer_first@@Base+0x132>
  412788:	lea    rdi,[rip+0x11f0f]        # 42469e <_IO_stdin_used@@Base+0x269e>
  41278f:	mov    al,0x0
  412791:	call   404070 <printf@plt>
  412796:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41279d:	jmp    41281b <test_nested_buffer_first@@Base+0x1ab>
  4127a2:	mov    rdi,QWORD PTR [rbp-0x30]
  4127a6:	call   407e10 <verify_monster@@Base+0x12c0>
  4127ab:	cmp    rax,0x0
  4127af:	je     4127ba <test_nested_buffer_first@@Base+0x14a>
  4127b5:	jmp    4127d9 <test_nested_buffer_first@@Base+0x169>
  4127ba:	lea    rdi,[rip+0x11f02]        # 4246c3 <_IO_stdin_used@@Base+0x26c3>
  4127c1:	lea    rsi,[rip+0x10427]        # 422bef <_IO_stdin_used@@Base+0xbef>
  4127c8:	mov    edx,0x8c1
  4127cd:	lea    rcx,[rip+0x11f51]        # 424725 <_IO_stdin_used@@Base+0x2725>
  4127d4:	call   404090 <__assert_fail@plt>
  4127d9:	mov    rdi,QWORD PTR [rbp-0x30]
  4127dd:	call   407e10 <verify_monster@@Base+0x12c0>
  4127e2:	lea    rsi,[rip+0x11e77]        # 424660 <_IO_stdin_used@@Base+0x2660>
  4127e9:	mov    rdi,rax
  4127ec:	call   4040d0 <strcmp@plt>
  4127f1:	cmp    eax,0x0
  4127f4:	je     412814 <test_nested_buffer_first@@Base+0x1a4>
  4127fa:	lea    rdi,[rip+0x11f06]        # 424707 <_IO_stdin_used@@Base+0x2707>
  412801:	mov    al,0x0
  412803:	call   404070 <printf@plt>
  412808:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41280f:	jmp    41281b <test_nested_buffer_first@@Base+0x1ab>
  412814:	mov    DWORD PTR [rbp-0x4],0x0
  41281b:	mov    eax,DWORD PTR [rbp-0x4]
  41281e:	add    rsp,0x50
  412822:	pop    rbp
  412823:	ret    
  412824:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41282e:	xchg   ax,ax

0000000000412830 <test_nested_buffer_using_nest@@Base>:
  412830:	push   rbp
  412831:	mov    rbp,rsp
  412834:	sub    rsp,0x470
  41283b:	mov    QWORD PTR [rbp-0x10],rdi
  41283f:	mov    rdi,QWORD PTR [rbp-0x10]
  412843:	call   418ef0 <flatcc_builder_reset@@Base>
  412848:	mov    rdi,QWORD PTR [rbp-0x10]
  41284c:	mov    DWORD PTR [rbp-0x444],eax
  412852:	call   40a0d0 <gen_monster@@Base+0x760>
  412857:	mov    rdi,QWORD PTR [rbp-0x10]
  41285b:	lea    rsi,[rip+0x11dfe]        # 424660 <_IO_stdin_used@@Base+0x2660>
  412862:	mov    DWORD PTR [rbp-0x448],eax
  412868:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  41286d:	mov    rdi,QWORD PTR [rbp-0x10]
  412871:	mov    esi,0x2a
  412876:	mov    DWORD PTR [rbp-0x44c],eax
  41287c:	call   412100 <test_add_set_defaults@@Base+0x240>
  412881:	mov    rdi,QWORD PTR [rbp-0x10]
  412885:	mov    DWORD PTR [rbp-0x450],eax
  41288b:	call   40ac50 <gen_monster@@Base+0x12e0>
  412890:	mov    rdi,QWORD PTR [rbp-0x10]
  412894:	mov    DWORD PTR [rbp-0x454],eax
  41289a:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  41289f:	lea    rsi,[rbp-0x420]
  4128a6:	mov    QWORD PTR [rbp-0x430],rax
  4128ad:	mov    rdi,QWORD PTR [rbp-0x10]
  4128b1:	mov    edx,0x400
  4128b6:	call   41e1b0 <flatcc_builder_copy_buffer@@Base>
  4128bb:	cmp    rax,0x0
  4128bf:	jne    4128df <test_nested_buffer_using_nest@@Base+0xaf>
  4128c5:	lea    rdi,[rip+0x11e8a]        # 424756 <_IO_stdin_used@@Base+0x2756>
  4128cc:	mov    al,0x0
  4128ce:	call   404070 <printf@plt>
  4128d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4128da:	jmp    412ad1 <test_nested_buffer_using_nest@@Base+0x2a1>
  4128df:	mov    rdi,QWORD PTR [rbp-0x10]
  4128e3:	call   418ef0 <flatcc_builder_reset@@Base>
  4128e8:	mov    rdi,QWORD PTR [rbp-0x10]
  4128ec:	mov    DWORD PTR [rbp-0x458],eax
  4128f2:	call   40a0d0 <gen_monster@@Base+0x760>
  4128f7:	xor    ecx,ecx
  4128f9:	lea    rsi,[rbp-0x420]
  412900:	mov    rdi,QWORD PTR [rbp-0x10]
  412904:	mov    rdx,QWORD PTR [rbp-0x430]
  41290b:	mov    DWORD PTR [rbp-0x45c],eax
  412911:	call   412ae0 <test_nested_buffer_using_nest@@Base+0x2b0>
  412916:	mov    rdi,QWORD PTR [rbp-0x10]
  41291a:	mov    esi,0xa
  41291f:	mov    DWORD PTR [rbp-0x460],eax
  412925:	call   40a120 <gen_monster@@Base+0x7b0>
  41292a:	mov    rdi,QWORD PTR [rbp-0x10]
  41292e:	lea    rsi,[rip+0xfa22]        # 422357 <_IO_stdin_used@@Base+0x357>
  412935:	mov    DWORD PTR [rbp-0x464],eax
  41293b:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  412940:	mov    rdi,QWORD PTR [rbp-0x10]
  412944:	mov    DWORD PTR [rbp-0x468],eax
  41294a:	call   40ac50 <gen_monster@@Base+0x12e0>
  41294f:	mov    rdi,QWORD PTR [rbp-0x10]
  412953:	lea    rsi,[rbp-0x428]
  41295a:	mov    DWORD PTR [rbp-0x46c],eax
  412960:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  412965:	mov    rdx,QWORD PTR [rip+0x1e68c]        # 430ff8 <stderr@GLIBC_2.2.5>
  41296c:	mov    QWORD PTR [rbp-0x18],rax
  412970:	mov    rsi,QWORD PTR [rbp-0x18]
  412974:	mov    rax,QWORD PTR [rbp-0x428]
  41297b:	mov    rcx,QWORD PTR [rdx]
  41297e:	lea    rdi,[rip+0x11dec]        # 424771 <_IO_stdin_used@@Base+0x2771>
  412985:	mov    rdx,rax
  412988:	call   404d60 <test_type_aliases@@Base+0x470>
  41298d:	mov    rdi,QWORD PTR [rbp-0x18]
  412991:	call   404480 <verify_empty_monster@@Base+0x260>
  412996:	mov    QWORD PTR [rbp-0x438],rax
  41299d:	mov    rdi,QWORD PTR [rbp-0x438]
  4129a4:	call   407e10 <verify_monster@@Base+0x12c0>
  4129a9:	lea    rsi,[rip+0xf9a7]        # 422357 <_IO_stdin_used@@Base+0x357>
  4129b0:	mov    rdi,rax
  4129b3:	call   4040d0 <strcmp@plt>
  4129b8:	cmp    eax,0x0
  4129bb:	je     4129db <test_nested_buffer_using_nest@@Base+0x1ab>
  4129c1:	lea    rdi,[rip+0x11cba]        # 424682 <_IO_stdin_used@@Base+0x2682>
  4129c8:	mov    al,0x0
  4129ca:	call   404070 <printf@plt>
  4129cf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4129d6:	jmp    412ad1 <test_nested_buffer_using_nest@@Base+0x2a1>
  4129db:	mov    rdi,QWORD PTR [rbp-0x438]
  4129e2:	call   4125f0 <test_nested_buffer@@Base+0x260>
  4129e7:	mov    QWORD PTR [rbp-0x440],rax
  4129ee:	mov    rdi,QWORD PTR [rbp-0x438]
  4129f5:	call   4044f0 <verify_empty_monster@@Base+0x2d0>
  4129fa:	movsx  ecx,ax
  4129fd:	cmp    ecx,0xa
  412a00:	je     412a20 <test_nested_buffer_using_nest@@Base+0x1f0>
  412a06:	lea    rdi,[rip+0x11c91]        # 42469e <_IO_stdin_used@@Base+0x269e>
  412a0d:	mov    al,0x0
  412a0f:	call   404070 <printf@plt>
  412a14:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412a1b:	jmp    412ad1 <test_nested_buffer_using_nest@@Base+0x2a1>
  412a20:	mov    rdi,QWORD PTR [rbp-0x440]
  412a27:	call   407e10 <verify_monster@@Base+0x12c0>
  412a2c:	cmp    rax,0x0
  412a30:	je     412a3b <test_nested_buffer_using_nest@@Base+0x20b>
  412a36:	jmp    412a5a <test_nested_buffer_using_nest@@Base+0x22a>
  412a3b:	lea    rdi,[rip+0x11c81]        # 4246c3 <_IO_stdin_used@@Base+0x26c3>
  412a42:	lea    rsi,[rip+0x101a6]        # 422bef <_IO_stdin_used@@Base+0xbef>
  412a49:	mov    edx,0x8fa
  412a4e:	lea    rcx,[rip+0x11d3e]        # 424793 <_IO_stdin_used@@Base+0x2793>
  412a55:	call   404090 <__assert_fail@plt>
  412a5a:	mov    rdi,QWORD PTR [rbp-0x440]
  412a61:	call   407e10 <verify_monster@@Base+0x12c0>
  412a66:	lea    rsi,[rip+0x11bf3]        # 424660 <_IO_stdin_used@@Base+0x2660>
  412a6d:	mov    rdi,rax
  412a70:	call   4040d0 <strcmp@plt>
  412a75:	cmp    eax,0x0
  412a78:	je     412a98 <test_nested_buffer_using_nest@@Base+0x268>
  412a7e:	lea    rdi,[rip+0x11c82]        # 424707 <_IO_stdin_used@@Base+0x2707>
  412a85:	mov    al,0x0
  412a87:	call   404070 <printf@plt>
  412a8c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412a93:	jmp    412ad1 <test_nested_buffer_using_nest@@Base+0x2a1>
  412a98:	mov    rdi,QWORD PTR [rbp-0x440]
  412a9f:	call   408410 <verify_monster@@Base+0x18c0>
  412aa4:	movsx  ecx,ax
  412aa7:	cmp    ecx,0x2a
  412aaa:	je     412aca <test_nested_buffer_using_nest@@Base+0x29a>
  412ab0:	lea    rdi,[rip+0x11d12]        # 4247c9 <_IO_stdin_used@@Base+0x27c9>
  412ab7:	mov    al,0x0
  412ab9:	call   404070 <printf@plt>
  412abe:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412ac5:	jmp    412ad1 <test_nested_buffer_using_nest@@Base+0x2a1>
  412aca:	mov    DWORD PTR [rbp-0x4],0x0
  412ad1:	mov    eax,DWORD PTR [rbp-0x4]
  412ad4:	add    rsp,0x470
  412adb:	pop    rbp
  412adc:	ret    
  412add:	nop    DWORD PTR [rax]
  412ae0:	push   rbp
  412ae1:	mov    rbp,rsp
  412ae4:	sub    rsp,0x50
  412ae8:	mov    QWORD PTR [rbp-0x8],rdi
  412aec:	mov    QWORD PTR [rbp-0x10],rsi
  412af0:	mov    QWORD PTR [rbp-0x18],rdx
  412af4:	mov    WORD PTR [rbp-0x1a],cx
  412af8:	mov    rdi,QWORD PTR [rbp-0x8]
  412afc:	mov    rax,QWORD PTR [rbp-0x8]
  412b00:	mov    rsi,QWORD PTR [rbp-0x10]
  412b04:	mov    rdx,QWORD PTR [rbp-0x18]
  412b08:	movzx  r8d,WORD PTR [rbp-0x1a]
  412b0d:	cmp    r8d,0x0
  412b11:	mov    QWORD PTR [rbp-0x28],rdi
  412b15:	mov    QWORD PTR [rbp-0x30],rax
  412b19:	mov    QWORD PTR [rbp-0x38],rsi
  412b1d:	mov    QWORD PTR [rbp-0x40],rdx
  412b21:	je     412b33 <test_nested_buffer_using_nest@@Base+0x303>
  412b27:	movzx  eax,WORD PTR [rbp-0x1a]
  412b2b:	mov    DWORD PTR [rbp-0x44],eax
  412b2e:	jmp    412b40 <test_nested_buffer_using_nest@@Base+0x310>
  412b33:	mov    eax,0x8
  412b38:	mov    DWORD PTR [rbp-0x44],eax
  412b3b:	jmp    412b40 <test_nested_buffer_using_nest@@Base+0x310>
  412b40:	mov    eax,DWORD PTR [rbp-0x44]
  412b43:	mov    rdi,QWORD PTR [rbp-0x30]
  412b47:	mov    rsi,QWORD PTR [rbp-0x38]
  412b4b:	mov    rdx,QWORD PTR [rbp-0x40]
  412b4f:	mov    ecx,0x1
  412b54:	movzx  r8d,ax
  412b58:	mov    r9d,0xffffffff
  412b5e:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  412b63:	mov    rdi,QWORD PTR [rbp-0x28]
  412b67:	mov    esi,eax
  412b69:	call   418600 <main@@Base+0x48d0>
  412b6e:	add    rsp,0x50
  412b72:	pop    rbp
  412b73:	ret    
  412b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b7e:	xchg   ax,ax

0000000000412b80 <verify_include@@Base>:
  412b80:	push   rbp
  412b81:	mov    rbp,rsp
  412b84:	xor    eax,eax
  412b86:	mov    QWORD PTR [rbp-0x8],rdi
  412b8a:	pop    rbp
  412b8b:	ret    
  412b8c:	nop    DWORD PTR [rax+0x0]

0000000000412b90 <test_struct_buffer@@Base>:
  412b90:	push   rbp
  412b91:	mov    rbp,rsp
  412b94:	sub    rsp,0xb0
  412b9b:	mov    QWORD PTR [rbp-0x10],rdi
  412b9f:	mov    rdi,QWORD PTR [rbp-0x10]
  412ba3:	call   418ef0 <flatcc_builder_reset@@Base>
  412ba8:	vmovss xmm0,DWORD PTR [rip+0xf45c]        # 42200c <_IO_stdin_used@@Base+0xc>
  412bb0:	vmovss xmm1,DWORD PTR [rip+0xf458]        # 422010 <_IO_stdin_used@@Base+0x10>
  412bb8:	vmovss xmm2,DWORD PTR [rip+0xf458]        # 422018 <_IO_stdin_used@@Base+0x18>
  412bc0:	vmovsd xmm3,QWORD PTR [rip+0xf460]        # 422028 <_IO_stdin_used@@Base+0x28>
  412bc8:	mov    rdi,QWORD PTR [rbp-0x10]
  412bcc:	mov    esi,0x8
  412bd1:	mov    edx,0xaaa
  412bd6:	mov    ecx,0xffffffef
  412bdb:	mov    DWORD PTR [rbp-0x9c],eax
  412be1:	call   412eb0 <test_struct_buffer@@Base+0x320>
  412be6:	mov    rdi,QWORD PTR [rbp-0x10]
  412bea:	mov    DWORD PTR [rbp-0xa0],eax
  412bf0:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  412bf5:	mov    QWORD PTR [rbp-0x88],rax
  412bfc:	cmp    QWORD PTR [rbp-0x88],0x30
  412c04:	jne    412c0f <test_struct_buffer@@Base+0x7f>
  412c0a:	jmp    412c2e <test_struct_buffer@@Base+0x9e>
  412c0f:	lea    rdi,[rip+0x11bd8]        # 4247ee <_IO_stdin_used@@Base+0x27ee>
  412c16:	lea    rsi,[rip+0xffd2]        # 422bef <_IO_stdin_used@@Base+0xbef>
  412c1d:	mov    edx,0x923
  412c22:	lea    rcx,[rip+0x11bd0]        # 4247f9 <_IO_stdin_used@@Base+0x27f9>
  412c29:	call   404090 <__assert_fail@plt>
  412c2e:	mov    rax,QWORD PTR [rbp-0x88]
  412c35:	lea    rdi,[rip+0x11be8]        # 424824 <_IO_stdin_used@@Base+0x2824>
  412c3c:	mov    esi,eax
  412c3e:	mov    al,0x0
  412c40:	call   404070 <printf@plt>
  412c45:	mov    rdi,QWORD PTR [rbp-0x10]
  412c49:	mov    DWORD PTR [rbp-0xa4],eax
  412c4f:	call   41e4e0 <flatcc_builder_get_emit_context@@Base>
  412c54:	mov    rdi,rax
  412c57:	call   412f40 <test_struct_buffer@@Base+0x3b0>
  412c5c:	cmp    rax,QWORD PTR [rbp-0x88]
  412c63:	jne    412c6e <test_struct_buffer@@Base+0xde>
  412c69:	jmp    412c8d <test_struct_buffer@@Base+0xfd>
  412c6e:	lea    rdi,[rip+0x11bcc]        # 424841 <_IO_stdin_used@@Base+0x2841>
  412c75:	lea    rsi,[rip+0xff73]        # 422bef <_IO_stdin_used@@Base+0xbef>
  412c7c:	mov    edx,0x925
  412c81:	lea    rcx,[rip+0x11b71]        # 4247f9 <_IO_stdin_used@@Base+0x27f9>
  412c88:	call   404090 <__assert_fail@plt>
  412c8d:	lea    rsi,[rbp-0x80]
  412c91:	mov    rdi,QWORD PTR [rbp-0x10]
  412c95:	mov    edx,0x64
  412c9a:	call   41e1b0 <flatcc_builder_copy_buffer@@Base>
  412c9f:	cmp    rax,0x0
  412ca3:	jne    412cc3 <test_struct_buffer@@Base+0x133>
  412ca9:	lea    rdi,[rip+0x11bdc]        # 42488c <_IO_stdin_used@@Base+0x288c>
  412cb0:	mov    al,0x0
  412cb2:	call   404070 <printf@plt>
  412cb7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412cbe:	jmp    412e96 <test_struct_buffer@@Base+0x306>
  412cc3:	mov    rax,QWORD PTR [rip+0x1e32e]        # 430ff8 <stderr@GLIBC_2.2.5>
  412cca:	lea    rsi,[rbp-0x80]
  412cce:	mov    rdx,QWORD PTR [rbp-0x88]
  412cd5:	mov    rcx,QWORD PTR [rax]
  412cd8:	lea    rdi,[rip+0x11c5e]        # 42493d <_IO_stdin_used@@Base+0x293d>
  412cdf:	call   404d60 <test_type_aliases@@Base+0x470>
  412ce4:	lea    rdi,[rbp-0x80]
  412ce8:	lea    rsi,[rip+0xf491]        # 422180 <_IO_stdin_used@@Base+0x180>
  412cef:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  412cf4:	cmp    eax,0x0
  412cf7:	jne    412d17 <test_struct_buffer@@Base+0x187>
  412cfd:	lea    rdi,[rip+0x11ba3]        # 4248a7 <_IO_stdin_used@@Base+0x28a7>
  412d04:	mov    al,0x0
  412d06:	call   404070 <printf@plt>
  412d0b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412d12:	jmp    412e96 <test_struct_buffer@@Base+0x306>
  412d17:	lea    rdi,[rbp-0x80]
  412d1b:	lea    rsi,[rip+0x11b77]        # 424899 <_IO_stdin_used@@Base+0x2899>
  412d22:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  412d27:	cmp    eax,0x0
  412d2a:	je     412d4a <test_struct_buffer@@Base+0x1ba>
  412d30:	lea    rdi,[rip+0x11b67]        # 42489e <_IO_stdin_used@@Base+0x289e>
  412d37:	mov    al,0x0
  412d39:	call   404070 <printf@plt>
  412d3e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412d45:	jmp    412e96 <test_struct_buffer@@Base+0x306>
  412d4a:	lea    rdi,[rbp-0x80]
  412d4e:	lea    rsi,[rip+0xf42b]        # 422180 <_IO_stdin_used@@Base+0x180>
  412d55:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  412d5a:	cmp    eax,0x0
  412d5d:	jne    412d7d <test_struct_buffer@@Base+0x1ed>
  412d63:	lea    rdi,[rip+0x11b5f]        # 4248c9 <_IO_stdin_used@@Base+0x28c9>
  412d6a:	mov    al,0x0
  412d6c:	call   404070 <printf@plt>
  412d71:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412d78:	jmp    412e96 <test_struct_buffer@@Base+0x306>
  412d7d:	lea    rdi,[rbp-0x80]
  412d81:	call   412f60 <test_struct_buffer@@Base+0x3d0>
  412d86:	mov    QWORD PTR [rbp-0x98],rax
  412d8d:	mov    rax,QWORD PTR [rbp-0x98]
  412d94:	mov    QWORD PTR [rbp-0x90],rax
  412d9b:	mov    rdi,QWORD PTR [rbp-0x90]
  412da2:	call   412fd0 <test_struct_buffer@@Base+0x440>
  412da7:	vmovss xmm0,DWORD PTR [rip+0xf25d]        # 42200c <_IO_stdin_used@@Base+0xc>
  412daf:	mov    rcx,QWORD PTR [rbp-0x90]
  412db6:	vmovss xmm1,DWORD PTR [rcx]
  412dba:	vucomiss xmm1,xmm0
  412dbe:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412dc4:	jp     412e75 <test_struct_buffer@@Base+0x2e5>
  412dca:	vmovss xmm0,DWORD PTR [rip+0xf23e]        # 422010 <_IO_stdin_used@@Base+0x10>
  412dd2:	mov    rax,QWORD PTR [rbp-0x90]
  412dd9:	vmovss xmm1,DWORD PTR [rax+0x4]
  412dde:	vucomiss xmm1,xmm0
  412de2:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412de8:	jp     412e75 <test_struct_buffer@@Base+0x2e5>
  412dee:	vmovss xmm0,DWORD PTR [rip+0xf222]        # 422018 <_IO_stdin_used@@Base+0x18>
  412df6:	mov    rax,QWORD PTR [rbp-0x90]
  412dfd:	vmovss xmm1,DWORD PTR [rax+0x8]
  412e02:	vucomiss xmm1,xmm0
  412e06:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412e0c:	jp     412e75 <test_struct_buffer@@Base+0x2e5>
  412e12:	vmovsd xmm0,QWORD PTR [rip+0xf20e]        # 422028 <_IO_stdin_used@@Base+0x28>
  412e1a:	mov    rax,QWORD PTR [rbp-0x90]
  412e21:	vmovsd xmm1,QWORD PTR [rax+0x10]
  412e26:	vucomisd xmm1,xmm0
  412e2a:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412e30:	jp     412e75 <test_struct_buffer@@Base+0x2e5>
  412e36:	mov    rax,QWORD PTR [rbp-0x90]
  412e3d:	movsx  ecx,BYTE PTR [rax+0x18]
  412e41:	cmp    ecx,0x8
  412e44:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412e4a:	mov    rax,QWORD PTR [rbp-0x90]
  412e51:	movsx  ecx,WORD PTR [rax+0x1a]
  412e55:	cmp    ecx,0xaaa
  412e5b:	jne    412e75 <test_struct_buffer@@Base+0x2e5>
  412e61:	mov    rax,QWORD PTR [rbp-0x90]
  412e68:	movsx  ecx,BYTE PTR [rax+0x1c]
  412e6c:	cmp    ecx,0xffffffef
  412e6f:	je     412e8f <test_struct_buffer@@Base+0x2ff>
  412e75:	lea    rdi,[rip+0x11a71]        # 4248ed <_IO_stdin_used@@Base+0x28ed>
  412e7c:	mov    al,0x0
  412e7e:	call   404070 <printf@plt>
  412e83:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412e8a:	jmp    412e96 <test_struct_buffer@@Base+0x306>
  412e8f:	mov    DWORD PTR [rbp-0x4],0x0
  412e96:	mov    eax,DWORD PTR [rbp-0x4]
  412e99:	add    rsp,0xb0
  412ea0:	pop    rbp
  412ea1:	ret    
  412ea2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412eac:	nop    DWORD PTR [rax+0x0]
  412eb0:	push   rbp
  412eb1:	mov    rbp,rsp
  412eb4:	sub    rsp,0x40
  412eb8:	mov    QWORD PTR [rbp-0x8],rdi
  412ebc:	vmovss DWORD PTR [rbp-0xc],xmm0
  412ec1:	vmovss DWORD PTR [rbp-0x10],xmm1
  412ec6:	vmovss DWORD PTR [rbp-0x14],xmm2
  412ecb:	vmovsd QWORD PTR [rbp-0x20],xmm3
  412ed0:	mov    BYTE PTR [rbp-0x21],sil
  412ed4:	mov    WORD PTR [rbp-0x24],dx
  412ed8:	mov    BYTE PTR [rbp-0x25],cl
  412edb:	mov    rdi,QWORD PTR [rbp-0x8]
  412edf:	mov    rax,QWORD PTR [rbp-0x8]
  412ee3:	vmovss xmm0,DWORD PTR [rbp-0xc]
  412ee8:	vmovss xmm1,DWORD PTR [rbp-0x10]
  412eed:	vmovss xmm2,DWORD PTR [rbp-0x14]
  412ef2:	vmovsd xmm3,QWORD PTR [rbp-0x20]
  412ef7:	mov    cl,BYTE PTR [rbp-0x21]
  412efa:	mov    dx,WORD PTR [rbp-0x24]
  412efe:	mov    QWORD PTR [rbp-0x30],rdi
  412f02:	mov    rdi,rax
  412f05:	movsx  esi,cl
  412f08:	movsx  edx,dx
  412f0b:	movsx  ecx,BYTE PTR [rbp-0x25]
  412f0f:	call   418790 <main@@Base+0x4a60>
  412f14:	xor    ecx,ecx
  412f16:	mov    rdi,QWORD PTR [rbp-0x30]
  412f1a:	lea    rsi,[rip+0xf25f]        # 422180 <_IO_stdin_used@@Base+0x180>
  412f21:	mov    edx,ecx
  412f23:	mov    DWORD PTR [rbp-0x34],ecx
  412f26:	mov    ecx,eax
  412f28:	mov    r8d,0x10
  412f2e:	mov    r9d,DWORD PTR [rbp-0x34]
  412f32:	call   419910 <flatcc_builder_create_buffer@@Base>
  412f37:	add    rsp,0x40
  412f3b:	pop    rbp
  412f3c:	ret    
  412f3d:	nop    DWORD PTR [rax]
  412f40:	push   rbp
  412f41:	mov    rbp,rsp
  412f44:	mov    QWORD PTR [rbp-0x8],rdi
  412f48:	mov    rax,QWORD PTR [rbp-0x8]
  412f4c:	mov    rax,QWORD PTR [rax+0x30]
  412f50:	pop    rbp
  412f51:	ret    
  412f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f5c:	nop    DWORD PTR [rax+0x0]
  412f60:	push   rbp
  412f61:	mov    rbp,rsp
  412f64:	sub    rsp,0x20
  412f68:	mov    QWORD PTR [rbp-0x8],rdi
  412f6c:	lea    rax,[rip+0xf20d]        # 422180 <_IO_stdin_used@@Base+0x180>
  412f73:	mov    QWORD PTR [rbp-0x10],rax
  412f77:	cmp    QWORD PTR [rbp-0x8],0x0
  412f7c:	je     412f98 <test_struct_buffer@@Base+0x408>
  412f82:	mov    rdi,QWORD PTR [rbp-0x8]
  412f86:	mov    rsi,QWORD PTR [rbp-0x10]
  412f8a:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  412f8f:	cmp    eax,0x0
  412f92:	jne    412fa5 <test_struct_buffer@@Base+0x415>
  412f98:	xor    eax,eax
  412f9a:	mov    ecx,eax
  412f9c:	mov    QWORD PTR [rbp-0x18],rcx
  412fa0:	jmp    412fc5 <test_struct_buffer@@Base+0x435>
  412fa5:	mov    rax,QWORD PTR [rbp-0x8]
  412fa9:	mov    rdi,QWORD PTR [rbp-0x8]
  412fad:	mov    QWORD PTR [rbp-0x20],rax
  412fb1:	call   4141e0 <main@@Base+0x4b0>
  412fb6:	mov    eax,eax
  412fb8:	mov    ecx,eax
  412fba:	mov    rdx,QWORD PTR [rbp-0x20]
  412fbe:	add    rdx,rcx
  412fc1:	mov    QWORD PTR [rbp-0x18],rdx
  412fc5:	mov    rax,QWORD PTR [rbp-0x18]
  412fc9:	add    rsp,0x20
  412fcd:	pop    rbp
  412fce:	ret    
  412fcf:	nop
  412fd0:	push   rbp
  412fd1:	mov    rbp,rsp
  412fd4:	mov    QWORD PTR [rbp-0x8],rdi
  412fd8:	mov    rax,QWORD PTR [rbp-0x8]
  412fdc:	pop    rbp
  412fdd:	ret    
  412fde:	xchg   ax,ax

0000000000412fe0 <test_typed_struct_buffer@@Base>:
  412fe0:	push   rbp
  412fe1:	mov    rbp,rsp
  412fe4:	sub    rsp,0xb0
  412feb:	mov    QWORD PTR [rbp-0x10],rdi
  412fef:	mov    rdi,QWORD PTR [rbp-0x10]
  412ff3:	call   418ef0 <flatcc_builder_reset@@Base>
  412ff8:	vmovss xmm0,DWORD PTR [rip+0xf00c]        # 42200c <_IO_stdin_used@@Base+0xc>
  413000:	vmovss xmm1,DWORD PTR [rip+0xf008]        # 422010 <_IO_stdin_used@@Base+0x10>
  413008:	vmovss xmm2,DWORD PTR [rip+0xf008]        # 422018 <_IO_stdin_used@@Base+0x18>
  413010:	vmovsd xmm3,QWORD PTR [rip+0xf010]        # 422028 <_IO_stdin_used@@Base+0x28>
  413018:	mov    rdi,QWORD PTR [rbp-0x10]
  41301c:	mov    esi,0x8
  413021:	mov    edx,0xaaa
  413026:	mov    ecx,0xffffffef
  41302b:	mov    DWORD PTR [rbp-0x9c],eax
  413031:	call   4133c0 <test_typed_struct_buffer@@Base+0x3e0>
  413036:	mov    rdi,QWORD PTR [rbp-0x10]
  41303a:	mov    DWORD PTR [rbp-0xa0],eax
  413040:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  413045:	mov    QWORD PTR [rbp-0x88],rax
  41304c:	cmp    QWORD PTR [rbp-0x88],0x30
  413054:	jne    41305f <test_typed_struct_buffer@@Base+0x7f>
  41305a:	jmp    41307e <test_typed_struct_buffer@@Base+0x9e>
  41305f:	lea    rdi,[rip+0x11788]        # 4247ee <_IO_stdin_used@@Base+0x27ee>
  413066:	lea    rsi,[rip+0xfb82]        # 422bef <_IO_stdin_used@@Base+0xbef>
  41306d:	mov    edx,0x954
  413072:	lea    rcx,[rip+0x1188d]        # 424906 <_IO_stdin_used@@Base+0x2906>
  413079:	call   404090 <__assert_fail@plt>
  41307e:	mov    rax,QWORD PTR [rbp-0x88]
  413085:	lea    rdi,[rip+0x11798]        # 424824 <_IO_stdin_used@@Base+0x2824>
  41308c:	mov    esi,eax
  41308e:	mov    al,0x0
  413090:	call   404070 <printf@plt>
  413095:	mov    rdi,QWORD PTR [rbp-0x10]
  413099:	mov    DWORD PTR [rbp-0xa4],eax
  41309f:	call   41e4e0 <flatcc_builder_get_emit_context@@Base>
  4130a4:	mov    rdi,rax
  4130a7:	call   412f40 <test_struct_buffer@@Base+0x3b0>
  4130ac:	cmp    rax,QWORD PTR [rbp-0x88]
  4130b3:	jne    4130be <test_typed_struct_buffer@@Base+0xde>
  4130b9:	jmp    4130dd <test_typed_struct_buffer@@Base+0xfd>
  4130be:	lea    rdi,[rip+0x1177c]        # 424841 <_IO_stdin_used@@Base+0x2841>
  4130c5:	lea    rsi,[rip+0xfb23]        # 422bef <_IO_stdin_used@@Base+0xbef>
  4130cc:	mov    edx,0x956
  4130d1:	lea    rcx,[rip+0x1182e]        # 424906 <_IO_stdin_used@@Base+0x2906>
  4130d8:	call   404090 <__assert_fail@plt>
  4130dd:	lea    rsi,[rbp-0x80]
  4130e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4130e5:	mov    edx,0x64
  4130ea:	call   41e1b0 <flatcc_builder_copy_buffer@@Base>
  4130ef:	cmp    rax,0x0
  4130f3:	jne    413113 <test_typed_struct_buffer@@Base+0x133>
  4130f9:	lea    rdi,[rip+0x1178c]        # 42488c <_IO_stdin_used@@Base+0x288c>
  413100:	mov    al,0x0
  413102:	call   404070 <printf@plt>
  413107:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41310e:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  413113:	mov    rax,QWORD PTR [rip+0x1dede]        # 430ff8 <stderr@GLIBC_2.2.5>
  41311a:	lea    rsi,[rbp-0x80]
  41311e:	mov    rdx,QWORD PTR [rbp-0x88]
  413125:	mov    rcx,QWORD PTR [rax]
  413128:	lea    rdi,[rip+0x11808]        # 424937 <_IO_stdin_used@@Base+0x2937>
  41312f:	call   404d60 <test_type_aliases@@Base+0x470>
  413134:	lea    rdi,[rbp-0x80]
  413138:	lea    rsi,[rip+0x11811]        # 424950 <_IO_stdin_used@@Base+0x2950>
  41313f:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  413144:	cmp    eax,0x0
  413147:	jne    413167 <test_typed_struct_buffer@@Base+0x187>
  41314d:	lea    rdi,[rip+0x11753]        # 4248a7 <_IO_stdin_used@@Base+0x28a7>
  413154:	mov    al,0x0
  413156:	call   404070 <printf@plt>
  41315b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413162:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  413167:	lea    rdi,[rbp-0x80]
  41316b:	lea    rsi,[rip+0x11727]        # 424899 <_IO_stdin_used@@Base+0x2899>
  413172:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  413177:	cmp    eax,0x0
  41317a:	je     41319a <test_typed_struct_buffer@@Base+0x1ba>
  413180:	lea    rdi,[rip+0x11717]        # 42489e <_IO_stdin_used@@Base+0x289e>
  413187:	mov    al,0x0
  413189:	call   404070 <printf@plt>
  41318e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413195:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  41319a:	lea    rdi,[rbp-0x80]
  41319e:	lea    rsi,[rip+0x117ab]        # 424950 <_IO_stdin_used@@Base+0x2950>
  4131a5:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  4131aa:	cmp    eax,0x0
  4131ad:	jne    4131cd <test_typed_struct_buffer@@Base+0x1ed>
  4131b3:	lea    rdi,[rip+0x1170f]        # 4248c9 <_IO_stdin_used@@Base+0x28c9>
  4131ba:	mov    al,0x0
  4131bc:	call   404070 <printf@plt>
  4131c1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4131c8:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  4131cd:	lea    rdi,[rbp-0x80]
  4131d1:	mov    esi,0xa8f53ed2
  4131d6:	call   413450 <test_typed_struct_buffer@@Base+0x470>
  4131db:	cmp    rax,0x0
  4131df:	jne    4131ff <test_typed_struct_buffer@@Base+0x21f>
  4131e5:	lea    rdi,[rip+0x11769]        # 424955 <_IO_stdin_used@@Base+0x2955>
  4131ec:	mov    al,0x0
  4131ee:	call   404070 <printf@plt>
  4131f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4131fa:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  4131ff:	lea    rdi,[rbp-0x80]
  413203:	mov    rsi,QWORD PTR [rbp-0x88]
  41320a:	mov    edx,0xa8f53ed2
  41320f:	call   4134c0 <test_typed_struct_buffer@@Base+0x4e0>
  413214:	xor    ecx,ecx
  413216:	cmp    ecx,eax
  413218:	je     413238 <test_typed_struct_buffer@@Base+0x258>
  41321e:	lea    rdi,[rip+0x11759]        # 42497e <_IO_stdin_used@@Base+0x297e>
  413225:	mov    al,0x0
  413227:	call   404070 <printf@plt>
  41322c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413233:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  413238:	lea    rdi,[rbp-0x80]
  41323c:	call   413500 <test_typed_struct_buffer@@Base+0x520>
  413241:	mov    QWORD PTR [rbp-0x98],rax
  413248:	cmp    QWORD PTR [rbp-0x98],0x0
  413250:	jne    413270 <test_typed_struct_buffer@@Base+0x290>
  413256:	lea    rdi,[rip+0x11744]        # 4249a1 <_IO_stdin_used@@Base+0x29a1>
  41325d:	mov    al,0x0
  41325f:	call   404070 <printf@plt>
  413264:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41326b:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  413270:	lea    rdi,[rbp-0x80]
  413274:	mov    rsi,QWORD PTR [rbp-0x88]
  41327b:	call   413570 <test_typed_struct_buffer@@Base+0x590>
  413280:	xor    ecx,ecx
  413282:	cmp    ecx,eax
  413284:	je     4132a4 <test_typed_struct_buffer@@Base+0x2c4>
  41328a:	lea    rdi,[rip+0x1172e]        # 4249bf <_IO_stdin_used@@Base+0x29bf>
  413291:	mov    al,0x0
  413293:	call   404070 <printf@plt>
  413298:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41329f:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  4132a4:	mov    rax,QWORD PTR [rbp-0x98]
  4132ab:	mov    QWORD PTR [rbp-0x90],rax
  4132b2:	mov    rdi,QWORD PTR [rbp-0x90]
  4132b9:	call   412fd0 <test_struct_buffer@@Base+0x440>
  4132be:	vmovss xmm0,DWORD PTR [rip+0xed46]        # 42200c <_IO_stdin_used@@Base+0xc>
  4132c6:	mov    rcx,QWORD PTR [rbp-0x90]
  4132cd:	vmovss xmm1,DWORD PTR [rcx]
  4132d1:	vucomiss xmm1,xmm0
  4132d5:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  4132db:	jp     41338c <test_typed_struct_buffer@@Base+0x3ac>
  4132e1:	vmovss xmm0,DWORD PTR [rip+0xed27]        # 422010 <_IO_stdin_used@@Base+0x10>
  4132e9:	mov    rax,QWORD PTR [rbp-0x90]
  4132f0:	vmovss xmm1,DWORD PTR [rax+0x4]
  4132f5:	vucomiss xmm1,xmm0
  4132f9:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  4132ff:	jp     41338c <test_typed_struct_buffer@@Base+0x3ac>
  413305:	vmovss xmm0,DWORD PTR [rip+0xed0b]        # 422018 <_IO_stdin_used@@Base+0x18>
  41330d:	mov    rax,QWORD PTR [rbp-0x90]
  413314:	vmovss xmm1,DWORD PTR [rax+0x8]
  413319:	vucomiss xmm1,xmm0
  41331d:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  413323:	jp     41338c <test_typed_struct_buffer@@Base+0x3ac>
  413329:	vmovsd xmm0,QWORD PTR [rip+0xecf7]        # 422028 <_IO_stdin_used@@Base+0x28>
  413331:	mov    rax,QWORD PTR [rbp-0x90]
  413338:	vmovsd xmm1,QWORD PTR [rax+0x10]
  41333d:	vucomisd xmm1,xmm0
  413341:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  413347:	jp     41338c <test_typed_struct_buffer@@Base+0x3ac>
  41334d:	mov    rax,QWORD PTR [rbp-0x90]
  413354:	movsx  ecx,BYTE PTR [rax+0x18]
  413358:	cmp    ecx,0x8
  41335b:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  413361:	mov    rax,QWORD PTR [rbp-0x90]
  413368:	movsx  ecx,WORD PTR [rax+0x1a]
  41336c:	cmp    ecx,0xaaa
  413372:	jne    41338c <test_typed_struct_buffer@@Base+0x3ac>
  413378:	mov    rax,QWORD PTR [rbp-0x90]
  41337f:	movsx  ecx,BYTE PTR [rax+0x1c]
  413383:	cmp    ecx,0xffffffef
  413386:	je     4133a6 <test_typed_struct_buffer@@Base+0x3c6>
  41338c:	lea    rdi,[rip+0x1155a]        # 4248ed <_IO_stdin_used@@Base+0x28ed>
  413393:	mov    al,0x0
  413395:	call   404070 <printf@plt>
  41339a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4133a1:	jmp    4133ad <test_typed_struct_buffer@@Base+0x3cd>
  4133a6:	mov    DWORD PTR [rbp-0x4],0x0
  4133ad:	mov    eax,DWORD PTR [rbp-0x4]
  4133b0:	add    rsp,0xb0
  4133b7:	pop    rbp
  4133b8:	ret    
  4133b9:	nop    DWORD PTR [rax+0x0]
  4133c0:	push   rbp
  4133c1:	mov    rbp,rsp
  4133c4:	sub    rsp,0x40
  4133c8:	mov    QWORD PTR [rbp-0x8],rdi
  4133cc:	vmovss DWORD PTR [rbp-0xc],xmm0
  4133d1:	vmovss DWORD PTR [rbp-0x10],xmm1
  4133d6:	vmovss DWORD PTR [rbp-0x14],xmm2
  4133db:	vmovsd QWORD PTR [rbp-0x20],xmm3
  4133e0:	mov    BYTE PTR [rbp-0x21],sil
  4133e4:	mov    WORD PTR [rbp-0x24],dx
  4133e8:	mov    BYTE PTR [rbp-0x25],cl
  4133eb:	mov    rdi,QWORD PTR [rbp-0x8]
  4133ef:	mov    rax,QWORD PTR [rbp-0x8]
  4133f3:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4133f8:	vmovss xmm1,DWORD PTR [rbp-0x10]
  4133fd:	vmovss xmm2,DWORD PTR [rbp-0x14]
  413402:	vmovsd xmm3,QWORD PTR [rbp-0x20]
  413407:	mov    cl,BYTE PTR [rbp-0x21]
  41340a:	mov    dx,WORD PTR [rbp-0x24]
  41340e:	mov    QWORD PTR [rbp-0x30],rdi
  413412:	mov    rdi,rax
  413415:	movsx  esi,cl
  413418:	movsx  edx,dx
  41341b:	movsx  ecx,BYTE PTR [rbp-0x25]
  41341f:	call   418790 <main@@Base+0x4a60>
  413424:	xor    ecx,ecx
  413426:	mov    rdi,QWORD PTR [rbp-0x30]
  41342a:	lea    rsi,[rip+0x1151f]        # 424950 <_IO_stdin_used@@Base+0x2950>
  413431:	mov    edx,ecx
  413433:	mov    DWORD PTR [rbp-0x34],ecx
  413436:	mov    ecx,eax
  413438:	mov    r8d,0x10
  41343e:	mov    r9d,DWORD PTR [rbp-0x34]
  413442:	call   419910 <flatcc_builder_create_buffer@@Base>
  413447:	add    rsp,0x40
  41344b:	pop    rbp
  41344c:	ret    
  41344d:	nop    DWORD PTR [rax]
  413450:	push   rbp
  413451:	mov    rbp,rsp
  413454:	sub    rsp,0x20
  413458:	mov    QWORD PTR [rbp-0x8],rdi
  41345c:	mov    DWORD PTR [rbp-0xc],esi
  41345f:	cmp    QWORD PTR [rbp-0x8],0x0
  413464:	je     41347f <test_typed_struct_buffer@@Base+0x49f>
  41346a:	mov    rdi,QWORD PTR [rbp-0x8]
  41346e:	mov    esi,DWORD PTR [rbp-0xc]
  413471:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  413476:	cmp    eax,0x0
  413479:	jne    41348c <test_typed_struct_buffer@@Base+0x4ac>
  41347f:	xor    eax,eax
  413481:	mov    ecx,eax
  413483:	mov    QWORD PTR [rbp-0x18],rcx
  413487:	jmp    4134ac <test_typed_struct_buffer@@Base+0x4cc>
  41348c:	mov    rax,QWORD PTR [rbp-0x8]
  413490:	mov    rdi,QWORD PTR [rbp-0x8]
  413494:	mov    QWORD PTR [rbp-0x20],rax
  413498:	call   4141e0 <main@@Base+0x4b0>
  41349d:	mov    eax,eax
  41349f:	mov    ecx,eax
  4134a1:	mov    rdx,QWORD PTR [rbp-0x20]
  4134a5:	add    rdx,rcx
  4134a8:	mov    QWORD PTR [rbp-0x18],rdx
  4134ac:	mov    rax,QWORD PTR [rbp-0x18]
  4134b0:	add    rsp,0x20
  4134b4:	pop    rbp
  4134b5:	ret    
  4134b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134c0:	push   rbp
  4134c1:	mov    rbp,rsp
  4134c4:	sub    rsp,0x20
  4134c8:	mov    QWORD PTR [rbp-0x8],rdi
  4134cc:	mov    QWORD PTR [rbp-0x10],rsi
  4134d0:	mov    DWORD PTR [rbp-0x14],edx
  4134d3:	mov    rdi,QWORD PTR [rbp-0x8]
  4134d7:	mov    rsi,QWORD PTR [rbp-0x10]
  4134db:	mov    edx,DWORD PTR [rbp-0x14]
  4134de:	mov    ecx,0x20
  4134e3:	mov    r8d,0x10
  4134e9:	call   4209b0 <flatcc_verify_struct_as_typed_root@@Base>
  4134ee:	add    rsp,0x20
  4134f2:	pop    rbp
  4134f3:	ret    
  4134f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134fe:	xchg   ax,ax
  413500:	push   rbp
  413501:	mov    rbp,rsp
  413504:	sub    rsp,0x20
  413508:	mov    QWORD PTR [rbp-0x8],rdi
  41350c:	cmp    QWORD PTR [rbp-0x8],0x0
  413511:	je     41352e <test_typed_struct_buffer@@Base+0x54e>
  413517:	mov    rdi,QWORD PTR [rbp-0x8]
  41351b:	mov    esi,0xa8f53ed2
  413520:	call   4060e0 <test_typed_empty_monster@@Base+0x3a0>
  413525:	cmp    eax,0x0
  413528:	jne    41353b <test_typed_struct_buffer@@Base+0x55b>
  41352e:	xor    eax,eax
  413530:	mov    ecx,eax
  413532:	mov    QWORD PTR [rbp-0x10],rcx
  413536:	jmp    41355b <test_typed_struct_buffer@@Base+0x57b>
  41353b:	mov    rax,QWORD PTR [rbp-0x8]
  41353f:	mov    rdi,QWORD PTR [rbp-0x8]
  413543:	mov    QWORD PTR [rbp-0x18],rax
  413547:	call   4141e0 <main@@Base+0x4b0>
  41354c:	mov    eax,eax
  41354e:	mov    ecx,eax
  413550:	mov    rdx,QWORD PTR [rbp-0x18]
  413554:	add    rdx,rcx
  413557:	mov    QWORD PTR [rbp-0x10],rdx
  41355b:	mov    rax,QWORD PTR [rbp-0x10]
  41355f:	add    rsp,0x20
  413563:	pop    rbp
  413564:	ret    
  413565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41356f:	nop
  413570:	push   rbp
  413571:	mov    rbp,rsp
  413574:	sub    rsp,0x10
  413578:	mov    QWORD PTR [rbp-0x8],rdi
  41357c:	mov    QWORD PTR [rbp-0x10],rsi
  413580:	mov    rdi,QWORD PTR [rbp-0x8]
  413584:	mov    rsi,QWORD PTR [rbp-0x10]
  413588:	mov    edx,0xa8f53ed2
  41358d:	mov    ecx,0x20
  413592:	mov    r8d,0x10
  413598:	call   4209b0 <flatcc_verify_struct_as_typed_root@@Base>
  41359d:	add    rsp,0x10
  4135a1:	pop    rbp
  4135a2:	ret    
  4135a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135ad:	nop    DWORD PTR [rax]

00000000004135b0 <gen_monster_benchmark@@Base>:
  4135b0:	push   rbp
  4135b1:	mov    rbp,rsp
  4135b4:	sub    rsp,0x70
  4135b8:	mov    QWORD PTR [rbp-0x8],rdi
  4135bc:	mov    rax,QWORD PTR [rip+0xeb6a]        # 42212d <_IO_stdin_used@@Base+0x12d>
  4135c3:	mov    QWORD PTR [rbp-0x12],rax
  4135c7:	mov    cx,WORD PTR [rip+0xeb67]        # 422135 <_IO_stdin_used@@Base+0x135>
  4135ce:	mov    WORD PTR [rbp-0xa],cx
  4135d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4135d6:	call   418ef0 <flatcc_builder_reset@@Base>
  4135db:	mov    rdi,QWORD PTR [rbp-0x8]
  4135df:	mov    DWORD PTR [rbp-0x34],eax
  4135e2:	call   40a0d0 <gen_monster@@Base+0x760>
  4135e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4135eb:	mov    esi,0x50
  4135f0:	mov    DWORD PTR [rbp-0x38],eax
  4135f3:	call   40a120 <gen_monster@@Base+0x7b0>
  4135f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4135fc:	mov    DWORD PTR [rbp-0x3c],eax
  4135ff:	call   40a1a0 <gen_monster@@Base+0x830>
  413604:	vmovss xmm0,DWORD PTR [rip+0xe9fc]        # 422008 <_IO_stdin_used@@Base+0x8>
  41360c:	vmovss xmm1,DWORD PTR [rip+0xe9fc]        # 422010 <_IO_stdin_used@@Base+0x10>
  413614:	vmovss xmm2,DWORD PTR [rip+0xe9f0]        # 42200c <_IO_stdin_used@@Base+0xc>
  41361c:	mov    QWORD PTR [rbp-0x20],rax
  413620:	mov    rax,QWORD PTR [rbp-0x20]
  413624:	vmovss DWORD PTR [rax],xmm2
  413628:	mov    rax,QWORD PTR [rbp-0x20]
  41362c:	vmovss DWORD PTR [rax+0x4],xmm1
  413631:	mov    rax,QWORD PTR [rbp-0x20]
  413635:	vmovss DWORD PTR [rax+0x8],xmm0
  41363a:	mov    rdi,QWORD PTR [rbp-0x8]
  41363e:	call   40a1d0 <gen_monster@@Base+0x860>
  413643:	mov    rdi,QWORD PTR [rbp-0x8]
  413647:	lea    rsi,[rip+0xed09]        # 422357 <_IO_stdin_used@@Base+0x357>
  41364e:	mov    DWORD PTR [rbp-0x40],eax
  413651:	call   405bf0 <test_empty_monster@@Base+0x1a0>
  413656:	lea    rsi,[rbp-0x12]
  41365a:	mov    rdi,QWORD PTR [rbp-0x8]
  41365e:	mov    edx,0xa
  413663:	mov    DWORD PTR [rbp-0x44],eax
  413666:	call   40a260 <gen_monster@@Base+0x8f0>
  41366b:	mov    rdi,QWORD PTR [rbp-0x8]
  41366f:	mov    DWORD PTR [rbp-0x48],eax
  413672:	call   40a2b0 <gen_monster@@Base+0x940>
  413677:	mov    rdi,QWORD PTR [rbp-0x8]
  41367b:	mov    esi,0x1
  413680:	mov    DWORD PTR [rbp-0x4c],eax
  413683:	call   40a2d0 <gen_monster@@Base+0x960>
  413688:	mov    QWORD PTR [rbp-0x28],rax
  41368c:	mov    rax,QWORD PTR [rbp-0x28]
  413690:	mov    WORD PTR [rax],0x10
  413695:	mov    rax,QWORD PTR [rbp-0x28]
  413699:	mov    BYTE PTR [rax+0x2],0x20
  41369d:	mov    rdi,QWORD PTR [rbp-0x8]
  4136a1:	mov    esi,0x2
  4136a6:	call   40a2d0 <gen_monster@@Base+0x960>
  4136ab:	mov    QWORD PTR [rbp-0x28],rax
  4136af:	mov    rax,QWORD PTR [rbp-0x28]
  4136b3:	mov    WORD PTR [rax],0x30
  4136b8:	mov    rax,QWORD PTR [rbp-0x28]
  4136bc:	mov    BYTE PTR [rax+0x2],0x40
  4136c0:	mov    rax,QWORD PTR [rbp-0x28]
  4136c4:	mov    WORD PTR [rax+0x4],0x50
  4136ca:	mov    rax,QWORD PTR [rbp-0x28]
  4136ce:	mov    BYTE PTR [rax+0x6],0x60
  4136d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4136d6:	mov    esi,0x70
  4136db:	mov    edx,0xffffff80
  4136e0:	call   40a300 <gen_monster@@Base+0x990>
  4136e5:	mov    WORD PTR [rbp-0x30],0x191
  4136eb:	mov    BYTE PTR [rbp-0x2e],0x91
  4136ef:	mov    rdi,QWORD PTR [rbp-0x8]
  4136f3:	lea    rsi,[rbp-0x30]
  4136f7:	mov    QWORD PTR [rbp-0x58],rax
  4136fb:	call   40a370 <gen_monster@@Base+0xa00>
  413700:	mov    rdi,QWORD PTR [rbp-0x8]
  413704:	mov    QWORD PTR [rbp-0x60],rax
  413708:	call   40a4e0 <gen_monster@@Base+0xb70>
  41370d:	mov    rdi,QWORD PTR [rbp-0x8]
  413711:	mov    DWORD PTR [rbp-0x64],eax
  413714:	call   40ac50 <gen_monster@@Base+0x12e0>
  413719:	xor    edx,edx
  41371b:	mov    DWORD PTR [rbp-0x68],eax
  41371e:	mov    eax,edx
  413720:	add    rsp,0x70
  413724:	pop    rbp
  413725:	ret    
  413726:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000413730 <time_monster@@Base>:
  413730:	push   rbp
  413731:	mov    rbp,rsp
  413734:	sub    rsp,0x40
  413738:	mov    QWORD PTR [rbp-0x8],rdi
  41373c:	mov    DWORD PTR [rbp-0x1c],0xf4240
  413743:	lea    rdi,[rip+0x1129c]        # 4249e6 <_IO_stdin_used@@Base+0x29e6>
  41374a:	mov    al,0x0
  41374c:	call   404070 <printf@plt>
  413751:	mov    DWORD PTR [rbp-0x30],eax
  413754:	call   4137e0 <time_monster@@Base+0xb0>
  413759:	vmovsd QWORD PTR [rbp-0x10],xmm0
  41375e:	mov    DWORD PTR [rbp-0x2c],0x0
  413765:	cmp    DWORD PTR [rbp-0x2c],0xf4240
  41376c:	jge    413789 <time_monster@@Base+0x59>
  413772:	mov    rdi,QWORD PTR [rbp-0x8]
  413776:	call   4135b0 <gen_monster_benchmark@@Base>
  41377b:	mov    eax,DWORD PTR [rbp-0x2c]
  41377e:	add    eax,0x1
  413781:	mov    DWORD PTR [rbp-0x2c],eax
  413784:	jmp    413765 <time_monster@@Base+0x35>
  413789:	mov    rdi,QWORD PTR [rbp-0x8]
  41378d:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  413792:	mov    QWORD PTR [rbp-0x28],rax
  413796:	call   4137e0 <time_monster@@Base+0xb0>
  41379b:	vmovsd QWORD PTR [rbp-0x18],xmm0
  4137a0:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4137a5:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  4137aa:	mov    rsi,QWORD PTR [rbp-0x28]
  4137ae:	lea    rdi,[rip+0x11243]        # 4249f8 <_IO_stdin_used@@Base+0x29f8>
  4137b5:	mov    edx,0xf4240
  4137ba:	lea    rcx,[rip+0x1124d]        # 424a0e <_IO_stdin_used@@Base+0x2a0e>
  4137c1:	call   413850 <time_monster@@Base+0x120>
  4137c6:	xor    edx,edx
  4137c8:	mov    DWORD PTR [rbp-0x34],eax
  4137cb:	mov    eax,edx
  4137cd:	add    rsp,0x40
  4137d1:	pop    rbp
  4137d2:	ret    
  4137d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137dd:	nop    DWORD PTR [rax]
  4137e0:	push   rbp
  4137e1:	mov    rbp,rsp
  4137e4:	sub    rsp,0x10
  4137e8:	xor    eax,eax
  4137ea:	mov    esi,eax
  4137ec:	lea    rdi,[rbp-0x10]
  4137f0:	call   404080 <gettimeofday@plt>
  4137f5:	cmp    QWORD PTR [rip+0x1d8c3],0x0        # 4310c0 <__bss_start@@Base+0x8>
  4137fd:	jne    413819 <time_monster@@Base+0xe9>
  413803:	mov    rax,QWORD PTR [rbp-0x10]
  413807:	mov    QWORD PTR [rip+0x1d8b2],rax        # 4310c0 <__bss_start@@Base+0x8>
  41380e:	mov    rax,QWORD PTR [rbp-0x8]
  413812:	mov    QWORD PTR [rip+0x1d8af],rax        # 4310c8 <__bss_start@@Base+0x10>
  413819:	vmovsd xmm0,QWORD PTR [rip+0xe80f]        # 422030 <_IO_stdin_used@@Base+0x30>
  413821:	mov    rax,QWORD PTR [rbp-0x10]
  413825:	sub    rax,QWORD PTR [rip+0x1d894]        # 4310c0 <__bss_start@@Base+0x8>
  41382c:	vcvtsi2sd xmm1,xmm1,rax
  413831:	mov    rax,QWORD PTR [rbp-0x8]
  413835:	sub    rax,QWORD PTR [rip+0x1d88c]        # 4310c8 <__bss_start@@Base+0x10>
  41383c:	vcvtsi2sd xmm2,xmm2,rax
  413841:	vdivsd xmm0,xmm2,xmm0
  413845:	vaddsd xmm0,xmm1,xmm0
  413849:	add    rsp,0x10
  41384d:	pop    rbp
  41384e:	ret    
  41384f:	nop
  413850:	push   rbp
  413851:	mov    rbp,rsp
  413854:	sub    rsp,0x70
  413858:	vmovsd xmm2,QWORD PTR [rip+0xe7d0]        # 422030 <_IO_stdin_used@@Base+0x30>
  413860:	mov    QWORD PTR [rbp-0x8],rdi
  413864:	vmovsd QWORD PTR [rbp-0x10],xmm0
  413869:	vmovsd QWORD PTR [rbp-0x18],xmm1
  41386e:	mov    QWORD PTR [rbp-0x20],rsi
  413872:	mov    DWORD PTR [rbp-0x24],edx
  413875:	mov    QWORD PTR [rbp-0x30],rcx
  413879:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  41387e:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  413883:	vsubsd xmm0,xmm0,xmm1
  413887:	vmovsd QWORD PTR [rbp-0x38],xmm0
  41388c:	mov    rsi,QWORD PTR [rbp-0x8]
  413890:	lea    rdi,[rip+0x131e4]        # 426a7b <_IO_stdin_used@@Base+0x4a7b>
  413897:	xor    eax,eax
  413899:	mov    BYTE PTR [rbp-0x41],al
  41389c:	vmovsd QWORD PTR [rbp-0x50],xmm2
  4138a1:	call   404070 <printf@plt>
  4138a6:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  4138ab:	lea    rdi,[rip+0x131d8]        # 426a8a <_IO_stdin_used@@Base+0x4a8a>
  4138b2:	mov    r8b,0x1
  4138b5:	mov    DWORD PTR [rbp-0x54],eax
  4138b8:	mov    al,r8b
  4138bb:	call   404070 <printf@plt>
  4138c0:	mov    esi,DWORD PTR [rbp-0x24]
  4138c3:	lea    rdi,[rip+0x131d8]        # 426aa2 <_IO_stdin_used@@Base+0x4aa2>
  4138ca:	mov    r8b,BYTE PTR [rbp-0x41]
  4138ce:	mov    DWORD PTR [rbp-0x58],eax
  4138d1:	mov    al,r8b
  4138d4:	call   404070 <printf@plt>
  4138d9:	mov    rsi,QWORD PTR [rbp-0x20]
  4138dd:	lea    rdi,[rip+0x131ce]        # 426ab2 <_IO_stdin_used@@Base+0x4ab2>
  4138e4:	mov    r8b,BYTE PTR [rbp-0x41]
  4138e8:	mov    DWORD PTR [rbp-0x5c],eax
  4138eb:	mov    al,r8b
  4138ee:	call   404070 <printf@plt>
  4138f3:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  4138f8:	vmovdqa xmm1,XMMWORD PTR [rip+0xe850]        # 422150 <_IO_stdin_used@@Base+0x150>
  413900:	vmovq  xmm2,QWORD PTR [rbp-0x20]
  413905:	vpunpckldq xmm1,xmm2,xmm1
  413909:	vmovapd xmm2,XMMWORD PTR [rip+0xe84f]        # 422160 <_IO_stdin_used@@Base+0x160>
  413911:	vsubpd xmm1,xmm1,xmm2
  413915:	vhaddpd xmm1,xmm1,xmm1
  413919:	vmulsd xmm0,xmm0,xmm1
  41391d:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  413922:	vdivsd xmm0,xmm0,xmm1
  413926:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  41392b:	lea    rdi,[rip+0x13193]        # 426ac5 <_IO_stdin_used@@Base+0x4ac5>
  413932:	mov    DWORD PTR [rbp-0x60],eax
  413935:	mov    al,0x1
  413937:	call   404070 <printf@plt>
  41393c:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  413941:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  413946:	lea    rdi,[rip+0x13190]        # 426add <_IO_stdin_used@@Base+0x4add>
  41394d:	mov    DWORD PTR [rbp-0x64],eax
  413950:	mov    al,0x1
  413952:	call   404070 <printf@plt>
  413957:	cmp    QWORD PTR [rbp-0x30],0x0
  41395c:	je     41398b <time_monster@@Base+0x25b>
  413962:	cmp    DWORD PTR [rbp-0x24],0x1
  413966:	je     41398b <time_monster@@Base+0x25b>
  41396c:	vmovsd xmm0,QWORD PTR [rip+0xe6c4]        # 422038 <_IO_stdin_used@@Base+0x38>
  413974:	mov    rsi,QWORD PTR [rbp-0x30]
  413978:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  41397d:	lea    rdi,[rip+0x1317a]        # 426afe <_IO_stdin_used@@Base+0x4afe>
  413984:	mov    al,0x1
  413986:	call   404070 <printf@plt>
  41398b:	vmovsd xmm0,QWORD PTR [rip+0xe6ad]        # 422040 <_IO_stdin_used@@Base+0x40>
  413993:	vmovsd xmm1,QWORD PTR [rip+0xe6ad]        # 422048 <_IO_stdin_used@@Base+0x48>
  41399b:	vmulsd xmm1,xmm1,QWORD PTR [rbp-0x38]
  4139a0:	vcvtsi2sd xmm2,xmm2,DWORD PTR [rbp-0x24]
  4139a5:	vdivsd xmm1,xmm1,xmm2
  4139a9:	vmovsd QWORD PTR [rbp-0x40],xmm1
  4139ae:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  4139b3:	jbe    4139d1 <time_monster@@Base+0x2a1>
  4139b9:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  4139be:	lea    rdi,[rip+0x1315d]        # 426b22 <_IO_stdin_used@@Base+0x4b22>
  4139c5:	mov    al,0x1
  4139c7:	call   404070 <printf@plt>
  4139cc:	jmp    413a68 <time_monster@@Base+0x338>
  4139d1:	vmovsd xmm0,QWORD PTR [rip+0xe657]        # 422030 <_IO_stdin_used@@Base+0x30>
  4139d9:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  4139de:	jbe    413a08 <time_monster@@Base+0x2d8>
  4139e4:	vmovsd xmm0,QWORD PTR [rip+0xe654]        # 422040 <_IO_stdin_used@@Base+0x40>
  4139ec:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  4139f1:	vdivsd xmm0,xmm1,xmm0
  4139f5:	lea    rdi,[rip+0x1313e]        # 426b3a <_IO_stdin_used@@Base+0x4b3a>
  4139fc:	mov    al,0x1
  4139fe:	call   404070 <printf@plt>
  413a03:	jmp    413a63 <time_monster@@Base+0x333>
  413a08:	vmovsd xmm0,QWORD PTR [rip+0xe638]        # 422048 <_IO_stdin_used@@Base+0x48>
  413a10:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  413a15:	jbe    413a3f <time_monster@@Base+0x30f>
  413a1b:	vmovsd xmm0,QWORD PTR [rip+0xe60d]        # 422030 <_IO_stdin_used@@Base+0x30>
  413a23:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  413a28:	vdivsd xmm0,xmm1,xmm0
  413a2c:	lea    rdi,[rip+0x1311f]        # 426b52 <_IO_stdin_used@@Base+0x4b52>
  413a33:	mov    al,0x1
  413a35:	call   404070 <printf@plt>
  413a3a:	jmp    413a5e <time_monster@@Base+0x32e>
  413a3f:	vmovsd xmm0,QWORD PTR [rip+0xe601]        # 422048 <_IO_stdin_used@@Base+0x48>
  413a47:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  413a4c:	vdivsd xmm0,xmm1,xmm0
  413a50:	lea    rdi,[rip+0x13113]        # 426b6a <_IO_stdin_used@@Base+0x4b6a>
  413a57:	mov    al,0x1
  413a59:	call   404070 <printf@plt>
  413a5e:	jmp    413a63 <time_monster@@Base+0x333>
  413a63:	jmp    413a68 <time_monster@@Base+0x338>
  413a68:	xor    eax,eax
  413a6a:	add    rsp,0x70
  413a6e:	pop    rbp
  413a6f:	ret    

0000000000413a70 <gen_struct_buffer_benchmark@@Base>:
  413a70:	push   rbp
  413a71:	mov    rbp,rsp
  413a74:	sub    rsp,0x30
  413a78:	mov    QWORD PTR [rbp-0x10],rdi
  413a7c:	mov    rdi,QWORD PTR [rbp-0x10]
  413a80:	call   418ef0 <flatcc_builder_reset@@Base>
  413a85:	vmovss xmm0,DWORD PTR [rip+0xe57f]        # 42200c <_IO_stdin_used@@Base+0xc>
  413a8d:	vmovss xmm1,DWORD PTR [rip+0xe57b]        # 422010 <_IO_stdin_used@@Base+0x10>
  413a95:	vmovss xmm2,DWORD PTR [rip+0xe57b]        # 422018 <_IO_stdin_used@@Base+0x18>
  413a9d:	vmovsd xmm3,QWORD PTR [rip+0xe583]        # 422028 <_IO_stdin_used@@Base+0x28>
  413aa5:	mov    rdi,QWORD PTR [rbp-0x10]
  413aa9:	mov    esi,0x8
  413aae:	mov    edx,0xaaa
  413ab3:	mov    ecx,0xffffffef
  413ab8:	mov    DWORD PTR [rbp-0x2c],eax
  413abb:	call   412eb0 <test_struct_buffer@@Base+0x320>
  413ac0:	xor    ecx,ecx
  413ac2:	mov    esi,ecx
  413ac4:	mov    rdi,QWORD PTR [rbp-0x10]
  413ac8:	mov    DWORD PTR [rbp-0x30],eax
  413acb:	call   41e0d0 <flatcc_builder_get_direct_buffer@@Base>
  413ad0:	mov    QWORD PTR [rbp-0x18],rax
  413ad4:	cmp    QWORD PTR [rbp-0x18],0x0
  413ad9:	jne    413aeb <gen_struct_buffer_benchmark@@Base+0x7b>
  413adf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413ae6:	jmp    413bd9 <gen_struct_buffer_benchmark@@Base+0x169>
  413aeb:	xor    eax,eax
  413aed:	mov    esi,eax
  413aef:	mov    rdi,QWORD PTR [rbp-0x18]
  413af3:	call   413bf0 <gen_struct_buffer_benchmark@@Base+0x180>
  413af8:	mov    QWORD PTR [rbp-0x28],rax
  413afc:	mov    rax,QWORD PTR [rbp-0x28]
  413b00:	mov    QWORD PTR [rbp-0x20],rax
  413b04:	mov    rdi,QWORD PTR [rbp-0x20]
  413b08:	call   412fd0 <test_struct_buffer@@Base+0x440>
  413b0d:	vmovss xmm0,DWORD PTR [rip+0xe4f7]        # 42200c <_IO_stdin_used@@Base+0xc>
  413b15:	mov    rcx,QWORD PTR [rbp-0x20]
  413b19:	vmovss xmm1,DWORD PTR [rcx]
  413b1d:	vucomiss xmm1,xmm0
  413b21:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b27:	jp     413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b2d:	vmovss xmm0,DWORD PTR [rip+0xe4db]        # 422010 <_IO_stdin_used@@Base+0x10>
  413b35:	mov    rax,QWORD PTR [rbp-0x20]
  413b39:	vmovss xmm1,DWORD PTR [rax+0x4]
  413b3e:	vucomiss xmm1,xmm0
  413b42:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b48:	jp     413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b4e:	vmovss xmm0,DWORD PTR [rip+0xe4c2]        # 422018 <_IO_stdin_used@@Base+0x18>
  413b56:	mov    rax,QWORD PTR [rbp-0x20]
  413b5a:	vmovss xmm1,DWORD PTR [rax+0x8]
  413b5f:	vucomiss xmm1,xmm0
  413b63:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b69:	jp     413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b6f:	vmovsd xmm0,QWORD PTR [rip+0xe4b1]        # 422028 <_IO_stdin_used@@Base+0x28>
  413b77:	mov    rax,QWORD PTR [rbp-0x20]
  413b7b:	vmovsd xmm1,QWORD PTR [rax+0x10]
  413b80:	vucomisd xmm1,xmm0
  413b84:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b8a:	jp     413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413b90:	mov    rax,QWORD PTR [rbp-0x20]
  413b94:	movsx  ecx,BYTE PTR [rax+0x18]
  413b98:	cmp    ecx,0x8
  413b9b:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413ba1:	mov    rax,QWORD PTR [rbp-0x20]
  413ba5:	movsx  ecx,WORD PTR [rax+0x1a]
  413ba9:	cmp    ecx,0xaaa
  413baf:	jne    413bc6 <gen_struct_buffer_benchmark@@Base+0x156>
  413bb5:	mov    rax,QWORD PTR [rbp-0x20]
  413bb9:	movsx  ecx,BYTE PTR [rax+0x1c]
  413bbd:	cmp    ecx,0xffffffef
  413bc0:	je     413bd2 <gen_struct_buffer_benchmark@@Base+0x162>
  413bc6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413bcd:	jmp    413bd9 <gen_struct_buffer_benchmark@@Base+0x169>
  413bd2:	mov    DWORD PTR [rbp-0x4],0x0
  413bd9:	mov    eax,DWORD PTR [rbp-0x4]
  413bdc:	add    rsp,0x30
  413be0:	pop    rbp
  413be1:	ret    
  413be2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413bec:	nop    DWORD PTR [rax+0x0]
  413bf0:	push   rbp
  413bf1:	mov    rbp,rsp
  413bf4:	sub    rsp,0x20
  413bf8:	mov    QWORD PTR [rbp-0x8],rdi
  413bfc:	mov    QWORD PTR [rbp-0x10],rsi
  413c00:	cmp    QWORD PTR [rbp-0x8],0x0
  413c05:	je     413c21 <gen_struct_buffer_benchmark@@Base+0x1b1>
  413c0b:	mov    rdi,QWORD PTR [rbp-0x8]
  413c0f:	mov    rsi,QWORD PTR [rbp-0x10]
  413c13:	call   406960 <test_typed_table_with_emptystruct@@Base+0x440>
  413c18:	cmp    eax,0x0
  413c1b:	jne    413c2e <gen_struct_buffer_benchmark@@Base+0x1be>
  413c21:	xor    eax,eax
  413c23:	mov    ecx,eax
  413c25:	mov    QWORD PTR [rbp-0x18],rcx
  413c29:	jmp    413c4e <gen_struct_buffer_benchmark@@Base+0x1de>
  413c2e:	mov    rax,QWORD PTR [rbp-0x8]
  413c32:	mov    rdi,QWORD PTR [rbp-0x8]
  413c36:	mov    QWORD PTR [rbp-0x20],rax
  413c3a:	call   4141e0 <main@@Base+0x4b0>
  413c3f:	mov    eax,eax
  413c41:	mov    ecx,eax
  413c43:	mov    rdx,QWORD PTR [rbp-0x20]
  413c47:	add    rdx,rcx
  413c4a:	mov    QWORD PTR [rbp-0x18],rdx
  413c4e:	mov    rax,QWORD PTR [rbp-0x18]
  413c52:	add    rsp,0x20
  413c56:	pop    rbp
  413c57:	ret    
  413c58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413c60 <time_struct_buffer@@Base>:
  413c60:	push   rbp
  413c61:	mov    rbp,rsp
  413c64:	sub    rsp,0x40
  413c68:	mov    QWORD PTR [rbp-0x8],rdi
  413c6c:	mov    DWORD PTR [rbp-0x1c],0xf4240
  413c73:	mov    DWORD PTR [rbp-0x30],0x0
  413c7a:	lea    rdi,[rip+0x10d65]        # 4249e6 <_IO_stdin_used@@Base+0x29e6>
  413c81:	mov    al,0x0
  413c83:	call   404070 <printf@plt>
  413c88:	mov    DWORD PTR [rbp-0x34],eax
  413c8b:	call   4137e0 <time_monster@@Base+0xb0>
  413c90:	vmovsd QWORD PTR [rbp-0x10],xmm0
  413c95:	mov    DWORD PTR [rbp-0x2c],0x0
  413c9c:	cmp    DWORD PTR [rbp-0x2c],0xf4240
  413ca3:	jge    413cc6 <time_struct_buffer@@Base+0x66>
  413ca9:	mov    rdi,QWORD PTR [rbp-0x8]
  413cad:	call   413a70 <gen_struct_buffer_benchmark@@Base>
  413cb2:	or     eax,DWORD PTR [rbp-0x30]
  413cb5:	mov    DWORD PTR [rbp-0x30],eax
  413cb8:	mov    eax,DWORD PTR [rbp-0x2c]
  413cbb:	add    eax,0x1
  413cbe:	mov    DWORD PTR [rbp-0x2c],eax
  413cc1:	jmp    413c9c <time_struct_buffer@@Base+0x3c>
  413cc6:	call   4137e0 <time_monster@@Base+0xb0>
  413ccb:	vmovsd QWORD PTR [rbp-0x18],xmm0
  413cd0:	mov    rdi,QWORD PTR [rbp-0x8]
  413cd4:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  413cd9:	mov    QWORD PTR [rbp-0x28],rax
  413cdd:	cmp    DWORD PTR [rbp-0x30],0x0
  413ce1:	je     413cf5 <time_struct_buffer@@Base+0x95>
  413ce7:	lea    rdi,[rip+0x10d28]        # 424a16 <_IO_stdin_used@@Base+0x2a16>
  413cee:	mov    al,0x0
  413cf0:	call   404070 <printf@plt>
  413cf5:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  413cfa:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  413cff:	mov    rsi,QWORD PTR [rbp-0x28]
  413d03:	lea    rdi,[rip+0x10d1e]        # 424a28 <_IO_stdin_used@@Base+0x2a28>
  413d0a:	mov    edx,0xf4240
  413d0f:	lea    rcx,[rip+0x10cf8]        # 424a0e <_IO_stdin_used@@Base+0x2a0e>
  413d16:	call   413850 <time_monster@@Base+0x120>
  413d1b:	mov    edx,DWORD PTR [rbp-0x30]
  413d1e:	mov    DWORD PTR [rbp-0x38],eax
  413d21:	mov    eax,edx
  413d23:	add    rsp,0x40
  413d27:	pop    rbp
  413d28:	ret    
  413d29:	nop    DWORD PTR [rax+0x0]

0000000000413d30 <main@@Base>:
  413d30:	push   rbp
  413d31:	mov    rbp,rsp
  413d34:	sub    rsp,0x1b0
  413d3b:	mov    DWORD PTR [rbp-0x4],0x0
  413d42:	mov    DWORD PTR [rbp-0x8],edi
  413d45:	mov    QWORD PTR [rbp-0x10],rsi
  413d49:	lea    rax,[rbp-0x198]
  413d50:	mov    QWORD PTR [rbp-0x1a0],rax
  413d57:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413d5e:	call   418c70 <flatcc_builder_init@@Base>
  413d63:	lea    rdi,[rip+0x10ceb]        # 424a55 <_IO_stdin_used@@Base+0x2a55>
  413d6a:	mov    DWORD PTR [rbp-0x1a4],eax
  413d70:	mov    al,0x0
  413d72:	call   404070 <printf@plt>
  413d77:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413d7e:	mov    DWORD PTR [rbp-0x1a8],eax
  413d84:	call   406430 <test_table_with_emptystruct@@Base>
  413d89:	cmp    eax,0x0
  413d8c:	je     413dac <main@@Base+0x7c>
  413d92:	lea    rdi,[rip+0x10cd8]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413d99:	mov    al,0x0
  413d9b:	call   404070 <printf@plt>
  413da0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413da7:	jmp    4141cc <main@@Base+0x49c>
  413dac:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413db3:	call   4048e0 <test_enums@@Base>
  413db8:	cmp    eax,0x0
  413dbb:	je     413ddb <main@@Base+0xab>
  413dc1:	lea    rdi,[rip+0x10ca9]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413dc8:	mov    al,0x0
  413dca:	call   404070 <printf@plt>
  413dcf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413dd6:	jmp    4141cc <main@@Base+0x49c>
  413ddb:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413de2:	call   405a50 <test_empty_monster@@Base>
  413de7:	cmp    eax,0x0
  413dea:	je     413e0a <main@@Base+0xda>
  413df0:	lea    rdi,[rip+0x10c7a]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413df7:	mov    al,0x0
  413df9:	call   404070 <printf@plt>
  413dfe:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413e05:	jmp    4141cc <main@@Base+0x49c>
  413e0a:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413e11:	call   40ac90 <test_monster@@Base>
  413e16:	cmp    eax,0x0
  413e19:	je     413e39 <main@@Base+0x109>
  413e1f:	lea    rdi,[rip+0x10c4b]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413e26:	mov    al,0x0
  413e28:	call   404070 <printf@plt>
  413e2d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413e34:	jmp    4141cc <main@@Base+0x49c>
  413e39:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413e40:	call   40ad40 <test_monster_with_size@@Base>
  413e45:	cmp    eax,0x0
  413e48:	je     413e68 <main@@Base+0x138>
  413e4e:	lea    rdi,[rip+0x10c1c]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413e55:	mov    al,0x0
  413e57:	call   404070 <printf@plt>
  413e5c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413e63:	jmp    4141cc <main@@Base+0x49c>
  413e68:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413e6f:	call   40aed0 <test_string@@Base>
  413e74:	cmp    eax,0x0
  413e77:	je     413e97 <main@@Base+0x167>
  413e7d:	lea    rdi,[rip+0x10bed]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413e84:	mov    al,0x0
  413e86:	call   404070 <printf@plt>
  413e8b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413e92:	jmp    4141cc <main@@Base+0x49c>
  413e97:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413e9e:	call   412b90 <test_struct_buffer@@Base>
  413ea3:	cmp    eax,0x0
  413ea6:	je     413ec6 <main@@Base+0x196>
  413eac:	lea    rdi,[rip+0x10bbe]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413eb3:	mov    al,0x0
  413eb5:	call   404070 <printf@plt>
  413eba:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413ec1:	jmp    4141cc <main@@Base+0x49c>
  413ec6:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413ecd:	call   405d40 <test_typed_empty_monster@@Base>
  413ed2:	cmp    eax,0x0
  413ed5:	je     413ef5 <main@@Base+0x1c5>
  413edb:	lea    rdi,[rip+0x10b8f]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413ee2:	mov    al,0x0
  413ee4:	call   404070 <printf@plt>
  413ee9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413ef0:	jmp    4141cc <main@@Base+0x49c>
  413ef5:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413efc:	call   406520 <test_typed_table_with_emptystruct@@Base>
  413f01:	cmp    eax,0x0
  413f04:	je     413f24 <main@@Base+0x1f4>
  413f0a:	lea    rdi,[rip+0x10b60]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413f11:	mov    al,0x0
  413f13:	call   404070 <printf@plt>
  413f18:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413f1f:	jmp    4141cc <main@@Base+0x49c>
  413f24:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413f2b:	call   412fe0 <test_typed_struct_buffer@@Base>
  413f30:	cmp    eax,0x0
  413f33:	je     413f53 <main@@Base+0x223>
  413f39:	lea    rdi,[rip+0x10b31]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413f40:	mov    al,0x0
  413f42:	call   404070 <printf@plt>
  413f47:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413f4e:	jmp    4141cc <main@@Base+0x49c>
  413f53:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413f5a:	call   40e2b0 <test_clone_slice@@Base>
  413f5f:	cmp    eax,0x0
  413f62:	je     413f82 <main@@Base+0x252>
  413f68:	lea    rdi,[rip+0x10b02]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413f6f:	mov    al,0x0
  413f71:	call   404070 <printf@plt>
  413f76:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413f7d:	jmp    4141cc <main@@Base+0x49c>
  413f82:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413f89:	call   411ec0 <test_add_set_defaults@@Base>
  413f8e:	cmp    eax,0x0
  413f91:	je     413fb1 <main@@Base+0x281>
  413f97:	lea    rdi,[rip+0x10ad3]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413f9e:	mov    al,0x0
  413fa0:	call   404070 <printf@plt>
  413fa5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413fac:	jmp    4141cc <main@@Base+0x49c>
  413fb1:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413fb8:	call   40ed70 <test_create_add_field@@Base>
  413fbd:	cmp    eax,0x0
  413fc0:	je     413fe0 <main@@Base+0x2b0>
  413fc6:	lea    rdi,[rip+0x10aa4]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413fcd:	mov    al,0x0
  413fcf:	call   404070 <printf@plt>
  413fd4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413fdb:	jmp    4141cc <main@@Base+0x49c>
  413fe0:	mov    rdi,QWORD PTR [rbp-0x1a0]
  413fe7:	call   40f140 <test_union_vector@@Base>
  413fec:	cmp    eax,0x0
  413fef:	je     41400f <main@@Base+0x2df>
  413ff5:	lea    rdi,[rip+0x10a75]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  413ffc:	mov    al,0x0
  413ffe:	call   404070 <printf@plt>
  414003:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41400a:	jmp    4141cc <main@@Base+0x49c>
  41400f:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414016:	call   40df20 <test_basic_sort@@Base>
  41401b:	cmp    eax,0x0
  41401e:	je     41403e <main@@Base+0x30e>
  414024:	lea    rdi,[rip+0x10a46]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  41402b:	mov    al,0x0
  41402d:	call   404070 <printf@plt>
  414032:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414039:	jmp    4141cc <main@@Base+0x49c>
  41403e:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414045:	call   40b2c0 <test_sort_find@@Base>
  41404a:	cmp    eax,0x0
  41404d:	je     41406d <main@@Base+0x33d>
  414053:	lea    rdi,[rip+0x10a17]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  41405a:	mov    al,0x0
  41405c:	call   404070 <printf@plt>
  414061:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414068:	jmp    4141cc <main@@Base+0x49c>
  41406d:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414074:	call   40bb60 <test_scan@@Base>
  414079:	cmp    eax,0x0
  41407c:	je     41409c <main@@Base+0x36c>
  414082:	lea    rdi,[rip+0x109e8]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  414089:	mov    al,0x0
  41408b:	call   404070 <printf@plt>
  414090:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414097:	jmp    4141cc <main@@Base+0x49c>
  41409c:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4140a3:	call   412390 <test_nested_buffer@@Base>
  4140a8:	cmp    eax,0x0
  4140ab:	je     4140cb <main@@Base+0x39b>
  4140b1:	lea    rdi,[rip+0x109b9]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  4140b8:	mov    al,0x0
  4140ba:	call   404070 <printf@plt>
  4140bf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4140c6:	jmp    4141cc <main@@Base+0x49c>
  4140cb:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4140d2:	call   412670 <test_nested_buffer_first@@Base>
  4140d7:	cmp    eax,0x0
  4140da:	je     4140fa <main@@Base+0x3ca>
  4140e0:	lea    rdi,[rip+0x1098a]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  4140e7:	mov    al,0x0
  4140e9:	call   404070 <printf@plt>
  4140ee:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4140f5:	jmp    4141cc <main@@Base+0x49c>
  4140fa:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414101:	call   412830 <test_nested_buffer_using_nest@@Base>
  414106:	cmp    eax,0x0
  414109:	je     414129 <main@@Base+0x3f9>
  41410f:	lea    rdi,[rip+0x1095b]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  414116:	mov    al,0x0
  414118:	call   404070 <printf@plt>
  41411d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414124:	jmp    4141cc <main@@Base+0x49c>
  414129:	mov    rax,QWORD PTR [rbp-0x1a0]
  414130:	mov    rdi,rax
  414133:	call   412b80 <verify_include@@Base>
  414138:	cmp    eax,0x0
  41413b:	je     41415b <main@@Base+0x42b>
  414141:	lea    rdi,[rip+0x10929]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  414148:	mov    al,0x0
  41414a:	call   404070 <printf@plt>
  41414f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414156:	jmp    4141cc <main@@Base+0x49c>
  41415b:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414162:	call   4048f0 <test_type_aliases@@Base>
  414167:	cmp    eax,0x0
  41416a:	je     41418a <main@@Base+0x45a>
  414170:	lea    rdi,[rip+0x108fa]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  414177:	mov    al,0x0
  414179:	call   404070 <printf@plt>
  41417e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414185:	jmp    4141cc <main@@Base+0x49c>
  41418a:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414191:	call   40fe90 <test_mixed_type_union@@Base>
  414196:	cmp    eax,0x0
  414199:	je     4141b9 <main@@Base+0x489>
  41419f:	lea    rdi,[rip+0x108cb]        # 424a71 <_IO_stdin_used@@Base+0x2a71>
  4141a6:	mov    al,0x0
  4141a8:	call   404070 <printf@plt>
  4141ad:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4141b4:	jmp    4141cc <main@@Base+0x49c>
  4141b9:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4141c0:	call   418f20 <flatcc_builder_clear@@Base>
  4141c5:	mov    DWORD PTR [rbp-0x4],0x0
  4141cc:	mov    eax,DWORD PTR [rbp-0x4]
  4141cf:	add    rsp,0x1b0
  4141d6:	pop    rbp
  4141d7:	ret    
  4141d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4141e0:	push   rbp
  4141e1:	mov    rbp,rsp
  4141e4:	sub    rsp,0x10
  4141e8:	mov    QWORD PTR [rbp-0x8],rdi
  4141ec:	mov    rax,QWORD PTR [rbp-0x8]
  4141f0:	mov    edi,DWORD PTR [rax]
  4141f2:	call   414200 <main@@Base+0x4d0>
  4141f7:	add    rsp,0x10
  4141fb:	pop    rbp
  4141fc:	ret    
  4141fd:	nop    DWORD PTR [rax]
  414200:	push   rbp
  414201:	mov    rbp,rsp
  414204:	mov    DWORD PTR [rbp-0x4],edi
  414207:	mov    eax,DWORD PTR [rbp-0x4]
  41420a:	pop    rbp
  41420b:	ret    
  41420c:	nop    DWORD PTR [rax+0x0]
  414210:	push   rbp
  414211:	mov    rbp,rsp
  414214:	sub    rsp,0x10
  414218:	mov    QWORD PTR [rbp-0x8],rdi
  41421c:	mov    rax,QWORD PTR [rbp-0x8]
  414220:	mov    edi,DWORD PTR [rax]
  414222:	call   414280 <main@@Base+0x550>
  414227:	add    rsp,0x10
  41422b:	pop    rbp
  41422c:	ret    
  41422d:	nop    DWORD PTR [rax]
  414230:	push   rbp
  414231:	mov    rbp,rsp
  414234:	sub    rsp,0x10
  414238:	mov    QWORD PTR [rbp-0x8],rdi
  41423c:	mov    rax,QWORD PTR [rbp-0x8]
  414240:	movzx  edi,WORD PTR [rax]
  414243:	call   414290 <main@@Base+0x560>
  414248:	movzx  eax,ax
  41424b:	add    rsp,0x10
  41424f:	pop    rbp
  414250:	ret    
  414251:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41425b:	nop    DWORD PTR [rax+rax*1+0x0]
  414260:	push   rbp
  414261:	mov    rbp,rsp
  414264:	sub    rsp,0x10
  414268:	mov    QWORD PTR [rbp-0x8],rdi
  41426c:	mov    rax,QWORD PTR [rbp-0x8]
  414270:	movsx  edi,WORD PTR [rax]
  414273:	call   4142a0 <main@@Base+0x570>
  414278:	cwde   
  414279:	add    rsp,0x10
  41427d:	pop    rbp
  41427e:	ret    
  41427f:	nop
  414280:	push   rbp
  414281:	mov    rbp,rsp
  414284:	mov    DWORD PTR [rbp-0x4],edi
  414287:	mov    eax,DWORD PTR [rbp-0x4]
  41428a:	pop    rbp
  41428b:	ret    
  41428c:	nop    DWORD PTR [rax+0x0]
  414290:	push   rbp
  414291:	mov    rbp,rsp
  414294:	mov    WORD PTR [rbp-0x2],di
  414298:	movzx  eax,WORD PTR [rbp-0x2]
  41429c:	pop    rbp
  41429d:	ret    
  41429e:	xchg   ax,ax
  4142a0:	push   rbp
  4142a1:	mov    rbp,rsp
  4142a4:	mov    WORD PTR [rbp-0x2],di
  4142a8:	movsx  eax,WORD PTR [rbp-0x2]
  4142ac:	pop    rbp
  4142ad:	ret    
  4142ae:	xchg   ax,ax
  4142b0:	push   rbp
  4142b1:	mov    rbp,rsp
  4142b4:	push   r14
  4142b6:	push   rbx
  4142b7:	sub    rsp,0x50
  4142bb:	mov    eax,DWORD PTR [rbp+0x30]
  4142be:	mov    r10d,DWORD PTR [rbp+0x28]
  4142c2:	mov    r11,QWORD PTR [rbp+0x20]
  4142c6:	mov    rbx,QWORD PTR [rbp+0x18]
  4142ca:	mov    r14d,DWORD PTR [rbp+0x10]
  4142ce:	mov    QWORD PTR [rbp-0x20],rdi
  4142d2:	mov    BYTE PTR [rbp-0x21],sil
  4142d6:	mov    BYTE PTR [rbp-0x22],dl
  4142d9:	mov    WORD PTR [rbp-0x24],cx
  4142dd:	mov    WORD PTR [rbp-0x26],r8w
  4142e2:	mov    DWORD PTR [rbp-0x2c],r9d
  4142e6:	vmovss DWORD PTR [rbp-0x30],xmm0
  4142eb:	vmovsd QWORD PTR [rbp-0x38],xmm1
  4142f0:	mov    rdi,QWORD PTR [rbp-0x20]
  4142f4:	mov    DWORD PTR [rbp-0x3c],eax
  4142f7:	mov    DWORD PTR [rbp-0x40],r10d
  4142fb:	mov    QWORD PTR [rbp-0x48],r11
  4142ff:	mov    QWORD PTR [rbp-0x50],rbx
  414303:	mov    DWORD PTR [rbp-0x54],r14d
  414307:	call   414440 <main@@Base+0x710>
  41430c:	cmp    eax,0x0
  41430f:	jne    41441b <main@@Base+0x6eb>
  414315:	mov    rdi,QWORD PTR [rbp-0x20]
  414319:	mov    rsi,QWORD PTR [rbp+0x18]
  41431d:	call   414460 <main@@Base+0x730>
  414322:	cmp    eax,0x0
  414325:	jne    41441b <main@@Base+0x6eb>
  41432b:	mov    rdi,QWORD PTR [rbp-0x20]
  41432f:	mov    rsi,QWORD PTR [rbp+0x20]
  414333:	call   4144e0 <main@@Base+0x7b0>
  414338:	cmp    eax,0x0
  41433b:	jne    41441b <main@@Base+0x6eb>
  414341:	mov    rdi,QWORD PTR [rbp-0x20]
  414345:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  41434a:	call   414560 <main@@Base+0x830>
  41434f:	cmp    eax,0x0
  414352:	jne    41441b <main@@Base+0x6eb>
  414358:	mov    rdi,QWORD PTR [rbp-0x20]
  41435c:	mov    esi,DWORD PTR [rbp-0x2c]
  41435f:	call   4145f0 <main@@Base+0x8c0>
  414364:	cmp    eax,0x0
  414367:	jne    41441b <main@@Base+0x6eb>
  41436d:	mov    rdi,QWORD PTR [rbp-0x20]
  414371:	mov    esi,DWORD PTR [rbp+0x10]
  414374:	call   414670 <main@@Base+0x940>
  414379:	cmp    eax,0x0
  41437c:	jne    41441b <main@@Base+0x6eb>
  414382:	mov    rdi,QWORD PTR [rbp-0x20]
  414386:	vmovss xmm0,DWORD PTR [rbp-0x30]
  41438b:	call   4146f0 <main@@Base+0x9c0>
  414390:	cmp    eax,0x0
  414393:	jne    41441b <main@@Base+0x6eb>
  414399:	mov    rdi,QWORD PTR [rbp-0x20]
  41439d:	mov    esi,DWORD PTR [rbp+0x28]
  4143a0:	call   414780 <main@@Base+0xa50>
  4143a5:	cmp    eax,0x0
  4143a8:	jne    41441b <main@@Base+0x6eb>
  4143ae:	mov    rdi,QWORD PTR [rbp-0x20]
  4143b2:	mov    esi,DWORD PTR [rbp+0x30]
  4143b5:	call   4147e0 <main@@Base+0xab0>
  4143ba:	cmp    eax,0x0
  4143bd:	jne    41441b <main@@Base+0x6eb>
  4143c3:	mov    rdi,QWORD PTR [rbp-0x20]
  4143c7:	movsx  esi,WORD PTR [rbp-0x24]
  4143cb:	call   414840 <main@@Base+0xb10>
  4143d0:	cmp    eax,0x0
  4143d3:	jne    41441b <main@@Base+0x6eb>
  4143d9:	mov    rdi,QWORD PTR [rbp-0x20]
  4143dd:	movzx  esi,WORD PTR [rbp-0x26]
  4143e1:	call   4148c0 <main@@Base+0xb90>
  4143e6:	cmp    eax,0x0
  4143e9:	jne    41441b <main@@Base+0x6eb>
  4143ef:	mov    rdi,QWORD PTR [rbp-0x20]
  4143f3:	movsx  esi,BYTE PTR [rbp-0x21]
  4143f7:	call   414940 <main@@Base+0xc10>
  4143fc:	cmp    eax,0x0
  4143ff:	jne    41441b <main@@Base+0x6eb>
  414405:	mov    rdi,QWORD PTR [rbp-0x20]
  414409:	movzx  esi,BYTE PTR [rbp-0x22]
  41440d:	call   4149c0 <main@@Base+0xc90>
  414412:	cmp    eax,0x0
  414415:	je     414427 <main@@Base+0x6f7>
  41441b:	mov    DWORD PTR [rbp-0x14],0x0
  414422:	jmp    414433 <main@@Base+0x703>
  414427:	mov    rdi,QWORD PTR [rbp-0x20]
  41442b:	call   414a40 <main@@Base+0xd10>
  414430:	mov    DWORD PTR [rbp-0x14],eax
  414433:	mov    eax,DWORD PTR [rbp-0x14]
  414436:	add    rsp,0x50
  41443a:	pop    rbx
  41443b:	pop    r14
  41443d:	pop    rbp
  41443e:	ret    
  41443f:	nop
  414440:	push   rbp
  414441:	mov    rbp,rsp
  414444:	sub    rsp,0x10
  414448:	mov    QWORD PTR [rbp-0x8],rdi
  41444c:	mov    rdi,QWORD PTR [rbp-0x8]
  414450:	mov    esi,0xc
  414455:	call   41b550 <flatcc_builder_start_table@@Base>
  41445a:	add    rsp,0x10
  41445e:	pop    rbp
  41445f:	ret    
  414460:	push   rbp
  414461:	mov    rbp,rsp
  414464:	sub    rsp,0x20
  414468:	mov    QWORD PTR [rbp-0x10],rdi
  41446c:	mov    QWORD PTR [rbp-0x18],rsi
  414470:	cmp    QWORD PTR [rbp-0x18],0x0
  414475:	jne    414487 <main@@Base+0x757>
  41447b:	mov    DWORD PTR [rbp-0x4],0x0
  414482:	jmp    4144cd <main@@Base+0x79d>
  414487:	mov    rdi,QWORD PTR [rbp-0x10]
  41448b:	mov    esi,0x6
  414490:	mov    edx,0x8
  414495:	mov    ecx,0x8
  41449a:	call   41ce20 <flatcc_builder_table_add@@Base>
  41449f:	mov    QWORD PTR [rbp-0x20],rax
  4144a3:	cmp    rax,0x0
  4144a7:	jne    4144b9 <main@@Base+0x789>
  4144ad:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4144b4:	jmp    4144cd <main@@Base+0x79d>
  4144b9:	mov    rdi,QWORD PTR [rbp-0x20]
  4144bd:	mov    rsi,QWORD PTR [rbp-0x18]
  4144c1:	call   414aa0 <main@@Base+0xd70>
  4144c6:	mov    DWORD PTR [rbp-0x4],0x0
  4144cd:	mov    eax,DWORD PTR [rbp-0x4]
  4144d0:	add    rsp,0x20
  4144d4:	pop    rbp
  4144d5:	ret    
  4144d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144e0:	push   rbp
  4144e1:	mov    rbp,rsp
  4144e4:	sub    rsp,0x20
  4144e8:	mov    QWORD PTR [rbp-0x10],rdi
  4144ec:	mov    QWORD PTR [rbp-0x18],rsi
  4144f0:	cmp    QWORD PTR [rbp-0x18],0x0
  4144f5:	jne    414507 <main@@Base+0x7d7>
  4144fb:	mov    DWORD PTR [rbp-0x4],0x0
  414502:	jmp    41454d <main@@Base+0x81d>
  414507:	mov    rdi,QWORD PTR [rbp-0x10]
  41450b:	mov    esi,0x7
  414510:	mov    edx,0x8
  414515:	mov    ecx,0x8
  41451a:	call   41ce20 <flatcc_builder_table_add@@Base>
  41451f:	mov    QWORD PTR [rbp-0x20],rax
  414523:	cmp    rax,0x0
  414527:	jne    414539 <main@@Base+0x809>
  41452d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414534:	jmp    41454d <main@@Base+0x81d>
  414539:	mov    rdi,QWORD PTR [rbp-0x20]
  41453d:	mov    rsi,QWORD PTR [rbp-0x18]
  414541:	call   414ae0 <main@@Base+0xdb0>
  414546:	mov    DWORD PTR [rbp-0x4],0x0
  41454d:	mov    eax,DWORD PTR [rbp-0x4]
  414550:	add    rsp,0x20
  414554:	pop    rbp
  414555:	ret    
  414556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414560:	push   rbp
  414561:	mov    rbp,rsp
  414564:	sub    rsp,0x20
  414568:	mov    QWORD PTR [rbp-0x10],rdi
  41456c:	vmovsd QWORD PTR [rbp-0x18],xmm0
  414571:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  414576:	vxorps xmm1,xmm1,xmm1
  41457a:	vucomisd xmm0,xmm1
  41457e:	jne    414596 <main@@Base+0x866>
  414584:	jp     414596 <main@@Base+0x866>
  41458a:	mov    DWORD PTR [rbp-0x4],0x0
  414591:	jmp    4145dd <main@@Base+0x8ad>
  414596:	mov    rdi,QWORD PTR [rbp-0x10]
  41459a:	mov    esi,0x9
  41459f:	mov    edx,0x8
  4145a4:	mov    ecx,0x8
  4145a9:	call   41ce20 <flatcc_builder_table_add@@Base>
  4145ae:	mov    QWORD PTR [rbp-0x20],rax
  4145b2:	cmp    rax,0x0
  4145b6:	jne    4145c8 <main@@Base+0x898>
  4145bc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4145c3:	jmp    4145dd <main@@Base+0x8ad>
  4145c8:	mov    rdi,QWORD PTR [rbp-0x20]
  4145cc:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  4145d1:	call   414b20 <main@@Base+0xdf0>
  4145d6:	mov    DWORD PTR [rbp-0x4],0x0
  4145dd:	mov    eax,DWORD PTR [rbp-0x4]
  4145e0:	add    rsp,0x20
  4145e4:	pop    rbp
  4145e5:	ret    
  4145e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4145f0:	push   rbp
  4145f1:	mov    rbp,rsp
  4145f4:	sub    rsp,0x20
  4145f8:	mov    QWORD PTR [rbp-0x10],rdi
  4145fc:	mov    DWORD PTR [rbp-0x14],esi
  4145ff:	cmp    DWORD PTR [rbp-0x14],0x0
  414603:	jne    414615 <main@@Base+0x8e5>
  414609:	mov    DWORD PTR [rbp-0x4],0x0
  414610:	jmp    414659 <main@@Base+0x929>
  414615:	mov    rdi,QWORD PTR [rbp-0x10]
  414619:	mov    eax,0x4
  41461e:	mov    esi,eax
  414620:	mov    edx,0x4
  414625:	mov    ecx,eax
  414627:	call   41ce20 <flatcc_builder_table_add@@Base>
  41462c:	mov    QWORD PTR [rbp-0x20],rax
  414630:	cmp    rax,0x0
  414634:	jne    414646 <main@@Base+0x916>
  41463a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414641:	jmp    414659 <main@@Base+0x929>
  414646:	mov    rdi,QWORD PTR [rbp-0x20]
  41464a:	mov    esi,DWORD PTR [rbp-0x14]
  41464d:	call   414b80 <main@@Base+0xe50>
  414652:	mov    DWORD PTR [rbp-0x4],0x0
  414659:	mov    eax,DWORD PTR [rbp-0x4]
  41465c:	add    rsp,0x20
  414660:	pop    rbp
  414661:	ret    
  414662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41466c:	nop    DWORD PTR [rax+0x0]
  414670:	push   rbp
  414671:	mov    rbp,rsp
  414674:	sub    rsp,0x20
  414678:	mov    QWORD PTR [rbp-0x10],rdi
  41467c:	mov    DWORD PTR [rbp-0x14],esi
  41467f:	cmp    DWORD PTR [rbp-0x14],0x0
  414683:	jne    414695 <main@@Base+0x965>
  414689:	mov    DWORD PTR [rbp-0x4],0x0
  414690:	jmp    4146da <main@@Base+0x9aa>
  414695:	mov    rdi,QWORD PTR [rbp-0x10]
  414699:	mov    esi,0x5
  41469e:	mov    edx,0x4
  4146a3:	mov    ecx,0x4
  4146a8:	call   41ce20 <flatcc_builder_table_add@@Base>
  4146ad:	mov    QWORD PTR [rbp-0x20],rax
  4146b1:	cmp    rax,0x0
  4146b5:	jne    4146c7 <main@@Base+0x997>
  4146bb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4146c2:	jmp    4146da <main@@Base+0x9aa>
  4146c7:	mov    rdi,QWORD PTR [rbp-0x20]
  4146cb:	mov    esi,DWORD PTR [rbp-0x14]
  4146ce:	call   414bc0 <main@@Base+0xe90>
  4146d3:	mov    DWORD PTR [rbp-0x4],0x0
  4146da:	mov    eax,DWORD PTR [rbp-0x4]
  4146dd:	add    rsp,0x20
  4146e1:	pop    rbp
  4146e2:	ret    
  4146e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146ed:	nop    DWORD PTR [rax]
  4146f0:	push   rbp
  4146f1:	mov    rbp,rsp
  4146f4:	sub    rsp,0x20
  4146f8:	mov    QWORD PTR [rbp-0x10],rdi
  4146fc:	vmovss DWORD PTR [rbp-0x14],xmm0
  414701:	vmovss xmm0,DWORD PTR [rbp-0x14]
  414706:	vxorps xmm1,xmm1,xmm1
  41470a:	vucomiss xmm0,xmm1
  41470e:	jne    414726 <main@@Base+0x9f6>
  414714:	jp     414726 <main@@Base+0x9f6>
  41471a:	mov    DWORD PTR [rbp-0x4],0x0
  414721:	jmp    41476d <main@@Base+0xa3d>
  414726:	mov    rdi,QWORD PTR [rbp-0x10]
  41472a:	mov    esi,0x8
  41472f:	mov    edx,0x4
  414734:	mov    ecx,0x4
  414739:	call   41ce20 <flatcc_builder_table_add@@Base>
  41473e:	mov    QWORD PTR [rbp-0x20],rax
  414742:	cmp    rax,0x0
  414746:	jne    414758 <main@@Base+0xa28>
  41474c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414753:	jmp    41476d <main@@Base+0xa3d>
  414758:	mov    rdi,QWORD PTR [rbp-0x20]
  41475c:	vmovss xmm0,DWORD PTR [rbp-0x14]
  414761:	call   414c00 <main@@Base+0xed0>
  414766:	mov    DWORD PTR [rbp-0x4],0x0
  41476d:	mov    eax,DWORD PTR [rbp-0x4]
  414770:	add    rsp,0x20
  414774:	pop    rbp
  414775:	ret    
  414776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414780:	push   rbp
  414781:	mov    rbp,rsp
  414784:	sub    rsp,0x20
  414788:	mov    QWORD PTR [rbp-0x8],rdi
  41478c:	mov    DWORD PTR [rbp-0xc],esi
  41478f:	cmp    DWORD PTR [rbp-0xc],0x0
  414793:	je     4147c8 <main@@Base+0xa98>
  414799:	mov    rdi,QWORD PTR [rbp-0x8]
  41479d:	mov    esi,0xa
  4147a2:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  4147a7:	mov    QWORD PTR [rbp-0x18],rax
  4147ab:	cmp    rax,0x0
  4147af:	je     4147c8 <main@@Base+0xa98>
  4147b5:	xor    eax,eax
  4147b7:	mov    ecx,DWORD PTR [rbp-0xc]
  4147ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4147be:	mov    DWORD PTR [rdx],ecx
  4147c0:	mov    DWORD PTR [rbp-0x1c],eax
  4147c3:	jmp    4147d5 <main@@Base+0xaa5>
  4147c8:	mov    eax,0xffffffff
  4147cd:	mov    DWORD PTR [rbp-0x1c],eax
  4147d0:	jmp    4147d5 <main@@Base+0xaa5>
  4147d5:	mov    eax,DWORD PTR [rbp-0x1c]
  4147d8:	add    rsp,0x20
  4147dc:	pop    rbp
  4147dd:	ret    
  4147de:	xchg   ax,ax
  4147e0:	push   rbp
  4147e1:	mov    rbp,rsp
  4147e4:	sub    rsp,0x20
  4147e8:	mov    QWORD PTR [rbp-0x8],rdi
  4147ec:	mov    DWORD PTR [rbp-0xc],esi
  4147ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4147f3:	je     414828 <main@@Base+0xaf8>
  4147f9:	mov    rdi,QWORD PTR [rbp-0x8]
  4147fd:	mov    esi,0xb
  414802:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  414807:	mov    QWORD PTR [rbp-0x18],rax
  41480b:	cmp    rax,0x0
  41480f:	je     414828 <main@@Base+0xaf8>
  414815:	xor    eax,eax
  414817:	mov    ecx,DWORD PTR [rbp-0xc]
  41481a:	mov    rdx,QWORD PTR [rbp-0x18]
  41481e:	mov    DWORD PTR [rdx],ecx
  414820:	mov    DWORD PTR [rbp-0x1c],eax
  414823:	jmp    414835 <main@@Base+0xb05>
  414828:	mov    eax,0xffffffff
  41482d:	mov    DWORD PTR [rbp-0x1c],eax
  414830:	jmp    414835 <main@@Base+0xb05>
  414835:	mov    eax,DWORD PTR [rbp-0x1c]
  414838:	add    rsp,0x20
  41483c:	pop    rbp
  41483d:	ret    
  41483e:	xchg   ax,ax
  414840:	push   rbp
  414841:	mov    rbp,rsp
  414844:	sub    rsp,0x20
  414848:	mov    QWORD PTR [rbp-0x10],rdi
  41484c:	mov    WORD PTR [rbp-0x12],si
  414850:	movsx  eax,WORD PTR [rbp-0x12]
  414854:	cmp    eax,0x0
  414857:	jne    414869 <main@@Base+0xb39>
  41485d:	mov    DWORD PTR [rbp-0x4],0x0
  414864:	jmp    4148ae <main@@Base+0xb7e>
  414869:	mov    rdi,QWORD PTR [rbp-0x10]
  41486d:	mov    eax,0x2
  414872:	mov    esi,eax
  414874:	mov    edx,0x2
  414879:	mov    ecx,eax
  41487b:	call   41ce20 <flatcc_builder_table_add@@Base>
  414880:	mov    QWORD PTR [rbp-0x20],rax
  414884:	cmp    rax,0x0
  414888:	jne    41489a <main@@Base+0xb6a>
  41488e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414895:	jmp    4148ae <main@@Base+0xb7e>
  41489a:	mov    rdi,QWORD PTR [rbp-0x20]
  41489e:	movsx  esi,WORD PTR [rbp-0x12]
  4148a2:	call   414c50 <main@@Base+0xf20>
  4148a7:	mov    DWORD PTR [rbp-0x4],0x0
  4148ae:	mov    eax,DWORD PTR [rbp-0x4]
  4148b1:	add    rsp,0x20
  4148b5:	pop    rbp
  4148b6:	ret    
  4148b7:	nop    WORD PTR [rax+rax*1+0x0]
  4148c0:	push   rbp
  4148c1:	mov    rbp,rsp
  4148c4:	sub    rsp,0x20
  4148c8:	mov    QWORD PTR [rbp-0x10],rdi
  4148cc:	mov    WORD PTR [rbp-0x12],si
  4148d0:	movzx  eax,WORD PTR [rbp-0x12]
  4148d4:	cmp    eax,0x0
  4148d7:	jne    4148e9 <main@@Base+0xbb9>
  4148dd:	mov    DWORD PTR [rbp-0x4],0x0
  4148e4:	jmp    41492f <main@@Base+0xbff>
  4148e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4148ed:	mov    esi,0x3
  4148f2:	mov    edx,0x2
  4148f7:	mov    ecx,0x2
  4148fc:	call   41ce20 <flatcc_builder_table_add@@Base>
  414901:	mov    QWORD PTR [rbp-0x20],rax
  414905:	cmp    rax,0x0
  414909:	jne    41491b <main@@Base+0xbeb>
  41490f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414916:	jmp    41492f <main@@Base+0xbff>
  41491b:	mov    rdi,QWORD PTR [rbp-0x20]
  41491f:	movzx  esi,WORD PTR [rbp-0x12]
  414923:	call   414c90 <main@@Base+0xf60>
  414928:	mov    DWORD PTR [rbp-0x4],0x0
  41492f:	mov    eax,DWORD PTR [rbp-0x4]
  414932:	add    rsp,0x20
  414936:	pop    rbp
  414937:	ret    
  414938:	nop    DWORD PTR [rax+rax*1+0x0]
  414940:	push   rbp
  414941:	mov    rbp,rsp
  414944:	sub    rsp,0x20
  414948:	mov    QWORD PTR [rbp-0x10],rdi
  41494c:	mov    BYTE PTR [rbp-0x11],sil
  414950:	movsx  eax,BYTE PTR [rbp-0x11]
  414954:	cmp    eax,0x0
  414957:	jne    414969 <main@@Base+0xc39>
  41495d:	mov    DWORD PTR [rbp-0x4],0x0
  414964:	jmp    4149ac <main@@Base+0xc7c>
  414969:	xor    esi,esi
  41496b:	mov    rdi,QWORD PTR [rbp-0x10]
  41496f:	mov    edx,0x1
  414974:	mov    ecx,0x1
  414979:	call   41ce20 <flatcc_builder_table_add@@Base>
  41497e:	mov    QWORD PTR [rbp-0x20],rax
  414982:	cmp    rax,0x0
  414986:	jne    414998 <main@@Base+0xc68>
  41498c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414993:	jmp    4149ac <main@@Base+0xc7c>
  414998:	mov    rdi,QWORD PTR [rbp-0x20]
  41499c:	movsx  esi,BYTE PTR [rbp-0x11]
  4149a0:	call   414cd0 <main@@Base+0xfa0>
  4149a5:	mov    DWORD PTR [rbp-0x4],0x0
  4149ac:	mov    eax,DWORD PTR [rbp-0x4]
  4149af:	add    rsp,0x20
  4149b3:	pop    rbp
  4149b4:	ret    
  4149b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149bf:	nop
  4149c0:	push   rbp
  4149c1:	mov    rbp,rsp
  4149c4:	sub    rsp,0x20
  4149c8:	mov    QWORD PTR [rbp-0x10],rdi
  4149cc:	mov    BYTE PTR [rbp-0x11],sil
  4149d0:	movzx  eax,BYTE PTR [rbp-0x11]
  4149d4:	cmp    eax,0x0
  4149d7:	jne    4149e9 <main@@Base+0xcb9>
  4149dd:	mov    DWORD PTR [rbp-0x4],0x0
  4149e4:	jmp    414a2e <main@@Base+0xcfe>
  4149e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4149ed:	mov    eax,0x1
  4149f2:	mov    esi,eax
  4149f4:	mov    edx,0x1
  4149f9:	mov    ecx,eax
  4149fb:	call   41ce20 <flatcc_builder_table_add@@Base>
  414a00:	mov    QWORD PTR [rbp-0x20],rax
  414a04:	cmp    rax,0x0
  414a08:	jne    414a1a <main@@Base+0xcea>
  414a0e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414a15:	jmp    414a2e <main@@Base+0xcfe>
  414a1a:	mov    rdi,QWORD PTR [rbp-0x20]
  414a1e:	movzx  esi,BYTE PTR [rbp-0x11]
  414a22:	call   414d10 <main@@Base+0xfe0>
  414a27:	mov    DWORD PTR [rbp-0x4],0x0
  414a2e:	mov    eax,DWORD PTR [rbp-0x4]
  414a31:	add    rsp,0x20
  414a35:	pop    rbp
  414a36:	ret    
  414a37:	nop    WORD PTR [rax+rax*1+0x0]
  414a40:	push   rbp
  414a41:	mov    rbp,rsp
  414a44:	sub    rsp,0x10
  414a48:	xor    edx,edx
  414a4a:	mov    QWORD PTR [rbp-0x8],rdi
  414a4e:	mov    rdi,QWORD PTR [rbp-0x8]
  414a52:	lea    rsi,[rip+0xd6df]        # 422138 <_IO_stdin_used@@Base+0x138>
  414a59:	call   41c100 <flatcc_builder_check_required@@Base>
  414a5e:	cmp    eax,0x0
  414a61:	je     414a6c <main@@Base+0xd3c>
  414a67:	jmp    414a8b <main@@Base+0xd5b>
  414a6c:	lea    rdi,[rip+0x101f4]        # 424c67 <_IO_stdin_used@@Base+0x2c67>
  414a73:	lea    rsi,[rip+0x1029b]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  414a7a:	mov    edx,0xed
  414a7f:	lea    rcx,[rip+0x1030c]        # 424d92 <_IO_stdin_used@@Base+0x2d92>
  414a86:	call   404090 <__assert_fail@plt>
  414a8b:	mov    rdi,QWORD PTR [rbp-0x8]
  414a8f:	call   41c1d0 <flatcc_builder_end_table@@Base>
  414a94:	add    rsp,0x10
  414a98:	pop    rbp
  414a99:	ret    
  414a9a:	nop    WORD PTR [rax+rax*1+0x0]
  414aa0:	push   rbp
  414aa1:	mov    rbp,rsp
  414aa4:	sub    rsp,0x10
  414aa8:	mov    QWORD PTR [rbp-0x8],rdi
  414aac:	mov    QWORD PTR [rbp-0x10],rsi
  414ab0:	mov    rdi,QWORD PTR [rbp-0x10]
  414ab4:	call   414ad0 <main@@Base+0xda0>
  414ab9:	mov    rcx,QWORD PTR [rbp-0x8]
  414abd:	mov    QWORD PTR [rcx],rax
  414ac0:	mov    rax,QWORD PTR [rbp-0x8]
  414ac4:	add    rsp,0x10
  414ac8:	pop    rbp
  414ac9:	ret    
  414aca:	nop    WORD PTR [rax+rax*1+0x0]
  414ad0:	push   rbp
  414ad1:	mov    rbp,rsp
  414ad4:	mov    QWORD PTR [rbp-0x8],rdi
  414ad8:	mov    rax,QWORD PTR [rbp-0x8]
  414adc:	pop    rbp
  414add:	ret    
  414ade:	xchg   ax,ax
  414ae0:	push   rbp
  414ae1:	mov    rbp,rsp
  414ae4:	sub    rsp,0x10
  414ae8:	mov    QWORD PTR [rbp-0x8],rdi
  414aec:	mov    QWORD PTR [rbp-0x10],rsi
  414af0:	mov    rdi,QWORD PTR [rbp-0x10]
  414af4:	call   414b10 <main@@Base+0xde0>
  414af9:	mov    rcx,QWORD PTR [rbp-0x8]
  414afd:	mov    QWORD PTR [rcx],rax
  414b00:	mov    rax,QWORD PTR [rbp-0x8]
  414b04:	add    rsp,0x10
  414b08:	pop    rbp
  414b09:	ret    
  414b0a:	nop    WORD PTR [rax+rax*1+0x0]
  414b10:	push   rbp
  414b11:	mov    rbp,rsp
  414b14:	mov    QWORD PTR [rbp-0x8],rdi
  414b18:	mov    rax,QWORD PTR [rbp-0x8]
  414b1c:	pop    rbp
  414b1d:	ret    
  414b1e:	xchg   ax,ax
  414b20:	push   rbp
  414b21:	mov    rbp,rsp
  414b24:	sub    rsp,0x10
  414b28:	mov    QWORD PTR [rbp-0x8],rdi
  414b2c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  414b31:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  414b36:	call   414b50 <main@@Base+0xe20>
  414b3b:	mov    rax,QWORD PTR [rbp-0x8]
  414b3f:	vmovsd QWORD PTR [rax],xmm0
  414b43:	mov    rax,QWORD PTR [rbp-0x8]
  414b47:	add    rsp,0x10
  414b4b:	pop    rbp
  414b4c:	ret    
  414b4d:	nop    DWORD PTR [rax]
  414b50:	push   rbp
  414b51:	mov    rbp,rsp
  414b54:	vmovsd QWORD PTR [rbp-0x8],xmm0
  414b59:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  414b5e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  414b63:	mov    rax,QWORD PTR [rbp-0x10]
  414b67:	mov    QWORD PTR [rbp-0x10],rax
  414b6b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  414b70:	pop    rbp
  414b71:	ret    
  414b72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b7c:	nop    DWORD PTR [rax+0x0]
  414b80:	push   rbp
  414b81:	mov    rbp,rsp
  414b84:	sub    rsp,0x10
  414b88:	mov    QWORD PTR [rbp-0x8],rdi
  414b8c:	mov    DWORD PTR [rbp-0xc],esi
  414b8f:	mov    edi,DWORD PTR [rbp-0xc]
  414b92:	call   414bb0 <main@@Base+0xe80>
  414b97:	mov    rcx,QWORD PTR [rbp-0x8]
  414b9b:	mov    DWORD PTR [rcx],eax
  414b9d:	mov    rax,QWORD PTR [rbp-0x8]
  414ba1:	add    rsp,0x10
  414ba5:	pop    rbp
  414ba6:	ret    
  414ba7:	nop    WORD PTR [rax+rax*1+0x0]
  414bb0:	push   rbp
  414bb1:	mov    rbp,rsp
  414bb4:	mov    DWORD PTR [rbp-0x4],edi
  414bb7:	mov    eax,DWORD PTR [rbp-0x4]
  414bba:	pop    rbp
  414bbb:	ret    
  414bbc:	nop    DWORD PTR [rax+0x0]
  414bc0:	push   rbp
  414bc1:	mov    rbp,rsp
  414bc4:	sub    rsp,0x10
  414bc8:	mov    QWORD PTR [rbp-0x8],rdi
  414bcc:	mov    DWORD PTR [rbp-0xc],esi
  414bcf:	mov    edi,DWORD PTR [rbp-0xc]
  414bd2:	call   414bf0 <main@@Base+0xec0>
  414bd7:	mov    rcx,QWORD PTR [rbp-0x8]
  414bdb:	mov    DWORD PTR [rcx],eax
  414bdd:	mov    rax,QWORD PTR [rbp-0x8]
  414be1:	add    rsp,0x10
  414be5:	pop    rbp
  414be6:	ret    
  414be7:	nop    WORD PTR [rax+rax*1+0x0]
  414bf0:	push   rbp
  414bf1:	mov    rbp,rsp
  414bf4:	mov    DWORD PTR [rbp-0x4],edi
  414bf7:	mov    eax,DWORD PTR [rbp-0x4]
  414bfa:	pop    rbp
  414bfb:	ret    
  414bfc:	nop    DWORD PTR [rax+0x0]
  414c00:	push   rbp
  414c01:	mov    rbp,rsp
  414c04:	sub    rsp,0x10
  414c08:	mov    QWORD PTR [rbp-0x8],rdi
  414c0c:	vmovss DWORD PTR [rbp-0xc],xmm0
  414c11:	vmovss xmm0,DWORD PTR [rbp-0xc]
  414c16:	call   414c30 <main@@Base+0xf00>
  414c1b:	mov    rax,QWORD PTR [rbp-0x8]
  414c1f:	vmovss DWORD PTR [rax],xmm0
  414c23:	mov    rax,QWORD PTR [rbp-0x8]
  414c27:	add    rsp,0x10
  414c2b:	pop    rbp
  414c2c:	ret    
  414c2d:	nop    DWORD PTR [rax]
  414c30:	push   rbp
  414c31:	mov    rbp,rsp
  414c34:	vmovss DWORD PTR [rbp-0x4],xmm0
  414c39:	vmovss xmm0,DWORD PTR [rbp-0x4]
  414c3e:	vmovss DWORD PTR [rbp-0x8],xmm0
  414c43:	mov    eax,DWORD PTR [rbp-0x8]
  414c46:	mov    DWORD PTR [rbp-0x8],eax
  414c49:	vmovss xmm0,DWORD PTR [rbp-0x8]
  414c4e:	pop    rbp
  414c4f:	ret    
  414c50:	push   rbp
  414c51:	mov    rbp,rsp
  414c54:	sub    rsp,0x10
  414c58:	mov    QWORD PTR [rbp-0x8],rdi
  414c5c:	mov    WORD PTR [rbp-0xa],si
  414c60:	movsx  edi,WORD PTR [rbp-0xa]
  414c64:	call   414c80 <main@@Base+0xf50>
  414c69:	mov    rcx,QWORD PTR [rbp-0x8]
  414c6d:	mov    WORD PTR [rcx],ax
  414c70:	mov    rax,QWORD PTR [rbp-0x8]
  414c74:	add    rsp,0x10
  414c78:	pop    rbp
  414c79:	ret    
  414c7a:	nop    WORD PTR [rax+rax*1+0x0]
  414c80:	push   rbp
  414c81:	mov    rbp,rsp
  414c84:	mov    WORD PTR [rbp-0x2],di
  414c88:	movsx  eax,WORD PTR [rbp-0x2]
  414c8c:	pop    rbp
  414c8d:	ret    
  414c8e:	xchg   ax,ax
  414c90:	push   rbp
  414c91:	mov    rbp,rsp
  414c94:	sub    rsp,0x10
  414c98:	mov    QWORD PTR [rbp-0x8],rdi
  414c9c:	mov    WORD PTR [rbp-0xa],si
  414ca0:	movzx  edi,WORD PTR [rbp-0xa]
  414ca4:	call   414cc0 <main@@Base+0xf90>
  414ca9:	mov    rcx,QWORD PTR [rbp-0x8]
  414cad:	mov    WORD PTR [rcx],ax
  414cb0:	mov    rax,QWORD PTR [rbp-0x8]
  414cb4:	add    rsp,0x10
  414cb8:	pop    rbp
  414cb9:	ret    
  414cba:	nop    WORD PTR [rax+rax*1+0x0]
  414cc0:	push   rbp
  414cc1:	mov    rbp,rsp
  414cc4:	mov    WORD PTR [rbp-0x2],di
  414cc8:	movzx  eax,WORD PTR [rbp-0x2]
  414ccc:	pop    rbp
  414ccd:	ret    
  414cce:	xchg   ax,ax
  414cd0:	push   rbp
  414cd1:	mov    rbp,rsp
  414cd4:	sub    rsp,0x10
  414cd8:	mov    QWORD PTR [rbp-0x8],rdi
  414cdc:	mov    BYTE PTR [rbp-0x9],sil
  414ce0:	movsx  edi,BYTE PTR [rbp-0x9]
  414ce4:	call   414d00 <main@@Base+0xfd0>
  414ce9:	mov    rcx,QWORD PTR [rbp-0x8]
  414ced:	mov    BYTE PTR [rcx],al
  414cef:	mov    rax,QWORD PTR [rbp-0x8]
  414cf3:	add    rsp,0x10
  414cf7:	pop    rbp
  414cf8:	ret    
  414cf9:	nop    DWORD PTR [rax+0x0]
  414d00:	push   rbp
  414d01:	mov    rbp,rsp
  414d04:	mov    BYTE PTR [rbp-0x1],dil
  414d08:	movsx  eax,BYTE PTR [rbp-0x1]
  414d0c:	pop    rbp
  414d0d:	ret    
  414d0e:	xchg   ax,ax
  414d10:	push   rbp
  414d11:	mov    rbp,rsp
  414d14:	sub    rsp,0x10
  414d18:	mov    QWORD PTR [rbp-0x8],rdi
  414d1c:	mov    BYTE PTR [rbp-0x9],sil
  414d20:	movzx  edi,BYTE PTR [rbp-0x9]
  414d24:	call   414d40 <main@@Base+0x1010>
  414d29:	mov    rcx,QWORD PTR [rbp-0x8]
  414d2d:	mov    BYTE PTR [rcx],al
  414d2f:	mov    rax,QWORD PTR [rbp-0x8]
  414d33:	add    rsp,0x10
  414d37:	pop    rbp
  414d38:	ret    
  414d39:	nop    DWORD PTR [rax+0x0]
  414d40:	push   rbp
  414d41:	mov    rbp,rsp
  414d44:	mov    BYTE PTR [rbp-0x1],dil
  414d48:	movzx  eax,BYTE PTR [rbp-0x1]
  414d4c:	pop    rbp
  414d4d:	ret    
  414d4e:	xchg   ax,ax
  414d50:	push   rbp
  414d51:	mov    rbp,rsp
  414d54:	sub    rsp,0x20
  414d58:	xor    esi,esi
  414d5a:	mov    QWORD PTR [rbp-0x10],rdi
  414d5e:	mov    rdi,QWORD PTR [rbp-0x10]
  414d62:	mov    edx,0x1
  414d67:	mov    ecx,0x1
  414d6c:	call   41f640 <flatcc_verify_field@@Base>
  414d71:	mov    DWORD PTR [rbp-0x14],eax
  414d74:	cmp    eax,0x0
  414d77:	je     414d88 <main@@Base+0x1058>
  414d7d:	mov    eax,DWORD PTR [rbp-0x14]
  414d80:	mov    DWORD PTR [rbp-0x4],eax
  414d83:	jmp    414fa3 <main@@Base+0x1273>
  414d88:	mov    rdi,QWORD PTR [rbp-0x10]
  414d8c:	mov    eax,0x1
  414d91:	mov    esi,eax
  414d93:	mov    edx,0x1
  414d98:	mov    ecx,eax
  414d9a:	call   41f640 <flatcc_verify_field@@Base>
  414d9f:	mov    DWORD PTR [rbp-0x14],eax
  414da2:	cmp    eax,0x0
  414da5:	je     414db6 <main@@Base+0x1086>
  414dab:	mov    eax,DWORD PTR [rbp-0x14]
  414dae:	mov    DWORD PTR [rbp-0x4],eax
  414db1:	jmp    414fa3 <main@@Base+0x1273>
  414db6:	mov    rdi,QWORD PTR [rbp-0x10]
  414dba:	mov    eax,0x2
  414dbf:	mov    esi,eax
  414dc1:	mov    edx,0x2
  414dc6:	mov    ecx,eax
  414dc8:	call   41f640 <flatcc_verify_field@@Base>
  414dcd:	mov    DWORD PTR [rbp-0x14],eax
  414dd0:	cmp    eax,0x0
  414dd3:	je     414de4 <main@@Base+0x10b4>
  414dd9:	mov    eax,DWORD PTR [rbp-0x14]
  414ddc:	mov    DWORD PTR [rbp-0x4],eax
  414ddf:	jmp    414fa3 <main@@Base+0x1273>
  414de4:	mov    rdi,QWORD PTR [rbp-0x10]
  414de8:	mov    esi,0x3
  414ded:	mov    edx,0x2
  414df2:	mov    ecx,0x2
  414df7:	call   41f640 <flatcc_verify_field@@Base>
  414dfc:	mov    DWORD PTR [rbp-0x14],eax
  414dff:	cmp    eax,0x0
  414e02:	je     414e13 <main@@Base+0x10e3>
  414e08:	mov    eax,DWORD PTR [rbp-0x14]
  414e0b:	mov    DWORD PTR [rbp-0x4],eax
  414e0e:	jmp    414fa3 <main@@Base+0x1273>
  414e13:	mov    rdi,QWORD PTR [rbp-0x10]
  414e17:	mov    eax,0x4
  414e1c:	mov    esi,eax
  414e1e:	mov    edx,0x4
  414e23:	mov    ecx,eax
  414e25:	call   41f640 <flatcc_verify_field@@Base>
  414e2a:	mov    DWORD PTR [rbp-0x14],eax
  414e2d:	cmp    eax,0x0
  414e30:	je     414e41 <main@@Base+0x1111>
  414e36:	mov    eax,DWORD PTR [rbp-0x14]
  414e39:	mov    DWORD PTR [rbp-0x4],eax
  414e3c:	jmp    414fa3 <main@@Base+0x1273>
  414e41:	mov    rdi,QWORD PTR [rbp-0x10]
  414e45:	mov    esi,0x5
  414e4a:	mov    edx,0x4
  414e4f:	mov    ecx,0x4
  414e54:	call   41f640 <flatcc_verify_field@@Base>
  414e59:	mov    DWORD PTR [rbp-0x14],eax
  414e5c:	cmp    eax,0x0
  414e5f:	je     414e70 <main@@Base+0x1140>
  414e65:	mov    eax,DWORD PTR [rbp-0x14]
  414e68:	mov    DWORD PTR [rbp-0x4],eax
  414e6b:	jmp    414fa3 <main@@Base+0x1273>
  414e70:	mov    rdi,QWORD PTR [rbp-0x10]
  414e74:	mov    esi,0x6
  414e79:	mov    edx,0x8
  414e7e:	mov    ecx,0x8
  414e83:	call   41f640 <flatcc_verify_field@@Base>
  414e88:	mov    DWORD PTR [rbp-0x14],eax
  414e8b:	cmp    eax,0x0
  414e8e:	je     414e9f <main@@Base+0x116f>
  414e94:	mov    eax,DWORD PTR [rbp-0x14]
  414e97:	mov    DWORD PTR [rbp-0x4],eax
  414e9a:	jmp    414fa3 <main@@Base+0x1273>
  414e9f:	mov    rdi,QWORD PTR [rbp-0x10]
  414ea3:	mov    esi,0x7
  414ea8:	mov    edx,0x8
  414ead:	mov    ecx,0x8
  414eb2:	call   41f640 <flatcc_verify_field@@Base>
  414eb7:	mov    DWORD PTR [rbp-0x14],eax
  414eba:	cmp    eax,0x0
  414ebd:	je     414ece <main@@Base+0x119e>
  414ec3:	mov    eax,DWORD PTR [rbp-0x14]
  414ec6:	mov    DWORD PTR [rbp-0x4],eax
  414ec9:	jmp    414fa3 <main@@Base+0x1273>
  414ece:	mov    rdi,QWORD PTR [rbp-0x10]
  414ed2:	mov    esi,0x8
  414ed7:	mov    edx,0x4
  414edc:	mov    ecx,0x4
  414ee1:	call   41f640 <flatcc_verify_field@@Base>
  414ee6:	mov    DWORD PTR [rbp-0x14],eax
  414ee9:	cmp    eax,0x0
  414eec:	je     414efd <main@@Base+0x11cd>
  414ef2:	mov    eax,DWORD PTR [rbp-0x14]
  414ef5:	mov    DWORD PTR [rbp-0x4],eax
  414ef8:	jmp    414fa3 <main@@Base+0x1273>
  414efd:	mov    rdi,QWORD PTR [rbp-0x10]
  414f01:	mov    esi,0x9
  414f06:	mov    edx,0x8
  414f0b:	mov    ecx,0x8
  414f10:	call   41f640 <flatcc_verify_field@@Base>
  414f15:	mov    DWORD PTR [rbp-0x14],eax
  414f18:	cmp    eax,0x0
  414f1b:	je     414f2c <main@@Base+0x11fc>
  414f21:	mov    eax,DWORD PTR [rbp-0x14]
  414f24:	mov    DWORD PTR [rbp-0x4],eax
  414f27:	jmp    414fa3 <main@@Base+0x1273>
  414f2c:	xor    edx,edx
  414f2e:	mov    rdi,QWORD PTR [rbp-0x10]
  414f32:	mov    esi,0xa
  414f37:	mov    ecx,0x1
  414f3c:	mov    r8d,0x1
  414f42:	mov    r9d,0xffffffff
  414f48:	call   41fb20 <flatcc_verify_vector_field@@Base>
  414f4d:	mov    DWORD PTR [rbp-0x14],eax
  414f50:	cmp    eax,0x0
  414f53:	je     414f64 <main@@Base+0x1234>
  414f59:	mov    eax,DWORD PTR [rbp-0x14]
  414f5c:	mov    DWORD PTR [rbp-0x4],eax
  414f5f:	jmp    414fa3 <main@@Base+0x1273>
  414f64:	xor    edx,edx
  414f66:	mov    rdi,QWORD PTR [rbp-0x10]
  414f6a:	mov    esi,0xb
  414f6f:	mov    ecx,0x8
  414f74:	mov    r8d,0x8
  414f7a:	mov    r9d,0x1fffffff
  414f80:	call   41fb20 <flatcc_verify_vector_field@@Base>
  414f85:	mov    DWORD PTR [rbp-0x14],eax
  414f88:	cmp    eax,0x0
  414f8b:	je     414f9c <main@@Base+0x126c>
  414f91:	mov    eax,DWORD PTR [rbp-0x14]
  414f94:	mov    DWORD PTR [rbp-0x4],eax
  414f97:	jmp    414fa3 <main@@Base+0x1273>
  414f9c:	mov    DWORD PTR [rbp-0x4],0x0
  414fa3:	mov    eax,DWORD PTR [rbp-0x4]
  414fa6:	add    rsp,0x20
  414faa:	pop    rbp
  414fab:	ret    
  414fac:	nop    DWORD PTR [rax+0x0]
  414fb0:	push   rbp
  414fb1:	mov    rbp,rsp
  414fb4:	sub    rsp,0x10
  414fb8:	mov    QWORD PTR [rbp-0x8],rdi
  414fbc:	mov    rax,QWORD PTR [rbp-0x8]
  414fc0:	movsx  edi,BYTE PTR [rax]
  414fc3:	call   414fe0 <main@@Base+0x12b0>
  414fc8:	movsx  eax,al
  414fcb:	add    rsp,0x10
  414fcf:	pop    rbp
  414fd0:	ret    
  414fd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  414fe0:	push   rbp
  414fe1:	mov    rbp,rsp
  414fe4:	mov    BYTE PTR [rbp-0x1],dil
  414fe8:	movsx  eax,BYTE PTR [rbp-0x1]
  414fec:	pop    rbp
  414fed:	ret    
  414fee:	xchg   ax,ax
  414ff0:	push   rbp
  414ff1:	mov    rbp,rsp
  414ff4:	sub    rsp,0x10
  414ff8:	mov    QWORD PTR [rbp-0x8],rdi
  414ffc:	mov    rax,QWORD PTR [rbp-0x8]
  415000:	mov    edi,DWORD PTR [rax]
  415002:	call   415010 <main@@Base+0x12e0>
  415007:	add    rsp,0x10
  41500b:	pop    rbp
  41500c:	ret    
  41500d:	nop    DWORD PTR [rax]
  415010:	push   rbp
  415011:	mov    rbp,rsp
  415014:	mov    DWORD PTR [rbp-0x4],edi
  415017:	mov    eax,DWORD PTR [rbp-0x4]
  41501a:	pop    rbp
  41501b:	ret    
  41501c:	nop    DWORD PTR [rax+0x0]
  415020:	push   rbp
  415021:	mov    rbp,rsp
  415024:	sub    rsp,0x10
  415028:	mov    QWORD PTR [rbp-0x8],rdi
  41502c:	mov    rax,QWORD PTR [rbp-0x8]
  415030:	mov    rdi,QWORD PTR [rax]
  415033:	call   415040 <main@@Base+0x1310>
  415038:	add    rsp,0x10
  41503c:	pop    rbp
  41503d:	ret    
  41503e:	xchg   ax,ax
  415040:	push   rbp
  415041:	mov    rbp,rsp
  415044:	mov    QWORD PTR [rbp-0x8],rdi
  415048:	mov    rax,QWORD PTR [rbp-0x8]
  41504c:	pop    rbp
  41504d:	ret    
  41504e:	xchg   ax,ax
  415050:	push   rbp
  415051:	mov    rbp,rsp
  415054:	sub    rsp,0x10
  415058:	mov    QWORD PTR [rbp-0x8],rdi
  41505c:	mov    rax,QWORD PTR [rbp-0x8]
  415060:	movzx  edi,BYTE PTR [rax]
  415063:	call   415080 <main@@Base+0x1350>
  415068:	movzx  eax,al
  41506b:	add    rsp,0x10
  41506f:	pop    rbp
  415070:	ret    
  415071:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41507b:	nop    DWORD PTR [rax+rax*1+0x0]
  415080:	push   rbp
  415081:	mov    rbp,rsp
  415084:	mov    BYTE PTR [rbp-0x1],dil
  415088:	movzx  eax,BYTE PTR [rbp-0x1]
  41508c:	pop    rbp
  41508d:	ret    
  41508e:	xchg   ax,ax
  415090:	push   rbp
  415091:	mov    rbp,rsp
  415094:	sub    rsp,0x10
  415098:	mov    QWORD PTR [rbp-0x8],rdi
  41509c:	mov    rax,QWORD PTR [rbp-0x8]
  4150a0:	movzx  edi,WORD PTR [rax]
  4150a3:	call   4150c0 <main@@Base+0x1390>
  4150a8:	movzx  eax,ax
  4150ab:	add    rsp,0x10
  4150af:	pop    rbp
  4150b0:	ret    
  4150b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4150bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4150c0:	push   rbp
  4150c1:	mov    rbp,rsp
  4150c4:	mov    WORD PTR [rbp-0x2],di
  4150c8:	movzx  eax,WORD PTR [rbp-0x2]
  4150cc:	pop    rbp
  4150cd:	ret    
  4150ce:	xchg   ax,ax
  4150d0:	push   rbp
  4150d1:	mov    rbp,rsp
  4150d4:	sub    rsp,0x10
  4150d8:	mov    QWORD PTR [rbp-0x8],rdi
  4150dc:	mov    rax,QWORD PTR [rbp-0x8]
  4150e0:	mov    edi,DWORD PTR [rax]
  4150e2:	call   4150f0 <main@@Base+0x13c0>
  4150e7:	add    rsp,0x10
  4150eb:	pop    rbp
  4150ec:	ret    
  4150ed:	nop    DWORD PTR [rax]
  4150f0:	push   rbp
  4150f1:	mov    rbp,rsp
  4150f4:	mov    DWORD PTR [rbp-0x4],edi
  4150f7:	mov    eax,DWORD PTR [rbp-0x4]
  4150fa:	pop    rbp
  4150fb:	ret    
  4150fc:	nop    DWORD PTR [rax+0x0]
  415100:	push   rbp
  415101:	mov    rbp,rsp
  415104:	sub    rsp,0x10
  415108:	mov    QWORD PTR [rbp-0x8],rdi
  41510c:	mov    rax,QWORD PTR [rbp-0x8]
  415110:	mov    rdi,QWORD PTR [rax]
  415113:	call   415120 <main@@Base+0x13f0>
  415118:	add    rsp,0x10
  41511c:	pop    rbp
  41511d:	ret    
  41511e:	xchg   ax,ax
  415120:	push   rbp
  415121:	mov    rbp,rsp
  415124:	mov    QWORD PTR [rbp-0x8],rdi
  415128:	mov    rax,QWORD PTR [rbp-0x8]
  41512c:	pop    rbp
  41512d:	ret    
  41512e:	xchg   ax,ax
  415130:	push   rbp
  415131:	mov    rbp,rsp
  415134:	sub    rsp,0x10
  415138:	mov    QWORD PTR [rbp-0x8],rdi
  41513c:	mov    rax,QWORD PTR [rbp-0x8]
  415140:	vmovss xmm0,DWORD PTR [rax]
  415144:	call   415150 <main@@Base+0x1420>
  415149:	add    rsp,0x10
  41514d:	pop    rbp
  41514e:	ret    
  41514f:	nop
  415150:	push   rbp
  415151:	mov    rbp,rsp
  415154:	vmovss DWORD PTR [rbp-0x4],xmm0
  415159:	vmovss xmm0,DWORD PTR [rbp-0x4]
  41515e:	vmovss DWORD PTR [rbp-0x8],xmm0
  415163:	mov    eax,DWORD PTR [rbp-0x8]
  415166:	mov    DWORD PTR [rbp-0x8],eax
  415169:	vmovss xmm0,DWORD PTR [rbp-0x8]
  41516e:	pop    rbp
  41516f:	ret    
  415170:	push   rbp
  415171:	mov    rbp,rsp
  415174:	sub    rsp,0x10
  415178:	mov    QWORD PTR [rbp-0x8],rdi
  41517c:	mov    rax,QWORD PTR [rbp-0x8]
  415180:	vmovsd xmm0,QWORD PTR [rax]
  415184:	call   415190 <main@@Base+0x1460>
  415189:	add    rsp,0x10
  41518d:	pop    rbp
  41518e:	ret    
  41518f:	nop
  415190:	push   rbp
  415191:	mov    rbp,rsp
  415194:	vmovsd QWORD PTR [rbp-0x8],xmm0
  415199:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  41519e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4151a3:	mov    rax,QWORD PTR [rbp-0x10]
  4151a7:	mov    QWORD PTR [rbp-0x10],rax
  4151ab:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4151b0:	pop    rbp
  4151b1:	ret    
  4151b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4151bc:	nop    DWORD PTR [rax+0x0]
  4151c0:	push   rbp
  4151c1:	mov    rbp,rsp
  4151c4:	sub    rsp,0x20
  4151c8:	xor    esi,esi
  4151ca:	mov    QWORD PTR [rbp-0x10],rdi
  4151ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4151d2:	mov    edx,0x20
  4151d7:	mov    ecx,0x10
  4151dc:	call   41f640 <flatcc_verify_field@@Base>
  4151e1:	mov    DWORD PTR [rbp-0x14],eax
  4151e4:	cmp    eax,0x0
  4151e7:	je     4151f8 <main@@Base+0x14c8>
  4151ed:	mov    eax,DWORD PTR [rbp-0x14]
  4151f0:	mov    DWORD PTR [rbp-0x4],eax
  4151f3:	jmp    415843 <main@@Base+0x1b13>
  4151f8:	mov    rdi,QWORD PTR [rbp-0x10]
  4151fc:	mov    eax,0x2
  415201:	mov    esi,eax
  415203:	mov    edx,0x2
  415208:	mov    ecx,eax
  41520a:	call   41f640 <flatcc_verify_field@@Base>
  41520f:	mov    DWORD PTR [rbp-0x14],eax
  415212:	cmp    eax,0x0
  415215:	je     415226 <main@@Base+0x14f6>
  41521b:	mov    eax,DWORD PTR [rbp-0x14]
  41521e:	mov    DWORD PTR [rbp-0x4],eax
  415221:	jmp    415843 <main@@Base+0x1b13>
  415226:	mov    rdi,QWORD PTR [rbp-0x10]
  41522a:	mov    esi,0x1
  41522f:	mov    edx,0x2
  415234:	mov    ecx,0x2
  415239:	call   41f640 <flatcc_verify_field@@Base>
  41523e:	mov    DWORD PTR [rbp-0x14],eax
  415241:	cmp    eax,0x0
  415244:	je     415255 <main@@Base+0x1525>
  41524a:	mov    eax,DWORD PTR [rbp-0x14]
  41524d:	mov    DWORD PTR [rbp-0x4],eax
  415250:	jmp    415843 <main@@Base+0x1b13>
  415255:	mov    rdi,QWORD PTR [rbp-0x10]
  415259:	mov    esi,0x3
  41525e:	mov    edx,0x1
  415263:	call   41f810 <flatcc_verify_string_field@@Base>
  415268:	mov    DWORD PTR [rbp-0x14],eax
  41526b:	cmp    eax,0x0
  41526e:	je     41527f <main@@Base+0x154f>
  415274:	mov    eax,DWORD PTR [rbp-0x14]
  415277:	mov    DWORD PTR [rbp-0x4],eax
  41527a:	jmp    415843 <main@@Base+0x1b13>
  41527f:	mov    rdi,QWORD PTR [rbp-0x10]
  415283:	mov    esi,0x6
  415288:	mov    edx,0x1
  41528d:	mov    ecx,0x1
  415292:	call   41f640 <flatcc_verify_field@@Base>
  415297:	mov    DWORD PTR [rbp-0x14],eax
  41529a:	cmp    eax,0x0
  41529d:	je     4152ae <main@@Base+0x157e>
  4152a3:	mov    eax,DWORD PTR [rbp-0x14]
  4152a6:	mov    DWORD PTR [rbp-0x4],eax
  4152a9:	jmp    415843 <main@@Base+0x1b13>
  4152ae:	xor    edx,edx
  4152b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4152b4:	mov    esi,0x5
  4152b9:	mov    ecx,0x1
  4152be:	mov    r8d,0x1
  4152c4:	mov    r9d,0xffffffff
  4152ca:	call   41fb20 <flatcc_verify_vector_field@@Base>
  4152cf:	mov    DWORD PTR [rbp-0x14],eax
  4152d2:	cmp    eax,0x0
  4152d5:	je     4152e6 <main@@Base+0x15b6>
  4152db:	mov    eax,DWORD PTR [rbp-0x14]
  4152de:	mov    DWORD PTR [rbp-0x4],eax
  4152e1:	jmp    415843 <main@@Base+0x1b13>
  4152e6:	xor    edx,edx
  4152e8:	mov    rdi,QWORD PTR [rbp-0x10]
  4152ec:	mov    esi,0xb
  4152f1:	lea    rcx,[rip+0xfffffffffffffec8]        # 4151c0 <main@@Base+0x1490>
  4152f8:	call   420220 <flatcc_verify_table_vector_field@@Base>
  4152fd:	mov    DWORD PTR [rbp-0x14],eax
  415300:	cmp    eax,0x0
  415303:	je     415314 <main@@Base+0x15e4>
  415309:	mov    eax,DWORD PTR [rbp-0x14]
  41530c:	mov    DWORD PTR [rbp-0x4],eax
  41530f:	jmp    415843 <main@@Base+0x1b13>
  415314:	xor    edx,edx
  415316:	mov    rdi,QWORD PTR [rbp-0x10]
  41531a:	mov    esi,0xa
  41531f:	call   41fcf0 <flatcc_verify_string_vector_field@@Base>
  415324:	mov    DWORD PTR [rbp-0x14],eax
  415327:	cmp    eax,0x0
  41532a:	je     41533b <main@@Base+0x160b>
  415330:	mov    eax,DWORD PTR [rbp-0x14]
  415333:	mov    DWORD PTR [rbp-0x4],eax
  415336:	jmp    415843 <main@@Base+0x1b13>
  41533b:	xor    edx,edx
  41533d:	mov    rdi,QWORD PTR [rbp-0x10]
  415341:	mov    esi,0x1c
  415346:	call   41fcf0 <flatcc_verify_string_vector_field@@Base>
  41534b:	mov    DWORD PTR [rbp-0x14],eax
  41534e:	cmp    eax,0x0
  415351:	je     415362 <main@@Base+0x1632>
  415357:	mov    eax,DWORD PTR [rbp-0x14]
  41535a:	mov    DWORD PTR [rbp-0x4],eax
  41535d:	jmp    415843 <main@@Base+0x1b13>
  415362:	xor    edx,edx
  415364:	mov    rdi,QWORD PTR [rbp-0x10]
  415368:	mov    esi,0x18
  41536d:	mov    ecx,0x1
  415372:	mov    r8d,0x1
  415378:	mov    r9d,0xffffffff
  41537e:	call   41fb20 <flatcc_verify_vector_field@@Base>
  415383:	mov    DWORD PTR [rbp-0x14],eax
  415386:	cmp    eax,0x0
  415389:	je     41539a <main@@Base+0x166a>
  41538f:	mov    eax,DWORD PTR [rbp-0x14]
  415392:	mov    DWORD PTR [rbp-0x4],eax
  415395:	jmp    415843 <main@@Base+0x1b13>
  41539a:	xor    edx,edx
  41539c:	mov    rdi,QWORD PTR [rbp-0x10]
  4153a0:	mov    esi,0x1d
  4153a5:	mov    ecx,0x8
  4153aa:	mov    r8d,0x4
  4153b0:	mov    r9d,0x1fffffff
  4153b6:	call   41fb20 <flatcc_verify_vector_field@@Base>
  4153bb:	mov    DWORD PTR [rbp-0x14],eax
  4153be:	cmp    eax,0x0
  4153c1:	je     4153d2 <main@@Base+0x16a2>
  4153c7:	mov    eax,DWORD PTR [rbp-0x14]
  4153ca:	mov    DWORD PTR [rbp-0x4],eax
  4153cd:	jmp    415843 <main@@Base+0x1b13>
  4153d2:	xor    edx,edx
  4153d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4153d8:	mov    esi,0xc
  4153dd:	lea    rcx,[rip+0xfffffffffffffddc]        # 4151c0 <main@@Base+0x1490>
  4153e4:	call   41fef0 <flatcc_verify_table_field@@Base>
  4153e9:	mov    DWORD PTR [rbp-0x14],eax
  4153ec:	cmp    eax,0x0
  4153ef:	je     415400 <main@@Base+0x16d0>
  4153f5:	mov    eax,DWORD PTR [rbp-0x14]
  4153f8:	mov    DWORD PTR [rbp-0x4],eax
  4153fb:	jmp    415843 <main@@Base+0x1b13>
  415400:	xor    edx,edx
  415402:	mov    rdi,QWORD PTR [rbp-0x10]
  415406:	mov    esi,0x8
  41540b:	lea    rcx,[rip+0x43e]        # 415850 <main@@Base+0x1b20>
  415412:	call   420e70 <flatcc_verify_union_field@@Base>
  415417:	mov    DWORD PTR [rbp-0x14],eax
  41541a:	cmp    eax,0x0
  41541d:	je     41542e <main@@Base+0x16fe>
  415423:	mov    eax,DWORD PTR [rbp-0x14]
  415426:	mov    DWORD PTR [rbp-0x4],eax
  415429:	jmp    415843 <main@@Base+0x1b13>
  41542e:	xor    edx,edx
  415430:	mov    rdi,QWORD PTR [rbp-0x10]
  415434:	mov    esi,0x9
  415439:	mov    ecx,0x4
  41543e:	mov    r8d,0x2
  415444:	mov    r9d,0x3fffffff
  41544a:	call   41fb20 <flatcc_verify_vector_field@@Base>
  41544f:	mov    DWORD PTR [rbp-0x14],eax
  415452:	cmp    eax,0x0
  415455:	je     415466 <main@@Base+0x1736>
  41545b:	mov    eax,DWORD PTR [rbp-0x14]
  41545e:	mov    DWORD PTR [rbp-0x4],eax
  415461:	jmp    415843 <main@@Base+0x1b13>
  415466:	xor    edx,edx
  415468:	mov    rdi,QWORD PTR [rbp-0x10]
  41546c:	mov    esi,0x1f
  415471:	mov    ecx,0x4
  415476:	mov    r8d,0x2
  41547c:	mov    r9d,0x3fffffff
  415482:	call   41fb20 <flatcc_verify_vector_field@@Base>
  415487:	mov    DWORD PTR [rbp-0x14],eax
  41548a:	cmp    eax,0x0
  41548d:	je     41549e <main@@Base+0x176e>
  415493:	mov    eax,DWORD PTR [rbp-0x14]
  415496:	mov    DWORD PTR [rbp-0x4],eax
  415499:	jmp    415843 <main@@Base+0x1b13>
  41549e:	xor    edx,edx
  4154a0:	xor    eax,eax
  4154a2:	mov    ecx,eax
  4154a4:	mov    rdi,QWORD PTR [rbp-0x10]
  4154a8:	mov    esi,0xd
  4154ad:	mov    r8d,0x1
  4154b3:	lea    r9,[rip+0xfffffffffffffd06]        # 4151c0 <main@@Base+0x1490>
  4154ba:	call   420d00 <flatcc_verify_table_as_nested_root@@Base>
  4154bf:	mov    DWORD PTR [rbp-0x14],eax
  4154c2:	cmp    eax,0x0
  4154c5:	je     4154d6 <main@@Base+0x17a6>
  4154cb:	mov    eax,DWORD PTR [rbp-0x14]
  4154ce:	mov    DWORD PTR [rbp-0x4],eax
  4154d1:	jmp    415843 <main@@Base+0x1b13>
  4154d6:	xor    edx,edx
  4154d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4154dc:	mov    esi,0xe
  4154e1:	lea    rcx,[rip+0x418]        # 415900 <main@@Base+0x1bd0>
  4154e8:	call   41fef0 <flatcc_verify_table_field@@Base>
  4154ed:	mov    DWORD PTR [rbp-0x14],eax
  4154f0:	cmp    eax,0x0
  4154f3:	je     415504 <main@@Base+0x17d4>
  4154f9:	mov    eax,DWORD PTR [rbp-0x14]
  4154fc:	mov    DWORD PTR [rbp-0x4],eax
  4154ff:	jmp    415843 <main@@Base+0x1b13>
  415504:	mov    rdi,QWORD PTR [rbp-0x10]
  415508:	mov    esi,0xf
  41550d:	mov    edx,0x1
  415512:	mov    ecx,0x1
  415517:	call   41f640 <flatcc_verify_field@@Base>
  41551c:	mov    DWORD PTR [rbp-0x14],eax
  41551f:	cmp    eax,0x0
  415522:	je     415533 <main@@Base+0x1803>
  415528:	mov    eax,DWORD PTR [rbp-0x14]
  41552b:	mov    DWORD PTR [rbp-0x4],eax
  41552e:	jmp    415843 <main@@Base+0x1b13>
  415533:	mov    rdi,QWORD PTR [rbp-0x10]
  415537:	mov    esi,0x10
  41553c:	mov    edx,0x4
  415541:	mov    ecx,0x4
  415546:	call   41f640 <flatcc_verify_field@@Base>
  41554b:	mov    DWORD PTR [rbp-0x14],eax
  41554e:	cmp    eax,0x0
  415551:	je     415562 <main@@Base+0x1832>
  415557:	mov    eax,DWORD PTR [rbp-0x14]
  41555a:	mov    DWORD PTR [rbp-0x4],eax
  41555d:	jmp    415843 <main@@Base+0x1b13>
  415562:	mov    rdi,QWORD PTR [rbp-0x10]
  415566:	mov    esi,0x11
  41556b:	mov    edx,0x4
  415570:	mov    ecx,0x4
  415575:	call   41f640 <flatcc_verify_field@@Base>
  41557a:	mov    DWORD PTR [rbp-0x14],eax
  41557d:	cmp    eax,0x0
  415580:	je     415591 <main@@Base+0x1861>
  415586:	mov    eax,DWORD PTR [rbp-0x14]
  415589:	mov    DWORD PTR [rbp-0x4],eax
  41558c:	jmp    415843 <main@@Base+0x1b13>
  415591:	mov    rdi,QWORD PTR [rbp-0x10]
  415595:	mov    esi,0x12
  41559a:	mov    edx,0x8
  41559f:	mov    ecx,0x8
  4155a4:	call   41f640 <flatcc_verify_field@@Base>
  4155a9:	mov    DWORD PTR [rbp-0x14],eax
  4155ac:	cmp    eax,0x0
  4155af:	je     4155c0 <main@@Base+0x1890>
  4155b5:	mov    eax,DWORD PTR [rbp-0x14]
  4155b8:	mov    DWORD PTR [rbp-0x4],eax
  4155bb:	jmp    415843 <main@@Base+0x1b13>
  4155c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4155c4:	mov    esi,0x13
  4155c9:	mov    edx,0x8
  4155ce:	mov    ecx,0x8
  4155d3:	call   41f640 <flatcc_verify_field@@Base>
  4155d8:	mov    DWORD PTR [rbp-0x14],eax
  4155db:	cmp    eax,0x0
  4155de:	je     4155ef <main@@Base+0x18bf>
  4155e4:	mov    eax,DWORD PTR [rbp-0x14]
  4155e7:	mov    DWORD PTR [rbp-0x4],eax
  4155ea:	jmp    415843 <main@@Base+0x1b13>
  4155ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4155f3:	mov    esi,0x14
  4155f8:	mov    edx,0x4
  4155fd:	mov    ecx,0x4
  415602:	call   41f640 <flatcc_verify_field@@Base>
  415607:	mov    DWORD PTR [rbp-0x14],eax
  41560a:	cmp    eax,0x0
  41560d:	je     41561e <main@@Base+0x18ee>
  415613:	mov    eax,DWORD PTR [rbp-0x14]
  415616:	mov    DWORD PTR [rbp-0x4],eax
  415619:	jmp    415843 <main@@Base+0x1b13>
  41561e:	mov    rdi,QWORD PTR [rbp-0x10]
  415622:	mov    esi,0x15
  415627:	mov    edx,0x4
  41562c:	mov    ecx,0x4
  415631:	call   41f640 <flatcc_verify_field@@Base>
  415636:	mov    DWORD PTR [rbp-0x14],eax
  415639:	cmp    eax,0x0
  41563c:	je     41564d <main@@Base+0x191d>
  415642:	mov    eax,DWORD PTR [rbp-0x14]
  415645:	mov    DWORD PTR [rbp-0x4],eax
  415648:	jmp    415843 <main@@Base+0x1b13>
  41564d:	mov    rdi,QWORD PTR [rbp-0x10]
  415651:	mov    esi,0x16
  415656:	mov    edx,0x8
  41565b:	mov    ecx,0x8
  415660:	call   41f640 <flatcc_verify_field@@Base>
  415665:	mov    DWORD PTR [rbp-0x14],eax
  415668:	cmp    eax,0x0
  41566b:	je     41567c <main@@Base+0x194c>
  415671:	mov    eax,DWORD PTR [rbp-0x14]
  415674:	mov    DWORD PTR [rbp-0x4],eax
  415677:	jmp    415843 <main@@Base+0x1b13>
  41567c:	mov    rdi,QWORD PTR [rbp-0x10]
  415680:	mov    esi,0x17
  415685:	mov    edx,0x8
  41568a:	mov    ecx,0x8
  41568f:	call   41f640 <flatcc_verify_field@@Base>
  415694:	mov    DWORD PTR [rbp-0x14],eax
  415697:	cmp    eax,0x0
  41569a:	je     4156ab <main@@Base+0x197b>
  4156a0:	mov    eax,DWORD PTR [rbp-0x14]
  4156a3:	mov    DWORD PTR [rbp-0x4],eax
  4156a6:	jmp    415843 <main@@Base+0x1b13>
  4156ab:	mov    rdi,QWORD PTR [rbp-0x10]
  4156af:	mov    esi,0x19
  4156b4:	mov    edx,0x4
  4156b9:	mov    ecx,0x4
  4156be:	call   41f640 <flatcc_verify_field@@Base>
  4156c3:	mov    DWORD PTR [rbp-0x14],eax
  4156c6:	cmp    eax,0x0
  4156c9:	je     4156da <main@@Base+0x19aa>
  4156cf:	mov    eax,DWORD PTR [rbp-0x14]
  4156d2:	mov    DWORD PTR [rbp-0x4],eax
  4156d5:	jmp    415843 <main@@Base+0x1b13>
  4156da:	mov    rdi,QWORD PTR [rbp-0x10]
  4156de:	mov    esi,0x1a
  4156e3:	mov    edx,0x4
  4156e8:	mov    ecx,0x4
  4156ed:	call   41f640 <flatcc_verify_field@@Base>
  4156f2:	mov    DWORD PTR [rbp-0x14],eax
  4156f5:	cmp    eax,0x0
  4156f8:	je     415709 <main@@Base+0x19d9>
  4156fe:	mov    eax,DWORD PTR [rbp-0x14]
  415701:	mov    DWORD PTR [rbp-0x4],eax
  415704:	jmp    415843 <main@@Base+0x1b13>
  415709:	mov    rdi,QWORD PTR [rbp-0x10]
  41570d:	mov    esi,0x1b
  415712:	mov    edx,0x4
  415717:	mov    ecx,0x4
  41571c:	call   41f640 <flatcc_verify_field@@Base>
  415721:	mov    DWORD PTR [rbp-0x14],eax
  415724:	cmp    eax,0x0
  415727:	je     415738 <main@@Base+0x1a08>
  41572d:	mov    eax,DWORD PTR [rbp-0x14]
  415730:	mov    DWORD PTR [rbp-0x4],eax
  415733:	jmp    415843 <main@@Base+0x1b13>
  415738:	xor    edx,edx
  41573a:	mov    rdi,QWORD PTR [rbp-0x10]
  41573e:	mov    esi,0x1e
  415743:	mov    ecx,0x1
  415748:	mov    r8d,0x1
  41574e:	mov    r9d,0xffffffff
  415754:	call   41fb20 <flatcc_verify_vector_field@@Base>
  415759:	mov    DWORD PTR [rbp-0x14],eax
  41575c:	cmp    eax,0x0
  41575f:	je     415770 <main@@Base+0x1a40>
  415765:	mov    eax,DWORD PTR [rbp-0x14]
  415768:	mov    DWORD PTR [rbp-0x4],eax
  41576b:	jmp    415843 <main@@Base+0x1b13>
  415770:	xor    edx,edx
  415772:	mov    rdi,QWORD PTR [rbp-0x10]
  415776:	mov    esi,0x20
  41577b:	mov    ecx,0x8
  415780:	mov    r8d,0x8
  415786:	mov    r9d,0x1fffffff
  41578c:	call   41fb20 <flatcc_verify_vector_field@@Base>
  415791:	mov    DWORD PTR [rbp-0x14],eax
  415794:	cmp    eax,0x0
  415797:	je     4157a8 <main@@Base+0x1a78>
  41579d:	mov    eax,DWORD PTR [rbp-0x14]
  4157a0:	mov    DWORD PTR [rbp-0x4],eax
  4157a3:	jmp    415843 <main@@Base+0x1b13>
  4157a8:	xor    edx,edx
  4157aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4157ae:	mov    esi,0x21
  4157b3:	mov    ecx,0x8
  4157b8:	mov    r8d,0x8
  4157be:	mov    r9d,0x1fffffff
  4157c4:	call   41fb20 <flatcc_verify_vector_field@@Base>
  4157c9:	mov    DWORD PTR [rbp-0x14],eax
  4157cc:	cmp    eax,0x0
  4157cf:	je     4157e0 <main@@Base+0x1ab0>
  4157d5:	mov    eax,DWORD PTR [rbp-0x14]
  4157d8:	mov    DWORD PTR [rbp-0x4],eax
  4157db:	jmp    415843 <main@@Base+0x1b13>
  4157e0:	xor    edx,edx
  4157e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4157e6:	mov    esi,0x22
  4157eb:	lea    rcx,[rip+0x1ae]        # 4159a0 <main@@Base+0x1c70>
  4157f2:	call   41fef0 <flatcc_verify_table_field@@Base>
  4157f7:	mov    DWORD PTR [rbp-0x14],eax
  4157fa:	cmp    eax,0x0
  4157fd:	je     41580e <main@@Base+0x1ade>
  415803:	mov    eax,DWORD PTR [rbp-0x14]
  415806:	mov    DWORD PTR [rbp-0x4],eax
  415809:	jmp    415843 <main@@Base+0x1b13>
  41580e:	xor    edx,edx
  415810:	mov    rdi,QWORD PTR [rbp-0x10]
  415814:	mov    esi,0x23
  415819:	lea    rcx,[rip+0x190]        # 4159b0 <main@@Base+0x1c80>
  415820:	call   41fef0 <flatcc_verify_table_field@@Base>
  415825:	mov    DWORD PTR [rbp-0x14],eax
  415828:	cmp    eax,0x0
  41582b:	je     41583c <main@@Base+0x1b0c>
  415831:	mov    eax,DWORD PTR [rbp-0x14]
  415834:	mov    DWORD PTR [rbp-0x4],eax
  415837:	jmp    415843 <main@@Base+0x1b13>
  41583c:	mov    DWORD PTR [rbp-0x4],0x0
  415843:	mov    eax,DWORD PTR [rbp-0x4]
  415846:	add    rsp,0x20
  41584a:	pop    rbp
  41584b:	ret    
  41584c:	nop    DWORD PTR [rax+0x0]
  415850:	push   rbp
  415851:	mov    rbp,rsp
  415854:	sub    rsp,0x20
  415858:	mov    QWORD PTR [rbp-0x10],rdi
  41585c:	mov    rax,QWORD PTR [rbp-0x10]
  415860:	movzx  ecx,BYTE PTR [rax+0x10]
  415864:	dec    ecx
  415866:	mov    eax,ecx
  415868:	sub    ecx,0x3
  41586b:	mov    QWORD PTR [rbp-0x18],rax
  41586f:	ja     4158e9 <main@@Base+0x1bb9>
  415875:	lea    rax,[rip+0xc7e8]        # 422064 <_IO_stdin_used@@Base+0x64>
  41587c:	mov    rcx,QWORD PTR [rbp-0x18]
  415880:	movsxd rdx,DWORD PTR [rax+rcx*4]
  415884:	add    rdx,rax
  415887:	jmp    rdx
  415889:	mov    rdi,QWORD PTR [rbp-0x10]
  41588d:	lea    rsi,[rip+0xfffffffffffff92c]        # 4151c0 <main@@Base+0x1490>
  415894:	call   420480 <flatcc_verify_union_table@@Base>
  415899:	mov    DWORD PTR [rbp-0x4],eax
  41589c:	jmp    4158f0 <main@@Base+0x1bc0>
  4158a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4158a5:	lea    rsi,[rip+0x1d4]        # 415a80 <main@@Base+0x1d50>
  4158ac:	call   420480 <flatcc_verify_union_table@@Base>
  4158b1:	mov    DWORD PTR [rbp-0x4],eax
  4158b4:	jmp    4158f0 <main@@Base+0x1bc0>
  4158b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4158bd:	lea    rsi,[rip+0x29c]        # 415b60 <main@@Base+0x1e30>
  4158c4:	call   420480 <flatcc_verify_union_table@@Base>
  4158c9:	mov    DWORD PTR [rbp-0x4],eax
  4158cc:	jmp    4158f0 <main@@Base+0x1bc0>
  4158d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4158d5:	lea    rsi,[rip+0x294]        # 415b70 <main@@Base+0x1e40>
  4158dc:	call   420480 <flatcc_verify_union_table@@Base>
  4158e1:	mov    DWORD PTR [rbp-0x4],eax
  4158e4:	jmp    4158f0 <main@@Base+0x1bc0>
  4158e9:	mov    DWORD PTR [rbp-0x4],0x0
  4158f0:	mov    eax,DWORD PTR [rbp-0x4]
  4158f3:	add    rsp,0x20
  4158f7:	pop    rbp
  4158f8:	ret    
  4158f9:	nop    DWORD PTR [rax+0x0]
  415900:	push   rbp
  415901:	mov    rbp,rsp
  415904:	sub    rsp,0x20
  415908:	xor    eax,eax
  41590a:	mov    QWORD PTR [rbp-0x10],rdi
  41590e:	mov    rdi,QWORD PTR [rbp-0x10]
  415912:	mov    esi,eax
  415914:	mov    edx,eax
  415916:	call   41f810 <flatcc_verify_string_field@@Base>
  41591b:	mov    DWORD PTR [rbp-0x14],eax
  41591e:	cmp    eax,0x0
  415921:	je     415932 <main@@Base+0x1c02>
  415927:	mov    eax,DWORD PTR [rbp-0x14]
  41592a:	mov    DWORD PTR [rbp-0x4],eax
  41592d:	jmp    415996 <main@@Base+0x1c66>
  415932:	mov    rdi,QWORD PTR [rbp-0x10]
  415936:	mov    esi,0x1
  41593b:	mov    edx,0x8
  415940:	mov    ecx,0x8
  415945:	call   41f640 <flatcc_verify_field@@Base>
  41594a:	mov    DWORD PTR [rbp-0x14],eax
  41594d:	cmp    eax,0x0
  415950:	je     415961 <main@@Base+0x1c31>
  415956:	mov    eax,DWORD PTR [rbp-0x14]
  415959:	mov    DWORD PTR [rbp-0x4],eax
  41595c:	jmp    415996 <main@@Base+0x1c66>
  415961:	mov    rdi,QWORD PTR [rbp-0x10]
  415965:	mov    eax,0x2
  41596a:	mov    esi,eax
  41596c:	mov    edx,0x2
  415971:	mov    ecx,eax
  415973:	call   41f640 <flatcc_verify_field@@Base>
  415978:	mov    DWORD PTR [rbp-0x14],eax
  41597b:	cmp    eax,0x0
  41597e:	je     41598f <main@@Base+0x1c5f>
  415984:	mov    eax,DWORD PTR [rbp-0x14]
  415987:	mov    DWORD PTR [rbp-0x4],eax
  41598a:	jmp    415996 <main@@Base+0x1c66>
  41598f:	mov    DWORD PTR [rbp-0x4],0x0
  415996:	mov    eax,DWORD PTR [rbp-0x4]
  415999:	add    rsp,0x20
  41599d:	pop    rbp
  41599e:	ret    
  41599f:	nop
  4159a0:	push   rbp
  4159a1:	mov    rbp,rsp
  4159a4:	xor    eax,eax
  4159a6:	mov    QWORD PTR [rbp-0x8],rdi
  4159aa:	pop    rbp
  4159ab:	ret    
  4159ac:	nop    DWORD PTR [rax+0x0]
  4159b0:	push   rbp
  4159b1:	mov    rbp,rsp
  4159b4:	sub    rsp,0x20
  4159b8:	xor    eax,eax
  4159ba:	mov    QWORD PTR [rbp-0x10],rdi
  4159be:	mov    rdi,QWORD PTR [rbp-0x10]
  4159c2:	mov    esi,eax
  4159c4:	mov    edx,eax
  4159c6:	mov    ecx,0x1
  4159cb:	mov    r8d,0x1
  4159d1:	mov    r9d,0xffffffff
  4159d7:	call   41fb20 <flatcc_verify_vector_field@@Base>
  4159dc:	mov    DWORD PTR [rbp-0x14],eax
  4159df:	cmp    eax,0x0
  4159e2:	je     4159f3 <main@@Base+0x1cc3>
  4159e8:	mov    eax,DWORD PTR [rbp-0x14]
  4159eb:	mov    DWORD PTR [rbp-0x4],eax
  4159ee:	jmp    415a69 <main@@Base+0x1d39>
  4159f3:	xor    edx,edx
  4159f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4159f9:	mov    eax,0x1
  4159fe:	mov    esi,eax
  415a00:	mov    ecx,0x1
  415a05:	mov    r8d,eax
  415a08:	mov    r9d,0xffffffff
  415a0e:	call   41fb20 <flatcc_verify_vector_field@@Base>
  415a13:	mov    DWORD PTR [rbp-0x14],eax
  415a16:	cmp    eax,0x0
  415a19:	je     415a2a <main@@Base+0x1cfa>
  415a1f:	mov    eax,DWORD PTR [rbp-0x14]
  415a22:	mov    DWORD PTR [rbp-0x4],eax
  415a25:	jmp    415a69 <main@@Base+0x1d39>
  415a2a:	xor    edx,edx
  415a2c:	xor    eax,eax
  415a2e:	mov    ecx,eax
  415a30:	mov    rdi,QWORD PTR [rbp-0x10]
  415a34:	mov    esi,0x2
  415a39:	mov    r8d,0x1
  415a3f:	lea    r9,[rip+0xfffffffffffff77a]        # 4151c0 <main@@Base+0x1490>
  415a46:	call   420d00 <flatcc_verify_table_as_nested_root@@Base>
  415a4b:	mov    DWORD PTR [rbp-0x14],eax
  415a4e:	cmp    eax,0x0
  415a51:	je     415a62 <main@@Base+0x1d32>
  415a57:	mov    eax,DWORD PTR [rbp-0x14]
  415a5a:	mov    DWORD PTR [rbp-0x4],eax
  415a5d:	jmp    415a69 <main@@Base+0x1d39>
  415a62:	mov    DWORD PTR [rbp-0x4],0x0
  415a69:	mov    eax,DWORD PTR [rbp-0x4]
  415a6c:	add    rsp,0x20
  415a70:	pop    rbp
  415a71:	ret    
  415a72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a7c:	nop    DWORD PTR [rax+0x0]
  415a80:	push   rbp
  415a81:	mov    rbp,rsp
  415a84:	sub    rsp,0x20
  415a88:	xor    esi,esi
  415a8a:	mov    QWORD PTR [rbp-0x10],rdi
  415a8e:	mov    rdi,QWORD PTR [rbp-0x10]
  415a92:	mov    edx,0x1
  415a97:	mov    ecx,0x1
  415a9c:	call   41f640 <flatcc_verify_field@@Base>
  415aa1:	mov    DWORD PTR [rbp-0x14],eax
  415aa4:	cmp    eax,0x0
  415aa7:	je     415ab8 <main@@Base+0x1d88>
  415aad:	mov    eax,DWORD PTR [rbp-0x14]
  415ab0:	mov    DWORD PTR [rbp-0x4],eax
  415ab3:	jmp    415b4b <main@@Base+0x1e1b>
  415ab8:	mov    rdi,QWORD PTR [rbp-0x10]
  415abc:	mov    eax,0x1
  415ac1:	mov    esi,eax
  415ac3:	mov    edx,0x1
  415ac8:	mov    ecx,eax
  415aca:	call   41f640 <flatcc_verify_field@@Base>
  415acf:	mov    DWORD PTR [rbp-0x14],eax
  415ad2:	cmp    eax,0x0
  415ad5:	je     415ae6 <main@@Base+0x1db6>
  415adb:	mov    eax,DWORD PTR [rbp-0x14]
  415ade:	mov    DWORD PTR [rbp-0x4],eax
  415ae1:	jmp    415b4b <main@@Base+0x1e1b>
  415ae6:	mov    rdi,QWORD PTR [rbp-0x10]
  415aea:	mov    esi,0x2
  415aef:	mov    edx,0x1
  415af4:	mov    ecx,0x1
  415af9:	call   41f640 <flatcc_verify_field@@Base>
  415afe:	mov    DWORD PTR [rbp-0x14],eax
  415b01:	cmp    eax,0x0
  415b04:	je     415b15 <main@@Base+0x1de5>
  415b0a:	mov    eax,DWORD PTR [rbp-0x14]
  415b0d:	mov    DWORD PTR [rbp-0x4],eax
  415b10:	jmp    415b4b <main@@Base+0x1e1b>
  415b15:	mov    rdi,QWORD PTR [rbp-0x10]
  415b19:	mov    esi,0x3
  415b1e:	mov    edx,0x1
  415b23:	mov    ecx,0x1
  415b28:	call   41f640 <flatcc_verify_field@@Base>
  415b2d:	mov    DWORD PTR [rbp-0x14],eax
  415b30:	cmp    eax,0x0
  415b33:	je     415b44 <main@@Base+0x1e14>
  415b39:	mov    eax,DWORD PTR [rbp-0x14]
  415b3c:	mov    DWORD PTR [rbp-0x4],eax
  415b3f:	jmp    415b4b <main@@Base+0x1e1b>
  415b44:	mov    DWORD PTR [rbp-0x4],0x0
  415b4b:	mov    eax,DWORD PTR [rbp-0x4]
  415b4e:	add    rsp,0x20
  415b52:	pop    rbp
  415b53:	ret    
  415b54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b5e:	xchg   ax,ax
  415b60:	push   rbp
  415b61:	mov    rbp,rsp
  415b64:	xor    eax,eax
  415b66:	mov    QWORD PTR [rbp-0x8],rdi
  415b6a:	pop    rbp
  415b6b:	ret    
  415b6c:	nop    DWORD PTR [rax+0x0]
  415b70:	push   rbp
  415b71:	mov    rbp,rsp
  415b74:	sub    rsp,0x20
  415b78:	xor    eax,eax
  415b7a:	mov    QWORD PTR [rbp-0x10],rdi
  415b7e:	mov    rdi,QWORD PTR [rbp-0x10]
  415b82:	mov    esi,eax
  415b84:	mov    edx,eax
  415b86:	lea    rcx,[rip+0x93]        # 415c20 <main@@Base+0x1ef0>
  415b8d:	call   41fef0 <flatcc_verify_table_field@@Base>
  415b92:	mov    DWORD PTR [rbp-0x14],eax
  415b95:	cmp    eax,0x0
  415b98:	je     415ba9 <main@@Base+0x1e79>
  415b9e:	mov    eax,DWORD PTR [rbp-0x14]
  415ba1:	mov    DWORD PTR [rbp-0x4],eax
  415ba4:	jmp    415c0c <main@@Base+0x1edc>
  415ba9:	xor    edx,edx
  415bab:	mov    rdi,QWORD PTR [rbp-0x10]
  415baf:	mov    esi,0x1
  415bb4:	lea    rcx,[rip+0x115]        # 415cd0 <main@@Base+0x1fa0>
  415bbb:	call   41fef0 <flatcc_verify_table_field@@Base>
  415bc0:	mov    DWORD PTR [rbp-0x14],eax
  415bc3:	cmp    eax,0x0
  415bc6:	je     415bd7 <main@@Base+0x1ea7>
  415bcc:	mov    eax,DWORD PTR [rbp-0x14]
  415bcf:	mov    DWORD PTR [rbp-0x4],eax
  415bd2:	jmp    415c0c <main@@Base+0x1edc>
  415bd7:	xor    edx,edx
  415bd9:	mov    rdi,QWORD PTR [rbp-0x10]
  415bdd:	mov    esi,0x3
  415be2:	lea    rcx,[rip+0xfffffffffffffc67]        # 415850 <main@@Base+0x1b20>
  415be9:	call   421120 <flatcc_verify_union_vector_field@@Base>
  415bee:	mov    DWORD PTR [rbp-0x14],eax
  415bf1:	cmp    eax,0x0
  415bf4:	je     415c05 <main@@Base+0x1ed5>
  415bfa:	mov    eax,DWORD PTR [rbp-0x14]
  415bfd:	mov    DWORD PTR [rbp-0x4],eax
  415c00:	jmp    415c0c <main@@Base+0x1edc>
  415c05:	mov    DWORD PTR [rbp-0x4],0x0
  415c0c:	mov    eax,DWORD PTR [rbp-0x4]
  415c0f:	add    rsp,0x20
  415c13:	pop    rbp
  415c14:	ret    
  415c15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c1f:	nop
  415c20:	push   rbp
  415c21:	mov    rbp,rsp
  415c24:	sub    rsp,0x20
  415c28:	xor    eax,eax
  415c2a:	mov    QWORD PTR [rbp-0x10],rdi
  415c2e:	mov    rdi,QWORD PTR [rbp-0x10]
  415c32:	mov    esi,eax
  415c34:	mov    edx,eax
  415c36:	lea    rcx,[rip+0x1a3]        # 415de0 <main@@Base+0x20b0>
  415c3d:	call   41fef0 <flatcc_verify_table_field@@Base>
  415c42:	mov    DWORD PTR [rbp-0x14],eax
  415c45:	cmp    eax,0x0
  415c48:	je     415c59 <main@@Base+0x1f29>
  415c4e:	mov    eax,DWORD PTR [rbp-0x14]
  415c51:	mov    DWORD PTR [rbp-0x4],eax
  415c54:	jmp    415cbc <main@@Base+0x1f8c>
  415c59:	xor    edx,edx
  415c5b:	mov    rdi,QWORD PTR [rbp-0x10]
  415c5f:	mov    esi,0x1
  415c64:	lea    rcx,[rip+0x325]        # 415f90 <main@@Base+0x2260>
  415c6b:	call   41fef0 <flatcc_verify_table_field@@Base>
  415c70:	mov    DWORD PTR [rbp-0x14],eax
  415c73:	cmp    eax,0x0
  415c76:	je     415c87 <main@@Base+0x1f57>
  415c7c:	mov    eax,DWORD PTR [rbp-0x14]
  415c7f:	mov    DWORD PTR [rbp-0x4],eax
  415c82:	jmp    415cbc <main@@Base+0x1f8c>
  415c87:	xor    edx,edx
  415c89:	mov    rdi,QWORD PTR [rbp-0x10]
  415c8d:	mov    esi,0x2
  415c92:	lea    rcx,[rip+0x377]        # 416010 <main@@Base+0x22e0>
  415c99:	call   41fef0 <flatcc_verify_table_field@@Base>
  415c9e:	mov    DWORD PTR [rbp-0x14],eax
  415ca1:	cmp    eax,0x0
  415ca4:	je     415cb5 <main@@Base+0x1f85>
  415caa:	mov    eax,DWORD PTR [rbp-0x14]
  415cad:	mov    DWORD PTR [rbp-0x4],eax
  415cb0:	jmp    415cbc <main@@Base+0x1f8c>
  415cb5:	mov    DWORD PTR [rbp-0x4],0x0
  415cbc:	mov    eax,DWORD PTR [rbp-0x4]
  415cbf:	add    rsp,0x20
  415cc3:	pop    rbp
  415cc4:	ret    
  415cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ccf:	nop
  415cd0:	push   rbp
  415cd1:	mov    rbp,rsp
  415cd4:	sub    rsp,0x20
  415cd8:	xor    edx,edx
  415cda:	mov    QWORD PTR [rbp-0x10],rdi
  415cde:	mov    rdi,QWORD PTR [rbp-0x10]
  415ce2:	mov    esi,0x1
  415ce7:	lea    rcx,[rip+0x3a2]        # 416090 <main@@Base+0x2360>
  415cee:	call   420e70 <flatcc_verify_union_field@@Base>
  415cf3:	mov    DWORD PTR [rbp-0x14],eax
  415cf6:	cmp    eax,0x0
  415cf9:	je     415d0a <main@@Base+0x1fda>
  415cff:	mov    eax,DWORD PTR [rbp-0x14]
  415d02:	mov    DWORD PTR [rbp-0x4],eax
  415d05:	jmp    415dc9 <main@@Base+0x2099>
  415d0a:	xor    edx,edx
  415d0c:	mov    rdi,QWORD PTR [rbp-0x10]
  415d10:	mov    esi,0x3
  415d15:	lea    rcx,[rip+0x374]        # 416090 <main@@Base+0x2360>
  415d1c:	call   420e70 <flatcc_verify_union_field@@Base>
  415d21:	mov    DWORD PTR [rbp-0x14],eax
  415d24:	cmp    eax,0x0
  415d27:	je     415d38 <main@@Base+0x2008>
  415d2d:	mov    eax,DWORD PTR [rbp-0x14]
  415d30:	mov    DWORD PTR [rbp-0x4],eax
  415d33:	jmp    415dc9 <main@@Base+0x2099>
  415d38:	xor    edx,edx
  415d3a:	mov    rdi,QWORD PTR [rbp-0x10]
  415d3e:	mov    esi,0x5
  415d43:	lea    rcx,[rip+0x346]        # 416090 <main@@Base+0x2360>
  415d4a:	call   420e70 <flatcc_verify_union_field@@Base>
  415d4f:	mov    DWORD PTR [rbp-0x14],eax
  415d52:	cmp    eax,0x0
  415d55:	je     415d66 <main@@Base+0x2036>
  415d5b:	mov    eax,DWORD PTR [rbp-0x14]
  415d5e:	mov    DWORD PTR [rbp-0x4],eax
  415d61:	jmp    415dc9 <main@@Base+0x2099>
  415d66:	xor    edx,edx
  415d68:	mov    rdi,QWORD PTR [rbp-0x10]
  415d6c:	mov    esi,0x7
  415d71:	lea    rcx,[rip+0x318]        # 416090 <main@@Base+0x2360>
  415d78:	call   420e70 <flatcc_verify_union_field@@Base>
  415d7d:	mov    DWORD PTR [rbp-0x14],eax
  415d80:	cmp    eax,0x0
  415d83:	je     415d94 <main@@Base+0x2064>
  415d89:	mov    eax,DWORD PTR [rbp-0x14]
  415d8c:	mov    DWORD PTR [rbp-0x4],eax
  415d8f:	jmp    415dc9 <main@@Base+0x2099>
  415d94:	xor    edx,edx
  415d96:	mov    rdi,QWORD PTR [rbp-0x10]
  415d9a:	mov    esi,0x9
  415d9f:	lea    rcx,[rip+0x2ea]        # 416090 <main@@Base+0x2360>
  415da6:	call   421120 <flatcc_verify_union_vector_field@@Base>
  415dab:	mov    DWORD PTR [rbp-0x14],eax
  415dae:	cmp    eax,0x0
  415db1:	je     415dc2 <main@@Base+0x2092>
  415db7:	mov    eax,DWORD PTR [rbp-0x14]
  415dba:	mov    DWORD PTR [rbp-0x4],eax
  415dbd:	jmp    415dc9 <main@@Base+0x2099>
  415dc2:	mov    DWORD PTR [rbp-0x4],0x0
  415dc9:	mov    eax,DWORD PTR [rbp-0x4]
  415dcc:	add    rsp,0x20
  415dd0:	pop    rbp
  415dd1:	ret    
  415dd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ddc:	nop    DWORD PTR [rax+0x0]
  415de0:	push   rbp
  415de1:	mov    rbp,rsp
  415de4:	sub    rsp,0x20
  415de8:	xor    eax,eax
  415dea:	mov    QWORD PTR [rbp-0x10],rdi
  415dee:	mov    rdi,QWORD PTR [rbp-0x10]
  415df2:	mov    esi,eax
  415df4:	mov    edx,eax
  415df6:	call   41f810 <flatcc_verify_string_field@@Base>
  415dfb:	mov    DWORD PTR [rbp-0x14],eax
  415dfe:	cmp    eax,0x0
  415e01:	je     415e12 <main@@Base+0x20e2>
  415e07:	mov    eax,DWORD PTR [rbp-0x14]
  415e0a:	mov    DWORD PTR [rbp-0x4],eax
  415e0d:	jmp    415f81 <main@@Base+0x2251>
  415e12:	mov    rdi,QWORD PTR [rbp-0x10]
  415e16:	mov    esi,0x1
  415e1b:	mov    edx,0x4
  415e20:	mov    ecx,0x4
  415e25:	call   41f640 <flatcc_verify_field@@Base>
  415e2a:	mov    DWORD PTR [rbp-0x14],eax
  415e2d:	cmp    eax,0x0
  415e30:	je     415e41 <main@@Base+0x2111>
  415e36:	mov    eax,DWORD PTR [rbp-0x14]
  415e39:	mov    DWORD PTR [rbp-0x4],eax
  415e3c:	jmp    415f81 <main@@Base+0x2251>
  415e41:	xor    edx,edx
  415e43:	mov    rdi,QWORD PTR [rbp-0x10]
  415e47:	mov    esi,0x2
  415e4c:	call   41f810 <flatcc_verify_string_field@@Base>
  415e51:	mov    DWORD PTR [rbp-0x14],eax
  415e54:	cmp    eax,0x0
  415e57:	je     415e68 <main@@Base+0x2138>
  415e5d:	mov    eax,DWORD PTR [rbp-0x14]
  415e60:	mov    DWORD PTR [rbp-0x4],eax
  415e63:	jmp    415f81 <main@@Base+0x2251>
  415e68:	mov    rdi,QWORD PTR [rbp-0x10]
  415e6c:	mov    esi,0x3
  415e71:	mov    edx,0x8
  415e76:	mov    ecx,0x8
  415e7b:	call   41f640 <flatcc_verify_field@@Base>
  415e80:	mov    DWORD PTR [rbp-0x14],eax
  415e83:	cmp    eax,0x0
  415e86:	je     415e97 <main@@Base+0x2167>
  415e8c:	mov    eax,DWORD PTR [rbp-0x14]
  415e8f:	mov    DWORD PTR [rbp-0x4],eax
  415e92:	jmp    415f81 <main@@Base+0x2251>
  415e97:	xor    edx,edx
  415e99:	mov    rdi,QWORD PTR [rbp-0x10]
  415e9d:	mov    esi,0x4
  415ea2:	call   41f810 <flatcc_verify_string_field@@Base>
  415ea7:	mov    DWORD PTR [rbp-0x14],eax
  415eaa:	cmp    eax,0x0
  415ead:	je     415ebe <main@@Base+0x218e>
  415eb3:	mov    eax,DWORD PTR [rbp-0x14]
  415eb6:	mov    DWORD PTR [rbp-0x4],eax
  415eb9:	jmp    415f81 <main@@Base+0x2251>
  415ebe:	mov    rdi,QWORD PTR [rbp-0x10]
  415ec2:	mov    esi,0x5
  415ec7:	mov    edx,0x8
  415ecc:	mov    ecx,0x8
  415ed1:	call   41f640 <flatcc_verify_field@@Base>
  415ed6:	mov    DWORD PTR [rbp-0x14],eax
  415ed9:	cmp    eax,0x0
  415edc:	je     415eed <main@@Base+0x21bd>
  415ee2:	mov    eax,DWORD PTR [rbp-0x14]
  415ee5:	mov    DWORD PTR [rbp-0x4],eax
  415ee8:	jmp    415f81 <main@@Base+0x2251>
  415eed:	mov    rdi,QWORD PTR [rbp-0x10]
  415ef1:	mov    esi,0x6
  415ef6:	mov    edx,0x4
  415efb:	mov    ecx,0x4
  415f00:	call   41f640 <flatcc_verify_field@@Base>
  415f05:	mov    DWORD PTR [rbp-0x14],eax
  415f08:	cmp    eax,0x0
  415f0b:	je     415f1c <main@@Base+0x21ec>
  415f11:	mov    eax,DWORD PTR [rbp-0x14]
  415f14:	mov    DWORD PTR [rbp-0x4],eax
  415f17:	jmp    415f81 <main@@Base+0x2251>
  415f1c:	mov    rdi,QWORD PTR [rbp-0x10]
  415f20:	mov    esi,0x7
  415f25:	mov    edx,0x8
  415f2a:	mov    ecx,0x8
  415f2f:	call   41f640 <flatcc_verify_field@@Base>
  415f34:	mov    DWORD PTR [rbp-0x14],eax
  415f37:	cmp    eax,0x0
  415f3a:	je     415f4b <main@@Base+0x221b>
  415f40:	mov    eax,DWORD PTR [rbp-0x14]
  415f43:	mov    DWORD PTR [rbp-0x4],eax
  415f46:	jmp    415f81 <main@@Base+0x2251>
  415f4b:	mov    rdi,QWORD PTR [rbp-0x10]
  415f4f:	mov    esi,0x8
  415f54:	mov    edx,0x4
  415f59:	mov    ecx,0x4
  415f5e:	call   41f640 <flatcc_verify_field@@Base>
  415f63:	mov    DWORD PTR [rbp-0x14],eax
  415f66:	cmp    eax,0x0
  415f69:	je     415f7a <main@@Base+0x224a>
  415f6f:	mov    eax,DWORD PTR [rbp-0x14]
  415f72:	mov    DWORD PTR [rbp-0x4],eax
  415f75:	jmp    415f81 <main@@Base+0x2251>
  415f7a:	mov    DWORD PTR [rbp-0x4],0x0
  415f81:	mov    eax,DWORD PTR [rbp-0x4]
  415f84:	add    rsp,0x20
  415f88:	pop    rbp
  415f89:	ret    
  415f8a:	nop    WORD PTR [rax+rax*1+0x0]
  415f90:	push   rbp
  415f91:	mov    rbp,rsp
  415f94:	sub    rsp,0x20
  415f98:	xor    esi,esi
  415f9a:	mov    QWORD PTR [rbp-0x10],rdi
  415f9e:	mov    rdi,QWORD PTR [rbp-0x10]
  415fa2:	mov    edx,0x8
  415fa7:	mov    ecx,0x8
  415fac:	call   41f640 <flatcc_verify_field@@Base>
  415fb1:	mov    DWORD PTR [rbp-0x14],eax
  415fb4:	cmp    eax,0x0
  415fb7:	je     415fc8 <main@@Base+0x2298>
  415fbd:	mov    eax,DWORD PTR [rbp-0x14]
  415fc0:	mov    DWORD PTR [rbp-0x4],eax
  415fc3:	jmp    415ffe <main@@Base+0x22ce>
  415fc8:	mov    rdi,QWORD PTR [rbp-0x10]
  415fcc:	mov    esi,0x1
  415fd1:	mov    edx,0x4
  415fd6:	mov    ecx,0x4
  415fdb:	call   41f640 <flatcc_verify_field@@Base>
  415fe0:	mov    DWORD PTR [rbp-0x14],eax
  415fe3:	cmp    eax,0x0
  415fe6:	je     415ff7 <main@@Base+0x22c7>
  415fec:	mov    eax,DWORD PTR [rbp-0x14]
  415fef:	mov    DWORD PTR [rbp-0x4],eax
  415ff2:	jmp    415ffe <main@@Base+0x22ce>
  415ff7:	mov    DWORD PTR [rbp-0x4],0x0
  415ffe:	mov    eax,DWORD PTR [rbp-0x4]
  416001:	add    rsp,0x20
  416005:	pop    rbp
  416006:	ret    
  416007:	nop    WORD PTR [rax+rax*1+0x0]
  416010:	push   rbp
  416011:	mov    rbp,rsp
  416014:	sub    rsp,0x20
  416018:	xor    esi,esi
  41601a:	mov    QWORD PTR [rbp-0x10],rdi
  41601e:	mov    rdi,QWORD PTR [rbp-0x10]
  416022:	mov    edx,0x8
  416027:	mov    ecx,0x8
  41602c:	call   41f640 <flatcc_verify_field@@Base>
  416031:	mov    DWORD PTR [rbp-0x14],eax
  416034:	cmp    eax,0x0
  416037:	je     416048 <main@@Base+0x2318>
  41603d:	mov    eax,DWORD PTR [rbp-0x14]
  416040:	mov    DWORD PTR [rbp-0x4],eax
  416043:	jmp    41607e <main@@Base+0x234e>
  416048:	mov    rdi,QWORD PTR [rbp-0x10]
  41604c:	mov    esi,0x1
  416051:	mov    edx,0x4
  416056:	mov    ecx,0x4
  41605b:	call   41f640 <flatcc_verify_field@@Base>
  416060:	mov    DWORD PTR [rbp-0x14],eax
  416063:	cmp    eax,0x0
  416066:	je     416077 <main@@Base+0x2347>
  41606c:	mov    eax,DWORD PTR [rbp-0x14]
  41606f:	mov    DWORD PTR [rbp-0x4],eax
  416072:	jmp    41607e <main@@Base+0x234e>
  416077:	mov    DWORD PTR [rbp-0x4],0x0
  41607e:	mov    eax,DWORD PTR [rbp-0x4]
  416081:	add    rsp,0x20
  416085:	pop    rbp
  416086:	ret    
  416087:	nop    WORD PTR [rax+rax*1+0x0]
  416090:	push   rbp
  416091:	mov    rbp,rsp
  416094:	sub    rsp,0x20
  416098:	mov    QWORD PTR [rbp-0x10],rdi
  41609c:	mov    rax,QWORD PTR [rbp-0x10]
  4160a0:	movzx  ecx,BYTE PTR [rax+0x10]
  4160a4:	mov    edx,ecx
  4160a6:	sub    edx,0x2
  4160a9:	mov    DWORD PTR [rbp-0x14],ecx
  4160ac:	je     41610e <main@@Base+0x23de>
  4160b2:	jmp    4160b7 <main@@Base+0x2387>
  4160b7:	mov    eax,DWORD PTR [rbp-0x14]
  4160ba:	sub    eax,0x8
  4160bd:	je     416126 <main@@Base+0x23f6>
  4160c3:	jmp    4160c8 <main@@Base+0x2398>
  4160c8:	mov    eax,DWORD PTR [rbp-0x14]
  4160cb:	sub    eax,0x9
  4160ce:	je     416141 <main@@Base+0x2411>
  4160d4:	jmp    4160d9 <main@@Base+0x23a9>
  4160d9:	mov    eax,DWORD PTR [rbp-0x14]
  4160dc:	sub    eax,0xa
  4160df:	je     41615c <main@@Base+0x242c>
  4160e5:	jmp    4160ea <main@@Base+0x23ba>
  4160ea:	mov    eax,DWORD PTR [rbp-0x14]
  4160ed:	sub    eax,0xb
  4160f0:	je     416177 <main@@Base+0x2447>
  4160f6:	jmp    4160fb <main@@Base+0x23cb>
  4160fb:	mov    eax,DWORD PTR [rbp-0x14]
  4160fe:	sub    eax,0xff
  416103:	je     416188 <main@@Base+0x2458>
  416109:	jmp    416199 <main@@Base+0x2469>
  41610e:	mov    rdi,QWORD PTR [rbp-0x10]
  416112:	lea    rsi,[rip+0x97]        # 4161b0 <main@@Base+0x2480>
  416119:	call   420480 <flatcc_verify_union_table@@Base>
  41611e:	mov    DWORD PTR [rbp-0x4],eax
  416121:	jmp    4161a0 <main@@Base+0x2470>
  416126:	mov    rdi,QWORD PTR [rbp-0x10]
  41612a:	mov    esi,0x2
  41612f:	mov    edx,0x2
  416134:	call   4204d0 <flatcc_verify_union_struct@@Base>
  416139:	mov    DWORD PTR [rbp-0x4],eax
  41613c:	jmp    4161a0 <main@@Base+0x2470>
  416141:	mov    rdi,QWORD PTR [rbp-0x10]
  416145:	mov    esi,0x4
  41614a:	mov    edx,0x4
  41614f:	call   4204d0 <flatcc_verify_union_struct@@Base>
  416154:	mov    DWORD PTR [rbp-0x4],eax
  416157:	jmp    4161a0 <main@@Base+0x2470>
  41615c:	mov    rdi,QWORD PTR [rbp-0x10]
  416160:	mov    esi,0x4
  416165:	mov    edx,0x4
  41616a:	call   4204d0 <flatcc_verify_union_struct@@Base>
  41616f:	mov    DWORD PTR [rbp-0x4],eax
  416172:	jmp    4161a0 <main@@Base+0x2470>
  416177:	mov    rdi,QWORD PTR [rbp-0x10]
  41617b:	call   420610 <flatcc_verify_union_string@@Base>
  416180:	mov    DWORD PTR [rbp-0x4],eax
  416183:	jmp    4161a0 <main@@Base+0x2470>
  416188:	mov    rdi,QWORD PTR [rbp-0x10]
  41618c:	call   420610 <flatcc_verify_union_string@@Base>
  416191:	mov    DWORD PTR [rbp-0x4],eax
  416194:	jmp    4161a0 <main@@Base+0x2470>
  416199:	mov    DWORD PTR [rbp-0x4],0x0
  4161a0:	mov    eax,DWORD PTR [rbp-0x4]
  4161a3:	add    rsp,0x20
  4161a7:	pop    rbp
  4161a8:	ret    
  4161a9:	nop    DWORD PTR [rax+0x0]
  4161b0:	push   rbp
  4161b1:	mov    rbp,rsp
  4161b4:	sub    rsp,0x20
  4161b8:	xor    esi,esi
  4161ba:	mov    QWORD PTR [rbp-0x10],rdi
  4161be:	mov    rdi,QWORD PTR [rbp-0x10]
  4161c2:	mov    edx,0x4
  4161c7:	mov    ecx,0x4
  4161cc:	call   41f640 <flatcc_verify_field@@Base>
  4161d1:	mov    DWORD PTR [rbp-0x14],eax
  4161d4:	cmp    eax,0x0
  4161d7:	je     4161e8 <main@@Base+0x24b8>
  4161dd:	mov    eax,DWORD PTR [rbp-0x14]
  4161e0:	mov    DWORD PTR [rbp-0x4],eax
  4161e3:	jmp    4161ef <main@@Base+0x24bf>
  4161e8:	mov    DWORD PTR [rbp-0x4],0x0
  4161ef:	mov    eax,DWORD PTR [rbp-0x4]
  4161f2:	add    rsp,0x20
  4161f6:	pop    rbp
  4161f7:	ret    
  4161f8:	nop    DWORD PTR [rax+rax*1+0x0]
  416200:	push   rbp
  416201:	mov    rbp,rsp
  416204:	sub    rsp,0x10
  416208:	mov    QWORD PTR [rbp-0x8],rdi
  41620c:	mov    rax,QWORD PTR [rbp-0x8]
  416210:	mov    edi,DWORD PTR [rax]
  416212:	call   416220 <main@@Base+0x24f0>
  416217:	add    rsp,0x10
  41621b:	pop    rbp
  41621c:	ret    
  41621d:	nop    DWORD PTR [rax]
  416220:	push   rbp
  416221:	mov    rbp,rsp
  416224:	mov    DWORD PTR [rbp-0x4],edi
  416227:	mov    eax,DWORD PTR [rbp-0x4]
  41622a:	pop    rbp
  41622b:	ret    
  41622c:	nop    DWORD PTR [rax+0x0]
  416230:	push   rbp
  416231:	mov    rbp,rsp
  416234:	xor    eax,eax
  416236:	pop    rbp
  416237:	ret    
  416238:	nop    DWORD PTR [rax+rax*1+0x0]
  416240:	push   rbp
  416241:	mov    rbp,rsp
  416244:	sub    rsp,0x20
  416248:	mov    QWORD PTR [rbp-0x10],rdi
  41624c:	mov    QWORD PTR [rbp-0x18],rsi
  416250:	mov    rdi,QWORD PTR [rbp-0x10]
  416254:	call   4162a0 <main@@Base+0x2570>
  416259:	cmp    eax,0x0
  41625c:	jne    416278 <main@@Base+0x2548>
  416262:	mov    rdi,QWORD PTR [rbp-0x10]
  416266:	mov    rsi,QWORD PTR [rbp-0x18]
  41626a:	call   4162c0 <main@@Base+0x2590>
  41626f:	cmp    eax,0x0
  416272:	je     416284 <main@@Base+0x2554>
  416278:	mov    DWORD PTR [rbp-0x4],0x0
  41627f:	jmp    416290 <main@@Base+0x2560>
  416284:	mov    rdi,QWORD PTR [rbp-0x10]
  416288:	call   416320 <main@@Base+0x25f0>
  41628d:	mov    DWORD PTR [rbp-0x4],eax
  416290:	mov    eax,DWORD PTR [rbp-0x4]
  416293:	add    rsp,0x20
  416297:	pop    rbp
  416298:	ret    
  416299:	nop    DWORD PTR [rax+0x0]
  4162a0:	push   rbp
  4162a1:	mov    rbp,rsp
  4162a4:	sub    rsp,0x10
  4162a8:	mov    QWORD PTR [rbp-0x8],rdi
  4162ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4162b0:	mov    esi,0x1
  4162b5:	call   41b550 <flatcc_builder_start_table@@Base>
  4162ba:	add    rsp,0x10
  4162be:	pop    rbp
  4162bf:	ret    
  4162c0:	push   rbp
  4162c1:	mov    rbp,rsp
  4162c4:	sub    rsp,0x20
  4162c8:	mov    QWORD PTR [rbp-0x10],rdi
  4162cc:	mov    QWORD PTR [rbp-0x18],rsi
  4162d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4162d4:	call   416380 <main@@Base+0x2650>
  4162d9:	mov    QWORD PTR [rbp-0x20],rax
  4162dd:	cmp    QWORD PTR [rbp-0x20],0x0
  4162e2:	jne    4162f4 <main@@Base+0x25c4>
  4162e8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4162ef:	jmp    416308 <main@@Base+0x25d8>
  4162f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4162f8:	mov    rsi,QWORD PTR [rbp-0x18]
  4162fc:	call   4163b0 <main@@Base+0x2680>
  416301:	mov    DWORD PTR [rbp-0x4],0x0
  416308:	mov    eax,DWORD PTR [rbp-0x4]
  41630b:	add    rsp,0x20
  41630f:	pop    rbp
  416310:	ret    
  416311:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41631b:	nop    DWORD PTR [rax+rax*1+0x0]
  416320:	push   rbp
  416321:	mov    rbp,rsp
  416324:	sub    rsp,0x10
  416328:	xor    edx,edx
  41632a:	mov    QWORD PTR [rbp-0x8],rdi
  41632e:	mov    rdi,QWORD PTR [rbp-0x8]
  416332:	lea    rsi,[rip+0xbe05]        # 42213e <_IO_stdin_used@@Base+0x13e>
  416339:	call   41c100 <flatcc_builder_check_required@@Base>
  41633e:	cmp    eax,0x0
  416341:	je     41634c <main@@Base+0x261c>
  416347:	jmp    41636b <main@@Base+0x263b>
  41634c:	lea    rdi,[rip+0xef06]        # 425259 <_IO_stdin_used@@Base+0x3259>
  416353:	lea    rsi,[rip+0xe9bb]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  41635a:	mov    edx,0xd7
  41635f:	lea    rcx,[rip+0xefb0]        # 425316 <_IO_stdin_used@@Base+0x3316>
  416366:	call   404090 <__assert_fail@plt>
  41636b:	mov    rdi,QWORD PTR [rbp-0x8]
  41636f:	call   41c1d0 <flatcc_builder_end_table@@Base>
  416374:	add    rsp,0x10
  416378:	pop    rbp
  416379:	ret    
  41637a:	nop    WORD PTR [rax+rax*1+0x0]
  416380:	push   rbp
  416381:	mov    rbp,rsp
  416384:	sub    rsp,0x10
  416388:	xor    esi,esi
  41638a:	xor    eax,eax
  41638c:	mov    edx,eax
  41638e:	mov    QWORD PTR [rbp-0x8],rdi
  416392:	mov    rdi,QWORD PTR [rbp-0x8]
  416396:	mov    ecx,0x1
  41639b:	call   41ce20 <flatcc_builder_table_add@@Base>
  4163a0:	add    rsp,0x10
  4163a4:	pop    rbp
  4163a5:	ret    
  4163a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4163b0:	push   rbp
  4163b1:	mov    rbp,rsp
  4163b4:	mov    QWORD PTR [rbp-0x8],rdi
  4163b8:	mov    QWORD PTR [rbp-0x10],rsi
  4163bc:	mov    rax,QWORD PTR [rbp-0x8]
  4163c0:	pop    rbp
  4163c1:	ret    
  4163c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4163cc:	nop    DWORD PTR [rax+0x0]
  4163d0:	push   rbp
  4163d1:	mov    rbp,rsp
  4163d4:	sub    rsp,0x20
  4163d8:	xor    esi,esi
  4163da:	xor    eax,eax
  4163dc:	mov    edx,eax
  4163de:	mov    QWORD PTR [rbp-0x10],rdi
  4163e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4163e6:	mov    ecx,0x1
  4163eb:	call   41f640 <flatcc_verify_field@@Base>
  4163f0:	mov    DWORD PTR [rbp-0x14],eax
  4163f3:	cmp    eax,0x0
  4163f6:	je     416407 <main@@Base+0x26d7>
  4163fc:	mov    eax,DWORD PTR [rbp-0x14]
  4163ff:	mov    DWORD PTR [rbp-0x4],eax
  416402:	jmp    41640e <main@@Base+0x26de>
  416407:	mov    DWORD PTR [rbp-0x4],0x0
  41640e:	mov    eax,DWORD PTR [rbp-0x4]
  416411:	add    rsp,0x20
  416415:	pop    rbp
  416416:	ret    
  416417:	nop    WORD PTR [rax+rax*1+0x0]
  416420:	push   rbp
  416421:	mov    rbp,rsp
  416424:	mov    DWORD PTR [rbp-0x4],edi
  416427:	mov    eax,DWORD PTR [rbp-0x4]
  41642a:	pop    rbp
  41642b:	ret    
  41642c:	nop    DWORD PTR [rax+0x0]
  416430:	push   rbp
  416431:	mov    rbp,rsp
  416434:	mov    eax,0x20
  416439:	pop    rbp
  41643a:	ret    
  41643b:	nop    DWORD PTR [rax+rax*1+0x0]
  416440:	push   rbp
  416441:	mov    rbp,rsp
  416444:	sub    rsp,0x10
  416448:	mov    QWORD PTR [rbp-0x8],rdi
  41644c:	mov    QWORD PTR [rbp-0x10],rsi
  416450:	mov    rax,QWORD PTR [rbp-0x10]
  416454:	vmovss xmm0,DWORD PTR [rax]
  416458:	call   415150 <main@@Base+0x1420>
  41645d:	mov    rax,QWORD PTR [rbp-0x8]
  416461:	vmovss DWORD PTR [rax],xmm0
  416465:	mov    rax,QWORD PTR [rbp-0x8]
  416469:	add    rsp,0x10
  41646d:	pop    rbp
  41646e:	ret    
  41646f:	nop
  416470:	push   rbp
  416471:	mov    rbp,rsp
  416474:	sub    rsp,0x10
  416478:	mov    QWORD PTR [rbp-0x8],rdi
  41647c:	mov    QWORD PTR [rbp-0x10],rsi
  416480:	mov    rax,QWORD PTR [rbp-0x10]
  416484:	vmovsd xmm0,QWORD PTR [rax]
  416488:	call   415190 <main@@Base+0x1460>
  41648d:	mov    rax,QWORD PTR [rbp-0x8]
  416491:	vmovsd QWORD PTR [rax],xmm0
  416495:	mov    rax,QWORD PTR [rbp-0x8]
  416499:	add    rsp,0x10
  41649d:	pop    rbp
  41649e:	ret    
  41649f:	nop
  4164a0:	push   rbp
  4164a1:	mov    rbp,rsp
  4164a4:	sub    rsp,0x20
  4164a8:	mov    QWORD PTR [rbp-0x8],rdi
  4164ac:	mov    QWORD PTR [rbp-0x10],rsi
  4164b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4164b4:	mov    rsi,QWORD PTR [rbp-0x10]
  4164b8:	call   4164e0 <main@@Base+0x27b0>
  4164bd:	mov    rcx,QWORD PTR [rbp-0x10]
  4164c1:	mov    dl,BYTE PTR [rcx+0x2]
  4164c4:	mov    rcx,QWORD PTR [rbp-0x8]
  4164c8:	mov    BYTE PTR [rcx+0x2],dl
  4164cb:	mov    rcx,QWORD PTR [rbp-0x8]
  4164cf:	mov    QWORD PTR [rbp-0x18],rax
  4164d3:	mov    rax,rcx
  4164d6:	add    rsp,0x20
  4164da:	pop    rbp
  4164db:	ret    
  4164dc:	nop    DWORD PTR [rax+0x0]
  4164e0:	push   rbp
  4164e1:	mov    rbp,rsp
  4164e4:	sub    rsp,0x10
  4164e8:	mov    QWORD PTR [rbp-0x8],rdi
  4164ec:	mov    QWORD PTR [rbp-0x10],rsi
  4164f0:	mov    rax,QWORD PTR [rbp-0x10]
  4164f4:	movsx  edi,WORD PTR [rax]
  4164f7:	call   4142a0 <main@@Base+0x570>
  4164fc:	mov    rcx,QWORD PTR [rbp-0x8]
  416500:	mov    WORD PTR [rcx],ax
  416503:	mov    rax,QWORD PTR [rbp-0x8]
  416507:	add    rsp,0x10
  41650b:	pop    rbp
  41650c:	ret    
  41650d:	nop    DWORD PTR [rax]
  416510:	push   rbp
  416511:	mov    rbp,rsp
  416514:	sub    rsp,0x10
  416518:	mov    QWORD PTR [rbp-0x8],rdi
  41651c:	mov    rax,QWORD PTR [rbp-0x8]
  416520:	movsx  edi,BYTE PTR [rax]
  416523:	call   416540 <main@@Base+0x2810>
  416528:	movsx  eax,al
  41652b:	add    rsp,0x10
  41652f:	pop    rbp
  416530:	ret    
  416531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41653b:	nop    DWORD PTR [rax+rax*1+0x0]
  416540:	push   rbp
  416541:	mov    rbp,rsp
  416544:	mov    BYTE PTR [rbp-0x1],dil
  416548:	movsx  eax,BYTE PTR [rbp-0x1]
  41654c:	pop    rbp
  41654d:	ret    
  41654e:	xchg   ax,ax
  416550:	push   rbp
  416551:	mov    rbp,rsp
  416554:	sub    rsp,0x10
  416558:	mov    QWORD PTR [rbp-0x8],rdi
  41655c:	cmp    QWORD PTR [rbp-0x8],0x0
  416561:	je     416586 <main@@Base+0x2856>
  416567:	mov    rax,QWORD PTR [rbp-0x8]
  41656b:	add    rax,0xfffffffffffffffc
  416571:	mov    rdi,rax
  416574:	call   4141e0 <main@@Base+0x4b0>
  416579:	mov    eax,eax
  41657b:	mov    ecx,eax
  41657d:	mov    QWORD PTR [rbp-0x10],rcx
  416581:	jmp    416593 <main@@Base+0x2863>
  416586:	xor    eax,eax
  416588:	mov    ecx,eax
  41658a:	mov    QWORD PTR [rbp-0x10],rcx
  41658e:	jmp    416593 <main@@Base+0x2863>
  416593:	mov    rax,QWORD PTR [rbp-0x10]
  416597:	add    rsp,0x10
  41659b:	pop    rbp
  41659c:	ret    
  41659d:	nop    DWORD PTR [rax]
  4165a0:	push   rbp
  4165a1:	mov    rbp,rsp
  4165a4:	sub    rsp,0x10
  4165a8:	mov    QWORD PTR [rbp-0x8],rdi
  4165ac:	mov    rax,QWORD PTR [rbp-0x8]
  4165b0:	movzx  edi,BYTE PTR [rax]
  4165b3:	call   4165d0 <main@@Base+0x28a0>
  4165b8:	movzx  eax,al
  4165bb:	add    rsp,0x10
  4165bf:	pop    rbp
  4165c0:	ret    
  4165c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4165cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4165d0:	push   rbp
  4165d1:	mov    rbp,rsp
  4165d4:	mov    BYTE PTR [rbp-0x1],dil
  4165d8:	movzx  eax,BYTE PTR [rbp-0x1]
  4165dc:	pop    rbp
  4165dd:	ret    
  4165de:	xchg   ax,ax
  4165e0:	push   rbp
  4165e1:	mov    rbp,rsp
  4165e4:	sub    rsp,0x10
  4165e8:	mov    QWORD PTR [rbp-0x8],rdi
  4165ec:	mov    rax,QWORD PTR [rbp-0x8]
  4165f0:	movzx  edi,BYTE PTR [rax]
  4165f3:	call   416610 <main@@Base+0x28e0>
  4165f8:	movzx  eax,al
  4165fb:	add    rsp,0x10
  4165ff:	pop    rbp
  416600:	ret    
  416601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41660b:	nop    DWORD PTR [rax+rax*1+0x0]
  416610:	push   rbp
  416611:	mov    rbp,rsp
  416614:	mov    BYTE PTR [rbp-0x1],dil
  416618:	movzx  eax,BYTE PTR [rbp-0x1]
  41661c:	pop    rbp
  41661d:	ret    
  41661e:	xchg   ax,ax
  416620:	push   rbp
  416621:	mov    rbp,rsp
  416624:	sub    rsp,0x10
  416628:	xor    edx,edx
  41662a:	mov    QWORD PTR [rbp-0x8],rdi
  41662e:	mov    QWORD PTR [rbp-0x10],rsi
  416632:	mov    rdi,QWORD PTR [rbp-0x8]
  416636:	mov    rsi,QWORD PTR [rbp-0x10]
  41663a:	mov    ecx,0x2
  41663f:	call   419f10 <flatcc_builder_start_buffer@@Base>
  416644:	add    rsp,0x10
  416648:	pop    rbp
  416649:	ret    
  41664a:	nop    WORD PTR [rax+rax*1+0x0]
  416650:	push   rbp
  416651:	mov    rbp,rsp
  416654:	sub    rsp,0x10
  416658:	mov    QWORD PTR [rbp-0x8],rdi
  41665c:	mov    BYTE PTR [rbp-0x9],sil
  416660:	movsx  edi,BYTE PTR [rbp-0x9]
  416664:	call   416680 <main@@Base+0x2950>
  416669:	mov    rcx,QWORD PTR [rbp-0x8]
  41666d:	mov    BYTE PTR [rcx],al
  41666f:	mov    rax,QWORD PTR [rbp-0x8]
  416673:	add    rsp,0x10
  416677:	pop    rbp
  416678:	ret    
  416679:	nop    DWORD PTR [rax+0x0]
  416680:	push   rbp
  416681:	mov    rbp,rsp
  416684:	mov    BYTE PTR [rbp-0x1],dil
  416688:	movsx  eax,BYTE PTR [rbp-0x1]
  41668c:	pop    rbp
  41668d:	ret    
  41668e:	xchg   ax,ax
  416690:	push   rbp
  416691:	mov    rbp,rsp
  416694:	sub    rsp,0x20
  416698:	mov    QWORD PTR [rbp-0x8],rdi
  41669c:	mov    DWORD PTR [rbp-0xc],esi
  41669f:	cmp    DWORD PTR [rbp-0xc],0x0
  4166a3:	je     4166d8 <main@@Base+0x29a8>
  4166a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4166ad:	mov    esi,0x5
  4166b2:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  4166b7:	mov    QWORD PTR [rbp-0x18],rax
  4166bb:	cmp    rax,0x0
  4166bf:	je     4166d8 <main@@Base+0x29a8>
  4166c5:	xor    eax,eax
  4166c7:	mov    ecx,DWORD PTR [rbp-0xc]
  4166ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4166ce:	mov    DWORD PTR [rdx],ecx
  4166d0:	mov    DWORD PTR [rbp-0x1c],eax
  4166d3:	jmp    4166e5 <main@@Base+0x29b5>
  4166d8:	mov    eax,0xffffffff
  4166dd:	mov    DWORD PTR [rbp-0x1c],eax
  4166e0:	jmp    4166e5 <main@@Base+0x29b5>
  4166e5:	mov    eax,DWORD PTR [rbp-0x1c]
  4166e8:	add    rsp,0x20
  4166ec:	pop    rbp
  4166ed:	ret    
  4166ee:	xchg   ax,ax
  4166f0:	push   rbp
  4166f1:	mov    rbp,rsp
  4166f4:	sub    rsp,0x10
  4166f8:	mov    QWORD PTR [rbp-0x8],rdi
  4166fc:	mov    rdi,QWORD PTR [rbp-0x8]
  416700:	mov    esi,0x4
  416705:	mov    edx,0x2
  41670a:	mov    ecx,0x3fffffff
  41670f:	call   41b0f0 <flatcc_builder_start_vector@@Base>
  416714:	add    rsp,0x10
  416718:	pop    rbp
  416719:	ret    
  41671a:	nop    WORD PTR [rax+rax*1+0x0]
  416720:	push   rbp
  416721:	mov    rbp,rsp
  416724:	mov    QWORD PTR [rbp-0x8],rdi
  416728:	mov    WORD PTR [rbp-0xa],si
  41672c:	mov    BYTE PTR [rbp-0xb],dl
  41672f:	mov    ax,WORD PTR [rbp-0xa]
  416733:	mov    rcx,QWORD PTR [rbp-0x8]
  416737:	mov    WORD PTR [rcx],ax
  41673a:	mov    dl,BYTE PTR [rbp-0xb]
  41673d:	mov    rcx,QWORD PTR [rbp-0x8]
  416741:	mov    BYTE PTR [rcx+0x2],dl
  416744:	mov    rax,QWORD PTR [rbp-0x8]
  416748:	pop    rbp
  416749:	ret    
  41674a:	nop    WORD PTR [rax+rax*1+0x0]
  416750:	push   rbp
  416751:	mov    rbp,rsp
  416754:	mov    eax,0x4
  416759:	pop    rbp
  41675a:	ret    
  41675b:	nop    DWORD PTR [rax+rax*1+0x0]
  416760:	push   rbp
  416761:	mov    rbp,rsp
  416764:	sub    rsp,0x20
  416768:	mov    QWORD PTR [rbp-0x8],rdi
  41676c:	mov    DWORD PTR [rbp-0xc],esi
  41676f:	cmp    DWORD PTR [rbp-0xc],0x0
  416773:	je     4167a8 <main@@Base+0x2a78>
  416779:	mov    rdi,QWORD PTR [rbp-0x8]
  41677d:	mov    esi,0x9
  416782:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  416787:	mov    QWORD PTR [rbp-0x18],rax
  41678b:	cmp    rax,0x0
  41678f:	je     4167a8 <main@@Base+0x2a78>
  416795:	xor    eax,eax
  416797:	mov    ecx,DWORD PTR [rbp-0xc]
  41679a:	mov    rdx,QWORD PTR [rbp-0x18]
  41679e:	mov    DWORD PTR [rdx],ecx
  4167a0:	mov    DWORD PTR [rbp-0x1c],eax
  4167a3:	jmp    4167b5 <main@@Base+0x2a85>
  4167a8:	mov    eax,0xffffffff
  4167ad:	mov    DWORD PTR [rbp-0x1c],eax
  4167b0:	jmp    4167b5 <main@@Base+0x2a85>
  4167b5:	mov    eax,DWORD PTR [rbp-0x1c]
  4167b8:	add    rsp,0x20
  4167bc:	pop    rbp
  4167bd:	ret    
  4167be:	xchg   ax,ax
  4167c0:	push   rbp
  4167c1:	mov    rbp,rsp
  4167c4:	sub    rsp,0x10
  4167c8:	mov    QWORD PTR [rbp-0x8],rdi
  4167cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4167d0:	call   41c630 <flatcc_builder_end_vector@@Base>
  4167d5:	add    rsp,0x10
  4167d9:	pop    rbp
  4167da:	ret    
  4167db:	nop    DWORD PTR [rax+rax*1+0x0]
  4167e0:	push   rbp
  4167e1:	mov    rbp,rsp
  4167e4:	sub    rsp,0x20
  4167e8:	mov    QWORD PTR [rbp-0x8],rdi
  4167ec:	mov    DWORD PTR [rbp-0xc],esi
  4167ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4167f3:	je     41680e <main@@Base+0x2ade>
  4167f9:	mov    rdi,QWORD PTR [rbp-0x8]
  4167fd:	mov    esi,DWORD PTR [rbp-0xc]
  416800:	call   41aa20 <flatcc_builder_offset_vector_push@@Base>
  416805:	mov    QWORD PTR [rbp-0x18],rax
  416809:	jmp    41681b <main@@Base+0x2aeb>
  41680e:	xor    eax,eax
  416810:	mov    ecx,eax
  416812:	mov    QWORD PTR [rbp-0x18],rcx
  416816:	jmp    41681b <main@@Base+0x2aeb>
  41681b:	mov    rax,QWORD PTR [rbp-0x18]
  41681f:	add    rsp,0x20
  416823:	pop    rbp
  416824:	ret    
  416825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41682f:	nop
  416830:	push   rbp
  416831:	mov    rbp,rsp
  416834:	sub    rsp,0x20
  416838:	mov    QWORD PTR [rbp-0x8],rdi
  41683c:	mov    DWORD PTR [rbp-0xc],esi
  41683f:	cmp    DWORD PTR [rbp-0xc],0x0
  416843:	je     416878 <main@@Base+0x2b48>
  416849:	mov    rdi,QWORD PTR [rbp-0x8]
  41684d:	mov    esi,0xb
  416852:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  416857:	mov    QWORD PTR [rbp-0x18],rax
  41685b:	cmp    rax,0x0
  41685f:	je     416878 <main@@Base+0x2b48>
  416865:	xor    eax,eax
  416867:	mov    ecx,DWORD PTR [rbp-0xc]
  41686a:	mov    rdx,QWORD PTR [rbp-0x18]
  41686e:	mov    DWORD PTR [rdx],ecx
  416870:	mov    DWORD PTR [rbp-0x1c],eax
  416873:	jmp    416885 <main@@Base+0x2b55>
  416878:	mov    eax,0xffffffff
  41687d:	mov    DWORD PTR [rbp-0x1c],eax
  416880:	jmp    416885 <main@@Base+0x2b55>
  416885:	mov    eax,DWORD PTR [rbp-0x1c]
  416888:	add    rsp,0x20
  41688c:	pop    rbp
  41688d:	ret    
  41688e:	xchg   ax,ax
  416890:	push   rbp
  416891:	mov    rbp,rsp
  416894:	sub    rsp,0x20
  416898:	mov    QWORD PTR [rbp-0x8],rdi
  41689c:	mov    DWORD PTR [rbp-0xc],esi
  41689f:	cmp    DWORD PTR [rbp-0xc],0x0
  4168a3:	je     4168d8 <main@@Base+0x2ba8>
  4168a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4168ad:	mov    esi,0xa
  4168b2:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  4168b7:	mov    QWORD PTR [rbp-0x18],rax
  4168bb:	cmp    rax,0x0
  4168bf:	je     4168d8 <main@@Base+0x2ba8>
  4168c5:	xor    eax,eax
  4168c7:	mov    ecx,DWORD PTR [rbp-0xc]
  4168ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4168ce:	mov    DWORD PTR [rdx],ecx
  4168d0:	mov    DWORD PTR [rbp-0x1c],eax
  4168d3:	jmp    4168e5 <main@@Base+0x2bb5>
  4168d8:	mov    eax,0xffffffff
  4168dd:	mov    DWORD PTR [rbp-0x1c],eax
  4168e0:	jmp    4168e5 <main@@Base+0x2bb5>
  4168e5:	mov    eax,DWORD PTR [rbp-0x1c]
  4168e8:	add    rsp,0x20
  4168ec:	pop    rbp
  4168ed:	ret    
  4168ee:	xchg   ax,ax
  4168f0:	push   rbp
  4168f1:	mov    rbp,rsp
  4168f4:	sub    rsp,0x10
  4168f8:	mov    QWORD PTR [rbp-0x8],rdi
  4168fc:	mov    rdi,QWORD PTR [rbp-0x8]
  416900:	mov    esi,0x1
  416905:	mov    edx,0x1
  41690a:	mov    ecx,0xffffffff
  41690f:	call   41b0f0 <flatcc_builder_start_vector@@Base>
  416914:	add    rsp,0x10
  416918:	pop    rbp
  416919:	ret    
  41691a:	nop    WORD PTR [rax+rax*1+0x0]
  416920:	push   rbp
  416921:	mov    rbp,rsp
  416924:	sub    rsp,0x20
  416928:	mov    QWORD PTR [rbp-0x8],rdi
  41692c:	mov    DWORD PTR [rbp-0xc],esi
  41692f:	cmp    DWORD PTR [rbp-0xc],0x0
  416933:	je     416968 <main@@Base+0x2c38>
  416939:	mov    rdi,QWORD PTR [rbp-0x8]
  41693d:	mov    esi,0x18
  416942:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  416947:	mov    QWORD PTR [rbp-0x18],rax
  41694b:	cmp    rax,0x0
  41694f:	je     416968 <main@@Base+0x2c38>
  416955:	xor    eax,eax
  416957:	mov    ecx,DWORD PTR [rbp-0xc]
  41695a:	mov    rdx,QWORD PTR [rbp-0x18]
  41695e:	mov    DWORD PTR [rdx],ecx
  416960:	mov    DWORD PTR [rbp-0x1c],eax
  416963:	jmp    416975 <main@@Base+0x2c45>
  416968:	mov    eax,0xffffffff
  41696d:	mov    DWORD PTR [rbp-0x1c],eax
  416970:	jmp    416975 <main@@Base+0x2c45>
  416975:	mov    eax,DWORD PTR [rbp-0x1c]
  416978:	add    rsp,0x20
  41697c:	pop    rbp
  41697d:	ret    
  41697e:	xchg   ax,ax
  416980:	push   rbp
  416981:	mov    rbp,rsp
  416984:	sub    rsp,0x10
  416988:	mov    QWORD PTR [rbp-0x8],rdi
  41698c:	mov    rdi,QWORD PTR [rbp-0x8]
  416990:	call   41c630 <flatcc_builder_end_vector@@Base>
  416995:	add    rsp,0x10
  416999:	pop    rbp
  41699a:	ret    
  41699b:	nop    DWORD PTR [rax+rax*1+0x0]
  4169a0:	push   rbp
  4169a1:	mov    rbp,rsp
  4169a4:	sub    rsp,0x20
  4169a8:	mov    QWORD PTR [rbp-0x8],rdi
  4169ac:	mov    DWORD PTR [rbp-0xc],esi
  4169af:	cmp    DWORD PTR [rbp-0xc],0x0
  4169b3:	je     4169ce <main@@Base+0x2c9e>
  4169b9:	mov    rdi,QWORD PTR [rbp-0x8]
  4169bd:	mov    esi,DWORD PTR [rbp-0xc]
  4169c0:	call   41aa20 <flatcc_builder_offset_vector_push@@Base>
  4169c5:	mov    QWORD PTR [rbp-0x18],rax
  4169c9:	jmp    4169db <main@@Base+0x2cab>
  4169ce:	xor    eax,eax
  4169d0:	mov    ecx,eax
  4169d2:	mov    QWORD PTR [rbp-0x18],rcx
  4169d6:	jmp    4169db <main@@Base+0x2cab>
  4169db:	mov    rax,QWORD PTR [rbp-0x18]
  4169df:	add    rsp,0x20
  4169e3:	pop    rbp
  4169e4:	ret    
  4169e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169ef:	nop
  4169f0:	push   rbp
  4169f1:	mov    rbp,rsp
  4169f4:	sub    rsp,0x10
  4169f8:	mov    QWORD PTR [rbp-0x8],rdi
  4169fc:	mov    BYTE PTR [rbp-0x9],sil
  416a00:	movzx  edi,BYTE PTR [rbp-0x9]
  416a04:	call   416a20 <main@@Base+0x2cf0>
  416a09:	mov    rcx,QWORD PTR [rbp-0x8]
  416a0d:	mov    BYTE PTR [rcx],al
  416a0f:	mov    rax,QWORD PTR [rbp-0x8]
  416a13:	add    rsp,0x10
  416a17:	pop    rbp
  416a18:	ret    
  416a19:	nop    DWORD PTR [rax+0x0]
  416a20:	push   rbp
  416a21:	mov    rbp,rsp
  416a24:	mov    BYTE PTR [rbp-0x1],dil
  416a28:	movzx  eax,BYTE PTR [rbp-0x1]
  416a2c:	pop    rbp
  416a2d:	ret    
  416a2e:	xchg   ax,ax
  416a30:	push   rbp
  416a31:	mov    rbp,rsp
  416a34:	sub    rsp,0x10
  416a38:	mov    QWORD PTR [rbp-0x8],rdi
  416a3c:	mov    rdi,QWORD PTR [rbp-0x8]
  416a40:	mov    esi,0x3
  416a45:	call   41b550 <flatcc_builder_start_table@@Base>
  416a4a:	add    rsp,0x10
  416a4e:	pop    rbp
  416a4f:	ret    
  416a50:	push   rbp
  416a51:	mov    rbp,rsp
  416a54:	sub    rsp,0x20
  416a58:	mov    QWORD PTR [rbp-0x8],rdi
  416a5c:	mov    DWORD PTR [rbp-0xc],esi
  416a5f:	cmp    DWORD PTR [rbp-0xc],0x0
  416a63:	je     416a98 <main@@Base+0x2d68>
  416a69:	mov    rdi,QWORD PTR [rbp-0x8]
  416a6d:	mov    esi,0xe
  416a72:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  416a77:	mov    QWORD PTR [rbp-0x18],rax
  416a7b:	cmp    rax,0x0
  416a7f:	je     416a98 <main@@Base+0x2d68>
  416a85:	xor    eax,eax
  416a87:	mov    ecx,DWORD PTR [rbp-0xc]
  416a8a:	mov    rdx,QWORD PTR [rbp-0x18]
  416a8e:	mov    DWORD PTR [rdx],ecx
  416a90:	mov    DWORD PTR [rbp-0x1c],eax
  416a93:	jmp    416aa5 <main@@Base+0x2d75>
  416a98:	mov    eax,0xffffffff
  416a9d:	mov    DWORD PTR [rbp-0x1c],eax
  416aa0:	jmp    416aa5 <main@@Base+0x2d75>
  416aa5:	mov    eax,DWORD PTR [rbp-0x1c]
  416aa8:	add    rsp,0x20
  416aac:	pop    rbp
  416aad:	ret    
  416aae:	xchg   ax,ax
  416ab0:	push   rbp
  416ab1:	mov    rbp,rsp
  416ab4:	sub    rsp,0x10
  416ab8:	xor    edx,edx
  416aba:	mov    QWORD PTR [rbp-0x8],rdi
  416abe:	mov    rdi,QWORD PTR [rbp-0x8]
  416ac2:	lea    rsi,[rip+0xb677]        # 422140 <_IO_stdin_used@@Base+0x140>
  416ac9:	call   41c100 <flatcc_builder_check_required@@Base>
  416ace:	cmp    eax,0x0
  416ad1:	je     416adc <main@@Base+0x2dac>
  416ad7:	jmp    416afb <main@@Base+0x2dcb>
  416adc:	lea    rdi,[rip+0xf16c]        # 425c4f <_IO_stdin_used@@Base+0x3c4f>
  416ae3:	lea    rsi,[rip+0xe22b]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  416aea:	mov    edx,0xdd
  416aef:	lea    rcx,[rip+0xf1f2]        # 425ce8 <_IO_stdin_used@@Base+0x3ce8>
  416af6:	call   404090 <__assert_fail@plt>
  416afb:	mov    rdi,QWORD PTR [rbp-0x8]
  416aff:	call   41c1d0 <flatcc_builder_end_table@@Base>
  416b04:	add    rsp,0x10
  416b08:	pop    rbp
  416b09:	ret    
  416b0a:	nop    WORD PTR [rax+rax*1+0x0]
  416b10:	push   rbp
  416b11:	mov    rbp,rsp
  416b14:	sub    rsp,0x30
  416b18:	mov    QWORD PTR [rbp-0x8],rdi
  416b1c:	mov    rdi,QWORD PTR [rbp-0x8]
  416b20:	call   4089d0 <verify_monster@@Base+0x1e80>
  416b25:	mov    QWORD PTR [rbp-0x20],rax
  416b29:	cmp    QWORD PTR [rbp-0x20],0x0
  416b2e:	jne    416b39 <main@@Base+0x2e09>
  416b34:	jmp    416c18 <main@@Base+0x2ee8>
  416b39:	mov    rax,QWORD PTR [rbp-0x20]
  416b3d:	sub    rax,0x1
  416b43:	mov    QWORD PTR [rbp-0x18],rax
  416b47:	mov    rax,QWORD PTR [rbp-0x20]
  416b4b:	shr    rax,0x1
  416b4f:	mov    QWORD PTR [rbp-0x10],rax
  416b53:	mov    rdi,QWORD PTR [rbp-0x8]
  416b57:	mov    rsi,QWORD PTR [rbp-0x10]
  416b5b:	mov    rdx,QWORD PTR [rbp-0x18]
  416b5f:	call   416c20 <main@@Base+0x2ef0>
  416b64:	mov    rax,QWORD PTR [rbp-0x10]
  416b68:	mov    rcx,rax
  416b6b:	add    rcx,0xffffffffffffffff
  416b72:	mov    QWORD PTR [rbp-0x10],rcx
  416b76:	cmp    rax,0x0
  416b7a:	jne    416b53 <main@@Base+0x2e23>
  416b80:	jmp    416b85 <main@@Base+0x2e55>
  416b85:	cmp    QWORD PTR [rbp-0x18],0x0
  416b8a:	jbe    416c18 <main@@Base+0x2ee8>
  416b90:	xor    eax,eax
  416b92:	mov    ecx,eax
  416b94:	sub    rcx,QWORD PTR [rbp-0x18]
  416b98:	shl    rcx,0x2
  416b9c:	mov    DWORD PTR [rbp-0x2c],ecx
  416b9f:	mov    rdx,QWORD PTR [rbp-0x8]
  416ba3:	mov    rsi,QWORD PTR [rbp-0x18]
  416ba7:	shl    rsi,0x2
  416bab:	add    rdx,rsi
  416bae:	mov    rdi,rdx
  416bb1:	call   4141e0 <main@@Base+0x4b0>
  416bb6:	sub    eax,DWORD PTR [rbp-0x2c]
  416bb9:	mov    DWORD PTR [rbp-0x24],eax
  416bbc:	mov    rdx,QWORD PTR [rbp-0x8]
  416bc0:	mov    rdi,rdx
  416bc3:	call   4141e0 <main@@Base+0x4b0>
  416bc8:	add    eax,DWORD PTR [rbp-0x2c]
  416bcb:	mov    DWORD PTR [rbp-0x28],eax
  416bce:	mov    rdx,QWORD PTR [rbp-0x8]
  416bd2:	mov    esi,DWORD PTR [rbp-0x24]
  416bd5:	mov    rdi,rdx
  416bd8:	call   416df0 <main@@Base+0x30c0>
  416bdd:	mov    rdx,QWORD PTR [rbp-0x8]
  416be1:	mov    rdi,QWORD PTR [rbp-0x18]
  416be5:	shl    rdi,0x2
  416be9:	add    rdx,rdi
  416bec:	mov    esi,DWORD PTR [rbp-0x28]
  416bef:	mov    rdi,rdx
  416bf2:	call   416df0 <main@@Base+0x30c0>
  416bf7:	xor    eax,eax
  416bf9:	mov    esi,eax
  416bfb:	mov    rdi,QWORD PTR [rbp-0x8]
  416bff:	mov    rdx,QWORD PTR [rbp-0x18]
  416c03:	add    rdx,0xffffffffffffffff
  416c0a:	mov    QWORD PTR [rbp-0x18],rdx
  416c0e:	call   416c20 <main@@Base+0x2ef0>
  416c13:	jmp    416b85 <main@@Base+0x2e55>
  416c18:	add    rsp,0x30
  416c1c:	pop    rbp
  416c1d:	ret    
  416c1e:	xchg   ax,ax
  416c20:	push   rbp
  416c21:	mov    rbp,rsp
  416c24:	sub    rsp,0x70
  416c28:	mov    QWORD PTR [rbp-0x8],rdi
  416c2c:	mov    QWORD PTR [rbp-0x10],rsi
  416c30:	mov    QWORD PTR [rbp-0x18],rdx
  416c34:	mov    rax,QWORD PTR [rbp-0x10]
  416c38:	mov    QWORD PTR [rbp-0x28],rax
  416c3c:	mov    rax,QWORD PTR [rbp-0x28]
  416c40:	shl    rax,0x1
  416c44:	cmp    rax,QWORD PTR [rbp-0x18]
  416c48:	ja     416de6 <main@@Base+0x30b6>
  416c4e:	mov    rax,QWORD PTR [rbp-0x28]
  416c52:	shl    rax,0x1
  416c56:	mov    QWORD PTR [rbp-0x20],rax
  416c5a:	mov    rax,QWORD PTR [rbp-0x20]
  416c5e:	cmp    rax,QWORD PTR [rbp-0x18]
  416c62:	jae    416ceb <main@@Base+0x2fbb>
  416c68:	mov    rdi,QWORD PTR [rbp-0x8]
  416c6c:	mov    rsi,QWORD PTR [rbp-0x20]
  416c70:	call   408a20 <verify_monster@@Base+0x1ed0>
  416c75:	mov    rdi,rax
  416c78:	call   407e10 <verify_monster@@Base+0x12c0>
  416c7d:	mov    QWORD PTR [rbp-0x30],rax
  416c81:	mov    rdi,QWORD PTR [rbp-0x8]
  416c85:	mov    rax,QWORD PTR [rbp-0x20]
  416c89:	add    rax,0x1
  416c8f:	mov    rsi,rax
  416c92:	call   408a20 <verify_monster@@Base+0x1ed0>
  416c97:	mov    rdi,rax
  416c9a:	call   407e10 <verify_monster@@Base+0x12c0>
  416c9f:	mov    QWORD PTR [rbp-0x38],rax
  416ca3:	mov    rdi,QWORD PTR [rbp-0x30]
  416ca7:	mov    rsi,QWORD PTR [rbp-0x38]
  416cab:	mov    rax,QWORD PTR [rbp-0x38]
  416caf:	mov    QWORD PTR [rbp-0x58],rdi
  416cb3:	mov    rdi,rax
  416cb6:	mov    QWORD PTR [rbp-0x60],rsi
  416cba:	call   407f50 <verify_monster@@Base+0x1400>
  416cbf:	mov    rdi,QWORD PTR [rbp-0x58]
  416cc3:	mov    rsi,QWORD PTR [rbp-0x60]
  416cc7:	mov    rdx,rax
  416cca:	call   416e20 <main@@Base+0x30f0>
  416ccf:	cmp    eax,0x0
  416cd2:	jge    416ce6 <main@@Base+0x2fb6>
  416cd8:	mov    rax,QWORD PTR [rbp-0x20]
  416cdc:	add    rax,0x1
  416ce2:	mov    QWORD PTR [rbp-0x20],rax
  416ce6:	jmp    416ceb <main@@Base+0x2fbb>
  416ceb:	mov    rdi,QWORD PTR [rbp-0x8]
  416cef:	mov    rsi,QWORD PTR [rbp-0x28]
  416cf3:	call   408a20 <verify_monster@@Base+0x1ed0>
  416cf8:	mov    rdi,rax
  416cfb:	call   407e10 <verify_monster@@Base+0x12c0>
  416d00:	mov    QWORD PTR [rbp-0x40],rax
  416d04:	mov    rdi,QWORD PTR [rbp-0x8]
  416d08:	mov    rsi,QWORD PTR [rbp-0x20]
  416d0c:	call   408a20 <verify_monster@@Base+0x1ed0>
  416d11:	mov    rdi,rax
  416d14:	call   407e10 <verify_monster@@Base+0x12c0>
  416d19:	mov    QWORD PTR [rbp-0x30],rax
  416d1d:	mov    rdi,QWORD PTR [rbp-0x40]
  416d21:	mov    rsi,QWORD PTR [rbp-0x30]
  416d25:	mov    rax,QWORD PTR [rbp-0x30]
  416d29:	mov    QWORD PTR [rbp-0x68],rdi
  416d2d:	mov    rdi,rax
  416d30:	mov    QWORD PTR [rbp-0x70],rsi
  416d34:	call   407f50 <verify_monster@@Base+0x1400>
  416d39:	mov    rdi,QWORD PTR [rbp-0x68]
  416d3d:	mov    rsi,QWORD PTR [rbp-0x70]
  416d41:	mov    rdx,rax
  416d44:	call   416e20 <main@@Base+0x30f0>
  416d49:	cmp    eax,0x0
  416d4c:	jge    416ddc <main@@Base+0x30ac>
  416d52:	mov    rax,QWORD PTR [rbp-0x28]
  416d56:	sub    rax,QWORD PTR [rbp-0x20]
  416d5a:	shl    rax,0x2
  416d5e:	mov    DWORD PTR [rbp-0x4c],eax
  416d61:	mov    rcx,QWORD PTR [rbp-0x8]
  416d65:	mov    rdx,QWORD PTR [rbp-0x20]
  416d69:	shl    rdx,0x2
  416d6d:	add    rcx,rdx
  416d70:	mov    rdi,rcx
  416d73:	call   4141e0 <main@@Base+0x4b0>
  416d78:	sub    eax,DWORD PTR [rbp-0x4c]
  416d7b:	mov    DWORD PTR [rbp-0x44],eax
  416d7e:	mov    rcx,QWORD PTR [rbp-0x8]
  416d82:	mov    rdx,QWORD PTR [rbp-0x28]
  416d86:	shl    rdx,0x2
  416d8a:	add    rcx,rdx
  416d8d:	mov    rdi,rcx
  416d90:	call   4141e0 <main@@Base+0x4b0>
  416d95:	add    eax,DWORD PTR [rbp-0x4c]
  416d98:	mov    DWORD PTR [rbp-0x48],eax
  416d9b:	mov    rcx,QWORD PTR [rbp-0x8]
  416d9f:	mov    rdx,QWORD PTR [rbp-0x28]
  416da3:	shl    rdx,0x2
  416da7:	add    rcx,rdx
  416daa:	mov    esi,DWORD PTR [rbp-0x44]
  416dad:	mov    rdi,rcx
  416db0:	call   416df0 <main@@Base+0x30c0>
  416db5:	mov    rcx,QWORD PTR [rbp-0x8]
  416db9:	mov    rdx,QWORD PTR [rbp-0x20]
  416dbd:	shl    rdx,0x2
  416dc1:	add    rcx,rdx
  416dc4:	mov    esi,DWORD PTR [rbp-0x48]
  416dc7:	mov    rdi,rcx
  416dca:	call   416df0 <main@@Base+0x30c0>
  416dcf:	mov    rcx,QWORD PTR [rbp-0x20]
  416dd3:	mov    QWORD PTR [rbp-0x28],rcx
  416dd7:	jmp    416de1 <main@@Base+0x30b1>
  416ddc:	jmp    416de6 <main@@Base+0x30b6>
  416de1:	jmp    416c3c <main@@Base+0x2f0c>
  416de6:	add    rsp,0x70
  416dea:	pop    rbp
  416deb:	ret    
  416dec:	nop    DWORD PTR [rax+0x0]
  416df0:	push   rbp
  416df1:	mov    rbp,rsp
  416df4:	sub    rsp,0x10
  416df8:	mov    QWORD PTR [rbp-0x8],rdi
  416dfc:	mov    DWORD PTR [rbp-0xc],esi
  416dff:	mov    edi,DWORD PTR [rbp-0xc]
  416e02:	call   416ee0 <main@@Base+0x31b0>
  416e07:	mov    rcx,QWORD PTR [rbp-0x8]
  416e0b:	mov    DWORD PTR [rcx],eax
  416e0d:	add    rsp,0x10
  416e11:	pop    rbp
  416e12:	ret    
  416e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e1d:	nop    DWORD PTR [rax]
  416e20:	push   rbp
  416e21:	mov    rbp,rsp
  416e24:	sub    rsp,0x50
  416e28:	mov    QWORD PTR [rbp-0x8],rdi
  416e2c:	mov    QWORD PTR [rbp-0x10],rsi
  416e30:	mov    QWORD PTR [rbp-0x18],rdx
  416e34:	mov    rdi,QWORD PTR [rbp-0x8]
  416e38:	call   407f50 <verify_monster@@Base+0x1400>
  416e3d:	mov    QWORD PTR [rbp-0x20],rax
  416e41:	mov    rdi,QWORD PTR [rbp-0x8]
  416e45:	mov    rsi,QWORD PTR [rbp-0x10]
  416e49:	mov    rax,QWORD PTR [rbp-0x20]
  416e4d:	cmp    rax,QWORD PTR [rbp-0x18]
  416e51:	mov    QWORD PTR [rbp-0x30],rdi
  416e55:	mov    QWORD PTR [rbp-0x38],rsi
  416e59:	jae    416e6c <main@@Base+0x313c>
  416e5f:	mov    rax,QWORD PTR [rbp-0x20]
  416e63:	mov    QWORD PTR [rbp-0x40],rax
  416e67:	jmp    416e74 <main@@Base+0x3144>
  416e6c:	mov    rax,QWORD PTR [rbp-0x18]
  416e70:	mov    QWORD PTR [rbp-0x40],rax
  416e74:	mov    rax,QWORD PTR [rbp-0x40]
  416e78:	mov    rdi,QWORD PTR [rbp-0x30]
  416e7c:	mov    rsi,QWORD PTR [rbp-0x38]
  416e80:	mov    rdx,rax
  416e83:	call   404050 <strncmp@plt>
  416e88:	mov    DWORD PTR [rbp-0x24],eax
  416e8b:	cmp    DWORD PTR [rbp-0x24],0x0
  416e8f:	je     416ea0 <main@@Base+0x3170>
  416e95:	mov    eax,DWORD PTR [rbp-0x24]
  416e98:	mov    DWORD PTR [rbp-0x44],eax
  416e9b:	jmp    416ed5 <main@@Base+0x31a5>
  416ea0:	mov    rax,QWORD PTR [rbp-0x20]
  416ea4:	cmp    rax,QWORD PTR [rbp-0x18]
  416ea8:	jae    416ebb <main@@Base+0x318b>
  416eae:	mov    eax,0xffffffff
  416eb3:	mov    DWORD PTR [rbp-0x48],eax
  416eb6:	jmp    416ecf <main@@Base+0x319f>
  416ebb:	mov    rax,QWORD PTR [rbp-0x20]
  416ebf:	cmp    rax,QWORD PTR [rbp-0x18]
  416ec3:	seta   cl
  416ec6:	and    cl,0x1
  416ec9:	movzx  edx,cl
  416ecc:	mov    DWORD PTR [rbp-0x48],edx
  416ecf:	mov    eax,DWORD PTR [rbp-0x48]
  416ed2:	mov    DWORD PTR [rbp-0x44],eax
  416ed5:	mov    eax,DWORD PTR [rbp-0x44]
  416ed8:	add    rsp,0x50
  416edc:	pop    rbp
  416edd:	ret    
  416ede:	xchg   ax,ax
  416ee0:	push   rbp
  416ee1:	mov    rbp,rsp
  416ee4:	mov    DWORD PTR [rbp-0x4],edi
  416ee7:	mov    eax,DWORD PTR [rbp-0x4]
  416eea:	pop    rbp
  416eeb:	ret    
  416eec:	nop    DWORD PTR [rax+0x0]
  416ef0:	push   rbp
  416ef1:	mov    rbp,rsp
  416ef4:	sub    rsp,0x20
  416ef8:	mov    QWORD PTR [rbp-0x8],rdi
  416efc:	mov    QWORD PTR [rbp-0x10],rsi
  416f00:	mov    QWORD PTR [rbp-0x18],rdx
  416f04:	mov    rdi,QWORD PTR [rbp-0x8]
  416f08:	mov    rsi,QWORD PTR [rbp-0x10]
  416f0c:	call   4040d0 <strcmp@plt>
  416f11:	add    rsp,0x20
  416f15:	pop    rbp
  416f16:	ret    
  416f17:	nop    WORD PTR [rax+rax*1+0x0]
  416f20:	push   rbp
  416f21:	mov    rbp,rsp
  416f24:	sub    rsp,0x40
  416f28:	mov    QWORD PTR [rbp-0x10],rdi
  416f2c:	mov    QWORD PTR [rbp-0x18],rsi
  416f30:	mov    DWORD PTR [rbp-0x1c],edx
  416f33:	mov    QWORD PTR [rbp-0x30],0x0
  416f3b:	mov    rax,QWORD PTR [rbp-0x30]
  416f3f:	mov    rdi,QWORD PTR [rbp-0x10]
  416f43:	mov    QWORD PTR [rbp-0x38],rax
  416f47:	call   4089d0 <verify_monster@@Base+0x1e80>
  416f4c:	mov    rcx,QWORD PTR [rbp-0x38]
  416f50:	cmp    rcx,rax
  416f53:	jae    416fb1 <main@@Base+0x3281>
  416f59:	mov    rdi,QWORD PTR [rbp-0x10]
  416f5d:	mov    rsi,QWORD PTR [rbp-0x30]
  416f61:	call   408a20 <verify_monster@@Base+0x1ed0>
  416f66:	mov    rdi,rax
  416f69:	call   407e10 <verify_monster@@Base+0x12c0>
  416f6e:	mov    QWORD PTR [rbp-0x28],rax
  416f72:	mov    rdi,QWORD PTR [rbp-0x28]
  416f76:	mov    rsi,QWORD PTR [rbp-0x18]
  416f7a:	movsxd rdx,DWORD PTR [rbp-0x1c]
  416f7e:	call   416e20 <main@@Base+0x30f0>
  416f83:	cmp    eax,0x0
  416f86:	jne    416f99 <main@@Base+0x3269>
  416f8c:	mov    rax,QWORD PTR [rbp-0x30]
  416f90:	mov    QWORD PTR [rbp-0x8],rax
  416f94:	jmp    416fbc <main@@Base+0x328c>
  416f99:	jmp    416f9e <main@@Base+0x326e>
  416f9e:	mov    rax,QWORD PTR [rbp-0x30]
  416fa2:	add    rax,0x1
  416fa8:	mov    QWORD PTR [rbp-0x30],rax
  416fac:	jmp    416f3b <main@@Base+0x320b>
  416fb1:	mov    rax,QWORD PTR [rip+0x1a0f0]        # 4310a8 <__data_start@@Base+0x10>
  416fb8:	mov    QWORD PTR [rbp-0x8],rax
  416fbc:	mov    rax,QWORD PTR [rbp-0x8]
  416fc0:	add    rsp,0x40
  416fc4:	pop    rbp
  416fc5:	ret    
  416fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416fd0:	push   rbp
  416fd1:	mov    rbp,rsp
  416fd4:	sub    rsp,0x30
  416fd8:	mov    QWORD PTR [rbp-0x8],rdi
  416fdc:	mov    rdi,QWORD PTR [rbp-0x8]
  416fe0:	call   408380 <verify_monster@@Base+0x1830>
  416fe5:	mov    QWORD PTR [rbp-0x20],rax
  416fe9:	cmp    QWORD PTR [rbp-0x20],0x0
  416fee:	jne    416ff9 <main@@Base+0x32c9>
  416ff4:	jmp    4170a2 <main@@Base+0x3372>
  416ff9:	mov    rax,QWORD PTR [rbp-0x20]
  416ffd:	sub    rax,0x1
  417003:	mov    QWORD PTR [rbp-0x18],rax
  417007:	mov    rax,QWORD PTR [rbp-0x20]
  41700b:	shr    rax,0x1
  41700f:	mov    QWORD PTR [rbp-0x10],rax
  417013:	mov    rdi,QWORD PTR [rbp-0x8]
  417017:	mov    rsi,QWORD PTR [rbp-0x10]
  41701b:	mov    rdx,QWORD PTR [rbp-0x18]
  41701f:	call   4170b0 <main@@Base+0x3380>
  417024:	mov    rax,QWORD PTR [rbp-0x10]
  417028:	mov    rcx,rax
  41702b:	add    rcx,0xffffffffffffffff
  417032:	mov    QWORD PTR [rbp-0x10],rcx
  417036:	cmp    rax,0x0
  41703a:	jne    417013 <main@@Base+0x32e3>
  417040:	jmp    417045 <main@@Base+0x3315>
  417045:	cmp    QWORD PTR [rbp-0x18],0x0
  41704a:	jbe    4170a2 <main@@Base+0x3372>
  417050:	xor    eax,eax
  417052:	mov    esi,eax
  417054:	mov    rcx,QWORD PTR [rbp-0x8]
  417058:	mov    rdx,QWORD PTR [rbp-0x18]
  41705c:	mov    dil,BYTE PTR [rcx+rdx*1]
  417060:	mov    BYTE PTR [rbp-0x21],dil
  417064:	mov    rcx,QWORD PTR [rbp-0x8]
  417068:	mov    dil,BYTE PTR [rcx]
  41706b:	mov    rcx,QWORD PTR [rbp-0x8]
  41706f:	mov    rdx,QWORD PTR [rbp-0x18]
  417073:	mov    BYTE PTR [rcx+rdx*1],dil
  417077:	mov    dil,BYTE PTR [rbp-0x21]
  41707b:	mov    rcx,QWORD PTR [rbp-0x8]
  41707f:	mov    BYTE PTR [rcx],dil
  417082:	mov    rdi,QWORD PTR [rbp-0x8]
  417086:	mov    rcx,QWORD PTR [rbp-0x18]
  41708a:	add    rcx,0xffffffffffffffff
  417091:	mov    QWORD PTR [rbp-0x18],rcx
  417095:	mov    rdx,rcx
  417098:	call   4170b0 <main@@Base+0x3380>
  41709d:	jmp    417045 <main@@Base+0x3315>
  4170a2:	add    rsp,0x30
  4170a6:	pop    rbp
  4170a7:	ret    
  4170a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4170b0:	push   rbp
  4170b1:	mov    rbp,rsp
  4170b4:	sub    rsp,0x40
  4170b8:	mov    QWORD PTR [rbp-0x8],rdi
  4170bc:	mov    QWORD PTR [rbp-0x10],rsi
  4170c0:	mov    QWORD PTR [rbp-0x18],rdx
  4170c4:	mov    rax,QWORD PTR [rbp-0x10]
  4170c8:	mov    QWORD PTR [rbp-0x28],rax
  4170cc:	mov    rax,QWORD PTR [rbp-0x28]
  4170d0:	shl    rax,0x1
  4170d4:	cmp    rax,QWORD PTR [rbp-0x18]
  4170d8:	ja     41721e <main@@Base+0x34ee>
  4170de:	mov    rax,QWORD PTR [rbp-0x28]
  4170e2:	shl    rax,0x1
  4170e6:	mov    QWORD PTR [rbp-0x20],rax
  4170ea:	mov    rax,QWORD PTR [rbp-0x20]
  4170ee:	cmp    rax,QWORD PTR [rbp-0x18]
  4170f2:	jae    417176 <main@@Base+0x3446>
  4170f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4170fc:	mov    rsi,QWORD PTR [rbp-0x20]
  417100:	call   4083a0 <verify_monster@@Base+0x1850>
  417105:	mov    BYTE PTR [rbp-0x29],al
  417108:	mov    rdi,QWORD PTR [rbp-0x8]
  41710c:	mov    rcx,QWORD PTR [rbp-0x20]
  417110:	add    rcx,0x1
  417117:	mov    rsi,rcx
  41711a:	call   4083a0 <verify_monster@@Base+0x1850>
  41711f:	mov    BYTE PTR [rbp-0x2a],al
  417122:	movzx  edx,BYTE PTR [rbp-0x29]
  417126:	movzx  r8d,BYTE PTR [rbp-0x2a]
  41712b:	cmp    edx,r8d
  41712e:	jge    417141 <main@@Base+0x3411>
  417134:	mov    eax,0xffffffff
  417139:	mov    DWORD PTR [rbp-0x30],eax
  41713c:	jmp    417157 <main@@Base+0x3427>
  417141:	movzx  eax,BYTE PTR [rbp-0x29]
  417145:	movzx  ecx,BYTE PTR [rbp-0x2a]
  417149:	cmp    eax,ecx
  41714b:	setg   dl
  41714e:	and    dl,0x1
  417151:	movzx  eax,dl
  417154:	mov    DWORD PTR [rbp-0x30],eax
  417157:	mov    eax,DWORD PTR [rbp-0x30]
  41715a:	cmp    eax,0x0
  41715d:	jge    417171 <main@@Base+0x3441>
  417163:	mov    rax,QWORD PTR [rbp-0x20]
  417167:	add    rax,0x1
  41716d:	mov    QWORD PTR [rbp-0x20],rax
  417171:	jmp    417176 <main@@Base+0x3446>
  417176:	mov    rdi,QWORD PTR [rbp-0x8]
  41717a:	mov    rsi,QWORD PTR [rbp-0x28]
  41717e:	call   4083a0 <verify_monster@@Base+0x1850>
  417183:	mov    BYTE PTR [rbp-0x2b],al
  417186:	mov    rdi,QWORD PTR [rbp-0x8]
  41718a:	mov    rsi,QWORD PTR [rbp-0x20]
  41718e:	call   4083a0 <verify_monster@@Base+0x1850>
  417193:	mov    BYTE PTR [rbp-0x29],al
  417196:	movzx  ecx,BYTE PTR [rbp-0x2b]
  41719a:	movzx  edx,BYTE PTR [rbp-0x29]
  41719e:	cmp    ecx,edx
  4171a0:	jge    4171b3 <main@@Base+0x3483>
  4171a6:	mov    eax,0xffffffff
  4171ab:	mov    DWORD PTR [rbp-0x34],eax
  4171ae:	jmp    4171c9 <main@@Base+0x3499>
  4171b3:	movzx  eax,BYTE PTR [rbp-0x2b]
  4171b7:	movzx  ecx,BYTE PTR [rbp-0x29]
  4171bb:	cmp    eax,ecx
  4171bd:	setg   dl
  4171c0:	and    dl,0x1
  4171c3:	movzx  eax,dl
  4171c6:	mov    DWORD PTR [rbp-0x34],eax
  4171c9:	mov    eax,DWORD PTR [rbp-0x34]
  4171cc:	cmp    eax,0x0
  4171cf:	jge    417214 <main@@Base+0x34e4>
  4171d5:	mov    rax,QWORD PTR [rbp-0x8]
  4171d9:	mov    rcx,QWORD PTR [rbp-0x20]
  4171dd:	mov    dl,BYTE PTR [rax+rcx*1]
  4171e0:	mov    BYTE PTR [rbp-0x2c],dl
  4171e3:	mov    rax,QWORD PTR [rbp-0x8]
  4171e7:	mov    rcx,QWORD PTR [rbp-0x28]
  4171eb:	mov    dl,BYTE PTR [rax+rcx*1]
  4171ee:	mov    rax,QWORD PTR [rbp-0x8]
  4171f2:	mov    rcx,QWORD PTR [rbp-0x20]
  4171f6:	mov    BYTE PTR [rax+rcx*1],dl
  4171f9:	mov    dl,BYTE PTR [rbp-0x2c]
  4171fc:	mov    rax,QWORD PTR [rbp-0x8]
  417200:	mov    rcx,QWORD PTR [rbp-0x28]
  417204:	mov    BYTE PTR [rax+rcx*1],dl
  417207:	mov    rax,QWORD PTR [rbp-0x20]
  41720b:	mov    QWORD PTR [rbp-0x28],rax
  41720f:	jmp    417219 <main@@Base+0x34e9>
  417214:	jmp    41721e <main@@Base+0x34ee>
  417219:	jmp    4170cc <main@@Base+0x339c>
  41721e:	add    rsp,0x40
  417222:	pop    rbp
  417223:	ret    
  417224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41722e:	xchg   ax,ax
  417230:	push   rbp
  417231:	mov    rbp,rsp
  417234:	sub    rsp,0x20
  417238:	mov    QWORD PTR [rbp-0x8],rdi
  41723c:	mov    QWORD PTR [rbp-0x10],rsi
  417240:	mov    QWORD PTR [rbp-0x18],rdx
  417244:	mov    rdi,QWORD PTR [rbp-0x8]
  417248:	mov    rsi,QWORD PTR [rbp-0x10]
  41724c:	mov    rdx,QWORD PTR [rbp-0x18]
  417250:	mov    ecx,0x1
  417255:	mov    r8d,0x1
  41725b:	mov    r9d,0xffffffff
  417261:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  417266:	add    rsp,0x20
  41726a:	pop    rbp
  41726b:	ret    
  41726c:	nop    DWORD PTR [rax+0x0]
  417270:	push   rbp
  417271:	mov    rbp,rsp
  417274:	sub    rsp,0x20
  417278:	mov    QWORD PTR [rbp-0x8],rdi
  41727c:	mov    QWORD PTR [rbp-0x10],rsi
  417280:	mov    rdi,QWORD PTR [rbp-0x8]
  417284:	mov    rsi,QWORD PTR [rbp-0x10]
  417288:	mov    rax,QWORD PTR [rbp-0x10]
  41728c:	mov    QWORD PTR [rbp-0x18],rdi
  417290:	mov    rdi,rax
  417293:	mov    QWORD PTR [rbp-0x20],rsi
  417297:	call   407f50 <verify_monster@@Base+0x1400>
  41729c:	mov    rdi,QWORD PTR [rbp-0x18]
  4172a0:	mov    rsi,QWORD PTR [rbp-0x20]
  4172a4:	mov    rdx,rax
  4172a7:	call   41d7a0 <flatcc_builder_create_string@@Base>
  4172ac:	add    rsp,0x20
  4172b0:	pop    rbp
  4172b1:	ret    
  4172b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172bc:	nop    DWORD PTR [rax+0x0]
  4172c0:	push   rbp
  4172c1:	mov    rbp,rsp
  4172c4:	sub    rsp,0x20
  4172c8:	mov    QWORD PTR [rbp-0x8],rdi
  4172cc:	mov    DWORD PTR [rbp-0xc],esi
  4172cf:	cmp    DWORD PTR [rbp-0xc],0x0
  4172d3:	je     4172ee <main@@Base+0x35be>
  4172d9:	mov    rdi,QWORD PTR [rbp-0x8]
  4172dd:	mov    esi,DWORD PTR [rbp-0xc]
  4172e0:	call   41aa20 <flatcc_builder_offset_vector_push@@Base>
  4172e5:	mov    QWORD PTR [rbp-0x18],rax
  4172e9:	jmp    4172fb <main@@Base+0x35cb>
  4172ee:	xor    eax,eax
  4172f0:	mov    ecx,eax
  4172f2:	mov    QWORD PTR [rbp-0x18],rcx
  4172f6:	jmp    4172fb <main@@Base+0x35cb>
  4172fb:	mov    rax,QWORD PTR [rbp-0x18]
  4172ff:	add    rsp,0x20
  417303:	pop    rbp
  417304:	ret    
  417305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41730f:	nop
  417310:	push   rbp
  417311:	mov    rbp,rsp
  417314:	sub    rsp,0x30
  417318:	mov    QWORD PTR [rbp-0x8],rdi
  41731c:	mov    QWORD PTR [rbp-0x10],rsi
  417320:	mov    QWORD PTR [rbp-0x18],rdx
  417324:	mov    QWORD PTR [rbp-0x20],rcx
  417328:	mov    rdi,QWORD PTR [rbp-0x10]
  41732c:	call   407f50 <verify_monster@@Base+0x1400>
  417331:	mov    QWORD PTR [rbp-0x28],rax
  417335:	mov    rax,QWORD PTR [rbp-0x18]
  417339:	cmp    rax,QWORD PTR [rbp-0x28]
  41733d:	jb     41734b <main@@Base+0x361b>
  417343:	mov    rax,QWORD PTR [rbp-0x28]
  417347:	mov    QWORD PTR [rbp-0x18],rax
  41734b:	mov    rax,QWORD PTR [rbp-0x18]
  41734f:	mov    rcx,QWORD PTR [rbp-0x28]
  417353:	sub    rcx,rax
  417356:	mov    QWORD PTR [rbp-0x28],rcx
  41735a:	mov    rax,QWORD PTR [rbp-0x20]
  41735e:	cmp    rax,QWORD PTR [rbp-0x28]
  417362:	jbe    417370 <main@@Base+0x3640>
  417368:	mov    rax,QWORD PTR [rbp-0x28]
  41736c:	mov    QWORD PTR [rbp-0x20],rax
  417370:	mov    rdi,QWORD PTR [rbp-0x8]
  417374:	mov    rax,QWORD PTR [rbp-0x10]
  417378:	add    rax,QWORD PTR [rbp-0x18]
  41737c:	mov    rdx,QWORD PTR [rbp-0x20]
  417380:	mov    rsi,rax
  417383:	call   41d7a0 <flatcc_builder_create_string@@Base>
  417388:	add    rsp,0x30
  41738c:	pop    rbp
  41738d:	ret    
  41738e:	xchg   ax,ax
  417390:	push   rbp
  417391:	mov    rbp,rsp
  417394:	sub    rsp,0x20
  417398:	mov    QWORD PTR [rbp-0x8],rdi
  41739c:	mov    QWORD PTR [rbp-0x10],rsi
  4173a0:	mov    rdi,QWORD PTR [rbp-0x8]
  4173a4:	mov    rsi,QWORD PTR [rbp-0x10]
  4173a8:	mov    rax,QWORD PTR [rbp-0x10]
  4173ac:	mov    QWORD PTR [rbp-0x18],rdi
  4173b0:	mov    rdi,rax
  4173b3:	mov    QWORD PTR [rbp-0x20],rsi
  4173b7:	call   408f00 <verify_monster@@Base+0x23b0>
  4173bc:	mov    rdi,QWORD PTR [rbp-0x18]
  4173c0:	mov    rsi,QWORD PTR [rbp-0x20]
  4173c4:	mov    rdx,rax
  4173c7:	mov    ecx,0x1
  4173cc:	mov    r8d,0x1
  4173d2:	mov    r9d,0xffffffff
  4173d8:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  4173dd:	add    rsp,0x20
  4173e1:	pop    rbp
  4173e2:	ret    
  4173e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173ed:	nop    DWORD PTR [rax]
  4173f0:	push   rbp
  4173f1:	mov    rbp,rsp
  4173f4:	sub    rsp,0x30
  4173f8:	mov    QWORD PTR [rbp-0x8],rdi
  4173fc:	mov    QWORD PTR [rbp-0x10],rsi
  417400:	mov    QWORD PTR [rbp-0x18],rdx
  417404:	mov    QWORD PTR [rbp-0x20],rcx
  417408:	mov    rdi,QWORD PTR [rbp-0x10]
  41740c:	call   408740 <verify_monster@@Base+0x1bf0>
  417411:	mov    QWORD PTR [rbp-0x28],rax
  417415:	mov    rax,QWORD PTR [rbp-0x18]
  417419:	cmp    rax,QWORD PTR [rbp-0x28]
  41741d:	jb     41742b <main@@Base+0x36fb>
  417423:	mov    rax,QWORD PTR [rbp-0x28]
  417427:	mov    QWORD PTR [rbp-0x18],rax
  41742b:	mov    rax,QWORD PTR [rbp-0x18]
  41742f:	mov    rcx,QWORD PTR [rbp-0x28]
  417433:	sub    rcx,rax
  417436:	mov    QWORD PTR [rbp-0x28],rcx
  41743a:	mov    rax,QWORD PTR [rbp-0x20]
  41743e:	cmp    rax,QWORD PTR [rbp-0x28]
  417442:	jbe    417450 <main@@Base+0x3720>
  417448:	mov    rax,QWORD PTR [rbp-0x28]
  41744c:	mov    QWORD PTR [rbp-0x20],rax
  417450:	mov    rdi,QWORD PTR [rbp-0x8]
  417454:	mov    rax,QWORD PTR [rbp-0x10]
  417458:	mov    rsi,QWORD PTR [rbp-0x18]
  41745c:	mov    QWORD PTR [rbp-0x30],rdi
  417460:	mov    rdi,rax
  417463:	call   417490 <main@@Base+0x3760>
  417468:	mov    rdx,QWORD PTR [rbp-0x20]
  41746c:	mov    rdi,QWORD PTR [rbp-0x30]
  417470:	mov    rsi,rax
  417473:	mov    ecx,0x4
  417478:	mov    r8d,0x2
  41747e:	mov    r9d,0x3fffffff
  417484:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  417489:	add    rsp,0x30
  41748d:	pop    rbp
  41748e:	ret    
  41748f:	nop
  417490:	push   rbp
  417491:	mov    rbp,rsp
  417494:	mov    QWORD PTR [rbp-0x8],rdi
  417498:	mov    QWORD PTR [rbp-0x10],rsi
  41749c:	mov    rax,QWORD PTR [rbp-0x8]
  4174a0:	mov    rcx,QWORD PTR [rbp-0x10]
  4174a4:	shl    rcx,0x2
  4174a8:	add    rax,rcx
  4174ab:	pop    rbp
  4174ac:	ret    
  4174ad:	nop    DWORD PTR [rax]
  4174b0:	push   rbp
  4174b1:	mov    rbp,rsp
  4174b4:	sub    rsp,0x30
  4174b8:	mov    QWORD PTR [rbp-0x8],rdi
  4174bc:	mov    QWORD PTR [rbp-0x10],rsi
  4174c0:	mov    QWORD PTR [rbp-0x18],rdx
  4174c4:	mov    QWORD PTR [rbp-0x20],rcx
  4174c8:	mov    rdi,QWORD PTR [rbp-0x10]
  4174cc:	call   408f00 <verify_monster@@Base+0x23b0>
  4174d1:	mov    QWORD PTR [rbp-0x28],rax
  4174d5:	mov    rax,QWORD PTR [rbp-0x18]
  4174d9:	cmp    rax,QWORD PTR [rbp-0x28]
  4174dd:	jb     4174eb <main@@Base+0x37bb>
  4174e3:	mov    rax,QWORD PTR [rbp-0x28]
  4174e7:	mov    QWORD PTR [rbp-0x18],rax
  4174eb:	mov    rax,QWORD PTR [rbp-0x18]
  4174ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4174f3:	sub    rcx,rax
  4174f6:	mov    QWORD PTR [rbp-0x28],rcx
  4174fa:	mov    rax,QWORD PTR [rbp-0x20]
  4174fe:	cmp    rax,QWORD PTR [rbp-0x28]
  417502:	jbe    417510 <main@@Base+0x37e0>
  417508:	mov    rax,QWORD PTR [rbp-0x28]
  41750c:	mov    QWORD PTR [rbp-0x20],rax
  417510:	mov    rdi,QWORD PTR [rbp-0x8]
  417514:	mov    rax,QWORD PTR [rbp-0x10]
  417518:	mov    rsi,QWORD PTR [rbp-0x18]
  41751c:	mov    QWORD PTR [rbp-0x30],rdi
  417520:	mov    rdi,rax
  417523:	call   417550 <main@@Base+0x3820>
  417528:	mov    rdx,QWORD PTR [rbp-0x20]
  41752c:	mov    rdi,QWORD PTR [rbp-0x30]
  417530:	mov    rsi,rax
  417533:	mov    ecx,0x1
  417538:	mov    r8d,0x1
  41753e:	mov    r9d,0xffffffff
  417544:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  417549:	add    rsp,0x30
  41754d:	pop    rbp
  41754e:	ret    
  41754f:	nop
  417550:	push   rbp
  417551:	mov    rbp,rsp
  417554:	mov    QWORD PTR [rbp-0x8],rdi
  417558:	mov    QWORD PTR [rbp-0x10],rsi
  41755c:	mov    rax,QWORD PTR [rbp-0x8]
  417560:	add    rax,QWORD PTR [rbp-0x10]
  417564:	pop    rbp
  417565:	ret    
  417566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417570:	push   rbp
  417571:	mov    rbp,rsp
  417574:	sub    rsp,0x20
  417578:	mov    QWORD PTR [rbp-0x8],rdi
  41757c:	mov    QWORD PTR [rbp-0x10],rsi
  417580:	mov    rdi,QWORD PTR [rbp-0x8]
  417584:	mov    rax,QWORD PTR [rbp-0x10]
  417588:	mov    rcx,QWORD PTR [rbp-0x10]
  41758c:	mov    QWORD PTR [rbp-0x18],rdi
  417590:	mov    rdi,rcx
  417593:	mov    QWORD PTR [rbp-0x20],rax
  417597:	call   408740 <verify_monster@@Base+0x1bf0>
  41759c:	mov    rdi,QWORD PTR [rbp-0x18]
  4175a0:	mov    rsi,QWORD PTR [rbp-0x20]
  4175a4:	mov    rdx,rax
  4175a7:	mov    ecx,0x4
  4175ac:	mov    r8d,0x2
  4175b2:	mov    r9d,0x3fffffff
  4175b8:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  4175bd:	add    rsp,0x20
  4175c1:	pop    rbp
  4175c2:	ret    
  4175c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4175cd:	nop    DWORD PTR [rax]
  4175d0:	push   rbp
  4175d1:	mov    rbp,rsp
  4175d4:	sub    rsp,0x30
  4175d8:	mov    QWORD PTR [rbp-0x10],rdi
  4175dc:	mov    DWORD PTR [rbp-0x14],esi
  4175df:	mov    QWORD PTR [rbp-0x20],rdx
  4175e3:	mov    WORD PTR [rbp-0x22],cx
  4175e7:	mov    rdi,QWORD PTR [rbp-0x10]
  4175eb:	call   416a30 <main@@Base+0x2d00>
  4175f0:	cmp    eax,0x0
  4175f3:	jne    41763a <main@@Base+0x390a>
  4175f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4175fd:	mov    rsi,QWORD PTR [rbp-0x20]
  417601:	call   417660 <main@@Base+0x3930>
  417606:	cmp    eax,0x0
  417609:	jne    41763a <main@@Base+0x390a>
  41760f:	mov    rdi,QWORD PTR [rbp-0x10]
  417613:	mov    esi,DWORD PTR [rbp-0x14]
  417616:	call   4176e0 <main@@Base+0x39b0>
  41761b:	cmp    eax,0x0
  41761e:	jne    41763a <main@@Base+0x390a>
  417624:	mov    rdi,QWORD PTR [rbp-0x10]
  417628:	movzx  esi,WORD PTR [rbp-0x22]
  41762c:	call   417740 <main@@Base+0x3a10>
  417631:	cmp    eax,0x0
  417634:	je     417646 <main@@Base+0x3916>
  41763a:	mov    DWORD PTR [rbp-0x4],0x0
  417641:	jmp    417652 <main@@Base+0x3922>
  417646:	mov    rdi,QWORD PTR [rbp-0x10]
  41764a:	call   416ab0 <main@@Base+0x2d80>
  41764f:	mov    DWORD PTR [rbp-0x4],eax
  417652:	mov    eax,DWORD PTR [rbp-0x4]
  417655:	add    rsp,0x30
  417659:	pop    rbp
  41765a:	ret    
  41765b:	nop    DWORD PTR [rax+rax*1+0x0]
  417660:	push   rbp
  417661:	mov    rbp,rsp
  417664:	sub    rsp,0x20
  417668:	mov    QWORD PTR [rbp-0x10],rdi
  41766c:	mov    QWORD PTR [rbp-0x18],rsi
  417670:	cmp    QWORD PTR [rbp-0x18],0x0
  417675:	jne    417687 <main@@Base+0x3957>
  41767b:	mov    DWORD PTR [rbp-0x4],0x0
  417682:	jmp    4176cd <main@@Base+0x399d>
  417687:	mov    rdi,QWORD PTR [rbp-0x10]
  41768b:	mov    esi,0x1
  417690:	mov    edx,0x8
  417695:	mov    ecx,0x8
  41769a:	call   41ce20 <flatcc_builder_table_add@@Base>
  41769f:	mov    QWORD PTR [rbp-0x20],rax
  4176a3:	cmp    rax,0x0
  4176a7:	jne    4176b9 <main@@Base+0x3989>
  4176ad:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4176b4:	jmp    4176cd <main@@Base+0x399d>
  4176b9:	mov    rdi,QWORD PTR [rbp-0x20]
  4176bd:	mov    rsi,QWORD PTR [rbp-0x18]
  4176c1:	call   414aa0 <main@@Base+0xd70>
  4176c6:	mov    DWORD PTR [rbp-0x4],0x0
  4176cd:	mov    eax,DWORD PTR [rbp-0x4]
  4176d0:	add    rsp,0x20
  4176d4:	pop    rbp
  4176d5:	ret    
  4176d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176e0:	push   rbp
  4176e1:	mov    rbp,rsp
  4176e4:	sub    rsp,0x20
  4176e8:	mov    QWORD PTR [rbp-0x8],rdi
  4176ec:	mov    DWORD PTR [rbp-0xc],esi
  4176ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4176f3:	je     417725 <main@@Base+0x39f5>
  4176f9:	xor    esi,esi
  4176fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4176ff:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  417704:	mov    QWORD PTR [rbp-0x18],rax
  417708:	cmp    rax,0x0
  41770c:	je     417725 <main@@Base+0x39f5>
  417712:	xor    eax,eax
  417714:	mov    ecx,DWORD PTR [rbp-0xc]
  417717:	mov    rdx,QWORD PTR [rbp-0x18]
  41771b:	mov    DWORD PTR [rdx],ecx
  41771d:	mov    DWORD PTR [rbp-0x1c],eax
  417720:	jmp    417732 <main@@Base+0x3a02>
  417725:	mov    eax,0xffffffff
  41772a:	mov    DWORD PTR [rbp-0x1c],eax
  41772d:	jmp    417732 <main@@Base+0x3a02>
  417732:	mov    eax,DWORD PTR [rbp-0x1c]
  417735:	add    rsp,0x20
  417739:	pop    rbp
  41773a:	ret    
  41773b:	nop    DWORD PTR [rax+rax*1+0x0]
  417740:	push   rbp
  417741:	mov    rbp,rsp
  417744:	sub    rsp,0x20
  417748:	mov    QWORD PTR [rbp-0x10],rdi
  41774c:	mov    WORD PTR [rbp-0x12],si
  417750:	movzx  eax,WORD PTR [rbp-0x12]
  417754:	cmp    eax,0x0
  417757:	jne    417769 <main@@Base+0x3a39>
  41775d:	mov    DWORD PTR [rbp-0x4],0x0
  417764:	jmp    4177ae <main@@Base+0x3a7e>
  417769:	mov    rdi,QWORD PTR [rbp-0x10]
  41776d:	mov    eax,0x2
  417772:	mov    esi,eax
  417774:	mov    edx,0x2
  417779:	mov    ecx,eax
  41777b:	call   41ce20 <flatcc_builder_table_add@@Base>
  417780:	mov    QWORD PTR [rbp-0x20],rax
  417784:	cmp    rax,0x0
  417788:	jne    41779a <main@@Base+0x3a6a>
  41778e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417795:	jmp    4177ae <main@@Base+0x3a7e>
  41779a:	mov    rdi,QWORD PTR [rbp-0x20]
  41779e:	movzx  esi,WORD PTR [rbp-0x12]
  4177a2:	call   414c90 <main@@Base+0xf60>
  4177a7:	mov    DWORD PTR [rbp-0x4],0x0
  4177ae:	mov    eax,DWORD PTR [rbp-0x4]
  4177b1:	add    rsp,0x20
  4177b5:	pop    rbp
  4177b6:	ret    
  4177b7:	nop    WORD PTR [rax+rax*1+0x0]
  4177c0:	push   rbp
  4177c1:	mov    rbp,rsp
  4177c4:	sub    rsp,0x10
  4177c8:	mov    QWORD PTR [rbp-0x8],rdi
  4177cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4177d0:	mov    esi,0x4
  4177d5:	call   41b550 <flatcc_builder_start_table@@Base>
  4177da:	add    rsp,0x10
  4177de:	pop    rbp
  4177df:	ret    
  4177e0:	push   rbp
  4177e1:	mov    rbp,rsp
  4177e4:	sub    rsp,0x20
  4177e8:	mov    QWORD PTR [rbp-0x10],rdi
  4177ec:	mov    BYTE PTR [rbp-0x11],sil
  4177f0:	movsx  eax,BYTE PTR [rbp-0x11]
  4177f4:	cmp    eax,0x2
  4177f7:	jne    417809 <main@@Base+0x3ad9>
  4177fd:	mov    DWORD PTR [rbp-0x4],0x0
  417804:	jmp    41784c <main@@Base+0x3b1c>
  417809:	xor    esi,esi
  41780b:	mov    rdi,QWORD PTR [rbp-0x10]
  41780f:	mov    edx,0x1
  417814:	mov    ecx,0x1
  417819:	call   41ce20 <flatcc_builder_table_add@@Base>
  41781e:	mov    QWORD PTR [rbp-0x20],rax
  417822:	cmp    rax,0x0
  417826:	jne    417838 <main@@Base+0x3b08>
  41782c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417833:	jmp    41784c <main@@Base+0x3b1c>
  417838:	mov    rdi,QWORD PTR [rbp-0x20]
  41783c:	movsx  esi,BYTE PTR [rbp-0x11]
  417840:	call   416650 <main@@Base+0x2920>
  417845:	mov    DWORD PTR [rbp-0x4],0x0
  41784c:	mov    eax,DWORD PTR [rbp-0x4]
  41784f:	add    rsp,0x20
  417853:	pop    rbp
  417854:	ret    
  417855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41785f:	nop
  417860:	push   rbp
  417861:	mov    rbp,rsp
  417864:	sub    rsp,0x20
  417868:	mov    QWORD PTR [rbp-0x10],rdi
  41786c:	mov    BYTE PTR [rbp-0x11],sil
  417870:	movsx  eax,BYTE PTR [rbp-0x11]
  417874:	cmp    eax,0x2
  417877:	jne    417889 <main@@Base+0x3b59>
  41787d:	mov    DWORD PTR [rbp-0x4],0x0
  417884:	jmp    4178ce <main@@Base+0x3b9e>
  417889:	mov    rdi,QWORD PTR [rbp-0x10]
  41788d:	mov    eax,0x1
  417892:	mov    esi,eax
  417894:	mov    edx,0x1
  417899:	mov    ecx,eax
  41789b:	call   41ce20 <flatcc_builder_table_add@@Base>
  4178a0:	mov    QWORD PTR [rbp-0x20],rax
  4178a4:	cmp    rax,0x0
  4178a8:	jne    4178ba <main@@Base+0x3b8a>
  4178ae:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4178b5:	jmp    4178ce <main@@Base+0x3b9e>
  4178ba:	mov    rdi,QWORD PTR [rbp-0x20]
  4178be:	movsx  esi,BYTE PTR [rbp-0x11]
  4178c2:	call   416650 <main@@Base+0x2920>
  4178c7:	mov    DWORD PTR [rbp-0x4],0x0
  4178ce:	mov    eax,DWORD PTR [rbp-0x4]
  4178d1:	add    rsp,0x20
  4178d5:	pop    rbp
  4178d6:	ret    
  4178d7:	nop    WORD PTR [rax+rax*1+0x0]
  4178e0:	push   rbp
  4178e1:	mov    rbp,rsp
  4178e4:	sub    rsp,0x20
  4178e8:	mov    QWORD PTR [rbp-0x10],rdi
  4178ec:	mov    BYTE PTR [rbp-0x11],sil
  4178f0:	movzx  eax,BYTE PTR [rbp-0x11]
  4178f4:	cmp    eax,0x2
  4178f7:	jne    417909 <main@@Base+0x3bd9>
  4178fd:	mov    DWORD PTR [rbp-0x4],0x0
  417904:	jmp    41794f <main@@Base+0x3c1f>
  417909:	mov    rdi,QWORD PTR [rbp-0x10]
  41790d:	mov    esi,0x2
  417912:	mov    edx,0x1
  417917:	mov    ecx,0x1
  41791c:	call   41ce20 <flatcc_builder_table_add@@Base>
  417921:	mov    QWORD PTR [rbp-0x20],rax
  417925:	cmp    rax,0x0
  417929:	jne    41793b <main@@Base+0x3c0b>
  41792f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417936:	jmp    41794f <main@@Base+0x3c1f>
  41793b:	mov    rdi,QWORD PTR [rbp-0x20]
  41793f:	movzx  esi,BYTE PTR [rbp-0x11]
  417943:	call   414d10 <main@@Base+0xfe0>
  417948:	mov    DWORD PTR [rbp-0x4],0x0
  41794f:	mov    eax,DWORD PTR [rbp-0x4]
  417952:	add    rsp,0x20
  417956:	pop    rbp
  417957:	ret    
  417958:	nop    DWORD PTR [rax+rax*1+0x0]
  417960:	push   rbp
  417961:	mov    rbp,rsp
  417964:	sub    rsp,0x20
  417968:	mov    QWORD PTR [rbp-0x10],rdi
  41796c:	mov    BYTE PTR [rbp-0x11],sil
  417970:	movzx  eax,BYTE PTR [rbp-0x11]
  417974:	cmp    eax,0x2
  417977:	jne    417989 <main@@Base+0x3c59>
  41797d:	mov    DWORD PTR [rbp-0x4],0x0
  417984:	jmp    4179cf <main@@Base+0x3c9f>
  417989:	mov    rdi,QWORD PTR [rbp-0x10]
  41798d:	mov    esi,0x3
  417992:	mov    edx,0x1
  417997:	mov    ecx,0x1
  41799c:	call   41ce20 <flatcc_builder_table_add@@Base>
  4179a1:	mov    QWORD PTR [rbp-0x20],rax
  4179a5:	cmp    rax,0x0
  4179a9:	jne    4179bb <main@@Base+0x3c8b>
  4179af:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4179b6:	jmp    4179cf <main@@Base+0x3c9f>
  4179bb:	mov    rdi,QWORD PTR [rbp-0x20]
  4179bf:	movzx  esi,BYTE PTR [rbp-0x11]
  4179c3:	call   414d10 <main@@Base+0xfe0>
  4179c8:	mov    DWORD PTR [rbp-0x4],0x0
  4179cf:	mov    eax,DWORD PTR [rbp-0x4]
  4179d2:	add    rsp,0x20
  4179d6:	pop    rbp
  4179d7:	ret    
  4179d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4179e0:	push   rbp
  4179e1:	mov    rbp,rsp
  4179e4:	sub    rsp,0x10
  4179e8:	xor    edx,edx
  4179ea:	mov    QWORD PTR [rbp-0x8],rdi
  4179ee:	mov    rdi,QWORD PTR [rbp-0x8]
  4179f2:	lea    rsi,[rip+0xa749]        # 422142 <_IO_stdin_used@@Base+0x142>
  4179f9:	call   41c100 <flatcc_builder_check_required@@Base>
  4179fe:	cmp    eax,0x0
  417a01:	je     417a0c <main@@Base+0x3cdc>
  417a07:	jmp    417a2b <main@@Base+0x3cfb>
  417a0c:	lea    rdi,[rip+0xe3a9]        # 425dbc <_IO_stdin_used@@Base+0x3dbc>
  417a13:	lea    rsi,[rip+0xd2fb]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  417a1a:	mov    edx,0xd9
  417a1f:	lea    rcx,[rip+0xe468]        # 425e8e <_IO_stdin_used@@Base+0x3e8e>
  417a26:	call   404090 <__assert_fail@plt>
  417a2b:	mov    rdi,QWORD PTR [rbp-0x8]
  417a2f:	call   41c1d0 <flatcc_builder_end_table@@Base>
  417a34:	add    rsp,0x10
  417a38:	pop    rbp
  417a39:	ret    
  417a3a:	nop    WORD PTR [rax+rax*1+0x0]
  417a40:	push   rbp
  417a41:	mov    rbp,rsp
  417a44:	sub    rsp,0x10
  417a48:	mov    QWORD PTR [rbp-0x8],rdi
  417a4c:	mov    rdi,QWORD PTR [rbp-0x8]
  417a50:	mov    esi,0x4
  417a55:	call   41b550 <flatcc_builder_start_table@@Base>
  417a5a:	add    rsp,0x10
  417a5e:	pop    rbp
  417a5f:	ret    
  417a60:	push   rbp
  417a61:	mov    rbp,rsp
  417a64:	sub    rsp,0x10
  417a68:	xor    edx,edx
  417a6a:	mov    QWORD PTR [rbp-0x8],rdi
  417a6e:	mov    rdi,QWORD PTR [rbp-0x8]
  417a72:	lea    rsi,[rip+0xa6cb]        # 422144 <_IO_stdin_used@@Base+0x144>
  417a79:	call   41c100 <flatcc_builder_check_required@@Base>
  417a7e:	cmp    eax,0x0
  417a81:	je     417a8c <main@@Base+0x3d5c>
  417a87:	jmp    417aab <main@@Base+0x3d7b>
  417a8c:	lea    rdi,[rip+0xe46c]        # 425eff <_IO_stdin_used@@Base+0x3eff>
  417a93:	lea    rsi,[rip+0xd27b]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  417a9a:	mov    edx,0xdf
  417a9f:	lea    rcx,[rip+0xe4ef]        # 425f95 <_IO_stdin_used@@Base+0x3f95>
  417aa6:	call   404090 <__assert_fail@plt>
  417aab:	mov    rdi,QWORD PTR [rbp-0x8]
  417aaf:	call   41c1d0 <flatcc_builder_end_table@@Base>
  417ab4:	add    rsp,0x10
  417ab8:	pop    rbp
  417ab9:	ret    
  417aba:	nop    WORD PTR [rax+rax*1+0x0]
  417ac0:	push   rbp
  417ac1:	mov    rbp,rsp
  417ac4:	sub    rsp,0x20
  417ac8:	mov    QWORD PTR [rbp-0x8],rdi
  417acc:	mov    DWORD PTR [rbp-0xc],esi
  417acf:	mov    rdi,QWORD PTR [rbp-0x8]
  417ad3:	mov    eax,DWORD PTR [rbp-0xc]
  417ad6:	mov    QWORD PTR [rbp-0x20],rdi
  417ada:	mov    edi,eax
  417adc:	call   417b00 <main@@Base+0x3dd0>
  417ae1:	mov    QWORD PTR [rbp-0x18],rax
  417ae5:	mov    rsi,QWORD PTR [rbp-0x18]
  417ae9:	mov    rdi,QWORD PTR [rbp-0x20]
  417aed:	call   40a8a0 <gen_monster@@Base+0xf30>
  417af2:	add    rsp,0x20
  417af6:	pop    rbp
  417af7:	ret    
  417af8:	nop    DWORD PTR [rax+rax*1+0x0]
  417b00:	push   rbp
  417b01:	mov    rbp,rsp
  417b04:	mov    DWORD PTR [rbp-0xc],edi
  417b07:	mov    BYTE PTR [rbp-0x8],0x4
  417b0b:	mov    eax,DWORD PTR [rbp-0xc]
  417b0e:	mov    DWORD PTR [rbp-0x4],eax
  417b11:	mov    rax,QWORD PTR [rbp-0x8]
  417b15:	pop    rbp
  417b16:	ret    
  417b17:	nop    WORD PTR [rax+rax*1+0x0]
  417b20:	push   rbp
  417b21:	mov    rbp,rsp
  417b24:	sub    rsp,0x10
  417b28:	mov    QWORD PTR [rbp-0x8],rdi
  417b2c:	mov    rax,QWORD PTR [rbp-0x8]
  417b30:	movzx  edi,BYTE PTR [rax]
  417b33:	call   417b50 <main@@Base+0x3e20>
  417b38:	movzx  eax,al
  417b3b:	add    rsp,0x10
  417b3f:	pop    rbp
  417b40:	ret    
  417b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  417b50:	push   rbp
  417b51:	mov    rbp,rsp
  417b54:	mov    BYTE PTR [rbp-0x1],dil
  417b58:	movzx  eax,BYTE PTR [rbp-0x1]
  417b5c:	pop    rbp
  417b5d:	ret    
  417b5e:	xchg   ax,ax
  417b60:	push   rbp
  417b61:	mov    rbp,rsp
  417b64:	sub    rsp,0x10
  417b68:	mov    QWORD PTR [rbp-0x8],rdi
  417b6c:	mov    rdi,QWORD PTR [rbp-0x8]
  417b70:	mov    esi,0xa
  417b75:	call   41b550 <flatcc_builder_start_table@@Base>
  417b7a:	add    rsp,0x10
  417b7e:	pop    rbp
  417b7f:	ret    
  417b80:	push   rbp
  417b81:	mov    rbp,rsp
  417b84:	sub    rsp,0x10
  417b88:	mov    QWORD PTR [rbp-0x8],rdi
  417b8c:	mov    rdi,QWORD PTR [rbp-0x8]
  417b90:	mov    esi,0x4
  417b95:	mov    edx,0x4
  417b9a:	call   41a460 <flatcc_builder_start_struct@@Base>
  417b9f:	add    rsp,0x10
  417ba3:	pop    rbp
  417ba4:	ret    
  417ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417baf:	nop
  417bb0:	push   rbp
  417bb1:	mov    rbp,rsp
  417bb4:	sub    rsp,0x20
  417bb8:	mov    QWORD PTR [rbp-0x8],rdi
  417bbc:	mov    DWORD PTR [rbp-0xc],esi
  417bbf:	mov    rdi,QWORD PTR [rbp-0x8]
  417bc3:	mov    esi,DWORD PTR [rbp-0xc]
  417bc6:	call   414b80 <main@@Base+0xe50>
  417bcb:	mov    rcx,QWORD PTR [rbp-0x8]
  417bcf:	mov    QWORD PTR [rbp-0x18],rax
  417bd3:	mov    rax,rcx
  417bd6:	add    rsp,0x20
  417bda:	pop    rbp
  417bdb:	ret    
  417bdc:	nop    DWORD PTR [rax+0x0]
  417be0:	push   rbp
  417be1:	mov    rbp,rsp
  417be4:	sub    rsp,0x10
  417be8:	mov    QWORD PTR [rbp-0x8],rdi
  417bec:	mov    rdi,QWORD PTR [rbp-0x8]
  417bf0:	call   41a600 <flatcc_builder_end_struct@@Base>
  417bf5:	add    rsp,0x10
  417bf9:	pop    rbp
  417bfa:	ret    
  417bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  417c00:	push   rbp
  417c01:	mov    rbp,rsp
  417c04:	sub    rsp,0x10
  417c08:	mov    QWORD PTR [rbp-0x8],rdi
  417c0c:	mov    rdi,QWORD PTR [rbp-0x8]
  417c10:	mov    esi,0x2
  417c15:	mov    edx,0x2
  417c1a:	call   41a460 <flatcc_builder_start_struct@@Base>
  417c1f:	add    rsp,0x10
  417c23:	pop    rbp
  417c24:	ret    
  417c25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c2f:	nop
  417c30:	push   rbp
  417c31:	mov    rbp,rsp
  417c34:	sub    rsp,0x20
  417c38:	mov    QWORD PTR [rbp-0x8],rdi
  417c3c:	mov    WORD PTR [rbp-0xa],si
  417c40:	mov    rdi,QWORD PTR [rbp-0x8]
  417c44:	movzx  esi,WORD PTR [rbp-0xa]
  417c48:	call   414c90 <main@@Base+0xf60>
  417c4d:	mov    rcx,QWORD PTR [rbp-0x8]
  417c51:	mov    QWORD PTR [rbp-0x18],rax
  417c55:	mov    rax,rcx
  417c58:	add    rsp,0x20
  417c5c:	pop    rbp
  417c5d:	ret    
  417c5e:	xchg   ax,ax
  417c60:	push   rbp
  417c61:	mov    rbp,rsp
  417c64:	sub    rsp,0x10
  417c68:	mov    QWORD PTR [rbp-0x8],rdi
  417c6c:	mov    rdi,QWORD PTR [rbp-0x8]
  417c70:	call   41a600 <flatcc_builder_end_struct@@Base>
  417c75:	add    rsp,0x10
  417c79:	pop    rbp
  417c7a:	ret    
  417c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  417c80:	push   rbp
  417c81:	mov    rbp,rsp
  417c84:	sub    rsp,0x30
  417c88:	mov    QWORD PTR [rbp-0x10],rsi
  417c8c:	mov    QWORD PTR [rbp-0x18],rdi
  417c90:	movzx  eax,BYTE PTR [rbp-0x10]
  417c94:	cmp    eax,0x0
  417c97:	jne    417ca9 <main@@Base+0x3f79>
  417c9d:	mov    DWORD PTR [rbp-0x4],0x0
  417ca4:	jmp    417d23 <main@@Base+0x3ff3>
  417ca9:	cmp    DWORD PTR [rbp-0xc],0x0
  417cad:	jne    417cbf <main@@Base+0x3f8f>
  417cb3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417cba:	jmp    417d23 <main@@Base+0x3ff3>
  417cbf:	xor    esi,esi
  417cc1:	mov    rdi,QWORD PTR [rbp-0x18]
  417cc5:	mov    edx,0x1
  417cca:	mov    ecx,0x1
  417ccf:	call   41ce20 <flatcc_builder_table_add@@Base>
  417cd4:	mov    QWORD PTR [rbp-0x28],rax
  417cd8:	cmp    rax,0x0
  417cdc:	je     417cfe <main@@Base+0x3fce>
  417ce2:	mov    rdi,QWORD PTR [rbp-0x18]
  417ce6:	mov    esi,0x1
  417ceb:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  417cf0:	mov    QWORD PTR [rbp-0x20],rax
  417cf4:	cmp    rax,0x0
  417cf8:	jne    417d0a <main@@Base+0x3fda>
  417cfe:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417d05:	jmp    417d23 <main@@Base+0x3ff3>
  417d0a:	mov    al,BYTE PTR [rbp-0x10]
  417d0d:	mov    rcx,QWORD PTR [rbp-0x28]
  417d11:	mov    BYTE PTR [rcx],al
  417d13:	mov    edx,DWORD PTR [rbp-0xc]
  417d16:	mov    rcx,QWORD PTR [rbp-0x20]
  417d1a:	mov    DWORD PTR [rcx],edx
  417d1c:	mov    DWORD PTR [rbp-0x4],0x0
  417d23:	mov    eax,DWORD PTR [rbp-0x4]
  417d26:	add    rsp,0x30
  417d2a:	pop    rbp
  417d2b:	ret    
  417d2c:	nop    DWORD PTR [rax+0x0]
  417d30:	push   rbp
  417d31:	mov    rbp,rsp
  417d34:	sub    rsp,0x30
  417d38:	mov    QWORD PTR [rbp-0x10],rsi
  417d3c:	mov    QWORD PTR [rbp-0x18],rdi
  417d40:	movzx  eax,BYTE PTR [rbp-0x10]
  417d44:	cmp    eax,0x0
  417d47:	jne    417d59 <main@@Base+0x4029>
  417d4d:	mov    DWORD PTR [rbp-0x4],0x0
  417d54:	jmp    417dd6 <main@@Base+0x40a6>
  417d59:	cmp    DWORD PTR [rbp-0xc],0x0
  417d5d:	jne    417d6f <main@@Base+0x403f>
  417d63:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417d6a:	jmp    417dd6 <main@@Base+0x40a6>
  417d6f:	mov    rdi,QWORD PTR [rbp-0x18]
  417d73:	mov    esi,0x6
  417d78:	mov    edx,0x1
  417d7d:	mov    ecx,0x1
  417d82:	call   41ce20 <flatcc_builder_table_add@@Base>
  417d87:	mov    QWORD PTR [rbp-0x28],rax
  417d8b:	cmp    rax,0x0
  417d8f:	je     417db1 <main@@Base+0x4081>
  417d95:	mov    rdi,QWORD PTR [rbp-0x18]
  417d99:	mov    esi,0x7
  417d9e:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  417da3:	mov    QWORD PTR [rbp-0x20],rax
  417da7:	cmp    rax,0x0
  417dab:	jne    417dbd <main@@Base+0x408d>
  417db1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417db8:	jmp    417dd6 <main@@Base+0x40a6>
  417dbd:	mov    al,BYTE PTR [rbp-0x10]
  417dc0:	mov    rcx,QWORD PTR [rbp-0x28]
  417dc4:	mov    BYTE PTR [rcx],al
  417dc6:	mov    edx,DWORD PTR [rbp-0xc]
  417dc9:	mov    rcx,QWORD PTR [rbp-0x20]
  417dcd:	mov    DWORD PTR [rcx],edx
  417dcf:	mov    DWORD PTR [rbp-0x4],0x0
  417dd6:	mov    eax,DWORD PTR [rbp-0x4]
  417dd9:	add    rsp,0x30
  417ddd:	pop    rbp
  417dde:	ret    
  417ddf:	nop
  417de0:	push   rbp
  417de1:	mov    rbp,rsp
  417de4:	sub    rsp,0x10
  417de8:	mov    QWORD PTR [rbp-0x8],rdi
  417dec:	mov    rdi,QWORD PTR [rbp-0x8]
  417df0:	mov    esi,0x1
  417df5:	call   41b550 <flatcc_builder_start_table@@Base>
  417dfa:	add    rsp,0x10
  417dfe:	pop    rbp
  417dff:	ret    
  417e00:	push   rbp
  417e01:	mov    rbp,rsp
  417e04:	sub    rsp,0x20
  417e08:	mov    QWORD PTR [rbp-0x10],rdi
  417e0c:	mov    DWORD PTR [rbp-0x14],esi
  417e0f:	cmp    DWORD PTR [rbp-0x14],0x0
  417e13:	jne    417e25 <main@@Base+0x40f5>
  417e19:	mov    DWORD PTR [rbp-0x4],0x0
  417e20:	jmp    417e67 <main@@Base+0x4137>
  417e25:	xor    esi,esi
  417e27:	mov    rdi,QWORD PTR [rbp-0x10]
  417e2b:	mov    edx,0x4
  417e30:	mov    ecx,0x4
  417e35:	call   41ce20 <flatcc_builder_table_add@@Base>
  417e3a:	mov    QWORD PTR [rbp-0x20],rax
  417e3e:	cmp    rax,0x0
  417e42:	jne    417e54 <main@@Base+0x4124>
  417e48:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417e4f:	jmp    417e67 <main@@Base+0x4137>
  417e54:	mov    rdi,QWORD PTR [rbp-0x20]
  417e58:	mov    esi,DWORD PTR [rbp-0x14]
  417e5b:	call   414b80 <main@@Base+0xe50>
  417e60:	mov    DWORD PTR [rbp-0x4],0x0
  417e67:	mov    eax,DWORD PTR [rbp-0x4]
  417e6a:	add    rsp,0x20
  417e6e:	pop    rbp
  417e6f:	ret    
  417e70:	push   rbp
  417e71:	mov    rbp,rsp
  417e74:	sub    rsp,0x10
  417e78:	xor    edx,edx
  417e7a:	mov    QWORD PTR [rbp-0x8],rdi
  417e7e:	mov    rdi,QWORD PTR [rbp-0x8]
  417e82:	lea    rsi,[rip+0xa2bd]        # 422146 <_IO_stdin_used@@Base+0x146>
  417e89:	call   41c100 <flatcc_builder_check_required@@Base>
  417e8e:	cmp    eax,0x0
  417e91:	je     417e9c <main@@Base+0x416c>
  417e97:	jmp    417ebb <main@@Base+0x418b>
  417e9c:	lea    rdi,[rip+0xe4b7]        # 42635a <_IO_stdin_used@@Base+0x435a>
  417ea3:	lea    rsi,[rip+0xce6b]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  417eaa:	mov    edx,0xef
  417eaf:	lea    rcx,[rip+0xe534]        # 4263ea <_IO_stdin_used@@Base+0x43ea>
  417eb6:	call   404090 <__assert_fail@plt>
  417ebb:	mov    rdi,QWORD PTR [rbp-0x8]
  417ebf:	call   41c1d0 <flatcc_builder_end_table@@Base>
  417ec4:	add    rsp,0x10
  417ec8:	pop    rbp
  417ec9:	ret    
  417eca:	nop    WORD PTR [rax+rax*1+0x0]
  417ed0:	push   rbp
  417ed1:	mov    rbp,rsp
  417ed4:	sub    rsp,0x30
  417ed8:	mov    QWORD PTR [rbp-0x10],rsi
  417edc:	mov    QWORD PTR [rbp-0x18],rdi
  417ee0:	movzx  eax,BYTE PTR [rbp-0x10]
  417ee4:	cmp    eax,0x0
  417ee7:	jne    417ef9 <main@@Base+0x41c9>
  417eed:	mov    DWORD PTR [rbp-0x4],0x0
  417ef4:	jmp    417f76 <main@@Base+0x4246>
  417ef9:	cmp    DWORD PTR [rbp-0xc],0x0
  417efd:	jne    417f0f <main@@Base+0x41df>
  417f03:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417f0a:	jmp    417f76 <main@@Base+0x4246>
  417f0f:	mov    rdi,QWORD PTR [rbp-0x18]
  417f13:	mov    esi,0x2
  417f18:	mov    edx,0x1
  417f1d:	mov    ecx,0x1
  417f22:	call   41ce20 <flatcc_builder_table_add@@Base>
  417f27:	mov    QWORD PTR [rbp-0x28],rax
  417f2b:	cmp    rax,0x0
  417f2f:	je     417f51 <main@@Base+0x4221>
  417f35:	mov    rdi,QWORD PTR [rbp-0x18]
  417f39:	mov    esi,0x3
  417f3e:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  417f43:	mov    QWORD PTR [rbp-0x20],rax
  417f47:	cmp    rax,0x0
  417f4b:	jne    417f5d <main@@Base+0x422d>
  417f51:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417f58:	jmp    417f76 <main@@Base+0x4246>
  417f5d:	mov    al,BYTE PTR [rbp-0x10]
  417f60:	mov    rcx,QWORD PTR [rbp-0x28]
  417f64:	mov    BYTE PTR [rcx],al
  417f66:	mov    edx,DWORD PTR [rbp-0xc]
  417f69:	mov    rcx,QWORD PTR [rbp-0x20]
  417f6d:	mov    DWORD PTR [rcx],edx
  417f6f:	mov    DWORD PTR [rbp-0x4],0x0
  417f76:	mov    eax,DWORD PTR [rbp-0x4]
  417f79:	add    rsp,0x30
  417f7d:	pop    rbp
  417f7e:	ret    
  417f7f:	nop
  417f80:	push   rbp
  417f81:	mov    rbp,rsp
  417f84:	mov    DWORD PTR [rbp-0xc],edi
  417f87:	mov    BYTE PTR [rbp-0x8],0x2
  417f8b:	mov    eax,DWORD PTR [rbp-0xc]
  417f8e:	mov    DWORD PTR [rbp-0x4],eax
  417f91:	mov    rax,QWORD PTR [rbp-0x8]
  417f95:	pop    rbp
  417f96:	ret    
  417f97:	nop    WORD PTR [rax+rax*1+0x0]
  417fa0:	push   rbp
  417fa1:	mov    rbp,rsp
  417fa4:	sub    rsp,0x20
  417fa8:	mov    QWORD PTR [rbp-0x8],rdi
  417fac:	mov    DWORD PTR [rbp-0xc],esi
  417faf:	mov    rdi,QWORD PTR [rbp-0x8]
  417fb3:	mov    eax,DWORD PTR [rbp-0xc]
  417fb6:	mov    QWORD PTR [rbp-0x20],rdi
  417fba:	mov    edi,eax
  417fbc:	call   410dc0 <test_mixed_type_union@@Base+0xf30>
  417fc1:	mov    QWORD PTR [rbp-0x18],rax
  417fc5:	mov    rsi,QWORD PTR [rbp-0x18]
  417fc9:	mov    rdi,QWORD PTR [rbp-0x20]
  417fcd:	call   417fe0 <main@@Base+0x42b0>
  417fd2:	add    rsp,0x20
  417fd6:	pop    rbp
  417fd7:	ret    
  417fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  417fe0:	push   rbp
  417fe1:	mov    rbp,rsp
  417fe4:	sub    rsp,0x30
  417fe8:	mov    QWORD PTR [rbp-0x10],rsi
  417fec:	mov    QWORD PTR [rbp-0x18],rdi
  417ff0:	movzx  eax,BYTE PTR [rbp-0x10]
  417ff4:	cmp    eax,0x0
  417ff7:	jne    418009 <main@@Base+0x42d9>
  417ffd:	mov    DWORD PTR [rbp-0x4],0x0
  418004:	jmp    418086 <main@@Base+0x4356>
  418009:	cmp    DWORD PTR [rbp-0xc],0x0
  41800d:	jne    41801f <main@@Base+0x42ef>
  418013:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41801a:	jmp    418086 <main@@Base+0x4356>
  41801f:	mov    rdi,QWORD PTR [rbp-0x18]
  418023:	mov    esi,0x4
  418028:	mov    edx,0x1
  41802d:	mov    ecx,0x1
  418032:	call   41ce20 <flatcc_builder_table_add@@Base>
  418037:	mov    QWORD PTR [rbp-0x28],rax
  41803b:	cmp    rax,0x0
  41803f:	je     418061 <main@@Base+0x4331>
  418045:	mov    rdi,QWORD PTR [rbp-0x18]
  418049:	mov    esi,0x5
  41804e:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  418053:	mov    QWORD PTR [rbp-0x20],rax
  418057:	cmp    rax,0x0
  41805b:	jne    41806d <main@@Base+0x433d>
  418061:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418068:	jmp    418086 <main@@Base+0x4356>
  41806d:	mov    al,BYTE PTR [rbp-0x10]
  418070:	mov    rcx,QWORD PTR [rbp-0x28]
  418074:	mov    BYTE PTR [rcx],al
  418076:	mov    edx,DWORD PTR [rbp-0xc]
  418079:	mov    rcx,QWORD PTR [rbp-0x20]
  41807d:	mov    DWORD PTR [rcx],edx
  41807f:	mov    DWORD PTR [rbp-0x4],0x0
  418086:	mov    eax,DWORD PTR [rbp-0x4]
  418089:	add    rsp,0x30
  41808d:	pop    rbp
  41808e:	ret    
  41808f:	nop
  418090:	push   rbp
  418091:	mov    rbp,rsp
  418094:	mov    DWORD PTR [rbp-0xc],edi
  418097:	mov    BYTE PTR [rbp-0x8],0x9
  41809b:	mov    eax,DWORD PTR [rbp-0xc]
  41809e:	mov    DWORD PTR [rbp-0x4],eax
  4180a1:	mov    rax,QWORD PTR [rbp-0x8]
  4180a5:	pop    rbp
  4180a6:	ret    
  4180a7:	nop    WORD PTR [rax+rax*1+0x0]
  4180b0:	push   rbp
  4180b1:	mov    rbp,rsp
  4180b4:	sub    rsp,0x10
  4180b8:	mov    QWORD PTR [rbp-0x8],rdi
  4180bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4180c0:	call   41a600 <flatcc_builder_end_struct@@Base>
  4180c5:	add    rsp,0x10
  4180c9:	pop    rbp
  4180ca:	ret    
  4180cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4180d0:	push   rbp
  4180d1:	mov    rbp,rsp
  4180d4:	sub    rsp,0x20
  4180d8:	mov    QWORD PTR [rbp-0x10],rsi
  4180dc:	mov    QWORD PTR [rbp-0x18],rdi
  4180e0:	cmp    DWORD PTR [rbp-0x10],0x0
  4180e4:	je     4180f4 <main@@Base+0x43c4>
  4180ea:	cmp    DWORD PTR [rbp-0xc],0x0
  4180ee:	jne    41810e <main@@Base+0x43de>
  4180f4:	xor    eax,eax
  4180f6:	mov    ecx,DWORD PTR [rbp-0x10]
  4180f9:	mov    edx,DWORD PTR [rbp-0xc]
  4180fc:	cmp    ecx,edx
  4180fe:	mov    ecx,0xffffffff
  418103:	cmove  ecx,eax
  418106:	mov    DWORD PTR [rbp-0x4],ecx
  418109:	jmp    418177 <main@@Base+0x4447>
  41810e:	mov    rdi,QWORD PTR [rbp-0x18]
  418112:	mov    esi,0x8
  418117:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  41811c:	mov    QWORD PTR [rbp-0x20],rax
  418120:	cmp    rax,0x0
  418124:	jne    418136 <main@@Base+0x4406>
  41812a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418131:	jmp    418177 <main@@Base+0x4447>
  418136:	mov    eax,DWORD PTR [rbp-0x10]
  418139:	mov    rcx,QWORD PTR [rbp-0x20]
  41813d:	mov    DWORD PTR [rcx],eax
  41813f:	mov    rdi,QWORD PTR [rbp-0x18]
  418143:	mov    esi,0x9
  418148:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  41814d:	mov    QWORD PTR [rbp-0x20],rax
  418151:	cmp    rax,0x0
  418155:	jne    418167 <main@@Base+0x4437>
  41815b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418162:	jmp    418177 <main@@Base+0x4447>
  418167:	mov    eax,DWORD PTR [rbp-0xc]
  41816a:	mov    rcx,QWORD PTR [rbp-0x20]
  41816e:	mov    DWORD PTR [rcx],eax
  418170:	mov    DWORD PTR [rbp-0x4],0x0
  418177:	mov    eax,DWORD PTR [rbp-0x4]
  41817a:	add    rsp,0x20
  41817e:	pop    rbp
  41817f:	ret    
  418180:	push   rbp
  418181:	mov    rbp,rsp
  418184:	sub    rsp,0x10
  418188:	xor    edx,edx
  41818a:	mov    QWORD PTR [rbp-0x8],rdi
  41818e:	mov    rdi,QWORD PTR [rbp-0x8]
  418192:	lea    rsi,[rip+0x9faf]        # 422148 <_IO_stdin_used@@Base+0x148>
  418199:	call   41c100 <flatcc_builder_check_required@@Base>
  41819e:	cmp    eax,0x0
  4181a1:	je     4181ac <main@@Base+0x447c>
  4181a7:	jmp    4181cb <main@@Base+0x449b>
  4181ac:	lea    rdi,[rip+0xe27c]        # 42642f <_IO_stdin_used@@Base+0x442f>
  4181b3:	lea    rsi,[rip+0xcb5b]        # 424d15 <_IO_stdin_used@@Base+0x2d15>
  4181ba:	mov    edx,0xf1
  4181bf:	lea    rcx,[rip+0xe2f0]        # 4264b6 <_IO_stdin_used@@Base+0x44b6>
  4181c6:	call   404090 <__assert_fail@plt>
  4181cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4181cf:	call   41c1d0 <flatcc_builder_end_table@@Base>
  4181d4:	add    rsp,0x10
  4181d8:	pop    rbp
  4181d9:	ret    
  4181da:	nop    WORD PTR [rax+rax*1+0x0]
  4181e0:	push   rbp
  4181e1:	mov    rbp,rsp
  4181e4:	sub    rsp,0x30
  4181e8:	mov    QWORD PTR [rbp-0x8],rdi
  4181ec:	mov    WORD PTR [rbp-0xa],0x0
  4181f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4181f7:	je     418211 <main@@Base+0x44e1>
  4181fd:	mov    al,0x1
  4181ff:	test   al,0x1
  418201:	jne    41820c <main@@Base+0x44dc>
  418207:	jmp    418211 <main@@Base+0x44e1>
  41820c:	jmp    418230 <main@@Base+0x4500>
  418211:	lea    rdi,[rip+0xc880]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  418218:	lea    rsi,[rip+0xc89f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41821f:	mov    edx,0x333
  418224:	lea    rcx,[rip+0xe34c]        # 426577 <_IO_stdin_used@@Base+0x4577>
  41822b:	call   404090 <__assert_fail@plt>
  418230:	mov    WORD PTR [rbp-0xc],0x0
  418236:	mov    rax,QWORD PTR [rbp-0x8]
  41823a:	mov    rcx,QWORD PTR [rbp-0x8]
  41823e:	mov    rdi,rcx
  418241:	mov    QWORD PTR [rbp-0x20],rax
  418245:	call   414210 <main@@Base+0x4e0>
  41824a:	xor    edx,edx
  41824c:	mov    ecx,edx
  41824e:	movsxd rsi,eax
  418251:	sub    rcx,rsi
  418254:	mov    rsi,QWORD PTR [rbp-0x20]
  418258:	add    rsi,rcx
  41825b:	mov    QWORD PTR [rbp-0x18],rsi
  41825f:	mov    rcx,QWORD PTR [rbp-0x18]
  418263:	mov    rdi,rcx
  418266:	call   414230 <main@@Base+0x500>
  41826b:	movzx  edx,ax
  41826e:	mov    ecx,edx
  418270:	movzx  edx,WORD PTR [rbp-0xc]
  418274:	add    edx,0x3
  418277:	movsxd rsi,edx
  41827a:	shl    rsi,0x1
  41827e:	cmp    rcx,rsi
  418281:	jb     4182ab <main@@Base+0x457b>
  418287:	mov    rax,QWORD PTR [rbp-0x18]
  41828b:	movzx  ecx,WORD PTR [rbp-0xc]
  41828f:	movsxd rdx,ecx
  418292:	shl    rdx,0x1
  418296:	add    rax,rdx
  418299:	add    rax,0x4
  41829f:	mov    rdi,rax
  4182a2:	call   414230 <main@@Base+0x500>
  4182a7:	mov    WORD PTR [rbp-0xa],ax
  4182ab:	movzx  eax,WORD PTR [rbp-0xa]
  4182af:	cmp    eax,0x0
  4182b2:	je     4182d9 <main@@Base+0x45a9>
  4182b8:	mov    rax,QWORD PTR [rbp-0x8]
  4182bc:	movzx  ecx,WORD PTR [rbp-0xa]
  4182c0:	movsxd rdx,ecx
  4182c3:	add    rax,rdx
  4182c6:	mov    rdi,rax
  4182c9:	call   4165e0 <main@@Base+0x28b0>
  4182ce:	movzx  ecx,al
  4182d1:	mov    DWORD PTR [rbp-0x24],ecx
  4182d4:	jmp    4182e3 <main@@Base+0x45b3>
  4182d9:	xor    eax,eax
  4182db:	mov    DWORD PTR [rbp-0x24],eax
  4182de:	jmp    4182e3 <main@@Base+0x45b3>
  4182e3:	mov    eax,DWORD PTR [rbp-0x24]
  4182e6:	movzx  eax,al
  4182e9:	add    rsp,0x30
  4182ed:	pop    rbp
  4182ee:	ret    
  4182ef:	nop
  4182f0:	push   rbp
  4182f1:	mov    rbp,rsp
  4182f4:	sub    rsp,0x40
  4182f8:	mov    QWORD PTR [rbp-0x10],rdi
  4182fc:	mov    WORD PTR [rbp-0x1a],0x0
  418302:	cmp    QWORD PTR [rbp-0x10],0x0
  418307:	je     418321 <main@@Base+0x45f1>
  41830d:	mov    al,0x1
  41830f:	test   al,0x1
  418311:	jne    41831c <main@@Base+0x45ec>
  418317:	jmp    418321 <main@@Base+0x45f1>
  41831c:	jmp    418340 <main@@Base+0x4610>
  418321:	lea    rdi,[rip+0xc770]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  418328:	lea    rsi,[rip+0xc78f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41832f:	mov    edx,0x333
  418334:	lea    rcx,[rip+0xe294]        # 4265cf <_IO_stdin_used@@Base+0x45cf>
  41833b:	call   404090 <__assert_fail@plt>
  418340:	mov    WORD PTR [rbp-0x1c],0x1
  418346:	mov    rax,QWORD PTR [rbp-0x10]
  41834a:	mov    rcx,QWORD PTR [rbp-0x10]
  41834e:	mov    rdi,rcx
  418351:	mov    QWORD PTR [rbp-0x30],rax
  418355:	call   414210 <main@@Base+0x4e0>
  41835a:	xor    edx,edx
  41835c:	mov    ecx,edx
  41835e:	movsxd rsi,eax
  418361:	sub    rcx,rsi
  418364:	mov    rsi,QWORD PTR [rbp-0x30]
  418368:	add    rsi,rcx
  41836b:	mov    QWORD PTR [rbp-0x28],rsi
  41836f:	mov    rcx,QWORD PTR [rbp-0x28]
  418373:	mov    rdi,rcx
  418376:	call   414230 <main@@Base+0x500>
  41837b:	movzx  edx,ax
  41837e:	mov    ecx,edx
  418380:	movzx  edx,WORD PTR [rbp-0x1c]
  418384:	add    edx,0x3
  418387:	movsxd rsi,edx
  41838a:	shl    rsi,0x1
  41838e:	cmp    rcx,rsi
  418391:	jb     4183bb <main@@Base+0x468b>
  418397:	mov    rax,QWORD PTR [rbp-0x28]
  41839b:	movzx  ecx,WORD PTR [rbp-0x1c]
  41839f:	movsxd rdx,ecx
  4183a2:	shl    rdx,0x1
  4183a6:	add    rax,rdx
  4183a9:	add    rax,0x4
  4183af:	mov    rdi,rax
  4183b2:	call   414230 <main@@Base+0x500>
  4183b7:	mov    WORD PTR [rbp-0x1a],ax
  4183bb:	cmp    WORD PTR [rbp-0x1a],0x0
  4183c0:	je     418400 <main@@Base+0x46d0>
  4183c6:	mov    rax,QWORD PTR [rbp-0x10]
  4183ca:	movzx  ecx,WORD PTR [rbp-0x1a]
  4183ce:	movsxd rdx,ecx
  4183d1:	add    rax,rdx
  4183d4:	mov    QWORD PTR [rbp-0x18],rax
  4183d8:	mov    rax,QWORD PTR [rbp-0x18]
  4183dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4183e0:	mov    rdi,rdx
  4183e3:	mov    QWORD PTR [rbp-0x38],rax
  4183e7:	call   4141e0 <main@@Base+0x4b0>
  4183ec:	mov    eax,eax
  4183ee:	mov    edx,eax
  4183f0:	mov    rsi,QWORD PTR [rbp-0x38]
  4183f4:	add    rsi,rdx
  4183f7:	mov    QWORD PTR [rbp-0x8],rsi
  4183fb:	jmp    418408 <main@@Base+0x46d8>
  418400:	mov    QWORD PTR [rbp-0x8],0x0
  418408:	mov    rax,QWORD PTR [rbp-0x8]
  41840c:	add    rsp,0x40
  418410:	pop    rbp
  418411:	ret    
  418412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41841c:	nop    DWORD PTR [rax+0x0]
  418420:	push   rbp
  418421:	mov    rbp,rsp
  418424:	mov    eax,0x4
  418429:	pop    rbp
  41842a:	ret    
  41842b:	nop    DWORD PTR [rax+rax*1+0x0]
  418430:	push   rbp
  418431:	mov    rbp,rsp
  418434:	sub    rsp,0x40
  418438:	mov    QWORD PTR [rbp-0x10],rdi
  41843c:	mov    WORD PTR [rbp-0x1a],0x0
  418442:	cmp    QWORD PTR [rbp-0x10],0x0
  418447:	je     418461 <main@@Base+0x4731>
  41844d:	mov    al,0x1
  41844f:	test   al,0x1
  418451:	jne    41845c <main@@Base+0x472c>
  418457:	jmp    418461 <main@@Base+0x4731>
  41845c:	jmp    418480 <main@@Base+0x4750>
  418461:	lea    rdi,[rip+0xc630]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  418468:	lea    rsi,[rip+0xc64f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41846f:	mov    edx,0x337
  418474:	lea    rcx,[rip+0xe3fb]        # 426876 <_IO_stdin_used@@Base+0x4876>
  41847b:	call   404090 <__assert_fail@plt>
  418480:	mov    WORD PTR [rbp-0x1c],0x9
  418486:	mov    rax,QWORD PTR [rbp-0x10]
  41848a:	mov    rcx,QWORD PTR [rbp-0x10]
  41848e:	mov    rdi,rcx
  418491:	mov    QWORD PTR [rbp-0x30],rax
  418495:	call   414210 <main@@Base+0x4e0>
  41849a:	xor    edx,edx
  41849c:	mov    ecx,edx
  41849e:	movsxd rsi,eax
  4184a1:	sub    rcx,rsi
  4184a4:	mov    rsi,QWORD PTR [rbp-0x30]
  4184a8:	add    rsi,rcx
  4184ab:	mov    QWORD PTR [rbp-0x28],rsi
  4184af:	mov    rcx,QWORD PTR [rbp-0x28]
  4184b3:	mov    rdi,rcx
  4184b6:	call   414230 <main@@Base+0x500>
  4184bb:	movzx  edx,ax
  4184be:	mov    ecx,edx
  4184c0:	movzx  edx,WORD PTR [rbp-0x1c]
  4184c4:	add    edx,0x3
  4184c7:	movsxd rsi,edx
  4184ca:	shl    rsi,0x1
  4184ce:	cmp    rcx,rsi
  4184d1:	jb     4184fb <main@@Base+0x47cb>
  4184d7:	mov    rax,QWORD PTR [rbp-0x28]
  4184db:	movzx  ecx,WORD PTR [rbp-0x1c]
  4184df:	movsxd rdx,ecx
  4184e2:	shl    rdx,0x1
  4184e6:	add    rax,rdx
  4184e9:	add    rax,0x4
  4184ef:	mov    rdi,rax
  4184f2:	call   414230 <main@@Base+0x500>
  4184f7:	mov    WORD PTR [rbp-0x1a],ax
  4184fb:	cmp    WORD PTR [rbp-0x1a],0x0
  418500:	je     418546 <main@@Base+0x4816>
  418506:	mov    rax,QWORD PTR [rbp-0x10]
  41850a:	movzx  ecx,WORD PTR [rbp-0x1a]
  41850e:	movsxd rdx,ecx
  418511:	add    rax,rdx
  418514:	mov    QWORD PTR [rbp-0x18],rax
  418518:	mov    rax,QWORD PTR [rbp-0x18]
  41851c:	add    rax,0x4
  418522:	mov    rdx,QWORD PTR [rbp-0x18]
  418526:	mov    rdi,rdx
  418529:	mov    QWORD PTR [rbp-0x38],rax
  41852d:	call   4141e0 <main@@Base+0x4b0>
  418532:	mov    eax,eax
  418534:	mov    edx,eax
  418536:	mov    rsi,QWORD PTR [rbp-0x38]
  41853a:	add    rsi,rdx
  41853d:	mov    QWORD PTR [rbp-0x8],rsi
  418541:	jmp    41854e <main@@Base+0x481e>
  418546:	mov    QWORD PTR [rbp-0x8],0x0
  41854e:	mov    rax,QWORD PTR [rbp-0x8]
  418552:	add    rsp,0x40
  418556:	pop    rbp
  418557:	ret    
  418558:	nop    DWORD PTR [rax+rax*1+0x0]
  418560:	push   rbp
  418561:	mov    rbp,rsp
  418564:	sub    rsp,0x20
  418568:	mov    QWORD PTR [rbp-0x8],rdi
  41856c:	mov    QWORD PTR [rbp-0x10],rsi
  418570:	mov    rax,QWORD PTR [rbp-0x8]
  418574:	mov    rcx,QWORD PTR [rbp-0x10]
  418578:	shl    rcx,0x2
  41857c:	add    rax,rcx
  41857f:	mov    QWORD PTR [rbp-0x18],rax
  418583:	mov    rax,QWORD PTR [rbp-0x8]
  418587:	mov    rdi,rax
  41858a:	call   416550 <main@@Base+0x2820>
  41858f:	cmp    rax,QWORD PTR [rbp-0x10]
  418593:	jbe    4185ad <main@@Base+0x487d>
  418599:	mov    al,0x1
  41859b:	test   al,0x1
  41859d:	jne    4185a8 <main@@Base+0x4878>
  4185a3:	jmp    4185ad <main@@Base+0x487d>
  4185a8:	jmp    4185cc <main@@Base+0x489c>
  4185ad:	lea    rdi,[rip+0xcf05]        # 4254b9 <_IO_stdin_used@@Base+0x34b9>
  4185b4:	lea    rsi,[rip+0xcf35]        # 4254f0 <_IO_stdin_used@@Base+0x34f0>
  4185bb:	mov    edx,0x77
  4185c0:	lea    rcx,[rip+0xe3a6]        # 42696d <_IO_stdin_used@@Base+0x496d>
  4185c7:	call   404090 <__assert_fail@plt>
  4185cc:	mov    rax,QWORD PTR [rbp-0x18]
  4185d0:	mov    rcx,QWORD PTR [rbp-0x18]
  4185d4:	mov    rdi,rcx
  4185d7:	mov    QWORD PTR [rbp-0x20],rax
  4185db:	call   4141e0 <main@@Base+0x4b0>
  4185e0:	mov    eax,eax
  4185e2:	mov    ecx,eax
  4185e4:	mov    rdx,QWORD PTR [rbp-0x20]
  4185e8:	add    rdx,rcx
  4185eb:	add    rdx,0x4
  4185f2:	mov    rax,rdx
  4185f5:	add    rsp,0x20
  4185f9:	pop    rbp
  4185fa:	ret    
  4185fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418600:	push   rbp
  418601:	mov    rbp,rsp
  418604:	sub    rsp,0x20
  418608:	mov    QWORD PTR [rbp-0x8],rdi
  41860c:	mov    DWORD PTR [rbp-0xc],esi
  41860f:	cmp    DWORD PTR [rbp-0xc],0x0
  418613:	je     418648 <main@@Base+0x4918>
  418619:	mov    rdi,QWORD PTR [rbp-0x8]
  41861d:	mov    esi,0xd
  418622:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  418627:	mov    QWORD PTR [rbp-0x18],rax
  41862b:	cmp    rax,0x0
  41862f:	je     418648 <main@@Base+0x4918>
  418635:	xor    eax,eax
  418637:	mov    ecx,DWORD PTR [rbp-0xc]
  41863a:	mov    rdx,QWORD PTR [rbp-0x18]
  41863e:	mov    DWORD PTR [rdx],ecx
  418640:	mov    DWORD PTR [rbp-0x1c],eax
  418643:	jmp    418655 <main@@Base+0x4925>
  418648:	mov    eax,0xffffffff
  41864d:	mov    DWORD PTR [rbp-0x1c],eax
  418650:	jmp    418655 <main@@Base+0x4925>
  418655:	mov    eax,DWORD PTR [rbp-0x1c]
  418658:	add    rsp,0x20
  41865c:	pop    rbp
  41865d:	ret    
  41865e:	xchg   ax,ax
  418660:	push   rbp
  418661:	mov    rbp,rsp
  418664:	sub    rsp,0x40
  418668:	mov    QWORD PTR [rbp-0x10],rdi
  41866c:	mov    WORD PTR [rbp-0x1a],0x0
  418672:	cmp    QWORD PTR [rbp-0x10],0x0
  418677:	je     418691 <main@@Base+0x4961>
  41867d:	mov    al,0x1
  41867f:	test   al,0x1
  418681:	jne    41868c <main@@Base+0x495c>
  418687:	jmp    418691 <main@@Base+0x4961>
  41868c:	jmp    4186b0 <main@@Base+0x4980>
  418691:	lea    rdi,[rip+0xc400]        # 424a98 <_IO_stdin_used@@Base+0x2a98>
  418698:	lea    rsi,[rip+0xc41f]        # 424abe <_IO_stdin_used@@Base+0x2abe>
  41869f:	mov    edx,0x2d0
  4186a4:	lea    rcx,[rip+0xe36c]        # 426a17 <_IO_stdin_used@@Base+0x4a17>
  4186ab:	call   404090 <__assert_fail@plt>
  4186b0:	mov    WORD PTR [rbp-0x1c],0xd
  4186b6:	mov    rax,QWORD PTR [rbp-0x10]
  4186ba:	mov    rcx,QWORD PTR [rbp-0x10]
  4186be:	mov    rdi,rcx
  4186c1:	mov    QWORD PTR [rbp-0x30],rax
  4186c5:	call   414210 <main@@Base+0x4e0>
  4186ca:	xor    edx,edx
  4186cc:	mov    ecx,edx
  4186ce:	movsxd rsi,eax
  4186d1:	sub    rcx,rsi
  4186d4:	mov    rsi,QWORD PTR [rbp-0x30]
  4186d8:	add    rsi,rcx
  4186db:	mov    QWORD PTR [rbp-0x28],rsi
  4186df:	mov    rcx,QWORD PTR [rbp-0x28]
  4186e3:	mov    rdi,rcx
  4186e6:	call   414230 <main@@Base+0x500>
  4186eb:	movzx  edx,ax
  4186ee:	mov    ecx,edx
  4186f0:	movzx  edx,WORD PTR [rbp-0x1c]
  4186f4:	add    edx,0x3
  4186f7:	movsxd rsi,edx
  4186fa:	shl    rsi,0x1
  4186fe:	cmp    rcx,rsi
  418701:	jb     41872b <main@@Base+0x49fb>
  418707:	mov    rax,QWORD PTR [rbp-0x28]
  41870b:	movzx  ecx,WORD PTR [rbp-0x1c]
  41870f:	movsxd rdx,ecx
  418712:	shl    rdx,0x1
  418716:	add    rax,rdx
  418719:	add    rax,0x4
  41871f:	mov    rdi,rax
  418722:	call   414230 <main@@Base+0x500>
  418727:	mov    WORD PTR [rbp-0x1a],ax
  41872b:	cmp    WORD PTR [rbp-0x1a],0x0
  418730:	je     418776 <main@@Base+0x4a46>
  418736:	mov    rax,QWORD PTR [rbp-0x10]
  41873a:	movzx  ecx,WORD PTR [rbp-0x1a]
  41873e:	movsxd rdx,ecx
  418741:	add    rax,rdx
  418744:	mov    QWORD PTR [rbp-0x18],rax
  418748:	mov    rax,QWORD PTR [rbp-0x18]
  41874c:	add    rax,0x4
  418752:	mov    rdx,QWORD PTR [rbp-0x18]
  418756:	mov    rdi,rdx
  418759:	mov    QWORD PTR [rbp-0x38],rax
  41875d:	call   4141e0 <main@@Base+0x4b0>
  418762:	mov    eax,eax
  418764:	mov    edx,eax
  418766:	mov    rsi,QWORD PTR [rbp-0x38]
  41876a:	add    rsi,rdx
  41876d:	mov    QWORD PTR [rbp-0x8],rsi
  418771:	jmp    41877e <main@@Base+0x4a4e>
  418776:	mov    QWORD PTR [rbp-0x8],0x0
  41877e:	mov    rax,QWORD PTR [rbp-0x8]
  418782:	add    rsp,0x40
  418786:	pop    rbp
  418787:	ret    
  418788:	nop    DWORD PTR [rax+rax*1+0x0]
  418790:	push   rbp
  418791:	mov    rbp,rsp
  418794:	sub    rsp,0x40
  418798:	mov    QWORD PTR [rbp-0x10],rdi
  41879c:	vmovss DWORD PTR [rbp-0x14],xmm0
  4187a1:	vmovss DWORD PTR [rbp-0x18],xmm1
  4187a6:	vmovss DWORD PTR [rbp-0x1c],xmm2
  4187ab:	vmovsd QWORD PTR [rbp-0x28],xmm3
  4187b0:	mov    BYTE PTR [rbp-0x29],sil
  4187b4:	mov    WORD PTR [rbp-0x2c],dx
  4187b8:	mov    BYTE PTR [rbp-0x2d],cl
  4187bb:	mov    rdi,QWORD PTR [rbp-0x10]
  4187bf:	call   418830 <main@@Base+0x4b00>
  4187c4:	mov    QWORD PTR [rbp-0x38],rax
  4187c8:	cmp    QWORD PTR [rbp-0x38],0x0
  4187cd:	jne    4187df <main@@Base+0x4aaf>
  4187d3:	mov    DWORD PTR [rbp-0x4],0x0
  4187da:	jmp    41881d <main@@Base+0x4aed>
  4187df:	mov    rdi,QWORD PTR [rbp-0x38]
  4187e3:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4187e8:	vmovss xmm1,DWORD PTR [rbp-0x18]
  4187ed:	vmovss xmm2,DWORD PTR [rbp-0x1c]
  4187f2:	vmovsd xmm3,QWORD PTR [rbp-0x28]
  4187f7:	mov    al,BYTE PTR [rbp-0x29]
  4187fa:	mov    cx,WORD PTR [rbp-0x2c]
  4187fe:	movsx  esi,al
  418801:	movsx  edx,cx
  418804:	movsx  ecx,BYTE PTR [rbp-0x2d]
  418808:	call   418860 <main@@Base+0x4b30>
  41880d:	mov    rdi,QWORD PTR [rbp-0x10]
  418811:	mov    QWORD PTR [rbp-0x40],rax
  418815:	call   418920 <main@@Base+0x4bf0>
  41881a:	mov    DWORD PTR [rbp-0x4],eax
  41881d:	mov    eax,DWORD PTR [rbp-0x4]
  418820:	add    rsp,0x40
  418824:	pop    rbp
  418825:	ret    
  418826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418830:	push   rbp
  418831:	mov    rbp,rsp
  418834:	sub    rsp,0x10
  418838:	mov    QWORD PTR [rbp-0x8],rdi
  41883c:	mov    rdi,QWORD PTR [rbp-0x8]
  418840:	mov    esi,0x20
  418845:	mov    edx,0x10
  41884a:	call   41a460 <flatcc_builder_start_struct@@Base>
  41884f:	add    rsp,0x10
  418853:	pop    rbp
  418854:	ret    
  418855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41885f:	nop
  418860:	push   rbp
  418861:	mov    rbp,rsp
  418864:	sub    rsp,0x50
  418868:	mov    QWORD PTR [rbp-0x8],rdi
  41886c:	vmovss DWORD PTR [rbp-0xc],xmm0
  418871:	vmovss DWORD PTR [rbp-0x10],xmm1
  418876:	vmovss DWORD PTR [rbp-0x14],xmm2
  41887b:	vmovsd QWORD PTR [rbp-0x20],xmm3
  418880:	mov    BYTE PTR [rbp-0x21],sil
  418884:	mov    WORD PTR [rbp-0x24],dx
  418888:	mov    BYTE PTR [rbp-0x25],cl
  41888b:	mov    rdi,QWORD PTR [rbp-0x8]
  41888f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  418894:	call   414c00 <main@@Base+0xed0>
  418899:	mov    rdi,QWORD PTR [rbp-0x8]
  41889d:	add    rdi,0x4
  4188a4:	vmovss xmm0,DWORD PTR [rbp-0x10]
  4188a9:	mov    QWORD PTR [rbp-0x30],rax
  4188ad:	call   414c00 <main@@Base+0xed0>
  4188b2:	mov    rdi,QWORD PTR [rbp-0x8]
  4188b6:	add    rdi,0x8
  4188bd:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4188c2:	mov    QWORD PTR [rbp-0x38],rax
  4188c6:	call   414c00 <main@@Base+0xed0>
  4188cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4188cf:	add    rdi,0x10
  4188d6:	vmovsd xmm0,QWORD PTR [rbp-0x20]
  4188db:	mov    QWORD PTR [rbp-0x40],rax
  4188df:	call   414b20 <main@@Base+0xdf0>
  4188e4:	mov    cl,BYTE PTR [rbp-0x21]
  4188e7:	mov    rdi,QWORD PTR [rbp-0x8]
  4188eb:	mov    BYTE PTR [rdi+0x18],cl
  4188ee:	mov    rdi,QWORD PTR [rbp-0x8]
  4188f2:	add    rdi,0x1a
  4188f9:	mov    dx,WORD PTR [rbp-0x24]
  4188fd:	movsx  esi,dx
  418900:	movsx  edx,BYTE PTR [rbp-0x25]
  418904:	mov    QWORD PTR [rbp-0x48],rax
  418908:	call   418940 <main@@Base+0x4c10>
  41890d:	mov    rdi,QWORD PTR [rbp-0x8]
  418911:	mov    QWORD PTR [rbp-0x50],rax
  418915:	mov    rax,rdi
  418918:	add    rsp,0x50
  41891c:	pop    rbp
  41891d:	ret    
  41891e:	xchg   ax,ax
  418920:	push   rbp
  418921:	mov    rbp,rsp
  418924:	sub    rsp,0x10
  418928:	mov    QWORD PTR [rbp-0x8],rdi
  41892c:	mov    rdi,QWORD PTR [rbp-0x8]
  418930:	call   41a600 <flatcc_builder_end_struct@@Base>
  418935:	add    rsp,0x10
  418939:	pop    rbp
  41893a:	ret    
  41893b:	nop    DWORD PTR [rax+rax*1+0x0]
  418940:	push   rbp
  418941:	mov    rbp,rsp
  418944:	sub    rsp,0x20
  418948:	mov    QWORD PTR [rbp-0x8],rdi
  41894c:	mov    WORD PTR [rbp-0xa],si
  418950:	mov    BYTE PTR [rbp-0xb],dl
  418953:	mov    rdi,QWORD PTR [rbp-0x8]
  418957:	movsx  esi,WORD PTR [rbp-0xa]
  41895b:	call   414c50 <main@@Base+0xf20>
  418960:	mov    cl,BYTE PTR [rbp-0xb]
  418963:	mov    rdi,QWORD PTR [rbp-0x8]
  418967:	mov    BYTE PTR [rdi+0x2],cl
  41896a:	mov    rdi,QWORD PTR [rbp-0x8]
  41896e:	mov    QWORD PTR [rbp-0x18],rax
  418972:	mov    rax,rdi
  418975:	add    rsp,0x20
  418979:	pop    rbp
  41897a:	ret    
  41897b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418980 <flatcc_builder_default_alloc@@Base>:
  418980:	push   rbp
  418981:	mov    rbp,rsp
  418984:	sub    rsp,0x40
  418988:	mov    QWORD PTR [rbp-0x10],rdi
  41898c:	mov    QWORD PTR [rbp-0x18],rsi
  418990:	mov    QWORD PTR [rbp-0x20],rdx
  418994:	mov    DWORD PTR [rbp-0x24],ecx
  418997:	mov    DWORD PTR [rbp-0x28],r8d
  41899b:	cmp    QWORD PTR [rbp-0x20],0x0
  4189a0:	jne    4189e3 <flatcc_builder_default_alloc@@Base+0x63>
  4189a6:	mov    rax,QWORD PTR [rbp-0x18]
  4189aa:	cmp    QWORD PTR [rax],0x0
  4189ae:	je     4189d7 <flatcc_builder_default_alloc@@Base+0x57>
  4189b4:	mov    rax,QWORD PTR [rbp-0x18]
  4189b8:	mov    rdi,QWORD PTR [rax]
  4189bb:	call   404030 <free@plt>
  4189c0:	mov    rax,QWORD PTR [rbp-0x18]
  4189c4:	mov    QWORD PTR [rax],0x0
  4189cb:	mov    rax,QWORD PTR [rbp-0x18]
  4189cf:	mov    QWORD PTR [rax+0x8],0x0
  4189d7:	mov    DWORD PTR [rbp-0x4],0x0
  4189de:	jmp    418b28 <flatcc_builder_default_alloc@@Base+0x1a8>
  4189e3:	mov    eax,DWORD PTR [rbp-0x28]
  4189e6:	dec    eax
  4189e8:	mov    ecx,eax
  4189ea:	sub    eax,0x6
  4189ed:	mov    QWORD PTR [rbp-0x40],rcx
  4189f1:	ja     418a3f <flatcc_builder_default_alloc@@Base+0xbf>
  4189f7:	lea    rax,[rip+0xe192]        # 426b90 <_IO_stdin_used@@Base+0x4b90>
  4189fe:	mov    rcx,QWORD PTR [rbp-0x40]
  418a02:	movsxd rdx,DWORD PTR [rax+rcx*4]
  418a06:	add    rdx,rax
  418a09:	jmp    rdx
  418a0b:	mov    QWORD PTR [rbp-0x38],0x100
  418a13:	jmp    418a47 <flatcc_builder_default_alloc@@Base+0xc7>
  418a18:	mov    rax,QWORD PTR [rbp-0x20]
  418a1c:	mov    QWORD PTR [rbp-0x38],rax
  418a20:	jmp    418a47 <flatcc_builder_default_alloc@@Base+0xc7>
  418a25:	mov    QWORD PTR [rbp-0x38],0x120
  418a2d:	jmp    418a47 <flatcc_builder_default_alloc@@Base+0xc7>
  418a32:	mov    QWORD PTR [rbp-0x38],0x40
  418a3a:	jmp    418a47 <flatcc_builder_default_alloc@@Base+0xc7>
  418a3f:	mov    QWORD PTR [rbp-0x38],0x20
  418a47:	jmp    418a4c <flatcc_builder_default_alloc@@Base+0xcc>
  418a4c:	mov    rax,QWORD PTR [rbp-0x38]
  418a50:	cmp    rax,QWORD PTR [rbp-0x20]
  418a54:	jae    418a6b <flatcc_builder_default_alloc@@Base+0xeb>
  418a5a:	mov    rax,QWORD PTR [rbp-0x38]
  418a5e:	shl    rax,0x1
  418a62:	mov    QWORD PTR [rbp-0x38],rax
  418a66:	jmp    418a4c <flatcc_builder_default_alloc@@Base+0xcc>
  418a6b:	mov    rax,QWORD PTR [rbp-0x20]
  418a6f:	mov    rcx,QWORD PTR [rbp-0x18]
  418a73:	cmp    rax,QWORD PTR [rcx+0x8]
  418a77:	ja     418a9f <flatcc_builder_default_alloc@@Base+0x11f>
  418a7d:	mov    rax,QWORD PTR [rbp-0x18]
  418a81:	mov    rax,QWORD PTR [rax+0x8]
  418a85:	shr    rax,0x1
  418a89:	cmp    rax,QWORD PTR [rbp-0x38]
  418a8d:	jb     418a9f <flatcc_builder_default_alloc@@Base+0x11f>
  418a93:	mov    DWORD PTR [rbp-0x4],0x0
  418a9a:	jmp    418b28 <flatcc_builder_default_alloc@@Base+0x1a8>
  418a9f:	mov    rax,QWORD PTR [rbp-0x18]
  418aa3:	mov    rdi,QWORD PTR [rax]
  418aa6:	mov    rsi,QWORD PTR [rbp-0x38]
  418aaa:	call   404110 <realloc@plt>
  418aaf:	mov    QWORD PTR [rbp-0x30],rax
  418ab3:	cmp    rax,0x0
  418ab7:	jne    418ac9 <flatcc_builder_default_alloc@@Base+0x149>
  418abd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418ac4:	jmp    418b28 <flatcc_builder_default_alloc@@Base+0x1a8>
  418ac9:	cmp    DWORD PTR [rbp-0x24],0x0
  418acd:	je     418b0a <flatcc_builder_default_alloc@@Base+0x18a>
  418ad3:	mov    rax,QWORD PTR [rbp-0x18]
  418ad7:	mov    rax,QWORD PTR [rax+0x8]
  418adb:	cmp    rax,QWORD PTR [rbp-0x38]
  418adf:	jae    418b0a <flatcc_builder_default_alloc@@Base+0x18a>
  418ae5:	xor    esi,esi
  418ae7:	mov    rax,QWORD PTR [rbp-0x30]
  418aeb:	mov    rcx,QWORD PTR [rbp-0x18]
  418aef:	add    rax,QWORD PTR [rcx+0x8]
  418af3:	mov    rcx,QWORD PTR [rbp-0x38]
  418af7:	mov    rdx,QWORD PTR [rbp-0x18]
  418afb:	sub    rcx,QWORD PTR [rdx+0x8]
  418aff:	mov    rdi,rax
  418b02:	mov    rdx,rcx
  418b05:	call   4040a0 <memset@plt>
  418b0a:	mov    rax,QWORD PTR [rbp-0x30]
  418b0e:	mov    rcx,QWORD PTR [rbp-0x18]
  418b12:	mov    QWORD PTR [rcx],rax
  418b15:	mov    rax,QWORD PTR [rbp-0x38]
  418b19:	mov    rcx,QWORD PTR [rbp-0x18]
  418b1d:	mov    QWORD PTR [rcx+0x8],rax
  418b21:	mov    DWORD PTR [rbp-0x4],0x0
  418b28:	mov    eax,DWORD PTR [rbp-0x4]
  418b2b:	add    rsp,0x40
  418b2f:	pop    rbp
  418b30:	ret    
  418b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418b40 <flatcc_builder_flush_vtable_cache@@Base>:
  418b40:	push   rbp
  418b41:	mov    rbp,rsp
  418b44:	sub    rsp,0x10
  418b48:	mov    QWORD PTR [rbp-0x8],rdi
  418b4c:	mov    rax,QWORD PTR [rbp-0x8]
  418b50:	add    rax,0x58
  418b56:	add    rax,0x50
  418b5c:	mov    QWORD PTR [rbp-0x10],rax
  418b60:	mov    rax,QWORD PTR [rbp-0x8]
  418b64:	cmp    QWORD PTR [rax+0xd8],0x0
  418b6c:	jne    418b77 <flatcc_builder_flush_vtable_cache@@Base+0x37>
  418b72:	jmp    418ba9 <flatcc_builder_flush_vtable_cache@@Base+0x69>
  418b77:	xor    esi,esi
  418b79:	mov    rax,QWORD PTR [rbp-0x10]
  418b7d:	mov    rdi,QWORD PTR [rax]
  418b80:	mov    rax,QWORD PTR [rbp-0x10]
  418b84:	mov    rdx,QWORD PTR [rax+0x8]
  418b88:	call   4040a0 <memset@plt>
  418b8d:	mov    rax,QWORD PTR [rbp-0x8]
  418b91:	mov    DWORD PTR [rax+0xe4],0x10
  418b9b:	mov    rax,QWORD PTR [rbp-0x8]
  418b9f:	mov    DWORD PTR [rax+0xe0],0x0
  418ba9:	add    rsp,0x10
  418bad:	pop    rbp
  418bae:	ret    
  418baf:	nop

0000000000418bb0 <flatcc_builder_custom_init@@Base>:
  418bb0:	push   rbp
  418bb1:	mov    rbp,rsp
  418bb4:	sub    rsp,0x30
  418bb8:	xor    eax,eax
  418bba:	mov    QWORD PTR [rbp-0x8],rdi
  418bbe:	mov    QWORD PTR [rbp-0x10],rsi
  418bc2:	mov    QWORD PTR [rbp-0x18],rdx
  418bc6:	mov    QWORD PTR [rbp-0x20],rcx
  418bca:	mov    QWORD PTR [rbp-0x28],r8
  418bce:	mov    rcx,QWORD PTR [rbp-0x8]
  418bd2:	mov    rdi,rcx
  418bd5:	mov    esi,eax
  418bd7:	mov    edx,0x188
  418bdc:	call   4040a0 <memset@plt>
  418be1:	cmp    QWORD PTR [rbp-0x10],0x0
  418be6:	jne    418c13 <flatcc_builder_custom_init@@Base+0x63>
  418bec:	lea    rax,[rip+0x5e5d]        # 41ea50 <flatcc_emitter@@Base>
  418bf3:	mov    rcx,QWORD PTR [rbp-0x8]
  418bf7:	mov    DWORD PTR [rcx+0x128],0x1
  418c01:	mov    QWORD PTR [rbp-0x10],rax
  418c05:	mov    rax,QWORD PTR [rbp-0x8]
  418c09:	add    rax,0x130
  418c0f:	mov    QWORD PTR [rbp-0x18],rax
  418c13:	cmp    QWORD PTR [rbp-0x20],0x0
  418c18:	jne    418c29 <flatcc_builder_custom_init@@Base+0x79>
  418c1e:	lea    rax,[rip+0xfffffffffffffd5b]        # 418980 <flatcc_builder_default_alloc@@Base>
  418c25:	mov    QWORD PTR [rbp-0x20],rax
  418c29:	xor    eax,eax
  418c2b:	mov    rcx,QWORD PTR [rbp-0x28]
  418c2f:	mov    rdx,QWORD PTR [rbp-0x8]
  418c33:	mov    QWORD PTR [rdx+0x40],rcx
  418c37:	mov    rcx,QWORD PTR [rbp-0x20]
  418c3b:	mov    rdx,QWORD PTR [rbp-0x8]
  418c3f:	mov    QWORD PTR [rdx+0x50],rcx
  418c43:	mov    rcx,QWORD PTR [rbp-0x18]
  418c47:	mov    rdx,QWORD PTR [rbp-0x8]
  418c4b:	mov    QWORD PTR [rdx+0x38],rcx
  418c4f:	mov    rcx,QWORD PTR [rbp-0x10]
  418c53:	mov    rdx,QWORD PTR [rbp-0x8]
  418c57:	mov    QWORD PTR [rdx+0x48],rcx
  418c5b:	add    rsp,0x30
  418c5f:	pop    rbp
  418c60:	ret    
  418c61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418c70 <flatcc_builder_init@@Base>:
  418c70:	push   rbp
  418c71:	mov    rbp,rsp
  418c74:	sub    rsp,0x10
  418c78:	xor    eax,eax
  418c7a:	mov    ecx,eax
  418c7c:	mov    QWORD PTR [rbp-0x8],rdi
  418c80:	mov    rdi,QWORD PTR [rbp-0x8]
  418c84:	mov    rsi,rcx
  418c87:	mov    rdx,rcx
  418c8a:	mov    QWORD PTR [rbp-0x10],rcx
  418c8e:	mov    r8,QWORD PTR [rbp-0x10]
  418c92:	call   418bb0 <flatcc_builder_custom_init@@Base>
  418c97:	add    rsp,0x10
  418c9b:	pop    rbp
  418c9c:	ret    
  418c9d:	nop    DWORD PTR [rax]

0000000000418ca0 <flatcc_builder_custom_reset@@Base>:
  418ca0:	push   rbp
  418ca1:	mov    rbp,rsp
  418ca4:	sub    rsp,0x30
  418ca8:	mov    QWORD PTR [rbp-0x10],rdi
  418cac:	mov    DWORD PTR [rbp-0x14],esi
  418caf:	mov    DWORD PTR [rbp-0x18],edx
  418cb2:	mov    DWORD PTR [rbp-0x24],0x0
  418cb9:	cmp    DWORD PTR [rbp-0x24],0x8
  418cbd:	jge    418d9d <flatcc_builder_custom_reset@@Base+0xfd>
  418cc3:	mov    rax,QWORD PTR [rbp-0x10]
  418cc7:	add    rax,0x58
  418ccd:	movsxd rcx,DWORD PTR [rbp-0x24]
  418cd1:	shl    rcx,0x4
  418cd5:	add    rax,rcx
  418cd8:	mov    QWORD PTR [rbp-0x20],rax
  418cdc:	mov    rax,QWORD PTR [rbp-0x20]
  418ce0:	cmp    QWORD PTR [rax],0x0
  418ce4:	je     418d52 <flatcc_builder_custom_reset@@Base+0xb2>
  418cea:	cmp    DWORD PTR [rbp-0x24],0x5
  418cee:	je     418d37 <flatcc_builder_custom_reset@@Base+0x97>
  418cf4:	cmp    DWORD PTR [rbp-0x18],0x0
  418cf8:	je     418d37 <flatcc_builder_custom_reset@@Base+0x97>
  418cfe:	mov    rax,QWORD PTR [rbp-0x10]
  418d02:	mov    rax,QWORD PTR [rax+0x50]
  418d06:	mov    rcx,QWORD PTR [rbp-0x10]
  418d0a:	mov    rdi,QWORD PTR [rcx+0x40]
  418d0e:	mov    rsi,QWORD PTR [rbp-0x20]
  418d12:	mov    r8d,DWORD PTR [rbp-0x24]
  418d16:	mov    edx,0x1
  418d1b:	mov    ecx,0x1
  418d20:	call   rax
  418d22:	cmp    eax,0x0
  418d25:	je     418d37 <flatcc_builder_custom_reset@@Base+0x97>
  418d2b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418d32:	jmp    418ede <flatcc_builder_custom_reset@@Base+0x23e>
  418d37:	xor    esi,esi
  418d39:	mov    rax,QWORD PTR [rbp-0x20]
  418d3d:	mov    rdi,QWORD PTR [rax]
  418d40:	mov    rax,QWORD PTR [rbp-0x20]
  418d44:	mov    rdx,QWORD PTR [rax+0x8]
  418d48:	call   4040a0 <memset@plt>
  418d4d:	jmp    418d8a <flatcc_builder_custom_reset@@Base+0xea>
  418d52:	mov    rax,QWORD PTR [rbp-0x20]
  418d56:	cmp    QWORD PTR [rax+0x8],0x0
  418d5b:	jne    418d66 <flatcc_builder_custom_reset@@Base+0xc6>
  418d61:	jmp    418d85 <flatcc_builder_custom_reset@@Base+0xe5>
  418d66:	lea    rdi,[rip+0xe043]        # 426db0 <flatcc_builder_padding_base@@Base+0x200>
  418d6d:	lea    rsi,[rip+0xe04e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  418d74:	mov    edx,0x1b2
  418d79:	lea    rcx,[rip+0xe0a2]        # 426e22 <flatcc_builder_padding_base@@Base+0x272>
  418d80:	call   404090 <__assert_fail@plt>
  418d85:	jmp    418d8a <flatcc_builder_custom_reset@@Base+0xea>
  418d8a:	jmp    418d8f <flatcc_builder_custom_reset@@Base+0xef>
  418d8f:	mov    eax,DWORD PTR [rbp-0x24]
  418d92:	add    eax,0x1
  418d95:	mov    DWORD PTR [rbp-0x24],eax
  418d98:	jmp    418cb9 <flatcc_builder_custom_reset@@Base+0x19>
  418d9d:	mov    rax,QWORD PTR [rbp-0x10]
  418da1:	mov    DWORD PTR [rax+0xe0],0x0
  418dab:	mov    rax,QWORD PTR [rbp-0x10]
  418daf:	cmp    DWORD PTR [rax+0xe4],0x0
  418db6:	jbe    418dca <flatcc_builder_custom_reset@@Base+0x12a>
  418dbc:	mov    rax,QWORD PTR [rbp-0x10]
  418dc0:	mov    DWORD PTR [rax+0xe4],0x10
  418dca:	mov    rax,QWORD PTR [rbp-0x10]
  418dce:	mov    WORD PTR [rax+0xe8],0x0
  418dd7:	mov    rax,QWORD PTR [rbp-0x10]
  418ddb:	mov    DWORD PTR [rax+0xf0],0x0
  418de5:	mov    rax,QWORD PTR [rbp-0x10]
  418de9:	mov    DWORD PTR [rax+0xf4],0x0
  418df3:	mov    rax,QWORD PTR [rbp-0x10]
  418df7:	mov    DWORD PTR [rax+0x104],0x0
  418e01:	mov    rax,QWORD PTR [rbp-0x10]
  418e05:	mov    DWORD PTR [rax+0x108],0x0
  418e0f:	mov    rax,QWORD PTR [rbp-0x10]
  418e13:	mov    DWORD PTR [rax+0x20],0x0
  418e1a:	mov    rax,QWORD PTR [rbp-0x10]
  418e1e:	mov    DWORD PTR [rax+0x24],0x0
  418e25:	mov    rax,QWORD PTR [rbp-0x10]
  418e29:	mov    DWORD PTR [rax+0xfc],0x0
  418e33:	mov    rax,QWORD PTR [rbp-0x10]
  418e37:	mov    DWORD PTR [rax+0x100],0x0
  418e41:	mov    rax,QWORD PTR [rbp-0x10]
  418e45:	mov    rax,QWORD PTR [rax+0x68]
  418e49:	mov    rcx,QWORD PTR [rbp-0x10]
  418e4d:	mov    QWORD PTR [rcx+0x18],rax
  418e51:	mov    rax,QWORD PTR [rbp-0x10]
  418e55:	mov    rax,QWORD PTR [rax+0x88]
  418e5c:	mov    rcx,QWORD PTR [rbp-0x10]
  418e60:	mov    QWORD PTR [rcx],rax
  418e63:	mov    rax,QWORD PTR [rbp-0x10]
  418e67:	mov    rax,QWORD PTR [rax+0x58]
  418e6b:	mov    rcx,QWORD PTR [rbp-0x10]
  418e6f:	mov    QWORD PTR [rcx+0x8],rax
  418e73:	mov    rax,QWORD PTR [rbp-0x10]
  418e77:	mov    QWORD PTR [rax+0x30],0x0
  418e7f:	cmp    DWORD PTR [rbp-0x14],0x0
  418e83:	je     418eb4 <flatcc_builder_custom_reset@@Base+0x214>
  418e89:	mov    rax,QWORD PTR [rbp-0x10]
  418e8d:	mov    QWORD PTR [rax+0x118],0x0
  418e98:	mov    rax,QWORD PTR [rbp-0x10]
  418e9c:	mov    DWORD PTR [rax+0x120],0x0
  418ea6:	mov    rax,QWORD PTR [rbp-0x10]
  418eaa:	mov    DWORD PTR [rax+0x124],0x0
  418eb4:	mov    rax,QWORD PTR [rbp-0x10]
  418eb8:	cmp    DWORD PTR [rax+0x128],0x0
  418ebf:	je     418ed7 <flatcc_builder_custom_reset@@Base+0x237>
  418ec5:	mov    rax,QWORD PTR [rbp-0x10]
  418ec9:	add    rax,0x130
  418ecf:	mov    rdi,rax
  418ed2:	call   41e810 <flatcc_emitter_reset@@Base>
  418ed7:	mov    DWORD PTR [rbp-0x4],0x0
  418ede:	mov    eax,DWORD PTR [rbp-0x4]
  418ee1:	add    rsp,0x30
  418ee5:	pop    rbp
  418ee6:	ret    
  418ee7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418ef0 <flatcc_builder_reset@@Base>:
  418ef0:	push   rbp
  418ef1:	mov    rbp,rsp
  418ef4:	sub    rsp,0x10
  418ef8:	xor    eax,eax
  418efa:	mov    QWORD PTR [rbp-0x8],rdi
  418efe:	mov    rdi,QWORD PTR [rbp-0x8]
  418f02:	mov    esi,eax
  418f04:	mov    edx,eax
  418f06:	call   418ca0 <flatcc_builder_custom_reset@@Base>
  418f0b:	add    rsp,0x10
  418f0f:	pop    rbp
  418f10:	ret    
  418f11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418f20 <flatcc_builder_clear@@Base>:
  418f20:	push   rbp
  418f21:	mov    rbp,rsp
  418f24:	sub    rsp,0x20
  418f28:	mov    QWORD PTR [rbp-0x8],rdi
  418f2c:	mov    DWORD PTR [rbp-0x14],0x0
  418f33:	cmp    DWORD PTR [rbp-0x14],0x8
  418f37:	jge    418f93 <flatcc_builder_clear@@Base+0x73>
  418f3d:	xor    eax,eax
  418f3f:	mov    edx,eax
  418f41:	xor    ecx,ecx
  418f43:	mov    rsi,QWORD PTR [rbp-0x8]
  418f47:	add    rsi,0x58
  418f4e:	movsxd rdi,DWORD PTR [rbp-0x14]
  418f52:	shl    rdi,0x4
  418f56:	add    rsi,rdi
  418f59:	mov    QWORD PTR [rbp-0x10],rsi
  418f5d:	mov    rsi,QWORD PTR [rbp-0x8]
  418f61:	mov    rsi,QWORD PTR [rsi+0x50]
  418f65:	mov    rdi,QWORD PTR [rbp-0x8]
  418f69:	mov    rdi,QWORD PTR [rdi+0x40]
  418f6d:	mov    r8,QWORD PTR [rbp-0x10]
  418f71:	mov    eax,DWORD PTR [rbp-0x14]
  418f74:	mov    QWORD PTR [rbp-0x20],rsi
  418f78:	mov    rsi,r8
  418f7b:	mov    r8d,eax
  418f7e:	mov    r9,QWORD PTR [rbp-0x20]
  418f82:	call   r9
  418f85:	mov    eax,DWORD PTR [rbp-0x14]
  418f88:	add    eax,0x1
  418f8b:	mov    DWORD PTR [rbp-0x14],eax
  418f8e:	jmp    418f33 <flatcc_builder_clear@@Base+0x13>
  418f93:	mov    rax,QWORD PTR [rbp-0x8]
  418f97:	cmp    DWORD PTR [rax+0x128],0x0
  418f9e:	je     418fb6 <flatcc_builder_clear@@Base+0x96>
  418fa4:	mov    rax,QWORD PTR [rbp-0x8]
  418fa8:	add    rax,0x130
  418fae:	mov    rdi,rax
  418fb1:	call   41e9b0 <flatcc_emitter_clear@@Base>
  418fb6:	xor    esi,esi
  418fb8:	mov    rax,QWORD PTR [rbp-0x8]
  418fbc:	mov    rdi,rax
  418fbf:	mov    edx,0x188
  418fc4:	call   4040a0 <memset@plt>
  418fc9:	add    rsp,0x20
  418fcd:	pop    rbp
  418fce:	ret    
  418fcf:	nop

0000000000418fd0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  418fd0:	push   rbp
  418fd1:	mov    rbp,rsp
  418fd4:	sub    rsp,0x20
  418fd8:	xor    r8d,r8d
  418fdb:	mov    QWORD PTR [rbp-0x10],rdi
  418fdf:	mov    QWORD PTR [rbp-0x18],rsi
  418fe3:	mov    rax,QWORD PTR [rbp-0x18]
  418fe7:	add    rax,0x8
  418fed:	sub    rax,0x1
  418ff3:	and    rax,0xfffffffffffffff8
  418ff9:	add    rax,0x8
  418fff:	mov    QWORD PTR [rbp-0x18],rax
  419003:	mov    rdi,QWORD PTR [rbp-0x10]
  419007:	mov    rax,QWORD PTR [rbp-0x10]
  41900b:	mov    rdx,QWORD PTR [rax+0x180]
  419012:	mov    rcx,QWORD PTR [rbp-0x18]
  419016:	mov    esi,0x7
  41901b:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  419020:	mov    QWORD PTR [rbp-0x20],rax
  419024:	cmp    rax,0x0
  419028:	jne    41903b <flatcc_builder_enter_user_frame_ptr@@Base+0x6b>
  41902e:	mov    QWORD PTR [rbp-0x8],0x0
  419036:	jmp    4190a7 <flatcc_builder_enter_user_frame_ptr@@Base+0xd7>
  41903b:	xor    esi,esi
  41903d:	mov    rax,QWORD PTR [rbp-0x20]
  419041:	mov    rdx,QWORD PTR [rbp-0x18]
  419045:	mov    rdi,rax
  419048:	call   4040a0 <memset@plt>
  41904d:	mov    rax,QWORD PTR [rbp-0x10]
  419051:	mov    rax,QWORD PTR [rax+0x178]
  419058:	mov    rcx,QWORD PTR [rbp-0x20]
  41905c:	mov    rdx,rcx
  41905f:	add    rdx,0x8
  419066:	mov    QWORD PTR [rbp-0x20],rdx
  41906a:	mov    QWORD PTR [rcx],rax
  41906d:	mov    rax,QWORD PTR [rbp-0x10]
  419071:	mov    rax,QWORD PTR [rax+0x180]
  419078:	add    rax,0x8
  41907e:	mov    rcx,QWORD PTR [rbp-0x10]
  419082:	mov    QWORD PTR [rcx+0x178],rax
  419089:	mov    rax,QWORD PTR [rbp-0x18]
  41908d:	mov    rcx,QWORD PTR [rbp-0x10]
  419091:	add    rax,QWORD PTR [rcx+0x180]
  419098:	mov    QWORD PTR [rcx+0x180],rax
  41909f:	mov    rax,QWORD PTR [rbp-0x20]
  4190a3:	mov    QWORD PTR [rbp-0x8],rax
  4190a7:	mov    rax,QWORD PTR [rbp-0x8]
  4190ab:	add    rsp,0x20
  4190af:	pop    rbp
  4190b0:	ret    
  4190b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4190c0:	push   rbp
  4190c1:	mov    rbp,rsp
  4190c4:	sub    rsp,0x40
  4190c8:	mov    QWORD PTR [rbp-0x8],rdi
  4190cc:	mov    DWORD PTR [rbp-0xc],esi
  4190cf:	mov    QWORD PTR [rbp-0x18],rdx
  4190d3:	mov    QWORD PTR [rbp-0x20],rcx
  4190d7:	mov    DWORD PTR [rbp-0x24],r8d
  4190db:	mov    rax,QWORD PTR [rbp-0x8]
  4190df:	add    rax,0x58
  4190e5:	movsxd rcx,DWORD PTR [rbp-0xc]
  4190e9:	shl    rcx,0x4
  4190ed:	add    rax,rcx
  4190f0:	mov    QWORD PTR [rbp-0x30],rax
  4190f4:	mov    rax,QWORD PTR [rbp-0x18]
  4190f8:	add    rax,QWORD PTR [rbp-0x20]
  4190fc:	mov    rcx,QWORD PTR [rbp-0x30]
  419100:	cmp    rax,QWORD PTR [rcx+0x8]
  419104:	jbe    419165 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  41910a:	mov    rax,QWORD PTR [rbp-0x8]
  41910e:	mov    rax,QWORD PTR [rax+0x50]
  419112:	mov    rcx,QWORD PTR [rbp-0x8]
  419116:	mov    rdi,QWORD PTR [rcx+0x40]
  41911a:	mov    rsi,QWORD PTR [rbp-0x30]
  41911e:	mov    rcx,QWORD PTR [rbp-0x18]
  419122:	add    rcx,QWORD PTR [rbp-0x20]
  419126:	mov    edx,DWORD PTR [rbp-0x24]
  419129:	mov    r8d,DWORD PTR [rbp-0xc]
  41912d:	mov    DWORD PTR [rbp-0x34],edx
  419130:	mov    rdx,rcx
  419133:	mov    ecx,DWORD PTR [rbp-0x34]
  419136:	call   rax
  419138:	cmp    eax,0x0
  41913b:	je     419160 <flatcc_builder_enter_user_frame_ptr@@Base+0x190>
  419141:	lea    rdi,[rip+0xee3a]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  419148:	lea    rsi,[rip+0xdc73]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41914f:	mov    edx,0x134
  419154:	lea    rcx,[rip+0xec61]        # 427dbc <flatcc_builder_padding_base@@Base+0x120c>
  41915b:	call   404090 <__assert_fail@plt>
  419160:	jmp    419165 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  419165:	mov    rax,QWORD PTR [rbp-0x30]
  419169:	mov    rax,QWORD PTR [rax]
  41916c:	add    rax,QWORD PTR [rbp-0x18]
  419170:	add    rsp,0x40
  419174:	pop    rbp
  419175:	ret    
  419176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000419180 <flatcc_builder_enter_user_frame@@Base>:
  419180:	push   rbp
  419181:	mov    rbp,rsp
  419184:	sub    rsp,0x20
  419188:	xor    r8d,r8d
  41918b:	mov    QWORD PTR [rbp-0x10],rdi
  41918f:	mov    QWORD PTR [rbp-0x18],rsi
  419193:	mov    rax,QWORD PTR [rbp-0x18]
  419197:	add    rax,0x8
  41919d:	sub    rax,0x1
  4191a3:	and    rax,0xfffffffffffffff8
  4191a9:	add    rax,0x8
  4191af:	mov    QWORD PTR [rbp-0x18],rax
  4191b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4191b7:	mov    rax,QWORD PTR [rbp-0x10]
  4191bb:	mov    rdx,QWORD PTR [rax+0x180]
  4191c2:	mov    rcx,QWORD PTR [rbp-0x18]
  4191c6:	mov    esi,0x7
  4191cb:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4191d0:	mov    QWORD PTR [rbp-0x20],rax
  4191d4:	cmp    rax,0x0
  4191d8:	jne    4191eb <flatcc_builder_enter_user_frame@@Base+0x6b>
  4191de:	mov    QWORD PTR [rbp-0x8],0x0
  4191e6:	jmp    41925e <flatcc_builder_enter_user_frame@@Base+0xde>
  4191eb:	xor    esi,esi
  4191ed:	mov    rax,QWORD PTR [rbp-0x20]
  4191f1:	mov    rdx,QWORD PTR [rbp-0x18]
  4191f5:	mov    rdi,rax
  4191f8:	call   4040a0 <memset@plt>
  4191fd:	mov    rax,QWORD PTR [rbp-0x10]
  419201:	mov    rax,QWORD PTR [rax+0x178]
  419208:	mov    rcx,QWORD PTR [rbp-0x20]
  41920c:	mov    rdx,rcx
  41920f:	add    rdx,0x8
  419216:	mov    QWORD PTR [rbp-0x20],rdx
  41921a:	mov    QWORD PTR [rcx],rax
  41921d:	mov    rax,QWORD PTR [rbp-0x10]
  419221:	mov    rax,QWORD PTR [rax+0x180]
  419228:	add    rax,0x8
  41922e:	mov    rcx,QWORD PTR [rbp-0x10]
  419232:	mov    QWORD PTR [rcx+0x178],rax
  419239:	mov    rax,QWORD PTR [rbp-0x18]
  41923d:	mov    rcx,QWORD PTR [rbp-0x10]
  419241:	add    rax,QWORD PTR [rcx+0x180]
  419248:	mov    QWORD PTR [rcx+0x180],rax
  41924f:	mov    rax,QWORD PTR [rbp-0x10]
  419253:	mov    rax,QWORD PTR [rax+0x178]
  41925a:	mov    QWORD PTR [rbp-0x8],rax
  41925e:	mov    rax,QWORD PTR [rbp-0x8]
  419262:	add    rsp,0x20
  419266:	pop    rbp
  419267:	ret    
  419268:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419270 <flatcc_builder_exit_user_frame@@Base>:
  419270:	push   rbp
  419271:	mov    rbp,rsp
  419274:	sub    rsp,0x10
  419278:	mov    QWORD PTR [rbp-0x8],rdi
  41927c:	mov    rax,QWORD PTR [rbp-0x8]
  419280:	cmp    QWORD PTR [rax+0x178],0x0
  419288:	jbe    419293 <flatcc_builder_exit_user_frame@@Base+0x23>
  41928e:	jmp    4192b2 <flatcc_builder_exit_user_frame@@Base+0x42>
  419293:	lea    rdi,[rip+0xdbc6]        # 426e60 <flatcc_builder_padding_base@@Base+0x2b0>
  41929a:	lea    rsi,[rip+0xdb21]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  4192a1:	mov    edx,0x21e
  4192a6:	lea    rcx,[rip+0xdbcc]        # 426e79 <flatcc_builder_padding_base@@Base+0x2c9>
  4192ad:	call   404090 <__assert_fail@plt>
  4192b2:	mov    rax,QWORD PTR [rbp-0x8]
  4192b6:	mov    rax,QWORD PTR [rax+0xc8]
  4192bd:	mov    rcx,QWORD PTR [rbp-0x8]
  4192c1:	mov    rcx,QWORD PTR [rcx+0x178]
  4192c8:	mov    ecx,ecx
  4192ca:	mov    edx,ecx
  4192cc:	add    rax,rdx
  4192cf:	mov    QWORD PTR [rbp-0x10],rax
  4192d3:	mov    rax,QWORD PTR [rbp-0x8]
  4192d7:	mov    rax,QWORD PTR [rax+0x178]
  4192de:	sub    rax,0x8
  4192e4:	mov    rdx,QWORD PTR [rbp-0x8]
  4192e8:	mov    QWORD PTR [rdx+0x180],rax
  4192ef:	mov    rax,QWORD PTR [rbp-0x10]
  4192f3:	mov    rax,QWORD PTR [rax-0x8]
  4192f7:	mov    rdx,QWORD PTR [rbp-0x8]
  4192fb:	mov    QWORD PTR [rdx+0x178],rax
  419302:	add    rsp,0x10
  419306:	pop    rbp
  419307:	ret    
  419308:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419310 <flatcc_builder_exit_user_frame_at@@Base>:
  419310:	push   rbp
  419311:	mov    rbp,rsp
  419314:	sub    rsp,0x10
  419318:	mov    QWORD PTR [rbp-0x8],rdi
  41931c:	mov    QWORD PTR [rbp-0x10],rsi
  419320:	mov    rax,QWORD PTR [rbp-0x8]
  419324:	mov    rax,QWORD PTR [rax+0x178]
  41932b:	cmp    rax,QWORD PTR [rbp-0x10]
  41932f:	jb     41933a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  419335:	jmp    419359 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  41933a:	lea    rdi,[rip+0xdb72]        # 426eb3 <flatcc_builder_padding_base@@Base+0x303>
  419341:	lea    rsi,[rip+0xda7a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  419348:	mov    edx,0x227
  41934d:	lea    rcx,[rip+0xdb7e]        # 426ed2 <flatcc_builder_padding_base@@Base+0x322>
  419354:	call   404090 <__assert_fail@plt>
  419359:	mov    rax,QWORD PTR [rbp-0x10]
  41935d:	mov    rcx,QWORD PTR [rbp-0x8]
  419361:	mov    QWORD PTR [rcx+0x178],rax
  419368:	mov    rdi,QWORD PTR [rbp-0x8]
  41936c:	call   419270 <flatcc_builder_exit_user_frame@@Base>
  419371:	add    rsp,0x10
  419375:	pop    rbp
  419376:	ret    
  419377:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419380 <flatcc_builder_get_current_user_frame@@Base>:
  419380:	push   rbp
  419381:	mov    rbp,rsp
  419384:	mov    QWORD PTR [rbp-0x8],rdi
  419388:	mov    rax,QWORD PTR [rbp-0x8]
  41938c:	mov    rax,QWORD PTR [rax+0x178]
  419393:	pop    rbp
  419394:	ret    
  419395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41939f:	nop

00000000004193a0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4193a0:	push   rbp
  4193a1:	mov    rbp,rsp
  4193a4:	mov    QWORD PTR [rbp-0x8],rdi
  4193a8:	mov    QWORD PTR [rbp-0x10],rsi
  4193ac:	mov    rax,QWORD PTR [rbp-0x8]
  4193b0:	mov    rax,QWORD PTR [rax+0xc8]
  4193b7:	mov    rcx,QWORD PTR [rbp-0x10]
  4193bb:	mov    ecx,ecx
  4193bd:	mov    edx,ecx
  4193bf:	add    rax,rdx
  4193c2:	pop    rbp
  4193c3:	ret    
  4193c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193ce:	xchg   ax,ax

00000000004193d0 <flatcc_builder_embed_buffer@@Base>:
  4193d0:	push   rbp
  4193d1:	mov    rbp,rsp
  4193d4:	sub    rsp,0xd0
  4193db:	mov    QWORD PTR [rbp-0x10],rdi
  4193df:	mov    WORD PTR [rbp-0x12],si
  4193e3:	mov    QWORD PTR [rbp-0x20],rdx
  4193e7:	mov    QWORD PTR [rbp-0x28],rcx
  4193eb:	mov    WORD PTR [rbp-0x2a],r8w
  4193f0:	mov    DWORD PTR [rbp-0x30],r9d
  4193f4:	mov    eax,DWORD PTR [rbp-0x30]
  4193f7:	and    eax,0x2
  4193fa:	mov    DWORD PTR [rbp-0xcc],eax
  419400:	mov    rdi,QWORD PTR [rbp-0x10]
  419404:	mov    si,WORD PTR [rbp-0x12]
  419408:	mov    rcx,QWORD PTR [rbp-0x10]
  41940c:	cmp    DWORD PTR [rcx+0x100],0x0
  419413:	sete   r10b
  419417:	xor    r10b,0xff
  41941b:	and    r10b,0x1
  41941f:	movzx  ecx,r10b
  419423:	lea    rdx,[rbp-0x2a]
  419427:	mov    WORD PTR [rbp-0xce],si
  41942e:	mov    rsi,rdx
  419431:	mov    r8w,WORD PTR [rbp-0xce]
  419439:	movzx  edx,r8w
  41943d:	call   419630 <flatcc_builder_embed_buffer@@Base+0x260>
  419442:	cmp    eax,0x0
  419445:	je     419457 <flatcc_builder_embed_buffer@@Base+0x87>
  41944b:	mov    DWORD PTR [rbp-0x4],0x0
  419452:	jmp    41961c <flatcc_builder_embed_buffer@@Base+0x24c>
  419457:	xor    eax,eax
  419459:	mov    ecx,eax
  41945b:	mov    rdi,QWORD PTR [rbp-0x10]
  41945f:	mov    rdx,QWORD PTR [rbp-0x28]
  419463:	mov    eax,edx
  419465:	mov    esi,eax
  419467:	mov    eax,DWORD PTR [rbp-0xcc]
  41946d:	cmp    eax,0x0
  419470:	mov    r8d,0x4
  419476:	cmovne rcx,r8
  41947a:	add    rsi,rcx
  41947d:	movzx  edx,WORD PTR [rbp-0x2a]
  419481:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  419486:	mov    DWORD PTR [rbp-0x38],eax
  419489:	mov    rcx,QWORD PTR [rbp-0x28]
  41948d:	add    ecx,DWORD PTR [rbp-0x38]
  419490:	mov    edi,ecx
  419492:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  419497:	mov    DWORD PTR [rbp-0x34],eax
  41949a:	mov    QWORD PTR [rbp-0xc8],0x0
  4194a5:	mov    DWORD PTR [rbp-0xc0],0x0
  4194af:	mov    r8,QWORD PTR [rbp-0x10]
  4194b3:	cmp    DWORD PTR [r8+0x100],0x0
  4194bb:	je     419527 <flatcc_builder_embed_buffer@@Base+0x157>
  4194c1:	mov    rax,QWORD PTR [rbp-0xc8]
  4194c8:	add    rax,0x4
  4194ce:	mov    QWORD PTR [rbp-0xc8],rax
  4194d5:	lea    rax,[rbp-0x34]
  4194d9:	lea    rcx,[rbp-0xc8]
  4194e0:	mov    rdx,rcx
  4194e3:	add    rdx,0x10
  4194ea:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4194f1:	shl    rsi,0x4
  4194f5:	add    rdx,rsi
  4194f8:	mov    QWORD PTR [rdx],rax
  4194fb:	add    rcx,0x10
  419502:	movsxd rax,DWORD PTR [rbp-0xc0]
  419509:	shl    rax,0x4
  41950d:	add    rcx,rax
  419510:	mov    QWORD PTR [rcx+0x8],0x4
  419518:	mov    edi,DWORD PTR [rbp-0xc0]
  41951e:	add    edi,0x1
  419521:	mov    DWORD PTR [rbp-0xc0],edi
  419527:	cmp    QWORD PTR [rbp-0x28],0x0
  41952c:	jbe    419596 <flatcc_builder_embed_buffer@@Base+0x1c6>
  419532:	mov    rax,QWORD PTR [rbp-0x28]
  419536:	add    rax,QWORD PTR [rbp-0xc8]
  41953d:	mov    QWORD PTR [rbp-0xc8],rax
  419544:	mov    rax,QWORD PTR [rbp-0x20]
  419548:	lea    rcx,[rbp-0xc8]
  41954f:	mov    rdx,rcx
  419552:	add    rdx,0x10
  419559:	movsxd rsi,DWORD PTR [rbp-0xc0]
  419560:	shl    rsi,0x4
  419564:	add    rdx,rsi
  419567:	mov    QWORD PTR [rdx],rax
  41956a:	mov    rax,QWORD PTR [rbp-0x28]
  41956e:	add    rcx,0x10
  419575:	movsxd rdx,DWORD PTR [rbp-0xc0]
  41957c:	shl    rdx,0x4
  419580:	add    rcx,rdx
  419583:	mov    QWORD PTR [rcx+0x8],rax
  419587:	mov    edi,DWORD PTR [rbp-0xc0]
  41958d:	add    edi,0x1
  419590:	mov    DWORD PTR [rbp-0xc0],edi
  419596:	cmp    DWORD PTR [rbp-0x38],0x0
  41959a:	jbe    419609 <flatcc_builder_embed_buffer@@Base+0x239>
  4195a0:	lea    rax,[rip+0xd609]        # 426bb0 <flatcc_builder_padding_base@@Base>
  4195a7:	mov    ecx,DWORD PTR [rbp-0x38]
  4195aa:	mov    edx,ecx
  4195ac:	add    rdx,QWORD PTR [rbp-0xc8]
  4195b3:	mov    QWORD PTR [rbp-0xc8],rdx
  4195ba:	lea    rdx,[rbp-0xc8]
  4195c1:	mov    rsi,rdx
  4195c4:	add    rsi,0x10
  4195cb:	movsxd rdi,DWORD PTR [rbp-0xc0]
  4195d2:	shl    rdi,0x4
  4195d6:	add    rsi,rdi
  4195d9:	mov    QWORD PTR [rsi],rax
  4195dc:	mov    ecx,DWORD PTR [rbp-0x38]
  4195df:	mov    eax,ecx
  4195e1:	add    rdx,0x10
  4195e8:	movsxd rsi,DWORD PTR [rbp-0xc0]
  4195ef:	shl    rsi,0x4
  4195f3:	add    rdx,rsi
  4195f6:	mov    QWORD PTR [rdx+0x8],rax
  4195fa:	mov    ecx,DWORD PTR [rbp-0xc0]
  419600:	add    ecx,0x1
  419603:	mov    DWORD PTR [rbp-0xc0],ecx
  419609:	mov    rdi,QWORD PTR [rbp-0x10]
  41960d:	lea    rsi,[rbp-0xc8]
  419614:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  419619:	mov    DWORD PTR [rbp-0x4],eax
  41961c:	mov    eax,DWORD PTR [rbp-0x4]
  41961f:	add    rsp,0xd0
  419626:	pop    rbp
  419627:	ret    
  419628:	nop    DWORD PTR [rax+rax*1+0x0]
  419630:	push   rbp
  419631:	mov    rbp,rsp
  419634:	sub    rsp,0xc0
  41963b:	mov    QWORD PTR [rbp-0x8],rdi
  41963f:	mov    QWORD PTR [rbp-0x10],rsi
  419643:	mov    WORD PTR [rbp-0x12],dx
  419647:	mov    DWORD PTR [rbp-0x18],ecx
  41964a:	movzx  eax,WORD PTR [rbp-0x12]
  41964e:	cmp    eax,0x0
  419651:	je     419666 <flatcc_builder_embed_buffer@@Base+0x296>
  419657:	movzx  eax,WORD PTR [rbp-0x12]
  41965b:	mov    DWORD PTR [rbp-0xb4],eax
  419661:	jmp    4196ac <flatcc_builder_embed_buffer@@Base+0x2dc>
  419666:	mov    rax,QWORD PTR [rbp-0x8]
  41966a:	movzx  ecx,WORD PTR [rax+0xec]
  419671:	cmp    ecx,0x0
  419674:	je     419690 <flatcc_builder_embed_buffer@@Base+0x2c0>
  41967a:	mov    rax,QWORD PTR [rbp-0x8]
  41967e:	movzx  ecx,WORD PTR [rax+0xec]
  419685:	mov    DWORD PTR [rbp-0xb8],ecx
  41968b:	jmp    4196a0 <flatcc_builder_embed_buffer@@Base+0x2d0>
  419690:	mov    eax,0x1
  419695:	mov    DWORD PTR [rbp-0xb8],eax
  41969b:	jmp    4196a0 <flatcc_builder_embed_buffer@@Base+0x2d0>
  4196a0:	mov    eax,DWORD PTR [rbp-0xb8]
  4196a6:	mov    DWORD PTR [rbp-0xb4],eax
  4196ac:	mov    eax,DWORD PTR [rbp-0xb4]
  4196b2:	mov    WORD PTR [rbp-0x12],ax
  4196b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4196ba:	mov    esi,0x4
  4196bf:	call   41b1a0 <flatcc_builder_start_vector@@Base+0xb0>
  4196c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4196c8:	movzx  esi,WORD PTR [rbp-0x12]
  4196cc:	call   41b1a0 <flatcc_builder_start_vector@@Base+0xb0>
  4196d1:	cmp    DWORD PTR [rbp-0x18],0x0
  4196d5:	jne    4197c5 <flatcc_builder_embed_buffer@@Base+0x3f5>
  4196db:	mov    rdi,QWORD PTR [rbp-0x8]
  4196df:	movzx  esi,WORD PTR [rbp-0x12]
  4196e3:	call   41e500 <flatcc_builder_get_emit_context@@Base+0x20>
  4196e8:	mov    eax,eax
  4196ea:	mov    ecx,eax
  4196ec:	mov    QWORD PTR [rbp-0x20],rcx
  4196f0:	cmp    QWORD PTR [rbp-0x20],0x0
  4196f5:	je     4197c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4196fb:	mov    QWORD PTR [rbp-0xb0],0x0
  419706:	mov    DWORD PTR [rbp-0xa8],0x0
  419710:	cmp    QWORD PTR [rbp-0x20],0x0
  419715:	jbe    419782 <flatcc_builder_embed_buffer@@Base+0x3b2>
  41971b:	lea    rax,[rip+0xd48e]        # 426bb0 <flatcc_builder_padding_base@@Base>
  419722:	mov    rcx,QWORD PTR [rbp-0x20]
  419726:	add    rcx,QWORD PTR [rbp-0xb0]
  41972d:	mov    QWORD PTR [rbp-0xb0],rcx
  419734:	lea    rcx,[rbp-0xb0]
  41973b:	mov    rdx,rcx
  41973e:	add    rdx,0x10
  419745:	movsxd rsi,DWORD PTR [rbp-0xa8]
  41974c:	shl    rsi,0x4
  419750:	add    rdx,rsi
  419753:	mov    QWORD PTR [rdx],rax
  419756:	mov    rax,QWORD PTR [rbp-0x20]
  41975a:	add    rcx,0x10
  419761:	movsxd rdx,DWORD PTR [rbp-0xa8]
  419768:	shl    rdx,0x4
  41976c:	add    rcx,rdx
  41976f:	mov    QWORD PTR [rcx+0x8],rax
  419773:	mov    edi,DWORD PTR [rbp-0xa8]
  419779:	add    edi,0x1
  41977c:	mov    DWORD PTR [rbp-0xa8],edi
  419782:	mov    rdi,QWORD PTR [rbp-0x8]
  419786:	lea    rsi,[rbp-0xb0]
  41978d:	call   41b7a0 <flatcc_builder_create_vtable@@Base+0x140>
  419792:	xor    ecx,ecx
  419794:	cmp    ecx,eax
  419796:	jne    4197bb <flatcc_builder_embed_buffer@@Base+0x3eb>
  41979c:	lea    rdi,[rip+0xe7df]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  4197a3:	lea    rsi,[rip+0xd618]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  4197aa:	mov    edx,0x2be
  4197af:	lea    rcx,[rip+0xe649]        # 427dff <flatcc_builder_padding_base@@Base+0x124f>
  4197b6:	call   404090 <__assert_fail@plt>
  4197bb:	jmp    4197c0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4197c0:	jmp    4197c5 <flatcc_builder_embed_buffer@@Base+0x3f5>
  4197c5:	xor    eax,eax
  4197c7:	add    rsp,0xc0
  4197ce:	pop    rbp
  4197cf:	ret    
  4197d0:	push   rbp
  4197d1:	mov    rbp,rsp
  4197d4:	mov    QWORD PTR [rbp-0x8],rdi
  4197d8:	mov    DWORD PTR [rbp-0xc],esi
  4197db:	mov    WORD PTR [rbp-0xe],dx
  4197df:	mov    rax,QWORD PTR [rbp-0x8]
  4197e3:	mov    ecx,DWORD PTR [rax+0xf0]
  4197e9:	sub    ecx,DWORD PTR [rbp-0xc]
  4197ec:	movzx  esi,WORD PTR [rbp-0xe]
  4197f0:	sub    esi,0x1
  4197f3:	and    ecx,esi
  4197f5:	mov    eax,ecx
  4197f7:	pop    rbp
  4197f8:	ret    
  4197f9:	nop    DWORD PTR [rax+0x0]
  419800:	push   rbp
  419801:	mov    rbp,rsp
  419804:	mov    DWORD PTR [rbp-0x4],edi
  419807:	mov    eax,DWORD PTR [rbp-0x4]
  41980a:	pop    rbp
  41980b:	ret    
  41980c:	nop    DWORD PTR [rax+0x0]
  419810:	push   rbp
  419811:	mov    rbp,rsp
  419814:	sub    rsp,0x20
  419818:	mov    QWORD PTR [rbp-0x8],rdi
  41981c:	mov    QWORD PTR [rbp-0x10],rsi
  419820:	mov    rax,QWORD PTR [rbp-0x8]
  419824:	mov    ecx,DWORD PTR [rax+0xf0]
  41982a:	mov    rax,QWORD PTR [rbp-0x10]
  41982e:	mov    rax,QWORD PTR [rax]
  419831:	sub    ecx,eax
  419833:	mov    DWORD PTR [rbp-0x14],ecx
  419836:	mov    rdx,QWORD PTR [rbp-0x10]
  41983a:	cmp    QWORD PTR [rdx],0x10
  41983e:	jbe    41985f <flatcc_builder_embed_buffer@@Base+0x48f>
  419844:	mov    rax,QWORD PTR [rbp-0x10]
  419848:	mov    rax,QWORD PTR [rax]
  41984b:	sub    rax,0x10
  419851:	mov    ecx,0xffffffff
  419856:	cmp    rax,rcx
  419859:	ja     419872 <flatcc_builder_embed_buffer@@Base+0x4a2>
  41985f:	mov    eax,DWORD PTR [rbp-0x14]
  419862:	mov    rcx,QWORD PTR [rbp-0x8]
  419866:	cmp    eax,DWORD PTR [rcx+0xf0]
  41986c:	jl     419891 <flatcc_builder_embed_buffer@@Base+0x4c1>
  419872:	lea    rdi,[rip+0xe709]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  419879:	lea    rsi,[rip+0xd542]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  419880:	mov    edx,0x287
  419885:	lea    rcx,[rip+0xe5b5]        # 427e41 <flatcc_builder_padding_base@@Base+0x1291>
  41988c:	call   404090 <__assert_fail@plt>
  419891:	mov    rax,QWORD PTR [rbp-0x8]
  419895:	mov    rax,QWORD PTR [rax+0x48]
  419899:	mov    rcx,QWORD PTR [rbp-0x8]
  41989d:	mov    rdi,QWORD PTR [rcx+0x38]
  4198a1:	mov    rcx,QWORD PTR [rbp-0x10]
  4198a5:	add    rcx,0x10
  4198ac:	mov    rdx,QWORD PTR [rbp-0x10]
  4198b0:	mov    edx,DWORD PTR [rdx+0x8]
  4198b3:	mov    esi,DWORD PTR [rbp-0x14]
  4198b6:	mov    r8,QWORD PTR [rbp-0x10]
  4198ba:	mov    r8,QWORD PTR [r8]
  4198bd:	mov    DWORD PTR [rbp-0x18],esi
  4198c0:	mov    rsi,rcx
  4198c3:	mov    ecx,DWORD PTR [rbp-0x18]
  4198c6:	call   rax
  4198c8:	cmp    eax,0x0
  4198cb:	je     4198f0 <flatcc_builder_embed_buffer@@Base+0x520>
  4198d1:	lea    rdi,[rip+0xe6aa]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  4198d8:	lea    rsi,[rip+0xd4e3]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  4198df:	mov    edx,0x28b
  4198e4:	lea    rcx,[rip+0xe556]        # 427e41 <flatcc_builder_padding_base@@Base+0x1291>
  4198eb:	call   404090 <__assert_fail@plt>
  4198f0:	mov    eax,DWORD PTR [rbp-0x14]
  4198f3:	mov    rcx,QWORD PTR [rbp-0x8]
  4198f7:	mov    DWORD PTR [rcx+0xf0],eax
  4198fd:	add    rsp,0x20
  419901:	pop    rbp
  419902:	ret    
  419903:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41990d:	nop    DWORD PTR [rax]

0000000000419910 <flatcc_builder_create_buffer@@Base>:
  419910:	push   rbp
  419911:	mov    rbp,rsp
  419914:	sub    rsp,0xf0
  41991b:	mov    QWORD PTR [rbp-0x10],rdi
  41991f:	mov    QWORD PTR [rbp-0x18],rsi
  419923:	mov    WORD PTR [rbp-0x1a],dx
  419927:	mov    DWORD PTR [rbp-0x20],ecx
  41992a:	mov    WORD PTR [rbp-0x22],r8w
  41992f:	mov    DWORD PTR [rbp-0x28],r9d
  419933:	mov    DWORD PTR [rbp-0x34],0x0
  41993a:	mov    DWORD PTR [rbp-0xd4],0x0
  419944:	mov    eax,DWORD PTR [rbp-0x28]
  419947:	and    eax,0x1
  41994a:	cmp    eax,0x0
  41994d:	setne  r10b
  419951:	and    r10b,0x1
  419955:	movzx  eax,r10b
  419959:	mov    DWORD PTR [rbp-0xd8],eax
  41995f:	mov    eax,DWORD PTR [rbp-0x28]
  419962:	and    eax,0x2
  419965:	cmp    eax,0x0
  419968:	setne  r10b
  41996c:	and    r10b,0x1
  419970:	movzx  eax,r10b
  419974:	mov    DWORD PTR [rbp-0xdc],eax
  41997a:	mov    rdi,QWORD PTR [rbp-0x10]
  41997e:	mov    dx,WORD PTR [rbp-0x1a]
  419982:	mov    ecx,DWORD PTR [rbp-0xd8]
  419988:	lea    rsi,[rbp-0x22]
  41998c:	movzx  edx,dx
  41998f:	call   419630 <flatcc_builder_embed_buffer@@Base+0x260>
  419994:	cmp    eax,0x0
  419997:	je     4199a9 <flatcc_builder_create_buffer@@Base+0x99>
  41999d:	mov    DWORD PTR [rbp-0x4],0x0
  4199a4:	jmp    419d15 <flatcc_builder_create_buffer@@Base+0x405>
  4199a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4199ad:	movzx  esi,WORD PTR [rbp-0x22]
  4199b1:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  4199b6:	cmp    QWORD PTR [rbp-0x18],0x0
  4199bb:	je     4199ef <flatcc_builder_create_buffer@@Base+0xdf>
  4199c1:	mov    rax,QWORD PTR [rbp-0x18]
  4199c5:	mov    ecx,DWORD PTR [rax]
  4199c7:	mov    DWORD PTR [rbp-0xd4],ecx
  4199cd:	mov    edi,DWORD PTR [rbp-0xd4]
  4199d3:	call   419d70 <flatcc_builder_create_buffer@@Base+0x460>
  4199d8:	mov    DWORD PTR [rbp-0xd4],eax
  4199de:	mov    edi,DWORD PTR [rbp-0xd4]
  4199e4:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  4199e9:	mov    DWORD PTR [rbp-0xd4],eax
  4199ef:	xor    eax,eax
  4199f1:	mov    ecx,eax
  4199f3:	xor    eax,eax
  4199f5:	mov    edx,DWORD PTR [rbp-0xd4]
  4199fb:	cmp    edx,0x0
  4199fe:	mov    edx,0x4
  419a03:	cmovne eax,edx
  419a06:	mov    DWORD PTR [rbp-0x34],eax
  419a09:	mov    rdi,QWORD PTR [rbp-0x10]
  419a0d:	mov    eax,DWORD PTR [rbp-0x34]
  419a10:	mov    esi,eax
  419a12:	add    rsi,0x4
  419a19:	mov    eax,DWORD PTR [rbp-0xdc]
  419a1f:	cmp    eax,0x0
  419a22:	mov    r8d,0x4
  419a28:	cmovne rcx,r8
  419a2c:	add    rsi,rcx
  419a2f:	movzx  edx,WORD PTR [rbp-0x22]
  419a33:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  419a38:	mov    DWORD PTR [rbp-0x30],eax
  419a3b:	mov    QWORD PTR [rbp-0xd0],0x0
  419a46:	mov    DWORD PTR [rbp-0xc8],0x0
  419a50:	cmp    DWORD PTR [rbp-0xd8],0x0
  419a57:	jne    419a6a <flatcc_builder_create_buffer@@Base+0x15a>
  419a5d:	cmp    DWORD PTR [rbp-0xdc],0x0
  419a64:	je     419ad0 <flatcc_builder_create_buffer@@Base+0x1c0>
  419a6a:	mov    rax,QWORD PTR [rbp-0xd0]
  419a71:	add    rax,0x4
  419a77:	mov    QWORD PTR [rbp-0xd0],rax
  419a7e:	lea    rax,[rbp-0x3c]
  419a82:	lea    rcx,[rbp-0xd0]
  419a89:	mov    rdx,rcx
  419a8c:	add    rdx,0x10
  419a93:	movsxd rsi,DWORD PTR [rbp-0xc8]
  419a9a:	shl    rsi,0x4
  419a9e:	add    rdx,rsi
  419aa1:	mov    QWORD PTR [rdx],rax
  419aa4:	add    rcx,0x10
  419aab:	movsxd rax,DWORD PTR [rbp-0xc8]
  419ab2:	shl    rax,0x4
  419ab6:	add    rcx,rax
  419ab9:	mov    QWORD PTR [rcx+0x8],0x4
  419ac1:	mov    edi,DWORD PTR [rbp-0xc8]
  419ac7:	add    edi,0x1
  419aca:	mov    DWORD PTR [rbp-0xc8],edi
  419ad0:	mov    rax,QWORD PTR [rbp-0xd0]
  419ad7:	add    rax,0x4
  419add:	mov    QWORD PTR [rbp-0xd0],rax
  419ae4:	lea    rax,[rbp-0x38]
  419ae8:	lea    rcx,[rbp-0xd0]
  419aef:	mov    rdx,rcx
  419af2:	add    rdx,0x10
  419af9:	movsxd rsi,DWORD PTR [rbp-0xc8]
  419b00:	shl    rsi,0x4
  419b04:	add    rdx,rsi
  419b07:	mov    QWORD PTR [rdx],rax
  419b0a:	add    rcx,0x10
  419b11:	movsxd rax,DWORD PTR [rbp-0xc8]
  419b18:	shl    rax,0x4
  419b1c:	add    rcx,rax
  419b1f:	mov    QWORD PTR [rcx+0x8],0x4
  419b27:	mov    edi,DWORD PTR [rbp-0xc8]
  419b2d:	add    edi,0x1
  419b30:	mov    DWORD PTR [rbp-0xc8],edi
  419b36:	cmp    DWORD PTR [rbp-0x34],0x0
  419b3a:	jbe    419ba9 <flatcc_builder_create_buffer@@Base+0x299>
  419b40:	mov    eax,DWORD PTR [rbp-0x34]
  419b43:	mov    ecx,eax
  419b45:	add    rcx,QWORD PTR [rbp-0xd0]
  419b4c:	mov    QWORD PTR [rbp-0xd0],rcx
  419b53:	lea    rcx,[rbp-0xd4]
  419b5a:	lea    rdx,[rbp-0xd0]
  419b61:	mov    rsi,rdx
  419b64:	add    rsi,0x10
  419b6b:	movsxd rdi,DWORD PTR [rbp-0xc8]
  419b72:	shl    rdi,0x4
  419b76:	add    rsi,rdi
  419b79:	mov    QWORD PTR [rsi],rcx
  419b7c:	mov    eax,DWORD PTR [rbp-0x34]
  419b7f:	mov    ecx,eax
  419b81:	add    rdx,0x10
  419b88:	movsxd rsi,DWORD PTR [rbp-0xc8]
  419b8f:	shl    rsi,0x4
  419b93:	add    rdx,rsi
  419b96:	mov    QWORD PTR [rdx+0x8],rcx
  419b9a:	mov    eax,DWORD PTR [rbp-0xc8]
  419ba0:	add    eax,0x1
  419ba3:	mov    DWORD PTR [rbp-0xc8],eax
  419ba9:	cmp    DWORD PTR [rbp-0x30],0x0
  419bad:	jbe    419c1c <flatcc_builder_create_buffer@@Base+0x30c>
  419bb3:	lea    rax,[rip+0xcff6]        # 426bb0 <flatcc_builder_padding_base@@Base>
  419bba:	mov    ecx,DWORD PTR [rbp-0x30]
  419bbd:	mov    edx,ecx
  419bbf:	add    rdx,QWORD PTR [rbp-0xd0]
  419bc6:	mov    QWORD PTR [rbp-0xd0],rdx
  419bcd:	lea    rdx,[rbp-0xd0]
  419bd4:	mov    rsi,rdx
  419bd7:	add    rsi,0x10
  419bde:	movsxd rdi,DWORD PTR [rbp-0xc8]
  419be5:	shl    rdi,0x4
  419be9:	add    rsi,rdi
  419bec:	mov    QWORD PTR [rsi],rax
  419bef:	mov    ecx,DWORD PTR [rbp-0x30]
  419bf2:	mov    eax,ecx
  419bf4:	add    rdx,0x10
  419bfb:	movsxd rsi,DWORD PTR [rbp-0xc8]
  419c02:	shl    rsi,0x4
  419c06:	add    rdx,rsi
  419c09:	mov    QWORD PTR [rdx+0x8],rax
  419c0d:	mov    ecx,DWORD PTR [rbp-0xc8]
  419c13:	add    ecx,0x1
  419c16:	mov    DWORD PTR [rbp-0xc8],ecx
  419c1c:	mov    rax,QWORD PTR [rbp-0x10]
  419c20:	mov    ecx,DWORD PTR [rax+0xf0]
  419c26:	mov    rax,QWORD PTR [rbp-0xd0]
  419c2d:	sub    ecx,eax
  419c2f:	mov    eax,ecx
  419c31:	mov    edx,eax
  419c33:	cmp    DWORD PTR [rbp-0xd8],0x0
  419c3a:	mov    sil,0x1
  419c3d:	mov    QWORD PTR [rbp-0xe8],rdx
  419c44:	mov    BYTE PTR [rbp-0xe9],sil
  419c4b:	jne    419c61 <flatcc_builder_create_buffer@@Base+0x351>
  419c51:	cmp    DWORD PTR [rbp-0xdc],0x0
  419c58:	setne  al
  419c5b:	mov    BYTE PTR [rbp-0xe9],al
  419c61:	mov    al,BYTE PTR [rbp-0xe9]
  419c67:	xor    ecx,ecx
  419c69:	mov    edx,ecx
  419c6b:	test   al,0x1
  419c6d:	mov    esi,0x4
  419c72:	cmovne rdx,rsi
  419c76:	mov    rsi,QWORD PTR [rbp-0xe8]
  419c7d:	add    rsi,rdx
  419c80:	mov    DWORD PTR [rbp-0x40],esi
  419c83:	cmp    DWORD PTR [rbp-0xd8],0x0
  419c8a:	je     419cac <flatcc_builder_create_buffer@@Base+0x39c>
  419c90:	mov    rax,QWORD PTR [rbp-0x10]
  419c94:	mov    ecx,DWORD PTR [rax+0xf8]
  419c9a:	sub    ecx,DWORD PTR [rbp-0x40]
  419c9d:	mov    edi,ecx
  419c9f:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  419ca4:	mov    DWORD PTR [rbp-0x3c],eax
  419ca7:	jmp    419cc3 <flatcc_builder_create_buffer@@Base+0x3b3>
  419cac:	mov    rax,QWORD PTR [rbp-0x10]
  419cb0:	mov    ecx,DWORD PTR [rax+0xf4]
  419cb6:	sub    ecx,DWORD PTR [rbp-0x40]
  419cb9:	mov    edi,ecx
  419cbb:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  419cc0:	mov    DWORD PTR [rbp-0x3c],eax
  419cc3:	mov    eax,DWORD PTR [rbp-0x20]
  419cc6:	sub    eax,DWORD PTR [rbp-0x40]
  419cc9:	mov    edi,eax
  419ccb:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  419cd0:	mov    DWORD PTR [rbp-0x38],eax
  419cd3:	mov    rdi,QWORD PTR [rbp-0x10]
  419cd7:	lea    rsi,[rbp-0xd0]
  419cde:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  419ce3:	xor    ecx,ecx
  419ce5:	mov    DWORD PTR [rbp-0x2c],eax
  419ce8:	cmp    ecx,eax
  419cea:	jne    419d0f <flatcc_builder_create_buffer@@Base+0x3ff>
  419cf0:	lea    rdi,[rip+0xe28b]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  419cf7:	lea    rsi,[rip+0xd0c4]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  419cfe:	mov    edx,0x304
  419d03:	lea    rcx,[rip+0xd20d]        # 426f17 <flatcc_builder_padding_base@@Base+0x367>
  419d0a:	call   404090 <__assert_fail@plt>
  419d0f:	mov    eax,DWORD PTR [rbp-0x2c]
  419d12:	mov    DWORD PTR [rbp-0x4],eax
  419d15:	mov    eax,DWORD PTR [rbp-0x4]
  419d18:	add    rsp,0xf0
  419d1f:	pop    rbp
  419d20:	ret    
  419d21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  419d30:	push   rbp
  419d31:	mov    rbp,rsp
  419d34:	mov    QWORD PTR [rbp-0x8],rdi
  419d38:	mov    WORD PTR [rbp-0xa],si
  419d3c:	mov    rax,QWORD PTR [rbp-0x8]
  419d40:	movzx  ecx,WORD PTR [rax+0xe8]
  419d47:	movzx  edx,WORD PTR [rbp-0xa]
  419d4b:	cmp    ecx,edx
  419d4d:	jge    419d62 <flatcc_builder_create_buffer@@Base+0x452>
  419d53:	mov    ax,WORD PTR [rbp-0xa]
  419d57:	mov    rcx,QWORD PTR [rbp-0x8]
  419d5b:	mov    WORD PTR [rcx+0xe8],ax
  419d62:	pop    rbp
  419d63:	ret    
  419d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d6e:	xchg   ax,ax
  419d70:	push   rbp
  419d71:	mov    rbp,rsp
  419d74:	mov    DWORD PTR [rbp-0x4],edi
  419d77:	mov    eax,DWORD PTR [rbp-0x4]
  419d7a:	pop    rbp
  419d7b:	ret    
  419d7c:	nop    DWORD PTR [rax+0x0]

0000000000419d80 <flatcc_builder_create_struct@@Base>:
  419d80:	push   rbp
  419d81:	mov    rbp,rsp
  419d84:	sub    rsp,0xc0
  419d8b:	mov    QWORD PTR [rbp-0x8],rdi
  419d8f:	mov    QWORD PTR [rbp-0x10],rsi
  419d93:	mov    QWORD PTR [rbp-0x18],rdx
  419d97:	mov    WORD PTR [rbp-0x1a],cx
  419d9b:	movzx  eax,WORD PTR [rbp-0x1a]
  419d9f:	cmp    eax,0x1
  419da2:	jl     419dad <flatcc_builder_create_struct@@Base+0x2d>
  419da8:	jmp    419dcc <flatcc_builder_create_struct@@Base+0x4c>
  419dad:	lea    rdi,[rip+0xd1e6]        # 426f9a <flatcc_builder_padding_base@@Base+0x3ea>
  419db4:	lea    rsi,[rip+0xd007]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  419dbb:	mov    edx,0x30f
  419dc0:	lea    rcx,[rip+0xd1de]        # 426fa5 <flatcc_builder_padding_base@@Base+0x3f5>
  419dc7:	call   404090 <__assert_fail@plt>
  419dcc:	mov    rdi,QWORD PTR [rbp-0x8]
  419dd0:	movzx  esi,WORD PTR [rbp-0x1a]
  419dd4:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  419dd9:	mov    rdi,QWORD PTR [rbp-0x8]
  419ddd:	mov    rax,QWORD PTR [rbp-0x18]
  419de1:	mov    esi,eax
  419de3:	movzx  edx,WORD PTR [rbp-0x1a]
  419de7:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  419dec:	mov    eax,eax
  419dee:	mov    ecx,eax
  419df0:	mov    QWORD PTR [rbp-0x28],rcx
  419df4:	mov    QWORD PTR [rbp-0xb8],0x0
  419dff:	mov    DWORD PTR [rbp-0xb0],0x0
  419e09:	cmp    QWORD PTR [rbp-0x18],0x0
  419e0e:	jbe    419e78 <flatcc_builder_create_struct@@Base+0xf8>
  419e14:	mov    rax,QWORD PTR [rbp-0x18]
  419e18:	add    rax,QWORD PTR [rbp-0xb8]
  419e1f:	mov    QWORD PTR [rbp-0xb8],rax
  419e26:	mov    rax,QWORD PTR [rbp-0x10]
  419e2a:	lea    rcx,[rbp-0xb8]
  419e31:	mov    rdx,rcx
  419e34:	add    rdx,0x10
  419e3b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  419e42:	shl    rsi,0x4
  419e46:	add    rdx,rsi
  419e49:	mov    QWORD PTR [rdx],rax
  419e4c:	mov    rax,QWORD PTR [rbp-0x18]
  419e50:	add    rcx,0x10
  419e57:	movsxd rdx,DWORD PTR [rbp-0xb0]
  419e5e:	shl    rdx,0x4
  419e62:	add    rcx,rdx
  419e65:	mov    QWORD PTR [rcx+0x8],rax
  419e69:	mov    edi,DWORD PTR [rbp-0xb0]
  419e6f:	add    edi,0x1
  419e72:	mov    DWORD PTR [rbp-0xb0],edi
  419e78:	cmp    QWORD PTR [rbp-0x28],0x0
  419e7d:	jbe    419eea <flatcc_builder_create_struct@@Base+0x16a>
  419e83:	lea    rax,[rip+0xcd26]        # 426bb0 <flatcc_builder_padding_base@@Base>
  419e8a:	mov    rcx,QWORD PTR [rbp-0x28]
  419e8e:	add    rcx,QWORD PTR [rbp-0xb8]
  419e95:	mov    QWORD PTR [rbp-0xb8],rcx
  419e9c:	lea    rcx,[rbp-0xb8]
  419ea3:	mov    rdx,rcx
  419ea6:	add    rdx,0x10
  419ead:	movsxd rsi,DWORD PTR [rbp-0xb0]
  419eb4:	shl    rsi,0x4
  419eb8:	add    rdx,rsi
  419ebb:	mov    QWORD PTR [rdx],rax
  419ebe:	mov    rax,QWORD PTR [rbp-0x28]
  419ec2:	add    rcx,0x10
  419ec9:	movsxd rdx,DWORD PTR [rbp-0xb0]
  419ed0:	shl    rdx,0x4
  419ed4:	add    rcx,rdx
  419ed7:	mov    QWORD PTR [rcx+0x8],rax
  419edb:	mov    edi,DWORD PTR [rbp-0xb0]
  419ee1:	add    edi,0x1
  419ee4:	mov    DWORD PTR [rbp-0xb0],edi
  419eea:	mov    rdi,QWORD PTR [rbp-0x8]
  419eee:	lea    rsi,[rbp-0xb8]
  419ef5:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  419efa:	add    rsp,0xc0
  419f01:	pop    rbp
  419f02:	ret    
  419f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f0d:	nop    DWORD PTR [rax]

0000000000419f10 <flatcc_builder_start_buffer@@Base>:
  419f10:	push   rbp
  419f11:	mov    rbp,rsp
  419f14:	sub    rsp,0x30
  419f18:	mov    QWORD PTR [rbp-0x10],rdi
  419f1c:	mov    QWORD PTR [rbp-0x18],rsi
  419f20:	mov    WORD PTR [rbp-0x1a],dx
  419f24:	mov    DWORD PTR [rbp-0x20],ecx
  419f27:	mov    rdi,QWORD PTR [rbp-0x10]
  419f2b:	mov    rax,QWORD PTR [rbp-0x10]
  419f2f:	movzx  esi,WORD PTR [rax+0xe8]
  419f36:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  419f3b:	cmp    eax,0x0
  419f3e:	je     419f50 <flatcc_builder_start_buffer@@Base+0x40>
  419f44:	mov    DWORD PTR [rbp-0x4],0xffffffff
  419f4b:	jmp    41a071 <flatcc_builder_start_buffer@@Base+0x161>
  419f50:	mov    rax,QWORD PTR [rbp-0x10]
  419f54:	mov    WORD PTR [rax+0xe8],0x1
  419f5d:	mov    rax,QWORD PTR [rbp-0x10]
  419f61:	mov    cx,WORD PTR [rax+0xec]
  419f68:	mov    rax,QWORD PTR [rbp-0x10]
  419f6c:	mov    rax,QWORD PTR [rax+0x30]
  419f70:	mov    WORD PTR [rax+0x22],cx
  419f74:	mov    cx,WORD PTR [rbp-0x1a]
  419f78:	mov    rax,QWORD PTR [rbp-0x10]
  419f7c:	mov    WORD PTR [rax+0xec],cx
  419f83:	mov    rax,QWORD PTR [rbp-0x10]
  419f87:	mov    cx,WORD PTR [rax+0x10c]
  419f8e:	mov    rax,QWORD PTR [rbp-0x10]
  419f92:	mov    rax,QWORD PTR [rax+0x30]
  419f96:	mov    WORD PTR [rax+0x20],cx
  419f9a:	mov    edx,DWORD PTR [rbp-0x20]
  419f9d:	mov    rax,QWORD PTR [rbp-0x10]
  419fa1:	mov    WORD PTR [rax+0x10c],dx
  419fa8:	mov    rax,QWORD PTR [rbp-0x10]
  419fac:	mov    esi,DWORD PTR [rax+0xf8]
  419fb2:	mov    rax,QWORD PTR [rbp-0x10]
  419fb6:	mov    rax,QWORD PTR [rax+0x30]
  419fba:	mov    DWORD PTR [rax+0x14],esi
  419fbd:	mov    rax,QWORD PTR [rbp-0x10]
  419fc1:	mov    esi,DWORD PTR [rax+0x100]
  419fc7:	mov    rax,QWORD PTR [rbp-0x10]
  419fcb:	mov    rax,QWORD PTR [rax+0x30]
  419fcf:	mov    DWORD PTR [rax+0x1c],esi
  419fd2:	mov    rax,QWORD PTR [rbp-0x10]
  419fd6:	mov    esi,DWORD PTR [rax+0xf0]
  419fdc:	mov    rax,QWORD PTR [rbp-0x10]
  419fe0:	mov    DWORD PTR [rax+0xf8],esi
  419fe6:	mov    rax,QWORD PTR [rbp-0x10]
  419fea:	mov    esi,DWORD PTR [rax+0xfc]
  419ff0:	mov    edi,esi
  419ff2:	add    edi,0x1
  419ff5:	mov    DWORD PTR [rax+0xfc],edi
  419ffb:	mov    rax,QWORD PTR [rbp-0x10]
  419fff:	mov    DWORD PTR [rax+0x100],esi
  41a005:	mov    rax,QWORD PTR [rbp-0x10]
  41a009:	mov    esi,DWORD PTR [rax+0x110]
  41a00f:	mov    rax,QWORD PTR [rbp-0x10]
  41a013:	mov    rax,QWORD PTR [rax+0x30]
  41a017:	mov    DWORD PTR [rax+0x10],esi
  41a01a:	mov    rax,QWORD PTR [rbp-0x10]
  41a01e:	add    rax,0x110
  41a024:	cmp    QWORD PTR [rbp-0x18],0x0
  41a029:	mov    QWORD PTR [rbp-0x28],rax
  41a02d:	je     41a040 <flatcc_builder_start_buffer@@Base+0x130>
  41a033:	mov    rax,QWORD PTR [rbp-0x18]
  41a037:	mov    QWORD PTR [rbp-0x30],rax
  41a03b:	jmp    41a050 <flatcc_builder_start_buffer@@Base+0x140>
  41a040:	lea    rax,[rip+0xcb69]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41a047:	mov    QWORD PTR [rbp-0x30],rax
  41a04b:	jmp    41a050 <flatcc_builder_start_buffer@@Base+0x140>
  41a050:	mov    rax,QWORD PTR [rbp-0x30]
  41a054:	mov    ecx,DWORD PTR [rax]
  41a056:	mov    rax,QWORD PTR [rbp-0x28]
  41a05a:	mov    DWORD PTR [rax],ecx
  41a05c:	mov    rdx,QWORD PTR [rbp-0x10]
  41a060:	mov    rdx,QWORD PTR [rdx+0x30]
  41a064:	mov    WORD PTR [rdx+0xe],0x1
  41a06a:	mov    DWORD PTR [rbp-0x4],0x0
  41a071:	mov    eax,DWORD PTR [rbp-0x4]
  41a074:	add    rsp,0x30
  41a078:	pop    rbp
  41a079:	ret    
  41a07a:	nop    WORD PTR [rax+rax*1+0x0]
  41a080:	push   rbp
  41a081:	mov    rbp,rsp
  41a084:	sub    rsp,0x20
  41a088:	mov    QWORD PTR [rbp-0x10],rdi
  41a08c:	mov    WORD PTR [rbp-0x12],si
  41a090:	mov    rax,QWORD PTR [rbp-0x10]
  41a094:	mov    ecx,DWORD PTR [rax+0x104]
  41a09a:	add    ecx,0x1
  41a09d:	mov    DWORD PTR [rax+0x104],ecx
  41a0a3:	mov    rax,QWORD PTR [rbp-0x10]
  41a0a7:	cmp    ecx,DWORD PTR [rax+0x108]
  41a0ad:	jle    41a19a <flatcc_builder_start_buffer@@Base+0x28a>
  41a0b3:	mov    rax,QWORD PTR [rbp-0x10]
  41a0b7:	cmp    DWORD PTR [rax+0x120],0x0
  41a0be:	jle    41a0ea <flatcc_builder_start_buffer@@Base+0x1da>
  41a0c4:	mov    rax,QWORD PTR [rbp-0x10]
  41a0c8:	mov    ecx,DWORD PTR [rax+0x104]
  41a0ce:	mov    rax,QWORD PTR [rbp-0x10]
  41a0d2:	cmp    ecx,DWORD PTR [rax+0x120]
  41a0d8:	jle    41a0ea <flatcc_builder_start_buffer@@Base+0x1da>
  41a0de:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a0e5:	jmp    41a235 <flatcc_builder_start_buffer@@Base+0x325>
  41a0ea:	xor    r8d,r8d
  41a0ed:	mov    rdi,QWORD PTR [rbp-0x10]
  41a0f1:	mov    rax,QWORD PTR [rbp-0x10]
  41a0f5:	mov    ecx,DWORD PTR [rax+0x104]
  41a0fb:	sub    ecx,0x1
  41a0fe:	movsxd rax,ecx
  41a101:	imul   rdx,rax,0x24
  41a108:	mov    esi,0x4
  41a10d:	mov    ecx,0x24
  41a112:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41a117:	mov    rcx,QWORD PTR [rbp-0x10]
  41a11b:	mov    QWORD PTR [rcx+0x30],rax
  41a11f:	cmp    rax,0x0
  41a123:	jne    41a135 <flatcc_builder_start_buffer@@Base+0x225>
  41a129:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a130:	jmp    41a235 <flatcc_builder_start_buffer@@Base+0x325>
  41a135:	mov    rax,QWORD PTR [rbp-0x10]
  41a139:	mov    rax,QWORD PTR [rax+0xa0]
  41a140:	xor    ecx,ecx
  41a142:	mov    edx,ecx
  41a144:	mov    esi,0x24
  41a149:	div    rsi
  41a14c:	mov    rsi,QWORD PTR [rbp-0x10]
  41a150:	mov    DWORD PTR [rsi+0x108],eax
  41a156:	mov    rsi,QWORD PTR [rbp-0x10]
  41a15a:	cmp    DWORD PTR [rsi+0x120],0x0
  41a161:	jle    41a195 <flatcc_builder_start_buffer@@Base+0x285>
  41a167:	mov    rax,QWORD PTR [rbp-0x10]
  41a16b:	mov    ecx,DWORD PTR [rax+0x120]
  41a171:	mov    rax,QWORD PTR [rbp-0x10]
  41a175:	cmp    ecx,DWORD PTR [rax+0x108]
  41a17b:	jge    41a195 <flatcc_builder_start_buffer@@Base+0x285>
  41a181:	mov    rax,QWORD PTR [rbp-0x10]
  41a185:	mov    ecx,DWORD PTR [rax+0x120]
  41a18b:	mov    rax,QWORD PTR [rbp-0x10]
  41a18f:	mov    DWORD PTR [rax+0x108],ecx
  41a195:	jmp    41a1ad <flatcc_builder_start_buffer@@Base+0x29d>
  41a19a:	mov    rax,QWORD PTR [rbp-0x10]
  41a19e:	mov    rcx,QWORD PTR [rax+0x30]
  41a1a2:	add    rcx,0x24
  41a1a9:	mov    QWORD PTR [rax+0x30],rcx
  41a1ad:	mov    rax,QWORD PTR [rbp-0x10]
  41a1b1:	mov    ecx,DWORD PTR [rax+0x20]
  41a1b4:	mov    rax,QWORD PTR [rbp-0x10]
  41a1b8:	mov    rax,QWORD PTR [rax+0x30]
  41a1bc:	mov    DWORD PTR [rax+0x8],ecx
  41a1bf:	mov    rax,QWORD PTR [rbp-0x10]
  41a1c3:	mov    dx,WORD PTR [rax+0xea]
  41a1ca:	mov    rax,QWORD PTR [rbp-0x10]
  41a1ce:	mov    rax,QWORD PTR [rax+0x30]
  41a1d2:	mov    WORD PTR [rax+0xc],dx
  41a1d6:	mov    dx,WORD PTR [rbp-0x12]
  41a1da:	mov    rax,QWORD PTR [rbp-0x10]
  41a1de:	mov    WORD PTR [rax+0xea],dx
  41a1e5:	mov    rax,QWORD PTR [rbp-0x10]
  41a1e9:	mov    ecx,DWORD PTR [rax+0x28]
  41a1ec:	mov    rax,QWORD PTR [rbp-0x10]
  41a1f0:	mov    rax,QWORD PTR [rax+0x30]
  41a1f4:	mov    DWORD PTR [rax],ecx
  41a1f6:	mov    rax,QWORD PTR [rbp-0x10]
  41a1fa:	mov    rax,QWORD PTR [rax+0x30]
  41a1fe:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41a205:	mov    rax,QWORD PTR [rbp-0x10]
  41a209:	mov    ecx,DWORD PTR [rax+0x28]
  41a20c:	mov    rax,QWORD PTR [rbp-0x10]
  41a210:	add    ecx,DWORD PTR [rax+0x20]
  41a213:	add    ecx,0x8
  41a216:	sub    ecx,0x1
  41a219:	and    ecx,0xfffffff8
  41a21c:	mov    rax,QWORD PTR [rbp-0x10]
  41a220:	mov    DWORD PTR [rax+0x28],ecx
  41a223:	mov    rax,QWORD PTR [rbp-0x10]
  41a227:	mov    DWORD PTR [rax+0x20],0x0
  41a22e:	mov    DWORD PTR [rbp-0x4],0x0
  41a235:	mov    eax,DWORD PTR [rbp-0x4]
  41a238:	add    rsp,0x20
  41a23c:	pop    rbp
  41a23d:	ret    
  41a23e:	xchg   ax,ax

000000000041a240 <flatcc_builder_end_buffer@@Base>:
  41a240:	push   rbp
  41a241:	mov    rbp,rsp
  41a244:	sub    rsp,0x20
  41a248:	xor    eax,eax
  41a24a:	mov    QWORD PTR [rbp-0x10],rdi
  41a24e:	mov    DWORD PTR [rbp-0x14],esi
  41a251:	mov    rcx,QWORD PTR [rbp-0x10]
  41a255:	movzx  edx,WORD PTR [rcx+0x10c]
  41a25c:	and    edx,0x2
  41a25f:	mov    DWORD PTR [rbp-0x1c],edx
  41a262:	mov    rcx,QWORD PTR [rbp-0x10]
  41a266:	mov    edx,DWORD PTR [rcx+0x100]
  41a26c:	cmp    edx,0x0
  41a26f:	mov    edx,0x1
  41a274:	cmove  edx,eax
  41a277:	or     edx,DWORD PTR [rbp-0x1c]
  41a27a:	mov    DWORD PTR [rbp-0x1c],edx
  41a27d:	mov    rcx,QWORD PTR [rbp-0x10]
  41a281:	mov    rcx,QWORD PTR [rcx+0x30]
  41a285:	movzx  eax,WORD PTR [rcx+0xe]
  41a289:	cmp    eax,0x1
  41a28c:	jne    41a297 <flatcc_builder_end_buffer@@Base+0x57>
  41a292:	jmp    41a2b6 <flatcc_builder_end_buffer@@Base+0x76>
  41a297:	lea    rdi,[rip+0xcd6d]        # 42700b <flatcc_builder_padding_base@@Base+0x45b>
  41a29e:	lea    rsi,[rip+0xcb1d]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a2a5:	mov    edx,0x346
  41a2aa:	lea    rcx,[rip+0xcd86]        # 427037 <flatcc_builder_padding_base@@Base+0x487>
  41a2b1:	call   404090 <__assert_fail@plt>
  41a2b6:	mov    rdi,QWORD PTR [rbp-0x10]
  41a2ba:	mov    rax,QWORD PTR [rbp-0x10]
  41a2be:	movzx  esi,WORD PTR [rax+0xec]
  41a2c5:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41a2ca:	mov    rdi,QWORD PTR [rbp-0x10]
  41a2ce:	mov    rax,QWORD PTR [rbp-0x10]
  41a2d2:	add    rax,0x110
  41a2d8:	mov    rcx,QWORD PTR [rbp-0x10]
  41a2dc:	mov    dx,WORD PTR [rcx+0xec]
  41a2e3:	mov    ecx,DWORD PTR [rbp-0x14]
  41a2e6:	mov    r8,QWORD PTR [rbp-0x10]
  41a2ea:	mov    r9w,WORD PTR [r8+0xe8]
  41a2f2:	mov    esi,DWORD PTR [rbp-0x1c]
  41a2f5:	mov    DWORD PTR [rbp-0x20],esi
  41a2f8:	mov    rsi,rax
  41a2fb:	movzx  edx,dx
  41a2fe:	movzx  r8d,r9w
  41a302:	mov    r9d,DWORD PTR [rbp-0x20]
  41a306:	call   419910 <flatcc_builder_create_buffer@@Base>
  41a30b:	xor    ecx,ecx
  41a30d:	mov    DWORD PTR [rbp-0x18],eax
  41a310:	cmp    ecx,eax
  41a312:	jne    41a324 <flatcc_builder_end_buffer@@Base+0xe4>
  41a318:	mov    DWORD PTR [rbp-0x4],0x0
  41a31f:	jmp    41a389 <flatcc_builder_end_buffer@@Base+0x149>
  41a324:	mov    rax,QWORD PTR [rbp-0x10]
  41a328:	mov    rax,QWORD PTR [rax+0x30]
  41a32c:	mov    ecx,DWORD PTR [rax+0x14]
  41a32f:	mov    rax,QWORD PTR [rbp-0x10]
  41a333:	mov    DWORD PTR [rax+0xf8],ecx
  41a339:	mov    rax,QWORD PTR [rbp-0x10]
  41a33d:	mov    rax,QWORD PTR [rax+0x30]
  41a341:	mov    ecx,DWORD PTR [rax+0x1c]
  41a344:	mov    rax,QWORD PTR [rbp-0x10]
  41a348:	mov    DWORD PTR [rax+0x100],ecx
  41a34e:	mov    rax,QWORD PTR [rbp-0x10]
  41a352:	mov    rax,QWORD PTR [rax+0x30]
  41a356:	mov    ecx,DWORD PTR [rax+0x10]
  41a359:	mov    rax,QWORD PTR [rbp-0x10]
  41a35d:	mov    DWORD PTR [rax+0x110],ecx
  41a363:	mov    rax,QWORD PTR [rbp-0x10]
  41a367:	mov    rax,QWORD PTR [rax+0x30]
  41a36b:	mov    dx,WORD PTR [rax+0x20]
  41a36f:	mov    rax,QWORD PTR [rbp-0x10]
  41a373:	mov    WORD PTR [rax+0x10c],dx
  41a37a:	mov    rdi,QWORD PTR [rbp-0x10]
  41a37e:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41a383:	mov    ecx,DWORD PTR [rbp-0x18]
  41a386:	mov    DWORD PTR [rbp-0x4],ecx
  41a389:	mov    eax,DWORD PTR [rbp-0x4]
  41a38c:	add    rsp,0x20
  41a390:	pop    rbp
  41a391:	ret    
  41a392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a39c:	nop    DWORD PTR [rax+0x0]
  41a3a0:	push   rbp
  41a3a1:	mov    rbp,rsp
  41a3a4:	sub    rsp,0x10
  41a3a8:	xor    esi,esi
  41a3aa:	mov    QWORD PTR [rbp-0x8],rdi
  41a3ae:	mov    rax,QWORD PTR [rbp-0x8]
  41a3b2:	mov    rdi,QWORD PTR [rax+0x18]
  41a3b6:	mov    rax,QWORD PTR [rbp-0x8]
  41a3ba:	mov    ecx,DWORD PTR [rax+0x20]
  41a3bd:	mov    edx,ecx
  41a3bf:	call   4040a0 <memset@plt>
  41a3c4:	mov    rax,QWORD PTR [rbp-0x8]
  41a3c8:	mov    rax,QWORD PTR [rax+0x30]
  41a3cc:	mov    ecx,DWORD PTR [rax+0x8]
  41a3cf:	mov    rax,QWORD PTR [rbp-0x8]
  41a3d3:	mov    DWORD PTR [rax+0x20],ecx
  41a3d6:	mov    rax,QWORD PTR [rbp-0x8]
  41a3da:	mov    rax,QWORD PTR [rax+0x30]
  41a3de:	mov    ecx,DWORD PTR [rax]
  41a3e0:	mov    rax,QWORD PTR [rbp-0x8]
  41a3e4:	mov    DWORD PTR [rax+0x28],ecx
  41a3e7:	mov    rdi,QWORD PTR [rbp-0x8]
  41a3eb:	mov    rax,QWORD PTR [rbp-0x8]
  41a3ef:	mov    rax,QWORD PTR [rax+0x30]
  41a3f3:	mov    esi,DWORD PTR [rax+0x4]
  41a3f6:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41a3fb:	mov    rdi,QWORD PTR [rbp-0x8]
  41a3ff:	mov    rax,QWORD PTR [rbp-0x8]
  41a403:	movzx  esi,WORD PTR [rax+0xea]
  41a40a:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41a40f:	mov    rax,QWORD PTR [rbp-0x8]
  41a413:	mov    rax,QWORD PTR [rax+0x30]
  41a417:	mov    r8w,WORD PTR [rax+0xc]
  41a41c:	mov    rax,QWORD PTR [rbp-0x8]
  41a420:	mov    WORD PTR [rax+0xea],r8w
  41a428:	mov    rax,QWORD PTR [rbp-0x8]
  41a42c:	mov    rdx,QWORD PTR [rax+0x30]
  41a430:	add    rdx,0xffffffffffffffdc
  41a437:	mov    QWORD PTR [rax+0x30],rdx
  41a43b:	mov    rax,QWORD PTR [rbp-0x8]
  41a43f:	mov    ecx,DWORD PTR [rax+0x104]
  41a445:	add    ecx,0xffffffff
  41a448:	mov    DWORD PTR [rax+0x104],ecx
  41a44e:	add    rsp,0x10
  41a452:	pop    rbp
  41a453:	ret    
  41a454:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a45e:	xchg   ax,ax

000000000041a460 <flatcc_builder_start_struct@@Base>:
  41a460:	push   rbp
  41a461:	mov    rbp,rsp
  41a464:	sub    rsp,0x20
  41a468:	mov    QWORD PTR [rbp-0x10],rdi
  41a46c:	mov    QWORD PTR [rbp-0x18],rsi
  41a470:	mov    WORD PTR [rbp-0x1a],dx
  41a474:	mov    rdi,QWORD PTR [rbp-0x10]
  41a478:	movzx  esi,WORD PTR [rbp-0x1a]
  41a47c:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41a481:	cmp    eax,0x0
  41a484:	je     41a497 <flatcc_builder_start_struct@@Base+0x37>
  41a48a:	mov    QWORD PTR [rbp-0x8],0x0
  41a492:	jmp    41a4c6 <flatcc_builder_start_struct@@Base+0x66>
  41a497:	mov    rax,QWORD PTR [rbp-0x10]
  41a49b:	mov    rax,QWORD PTR [rax+0x30]
  41a49f:	mov    WORD PTR [rax+0xe],0x2
  41a4a5:	mov    rdi,QWORD PTR [rbp-0x10]
  41a4a9:	mov    esi,0xfffffffc
  41a4ae:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41a4b3:	mov    rdi,QWORD PTR [rbp-0x10]
  41a4b7:	mov    rax,QWORD PTR [rbp-0x18]
  41a4bb:	mov    esi,eax
  41a4bd:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41a4c2:	mov    QWORD PTR [rbp-0x8],rax
  41a4c6:	mov    rax,QWORD PTR [rbp-0x8]
  41a4ca:	add    rsp,0x20
  41a4ce:	pop    rbp
  41a4cf:	ret    
  41a4d0:	push   rbp
  41a4d1:	mov    rbp,rsp
  41a4d4:	mov    QWORD PTR [rbp-0x8],rdi
  41a4d8:	mov    DWORD PTR [rbp-0xc],esi
  41a4db:	mov    rax,QWORD PTR [rbp-0x8]
  41a4df:	add    rax,0x58
  41a4e5:	add    rax,0x10
  41a4eb:	mov    QWORD PTR [rbp-0x18],rax
  41a4ef:	mov    rax,QWORD PTR [rbp-0x8]
  41a4f3:	mov    rax,QWORD PTR [rax+0x68]
  41a4f7:	mov    rcx,QWORD PTR [rbp-0x8]
  41a4fb:	mov    edx,DWORD PTR [rcx+0x28]
  41a4fe:	mov    ecx,edx
  41a500:	add    rax,rcx
  41a503:	mov    rcx,QWORD PTR [rbp-0x8]
  41a507:	mov    QWORD PTR [rcx+0x18],rax
  41a50b:	mov    rax,QWORD PTR [rbp-0x18]
  41a50f:	mov    rax,QWORD PTR [rax+0x8]
  41a513:	mov    rcx,QWORD PTR [rbp-0x8]
  41a517:	sub    eax,DWORD PTR [rcx+0x28]
  41a51a:	mov    rcx,QWORD PTR [rbp-0x8]
  41a51e:	mov    DWORD PTR [rcx+0x24],eax
  41a521:	mov    rcx,QWORD PTR [rbp-0x8]
  41a525:	mov    eax,DWORD PTR [rcx+0x24]
  41a528:	cmp    eax,DWORD PTR [rbp-0xc]
  41a52b:	jbe    41a53b <flatcc_builder_start_struct@@Base+0xdb>
  41a531:	mov    eax,DWORD PTR [rbp-0xc]
  41a534:	mov    rcx,QWORD PTR [rbp-0x8]
  41a538:	mov    DWORD PTR [rcx+0x24],eax
  41a53b:	mov    eax,DWORD PTR [rbp-0xc]
  41a53e:	mov    rcx,QWORD PTR [rbp-0x8]
  41a542:	mov    rcx,QWORD PTR [rcx+0x30]
  41a546:	mov    DWORD PTR [rcx+0x4],eax
  41a549:	pop    rbp
  41a54a:	ret    
  41a54b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a550:	push   rbp
  41a551:	mov    rbp,rsp
  41a554:	sub    rsp,0x20
  41a558:	mov    QWORD PTR [rbp-0x10],rdi
  41a55c:	mov    DWORD PTR [rbp-0x14],esi
  41a55f:	mov    rax,QWORD PTR [rbp-0x10]
  41a563:	mov    ecx,DWORD PTR [rax+0x20]
  41a566:	mov    eax,ecx
  41a568:	mov    QWORD PTR [rbp-0x20],rax
  41a56c:	mov    ecx,DWORD PTR [rbp-0x14]
  41a56f:	mov    rax,QWORD PTR [rbp-0x10]
  41a573:	add    ecx,DWORD PTR [rax+0x20]
  41a576:	mov    DWORD PTR [rax+0x20],ecx
  41a579:	mov    rax,QWORD PTR [rbp-0x10]
  41a57d:	cmp    ecx,DWORD PTR [rax+0x24]
  41a580:	jb     41a5bd <flatcc_builder_start_struct@@Base+0x15d>
  41a586:	mov    rdi,QWORD PTR [rbp-0x10]
  41a58a:	mov    rax,QWORD PTR [rbp-0x10]
  41a58e:	mov    ecx,DWORD PTR [rax+0x20]
  41a591:	add    ecx,0x1
  41a594:	mov    ecx,ecx
  41a596:	mov    esi,ecx
  41a598:	mov    edx,0xfffffffc
  41a59d:	call   41e530 <flatcc_builder_get_emit_context@@Base+0x50>
  41a5a2:	cmp    eax,0x0
  41a5a5:	je     41a5b8 <flatcc_builder_start_struct@@Base+0x158>
  41a5ab:	mov    QWORD PTR [rbp-0x8],0x0
  41a5b3:	jmp    41a5cd <flatcc_builder_start_struct@@Base+0x16d>
  41a5b8:	jmp    41a5bd <flatcc_builder_start_struct@@Base+0x15d>
  41a5bd:	mov    rax,QWORD PTR [rbp-0x10]
  41a5c1:	mov    rax,QWORD PTR [rax+0x18]
  41a5c5:	add    rax,QWORD PTR [rbp-0x20]
  41a5c9:	mov    QWORD PTR [rbp-0x8],rax
  41a5cd:	mov    rax,QWORD PTR [rbp-0x8]
  41a5d1:	add    rsp,0x20
  41a5d5:	pop    rbp
  41a5d6:	ret    
  41a5d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a5e0 <flatcc_builder_struct_edit@@Base>:
  41a5e0:	push   rbp
  41a5e1:	mov    rbp,rsp
  41a5e4:	mov    QWORD PTR [rbp-0x8],rdi
  41a5e8:	mov    rax,QWORD PTR [rbp-0x8]
  41a5ec:	mov    rax,QWORD PTR [rax+0x18]
  41a5f0:	pop    rbp
  41a5f1:	ret    
  41a5f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5fc:	nop    DWORD PTR [rax+0x0]

000000000041a600 <flatcc_builder_end_struct@@Base>:
  41a600:	push   rbp
  41a601:	mov    rbp,rsp
  41a604:	sub    rsp,0x20
  41a608:	mov    QWORD PTR [rbp-0x10],rdi
  41a60c:	mov    rax,QWORD PTR [rbp-0x10]
  41a610:	mov    rax,QWORD PTR [rax+0x30]
  41a614:	movzx  ecx,WORD PTR [rax+0xe]
  41a618:	cmp    ecx,0x2
  41a61b:	jne    41a626 <flatcc_builder_end_struct@@Base+0x26>
  41a621:	jmp    41a645 <flatcc_builder_end_struct@@Base+0x45>
  41a626:	lea    rdi,[rip+0xca63]        # 427090 <flatcc_builder_padding_base@@Base+0x4e0>
  41a62d:	lea    rsi,[rip+0xc78e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a634:	mov    edx,0x368
  41a639:	lea    rcx,[rip+0xca7c]        # 4270bc <flatcc_builder_padding_base@@Base+0x50c>
  41a640:	call   404090 <__assert_fail@plt>
  41a645:	mov    rdi,QWORD PTR [rbp-0x10]
  41a649:	mov    rax,QWORD PTR [rbp-0x10]
  41a64d:	mov    rsi,QWORD PTR [rax+0x18]
  41a651:	mov    rax,QWORD PTR [rbp-0x10]
  41a655:	mov    ecx,DWORD PTR [rax+0x20]
  41a658:	mov    edx,ecx
  41a65a:	mov    rax,QWORD PTR [rbp-0x10]
  41a65e:	movzx  ecx,WORD PTR [rax+0xea]
  41a665:	call   419d80 <flatcc_builder_create_struct@@Base>
  41a66a:	xor    ecx,ecx
  41a66c:	mov    DWORD PTR [rbp-0x14],eax
  41a66f:	cmp    ecx,eax
  41a671:	jne    41a683 <flatcc_builder_end_struct@@Base+0x83>
  41a677:	mov    DWORD PTR [rbp-0x4],0x0
  41a67e:	jmp    41a692 <flatcc_builder_end_struct@@Base+0x92>
  41a683:	mov    rdi,QWORD PTR [rbp-0x10]
  41a687:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41a68c:	mov    eax,DWORD PTR [rbp-0x14]
  41a68f:	mov    DWORD PTR [rbp-0x4],eax
  41a692:	mov    eax,DWORD PTR [rbp-0x4]
  41a695:	add    rsp,0x20
  41a699:	pop    rbp
  41a69a:	ret    
  41a69b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a6a0 <flatcc_builder_extend_vector@@Base>:
  41a6a0:	push   rbp
  41a6a1:	mov    rbp,rsp
  41a6a4:	sub    rsp,0x20
  41a6a8:	mov    QWORD PTR [rbp-0x10],rdi
  41a6ac:	mov    QWORD PTR [rbp-0x18],rsi
  41a6b0:	mov    rdi,QWORD PTR [rbp-0x10]
  41a6b4:	mov    rax,QWORD PTR [rbp-0x18]
  41a6b8:	mov    rcx,QWORD PTR [rbp-0x10]
  41a6bc:	mov    rcx,QWORD PTR [rcx+0x30]
  41a6c0:	mov    edx,DWORD PTR [rcx+0x18]
  41a6c3:	mov    esi,eax
  41a6c5:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41a6ca:	cmp    eax,0x0
  41a6cd:	je     41a6e0 <flatcc_builder_extend_vector@@Base+0x40>
  41a6d3:	mov    QWORD PTR [rbp-0x8],0x0
  41a6db:	jmp    41a701 <flatcc_builder_extend_vector@@Base+0x61>
  41a6e0:	mov    rdi,QWORD PTR [rbp-0x10]
  41a6e4:	mov    rax,QWORD PTR [rbp-0x10]
  41a6e8:	mov    rax,QWORD PTR [rax+0x30]
  41a6ec:	mov    ecx,DWORD PTR [rax+0x10]
  41a6ef:	mov    rax,QWORD PTR [rbp-0x18]
  41a6f3:	imul   ecx,eax
  41a6f6:	mov    esi,ecx
  41a6f8:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41a6fd:	mov    QWORD PTR [rbp-0x8],rax
  41a701:	mov    rax,QWORD PTR [rbp-0x8]
  41a705:	add    rsp,0x20
  41a709:	pop    rbp
  41a70a:	ret    
  41a70b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a710:	push   rbp
  41a711:	mov    rbp,rsp
  41a714:	sub    rsp,0x20
  41a718:	mov    QWORD PTR [rbp-0x10],rdi
  41a71c:	mov    DWORD PTR [rbp-0x14],esi
  41a71f:	mov    DWORD PTR [rbp-0x18],edx
  41a722:	mov    rax,QWORD PTR [rbp-0x10]
  41a726:	mov    rax,QWORD PTR [rax+0x30]
  41a72a:	mov    ecx,DWORD PTR [rax+0x14]
  41a72d:	mov    DWORD PTR [rbp-0x1c],ecx
  41a730:	mov    ecx,DWORD PTR [rbp-0x1c]
  41a733:	add    ecx,DWORD PTR [rbp-0x14]
  41a736:	mov    DWORD PTR [rbp-0x20],ecx
  41a739:	mov    ecx,DWORD PTR [rbp-0x1c]
  41a73c:	cmp    ecx,DWORD PTR [rbp-0x20]
  41a73f:	ja     41a751 <flatcc_builder_extend_vector@@Base+0xb1>
  41a745:	mov    eax,DWORD PTR [rbp-0x20]
  41a748:	cmp    eax,DWORD PTR [rbp-0x18]
  41a74b:	jbe    41a799 <flatcc_builder_extend_vector@@Base+0xf9>
  41a751:	mov    eax,DWORD PTR [rbp-0x1c]
  41a754:	cmp    eax,DWORD PTR [rbp-0x20]
  41a757:	ja     41a76e <flatcc_builder_extend_vector@@Base+0xce>
  41a75d:	mov    eax,DWORD PTR [rbp-0x20]
  41a760:	cmp    eax,DWORD PTR [rbp-0x18]
  41a763:	ja     41a76e <flatcc_builder_extend_vector@@Base+0xce>
  41a769:	jmp    41a78d <flatcc_builder_extend_vector@@Base+0xed>
  41a76e:	lea    rdi,[rip+0xd716]        # 427e8b <flatcc_builder_padding_base@@Base+0x12db>
  41a775:	lea    rsi,[rip+0xc646]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a77c:	mov    edx,0x37c
  41a781:	lea    rcx,[rip+0xd71e]        # 427ea6 <flatcc_builder_padding_base@@Base+0x12f6>
  41a788:	call   404090 <__assert_fail@plt>
  41a78d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a794:	jmp    41a7ae <flatcc_builder_extend_vector@@Base+0x10e>
  41a799:	mov    eax,DWORD PTR [rbp-0x20]
  41a79c:	mov    rcx,QWORD PTR [rbp-0x10]
  41a7a0:	mov    rcx,QWORD PTR [rcx+0x30]
  41a7a4:	mov    DWORD PTR [rcx+0x14],eax
  41a7a7:	mov    DWORD PTR [rbp-0x4],0x0
  41a7ae:	mov    eax,DWORD PTR [rbp-0x4]
  41a7b1:	add    rsp,0x20
  41a7b5:	pop    rbp
  41a7b6:	ret    
  41a7b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a7c0 <flatcc_builder_vector_push@@Base>:
  41a7c0:	push   rbp
  41a7c1:	mov    rbp,rsp
  41a7c4:	sub    rsp,0x20
  41a7c8:	mov    QWORD PTR [rbp-0x10],rdi
  41a7cc:	mov    QWORD PTR [rbp-0x18],rsi
  41a7d0:	mov    rax,QWORD PTR [rbp-0x10]
  41a7d4:	mov    rax,QWORD PTR [rax+0x30]
  41a7d8:	movzx  ecx,WORD PTR [rax+0xe]
  41a7dc:	cmp    ecx,0x4
  41a7df:	jne    41a7ea <flatcc_builder_vector_push@@Base+0x2a>
  41a7e5:	jmp    41a809 <flatcc_builder_vector_push@@Base+0x49>
  41a7ea:	lea    rdi,[rip+0xc90e]        # 4270ff <flatcc_builder_padding_base@@Base+0x54f>
  41a7f1:	lea    rsi,[rip+0xc5ca]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a7f8:	mov    edx,0x38b
  41a7fd:	lea    rcx,[rip+0xc927]        # 42712b <flatcc_builder_padding_base@@Base+0x57b>
  41a804:	call   404090 <__assert_fail@plt>
  41a809:	mov    rax,QWORD PTR [rbp-0x10]
  41a80d:	mov    rax,QWORD PTR [rax+0x30]
  41a811:	mov    ecx,DWORD PTR [rax+0x14]
  41a814:	mov    rax,QWORD PTR [rbp-0x10]
  41a818:	mov    rax,QWORD PTR [rax+0x30]
  41a81c:	cmp    ecx,DWORD PTR [rax+0x18]
  41a81f:	jbe    41a872 <flatcc_builder_vector_push@@Base+0xb2>
  41a825:	mov    rax,QWORD PTR [rbp-0x10]
  41a829:	mov    rax,QWORD PTR [rax+0x30]
  41a82d:	mov    ecx,DWORD PTR [rax+0x14]
  41a830:	mov    rax,QWORD PTR [rbp-0x10]
  41a834:	mov    rax,QWORD PTR [rax+0x30]
  41a838:	cmp    ecx,DWORD PTR [rax+0x18]
  41a83b:	ja     41a846 <flatcc_builder_vector_push@@Base+0x86>
  41a841:	jmp    41a865 <flatcc_builder_vector_push@@Base+0xa5>
  41a846:	lea    rdi,[rip+0xc921]        # 42716e <flatcc_builder_padding_base@@Base+0x5be>
  41a84d:	lea    rsi,[rip+0xc56e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a854:	mov    edx,0x38c
  41a859:	lea    rcx,[rip+0xc8cb]        # 42712b <flatcc_builder_padding_base@@Base+0x57b>
  41a860:	call   404090 <__assert_fail@plt>
  41a865:	mov    QWORD PTR [rbp-0x8],0x0
  41a86d:	jmp    41a89f <flatcc_builder_vector_push@@Base+0xdf>
  41a872:	mov    rax,QWORD PTR [rbp-0x10]
  41a876:	mov    rax,QWORD PTR [rax+0x30]
  41a87a:	mov    ecx,DWORD PTR [rax+0x14]
  41a87d:	add    ecx,0x1
  41a880:	mov    DWORD PTR [rax+0x14],ecx
  41a883:	mov    rdi,QWORD PTR [rbp-0x10]
  41a887:	mov    rsi,QWORD PTR [rbp-0x18]
  41a88b:	mov    rax,QWORD PTR [rbp-0x10]
  41a88f:	mov    rax,QWORD PTR [rax+0x30]
  41a893:	mov    edx,DWORD PTR [rax+0x10]
  41a896:	call   41a8b0 <flatcc_builder_vector_push@@Base+0xf0>
  41a89b:	mov    QWORD PTR [rbp-0x8],rax
  41a89f:	mov    rax,QWORD PTR [rbp-0x8]
  41a8a3:	add    rsp,0x20
  41a8a7:	pop    rbp
  41a8a8:	ret    
  41a8a9:	nop    DWORD PTR [rax+0x0]
  41a8b0:	push   rbp
  41a8b1:	mov    rbp,rsp
  41a8b4:	sub    rsp,0x30
  41a8b8:	mov    QWORD PTR [rbp-0x10],rdi
  41a8bc:	mov    QWORD PTR [rbp-0x18],rsi
  41a8c0:	mov    DWORD PTR [rbp-0x1c],edx
  41a8c3:	mov    rdi,QWORD PTR [rbp-0x10]
  41a8c7:	mov    esi,DWORD PTR [rbp-0x1c]
  41a8ca:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41a8cf:	mov    QWORD PTR [rbp-0x28],rax
  41a8d3:	cmp    rax,0x0
  41a8d7:	jne    41a8ea <flatcc_builder_vector_push@@Base+0x12a>
  41a8dd:	mov    QWORD PTR [rbp-0x8],0x0
  41a8e5:	jmp    41a904 <flatcc_builder_vector_push@@Base+0x144>
  41a8ea:	mov    rdi,QWORD PTR [rbp-0x28]
  41a8ee:	mov    rsi,QWORD PTR [rbp-0x18]
  41a8f2:	mov    eax,DWORD PTR [rbp-0x1c]
  41a8f5:	mov    edx,eax
  41a8f7:	call   4040f0 <memcpy@plt>
  41a8fc:	mov    rcx,QWORD PTR [rbp-0x28]
  41a900:	mov    QWORD PTR [rbp-0x8],rcx
  41a904:	mov    rax,QWORD PTR [rbp-0x8]
  41a908:	add    rsp,0x30
  41a90c:	pop    rbp
  41a90d:	ret    
  41a90e:	xchg   ax,ax

000000000041a910 <flatcc_builder_append_vector@@Base>:
  41a910:	push   rbp
  41a911:	mov    rbp,rsp
  41a914:	sub    rsp,0x20
  41a918:	mov    QWORD PTR [rbp-0x10],rdi
  41a91c:	mov    QWORD PTR [rbp-0x18],rsi
  41a920:	mov    QWORD PTR [rbp-0x20],rdx
  41a924:	mov    rax,QWORD PTR [rbp-0x10]
  41a928:	mov    rax,QWORD PTR [rax+0x30]
  41a92c:	movzx  ecx,WORD PTR [rax+0xe]
  41a930:	cmp    ecx,0x4
  41a933:	jne    41a93e <flatcc_builder_append_vector@@Base+0x2e>
  41a939:	jmp    41a95d <flatcc_builder_append_vector@@Base+0x4d>
  41a93e:	lea    rdi,[rip+0xc7ba]        # 4270ff <flatcc_builder_padding_base@@Base+0x54f>
  41a945:	lea    rsi,[rip+0xc476]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a94c:	mov    edx,0x393
  41a951:	lea    rcx,[rip+0xc853]        # 4271ab <flatcc_builder_padding_base@@Base+0x5fb>
  41a958:	call   404090 <__assert_fail@plt>
  41a95d:	mov    rdi,QWORD PTR [rbp-0x10]
  41a961:	mov    rax,QWORD PTR [rbp-0x20]
  41a965:	mov    rcx,QWORD PTR [rbp-0x10]
  41a969:	mov    rcx,QWORD PTR [rcx+0x30]
  41a96d:	mov    edx,DWORD PTR [rcx+0x18]
  41a970:	mov    esi,eax
  41a972:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41a977:	cmp    eax,0x0
  41a97a:	je     41a98d <flatcc_builder_append_vector@@Base+0x7d>
  41a980:	mov    QWORD PTR [rbp-0x8],0x0
  41a988:	jmp    41a9b2 <flatcc_builder_append_vector@@Base+0xa2>
  41a98d:	mov    rdi,QWORD PTR [rbp-0x10]
  41a991:	mov    rsi,QWORD PTR [rbp-0x18]
  41a995:	mov    rax,QWORD PTR [rbp-0x10]
  41a999:	mov    rax,QWORD PTR [rax+0x30]
  41a99d:	mov    ecx,DWORD PTR [rax+0x10]
  41a9a0:	mov    rax,QWORD PTR [rbp-0x20]
  41a9a4:	imul   ecx,eax
  41a9a7:	mov    edx,ecx
  41a9a9:	call   41a8b0 <flatcc_builder_vector_push@@Base+0xf0>
  41a9ae:	mov    QWORD PTR [rbp-0x8],rax
  41a9b2:	mov    rax,QWORD PTR [rbp-0x8]
  41a9b6:	add    rsp,0x20
  41a9ba:	pop    rbp
  41a9bb:	ret    
  41a9bc:	nop    DWORD PTR [rax+0x0]

000000000041a9c0 <flatcc_builder_extend_offset_vector@@Base>:
  41a9c0:	push   rbp
  41a9c1:	mov    rbp,rsp
  41a9c4:	sub    rsp,0x20
  41a9c8:	mov    QWORD PTR [rbp-0x10],rdi
  41a9cc:	mov    QWORD PTR [rbp-0x18],rsi
  41a9d0:	mov    rdi,QWORD PTR [rbp-0x10]
  41a9d4:	mov    rax,QWORD PTR [rbp-0x18]
  41a9d8:	mov    esi,eax
  41a9da:	mov    edx,0x3fffffff
  41a9df:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41a9e4:	cmp    eax,0x0
  41a9e7:	je     41a9fa <flatcc_builder_extend_offset_vector@@Base+0x3a>
  41a9ed:	mov    QWORD PTR [rbp-0x8],0x0
  41a9f5:	jmp    41aa15 <flatcc_builder_extend_offset_vector@@Base+0x55>
  41a9fa:	mov    rdi,QWORD PTR [rbp-0x10]
  41a9fe:	mov    rax,QWORD PTR [rbp-0x18]
  41aa02:	mov    eax,eax
  41aa04:	mov    ecx,eax
  41aa06:	shl    rcx,0x2
  41aa0a:	mov    esi,ecx
  41aa0c:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41aa11:	mov    QWORD PTR [rbp-0x8],rax
  41aa15:	mov    rax,QWORD PTR [rbp-0x8]
  41aa19:	add    rsp,0x20
  41aa1d:	pop    rbp
  41aa1e:	ret    
  41aa1f:	nop

000000000041aa20 <flatcc_builder_offset_vector_push@@Base>:
  41aa20:	push   rbp
  41aa21:	mov    rbp,rsp
  41aa24:	sub    rsp,0x20
  41aa28:	mov    QWORD PTR [rbp-0x10],rdi
  41aa2c:	mov    DWORD PTR [rbp-0x14],esi
  41aa2f:	mov    rax,QWORD PTR [rbp-0x10]
  41aa33:	mov    rax,QWORD PTR [rax+0x30]
  41aa37:	movzx  ecx,WORD PTR [rax+0xe]
  41aa3b:	cmp    ecx,0x5
  41aa3e:	jne    41aa49 <flatcc_builder_offset_vector_push@@Base+0x29>
  41aa44:	jmp    41aa68 <flatcc_builder_offset_vector_push@@Base+0x48>
  41aa49:	lea    rdi,[rip+0xc7a8]        # 4271f8 <flatcc_builder_padding_base@@Base+0x648>
  41aa50:	lea    rsi,[rip+0xc36b]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41aa57:	mov    edx,0x3a6
  41aa5c:	lea    rcx,[rip+0xc7c8]        # 42722b <flatcc_builder_padding_base@@Base+0x67b>
  41aa63:	call   404090 <__assert_fail@plt>
  41aa68:	mov    rax,QWORD PTR [rbp-0x10]
  41aa6c:	mov    rax,QWORD PTR [rax+0x30]
  41aa70:	mov    ecx,DWORD PTR [rax+0x14]
  41aa73:	mov    eax,ecx
  41aa75:	cmp    rax,0x3fffffff
  41aa7b:	jne    41aa8e <flatcc_builder_offset_vector_push@@Base+0x6e>
  41aa81:	mov    QWORD PTR [rbp-0x8],0x0
  41aa89:	jmp    41aadc <flatcc_builder_offset_vector_push@@Base+0xbc>
  41aa8e:	mov    rax,QWORD PTR [rbp-0x10]
  41aa92:	mov    rax,QWORD PTR [rax+0x30]
  41aa96:	mov    ecx,DWORD PTR [rax+0x14]
  41aa99:	add    ecx,0x1
  41aa9c:	mov    DWORD PTR [rax+0x14],ecx
  41aa9f:	mov    rdi,QWORD PTR [rbp-0x10]
  41aaa3:	mov    esi,0x4
  41aaa8:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41aaad:	xor    ecx,ecx
  41aaaf:	mov    edx,ecx
  41aab1:	mov    QWORD PTR [rbp-0x20],rax
  41aab5:	cmp    rdx,rax
  41aab8:	jne    41aacb <flatcc_builder_offset_vector_push@@Base+0xab>
  41aabe:	mov    QWORD PTR [rbp-0x8],0x0
  41aac6:	jmp    41aadc <flatcc_builder_offset_vector_push@@Base+0xbc>
  41aacb:	mov    eax,DWORD PTR [rbp-0x14]
  41aace:	mov    rcx,QWORD PTR [rbp-0x20]
  41aad2:	mov    DWORD PTR [rcx],eax
  41aad4:	mov    rcx,QWORD PTR [rbp-0x20]
  41aad8:	mov    QWORD PTR [rbp-0x8],rcx
  41aadc:	mov    rax,QWORD PTR [rbp-0x8]
  41aae0:	add    rsp,0x20
  41aae4:	pop    rbp
  41aae5:	ret    
  41aae6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041aaf0 <flatcc_builder_append_offset_vector@@Base>:
  41aaf0:	push   rbp
  41aaf1:	mov    rbp,rsp
  41aaf4:	sub    rsp,0x20
  41aaf8:	mov    QWORD PTR [rbp-0x10],rdi
  41aafc:	mov    QWORD PTR [rbp-0x18],rsi
  41ab00:	mov    QWORD PTR [rbp-0x20],rdx
  41ab04:	mov    rax,QWORD PTR [rbp-0x10]
  41ab08:	mov    rax,QWORD PTR [rax+0x30]
  41ab0c:	movzx  ecx,WORD PTR [rax+0xe]
  41ab10:	cmp    ecx,0x5
  41ab13:	jne    41ab1e <flatcc_builder_append_offset_vector@@Base+0x2e>
  41ab19:	jmp    41ab3d <flatcc_builder_append_offset_vector@@Base+0x4d>
  41ab1e:	lea    rdi,[rip+0xc6d3]        # 4271f8 <flatcc_builder_padding_base@@Base+0x648>
  41ab25:	lea    rsi,[rip+0xc296]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ab2c:	mov    edx,0x3b4
  41ab31:	lea    rcx,[rip+0xc755]        # 42728d <flatcc_builder_padding_base@@Base+0x6dd>
  41ab38:	call   404090 <__assert_fail@plt>
  41ab3d:	mov    rdi,QWORD PTR [rbp-0x10]
  41ab41:	mov    rax,QWORD PTR [rbp-0x20]
  41ab45:	mov    esi,eax
  41ab47:	mov    edx,0x3fffffff
  41ab4c:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41ab51:	cmp    eax,0x0
  41ab54:	je     41ab67 <flatcc_builder_append_offset_vector@@Base+0x77>
  41ab5a:	mov    QWORD PTR [rbp-0x8],0x0
  41ab62:	jmp    41ab87 <flatcc_builder_append_offset_vector@@Base+0x97>
  41ab67:	mov    rdi,QWORD PTR [rbp-0x10]
  41ab6b:	mov    rax,QWORD PTR [rbp-0x18]
  41ab6f:	mov    rcx,QWORD PTR [rbp-0x20]
  41ab73:	mov    ecx,ecx
  41ab75:	mov    edx,ecx
  41ab77:	shl    rdx,0x2
  41ab7b:	mov    rsi,rax
  41ab7e:	call   41a8b0 <flatcc_builder_vector_push@@Base+0xf0>
  41ab83:	mov    QWORD PTR [rbp-0x8],rax
  41ab87:	mov    rax,QWORD PTR [rbp-0x8]
  41ab8b:	add    rsp,0x20
  41ab8f:	pop    rbp
  41ab90:	ret    
  41ab91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041aba0 <flatcc_builder_extend_string@@Base>:
  41aba0:	push   rbp
  41aba1:	mov    rbp,rsp
  41aba4:	sub    rsp,0x20
  41aba8:	mov    QWORD PTR [rbp-0x10],rdi
  41abac:	mov    QWORD PTR [rbp-0x18],rsi
  41abb0:	mov    rax,QWORD PTR [rbp-0x10]
  41abb4:	mov    rax,QWORD PTR [rax+0x30]
  41abb8:	movzx  ecx,WORD PTR [rax+0xe]
  41abbc:	cmp    ecx,0x6
  41abbf:	jne    41abca <flatcc_builder_extend_string@@Base+0x2a>
  41abc5:	jmp    41abe9 <flatcc_builder_extend_string@@Base+0x49>
  41abca:	lea    rdi,[rip+0xc730]        # 427301 <flatcc_builder_padding_base@@Base+0x751>
  41abd1:	lea    rsi,[rip+0xc1ea]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41abd8:	mov    edx,0x3bd
  41abdd:	lea    rcx,[rip+0xc749]        # 42732d <flatcc_builder_padding_base@@Base+0x77d>
  41abe4:	call   404090 <__assert_fail@plt>
  41abe9:	mov    rdi,QWORD PTR [rbp-0x10]
  41abed:	mov    rax,QWORD PTR [rbp-0x18]
  41abf1:	mov    esi,eax
  41abf3:	mov    edx,0xffffffff
  41abf8:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41abfd:	cmp    eax,0x0
  41ac00:	je     41ac13 <flatcc_builder_extend_string@@Base+0x73>
  41ac06:	mov    QWORD PTR [rbp-0x8],0x0
  41ac0e:	jmp    41ac26 <flatcc_builder_extend_string@@Base+0x86>
  41ac13:	mov    rdi,QWORD PTR [rbp-0x10]
  41ac17:	mov    rax,QWORD PTR [rbp-0x18]
  41ac1b:	mov    esi,eax
  41ac1d:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41ac22:	mov    QWORD PTR [rbp-0x8],rax
  41ac26:	mov    rax,QWORD PTR [rbp-0x8]
  41ac2a:	add    rsp,0x20
  41ac2e:	pop    rbp
  41ac2f:	ret    

000000000041ac30 <flatcc_builder_append_string@@Base>:
  41ac30:	push   rbp
  41ac31:	mov    rbp,rsp
  41ac34:	sub    rsp,0x20
  41ac38:	mov    QWORD PTR [rbp-0x10],rdi
  41ac3c:	mov    QWORD PTR [rbp-0x18],rsi
  41ac40:	mov    QWORD PTR [rbp-0x20],rdx
  41ac44:	mov    rax,QWORD PTR [rbp-0x10]
  41ac48:	mov    rax,QWORD PTR [rax+0x30]
  41ac4c:	movzx  ecx,WORD PTR [rax+0xe]
  41ac50:	cmp    ecx,0x6
  41ac53:	jne    41ac5e <flatcc_builder_append_string@@Base+0x2e>
  41ac59:	jmp    41ac7d <flatcc_builder_append_string@@Base+0x4d>
  41ac5e:	lea    rdi,[rip+0xc69c]        # 427301 <flatcc_builder_padding_base@@Base+0x751>
  41ac65:	lea    rsi,[rip+0xc156]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ac6c:	mov    edx,0x3c6
  41ac71:	lea    rcx,[rip+0xc6f4]        # 42736c <flatcc_builder_padding_base@@Base+0x7bc>
  41ac78:	call   404090 <__assert_fail@plt>
  41ac7d:	mov    rdi,QWORD PTR [rbp-0x10]
  41ac81:	mov    rax,QWORD PTR [rbp-0x20]
  41ac85:	mov    esi,eax
  41ac87:	mov    edx,0xffffffff
  41ac8c:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41ac91:	cmp    eax,0x0
  41ac94:	je     41aca7 <flatcc_builder_append_string@@Base+0x77>
  41ac9a:	mov    QWORD PTR [rbp-0x8],0x0
  41aca2:	jmp    41acbe <flatcc_builder_append_string@@Base+0x8e>
  41aca7:	mov    rdi,QWORD PTR [rbp-0x10]
  41acab:	mov    rsi,QWORD PTR [rbp-0x18]
  41acaf:	mov    rax,QWORD PTR [rbp-0x20]
  41acb3:	mov    edx,eax
  41acb5:	call   41a8b0 <flatcc_builder_vector_push@@Base+0xf0>
  41acba:	mov    QWORD PTR [rbp-0x8],rax
  41acbe:	mov    rax,QWORD PTR [rbp-0x8]
  41acc2:	add    rsp,0x20
  41acc6:	pop    rbp
  41acc7:	ret    
  41acc8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041acd0 <flatcc_builder_append_string_str@@Base>:
  41acd0:	push   rbp
  41acd1:	mov    rbp,rsp
  41acd4:	sub    rsp,0x20
  41acd8:	mov    QWORD PTR [rbp-0x8],rdi
  41acdc:	mov    QWORD PTR [rbp-0x10],rsi
  41ace0:	mov    rdi,QWORD PTR [rbp-0x8]
  41ace4:	mov    rsi,QWORD PTR [rbp-0x10]
  41ace8:	mov    rax,QWORD PTR [rbp-0x10]
  41acec:	mov    QWORD PTR [rbp-0x18],rdi
  41acf0:	mov    rdi,rax
  41acf3:	mov    QWORD PTR [rbp-0x20],rsi
  41acf7:	call   404060 <strlen@plt>
  41acfc:	mov    rdi,QWORD PTR [rbp-0x18]
  41ad00:	mov    rsi,QWORD PTR [rbp-0x20]
  41ad04:	mov    rdx,rax
  41ad07:	call   41ac30 <flatcc_builder_append_string@@Base>
  41ad0c:	add    rsp,0x20
  41ad10:	pop    rbp
  41ad11:	ret    
  41ad12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad1c:	nop    DWORD PTR [rax+0x0]

000000000041ad20 <flatcc_builder_append_string_strn@@Base>:
  41ad20:	push   rbp
  41ad21:	mov    rbp,rsp
  41ad24:	sub    rsp,0x30
  41ad28:	mov    QWORD PTR [rbp-0x8],rdi
  41ad2c:	mov    QWORD PTR [rbp-0x10],rsi
  41ad30:	mov    QWORD PTR [rbp-0x18],rdx
  41ad34:	mov    rdi,QWORD PTR [rbp-0x8]
  41ad38:	mov    rsi,QWORD PTR [rbp-0x10]
  41ad3c:	mov    rax,QWORD PTR [rbp-0x10]
  41ad40:	mov    rcx,QWORD PTR [rbp-0x18]
  41ad44:	mov    QWORD PTR [rbp-0x20],rdi
  41ad48:	mov    rdi,rax
  41ad4b:	mov    QWORD PTR [rbp-0x28],rsi
  41ad4f:	mov    rsi,rcx
  41ad52:	call   41ad70 <flatcc_builder_append_string_strn@@Base+0x50>
  41ad57:	mov    rdi,QWORD PTR [rbp-0x20]
  41ad5b:	mov    rsi,QWORD PTR [rbp-0x28]
  41ad5f:	mov    rdx,rax
  41ad62:	call   41ac30 <flatcc_builder_append_string@@Base>
  41ad67:	add    rsp,0x30
  41ad6b:	pop    rbp
  41ad6c:	ret    
  41ad6d:	nop    DWORD PTR [rax]
  41ad70:	push   rbp
  41ad71:	mov    rbp,rsp
  41ad74:	sub    rsp,0x20
  41ad78:	mov    QWORD PTR [rbp-0x8],rdi
  41ad7c:	mov    QWORD PTR [rbp-0x10],rsi
  41ad80:	mov    rdi,QWORD PTR [rbp-0x8]
  41ad84:	mov    rdx,QWORD PTR [rbp-0x10]
  41ad88:	xor    esi,esi
  41ad8a:	call   4040b0 <memchr@plt>
  41ad8f:	mov    QWORD PTR [rbp-0x18],rax
  41ad93:	cmp    QWORD PTR [rbp-0x18],0x0
  41ad98:	je     41adb2 <flatcc_builder_append_string_strn@@Base+0x92>
  41ad9e:	mov    rax,QWORD PTR [rbp-0x18]
  41ada2:	mov    rcx,QWORD PTR [rbp-0x8]
  41ada6:	sub    rax,rcx
  41ada9:	mov    QWORD PTR [rbp-0x20],rax
  41adad:	jmp    41adba <flatcc_builder_append_string_strn@@Base+0x9a>
  41adb2:	mov    rax,QWORD PTR [rbp-0x10]
  41adb6:	mov    QWORD PTR [rbp-0x20],rax
  41adba:	mov    rax,QWORD PTR [rbp-0x20]
  41adbe:	add    rsp,0x20
  41adc2:	pop    rbp
  41adc3:	ret    
  41adc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41adce:	xchg   ax,ax

000000000041add0 <flatcc_builder_truncate_vector@@Base>:
  41add0:	push   rbp
  41add1:	mov    rbp,rsp
  41add4:	sub    rsp,0x20
  41add8:	mov    QWORD PTR [rbp-0x10],rdi
  41addc:	mov    QWORD PTR [rbp-0x18],rsi
  41ade0:	mov    rax,QWORD PTR [rbp-0x10]
  41ade4:	mov    rax,QWORD PTR [rax+0x30]
  41ade8:	movzx  ecx,WORD PTR [rax+0xe]
  41adec:	cmp    ecx,0x4
  41adef:	jne    41adfa <flatcc_builder_truncate_vector@@Base+0x2a>
  41adf5:	jmp    41ae19 <flatcc_builder_truncate_vector@@Base+0x49>
  41adfa:	lea    rdi,[rip+0xc2fe]        # 4270ff <flatcc_builder_padding_base@@Base+0x54f>
  41ae01:	lea    rsi,[rip+0xbfba]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ae08:	mov    edx,0x3d9
  41ae0d:	lea    rcx,[rip+0xc5a5]        # 4273b9 <flatcc_builder_padding_base@@Base+0x809>
  41ae14:	call   404090 <__assert_fail@plt>
  41ae19:	mov    rax,QWORD PTR [rbp-0x10]
  41ae1d:	mov    rax,QWORD PTR [rax+0x30]
  41ae21:	mov    ecx,DWORD PTR [rax+0x14]
  41ae24:	mov    eax,ecx
  41ae26:	cmp    rax,QWORD PTR [rbp-0x18]
  41ae2a:	jae    41ae77 <flatcc_builder_truncate_vector@@Base+0xa7>
  41ae30:	mov    rax,QWORD PTR [rbp-0x10]
  41ae34:	mov    rax,QWORD PTR [rax+0x30]
  41ae38:	mov    ecx,DWORD PTR [rax+0x14]
  41ae3b:	mov    eax,ecx
  41ae3d:	cmp    rax,QWORD PTR [rbp-0x18]
  41ae41:	jb     41ae4c <flatcc_builder_truncate_vector@@Base+0x7c>
  41ae47:	jmp    41ae6b <flatcc_builder_truncate_vector@@Base+0x9b>
  41ae4c:	lea    rdi,[rip+0xc5a5]        # 4273f8 <flatcc_builder_padding_base@@Base+0x848>
  41ae53:	lea    rsi,[rip+0xbf68]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ae5a:	mov    edx,0x3da
  41ae5f:	lea    rcx,[rip+0xc553]        # 4273b9 <flatcc_builder_padding_base@@Base+0x809>
  41ae66:	call   404090 <__assert_fail@plt>
  41ae6b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ae72:	jmp    41aeaf <flatcc_builder_truncate_vector@@Base+0xdf>
  41ae77:	mov    rax,QWORD PTR [rbp-0x18]
  41ae7b:	mov    rcx,QWORD PTR [rbp-0x10]
  41ae7f:	mov    rcx,QWORD PTR [rcx+0x30]
  41ae83:	mov    edx,DWORD PTR [rcx+0x14]
  41ae86:	sub    edx,eax
  41ae88:	mov    DWORD PTR [rcx+0x14],edx
  41ae8b:	mov    rdi,QWORD PTR [rbp-0x10]
  41ae8f:	mov    rcx,QWORD PTR [rbp-0x10]
  41ae93:	mov    rcx,QWORD PTR [rcx+0x30]
  41ae97:	mov    eax,DWORD PTR [rcx+0x10]
  41ae9a:	mov    rcx,QWORD PTR [rbp-0x18]
  41ae9e:	imul   eax,ecx
  41aea1:	mov    esi,eax
  41aea3:	call   41aec0 <flatcc_builder_truncate_vector@@Base+0xf0>
  41aea8:	mov    DWORD PTR [rbp-0x4],0x0
  41aeaf:	mov    eax,DWORD PTR [rbp-0x4]
  41aeb2:	add    rsp,0x20
  41aeb6:	pop    rbp
  41aeb7:	ret    
  41aeb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41aec0:	push   rbp
  41aec1:	mov    rbp,rsp
  41aec4:	sub    rsp,0x20
  41aec8:	xor    eax,eax
  41aeca:	mov    QWORD PTR [rbp-0x8],rdi
  41aece:	mov    DWORD PTR [rbp-0xc],esi
  41aed1:	mov    ecx,DWORD PTR [rbp-0xc]
  41aed4:	mov    rdx,QWORD PTR [rbp-0x8]
  41aed8:	mov    esi,DWORD PTR [rdx+0x20]
  41aedb:	sub    esi,ecx
  41aedd:	mov    DWORD PTR [rdx+0x20],esi
  41aee0:	mov    rdx,QWORD PTR [rbp-0x8]
  41aee4:	mov    rdx,QWORD PTR [rdx+0x18]
  41aee8:	mov    rdi,QWORD PTR [rbp-0x8]
  41aeec:	mov    ecx,DWORD PTR [rdi+0x20]
  41aeef:	mov    edi,ecx
  41aef1:	add    rdx,rdi
  41aef4:	mov    ecx,DWORD PTR [rbp-0xc]
  41aef7:	mov    edi,ecx
  41aef9:	mov    QWORD PTR [rbp-0x18],rdi
  41aefd:	mov    rdi,rdx
  41af00:	mov    esi,eax
  41af02:	mov    rdx,QWORD PTR [rbp-0x18]
  41af06:	call   4040a0 <memset@plt>
  41af0b:	add    rsp,0x20
  41af0f:	pop    rbp
  41af10:	ret    
  41af11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041af20 <flatcc_builder_truncate_offset_vector@@Base>:
  41af20:	push   rbp
  41af21:	mov    rbp,rsp
  41af24:	sub    rsp,0x20
  41af28:	mov    QWORD PTR [rbp-0x10],rdi
  41af2c:	mov    QWORD PTR [rbp-0x18],rsi
  41af30:	mov    rax,QWORD PTR [rbp-0x10]
  41af34:	mov    rax,QWORD PTR [rax+0x30]
  41af38:	movzx  ecx,WORD PTR [rax+0xe]
  41af3c:	cmp    ecx,0x5
  41af3f:	jne    41af4a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  41af45:	jmp    41af69 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  41af4a:	lea    rdi,[rip+0xc2a7]        # 4271f8 <flatcc_builder_padding_base@@Base+0x648>
  41af51:	lea    rsi,[rip+0xbe6a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41af58:	mov    edx,0x3e2
  41af5d:	lea    rcx,[rip+0xc4b8]        # 42741c <flatcc_builder_padding_base@@Base+0x86c>
  41af64:	call   404090 <__assert_fail@plt>
  41af69:	mov    rax,QWORD PTR [rbp-0x10]
  41af6d:	mov    rax,QWORD PTR [rax+0x30]
  41af71:	mov    ecx,DWORD PTR [rax+0x14]
  41af74:	mov    rax,QWORD PTR [rbp-0x18]
  41af78:	cmp    ecx,eax
  41af7a:	jae    41afc7 <flatcc_builder_truncate_offset_vector@@Base+0xa7>
  41af80:	mov    rax,QWORD PTR [rbp-0x10]
  41af84:	mov    rax,QWORD PTR [rax+0x30]
  41af88:	mov    ecx,DWORD PTR [rax+0x14]
  41af8b:	mov    rax,QWORD PTR [rbp-0x18]
  41af8f:	cmp    ecx,eax
  41af91:	jb     41af9c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
  41af97:	jmp    41afbb <flatcc_builder_truncate_offset_vector@@Base+0x9b>
  41af9c:	lea    rdi,[rip+0xc4bf]        # 427462 <flatcc_builder_padding_base@@Base+0x8b2>
  41afa3:	lea    rsi,[rip+0xbe18]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41afaa:	mov    edx,0x3e3
  41afaf:	lea    rcx,[rip+0xc466]        # 42741c <flatcc_builder_padding_base@@Base+0x86c>
  41afb6:	call   404090 <__assert_fail@plt>
  41afbb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41afc2:	jmp    41afff <flatcc_builder_truncate_offset_vector@@Base+0xdf>
  41afc7:	mov    rax,QWORD PTR [rbp-0x18]
  41afcb:	mov    rcx,QWORD PTR [rbp-0x10]
  41afcf:	mov    rcx,QWORD PTR [rcx+0x30]
  41afd3:	mov    edx,DWORD PTR [rcx+0x14]
  41afd6:	sub    edx,eax
  41afd8:	mov    DWORD PTR [rcx+0x14],edx
  41afdb:	mov    rdi,QWORD PTR [rbp-0x10]
  41afdf:	mov    rcx,QWORD PTR [rbp-0x10]
  41afe3:	mov    rcx,QWORD PTR [rcx+0x30]
  41afe7:	mov    eax,DWORD PTR [rcx+0x10]
  41afea:	mov    rcx,QWORD PTR [rbp-0x18]
  41afee:	imul   eax,ecx
  41aff1:	mov    esi,eax
  41aff3:	call   41aec0 <flatcc_builder_truncate_vector@@Base+0xf0>
  41aff8:	mov    DWORD PTR [rbp-0x4],0x0
  41afff:	mov    eax,DWORD PTR [rbp-0x4]
  41b002:	add    rsp,0x20
  41b006:	pop    rbp
  41b007:	ret    
  41b008:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b010 <flatcc_builder_truncate_string@@Base>:
  41b010:	push   rbp
  41b011:	mov    rbp,rsp
  41b014:	sub    rsp,0x20
  41b018:	mov    QWORD PTR [rbp-0x10],rdi
  41b01c:	mov    QWORD PTR [rbp-0x18],rsi
  41b020:	mov    rax,QWORD PTR [rbp-0x10]
  41b024:	mov    rax,QWORD PTR [rax+0x30]
  41b028:	movzx  ecx,WORD PTR [rax+0xe]
  41b02c:	cmp    ecx,0x6
  41b02f:	jne    41b03a <flatcc_builder_truncate_string@@Base+0x2a>
  41b035:	jmp    41b059 <flatcc_builder_truncate_string@@Base+0x49>
  41b03a:	lea    rdi,[rip+0xc2c0]        # 427301 <flatcc_builder_padding_base@@Base+0x751>
  41b041:	lea    rsi,[rip+0xbd7a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b048:	mov    edx,0x3eb
  41b04d:	lea    rcx,[rip+0xc449]        # 42749d <flatcc_builder_padding_base@@Base+0x8ed>
  41b054:	call   404090 <__assert_fail@plt>
  41b059:	mov    rax,QWORD PTR [rbp-0x10]
  41b05d:	mov    rax,QWORD PTR [rax+0x30]
  41b061:	mov    ecx,DWORD PTR [rax+0x14]
  41b064:	mov    eax,ecx
  41b066:	cmp    rax,QWORD PTR [rbp-0x18]
  41b06a:	jae    41b0b7 <flatcc_builder_truncate_string@@Base+0xa7>
  41b070:	mov    rax,QWORD PTR [rbp-0x10]
  41b074:	mov    rax,QWORD PTR [rax+0x30]
  41b078:	mov    ecx,DWORD PTR [rax+0x14]
  41b07b:	mov    eax,ecx
  41b07d:	cmp    rax,QWORD PTR [rbp-0x18]
  41b081:	jb     41b08c <flatcc_builder_truncate_string@@Base+0x7c>
  41b087:	jmp    41b0ab <flatcc_builder_truncate_string@@Base+0x9b>
  41b08c:	lea    rdi,[rip+0xc449]        # 4274dc <flatcc_builder_padding_base@@Base+0x92c>
  41b093:	lea    rsi,[rip+0xbd28]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b09a:	mov    edx,0x3ec
  41b09f:	lea    rcx,[rip+0xc3f7]        # 42749d <flatcc_builder_padding_base@@Base+0x8ed>
  41b0a6:	call   404090 <__assert_fail@plt>
  41b0ab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b0b2:	jmp    41b0e1 <flatcc_builder_truncate_string@@Base+0xd1>
  41b0b7:	mov    rax,QWORD PTR [rbp-0x18]
  41b0bb:	mov    rcx,QWORD PTR [rbp-0x10]
  41b0bf:	mov    rcx,QWORD PTR [rcx+0x30]
  41b0c3:	mov    edx,DWORD PTR [rcx+0x14]
  41b0c6:	sub    edx,eax
  41b0c8:	mov    DWORD PTR [rcx+0x14],edx
  41b0cb:	mov    rdi,QWORD PTR [rbp-0x10]
  41b0cf:	mov    rcx,QWORD PTR [rbp-0x18]
  41b0d3:	mov    esi,ecx
  41b0d5:	call   41aec0 <flatcc_builder_truncate_vector@@Base+0xf0>
  41b0da:	mov    DWORD PTR [rbp-0x4],0x0
  41b0e1:	mov    eax,DWORD PTR [rbp-0x4]
  41b0e4:	add    rsp,0x20
  41b0e8:	pop    rbp
  41b0e9:	ret    
  41b0ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b0f0 <flatcc_builder_start_vector@@Base>:
  41b0f0:	push   rbp
  41b0f1:	mov    rbp,rsp
  41b0f4:	sub    rsp,0x30
  41b0f8:	mov    QWORD PTR [rbp-0x10],rdi
  41b0fc:	mov    QWORD PTR [rbp-0x18],rsi
  41b100:	mov    WORD PTR [rbp-0x1a],dx
  41b104:	mov    QWORD PTR [rbp-0x28],rcx
  41b108:	lea    rdi,[rbp-0x1a]
  41b10c:	mov    esi,0x4
  41b111:	call   41b1a0 <flatcc_builder_start_vector@@Base+0xb0>
  41b116:	mov    rdi,QWORD PTR [rbp-0x10]
  41b11a:	movzx  esi,WORD PTR [rbp-0x1a]
  41b11e:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41b123:	cmp    eax,0x0
  41b126:	je     41b138 <flatcc_builder_start_vector@@Base+0x48>
  41b12c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b133:	jmp    41b188 <flatcc_builder_start_vector@@Base+0x98>
  41b138:	mov    rax,QWORD PTR [rbp-0x18]
  41b13c:	mov    rcx,QWORD PTR [rbp-0x10]
  41b140:	mov    rcx,QWORD PTR [rcx+0x30]
  41b144:	mov    DWORD PTR [rcx+0x10],eax
  41b147:	mov    rcx,QWORD PTR [rbp-0x10]
  41b14b:	mov    rcx,QWORD PTR [rcx+0x30]
  41b14f:	mov    DWORD PTR [rcx+0x14],0x0
  41b156:	mov    rcx,QWORD PTR [rbp-0x28]
  41b15a:	mov    rdx,QWORD PTR [rbp-0x10]
  41b15e:	mov    rdx,QWORD PTR [rdx+0x30]
  41b162:	mov    DWORD PTR [rdx+0x18],ecx
  41b165:	mov    rdx,QWORD PTR [rbp-0x10]
  41b169:	mov    rdx,QWORD PTR [rdx+0x30]
  41b16d:	mov    WORD PTR [rdx+0xe],0x4
  41b173:	mov    rdi,QWORD PTR [rbp-0x10]
  41b177:	mov    esi,0xfffffffc
  41b17c:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41b181:	mov    DWORD PTR [rbp-0x4],0x0
  41b188:	mov    eax,DWORD PTR [rbp-0x4]
  41b18b:	add    rsp,0x30
  41b18f:	pop    rbp
  41b190:	ret    
  41b191:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b19b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1a0:	push   rbp
  41b1a1:	mov    rbp,rsp
  41b1a4:	mov    QWORD PTR [rbp-0x8],rdi
  41b1a8:	mov    WORD PTR [rbp-0xa],si
  41b1ac:	mov    rax,QWORD PTR [rbp-0x8]
  41b1b0:	movzx  ecx,WORD PTR [rax]
  41b1b3:	movzx  edx,WORD PTR [rbp-0xa]
  41b1b7:	cmp    ecx,edx
  41b1b9:	jge    41b1ca <flatcc_builder_start_vector@@Base+0xda>
  41b1bf:	mov    ax,WORD PTR [rbp-0xa]
  41b1c3:	mov    rcx,QWORD PTR [rbp-0x8]
  41b1c7:	mov    WORD PTR [rcx],ax
  41b1ca:	pop    rbp
  41b1cb:	ret    
  41b1cc:	nop    DWORD PTR [rax+0x0]

000000000041b1d0 <flatcc_builder_start_offset_vector@@Base>:
  41b1d0:	push   rbp
  41b1d1:	mov    rbp,rsp
  41b1d4:	sub    rsp,0x10
  41b1d8:	mov    QWORD PTR [rbp-0x10],rdi
  41b1dc:	mov    rdi,QWORD PTR [rbp-0x10]
  41b1e0:	mov    esi,0x4
  41b1e5:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41b1ea:	cmp    eax,0x0
  41b1ed:	je     41b1ff <flatcc_builder_start_offset_vector@@Base+0x2f>
  41b1f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b1fa:	jmp    41b240 <flatcc_builder_start_offset_vector@@Base+0x70>
  41b1ff:	mov    rax,QWORD PTR [rbp-0x10]
  41b203:	mov    rax,QWORD PTR [rax+0x30]
  41b207:	mov    DWORD PTR [rax+0x10],0x4
  41b20e:	mov    rax,QWORD PTR [rbp-0x10]
  41b212:	mov    rax,QWORD PTR [rax+0x30]
  41b216:	mov    DWORD PTR [rax+0x14],0x0
  41b21d:	mov    rax,QWORD PTR [rbp-0x10]
  41b221:	mov    rax,QWORD PTR [rax+0x30]
  41b225:	mov    WORD PTR [rax+0xe],0x5
  41b22b:	mov    rdi,QWORD PTR [rbp-0x10]
  41b22f:	mov    esi,0xfffffffc
  41b234:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41b239:	mov    DWORD PTR [rbp-0x4],0x0
  41b240:	mov    eax,DWORD PTR [rbp-0x4]
  41b243:	add    rsp,0x10
  41b247:	pop    rbp
  41b248:	ret    
  41b249:	nop    DWORD PTR [rax+0x0]

000000000041b250 <flatcc_builder_create_offset_vector@@Base>:
  41b250:	push   rbp
  41b251:	mov    rbp,rsp
  41b254:	sub    rsp,0x30
  41b258:	mov    QWORD PTR [rbp-0x10],rdi
  41b25c:	mov    QWORD PTR [rbp-0x18],rsi
  41b260:	mov    QWORD PTR [rbp-0x20],rdx
  41b264:	mov    rdi,QWORD PTR [rbp-0x10]
  41b268:	call   41b1d0 <flatcc_builder_start_offset_vector@@Base>
  41b26d:	cmp    eax,0x0
  41b270:	je     41b282 <flatcc_builder_create_offset_vector@@Base+0x32>
  41b276:	mov    DWORD PTR [rbp-0x4],0x0
  41b27d:	jmp    41b2d0 <flatcc_builder_create_offset_vector@@Base+0x80>
  41b282:	mov    rdi,QWORD PTR [rbp-0x10]
  41b286:	mov    rsi,QWORD PTR [rbp-0x20]
  41b28a:	call   41a9c0 <flatcc_builder_extend_offset_vector@@Base>
  41b28f:	mov    QWORD PTR [rbp-0x28],rax
  41b293:	cmp    rax,0x0
  41b297:	jne    41b2a9 <flatcc_builder_create_offset_vector@@Base+0x59>
  41b29d:	mov    DWORD PTR [rbp-0x4],0x0
  41b2a4:	jmp    41b2d0 <flatcc_builder_create_offset_vector@@Base+0x80>
  41b2a9:	mov    rax,QWORD PTR [rbp-0x28]
  41b2ad:	mov    rcx,QWORD PTR [rbp-0x18]
  41b2b1:	mov    rdx,QWORD PTR [rbp-0x20]
  41b2b5:	shl    rdx,0x2
  41b2b9:	mov    rdi,rax
  41b2bc:	mov    rsi,rcx
  41b2bf:	call   4040f0 <memcpy@plt>
  41b2c4:	mov    rdi,QWORD PTR [rbp-0x10]
  41b2c8:	call   41b2e0 <flatcc_builder_end_offset_vector@@Base>
  41b2cd:	mov    DWORD PTR [rbp-0x4],eax
  41b2d0:	mov    eax,DWORD PTR [rbp-0x4]
  41b2d3:	add    rsp,0x30
  41b2d7:	pop    rbp
  41b2d8:	ret    
  41b2d9:	nop    DWORD PTR [rax+0x0]

000000000041b2e0 <flatcc_builder_end_offset_vector@@Base>:
  41b2e0:	push   rbp
  41b2e1:	mov    rbp,rsp
  41b2e4:	sub    rsp,0x20
  41b2e8:	mov    QWORD PTR [rbp-0x10],rdi
  41b2ec:	mov    rax,QWORD PTR [rbp-0x10]
  41b2f0:	mov    rax,QWORD PTR [rax+0x30]
  41b2f4:	movzx  ecx,WORD PTR [rax+0xe]
  41b2f8:	cmp    ecx,0x5
  41b2fb:	jne    41b306 <flatcc_builder_end_offset_vector@@Base+0x26>
  41b301:	jmp    41b325 <flatcc_builder_end_offset_vector@@Base+0x45>
  41b306:	lea    rdi,[rip+0xbeeb]        # 4271f8 <flatcc_builder_padding_base@@Base+0x648>
  41b30d:	lea    rsi,[rip+0xbaae]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b314:	mov    edx,0x5c8
  41b319:	lea    rcx,[rip+0xc507]        # 427827 <flatcc_builder_padding_base@@Base+0xc77>
  41b320:	call   404090 <__assert_fail@plt>
  41b325:	mov    rdi,QWORD PTR [rbp-0x10]
  41b329:	mov    rax,QWORD PTR [rbp-0x10]
  41b32d:	mov    rax,QWORD PTR [rax+0x18]
  41b331:	mov    rcx,QWORD PTR [rbp-0x10]
  41b335:	mov    rcx,QWORD PTR [rcx+0x30]
  41b339:	mov    edx,DWORD PTR [rcx+0x14]
  41b33c:	mov    rsi,rax
  41b33f:	call   41c730 <flatcc_builder_create_offset_vector_direct@@Base>
  41b344:	xor    r8d,r8d
  41b347:	mov    DWORD PTR [rbp-0x14],eax
  41b34a:	cmp    r8d,eax
  41b34d:	jne    41b35f <flatcc_builder_end_offset_vector@@Base+0x7f>
  41b353:	mov    DWORD PTR [rbp-0x4],0x0
  41b35a:	jmp    41b36e <flatcc_builder_end_offset_vector@@Base+0x8e>
  41b35f:	mov    rdi,QWORD PTR [rbp-0x10]
  41b363:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41b368:	mov    eax,DWORD PTR [rbp-0x14]
  41b36b:	mov    DWORD PTR [rbp-0x4],eax
  41b36e:	mov    eax,DWORD PTR [rbp-0x4]
  41b371:	add    rsp,0x20
  41b375:	pop    rbp
  41b376:	ret    
  41b377:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b380 <flatcc_builder_start_string@@Base>:
  41b380:	push   rbp
  41b381:	mov    rbp,rsp
  41b384:	sub    rsp,0x10
  41b388:	mov    QWORD PTR [rbp-0x10],rdi
  41b38c:	mov    rdi,QWORD PTR [rbp-0x10]
  41b390:	mov    esi,0x1
  41b395:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41b39a:	cmp    eax,0x0
  41b39d:	je     41b3af <flatcc_builder_start_string@@Base+0x2f>
  41b3a3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b3aa:	jmp    41b3f0 <flatcc_builder_start_string@@Base+0x70>
  41b3af:	mov    rax,QWORD PTR [rbp-0x10]
  41b3b3:	mov    rax,QWORD PTR [rax+0x30]
  41b3b7:	mov    DWORD PTR [rax+0x10],0x1
  41b3be:	mov    rax,QWORD PTR [rbp-0x10]
  41b3c2:	mov    rax,QWORD PTR [rax+0x30]
  41b3c6:	mov    DWORD PTR [rax+0x14],0x0
  41b3cd:	mov    rax,QWORD PTR [rbp-0x10]
  41b3d1:	mov    rax,QWORD PTR [rax+0x30]
  41b3d5:	mov    WORD PTR [rax+0xe],0x6
  41b3db:	mov    rdi,QWORD PTR [rbp-0x10]
  41b3df:	mov    esi,0xfffffffc
  41b3e4:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41b3e9:	mov    DWORD PTR [rbp-0x4],0x0
  41b3f0:	mov    eax,DWORD PTR [rbp-0x4]
  41b3f3:	add    rsp,0x10
  41b3f7:	pop    rbp
  41b3f8:	ret    
  41b3f9:	nop    DWORD PTR [rax+0x0]

000000000041b400 <flatcc_builder_reserve_table@@Base>:
  41b400:	push   rbp
  41b401:	mov    rbp,rsp
  41b404:	sub    rsp,0x10
  41b408:	mov    QWORD PTR [rbp-0x8],rdi
  41b40c:	mov    DWORD PTR [rbp-0xc],esi
  41b40f:	cmp    DWORD PTR [rbp-0xc],0x0
  41b413:	jl     41b41e <flatcc_builder_reserve_table@@Base+0x1e>
  41b419:	jmp    41b43d <flatcc_builder_reserve_table@@Base+0x3d>
  41b41e:	lea    rdi,[rip+0xc11a]        # 42753f <flatcc_builder_padding_base@@Base+0x98f>
  41b425:	lea    rsi,[rip+0xb996]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b42c:	mov    edx,0x429
  41b431:	lea    rcx,[rip+0xc0c6]        # 4274fe <flatcc_builder_padding_base@@Base+0x94e>
  41b438:	call   404090 <__assert_fail@plt>
  41b43d:	mov    rdi,QWORD PTR [rbp-0x8]
  41b441:	mov    esi,DWORD PTR [rbp-0xc]
  41b444:	call   41b450 <flatcc_builder_reserve_table@@Base+0x50>
  41b449:	add    rsp,0x10
  41b44d:	pop    rbp
  41b44e:	ret    
  41b44f:	nop
  41b450:	push   rbp
  41b451:	mov    rbp,rsp
  41b454:	sub    rsp,0x20
  41b458:	xor    eax,eax
  41b45a:	mov    QWORD PTR [rbp-0x10],rdi
  41b45e:	mov    DWORD PTR [rbp-0x14],esi
  41b461:	mov    rcx,QWORD PTR [rbp-0x10]
  41b465:	mov    rcx,QWORD PTR [rcx+0x30]
  41b469:	mov    edx,DWORD PTR [rcx+0x10]
  41b46c:	mov    ecx,edx
  41b46e:	mov    rdi,QWORD PTR [rbp-0x10]
  41b472:	mov    rdi,QWORD PTR [rdi+0x30]
  41b476:	movzx  edx,WORD PTR [rdi+0x1c]
  41b47a:	mov    edi,edx
  41b47c:	shl    rdi,0x1
  41b480:	add    rcx,rdi
  41b483:	mov    DWORD PTR [rbp-0x18],ecx
  41b486:	mov    ecx,DWORD PTR [rbp-0x14]
  41b489:	add    ecx,0x2
  41b48c:	movsxd rdi,ecx
  41b48f:	shl    rdi,0x1
  41b493:	mov    DWORD PTR [rbp-0x1c],edi
  41b496:	mov    rdi,QWORD PTR [rbp-0x10]
  41b49a:	mov    ecx,DWORD PTR [rbp-0x18]
  41b49d:	mov    edx,ecx
  41b49f:	mov    ecx,DWORD PTR [rbp-0x1c]
  41b4a2:	mov    esi,eax
  41b4a4:	mov    r8d,0x1
  41b4aa:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41b4af:	mov    rcx,QWORD PTR [rbp-0x10]
  41b4b3:	mov    QWORD PTR [rcx+0x8],rax
  41b4b7:	cmp    rax,0x0
  41b4bb:	jne    41b4cd <flatcc_builder_reserve_table@@Base+0xcd>
  41b4c1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b4c8:	jmp    41b53e <flatcc_builder_reserve_table@@Base+0x13e>
  41b4cd:	xor    r8d,r8d
  41b4d0:	mov    rax,QWORD PTR [rbp-0x10]
  41b4d4:	mov    rcx,QWORD PTR [rax+0x8]
  41b4d8:	add    rcx,0x4
  41b4df:	mov    QWORD PTR [rax+0x8],rcx
  41b4e3:	mov    rax,QWORD PTR [rbp-0x10]
  41b4e7:	mov    rax,QWORD PTR [rax+0x30]
  41b4eb:	mov    edx,DWORD PTR [rax+0x14]
  41b4ee:	mov    DWORD PTR [rbp-0x18],edx
  41b4f1:	movsxd rax,DWORD PTR [rbp-0x14]
  41b4f5:	shl    rax,0x1
  41b4f9:	add    rax,0x1
  41b4ff:	mov    DWORD PTR [rbp-0x1c],eax
  41b502:	mov    rdi,QWORD PTR [rbp-0x10]
  41b506:	mov    eax,DWORD PTR [rbp-0x18]
  41b509:	mov    edx,eax
  41b50b:	mov    eax,DWORD PTR [rbp-0x1c]
  41b50e:	mov    ecx,eax
  41b510:	mov    esi,0x3
  41b515:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41b51a:	mov    rcx,QWORD PTR [rbp-0x10]
  41b51e:	mov    QWORD PTR [rcx],rax
  41b521:	cmp    rax,0x0
  41b525:	jne    41b537 <flatcc_builder_reserve_table@@Base+0x137>
  41b52b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b532:	jmp    41b53e <flatcc_builder_reserve_table@@Base+0x13e>
  41b537:	mov    DWORD PTR [rbp-0x4],0x0
  41b53e:	mov    eax,DWORD PTR [rbp-0x4]
  41b541:	add    rsp,0x20
  41b545:	pop    rbp
  41b546:	ret    
  41b547:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b550 <flatcc_builder_start_table@@Base>:
  41b550:	push   rbp
  41b551:	mov    rbp,rsp
  41b554:	sub    rsp,0x20
  41b558:	mov    QWORD PTR [rbp-0x10],rdi
  41b55c:	mov    DWORD PTR [rbp-0x14],esi
  41b55f:	mov    rdi,QWORD PTR [rbp-0x10]
  41b563:	mov    esi,0x4
  41b568:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41b56d:	cmp    eax,0x0
  41b570:	je     41b582 <flatcc_builder_start_table@@Base+0x32>
  41b576:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b57d:	jmp    41b64a <flatcc_builder_start_table@@Base+0xfa>
  41b582:	mov    rax,QWORD PTR [rbp-0x10]
  41b586:	mov    rax,QWORD PTR [rax+0x8]
  41b58a:	mov    rcx,QWORD PTR [rbp-0x10]
  41b58e:	mov    rcx,QWORD PTR [rcx+0x58]
  41b592:	sub    rax,rcx
  41b595:	mov    rcx,QWORD PTR [rbp-0x10]
  41b599:	mov    rcx,QWORD PTR [rcx+0x30]
  41b59d:	mov    DWORD PTR [rcx+0x10],eax
  41b5a0:	mov    rcx,QWORD PTR [rbp-0x10]
  41b5a4:	mov    rcx,QWORD PTR [rcx]
  41b5a7:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5ab:	mov    rdx,QWORD PTR [rdx+0x88]
  41b5b2:	sub    rcx,rdx
  41b5b5:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5b9:	mov    rdx,QWORD PTR [rdx+0x30]
  41b5bd:	mov    DWORD PTR [rdx+0x14],ecx
  41b5c0:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5c4:	mov    eax,DWORD PTR [rdx+0x14]
  41b5c7:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5cb:	mov    rdx,QWORD PTR [rdx+0x30]
  41b5cf:	mov    DWORD PTR [rdx+0x18],eax
  41b5d2:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5d6:	mov    si,WORD PTR [rdx+0x10]
  41b5da:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5de:	mov    rdx,QWORD PTR [rdx+0x30]
  41b5e2:	mov    WORD PTR [rdx+0x1c],si
  41b5e6:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5ea:	mov    DWORD PTR [rdx+0x14],0x0
  41b5f1:	mov    rdx,QWORD PTR [rbp-0x10]
  41b5f5:	mov    DWORD PTR [rdx+0x14],0x2f693b52
  41b5fc:	mov    rdx,QWORD PTR [rbp-0x10]
  41b600:	mov    WORD PTR [rdx+0x10],0x0
  41b606:	mov    rdx,QWORD PTR [rbp-0x10]
  41b60a:	mov    rdx,QWORD PTR [rdx+0x30]
  41b60e:	mov    WORD PTR [rdx+0xe],0x3
  41b614:	mov    rdi,QWORD PTR [rbp-0x10]
  41b618:	mov    esi,DWORD PTR [rbp-0x14]
  41b61b:	call   41b450 <flatcc_builder_reserve_table@@Base+0x50>
  41b620:	cmp    eax,0x0
  41b623:	je     41b635 <flatcc_builder_start_table@@Base+0xe5>
  41b629:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b630:	jmp    41b64a <flatcc_builder_start_table@@Base+0xfa>
  41b635:	mov    rdi,QWORD PTR [rbp-0x10]
  41b639:	mov    esi,0xfffc
  41b63e:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41b643:	mov    DWORD PTR [rbp-0x4],0x0
  41b64a:	mov    eax,DWORD PTR [rbp-0x4]
  41b64d:	add    rsp,0x20
  41b651:	pop    rbp
  41b652:	ret    
  41b653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b65d:	nop    DWORD PTR [rax]

000000000041b660 <flatcc_builder_create_vtable@@Base>:
  41b660:	push   rbp
  41b661:	mov    rbp,rsp
  41b664:	sub    rsp,0xc0
  41b66b:	mov    QWORD PTR [rbp-0x10],rdi
  41b66f:	mov    QWORD PTR [rbp-0x18],rsi
  41b673:	mov    WORD PTR [rbp-0x1a],dx
  41b677:	mov    QWORD PTR [rbp-0xb0],0x0
  41b682:	mov    DWORD PTR [rbp-0xa8],0x0
  41b68c:	movzx  eax,WORD PTR [rbp-0x1a]
  41b690:	cmp    eax,0x0
  41b693:	jle    41b701 <flatcc_builder_create_vtable@@Base+0xa1>
  41b699:	movzx  eax,WORD PTR [rbp-0x1a]
  41b69d:	mov    ecx,eax
  41b69f:	add    rcx,QWORD PTR [rbp-0xb0]
  41b6a6:	mov    QWORD PTR [rbp-0xb0],rcx
  41b6ad:	mov    rcx,QWORD PTR [rbp-0x18]
  41b6b1:	lea    rdx,[rbp-0xb0]
  41b6b8:	mov    rsi,rdx
  41b6bb:	add    rsi,0x10
  41b6c2:	movsxd rdi,DWORD PTR [rbp-0xa8]
  41b6c9:	shl    rdi,0x4
  41b6cd:	add    rsi,rdi
  41b6d0:	mov    QWORD PTR [rsi],rcx
  41b6d3:	movzx  eax,WORD PTR [rbp-0x1a]
  41b6d7:	mov    ecx,eax
  41b6d9:	add    rdx,0x10
  41b6e0:	movsxd rsi,DWORD PTR [rbp-0xa8]
  41b6e7:	shl    rsi,0x4
  41b6eb:	add    rdx,rsi
  41b6ee:	mov    QWORD PTR [rdx+0x8],rcx
  41b6f2:	mov    eax,DWORD PTR [rbp-0xa8]
  41b6f8:	add    eax,0x1
  41b6fb:	mov    DWORD PTR [rbp-0xa8],eax
  41b701:	mov    rax,QWORD PTR [rbp-0x10]
  41b705:	cmp    DWORD PTR [rax+0x100],0x0
  41b70c:	jne    41b751 <flatcc_builder_create_vtable@@Base+0xf1>
  41b712:	mov    rax,QWORD PTR [rbp-0x10]
  41b716:	cmp    DWORD PTR [rax+0x124],0x0
  41b71d:	jne    41b751 <flatcc_builder_create_vtable@@Base+0xf1>
  41b723:	mov    rdi,QWORD PTR [rbp-0x10]
  41b727:	lea    rsi,[rbp-0xb0]
  41b72e:	call   41b7a0 <flatcc_builder_create_vtable@@Base+0x140>
  41b733:	xor    ecx,ecx
  41b735:	mov    DWORD PTR [rbp-0x20],eax
  41b738:	cmp    ecx,eax
  41b73a:	jne    41b74c <flatcc_builder_create_vtable@@Base+0xec>
  41b740:	mov    DWORD PTR [rbp-0x4],0x0
  41b747:	jmp    41b789 <flatcc_builder_create_vtable@@Base+0x129>
  41b74c:	jmp    41b783 <flatcc_builder_create_vtable@@Base+0x123>
  41b751:	mov    rdi,QWORD PTR [rbp-0x10]
  41b755:	lea    rsi,[rbp-0xb0]
  41b75c:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  41b761:	xor    ecx,ecx
  41b763:	mov    DWORD PTR [rbp-0x20],eax
  41b766:	cmp    ecx,eax
  41b768:	jne    41b77a <flatcc_builder_create_vtable@@Base+0x11a>
  41b76e:	mov    DWORD PTR [rbp-0x4],0x0
  41b775:	jmp    41b789 <flatcc_builder_create_vtable@@Base+0x129>
  41b77a:	mov    eax,DWORD PTR [rbp-0x20]
  41b77d:	add    eax,0x1
  41b780:	mov    DWORD PTR [rbp-0x20],eax
  41b783:	mov    eax,DWORD PTR [rbp-0x20]
  41b786:	mov    DWORD PTR [rbp-0x4],eax
  41b789:	mov    eax,DWORD PTR [rbp-0x4]
  41b78c:	add    rsp,0xc0
  41b793:	pop    rbp
  41b794:	ret    
  41b795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b79f:	nop
  41b7a0:	push   rbp
  41b7a1:	mov    rbp,rsp
  41b7a4:	sub    rsp,0x20
  41b7a8:	mov    QWORD PTR [rbp-0x8],rdi
  41b7ac:	mov    QWORD PTR [rbp-0x10],rsi
  41b7b0:	mov    rax,QWORD PTR [rbp-0x8]
  41b7b4:	mov    ecx,DWORD PTR [rax+0xf4]
  41b7ba:	mov    DWORD PTR [rbp-0x14],ecx
  41b7bd:	mov    ecx,DWORD PTR [rbp-0x14]
  41b7c0:	mov    rax,QWORD PTR [rbp-0x10]
  41b7c4:	mov    rax,QWORD PTR [rax]
  41b7c7:	add    ecx,eax
  41b7c9:	mov    rdx,QWORD PTR [rbp-0x8]
  41b7cd:	mov    DWORD PTR [rdx+0xf4],ecx
  41b7d3:	mov    rdx,QWORD PTR [rbp-0x8]
  41b7d7:	mov    eax,DWORD PTR [rdx+0xf4]
  41b7dd:	cmp    eax,DWORD PTR [rbp-0x14]
  41b7e0:	jge    41b805 <flatcc_builder_create_vtable@@Base+0x1a5>
  41b7e6:	lea    rdi,[rip+0xc795]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41b7ed:	lea    rsi,[rip+0xb5ce]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b7f4:	mov    edx,0x2a1
  41b7f9:	lea    rcx,[rip+0xc6fd]        # 427efd <flatcc_builder_padding_base@@Base+0x134d>
  41b800:	call   404090 <__assert_fail@plt>
  41b805:	mov    rax,QWORD PTR [rbp-0x8]
  41b809:	mov    rax,QWORD PTR [rax+0x48]
  41b80d:	mov    rcx,QWORD PTR [rbp-0x8]
  41b811:	mov    rdi,QWORD PTR [rcx+0x38]
  41b815:	mov    rcx,QWORD PTR [rbp-0x10]
  41b819:	add    rcx,0x10
  41b820:	mov    rdx,QWORD PTR [rbp-0x10]
  41b824:	mov    edx,DWORD PTR [rdx+0x8]
  41b827:	mov    esi,DWORD PTR [rbp-0x14]
  41b82a:	mov    r8,QWORD PTR [rbp-0x10]
  41b82e:	mov    r8,QWORD PTR [r8]
  41b831:	mov    DWORD PTR [rbp-0x18],esi
  41b834:	mov    rsi,rcx
  41b837:	mov    ecx,DWORD PTR [rbp-0x18]
  41b83a:	call   rax
  41b83c:	cmp    eax,0x0
  41b83f:	je     41b864 <flatcc_builder_create_vtable@@Base+0x204>
  41b845:	lea    rdi,[rip+0xc736]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41b84c:	lea    rsi,[rip+0xb56f]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b853:	mov    edx,0x2a5
  41b858:	lea    rcx,[rip+0xc69e]        # 427efd <flatcc_builder_padding_base@@Base+0x134d>
  41b85f:	call   404090 <__assert_fail@plt>
  41b864:	mov    eax,DWORD PTR [rbp-0x14]
  41b867:	add    eax,0x1
  41b86a:	add    rsp,0x20
  41b86e:	pop    rbp
  41b86f:	ret    

000000000041b870 <flatcc_builder_create_cached_vtable@@Base>:
  41b870:	push   rbp
  41b871:	mov    rbp,rsp
  41b874:	sub    rsp,0x70
  41b878:	mov    QWORD PTR [rbp-0x10],rdi
  41b87c:	mov    QWORD PTR [rbp-0x18],rsi
  41b880:	mov    WORD PTR [rbp-0x1a],dx
  41b884:	mov    DWORD PTR [rbp-0x20],ecx
  41b887:	mov    rdi,QWORD PTR [rbp-0x10]
  41b88b:	mov    esi,DWORD PTR [rbp-0x20]
  41b88e:	call   41bba0 <flatcc_builder_create_cached_vtable@@Base+0x330>
  41b893:	mov    QWORD PTR [rbp-0x40],rax
  41b897:	cmp    rax,0x0
  41b89b:	jne    41b8ad <flatcc_builder_create_cached_vtable@@Base+0x3d>
  41b8a1:	mov    DWORD PTR [rbp-0x4],0x0
  41b8a8:	jmp    41bb88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41b8ad:	mov    rax,QWORD PTR [rbp-0x40]
  41b8b1:	mov    QWORD PTR [rbp-0x38],rax
  41b8b5:	mov    rax,QWORD PTR [rbp-0x38]
  41b8b9:	mov    ecx,DWORD PTR [rax]
  41b8bb:	mov    DWORD PTR [rbp-0x44],ecx
  41b8be:	mov    QWORD PTR [rbp-0x30],0x0
  41b8c6:	cmp    DWORD PTR [rbp-0x44],0x0
  41b8ca:	je     41b9dd <flatcc_builder_create_cached_vtable@@Base+0x16d>
  41b8d0:	mov    rax,QWORD PTR [rbp-0x10]
  41b8d4:	mov    rax,QWORD PTR [rax+0xb8]
  41b8db:	mov    ecx,DWORD PTR [rbp-0x44]
  41b8de:	mov    edx,ecx
  41b8e0:	add    rax,rdx
  41b8e3:	mov    QWORD PTR [rbp-0x28],rax
  41b8e7:	mov    rax,QWORD PTR [rbp-0x10]
  41b8eb:	mov    rax,QWORD PTR [rax+0x78]
  41b8ef:	mov    rdx,QWORD PTR [rbp-0x28]
  41b8f3:	mov    ecx,DWORD PTR [rdx+0x8]
  41b8f6:	mov    edx,ecx
  41b8f8:	add    rax,rdx
  41b8fb:	mov    QWORD PTR [rbp-0x50],rax
  41b8ff:	mov    rax,QWORD PTR [rbp-0x50]
  41b903:	movzx  ecx,WORD PTR [rax]
  41b906:	movzx  esi,WORD PTR [rbp-0x1a]
  41b90a:	cmp    ecx,esi
  41b90c:	jne    41b945 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  41b912:	xor    eax,eax
  41b914:	mov    rcx,QWORD PTR [rbp-0x18]
  41b918:	mov    rdx,QWORD PTR [rbp-0x50]
  41b91c:	movzx  esi,WORD PTR [rbp-0x1a]
  41b920:	mov    edi,esi
  41b922:	mov    QWORD PTR [rbp-0x58],rdi
  41b926:	mov    rdi,rcx
  41b929:	mov    rsi,rdx
  41b92c:	mov    rdx,QWORD PTR [rbp-0x58]
  41b930:	mov    DWORD PTR [rbp-0x5c],eax
  41b933:	call   4040c0 <memcmp@plt>
  41b938:	mov    r8d,DWORD PTR [rbp-0x5c]
  41b93c:	cmp    r8d,eax
  41b93f:	je     41b962 <flatcc_builder_create_cached_vtable@@Base+0xf2>
  41b945:	mov    rax,QWORD PTR [rbp-0x28]
  41b949:	add    rax,0xc
  41b94f:	mov    QWORD PTR [rbp-0x38],rax
  41b953:	mov    rax,QWORD PTR [rbp-0x28]
  41b957:	mov    ecx,DWORD PTR [rax+0xc]
  41b95a:	mov    DWORD PTR [rbp-0x44],ecx
  41b95d:	jmp    41b8c6 <flatcc_builder_create_cached_vtable@@Base+0x56>
  41b962:	mov    rax,QWORD PTR [rbp-0x28]
  41b966:	mov    ecx,DWORD PTR [rax+0x4]
  41b969:	mov    rax,QWORD PTR [rbp-0x10]
  41b96d:	cmp    ecx,DWORD PTR [rax+0x100]
  41b973:	je     41b99e <flatcc_builder_create_cached_vtable@@Base+0x12e>
  41b979:	mov    rax,QWORD PTR [rbp-0x28]
  41b97d:	mov    QWORD PTR [rbp-0x30],rax
  41b981:	mov    rax,QWORD PTR [rbp-0x28]
  41b985:	add    rax,0xc
  41b98b:	mov    QWORD PTR [rbp-0x38],rax
  41b98f:	mov    rax,QWORD PTR [rbp-0x28]
  41b993:	mov    ecx,DWORD PTR [rax+0xc]
  41b996:	mov    DWORD PTR [rbp-0x44],ecx
  41b999:	jmp    41b8c6 <flatcc_builder_create_cached_vtable@@Base+0x56>
  41b99e:	mov    rax,QWORD PTR [rbp-0x38]
  41b9a2:	cmp    rax,QWORD PTR [rbp-0x40]
  41b9a6:	je     41b9cf <flatcc_builder_create_cached_vtable@@Base+0x15f>
  41b9ac:	mov    rax,QWORD PTR [rbp-0x28]
  41b9b0:	mov    ecx,DWORD PTR [rax+0xc]
  41b9b3:	mov    rax,QWORD PTR [rbp-0x38]
  41b9b7:	mov    DWORD PTR [rax],ecx
  41b9b9:	mov    rax,QWORD PTR [rbp-0x40]
  41b9bd:	mov    ecx,DWORD PTR [rax]
  41b9bf:	mov    rax,QWORD PTR [rbp-0x28]
  41b9c3:	mov    DWORD PTR [rax+0xc],ecx
  41b9c6:	mov    ecx,DWORD PTR [rbp-0x44]
  41b9c9:	mov    rax,QWORD PTR [rbp-0x40]
  41b9cd:	mov    DWORD PTR [rax],ecx
  41b9cf:	mov    rax,QWORD PTR [rbp-0x28]
  41b9d3:	mov    ecx,DWORD PTR [rax]
  41b9d5:	mov    DWORD PTR [rbp-0x4],ecx
  41b9d8:	jmp    41bb88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41b9dd:	xor    r8d,r8d
  41b9e0:	mov    rdi,QWORD PTR [rbp-0x10]
  41b9e4:	mov    rax,QWORD PTR [rbp-0x10]
  41b9e8:	mov    ecx,DWORD PTR [rax+0xe4]
  41b9ee:	mov    edx,ecx
  41b9f0:	mov    esi,0x6
  41b9f5:	mov    ecx,0x10
  41b9fa:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41b9ff:	mov    QWORD PTR [rbp-0x28],rax
  41ba03:	cmp    rax,0x0
  41ba07:	jne    41ba19 <flatcc_builder_create_cached_vtable@@Base+0x1a9>
  41ba0d:	mov    DWORD PTR [rbp-0x4],0x0
  41ba14:	jmp    41bb88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41ba19:	mov    rax,QWORD PTR [rbp-0x10]
  41ba1d:	mov    ecx,DWORD PTR [rax+0xe4]
  41ba23:	mov    DWORD PTR [rbp-0x44],ecx
  41ba26:	mov    rax,QWORD PTR [rbp-0x10]
  41ba2a:	mov    ecx,DWORD PTR [rax+0xe4]
  41ba30:	mov    edx,ecx
  41ba32:	add    rdx,0x10
  41ba39:	mov    DWORD PTR [rax+0xe4],edx
  41ba3f:	mov    rax,QWORD PTR [rbp-0x10]
  41ba43:	mov    ecx,DWORD PTR [rax+0x100]
  41ba49:	mov    rax,QWORD PTR [rbp-0x28]
  41ba4d:	mov    DWORD PTR [rax+0x4],ecx
  41ba50:	mov    rax,QWORD PTR [rbp-0x40]
  41ba54:	mov    ecx,DWORD PTR [rax]
  41ba56:	mov    rax,QWORD PTR [rbp-0x28]
  41ba5a:	mov    DWORD PTR [rax+0xc],ecx
  41ba5d:	mov    ecx,DWORD PTR [rbp-0x44]
  41ba60:	mov    rax,QWORD PTR [rbp-0x40]
  41ba64:	mov    DWORD PTR [rax],ecx
  41ba66:	mov    rdi,QWORD PTR [rbp-0x10]
  41ba6a:	mov    rsi,QWORD PTR [rbp-0x18]
  41ba6e:	movzx  edx,WORD PTR [rbp-0x1a]
  41ba72:	call   41b660 <flatcc_builder_create_vtable@@Base>
  41ba77:	xor    ecx,ecx
  41ba79:	mov    rsi,QWORD PTR [rbp-0x28]
  41ba7d:	mov    DWORD PTR [rsi],eax
  41ba7f:	cmp    ecx,eax
  41ba81:	jne    41ba93 <flatcc_builder_create_cached_vtable@@Base+0x223>
  41ba87:	mov    DWORD PTR [rbp-0x4],0x0
  41ba8e:	jmp    41bb88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41ba93:	cmp    QWORD PTR [rbp-0x30],0x0
  41ba98:	je     41bab1 <flatcc_builder_create_cached_vtable@@Base+0x241>
  41ba9e:	mov    rax,QWORD PTR [rbp-0x30]
  41baa2:	mov    ecx,DWORD PTR [rax+0x8]
  41baa5:	mov    rax,QWORD PTR [rbp-0x28]
  41baa9:	mov    DWORD PTR [rax+0x8],ecx
  41baac:	jmp    41bb7f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  41bab1:	mov    rax,QWORD PTR [rbp-0x10]
  41bab5:	cmp    QWORD PTR [rax+0x118],0x0
  41babd:	je     41baf9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  41bac3:	mov    rax,QWORD PTR [rbp-0x10]
  41bac7:	mov    rax,QWORD PTR [rax+0x118]
  41bace:	mov    rcx,QWORD PTR [rbp-0x10]
  41bad2:	mov    edx,DWORD PTR [rcx+0xe0]
  41bad8:	movzx  esi,WORD PTR [rbp-0x1a]
  41badc:	add    edx,esi
  41bade:	mov    edx,edx
  41bae0:	mov    ecx,edx
  41bae2:	cmp    rax,rcx
  41bae5:	jae    41baf9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  41baeb:	mov    rdi,QWORD PTR [rbp-0x10]
  41baef:	call   418b40 <flatcc_builder_flush_vtable_cache@@Base>
  41baf4:	jmp    41bb7a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  41baf9:	xor    r8d,r8d
  41bafc:	mov    rdi,QWORD PTR [rbp-0x10]
  41bb00:	mov    rax,QWORD PTR [rbp-0x10]
  41bb04:	mov    ecx,DWORD PTR [rax+0xe0]
  41bb0a:	mov    edx,ecx
  41bb0c:	movzx  ecx,WORD PTR [rbp-0x1a]
  41bb10:	mov    esi,0x2
  41bb15:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41bb1a:	mov    QWORD PTR [rbp-0x50],rax
  41bb1e:	cmp    rax,0x0
  41bb22:	jne    41bb34 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41bb28:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bb2f:	jmp    41bb88 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41bb34:	mov    rax,QWORD PTR [rbp-0x10]
  41bb38:	mov    ecx,DWORD PTR [rax+0xe0]
  41bb3e:	mov    rax,QWORD PTR [rbp-0x28]
  41bb42:	mov    DWORD PTR [rax+0x8],ecx
  41bb45:	movzx  ecx,WORD PTR [rbp-0x1a]
  41bb49:	mov    rax,QWORD PTR [rbp-0x10]
  41bb4d:	add    ecx,DWORD PTR [rax+0xe0]
  41bb53:	mov    DWORD PTR [rax+0xe0],ecx
  41bb59:	mov    rax,QWORD PTR [rbp-0x50]
  41bb5d:	mov    rdx,QWORD PTR [rbp-0x18]
  41bb61:	movzx  ecx,WORD PTR [rbp-0x1a]
  41bb65:	mov    esi,ecx
  41bb67:	mov    rdi,rax
  41bb6a:	mov    QWORD PTR [rbp-0x68],rsi
  41bb6e:	mov    rsi,rdx
  41bb71:	mov    rdx,QWORD PTR [rbp-0x68]
  41bb75:	call   4040f0 <memcpy@plt>
  41bb7a:	jmp    41bb7f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  41bb7f:	mov    rax,QWORD PTR [rbp-0x28]
  41bb83:	mov    ecx,DWORD PTR [rax]
  41bb85:	mov    DWORD PTR [rbp-0x4],ecx
  41bb88:	mov    eax,DWORD PTR [rbp-0x4]
  41bb8b:	add    rsp,0x70
  41bb8f:	pop    rbp
  41bb90:	ret    
  41bb91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bba0:	push   rbp
  41bba1:	mov    rbp,rsp
  41bba4:	sub    rsp,0x30
  41bba8:	mov    QWORD PTR [rbp-0x10],rdi
  41bbac:	mov    DWORD PTR [rbp-0x14],esi
  41bbaf:	mov    rax,QWORD PTR [rbp-0x10]
  41bbb3:	cmp    QWORD PTR [rax+0xd8],0x0
  41bbbb:	jne    41bbe5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  41bbc1:	mov    rdi,QWORD PTR [rbp-0x10]
  41bbc5:	call   41e5c0 <flatcc_builder_get_emit_context@@Base+0xe0>
  41bbca:	cmp    eax,0x0
  41bbcd:	je     41bbe0 <flatcc_builder_create_cached_vtable@@Base+0x370>
  41bbd3:	mov    QWORD PTR [rbp-0x8],0x0
  41bbdb:	jmp    41bc24 <flatcc_builder_create_cached_vtable@@Base+0x3b4>
  41bbe0:	jmp    41bbe5 <flatcc_builder_create_cached_vtable@@Base+0x375>
  41bbe5:	mov    rax,QWORD PTR [rbp-0x10]
  41bbe9:	mov    rax,QWORD PTR [rax+0xa8]
  41bbf0:	mov    QWORD PTR [rbp-0x20],rax
  41bbf4:	mov    rax,QWORD PTR [rbp-0x20]
  41bbf8:	mov    ecx,DWORD PTR [rbp-0x14]
  41bbfb:	mov    rdx,QWORD PTR [rbp-0x10]
  41bbff:	mov    esi,0x20
  41bc04:	sub    rsi,QWORD PTR [rdx+0xd8]
  41bc0b:	mov    DWORD PTR [rbp-0x24],ecx
  41bc0e:	mov    ecx,esi
  41bc10:	mov    esi,DWORD PTR [rbp-0x24]
  41bc13:	shr    esi,cl
  41bc15:	mov    esi,esi
  41bc17:	mov    edx,esi
  41bc19:	shl    rdx,0x2
  41bc1d:	add    rax,rdx
  41bc20:	mov    QWORD PTR [rbp-0x8],rax
  41bc24:	mov    rax,QWORD PTR [rbp-0x8]
  41bc28:	add    rsp,0x30
  41bc2c:	pop    rbp
  41bc2d:	ret    
  41bc2e:	xchg   ax,ax

000000000041bc30 <flatcc_builder_create_table@@Base>:
  41bc30:	push   rbp
  41bc31:	mov    rbp,rsp
  41bc34:	sub    rsp,0xf0
  41bc3b:	mov    eax,DWORD PTR [rbp+0x10]
  41bc3e:	mov    QWORD PTR [rbp-0x10],rdi
  41bc42:	mov    QWORD PTR [rbp-0x18],rsi
  41bc46:	mov    QWORD PTR [rbp-0x20],rdx
  41bc4a:	mov    WORD PTR [rbp-0x22],cx
  41bc4e:	mov    QWORD PTR [rbp-0x30],r8
  41bc52:	mov    DWORD PTR [rbp-0x34],r9d
  41bc56:	cmp    DWORD PTR [rbp-0x34],0x0
  41bc5a:	jl     41bc65 <flatcc_builder_create_table@@Base+0x35>
  41bc60:	jmp    41bc84 <flatcc_builder_create_table@@Base+0x54>
  41bc65:	lea    rdi,[rip+0xb8cc]        # 427538 <flatcc_builder_padding_base@@Base+0x988>
  41bc6c:	lea    rsi,[rip+0xb14f]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bc73:	mov    edx,0x4d5
  41bc78:	lea    rcx,[rip+0xb8cb]        # 42754a <flatcc_builder_padding_base@@Base+0x99a>
  41bc7f:	call   404090 <__assert_fail@plt>
  41bc84:	mov    eax,DWORD PTR [rbp+0x10]
  41bc87:	and    eax,0x1
  41bc8a:	cmp    eax,0x0
  41bc8d:	je     41bc98 <flatcc_builder_create_table@@Base+0x68>
  41bc93:	jmp    41bcb7 <flatcc_builder_create_table@@Base+0x87>
  41bc98:	lea    rdi,[rip+0xb947]        # 4275e6 <flatcc_builder_padding_base@@Base+0xa36>
  41bc9f:	lea    rsi,[rip+0xb11c]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bca6:	mov    edx,0x4db
  41bcab:	lea    rcx,[rip+0xb898]        # 42754a <flatcc_builder_padding_base@@Base+0x99a>
  41bcb2:	call   404090 <__assert_fail@plt>
  41bcb7:	lea    rdi,[rbp-0x22]
  41bcbb:	mov    esi,0x4
  41bcc0:	call   41b1a0 <flatcc_builder_start_vector@@Base+0xb0>
  41bcc5:	mov    rdi,QWORD PTR [rbp-0x10]
  41bcc9:	movzx  esi,WORD PTR [rbp-0x22]
  41bccd:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41bcd2:	mov    rdi,QWORD PTR [rbp-0x10]
  41bcd6:	mov    rax,QWORD PTR [rbp-0x20]
  41bcda:	mov    esi,eax
  41bcdc:	movzx  edx,WORD PTR [rbp-0x22]
  41bce0:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  41bce5:	mov    DWORD PTR [rbp-0x3c],eax
  41bce8:	mov    rcx,QWORD PTR [rbp-0x10]
  41bcec:	mov    eax,DWORD PTR [rcx+0xf0]
  41bcf2:	mov    edx,DWORD PTR [rbp-0x3c]
  41bcf5:	mov    ecx,edx
  41bcf7:	add    rcx,QWORD PTR [rbp-0x20]
  41bcfb:	add    rcx,0x4
  41bd02:	sub    eax,ecx
  41bd04:	mov    DWORD PTR [rbp-0x4c],eax
  41bd07:	mov    eax,DWORD PTR [rbp+0x10]
  41bd0a:	sub    eax,0x1
  41bd0d:	mov    DWORD PTR [rbp-0x48],eax
  41bd10:	mov    eax,DWORD PTR [rbp-0x4c]
  41bd13:	sub    eax,DWORD PTR [rbp-0x48]
  41bd16:	mov    DWORD PTR [rbp-0x40],eax
  41bd19:	mov    eax,DWORD PTR [rbp-0x4c]
  41bd1c:	sub    eax,DWORD PTR [rbp-0x40]
  41bd1f:	cmp    eax,DWORD PTR [rbp-0x48]
  41bd22:	je     41bd34 <flatcc_builder_create_table@@Base+0x104>
  41bd28:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bd2f:	jmp    41bf1b <flatcc_builder_create_table@@Base+0x2eb>
  41bd34:	mov    edi,DWORD PTR [rbp-0x40]
  41bd37:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41bd3c:	mov    DWORD PTR [rbp-0x44],eax
  41bd3f:	mov    DWORD PTR [rbp-0x38],0x0
  41bd46:	mov    eax,DWORD PTR [rbp-0x38]
  41bd49:	cmp    eax,DWORD PTR [rbp-0x34]
  41bd4c:	jge    41bdab <flatcc_builder_create_table@@Base+0x17b>
  41bd52:	mov    rax,QWORD PTR [rbp-0x18]
  41bd56:	mov    rcx,QWORD PTR [rbp-0x30]
  41bd5a:	movsxd rdx,DWORD PTR [rbp-0x38]
  41bd5e:	movzx  esi,WORD PTR [rcx+rdx*2]
  41bd62:	mov    ecx,esi
  41bd64:	add    rax,rcx
  41bd67:	mov    QWORD PTR [rbp-0x58],rax
  41bd6b:	mov    rax,QWORD PTR [rbp-0x58]
  41bd6f:	mov    esi,DWORD PTR [rax]
  41bd71:	sub    esi,DWORD PTR [rbp-0x4c]
  41bd74:	mov    rax,QWORD PTR [rbp-0x30]
  41bd78:	movsxd rcx,DWORD PTR [rbp-0x38]
  41bd7c:	movzx  edi,WORD PTR [rax+rcx*2]
  41bd80:	sub    esi,edi
  41bd82:	mov    esi,esi
  41bd84:	mov    eax,esi
  41bd86:	sub    rax,0x4
  41bd8c:	mov    DWORD PTR [rbp-0x50],eax
  41bd8f:	mov    edi,DWORD PTR [rbp-0x50]
  41bd92:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41bd97:	mov    rcx,QWORD PTR [rbp-0x58]
  41bd9b:	mov    DWORD PTR [rcx],eax
  41bd9d:	mov    eax,DWORD PTR [rbp-0x38]
  41bda0:	add    eax,0x1
  41bda3:	mov    DWORD PTR [rbp-0x38],eax
  41bda6:	jmp    41bd46 <flatcc_builder_create_table@@Base+0x116>
  41bdab:	mov    QWORD PTR [rbp-0xe8],0x0
  41bdb6:	mov    DWORD PTR [rbp-0xe0],0x0
  41bdc0:	mov    rax,QWORD PTR [rbp-0xe8]
  41bdc7:	add    rax,0x4
  41bdcd:	mov    QWORD PTR [rbp-0xe8],rax
  41bdd4:	lea    rax,[rbp-0x44]
  41bdd8:	lea    rcx,[rbp-0xe8]
  41bddf:	mov    rdx,rcx
  41bde2:	add    rdx,0x10
  41bde9:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41bdf0:	shl    rsi,0x4
  41bdf4:	add    rdx,rsi
  41bdf7:	mov    QWORD PTR [rdx],rax
  41bdfa:	add    rcx,0x10
  41be01:	movsxd rax,DWORD PTR [rbp-0xe0]
  41be08:	shl    rax,0x4
  41be0c:	add    rcx,rax
  41be0f:	mov    QWORD PTR [rcx+0x8],0x4
  41be17:	mov    edi,DWORD PTR [rbp-0xe0]
  41be1d:	add    edi,0x1
  41be20:	mov    DWORD PTR [rbp-0xe0],edi
  41be26:	cmp    QWORD PTR [rbp-0x20],0x0
  41be2b:	jbe    41be95 <flatcc_builder_create_table@@Base+0x265>
  41be31:	mov    rax,QWORD PTR [rbp-0x20]
  41be35:	add    rax,QWORD PTR [rbp-0xe8]
  41be3c:	mov    QWORD PTR [rbp-0xe8],rax
  41be43:	mov    rax,QWORD PTR [rbp-0x18]
  41be47:	lea    rcx,[rbp-0xe8]
  41be4e:	mov    rdx,rcx
  41be51:	add    rdx,0x10
  41be58:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41be5f:	shl    rsi,0x4
  41be63:	add    rdx,rsi
  41be66:	mov    QWORD PTR [rdx],rax
  41be69:	mov    rax,QWORD PTR [rbp-0x20]
  41be6d:	add    rcx,0x10
  41be74:	movsxd rdx,DWORD PTR [rbp-0xe0]
  41be7b:	shl    rdx,0x4
  41be7f:	add    rcx,rdx
  41be82:	mov    QWORD PTR [rcx+0x8],rax
  41be86:	mov    edi,DWORD PTR [rbp-0xe0]
  41be8c:	add    edi,0x1
  41be8f:	mov    DWORD PTR [rbp-0xe0],edi
  41be95:	cmp    DWORD PTR [rbp-0x3c],0x0
  41be99:	jbe    41bf08 <flatcc_builder_create_table@@Base+0x2d8>
  41be9f:	lea    rax,[rip+0xad0a]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41bea6:	mov    ecx,DWORD PTR [rbp-0x3c]
  41bea9:	mov    edx,ecx
  41beab:	add    rdx,QWORD PTR [rbp-0xe8]
  41beb2:	mov    QWORD PTR [rbp-0xe8],rdx
  41beb9:	lea    rdx,[rbp-0xe8]
  41bec0:	mov    rsi,rdx
  41bec3:	add    rsi,0x10
  41beca:	movsxd rdi,DWORD PTR [rbp-0xe0]
  41bed1:	shl    rdi,0x4
  41bed5:	add    rsi,rdi
  41bed8:	mov    QWORD PTR [rsi],rax
  41bedb:	mov    ecx,DWORD PTR [rbp-0x3c]
  41bede:	mov    eax,ecx
  41bee0:	add    rdx,0x10
  41bee7:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41beee:	shl    rsi,0x4
  41bef2:	add    rdx,rsi
  41bef5:	mov    QWORD PTR [rdx+0x8],rax
  41bef9:	mov    ecx,DWORD PTR [rbp-0xe0]
  41beff:	add    ecx,0x1
  41bf02:	mov    DWORD PTR [rbp-0xe0],ecx
  41bf08:	mov    rdi,QWORD PTR [rbp-0x10]
  41bf0c:	lea    rsi,[rbp-0xe8]
  41bf13:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  41bf18:	mov    DWORD PTR [rbp-0x4],eax
  41bf1b:	mov    eax,DWORD PTR [rbp-0x4]
  41bf1e:	add    rsp,0xf0
  41bf25:	pop    rbp
  41bf26:	ret    
  41bf27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bf30 <flatcc_builder_check_required_field@@Base>:
  41bf30:	push   rbp
  41bf31:	mov    rbp,rsp
  41bf34:	sub    rsp,0x10
  41bf38:	mov    QWORD PTR [rbp-0x8],rdi
  41bf3c:	mov    WORD PTR [rbp-0xa],si
  41bf40:	mov    rax,QWORD PTR [rbp-0x8]
  41bf44:	mov    rax,QWORD PTR [rax+0x30]
  41bf48:	movzx  ecx,WORD PTR [rax+0xe]
  41bf4c:	cmp    ecx,0x3
  41bf4f:	jne    41bf5a <flatcc_builder_check_required_field@@Base+0x2a>
  41bf55:	jmp    41bf79 <flatcc_builder_check_required_field@@Base+0x49>
  41bf5a:	lea    rdi,[rip+0xb690]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41bf61:	lea    rsi,[rip+0xae5a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bf68:	mov    edx,0x4f8
  41bf6d:	lea    rcx,[rip+0xb6a8]        # 42761c <flatcc_builder_padding_base@@Base+0xa6c>
  41bf74:	call   404090 <__assert_fail@plt>
  41bf79:	xor    eax,eax
  41bf7b:	movzx  ecx,WORD PTR [rbp-0xa]
  41bf7f:	mov    rdx,QWORD PTR [rbp-0x8]
  41bf83:	movzx  esi,WORD PTR [rdx+0x10]
  41bf87:	cmp    ecx,esi
  41bf89:	mov    BYTE PTR [rbp-0xb],al
  41bf8c:	jge    41bfaf <flatcc_builder_check_required_field@@Base+0x7f>
  41bf92:	mov    rax,QWORD PTR [rbp-0x8]
  41bf96:	mov    rax,QWORD PTR [rax+0x8]
  41bf9a:	movzx  ecx,WORD PTR [rbp-0xa]
  41bf9e:	mov    edx,ecx
  41bfa0:	movzx  ecx,WORD PTR [rax+rdx*2]
  41bfa4:	cmp    ecx,0x0
  41bfa7:	setne  sil
  41bfab:	mov    BYTE PTR [rbp-0xb],sil
  41bfaf:	mov    al,BYTE PTR [rbp-0xb]
  41bfb2:	and    al,0x1
  41bfb4:	movzx  eax,al
  41bfb7:	add    rsp,0x10
  41bfbb:	pop    rbp
  41bfbc:	ret    
  41bfbd:	nop    DWORD PTR [rax]

000000000041bfc0 <flatcc_builder_check_union_field@@Base>:
  41bfc0:	push   rbp
  41bfc1:	mov    rbp,rsp
  41bfc4:	sub    rsp,0x20
  41bfc8:	mov    QWORD PTR [rbp-0x10],rdi
  41bfcc:	mov    WORD PTR [rbp-0x12],si
  41bfd0:	mov    rax,QWORD PTR [rbp-0x10]
  41bfd4:	mov    rax,QWORD PTR [rax+0x30]
  41bfd8:	movzx  ecx,WORD PTR [rax+0xe]
  41bfdc:	cmp    ecx,0x3
  41bfdf:	jne    41bfea <flatcc_builder_check_union_field@@Base+0x2a>
  41bfe5:	jmp    41c009 <flatcc_builder_check_union_field@@Base+0x49>
  41bfea:	lea    rdi,[rip+0xb600]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41bff1:	lea    rsi,[rip+0xadca]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bff8:	mov    edx,0x4ff
  41bffd:	lea    rcx,[rip+0xb66b]        # 42766f <flatcc_builder_padding_base@@Base+0xabf>
  41c004:	call   404090 <__assert_fail@plt>
  41c009:	movzx  eax,WORD PTR [rbp-0x12]
  41c00d:	cmp    eax,0x0
  41c010:	je     41c02a <flatcc_builder_check_union_field@@Base+0x6a>
  41c016:	movzx  eax,WORD PTR [rbp-0x12]
  41c01a:	mov    rcx,QWORD PTR [rbp-0x10]
  41c01e:	movzx  edx,WORD PTR [rcx+0x10]
  41c022:	cmp    eax,edx
  41c024:	jl     41c036 <flatcc_builder_check_union_field@@Base+0x76>
  41c02a:	mov    DWORD PTR [rbp-0x4],0x0
  41c031:	jmp    41c0f6 <flatcc_builder_check_union_field@@Base+0x136>
  41c036:	mov    rax,QWORD PTR [rbp-0x10]
  41c03a:	mov    rax,QWORD PTR [rax+0x8]
  41c03e:	movzx  ecx,WORD PTR [rbp-0x12]
  41c042:	sub    ecx,0x1
  41c045:	movsxd rdx,ecx
  41c048:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c04c:	cmp    ecx,0x0
  41c04f:	jne    41c07e <flatcc_builder_check_union_field@@Base+0xbe>
  41c055:	mov    rax,QWORD PTR [rbp-0x10]
  41c059:	mov    rax,QWORD PTR [rax+0x8]
  41c05d:	movzx  ecx,WORD PTR [rbp-0x12]
  41c061:	mov    edx,ecx
  41c063:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c067:	cmp    ecx,0x0
  41c06a:	sete   sil
  41c06e:	and    sil,0x1
  41c072:	movzx  ecx,sil
  41c076:	mov    DWORD PTR [rbp-0x4],ecx
  41c079:	jmp    41c0f6 <flatcc_builder_check_union_field@@Base+0x136>
  41c07e:	mov    rax,QWORD PTR [rbp-0x10]
  41c082:	mov    rax,QWORD PTR [rax+0x18]
  41c086:	mov    rcx,QWORD PTR [rbp-0x10]
  41c08a:	mov    rcx,QWORD PTR [rcx+0x8]
  41c08e:	movzx  edx,WORD PTR [rbp-0x12]
  41c092:	sub    edx,0x1
  41c095:	movsxd rsi,edx
  41c098:	movzx  edx,WORD PTR [rcx+rsi*2]
  41c09c:	movsxd rcx,edx
  41c09f:	cmp    BYTE PTR [rax+rcx*1],0x0
  41c0a3:	je     41c0d2 <flatcc_builder_check_union_field@@Base+0x112>
  41c0a9:	mov    rax,QWORD PTR [rbp-0x10]
  41c0ad:	mov    rax,QWORD PTR [rax+0x8]
  41c0b1:	movzx  ecx,WORD PTR [rbp-0x12]
  41c0b5:	mov    edx,ecx
  41c0b7:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c0bb:	cmp    ecx,0x0
  41c0be:	setne  sil
  41c0c2:	and    sil,0x1
  41c0c6:	movzx  ecx,sil
  41c0ca:	mov    DWORD PTR [rbp-0x4],ecx
  41c0cd:	jmp    41c0f6 <flatcc_builder_check_union_field@@Base+0x136>
  41c0d2:	mov    rax,QWORD PTR [rbp-0x10]
  41c0d6:	mov    rax,QWORD PTR [rax+0x8]
  41c0da:	movzx  ecx,WORD PTR [rbp-0x12]
  41c0de:	mov    edx,ecx
  41c0e0:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c0e4:	cmp    ecx,0x0
  41c0e7:	sete   sil
  41c0eb:	and    sil,0x1
  41c0ef:	movzx  ecx,sil
  41c0f3:	mov    DWORD PTR [rbp-0x4],ecx
  41c0f6:	mov    eax,DWORD PTR [rbp-0x4]
  41c0f9:	add    rsp,0x20
  41c0fd:	pop    rbp
  41c0fe:	ret    
  41c0ff:	nop

000000000041c100 <flatcc_builder_check_required@@Base>:
  41c100:	push   rbp
  41c101:	mov    rbp,rsp
  41c104:	sub    rsp,0x20
  41c108:	mov    QWORD PTR [rbp-0x10],rdi
  41c10c:	mov    QWORD PTR [rbp-0x18],rsi
  41c110:	mov    DWORD PTR [rbp-0x1c],edx
  41c113:	mov    rax,QWORD PTR [rbp-0x10]
  41c117:	mov    rax,QWORD PTR [rax+0x30]
  41c11b:	movzx  ecx,WORD PTR [rax+0xe]
  41c11f:	cmp    ecx,0x3
  41c122:	jne    41c12d <flatcc_builder_check_required@@Base+0x2d>
  41c128:	jmp    41c14c <flatcc_builder_check_required@@Base+0x4c>
  41c12d:	lea    rdi,[rip+0xb4bd]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41c134:	lea    rsi,[rip+0xac87]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c13b:	mov    edx,0x511
  41c140:	lea    rcx,[rip+0xb578]        # 4276bf <flatcc_builder_padding_base@@Base+0xb0f>
  41c147:	call   404090 <__assert_fail@plt>
  41c14c:	mov    rax,QWORD PTR [rbp-0x10]
  41c150:	movzx  ecx,WORD PTR [rax+0x10]
  41c154:	cmp    ecx,DWORD PTR [rbp-0x1c]
  41c157:	jge    41c169 <flatcc_builder_check_required@@Base+0x69>
  41c15d:	mov    DWORD PTR [rbp-0x4],0x0
  41c164:	jmp    41c1c5 <flatcc_builder_check_required@@Base+0xc5>
  41c169:	mov    DWORD PTR [rbp-0x20],0x0
  41c170:	mov    eax,DWORD PTR [rbp-0x20]
  41c173:	cmp    eax,DWORD PTR [rbp-0x1c]
  41c176:	jge    41c1be <flatcc_builder_check_required@@Base+0xbe>
  41c17c:	mov    rax,QWORD PTR [rbp-0x10]
  41c180:	mov    rax,QWORD PTR [rax+0x8]
  41c184:	mov    rcx,QWORD PTR [rbp-0x18]
  41c188:	movsxd rdx,DWORD PTR [rbp-0x20]
  41c18c:	movzx  esi,WORD PTR [rcx+rdx*2]
  41c190:	mov    ecx,esi
  41c192:	movzx  esi,WORD PTR [rax+rcx*2]
  41c196:	cmp    esi,0x0
  41c199:	jne    41c1ab <flatcc_builder_check_required@@Base+0xab>
  41c19f:	mov    DWORD PTR [rbp-0x4],0x0
  41c1a6:	jmp    41c1c5 <flatcc_builder_check_required@@Base+0xc5>
  41c1ab:	jmp    41c1b0 <flatcc_builder_check_required@@Base+0xb0>
  41c1b0:	mov    eax,DWORD PTR [rbp-0x20]
  41c1b3:	add    eax,0x1
  41c1b6:	mov    DWORD PTR [rbp-0x20],eax
  41c1b9:	jmp    41c170 <flatcc_builder_check_required@@Base+0x70>
  41c1be:	mov    DWORD PTR [rbp-0x4],0x1
  41c1c5:	mov    eax,DWORD PTR [rbp-0x4]
  41c1c8:	add    rsp,0x20
  41c1cc:	pop    rbp
  41c1cd:	ret    
  41c1ce:	xchg   ax,ax

000000000041c1d0 <flatcc_builder_end_table@@Base>:
  41c1d0:	push   rbp
  41c1d1:	mov    rbp,rsp
  41c1d4:	sub    rsp,0x40
  41c1d8:	mov    QWORD PTR [rbp-0x10],rdi
  41c1dc:	mov    rax,QWORD PTR [rbp-0x10]
  41c1e0:	mov    rax,QWORD PTR [rax+0x30]
  41c1e4:	movzx  ecx,WORD PTR [rax+0xe]
  41c1e8:	cmp    ecx,0x3
  41c1eb:	jne    41c1f6 <flatcc_builder_end_table@@Base+0x26>
  41c1f1:	jmp    41c215 <flatcc_builder_end_table@@Base+0x45>
  41c1f6:	lea    rdi,[rip+0xb3f4]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41c1fd:	lea    rsi,[rip+0xabbe]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c204:	mov    edx,0x525
  41c209:	lea    rcx,[rip+0xb509]        # 427719 <flatcc_builder_padding_base@@Base+0xb69>
  41c210:	call   404090 <__assert_fail@plt>
  41c215:	mov    rax,QWORD PTR [rbp-0x10]
  41c219:	mov    rax,QWORD PTR [rax+0x8]
  41c21d:	add    rax,0xfffffffffffffffc
  41c223:	mov    QWORD PTR [rbp-0x18],rax
  41c227:	mov    rax,QWORD PTR [rbp-0x10]
  41c22b:	movzx  ecx,WORD PTR [rax+0x10]
  41c22f:	add    ecx,0x2
  41c232:	movsxd rax,ecx
  41c235:	shl    rax,0x1
  41c239:	mov    WORD PTR [rbp-0x1a],ax
  41c23d:	mov    ax,WORD PTR [rbp-0x1a]
  41c241:	mov    rdx,QWORD PTR [rbp-0x18]
  41c245:	mov    WORD PTR [rdx],ax
  41c248:	mov    rdx,QWORD PTR [rbp-0x10]
  41c24c:	mov    ecx,DWORD PTR [rdx+0x20]
  41c24f:	movzx  esi,cx
  41c252:	mov    edx,esi
  41c254:	add    rdx,0x4
  41c25b:	mov    rdi,QWORD PTR [rbp-0x18]
  41c25f:	mov    WORD PTR [rdi+0x2],dx
  41c263:	mov    rdi,QWORD PTR [rbp-0x18]
  41c267:	movzx  esi,WORD PTR [rdi]
  41c26a:	mov    rdi,QWORD PTR [rbp-0x10]
  41c26e:	xor    esi,DWORD PTR [rdi+0x14]
  41c271:	imul   esi,esi,0x9e3779b1
  41c277:	mov    rdi,QWORD PTR [rbp-0x18]
  41c27b:	movzx  r8d,WORD PTR [rdi+0x2]
  41c280:	xor    esi,r8d
  41c283:	imul   esi,esi,0x9e3779b1
  41c289:	mov    rdi,QWORD PTR [rbp-0x10]
  41c28d:	mov    DWORD PTR [rdi+0x14],esi
  41c290:	mov    rdi,QWORD PTR [rbp-0x10]
  41c294:	mov    rsi,QWORD PTR [rbp-0x18]
  41c298:	mov    ax,WORD PTR [rbp-0x1a]
  41c29c:	mov    r9,QWORD PTR [rbp-0x10]
  41c2a0:	mov    ecx,DWORD PTR [r9+0x14]
  41c2a4:	movzx  edx,ax
  41c2a7:	call   41b870 <flatcc_builder_create_cached_vtable@@Base>
  41c2ac:	mov    DWORD PTR [rbp-0x24],eax
  41c2af:	cmp    eax,0x0
  41c2b2:	jne    41c2c4 <flatcc_builder_end_table@@Base+0xf4>
  41c2b8:	mov    DWORD PTR [rbp-0x4],0x0
  41c2bf:	jmp    41c3df <flatcc_builder_end_table@@Base+0x20f>
  41c2c4:	xor    esi,esi
  41c2c6:	mov    rax,QWORD PTR [rbp-0x18]
  41c2ca:	movzx  ecx,WORD PTR [rbp-0x1a]
  41c2ce:	mov    edx,ecx
  41c2d0:	mov    rdi,rax
  41c2d3:	call   4040a0 <memset@plt>
  41c2d8:	mov    rax,QWORD PTR [rbp-0x10]
  41c2dc:	mov    rax,QWORD PTR [rax+0x88]
  41c2e3:	mov    rdx,QWORD PTR [rbp-0x10]
  41c2e7:	mov    rdx,QWORD PTR [rdx+0x30]
  41c2eb:	mov    ecx,DWORD PTR [rdx+0x14]
  41c2ee:	mov    edx,ecx
  41c2f0:	add    rax,rdx
  41c2f3:	mov    QWORD PTR [rbp-0x30],rax
  41c2f7:	mov    rax,QWORD PTR [rbp-0x10]
  41c2fb:	mov    rax,QWORD PTR [rax]
  41c2fe:	mov    rdx,QWORD PTR [rbp-0x30]
  41c302:	sub    rax,rdx
  41c305:	sar    rax,0x1
  41c309:	mov    DWORD PTR [rbp-0x28],eax
  41c30c:	mov    rdi,QWORD PTR [rbp-0x10]
  41c310:	mov    rdx,QWORD PTR [rbp-0x10]
  41c314:	mov    rsi,QWORD PTR [rdx+0x18]
  41c318:	mov    rdx,QWORD PTR [rbp-0x10]
  41c31c:	mov    eax,DWORD PTR [rdx+0x20]
  41c31f:	mov    edx,eax
  41c321:	mov    r8,QWORD PTR [rbp-0x10]
  41c325:	mov    r9w,WORD PTR [r8+0xea]
  41c32d:	mov    r8,QWORD PTR [rbp-0x30]
  41c331:	mov    eax,DWORD PTR [rbp-0x28]
  41c334:	mov    ecx,DWORD PTR [rbp-0x24]
  41c337:	movzx  r10d,r9w
  41c33b:	mov    DWORD PTR [rbp-0x34],ecx
  41c33e:	mov    ecx,r10d
  41c341:	mov    r9d,eax
  41c344:	mov    eax,DWORD PTR [rbp-0x34]
  41c347:	mov    DWORD PTR [rsp],eax
  41c34a:	call   41bc30 <flatcc_builder_create_table@@Base>
  41c34f:	xor    ecx,ecx
  41c351:	mov    DWORD PTR [rbp-0x20],eax
  41c354:	cmp    ecx,eax
  41c356:	jne    41c368 <flatcc_builder_end_table@@Base+0x198>
  41c35c:	mov    DWORD PTR [rbp-0x4],0x0
  41c363:	jmp    41c3df <flatcc_builder_end_table@@Base+0x20f>
  41c368:	mov    rax,QWORD PTR [rbp-0x10]
  41c36c:	mov    rax,QWORD PTR [rax+0x30]
  41c370:	mov    ecx,DWORD PTR [rax+0x18]
  41c373:	mov    rax,QWORD PTR [rbp-0x10]
  41c377:	mov    DWORD PTR [rax+0x14],ecx
  41c37a:	mov    rax,QWORD PTR [rbp-0x10]
  41c37e:	mov    rax,QWORD PTR [rax+0x30]
  41c382:	mov    dx,WORD PTR [rax+0x1c]
  41c386:	mov    rax,QWORD PTR [rbp-0x10]
  41c38a:	mov    WORD PTR [rax+0x10],dx
  41c38e:	mov    rax,QWORD PTR [rbp-0x10]
  41c392:	mov    rax,QWORD PTR [rax+0x58]
  41c396:	mov    rsi,QWORD PTR [rbp-0x10]
  41c39a:	mov    rsi,QWORD PTR [rsi+0x30]
  41c39e:	mov    ecx,DWORD PTR [rsi+0x10]
  41c3a1:	mov    esi,ecx
  41c3a3:	add    rax,rsi
  41c3a6:	mov    rsi,QWORD PTR [rbp-0x10]
  41c3aa:	mov    QWORD PTR [rsi+0x8],rax
  41c3ae:	mov    rax,QWORD PTR [rbp-0x10]
  41c3b2:	mov    rax,QWORD PTR [rax+0x88]
  41c3b9:	mov    rsi,QWORD PTR [rbp-0x10]
  41c3bd:	mov    rsi,QWORD PTR [rsi+0x30]
  41c3c1:	mov    ecx,DWORD PTR [rsi+0x14]
  41c3c4:	mov    esi,ecx
  41c3c6:	add    rax,rsi
  41c3c9:	mov    rsi,QWORD PTR [rbp-0x10]
  41c3cd:	mov    QWORD PTR [rsi],rax
  41c3d0:	mov    rdi,QWORD PTR [rbp-0x10]
  41c3d4:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41c3d9:	mov    ecx,DWORD PTR [rbp-0x20]
  41c3dc:	mov    DWORD PTR [rbp-0x4],ecx
  41c3df:	mov    eax,DWORD PTR [rbp-0x4]
  41c3e2:	add    rsp,0x40
  41c3e6:	pop    rbp
  41c3e7:	ret    
  41c3e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c3f0 <flatcc_builder_create_vector@@Base>:
  41c3f0:	push   rbp
  41c3f1:	mov    rbp,rsp
  41c3f4:	sub    rsp,0xe0
  41c3fb:	mov    QWORD PTR [rbp-0x10],rdi
  41c3ff:	mov    QWORD PTR [rbp-0x18],rsi
  41c403:	mov    QWORD PTR [rbp-0x20],rdx
  41c407:	mov    QWORD PTR [rbp-0x28],rcx
  41c40b:	mov    WORD PTR [rbp-0x2a],r8w
  41c410:	mov    QWORD PTR [rbp-0x38],r9
  41c414:	mov    rax,QWORD PTR [rbp-0x20]
  41c418:	cmp    rax,QWORD PTR [rbp-0x38]
  41c41c:	jbe    41c460 <flatcc_builder_create_vector@@Base+0x70>
  41c422:	mov    rax,QWORD PTR [rbp-0x20]
  41c426:	cmp    rax,QWORD PTR [rbp-0x38]
  41c42a:	ja     41c435 <flatcc_builder_create_vector@@Base+0x45>
  41c430:	jmp    41c454 <flatcc_builder_create_vector@@Base+0x64>
  41c435:	lea    rdi,[rip+0xb31f]        # 42775b <flatcc_builder_padding_base@@Base+0xbab>
  41c43c:	lea    rsi,[rip+0xa97f]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c443:	mov    edx,0x555
  41c448:	lea    rcx,[rip+0xb31f]        # 42776e <flatcc_builder_padding_base@@Base+0xbbe>
  41c44f:	call   404090 <__assert_fail@plt>
  41c454:	mov    DWORD PTR [rbp-0x4],0x0
  41c45b:	jmp    41c61c <flatcc_builder_create_vector@@Base+0x22c>
  41c460:	lea    rdi,[rbp-0x2a]
  41c464:	mov    esi,0x4
  41c469:	call   41b1a0 <flatcc_builder_start_vector@@Base+0xb0>
  41c46e:	mov    rdi,QWORD PTR [rbp-0x10]
  41c472:	movzx  esi,WORD PTR [rbp-0x2a]
  41c476:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41c47b:	mov    rax,QWORD PTR [rbp-0x20]
  41c47f:	mov    rcx,QWORD PTR [rbp-0x28]
  41c483:	imul   eax,ecx
  41c486:	mov    DWORD PTR [rbp-0x3c],eax
  41c489:	mov    rdx,QWORD PTR [rbp-0x20]
  41c48d:	mov    edi,edx
  41c48f:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41c494:	mov    DWORD PTR [rbp-0x44],eax
  41c497:	mov    rdi,QWORD PTR [rbp-0x10]
  41c49b:	mov    esi,DWORD PTR [rbp-0x3c]
  41c49e:	movzx  edx,WORD PTR [rbp-0x2a]
  41c4a2:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  41c4a7:	mov    DWORD PTR [rbp-0x40],eax
  41c4aa:	mov    QWORD PTR [rbp-0xd8],0x0
  41c4b5:	mov    DWORD PTR [rbp-0xd0],0x0
  41c4bf:	mov    rdi,QWORD PTR [rbp-0xd8]
  41c4c6:	add    rdi,0x4
  41c4cd:	mov    QWORD PTR [rbp-0xd8],rdi
  41c4d4:	lea    rdi,[rbp-0x44]
  41c4d8:	lea    r8,[rbp-0xd8]
  41c4df:	mov    r9,r8
  41c4e2:	add    r9,0x10
  41c4e9:	movsxd r10,DWORD PTR [rbp-0xd0]
  41c4f0:	shl    r10,0x4
  41c4f4:	add    r9,r10
  41c4f7:	mov    QWORD PTR [r9],rdi
  41c4fa:	add    r8,0x10
  41c501:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41c508:	shl    rdi,0x4
  41c50c:	add    r8,rdi
  41c50f:	mov    QWORD PTR [r8+0x8],0x4
  41c517:	mov    eax,DWORD PTR [rbp-0xd0]
  41c51d:	add    eax,0x1
  41c520:	mov    DWORD PTR [rbp-0xd0],eax
  41c526:	cmp    DWORD PTR [rbp-0x3c],0x0
  41c52a:	jbe    41c596 <flatcc_builder_create_vector@@Base+0x1a6>
  41c530:	mov    eax,DWORD PTR [rbp-0x3c]
  41c533:	mov    ecx,eax
  41c535:	add    rcx,QWORD PTR [rbp-0xd8]
  41c53c:	mov    QWORD PTR [rbp-0xd8],rcx
  41c543:	mov    rcx,QWORD PTR [rbp-0x18]
  41c547:	lea    rdx,[rbp-0xd8]
  41c54e:	mov    rsi,rdx
  41c551:	add    rsi,0x10
  41c558:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41c55f:	shl    rdi,0x4
  41c563:	add    rsi,rdi
  41c566:	mov    QWORD PTR [rsi],rcx
  41c569:	mov    eax,DWORD PTR [rbp-0x3c]
  41c56c:	mov    ecx,eax
  41c56e:	add    rdx,0x10
  41c575:	movsxd rsi,DWORD PTR [rbp-0xd0]
  41c57c:	shl    rsi,0x4
  41c580:	add    rdx,rsi
  41c583:	mov    QWORD PTR [rdx+0x8],rcx
  41c587:	mov    eax,DWORD PTR [rbp-0xd0]
  41c58d:	add    eax,0x1
  41c590:	mov    DWORD PTR [rbp-0xd0],eax
  41c596:	cmp    DWORD PTR [rbp-0x40],0x0
  41c59a:	jbe    41c609 <flatcc_builder_create_vector@@Base+0x219>
  41c5a0:	lea    rax,[rip+0xa609]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41c5a7:	mov    ecx,DWORD PTR [rbp-0x40]
  41c5aa:	mov    edx,ecx
  41c5ac:	add    rdx,QWORD PTR [rbp-0xd8]
  41c5b3:	mov    QWORD PTR [rbp-0xd8],rdx
  41c5ba:	lea    rdx,[rbp-0xd8]
  41c5c1:	mov    rsi,rdx
  41c5c4:	add    rsi,0x10
  41c5cb:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41c5d2:	shl    rdi,0x4
  41c5d6:	add    rsi,rdi
  41c5d9:	mov    QWORD PTR [rsi],rax
  41c5dc:	mov    ecx,DWORD PTR [rbp-0x40]
  41c5df:	mov    eax,ecx
  41c5e1:	add    rdx,0x10
  41c5e8:	movsxd rsi,DWORD PTR [rbp-0xd0]
  41c5ef:	shl    rsi,0x4
  41c5f3:	add    rdx,rsi
  41c5f6:	mov    QWORD PTR [rdx+0x8],rax
  41c5fa:	mov    ecx,DWORD PTR [rbp-0xd0]
  41c600:	add    ecx,0x1
  41c603:	mov    DWORD PTR [rbp-0xd0],ecx
  41c609:	mov    rdi,QWORD PTR [rbp-0x10]
  41c60d:	lea    rsi,[rbp-0xd8]
  41c614:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  41c619:	mov    DWORD PTR [rbp-0x4],eax
  41c61c:	mov    eax,DWORD PTR [rbp-0x4]
  41c61f:	add    rsp,0xe0
  41c626:	pop    rbp
  41c627:	ret    
  41c628:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c630 <flatcc_builder_end_vector@@Base>:
  41c630:	push   rbp
  41c631:	mov    rbp,rsp
  41c634:	sub    rsp,0x20
  41c638:	mov    QWORD PTR [rbp-0x10],rdi
  41c63c:	mov    rax,QWORD PTR [rbp-0x10]
  41c640:	mov    rax,QWORD PTR [rax+0x30]
  41c644:	movzx  ecx,WORD PTR [rax+0xe]
  41c648:	cmp    ecx,0x4
  41c64b:	jne    41c656 <flatcc_builder_end_vector@@Base+0x26>
  41c651:	jmp    41c675 <flatcc_builder_end_vector@@Base+0x45>
  41c656:	lea    rdi,[rip+0xaaa2]        # 4270ff <flatcc_builder_padding_base@@Base+0x54f>
  41c65d:	lea    rsi,[rip+0xa75e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c664:	mov    edx,0x578
  41c669:	lea    rcx,[rip+0xb174]        # 4277e4 <flatcc_builder_padding_base@@Base+0xc34>
  41c670:	call   404090 <__assert_fail@plt>
  41c675:	mov    rdi,QWORD PTR [rbp-0x10]
  41c679:	mov    rax,QWORD PTR [rbp-0x10]
  41c67d:	mov    rsi,QWORD PTR [rax+0x18]
  41c681:	mov    rax,QWORD PTR [rbp-0x10]
  41c685:	mov    rax,QWORD PTR [rax+0x30]
  41c689:	mov    ecx,DWORD PTR [rax+0x14]
  41c68c:	mov    edx,ecx
  41c68e:	mov    rax,QWORD PTR [rbp-0x10]
  41c692:	mov    rax,QWORD PTR [rax+0x30]
  41c696:	mov    ecx,DWORD PTR [rax+0x10]
  41c699:	mov    rax,QWORD PTR [rbp-0x10]
  41c69d:	mov    r8w,WORD PTR [rax+0xea]
  41c6a5:	mov    rax,QWORD PTR [rbp-0x10]
  41c6a9:	mov    rax,QWORD PTR [rax+0x30]
  41c6ad:	mov    r9d,DWORD PTR [rax+0x18]
  41c6b1:	movzx  r8d,r8w
  41c6b5:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  41c6ba:	xor    r8d,r8d
  41c6bd:	mov    DWORD PTR [rbp-0x14],eax
  41c6c0:	cmp    r8d,eax
  41c6c3:	jne    41c6d5 <flatcc_builder_end_vector@@Base+0xa5>
  41c6c9:	mov    DWORD PTR [rbp-0x4],0x0
  41c6d0:	jmp    41c6e4 <flatcc_builder_end_vector@@Base+0xb4>
  41c6d5:	mov    rdi,QWORD PTR [rbp-0x10]
  41c6d9:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41c6de:	mov    eax,DWORD PTR [rbp-0x14]
  41c6e1:	mov    DWORD PTR [rbp-0x4],eax
  41c6e4:	mov    eax,DWORD PTR [rbp-0x4]
  41c6e7:	add    rsp,0x20
  41c6eb:	pop    rbp
  41c6ec:	ret    
  41c6ed:	nop    DWORD PTR [rax]

000000000041c6f0 <flatcc_builder_vector_count@@Base>:
  41c6f0:	push   rbp
  41c6f1:	mov    rbp,rsp
  41c6f4:	mov    QWORD PTR [rbp-0x8],rdi
  41c6f8:	mov    rax,QWORD PTR [rbp-0x8]
  41c6fc:	mov    rax,QWORD PTR [rax+0x30]
  41c700:	mov    ecx,DWORD PTR [rax+0x14]
  41c703:	mov    eax,ecx
  41c705:	pop    rbp
  41c706:	ret    
  41c707:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c710 <flatcc_builder_vector_edit@@Base>:
  41c710:	push   rbp
  41c711:	mov    rbp,rsp
  41c714:	mov    QWORD PTR [rbp-0x8],rdi
  41c718:	mov    rax,QWORD PTR [rbp-0x8]
  41c71c:	mov    rax,QWORD PTR [rax+0x18]
  41c720:	pop    rbp
  41c721:	ret    
  41c722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c72c:	nop    DWORD PTR [rax+0x0]

000000000041c730 <flatcc_builder_create_offset_vector_direct@@Base>:
  41c730:	push   rbp
  41c731:	mov    rbp,rsp
  41c734:	sub    rsp,0x20
  41c738:	xor    eax,eax
  41c73a:	mov    ecx,eax
  41c73c:	mov    QWORD PTR [rbp-0x8],rdi
  41c740:	mov    QWORD PTR [rbp-0x10],rsi
  41c744:	mov    QWORD PTR [rbp-0x18],rdx
  41c748:	mov    rdi,QWORD PTR [rbp-0x8]
  41c74c:	mov    rsi,QWORD PTR [rbp-0x10]
  41c750:	mov    rdx,QWORD PTR [rbp-0x18]
  41c754:	call   41c760 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41c759:	add    rsp,0x20
  41c75d:	pop    rbp
  41c75e:	ret    
  41c75f:	nop
  41c760:	push   rbp
  41c761:	mov    rbp,rsp
  41c764:	sub    rsp,0xd0
  41c76b:	mov    QWORD PTR [rbp-0x10],rdi
  41c76f:	mov    QWORD PTR [rbp-0x18],rsi
  41c773:	mov    QWORD PTR [rbp-0x20],rdx
  41c777:	mov    QWORD PTR [rbp-0x28],rcx
  41c77b:	mov    rax,QWORD PTR [rbp-0x20]
  41c77f:	mov    eax,eax
  41c781:	mov    ecx,eax
  41c783:	cmp    rcx,0x3fffffff
  41c78a:	jbe    41c79c <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
  41c790:	mov    DWORD PTR [rbp-0x4],0x0
  41c797:	jmp    41ca98 <flatcc_builder_create_offset_vector_direct@@Base+0x368>
  41c79c:	mov    rdi,QWORD PTR [rbp-0x10]
  41c7a0:	mov    esi,0x4
  41c7a5:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41c7aa:	mov    rax,QWORD PTR [rbp-0x20]
  41c7ae:	mov    eax,eax
  41c7b0:	mov    ecx,eax
  41c7b2:	shl    rcx,0x2
  41c7b6:	mov    DWORD PTR [rbp-0x2c],ecx
  41c7b9:	mov    rdx,QWORD PTR [rbp-0x20]
  41c7bd:	mov    edi,edx
  41c7bf:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41c7c4:	mov    DWORD PTR [rbp-0x34],eax
  41c7c7:	mov    rdi,QWORD PTR [rbp-0x10]
  41c7cb:	mov    esi,DWORD PTR [rbp-0x2c]
  41c7ce:	mov    edx,0x4
  41c7d3:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  41c7d8:	mov    DWORD PTR [rbp-0x30],eax
  41c7db:	mov    QWORD PTR [rbp-0xd0],0x0
  41c7e6:	mov    DWORD PTR [rbp-0xc8],0x0
  41c7f0:	mov    rdi,QWORD PTR [rbp-0xd0]
  41c7f7:	add    rdi,0x4
  41c7fe:	mov    QWORD PTR [rbp-0xd0],rdi
  41c805:	lea    rdi,[rbp-0x34]
  41c809:	lea    r8,[rbp-0xd0]
  41c810:	mov    r9,r8
  41c813:	add    r9,0x10
  41c81a:	movsxd r10,DWORD PTR [rbp-0xc8]
  41c821:	shl    r10,0x4
  41c825:	add    r9,r10
  41c828:	mov    QWORD PTR [r9],rdi
  41c82b:	add    r8,0x10
  41c832:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41c839:	shl    rdi,0x4
  41c83d:	add    r8,rdi
  41c840:	mov    QWORD PTR [r8+0x8],0x4
  41c848:	mov    eax,DWORD PTR [rbp-0xc8]
  41c84e:	add    eax,0x1
  41c851:	mov    DWORD PTR [rbp-0xc8],eax
  41c857:	cmp    DWORD PTR [rbp-0x2c],0x0
  41c85b:	jbe    41c8c7 <flatcc_builder_create_offset_vector_direct@@Base+0x197>
  41c861:	mov    eax,DWORD PTR [rbp-0x2c]
  41c864:	mov    ecx,eax
  41c866:	add    rcx,QWORD PTR [rbp-0xd0]
  41c86d:	mov    QWORD PTR [rbp-0xd0],rcx
  41c874:	mov    rcx,QWORD PTR [rbp-0x18]
  41c878:	lea    rdx,[rbp-0xd0]
  41c87f:	mov    rsi,rdx
  41c882:	add    rsi,0x10
  41c889:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41c890:	shl    rdi,0x4
  41c894:	add    rsi,rdi
  41c897:	mov    QWORD PTR [rsi],rcx
  41c89a:	mov    eax,DWORD PTR [rbp-0x2c]
  41c89d:	mov    ecx,eax
  41c89f:	add    rdx,0x10
  41c8a6:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41c8ad:	shl    rsi,0x4
  41c8b1:	add    rdx,rsi
  41c8b4:	mov    QWORD PTR [rdx+0x8],rcx
  41c8b8:	mov    eax,DWORD PTR [rbp-0xc8]
  41c8be:	add    eax,0x1
  41c8c1:	mov    DWORD PTR [rbp-0xc8],eax
  41c8c7:	cmp    DWORD PTR [rbp-0x30],0x0
  41c8cb:	jbe    41c93a <flatcc_builder_create_offset_vector_direct@@Base+0x20a>
  41c8d1:	lea    rax,[rip+0xa2d8]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41c8d8:	mov    ecx,DWORD PTR [rbp-0x30]
  41c8db:	mov    edx,ecx
  41c8dd:	add    rdx,QWORD PTR [rbp-0xd0]
  41c8e4:	mov    QWORD PTR [rbp-0xd0],rdx
  41c8eb:	lea    rdx,[rbp-0xd0]
  41c8f2:	mov    rsi,rdx
  41c8f5:	add    rsi,0x10
  41c8fc:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41c903:	shl    rdi,0x4
  41c907:	add    rsi,rdi
  41c90a:	mov    QWORD PTR [rsi],rax
  41c90d:	mov    ecx,DWORD PTR [rbp-0x30]
  41c910:	mov    eax,ecx
  41c912:	add    rdx,0x10
  41c919:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41c920:	shl    rsi,0x4
  41c924:	add    rdx,rsi
  41c927:	mov    QWORD PTR [rdx+0x8],rax
  41c92b:	mov    ecx,DWORD PTR [rbp-0xc8]
  41c931:	add    ecx,0x1
  41c934:	mov    DWORD PTR [rbp-0xc8],ecx
  41c93a:	mov    rax,QWORD PTR [rbp-0x10]
  41c93e:	mov    ecx,DWORD PTR [rax+0xf0]
  41c944:	mov    rax,QWORD PTR [rbp-0xd0]
  41c94b:	sub    ecx,eax
  41c94d:	mov    DWORD PTR [rbp-0x38],ecx
  41c950:	mov    DWORD PTR [rbp-0x40],0x0
  41c957:	mov    eax,DWORD PTR [rbp-0x40]
  41c95a:	mov    rcx,QWORD PTR [rbp-0x20]
  41c95e:	cmp    eax,ecx
  41c960:	jae    41ca85 <flatcc_builder_create_offset_vector_direct@@Base+0x355>
  41c966:	mov    rax,QWORD PTR [rbp-0x18]
  41c96a:	mov    ecx,DWORD PTR [rbp-0x40]
  41c96d:	mov    edx,ecx
  41c96f:	cmp    DWORD PTR [rax+rdx*4],0x0
  41c973:	je     41ca04 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
  41c979:	mov    rax,QWORD PTR [rbp-0x18]
  41c97d:	mov    ecx,DWORD PTR [rbp-0x40]
  41c980:	mov    edx,ecx
  41c982:	mov    ecx,DWORD PTR [rax+rdx*4]
  41c985:	sub    ecx,DWORD PTR [rbp-0x38]
  41c988:	mov    ecx,ecx
  41c98a:	mov    eax,ecx
  41c98c:	mov    ecx,DWORD PTR [rbp-0x40]
  41c98f:	mov    edx,ecx
  41c991:	shl    rdx,0x2
  41c995:	sub    rax,rdx
  41c998:	sub    rax,0x4
  41c99e:	mov    DWORD PTR [rbp-0x3c],eax
  41c9a1:	mov    edi,DWORD PTR [rbp-0x3c]
  41c9a4:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41c9a9:	mov    rdx,QWORD PTR [rbp-0x18]
  41c9ad:	mov    ecx,DWORD PTR [rbp-0x40]
  41c9b0:	mov    esi,ecx
  41c9b2:	mov    DWORD PTR [rdx+rsi*4],eax
  41c9b5:	cmp    QWORD PTR [rbp-0x28],0x0
  41c9ba:	je     41c9ff <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  41c9c0:	mov    rax,QWORD PTR [rbp-0x28]
  41c9c4:	mov    ecx,DWORD PTR [rbp-0x40]
  41c9c7:	mov    edx,ecx
  41c9c9:	movzx  ecx,BYTE PTR [rax+rdx*1]
  41c9cd:	cmp    ecx,0x0
  41c9d0:	je     41c9db <flatcc_builder_create_offset_vector_direct@@Base+0x2ab>
  41c9d6:	jmp    41c9fa <flatcc_builder_create_offset_vector_direct@@Base+0x2ca>
  41c9db:	lea    rdi,[rip+0xb594]        # 427f76 <flatcc_builder_padding_base@@Base+0x13c6>
  41c9e2:	lea    rsi,[rip+0xa3d9]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c9e9:	mov    edx,0x5b1
  41c9ee:	lea    rcx,[rip+0xb58f]        # 427f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41c9f5:	call   404090 <__assert_fail@plt>
  41c9fa:	jmp    41c9ff <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  41c9ff:	jmp    41ca72 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  41ca04:	cmp    QWORD PTR [rbp-0x28],0x0
  41ca09:	je     41ca4e <flatcc_builder_create_offset_vector_direct@@Base+0x31e>
  41ca0f:	mov    rax,QWORD PTR [rbp-0x28]
  41ca13:	mov    ecx,DWORD PTR [rbp-0x40]
  41ca16:	mov    edx,ecx
  41ca18:	movzx  ecx,BYTE PTR [rax+rdx*1]
  41ca1c:	cmp    ecx,0x0
  41ca1f:	jne    41ca2a <flatcc_builder_create_offset_vector_direct@@Base+0x2fa>
  41ca25:	jmp    41ca49 <flatcc_builder_create_offset_vector_direct@@Base+0x319>
  41ca2a:	lea    rdi,[rip+0xb5d6]        # 428007 <flatcc_builder_padding_base@@Base+0x1457>
  41ca31:	lea    rsi,[rip+0xa38a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ca38:	mov    edx,0x5b5
  41ca3d:	lea    rcx,[rip+0xb540]        # 427f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41ca44:	call   404090 <__assert_fail@plt>
  41ca49:	jmp    41ca6d <flatcc_builder_create_offset_vector_direct@@Base+0x33d>
  41ca4e:	lea    rdi,[rip+0xb52d]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41ca55:	lea    rsi,[rip+0xa366]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ca5c:	mov    edx,0x5b7
  41ca61:	lea    rcx,[rip+0xb51c]        # 427f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41ca68:	call   404090 <__assert_fail@plt>
  41ca6d:	jmp    41ca72 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  41ca72:	jmp    41ca77 <flatcc_builder_create_offset_vector_direct@@Base+0x347>
  41ca77:	mov    eax,DWORD PTR [rbp-0x40]
  41ca7a:	add    eax,0x1
  41ca7d:	mov    DWORD PTR [rbp-0x40],eax
  41ca80:	jmp    41c957 <flatcc_builder_create_offset_vector_direct@@Base+0x227>
  41ca85:	mov    rdi,QWORD PTR [rbp-0x10]
  41ca89:	lea    rsi,[rbp-0xd0]
  41ca90:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  41ca95:	mov    DWORD PTR [rbp-0x4],eax
  41ca98:	mov    eax,DWORD PTR [rbp-0x4]
  41ca9b:	add    rsp,0xd0
  41caa2:	pop    rbp
  41caa3:	ret    
  41caa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41caae:	xchg   ax,ax

000000000041cab0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41cab0:	push   rbp
  41cab1:	mov    rbp,rsp
  41cab4:	sub    rsp,0x20
  41cab8:	mov    QWORD PTR [rbp-0x10],rdi
  41cabc:	mov    QWORD PTR [rbp-0x18],rsi
  41cac0:	mov    rax,QWORD PTR [rbp-0x10]
  41cac4:	mov    rax,QWORD PTR [rax+0x30]
  41cac8:	movzx  ecx,WORD PTR [rax+0xe]
  41cacc:	cmp    ecx,0x5
  41cacf:	jne    41cada <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  41cad5:	jmp    41caf9 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  41cada:	lea    rdi,[rip+0xa717]        # 4271f8 <flatcc_builder_padding_base@@Base+0x648>
  41cae1:	lea    rsi,[rip+0xa2da]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cae8:	mov    edx,0x5d5
  41caed:	lea    rcx,[rip+0xad7d]        # 427871 <flatcc_builder_padding_base@@Base+0xcc1>
  41caf4:	call   404090 <__assert_fail@plt>
  41caf9:	mov    rdi,QWORD PTR [rbp-0x10]
  41cafd:	mov    rax,QWORD PTR [rbp-0x10]
  41cb01:	mov    rax,QWORD PTR [rax+0x18]
  41cb05:	mov    rcx,QWORD PTR [rbp-0x10]
  41cb09:	mov    rcx,QWORD PTR [rcx+0x30]
  41cb0d:	mov    edx,DWORD PTR [rcx+0x14]
  41cb10:	mov    rcx,QWORD PTR [rbp-0x18]
  41cb14:	mov    rsi,rax
  41cb17:	call   41c760 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41cb1c:	xor    r8d,r8d
  41cb1f:	mov    DWORD PTR [rbp-0x1c],eax
  41cb22:	cmp    r8d,eax
  41cb25:	jne    41cb37 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  41cb2b:	mov    DWORD PTR [rbp-0x4],0x0
  41cb32:	jmp    41cb46 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  41cb37:	mov    rdi,QWORD PTR [rbp-0x10]
  41cb3b:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41cb40:	mov    eax,DWORD PTR [rbp-0x1c]
  41cb43:	mov    DWORD PTR [rbp-0x4],eax
  41cb46:	mov    eax,DWORD PTR [rbp-0x4]
  41cb49:	add    rsp,0x20
  41cb4d:	pop    rbp
  41cb4e:	ret    
  41cb4f:	nop

000000000041cb50 <flatcc_builder_offset_vector_edit@@Base>:
  41cb50:	push   rbp
  41cb51:	mov    rbp,rsp
  41cb54:	mov    QWORD PTR [rbp-0x8],rdi
  41cb58:	mov    rax,QWORD PTR [rbp-0x8]
  41cb5c:	mov    rax,QWORD PTR [rax+0x18]
  41cb60:	pop    rbp
  41cb61:	ret    
  41cb62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cb6c:	nop    DWORD PTR [rax+0x0]

000000000041cb70 <flatcc_builder_offset_vector_count@@Base>:
  41cb70:	push   rbp
  41cb71:	mov    rbp,rsp
  41cb74:	mov    QWORD PTR [rbp-0x8],rdi
  41cb78:	mov    rax,QWORD PTR [rbp-0x8]
  41cb7c:	mov    rax,QWORD PTR [rax+0x30]
  41cb80:	mov    ecx,DWORD PTR [rax+0x14]
  41cb83:	mov    eax,ecx
  41cb85:	pop    rbp
  41cb86:	ret    
  41cb87:	nop    WORD PTR [rax+rax*1+0x0]

000000000041cb90 <flatcc_builder_table_add_union@@Base>:
  41cb90:	push   rbp
  41cb91:	mov    rbp,rsp
  41cb94:	sub    rsp,0x30
  41cb98:	mov    QWORD PTR [rbp-0x10],rdx
  41cb9c:	mov    QWORD PTR [rbp-0x18],rdi
  41cba0:	mov    DWORD PTR [rbp-0x1c],esi
  41cba3:	mov    rax,QWORD PTR [rbp-0x18]
  41cba7:	mov    rax,QWORD PTR [rax+0x30]
  41cbab:	movzx  ecx,WORD PTR [rax+0xe]
  41cbaf:	cmp    ecx,0x3
  41cbb2:	jne    41cbbd <flatcc_builder_table_add_union@@Base+0x2d>
  41cbb8:	jmp    41cbdc <flatcc_builder_table_add_union@@Base+0x4c>
  41cbbd:	lea    rdi,[rip+0xaa2d]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41cbc4:	lea    rsi,[rip+0xa1f7]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cbcb:	mov    edx,0x5ee
  41cbd0:	lea    rcx,[rip+0xad0c]        # 4278e3 <flatcc_builder_padding_base@@Base+0xd33>
  41cbd7:	call   404090 <__assert_fail@plt>
  41cbdc:	movzx  eax,BYTE PTR [rbp-0x10]
  41cbe0:	cmp    eax,0x0
  41cbe3:	jne    41cc3a <flatcc_builder_table_add_union@@Base+0xaa>
  41cbe9:	cmp    DWORD PTR [rbp-0xc],0x0
  41cbed:	je     41cc3a <flatcc_builder_table_add_union@@Base+0xaa>
  41cbf3:	movzx  eax,BYTE PTR [rbp-0x10]
  41cbf7:	cmp    eax,0x0
  41cbfa:	jne    41cc0a <flatcc_builder_table_add_union@@Base+0x7a>
  41cc00:	cmp    DWORD PTR [rbp-0xc],0x0
  41cc04:	jne    41cc0f <flatcc_builder_table_add_union@@Base+0x7f>
  41cc0a:	jmp    41cc2e <flatcc_builder_table_add_union@@Base+0x9e>
  41cc0f:	lea    rdi,[rip+0xad25]        # 42793b <flatcc_builder_padding_base@@Base+0xd8b>
  41cc16:	lea    rsi,[rip+0xa1a5]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cc1d:	mov    edx,0x5ef
  41cc22:	lea    rcx,[rip+0xacba]        # 4278e3 <flatcc_builder_padding_base@@Base+0xd33>
  41cc29:	call   404090 <__assert_fail@plt>
  41cc2e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41cc35:	jmp    41cd1e <flatcc_builder_table_add_union@@Base+0x18e>
  41cc3a:	cmp    DWORD PTR [rbp-0xc],0x0
  41cc3e:	je     41cca3 <flatcc_builder_table_add_union@@Base+0x113>
  41cc44:	mov    rdi,QWORD PTR [rbp-0x18]
  41cc48:	mov    esi,DWORD PTR [rbp-0x1c]
  41cc4b:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  41cc50:	mov    QWORD PTR [rbp-0x28],rax
  41cc54:	cmp    QWORD PTR [rbp-0x28],0x0
  41cc59:	jne    41cc9a <flatcc_builder_table_add_union@@Base+0x10a>
  41cc5f:	cmp    QWORD PTR [rbp-0x28],0x0
  41cc64:	je     41cc6f <flatcc_builder_table_add_union@@Base+0xdf>
  41cc6a:	jmp    41cc8e <flatcc_builder_table_add_union@@Base+0xfe>
  41cc6f:	lea    rdi,[rip+0xace7]        # 42795d <flatcc_builder_padding_base@@Base+0xdad>
  41cc76:	lea    rsi,[rip+0xa145]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cc7d:	mov    edx,0x5f2
  41cc82:	lea    rcx,[rip+0xac5a]        # 4278e3 <flatcc_builder_padding_base@@Base+0xd33>
  41cc89:	call   404090 <__assert_fail@plt>
  41cc8e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41cc95:	jmp    41cd1e <flatcc_builder_table_add_union@@Base+0x18e>
  41cc9a:	mov    eax,DWORD PTR [rbp-0xc]
  41cc9d:	mov    rcx,QWORD PTR [rbp-0x28]
  41cca1:	mov    DWORD PTR [rcx],eax
  41cca3:	mov    rdi,QWORD PTR [rbp-0x18]
  41cca7:	mov    eax,DWORD PTR [rbp-0x1c]
  41ccaa:	sub    eax,0x1
  41ccad:	mov    esi,eax
  41ccaf:	mov    edx,0x1
  41ccb4:	mov    ecx,0x1
  41ccb9:	call   41ce20 <flatcc_builder_table_add@@Base>
  41ccbe:	mov    QWORD PTR [rbp-0x30],rax
  41ccc2:	cmp    QWORD PTR [rbp-0x30],0x0
  41ccc7:	jne    41cd08 <flatcc_builder_table_add_union@@Base+0x178>
  41cccd:	cmp    QWORD PTR [rbp-0x30],0x0
  41ccd2:	je     41ccdd <flatcc_builder_table_add_union@@Base+0x14d>
  41ccd8:	jmp    41ccfc <flatcc_builder_table_add_union@@Base+0x16c>
  41ccdd:	lea    rdi,[rip+0xac83]        # 427967 <flatcc_builder_padding_base@@Base+0xdb7>
  41cce4:	lea    rsi,[rip+0xa0d7]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cceb:	mov    edx,0x5f6
  41ccf0:	lea    rcx,[rip+0xabec]        # 4278e3 <flatcc_builder_padding_base@@Base+0xd33>
  41ccf7:	call   404090 <__assert_fail@plt>
  41ccfc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41cd03:	jmp    41cd1e <flatcc_builder_table_add_union@@Base+0x18e>
  41cd08:	movzx  edi,BYTE PTR [rbp-0x10]
  41cd0c:	call   41cf60 <flatcc_builder_table_add@@Base+0x140>
  41cd11:	mov    rcx,QWORD PTR [rbp-0x30]
  41cd15:	mov    BYTE PTR [rcx],al
  41cd17:	mov    DWORD PTR [rbp-0x4],0x0
  41cd1e:	mov    eax,DWORD PTR [rbp-0x4]
  41cd21:	add    rsp,0x30
  41cd25:	pop    rbp
  41cd26:	ret    
  41cd27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041cd30 <flatcc_builder_table_add_offset@@Base>:
  41cd30:	push   rbp
  41cd31:	mov    rbp,rsp
  41cd34:	sub    rsp,0x10
  41cd38:	mov    QWORD PTR [rbp-0x8],rdi
  41cd3c:	mov    DWORD PTR [rbp-0xc],esi
  41cd3f:	mov    rax,QWORD PTR [rbp-0x8]
  41cd43:	mov    rax,QWORD PTR [rax+0x30]
  41cd47:	movzx  ecx,WORD PTR [rax+0xe]
  41cd4b:	cmp    ecx,0x3
  41cd4e:	jne    41cd59 <flatcc_builder_table_add_offset@@Base+0x29>
  41cd54:	jmp    41cd78 <flatcc_builder_table_add_offset@@Base+0x48>
  41cd59:	lea    rdi,[rip+0xa891]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41cd60:	lea    rsi,[rip+0xa05b]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cd67:	mov    edx,0x713
  41cd6c:	lea    rcx,[rip+0xaf72]        # 427ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41cd73:	call   404090 <__assert_fail@plt>
  41cd78:	cmp    DWORD PTR [rbp-0xc],0x0
  41cd7c:	jl     41cd94 <flatcc_builder_table_add_offset@@Base+0x64>
  41cd82:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41cd89:	jg     41cd94 <flatcc_builder_table_add_offset@@Base+0x64>
  41cd8f:	jmp    41cdb3 <flatcc_builder_table_add_offset@@Base+0x83>
  41cd94:	lea    rdi,[rip+0xaeca]        # 427c65 <flatcc_builder_padding_base@@Base+0x10b5>
  41cd9b:	lea    rsi,[rip+0xa020]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cda2:	mov    edx,0x714
  41cda7:	lea    rcx,[rip+0xaf37]        # 427ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41cdae:	call   404090 <__assert_fail@plt>
  41cdb3:	mov    rax,QWORD PTR [rbp-0x8]
  41cdb7:	mov    rax,QWORD PTR [rax+0x8]
  41cdbb:	movsxd rcx,DWORD PTR [rbp-0xc]
  41cdbf:	movzx  edx,WORD PTR [rax+rcx*2]
  41cdc3:	cmp    edx,0x0
  41cdc6:	je     41cdeb <flatcc_builder_table_add_offset@@Base+0xbb>
  41cdcc:	lea    rdi,[rip+0xb1af]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41cdd3:	lea    rsi,[rip+0x9fe8]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cdda:	mov    edx,0x71b
  41cddf:	lea    rcx,[rip+0xaeff]        # 427ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41cde6:	call   404090 <__assert_fail@plt>
  41cdeb:	mov    eax,DWORD PTR [rbp-0xc]
  41cdee:	mov    rcx,QWORD PTR [rbp-0x8]
  41cdf2:	xor    eax,DWORD PTR [rcx+0x14]
  41cdf5:	imul   eax,eax,0x9e3779b1
  41cdfb:	xor    eax,0x4
  41cdfe:	imul   eax,eax,0x9e3779b1
  41ce04:	mov    rcx,QWORD PTR [rbp-0x8]
  41ce08:	mov    DWORD PTR [rcx+0x14],eax
  41ce0b:	mov    rdi,QWORD PTR [rbp-0x8]
  41ce0f:	mov    eax,DWORD PTR [rbp-0xc]
  41ce12:	movzx  esi,ax
  41ce15:	call   41dd00 <flatcc_builder_table_add_copy@@Base+0x60>
  41ce1a:	add    rsp,0x10
  41ce1e:	pop    rbp
  41ce1f:	ret    

000000000041ce20 <flatcc_builder_table_add@@Base>:
  41ce20:	push   rbp
  41ce21:	mov    rbp,rsp
  41ce24:	sub    rsp,0x20
  41ce28:	mov    QWORD PTR [rbp-0x8],rdi
  41ce2c:	mov    DWORD PTR [rbp-0xc],esi
  41ce2f:	mov    QWORD PTR [rbp-0x18],rdx
  41ce33:	mov    WORD PTR [rbp-0x1a],cx
  41ce37:	mov    rax,QWORD PTR [rbp-0x8]
  41ce3b:	mov    rax,QWORD PTR [rax+0x30]
  41ce3f:	movzx  esi,WORD PTR [rax+0xe]
  41ce43:	cmp    esi,0x3
  41ce46:	jne    41ce51 <flatcc_builder_table_add@@Base+0x31>
  41ce4c:	jmp    41ce70 <flatcc_builder_table_add@@Base+0x50>
  41ce51:	lea    rdi,[rip+0xa799]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41ce58:	lea    rsi,[rip+0x9f63]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ce5f:	mov    edx,0x6ed
  41ce64:	lea    rcx,[rip+0xadb0]        # 427c1b <flatcc_builder_padding_base@@Base+0x106b>
  41ce6b:	call   404090 <__assert_fail@plt>
  41ce70:	cmp    DWORD PTR [rbp-0xc],0x0
  41ce74:	jl     41ce8c <flatcc_builder_table_add@@Base+0x6c>
  41ce7a:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41ce81:	jg     41ce8c <flatcc_builder_table_add@@Base+0x6c>
  41ce87:	jmp    41ceab <flatcc_builder_table_add@@Base+0x8b>
  41ce8c:	lea    rdi,[rip+0xadd2]        # 427c65 <flatcc_builder_padding_base@@Base+0x10b5>
  41ce93:	lea    rsi,[rip+0x9f28]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ce9a:	mov    edx,0x6ee
  41ce9f:	lea    rcx,[rip+0xad75]        # 427c1b <flatcc_builder_padding_base@@Base+0x106b>
  41cea6:	call   404090 <__assert_fail@plt>
  41ceab:	movzx  eax,WORD PTR [rbp-0x1a]
  41ceaf:	mov    rcx,QWORD PTR [rbp-0x8]
  41ceb3:	movzx  edx,WORD PTR [rcx+0xea]
  41ceba:	cmp    eax,edx
  41cebc:	jle    41ced1 <flatcc_builder_table_add@@Base+0xb1>
  41cec2:	mov    ax,WORD PTR [rbp-0x1a]
  41cec6:	mov    rcx,QWORD PTR [rbp-0x8]
  41ceca:	mov    WORD PTR [rcx+0xea],ax
  41ced1:	mov    rax,QWORD PTR [rbp-0x8]
  41ced5:	mov    rax,QWORD PTR [rax+0x8]
  41ced9:	movsxd rcx,DWORD PTR [rbp-0xc]
  41cedd:	movzx  edx,WORD PTR [rax+rcx*2]
  41cee1:	cmp    edx,0x0
  41cee4:	je     41cf09 <flatcc_builder_table_add@@Base+0xe9>
  41ceea:	lea    rdi,[rip+0xb091]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41cef1:	lea    rsi,[rip+0x9eca]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cef8:	mov    edx,0x6f8
  41cefd:	lea    rcx,[rip+0xad17]        # 427c1b <flatcc_builder_padding_base@@Base+0x106b>
  41cf04:	call   404090 <__assert_fail@plt>
  41cf09:	mov    eax,DWORD PTR [rbp-0xc]
  41cf0c:	mov    rcx,QWORD PTR [rbp-0x8]
  41cf10:	xor    eax,DWORD PTR [rcx+0x14]
  41cf13:	imul   eax,eax,0x9e3779b1
  41cf19:	mov    rcx,QWORD PTR [rbp-0x18]
  41cf1d:	xor    eax,ecx
  41cf1f:	imul   eax,eax,0x9e3779b1
  41cf25:	mov    rdx,QWORD PTR [rbp-0x8]
  41cf29:	mov    DWORD PTR [rdx+0x14],eax
  41cf2c:	mov    rdi,QWORD PTR [rbp-0x8]
  41cf30:	mov    rdx,QWORD PTR [rbp-0x18]
  41cf34:	mov    si,WORD PTR [rbp-0x1a]
  41cf38:	mov    eax,DWORD PTR [rbp-0xc]
  41cf3b:	mov    WORD PTR [rbp-0x1c],si
  41cf3f:	mov    esi,edx
  41cf41:	mov    r8w,WORD PTR [rbp-0x1c]
  41cf46:	movzx  edx,r8w
  41cf4a:	movzx  ecx,ax
  41cf4d:	call   41db30 <flatcc_builder_string_len@@Base+0x20>
  41cf52:	add    rsp,0x20
  41cf56:	pop    rbp
  41cf57:	ret    
  41cf58:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf60:	push   rbp
  41cf61:	mov    rbp,rsp
  41cf64:	mov    BYTE PTR [rbp-0x1],dil
  41cf68:	movzx  eax,BYTE PTR [rbp-0x1]
  41cf6c:	pop    rbp
  41cf6d:	ret    
  41cf6e:	xchg   ax,ax

000000000041cf70 <flatcc_builder_table_add_union_vector@@Base>:
  41cf70:	push   rbp
  41cf71:	mov    rbp,rsp
  41cf74:	sub    rsp,0x30
  41cf78:	mov    QWORD PTR [rbp-0x10],rdx
  41cf7c:	mov    QWORD PTR [rbp-0x18],rdi
  41cf80:	mov    DWORD PTR [rbp-0x1c],esi
  41cf83:	mov    rax,QWORD PTR [rbp-0x18]
  41cf87:	mov    rax,QWORD PTR [rax+0x30]
  41cf8b:	movzx  ecx,WORD PTR [rax+0xe]
  41cf8f:	cmp    ecx,0x3
  41cf92:	jne    41cf9d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  41cf98:	jmp    41cfbc <flatcc_builder_table_add_union_vector@@Base+0x4c>
  41cf9d:	lea    rdi,[rip+0xa64d]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41cfa4:	lea    rsi,[rip+0x9e17]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cfab:	mov    edx,0x600
  41cfb0:	lea    rcx,[rip+0xa9bc]        # 427973 <flatcc_builder_padding_base@@Base+0xdc3>
  41cfb7:	call   404090 <__assert_fail@plt>
  41cfbc:	cmp    DWORD PTR [rbp-0x10],0x0
  41cfc0:	sete   al
  41cfc3:	and    al,0x1
  41cfc5:	movzx  ecx,al
  41cfc8:	cmp    DWORD PTR [rbp-0xc],0x0
  41cfcc:	sete   al
  41cfcf:	and    al,0x1
  41cfd1:	movzx  edx,al
  41cfd4:	cmp    ecx,edx
  41cfd6:	je     41d02c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  41cfdc:	cmp    DWORD PTR [rbp-0x10],0x0
  41cfe0:	sete   al
  41cfe3:	and    al,0x1
  41cfe5:	movzx  ecx,al
  41cfe8:	cmp    DWORD PTR [rbp-0xc],0x0
  41cfec:	sete   al
  41cfef:	and    al,0x1
  41cff1:	movzx  edx,al
  41cff4:	cmp    ecx,edx
  41cff6:	jne    41d001 <flatcc_builder_table_add_union_vector@@Base+0x91>
  41cffc:	jmp    41d020 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  41d001:	lea    rdi,[rip+0xa9ce]        # 4279d6 <flatcc_builder_padding_base@@Base+0xe26>
  41d008:	lea    rsi,[rip+0x9db3]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d00f:	mov    edx,0x601
  41d014:	lea    rcx,[rip+0xa958]        # 427973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d01b:	call   404090 <__assert_fail@plt>
  41d020:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d027:	jmp    41d100 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d02c:	cmp    DWORD PTR [rbp-0x10],0x0
  41d030:	je     41d0f9 <flatcc_builder_table_add_union_vector@@Base+0x189>
  41d036:	mov    rdi,QWORD PTR [rbp-0x18]
  41d03a:	mov    eax,DWORD PTR [rbp-0x1c]
  41d03d:	sub    eax,0x1
  41d040:	mov    esi,eax
  41d042:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  41d047:	mov    QWORD PTR [rbp-0x28],rax
  41d04b:	cmp    QWORD PTR [rbp-0x28],0x0
  41d050:	jne    41d091 <flatcc_builder_table_add_union_vector@@Base+0x121>
  41d056:	cmp    QWORD PTR [rbp-0x28],0x0
  41d05b:	je     41d066 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  41d061:	jmp    41d085 <flatcc_builder_table_add_union_vector@@Base+0x115>
  41d066:	lea    rdi,[rip+0xa8f0]        # 42795d <flatcc_builder_padding_base@@Base+0xdad>
  41d06d:	lea    rsi,[rip+0x9d4e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d074:	mov    edx,0x604
  41d079:	lea    rcx,[rip+0xa8f3]        # 427973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d080:	call   404090 <__assert_fail@plt>
  41d085:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d08c:	jmp    41d100 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d091:	mov    eax,DWORD PTR [rbp-0x10]
  41d094:	mov    rcx,QWORD PTR [rbp-0x28]
  41d098:	mov    DWORD PTR [rcx],eax
  41d09a:	mov    rdi,QWORD PTR [rbp-0x18]
  41d09e:	mov    esi,DWORD PTR [rbp-0x1c]
  41d0a1:	call   41cd30 <flatcc_builder_table_add_offset@@Base>
  41d0a6:	mov    QWORD PTR [rbp-0x28],rax
  41d0aa:	cmp    QWORD PTR [rbp-0x28],0x0
  41d0af:	jne    41d0f0 <flatcc_builder_table_add_union_vector@@Base+0x180>
  41d0b5:	cmp    QWORD PTR [rbp-0x28],0x0
  41d0ba:	je     41d0c5 <flatcc_builder_table_add_union_vector@@Base+0x155>
  41d0c0:	jmp    41d0e4 <flatcc_builder_table_add_union_vector@@Base+0x174>
  41d0c5:	lea    rdi,[rip+0xa891]        # 42795d <flatcc_builder_padding_base@@Base+0xdad>
  41d0cc:	lea    rsi,[rip+0x9cef]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d0d3:	mov    edx,0x608
  41d0d8:	lea    rcx,[rip+0xa894]        # 427973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d0df:	call   404090 <__assert_fail@plt>
  41d0e4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d0eb:	jmp    41d100 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d0f0:	mov    eax,DWORD PTR [rbp-0xc]
  41d0f3:	mov    rcx,QWORD PTR [rbp-0x28]
  41d0f7:	mov    DWORD PTR [rcx],eax
  41d0f9:	mov    DWORD PTR [rbp-0x4],0x0
  41d100:	mov    eax,DWORD PTR [rbp-0x4]
  41d103:	add    rsp,0x30
  41d107:	pop    rbp
  41d108:	ret    
  41d109:	nop    DWORD PTR [rax+0x0]

000000000041d110 <flatcc_builder_create_union_vector@@Base>:
  41d110:	push   rbp
  41d111:	mov    rbp,rsp
  41d114:	sub    rsp,0x40
  41d118:	xor    eax,eax
  41d11a:	mov    QWORD PTR [rbp-0x10],rdi
  41d11e:	mov    QWORD PTR [rbp-0x18],rsi
  41d122:	mov    QWORD PTR [rbp-0x20],rdx
  41d126:	lea    rcx,[rbp-0x8]
  41d12a:	mov    rdi,rcx
  41d12d:	mov    esi,eax
  41d12f:	mov    edx,0x8
  41d134:	call   4040a0 <memset@plt>
  41d139:	mov    rdi,QWORD PTR [rbp-0x10]
  41d13d:	call   41b1d0 <flatcc_builder_start_offset_vector@@Base>
  41d142:	cmp    eax,0x0
  41d145:	je     41d150 <flatcc_builder_create_union_vector@@Base+0x40>
  41d14b:	jmp    41d225 <flatcc_builder_create_union_vector@@Base+0x115>
  41d150:	mov    rdi,QWORD PTR [rbp-0x10]
  41d154:	mov    rsi,QWORD PTR [rbp-0x20]
  41d158:	call   41a9c0 <flatcc_builder_extend_offset_vector@@Base>
  41d15d:	xor    ecx,ecx
  41d15f:	mov    edx,ecx
  41d161:	cmp    rdx,rax
  41d164:	jne    41d16f <flatcc_builder_create_union_vector@@Base+0x5f>
  41d16a:	jmp    41d225 <flatcc_builder_create_union_vector@@Base+0x115>
  41d16f:	mov    rdi,QWORD PTR [rbp-0x10]
  41d173:	mov    rax,QWORD PTR [rbp-0x20]
  41d177:	shl    rax,0x0
  41d17b:	mov    esi,eax
  41d17d:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41d182:	xor    ecx,ecx
  41d184:	mov    edx,ecx
  41d186:	mov    QWORD PTR [rbp-0x28],rax
  41d18a:	cmp    rdx,rax
  41d18d:	jne    41d198 <flatcc_builder_create_union_vector@@Base+0x88>
  41d193:	jmp    41d225 <flatcc_builder_create_union_vector@@Base+0x115>
  41d198:	mov    rdi,QWORD PTR [rbp-0x10]
  41d19c:	call   41cb50 <flatcc_builder_offset_vector_edit@@Base>
  41d1a1:	mov    QWORD PTR [rbp-0x30],rax
  41d1a5:	mov    QWORD PTR [rbp-0x38],0x0
  41d1ad:	mov    rax,QWORD PTR [rbp-0x38]
  41d1b1:	cmp    rax,QWORD PTR [rbp-0x20]
  41d1b5:	jae    41d1fb <flatcc_builder_create_union_vector@@Base+0xeb>
  41d1bb:	mov    rax,QWORD PTR [rbp-0x18]
  41d1bf:	mov    rcx,QWORD PTR [rbp-0x38]
  41d1c3:	mov    dl,BYTE PTR [rax+rcx*8]
  41d1c6:	mov    rax,QWORD PTR [rbp-0x28]
  41d1ca:	mov    rcx,QWORD PTR [rbp-0x38]
  41d1ce:	mov    BYTE PTR [rax+rcx*1],dl
  41d1d1:	mov    rax,QWORD PTR [rbp-0x18]
  41d1d5:	mov    rcx,QWORD PTR [rbp-0x38]
  41d1d9:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  41d1dd:	mov    rax,QWORD PTR [rbp-0x30]
  41d1e1:	mov    rcx,QWORD PTR [rbp-0x38]
  41d1e5:	mov    DWORD PTR [rax+rcx*4],esi
  41d1e8:	mov    rax,QWORD PTR [rbp-0x38]
  41d1ec:	add    rax,0x1
  41d1f2:	mov    QWORD PTR [rbp-0x38],rax
  41d1f6:	jmp    41d1ad <flatcc_builder_create_union_vector@@Base+0x9d>
  41d1fb:	mov    rdi,QWORD PTR [rbp-0x10]
  41d1ff:	mov    rsi,QWORD PTR [rbp-0x28]
  41d203:	mov    rdx,QWORD PTR [rbp-0x30]
  41d207:	mov    rcx,QWORD PTR [rbp-0x20]
  41d20b:	call   41d230 <flatcc_builder_create_union_vector_direct@@Base>
  41d210:	mov    QWORD PTR [rbp-0x40],rax
  41d214:	mov    rax,QWORD PTR [rbp-0x40]
  41d218:	mov    QWORD PTR [rbp-0x8],rax
  41d21c:	mov    rdi,QWORD PTR [rbp-0x10]
  41d220:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41d225:	mov    rax,QWORD PTR [rbp-0x8]
  41d229:	add    rsp,0x40
  41d22d:	pop    rbp
  41d22e:	ret    
  41d22f:	nop

000000000041d230 <flatcc_builder_create_union_vector_direct@@Base>:
  41d230:	push   rbp
  41d231:	mov    rbp,rsp
  41d234:	sub    rsp,0x30
  41d238:	xor    eax,eax
  41d23a:	mov    QWORD PTR [rbp-0x10],rdi
  41d23e:	mov    QWORD PTR [rbp-0x18],rsi
  41d242:	mov    QWORD PTR [rbp-0x20],rdx
  41d246:	mov    QWORD PTR [rbp-0x28],rcx
  41d24a:	lea    rcx,[rbp-0x8]
  41d24e:	mov    rdi,rcx
  41d251:	mov    esi,eax
  41d253:	mov    edx,0x8
  41d258:	call   4040a0 <memset@plt>
  41d25d:	mov    rdi,QWORD PTR [rbp-0x10]
  41d261:	mov    rsi,QWORD PTR [rbp-0x20]
  41d265:	mov    rdx,QWORD PTR [rbp-0x28]
  41d269:	mov    rcx,QWORD PTR [rbp-0x18]
  41d26d:	call   41c760 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41d272:	xor    r8d,r8d
  41d275:	mov    DWORD PTR [rbp-0x4],eax
  41d278:	cmp    r8d,eax
  41d27b:	jne    41d286 <flatcc_builder_create_union_vector_direct@@Base+0x56>
  41d281:	jmp    41d2c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  41d286:	mov    rdi,QWORD PTR [rbp-0x10]
  41d28a:	mov    rsi,QWORD PTR [rbp-0x18]
  41d28e:	mov    rdx,QWORD PTR [rbp-0x28]
  41d292:	mov    ecx,0x1
  41d297:	mov    r8d,0x1
  41d29d:	mov    r9d,0xffffffff
  41d2a3:	call   41c3f0 <flatcc_builder_create_vector@@Base>
  41d2a8:	xor    r8d,r8d
  41d2ab:	mov    DWORD PTR [rbp-0x8],eax
  41d2ae:	cmp    r8d,eax
  41d2b1:	jne    41d2bc <flatcc_builder_create_union_vector_direct@@Base+0x8c>
  41d2b7:	jmp    41d2c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  41d2bc:	jmp    41d2c1 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  41d2c1:	mov    rax,QWORD PTR [rbp-0x8]
  41d2c5:	add    rsp,0x30
  41d2c9:	pop    rbp
  41d2ca:	ret    
  41d2cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d2d0 <flatcc_builder_start_union_vector@@Base>:
  41d2d0:	push   rbp
  41d2d1:	mov    rbp,rsp
  41d2d4:	sub    rsp,0x10
  41d2d8:	mov    QWORD PTR [rbp-0x10],rdi
  41d2dc:	mov    rdi,QWORD PTR [rbp-0x10]
  41d2e0:	mov    esi,0x4
  41d2e5:	call   41a080 <flatcc_builder_start_buffer@@Base+0x170>
  41d2ea:	cmp    eax,0x0
  41d2ed:	je     41d2ff <flatcc_builder_start_union_vector@@Base+0x2f>
  41d2f3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d2fa:	jmp    41d340 <flatcc_builder_start_union_vector@@Base+0x70>
  41d2ff:	mov    rax,QWORD PTR [rbp-0x10]
  41d303:	mov    rax,QWORD PTR [rax+0x30]
  41d307:	mov    DWORD PTR [rax+0x10],0x8
  41d30e:	mov    rax,QWORD PTR [rbp-0x10]
  41d312:	mov    rax,QWORD PTR [rax+0x30]
  41d316:	mov    DWORD PTR [rax+0x14],0x0
  41d31d:	mov    rax,QWORD PTR [rbp-0x10]
  41d321:	mov    rax,QWORD PTR [rax+0x30]
  41d325:	mov    WORD PTR [rax+0xe],0x7
  41d32b:	mov    rdi,QWORD PTR [rbp-0x10]
  41d32f:	mov    esi,0xfffffffc
  41d334:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41d339:	mov    DWORD PTR [rbp-0x4],0x0
  41d340:	mov    eax,DWORD PTR [rbp-0x4]
  41d343:	add    rsp,0x10
  41d347:	pop    rbp
  41d348:	ret    
  41d349:	nop    DWORD PTR [rax+0x0]

000000000041d350 <flatcc_builder_end_union_vector@@Base>:
  41d350:	push   rbp
  41d351:	mov    rbp,rsp
  41d354:	sub    rsp,0x40
  41d358:	xor    esi,esi
  41d35a:	mov    QWORD PTR [rbp-0x10],rdi
  41d35e:	lea    rax,[rbp-0x8]
  41d362:	mov    rdi,rax
  41d365:	mov    edx,0x8
  41d36a:	call   4040a0 <memset@plt>
  41d36f:	mov    rax,QWORD PTR [rbp-0x10]
  41d373:	mov    rax,QWORD PTR [rax+0x30]
  41d377:	movzx  ecx,WORD PTR [rax+0xe]
  41d37b:	cmp    ecx,0x7
  41d37e:	jne    41d389 <flatcc_builder_end_union_vector@@Base+0x39>
  41d384:	jmp    41d3a8 <flatcc_builder_end_union_vector@@Base+0x58>
  41d389:	lea    rdi,[rip+0xa66e]        # 4279fe <flatcc_builder_padding_base@@Base+0xe4e>
  41d390:	lea    rsi,[rip+0x9a2b]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d397:	mov    edx,0x651
  41d39c:	lea    rcx,[rip+0xa68d]        # 427a30 <flatcc_builder_padding_base@@Base+0xe80>
  41d3a3:	call   404090 <__assert_fail@plt>
  41d3a8:	mov    rdi,QWORD PTR [rbp-0x10]
  41d3ac:	call   41d490 <flatcc_builder_union_vector_count@@Base>
  41d3b1:	mov    QWORD PTR [rbp-0x38],rax
  41d3b5:	mov    rdi,QWORD PTR [rbp-0x10]
  41d3b9:	imul   rax,QWORD PTR [rbp-0x38],0x5
  41d3c1:	mov    esi,eax
  41d3c3:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41d3c8:	xor    ecx,ecx
  41d3ca:	mov    edx,ecx
  41d3cc:	mov    QWORD PTR [rbp-0x28],rax
  41d3d0:	cmp    rdx,rax
  41d3d3:	jne    41d3de <flatcc_builder_end_union_vector@@Base+0x8e>
  41d3d9:	jmp    41d47e <flatcc_builder_end_union_vector@@Base+0x12e>
  41d3de:	mov    rax,QWORD PTR [rbp-0x28]
  41d3e2:	mov    rcx,QWORD PTR [rbp-0x38]
  41d3e6:	shl    rcx,0x2
  41d3ea:	add    rax,rcx
  41d3ed:	mov    QWORD PTR [rbp-0x18],rax
  41d3f1:	mov    rdi,QWORD PTR [rbp-0x10]
  41d3f5:	call   41d4b0 <flatcc_builder_union_vector_edit@@Base>
  41d3fa:	mov    QWORD PTR [rbp-0x20],rax
  41d3fe:	mov    QWORD PTR [rbp-0x30],0x0
  41d406:	mov    rax,QWORD PTR [rbp-0x30]
  41d40a:	cmp    rax,QWORD PTR [rbp-0x38]
  41d40e:	jae    41d454 <flatcc_builder_end_union_vector@@Base+0x104>
  41d414:	mov    rax,QWORD PTR [rbp-0x20]
  41d418:	mov    rcx,QWORD PTR [rbp-0x30]
  41d41c:	mov    dl,BYTE PTR [rax+rcx*8]
  41d41f:	mov    rax,QWORD PTR [rbp-0x18]
  41d423:	mov    rcx,QWORD PTR [rbp-0x30]
  41d427:	mov    BYTE PTR [rax+rcx*1],dl
  41d42a:	mov    rax,QWORD PTR [rbp-0x20]
  41d42e:	mov    rcx,QWORD PTR [rbp-0x30]
  41d432:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  41d436:	mov    rax,QWORD PTR [rbp-0x28]
  41d43a:	mov    rcx,QWORD PTR [rbp-0x30]
  41d43e:	mov    DWORD PTR [rax+rcx*4],esi
  41d441:	mov    rax,QWORD PTR [rbp-0x30]
  41d445:	add    rax,0x1
  41d44b:	mov    QWORD PTR [rbp-0x30],rax
  41d44f:	jmp    41d406 <flatcc_builder_end_union_vector@@Base+0xb6>
  41d454:	mov    rdi,QWORD PTR [rbp-0x10]
  41d458:	mov    rsi,QWORD PTR [rbp-0x18]
  41d45c:	mov    rdx,QWORD PTR [rbp-0x28]
  41d460:	mov    rcx,QWORD PTR [rbp-0x38]
  41d464:	call   41d230 <flatcc_builder_create_union_vector_direct@@Base>
  41d469:	mov    QWORD PTR [rbp-0x40],rax
  41d46d:	mov    rax,QWORD PTR [rbp-0x40]
  41d471:	mov    QWORD PTR [rbp-0x8],rax
  41d475:	mov    rdi,QWORD PTR [rbp-0x10]
  41d479:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41d47e:	mov    rax,QWORD PTR [rbp-0x8]
  41d482:	add    rsp,0x40
  41d486:	pop    rbp
  41d487:	ret    
  41d488:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d490 <flatcc_builder_union_vector_count@@Base>:
  41d490:	push   rbp
  41d491:	mov    rbp,rsp
  41d494:	mov    QWORD PTR [rbp-0x8],rdi
  41d498:	mov    rax,QWORD PTR [rbp-0x8]
  41d49c:	mov    rax,QWORD PTR [rax+0x30]
  41d4a0:	mov    ecx,DWORD PTR [rax+0x14]
  41d4a3:	mov    eax,ecx
  41d4a5:	pop    rbp
  41d4a6:	ret    
  41d4a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d4b0 <flatcc_builder_union_vector_edit@@Base>:
  41d4b0:	push   rbp
  41d4b1:	mov    rbp,rsp
  41d4b4:	mov    QWORD PTR [rbp-0x8],rdi
  41d4b8:	mov    rax,QWORD PTR [rbp-0x8]
  41d4bc:	mov    rax,QWORD PTR [rax+0x18]
  41d4c0:	pop    rbp
  41d4c1:	ret    
  41d4c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4cc:	nop    DWORD PTR [rax+0x0]

000000000041d4d0 <flatcc_builder_extend_union_vector@@Base>:
  41d4d0:	push   rbp
  41d4d1:	mov    rbp,rsp
  41d4d4:	sub    rsp,0x20
  41d4d8:	mov    QWORD PTR [rbp-0x10],rdi
  41d4dc:	mov    QWORD PTR [rbp-0x18],rsi
  41d4e0:	mov    rdi,QWORD PTR [rbp-0x10]
  41d4e4:	mov    rax,QWORD PTR [rbp-0x18]
  41d4e8:	mov    esi,eax
  41d4ea:	mov    edx,0x1fffffff
  41d4ef:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41d4f4:	cmp    eax,0x0
  41d4f7:	je     41d50a <flatcc_builder_extend_union_vector@@Base+0x3a>
  41d4fd:	mov    QWORD PTR [rbp-0x8],0x0
  41d505:	jmp    41d525 <flatcc_builder_extend_union_vector@@Base+0x55>
  41d50a:	mov    rdi,QWORD PTR [rbp-0x10]
  41d50e:	mov    rax,QWORD PTR [rbp-0x18]
  41d512:	mov    eax,eax
  41d514:	mov    ecx,eax
  41d516:	shl    rcx,0x3
  41d51a:	mov    esi,ecx
  41d51c:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41d521:	mov    QWORD PTR [rbp-0x8],rax
  41d525:	mov    rax,QWORD PTR [rbp-0x8]
  41d529:	add    rsp,0x20
  41d52d:	pop    rbp
  41d52e:	ret    
  41d52f:	nop

000000000041d530 <flatcc_builder_truncate_union_vector@@Base>:
  41d530:	push   rbp
  41d531:	mov    rbp,rsp
  41d534:	sub    rsp,0x20
  41d538:	mov    QWORD PTR [rbp-0x10],rdi
  41d53c:	mov    QWORD PTR [rbp-0x18],rsi
  41d540:	mov    rax,QWORD PTR [rbp-0x10]
  41d544:	mov    rax,QWORD PTR [rax+0x30]
  41d548:	movzx  ecx,WORD PTR [rax+0xe]
  41d54c:	cmp    ecx,0x7
  41d54f:	jne    41d55a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  41d555:	jmp    41d579 <flatcc_builder_truncate_union_vector@@Base+0x49>
  41d55a:	lea    rdi,[rip+0xa49d]        # 4279fe <flatcc_builder_padding_base@@Base+0xe4e>
  41d561:	lea    rsi,[rip+0x985a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d568:	mov    edx,0x681
  41d56d:	lea    rcx,[rip+0xa50f]        # 427a83 <flatcc_builder_padding_base@@Base+0xed3>
  41d574:	call   404090 <__assert_fail@plt>
  41d579:	mov    rax,QWORD PTR [rbp-0x10]
  41d57d:	mov    rax,QWORD PTR [rax+0x30]
  41d581:	mov    ecx,DWORD PTR [rax+0x14]
  41d584:	mov    rax,QWORD PTR [rbp-0x18]
  41d588:	cmp    ecx,eax
  41d58a:	jae    41d5d7 <flatcc_builder_truncate_union_vector@@Base+0xa7>
  41d590:	mov    rax,QWORD PTR [rbp-0x10]
  41d594:	mov    rax,QWORD PTR [rax+0x30]
  41d598:	mov    ecx,DWORD PTR [rax+0x14]
  41d59b:	mov    rax,QWORD PTR [rbp-0x18]
  41d59f:	cmp    ecx,eax
  41d5a1:	jb     41d5ac <flatcc_builder_truncate_union_vector@@Base+0x7c>
  41d5a7:	jmp    41d5cb <flatcc_builder_truncate_union_vector@@Base+0x9b>
  41d5ac:	lea    rdi,[rip+0x9eaf]        # 427462 <flatcc_builder_padding_base@@Base+0x8b2>
  41d5b3:	lea    rsi,[rip+0x9808]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d5ba:	mov    edx,0x682
  41d5bf:	lea    rcx,[rip+0xa4bd]        # 427a83 <flatcc_builder_padding_base@@Base+0xed3>
  41d5c6:	call   404090 <__assert_fail@plt>
  41d5cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d5d2:	jmp    41d60f <flatcc_builder_truncate_union_vector@@Base+0xdf>
  41d5d7:	mov    rax,QWORD PTR [rbp-0x18]
  41d5db:	mov    rcx,QWORD PTR [rbp-0x10]
  41d5df:	mov    rcx,QWORD PTR [rcx+0x30]
  41d5e3:	mov    edx,DWORD PTR [rcx+0x14]
  41d5e6:	sub    edx,eax
  41d5e8:	mov    DWORD PTR [rcx+0x14],edx
  41d5eb:	mov    rdi,QWORD PTR [rbp-0x10]
  41d5ef:	mov    rcx,QWORD PTR [rbp-0x10]
  41d5f3:	mov    rcx,QWORD PTR [rcx+0x30]
  41d5f7:	mov    eax,DWORD PTR [rcx+0x10]
  41d5fa:	mov    rcx,QWORD PTR [rbp-0x18]
  41d5fe:	imul   eax,ecx
  41d601:	mov    esi,eax
  41d603:	call   41aec0 <flatcc_builder_truncate_vector@@Base+0xf0>
  41d608:	mov    DWORD PTR [rbp-0x4],0x0
  41d60f:	mov    eax,DWORD PTR [rbp-0x4]
  41d612:	add    rsp,0x20
  41d616:	pop    rbp
  41d617:	ret    
  41d618:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d620 <flatcc_builder_union_vector_push@@Base>:
  41d620:	push   rbp
  41d621:	mov    rbp,rsp
  41d624:	sub    rsp,0x20
  41d628:	mov    QWORD PTR [rbp-0x10],rsi
  41d62c:	mov    QWORD PTR [rbp-0x18],rdi
  41d630:	mov    rax,QWORD PTR [rbp-0x18]
  41d634:	mov    rax,QWORD PTR [rax+0x30]
  41d638:	movzx  ecx,WORD PTR [rax+0xe]
  41d63c:	cmp    ecx,0x7
  41d63f:	jne    41d64a <flatcc_builder_union_vector_push@@Base+0x2a>
  41d645:	jmp    41d669 <flatcc_builder_union_vector_push@@Base+0x49>
  41d64a:	lea    rdi,[rip+0xa3ad]        # 4279fe <flatcc_builder_padding_base@@Base+0xe4e>
  41d651:	lea    rsi,[rip+0x976a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d658:	mov    edx,0x68d
  41d65d:	lea    rcx,[rip+0xa464]        # 427ac8 <flatcc_builder_padding_base@@Base+0xf18>
  41d664:	call   404090 <__assert_fail@plt>
  41d669:	mov    rax,QWORD PTR [rbp-0x18]
  41d66d:	mov    rax,QWORD PTR [rax+0x30]
  41d671:	mov    ecx,DWORD PTR [rax+0x14]
  41d674:	mov    eax,ecx
  41d676:	cmp    rax,0x1fffffff
  41d67c:	jne    41d68f <flatcc_builder_union_vector_push@@Base+0x6f>
  41d682:	mov    QWORD PTR [rbp-0x8],0x0
  41d68a:	jmp    41d6df <flatcc_builder_union_vector_push@@Base+0xbf>
  41d68f:	mov    rax,QWORD PTR [rbp-0x18]
  41d693:	mov    rax,QWORD PTR [rax+0x30]
  41d697:	mov    ecx,DWORD PTR [rax+0x14]
  41d69a:	add    ecx,0x1
  41d69d:	mov    DWORD PTR [rax+0x14],ecx
  41d6a0:	mov    rdi,QWORD PTR [rbp-0x18]
  41d6a4:	mov    esi,0x8
  41d6a9:	call   41a550 <flatcc_builder_start_struct@@Base+0xf0>
  41d6ae:	xor    ecx,ecx
  41d6b0:	mov    edx,ecx
  41d6b2:	mov    QWORD PTR [rbp-0x20],rax
  41d6b6:	cmp    rdx,rax
  41d6b9:	jne    41d6cc <flatcc_builder_union_vector_push@@Base+0xac>
  41d6bf:	mov    QWORD PTR [rbp-0x8],0x0
  41d6c7:	jmp    41d6df <flatcc_builder_union_vector_push@@Base+0xbf>
  41d6cc:	mov    rax,QWORD PTR [rbp-0x20]
  41d6d0:	mov    rcx,QWORD PTR [rbp-0x10]
  41d6d4:	mov    QWORD PTR [rax],rcx
  41d6d7:	mov    rax,QWORD PTR [rbp-0x20]
  41d6db:	mov    QWORD PTR [rbp-0x8],rax
  41d6df:	mov    rax,QWORD PTR [rbp-0x8]
  41d6e3:	add    rsp,0x20
  41d6e7:	pop    rbp
  41d6e8:	ret    
  41d6e9:	nop    DWORD PTR [rax+0x0]

000000000041d6f0 <flatcc_builder_append_union_vector@@Base>:
  41d6f0:	push   rbp
  41d6f1:	mov    rbp,rsp
  41d6f4:	sub    rsp,0x20
  41d6f8:	mov    QWORD PTR [rbp-0x10],rdi
  41d6fc:	mov    QWORD PTR [rbp-0x18],rsi
  41d700:	mov    QWORD PTR [rbp-0x20],rdx
  41d704:	mov    rax,QWORD PTR [rbp-0x10]
  41d708:	mov    rax,QWORD PTR [rax+0x30]
  41d70c:	movzx  ecx,WORD PTR [rax+0xe]
  41d710:	cmp    ecx,0x7
  41d713:	jne    41d71e <flatcc_builder_append_union_vector@@Base+0x2e>
  41d719:	jmp    41d73d <flatcc_builder_append_union_vector@@Base+0x4d>
  41d71e:	lea    rdi,[rip+0xa2d9]        # 4279fe <flatcc_builder_padding_base@@Base+0xe4e>
  41d725:	lea    rsi,[rip+0x9696]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d72c:	mov    edx,0x69c
  41d731:	lea    rcx,[rip+0xa3fd]        # 427b35 <flatcc_builder_padding_base@@Base+0xf85>
  41d738:	call   404090 <__assert_fail@plt>
  41d73d:	mov    rdi,QWORD PTR [rbp-0x10]
  41d741:	mov    rax,QWORD PTR [rbp-0x20]
  41d745:	mov    esi,eax
  41d747:	mov    edx,0x1fffffff
  41d74c:	call   41a710 <flatcc_builder_extend_vector@@Base+0x70>
  41d751:	cmp    eax,0x0
  41d754:	je     41d767 <flatcc_builder_append_union_vector@@Base+0x77>
  41d75a:	mov    QWORD PTR [rbp-0x8],0x0
  41d762:	jmp    41d787 <flatcc_builder_append_union_vector@@Base+0x97>
  41d767:	mov    rdi,QWORD PTR [rbp-0x10]
  41d76b:	mov    rax,QWORD PTR [rbp-0x18]
  41d76f:	mov    rcx,QWORD PTR [rbp-0x20]
  41d773:	mov    ecx,ecx
  41d775:	mov    edx,ecx
  41d777:	shl    rdx,0x3
  41d77b:	mov    rsi,rax
  41d77e:	call   41a8b0 <flatcc_builder_vector_push@@Base+0xf0>
  41d783:	mov    QWORD PTR [rbp-0x8],rax
  41d787:	mov    rax,QWORD PTR [rbp-0x8]
  41d78b:	add    rsp,0x20
  41d78f:	pop    rbp
  41d790:	ret    
  41d791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d79b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d7a0 <flatcc_builder_create_string@@Base>:
  41d7a0:	push   rbp
  41d7a1:	mov    rbp,rsp
  41d7a4:	sub    rsp,0xc0
  41d7ab:	mov    QWORD PTR [rbp-0x10],rdi
  41d7af:	mov    QWORD PTR [rbp-0x18],rsi
  41d7b3:	mov    QWORD PTR [rbp-0x20],rdx
  41d7b7:	mov    eax,0xffffffff
  41d7bc:	cmp    QWORD PTR [rbp-0x20],rax
  41d7c0:	jbe    41d7d2 <flatcc_builder_create_string@@Base+0x32>
  41d7c6:	mov    DWORD PTR [rbp-0x4],0x0
  41d7cd:	jmp    41d96e <flatcc_builder_create_string@@Base+0x1ce>
  41d7d2:	mov    rax,QWORD PTR [rbp-0x20]
  41d7d6:	mov    edi,eax
  41d7d8:	call   419800 <flatcc_builder_embed_buffer@@Base+0x430>
  41d7dd:	mov    DWORD PTR [rbp-0x28],eax
  41d7e0:	mov    rdi,QWORD PTR [rbp-0x10]
  41d7e4:	mov    rcx,QWORD PTR [rbp-0x20]
  41d7e8:	add    ecx,0x1
  41d7eb:	mov    esi,ecx
  41d7ed:	mov    edx,0x4
  41d7f2:	call   4197d0 <flatcc_builder_embed_buffer@@Base+0x400>
  41d7f7:	add    eax,0x1
  41d7fa:	mov    DWORD PTR [rbp-0x24],eax
  41d7fd:	mov    QWORD PTR [rbp-0xb8],0x0
  41d808:	mov    DWORD PTR [rbp-0xb0],0x0
  41d812:	mov    rdi,QWORD PTR [rbp-0xb8]
  41d819:	add    rdi,0x4
  41d820:	mov    QWORD PTR [rbp-0xb8],rdi
  41d827:	lea    rdi,[rbp-0x28]
  41d82b:	lea    r8,[rbp-0xb8]
  41d832:	mov    r9,r8
  41d835:	add    r9,0x10
  41d83c:	movsxd r10,DWORD PTR [rbp-0xb0]
  41d843:	shl    r10,0x4
  41d847:	add    r9,r10
  41d84a:	mov    QWORD PTR [r9],rdi
  41d84d:	add    r8,0x10
  41d854:	movsxd rdi,DWORD PTR [rbp-0xb0]
  41d85b:	shl    rdi,0x4
  41d85f:	add    r8,rdi
  41d862:	mov    QWORD PTR [r8+0x8],0x4
  41d86a:	mov    eax,DWORD PTR [rbp-0xb0]
  41d870:	add    eax,0x1
  41d873:	mov    DWORD PTR [rbp-0xb0],eax
  41d879:	cmp    QWORD PTR [rbp-0x20],0x0
  41d87e:	jbe    41d8e8 <flatcc_builder_create_string@@Base+0x148>
  41d884:	mov    rax,QWORD PTR [rbp-0x20]
  41d888:	add    rax,QWORD PTR [rbp-0xb8]
  41d88f:	mov    QWORD PTR [rbp-0xb8],rax
  41d896:	mov    rax,QWORD PTR [rbp-0x18]
  41d89a:	lea    rcx,[rbp-0xb8]
  41d8a1:	mov    rdx,rcx
  41d8a4:	add    rdx,0x10
  41d8ab:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41d8b2:	shl    rsi,0x4
  41d8b6:	add    rdx,rsi
  41d8b9:	mov    QWORD PTR [rdx],rax
  41d8bc:	mov    rax,QWORD PTR [rbp-0x20]
  41d8c0:	add    rcx,0x10
  41d8c7:	movsxd rdx,DWORD PTR [rbp-0xb0]
  41d8ce:	shl    rdx,0x4
  41d8d2:	add    rcx,rdx
  41d8d5:	mov    QWORD PTR [rcx+0x8],rax
  41d8d9:	mov    edi,DWORD PTR [rbp-0xb0]
  41d8df:	add    edi,0x1
  41d8e2:	mov    DWORD PTR [rbp-0xb0],edi
  41d8e8:	cmp    DWORD PTR [rbp-0x24],0x0
  41d8ec:	jbe    41d95b <flatcc_builder_create_string@@Base+0x1bb>
  41d8f2:	lea    rax,[rip+0x92b7]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41d8f9:	mov    ecx,DWORD PTR [rbp-0x24]
  41d8fc:	mov    edx,ecx
  41d8fe:	add    rdx,QWORD PTR [rbp-0xb8]
  41d905:	mov    QWORD PTR [rbp-0xb8],rdx
  41d90c:	lea    rdx,[rbp-0xb8]
  41d913:	mov    rsi,rdx
  41d916:	add    rsi,0x10
  41d91d:	movsxd rdi,DWORD PTR [rbp-0xb0]
  41d924:	shl    rdi,0x4
  41d928:	add    rsi,rdi
  41d92b:	mov    QWORD PTR [rsi],rax
  41d92e:	mov    ecx,DWORD PTR [rbp-0x24]
  41d931:	mov    eax,ecx
  41d933:	add    rdx,0x10
  41d93a:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41d941:	shl    rsi,0x4
  41d945:	add    rdx,rsi
  41d948:	mov    QWORD PTR [rdx+0x8],rax
  41d94c:	mov    ecx,DWORD PTR [rbp-0xb0]
  41d952:	add    ecx,0x1
  41d955:	mov    DWORD PTR [rbp-0xb0],ecx
  41d95b:	mov    rdi,QWORD PTR [rbp-0x10]
  41d95f:	lea    rsi,[rbp-0xb8]
  41d966:	call   419810 <flatcc_builder_embed_buffer@@Base+0x440>
  41d96b:	mov    DWORD PTR [rbp-0x4],eax
  41d96e:	mov    eax,DWORD PTR [rbp-0x4]
  41d971:	add    rsp,0xc0
  41d978:	pop    rbp
  41d979:	ret    
  41d97a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d980 <flatcc_builder_create_string_str@@Base>:
  41d980:	push   rbp
  41d981:	mov    rbp,rsp
  41d984:	sub    rsp,0x20
  41d988:	mov    QWORD PTR [rbp-0x8],rdi
  41d98c:	mov    QWORD PTR [rbp-0x10],rsi
  41d990:	mov    rdi,QWORD PTR [rbp-0x8]
  41d994:	mov    rsi,QWORD PTR [rbp-0x10]
  41d998:	mov    rax,QWORD PTR [rbp-0x10]
  41d99c:	mov    QWORD PTR [rbp-0x18],rdi
  41d9a0:	mov    rdi,rax
  41d9a3:	mov    QWORD PTR [rbp-0x20],rsi
  41d9a7:	call   404060 <strlen@plt>
  41d9ac:	mov    rdi,QWORD PTR [rbp-0x18]
  41d9b0:	mov    rsi,QWORD PTR [rbp-0x20]
  41d9b4:	mov    rdx,rax
  41d9b7:	call   41d7a0 <flatcc_builder_create_string@@Base>
  41d9bc:	add    rsp,0x20
  41d9c0:	pop    rbp
  41d9c1:	ret    
  41d9c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d9cc:	nop    DWORD PTR [rax+0x0]

000000000041d9d0 <flatcc_builder_create_string_strn@@Base>:
  41d9d0:	push   rbp
  41d9d1:	mov    rbp,rsp
  41d9d4:	sub    rsp,0x30
  41d9d8:	mov    QWORD PTR [rbp-0x8],rdi
  41d9dc:	mov    QWORD PTR [rbp-0x10],rsi
  41d9e0:	mov    QWORD PTR [rbp-0x18],rdx
  41d9e4:	mov    rdi,QWORD PTR [rbp-0x8]
  41d9e8:	mov    rsi,QWORD PTR [rbp-0x10]
  41d9ec:	mov    rax,QWORD PTR [rbp-0x10]
  41d9f0:	mov    rcx,QWORD PTR [rbp-0x18]
  41d9f4:	mov    QWORD PTR [rbp-0x20],rdi
  41d9f8:	mov    rdi,rax
  41d9fb:	mov    QWORD PTR [rbp-0x28],rsi
  41d9ff:	mov    rsi,rcx
  41da02:	call   41ad70 <flatcc_builder_append_string_strn@@Base+0x50>
  41da07:	mov    rdi,QWORD PTR [rbp-0x20]
  41da0b:	mov    rsi,QWORD PTR [rbp-0x28]
  41da0f:	mov    rdx,rax
  41da12:	call   41d7a0 <flatcc_builder_create_string@@Base>
  41da17:	add    rsp,0x30
  41da1b:	pop    rbp
  41da1c:	ret    
  41da1d:	nop    DWORD PTR [rax]

000000000041da20 <flatcc_builder_end_string@@Base>:
  41da20:	push   rbp
  41da21:	mov    rbp,rsp
  41da24:	sub    rsp,0x20
  41da28:	mov    QWORD PTR [rbp-0x10],rdi
  41da2c:	mov    rax,QWORD PTR [rbp-0x10]
  41da30:	mov    rax,QWORD PTR [rax+0x30]
  41da34:	movzx  ecx,WORD PTR [rax+0xe]
  41da38:	cmp    ecx,0x6
  41da3b:	jne    41da46 <flatcc_builder_end_string@@Base+0x26>
  41da41:	jmp    41da65 <flatcc_builder_end_string@@Base+0x45>
  41da46:	lea    rdi,[rip+0x98b4]        # 427301 <flatcc_builder_padding_base@@Base+0x751>
  41da4d:	lea    rsi,[rip+0x936e]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41da54:	mov    edx,0x6c4
  41da59:	lea    rcx,[rip+0xa154]        # 427bb4 <flatcc_builder_padding_base@@Base+0x1004>
  41da60:	call   404090 <__assert_fail@plt>
  41da65:	mov    rax,QWORD PTR [rbp-0x10]
  41da69:	mov    rax,QWORD PTR [rax+0x30]
  41da6d:	mov    ecx,DWORD PTR [rax+0x14]
  41da70:	mov    rax,QWORD PTR [rbp-0x10]
  41da74:	cmp    ecx,DWORD PTR [rax+0x20]
  41da77:	jne    41da82 <flatcc_builder_end_string@@Base+0x62>
  41da7d:	jmp    41daa1 <flatcc_builder_end_string@@Base+0x81>
  41da82:	lea    rdi,[rip+0xa16e]        # 427bf7 <flatcc_builder_padding_base@@Base+0x1047>
  41da89:	lea    rsi,[rip+0x9332]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41da90:	mov    edx,0x6c5
  41da95:	lea    rcx,[rip+0xa118]        # 427bb4 <flatcc_builder_padding_base@@Base+0x1004>
  41da9c:	call   404090 <__assert_fail@plt>
  41daa1:	mov    rdi,QWORD PTR [rbp-0x10]
  41daa5:	mov    rax,QWORD PTR [rbp-0x10]
  41daa9:	mov    rsi,QWORD PTR [rax+0x18]
  41daad:	mov    rax,QWORD PTR [rbp-0x10]
  41dab1:	mov    ecx,DWORD PTR [rax+0x20]
  41dab4:	mov    edx,ecx
  41dab6:	call   41d7a0 <flatcc_builder_create_string@@Base>
  41dabb:	xor    ecx,ecx
  41dabd:	mov    DWORD PTR [rbp-0x14],eax
  41dac0:	cmp    ecx,eax
  41dac2:	jne    41dad4 <flatcc_builder_end_string@@Base+0xb4>
  41dac8:	mov    DWORD PTR [rbp-0x4],0x0
  41dacf:	jmp    41dae3 <flatcc_builder_end_string@@Base+0xc3>
  41dad4:	mov    rdi,QWORD PTR [rbp-0x10]
  41dad8:	call   41a3a0 <flatcc_builder_end_buffer@@Base+0x160>
  41dadd:	mov    eax,DWORD PTR [rbp-0x14]
  41dae0:	mov    DWORD PTR [rbp-0x4],eax
  41dae3:	mov    eax,DWORD PTR [rbp-0x4]
  41dae6:	add    rsp,0x20
  41daea:	pop    rbp
  41daeb:	ret    
  41daec:	nop    DWORD PTR [rax+0x0]

000000000041daf0 <flatcc_builder_string_edit@@Base>:
  41daf0:	push   rbp
  41daf1:	mov    rbp,rsp
  41daf4:	mov    QWORD PTR [rbp-0x8],rdi
  41daf8:	mov    rax,QWORD PTR [rbp-0x8]
  41dafc:	mov    rax,QWORD PTR [rax+0x18]
  41db00:	pop    rbp
  41db01:	ret    
  41db02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db0c:	nop    DWORD PTR [rax+0x0]

000000000041db10 <flatcc_builder_string_len@@Base>:
  41db10:	push   rbp
  41db11:	mov    rbp,rsp
  41db14:	mov    QWORD PTR [rbp-0x8],rdi
  41db18:	mov    rax,QWORD PTR [rbp-0x8]
  41db1c:	mov    rax,QWORD PTR [rax+0x30]
  41db20:	mov    ecx,DWORD PTR [rax+0x14]
  41db23:	mov    eax,ecx
  41db25:	pop    rbp
  41db26:	ret    
  41db27:	nop    WORD PTR [rax+rax*1+0x0]
  41db30:	push   rbp
  41db31:	mov    rbp,rsp
  41db34:	sub    rsp,0x20
  41db38:	mov    QWORD PTR [rbp-0x10],rdi
  41db3c:	mov    DWORD PTR [rbp-0x14],esi
  41db3f:	mov    WORD PTR [rbp-0x16],dx
  41db43:	mov    WORD PTR [rbp-0x18],cx
  41db47:	mov    rax,QWORD PTR [rbp-0x10]
  41db4b:	mov    esi,DWORD PTR [rax+0x20]
  41db4e:	movzx  r8d,WORD PTR [rbp-0x16]
  41db53:	add    esi,r8d
  41db56:	sub    esi,0x1
  41db59:	movzx  r8d,WORD PTR [rbp-0x16]
  41db5e:	sub    r8d,0x1
  41db62:	xor    r8d,0xffffffff
  41db66:	and    esi,r8d
  41db69:	mov    DWORD PTR [rbp-0x1c],esi
  41db6c:	mov    esi,DWORD PTR [rbp-0x1c]
  41db6f:	add    esi,DWORD PTR [rbp-0x14]
  41db72:	mov    rax,QWORD PTR [rbp-0x10]
  41db76:	mov    DWORD PTR [rax+0x20],esi
  41db79:	mov    rax,QWORD PTR [rbp-0x10]
  41db7d:	cmp    esi,DWORD PTR [rax+0x24]
  41db80:	jb     41dbbd <flatcc_builder_string_len@@Base+0xad>
  41db86:	mov    rdi,QWORD PTR [rbp-0x10]
  41db8a:	mov    rax,QWORD PTR [rbp-0x10]
  41db8e:	mov    ecx,DWORD PTR [rax+0x20]
  41db91:	add    ecx,0x1
  41db94:	mov    ecx,ecx
  41db96:	mov    esi,ecx
  41db98:	mov    edx,0xfffc
  41db9d:	call   41e530 <flatcc_builder_get_emit_context@@Base+0x50>
  41dba2:	cmp    eax,0x0
  41dba5:	je     41dbb8 <flatcc_builder_string_len@@Base+0xa8>
  41dbab:	mov    QWORD PTR [rbp-0x8],0x0
  41dbb3:	jmp    41dc12 <flatcc_builder_string_len@@Base+0x102>
  41dbb8:	jmp    41dbbd <flatcc_builder_string_len@@Base+0xad>
  41dbbd:	mov    eax,DWORD PTR [rbp-0x1c]
  41dbc0:	mov    ecx,eax
  41dbc2:	add    rcx,0x4
  41dbc9:	mov    rdx,QWORD PTR [rbp-0x10]
  41dbcd:	mov    rdx,QWORD PTR [rdx+0x8]
  41dbd1:	movzx  eax,WORD PTR [rbp-0x18]
  41dbd5:	mov    esi,eax
  41dbd7:	mov    WORD PTR [rdx+rsi*2],cx
  41dbdb:	movzx  eax,WORD PTR [rbp-0x18]
  41dbdf:	mov    rdx,QWORD PTR [rbp-0x10]
  41dbe3:	movzx  edi,WORD PTR [rdx+0x10]
  41dbe7:	cmp    eax,edi
  41dbe9:	jl     41dbfe <flatcc_builder_string_len@@Base+0xee>
  41dbef:	movzx  eax,WORD PTR [rbp-0x18]
  41dbf3:	add    eax,0x1
  41dbf6:	mov    rcx,QWORD PTR [rbp-0x10]
  41dbfa:	mov    WORD PTR [rcx+0x10],ax
  41dbfe:	mov    rax,QWORD PTR [rbp-0x10]
  41dc02:	mov    rax,QWORD PTR [rax+0x18]
  41dc06:	mov    ecx,DWORD PTR [rbp-0x1c]
  41dc09:	mov    edx,ecx
  41dc0b:	add    rax,rdx
  41dc0e:	mov    QWORD PTR [rbp-0x8],rax
  41dc12:	mov    rax,QWORD PTR [rbp-0x8]
  41dc16:	add    rsp,0x20
  41dc1a:	pop    rbp
  41dc1b:	ret    
  41dc1c:	nop    DWORD PTR [rax+0x0]

000000000041dc20 <flatcc_builder_table_edit@@Base>:
  41dc20:	push   rbp
  41dc21:	mov    rbp,rsp
  41dc24:	sub    rsp,0x10
  41dc28:	mov    QWORD PTR [rbp-0x8],rdi
  41dc2c:	mov    QWORD PTR [rbp-0x10],rsi
  41dc30:	mov    rax,QWORD PTR [rbp-0x8]
  41dc34:	mov    rax,QWORD PTR [rax+0x30]
  41dc38:	movzx  ecx,WORD PTR [rax+0xe]
  41dc3c:	cmp    ecx,0x3
  41dc3f:	jne    41dc4a <flatcc_builder_table_edit@@Base+0x2a>
  41dc45:	jmp    41dc69 <flatcc_builder_table_edit@@Base+0x49>
  41dc4a:	lea    rdi,[rip+0x99a0]        # 4275f1 <flatcc_builder_padding_base@@Base+0xa41>
  41dc51:	lea    rsi,[rip+0x916a]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41dc58:	mov    edx,0x702
  41dc5d:	lea    rcx,[rip+0xa045]        # 427ca9 <flatcc_builder_padding_base@@Base+0x10f9>
  41dc64:	call   404090 <__assert_fail@plt>
  41dc69:	xor    eax,eax
  41dc6b:	mov    ecx,eax
  41dc6d:	mov    rdx,QWORD PTR [rbp-0x8]
  41dc71:	mov    rdx,QWORD PTR [rdx+0x18]
  41dc75:	mov    rsi,QWORD PTR [rbp-0x8]
  41dc79:	mov    eax,DWORD PTR [rsi+0x20]
  41dc7c:	mov    esi,eax
  41dc7e:	add    rdx,rsi
  41dc81:	sub    rcx,QWORD PTR [rbp-0x10]
  41dc85:	add    rdx,rcx
  41dc88:	mov    rax,rdx
  41dc8b:	add    rsp,0x10
  41dc8f:	pop    rbp
  41dc90:	ret    
  41dc91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dc9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dca0 <flatcc_builder_table_add_copy@@Base>:
  41dca0:	push   rbp
  41dca1:	mov    rbp,rsp
  41dca4:	sub    rsp,0x30
  41dca8:	mov    QWORD PTR [rbp-0x8],rdi
  41dcac:	mov    DWORD PTR [rbp-0xc],esi
  41dcaf:	mov    QWORD PTR [rbp-0x18],rdx
  41dcb3:	mov    QWORD PTR [rbp-0x20],rcx
  41dcb7:	mov    WORD PTR [rbp-0x22],r8w
  41dcbc:	mov    rdi,QWORD PTR [rbp-0x8]
  41dcc0:	mov    esi,DWORD PTR [rbp-0xc]
  41dcc3:	mov    rdx,QWORD PTR [rbp-0x20]
  41dcc7:	movzx  ecx,WORD PTR [rbp-0x22]
  41dccb:	call   41ce20 <flatcc_builder_table_add@@Base>
  41dcd0:	mov    QWORD PTR [rbp-0x30],rax
  41dcd4:	cmp    rax,0x0
  41dcd8:	je     41dcef <flatcc_builder_table_add_copy@@Base+0x4f>
  41dcde:	mov    rdi,QWORD PTR [rbp-0x30]
  41dce2:	mov    rsi,QWORD PTR [rbp-0x18]
  41dce6:	mov    rdx,QWORD PTR [rbp-0x20]
  41dcea:	call   4040f0 <memcpy@plt>
  41dcef:	mov    rax,QWORD PTR [rbp-0x30]
  41dcf3:	add    rsp,0x30
  41dcf7:	pop    rbp
  41dcf8:	ret    
  41dcf9:	nop    DWORD PTR [rax+0x0]
  41dd00:	push   rbp
  41dd01:	mov    rbp,rsp
  41dd04:	sub    rsp,0x20
  41dd08:	mov    QWORD PTR [rbp-0x10],rdi
  41dd0c:	mov    WORD PTR [rbp-0x12],si
  41dd10:	mov    rax,QWORD PTR [rbp-0x10]
  41dd14:	mov    ecx,DWORD PTR [rax+0x20]
  41dd17:	mov    eax,ecx
  41dd19:	add    rax,0x4
  41dd1f:	sub    rax,0x1
  41dd25:	and    rax,0xfffffffffffffffc
  41dd2b:	mov    DWORD PTR [rbp-0x18],eax
  41dd2e:	mov    eax,DWORD PTR [rbp-0x18]
  41dd31:	mov    edx,eax
  41dd33:	add    rdx,0x4
  41dd3a:	mov    rdi,QWORD PTR [rbp-0x10]
  41dd3e:	mov    DWORD PTR [rdi+0x20],edx
  41dd41:	mov    rdi,QWORD PTR [rbp-0x10]
  41dd45:	cmp    edx,DWORD PTR [rdi+0x24]
  41dd48:	jbe    41dd80 <flatcc_builder_table_add_copy@@Base+0xe0>
  41dd4e:	mov    rdi,QWORD PTR [rbp-0x10]
  41dd52:	mov    rax,QWORD PTR [rbp-0x10]
  41dd56:	mov    ecx,DWORD PTR [rax+0x20]
  41dd59:	mov    esi,ecx
  41dd5b:	mov    edx,0xfffc
  41dd60:	call   41e530 <flatcc_builder_get_emit_context@@Base+0x50>
  41dd65:	cmp    eax,0x0
  41dd68:	je     41dd7b <flatcc_builder_table_add_copy@@Base+0xdb>
  41dd6e:	mov    QWORD PTR [rbp-0x8],0x0
  41dd76:	jmp    41ddef <flatcc_builder_table_add_copy@@Base+0x14f>
  41dd7b:	jmp    41dd80 <flatcc_builder_table_add_copy@@Base+0xe0>
  41dd80:	mov    eax,DWORD PTR [rbp-0x18]
  41dd83:	mov    ecx,eax
  41dd85:	add    rcx,0x4
  41dd8c:	mov    rdx,QWORD PTR [rbp-0x10]
  41dd90:	mov    rdx,QWORD PTR [rdx+0x8]
  41dd94:	movzx  eax,WORD PTR [rbp-0x12]
  41dd98:	mov    esi,eax
  41dd9a:	mov    WORD PTR [rdx+rsi*2],cx
  41dd9e:	movzx  eax,WORD PTR [rbp-0x12]
  41dda2:	mov    rdx,QWORD PTR [rbp-0x10]
  41dda6:	movzx  edi,WORD PTR [rdx+0x10]
  41ddaa:	cmp    eax,edi
  41ddac:	jl     41ddc1 <flatcc_builder_table_add_copy@@Base+0x121>
  41ddb2:	movzx  eax,WORD PTR [rbp-0x12]
  41ddb6:	add    eax,0x1
  41ddb9:	mov    rcx,QWORD PTR [rbp-0x10]
  41ddbd:	mov    WORD PTR [rcx+0x10],ax
  41ddc1:	mov    eax,DWORD PTR [rbp-0x18]
  41ddc4:	mov    rcx,QWORD PTR [rbp-0x10]
  41ddc8:	mov    rdx,QWORD PTR [rcx]
  41ddcb:	mov    rsi,rdx
  41ddce:	add    rsi,0x2
  41ddd5:	mov    QWORD PTR [rcx],rsi
  41ddd8:	mov    WORD PTR [rdx],ax
  41dddb:	mov    rcx,QWORD PTR [rbp-0x10]
  41dddf:	mov    rcx,QWORD PTR [rcx+0x18]
  41dde3:	mov    edi,DWORD PTR [rbp-0x18]
  41dde6:	mov    edx,edi
  41dde8:	add    rcx,rdx
  41ddeb:	mov    QWORD PTR [rbp-0x8],rcx
  41ddef:	mov    rax,QWORD PTR [rbp-0x8]
  41ddf3:	add    rsp,0x20
  41ddf7:	pop    rbp
  41ddf8:	ret    
  41ddf9:	nop    DWORD PTR [rax+0x0]

000000000041de00 <flatcc_builder_push_buffer_alignment@@Base>:
  41de00:	push   rbp
  41de01:	mov    rbp,rsp
  41de04:	mov    QWORD PTR [rbp-0x8],rdi
  41de08:	mov    rax,QWORD PTR [rbp-0x8]
  41de0c:	mov    cx,WORD PTR [rax+0xe8]
  41de13:	mov    WORD PTR [rbp-0xa],cx
  41de17:	mov    rax,QWORD PTR [rbp-0x8]
  41de1b:	mov    WORD PTR [rax+0xe8],0x4
  41de24:	movzx  eax,WORD PTR [rbp-0xa]
  41de28:	pop    rbp
  41de29:	ret    
  41de2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041de30 <flatcc_builder_pop_buffer_alignment@@Base>:
  41de30:	push   rbp
  41de31:	mov    rbp,rsp
  41de34:	sub    rsp,0x10
  41de38:	mov    QWORD PTR [rbp-0x8],rdi
  41de3c:	mov    WORD PTR [rbp-0xa],si
  41de40:	mov    rdi,QWORD PTR [rbp-0x8]
  41de44:	movzx  esi,WORD PTR [rbp-0xa]
  41de48:	call   419d30 <flatcc_builder_create_buffer@@Base+0x420>
  41de4d:	add    rsp,0x10
  41de51:	pop    rbp
  41de52:	ret    
  41de53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de5d:	nop    DWORD PTR [rax]

000000000041de60 <flatcc_builder_get_buffer_alignment@@Base>:
  41de60:	push   rbp
  41de61:	mov    rbp,rsp
  41de64:	mov    QWORD PTR [rbp-0x8],rdi
  41de68:	mov    rax,QWORD PTR [rbp-0x8]
  41de6c:	movzx  eax,WORD PTR [rax+0xe8]
  41de73:	pop    rbp
  41de74:	ret    
  41de75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de7f:	nop

000000000041de80 <flatcc_builder_set_vtable_clustering@@Base>:
  41de80:	push   rbp
  41de81:	mov    rbp,rsp
  41de84:	mov    QWORD PTR [rbp-0x8],rdi
  41de88:	mov    DWORD PTR [rbp-0xc],esi
  41de8b:	cmp    DWORD PTR [rbp-0xc],0x0
  41de8f:	setne  al
  41de92:	xor    al,0xff
  41de94:	and    al,0x1
  41de96:	movzx  ecx,al
  41de99:	mov    rdx,QWORD PTR [rbp-0x8]
  41de9d:	mov    DWORD PTR [rdx+0x124],ecx
  41dea3:	pop    rbp
  41dea4:	ret    
  41dea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deaf:	nop

000000000041deb0 <flatcc_builder_set_block_align@@Base>:
  41deb0:	push   rbp
  41deb1:	mov    rbp,rsp
  41deb4:	mov    QWORD PTR [rbp-0x8],rdi
  41deb8:	mov    WORD PTR [rbp-0xa],si
  41debc:	mov    ax,WORD PTR [rbp-0xa]
  41dec0:	mov    rcx,QWORD PTR [rbp-0x8]
  41dec4:	mov    WORD PTR [rcx+0xec],ax
  41decb:	pop    rbp
  41decc:	ret    
  41decd:	nop    DWORD PTR [rax]

000000000041ded0 <flatcc_builder_get_level@@Base>:
  41ded0:	push   rbp
  41ded1:	mov    rbp,rsp
  41ded4:	mov    QWORD PTR [rbp-0x8],rdi
  41ded8:	mov    rax,QWORD PTR [rbp-0x8]
  41dedc:	mov    eax,DWORD PTR [rax+0x104]
  41dee2:	pop    rbp
  41dee3:	ret    
  41dee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deee:	xchg   ax,ax

000000000041def0 <flatcc_builder_set_max_level@@Base>:
  41def0:	push   rbp
  41def1:	mov    rbp,rsp
  41def4:	mov    QWORD PTR [rbp-0x8],rdi
  41def8:	mov    DWORD PTR [rbp-0xc],esi
  41defb:	mov    eax,DWORD PTR [rbp-0xc]
  41defe:	mov    rcx,QWORD PTR [rbp-0x8]
  41df02:	mov    DWORD PTR [rcx+0x120],eax
  41df08:	mov    rcx,QWORD PTR [rbp-0x8]
  41df0c:	mov    eax,DWORD PTR [rcx+0x108]
  41df12:	mov    rcx,QWORD PTR [rbp-0x8]
  41df16:	cmp    eax,DWORD PTR [rcx+0x120]
  41df1c:	jge    41df36 <flatcc_builder_set_max_level@@Base+0x46>
  41df22:	mov    rax,QWORD PTR [rbp-0x8]
  41df26:	mov    ecx,DWORD PTR [rax+0x120]
  41df2c:	mov    rax,QWORD PTR [rbp-0x8]
  41df30:	mov    DWORD PTR [rax+0x108],ecx
  41df36:	pop    rbp
  41df37:	ret    
  41df38:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041df40 <flatcc_builder_get_buffer_size@@Base>:
  41df40:	push   rbp
  41df41:	mov    rbp,rsp
  41df44:	mov    QWORD PTR [rbp-0x8],rdi
  41df48:	mov    rax,QWORD PTR [rbp-0x8]
  41df4c:	mov    ecx,DWORD PTR [rax+0xf4]
  41df52:	mov    rax,QWORD PTR [rbp-0x8]
  41df56:	sub    ecx,DWORD PTR [rax+0xf0]
  41df5c:	movsxd rax,ecx
  41df5f:	pop    rbp
  41df60:	ret    
  41df61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df6b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041df70 <flatcc_builder_get_buffer_start@@Base>:
  41df70:	push   rbp
  41df71:	mov    rbp,rsp
  41df74:	mov    QWORD PTR [rbp-0x8],rdi
  41df78:	mov    rax,QWORD PTR [rbp-0x8]
  41df7c:	mov    eax,DWORD PTR [rax+0xf0]
  41df82:	pop    rbp
  41df83:	ret    
  41df84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df8e:	xchg   ax,ax

000000000041df90 <flatcc_builder_get_buffer_end@@Base>:
  41df90:	push   rbp
  41df91:	mov    rbp,rsp
  41df94:	mov    QWORD PTR [rbp-0x8],rdi
  41df98:	mov    rax,QWORD PTR [rbp-0x8]
  41df9c:	mov    eax,DWORD PTR [rax+0xf4]
  41dfa2:	pop    rbp
  41dfa3:	ret    
  41dfa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dfae:	xchg   ax,ax

000000000041dfb0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41dfb0:	push   rbp
  41dfb1:	mov    rbp,rsp
  41dfb4:	mov    QWORD PTR [rbp-0x8],rdi
  41dfb8:	mov    QWORD PTR [rbp-0x10],rsi
  41dfbc:	mov    rax,QWORD PTR [rbp-0x10]
  41dfc0:	mov    rcx,QWORD PTR [rbp-0x8]
  41dfc4:	mov    QWORD PTR [rcx+0x118],rax
  41dfcb:	pop    rbp
  41dfcc:	ret    
  41dfcd:	nop    DWORD PTR [rax]

000000000041dfd0 <flatcc_builder_set_identifier@@Base>:
  41dfd0:	push   rbp
  41dfd1:	mov    rbp,rsp
  41dfd4:	mov    QWORD PTR [rbp-0x8],rdi
  41dfd8:	mov    QWORD PTR [rbp-0x10],rsi
  41dfdc:	mov    rax,QWORD PTR [rbp-0x8]
  41dfe0:	add    rax,0x110
  41dfe6:	cmp    QWORD PTR [rbp-0x10],0x0
  41dfeb:	mov    QWORD PTR [rbp-0x18],rax
  41dfef:	je     41e002 <flatcc_builder_set_identifier@@Base+0x32>
  41dff5:	mov    rax,QWORD PTR [rbp-0x10]
  41dff9:	mov    QWORD PTR [rbp-0x20],rax
  41dffd:	jmp    41e012 <flatcc_builder_set_identifier@@Base+0x42>
  41e002:	lea    rax,[rip+0x8ba7]        # 426bb0 <flatcc_builder_padding_base@@Base>
  41e009:	mov    QWORD PTR [rbp-0x20],rax
  41e00d:	jmp    41e012 <flatcc_builder_set_identifier@@Base+0x42>
  41e012:	mov    rax,QWORD PTR [rbp-0x20]
  41e016:	mov    ecx,DWORD PTR [rax]
  41e018:	mov    rax,QWORD PTR [rbp-0x18]
  41e01c:	mov    DWORD PTR [rax],ecx
  41e01e:	pop    rbp
  41e01f:	ret    

000000000041e020 <flatcc_builder_get_type@@Base>:
  41e020:	push   rbp
  41e021:	mov    rbp,rsp
  41e024:	mov    QWORD PTR [rbp-0x8],rdi
  41e028:	mov    rax,QWORD PTR [rbp-0x8]
  41e02c:	cmp    QWORD PTR [rax+0x30],0x0
  41e031:	je     41e04b <flatcc_builder_get_type@@Base+0x2b>
  41e037:	mov    rax,QWORD PTR [rbp-0x8]
  41e03b:	mov    rax,QWORD PTR [rax+0x30]
  41e03f:	movzx  ecx,WORD PTR [rax+0xe]
  41e043:	mov    DWORD PTR [rbp-0xc],ecx
  41e046:	jmp    41e055 <flatcc_builder_get_type@@Base+0x35>
  41e04b:	xor    eax,eax
  41e04d:	mov    DWORD PTR [rbp-0xc],eax
  41e050:	jmp    41e055 <flatcc_builder_get_type@@Base+0x35>
  41e055:	mov    eax,DWORD PTR [rbp-0xc]
  41e058:	pop    rbp
  41e059:	ret    
  41e05a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e060 <flatcc_builder_get_type_at@@Base>:
  41e060:	push   rbp
  41e061:	mov    rbp,rsp
  41e064:	mov    QWORD PTR [rbp-0x10],rdi
  41e068:	mov    DWORD PTR [rbp-0x14],esi
  41e06b:	cmp    DWORD PTR [rbp-0x14],0x1
  41e06f:	jl     41e088 <flatcc_builder_get_type_at@@Base+0x28>
  41e075:	mov    eax,DWORD PTR [rbp-0x14]
  41e078:	mov    rcx,QWORD PTR [rbp-0x10]
  41e07c:	cmp    eax,DWORD PTR [rcx+0x104]
  41e082:	jle    41e094 <flatcc_builder_get_type_at@@Base+0x34>
  41e088:	mov    DWORD PTR [rbp-0x4],0x0
  41e08f:	jmp    41e0bd <flatcc_builder_get_type_at@@Base+0x5d>
  41e094:	mov    rax,QWORD PTR [rbp-0x10]
  41e098:	mov    rax,QWORD PTR [rax+0x30]
  41e09c:	mov    ecx,DWORD PTR [rbp-0x14]
  41e09f:	mov    rdx,QWORD PTR [rbp-0x10]
  41e0a3:	sub    ecx,DWORD PTR [rdx+0x104]
  41e0a9:	movsxd rdx,ecx
  41e0ac:	imul   rdx,rdx,0x24
  41e0b3:	add    rax,rdx
  41e0b6:	movzx  ecx,WORD PTR [rax+0xe]
  41e0ba:	mov    DWORD PTR [rbp-0x4],ecx
  41e0bd:	mov    eax,DWORD PTR [rbp-0x4]
  41e0c0:	pop    rbp
  41e0c1:	ret    
  41e0c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0cc:	nop    DWORD PTR [rax+0x0]

000000000041e0d0 <flatcc_builder_get_direct_buffer@@Base>:
  41e0d0:	push   rbp
  41e0d1:	mov    rbp,rsp
  41e0d4:	sub    rsp,0x20
  41e0d8:	mov    QWORD PTR [rbp-0x10],rdi
  41e0dc:	mov    QWORD PTR [rbp-0x18],rsi
  41e0e0:	mov    rax,QWORD PTR [rbp-0x10]
  41e0e4:	cmp    DWORD PTR [rax+0x128],0x0
  41e0eb:	je     41e110 <flatcc_builder_get_direct_buffer@@Base+0x40>
  41e0f1:	mov    rax,QWORD PTR [rbp-0x10]
  41e0f5:	add    rax,0x130
  41e0fb:	mov    rsi,QWORD PTR [rbp-0x18]
  41e0ff:	mov    rdi,rax
  41e102:	call   41e140 <flatcc_builder_get_direct_buffer@@Base+0x70>
  41e107:	mov    QWORD PTR [rbp-0x8],rax
  41e10b:	jmp    41e133 <flatcc_builder_get_direct_buffer@@Base+0x63>
  41e110:	cmp    QWORD PTR [rbp-0x18],0x0
  41e115:	je     41e126 <flatcc_builder_get_direct_buffer@@Base+0x56>
  41e11b:	mov    rax,QWORD PTR [rbp-0x18]
  41e11f:	mov    QWORD PTR [rax],0x0
  41e126:	jmp    41e12b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  41e12b:	mov    QWORD PTR [rbp-0x8],0x0
  41e133:	mov    rax,QWORD PTR [rbp-0x8]
  41e137:	add    rsp,0x20
  41e13b:	pop    rbp
  41e13c:	ret    
  41e13d:	nop    DWORD PTR [rax]
  41e140:	push   rbp
  41e141:	mov    rbp,rsp
  41e144:	mov    QWORD PTR [rbp-0x10],rdi
  41e148:	mov    QWORD PTR [rbp-0x18],rsi
  41e14c:	mov    rax,QWORD PTR [rbp-0x10]
  41e150:	mov    rax,QWORD PTR [rax]
  41e153:	mov    rcx,QWORD PTR [rbp-0x10]
  41e157:	cmp    rax,QWORD PTR [rcx+0x8]
  41e15b:	jne    41e18c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  41e161:	cmp    QWORD PTR [rbp-0x18],0x0
  41e166:	je     41e17b <flatcc_builder_get_direct_buffer@@Base+0xab>
  41e16c:	mov    rax,QWORD PTR [rbp-0x10]
  41e170:	mov    rax,QWORD PTR [rax+0x30]
  41e174:	mov    rcx,QWORD PTR [rbp-0x18]
  41e178:	mov    QWORD PTR [rcx],rax
  41e17b:	mov    rax,QWORD PTR [rbp-0x10]
  41e17f:	mov    rax,QWORD PTR [rax+0x10]
  41e183:	mov    QWORD PTR [rbp-0x8],rax
  41e187:	jmp    41e1aa <flatcc_builder_get_direct_buffer@@Base+0xda>
  41e18c:	cmp    QWORD PTR [rbp-0x18],0x0
  41e191:	je     41e1a2 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  41e197:	mov    rax,QWORD PTR [rbp-0x18]
  41e19b:	mov    QWORD PTR [rax],0x0
  41e1a2:	mov    QWORD PTR [rbp-0x8],0x0
  41e1aa:	mov    rax,QWORD PTR [rbp-0x8]
  41e1ae:	pop    rbp
  41e1af:	ret    

000000000041e1b0 <flatcc_builder_copy_buffer@@Base>:
  41e1b0:	push   rbp
  41e1b1:	mov    rbp,rsp
  41e1b4:	sub    rsp,0x20
  41e1b8:	mov    QWORD PTR [rbp-0x10],rdi
  41e1bc:	mov    QWORD PTR [rbp-0x18],rsi
  41e1c0:	mov    QWORD PTR [rbp-0x20],rdx
  41e1c4:	mov    rax,QWORD PTR [rbp-0x10]
  41e1c8:	cmp    DWORD PTR [rax+0x128],0x0
  41e1cf:	jne    41e1e2 <flatcc_builder_copy_buffer@@Base+0x32>
  41e1d5:	mov    QWORD PTR [rbp-0x8],0x0
  41e1dd:	jmp    41e237 <flatcc_builder_copy_buffer@@Base+0x87>
  41e1e2:	mov    rax,QWORD PTR [rbp-0x10]
  41e1e6:	add    rax,0x130
  41e1ec:	mov    rsi,QWORD PTR [rbp-0x18]
  41e1f0:	mov    rdx,QWORD PTR [rbp-0x20]
  41e1f4:	mov    rdi,rax
  41e1f7:	call   41ee40 <flatcc_emitter_copy_buffer@@Base>
  41e1fc:	mov    QWORD PTR [rbp-0x18],rax
  41e200:	cmp    QWORD PTR [rbp-0x18],0x0
  41e205:	je     41e210 <flatcc_builder_copy_buffer@@Base+0x60>
  41e20b:	jmp    41e22f <flatcc_builder_copy_buffer@@Base+0x7f>
  41e210:	lea    rdi,[rip+0x5950]        # 423b67 <_IO_stdin_used@@Base+0x1b67>
  41e217:	lea    rsi,[rip+0x8ba4]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e21e:	mov    edx,0x786
  41e223:	lea    rcx,[rip+0x9b0a]        # 427d34 <flatcc_builder_padding_base@@Base+0x1184>
  41e22a:	call   404090 <__assert_fail@plt>
  41e22f:	mov    rax,QWORD PTR [rbp-0x18]
  41e233:	mov    QWORD PTR [rbp-0x8],rax
  41e237:	mov    rax,QWORD PTR [rbp-0x8]
  41e23b:	add    rsp,0x20
  41e23f:	pop    rbp
  41e240:	ret    
  41e241:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e24b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e250 <flatcc_builder_finalize_buffer@@Base>:
  41e250:	push   rbp
  41e251:	mov    rbp,rsp
  41e254:	sub    rsp,0x20
  41e258:	mov    QWORD PTR [rbp-0x8],rdi
  41e25c:	mov    QWORD PTR [rbp-0x10],rsi
  41e260:	mov    rdi,QWORD PTR [rbp-0x8]
  41e264:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  41e269:	mov    QWORD PTR [rbp-0x20],rax
  41e26d:	cmp    QWORD PTR [rbp-0x10],0x0
  41e272:	je     41e283 <flatcc_builder_finalize_buffer@@Base+0x33>
  41e278:	mov    rax,QWORD PTR [rbp-0x20]
  41e27c:	mov    rcx,QWORD PTR [rbp-0x10]
  41e280:	mov    QWORD PTR [rcx],rax
  41e283:	mov    rdi,QWORD PTR [rbp-0x20]
  41e287:	call   404100 <malloc@plt>
  41e28c:	mov    QWORD PTR [rbp-0x18],rax
  41e290:	cmp    QWORD PTR [rbp-0x18],0x0
  41e295:	jne    41e2ba <flatcc_builder_finalize_buffer@@Base+0x6a>
  41e29b:	lea    rdi,[rip+0x9ce0]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41e2a2:	lea    rsi,[rip+0x8b19]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e2a9:	mov    edx,0x798
  41e2ae:	lea    rcx,[rip+0x9ac4]        # 427d79 <flatcc_builder_padding_base@@Base+0x11c9>
  41e2b5:	call   404090 <__assert_fail@plt>
  41e2ba:	mov    rdi,QWORD PTR [rbp-0x8]
  41e2be:	mov    rsi,QWORD PTR [rbp-0x18]
  41e2c2:	mov    rdx,QWORD PTR [rbp-0x20]
  41e2c6:	call   41e1b0 <flatcc_builder_copy_buffer@@Base>
  41e2cb:	cmp    rax,0x0
  41e2cf:	jne    41e2f4 <flatcc_builder_finalize_buffer@@Base+0xa4>
  41e2d5:	lea    rdi,[rip+0x9ca6]        # 427f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41e2dc:	lea    rsi,[rip+0x8adf]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e2e3:	mov    edx,0x79c
  41e2e8:	lea    rcx,[rip+0x9a8a]        # 427d79 <flatcc_builder_padding_base@@Base+0x11c9>
  41e2ef:	call   404090 <__assert_fail@plt>
  41e2f4:	jmp    41e2f9 <flatcc_builder_finalize_buffer@@Base+0xa9>
  41e2f9:	cmp    QWORD PTR [rbp-0x18],0x0
  41e2fe:	jne    41e31a <flatcc_builder_finalize_buffer@@Base+0xca>
  41e304:	cmp    QWORD PTR [rbp-0x10],0x0
  41e309:	je     41e31a <flatcc_builder_finalize_buffer@@Base+0xca>
  41e30f:	mov    rax,QWORD PTR [rbp-0x10]
  41e313:	mov    QWORD PTR [rax],0x0
  41e31a:	mov    rax,QWORD PTR [rbp-0x18]
  41e31e:	add    rsp,0x20
  41e322:	pop    rbp
  41e323:	ret    
  41e324:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e32e:	xchg   ax,ax

000000000041e330 <flatcc_builder_finalize_aligned_buffer@@Base>:
  41e330:	push   rbp
  41e331:	mov    rbp,rsp
  41e334:	sub    rsp,0x30
  41e338:	mov    QWORD PTR [rbp-0x8],rdi
  41e33c:	mov    QWORD PTR [rbp-0x10],rsi
  41e340:	mov    rdi,QWORD PTR [rbp-0x8]
  41e344:	call   41df40 <flatcc_builder_get_buffer_size@@Base>
  41e349:	mov    QWORD PTR [rbp-0x28],rax
  41e34d:	cmp    QWORD PTR [rbp-0x10],0x0
  41e352:	je     41e363 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  41e358:	mov    rax,QWORD PTR [rbp-0x28]
  41e35c:	mov    rcx,QWORD PTR [rbp-0x10]
  41e360:	mov    QWORD PTR [rcx],rax
  41e363:	mov    rdi,QWORD PTR [rbp-0x8]
  41e367:	call   41de60 <flatcc_builder_get_buffer_alignment@@Base>
  41e36c:	movzx  ecx,ax
  41e36f:	mov    edx,ecx
  41e371:	mov    QWORD PTR [rbp-0x20],rdx
  41e375:	mov    rdx,QWORD PTR [rbp-0x28]
  41e379:	add    rdx,QWORD PTR [rbp-0x20]
  41e37d:	sub    rdx,0x1
  41e384:	mov    rsi,QWORD PTR [rbp-0x20]
  41e388:	sub    rsi,0x1
  41e38f:	xor    rsi,0xffffffffffffffff
  41e396:	and    rdx,rsi
  41e399:	mov    QWORD PTR [rbp-0x28],rdx
  41e39d:	mov    rdi,QWORD PTR [rbp-0x20]
  41e3a1:	mov    rsi,QWORD PTR [rbp-0x28]
  41e3a5:	call   41e420 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  41e3aa:	mov    QWORD PTR [rbp-0x18],rax
  41e3ae:	cmp    QWORD PTR [rbp-0x18],0x0
  41e3b3:	jne    41e3be <flatcc_builder_finalize_aligned_buffer@@Base+0x8e>
  41e3b9:	jmp    41e3f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  41e3be:	mov    rdi,QWORD PTR [rbp-0x8]
  41e3c2:	mov    rsi,QWORD PTR [rbp-0x18]
  41e3c6:	mov    rdx,QWORD PTR [rbp-0x28]
  41e3ca:	call   41e1b0 <flatcc_builder_copy_buffer@@Base>
  41e3cf:	cmp    rax,0x0
  41e3d3:	jne    41e3ef <flatcc_builder_finalize_aligned_buffer@@Base+0xbf>
  41e3d9:	mov    rdi,QWORD PTR [rbp-0x18]
  41e3dd:	call   404030 <free@plt>
  41e3e2:	mov    QWORD PTR [rbp-0x18],0x0
  41e3ea:	jmp    41e3f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  41e3ef:	jmp    41e3f4 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  41e3f4:	cmp    QWORD PTR [rbp-0x18],0x0
  41e3f9:	jne    41e415 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  41e3ff:	cmp    QWORD PTR [rbp-0x10],0x0
  41e404:	je     41e415 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  41e40a:	mov    rax,QWORD PTR [rbp-0x10]
  41e40e:	mov    QWORD PTR [rax],0x0
  41e415:	mov    rax,QWORD PTR [rbp-0x18]
  41e419:	add    rsp,0x30
  41e41d:	pop    rbp
  41e41e:	ret    
  41e41f:	nop
  41e420:	push   rbp
  41e421:	mov    rbp,rsp
  41e424:	sub    rsp,0x20
  41e428:	mov    QWORD PTR [rbp-0x8],rdi
  41e42c:	mov    QWORD PTR [rbp-0x10],rsi
  41e430:	mov    QWORD PTR [rbp-0x20],0x0
  41e438:	cmp    QWORD PTR [rbp-0x8],0x8
  41e43d:	jae    41e44b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  41e443:	mov    QWORD PTR [rbp-0x8],0x8
  41e44b:	mov    rsi,QWORD PTR [rbp-0x8]
  41e44f:	mov    rdx,QWORD PTR [rbp-0x10]
  41e453:	lea    rdi,[rbp-0x20]
  41e457:	call   404120 <posix_memalign@plt>
  41e45c:	mov    DWORD PTR [rbp-0x14],eax
  41e45f:	cmp    DWORD PTR [rbp-0x14],0x0
  41e463:	je     41e485 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  41e469:	cmp    QWORD PTR [rbp-0x20],0x0
  41e46e:	je     41e485 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  41e474:	mov    rdi,QWORD PTR [rbp-0x20]
  41e478:	call   404030 <free@plt>
  41e47d:	mov    QWORD PTR [rbp-0x20],0x0
  41e485:	mov    rax,QWORD PTR [rbp-0x20]
  41e489:	add    rsp,0x20
  41e48d:	pop    rbp
  41e48e:	ret    
  41e48f:	nop

000000000041e490 <flatcc_builder_aligned_alloc@@Base>:
  41e490:	push   rbp
  41e491:	mov    rbp,rsp
  41e494:	sub    rsp,0x10
  41e498:	mov    QWORD PTR [rbp-0x8],rdi
  41e49c:	mov    QWORD PTR [rbp-0x10],rsi
  41e4a0:	mov    rdi,QWORD PTR [rbp-0x8]
  41e4a4:	mov    rsi,QWORD PTR [rbp-0x10]
  41e4a8:	call   41e420 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  41e4ad:	add    rsp,0x10
  41e4b1:	pop    rbp
  41e4b2:	ret    
  41e4b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4bd:	nop    DWORD PTR [rax]

000000000041e4c0 <flatcc_builder_aligned_free@@Base>:
  41e4c0:	push   rbp
  41e4c1:	mov    rbp,rsp
  41e4c4:	sub    rsp,0x10
  41e4c8:	mov    QWORD PTR [rbp-0x8],rdi
  41e4cc:	mov    rdi,QWORD PTR [rbp-0x8]
  41e4d0:	call   404030 <free@plt>
  41e4d5:	add    rsp,0x10
  41e4d9:	pop    rbp
  41e4da:	ret    
  41e4db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e4e0 <flatcc_builder_get_emit_context@@Base>:
  41e4e0:	push   rbp
  41e4e1:	mov    rbp,rsp
  41e4e4:	mov    QWORD PTR [rbp-0x8],rdi
  41e4e8:	mov    rax,QWORD PTR [rbp-0x8]
  41e4ec:	mov    rax,QWORD PTR [rax+0x38]
  41e4f0:	pop    rbp
  41e4f1:	ret    
  41e4f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4fc:	nop    DWORD PTR [rax+0x0]
  41e500:	push   rbp
  41e501:	mov    rbp,rsp
  41e504:	mov    QWORD PTR [rbp-0x8],rdi
  41e508:	mov    WORD PTR [rbp-0xa],si
  41e50c:	mov    rax,QWORD PTR [rbp-0x8]
  41e510:	mov    ecx,DWORD PTR [rax+0xf4]
  41e516:	movzx  edx,WORD PTR [rbp-0xa]
  41e51a:	sub    edx,0x1
  41e51d:	and    ecx,edx
  41e51f:	mov    eax,ecx
  41e521:	pop    rbp
  41e522:	ret    
  41e523:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e52d:	nop    DWORD PTR [rax]
  41e530:	push   rbp
  41e531:	mov    rbp,rsp
  41e534:	sub    rsp,0x30
  41e538:	mov    QWORD PTR [rbp-0x10],rdi
  41e53c:	mov    QWORD PTR [rbp-0x18],rsi
  41e540:	mov    DWORD PTR [rbp-0x1c],edx
  41e543:	mov    rax,QWORD PTR [rbp-0x10]
  41e547:	add    rax,0x58
  41e54d:	add    rax,0x10
  41e553:	mov    QWORD PTR [rbp-0x28],rax
  41e557:	mov    rax,QWORD PTR [rbp-0x10]
  41e55b:	mov    rax,QWORD PTR [rax+0x50]
  41e55f:	mov    rcx,QWORD PTR [rbp-0x10]
  41e563:	mov    rdi,QWORD PTR [rcx+0x40]
  41e567:	mov    rsi,QWORD PTR [rbp-0x28]
  41e56b:	mov    rcx,QWORD PTR [rbp-0x10]
  41e56f:	mov    edx,DWORD PTR [rcx+0x28]
  41e572:	mov    ecx,edx
  41e574:	add    rcx,QWORD PTR [rbp-0x18]
  41e578:	mov    rdx,rcx
  41e57b:	mov    r8d,0x1
  41e581:	mov    ecx,r8d
  41e584:	call   rax
  41e586:	cmp    eax,0x0
  41e589:	je     41e59b <flatcc_builder_get_emit_context@@Base+0xbb>
  41e58f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41e596:	jmp    41e5ae <flatcc_builder_get_emit_context@@Base+0xce>
  41e59b:	mov    rdi,QWORD PTR [rbp-0x10]
  41e59f:	mov    esi,DWORD PTR [rbp-0x1c]
  41e5a2:	call   41a4d0 <flatcc_builder_start_struct@@Base+0x70>
  41e5a7:	mov    DWORD PTR [rbp-0x4],0x0
  41e5ae:	mov    eax,DWORD PTR [rbp-0x4]
  41e5b1:	add    rsp,0x30
  41e5b5:	pop    rbp
  41e5b6:	ret    
  41e5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41e5c0:	push   rbp
  41e5c1:	mov    rbp,rsp
  41e5c4:	sub    rsp,0x30
  41e5c8:	mov    QWORD PTR [rbp-0x10],rdi
  41e5cc:	mov    rax,QWORD PTR [rbp-0x10]
  41e5d0:	add    rax,0x58
  41e5d6:	add    rax,0x50
  41e5dc:	mov    QWORD PTR [rbp-0x18],rax
  41e5e0:	mov    rax,QWORD PTR [rbp-0x10]
  41e5e4:	cmp    DWORD PTR [rax+0xe4],0x0
  41e5eb:	jne    41e5f6 <flatcc_builder_get_emit_context@@Base+0x116>
  41e5f1:	jmp    41e615 <flatcc_builder_get_emit_context@@Base+0x135>
  41e5f6:	lea    rdi,[rip+0x9949]        # 427f46 <flatcc_builder_padding_base@@Base+0x1396>
  41e5fd:	lea    rsi,[rip+0x87be]        # 426dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e604:	mov    edx,0x156
  41e609:	lea    rcx,[rip+0x9945]        # 427f55 <flatcc_builder_padding_base@@Base+0x13a5>
  41e610:	call   404090 <__assert_fail@plt>
  41e615:	xor    r8d,r8d
  41e618:	mov    rdi,QWORD PTR [rbp-0x10]
  41e61c:	mov    rax,QWORD PTR [rbp-0x10]
  41e620:	mov    ecx,DWORD PTR [rax+0xe4]
  41e626:	mov    edx,ecx
  41e628:	mov    esi,0x6
  41e62d:	mov    ecx,0x10
  41e632:	call   4190c0 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  41e637:	cmp    rax,0x0
  41e63b:	jne    41e64d <flatcc_builder_get_emit_context@@Base+0x16d>
  41e641:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41e648:	jmp    41e721 <flatcc_builder_get_emit_context@@Base+0x241>
  41e64d:	mov    rax,QWORD PTR [rbp-0x10]
  41e651:	mov    DWORD PTR [rax+0xe4],0x10
  41e65b:	mov    QWORD PTR [rbp-0x20],0x100
  41e663:	mov    rax,QWORD PTR [rbp-0x10]
  41e667:	mov    rax,QWORD PTR [rax+0x50]
  41e66b:	mov    rcx,QWORD PTR [rbp-0x10]
  41e66f:	mov    rdi,QWORD PTR [rcx+0x40]
  41e673:	mov    rsi,QWORD PTR [rbp-0x18]
  41e677:	mov    rdx,QWORD PTR [rbp-0x20]
  41e67b:	mov    ecx,0x1
  41e680:	mov    r8d,0x5
  41e686:	call   rax
  41e688:	cmp    eax,0x0
  41e68b:	je     41e69d <flatcc_builder_get_emit_context@@Base+0x1bd>
  41e691:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41e698:	jmp    41e721 <flatcc_builder_get_emit_context@@Base+0x241>
  41e69d:	jmp    41e6a2 <flatcc_builder_get_emit_context@@Base+0x1c2>
  41e6a2:	mov    rax,QWORD PTR [rbp-0x20]
  41e6a6:	shl    rax,0x1
  41e6aa:	mov    rcx,QWORD PTR [rbp-0x18]
  41e6ae:	cmp    rax,QWORD PTR [rcx+0x8]
  41e6b2:	ja     41e6c9 <flatcc_builder_get_emit_context@@Base+0x1e9>
  41e6b8:	mov    rax,QWORD PTR [rbp-0x20]
  41e6bc:	shl    rax,0x1
  41e6c0:	mov    QWORD PTR [rbp-0x20],rax
  41e6c4:	jmp    41e6a2 <flatcc_builder_get_emit_context@@Base+0x1c2>
  41e6c9:	mov    rax,QWORD PTR [rbp-0x20]
  41e6cd:	shr    rax,0x2
  41e6d1:	mov    QWORD PTR [rbp-0x20],rax
  41e6d5:	mov    QWORD PTR [rbp-0x28],0x0
  41e6dd:	mov    rcx,QWORD PTR [rbp-0x28]
  41e6e1:	mov    eax,0x1
  41e6e6:	shl    rax,cl
  41e6e9:	cmp    rax,QWORD PTR [rbp-0x20]
  41e6ed:	jae    41e70b <flatcc_builder_get_emit_context@@Base+0x22b>
  41e6f3:	jmp    41e6f8 <flatcc_builder_get_emit_context@@Base+0x218>
  41e6f8:	mov    rax,QWORD PTR [rbp-0x28]
  41e6fc:	add    rax,0x1
  41e702:	mov    QWORD PTR [rbp-0x28],rax
  41e706:	jmp    41e6dd <flatcc_builder_get_emit_context@@Base+0x1fd>
  41e70b:	mov    rax,QWORD PTR [rbp-0x28]
  41e70f:	mov    rcx,QWORD PTR [rbp-0x10]
  41e713:	mov    QWORD PTR [rcx+0xd8],rax
  41e71a:	mov    DWORD PTR [rbp-0x4],0x0
  41e721:	mov    eax,DWORD PTR [rbp-0x4]
  41e724:	add    rsp,0x30
  41e728:	pop    rbp
  41e729:	ret    
  41e72a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e730 <flatcc_emitter_recycle_page@@Base>:
  41e730:	push   rbp
  41e731:	mov    rbp,rsp
  41e734:	mov    QWORD PTR [rbp-0x10],rdi
  41e738:	mov    QWORD PTR [rbp-0x18],rsi
  41e73c:	mov    rax,QWORD PTR [rbp-0x18]
  41e740:	mov    rcx,QWORD PTR [rbp-0x10]
  41e744:	cmp    rax,QWORD PTR [rcx]
  41e747:	je     41e75f <flatcc_emitter_recycle_page@@Base+0x2f>
  41e74d:	mov    rax,QWORD PTR [rbp-0x18]
  41e751:	mov    rcx,QWORD PTR [rbp-0x10]
  41e755:	cmp    rax,QWORD PTR [rcx+0x8]
  41e759:	jne    41e76b <flatcc_emitter_recycle_page@@Base+0x3b>
  41e75f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41e766:	jmp    41e803 <flatcc_emitter_recycle_page@@Base+0xd3>
  41e76b:	mov    rax,QWORD PTR [rbp-0x18]
  41e76f:	mov    rax,QWORD PTR [rax+0xb88]
  41e776:	mov    rcx,QWORD PTR [rbp-0x18]
  41e77a:	mov    rcx,QWORD PTR [rcx+0xb80]
  41e781:	mov    QWORD PTR [rcx+0xb88],rax
  41e788:	mov    rax,QWORD PTR [rbp-0x18]
  41e78c:	mov    rax,QWORD PTR [rax+0xb80]
  41e793:	mov    rcx,QWORD PTR [rbp-0x18]
  41e797:	mov    rcx,QWORD PTR [rcx+0xb88]
  41e79e:	mov    QWORD PTR [rcx+0xb80],rax
  41e7a5:	mov    rax,QWORD PTR [rbp-0x10]
  41e7a9:	mov    rax,QWORD PTR [rax]
  41e7ac:	mov    rax,QWORD PTR [rax+0xb88]
  41e7b3:	mov    rcx,QWORD PTR [rbp-0x18]
  41e7b7:	mov    QWORD PTR [rcx+0xb88],rax
  41e7be:	mov    rax,QWORD PTR [rbp-0x10]
  41e7c2:	mov    rax,QWORD PTR [rax]
  41e7c5:	mov    rcx,QWORD PTR [rbp-0x18]
  41e7c9:	mov    QWORD PTR [rcx+0xb80],rax
  41e7d0:	mov    rax,QWORD PTR [rbp-0x18]
  41e7d4:	mov    rcx,QWORD PTR [rbp-0x18]
  41e7d8:	mov    rcx,QWORD PTR [rcx+0xb88]
  41e7df:	mov    QWORD PTR [rcx+0xb80],rax
  41e7e6:	mov    rax,QWORD PTR [rbp-0x18]
  41e7ea:	mov    rcx,QWORD PTR [rbp-0x18]
  41e7ee:	mov    rcx,QWORD PTR [rcx+0xb80]
  41e7f5:	mov    QWORD PTR [rcx+0xb88],rax
  41e7fc:	mov    DWORD PTR [rbp-0x4],0x0
  41e803:	mov    eax,DWORD PTR [rbp-0x4]
  41e806:	pop    rbp
  41e807:	ret    
  41e808:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e810 <flatcc_emitter_reset@@Base>:
  41e810:	push   rbp
  41e811:	mov    rbp,rsp
  41e814:	sub    rsp,0x20
  41e818:	mov    QWORD PTR [rbp-0x8],rdi
  41e81c:	mov    rax,QWORD PTR [rbp-0x8]
  41e820:	mov    rax,QWORD PTR [rax]
  41e823:	mov    QWORD PTR [rbp-0x10],rax
  41e827:	mov    rax,QWORD PTR [rbp-0x8]
  41e82b:	cmp    QWORD PTR [rax],0x0
  41e82f:	jne    41e83a <flatcc_emitter_reset@@Base+0x2a>
  41e835:	jmp    41e9a8 <flatcc_emitter_reset@@Base+0x198>
  41e83a:	xor    eax,eax
  41e83c:	mov    rcx,QWORD PTR [rbp-0x8]
  41e840:	mov    rcx,QWORD PTR [rcx]
  41e843:	mov    rdx,QWORD PTR [rbp-0x8]
  41e847:	mov    QWORD PTR [rdx+0x8],rcx
  41e84b:	mov    rcx,QWORD PTR [rbp-0x8]
  41e84f:	mov    rcx,QWORD PTR [rcx]
  41e852:	add    rcx,0x5c0
  41e859:	mov    rdx,QWORD PTR [rbp-0x8]
  41e85d:	mov    QWORD PTR [rdx+0x10],rcx
  41e861:	mov    rcx,QWORD PTR [rbp-0x8]
  41e865:	mov    rcx,QWORD PTR [rcx+0x10]
  41e869:	mov    rdx,QWORD PTR [rbp-0x8]
  41e86d:	mov    QWORD PTR [rdx+0x20],rcx
  41e871:	mov    rcx,QWORD PTR [rbp-0x8]
  41e875:	mov    QWORD PTR [rcx+0x18],0x5c0
  41e87d:	mov    rcx,QWORD PTR [rbp-0x8]
  41e881:	mov    QWORD PTR [rcx+0x28],0x5c0
  41e889:	mov    rcx,QWORD PTR [rbp-0x8]
  41e88d:	mov    rcx,QWORD PTR [rcx+0x18]
  41e891:	sub    eax,ecx
  41e893:	mov    rdx,QWORD PTR [rbp-0x8]
  41e897:	mov    rdx,QWORD PTR [rdx]
  41e89a:	mov    DWORD PTR [rdx+0xb90],eax
  41e8a0:	mov    rdx,QWORD PTR [rbp-0x8]
  41e8a4:	cmp    QWORD PTR [rdx+0x40],0x0
  41e8a9:	jne    41e8bf <flatcc_emitter_reset@@Base+0xaf>
  41e8af:	mov    rax,QWORD PTR [rbp-0x8]
  41e8b3:	mov    rax,QWORD PTR [rax+0x30]
  41e8b7:	mov    rcx,QWORD PTR [rbp-0x8]
  41e8bb:	mov    QWORD PTR [rcx+0x40],rax
  41e8bf:	mov    rax,QWORD PTR [rbp-0x8]
  41e8c3:	imul   rax,QWORD PTR [rax+0x40],0x3
  41e8cb:	shr    rax,0x2
  41e8cf:	mov    rcx,QWORD PTR [rbp-0x8]
  41e8d3:	mov    rcx,QWORD PTR [rcx+0x30]
  41e8d7:	shr    rcx,0x2
  41e8db:	add    rax,rcx
  41e8de:	mov    rcx,QWORD PTR [rbp-0x8]
  41e8e2:	mov    QWORD PTR [rcx+0x40],rax
  41e8e6:	mov    rax,QWORD PTR [rbp-0x8]
  41e8ea:	mov    QWORD PTR [rax+0x30],0x0
  41e8f2:	xor    eax,eax
  41e8f4:	mov    rcx,QWORD PTR [rbp-0x8]
  41e8f8:	mov    rcx,QWORD PTR [rcx+0x40]
  41e8fc:	shl    rcx,0x1
  41e900:	mov    rdx,QWORD PTR [rbp-0x8]
  41e904:	cmp    rcx,QWORD PTR [rdx+0x38]
  41e908:	mov    BYTE PTR [rbp-0x11],al
  41e90b:	jae    41e92d <flatcc_emitter_reset@@Base+0x11d>
  41e911:	mov    rax,QWORD PTR [rbp-0x8]
  41e915:	mov    rax,QWORD PTR [rax+0x8]
  41e919:	mov    rax,QWORD PTR [rax+0xb80]
  41e920:	mov    rcx,QWORD PTR [rbp-0x8]
  41e924:	cmp    rax,QWORD PTR [rcx]
  41e927:	setne  dl
  41e92a:	mov    BYTE PTR [rbp-0x11],dl
  41e92d:	mov    al,BYTE PTR [rbp-0x11]
  41e930:	test   al,0x1
  41e932:	jne    41e93d <flatcc_emitter_reset@@Base+0x12d>
  41e938:	jmp    41e9a8 <flatcc_emitter_reset@@Base+0x198>
  41e93d:	mov    rax,QWORD PTR [rbp-0x8]
  41e941:	mov    rax,QWORD PTR [rax+0x8]
  41e945:	mov    rax,QWORD PTR [rax+0xb80]
  41e94c:	mov    QWORD PTR [rbp-0x10],rax
  41e950:	mov    rax,QWORD PTR [rbp-0x10]
  41e954:	mov    rax,QWORD PTR [rax+0xb80]
  41e95b:	mov    rcx,QWORD PTR [rbp-0x8]
  41e95f:	mov    rcx,QWORD PTR [rcx+0x8]
  41e963:	mov    QWORD PTR [rcx+0xb80],rax
  41e96a:	mov    rax,QWORD PTR [rbp-0x8]
  41e96e:	mov    rax,QWORD PTR [rax+0x8]
  41e972:	mov    rcx,QWORD PTR [rbp-0x10]
  41e976:	mov    rcx,QWORD PTR [rcx+0xb80]
  41e97d:	mov    QWORD PTR [rcx+0xb88],rax
  41e984:	mov    rax,QWORD PTR [rbp-0x10]
  41e988:	mov    rdi,rax
  41e98b:	call   404030 <free@plt>
  41e990:	mov    rax,QWORD PTR [rbp-0x8]
  41e994:	mov    rcx,QWORD PTR [rax+0x38]
  41e998:	sub    rcx,0xb80
  41e99f:	mov    QWORD PTR [rax+0x38],rcx
  41e9a3:	jmp    41e8f2 <flatcc_emitter_reset@@Base+0xe2>
  41e9a8:	add    rsp,0x20
  41e9ac:	pop    rbp
  41e9ad:	ret    
  41e9ae:	xchg   ax,ax

000000000041e9b0 <flatcc_emitter_clear@@Base>:
  41e9b0:	push   rbp
  41e9b1:	mov    rbp,rsp
  41e9b4:	sub    rsp,0x10
  41e9b8:	mov    QWORD PTR [rbp-0x8],rdi
  41e9bc:	mov    rax,QWORD PTR [rbp-0x8]
  41e9c0:	mov    rax,QWORD PTR [rax]
  41e9c3:	mov    QWORD PTR [rbp-0x10],rax
  41e9c7:	cmp    QWORD PTR [rbp-0x10],0x0
  41e9cc:	jne    41e9d7 <flatcc_emitter_clear@@Base+0x27>
  41e9d2:	jmp    41ea45 <flatcc_emitter_clear@@Base+0x95>
  41e9d7:	mov    rax,QWORD PTR [rbp-0x10]
  41e9db:	mov    rax,QWORD PTR [rax+0xb88]
  41e9e2:	mov    QWORD PTR [rax+0xb80],0x0
  41e9ed:	mov    rax,QWORD PTR [rbp-0x10]
  41e9f1:	cmp    QWORD PTR [rax+0xb80],0x0
  41e9f9:	je     41ea26 <flatcc_emitter_clear@@Base+0x76>
  41e9ff:	mov    rax,QWORD PTR [rbp-0x10]
  41ea03:	mov    rax,QWORD PTR [rax+0xb80]
  41ea0a:	mov    QWORD PTR [rbp-0x10],rax
  41ea0e:	mov    rax,QWORD PTR [rbp-0x10]
  41ea12:	mov    rax,QWORD PTR [rax+0xb88]
  41ea19:	mov    rdi,rax
  41ea1c:	call   404030 <free@plt>
  41ea21:	jmp    41e9ed <flatcc_emitter_clear@@Base+0x3d>
  41ea26:	mov    rax,QWORD PTR [rbp-0x10]
  41ea2a:	mov    rdi,rax
  41ea2d:	call   404030 <free@plt>
  41ea32:	xor    esi,esi
  41ea34:	mov    rax,QWORD PTR [rbp-0x8]
  41ea38:	mov    rdi,rax
  41ea3b:	mov    edx,0x48
  41ea40:	call   4040a0 <memset@plt>
  41ea45:	add    rsp,0x10
  41ea49:	pop    rbp
  41ea4a:	ret    
  41ea4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ea50 <flatcc_emitter@@Base>:
  41ea50:	push   rbp
  41ea51:	mov    rbp,rsp
  41ea54:	sub    rsp,0x40
  41ea58:	mov    QWORD PTR [rbp-0x10],rdi
  41ea5c:	mov    QWORD PTR [rbp-0x18],rsi
  41ea60:	mov    DWORD PTR [rbp-0x1c],edx
  41ea63:	mov    DWORD PTR [rbp-0x20],ecx
  41ea66:	mov    QWORD PTR [rbp-0x28],r8
  41ea6a:	mov    rax,QWORD PTR [rbp-0x10]
  41ea6e:	mov    QWORD PTR [rbp-0x30],rax
  41ea72:	mov    rax,QWORD PTR [rbp-0x28]
  41ea76:	mov    rsi,QWORD PTR [rbp-0x30]
  41ea7a:	add    rax,QWORD PTR [rsi+0x30]
  41ea7e:	mov    QWORD PTR [rsi+0x30],rax
  41ea82:	cmp    DWORD PTR [rbp-0x20],0x0
  41ea86:	jge    41eb4a <flatcc_emitter@@Base+0xfa>
  41ea8c:	mov    rax,QWORD PTR [rbp-0x28]
  41ea90:	mov    rcx,QWORD PTR [rbp-0x30]
  41ea94:	cmp    rax,QWORD PTR [rcx+0x18]
  41ea98:	ja     41eadc <flatcc_emitter@@Base+0x8c>
  41ea9e:	xor    eax,eax
  41eaa0:	mov    ecx,eax
  41eaa2:	mov    rdx,QWORD PTR [rbp-0x28]
  41eaa6:	mov    rsi,QWORD PTR [rbp-0x30]
  41eaaa:	mov    rdi,QWORD PTR [rsi+0x10]
  41eaae:	sub    rcx,rdx
  41eab1:	add    rdi,rcx
  41eab4:	mov    QWORD PTR [rsi+0x10],rdi
  41eab8:	mov    rcx,QWORD PTR [rbp-0x28]
  41eabc:	mov    rdx,QWORD PTR [rbp-0x30]
  41eac0:	mov    rsi,QWORD PTR [rdx+0x18]
  41eac4:	sub    rsi,rcx
  41eac7:	mov    QWORD PTR [rdx+0x18],rsi
  41eacb:	mov    rcx,QWORD PTR [rbp-0x30]
  41eacf:	mov    rcx,QWORD PTR [rcx+0x10]
  41ead3:	mov    QWORD PTR [rbp-0x38],rcx
  41ead7:	jmp    41ebfa <flatcc_emitter@@Base+0x1aa>
  41eadc:	mov    eax,DWORD PTR [rbp-0x1c]
  41eadf:	mov    rcx,QWORD PTR [rbp-0x18]
  41eae3:	movsxd rdx,eax
  41eae6:	shl    rdx,0x4
  41eaea:	add    rcx,rdx
  41eaed:	mov    QWORD PTR [rbp-0x18],rcx
  41eaf1:	mov    eax,DWORD PTR [rbp-0x1c]
  41eaf4:	mov    ecx,eax
  41eaf6:	add    ecx,0xffffffff
  41eaf9:	mov    DWORD PTR [rbp-0x1c],ecx
  41eafc:	cmp    eax,0x0
  41eaff:	je     41eb45 <flatcc_emitter@@Base+0xf5>
  41eb05:	mov    rax,QWORD PTR [rbp-0x18]
  41eb09:	add    rax,0xfffffffffffffff0
  41eb0f:	mov    QWORD PTR [rbp-0x18],rax
  41eb13:	mov    rdi,QWORD PTR [rbp-0x30]
  41eb17:	mov    rax,QWORD PTR [rbp-0x18]
  41eb1b:	mov    rsi,QWORD PTR [rax]
  41eb1e:	mov    rax,QWORD PTR [rbp-0x18]
  41eb22:	mov    rdx,QWORD PTR [rax+0x8]
  41eb26:	call   41ec60 <flatcc_emitter@@Base+0x210>
  41eb2b:	cmp    eax,0x0
  41eb2e:	je     41eb40 <flatcc_emitter@@Base+0xf0>
  41eb34:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41eb3b:	jmp    41ec55 <flatcc_emitter@@Base+0x205>
  41eb40:	jmp    41eaf1 <flatcc_emitter@@Base+0xa1>
  41eb45:	jmp    41ebee <flatcc_emitter@@Base+0x19e>
  41eb4a:	mov    rax,QWORD PTR [rbp-0x28]
  41eb4e:	mov    rcx,QWORD PTR [rbp-0x30]
  41eb52:	cmp    rax,QWORD PTR [rcx+0x28]
  41eb56:	ja     41eb90 <flatcc_emitter@@Base+0x140>
  41eb5c:	mov    rax,QWORD PTR [rbp-0x30]
  41eb60:	mov    rax,QWORD PTR [rax+0x20]
  41eb64:	mov    QWORD PTR [rbp-0x38],rax
  41eb68:	mov    rax,QWORD PTR [rbp-0x28]
  41eb6c:	mov    rcx,QWORD PTR [rbp-0x30]
  41eb70:	add    rax,QWORD PTR [rcx+0x20]
  41eb74:	mov    QWORD PTR [rcx+0x20],rax
  41eb78:	mov    rax,QWORD PTR [rbp-0x28]
  41eb7c:	mov    rcx,QWORD PTR [rbp-0x30]
  41eb80:	mov    rdx,QWORD PTR [rcx+0x28]
  41eb84:	sub    rdx,rax
  41eb87:	mov    QWORD PTR [rcx+0x28],rdx
  41eb8b:	jmp    41ebfa <flatcc_emitter@@Base+0x1aa>
  41eb90:	jmp    41eb95 <flatcc_emitter@@Base+0x145>
  41eb95:	mov    eax,DWORD PTR [rbp-0x1c]
  41eb98:	mov    ecx,eax
  41eb9a:	add    ecx,0xffffffff
  41eb9d:	mov    DWORD PTR [rbp-0x1c],ecx
  41eba0:	cmp    eax,0x0
  41eba3:	je     41ebe9 <flatcc_emitter@@Base+0x199>
  41eba9:	mov    rdi,QWORD PTR [rbp-0x30]
  41ebad:	mov    rax,QWORD PTR [rbp-0x18]
  41ebb1:	mov    rsi,QWORD PTR [rax]
  41ebb4:	mov    rax,QWORD PTR [rbp-0x18]
  41ebb8:	mov    rdx,QWORD PTR [rax+0x8]
  41ebbc:	call   41ed60 <flatcc_emitter@@Base+0x310>
  41ebc1:	cmp    eax,0x0
  41ebc4:	je     41ebd6 <flatcc_emitter@@Base+0x186>
  41ebca:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ebd1:	jmp    41ec55 <flatcc_emitter@@Base+0x205>
  41ebd6:	mov    rax,QWORD PTR [rbp-0x18]
  41ebda:	add    rax,0x10
  41ebe0:	mov    QWORD PTR [rbp-0x18],rax
  41ebe4:	jmp    41eb95 <flatcc_emitter@@Base+0x145>
  41ebe9:	jmp    41ebee <flatcc_emitter@@Base+0x19e>
  41ebee:	mov    DWORD PTR [rbp-0x4],0x0
  41ebf5:	jmp    41ec55 <flatcc_emitter@@Base+0x205>
  41ebfa:	jmp    41ebff <flatcc_emitter@@Base+0x1af>
  41ebff:	mov    eax,DWORD PTR [rbp-0x1c]
  41ec02:	mov    ecx,eax
  41ec04:	add    ecx,0xffffffff
  41ec07:	mov    DWORD PTR [rbp-0x1c],ecx
  41ec0a:	cmp    eax,0x0
  41ec0d:	je     41ec4e <flatcc_emitter@@Base+0x1fe>
  41ec13:	mov    rdi,QWORD PTR [rbp-0x38]
  41ec17:	mov    rax,QWORD PTR [rbp-0x18]
  41ec1b:	mov    rsi,QWORD PTR [rax]
  41ec1e:	mov    rax,QWORD PTR [rbp-0x18]
  41ec22:	mov    rdx,QWORD PTR [rax+0x8]
  41ec26:	call   4040f0 <memcpy@plt>
  41ec2b:	mov    rax,QWORD PTR [rbp-0x18]
  41ec2f:	mov    rax,QWORD PTR [rax+0x8]
  41ec33:	add    rax,QWORD PTR [rbp-0x38]
  41ec37:	mov    QWORD PTR [rbp-0x38],rax
  41ec3b:	mov    rax,QWORD PTR [rbp-0x18]
  41ec3f:	add    rax,0x10
  41ec45:	mov    QWORD PTR [rbp-0x18],rax
  41ec49:	jmp    41ebff <flatcc_emitter@@Base+0x1af>
  41ec4e:	mov    DWORD PTR [rbp-0x4],0x0
  41ec55:	mov    eax,DWORD PTR [rbp-0x4]
  41ec58:	add    rsp,0x40
  41ec5c:	pop    rbp
  41ec5d:	ret    
  41ec5e:	xchg   ax,ax
  41ec60:	push   rbp
  41ec61:	mov    rbp,rsp
  41ec64:	sub    rsp,0x30
  41ec68:	mov    QWORD PTR [rbp-0x10],rdi
  41ec6c:	mov    QWORD PTR [rbp-0x18],rsi
  41ec70:	mov    QWORD PTR [rbp-0x20],rdx
  41ec74:	mov    rax,QWORD PTR [rbp-0x20]
  41ec78:	add    rax,QWORD PTR [rbp-0x18]
  41ec7c:	mov    QWORD PTR [rbp-0x18],rax
  41ec80:	cmp    QWORD PTR [rbp-0x20],0x0
  41ec85:	je     41ed4f <flatcc_emitter@@Base+0x2ff>
  41ec8b:	mov    rax,QWORD PTR [rbp-0x20]
  41ec8f:	mov    QWORD PTR [rbp-0x28],rax
  41ec93:	mov    rax,QWORD PTR [rbp-0x28]
  41ec97:	mov    rcx,QWORD PTR [rbp-0x10]
  41ec9b:	cmp    rax,QWORD PTR [rcx+0x18]
  41ec9f:	jbe    41ece4 <flatcc_emitter@@Base+0x294>
  41eca5:	mov    rax,QWORD PTR [rbp-0x10]
  41eca9:	mov    rax,QWORD PTR [rax+0x18]
  41ecad:	mov    QWORD PTR [rbp-0x28],rax
  41ecb1:	cmp    QWORD PTR [rbp-0x28],0x0
  41ecb6:	jne    41ecdf <flatcc_emitter@@Base+0x28f>
  41ecbc:	mov    rdi,QWORD PTR [rbp-0x10]
  41ecc0:	call   41ef90 <flatcc_emitter_copy_buffer@@Base+0x150>
  41ecc5:	cmp    eax,0x0
  41ecc8:	je     41ecda <flatcc_emitter@@Base+0x28a>
  41ecce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ecd5:	jmp    41ed56 <flatcc_emitter@@Base+0x306>
  41ecda:	jmp    41ec80 <flatcc_emitter@@Base+0x230>
  41ecdf:	jmp    41ece4 <flatcc_emitter@@Base+0x294>
  41ece4:	xor    eax,eax
  41ece6:	mov    ecx,eax
  41ece8:	mov    rdx,QWORD PTR [rbp-0x28]
  41ecec:	mov    rsi,QWORD PTR [rbp-0x10]
  41ecf0:	mov    rdi,QWORD PTR [rsi+0x10]
  41ecf4:	mov    r8,rcx
  41ecf7:	sub    r8,rdx
  41ecfa:	add    rdi,r8
  41ecfd:	mov    QWORD PTR [rsi+0x10],rdi
  41ed01:	mov    rdx,QWORD PTR [rbp-0x28]
  41ed05:	mov    rsi,QWORD PTR [rbp-0x10]
  41ed09:	mov    rdi,QWORD PTR [rsi+0x18]
  41ed0d:	sub    rdi,rdx
  41ed10:	mov    QWORD PTR [rsi+0x18],rdi
  41ed14:	mov    rdx,QWORD PTR [rbp-0x28]
  41ed18:	mov    rsi,QWORD PTR [rbp-0x18]
  41ed1c:	sub    rcx,rdx
  41ed1f:	add    rsi,rcx
  41ed22:	mov    QWORD PTR [rbp-0x18],rsi
  41ed26:	mov    rcx,QWORD PTR [rbp-0x28]
  41ed2a:	mov    rdx,QWORD PTR [rbp-0x20]
  41ed2e:	sub    rdx,rcx
  41ed31:	mov    QWORD PTR [rbp-0x20],rdx
  41ed35:	mov    rcx,QWORD PTR [rbp-0x10]
  41ed39:	mov    rdi,QWORD PTR [rcx+0x10]
  41ed3d:	mov    rsi,QWORD PTR [rbp-0x18]
  41ed41:	mov    rdx,QWORD PTR [rbp-0x28]
  41ed45:	call   4040f0 <memcpy@plt>
  41ed4a:	jmp    41ec80 <flatcc_emitter@@Base+0x230>
  41ed4f:	mov    DWORD PTR [rbp-0x4],0x0
  41ed56:	mov    eax,DWORD PTR [rbp-0x4]
  41ed59:	add    rsp,0x30
  41ed5d:	pop    rbp
  41ed5e:	ret    
  41ed5f:	nop
  41ed60:	push   rbp
  41ed61:	mov    rbp,rsp
  41ed64:	sub    rsp,0x30
  41ed68:	mov    QWORD PTR [rbp-0x10],rdi
  41ed6c:	mov    QWORD PTR [rbp-0x18],rsi
  41ed70:	mov    QWORD PTR [rbp-0x20],rdx
  41ed74:	cmp    QWORD PTR [rbp-0x20],0x0
  41ed79:	je     41ee30 <flatcc_emitter@@Base+0x3e0>
  41ed7f:	mov    rax,QWORD PTR [rbp-0x20]
  41ed83:	mov    QWORD PTR [rbp-0x28],rax
  41ed87:	mov    rax,QWORD PTR [rbp-0x28]
  41ed8b:	mov    rcx,QWORD PTR [rbp-0x10]
  41ed8f:	cmp    rax,QWORD PTR [rcx+0x28]
  41ed93:	jbe    41edd8 <flatcc_emitter@@Base+0x388>
  41ed99:	mov    rax,QWORD PTR [rbp-0x10]
  41ed9d:	mov    rax,QWORD PTR [rax+0x28]
  41eda1:	mov    QWORD PTR [rbp-0x28],rax
  41eda5:	cmp    QWORD PTR [rbp-0x28],0x0
  41edaa:	jne    41edd3 <flatcc_emitter@@Base+0x383>
  41edb0:	mov    rdi,QWORD PTR [rbp-0x10]
  41edb4:	call   41f1b0 <flatcc_emitter_copy_buffer@@Base+0x370>
  41edb9:	cmp    eax,0x0
  41edbc:	je     41edce <flatcc_emitter@@Base+0x37e>
  41edc2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41edc9:	jmp    41ee37 <flatcc_emitter@@Base+0x3e7>
  41edce:	jmp    41ed74 <flatcc_emitter@@Base+0x324>
  41edd3:	jmp    41edd8 <flatcc_emitter@@Base+0x388>
  41edd8:	mov    rax,QWORD PTR [rbp-0x10]
  41eddc:	mov    rdi,QWORD PTR [rax+0x20]
  41ede0:	mov    rsi,QWORD PTR [rbp-0x18]
  41ede4:	mov    rdx,QWORD PTR [rbp-0x28]
  41ede8:	call   4040f0 <memcpy@plt>
  41eded:	mov    rax,QWORD PTR [rbp-0x28]
  41edf1:	mov    rcx,QWORD PTR [rbp-0x20]
  41edf5:	sub    rcx,rax
  41edf8:	mov    QWORD PTR [rbp-0x20],rcx
  41edfc:	mov    rax,QWORD PTR [rbp-0x28]
  41ee00:	add    rax,QWORD PTR [rbp-0x18]
  41ee04:	mov    QWORD PTR [rbp-0x18],rax
  41ee08:	mov    rax,QWORD PTR [rbp-0x28]
  41ee0c:	mov    rcx,QWORD PTR [rbp-0x10]
  41ee10:	add    rax,QWORD PTR [rcx+0x20]
  41ee14:	mov    QWORD PTR [rcx+0x20],rax
  41ee18:	mov    rax,QWORD PTR [rbp-0x28]
  41ee1c:	mov    rcx,QWORD PTR [rbp-0x10]
  41ee20:	mov    rdx,QWORD PTR [rcx+0x28]
  41ee24:	sub    rdx,rax
  41ee27:	mov    QWORD PTR [rcx+0x28],rdx
  41ee2b:	jmp    41ed74 <flatcc_emitter@@Base+0x324>
  41ee30:	mov    DWORD PTR [rbp-0x4],0x0
  41ee37:	mov    eax,DWORD PTR [rbp-0x4]
  41ee3a:	add    rsp,0x30
  41ee3e:	pop    rbp
  41ee3f:	ret    

000000000041ee40 <flatcc_emitter_copy_buffer@@Base>:
  41ee40:	push   rbp
  41ee41:	mov    rbp,rsp
  41ee44:	sub    rsp,0x30
  41ee48:	mov    QWORD PTR [rbp-0x10],rdi
  41ee4c:	mov    QWORD PTR [rbp-0x18],rsi
  41ee50:	mov    QWORD PTR [rbp-0x20],rdx
  41ee54:	mov    rax,QWORD PTR [rbp-0x20]
  41ee58:	mov    rcx,QWORD PTR [rbp-0x10]
  41ee5c:	cmp    rax,QWORD PTR [rcx+0x30]
  41ee60:	jae    41ee73 <flatcc_emitter_copy_buffer@@Base+0x33>
  41ee66:	mov    QWORD PTR [rbp-0x8],0x0
  41ee6e:	jmp    41ef78 <flatcc_emitter_copy_buffer@@Base+0x138>
  41ee73:	mov    rax,QWORD PTR [rbp-0x10]
  41ee77:	cmp    QWORD PTR [rax],0x0
  41ee7b:	jne    41ee8e <flatcc_emitter_copy_buffer@@Base+0x4e>
  41ee81:	mov    QWORD PTR [rbp-0x8],0x0
  41ee89:	jmp    41ef78 <flatcc_emitter_copy_buffer@@Base+0x138>
  41ee8e:	mov    rax,QWORD PTR [rbp-0x10]
  41ee92:	mov    rax,QWORD PTR [rax]
  41ee95:	mov    rcx,QWORD PTR [rbp-0x10]
  41ee99:	cmp    rax,QWORD PTR [rcx+0x8]
  41ee9d:	jne    41eec9 <flatcc_emitter_copy_buffer@@Base+0x89>
  41eea3:	mov    rdi,QWORD PTR [rbp-0x18]
  41eea7:	mov    rax,QWORD PTR [rbp-0x10]
  41eeab:	mov    rsi,QWORD PTR [rax+0x10]
  41eeaf:	mov    rax,QWORD PTR [rbp-0x10]
  41eeb3:	mov    rdx,QWORD PTR [rax+0x30]
  41eeb7:	call   4040f0 <memcpy@plt>
  41eebc:	mov    rax,QWORD PTR [rbp-0x18]
  41eec0:	mov    QWORD PTR [rbp-0x8],rax
  41eec4:	jmp    41ef78 <flatcc_emitter_copy_buffer@@Base+0x138>
  41eec9:	mov    rax,QWORD PTR [rbp-0x10]
  41eecd:	mov    ecx,0xb80
  41eed2:	sub    rcx,QWORD PTR [rax+0x18]
  41eed6:	mov    QWORD PTR [rbp-0x30],rcx
  41eeda:	mov    rdi,QWORD PTR [rbp-0x18]
  41eede:	mov    rax,QWORD PTR [rbp-0x10]
  41eee2:	mov    rsi,QWORD PTR [rax+0x10]
  41eee6:	mov    rdx,QWORD PTR [rbp-0x30]
  41eeea:	call   4040f0 <memcpy@plt>
  41eeef:	mov    rax,QWORD PTR [rbp-0x18]
  41eef3:	add    rax,QWORD PTR [rbp-0x30]
  41eef7:	mov    QWORD PTR [rbp-0x18],rax
  41eefb:	mov    rax,QWORD PTR [rbp-0x10]
  41eeff:	mov    rax,QWORD PTR [rax]
  41ef02:	mov    rax,QWORD PTR [rax+0xb80]
  41ef09:	mov    QWORD PTR [rbp-0x28],rax
  41ef0d:	mov    rax,QWORD PTR [rbp-0x28]
  41ef11:	mov    rcx,QWORD PTR [rbp-0x10]
  41ef15:	cmp    rax,QWORD PTR [rcx+0x8]
  41ef19:	je     41ef53 <flatcc_emitter_copy_buffer@@Base+0x113>
  41ef1f:	mov    rdi,QWORD PTR [rbp-0x18]
  41ef23:	mov    rsi,QWORD PTR [rbp-0x28]
  41ef27:	mov    edx,0xb80
  41ef2c:	call   4040f0 <memcpy@plt>
  41ef31:	mov    rax,QWORD PTR [rbp-0x18]
  41ef35:	add    rax,0xb80
  41ef3b:	mov    QWORD PTR [rbp-0x18],rax
  41ef3f:	mov    rax,QWORD PTR [rbp-0x28]
  41ef43:	mov    rax,QWORD PTR [rax+0xb80]
  41ef4a:	mov    QWORD PTR [rbp-0x28],rax
  41ef4e:	jmp    41ef0d <flatcc_emitter_copy_buffer@@Base+0xcd>
  41ef53:	mov    rdi,QWORD PTR [rbp-0x18]
  41ef57:	mov    rsi,QWORD PTR [rbp-0x28]
  41ef5b:	mov    rax,QWORD PTR [rbp-0x10]
  41ef5f:	mov    ecx,0xb80
  41ef64:	sub    rcx,QWORD PTR [rax+0x28]
  41ef68:	mov    rdx,rcx
  41ef6b:	call   4040f0 <memcpy@plt>
  41ef70:	mov    rax,QWORD PTR [rbp-0x18]
  41ef74:	mov    QWORD PTR [rbp-0x8],rax
  41ef78:	mov    rax,QWORD PTR [rbp-0x8]
  41ef7c:	add    rsp,0x30
  41ef80:	pop    rbp
  41ef81:	ret    
  41ef82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef8c:	nop    DWORD PTR [rax+0x0]
  41ef90:	push   rbp
  41ef91:	mov    rbp,rsp
  41ef94:	sub    rsp,0x20
  41ef98:	mov    QWORD PTR [rbp-0x10],rdi
  41ef9c:	mov    QWORD PTR [rbp-0x18],0x0
  41efa4:	mov    rax,QWORD PTR [rbp-0x10]
  41efa8:	cmp    QWORD PTR [rax],0x0
  41efac:	je     41f00f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  41efb2:	mov    rax,QWORD PTR [rbp-0x10]
  41efb6:	mov    rax,QWORD PTR [rax]
  41efb9:	mov    rax,QWORD PTR [rax+0xb88]
  41efc0:	mov    rcx,QWORD PTR [rbp-0x10]
  41efc4:	cmp    rax,QWORD PTR [rcx+0x8]
  41efc8:	je     41f00f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  41efce:	mov    rax,QWORD PTR [rbp-0x10]
  41efd2:	mov    rax,QWORD PTR [rax]
  41efd5:	mov    ecx,DWORD PTR [rax+0xb90]
  41efdb:	sub    ecx,0xb80
  41efe1:	mov    rax,QWORD PTR [rbp-0x10]
  41efe5:	mov    rax,QWORD PTR [rax]
  41efe8:	mov    rax,QWORD PTR [rax+0xb88]
  41efef:	mov    DWORD PTR [rax+0xb90],ecx
  41eff5:	mov    rax,QWORD PTR [rbp-0x10]
  41eff9:	mov    rax,QWORD PTR [rax]
  41effc:	mov    rax,QWORD PTR [rax+0xb88]
  41f003:	mov    rdx,QWORD PTR [rbp-0x10]
  41f007:	mov    QWORD PTR [rdx],rax
  41f00a:	jmp    41f14c <flatcc_emitter_copy_buffer@@Base+0x30c>
  41f00f:	mov    edi,0xb98
  41f014:	call   404100 <malloc@plt>
  41f019:	mov    QWORD PTR [rbp-0x18],rax
  41f01d:	cmp    rax,0x0
  41f021:	jne    41f033 <flatcc_emitter_copy_buffer@@Base+0x1f3>
  41f027:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f02e:	jmp    41f19b <flatcc_emitter_copy_buffer@@Base+0x35b>
  41f033:	mov    rax,QWORD PTR [rbp-0x10]
  41f037:	mov    rcx,QWORD PTR [rax+0x38]
  41f03b:	add    rcx,0xb80
  41f042:	mov    QWORD PTR [rax+0x38],rcx
  41f046:	mov    rax,QWORD PTR [rbp-0x10]
  41f04a:	cmp    QWORD PTR [rax],0x0
  41f04e:	je     41f0ae <flatcc_emitter_copy_buffer@@Base+0x26e>
  41f054:	mov    rax,QWORD PTR [rbp-0x10]
  41f058:	mov    rax,QWORD PTR [rax+0x8]
  41f05c:	mov    rcx,QWORD PTR [rbp-0x18]
  41f060:	mov    QWORD PTR [rcx+0xb88],rax
  41f067:	mov    rax,QWORD PTR [rbp-0x10]
  41f06b:	mov    rax,QWORD PTR [rax]
  41f06e:	mov    rcx,QWORD PTR [rbp-0x18]
  41f072:	mov    QWORD PTR [rcx+0xb80],rax
  41f079:	mov    rax,QWORD PTR [rbp-0x18]
  41f07d:	mov    rcx,QWORD PTR [rbp-0x10]
  41f081:	mov    rcx,QWORD PTR [rcx]
  41f084:	mov    QWORD PTR [rcx+0xb88],rax
  41f08b:	mov    rax,QWORD PTR [rbp-0x18]
  41f08f:	mov    rcx,QWORD PTR [rbp-0x10]
  41f093:	mov    rcx,QWORD PTR [rcx+0x8]
  41f097:	mov    QWORD PTR [rcx+0xb80],rax
  41f09e:	mov    rax,QWORD PTR [rbp-0x18]
  41f0a2:	mov    rcx,QWORD PTR [rbp-0x10]
  41f0a6:	mov    QWORD PTR [rcx],rax
  41f0a9:	jmp    41f14c <flatcc_emitter_copy_buffer@@Base+0x30c>
  41f0ae:	xor    eax,eax
  41f0b0:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0b4:	mov    rdx,QWORD PTR [rbp-0x10]
  41f0b8:	mov    QWORD PTR [rdx],rcx
  41f0bb:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0bf:	mov    rdx,QWORD PTR [rbp-0x10]
  41f0c3:	mov    QWORD PTR [rdx+0x8],rcx
  41f0c7:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0cb:	mov    rdx,QWORD PTR [rbp-0x18]
  41f0cf:	mov    QWORD PTR [rdx+0xb80],rcx
  41f0d6:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0da:	mov    rdx,QWORD PTR [rbp-0x18]
  41f0de:	mov    QWORD PTR [rdx+0xb88],rcx
  41f0e5:	mov    rcx,QWORD PTR [rbp-0x10]
  41f0e9:	mov    rcx,QWORD PTR [rcx]
  41f0ec:	add    rcx,0x5c0
  41f0f3:	mov    rdx,QWORD PTR [rbp-0x10]
  41f0f7:	mov    QWORD PTR [rdx+0x10],rcx
  41f0fb:	mov    rcx,QWORD PTR [rbp-0x10]
  41f0ff:	mov    rcx,QWORD PTR [rcx+0x10]
  41f103:	mov    rdx,QWORD PTR [rbp-0x10]
  41f107:	mov    QWORD PTR [rdx+0x20],rcx
  41f10b:	mov    rcx,QWORD PTR [rbp-0x10]
  41f10f:	mov    QWORD PTR [rcx+0x18],0x5c0
  41f117:	mov    rcx,QWORD PTR [rbp-0x10]
  41f11b:	mov    edx,0xb80
  41f120:	sub    rdx,QWORD PTR [rcx+0x18]
  41f124:	mov    rcx,QWORD PTR [rbp-0x10]
  41f128:	mov    QWORD PTR [rcx+0x28],rdx
  41f12c:	mov    rcx,QWORD PTR [rbp-0x10]
  41f130:	mov    rcx,QWORD PTR [rcx+0x18]
  41f134:	sub    eax,ecx
  41f136:	mov    rdx,QWORD PTR [rbp-0x18]
  41f13a:	mov    DWORD PTR [rdx+0xb90],eax
  41f140:	mov    DWORD PTR [rbp-0x4],0x0
  41f147:	jmp    41f19b <flatcc_emitter_copy_buffer@@Base+0x35b>
  41f14c:	mov    rax,QWORD PTR [rbp-0x10]
  41f150:	mov    rax,QWORD PTR [rax]
  41f153:	add    rax,0xb80
  41f159:	mov    rcx,QWORD PTR [rbp-0x10]
  41f15d:	mov    QWORD PTR [rcx+0x10],rax
  41f161:	mov    rax,QWORD PTR [rbp-0x10]
  41f165:	mov    QWORD PTR [rax+0x18],0xb80
  41f16d:	mov    rax,QWORD PTR [rbp-0x10]
  41f171:	mov    rax,QWORD PTR [rax]
  41f174:	mov    rax,QWORD PTR [rax+0xb80]
  41f17b:	mov    edx,DWORD PTR [rax+0xb90]
  41f181:	sub    edx,0xb80
  41f187:	mov    rax,QWORD PTR [rbp-0x10]
  41f18b:	mov    rax,QWORD PTR [rax]
  41f18e:	mov    DWORD PTR [rax+0xb90],edx
  41f194:	mov    DWORD PTR [rbp-0x4],0x0
  41f19b:	mov    eax,DWORD PTR [rbp-0x4]
  41f19e:	add    rsp,0x20
  41f1a2:	pop    rbp
  41f1a3:	ret    
  41f1a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1ae:	xchg   ax,ax
  41f1b0:	push   rbp
  41f1b1:	mov    rbp,rsp
  41f1b4:	sub    rsp,0x20
  41f1b8:	mov    QWORD PTR [rbp-0x10],rdi
  41f1bc:	mov    QWORD PTR [rbp-0x18],0x0
  41f1c4:	mov    rax,QWORD PTR [rbp-0x10]
  41f1c8:	cmp    QWORD PTR [rax+0x8],0x0
  41f1cd:	je     41f20b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  41f1d3:	mov    rax,QWORD PTR [rbp-0x10]
  41f1d7:	mov    rax,QWORD PTR [rax+0x8]
  41f1db:	mov    rax,QWORD PTR [rax+0xb80]
  41f1e2:	mov    rcx,QWORD PTR [rbp-0x10]
  41f1e6:	cmp    rax,QWORD PTR [rcx]
  41f1e9:	je     41f20b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  41f1ef:	mov    rax,QWORD PTR [rbp-0x10]
  41f1f3:	mov    rax,QWORD PTR [rax+0x8]
  41f1f7:	mov    rax,QWORD PTR [rax+0xb80]
  41f1fe:	mov    rcx,QWORD PTR [rbp-0x10]
  41f202:	mov    QWORD PTR [rcx+0x8],rax
  41f206:	jmp    41f34a <flatcc_emitter_copy_buffer@@Base+0x50a>
  41f20b:	mov    edi,0xb98
  41f210:	call   404100 <malloc@plt>
  41f215:	mov    QWORD PTR [rbp-0x18],rax
  41f219:	cmp    rax,0x0
  41f21d:	jne    41f22f <flatcc_emitter_copy_buffer@@Base+0x3ef>
  41f223:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f22a:	jmp    41f396 <flatcc_emitter_copy_buffer@@Base+0x556>
  41f22f:	mov    rax,QWORD PTR [rbp-0x10]
  41f233:	mov    rcx,QWORD PTR [rax+0x38]
  41f237:	add    rcx,0xb80
  41f23e:	mov    QWORD PTR [rax+0x38],rcx
  41f242:	mov    rax,QWORD PTR [rbp-0x10]
  41f246:	cmp    QWORD PTR [rax+0x8],0x0
  41f24b:	je     41f2ac <flatcc_emitter_copy_buffer@@Base+0x46c>
  41f251:	mov    rax,QWORD PTR [rbp-0x10]
  41f255:	mov    rax,QWORD PTR [rax+0x8]
  41f259:	mov    rcx,QWORD PTR [rbp-0x18]
  41f25d:	mov    QWORD PTR [rcx+0xb88],rax
  41f264:	mov    rax,QWORD PTR [rbp-0x10]
  41f268:	mov    rax,QWORD PTR [rax]
  41f26b:	mov    rcx,QWORD PTR [rbp-0x18]
  41f26f:	mov    QWORD PTR [rcx+0xb80],rax
  41f276:	mov    rax,QWORD PTR [rbp-0x18]
  41f27a:	mov    rcx,QWORD PTR [rbp-0x10]
  41f27e:	mov    rcx,QWORD PTR [rcx]
  41f281:	mov    QWORD PTR [rcx+0xb88],rax
  41f288:	mov    rax,QWORD PTR [rbp-0x18]
  41f28c:	mov    rcx,QWORD PTR [rbp-0x10]
  41f290:	mov    rcx,QWORD PTR [rcx+0x8]
  41f294:	mov    QWORD PTR [rcx+0xb80],rax
  41f29b:	mov    rax,QWORD PTR [rbp-0x18]
  41f29f:	mov    rcx,QWORD PTR [rbp-0x10]
  41f2a3:	mov    QWORD PTR [rcx+0x8],rax
  41f2a7:	jmp    41f34a <flatcc_emitter_copy_buffer@@Base+0x50a>
  41f2ac:	xor    eax,eax
  41f2ae:	mov    rcx,QWORD PTR [rbp-0x18]
  41f2b2:	mov    rdx,QWORD PTR [rbp-0x10]
  41f2b6:	mov    QWORD PTR [rdx],rcx
  41f2b9:	mov    rcx,QWORD PTR [rbp-0x18]
  41f2bd:	mov    rdx,QWORD PTR [rbp-0x10]
  41f2c1:	mov    QWORD PTR [rdx+0x8],rcx
  41f2c5:	mov    rcx,QWORD PTR [rbp-0x18]
  41f2c9:	mov    rdx,QWORD PTR [rbp-0x18]
  41f2cd:	mov    QWORD PTR [rdx+0xb80],rcx
  41f2d4:	mov    rcx,QWORD PTR [rbp-0x18]
  41f2d8:	mov    rdx,QWORD PTR [rbp-0x18]
  41f2dc:	mov    QWORD PTR [rdx+0xb88],rcx
  41f2e3:	mov    rcx,QWORD PTR [rbp-0x10]
  41f2e7:	mov    rcx,QWORD PTR [rcx]
  41f2ea:	add    rcx,0x5c0
  41f2f1:	mov    rdx,QWORD PTR [rbp-0x10]
  41f2f5:	mov    QWORD PTR [rdx+0x10],rcx
  41f2f9:	mov    rcx,QWORD PTR [rbp-0x10]
  41f2fd:	mov    rcx,QWORD PTR [rcx+0x10]
  41f301:	mov    rdx,QWORD PTR [rbp-0x10]
  41f305:	mov    QWORD PTR [rdx+0x20],rcx
  41f309:	mov    rcx,QWORD PTR [rbp-0x10]
  41f30d:	mov    QWORD PTR [rcx+0x18],0x5c0
  41f315:	mov    rcx,QWORD PTR [rbp-0x10]
  41f319:	mov    edx,0xb80
  41f31e:	sub    rdx,QWORD PTR [rcx+0x18]
  41f322:	mov    rcx,QWORD PTR [rbp-0x10]
  41f326:	mov    QWORD PTR [rcx+0x28],rdx
  41f32a:	mov    rcx,QWORD PTR [rbp-0x10]
  41f32e:	mov    rcx,QWORD PTR [rcx+0x18]
  41f332:	sub    eax,ecx
  41f334:	mov    rdx,QWORD PTR [rbp-0x18]
  41f338:	mov    DWORD PTR [rdx+0xb90],eax
  41f33e:	mov    DWORD PTR [rbp-0x4],0x0
  41f345:	jmp    41f396 <flatcc_emitter_copy_buffer@@Base+0x556>
  41f34a:	mov    rax,QWORD PTR [rbp-0x10]
  41f34e:	mov    rax,QWORD PTR [rax+0x8]
  41f352:	mov    rcx,QWORD PTR [rbp-0x10]
  41f356:	mov    QWORD PTR [rcx+0x20],rax
  41f35a:	mov    rax,QWORD PTR [rbp-0x10]
  41f35e:	mov    QWORD PTR [rax+0x28],0xb80
  41f366:	mov    rax,QWORD PTR [rbp-0x10]
  41f36a:	mov    rax,QWORD PTR [rax+0x8]
  41f36e:	mov    rax,QWORD PTR [rax+0xb88]
  41f375:	mov    edx,DWORD PTR [rax+0xb90]
  41f37b:	add    edx,0xb80
  41f381:	mov    rax,QWORD PTR [rbp-0x10]
  41f385:	mov    rax,QWORD PTR [rax+0x8]
  41f389:	mov    DWORD PTR [rax+0xb90],edx
  41f38f:	mov    DWORD PTR [rbp-0x4],0x0
  41f396:	mov    eax,DWORD PTR [rbp-0x4]
  41f399:	add    rsp,0x20
  41f39d:	pop    rbp
  41f39e:	ret    
  41f39f:	nop

000000000041f3a0 <flatcc_verify_error_string@@Base>:
  41f3a0:	push   rbp
  41f3a1:	mov    rbp,rsp
  41f3a4:	mov    DWORD PTR [rbp-0xc],edi
  41f3a7:	mov    eax,DWORD PTR [rbp-0xc]
  41f3aa:	mov    ecx,eax
  41f3ac:	mov    rdx,rcx
  41f3af:	sub    rdx,0x24
  41f3b3:	mov    QWORD PTR [rbp-0x18],rcx
  41f3b7:	ja     41f621 <flatcc_verify_error_string@@Base+0x281>
  41f3bd:	lea    rax,[rip+0x8c54]        # 428018 <flatcc_builder_padding_base@@Base+0x1468>
  41f3c4:	mov    rcx,QWORD PTR [rbp-0x18]
  41f3c8:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41f3cc:	add    rdx,rax
  41f3cf:	jmp    rdx
  41f3d1:	lea    rax,[rip+0x8cd4]        # 4280ac <flatcc_builder_padding_base@@Base+0x14fc>
  41f3d8:	mov    QWORD PTR [rbp-0x8],rax
  41f3dc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f3e1:	lea    rax,[rip+0x8cc7]        # 4280af <flatcc_builder_padding_base@@Base+0x14ff>
  41f3e8:	mov    QWORD PTR [rbp-0x8],rax
  41f3ec:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f3f1:	lea    rax,[rip+0x8ccf]        # 4280c7 <flatcc_builder_padding_base@@Base+0x1517>
  41f3f8:	mov    QWORD PTR [rbp-0x8],rax
  41f3fc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f401:	lea    rax,[rip+0x8cd3]        # 4280db <flatcc_builder_padding_base@@Base+0x152b>
  41f408:	mov    QWORD PTR [rbp-0x8],rax
  41f40c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f411:	lea    rax,[rip+0x8cdd]        # 4280f5 <flatcc_builder_padding_base@@Base+0x1545>
  41f418:	mov    QWORD PTR [rbp-0x8],rax
  41f41c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f421:	lea    rax,[rip+0x8ce4]        # 42810c <flatcc_builder_padding_base@@Base+0x155c>
  41f428:	mov    QWORD PTR [rbp-0x8],rax
  41f42c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f431:	lea    rax,[rip+0x8cf7]        # 42812f <flatcc_builder_padding_base@@Base+0x157f>
  41f438:	mov    QWORD PTR [rbp-0x8],rax
  41f43c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f441:	lea    rax,[rip+0x8d06]        # 42814e <flatcc_builder_padding_base@@Base+0x159e>
  41f448:	mov    QWORD PTR [rbp-0x8],rax
  41f44c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f451:	lea    rax,[rip+0x8d11]        # 428169 <flatcc_builder_padding_base@@Base+0x15b9>
  41f458:	mov    QWORD PTR [rbp-0x8],rax
  41f45c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f461:	lea    rax,[rip+0x8d15]        # 42817d <flatcc_builder_padding_base@@Base+0x15cd>
  41f468:	mov    QWORD PTR [rbp-0x8],rax
  41f46c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f471:	lea    rax,[rip+0x8d19]        # 428191 <flatcc_builder_padding_base@@Base+0x15e1>
  41f478:	mov    QWORD PTR [rbp-0x8],rax
  41f47c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f481:	lea    rax,[rip+0x8d1e]        # 4281a6 <flatcc_builder_padding_base@@Base+0x15f6>
  41f488:	mov    QWORD PTR [rbp-0x8],rax
  41f48c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f491:	lea    rax,[rip+0x8d1f]        # 4281b7 <flatcc_builder_padding_base@@Base+0x1607>
  41f498:	mov    QWORD PTR [rbp-0x8],rax
  41f49c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4a1:	lea    rax,[rip+0x8d27]        # 4281cf <flatcc_builder_padding_base@@Base+0x161f>
  41f4a8:	mov    QWORD PTR [rbp-0x8],rax
  41f4ac:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4b1:	lea    rax,[rip+0x8d30]        # 4281e8 <flatcc_builder_padding_base@@Base+0x1638>
  41f4b8:	mov    QWORD PTR [rbp-0x8],rax
  41f4bc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4c1:	lea    rax,[rip+0x8d3a]        # 428202 <flatcc_builder_padding_base@@Base+0x1652>
  41f4c8:	mov    QWORD PTR [rbp-0x8],rax
  41f4cc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4d1:	lea    rax,[rip+0x8d51]        # 428229 <flatcc_builder_padding_base@@Base+0x1679>
  41f4d8:	mov    QWORD PTR [rbp-0x8],rax
  41f4dc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4e1:	lea    rax,[rip+0x8d69]        # 428251 <flatcc_builder_padding_base@@Base+0x16a1>
  41f4e8:	mov    QWORD PTR [rbp-0x8],rax
  41f4ec:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f4f1:	lea    rax,[rip+0x8d81]        # 428279 <flatcc_builder_padding_base@@Base+0x16c9>
  41f4f8:	mov    QWORD PTR [rbp-0x8],rax
  41f4fc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f501:	lea    rax,[rip+0x8ec5]        # 4283cd <flatcc_builder_padding_base@@Base+0x181d>
  41f508:	mov    QWORD PTR [rbp-0x8],rax
  41f50c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f511:	lea    rax,[rip+0x8d75]        # 42828d <flatcc_builder_padding_base@@Base+0x16dd>
  41f518:	mov    QWORD PTR [rbp-0x8],rax
  41f51c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f521:	lea    rax,[rip+0x8d7d]        # 4282a5 <flatcc_builder_padding_base@@Base+0x16f5>
  41f528:	mov    QWORD PTR [rbp-0x8],rax
  41f52c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f531:	lea    rax,[rip+0x8d99]        # 4282d1 <flatcc_builder_padding_base@@Base+0x1721>
  41f538:	mov    QWORD PTR [rbp-0x8],rax
  41f53c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f541:	lea    rax,[rip+0x8dbc]        # 428304 <flatcc_builder_padding_base@@Base+0x1754>
  41f548:	mov    QWORD PTR [rbp-0x8],rax
  41f54c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f551:	lea    rax,[rip+0x8dd5]        # 42832d <flatcc_builder_padding_base@@Base+0x177d>
  41f558:	mov    QWORD PTR [rbp-0x8],rax
  41f55c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f561:	lea    rax,[rip+0x8dee]        # 428356 <flatcc_builder_padding_base@@Base+0x17a6>
  41f568:	mov    QWORD PTR [rbp-0x8],rax
  41f56c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f571:	lea    rax,[rip+0x8e0d]        # 428385 <flatcc_builder_padding_base@@Base+0x17d5>
  41f578:	mov    QWORD PTR [rbp-0x8],rax
  41f57c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f581:	lea    rax,[rip+0x8e11]        # 428399 <flatcc_builder_padding_base@@Base+0x17e9>
  41f588:	mov    QWORD PTR [rbp-0x8],rax
  41f58c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f591:	lea    rax,[rip+0x8e1c]        # 4283b4 <flatcc_builder_padding_base@@Base+0x1804>
  41f598:	mov    QWORD PTR [rbp-0x8],rax
  41f59c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5a1:	lea    rax,[rip+0x8e24]        # 4283cc <flatcc_builder_padding_base@@Base+0x181c>
  41f5a8:	mov    QWORD PTR [rbp-0x8],rax
  41f5ac:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5b1:	lea    rax,[rip+0x8e3c]        # 4283f4 <flatcc_builder_padding_base@@Base+0x1844>
  41f5b8:	mov    QWORD PTR [rbp-0x8],rax
  41f5bc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5c1:	lea    rax,[rip+0x8e52]        # 42841a <flatcc_builder_padding_base@@Base+0x186a>
  41f5c8:	mov    QWORD PTR [rbp-0x8],rax
  41f5cc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5d1:	lea    rax,[rip+0x8e57]        # 42842f <flatcc_builder_padding_base@@Base+0x187f>
  41f5d8:	mov    QWORD PTR [rbp-0x8],rax
  41f5dc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5e1:	lea    rax,[rip+0x8e6e]        # 428456 <flatcc_builder_padding_base@@Base+0x18a6>
  41f5e8:	mov    QWORD PTR [rbp-0x8],rax
  41f5ec:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f5f1:	lea    rax,[rip+0x8e83]        # 42847b <flatcc_builder_padding_base@@Base+0x18cb>
  41f5f8:	mov    QWORD PTR [rbp-0x8],rax
  41f5fc:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f601:	lea    rax,[rip+0x8ea7]        # 4284af <flatcc_builder_padding_base@@Base+0x18ff>
  41f608:	mov    QWORD PTR [rbp-0x8],rax
  41f60c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f611:	lea    rax,[rip+0x8eb1]        # 4284c9 <flatcc_builder_padding_base@@Base+0x1919>
  41f618:	mov    QWORD PTR [rbp-0x8],rax
  41f61c:	jmp    41f62c <flatcc_verify_error_string@@Base+0x28c>
  41f621:	lea    rax,[rip+0x8eaf]        # 4284d7 <flatcc_builder_padding_base@@Base+0x1927>
  41f628:	mov    QWORD PTR [rbp-0x8],rax
  41f62c:	mov    rax,QWORD PTR [rbp-0x8]
  41f630:	pop    rbp
  41f631:	ret    
  41f632:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f63c:	nop    DWORD PTR [rax+0x0]

000000000041f640 <flatcc_verify_field@@Base>:
  41f640:	push   rbp
  41f641:	mov    rbp,rsp
  41f644:	sub    rsp,0x30
  41f648:	xor    eax,eax
  41f64a:	mov    QWORD PTR [rbp-0x10],rdi
  41f64e:	mov    WORD PTR [rbp-0x12],si
  41f652:	mov    QWORD PTR [rbp-0x20],rdx
  41f656:	mov    WORD PTR [rbp-0x22],cx
  41f65a:	mov    rdi,QWORD PTR [rbp-0x10]
  41f65e:	mov    cx,WORD PTR [rbp-0x12]
  41f662:	mov    rdx,QWORD PTR [rbp-0x20]
  41f666:	movzx  esi,cx
  41f669:	mov    DWORD PTR [rbp-0x28],edx
  41f66c:	mov    edx,eax
  41f66e:	mov    ecx,DWORD PTR [rbp-0x28]
  41f671:	movzx  r8d,WORD PTR [rbp-0x22]
  41f676:	call   41f6c0 <flatcc_verify_field@@Base+0x80>
  41f67b:	cmp    eax,0x0
  41f67e:	je     41f6a7 <flatcc_verify_field@@Base+0x67>
  41f684:	xor    edx,edx
  41f686:	mov    rdi,QWORD PTR [rbp-0x10]
  41f68a:	mov    ax,WORD PTR [rbp-0x12]
  41f68e:	mov    rcx,QWORD PTR [rbp-0x20]
  41f692:	movzx  esi,ax
  41f695:	movzx  r8d,WORD PTR [rbp-0x22]
  41f69a:	call   41f6c0 <flatcc_verify_field@@Base+0x80>
  41f69f:	mov    DWORD PTR [rbp-0x4],eax
  41f6a2:	jmp    41f6ae <flatcc_verify_field@@Base+0x6e>
  41f6a7:	mov    DWORD PTR [rbp-0x4],0x0
  41f6ae:	mov    eax,DWORD PTR [rbp-0x4]
  41f6b1:	add    rsp,0x30
  41f6b5:	pop    rbp
  41f6b6:	ret    
  41f6b7:	nop    WORD PTR [rax+rax*1+0x0]
  41f6c0:	push   rbp
  41f6c1:	mov    rbp,rsp
  41f6c4:	sub    rsp,0x40
  41f6c8:	mov    QWORD PTR [rbp-0x10],rdi
  41f6cc:	mov    WORD PTR [rbp-0x12],si
  41f6d0:	mov    DWORD PTR [rbp-0x18],edx
  41f6d3:	mov    DWORD PTR [rbp-0x1c],ecx
  41f6d6:	mov    WORD PTR [rbp-0x1e],r8w
  41f6db:	mov    rax,QWORD PTR [rbp-0x10]
  41f6df:	mov    rax,QWORD PTR [rax]
  41f6e2:	mov    DWORD PTR [rbp-0x30],eax
  41f6e5:	mov    rdi,QWORD PTR [rbp-0x10]
  41f6e9:	movzx  esi,WORD PTR [rbp-0x12]
  41f6ed:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  41f6f2:	mov    WORD PTR [rbp-0x2a],ax
  41f6f6:	cmp    WORD PTR [rbp-0x2a],0x0
  41f6fb:	jne    41f73e <flatcc_verify_field@@Base+0xfe>
  41f701:	jmp    41f706 <flatcc_verify_field@@Base+0xc6>
  41f706:	cmp    DWORD PTR [rbp-0x18],0x0
  41f70a:	setne  al
  41f70d:	xor    al,0xff
  41f70f:	and    al,0x1
  41f711:	movzx  ecx,al
  41f714:	mov    DWORD PTR [rbp-0x34],ecx
  41f717:	cmp    DWORD PTR [rbp-0x34],0x0
  41f71b:	jne    41f72d <flatcc_verify_field@@Base+0xed>
  41f721:	mov    DWORD PTR [rbp-0x4],0x4
  41f728:	jmp    41f7fc <flatcc_verify_field@@Base+0x1bc>
  41f72d:	jmp    41f732 <flatcc_verify_field@@Base+0xf2>
  41f732:	mov    DWORD PTR [rbp-0x4],0x0
  41f739:	jmp    41f7fc <flatcc_verify_field@@Base+0x1bc>
  41f73e:	movzx  eax,WORD PTR [rbp-0x2a]
  41f742:	mov    DWORD PTR [rbp-0x24],eax
  41f745:	mov    eax,DWORD PTR [rbp-0x24]
  41f748:	add    eax,DWORD PTR [rbp-0x1c]
  41f74b:	mov    DWORD PTR [rbp-0x28],eax
  41f74e:	mov    eax,DWORD PTR [rbp-0x28]
  41f751:	mov    rcx,QWORD PTR [rbp-0x10]
  41f755:	movzx  edx,WORD PTR [rcx+0x1c]
  41f759:	cmp    eax,edx
  41f75b:	setbe  sil
  41f75f:	and    sil,0x1
  41f763:	movzx  eax,sil
  41f767:	mov    DWORD PTR [rbp-0x38],eax
  41f76a:	cmp    DWORD PTR [rbp-0x38],0x0
  41f76e:	jne    41f780 <flatcc_verify_field@@Base+0x140>
  41f774:	mov    DWORD PTR [rbp-0x4],0xd
  41f77b:	jmp    41f7fc <flatcc_verify_field@@Base+0x1bc>
  41f780:	jmp    41f785 <flatcc_verify_field@@Base+0x145>
  41f785:	jmp    41f78a <flatcc_verify_field@@Base+0x14a>
  41f78a:	mov    DWORD PTR [rbp-0x3c],0x1
  41f791:	cmp    DWORD PTR [rbp-0x3c],0x0
  41f795:	jne    41f7a7 <flatcc_verify_field@@Base+0x167>
  41f79b:	mov    DWORD PTR [rbp-0x4],0xe
  41f7a2:	jmp    41f7fc <flatcc_verify_field@@Base+0x1bc>
  41f7a7:	jmp    41f7ac <flatcc_verify_field@@Base+0x16c>
  41f7ac:	mov    rax,QWORD PTR [rbp-0x10]
  41f7b0:	mov    ecx,DWORD PTR [rax+0x18]
  41f7b3:	add    ecx,DWORD PTR [rbp-0x30]
  41f7b6:	add    ecx,DWORD PTR [rbp-0x24]
  41f7b9:	mov    DWORD PTR [rbp-0x24],ecx
  41f7bc:	mov    eax,DWORD PTR [rbp-0x24]
  41f7bf:	movzx  ecx,WORD PTR [rbp-0x1e]
  41f7c3:	sub    ecx,0x1
  41f7c6:	and    eax,ecx
  41f7c8:	cmp    eax,0x0
  41f7cb:	setne  dl
  41f7ce:	xor    dl,0xff
  41f7d1:	and    dl,0x1
  41f7d4:	movzx  eax,dl
  41f7d7:	mov    DWORD PTR [rbp-0x40],eax
  41f7da:	cmp    DWORD PTR [rbp-0x40],0x0
  41f7de:	jne    41f7f0 <flatcc_verify_field@@Base+0x1b0>
  41f7e4:	mov    DWORD PTR [rbp-0x4],0xc
  41f7eb:	jmp    41f7fc <flatcc_verify_field@@Base+0x1bc>
  41f7f0:	jmp    41f7f5 <flatcc_verify_field@@Base+0x1b5>
  41f7f5:	mov    DWORD PTR [rbp-0x4],0x0
  41f7fc:	mov    eax,DWORD PTR [rbp-0x4]
  41f7ff:	add    rsp,0x40
  41f803:	pop    rbp
  41f804:	ret    
  41f805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f80f:	nop

000000000041f810 <flatcc_verify_string_field@@Base>:
  41f810:	push   rbp
  41f811:	mov    rbp,rsp
  41f814:	sub    rsp,0x30
  41f818:	mov    QWORD PTR [rbp-0x10],rdi
  41f81c:	mov    WORD PTR [rbp-0x12],si
  41f820:	mov    DWORD PTR [rbp-0x18],edx
  41f823:	mov    rdi,QWORD PTR [rbp-0x10]
  41f827:	mov    ax,WORD PTR [rbp-0x12]
  41f82b:	mov    edx,DWORD PTR [rbp-0x18]
  41f82e:	movzx  esi,ax
  41f831:	lea    rcx,[rbp-0x1c]
  41f835:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  41f83a:	mov    DWORD PTR [rbp-0x20],eax
  41f83d:	cmp    DWORD PTR [rbp-0x20],0x0
  41f841:	jne    41f851 <flatcc_verify_string_field@@Base+0x41>
  41f847:	cmp    DWORD PTR [rbp-0x1c],0x0
  41f84b:	jne    41f85c <flatcc_verify_string_field@@Base+0x4c>
  41f851:	mov    eax,DWORD PTR [rbp-0x20]
  41f854:	mov    DWORD PTR [rbp-0x4],eax
  41f857:	jmp    41f8a4 <flatcc_verify_string_field@@Base+0x94>
  41f85c:	jmp    41f861 <flatcc_verify_string_field@@Base+0x51>
  41f861:	mov    rax,QWORD PTR [rbp-0x10]
  41f865:	mov    rdi,QWORD PTR [rax]
  41f868:	mov    rax,QWORD PTR [rbp-0x10]
  41f86c:	mov    esi,DWORD PTR [rax+0x8]
  41f86f:	mov    edx,DWORD PTR [rbp-0x1c]
  41f872:	mov    rax,QWORD PTR [rbp-0x10]
  41f876:	mov    rax,QWORD PTR [rax]
  41f879:	mov    ecx,DWORD PTR [rbp-0x1c]
  41f87c:	mov    QWORD PTR [rbp-0x28],rdi
  41f880:	mov    rdi,rax
  41f883:	mov    DWORD PTR [rbp-0x2c],esi
  41f886:	mov    esi,ecx
  41f888:	mov    DWORD PTR [rbp-0x30],edx
  41f88b:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41f890:	mov    rdi,QWORD PTR [rbp-0x28]
  41f894:	mov    esi,DWORD PTR [rbp-0x2c]
  41f897:	mov    edx,DWORD PTR [rbp-0x30]
  41f89a:	mov    ecx,eax
  41f89c:	call   41f9f0 <flatcc_verify_string_field@@Base+0x1e0>
  41f8a1:	mov    DWORD PTR [rbp-0x4],eax
  41f8a4:	mov    eax,DWORD PTR [rbp-0x4]
  41f8a7:	add    rsp,0x30
  41f8ab:	pop    rbp
  41f8ac:	ret    
  41f8ad:	nop    DWORD PTR [rax]
  41f8b0:	push   rbp
  41f8b1:	mov    rbp,rsp
  41f8b4:	sub    rsp,0x40
  41f8b8:	mov    QWORD PTR [rbp-0x10],rdi
  41f8bc:	mov    WORD PTR [rbp-0x12],si
  41f8c0:	mov    DWORD PTR [rbp-0x18],edx
  41f8c3:	mov    QWORD PTR [rbp-0x20],rcx
  41f8c7:	mov    rdi,QWORD PTR [rbp-0x10]
  41f8cb:	movzx  esi,WORD PTR [rbp-0x12]
  41f8cf:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  41f8d4:	mov    WORD PTR [rbp-0x2a],ax
  41f8d8:	cmp    WORD PTR [rbp-0x2a],0x0
  41f8dd:	jne    41f90f <flatcc_verify_string_field@@Base+0xff>
  41f8e3:	mov    rax,QWORD PTR [rbp-0x20]
  41f8e7:	mov    DWORD PTR [rax],0x0
  41f8ed:	cmp    DWORD PTR [rbp-0x18],0x0
  41f8f1:	je     41f903 <flatcc_verify_string_field@@Base+0xf3>
  41f8f7:	mov    DWORD PTR [rbp-0x4],0x4
  41f8fe:	jmp    41f9da <flatcc_verify_string_field@@Base+0x1ca>
  41f903:	mov    DWORD PTR [rbp-0x4],0x0
  41f90a:	jmp    41f9da <flatcc_verify_string_field@@Base+0x1ca>
  41f90f:	movzx  eax,WORD PTR [rbp-0x2a]
  41f913:	mov    DWORD PTR [rbp-0x24],eax
  41f916:	mov    eax,DWORD PTR [rbp-0x24]
  41f919:	mov    ecx,eax
  41f91b:	add    rcx,0x4
  41f922:	mov    DWORD PTR [rbp-0x28],ecx
  41f925:	mov    eax,DWORD PTR [rbp-0x28]
  41f928:	mov    rcx,QWORD PTR [rbp-0x10]
  41f92c:	movzx  edx,WORD PTR [rcx+0x1c]
  41f930:	cmp    eax,edx
  41f932:	setbe  sil
  41f936:	and    sil,0x1
  41f93a:	movzx  eax,sil
  41f93e:	mov    DWORD PTR [rbp-0x30],eax
  41f941:	cmp    DWORD PTR [rbp-0x30],0x0
  41f945:	jne    41f957 <flatcc_verify_string_field@@Base+0x147>
  41f94b:	mov    DWORD PTR [rbp-0x4],0xd
  41f952:	jmp    41f9da <flatcc_verify_string_field@@Base+0x1ca>
  41f957:	jmp    41f95c <flatcc_verify_string_field@@Base+0x14c>
  41f95c:	jmp    41f961 <flatcc_verify_string_field@@Base+0x151>
  41f961:	mov    DWORD PTR [rbp-0x34],0x1
  41f968:	cmp    DWORD PTR [rbp-0x34],0x0
  41f96c:	jne    41f97e <flatcc_verify_string_field@@Base+0x16e>
  41f972:	mov    DWORD PTR [rbp-0x4],0xe
  41f979:	jmp    41f9da <flatcc_verify_string_field@@Base+0x1ca>
  41f97e:	jmp    41f983 <flatcc_verify_string_field@@Base+0x173>
  41f983:	mov    rax,QWORD PTR [rbp-0x10]
  41f987:	mov    ecx,DWORD PTR [rax+0x18]
  41f98a:	add    ecx,DWORD PTR [rbp-0x24]
  41f98d:	mov    DWORD PTR [rbp-0x24],ecx
  41f990:	mov    eax,DWORD PTR [rbp-0x24]
  41f993:	mov    ecx,eax
  41f995:	and    rcx,0x3
  41f99c:	cmp    rcx,0x0
  41f9a0:	setne  dl
  41f9a3:	xor    dl,0xff
  41f9a6:	and    dl,0x1
  41f9a9:	movzx  eax,dl
  41f9ac:	mov    DWORD PTR [rbp-0x38],eax
  41f9af:	cmp    DWORD PTR [rbp-0x38],0x0
  41f9b3:	jne    41f9c5 <flatcc_verify_string_field@@Base+0x1b5>
  41f9b9:	mov    DWORD PTR [rbp-0x4],0xc
  41f9c0:	jmp    41f9da <flatcc_verify_string_field@@Base+0x1ca>
  41f9c5:	jmp    41f9ca <flatcc_verify_string_field@@Base+0x1ba>
  41f9ca:	mov    eax,DWORD PTR [rbp-0x24]
  41f9cd:	mov    rcx,QWORD PTR [rbp-0x20]
  41f9d1:	mov    DWORD PTR [rcx],eax
  41f9d3:	mov    DWORD PTR [rbp-0x4],0x0
  41f9da:	mov    eax,DWORD PTR [rbp-0x4]
  41f9dd:	add    rsp,0x40
  41f9e1:	pop    rbp
  41f9e2:	ret    
  41f9e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9ed:	nop    DWORD PTR [rax]
  41f9f0:	push   rbp
  41f9f1:	mov    rbp,rsp
  41f9f4:	sub    rsp,0x30
  41f9f8:	mov    QWORD PTR [rbp-0x10],rdi
  41f9fc:	mov    DWORD PTR [rbp-0x14],esi
  41f9ff:	mov    DWORD PTR [rbp-0x18],edx
  41fa02:	mov    DWORD PTR [rbp-0x1c],ecx
  41fa05:	mov    edi,DWORD PTR [rbp-0x14]
  41fa08:	mov    esi,DWORD PTR [rbp-0x18]
  41fa0b:	mov    edx,DWORD PTR [rbp-0x1c]
  41fa0e:	call   421590 <flatcc_verify_union_vector_field@@Base+0x470>
  41fa13:	mov    DWORD PTR [rbp-0x24],eax
  41fa16:	cmp    DWORD PTR [rbp-0x24],0x0
  41fa1a:	jne    41fa2c <flatcc_verify_string_field@@Base+0x21c>
  41fa20:	mov    DWORD PTR [rbp-0x4],0x11
  41fa27:	jmp    41fadb <flatcc_verify_string_field@@Base+0x2cb>
  41fa2c:	jmp    41fa31 <flatcc_verify_string_field@@Base+0x221>
  41fa31:	mov    eax,DWORD PTR [rbp-0x1c]
  41fa34:	add    eax,DWORD PTR [rbp-0x18]
  41fa37:	mov    DWORD PTR [rbp-0x18],eax
  41fa3a:	mov    rdi,QWORD PTR [rbp-0x10]
  41fa3e:	mov    esi,DWORD PTR [rbp-0x18]
  41fa41:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fa46:	mov    DWORD PTR [rbp-0x20],eax
  41fa49:	mov    eax,DWORD PTR [rbp-0x18]
  41fa4c:	mov    ecx,eax
  41fa4e:	add    rcx,0x4
  41fa55:	mov    DWORD PTR [rbp-0x18],ecx
  41fa58:	mov    eax,DWORD PTR [rbp-0x14]
  41fa5b:	sub    eax,DWORD PTR [rbp-0x18]
  41fa5e:	mov    ecx,DWORD PTR [rbp-0x20]
  41fa61:	add    ecx,0x1
  41fa64:	cmp    eax,ecx
  41fa66:	setae  dl
  41fa69:	and    dl,0x1
  41fa6c:	movzx  eax,dl
  41fa6f:	mov    DWORD PTR [rbp-0x28],eax
  41fa72:	cmp    DWORD PTR [rbp-0x28],0x0
  41fa76:	jne    41fa88 <flatcc_verify_string_field@@Base+0x278>
  41fa7c:	mov    DWORD PTR [rbp-0x4],0x8
  41fa83:	jmp    41fadb <flatcc_verify_string_field@@Base+0x2cb>
  41fa88:	jmp    41fa8d <flatcc_verify_string_field@@Base+0x27d>
  41fa8d:	jmp    41fa92 <flatcc_verify_string_field@@Base+0x282>
  41fa92:	mov    rax,QWORD PTR [rbp-0x10]
  41fa96:	mov    ecx,DWORD PTR [rbp-0x18]
  41fa99:	mov    edx,ecx
  41fa9b:	add    rax,rdx
  41fa9e:	mov    ecx,DWORD PTR [rbp-0x20]
  41faa1:	mov    edx,ecx
  41faa3:	movzx  ecx,BYTE PTR [rax+rdx*1]
  41faa7:	cmp    ecx,0x0
  41faaa:	sete   sil
  41faae:	and    sil,0x1
  41fab2:	movzx  ecx,sil
  41fab6:	mov    DWORD PTR [rbp-0x2c],ecx
  41fab9:	cmp    DWORD PTR [rbp-0x2c],0x0
  41fabd:	jne    41facf <flatcc_verify_string_field@@Base+0x2bf>
  41fac3:	mov    DWORD PTR [rbp-0x4],0x7
  41faca:	jmp    41fadb <flatcc_verify_string_field@@Base+0x2cb>
  41facf:	jmp    41fad4 <flatcc_verify_string_field@@Base+0x2c4>
  41fad4:	mov    DWORD PTR [rbp-0x4],0x0
  41fadb:	mov    eax,DWORD PTR [rbp-0x4]
  41fade:	add    rsp,0x30
  41fae2:	pop    rbp
  41fae3:	ret    
  41fae4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41faee:	xchg   ax,ax
  41faf0:	push   rbp
  41faf1:	mov    rbp,rsp
  41faf4:	sub    rsp,0x10
  41faf8:	mov    QWORD PTR [rbp-0x8],rdi
  41fafc:	mov    DWORD PTR [rbp-0xc],esi
  41faff:	mov    rax,QWORD PTR [rbp-0x8]
  41fb03:	mov    ecx,DWORD PTR [rbp-0xc]
  41fb06:	mov    edx,ecx
  41fb08:	add    rax,rdx
  41fb0b:	mov    rdi,rax
  41fb0e:	call   421600 <flatcc_verify_union_vector_field@@Base+0x4e0>
  41fb13:	add    rsp,0x10
  41fb17:	pop    rbp
  41fb18:	ret    
  41fb19:	nop    DWORD PTR [rax+0x0]

000000000041fb20 <flatcc_verify_vector_field@@Base>:
  41fb20:	push   rbp
  41fb21:	mov    rbp,rsp
  41fb24:	push   rbx
  41fb25:	sub    rsp,0x68
  41fb29:	mov    QWORD PTR [rbp-0x18],rdi
  41fb2d:	mov    WORD PTR [rbp-0x1a],si
  41fb31:	mov    DWORD PTR [rbp-0x20],edx
  41fb34:	mov    QWORD PTR [rbp-0x28],rcx
  41fb38:	mov    WORD PTR [rbp-0x2a],r8w
  41fb3d:	mov    QWORD PTR [rbp-0x38],r9
  41fb41:	mov    rdi,QWORD PTR [rbp-0x18]
  41fb45:	mov    ax,WORD PTR [rbp-0x1a]
  41fb49:	mov    edx,DWORD PTR [rbp-0x20]
  41fb4c:	movzx  esi,ax
  41fb4f:	lea    rcx,[rbp-0x3c]
  41fb53:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  41fb58:	mov    DWORD PTR [rbp-0x40],eax
  41fb5b:	cmp    DWORD PTR [rbp-0x40],0x0
  41fb5f:	jne    41fb6f <flatcc_verify_vector_field@@Base+0x4f>
  41fb65:	cmp    DWORD PTR [rbp-0x3c],0x0
  41fb69:	jne    41fb7a <flatcc_verify_vector_field@@Base+0x5a>
  41fb6f:	mov    eax,DWORD PTR [rbp-0x40]
  41fb72:	mov    DWORD PTR [rbp-0xc],eax
  41fb75:	jmp    41fbf6 <flatcc_verify_vector_field@@Base+0xd6>
  41fb7a:	jmp    41fb7f <flatcc_verify_vector_field@@Base+0x5f>
  41fb7f:	mov    rax,QWORD PTR [rbp-0x18]
  41fb83:	mov    rdi,QWORD PTR [rax]
  41fb86:	mov    rax,QWORD PTR [rbp-0x18]
  41fb8a:	mov    esi,DWORD PTR [rax+0x8]
  41fb8d:	mov    edx,DWORD PTR [rbp-0x3c]
  41fb90:	mov    rax,QWORD PTR [rbp-0x18]
  41fb94:	mov    rax,QWORD PTR [rax]
  41fb97:	mov    ecx,DWORD PTR [rbp-0x3c]
  41fb9a:	mov    QWORD PTR [rbp-0x48],rdi
  41fb9e:	mov    rdi,rax
  41fba1:	mov    DWORD PTR [rbp-0x4c],esi
  41fba4:	mov    esi,ecx
  41fba6:	mov    DWORD PTR [rbp-0x50],edx
  41fba9:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fbae:	mov    rdi,QWORD PTR [rbp-0x28]
  41fbb2:	mov    r8w,WORD PTR [rbp-0x2a]
  41fbb7:	mov    r9,QWORD PTR [rbp-0x38]
  41fbbb:	mov    r10,QWORD PTR [rbp-0x48]
  41fbbf:	mov    DWORD PTR [rbp-0x54],edi
  41fbc2:	mov    rdi,r10
  41fbc5:	mov    esi,DWORD PTR [rbp-0x4c]
  41fbc8:	mov    edx,DWORD PTR [rbp-0x50]
  41fbcb:	mov    ecx,eax
  41fbcd:	mov    eax,DWORD PTR [rbp-0x54]
  41fbd0:	mov    WORD PTR [rbp-0x56],r8w
  41fbd5:	mov    r8d,eax
  41fbd8:	mov    r11w,WORD PTR [rbp-0x56]
  41fbdd:	movzx  ebx,r11w
  41fbe1:	mov    DWORD PTR [rbp-0x5c],r9d
  41fbe5:	mov    r9d,ebx
  41fbe8:	mov    ebx,DWORD PTR [rbp-0x5c]
  41fbeb:	mov    DWORD PTR [rsp],ebx
  41fbee:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  41fbf3:	mov    DWORD PTR [rbp-0xc],eax
  41fbf6:	mov    eax,DWORD PTR [rbp-0xc]
  41fbf9:	add    rsp,0x68
  41fbfd:	pop    rbx
  41fbfe:	pop    rbp
  41fbff:	ret    
  41fc00:	push   rbp
  41fc01:	mov    rbp,rsp
  41fc04:	sub    rsp,0x40
  41fc08:	mov    eax,DWORD PTR [rbp+0x10]
  41fc0b:	mov    QWORD PTR [rbp-0x10],rdi
  41fc0f:	mov    DWORD PTR [rbp-0x14],esi
  41fc12:	mov    DWORD PTR [rbp-0x18],edx
  41fc15:	mov    DWORD PTR [rbp-0x1c],ecx
  41fc18:	mov    DWORD PTR [rbp-0x20],r8d
  41fc1c:	mov    WORD PTR [rbp-0x22],r9w
  41fc21:	mov    edi,DWORD PTR [rbp-0x14]
  41fc24:	mov    esi,DWORD PTR [rbp-0x18]
  41fc27:	mov    edx,DWORD PTR [rbp-0x1c]
  41fc2a:	movzx  ecx,WORD PTR [rbp-0x22]
  41fc2e:	call   421630 <flatcc_verify_union_vector_field@@Base+0x510>
  41fc33:	mov    DWORD PTR [rbp-0x2c],eax
  41fc36:	cmp    DWORD PTR [rbp-0x2c],0x0
  41fc3a:	jne    41fc4c <flatcc_verify_vector_field@@Base+0x12c>
  41fc40:	mov    DWORD PTR [rbp-0x4],0x10
  41fc47:	jmp    41fce7 <flatcc_verify_vector_field@@Base+0x1c7>
  41fc4c:	jmp    41fc51 <flatcc_verify_vector_field@@Base+0x131>
  41fc51:	mov    eax,DWORD PTR [rbp-0x1c]
  41fc54:	add    eax,DWORD PTR [rbp-0x18]
  41fc57:	mov    DWORD PTR [rbp-0x18],eax
  41fc5a:	mov    rdi,QWORD PTR [rbp-0x10]
  41fc5e:	mov    esi,DWORD PTR [rbp-0x18]
  41fc61:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fc66:	mov    DWORD PTR [rbp-0x28],eax
  41fc69:	mov    eax,DWORD PTR [rbp-0x18]
  41fc6c:	mov    ecx,eax
  41fc6e:	add    rcx,0x4
  41fc75:	mov    DWORD PTR [rbp-0x18],ecx
  41fc78:	mov    eax,DWORD PTR [rbp-0x28]
  41fc7b:	cmp    eax,DWORD PTR [rbp+0x10]
  41fc7e:	setbe  cl
  41fc81:	and    cl,0x1
  41fc84:	movzx  eax,cl
  41fc87:	mov    DWORD PTR [rbp-0x30],eax
  41fc8a:	cmp    DWORD PTR [rbp-0x30],0x0
  41fc8e:	jne    41fca0 <flatcc_verify_vector_field@@Base+0x180>
  41fc94:	mov    DWORD PTR [rbp-0x4],0x19
  41fc9b:	jmp    41fce7 <flatcc_verify_vector_field@@Base+0x1c7>
  41fca0:	jmp    41fca5 <flatcc_verify_vector_field@@Base+0x185>
  41fca5:	jmp    41fcaa <flatcc_verify_vector_field@@Base+0x18a>
  41fcaa:	mov    eax,DWORD PTR [rbp-0x14]
  41fcad:	sub    eax,DWORD PTR [rbp-0x18]
  41fcb0:	mov    ecx,DWORD PTR [rbp-0x28]
  41fcb3:	imul   ecx,DWORD PTR [rbp-0x20]
  41fcb7:	cmp    eax,ecx
  41fcb9:	setae  dl
  41fcbc:	and    dl,0x1
  41fcbf:	movzx  eax,dl
  41fcc2:	mov    DWORD PTR [rbp-0x34],eax
  41fcc5:	cmp    DWORD PTR [rbp-0x34],0x0
  41fcc9:	jne    41fcdb <flatcc_verify_vector_field@@Base+0x1bb>
  41fccf:	mov    DWORD PTR [rbp-0x4],0x1a
  41fcd6:	jmp    41fce7 <flatcc_verify_vector_field@@Base+0x1c7>
  41fcdb:	jmp    41fce0 <flatcc_verify_vector_field@@Base+0x1c0>
  41fce0:	mov    DWORD PTR [rbp-0x4],0x0
  41fce7:	mov    eax,DWORD PTR [rbp-0x4]
  41fcea:	add    rsp,0x40
  41fcee:	pop    rbp
  41fcef:	ret    

000000000041fcf0 <flatcc_verify_string_vector_field@@Base>:
  41fcf0:	push   rbp
  41fcf1:	mov    rbp,rsp
  41fcf4:	sub    rsp,0x30
  41fcf8:	mov    QWORD PTR [rbp-0x10],rdi
  41fcfc:	mov    WORD PTR [rbp-0x12],si
  41fd00:	mov    DWORD PTR [rbp-0x18],edx
  41fd03:	mov    rdi,QWORD PTR [rbp-0x10]
  41fd07:	mov    ax,WORD PTR [rbp-0x12]
  41fd0b:	mov    edx,DWORD PTR [rbp-0x18]
  41fd0e:	movzx  esi,ax
  41fd11:	lea    rcx,[rbp-0x1c]
  41fd15:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  41fd1a:	mov    DWORD PTR [rbp-0x20],eax
  41fd1d:	cmp    DWORD PTR [rbp-0x20],0x0
  41fd21:	jne    41fd31 <flatcc_verify_string_vector_field@@Base+0x41>
  41fd27:	cmp    DWORD PTR [rbp-0x1c],0x0
  41fd2b:	jne    41fd3c <flatcc_verify_string_vector_field@@Base+0x4c>
  41fd31:	mov    eax,DWORD PTR [rbp-0x20]
  41fd34:	mov    DWORD PTR [rbp-0x4],eax
  41fd37:	jmp    41fd84 <flatcc_verify_string_vector_field@@Base+0x94>
  41fd3c:	jmp    41fd41 <flatcc_verify_string_vector_field@@Base+0x51>
  41fd41:	mov    rax,QWORD PTR [rbp-0x10]
  41fd45:	mov    rdi,QWORD PTR [rax]
  41fd48:	mov    rax,QWORD PTR [rbp-0x10]
  41fd4c:	mov    esi,DWORD PTR [rax+0x8]
  41fd4f:	mov    edx,DWORD PTR [rbp-0x1c]
  41fd52:	mov    rax,QWORD PTR [rbp-0x10]
  41fd56:	mov    rax,QWORD PTR [rax]
  41fd59:	mov    ecx,DWORD PTR [rbp-0x1c]
  41fd5c:	mov    QWORD PTR [rbp-0x28],rdi
  41fd60:	mov    rdi,rax
  41fd63:	mov    DWORD PTR [rbp-0x2c],esi
  41fd66:	mov    esi,ecx
  41fd68:	mov    DWORD PTR [rbp-0x30],edx
  41fd6b:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fd70:	mov    rdi,QWORD PTR [rbp-0x28]
  41fd74:	mov    esi,DWORD PTR [rbp-0x2c]
  41fd77:	mov    edx,DWORD PTR [rbp-0x30]
  41fd7a:	mov    ecx,eax
  41fd7c:	call   41fd90 <flatcc_verify_string_vector_field@@Base+0xa0>
  41fd81:	mov    DWORD PTR [rbp-0x4],eax
  41fd84:	mov    eax,DWORD PTR [rbp-0x4]
  41fd87:	add    rsp,0x30
  41fd8b:	pop    rbp
  41fd8c:	ret    
  41fd8d:	nop    DWORD PTR [rax]
  41fd90:	push   rbp
  41fd91:	mov    rbp,rsp
  41fd94:	sub    rsp,0x50
  41fd98:	mov    QWORD PTR [rbp-0x10],rdi
  41fd9c:	mov    DWORD PTR [rbp-0x14],esi
  41fd9f:	mov    DWORD PTR [rbp-0x18],edx
  41fda2:	mov    DWORD PTR [rbp-0x1c],ecx
  41fda5:	mov    rdi,QWORD PTR [rbp-0x10]
  41fda9:	mov    esi,DWORD PTR [rbp-0x14]
  41fdac:	mov    edx,DWORD PTR [rbp-0x18]
  41fdaf:	mov    ecx,DWORD PTR [rbp-0x1c]
  41fdb2:	mov    eax,0x4
  41fdb7:	mov    r8d,eax
  41fdba:	mov    r9d,eax
  41fdbd:	mov    DWORD PTR [rsp],0x3fffffff
  41fdc4:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  41fdc9:	cmp    eax,0x0
  41fdcc:	je     41fdfe <flatcc_verify_string_vector_field@@Base+0x10e>
  41fdd2:	mov    rdi,QWORD PTR [rbp-0x10]
  41fdd6:	mov    esi,DWORD PTR [rbp-0x14]
  41fdd9:	mov    edx,DWORD PTR [rbp-0x18]
  41fddc:	mov    ecx,DWORD PTR [rbp-0x1c]
  41fddf:	mov    eax,0x4
  41fde4:	mov    r8d,eax
  41fde7:	mov    r9d,eax
  41fdea:	mov    DWORD PTR [rsp],0x3fffffff
  41fdf1:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  41fdf6:	mov    DWORD PTR [rbp-0x4],eax
  41fdf9:	jmp    41fede <flatcc_verify_string_vector_field@@Base+0x1ee>
  41fdfe:	mov    eax,DWORD PTR [rbp-0x1c]
  41fe01:	add    eax,DWORD PTR [rbp-0x18]
  41fe04:	mov    DWORD PTR [rbp-0x18],eax
  41fe07:	mov    rdi,QWORD PTR [rbp-0x10]
  41fe0b:	mov    esi,DWORD PTR [rbp-0x18]
  41fe0e:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fe13:	mov    DWORD PTR [rbp-0x24],eax
  41fe16:	mov    eax,DWORD PTR [rbp-0x18]
  41fe19:	mov    ecx,eax
  41fe1b:	add    rcx,0x4
  41fe22:	mov    DWORD PTR [rbp-0x18],ecx
  41fe25:	mov    DWORD PTR [rbp-0x20],0x0
  41fe2c:	mov    eax,DWORD PTR [rbp-0x20]
  41fe2f:	cmp    eax,DWORD PTR [rbp-0x24]
  41fe32:	jae    41fed7 <flatcc_verify_string_vector_field@@Base+0x1e7>
  41fe38:	mov    rdi,QWORD PTR [rbp-0x10]
  41fe3c:	mov    esi,DWORD PTR [rbp-0x14]
  41fe3f:	mov    edx,DWORD PTR [rbp-0x18]
  41fe42:	mov    rax,QWORD PTR [rbp-0x10]
  41fe46:	mov    ecx,DWORD PTR [rbp-0x18]
  41fe49:	mov    QWORD PTR [rbp-0x30],rdi
  41fe4d:	mov    rdi,rax
  41fe50:	mov    DWORD PTR [rbp-0x34],esi
  41fe53:	mov    esi,ecx
  41fe55:	mov    DWORD PTR [rbp-0x38],edx
  41fe58:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fe5d:	mov    rdi,QWORD PTR [rbp-0x30]
  41fe61:	mov    esi,DWORD PTR [rbp-0x34]
  41fe64:	mov    edx,DWORD PTR [rbp-0x38]
  41fe67:	mov    ecx,eax
  41fe69:	call   41f9f0 <flatcc_verify_string_field@@Base+0x1e0>
  41fe6e:	cmp    eax,0x0
  41fe71:	je     41feb5 <flatcc_verify_string_vector_field@@Base+0x1c5>
  41fe77:	mov    rdi,QWORD PTR [rbp-0x10]
  41fe7b:	mov    esi,DWORD PTR [rbp-0x14]
  41fe7e:	mov    edx,DWORD PTR [rbp-0x18]
  41fe81:	mov    rax,QWORD PTR [rbp-0x10]
  41fe85:	mov    ecx,DWORD PTR [rbp-0x18]
  41fe88:	mov    QWORD PTR [rbp-0x40],rdi
  41fe8c:	mov    rdi,rax
  41fe8f:	mov    DWORD PTR [rbp-0x44],esi
  41fe92:	mov    esi,ecx
  41fe94:	mov    DWORD PTR [rbp-0x48],edx
  41fe97:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41fe9c:	mov    rdi,QWORD PTR [rbp-0x40]
  41fea0:	mov    esi,DWORD PTR [rbp-0x44]
  41fea3:	mov    edx,DWORD PTR [rbp-0x48]
  41fea6:	mov    ecx,eax
  41fea8:	call   41f9f0 <flatcc_verify_string_field@@Base+0x1e0>
  41fead:	mov    DWORD PTR [rbp-0x4],eax
  41feb0:	jmp    41fede <flatcc_verify_string_vector_field@@Base+0x1ee>
  41feb5:	jmp    41feba <flatcc_verify_string_vector_field@@Base+0x1ca>
  41feba:	mov    eax,DWORD PTR [rbp-0x20]
  41febd:	add    eax,0x1
  41fec0:	mov    DWORD PTR [rbp-0x20],eax
  41fec3:	mov    eax,DWORD PTR [rbp-0x18]
  41fec6:	mov    ecx,eax
  41fec8:	add    rcx,0x4
  41fecf:	mov    DWORD PTR [rbp-0x18],ecx
  41fed2:	jmp    41fe2c <flatcc_verify_string_vector_field@@Base+0x13c>
  41fed7:	mov    DWORD PTR [rbp-0x4],0x0
  41fede:	mov    eax,DWORD PTR [rbp-0x4]
  41fee1:	add    rsp,0x50
  41fee5:	pop    rbp
  41fee6:	ret    
  41fee7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041fef0 <flatcc_verify_table_field@@Base>:
  41fef0:	push   rbp
  41fef1:	mov    rbp,rsp
  41fef4:	sub    rsp,0x40
  41fef8:	mov    QWORD PTR [rbp-0x10],rdi
  41fefc:	mov    WORD PTR [rbp-0x12],si
  41ff00:	mov    DWORD PTR [rbp-0x18],edx
  41ff03:	mov    QWORD PTR [rbp-0x20],rcx
  41ff07:	mov    rdi,QWORD PTR [rbp-0x10]
  41ff0b:	mov    ax,WORD PTR [rbp-0x12]
  41ff0f:	mov    edx,DWORD PTR [rbp-0x18]
  41ff12:	movzx  esi,ax
  41ff15:	lea    rcx,[rbp-0x24]
  41ff19:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  41ff1e:	mov    DWORD PTR [rbp-0x28],eax
  41ff21:	cmp    DWORD PTR [rbp-0x28],0x0
  41ff25:	jne    41ff35 <flatcc_verify_table_field@@Base+0x45>
  41ff2b:	cmp    DWORD PTR [rbp-0x24],0x0
  41ff2f:	jne    41ff40 <flatcc_verify_table_field@@Base+0x50>
  41ff35:	mov    eax,DWORD PTR [rbp-0x28]
  41ff38:	mov    DWORD PTR [rbp-0x4],eax
  41ff3b:	jmp    41ff94 <flatcc_verify_table_field@@Base+0xa4>
  41ff40:	jmp    41ff45 <flatcc_verify_table_field@@Base+0x55>
  41ff45:	mov    rax,QWORD PTR [rbp-0x10]
  41ff49:	mov    rdi,QWORD PTR [rax]
  41ff4c:	mov    rax,QWORD PTR [rbp-0x10]
  41ff50:	mov    esi,DWORD PTR [rax+0x8]
  41ff53:	mov    edx,DWORD PTR [rbp-0x24]
  41ff56:	mov    rax,QWORD PTR [rbp-0x10]
  41ff5a:	mov    rax,QWORD PTR [rax]
  41ff5d:	mov    ecx,DWORD PTR [rbp-0x24]
  41ff60:	mov    QWORD PTR [rbp-0x30],rdi
  41ff64:	mov    rdi,rax
  41ff67:	mov    DWORD PTR [rbp-0x34],esi
  41ff6a:	mov    esi,ecx
  41ff6c:	mov    DWORD PTR [rbp-0x38],edx
  41ff6f:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  41ff74:	mov    rdi,QWORD PTR [rbp-0x10]
  41ff78:	mov    r8d,DWORD PTR [rdi+0xc]
  41ff7c:	mov    r9,QWORD PTR [rbp-0x20]
  41ff80:	mov    rdi,QWORD PTR [rbp-0x30]
  41ff84:	mov    esi,DWORD PTR [rbp-0x34]
  41ff87:	mov    edx,DWORD PTR [rbp-0x38]
  41ff8a:	mov    ecx,eax
  41ff8c:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  41ff91:	mov    DWORD PTR [rbp-0x4],eax
  41ff94:	mov    eax,DWORD PTR [rbp-0x4]
  41ff97:	add    rsp,0x40
  41ff9b:	pop    rbp
  41ff9c:	ret    
  41ff9d:	nop    DWORD PTR [rax]
  41ffa0:	push   rbp
  41ffa1:	mov    rbp,rsp
  41ffa4:	sub    rsp,0x80
  41ffab:	mov    QWORD PTR [rbp-0x10],rdi
  41ffaf:	mov    DWORD PTR [rbp-0x14],esi
  41ffb2:	mov    DWORD PTR [rbp-0x18],edx
  41ffb5:	mov    DWORD PTR [rbp-0x1c],ecx
  41ffb8:	mov    DWORD PTR [rbp-0x20],r8d
  41ffbc:	mov    QWORD PTR [rbp-0x28],r9
  41ffc0:	mov    eax,DWORD PTR [rbp-0x20]
  41ffc3:	sub    eax,0x1
  41ffc6:	mov    DWORD PTR [rbp-0x44],eax
  41ffc9:	mov    DWORD PTR [rbp-0x54],eax
  41ffcc:	cmp    DWORD PTR [rbp-0x54],0x0
  41ffd0:	jne    41ffe2 <flatcc_verify_table_field@@Base+0xf2>
  41ffd6:	mov    DWORD PTR [rbp-0x4],0x3
  41ffdd:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  41ffe2:	jmp    41ffe7 <flatcc_verify_table_field@@Base+0xf7>
  41ffe7:	jmp    41ffec <flatcc_verify_table_field@@Base+0xfc>
  41ffec:	mov    edi,DWORD PTR [rbp-0x14]
  41ffef:	mov    esi,DWORD PTR [rbp-0x18]
  41fff2:	mov    edx,DWORD PTR [rbp-0x1c]
  41fff5:	call   421590 <flatcc_verify_union_vector_field@@Base+0x470>
  41fffa:	mov    DWORD PTR [rbp-0x58],eax
  41fffd:	cmp    DWORD PTR [rbp-0x58],0x0
  420001:	jne    420013 <flatcc_verify_table_field@@Base+0x123>
  420007:	mov    DWORD PTR [rbp-0x4],0xf
  42000e:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  420013:	jmp    420018 <flatcc_verify_table_field@@Base+0x128>
  420018:	mov    eax,DWORD PTR [rbp-0x18]
  42001b:	add    eax,DWORD PTR [rbp-0x1c]
  42001e:	mov    DWORD PTR [rbp-0x38],eax
  420021:	mov    eax,DWORD PTR [rbp-0x38]
  420024:	mov    rdi,QWORD PTR [rbp-0x10]
  420028:	mov    esi,DWORD PTR [rbp-0x38]
  42002b:	mov    DWORD PTR [rbp-0x74],eax
  42002e:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420033:	mov    ecx,DWORD PTR [rbp-0x74]
  420036:	sub    ecx,eax
  420038:	mov    DWORD PTR [rbp-0x2c],ecx
  42003b:	xor    eax,eax
  42003d:	cmp    DWORD PTR [rbp-0x2c],0x0
  420041:	mov    BYTE PTR [rbp-0x75],al
  420044:	jl     420063 <flatcc_verify_table_field@@Base+0x173>
  42004a:	mov    eax,DWORD PTR [rbp-0x2c]
  42004d:	mov    ecx,eax
  42004f:	and    rcx,0x1
  420056:	cmp    rcx,0x0
  42005a:	setne  dl
  42005d:	xor    dl,0xff
  420060:	mov    BYTE PTR [rbp-0x75],dl
  420063:	mov    al,BYTE PTR [rbp-0x75]
  420066:	and    al,0x1
  420068:	movzx  ecx,al
  42006b:	mov    DWORD PTR [rbp-0x5c],ecx
  42006e:	cmp    DWORD PTR [rbp-0x5c],0x0
  420072:	jne    420084 <flatcc_verify_table_field@@Base+0x194>
  420078:	mov    DWORD PTR [rbp-0x4],0x1d
  42007f:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  420084:	jmp    420089 <flatcc_verify_table_field@@Base+0x199>
  420089:	jmp    42008e <flatcc_verify_table_field@@Base+0x19e>
  42008e:	mov    eax,DWORD PTR [rbp-0x2c]
  420091:	mov    ecx,eax
  420093:	add    rcx,0x2
  42009a:	mov    eax,DWORD PTR [rbp-0x14]
  42009d:	mov    edx,eax
  42009f:	cmp    rcx,rdx
  4200a2:	setbe  sil
  4200a6:	and    sil,0x1
  4200aa:	movzx  eax,sil
  4200ae:	mov    DWORD PTR [rbp-0x60],eax
  4200b1:	cmp    DWORD PTR [rbp-0x60],0x0
  4200b5:	jne    4200c7 <flatcc_verify_table_field@@Base+0x1d7>
  4200bb:	mov    DWORD PTR [rbp-0x4],0x1b
  4200c2:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  4200c7:	jmp    4200cc <flatcc_verify_table_field@@Base+0x1dc>
  4200cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4200d0:	mov    esi,DWORD PTR [rbp-0x2c]
  4200d3:	call   4216f0 <flatcc_verify_union_vector_field@@Base+0x5d0>
  4200d8:	mov    WORD PTR [rbp-0x32],ax
  4200dc:	mov    ecx,DWORD PTR [rbp-0x2c]
  4200df:	movzx  edx,WORD PTR [rbp-0x32]
  4200e3:	add    ecx,edx
  4200e5:	mov    DWORD PTR [rbp-0x30],ecx
  4200e8:	xor    eax,eax
  4200ea:	mov    ecx,DWORD PTR [rbp-0x30]
  4200ed:	cmp    ecx,DWORD PTR [rbp-0x14]
  4200f0:	mov    BYTE PTR [rbp-0x76],al
  4200f3:	ja     420113 <flatcc_verify_table_field@@Base+0x223>
  4200f9:	movzx  eax,WORD PTR [rbp-0x32]
  4200fd:	mov    ecx,eax
  4200ff:	and    rcx,0x1
  420106:	cmp    rcx,0x0
  42010a:	setne  dl
  42010d:	xor    dl,0xff
  420110:	mov    BYTE PTR [rbp-0x76],dl
  420113:	mov    al,BYTE PTR [rbp-0x76]
  420116:	and    al,0x1
  420118:	movzx  ecx,al
  42011b:	mov    DWORD PTR [rbp-0x64],ecx
  42011e:	cmp    DWORD PTR [rbp-0x64],0x0
  420122:	jne    420134 <flatcc_verify_table_field@@Base+0x244>
  420128:	mov    DWORD PTR [rbp-0x4],0x1e
  42012f:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  420134:	jmp    420139 <flatcc_verify_table_field@@Base+0x249>
  420139:	jmp    42013e <flatcc_verify_table_field@@Base+0x24e>
  42013e:	mov    DWORD PTR [rbp-0x68],0x1
  420145:	cmp    DWORD PTR [rbp-0x68],0x0
  420149:	jne    42015b <flatcc_verify_table_field@@Base+0x26b>
  42014f:	mov    DWORD PTR [rbp-0x4],0x1f
  420156:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  42015b:	jmp    420160 <flatcc_verify_table_field@@Base+0x270>
  420160:	jmp    420165 <flatcc_verify_table_field@@Base+0x275>
  420165:	movzx  eax,WORD PTR [rbp-0x32]
  420169:	mov    ecx,eax
  42016b:	cmp    rcx,0x4
  42016f:	setae  dl
  420172:	and    dl,0x1
  420175:	movzx  eax,dl
  420178:	mov    DWORD PTR [rbp-0x6c],eax
  42017b:	cmp    DWORD PTR [rbp-0x6c],0x0
  42017f:	jne    420191 <flatcc_verify_table_field@@Base+0x2a1>
  420185:	mov    DWORD PTR [rbp-0x4],0x1c
  42018c:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  420191:	jmp    420196 <flatcc_verify_table_field@@Base+0x2a6>
  420196:	mov    rdi,QWORD PTR [rbp-0x10]
  42019a:	mov    eax,DWORD PTR [rbp-0x2c]
  42019d:	mov    ecx,eax
  42019f:	add    rcx,0x2
  4201a6:	mov    esi,ecx
  4201a8:	call   4216f0 <flatcc_verify_union_vector_field@@Base+0x5d0>
  4201ad:	mov    WORD PTR [rbp-0x34],ax
  4201b1:	mov    eax,DWORD PTR [rbp-0x14]
  4201b4:	sub    eax,DWORD PTR [rbp-0x38]
  4201b7:	movzx  ecx,WORD PTR [rbp-0x34]
  4201bb:	cmp    eax,ecx
  4201bd:	setae  dl
  4201c0:	and    dl,0x1
  4201c3:	movzx  eax,dl
  4201c6:	mov    DWORD PTR [rbp-0x70],eax
  4201c9:	cmp    DWORD PTR [rbp-0x70],0x0
  4201cd:	jne    4201df <flatcc_verify_table_field@@Base+0x2ef>
  4201d3:	mov    DWORD PTR [rbp-0x4],0x14
  4201da:	jmp    42020c <flatcc_verify_table_field@@Base+0x31c>
  4201df:	jmp    4201e4 <flatcc_verify_table_field@@Base+0x2f4>
  4201e4:	mov    rax,QWORD PTR [rbp-0x10]
  4201e8:	mov    ecx,DWORD PTR [rbp-0x2c]
  4201eb:	mov    edx,ecx
  4201ed:	add    rax,rdx
  4201f0:	mov    QWORD PTR [rbp-0x40],rax
  4201f4:	mov    rax,QWORD PTR [rbp-0x10]
  4201f8:	mov    QWORD PTR [rbp-0x50],rax
  4201fc:	mov    ecx,DWORD PTR [rbp-0x14]
  4201ff:	mov    DWORD PTR [rbp-0x48],ecx
  420202:	lea    rdi,[rbp-0x50]
  420206:	call   QWORD PTR [rbp-0x28]
  420209:	mov    DWORD PTR [rbp-0x4],eax
  42020c:	mov    eax,DWORD PTR [rbp-0x4]
  42020f:	add    rsp,0x80
  420216:	pop    rbp
  420217:	ret    
  420218:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420220 <flatcc_verify_table_vector_field@@Base>:
  420220:	push   rbp
  420221:	mov    rbp,rsp
  420224:	sub    rsp,0x40
  420228:	mov    QWORD PTR [rbp-0x10],rdi
  42022c:	mov    WORD PTR [rbp-0x12],si
  420230:	mov    DWORD PTR [rbp-0x18],edx
  420233:	mov    QWORD PTR [rbp-0x20],rcx
  420237:	mov    rdi,QWORD PTR [rbp-0x10]
  42023b:	mov    ax,WORD PTR [rbp-0x12]
  42023f:	mov    edx,DWORD PTR [rbp-0x18]
  420242:	movzx  esi,ax
  420245:	lea    rcx,[rbp-0x24]
  420249:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  42024e:	mov    DWORD PTR [rbp-0x28],eax
  420251:	cmp    DWORD PTR [rbp-0x28],0x0
  420255:	jne    420265 <flatcc_verify_table_vector_field@@Base+0x45>
  42025b:	cmp    DWORD PTR [rbp-0x24],0x0
  42025f:	jne    420270 <flatcc_verify_table_vector_field@@Base+0x50>
  420265:	mov    eax,DWORD PTR [rbp-0x28]
  420268:	mov    DWORD PTR [rbp-0x4],eax
  42026b:	jmp    4202c4 <flatcc_verify_table_vector_field@@Base+0xa4>
  420270:	jmp    420275 <flatcc_verify_table_vector_field@@Base+0x55>
  420275:	mov    rax,QWORD PTR [rbp-0x10]
  420279:	mov    rdi,QWORD PTR [rax]
  42027c:	mov    rax,QWORD PTR [rbp-0x10]
  420280:	mov    esi,DWORD PTR [rax+0x8]
  420283:	mov    edx,DWORD PTR [rbp-0x24]
  420286:	mov    rax,QWORD PTR [rbp-0x10]
  42028a:	mov    rax,QWORD PTR [rax]
  42028d:	mov    ecx,DWORD PTR [rbp-0x24]
  420290:	mov    QWORD PTR [rbp-0x30],rdi
  420294:	mov    rdi,rax
  420297:	mov    DWORD PTR [rbp-0x34],esi
  42029a:	mov    esi,ecx
  42029c:	mov    DWORD PTR [rbp-0x38],edx
  42029f:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  4202a4:	mov    rdi,QWORD PTR [rbp-0x10]
  4202a8:	mov    r8d,DWORD PTR [rdi+0xc]
  4202ac:	mov    r9,QWORD PTR [rbp-0x20]
  4202b0:	mov    rdi,QWORD PTR [rbp-0x30]
  4202b4:	mov    esi,DWORD PTR [rbp-0x34]
  4202b7:	mov    edx,DWORD PTR [rbp-0x38]
  4202ba:	mov    ecx,eax
  4202bc:	call   4202d0 <flatcc_verify_table_vector_field@@Base+0xb0>
  4202c1:	mov    DWORD PTR [rbp-0x4],eax
  4202c4:	mov    eax,DWORD PTR [rbp-0x4]
  4202c7:	add    rsp,0x40
  4202cb:	pop    rbp
  4202cc:	ret    
  4202cd:	nop    DWORD PTR [rax]
  4202d0:	push   rbp
  4202d1:	mov    rbp,rsp
  4202d4:	sub    rsp,0x60
  4202d8:	mov    QWORD PTR [rbp-0x10],rdi
  4202dc:	mov    DWORD PTR [rbp-0x14],esi
  4202df:	mov    DWORD PTR [rbp-0x18],edx
  4202e2:	mov    DWORD PTR [rbp-0x1c],ecx
  4202e5:	mov    DWORD PTR [rbp-0x20],r8d
  4202e9:	mov    QWORD PTR [rbp-0x28],r9
  4202ed:	mov    eax,DWORD PTR [rbp-0x20]
  4202f0:	mov    ecx,eax
  4202f2:	add    ecx,0xffffffff
  4202f5:	mov    DWORD PTR [rbp-0x20],ecx
  4202f8:	cmp    eax,0x0
  4202fb:	setg   dl
  4202fe:	and    dl,0x1
  420301:	movzx  eax,dl
  420304:	mov    DWORD PTR [rbp-0x34],eax
  420307:	cmp    DWORD PTR [rbp-0x34],0x0
  42030b:	jne    42031d <flatcc_verify_table_vector_field@@Base+0xfd>
  420311:	mov    DWORD PTR [rbp-0x4],0x3
  420318:	jmp    42046b <flatcc_verify_table_vector_field@@Base+0x24b>
  42031d:	jmp    420322 <flatcc_verify_table_vector_field@@Base+0x102>
  420322:	mov    rdi,QWORD PTR [rbp-0x10]
  420326:	mov    esi,DWORD PTR [rbp-0x14]
  420329:	mov    edx,DWORD PTR [rbp-0x18]
  42032c:	mov    ecx,DWORD PTR [rbp-0x1c]
  42032f:	mov    eax,0x4
  420334:	mov    r8d,eax
  420337:	mov    r9d,eax
  42033a:	mov    DWORD PTR [rsp],0x3fffffff
  420341:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  420346:	cmp    eax,0x0
  420349:	je     42037b <flatcc_verify_table_vector_field@@Base+0x15b>
  42034f:	mov    rdi,QWORD PTR [rbp-0x10]
  420353:	mov    esi,DWORD PTR [rbp-0x14]
  420356:	mov    edx,DWORD PTR [rbp-0x18]
  420359:	mov    ecx,DWORD PTR [rbp-0x1c]
  42035c:	mov    eax,0x4
  420361:	mov    r8d,eax
  420364:	mov    r9d,eax
  420367:	mov    DWORD PTR [rsp],0x3fffffff
  42036e:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  420373:	mov    DWORD PTR [rbp-0x4],eax
  420376:	jmp    42046b <flatcc_verify_table_vector_field@@Base+0x24b>
  42037b:	mov    eax,DWORD PTR [rbp-0x1c]
  42037e:	add    eax,DWORD PTR [rbp-0x18]
  420381:	mov    DWORD PTR [rbp-0x18],eax
  420384:	mov    rdi,QWORD PTR [rbp-0x10]
  420388:	mov    esi,DWORD PTR [rbp-0x18]
  42038b:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420390:	mov    DWORD PTR [rbp-0x30],eax
  420393:	mov    eax,DWORD PTR [rbp-0x18]
  420396:	mov    ecx,eax
  420398:	add    rcx,0x4
  42039f:	mov    DWORD PTR [rbp-0x18],ecx
  4203a2:	mov    DWORD PTR [rbp-0x2c],0x0
  4203a9:	mov    eax,DWORD PTR [rbp-0x2c]
  4203ac:	cmp    eax,DWORD PTR [rbp-0x30]
  4203af:	jae    420464 <flatcc_verify_table_vector_field@@Base+0x244>
  4203b5:	mov    rdi,QWORD PTR [rbp-0x10]
  4203b9:	mov    esi,DWORD PTR [rbp-0x14]
  4203bc:	mov    edx,DWORD PTR [rbp-0x18]
  4203bf:	mov    rax,QWORD PTR [rbp-0x10]
  4203c3:	mov    ecx,DWORD PTR [rbp-0x18]
  4203c6:	mov    QWORD PTR [rbp-0x40],rdi
  4203ca:	mov    rdi,rax
  4203cd:	mov    DWORD PTR [rbp-0x44],esi
  4203d0:	mov    esi,ecx
  4203d2:	mov    DWORD PTR [rbp-0x48],edx
  4203d5:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  4203da:	mov    r8d,DWORD PTR [rbp-0x20]
  4203de:	mov    r9,QWORD PTR [rbp-0x28]
  4203e2:	mov    rdi,QWORD PTR [rbp-0x40]
  4203e6:	mov    esi,DWORD PTR [rbp-0x44]
  4203e9:	mov    edx,DWORD PTR [rbp-0x48]
  4203ec:	mov    ecx,eax
  4203ee:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  4203f3:	cmp    eax,0x0
  4203f6:	je     420442 <flatcc_verify_table_vector_field@@Base+0x222>
  4203fc:	mov    rdi,QWORD PTR [rbp-0x10]
  420400:	mov    esi,DWORD PTR [rbp-0x14]
  420403:	mov    edx,DWORD PTR [rbp-0x18]
  420406:	mov    rax,QWORD PTR [rbp-0x10]
  42040a:	mov    ecx,DWORD PTR [rbp-0x18]
  42040d:	mov    QWORD PTR [rbp-0x50],rdi
  420411:	mov    rdi,rax
  420414:	mov    DWORD PTR [rbp-0x54],esi
  420417:	mov    esi,ecx
  420419:	mov    DWORD PTR [rbp-0x58],edx
  42041c:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420421:	mov    r8d,DWORD PTR [rbp-0x20]
  420425:	mov    r9,QWORD PTR [rbp-0x28]
  420429:	mov    rdi,QWORD PTR [rbp-0x50]
  42042d:	mov    esi,DWORD PTR [rbp-0x54]
  420430:	mov    edx,DWORD PTR [rbp-0x58]
  420433:	mov    ecx,eax
  420435:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  42043a:	mov    DWORD PTR [rbp-0x4],eax
  42043d:	jmp    42046b <flatcc_verify_table_vector_field@@Base+0x24b>
  420442:	jmp    420447 <flatcc_verify_table_vector_field@@Base+0x227>
  420447:	mov    eax,DWORD PTR [rbp-0x2c]
  42044a:	add    eax,0x1
  42044d:	mov    DWORD PTR [rbp-0x2c],eax
  420450:	mov    eax,DWORD PTR [rbp-0x18]
  420453:	mov    ecx,eax
  420455:	add    rcx,0x4
  42045c:	mov    DWORD PTR [rbp-0x18],ecx
  42045f:	jmp    4203a9 <flatcc_verify_table_vector_field@@Base+0x189>
  420464:	mov    DWORD PTR [rbp-0x4],0x0
  42046b:	mov    eax,DWORD PTR [rbp-0x4]
  42046e:	add    rsp,0x60
  420472:	pop    rbp
  420473:	ret    
  420474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42047e:	xchg   ax,ax

0000000000420480 <flatcc_verify_union_table@@Base>:
  420480:	push   rbp
  420481:	mov    rbp,rsp
  420484:	sub    rsp,0x10
  420488:	mov    QWORD PTR [rbp-0x8],rdi
  42048c:	mov    QWORD PTR [rbp-0x10],rsi
  420490:	mov    rax,QWORD PTR [rbp-0x8]
  420494:	mov    rdi,QWORD PTR [rax]
  420497:	mov    rax,QWORD PTR [rbp-0x8]
  42049b:	mov    esi,DWORD PTR [rax+0x8]
  42049e:	mov    rax,QWORD PTR [rbp-0x8]
  4204a2:	mov    edx,DWORD PTR [rax+0x14]
  4204a5:	mov    rax,QWORD PTR [rbp-0x8]
  4204a9:	mov    ecx,DWORD PTR [rax+0x18]
  4204ac:	mov    rax,QWORD PTR [rbp-0x8]
  4204b0:	mov    r8d,DWORD PTR [rax+0xc]
  4204b4:	mov    r9,QWORD PTR [rbp-0x10]
  4204b8:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  4204bd:	add    rsp,0x10
  4204c1:	pop    rbp
  4204c2:	ret    
  4204c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204cd:	nop    DWORD PTR [rax]

00000000004204d0 <flatcc_verify_union_struct@@Base>:
  4204d0:	push   rbp
  4204d1:	mov    rbp,rsp
  4204d4:	sub    rsp,0x20
  4204d8:	mov    QWORD PTR [rbp-0x8],rdi
  4204dc:	mov    QWORD PTR [rbp-0x10],rsi
  4204e0:	mov    WORD PTR [rbp-0x12],dx
  4204e4:	mov    rax,QWORD PTR [rbp-0x8]
  4204e8:	mov    edi,DWORD PTR [rax+0x8]
  4204eb:	mov    rax,QWORD PTR [rbp-0x8]
  4204ef:	mov    esi,DWORD PTR [rax+0x14]
  4204f2:	mov    rax,QWORD PTR [rbp-0x8]
  4204f6:	mov    edx,DWORD PTR [rax+0x18]
  4204f9:	mov    rax,QWORD PTR [rbp-0x10]
  4204fd:	mov    ecx,eax
  4204ff:	movzx  r8d,WORD PTR [rbp-0x12]
  420504:	call   420510 <flatcc_verify_union_struct@@Base+0x40>
  420509:	add    rsp,0x20
  42050d:	pop    rbp
  42050e:	ret    
  42050f:	nop
  420510:	push   rbp
  420511:	mov    rbp,rsp
  420514:	mov    DWORD PTR [rbp-0x8],edi
  420517:	mov    DWORD PTR [rbp-0xc],esi
  42051a:	mov    DWORD PTR [rbp-0x10],edx
  42051d:	mov    DWORD PTR [rbp-0x14],ecx
  420520:	mov    WORD PTR [rbp-0x16],r8w
  420525:	cmp    DWORD PTR [rbp-0x10],0x0
  420529:	je     42053e <flatcc_verify_union_struct@@Base+0x6e>
  42052f:	mov    eax,DWORD PTR [rbp-0xc]
  420532:	add    eax,DWORD PTR [rbp-0x10]
  420535:	cmp    eax,DWORD PTR [rbp-0x8]
  420538:	jbe    42054a <flatcc_verify_union_struct@@Base+0x7a>
  42053e:	mov    DWORD PTR [rbp-0x4],0x12
  420545:	jmp    4205fd <flatcc_verify_union_struct@@Base+0x12d>
  42054a:	mov    eax,DWORD PTR [rbp-0x10]
  42054d:	add    eax,DWORD PTR [rbp-0xc]
  420550:	mov    DWORD PTR [rbp-0xc],eax
  420553:	mov    eax,DWORD PTR [rbp-0xc]
  420556:	add    eax,DWORD PTR [rbp-0x14]
  420559:	cmp    eax,DWORD PTR [rbp-0xc]
  42055c:	setae  cl
  42055f:	and    cl,0x1
  420562:	movzx  eax,cl
  420565:	mov    DWORD PTR [rbp-0x1c],eax
  420568:	cmp    DWORD PTR [rbp-0x1c],0x0
  42056c:	jne    42057e <flatcc_verify_union_struct@@Base+0xae>
  420572:	mov    DWORD PTR [rbp-0x4],0xa
  420579:	jmp    4205fd <flatcc_verify_union_struct@@Base+0x12d>
  42057e:	jmp    420583 <flatcc_verify_union_struct@@Base+0xb3>
  420583:	jmp    420588 <flatcc_verify_union_struct@@Base+0xb8>
  420588:	mov    eax,DWORD PTR [rbp-0xc]
  42058b:	add    eax,DWORD PTR [rbp-0x14]
  42058e:	cmp    eax,DWORD PTR [rbp-0x8]
  420591:	setbe  cl
  420594:	and    cl,0x1
  420597:	movzx  eax,cl
  42059a:	mov    DWORD PTR [rbp-0x20],eax
  42059d:	cmp    DWORD PTR [rbp-0x20],0x0
  4205a1:	jne    4205b3 <flatcc_verify_union_struct@@Base+0xe3>
  4205a7:	mov    DWORD PTR [rbp-0x4],0x9
  4205ae:	jmp    4205fd <flatcc_verify_union_struct@@Base+0x12d>
  4205b3:	jmp    4205b8 <flatcc_verify_union_struct@@Base+0xe8>
  4205b8:	jmp    4205bd <flatcc_verify_union_struct@@Base+0xed>
  4205bd:	mov    eax,DWORD PTR [rbp-0xc]
  4205c0:	movzx  ecx,WORD PTR [rbp-0x16]
  4205c4:	sub    ecx,0x1
  4205c7:	and    eax,ecx
  4205c9:	cmp    eax,0x0
  4205cc:	setne  dl
  4205cf:	xor    dl,0xff
  4205d2:	and    dl,0x1
  4205d5:	movzx  eax,dl
  4205d8:	mov    DWORD PTR [rbp-0x24],eax
  4205db:	cmp    DWORD PTR [rbp-0x24],0x0
  4205df:	jne    4205f1 <flatcc_verify_union_struct@@Base+0x121>
  4205e5:	mov    DWORD PTR [rbp-0x4],0xb
  4205ec:	jmp    4205fd <flatcc_verify_union_struct@@Base+0x12d>
  4205f1:	jmp    4205f6 <flatcc_verify_union_struct@@Base+0x126>
  4205f6:	mov    DWORD PTR [rbp-0x4],0x0
  4205fd:	mov    eax,DWORD PTR [rbp-0x4]
  420600:	pop    rbp
  420601:	ret    
  420602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42060c:	nop    DWORD PTR [rax+0x0]

0000000000420610 <flatcc_verify_union_string@@Base>:
  420610:	push   rbp
  420611:	mov    rbp,rsp
  420614:	sub    rsp,0x10
  420618:	mov    QWORD PTR [rbp-0x8],rdi
  42061c:	mov    rax,QWORD PTR [rbp-0x8]
  420620:	mov    rdi,QWORD PTR [rax]
  420623:	mov    rax,QWORD PTR [rbp-0x8]
  420627:	mov    esi,DWORD PTR [rax+0x8]
  42062a:	mov    rax,QWORD PTR [rbp-0x8]
  42062e:	mov    edx,DWORD PTR [rax+0x14]
  420631:	mov    rax,QWORD PTR [rbp-0x8]
  420635:	mov    ecx,DWORD PTR [rax+0x18]
  420638:	call   41f9f0 <flatcc_verify_string_field@@Base+0x1e0>
  42063d:	add    rsp,0x10
  420641:	pop    rbp
  420642:	ret    
  420643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42064d:	nop    DWORD PTR [rax]

0000000000420650 <flatcc_verify_buffer_header@@Base>:
  420650:	push   rbp
  420651:	mov    rbp,rsp
  420654:	sub    rsp,0x40
  420658:	mov    QWORD PTR [rbp-0x10],rdi
  42065c:	mov    QWORD PTR [rbp-0x18],rsi
  420660:	mov    QWORD PTR [rbp-0x20],rdx
  420664:	mov    rax,QWORD PTR [rbp-0x10]
  420668:	and    rax,0x3
  42066e:	cmp    rax,0x0
  420672:	setne  cl
  420675:	xor    cl,0xff
  420678:	and    cl,0x1
  42067b:	movzx  edx,cl
  42067e:	mov    DWORD PTR [rbp-0x2c],edx
  420681:	cmp    DWORD PTR [rbp-0x2c],0x0
  420685:	jne    420697 <flatcc_verify_buffer_header@@Base+0x47>
  42068b:	mov    DWORD PTR [rbp-0x4],0x5
  420692:	jmp    420776 <flatcc_verify_buffer_header@@Base+0x126>
  420697:	jmp    42069c <flatcc_verify_buffer_header@@Base+0x4c>
  42069c:	jmp    4206a1 <flatcc_verify_buffer_header@@Base+0x51>
  4206a1:	mov    eax,0xfffffff7
  4206a6:	cmp    QWORD PTR [rbp-0x18],rax
  4206aa:	setbe  cl
  4206ad:	and    cl,0x1
  4206b0:	movzx  edx,cl
  4206b3:	mov    DWORD PTR [rbp-0x30],edx
  4206b6:	cmp    DWORD PTR [rbp-0x30],0x0
  4206ba:	jne    4206cc <flatcc_verify_buffer_header@@Base+0x7c>
  4206c0:	mov    DWORD PTR [rbp-0x4],0x6
  4206c7:	jmp    420776 <flatcc_verify_buffer_header@@Base+0x126>
  4206cc:	jmp    4206d1 <flatcc_verify_buffer_header@@Base+0x81>
  4206d1:	jmp    4206d6 <flatcc_verify_buffer_header@@Base+0x86>
  4206d6:	cmp    QWORD PTR [rbp-0x18],0x8
  4206db:	setae  al
  4206de:	and    al,0x1
  4206e0:	movzx  ecx,al
  4206e3:	mov    DWORD PTR [rbp-0x34],ecx
  4206e6:	cmp    DWORD PTR [rbp-0x34],0x0
  4206ea:	jne    4206fc <flatcc_verify_buffer_header@@Base+0xac>
  4206f0:	mov    DWORD PTR [rbp-0x4],0x1
  4206f7:	jmp    420776 <flatcc_verify_buffer_header@@Base+0x126>
  4206fc:	jmp    420701 <flatcc_verify_buffer_header@@Base+0xb1>
  420701:	cmp    QWORD PTR [rbp-0x20],0x0
  420706:	je     42076f <flatcc_verify_buffer_header@@Base+0x11f>
  42070c:	mov    rdi,QWORD PTR [rbp-0x20]
  420710:	call   420780 <flatcc_verify_buffer_header@@Base+0x130>
  420715:	mov    DWORD PTR [rbp-0x28],eax
  420718:	mov    rdi,QWORD PTR [rbp-0x10]
  42071c:	mov    esi,0x4
  420721:	call   4207c0 <flatcc_verify_buffer_header@@Base+0x170>
  420726:	mov    DWORD PTR [rbp-0x24],eax
  420729:	cmp    DWORD PTR [rbp-0x28],0x0
  42072d:	mov    al,0x1
  42072f:	mov    BYTE PTR [rbp-0x39],al
  420732:	je     420744 <flatcc_verify_buffer_header@@Base+0xf4>
  420738:	mov    eax,DWORD PTR [rbp-0x24]
  42073b:	cmp    eax,DWORD PTR [rbp-0x28]
  42073e:	sete   cl
  420741:	mov    BYTE PTR [rbp-0x39],cl
  420744:	mov    al,BYTE PTR [rbp-0x39]
  420747:	and    al,0x1
  420749:	movzx  ecx,al
  42074c:	mov    DWORD PTR [rbp-0x38],ecx
  42074f:	cmp    DWORD PTR [rbp-0x38],0x0
  420753:	jne    420765 <flatcc_verify_buffer_header@@Base+0x115>
  420759:	mov    DWORD PTR [rbp-0x4],0x2
  420760:	jmp    420776 <flatcc_verify_buffer_header@@Base+0x126>
  420765:	jmp    42076a <flatcc_verify_buffer_header@@Base+0x11a>
  42076a:	jmp    42076f <flatcc_verify_buffer_header@@Base+0x11f>
  42076f:	mov    DWORD PTR [rbp-0x4],0x0
  420776:	mov    eax,DWORD PTR [rbp-0x4]
  420779:	add    rsp,0x40
  42077d:	pop    rbp
  42077e:	ret    
  42077f:	nop
  420780:	push   rbp
  420781:	mov    rbp,rsp
  420784:	sub    rsp,0x20
  420788:	mov    QWORD PTR [rbp-0x8],rdi
  42078c:	mov    DWORD PTR [rbp-0xc],0x0
  420793:	lea    rax,[rbp-0xc]
  420797:	mov    rsi,QWORD PTR [rbp-0x8]
  42079b:	mov    rdi,rax
  42079e:	mov    edx,0x4
  4207a3:	call   404040 <strncpy@plt>
  4207a8:	mov    edi,DWORD PTR [rbp-0xc]
  4207ab:	mov    QWORD PTR [rbp-0x18],rax
  4207af:	call   421760 <flatcc_verify_union_vector_field@@Base+0x640>
  4207b4:	add    rsp,0x20
  4207b8:	pop    rbp
  4207b9:	ret    
  4207ba:	nop    WORD PTR [rax+rax*1+0x0]
  4207c0:	push   rbp
  4207c1:	mov    rbp,rsp
  4207c4:	sub    rsp,0x10
  4207c8:	mov    QWORD PTR [rbp-0x8],rdi
  4207cc:	mov    DWORD PTR [rbp-0xc],esi
  4207cf:	mov    rax,QWORD PTR [rbp-0x8]
  4207d3:	mov    ecx,DWORD PTR [rbp-0xc]
  4207d6:	mov    edx,ecx
  4207d8:	add    rax,rdx
  4207db:	mov    rdi,rax
  4207de:	call   421770 <flatcc_verify_union_vector_field@@Base+0x650>
  4207e3:	add    rsp,0x10
  4207e7:	pop    rbp
  4207e8:	ret    
  4207e9:	nop    DWORD PTR [rax+0x0]

00000000004207f0 <flatcc_verify_typed_buffer_header@@Base>:
  4207f0:	push   rbp
  4207f1:	mov    rbp,rsp
  4207f4:	sub    rsp,0x40
  4207f8:	mov    QWORD PTR [rbp-0x10],rdi
  4207fc:	mov    QWORD PTR [rbp-0x18],rsi
  420800:	mov    DWORD PTR [rbp-0x1c],edx
  420803:	mov    rax,QWORD PTR [rbp-0x10]
  420807:	and    rax,0x3
  42080d:	cmp    rax,0x0
  420811:	setne  cl
  420814:	xor    cl,0xff
  420817:	and    cl,0x1
  42081a:	movzx  edx,cl
  42081d:	mov    DWORD PTR [rbp-0x28],edx
  420820:	cmp    DWORD PTR [rbp-0x28],0x0
  420824:	jne    420836 <flatcc_verify_typed_buffer_header@@Base+0x46>
  42082a:	mov    DWORD PTR [rbp-0x4],0x5
  420831:	jmp    42090e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  420836:	jmp    42083b <flatcc_verify_typed_buffer_header@@Base+0x4b>
  42083b:	jmp    420840 <flatcc_verify_typed_buffer_header@@Base+0x50>
  420840:	mov    eax,0xfffffff7
  420845:	cmp    QWORD PTR [rbp-0x18],rax
  420849:	setbe  cl
  42084c:	and    cl,0x1
  42084f:	movzx  edx,cl
  420852:	mov    DWORD PTR [rbp-0x2c],edx
  420855:	cmp    DWORD PTR [rbp-0x2c],0x0
  420859:	jne    42086b <flatcc_verify_typed_buffer_header@@Base+0x7b>
  42085f:	mov    DWORD PTR [rbp-0x4],0x6
  420866:	jmp    42090e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  42086b:	jmp    420870 <flatcc_verify_typed_buffer_header@@Base+0x80>
  420870:	jmp    420875 <flatcc_verify_typed_buffer_header@@Base+0x85>
  420875:	cmp    QWORD PTR [rbp-0x18],0x8
  42087a:	setae  al
  42087d:	and    al,0x1
  42087f:	movzx  ecx,al
  420882:	mov    DWORD PTR [rbp-0x30],ecx
  420885:	cmp    DWORD PTR [rbp-0x30],0x0
  420889:	jne    42089b <flatcc_verify_typed_buffer_header@@Base+0xab>
  42088f:	mov    DWORD PTR [rbp-0x4],0x1
  420896:	jmp    42090e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  42089b:	jmp    4208a0 <flatcc_verify_typed_buffer_header@@Base+0xb0>
  4208a0:	cmp    DWORD PTR [rbp-0x1c],0x0
  4208a4:	je     420907 <flatcc_verify_typed_buffer_header@@Base+0x117>
  4208aa:	mov    eax,DWORD PTR [rbp-0x1c]
  4208ad:	mov    DWORD PTR [rbp-0x24],eax
  4208b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4208b4:	mov    esi,0x4
  4208b9:	call   4207c0 <flatcc_verify_buffer_header@@Base+0x170>
  4208be:	mov    DWORD PTR [rbp-0x20],eax
  4208c1:	cmp    DWORD PTR [rbp-0x24],0x0
  4208c5:	mov    al,0x1
  4208c7:	mov    BYTE PTR [rbp-0x35],al
  4208ca:	je     4208dc <flatcc_verify_typed_buffer_header@@Base+0xec>
  4208d0:	mov    eax,DWORD PTR [rbp-0x20]
  4208d3:	cmp    eax,DWORD PTR [rbp-0x24]
  4208d6:	sete   cl
  4208d9:	mov    BYTE PTR [rbp-0x35],cl
  4208dc:	mov    al,BYTE PTR [rbp-0x35]
  4208df:	and    al,0x1
  4208e1:	movzx  ecx,al
  4208e4:	mov    DWORD PTR [rbp-0x34],ecx
  4208e7:	cmp    DWORD PTR [rbp-0x34],0x0
  4208eb:	jne    4208fd <flatcc_verify_typed_buffer_header@@Base+0x10d>
  4208f1:	mov    DWORD PTR [rbp-0x4],0x2
  4208f8:	jmp    42090e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  4208fd:	jmp    420902 <flatcc_verify_typed_buffer_header@@Base+0x112>
  420902:	jmp    420907 <flatcc_verify_typed_buffer_header@@Base+0x117>
  420907:	mov    DWORD PTR [rbp-0x4],0x0
  42090e:	mov    eax,DWORD PTR [rbp-0x4]
  420911:	add    rsp,0x40
  420915:	pop    rbp
  420916:	ret    
  420917:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420920 <flatcc_verify_struct_as_root@@Base>:
  420920:	push   rbp
  420921:	mov    rbp,rsp
  420924:	sub    rsp,0x30
  420928:	mov    QWORD PTR [rbp-0x10],rdi
  42092c:	mov    QWORD PTR [rbp-0x18],rsi
  420930:	mov    QWORD PTR [rbp-0x20],rdx
  420934:	mov    QWORD PTR [rbp-0x28],rcx
  420938:	mov    WORD PTR [rbp-0x2a],r8w
  42093d:	mov    rdi,QWORD PTR [rbp-0x10]
  420941:	mov    rsi,QWORD PTR [rbp-0x18]
  420945:	mov    rdx,QWORD PTR [rbp-0x20]
  420949:	call   420650 <flatcc_verify_buffer_header@@Base>
  42094e:	cmp    eax,0x0
  420951:	je     420970 <flatcc_verify_struct_as_root@@Base+0x50>
  420957:	mov    rdi,QWORD PTR [rbp-0x10]
  42095b:	mov    rsi,QWORD PTR [rbp-0x18]
  42095f:	mov    rdx,QWORD PTR [rbp-0x20]
  420963:	call   420650 <flatcc_verify_buffer_header@@Base>
  420968:	mov    DWORD PTR [rbp-0x4],eax
  42096b:	jmp    42099a <flatcc_verify_struct_as_root@@Base+0x7a>
  420970:	xor    esi,esi
  420972:	mov    rax,QWORD PTR [rbp-0x18]
  420976:	mov    rdi,QWORD PTR [rbp-0x10]
  42097a:	mov    DWORD PTR [rbp-0x30],eax
  42097d:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420982:	xor    esi,esi
  420984:	mov    rcx,QWORD PTR [rbp-0x28]
  420988:	mov    edi,DWORD PTR [rbp-0x30]
  42098b:	mov    edx,eax
  42098d:	movzx  r8d,WORD PTR [rbp-0x2a]
  420992:	call   420510 <flatcc_verify_union_struct@@Base+0x40>
  420997:	mov    DWORD PTR [rbp-0x4],eax
  42099a:	mov    eax,DWORD PTR [rbp-0x4]
  42099d:	add    rsp,0x30
  4209a1:	pop    rbp
  4209a2:	ret    
  4209a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4209ad:	nop    DWORD PTR [rax]

00000000004209b0 <flatcc_verify_struct_as_typed_root@@Base>:
  4209b0:	push   rbp
  4209b1:	mov    rbp,rsp
  4209b4:	sub    rsp,0x30
  4209b8:	mov    QWORD PTR [rbp-0x10],rdi
  4209bc:	mov    QWORD PTR [rbp-0x18],rsi
  4209c0:	mov    DWORD PTR [rbp-0x1c],edx
  4209c3:	mov    QWORD PTR [rbp-0x28],rcx
  4209c7:	mov    WORD PTR [rbp-0x2a],r8w
  4209cc:	mov    rdi,QWORD PTR [rbp-0x10]
  4209d0:	mov    rsi,QWORD PTR [rbp-0x18]
  4209d4:	mov    edx,DWORD PTR [rbp-0x1c]
  4209d7:	call   4207f0 <flatcc_verify_typed_buffer_header@@Base>
  4209dc:	cmp    eax,0x0
  4209df:	je     4209fd <flatcc_verify_struct_as_typed_root@@Base+0x4d>
  4209e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4209e9:	mov    rsi,QWORD PTR [rbp-0x18]
  4209ed:	mov    edx,DWORD PTR [rbp-0x1c]
  4209f0:	call   4207f0 <flatcc_verify_typed_buffer_header@@Base>
  4209f5:	mov    DWORD PTR [rbp-0x4],eax
  4209f8:	jmp    420a27 <flatcc_verify_struct_as_typed_root@@Base+0x77>
  4209fd:	xor    esi,esi
  4209ff:	mov    rax,QWORD PTR [rbp-0x18]
  420a03:	mov    rdi,QWORD PTR [rbp-0x10]
  420a07:	mov    DWORD PTR [rbp-0x30],eax
  420a0a:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420a0f:	xor    esi,esi
  420a11:	mov    rcx,QWORD PTR [rbp-0x28]
  420a15:	mov    edi,DWORD PTR [rbp-0x30]
  420a18:	mov    edx,eax
  420a1a:	movzx  r8d,WORD PTR [rbp-0x2a]
  420a1f:	call   420510 <flatcc_verify_union_struct@@Base+0x40>
  420a24:	mov    DWORD PTR [rbp-0x4],eax
  420a27:	mov    eax,DWORD PTR [rbp-0x4]
  420a2a:	add    rsp,0x30
  420a2e:	pop    rbp
  420a2f:	ret    

0000000000420a30 <flatcc_verify_table_as_root@@Base>:
  420a30:	push   rbp
  420a31:	mov    rbp,rsp
  420a34:	sub    rsp,0x40
  420a38:	mov    QWORD PTR [rbp-0x10],rdi
  420a3c:	mov    QWORD PTR [rbp-0x18],rsi
  420a40:	mov    QWORD PTR [rbp-0x20],rdx
  420a44:	mov    QWORD PTR [rbp-0x28],rcx
  420a48:	mov    rdi,QWORD PTR [rbp-0x10]
  420a4c:	mov    rax,QWORD PTR [rbp-0x18]
  420a50:	mov    eax,eax
  420a52:	mov    esi,eax
  420a54:	mov    rdx,QWORD PTR [rbp-0x20]
  420a58:	call   420650 <flatcc_verify_buffer_header@@Base>
  420a5d:	cmp    eax,0x0
  420a60:	je     420a83 <flatcc_verify_table_as_root@@Base+0x53>
  420a66:	mov    rdi,QWORD PTR [rbp-0x10]
  420a6a:	mov    rax,QWORD PTR [rbp-0x18]
  420a6e:	mov    eax,eax
  420a70:	mov    esi,eax
  420a72:	mov    rdx,QWORD PTR [rbp-0x20]
  420a76:	call   420650 <flatcc_verify_buffer_header@@Base>
  420a7b:	mov    DWORD PTR [rbp-0x4],eax
  420a7e:	jmp    420abd <flatcc_verify_table_as_root@@Base+0x8d>
  420a83:	xor    esi,esi
  420a85:	mov    rdi,QWORD PTR [rbp-0x10]
  420a89:	mov    rax,QWORD PTR [rbp-0x18]
  420a8d:	mov    rcx,QWORD PTR [rbp-0x10]
  420a91:	mov    QWORD PTR [rbp-0x30],rdi
  420a95:	mov    rdi,rcx
  420a98:	mov    DWORD PTR [rbp-0x34],eax
  420a9b:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420aa0:	xor    edx,edx
  420aa2:	mov    r9,QWORD PTR [rbp-0x28]
  420aa6:	mov    rdi,QWORD PTR [rbp-0x30]
  420aaa:	mov    esi,DWORD PTR [rbp-0x34]
  420aad:	mov    ecx,eax
  420aaf:	mov    r8d,0x64
  420ab5:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  420aba:	mov    DWORD PTR [rbp-0x4],eax
  420abd:	mov    eax,DWORD PTR [rbp-0x4]
  420ac0:	add    rsp,0x40
  420ac4:	pop    rbp
  420ac5:	ret    
  420ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420ad0 <flatcc_verify_table_as_typed_root@@Base>:
  420ad0:	push   rbp
  420ad1:	mov    rbp,rsp
  420ad4:	sub    rsp,0x40
  420ad8:	mov    QWORD PTR [rbp-0x10],rdi
  420adc:	mov    QWORD PTR [rbp-0x18],rsi
  420ae0:	mov    DWORD PTR [rbp-0x1c],edx
  420ae3:	mov    QWORD PTR [rbp-0x28],rcx
  420ae7:	mov    rdi,QWORD PTR [rbp-0x10]
  420aeb:	mov    rax,QWORD PTR [rbp-0x18]
  420aef:	mov    eax,eax
  420af1:	mov    esi,eax
  420af3:	mov    edx,DWORD PTR [rbp-0x1c]
  420af6:	call   4207f0 <flatcc_verify_typed_buffer_header@@Base>
  420afb:	cmp    eax,0x0
  420afe:	je     420b20 <flatcc_verify_table_as_typed_root@@Base+0x50>
  420b04:	mov    rdi,QWORD PTR [rbp-0x10]
  420b08:	mov    rax,QWORD PTR [rbp-0x18]
  420b0c:	mov    eax,eax
  420b0e:	mov    esi,eax
  420b10:	mov    edx,DWORD PTR [rbp-0x1c]
  420b13:	call   4207f0 <flatcc_verify_typed_buffer_header@@Base>
  420b18:	mov    DWORD PTR [rbp-0x4],eax
  420b1b:	jmp    420b5a <flatcc_verify_table_as_typed_root@@Base+0x8a>
  420b20:	xor    esi,esi
  420b22:	mov    rdi,QWORD PTR [rbp-0x10]
  420b26:	mov    rax,QWORD PTR [rbp-0x18]
  420b2a:	mov    rcx,QWORD PTR [rbp-0x10]
  420b2e:	mov    QWORD PTR [rbp-0x30],rdi
  420b32:	mov    rdi,rcx
  420b35:	mov    DWORD PTR [rbp-0x34],eax
  420b38:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420b3d:	xor    edx,edx
  420b3f:	mov    r9,QWORD PTR [rbp-0x28]
  420b43:	mov    rdi,QWORD PTR [rbp-0x30]
  420b47:	mov    esi,DWORD PTR [rbp-0x34]
  420b4a:	mov    ecx,eax
  420b4c:	mov    r8d,0x64
  420b52:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  420b57:	mov    DWORD PTR [rbp-0x4],eax
  420b5a:	mov    eax,DWORD PTR [rbp-0x4]
  420b5d:	add    rsp,0x40
  420b61:	pop    rbp
  420b62:	ret    
  420b63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b6d:	nop    DWORD PTR [rax]

0000000000420b70 <flatcc_verify_struct_as_nested_root@@Base>:
  420b70:	push   rbp
  420b71:	mov    rbp,rsp
  420b74:	sub    rsp,0x50
  420b78:	mov    QWORD PTR [rbp-0x10],rdi
  420b7c:	mov    WORD PTR [rbp-0x12],si
  420b80:	mov    DWORD PTR [rbp-0x18],edx
  420b83:	mov    QWORD PTR [rbp-0x20],rcx
  420b87:	mov    QWORD PTR [rbp-0x28],r8
  420b8b:	mov    WORD PTR [rbp-0x2a],r9w
  420b90:	mov    rdi,QWORD PTR [rbp-0x10]
  420b94:	mov    ax,WORD PTR [rbp-0x12]
  420b98:	mov    edx,DWORD PTR [rbp-0x18]
  420b9b:	movzx  r10d,WORD PTR [rbp-0x2a]
  420ba0:	mov    ecx,r10d
  420ba3:	movzx  esi,ax
  420ba6:	mov    r8d,0x1
  420bac:	mov    r9d,0xffffffff
  420bb2:	call   41fb20 <flatcc_verify_vector_field@@Base>
  420bb7:	cmp    eax,0x0
  420bba:	je     420beb <flatcc_verify_struct_as_nested_root@@Base+0x7b>
  420bc0:	mov    rdi,QWORD PTR [rbp-0x10]
  420bc4:	mov    ax,WORD PTR [rbp-0x12]
  420bc8:	mov    edx,DWORD PTR [rbp-0x18]
  420bcb:	movzx  ecx,WORD PTR [rbp-0x2a]
  420bcf:	movzx  esi,ax
  420bd2:	mov    r8d,0x1
  420bd8:	mov    r9d,0xffffffff
  420bde:	call   41fb20 <flatcc_verify_vector_field@@Base>
  420be3:	mov    DWORD PTR [rbp-0x4],eax
  420be6:	jmp    420c83 <flatcc_verify_struct_as_nested_root@@Base+0x113>
  420beb:	mov    rdi,QWORD PTR [rbp-0x10]
  420bef:	movzx  esi,WORD PTR [rbp-0x12]
  420bf3:	call   420c90 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  420bf8:	xor    ecx,ecx
  420bfa:	mov    edx,ecx
  420bfc:	mov    QWORD PTR [rbp-0x38],rax
  420c00:	cmp    rdx,rax
  420c03:	jne    420c15 <flatcc_verify_struct_as_nested_root@@Base+0xa5>
  420c09:	mov    DWORD PTR [rbp-0x4],0x0
  420c10:	jmp    420c83 <flatcc_verify_struct_as_nested_root@@Base+0x113>
  420c15:	xor    esi,esi
  420c17:	mov    rax,QWORD PTR [rbp-0x38]
  420c1b:	mov    rcx,QWORD PTR [rbp-0x38]
  420c1f:	mov    rdi,rcx
  420c22:	mov    QWORD PTR [rbp-0x48],rax
  420c26:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420c2b:	xor    esi,esi
  420c2d:	mov    eax,eax
  420c2f:	mov    ecx,eax
  420c31:	mov    rdx,QWORD PTR [rbp-0x48]
  420c35:	add    rdx,rcx
  420c38:	mov    QWORD PTR [rbp-0x38],rdx
  420c3c:	mov    rcx,QWORD PTR [rbp-0x38]
  420c40:	mov    rdi,rcx
  420c43:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420c48:	mov    DWORD PTR [rbp-0x3c],eax
  420c4b:	mov    rcx,QWORD PTR [rbp-0x38]
  420c4f:	add    rcx,0x4
  420c56:	mov    QWORD PTR [rbp-0x38],rcx
  420c5a:	mov    rcx,QWORD PTR [rbp-0x38]
  420c5e:	mov    eax,DWORD PTR [rbp-0x3c]
  420c61:	mov    esi,eax
  420c63:	mov    rdx,QWORD PTR [rbp-0x20]
  420c67:	mov    rdi,QWORD PTR [rbp-0x28]
  420c6b:	mov    QWORD PTR [rbp-0x50],rdi
  420c6f:	mov    rdi,rcx
  420c72:	mov    rcx,QWORD PTR [rbp-0x50]
  420c76:	movzx  r8d,WORD PTR [rbp-0x2a]
  420c7b:	call   420920 <flatcc_verify_struct_as_root@@Base>
  420c80:	mov    DWORD PTR [rbp-0x4],eax
  420c83:	mov    eax,DWORD PTR [rbp-0x4]
  420c86:	add    rsp,0x50
  420c8a:	pop    rbp
  420c8b:	ret    
  420c8c:	nop    DWORD PTR [rax+0x0]
  420c90:	push   rbp
  420c91:	mov    rbp,rsp
  420c94:	sub    rsp,0x20
  420c98:	mov    QWORD PTR [rbp-0x8],rdi
  420c9c:	mov    WORD PTR [rbp-0xa],si
  420ca0:	mov    rdi,QWORD PTR [rbp-0x8]
  420ca4:	movzx  esi,WORD PTR [rbp-0xa]
  420ca8:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  420cad:	mov    WORD PTR [rbp-0xc],ax
  420cb1:	movzx  ecx,WORD PTR [rbp-0xc]
  420cb5:	cmp    ecx,0x0
  420cb8:	je     420ce4 <flatcc_verify_struct_as_nested_root@@Base+0x174>
  420cbe:	mov    rax,QWORD PTR [rbp-0x8]
  420cc2:	mov    rax,QWORD PTR [rax]
  420cc5:	mov    rcx,QWORD PTR [rbp-0x8]
  420cc9:	mov    edx,DWORD PTR [rcx+0x18]
  420ccc:	mov    ecx,edx
  420cce:	add    rax,rcx
  420cd1:	movzx  edx,WORD PTR [rbp-0xc]
  420cd5:	movsxd rcx,edx
  420cd8:	add    rax,rcx
  420cdb:	mov    QWORD PTR [rbp-0x18],rax
  420cdf:	jmp    420cf1 <flatcc_verify_struct_as_nested_root@@Base+0x181>
  420ce4:	xor    eax,eax
  420ce6:	mov    ecx,eax
  420ce8:	mov    QWORD PTR [rbp-0x18],rcx
  420cec:	jmp    420cf1 <flatcc_verify_struct_as_nested_root@@Base+0x181>
  420cf1:	mov    rax,QWORD PTR [rbp-0x18]
  420cf5:	add    rsp,0x20
  420cf9:	pop    rbp
  420cfa:	ret    
  420cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420d00 <flatcc_verify_table_as_nested_root@@Base>:
  420d00:	push   rbp
  420d01:	mov    rbp,rsp
  420d04:	sub    rsp,0x60
  420d08:	mov    QWORD PTR [rbp-0x10],rdi
  420d0c:	mov    WORD PTR [rbp-0x12],si
  420d10:	mov    DWORD PTR [rbp-0x18],edx
  420d13:	mov    QWORD PTR [rbp-0x20],rcx
  420d17:	mov    WORD PTR [rbp-0x22],r8w
  420d1c:	mov    QWORD PTR [rbp-0x30],r9
  420d20:	mov    rdi,QWORD PTR [rbp-0x10]
  420d24:	mov    ax,WORD PTR [rbp-0x12]
  420d28:	mov    edx,DWORD PTR [rbp-0x18]
  420d2b:	movzx  r10d,WORD PTR [rbp-0x22]
  420d30:	mov    ecx,r10d
  420d33:	movzx  esi,ax
  420d36:	mov    r8d,0x1
  420d3c:	mov    r9d,0xffffffff
  420d42:	call   41fb20 <flatcc_verify_vector_field@@Base>
  420d47:	cmp    eax,0x0
  420d4a:	je     420d7b <flatcc_verify_table_as_nested_root@@Base+0x7b>
  420d50:	mov    rdi,QWORD PTR [rbp-0x10]
  420d54:	mov    ax,WORD PTR [rbp-0x12]
  420d58:	mov    edx,DWORD PTR [rbp-0x18]
  420d5b:	movzx  ecx,WORD PTR [rbp-0x22]
  420d5f:	movzx  esi,ax
  420d62:	mov    r8d,0x1
  420d68:	mov    r9d,0xffffffff
  420d6e:	call   41fb20 <flatcc_verify_vector_field@@Base>
  420d73:	mov    DWORD PTR [rbp-0x4],eax
  420d76:	jmp    420e60 <flatcc_verify_table_as_nested_root@@Base+0x160>
  420d7b:	mov    rdi,QWORD PTR [rbp-0x10]
  420d7f:	movzx  esi,WORD PTR [rbp-0x12]
  420d83:	call   420c90 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  420d88:	xor    ecx,ecx
  420d8a:	mov    edx,ecx
  420d8c:	mov    QWORD PTR [rbp-0x38],rax
  420d90:	cmp    rdx,rax
  420d93:	jne    420da5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  420d99:	mov    DWORD PTR [rbp-0x4],0x0
  420da0:	jmp    420e60 <flatcc_verify_table_as_nested_root@@Base+0x160>
  420da5:	xor    esi,esi
  420da7:	mov    rax,QWORD PTR [rbp-0x38]
  420dab:	mov    rcx,QWORD PTR [rbp-0x38]
  420daf:	mov    rdi,rcx
  420db2:	mov    QWORD PTR [rbp-0x48],rax
  420db6:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420dbb:	xor    esi,esi
  420dbd:	mov    eax,eax
  420dbf:	mov    ecx,eax
  420dc1:	mov    rdx,QWORD PTR [rbp-0x48]
  420dc5:	add    rdx,rcx
  420dc8:	mov    QWORD PTR [rbp-0x38],rdx
  420dcc:	mov    rcx,QWORD PTR [rbp-0x38]
  420dd0:	mov    rdi,rcx
  420dd3:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420dd8:	mov    DWORD PTR [rbp-0x3c],eax
  420ddb:	mov    rcx,QWORD PTR [rbp-0x38]
  420ddf:	add    rcx,0x4
  420de6:	mov    QWORD PTR [rbp-0x38],rcx
  420dea:	mov    rcx,QWORD PTR [rbp-0x38]
  420dee:	mov    eax,DWORD PTR [rbp-0x3c]
  420df1:	mov    esi,eax
  420df3:	mov    rdx,QWORD PTR [rbp-0x20]
  420df7:	mov    rdi,rcx
  420dfa:	call   420650 <flatcc_verify_buffer_header@@Base>
  420dff:	cmp    eax,0x0
  420e02:	je     420e25 <flatcc_verify_table_as_nested_root@@Base+0x125>
  420e08:	mov    rax,QWORD PTR [rbp-0x38]
  420e0c:	mov    ecx,DWORD PTR [rbp-0x3c]
  420e0f:	mov    esi,ecx
  420e11:	mov    rdx,QWORD PTR [rbp-0x20]
  420e15:	mov    rdi,rax
  420e18:	call   420650 <flatcc_verify_buffer_header@@Base>
  420e1d:	mov    DWORD PTR [rbp-0x4],eax
  420e20:	jmp    420e60 <flatcc_verify_table_as_nested_root@@Base+0x160>
  420e25:	xor    esi,esi
  420e27:	mov    rax,QWORD PTR [rbp-0x38]
  420e2b:	mov    ecx,DWORD PTR [rbp-0x3c]
  420e2e:	mov    rdx,QWORD PTR [rbp-0x38]
  420e32:	mov    rdi,rdx
  420e35:	mov    QWORD PTR [rbp-0x50],rax
  420e39:	mov    DWORD PTR [rbp-0x54],ecx
  420e3c:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  420e41:	xor    edx,edx
  420e43:	mov    rdi,QWORD PTR [rbp-0x10]
  420e47:	mov    r8d,DWORD PTR [rdi+0xc]
  420e4b:	mov    r9,QWORD PTR [rbp-0x30]
  420e4f:	mov    rdi,QWORD PTR [rbp-0x50]
  420e53:	mov    esi,DWORD PTR [rbp-0x54]
  420e56:	mov    ecx,eax
  420e58:	call   41ffa0 <flatcc_verify_table_field@@Base+0xb0>
  420e5d:	mov    DWORD PTR [rbp-0x4],eax
  420e60:	mov    eax,DWORD PTR [rbp-0x4]
  420e63:	add    rsp,0x60
  420e67:	pop    rbp
  420e68:	ret    
  420e69:	nop    DWORD PTR [rax+0x0]

0000000000420e70 <flatcc_verify_union_field@@Base>:
  420e70:	push   rbp
  420e71:	mov    rbp,rsp
  420e74:	sub    rsp,0x80
  420e7b:	mov    QWORD PTR [rbp-0x10],rdi
  420e7f:	mov    WORD PTR [rbp-0x12],si
  420e83:	mov    DWORD PTR [rbp-0x18],edx
  420e86:	mov    QWORD PTR [rbp-0x20],rcx
  420e8a:	mov    rdi,QWORD PTR [rbp-0x10]
  420e8e:	movzx  eax,WORD PTR [rbp-0x12]
  420e92:	sub    eax,0x1
  420e95:	movzx  esi,ax
  420e98:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  420e9d:	xor    edx,edx
  420e9f:	mov    WORD PTR [rbp-0x22],ax
  420ea3:	movzx  esi,ax
  420ea6:	cmp    edx,esi
  420ea8:	jne    420f2a <flatcc_verify_union_field@@Base+0xba>
  420eae:	mov    rdi,QWORD PTR [rbp-0x10]
  420eb2:	movzx  esi,WORD PTR [rbp-0x12]
  420eb6:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  420ebb:	mov    WORD PTR [rbp-0x24],ax
  420ebf:	movzx  eax,WORD PTR [rbp-0x24]
  420ec3:	cmp    eax,0x0
  420ec6:	sete   cl
  420ec9:	and    cl,0x1
  420ecc:	movzx  eax,cl
  420ecf:	mov    DWORD PTR [rbp-0x5c],eax
  420ed2:	cmp    DWORD PTR [rbp-0x5c],0x0
  420ed6:	jne    420ee8 <flatcc_verify_union_field@@Base+0x78>
  420edc:	mov    DWORD PTR [rbp-0x4],0x17
  420ee3:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  420ee8:	jmp    420eed <flatcc_verify_union_field@@Base+0x7d>
  420eed:	jmp    420ef2 <flatcc_verify_union_field@@Base+0x82>
  420ef2:	cmp    DWORD PTR [rbp-0x18],0x0
  420ef6:	setne  al
  420ef9:	xor    al,0xff
  420efb:	and    al,0x1
  420efd:	movzx  ecx,al
  420f00:	mov    DWORD PTR [rbp-0x60],ecx
  420f03:	cmp    DWORD PTR [rbp-0x60],0x0
  420f07:	jne    420f19 <flatcc_verify_union_field@@Base+0xa9>
  420f0d:	mov    DWORD PTR [rbp-0x4],0x15
  420f14:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  420f19:	jmp    420f1e <flatcc_verify_union_field@@Base+0xae>
  420f1e:	mov    DWORD PTR [rbp-0x4],0x0
  420f25:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  420f2a:	xor    edx,edx
  420f2c:	mov    rdi,QWORD PTR [rbp-0x10]
  420f30:	movzx  eax,WORD PTR [rbp-0x12]
  420f34:	sub    eax,0x1
  420f37:	movzx  esi,ax
  420f3a:	mov    ecx,0x1
  420f3f:	mov    DWORD PTR [rbp-0x6c],ecx
  420f42:	mov    r8d,DWORD PTR [rbp-0x6c]
  420f46:	call   41f6c0 <flatcc_verify_field@@Base+0x80>
  420f4b:	cmp    eax,0x0
  420f4e:	je     420f7d <flatcc_verify_union_field@@Base+0x10d>
  420f54:	xor    edx,edx
  420f56:	mov    rdi,QWORD PTR [rbp-0x10]
  420f5a:	movzx  eax,WORD PTR [rbp-0x12]
  420f5e:	sub    eax,0x1
  420f61:	movzx  esi,ax
  420f64:	mov    ecx,0x1
  420f69:	mov    DWORD PTR [rbp-0x70],ecx
  420f6c:	mov    r8d,DWORD PTR [rbp-0x70]
  420f70:	call   41f6c0 <flatcc_verify_field@@Base+0x80>
  420f75:	mov    DWORD PTR [rbp-0x4],eax
  420f78:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  420f7d:	mov    rdi,QWORD PTR [rbp-0x10]
  420f81:	movzx  esi,WORD PTR [rbp-0x12]
  420f85:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  420f8a:	mov    WORD PTR [rbp-0x24],ax
  420f8e:	mov    rcx,QWORD PTR [rbp-0x10]
  420f92:	mov    rcx,QWORD PTR [rcx]
  420f95:	mov    rdx,QWORD PTR [rbp-0x10]
  420f99:	mov    esi,DWORD PTR [rdx+0x18]
  420f9c:	mov    edx,esi
  420f9e:	add    rcx,rdx
  420fa1:	movzx  esi,WORD PTR [rbp-0x22]
  420fa5:	movsxd rdx,esi
  420fa8:	add    rcx,rdx
  420fab:	mov    QWORD PTR [rbp-0x30],rcx
  420faf:	mov    rax,QWORD PTR [rbp-0x30]
  420fb3:	movzx  ecx,BYTE PTR [rax]
  420fb6:	cmp    ecx,0x0
  420fb9:	mov    dl,0x1
  420fbb:	mov    BYTE PTR [rbp-0x71],dl
  420fbe:	jne    420fd1 <flatcc_verify_union_field@@Base+0x161>
  420fc4:	movzx  eax,WORD PTR [rbp-0x24]
  420fc8:	cmp    eax,0x0
  420fcb:	sete   cl
  420fce:	mov    BYTE PTR [rbp-0x71],cl
  420fd1:	mov    al,BYTE PTR [rbp-0x71]
  420fd4:	and    al,0x1
  420fd6:	movzx  ecx,al
  420fd9:	mov    DWORD PTR [rbp-0x64],ecx
  420fdc:	cmp    DWORD PTR [rbp-0x64],0x0
  420fe0:	jne    420ff2 <flatcc_verify_union_field@@Base+0x182>
  420fe6:	mov    DWORD PTR [rbp-0x4],0x18
  420fed:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  420ff2:	jmp    420ff7 <flatcc_verify_union_field@@Base+0x187>
  420ff7:	mov    rax,QWORD PTR [rbp-0x30]
  420ffb:	movzx  ecx,BYTE PTR [rax]
  420ffe:	cmp    ecx,0x0
  421001:	jne    421013 <flatcc_verify_union_field@@Base+0x1a3>
  421007:	mov    DWORD PTR [rbp-0x4],0x0
  42100e:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  421013:	jmp    421018 <flatcc_verify_union_field@@Base+0x1a8>
  421018:	mov    rdi,QWORD PTR [rbp-0x10]
  42101c:	mov    ax,WORD PTR [rbp-0x12]
  421020:	mov    edx,DWORD PTR [rbp-0x18]
  421023:	movzx  esi,ax
  421026:	lea    rcx,[rbp-0x34]
  42102a:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  42102f:	mov    DWORD PTR [rbp-0x68],eax
  421032:	cmp    DWORD PTR [rbp-0x68],0x0
  421036:	jne    421046 <flatcc_verify_union_field@@Base+0x1d6>
  42103c:	cmp    DWORD PTR [rbp-0x34],0x0
  421040:	jne    421051 <flatcc_verify_union_field@@Base+0x1e1>
  421046:	mov    eax,DWORD PTR [rbp-0x68]
  421049:	mov    DWORD PTR [rbp-0x4],eax
  42104c:	jmp    4210a2 <flatcc_verify_union_field@@Base+0x232>
  421051:	jmp    421056 <flatcc_verify_union_field@@Base+0x1e6>
  421056:	mov    rax,QWORD PTR [rbp-0x10]
  42105a:	mov    rax,QWORD PTR [rax]
  42105d:	mov    QWORD PTR [rbp-0x58],rax
  421061:	mov    rax,QWORD PTR [rbp-0x10]
  421065:	mov    ecx,DWORD PTR [rax+0x8]
  421068:	mov    DWORD PTR [rbp-0x50],ecx
  42106b:	mov    rax,QWORD PTR [rbp-0x10]
  42106f:	mov    ecx,DWORD PTR [rax+0xc]
  421072:	mov    DWORD PTR [rbp-0x4c],ecx
  421075:	mov    ecx,DWORD PTR [rbp-0x34]
  421078:	mov    DWORD PTR [rbp-0x44],ecx
  42107b:	mov    rax,QWORD PTR [rbp-0x10]
  42107f:	mov    rdi,QWORD PTR [rax]
  421082:	mov    esi,DWORD PTR [rbp-0x34]
  421085:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  42108a:	mov    DWORD PTR [rbp-0x40],eax
  42108d:	mov    rdx,QWORD PTR [rbp-0x30]
  421091:	mov    r8b,BYTE PTR [rdx]
  421094:	mov    BYTE PTR [rbp-0x48],r8b
  421098:	lea    rdi,[rbp-0x58]
  42109c:	call   QWORD PTR [rbp-0x20]
  42109f:	mov    DWORD PTR [rbp-0x4],eax
  4210a2:	mov    eax,DWORD PTR [rbp-0x4]
  4210a5:	add    rsp,0x80
  4210ac:	pop    rbp
  4210ad:	ret    
  4210ae:	xchg   ax,ax
  4210b0:	push   rbp
  4210b1:	mov    rbp,rsp
  4210b4:	sub    rsp,0x20
  4210b8:	mov    QWORD PTR [rbp-0x10],rdi
  4210bc:	mov    WORD PTR [rbp-0x12],si
  4210c0:	movzx  eax,WORD PTR [rbp-0x12]
  4210c4:	add    eax,0x2
  4210c7:	movsxd rcx,eax
  4210ca:	shl    rcx,0x1
  4210ce:	mov    WORD PTR [rbp-0x14],cx
  4210d2:	movzx  eax,WORD PTR [rbp-0x14]
  4210d6:	mov    rdx,QWORD PTR [rbp-0x10]
  4210da:	movzx  r8d,WORD PTR [rdx+0x1e]
  4210df:	cmp    eax,r8d
  4210e2:	jl     4210f4 <flatcc_verify_union_field@@Base+0x284>
  4210e8:	mov    DWORD PTR [rbp-0x4],0x0
  4210ef:	jmp    42110b <flatcc_verify_union_field@@Base+0x29b>
  4210f4:	mov    rax,QWORD PTR [rbp-0x10]
  4210f8:	mov    rdi,QWORD PTR [rax+0x10]
  4210fc:	movzx  esi,WORD PTR [rbp-0x14]
  421100:	call   4216f0 <flatcc_verify_union_vector_field@@Base+0x5d0>
  421105:	movzx  ecx,ax
  421108:	mov    DWORD PTR [rbp-0x4],ecx
  42110b:	mov    eax,DWORD PTR [rbp-0x4]
  42110e:	add    rsp,0x20
  421112:	pop    rbp
  421113:	ret    
  421114:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42111e:	xchg   ax,ax

0000000000421120 <flatcc_verify_union_vector_field@@Base>:
  421120:	push   rbp
  421121:	mov    rbp,rsp
  421124:	sub    rsp,0x80
  42112b:	mov    QWORD PTR [rbp-0x10],rdi
  42112f:	mov    WORD PTR [rbp-0x12],si
  421133:	mov    DWORD PTR [rbp-0x18],edx
  421136:	mov    QWORD PTR [rbp-0x20],rcx
  42113a:	mov    rdi,QWORD PTR [rbp-0x10]
  42113e:	movzx  eax,WORD PTR [rbp-0x12]
  421142:	sub    eax,0x1
  421145:	movzx  esi,ax
  421148:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  42114d:	xor    edx,edx
  42114f:	mov    WORD PTR [rbp-0x22],ax
  421153:	movzx  esi,ax
  421156:	cmp    edx,esi
  421158:	jne    4211b7 <flatcc_verify_union_vector_field@@Base+0x97>
  42115e:	mov    rdi,QWORD PTR [rbp-0x10]
  421162:	movzx  esi,WORD PTR [rbp-0x12]
  421166:	call   4210b0 <flatcc_verify_union_field@@Base+0x240>
  42116b:	xor    ecx,ecx
  42116d:	mov    WORD PTR [rbp-0x24],ax
  421171:	movzx  edx,ax
  421174:	cmp    ecx,edx
  421176:	jne    4211b2 <flatcc_verify_union_vector_field@@Base+0x92>
  42117c:	jmp    421181 <flatcc_verify_union_vector_field@@Base+0x61>
  421181:	cmp    DWORD PTR [rbp-0x18],0x0
  421185:	setne  al
  421188:	xor    al,0xff
  42118a:	and    al,0x1
  42118c:	movzx  ecx,al
  42118f:	mov    DWORD PTR [rbp-0x44],ecx
  421192:	cmp    DWORD PTR [rbp-0x44],0x0
  421196:	jne    4211a8 <flatcc_verify_union_vector_field@@Base+0x88>
  42119c:	mov    DWORD PTR [rbp-0x4],0x16
  4211a3:	jmp    421340 <flatcc_verify_union_vector_field@@Base+0x220>
  4211a8:	jmp    4211ad <flatcc_verify_union_vector_field@@Base+0x8d>
  4211ad:	jmp    4211b2 <flatcc_verify_union_vector_field@@Base+0x92>
  4211b2:	jmp    4211b7 <flatcc_verify_union_vector_field@@Base+0x97>
  4211b7:	mov    rdi,QWORD PTR [rbp-0x10]
  4211bb:	movzx  eax,WORD PTR [rbp-0x12]
  4211bf:	sub    eax,0x1
  4211c2:	mov    edx,DWORD PTR [rbp-0x18]
  4211c5:	movzx  esi,ax
  4211c8:	mov    ecx,0x1
  4211cd:	mov    r8d,0x1
  4211d3:	mov    r9d,0xffffffff
  4211d9:	call   41fb20 <flatcc_verify_vector_field@@Base>
  4211de:	cmp    eax,0x0
  4211e1:	je     421216 <flatcc_verify_union_vector_field@@Base+0xf6>
  4211e7:	mov    rdi,QWORD PTR [rbp-0x10]
  4211eb:	movzx  eax,WORD PTR [rbp-0x12]
  4211ef:	sub    eax,0x1
  4211f2:	mov    edx,DWORD PTR [rbp-0x18]
  4211f5:	movzx  esi,ax
  4211f8:	mov    ecx,0x1
  4211fd:	mov    r8d,0x1
  421203:	mov    r9d,0xffffffff
  421209:	call   41fb20 <flatcc_verify_vector_field@@Base>
  42120e:	mov    DWORD PTR [rbp-0x4],eax
  421211:	jmp    421340 <flatcc_verify_union_vector_field@@Base+0x220>
  421216:	mov    rdi,QWORD PTR [rbp-0x10]
  42121a:	movzx  eax,WORD PTR [rbp-0x12]
  42121e:	sub    eax,0x1
  421221:	movzx  esi,ax
  421224:	call   420c90 <flatcc_verify_struct_as_nested_root@@Base+0x120>
  421229:	xor    ecx,ecx
  42122b:	mov    edx,ecx
  42122d:	mov    QWORD PTR [rbp-0x30],rax
  421231:	cmp    rdx,rax
  421234:	jne    421246 <flatcc_verify_union_vector_field@@Base+0x126>
  42123a:	mov    DWORD PTR [rbp-0x4],0x0
  421241:	jmp    421340 <flatcc_verify_union_vector_field@@Base+0x220>
  421246:	xor    esi,esi
  421248:	mov    rax,QWORD PTR [rbp-0x30]
  42124c:	mov    rcx,QWORD PTR [rbp-0x30]
  421250:	mov    rdi,rcx
  421253:	mov    QWORD PTR [rbp-0x50],rax
  421257:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  42125c:	xor    esi,esi
  42125e:	mov    eax,eax
  421260:	mov    ecx,eax
  421262:	mov    rdx,QWORD PTR [rbp-0x50]
  421266:	add    rdx,rcx
  421269:	mov    QWORD PTR [rbp-0x30],rdx
  42126d:	mov    rcx,QWORD PTR [rbp-0x30]
  421271:	mov    rdi,rcx
  421274:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  421279:	mov    DWORD PTR [rbp-0x3c],eax
  42127c:	mov    rcx,QWORD PTR [rbp-0x30]
  421280:	add    rcx,0x4
  421287:	mov    QWORD PTR [rbp-0x30],rcx
  42128b:	mov    rcx,QWORD PTR [rbp-0x30]
  42128f:	mov    QWORD PTR [rbp-0x38],rcx
  421293:	mov    rdi,QWORD PTR [rbp-0x10]
  421297:	mov    ax,WORD PTR [rbp-0x12]
  42129b:	mov    edx,DWORD PTR [rbp-0x18]
  42129e:	movzx  esi,ax
  4212a1:	lea    rcx,[rbp-0x40]
  4212a5:	call   41f8b0 <flatcc_verify_string_field@@Base+0xa0>
  4212aa:	mov    DWORD PTR [rbp-0x48],eax
  4212ad:	cmp    DWORD PTR [rbp-0x48],0x0
  4212b1:	jne    4212c1 <flatcc_verify_union_vector_field@@Base+0x1a1>
  4212b7:	cmp    DWORD PTR [rbp-0x40],0x0
  4212bb:	jne    4212cc <flatcc_verify_union_vector_field@@Base+0x1ac>
  4212c1:	mov    eax,DWORD PTR [rbp-0x48]
  4212c4:	mov    DWORD PTR [rbp-0x4],eax
  4212c7:	jmp    421340 <flatcc_verify_union_vector_field@@Base+0x220>
  4212cc:	jmp    4212d1 <flatcc_verify_union_vector_field@@Base+0x1b1>
  4212d1:	mov    rax,QWORD PTR [rbp-0x10]
  4212d5:	mov    rdi,QWORD PTR [rax]
  4212d8:	mov    rax,QWORD PTR [rbp-0x10]
  4212dc:	mov    esi,DWORD PTR [rax+0x8]
  4212df:	mov    edx,DWORD PTR [rbp-0x40]
  4212e2:	mov    rax,QWORD PTR [rbp-0x10]
  4212e6:	mov    rax,QWORD PTR [rax]
  4212e9:	mov    ecx,DWORD PTR [rbp-0x40]
  4212ec:	mov    QWORD PTR [rbp-0x58],rdi
  4212f0:	mov    rdi,rax
  4212f3:	mov    DWORD PTR [rbp-0x5c],esi
  4212f6:	mov    esi,ecx
  4212f8:	mov    DWORD PTR [rbp-0x60],edx
  4212fb:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  421300:	mov    r8d,DWORD PTR [rbp-0x3c]
  421304:	mov    r9,QWORD PTR [rbp-0x38]
  421308:	mov    rdi,QWORD PTR [rbp-0x10]
  42130c:	mov    ecx,DWORD PTR [rdi+0xc]
  42130f:	mov    rdi,QWORD PTR [rbp-0x20]
  421313:	mov    r10,QWORD PTR [rbp-0x58]
  421317:	mov    QWORD PTR [rbp-0x68],rdi
  42131b:	mov    rdi,r10
  42131e:	mov    esi,DWORD PTR [rbp-0x5c]
  421321:	mov    edx,DWORD PTR [rbp-0x60]
  421324:	mov    DWORD PTR [rbp-0x6c],ecx
  421327:	mov    ecx,eax
  421329:	mov    eax,DWORD PTR [rbp-0x6c]
  42132c:	mov    DWORD PTR [rsp],eax
  42132f:	mov    r11,QWORD PTR [rbp-0x68]
  421333:	mov    QWORD PTR [rsp+0x8],r11
  421338:	call   421350 <flatcc_verify_union_vector_field@@Base+0x230>
  42133d:	mov    DWORD PTR [rbp-0x4],eax
  421340:	mov    eax,DWORD PTR [rbp-0x4]
  421343:	add    rsp,0x80
  42134a:	pop    rbp
  42134b:	ret    
  42134c:	nop    DWORD PTR [rax+0x0]
  421350:	push   rbp
  421351:	mov    rbp,rsp
  421354:	sub    rsp,0x70
  421358:	mov    rax,QWORD PTR [rbp+0x18]
  42135c:	mov    r10d,DWORD PTR [rbp+0x10]
  421360:	mov    QWORD PTR [rbp-0x10],rdi
  421364:	mov    DWORD PTR [rbp-0x14],esi
  421367:	mov    DWORD PTR [rbp-0x18],edx
  42136a:	mov    DWORD PTR [rbp-0x1c],ecx
  42136d:	mov    DWORD PTR [rbp-0x20],r8d
  421371:	mov    QWORD PTR [rbp-0x28],r9
  421375:	mov    eax,DWORD PTR [rbp+0x10]
  421378:	mov    ecx,eax
  42137a:	add    ecx,0xffffffff
  42137d:	mov    DWORD PTR [rbp+0x10],ecx
  421380:	cmp    eax,0x0
  421383:	setg   dl
  421386:	and    dl,0x1
  421389:	movzx  eax,dl
  42138c:	mov    DWORD PTR [rbp-0x5c],eax
  42138f:	cmp    DWORD PTR [rbp-0x5c],0x0
  421393:	jne    4213a5 <flatcc_verify_union_vector_field@@Base+0x285>
  421399:	mov    DWORD PTR [rbp-0x4],0x3
  4213a0:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  4213a5:	jmp    4213aa <flatcc_verify_union_vector_field@@Base+0x28a>
  4213aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4213ae:	mov    esi,DWORD PTR [rbp-0x14]
  4213b1:	mov    edx,DWORD PTR [rbp-0x18]
  4213b4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4213b7:	mov    eax,0x4
  4213bc:	mov    r8d,eax
  4213bf:	mov    r9d,eax
  4213c2:	mov    DWORD PTR [rsp],0x3fffffff
  4213c9:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  4213ce:	cmp    eax,0x0
  4213d1:	je     421403 <flatcc_verify_union_vector_field@@Base+0x2e3>
  4213d7:	mov    rdi,QWORD PTR [rbp-0x10]
  4213db:	mov    esi,DWORD PTR [rbp-0x14]
  4213de:	mov    edx,DWORD PTR [rbp-0x18]
  4213e1:	mov    ecx,DWORD PTR [rbp-0x1c]
  4213e4:	mov    eax,0x4
  4213e9:	mov    r8d,eax
  4213ec:	mov    r9d,eax
  4213ef:	mov    DWORD PTR [rsp],0x3fffffff
  4213f6:	call   41fc00 <flatcc_verify_vector_field@@Base+0xe0>
  4213fb:	mov    DWORD PTR [rbp-0x4],eax
  4213fe:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  421403:	mov    eax,DWORD PTR [rbp-0x1c]
  421406:	add    eax,DWORD PTR [rbp-0x18]
  421409:	mov    DWORD PTR [rbp-0x18],eax
  42140c:	mov    rdi,QWORD PTR [rbp-0x10]
  421410:	mov    esi,DWORD PTR [rbp-0x18]
  421413:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  421418:	mov    DWORD PTR [rbp-0x30],eax
  42141b:	mov    eax,DWORD PTR [rbp-0x30]
  42141e:	cmp    eax,DWORD PTR [rbp-0x20]
  421421:	sete   cl
  421424:	and    cl,0x1
  421427:	movzx  eax,cl
  42142a:	mov    DWORD PTR [rbp-0x60],eax
  42142d:	cmp    DWORD PTR [rbp-0x60],0x0
  421431:	jne    421443 <flatcc_verify_union_vector_field@@Base+0x323>
  421437:	mov    DWORD PTR [rbp-0x4],0x22
  42143e:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  421443:	jmp    421448 <flatcc_verify_union_vector_field@@Base+0x328>
  421448:	mov    eax,DWORD PTR [rbp-0x18]
  42144b:	mov    ecx,eax
  42144d:	add    rcx,0x4
  421454:	mov    DWORD PTR [rbp-0x18],ecx
  421457:	mov    rdx,QWORD PTR [rbp-0x10]
  42145b:	mov    QWORD PTR [rbp-0x58],rdx
  42145f:	mov    eax,DWORD PTR [rbp-0x14]
  421462:	mov    DWORD PTR [rbp-0x50],eax
  421465:	mov    eax,DWORD PTR [rbp+0x10]
  421468:	mov    DWORD PTR [rbp-0x4c],eax
  42146b:	mov    DWORD PTR [rbp-0x2c],0x0
  421472:	mov    eax,DWORD PTR [rbp-0x2c]
  421475:	cmp    eax,DWORD PTR [rbp-0x30]
  421478:	jae    42157d <flatcc_verify_union_vector_field@@Base+0x45d>
  42147e:	mov    rdi,QWORD PTR [rbp-0x10]
  421482:	mov    esi,DWORD PTR [rbp-0x18]
  421485:	call   41faf0 <flatcc_verify_string_field@@Base+0x2e0>
  42148a:	mov    DWORD PTR [rbp-0x34],eax
  42148d:	cmp    DWORD PTR [rbp-0x34],0x0
  421491:	jne    4214db <flatcc_verify_union_vector_field@@Base+0x3bb>
  421497:	jmp    42149c <flatcc_verify_union_vector_field@@Base+0x37c>
  42149c:	mov    rax,QWORD PTR [rbp-0x28]
  4214a0:	mov    ecx,DWORD PTR [rbp-0x2c]
  4214a3:	mov    edx,ecx
  4214a5:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4214a9:	cmp    ecx,0x0
  4214ac:	sete   sil
  4214b0:	and    sil,0x1
  4214b4:	movzx  ecx,sil
  4214b8:	mov    DWORD PTR [rbp-0x64],ecx
  4214bb:	cmp    DWORD PTR [rbp-0x64],0x0
  4214bf:	jne    4214d1 <flatcc_verify_union_vector_field@@Base+0x3b1>
  4214c5:	mov    DWORD PTR [rbp-0x4],0x20
  4214cc:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  4214d1:	jmp    4214d6 <flatcc_verify_union_vector_field@@Base+0x3b6>
  4214d6:	jmp    42155b <flatcc_verify_union_vector_field@@Base+0x43b>
  4214db:	jmp    4214e0 <flatcc_verify_union_vector_field@@Base+0x3c0>
  4214e0:	mov    rax,QWORD PTR [rbp-0x28]
  4214e4:	mov    ecx,DWORD PTR [rbp-0x2c]
  4214e7:	mov    edx,ecx
  4214e9:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4214ed:	cmp    ecx,0x0
  4214f0:	setne  sil
  4214f4:	and    sil,0x1
  4214f8:	movzx  ecx,sil
  4214fc:	mov    DWORD PTR [rbp-0x68],ecx
  4214ff:	cmp    DWORD PTR [rbp-0x68],0x0
  421503:	jne    421515 <flatcc_verify_union_vector_field@@Base+0x3f5>
  421509:	mov    DWORD PTR [rbp-0x4],0x21
  421510:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  421515:	jmp    42151a <flatcc_verify_union_vector_field@@Base+0x3fa>
  42151a:	mov    rax,QWORD PTR [rbp-0x28]
  42151e:	mov    ecx,DWORD PTR [rbp-0x2c]
  421521:	mov    edx,ecx
  421523:	mov    sil,BYTE PTR [rax+rdx*1]
  421527:	mov    BYTE PTR [rbp-0x48],sil
  42152b:	mov    ecx,DWORD PTR [rbp-0x18]
  42152e:	mov    DWORD PTR [rbp-0x44],ecx
  421531:	mov    ecx,DWORD PTR [rbp-0x34]
  421534:	mov    DWORD PTR [rbp-0x40],ecx
  421537:	lea    rdi,[rbp-0x58]
  42153b:	call   QWORD PTR [rbp+0x18]
  42153e:	cmp    eax,0x0
  421541:	je     421556 <flatcc_verify_union_vector_field@@Base+0x436>
  421547:	lea    rdi,[rbp-0x58]
  42154b:	call   QWORD PTR [rbp+0x18]
  42154e:	mov    DWORD PTR [rbp-0x4],eax
  421551:	jmp    421584 <flatcc_verify_union_vector_field@@Base+0x464>
  421556:	jmp    42155b <flatcc_verify_union_vector_field@@Base+0x43b>
  42155b:	jmp    421560 <flatcc_verify_union_vector_field@@Base+0x440>
  421560:	mov    eax,DWORD PTR [rbp-0x2c]
  421563:	add    eax,0x1
  421566:	mov    DWORD PTR [rbp-0x2c],eax
  421569:	mov    eax,DWORD PTR [rbp-0x18]
  42156c:	mov    ecx,eax
  42156e:	add    rcx,0x4
  421575:	mov    DWORD PTR [rbp-0x18],ecx
  421578:	jmp    421472 <flatcc_verify_union_vector_field@@Base+0x352>
  42157d:	mov    DWORD PTR [rbp-0x4],0x0
  421584:	mov    eax,DWORD PTR [rbp-0x4]
  421587:	add    rsp,0x70
  42158b:	pop    rbp
  42158c:	ret    
  42158d:	nop    DWORD PTR [rax]
  421590:	push   rbp
  421591:	mov    rbp,rsp
  421594:	xor    eax,eax
  421596:	mov    DWORD PTR [rbp-0x4],edi
  421599:	mov    DWORD PTR [rbp-0x8],esi
  42159c:	mov    DWORD PTR [rbp-0xc],edx
  42159f:	mov    ecx,DWORD PTR [rbp-0x8]
  4215a2:	add    ecx,DWORD PTR [rbp-0xc]
  4215a5:	mov    DWORD PTR [rbp-0x10],ecx
  4215a8:	mov    ecx,DWORD PTR [rbp-0x10]
  4215ab:	cmp    ecx,DWORD PTR [rbp-0x8]
  4215ae:	mov    BYTE PTR [rbp-0x11],al
  4215b1:	jbe    4215ef <flatcc_verify_union_vector_field@@Base+0x4cf>
  4215b7:	xor    eax,eax
  4215b9:	mov    ecx,DWORD PTR [rbp-0x10]
  4215bc:	mov    edx,ecx
  4215be:	add    rdx,0x4
  4215c5:	mov    ecx,DWORD PTR [rbp-0x4]
  4215c8:	mov    esi,ecx
  4215ca:	cmp    rdx,rsi
  4215cd:	mov    BYTE PTR [rbp-0x11],al
  4215d0:	ja     4215ef <flatcc_verify_union_vector_field@@Base+0x4cf>
  4215d6:	mov    eax,DWORD PTR [rbp-0x10]
  4215d9:	mov    ecx,eax
  4215db:	and    rcx,0x3
  4215e2:	cmp    rcx,0x0
  4215e6:	setne  dl
  4215e9:	xor    dl,0xff
  4215ec:	mov    BYTE PTR [rbp-0x11],dl
  4215ef:	mov    al,BYTE PTR [rbp-0x11]
  4215f2:	and    al,0x1
  4215f4:	movzx  eax,al
  4215f7:	pop    rbp
  4215f8:	ret    
  4215f9:	nop    DWORD PTR [rax+0x0]
  421600:	push   rbp
  421601:	mov    rbp,rsp
  421604:	sub    rsp,0x10
  421608:	mov    QWORD PTR [rbp-0x8],rdi
  42160c:	mov    rax,QWORD PTR [rbp-0x8]
  421610:	mov    edi,DWORD PTR [rax]
  421612:	call   421620 <flatcc_verify_union_vector_field@@Base+0x500>
  421617:	add    rsp,0x10
  42161b:	pop    rbp
  42161c:	ret    
  42161d:	nop    DWORD PTR [rax]
  421620:	push   rbp
  421621:	mov    rbp,rsp
  421624:	mov    DWORD PTR [rbp-0x4],edi
  421627:	mov    eax,DWORD PTR [rbp-0x4]
  42162a:	pop    rbp
  42162b:	ret    
  42162c:	nop    DWORD PTR [rax+0x0]
  421630:	push   rbp
  421631:	mov    rbp,rsp
  421634:	mov    DWORD PTR [rbp-0x4],edi
  421637:	mov    DWORD PTR [rbp-0x8],esi
  42163a:	mov    DWORD PTR [rbp-0xc],edx
  42163d:	mov    WORD PTR [rbp-0xe],cx
  421641:	mov    eax,DWORD PTR [rbp-0x8]
  421644:	add    eax,DWORD PTR [rbp-0xc]
  421647:	mov    DWORD PTR [rbp-0x14],eax
  42164a:	movzx  eax,WORD PTR [rbp-0xe]
  42164e:	mov    r8d,eax
  421651:	cmp    r8,0x4
  421655:	jae    421669 <flatcc_verify_union_vector_field@@Base+0x549>
  42165b:	mov    eax,0x4
  421660:	mov    QWORD PTR [rbp-0x20],rax
  421664:	jmp    421673 <flatcc_verify_union_vector_field@@Base+0x553>
  421669:	movzx  eax,WORD PTR [rbp-0xe]
  42166d:	mov    ecx,eax
  42166f:	mov    QWORD PTR [rbp-0x20],rcx
  421673:	mov    rax,QWORD PTR [rbp-0x20]
  421677:	xor    ecx,ecx
  421679:	mov    WORD PTR [rbp-0xe],ax
  42167d:	mov    edx,DWORD PTR [rbp-0x14]
  421680:	cmp    edx,DWORD PTR [rbp-0x8]
  421683:	mov    BYTE PTR [rbp-0x21],cl
  421686:	jbe    4216db <flatcc_verify_union_vector_field@@Base+0x5bb>
  42168c:	xor    eax,eax
  42168e:	mov    ecx,DWORD PTR [rbp-0x14]
  421691:	mov    edx,ecx
  421693:	add    rdx,0x4
  42169a:	mov    ecx,DWORD PTR [rbp-0x4]
  42169d:	mov    esi,ecx
  42169f:	cmp    rdx,rsi
  4216a2:	mov    BYTE PTR [rbp-0x21],al
  4216a5:	ja     4216db <flatcc_verify_union_vector_field@@Base+0x5bb>
  4216ab:	mov    eax,DWORD PTR [rbp-0x14]
  4216ae:	mov    ecx,eax
  4216b0:	add    rcx,0x4
  4216b7:	movzx  eax,WORD PTR [rbp-0xe]
  4216bb:	sub    eax,0x1
  4216be:	movsxd rdx,eax
  4216c1:	or     rdx,0x3
  4216c8:	and    rcx,rdx
  4216cb:	cmp    rcx,0x0
  4216cf:	setne  sil
  4216d3:	xor    sil,0xff
  4216d7:	mov    BYTE PTR [rbp-0x21],sil
  4216db:	mov    al,BYTE PTR [rbp-0x21]
  4216de:	and    al,0x1
  4216e0:	movzx  eax,al
  4216e3:	pop    rbp
  4216e4:	ret    
  4216e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216ef:	nop
  4216f0:	push   rbp
  4216f1:	mov    rbp,rsp
  4216f4:	sub    rsp,0x10
  4216f8:	mov    QWORD PTR [rbp-0x8],rdi
  4216fc:	mov    DWORD PTR [rbp-0xc],esi
  4216ff:	mov    rax,QWORD PTR [rbp-0x8]
  421703:	mov    ecx,DWORD PTR [rbp-0xc]
  421706:	mov    edx,ecx
  421708:	add    rax,rdx
  42170b:	mov    rdi,rax
  42170e:	call   421720 <flatcc_verify_union_vector_field@@Base+0x600>
  421713:	movzx  eax,ax
  421716:	add    rsp,0x10
  42171a:	pop    rbp
  42171b:	ret    
  42171c:	nop    DWORD PTR [rax+0x0]
  421720:	push   rbp
  421721:	mov    rbp,rsp
  421724:	sub    rsp,0x10
  421728:	mov    QWORD PTR [rbp-0x8],rdi
  42172c:	mov    rax,QWORD PTR [rbp-0x8]
  421730:	movzx  edi,WORD PTR [rax]
  421733:	call   421750 <flatcc_verify_union_vector_field@@Base+0x630>
  421738:	movzx  eax,ax
  42173b:	add    rsp,0x10
  42173f:	pop    rbp
  421740:	ret    
  421741:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42174b:	nop    DWORD PTR [rax+rax*1+0x0]
  421750:	push   rbp
  421751:	mov    rbp,rsp
  421754:	mov    WORD PTR [rbp-0x2],di
  421758:	movzx  eax,WORD PTR [rbp-0x2]
  42175c:	pop    rbp
  42175d:	ret    
  42175e:	xchg   ax,ax
  421760:	push   rbp
  421761:	mov    rbp,rsp
  421764:	mov    DWORD PTR [rbp-0x4],edi
  421767:	mov    eax,DWORD PTR [rbp-0x4]
  42176a:	pop    rbp
  42176b:	ret    
  42176c:	nop    DWORD PTR [rax+0x0]
  421770:	push   rbp
  421771:	mov    rbp,rsp
  421774:	sub    rsp,0x10
  421778:	mov    QWORD PTR [rbp-0x8],rdi
  42177c:	mov    rax,QWORD PTR [rbp-0x8]
  421780:	mov    edi,DWORD PTR [rax]
  421782:	call   421790 <flatcc_verify_union_vector_field@@Base+0x670>
  421787:	add    rsp,0x10
  42178b:	pop    rbp
  42178c:	ret    
  42178d:	nop    DWORD PTR [rax]
  421790:	push   rbp
  421791:	mov    rbp,rsp
  421794:	mov    DWORD PTR [rbp-0x4],edi
  421797:	mov    eax,DWORD PTR [rbp-0x4]
  42179a:	pop    rbp
  42179b:	ret    
  42179c:	nop    DWORD PTR [rax+0x0]

00000000004217a0 <__libc_csu_init@@Base>:
  4217a0:	endbr64 
  4217a4:	push   r15
  4217a6:	lea    r15,[rip+0xf64b]        # 430df8 <flatcc_builder_padding_base@@Base+0xa248>
  4217ad:	push   r14
  4217af:	mov    r14,rdx
  4217b2:	push   r13
  4217b4:	mov    r13,rsi
  4217b7:	push   r12
  4217b9:	mov    r12d,edi
  4217bc:	push   rbp
  4217bd:	lea    rbp,[rip+0xf63c]        # 430e00 <flatcc_builder_padding_base@@Base+0xa250>
  4217c4:	push   rbx
  4217c5:	sub    rbp,r15
  4217c8:	sub    rsp,0x8
  4217cc:	call   404000 <free@plt-0x30>
  4217d1:	sar    rbp,0x3
  4217d5:	je     4217f6 <__libc_csu_init@@Base+0x56>
  4217d7:	xor    ebx,ebx
  4217d9:	nop    DWORD PTR [rax+0x0]
  4217e0:	mov    rdx,r14
  4217e3:	mov    rsi,r13
  4217e6:	mov    edi,r12d
  4217e9:	call   QWORD PTR [r15+rbx*8]
  4217ed:	add    rbx,0x1
  4217f1:	cmp    rbp,rbx
  4217f4:	jne    4217e0 <__libc_csu_init@@Base+0x40>
  4217f6:	add    rsp,0x8
  4217fa:	pop    rbx
  4217fb:	pop    rbp
  4217fc:	pop    r12
  4217fe:	pop    r13
  421800:	pop    r14
  421802:	pop    r15
  421804:	ret    
  421805:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000421810 <__libc_csu_fini@@Base>:
  421810:	endbr64 
  421814:	ret    

Disassembly of section .fini:

0000000000421818 <.fini>:
  421818:	endbr64 
  42181c:	sub    rsp,0x8
  421820:	add    rsp,0x8
  421824:	ret    
