
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xafe1]        # 40cff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <getenv@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <getenv@plt-0x10>:
  402020:	push   QWORD PTR [rip+0xafe2]        # 40d008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0xafe4]        # 40d010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <getenv@plt>:
  402030:	jmp    QWORD PTR [rip+0xafe2]        # 40d018 <getenv@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <getenv@plt-0x10>

0000000000402040 <free@plt>:
  402040:	jmp    QWORD PTR [rip+0xafda]        # 40d020 <free@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <getenv@plt-0x10>

0000000000402050 <__vfprintf_chk@plt>:
  402050:	jmp    QWORD PTR [rip+0xafd2]        # 40d028 <__vfprintf_chk@GLIBC_2.3.4>
  402056:	push   0x2
  40205b:	jmp    402020 <getenv@plt-0x10>

0000000000402060 <abort@plt>:
  402060:	jmp    QWORD PTR [rip+0xafca]        # 40d030 <abort@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <getenv@plt-0x10>

0000000000402070 <__errno_location@plt>:
  402070:	jmp    QWORD PTR [rip+0xafc2]        # 40d038 <__errno_location@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <getenv@plt-0x10>

0000000000402080 <strncmp@plt>:
  402080:	jmp    QWORD PTR [rip+0xafba]        # 40d040 <strncmp@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <getenv@plt-0x10>

0000000000402090 <strcpy@plt>:
  402090:	jmp    QWORD PTR [rip+0xafb2]        # 40d048 <strcpy@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <getenv@plt-0x10>

00000000004020a0 <mkdir@plt>:
  4020a0:	jmp    QWORD PTR [rip+0xafaa]        # 40d050 <mkdir@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <getenv@plt-0x10>

00000000004020b0 <puts@plt>:
  4020b0:	jmp    QWORD PTR [rip+0xafa2]        # 40d058 <puts@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <getenv@plt-0x10>

00000000004020c0 <fread@plt>:
  4020c0:	jmp    QWORD PTR [rip+0xaf9a]        # 40d060 <fread@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <getenv@plt-0x10>

00000000004020d0 <fcntl@plt>:
  4020d0:	jmp    QWORD PTR [rip+0xaf92]        # 40d068 <fcntl@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <getenv@plt-0x10>

00000000004020e0 <getpid@plt>:
  4020e0:	jmp    QWORD PTR [rip+0xaf8a]        # 40d070 <getpid@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <getenv@plt-0x10>

00000000004020f0 <fclose@plt>:
  4020f0:	jmp    QWORD PTR [rip+0xaf82]        # 40d078 <fclose@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <getenv@plt-0x10>

0000000000402100 <strlen@plt>:
  402100:	jmp    QWORD PTR [rip+0xaf7a]        # 40d080 <strlen@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <getenv@plt-0x10>

0000000000402110 <__stack_chk_fail@plt>:
  402110:	jmp    QWORD PTR [rip+0xaf72]        # 40d088 <__stack_chk_fail@GLIBC_2.4>
  402116:	push   0xe
  40211b:	jmp    402020 <getenv@plt-0x10>

0000000000402120 <setbuf@plt>:
  402120:	jmp    QWORD PTR [rip+0xaf6a]        # 40d090 <setbuf@GLIBC_2.2.5>
  402126:	push   0xf
  40212b:	jmp    402020 <getenv@plt-0x10>

0000000000402130 <printf@plt>:
  402130:	jmp    QWORD PTR [rip+0xaf62]        # 40d098 <printf@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <getenv@plt-0x10>

0000000000402140 <__assert_fail@plt>:
  402140:	jmp    QWORD PTR [rip+0xaf5a]        # 40d0a0 <__assert_fail@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <getenv@plt-0x10>

0000000000402150 <memset@plt>:
  402150:	jmp    QWORD PTR [rip+0xaf52]        # 40d0a8 <memset@GLIBC_2.2.5>
  402156:	push   0x12
  40215b:	jmp    402020 <getenv@plt-0x10>

0000000000402160 <strnlen@plt>:
  402160:	jmp    QWORD PTR [rip+0xaf4a]        # 40d0b0 <strnlen@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <getenv@plt-0x10>

0000000000402170 <close@plt>:
  402170:	jmp    QWORD PTR [rip+0xaf42]        # 40d0b8 <close@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <getenv@plt-0x10>

0000000000402180 <fprintf@plt>:
  402180:	jmp    QWORD PTR [rip+0xaf3a]        # 40d0c0 <fprintf@GLIBC_2.2.5>
  402186:	push   0x15
  40218b:	jmp    402020 <getenv@plt-0x10>

0000000000402190 <ftell@plt>:
  402190:	jmp    QWORD PTR [rip+0xaf32]        # 40d0c8 <ftell@GLIBC_2.2.5>
  402196:	push   0x16
  40219b:	jmp    402020 <getenv@plt-0x10>

00000000004021a0 <strtol@plt>:
  4021a0:	jmp    QWORD PTR [rip+0xaf2a]        # 40d0d0 <strtol@GLIBC_2.2.5>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <getenv@plt-0x10>

00000000004021b0 <memcpy@plt>:
  4021b0:	jmp    QWORD PTR [rip+0xaf22]        # 40d0d8 <memcpy@GLIBC_2.14>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <getenv@plt-0x10>

00000000004021c0 <malloc@plt>:
  4021c0:	jmp    QWORD PTR [rip+0xaf1a]        # 40d0e0 <malloc@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <getenv@plt-0x10>

00000000004021d0 <fflush@plt>:
  4021d0:	jmp    QWORD PTR [rip+0xaf12]        # 40d0e8 <fflush@GLIBC_2.2.5>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <getenv@plt-0x10>

00000000004021e0 <__fxstat@plt>:
  4021e0:	jmp    QWORD PTR [rip+0xaf0a]        # 40d0f0 <__fxstat@GLIBC_2.2.5>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <getenv@plt-0x10>

00000000004021f0 <fseek@plt>:
  4021f0:	jmp    QWORD PTR [rip+0xaf02]        # 40d0f8 <fseek@GLIBC_2.2.5>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <getenv@plt-0x10>

0000000000402200 <fdopen@plt>:
  402200:	jmp    QWORD PTR [rip+0xaefa]        # 40d100 <fdopen@GLIBC_2.2.5>
  402206:	push   0x1d
  40220b:	jmp    402020 <getenv@plt-0x10>

0000000000402210 <open@plt>:
  402210:	jmp    QWORD PTR [rip+0xaef2]        # 40d108 <open@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <getenv@plt-0x10>

0000000000402220 <access@plt>:
  402220:	jmp    QWORD PTR [rip+0xaeea]        # 40d110 <access@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <getenv@plt-0x10>

0000000000402230 <__cxa_atexit@plt>:
  402230:	jmp    QWORD PTR [rip+0xaee2]        # 40d118 <__cxa_atexit@GLIBC_2.2.5>
  402236:	push   0x20
  40223b:	jmp    402020 <getenv@plt-0x10>

0000000000402240 <exit@plt>:
  402240:	jmp    QWORD PTR [rip+0xaeda]        # 40d120 <exit@GLIBC_2.2.5>
  402246:	push   0x21
  40224b:	jmp    402020 <getenv@plt-0x10>

0000000000402250 <fwrite@plt>:
  402250:	jmp    QWORD PTR [rip+0xaed2]        # 40d128 <fwrite@GLIBC_2.2.5>
  402256:	push   0x22
  40225b:	jmp    402020 <getenv@plt-0x10>

0000000000402260 <__fprintf_chk@plt>:
  402260:	jmp    QWORD PTR [rip+0xaeca]        # 40d130 <__fprintf_chk@GLIBC_2.3.4>
  402266:	push   0x23
  40226b:	jmp    402020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000402270 <_start@@Base>:
  402270:	endbr64 
  402274:	xor    ebp,ebp
  402276:	mov    r9,rdx
  402279:	pop    rsi
  40227a:	mov    rdx,rsp
  40227d:	and    rsp,0xfffffffffffffff0
  402281:	push   rax
  402282:	push   rsp
  402283:	mov    r8,0x409e30
  40228a:	mov    rcx,0x409dc0
  402291:	mov    rdi,0x4053bc
  402298:	call   QWORD PTR [rip+0xad4a]        # 40cfe8 <__libc_start_main@GLIBC_2.2.5>
  40229e:	hlt    
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	ret    
  4022a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022af:	nop
  4022b0:	mov    eax,0x40e797
  4022b5:	push   rbp
  4022b6:	sub    rax,0x40e790
  4022bc:	cmp    rax,0xe
  4022c0:	mov    rbp,rsp
  4022c3:	jbe    4022e0 <_start@@Base+0x70>
  4022c5:	mov    eax,0x0
  4022ca:	test   rax,rax
  4022cd:	je     4022e0 <_start@@Base+0x70>
  4022cf:	pop    rbp
  4022d0:	mov    edi,0x40e790
  4022d5:	jmp    rax
  4022d7:	nop    WORD PTR [rax+rax*1+0x0]
  4022e0:	pop    rbp
  4022e1:	ret    
  4022e2:	nop    DWORD PTR [rax+0x0]
  4022e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022f0:	mov    esi,0x40e790
  4022f5:	push   rbp
  4022f6:	sub    rsi,0x40e790
  4022fd:	sar    rsi,0x3
  402301:	mov    rbp,rsp
  402304:	mov    rax,rsi
  402307:	shr    rax,0x3f
  40230b:	add    rsi,rax
  40230e:	sar    rsi,1
  402311:	je     402328 <_start@@Base+0xb8>
  402313:	mov    eax,0x0
  402318:	test   rax,rax
  40231b:	je     402328 <_start@@Base+0xb8>
  40231d:	pop    rbp
  40231e:	mov    edi,0x40e790
  402323:	jmp    rax
  402325:	nop    DWORD PTR [rax]
  402328:	pop    rbp
  402329:	ret    
  40232a:	nop    WORD PTR [rax+rax*1+0x0]
  402330:	cmp    BYTE PTR [rip+0xc469],0x0        # 40e7a0 <__bss_start@@Base+0x10>
  402337:	jne    40234a <_start@@Base+0xda>
  402339:	push   rbp
  40233a:	mov    rbp,rsp
  40233d:	call   4022b0 <_start@@Base+0x40>
  402342:	pop    rbp
  402343:	mov    BYTE PTR [rip+0xc456],0x1        # 40e7a0 <__bss_start@@Base+0x10>
  40234a:	repz ret 
  40234c:	nop    DWORD PTR [rax+0x0]
  402350:	mov    edi,0x40ce08
  402355:	cmp    QWORD PTR [rdi],0x0
  402359:	jne    402360 <_start@@Base+0xf0>
  40235b:	jmp    4022f0 <_start@@Base+0x80>
  40235d:	nop    DWORD PTR [rax]
  402360:	mov    eax,0x0
  402365:	test   rax,rax
  402368:	je     40235b <_start@@Base+0xeb>
  40236a:	push   rbp
  40236b:	mov    rbp,rsp
  40236e:	call   rax
  402370:	pop    rbp
  402371:	jmp    4022f0 <_start@@Base+0x80>

0000000000402376 <next@@Base>:
  402376:	push   rbp
  402377:	mov    rbp,rsp
  40237a:	sub    rsp,0x10
  40237e:	mov    QWORD PTR [rbp-0x8],rdi
  402382:	mov    rdx,QWORD PTR [rbp-0x8]
  402386:	mov    rax,0x40faa0
  40238d:	mov    QWORD PTR [rax],rdx
  402390:	mov    rax,0x40faa0
  402397:	mov    eax,DWORD PTR [rax+0x198]
  40239d:	cmp    eax,0x31
  4023a0:	ja     4023d0 <next@@Base+0x5a>
  4023a2:	mov    rax,0x40faa0
  4023a9:	mov    eax,DWORD PTR [rax+0x198]
  4023af:	mov    eax,eax
  4023b1:	lea    rdx,[rax*8+0x0]
  4023b9:	mov    rax,0x40faa0
  4023c0:	add    rax,rdx
  4023c3:	lea    rdx,[rax+0x8]
  4023c7:	mov    rax,QWORD PTR [rbp-0x8]
  4023cb:	mov    QWORD PTR [rdx],rax
  4023ce:	jmp    4023ff <next@@Base+0x89>
  4023d0:	mov    rax,0x40faa0
  4023d7:	mov    eax,DWORD PTR [rax+0x1a0]
  4023dd:	lea    edx,[rax+0x1]
  4023e0:	mov    rax,0x40faa0
  4023e7:	mov    DWORD PTR [rax+0x1a0],edx
  4023ed:	mov    rax,QWORD PTR [rip+0xcbec]        # 40efe0 <__bss_start@@Base+0x850>
  4023f4:	add    rax,0x1
  4023f8:	mov    QWORD PTR [rip+0xcbe1],rax        # 40efe0 <__bss_start@@Base+0x850>
  4023ff:	mov    rax,0x40faa0
  402406:	mov    eax,DWORD PTR [rax+0x198]
  40240c:	lea    edx,[rax+0x1]
  40240f:	mov    rax,0x40faa0
  402416:	mov    DWORD PTR [rax+0x198],edx
  40241c:	mov    rax,0x40fc80
  402423:	mov    eax,DWORD PTR [rax+0x190]
  402429:	cmp    eax,0x31
  40242c:	ja     402471 <next@@Base+0xfb>
  40242e:	mov    rax,0x40fc80
  402435:	mov    eax,DWORD PTR [rax+0x190]
  40243b:	lea    ecx,[rax+0x1]
  40243e:	mov    rdx,0x40fc80
  402445:	mov    DWORD PTR [rdx+0x190],ecx
  40244b:	mov    rdx,0x40fc80
  402452:	mov    ecx,eax
  402454:	mov    rax,0x402376
  40245b:	mov    QWORD PTR [rdx+rcx*8],rax
  40245f:	mov    rax,QWORD PTR [rip+0xcb82]        # 40efe8 <__bss_start@@Base+0x858>
  402466:	add    rax,0x1
  40246a:	mov    QWORD PTR [rip+0xcb77],rax        # 40efe8 <__bss_start@@Base+0x858>
  402471:	mov    rax,0x40faa0
  402478:	mov    rax,QWORD PTR [rax+0x1c0]
  40247f:	test   rax,rax
  402482:	je     4024c4 <next@@Base+0x14e>
  402484:	mov    rax,QWORD PTR [rip+0xcb65]        # 40eff0 <__bss_start@@Base+0x860>
  40248b:	add    rax,0x1
  40248f:	mov    QWORD PTR [rip+0xcb5a],rax        # 40eff0 <__bss_start@@Base+0x860>
  402496:	mov    rax,0x40faa0
  40249d:	mov    rax,QWORD PTR [rax+0x1c0]
  4024a4:	mov    rdx,QWORD PTR [rbp-0x8]
  4024a8:	mov    rdi,rdx
  4024ab:	call   rax
  4024ad:	mov    rdx,QWORD PTR [rip+0xcb44]        # 40eff8 <__bss_start@@Base+0x868>
  4024b4:	add    rdx,0x1
  4024b8:	mov    QWORD PTR [rip+0xcb39],rdx        # 40eff8 <__bss_start@@Base+0x868>
  4024bf:	jmp    4025a1 <next@@Base+0x22b>
  4024c4:	mov    rax,0x40faa0
  4024cb:	mov    eax,DWORD PTR [rax+0x1b0]
  4024d1:	test   eax,eax
  4024d3:	je     402581 <next@@Base+0x20b>
  4024d9:	mov    rax,0x40faa0
  4024e0:	mov    edx,DWORD PTR [rax+0x1b4]
  4024e6:	mov    rax,0x40faa0
  4024ed:	mov    eax,DWORD PTR [rax+0x1b0]
  4024f3:	cmp    edx,eax
  4024f5:	jge    402542 <next@@Base+0x1cc>
  4024f7:	mov    rax,0x40faa0
  4024fe:	mov    rsi,QWORD PTR [rax+0x1b8]
  402505:	mov    rax,0x40faa0
  40250c:	mov    eax,DWORD PTR [rax+0x1b4]
  402512:	lea    ecx,[rax+0x1]
  402515:	mov    rdx,0x40faa0
  40251c:	mov    DWORD PTR [rdx+0x1b4],ecx
  402522:	cdqe   
  402524:	shl    rax,0x3
  402528:	add    rax,rsi
  40252b:	mov    rax,QWORD PTR [rax]
  40252e:	mov    rdx,QWORD PTR [rip+0xcacb]        # 40f000 <__bss_start@@Base+0x870>
  402535:	add    rdx,0x1
  402539:	mov    QWORD PTR [rip+0xcac0],rdx        # 40f000 <__bss_start@@Base+0x870>
  402540:	jmp    4025a1 <next@@Base+0x22b>
  402542:	mov    rax,0x40faa0
  402549:	mov    rdx,QWORD PTR [rax+0x1b8]
  402550:	mov    rax,0x40faa0
  402557:	mov    eax,DWORD PTR [rax+0x1b0]
  40255d:	cdqe   
  40255f:	shl    rax,0x3
  402563:	sub    rax,0x8
  402567:	add    rax,rdx
  40256a:	mov    rax,QWORD PTR [rax]
  40256d:	mov    rdx,QWORD PTR [rip+0xca94]        # 40f008 <__bss_start@@Base+0x878>
  402574:	add    rdx,0x1
  402578:	mov    QWORD PTR [rip+0xca89],rdx        # 40f008 <__bss_start@@Base+0x878>
  40257f:	jmp    4025a1 <next@@Base+0x22b>
  402581:	mov    rax,0x40faa0
  402588:	mov    rax,QWORD PTR [rax+0x1a8]
  40258f:	mov    rdx,QWORD PTR [rip+0xca7a]        # 40f010 <__bss_start@@Base+0x880>
  402596:	add    rdx,0x1
  40259a:	mov    QWORD PTR [rip+0xca6f],rdx        # 40f010 <__bss_start@@Base+0x880>
  4025a1:	leave  
  4025a2:	ret    

00000000004025a3 <next_reset@@Base>:
  4025a3:	push   rbp
  4025a4:	mov    rbp,rsp
  4025a7:	mov    rax,QWORD PTR [rip+0xca1a]        # 40efc8 <__bss_start@@Base+0x838>
  4025ae:	add    rax,0x1
  4025b2:	mov    QWORD PTR [rip+0xca0f],rax        # 40efc8 <__bss_start@@Base+0x838>
  4025b9:	mov    edx,0x1c8
  4025be:	mov    esi,0x0
  4025c3:	mov    rax,0x40faa0
  4025ca:	mov    rdi,rax
  4025cd:	call   402150 <memset@plt>
  4025d2:	mov    rax,0x40faa0
  4025d9:	mov    DWORD PTR [rax+0x19c],0x32
  4025e3:	nop
  4025e4:	pop    rbp
  4025e5:	ret    

00000000004025e6 <push_back@@Base>:
  4025e6:	push   rbp
  4025e7:	mov    rbp,rsp
  4025ea:	sub    rsp,0x10
  4025ee:	mov    QWORD PTR [rbp-0x8],rdi
  4025f2:	mov    QWORD PTR [rbp-0x10],rsi
  4025f6:	mov    rdx,QWORD PTR [rbp-0x8]
  4025fa:	mov    rax,0x40f740
  402601:	mov    QWORD PTR [rax],rdx
  402604:	mov    rdx,QWORD PTR [rbp-0x10]
  402608:	mov    rax,0x40f740
  40260f:	mov    QWORD PTR [rax+0x198],rdx
  402616:	mov    rax,0x40f740
  40261d:	mov    eax,DWORD PTR [rax+0x330]
  402623:	cmp    eax,0x31
  402626:	ja     402694 <push_back@@Base+0xae>
  402628:	mov    rax,0x40f740
  40262f:	mov    eax,DWORD PTR [rax+0x330]
  402635:	mov    eax,eax
  402637:	lea    rdx,[rax*8+0x0]
  40263f:	mov    rax,0x40f740
  402646:	add    rax,rdx
  402649:	lea    rdx,[rax+0x8]
  40264d:	mov    rax,QWORD PTR [rbp-0x8]
  402651:	mov    QWORD PTR [rdx],rax
  402654:	mov    rax,0x40f740
  40265b:	mov    eax,DWORD PTR [rax+0x330]
  402661:	mov    eax,eax
  402663:	add    rax,0x34
  402667:	lea    rdx,[rax*8+0x0]
  40266f:	mov    rax,0x40f740
  402676:	add    rdx,rax
  402679:	mov    rax,QWORD PTR [rbp-0x10]
  40267d:	mov    QWORD PTR [rdx],rax
  402680:	mov    rax,QWORD PTR [rip+0xc919]        # 40efa0 <__bss_start@@Base+0x810>
  402687:	add    rax,0x1
  40268b:	mov    QWORD PTR [rip+0xc90e],rax        # 40efa0 <__bss_start@@Base+0x810>
  402692:	jmp    4026c3 <push_back@@Base+0xdd>
  402694:	mov    rax,0x40f740
  40269b:	mov    eax,DWORD PTR [rax+0x338]
  4026a1:	lea    edx,[rax+0x1]
  4026a4:	mov    rax,0x40f740
  4026ab:	mov    DWORD PTR [rax+0x338],edx
  4026b1:	mov    rax,QWORD PTR [rip+0xc8f0]        # 40efa8 <__bss_start@@Base+0x818>
  4026b8:	add    rax,0x1
  4026bc:	mov    QWORD PTR [rip+0xc8e5],rax        # 40efa8 <__bss_start@@Base+0x818>
  4026c3:	mov    rax,0x40f740
  4026ca:	mov    eax,DWORD PTR [rax+0x330]
  4026d0:	lea    edx,[rax+0x1]
  4026d3:	mov    rax,0x40f740
  4026da:	mov    DWORD PTR [rax+0x330],edx
  4026e0:	mov    rax,0x40fc80
  4026e7:	mov    eax,DWORD PTR [rax+0x190]
  4026ed:	cmp    eax,0x31
  4026f0:	ja     402735 <push_back@@Base+0x14f>
  4026f2:	mov    rax,0x40fc80
  4026f9:	mov    eax,DWORD PTR [rax+0x190]
  4026ff:	lea    ecx,[rax+0x1]
  402702:	mov    rdx,0x40fc80
  402709:	mov    DWORD PTR [rdx+0x190],ecx
  40270f:	mov    rdx,0x40fc80
  402716:	mov    ecx,eax
  402718:	mov    rax,0x4025e6
  40271f:	mov    QWORD PTR [rdx+rcx*8],rax
  402723:	mov    rax,QWORD PTR [rip+0xc886]        # 40efb0 <__bss_start@@Base+0x820>
  40272a:	add    rax,0x1
  40272e:	mov    QWORD PTR [rip+0xc87b],rax        # 40efb0 <__bss_start@@Base+0x820>
  402735:	mov    rax,0x40f740
  40273c:	mov    rax,QWORD PTR [rax+0x340]
  402743:	test   rax,rax
  402746:	je     40278a <push_back@@Base+0x1a4>
  402748:	mov    rax,QWORD PTR [rip+0xc869]        # 40efb8 <__bss_start@@Base+0x828>
  40274f:	add    rax,0x1
  402753:	mov    QWORD PTR [rip+0xc85e],rax        # 40efb8 <__bss_start@@Base+0x828>
  40275a:	mov    rax,0x40f740
  402761:	mov    rax,QWORD PTR [rax+0x340]
  402768:	mov    rcx,QWORD PTR [rbp-0x10]
  40276c:	mov    rdx,QWORD PTR [rbp-0x8]
  402770:	mov    rsi,rcx
  402773:	mov    rdi,rdx
  402776:	call   rax
  402778:	mov    rax,QWORD PTR [rip+0xc841]        # 40efc0 <__bss_start@@Base+0x830>
  40277f:	add    rax,0x1
  402783:	mov    QWORD PTR [rip+0xc836],rax        # 40efc0 <__bss_start@@Base+0x830>
  40278a:	nop
  40278b:	leave  
  40278c:	ret    

000000000040278d <push_back_reset@@Base>:
  40278d:	push   rbp
  40278e:	mov    rbp,rsp
  402791:	mov    rax,QWORD PTR [rip+0xc7f0]        # 40ef88 <__bss_start@@Base+0x7f8>
  402798:	add    rax,0x1
  40279c:	mov    QWORD PTR [rip+0xc7e5],rax        # 40ef88 <__bss_start@@Base+0x7f8>
  4027a3:	mov    edx,0x348
  4027a8:	mov    esi,0x0
  4027ad:	mov    rax,0x40f740
  4027b4:	mov    rdi,rax
  4027b7:	call   402150 <memset@plt>
  4027bc:	mov    rax,0x40f740
  4027c3:	mov    DWORD PTR [rax+0x334],0x32
  4027cd:	nop
  4027ce:	pop    rbp
  4027cf:	ret    

00000000004027d0 <setup@@Base>:
  4027d0:	push   rbp
  4027d1:	mov    rbp,rsp
  4027d4:	mov    rax,QWORD PTR [rip+0xc795]        # 40ef70 <__bss_start@@Base+0x7e0>
  4027db:	add    rax,0x1
  4027df:	mov    QWORD PTR [rip+0xc78a],rax        # 40ef70 <__bss_start@@Base+0x7e0>
  4027e6:	mov    eax,0x0
  4027eb:	call   4025a3 <next_reset@@Base>
  4027f0:	mov    rax,QWORD PTR [rip+0xc781]        # 40ef78 <__bss_start@@Base+0x7e8>
  4027f7:	add    rax,0x1
  4027fb:	mov    QWORD PTR [rip+0xc776],rax        # 40ef78 <__bss_start@@Base+0x7e8>
  402802:	mov    eax,0x0
  402807:	call   40278d <push_back_reset@@Base>
  40280c:	mov    rax,QWORD PTR [rip+0xc76d]        # 40ef80 <__bss_start@@Base+0x7f0>
  402813:	add    rax,0x1
  402817:	mov    QWORD PTR [rip+0xc762],rax        # 40ef80 <__bss_start@@Base+0x7f0>
  40281e:	nop
  40281f:	pop    rbp
  402820:	ret    

0000000000402821 <no_int_as_first_stuff@@Base>:
  402821:	push   rbp
  402822:	mov    rbp,rsp
  402825:	sub    rsp,0x40
  402829:	mov    rax,QWORD PTR fs:0x28
  402832:	mov    QWORD PTR [rbp-0x8],rax
  402836:	xor    eax,eax
  402838:	mov    rax,QWORD PTR [rip+0xc701]        # 40ef40 <__bss_start@@Base+0x7b0>
  40283f:	add    rax,0x1
  402843:	mov    QWORD PTR [rip+0xc6f6],rax        # 40ef40 <__bss_start@@Base+0x7b0>
  40284a:	lea    rdx,[rbp-0x20]
  40284e:	lea    rax,[rbp-0x38]
  402852:	mov    rsi,rdx
  402855:	mov    rdi,rax
  402858:	call   406af4 <init_grammar@@Base>
  40285d:	mov    rax,QWORD PTR [rip+0xc6e4]        # 40ef48 <__bss_start@@Base+0x7b8>
  402864:	add    rax,0x1
  402868:	mov    QWORD PTR [rip+0xc6d9],rax        # 40ef48 <__bss_start@@Base+0x7b8>
  40286f:	mov    QWORD PTR [rbp-0x30],0x0
  402877:	mov    edi,0x4
  40287c:	call   4021c0 <malloc@plt>
  402881:	mov    QWORD PTR [rbp-0x28],rax
  402885:	mov    rax,QWORD PTR [rbp-0x28]
  402889:	mov    rdi,rax
  40288c:	call   405c11 <init_token_opar@@Base>
  402891:	mov    rax,QWORD PTR [rip+0xc6b8]        # 40ef50 <__bss_start@@Base+0x7c0>
  402898:	add    rax,0x1
  40289c:	mov    QWORD PTR [rip+0xc6ad],rax        # 40ef50 <__bss_start@@Base+0x7c0>
  4028a3:	mov    rax,0x40faa0
  4028aa:	mov    rdx,QWORD PTR [rbp-0x28]
  4028ae:	mov    QWORD PTR [rax+0x1a8],rdx
  4028b5:	lea    rax,[rbp-0x38]
  4028b9:	mov    rdi,rax
  4028bc:	call   406b81 <read_function_ast_node@@Base>
  4028c1:	mov    QWORD PTR [rbp-0x30],rax
  4028c5:	mov    rax,0x40faa0
  4028cc:	mov    eax,DWORD PTR [rax+0x198]
  4028d2:	cmp    eax,0x1
  4028d5:	je     402908 <no_int_as_first_stuff@@Base+0xe7>
  4028d7:	mov    rax,QWORD PTR [rip+0xc67a]        # 40ef58 <__bss_start@@Base+0x7c8>
  4028de:	add    rax,0x1
  4028e2:	mov    QWORD PTR [rip+0xc66f],rax        # 40ef58 <__bss_start@@Base+0x7c8>
  4028e9:	lea    rcx,[rip+0x7bc0]        # 40a4b0 <_IO_stdin_used@@Base+0x4b0>
  4028f0:	mov    edx,0x29
  4028f5:	lea    rsi,[rip+0x7724]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4028fc:	lea    rdi,[rip+0x777b]        # 40a07e <_IO_stdin_used@@Base+0x7e>
  402903:	call   402140 <__assert_fail@plt>
  402908:	cmp    QWORD PTR [rbp-0x30],0x0
  40290d:	je     402940 <no_int_as_first_stuff@@Base+0x11f>
  40290f:	mov    rax,QWORD PTR [rip+0xc652]        # 40ef68 <__bss_start@@Base+0x7d8>
  402916:	add    rax,0x1
  40291a:	mov    QWORD PTR [rip+0xc647],rax        # 40ef68 <__bss_start@@Base+0x7d8>
  402921:	lea    rcx,[rip+0x7b88]        # 40a4b0 <_IO_stdin_used@@Base+0x4b0>
  402928:	mov    edx,0x2a
  40292d:	lea    rsi,[rip+0x76ec]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402934:	lea    rdi,[rip+0x775d]        # 40a098 <_IO_stdin_used@@Base+0x98>
  40293b:	call   402140 <__assert_fail@plt>
  402940:	mov    rax,QWORD PTR [rip+0xc619]        # 40ef60 <__bss_start@@Base+0x7d0>
  402947:	add    rax,0x1
  40294b:	mov    QWORD PTR [rip+0xc60e],rax        # 40ef60 <__bss_start@@Base+0x7d0>
  402952:	nop
  402953:	mov    rax,QWORD PTR [rbp-0x8]
  402957:	xor    rax,QWORD PTR fs:0x28
  402960:	je     402967 <no_int_as_first_stuff@@Base+0x146>
  402962:	call   402110 <__stack_chk_fail@plt>
  402967:	leave  
  402968:	ret    

0000000000402969 <int_but_not_followed_by_function@@Base>:
  402969:	push   rbp
  40296a:	mov    rbp,rsp
  40296d:	push   rbx
  40296e:	sub    rsp,0x48
  402972:	mov    rax,QWORD PTR fs:0x28
  40297b:	mov    QWORD PTR [rbp-0x18],rax
  40297f:	xor    eax,eax
  402981:	mov    rax,QWORD PTR [rip+0xc578]        # 40ef00 <__bss_start@@Base+0x770>
  402988:	add    rax,0x1
  40298c:	mov    QWORD PTR [rip+0xc56d],rax        # 40ef00 <__bss_start@@Base+0x770>
  402993:	mov    QWORD PTR [rbp-0x40],0x0
  40299b:	lea    rdx,[rbp-0x30]
  40299f:	lea    rax,[rbp-0x48]
  4029a3:	mov    rsi,rdx
  4029a6:	mov    rdi,rax
  4029a9:	call   406af4 <init_grammar@@Base>
  4029ae:	mov    rax,QWORD PTR [rip+0xc553]        # 40ef08 <__bss_start@@Base+0x778>
  4029b5:	add    rax,0x1
  4029b9:	mov    QWORD PTR [rip+0xc548],rax        # 40ef08 <__bss_start@@Base+0x778>
  4029c0:	mov    edi,0x10
  4029c5:	call   4021c0 <malloc@plt>
  4029ca:	mov    QWORD PTR [rbp-0x38],rax
  4029ce:	mov    edi,0x4
  4029d3:	call   4021c0 <malloc@plt>
  4029d8:	mov    rdx,rax
  4029db:	mov    rax,QWORD PTR [rbp-0x38]
  4029df:	mov    QWORD PTR [rax],rdx
  4029e2:	mov    rax,QWORD PTR [rbp-0x38]
  4029e6:	mov    rax,QWORD PTR [rax]
  4029e9:	mov    rdi,rax
  4029ec:	call   405b7f <init_token_int_type@@Base>
  4029f1:	mov    rax,QWORD PTR [rip+0xc518]        # 40ef10 <__bss_start@@Base+0x780>
  4029f8:	add    rax,0x1
  4029fc:	mov    QWORD PTR [rip+0xc50d],rax        # 40ef10 <__bss_start@@Base+0x780>
  402a03:	mov    rax,QWORD PTR [rbp-0x38]
  402a07:	lea    rbx,[rax+0x8]
  402a0b:	mov    edi,0x4
  402a10:	call   4021c0 <malloc@plt>
  402a15:	mov    QWORD PTR [rbx],rax
  402a18:	mov    rax,QWORD PTR [rbp-0x38]
  402a1c:	add    rax,0x8
  402a20:	mov    rax,QWORD PTR [rax]
  402a23:	mov    rdi,rax
  402a26:	call   405c11 <init_token_opar@@Base>
  402a2b:	mov    rax,QWORD PTR [rip+0xc4e6]        # 40ef18 <__bss_start@@Base+0x788>
  402a32:	add    rax,0x1
  402a36:	mov    QWORD PTR [rip+0xc4db],rax        # 40ef18 <__bss_start@@Base+0x788>
  402a3d:	mov    rax,0x40faa0
  402a44:	mov    rdx,QWORD PTR [rbp-0x38]
  402a48:	mov    QWORD PTR [rax+0x1b8],rdx
  402a4f:	mov    rax,0x40faa0
  402a56:	mov    DWORD PTR [rax+0x1b0],0x2
  402a60:	lea    rax,[rbp-0x48]
  402a64:	mov    rdi,rax
  402a67:	call   406b81 <read_function_ast_node@@Base>
  402a6c:	mov    QWORD PTR [rbp-0x40],rax
  402a70:	mov    rax,0x40faa0
  402a77:	mov    eax,DWORD PTR [rax+0x198]
  402a7d:	cmp    eax,0x2
  402a80:	je     402ab3 <int_but_not_followed_by_function@@Base+0x14a>
  402a82:	mov    rax,QWORD PTR [rip+0xc497]        # 40ef20 <__bss_start@@Base+0x790>
  402a89:	add    rax,0x1
  402a8d:	mov    QWORD PTR [rip+0xc48c],rax        # 40ef20 <__bss_start@@Base+0x790>
  402a94:	lea    rcx,[rip+0x7a45]        # 40a4e0 <_IO_stdin_used@@Base+0x4e0>
  402a9b:	mov    edx,0x43
  402aa0:	lea    rsi,[rip+0x7579]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402aa7:	lea    rdi,[rip+0x75f6]        # 40a0a4 <_IO_stdin_used@@Base+0xa4>
  402aae:	call   402140 <__assert_fail@plt>
  402ab3:	cmp    QWORD PTR [rbp-0x40],0x0
  402ab8:	je     402aeb <int_but_not_followed_by_function@@Base+0x182>
  402aba:	mov    rax,QWORD PTR [rip+0xc46f]        # 40ef30 <__bss_start@@Base+0x7a0>
  402ac1:	add    rax,0x1
  402ac5:	mov    QWORD PTR [rip+0xc464],rax        # 40ef30 <__bss_start@@Base+0x7a0>
  402acc:	lea    rcx,[rip+0x7a0d]        # 40a4e0 <_IO_stdin_used@@Base+0x4e0>
  402ad3:	mov    edx,0x44
  402ad8:	lea    rsi,[rip+0x7541]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402adf:	lea    rdi,[rip+0x75b2]        # 40a098 <_IO_stdin_used@@Base+0x98>
  402ae6:	call   402140 <__assert_fail@plt>
  402aeb:	mov    rax,QWORD PTR [rip+0xc436]        # 40ef28 <__bss_start@@Base+0x798>
  402af2:	add    rax,0x1
  402af6:	mov    QWORD PTR [rip+0xc42b],rax        # 40ef28 <__bss_start@@Base+0x798>
  402afd:	nop
  402afe:	mov    rax,QWORD PTR [rbp-0x18]
  402b02:	xor    rax,QWORD PTR fs:0x28
  402b0b:	je     402b12 <int_but_not_followed_by_function@@Base+0x1a9>
  402b0d:	call   402110 <__stack_chk_fail@plt>
  402b12:	add    rsp,0x48
  402b16:	pop    rbx
  402b17:	pop    rbp
  402b18:	ret    

0000000000402b19 <boolean_expression_is_read_properly@@Base>:
  402b19:	push   rbp
  402b1a:	mov    rbp,rsp
  402b1d:	push   rbx
  402b1e:	sub    rsp,0x58
  402b22:	mov    rax,QWORD PTR fs:0x28
  402b2b:	mov    QWORD PTR [rbp-0x18],rax
  402b2f:	xor    eax,eax
  402b31:	mov    rax,QWORD PTR [rip+0xc368]        # 40eea0 <__bss_start@@Base+0x710>
  402b38:	add    rax,0x1
  402b3c:	mov    QWORD PTR [rip+0xc35d],rax        # 40eea0 <__bss_start@@Base+0x710>
  402b43:	mov    QWORD PTR [rbp-0x50],0x0
  402b4b:	mov    QWORD PTR [rbp-0x48],0x0
  402b53:	mov    edi,0x3
  402b58:	call   4021c0 <malloc@plt>
  402b5d:	mov    QWORD PTR [rbp-0x40],rax
  402b61:	mov    rax,QWORD PTR [rbp-0x40]
  402b65:	mov    BYTE PTR [rax],0x21
  402b68:	mov    rax,QWORD PTR [rbp-0x40]
  402b6c:	add    rax,0x1
  402b70:	mov    BYTE PTR [rax],0x3d
  402b73:	mov    rax,QWORD PTR [rbp-0x40]
  402b77:	add    rax,0x2
  402b7b:	mov    BYTE PTR [rax],0x0
  402b7e:	lea    rdx,[rbp-0x30]
  402b82:	lea    rax,[rbp-0x58]
  402b86:	mov    rsi,rdx
  402b89:	mov    rdi,rax
  402b8c:	call   406af4 <init_grammar@@Base>
  402b91:	mov    rax,QWORD PTR [rip+0xc310]        # 40eea8 <__bss_start@@Base+0x718>
  402b98:	add    rax,0x1
  402b9c:	mov    QWORD PTR [rip+0xc305],rax        # 40eea8 <__bss_start@@Base+0x718>
  402ba3:	mov    edi,0x28
  402ba8:	call   4021c0 <malloc@plt>
  402bad:	mov    QWORD PTR [rbp-0x38],rax
  402bb1:	mov    edi,0x8
  402bb6:	call   4021c0 <malloc@plt>
  402bbb:	mov    rdx,rax
  402bbe:	mov    rax,QWORD PTR [rbp-0x38]
  402bc2:	mov    QWORD PTR [rax],rdx
  402bc5:	mov    rax,QWORD PTR [rbp-0x38]
  402bc9:	mov    rax,QWORD PTR [rax]
  402bcc:	mov    esi,0x2
  402bd1:	mov    rdi,rax
  402bd4:	call   405ba6 <init_token_int_value@@Base>
  402bd9:	mov    rax,QWORD PTR [rip+0xc2d0]        # 40eeb0 <__bss_start@@Base+0x720>
  402be0:	add    rax,0x1
  402be4:	mov    QWORD PTR [rip+0xc2c5],rax        # 40eeb0 <__bss_start@@Base+0x720>
  402beb:	mov    rax,QWORD PTR [rbp-0x38]
  402bef:	lea    rbx,[rax+0x8]
  402bf3:	mov    edi,0x8
  402bf8:	call   4021c0 <malloc@plt>
  402bfd:	mov    QWORD PTR [rbx],rax
  402c00:	mov    rax,QWORD PTR [rbp-0x38]
  402c04:	add    rax,0x8
  402c08:	mov    rax,QWORD PTR [rax]
  402c0b:	mov    esi,0x2
  402c10:	mov    rdi,rax
  402c13:	call   405ba6 <init_token_int_value@@Base>
  402c18:	mov    rax,QWORD PTR [rip+0xc299]        # 40eeb8 <__bss_start@@Base+0x728>
  402c1f:	add    rax,0x1
  402c23:	mov    QWORD PTR [rip+0xc28e],rax        # 40eeb8 <__bss_start@@Base+0x728>
  402c2a:	mov    rax,QWORD PTR [rbp-0x38]
  402c2e:	lea    rbx,[rax+0x10]
  402c32:	mov    edi,0x10
  402c37:	call   4021c0 <malloc@plt>
  402c3c:	mov    QWORD PTR [rbx],rax
  402c3f:	mov    rax,QWORD PTR [rbp-0x38]
  402c43:	add    rax,0x10
  402c47:	mov    rax,QWORD PTR [rax]
  402c4a:	mov    rdx,QWORD PTR [rbp-0x40]
  402c4e:	mov    rsi,rdx
  402c51:	mov    rdi,rax
  402c54:	call   405d70 <init_token_boolean_op@@Base>
  402c59:	mov    rax,QWORD PTR [rip+0xc260]        # 40eec0 <__bss_start@@Base+0x730>
  402c60:	add    rax,0x1
  402c64:	mov    QWORD PTR [rip+0xc255],rax        # 40eec0 <__bss_start@@Base+0x730>
  402c6b:	mov    rax,QWORD PTR [rbp-0x38]
  402c6f:	lea    rbx,[rax+0x18]
  402c73:	mov    edi,0x8
  402c78:	call   4021c0 <malloc@plt>
  402c7d:	mov    QWORD PTR [rbx],rax
  402c80:	mov    rax,QWORD PTR [rbp-0x38]
  402c84:	add    rax,0x18
  402c88:	mov    rax,QWORD PTR [rax]
  402c8b:	mov    esi,0x1
  402c90:	mov    rdi,rax
  402c93:	call   405ba6 <init_token_int_value@@Base>
  402c98:	mov    rax,QWORD PTR [rip+0xc229]        # 40eec8 <__bss_start@@Base+0x738>
  402c9f:	add    rax,0x1
  402ca3:	mov    QWORD PTR [rip+0xc21e],rax        # 40eec8 <__bss_start@@Base+0x738>
  402caa:	mov    rax,QWORD PTR [rbp-0x38]
  402cae:	lea    rbx,[rax+0x20]
  402cb2:	mov    edi,0x4
  402cb7:	call   4021c0 <malloc@plt>
  402cbc:	mov    QWORD PTR [rbx],rax
  402cbf:	mov    rax,QWORD PTR [rbp-0x38]
  402cc3:	add    rax,0x20
  402cc7:	mov    rax,QWORD PTR [rax]
  402cca:	mov    rdi,rax
  402ccd:	call   405c38 <init_token_cpar@@Base>
  402cd2:	mov    rax,QWORD PTR [rip+0xc1f7]        # 40eed0 <__bss_start@@Base+0x740>
  402cd9:	add    rax,0x1
  402cdd:	mov    QWORD PTR [rip+0xc1ec],rax        # 40eed0 <__bss_start@@Base+0x740>
  402ce4:	mov    rax,0x40faa0
  402ceb:	mov    rdx,QWORD PTR [rbp-0x38]
  402cef:	mov    QWORD PTR [rax+0x1b8],rdx
  402cf6:	mov    rax,0x40faa0
  402cfd:	mov    DWORD PTR [rax+0x1b0],0x5
  402d07:	lea    rax,[rbp-0x58]
  402d0b:	mov    rdi,rax
  402d0e:	call   40739f <read_boolean_expression@@Base>
  402d13:	mov    QWORD PTR [rbp-0x50],rax
  402d17:	mov    rax,0x40faa0
  402d1e:	mov    eax,DWORD PTR [rax+0x198]
  402d24:	cmp    eax,0x5
  402d27:	je     402d5a <boolean_expression_is_read_properly@@Base+0x241>
  402d29:	mov    rax,QWORD PTR [rip+0xc1a8]        # 40eed8 <__bss_start@@Base+0x748>
  402d30:	add    rax,0x1
  402d34:	mov    QWORD PTR [rip+0xc19d],rax        # 40eed8 <__bss_start@@Base+0x748>
  402d3b:	lea    rcx,[rip+0x77de]        # 40a520 <_IO_stdin_used@@Base+0x520>
  402d42:	mov    edx,0x69
  402d47:	lea    rsi,[rip+0x72d2]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402d4e:	lea    rdi,[rip+0x7369]        # 40a0be <_IO_stdin_used@@Base+0xbe>
  402d55:	call   402140 <__assert_fail@plt>
  402d5a:	mov    rax,0x40f740
  402d61:	mov    eax,DWORD PTR [rax+0x330]
  402d67:	cmp    eax,0x1
  402d6a:	je     402d9d <boolean_expression_is_read_properly@@Base+0x284>
  402d6c:	mov    rax,QWORD PTR [rip+0xc16d]        # 40eee0 <__bss_start@@Base+0x750>
  402d73:	add    rax,0x1
  402d77:	mov    QWORD PTR [rip+0xc162],rax        # 40eee0 <__bss_start@@Base+0x750>
  402d7e:	lea    rcx,[rip+0x779b]        # 40a520 <_IO_stdin_used@@Base+0x520>
  402d85:	mov    edx,0x6a
  402d8a:	lea    rsi,[rip+0x728f]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402d91:	lea    rdi,[rip+0x7340]        # 40a0d8 <_IO_stdin_used@@Base+0xd8>
  402d98:	call   402140 <__assert_fail@plt>
  402d9d:	mov    rax,QWORD PTR [rbp-0x50]
  402da1:	mov    eax,DWORD PTR [rax]
  402da3:	cmp    eax,0x5
  402da6:	je     402dd9 <boolean_expression_is_read_properly@@Base+0x2c0>
  402da8:	mov    rax,QWORD PTR [rip+0xc141]        # 40eef0 <__bss_start@@Base+0x760>
  402daf:	add    rax,0x1
  402db3:	mov    QWORD PTR [rip+0xc136],rax        # 40eef0 <__bss_start@@Base+0x760>
  402dba:	lea    rcx,[rip+0x775f]        # 40a520 <_IO_stdin_used@@Base+0x520>
  402dc1:	mov    edx,0x6b
  402dc6:	lea    rsi,[rip+0x7253]        # 40a020 <_IO_stdin_used@@Base+0x20>
  402dcd:	lea    rdi,[rip+0x7324]        # 40a0f8 <_IO_stdin_used@@Base+0xf8>
  402dd4:	call   402140 <__assert_fail@plt>
  402dd9:	mov    rax,QWORD PTR [rip+0xc108]        # 40eee8 <__bss_start@@Base+0x758>
  402de0:	add    rax,0x1
  402de4:	mov    QWORD PTR [rip+0xc0fd],rax        # 40eee8 <__bss_start@@Base+0x758>
  402deb:	nop
  402dec:	mov    rax,QWORD PTR [rbp-0x18]
  402df0:	xor    rax,QWORD PTR fs:0x28
  402df9:	je     402e00 <boolean_expression_is_read_properly@@Base+0x2e7>
  402dfb:	call   402110 <__stack_chk_fail@plt>
  402e00:	add    rsp,0x58
  402e04:	pop    rbx
  402e05:	pop    rbp
  402e06:	ret    

0000000000402e07 <boolean_expression_complex@@Base>:
  402e07:	push   rbp
  402e08:	mov    rbp,rsp
  402e0b:	push   rbx
  402e0c:	sub    rsp,0x68
  402e10:	mov    rax,QWORD PTR fs:0x28
  402e19:	mov    QWORD PTR [rbp-0x18],rax
  402e1d:	xor    eax,eax
  402e1f:	mov    rax,QWORD PTR [rip+0xbffa]        # 40ee20 <__bss_start@@Base+0x690>
  402e26:	add    rax,0x1
  402e2a:	mov    QWORD PTR [rip+0xbfef],rax        # 40ee20 <__bss_start@@Base+0x690>
  402e31:	mov    QWORD PTR [rbp-0x60],0x0
  402e39:	mov    QWORD PTR [rbp-0x58],0x0
  402e41:	mov    edi,0x3
  402e46:	call   4021c0 <malloc@plt>
  402e4b:	mov    QWORD PTR [rbp-0x50],rax
  402e4f:	mov    edi,0x3
  402e54:	call   4021c0 <malloc@plt>
  402e59:	mov    QWORD PTR [rbp-0x48],rax
  402e5d:	mov    edi,0x3
  402e62:	call   4021c0 <malloc@plt>
  402e67:	mov    QWORD PTR [rbp-0x40],rax
  402e6b:	mov    rax,QWORD PTR [rbp-0x50]
  402e6f:	mov    BYTE PTR [rax],0x3c
  402e72:	mov    rax,QWORD PTR [rbp-0x50]
  402e76:	add    rax,0x1
  402e7a:	mov    BYTE PTR [rax],0x3d
  402e7d:	mov    rax,QWORD PTR [rbp-0x50]
  402e81:	add    rax,0x2
  402e85:	mov    BYTE PTR [rax],0x0
  402e88:	mov    rax,QWORD PTR [rbp-0x48]
  402e8c:	mov    BYTE PTR [rax],0x26
  402e8f:	mov    rax,QWORD PTR [rbp-0x48]
  402e93:	add    rax,0x1
  402e97:	mov    BYTE PTR [rax],0x26
  402e9a:	mov    rax,QWORD PTR [rbp-0x48]
  402e9e:	add    rax,0x2
  402ea2:	mov    BYTE PTR [rax],0x0
  402ea5:	mov    rax,QWORD PTR [rbp-0x40]
  402ea9:	mov    BYTE PTR [rax],0x3d
  402eac:	mov    rax,QWORD PTR [rbp-0x40]
  402eb0:	add    rax,0x1
  402eb4:	mov    BYTE PTR [rax],0x3d
  402eb7:	mov    rax,QWORD PTR [rbp-0x40]
  402ebb:	add    rax,0x2
  402ebf:	mov    BYTE PTR [rax],0x0
  402ec2:	lea    rdx,[rbp-0x30]
  402ec6:	lea    rax,[rbp-0x68]
  402eca:	mov    rsi,rdx
  402ecd:	mov    rdi,rax
  402ed0:	call   406af4 <init_grammar@@Base>
  402ed5:	mov    rax,QWORD PTR [rip+0xbf4c]        # 40ee28 <__bss_start@@Base+0x698>
  402edc:	add    rax,0x1
  402ee0:	mov    QWORD PTR [rip+0xbf41],rax        # 40ee28 <__bss_start@@Base+0x698>
  402ee7:	mov    edi,0x50
  402eec:	call   4021c0 <malloc@plt>
  402ef1:	mov    QWORD PTR [rbp-0x38],rax
  402ef5:	mov    edi,0x8
  402efa:	call   4021c0 <malloc@plt>
  402eff:	mov    rdx,rax
  402f02:	mov    rax,QWORD PTR [rbp-0x38]
  402f06:	mov    QWORD PTR [rax],rdx
  402f09:	mov    rax,QWORD PTR [rbp-0x38]
  402f0d:	mov    rax,QWORD PTR [rax]
  402f10:	mov    esi,0x2
  402f15:	mov    rdi,rax
  402f18:	call   405ba6 <init_token_int_value@@Base>
  402f1d:	mov    rax,QWORD PTR [rip+0xbf0c]        # 40ee30 <__bss_start@@Base+0x6a0>
  402f24:	add    rax,0x1
  402f28:	mov    QWORD PTR [rip+0xbf01],rax        # 40ee30 <__bss_start@@Base+0x6a0>
  402f2f:	mov    rax,QWORD PTR [rbp-0x38]
  402f33:	lea    rbx,[rax+0x8]
  402f37:	mov    edi,0x8
  402f3c:	call   4021c0 <malloc@plt>
  402f41:	mov    QWORD PTR [rbx],rax
  402f44:	mov    rax,QWORD PTR [rbp-0x38]
  402f48:	add    rax,0x8
  402f4c:	mov    rax,QWORD PTR [rax]
  402f4f:	mov    esi,0x2
  402f54:	mov    rdi,rax
  402f57:	call   405ba6 <init_token_int_value@@Base>
  402f5c:	mov    rax,QWORD PTR [rip+0xbed5]        # 40ee38 <__bss_start@@Base+0x6a8>
  402f63:	add    rax,0x1
  402f67:	mov    QWORD PTR [rip+0xbeca],rax        # 40ee38 <__bss_start@@Base+0x6a8>
  402f6e:	mov    rax,QWORD PTR [rbp-0x38]
  402f72:	lea    rbx,[rax+0x10]
  402f76:	mov    edi,0x10
  402f7b:	call   4021c0 <malloc@plt>
  402f80:	mov    QWORD PTR [rbx],rax
  402f83:	mov    rax,QWORD PTR [rbp-0x38]
  402f87:	add    rax,0x10
  402f8b:	mov    rax,QWORD PTR [rax]
  402f8e:	mov    rdx,QWORD PTR [rbp-0x50]
  402f92:	mov    rsi,rdx
  402f95:	mov    rdi,rax
  402f98:	call   405d70 <init_token_boolean_op@@Base>
  402f9d:	mov    rax,QWORD PTR [rip+0xbe9c]        # 40ee40 <__bss_start@@Base+0x6b0>
  402fa4:	add    rax,0x1
  402fa8:	mov    QWORD PTR [rip+0xbe91],rax        # 40ee40 <__bss_start@@Base+0x6b0>
  402faf:	mov    rax,QWORD PTR [rbp-0x38]
  402fb3:	lea    rbx,[rax+0x18]
  402fb7:	mov    edi,0x8
  402fbc:	call   4021c0 <malloc@plt>
  402fc1:	mov    QWORD PTR [rbx],rax
  402fc4:	mov    rax,QWORD PTR [rbp-0x38]
  402fc8:	add    rax,0x18
  402fcc:	mov    rax,QWORD PTR [rax]
  402fcf:	mov    esi,0x1
  402fd4:	mov    rdi,rax
  402fd7:	call   405ba6 <init_token_int_value@@Base>
  402fdc:	mov    rax,QWORD PTR [rip+0xbe65]        # 40ee48 <__bss_start@@Base+0x6b8>
  402fe3:	add    rax,0x1
  402fe7:	mov    QWORD PTR [rip+0xbe5a],rax        # 40ee48 <__bss_start@@Base+0x6b8>
  402fee:	mov    rax,QWORD PTR [rbp-0x38]
  402ff2:	lea    rbx,[rax+0x20]
  402ff6:	mov    edi,0x10
  402ffb:	call   4021c0 <malloc@plt>
  403000:	mov    QWORD PTR [rbx],rax
  403003:	mov    rax,QWORD PTR [rbp-0x38]
  403007:	add    rax,0x20
  40300b:	mov    rax,QWORD PTR [rax]
  40300e:	mov    rdx,QWORD PTR [rbp-0x48]
  403012:	mov    rsi,rdx
  403015:	mov    rdi,rax
  403018:	call   405d70 <init_token_boolean_op@@Base>
  40301d:	mov    rax,QWORD PTR [rip+0xbe2c]        # 40ee50 <__bss_start@@Base+0x6c0>
  403024:	add    rax,0x1
  403028:	mov    QWORD PTR [rip+0xbe21],rax        # 40ee50 <__bss_start@@Base+0x6c0>
  40302f:	mov    rax,QWORD PTR [rbp-0x38]
  403033:	lea    rbx,[rax+0x28]
  403037:	mov    edi,0x8
  40303c:	call   4021c0 <malloc@plt>
  403041:	mov    QWORD PTR [rbx],rax
  403044:	mov    rax,QWORD PTR [rbp-0x38]
  403048:	add    rax,0x28
  40304c:	mov    rax,QWORD PTR [rax]
  40304f:	mov    esi,0x4
  403054:	mov    rdi,rax
  403057:	call   405ba6 <init_token_int_value@@Base>
  40305c:	mov    rax,QWORD PTR [rip+0xbdf5]        # 40ee58 <__bss_start@@Base+0x6c8>
  403063:	add    rax,0x1
  403067:	mov    QWORD PTR [rip+0xbdea],rax        # 40ee58 <__bss_start@@Base+0x6c8>
  40306e:	mov    rax,QWORD PTR [rbp-0x38]
  403072:	lea    rbx,[rax+0x30]
  403076:	mov    edi,0x8
  40307b:	call   4021c0 <malloc@plt>
  403080:	mov    QWORD PTR [rbx],rax
  403083:	mov    rax,QWORD PTR [rbp-0x38]
  403087:	add    rax,0x30
  40308b:	mov    rax,QWORD PTR [rax]
  40308e:	mov    esi,0x4
  403093:	mov    rdi,rax
  403096:	call   405ba6 <init_token_int_value@@Base>
  40309b:	mov    rax,QWORD PTR [rip+0xbdbe]        # 40ee60 <__bss_start@@Base+0x6d0>
  4030a2:	add    rax,0x1
  4030a6:	mov    QWORD PTR [rip+0xbdb3],rax        # 40ee60 <__bss_start@@Base+0x6d0>
  4030ad:	mov    rax,QWORD PTR [rbp-0x38]
  4030b1:	lea    rbx,[rax+0x38]
  4030b5:	mov    edi,0x10
  4030ba:	call   4021c0 <malloc@plt>
  4030bf:	mov    QWORD PTR [rbx],rax
  4030c2:	mov    rax,QWORD PTR [rbp-0x38]
  4030c6:	add    rax,0x38
  4030ca:	mov    rax,QWORD PTR [rax]
  4030cd:	mov    rdx,QWORD PTR [rbp-0x40]
  4030d1:	mov    rsi,rdx
  4030d4:	mov    rdi,rax
  4030d7:	call   405d70 <init_token_boolean_op@@Base>
  4030dc:	mov    rax,QWORD PTR [rip+0xbd85]        # 40ee68 <__bss_start@@Base+0x6d8>
  4030e3:	add    rax,0x1
  4030e7:	mov    QWORD PTR [rip+0xbd7a],rax        # 40ee68 <__bss_start@@Base+0x6d8>
  4030ee:	mov    rax,QWORD PTR [rbp-0x38]
  4030f2:	lea    rbx,[rax+0x40]
  4030f6:	mov    edi,0x8
  4030fb:	call   4021c0 <malloc@plt>
  403100:	mov    QWORD PTR [rbx],rax
  403103:	mov    rax,QWORD PTR [rbp-0x38]
  403107:	add    rax,0x40
  40310b:	mov    rax,QWORD PTR [rax]
  40310e:	mov    esi,0x4
  403113:	mov    rdi,rax
  403116:	call   405ba6 <init_token_int_value@@Base>
  40311b:	mov    rax,QWORD PTR [rip+0xbd4e]        # 40ee70 <__bss_start@@Base+0x6e0>
  403122:	add    rax,0x1
  403126:	mov    QWORD PTR [rip+0xbd43],rax        # 40ee70 <__bss_start@@Base+0x6e0>
  40312d:	mov    rax,QWORD PTR [rbp-0x38]
  403131:	lea    rbx,[rax+0x48]
  403135:	mov    edi,0x4
  40313a:	call   4021c0 <malloc@plt>
  40313f:	mov    QWORD PTR [rbx],rax
  403142:	mov    rax,QWORD PTR [rbp-0x38]
  403146:	add    rax,0x48
  40314a:	mov    rax,QWORD PTR [rax]
  40314d:	mov    rdi,rax
  403150:	call   405c38 <init_token_cpar@@Base>
  403155:	mov    rax,QWORD PTR [rip+0xbd1c]        # 40ee78 <__bss_start@@Base+0x6e8>
  40315c:	add    rax,0x1
  403160:	mov    QWORD PTR [rip+0xbd11],rax        # 40ee78 <__bss_start@@Base+0x6e8>
  403167:	mov    rax,0x40faa0
  40316e:	mov    rdx,QWORD PTR [rbp-0x38]
  403172:	mov    QWORD PTR [rax+0x1b8],rdx
  403179:	mov    rax,0x40faa0
  403180:	mov    DWORD PTR [rax+0x1b0],0xa
  40318a:	lea    rax,[rbp-0x68]
  40318e:	mov    rdi,rax
  403191:	call   40739f <read_boolean_expression@@Base>
  403196:	mov    QWORD PTR [rbp-0x60],rax
  40319a:	mov    rax,0x40faa0
  4031a1:	mov    eax,DWORD PTR [rax+0x198]
  4031a7:	cmp    eax,0xa
  4031aa:	je     4031dd <boolean_expression_complex@@Base+0x3d6>
  4031ac:	mov    rax,QWORD PTR [rip+0xbccd]        # 40ee80 <__bss_start@@Base+0x6f0>
  4031b3:	add    rax,0x1
  4031b7:	mov    QWORD PTR [rip+0xbcc2],rax        # 40ee80 <__bss_start@@Base+0x6f0>
  4031be:	lea    rcx,[rip+0x738b]        # 40a550 <_IO_stdin_used@@Base+0x550>
  4031c5:	mov    edx,0xa6
  4031ca:	lea    rsi,[rip+0x6e4f]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4031d1:	lea    rdi,[rip+0x6f40]        # 40a118 <_IO_stdin_used@@Base+0x118>
  4031d8:	call   402140 <__assert_fail@plt>
  4031dd:	mov    rax,QWORD PTR [rbp-0x60]
  4031e1:	mov    eax,DWORD PTR [rax]
  4031e3:	cmp    eax,0x5
  4031e6:	je     403219 <boolean_expression_complex@@Base+0x412>
  4031e8:	mov    rax,QWORD PTR [rip+0xbca1]        # 40ee90 <__bss_start@@Base+0x700>
  4031ef:	add    rax,0x1
  4031f3:	mov    QWORD PTR [rip+0xbc96],rax        # 40ee90 <__bss_start@@Base+0x700>
  4031fa:	lea    rcx,[rip+0x734f]        # 40a550 <_IO_stdin_used@@Base+0x550>
  403201:	mov    edx,0xa7
  403206:	lea    rsi,[rip+0x6e13]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40320d:	lea    rdi,[rip+0x6ee4]        # 40a0f8 <_IO_stdin_used@@Base+0xf8>
  403214:	call   402140 <__assert_fail@plt>
  403219:	mov    rax,QWORD PTR [rip+0xbc68]        # 40ee88 <__bss_start@@Base+0x6f8>
  403220:	add    rax,0x1
  403224:	mov    QWORD PTR [rip+0xbc5d],rax        # 40ee88 <__bss_start@@Base+0x6f8>
  40322b:	nop
  40322c:	mov    rax,QWORD PTR [rbp-0x18]
  403230:	xor    rax,QWORD PTR fs:0x28
  403239:	je     403240 <boolean_expression_complex@@Base+0x439>
  40323b:	call   402110 <__stack_chk_fail@plt>
  403240:	add    rsp,0x68
  403244:	pop    rbx
  403245:	pop    rbp
  403246:	ret    

0000000000403247 <boolean_binary_operator_is_read_properly@@Base>:
  403247:	push   rbp
  403248:	mov    rbp,rsp
  40324b:	push   rbx
  40324c:	sub    rsp,0x58
  403250:	mov    rax,QWORD PTR fs:0x28
  403259:	mov    QWORD PTR [rbp-0x18],rax
  40325d:	xor    eax,eax
  40325f:	mov    rax,QWORD PTR [rip+0xbb5a]        # 40edc0 <__bss_start@@Base+0x630>
  403266:	add    rax,0x1
  40326a:	mov    QWORD PTR [rip+0xbb4f],rax        # 40edc0 <__bss_start@@Base+0x630>
  403271:	mov    QWORD PTR [rbp-0x50],0x0
  403279:	mov    QWORD PTR [rbp-0x48],0x0
  403281:	mov    edi,0x3
  403286:	call   4021c0 <malloc@plt>
  40328b:	mov    QWORD PTR [rbp-0x40],rax
  40328f:	mov    rax,QWORD PTR [rbp-0x40]
  403293:	mov    BYTE PTR [rax],0x21
  403296:	mov    rax,QWORD PTR [rbp-0x40]
  40329a:	add    rax,0x1
  40329e:	mov    BYTE PTR [rax],0x3d
  4032a1:	mov    rax,QWORD PTR [rbp-0x40]
  4032a5:	add    rax,0x2
  4032a9:	mov    BYTE PTR [rax],0x0
  4032ac:	lea    rdx,[rbp-0x30]
  4032b0:	lea    rax,[rbp-0x58]
  4032b4:	mov    rsi,rdx
  4032b7:	mov    rdi,rax
  4032ba:	call   406af4 <init_grammar@@Base>
  4032bf:	mov    rax,QWORD PTR [rip+0xbb02]        # 40edc8 <__bss_start@@Base+0x638>
  4032c6:	add    rax,0x1
  4032ca:	mov    QWORD PTR [rip+0xbaf7],rax        # 40edc8 <__bss_start@@Base+0x638>
  4032d1:	mov    edi,0x18
  4032d6:	call   4021c0 <malloc@plt>
  4032db:	mov    QWORD PTR [rbp-0x38],rax
  4032df:	mov    edi,0x8
  4032e4:	call   4021c0 <malloc@plt>
  4032e9:	mov    rdx,rax
  4032ec:	mov    rax,QWORD PTR [rbp-0x38]
  4032f0:	mov    QWORD PTR [rax],rdx
  4032f3:	mov    rax,QWORD PTR [rbp-0x38]
  4032f7:	mov    rax,QWORD PTR [rax]
  4032fa:	mov    esi,0x2
  4032ff:	mov    rdi,rax
  403302:	call   405ba6 <init_token_int_value@@Base>
  403307:	mov    rax,QWORD PTR [rip+0xbac2]        # 40edd0 <__bss_start@@Base+0x640>
  40330e:	add    rax,0x1
  403312:	mov    QWORD PTR [rip+0xbab7],rax        # 40edd0 <__bss_start@@Base+0x640>
  403319:	mov    rax,QWORD PTR [rbp-0x38]
  40331d:	lea    rbx,[rax+0x8]
  403321:	mov    edi,0x10
  403326:	call   4021c0 <malloc@plt>
  40332b:	mov    QWORD PTR [rbx],rax
  40332e:	mov    rax,QWORD PTR [rbp-0x38]
  403332:	add    rax,0x8
  403336:	mov    rax,QWORD PTR [rax]
  403339:	mov    rdx,QWORD PTR [rbp-0x40]
  40333d:	mov    rsi,rdx
  403340:	mov    rdi,rax
  403343:	call   405d70 <init_token_boolean_op@@Base>
  403348:	mov    rax,QWORD PTR [rip+0xba89]        # 40edd8 <__bss_start@@Base+0x648>
  40334f:	add    rax,0x1
  403353:	mov    QWORD PTR [rip+0xba7e],rax        # 40edd8 <__bss_start@@Base+0x648>
  40335a:	mov    rax,QWORD PTR [rbp-0x38]
  40335e:	lea    rbx,[rax+0x10]
  403362:	mov    edi,0x8
  403367:	call   4021c0 <malloc@plt>
  40336c:	mov    QWORD PTR [rbx],rax
  40336f:	mov    rax,QWORD PTR [rbp-0x38]
  403373:	add    rax,0x10
  403377:	mov    rax,QWORD PTR [rax]
  40337a:	mov    esi,0x1
  40337f:	mov    rdi,rax
  403382:	call   405ba6 <init_token_int_value@@Base>
  403387:	mov    rax,QWORD PTR [rip+0xba52]        # 40ede0 <__bss_start@@Base+0x650>
  40338e:	add    rax,0x1
  403392:	mov    QWORD PTR [rip+0xba47],rax        # 40ede0 <__bss_start@@Base+0x650>
  403399:	mov    rax,0x40faa0
  4033a0:	mov    rdx,QWORD PTR [rbp-0x38]
  4033a4:	mov    QWORD PTR [rax+0x1b8],rdx
  4033ab:	mov    rax,0x40faa0
  4033b2:	mov    DWORD PTR [rax+0x1b0],0x3
  4033bc:	lea    rax,[rbp-0x58]
  4033c0:	mov    rdi,rax
  4033c3:	call   407743 <read_boolean_binary_expression@@Base>
  4033c8:	mov    QWORD PTR [rbp-0x50],rax
  4033cc:	mov    rax,0x40faa0
  4033d3:	mov    eax,DWORD PTR [rax+0x198]
  4033d9:	cmp    eax,0x3
  4033dc:	je     40340f <boolean_binary_operator_is_read_properly@@Base+0x1c8>
  4033de:	mov    rax,QWORD PTR [rip+0xba03]        # 40ede8 <__bss_start@@Base+0x658>
  4033e5:	add    rax,0x1
  4033e9:	mov    QWORD PTR [rip+0xb9f8],rax        # 40ede8 <__bss_start@@Base+0x658>
  4033f0:	lea    rcx,[rip+0x7189]        # 40a580 <_IO_stdin_used@@Base+0x580>
  4033f7:	mov    edx,0xc8
  4033fc:	lea    rsi,[rip+0x6c1d]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403403:	lea    rdi,[rip+0x6d29]        # 40a133 <_IO_stdin_used@@Base+0x133>
  40340a:	call   402140 <__assert_fail@plt>
  40340f:	mov    rax,QWORD PTR [rbp-0x50]
  403413:	mov    eax,DWORD PTR [rax]
  403415:	cmp    eax,0x5
  403418:	je     40344b <boolean_binary_operator_is_read_properly@@Base+0x204>
  40341a:	mov    rax,QWORD PTR [rip+0xb9cf]        # 40edf0 <__bss_start@@Base+0x660>
  403421:	add    rax,0x1
  403425:	mov    QWORD PTR [rip+0xb9c4],rax        # 40edf0 <__bss_start@@Base+0x660>
  40342c:	lea    rcx,[rip+0x714d]        # 40a580 <_IO_stdin_used@@Base+0x580>
  403433:	mov    edx,0xc9
  403438:	lea    rsi,[rip+0x6be1]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40343f:	lea    rdi,[rip+0x6cb2]        # 40a0f8 <_IO_stdin_used@@Base+0xf8>
  403446:	call   402140 <__assert_fail@plt>
  40344b:	mov    rax,QWORD PTR [rbp-0x50]
  40344f:	mov    QWORD PTR [rbp-0x48],rax
  403453:	mov    rax,QWORD PTR [rbp-0x48]
  403457:	mov    rax,QWORD PTR [rax+0x10]
  40345b:	mov    eax,DWORD PTR [rax]
  40345d:	cmp    eax,0x1
  403460:	je     403493 <boolean_binary_operator_is_read_properly@@Base+0x24c>
  403462:	mov    rax,QWORD PTR [rip+0xb98f]        # 40edf8 <__bss_start@@Base+0x668>
  403469:	add    rax,0x1
  40346d:	mov    QWORD PTR [rip+0xb984],rax        # 40edf8 <__bss_start@@Base+0x668>
  403474:	lea    rcx,[rip+0x7105]        # 40a580 <_IO_stdin_used@@Base+0x580>
  40347b:	mov    edx,0xcb
  403480:	lea    rsi,[rip+0x6b99]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403487:	lea    rdi,[rip+0x6cbf]        # 40a14d <_IO_stdin_used@@Base+0x14d>
  40348e:	call   402140 <__assert_fail@plt>
  403493:	mov    rax,QWORD PTR [rbp-0x48]
  403497:	mov    eax,DWORD PTR [rax+0x20]
  40349a:	cmp    eax,0x1
  40349d:	je     4034d0 <boolean_binary_operator_is_read_properly@@Base+0x289>
  40349f:	mov    rax,QWORD PTR [rip+0xb95a]        # 40ee00 <__bss_start@@Base+0x670>
  4034a6:	add    rax,0x1
  4034aa:	mov    QWORD PTR [rip+0xb94f],rax        # 40ee00 <__bss_start@@Base+0x670>
  4034b1:	lea    rcx,[rip+0x70c8]        # 40a580 <_IO_stdin_used@@Base+0x580>
  4034b8:	mov    edx,0xcc
  4034bd:	lea    rsi,[rip+0x6b5c]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4034c4:	lea    rdi,[rip+0x6c9d]        # 40a168 <_IO_stdin_used@@Base+0x168>
  4034cb:	call   402140 <__assert_fail@plt>
  4034d0:	mov    rax,QWORD PTR [rbp-0x48]
  4034d4:	mov    rax,QWORD PTR [rax+0x18]
  4034d8:	mov    eax,DWORD PTR [rax]
  4034da:	cmp    eax,0x1
  4034dd:	je     403510 <boolean_binary_operator_is_read_properly@@Base+0x2c9>
  4034df:	mov    rax,QWORD PTR [rip+0xb92a]        # 40ee10 <__bss_start@@Base+0x680>
  4034e6:	add    rax,0x1
  4034ea:	mov    QWORD PTR [rip+0xb91f],rax        # 40ee10 <__bss_start@@Base+0x680>
  4034f1:	lea    rcx,[rip+0x7088]        # 40a580 <_IO_stdin_used@@Base+0x580>
  4034f8:	mov    edx,0xcd
  4034fd:	lea    rsi,[rip+0x6b1c]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403504:	lea    rdi,[rip+0x6c76]        # 40a181 <_IO_stdin_used@@Base+0x181>
  40350b:	call   402140 <__assert_fail@plt>
  403510:	mov    rax,QWORD PTR [rip+0xb8f1]        # 40ee08 <__bss_start@@Base+0x678>
  403517:	add    rax,0x1
  40351b:	mov    QWORD PTR [rip+0xb8e6],rax        # 40ee08 <__bss_start@@Base+0x678>
  403522:	nop
  403523:	mov    rax,QWORD PTR [rbp-0x18]
  403527:	xor    rax,QWORD PTR fs:0x28
  403530:	je     403537 <boolean_binary_operator_is_read_properly@@Base+0x2f0>
  403532:	call   402110 <__stack_chk_fail@plt>
  403537:	add    rsp,0x58
  40353b:	pop    rbx
  40353c:	pop    rbp
  40353d:	ret    

000000000040353e <boolean_unary_operator_is_read_properly@@Base>:
  40353e:	push   rbp
  40353f:	mov    rbp,rsp
  403542:	push   rbx
  403543:	sub    rsp,0x58
  403547:	mov    rax,QWORD PTR fs:0x28
  403550:	mov    QWORD PTR [rbp-0x18],rax
  403554:	xor    eax,eax
  403556:	mov    rax,QWORD PTR [rip+0xb803]        # 40ed60 <__bss_start@@Base+0x5d0>
  40355d:	add    rax,0x1
  403561:	mov    QWORD PTR [rip+0xb7f8],rax        # 40ed60 <__bss_start@@Base+0x5d0>
  403568:	mov    QWORD PTR [rbp-0x50],0x0
  403570:	mov    QWORD PTR [rbp-0x48],0x0
  403578:	mov    edi,0x2
  40357d:	call   4021c0 <malloc@plt>
  403582:	mov    QWORD PTR [rbp-0x40],rax
  403586:	mov    rax,QWORD PTR [rbp-0x40]
  40358a:	mov    BYTE PTR [rax],0x21
  40358d:	mov    rax,QWORD PTR [rbp-0x40]
  403591:	add    rax,0x1
  403595:	mov    BYTE PTR [rax],0x0
  403598:	lea    rdx,[rbp-0x30]
  40359c:	lea    rax,[rbp-0x58]
  4035a0:	mov    rsi,rdx
  4035a3:	mov    rdi,rax
  4035a6:	call   406af4 <init_grammar@@Base>
  4035ab:	mov    rax,QWORD PTR [rip+0xb7b6]        # 40ed68 <__bss_start@@Base+0x5d8>
  4035b2:	add    rax,0x1
  4035b6:	mov    QWORD PTR [rip+0xb7ab],rax        # 40ed68 <__bss_start@@Base+0x5d8>
  4035bd:	mov    edi,0x10
  4035c2:	call   4021c0 <malloc@plt>
  4035c7:	mov    QWORD PTR [rbp-0x38],rax
  4035cb:	mov    edi,0x10
  4035d0:	call   4021c0 <malloc@plt>
  4035d5:	mov    rdx,rax
  4035d8:	mov    rax,QWORD PTR [rbp-0x38]
  4035dc:	mov    QWORD PTR [rax],rdx
  4035df:	mov    rax,QWORD PTR [rbp-0x38]
  4035e3:	mov    rax,QWORD PTR [rax]
  4035e6:	mov    rdx,QWORD PTR [rbp-0x40]
  4035ea:	mov    rsi,rdx
  4035ed:	mov    rdi,rax
  4035f0:	call   405d70 <init_token_boolean_op@@Base>
  4035f5:	mov    rax,QWORD PTR [rip+0xb774]        # 40ed70 <__bss_start@@Base+0x5e0>
  4035fc:	add    rax,0x1
  403600:	mov    QWORD PTR [rip+0xb769],rax        # 40ed70 <__bss_start@@Base+0x5e0>
  403607:	mov    rax,QWORD PTR [rbp-0x38]
  40360b:	lea    rbx,[rax+0x8]
  40360f:	mov    edi,0x8
  403614:	call   4021c0 <malloc@plt>
  403619:	mov    QWORD PTR [rbx],rax
  40361c:	mov    rax,QWORD PTR [rbp-0x38]
  403620:	add    rax,0x8
  403624:	mov    rax,QWORD PTR [rax]
  403627:	mov    esi,0x1
  40362c:	mov    rdi,rax
  40362f:	call   405ba6 <init_token_int_value@@Base>
  403634:	mov    rax,QWORD PTR [rip+0xb73d]        # 40ed78 <__bss_start@@Base+0x5e8>
  40363b:	add    rax,0x1
  40363f:	mov    QWORD PTR [rip+0xb732],rax        # 40ed78 <__bss_start@@Base+0x5e8>
  403646:	mov    rax,0x40faa0
  40364d:	mov    rdx,QWORD PTR [rbp-0x38]
  403651:	mov    QWORD PTR [rax+0x1b8],rdx
  403658:	mov    rax,0x40faa0
  40365f:	mov    DWORD PTR [rax+0x1b0],0x2
  403669:	lea    rax,[rbp-0x58]
  40366d:	mov    rdi,rax
  403670:	call   407a6f <read_boolean_unary_expression@@Base>
  403675:	mov    QWORD PTR [rbp-0x50],rax
  403679:	mov    rax,0x40faa0
  403680:	mov    eax,DWORD PTR [rax+0x198]
  403686:	cmp    eax,0x2
  403689:	je     4036bc <boolean_unary_operator_is_read_properly@@Base+0x17e>
  40368b:	mov    rax,QWORD PTR [rip+0xb6ee]        # 40ed80 <__bss_start@@Base+0x5f0>
  403692:	add    rax,0x1
  403696:	mov    QWORD PTR [rip+0xb6e3],rax        # 40ed80 <__bss_start@@Base+0x5f0>
  40369d:	lea    rcx,[rip+0x6f1c]        # 40a5c0 <_IO_stdin_used@@Base+0x5c0>
  4036a4:	mov    edx,0xeb
  4036a9:	lea    rsi,[rip+0x6970]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4036b0:	lea    rdi,[rip+0x69ed]        # 40a0a4 <_IO_stdin_used@@Base+0xa4>
  4036b7:	call   402140 <__assert_fail@plt>
  4036bc:	mov    rax,QWORD PTR [rbp-0x50]
  4036c0:	mov    eax,DWORD PTR [rax]
  4036c2:	cmp    eax,0x5
  4036c5:	je     4036f8 <boolean_unary_operator_is_read_properly@@Base+0x1ba>
  4036c7:	mov    rax,QWORD PTR [rip+0xb6ba]        # 40ed88 <__bss_start@@Base+0x5f8>
  4036ce:	add    rax,0x1
  4036d2:	mov    QWORD PTR [rip+0xb6af],rax        # 40ed88 <__bss_start@@Base+0x5f8>
  4036d9:	lea    rcx,[rip+0x6ee0]        # 40a5c0 <_IO_stdin_used@@Base+0x5c0>
  4036e0:	mov    edx,0xec
  4036e5:	lea    rsi,[rip+0x6934]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4036ec:	lea    rdi,[rip+0x6a05]        # 40a0f8 <_IO_stdin_used@@Base+0xf8>
  4036f3:	call   402140 <__assert_fail@plt>
  4036f8:	mov    rax,QWORD PTR [rbp-0x50]
  4036fc:	mov    QWORD PTR [rbp-0x48],rax
  403700:	mov    rax,QWORD PTR [rbp-0x48]
  403704:	mov    rax,QWORD PTR [rax+0x10]
  403708:	mov    eax,DWORD PTR [rax]
  40370a:	cmp    eax,0x1
  40370d:	je     403740 <boolean_unary_operator_is_read_properly@@Base+0x202>
  40370f:	mov    rax,QWORD PTR [rip+0xb67a]        # 40ed90 <__bss_start@@Base+0x600>
  403716:	add    rax,0x1
  40371a:	mov    QWORD PTR [rip+0xb66f],rax        # 40ed90 <__bss_start@@Base+0x600>
  403721:	lea    rcx,[rip+0x6e98]        # 40a5c0 <_IO_stdin_used@@Base+0x5c0>
  403728:	mov    edx,0xee
  40372d:	lea    rsi,[rip+0x68ec]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403734:	lea    rdi,[rip+0x6a12]        # 40a14d <_IO_stdin_used@@Base+0x14d>
  40373b:	call   402140 <__assert_fail@plt>
  403740:	mov    rax,QWORD PTR [rbp-0x48]
  403744:	mov    eax,DWORD PTR [rax+0x20]
  403747:	cmp    eax,0x8
  40374a:	je     40377d <boolean_unary_operator_is_read_properly@@Base+0x23f>
  40374c:	mov    rax,QWORD PTR [rip+0xb645]        # 40ed98 <__bss_start@@Base+0x608>
  403753:	add    rax,0x1
  403757:	mov    QWORD PTR [rip+0xb63a],rax        # 40ed98 <__bss_start@@Base+0x608>
  40375e:	lea    rcx,[rip+0x6e5b]        # 40a5c0 <_IO_stdin_used@@Base+0x5c0>
  403765:	mov    edx,0xef
  40376a:	lea    rsi,[rip+0x68af]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403771:	lea    rdi,[rip+0x6a25]        # 40a19d <_IO_stdin_used@@Base+0x19d>
  403778:	call   402140 <__assert_fail@plt>
  40377d:	mov    rax,QWORD PTR [rbp-0x48]
  403781:	mov    rax,QWORD PTR [rax+0x18]
  403785:	test   rax,rax
  403788:	je     4037bb <boolean_unary_operator_is_read_properly@@Base+0x27d>
  40378a:	mov    rax,QWORD PTR [rip+0xb617]        # 40eda8 <__bss_start@@Base+0x618>
  403791:	add    rax,0x1
  403795:	mov    QWORD PTR [rip+0xb60c],rax        # 40eda8 <__bss_start@@Base+0x618>
  40379c:	lea    rcx,[rip+0x6e1d]        # 40a5c0 <_IO_stdin_used@@Base+0x5c0>
  4037a3:	mov    edx,0xf0
  4037a8:	lea    rsi,[rip+0x6871]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4037af:	lea    rdi,[rip+0x69fb]        # 40a1b1 <_IO_stdin_used@@Base+0x1b1>
  4037b6:	call   402140 <__assert_fail@plt>
  4037bb:	mov    rax,QWORD PTR [rip+0xb5de]        # 40eda0 <__bss_start@@Base+0x610>
  4037c2:	add    rax,0x1
  4037c6:	mov    QWORD PTR [rip+0xb5d3],rax        # 40eda0 <__bss_start@@Base+0x610>
  4037cd:	nop
  4037ce:	mov    rax,QWORD PTR [rbp-0x18]
  4037d2:	xor    rax,QWORD PTR fs:0x28
  4037db:	je     4037e2 <boolean_unary_operator_is_read_properly@@Base+0x2a4>
  4037dd:	call   402110 <__stack_chk_fail@plt>
  4037e2:	add    rsp,0x58
  4037e6:	pop    rbx
  4037e7:	pop    rbp
  4037e8:	ret    

00000000004037e9 <if_statement_only@@Base>:
  4037e9:	push   rbp
  4037ea:	mov    rbp,rsp
  4037ed:	push   rbx
  4037ee:	sub    rsp,0x48
  4037f2:	mov    rax,QWORD PTR fs:0x28
  4037fb:	mov    QWORD PTR [rbp-0x18],rax
  4037ff:	xor    eax,eax
  403801:	mov    rax,QWORD PTR [rip+0xb4d8]        # 40ece0 <__bss_start@@Base+0x550>
  403808:	add    rax,0x1
  40380c:	mov    QWORD PTR [rip+0xb4cd],rax        # 40ece0 <__bss_start@@Base+0x550>
  403813:	mov    QWORD PTR [rbp-0x48],0x0
  40381b:	lea    rdx,[rbp-0x30]
  40381f:	lea    rax,[rbp-0x50]
  403823:	mov    rsi,rdx
  403826:	mov    rdi,rax
  403829:	call   406af4 <init_grammar@@Base>
  40382e:	mov    rax,QWORD PTR [rip+0xb4b3]        # 40ece8 <__bss_start@@Base+0x558>
  403835:	add    rax,0x1
  403839:	mov    QWORD PTR [rip+0xb4a8],rax        # 40ece8 <__bss_start@@Base+0x558>
  403840:	mov    edi,0x3
  403845:	call   4021c0 <malloc@plt>
  40384a:	mov    QWORD PTR [rbp-0x40],rax
  40384e:	mov    rax,QWORD PTR [rbp-0x40]
  403852:	mov    BYTE PTR [rax],0x21
  403855:	mov    rax,QWORD PTR [rbp-0x40]
  403859:	add    rax,0x1
  40385d:	mov    BYTE PTR [rax],0x3d
  403860:	mov    rax,QWORD PTR [rbp-0x40]
  403864:	add    rax,0x2
  403868:	mov    BYTE PTR [rax],0x0
  40386b:	mov    edi,0x48
  403870:	call   4021c0 <malloc@plt>
  403875:	mov    QWORD PTR [rbp-0x38],rax
  403879:	mov    edi,0x4
  40387e:	call   4021c0 <malloc@plt>
  403883:	mov    rdx,rax
  403886:	mov    rax,QWORD PTR [rbp-0x38]
  40388a:	mov    QWORD PTR [rax],rdx
  40388d:	mov    rax,QWORD PTR [rbp-0x38]
  403891:	mov    rax,QWORD PTR [rax]
  403894:	mov    rdi,rax
  403897:	call   405c11 <init_token_opar@@Base>
  40389c:	mov    rax,QWORD PTR [rip+0xb44d]        # 40ecf0 <__bss_start@@Base+0x560>
  4038a3:	add    rax,0x1
  4038a7:	mov    QWORD PTR [rip+0xb442],rax        # 40ecf0 <__bss_start@@Base+0x560>
  4038ae:	mov    rax,QWORD PTR [rbp-0x38]
  4038b2:	lea    rbx,[rax+0x8]
  4038b6:	mov    edi,0x8
  4038bb:	call   4021c0 <malloc@plt>
  4038c0:	mov    QWORD PTR [rbx],rax
  4038c3:	mov    rax,QWORD PTR [rbp-0x38]
  4038c7:	add    rax,0x8
  4038cb:	mov    rax,QWORD PTR [rax]
  4038ce:	mov    esi,0x1
  4038d3:	mov    rdi,rax
  4038d6:	call   405ba6 <init_token_int_value@@Base>
  4038db:	mov    rax,QWORD PTR [rip+0xb416]        # 40ecf8 <__bss_start@@Base+0x568>
  4038e2:	add    rax,0x1
  4038e6:	mov    QWORD PTR [rip+0xb40b],rax        # 40ecf8 <__bss_start@@Base+0x568>
  4038ed:	mov    rax,QWORD PTR [rbp-0x38]
  4038f1:	lea    rbx,[rax+0x10]
  4038f5:	mov    edi,0x8
  4038fa:	call   4021c0 <malloc@plt>
  4038ff:	mov    QWORD PTR [rbx],rax
  403902:	mov    rax,QWORD PTR [rbp-0x38]
  403906:	add    rax,0x10
  40390a:	mov    rax,QWORD PTR [rax]
  40390d:	mov    esi,0x1
  403912:	mov    rdi,rax
  403915:	call   405ba6 <init_token_int_value@@Base>
  40391a:	mov    rax,QWORD PTR [rip+0xb3df]        # 40ed00 <__bss_start@@Base+0x570>
  403921:	add    rax,0x1
  403925:	mov    QWORD PTR [rip+0xb3d4],rax        # 40ed00 <__bss_start@@Base+0x570>
  40392c:	mov    rax,QWORD PTR [rbp-0x38]
  403930:	lea    rbx,[rax+0x18]
  403934:	mov    edi,0x10
  403939:	call   4021c0 <malloc@plt>
  40393e:	mov    QWORD PTR [rbx],rax
  403941:	mov    rax,QWORD PTR [rbp-0x38]
  403945:	add    rax,0x18
  403949:	mov    rax,QWORD PTR [rax]
  40394c:	mov    rdx,QWORD PTR [rbp-0x40]
  403950:	mov    rsi,rdx
  403953:	mov    rdi,rax
  403956:	call   405d70 <init_token_boolean_op@@Base>
  40395b:	mov    rax,QWORD PTR [rip+0xb3a6]        # 40ed08 <__bss_start@@Base+0x578>
  403962:	add    rax,0x1
  403966:	mov    QWORD PTR [rip+0xb39b],rax        # 40ed08 <__bss_start@@Base+0x578>
  40396d:	mov    rax,QWORD PTR [rbp-0x38]
  403971:	lea    rbx,[rax+0x20]
  403975:	mov    edi,0x8
  40397a:	call   4021c0 <malloc@plt>
  40397f:	mov    QWORD PTR [rbx],rax
  403982:	mov    rax,QWORD PTR [rbp-0x38]
  403986:	add    rax,0x20
  40398a:	mov    rax,QWORD PTR [rax]
  40398d:	mov    esi,0x1
  403992:	mov    rdi,rax
  403995:	call   405ba6 <init_token_int_value@@Base>
  40399a:	mov    rax,QWORD PTR [rip+0xb36f]        # 40ed10 <__bss_start@@Base+0x580>
  4039a1:	add    rax,0x1
  4039a5:	mov    QWORD PTR [rip+0xb364],rax        # 40ed10 <__bss_start@@Base+0x580>
  4039ac:	mov    rax,QWORD PTR [rbp-0x38]
  4039b0:	lea    rbx,[rax+0x28]
  4039b4:	mov    edi,0x4
  4039b9:	call   4021c0 <malloc@plt>
  4039be:	mov    QWORD PTR [rbx],rax
  4039c1:	mov    rax,QWORD PTR [rbp-0x38]
  4039c5:	add    rax,0x28
  4039c9:	mov    rax,QWORD PTR [rax]
  4039cc:	mov    rdi,rax
  4039cf:	call   405c38 <init_token_cpar@@Base>
  4039d4:	mov    rax,QWORD PTR [rip+0xb33d]        # 40ed18 <__bss_start@@Base+0x588>
  4039db:	add    rax,0x1
  4039df:	mov    QWORD PTR [rip+0xb332],rax        # 40ed18 <__bss_start@@Base+0x588>
  4039e6:	mov    rax,QWORD PTR [rbp-0x38]
  4039ea:	lea    rbx,[rax+0x30]
  4039ee:	mov    edi,0x4
  4039f3:	call   4021c0 <malloc@plt>
  4039f8:	mov    QWORD PTR [rbx],rax
  4039fb:	mov    rax,QWORD PTR [rbp-0x38]
  4039ff:	add    rax,0x30
  403a03:	mov    rax,QWORD PTR [rax]
  403a06:	mov    rdi,rax
  403a09:	call   405c5f <init_token_obra@@Base>
  403a0e:	mov    rax,QWORD PTR [rip+0xb30b]        # 40ed20 <__bss_start@@Base+0x590>
  403a15:	add    rax,0x1
  403a19:	mov    QWORD PTR [rip+0xb300],rax        # 40ed20 <__bss_start@@Base+0x590>
  403a20:	mov    rax,QWORD PTR [rbp-0x38]
  403a24:	lea    rbx,[rax+0x38]
  403a28:	mov    edi,0x4
  403a2d:	call   4021c0 <malloc@plt>
  403a32:	mov    QWORD PTR [rbx],rax
  403a35:	mov    rax,QWORD PTR [rbp-0x38]
  403a39:	add    rax,0x38
  403a3d:	mov    rax,QWORD PTR [rax]
  403a40:	mov    rdi,rax
  403a43:	call   405c86 <init_token_cbra@@Base>
  403a48:	mov    rax,QWORD PTR [rip+0xb2d9]        # 40ed28 <__bss_start@@Base+0x598>
  403a4f:	add    rax,0x1
  403a53:	mov    QWORD PTR [rip+0xb2ce],rax        # 40ed28 <__bss_start@@Base+0x598>
  403a5a:	mov    rax,QWORD PTR [rbp-0x38]
  403a5e:	lea    rbx,[rax+0x40]
  403a62:	mov    edi,0x4
  403a67:	call   4021c0 <malloc@plt>
  403a6c:	mov    QWORD PTR [rbx],rax
  403a6f:	mov    rax,QWORD PTR [rbp-0x38]
  403a73:	add    rax,0x40
  403a77:	mov    rax,QWORD PTR [rax]
  403a7a:	mov    rdi,rax
  403a7d:	call   405cfb <init_token_eof@@Base>
  403a82:	mov    rax,QWORD PTR [rip+0xb2a7]        # 40ed30 <__bss_start@@Base+0x5a0>
  403a89:	add    rax,0x1
  403a8d:	mov    QWORD PTR [rip+0xb29c],rax        # 40ed30 <__bss_start@@Base+0x5a0>
  403a94:	mov    rax,0x40faa0
  403a9b:	mov    rdx,QWORD PTR [rbp-0x38]
  403a9f:	mov    QWORD PTR [rax+0x1b8],rdx
  403aa6:	mov    rax,0x40faa0
  403aad:	mov    DWORD PTR [rax+0x1b0],0x9
  403ab7:	lea    rax,[rbp-0x50]
  403abb:	mov    rdi,rax
  403abe:	call   4071c1 <read_if_statement@@Base>
  403ac3:	mov    QWORD PTR [rbp-0x48],rax
  403ac7:	mov    rax,0x40faa0
  403ace:	mov    eax,DWORD PTR [rax+0x198]
  403ad4:	cmp    eax,0x9
  403ad7:	je     403b0a <if_statement_only@@Base+0x321>
  403ad9:	mov    rax,QWORD PTR [rip+0xb258]        # 40ed38 <__bss_start@@Base+0x5a8>
  403ae0:	add    rax,0x1
  403ae4:	mov    QWORD PTR [rip+0xb24d],rax        # 40ed38 <__bss_start@@Base+0x5a8>
  403aeb:	lea    rcx,[rip+0x6afe]        # 40a5f0 <_IO_stdin_used@@Base+0x5f0>
  403af2:	mov    edx,0x11b
  403af7:	lea    rsi,[rip+0x6522]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403afe:	lea    rdi,[rip+0x66c1]        # 40a1c6 <_IO_stdin_used@@Base+0x1c6>
  403b05:	call   402140 <__assert_fail@plt>
  403b0a:	cmp    QWORD PTR [rbp-0x48],0x0
  403b0f:	jne    403b42 <if_statement_only@@Base+0x359>
  403b11:	mov    rax,QWORD PTR [rip+0xb228]        # 40ed40 <__bss_start@@Base+0x5b0>
  403b18:	add    rax,0x1
  403b1c:	mov    QWORD PTR [rip+0xb21d],rax        # 40ed40 <__bss_start@@Base+0x5b0>
  403b23:	lea    rcx,[rip+0x6ac6]        # 40a5f0 <_IO_stdin_used@@Base+0x5f0>
  403b2a:	mov    edx,0x11c
  403b2f:	lea    rsi,[rip+0x64ea]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403b36:	lea    rdi,[rip+0x66a3]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  403b3d:	call   402140 <__assert_fail@plt>
  403b42:	mov    rax,QWORD PTR [rbp-0x48]
  403b46:	mov    eax,DWORD PTR [rax]
  403b48:	cmp    eax,0x4
  403b4b:	je     403b7e <if_statement_only@@Base+0x395>
  403b4d:	mov    rax,QWORD PTR [rip+0xb1fc]        # 40ed50 <__bss_start@@Base+0x5c0>
  403b54:	add    rax,0x1
  403b58:	mov    QWORD PTR [rip+0xb1f1],rax        # 40ed50 <__bss_start@@Base+0x5c0>
  403b5f:	lea    rcx,[rip+0x6a8a]        # 40a5f0 <_IO_stdin_used@@Base+0x5f0>
  403b66:	mov    edx,0x11d
  403b6b:	lea    rsi,[rip+0x64ae]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403b72:	lea    rdi,[rip+0x6673]        # 40a1ec <_IO_stdin_used@@Base+0x1ec>
  403b79:	call   402140 <__assert_fail@plt>
  403b7e:	mov    rax,QWORD PTR [rip+0xb1c3]        # 40ed48 <__bss_start@@Base+0x5b8>
  403b85:	add    rax,0x1
  403b89:	mov    QWORD PTR [rip+0xb1b8],rax        # 40ed48 <__bss_start@@Base+0x5b8>
  403b90:	nop
  403b91:	mov    rax,QWORD PTR [rbp-0x18]
  403b95:	xor    rax,QWORD PTR fs:0x28
  403b9e:	je     403ba5 <if_statement_only@@Base+0x3bc>
  403ba0:	call   402110 <__stack_chk_fail@plt>
  403ba5:	add    rsp,0x48
  403ba9:	pop    rbx
  403baa:	pop    rbp
  403bab:	ret    

0000000000403bac <if_else_statements@@Base>:
  403bac:	push   rbp
  403bad:	mov    rbp,rsp
  403bb0:	push   rbx
  403bb1:	sub    rsp,0x48
  403bb5:	mov    rax,QWORD PTR fs:0x28
  403bbe:	mov    QWORD PTR [rbp-0x18],rax
  403bc2:	xor    eax,eax
  403bc4:	mov    rax,QWORD PTR [rip+0xb075]        # 40ec40 <__bss_start@@Base+0x4b0>
  403bcb:	add    rax,0x1
  403bcf:	mov    QWORD PTR [rip+0xb06a],rax        # 40ec40 <__bss_start@@Base+0x4b0>
  403bd6:	mov    QWORD PTR [rbp-0x48],0x0
  403bde:	lea    rdx,[rbp-0x30]
  403be2:	lea    rax,[rbp-0x50]
  403be6:	mov    rsi,rdx
  403be9:	mov    rdi,rax
  403bec:	call   406af4 <init_grammar@@Base>
  403bf1:	mov    rax,QWORD PTR [rip+0xb050]        # 40ec48 <__bss_start@@Base+0x4b8>
  403bf8:	add    rax,0x1
  403bfc:	mov    QWORD PTR [rip+0xb045],rax        # 40ec48 <__bss_start@@Base+0x4b8>
  403c03:	mov    edi,0x3
  403c08:	call   4021c0 <malloc@plt>
  403c0d:	mov    QWORD PTR [rbp-0x40],rax
  403c11:	mov    rax,QWORD PTR [rbp-0x40]
  403c15:	mov    BYTE PTR [rax],0x21
  403c18:	mov    rax,QWORD PTR [rbp-0x40]
  403c1c:	add    rax,0x1
  403c20:	mov    BYTE PTR [rax],0x3d
  403c23:	mov    rax,QWORD PTR [rbp-0x40]
  403c27:	add    rax,0x2
  403c2b:	mov    BYTE PTR [rax],0x0
  403c2e:	mov    edi,0x58
  403c33:	call   4021c0 <malloc@plt>
  403c38:	mov    QWORD PTR [rbp-0x38],rax
  403c3c:	mov    edi,0x4
  403c41:	call   4021c0 <malloc@plt>
  403c46:	mov    rdx,rax
  403c49:	mov    rax,QWORD PTR [rbp-0x38]
  403c4d:	mov    QWORD PTR [rax],rdx
  403c50:	mov    rax,QWORD PTR [rbp-0x38]
  403c54:	mov    rax,QWORD PTR [rax]
  403c57:	mov    rdi,rax
  403c5a:	call   405c11 <init_token_opar@@Base>
  403c5f:	mov    rax,QWORD PTR [rip+0xafea]        # 40ec50 <__bss_start@@Base+0x4c0>
  403c66:	add    rax,0x1
  403c6a:	mov    QWORD PTR [rip+0xafdf],rax        # 40ec50 <__bss_start@@Base+0x4c0>
  403c71:	mov    rax,QWORD PTR [rbp-0x38]
  403c75:	lea    rbx,[rax+0x8]
  403c79:	mov    edi,0x8
  403c7e:	call   4021c0 <malloc@plt>
  403c83:	mov    QWORD PTR [rbx],rax
  403c86:	mov    rax,QWORD PTR [rbp-0x38]
  403c8a:	add    rax,0x8
  403c8e:	mov    rax,QWORD PTR [rax]
  403c91:	mov    esi,0x1
  403c96:	mov    rdi,rax
  403c99:	call   405ba6 <init_token_int_value@@Base>
  403c9e:	mov    rax,QWORD PTR [rip+0xafb3]        # 40ec58 <__bss_start@@Base+0x4c8>
  403ca5:	add    rax,0x1
  403ca9:	mov    QWORD PTR [rip+0xafa8],rax        # 40ec58 <__bss_start@@Base+0x4c8>
  403cb0:	mov    rax,QWORD PTR [rbp-0x38]
  403cb4:	lea    rbx,[rax+0x10]
  403cb8:	mov    edi,0x8
  403cbd:	call   4021c0 <malloc@plt>
  403cc2:	mov    QWORD PTR [rbx],rax
  403cc5:	mov    rax,QWORD PTR [rbp-0x38]
  403cc9:	add    rax,0x10
  403ccd:	mov    rax,QWORD PTR [rax]
  403cd0:	mov    esi,0x1
  403cd5:	mov    rdi,rax
  403cd8:	call   405ba6 <init_token_int_value@@Base>
  403cdd:	mov    rax,QWORD PTR [rip+0xaf7c]        # 40ec60 <__bss_start@@Base+0x4d0>
  403ce4:	add    rax,0x1
  403ce8:	mov    QWORD PTR [rip+0xaf71],rax        # 40ec60 <__bss_start@@Base+0x4d0>
  403cef:	mov    rax,QWORD PTR [rbp-0x38]
  403cf3:	lea    rbx,[rax+0x18]
  403cf7:	mov    edi,0x10
  403cfc:	call   4021c0 <malloc@plt>
  403d01:	mov    QWORD PTR [rbx],rax
  403d04:	mov    rax,QWORD PTR [rbp-0x38]
  403d08:	add    rax,0x18
  403d0c:	mov    rax,QWORD PTR [rax]
  403d0f:	mov    rdx,QWORD PTR [rbp-0x40]
  403d13:	mov    rsi,rdx
  403d16:	mov    rdi,rax
  403d19:	call   405d70 <init_token_boolean_op@@Base>
  403d1e:	mov    rax,QWORD PTR [rip+0xaf43]        # 40ec68 <__bss_start@@Base+0x4d8>
  403d25:	add    rax,0x1
  403d29:	mov    QWORD PTR [rip+0xaf38],rax        # 40ec68 <__bss_start@@Base+0x4d8>
  403d30:	mov    rax,QWORD PTR [rbp-0x38]
  403d34:	lea    rbx,[rax+0x20]
  403d38:	mov    edi,0x8
  403d3d:	call   4021c0 <malloc@plt>
  403d42:	mov    QWORD PTR [rbx],rax
  403d45:	mov    rax,QWORD PTR [rbp-0x38]
  403d49:	add    rax,0x20
  403d4d:	mov    rax,QWORD PTR [rax]
  403d50:	mov    esi,0x1
  403d55:	mov    rdi,rax
  403d58:	call   405ba6 <init_token_int_value@@Base>
  403d5d:	mov    rax,QWORD PTR [rip+0xaf0c]        # 40ec70 <__bss_start@@Base+0x4e0>
  403d64:	add    rax,0x1
  403d68:	mov    QWORD PTR [rip+0xaf01],rax        # 40ec70 <__bss_start@@Base+0x4e0>
  403d6f:	mov    rax,QWORD PTR [rbp-0x38]
  403d73:	lea    rbx,[rax+0x28]
  403d77:	mov    edi,0x4
  403d7c:	call   4021c0 <malloc@plt>
  403d81:	mov    QWORD PTR [rbx],rax
  403d84:	mov    rax,QWORD PTR [rbp-0x38]
  403d88:	add    rax,0x28
  403d8c:	mov    rax,QWORD PTR [rax]
  403d8f:	mov    rdi,rax
  403d92:	call   405c38 <init_token_cpar@@Base>
  403d97:	mov    rax,QWORD PTR [rip+0xaeda]        # 40ec78 <__bss_start@@Base+0x4e8>
  403d9e:	add    rax,0x1
  403da2:	mov    QWORD PTR [rip+0xaecf],rax        # 40ec78 <__bss_start@@Base+0x4e8>
  403da9:	mov    rax,QWORD PTR [rbp-0x38]
  403dad:	lea    rbx,[rax+0x30]
  403db1:	mov    edi,0x4
  403db6:	call   4021c0 <malloc@plt>
  403dbb:	mov    QWORD PTR [rbx],rax
  403dbe:	mov    rax,QWORD PTR [rbp-0x38]
  403dc2:	add    rax,0x30
  403dc6:	mov    rax,QWORD PTR [rax]
  403dc9:	mov    rdi,rax
  403dcc:	call   405c5f <init_token_obra@@Base>
  403dd1:	mov    rax,QWORD PTR [rip+0xaea8]        # 40ec80 <__bss_start@@Base+0x4f0>
  403dd8:	add    rax,0x1
  403ddc:	mov    QWORD PTR [rip+0xae9d],rax        # 40ec80 <__bss_start@@Base+0x4f0>
  403de3:	mov    rax,QWORD PTR [rbp-0x38]
  403de7:	lea    rbx,[rax+0x38]
  403deb:	mov    edi,0x4
  403df0:	call   4021c0 <malloc@plt>
  403df5:	mov    QWORD PTR [rbx],rax
  403df8:	mov    rax,QWORD PTR [rbp-0x38]
  403dfc:	add    rax,0x38
  403e00:	mov    rax,QWORD PTR [rax]
  403e03:	mov    rdi,rax
  403e06:	call   405c86 <init_token_cbra@@Base>
  403e0b:	mov    rax,QWORD PTR [rip+0xae76]        # 40ec88 <__bss_start@@Base+0x4f8>
  403e12:	add    rax,0x1
  403e16:	mov    QWORD PTR [rip+0xae6b],rax        # 40ec88 <__bss_start@@Base+0x4f8>
  403e1d:	mov    rax,QWORD PTR [rbp-0x38]
  403e21:	lea    rbx,[rax+0x40]
  403e25:	mov    edi,0x4
  403e2a:	call   4021c0 <malloc@plt>
  403e2f:	mov    QWORD PTR [rbx],rax
  403e32:	mov    rax,QWORD PTR [rbp-0x38]
  403e36:	add    rax,0x40
  403e3a:	mov    rax,QWORD PTR [rax]
  403e3d:	mov    rdi,rax
  403e40:	call   405d49 <init_token_else@@Base>
  403e45:	mov    rax,QWORD PTR [rip+0xae44]        # 40ec90 <__bss_start@@Base+0x500>
  403e4c:	add    rax,0x1
  403e50:	mov    QWORD PTR [rip+0xae39],rax        # 40ec90 <__bss_start@@Base+0x500>
  403e57:	mov    rax,QWORD PTR [rbp-0x38]
  403e5b:	lea    rbx,[rax+0x48]
  403e5f:	mov    edi,0x4
  403e64:	call   4021c0 <malloc@plt>
  403e69:	mov    QWORD PTR [rbx],rax
  403e6c:	mov    rax,QWORD PTR [rbp-0x38]
  403e70:	add    rax,0x48
  403e74:	mov    rax,QWORD PTR [rax]
  403e77:	mov    rdi,rax
  403e7a:	call   405c5f <init_token_obra@@Base>
  403e7f:	mov    rax,QWORD PTR [rip+0xae12]        # 40ec98 <__bss_start@@Base+0x508>
  403e86:	add    rax,0x1
  403e8a:	mov    QWORD PTR [rip+0xae07],rax        # 40ec98 <__bss_start@@Base+0x508>
  403e91:	mov    rax,QWORD PTR [rbp-0x38]
  403e95:	lea    rbx,[rax+0x50]
  403e99:	mov    edi,0x4
  403e9e:	call   4021c0 <malloc@plt>
  403ea3:	mov    QWORD PTR [rbx],rax
  403ea6:	mov    rax,QWORD PTR [rbp-0x38]
  403eaa:	add    rax,0x50
  403eae:	mov    rax,QWORD PTR [rax]
  403eb1:	mov    rdi,rax
  403eb4:	call   405c86 <init_token_cbra@@Base>
  403eb9:	mov    rax,QWORD PTR [rip+0xade0]        # 40eca0 <__bss_start@@Base+0x510>
  403ec0:	add    rax,0x1
  403ec4:	mov    QWORD PTR [rip+0xadd5],rax        # 40eca0 <__bss_start@@Base+0x510>
  403ecb:	mov    rax,0x40faa0
  403ed2:	mov    rdx,QWORD PTR [rbp-0x38]
  403ed6:	mov    QWORD PTR [rax+0x1b8],rdx
  403edd:	mov    rax,0x40faa0
  403ee4:	mov    DWORD PTR [rax+0x1b0],0xb
  403eee:	lea    rax,[rbp-0x50]
  403ef2:	mov    rdi,rax
  403ef5:	call   4071c1 <read_if_statement@@Base>
  403efa:	mov    QWORD PTR [rbp-0x48],rax
  403efe:	mov    rax,0x40faa0
  403f05:	mov    eax,DWORD PTR [rax+0x198]
  403f0b:	cmp    eax,0xb
  403f0e:	je     403f41 <if_else_statements@@Base+0x395>
  403f10:	mov    rax,QWORD PTR [rip+0xad91]        # 40eca8 <__bss_start@@Base+0x518>
  403f17:	add    rax,0x1
  403f1b:	mov    QWORD PTR [rip+0xad86],rax        # 40eca8 <__bss_start@@Base+0x518>
  403f22:	lea    rcx,[rip+0x66e7]        # 40a610 <_IO_stdin_used@@Base+0x610>
  403f29:	mov    edx,0x14c
  403f2e:	lea    rsi,[rip+0x60eb]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403f35:	lea    rdi,[rip+0x62c2]        # 40a1fe <_IO_stdin_used@@Base+0x1fe>
  403f3c:	call   402140 <__assert_fail@plt>
  403f41:	cmp    QWORD PTR [rbp-0x48],0x0
  403f46:	jne    403f79 <if_else_statements@@Base+0x3cd>
  403f48:	mov    rax,QWORD PTR [rip+0xad61]        # 40ecb0 <__bss_start@@Base+0x520>
  403f4f:	add    rax,0x1
  403f53:	mov    QWORD PTR [rip+0xad56],rax        # 40ecb0 <__bss_start@@Base+0x520>
  403f5a:	lea    rcx,[rip+0x66af]        # 40a610 <_IO_stdin_used@@Base+0x610>
  403f61:	mov    edx,0x14d
  403f66:	lea    rsi,[rip+0x60b3]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403f6d:	lea    rdi,[rip+0x626c]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  403f74:	call   402140 <__assert_fail@plt>
  403f79:	mov    rax,QWORD PTR [rbp-0x48]
  403f7d:	mov    eax,DWORD PTR [rax]
  403f7f:	cmp    eax,0x4
  403f82:	je     403fb5 <if_else_statements@@Base+0x409>
  403f84:	mov    rax,QWORD PTR [rip+0xad35]        # 40ecc0 <__bss_start@@Base+0x530>
  403f8b:	add    rax,0x1
  403f8f:	mov    QWORD PTR [rip+0xad2a],rax        # 40ecc0 <__bss_start@@Base+0x530>
  403f96:	lea    rcx,[rip+0x6673]        # 40a610 <_IO_stdin_used@@Base+0x610>
  403f9d:	mov    edx,0x14e
  403fa2:	lea    rsi,[rip+0x6077]        # 40a020 <_IO_stdin_used@@Base+0x20>
  403fa9:	lea    rdi,[rip+0x623c]        # 40a1ec <_IO_stdin_used@@Base+0x1ec>
  403fb0:	call   402140 <__assert_fail@plt>
  403fb5:	mov    rax,QWORD PTR [rip+0xacfc]        # 40ecb8 <__bss_start@@Base+0x528>
  403fbc:	add    rax,0x1
  403fc0:	mov    QWORD PTR [rip+0xacf1],rax        # 40ecb8 <__bss_start@@Base+0x528>
  403fc7:	nop
  403fc8:	mov    rax,QWORD PTR [rbp-0x18]
  403fcc:	xor    rax,QWORD PTR fs:0x28
  403fd5:	je     403fdc <if_else_statements@@Base+0x430>
  403fd7:	call   402110 <__stack_chk_fail@plt>
  403fdc:	add    rsp,0x48
  403fe0:	pop    rbx
  403fe1:	pop    rbp
  403fe2:	ret    

0000000000403fe3 <body_with_two_returns@@Base>:
  403fe3:	push   rbp
  403fe4:	mov    rbp,rsp
  403fe7:	push   rbx
  403fe8:	sub    rsp,0x48
  403fec:	mov    rax,QWORD PTR fs:0x28
  403ff5:	mov    QWORD PTR [rbp-0x18],rax
  403ff9:	xor    eax,eax
  403ffb:	mov    rax,QWORD PTR [rip+0xabbe]        # 40ebc0 <__bss_start@@Base+0x430>
  404002:	add    rax,0x1
  404006:	mov    QWORD PTR [rip+0xabb3],rax        # 40ebc0 <__bss_start@@Base+0x430>
  40400d:	mov    QWORD PTR [rbp-0x40],0x0
  404015:	lea    rdx,[rbp-0x30]
  404019:	lea    rax,[rbp-0x48]
  40401d:	mov    rsi,rdx
  404020:	mov    rdi,rax
  404023:	call   406af4 <init_grammar@@Base>
  404028:	mov    rax,QWORD PTR [rip+0xab99]        # 40ebc8 <__bss_start@@Base+0x438>
  40402f:	add    rax,0x1
  404033:	mov    QWORD PTR [rip+0xab8e],rax        # 40ebc8 <__bss_start@@Base+0x438>
  40403a:	mov    edi,0x40
  40403f:	call   4021c0 <malloc@plt>
  404044:	mov    QWORD PTR [rbp-0x38],rax
  404048:	mov    edi,0x4
  40404d:	call   4021c0 <malloc@plt>
  404052:	mov    rdx,rax
  404055:	mov    rax,QWORD PTR [rbp-0x38]
  404059:	mov    QWORD PTR [rax],rdx
  40405c:	mov    rax,QWORD PTR [rbp-0x38]
  404060:	mov    rax,QWORD PTR [rax]
  404063:	mov    rdi,rax
  404066:	call   405c5f <init_token_obra@@Base>
  40406b:	mov    rax,QWORD PTR [rip+0xab5e]        # 40ebd0 <__bss_start@@Base+0x440>
  404072:	add    rax,0x1
  404076:	mov    QWORD PTR [rip+0xab53],rax        # 40ebd0 <__bss_start@@Base+0x440>
  40407d:	mov    rax,QWORD PTR [rbp-0x38]
  404081:	lea    rbx,[rax+0x8]
  404085:	mov    edi,0x4
  40408a:	call   4021c0 <malloc@plt>
  40408f:	mov    QWORD PTR [rbx],rax
  404092:	mov    rax,QWORD PTR [rbp-0x38]
  404096:	add    rax,0x8
  40409a:	mov    rax,QWORD PTR [rax]
  40409d:	mov    rdi,rax
  4040a0:	call   405cad <init_token_return@@Base>
  4040a5:	mov    rax,QWORD PTR [rip+0xab2c]        # 40ebd8 <__bss_start@@Base+0x448>
  4040ac:	add    rax,0x1
  4040b0:	mov    QWORD PTR [rip+0xab21],rax        # 40ebd8 <__bss_start@@Base+0x448>
  4040b7:	mov    rax,QWORD PTR [rbp-0x38]
  4040bb:	lea    rbx,[rax+0x10]
  4040bf:	mov    edi,0x8
  4040c4:	call   4021c0 <malloc@plt>
  4040c9:	mov    QWORD PTR [rbx],rax
  4040cc:	mov    rax,QWORD PTR [rbp-0x38]
  4040d0:	add    rax,0x10
  4040d4:	mov    rax,QWORD PTR [rax]
  4040d7:	mov    esi,0x1
  4040dc:	mov    rdi,rax
  4040df:	call   405ba6 <init_token_int_value@@Base>
  4040e4:	mov    rax,QWORD PTR [rip+0xaaf5]        # 40ebe0 <__bss_start@@Base+0x450>
  4040eb:	add    rax,0x1
  4040ef:	mov    QWORD PTR [rip+0xaaea],rax        # 40ebe0 <__bss_start@@Base+0x450>
  4040f6:	mov    rax,QWORD PTR [rbp-0x38]
  4040fa:	lea    rbx,[rax+0x18]
  4040fe:	mov    edi,0x4
  404103:	call   4021c0 <malloc@plt>
  404108:	mov    QWORD PTR [rbx],rax
  40410b:	mov    rax,QWORD PTR [rbp-0x38]
  40410f:	add    rax,0x18
  404113:	mov    rax,QWORD PTR [rax]
  404116:	mov    rdi,rax
  404119:	call   405cd4 <init_token_semicolon@@Base>
  40411e:	mov    rax,QWORD PTR [rip+0xaac3]        # 40ebe8 <__bss_start@@Base+0x458>
  404125:	add    rax,0x1
  404129:	mov    QWORD PTR [rip+0xaab8],rax        # 40ebe8 <__bss_start@@Base+0x458>
  404130:	mov    rax,QWORD PTR [rbp-0x38]
  404134:	lea    rbx,[rax+0x20]
  404138:	mov    edi,0x4
  40413d:	call   4021c0 <malloc@plt>
  404142:	mov    QWORD PTR [rbx],rax
  404145:	mov    rax,QWORD PTR [rbp-0x38]
  404149:	add    rax,0x20
  40414d:	mov    rax,QWORD PTR [rax]
  404150:	mov    rdi,rax
  404153:	call   405cad <init_token_return@@Base>
  404158:	mov    rax,QWORD PTR [rip+0xaa91]        # 40ebf0 <__bss_start@@Base+0x460>
  40415f:	add    rax,0x1
  404163:	mov    QWORD PTR [rip+0xaa86],rax        # 40ebf0 <__bss_start@@Base+0x460>
  40416a:	mov    rax,QWORD PTR [rbp-0x38]
  40416e:	lea    rbx,[rax+0x28]
  404172:	mov    edi,0x8
  404177:	call   4021c0 <malloc@plt>
  40417c:	mov    QWORD PTR [rbx],rax
  40417f:	mov    rax,QWORD PTR [rbp-0x38]
  404183:	add    rax,0x28
  404187:	mov    rax,QWORD PTR [rax]
  40418a:	mov    esi,0x1
  40418f:	mov    rdi,rax
  404192:	call   405ba6 <init_token_int_value@@Base>
  404197:	mov    rax,QWORD PTR [rip+0xaa5a]        # 40ebf8 <__bss_start@@Base+0x468>
  40419e:	add    rax,0x1
  4041a2:	mov    QWORD PTR [rip+0xaa4f],rax        # 40ebf8 <__bss_start@@Base+0x468>
  4041a9:	mov    rax,QWORD PTR [rbp-0x38]
  4041ad:	lea    rbx,[rax+0x30]
  4041b1:	mov    edi,0x4
  4041b6:	call   4021c0 <malloc@plt>
  4041bb:	mov    QWORD PTR [rbx],rax
  4041be:	mov    rax,QWORD PTR [rbp-0x38]
  4041c2:	add    rax,0x30
  4041c6:	mov    rax,QWORD PTR [rax]
  4041c9:	mov    rdi,rax
  4041cc:	call   405cd4 <init_token_semicolon@@Base>
  4041d1:	mov    rax,QWORD PTR [rip+0xaa28]        # 40ec00 <__bss_start@@Base+0x470>
  4041d8:	add    rax,0x1
  4041dc:	mov    QWORD PTR [rip+0xaa1d],rax        # 40ec00 <__bss_start@@Base+0x470>
  4041e3:	mov    rax,QWORD PTR [rbp-0x38]
  4041e7:	lea    rbx,[rax+0x38]
  4041eb:	mov    edi,0x4
  4041f0:	call   4021c0 <malloc@plt>
  4041f5:	mov    QWORD PTR [rbx],rax
  4041f8:	mov    rax,QWORD PTR [rbp-0x38]
  4041fc:	add    rax,0x38
  404200:	mov    rax,QWORD PTR [rax]
  404203:	mov    rdi,rax
  404206:	call   405c86 <init_token_cbra@@Base>
  40420b:	mov    rax,QWORD PTR [rip+0xa9f6]        # 40ec08 <__bss_start@@Base+0x478>
  404212:	add    rax,0x1
  404216:	mov    QWORD PTR [rip+0xa9eb],rax        # 40ec08 <__bss_start@@Base+0x478>
  40421d:	mov    rax,0x40faa0
  404224:	mov    rdx,QWORD PTR [rbp-0x38]
  404228:	mov    QWORD PTR [rax+0x1b8],rdx
  40422f:	mov    rax,0x40faa0
  404236:	mov    DWORD PTR [rax+0x1b0],0x8
  404240:	lea    rax,[rbp-0x48]
  404244:	mov    rdi,rax
  404247:	call   406dd1 <read_body@@Base>
  40424c:	mov    QWORD PTR [rbp-0x40],rax
  404250:	mov    rax,0x40faa0
  404257:	mov    eax,DWORD PTR [rax+0x198]
  40425d:	cmp    eax,0x8
  404260:	je     404293 <body_with_two_returns@@Base+0x2b0>
  404262:	mov    rax,QWORD PTR [rip+0xa9a7]        # 40ec10 <__bss_start@@Base+0x480>
  404269:	add    rax,0x1
  40426d:	mov    QWORD PTR [rip+0xa99c],rax        # 40ec10 <__bss_start@@Base+0x480>
  404274:	lea    rcx,[rip+0x63b5]        # 40a630 <_IO_stdin_used@@Base+0x630>
  40427b:	mov    edx,0x173
  404280:	lea    rsi,[rip+0x5d99]        # 40a020 <_IO_stdin_used@@Base+0x20>
  404287:	lea    rdi,[rip+0x5f8b]        # 40a219 <_IO_stdin_used@@Base+0x219>
  40428e:	call   402140 <__assert_fail@plt>
  404293:	cmp    QWORD PTR [rbp-0x40],0x0
  404298:	jne    4042cb <body_with_two_returns@@Base+0x2e8>
  40429a:	mov    rax,QWORD PTR [rip+0xa977]        # 40ec18 <__bss_start@@Base+0x488>
  4042a1:	add    rax,0x1
  4042a5:	mov    QWORD PTR [rip+0xa96c],rax        # 40ec18 <__bss_start@@Base+0x488>
  4042ac:	lea    rcx,[rip+0x637d]        # 40a630 <_IO_stdin_used@@Base+0x630>
  4042b3:	mov    edx,0x174
  4042b8:	lea    rsi,[rip+0x5d61]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4042bf:	lea    rdi,[rip+0x5f1a]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  4042c6:	call   402140 <__assert_fail@plt>
  4042cb:	mov    rax,QWORD PTR [rbp-0x40]
  4042cf:	mov    eax,DWORD PTR [rax]
  4042d1:	cmp    eax,0x3
  4042d4:	je     404307 <body_with_two_returns@@Base+0x324>
  4042d6:	mov    rax,QWORD PTR [rip+0xa943]        # 40ec20 <__bss_start@@Base+0x490>
  4042dd:	add    rax,0x1
  4042e1:	mov    QWORD PTR [rip+0xa938],rax        # 40ec20 <__bss_start@@Base+0x490>
  4042e8:	lea    rcx,[rip+0x6341]        # 40a630 <_IO_stdin_used@@Base+0x630>
  4042ef:	mov    edx,0x175
  4042f4:	lea    rsi,[rip+0x5d25]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4042fb:	lea    rdi,[rip+0x5f31]        # 40a233 <_IO_stdin_used@@Base+0x233>
  404302:	call   402140 <__assert_fail@plt>
  404307:	mov    rax,QWORD PTR [rbp-0x40]
  40430b:	mov    rax,QWORD PTR [rax+0x8]
  40430f:	mov    eax,DWORD PTR [rax]
  404311:	cmp    eax,0x3
  404314:	je     404347 <body_with_two_returns@@Base+0x364>
  404316:	mov    rax,QWORD PTR [rip+0xa90b]        # 40ec28 <__bss_start@@Base+0x498>
  40431d:	add    rax,0x1
  404321:	mov    QWORD PTR [rip+0xa900],rax        # 40ec28 <__bss_start@@Base+0x498>
  404328:	lea    rcx,[rip+0x6301]        # 40a630 <_IO_stdin_used@@Base+0x630>
  40432f:	mov    edx,0x176
  404334:	lea    rsi,[rip+0x5ce5]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40433b:	lea    rdi,[rip+0x5f07]        # 40a249 <_IO_stdin_used@@Base+0x249>
  404342:	call   402140 <__assert_fail@plt>
  404347:	mov    rax,QWORD PTR [rbp-0x40]
  40434b:	mov    rax,QWORD PTR [rax+0x8]
  40434f:	mov    rax,QWORD PTR [rax+0x8]
  404353:	test   rax,rax
  404356:	je     404389 <body_with_two_returns@@Base+0x3a6>
  404358:	mov    rax,QWORD PTR [rip+0xa8d9]        # 40ec38 <__bss_start@@Base+0x4a8>
  40435f:	add    rax,0x1
  404363:	mov    QWORD PTR [rip+0xa8ce],rax        # 40ec38 <__bss_start@@Base+0x4a8>
  40436a:	lea    rcx,[rip+0x62bf]        # 40a630 <_IO_stdin_used@@Base+0x630>
  404371:	mov    edx,0x177
  404376:	lea    rsi,[rip+0x5ca3]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40437d:	lea    rdi,[rip+0x5ee1]        # 40a265 <_IO_stdin_used@@Base+0x265>
  404384:	call   402140 <__assert_fail@plt>
  404389:	mov    rax,QWORD PTR [rip+0xa8a0]        # 40ec30 <__bss_start@@Base+0x4a0>
  404390:	add    rax,0x1
  404394:	mov    QWORD PTR [rip+0xa895],rax        # 40ec30 <__bss_start@@Base+0x4a0>
  40439b:	nop
  40439c:	mov    rax,QWORD PTR [rbp-0x18]
  4043a0:	xor    rax,QWORD PTR fs:0x28
  4043a9:	je     4043b0 <body_with_two_returns@@Base+0x3cd>
  4043ab:	call   402110 <__stack_chk_fail@plt>
  4043b0:	add    rsp,0x48
  4043b4:	pop    rbx
  4043b5:	pop    rbp
  4043b6:	ret    

00000000004043b7 <body_with_one_return@@Base>:
  4043b7:	push   rbp
  4043b8:	mov    rbp,rsp
  4043bb:	push   rbx
  4043bc:	sub    rsp,0x48
  4043c0:	mov    rax,QWORD PTR fs:0x28
  4043c9:	mov    QWORD PTR [rbp-0x18],rax
  4043cd:	xor    eax,eax
  4043cf:	mov    rax,QWORD PTR [rip+0xa78a]        # 40eb60 <__bss_start@@Base+0x3d0>
  4043d6:	add    rax,0x1
  4043da:	mov    QWORD PTR [rip+0xa77f],rax        # 40eb60 <__bss_start@@Base+0x3d0>
  4043e1:	mov    QWORD PTR [rbp-0x40],0x0
  4043e9:	lea    rdx,[rbp-0x30]
  4043ed:	lea    rax,[rbp-0x48]
  4043f1:	mov    rsi,rdx
  4043f4:	mov    rdi,rax
  4043f7:	call   406af4 <init_grammar@@Base>
  4043fc:	mov    rax,QWORD PTR [rip+0xa765]        # 40eb68 <__bss_start@@Base+0x3d8>
  404403:	add    rax,0x1
  404407:	mov    QWORD PTR [rip+0xa75a],rax        # 40eb68 <__bss_start@@Base+0x3d8>
  40440e:	mov    edi,0x28
  404413:	call   4021c0 <malloc@plt>
  404418:	mov    QWORD PTR [rbp-0x38],rax
  40441c:	mov    edi,0x4
  404421:	call   4021c0 <malloc@plt>
  404426:	mov    rdx,rax
  404429:	mov    rax,QWORD PTR [rbp-0x38]
  40442d:	mov    QWORD PTR [rax],rdx
  404430:	mov    rax,QWORD PTR [rbp-0x38]
  404434:	mov    rax,QWORD PTR [rax]
  404437:	mov    rdi,rax
  40443a:	call   405c5f <init_token_obra@@Base>
  40443f:	mov    rax,QWORD PTR [rip+0xa72a]        # 40eb70 <__bss_start@@Base+0x3e0>
  404446:	add    rax,0x1
  40444a:	mov    QWORD PTR [rip+0xa71f],rax        # 40eb70 <__bss_start@@Base+0x3e0>
  404451:	mov    rax,QWORD PTR [rbp-0x38]
  404455:	lea    rbx,[rax+0x8]
  404459:	mov    edi,0x4
  40445e:	call   4021c0 <malloc@plt>
  404463:	mov    QWORD PTR [rbx],rax
  404466:	mov    rax,QWORD PTR [rbp-0x38]
  40446a:	add    rax,0x8
  40446e:	mov    rax,QWORD PTR [rax]
  404471:	mov    rdi,rax
  404474:	call   405cad <init_token_return@@Base>
  404479:	mov    rax,QWORD PTR [rip+0xa6f8]        # 40eb78 <__bss_start@@Base+0x3e8>
  404480:	add    rax,0x1
  404484:	mov    QWORD PTR [rip+0xa6ed],rax        # 40eb78 <__bss_start@@Base+0x3e8>
  40448b:	mov    rax,QWORD PTR [rbp-0x38]
  40448f:	lea    rbx,[rax+0x10]
  404493:	mov    edi,0x8
  404498:	call   4021c0 <malloc@plt>
  40449d:	mov    QWORD PTR [rbx],rax
  4044a0:	mov    rax,QWORD PTR [rbp-0x38]
  4044a4:	add    rax,0x10
  4044a8:	mov    rax,QWORD PTR [rax]
  4044ab:	mov    esi,0x1
  4044b0:	mov    rdi,rax
  4044b3:	call   405ba6 <init_token_int_value@@Base>
  4044b8:	mov    rax,QWORD PTR [rip+0xa6c1]        # 40eb80 <__bss_start@@Base+0x3f0>
  4044bf:	add    rax,0x1
  4044c3:	mov    QWORD PTR [rip+0xa6b6],rax        # 40eb80 <__bss_start@@Base+0x3f0>
  4044ca:	mov    rax,QWORD PTR [rbp-0x38]
  4044ce:	lea    rbx,[rax+0x18]
  4044d2:	mov    edi,0x4
  4044d7:	call   4021c0 <malloc@plt>
  4044dc:	mov    QWORD PTR [rbx],rax
  4044df:	mov    rax,QWORD PTR [rbp-0x38]
  4044e3:	add    rax,0x18
  4044e7:	mov    rax,QWORD PTR [rax]
  4044ea:	mov    rdi,rax
  4044ed:	call   405cd4 <init_token_semicolon@@Base>
  4044f2:	mov    rax,QWORD PTR [rip+0xa68f]        # 40eb88 <__bss_start@@Base+0x3f8>
  4044f9:	add    rax,0x1
  4044fd:	mov    QWORD PTR [rip+0xa684],rax        # 40eb88 <__bss_start@@Base+0x3f8>
  404504:	mov    rax,QWORD PTR [rbp-0x38]
  404508:	lea    rbx,[rax+0x20]
  40450c:	mov    edi,0x4
  404511:	call   4021c0 <malloc@plt>
  404516:	mov    QWORD PTR [rbx],rax
  404519:	mov    rax,QWORD PTR [rbp-0x38]
  40451d:	add    rax,0x20
  404521:	mov    rax,QWORD PTR [rax]
  404524:	mov    rdi,rax
  404527:	call   405c86 <init_token_cbra@@Base>
  40452c:	mov    rax,QWORD PTR [rip+0xa65d]        # 40eb90 <__bss_start@@Base+0x400>
  404533:	add    rax,0x1
  404537:	mov    QWORD PTR [rip+0xa652],rax        # 40eb90 <__bss_start@@Base+0x400>
  40453e:	mov    rax,0x40faa0
  404545:	mov    rdx,QWORD PTR [rbp-0x38]
  404549:	mov    QWORD PTR [rax+0x1b8],rdx
  404550:	mov    rax,0x40faa0
  404557:	mov    DWORD PTR [rax+0x1b0],0x5
  404561:	lea    rax,[rbp-0x48]
  404565:	mov    rdi,rax
  404568:	call   406dd1 <read_body@@Base>
  40456d:	mov    QWORD PTR [rbp-0x40],rax
  404571:	mov    rax,0x40faa0
  404578:	mov    eax,DWORD PTR [rax+0x198]
  40457e:	cmp    eax,0x5
  404581:	je     4045b4 <body_with_one_return@@Base+0x1fd>
  404583:	mov    rax,QWORD PTR [rip+0xa60e]        # 40eb98 <__bss_start@@Base+0x408>
  40458a:	add    rax,0x1
  40458e:	mov    QWORD PTR [rip+0xa603],rax        # 40eb98 <__bss_start@@Base+0x408>
  404595:	lea    rcx,[rip+0x60b4]        # 40a650 <_IO_stdin_used@@Base+0x650>
  40459c:	mov    edx,0x196
  4045a1:	lea    rsi,[rip+0x5a78]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4045a8:	lea    rdi,[rip+0x5b0f]        # 40a0be <_IO_stdin_used@@Base+0xbe>
  4045af:	call   402140 <__assert_fail@plt>
  4045b4:	cmp    QWORD PTR [rbp-0x40],0x0
  4045b9:	jne    4045ec <body_with_one_return@@Base+0x235>
  4045bb:	mov    rax,QWORD PTR [rip+0xa5de]        # 40eba0 <__bss_start@@Base+0x410>
  4045c2:	add    rax,0x1
  4045c6:	mov    QWORD PTR [rip+0xa5d3],rax        # 40eba0 <__bss_start@@Base+0x410>
  4045cd:	lea    rcx,[rip+0x607c]        # 40a650 <_IO_stdin_used@@Base+0x650>
  4045d4:	mov    edx,0x197
  4045d9:	lea    rsi,[rip+0x5a40]        # 40a020 <_IO_stdin_used@@Base+0x20>
  4045e0:	lea    rdi,[rip+0x5bf9]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  4045e7:	call   402140 <__assert_fail@plt>
  4045ec:	mov    rax,QWORD PTR [rbp-0x40]
  4045f0:	mov    eax,DWORD PTR [rax]
  4045f2:	cmp    eax,0x3
  4045f5:	je     404628 <body_with_one_return@@Base+0x271>
  4045f7:	mov    rax,QWORD PTR [rip+0xa5aa]        # 40eba8 <__bss_start@@Base+0x418>
  4045fe:	add    rax,0x1
  404602:	mov    QWORD PTR [rip+0xa59f],rax        # 40eba8 <__bss_start@@Base+0x418>
  404609:	lea    rcx,[rip+0x6040]        # 40a650 <_IO_stdin_used@@Base+0x650>
  404610:	mov    edx,0x198
  404615:	lea    rsi,[rip+0x5a04]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40461c:	lea    rdi,[rip+0x5c10]        # 40a233 <_IO_stdin_used@@Base+0x233>
  404623:	call   402140 <__assert_fail@plt>
  404628:	mov    rax,QWORD PTR [rbp-0x40]
  40462c:	mov    rax,QWORD PTR [rax+0x8]
  404630:	test   rax,rax
  404633:	je     404666 <body_with_one_return@@Base+0x2af>
  404635:	mov    rax,QWORD PTR [rip+0xa57c]        # 40ebb8 <__bss_start@@Base+0x428>
  40463c:	add    rax,0x1
  404640:	mov    QWORD PTR [rip+0xa571],rax        # 40ebb8 <__bss_start@@Base+0x428>
  404647:	lea    rcx,[rip+0x6002]        # 40a650 <_IO_stdin_used@@Base+0x650>
  40464e:	mov    edx,0x199
  404653:	lea    rsi,[rip+0x59c6]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40465a:	lea    rdi,[rip+0x5c1c]        # 40a27d <_IO_stdin_used@@Base+0x27d>
  404661:	call   402140 <__assert_fail@plt>
  404666:	mov    rax,QWORD PTR [rip+0xa543]        # 40ebb0 <__bss_start@@Base+0x420>
  40466d:	add    rax,0x1
  404671:	mov    QWORD PTR [rip+0xa538],rax        # 40ebb0 <__bss_start@@Base+0x420>
  404678:	nop
  404679:	mov    rax,QWORD PTR [rbp-0x18]
  40467d:	xor    rax,QWORD PTR fs:0x28
  404686:	je     40468d <body_with_one_return@@Base+0x2d6>
  404688:	call   402110 <__stack_chk_fail@plt>
  40468d:	add    rsp,0x48
  404691:	pop    rbx
  404692:	pop    rbp
  404693:	ret    

0000000000404694 <if_statement_inside_if_statement@@Base>:
  404694:	push   rbp
  404695:	mov    rbp,rsp
  404698:	push   rbx
  404699:	sub    rsp,0x58
  40469d:	mov    rax,QWORD PTR fs:0x28
  4046a6:	mov    QWORD PTR [rbp-0x18],rax
  4046aa:	xor    eax,eax
  4046ac:	mov    rax,QWORD PTR [rip+0xa3cd]        # 40ea80 <__bss_start@@Base+0x2f0>
  4046b3:	add    rax,0x1
  4046b7:	mov    QWORD PTR [rip+0xa3c2],rax        # 40ea80 <__bss_start@@Base+0x2f0>
  4046be:	mov    QWORD PTR [rbp-0x50],0x0
  4046c6:	lea    rdx,[rbp-0x30]
  4046ca:	lea    rax,[rbp-0x58]
  4046ce:	mov    rsi,rdx
  4046d1:	mov    rdi,rax
  4046d4:	call   406af4 <init_grammar@@Base>
  4046d9:	mov    rax,QWORD PTR [rip+0xa3a8]        # 40ea88 <__bss_start@@Base+0x2f8>
  4046e0:	add    rax,0x1
  4046e4:	mov    QWORD PTR [rip+0xa39d],rax        # 40ea88 <__bss_start@@Base+0x2f8>
  4046eb:	mov    edi,0x3
  4046f0:	call   4021c0 <malloc@plt>
  4046f5:	mov    QWORD PTR [rbp-0x48],rax
  4046f9:	mov    edi,0x3
  4046fe:	call   4021c0 <malloc@plt>
  404703:	mov    QWORD PTR [rbp-0x40],rax
  404707:	mov    rax,QWORD PTR [rbp-0x48]
  40470b:	mov    BYTE PTR [rax],0x21
  40470e:	mov    rax,QWORD PTR [rbp-0x48]
  404712:	add    rax,0x1
  404716:	mov    BYTE PTR [rax],0x3d
  404719:	mov    rax,QWORD PTR [rbp-0x48]
  40471d:	add    rax,0x2
  404721:	mov    BYTE PTR [rax],0x0
  404724:	mov    rax,QWORD PTR [rbp-0x40]
  404728:	mov    BYTE PTR [rax],0x21
  40472b:	mov    rax,QWORD PTR [rbp-0x40]
  40472f:	add    rax,0x1
  404733:	mov    BYTE PTR [rax],0x3d
  404736:	mov    rax,QWORD PTR [rbp-0x40]
  40473a:	add    rax,0x2
  40473e:	mov    BYTE PTR [rax],0x0
  404741:	mov    edi,0x98
  404746:	call   4021c0 <malloc@plt>
  40474b:	mov    QWORD PTR [rbp-0x38],rax
  40474f:	mov    edi,0x4
  404754:	call   4021c0 <malloc@plt>
  404759:	mov    rdx,rax
  40475c:	mov    rax,QWORD PTR [rbp-0x38]
  404760:	mov    QWORD PTR [rax],rdx
  404763:	mov    rax,QWORD PTR [rbp-0x38]
  404767:	mov    rax,QWORD PTR [rax]
  40476a:	mov    rdi,rax
  40476d:	call   405c11 <init_token_opar@@Base>
  404772:	mov    rax,QWORD PTR [rip+0xa317]        # 40ea90 <__bss_start@@Base+0x300>
  404779:	add    rax,0x1
  40477d:	mov    QWORD PTR [rip+0xa30c],rax        # 40ea90 <__bss_start@@Base+0x300>
  404784:	mov    rax,QWORD PTR [rbp-0x38]
  404788:	lea    rbx,[rax+0x8]
  40478c:	mov    edi,0x8
  404791:	call   4021c0 <malloc@plt>
  404796:	mov    QWORD PTR [rbx],rax
  404799:	mov    rax,QWORD PTR [rbp-0x38]
  40479d:	add    rax,0x8
  4047a1:	mov    rax,QWORD PTR [rax]
  4047a4:	mov    esi,0x1
  4047a9:	mov    rdi,rax
  4047ac:	call   405ba6 <init_token_int_value@@Base>
  4047b1:	mov    rax,QWORD PTR [rip+0xa2e0]        # 40ea98 <__bss_start@@Base+0x308>
  4047b8:	add    rax,0x1
  4047bc:	mov    QWORD PTR [rip+0xa2d5],rax        # 40ea98 <__bss_start@@Base+0x308>
  4047c3:	mov    rax,QWORD PTR [rbp-0x38]
  4047c7:	lea    rbx,[rax+0x10]
  4047cb:	mov    edi,0x8
  4047d0:	call   4021c0 <malloc@plt>
  4047d5:	mov    QWORD PTR [rbx],rax
  4047d8:	mov    rax,QWORD PTR [rbp-0x38]
  4047dc:	add    rax,0x10
  4047e0:	mov    rax,QWORD PTR [rax]
  4047e3:	mov    esi,0x1
  4047e8:	mov    rdi,rax
  4047eb:	call   405ba6 <init_token_int_value@@Base>
  4047f0:	mov    rax,QWORD PTR [rip+0xa2a9]        # 40eaa0 <__bss_start@@Base+0x310>
  4047f7:	add    rax,0x1
  4047fb:	mov    QWORD PTR [rip+0xa29e],rax        # 40eaa0 <__bss_start@@Base+0x310>
  404802:	mov    rax,QWORD PTR [rbp-0x38]
  404806:	lea    rbx,[rax+0x18]
  40480a:	mov    edi,0x10
  40480f:	call   4021c0 <malloc@plt>
  404814:	mov    QWORD PTR [rbx],rax
  404817:	mov    rax,QWORD PTR [rbp-0x38]
  40481b:	add    rax,0x18
  40481f:	mov    rax,QWORD PTR [rax]
  404822:	mov    rdx,QWORD PTR [rbp-0x48]
  404826:	mov    rsi,rdx
  404829:	mov    rdi,rax
  40482c:	call   405d70 <init_token_boolean_op@@Base>
  404831:	mov    rax,QWORD PTR [rip+0xa270]        # 40eaa8 <__bss_start@@Base+0x318>
  404838:	add    rax,0x1
  40483c:	mov    QWORD PTR [rip+0xa265],rax        # 40eaa8 <__bss_start@@Base+0x318>
  404843:	mov    rax,QWORD PTR [rbp-0x38]
  404847:	lea    rbx,[rax+0x20]
  40484b:	mov    edi,0x8
  404850:	call   4021c0 <malloc@plt>
  404855:	mov    QWORD PTR [rbx],rax
  404858:	mov    rax,QWORD PTR [rbp-0x38]
  40485c:	add    rax,0x20
  404860:	mov    rax,QWORD PTR [rax]
  404863:	mov    esi,0x1
  404868:	mov    rdi,rax
  40486b:	call   405ba6 <init_token_int_value@@Base>
  404870:	mov    rax,QWORD PTR [rip+0xa239]        # 40eab0 <__bss_start@@Base+0x320>
  404877:	add    rax,0x1
  40487b:	mov    QWORD PTR [rip+0xa22e],rax        # 40eab0 <__bss_start@@Base+0x320>
  404882:	mov    rax,QWORD PTR [rbp-0x38]
  404886:	lea    rbx,[rax+0x28]
  40488a:	mov    edi,0x4
  40488f:	call   4021c0 <malloc@plt>
  404894:	mov    QWORD PTR [rbx],rax
  404897:	mov    rax,QWORD PTR [rbp-0x38]
  40489b:	add    rax,0x28
  40489f:	mov    rax,QWORD PTR [rax]
  4048a2:	mov    rdi,rax
  4048a5:	call   405c38 <init_token_cpar@@Base>
  4048aa:	mov    rax,QWORD PTR [rip+0xa207]        # 40eab8 <__bss_start@@Base+0x328>
  4048b1:	add    rax,0x1
  4048b5:	mov    QWORD PTR [rip+0xa1fc],rax        # 40eab8 <__bss_start@@Base+0x328>
  4048bc:	mov    rax,QWORD PTR [rbp-0x38]
  4048c0:	lea    rbx,[rax+0x30]
  4048c4:	mov    edi,0x4
  4048c9:	call   4021c0 <malloc@plt>
  4048ce:	mov    QWORD PTR [rbx],rax
  4048d1:	mov    rax,QWORD PTR [rbp-0x38]
  4048d5:	add    rax,0x30
  4048d9:	mov    rax,QWORD PTR [rax]
  4048dc:	mov    rdi,rax
  4048df:	call   405c5f <init_token_obra@@Base>
  4048e4:	mov    rax,QWORD PTR [rip+0xa1d5]        # 40eac0 <__bss_start@@Base+0x330>
  4048eb:	add    rax,0x1
  4048ef:	mov    QWORD PTR [rip+0xa1ca],rax        # 40eac0 <__bss_start@@Base+0x330>
  4048f6:	mov    rax,QWORD PTR [rbp-0x38]
  4048fa:	lea    rbx,[rax+0x38]
  4048fe:	mov    edi,0x4
  404903:	call   4021c0 <malloc@plt>
  404908:	mov    QWORD PTR [rbx],rax
  40490b:	mov    rax,QWORD PTR [rbp-0x38]
  40490f:	add    rax,0x38
  404913:	mov    rax,QWORD PTR [rax]
  404916:	mov    rdi,rax
  404919:	call   405d22 <init_token_if@@Base>
  40491e:	mov    rax,QWORD PTR [rip+0xa1a3]        # 40eac8 <__bss_start@@Base+0x338>
  404925:	add    rax,0x1
  404929:	mov    QWORD PTR [rip+0xa198],rax        # 40eac8 <__bss_start@@Base+0x338>
  404930:	mov    rax,QWORD PTR [rbp-0x38]
  404934:	lea    rbx,[rax+0x40]
  404938:	mov    edi,0x4
  40493d:	call   4021c0 <malloc@plt>
  404942:	mov    QWORD PTR [rbx],rax
  404945:	mov    rax,QWORD PTR [rbp-0x38]
  404949:	add    rax,0x40
  40494d:	mov    rax,QWORD PTR [rax]
  404950:	mov    rdi,rax
  404953:	call   405c11 <init_token_opar@@Base>
  404958:	mov    rax,QWORD PTR [rip+0xa171]        # 40ead0 <__bss_start@@Base+0x340>
  40495f:	add    rax,0x1
  404963:	mov    QWORD PTR [rip+0xa166],rax        # 40ead0 <__bss_start@@Base+0x340>
  40496a:	mov    rax,QWORD PTR [rbp-0x38]
  40496e:	lea    rbx,[rax+0x48]
  404972:	mov    edi,0x8
  404977:	call   4021c0 <malloc@plt>
  40497c:	mov    QWORD PTR [rbx],rax
  40497f:	mov    rax,QWORD PTR [rbp-0x38]
  404983:	add    rax,0x48
  404987:	mov    rax,QWORD PTR [rax]
  40498a:	mov    esi,0x1
  40498f:	mov    rdi,rax
  404992:	call   405ba6 <init_token_int_value@@Base>
  404997:	mov    rax,QWORD PTR [rip+0xa13a]        # 40ead8 <__bss_start@@Base+0x348>
  40499e:	add    rax,0x1
  4049a2:	mov    QWORD PTR [rip+0xa12f],rax        # 40ead8 <__bss_start@@Base+0x348>
  4049a9:	mov    rax,QWORD PTR [rbp-0x38]
  4049ad:	lea    rbx,[rax+0x50]
  4049b1:	mov    edi,0x8
  4049b6:	call   4021c0 <malloc@plt>
  4049bb:	mov    QWORD PTR [rbx],rax
  4049be:	mov    rax,QWORD PTR [rbp-0x38]
  4049c2:	add    rax,0x50
  4049c6:	mov    rax,QWORD PTR [rax]
  4049c9:	mov    esi,0x1
  4049ce:	mov    rdi,rax
  4049d1:	call   405ba6 <init_token_int_value@@Base>
  4049d6:	mov    rax,QWORD PTR [rip+0xa103]        # 40eae0 <__bss_start@@Base+0x350>
  4049dd:	add    rax,0x1
  4049e1:	mov    QWORD PTR [rip+0xa0f8],rax        # 40eae0 <__bss_start@@Base+0x350>
  4049e8:	mov    rax,QWORD PTR [rbp-0x38]
  4049ec:	lea    rbx,[rax+0x58]
  4049f0:	mov    edi,0x10
  4049f5:	call   4021c0 <malloc@plt>
  4049fa:	mov    QWORD PTR [rbx],rax
  4049fd:	mov    rax,QWORD PTR [rbp-0x38]
  404a01:	add    rax,0x58
  404a05:	mov    rax,QWORD PTR [rax]
  404a08:	mov    rdx,QWORD PTR [rbp-0x40]
  404a0c:	mov    rsi,rdx
  404a0f:	mov    rdi,rax
  404a12:	call   405d70 <init_token_boolean_op@@Base>
  404a17:	mov    rax,QWORD PTR [rip+0xa0ca]        # 40eae8 <__bss_start@@Base+0x358>
  404a1e:	add    rax,0x1
  404a22:	mov    QWORD PTR [rip+0xa0bf],rax        # 40eae8 <__bss_start@@Base+0x358>
  404a29:	mov    rax,QWORD PTR [rbp-0x38]
  404a2d:	lea    rbx,[rax+0x60]
  404a31:	mov    edi,0x8
  404a36:	call   4021c0 <malloc@plt>
  404a3b:	mov    QWORD PTR [rbx],rax
  404a3e:	mov    rax,QWORD PTR [rbp-0x38]
  404a42:	add    rax,0x60
  404a46:	mov    rax,QWORD PTR [rax]
  404a49:	mov    esi,0x1
  404a4e:	mov    rdi,rax
  404a51:	call   405ba6 <init_token_int_value@@Base>
  404a56:	mov    rax,QWORD PTR [rip+0xa093]        # 40eaf0 <__bss_start@@Base+0x360>
  404a5d:	add    rax,0x1
  404a61:	mov    QWORD PTR [rip+0xa088],rax        # 40eaf0 <__bss_start@@Base+0x360>
  404a68:	mov    rax,QWORD PTR [rbp-0x38]
  404a6c:	lea    rbx,[rax+0x68]
  404a70:	mov    edi,0x4
  404a75:	call   4021c0 <malloc@plt>
  404a7a:	mov    QWORD PTR [rbx],rax
  404a7d:	mov    rax,QWORD PTR [rbp-0x38]
  404a81:	add    rax,0x68
  404a85:	mov    rax,QWORD PTR [rax]
  404a88:	mov    rdi,rax
  404a8b:	call   405c38 <init_token_cpar@@Base>
  404a90:	mov    rax,QWORD PTR [rip+0xa061]        # 40eaf8 <__bss_start@@Base+0x368>
  404a97:	add    rax,0x1
  404a9b:	mov    QWORD PTR [rip+0xa056],rax        # 40eaf8 <__bss_start@@Base+0x368>
  404aa2:	mov    rax,QWORD PTR [rbp-0x38]
  404aa6:	lea    rbx,[rax+0x70]
  404aaa:	mov    edi,0x4
  404aaf:	call   4021c0 <malloc@plt>
  404ab4:	mov    QWORD PTR [rbx],rax
  404ab7:	mov    rax,QWORD PTR [rbp-0x38]
  404abb:	add    rax,0x70
  404abf:	mov    rax,QWORD PTR [rax]
  404ac2:	mov    rdi,rax
  404ac5:	call   405c5f <init_token_obra@@Base>
  404aca:	mov    rax,QWORD PTR [rip+0xa02f]        # 40eb00 <__bss_start@@Base+0x370>
  404ad1:	add    rax,0x1
  404ad5:	mov    QWORD PTR [rip+0xa024],rax        # 40eb00 <__bss_start@@Base+0x370>
  404adc:	mov    rax,QWORD PTR [rbp-0x38]
  404ae0:	lea    rbx,[rax+0x78]
  404ae4:	mov    edi,0x4
  404ae9:	call   4021c0 <malloc@plt>
  404aee:	mov    QWORD PTR [rbx],rax
  404af1:	mov    rax,QWORD PTR [rbp-0x38]
  404af5:	add    rax,0x78
  404af9:	mov    rax,QWORD PTR [rax]
  404afc:	mov    rdi,rax
  404aff:	call   405c86 <init_token_cbra@@Base>
  404b04:	mov    rax,QWORD PTR [rip+0x9ffd]        # 40eb08 <__bss_start@@Base+0x378>
  404b0b:	add    rax,0x1
  404b0f:	mov    QWORD PTR [rip+0x9ff2],rax        # 40eb08 <__bss_start@@Base+0x378>
  404b16:	mov    rax,QWORD PTR [rbp-0x38]
  404b1a:	lea    rbx,[rax+0x80]
  404b21:	mov    edi,0x4
  404b26:	call   4021c0 <malloc@plt>
  404b2b:	mov    QWORD PTR [rbx],rax
  404b2e:	mov    rax,QWORD PTR [rbp-0x38]
  404b32:	sub    rax,0xffffffffffffff80
  404b36:	mov    rax,QWORD PTR [rax]
  404b39:	mov    rdi,rax
  404b3c:	call   405c86 <init_token_cbra@@Base>
  404b41:	mov    rax,QWORD PTR [rip+0x9fc8]        # 40eb10 <__bss_start@@Base+0x380>
  404b48:	add    rax,0x1
  404b4c:	mov    QWORD PTR [rip+0x9fbd],rax        # 40eb10 <__bss_start@@Base+0x380>
  404b53:	mov    rax,QWORD PTR [rbp-0x38]
  404b57:	lea    rbx,[rax+0x88]
  404b5e:	mov    edi,0x4
  404b63:	call   4021c0 <malloc@plt>
  404b68:	mov    QWORD PTR [rbx],rax
  404b6b:	mov    rax,QWORD PTR [rbp-0x38]
  404b6f:	add    rax,0x88
  404b75:	mov    rax,QWORD PTR [rax]
  404b78:	mov    rdi,rax
  404b7b:	call   405c86 <init_token_cbra@@Base>
  404b80:	mov    rax,QWORD PTR [rip+0x9f91]        # 40eb18 <__bss_start@@Base+0x388>
  404b87:	add    rax,0x1
  404b8b:	mov    QWORD PTR [rip+0x9f86],rax        # 40eb18 <__bss_start@@Base+0x388>
  404b92:	mov    rax,QWORD PTR [rbp-0x38]
  404b96:	lea    rbx,[rax+0x90]
  404b9d:	mov    edi,0x4
  404ba2:	call   4021c0 <malloc@plt>
  404ba7:	mov    QWORD PTR [rbx],rax
  404baa:	mov    rax,QWORD PTR [rbp-0x38]
  404bae:	add    rax,0x90
  404bb4:	mov    rax,QWORD PTR [rax]
  404bb7:	mov    rdi,rax
  404bba:	call   405cfb <init_token_eof@@Base>
  404bbf:	mov    rax,QWORD PTR [rip+0x9f5a]        # 40eb20 <__bss_start@@Base+0x390>
  404bc6:	add    rax,0x1
  404bca:	mov    QWORD PTR [rip+0x9f4f],rax        # 40eb20 <__bss_start@@Base+0x390>
  404bd1:	mov    rax,0x40faa0
  404bd8:	mov    rdx,QWORD PTR [rbp-0x38]
  404bdc:	mov    QWORD PTR [rax+0x1b8],rdx
  404be3:	mov    rax,0x40faa0
  404bea:	mov    DWORD PTR [rax+0x1b0],0x13
  404bf4:	lea    rax,[rbp-0x58]
  404bf8:	mov    rdi,rax
  404bfb:	call   4071c1 <read_if_statement@@Base>
  404c00:	mov    QWORD PTR [rbp-0x50],rax
  404c04:	mov    rax,0x40faa0
  404c0b:	mov    eax,DWORD PTR [rax+0x198]
  404c11:	cmp    eax,0x13
  404c14:	je     404c47 <if_statement_inside_if_statement@@Base+0x5b3>
  404c16:	mov    rax,QWORD PTR [rip+0x9f0b]        # 40eb28 <__bss_start@@Base+0x398>
  404c1d:	add    rax,0x1
  404c21:	mov    QWORD PTR [rip+0x9f00],rax        # 40eb28 <__bss_start@@Base+0x398>
  404c28:	lea    rcx,[rip+0x5a51]        # 40a680 <_IO_stdin_used@@Base+0x680>
  404c2f:	mov    edx,0x1e0
  404c34:	lea    rsi,[rip+0x53e5]        # 40a020 <_IO_stdin_used@@Base+0x20>
  404c3b:	lea    rdi,[rip+0x564d]        # 40a28f <_IO_stdin_used@@Base+0x28f>
  404c42:	call   402140 <__assert_fail@plt>
  404c47:	cmp    QWORD PTR [rbp-0x50],0x0
  404c4c:	jne    404c7f <if_statement_inside_if_statement@@Base+0x5eb>
  404c4e:	mov    rax,QWORD PTR [rip+0x9edb]        # 40eb30 <__bss_start@@Base+0x3a0>
  404c55:	add    rax,0x1
  404c59:	mov    QWORD PTR [rip+0x9ed0],rax        # 40eb30 <__bss_start@@Base+0x3a0>
  404c60:	lea    rcx,[rip+0x5a19]        # 40a680 <_IO_stdin_used@@Base+0x680>
  404c67:	mov    edx,0x1e1
  404c6c:	lea    rsi,[rip+0x53ad]        # 40a020 <_IO_stdin_used@@Base+0x20>
  404c73:	lea    rdi,[rip+0x5566]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  404c7a:	call   402140 <__assert_fail@plt>
  404c7f:	mov    rax,QWORD PTR [rbp-0x50]
  404c83:	mov    eax,DWORD PTR [rax]
  404c85:	cmp    eax,0x4
  404c88:	je     404cbb <if_statement_inside_if_statement@@Base+0x627>
  404c8a:	mov    rax,QWORD PTR [rip+0x9eaf]        # 40eb40 <__bss_start@@Base+0x3b0>
  404c91:	add    rax,0x1
  404c95:	mov    QWORD PTR [rip+0x9ea4],rax        # 40eb40 <__bss_start@@Base+0x3b0>
  404c9c:	lea    rcx,[rip+0x59dd]        # 40a680 <_IO_stdin_used@@Base+0x680>
  404ca3:	mov    edx,0x1e2
  404ca8:	lea    rsi,[rip+0x5371]        # 40a020 <_IO_stdin_used@@Base+0x20>
  404caf:	lea    rdi,[rip+0x5536]        # 40a1ec <_IO_stdin_used@@Base+0x1ec>
  404cb6:	call   402140 <__assert_fail@plt>
  404cbb:	mov    rax,QWORD PTR [rip+0x9e76]        # 40eb38 <__bss_start@@Base+0x3a8>
  404cc2:	add    rax,0x1
  404cc6:	mov    QWORD PTR [rip+0x9e6b],rax        # 40eb38 <__bss_start@@Base+0x3a8>
  404ccd:	nop
  404cce:	mov    rax,QWORD PTR [rbp-0x18]
  404cd2:	xor    rax,QWORD PTR fs:0x28
  404cdb:	je     404ce2 <if_statement_inside_if_statement@@Base+0x64e>
  404cdd:	call   402110 <__stack_chk_fail@plt>
  404ce2:	add    rsp,0x58
  404ce6:	pop    rbx
  404ce7:	pop    rbp
  404ce8:	ret    

0000000000404ce9 <if_statement_inside_else_statement@@Base>:
  404ce9:	push   rbp
  404cea:	mov    rbp,rsp
  404ced:	push   rbx
  404cee:	sub    rsp,0x58
  404cf2:	mov    rax,QWORD PTR fs:0x28
  404cfb:	mov    QWORD PTR [rbp-0x18],rax
  404cff:	xor    eax,eax
  404d01:	mov    rax,QWORD PTR [rip+0x9c98]        # 40e9a0 <__bss_start@@Base+0x210>
  404d08:	add    rax,0x1
  404d0c:	mov    QWORD PTR [rip+0x9c8d],rax        # 40e9a0 <__bss_start@@Base+0x210>
  404d13:	mov    QWORD PTR [rbp-0x50],0x0
  404d1b:	lea    rdx,[rbp-0x30]
  404d1f:	lea    rax,[rbp-0x58]
  404d23:	mov    rsi,rdx
  404d26:	mov    rdi,rax
  404d29:	call   406af4 <init_grammar@@Base>
  404d2e:	mov    rax,QWORD PTR [rip+0x9c73]        # 40e9a8 <__bss_start@@Base+0x218>
  404d35:	add    rax,0x1
  404d39:	mov    QWORD PTR [rip+0x9c68],rax        # 40e9a8 <__bss_start@@Base+0x218>
  404d40:	mov    edi,0x3
  404d45:	call   4021c0 <malloc@plt>
  404d4a:	mov    QWORD PTR [rbp-0x48],rax
  404d4e:	mov    edi,0x3
  404d53:	call   4021c0 <malloc@plt>
  404d58:	mov    QWORD PTR [rbp-0x40],rax
  404d5c:	mov    rax,QWORD PTR [rbp-0x48]
  404d60:	mov    BYTE PTR [rax],0x21
  404d63:	mov    rax,QWORD PTR [rbp-0x48]
  404d67:	add    rax,0x1
  404d6b:	mov    BYTE PTR [rax],0x3d
  404d6e:	mov    rax,QWORD PTR [rbp-0x48]
  404d72:	add    rax,0x2
  404d76:	mov    BYTE PTR [rax],0x0
  404d79:	mov    rax,QWORD PTR [rbp-0x40]
  404d7d:	mov    BYTE PTR [rax],0x21
  404d80:	mov    rax,QWORD PTR [rbp-0x40]
  404d84:	add    rax,0x1
  404d88:	mov    BYTE PTR [rax],0x3d
  404d8b:	mov    rax,QWORD PTR [rbp-0x40]
  404d8f:	add    rax,0x2
  404d93:	mov    BYTE PTR [rax],0x0
  404d96:	mov    edi,0xa8
  404d9b:	call   4021c0 <malloc@plt>
  404da0:	mov    QWORD PTR [rbp-0x38],rax
  404da4:	mov    edi,0x4
  404da9:	call   4021c0 <malloc@plt>
  404dae:	mov    rdx,rax
  404db1:	mov    rax,QWORD PTR [rbp-0x38]
  404db5:	mov    QWORD PTR [rax],rdx
  404db8:	mov    rax,QWORD PTR [rbp-0x38]
  404dbc:	mov    rax,QWORD PTR [rax]
  404dbf:	mov    rdi,rax
  404dc2:	call   405c11 <init_token_opar@@Base>
  404dc7:	mov    rax,QWORD PTR [rip+0x9be2]        # 40e9b0 <__bss_start@@Base+0x220>
  404dce:	add    rax,0x1
  404dd2:	mov    QWORD PTR [rip+0x9bd7],rax        # 40e9b0 <__bss_start@@Base+0x220>
  404dd9:	mov    rax,QWORD PTR [rbp-0x38]
  404ddd:	lea    rbx,[rax+0x8]
  404de1:	mov    edi,0x8
  404de6:	call   4021c0 <malloc@plt>
  404deb:	mov    QWORD PTR [rbx],rax
  404dee:	mov    rax,QWORD PTR [rbp-0x38]
  404df2:	add    rax,0x8
  404df6:	mov    rax,QWORD PTR [rax]
  404df9:	mov    esi,0x1
  404dfe:	mov    rdi,rax
  404e01:	call   405ba6 <init_token_int_value@@Base>
  404e06:	mov    rax,QWORD PTR [rip+0x9bab]        # 40e9b8 <__bss_start@@Base+0x228>
  404e0d:	add    rax,0x1
  404e11:	mov    QWORD PTR [rip+0x9ba0],rax        # 40e9b8 <__bss_start@@Base+0x228>
  404e18:	mov    rax,QWORD PTR [rbp-0x38]
  404e1c:	lea    rbx,[rax+0x10]
  404e20:	mov    edi,0x8
  404e25:	call   4021c0 <malloc@plt>
  404e2a:	mov    QWORD PTR [rbx],rax
  404e2d:	mov    rax,QWORD PTR [rbp-0x38]
  404e31:	add    rax,0x10
  404e35:	mov    rax,QWORD PTR [rax]
  404e38:	mov    esi,0x1
  404e3d:	mov    rdi,rax
  404e40:	call   405ba6 <init_token_int_value@@Base>
  404e45:	mov    rax,QWORD PTR [rip+0x9b74]        # 40e9c0 <__bss_start@@Base+0x230>
  404e4c:	add    rax,0x1
  404e50:	mov    QWORD PTR [rip+0x9b69],rax        # 40e9c0 <__bss_start@@Base+0x230>
  404e57:	mov    rax,QWORD PTR [rbp-0x38]
  404e5b:	lea    rbx,[rax+0x18]
  404e5f:	mov    edi,0x10
  404e64:	call   4021c0 <malloc@plt>
  404e69:	mov    QWORD PTR [rbx],rax
  404e6c:	mov    rax,QWORD PTR [rbp-0x38]
  404e70:	add    rax,0x18
  404e74:	mov    rax,QWORD PTR [rax]
  404e77:	mov    rdx,QWORD PTR [rbp-0x48]
  404e7b:	mov    rsi,rdx
  404e7e:	mov    rdi,rax
  404e81:	call   405d70 <init_token_boolean_op@@Base>
  404e86:	mov    rax,QWORD PTR [rip+0x9b3b]        # 40e9c8 <__bss_start@@Base+0x238>
  404e8d:	add    rax,0x1
  404e91:	mov    QWORD PTR [rip+0x9b30],rax        # 40e9c8 <__bss_start@@Base+0x238>
  404e98:	mov    rax,QWORD PTR [rbp-0x38]
  404e9c:	lea    rbx,[rax+0x20]
  404ea0:	mov    edi,0x8
  404ea5:	call   4021c0 <malloc@plt>
  404eaa:	mov    QWORD PTR [rbx],rax
  404ead:	mov    rax,QWORD PTR [rbp-0x38]
  404eb1:	add    rax,0x20
  404eb5:	mov    rax,QWORD PTR [rax]
  404eb8:	mov    esi,0x1
  404ebd:	mov    rdi,rax
  404ec0:	call   405ba6 <init_token_int_value@@Base>
  404ec5:	mov    rax,QWORD PTR [rip+0x9b04]        # 40e9d0 <__bss_start@@Base+0x240>
  404ecc:	add    rax,0x1
  404ed0:	mov    QWORD PTR [rip+0x9af9],rax        # 40e9d0 <__bss_start@@Base+0x240>
  404ed7:	mov    rax,QWORD PTR [rbp-0x38]
  404edb:	lea    rbx,[rax+0x28]
  404edf:	mov    edi,0x4
  404ee4:	call   4021c0 <malloc@plt>
  404ee9:	mov    QWORD PTR [rbx],rax
  404eec:	mov    rax,QWORD PTR [rbp-0x38]
  404ef0:	add    rax,0x28
  404ef4:	mov    rax,QWORD PTR [rax]
  404ef7:	mov    rdi,rax
  404efa:	call   405c38 <init_token_cpar@@Base>
  404eff:	mov    rax,QWORD PTR [rip+0x9ad2]        # 40e9d8 <__bss_start@@Base+0x248>
  404f06:	add    rax,0x1
  404f0a:	mov    QWORD PTR [rip+0x9ac7],rax        # 40e9d8 <__bss_start@@Base+0x248>
  404f11:	mov    rax,QWORD PTR [rbp-0x38]
  404f15:	lea    rbx,[rax+0x30]
  404f19:	mov    edi,0x4
  404f1e:	call   4021c0 <malloc@plt>
  404f23:	mov    QWORD PTR [rbx],rax
  404f26:	mov    rax,QWORD PTR [rbp-0x38]
  404f2a:	add    rax,0x30
  404f2e:	mov    rax,QWORD PTR [rax]
  404f31:	mov    rdi,rax
  404f34:	call   405c5f <init_token_obra@@Base>
  404f39:	mov    rax,QWORD PTR [rip+0x9aa0]        # 40e9e0 <__bss_start@@Base+0x250>
  404f40:	add    rax,0x1
  404f44:	mov    QWORD PTR [rip+0x9a95],rax        # 40e9e0 <__bss_start@@Base+0x250>
  404f4b:	mov    rax,QWORD PTR [rbp-0x38]
  404f4f:	lea    rbx,[rax+0x38]
  404f53:	mov    edi,0x4
  404f58:	call   4021c0 <malloc@plt>
  404f5d:	mov    QWORD PTR [rbx],rax
  404f60:	mov    rax,QWORD PTR [rbp-0x38]
  404f64:	add    rax,0x38
  404f68:	mov    rax,QWORD PTR [rax]
  404f6b:	mov    rdi,rax
  404f6e:	call   405c86 <init_token_cbra@@Base>
  404f73:	mov    rax,QWORD PTR [rip+0x9a6e]        # 40e9e8 <__bss_start@@Base+0x258>
  404f7a:	add    rax,0x1
  404f7e:	mov    QWORD PTR [rip+0x9a63],rax        # 40e9e8 <__bss_start@@Base+0x258>
  404f85:	mov    rax,QWORD PTR [rbp-0x38]
  404f89:	lea    rbx,[rax+0x40]
  404f8d:	mov    edi,0x4
  404f92:	call   4021c0 <malloc@plt>
  404f97:	mov    QWORD PTR [rbx],rax
  404f9a:	mov    rax,QWORD PTR [rbp-0x38]
  404f9e:	add    rax,0x40
  404fa2:	mov    rax,QWORD PTR [rax]
  404fa5:	mov    rdi,rax
  404fa8:	call   405d49 <init_token_else@@Base>
  404fad:	mov    rax,QWORD PTR [rip+0x9a3c]        # 40e9f0 <__bss_start@@Base+0x260>
  404fb4:	add    rax,0x1
  404fb8:	mov    QWORD PTR [rip+0x9a31],rax        # 40e9f0 <__bss_start@@Base+0x260>
  404fbf:	mov    rax,QWORD PTR [rbp-0x38]
  404fc3:	lea    rbx,[rax+0x48]
  404fc7:	mov    edi,0x4
  404fcc:	call   4021c0 <malloc@plt>
  404fd1:	mov    QWORD PTR [rbx],rax
  404fd4:	mov    rax,QWORD PTR [rbp-0x38]
  404fd8:	add    rax,0x48
  404fdc:	mov    rax,QWORD PTR [rax]
  404fdf:	mov    rdi,rax
  404fe2:	call   405c5f <init_token_obra@@Base>
  404fe7:	mov    rax,QWORD PTR [rip+0x9a0a]        # 40e9f8 <__bss_start@@Base+0x268>
  404fee:	add    rax,0x1
  404ff2:	mov    QWORD PTR [rip+0x99ff],rax        # 40e9f8 <__bss_start@@Base+0x268>
  404ff9:	mov    rax,QWORD PTR [rbp-0x38]
  404ffd:	lea    rbx,[rax+0x50]
  405001:	mov    edi,0x4
  405006:	call   4021c0 <malloc@plt>
  40500b:	mov    QWORD PTR [rbx],rax
  40500e:	mov    rax,QWORD PTR [rbp-0x38]
  405012:	add    rax,0x50
  405016:	mov    rax,QWORD PTR [rax]
  405019:	mov    rdi,rax
  40501c:	call   405d22 <init_token_if@@Base>
  405021:	mov    rax,QWORD PTR [rip+0x99d8]        # 40ea00 <__bss_start@@Base+0x270>
  405028:	add    rax,0x1
  40502c:	mov    QWORD PTR [rip+0x99cd],rax        # 40ea00 <__bss_start@@Base+0x270>
  405033:	mov    rax,QWORD PTR [rbp-0x38]
  405037:	lea    rbx,[rax+0x58]
  40503b:	mov    edi,0x4
  405040:	call   4021c0 <malloc@plt>
  405045:	mov    QWORD PTR [rbx],rax
  405048:	mov    rax,QWORD PTR [rbp-0x38]
  40504c:	add    rax,0x58
  405050:	mov    rax,QWORD PTR [rax]
  405053:	mov    rdi,rax
  405056:	call   405c11 <init_token_opar@@Base>
  40505b:	mov    rax,QWORD PTR [rip+0x99a6]        # 40ea08 <__bss_start@@Base+0x278>
  405062:	add    rax,0x1
  405066:	mov    QWORD PTR [rip+0x999b],rax        # 40ea08 <__bss_start@@Base+0x278>
  40506d:	mov    rax,QWORD PTR [rbp-0x38]
  405071:	lea    rbx,[rax+0x60]
  405075:	mov    edi,0x8
  40507a:	call   4021c0 <malloc@plt>
  40507f:	mov    QWORD PTR [rbx],rax
  405082:	mov    rax,QWORD PTR [rbp-0x38]
  405086:	add    rax,0x60
  40508a:	mov    rax,QWORD PTR [rax]
  40508d:	mov    esi,0x1
  405092:	mov    rdi,rax
  405095:	call   405ba6 <init_token_int_value@@Base>
  40509a:	mov    rax,QWORD PTR [rip+0x996f]        # 40ea10 <__bss_start@@Base+0x280>
  4050a1:	add    rax,0x1
  4050a5:	mov    QWORD PTR [rip+0x9964],rax        # 40ea10 <__bss_start@@Base+0x280>
  4050ac:	mov    rax,QWORD PTR [rbp-0x38]
  4050b0:	lea    rbx,[rax+0x68]
  4050b4:	mov    edi,0x8
  4050b9:	call   4021c0 <malloc@plt>
  4050be:	mov    QWORD PTR [rbx],rax
  4050c1:	mov    rax,QWORD PTR [rbp-0x38]
  4050c5:	add    rax,0x68
  4050c9:	mov    rax,QWORD PTR [rax]
  4050cc:	mov    esi,0x1
  4050d1:	mov    rdi,rax
  4050d4:	call   405ba6 <init_token_int_value@@Base>
  4050d9:	mov    rax,QWORD PTR [rip+0x9938]        # 40ea18 <__bss_start@@Base+0x288>
  4050e0:	add    rax,0x1
  4050e4:	mov    QWORD PTR [rip+0x992d],rax        # 40ea18 <__bss_start@@Base+0x288>
  4050eb:	mov    rax,QWORD PTR [rbp-0x38]
  4050ef:	lea    rbx,[rax+0x70]
  4050f3:	mov    edi,0x10
  4050f8:	call   4021c0 <malloc@plt>
  4050fd:	mov    QWORD PTR [rbx],rax
  405100:	mov    rax,QWORD PTR [rbp-0x38]
  405104:	add    rax,0x70
  405108:	mov    rax,QWORD PTR [rax]
  40510b:	mov    rdx,QWORD PTR [rbp-0x40]
  40510f:	mov    rsi,rdx
  405112:	mov    rdi,rax
  405115:	call   405d70 <init_token_boolean_op@@Base>
  40511a:	mov    rax,QWORD PTR [rip+0x98ff]        # 40ea20 <__bss_start@@Base+0x290>
  405121:	add    rax,0x1
  405125:	mov    QWORD PTR [rip+0x98f4],rax        # 40ea20 <__bss_start@@Base+0x290>
  40512c:	mov    rax,QWORD PTR [rbp-0x38]
  405130:	lea    rbx,[rax+0x78]
  405134:	mov    edi,0x8
  405139:	call   4021c0 <malloc@plt>
  40513e:	mov    QWORD PTR [rbx],rax
  405141:	mov    rax,QWORD PTR [rbp-0x38]
  405145:	add    rax,0x78
  405149:	mov    rax,QWORD PTR [rax]
  40514c:	mov    esi,0x1
  405151:	mov    rdi,rax
  405154:	call   405ba6 <init_token_int_value@@Base>
  405159:	mov    rax,QWORD PTR [rip+0x98c8]        # 40ea28 <__bss_start@@Base+0x298>
  405160:	add    rax,0x1
  405164:	mov    QWORD PTR [rip+0x98bd],rax        # 40ea28 <__bss_start@@Base+0x298>
  40516b:	mov    rax,QWORD PTR [rbp-0x38]
  40516f:	lea    rbx,[rax+0x80]
  405176:	mov    edi,0x4
  40517b:	call   4021c0 <malloc@plt>
  405180:	mov    QWORD PTR [rbx],rax
  405183:	mov    rax,QWORD PTR [rbp-0x38]
  405187:	sub    rax,0xffffffffffffff80
  40518b:	mov    rax,QWORD PTR [rax]
  40518e:	mov    rdi,rax
  405191:	call   405c38 <init_token_cpar@@Base>
  405196:	mov    rax,QWORD PTR [rip+0x9893]        # 40ea30 <__bss_start@@Base+0x2a0>
  40519d:	add    rax,0x1
  4051a1:	mov    QWORD PTR [rip+0x9888],rax        # 40ea30 <__bss_start@@Base+0x2a0>
  4051a8:	mov    rax,QWORD PTR [rbp-0x38]
  4051ac:	lea    rbx,[rax+0x88]
  4051b3:	mov    edi,0x4
  4051b8:	call   4021c0 <malloc@plt>
  4051bd:	mov    QWORD PTR [rbx],rax
  4051c0:	mov    rax,QWORD PTR [rbp-0x38]
  4051c4:	add    rax,0x88
  4051ca:	mov    rax,QWORD PTR [rax]
  4051cd:	mov    rdi,rax
  4051d0:	call   405c5f <init_token_obra@@Base>
  4051d5:	mov    rax,QWORD PTR [rip+0x985c]        # 40ea38 <__bss_start@@Base+0x2a8>
  4051dc:	add    rax,0x1
  4051e0:	mov    QWORD PTR [rip+0x9851],rax        # 40ea38 <__bss_start@@Base+0x2a8>
  4051e7:	mov    rax,QWORD PTR [rbp-0x38]
  4051eb:	lea    rbx,[rax+0x90]
  4051f2:	mov    edi,0x4
  4051f7:	call   4021c0 <malloc@plt>
  4051fc:	mov    QWORD PTR [rbx],rax
  4051ff:	mov    rax,QWORD PTR [rbp-0x38]
  405203:	add    rax,0x90
  405209:	mov    rax,QWORD PTR [rax]
  40520c:	mov    rdi,rax
  40520f:	call   405c86 <init_token_cbra@@Base>
  405214:	mov    rax,QWORD PTR [rip+0x9825]        # 40ea40 <__bss_start@@Base+0x2b0>
  40521b:	add    rax,0x1
  40521f:	mov    QWORD PTR [rip+0x981a],rax        # 40ea40 <__bss_start@@Base+0x2b0>
  405226:	mov    rax,QWORD PTR [rbp-0x38]
  40522a:	lea    rbx,[rax+0x98]
  405231:	mov    edi,0x4
  405236:	call   4021c0 <malloc@plt>
  40523b:	mov    QWORD PTR [rbx],rax
  40523e:	mov    rax,QWORD PTR [rbp-0x38]
  405242:	add    rax,0x98
  405248:	mov    rax,QWORD PTR [rax]
  40524b:	mov    rdi,rax
  40524e:	call   405c86 <init_token_cbra@@Base>
  405253:	mov    rax,QWORD PTR [rip+0x97ee]        # 40ea48 <__bss_start@@Base+0x2b8>
  40525a:	add    rax,0x1
  40525e:	mov    QWORD PTR [rip+0x97e3],rax        # 40ea48 <__bss_start@@Base+0x2b8>
  405265:	mov    rax,QWORD PTR [rbp-0x38]
  405269:	lea    rbx,[rax+0xa0]
  405270:	mov    edi,0x4
  405275:	call   4021c0 <malloc@plt>
  40527a:	mov    QWORD PTR [rbx],rax
  40527d:	mov    rax,QWORD PTR [rbp-0x38]
  405281:	add    rax,0xa0
  405287:	mov    rax,QWORD PTR [rax]
  40528a:	mov    rdi,rax
  40528d:	call   405c86 <init_token_cbra@@Base>
  405292:	mov    rax,QWORD PTR [rip+0x97b7]        # 40ea50 <__bss_start@@Base+0x2c0>
  405299:	add    rax,0x1
  40529d:	mov    QWORD PTR [rip+0x97ac],rax        # 40ea50 <__bss_start@@Base+0x2c0>
  4052a4:	mov    rax,0x40faa0
  4052ab:	mov    rdx,QWORD PTR [rbp-0x38]
  4052af:	mov    QWORD PTR [rax+0x1b8],rdx
  4052b6:	mov    rax,0x40faa0
  4052bd:	mov    DWORD PTR [rax+0x1b0],0x15
  4052c7:	lea    rax,[rbp-0x58]
  4052cb:	mov    rdi,rax
  4052ce:	call   4071c1 <read_if_statement@@Base>
  4052d3:	mov    QWORD PTR [rbp-0x50],rax
  4052d7:	mov    rax,0x40faa0
  4052de:	mov    eax,DWORD PTR [rax+0x198]
  4052e4:	cmp    eax,0x15
  4052e7:	je     40531a <if_statement_inside_else_statement@@Base+0x631>
  4052e9:	mov    rax,QWORD PTR [rip+0x9768]        # 40ea58 <__bss_start@@Base+0x2c8>
  4052f0:	add    rax,0x1
  4052f4:	mov    QWORD PTR [rip+0x975d],rax        # 40ea58 <__bss_start@@Base+0x2c8>
  4052fb:	lea    rcx,[rip+0x53be]        # 40a6c0 <_IO_stdin_used@@Base+0x6c0>
  405302:	mov    edx,0x22e
  405307:	lea    rsi,[rip+0x4d12]        # 40a020 <_IO_stdin_used@@Base+0x20>
  40530e:	lea    rdi,[rip+0x4f95]        # 40a2aa <_IO_stdin_used@@Base+0x2aa>
  405315:	call   402140 <__assert_fail@plt>
  40531a:	cmp    QWORD PTR [rbp-0x50],0x0
  40531f:	jne    405352 <if_statement_inside_else_statement@@Base+0x669>
  405321:	mov    rax,QWORD PTR [rip+0x9738]        # 40ea60 <__bss_start@@Base+0x2d0>
  405328:	add    rax,0x1
  40532c:	mov    QWORD PTR [rip+0x972d],rax        # 40ea60 <__bss_start@@Base+0x2d0>
  405333:	lea    rcx,[rip+0x5386]        # 40a6c0 <_IO_stdin_used@@Base+0x6c0>
  40533a:	mov    edx,0x22f
  40533f:	lea    rsi,[rip+0x4cda]        # 40a020 <_IO_stdin_used@@Base+0x20>
  405346:	lea    rdi,[rip+0x4e93]        # 40a1e0 <_IO_stdin_used@@Base+0x1e0>
  40534d:	call   402140 <__assert_fail@plt>
  405352:	mov    rax,QWORD PTR [rbp-0x50]
  405356:	mov    eax,DWORD PTR [rax]
  405358:	cmp    eax,0x4
  40535b:	je     40538e <if_statement_inside_else_statement@@Base+0x6a5>
  40535d:	mov    rax,QWORD PTR [rip+0x970c]        # 40ea70 <__bss_start@@Base+0x2e0>
  405364:	add    rax,0x1
  405368:	mov    QWORD PTR [rip+0x9701],rax        # 40ea70 <__bss_start@@Base+0x2e0>
  40536f:	lea    rcx,[rip+0x534a]        # 40a6c0 <_IO_stdin_used@@Base+0x6c0>
  405376:	mov    edx,0x230
  40537b:	lea    rsi,[rip+0x4c9e]        # 40a020 <_IO_stdin_used@@Base+0x20>
  405382:	lea    rdi,[rip+0x4e63]        # 40a1ec <_IO_stdin_used@@Base+0x1ec>
  405389:	call   402140 <__assert_fail@plt>
  40538e:	mov    rax,QWORD PTR [rip+0x96d3]        # 40ea68 <__bss_start@@Base+0x2d8>
  405395:	add    rax,0x1
  405399:	mov    QWORD PTR [rip+0x96c8],rax        # 40ea68 <__bss_start@@Base+0x2d8>
  4053a0:	nop
  4053a1:	mov    rax,QWORD PTR [rbp-0x18]
  4053a5:	xor    rax,QWORD PTR fs:0x28
  4053ae:	je     4053b5 <if_statement_inside_else_statement@@Base+0x6cc>
  4053b0:	call   402110 <__stack_chk_fail@plt>
  4053b5:	add    rsp,0x58
  4053b9:	pop    rbx
  4053ba:	pop    rbp
  4053bb:	ret    

00000000004053bc <main@@Base>:
  4053bc:	push   rbp
  4053bd:	mov    rbp,rsp
  4053c0:	mov    rax,QWORD PTR [rip+0x93f9]        # 40e7c0 <__bss_start@@Base+0x30>
  4053c7:	add    rax,0x1
  4053cb:	mov    QWORD PTR [rip+0x93ee],rax        # 40e7c0 <__bss_start@@Base+0x30>
  4053d2:	mov    rax,QWORD PTR [rip+0x7c07]        # 40cfe0 <stdout@GLIBC_2.2.5>
  4053d9:	mov    rax,QWORD PTR [rax]
  4053dc:	mov    esi,0x0
  4053e1:	mov    rdi,rax
  4053e4:	call   402120 <setbuf@plt>
  4053e9:	mov    rax,QWORD PTR [rip+0x93d8]        # 40e7c8 <__bss_start@@Base+0x38>
  4053f0:	add    rax,0x1
  4053f4:	mov    QWORD PTR [rip+0x93cd],rax        # 40e7c8 <__bss_start@@Base+0x38>
  4053fb:	mov    rax,QWORD PTR [rip+0x7bde]        # 40cfe0 <stdout@GLIBC_2.2.5>
  405402:	mov    rax,QWORD PTR [rax]
  405405:	mov    rcx,rax
  405408:	mov    edx,0xe
  40540d:	mov    esi,0x1
  405412:	lea    rdi,[rip+0x4eac]        # 40a2c5 <_IO_stdin_used@@Base+0x2c5>
  405419:	call   402250 <fwrite@plt>
  40541e:	mov    rax,QWORD PTR [rip+0x93ab]        # 40e7d0 <__bss_start@@Base+0x40>
  405425:	add    rax,0x1
  405429:	mov    QWORD PTR [rip+0x93a0],rax        # 40e7d0 <__bss_start@@Base+0x40>
  405430:	mov    rax,QWORD PTR [rip+0x7ba9]        # 40cfe0 <stdout@GLIBC_2.2.5>
  405437:	mov    rax,QWORD PTR [rax]
  40543a:	mov    rcx,rax
  40543d:	mov    edx,0xe
  405442:	mov    esi,0x1
  405447:	lea    rdi,[rip+0x4e86]        # 40a2d4 <_IO_stdin_used@@Base+0x2d4>
  40544e:	call   402250 <fwrite@plt>
  405453:	mov    rax,QWORD PTR [rip+0x937e]        # 40e7d8 <__bss_start@@Base+0x48>
  40545a:	add    rax,0x1
  40545e:	mov    QWORD PTR [rip+0x9373],rax        # 40e7d8 <__bss_start@@Base+0x48>
  405465:	mov    rax,QWORD PTR [rip+0x7b74]        # 40cfe0 <stdout@GLIBC_2.2.5>
  40546c:	mov    rax,QWORD PTR [rax]
  40546f:	mov    rcx,rax
  405472:	mov    edx,0xf
  405477:	mov    esi,0x1
  40547c:	lea    rdi,[rip+0x4e60]        # 40a2e3 <_IO_stdin_used@@Base+0x2e3>
  405483:	call   402250 <fwrite@plt>
  405488:	mov    rax,QWORD PTR [rip+0x9351]        # 40e7e0 <__bss_start@@Base+0x50>
  40548f:	add    rax,0x1
  405493:	mov    QWORD PTR [rip+0x9346],rax        # 40e7e0 <__bss_start@@Base+0x50>
  40549a:	mov    edi,0x0
  40549f:	call   4021d0 <fflush@plt>
  4054a4:	mov    rax,QWORD PTR [rip+0x933d]        # 40e7e8 <__bss_start@@Base+0x58>
  4054ab:	add    rax,0x1
  4054af:	mov    QWORD PTR [rip+0x9332],rax        # 40e7e8 <__bss_start@@Base+0x58>
  4054b6:	lea    rdx,[rip+0x4e36]        # 40a2f3 <_IO_stdin_used@@Base+0x2f3>
  4054bd:	lea    rsi,[rip+0x4e45]        # 40a309 <_IO_stdin_used@@Base+0x309>
  4054c4:	lea    rdi,[rip+0x4e4a]        # 40a315 <_IO_stdin_used@@Base+0x315>
  4054cb:	mov    eax,0x0
  4054d0:	call   402130 <printf@plt>
  4054d5:	mov    rax,QWORD PTR [rip+0x9314]        # 40e7f0 <__bss_start@@Base+0x60>
  4054dc:	add    rax,0x1
  4054e0:	mov    QWORD PTR [rip+0x9309],rax        # 40e7f0 <__bss_start@@Base+0x60>
  4054e7:	mov    eax,0x0
  4054ec:	call   4027d0 <setup@@Base>
  4054f1:	mov    rax,QWORD PTR [rip+0x9300]        # 40e7f8 <__bss_start@@Base+0x68>
  4054f8:	add    rax,0x1
  4054fc:	mov    QWORD PTR [rip+0x92f5],rax        # 40e7f8 <__bss_start@@Base+0x68>
  405503:	mov    eax,0x0
  405508:	call   402821 <no_int_as_first_stuff@@Base>
  40550d:	mov    rax,QWORD PTR [rip+0x92ec]        # 40e800 <__bss_start@@Base+0x70>
  405514:	add    rax,0x1
  405518:	mov    QWORD PTR [rip+0x92e1],rax        # 40e800 <__bss_start@@Base+0x70>
  40551f:	lea    rdi,[rip+0x4e01]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405526:	call   4020b0 <puts@plt>
  40552b:	mov    rax,QWORD PTR [rip+0x92d6]        # 40e808 <__bss_start@@Base+0x78>
  405532:	add    rax,0x1
  405536:	mov    QWORD PTR [rip+0x92cb],rax        # 40e808 <__bss_start@@Base+0x78>
  40553d:	lea    rdx,[rip+0x4dec]        # 40a330 <_IO_stdin_used@@Base+0x330>
  405544:	lea    rsi,[rip+0x4dbe]        # 40a309 <_IO_stdin_used@@Base+0x309>
  40554b:	lea    rdi,[rip+0x4dc3]        # 40a315 <_IO_stdin_used@@Base+0x315>
  405552:	mov    eax,0x0
  405557:	call   402130 <printf@plt>
  40555c:	mov    rax,QWORD PTR [rip+0x92ad]        # 40e810 <__bss_start@@Base+0x80>
  405563:	add    rax,0x1
  405567:	mov    QWORD PTR [rip+0x92a2],rax        # 40e810 <__bss_start@@Base+0x80>
  40556e:	mov    eax,0x0
  405573:	call   4027d0 <setup@@Base>
  405578:	mov    rax,QWORD PTR [rip+0x9299]        # 40e818 <__bss_start@@Base+0x88>
  40557f:	add    rax,0x1
  405583:	mov    QWORD PTR [rip+0x928e],rax        # 40e818 <__bss_start@@Base+0x88>
  40558a:	mov    eax,0x0
  40558f:	call   402969 <int_but_not_followed_by_function@@Base>
  405594:	mov    rax,QWORD PTR [rip+0x9285]        # 40e820 <__bss_start@@Base+0x90>
  40559b:	add    rax,0x1
  40559f:	mov    QWORD PTR [rip+0x927a],rax        # 40e820 <__bss_start@@Base+0x90>
  4055a6:	lea    rdi,[rip+0x4d7a]        # 40a327 <_IO_stdin_used@@Base+0x327>
  4055ad:	call   4020b0 <puts@plt>
  4055b2:	mov    rax,QWORD PTR [rip+0x926f]        # 40e828 <__bss_start@@Base+0x98>
  4055b9:	add    rax,0x1
  4055bd:	mov    QWORD PTR [rip+0x9264],rax        # 40e828 <__bss_start@@Base+0x98>
  4055c4:	lea    rdx,[rip+0x4d8d]        # 40a358 <_IO_stdin_used@@Base+0x358>
  4055cb:	lea    rsi,[rip+0x4d37]        # 40a309 <_IO_stdin_used@@Base+0x309>
  4055d2:	lea    rdi,[rip+0x4d3c]        # 40a315 <_IO_stdin_used@@Base+0x315>
  4055d9:	mov    eax,0x0
  4055de:	call   402130 <printf@plt>
  4055e3:	mov    rax,QWORD PTR [rip+0x9246]        # 40e830 <__bss_start@@Base+0xa0>
  4055ea:	add    rax,0x1
  4055ee:	mov    QWORD PTR [rip+0x923b],rax        # 40e830 <__bss_start@@Base+0xa0>
  4055f5:	mov    eax,0x0
  4055fa:	call   4027d0 <setup@@Base>
  4055ff:	mov    rax,QWORD PTR [rip+0x9232]        # 40e838 <__bss_start@@Base+0xa8>
  405606:	add    rax,0x1
  40560a:	mov    QWORD PTR [rip+0x9227],rax        # 40e838 <__bss_start@@Base+0xa8>
  405611:	mov    eax,0x0
  405616:	call   40353e <boolean_unary_operator_is_read_properly@@Base>
  40561b:	mov    rax,QWORD PTR [rip+0x921e]        # 40e840 <__bss_start@@Base+0xb0>
  405622:	add    rax,0x1
  405626:	mov    QWORD PTR [rip+0x9213],rax        # 40e840 <__bss_start@@Base+0xb0>
  40562d:	lea    rdi,[rip+0x4cf3]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405634:	call   4020b0 <puts@plt>
  405639:	mov    rax,QWORD PTR [rip+0x9208]        # 40e848 <__bss_start@@Base+0xb8>
  405640:	add    rax,0x1
  405644:	mov    QWORD PTR [rip+0x91fd],rax        # 40e848 <__bss_start@@Base+0xb8>
  40564b:	lea    rdx,[rip+0x4d2e]        # 40a380 <_IO_stdin_used@@Base+0x380>
  405652:	lea    rsi,[rip+0x4cb0]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405659:	lea    rdi,[rip+0x4cb5]        # 40a315 <_IO_stdin_used@@Base+0x315>
  405660:	mov    eax,0x0
  405665:	call   402130 <printf@plt>
  40566a:	mov    rax,QWORD PTR [rip+0x91df]        # 40e850 <__bss_start@@Base+0xc0>
  405671:	add    rax,0x1
  405675:	mov    QWORD PTR [rip+0x91d4],rax        # 40e850 <__bss_start@@Base+0xc0>
  40567c:	mov    eax,0x0
  405681:	call   4027d0 <setup@@Base>
  405686:	mov    rax,QWORD PTR [rip+0x91cb]        # 40e858 <__bss_start@@Base+0xc8>
  40568d:	add    rax,0x1
  405691:	mov    QWORD PTR [rip+0x91c0],rax        # 40e858 <__bss_start@@Base+0xc8>
  405698:	mov    eax,0x0
  40569d:	call   403247 <boolean_binary_operator_is_read_properly@@Base>
  4056a2:	mov    rax,QWORD PTR [rip+0x91b7]        # 40e860 <__bss_start@@Base+0xd0>
  4056a9:	add    rax,0x1
  4056ad:	mov    QWORD PTR [rip+0x91ac],rax        # 40e860 <__bss_start@@Base+0xd0>
  4056b4:	lea    rdi,[rip+0x4c6c]        # 40a327 <_IO_stdin_used@@Base+0x327>
  4056bb:	call   4020b0 <puts@plt>
  4056c0:	mov    rax,QWORD PTR [rip+0x91a1]        # 40e868 <__bss_start@@Base+0xd8>
  4056c7:	add    rax,0x1
  4056cb:	mov    QWORD PTR [rip+0x9196],rax        # 40e868 <__bss_start@@Base+0xd8>
  4056d2:	lea    rdx,[rip+0x4cd7]        # 40a3b0 <_IO_stdin_used@@Base+0x3b0>
  4056d9:	lea    rsi,[rip+0x4c29]        # 40a309 <_IO_stdin_used@@Base+0x309>
  4056e0:	lea    rdi,[rip+0x4c2e]        # 40a315 <_IO_stdin_used@@Base+0x315>
  4056e7:	mov    eax,0x0
  4056ec:	call   402130 <printf@plt>
  4056f1:	mov    rax,QWORD PTR [rip+0x9178]        # 40e870 <__bss_start@@Base+0xe0>
  4056f8:	add    rax,0x1
  4056fc:	mov    QWORD PTR [rip+0x916d],rax        # 40e870 <__bss_start@@Base+0xe0>
  405703:	mov    eax,0x0
  405708:	call   4027d0 <setup@@Base>
  40570d:	mov    rax,QWORD PTR [rip+0x9164]        # 40e878 <__bss_start@@Base+0xe8>
  405714:	add    rax,0x1
  405718:	mov    QWORD PTR [rip+0x9159],rax        # 40e878 <__bss_start@@Base+0xe8>
  40571f:	mov    eax,0x0
  405724:	call   402b19 <boolean_expression_is_read_properly@@Base>
  405729:	mov    rax,QWORD PTR [rip+0x9150]        # 40e880 <__bss_start@@Base+0xf0>
  405730:	add    rax,0x1
  405734:	mov    QWORD PTR [rip+0x9145],rax        # 40e880 <__bss_start@@Base+0xf0>
  40573b:	lea    rdi,[rip+0x4be5]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405742:	call   4020b0 <puts@plt>
  405747:	mov    rax,QWORD PTR [rip+0x913a]        # 40e888 <__bss_start@@Base+0xf8>
  40574e:	add    rax,0x1
  405752:	mov    QWORD PTR [rip+0x912f],rax        # 40e888 <__bss_start@@Base+0xf8>
  405759:	lea    rdx,[rip+0x4c74]        # 40a3d4 <_IO_stdin_used@@Base+0x3d4>
  405760:	lea    rsi,[rip+0x4ba2]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405767:	lea    rdi,[rip+0x4ba7]        # 40a315 <_IO_stdin_used@@Base+0x315>
  40576e:	mov    eax,0x0
  405773:	call   402130 <printf@plt>
  405778:	mov    rax,QWORD PTR [rip+0x9111]        # 40e890 <__bss_start@@Base+0x100>
  40577f:	add    rax,0x1
  405783:	mov    QWORD PTR [rip+0x9106],rax        # 40e890 <__bss_start@@Base+0x100>
  40578a:	mov    eax,0x0
  40578f:	call   4027d0 <setup@@Base>
  405794:	mov    rax,QWORD PTR [rip+0x90fd]        # 40e898 <__bss_start@@Base+0x108>
  40579b:	add    rax,0x1
  40579f:	mov    QWORD PTR [rip+0x90f2],rax        # 40e898 <__bss_start@@Base+0x108>
  4057a6:	mov    eax,0x0
  4057ab:	call   402e07 <boolean_expression_complex@@Base>
  4057b0:	mov    rax,QWORD PTR [rip+0x90e9]        # 40e8a0 <__bss_start@@Base+0x110>
  4057b7:	add    rax,0x1
  4057bb:	mov    QWORD PTR [rip+0x90de],rax        # 40e8a0 <__bss_start@@Base+0x110>
  4057c2:	lea    rdi,[rip+0x4b5e]        # 40a327 <_IO_stdin_used@@Base+0x327>
  4057c9:	call   4020b0 <puts@plt>
  4057ce:	mov    rax,QWORD PTR [rip+0x90d3]        # 40e8a8 <__bss_start@@Base+0x118>
  4057d5:	add    rax,0x1
  4057d9:	mov    QWORD PTR [rip+0x90c8],rax        # 40e8a8 <__bss_start@@Base+0x118>
  4057e0:	lea    rdx,[rip+0x4c08]        # 40a3ef <_IO_stdin_used@@Base+0x3ef>
  4057e7:	lea    rsi,[rip+0x4b1b]        # 40a309 <_IO_stdin_used@@Base+0x309>
  4057ee:	lea    rdi,[rip+0x4b20]        # 40a315 <_IO_stdin_used@@Base+0x315>
  4057f5:	mov    eax,0x0
  4057fa:	call   402130 <printf@plt>
  4057ff:	mov    rax,QWORD PTR [rip+0x90aa]        # 40e8b0 <__bss_start@@Base+0x120>
  405806:	add    rax,0x1
  40580a:	mov    QWORD PTR [rip+0x909f],rax        # 40e8b0 <__bss_start@@Base+0x120>
  405811:	mov    eax,0x0
  405816:	call   4027d0 <setup@@Base>
  40581b:	mov    rax,QWORD PTR [rip+0x9096]        # 40e8b8 <__bss_start@@Base+0x128>
  405822:	add    rax,0x1
  405826:	mov    QWORD PTR [rip+0x908b],rax        # 40e8b8 <__bss_start@@Base+0x128>
  40582d:	mov    eax,0x0
  405832:	call   4037e9 <if_statement_only@@Base>
  405837:	mov    rax,QWORD PTR [rip+0x9082]        # 40e8c0 <__bss_start@@Base+0x130>
  40583e:	add    rax,0x1
  405842:	mov    QWORD PTR [rip+0x9077],rax        # 40e8c0 <__bss_start@@Base+0x130>
  405849:	lea    rdi,[rip+0x4ad7]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405850:	call   4020b0 <puts@plt>
  405855:	mov    rax,QWORD PTR [rip+0x906c]        # 40e8c8 <__bss_start@@Base+0x138>
  40585c:	add    rax,0x1
  405860:	mov    QWORD PTR [rip+0x9061],rax        # 40e8c8 <__bss_start@@Base+0x138>
  405867:	lea    rdx,[rip+0x4b93]        # 40a401 <_IO_stdin_used@@Base+0x401>
  40586e:	lea    rsi,[rip+0x4a94]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405875:	lea    rdi,[rip+0x4a99]        # 40a315 <_IO_stdin_used@@Base+0x315>
  40587c:	mov    eax,0x0
  405881:	call   402130 <printf@plt>
  405886:	mov    rax,QWORD PTR [rip+0x9043]        # 40e8d0 <__bss_start@@Base+0x140>
  40588d:	add    rax,0x1
  405891:	mov    QWORD PTR [rip+0x9038],rax        # 40e8d0 <__bss_start@@Base+0x140>
  405898:	mov    eax,0x0
  40589d:	call   4027d0 <setup@@Base>
  4058a2:	mov    rax,QWORD PTR [rip+0x902f]        # 40e8d8 <__bss_start@@Base+0x148>
  4058a9:	add    rax,0x1
  4058ad:	mov    QWORD PTR [rip+0x9024],rax        # 40e8d8 <__bss_start@@Base+0x148>
  4058b4:	mov    eax,0x0
  4058b9:	call   403bac <if_else_statements@@Base>
  4058be:	mov    rax,QWORD PTR [rip+0x901b]        # 40e8e0 <__bss_start@@Base+0x150>
  4058c5:	add    rax,0x1
  4058c9:	mov    QWORD PTR [rip+0x9010],rax        # 40e8e0 <__bss_start@@Base+0x150>
  4058d0:	lea    rdi,[rip+0x4a50]        # 40a327 <_IO_stdin_used@@Base+0x327>
  4058d7:	call   4020b0 <puts@plt>
  4058dc:	mov    rax,QWORD PTR [rip+0x9005]        # 40e8e8 <__bss_start@@Base+0x158>
  4058e3:	add    rax,0x1
  4058e7:	mov    QWORD PTR [rip+0x8ffa],rax        # 40e8e8 <__bss_start@@Base+0x158>
  4058ee:	lea    rdx,[rip+0x4b23]        # 40a418 <_IO_stdin_used@@Base+0x418>
  4058f5:	lea    rsi,[rip+0x4a0d]        # 40a309 <_IO_stdin_used@@Base+0x309>
  4058fc:	lea    rdi,[rip+0x4a12]        # 40a315 <_IO_stdin_used@@Base+0x315>
  405903:	mov    eax,0x0
  405908:	call   402130 <printf@plt>
  40590d:	mov    rax,QWORD PTR [rip+0x8fdc]        # 40e8f0 <__bss_start@@Base+0x160>
  405914:	add    rax,0x1
  405918:	mov    QWORD PTR [rip+0x8fd1],rax        # 40e8f0 <__bss_start@@Base+0x160>
  40591f:	mov    eax,0x0
  405924:	call   4027d0 <setup@@Base>
  405929:	mov    rax,QWORD PTR [rip+0x8fc8]        # 40e8f8 <__bss_start@@Base+0x168>
  405930:	add    rax,0x1
  405934:	mov    QWORD PTR [rip+0x8fbd],rax        # 40e8f8 <__bss_start@@Base+0x168>
  40593b:	mov    eax,0x0
  405940:	call   404694 <if_statement_inside_if_statement@@Base>
  405945:	mov    rax,QWORD PTR [rip+0x8fb4]        # 40e900 <__bss_start@@Base+0x170>
  40594c:	add    rax,0x1
  405950:	mov    QWORD PTR [rip+0x8fa9],rax        # 40e900 <__bss_start@@Base+0x170>
  405957:	lea    rdi,[rip+0x49c9]        # 40a327 <_IO_stdin_used@@Base+0x327>
  40595e:	call   4020b0 <puts@plt>
  405963:	mov    rax,QWORD PTR [rip+0x8f9e]        # 40e908 <__bss_start@@Base+0x178>
  40596a:	add    rax,0x1
  40596e:	mov    QWORD PTR [rip+0x8f93],rax        # 40e908 <__bss_start@@Base+0x178>
  405975:	lea    rdx,[rip+0x4ac4]        # 40a440 <_IO_stdin_used@@Base+0x440>
  40597c:	lea    rsi,[rip+0x4986]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405983:	lea    rdi,[rip+0x498b]        # 40a315 <_IO_stdin_used@@Base+0x315>
  40598a:	mov    eax,0x0
  40598f:	call   402130 <printf@plt>
  405994:	mov    rax,QWORD PTR [rip+0x8f75]        # 40e910 <__bss_start@@Base+0x180>
  40599b:	add    rax,0x1
  40599f:	mov    QWORD PTR [rip+0x8f6a],rax        # 40e910 <__bss_start@@Base+0x180>
  4059a6:	mov    eax,0x0
  4059ab:	call   4027d0 <setup@@Base>
  4059b0:	mov    rax,QWORD PTR [rip+0x8f61]        # 40e918 <__bss_start@@Base+0x188>
  4059b7:	add    rax,0x1
  4059bb:	mov    QWORD PTR [rip+0x8f56],rax        # 40e918 <__bss_start@@Base+0x188>
  4059c2:	mov    eax,0x0
  4059c7:	call   404ce9 <if_statement_inside_else_statement@@Base>
  4059cc:	mov    rax,QWORD PTR [rip+0x8f4d]        # 40e920 <__bss_start@@Base+0x190>
  4059d3:	add    rax,0x1
  4059d7:	mov    QWORD PTR [rip+0x8f42],rax        # 40e920 <__bss_start@@Base+0x190>
  4059de:	lea    rdi,[rip+0x4942]        # 40a327 <_IO_stdin_used@@Base+0x327>
  4059e5:	call   4020b0 <puts@plt>
  4059ea:	mov    rax,QWORD PTR [rip+0x8f37]        # 40e928 <__bss_start@@Base+0x198>
  4059f1:	add    rax,0x1
  4059f5:	mov    QWORD PTR [rip+0x8f2c],rax        # 40e928 <__bss_start@@Base+0x198>
  4059fc:	lea    rdx,[rip+0x4a60]        # 40a463 <_IO_stdin_used@@Base+0x463>
  405a03:	lea    rsi,[rip+0x48ff]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405a0a:	lea    rdi,[rip+0x4904]        # 40a315 <_IO_stdin_used@@Base+0x315>
  405a11:	mov    eax,0x0
  405a16:	call   402130 <printf@plt>
  405a1b:	mov    rax,QWORD PTR [rip+0x8f0e]        # 40e930 <__bss_start@@Base+0x1a0>
  405a22:	add    rax,0x1
  405a26:	mov    QWORD PTR [rip+0x8f03],rax        # 40e930 <__bss_start@@Base+0x1a0>
  405a2d:	mov    eax,0x0
  405a32:	call   4027d0 <setup@@Base>
  405a37:	mov    rax,QWORD PTR [rip+0x8efa]        # 40e938 <__bss_start@@Base+0x1a8>
  405a3e:	add    rax,0x1
  405a42:	mov    QWORD PTR [rip+0x8eef],rax        # 40e938 <__bss_start@@Base+0x1a8>
  405a49:	mov    eax,0x0
  405a4e:	call   4043b7 <body_with_one_return@@Base>
  405a53:	mov    rax,QWORD PTR [rip+0x8ee6]        # 40e940 <__bss_start@@Base+0x1b0>
  405a5a:	add    rax,0x1
  405a5e:	mov    QWORD PTR [rip+0x8edb],rax        # 40e940 <__bss_start@@Base+0x1b0>
  405a65:	lea    rdi,[rip+0x48bb]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405a6c:	call   4020b0 <puts@plt>
  405a71:	mov    rax,QWORD PTR [rip+0x8ed0]        # 40e948 <__bss_start@@Base+0x1b8>
  405a78:	add    rax,0x1
  405a7c:	mov    QWORD PTR [rip+0x8ec5],rax        # 40e948 <__bss_start@@Base+0x1b8>
  405a83:	lea    rdx,[rip+0x49ee]        # 40a478 <_IO_stdin_used@@Base+0x478>
  405a8a:	lea    rsi,[rip+0x4878]        # 40a309 <_IO_stdin_used@@Base+0x309>
  405a91:	lea    rdi,[rip+0x487d]        # 40a315 <_IO_stdin_used@@Base+0x315>
  405a98:	mov    eax,0x0
  405a9d:	call   402130 <printf@plt>
  405aa2:	mov    rax,QWORD PTR [rip+0x8ea7]        # 40e950 <__bss_start@@Base+0x1c0>
  405aa9:	add    rax,0x1
  405aad:	mov    QWORD PTR [rip+0x8e9c],rax        # 40e950 <__bss_start@@Base+0x1c0>
  405ab4:	mov    eax,0x0
  405ab9:	call   4027d0 <setup@@Base>
  405abe:	mov    rax,QWORD PTR [rip+0x8e93]        # 40e958 <__bss_start@@Base+0x1c8>
  405ac5:	add    rax,0x1
  405ac9:	mov    QWORD PTR [rip+0x8e88],rax        # 40e958 <__bss_start@@Base+0x1c8>
  405ad0:	mov    eax,0x0
  405ad5:	call   403fe3 <body_with_two_returns@@Base>
  405ada:	mov    rax,QWORD PTR [rip+0x8e7f]        # 40e960 <__bss_start@@Base+0x1d0>
  405ae1:	add    rax,0x1
  405ae5:	mov    QWORD PTR [rip+0x8e74],rax        # 40e960 <__bss_start@@Base+0x1d0>
  405aec:	lea    rdi,[rip+0x4834]        # 40a327 <_IO_stdin_used@@Base+0x327>
  405af3:	call   4020b0 <puts@plt>
  405af8:	mov    rax,QWORD PTR [rip+0x8e69]        # 40e968 <__bss_start@@Base+0x1d8>
  405aff:	add    rax,0x1
  405b03:	mov    QWORD PTR [rip+0x8e5e],rax        # 40e968 <__bss_start@@Base+0x1d8>
  405b0a:	lea    rdi,[rip+0x497d]        # 40a48e <_IO_stdin_used@@Base+0x48e>
  405b11:	call   4020b0 <puts@plt>
  405b16:	mov    rax,QWORD PTR [rip+0x8e53]        # 40e970 <__bss_start@@Base+0x1e0>
  405b1d:	add    rax,0x1
  405b21:	mov    QWORD PTR [rip+0x8e48],rax        # 40e970 <__bss_start@@Base+0x1e0>
  405b28:	lea    rdi,[rip+0x496e]        # 40a49d <_IO_stdin_used@@Base+0x49d>
  405b2f:	call   4020b0 <puts@plt>
  405b34:	mov    rax,QWORD PTR [rip+0x8e3d]        # 40e978 <__bss_start@@Base+0x1e8>
  405b3b:	add    rax,0x1
  405b3f:	mov    QWORD PTR [rip+0x8e32],rax        # 40e978 <__bss_start@@Base+0x1e8>
  405b46:	lea    rdi,[rip+0x4778]        # 40a2c5 <_IO_stdin_used@@Base+0x2c5>
  405b4d:	call   4020b0 <puts@plt>
  405b52:	mov    edx,0x0
  405b57:	mov    rax,QWORD PTR [rip+0x8e22]        # 40e980 <__bss_start@@Base+0x1f0>
  405b5e:	add    rax,0x1
  405b62:	mov    QWORD PTR [rip+0x8e17],rax        # 40e980 <__bss_start@@Base+0x1f0>
  405b69:	mov    eax,edx
  405b6b:	pop    rbp
  405b6c:	ret    
  405b6d:	push   rbp
  405b6e:	mov    rbp,rsp
  405b71:	lea    rdi,[rip+0x7b08]        # 40d680 <__data_start@@Base+0x540>
  405b78:	call   409cc0 <__gcov_sort_n_vals@@Base+0x1640>
  405b7d:	pop    rbp
  405b7e:	ret    

0000000000405b7f <init_token_int_type@@Base>:
  405b7f:	push   rbp
  405b80:	mov    rbp,rsp
  405b83:	mov    QWORD PTR [rbp-0x8],rdi
  405b87:	mov    rax,QWORD PTR [rip+0x9562]        # 40f0f0 <__bss_start@@Base+0x960>
  405b8e:	add    rax,0x1
  405b92:	mov    QWORD PTR [rip+0x9557],rax        # 40f0f0 <__bss_start@@Base+0x960>
  405b99:	mov    rax,QWORD PTR [rbp-0x8]
  405b9d:	mov    DWORD PTR [rax],0x0
  405ba3:	nop
  405ba4:	pop    rbp
  405ba5:	ret    

0000000000405ba6 <init_token_int_value@@Base>:
  405ba6:	push   rbp
  405ba7:	mov    rbp,rsp
  405baa:	mov    QWORD PTR [rbp-0x8],rdi
  405bae:	mov    DWORD PTR [rbp-0xc],esi
  405bb1:	mov    rax,QWORD PTR [rip+0x9530]        # 40f0e8 <__bss_start@@Base+0x958>
  405bb8:	add    rax,0x1
  405bbc:	mov    QWORD PTR [rip+0x9525],rax        # 40f0e8 <__bss_start@@Base+0x958>
  405bc3:	mov    rax,QWORD PTR [rbp-0x8]
  405bc7:	mov    DWORD PTR [rax],0x1
  405bcd:	mov    rax,QWORD PTR [rbp-0x8]
  405bd1:	mov    edx,DWORD PTR [rbp-0xc]
  405bd4:	mov    DWORD PTR [rax+0x4],edx
  405bd7:	nop
  405bd8:	pop    rbp
  405bd9:	ret    

0000000000405bda <init_token_function@@Base>:
  405bda:	push   rbp
  405bdb:	mov    rbp,rsp
  405bde:	mov    QWORD PTR [rbp-0x8],rdi
  405be2:	mov    QWORD PTR [rbp-0x10],rsi
  405be6:	mov    rax,QWORD PTR [rip+0x94f3]        # 40f0e0 <__bss_start@@Base+0x950>
  405bed:	add    rax,0x1
  405bf1:	mov    QWORD PTR [rip+0x94e8],rax        # 40f0e0 <__bss_start@@Base+0x950>
  405bf8:	mov    rax,QWORD PTR [rbp-0x8]
  405bfc:	mov    DWORD PTR [rax],0x2
  405c02:	mov    rax,QWORD PTR [rbp-0x8]
  405c06:	mov    rdx,QWORD PTR [rbp-0x10]
  405c0a:	mov    QWORD PTR [rax+0x8],rdx
  405c0e:	nop
  405c0f:	pop    rbp
  405c10:	ret    

0000000000405c11 <init_token_opar@@Base>:
  405c11:	push   rbp
  405c12:	mov    rbp,rsp
  405c15:	mov    QWORD PTR [rbp-0x8],rdi
  405c19:	mov    rax,QWORD PTR [rip+0x94b8]        # 40f0d8 <__bss_start@@Base+0x948>
  405c20:	add    rax,0x1
  405c24:	mov    QWORD PTR [rip+0x94ad],rax        # 40f0d8 <__bss_start@@Base+0x948>
  405c2b:	mov    rax,QWORD PTR [rbp-0x8]
  405c2f:	mov    DWORD PTR [rax],0x3
  405c35:	nop
  405c36:	pop    rbp
  405c37:	ret    

0000000000405c38 <init_token_cpar@@Base>:
  405c38:	push   rbp
  405c39:	mov    rbp,rsp
  405c3c:	mov    QWORD PTR [rbp-0x8],rdi
  405c40:	mov    rax,QWORD PTR [rip+0x9489]        # 40f0d0 <__bss_start@@Base+0x940>
  405c47:	add    rax,0x1
  405c4b:	mov    QWORD PTR [rip+0x947e],rax        # 40f0d0 <__bss_start@@Base+0x940>
  405c52:	mov    rax,QWORD PTR [rbp-0x8]
  405c56:	mov    DWORD PTR [rax],0x4
  405c5c:	nop
  405c5d:	pop    rbp
  405c5e:	ret    

0000000000405c5f <init_token_obra@@Base>:
  405c5f:	push   rbp
  405c60:	mov    rbp,rsp
  405c63:	mov    QWORD PTR [rbp-0x8],rdi
  405c67:	mov    rax,QWORD PTR [rip+0x945a]        # 40f0c8 <__bss_start@@Base+0x938>
  405c6e:	add    rax,0x1
  405c72:	mov    QWORD PTR [rip+0x944f],rax        # 40f0c8 <__bss_start@@Base+0x938>
  405c79:	mov    rax,QWORD PTR [rbp-0x8]
  405c7d:	mov    DWORD PTR [rax],0x5
  405c83:	nop
  405c84:	pop    rbp
  405c85:	ret    

0000000000405c86 <init_token_cbra@@Base>:
  405c86:	push   rbp
  405c87:	mov    rbp,rsp
  405c8a:	mov    QWORD PTR [rbp-0x8],rdi
  405c8e:	mov    rax,QWORD PTR [rip+0x942b]        # 40f0c0 <__bss_start@@Base+0x930>
  405c95:	add    rax,0x1
  405c99:	mov    QWORD PTR [rip+0x9420],rax        # 40f0c0 <__bss_start@@Base+0x930>
  405ca0:	mov    rax,QWORD PTR [rbp-0x8]
  405ca4:	mov    DWORD PTR [rax],0x6
  405caa:	nop
  405cab:	pop    rbp
  405cac:	ret    

0000000000405cad <init_token_return@@Base>:
  405cad:	push   rbp
  405cae:	mov    rbp,rsp
  405cb1:	mov    QWORD PTR [rbp-0x8],rdi
  405cb5:	mov    rax,QWORD PTR [rip+0x93fc]        # 40f0b8 <__bss_start@@Base+0x928>
  405cbc:	add    rax,0x1
  405cc0:	mov    QWORD PTR [rip+0x93f1],rax        # 40f0b8 <__bss_start@@Base+0x928>
  405cc7:	mov    rax,QWORD PTR [rbp-0x8]
  405ccb:	mov    DWORD PTR [rax],0x7
  405cd1:	nop
  405cd2:	pop    rbp
  405cd3:	ret    

0000000000405cd4 <init_token_semicolon@@Base>:
  405cd4:	push   rbp
  405cd5:	mov    rbp,rsp
  405cd8:	mov    QWORD PTR [rbp-0x8],rdi
  405cdc:	mov    rax,QWORD PTR [rip+0x93cd]        # 40f0b0 <__bss_start@@Base+0x920>
  405ce3:	add    rax,0x1
  405ce7:	mov    QWORD PTR [rip+0x93c2],rax        # 40f0b0 <__bss_start@@Base+0x920>
  405cee:	mov    rax,QWORD PTR [rbp-0x8]
  405cf2:	mov    DWORD PTR [rax],0x8
  405cf8:	nop
  405cf9:	pop    rbp
  405cfa:	ret    

0000000000405cfb <init_token_eof@@Base>:
  405cfb:	push   rbp
  405cfc:	mov    rbp,rsp
  405cff:	mov    QWORD PTR [rbp-0x8],rdi
  405d03:	mov    rax,QWORD PTR [rip+0x939e]        # 40f0a8 <__bss_start@@Base+0x918>
  405d0a:	add    rax,0x1
  405d0e:	mov    QWORD PTR [rip+0x9393],rax        # 40f0a8 <__bss_start@@Base+0x918>
  405d15:	mov    rax,QWORD PTR [rbp-0x8]
  405d19:	mov    DWORD PTR [rax],0x9
  405d1f:	nop
  405d20:	pop    rbp
  405d21:	ret    

0000000000405d22 <init_token_if@@Base>:
  405d22:	push   rbp
  405d23:	mov    rbp,rsp
  405d26:	mov    QWORD PTR [rbp-0x8],rdi
  405d2a:	mov    rax,QWORD PTR [rip+0x936f]        # 40f0a0 <__bss_start@@Base+0x910>
  405d31:	add    rax,0x1
  405d35:	mov    QWORD PTR [rip+0x9364],rax        # 40f0a0 <__bss_start@@Base+0x910>
  405d3c:	mov    rax,QWORD PTR [rbp-0x8]
  405d40:	mov    DWORD PTR [rax],0xa
  405d46:	nop
  405d47:	pop    rbp
  405d48:	ret    

0000000000405d49 <init_token_else@@Base>:
  405d49:	push   rbp
  405d4a:	mov    rbp,rsp
  405d4d:	mov    QWORD PTR [rbp-0x8],rdi
  405d51:	mov    rax,QWORD PTR [rip+0x9340]        # 40f098 <__bss_start@@Base+0x908>
  405d58:	add    rax,0x1
  405d5c:	mov    QWORD PTR [rip+0x9335],rax        # 40f098 <__bss_start@@Base+0x908>
  405d63:	mov    rax,QWORD PTR [rbp-0x8]
  405d67:	mov    DWORD PTR [rax],0xb
  405d6d:	nop
  405d6e:	pop    rbp
  405d6f:	ret    

0000000000405d70 <init_token_boolean_op@@Base>:
  405d70:	push   rbp
  405d71:	mov    rbp,rsp
  405d74:	mov    QWORD PTR [rbp-0x8],rdi
  405d78:	mov    QWORD PTR [rbp-0x10],rsi
  405d7c:	mov    rax,QWORD PTR [rip+0x930d]        # 40f090 <__bss_start@@Base+0x900>
  405d83:	add    rax,0x1
  405d87:	mov    QWORD PTR [rip+0x9302],rax        # 40f090 <__bss_start@@Base+0x900>
  405d8e:	mov    rax,QWORD PTR [rbp-0x8]
  405d92:	mov    DWORD PTR [rax],0xc
  405d98:	mov    rax,QWORD PTR [rbp-0x8]
  405d9c:	mov    rdx,QWORD PTR [rbp-0x10]
  405da0:	mov    QWORD PTR [rax+0x8],rdx
  405da4:	nop
  405da5:	pop    rbp
  405da6:	ret    

0000000000405da7 <free_token_int_type@@Base>:
  405da7:	push   rbp
  405da8:	mov    rbp,rsp
  405dab:	sub    rsp,0x10
  405daf:	mov    QWORD PTR [rbp-0x8],rdi
  405db3:	mov    rax,QWORD PTR [rip+0x92ce]        # 40f088 <__bss_start@@Base+0x8f8>
  405dba:	add    rax,0x1
  405dbe:	mov    QWORD PTR [rip+0x92c3],rax        # 40f088 <__bss_start@@Base+0x8f8>
  405dc5:	mov    rax,QWORD PTR [rbp-0x8]
  405dc9:	mov    rdi,rax
  405dcc:	call   402040 <free@plt>
  405dd1:	nop
  405dd2:	leave  
  405dd3:	ret    

0000000000405dd4 <free_token_int_value@@Base>:
  405dd4:	push   rbp
  405dd5:	mov    rbp,rsp
  405dd8:	sub    rsp,0x10
  405ddc:	mov    QWORD PTR [rbp-0x8],rdi
  405de0:	mov    rax,QWORD PTR [rip+0x9299]        # 40f080 <__bss_start@@Base+0x8f0>
  405de7:	add    rax,0x1
  405deb:	mov    QWORD PTR [rip+0x928e],rax        # 40f080 <__bss_start@@Base+0x8f0>
  405df2:	mov    rax,QWORD PTR [rbp-0x8]
  405df6:	mov    rdi,rax
  405df9:	call   402040 <free@plt>
  405dfe:	nop
  405dff:	leave  
  405e00:	ret    

0000000000405e01 <free_token_function@@Base>:
  405e01:	push   rbp
  405e02:	mov    rbp,rsp
  405e05:	sub    rsp,0x10
  405e09:	mov    QWORD PTR [rbp-0x8],rdi
  405e0d:	mov    rax,QWORD PTR [rip+0x9264]        # 40f078 <__bss_start@@Base+0x8e8>
  405e14:	add    rax,0x1
  405e18:	mov    QWORD PTR [rip+0x9259],rax        # 40f078 <__bss_start@@Base+0x8e8>
  405e1f:	mov    rax,QWORD PTR [rbp-0x8]
  405e23:	mov    rdi,rax
  405e26:	call   402040 <free@plt>
  405e2b:	nop
  405e2c:	leave  
  405e2d:	ret    

0000000000405e2e <free_token_opar@@Base>:
  405e2e:	push   rbp
  405e2f:	mov    rbp,rsp
  405e32:	sub    rsp,0x10
  405e36:	mov    QWORD PTR [rbp-0x8],rdi
  405e3a:	mov    rax,QWORD PTR [rip+0x922f]        # 40f070 <__bss_start@@Base+0x8e0>
  405e41:	add    rax,0x1
  405e45:	mov    QWORD PTR [rip+0x9224],rax        # 40f070 <__bss_start@@Base+0x8e0>
  405e4c:	mov    rax,QWORD PTR [rbp-0x8]
  405e50:	mov    rdi,rax
  405e53:	call   402040 <free@plt>
  405e58:	nop
  405e59:	leave  
  405e5a:	ret    

0000000000405e5b <free_token_cpar@@Base>:
  405e5b:	push   rbp
  405e5c:	mov    rbp,rsp
  405e5f:	sub    rsp,0x10
  405e63:	mov    QWORD PTR [rbp-0x8],rdi
  405e67:	mov    rax,QWORD PTR [rip+0x91fa]        # 40f068 <__bss_start@@Base+0x8d8>
  405e6e:	add    rax,0x1
  405e72:	mov    QWORD PTR [rip+0x91ef],rax        # 40f068 <__bss_start@@Base+0x8d8>
  405e79:	mov    rax,QWORD PTR [rbp-0x8]
  405e7d:	mov    rdi,rax
  405e80:	call   402040 <free@plt>
  405e85:	nop
  405e86:	leave  
  405e87:	ret    

0000000000405e88 <free_token_obra@@Base>:
  405e88:	push   rbp
  405e89:	mov    rbp,rsp
  405e8c:	sub    rsp,0x10
  405e90:	mov    QWORD PTR [rbp-0x8],rdi
  405e94:	mov    rax,QWORD PTR [rip+0x91c5]        # 40f060 <__bss_start@@Base+0x8d0>
  405e9b:	add    rax,0x1
  405e9f:	mov    QWORD PTR [rip+0x91ba],rax        # 40f060 <__bss_start@@Base+0x8d0>
  405ea6:	mov    rax,QWORD PTR [rbp-0x8]
  405eaa:	mov    rdi,rax
  405ead:	call   402040 <free@plt>
  405eb2:	nop
  405eb3:	leave  
  405eb4:	ret    

0000000000405eb5 <free_token_cbra@@Base>:
  405eb5:	push   rbp
  405eb6:	mov    rbp,rsp
  405eb9:	sub    rsp,0x10
  405ebd:	mov    QWORD PTR [rbp-0x8],rdi
  405ec1:	mov    rax,QWORD PTR [rip+0x9190]        # 40f058 <__bss_start@@Base+0x8c8>
  405ec8:	add    rax,0x1
  405ecc:	mov    QWORD PTR [rip+0x9185],rax        # 40f058 <__bss_start@@Base+0x8c8>
  405ed3:	mov    rax,QWORD PTR [rbp-0x8]
  405ed7:	mov    rdi,rax
  405eda:	call   402040 <free@plt>
  405edf:	nop
  405ee0:	leave  
  405ee1:	ret    

0000000000405ee2 <free_token_return@@Base>:
  405ee2:	push   rbp
  405ee3:	mov    rbp,rsp
  405ee6:	sub    rsp,0x10
  405eea:	mov    QWORD PTR [rbp-0x8],rdi
  405eee:	mov    rax,QWORD PTR [rip+0x915b]        # 40f050 <__bss_start@@Base+0x8c0>
  405ef5:	add    rax,0x1
  405ef9:	mov    QWORD PTR [rip+0x9150],rax        # 40f050 <__bss_start@@Base+0x8c0>
  405f00:	mov    rax,QWORD PTR [rbp-0x8]
  405f04:	mov    rdi,rax
  405f07:	call   402040 <free@plt>
  405f0c:	nop
  405f0d:	leave  
  405f0e:	ret    

0000000000405f0f <free_token_semicolon@@Base>:
  405f0f:	push   rbp
  405f10:	mov    rbp,rsp
  405f13:	sub    rsp,0x10
  405f17:	mov    QWORD PTR [rbp-0x8],rdi
  405f1b:	mov    rax,QWORD PTR [rip+0x9126]        # 40f048 <__bss_start@@Base+0x8b8>
  405f22:	add    rax,0x1
  405f26:	mov    QWORD PTR [rip+0x911b],rax        # 40f048 <__bss_start@@Base+0x8b8>
  405f2d:	mov    rax,QWORD PTR [rbp-0x8]
  405f31:	mov    rdi,rax
  405f34:	call   402040 <free@plt>
  405f39:	nop
  405f3a:	leave  
  405f3b:	ret    

0000000000405f3c <free_token_eof@@Base>:
  405f3c:	push   rbp
  405f3d:	mov    rbp,rsp
  405f40:	sub    rsp,0x10
  405f44:	mov    QWORD PTR [rbp-0x8],rdi
  405f48:	mov    rax,QWORD PTR [rip+0x90f1]        # 40f040 <__bss_start@@Base+0x8b0>
  405f4f:	add    rax,0x1
  405f53:	mov    QWORD PTR [rip+0x90e6],rax        # 40f040 <__bss_start@@Base+0x8b0>
  405f5a:	mov    rax,QWORD PTR [rbp-0x8]
  405f5e:	mov    rdi,rax
  405f61:	call   402040 <free@plt>
  405f66:	nop
  405f67:	leave  
  405f68:	ret    

0000000000405f69 <free_token_if@@Base>:
  405f69:	push   rbp
  405f6a:	mov    rbp,rsp
  405f6d:	sub    rsp,0x10
  405f71:	mov    QWORD PTR [rbp-0x8],rdi
  405f75:	mov    rax,QWORD PTR [rip+0x90bc]        # 40f038 <__bss_start@@Base+0x8a8>
  405f7c:	add    rax,0x1
  405f80:	mov    QWORD PTR [rip+0x90b1],rax        # 40f038 <__bss_start@@Base+0x8a8>
  405f87:	mov    rax,QWORD PTR [rbp-0x8]
  405f8b:	mov    rdi,rax
  405f8e:	call   402040 <free@plt>
  405f93:	nop
  405f94:	leave  
  405f95:	ret    

0000000000405f96 <free_token_else@@Base>:
  405f96:	push   rbp
  405f97:	mov    rbp,rsp
  405f9a:	sub    rsp,0x10
  405f9e:	mov    QWORD PTR [rbp-0x8],rdi
  405fa2:	mov    rax,QWORD PTR [rip+0x9087]        # 40f030 <__bss_start@@Base+0x8a0>
  405fa9:	add    rax,0x1
  405fad:	mov    QWORD PTR [rip+0x907c],rax        # 40f030 <__bss_start@@Base+0x8a0>
  405fb4:	mov    rax,QWORD PTR [rbp-0x8]
  405fb8:	mov    rdi,rax
  405fbb:	call   402040 <free@plt>
  405fc0:	nop
  405fc1:	leave  
  405fc2:	ret    

0000000000405fc3 <free_token_boolean_op@@Base>:
  405fc3:	push   rbp
  405fc4:	mov    rbp,rsp
  405fc7:	sub    rsp,0x10
  405fcb:	mov    QWORD PTR [rbp-0x8],rdi
  405fcf:	mov    rax,QWORD PTR [rip+0x904a]        # 40f020 <__bss_start@@Base+0x890>
  405fd6:	add    rax,0x1
  405fda:	mov    QWORD PTR [rip+0x903f],rax        # 40f020 <__bss_start@@Base+0x890>
  405fe1:	mov    rax,QWORD PTR [rbp-0x8]
  405fe5:	mov    rax,QWORD PTR [rax+0x8]
  405fe9:	test   rax,rax
  405fec:	je     406010 <free_token_boolean_op@@Base+0x4d>
  405fee:	mov    rax,QWORD PTR [rbp-0x8]
  405ff2:	mov    rax,QWORD PTR [rax+0x8]
  405ff6:	mov    rdi,rax
  405ff9:	call   402040 <free@plt>
  405ffe:	mov    rax,QWORD PTR [rip+0x9023]        # 40f028 <__bss_start@@Base+0x898>
  406005:	add    rax,0x1
  406009:	mov    QWORD PTR [rip+0x9018],rax        # 40f028 <__bss_start@@Base+0x898>
  406010:	mov    rax,QWORD PTR [rbp-0x8]
  406014:	mov    rdi,rax
  406017:	call   402040 <free@plt>
  40601c:	nop
  40601d:	leave  
  40601e:	ret    
  40601f:	push   rbp
  406020:	mov    rbp,rsp
  406023:	lea    rdi,[rip+0x7e36]        # 40de60 <__data_start@@Base+0xd20>
  40602a:	call   409cc0 <__gcov_sort_n_vals@@Base+0x1640>
  40602f:	pop    rbp
  406030:	ret    

0000000000406031 <init_ast_base@@Base>:
  406031:	push   rbp
  406032:	mov    rbp,rsp
  406035:	mov    QWORD PTR [rbp-0x8],rdi
  406039:	mov    DWORD PTR [rbp-0xc],esi
  40603c:	mov    QWORD PTR [rbp-0x18],rdx
  406040:	mov    rax,QWORD PTR [rip+0x9319]        # 40f360 <__bss_start@@Base+0xbd0>
  406047:	add    rax,0x1
  40604b:	mov    QWORD PTR [rip+0x930e],rax        # 40f360 <__bss_start@@Base+0xbd0>
  406052:	mov    rax,QWORD PTR [rbp-0x8]
  406056:	mov    edx,DWORD PTR [rbp-0xc]
  406059:	mov    DWORD PTR [rax],edx
  40605b:	mov    rax,QWORD PTR [rbp-0x8]
  40605f:	mov    rdx,QWORD PTR [rbp-0x18]
  406063:	mov    QWORD PTR [rax+0x8],rdx
  406067:	nop
  406068:	pop    rbp
  406069:	ret    

000000000040606a <init_ast_base_single@@Base>:
  40606a:	push   rbp
  40606b:	mov    rbp,rsp
  40606e:	sub    rsp,0x10
  406072:	mov    QWORD PTR [rbp-0x8],rdi
  406076:	mov    DWORD PTR [rbp-0xc],esi
  406079:	mov    rax,QWORD PTR [rip+0x92d0]        # 40f350 <__bss_start@@Base+0xbc0>
  406080:	add    rax,0x1
  406084:	mov    QWORD PTR [rip+0x92c5],rax        # 40f350 <__bss_start@@Base+0xbc0>
  40608b:	mov    ecx,DWORD PTR [rbp-0xc]
  40608e:	mov    rax,QWORD PTR [rbp-0x8]
  406092:	mov    edx,0x0
  406097:	mov    esi,ecx
  406099:	mov    rdi,rax
  40609c:	call   406031 <init_ast_base@@Base>
  4060a1:	mov    rax,QWORD PTR [rip+0x92b0]        # 40f358 <__bss_start@@Base+0xbc8>
  4060a8:	add    rax,0x1
  4060ac:	mov    QWORD PTR [rip+0x92a5],rax        # 40f358 <__bss_start@@Base+0xbc8>
  4060b3:	nop
  4060b4:	leave  
  4060b5:	ret    

00000000004060b6 <init_node_id@@Base>:
  4060b6:	push   rbp
  4060b7:	mov    rbp,rsp
  4060ba:	sub    rsp,0x10
  4060be:	mov    QWORD PTR [rbp-0x8],rdi
  4060c2:	mov    QWORD PTR [rbp-0x10],rsi
  4060c6:	mov    rax,QWORD PTR [rip+0x9273]        # 40f340 <__bss_start@@Base+0xbb0>
  4060cd:	add    rax,0x1
  4060d1:	mov    QWORD PTR [rip+0x9268],rax        # 40f340 <__bss_start@@Base+0xbb0>
  4060d8:	mov    rax,QWORD PTR [rbp-0x8]
  4060dc:	mov    esi,0x0
  4060e1:	mov    rdi,rax
  4060e4:	call   40606a <init_ast_base_single@@Base>
  4060e9:	mov    rax,QWORD PTR [rip+0x9258]        # 40f348 <__bss_start@@Base+0xbb8>
  4060f0:	add    rax,0x1
  4060f4:	mov    QWORD PTR [rip+0x924d],rax        # 40f348 <__bss_start@@Base+0xbb8>
  4060fb:	mov    rax,QWORD PTR [rbp-0x8]
  4060ff:	mov    rdx,QWORD PTR [rbp-0x10]
  406103:	mov    QWORD PTR [rax+0x10],rdx
  406107:	nop
  406108:	leave  
  406109:	ret    

000000000040610a <init_node_int@@Base>:
  40610a:	push   rbp
  40610b:	mov    rbp,rsp
  40610e:	sub    rsp,0x10
  406112:	mov    QWORD PTR [rbp-0x8],rdi
  406116:	mov    DWORD PTR [rbp-0xc],esi
  406119:	mov    rax,QWORD PTR [rip+0x9210]        # 40f330 <__bss_start@@Base+0xba0>
  406120:	add    rax,0x1
  406124:	mov    QWORD PTR [rip+0x9205],rax        # 40f330 <__bss_start@@Base+0xba0>
  40612b:	mov    rax,QWORD PTR [rbp-0x8]
  40612f:	mov    esi,0x1
  406134:	mov    rdi,rax
  406137:	call   40606a <init_ast_base_single@@Base>
  40613c:	mov    rax,QWORD PTR [rip+0x91f5]        # 40f338 <__bss_start@@Base+0xba8>
  406143:	add    rax,0x1
  406147:	mov    QWORD PTR [rip+0x91ea],rax        # 40f338 <__bss_start@@Base+0xba8>
  40614e:	mov    rax,QWORD PTR [rbp-0x8]
  406152:	mov    edx,DWORD PTR [rbp-0xc]
  406155:	mov    DWORD PTR [rax+0x10],edx
  406158:	nop
  406159:	leave  
  40615a:	ret    

000000000040615b <init_node_function@@Base>:
  40615b:	push   rbp
  40615c:	mov    rbp,rsp
  40615f:	sub    rsp,0x20
  406163:	mov    QWORD PTR [rbp-0x8],rdi
  406167:	mov    QWORD PTR [rbp-0x10],rsi
  40616b:	mov    QWORD PTR [rbp-0x18],rdx
  40616f:	mov    rax,QWORD PTR [rip+0x91aa]        # 40f320 <__bss_start@@Base+0xb90>
  406176:	add    rax,0x1
  40617a:	mov    QWORD PTR [rip+0x919f],rax        # 40f320 <__bss_start@@Base+0xb90>
  406181:	mov    rax,QWORD PTR [rbp-0x8]
  406185:	mov    esi,0x2
  40618a:	mov    rdi,rax
  40618d:	call   40606a <init_ast_base_single@@Base>
  406192:	mov    rax,QWORD PTR [rip+0x918f]        # 40f328 <__bss_start@@Base+0xb98>
  406199:	add    rax,0x1
  40619d:	mov    QWORD PTR [rip+0x9184],rax        # 40f328 <__bss_start@@Base+0xb98>
  4061a4:	mov    rax,QWORD PTR [rbp-0x8]
  4061a8:	mov    rdx,QWORD PTR [rbp-0x10]
  4061ac:	mov    QWORD PTR [rax+0x10],rdx
  4061b0:	mov    rax,QWORD PTR [rbp-0x8]
  4061b4:	mov    rdx,QWORD PTR [rbp-0x18]
  4061b8:	mov    QWORD PTR [rax+0x18],rdx
  4061bc:	nop
  4061bd:	leave  
  4061be:	ret    

00000000004061bf <init_node_return@@Base>:
  4061bf:	push   rbp
  4061c0:	mov    rbp,rsp
  4061c3:	sub    rsp,0x10
  4061c7:	mov    QWORD PTR [rbp-0x8],rdi
  4061cb:	mov    QWORD PTR [rbp-0x10],rsi
  4061cf:	mov    rax,QWORD PTR [rip+0x913a]        # 40f310 <__bss_start@@Base+0xb80>
  4061d6:	add    rax,0x1
  4061da:	mov    QWORD PTR [rip+0x912f],rax        # 40f310 <__bss_start@@Base+0xb80>
  4061e1:	mov    rax,QWORD PTR [rbp-0x8]
  4061e5:	mov    esi,0x3
  4061ea:	mov    rdi,rax
  4061ed:	call   40606a <init_ast_base_single@@Base>
  4061f2:	mov    rax,QWORD PTR [rip+0x911f]        # 40f318 <__bss_start@@Base+0xb88>
  4061f9:	add    rax,0x1
  4061fd:	mov    QWORD PTR [rip+0x9114],rax        # 40f318 <__bss_start@@Base+0xb88>
  406204:	mov    rax,QWORD PTR [rbp-0x8]
  406208:	mov    rdx,QWORD PTR [rbp-0x10]
  40620c:	mov    QWORD PTR [rax+0x10],rdx
  406210:	nop
  406211:	leave  
  406212:	ret    

0000000000406213 <init_node_if@@Base>:
  406213:	push   rbp
  406214:	mov    rbp,rsp
  406217:	sub    rsp,0x20
  40621b:	mov    QWORD PTR [rbp-0x8],rdi
  40621f:	mov    QWORD PTR [rbp-0x10],rsi
  406223:	mov    QWORD PTR [rbp-0x18],rdx
  406227:	mov    QWORD PTR [rbp-0x20],rcx
  40622b:	mov    rax,QWORD PTR [rip+0x90ce]        # 40f300 <__bss_start@@Base+0xb70>
  406232:	add    rax,0x1
  406236:	mov    QWORD PTR [rip+0x90c3],rax        # 40f300 <__bss_start@@Base+0xb70>
  40623d:	mov    rax,QWORD PTR [rbp-0x8]
  406241:	mov    esi,0x4
  406246:	mov    rdi,rax
  406249:	call   40606a <init_ast_base_single@@Base>
  40624e:	mov    rax,QWORD PTR [rip+0x90b3]        # 40f308 <__bss_start@@Base+0xb78>
  406255:	add    rax,0x1
  406259:	mov    QWORD PTR [rip+0x90a8],rax        # 40f308 <__bss_start@@Base+0xb78>
  406260:	mov    rax,QWORD PTR [rbp-0x8]
  406264:	mov    rdx,QWORD PTR [rbp-0x10]
  406268:	mov    QWORD PTR [rax+0x10],rdx
  40626c:	mov    rax,QWORD PTR [rbp-0x8]
  406270:	mov    rdx,QWORD PTR [rbp-0x18]
  406274:	mov    QWORD PTR [rax+0x18],rdx
  406278:	mov    rax,QWORD PTR [rbp-0x8]
  40627c:	mov    rdx,QWORD PTR [rbp-0x20]
  406280:	mov    QWORD PTR [rax+0x20],rdx
  406284:	nop
  406285:	leave  
  406286:	ret    

0000000000406287 <init_node_boolean_operator@@Base>:
  406287:	push   rbp
  406288:	mov    rbp,rsp
  40628b:	sub    rsp,0x20
  40628f:	mov    QWORD PTR [rbp-0x8],rdi
  406293:	mov    DWORD PTR [rbp-0xc],esi
  406296:	mov    QWORD PTR [rbp-0x18],rdx
  40629a:	mov    QWORD PTR [rbp-0x20],rcx
  40629e:	mov    rax,QWORD PTR [rip+0x904b]        # 40f2f0 <__bss_start@@Base+0xb60>
  4062a5:	add    rax,0x1
  4062a9:	mov    QWORD PTR [rip+0x9040],rax        # 40f2f0 <__bss_start@@Base+0xb60>
  4062b0:	mov    rax,QWORD PTR [rbp-0x8]
  4062b4:	mov    esi,0x0
  4062b9:	mov    rdi,rax
  4062bc:	call   40606a <init_ast_base_single@@Base>
  4062c1:	mov    rax,QWORD PTR [rip+0x9030]        # 40f2f8 <__bss_start@@Base+0xb68>
  4062c8:	add    rax,0x1
  4062cc:	mov    QWORD PTR [rip+0x9025],rax        # 40f2f8 <__bss_start@@Base+0xb68>
  4062d3:	mov    rax,QWORD PTR [rbp-0x8]
  4062d7:	mov    DWORD PTR [rax],0x5
  4062dd:	mov    rax,QWORD PTR [rbp-0x8]
  4062e1:	mov    edx,DWORD PTR [rbp-0xc]
  4062e4:	mov    DWORD PTR [rax+0x20],edx
  4062e7:	mov    rax,QWORD PTR [rbp-0x8]
  4062eb:	mov    rdx,QWORD PTR [rbp-0x18]
  4062ef:	mov    QWORD PTR [rax+0x10],rdx
  4062f3:	mov    rax,QWORD PTR [rbp-0x8]
  4062f7:	mov    rdx,QWORD PTR [rbp-0x20]
  4062fb:	mov    QWORD PTR [rax+0x18],rdx
  4062ff:	nop
  406300:	leave  
  406301:	ret    

0000000000406302 <free_node@@Base>:
  406302:	push   rbp
  406303:	mov    rbp,rsp
  406306:	sub    rsp,0x10
  40630a:	mov    QWORD PTR [rbp-0x8],rdi
  40630e:	mov    rax,QWORD PTR [rbp-0x8]
  406312:	mov    eax,DWORD PTR [rax]
  406314:	cmp    eax,0x5
  406317:	ja     406481 <free_node@@Base+0x17f>
  40631d:	mov    eax,eax
  40631f:	lea    rdx,[rax*4+0x0]
  406327:	lea    rax,[rip+0x44d2]        # 40a800 <_IO_stdin_used@@Base+0x800>
  40632e:	mov    eax,DWORD PTR [rdx+rax*1]
  406331:	movsxd rdx,eax
  406334:	lea    rax,[rip+0x44c5]        # 40a800 <_IO_stdin_used@@Base+0x800>
  40633b:	add    rax,rdx
  40633e:	jmp    rax
  406340:	mov    rax,QWORD PTR [rip+0x8f41]        # 40f288 <__bss_start@@Base+0xaf8>
  406347:	add    rax,0x1
  40634b:	mov    QWORD PTR [rip+0x8f36],rax        # 40f288 <__bss_start@@Base+0xaf8>
  406352:	mov    rax,QWORD PTR [rbp-0x8]
  406356:	mov    rdi,rax
  406359:	call   4064d5 <free_node_id@@Base>
  40635e:	nop
  40635f:	mov    rax,QWORD PTR [rip+0x8f82]        # 40f2e8 <__bss_start@@Base+0xb58>
  406366:	add    rax,0x1
  40636a:	mov    QWORD PTR [rip+0x8f77],rax        # 40f2e8 <__bss_start@@Base+0xb58>
  406371:	jmp    4064d2 <free_node@@Base+0x1d0>
  406376:	mov    rax,QWORD PTR [rip+0x8f13]        # 40f290 <__bss_start@@Base+0xb00>
  40637d:	add    rax,0x1
  406381:	mov    QWORD PTR [rip+0x8f08],rax        # 40f290 <__bss_start@@Base+0xb00>
  406388:	mov    rax,QWORD PTR [rbp-0x8]
  40638c:	mov    rdi,rax
  40638f:	call   406543 <free_node_int@@Base>
  406394:	nop
  406395:	mov    rax,QWORD PTR [rip+0x8f1c]        # 40f2b8 <__bss_start@@Base+0xb28>
  40639c:	add    rax,0x1
  4063a0:	mov    QWORD PTR [rip+0x8f11],rax        # 40f2b8 <__bss_start@@Base+0xb28>
  4063a7:	jmp    4064d2 <free_node@@Base+0x1d0>
  4063ac:	mov    rax,QWORD PTR [rip+0x8ee5]        # 40f298 <__bss_start@@Base+0xb08>
  4063b3:	add    rax,0x1
  4063b7:	mov    QWORD PTR [rip+0x8eda],rax        # 40f298 <__bss_start@@Base+0xb08>
  4063be:	mov    rax,QWORD PTR [rbp-0x8]
  4063c2:	mov    rdi,rax
  4063c5:	call   4065b1 <free_node_function@@Base>
  4063ca:	nop
  4063cb:	mov    rax,QWORD PTR [rip+0x8eee]        # 40f2c0 <__bss_start@@Base+0xb30>
  4063d2:	add    rax,0x1
  4063d6:	mov    QWORD PTR [rip+0x8ee3],rax        # 40f2c0 <__bss_start@@Base+0xb30>
  4063dd:	jmp    4064d2 <free_node@@Base+0x1d0>
  4063e2:	mov    rax,QWORD PTR [rip+0x8eb7]        # 40f2a0 <__bss_start@@Base+0xb10>
  4063e9:	add    rax,0x1
  4063ed:	mov    QWORD PTR [rip+0x8eac],rax        # 40f2a0 <__bss_start@@Base+0xb10>
  4063f4:	mov    rax,QWORD PTR [rbp-0x8]
  4063f8:	mov    rdi,rax
  4063fb:	call   40662f <free_node_return@@Base>
  406400:	nop
  406401:	mov    rax,QWORD PTR [rip+0x8ec0]        # 40f2c8 <__bss_start@@Base+0xb38>
  406408:	add    rax,0x1
  40640c:	mov    QWORD PTR [rip+0x8eb5],rax        # 40f2c8 <__bss_start@@Base+0xb38>
  406413:	jmp    4064d2 <free_node@@Base+0x1d0>
  406418:	mov    rax,QWORD PTR [rip+0x8e89]        # 40f2a8 <__bss_start@@Base+0xb18>
  40641f:	add    rax,0x1
  406423:	mov    QWORD PTR [rip+0x8e7e],rax        # 40f2a8 <__bss_start@@Base+0xb18>
  40642a:	mov    rax,QWORD PTR [rbp-0x8]
  40642e:	mov    rdi,rax
  406431:	call   40669d <free_node_if@@Base>
  406436:	nop
  406437:	mov    rax,QWORD PTR [rip+0x8e92]        # 40f2d0 <__bss_start@@Base+0xb40>
  40643e:	add    rax,0x1
  406442:	mov    QWORD PTR [rip+0x8e87],rax        # 40f2d0 <__bss_start@@Base+0xb40>
  406449:	jmp    4064d2 <free_node@@Base+0x1d0>
  40644e:	mov    rax,QWORD PTR [rip+0x8e5b]        # 40f2b0 <__bss_start@@Base+0xb20>
  406455:	add    rax,0x1
  406459:	mov    QWORD PTR [rip+0x8e50],rax        # 40f2b0 <__bss_start@@Base+0xb20>
  406460:	mov    rax,QWORD PTR [rbp-0x8]
  406464:	mov    rdi,rax
  406467:	call   406771 <free_node_boolean_operator@@Base>
  40646c:	nop
  40646d:	mov    rax,QWORD PTR [rip+0x8e64]        # 40f2d8 <__bss_start@@Base+0xb48>
  406474:	add    rax,0x1
  406478:	mov    QWORD PTR [rip+0x8e59],rax        # 40f2d8 <__bss_start@@Base+0xb48>
  40647f:	jmp    4064d2 <free_node@@Base+0x1d0>
  406481:	mov    rax,QWORD PTR [rip+0x8df8]        # 40f280 <__bss_start@@Base+0xaf0>
  406488:	add    rax,0x1
  40648c:	mov    QWORD PTR [rip+0x8ded],rax        # 40f280 <__bss_start@@Base+0xaf0>
  406493:	mov    rax,QWORD PTR [rip+0x6b5e]        # 40cff8 <stderr@GLIBC_2.2.5>
  40649a:	mov    rax,QWORD PTR [rax]
  40649d:	mov    rcx,rax
  4064a0:	mov    edx,0x1f
  4064a5:	mov    esi,0x1
  4064aa:	lea    rdi,[rip+0x432f]        # 40a7e0 <_IO_stdin_used@@Base+0x7e0>
  4064b1:	call   402250 <fwrite@plt>
  4064b6:	mov    rax,QWORD PTR [rip+0x8e23]        # 40f2e0 <__bss_start@@Base+0xb50>
  4064bd:	add    rax,0x1
  4064c1:	mov    QWORD PTR [rip+0x8e18],rax        # 40f2e0 <__bss_start@@Base+0xb50>
  4064c8:	mov    edi,0x1
  4064cd:	call   402240 <exit@plt>
  4064d2:	nop
  4064d3:	leave  
  4064d4:	ret    

00000000004064d5 <free_node_id@@Base>:
  4064d5:	push   rbp
  4064d6:	mov    rbp,rsp
  4064d9:	sub    rsp,0x10
  4064dd:	mov    QWORD PTR [rbp-0x8],rdi
  4064e1:	mov    rax,QWORD PTR [rip+0x8d68]        # 40f250 <__bss_start@@Base+0xac0>
  4064e8:	add    rax,0x1
  4064ec:	mov    QWORD PTR [rip+0x8d5d],rax        # 40f250 <__bss_start@@Base+0xac0>
  4064f3:	mov    rax,QWORD PTR [rbp-0x8]
  4064f7:	mov    rax,QWORD PTR [rax+0x8]
  4064fb:	test   rax,rax
  4064fe:	je     406534 <free_node_id@@Base+0x5f>
  406500:	mov    rax,QWORD PTR [rip+0x8d51]        # 40f258 <__bss_start@@Base+0xac8>
  406507:	add    rax,0x1
  40650b:	mov    QWORD PTR [rip+0x8d46],rax        # 40f258 <__bss_start@@Base+0xac8>
  406512:	mov    rax,QWORD PTR [rbp-0x8]
  406516:	mov    rax,QWORD PTR [rax+0x8]
  40651a:	mov    rdi,rax
  40651d:	call   406302 <free_node@@Base>
  406522:	mov    rax,QWORD PTR [rip+0x8d37]        # 40f260 <__bss_start@@Base+0xad0>
  406529:	add    rax,0x1
  40652d:	mov    QWORD PTR [rip+0x8d2c],rax        # 40f260 <__bss_start@@Base+0xad0>
  406534:	mov    rax,QWORD PTR [rbp-0x8]
  406538:	mov    rdi,rax
  40653b:	call   402040 <free@plt>
  406540:	nop
  406541:	leave  
  406542:	ret    

0000000000406543 <free_node_int@@Base>:
  406543:	push   rbp
  406544:	mov    rbp,rsp
  406547:	sub    rsp,0x10
  40654b:	mov    QWORD PTR [rbp-0x8],rdi
  40654f:	mov    rax,QWORD PTR [rip+0x8cda]        # 40f230 <__bss_start@@Base+0xaa0>
  406556:	add    rax,0x1
  40655a:	mov    QWORD PTR [rip+0x8ccf],rax        # 40f230 <__bss_start@@Base+0xaa0>
  406561:	mov    rax,QWORD PTR [rbp-0x8]
  406565:	mov    rax,QWORD PTR [rax+0x8]
  406569:	test   rax,rax
  40656c:	je     4065a2 <free_node_int@@Base+0x5f>
  40656e:	mov    rax,QWORD PTR [rip+0x8cc3]        # 40f238 <__bss_start@@Base+0xaa8>
  406575:	add    rax,0x1
  406579:	mov    QWORD PTR [rip+0x8cb8],rax        # 40f238 <__bss_start@@Base+0xaa8>
  406580:	mov    rax,QWORD PTR [rbp-0x8]
  406584:	mov    rax,QWORD PTR [rax+0x8]
  406588:	mov    rdi,rax
  40658b:	call   406302 <free_node@@Base>
  406590:	mov    rax,QWORD PTR [rip+0x8ca9]        # 40f240 <__bss_start@@Base+0xab0>
  406597:	add    rax,0x1
  40659b:	mov    QWORD PTR [rip+0x8c9e],rax        # 40f240 <__bss_start@@Base+0xab0>
  4065a2:	mov    rax,QWORD PTR [rbp-0x8]
  4065a6:	mov    rdi,rax
  4065a9:	call   402040 <free@plt>
  4065ae:	nop
  4065af:	leave  
  4065b0:	ret    

00000000004065b1 <free_node_function@@Base>:
  4065b1:	push   rbp
  4065b2:	mov    rbp,rsp
  4065b5:	sub    rsp,0x10
  4065b9:	mov    QWORD PTR [rbp-0x8],rdi
  4065bd:	mov    rax,QWORD PTR [rip+0x8c4c]        # 40f210 <__bss_start@@Base+0xa80>
  4065c4:	add    rax,0x1
  4065c8:	mov    QWORD PTR [rip+0x8c41],rax        # 40f210 <__bss_start@@Base+0xa80>
  4065cf:	mov    rax,QWORD PTR [rbp-0x8]
  4065d3:	mov    rax,QWORD PTR [rax+0x8]
  4065d7:	test   rax,rax
  4065da:	je     406610 <free_node_function@@Base+0x5f>
  4065dc:	mov    rax,QWORD PTR [rip+0x8c35]        # 40f218 <__bss_start@@Base+0xa88>
  4065e3:	add    rax,0x1
  4065e7:	mov    QWORD PTR [rip+0x8c2a],rax        # 40f218 <__bss_start@@Base+0xa88>
  4065ee:	mov    rax,QWORD PTR [rbp-0x8]
  4065f2:	mov    rax,QWORD PTR [rax+0x8]
  4065f6:	mov    rdi,rax
  4065f9:	call   406302 <free_node@@Base>
  4065fe:	mov    rax,QWORD PTR [rip+0x8c1b]        # 40f220 <__bss_start@@Base+0xa90>
  406605:	add    rax,0x1
  406609:	mov    QWORD PTR [rip+0x8c10],rax        # 40f220 <__bss_start@@Base+0xa90>
  406610:	mov    rax,QWORD PTR [rbp-0x8]
  406614:	mov    rax,QWORD PTR [rax+0x10]
  406618:	mov    rdi,rax
  40661b:	call   402040 <free@plt>
  406620:	mov    rax,QWORD PTR [rbp-0x8]
  406624:	mov    rdi,rax
  406627:	call   402040 <free@plt>
  40662c:	nop
  40662d:	leave  
  40662e:	ret    

000000000040662f <free_node_return@@Base>:
  40662f:	push   rbp
  406630:	mov    rbp,rsp
  406633:	sub    rsp,0x10
  406637:	mov    QWORD PTR [rbp-0x8],rdi
  40663b:	mov    rax,QWORD PTR [rip+0x8bae]        # 40f1f0 <__bss_start@@Base+0xa60>
  406642:	add    rax,0x1
  406646:	mov    QWORD PTR [rip+0x8ba3],rax        # 40f1f0 <__bss_start@@Base+0xa60>
  40664d:	mov    rax,QWORD PTR [rbp-0x8]
  406651:	mov    rax,QWORD PTR [rax+0x8]
  406655:	test   rax,rax
  406658:	je     40668e <free_node_return@@Base+0x5f>
  40665a:	mov    rax,QWORD PTR [rip+0x8b97]        # 40f1f8 <__bss_start@@Base+0xa68>
  406661:	add    rax,0x1
  406665:	mov    QWORD PTR [rip+0x8b8c],rax        # 40f1f8 <__bss_start@@Base+0xa68>
  40666c:	mov    rax,QWORD PTR [rbp-0x8]
  406670:	mov    rax,QWORD PTR [rax+0x8]
  406674:	mov    rdi,rax
  406677:	call   406302 <free_node@@Base>
  40667c:	mov    rax,QWORD PTR [rip+0x8b7d]        # 40f200 <__bss_start@@Base+0xa70>
  406683:	add    rax,0x1
  406687:	mov    QWORD PTR [rip+0x8b72],rax        # 40f200 <__bss_start@@Base+0xa70>
  40668e:	mov    rax,QWORD PTR [rbp-0x8]
  406692:	mov    rdi,rax
  406695:	call   402040 <free@plt>
  40669a:	nop
  40669b:	leave  
  40669c:	ret    

000000000040669d <free_node_if@@Base>:
  40669d:	push   rbp
  40669e:	mov    rbp,rsp
  4066a1:	sub    rsp,0x10
  4066a5:	mov    QWORD PTR [rbp-0x8],rdi
  4066a9:	mov    rax,QWORD PTR [rip+0x8b10]        # 40f1c0 <__bss_start@@Base+0xa30>
  4066b0:	add    rax,0x1
  4066b4:	mov    QWORD PTR [rip+0x8b05],rax        # 40f1c0 <__bss_start@@Base+0xa30>
  4066bb:	mov    rax,QWORD PTR [rbp-0x8]
  4066bf:	mov    rax,QWORD PTR [rax+0x8]
  4066c3:	test   rax,rax
  4066c6:	je     4066fc <free_node_if@@Base+0x5f>
  4066c8:	mov    rax,QWORD PTR [rip+0x8af9]        # 40f1c8 <__bss_start@@Base+0xa38>
  4066cf:	add    rax,0x1
  4066d3:	mov    QWORD PTR [rip+0x8aee],rax        # 40f1c8 <__bss_start@@Base+0xa38>
  4066da:	mov    rax,QWORD PTR [rbp-0x8]
  4066de:	mov    rax,QWORD PTR [rax+0x8]
  4066e2:	mov    rdi,rax
  4066e5:	call   406302 <free_node@@Base>
  4066ea:	mov    rax,QWORD PTR [rip+0x8adf]        # 40f1d0 <__bss_start@@Base+0xa40>
  4066f1:	add    rax,0x1
  4066f5:	mov    QWORD PTR [rip+0x8ad4],rax        # 40f1d0 <__bss_start@@Base+0xa40>
  4066fc:	mov    rax,QWORD PTR [rbp-0x8]
  406700:	mov    rax,QWORD PTR [rax+0x10]
  406704:	mov    rdi,rax
  406707:	call   406302 <free_node@@Base>
  40670c:	mov    rax,QWORD PTR [rip+0x8ac5]        # 40f1d8 <__bss_start@@Base+0xa48>
  406713:	add    rax,0x1
  406717:	mov    QWORD PTR [rip+0x8aba],rax        # 40f1d8 <__bss_start@@Base+0xa48>
  40671e:	mov    rax,QWORD PTR [rbp-0x8]
  406722:	mov    rax,QWORD PTR [rax+0x18]
  406726:	mov    rdi,rax
  406729:	call   406302 <free_node@@Base>
  40672e:	mov    rax,QWORD PTR [rip+0x8aab]        # 40f1e0 <__bss_start@@Base+0xa50>
  406735:	add    rax,0x1
  406739:	mov    QWORD PTR [rip+0x8aa0],rax        # 40f1e0 <__bss_start@@Base+0xa50>
  406740:	mov    rax,QWORD PTR [rbp-0x8]
  406744:	mov    rax,QWORD PTR [rax+0x20]
  406748:	mov    rdi,rax
  40674b:	call   406302 <free_node@@Base>
  406750:	mov    rax,QWORD PTR [rip+0x8a91]        # 40f1e8 <__bss_start@@Base+0xa58>
  406757:	add    rax,0x1
  40675b:	mov    QWORD PTR [rip+0x8a86],rax        # 40f1e8 <__bss_start@@Base+0xa58>
  406762:	mov    rax,QWORD PTR [rbp-0x8]
  406766:	mov    rdi,rax
  406769:	call   402040 <free@plt>
  40676e:	nop
  40676f:	leave  
  406770:	ret    

0000000000406771 <free_node_boolean_operator@@Base>:
  406771:	push   rbp
  406772:	mov    rbp,rsp
  406775:	sub    rsp,0x10
  406779:	mov    QWORD PTR [rbp-0x8],rdi
  40677d:	mov    rax,QWORD PTR [rip+0x89fc]        # 40f180 <__bss_start@@Base+0x9f0>
  406784:	add    rax,0x1
  406788:	mov    QWORD PTR [rip+0x89f1],rax        # 40f180 <__bss_start@@Base+0x9f0>
  40678f:	mov    rax,QWORD PTR [rbp-0x8]
  406793:	mov    rax,QWORD PTR [rax+0x8]
  406797:	test   rax,rax
  40679a:	je     4067d0 <free_node_boolean_operator@@Base+0x5f>
  40679c:	mov    rax,QWORD PTR [rip+0x89e5]        # 40f188 <__bss_start@@Base+0x9f8>
  4067a3:	add    rax,0x1
  4067a7:	mov    QWORD PTR [rip+0x89da],rax        # 40f188 <__bss_start@@Base+0x9f8>
  4067ae:	mov    rax,QWORD PTR [rbp-0x8]
  4067b2:	mov    rax,QWORD PTR [rax+0x8]
  4067b6:	mov    rdi,rax
  4067b9:	call   406302 <free_node@@Base>
  4067be:	mov    rax,QWORD PTR [rip+0x89cb]        # 40f190 <__bss_start@@Base+0xa00>
  4067c5:	add    rax,0x1
  4067c9:	mov    QWORD PTR [rip+0x89c0],rax        # 40f190 <__bss_start@@Base+0xa00>
  4067d0:	mov    rax,QWORD PTR [rbp-0x8]
  4067d4:	mov    rax,QWORD PTR [rax+0x10]
  4067d8:	mov    rdi,rax
  4067db:	call   406302 <free_node@@Base>
  4067e0:	mov    rax,QWORD PTR [rip+0x89b1]        # 40f198 <__bss_start@@Base+0xa08>
  4067e7:	add    rax,0x1
  4067eb:	mov    QWORD PTR [rip+0x89a6],rax        # 40f198 <__bss_start@@Base+0xa08>
  4067f2:	mov    rax,QWORD PTR [rbp-0x8]
  4067f6:	mov    rax,QWORD PTR [rax+0x18]
  4067fa:	mov    rdi,rax
  4067fd:	call   406302 <free_node@@Base>
  406802:	mov    rax,QWORD PTR [rip+0x8997]        # 40f1a0 <__bss_start@@Base+0xa10>
  406809:	add    rax,0x1
  40680d:	mov    QWORD PTR [rip+0x898c],rax        # 40f1a0 <__bss_start@@Base+0xa10>
  406814:	mov    rax,QWORD PTR [rbp-0x8]
  406818:	mov    rdi,rax
  40681b:	call   402040 <free@plt>
  406820:	nop
  406821:	leave  
  406822:	ret    

0000000000406823 <get_boolean_op_value@@Base>:
  406823:	push   rbp
  406824:	mov    rbp,rsp
  406827:	sub    rsp,0x20
  40682b:	mov    QWORD PTR [rbp-0x18],rdi
  40682f:	mov    rax,QWORD PTR [rip+0x88ca]        # 40f100 <__bss_start@@Base+0x970>
  406836:	add    rax,0x1
  40683a:	mov    QWORD PTR [rip+0x88bf],rax        # 40f100 <__bss_start@@Base+0x970>
  406841:	mov    rax,QWORD PTR [rbp-0x18]
  406845:	mov    rax,QWORD PTR [rax+0x8]
  406849:	mov    esi,0x2
  40684e:	mov    rdi,rax
  406851:	call   402160 <strnlen@plt>
  406856:	mov    QWORD PTR [rbp-0x8],rax
  40685a:	cmp    QWORD PTR [rbp-0x8],0x2
  40685f:	jne    406a21 <get_boolean_op_value@@Base+0x1fe>
  406865:	mov    rax,QWORD PTR [rbp-0x18]
  406869:	mov    rax,QWORD PTR [rax+0x8]
  40686d:	mov    edx,0x2
  406872:	lea    rsi,[rip+0x3f9f]        # 40a818 <_IO_stdin_used@@Base+0x818>
  406879:	mov    rdi,rax
  40687c:	call   402080 <strncmp@plt>
  406881:	test   eax,eax
  406883:	jne    4068a1 <get_boolean_op_value@@Base+0x7e>
  406885:	mov    eax,0x0
  40688a:	mov    rdx,QWORD PTR [rip+0x8877]        # 40f108 <__bss_start@@Base+0x978>
  406891:	add    rdx,0x1
  406895:	mov    QWORD PTR [rip+0x886c],rdx        # 40f108 <__bss_start@@Base+0x978>
  40689c:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  4068a1:	mov    rax,QWORD PTR [rbp-0x18]
  4068a5:	mov    rax,QWORD PTR [rax+0x8]
  4068a9:	mov    edx,0x2
  4068ae:	lea    rsi,[rip+0x3f66]        # 40a81b <_IO_stdin_used@@Base+0x81b>
  4068b5:	mov    rdi,rax
  4068b8:	call   402080 <strncmp@plt>
  4068bd:	test   eax,eax
  4068bf:	jne    4068dd <get_boolean_op_value@@Base+0xba>
  4068c1:	mov    eax,0x1
  4068c6:	mov    rdx,QWORD PTR [rip+0x8843]        # 40f110 <__bss_start@@Base+0x980>
  4068cd:	add    rdx,0x1
  4068d1:	mov    QWORD PTR [rip+0x8838],rdx        # 40f110 <__bss_start@@Base+0x980>
  4068d8:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  4068dd:	mov    rax,QWORD PTR [rbp-0x18]
  4068e1:	mov    rax,QWORD PTR [rax+0x8]
  4068e5:	mov    edx,0x2
  4068ea:	lea    rsi,[rip+0x3f2d]        # 40a81e <_IO_stdin_used@@Base+0x81e>
  4068f1:	mov    rdi,rax
  4068f4:	call   402080 <strncmp@plt>
  4068f9:	test   eax,eax
  4068fb:	jne    406919 <get_boolean_op_value@@Base+0xf6>
  4068fd:	mov    eax,0x2
  406902:	mov    rdx,QWORD PTR [rip+0x880f]        # 40f118 <__bss_start@@Base+0x988>
  406909:	add    rdx,0x1
  40690d:	mov    QWORD PTR [rip+0x8804],rdx        # 40f118 <__bss_start@@Base+0x988>
  406914:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406919:	mov    rax,QWORD PTR [rbp-0x18]
  40691d:	mov    rax,QWORD PTR [rax+0x8]
  406921:	mov    edx,0x2
  406926:	lea    rsi,[rip+0x3ef4]        # 40a821 <_IO_stdin_used@@Base+0x821>
  40692d:	mov    rdi,rax
  406930:	call   402080 <strncmp@plt>
  406935:	test   eax,eax
  406937:	jne    406955 <get_boolean_op_value@@Base+0x132>
  406939:	mov    eax,0x3
  40693e:	mov    rdx,QWORD PTR [rip+0x87db]        # 40f120 <__bss_start@@Base+0x990>
  406945:	add    rdx,0x1
  406949:	mov    QWORD PTR [rip+0x87d0],rdx        # 40f120 <__bss_start@@Base+0x990>
  406950:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406955:	mov    rax,QWORD PTR [rbp-0x18]
  406959:	mov    rax,QWORD PTR [rax+0x8]
  40695d:	mov    edx,0x2
  406962:	lea    rsi,[rip+0x3ebb]        # 40a824 <_IO_stdin_used@@Base+0x824>
  406969:	mov    rdi,rax
  40696c:	call   402080 <strncmp@plt>
  406971:	test   eax,eax
  406973:	jne    406991 <get_boolean_op_value@@Base+0x16e>
  406975:	mov    eax,0x4
  40697a:	mov    rdx,QWORD PTR [rip+0x87a7]        # 40f128 <__bss_start@@Base+0x998>
  406981:	add    rdx,0x1
  406985:	mov    QWORD PTR [rip+0x879c],rdx        # 40f128 <__bss_start@@Base+0x998>
  40698c:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406991:	mov    rax,QWORD PTR [rbp-0x18]
  406995:	mov    rax,QWORD PTR [rax+0x8]
  406999:	mov    edx,0x2
  40699e:	lea    rsi,[rip+0x3e82]        # 40a827 <_IO_stdin_used@@Base+0x827>
  4069a5:	mov    rdi,rax
  4069a8:	call   402080 <strncmp@plt>
  4069ad:	test   eax,eax
  4069af:	jne    4069cd <get_boolean_op_value@@Base+0x1aa>
  4069b1:	mov    eax,0x5
  4069b6:	mov    rdx,QWORD PTR [rip+0x877b]        # 40f138 <__bss_start@@Base+0x9a8>
  4069bd:	add    rdx,0x1
  4069c1:	mov    QWORD PTR [rip+0x8770],rdx        # 40f138 <__bss_start@@Base+0x9a8>
  4069c8:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  4069cd:	mov    rax,QWORD PTR [rip+0x875c]        # 40f130 <__bss_start@@Base+0x9a0>
  4069d4:	add    rax,0x1
  4069d8:	mov    QWORD PTR [rip+0x8751],rax        # 40f130 <__bss_start@@Base+0x9a0>
  4069df:	mov    rax,QWORD PTR [rbp-0x18]
  4069e3:	mov    rdx,QWORD PTR [rax+0x8]
  4069e7:	mov    rax,QWORD PTR [rip+0x660a]        # 40cff8 <stderr@GLIBC_2.2.5>
  4069ee:	mov    rax,QWORD PTR [rax]
  4069f1:	lea    rsi,[rip+0x3e38]        # 40a830 <_IO_stdin_used@@Base+0x830>
  4069f8:	mov    rdi,rax
  4069fb:	mov    eax,0x0
  406a00:	call   402180 <fprintf@plt>
  406a05:	mov    rax,QWORD PTR [rip+0x8734]        # 40f140 <__bss_start@@Base+0x9b0>
  406a0c:	add    rax,0x1
  406a10:	mov    QWORD PTR [rip+0x8729],rax        # 40f140 <__bss_start@@Base+0x9b0>
  406a17:	mov    edi,0x1
  406a1c:	call   402240 <exit@plt>
  406a21:	mov    rax,QWORD PTR [rbp-0x18]
  406a25:	mov    rax,QWORD PTR [rax+0x8]
  406a29:	movzx  eax,BYTE PTR [rax]
  406a2c:	movsx  eax,al
  406a2f:	cmp    eax,0x3c
  406a32:	je     406a5a <get_boolean_op_value@@Base+0x237>
  406a34:	cmp    eax,0x3e
  406a37:	je     406a73 <get_boolean_op_value@@Base+0x250>
  406a39:	cmp    eax,0x21
  406a3c:	jne    406a8c <get_boolean_op_value@@Base+0x269>
  406a3e:	mov    eax,0x8
  406a43:	mov    rdx,QWORD PTR [rip+0x8706]        # 40f150 <__bss_start@@Base+0x9c0>
  406a4a:	add    rdx,0x1
  406a4e:	mov    QWORD PTR [rip+0x86fb],rdx        # 40f150 <__bss_start@@Base+0x9c0>
  406a55:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406a5a:	mov    eax,0x6
  406a5f:	mov    rdx,QWORD PTR [rip+0x86f2]        # 40f158 <__bss_start@@Base+0x9c8>
  406a66:	add    rdx,0x1
  406a6a:	mov    QWORD PTR [rip+0x86e7],rdx        # 40f158 <__bss_start@@Base+0x9c8>
  406a71:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406a73:	mov    eax,0x7
  406a78:	mov    rdx,QWORD PTR [rip+0x86e1]        # 40f160 <__bss_start@@Base+0x9d0>
  406a7f:	add    rdx,0x1
  406a83:	mov    QWORD PTR [rip+0x86d6],rdx        # 40f160 <__bss_start@@Base+0x9d0>
  406a8a:	jmp    406ae0 <get_boolean_op_value@@Base+0x2bd>
  406a8c:	mov    rax,QWORD PTR [rip+0x86b5]        # 40f148 <__bss_start@@Base+0x9b8>
  406a93:	add    rax,0x1
  406a97:	mov    QWORD PTR [rip+0x86aa],rax        # 40f148 <__bss_start@@Base+0x9b8>
  406a9e:	mov    rax,QWORD PTR [rbp-0x18]
  406aa2:	mov    rdx,QWORD PTR [rax+0x8]
  406aa6:	mov    rax,QWORD PTR [rip+0x654b]        # 40cff8 <stderr@GLIBC_2.2.5>
  406aad:	mov    rax,QWORD PTR [rax]
  406ab0:	lea    rsi,[rip+0x3d79]        # 40a830 <_IO_stdin_used@@Base+0x830>
  406ab7:	mov    rdi,rax
  406aba:	mov    eax,0x0
  406abf:	call   402180 <fprintf@plt>
  406ac4:	mov    rax,QWORD PTR [rip+0x869d]        # 40f168 <__bss_start@@Base+0x9d8>
  406acb:	add    rax,0x1
  406acf:	mov    QWORD PTR [rip+0x8692],rax        # 40f168 <__bss_start@@Base+0x9d8>
  406ad6:	mov    edi,0x1
  406adb:	call   402240 <exit@plt>
  406ae0:	leave  
  406ae1:	ret    
  406ae2:	push   rbp
  406ae3:	mov    rbp,rsp
  406ae6:	lea    rdi,[rip+0x7873]        # 40e360 <__data_start@@Base+0x1220>
  406aed:	call   409cc0 <__gcov_sort_n_vals@@Base+0x1640>
  406af2:	pop    rbp
  406af3:	ret    

0000000000406af4 <init_grammar@@Base>:
  406af4:	push   rbp
  406af5:	mov    rbp,rsp
  406af8:	mov    QWORD PTR [rbp-0x8],rdi
  406afc:	mov    QWORD PTR [rbp-0x10],rsi
  406b00:	mov    rax,QWORD PTR [rip+0x8c11]        # 40f718 <__bss_start@@Base+0xf88>
  406b07:	add    rax,0x1
  406b0b:	mov    QWORD PTR [rip+0x8c06],rax        # 40f718 <__bss_start@@Base+0xf88>
  406b12:	mov    rax,QWORD PTR [rbp-0x8]
  406b16:	mov    rdx,QWORD PTR [rbp-0x10]
  406b1a:	mov    QWORD PTR [rax],rdx
  406b1d:	nop
  406b1e:	pop    rbp
  406b1f:	ret    

0000000000406b20 <destroy_grammar@@Base>:
  406b20:	push   rbp
  406b21:	mov    rbp,rsp
  406b24:	mov    QWORD PTR [rbp-0x8],rdi
  406b28:	mov    rax,QWORD PTR [rip+0x8be1]        # 40f710 <__bss_start@@Base+0xf80>
  406b2f:	add    rax,0x1
  406b33:	mov    QWORD PTR [rip+0x8bd6],rax        # 40f710 <__bss_start@@Base+0xf80>
  406b3a:	nop
  406b3b:	pop    rbp
  406b3c:	ret    

0000000000406b3d <build_ast@@Base>:
  406b3d:	push   rbp
  406b3e:	mov    rbp,rsp
  406b41:	sub    rsp,0x10
  406b45:	mov    QWORD PTR [rbp-0x8],rdi
  406b49:	mov    rax,QWORD PTR [rip+0x8bb0]        # 40f700 <__bss_start@@Base+0xf70>
  406b50:	add    rax,0x1
  406b54:	mov    QWORD PTR [rip+0x8ba5],rax        # 40f700 <__bss_start@@Base+0xf70>
  406b5b:	mov    rax,QWORD PTR [rbp-0x8]
  406b5f:	mov    rdi,rax
  406b62:	call   406b81 <read_function_ast_node@@Base>
  406b67:	mov    rdx,rax
  406b6a:	mov    rax,QWORD PTR [rip+0x8b97]        # 40f708 <__bss_start@@Base+0xf78>
  406b71:	add    rax,0x1
  406b75:	mov    QWORD PTR [rip+0x8b8c],rax        # 40f708 <__bss_start@@Base+0xf78>
  406b7c:	mov    rax,rdx
  406b7f:	leave  
  406b80:	ret    

0000000000406b81 <read_function_ast_node@@Base>:
  406b81:	push   rbp
  406b82:	mov    rbp,rsp
  406b85:	sub    rsp,0x30
  406b89:	mov    QWORD PTR [rbp-0x28],rdi
  406b8d:	mov    rax,QWORD PTR [rip+0x8aec]        # 40f680 <__bss_start@@Base+0xef0>
  406b94:	add    rax,0x1
  406b98:	mov    QWORD PTR [rip+0x8ae1],rax        # 40f680 <__bss_start@@Base+0xef0>
  406b9f:	mov    QWORD PTR [rbp-0x20],0x0
  406ba7:	mov    QWORD PTR [rbp-0x18],0x0
  406baf:	mov    QWORD PTR [rbp-0x10],0x0
  406bb7:	mov    QWORD PTR [rbp-0x8],0x0
  406bbf:	mov    rax,QWORD PTR [rbp-0x28]
  406bc3:	mov    rax,QWORD PTR [rax]
  406bc6:	mov    rdi,rax
  406bc9:	call   402376 <next@@Base>
  406bce:	mov    QWORD PTR [rbp-0x10],rax
  406bd2:	mov    rax,QWORD PTR [rbp-0x10]
  406bd6:	mov    eax,DWORD PTR [rax]
  406bd8:	test   eax,eax
  406bda:	je     406bf8 <read_function_ast_node@@Base+0x77>
  406bdc:	mov    eax,0x0
  406be1:	mov    rdx,QWORD PTR [rip+0x8aa8]        # 40f690 <__bss_start@@Base+0xf00>
  406be8:	add    rdx,0x1
  406bec:	mov    QWORD PTR [rip+0x8a9d],rdx        # 40f690 <__bss_start@@Base+0xf00>
  406bf3:	jmp    406dcf <read_function_ast_node@@Base+0x24e>
  406bf8:	mov    rax,QWORD PTR [rip+0x8a89]        # 40f688 <__bss_start@@Base+0xef8>
  406bff:	add    rax,0x1
  406c03:	mov    QWORD PTR [rip+0x8a7e],rax        # 40f688 <__bss_start@@Base+0xef8>
  406c0a:	mov    rax,QWORD PTR [rbp-0x10]
  406c0e:	mov    rdi,rax
  406c11:	call   405da7 <free_token_int_type@@Base>
  406c16:	mov    rax,QWORD PTR [rip+0x8a7b]        # 40f698 <__bss_start@@Base+0xf08>
  406c1d:	add    rax,0x1
  406c21:	mov    QWORD PTR [rip+0x8a70],rax        # 40f698 <__bss_start@@Base+0xf08>
  406c28:	mov    rax,QWORD PTR [rbp-0x28]
  406c2c:	mov    rax,QWORD PTR [rax]
  406c2f:	mov    rdi,rax
  406c32:	call   402376 <next@@Base>
  406c37:	mov    QWORD PTR [rbp-0x10],rax
  406c3b:	mov    rax,QWORD PTR [rbp-0x10]
  406c3f:	mov    eax,DWORD PTR [rax]
  406c41:	cmp    eax,0x2
  406c44:	je     406c62 <read_function_ast_node@@Base+0xe1>
  406c46:	mov    eax,0x0
  406c4b:	mov    rdx,QWORD PTR [rip+0x8a56]        # 40f6a8 <__bss_start@@Base+0xf18>
  406c52:	add    rdx,0x1
  406c56:	mov    QWORD PTR [rip+0x8a4b],rdx        # 40f6a8 <__bss_start@@Base+0xf18>
  406c5d:	jmp    406dcf <read_function_ast_node@@Base+0x24e>
  406c62:	mov    rax,QWORD PTR [rip+0x8a37]        # 40f6a0 <__bss_start@@Base+0xf10>
  406c69:	add    rax,0x1
  406c6d:	mov    QWORD PTR [rip+0x8a2c],rax        # 40f6a0 <__bss_start@@Base+0xf10>
  406c74:	mov    rax,QWORD PTR [rbp-0x10]
  406c78:	mov    QWORD PTR [rbp-0x8],rax
  406c7c:	mov    rax,QWORD PTR [rbp-0x28]
  406c80:	mov    rax,QWORD PTR [rax]
  406c83:	mov    rdi,rax
  406c86:	call   402376 <next@@Base>
  406c8b:	mov    QWORD PTR [rbp-0x10],rax
  406c8f:	mov    rax,QWORD PTR [rbp-0x10]
  406c93:	mov    eax,DWORD PTR [rax]
  406c95:	cmp    eax,0x3
  406c98:	je     406cb6 <read_function_ast_node@@Base+0x135>
  406c9a:	mov    eax,0x0
  406c9f:	mov    rdx,QWORD PTR [rip+0x8a12]        # 40f6b8 <__bss_start@@Base+0xf28>
  406ca6:	add    rdx,0x1
  406caa:	mov    QWORD PTR [rip+0x8a07],rdx        # 40f6b8 <__bss_start@@Base+0xf28>
  406cb1:	jmp    406dcf <read_function_ast_node@@Base+0x24e>
  406cb6:	mov    rax,QWORD PTR [rip+0x89f3]        # 40f6b0 <__bss_start@@Base+0xf20>
  406cbd:	add    rax,0x1
  406cc1:	mov    QWORD PTR [rip+0x89e8],rax        # 40f6b0 <__bss_start@@Base+0xf20>
  406cc8:	mov    rax,QWORD PTR [rbp-0x10]
  406ccc:	mov    rdi,rax
  406ccf:	call   405e2e <free_token_opar@@Base>
  406cd4:	mov    rax,QWORD PTR [rip+0x89e5]        # 40f6c0 <__bss_start@@Base+0xf30>
  406cdb:	add    rax,0x1
  406cdf:	mov    QWORD PTR [rip+0x89da],rax        # 40f6c0 <__bss_start@@Base+0xf30>
  406ce6:	mov    rax,QWORD PTR [rbp-0x28]
  406cea:	mov    rax,QWORD PTR [rax]
  406ced:	mov    rdi,rax
  406cf0:	call   402376 <next@@Base>
  406cf5:	mov    QWORD PTR [rbp-0x10],rax
  406cf9:	mov    rax,QWORD PTR [rbp-0x10]
  406cfd:	mov    eax,DWORD PTR [rax]
  406cff:	cmp    eax,0x4
  406d02:	je     406d20 <read_function_ast_node@@Base+0x19f>
  406d04:	mov    eax,0x0
  406d09:	mov    rdx,QWORD PTR [rip+0x89c0]        # 40f6d0 <__bss_start@@Base+0xf40>
  406d10:	add    rdx,0x1
  406d14:	mov    QWORD PTR [rip+0x89b5],rdx        # 40f6d0 <__bss_start@@Base+0xf40>
  406d1b:	jmp    406dcf <read_function_ast_node@@Base+0x24e>
  406d20:	mov    rax,QWORD PTR [rip+0x89a1]        # 40f6c8 <__bss_start@@Base+0xf38>
  406d27:	add    rax,0x1
  406d2b:	mov    QWORD PTR [rip+0x8996],rax        # 40f6c8 <__bss_start@@Base+0xf38>
  406d32:	mov    rax,QWORD PTR [rbp-0x10]
  406d36:	mov    rdi,rax
  406d39:	call   405e5b <free_token_cpar@@Base>
  406d3e:	mov    rax,QWORD PTR [rip+0x8993]        # 40f6d8 <__bss_start@@Base+0xf48>
  406d45:	add    rax,0x1
  406d49:	mov    QWORD PTR [rip+0x8988],rax        # 40f6d8 <__bss_start@@Base+0xf48>
  406d50:	mov    rax,QWORD PTR [rbp-0x28]
  406d54:	mov    rdi,rax
  406d57:	call   406dd1 <read_body@@Base>
  406d5c:	mov    QWORD PTR [rbp-0x18],rax
  406d60:	mov    rax,QWORD PTR [rip+0x8979]        # 40f6e0 <__bss_start@@Base+0xf50>
  406d67:	add    rax,0x1
  406d6b:	mov    QWORD PTR [rip+0x896e],rax        # 40f6e0 <__bss_start@@Base+0xf50>
  406d72:	mov    edi,0x20
  406d77:	call   4021c0 <malloc@plt>
  406d7c:	mov    QWORD PTR [rbp-0x20],rax
  406d80:	mov    rax,QWORD PTR [rbp-0x8]
  406d84:	mov    rcx,QWORD PTR [rax+0x8]
  406d88:	mov    rdx,QWORD PTR [rbp-0x18]
  406d8c:	mov    rax,QWORD PTR [rbp-0x20]
  406d90:	mov    rsi,rcx
  406d93:	mov    rdi,rax
  406d96:	call   40615b <init_node_function@@Base>
  406d9b:	mov    rax,QWORD PTR [rip+0x8946]        # 40f6e8 <__bss_start@@Base+0xf58>
  406da2:	add    rax,0x1
  406da6:	mov    QWORD PTR [rip+0x893b],rax        # 40f6e8 <__bss_start@@Base+0xf58>
  406dad:	mov    rax,QWORD PTR [rbp-0x8]
  406db1:	mov    rdi,rax
  406db4:	call   405e01 <free_token_function@@Base>
  406db9:	mov    rax,QWORD PTR [rbp-0x20]
  406dbd:	mov    rdx,QWORD PTR [rip+0x892c]        # 40f6f0 <__bss_start@@Base+0xf60>
  406dc4:	add    rdx,0x1
  406dc8:	mov    QWORD PTR [rip+0x8921],rdx        # 40f6f0 <__bss_start@@Base+0xf60>
  406dcf:	leave  
  406dd0:	ret    

0000000000406dd1 <read_body@@Base>:
  406dd1:	push   rbp
  406dd2:	mov    rbp,rsp
  406dd5:	sub    rsp,0x30
  406dd9:	mov    QWORD PTR [rbp-0x28],rdi
  406ddd:	mov    rax,QWORD PTR [rip+0x881c]        # 40f600 <__bss_start@@Base+0xe70>
  406de4:	add    rax,0x1
  406de8:	mov    QWORD PTR [rip+0x8811],rax        # 40f600 <__bss_start@@Base+0xe70>
  406def:	mov    QWORD PTR [rbp-0x20],0x0
  406df7:	mov    QWORD PTR [rbp-0x18],0x0
  406dff:	mov    QWORD PTR [rbp-0x10],0x0
  406e07:	mov    QWORD PTR [rbp-0x8],0x0
  406e0f:	mov    rax,QWORD PTR [rbp-0x28]
  406e13:	mov    rax,QWORD PTR [rax]
  406e16:	mov    rdi,rax
  406e19:	call   402376 <next@@Base>
  406e1e:	mov    QWORD PTR [rbp-0x8],rax
  406e22:	mov    rax,QWORD PTR [rbp-0x8]
  406e26:	mov    eax,DWORD PTR [rax]
  406e28:	cmp    eax,0x5
  406e2b:	je     406e49 <read_body@@Base+0x78>
  406e2d:	mov    eax,0x0
  406e32:	mov    rdx,QWORD PTR [rip+0x87d7]        # 40f610 <__bss_start@@Base+0xe80>
  406e39:	add    rdx,0x1
  406e3d:	mov    QWORD PTR [rip+0x87cc],rdx        # 40f610 <__bss_start@@Base+0xe80>
  406e44:	jmp    40703a <read_body@@Base+0x269>
  406e49:	mov    rax,QWORD PTR [rip+0x87b8]        # 40f608 <__bss_start@@Base+0xe78>
  406e50:	add    rax,0x1
  406e54:	mov    QWORD PTR [rip+0x87ad],rax        # 40f608 <__bss_start@@Base+0xe78>
  406e5b:	mov    rax,QWORD PTR [rbp-0x8]
  406e5f:	mov    rdi,rax
  406e62:	call   405e88 <free_token_obra@@Base>
  406e67:	mov    rax,QWORD PTR [rip+0x87aa]        # 40f618 <__bss_start@@Base+0xe88>
  406e6e:	add    rax,0x1
  406e72:	mov    QWORD PTR [rip+0x879f],rax        # 40f618 <__bss_start@@Base+0xe88>
  406e79:	mov    rax,QWORD PTR [rbp-0x28]
  406e7d:	mov    rax,QWORD PTR [rax]
  406e80:	mov    rdi,rax
  406e83:	call   402376 <next@@Base>
  406e88:	mov    QWORD PTR [rbp-0x8],rax
  406e8c:	nop
  406e8d:	mov    rax,QWORD PTR [rip+0x878c]        # 40f620 <__bss_start@@Base+0xe90>
  406e94:	add    rax,0x1
  406e98:	mov    QWORD PTR [rip+0x8781],rax        # 40f620 <__bss_start@@Base+0xe90>
  406e9f:	jmp    406ff7 <read_body@@Base+0x226>
  406ea4:	mov    rax,QWORD PTR [rip+0x87bd]        # 40f668 <__bss_start@@Base+0xed8>
  406eab:	add    rax,0x1
  406eaf:	mov    QWORD PTR [rip+0x87b2],rax        # 40f668 <__bss_start@@Base+0xed8>
  406eb6:	mov    rax,QWORD PTR [rbp-0x8]
  406eba:	mov    eax,DWORD PTR [rax]
  406ebc:	cmp    eax,0x7
  406ebf:	je     406ecb <read_body@@Base+0xfa>
  406ec1:	cmp    eax,0xa
  406ec4:	je     406f20 <read_body@@Base+0x14f>
  406ec6:	jmp    406f62 <read_body@@Base+0x191>
  406ecb:	mov    rax,QWORD PTR [rip+0x8756]        # 40f628 <__bss_start@@Base+0xe98>
  406ed2:	add    rax,0x1
  406ed6:	mov    QWORD PTR [rip+0x874b],rax        # 40f628 <__bss_start@@Base+0xe98>
  406edd:	mov    rax,QWORD PTR [rbp-0x8]
  406ee1:	mov    rdi,rax
  406ee4:	call   405ee2 <free_token_return@@Base>
  406ee9:	mov    rax,QWORD PTR [rip+0x8748]        # 40f638 <__bss_start@@Base+0xea8>
  406ef0:	add    rax,0x1
  406ef4:	mov    QWORD PTR [rip+0x873d],rax        # 40f638 <__bss_start@@Base+0xea8>
  406efb:	mov    rax,QWORD PTR [rbp-0x28]
  406eff:	mov    rdi,rax
  406f02:	call   40703c <read_return_expression@@Base>
  406f07:	mov    QWORD PTR [rbp-0x18],rax
  406f0b:	nop
  406f0c:	mov    rax,QWORD PTR [rip+0x873d]        # 40f650 <__bss_start@@Base+0xec0>
  406f13:	add    rax,0x1
  406f17:	mov    QWORD PTR [rip+0x8732],rax        # 40f650 <__bss_start@@Base+0xec0>
  406f1e:	jmp    406f93 <read_body@@Base+0x1c2>
  406f20:	mov    rax,QWORD PTR [rip+0x8709]        # 40f630 <__bss_start@@Base+0xea0>
  406f27:	add    rax,0x1
  406f2b:	mov    QWORD PTR [rip+0x86fe],rax        # 40f630 <__bss_start@@Base+0xea0>
  406f32:	mov    rax,QWORD PTR [rbp-0x8]
  406f36:	mov    rdi,rax
  406f39:	call   405f69 <free_token_if@@Base>
  406f3e:	mov    rax,QWORD PTR [rip+0x86fb]        # 40f640 <__bss_start@@Base+0xeb0>
  406f45:	add    rax,0x1
  406f49:	mov    QWORD PTR [rip+0x86f0],rax        # 40f640 <__bss_start@@Base+0xeb0>
  406f50:	mov    rax,QWORD PTR [rbp-0x28]
  406f54:	mov    rdi,rax
  406f57:	call   4071c1 <read_if_statement@@Base>
  406f5c:	mov    QWORD PTR [rbp-0x18],rax
  406f60:	jmp    406f93 <read_body@@Base+0x1c2>
  406f62:	mov    rax,QWORD PTR [rbp-0x28]
  406f66:	mov    rax,QWORD PTR [rax]
  406f69:	mov    rdx,QWORD PTR [rbp-0x8]
  406f6d:	mov    rsi,rdx
  406f70:	mov    rdi,rax
  406f73:	call   4025e6 <push_back@@Base>
  406f78:	mov    rax,QWORD PTR [rbp-0x20]
  406f7c:	mov    rdx,QWORD PTR [rip+0x86c5]        # 40f648 <__bss_start@@Base+0xeb8>
  406f83:	add    rdx,0x1
  406f87:	mov    QWORD PTR [rip+0x86ba],rdx        # 40f648 <__bss_start@@Base+0xeb8>
  406f8e:	jmp    40703a <read_body@@Base+0x269>
  406f93:	cmp    QWORD PTR [rbp-0x20],0x0
  406f98:	je     406fc2 <read_body@@Base+0x1f1>
  406f9a:	mov    rax,QWORD PTR [rbp-0x10]
  406f9e:	mov    rdx,QWORD PTR [rbp-0x18]
  406fa2:	mov    QWORD PTR [rax+0x8],rdx
  406fa6:	mov    rax,QWORD PTR [rbp-0x18]
  406faa:	mov    QWORD PTR [rbp-0x10],rax
  406fae:	mov    rax,QWORD PTR [rip+0x86a3]        # 40f658 <__bss_start@@Base+0xec8>
  406fb5:	add    rax,0x1
  406fb9:	mov    QWORD PTR [rip+0x8698],rax        # 40f658 <__bss_start@@Base+0xec8>
  406fc0:	jmp    406fe4 <read_body@@Base+0x213>
  406fc2:	mov    rax,QWORD PTR [rbp-0x18]
  406fc6:	mov    QWORD PTR [rbp-0x20],rax
  406fca:	mov    rax,QWORD PTR [rbp-0x18]
  406fce:	mov    QWORD PTR [rbp-0x10],rax
  406fd2:	mov    rax,QWORD PTR [rip+0x8687]        # 40f660 <__bss_start@@Base+0xed0>
  406fd9:	add    rax,0x1
  406fdd:	mov    QWORD PTR [rip+0x867c],rax        # 40f660 <__bss_start@@Base+0xed0>
  406fe4:	mov    rax,QWORD PTR [rbp-0x28]
  406fe8:	mov    rax,QWORD PTR [rax]
  406feb:	mov    rdi,rax
  406fee:	call   402376 <next@@Base>
  406ff3:	mov    QWORD PTR [rbp-0x8],rax
  406ff7:	mov    rax,QWORD PTR [rbp-0x8]
  406ffb:	mov    eax,DWORD PTR [rax]
  406ffd:	cmp    eax,0x6
  407000:	jne    406ea4 <read_body@@Base+0xd3>
  407006:	mov    rax,QWORD PTR [rip+0x8663]        # 40f670 <__bss_start@@Base+0xee0>
  40700d:	add    rax,0x1
  407011:	mov    QWORD PTR [rip+0x8658],rax        # 40f670 <__bss_start@@Base+0xee0>
  407018:	mov    rax,QWORD PTR [rbp-0x8]
  40701c:	mov    rdi,rax
  40701f:	call   405eb5 <free_token_cbra@@Base>
  407024:	mov    rax,QWORD PTR [rbp-0x20]
  407028:	mov    rdx,QWORD PTR [rip+0x8649]        # 40f678 <__bss_start@@Base+0xee8>
  40702f:	add    rdx,0x1
  407033:	mov    QWORD PTR [rip+0x863e],rdx        # 40f678 <__bss_start@@Base+0xee8>
  40703a:	leave  
  40703b:	ret    

000000000040703c <read_return_expression@@Base>:
  40703c:	push   rbp
  40703d:	mov    rbp,rsp
  407040:	sub    rsp,0x30
  407044:	mov    QWORD PTR [rbp-0x28],rdi
  407048:	mov    rax,QWORD PTR [rip+0x8551]        # 40f5a0 <__bss_start@@Base+0xe10>
  40704f:	add    rax,0x1
  407053:	mov    QWORD PTR [rip+0x8546],rax        # 40f5a0 <__bss_start@@Base+0xe10>
  40705a:	mov    QWORD PTR [rbp-0x20],0x0
  407062:	mov    QWORD PTR [rbp-0x18],0x0
  40706a:	mov    QWORD PTR [rbp-0x10],0x0
  407072:	mov    QWORD PTR [rbp-0x8],0x0
  40707a:	mov    rax,QWORD PTR [rbp-0x28]
  40707e:	mov    rax,QWORD PTR [rax]
  407081:	mov    rdi,rax
  407084:	call   402376 <next@@Base>
  407089:	mov    QWORD PTR [rbp-0x10],rax
  40708d:	mov    rax,QWORD PTR [rbp-0x10]
  407091:	mov    eax,DWORD PTR [rax]
  407093:	cmp    eax,0x1
  407096:	je     4070b4 <read_return_expression@@Base+0x78>
  407098:	mov    eax,0x0
  40709d:	mov    rdx,QWORD PTR [rip+0x850c]        # 40f5b0 <__bss_start@@Base+0xe20>
  4070a4:	add    rdx,0x1
  4070a8:	mov    QWORD PTR [rip+0x8501],rdx        # 40f5b0 <__bss_start@@Base+0xe20>
  4070af:	jmp    4071bf <read_return_expression@@Base+0x183>
  4070b4:	mov    rax,QWORD PTR [rip+0x84ed]        # 40f5a8 <__bss_start@@Base+0xe18>
  4070bb:	add    rax,0x1
  4070bf:	mov    QWORD PTR [rip+0x84e2],rax        # 40f5a8 <__bss_start@@Base+0xe18>
  4070c6:	mov    rax,QWORD PTR [rbp-0x10]
  4070ca:	mov    QWORD PTR [rbp-0x8],rax
  4070ce:	mov    edi,0x18
  4070d3:	call   4021c0 <malloc@plt>
  4070d8:	mov    QWORD PTR [rbp-0x18],rax
  4070dc:	mov    rax,QWORD PTR [rbp-0x8]
  4070e0:	mov    edx,DWORD PTR [rax+0x4]
  4070e3:	mov    rax,QWORD PTR [rbp-0x18]
  4070e7:	mov    esi,edx
  4070e9:	mov    rdi,rax
  4070ec:	call   40610a <init_node_int@@Base>
  4070f1:	mov    rax,QWORD PTR [rip+0x84c0]        # 40f5b8 <__bss_start@@Base+0xe28>
  4070f8:	add    rax,0x1
  4070fc:	mov    QWORD PTR [rip+0x84b5],rax        # 40f5b8 <__bss_start@@Base+0xe28>
  407103:	mov    rax,QWORD PTR [rbp-0x8]
  407107:	mov    rdi,rax
  40710a:	call   405dd4 <free_token_int_value@@Base>
  40710f:	mov    rax,QWORD PTR [rip+0x84aa]        # 40f5c0 <__bss_start@@Base+0xe30>
  407116:	add    rax,0x1
  40711a:	mov    QWORD PTR [rip+0x849f],rax        # 40f5c0 <__bss_start@@Base+0xe30>
  407121:	mov    edi,0x18
  407126:	call   4021c0 <malloc@plt>
  40712b:	mov    QWORD PTR [rbp-0x20],rax
  40712f:	mov    rdx,QWORD PTR [rbp-0x18]
  407133:	mov    rax,QWORD PTR [rbp-0x20]
  407137:	mov    rsi,rdx
  40713a:	mov    rdi,rax
  40713d:	call   4061bf <init_node_return@@Base>
  407142:	mov    rax,QWORD PTR [rip+0x847f]        # 40f5c8 <__bss_start@@Base+0xe38>
  407149:	add    rax,0x1
  40714d:	mov    QWORD PTR [rip+0x8474],rax        # 40f5c8 <__bss_start@@Base+0xe38>
  407154:	mov    rax,QWORD PTR [rbp-0x28]
  407158:	mov    rax,QWORD PTR [rax]
  40715b:	mov    rdi,rax
  40715e:	call   402376 <next@@Base>
  407163:	mov    QWORD PTR [rbp-0x10],rax
  407167:	mov    rax,QWORD PTR [rbp-0x10]
  40716b:	mov    eax,DWORD PTR [rax]
  40716d:	cmp    eax,0x8
  407170:	je     40718b <read_return_expression@@Base+0x14f>
  407172:	mov    eax,0x0
  407177:	mov    rdx,QWORD PTR [rip+0x845a]        # 40f5d8 <__bss_start@@Base+0xe48>
  40717e:	add    rdx,0x1
  407182:	mov    QWORD PTR [rip+0x844f],rdx        # 40f5d8 <__bss_start@@Base+0xe48>
  407189:	jmp    4071bf <read_return_expression@@Base+0x183>
  40718b:	mov    rax,QWORD PTR [rip+0x843e]        # 40f5d0 <__bss_start@@Base+0xe40>
  407192:	add    rax,0x1
  407196:	mov    QWORD PTR [rip+0x8433],rax        # 40f5d0 <__bss_start@@Base+0xe40>
  40719d:	mov    rax,QWORD PTR [rbp-0x10]
  4071a1:	mov    rdi,rax
  4071a4:	call   405f0f <free_token_semicolon@@Base>
  4071a9:	mov    rax,QWORD PTR [rbp-0x20]
  4071ad:	mov    rdx,QWORD PTR [rip+0x842c]        # 40f5e0 <__bss_start@@Base+0xe50>
  4071b4:	add    rdx,0x1
  4071b8:	mov    QWORD PTR [rip+0x8421],rdx        # 40f5e0 <__bss_start@@Base+0xe50>
  4071bf:	leave  
  4071c0:	ret    

00000000004071c1 <read_if_statement@@Base>:
  4071c1:	push   rbp
  4071c2:	mov    rbp,rsp
  4071c5:	sub    rsp,0x40
  4071c9:	mov    QWORD PTR [rbp-0x38],rdi
  4071cd:	mov    rax,QWORD PTR [rip+0x836c]        # 40f540 <__bss_start@@Base+0xdb0>
  4071d4:	add    rax,0x1
  4071d8:	mov    QWORD PTR [rip+0x8361],rax        # 40f540 <__bss_start@@Base+0xdb0>
  4071df:	mov    QWORD PTR [rbp-0x20],0x0
  4071e7:	mov    QWORD PTR [rbp-0x18],0x0
  4071ef:	mov    QWORD PTR [rbp-0x10],0x0
  4071f7:	mov    QWORD PTR [rbp-0x28],0x0
  4071ff:	mov    QWORD PTR [rbp-0x8],0x0
  407207:	mov    rax,QWORD PTR [rbp-0x38]
  40720b:	mov    rax,QWORD PTR [rax]
  40720e:	mov    rdi,rax
  407211:	call   402376 <next@@Base>
  407216:	mov    QWORD PTR [rbp-0x8],rax
  40721a:	mov    rax,QWORD PTR [rbp-0x8]
  40721e:	mov    eax,DWORD PTR [rax]
  407220:	cmp    eax,0x3
  407223:	je     407241 <read_if_statement@@Base+0x80>
  407225:	mov    eax,0x0
  40722a:	mov    rdx,QWORD PTR [rip+0x831f]        # 40f550 <__bss_start@@Base+0xdc0>
  407231:	add    rdx,0x1
  407235:	mov    QWORD PTR [rip+0x8314],rdx        # 40f550 <__bss_start@@Base+0xdc0>
  40723c:	jmp    40739d <read_if_statement@@Base+0x1dc>
  407241:	mov    rax,QWORD PTR [rip+0x8300]        # 40f548 <__bss_start@@Base+0xdb8>
  407248:	add    rax,0x1
  40724c:	mov    QWORD PTR [rip+0x82f5],rax        # 40f548 <__bss_start@@Base+0xdb8>
  407253:	mov    rax,QWORD PTR [rbp-0x8]
  407257:	mov    rdi,rax
  40725a:	call   405e2e <free_token_opar@@Base>
  40725f:	mov    rax,QWORD PTR [rip+0x82f2]        # 40f558 <__bss_start@@Base+0xdc8>
  407266:	add    rax,0x1
  40726a:	mov    QWORD PTR [rip+0x82e7],rax        # 40f558 <__bss_start@@Base+0xdc8>
  407271:	mov    rax,QWORD PTR [rbp-0x38]
  407275:	mov    rdi,rax
  407278:	call   40739f <read_boolean_expression@@Base>
  40727d:	mov    QWORD PTR [rbp-0x18],rax
  407281:	mov    rax,QWORD PTR [rip+0x82d8]        # 40f560 <__bss_start@@Base+0xdd0>
  407288:	add    rax,0x1
  40728c:	mov    QWORD PTR [rip+0x82cd],rax        # 40f560 <__bss_start@@Base+0xdd0>
  407293:	mov    rax,QWORD PTR [rbp-0x38]
  407297:	mov    rdi,rax
  40729a:	call   406dd1 <read_body@@Base>
  40729f:	mov    QWORD PTR [rbp-0x10],rax
  4072a3:	mov    rax,QWORD PTR [rip+0x82be]        # 40f568 <__bss_start@@Base+0xdd8>
  4072aa:	add    rax,0x1
  4072ae:	mov    QWORD PTR [rip+0x82b3],rax        # 40f568 <__bss_start@@Base+0xdd8>
  4072b5:	mov    rax,QWORD PTR [rbp-0x38]
  4072b9:	mov    rax,QWORD PTR [rax]
  4072bc:	mov    rdi,rax
  4072bf:	call   402376 <next@@Base>
  4072c4:	mov    QWORD PTR [rbp-0x8],rax
  4072c8:	mov    rax,QWORD PTR [rbp-0x8]
  4072cc:	mov    eax,DWORD PTR [rax]
  4072ce:	cmp    eax,0xb
  4072d1:	jne    407327 <read_if_statement@@Base+0x166>
  4072d3:	mov    rax,QWORD PTR [rip+0x8296]        # 40f570 <__bss_start@@Base+0xde0>
  4072da:	add    rax,0x1
  4072de:	mov    QWORD PTR [rip+0x828b],rax        # 40f570 <__bss_start@@Base+0xde0>
  4072e5:	mov    rax,QWORD PTR [rbp-0x8]
  4072e9:	mov    rdi,rax
  4072ec:	call   405f96 <free_token_else@@Base>
  4072f1:	mov    rax,QWORD PTR [rip+0x8288]        # 40f580 <__bss_start@@Base+0xdf0>
  4072f8:	add    rax,0x1
  4072fc:	mov    QWORD PTR [rip+0x827d],rax        # 40f580 <__bss_start@@Base+0xdf0>
  407303:	mov    rax,QWORD PTR [rbp-0x38]
  407307:	mov    rdi,rax
  40730a:	call   406dd1 <read_body@@Base>
  40730f:	mov    QWORD PTR [rbp-0x28],rax
  407313:	mov    rax,QWORD PTR [rip+0x826e]        # 40f588 <__bss_start@@Base+0xdf8>
  40731a:	add    rax,0x1
  40731e:	mov    QWORD PTR [rip+0x8263],rax        # 40f588 <__bss_start@@Base+0xdf8>
  407325:	jmp    407361 <read_if_statement@@Base+0x1a0>
  407327:	mov    rax,QWORD PTR [rip+0x824a]        # 40f578 <__bss_start@@Base+0xde8>
  40732e:	add    rax,0x1
  407332:	mov    QWORD PTR [rip+0x823f],rax        # 40f578 <__bss_start@@Base+0xde8>
  407339:	mov    rax,QWORD PTR [rbp-0x38]
  40733d:	mov    rax,QWORD PTR [rax]
  407340:	mov    rdx,QWORD PTR [rbp-0x8]
  407344:	mov    rsi,rdx
  407347:	mov    rdi,rax
  40734a:	call   4025e6 <push_back@@Base>
  40734f:	mov    rax,QWORD PTR [rip+0x823a]        # 40f590 <__bss_start@@Base+0xe00>
  407356:	add    rax,0x1
  40735a:	mov    QWORD PTR [rip+0x822f],rax        # 40f590 <__bss_start@@Base+0xe00>
  407361:	mov    edi,0x28
  407366:	call   4021c0 <malloc@plt>
  40736b:	mov    QWORD PTR [rbp-0x20],rax
  40736f:	mov    rcx,QWORD PTR [rbp-0x28]
  407373:	mov    rdx,QWORD PTR [rbp-0x10]
  407377:	mov    rsi,QWORD PTR [rbp-0x18]
  40737b:	mov    rax,QWORD PTR [rbp-0x20]
  40737f:	mov    rdi,rax
  407382:	call   406213 <init_node_if@@Base>
  407387:	mov    rax,QWORD PTR [rbp-0x20]
  40738b:	mov    rdx,QWORD PTR [rip+0x8206]        # 40f598 <__bss_start@@Base+0xe08>
  407392:	add    rdx,0x1
  407396:	mov    QWORD PTR [rip+0x81fb],rdx        # 40f598 <__bss_start@@Base+0xe08>
  40739d:	leave  
  40739e:	ret    

000000000040739f <read_boolean_expression@@Base>:
  40739f:	push   rbp
  4073a0:	mov    rbp,rsp
  4073a3:	sub    rsp,0x30
  4073a7:	mov    QWORD PTR [rbp-0x28],rdi
  4073ab:	mov    rax,QWORD PTR fs:0x28
  4073b4:	mov    QWORD PTR [rbp-0x8],rax
  4073b8:	xor    eax,eax
  4073ba:	mov    rax,QWORD PTR [rip+0x80ff]        # 40f4c0 <__bss_start@@Base+0xd30>
  4073c1:	add    rax,0x1
  4073c5:	mov    QWORD PTR [rip+0x80f4],rax        # 40f4c0 <__bss_start@@Base+0xd30>
  4073cc:	mov    QWORD PTR [rbp-0x18],0x0
  4073d4:	mov    QWORD PTR [rbp-0x10],0x0
  4073dc:	mov    DWORD PTR [rbp-0x20],0x0
  4073e3:	mov    rax,QWORD PTR [rbp-0x28]
  4073e7:	mov    rax,QWORD PTR [rax]
  4073ea:	mov    rdi,rax
  4073ed:	call   402376 <next@@Base>
  4073f2:	mov    QWORD PTR [rbp-0x10],rax
  4073f6:	nop
  4073f7:	mov    rax,QWORD PTR [rip+0x80ca]        # 40f4c8 <__bss_start@@Base+0xd38>
  4073fe:	add    rax,0x1
  407402:	mov    QWORD PTR [rip+0x80bf],rax        # 40f4c8 <__bss_start@@Base+0xd38>
  407409:	jmp    40757d <read_boolean_expression@@Base+0x1de>
  40740e:	mov    rax,QWORD PTR [rip+0x80fb]        # 40f510 <__bss_start@@Base+0xd80>
  407415:	add    rax,0x1
  407419:	mov    QWORD PTR [rip+0x80f0],rax        # 40f510 <__bss_start@@Base+0xd80>
  407420:	mov    rax,QWORD PTR [rbp-0x10]
  407424:	mov    eax,DWORD PTR [rax]
  407426:	cmp    eax,0x3
  407429:	je     4074e9 <read_boolean_expression@@Base+0x14a>
  40742f:	cmp    eax,0xc
  407432:	je     4074aa <read_boolean_expression@@Base+0x10b>
  407434:	cmp    eax,0x1
  407437:	jne    40752b <read_boolean_expression@@Base+0x18c>
  40743d:	mov    rax,QWORD PTR [rip+0x808c]        # 40f4d0 <__bss_start@@Base+0xd40>
  407444:	add    rax,0x1
  407448:	mov    QWORD PTR [rip+0x8081],rax        # 40f4d0 <__bss_start@@Base+0xd40>
  40744f:	mov    rax,QWORD PTR [rbp-0x28]
  407453:	mov    rax,QWORD PTR [rax]
  407456:	mov    rdx,QWORD PTR [rbp-0x10]
  40745a:	mov    rsi,rdx
  40745d:	mov    rdi,rax
  407460:	call   4025e6 <push_back@@Base>
  407465:	mov    rax,QWORD PTR [rip+0x807c]        # 40f4e8 <__bss_start@@Base+0xd58>
  40746c:	add    rax,0x1
  407470:	mov    QWORD PTR [rip+0x8071],rax        # 40f4e8 <__bss_start@@Base+0xd58>
  407477:	mov    ecx,DWORD PTR [rbp-0x1c]
  40747a:	lea    rdx,[rbp-0x20]
  40747e:	mov    rsi,QWORD PTR [rbp-0x18]
  407482:	mov    rax,QWORD PTR [rbp-0x28]
  407486:	mov    rdi,rax
  407489:	call   4075d6 <read_single_boolean_expression@@Base>
  40748e:	mov    QWORD PTR [rbp-0x18],rax
  407492:	nop
  407493:	mov    rax,QWORD PTR [rip+0x806e]        # 40f508 <__bss_start@@Base+0xd78>
  40749a:	add    rax,0x1
  40749e:	mov    QWORD PTR [rip+0x8063],rax        # 40f508 <__bss_start@@Base+0xd78>
  4074a5:	jmp    40756a <read_boolean_expression@@Base+0x1cb>
  4074aa:	mov    rax,QWORD PTR [rip+0x802f]        # 40f4e0 <__bss_start@@Base+0xd50>
  4074b1:	add    rax,0x1
  4074b5:	mov    QWORD PTR [rip+0x8024],rax        # 40f4e0 <__bss_start@@Base+0xd50>
  4074bc:	mov    rax,QWORD PTR [rbp-0x10]
  4074c0:	mov    rdi,rax
  4074c3:	call   406823 <get_boolean_op_value@@Base>
  4074c8:	mov    DWORD PTR [rbp-0x1c],eax
  4074cb:	mov    DWORD PTR [rbp-0x20],0x1
  4074d2:	mov    rax,QWORD PTR [rip+0x8017]        # 40f4f0 <__bss_start@@Base+0xd60>
  4074d9:	add    rax,0x1
  4074dd:	mov    QWORD PTR [rip+0x800c],rax        # 40f4f0 <__bss_start@@Base+0xd60>
  4074e4:	jmp    40756a <read_boolean_expression@@Base+0x1cb>
  4074e9:	mov    rax,QWORD PTR [rip+0x7fe8]        # 40f4d8 <__bss_start@@Base+0xd48>
  4074f0:	add    rax,0x1
  4074f4:	mov    QWORD PTR [rip+0x7fdd],rax        # 40f4d8 <__bss_start@@Base+0xd48>
  4074fb:	mov    ecx,DWORD PTR [rbp-0x1c]
  4074fe:	lea    rdx,[rbp-0x20]
  407502:	mov    rsi,QWORD PTR [rbp-0x18]
  407506:	mov    rax,QWORD PTR [rbp-0x28]
  40750a:	mov    rdi,rax
  40750d:	call   4075d6 <read_single_boolean_expression@@Base>
  407512:	mov    QWORD PTR [rbp-0x18],rax
  407516:	nop
  407517:	mov    rax,QWORD PTR [rip+0x7fda]        # 40f4f8 <__bss_start@@Base+0xd68>
  40751e:	add    rax,0x1
  407522:	mov    QWORD PTR [rip+0x7fcf],rax        # 40f4f8 <__bss_start@@Base+0xd68>
  407529:	jmp    40756a <read_boolean_expression@@Base+0x1cb>
  40752b:	mov    rax,QWORD PTR [rip+0x5ac6]        # 40cff8 <stderr@GLIBC_2.2.5>
  407532:	mov    rax,QWORD PTR [rax]
  407535:	mov    rcx,rax
  407538:	mov    edx,0x21
  40753d:	mov    esi,0x1
  407542:	lea    rdi,[rip+0x3397]        # 40a8e0 <_IO_stdin_used@@Base+0x8e0>
  407549:	call   402250 <fwrite@plt>
  40754e:	mov    rax,QWORD PTR [rip+0x7fab]        # 40f500 <__bss_start@@Base+0xd70>
  407555:	add    rax,0x1
  407559:	mov    QWORD PTR [rip+0x7fa0],rax        # 40f500 <__bss_start@@Base+0xd70>
  407560:	mov    edi,0x1
  407565:	call   402240 <exit@plt>
  40756a:	mov    rax,QWORD PTR [rbp-0x28]
  40756e:	mov    rax,QWORD PTR [rax]
  407571:	mov    rdi,rax
  407574:	call   402376 <next@@Base>
  407579:	mov    QWORD PTR [rbp-0x10],rax
  40757d:	mov    rax,QWORD PTR [rbp-0x10]
  407581:	mov    eax,DWORD PTR [rax]
  407583:	cmp    eax,0x4
  407586:	jne    40740e <read_boolean_expression@@Base+0x6f>
  40758c:	mov    rax,QWORD PTR [rip+0x7f85]        # 40f518 <__bss_start@@Base+0xd88>
  407593:	add    rax,0x1
  407597:	mov    QWORD PTR [rip+0x7f7a],rax        # 40f518 <__bss_start@@Base+0xd88>
  40759e:	mov    rax,QWORD PTR [rbp-0x10]
  4075a2:	mov    rdi,rax
  4075a5:	call   405e5b <free_token_cpar@@Base>
  4075aa:	mov    rax,QWORD PTR [rbp-0x18]
  4075ae:	mov    rdx,QWORD PTR [rip+0x7f6b]        # 40f520 <__bss_start@@Base+0xd90>
  4075b5:	add    rdx,0x1
  4075b9:	mov    QWORD PTR [rip+0x7f60],rdx        # 40f520 <__bss_start@@Base+0xd90>
  4075c0:	mov    rcx,QWORD PTR [rbp-0x8]
  4075c4:	xor    rcx,QWORD PTR fs:0x28
  4075cd:	je     4075d4 <read_boolean_expression@@Base+0x235>
  4075cf:	call   402110 <__stack_chk_fail@plt>
  4075d4:	leave  
  4075d5:	ret    

00000000004075d6 <read_single_boolean_expression@@Base>:
  4075d6:	push   rbp
  4075d7:	mov    rbp,rsp
  4075da:	sub    rsp,0x50
  4075de:	mov    QWORD PTR [rbp-0x38],rdi
  4075e2:	mov    QWORD PTR [rbp-0x40],rsi
  4075e6:	mov    QWORD PTR [rbp-0x48],rdx
  4075ea:	mov    DWORD PTR [rbp-0x4c],ecx
  4075ed:	mov    QWORD PTR [rbp-0x20],0x0
  4075f5:	mov    QWORD PTR [rbp-0x28],0x0
  4075fd:	mov    QWORD PTR [rbp-0x18],0x0
  407605:	mov    QWORD PTR [rbp-0x10],0x0
  40760d:	mov    QWORD PTR [rbp-0x8],0x0
  407615:	cmp    QWORD PTR [rbp-0x40],0x0
  40761a:	jne    407643 <read_single_boolean_expression@@Base+0x6d>
  40761c:	mov    rax,QWORD PTR [rip+0x7e5d]        # 40f480 <__bss_start@@Base+0xcf0>
  407623:	add    rax,0x1
  407627:	mov    QWORD PTR [rip+0x7e52],rax        # 40f480 <__bss_start@@Base+0xcf0>
  40762e:	mov    rax,QWORD PTR [rbp-0x38]
  407632:	mov    rdi,rax
  407635:	call   407743 <read_boolean_binary_expression@@Base>
  40763a:	mov    QWORD PTR [rbp-0x28],rax
  40763e:	jmp    40772b <read_single_boolean_expression@@Base+0x155>
  407643:	mov    rax,QWORD PTR [rbp-0x48]
  407647:	mov    eax,DWORD PTR [rax]
  407649:	test   eax,eax
  40764b:	je     4076d8 <read_single_boolean_expression@@Base+0x102>
  407651:	mov    rax,QWORD PTR [rip+0x7e30]        # 40f488 <__bss_start@@Base+0xcf8>
  407658:	add    rax,0x1
  40765c:	mov    QWORD PTR [rip+0x7e25],rax        # 40f488 <__bss_start@@Base+0xcf8>
  407663:	mov    rax,QWORD PTR [rbp-0x38]
  407667:	mov    rdi,rax
  40766a:	call   407743 <read_boolean_binary_expression@@Base>
  40766f:	mov    QWORD PTR [rbp-0x18],rax
  407673:	mov    rax,QWORD PTR [rip+0x7e1e]        # 40f498 <__bss_start@@Base+0xd08>
  40767a:	add    rax,0x1
  40767e:	mov    QWORD PTR [rip+0x7e13],rax        # 40f498 <__bss_start@@Base+0xd08>
  407685:	mov    rax,QWORD PTR [rbp-0x28]
  407689:	mov    QWORD PTR [rbp-0x10],rax
  40768d:	mov    rax,QWORD PTR [rbp-0x18]
  407691:	mov    QWORD PTR [rbp-0x8],rax
  407695:	mov    edi,0x28
  40769a:	call   4021c0 <malloc@plt>
  40769f:	mov    QWORD PTR [rbp-0x28],rax
  4076a3:	mov    rcx,QWORD PTR [rbp-0x8]
  4076a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4076ab:	mov    esi,DWORD PTR [rbp-0x4c]
  4076ae:	mov    rax,QWORD PTR [rbp-0x28]
  4076b2:	mov    rdi,rax
  4076b5:	call   406287 <init_node_boolean_operator@@Base>
  4076ba:	mov    rax,QWORD PTR [rbp-0x48]
  4076be:	mov    DWORD PTR [rax],0x0
  4076c4:	mov    rax,QWORD PTR [rip+0x7dd5]        # 40f4a0 <__bss_start@@Base+0xd10>
  4076cb:	add    rax,0x1
  4076cf:	mov    QWORD PTR [rip+0x7dca],rax        # 40f4a0 <__bss_start@@Base+0xd10>
  4076d6:	jmp    40772b <read_single_boolean_expression@@Base+0x155>
  4076d8:	mov    rax,QWORD PTR [rip+0x7db1]        # 40f490 <__bss_start@@Base+0xd00>
  4076df:	add    rax,0x1
  4076e3:	mov    QWORD PTR [rip+0x7da6],rax        # 40f490 <__bss_start@@Base+0xd00>
  4076ea:	mov    rax,QWORD PTR [rbp-0x20]
  4076ee:	mov    edx,DWORD PTR [rax+0x4]
  4076f1:	mov    rax,QWORD PTR [rip+0x5900]        # 40cff8 <stderr@GLIBC_2.2.5>
  4076f8:	mov    rax,QWORD PTR [rax]
  4076fb:	lea    rsi,[rip+0x3206]        # 40a908 <_IO_stdin_used@@Base+0x908>
  407702:	mov    rdi,rax
  407705:	mov    eax,0x0
  40770a:	call   402180 <fprintf@plt>
  40770f:	mov    rax,QWORD PTR [rip+0x7d92]        # 40f4a8 <__bss_start@@Base+0xd18>
  407716:	add    rax,0x1
  40771a:	mov    QWORD PTR [rip+0x7d87],rax        # 40f4a8 <__bss_start@@Base+0xd18>
  407721:	mov    edi,0x1
  407726:	call   402240 <exit@plt>
  40772b:	mov    rax,QWORD PTR [rbp-0x28]
  40772f:	mov    rdx,QWORD PTR [rip+0x7d7a]        # 40f4b0 <__bss_start@@Base+0xd20>
  407736:	add    rdx,0x1
  40773a:	mov    QWORD PTR [rip+0x7d6f],rdx        # 40f4b0 <__bss_start@@Base+0xd20>
  407741:	leave  
  407742:	ret    

0000000000407743 <read_boolean_binary_expression@@Base>:
  407743:	push   rbp
  407744:	mov    rbp,rsp
  407747:	sub    rsp,0x50
  40774b:	mov    QWORD PTR [rbp-0x48],rdi
  40774f:	mov    rax,QWORD PTR [rip+0x7c8a]        # 40f3e0 <__bss_start@@Base+0xc50>
  407756:	add    rax,0x1
  40775a:	mov    QWORD PTR [rip+0x7c7f],rax        # 40f3e0 <__bss_start@@Base+0xc50>
  407761:	mov    QWORD PTR [rbp-0x38],0x0
  407769:	mov    QWORD PTR [rbp-0x30],0x0
  407771:	mov    QWORD PTR [rbp-0x28],0x0
  407779:	mov    QWORD PTR [rbp-0x20],0x0
  407781:	mov    QWORD PTR [rbp-0x18],0x0
  407789:	mov    QWORD PTR [rbp-0x10],0x0
  407791:	mov    QWORD PTR [rbp-0x8],0x0
  407799:	mov    rax,QWORD PTR [rbp-0x48]
  40779d:	mov    rax,QWORD PTR [rax]
  4077a0:	mov    rdi,rax
  4077a3:	call   402376 <next@@Base>
  4077a8:	mov    QWORD PTR [rbp-0x18],rax
  4077ac:	mov    rax,QWORD PTR [rbp-0x18]
  4077b0:	mov    eax,DWORD PTR [rax]
  4077b2:	cmp    eax,0x1
  4077b5:	je     40783f <read_boolean_binary_expression@@Base+0xfc>
  4077bb:	mov    rax,QWORD PTR [rbp-0x18]
  4077bf:	mov    eax,DWORD PTR [rax]
  4077c1:	cmp    eax,0xc
  4077c4:	jne    407823 <read_boolean_binary_expression@@Base+0xe0>
  4077c6:	mov    rax,QWORD PTR [rip+0x7c23]        # 40f3f0 <__bss_start@@Base+0xc60>
  4077cd:	add    rax,0x1
  4077d1:	mov    QWORD PTR [rip+0x7c18],rax        # 40f3f0 <__bss_start@@Base+0xc60>
  4077d8:	mov    rax,QWORD PTR [rbp-0x48]
  4077dc:	mov    rax,QWORD PTR [rax]
  4077df:	mov    rdx,QWORD PTR [rbp-0x18]
  4077e3:	mov    rsi,rdx
  4077e6:	mov    rdi,rax
  4077e9:	call   4025e6 <push_back@@Base>
  4077ee:	mov    rax,QWORD PTR [rip+0x7c03]        # 40f3f8 <__bss_start@@Base+0xc68>
  4077f5:	add    rax,0x1
  4077f9:	mov    QWORD PTR [rip+0x7bf8],rax        # 40f3f8 <__bss_start@@Base+0xc68>
  407800:	mov    rax,QWORD PTR [rbp-0x48]
  407804:	mov    rdi,rax
  407807:	call   407a6f <read_boolean_unary_expression@@Base>
  40780c:	mov    rdx,QWORD PTR [rip+0x7bed]        # 40f400 <__bss_start@@Base+0xc70>
  407813:	add    rdx,0x1
  407817:	mov    QWORD PTR [rip+0x7be2],rdx        # 40f400 <__bss_start@@Base+0xc70>
  40781e:	jmp    407a6d <read_boolean_binary_expression@@Base+0x32a>
  407823:	mov    eax,0x0
  407828:	mov    rdx,QWORD PTR [rip+0x7bd9]        # 40f408 <__bss_start@@Base+0xc78>
  40782f:	add    rdx,0x1
  407833:	mov    QWORD PTR [rip+0x7bce],rdx        # 40f408 <__bss_start@@Base+0xc78>
  40783a:	jmp    407a6d <read_boolean_binary_expression@@Base+0x32a>
  40783f:	mov    rax,QWORD PTR [rip+0x7ba2]        # 40f3e8 <__bss_start@@Base+0xc58>
  407846:	add    rax,0x1
  40784a:	mov    QWORD PTR [rip+0x7b97],rax        # 40f3e8 <__bss_start@@Base+0xc58>
  407851:	mov    rax,QWORD PTR [rbp-0x18]
  407855:	mov    QWORD PTR [rbp-0x10],rax
  407859:	mov    edi,0x18
  40785e:	call   4021c0 <malloc@plt>
  407863:	mov    QWORD PTR [rbp-0x30],rax
  407867:	mov    rax,QWORD PTR [rbp-0x10]
  40786b:	mov    edx,DWORD PTR [rax+0x4]
  40786e:	mov    rax,QWORD PTR [rbp-0x30]
  407872:	mov    esi,edx
  407874:	mov    rdi,rax
  407877:	call   40610a <init_node_int@@Base>
  40787c:	mov    rax,QWORD PTR [rip+0x7b8d]        # 40f410 <__bss_start@@Base+0xc80>
  407883:	add    rax,0x1
  407887:	mov    QWORD PTR [rip+0x7b82],rax        # 40f410 <__bss_start@@Base+0xc80>
  40788e:	mov    rax,QWORD PTR [rbp-0x10]
  407892:	mov    rdi,rax
  407895:	call   405dd4 <free_token_int_value@@Base>
  40789a:	mov    rax,QWORD PTR [rip+0x7b77]        # 40f418 <__bss_start@@Base+0xc88>
  4078a1:	add    rax,0x1
  4078a5:	mov    QWORD PTR [rip+0x7b6c],rax        # 40f418 <__bss_start@@Base+0xc88>
  4078ac:	mov    rax,QWORD PTR [rbp-0x30]
  4078b0:	mov    QWORD PTR [rbp-0x28],rax
  4078b4:	mov    rax,QWORD PTR [rbp-0x48]
  4078b8:	mov    rax,QWORD PTR [rax]
  4078bb:	mov    rdi,rax
  4078be:	call   402376 <next@@Base>
  4078c3:	mov    QWORD PTR [rbp-0x18],rax
  4078c7:	mov    rax,QWORD PTR [rbp-0x18]
  4078cb:	mov    eax,DWORD PTR [rax]
  4078cd:	cmp    eax,0xc
  4078d0:	je     40790c <read_boolean_binary_expression@@Base+0x1c9>
  4078d2:	mov    rax,QWORD PTR [rip+0x7b47]        # 40f420 <__bss_start@@Base+0xc90>
  4078d9:	add    rax,0x1
  4078dd:	mov    QWORD PTR [rip+0x7b3c],rax        # 40f420 <__bss_start@@Base+0xc90>
  4078e4:	mov    rax,QWORD PTR [rbp-0x28]
  4078e8:	mov    rdi,rax
  4078eb:	call   406302 <free_node@@Base>
  4078f0:	mov    eax,0x0
  4078f5:	mov    rdx,QWORD PTR [rip+0x7b34]        # 40f430 <__bss_start@@Base+0xca0>
  4078fc:	add    rdx,0x1
  407900:	mov    QWORD PTR [rip+0x7b29],rdx        # 40f430 <__bss_start@@Base+0xca0>
  407907:	jmp    407a6d <read_boolean_binary_expression@@Base+0x32a>
  40790c:	mov    rax,QWORD PTR [rip+0x7b15]        # 40f428 <__bss_start@@Base+0xc98>
  407913:	add    rax,0x1
  407917:	mov    QWORD PTR [rip+0x7b0a],rax        # 40f428 <__bss_start@@Base+0xc98>
  40791e:	mov    rax,QWORD PTR [rbp-0x18]
  407922:	mov    QWORD PTR [rbp-0x8],rax
  407926:	mov    rax,QWORD PTR [rbp-0x8]
  40792a:	mov    rdi,rax
  40792d:	call   406823 <get_boolean_op_value@@Base>
  407932:	mov    DWORD PTR [rbp-0x3c],eax
  407935:	mov    rax,QWORD PTR [rip+0x7afc]        # 40f438 <__bss_start@@Base+0xca8>
  40793c:	add    rax,0x1
  407940:	mov    QWORD PTR [rip+0x7af1],rax        # 40f438 <__bss_start@@Base+0xca8>
  407947:	mov    rax,QWORD PTR [rbp-0x8]
  40794b:	mov    rdi,rax
  40794e:	call   405fc3 <free_token_boolean_op@@Base>
  407953:	mov    rax,QWORD PTR [rip+0x7ae6]        # 40f440 <__bss_start@@Base+0xcb0>
  40795a:	add    rax,0x1
  40795e:	mov    QWORD PTR [rip+0x7adb],rax        # 40f440 <__bss_start@@Base+0xcb0>
  407965:	mov    rax,QWORD PTR [rbp-0x48]
  407969:	mov    rax,QWORD PTR [rax]
  40796c:	mov    rdi,rax
  40796f:	call   402376 <next@@Base>
  407974:	mov    QWORD PTR [rbp-0x18],rax
  407978:	mov    rax,QWORD PTR [rbp-0x18]
  40797c:	mov    eax,DWORD PTR [rax]
  40797e:	cmp    eax,0x1
  407981:	je     4079bd <read_boolean_binary_expression@@Base+0x27a>
  407983:	mov    rax,QWORD PTR [rip+0x7abe]        # 40f448 <__bss_start@@Base+0xcb8>
  40798a:	add    rax,0x1
  40798e:	mov    QWORD PTR [rip+0x7ab3],rax        # 40f448 <__bss_start@@Base+0xcb8>
  407995:	mov    rax,QWORD PTR [rbp-0x28]
  407999:	mov    rdi,rax
  40799c:	call   406302 <free_node@@Base>
  4079a1:	mov    eax,0x0
  4079a6:	mov    rdx,QWORD PTR [rip+0x7aab]        # 40f458 <__bss_start@@Base+0xcc8>
  4079ad:	add    rdx,0x1
  4079b1:	mov    QWORD PTR [rip+0x7aa0],rdx        # 40f458 <__bss_start@@Base+0xcc8>
  4079b8:	jmp    407a6d <read_boolean_binary_expression@@Base+0x32a>
  4079bd:	mov    rax,QWORD PTR [rip+0x7a8c]        # 40f450 <__bss_start@@Base+0xcc0>
  4079c4:	add    rax,0x1
  4079c8:	mov    QWORD PTR [rip+0x7a81],rax        # 40f450 <__bss_start@@Base+0xcc0>
  4079cf:	mov    rax,QWORD PTR [rbp-0x18]
  4079d3:	mov    QWORD PTR [rbp-0x10],rax
  4079d7:	mov    edi,0x18
  4079dc:	call   4021c0 <malloc@plt>
  4079e1:	mov    QWORD PTR [rbp-0x30],rax
  4079e5:	mov    rax,QWORD PTR [rbp-0x10]
  4079e9:	mov    edx,DWORD PTR [rax+0x4]
  4079ec:	mov    rax,QWORD PTR [rbp-0x30]
  4079f0:	mov    esi,edx
  4079f2:	mov    rdi,rax
  4079f5:	call   40610a <init_node_int@@Base>
  4079fa:	mov    rax,QWORD PTR [rip+0x7a5f]        # 40f460 <__bss_start@@Base+0xcd0>
  407a01:	add    rax,0x1
  407a05:	mov    QWORD PTR [rip+0x7a54],rax        # 40f460 <__bss_start@@Base+0xcd0>
  407a0c:	mov    rax,QWORD PTR [rbp-0x10]
  407a10:	mov    rdi,rax
  407a13:	call   405dd4 <free_token_int_value@@Base>
  407a18:	mov    rax,QWORD PTR [rip+0x7a49]        # 40f468 <__bss_start@@Base+0xcd8>
  407a1f:	add    rax,0x1
  407a23:	mov    QWORD PTR [rip+0x7a3e],rax        # 40f468 <__bss_start@@Base+0xcd8>
  407a2a:	mov    rax,QWORD PTR [rbp-0x30]
  407a2e:	mov    QWORD PTR [rbp-0x20],rax
  407a32:	mov    edi,0x28
  407a37:	call   4021c0 <malloc@plt>
  407a3c:	mov    QWORD PTR [rbp-0x38],rax
  407a40:	mov    rcx,QWORD PTR [rbp-0x20]
  407a44:	mov    rdx,QWORD PTR [rbp-0x28]
  407a48:	mov    esi,DWORD PTR [rbp-0x3c]
  407a4b:	mov    rax,QWORD PTR [rbp-0x38]
  407a4f:	mov    rdi,rax
  407a52:	call   406287 <init_node_boolean_operator@@Base>
  407a57:	mov    rax,QWORD PTR [rbp-0x38]
  407a5b:	mov    rdx,QWORD PTR [rip+0x7a0e]        # 40f470 <__bss_start@@Base+0xce0>
  407a62:	add    rdx,0x1
  407a66:	mov    QWORD PTR [rip+0x7a03],rdx        # 40f470 <__bss_start@@Base+0xce0>
  407a6d:	leave  
  407a6e:	ret    

0000000000407a6f <read_boolean_unary_expression@@Base>:
  407a6f:	push   rbp
  407a70:	mov    rbp,rsp
  407a73:	sub    rsp,0x40
  407a77:	mov    QWORD PTR [rbp-0x38],rdi
  407a7b:	mov    rax,QWORD PTR [rip+0x78fe]        # 40f380 <__bss_start@@Base+0xbf0>
  407a82:	add    rax,0x1
  407a86:	mov    QWORD PTR [rip+0x78f3],rax        # 40f380 <__bss_start@@Base+0xbf0>
  407a8d:	mov    QWORD PTR [rbp-0x28],0x0
  407a95:	mov    QWORD PTR [rbp-0x20],0x0
  407a9d:	mov    QWORD PTR [rbp-0x18],0x0
  407aa5:	mov    QWORD PTR [rbp-0x10],0x0
  407aad:	mov    QWORD PTR [rbp-0x8],0x0
  407ab5:	mov    edi,0x28
  407aba:	call   4021c0 <malloc@plt>
  407abf:	mov    QWORD PTR [rbp-0x28],rax
  407ac3:	mov    rax,QWORD PTR [rbp-0x38]
  407ac7:	mov    rax,QWORD PTR [rax]
  407aca:	mov    rdi,rax
  407acd:	call   402376 <next@@Base>
  407ad2:	mov    QWORD PTR [rbp-0x10],rax
  407ad6:	mov    rax,QWORD PTR [rbp-0x10]
  407ada:	mov    eax,DWORD PTR [rax]
  407adc:	cmp    eax,0xc
  407adf:	je     407b1b <read_boolean_unary_expression@@Base+0xac>
  407ae1:	mov    rax,QWORD PTR [rip+0x78a0]        # 40f388 <__bss_start@@Base+0xbf8>
  407ae8:	add    rax,0x1
  407aec:	mov    QWORD PTR [rip+0x7895],rax        # 40f388 <__bss_start@@Base+0xbf8>
  407af3:	mov    rax,QWORD PTR [rbp-0x28]
  407af7:	mov    rdi,rax
  407afa:	call   406771 <free_node_boolean_operator@@Base>
  407aff:	mov    eax,0x0
  407b04:	mov    rdx,QWORD PTR [rip+0x788d]        # 40f398 <__bss_start@@Base+0xc08>
  407b0b:	add    rdx,0x1
  407b0f:	mov    QWORD PTR [rip+0x7882],rdx        # 40f398 <__bss_start@@Base+0xc08>
  407b16:	jmp    407c67 <read_boolean_unary_expression@@Base+0x1f8>
  407b1b:	mov    rax,QWORD PTR [rip+0x786e]        # 40f390 <__bss_start@@Base+0xc00>
  407b22:	add    rax,0x1
  407b26:	mov    QWORD PTR [rip+0x7863],rax        # 40f390 <__bss_start@@Base+0xc00>
  407b2d:	mov    rax,QWORD PTR [rbp-0x10]
  407b31:	mov    rdi,rax
  407b34:	call   406823 <get_boolean_op_value@@Base>
  407b39:	mov    DWORD PTR [rbp-0x2c],eax
  407b3c:	mov    rax,QWORD PTR [rip+0x785d]        # 40f3a0 <__bss_start@@Base+0xc10>
  407b43:	add    rax,0x1
  407b47:	mov    QWORD PTR [rip+0x7852],rax        # 40f3a0 <__bss_start@@Base+0xc10>
  407b4e:	mov    rax,QWORD PTR [rbp-0x10]
  407b52:	mov    rdi,rax
  407b55:	call   405fc3 <free_token_boolean_op@@Base>
  407b5a:	mov    rax,QWORD PTR [rip+0x7847]        # 40f3a8 <__bss_start@@Base+0xc18>
  407b61:	add    rax,0x1
  407b65:	mov    QWORD PTR [rip+0x783c],rax        # 40f3a8 <__bss_start@@Base+0xc18>
  407b6c:	mov    rax,QWORD PTR [rbp-0x38]
  407b70:	mov    rax,QWORD PTR [rax]
  407b73:	mov    rdi,rax
  407b76:	call   402376 <next@@Base>
  407b7b:	mov    QWORD PTR [rbp-0x10],rax
  407b7f:	mov    rax,QWORD PTR [rbp-0x10]
  407b83:	mov    eax,DWORD PTR [rax]
  407b85:	cmp    eax,0x1
  407b88:	je     407bc4 <read_boolean_unary_expression@@Base+0x155>
  407b8a:	mov    rax,QWORD PTR [rip+0x781f]        # 40f3b0 <__bss_start@@Base+0xc20>
  407b91:	add    rax,0x1
  407b95:	mov    QWORD PTR [rip+0x7814],rax        # 40f3b0 <__bss_start@@Base+0xc20>
  407b9c:	mov    rax,QWORD PTR [rbp-0x28]
  407ba0:	mov    rdi,rax
  407ba3:	call   406771 <free_node_boolean_operator@@Base>
  407ba8:	mov    eax,0x0
  407bad:	mov    rdx,QWORD PTR [rip+0x780c]        # 40f3c0 <__bss_start@@Base+0xc30>
  407bb4:	add    rdx,0x1
  407bb8:	mov    QWORD PTR [rip+0x7801],rdx        # 40f3c0 <__bss_start@@Base+0xc30>
  407bbf:	jmp    407c67 <read_boolean_unary_expression@@Base+0x1f8>
  407bc4:	mov    rax,QWORD PTR [rip+0x77ed]        # 40f3b8 <__bss_start@@Base+0xc28>
  407bcb:	add    rax,0x1
  407bcf:	mov    QWORD PTR [rip+0x77e2],rax        # 40f3b8 <__bss_start@@Base+0xc28>
  407bd6:	mov    rax,QWORD PTR [rbp-0x10]
  407bda:	mov    QWORD PTR [rbp-0x8],rax
  407bde:	mov    edi,0x18
  407be3:	call   4021c0 <malloc@plt>
  407be8:	mov    QWORD PTR [rbp-0x20],rax
  407bec:	mov    rax,QWORD PTR [rbp-0x8]
  407bf0:	mov    edx,DWORD PTR [rax+0x4]
  407bf3:	mov    rax,QWORD PTR [rbp-0x20]
  407bf7:	mov    esi,edx
  407bf9:	mov    rdi,rax
  407bfc:	call   40610a <init_node_int@@Base>
  407c01:	mov    rax,QWORD PTR [rip+0x77c0]        # 40f3c8 <__bss_start@@Base+0xc38>
  407c08:	add    rax,0x1
  407c0c:	mov    QWORD PTR [rip+0x77b5],rax        # 40f3c8 <__bss_start@@Base+0xc38>
  407c13:	mov    rax,QWORD PTR [rbp-0x8]
  407c17:	mov    rdi,rax
  407c1a:	call   405dd4 <free_token_int_value@@Base>
  407c1f:	mov    rax,QWORD PTR [rip+0x77aa]        # 40f3d0 <__bss_start@@Base+0xc40>
  407c26:	add    rax,0x1
  407c2a:	mov    QWORD PTR [rip+0x779f],rax        # 40f3d0 <__bss_start@@Base+0xc40>
  407c31:	mov    rax,QWORD PTR [rbp-0x20]
  407c35:	mov    QWORD PTR [rbp-0x18],rax
  407c39:	mov    rdx,QWORD PTR [rbp-0x18]
  407c3d:	mov    esi,DWORD PTR [rbp-0x2c]
  407c40:	mov    rax,QWORD PTR [rbp-0x28]
  407c44:	mov    ecx,0x0
  407c49:	mov    rdi,rax
  407c4c:	call   406287 <init_node_boolean_operator@@Base>
  407c51:	mov    rax,QWORD PTR [rbp-0x28]
  407c55:	mov    rdx,QWORD PTR [rip+0x777c]        # 40f3d8 <__bss_start@@Base+0xc48>
  407c5c:	add    rdx,0x1
  407c60:	mov    QWORD PTR [rip+0x7771],rdx        # 40f3d8 <__bss_start@@Base+0xc48>
  407c67:	leave  
  407c68:	ret    
  407c69:	push   rbp
  407c6a:	mov    rbp,rsp
  407c6d:	lea    rdi,[rip+0x6a8c]        # 40e700 <__data_start@@Base+0x15c0>
  407c74:	call   409cc0 <__gcov_sort_n_vals@@Base+0x1640>
  407c79:	pop    rbp
  407c7a:	ret    
  407c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c80:	test   esi,esi
  407c82:	je     407caf <read_boolean_unary_expression@@Base+0x240>
  407c84:	lea    eax,[rsi-0x1]
  407c87:	push   rbp
  407c88:	push   rbx
  407c89:	mov    rbx,rdi
  407c8c:	lea    rbp,[rdi+rax*8+0x8]
  407c91:	sub    rsp,0x8
  407c95:	nop    DWORD PTR [rax]
  407c98:	call   408370 <read_boolean_unary_expression@@Base+0x901>
  407c9d:	add    QWORD PTR [rbx],rax
  407ca0:	add    rbx,0x8
  407ca4:	cmp    rbx,rbp
  407ca7:	jne    407c98 <read_boolean_unary_expression@@Base+0x229>
  407ca9:	add    rsp,0x8
  407cad:	pop    rbx
  407cae:	pop    rbp
  407caf:	repz ret 
  407cb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407cc0:	push   rbp
  407cc1:	push   rbx
  407cc2:	lea    esi,[rdi*4+0x0]
  407cc9:	mov    ebp,edi
  407ccb:	mov    edx,0x1
  407cd0:	sub    rsp,0x8
  407cd4:	mov    rbx,0x40fe40
  407cdb:	mov    rcx,QWORD PTR [rbx]
  407cde:	lea    rdi,[rbx+0x20]
  407ce2:	call   402250 <fwrite@plt>
  407ce7:	cmp    rax,0x1
  407ceb:	je     407cf4 <read_boolean_unary_expression@@Base+0x285>
  407ced:	mov    DWORD PTR [rbx+0x18],0x1
  407cf4:	add    DWORD PTR [rbx+0x8],ebp
  407cf7:	sub    DWORD PTR [rbx+0xc],ebp
  407cfa:	add    rsp,0x8
  407cfe:	pop    rbx
  407cff:	pop    rbp
  407d00:	ret    
  407d01:	nop    DWORD PTR [rax+rax*1+0x0]
  407d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d10:	push   rbp
  407d11:	push   rbx
  407d12:	mov    ebp,edi
  407d14:	sub    rsp,0x8
  407d18:	mov    rbx,0x40fe40
  407d1f:	mov    eax,DWORD PTR [rbx+0xc]
  407d22:	cmp    eax,0x3ff
  407d27:	ja     407d40 <read_boolean_unary_expression@@Base+0x2d1>
  407d29:	add    ebp,eax
  407d2b:	lea    rax,[rbx+rax*4+0x20]
  407d30:	mov    DWORD PTR [rbx+0xc],ebp
  407d33:	add    rsp,0x8
  407d37:	pop    rbx
  407d38:	pop    rbp
  407d39:	ret    
  407d3a:	nop    WORD PTR [rax+rax*1+0x0]
  407d40:	mov    edi,0x400
  407d45:	call   407cc0 <read_boolean_unary_expression@@Base+0x251>
  407d4a:	mov    eax,DWORD PTR [rbx+0xc]
  407d4d:	test   eax,eax
  407d4f:	je     407d29 <read_boolean_unary_expression@@Base+0x2ba>
  407d51:	mov    edx,DWORD PTR [rbx+0x1020]
  407d57:	mov    DWORD PTR [rbx+0x20],edx
  407d5a:	jmp    407d29 <read_boolean_unary_expression@@Base+0x2ba>
  407d5c:	nop    DWORD PTR [rax+0x0]
  407d60:	push   rbp
  407d61:	push   rbx
  407d62:	mov    ebp,edi
  407d64:	sub    rsp,0x8
  407d68:	mov    rbx,0x40fe40
  407d6f:	mov    edi,DWORD PTR [rbx+0xc]
  407d72:	mov    eax,DWORD PTR [rbx+0x10]
  407d75:	sub    eax,edi
  407d77:	cmp    eax,ebp
  407d79:	jae    407dbb <read_boolean_unary_expression@@Base+0x34c>
  407d7b:	add    DWORD PTR [rbx+0x8],edi
  407d7e:	test   eax,eax
  407d80:	je     407d89 <read_boolean_unary_expression@@Base+0x31a>
  407d82:	mov    edx,DWORD PTR [rbx+rdi*4+0x20]
  407d86:	mov    DWORD PTR [rbx+0x20],edx
  407d89:	mov    rcx,QWORD PTR [rbx]
  407d8c:	lea    rdi,[rbx+rax*4+0x20]
  407d91:	mov    edx,0x1000
  407d96:	mov    esi,0x1
  407d9b:	mov    DWORD PTR [rbx+0xc],0x0
  407da2:	mov    DWORD PTR [rbx+0x10],eax
  407da5:	call   4020c0 <fread@plt>
  407daa:	shr    rax,0x2
  407dae:	add    eax,DWORD PTR [rbx+0x10]
  407db1:	cmp    ebp,eax
  407db3:	mov    DWORD PTR [rbx+0x10],eax
  407db6:	ja     407dd0 <read_boolean_unary_expression@@Base+0x361>
  407db8:	mov    edi,DWORD PTR [rbx+0xc]
  407dbb:	mov    eax,edi
  407dbd:	add    edi,ebp
  407dbf:	lea    rax,[rbx+rax*4+0x20]
  407dc4:	mov    DWORD PTR [rbx+0xc],edi
  407dc7:	add    rsp,0x8
  407dcb:	pop    rbx
  407dcc:	pop    rbp
  407dcd:	ret    
  407dce:	xchg   ax,ax
  407dd0:	sub    ebp,eax
  407dd2:	mov    DWORD PTR [rbx+0x10],0x0
  407dd9:	add    DWORD PTR [rbx+0x14],ebp
  407ddc:	xor    eax,eax
  407dde:	jmp    407dc7 <read_boolean_unary_expression@@Base+0x358>
  407de0:	sub    rsp,0xd8
  407de7:	test   al,al
  407de9:	mov    QWORD PTR [rsp+0x28],rsi
  407dee:	mov    QWORD PTR [rsp+0x30],rdx
  407df3:	mov    QWORD PTR [rsp+0x38],rcx
  407df8:	mov    QWORD PTR [rsp+0x40],r8
  407dfd:	mov    QWORD PTR [rsp+0x48],r9
  407e02:	je     407e3b <read_boolean_unary_expression@@Base+0x3cc>
  407e04:	movaps XMMWORD PTR [rsp+0x50],xmm0
  407e09:	movaps XMMWORD PTR [rsp+0x60],xmm1
  407e0e:	movaps XMMWORD PTR [rsp+0x70],xmm2
  407e13:	movaps XMMWORD PTR [rsp+0x80],xmm3
  407e1b:	movaps XMMWORD PTR [rsp+0x90],xmm4
  407e23:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  407e2b:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  407e33:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  407e3b:	lea    rax,[rsp+0xe0]
  407e43:	mov    rdx,rdi
  407e46:	lea    rcx,[rsp+0x8]
  407e4b:	mov    esi,0x1
  407e50:	mov    QWORD PTR [rsp+0x10],rax
  407e55:	lea    rax,[rsp+0x20]
  407e5a:	mov    DWORD PTR [rsp+0x8],0x8
  407e62:	mov    DWORD PTR [rsp+0xc],0x30
  407e6a:	mov    QWORD PTR [rsp+0x18],rax
  407e6f:	mov    rax,QWORD PTR [rip+0x5182]        # 40cff8 <stderr@GLIBC_2.2.5>
  407e76:	mov    rdi,QWORD PTR [rax]
  407e79:	call   402050 <__vfprintf_chk@plt>
  407e7e:	add    rsp,0xd8
  407e85:	ret    
  407e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e90:	test   rsi,rsi
  407e93:	push   r14
  407e95:	push   r13
  407e97:	push   r12
  407e99:	push   rbp
  407e9a:	push   rbx
  407e9b:	je     407ef2 <read_boolean_unary_expression@@Base+0x483>
  407e9d:	test   edx,edx
  407e9f:	mov    rbp,rsi
  407ea2:	mov    r13,QWORD PTR [rsi]
  407ea5:	je     407ede <read_boolean_unary_expression@@Base+0x46f>
  407ea7:	lea    eax,[rdx-0x1]
  407eaa:	lea    r14,[rdi+0x20]
  407eae:	lea    r12,[rdi+rax*8+0x28]
  407eb3:	xor    eax,eax
  407eb5:	nop    DWORD PTR [rax]
  407eb8:	cmp    QWORD PTR [r14],0x0
  407ebc:	je     407ed5 <read_boolean_unary_expression@@Base+0x466>
  407ebe:	lea    ebx,[rax+0x1]
  407ec1:	add    rax,0x2
  407ec5:	shl    rax,0x4
  407ec9:	mov    rdi,QWORD PTR [rbp+rax*1+0x10]
  407ece:	call   402040 <free@plt>
  407ed3:	mov    eax,ebx
  407ed5:	add    r14,0x8
  407ed9:	cmp    r14,r12
  407edc:	jne    407eb8 <read_boolean_unary_expression@@Base+0x449>
  407ede:	mov    rdi,rbp
  407ee1:	call   402040 <free@plt>
  407ee6:	pop    rbx
  407ee7:	mov    rax,r13
  407eea:	pop    rbp
  407eeb:	pop    r12
  407eed:	pop    r13
  407eef:	pop    r14
  407ef1:	ret    
  407ef2:	xor    r13d,r13d
  407ef5:	jmp    407ee6 <read_boolean_unary_expression@@Base+0x477>
  407ef7:	nop    WORD PTR [rax+rax*1+0x0]
  407f00:	cmp    esi,0x3630342a
  407f06:	je     407f70 <read_boolean_unary_expression@@Base+0x501>
  407f08:	mov    rax,rdx
  407f0b:	mov    edx,esi
  407f0d:	sub    rsp,0x18
  407f11:	shr    edx,0x18
  407f14:	mov    BYTE PTR [rsp+0xb],sil
  407f19:	mov    BYTE PTR [rsp+0xc],0x36
  407f1e:	mov    BYTE PTR [rsp+0x8],dl
  407f22:	mov    edx,esi
  407f24:	mov    BYTE PTR [rsp+0xd],0x30
  407f29:	shr    edx,0x10
  407f2c:	mov    BYTE PTR [rsp+0xe],0x34
  407f31:	mov    BYTE PTR [rsp+0xf],0x2a
  407f36:	mov    BYTE PTR [rsp+0x9],dl
  407f3a:	mov    edx,esi
  407f3c:	shr    edx,0x8
  407f3f:	test   rax,rax
  407f42:	mov    BYTE PTR [rsp+0xa],dl
  407f46:	je     407f80 <read_boolean_unary_expression@@Base+0x511>
  407f48:	lea    rcx,[rsp+0x8]
  407f4d:	lea    rdx,[rsp+0xc]
  407f52:	lea    rdi,[rip+0x2a5f]        # 40a9b8 <_IO_stdin_used@@Base+0x9b8>
  407f59:	mov    rsi,rax
  407f5c:	xor    eax,eax
  407f5e:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  407f63:	xor    eax,eax
  407f65:	add    rsp,0x18
  407f69:	ret    
  407f6a:	nop    WORD PTR [rax+rax*1+0x0]
  407f70:	mov    eax,0x1
  407f75:	ret    
  407f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f80:	mov    rax,QWORD PTR [rdi]
  407f83:	jmp    407f48 <read_boolean_unary_expression@@Base+0x4d9>
  407f85:	nop
  407f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f90:	mov    rax,0x40fe40
  407f97:	xor    edx,edx
  407f99:	xor    esi,esi
  407f9b:	mov    rdi,QWORD PTR [rax]
  407f9e:	mov    DWORD PTR [rax+0x1c],0xffffffff
  407fa5:	mov    DWORD PTR [rax+0x8],0x0
  407fac:	mov    DWORD PTR [rax+0xc],0x0
  407fb3:	jmp    4021f0 <fseek@plt>
  407fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fc0:	push   r12
  407fc2:	push   rbp
  407fc3:	xor    eax,eax
  407fc5:	push   rbx
  407fc6:	mov    rbp,rdi
  407fc9:	sub    rsp,0xb0
  407fd0:	mov    WORD PTR [rsp+0x2],ax
  407fd5:	mov    QWORD PTR [rsp+0x8],0x0
  407fde:	mov    QWORD PTR [rsp+0x10],0x0
  407fe7:	call   4020e0 <getpid@plt>
  407fec:	mov    rbx,0x40fe40
  407ff3:	mov    edx,0x1
  407ff8:	mov    DWORD PTR [rsp+0x18],eax
  407ffc:	mov    WORD PTR [rsp],dx
  408000:	xor    eax,eax
  408002:	mov    edx,0x1b6
  408007:	mov    esi,0x42
  40800c:	mov    rdi,rbp
  40800f:	mov    DWORD PTR [rbx+0x8],0x0
  408016:	mov    DWORD PTR [rbx+0x10],0x0
  40801d:	mov    DWORD PTR [rbx+0xc],0x0
  408024:	mov    DWORD PTR [rbx+0x14],0xffffffff
  40802b:	mov    DWORD PTR [rbx+0x18],0x0
  408032:	call   402210 <open@plt>
  408037:	test   eax,eax
  408039:	js     4080b0 <read_boolean_unary_expression@@Base+0x641>
  40803b:	mov    ebp,eax
  40803d:	mov    r12,rsp
  408040:	xor    eax,eax
  408042:	mov    rdx,r12
  408045:	mov    esi,0x7
  40804a:	mov    edi,ebp
  40804c:	call   4020d0 <fcntl@plt>
  408051:	test   eax,eax
  408053:	je     40805f <read_boolean_unary_expression@@Base+0x5f0>
  408055:	call   402070 <__errno_location@plt>
  40805a:	cmp    DWORD PTR [rax],0x4
  40805d:	je     408040 <read_boolean_unary_expression@@Base+0x5d1>
  40805f:	lea    rsi,[rip+0x2af4]        # 40ab5a <_IO_stdin_used@@Base+0xb5a>
  408066:	mov    edi,ebp
  408068:	call   402200 <fdopen@plt>
  40806d:	test   rax,rax
  408070:	mov    QWORD PTR [rbx],rax
  408073:	je     4080c0 <read_boolean_unary_expression@@Base+0x651>
  408075:	lea    rdx,[rsp+0x20]
  40807a:	mov    esi,ebp
  40807c:	mov    edi,0x1
  408081:	call   4021e0 <__fxstat@plt>
  408086:	test   eax,eax
  408088:	js     4080d0 <read_boolean_unary_expression@@Base+0x661>
  40808a:	mov    rdi,QWORD PTR [rbx]
  40808d:	xor    esi,esi
  40808f:	mov    DWORD PTR [rbx+0x1c],0x1
  408096:	call   402120 <setbuf@plt>
  40809b:	mov    eax,0x1
  4080a0:	add    rsp,0xb0
  4080a7:	pop    rbx
  4080a8:	pop    rbp
  4080a9:	pop    r12
  4080ab:	ret    
  4080ac:	nop    DWORD PTR [rax+0x0]
  4080b0:	add    rsp,0xb0
  4080b7:	xor    eax,eax
  4080b9:	pop    rbx
  4080ba:	pop    rbp
  4080bb:	pop    r12
  4080bd:	ret    
  4080be:	xchg   ax,ax
  4080c0:	mov    edi,ebp
  4080c2:	call   402170 <close@plt>
  4080c7:	xor    eax,eax
  4080c9:	jmp    4080a0 <read_boolean_unary_expression@@Base+0x631>
  4080cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4080d0:	mov    rdi,QWORD PTR [rbx]
  4080d3:	call   4020f0 <fclose@plt>
  4080d8:	mov    QWORD PTR [rbx],0x0
  4080df:	xor    eax,eax
  4080e1:	jmp    4080a0 <read_boolean_unary_expression@@Base+0x631>
  4080e3:	nop    DWORD PTR [rax]
  4080e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080f0:	push   rbx
  4080f1:	mov    rbx,0x40fe40
  4080f8:	mov    rdi,QWORD PTR [rbx]
  4080fb:	test   rdi,rdi
  4080fe:	je     40811a <read_boolean_unary_expression@@Base+0x6ab>
  408100:	mov    eax,DWORD PTR [rbx+0xc]
  408103:	test   eax,eax
  408105:	jne    408130 <read_boolean_unary_expression@@Base+0x6c1>
  408107:	call   4020f0 <fclose@plt>
  40810c:	mov    QWORD PTR [rbx],0x0
  408113:	mov    DWORD PTR [rbx+0x10],0x0
  40811a:	mov    eax,DWORD PTR [rbx+0x18]
  40811d:	mov    DWORD PTR [rbx+0x1c],0x0
  408124:	pop    rbx
  408125:	ret    
  408126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408130:	mov    edx,DWORD PTR [rbx+0x1c]
  408133:	test   edx,edx
  408135:	jns    408107 <read_boolean_unary_expression@@Base+0x698>
  408137:	mov    edi,eax
  408139:	call   407cc0 <read_boolean_unary_expression@@Base+0x251>
  40813e:	mov    rdi,QWORD PTR [rbx]
  408141:	jmp    408107 <read_boolean_unary_expression@@Base+0x698>
  408143:	nop    DWORD PTR [rax]
  408146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408150:	push   rbx
  408151:	mov    ebx,edi
  408153:	mov    edi,0x1
  408158:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40815d:	mov    DWORD PTR [rax],ebx
  40815f:	pop    rbx
  408160:	ret    
  408161:	nop    DWORD PTR [rax+rax*1+0x0]
  408166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408170:	push   rbx
  408171:	mov    rbx,rdi
  408174:	mov    edi,0x2
  408179:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40817e:	mov    DWORD PTR [rax],ebx
  408180:	sar    rbx,0x20
  408184:	mov    DWORD PTR [rax+0x4],ebx
  408187:	pop    rbx
  408188:	ret    
  408189:	nop    DWORD PTR [rax+0x0]
  408190:	push   rbp
  408191:	push   rbx
  408192:	mov    ebp,edi
  408194:	mov    ebx,esi
  408196:	mov    edi,0x2
  40819b:	sub    rsp,0x8
  40819f:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4081a4:	mov    DWORD PTR [rax],ebp
  4081a6:	mov    DWORD PTR [rax+0x4],ebx
  4081a9:	add    rsp,0x8
  4081ad:	pop    rbx
  4081ae:	pop    rbp
  4081af:	ret    
  4081b0:	push   r15
  4081b2:	push   r14
  4081b4:	mov    r14d,edi
  4081b7:	push   r13
  4081b9:	push   r12
  4081bb:	push   rbp
  4081bc:	push   rbx
  4081bd:	mov    rbp,rsi
  4081c0:	sub    rsp,0x28
  4081c4:	lea    rax,[rsp+0x20]
  4081c9:	mov    r15,rsp
  4081cc:	mov    r13,rsp
  4081cf:	nop
  4081d0:	mov    DWORD PTR [r13+0x0],0x0
  4081d8:	add    r13,0x4
  4081dc:	cmp    rax,r13
  4081df:	jne    4081d0 <read_boolean_unary_expression@@Base+0x761>
  4081e1:	lea    rbx,[rbp+0x28]
  4081e5:	xor    r12d,r12d
  4081e8:	xor    ecx,ecx
  4081ea:	mov    edi,0x1
  4081ef:	mov    rax,rbx
  4081f2:	nop    WORD PTR [rax+rax*1+0x0]
  4081f8:	mov    edx,DWORD PTR [rax]
  4081fa:	test   edx,edx
  4081fc:	je     40820e <read_boolean_unary_expression@@Base+0x79f>
  4081fe:	mov    edx,ecx
  408200:	mov    esi,edi
  408202:	add    r12d,0x1
  408206:	shr    edx,0x5
  408209:	shl    esi,cl
  40820b:	or     DWORD PTR [rsp+rdx*4],esi
  40820e:	add    ecx,0x1
  408211:	add    rax,0x18
  408215:	cmp    ecx,0xfc
  40821b:	jne    4081f8 <read_boolean_unary_expression@@Base+0x789>
  40821d:	mov    edi,0x2
  408222:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408227:	lea    edx,[r12+r12*4+0x11]
  40822c:	mov    DWORD PTR [rax],r14d
  40822f:	mov    edi,0x1
  408234:	mov    DWORD PTR [rax+0x4],edx
  408237:	mov    r12d,DWORD PTR [rbp+0x0]
  40823b:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408240:	mov    edi,0x1
  408245:	mov    DWORD PTR [rax],r12d
  408248:	mov    r12d,DWORD PTR [rbp+0x8]
  40824c:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408251:	mov    edi,0x1
  408256:	mov    DWORD PTR [rax],r12d
  408259:	mov    r12d,DWORD PTR [rbp+0xc]
  40825d:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408262:	mov    edi,0x2
  408267:	mov    DWORD PTR [rax],r12d
  40826a:	mov    r12,QWORD PTR [rbp+0x10]
  40826e:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408273:	mov    edi,0x2
  408278:	mov    DWORD PTR [rax],r12d
  40827b:	sar    r12,0x20
  40827f:	mov    DWORD PTR [rax+0x4],r12d
  408283:	mov    r12,QWORD PTR [rbp+0x18]
  408287:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40828c:	mov    edi,0x2
  408291:	mov    DWORD PTR [rax],r12d
  408294:	sar    r12,0x20
  408298:	mov    DWORD PTR [rax+0x4],r12d
  40829c:	mov    r12,QWORD PTR [rbp+0x20]
  4082a0:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4082a5:	mov    DWORD PTR [rax],r12d
  4082a8:	sar    r12,0x20
  4082ac:	mov    DWORD PTR [rax+0x4],r12d
  4082b0:	mov    r12d,DWORD PTR [r15]
  4082b3:	mov    edi,0x1
  4082b8:	add    r15,0x4
  4082bc:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4082c1:	cmp    r15,r13
  4082c4:	mov    DWORD PTR [rax],r12d
  4082c7:	jne    4082b0 <read_boolean_unary_expression@@Base+0x841>
  4082c9:	lea    r13,[rbp+0x17c8]
  4082d0:	jmp    4082e1 <read_boolean_unary_expression@@Base+0x872>
  4082d2:	nop    WORD PTR [rax+rax*1+0x0]
  4082d8:	add    rbx,0x18
  4082dc:	cmp    rbx,r13
  4082df:	je     40832e <read_boolean_unary_expression@@Base+0x8bf>
  4082e1:	mov    ebp,DWORD PTR [rbx]
  4082e3:	test   ebp,ebp
  4082e5:	je     4082d8 <read_boolean_unary_expression@@Base+0x869>
  4082e7:	mov    edi,0x1
  4082ec:	add    rbx,0x18
  4082f0:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4082f5:	mov    r12,QWORD PTR [rbx-0x10]
  4082f9:	mov    edi,0x2
  4082fe:	mov    DWORD PTR [rax],ebp
  408300:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  408305:	mov    edi,0x2
  40830a:	mov    DWORD PTR [rax],r12d
  40830d:	sar    r12,0x20
  408311:	mov    DWORD PTR [rax+0x4],r12d
  408315:	mov    r12,QWORD PTR [rbx-0x8]
  408319:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40831e:	mov    DWORD PTR [rax],r12d
  408321:	sar    r12,0x20
  408325:	cmp    rbx,r13
  408328:	mov    DWORD PTR [rax+0x4],r12d
  40832c:	jne    4082e1 <read_boolean_unary_expression@@Base+0x872>
  40832e:	add    rsp,0x28
  408332:	pop    rbx
  408333:	pop    rbp
  408334:	pop    r12
  408336:	pop    r13
  408338:	pop    r14
  40833a:	pop    r15
  40833c:	ret    
  40833d:	nop    DWORD PTR [rax]
  408340:	sub    rsp,0x8
  408344:	mov    edi,0x1
  408349:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40834e:	test   rax,rax
  408351:	je     408360 <read_boolean_unary_expression@@Base+0x8f1>
  408353:	mov    eax,DWORD PTR [rax]
  408355:	add    rsp,0x8
  408359:	ret    
  40835a:	nop    WORD PTR [rax+rax*1+0x0]
  408360:	xor    eax,eax
  408362:	add    rsp,0x8
  408366:	ret    
  408367:	nop    WORD PTR [rax+rax*1+0x0]
  408370:	sub    rsp,0x8
  408374:	mov    edi,0x2
  408379:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40837e:	test   rax,rax
  408381:	je     408390 <read_boolean_unary_expression@@Base+0x921>
  408383:	mov    rax,QWORD PTR [rax]
  408386:	add    rsp,0x8
  40838a:	ret    
  40838b:	nop    DWORD PTR [rax+rax*1+0x0]
  408390:	xor    eax,eax
  408392:	add    rsp,0x8
  408396:	ret    
  408397:	nop    WORD PTR [rax+rax*1+0x0]
  4083a0:	push   r15
  4083a2:	push   r14
  4083a4:	push   r13
  4083a6:	push   r12
  4083a8:	mov    r12,rdi
  4083ab:	push   rbp
  4083ac:	push   rbx
  4083ad:	mov    edi,0x1
  4083b2:	sub    rsp,0x28
  4083b6:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4083bb:	test   rax,rax
  4083be:	je     4085ff <read_boolean_unary_expression@@Base+0xb90>
  4083c4:	mov    eax,DWORD PTR [rax]
  4083c6:	mov    DWORD PTR [r12],eax
  4083ca:	mov    edi,0x1
  4083cf:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4083d4:	test   rax,rax
  4083d7:	je     408606 <read_boolean_unary_expression@@Base+0xb97>
  4083dd:	mov    eax,DWORD PTR [rax]
  4083df:	mov    DWORD PTR [r12+0x8],eax
  4083e4:	mov    edi,0x1
  4083e9:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4083ee:	test   rax,rax
  4083f1:	je     40860d <read_boolean_unary_expression@@Base+0xb9e>
  4083f7:	mov    eax,DWORD PTR [rax]
  4083f9:	mov    DWORD PTR [r12+0xc],eax
  4083fe:	mov    edi,0x2
  408403:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408408:	test   rax,rax
  40840b:	je     408614 <read_boolean_unary_expression@@Base+0xba5>
  408411:	mov    rax,QWORD PTR [rax]
  408414:	mov    QWORD PTR [r12+0x10],rax
  408419:	mov    edi,0x2
  40841e:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408423:	test   rax,rax
  408426:	je     40861b <read_boolean_unary_expression@@Base+0xbac>
  40842c:	mov    rax,QWORD PTR [rax]
  40842f:	mov    QWORD PTR [r12+0x18],rax
  408434:	mov    edi,0x2
  408439:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40843e:	test   rax,rax
  408441:	je     408622 <read_boolean_unary_expression@@Base+0xbb3>
  408447:	mov    rax,QWORD PTR [rax]
  40844a:	lea    rdi,[r12+0x30]
  40844f:	mov    QWORD PTR [r12+0x20],rax
  408454:	mov    eax,r12d
  408457:	mov    QWORD PTR [r12+0x28],0x0
  408460:	mov    QWORD PTR [r12+0x17c0],0x0
  40846c:	mov    rbx,rsp
  40846f:	and    rdi,0xfffffffffffffff8
  408473:	lea    r13,[rsp+0x20]
  408478:	xor    r15d,r15d
  40847b:	sub    eax,edi
  40847d:	lea    ecx,[rax+0x17c8]
  408483:	xor    eax,eax
  408485:	shr    ecx,0x3
  408488:	rep stos QWORD PTR es:[rdi],rax
  40848b:	jmp    4084a9 <read_boolean_unary_expression@@Base+0xa3a>
  40848d:	nop    DWORD PTR [rax]
  408490:	mov    edi,DWORD PTR [rax]
  408492:	add    rbx,0x4
  408496:	mov    rbp,rdi
  408499:	call   409d60 <__gcov_sort_n_vals@@Base+0x16e0>
  40849e:	mov    DWORD PTR [rbx-0x4],ebp
  4084a1:	add    r15d,eax
  4084a4:	cmp    rbx,r13
  4084a7:	je     4084d0 <read_boolean_unary_expression@@Base+0xa61>
  4084a9:	mov    edi,0x1
  4084ae:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4084b3:	test   rax,rax
  4084b6:	jne    408490 <read_boolean_unary_expression@@Base+0xa21>
  4084b8:	xor    ebp,ebp
  4084ba:	add    rbx,0x4
  4084be:	add    r15d,eax
  4084c1:	mov    DWORD PTR [rbx-0x4],ebp
  4084c4:	cmp    rbx,r13
  4084c7:	jne    4084a9 <read_boolean_unary_expression@@Base+0xa3a>
  4084c9:	nop    DWORD PTR [rax+0x0]
  4084d0:	xor    ebx,ebx
  4084d2:	xor    ebp,ebp
  4084d4:	xor    r14d,r14d
  4084d7:	test   r15d,r15d
  4084da:	lea    r13d,[r15-0x1]
  4084de:	je     4085a7 <read_boolean_unary_expression@@Base+0xb38>
  4084e4:	nop    DWORD PTR [rax+0x0]
  4084e8:	test   ebx,ebx
  4084ea:	je     4084f2 <read_boolean_unary_expression@@Base+0xa83>
  4084ec:	jmp    408526 <read_boolean_unary_expression@@Base+0xab7>
  4084ee:	xchg   ax,ax
  4084f0:	mov    ebp,ecx
  4084f2:	cmp    ebp,0x7
  4084f5:	jbe    408505 <read_boolean_unary_expression@@Base+0xa96>
  4084f7:	lea    rdi,[rip+0x2532]        # 40aa30 <_IO_stdin_used@@Base+0xa30>
  4084fe:	xor    eax,eax
  408500:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  408505:	mov    eax,ebp
  408507:	lea    ecx,[rbp+0x1]
  40850a:	mov    ebx,DWORD PTR [rsp+rax*4]
  40850d:	test   ebx,ebx
  40850f:	je     4084f0 <read_boolean_unary_expression@@Base+0xa81>
  408511:	mov    r14d,ebp
  408514:	mov    ebp,ecx
  408516:	shl    r14d,0x5
  40851a:	test   bl,0x1
  40851d:	jne    40852b <read_boolean_unary_expression@@Base+0xabc>
  40851f:	nop
  408520:	add    r14d,0x1
  408524:	shr    ebx,1
  408526:	test   bl,0x1
  408529:	je     408520 <read_boolean_unary_expression@@Base+0xab1>
  40852b:	cmp    r14d,0xfb
  408532:	ja     4085c0 <read_boolean_unary_expression@@Base+0xb51>
  408538:	mov    edi,0x1
  40853d:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408542:	test   rax,rax
  408545:	je     4085e1 <read_boolean_unary_expression@@Base+0xb72>
  40854b:	mov    ecx,DWORD PTR [rax]
  40854d:	mov    r15d,r14d
  408550:	mov    edi,0x2
  408555:	lea    rax,[r15+r15*2]
  408559:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40855e:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408563:	test   rax,rax
  408566:	je     4085f8 <read_boolean_unary_expression@@Base+0xb89>
  40856c:	mov    rcx,QWORD PTR [rax]
  40856f:	lea    rax,[r15+r15*2]
  408573:	mov    edi,0x2
  408578:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40857d:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408582:	test   rax,rax
  408585:	je     4085f0 <read_boolean_unary_expression@@Base+0xb81>
  408587:	mov    rcx,QWORD PTR [rax]
  40858a:	lea    rax,[r15+r15*2]
  40858e:	sub    r13d,0x1
  408592:	shr    ebx,1
  408594:	add    r14d,0x1
  408598:	cmp    r13d,0xffffffff
  40859c:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  4085a1:	jne    4084e8 <read_boolean_unary_expression@@Base+0xa79>
  4085a7:	add    rsp,0x28
  4085ab:	pop    rbx
  4085ac:	pop    rbp
  4085ad:	pop    r12
  4085af:	pop    r13
  4085b1:	pop    r14
  4085b3:	pop    r15
  4085b5:	ret    
  4085b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085c0:	lea    rdi,[rip+0x2429]        # 40a9f0 <_IO_stdin_used@@Base+0x9f0>
  4085c7:	xor    eax,eax
  4085c9:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  4085ce:	mov    edi,0x1
  4085d3:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4085d8:	test   rax,rax
  4085db:	jne    40854b <read_boolean_unary_expression@@Base+0xadc>
  4085e1:	xor    ecx,ecx
  4085e3:	jmp    40854d <read_boolean_unary_expression@@Base+0xade>
  4085e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4085f0:	xor    ecx,ecx
  4085f2:	jmp    40858a <read_boolean_unary_expression@@Base+0xb1b>
  4085f4:	nop    DWORD PTR [rax+0x0]
  4085f8:	xor    ecx,ecx
  4085fa:	jmp    40856f <read_boolean_unary_expression@@Base+0xb00>
  4085ff:	xor    eax,eax
  408601:	jmp    4083c6 <read_boolean_unary_expression@@Base+0x957>
  408606:	xor    eax,eax
  408608:	jmp    4083df <read_boolean_unary_expression@@Base+0x970>
  40860d:	xor    eax,eax
  40860f:	jmp    4083f9 <read_boolean_unary_expression@@Base+0x98a>
  408614:	xor    eax,eax
  408616:	jmp    408414 <read_boolean_unary_expression@@Base+0x9a5>
  40861b:	xor    eax,eax
  40861d:	jmp    40842f <read_boolean_unary_expression@@Base+0x9c0>
  408622:	xor    eax,eax
  408624:	jmp    40844a <read_boolean_unary_expression@@Base+0x9db>
  408629:	nop    DWORD PTR [rax+0x0]
  408630:	push   rbp
  408631:	push   rbx
  408632:	mov    ebx,edi
  408634:	sub    rsp,0x8
  408638:	mov    rbp,0x40fe40
  40863f:	mov    edi,DWORD PTR [rbp+0xc]
  408642:	test   edi,edi
  408644:	je     40864b <read_boolean_unary_expression@@Base+0xbdc>
  408646:	call   407cc0 <read_boolean_unary_expression@@Base+0x251>
  40864b:	mov    rdi,QWORD PTR [rbp+0x0]
  40864f:	lea    esi,[rbx*4+0x0]
  408656:	xor    edx,edx
  408658:	call   4021f0 <fseek@plt>
  40865d:	mov    rdi,QWORD PTR [rbp+0x0]
  408661:	call   402190 <ftell@plt>
  408666:	sar    rax,0x2
  40866a:	mov    DWORD PTR [rbp+0x8],eax
  40866d:	add    rsp,0x8
  408671:	pop    rbx
  408672:	pop    rbp
  408673:	ret    
  408674:	xchg   ax,ax
  408676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408680 <__gcov_sort_n_vals@@Base>:
  408680:	cmp    esi,0x2
  408683:	jle    40870d <__gcov_sort_n_vals@@Base+0x8d>
  408689:	sub    esi,0x3
  40868c:	push   rbp
  40868d:	lea    r9,[rdi+0x8]
  408691:	shr    esi,1
  408693:	push   rbx
  408694:	xor    r11d,r11d
  408697:	mov    eax,esi
  408699:	xor    r10d,r10d
  40869c:	lea    rbp,[rax+rax*1+0x2]
  4086a1:	nop    DWORD PTR [rax+0x0]
  4086a8:	mov    rsi,QWORD PTR [r9+0x10]
  4086ac:	cmp    rsi,QWORD PTR [r9]
  4086af:	mov    edx,r10d
  4086b2:	mov    rbx,QWORD PTR [r9+0x8]
  4086b6:	mov    rax,r10
  4086b9:	jle    4086ed <__gcov_sort_n_vals@@Base+0x6d>
  4086bb:	lea    r8,[r9+r11*1]
  4086bf:	jmp    4086d3 <__gcov_sort_n_vals@@Base+0x53>
  4086c1:	nop    DWORD PTR [rax+0x0]
  4086c8:	sub    rax,0x2
  4086cc:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  4086d1:	jle    4086ed <__gcov_sort_n_vals@@Base+0x6d>
  4086d3:	mov    rcx,QWORD PTR [rdi+rax*8]
  4086d7:	sub    edx,0x2
  4086da:	mov    QWORD PTR [rdi+rax*8+0x10],rcx
  4086df:	mov    rcx,QWORD PTR [r8+rax*8]
  4086e3:	mov    QWORD PTR [rdi+rax*8+0x18],rcx
  4086e8:	jns    4086c8 <__gcov_sort_n_vals@@Base+0x48>
  4086ea:	movsxd rax,edx
  4086ed:	add    r10,0x2
  4086f1:	add    rax,0x2
  4086f5:	add    r9,0x10
  4086f9:	sub    r11,0x10
  4086fd:	cmp    rbp,r10
  408700:	mov    QWORD PTR [rdi+rax*8],rbx
  408704:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  408709:	jne    4086a8 <__gcov_sort_n_vals@@Base+0x28>
  40870b:	pop    rbx
  40870c:	pop    rbp
  40870d:	repz ret 
  40870f:	nop
  408710:	push   r15
  408712:	push   r14
  408714:	xor    eax,eax
  408716:	push   r13
  408718:	push   r12
  40871a:	mov    r13,rdi
  40871d:	push   rbp
  40871e:	push   rbx
  40871f:	mov    ecx,0x2f9
  408724:	sub    rsp,0x4808
  40872b:	test   r13,r13
  40872e:	lea    rdi,[rsp+0x90]
  408736:	mov    DWORD PTR [rsp+0x6c],esi
  40873a:	mov    QWORD PTR [rsp+0x8],rdi
  40873f:	rep stos QWORD PTR es:[rdi],rax
  408742:	je     409a29 <__gcov_sort_n_vals@@Base+0x13a9>
  408748:	mov    rbx,r13
  40874b:	xor    ebp,ebp
  40874d:	mov    QWORD PTR [rsp+0x10],0x0
  408756:	xor    r15d,r15d
  408759:	mov    QWORD PTR [rsp+0x18],r13
  40875e:	mov    rdi,QWORD PTR [rbx+0x18]
  408762:	call   402100 <strlen@plt>
  408767:	mov    rsi,QWORD PTR [rsp+0x10]
  40876c:	mov    ecx,DWORD PTR [rbx+0x10]
  40876f:	mov    edx,0x20
  408774:	cmp    rsi,rax
  408777:	cmovae rax,rsi
  40877b:	mov    QWORD PTR [rsp+0x10],rax
  408780:	mov    eax,ecx
  408782:	add    ecx,ecx
  408784:	xor    eax,r15d
  408787:	add    r15d,r15d
  40878a:	sar    eax,0x1f
  40878d:	and    eax,0x4c11db7
  408792:	xor    r15d,eax
  408795:	sub    edx,0x1
  408798:	jne    408780 <__gcov_sort_n_vals@@Base+0x100>
  40879a:	mov    edi,DWORD PTR [rbx+0x70]
  40879d:	mov    edx,0x20
  4087a2:	mov    ecx,edi
  4087a4:	nop    DWORD PTR [rax+0x0]
  4087a8:	mov    eax,ecx
  4087aa:	add    ecx,ecx
  4087ac:	xor    eax,r15d
  4087af:	add    r15d,r15d
  4087b2:	sar    eax,0x1f
  4087b5:	and    eax,0x4c11db7
  4087ba:	xor    r15d,eax
  4087bd:	sub    edx,0x1
  4087c0:	jne    4087a8 <__gcov_sort_n_vals@@Base+0x128>
  4087c2:	test   edi,edi
  4087c4:	je     408920 <__gcov_sort_n_vals@@Base+0x2a0>
  4087ca:	mov    r8,QWORD PTR [rbx+0x78]
  4087ce:	lea    eax,[rdi-0x1]
  4087d1:	mov    r12d,DWORD PTR [rsp+0x98]
  4087d9:	mov    rcx,QWORD PTR [rsp+0xa0]
  4087e1:	mov    rsi,QWORD PTR [rsp+0xa8]
  4087e9:	xor    r9d,r9d
  4087ec:	xor    r13d,r13d
  4087ef:	xor    r11d,r11d
  4087f2:	lea    r10,[r8+rax*8+0x8]
  4087f7:	nop    WORD PTR [rax+rax*1+0x0]
  408800:	mov    rdi,QWORD PTR [r8]
  408803:	test   rdi,rdi
  408806:	je     408cfc <__gcov_sort_n_vals@@Base+0x67c>
  40880c:	cmp    QWORD PTR [rdi],rbx
  40880f:	je     408cec <__gcov_sort_n_vals@@Base+0x66c>
  408815:	xor    edi,edi
  408817:	xor    edx,edx
  408819:	mov    r14d,0x20
  40881f:	nop
  408820:	mov    eax,r15d
  408823:	add    r15d,r15d
  408826:	xor    eax,edx
  408828:	add    edx,edx
  40882a:	sar    eax,0x1f
  40882d:	and    eax,0x4c11db7
  408832:	xor    r15d,eax
  408835:	sub    r14d,0x1
  408839:	jne    408820 <__gcov_sort_n_vals@@Base+0x1a0>
  40883b:	test   rdi,rdi
  40883e:	je     408cf4 <__gcov_sort_n_vals@@Base+0x674>
  408844:	mov    r14d,DWORD PTR [rdi+0xc]
  408848:	mov    edx,0x20
  40884d:	nop    DWORD PTR [rax]
  408850:	mov    eax,r15d
  408853:	add    r15d,r15d
  408856:	xor    eax,r14d
  408859:	add    r14d,r14d
  40885c:	sar    eax,0x1f
  40885f:	and    eax,0x4c11db7
  408864:	xor    r15d,eax
  408867:	sub    edx,0x1
  40886a:	jne    408850 <__gcov_sort_n_vals@@Base+0x1d0>
  40886c:	test   rdi,rdi
  40886f:	je     4088f4 <__gcov_sort_n_vals@@Base+0x274>
  408875:	cmp    QWORD PTR [rbx+0x20],0x0
  40887a:	je     4088f4 <__gcov_sort_n_vals@@Base+0x274>
  40887c:	mov    r12d,DWORD PTR [rdi+0x18]
  408880:	mov    edx,0x20
  408885:	add    ebp,r12d
  408888:	mov    r11d,r12d
  40888b:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	mov    eax,r15d
  408893:	add    r15d,r15d
  408896:	xor    eax,r11d
  408899:	add    r11d,r11d
  40889c:	sar    eax,0x1f
  40889f:	and    eax,0x4c11db7
  4088a4:	xor    r15d,eax
  4088a7:	sub    edx,0x1
  4088aa:	jne    408890 <__gcov_sort_n_vals@@Base+0x210>
  4088ac:	test   r12d,r12d
  4088af:	je     408d80 <__gcov_sort_n_vals@@Base+0x700>
  4088b5:	mov    rax,QWORD PTR [rdi+0x20]
  4088b9:	lea    edx,[r12-0x1]
  4088be:	lea    rdi,[rax+rdx*8+0x8]
  4088c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4088c8:	mov    rdx,QWORD PTR [rax]
  4088cb:	add    rcx,rdx
  4088ce:	cmp    rsi,rdx
  4088d1:	jge    4088dc <__gcov_sort_n_vals@@Base+0x25c>
  4088d3:	mov    rsi,rdx
  4088d6:	mov    r9d,0x1
  4088dc:	add    rax,0x8
  4088e0:	cmp    rax,rdi
  4088e3:	jne    4088c8 <__gcov_sort_n_vals@@Base+0x248>
  4088e5:	mov    r12d,ebp
  4088e8:	mov    r13d,0x1
  4088ee:	mov    r11d,0x1
  4088f4:	add    r8,0x8
  4088f8:	cmp    r10,r8
  4088fb:	jne    408800 <__gcov_sort_n_vals@@Base+0x180>
  408901:	test   r11b,r11b
  408904:	jne    409a02 <__gcov_sort_n_vals@@Base+0x1382>
  40890a:	test   r13b,r13b
  40890d:	je     408917 <__gcov_sort_n_vals@@Base+0x297>
  40890f:	mov    QWORD PTR [rsp+0xa0],rcx
  408917:	test   r9b,r9b
  40891a:	jne    409a0f <__gcov_sort_n_vals@@Base+0x138f>
  408920:	mov    rbx,QWORD PTR [rbx+0x8]
  408924:	test   rbx,rbx
  408927:	jne    40875e <__gcov_sort_n_vals@@Base+0xde>
  40892d:	mov    r14,QWORD PTR [rsp+0x10]
  408932:	mov    r13,QWORD PTR [rsp+0x18]
  408937:	add    r14,0x2
  40893b:	test   ebp,ebp
  40893d:	je     408a72 <__gcov_sort_n_vals@@Base+0x3f2>
  408943:	mov    rbx,QWORD PTR [rsp+0x8]
  408948:	mov    rcx,QWORD PTR [rsp+0xa8]
  408950:	mov    rax,rbx
  408953:	lea    rdx,[rbx+0x17c8]
  40895a:	add    rax,0x28
  40895e:	xchg   ax,ax
  408960:	mov    DWORD PTR [rax],0x0
  408966:	mov    QWORD PTR [rax+0x8],rcx
  40896a:	add    rax,0x18
  40896e:	mov    QWORD PTR [rax-0x8],0x0
  408976:	cmp    rdx,rax
  408979:	jne    408960 <__gcov_sort_n_vals@@Base+0x2e0>
  40897b:	mov    rax,QWORD PTR [rsp+0x8]
  408980:	mov    r10,r13
  408983:	mov    r12d,0x3f
  408989:	mov    ebp,0x3d
  40898e:	mov    ebx,0x4000003e
  408993:	lea    r8,[rax+0x28]
  408997:	cmp    QWORD PTR [r10+0x20],0x0
  40899c:	je     408a65 <__gcov_sort_n_vals@@Base+0x3e5>
  4089a2:	mov    eax,DWORD PTR [r10+0x70]
  4089a6:	test   eax,eax
  4089a8:	je     408a65 <__gcov_sort_n_vals@@Base+0x3e5>
  4089ae:	mov    rdi,QWORD PTR [r10+0x78]
  4089b2:	sub    eax,0x1
  4089b5:	lea    r11,[rdi+rax*8+0x8]
  4089ba:	jmp    4089cd <__gcov_sort_n_vals@@Base+0x34d>
  4089bc:	nop    DWORD PTR [rax+0x0]
  4089c0:	add    rdi,0x8
  4089c4:	cmp    r11,rdi
  4089c7:	je     408a65 <__gcov_sort_n_vals@@Base+0x3e5>
  4089cd:	mov    rax,QWORD PTR [rdi]
  4089d0:	test   rax,rax
  4089d3:	je     4089c0 <__gcov_sort_n_vals@@Base+0x340>
  4089d5:	cmp    QWORD PTR [rax],r10
  4089d8:	jne    4089c0 <__gcov_sort_n_vals@@Base+0x340>
  4089da:	mov    edx,DWORD PTR [rax+0x18]
  4089dd:	test   edx,edx
  4089df:	je     4089c0 <__gcov_sort_n_vals@@Base+0x340>
  4089e1:	mov    rsi,QWORD PTR [rax+0x20]
  4089e5:	lea    eax,[rdx-0x1]
  4089e8:	mov    QWORD PTR [rsp+0x10],rdi
  4089ed:	lea    r9,[rsi+rax*8+0x8]
  4089f2:	nop    WORD PTR [rax+rax*1+0x0]
  4089f8:	mov    rdx,QWORD PTR [rsi]
  4089fb:	test   rdx,rdx
  4089fe:	je     408d08 <__gcov_sort_n_vals@@Base+0x688>
  408a04:	bsr    rax,rdx
  408a08:	mov    ecx,r12d
  408a0b:	xor    rax,0x3f
  408a0f:	sub    ecx,eax
  408a11:	cmp    ecx,0x1
  408a14:	jbe    408d08 <__gcov_sort_n_vals@@Base+0x688>
  408a1a:	mov    ecx,ebp
  408a1c:	mov    rdi,rdx
  408a1f:	sub    ecx,eax
  408a21:	shr    rdi,cl
  408a24:	mov    rcx,rdi
  408a27:	mov    edi,ebx
  408a29:	and    ecx,0x3
  408a2c:	sub    edi,eax
  408a2e:	lea    eax,[rcx+rdi*4]
  408a31:	lea    rax,[rax+rax*2]
  408a35:	lea    rax,[r8+rax*8]
  408a39:	add    DWORD PTR [rax],0x1
  408a3c:	add    QWORD PTR [rax+0x10],rdx
  408a40:	cmp    rdx,QWORD PTR [rax+0x8]
  408a44:	jge    408a4a <__gcov_sort_n_vals@@Base+0x3ca>
  408a46:	mov    QWORD PTR [rax+0x8],rdx
  408a4a:	add    rsi,0x8
  408a4e:	cmp    rsi,r9
  408a51:	jne    4089f8 <__gcov_sort_n_vals@@Base+0x378>
  408a53:	mov    rdi,QWORD PTR [rsp+0x10]
  408a58:	add    rdi,0x8
  408a5c:	cmp    r11,rdi
  408a5f:	jne    4089cd <__gcov_sort_n_vals@@Base+0x34d>
  408a65:	mov    r10,QWORD PTR [r10+0x8]
  408a69:	test   r10,r10
  408a6c:	jne    408997 <__gcov_sort_n_vals@@Base+0x317>
  408a72:	lea    rdi,[rip+0x2133]        # 40abac <_IO_stdin_used@@Base+0xbac>
  408a79:	call   402030 <getenv@plt>
  408a7e:	test   rax,rax
  408a81:	je     409965 <__gcov_sort_n_vals@@Base+0x12e5>
  408a87:	xor    esi,esi
  408a89:	mov    edx,0xa
  408a8e:	mov    rdi,rax
  408a91:	call   4021a0 <strtol@plt>
  408a96:	mov    edx,0x0
  408a9b:	test   eax,eax
  408a9d:	lea    rdi,[rip+0x211a]        # 40abbe <_IO_stdin_used@@Base+0xbbe>
  408aa4:	cmovns edx,eax
  408aa7:	mov    DWORD PTR [rsp+0x3c],edx
  408aab:	call   402030 <getenv@plt>
  408ab0:	test   rax,rax
  408ab3:	mov    rbx,rax
  408ab6:	je     409948 <__gcov_sort_n_vals@@Base+0x12c8>
  408abc:	mov    rdi,rax
  408abf:	call   402100 <strlen@plt>
  408ac4:	test   rax,rax
  408ac7:	mov    QWORD PTR [rsp+0x20],rax
  408acc:	je     409948 <__gcov_sort_n_vals@@Base+0x12c8>
  408ad2:	mov    rsi,QWORD PTR [rsp+0x20]
  408ad7:	mov    rax,rsi
  408ada:	sub    rax,0x1
  408ade:	cmp    BYTE PTR [rbx+rsi*1-0x1],0x2f
  408ae3:	je     4099ef <__gcov_sort_n_vals@@Base+0x136f>
  408ae9:	mov    rbp,QWORD PTR [rsp+0x20]
  408aee:	lea    rdi,[r14+rbp*1]
  408af2:	call   4021c0 <malloc@plt>
  408af7:	mov    rdx,rbp
  408afa:	mov    rsi,rbx
  408afd:	mov    rdi,rax
  408b00:	call   4021b0 <memcpy@plt>
  408b05:	mov    QWORD PTR [rsp+0x10],rax
  408b0a:	test   r13,r13
  408b0d:	je     408cd1 <__gcov_sort_n_vals@@Base+0x651>
  408b13:	mov    rax,QWORD PTR [rsp+0x10]
  408b18:	add    rax,QWORD PTR [rsp+0x20]
  408b1d:	mov    r12,r13
  408b20:	mov    DWORD PTR [rsp+0x60],r15d
  408b25:	mov    QWORD PTR [rsp+0x58],rax
  408b2a:	add    rax,0x1
  408b2e:	mov    QWORD PTR [rsp+0x80],rax
  408b36:	lea    rax,[rsp+0x1860]
  408b3e:	mov    QWORD PTR [rsp+0x30],rax
  408b43:	cmp    QWORD PTR [r12+0x68],0x0
  408b49:	mov    QWORD PTR [rip+0x6bd4],0x0        # 40f728 <__bss_start@@Base+0xf98>
  408b54:	mov    QWORD PTR [rip+0x6bc1],0x0        # 40f720 <__bss_start@@Base+0xf90>
  408b5f:	je     408bae <__gcov_sort_n_vals@@Base+0x52e>
  408b61:	mov    r11d,DWORD PTR [r12+0x70]
  408b66:	test   r11d,r11d
  408b69:	je     408bae <__gcov_sort_n_vals@@Base+0x52e>
  408b6b:	xor    r13d,r13d
  408b6e:	xor    ebp,ebp
  408b70:	mov    rax,QWORD PTR [r12+0x78]
  408b75:	mov    rcx,QWORD PTR [rax+r13*1]
  408b79:	xor    eax,eax
  408b7b:	add    rcx,0x18
  408b7f:	nop
  408b80:	cmp    QWORD PTR [r12+rax*8+0x20],0x0
  408b86:	je     408b96 <__gcov_sort_n_vals@@Base+0x516>
  408b88:	cmp    rax,0x9
  408b8c:	je     408d10 <__gcov_sort_n_vals@@Base+0x690>
  408b92:	add    rcx,0x10
  408b96:	add    rax,0x1
  408b9a:	cmp    rax,0xa
  408b9e:	jne    408b80 <__gcov_sort_n_vals@@Base+0x500>
  408ba0:	add    ebp,0x1
  408ba3:	add    r13,0x8
  408ba7:	cmp    DWORD PTR [r12+0x70],ebp
  408bac:	jne    408b70 <__gcov_sort_n_vals@@Base+0x4f0>
  408bae:	mov    ebx,DWORD PTR [rsp+0x3c]
  408bb2:	mov    rsi,QWORD PTR [r12+0x18]
  408bb7:	mov    rdi,QWORD PTR [rsp+0x58]
  408bbc:	test   ebx,ebx
  408bbe:	je     408c05 <__gcov_sort_n_vals@@Base+0x585>
  408bc0:	movzx  edx,BYTE PTR [rsi]
  408bc3:	mov    rax,rsi
  408bc6:	cmp    dl,0x2f
  408bc9:	je     408e00 <__gcov_sort_n_vals@@Base+0x780>
  408bcf:	test   dl,dl
  408bd1:	je     408c05 <__gcov_sort_n_vals@@Base+0x585>
  408bd3:	mov    ecx,DWORD PTR [rsp+0x3c]
  408bd7:	jmp    408bef <__gcov_sort_n_vals@@Base+0x56f>
  408bd9:	nop    DWORD PTR [rax+0x0]
  408be0:	add    rax,0x1
  408be4:	movzx  edx,BYTE PTR [rax]
  408be7:	test   dl,dl
  408be9:	je     408c05 <__gcov_sort_n_vals@@Base+0x585>
  408beb:	test   ecx,ecx
  408bed:	je     408c05 <__gcov_sort_n_vals@@Base+0x585>
  408bef:	cmp    dl,0x2f
  408bf2:	jne    408be0 <__gcov_sort_n_vals@@Base+0x560>
  408bf4:	mov    rsi,rax
  408bf7:	add    rax,0x1
  408bfb:	movzx  edx,BYTE PTR [rax]
  408bfe:	sub    ecx,0x1
  408c01:	test   dl,dl
  408c03:	jne    408beb <__gcov_sort_n_vals@@Base+0x56b>
  408c05:	cmp    QWORD PTR [rsp+0x20],0x0
  408c0b:	je     408c22 <__gcov_sort_n_vals@@Base+0x5a2>
  408c0d:	cmp    BYTE PTR [rsi],0x2f
  408c10:	je     408c22 <__gcov_sort_n_vals@@Base+0x5a2>
  408c12:	mov    rax,QWORD PTR [rsp+0x58]
  408c17:	mov    rdi,QWORD PTR [rsp+0x80]
  408c1f:	mov    BYTE PTR [rax],0x2f
  408c22:	call   402090 <strcpy@plt>
  408c27:	mov    rdi,QWORD PTR [rsp+0x10]
  408c2c:	call   407fc0 <read_boolean_unary_expression@@Base+0x551>
  408c31:	test   eax,eax
  408c33:	je     408d8e <__gcov_sort_n_vals@@Base+0x70e>
  408c39:	mov    edi,0x1
  408c3e:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408c43:	test   rax,rax
  408c46:	je     40930e <__gcov_sort_n_vals@@Base+0xc8e>
  408c4c:	mov    eax,DWORD PTR [rax]
  408c4e:	test   eax,eax
  408c50:	je     40930e <__gcov_sort_n_vals@@Base+0xc8e>
  408c56:	cmp    eax,0x67636461
  408c5b:	je     408e80 <__gcov_sort_n_vals@@Base+0x800>
  408c61:	mov    rsi,QWORD PTR [rsp+0x10]
  408c66:	lea    rdi,[rip+0x1e4b]        # 40aab8 <_IO_stdin_used@@Base+0xab8>
  408c6d:	xor    eax,eax
  408c6f:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  408c74:	mov    rax,QWORD PTR [rip+0x6aad]        # 40f728 <__bss_start@@Base+0xf98>
  408c7b:	test   rax,rax
  408c7e:	je     408c9c <__gcov_sort_n_vals@@Base+0x61c>
  408c80:	mov    edx,0xa
  408c85:	mov    rsi,rax
  408c88:	mov    rdi,r12
  408c8b:	call   407e90 <read_boolean_unary_expression@@Base+0x421>
  408c90:	test   rax,rax
  408c93:	mov    QWORD PTR [rip+0x6a8e],rax        # 40f728 <__bss_start@@Base+0xf98>
  408c9a:	jne    408c80 <__gcov_sort_n_vals@@Base+0x600>
  408c9c:	call   4080f0 <read_boolean_unary_expression@@Base+0x681>
  408ca1:	test   eax,eax
  408ca3:	je     408cc3 <__gcov_sort_n_vals@@Base+0x643>
  408ca5:	lea    rax,[rip+0x1dc4]        # 40aa70 <_IO_stdin_used@@Base+0xa70>
  408cac:	lea    rdi,[rip+0x1edb]        # 40ab8e <_IO_stdin_used@@Base+0xb8e>
  408cb3:	mov    rsi,QWORD PTR [rsp+0x10]
  408cb8:	cmovs  rdi,rax
  408cbc:	xor    eax,eax
  408cbe:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  408cc3:	mov    r12,QWORD PTR [r12+0x8]
  408cc8:	test   r12,r12
  408ccb:	jne    408b43 <__gcov_sort_n_vals@@Base+0x4c3>
  408cd1:	mov    rdi,QWORD PTR [rsp+0x10]
  408cd6:	add    rsp,0x4808
  408cdd:	pop    rbx
  408cde:	pop    rbp
  408cdf:	pop    r12
  408ce1:	pop    r13
  408ce3:	pop    r14
  408ce5:	pop    r15
  408ce7:	jmp    402040 <free@plt>
  408cec:	mov    edx,DWORD PTR [rdi+0x10]
  408cef:	jmp    408819 <__gcov_sort_n_vals@@Base+0x199>
  408cf4:	xor    r14d,r14d
  408cf7:	jmp    408848 <__gcov_sort_n_vals@@Base+0x1c8>
  408cfc:	xor    edx,edx
  408cfe:	jmp    408819 <__gcov_sort_n_vals@@Base+0x199>
  408d03:	nop    DWORD PTR [rax+rax*1+0x0]
  408d08:	mov    eax,edx
  408d0a:	jmp    408a31 <__gcov_sort_n_vals@@Base+0x3b1>
  408d0f:	nop
  408d10:	mov    r14d,DWORD PTR [rcx]
  408d13:	mov    eax,0x38e38e39
  408d18:	imul   r14d
  408d1b:	mov    eax,r14d
  408d1e:	sar    eax,0x1f
  408d21:	sar    edx,1
  408d23:	mov    ebx,edx
  408d25:	sub    ebx,eax
  408d27:	lea    eax,[rbx+rbx*8]
  408d2a:	mov    ebx,r14d
  408d2d:	sub    ebx,eax
  408d2f:	jne    4099ea <__gcov_sort_n_vals@@Base+0x136a>
  408d35:	mov    r15,QWORD PTR [rcx+0x8]
  408d39:	add    r15,0x8
  408d3d:	test   r14d,r14d
  408d40:	jle    408ba0 <__gcov_sort_n_vals@@Base+0x520>
  408d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d50:	mov    rdi,r15
  408d53:	mov    esi,0x8
  408d58:	add    ebx,0x9
  408d5b:	call   408680 <__gcov_sort_n_vals@@Base>
  408d60:	add    r15,0x48
  408d64:	cmp    r14d,ebx
  408d67:	jg     408d50 <__gcov_sort_n_vals@@Base+0x6d0>
  408d69:	add    ebp,0x1
  408d6c:	add    r13,0x8
  408d70:	cmp    DWORD PTR [r12+0x70],ebp
  408d75:	jne    408b70 <__gcov_sort_n_vals@@Base+0x4f0>
  408d7b:	jmp    408bae <__gcov_sort_n_vals@@Base+0x52e>
  408d80:	mov    r12d,ebp
  408d83:	mov    r11d,0x1
  408d89:	jmp    4088f4 <__gcov_sort_n_vals@@Base+0x274>
  408d8e:	mov    rbx,QWORD PTR [rsp+0x10]
  408d93:	movzx  eax,BYTE PTR [rbx]
  408d96:	cmp    al,0x2f
  408d98:	je     408e70 <__gcov_sort_n_vals@@Base+0x7f0>
  408d9e:	test   al,al
  408da0:	je     408ddf <__gcov_sort_n_vals@@Base+0x75f>
  408da2:	mov    rbp,QWORD PTR [rsp+0x10]
  408da7:	jmp    408dbb <__gcov_sort_n_vals@@Base+0x73b>
  408da9:	nop    DWORD PTR [rax+0x0]
  408db0:	add    rbx,0x1
  408db4:	movzx  eax,BYTE PTR [rbx]
  408db7:	test   al,al
  408db9:	je     408ddf <__gcov_sort_n_vals@@Base+0x75f>
  408dbb:	cmp    al,0x2f
  408dbd:	jne    408db0 <__gcov_sort_n_vals@@Base+0x730>
  408dbf:	xor    esi,esi
  408dc1:	mov    BYTE PTR [rbx],0x0
  408dc4:	mov    rdi,rbp
  408dc7:	call   402220 <access@plt>
  408dcc:	cmp    eax,0xffffffff
  408dcf:	je     408e0d <__gcov_sort_n_vals@@Base+0x78d>
  408dd1:	mov    BYTE PTR [rbx],0x2f
  408dd4:	add    rbx,0x1
  408dd8:	movzx  eax,BYTE PTR [rbx]
  408ddb:	test   al,al
  408ddd:	jne    408dbb <__gcov_sort_n_vals@@Base+0x73b>
  408ddf:	mov    rdi,QWORD PTR [rsp+0x10]
  408de4:	call   407fc0 <read_boolean_unary_expression@@Base+0x551>
  408de9:	test   eax,eax
  408deb:	jne    408c39 <__gcov_sort_n_vals@@Base+0x5b9>
  408df1:	mov    rcx,QWORD PTR [rsp+0x10]
  408df6:	lea    rdx,[rip+0x1de0]        # 40abdd <_IO_stdin_used@@Base+0xbdd>
  408dfd:	jmp    408e4c <__gcov_sort_n_vals@@Base+0x7cc>
  408dff:	nop
  408e00:	lea    rax,[rsi+0x1]
  408e04:	movzx  edx,BYTE PTR [rsi+0x1]
  408e08:	jmp    408bcf <__gcov_sort_n_vals@@Base+0x54f>
  408e0d:	mov    esi,0x1ed
  408e12:	mov    rdi,rbp
  408e15:	call   4020a0 <mkdir@plt>
  408e1a:	cmp    eax,0xffffffff
  408e1d:	jne    408dd1 <__gcov_sort_n_vals@@Base+0x751>
  408e1f:	call   402070 <__errno_location@plt>
  408e24:	cmp    DWORD PTR [rax],0x11
  408e27:	je     408dd1 <__gcov_sort_n_vals@@Base+0x751>
  408e29:	mov    r14,QWORD PTR [rsp+0x10]
  408e2e:	lea    rdi,[rip+0x1c5b]        # 40aa90 <_IO_stdin_used@@Base+0xa90>
  408e35:	xor    eax,eax
  408e37:	mov    rsi,r14
  408e3a:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  408e3f:	lea    rdx,[rip+0x1d84]        # 40abca <_IO_stdin_used@@Base+0xbca>
  408e46:	mov    BYTE PTR [rbx],0x2f
  408e49:	mov    rcx,r14
  408e4c:	mov    rax,QWORD PTR [rip+0x41a5]        # 40cff8 <stderr@GLIBC_2.2.5>
  408e53:	mov    esi,0x1
  408e58:	mov    rdi,QWORD PTR [rax]
  408e5b:	xor    eax,eax
  408e5d:	call   402260 <__fprintf_chk@plt>
  408e62:	jmp    408cc3 <__gcov_sort_n_vals@@Base+0x643>
  408e67:	nop    WORD PTR [rax+rax*1+0x0]
  408e70:	mov    rax,rbx
  408e73:	lea    rbx,[rbx+0x1]
  408e77:	movzx  eax,BYTE PTR [rax+0x1]
  408e7b:	jmp    408d9e <__gcov_sort_n_vals@@Base+0x71e>
  408e80:	mov    edi,0x1
  408e85:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408e8a:	test   rax,rax
  408e8d:	je     4099c4 <__gcov_sort_n_vals@@Base+0x1344>
  408e93:	mov    esi,DWORD PTR [rax]
  408e95:	lea    rax,[r12+0x18]
  408e9a:	mov    rdx,QWORD PTR [rsp+0x10]
  408e9f:	mov    rdi,rax
  408ea2:	mov    QWORD PTR [rsp+0x78],rax
  408ea7:	call   407f00 <read_boolean_unary_expression@@Base+0x491>
  408eac:	test   eax,eax
  408eae:	je     408c74 <__gcov_sort_n_vals@@Base+0x5f4>
  408eb4:	mov    edi,0x1
  408eb9:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408ebe:	test   rax,rax
  408ec1:	je     4099cb <__gcov_sort_n_vals@@Base+0x134b>
  408ec7:	mov    eax,DWORD PTR [rax]
  408ec9:	cmp    DWORD PTR [r12+0x10],eax
  408ece:	jne    40930e <__gcov_sort_n_vals@@Base+0xc8e>
  408ed4:	mov    r15,0x40fe40
  408edb:	lea    rbx,[rip+0x683e]        # 40f720 <__bss_start@@Base+0xf90>
  408ee2:	lea    rbp,[rsp+0x3030]
  408eea:	xor    r13d,r13d
  408eed:	mov    eax,DWORD PTR [r15+0xc]
  408ef1:	add    eax,DWORD PTR [r15+0x8]
  408ef5:	mov    edi,0x1
  408efa:	mov    DWORD PTR [rsp+0x28],eax
  408efe:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408f03:	test   rax,rax
  408f06:	je     408fa8 <__gcov_sort_n_vals@@Base+0x928>
  408f0c:	mov    eax,DWORD PTR [rax]
  408f0e:	cmp    eax,0xa3000000
  408f13:	jne    4099ba <__gcov_sort_n_vals@@Base+0x133a>
  408f19:	mov    edi,0x1
  408f1e:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  408f23:	mov    rdi,rbp
  408f26:	call   4083a0 <read_boolean_unary_expression@@Base+0x931>
  408f2b:	cmp    QWORD PTR [r15],0x0
  408f2f:	je     4092ef <__gcov_sort_n_vals@@Base+0xc6f>
  408f35:	mov    eax,DWORD PTR [r15+0x18]
  408f39:	test   eax,eax
  408f3b:	jne    4092e4 <__gcov_sort_n_vals@@Base+0xc64>
  408f41:	test   r13d,r13d
  408f44:	jne    408f7d <__gcov_sort_n_vals@@Base+0x8fd>
  408f46:	mov    eax,DWORD PTR [rsp+0x60]
  408f4a:	cmp    DWORD PTR [rsp+0x3030],eax
  408f51:	jne    408eed <__gcov_sort_n_vals@@Base+0x86d>
  408f53:	mov    eax,DWORD PTR [rsp+0x98]
  408f5a:	cmp    DWORD PTR [rsp+0x3038],eax
  408f61:	jne    408eed <__gcov_sort_n_vals@@Base+0x86d>
  408f63:	mov    ecx,0x2f9
  408f68:	mov    rdi,QWORD PTR [rsp+0x30]
  408f6d:	mov    rsi,rbp
  408f70:	mov    r13d,DWORD PTR [rsp+0x28]
  408f75:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  408f78:	jmp    408eed <__gcov_sort_n_vals@@Base+0x86d>
  408f7d:	mov    edi,0x17d0
  408f82:	call   4021c0 <malloc@plt>
  408f87:	mov    ecx,0x2f9
  408f8c:	mov    QWORD PTR [rbx],rax
  408f8f:	lea    rdi,[rax+0x8]
  408f93:	mov    rsi,rbp
  408f96:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  408f99:	mov    QWORD PTR [rax],0x0
  408fa0:	mov    rbx,QWORD PTR [rbx]
  408fa3:	jmp    408eed <__gcov_sort_n_vals@@Base+0x86d>
  408fa8:	mov    DWORD PTR [rsp+0x18],r13d
  408fad:	xor    eax,eax
  408faf:	lea    rbx,[rip+0x6772]        # 40f728 <__bss_start@@Base+0xf98>
  408fb6:	mov    QWORD PTR [rsp+0x48],0x0
  408fbf:	mov    QWORD PTR [rsp+0x70],r15
  408fc4:	mov    QWORD PTR [rsp+0x50],rbx
  408fc9:	mov    rbx,QWORD PTR [rsp+0x48]
  408fce:	cmp    ebx,DWORD PTR [r12+0x70]
  408fd3:	mov    DWORD PTR [rsp+0x88],ebx
  408fda:	mov    DWORD PTR [rsp+0x64],ebx
  408fde:	je     409b15 <__gcov_sort_n_vals@@Base+0x1495>
  408fe4:	mov    rdx,QWORD PTR [r12+0x78]
  408fe9:	mov    rbx,QWORD PTR [rsp+0x48]
  408fee:	cmp    eax,0x1000000
  408ff3:	mov    rbx,QWORD PTR [rdx+rbx*8]
  408ff7:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  408ffd:	mov    edi,0x1
  409002:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409007:	test   rax,rax
  40900a:	je     4091c9 <__gcov_sort_n_vals@@Base+0xb49>
  409010:	mov    eax,DWORD PTR [rax]
  409012:	test   eax,eax
  409014:	je     4091c9 <__gcov_sort_n_vals@@Base+0xb49>
  40901a:	cmp    eax,0x3
  40901d:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  409023:	test   rbx,rbx
  409026:	je     409031 <__gcov_sort_n_vals@@Base+0x9b1>
  409028:	cmp    QWORD PTR [rbx],r12
  40902b:	je     409a69 <__gcov_sort_n_vals@@Base+0x13e9>
  409031:	mov    rcx,QWORD PTR [rsp+0x78]
  409036:	lea    rdx,[r12+0x68]
  40903b:	xor    eax,eax
  40903d:	cmp    QWORD PTR [rdx],0x1
  409041:	sbb    eax,0xffffffff
  409044:	sub    rdx,0x8
  409048:	cmp    rdx,rcx
  40904b:	jne    40903d <__gcov_sort_n_vals@@Base+0x9bd>
  40904d:	shl    eax,0x4
  409050:	lea    edi,[rax+0x38]
  409053:	mov    DWORD PTR [rsp+0x40],edi
  409057:	call   4021c0 <malloc@plt>
  40905c:	test   rax,rax
  40905f:	mov    r13,rax
  409062:	mov    ecx,DWORD PTR [rsp+0x40]
  409066:	je     40925c <__gcov_sort_n_vals@@Base+0xbdc>
  40906c:	mov    QWORD PTR [rax],0x0
  409073:	mov    eax,DWORD PTR [rsp+0x64]
  409077:	mov    edi,0x1
  40907c:	mov    DWORD PTR [r13+0x8],eax
  409080:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409085:	test   rax,rax
  409088:	je     409a62 <__gcov_sort_n_vals@@Base+0x13e2>
  40908e:	mov    eax,DWORD PTR [rax]
  409090:	mov    DWORD PTR [r13+0x18],eax
  409094:	mov    edi,0x1
  409099:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40909e:	test   rax,rax
  4090a1:	je     409a5b <__gcov_sort_n_vals@@Base+0x13db>
  4090a7:	mov    eax,DWORD PTR [rax]
  4090a9:	mov    DWORD PTR [r13+0x1c],eax
  4090ad:	mov    edi,0x1
  4090b2:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4090b7:	test   rax,rax
  4090ba:	je     409a54 <__gcov_sort_n_vals@@Base+0x13d4>
  4090c0:	mov    eax,DWORD PTR [rax]
  4090c2:	mov    DWORD PTR [r13+0x20],eax
  4090c6:	mov    r14d,0x1a10000
  4090cc:	xor    ebx,ebx
  4090ce:	mov    DWORD PTR [rsp+0x68],0x0
  4090d6:	mov    QWORD PTR [rsp+0x40],r13
  4090db:	cmp    QWORD PTR [r12+rbx*8+0x20],0x0
  4090e1:	mov    ebp,ebx
  4090e3:	je     40919f <__gcov_sort_n_vals@@Base+0xb1f>
  4090e9:	mov    edi,0x1
  4090ee:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4090f3:	test   rax,rax
  4090f6:	je     4091e9 <__gcov_sort_n_vals@@Base+0xb69>
  4090fc:	cmp    r14d,DWORD PTR [rax]
  4090ff:	jne    4091e9 <__gcov_sort_n_vals@@Base+0xb69>
  409105:	mov    edi,0x1
  40910a:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40910f:	test   rax,rax
  409112:	je     409250 <__gcov_sort_n_vals@@Base+0xbd0>
  409118:	mov    esi,DWORD PTR [rax]
  40911a:	shr    esi,1
  40911c:	lea    edi,[rsi*8+0x0]
  409123:	mov    r15,rdi
  409126:	mov    DWORD PTR [rsp+0x8c],esi
  40912d:	call   4021c0 <malloc@plt>
  409132:	test   rax,rax
  409135:	mov    r13,rax
  409138:	je     409a45 <__gcov_sort_n_vals@@Base+0x13c5>
  40913e:	mov    eax,DWORD PTR [rsp+0x68]
  409142:	mov    esi,DWORD PTR [rsp+0x8c]
  409149:	shl    rax,0x4
  40914d:	add    rax,QWORD PTR [rsp+0x40]
  409152:	test   esi,esi
  409154:	mov    DWORD PTR [rax+0x28],esi
  409157:	mov    QWORD PTR [rax+0x30],r13
  40915b:	lea    eax,[rsi-0x1]
  40915e:	lea    rbp,[r13+rax*8+0x8]
  409163:	jne    40917c <__gcov_sort_n_vals@@Base+0xafc>
  409165:	jmp    40919a <__gcov_sort_n_vals@@Base+0xb1a>
  409167:	nop    WORD PTR [rax+rax*1+0x0]
  409170:	mov    rax,QWORD PTR [rax]
  409173:	cmp    rbp,r13
  409176:	mov    QWORD PTR [r13-0x8],rax
  40917a:	je     40919a <__gcov_sort_n_vals@@Base+0xb1a>
  40917c:	mov    edi,0x2
  409181:	add    r13,0x8
  409185:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  40918a:	test   rax,rax
  40918d:	jne    409170 <__gcov_sort_n_vals@@Base+0xaf0>
  40918f:	xor    eax,eax
  409191:	cmp    rbp,r13
  409194:	mov    QWORD PTR [r13-0x8],rax
  409198:	jne    40917c <__gcov_sort_n_vals@@Base+0xafc>
  40919a:	add    DWORD PTR [rsp+0x68],0x1
  40919f:	add    r14d,0x20000
  4091a6:	add    rbx,0x1
  4091aa:	cmp    r14d,0x1b50000
  4091b1:	jne    4090db <__gcov_sort_n_vals@@Base+0xa5b>
  4091b7:	mov    r13,QWORD PTR [rsp+0x40]
  4091bc:	mov    rax,QWORD PTR [rsp+0x50]
  4091c1:	mov    QWORD PTR [rsp+0x50],r13
  4091c6:	mov    QWORD PTR [rax],r13
  4091c9:	mov    edi,0x1
  4091ce:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  4091d3:	test   rax,rax
  4091d6:	je     409280 <__gcov_sort_n_vals@@Base+0xc00>
  4091dc:	mov    eax,DWORD PTR [rax]
  4091de:	add    QWORD PTR [rsp+0x48],0x1
  4091e4:	jmp    408fc9 <__gcov_sort_n_vals@@Base+0x949>
  4091e9:	mov    r13,QWORD PTR [rsp+0x40]
  4091ee:	lea    rcx,[rip+0x1979]        # 40ab6e <_IO_stdin_used@@Base+0xb6e>
  4091f5:	mov    edx,DWORD PTR [rsp+0x64]
  4091f9:	mov    rsi,QWORD PTR [rsp+0x10]
  4091fe:	lea    rdi,[rip+0x1903]        # 40ab08 <_IO_stdin_used@@Base+0xb08>
  409205:	mov    r8d,ebp
  409208:	xor    eax,eax
  40920a:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  40920f:	mov    edx,ebx
  409211:	mov    rsi,r13
  409214:	mov    rdi,r12
  409217:	call   407e90 <read_boolean_unary_expression@@Base+0x421>
  40921c:	test   rax,rax
  40921f:	mov    QWORD PTR [rsp+0x50],rax
  409224:	jne    4091c9 <__gcov_sort_n_vals@@Base+0xb49>
  409226:	mov    ecx,DWORD PTR [rsp+0x88]
  40922d:	mov    rsi,QWORD PTR [rsp+0x10]
  409232:	lea    rdx,[rip+0x19be]        # 40abf7 <_IO_stdin_used@@Base+0xbf7>
  409239:	lea    rdi,[rip+0x18a0]        # 40aae0 <_IO_stdin_used@@Base+0xae0>
  409240:	xor    eax,eax
  409242:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  409247:	jmp    408c74 <__gcov_sort_n_vals@@Base+0x5f4>
  40924c:	nop    DWORD PTR [rax+0x0]
  409250:	xor    edi,edi
  409252:	xor    r15d,r15d
  409255:	xor    esi,esi
  409257:	jmp    409126 <__gcov_sort_n_vals@@Base+0xaa6>
  40925c:	mov    ebx,0xffffffff
  409261:	test   ecx,ecx
  409263:	je     409a37 <__gcov_sort_n_vals@@Base+0x13b7>
  409269:	mov    ebp,ecx
  40926b:	lea    rcx,[rip+0x18ec]        # 40ab5e <_IO_stdin_used@@Base+0xb5e>
  409272:	jmp    4091f5 <__gcov_sort_n_vals@@Base+0xb75>
  409277:	nop    WORD PTR [rax+rax*1+0x0]
  409280:	xor    eax,eax
  409282:	jmp    4091de <__gcov_sort_n_vals@@Base+0xb5e>
  409287:	mov    edi,0x1
  40928c:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409291:	test   rax,rax
  409294:	je     409226 <__gcov_sort_n_vals@@Base+0xba6>
  409296:	xor    r15d,r15d
  409299:	mov    eax,DWORD PTR [rax]
  40929b:	cmp    ebp,r15d
  40929e:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  4092a0:	mov    esi,DWORD PTR [rbx]
  4092a2:	lea    edx,[rsi+rsi*1]
  4092a5:	cmp    edx,eax
  4092a7:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  4092ad:	mov    rdi,QWORD PTR [rbx+0x8]
  4092b1:	add    rbx,0x10
  4092b5:	call   r14
  4092b8:	add    ebp,0x20000
  4092be:	add    r13,0x8
  4092c2:	cmp    ebp,0x1b50000
  4092c8:	jne    409ac9 <__gcov_sort_n_vals@@Base+0x1449>
  4092ce:	mov    rax,QWORD PTR [rsp+0x70]
  4092d3:	cmp    QWORD PTR [rax],0x0
  4092d7:	je     4092ef <__gcov_sort_n_vals@@Base+0xc6f>
  4092d9:	mov    eax,DWORD PTR [rax+0x18]
  4092dc:	test   eax,eax
  4092de:	je     4091c9 <__gcov_sort_n_vals@@Base+0xb49>
  4092e4:	test   eax,eax
  4092e6:	lea    rdx,[rip+0x1892]        # 40ab7f <_IO_stdin_used@@Base+0xb7f>
  4092ed:	js     4092f6 <__gcov_sort_n_vals@@Base+0xc76>
  4092ef:	lea    rdx,[rip+0x1892]        # 40ab88 <_IO_stdin_used@@Base+0xb88>
  4092f6:	mov    rsi,QWORD PTR [rsp+0x10]
  4092fb:	lea    rdi,[rip+0x18fe]        # 40ac00 <_IO_stdin_used@@Base+0xc00>
  409302:	xor    eax,eax
  409304:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  409309:	jmp    408c74 <__gcov_sort_n_vals@@Base+0x5f4>
  40930e:	mov    r15,0x40fe40
  409315:	xor    edx,edx
  409317:	xor    esi,esi
  409319:	mov    rdi,QWORD PTR [r15]
  40931c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  409324:	mov    DWORD PTR [r15+0x8],0x0
  40932c:	mov    DWORD PTR [r15+0xc],0x0
  409334:	call   4021f0 <fseek@plt>
  409339:	mov    rdi,QWORD PTR [rsp+0x30]
  40933e:	xor    eax,eax
  409340:	mov    ecx,0x2f9
  409345:	rep stos QWORD PTR es:[rdi],rax
  409348:	cmp    QWORD PTR [r12+0x20],0x0
  40934e:	je     4098f0 <__gcov_sort_n_vals@@Base+0x1270>
  409354:	mov    DWORD PTR [rsp+0x28],0x0
  40935c:	xor    eax,eax
  40935e:	mov    DWORD PTR [rsp+0x18],0x0
  409366:	mov    r9d,DWORD PTR [rsp+0x6c]
  40936b:	test   r9d,r9d
  40936e:	jne    40937a <__gcov_sort_n_vals@@Base+0xcfa>
  409370:	lea    edx,[rax+0x1]
  409373:	mov    DWORD PTR [rsp+0x186c],edx
  40937a:	test   eax,eax
  40937c:	je     409869 <__gcov_sort_n_vals@@Base+0x11e9>
  409382:	mov    rax,QWORD PTR [rsp+0xa0]
  40938a:	add    QWORD PTR [rsp+0x1870],rax
  409392:	mov    rax,QWORD PTR [rsp+0xa8]
  40939a:	cmp    QWORD PTR [rsp+0x1878],rax
  4093a2:	jl     4099dd <__gcov_sort_n_vals@@Base+0x135d>
  4093a8:	lea    rdi,[rsp+0x3030]
  4093b0:	add    QWORD PTR [rsp+0x1880],rax
  4093b8:	mov    ecx,0x2f4
  4093bd:	xor    eax,eax
  4093bf:	xor    r11d,r11d
  4093c2:	xor    r14d,r14d
  4093c5:	mov    QWORD PTR [rsp+0x40],rdi
  4093ca:	mov    esi,0xfb
  4093cf:	mov    r8d,0xfb
  4093d5:	rep stos QWORD PTR es:[rdi],rax
  4093d8:	mov    rax,QWORD PTR [rsp+0x30]
  4093dd:	xor    edi,edi
  4093df:	lea    rbp,[rax+0x17b0]
  4093e6:	mov    rax,QWORD PTR [rsp+0x8]
  4093eb:	lea    r15,[rax+0x28]
  4093ef:	mov    r10d,DWORD PTR [rbp+0x0]
  4093f3:	mov    rbx,QWORD PTR [rbp+0x10]
  4093f7:	mov    ecx,r14d
  4093fa:	test   r10d,r10d
  4093fd:	je     40978f <__gcov_sort_n_vals@@Base+0x110f>
  409403:	nop    DWORD PTR [rax+rax*1+0x0]
  409408:	test   edi,edi
  40940a:	jne    409700 <__gcov_sort_n_vals@@Base+0x1080>
  409410:	test   esi,esi
  409412:	js     40945a <__gcov_sort_n_vals@@Base+0xdda>
  409414:	movsxd rax,esi
  409417:	lea    rax,[rax+rax*2]
  40941b:	shl    rax,0x3
  40941f:	lea    rdx,[r15+rax*1]
  409423:	mov    edi,DWORD PTR [rdx]
  409425:	test   edi,edi
  409427:	jne    409860 <__gcov_sort_n_vals@@Base+0x11e0>
  40942d:	mov    rdi,QWORD PTR [rsp+0x8]
  409432:	lea    rax,[rdi+rax*1+0x10]
  409437:	jmp    409452 <__gcov_sort_n_vals@@Base+0xdd2>
  409439:	nop    DWORD PTR [rax+0x0]
  409440:	mov    rdx,rax
  409443:	sub    rax,0x18
  409447:	mov    edi,DWORD PTR [rax+0x18]
  40944a:	test   edi,edi
  40944c:	jne    409860 <__gcov_sort_n_vals@@Base+0x11e0>
  409452:	sub    esi,0x1
  409455:	cmp    esi,0xffffffff
  409458:	jne    409440 <__gcov_sort_n_vals@@Base+0xdc0>
  40945a:	movsxd rdx,r8d
  40945d:	movsxd r14,ecx
  409460:	mov    rcx,QWORD PTR [rbp+0x8]
  409464:	lea    rax,[rdx+rdx*2]
  409468:	shl    rax,0x3
  40946c:	add    DWORD PTR [rsp+rax*1+0x3030],r10d
  409474:	add    QWORD PTR [rsp+rax*1+0x3040],rbx
  40947c:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  409484:	test   rax,rax
  409487:	je     40948e <__gcov_sort_n_vals@@Base+0xe0e>
  409489:	cmp    rax,rcx
  40948c:	jle    40949a <__gcov_sort_n_vals@@Base+0xe1a>
  40948e:	lea    rax,[rdx+rdx*2]
  409492:	mov    QWORD PTR [rsp+rax*8+0x3038],rcx
  40949a:	lea    rax,[rdx+rdx*2]
  40949e:	mov    rbx,QWORD PTR [rsp+0x30]
  4094a3:	shl    rax,0x3
  4094a7:	lea    rdx,[rbx+rax*1+0x10]
  4094ac:	mov    rbx,QWORD PTR [rsp+0x40]
  4094b1:	lea    rax,[rbx+rax*1-0x18]
  4094b6:	jmp    4094ea <__gcov_sort_n_vals@@Base+0xe6a>
  4094b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094c0:	mov    ecx,DWORD PTR [rdx]
  4094c2:	add    DWORD PTR [rax],ecx
  4094c4:	mov    rcx,QWORD PTR [rdx+0x10]
  4094c8:	add    QWORD PTR [rax+0x10],rcx
  4094cc:	mov    rcx,QWORD PTR [rax+0x8]
  4094d0:	mov    rsi,QWORD PTR [rdx+0x8]
  4094d4:	test   rcx,rcx
  4094d7:	je     4094de <__gcov_sort_n_vals@@Base+0xe5e>
  4094d9:	cmp    rcx,rsi
  4094dc:	jle    4094e2 <__gcov_sort_n_vals@@Base+0xe62>
  4094de:	mov    QWORD PTR [rax+0x8],rsi
  4094e2:	sub    rdx,0x18
  4094e6:	sub    rax,0x18
  4094ea:	sub    r8d,0x1
  4094ee:	jns    4094c0 <__gcov_sort_n_vals@@Base+0xe40>
  4094f0:	lea    rax,[r14+r14*2]
  4094f4:	lea    rdi,[rsp+0x1888]
  4094fc:	mov    ecx,0x2f4
  409501:	mov    rsi,QWORD PTR [rsp+0x40]
  409506:	add    QWORD PTR [rsp+rax*8+0x3040],r11
  40950e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409511:	mov    r8d,DWORD PTR [rsp+0x28]
  409516:	mov    eax,DWORD PTR [rsp+0x60]
  40951a:	test   r8d,r8d
  40951d:	mov    DWORD PTR [rsp+0x1860],eax
  409524:	je     409903 <__gcov_sort_n_vals@@Base+0x1283>
  40952a:	mov    edi,DWORD PTR [rsp+0x18]
  40952e:	test   edi,edi
  409530:	jne    409937 <__gcov_sort_n_vals@@Base+0x12b7>
  409536:	mov    rsi,QWORD PTR [rsp+0x30]
  40953b:	mov    edi,0xa3000000
  409540:	mov    ebx,0xa3000000
  409545:	call   4081b0 <read_boolean_unary_expression@@Base+0x741>
  40954a:	mov    rbp,QWORD PTR [rip+0x61cf]        # 40f720 <__bss_start@@Base+0xf90>
  409551:	test   rbp,rbp
  409554:	je     40957c <__gcov_sort_n_vals@@Base+0xefc>
  409556:	lea    rsi,[rbp+0x8]
  40955a:	mov    edi,ebx
  40955c:	call   4081b0 <read_boolean_unary_expression@@Base+0x741>
  409561:	mov    rdi,QWORD PTR [rip+0x61b8]        # 40f720 <__bss_start@@Base+0xf90>
  409568:	mov    rbp,QWORD PTR [rdi]
  40956b:	call   402040 <free@plt>
  409570:	test   rbp,rbp
  409573:	mov    QWORD PTR [rip+0x61a6],rbp        # 40f720 <__bss_start@@Base+0xf90>
  40957a:	jne    409556 <__gcov_sort_n_vals@@Base+0xed6>
  40957c:	mov    esi,DWORD PTR [r12+0x70]
  409581:	mov    DWORD PTR [rsp+0x18],0x0
  409589:	test   esi,esi
  40958b:	je     4098db <__gcov_sort_n_vals@@Base+0x125b>
  409591:	mov    QWORD PTR [rsp+0x28],r12
  409596:	jmp    4095e6 <__gcov_sort_n_vals@@Base+0xf66>
  409598:	mov    rbx,QWORD PTR [rsp+0x28]
  40959d:	mov    eax,DWORD PTR [rsp+0x18]
  4095a1:	mov    rdx,QWORD PTR [rbx+0x78]
  4095a5:	mov    rbp,QWORD PTR [rdx+rax*8]
  4095a9:	test   rbp,rbp
  4095ac:	je     4095b8 <__gcov_sort_n_vals@@Base+0xf38>
  4095ae:	cmp    QWORD PTR [rbp+0x0],rbx
  4095b2:	je     4098cb <__gcov_sort_n_vals@@Base+0x124b>
  4095b8:	mov    edi,0x2
  4095bd:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4095c2:	mov    DWORD PTR [rax],0x1000000
  4095c8:	mov    DWORD PTR [rax+0x4],0x0
  4095cf:	mov    rbx,QWORD PTR [rsp+0x28]
  4095d4:	add    DWORD PTR [rsp+0x18],0x1
  4095d9:	mov    eax,DWORD PTR [rsp+0x18]
  4095dd:	cmp    eax,DWORD PTR [rbx+0x70]
  4095e0:	je     4098d8 <__gcov_sort_n_vals@@Base+0x1258>
  4095e6:	mov    rbp,QWORD PTR [rip+0x613b]        # 40f728 <__bss_start@@Base+0xf98>
  4095ed:	test   rbp,rbp
  4095f0:	je     409598 <__gcov_sort_n_vals@@Base+0xf18>
  4095f2:	mov    eax,DWORD PTR [rsp+0x18]
  4095f6:	cmp    DWORD PTR [rbp+0x8],eax
  4095f9:	jne    409598 <__gcov_sort_n_vals@@Base+0xf18>
  4095fb:	add    rbp,0x10
  4095ff:	mov    DWORD PTR [rsp+0x40],0x1
  409607:	mov    edi,0x2
  40960c:	add    rbp,0x18
  409610:	mov    r13d,0x1a10000
  409616:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40961b:	mov    DWORD PTR [rax],0x1000000
  409621:	mov    DWORD PTR [rax+0x4],0x3
  409628:	mov    edi,0x1
  40962d:	mov    ebx,DWORD PTR [rbp-0x10]
  409630:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  409635:	mov    edi,0x1
  40963a:	mov    DWORD PTR [rax],ebx
  40963c:	mov    ebx,DWORD PTR [rbp-0xc]
  40963f:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  409644:	mov    edi,0x1
  409649:	mov    DWORD PTR [rax],ebx
  40964b:	mov    ebx,DWORD PTR [rbp-0x8]
  40964e:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  409653:	mov    DWORD PTR [rax],ebx
  409655:	mov    rax,QWORD PTR [rsp+0x28]
  40965a:	lea    r14,[rax+0x20]
  40965e:	xchg   ax,ax
  409660:	cmp    QWORD PTR [r14],0x0
  409664:	je     4096b4 <__gcov_sort_n_vals@@Base+0x1034>
  409666:	mov    ebx,DWORD PTR [rbp+0x0]
  409669:	mov    edi,0x2
  40966e:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  409673:	mov    r15,QWORD PTR [rbp+0x8]
  409677:	mov    DWORD PTR [rax],r13d
  40967a:	lea    edx,[rbx+rbx*1]
  40967d:	test   ebx,ebx
  40967f:	mov    DWORD PTR [rax+0x4],edx
  409682:	lea    eax,[rbx-0x1]
  409685:	lea    r12,[r15+rax*8+0x8]
  40968a:	je     4096b0 <__gcov_sort_n_vals@@Base+0x1030>
  40968c:	nop    DWORD PTR [rax+0x0]
  409690:	add    r15,0x8
  409694:	mov    rbx,QWORD PTR [r15-0x8]
  409698:	mov    edi,0x2
  40969d:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4096a2:	mov    DWORD PTR [rax],ebx
  4096a4:	sar    rbx,0x20
  4096a8:	cmp    r12,r15
  4096ab:	mov    DWORD PTR [rax+0x4],ebx
  4096ae:	jne    409690 <__gcov_sort_n_vals@@Base+0x1010>
  4096b0:	add    rbp,0x10
  4096b4:	add    r13d,0x20000
  4096bb:	add    r14,0x8
  4096bf:	cmp    r13d,0x1b50000
  4096c6:	jne    409660 <__gcov_sort_n_vals@@Base+0xfe0>
  4096c8:	mov    ecx,DWORD PTR [rsp+0x40]
  4096cc:	test   ecx,ecx
  4096ce:	je     4095cf <__gcov_sort_n_vals@@Base+0xf4f>
  4096d4:	mov    rsi,QWORD PTR [rip+0x604d]        # 40f728 <__bss_start@@Base+0xf98>
  4096db:	mov    rdi,QWORD PTR [rsp+0x28]
  4096e0:	mov    edx,0xa
  4096e5:	call   407e90 <read_boolean_unary_expression@@Base+0x421>
  4096ea:	mov    QWORD PTR [rip+0x6037],rax        # 40f728 <__bss_start@@Base+0xf98>
  4096f1:	jmp    4095cf <__gcov_sort_n_vals@@Base+0xf4f>
  4096f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409700:	movsxd rax,esi
  409703:	lea    rax,[rax+rax*2]
  409707:	lea    rdx,[r15+rax*8]
  40970b:	mov    r9,QWORD PTR [rdx+0x8]
  40970f:	add    r9,QWORD PTR [rbp+0x8]
  409713:	cmp    r10d,edi
  409716:	ja     409830 <__gcov_sort_n_vals@@Base+0x11b0>
  40971c:	cmp    r10d,edi
  40971f:	jae    4099d2 <__gcov_sort_n_vals@@Base+0x1352>
  409725:	mov    eax,r10d
  409728:	mov    ecx,edi
  40972a:	imul   rax,r11
  40972e:	cqo    
  409730:	idiv   rcx
  409733:	sub    r11,rax
  409736:	sub    edi,r10d
  409739:	mov    r14d,r10d
  40973c:	mov    r13,rbx
  40973f:	xor    r10d,r10d
  409742:	xor    ebx,ebx
  409744:	add    r13,rax
  409747:	test   r9,r9
  40974a:	jne    4097f0 <__gcov_sort_n_vals@@Base+0x1170>
  409750:	mov    ecx,r9d
  409753:	movsxd rdx,ecx
  409756:	lea    rax,[rdx+rdx*2]
  40975a:	shl    rax,0x3
  40975e:	add    DWORD PTR [rsp+rax*1+0x3030],r14d
  409766:	add    QWORD PTR [rsp+rax*1+0x3040],r13
  40976e:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  409776:	test   rax,rax
  409779:	je     4097e0 <__gcov_sort_n_vals@@Base+0x1160>
  40977b:	cmp    rax,r9
  40977e:	jg     4097e0 <__gcov_sort_n_vals@@Base+0x1160>
  409780:	cmp    edi,0x1
  409783:	sbb    esi,0x0
  409786:	test   r10d,r10d
  409789:	jne    409408 <__gcov_sort_n_vals@@Base+0xd88>
  40978f:	sub    r8d,0x1
  409793:	sub    rbp,0x18
  409797:	movsxd r14,ecx
  40979a:	cmp    r8d,0xffffffff
  40979e:	jne    4093ef <__gcov_sort_n_vals@@Base+0xd6f>
  4097a4:	cmp    edi,0x1
  4097a7:	adc    esi,0xffffffff
  4097aa:	test   esi,esi
  4097ac:	js     4094f0 <__gcov_sort_n_vals@@Base+0xe70>
  4097b2:	mov    rbx,QWORD PTR [rsp+0x8]
  4097b7:	movsxd rsi,esi
  4097ba:	lea    rax,[rsi+rsi*2]
  4097be:	lea    rdx,[rbx+0x20]
  4097c2:	lea    rax,[rbx+rax*8+0x38]
  4097c7:	add    r11,QWORD PTR [rax]
  4097ca:	sub    rax,0x18
  4097ce:	cmp    rdx,rax
  4097d1:	jne    4097c7 <__gcov_sort_n_vals@@Base+0x1147>
  4097d3:	jmp    4094f0 <__gcov_sort_n_vals@@Base+0xe70>
  4097d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4097e0:	lea    rax,[rdx+rdx*2]
  4097e4:	mov    QWORD PTR [rsp+rax*8+0x3038],r9
  4097ec:	jmp    409780 <__gcov_sort_n_vals@@Base+0x1100>
  4097ee:	xchg   ax,ax
  4097f0:	bsr    rax,r9
  4097f4:	mov    edx,0x3f
  4097f9:	xor    rax,0x3f
  4097fd:	sub    edx,eax
  4097ff:	cmp    edx,0x1
  409802:	jbe    409750 <__gcov_sort_n_vals@@Base+0x10d0>
  409808:	mov    ecx,0x3d
  40980d:	mov    rdx,r9
  409810:	sub    ecx,eax
  409812:	shr    rdx,cl
  409815:	mov    ecx,0x4000003e
  40981a:	and    edx,0x3
  40981d:	sub    ecx,eax
  40981f:	lea    ecx,[rdx+rcx*4]
  409822:	jmp    409753 <__gcov_sort_n_vals@@Base+0x10d3>
  409827:	nop    WORD PTR [rax+rax*1+0x0]
  409830:	mov    eax,edi
  409832:	mov    ecx,r10d
  409835:	mov    r14d,edi
  409838:	imul   rax,rbx
  40983c:	sub    r10d,edi
  40983f:	xor    edi,edi
  409841:	cqo    
  409843:	idiv   rcx
  409846:	mov    r13,rax
  409849:	sub    rbx,rax
  40984c:	mov    rax,r11
  40984f:	xor    r11d,r11d
  409852:	jmp    409744 <__gcov_sort_n_vals@@Base+0x10c4>
  409857:	nop    WORD PTR [rax+rax*1+0x0]
  409860:	mov    r11,QWORD PTR [rdx+0x10]
  409864:	jmp    40970b <__gcov_sort_n_vals@@Base+0x108b>
  409869:	mov    eax,DWORD PTR [rsp+0x98]
  409870:	mov    DWORD PTR [rsp+0x1868],eax
  409877:	mov    rax,QWORD PTR [rsp+0xa0]
  40987f:	add    QWORD PTR [rsp+0x1870],rax
  409887:	mov    rax,QWORD PTR [rsp+0xa8]
  40988f:	cmp    QWORD PTR [rsp+0x1878],rax
  409897:	jge    4098a1 <__gcov_sort_n_vals@@Base+0x1221>
  409899:	mov    QWORD PTR [rsp+0x1878],rax
  4098a1:	add    QWORD PTR [rsp+0x1880],rax
  4098a9:	mov    rax,QWORD PTR [rsp+0x30]
  4098ae:	mov    ecx,0x2f4
  4098b3:	mov    rbx,QWORD PTR [rsp+0x8]
  4098b8:	add    rax,0x28
  4098bc:	lea    rsi,[rbx+0x28]
  4098c0:	mov    rdi,rax
  4098c3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4098c6:	jmp    409511 <__gcov_sort_n_vals@@Base+0xe91>
  4098cb:	mov    DWORD PTR [rsp+0x40],0x0
  4098d3:	jmp    409607 <__gcov_sort_n_vals@@Base+0xf87>
  4098d8:	mov    r12,rbx
  4098db:	mov    edi,0x1
  4098e0:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  4098e5:	mov    DWORD PTR [rax],0x0
  4098eb:	jmp    408c74 <__gcov_sort_n_vals@@Base+0x5f4>
  4098f0:	mov    eax,DWORD PTR [rsp+0x60]
  4098f4:	mov    DWORD PTR [rsp+0x18],0x0
  4098fc:	mov    DWORD PTR [rsp+0x1860],eax
  409903:	mov    edi,0x2
  409908:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  40990d:	mov    edi,0x1
  409912:	mov    DWORD PTR [rax],0x67636461
  409918:	mov    DWORD PTR [rax+0x4],0x3630342a
  40991f:	mov    ebx,DWORD PTR [r12+0x10]
  409924:	call   407d10 <read_boolean_unary_expression@@Base+0x2a1>
  409929:	mov    edi,DWORD PTR [rsp+0x18]
  40992d:	mov    DWORD PTR [rax],ebx
  40992f:	test   edi,edi
  409931:	je     409536 <__gcov_sort_n_vals@@Base+0xeb6>
  409937:	mov    edi,DWORD PTR [rsp+0x18]
  40993b:	call   408630 <read_boolean_unary_expression@@Base+0xbc1>
  409940:	jmp    409536 <__gcov_sort_n_vals@@Base+0xeb6>
  409945:	nop    DWORD PTR [rax]
  409948:	mov    ebp,DWORD PTR [rsp+0x3c]
  40994c:	test   ebp,ebp
  40994e:	je     409997 <__gcov_sort_n_vals@@Base+0x1317>
  409950:	mov    QWORD PTR [rsp+0x20],0x1
  409959:	lea    rbx,[rip+0x124a]        # 40abaa <_IO_stdin_used@@Base+0xbaa>
  409960:	jmp    408ae9 <__gcov_sort_n_vals@@Base+0x469>
  409965:	lea    rdi,[rip+0x1252]        # 40abbe <_IO_stdin_used@@Base+0xbbe>
  40996c:	call   402030 <getenv@plt>
  409971:	test   rax,rax
  409974:	mov    rbx,rax
  409977:	je     409997 <__gcov_sort_n_vals@@Base+0x1317>
  409979:	mov    rdi,rax
  40997c:	call   402100 <strlen@plt>
  409981:	test   rax,rax
  409984:	mov    QWORD PTR [rsp+0x20],rax
  409989:	mov    DWORD PTR [rsp+0x3c],0x0
  409991:	jne    408ad2 <__gcov_sort_n_vals@@Base+0x452>
  409997:	mov    rdi,r14
  40999a:	call   4021c0 <malloc@plt>
  40999f:	mov    DWORD PTR [rsp+0x3c],0x0
  4099a7:	mov    QWORD PTR [rsp+0x10],rax
  4099ac:	mov    QWORD PTR [rsp+0x20],0x0
  4099b5:	jmp    408b0a <__gcov_sort_n_vals@@Base+0x48a>
  4099ba:	mov    DWORD PTR [rsp+0x18],r13d
  4099bf:	jmp    408faf <__gcov_sort_n_vals@@Base+0x92f>
  4099c4:	xor    esi,esi
  4099c6:	jmp    408e95 <__gcov_sort_n_vals@@Base+0x815>
  4099cb:	xor    eax,eax
  4099cd:	jmp    408ec9 <__gcov_sort_n_vals@@Base+0x849>
  4099d2:	mov    rax,r11
  4099d5:	xor    r11d,r11d
  4099d8:	jmp    409736 <__gcov_sort_n_vals@@Base+0x10b6>
  4099dd:	mov    QWORD PTR [rsp+0x1878],rax
  4099e5:	jmp    4093a8 <__gcov_sort_n_vals@@Base+0xd28>
  4099ea:	call   402060 <abort@plt>
  4099ef:	test   rax,rax
  4099f2:	je     409948 <__gcov_sort_n_vals@@Base+0x12c8>
  4099f8:	mov    QWORD PTR [rsp+0x20],rax
  4099fd:	jmp    408ae9 <__gcov_sort_n_vals@@Base+0x469>
  409a02:	mov    DWORD PTR [rsp+0x98],r12d
  409a0a:	jmp    40890a <__gcov_sort_n_vals@@Base+0x28a>
  409a0f:	mov    rbx,QWORD PTR [rbx+0x8]
  409a13:	mov    QWORD PTR [rsp+0xa8],rsi
  409a1b:	test   rbx,rbx
  409a1e:	jne    40875e <__gcov_sort_n_vals@@Base+0xde>
  409a24:	jmp    40892d <__gcov_sort_n_vals@@Base+0x2ad>
  409a29:	mov    r14d,0x2
  409a2f:	xor    r15d,r15d
  409a32:	jmp    408a72 <__gcov_sort_n_vals@@Base+0x3f2>
  409a37:	mov    ebp,ebx
  409a39:	lea    rcx,[rip+0x112e]        # 40ab6e <_IO_stdin_used@@Base+0xb6e>
  409a40:	jmp    4091f5 <__gcov_sort_n_vals@@Base+0xb75>
  409a45:	mov    ecx,r15d
  409a48:	mov    r13,QWORD PTR [rsp+0x40]
  409a4d:	mov    ebx,ebp
  409a4f:	jmp    409261 <__gcov_sort_n_vals@@Base+0xbe1>
  409a54:	xor    eax,eax
  409a56:	jmp    4090c2 <__gcov_sort_n_vals@@Base+0xa42>
  409a5b:	xor    eax,eax
  409a5d:	jmp    4090a9 <__gcov_sort_n_vals@@Base+0xa29>
  409a62:	xor    eax,eax
  409a64:	jmp    409090 <__gcov_sort_n_vals@@Base+0xa10>
  409a69:	mov    edi,0x1
  409a6e:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409a73:	test   rax,rax
  409a76:	je     409b0e <__gcov_sort_n_vals@@Base+0x148e>
  409a7c:	mov    eax,DWORD PTR [rax]
  409a7e:	cmp    DWORD PTR [rbx+0x8],eax
  409a81:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  409a87:	mov    edi,0x1
  409a8c:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409a91:	test   rax,rax
  409a94:	je     409b0a <__gcov_sort_n_vals@@Base+0x148a>
  409a96:	mov    eax,DWORD PTR [rax]
  409a98:	cmp    DWORD PTR [rbx+0xc],eax
  409a9b:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  409aa1:	mov    edi,0x1
  409aa6:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409aab:	test   rax,rax
  409aae:	je     409b06 <__gcov_sort_n_vals@@Base+0x1486>
  409ab0:	mov    eax,DWORD PTR [rax]
  409ab2:	cmp    DWORD PTR [rbx+0x10],eax
  409ab5:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  409abb:	lea    r13,[r12+0x20]
  409ac0:	add    rbx,0x18
  409ac4:	mov    ebp,0x1a10000
  409ac9:	mov    r14,QWORD PTR [r13+0x0]
  409acd:	test   r14,r14
  409ad0:	je     4092b8 <__gcov_sort_n_vals@@Base+0xc38>
  409ad6:	mov    edi,0x1
  409adb:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409ae0:	test   rax,rax
  409ae3:	je     409287 <__gcov_sort_n_vals@@Base+0xc07>
  409ae9:	mov    edi,0x1
  409aee:	mov    r15d,DWORD PTR [rax]
  409af1:	call   407d60 <read_boolean_unary_expression@@Base+0x2f1>
  409af6:	test   rax,rax
  409af9:	jne    409299 <__gcov_sort_n_vals@@Base+0xc19>
  409aff:	xor    eax,eax
  409b01:	jmp    40929b <__gcov_sort_n_vals@@Base+0xc1b>
  409b06:	xor    eax,eax
  409b08:	jmp    409ab2 <__gcov_sort_n_vals@@Base+0x1432>
  409b0a:	xor    eax,eax
  409b0c:	jmp    409a98 <__gcov_sort_n_vals@@Base+0x1418>
  409b0e:	xor    eax,eax
  409b10:	jmp    409a7e <__gcov_sort_n_vals@@Base+0x13fe>
  409b15:	test   eax,eax
  409b17:	mov    r15,QWORD PTR [rsp+0x70]
  409b1c:	jne    409226 <__gcov_sort_n_vals@@Base+0xba6>
  409b22:	mov    rdi,QWORD PTR [r15]
  409b25:	xor    edx,edx
  409b27:	xor    esi,esi
  409b29:	mov    DWORD PTR [r15+0x1c],0xffffffff
  409b31:	mov    DWORD PTR [r15+0x8],0x0
  409b39:	mov    DWORD PTR [r15+0xc],0x0
  409b41:	call   4021f0 <fseek@plt>
  409b46:	mov    r10d,DWORD PTR [rsp+0x18]
  409b4b:	test   r10d,r10d
  409b4e:	je     409b8c <__gcov_sort_n_vals@@Base+0x150c>
  409b50:	cmp    QWORD PTR [r12+0x20],0x0
  409b56:	mov    eax,DWORD PTR [rsp+0x186c]
  409b5d:	jne    409366 <__gcov_sort_n_vals@@Base+0xce6>
  409b63:	test   eax,eax
  409b65:	jne    409bbe <__gcov_sort_n_vals@@Base+0x153e>
  409b67:	mov    eax,DWORD PTR [rsp+0x60]
  409b6b:	mov    DWORD PTR [rsp+0x1860],eax
  409b72:	mov    eax,DWORD PTR [rsp+0x28]
  409b76:	test   eax,eax
  409b78:	je     409903 <__gcov_sort_n_vals@@Base+0x1283>
  409b7e:	mov    edi,DWORD PTR [rsp+0x18]
  409b82:	call   408630 <read_boolean_unary_expression@@Base+0xbc1>
  409b87:	jmp    409536 <__gcov_sort_n_vals@@Base+0xeb6>
  409b8c:	mov    rdi,QWORD PTR [rsp+0x30]
  409b91:	xor    eax,eax
  409b93:	mov    ecx,0x2f9
  409b98:	rep stos QWORD PTR es:[rdi],rax
  409b9b:	mov    eax,DWORD PTR [rsp+0x28]
  409b9f:	cmp    QWORD PTR [r12+0x20],0x0
  409ba5:	je     409bd6 <__gcov_sort_n_vals@@Base+0x1556>
  409ba7:	mov    edx,DWORD PTR [rsp+0x6c]
  409bab:	mov    DWORD PTR [rsp+0x18],eax
  409baf:	test   edx,edx
  409bb1:	jne    409869 <__gcov_sort_n_vals@@Base+0x11e9>
  409bb7:	xor    eax,eax
  409bb9:	jmp    409370 <__gcov_sort_n_vals@@Base+0xcf0>
  409bbe:	mov    rsi,QWORD PTR [rsp+0x10]
  409bc3:	lea    rdi,[rip+0xf66]        # 40ab30 <_IO_stdin_used@@Base+0xb30>
  409bca:	xor    eax,eax
  409bcc:	call   407de0 <read_boolean_unary_expression@@Base+0x371>
  409bd1:	jmp    408c74 <__gcov_sort_n_vals@@Base+0x5f4>
  409bd6:	mov    DWORD PTR [rsp+0x18],eax
  409bda:	jmp    409511 <__gcov_sort_n_vals@@Base+0xe91>
  409bdf:	nop
  409be0:	movzx  esi,BYTE PTR [rip+0x6241]        # 40fe28 <fff@@Base+0x1a8>
  409be7:	test   sil,0x1
  409beb:	je     409c18 <__gcov_sort_n_vals@@Base+0x1598>
  409bed:	mov    rax,QWORD PTR [rip+0x623c]        # 40fe30 <fff@@Base+0x1b0>
  409bf4:	test   rax,rax
  409bf7:	je     409c04 <__gcov_sort_n_vals@@Base+0x1584>
  409bf9:	mov    rdx,QWORD PTR [rip+0x6238]        # 40fe38 <fff@@Base+0x1b8>
  409c00:	mov    QWORD PTR [rax+0x18],rdx
  409c04:	mov    rdx,QWORD PTR [rip+0x622d]        # 40fe38 <fff@@Base+0x1b8>
  409c0b:	test   rdx,rdx
  409c0e:	je     409c68 <__gcov_sort_n_vals@@Base+0x15e8>
  409c10:	mov    QWORD PTR [rdx+0x10],rax
  409c14:	ret    
  409c15:	nop    DWORD PTR [rax]
  409c18:	sub    rsp,0x8
  409c1c:	mov    rdi,QWORD PTR [rip+0x61fd]        # 40fe20 <fff@@Base+0x1a0>
  409c23:	shr    sil,1
  409c26:	and    esi,0x1
  409c29:	call   408710 <__gcov_sort_n_vals@@Base+0x90>
  409c2e:	mov    rax,QWORD PTR [rip+0x61fb]        # 40fe30 <fff@@Base+0x1b0>
  409c35:	or     BYTE PTR [rip+0x61ec],0x3        # 40fe28 <fff@@Base+0x1a8>
  409c3c:	test   rax,rax
  409c3f:	je     409c4c <__gcov_sort_n_vals@@Base+0x15cc>
  409c41:	mov    rdx,QWORD PTR [rip+0x61f0]        # 40fe38 <fff@@Base+0x1b8>
  409c48:	mov    QWORD PTR [rax+0x18],rdx
  409c4c:	mov    rdx,QWORD PTR [rip+0x61e5]        # 40fe38 <fff@@Base+0x1b8>
  409c53:	test   rdx,rdx
  409c56:	je     409c78 <__gcov_sort_n_vals@@Base+0x15f8>
  409c58:	mov    QWORD PTR [rdx+0x10],rax
  409c5c:	add    rsp,0x8
  409c60:	ret    
  409c61:	nop    DWORD PTR [rax+0x0]
  409c68:	mov    rdx,0x40e780
  409c6f:	mov    QWORD PTR [rdx+0x8],rax
  409c73:	ret    
  409c74:	nop    DWORD PTR [rax+0x0]
  409c78:	mov    rdx,0x40e780
  409c7f:	mov    QWORD PTR [rdx+0x8],rax
  409c83:	jmp    409c5c <__gcov_sort_n_vals@@Base+0x15dc>
  409c85:	nop
  409c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c90:	movzx  esi,BYTE PTR [rdi+0x8]
  409c94:	test   sil,0x1
  409c98:	je     409ca0 <__gcov_sort_n_vals@@Base+0x1620>
  409c9a:	ret    
  409c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  409ca0:	push   rbx
  409ca1:	mov    rbx,rdi
  409ca4:	mov    rdi,QWORD PTR [rdi]
  409ca7:	shr    sil,1
  409caa:	and    esi,0x1
  409cad:	call   408710 <__gcov_sort_n_vals@@Base+0x90>
  409cb2:	or     BYTE PTR [rbx+0x8],0x3
  409cb6:	pop    rbx
  409cb7:	ret    
  409cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409cc0:	mov    esi,DWORD PTR [rdi]
  409cc2:	test   esi,esi
  409cc4:	je     409ccd <__gcov_sort_n_vals@@Base+0x164d>
  409cc6:	mov    eax,DWORD PTR [rdi+0x70]
  409cc9:	test   eax,eax
  409ccb:	jne    409cd0 <__gcov_sort_n_vals@@Base+0x1650>
  409ccd:	ret    
  409cce:	xchg   ax,ax
  409cd0:	push   r12
  409cd2:	push   rbp
  409cd3:	xor    edx,edx
  409cd5:	push   rbx
  409cd6:	mov    rbx,rdi
  409cd9:	lea    rdi,[rdi+0x18]
  409cdd:	call   407f00 <read_boolean_unary_expression@@Base+0x491>
  409ce2:	test   eax,eax
  409ce4:	je     409d04 <__gcov_sort_n_vals@@Base+0x1684>
  409ce6:	mov    rax,QWORD PTR [rip+0x6133]        # 40fe20 <fff@@Base+0x1a0>
  409ced:	lea    rbp,[rip+0x612c]        # 40fe20 <fff@@Base+0x1a0>
  409cf4:	test   rax,rax
  409cf7:	je     409d09 <__gcov_sort_n_vals@@Base+0x1689>
  409cf9:	mov    QWORD PTR [rbx+0x8],rax
  409cfd:	mov    QWORD PTR [rip+0x611c],rbx        # 40fe20 <fff@@Base+0x1a0>
  409d04:	pop    rbx
  409d05:	pop    rbp
  409d06:	pop    r12
  409d08:	ret    
  409d09:	mov    r12,0x40e780
  409d10:	lea    rdx,[rip+0xf02]        # 40ac19 <_IO_stdin_used@@Base+0xc19>
  409d17:	mov    edi,0x18
  409d1c:	mov    esi,DWORD PTR [r12]
  409d20:	call   407f00 <read_boolean_unary_expression@@Base+0x491>
  409d25:	test   eax,eax
  409d27:	je     409d43 <__gcov_sort_n_vals@@Base+0x16c3>
  409d29:	mov    rax,QWORD PTR [r12+0x8]
  409d2e:	test   rax,rax
  409d31:	mov    QWORD PTR [rip+0x60f8],rax        # 40fe30 <fff@@Base+0x1b0>
  409d38:	je     409d3e <__gcov_sort_n_vals@@Base+0x16be>
  409d3a:	mov    QWORD PTR [rax+0x18],rbp
  409d3e:	mov    QWORD PTR [r12+0x8],rbp
  409d43:	lea    rdi,[rip+0xfffffffffffffe96]        # 409be0 <__gcov_sort_n_vals@@Base+0x1560>
  409d4a:	call   409e40 <__libc_csu_fini@@Base+0x10>
  409d4f:	mov    rax,QWORD PTR [rip+0x60ca]        # 40fe20 <fff@@Base+0x1a0>
  409d56:	jmp    409cf9 <__gcov_sort_n_vals@@Base+0x1679>
  409d58:	nop    DWORD PTR [rax+rax*1+0x0]
  409d60:	mov    rax,rdi
  409d63:	movabs rdx,0x5555555555555555
  409d6d:	shr    rax,1
  409d70:	and    rax,rdx
  409d73:	movabs rdx,0x3333333333333333
  409d7d:	sub    rdi,rax
  409d80:	mov    rax,rdi
  409d83:	shr    rdi,0x2
  409d87:	and    rax,rdx
  409d8a:	and    rdi,rdx
  409d8d:	movabs rdx,0xf0f0f0f0f0f0f0f
  409d97:	add    rdi,rax
  409d9a:	mov    rax,rdi
  409d9d:	shr    rax,0x4
  409da1:	add    rax,rdi
  409da4:	and    rax,rdx
  409da7:	movabs rdx,0x101010101010101
  409db1:	imul   rax,rdx
  409db5:	shr    rax,0x38
  409db9:	ret    
  409dba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409dc0 <__libc_csu_init@@Base>:
  409dc0:	endbr64 
  409dc4:	push   r15
  409dc6:	lea    r15,[rip+0x300b]        # 40cdd8 <_IO_stdin_used@@Base+0x2dd8>
  409dcd:	push   r14
  409dcf:	mov    r14,rdx
  409dd2:	push   r13
  409dd4:	mov    r13,rsi
  409dd7:	push   r12
  409dd9:	mov    r12d,edi
  409ddc:	push   rbp
  409ddd:	lea    rbp,[rip+0x301c]        # 40ce00 <_IO_stdin_used@@Base+0x2e00>
  409de4:	push   rbx
  409de5:	sub    rbp,r15
  409de8:	sub    rsp,0x8
  409dec:	call   402000 <getenv@plt-0x30>
  409df1:	sar    rbp,0x3
  409df5:	je     409e16 <__libc_csu_init@@Base+0x56>
  409df7:	xor    ebx,ebx
  409df9:	nop    DWORD PTR [rax+0x0]
  409e00:	mov    rdx,r14
  409e03:	mov    rsi,r13
  409e06:	mov    edi,r12d
  409e09:	call   QWORD PTR [r15+rbx*8]
  409e0d:	add    rbx,0x1
  409e11:	cmp    rbp,rbx
  409e14:	jne    409e00 <__libc_csu_init@@Base+0x40>
  409e16:	add    rsp,0x8
  409e1a:	pop    rbx
  409e1b:	pop    rbp
  409e1c:	pop    r12
  409e1e:	pop    r13
  409e20:	pop    r14
  409e22:	pop    r15
  409e24:	ret    
  409e25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000409e30 <__libc_csu_fini@@Base>:
  409e30:	endbr64 
  409e34:	ret    
  409e35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e3f:	nop
  409e40:	endbr64 
  409e44:	mov    rdx,QWORD PTR [rip+0x32fd]        # 40d148 <__data_start@@Base+0x8>
  409e4b:	xor    esi,esi
  409e4d:	jmp    402230 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000409e54 <.fini>:
  409e54:	endbr64 
  409e58:	sub    rsp,0x8
  409e5c:	add    rsp,0x8
  409e60:	ret    
