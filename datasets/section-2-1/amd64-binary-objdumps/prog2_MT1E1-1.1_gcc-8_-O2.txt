
../repos/prog2/MT1E1-1.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x12a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x3fe3]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x120>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x120>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x120>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x120>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x120>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x120>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x120>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x120>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x120>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x120>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x120>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x120>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x120>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x120>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x120>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x120>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x120>
  40113f:	nop

Disassembly of section .plt.sec:

0000000000401140 <free@plt>:
  401140:	endbr64 
  401144:	bnd jmp QWORD PTR [rip+0x3ecd]        # 405018 <free@GLIBC_2.2.5>
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401150 <strcpy@plt>:
  401150:	endbr64 
  401154:	bnd jmp QWORD PTR [rip+0x3ec5]        # 405020 <strcpy@GLIBC_2.2.5>
  40115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401160 <puts@plt>:
  401160:	endbr64 
  401164:	bnd jmp QWORD PTR [rip+0x3ebd]        # 405028 <puts@GLIBC_2.2.5>
  40116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401170 <fclose@plt>:
  401170:	endbr64 
  401174:	bnd jmp QWORD PTR [rip+0x3eb5]        # 405030 <fclose@GLIBC_2.2.5>
  40117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401180 <strlen@plt>:
  401180:	endbr64 
  401184:	bnd jmp QWORD PTR [rip+0x3ead]        # 405038 <strlen@GLIBC_2.2.5>
  40118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401190 <__stack_chk_fail@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x3ea5]        # 405040 <__stack_chk_fail@GLIBC_2.4>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <strchr@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x3e9d]        # 405048 <strchr@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <fgets@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x3e95]        # 405050 <fgets@GLIBC_2.2.5>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <calloc@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x3e8d]        # 405058 <calloc@GLIBC_2.2.5>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011d0 <strcmp@plt>:
  4011d0:	endbr64 
  4011d4:	bnd jmp QWORD PTR [rip+0x3e85]        # 405060 <strcmp@GLIBC_2.2.5>
  4011db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011e0 <feof@plt>:
  4011e0:	endbr64 
  4011e4:	bnd jmp QWORD PTR [rip+0x3e7d]        # 405068 <feof@GLIBC_2.2.5>
  4011eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011f0 <strtol@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x3e75]        # 405070 <strtol@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <memcpy@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x3e6d]        # 405078 <memcpy@GLIBC_2.14>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <malloc@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x3e65]        # 405080 <malloc@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <realloc@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x3e5d]        # 405088 <realloc@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <__printf_chk@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x3e55]        # 405090 <__printf_chk@GLIBC_2.3.4>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fopen@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x3e4d]        # 405098 <fopen@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401250 <main@@Base>:
  401250:	endbr64 
  401254:	push   r15
  401256:	lea    rsi,[rip+0x1da7]        # 403004 <_IO_stdin_used@@Base+0x4>
  40125d:	lea    rdi,[rip+0x1da2]        # 403006 <_IO_stdin_used@@Base+0x6>
  401264:	push   r14
  401266:	push   r13
  401268:	push   r12
  40126a:	push   rbp
  40126b:	push   rbx
  40126c:	sub    rsp,0x18
  401270:	call   401240 <fopen@plt>
  401275:	lea    rsi,[rip+0x1d88]        # 403004 <_IO_stdin_used@@Base+0x4>
  40127c:	lea    rdi,[rip+0x1d8f]        # 403012 <_IO_stdin_used@@Base+0x12>
  401283:	mov    r14,rax
  401286:	call   401240 <fopen@plt>
  40128b:	lea    rsi,[rip+0x1d72]        # 403004 <_IO_stdin_used@@Base+0x4>
  401292:	lea    rdi,[rip+0x1d84]        # 40301d <_IO_stdin_used@@Base+0x1d>
  401299:	mov    rbp,rax
  40129c:	mov    QWORD PTR [rsp],rax
  4012a0:	call   401240 <fopen@plt>
  4012a5:	mov    rdi,r14
  4012a8:	mov    r15,rax
  4012ab:	mov    QWORD PTR [rsp+0x8],rax
  4012b0:	call   4016c0 <lerAtores@@Base>
  4012b5:	mov    rdi,rbp
  4012b8:	mov    rbx,rax
  4012bb:	call   401780 <lerFilmes@@Base>
  4012c0:	mov    rdi,r15
  4012c3:	mov    rbp,rax
  4012c6:	call   401780 <lerFilmes@@Base>
  4012cb:	mov    rdi,rbx
  4012ce:	mov    r15,rax
  4012d1:	call   401970 <vetor_tamanho@@Base>
  4012d6:	mov    edx,eax
  4012d8:	lea    rsi,[rip+0x1d4a]        # 403029 <_IO_stdin_used@@Base+0x29>
  4012df:	mov    edi,0x1
  4012e4:	xor    eax,eax
  4012e6:	call   401230 <__printf_chk@plt>
  4012eb:	mov    rdi,rbx
  4012ee:	call   4014e0 <retira_duplicados@@Base>
  4012f3:	mov    rdi,rbx
  4012f6:	call   401970 <vetor_tamanho@@Base>
  4012fb:	mov    edx,eax
  4012fd:	lea    rsi,[rip+0x1d38]        # 40303c <_IO_stdin_used@@Base+0x3c>
  401304:	mov    edi,0x1
  401309:	xor    eax,eax
  40130b:	call   401230 <__printf_chk@plt>
  401310:	mov    rsi,r15
  401313:	mov    rdi,rbp
  401316:	call   401580 <interseta@@Base>
  40131b:	mov    r13,rax
  40131e:	test   rax,rax
  401321:	je     4013ce <main@@Base+0x17e>
  401327:	mov    rdi,rax
  40132a:	call   401970 <vetor_tamanho@@Base>
  40132f:	mov    edx,eax
  401331:	lea    rsi,[rip+0x1d50]        # 403088 <_IO_stdin_used@@Base+0x88>
  401338:	mov    edi,0x1
  40133d:	xor    eax,eax
  40133f:	call   401230 <__printf_chk@plt>
  401344:	mov    esi,0x7d0
  401349:	mov    rdi,rbp
  40134c:	call   401640 <anteriores@@Base>
  401351:	mov    r12,rax
  401354:	test   rax,rax
  401357:	je     4013df <main@@Base+0x18f>
  40135d:	mov    rdi,rax
  401360:	call   401970 <vetor_tamanho@@Base>
  401365:	mov    edx,eax
  401367:	lea    rsi,[rip+0x1d3a]        # 4030a8 <_IO_stdin_used@@Base+0xa8>
  40136e:	mov    edi,0x1
  401373:	xor    eax,eax
  401375:	call   401230 <__printf_chk@plt>
  40137a:	mov    rdi,rbx
  40137d:	call   401860 <vetor_apaga@@Base>
  401382:	mov    rdi,r13
  401385:	call   401860 <vetor_apaga@@Base>
  40138a:	mov    rdi,r12
  40138d:	call   401860 <vetor_apaga@@Base>
  401392:	mov    rdi,rbp
  401395:	call   401d40 <lista_apaga@@Base>
  40139a:	mov    rdi,r15
  40139d:	call   401d40 <lista_apaga@@Base>
  4013a2:	mov    rdi,r14
  4013a5:	call   401170 <fclose@plt>
  4013aa:	mov    rdi,QWORD PTR [rsp]
  4013ae:	call   401170 <fclose@plt>
  4013b3:	mov    rdi,QWORD PTR [rsp+0x8]
  4013b8:	call   401170 <fclose@plt>
  4013bd:	add    rsp,0x18
  4013c1:	pop    rbx
  4013c2:	pop    rbp
  4013c3:	pop    r12
  4013c5:	pop    r13
  4013c7:	pop    r14
  4013c9:	xor    eax,eax
  4013cb:	pop    r15
  4013cd:	ret    
  4013ce:	lea    rdi,[rip+0x1c83]        # 403058 <_IO_stdin_used@@Base+0x58>
  4013d5:	call   401160 <puts@plt>
  4013da:	jmp    401344 <main@@Base+0xf4>
  4013df:	lea    rdi,[rip+0x1c89]        # 40306f <_IO_stdin_used@@Base+0x6f>
  4013e6:	call   401160 <puts@plt>
  4013eb:	jmp    40137a <main@@Base+0x12a>
  4013ed:	nop    DWORD PTR [rax]

00000000004013f0 <_start@@Base>:
  4013f0:	endbr64 
  4013f4:	xor    ebp,ebp
  4013f6:	mov    r9,rdx
  4013f9:	pop    rsi
  4013fa:	mov    rdx,rsp
  4013fd:	and    rsp,0xfffffffffffffff0
  401401:	push   rax
  401402:	push   rsp
  401403:	mov    r8,0x402160
  40140a:	mov    rcx,0x4020f0
  401411:	mov    rdi,0x401250
  401418:	call   QWORD PTR [rip+0x3bd2]        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40141e:	hlt    
  40141f:	nop
  401420:	endbr64 
  401424:	ret    
  401425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40142f:	nop
  401430:	mov    eax,0x4050b0
  401435:	cmp    rax,0x4050b0
  40143b:	je     401450 <_start@@Base+0x60>
  40143d:	mov    eax,0x0
  401442:	test   rax,rax
  401445:	je     401450 <_start@@Base+0x60>
  401447:	mov    edi,0x4050b0
  40144c:	jmp    rax
  40144e:	xchg   ax,ax
  401450:	ret    
  401451:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40145c:	nop    DWORD PTR [rax+0x0]
  401460:	mov    esi,0x4050b0
  401465:	sub    rsi,0x4050b0
  40146c:	sar    rsi,0x3
  401470:	mov    rax,rsi
  401473:	shr    rax,0x3f
  401477:	add    rsi,rax
  40147a:	sar    rsi,1
  40147d:	je     401490 <_start@@Base+0xa0>
  40147f:	mov    eax,0x0
  401484:	test   rax,rax
  401487:	je     401490 <_start@@Base+0xa0>
  401489:	mov    edi,0x4050b0
  40148e:	jmp    rax
  401490:	ret    
  401491:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40149c:	nop    DWORD PTR [rax+0x0]
  4014a0:	endbr64 
  4014a4:	cmp    BYTE PTR [rip+0x3c05],0x0        # 4050b0 <__bss_start@@Base>
  4014ab:	jne    4014c0 <_start@@Base+0xd0>
  4014ad:	push   rbp
  4014ae:	mov    rbp,rsp
  4014b1:	call   401430 <_start@@Base+0x40>
  4014b6:	mov    BYTE PTR [rip+0x3bf3],0x1        # 4050b0 <__bss_start@@Base>
  4014bd:	pop    rbp
  4014be:	ret    
  4014bf:	nop
  4014c0:	ret    
  4014c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014cc:	nop    DWORD PTR [rax+0x0]
  4014d0:	endbr64 
  4014d4:	jmp    401460 <_start@@Base+0x70>
  4014d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004014e0 <retira_duplicados@@Base>:
  4014e0:	endbr64 
  4014e4:	push   r14
  4014e6:	push   r13
  4014e8:	push   r12
  4014ea:	xor    r12d,r12d
  4014ed:	push   rbp
  4014ee:	mov    rbp,rdi
  4014f1:	mov    rdi,rbp
  4014f4:	push   rbx
  4014f5:	call   401970 <vetor_tamanho@@Base>
  4014fa:	dec    eax
  4014fc:	cmp    eax,r12d
  4014ff:	jle    401563 <retira_duplicados@@Base+0x83>
  401501:	nop    DWORD PTR [rax+0x0]
  401508:	lea    r13d,[r12+0x1]
  40150d:	mov    ebx,r13d
  401510:	mov    rdi,rbp
  401513:	call   401970 <vetor_tamanho@@Base>
  401518:	cmp    eax,ebx
  40151a:	jle    401551 <retira_duplicados@@Base+0x71>
  40151c:	mov    esi,ebx
  40151e:	mov    rdi,rbp
  401521:	call   401990 <vetor_elemento@@Base>
  401526:	mov    esi,r12d
  401529:	mov    rdi,rbp
  40152c:	mov    r14,rax
  40152f:	call   401990 <vetor_elemento@@Base>
  401534:	mov    rdi,rax
  401537:	mov    rsi,r14
  40153a:	call   4011d0 <strcmp@plt>
  40153f:	test   eax,eax
  401541:	je     401570 <retira_duplicados@@Base+0x90>
  401543:	mov    rdi,rbp
  401546:	inc    ebx
  401548:	call   401970 <vetor_tamanho@@Base>
  40154d:	cmp    eax,ebx
  40154f:	jg     40151c <retira_duplicados@@Base+0x3c>
  401551:	mov    rdi,rbp
  401554:	call   401970 <vetor_tamanho@@Base>
  401559:	mov    r12d,r13d
  40155c:	dec    eax
  40155e:	cmp    eax,r12d
  401561:	jg     401508 <retira_duplicados@@Base+0x28>
  401563:	pop    rbx
  401564:	pop    rbp
  401565:	pop    r12
  401567:	pop    r13
  401569:	pop    r14
  40156b:	ret    
  40156c:	nop    DWORD PTR [rax+0x0]
  401570:	mov    esi,ebx
  401572:	mov    rdi,rbp
  401575:	call   401ad0 <vetor_remove@@Base>
  40157a:	jmp    401510 <retira_duplicados@@Base+0x30>
  40157c:	nop    DWORD PTR [rax+0x0]

0000000000401580 <interseta@@Base>:
  401580:	endbr64 
  401584:	push   r15
  401586:	xor    eax,eax
  401588:	push   r14
  40158a:	push   r13
  40158c:	mov    r13,rdi
  40158f:	push   r12
  401591:	push   rbp
  401592:	mov    rbp,rsi
  401595:	push   rbx
  401596:	sub    rsp,0x18
  40159a:	call   401830 <vetor_novo@@Base>
  40159f:	mov    QWORD PTR [rsp+0x8],rax
  4015a4:	mov    eax,DWORD PTR [r13+0x10]
  4015a8:	mov    r15,QWORD PTR [r13+0x0]
  4015ac:	test   eax,eax
  4015ae:	jg     4015b5 <interseta@@Base+0x35>
  4015b0:	test   r15,r15
  4015b3:	je     401602 <interseta@@Base+0x82>
  4015b5:	xor    r14d,r14d
  4015b8:	xor    ebx,ebx
  4015ba:	nop    WORD PTR [rax+rax*1+0x0]
  4015c0:	mov    rsi,QWORD PTR [r15]
  4015c3:	xor    edx,edx
  4015c5:	mov    rdi,rbp
  4015c8:	call   401f40 <lista_pesquisa@@Base>
  4015cd:	test   rax,rax
  4015d0:	je     4015f1 <interseta@@Base+0x71>
  4015d2:	mov    rsi,QWORD PTR [r15]
  4015d5:	xor    edx,edx
  4015d7:	mov    rdi,rbp
  4015da:	call   401f40 <lista_pesquisa@@Base>
  4015df:	mov    r12,QWORD PTR [r15]
  4015e2:	mov    rsi,QWORD PTR [rax]
  4015e5:	mov    rdi,r12
  4015e8:	call   4011d0 <strcmp@plt>
  4015ed:	test   eax,eax
  4015ef:	je     401620 <interseta@@Base+0xa0>
  4015f1:	inc    ebx
  4015f3:	mov    r15,QWORD PTR [r15+0x8]
  4015f7:	cmp    DWORD PTR [r13+0x10],ebx
  4015fb:	jg     4015c0 <interseta@@Base+0x40>
  4015fd:	test   r15,r15
  401600:	jne    4015c0 <interseta@@Base+0x40>
  401602:	mov    rax,QWORD PTR [rsp+0x8]
  401607:	add    rsp,0x18
  40160b:	pop    rbx
  40160c:	pop    rbp
  40160d:	pop    r12
  40160f:	pop    r13
  401611:	pop    r14
  401613:	pop    r15
  401615:	ret    
  401616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401620:	mov    rdi,QWORD PTR [rsp+0x8]
  401625:	mov    edx,r14d
  401628:	mov    rsi,r12
  40162b:	call   4019c0 <vetor_insere@@Base>
  401630:	inc    r14d
  401633:	jmp    4015f1 <interseta@@Base+0x71>
  401635:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401640 <anteriores@@Base>:
  401640:	endbr64 
  401644:	push   r13
  401646:	xor    eax,eax
  401648:	push   r12
  40164a:	mov    r12d,esi
  40164d:	push   rbp
  40164e:	push   rbx
  40164f:	mov    rbx,rdi
  401652:	sub    rsp,0x8
  401656:	call   401830 <vetor_novo@@Base>
  40165b:	mov    rbx,QWORD PTR [rbx]
  40165e:	mov    r13,rax
  401661:	test   rbx,rbx
  401664:	jne    401679 <anteriores@@Base+0x39>
  401666:	jmp    4016b2 <anteriores@@Base+0x72>
  401668:	nop    DWORD PTR [rax+rax*1+0x0]
  401670:	mov    rbx,QWORD PTR [rbx+0x8]
  401674:	test   rbx,rbx
  401677:	je     4016b2 <anteriores@@Base+0x72>
  401679:	mov    rbp,QWORD PTR [rbx]
  40167c:	mov    rdi,rbp
  40167f:	call   401180 <strlen@plt>
  401684:	lea    rdi,[rbp+rax*1-0x5]
  401689:	xor    esi,esi
  40168b:	mov    edx,0xa
  401690:	call   4011f0 <strtol@plt>
  401695:	cmp    r12d,eax
  401698:	jle    401670 <anteriores@@Base+0x30>
  40169a:	mov    rsi,QWORD PTR [rbx]
  40169d:	mov    edx,DWORD PTR [r13+0x0]
  4016a1:	mov    rdi,r13
  4016a4:	call   4019c0 <vetor_insere@@Base>
  4016a9:	mov    rbx,QWORD PTR [rbx+0x8]
  4016ad:	test   rbx,rbx
  4016b0:	jne    401679 <anteriores@@Base+0x39>
  4016b2:	add    rsp,0x8
  4016b6:	pop    rbx
  4016b7:	pop    rbp
  4016b8:	pop    r12
  4016ba:	mov    rax,r13
  4016bd:	pop    r13
  4016bf:	ret    

00000000004016c0 <lerAtores@@Base>:
  4016c0:	endbr64 
  4016c4:	push   r12
  4016c6:	push   rbp
  4016c7:	push   rbx
  4016c8:	sub    rsp,0x110
  4016cf:	mov    rax,QWORD PTR fs:0x28
  4016d8:	mov    QWORD PTR [rsp+0x108],rax
  4016e0:	xor    eax,eax
  4016e2:	test   rdi,rdi
  4016e5:	je     401768 <lerAtores@@Base+0xa8>
  4016eb:	mov    rbp,rdi
  4016ee:	call   401830 <vetor_novo@@Base>
  4016f3:	mov    r12,rax
  4016f6:	mov    rbx,rsp
  4016f9:	jmp    401734 <lerAtores@@Base+0x74>
  4016fb:	nop    DWORD PTR [rax+rax*1+0x0]
  401700:	mov    esi,0xff
  401705:	mov    rdi,rbx
  401708:	mov    rdx,rbp
  40170b:	call   4011b0 <fgets@plt>
  401710:	mov    esi,0xa
  401715:	mov    rdi,rbx
  401718:	call   4011a0 <strchr@plt>
  40171d:	test   rax,rax
  401720:	je     401725 <lerAtores@@Base+0x65>
  401722:	mov    BYTE PTR [rax],0x0
  401725:	mov    edx,DWORD PTR [r12]
  401729:	mov    rsi,rbx
  40172c:	mov    rdi,r12
  40172f:	call   4019c0 <vetor_insere@@Base>
  401734:	mov    rdi,rbp
  401737:	call   4011e0 <feof@plt>
  40173c:	test   eax,eax
  40173e:	je     401700 <lerAtores@@Base+0x40>
  401740:	mov    rcx,QWORD PTR [rsp+0x108]
  401748:	xor    rcx,QWORD PTR fs:0x28
  401751:	mov    rax,r12
  401754:	jne    40176d <lerAtores@@Base+0xad>
  401756:	add    rsp,0x110
  40175d:	pop    rbx
  40175e:	pop    rbp
  40175f:	pop    r12
  401761:	ret    
  401762:	nop    WORD PTR [rax+rax*1+0x0]
  401768:	xor    r12d,r12d
  40176b:	jmp    401740 <lerAtores@@Base+0x80>
  40176d:	call   401190 <__stack_chk_fail@plt>
  401772:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40177d:	nop    DWORD PTR [rax]

0000000000401780 <lerFilmes@@Base>:
  401780:	endbr64 
  401784:	push   r12
  401786:	push   rbp
  401787:	push   rbx
  401788:	sub    rsp,0x110
  40178f:	mov    rax,QWORD PTR fs:0x28
  401798:	mov    QWORD PTR [rsp+0x108],rax
  4017a0:	xor    eax,eax
  4017a2:	test   rdi,rdi
  4017a5:	je     401820 <lerFilmes@@Base+0xa0>
  4017a7:	mov    rbp,rdi
  4017aa:	call   401d00 <lista_nova@@Base>
  4017af:	mov    r12,rax
  4017b2:	mov    rbx,rsp
  4017b5:	jmp    4017f2 <lerFilmes@@Base+0x72>
  4017b7:	nop    WORD PTR [rax+rax*1+0x0]
  4017c0:	mov    esi,0xff
  4017c5:	mov    rdi,rbx
  4017c8:	mov    rdx,rbp
  4017cb:	call   4011b0 <fgets@plt>
  4017d0:	mov    esi,0xa
  4017d5:	mov    rdi,rbx
  4017d8:	call   4011a0 <strchr@plt>
  4017dd:	test   rax,rax
  4017e0:	je     4017e5 <lerFilmes@@Base+0x65>
  4017e2:	mov    BYTE PTR [rax],0x0
  4017e5:	xor    edx,edx
  4017e7:	mov    rsi,rbx
  4017ea:	mov    rdi,r12
  4017ed:	call   401e00 <lista_insere@@Base>
  4017f2:	mov    rdi,rbp
  4017f5:	call   4011e0 <feof@plt>
  4017fa:	test   eax,eax
  4017fc:	je     4017c0 <lerFilmes@@Base+0x40>
  4017fe:	mov    rcx,QWORD PTR [rsp+0x108]
  401806:	xor    rcx,QWORD PTR fs:0x28
  40180f:	mov    rax,r12
  401812:	jne    401825 <lerFilmes@@Base+0xa5>
  401814:	add    rsp,0x110
  40181b:	pop    rbx
  40181c:	pop    rbp
  40181d:	pop    r12
  40181f:	ret    
  401820:	xor    r12d,r12d
  401823:	jmp    4017fe <lerFilmes@@Base+0x7e>
  401825:	call   401190 <__stack_chk_fail@plt>
  40182a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401830 <vetor_novo@@Base>:
  401830:	endbr64 
  401834:	sub    rsp,0x8
  401838:	mov    edi,0x10
  40183d:	call   401210 <malloc@plt>
  401842:	test   rax,rax
  401845:	je     401856 <vetor_novo@@Base+0x26>
  401847:	mov    QWORD PTR [rax],0x0
  40184e:	mov    QWORD PTR [rax+0x8],0x0
  401856:	add    rsp,0x8
  40185a:	ret    
  40185b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401860 <vetor_apaga@@Base>:
  401860:	endbr64 
  401864:	test   rdi,rdi
  401867:	je     4018b0 <vetor_apaga@@Base+0x50>
  401869:	push   rbp
  40186a:	mov    rbp,rdi
  40186d:	push   rbx
  40186e:	sub    rsp,0x8
  401872:	mov    eax,DWORD PTR [rdi]
  401874:	test   eax,eax
  401876:	jle    401895 <vetor_apaga@@Base+0x35>
  401878:	xor    ebx,ebx
  40187a:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	mov    rax,QWORD PTR [rbp+0x8]
  401884:	mov    rdi,QWORD PTR [rax+rbx*8]
  401888:	inc    rbx
  40188b:	call   401140 <free@plt>
  401890:	cmp    DWORD PTR [rbp+0x0],ebx
  401893:	jg     401880 <vetor_apaga@@Base+0x20>
  401895:	mov    rdi,QWORD PTR [rbp+0x8]
  401899:	call   401140 <free@plt>
  40189e:	add    rsp,0x8
  4018a2:	pop    rbx
  4018a3:	mov    rdi,rbp
  4018a6:	pop    rbp
  4018a7:	jmp    401140 <free@plt>
  4018ac:	nop    DWORD PTR [rax+0x0]
  4018b0:	ret    
  4018b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018bc:	nop    DWORD PTR [rax+0x0]

00000000004018c0 <vetor_atribui@@Base>:
  4018c0:	endbr64 
  4018c4:	test   rdi,rdi
  4018c7:	je     401962 <vetor_atribui@@Base+0xa2>
  4018cd:	test   esi,esi
  4018cf:	js     401962 <vetor_atribui@@Base+0xa2>
  4018d5:	cmp    DWORD PTR [rdi],esi
  4018d7:	jle    401962 <vetor_atribui@@Base+0xa2>
  4018dd:	push   r15
  4018df:	push   r14
  4018e1:	movsxd r14,esi
  4018e4:	push   r13
  4018e6:	mov    r13,rdx
  4018e9:	push   r12
  4018eb:	mov    r12,r14
  4018ee:	push   rbp
  4018ef:	mov    rbp,rdi
  4018f2:	mov    rdi,rdx
  4018f5:	push   rbx
  4018f6:	sub    rsp,0x18
  4018fa:	call   401180 <strlen@plt>
  4018ff:	mov    QWORD PTR [rsp+0x8],rax
  401904:	mov    rax,QWORD PTR [rbp+0x8]
  401908:	lea    r15,[rax+r14*8]
  40190c:	mov    rbx,QWORD PTR [r15]
  40190f:	mov    rdi,rbx
  401912:	call   401180 <strlen@plt>
  401917:	mov    rdx,QWORD PTR [rsp+0x8]
  40191c:	mov    ecx,edx
  40191e:	cmp    rax,rcx
  401921:	jb     401940 <vetor_atribui@@Base+0x80>
  401923:	mov    rsi,r13
  401926:	mov    rdi,rbx
  401929:	call   401150 <strcpy@plt>
  40192e:	mov    eax,r12d
  401931:	add    rsp,0x18
  401935:	pop    rbx
  401936:	pop    rbp
  401937:	pop    r12
  401939:	pop    r13
  40193b:	pop    r14
  40193d:	pop    r15
  40193f:	ret    
  401940:	mov    rdi,rbx
  401943:	lea    esi,[rdx+0x1]
  401946:	call   401220 <realloc@plt>
  40194b:	mov    QWORD PTR [r15],rax
  40194e:	mov    rax,QWORD PTR [rbp+0x8]
  401952:	mov    rbx,QWORD PTR [rax+r14*8]
  401956:	test   rbx,rbx
  401959:	jne    401923 <vetor_atribui@@Base+0x63>
  40195b:	mov    eax,0xffffffff
  401960:	jmp    401931 <vetor_atribui@@Base+0x71>
  401962:	or     eax,0xffffffff
  401965:	ret    
  401966:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401970 <vetor_tamanho@@Base>:
  401970:	endbr64 
  401974:	test   rdi,rdi
  401977:	je     40197c <vetor_tamanho@@Base+0xc>
  401979:	mov    eax,DWORD PTR [rdi]
  40197b:	ret    
  40197c:	mov    eax,0xffffffff
  401981:	ret    
  401982:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40198d:	nop    DWORD PTR [rax]

0000000000401990 <vetor_elemento@@Base>:
  401990:	endbr64 
  401994:	test   rdi,rdi
  401997:	je     4019b0 <vetor_elemento@@Base+0x20>
  401999:	test   esi,esi
  40199b:	js     4019b0 <vetor_elemento@@Base+0x20>
  40199d:	cmp    DWORD PTR [rdi],esi
  40199f:	jle    4019b0 <vetor_elemento@@Base+0x20>
  4019a1:	mov    rax,QWORD PTR [rdi+0x8]
  4019a5:	movsxd rsi,esi
  4019a8:	mov    rax,QWORD PTR [rax+rsi*8]
  4019ac:	ret    
  4019ad:	nop    DWORD PTR [rax]
  4019b0:	xor    eax,eax
  4019b2:	ret    
  4019b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019be:	xchg   ax,ax

00000000004019c0 <vetor_insere@@Base>:
  4019c0:	endbr64 
  4019c4:	test   rdi,rdi
  4019c7:	je     401ac4 <vetor_insere@@Base+0x104>
  4019cd:	test   edx,edx
  4019cf:	js     401ac4 <vetor_insere@@Base+0x104>
  4019d5:	push   r14
  4019d7:	push   r13
  4019d9:	push   r12
  4019db:	push   rbp
  4019dc:	push   rbx
  4019dd:	mov    r12d,DWORD PTR [rdi]
  4019e0:	cmp    r12d,edx
  4019e3:	jl     401abd <vetor_insere@@Base+0xfd>
  4019e9:	mov    ebx,edx
  4019eb:	mov    rbp,rsi
  4019ee:	mov    r13,rdi
  4019f1:	cmp    r12d,DWORD PTR [rdi+0x4]
  4019f5:	je     401a80 <vetor_insere@@Base+0xc0>
  4019fb:	lea    eax,[r12-0x1]
  401a00:	mov    r14,QWORD PTR [r13+0x8]
  401a04:	cmp    ebx,eax
  401a06:	jg     401a38 <vetor_insere@@Base+0x78>
  401a08:	mov    edx,ebx
  401a0a:	cdqe   
  401a0c:	not    edx
  401a0e:	shl    rax,0x3
  401a12:	add    edx,r12d
  401a15:	lea    rcx,[r14+rax*1]
  401a19:	shl    rdx,0x3
  401a1d:	lea    rax,[r14+rax*1-0x8]
  401a22:	sub    rax,rdx
  401a25:	nop    DWORD PTR [rax]
  401a28:	mov    r8,QWORD PTR [rcx]
  401a2b:	sub    rcx,0x8
  401a2f:	mov    QWORD PTR [rcx+0x10],r8
  401a33:	cmp    rcx,rax
  401a36:	jne    401a28 <vetor_insere@@Base+0x68>
  401a38:	mov    rdi,rbp
  401a3b:	call   401180 <strlen@plt>
  401a40:	lea    rdi,[rax+0x1]
  401a44:	movsxd rdx,ebx
  401a47:	mov    esi,0x1
  401a4c:	lea    r14,[r14+rdx*8]
  401a50:	call   4011c0 <calloc@plt>
  401a55:	mov    QWORD PTR [r14],rax
  401a58:	test   rax,rax
  401a5b:	je     401abd <vetor_insere@@Base+0xfd>
  401a5d:	mov    rsi,rbp
  401a60:	mov    rdi,rax
  401a63:	inc    r12d
  401a66:	call   401150 <strcpy@plt>
  401a6b:	mov    DWORD PTR [r13+0x0],r12d
  401a6f:	mov    eax,ebx
  401a71:	pop    rbx
  401a72:	pop    rbp
  401a73:	pop    r12
  401a75:	pop    r13
  401a77:	pop    r14
  401a79:	ret    
  401a7a:	nop    WORD PTR [rax+rax*1+0x0]
  401a80:	test   r12d,r12d
  401a83:	je     401ab0 <vetor_insere@@Base+0xf0>
  401a85:	add    r12d,r12d
  401a88:	movsxd rsi,r12d
  401a8b:	shl    rsi,0x3
  401a8f:	mov    DWORD PTR [r13+0x4],r12d
  401a93:	mov    rdi,QWORD PTR [r13+0x8]
  401a97:	call   401220 <realloc@plt>
  401a9c:	mov    QWORD PTR [r13+0x8],rax
  401aa0:	test   rax,rax
  401aa3:	je     401abd <vetor_insere@@Base+0xfd>
  401aa5:	mov    r12d,DWORD PTR [r13+0x0]
  401aa9:	jmp    4019fb <vetor_insere@@Base+0x3b>
  401aae:	xchg   ax,ax
  401ab0:	mov    esi,0x8
  401ab5:	mov    r12d,0x1
  401abb:	jmp    401a8f <vetor_insere@@Base+0xcf>
  401abd:	mov    eax,0xffffffff
  401ac2:	jmp    401a71 <vetor_insere@@Base+0xb1>
  401ac4:	or     eax,0xffffffff
  401ac7:	ret    
  401ac8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401ad0 <vetor_remove@@Base>:
  401ad0:	endbr64 
  401ad4:	test   rdi,rdi
  401ad7:	je     401b51 <vetor_remove@@Base+0x81>
  401ad9:	test   esi,esi
  401adb:	js     401b51 <vetor_remove@@Base+0x81>
  401add:	cmp    DWORD PTR [rdi],esi
  401adf:	jle    401b51 <vetor_remove@@Base+0x81>
  401ae1:	push   r13
  401ae3:	push   r12
  401ae5:	movsxd r12,esi
  401ae8:	lea    r13,[r12*8+0x0]
  401af0:	push   rbp
  401af1:	push   rbx
  401af2:	mov    rbx,rdi
  401af5:	sub    rsp,0x8
  401af9:	mov    rax,QWORD PTR [rdi+0x8]
  401afd:	mov    rdi,QWORD PTR [rax+r12*8]
  401b01:	call   401140 <free@plt>
  401b06:	mov    esi,DWORD PTR [rbx]
  401b08:	lea    eax,[r12+0x1]
  401b0d:	cmp    eax,esi
  401b0f:	jge    401b40 <vetor_remove@@Base+0x70>
  401b11:	mov    edx,esi
  401b13:	sub    edx,r12d
  401b16:	mov    rcx,QWORD PTR [rbx+0x8]
  401b1a:	sub    edx,0x2
  401b1d:	add    r12,rdx
  401b20:	lea    rax,[rcx+r13*1+0x8]
  401b25:	lea    rcx,[rcx+r12*8+0x10]
  401b2a:	nop    WORD PTR [rax+rax*1+0x0]
  401b30:	mov    rdx,QWORD PTR [rax]
  401b33:	add    rax,0x8
  401b37:	mov    QWORD PTR [rax-0x10],rdx
  401b3b:	cmp    rax,rcx
  401b3e:	jne    401b30 <vetor_remove@@Base+0x60>
  401b40:	dec    esi
  401b42:	mov    DWORD PTR [rbx],esi
  401b44:	add    rsp,0x8
  401b48:	xor    eax,eax
  401b4a:	pop    rbx
  401b4b:	pop    rbp
  401b4c:	pop    r12
  401b4e:	pop    r13
  401b50:	ret    
  401b51:	mov    eax,0xffffffff
  401b56:	ret    
  401b57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401b60 <vetor_pesquisa@@Base>:
  401b60:	endbr64 
  401b64:	push   r14
  401b66:	push   r13
  401b68:	push   r12
  401b6a:	push   rbp
  401b6b:	push   rbx
  401b6c:	test   rdi,rdi
  401b6f:	je     401bc0 <vetor_pesquisa@@Base+0x60>
  401b71:	mov    eax,DWORD PTR [rdi]
  401b73:	mov    r12d,0xffffffff
  401b79:	test   eax,eax
  401b7b:	jle    401baf <vetor_pesquisa@@Base+0x4f>
  401b7d:	mov    rbp,rsi
  401b80:	mov    r14,QWORD PTR [rdi+0x8]
  401b84:	lea    r13d,[rax-0x1]
  401b88:	xor    ebx,ebx
  401b8a:	jmp    401b9c <vetor_pesquisa@@Base+0x3c>
  401b8c:	nop    DWORD PTR [rax+0x0]
  401b90:	lea    rax,[rbx+0x1]
  401b94:	cmp    rbx,r13
  401b97:	je     401bc0 <vetor_pesquisa@@Base+0x60>
  401b99:	mov    rbx,rax
  401b9c:	mov    rdi,QWORD PTR [r14+rbx*8]
  401ba0:	mov    rsi,rbp
  401ba3:	mov    r12d,ebx
  401ba6:	call   4011d0 <strcmp@plt>
  401bab:	test   eax,eax
  401bad:	jne    401b90 <vetor_pesquisa@@Base+0x30>
  401baf:	pop    rbx
  401bb0:	pop    rbp
  401bb1:	mov    eax,r12d
  401bb4:	pop    r12
  401bb6:	pop    r13
  401bb8:	pop    r14
  401bba:	ret    
  401bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401bc0:	pop    rbx
  401bc1:	pop    rbp
  401bc2:	mov    r12d,0xffffffff
  401bc8:	mov    eax,r12d
  401bcb:	pop    r12
  401bcd:	pop    r13
  401bcf:	pop    r14
  401bd1:	ret    
  401bd2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bdd:	nop    DWORD PTR [rax]

0000000000401be0 <vetor_ordena@@Base>:
  401be0:	endbr64 
  401be4:	test   rdi,rdi
  401be7:	je     401c7b <vetor_ordena@@Base+0x9b>
  401bed:	push   r15
  401bef:	push   r14
  401bf1:	push   r13
  401bf3:	push   r12
  401bf5:	push   rbp
  401bf6:	push   rbx
  401bf7:	sub    rsp,0x18
  401bfb:	mov    eax,DWORD PTR [rdi]
  401bfd:	mov    DWORD PTR [rsp+0x4],eax
  401c01:	cmp    eax,0x1
  401c04:	jle    401c6a <vetor_ordena@@Base+0x8a>
  401c06:	mov    rax,QWORD PTR [rdi+0x8]
  401c0a:	mov    DWORD PTR [rsp],0x1
  401c11:	mov    QWORD PTR [rsp+0x8],rax
  401c16:	lea    r14,[rax+0x8]
  401c1a:	nop    WORD PTR [rax+rax*1+0x0]
  401c20:	mov    r12,QWORD PTR [r14]
  401c23:	mov    ebx,DWORD PTR [rsp]
  401c26:	mov    r15,r14
  401c29:	nop    DWORD PTR [rax+0x0]
  401c30:	mov    r13,QWORD PTR [r15-0x8]
  401c34:	mov    rdi,r12
  401c37:	mov    rsi,r13
  401c3a:	mov    rbp,r15
  401c3d:	call   4011d0 <strcmp@plt>
  401c42:	test   eax,eax
  401c44:	jns    401c56 <vetor_ordena@@Base+0x76>
  401c46:	mov    QWORD PTR [r15],r13
  401c49:	lea    r15,[rbp-0x8]
  401c4d:	dec    ebx
  401c4f:	jne    401c30 <vetor_ordena@@Base+0x50>
  401c51:	mov    rbp,QWORD PTR [rsp+0x8]
  401c56:	inc    DWORD PTR [rsp]
  401c59:	mov    QWORD PTR [rbp+0x0],r12
  401c5d:	add    r14,0x8
  401c61:	mov    eax,DWORD PTR [rsp]
  401c64:	cmp    eax,DWORD PTR [rsp+0x4]
  401c68:	jne    401c20 <vetor_ordena@@Base+0x40>
  401c6a:	add    rsp,0x18
  401c6e:	pop    rbx
  401c6f:	pop    rbp
  401c70:	pop    r12
  401c72:	pop    r13
  401c74:	pop    r14
  401c76:	xor    eax,eax
  401c78:	pop    r15
  401c7a:	ret    
  401c7b:	mov    eax,0xffffffff
  401c80:	ret    
  401c81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401c90 <novo_str@@Base>:
  401c90:	endbr64 
  401c94:	push   r12
  401c96:	mov    r12,rdi
  401c99:	mov    edi,0x18
  401c9e:	push   rbp
  401c9f:	push   rbx
  401ca0:	call   401210 <malloc@plt>
  401ca5:	mov    rbx,rax
  401ca8:	test   rax,rax
  401cab:	je     401ce7 <novo_str@@Base+0x57>
  401cad:	mov    rdi,r12
  401cb0:	call   401180 <strlen@plt>
  401cb5:	lea    rbp,[rax+0x1]
  401cb9:	mov    rdi,rbp
  401cbc:	call   401210 <malloc@plt>
  401cc1:	mov    QWORD PTR [rbx],rax
  401cc4:	test   rax,rax
  401cc7:	je     401cf0 <novo_str@@Base+0x60>
  401cc9:	mov    rdx,rbp
  401ccc:	mov    rsi,r12
  401ccf:	mov    rdi,rax
  401cd2:	call   401200 <memcpy@plt>
  401cd7:	mov    QWORD PTR [rbx+0x8],0x0
  401cdf:	mov    QWORD PTR [rbx+0x10],0x0
  401ce7:	mov    rax,rbx
  401cea:	pop    rbx
  401ceb:	pop    rbp
  401cec:	pop    r12
  401cee:	ret    
  401cef:	nop
  401cf0:	mov    rdi,rbx
  401cf3:	call   401140 <free@plt>
  401cf8:	xor    ebx,ebx
  401cfa:	jmp    401ce7 <novo_str@@Base+0x57>
  401cfc:	nop    DWORD PTR [rax+0x0]

0000000000401d00 <lista_nova@@Base>:
  401d00:	endbr64 
  401d04:	sub    rsp,0x8
  401d08:	mov    edi,0x18
  401d0d:	call   401210 <malloc@plt>
  401d12:	test   rax,rax
  401d15:	je     401d2d <lista_nova@@Base+0x2d>
  401d17:	mov    QWORD PTR [rax],0x0
  401d1e:	mov    QWORD PTR [rax+0x8],0x0
  401d26:	mov    DWORD PTR [rax+0x10],0x0
  401d2d:	add    rsp,0x8
  401d31:	ret    
  401d32:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d3d:	nop    DWORD PTR [rax]

0000000000401d40 <lista_apaga@@Base>:
  401d40:	endbr64 
  401d44:	test   rdi,rdi
  401d47:	je     401d90 <lista_apaga@@Base+0x50>
  401d49:	push   rbp
  401d4a:	mov    rbp,rdi
  401d4d:	push   rbx
  401d4e:	sub    rsp,0x8
  401d52:	mov    rbx,QWORD PTR [rdi]
  401d55:	test   rbx,rbx
  401d58:	je     401d81 <lista_apaga@@Base+0x41>
  401d5a:	nop    WORD PTR [rax+rax*1+0x0]
  401d60:	mov    rax,QWORD PTR [rbx+0x8]
  401d64:	mov    rdi,QWORD PTR [rbx]
  401d67:	mov    QWORD PTR [rbp+0x0],rax
  401d6b:	call   401140 <free@plt>
  401d70:	mov    rdi,rbx
  401d73:	call   401140 <free@plt>
  401d78:	mov    rbx,QWORD PTR [rbp+0x0]
  401d7c:	test   rbx,rbx
  401d7f:	jne    401d60 <lista_apaga@@Base+0x20>
  401d81:	add    rsp,0x8
  401d85:	pop    rbx
  401d86:	mov    rdi,rbp
  401d89:	pop    rbp
  401d8a:	jmp    401140 <free@plt>
  401d8f:	nop
  401d90:	ret    
  401d91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d9c:	nop    DWORD PTR [rax+0x0]

0000000000401da0 <lista_tamanho@@Base>:
  401da0:	endbr64 
  401da4:	test   rdi,rdi
  401da7:	je     401dad <lista_tamanho@@Base+0xd>
  401da9:	mov    eax,DWORD PTR [rdi+0x10]
  401dac:	ret    
  401dad:	mov    eax,0xffffffff
  401db2:	ret    
  401db3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dbe:	xchg   ax,ax

0000000000401dc0 <lista_inicio@@Base>:
  401dc0:	endbr64 
  401dc4:	test   rdi,rdi
  401dc7:	je     401dd0 <lista_inicio@@Base+0x10>
  401dc9:	mov    rax,QWORD PTR [rdi]
  401dcc:	ret    
  401dcd:	nop    DWORD PTR [rax]
  401dd0:	xor    eax,eax
  401dd2:	ret    
  401dd3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dde:	xchg   ax,ax

0000000000401de0 <lista_fim@@Base>:
  401de0:	endbr64 
  401de4:	test   rdi,rdi
  401de7:	je     401df0 <lista_fim@@Base+0x10>
  401de9:	mov    rax,QWORD PTR [rdi+0x8]
  401ded:	ret    
  401dee:	xchg   ax,ax
  401df0:	xor    eax,eax
  401df2:	ret    
  401df3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dfe:	xchg   ax,ax

0000000000401e00 <lista_insere@@Base>:
  401e00:	endbr64 
  401e04:	test   rdi,rdi
  401e07:	je     401ea0 <lista_insere@@Base+0xa0>
  401e0d:	test   rsi,rsi
  401e10:	je     401ea0 <lista_insere@@Base+0xa0>
  401e16:	push   rbp
  401e17:	mov    rbp,rdx
  401e1a:	push   rbx
  401e1b:	mov    rbx,rdi
  401e1e:	mov    rdi,rsi
  401e21:	sub    rsp,0x8
  401e25:	call   401c90 <novo_str@@Base>
  401e2a:	test   rax,rax
  401e2d:	je     401e60 <lista_insere@@Base+0x60>
  401e2f:	inc    DWORD PTR [rbx+0x10]
  401e32:	mov    rdx,QWORD PTR [rbx]
  401e35:	test   rbp,rbp
  401e38:	je     401e80 <lista_insere@@Base+0x80>
  401e3a:	cmp    rbp,rdx
  401e3d:	je     401e70 <lista_insere@@Base+0x70>
  401e3f:	mov    rdx,QWORD PTR [rbp+0x10]
  401e43:	mov    QWORD PTR [rax+0x8],rbp
  401e47:	mov    QWORD PTR [rax+0x10],rdx
  401e4b:	mov    rdx,QWORD PTR [rbp+0x10]
  401e4f:	mov    QWORD PTR [rdx+0x8],rax
  401e53:	mov    QWORD PTR [rbp+0x10],rax
  401e57:	add    rsp,0x8
  401e5b:	pop    rbx
  401e5c:	pop    rbp
  401e5d:	ret    
  401e5e:	xchg   ax,ax
  401e60:	add    rsp,0x8
  401e64:	pop    rbx
  401e65:	xor    eax,eax
  401e67:	pop    rbp
  401e68:	ret    
  401e69:	nop    DWORD PTR [rax+0x0]
  401e70:	mov    QWORD PTR [rax+0x8],rbp
  401e74:	mov    QWORD PTR [rbp+0x10],rax
  401e78:	mov    QWORD PTR [rbx],rax
  401e7b:	jmp    401e57 <lista_insere@@Base+0x57>
  401e7d:	nop    DWORD PTR [rax]
  401e80:	test   rdx,rdx
  401e83:	je     401ea8 <lista_insere@@Base+0xa8>
  401e85:	mov    rdx,QWORD PTR [rbx+0x8]
  401e89:	mov    QWORD PTR [rax+0x10],rdx
  401e8d:	mov    QWORD PTR [rdx+0x8],rax
  401e91:	mov    QWORD PTR [rbx+0x8],rax
  401e95:	jmp    401e57 <lista_insere@@Base+0x57>
  401e97:	nop    WORD PTR [rax+rax*1+0x0]
  401ea0:	xor    eax,eax
  401ea2:	ret    
  401ea3:	nop    DWORD PTR [rax+rax*1+0x0]
  401ea8:	mov    QWORD PTR [rbx+0x8],rax
  401eac:	mov    QWORD PTR [rbx],rax
  401eaf:	jmp    401e57 <lista_insere@@Base+0x57>
  401eb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401ebc:	nop    DWORD PTR [rax+0x0]

0000000000401ec0 <lista_remove@@Base>:
  401ec0:	endbr64 
  401ec4:	push   rbp
  401ec5:	push   rbx
  401ec6:	sub    rsp,0x8
  401eca:	test   rdi,rdi
  401ecd:	je     401f30 <lista_remove@@Base+0x70>
  401ecf:	test   rsi,rsi
  401ed2:	je     401f30 <lista_remove@@Base+0x70>
  401ed4:	mov    rax,QWORD PTR [rsi+0x10]
  401ed8:	dec    DWORD PTR [rdi+0x10]
  401edb:	mov    rbp,QWORD PTR [rsi+0x8]
  401edf:	test   rax,rax
  401ee2:	je     401f18 <lista_remove@@Base+0x58>
  401ee4:	mov    QWORD PTR [rax+0x8],rbp
  401ee8:	mov    rbp,QWORD PTR [rsi+0x8]
  401eec:	test   rbp,rbp
  401eef:	je     401f20 <lista_remove@@Base+0x60>
  401ef1:	mov    QWORD PTR [rbp+0x10],rax
  401ef5:	mov    rdi,QWORD PTR [rsi]
  401ef8:	mov    rbx,rsi
  401efb:	call   401140 <free@plt>
  401f00:	mov    rdi,rbx
  401f03:	call   401140 <free@plt>
  401f08:	add    rsp,0x8
  401f0c:	pop    rbx
  401f0d:	mov    rax,rbp
  401f10:	pop    rbp
  401f11:	ret    
  401f12:	nop    WORD PTR [rax+rax*1+0x0]
  401f18:	mov    QWORD PTR [rdi],rbp
  401f1b:	test   rbp,rbp
  401f1e:	jne    401ef1 <lista_remove@@Base+0x31>
  401f20:	mov    QWORD PTR [rdi+0x8],rax
  401f24:	jmp    401ef5 <lista_remove@@Base+0x35>
  401f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f30:	add    rsp,0x8
  401f34:	xor    ebp,ebp
  401f36:	pop    rbx
  401f37:	mov    rax,rbp
  401f3a:	pop    rbp
  401f3b:	ret    
  401f3c:	nop    DWORD PTR [rax+0x0]

0000000000401f40 <lista_pesquisa@@Base>:
  401f40:	endbr64 
  401f44:	push   rbp
  401f45:	push   rbx
  401f46:	xor    ebx,ebx
  401f48:	sub    rsp,0x8
  401f4c:	test   rdi,rdi
  401f4f:	je     401f88 <lista_pesquisa@@Base+0x48>
  401f51:	test   rsi,rsi
  401f54:	je     401f88 <lista_pesquisa@@Base+0x48>
  401f56:	cmp    edx,0x1
  401f59:	ja     401f88 <lista_pesquisa@@Base+0x48>
  401f5b:	mov    rbp,rsi
  401f5e:	test   edx,edx
  401f60:	jne    401f98 <lista_pesquisa@@Base+0x58>
  401f62:	mov    rbx,QWORD PTR [rdi]
  401f65:	test   rbx,rbx
  401f68:	jne    401f79 <lista_pesquisa@@Base+0x39>
  401f6a:	jmp    401f88 <lista_pesquisa@@Base+0x48>
  401f6c:	nop    DWORD PTR [rax+0x0]
  401f70:	mov    rbx,QWORD PTR [rbx+0x8]
  401f74:	test   rbx,rbx
  401f77:	je     401f88 <lista_pesquisa@@Base+0x48>
  401f79:	mov    rdi,QWORD PTR [rbx]
  401f7c:	mov    rsi,rbp
  401f7f:	call   4011d0 <strcmp@plt>
  401f84:	test   eax,eax
  401f86:	jne    401f70 <lista_pesquisa@@Base+0x30>
  401f88:	add    rsp,0x8
  401f8c:	mov    rax,rbx
  401f8f:	pop    rbx
  401f90:	pop    rbp
  401f91:	ret    
  401f92:	nop    WORD PTR [rax+rax*1+0x0]
  401f98:	mov    rbx,QWORD PTR [rdi+0x8]
  401f9c:	test   rbx,rbx
  401f9f:	jne    401fb1 <lista_pesquisa@@Base+0x71>
  401fa1:	jmp    401f88 <lista_pesquisa@@Base+0x48>
  401fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  401fa8:	mov    rbx,QWORD PTR [rbx+0x10]
  401fac:	test   rbx,rbx
  401faf:	je     401f88 <lista_pesquisa@@Base+0x48>
  401fb1:	mov    rdi,QWORD PTR [rbx]
  401fb4:	mov    rsi,rbp
  401fb7:	call   4011d0 <strcmp@plt>
  401fbc:	test   eax,eax
  401fbe:	jne    401fa8 <lista_pesquisa@@Base+0x68>
  401fc0:	add    rsp,0x8
  401fc4:	mov    rax,rbx
  401fc7:	pop    rbx
  401fc8:	pop    rbp
  401fc9:	ret    
  401fca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401fd0 <lista_ordena@@Base>:
  401fd0:	endbr64 
  401fd4:	test   rdi,rdi
  401fd7:	je     40204a <lista_ordena@@Base+0x7a>
  401fd9:	push   r13
  401fdb:	push   r12
  401fdd:	push   rbp
  401fde:	push   rbx
  401fdf:	sub    rsp,0x8
  401fe3:	mov    r12,QWORD PTR [rdi]
  401fe6:	mov    r13,QWORD PTR [r12+0x8]
  401feb:	test   r13,r13
  401fee:	je     40203d <lista_ordena@@Base+0x6d>
  401ff0:	mov    rbp,r12
  401ff3:	mov    rbx,r13
  401ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402000:	mov    rsi,QWORD PTR [rbp+0x0]
  402004:	mov    rdi,QWORD PTR [rbx]
  402007:	call   4011d0 <strcmp@plt>
  40200c:	test   eax,eax
  40200e:	cmovs  rbp,rbx
  402012:	mov    rbx,QWORD PTR [rbx+0x8]
  402016:	test   rbx,rbx
  402019:	jne    402000 <lista_ordena@@Base+0x30>
  40201b:	cmp    r12,rbp
  40201e:	je     402030 <lista_ordena@@Base+0x60>
  402020:	mov    rax,QWORD PTR [r12]
  402024:	mov    rdx,QWORD PTR [rbp+0x0]
  402028:	mov    QWORD PTR [r12],rdx
  40202c:	mov    QWORD PTR [rbp+0x0],rax
  402030:	mov    r12,r13
  402033:	mov    r13,QWORD PTR [r12+0x8]
  402038:	test   r13,r13
  40203b:	jne    401ff0 <lista_ordena@@Base+0x20>
  40203d:	add    rsp,0x8
  402041:	pop    rbx
  402042:	pop    rbp
  402043:	pop    r12
  402045:	xor    eax,eax
  402047:	pop    r13
  402049:	ret    
  40204a:	mov    eax,0xffffffff
  40204f:	ret    

0000000000402050 <lista_inverte@@Base>:
  402050:	endbr64 
  402054:	test   rdi,rdi
  402057:	je     4020d3 <lista_inverte@@Base+0x83>
  402059:	mov    r10d,DWORD PTR [rdi+0x10]
  40205d:	xor    eax,eax
  40205f:	cmp    r10d,0x1
  402063:	jle    4020d8 <lista_inverte@@Base+0x88>
  402065:	mov    rdx,QWORD PTR [rdi]
  402068:	mov    rax,QWORD PTR [rdx+0x8]
  40206c:	cmp    r10d,0x2
  402070:	je     4020e0 <lista_inverte@@Base+0x90>
  402072:	sub    r10d,0x2
  402076:	xor    ecx,ecx
  402078:	jmp    402083 <lista_inverte@@Base+0x33>
  40207a:	nop    WORD PTR [rax+rax*1+0x0]
  402080:	mov    rax,r8
  402083:	mov    r8,QWORD PTR [rax+0x8]
  402087:	mov    rsi,QWORD PTR [rax+0x10]
  40208b:	inc    ecx
  40208d:	mov    QWORD PTR [rsi+0x8],r8
  402091:	mov    r9,QWORD PTR [rax+0x8]
  402095:	mov    QWORD PTR [r9+0x10],rsi
  402099:	mov    QWORD PTR [rax+0x8],rdx
  40209d:	mov    QWORD PTR [rdx+0x10],rax
  4020a1:	mov    rdx,rax
  4020a4:	cmp    r10d,ecx
  4020a7:	jne    402080 <lista_inverte@@Base+0x30>
  4020a9:	mov    rdx,QWORD PTR [rdi+0x8]
  4020ad:	mov    rcx,QWORD PTR [rdx+0x10]
  4020b1:	mov    QWORD PTR [rdi+0x8],rcx
  4020b5:	mov    QWORD PTR [rcx+0x8],0x0
  4020bd:	mov    QWORD PTR [rdx+0x8],rax
  4020c1:	mov    QWORD PTR [rdx+0x10],0x0
  4020c9:	mov    QWORD PTR [rax+0x10],rdx
  4020cd:	mov    QWORD PTR [rdi],rdx
  4020d0:	xor    eax,eax
  4020d2:	ret    
  4020d3:	mov    eax,0xffffffff
  4020d8:	ret    
  4020d9:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    rax,rdx
  4020e3:	jmp    4020a9 <lista_inverte@@Base+0x59>
  4020e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020ef:	nop

00000000004020f0 <__libc_csu_init@@Base>:
  4020f0:	endbr64 
  4020f4:	push   r15
  4020f6:	lea    r15,[rip+0x2d13]        # 404e10 <_IO_stdin_used@@Base+0x1e10>
  4020fd:	push   r14
  4020ff:	mov    r14,rdx
  402102:	push   r13
  402104:	mov    r13,rsi
  402107:	push   r12
  402109:	mov    r12d,edi
  40210c:	push   rbp
  40210d:	lea    rbp,[rip+0x2d04]        # 404e18 <_IO_stdin_used@@Base+0x1e18>
  402114:	push   rbx
  402115:	sub    rbp,r15
  402118:	sub    rsp,0x8
  40211c:	call   401000 <free@plt-0x140>
  402121:	sar    rbp,0x3
  402125:	je     402146 <__libc_csu_init@@Base+0x56>
  402127:	xor    ebx,ebx
  402129:	nop    DWORD PTR [rax+0x0]
  402130:	mov    rdx,r14
  402133:	mov    rsi,r13
  402136:	mov    edi,r12d
  402139:	call   QWORD PTR [r15+rbx*8]
  40213d:	add    rbx,0x1
  402141:	cmp    rbp,rbx
  402144:	jne    402130 <__libc_csu_init@@Base+0x40>
  402146:	add    rsp,0x8
  40214a:	pop    rbx
  40214b:	pop    rbp
  40214c:	pop    r12
  40214e:	pop    r13
  402150:	pop    r14
  402152:	pop    r15
  402154:	ret    
  402155:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402160 <__libc_csu_fini@@Base>:
  402160:	endbr64 
  402164:	ret    

Disassembly of section .fini:

0000000000402168 <.fini>:
  402168:	endbr64 
  40216c:	sub    rsp,0x8
  402170:	add    rsp,0x8
  402174:	ret    
