
../repos/vis/vis-menu:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__ctype_b_loc@plt+0x4de8>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x4eb2]        # 405ed8 <__ctype_b_loc@plt+0x4cd8>
  401026:	jmp    QWORD PTR [rip+0x4eb4]        # 405ee0 <__ctype_b_loc@plt+0x4ce0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x4eb2]        # 405ee8 <__ctype_b_loc@plt+0x4ce8>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x4eaa]        # 405ef0 <__ctype_b_loc@plt+0x4cf0>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncpy@plt>:
  401050:	jmp    QWORD PTR [rip+0x4ea2]        # 405ef8 <__ctype_b_loc@plt+0x4cf8>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <puts@plt>:
  401060:	jmp    QWORD PTR [rip+0x4e9a]        # 405f00 <__ctype_b_loc@plt+0x4d00>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strlen@plt>:
  401070:	jmp    QWORD PTR [rip+0x4e92]        # 405f08 <__ctype_b_loc@plt+0x4d08>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <__stack_chk_fail@plt>:
  401080:	jmp    QWORD PTR [rip+0x4e8a]        # 405f10 <__ctype_b_loc@plt+0x4d10>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strchr@plt>:
  401090:	jmp    QWORD PTR [rip+0x4e82]        # 405f18 <__ctype_b_loc@plt+0x4d18>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <memset@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x4e7a]        # 405f20 <__ctype_b_loc@plt+0x4d20>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <freopen@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x4e72]        # 405f28 <__ctype_b_loc@plt+0x4d28>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <ioctl@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x4e6a]        # 405f30 <__ctype_b_loc@plt+0x4d30>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <close@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x4e62]        # 405f38 <__ctype_b_loc@plt+0x4d38>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <read@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x4e5a]        # 405f40 <__ctype_b_loc@plt+0x4d40>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x4e52]        # 405f48 <__ctype_b_loc@plt+0x4d48>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x4e4a]        # 405f50 <__ctype_b_loc@plt+0x4d50>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <strcmp@plt>:
  401110:	jmp    QWORD PTR [rip+0x4e42]        # 405f58 <__ctype_b_loc@plt+0x4d58>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <memcpy@plt>:
  401120:	jmp    QWORD PTR [rip+0x4e3a]        # 405f60 <__ctype_b_loc@plt+0x4d60>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <fflush@plt>:
  401130:	jmp    QWORD PTR [rip+0x4e32]        # 405f68 <__ctype_b_loc@plt+0x4d68>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <realloc@plt>:
  401140:	jmp    QWORD PTR [rip+0x4e2a]        # 405f70 <__ctype_b_loc@plt+0x4d70>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <__strcpy_chk@plt>:
  401150:	jmp    QWORD PTR [rip+0x4e22]        # 405f78 <__ctype_b_loc@plt+0x4d78>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <memmove@plt>:
  401160:	jmp    QWORD PTR [rip+0x4e1a]        # 405f80 <__ctype_b_loc@plt+0x4d80>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <tcgetattr@plt>:
  401170:	jmp    QWORD PTR [rip+0x4e12]        # 405f88 <__ctype_b_loc@plt+0x4d88>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <tcsetattr@plt>:
  401180:	jmp    QWORD PTR [rip+0x4e0a]        # 405f90 <__ctype_b_loc@plt+0x4d90>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <open@plt>:
  401190:	jmp    QWORD PTR [rip+0x4e02]        # 405f98 <__ctype_b_loc@plt+0x4d98>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <strtok@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x4dfa]        # 405fa0 <__ctype_b_loc@plt+0x4da0>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <strtoul@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x4df2]        # 405fa8 <__ctype_b_loc@plt+0x4da8>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <exit@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x4dea]        # 405fb0 <__ctype_b_loc@plt+0x4db0>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <fwrite@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x4de2]        # 405fb8 <__ctype_b_loc@plt+0x4db8>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <__fprintf_chk@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x4dda]        # 405fc0 <__ctype_b_loc@plt+0x4dc0>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

00000000004011f0 <strdup@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x4dd2]        # 405fc8 <__ctype_b_loc@plt+0x4dc8>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <free@plt-0x10>

0000000000401200 <__ctype_b_loc@plt>:
  401200:	jmp    QWORD PTR [rip+0x4dca]        # 405fd0 <__ctype_b_loc@plt+0x4dd0>
  401206:	push   0x1d
  40120b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401210 <.text>:
  401210:	endbr64 
  401214:	xor    ebp,ebp
  401216:	mov    r9,rdx
  401219:	pop    rsi
  40121a:	mov    rdx,rsp
  40121d:	and    rsp,0xfffffffffffffff0
  401221:	push   rax
  401222:	push   rsp
  401223:	mov    r8,0x4033f0
  40122a:	mov    rcx,0x403380
  401231:	mov    rdi,0x401300
  401238:	call   QWORD PTR [rip+0x4da2]        # 405fe0 <__ctype_b_loc@plt+0x4de0>
  40123e:	hlt    
  40123f:	nop
  401240:	endbr64 
  401244:	ret    
  401245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40124f:	nop
  401250:	mov    eax,0x406008
  401255:	cmp    rax,0x406008
  40125b:	je     401270 <__ctype_b_loc@plt+0x70>
  40125d:	mov    eax,0x0
  401262:	test   rax,rax
  401265:	je     401270 <__ctype_b_loc@plt+0x70>
  401267:	mov    edi,0x406008
  40126c:	jmp    rax
  40126e:	xchg   ax,ax
  401270:	ret    
  401271:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40127c:	nop    DWORD PTR [rax+0x0]
  401280:	mov    esi,0x406008
  401285:	sub    rsi,0x406008
  40128c:	mov    rax,rsi
  40128f:	shr    rsi,0x3f
  401293:	sar    rax,0x3
  401297:	add    rsi,rax
  40129a:	sar    rsi,1
  40129d:	je     4012b0 <__ctype_b_loc@plt+0xb0>
  40129f:	mov    eax,0x0
  4012a4:	test   rax,rax
  4012a7:	je     4012b0 <__ctype_b_loc@plt+0xb0>
  4012a9:	mov    edi,0x406008
  4012ae:	jmp    rax
  4012b0:	ret    
  4012b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012bc:	nop    DWORD PTR [rax+0x0]
  4012c0:	endbr64 
  4012c4:	cmp    BYTE PTR [rip+0x4d45],0x0        # 406010 <__ctype_b_loc@plt+0x4e10>
  4012cb:	jne    4012e0 <__ctype_b_loc@plt+0xe0>
  4012cd:	push   rbp
  4012ce:	mov    rbp,rsp
  4012d1:	call   401250 <__ctype_b_loc@plt+0x50>
  4012d6:	mov    BYTE PTR [rip+0x4d33],0x1        # 406010 <__ctype_b_loc@plt+0x4e10>
  4012dd:	pop    rbp
  4012de:	ret    
  4012df:	nop
  4012e0:	ret    
  4012e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012ec:	nop    DWORD PTR [rax+0x0]
  4012f0:	endbr64 
  4012f4:	jmp    401280 <__ctype_b_loc@plt+0x80>
  4012f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401300:	push   rbp
  401301:	mov    rbp,rsp
  401304:	push   r15
  401306:	push   r14
  401308:	push   r13
  40130a:	push   r12
  40130c:	push   rbx
  40130d:	and    rsp,0xffffffffffffffe0
  401311:	sub    rsp,0x2040
  401318:	mov    rax,QWORD PTR fs:0x28
  401321:	mov    QWORD PTR [rsp+0x2020],rax
  401329:	cmp    edi,0x2
  40132c:	jl     4014d4 <__ctype_b_loc@plt+0x2d4>
  401332:	mov    r12,rsi
  401335:	mov    r14d,edi
  401338:	mov    r15d,0x1
  40133e:	lea    rbx,[rip+0x2f8f]        # 4042d4 <__ctype_b_loc@plt+0x30d4>
  401345:	mov    DWORD PTR [rsp+0x10],edi
  401349:	jmp    40136a <__ctype_b_loc@plt+0x16a>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]
  401350:	mov    rax,QWORD PTR [rip+0x4c99]        # 405ff0 <__ctype_b_loc@plt+0x4df0>
  401357:	mov    QWORD PTR [rip+0x4ca2],rax        # 406000 <__ctype_b_loc@plt+0x4e00>
  40135e:	inc    r15d
  401361:	cmp    r15d,r14d
  401364:	jge    4014d4 <__ctype_b_loc@plt+0x2d4>
  40136a:	movsxd rax,r15d
  40136d:	mov    r13,QWORD PTR [r12+rax*8]
  401371:	mov    rdi,r13
  401374:	lea    rsi,[rip+0x2f35]        # 4042b0 <__ctype_b_loc@plt+0x30b0>
  40137b:	call   401110 <strcmp@plt>
  401380:	test   eax,eax
  401382:	je     4026a7 <__ctype_b_loc@plt+0x14a7>
  401388:	mov    rdi,r13
  40138b:	mov    rsi,rbx
  40138e:	call   401110 <strcmp@plt>
  401393:	test   eax,eax
  401395:	je     401350 <__ctype_b_loc@plt+0x150>
  401397:	mov    rdi,r13
  40139a:	lea    rsi,[rip+0x2f36]        # 4042d7 <__ctype_b_loc@plt+0x30d7>
  4013a1:	call   401110 <strcmp@plt>
  4013a6:	test   eax,eax
  4013a8:	je     401450 <__ctype_b_loc@plt+0x250>
  4013ae:	mov    rdi,r13
  4013b1:	lea    rsi,[rip+0x2f22]        # 4042da <__ctype_b_loc@plt+0x30da>
  4013b8:	call   401110 <strcmp@plt>
  4013bd:	test   eax,eax
  4013bf:	je     40145f <__ctype_b_loc@plt+0x25f>
  4013c5:	cmp    BYTE PTR [r13+0x0],0x2d
  4013ca:	jne    40146e <__ctype_b_loc@plt+0x26e>
  4013d0:	inc    r15d
  4013d3:	cmp    r15d,r14d
  4013d6:	je     4026c6 <__ctype_b_loc@plt+0x14c6>
  4013dc:	mov    rdi,r13
  4013df:	lea    rsi,[rip+0x2ef7]        # 4042dd <__ctype_b_loc@plt+0x30dd>
  4013e6:	call   401110 <strcmp@plt>
  4013eb:	test   eax,eax
  4013ed:	je     4014a4 <__ctype_b_loc@plt+0x2a4>
  4013f3:	mov    rdi,r13
  4013f6:	lea    rsi,[rip+0x2ee3]        # 4042e0 <__ctype_b_loc@plt+0x30e0>
  4013fd:	call   401110 <strcmp@plt>
  401402:	test   eax,eax
  401404:	jne    4026c6 <__ctype_b_loc@plt+0x14c6>
  40140a:	call   401040 <__errno_location@plt>
  40140f:	mov    r13,rax
  401412:	mov    DWORD PTR [rax],0x0
  401418:	movsxd rax,r15d
  40141b:	mov    rdi,QWORD PTR [r12+rax*8]
  40141f:	xor    esi,esi
  401421:	mov    edx,0xa
  401426:	call   4011b0 <strtoul@plt>
  40142b:	mov    QWORD PTR [rip+0x6bfe],rax        # 408030 <__ctype_b_loc@plt+0x6e30>
  401432:	cmp    DWORD PTR [r13+0x0],0x0
  401437:	je     40135e <__ctype_b_loc@plt+0x15e>
  40143d:	jmp    4026c6 <__ctype_b_loc@plt+0x14c6>
  401442:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40144c:	nop    DWORD PTR [rax+0x0]
  401450:	mov    DWORD PTR [rip+0x4bba],0x1        # 406014 <__ctype_b_loc@plt+0x4e14>
  40145a:	jmp    40135e <__ctype_b_loc@plt+0x15e>
  40145f:	mov    DWORD PTR [rip+0x4bab],0xffffffff        # 406014 <__ctype_b_loc@plt+0x4e14>
  401469:	jmp    40135e <__ctype_b_loc@plt+0x15e>
  40146e:	mov    edx,0x1fff
  401473:	mov    r14,r12
  401476:	lea    r12,[rip+0x4ba3]        # 406020 <__ctype_b_loc@plt+0x4e20>
  40147d:	mov    rdi,r12
  401480:	mov    rsi,r13
  401483:	call   401050 <strncpy@plt>
  401488:	mov    rdi,r12
  40148b:	mov    r12,r14
  40148e:	mov    r14d,DWORD PTR [rsp+0x10]
  401493:	call   401070 <strlen@plt>
  401498:	mov    QWORD PTR [rip+0x6b81],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  40149f:	jmp    40135e <__ctype_b_loc@plt+0x15e>
  4014a4:	movsxd rax,r15d
  4014a7:	mov    rax,QWORD PTR [r12+rax*8]
  4014ab:	mov    QWORD PTR [rip+0x6b76],rax        # 408028 <__ctype_b_loc@plt+0x6e28>
  4014b2:	test   rax,rax
  4014b5:	je     40135e <__ctype_b_loc@plt+0x15e>
  4014bb:	cmp    BYTE PTR [rax],0x0
  4014be:	jne    40135e <__ctype_b_loc@plt+0x15e>
  4014c4:	mov    QWORD PTR [rip+0x6b59],0x0        # 408028 <__ctype_b_loc@plt+0x6e28>
  4014cf:	jmp    40135e <__ctype_b_loc@plt+0x15e>
  4014d4:	mov    rax,QWORD PTR [rip+0x4afd]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  4014db:	mov    rdx,QWORD PTR [rax]
  4014de:	lea    rdi,[rsp+0x20]
  4014e3:	mov    esi,0x2000
  4014e8:	call   4010f0 <fgets@plt>
  4014ed:	test   rax,rax
  4014f0:	je     40161c <__ctype_b_loc@plt+0x41c>
  4014f6:	xor    r15d,r15d
  4014f9:	mov    r13d,0xfffffffe
  4014ff:	xor    r14d,r14d
  401502:	xor    r12d,r12d
  401505:	xor    eax,eax
  401507:	mov    QWORD PTR [rsp+0x8],rax
  40150c:	jmp    401540 <__ctype_b_loc@plt+0x340>
  40150e:	mov    r14d,0x4
  401514:	mov    QWORD PTR [rsp+0x8],rbx
  401519:	mov    rax,QWORD PTR [rip+0x4ab8]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  401520:	mov    rdx,QWORD PTR [rax]
  401523:	lea    rdi,[rsp+0x20]
  401528:	mov    esi,0x2000
  40152d:	call   4010f0 <fgets@plt>
  401532:	test   rax,rax
  401535:	mov    r12,QWORD PTR [rsp+0x10]
  40153a:	je     401626 <__ctype_b_loc@plt+0x426>
  401540:	lea    rbx,[r12+0x1]
  401545:	mov    rax,r15
  401548:	movabs rcx,0xaaaaaaaaaaaaaaab
  401552:	mul    rcx
  401555:	shr    rdx,0x4
  401559:	cmp    rbx,rdx
  40155c:	jb     401584 <__ctype_b_loc@plt+0x384>
  40155e:	mov    rdi,QWORD PTR [rip+0x6ad3]        # 408038 <__ctype_b_loc@plt+0x6e38>
  401565:	add    r15,0x2000
  40156c:	mov    rsi,r15
  40156f:	call   401140 <realloc@plt>
  401574:	mov    QWORD PTR [rip+0x6abd],rax        # 408038 <__ctype_b_loc@plt+0x6e38>
  40157b:	test   rax,rax
  40157e:	je     4026ba <__ctype_b_loc@plt+0x14ba>
  401584:	mov    QWORD PTR [rsp+0x10],rbx
  401589:	lea    rdi,[rsp+0x20]
  40158e:	mov    esi,0xa
  401593:	call   401090 <strchr@plt>
  401598:	test   rax,rax
  40159b:	je     4015a0 <__ctype_b_loc@plt+0x3a0>
  40159d:	mov    BYTE PTR [rax],0x0
  4015a0:	lea    rdi,[rsp+0x20]
  4015a5:	call   4011f0 <strdup@plt>
  4015aa:	mov    rbx,rax
  4015ad:	mov    rax,QWORD PTR [rip+0x6a84]        # 408038 <__ctype_b_loc@plt+0x6e38>
  4015b4:	lea    rcx,[r12+r12*2]
  4015b8:	mov    QWORD PTR [rax+rcx*8],rbx
  4015bc:	test   rbx,rbx
  4015bf:	je     40269b <__ctype_b_loc@plt+0x149b>
  4015c5:	mov    rdi,rbx
  4015c8:	call   401070 <strlen@plt>
  4015cd:	cmp    rax,r14
  4015d0:	jbe    401519 <__ctype_b_loc@plt+0x319>
  4015d6:	mov    cl,BYTE PTR [rbx]
  4015d8:	test   cl,cl
  4015da:	je     40150e <__ctype_b_loc@plt+0x30e>
  4015e0:	xor    r14d,r14d
  4015e3:	mov    eax,0x1
  4015e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	mov    edx,r14d
  4015f3:	and    cl,0xc0
  4015f6:	xor    r14d,r14d
  4015f9:	cmp    cl,0x80
  4015fc:	setne  r14b
  401600:	add    r14d,edx
  401603:	cmp    rax,r13
  401606:	ja     401613 <__ctype_b_loc@plt+0x413>
  401608:	movzx  ecx,BYTE PTR [rbx+rax*1]
  40160c:	inc    rax
  40160f:	test   cl,cl
  401611:	jne    4015f0 <__ctype_b_loc@plt+0x3f0>
  401613:	add    r14d,0x4
  401617:	jmp    401514 <__ctype_b_loc@plt+0x314>
  40161c:	xor    eax,eax
  40161e:	mov    QWORD PTR [rsp+0x8],rax
  401623:	xor    r12d,r12d
  401626:	mov    rax,QWORD PTR [rip+0x6a0b]        # 408038 <__ctype_b_loc@plt+0x6e38>
  40162d:	test   rax,rax
  401630:	je     40163e <__ctype_b_loc@plt+0x43e>
  401632:	lea    rcx,[r12+r12*2]
  401636:	mov    QWORD PTR [rax+rcx*8],0x0
  40163e:	mov    eax,0x4
  401643:	mov    rdi,QWORD PTR [rsp+0x8]
  401648:	test   rdi,rdi
  40164b:	je     401682 <__ctype_b_loc@plt+0x482>
  40164d:	mov    bl,BYTE PTR [rdi]
  40164f:	test   bl,bl
  401651:	je     401682 <__ctype_b_loc@plt+0x482>
  401653:	xor    eax,eax
  401655:	mov    ecx,0x1
  40165a:	mov    edx,0xfffffffe
  40165f:	nop
  401660:	mov    esi,eax
  401662:	and    bl,0xc0
  401665:	xor    eax,eax
  401667:	cmp    bl,0x80
  40166a:	setne  al
  40166d:	add    eax,esi
  40166f:	cmp    rcx,rdx
  401672:	ja     40167f <__ctype_b_loc@plt+0x47f>
  401674:	movzx  ebx,BYTE PTR [rdi+rcx*1]
  401678:	inc    rcx
  40167b:	test   bl,bl
  40167d:	jne    401660 <__ctype_b_loc@plt+0x460>
  40167f:	add    eax,0x4
  401682:	mov    QWORD PTR [rip+0x69b7],rax        # 408040 <__ctype_b_loc@plt+0x6e40>
  401689:	mov    rax,QWORD PTR [rip+0x4948]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  401690:	mov    rdx,QWORD PTR [rax]
  401693:	lea    rdi,[rip+0x2cb3]        # 40434d <__ctype_b_loc@plt+0x314d>
  40169a:	lea    rsi,[rip+0x2cb5]        # 404356 <__ctype_b_loc@plt+0x3156>
  4016a1:	call   4010b0 <freopen@plt>
  4016a6:	test   rax,rax
  4016a9:	je     4026cb <__ctype_b_loc@plt+0x14cb>
  4016af:	mov    rax,QWORD PTR [rip+0x4942]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  4016b6:	mov    rdx,QWORD PTR [rax]
  4016b9:	lea    rdi,[rip+0x2c8d]        # 40434d <__ctype_b_loc@plt+0x314d>
  4016c0:	lea    rsi,[rip+0x2cac]        # 404373 <__ctype_b_loc@plt+0x3173>
  4016c7:	call   4010b0 <freopen@plt>
  4016cc:	test   rax,rax
  4016cf:	je     4026d7 <__ctype_b_loc@plt+0x14d7>
  4016d5:	lea    rdi,[rip+0x2c71]        # 40434d <__ctype_b_loc@plt+0x314d>
  4016dc:	mov    esi,0x2
  4016e1:	xor    eax,eax
  4016e3:	call   401190 <open@plt>
  4016e8:	cmp    eax,0xffffffff
  4016eb:	je     40172b <__ctype_b_loc@plt+0x52b>
  4016ed:	mov    ebx,eax
  4016ef:	lea    rdx,[rsp+0x20]
  4016f4:	mov    esi,0x5413
  4016f9:	mov    edi,eax
  4016fb:	xor    eax,eax
  4016fd:	call   4010c0 <ioctl@plt>
  401702:	mov    r14d,eax
  401705:	mov    edi,ebx
  401707:	call   4010d0 <close@plt>
  40170c:	test   r14d,r14d
  40170f:	js     401743 <__ctype_b_loc@plt+0x543>
  401711:	movzx  eax,WORD PTR [rsp+0x22]
  401716:	mov    QWORD PTR [rip+0x6973],rax        # 408090 <__ctype_b_loc@plt+0x6e90>
  40171d:	movzx  eax,WORD PTR [rsp+0x20]
  401722:	mov    QWORD PTR [rip+0x695f],rax        # 408088 <__ctype_b_loc@plt+0x6e88>
  401729:	jmp    401759 <__ctype_b_loc@plt+0x559>
  40172b:	mov    QWORD PTR [rip+0x6952],0x18        # 408088 <__ctype_b_loc@plt+0x6e88>
  401736:	mov    QWORD PTR [rip+0x694f],0x50        # 408090 <__ctype_b_loc@plt+0x6e90>
  401741:	jmp    401759 <__ctype_b_loc@plt+0x559>
  401743:	mov    QWORD PTR [rip+0x6942],0x50        # 408090 <__ctype_b_loc@plt+0x6e90>
  40174e:	mov    QWORD PTR [rip+0x692f],0x18        # 408088 <__ctype_b_loc@plt+0x6e88>
  401759:	lea    rsi,[rip+0x68e8]        # 408048 <__ctype_b_loc@plt+0x6e48>
  401760:	xor    ebx,ebx
  401762:	xor    edi,edi
  401764:	call   401170 <tcgetattr@plt>
  401769:	vmovups ymm0,YMMWORD PTR [rip+0x68d7]        # 408048 <__ctype_b_loc@plt+0x6e48>
  401771:	vmovups YMMWORD PTR [rip+0x691f],ymm0        # 408098 <__ctype_b_loc@plt+0x6e98>
  401779:	vmovups ymm0,YMMWORD PTR [rip+0x68e3]        # 408064 <__ctype_b_loc@plt+0x6e64>
  401781:	vmovups YMMWORD PTR [rip+0x692b],ymm0        # 4080b4 <__ctype_b_loc@plt+0x6eb4>
  401789:	lea    rdx,[rip+0x6908]        # 408098 <__ctype_b_loc@plt+0x6e98>
  401790:	and    DWORD PTR [rip+0x68fe],0xfffffa15        # 408098 <__ctype_b_loc@plt+0x6e98>
  40179a:	and    DWORD PTR [rip+0x6900],0xffff7fb4        # 4080a4 <__ctype_b_loc@plt+0x6ea4>
  4017a4:	mov    eax,0xfffffecf
  4017a9:	and    eax,DWORD PTR [rip+0x68f1]        # 4080a0 <__ctype_b_loc@plt+0x6ea0>
  4017af:	or     eax,0x30
  4017b2:	mov    DWORD PTR [rip+0x68e8],eax        # 4080a0 <__ctype_b_loc@plt+0x6ea0>
  4017b8:	mov    BYTE PTR [rip+0x68f0],0x1        # 4080af <__ctype_b_loc@plt+0x6eaf>
  4017bf:	xor    edi,edi
  4017c1:	xor    esi,esi
  4017c3:	vzeroupper 
  4017c6:	call   401180 <tcsetattr@plt>
  4017cb:	mov    rax,QWORD PTR [rip+0x685e]        # 408030 <__ctype_b_loc@plt+0x6e30>
  4017d2:	mov    rcx,QWORD PTR [rip+0x68af]        # 408088 <__ctype_b_loc@plt+0x6e88>
  4017d9:	cmp    rax,rcx
  4017dc:	cmovb  rcx,rax
  4017e0:	mov    QWORD PTR [rip+0x6849],rcx        # 408030 <__ctype_b_loc@plt+0x6e30>
  4017e7:	mov    rax,QWORD PTR [rip+0x683a]        # 408028 <__ctype_b_loc@plt+0x6e28>
  4017ee:	test   rax,rax
  4017f1:	je     401839 <__ctype_b_loc@plt+0x639>
  4017f3:	mov    dl,BYTE PTR [rax]
  4017f5:	test   dl,dl
  4017f7:	je     401834 <__ctype_b_loc@plt+0x634>
  4017f9:	xor    ebx,ebx
  4017fb:	mov    ecx,0x1
  401800:	mov    esi,0xfffffffe
  401805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40180f:	nop
  401810:	mov    edi,ebx
  401812:	and    dl,0xc0
  401815:	xor    ebx,ebx
  401817:	cmp    dl,0x80
  40181a:	setne  bl
  40181d:	add    ebx,edi
  40181f:	cmp    rcx,rsi
  401822:	ja     40182f <__ctype_b_loc@plt+0x62f>
  401824:	movzx  edx,BYTE PTR [rax+rcx*1]
  401828:	inc    rcx
  40182b:	test   dl,dl
  40182d:	jne    401810 <__ctype_b_loc@plt+0x610>
  40182f:	add    ebx,0x4
  401832:	jmp    401839 <__ctype_b_loc@plt+0x639>
  401834:	mov    ebx,0x4
  401839:	movabs rax,0xaaaaaaaaaaaaaaab
  401843:	mul    QWORD PTR [rip+0x6846]        # 408090 <__ctype_b_loc@plt+0x6e90>
  40184a:	mov    QWORD PTR [rip+0x6887],rbx        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  401851:	mov    rax,QWORD PTR [rip+0x67e8]        # 408040 <__ctype_b_loc@plt+0x6e40>
  401858:	shr    rdx,1
  40185b:	cmp    rax,rdx
  40185e:	cmovb  rdx,rax
  401862:	mov    QWORD PTR [rip+0x67d7],rdx        # 408040 <__ctype_b_loc@plt+0x6e40>
  401869:	call   402760 <__ctype_b_loc@plt+0x1560>
  40186e:	mov    eax,DWORD PTR [rip+0x47a0]        # 406014 <__ctype_b_loc@plt+0x4e14>
  401874:	test   eax,eax
  401876:	je     4018ab <__ctype_b_loc@plt+0x6ab>
  401878:	mov    rcx,QWORD PTR [rip+0x4779]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  40187f:	mov    rdi,QWORD PTR [rcx]
  401882:	test   eax,eax
  401884:	jle    40188a <__ctype_b_loc@plt+0x68a>
  401886:	xor    ecx,ecx
  401888:	jmp    401898 <__ctype_b_loc@plt+0x698>
  40188a:	mov    rcx,QWORD PTR [rip+0x67f7]        # 408088 <__ctype_b_loc@plt+0x6e88>
  401891:	sub    rcx,QWORD PTR [rip+0x6798]        # 408030 <__ctype_b_loc@plt+0x6e30>
  401898:	lea    rdx,[rip+0x2af8]        # 404397 <__ctype_b_loc@plt+0x3197>
  40189f:	mov    esi,0x1
  4018a4:	xor    eax,eax
  4018a6:	call   4011e0 <__fprintf_chk@plt>
  4018ab:	call   402b60 <__ctype_b_loc@plt+0x1960>
  4018b0:	lea    rsi,[rsp+0x1f]
  4018b5:	mov    edx,0x1
  4018ba:	xor    edi,edi
  4018bc:	call   4010e0 <read@plt>
  4018c1:	cmp    rax,0x1
  4018c5:	jne    40268f <__ctype_b_loc@plt+0x148f>
  4018cb:	lea    rbx,[rsp+0x1f]
  4018d0:	lea    rdi,[rip+0x4749]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4018d7:	jmp    40192d <__ctype_b_loc@plt+0x72d>
  4018d9:	mov    rax,QWORD PTR [rip+0x6740]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4018e0:	cmp    BYTE PTR [rax+rdi*1],0x0
  4018e4:	je     402454 <__ctype_b_loc@plt+0x1254>
  4018ea:	vzeroupper 
  4018ed:	call   401070 <strlen@plt>
  4018f2:	mov    QWORD PTR [rip+0x6727],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  4018f9:	nop    DWORD PTR [rax+0x0]
  401900:	vzeroupper 
  401903:	call   402b60 <__ctype_b_loc@plt+0x1960>
  401908:	mov    edx,0x1
  40190d:	xor    edi,edi
  40190f:	lea    rbx,[rsp+0x1f]
  401914:	mov    rsi,rbx
  401917:	call   4010e0 <read@plt>
  40191c:	lea    rdi,[rip+0x46fd]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401923:	cmp    rax,0x1
  401927:	jne    40268f <__ctype_b_loc@plt+0x148f>
  40192d:	vxorps xmm0,xmm0,xmm0
  401931:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  401937:	mov    al,BYTE PTR [rsp+0x1f]
  40193b:	movsx  r14,al
  40193f:	mov    BYTE PTR [rsp+0x20],r14b
  401944:	movsx  eax,al
  401947:	cmp    eax,0x1b
  40194a:	jne    401f89 <__ctype_b_loc@plt+0xd89>
  401950:	mov    edx,0x1
  401955:	xor    edi,edi
  401957:	mov    rsi,rbx
  40195a:	vzeroupper 
  40195d:	call   4010e0 <read@plt>
  401962:	cmp    rax,0x1
  401966:	jne    40268f <__ctype_b_loc@plt+0x148f>
  40196c:	mov    al,BYTE PTR [rsp+0x1f]
  401970:	lea    rdi,[rip+0x46a9]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401977:	movsx  eax,al
  40197a:	cmp    eax,0x5b
  40197d:	jne    4019d0 <__ctype_b_loc@plt+0x7d0>
  40197f:	mov    edx,0x1
  401984:	xor    edi,edi
  401986:	mov    rsi,rbx
  401989:	call   4010e0 <read@plt>
  40198e:	cmp    rax,0x1
  401992:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401998:	movzx  eax,BYTE PTR [rsp+0x1f]
  40199d:	movsx  ecx,al
  4019a0:	cmp    ecx,0x36
  4019a3:	jne    401a00 <__ctype_b_loc@plt+0x800>
  4019a5:	mov    edx,0x1
  4019aa:	xor    edi,edi
  4019ac:	mov    rsi,rbx
  4019af:	call   4010e0 <read@plt>
  4019b4:	cmp    rax,0x1
  4019b8:	jne    40268f <__ctype_b_loc@plt+0x148f>
  4019be:	mov    BYTE PTR [rsp+0x1f],0x76
  4019c3:	mov    al,0x76
  4019c5:	jmp    401970 <__ctype_b_loc@plt+0x770>
  4019c7:	nop    WORD PTR [rax+rax*1+0x0]
  4019d0:	lea    ecx,[rax-0x62]
  4019d3:	cmp    ecx,0x14
  4019d6:	jbe    401b70 <__ctype_b_loc@plt+0x970>
  4019dc:	cmp    eax,0x1b
  4019df:	jne    401900 <__ctype_b_loc@plt+0x700>
  4019e5:	mov    BYTE PTR [rsp+0x1f],0x3
  4019ea:	mov    al,0x3
  4019ec:	lea    rbx,[rsp+0x1f]
  4019f1:	jmp    401944 <__ctype_b_loc@plt+0x744>
  4019f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a00:	add    ecx,0xffffffcf
  401a03:	cmp    ecx,0x17
  401a06:	lea    rdi,[rip+0x4613]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a0d:	ja     401900 <__ctype_b_loc@plt+0x700>
  401a13:	lea    rdx,[rip+0x2836]        # 404250 <__ctype_b_loc@plt+0x3050>
  401a1a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  401a1e:	add    rcx,rdx
  401a21:	jmp    rcx
  401a23:	cmp    al,0x48
  401a25:	lea    rbx,[rsp+0x1f]
  401a2a:	je     401a4c <__ctype_b_loc@plt+0x84c>
  401a2c:	mov    edx,0x1
  401a31:	xor    edi,edi
  401a33:	mov    rsi,rbx
  401a36:	call   4010e0 <read@plt>
  401a3b:	lea    rdi,[rip+0x45de]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a42:	cmp    rax,0x1
  401a46:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401a4c:	mov    BYTE PTR [rsp+0x1f],0x1
  401a51:	mov    al,0x1
  401a53:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401a58:	cmp    al,0x46
  401a5a:	lea    rbx,[rsp+0x1f]
  401a5f:	je     401a81 <__ctype_b_loc@plt+0x881>
  401a61:	mov    edx,0x1
  401a66:	xor    edi,edi
  401a68:	mov    rsi,rbx
  401a6b:	call   4010e0 <read@plt>
  401a70:	lea    rdi,[rip+0x45a9]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a77:	cmp    rax,0x1
  401a7b:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401a81:	mov    BYTE PTR [rsp+0x1f],0x5
  401a86:	mov    al,0x5
  401a88:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401a8d:	mov    edx,0x1
  401a92:	xor    edi,edi
  401a94:	lea    rbx,[rsp+0x1f]
  401a99:	mov    rsi,rbx
  401a9c:	call   4010e0 <read@plt>
  401aa1:	cmp    rax,0x1
  401aa5:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401aab:	mov    BYTE PTR [rsp+0x1f],0x4
  401ab0:	mov    al,0x4
  401ab2:	lea    rdi,[rip+0x4567]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401ab9:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401abe:	mov    BYTE PTR [rsp+0x1f],0xe
  401ac3:	mov    al,0xe
  401ac5:	lea    rbx,[rsp+0x1f]
  401aca:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401acf:	mov    BYTE PTR [rsp+0x1f],0x6
  401ad4:	mov    al,0x6
  401ad6:	lea    rbx,[rsp+0x1f]
  401adb:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401ae0:	mov    edx,0x1
  401ae5:	xor    edi,edi
  401ae7:	lea    rbx,[rsp+0x1f]
  401aec:	mov    rsi,rbx
  401aef:	call   4010e0 <read@plt>
  401af4:	cmp    rax,0x1
  401af8:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401afe:	mov    BYTE PTR [rsp+0x1f],0x19
  401b03:	mov    al,0x19
  401b05:	lea    rdi,[rip+0x4514]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401b0c:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401b11:	mov    BYTE PTR [rsp+0x1f],0x10
  401b16:	mov    al,0x10
  401b18:	lea    rbx,[rsp+0x1f]
  401b1d:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401b22:	mov    BYTE PTR [rsp+0x1f],0x2
  401b27:	mov    al,0x2
  401b29:	lea    rbx,[rsp+0x1f]
  401b2e:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401b33:	mov    edx,0x1
  401b38:	xor    edi,edi
  401b3a:	lea    rbx,[rsp+0x1f]
  401b3f:	mov    rsi,rbx
  401b42:	call   4010e0 <read@plt>
  401b47:	cmp    rax,0x1
  401b4b:	jne    40268f <__ctype_b_loc@plt+0x148f>
  401b51:	mov    BYTE PTR [rsp+0x1f],0x16
  401b56:	mov    al,0x16
  401b58:	lea    rdi,[rip+0x44c1]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401b5f:	jmp    401944 <__ctype_b_loc@plt+0x744>
  401b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b6e:	xchg   ax,ax
  401b70:	lea    rax,[rip+0x2685]        # 4041fc <__ctype_b_loc@plt+0x2ffc>
  401b77:	mov    rdx,rax
  401b7a:	movsxd rax,DWORD PTR [rax+rcx*4]
  401b7e:	add    rax,rdx
  401b81:	jmp    rax
  401b83:	mov    rax,QWORD PTR [rip+0x6496]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401b8a:	test   rax,rax
  401b8d:	jne    401bb0 <__ctype_b_loc@plt+0x9b0>
  401b8f:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401b94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b9e:	xchg   ax,ax
  401ba0:	mov    QWORD PTR [rip+0x6479],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401ba7:	test   rax,rax
  401baa:	je     401900 <__ctype_b_loc@plt+0x700>
  401bb0:	lea    rsi,[rax-0x1]
  401bb4:	mov    rdx,rsi
  401bb7:	nop    WORD PTR [rax+rax*1+0x0]
  401bc0:	test   rdx,rdx
  401bc3:	jle    401be0 <__ctype_b_loc@plt+0x9e0>
  401bc5:	movzx  ecx,BYTE PTR [rdx+rdi*1]
  401bc9:	dec    rdx
  401bcc:	mov    ebx,ecx
  401bce:	and    bl,0xc0
  401bd1:	cmp    bl,0x80
  401bd4:	je     401bc0 <__ctype_b_loc@plt+0x9c0>
  401bd6:	cmp    cl,0x20
  401bd9:	je     401bf0 <__ctype_b_loc@plt+0x9f0>
  401bdb:	jmp    401c17 <__ctype_b_loc@plt+0xa17>
  401bdd:	nop    DWORD PTR [rax]
  401be0:	mov    cl,BYTE PTR [rdx+rdi*1]
  401be3:	cmp    cl,0x20
  401be6:	jne    401c17 <__ctype_b_loc@plt+0xa17>
  401be8:	nop    DWORD PTR [rax+rax*1+0x0]
  401bf0:	mov    rax,rsi
  401bf3:	test   rsi,rsi
  401bf6:	jle    401ba0 <__ctype_b_loc@plt+0x9a0>
  401bf8:	lea    rsi,[rax-0x1]
  401bfc:	movzx  ecx,BYTE PTR [rax+rdi*1]
  401c00:	and    cl,0xc0
  401c03:	cmp    cl,0x80
  401c06:	je     401bf0 <__ctype_b_loc@plt+0x9f0>
  401c08:	jmp    401ba0 <__ctype_b_loc@plt+0x9a0>
  401c0a:	nop    WORD PTR [rax+rax*1+0x0]
  401c10:	mov    QWORD PTR [rip+0x6409],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401c17:	test   rax,rax
  401c1a:	je     401900 <__ctype_b_loc@plt+0x700>
  401c20:	mov    rcx,rax
  401c23:	dec    rcx
  401c26:	mov    rax,rcx
  401c29:	nop    DWORD PTR [rax+0x0]
  401c30:	test   rax,rax
  401c33:	jle    401c50 <__ctype_b_loc@plt+0xa50>
  401c35:	movzx  ebx,BYTE PTR [rax+rdi*1]
  401c39:	dec    rax
  401c3c:	mov    edx,ebx
  401c3e:	and    dl,0xc0
  401c41:	cmp    dl,0x80
  401c44:	je     401c30 <__ctype_b_loc@plt+0xa30>
  401c46:	cmp    bl,0x20
  401c49:	jne    401c60 <__ctype_b_loc@plt+0xa60>
  401c4b:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401c50:	mov    bl,BYTE PTR [rax+rdi*1]
  401c53:	cmp    bl,0x20
  401c56:	je     401900 <__ctype_b_loc@plt+0x700>
  401c5c:	nop    DWORD PTR [rax+0x0]
  401c60:	mov    rax,rcx
  401c63:	test   rcx,rcx
  401c66:	jle    401c10 <__ctype_b_loc@plt+0xa10>
  401c68:	lea    rcx,[rax-0x1]
  401c6c:	movzx  edx,BYTE PTR [rax+rdi*1]
  401c70:	and    dl,0xc0
  401c73:	cmp    dl,0x80
  401c76:	je     401c60 <__ctype_b_loc@plt+0xa60>
  401c78:	jmp    401c10 <__ctype_b_loc@plt+0xa10>
  401c7a:	mov    rax,QWORD PTR [rip+0x639f]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401c81:	cmp    BYTE PTR [rax+rdi*1],0x0
  401c85:	jne    401ca5 <__ctype_b_loc@plt+0xaa5>
  401c87:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401c8c:	nop    DWORD PTR [rax+0x0]
  401c90:	mov    dl,BYTE PTR [rsi+rdi*1]
  401c93:	mov    rax,rsi
  401c96:	mov    QWORD PTR [rip+0x6383],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401c9d:	test   dl,dl
  401c9f:	je     401900 <__ctype_b_loc@plt+0x700>
  401ca5:	lea    rsi,[rax+0x1]
  401ca9:	lea    rdx,[rax+rdi*1]
  401cad:	add    rdx,0x1
  401cb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	cmp    rsi,0xfffffffffffffffe
  401cc4:	jle    401ce0 <__ctype_b_loc@plt+0xae0>
  401cc6:	movzx  ecx,BYTE PTR [rdx]
  401cc9:	mov    ebx,ecx
  401ccb:	and    bl,0xc0
  401cce:	inc    rdx
  401cd1:	cmp    bl,0x80
  401cd4:	je     401cc0 <__ctype_b_loc@plt+0xac0>
  401cd6:	cmp    cl,0x20
  401cd9:	je     401cf0 <__ctype_b_loc@plt+0xaf0>
  401cdb:	jmp    401d1c <__ctype_b_loc@plt+0xb1c>
  401cdd:	nop    DWORD PTR [rax]
  401ce0:	mov    cl,BYTE PTR [rsi+rdi*1]
  401ce3:	cmp    cl,0x20
  401ce6:	jne    401d1c <__ctype_b_loc@plt+0xb1c>
  401ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cf0:	cmp    rsi,0xfffffffffffffffe
  401cf4:	jle    401c90 <__ctype_b_loc@plt+0xa90>
  401cf6:	movzx  edx,BYTE PTR [rax+rdi*1+0x1]
  401cfb:	mov    ecx,edx
  401cfd:	and    cl,0xc0
  401d00:	inc    rax
  401d03:	cmp    cl,0x80
  401d06:	je     401cf0 <__ctype_b_loc@plt+0xaf0>
  401d08:	jmp    401c96 <__ctype_b_loc@plt+0xa96>
  401d0a:	nop    WORD PTR [rax+rax*1+0x0]
  401d10:	or     cl,0x20
  401d13:	cmp    cl,0x20
  401d16:	je     4018f2 <__ctype_b_loc@plt+0x6f2>
  401d1c:	inc    rax
  401d1f:	movzx  ecx,BYTE PTR [rax+rdi*1]
  401d23:	cmp    rax,0xffffffffffffffff
  401d27:	jl     401d10 <__ctype_b_loc@plt+0xb10>
  401d29:	mov    edx,ecx
  401d2b:	and    dl,0xc0
  401d2e:	cmp    dl,0x80
  401d31:	je     401d1c <__ctype_b_loc@plt+0xb1c>
  401d33:	jmp    401d10 <__ctype_b_loc@plt+0xb10>
  401d35:	mov    r14,QWORD PTR [rip+0x62e4]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401d3c:	cmp    BYTE PTR [r14+rdi*1],0x0
  401d41:	jne    401d75 <__ctype_b_loc@plt+0xb75>
  401d43:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401d48:	nop    DWORD PTR [rax+rax*1+0x0]
  401d50:	mov    QWORD PTR [rip+0x62c9],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  401d57:	call   402760 <__ctype_b_loc@plt+0x1560>
  401d5c:	mov    r14,QWORD PTR [rip+0x62bd]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401d63:	lea    rdi,[rip+0x42b6]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401d6a:	cmp    BYTE PTR [r14+rdi*1],0x0
  401d6f:	je     401900 <__ctype_b_loc@plt+0x700>
  401d75:	lea    rax,[r14+0x1]
  401d79:	lea    rcx,[r14+rdi*1]
  401d7d:	add    rcx,0x1
  401d81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d90:	cmp    rax,0xfffffffffffffffe
  401d94:	jle    401db0 <__ctype_b_loc@plt+0xbb0>
  401d96:	movzx  ebx,BYTE PTR [rcx]
  401d99:	mov    edx,ebx
  401d9b:	and    dl,0xc0
  401d9e:	inc    rcx
  401da1:	cmp    dl,0x80
  401da4:	je     401d90 <__ctype_b_loc@plt+0xb90>
  401da6:	cmp    bl,0x20
  401da9:	je     401dc0 <__ctype_b_loc@plt+0xbc0>
  401dab:	jmp    401ea8 <__ctype_b_loc@plt+0xca8>
  401db0:	mov    bl,BYTE PTR [rax+rdi*1]
  401db3:	cmp    bl,0x20
  401db6:	jne    401ea8 <__ctype_b_loc@plt+0xca8>
  401dbc:	nop    DWORD PTR [rax+0x0]
  401dc0:	cmp    rax,0xffffffffffffffff
  401dc4:	jl     401de0 <__ctype_b_loc@plt+0xbe0>
  401dc6:	movzx  ecx,BYTE PTR [r14+rdi*1+0x1]
  401dcc:	and    cl,0xc0
  401dcf:	inc    r14
  401dd2:	cmp    cl,0x80
  401dd5:	je     401dc0 <__ctype_b_loc@plt+0xbc0>
  401dd7:	jmp    401de3 <__ctype_b_loc@plt+0xbe3>
  401dd9:	nop    DWORD PTR [rax+0x0]
  401de0:	mov    r14,rax
  401de3:	mov    QWORD PTR [rip+0x6236],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  401dea:	lea    rax,[r14-0x1]
  401dee:	mov    ecx,0x1
  401df3:	mov    edx,0x2001
  401df8:	nop    DWORD PTR [rax+rax*1+0x0]
  401e00:	mov    r15,rax
  401e03:	mov    r12,rcx
  401e06:	mov    r13,rdx
  401e09:	test   rax,rax
  401e0c:	jle    401e28 <__ctype_b_loc@plt+0xc28>
  401e0e:	movzx  ebx,BYTE PTR [r15+rdi*1]
  401e13:	and    bl,0xc0
  401e16:	lea    rax,[r15-0x1]
  401e1a:	lea    rcx,[r12+0x1]
  401e1f:	lea    rdx,[r13+0x1]
  401e23:	cmp    bl,0x80
  401e26:	je     401e00 <__ctype_b_loc@plt+0xc00>
  401e28:	mov    rbx,rdi
  401e2b:	call   401070 <strlen@plt>
  401e30:	sub    rax,r12
  401e33:	cmp    rax,0x1fff
  401e39:	ja     401d63 <__ctype_b_loc@plt+0xb63>
  401e3f:	neg    r12
  401e42:	lea    rdi,[rbx+r15*1]
  401e46:	add    rbx,r14
  401e49:	test   r12,r12
  401e4c:	mov    eax,0x2000
  401e51:	cmovle r13,rax
  401e55:	sub    r13,r14
  401e58:	mov    rsi,rbx
  401e5b:	mov    rdx,r13
  401e5e:	call   401160 <memmove@plt>
  401e63:	test   r12,r12
  401e66:	jle    401d50 <__ctype_b_loc@plt+0xb50>
  401e6c:	mov    rdi,rbx
  401e6f:	xor    esi,esi
  401e71:	mov    rdx,r12
  401e74:	call   401120 <memcpy@plt>
  401e79:	jmp    401d50 <__ctype_b_loc@plt+0xb50>
  401e7e:	xchg   ax,ax
  401e80:	mov    QWORD PTR [rip+0x6199],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  401e87:	call   402760 <__ctype_b_loc@plt+0x1560>
  401e8c:	mov    r14,QWORD PTR [rip+0x618d]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401e93:	lea    rdi,[rip+0x4186]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401e9a:	mov    al,BYTE PTR [r14+rdi*1]
  401e9e:	or     al,0x20
  401ea0:	cmp    al,0x20
  401ea2:	je     401900 <__ctype_b_loc@plt+0x700>
  401ea8:	mov    rax,r14
  401eab:	inc    r14
  401eae:	cmp    r14,0xffffffffffffffff
  401eb2:	jl     401ec0 <__ctype_b_loc@plt+0xcc0>
  401eb4:	mov    cl,BYTE PTR [r14+rdi*1]
  401eb8:	and    cl,0xc0
  401ebb:	cmp    cl,0x80
  401ebe:	je     401ea8 <__ctype_b_loc@plt+0xca8>
  401ec0:	mov    QWORD PTR [rip+0x6159],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  401ec7:	mov    ecx,0x1
  401ecc:	mov    edx,0x2001
  401ed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401edb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ee0:	mov    r15,rax
  401ee3:	mov    r12,rcx
  401ee6:	mov    r13,rdx
  401ee9:	test   rax,rax
  401eec:	jle    401f08 <__ctype_b_loc@plt+0xd08>
  401eee:	lea    rax,[r15-0x1]
  401ef2:	movzx  ebx,BYTE PTR [r15+rdi*1]
  401ef7:	and    bl,0xc0
  401efa:	lea    rcx,[r12+0x1]
  401eff:	lea    rdx,[r13+0x1]
  401f03:	cmp    bl,0x80
  401f06:	je     401ee0 <__ctype_b_loc@plt+0xce0>
  401f08:	mov    rbx,rdi
  401f0b:	call   401070 <strlen@plt>
  401f10:	sub    rax,r12
  401f13:	cmp    rax,0x1fff
  401f19:	ja     401e93 <__ctype_b_loc@plt+0xc93>
  401f1f:	neg    r12
  401f22:	lea    rdi,[rbx+r15*1]
  401f26:	add    rbx,r14
  401f29:	test   r12,r12
  401f2c:	mov    eax,0x2000
  401f31:	cmovle r13,rax
  401f35:	sub    r13,r14
  401f38:	mov    rsi,rbx
  401f3b:	mov    rdx,r13
  401f3e:	call   401160 <memmove@plt>
  401f43:	test   r12,r12
  401f46:	jle    401e80 <__ctype_b_loc@plt+0xc80>
  401f4c:	mov    rdi,rbx
  401f4f:	xor    esi,esi
  401f51:	mov    rdx,r12
  401f54:	call   401120 <memcpy@plt>
  401f59:	jmp    401e80 <__ctype_b_loc@plt+0xc80>
  401f5e:	mov    rax,QWORD PTR [rip+0x61ab]        # 408110 <__ctype_b_loc@plt+0x6f10>
  401f65:	test   rax,rax
  401f68:	je     401900 <__ctype_b_loc@plt+0x700>
  401f6e:	mov    QWORD PTR [rip+0x6193],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  401f75:	mov    QWORD PTR [rip+0x6184],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  401f7c:	vzeroupper 
  401f7f:	call   402fd0 <__ctype_b_loc@plt+0x1dd0>
  401f84:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401f89:	dec    eax
  401f8b:	cmp    eax,0x7e
  401f8e:	ja     40237f <__ctype_b_loc@plt+0x117f>
  401f94:	lea    rcx,[rip+0x2065]        # 404000 <__ctype_b_loc@plt+0x2e00>
  401f9b:	movsxd rax,DWORD PTR [rcx+rax*4]
  401f9f:	add    rax,rcx
  401fa2:	jmp    rax
  401fa4:	mov    r14,QWORD PTR [rip+0x6075]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401fab:	test   r14,r14
  401fae:	jne    4021ca <__ctype_b_loc@plt+0xfca>
  401fb4:	jmp    401900 <__ctype_b_loc@plt+0x700>
  401fb9:	mov    rcx,QWORD PTR [rip+0x6060]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401fc0:	cmp    BYTE PTR [rcx+rdi*1],0x0
  401fc4:	je     401ff2 <__ctype_b_loc@plt+0xdf2>
  401fc6:	inc    rcx
  401fc9:	nop    DWORD PTR [rax+0x0]
  401fd0:	mov    rax,rcx
  401fd3:	cmp    rcx,0xffffffffffffffff
  401fd7:	jl     4018f2 <__ctype_b_loc@plt+0x6f2>
  401fdd:	movzx  edx,BYTE PTR [rax+rdi*1]
  401fe1:	and    dl,0xc0
  401fe4:	lea    rcx,[rax+0x1]
  401fe8:	cmp    dl,0x80
  401feb:	je     401fd0 <__ctype_b_loc@plt+0xdd0>
  401fed:	jmp    4018f2 <__ctype_b_loc@plt+0x6f2>
  401ff2:	mov    rax,QWORD PTR [rip+0x6107]        # 408100 <__ctype_b_loc@plt+0x6f00>
  401ff9:	test   rax,rax
  401ffc:	je     401900 <__ctype_b_loc@plt+0x700>
  402002:	mov    rax,QWORD PTR [rax+0x10]
  402006:	test   rax,rax
  402009:	je     401900 <__ctype_b_loc@plt+0x700>
  40200f:	mov    QWORD PTR [rip+0x60ea],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  402016:	cmp    rax,QWORD PTR [rip+0x60f3]        # 408110 <__ctype_b_loc@plt+0x6f10>
  40201d:	jne    401900 <__ctype_b_loc@plt+0x700>
  402023:	jmp    40212c <__ctype_b_loc@plt+0xf2c>
  402028:	mov    rbx,QWORD PTR [rip+0x5ff1]        # 408020 <__ctype_b_loc@plt+0x6e20>
  40202f:	vzeroupper 
  402032:	call   401070 <strlen@plt>
  402037:	lea    rdi,[rip+0x3fe2]        # 406020 <__ctype_b_loc@plt+0x4e20>
  40203e:	sub    rax,rbx
  402041:	cmp    rax,0x1fff
  402047:	ja     401900 <__ctype_b_loc@plt+0x700>
  40204d:	mov    r14,rbx
  402050:	neg    r14
  402053:	lea    r12,[rdi+rbx*1]
  402057:	lea    rdx,[rbx+0x2000]
  40205e:	test   r14,r14
  402061:	mov    eax,0x2000
  402066:	cmovle rdx,rax
  40206a:	sub    rdx,rbx
  40206d:	mov    rsi,r12
  402070:	call   401160 <memmove@plt>
  402075:	test   r14,r14
  402078:	jle    402087 <__ctype_b_loc@plt+0xe87>
  40207a:	mov    rdi,r12
  40207d:	xor    esi,esi
  40207f:	mov    rdx,r14
  402082:	call   401120 <memcpy@plt>
  402087:	mov    QWORD PTR [rip+0x5f8e],0x0        # 408020 <__ctype_b_loc@plt+0x6e20>
  402092:	jmp    402412 <__ctype_b_loc@plt+0x1212>
  402097:	mov    rax,QWORD PTR [rip+0x605a]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  40209e:	cmp    QWORD PTR [rip+0x605b],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  4020a5:	jne    401f6e <__ctype_b_loc@plt+0xd6e>
  4020ab:	mov    QWORD PTR [rip+0x5f6a],0x0        # 408020 <__ctype_b_loc@plt+0x6e20>
  4020b6:	jmp    401900 <__ctype_b_loc@plt+0x700>
  4020bb:	mov    rax,QWORD PTR [rip+0x5f5e]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4020c2:	test   rax,rax
  4020c5:	je     4020f0 <__ctype_b_loc@plt+0xef0>
  4020c7:	mov    rcx,QWORD PTR [rip+0x6032]        # 408100 <__ctype_b_loc@plt+0x6f00>
  4020ce:	test   rcx,rcx
  4020d1:	je     40241f <__ctype_b_loc@plt+0x121f>
  4020d7:	cmp    QWORD PTR [rcx+0x8],0x0
  4020dc:	je     40241f <__ctype_b_loc@plt+0x121f>
  4020e2:	cmp    QWORD PTR [rip+0x5f46],0x0        # 408030 <__ctype_b_loc@plt+0x6e30>
  4020ea:	jne    40241f <__ctype_b_loc@plt+0x121f>
  4020f0:	mov    rax,QWORD PTR [rip+0x6009]        # 408100 <__ctype_b_loc@plt+0x6f00>
  4020f7:	test   rax,rax
  4020fa:	je     401900 <__ctype_b_loc@plt+0x700>
  402100:	mov    rax,QWORD PTR [rax+0x8]
  402104:	test   rax,rax
  402107:	je     401900 <__ctype_b_loc@plt+0x700>
  40210d:	mov    QWORD PTR [rip+0x5fec],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  402114:	mov    rax,QWORD PTR [rax+0x10]
  402118:	cmp    rax,QWORD PTR [rip+0x5fe9]        # 408108 <__ctype_b_loc@plt+0x6f08>
  40211f:	jne    401900 <__ctype_b_loc@plt+0x700>
  402125:	mov    rax,QWORD PTR [rip+0x5fec]        # 408118 <__ctype_b_loc@plt+0x6f18>
  40212c:	mov    QWORD PTR [rip+0x5fd5],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  402133:	vzeroupper 
  402136:	call   402fd0 <__ctype_b_loc@plt+0x1dd0>
  40213b:	jmp    401900 <__ctype_b_loc@plt+0x700>
  402140:	mov    rax,QWORD PTR [rip+0x5ed9]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402147:	mov    BYTE PTR [rax+rdi*1],0x0
  40214b:	jmp    402412 <__ctype_b_loc@plt+0x1212>
  402150:	mov    rax,QWORD PTR [rip+0x5fa9]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402157:	test   rax,rax
  40215a:	je     401900 <__ctype_b_loc@plt+0x700>
  402160:	mov    rsi,QWORD PTR [rax]
  402163:	mov    edx,0x2000
  402168:	vzeroupper 
  40216b:	call   401050 <strncpy@plt>
  402170:	lea    rdi,[rip+0x3ea9]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402177:	call   401070 <strlen@plt>
  40217c:	mov    QWORD PTR [rip+0x5e9d],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  402183:	jmp    402412 <__ctype_b_loc@plt+0x1212>
  402188:	mov    rax,QWORD PTR [rip+0x5e91]        # 408020 <__ctype_b_loc@plt+0x6e20>
  40218f:	cmp    BYTE PTR [rax+rdi*1],0x0
  402193:	je     401900 <__ctype_b_loc@plt+0x700>
  402199:	inc    rax
  40219c:	nop    DWORD PTR [rax+0x0]
  4021a0:	mov    r14,rax
  4021a3:	cmp    rax,0xffffffffffffffff
  4021a7:	jl     4021ba <__ctype_b_loc@plt+0xfba>
  4021a9:	movzx  ecx,BYTE PTR [r14+rdi*1]
  4021ae:	and    cl,0xc0
  4021b1:	lea    rax,[r14+0x1]
  4021b5:	cmp    cl,0x80
  4021b8:	je     4021a0 <__ctype_b_loc@plt+0xfa0>
  4021ba:	mov    QWORD PTR [rip+0x5e5f],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  4021c1:	test   r14,r14
  4021c4:	je     401900 <__ctype_b_loc@plt+0x700>
  4021ca:	lea    rax,[r14-0x1]
  4021ce:	mov    ecx,0x1
  4021d3:	mov    edx,0x2001
  4021d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021e0:	mov    r15,rax
  4021e3:	mov    r12,rcx
  4021e6:	mov    r13,rdx
  4021e9:	test   rax,rax
  4021ec:	jle    402208 <__ctype_b_loc@plt+0x1008>
  4021ee:	movzx  ebx,BYTE PTR [r15+rdi*1]
  4021f3:	and    bl,0xc0
  4021f6:	lea    rax,[r15-0x1]
  4021fa:	lea    rcx,[r12+0x1]
  4021ff:	lea    rdx,[r13+0x1]
  402203:	cmp    bl,0x80
  402206:	je     4021e0 <__ctype_b_loc@plt+0xfe0>
  402208:	vzeroupper 
  40220b:	call   401070 <strlen@plt>
  402210:	lea    rcx,[rip+0x3e09]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402217:	sub    rax,r12
  40221a:	cmp    rax,0x1fff
  402220:	ja     401900 <__ctype_b_loc@plt+0x700>
  402226:	neg    r12
  402229:	lea    rdi,[rcx+r15*1]
  40222d:	lea    rbx,[rcx+r14*1]
  402231:	test   r12,r12
  402234:	mov    eax,0x2000
  402239:	cmovle r13,rax
  40223d:	sub    r13,r14
  402240:	mov    rsi,rbx
  402243:	mov    rdx,r13
  402246:	call   401160 <memmove@plt>
  40224b:	test   r12,r12
  40224e:	jle    40225d <__ctype_b_loc@plt+0x105d>
  402250:	mov    rdi,rbx
  402253:	xor    esi,esi
  402255:	mov    rdx,r12
  402258:	call   401120 <memcpy@plt>
  40225d:	mov    QWORD PTR [rip+0x5dbc],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  402264:	jmp    402412 <__ctype_b_loc@plt+0x1212>
  402269:	mov    rax,QWORD PTR [rip+0x5ea8]        # 408118 <__ctype_b_loc@plt+0x6f18>
  402270:	test   rax,rax
  402273:	jne    401f6e <__ctype_b_loc@plt+0xd6e>
  402279:	jmp    401900 <__ctype_b_loc@plt+0x700>
  40227e:	mov    r13,QWORD PTR [rip+0x5d9b]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402285:	test   r13,r13
  402288:	jne    4022b3 <__ctype_b_loc@plt+0x10b3>
  40228a:	jmp    401900 <__ctype_b_loc@plt+0x700>
  40228f:	nop
  402290:	mov    QWORD PTR [rip+0x5d89],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  402297:	call   402760 <__ctype_b_loc@plt+0x1560>
  40229c:	mov    r13,QWORD PTR [rip+0x5d7d]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4022a3:	test   r13,r13
  4022a6:	lea    rdi,[rip+0x3d73]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4022ad:	je     401900 <__ctype_b_loc@plt+0x700>
  4022b3:	lea    rsi,[r13-0x1]
  4022b7:	mov    rcx,rsi
  4022ba:	nop    WORD PTR [rax+rax*1+0x0]
  4022c0:	test   rcx,rcx
  4022c3:	jle    4022e0 <__ctype_b_loc@plt+0x10e0>
  4022c5:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  4022c9:	dec    rcx
  4022cc:	mov    edx,ebx
  4022ce:	and    dl,0xc0
  4022d1:	cmp    dl,0x80
  4022d4:	je     4022c0 <__ctype_b_loc@plt+0x10c0>
  4022d6:	cmp    bl,0x20
  4022d9:	je     4022ec <__ctype_b_loc@plt+0x10ec>
  4022db:	jmp    4024c9 <__ctype_b_loc@plt+0x12c9>
  4022e0:	mov    bl,BYTE PTR [rcx+rdi*1]
  4022e3:	cmp    bl,0x20
  4022e6:	jne    4024c9 <__ctype_b_loc@plt+0x12c9>
  4022ec:	mov    ecx,0x1
  4022f1:	mov    edx,0x2001
  4022f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402300:	mov    r14,rsi
  402303:	mov    r12,rcx
  402306:	mov    rbx,rdx
  402309:	test   rsi,rsi
  40230c:	jle    402326 <__ctype_b_loc@plt+0x1126>
  40230e:	lea    rsi,[r14-0x1]
  402312:	movzx  eax,BYTE PTR [r14+rdi*1]
  402317:	and    al,0xc0
  402319:	lea    rcx,[r12+0x1]
  40231e:	lea    rdx,[rbx+0x1]
  402322:	cmp    al,0x80
  402324:	je     402300 <__ctype_b_loc@plt+0x1100>
  402326:	mov    r15,rdi
  402329:	vzeroupper 
  40232c:	call   401070 <strlen@plt>
  402331:	sub    rax,r12
  402334:	cmp    rax,0x1fff
  40233a:	ja     4022a3 <__ctype_b_loc@plt+0x10a3>
  402340:	neg    r12
  402343:	lea    rdi,[r15+r14*1]
  402347:	add    r15,r13
  40234a:	test   r12,r12
  40234d:	mov    eax,0x2000
  402352:	cmovle rbx,rax
  402356:	sub    rbx,r13
  402359:	mov    rsi,r15
  40235c:	mov    rdx,rbx
  40235f:	call   401160 <memmove@plt>
  402364:	test   r12,r12
  402367:	jle    402290 <__ctype_b_loc@plt+0x1090>
  40236d:	mov    rdi,r15
  402370:	xor    esi,esi
  402372:	mov    rdx,r12
  402375:	call   401120 <memcpy@plt>
  40237a:	jmp    402290 <__ctype_b_loc@plt+0x1090>
  40237f:	vzeroupper 
  402382:	call   401200 <__ctype_b_loc@plt>
  402387:	mov    rax,QWORD PTR [rax]
  40238a:	test   BYTE PTR [rax+r14*2],0x2
  40238f:	jne    401900 <__ctype_b_loc@plt+0x700>
  402395:	lea    rdi,[rsp+0x20]
  40239a:	call   401070 <strlen@plt>
  40239f:	mov    rbx,rax
  4023a2:	lea    rdi,[rip+0x3c77]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4023a9:	call   401070 <strlen@plt>
  4023ae:	lea    rcx,[rip+0x3c6b]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4023b5:	add    rax,rbx
  4023b8:	cmp    rax,0x1fff
  4023be:	ja     401900 <__ctype_b_loc@plt+0x700>
  4023c4:	mov    rax,QWORD PTR [rip+0x5c55]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4023cb:	lea    r14,[rax+rbx*1]
  4023cf:	lea    rdi,[rcx+r14*1]
  4023d3:	lea    r12,[rcx+rax*1]
  4023d7:	mov    edx,0x2000
  4023dc:	sub    rdx,rbx
  4023df:	test   rbx,rbx
  4023e2:	mov    ecx,0x2000
  4023e7:	cmovle rdx,rcx
  4023eb:	sub    rdx,rax
  4023ee:	mov    rsi,r12
  4023f1:	call   401160 <memmove@plt>
  4023f6:	test   rbx,rbx
  4023f9:	jle    40240b <__ctype_b_loc@plt+0x120b>
  4023fb:	mov    rdi,r12
  4023fe:	lea    rsi,[rsp+0x20]
  402403:	mov    rdx,rbx
  402406:	call   401120 <memcpy@plt>
  40240b:	mov    QWORD PTR [rip+0x5c0e],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  402412:	vzeroupper 
  402415:	call   402760 <__ctype_b_loc@plt+0x1560>
  40241a:	jmp    401900 <__ctype_b_loc@plt+0x700>
  40241f:	dec    rax
  402422:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40242c:	nop    DWORD PTR [rax+0x0]
  402430:	mov    rcx,rax
  402433:	test   rax,rax
  402436:	jle    402448 <__ctype_b_loc@plt+0x1248>
  402438:	movzx  edx,BYTE PTR [rcx+rdi*1]
  40243c:	and    dl,0xc0
  40243f:	lea    rax,[rcx-0x1]
  402443:	cmp    dl,0x80
  402446:	je     402430 <__ctype_b_loc@plt+0x1230>
  402448:	mov    QWORD PTR [rip+0x5bd1],rcx        # 408020 <__ctype_b_loc@plt+0x6e20>
  40244f:	jmp    401900 <__ctype_b_loc@plt+0x700>
  402454:	cmp    QWORD PTR [rip+0x5cb4],0x0        # 408110 <__ctype_b_loc@plt+0x6f10>
  40245c:	je     4024b6 <__ctype_b_loc@plt+0x12b6>
  40245e:	mov    rax,QWORD PTR [rip+0x5c8b]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402465:	mov    QWORD PTR [rip+0x5c9c],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  40246c:	vzeroupper 
  40246f:	call   402fd0 <__ctype_b_loc@plt+0x1dd0>
  402474:	mov    rax,QWORD PTR [rip+0x5c9d]        # 408118 <__ctype_b_loc@plt+0x6f18>
  40247b:	mov    QWORD PTR [rip+0x5c86],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  402482:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40248c:	nop    DWORD PTR [rax+0x0]
  402490:	call   402fd0 <__ctype_b_loc@plt+0x1dd0>
  402495:	cmp    QWORD PTR [rip+0x5c73],0x0        # 408110 <__ctype_b_loc@plt+0x6f10>
  40249d:	je     4024b6 <__ctype_b_loc@plt+0x12b6>
  40249f:	mov    rax,QWORD PTR [rip+0x5c62]        # 408108 <__ctype_b_loc@plt+0x6f08>
  4024a6:	mov    rax,QWORD PTR [rax+0x10]
  4024aa:	mov    QWORD PTR [rip+0x5c57],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  4024b1:	test   rax,rax
  4024b4:	jne    402490 <__ctype_b_loc@plt+0x1290>
  4024b6:	mov    rax,QWORD PTR [rip+0x5c33]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  4024bd:	mov    QWORD PTR [rip+0x5c3c],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  4024c4:	jmp    401900 <__ctype_b_loc@plt+0x700>
  4024c9:	test   r13,r13
  4024cc:	jne    402503 <__ctype_b_loc@plt+0x1303>
  4024ce:	jmp    401900 <__ctype_b_loc@plt+0x700>
  4024d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024dd:	nop    DWORD PTR [rax]
  4024e0:	mov    QWORD PTR [rip+0x5b39],rbx        # 408020 <__ctype_b_loc@plt+0x6e20>
  4024e7:	call   402760 <__ctype_b_loc@plt+0x1560>
  4024ec:	mov    r13,QWORD PTR [rip+0x5b2d]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4024f3:	test   r13,r13
  4024f6:	lea    rdi,[rip+0x3b23]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4024fd:	je     401900 <__ctype_b_loc@plt+0x700>
  402503:	lea    rsi,[r13-0x1]
  402507:	mov    rcx,rsi
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	test   rcx,rcx
  402513:	jle    402530 <__ctype_b_loc@plt+0x1330>
  402515:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  402519:	dec    rcx
  40251c:	mov    edx,ebx
  40251e:	and    dl,0xc0
  402521:	cmp    dl,0x80
  402524:	je     402510 <__ctype_b_loc@plt+0x1310>
  402526:	jmp    402533 <__ctype_b_loc@plt+0x1333>
  402528:	nop    DWORD PTR [rax+rax*1+0x0]
  402530:	mov    bl,BYTE PTR [rcx+rdi*1]
  402533:	cmp    bl,0x20
  402536:	je     401900 <__ctype_b_loc@plt+0x700>
  40253c:	mov    ecx,0x1
  402541:	mov    edx,0x2001
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	mov    rbx,rsi
  402553:	mov    r12,rcx
  402556:	mov    r14,rdx
  402559:	test   rsi,rsi
  40255c:	jle    402575 <__ctype_b_loc@plt+0x1375>
  40255e:	lea    rsi,[rbx-0x1]
  402562:	movzx  eax,BYTE PTR [rbx+rdi*1]
  402566:	and    al,0xc0
  402568:	lea    rcx,[r12+0x1]
  40256d:	lea    rdx,[r14+0x1]
  402571:	cmp    al,0x80
  402573:	je     402550 <__ctype_b_loc@plt+0x1350>
  402575:	mov    r15,rdi
  402578:	vzeroupper 
  40257b:	call   401070 <strlen@plt>
  402580:	sub    rax,r12
  402583:	cmp    rax,0x1fff
  402589:	ja     4024f3 <__ctype_b_loc@plt+0x12f3>
  40258f:	neg    r12
  402592:	lea    rdi,[r15+rbx*1]
  402596:	add    r15,r13
  402599:	test   r12,r12
  40259c:	mov    eax,0x2000
  4025a1:	cmovle r14,rax
  4025a5:	sub    r14,r13
  4025a8:	mov    rsi,r15
  4025ab:	mov    rdx,r14
  4025ae:	call   401160 <memmove@plt>
  4025b3:	test   r12,r12
  4025b6:	jle    4024e0 <__ctype_b_loc@plt+0x12e0>
  4025bc:	mov    rdi,r15
  4025bf:	xor    esi,esi
  4025c1:	mov    rdx,r12
  4025c4:	call   401120 <memcpy@plt>
  4025c9:	jmp    4024e0 <__ctype_b_loc@plt+0x12e0>
  4025ce:	mov    rax,QWORD PTR [rip+0x5b2b]        # 408100 <__ctype_b_loc@plt+0x6f00>
  4025d5:	test   rax,rax
  4025d8:	je     4025f1 <__ctype_b_loc@plt+0x13f1>
  4025da:	mov    rsi,QWORD PTR [rax]
  4025dd:	lea    rdi,[rip+0x3a3c]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4025e4:	mov    edx,0x1fff
  4025e9:	vzeroupper 
  4025ec:	call   401050 <strncpy@plt>
  4025f1:	lea    rdi,[rip+0x3a28]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4025f8:	vzeroupper 
  4025fb:	call   401070 <strlen@plt>
  402600:	mov    QWORD PTR [rip+0x5a19],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  402607:	call   402760 <__ctype_b_loc@plt+0x1560>
  40260c:	call   402b60 <__ctype_b_loc@plt+0x1960>
  402611:	lea    rdi,[rip+0x3a08]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402618:	vzeroupper 
  40261b:	call   401060 <puts@plt>
  402620:	xor    ebx,ebx
  402622:	cmp    DWORD PTR [rip+0x39eb],0x0        # 406014 <__ctype_b_loc@plt+0x4e14>
  402629:	mov    rax,QWORD PTR [rip+0x39c8]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  402630:	mov    rdi,QWORD PTR [rax]
  402633:	lea    rax,[rip+0x1cf0]        # 40432a <__ctype_b_loc@plt+0x312a>
  40263a:	lea    rdx,[rip+0x1dad]        # 4043ee <__ctype_b_loc@plt+0x31ee>
  402641:	cmove  rdx,rax
  402645:	mov    esi,0x1
  40264a:	xor    eax,eax
  40264c:	vzeroupper 
  40264f:	call   4011e0 <__fprintf_chk@plt>
  402654:	lea    rdx,[rip+0x59ed]        # 408048 <__ctype_b_loc@plt+0x6e48>
  40265b:	xor    edi,edi
  40265d:	xor    esi,esi
  40265f:	call   401180 <tcsetattr@plt>
  402664:	mov    rax,QWORD PTR fs:0x28
  40266d:	cmp    rax,QWORD PTR [rsp+0x2020]
  402675:	jne    4026e3 <__ctype_b_loc@plt+0x14e3>
  402677:	mov    eax,ebx
  402679:	lea    rsp,[rbp-0x28]
  40267d:	pop    rbx
  40267e:	pop    r12
  402680:	pop    r13
  402682:	pop    r14
  402684:	pop    r15
  402686:	pop    rbp
  402687:	ret    
  402688:	mov    ebx,0x1
  40268d:	jmp    402622 <__ctype_b_loc@plt+0x1422>
  40268f:	lea    rdi,[rip+0x1d4a]        # 4043e0 <__ctype_b_loc@plt+0x31e0>
  402696:	call   402720 <__ctype_b_loc@plt+0x1520>
  40269b:	lea    rdi,[rip+0x1c99]        # 40433b <__ctype_b_loc@plt+0x313b>
  4026a2:	call   402720 <__ctype_b_loc@plt+0x1520>
  4026a7:	lea    rdi,[rip+0x1c05]        # 4042b3 <__ctype_b_loc@plt+0x30b3>
  4026ae:	call   401060 <puts@plt>
  4026b3:	xor    edi,edi
  4026b5:	call   4011c0 <exit@plt>
  4026ba:	lea    rdi,[rip+0x1c6b]        # 40432c <__ctype_b_loc@plt+0x312c>
  4026c1:	call   402720 <__ctype_b_loc@plt+0x1520>
  4026c6:	call   4026f0 <__ctype_b_loc@plt+0x14f0>
  4026cb:	lea    rdi,[rip+0x1c86]        # 404358 <__ctype_b_loc@plt+0x3158>
  4026d2:	call   402720 <__ctype_b_loc@plt+0x1520>
  4026d7:	lea    rdi,[rip+0x1c97]        # 404375 <__ctype_b_loc@plt+0x3175>
  4026de:	call   402720 <__ctype_b_loc@plt+0x1520>
  4026e3:	call   401080 <__stack_chk_fail@plt>
  4026e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026f0:	push   rax
  4026f1:	mov    rax,QWORD PTR [rip+0x3900]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  4026f8:	mov    rcx,QWORD PTR [rax]
  4026fb:	lea    rdi,[rip+0x1be1]        # 4042e3 <__ctype_b_loc@plt+0x30e3>
  402702:	mov    esi,0x48
  402707:	mov    edx,0x1
  40270c:	call   4011d0 <fwrite@plt>
  402711:	mov    edi,0x2
  402716:	call   4011c0 <exit@plt>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]
  402720:	push   rbx
  402721:	mov    rbx,rdi
  402724:	lea    rdx,[rip+0x591d]        # 408048 <__ctype_b_loc@plt+0x6e48>
  40272b:	xor    edi,edi
  40272d:	xor    esi,esi
  40272f:	call   401180 <tcsetattr@plt>
  402734:	mov    rax,QWORD PTR [rip+0x38bd]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  40273b:	mov    rdi,QWORD PTR [rax]
  40273e:	lea    rdx,[rip+0x1c04]        # 404349 <__ctype_b_loc@plt+0x3149>
  402745:	mov    esi,0x1
  40274a:	mov    rcx,rbx
  40274d:	xor    eax,eax
  40274f:	call   4011e0 <__fprintf_chk@plt>
  402754:	mov    edi,0x2
  402759:	call   4011c0 <exit@plt>
  40275e:	xchg   ax,ax
  402760:	push   rbp
  402761:	push   r15
  402763:	push   r14
  402765:	push   r13
  402767:	push   r12
  402769:	push   rbx
  40276a:	sub    rsp,0x2048
  402771:	mov    rax,QWORD PTR fs:0x28
  40277a:	mov    QWORD PTR [rsp+0x2040],rax
  402782:	lea    rsi,[rip+0x3897]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402789:	lea    rbx,[rsp+0x40]
  40278e:	mov    edx,0x2000
  402793:	mov    rdi,rbx
  402796:	call   401150 <__strcpy_chk@plt>
  40279b:	lea    rsi,[rip+0x1bef]        # 404391 <__ctype_b_loc@plt+0x3191>
  4027a2:	mov    rdi,rbx
  4027a5:	call   4011a0 <strtok@plt>
  4027aa:	test   rax,rax
  4027ad:	je     402854 <__ctype_b_loc@plt+0x1654>
  4027b3:	mov    rbx,rax
  4027b6:	xor    r15d,r15d
  4027b9:	lea    r14,[rip+0x1bd1]        # 404391 <__ctype_b_loc@plt+0x3191>
  4027c0:	jmp    4027f0 <__ctype_b_loc@plt+0x15f0>
  4027c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027cc:	nop    DWORD PTR [rax+0x0]
  4027d0:	mov    rax,QWORD PTR [rip+0x5909]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  4027d7:	mov    QWORD PTR [rax+r15*8],rbx
  4027db:	inc    r15
  4027de:	xor    edi,edi
  4027e0:	mov    rsi,r14
  4027e3:	call   4011a0 <strtok@plt>
  4027e8:	mov    rbx,rax
  4027eb:	test   rax,rax
  4027ee:	je     402832 <__ctype_b_loc@plt+0x1632>
  4027f0:	movsxd rax,DWORD PTR [rip+0x58f1]        # 4080e8 <__ctype_b_loc@plt+0x6ee8>
  4027f7:	cmp    r15,rax
  4027fa:	jl     4027d0 <__ctype_b_loc@plt+0x15d0>
  4027fc:	mov    rdi,QWORD PTR [rip+0x58dd]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402803:	lea    rcx,[rax+0x1]
  402807:	mov    DWORD PTR [rip+0x58db],ecx        # 4080e8 <__ctype_b_loc@plt+0x6ee8>
  40280d:	lea    rsi,[rax*8+0x8]
  402815:	call   401140 <realloc@plt>
  40281a:	mov    QWORD PTR [rip+0x58bf],rax        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402821:	test   rax,rax
  402824:	jne    4027d7 <__ctype_b_loc@plt+0x15d7>
  402826:	lea    rdi,[rip+0x1aff]        # 40432c <__ctype_b_loc@plt+0x312c>
  40282d:	call   402720 <__ctype_b_loc@plt+0x1520>
  402832:	test   r15d,r15d
  402835:	je     402854 <__ctype_b_loc@plt+0x1654>
  402837:	mov    rax,QWORD PTR [rip+0x58a2]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  40283e:	mov    rdi,QWORD PTR [rax]
  402841:	call   401070 <strlen@plt>
  402846:	mov    QWORD PTR [rsp+0x20],rax
  40284b:	mov    al,0x1
  40284d:	mov    QWORD PTR [rsp+0x28],rax
  402852:	jmp    402865 <__ctype_b_loc@plt+0x1665>
  402854:	xor    eax,eax
  402856:	mov    QWORD PTR [rsp+0x28],rax
  40285b:	xor    r15d,r15d
  40285e:	xor    eax,eax
  402860:	mov    QWORD PTR [rsp+0x20],rax
  402865:	mov    QWORD PTR [rip+0x5880],0x0        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402870:	mov    QWORD PTR [rip+0x587d],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  40287b:	lea    rdi,[rip+0x379e]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402882:	call   401070 <strlen@plt>
  402887:	mov    QWORD PTR [rsp+0x30],rax
  40288c:	mov    r12,QWORD PTR [rip+0x57a5]        # 408038 <__ctype_b_loc@plt+0x6e38>
  402893:	test   r12,r12
  402896:	je     402b00 <__ctype_b_loc@plt+0x1900>
  40289c:	mov    rbx,QWORD PTR [r12]
  4028a0:	test   rbx,rbx
  4028a3:	je     402a82 <__ctype_b_loc@plt+0x1882>
  4028a9:	inc    QWORD PTR [rsp+0x30]
  4028ae:	mov    eax,r15d
  4028b1:	mov    QWORD PTR [rsp+0x38],rax
  4028b6:	xor    eax,eax
  4028b8:	mov    QWORD PTR [rsp+0x10],rax
  4028bd:	xor    eax,eax
  4028bf:	mov    QWORD PTR [rsp+0x18],rax
  4028c4:	xor    eax,eax
  4028c6:	mov    QWORD PTR [rsp],rax
  4028ca:	xor    eax,eax
  4028cc:	mov    QWORD PTR [rsp+0x8],rax
  4028d1:	jmp    402923 <__ctype_b_loc@plt+0x1723>
  4028d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028dd:	nop    DWORD PTR [rax]
  4028e0:	mov    rax,QWORD PTR [rip+0x5809]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  4028e7:	lea    rcx,[rax+0x10]
  4028eb:	test   rax,rax
  4028ee:	lea    rdx,[rip+0x5803]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  4028f5:	cmove  rcx,rdx
  4028f9:	mov    QWORD PTR [rcx],r12
  4028fc:	mov    QWORD PTR [r12+0x8],rax
  402901:	mov    QWORD PTR [r12+0x10],0x0
  40290a:	mov    QWORD PTR [rip+0x57df],r12        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402911:	mov    rbx,QWORD PTR [r12+0x18]
  402916:	add    r12,0x18
  40291a:	test   rbx,rbx
  40291d:	je     402a9d <__ctype_b_loc@plt+0x189d>
  402923:	mov    r14d,0x0
  402929:	test   r15d,r15d
  40292c:	je     4029c0 <__ctype_b_loc@plt+0x17c0>
  402932:	cmp    BYTE PTR [rbx],0x0
  402935:	je     402a20 <__ctype_b_loc@plt+0x1820>
  40293b:	mov    rax,QWORD PTR [rip+0x579e]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402942:	mov    r13,QWORD PTR [rax]
  402945:	mov    rdi,r13
  402948:	call   401070 <strlen@plt>
  40294d:	mov    rbp,rax
  402950:	xor    eax,eax
  402952:	mov    r14,rax
  402955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40295f:	nop
  402960:	mov    rdi,rbx
  402963:	mov    rsi,r13
  402966:	mov    rdx,rbp
  402969:	call   QWORD PTR [rip+0x3691]        # 406000 <__ctype_b_loc@plt+0x4e00>
  40296f:	test   eax,eax
  402971:	je     402980 <__ctype_b_loc@plt+0x1780>
  402973:	cmp    BYTE PTR [rbx+0x1],0x0
  402977:	lea    rbx,[rbx+0x1]
  40297b:	jne    402960 <__ctype_b_loc@plt+0x1760>
  40297d:	jmp    4029c0 <__ctype_b_loc@plt+0x17c0>
  40297f:	nop
  402980:	test   rbx,rbx
  402983:	je     4029c0 <__ctype_b_loc@plt+0x17c0>
  402985:	mov    rcx,r14
  402988:	inc    r14
  40298b:	cmp    r14,QWORD PTR [rsp+0x38]
  402990:	je     4029c0 <__ctype_b_loc@plt+0x17c0>
  402992:	mov    rbx,QWORD PTR [r12]
  402996:	mov    rax,QWORD PTR [rip+0x5743]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  40299d:	mov    r13,QWORD PTR [rax+rcx*8+0x8]
  4029a2:	mov    rdi,r13
  4029a5:	call   401070 <strlen@plt>
  4029aa:	mov    rbp,rax
  4029ad:	cmp    BYTE PTR [rbx],0x0
  4029b0:	mov    rax,r14
  4029b3:	jne    402952 <__ctype_b_loc@plt+0x1752>
  4029b5:	jmp    4029c0 <__ctype_b_loc@plt+0x17c0>
  4029b7:	nop    WORD PTR [rax+rax*1+0x0]
  4029c0:	cmp    r14d,r15d
  4029c3:	jne    402911 <__ctype_b_loc@plt+0x1711>
  4029c9:	cmp    BYTE PTR [rsp+0x28],0x0
  4029ce:	je     4028e0 <__ctype_b_loc@plt+0x16e0>
  4029d4:	mov    rsi,QWORD PTR [r12]
  4029d8:	lea    rdi,[rip+0x3641]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4029df:	mov    rdx,QWORD PTR [rsp+0x30]
  4029e4:	call   QWORD PTR [rip+0x3616]        # 406000 <__ctype_b_loc@plt+0x4e00>
  4029ea:	test   eax,eax
  4029ec:	je     4028e0 <__ctype_b_loc@plt+0x16e0>
  4029f2:	mov    rax,QWORD PTR [rip+0x56e7]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  4029f9:	mov    rdi,QWORD PTR [rax]
  4029fc:	mov    rsi,QWORD PTR [r12]
  402a00:	mov    rdx,QWORD PTR [rsp+0x20]
  402a05:	call   QWORD PTR [rip+0x35f5]        # 406000 <__ctype_b_loc@plt+0x4e00>
  402a0b:	test   eax,eax
  402a0d:	je     402a2e <__ctype_b_loc@plt+0x182e>
  402a0f:	mov    rax,QWORD PTR [rsp+0x8]
  402a14:	test   rax,rax
  402a17:	je     402a3d <__ctype_b_loc@plt+0x183d>
  402a19:	mov    QWORD PTR [rax+0x10],r12
  402a1d:	jmp    402a45 <__ctype_b_loc@plt+0x1845>
  402a1f:	nop
  402a20:	xor    r14d,r14d
  402a23:	cmp    r14d,r15d
  402a26:	jne    402911 <__ctype_b_loc@plt+0x1711>
  402a2c:	jmp    4029c9 <__ctype_b_loc@plt+0x17c9>
  402a2e:	mov    rcx,QWORD PTR [rsp]
  402a32:	test   rcx,rcx
  402a35:	je     402a60 <__ctype_b_loc@plt+0x1860>
  402a37:	mov    QWORD PTR [rcx+0x10],r12
  402a3b:	jmp    402a68 <__ctype_b_loc@plt+0x1868>
  402a3d:	mov    rcx,r12
  402a40:	mov    QWORD PTR [rsp+0x18],r12
  402a45:	mov    QWORD PTR [r12+0x8],rax
  402a4a:	mov    QWORD PTR [r12+0x10],0x0
  402a53:	mov    rax,r12
  402a56:	mov    QWORD PTR [rsp+0x8],r12
  402a5b:	jmp    402911 <__ctype_b_loc@plt+0x1711>
  402a60:	mov    rax,r12
  402a63:	mov    QWORD PTR [rsp+0x10],r12
  402a68:	mov    QWORD PTR [r12+0x8],rcx
  402a6d:	mov    QWORD PTR [r12+0x10],0x0
  402a76:	mov    rax,r12
  402a79:	mov    QWORD PTR [rsp],r12
  402a7d:	jmp    402911 <__ctype_b_loc@plt+0x1711>
  402a82:	xor    eax,eax
  402a84:	mov    QWORD PTR [rsp+0x8],rax
  402a89:	xor    eax,eax
  402a8b:	mov    QWORD PTR [rsp],rax
  402a8f:	xor    eax,eax
  402a91:	mov    QWORD PTR [rsp+0x18],rax
  402a96:	xor    eax,eax
  402a98:	mov    QWORD PTR [rsp+0x10],rax
  402a9d:	mov    rcx,QWORD PTR [rsp+0x10]
  402aa2:	test   rcx,rcx
  402aa5:	mov    rdx,QWORD PTR [rsp+0x8]
  402aaa:	mov    rsi,QWORD PTR [rsp+0x18]
  402aaf:	je     402ade <__ctype_b_loc@plt+0x18de>
  402ab1:	cmp    QWORD PTR [rip+0x563f],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402ab9:	je     402acc <__ctype_b_loc@plt+0x18cc>
  402abb:	mov    rax,QWORD PTR [rip+0x562e]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402ac2:	mov    QWORD PTR [rax+0x10],rcx
  402ac6:	mov    QWORD PTR [rcx+0x8],rax
  402aca:	jmp    402ad3 <__ctype_b_loc@plt+0x18d3>
  402acc:	mov    QWORD PTR [rip+0x5625],rcx        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402ad3:	mov    rax,QWORD PTR [rsp]
  402ad7:	mov    QWORD PTR [rip+0x5612],rax        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402ade:	test   rsi,rsi
  402ae1:	je     402b00 <__ctype_b_loc@plt+0x1900>
  402ae3:	mov    rax,QWORD PTR [rip+0x560e]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402aea:	test   rax,rax
  402aed:	je     402b09 <__ctype_b_loc@plt+0x1909>
  402aef:	mov    rcx,QWORD PTR [rip+0x55fa]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402af6:	mov    QWORD PTR [rcx+0x10],rsi
  402afa:	mov    QWORD PTR [rsi+0x8],rcx
  402afe:	jmp    402b13 <__ctype_b_loc@plt+0x1913>
  402b00:	mov    rax,QWORD PTR [rip+0x55f1]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402b07:	jmp    402b1a <__ctype_b_loc@plt+0x191a>
  402b09:	mov    QWORD PTR [rip+0x55e8],rsi        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402b10:	mov    rax,rsi
  402b13:	mov    QWORD PTR [rip+0x55d6],rdx        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402b1a:	mov    QWORD PTR [rip+0x55df],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  402b21:	mov    QWORD PTR [rip+0x55e0],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  402b28:	call   402fd0 <__ctype_b_loc@plt+0x1dd0>
  402b2d:	mov    rax,QWORD PTR fs:0x28
  402b36:	cmp    rax,QWORD PTR [rsp+0x2040]
  402b3e:	jne    402b52 <__ctype_b_loc@plt+0x1952>
  402b40:	add    rsp,0x2048
  402b47:	pop    rbx
  402b48:	pop    r12
  402b4a:	pop    r13
  402b4c:	pop    r14
  402b4e:	pop    r15
  402b50:	pop    rbp
  402b51:	ret    
  402b52:	call   401080 <__stack_chk_fail@plt>
  402b57:	nop    WORD PTR [rax+rax*1+0x0]
  402b60:	push   rbp
  402b61:	push   r15
  402b63:	push   r14
  402b65:	push   r13
  402b67:	push   r12
  402b69:	push   rbx
  402b6a:	push   rax
  402b6b:	mov    rax,QWORD PTR fs:0x28
  402b74:	mov    QWORD PTR [rsp],rax
  402b78:	mov    r15,QWORD PTR [rip+0x3479]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  402b7f:	mov    rdi,QWORD PTR [r15]
  402b82:	lea    rdx,[rip+0x181c]        # 4043a5 <__ctype_b_loc@plt+0x31a5>
  402b89:	mov    esi,0x1
  402b8e:	xor    eax,eax
  402b90:	call   4011e0 <__fprintf_chk@plt>
  402b95:	mov    rdi,QWORD PTR [r15]
  402b98:	lea    rdx,[rip+0x180b]        # 4043aa <__ctype_b_loc@plt+0x31aa>
  402b9f:	mov    esi,0x1
  402ba4:	xor    eax,eax
  402ba6:	call   4011e0 <__fprintf_chk@plt>
  402bab:	mov    rdi,QWORD PTR [r15]
  402bae:	lea    rdx,[rip+0x17fb]        # 4043b0 <__ctype_b_loc@plt+0x31b0>
  402bb5:	mov    esi,0x1
  402bba:	xor    eax,eax
  402bbc:	call   4011e0 <__fprintf_chk@plt>
  402bc1:	mov    rdi,QWORD PTR [rip+0x5460]        # 408028 <__ctype_b_loc@plt+0x6e28>
  402bc8:	test   rdi,rdi
  402bcb:	je     402bde <__ctype_b_loc@plt+0x19de>
  402bcd:	mov    rsi,QWORD PTR [rip+0x5504]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402bd4:	mov    edx,0x1
  402bd9:	call   403220 <__ctype_b_loc@plt+0x2020>
  402bde:	cmp    QWORD PTR [rip+0x544a],0x0        # 408030 <__ctype_b_loc@plt+0x6e30>
  402be6:	jne    402bfb <__ctype_b_loc@plt+0x19fb>
  402be8:	cmp    QWORD PTR [rip+0x5508],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402bf0:	je     402bfb <__ctype_b_loc@plt+0x19fb>
  402bf2:	mov    rsi,QWORD PTR [rip+0x5447]        # 408040 <__ctype_b_loc@plt+0x6e40>
  402bf9:	jmp    402c09 <__ctype_b_loc@plt+0x1a09>
  402bfb:	mov    rsi,QWORD PTR [rip+0x548e]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402c02:	sub    rsi,QWORD PTR [rip+0x54cf]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402c09:	lea    r14,[rip+0x3410]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402c10:	mov    rdi,r14
  402c13:	xor    edx,edx
  402c15:	call   403220 <__ctype_b_loc@plt+0x2020>
  402c1a:	mov    rax,QWORD PTR [rip+0x540f]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402c21:	test   rax,rax
  402c24:	je     402cc2 <__ctype_b_loc@plt+0x1ac2>
  402c2a:	mov    ecx,DWORD PTR [rip+0x33e4]        # 406014 <__ctype_b_loc@plt+0x4e14>
  402c30:	test   ecx,ecx
  402c32:	je     402c5f <__ctype_b_loc@plt+0x1a5f>
  402c34:	mov    rdi,QWORD PTR [r15]
  402c37:	mov    rdx,QWORD PTR [rip+0x544a]        # 408088 <__ctype_b_loc@plt+0x6e88>
  402c3e:	sub    rdx,rax
  402c41:	test   ecx,ecx
  402c43:	mov    ecx,0x0
  402c48:	cmovle rcx,rdx
  402c4c:	lea    rdx,[rip+0x1744]        # 404397 <__ctype_b_loc@plt+0x3197>
  402c53:	mov    esi,0x1
  402c58:	xor    eax,eax
  402c5a:	call   4011e0 <__fprintf_chk@plt>
  402c5f:	mov    rbx,QWORD PTR [rip+0x54a2]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402c66:	cmp    rbx,QWORD PTR [rip+0x54a3]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402c6d:	je     402e6a <__ctype_b_loc@plt+0x1c6a>
  402c73:	lea    r12,[rip+0x16b0]        # 40432a <__ctype_b_loc@plt+0x312a>
  402c7a:	xor    r13d,r13d
  402c7d:	nop    DWORD PTR [rax]
  402c80:	mov    rdi,QWORD PTR [r15]
  402c83:	mov    esi,0x1
  402c88:	mov    rdx,r12
  402c8b:	xor    eax,eax
  402c8d:	call   4011e0 <__fprintf_chk@plt>
  402c92:	mov    rdi,QWORD PTR [rbx]
  402c95:	mov    rsi,QWORD PTR [rip+0x53f4]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402c9c:	xor    edx,edx
  402c9e:	cmp    rbx,QWORD PTR [rip+0x545b]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402ca5:	sete   dl
  402ca8:	call   403220 <__ctype_b_loc@plt+0x2020>
  402cad:	inc    r13
  402cb0:	mov    rbx,QWORD PTR [rbx+0x10]
  402cb4:	cmp    rbx,QWORD PTR [rip+0x5455]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402cbb:	jne    402c80 <__ctype_b_loc@plt+0x1a80>
  402cbd:	jmp    402e6d <__ctype_b_loc@plt+0x1c6d>
  402cc2:	cmp    QWORD PTR [rip+0x542e],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402cca:	je     402edf <__ctype_b_loc@plt+0x1cdf>
  402cd0:	mov    r12,QWORD PTR [rip+0x53b9]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402cd7:	sub    r12,QWORD PTR [rip+0x53fa]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402cde:	mov    r13,QWORD PTR [rip+0x5423]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402ce5:	sub    r12,QWORD PTR [rip+0x5354]        # 408040 <__ctype_b_loc@plt+0x6e40>
  402cec:	cmp    QWORD PTR [r13+0x8],0x0
  402cf1:	je     402d0d <__ctype_b_loc@plt+0x1b0d>
  402cf3:	lea    rdi,[rip+0x1699]        # 404393 <__ctype_b_loc@plt+0x3193>
  402cfa:	mov    esi,0x5
  402cff:	xor    edx,edx
  402d01:	call   403220 <__ctype_b_loc@plt+0x2020>
  402d06:	mov    r13,QWORD PTR [rip+0x53fb]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402d0d:	cmp    r13,QWORD PTR [rip+0x53fc]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402d14:	je     402e5c <__ctype_b_loc@plt+0x1c5c>
  402d1a:	add    r12,0xfffffffffffffffc
  402d1e:	mov    ebp,0xfffffffe
  402d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d2d:	nop    DWORD PTR [rax]
  402d30:	mov    rdi,QWORD PTR [r13+0x0]
  402d34:	test   rdi,rdi
  402d37:	je     402d80 <__ctype_b_loc@plt+0x1b80>
  402d39:	mov    dl,BYTE PTR [rdi]
  402d3b:	test   dl,dl
  402d3d:	je     402d90 <__ctype_b_loc@plt+0x1b90>
  402d3f:	xor    eax,eax
  402d41:	mov    ecx,0x1
  402d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d50:	mov    esi,eax
  402d52:	and    dl,0xc0
  402d55:	xor    eax,eax
  402d57:	cmp    dl,0x80
  402d5a:	setne  al
  402d5d:	add    eax,esi
  402d5f:	cmp    rcx,rbp
  402d62:	ja     402d6f <__ctype_b_loc@plt+0x1b6f>
  402d64:	movzx  edx,BYTE PTR [rdi+rcx*1]
  402d68:	inc    rcx
  402d6b:	test   dl,dl
  402d6d:	jne    402d50 <__ctype_b_loc@plt+0x1b50>
  402d6f:	add    eax,0x4
  402d72:	jmp    402d95 <__ctype_b_loc@plt+0x1b95>
  402d74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d7e:	xchg   ax,ax
  402d80:	cmp    r12,0x4
  402d84:	mov    esi,0x4
  402d89:	cmovb  rsi,r12
  402d8d:	jmp    402df0 <__ctype_b_loc@plt+0x1bf0>
  402d8f:	nop
  402d90:	mov    eax,0x4
  402d95:	cmp    rax,r12
  402d98:	mov    esi,0x4
  402d9d:	cmovae rsi,r12
  402da1:	test   rdi,rdi
  402da4:	je     402df0 <__ctype_b_loc@plt+0x1bf0>
  402da6:	cmp    rax,r12
  402da9:	jae    402df0 <__ctype_b_loc@plt+0x1bf0>
  402dab:	mov    cl,BYTE PTR [rdi]
  402dad:	test   cl,cl
  402daf:	je     402de5 <__ctype_b_loc@plt+0x1be5>
  402db1:	xor    esi,esi
  402db3:	mov    eax,0x1
  402db8:	nop    DWORD PTR [rax+rax*1+0x0]
  402dc0:	mov    edx,esi
  402dc2:	and    cl,0xc0
  402dc5:	xor    esi,esi
  402dc7:	cmp    cl,0x80
  402dca:	setne  sil
  402dce:	add    esi,edx
  402dd0:	cmp    rax,rbp
  402dd3:	ja     402de0 <__ctype_b_loc@plt+0x1be0>
  402dd5:	movzx  ecx,BYTE PTR [rdi+rax*1]
  402dd9:	inc    rax
  402ddc:	test   cl,cl
  402dde:	jne    402dc0 <__ctype_b_loc@plt+0x1bc0>
  402de0:	add    esi,0x4
  402de3:	jmp    402df0 <__ctype_b_loc@plt+0x1bf0>
  402de5:	mov    esi,0x4
  402dea:	nop    WORD PTR [rax+rax*1+0x0]
  402df0:	xor    edx,edx
  402df2:	cmp    r13,QWORD PTR [rip+0x5307]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402df9:	sete   dl
  402dfc:	call   403220 <__ctype_b_loc@plt+0x2020>
  402e01:	mov    rcx,QWORD PTR [r13+0x0]
  402e05:	mov    eax,0x4
  402e0a:	test   rcx,rcx
  402e0d:	je     402e42 <__ctype_b_loc@plt+0x1c42>
  402e0f:	mov    bl,BYTE PTR [rcx]
  402e11:	test   bl,bl
  402e13:	je     402e42 <__ctype_b_loc@plt+0x1c42>
  402e15:	xor    eax,eax
  402e17:	mov    edx,0x1
  402e1c:	nop    DWORD PTR [rax+0x0]
  402e20:	mov    esi,eax
  402e22:	and    bl,0xc0
  402e25:	xor    eax,eax
  402e27:	cmp    bl,0x80
  402e2a:	setne  al
  402e2d:	add    eax,esi
  402e2f:	cmp    rdx,rbp
  402e32:	ja     402e3f <__ctype_b_loc@plt+0x1c3f>
  402e34:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  402e38:	inc    rdx
  402e3b:	test   bl,bl
  402e3d:	jne    402e20 <__ctype_b_loc@plt+0x1c20>
  402e3f:	add    eax,0x4
  402e42:	sub    r12,rax
  402e45:	je     402f73 <__ctype_b_loc@plt+0x1d73>
  402e4b:	mov    r13,QWORD PTR [r13+0x10]
  402e4f:	cmp    r13,QWORD PTR [rip+0x52ba]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402e56:	jne    402d30 <__ctype_b_loc@plt+0x1b30>
  402e5c:	test   r13,r13
  402e5f:	jne    402f83 <__ctype_b_loc@plt+0x1d83>
  402e65:	jmp    402edf <__ctype_b_loc@plt+0x1cdf>
  402e6a:	xor    r13d,r13d
  402e6d:	mov    rcx,QWORD PTR [rip+0x51bc]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402e74:	cmp    r13,rcx
  402e77:	jae    402ea1 <__ctype_b_loc@plt+0x1ca1>
  402e79:	lea    r12,[rip+0x152f]        # 4043af <__ctype_b_loc@plt+0x31af>
  402e80:	mov    rdi,QWORD PTR [r15]
  402e83:	mov    esi,0x1
  402e88:	mov    rdx,r12
  402e8b:	xor    eax,eax
  402e8d:	call   4011e0 <__fprintf_chk@plt>
  402e92:	inc    r13
  402e95:	mov    rcx,QWORD PTR [rip+0x5194]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402e9c:	cmp    r13,rcx
  402e9f:	jb     402e80 <__ctype_b_loc@plt+0x1c80>
  402ea1:	mov    eax,DWORD PTR [rip+0x316d]        # 406014 <__ctype_b_loc@plt+0x4e14>
  402ea7:	mov    rdi,QWORD PTR [r15]
  402eaa:	test   eax,eax
  402eac:	je     402ecc <__ctype_b_loc@plt+0x1ccc>
  402eae:	mov    rdx,QWORD PTR [rip+0x51d3]        # 408088 <__ctype_b_loc@plt+0x6e88>
  402eb5:	sub    rdx,rcx
  402eb8:	test   eax,eax
  402eba:	mov    ecx,0x0
  402ebf:	cmovle rcx,rdx
  402ec3:	lea    rdx,[rip+0x14cd]        # 404397 <__ctype_b_loc@plt+0x3197>
  402eca:	jmp    402ed3 <__ctype_b_loc@plt+0x1cd3>
  402ecc:	lea    rdx,[rip+0x14cb]        # 40439e <__ctype_b_loc@plt+0x319e>
  402ed3:	mov    esi,0x1
  402ed8:	xor    eax,eax
  402eda:	call   4011e0 <__fprintf_chk@plt>
  402edf:	mov    rdi,QWORD PTR [r15]
  402ee2:	mov    rax,QWORD PTR [rip+0x51ef]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402ee9:	mov    edx,DWORD PTR [rip+0x5131]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402eef:	mov    ecx,0x4
  402ef4:	test   rdx,rdx
  402ef7:	je     402f33 <__ctype_b_loc@plt+0x1d33>
  402ef9:	mov    bl,BYTE PTR [rip+0x3121]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402eff:	test   bl,bl
  402f01:	je     402f33 <__ctype_b_loc@plt+0x1d33>
  402f03:	xor    ecx,ecx
  402f05:	mov    esi,0x1
  402f0a:	nop    WORD PTR [rax+rax*1+0x0]
  402f10:	mov    ebp,ecx
  402f12:	and    bl,0xc0
  402f15:	xor    ecx,ecx
  402f17:	cmp    bl,0x80
  402f1a:	setne  cl
  402f1d:	add    ecx,ebp
  402f1f:	cmp    rsi,rdx
  402f22:	jae    402f30 <__ctype_b_loc@plt+0x1d30>
  402f24:	movzx  ebx,BYTE PTR [rsi+r14*1]
  402f29:	inc    rsi
  402f2c:	test   bl,bl
  402f2e:	jne    402f10 <__ctype_b_loc@plt+0x1d10>
  402f30:	add    ecx,0x4
  402f33:	add    rcx,rax
  402f36:	add    rcx,0xffffffffffffffff
  402f3a:	lea    rdx,[rip+0x147a]        # 4043bb <__ctype_b_loc@plt+0x31bb>
  402f41:	mov    esi,0x1
  402f46:	xor    eax,eax
  402f48:	call   4011e0 <__fprintf_chk@plt>
  402f4d:	mov    rdi,QWORD PTR [r15]
  402f50:	call   401130 <fflush@plt>
  402f55:	mov    rax,QWORD PTR fs:0x28
  402f5e:	cmp    rax,QWORD PTR [rsp]
  402f62:	jne    402fbc <__ctype_b_loc@plt+0x1dbc>
  402f64:	add    rsp,0x8
  402f68:	pop    rbx
  402f69:	pop    r12
  402f6b:	pop    r13
  402f6d:	pop    r14
  402f6f:	pop    r15
  402f71:	pop    rbp
  402f72:	ret    
  402f73:	mov    r13,QWORD PTR [rip+0x5196]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402f7a:	test   r13,r13
  402f7d:	je     402edf <__ctype_b_loc@plt+0x1cdf>
  402f83:	mov    rdi,QWORD PTR [r15]
  402f86:	mov    rcx,QWORD PTR [rip+0x5103]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402f8d:	add    rcx,0xfffffffffffffffb
  402f91:	lea    rdx,[rip+0x141c]        # 4043b4 <__ctype_b_loc@plt+0x31b4>
  402f98:	mov    esi,0x1
  402f9d:	xor    eax,eax
  402f9f:	call   4011e0 <__fprintf_chk@plt>
  402fa4:	lea    rdi,[rip+0x13ea]        # 404395 <__ctype_b_loc@plt+0x3195>
  402fab:	mov    esi,0x5
  402fb0:	xor    edx,edx
  402fb2:	call   403220 <__ctype_b_loc@plt+0x2020>
  402fb7:	jmp    402edf <__ctype_b_loc@plt+0x1cdf>
  402fbc:	call   401080 <__stack_chk_fail@plt>
  402fc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fd0:	push   rbp
  402fd1:	push   rbx
  402fd2:	push   rax
  402fd3:	mov    rax,QWORD PTR fs:0x28
  402fdc:	mov    QWORD PTR [rsp],rax
  402fe0:	mov    r8,QWORD PTR [rip+0x5049]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402fe7:	mov    r9,r8
  402fea:	test   r8,r8
  402fed:	jne    403008 <__ctype_b_loc@plt+0x1e08>
  402fef:	mov    r9,QWORD PTR [rip+0x509a]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402ff6:	sub    r9,QWORD PTR [rip+0x50db]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402ffd:	sub    r9,QWORD PTR [rip+0x503c]        # 408040 <__ctype_b_loc@plt+0x6e40>
  403004:	add    r9,0xfffffffffffffff6
  403008:	mov    r10,QWORD PTR [rip+0x50f9]        # 408108 <__ctype_b_loc@plt+0x6f08>
  40300f:	mov    QWORD PTR [rip+0x50fa],r10        # 408110 <__ctype_b_loc@plt+0x6f10>
  403016:	test   r10,r10
  403019:	je     4031fe <__ctype_b_loc@plt+0x1ffe>
  40301f:	xor    esi,esi
  403021:	mov    r11d,0xfffffffe
  403027:	mov    rdx,r10
  40302a:	nop    WORD PTR [rax+rax*1+0x0]
  403030:	mov    ecx,0x1
  403035:	test   r8,r8
  403038:	jne    4030e0 <__ctype_b_loc@plt+0x1ee0>
  40303e:	mov    rcx,QWORD PTR [rdx]
  403041:	mov    eax,0x4
  403046:	test   rcx,rcx
  403049:	je     403082 <__ctype_b_loc@plt+0x1e82>
  40304b:	mov    bl,BYTE PTR [rcx]
  40304d:	test   bl,bl
  40304f:	je     403082 <__ctype_b_loc@plt+0x1e82>
  403051:	xor    eax,eax
  403053:	mov    edi,0x1
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	mov    ebp,eax
  403062:	and    bl,0xc0
  403065:	xor    eax,eax
  403067:	cmp    bl,0x80
  40306a:	setne  al
  40306d:	add    eax,ebp
  40306f:	cmp    rdi,r11
  403072:	ja     40307f <__ctype_b_loc@plt+0x1e7f>
  403074:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  403078:	inc    rdi
  40307b:	test   bl,bl
  40307d:	jne    403060 <__ctype_b_loc@plt+0x1e60>
  40307f:	add    eax,0x4
  403082:	mov    rcx,r9
  403085:	cmp    rax,r9
  403088:	jae    4030e0 <__ctype_b_loc@plt+0x1ee0>
  40308a:	mov    rax,QWORD PTR [rdx]
  40308d:	mov    ecx,0x4
  403092:	test   rax,rax
  403095:	je     4030e0 <__ctype_b_loc@plt+0x1ee0>
  403097:	mov    bl,BYTE PTR [rax]
  403099:	test   bl,bl
  40309b:	je     4030e0 <__ctype_b_loc@plt+0x1ee0>
  40309d:	xor    ecx,ecx
  40309f:	mov    edi,0x1
  4030a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030ae:	xchg   ax,ax
  4030b0:	mov    ebp,ecx
  4030b2:	and    bl,0xc0
  4030b5:	xor    ecx,ecx
  4030b7:	cmp    bl,0x80
  4030ba:	setne  cl
  4030bd:	add    ecx,ebp
  4030bf:	cmp    rdi,r11
  4030c2:	ja     4030cf <__ctype_b_loc@plt+0x1ecf>
  4030c4:	movzx  ebx,BYTE PTR [rax+rdi*1]
  4030c8:	inc    rdi
  4030cb:	test   bl,bl
  4030cd:	jne    4030b0 <__ctype_b_loc@plt+0x1eb0>
  4030cf:	add    ecx,0x4
  4030d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030dc:	nop    DWORD PTR [rax+0x0]
  4030e0:	add    rsi,rcx
  4030e3:	cmp    rsi,r9
  4030e6:	ja     4030fc <__ctype_b_loc@plt+0x1efc>
  4030e8:	mov    rdx,QWORD PTR [rdx+0x10]
  4030ec:	mov    QWORD PTR [rip+0x501d],rdx        # 408110 <__ctype_b_loc@plt+0x6f10>
  4030f3:	test   rdx,rdx
  4030f6:	jne    403030 <__ctype_b_loc@plt+0x1e30>
  4030fc:	mov    QWORD PTR [rip+0x5015],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  403103:	test   r10,r10
  403106:	je     403205 <__ctype_b_loc@plt+0x2005>
  40310c:	xor    esi,esi
  40310e:	mov    edi,0xfffffffe
  403113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40311d:	nop    DWORD PTR [rax]
  403120:	mov    rax,QWORD PTR [r10+0x8]
  403124:	test   rax,rax
  403127:	je     403205 <__ctype_b_loc@plt+0x2005>
  40312d:	mov    ecx,0x1
  403132:	test   r8,r8
  403135:	jne    4031e0 <__ctype_b_loc@plt+0x1fe0>
  40313b:	mov    rcx,QWORD PTR [rax]
  40313e:	mov    eax,0x4
  403143:	test   rcx,rcx
  403146:	je     403182 <__ctype_b_loc@plt+0x1f82>
  403148:	mov    bl,BYTE PTR [rcx]
  40314a:	test   bl,bl
  40314c:	je     403182 <__ctype_b_loc@plt+0x1f82>
  40314e:	xor    eax,eax
  403150:	mov    edx,0x1
  403155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40315f:	nop
  403160:	mov    ebp,eax
  403162:	and    bl,0xc0
  403165:	xor    eax,eax
  403167:	cmp    bl,0x80
  40316a:	setne  al
  40316d:	add    eax,ebp
  40316f:	cmp    rdx,rdi
  403172:	ja     40317f <__ctype_b_loc@plt+0x1f7f>
  403174:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  403178:	inc    rdx
  40317b:	test   bl,bl
  40317d:	jne    403160 <__ctype_b_loc@plt+0x1f60>
  40317f:	add    eax,0x4
  403182:	mov    rcx,r9
  403185:	cmp    rax,r9
  403188:	jae    4031e0 <__ctype_b_loc@plt+0x1fe0>
  40318a:	mov    rax,QWORD PTR [r10+0x8]
  40318e:	mov    rax,QWORD PTR [rax]
  403191:	mov    ecx,0x4
  403196:	test   rax,rax
  403199:	je     4031e0 <__ctype_b_loc@plt+0x1fe0>
  40319b:	mov    bl,BYTE PTR [rax]
  40319d:	test   bl,bl
  40319f:	je     4031e0 <__ctype_b_loc@plt+0x1fe0>
  4031a1:	xor    ecx,ecx
  4031a3:	mov    edx,0x1
  4031a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4031b0:	mov    ebp,ecx
  4031b2:	and    bl,0xc0
  4031b5:	xor    ecx,ecx
  4031b7:	cmp    bl,0x80
  4031ba:	setne  cl
  4031bd:	add    ecx,ebp
  4031bf:	cmp    rdx,rdi
  4031c2:	ja     4031cf <__ctype_b_loc@plt+0x1fcf>
  4031c4:	movzx  ebx,BYTE PTR [rax+rdx*1]
  4031c8:	inc    rdx
  4031cb:	test   bl,bl
  4031cd:	jne    4031b0 <__ctype_b_loc@plt+0x1fb0>
  4031cf:	add    ecx,0x4
  4031d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	add    rsi,rcx
  4031e3:	cmp    rsi,r9
  4031e6:	ja     403205 <__ctype_b_loc@plt+0x2005>
  4031e8:	mov    r10,QWORD PTR [r10+0x8]
  4031ec:	mov    QWORD PTR [rip+0x4f25],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  4031f3:	test   r10,r10
  4031f6:	jne    403120 <__ctype_b_loc@plt+0x1f20>
  4031fc:	jmp    403205 <__ctype_b_loc@plt+0x2005>
  4031fe:	mov    QWORD PTR [rip+0x4f13],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  403205:	mov    rax,QWORD PTR fs:0x28
  40320e:	cmp    rax,QWORD PTR [rsp]
  403212:	jne    40321b <__ctype_b_loc@plt+0x201b>
  403214:	add    rsp,0x8
  403218:	pop    rbx
  403219:	pop    rbp
  40321a:	ret    
  40321b:	call   401080 <__stack_chk_fail@plt>
  403220:	push   rbp
  403221:	push   r15
  403223:	push   r14
  403225:	push   r13
  403227:	push   r12
  403229:	push   rbx
  40322a:	push   rax
  40322b:	mov    rax,QWORD PTR fs:0x28
  403234:	mov    QWORD PTR [rsp],rax
  403238:	cmp    rsi,0x5
  40323c:	jb     403346 <__ctype_b_loc@plt+0x2146>
  403242:	mov    ebp,edx
  403244:	mov    r13,rsi
  403247:	mov    rbx,rdi
  40324a:	add    rsi,0xfffffffffffffffd
  40324e:	mov    edi,0x1
  403253:	call   401100 <calloc@plt>
  403258:	test   rax,rax
  40325b:	je     403369 <__ctype_b_loc@plt+0x2169>
  403261:	mov    r14,rax
  403264:	lea    r15,[r13-0x4]
  403268:	cmp    ebp,0x1
  40326b:	lea    rbp,[rip+0x1133]        # 4043a5 <__ctype_b_loc@plt+0x31a5>
  403272:	lea    rax,[rip+0x10b2]        # 40432b <__ctype_b_loc@plt+0x312b>
  403279:	cmovne rbp,rax
  40327d:	lea    r12,[rip+0x114c]        # 4043d0 <__ctype_b_loc@plt+0x31d0>
  403284:	cmovne r12,rax
  403288:	mov    rdi,r14
  40328b:	mov    esi,0x20
  403290:	mov    rdx,r15
  403293:	call   4010a0 <memset@plt>
  403298:	mov    BYTE PTR [r14+r15*1],0x0
  40329d:	mov    rdi,rbx
  4032a0:	call   401070 <strlen@plt>
  4032a5:	cmp    rax,r15
  4032a8:	cmovae rax,r15
  4032ac:	mov    rdi,r14
  4032af:	mov    rsi,rbx
  4032b2:	mov    rdx,rax
  4032b5:	call   401120 <memcpy@plt>
  4032ba:	mov    eax,0x4
  4032bf:	test   rbx,rbx
  4032c2:	je     403302 <__ctype_b_loc@plt+0x2102>
  4032c4:	mov    dl,BYTE PTR [rbx]
  4032c6:	test   dl,dl
  4032c8:	je     403302 <__ctype_b_loc@plt+0x2102>
  4032ca:	xor    eax,eax
  4032cc:	mov    ecx,0x1
  4032d1:	mov    esi,0xfffffffe
  4032d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032e0:	mov    edi,eax
  4032e2:	and    dl,0xc0
  4032e5:	xor    eax,eax
  4032e7:	cmp    dl,0x80
  4032ea:	setne  al
  4032ed:	add    eax,edi
  4032ef:	cmp    rcx,rsi
  4032f2:	ja     4032ff <__ctype_b_loc@plt+0x20ff>
  4032f4:	movzx  edx,BYTE PTR [rbx+rcx*1]
  4032f8:	inc    rcx
  4032fb:	test   dl,dl
  4032fd:	jne    4032e0 <__ctype_b_loc@plt+0x20e0>
  4032ff:	add    eax,0x4
  403302:	cmp    rax,r13
  403305:	jbe    403318 <__ctype_b_loc@plt+0x2118>
  403307:	add    r13,0xfffffffffffffff8
  40330b:	cmp    r13,r15
  40330e:	jae    403318 <__ctype_b_loc@plt+0x2118>
  403310:	mov    DWORD PTR [r14+r13*1],0x2e2e2e2e
  403318:	mov    rax,QWORD PTR [rip+0x2cd9]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  40331f:	mov    rdi,QWORD PTR [rax]
  403322:	lea    rdx,[rip+0x10ac]        # 4043d5 <__ctype_b_loc@plt+0x31d5>
  403329:	mov    esi,0x1
  40332e:	mov    rcx,r12
  403331:	mov    r8,r14
  403334:	mov    r9,rbp
  403337:	xor    eax,eax
  403339:	call   4011e0 <__fprintf_chk@plt>
  40333e:	mov    rdi,r14
  403341:	call   401030 <free@plt>
  403346:	mov    rax,QWORD PTR fs:0x28
  40334f:	cmp    rax,QWORD PTR [rsp]
  403353:	jne    403364 <__ctype_b_loc@plt+0x2164>
  403355:	add    rsp,0x8
  403359:	pop    rbx
  40335a:	pop    r12
  40335c:	pop    r13
  40335e:	pop    r14
  403360:	pop    r15
  403362:	pop    rbp
  403363:	ret    
  403364:	call   401080 <__stack_chk_fail@plt>
  403369:	lea    rdi,[rip+0x1052]        # 4043c2 <__ctype_b_loc@plt+0x31c2>
  403370:	call   402720 <__ctype_b_loc@plt+0x1520>
  403375:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40337f:	nop
  403380:	endbr64 
  403384:	push   r15
  403386:	lea    r15,[rip+0x2933]        # 405cc0 <__ctype_b_loc@plt+0x4ac0>
  40338d:	push   r14
  40338f:	mov    r14,rdx
  403392:	push   r13
  403394:	mov    r13,rsi
  403397:	push   r12
  403399:	mov    r12d,edi
  40339c:	push   rbp
  40339d:	lea    rbp,[rip+0x2924]        # 405cc8 <__ctype_b_loc@plt+0x4ac8>
  4033a4:	push   rbx
  4033a5:	sub    rbp,r15
  4033a8:	sub    rsp,0x8
  4033ac:	call   401000 <free@plt-0x30>
  4033b1:	sar    rbp,0x3
  4033b5:	je     4033d6 <__ctype_b_loc@plt+0x21d6>
  4033b7:	xor    ebx,ebx
  4033b9:	nop    DWORD PTR [rax+0x0]
  4033c0:	mov    rdx,r14
  4033c3:	mov    rsi,r13
  4033c6:	mov    edi,r12d
  4033c9:	call   QWORD PTR [r15+rbx*8]
  4033cd:	add    rbx,0x1
  4033d1:	cmp    rbp,rbx
  4033d4:	jne    4033c0 <__ctype_b_loc@plt+0x21c0>
  4033d6:	add    rsp,0x8
  4033da:	pop    rbx
  4033db:	pop    rbp
  4033dc:	pop    r12
  4033de:	pop    r13
  4033e0:	pop    r14
  4033e2:	pop    r15
  4033e4:	ret    
  4033e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033f0:	endbr64 
  4033f4:	ret    

Disassembly of section .fini:

00000000004033f8 <.fini>:
  4033f8:	endbr64 
  4033fc:	sub    rsp,0x8
  403400:	add    rsp,0x8
  403404:	ret    
