
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xbfb9]        # 40dfc8 <rb_strcasecmp@plt+0xbaa8>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_helper_loop@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <rb_helper_loop@plt-0x10>:
  402020:	push   QWORD PTR [rip+0xbfe2]        # 40e008 <rb_strcasecmp@plt+0xbae8>
  402026:	jmp    QWORD PTR [rip+0xbfe4]        # 40e010 <rb_strcasecmp@plt+0xbaf0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <rb_helper_loop@plt>:
  402030:	jmp    QWORD PTR [rip+0xbfe2]        # 40e018 <rb_strcasecmp@plt+0xbaf8>
  402036:	push   0x0
  40203b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402040 <memset@plt>:
  402040:	jmp    QWORD PTR [rip+0xbfda]        # 40e020 <rb_strcasecmp@plt+0xbb00>
  402046:	push   0x1
  40204b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402050 <rb_event_addish@plt>:
  402050:	jmp    QWORD PTR [rip+0xbfd2]        # 40e028 <rb_strcasecmp@plt+0xbb08>
  402056:	push   0x2
  40205b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402060 <rb_ignore_errno@plt>:
  402060:	jmp    QWORD PTR [rip+0xbfca]        # 40e030 <rb_strcasecmp@plt+0xbb10>
  402066:	push   0x3
  40206b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402070 <rb_connect_tcp_ssl@plt>:
  402070:	jmp    QWORD PTR [rip+0xbfc2]        # 40e038 <rb_strcasecmp@plt+0xbb18>
  402076:	push   0x4
  40207b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402080 <snprintf@plt>:
  402080:	jmp    QWORD PTR [rip+0xbfba]        # 40e040 <rb_strcasecmp@plt+0xbb20>
  402086:	push   0x5
  40208b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402090 <rb_connect_tcp@plt>:
  402090:	jmp    QWORD PTR [rip+0xbfb2]        # 40e048 <rb_strcasecmp@plt+0xbb28>
  402096:	push   0x6
  40209b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020a0 <rb_event_delete@plt>:
  4020a0:	jmp    QWORD PTR [rip+0xbfaa]        # 40e050 <rb_strcasecmp@plt+0xbb30>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020b0 <rb_setselect@plt>:
  4020b0:	jmp    QWORD PTR [rip+0xbfa2]        # 40e058 <rb_strcasecmp@plt+0xbb38>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020c0 <memchr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0xbf9a]        # 40e060 <rb_strcasecmp@plt+0xbb40>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020d0 <rb_get_fd@plt>:
  4020d0:	jmp    QWORD PTR [rip+0xbf92]        # 40e068 <rb_strcasecmp@plt+0xbb48>
  4020d6:	push   0xa
  4020db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020e0 <exit@plt>:
  4020e0:	jmp    QWORD PTR [rip+0xbf8a]        # 40e070 <rb_strcasecmp@plt+0xbb50>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020f0 <__assert_fail@plt>:
  4020f0:	jmp    QWORD PTR [rip+0xbf82]        # 40e078 <rb_strcasecmp@plt+0xbb58>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402100 <getaddrinfo@plt>:
  402100:	jmp    QWORD PTR [rip+0xbf7a]        # 40e080 <rb_strcasecmp@plt+0xbb60>
  402106:	push   0xd
  40210b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402110 <rb_socket@plt>:
  402110:	jmp    QWORD PTR [rip+0xbf72]        # 40e088 <rb_strcasecmp@plt+0xbb68>
  402116:	push   0xe
  40211b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402120 <strcasecmp@plt>:
  402120:	jmp    QWORD PTR [rip+0xbf6a]        # 40e090 <rb_strcasecmp@plt+0xbb70>
  402126:	push   0xf
  40212b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402130 <rb_strtok_r@plt>:
  402130:	jmp    QWORD PTR [rip+0xbf62]        # 40e098 <rb_strcasecmp@plt+0xbb78>
  402136:	push   0x10
  40213b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402140 <rb_dictionary_foreach_cur@plt>:
  402140:	jmp    QWORD PTR [rip+0xbf5a]        # 40e0a0 <rb_strcasecmp@plt+0xbb80>
  402146:	push   0x11
  40214b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402150 <strpbrk@plt>:
  402150:	jmp    QWORD PTR [rip+0xbf52]        # 40e0a8 <rb_strcasecmp@plt+0xbb88>
  402156:	push   0x12
  40215b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402160 <rb_helper_child@plt>:
  402160:	jmp    QWORD PTR [rip+0xbf4a]        # 40e0b0 <rb_strcasecmp@plt+0xbb90>
  402166:	push   0x13
  40216b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402170 <strncmp@plt>:
  402170:	jmp    QWORD PTR [rip+0xbf42]        # 40e0b8 <rb_strcasecmp@plt+0xbb98>
  402176:	push   0x14
  40217b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402180 <malloc@plt>:
  402180:	jmp    QWORD PTR [rip+0xbf3a]        # 40e0c0 <rb_strcasecmp@plt+0xbba0>
  402186:	push   0x15
  40218b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402190 <fopen@plt>:
  402190:	jmp    QWORD PTR [rip+0xbf32]        # 40e0c8 <rb_strcasecmp@plt+0xbba8>
  402196:	push   0x16
  40219b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021a0 <rb_write@plt>:
  4021a0:	jmp    QWORD PTR [rip+0xbf2a]        # 40e0d0 <rb_strcasecmp@plt+0xbbb0>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021b0 <setsockopt@plt>:
  4021b0:	jmp    QWORD PTR [rip+0xbf22]        # 40e0d8 <rb_strcasecmp@plt+0xbbb8>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021c0 <rb_strlcpy@plt>:
  4021c0:	jmp    QWORD PTR [rip+0xbf1a]        # 40e0e0 <rb_strcasecmp@plt+0xbbc0>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021d0 <rb_dictionary_foreach_next@plt>:
  4021d0:	jmp    QWORD PTR [rip+0xbf12]        # 40e0e8 <rb_strcasecmp@plt+0xbbc8>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021e0 <freeaddrinfo@plt>:
  4021e0:	jmp    QWORD PTR [rip+0xbf0a]        # 40e0f0 <rb_strcasecmp@plt+0xbbd0>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021f0 <free@plt>:
  4021f0:	jmp    QWORD PTR [rip+0xbf02]        # 40e0f8 <rb_strcasecmp@plt+0xbbd8>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402200 <strlen@plt>:
  402200:	jmp    QWORD PTR [rip+0xbefa]        # 40e100 <rb_strcasecmp@plt+0xbbe0>
  402206:	push   0x1d
  40220b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402210 <rb_string_to_array@plt>:
  402210:	jmp    QWORD PTR [rip+0xbef2]        # 40e108 <rb_strcasecmp@plt+0xbbe8>
  402216:	push   0x1e
  40221b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402220 <rb_read@plt>:
  402220:	jmp    QWORD PTR [rip+0xbeea]        # 40e110 <rb_strcasecmp@plt+0xbbf0>
  402226:	push   0x1f
  40222b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402230 <__ctype_b_loc@plt>:
  402230:	jmp    QWORD PTR [rip+0xbee2]        # 40e118 <rb_strcasecmp@plt+0xbbf8>
  402236:	push   0x20
  40223b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402240 <rb_dictionary_foreach_start@plt>:
  402240:	jmp    QWORD PTR [rip+0xbeda]        # 40e120 <rb_strcasecmp@plt+0xbc00>
  402246:	push   0x21
  40224b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402250 <sprintf@plt>:
  402250:	jmp    QWORD PTR [rip+0xbed2]        # 40e128 <rb_strcasecmp@plt+0xbc08>
  402256:	push   0x22
  40225b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402260 <rb_inet_pton_sock@plt>:
  402260:	jmp    QWORD PTR [rip+0xbeca]        # 40e130 <rb_strcasecmp@plt+0xbc10>
  402266:	push   0x23
  40226b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402270 <strrchr@plt>:
  402270:	jmp    QWORD PTR [rip+0xbec2]        # 40e138 <rb_strcasecmp@plt+0xbc18>
  402276:	push   0x24
  40227b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402280 <rb_current_time@plt>:
  402280:	jmp    QWORD PTR [rip+0xbeba]        # 40e140 <rb_strcasecmp@plt+0xbc20>
  402286:	push   0x25
  40228b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402290 <rb_dictionary_delete@plt>:
  402290:	jmp    QWORD PTR [rip+0xbeb2]        # 40e148 <rb_strcasecmp@plt+0xbc28>
  402296:	push   0x26
  40229b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022a0 <strerror@plt>:
  4022a0:	jmp    QWORD PTR [rip+0xbeaa]        # 40e150 <rb_strcasecmp@plt+0xbc30>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022b0 <strstr@plt>:
  4022b0:	jmp    QWORD PTR [rip+0xbea2]        # 40e158 <rb_strcasecmp@plt+0xbc38>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022c0 <rb_free_rb_dlink_node@plt>:
  4022c0:	jmp    QWORD PTR [rip+0xbe9a]        # 40e160 <rb_strcasecmp@plt+0xbc40>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022d0 <sigaction@plt>:
  4022d0:	jmp    QWORD PTR [rip+0xbe92]        # 40e168 <rb_strcasecmp@plt+0xbc48>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022e0 <rb_close@plt>:
  4022e0:	jmp    QWORD PTR [rip+0xbe8a]        # 40e170 <rb_strcasecmp@plt+0xbc50>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022f0 <strtol@plt>:
  4022f0:	jmp    QWORD PTR [rip+0xbe82]        # 40e178 <rb_strcasecmp@plt+0xbc58>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402300 <getsockname@plt>:
  402300:	jmp    QWORD PTR [rip+0xbe7a]        # 40e180 <rb_strcasecmp@plt+0xbc60>
  402306:	push   0x2d
  40230b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402310 <rb_dictionary_destroy@plt>:
  402310:	jmp    QWORD PTR [rip+0xbe72]        # 40e188 <rb_strcasecmp@plt+0xbc68>
  402316:	push   0x2e
  40231b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402320 <memmove@plt>:
  402320:	jmp    QWORD PTR [rip+0xbe6a]        # 40e190 <rb_strcasecmp@plt+0xbc70>
  402326:	push   0x2f
  40232b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402330 <strchr@plt>:
  402330:	jmp    QWORD PTR [rip+0xbe62]        # 40e198 <rb_strcasecmp@plt+0xbc78>
  402336:	push   0x30
  40233b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402340 <fgets_unlocked@plt>:
  402340:	jmp    QWORD PTR [rip+0xbe5a]        # 40e1a0 <rb_strcasecmp@plt+0xbc80>
  402346:	push   0x31
  40234b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402350 <vsnprintf@plt>:
  402350:	jmp    QWORD PTR [rip+0xbe52]        # 40e1a8 <rb_strcasecmp@plt+0xbc88>
  402356:	push   0x32
  40235b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402360 <rb_init_prng@plt>:
  402360:	jmp    QWORD PTR [rip+0xbe4a]        # 40e1b0 <rb_strcasecmp@plt+0xbc90>
  402366:	push   0x33
  40236b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402370 <rb_dictionary_retrieve@plt>:
  402370:	jmp    QWORD PTR [rip+0xbe42]        # 40e1b8 <rb_strcasecmp@plt+0xbc98>
  402376:	push   0x34
  40237b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402380 <rb_outofmemory@plt>:
  402380:	jmp    QWORD PTR [rip+0xbe3a]        # 40e1c0 <rb_strcasecmp@plt+0xbca0>
  402386:	push   0x35
  40238b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402390 <__errno_location@plt>:
  402390:	jmp    QWORD PTR [rip+0xbe32]        # 40e1c8 <rb_strcasecmp@plt+0xbca8>
  402396:	push   0x36
  40239b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023a0 <rb_dictionary_add@plt>:
  4023a0:	jmp    QWORD PTR [rip+0xbe2a]        # 40e1d0 <rb_strcasecmp@plt+0xbcb0>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023b0 <rb_set_time@plt>:
  4023b0:	jmp    QWORD PTR [rip+0xbe22]        # 40e1d8 <rb_strcasecmp@plt+0xbcb8>
  4023b6:	push   0x38
  4023bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023c0 <sigaddset@plt>:
  4023c0:	jmp    QWORD PTR [rip+0xbe1a]        # 40e1e0 <rb_strcasecmp@plt+0xbcc0>
  4023c6:	push   0x39
  4023cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023d0 <rb_helper_read@plt>:
  4023d0:	jmp    QWORD PTR [rip+0xbe12]        # 40e1e8 <rb_strcasecmp@plt+0xbcc8>
  4023d6:	push   0x3a
  4023db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023e0 <strcmp@plt>:
  4023e0:	jmp    QWORD PTR [rip+0xbe0a]        # 40e1f0 <rb_strcasecmp@plt+0xbcd0>
  4023e6:	push   0x3b
  4023eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023f0 <rb_inet_ntop_sock@plt>:
  4023f0:	jmp    QWORD PTR [rip+0xbe02]        # 40e1f8 <rb_strcasecmp@plt+0xbcd8>
  4023f6:	push   0x3c
  4023fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402400 <rb_dictionary_find@plt>:
  402400:	jmp    QWORD PTR [rip+0xbdfa]        # 40e200 <rb_strcasecmp@plt+0xbce0>
  402406:	push   0x3d
  40240b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402410 <strcpy@plt>:
  402410:	jmp    QWORD PTR [rip+0xbdf2]        # 40e208 <rb_strcasecmp@plt+0xbce8>
  402416:	push   0x3e
  40241b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402420 <rb_dictionary_create@plt>:
  402420:	jmp    QWORD PTR [rip+0xbdea]        # 40e210 <rb_strcasecmp@plt+0xbcf0>
  402426:	push   0x3f
  40242b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402430 <rb_accept_tcp@plt>:
  402430:	jmp    QWORD PTR [rip+0xbde2]        # 40e218 <rb_strcasecmp@plt+0xbcf8>
  402436:	push   0x40
  40243b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402440 <calloc@plt>:
  402440:	jmp    QWORD PTR [rip+0xbdda]        # 40e220 <rb_strcasecmp@plt+0xbd00>
  402446:	push   0x41
  40244b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402450 <rb_helper_write@plt>:
  402450:	jmp    QWORD PTR [rip+0xbdd2]        # 40e228 <rb_strcasecmp@plt+0xbd08>
  402456:	push   0x42
  40245b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402460 <fclose@plt>:
  402460:	jmp    QWORD PTR [rip+0xbdca]        # 40e230 <rb_strcasecmp@plt+0xbd10>
  402466:	push   0x43
  40246b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402470 <recvfrom@plt>:
  402470:	jmp    QWORD PTR [rip+0xbdc2]        # 40e238 <rb_strcasecmp@plt+0xbd18>
  402476:	push   0x44
  40247b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402480 <rb_event_add@plt>:
  402480:	jmp    QWORD PTR [rip+0xbdba]        # 40e240 <rb_strcasecmp@plt+0xbd20>
  402486:	push   0x45
  40248b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402490 <strtoull@plt>:
  402490:	jmp    QWORD PTR [rip+0xbdb2]        # 40e248 <rb_strcasecmp@plt+0xbd28>
  402496:	push   0x46
  40249b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024a0 <rb_get_random@plt>:
  4024a0:	jmp    QWORD PTR [rip+0xbdaa]        # 40e250 <rb_strcasecmp@plt+0xbd30>
  4024a6:	push   0x47
  4024ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024b0 <rb_make_rb_dlink_node@plt>:
  4024b0:	jmp    QWORD PTR [rip+0xbda2]        # 40e258 <rb_strcasecmp@plt+0xbd38>
  4024b6:	push   0x48
  4024bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024c0 <sigemptyset@plt>:
  4024c0:	jmp    QWORD PTR [rip+0xbd9a]        # 40e260 <rb_strcasecmp@plt+0xbd40>
  4024c6:	push   0x49
  4024cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024d0 <sendto@plt>:
  4024d0:	jmp    QWORD PTR [rip+0xbd92]        # 40e268 <rb_strcasecmp@plt+0xbd48>
  4024d6:	push   0x4a
  4024db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024e0 <bind@plt>:
  4024e0:	jmp    QWORD PTR [rip+0xbd8a]        # 40e270 <rb_strcasecmp@plt+0xbd50>
  4024e6:	push   0x4b
  4024eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024f0 <fwrite@plt>:
  4024f0:	jmp    QWORD PTR [rip+0xbd82]        # 40e278 <rb_strcasecmp@plt+0xbd58>
  4024f6:	push   0x4c
  4024fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402500 <rb_listen@plt>:
  402500:	jmp    QWORD PTR [rip+0xbd7a]        # 40e280 <rb_strcasecmp@plt+0xbd60>
  402506:	push   0x4d
  40250b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402510 <memcpy@plt>:
  402510:	jmp    QWORD PTR [rip+0xbd72]        # 40e288 <rb_strcasecmp@plt+0xbd68>
  402516:	push   0x4e
  40251b:	jmp    402020 <rb_helper_loop@plt-0x10>

Disassembly of section .plt.got:

0000000000402520 <rb_strcasecmp@plt>:
  402520:	jmp    QWORD PTR [rip+0xbaba]        # 40dfe0 <rb_strcasecmp@plt+0xbac0>
  402526:	xchg   ax,ax

Disassembly of section .text:

0000000000402530 <.text>:
  402530:	endbr64 
  402534:	xor    ebp,ebp
  402536:	mov    r9,rdx
  402539:	pop    rsi
  40253a:	mov    rdx,rsp
  40253d:	and    rsp,0xfffffffffffffff0
  402541:	push   rax
  402542:	push   rsp
  402543:	mov    r8,0x409670
  40254a:	mov    rcx,0x409600
  402551:	mov    rdi,0x4027b0
  402558:	call   QWORD PTR [rip+0xba72]        # 40dfd0 <rb_strcasecmp@plt+0xbab0>
  40255e:	hlt    
  40255f:	nop
  402560:	endbr64 
  402564:	ret    
  402565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40256f:	nop
  402570:	mov    eax,0x40fe60
  402575:	cmp    rax,0x40fe60
  40257b:	je     402590 <rb_strcasecmp@plt+0x70>
  40257d:	mov    eax,0x0
  402582:	test   rax,rax
  402585:	je     402590 <rb_strcasecmp@plt+0x70>
  402587:	mov    edi,0x40fe60
  40258c:	jmp    rax
  40258e:	xchg   ax,ax
  402590:	ret    
  402591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40259c:	nop    DWORD PTR [rax+0x0]
  4025a0:	mov    esi,0x40fe60
  4025a5:	sub    rsi,0x40fe60
  4025ac:	mov    rax,rsi
  4025af:	shr    rsi,0x3f
  4025b3:	sar    rax,0x3
  4025b7:	add    rsi,rax
  4025ba:	sar    rsi,1
  4025bd:	je     4025d0 <rb_strcasecmp@plt+0xb0>
  4025bf:	mov    eax,0x0
  4025c4:	test   rax,rax
  4025c7:	je     4025d0 <rb_strcasecmp@plt+0xb0>
  4025c9:	mov    edi,0x40fe60
  4025ce:	jmp    rax
  4025d0:	ret    
  4025d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025dc:	nop    DWORD PTR [rax+0x0]
  4025e0:	endbr64 
  4025e4:	cmp    BYTE PTR [rip+0xd875],0x0        # 40fe60 <rb_strcasecmp@plt+0xd940>
  4025eb:	jne    402600 <rb_strcasecmp@plt+0xe0>
  4025ed:	push   rbp
  4025ee:	mov    rbp,rsp
  4025f1:	call   402570 <rb_strcasecmp@plt+0x50>
  4025f6:	mov    BYTE PTR [rip+0xd863],0x1        # 40fe60 <rb_strcasecmp@plt+0xd940>
  4025fd:	pop    rbp
  4025fe:	ret    
  4025ff:	nop
  402600:	ret    
  402601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40260c:	nop    DWORD PTR [rax+0x0]
  402610:	endbr64 
  402614:	jmp    4025a0 <rb_strcasecmp@plt+0x80>
  402616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402620:	push   r14
  402622:	push   rbx
  402623:	push   rax
  402624:	mov    ebx,edi
  402626:	cmp    edi,0x1
  402629:	jg     402647 <rb_strcasecmp@plt+0x127>
  40262b:	lea    rsi,[rip+0x7a95]        # 40a0c7 <rb_strcasecmp@plt+0x7ba7>
  402632:	mov    edi,0x43
  402637:	mov    edx,ebx
  402639:	xor    eax,eax
  40263b:	add    rsp,0x8
  40263f:	pop    rbx
  402640:	pop    r14
  402642:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  402647:	mov    r14,rsi
  40264a:	lea    rax,[rip+0x11acf]        # 414120 <rb_strcasecmp@plt+0x11c00>
  402651:	mov    rdi,QWORD PTR [rax]
  402654:	mov    rsi,QWORD PTR [rsi+0x8]
  402658:	call   402370 <rb_dictionary_retrieve@plt>
  40265d:	test   rax,rax
  402660:	je     402688 <rb_strcasecmp@plt+0x168>
  402662:	lea    esi,[rbx-0x2]
  402665:	mov    edx,DWORD PTR [rax+0x8]
  402668:	cmp    esi,edx
  40266a:	jge    4026a6 <rb_strcasecmp@plt+0x186>
  40266c:	lea    rsi,[rip+0x7acf]        # 40a142 <rb_strcasecmp@plt+0x7c22>
  402673:	mov    edi,0x43
  402678:	mov    ecx,ebx
  40267a:	xor    eax,eax
  40267c:	add    rsp,0x8
  402680:	pop    rbx
  402681:	pop    r14
  402683:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  402688:	mov    rdx,QWORD PTR [r14+0x8]
  40268c:	lea    rsi,[rip+0x7a82]        # 40a115 <rb_strcasecmp@plt+0x7bf5>
  402693:	mov    edi,0x43
  402698:	xor    eax,eax
  40269a:	add    rsp,0x8
  40269e:	pop    rbx
  40269f:	pop    r14
  4026a1:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  4026a6:	mov    rax,QWORD PTR [rax+0x10]
  4026aa:	mov    rdi,QWORD PTR [r14+0x8]
  4026ae:	add    r14,0x10
  4026b2:	mov    rdx,r14
  4026b5:	add    rsp,0x8
  4026b9:	pop    rbx
  4026ba:	pop    r14
  4026bc:	jmp    rax
  4026be:	xchg   ax,ax
  4026c0:	push   r14
  4026c2:	push   rbx
  4026c3:	push   rax
  4026c4:	cmp    edi,0x2
  4026c7:	jg     4026fb <rb_strcasecmp@plt+0x1db>
  4026c9:	xor    ebx,ebx
  4026cb:	lea    r14,[rip+0xcbce]        # 40f2a0 <rb_strcasecmp@plt+0xcd80>
  4026d2:	jmp    4026ec <rb_strcasecmp@plt+0x1cc>
  4026d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026de:	xchg   ax,ax
  4026e0:	inc    rbx
  4026e3:	cmp    rbx,0x100
  4026ea:	je     40271e <rb_strcasecmp@plt+0x1fe>
  4026ec:	mov    rax,QWORD PTR [r14+rbx*8]
  4026f0:	test   rax,rax
  4026f3:	je     4026e0 <rb_strcasecmp@plt+0x1c0>
  4026f5:	xor    edi,edi
  4026f7:	call   rax
  4026f9:	jmp    4026e0 <rb_strcasecmp@plt+0x1c0>
  4026fb:	mov    rax,QWORD PTR [rsi+0x8]
  4026ff:	movzx  eax,BYTE PTR [rax]
  402702:	lea    rcx,[rip+0xcb97]        # 40f2a0 <rb_strcasecmp@plt+0xcd80>
  402709:	mov    rcx,QWORD PTR [rcx+rax*8]
  40270d:	test   rcx,rcx
  402710:	je     40271e <rb_strcasecmp@plt+0x1fe>
  402712:	movsx  edi,al
  402715:	add    rsp,0x8
  402719:	pop    rbx
  40271a:	pop    r14
  40271c:	jmp    rcx
  40271e:	add    rsp,0x8
  402722:	pop    rbx
  402723:	pop    r14
  402725:	ret    
  402726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402730:	push   rbx
  402731:	cmp    edi,0x2
  402734:	jg     40274c <rb_strcasecmp@plt+0x22c>
  402736:	mov    edx,edi
  402738:	lea    rsi,[rip+0x790b]        # 40a04a <rb_strcasecmp@plt+0x7b2a>
  40273f:	mov    edi,0x43
  402744:	xor    eax,eax
  402746:	pop    rbx
  402747:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  40274c:	mov    rbx,rsi
  40274f:	mov    rdi,QWORD PTR [rsi+0x8]
  402753:	xor    esi,esi
  402755:	mov    edx,0x10
  40275a:	call   402490 <strtoull@plt>
  40275f:	mov    rcx,rax
  402762:	shr    rcx,0x20
  402766:	je     402780 <rb_strcasecmp@plt+0x260>
  402768:	mov    rdx,QWORD PTR [rbx+0x8]
  40276c:	lea    rsi,[rip+0x7922]        # 40a095 <rb_strcasecmp@plt+0x7b75>
  402773:	mov    edi,0x43
  402778:	xor    eax,eax
  40277a:	pop    rbx
  40277b:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  402780:	mov    rcx,QWORD PTR [rbx+0x10]
  402784:	movzx  edx,BYTE PTR [rcx]
  402787:	lea    rcx,[rip+0xc312]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  40278e:	mov    rcx,QWORD PTR [rcx+rdx*8]
  402792:	test   rcx,rcx
  402795:	je     40279f <rb_strcasecmp@plt+0x27f>
  402797:	movsx  esi,dl
  40279a:	mov    edi,eax
  40279c:	pop    rbx
  40279d:	jmp    rcx
  40279f:	pop    rbx
  4027a0:	ret    
  4027a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4027b0:	push   rbx
  4027b1:	call   402870 <rb_strcasecmp@plt+0x350>
  4027b6:	lea    rdi,[rip+0x173]        # 402930 <rb_strcasecmp@plt+0x410>
  4027bd:	lea    rsi,[rip+0x1fc]        # 4029c0 <rb_strcasecmp@plt+0x4a0>
  4027c4:	mov    r9d,0x100
  4027ca:	mov    edx,0x0
  4027cf:	mov    ecx,0x0
  4027d4:	mov    r8d,0x0
  4027da:	push   0x100
  4027df:	push   0x100
  4027e4:	call   402160 <rb_helper_child@plt>
  4027e9:	add    rsp,0x10
  4027ed:	lea    rbx,[rip+0xd67c]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4027f4:	mov    QWORD PTR [rbx],rax
  4027f7:	test   rax,rax
  4027fa:	jne    402826 <rb_strcasecmp@plt+0x306>
  4027fc:	mov    rax,QWORD PTR [rip+0xb7ed]        # 40dff0 <rb_strcasecmp@plt+0xbad0>
  402803:	mov    rcx,QWORD PTR [rax]
  402806:	lea    rdi,[rip+0x77f7]        # 40a004 <rb_strcasecmp@plt+0x7ae4>
  40280d:	mov    esi,0x2e
  402812:	mov    edx,0x1
  402817:	call   4024f0 <fwrite@plt>
  40281c:	mov    edi,0x1
  402821:	call   4020e0 <exit@plt>
  402826:	call   4023b0 <rb_set_time@plt>
  40282b:	call   402870 <rb_strcasecmp@plt+0x350>
  402830:	lea    rdi,[rip+0x77fc]        # 40a033 <rb_strcasecmp@plt+0x7b13>
  402837:	mov    rsi,QWORD PTR [rip+0xb7a2]        # 40dfe0 <rb_strcasecmp@plt+0xbac0>
  40283e:	call   402420 <rb_dictionary_create@plt>
  402843:	lea    rcx,[rip+0x118d6]        # 414120 <rb_strcasecmp@plt+0x11c00>
  40284a:	mov    QWORD PTR [rcx],rax
  40284d:	call   404250 <rb_strcasecmp@plt+0x1d30>
  402852:	call   4033b0 <rb_strcasecmp@plt+0xe90>
  402857:	xor    edi,edi
  402859:	mov    esi,0x1
  40285e:	call   402360 <rb_init_prng@plt>
  402863:	mov    rdi,QWORD PTR [rbx]
  402866:	xor    esi,esi
  402868:	call   402030 <rb_helper_loop@plt>
  40286d:	nop    DWORD PTR [rax]
  402870:	push   rbx
  402871:	sub    rsp,0xa0
  402878:	mov    DWORD PTR [rsp+0x90],0x0
  402883:	mov    QWORD PTR [rsp+0x8],0x1
  40288c:	lea    rbx,[rsp+0x10]
  402891:	mov    rdi,rbx
  402894:	call   4024c0 <sigemptyset@plt>
  402899:	mov    rdi,rbx
  40289c:	mov    esi,0xd
  4028a1:	call   4023c0 <sigaddset@plt>
  4028a6:	mov    rdi,rbx
  4028a9:	mov    esi,0xe
  4028ae:	call   4023c0 <sigaddset@plt>
  4028b3:	mov    rdi,rbx
  4028b6:	mov    esi,0x5
  4028bb:	call   4023c0 <sigaddset@plt>
  4028c0:	mov    rdi,rbx
  4028c3:	mov    esi,0x1c
  4028c8:	call   4023c0 <sigaddset@plt>
  4028cd:	lea    rbx,[rsp+0x8]
  4028d2:	mov    edi,0x1c
  4028d7:	mov    rsi,rbx
  4028da:	xor    edx,edx
  4028dc:	call   4022d0 <sigaction@plt>
  4028e1:	mov    edi,0xd
  4028e6:	mov    rsi,rbx
  4028e9:	xor    edx,edx
  4028eb:	call   4022d0 <sigaction@plt>
  4028f0:	mov    edi,0x5
  4028f5:	mov    rsi,rbx
  4028f8:	xor    edx,edx
  4028fa:	call   4022d0 <sigaction@plt>
  4028ff:	lea    rax,[rip+0xca]        # 4029d0 <rb_strcasecmp@plt+0x4b0>
  402906:	mov    QWORD PTR [rsp+0x8],rax
  40290b:	mov    edi,0xe
  402910:	mov    rsi,rbx
  402913:	xor    edx,edx
  402915:	call   4022d0 <sigaction@plt>
  40291a:	add    rsp,0xa0
  402921:	pop    rbx
  402922:	ret    
  402923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40292d:	nop    DWORD PTR [rax]
  402930:	push   r15
  402932:	push   r14
  402934:	push   r12
  402936:	push   rbx
  402937:	push   rax
  402938:	mov    r14,rdi
  40293b:	lea    rsi,[rip+0xd59e]        # 40fee0 <rb_strcasecmp@plt+0xd9c0>
  402942:	mov    edx,0x4000
  402947:	call   4023d0 <rb_helper_read@plt>
  40294c:	test   eax,eax
  40294e:	jle    4029b4 <rb_strcasecmp@plt+0x494>
  402950:	lea    rbx,[rip+0xd589]        # 40fee0 <rb_strcasecmp@plt+0xd9c0>
  402957:	lea    r15,[rip+0xd522]        # 40fe80 <rb_strcasecmp@plt+0xd960>
  40295e:	lea    r12,[rip+0xb93b]        # 40e2a0 <rb_strcasecmp@plt+0xbd80>
  402965:	jmp    402984 <rb_strcasecmp@plt+0x464>
  402967:	nop    WORD PTR [rax+rax*1+0x0]
  402970:	mov    edx,0x4000
  402975:	mov    rdi,r14
  402978:	mov    rsi,rbx
  40297b:	call   4023d0 <rb_helper_read@plt>
  402980:	test   eax,eax
  402982:	jle    4029b4 <rb_strcasecmp@plt+0x494>
  402984:	mov    rdi,rbx
  402987:	mov    rsi,r15
  40298a:	mov    edx,0xa
  40298f:	call   402210 <rb_string_to_array@plt>
  402994:	test   eax,eax
  402996:	jle    402970 <rb_strcasecmp@plt+0x450>
  402998:	mov    rcx,QWORD PTR [rip+0xd4e1]        # 40fe80 <rb_strcasecmp@plt+0xd960>
  40299f:	movzx  ecx,BYTE PTR [rcx]
  4029a2:	mov    rcx,QWORD PTR [r12+rcx*8]
  4029a6:	test   rcx,rcx
  4029a9:	je     402970 <rb_strcasecmp@plt+0x450>
  4029ab:	mov    edi,eax
  4029ad:	mov    rsi,r15
  4029b0:	call   rcx
  4029b2:	jmp    402970 <rb_strcasecmp@plt+0x450>
  4029b4:	add    rsp,0x8
  4029b8:	pop    rbx
  4029b9:	pop    r12
  4029bb:	pop    r14
  4029bd:	pop    r15
  4029bf:	ret    
  4029c0:	push   rax
  4029c1:	mov    edi,0x1
  4029c6:	call   4020e0 <exit@plt>
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	ret    
  4029d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	push   rbp
  4029e1:	push   r15
  4029e3:	push   r14
  4029e5:	push   r12
  4029e7:	push   rbx
  4029e8:	mov    r15,rcx
  4029eb:	mov    r12,rdx
  4029ee:	mov    ebp,esi
  4029f0:	mov    r14,rdi
  4029f3:	mov    edi,0x1
  4029f8:	mov    esi,0xb0
  4029fd:	call   402440 <calloc@plt>
  402a02:	test   rax,rax
  402a05:	je     402a84 <rb_strcasecmp@plt+0x564>
  402a07:	mov    rbx,rax
  402a0a:	cmp    ebp,0x2
  402a0d:	je     402a20 <rb_strcasecmp@plt+0x500>
  402a0f:	cmp    ebp,0xa
  402a12:	jne    402a6e <rb_strcasecmp@plt+0x54e>
  402a14:	mov    edx,0x1c
  402a19:	mov    eax,0x36
  402a1e:	jmp    402a2a <rb_strcasecmp@plt+0x50a>
  402a20:	mov    edx,0x1
  402a25:	mov    eax,0x34
  402a2a:	mov    DWORD PTR [rbx+0x10],eax
  402a2d:	lea    rax,[rip+0x114ac]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402a34:	mov    rcx,QWORD PTR [rax]
  402a37:	lea    rsi,[rcx+0x1]
  402a3b:	mov    QWORD PTR [rax],rsi
  402a3e:	mov    QWORD PTR [rbx+0x98],rcx
  402a45:	mov    QWORD PTR [rbx+0xa0],r12
  402a4c:	mov    QWORD PTR [rbx+0xa8],r15
  402a53:	mov    QWORD PTR [rbx],rbx
  402a56:	lea    rax,[rip+0x33]        # 402a90 <rb_strcasecmp@plt+0x570>
  402a5d:	mov    QWORD PTR [rbx+0x8],rax
  402a61:	mov    rdi,r14
  402a64:	mov    rsi,rbx
  402a67:	call   4043b0 <rb_strcasecmp@plt+0x1e90>
  402a6c:	jmp    402a78 <rb_strcasecmp@plt+0x558>
  402a6e:	mov    rdi,rbx
  402a71:	call   4021f0 <free@plt>
  402a76:	xor    ebx,ebx
  402a78:	mov    rax,rbx
  402a7b:	pop    rbx
  402a7c:	pop    r12
  402a7e:	pop    r14
  402a80:	pop    r15
  402a82:	pop    rbp
  402a83:	ret    
  402a84:	call   402380 <rb_outofmemory@plt>
  402a89:	nop    DWORD PTR [rax+0x0]
  402a90:	push   rbp
  402a91:	mov    rbp,rsp
  402a94:	push   r15
  402a96:	push   r14
  402a98:	push   rbx
  402a99:	and    rsp,0xffffffffffffffe0
  402a9d:	sub    rsp,0x40
  402aa1:	vxorps xmm0,xmm0,xmm0
  402aa5:	vmovaps YMMWORD PTR [rsp],ymm0
  402aaa:	vmovups YMMWORD PTR [rsp+0x15],ymm0
  402ab0:	mov    BYTE PTR [rsp],0x2a
  402ab4:	test   rdi,rdi
  402ab7:	je     402b80 <rb_strcasecmp@plt+0x660>
  402abd:	mov    rbx,rdi
  402ac0:	test   rsi,rsi
  402ac3:	je     402b42 <rb_strcasecmp@plt+0x622>
  402ac5:	mov    edx,DWORD PTR [rbx+0x10]
  402ac8:	cmp    edx,0x36
  402acb:	je     402af9 <rb_strcasecmp@plt+0x5d9>
  402acd:	cmp    edx,0x34
  402ad0:	jne    402ba0 <rb_strcasecmp@plt+0x680>
  402ad6:	cmp    WORD PTR [rsi+0x8],0x2
  402adb:	jne    402b42 <rb_strcasecmp@plt+0x622>
  402add:	add    rsi,0x8
  402ae1:	mov    rax,rsp
  402ae4:	mov    rdi,rsi
  402ae7:	mov    rsi,rax
  402aea:	mov    edx,0x35
  402aef:	vzeroupper 
  402af2:	call   4023f0 <rb_inet_ntop_sock@plt>
  402af7:	jmp    402b42 <rb_strcasecmp@plt+0x622>
  402af9:	cmp    WORD PTR [rsi+0x8],0xa
  402afe:	jne    402b42 <rb_strcasecmp@plt+0x622>
  402b00:	add    rsi,0x8
  402b04:	mov    rax,rsp
  402b07:	mov    rdi,rsi
  402b0a:	mov    rsi,rax
  402b0d:	mov    edx,0x35
  402b12:	vzeroupper 
  402b15:	call   4023f0 <rb_inet_ntop_sock@plt>
  402b1a:	cmp    BYTE PTR [rsp],0x3a
  402b1e:	jne    402b42 <rb_strcasecmp@plt+0x622>
  402b20:	lea    r14,[rsp+0x1]
  402b25:	mov    r15,rsp
  402b28:	mov    rdi,r15
  402b2b:	call   402200 <strlen@plt>
  402b30:	mov    rdi,r14
  402b33:	mov    rsi,r15
  402b36:	mov    rdx,rax
  402b39:	call   402320 <memmove@plt>
  402b3e:	mov    BYTE PTR [rsp],0x30
  402b42:	mov    rax,QWORD PTR [rbx+0xa0]
  402b49:	test   rax,rax
  402b4c:	je     402b6a <rb_strcasecmp@plt+0x64a>
  402b4e:	xor    esi,esi
  402b50:	cmp    BYTE PTR [rsp],0x2a
  402b54:	setne  sil
  402b58:	mov    edx,DWORD PTR [rbx+0x10]
  402b5b:	mov    rcx,QWORD PTR [rbx+0xa8]
  402b62:	mov    rdi,rsp
  402b65:	vzeroupper 
  402b68:	call   rax
  402b6a:	mov    rdi,rbx
  402b6d:	vzeroupper 
  402b70:	call   4021f0 <free@plt>
  402b75:	lea    rsp,[rbp-0x18]
  402b79:	pop    rbx
  402b7a:	pop    r14
  402b7c:	pop    r15
  402b7e:	pop    rbp
  402b7f:	ret    
  402b80:	lea    rsi,[rip+0x768a]        # 40a211 <rb_strcasecmp@plt+0x7cf1>
  402b87:	mov    edi,0x43
  402b8c:	xor    eax,eax
  402b8e:	vzeroupper 
  402b91:	call   403120 <rb_strcasecmp@plt+0xc00>
  402b96:	mov    edi,0x2
  402b9b:	call   4020e0 <exit@plt>
  402ba0:	lea    rsi,[rip+0x7696]        # 40a23d <rb_strcasecmp@plt+0x7d1d>
  402ba7:	mov    edi,0x43
  402bac:	xor    eax,eax
  402bae:	vzeroupper 
  402bb1:	call   403120 <rb_strcasecmp@plt+0xc00>
  402bb6:	mov    edi,0x2
  402bbb:	call   4020e0 <exit@plt>
  402bc0:	push   r15
  402bc2:	push   r14
  402bc4:	push   r13
  402bc6:	push   r12
  402bc8:	push   rbx
  402bc9:	mov    r14,rdx
  402bcc:	mov    r15,rsi
  402bcf:	mov    r13,rdi
  402bd2:	mov    edi,0x1
  402bd7:	mov    esi,0xb0
  402bdc:	call   402440 <calloc@plt>
  402be1:	test   rax,rax
  402be4:	je     402c7b <rb_strcasecmp@plt+0x75b>
  402bea:	mov    rbx,rax
  402bed:	mov    r12,rax
  402bf0:	add    r12,0x18
  402bf4:	mov    rdi,r13
  402bf7:	mov    rsi,r12
  402bfa:	call   402260 <rb_inet_pton_sock@plt>
  402bff:	test   eax,eax
  402c01:	je     402c1b <rb_strcasecmp@plt+0x6fb>
  402c03:	movzx  eax,WORD PTR [r12]
  402c08:	cmp    ax,0x2
  402c0c:	je     402c27 <rb_strcasecmp@plt+0x707>
  402c0e:	cmp    ax,0xa
  402c12:	jne    402c1b <rb_strcasecmp@plt+0x6fb>
  402c14:	mov    eax,0x53
  402c19:	jmp    402c2c <rb_strcasecmp@plt+0x70c>
  402c1b:	mov    rdi,rbx
  402c1e:	call   4021f0 <free@plt>
  402c23:	xor    ebx,ebx
  402c25:	jmp    402c6e <rb_strcasecmp@plt+0x74e>
  402c27:	mov    eax,0x52
  402c2c:	mov    DWORD PTR [rbx+0x10],eax
  402c2f:	lea    rax,[rip+0x112aa]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402c36:	mov    rcx,QWORD PTR [rax]
  402c39:	lea    rdx,[rcx+0x1]
  402c3d:	mov    QWORD PTR [rax],rdx
  402c40:	mov    QWORD PTR [rbx+0x98],rcx
  402c47:	mov    QWORD PTR [rbx+0xa0],r15
  402c4e:	mov    QWORD PTR [rbx+0xa8],r14
  402c55:	mov    QWORD PTR [rbx],rbx
  402c58:	lea    rax,[rip+0x21]        # 402c80 <rb_strcasecmp@plt+0x760>
  402c5f:	mov    QWORD PTR [rbx+0x8],rax
  402c63:	mov    rdi,r12
  402c66:	mov    rsi,rbx
  402c69:	call   404480 <rb_strcasecmp@plt+0x1f60>
  402c6e:	mov    rax,rbx
  402c71:	pop    rbx
  402c72:	pop    r12
  402c74:	pop    r13
  402c76:	pop    r14
  402c78:	pop    r15
  402c7a:	ret    
  402c7b:	call   402380 <rb_outofmemory@plt>
  402c80:	push   rbx
  402c81:	test   rdi,rdi
  402c84:	je     402ce9 <rb_strcasecmp@plt+0x7c9>
  402c86:	mov    rbx,rdi
  402c89:	test   rsi,rsi
  402c8c:	je     402cbd <rb_strcasecmp@plt+0x79d>
  402c8e:	mov    edx,DWORD PTR [rbx+0x10]
  402c91:	cmp    edx,0x53
  402c94:	je     402ca8 <rb_strcasecmp@plt+0x788>
  402c96:	cmp    edx,0x52
  402c99:	jne    402d06 <rb_strcasecmp@plt+0x7e6>
  402c9b:	mov    eax,DWORD PTR [rbx+0x1c]
  402c9e:	cmp    eax,DWORD PTR [rsi+0xc]
  402ca1:	jne    402cbd <rb_strcasecmp@plt+0x79d>
  402ca3:	mov    rdi,QWORD PTR [rsi]
  402ca6:	jmp    402cbf <rb_strcasecmp@plt+0x79f>
  402ca8:	vmovdqu xmm0,XMMWORD PTR [rbx+0x20]
  402cad:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [rsi+0x10]
  402cb2:	vpmovmskb eax,xmm0
  402cb6:	cmp    eax,0xffff
  402cbb:	je     402ca3 <rb_strcasecmp@plt+0x783>
  402cbd:	xor    edi,edi
  402cbf:	mov    rax,QWORD PTR [rbx+0xa0]
  402cc6:	test   rax,rax
  402cc9:	je     402ce0 <rb_strcasecmp@plt+0x7c0>
  402ccb:	xor    esi,esi
  402ccd:	test   rdi,rdi
  402cd0:	setne  sil
  402cd4:	mov    edx,DWORD PTR [rbx+0x10]
  402cd7:	mov    rcx,QWORD PTR [rbx+0xa8]
  402cde:	call   rax
  402ce0:	mov    rdi,rbx
  402ce3:	pop    rbx
  402ce4:	jmp    4021f0 <free@plt>
  402ce9:	lea    rsi,[rip+0x7580]        # 40a270 <rb_strcasecmp@plt+0x7d50>
  402cf0:	mov    edi,0x43
  402cf5:	xor    eax,eax
  402cf7:	call   403120 <rb_strcasecmp@plt+0xc00>
  402cfc:	mov    edi,0x2
  402d01:	call   4020e0 <exit@plt>
  402d06:	lea    rsi,[rip+0x7595]        # 40a2a2 <rb_strcasecmp@plt+0x7d82>
  402d0d:	mov    edi,0x43
  402d12:	xor    eax,eax
  402d14:	call   403120 <rb_strcasecmp@plt+0xc00>
  402d19:	mov    edi,0x2
  402d1e:	call   4020e0 <exit@plt>
  402d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d2d:	nop    DWORD PTR [rax]
  402d30:	vxorps xmm0,xmm0,xmm0
  402d34:	vmovups XMMWORD PTR [rdi+0xa0],xmm0
  402d3c:	ret    
  402d3d:	nop    DWORD PTR [rax]
  402d40:	push   r15
  402d42:	push   r14
  402d44:	push   rbx
  402d45:	mov    rbx,rsi
  402d48:	mov    r14,QWORD PTR [rsi+0x8]
  402d4c:	mov    rdi,r14
  402d4f:	call   402200 <strlen@plt>
  402d54:	lea    rdi,[rax+0x1]
  402d58:	call   402180 <malloc@plt>
  402d5d:	test   rax,rax
  402d60:	je     402e3b <rb_strcasecmp@plt+0x91b>
  402d66:	mov    r15,rax
  402d69:	mov    rdi,rax
  402d6c:	mov    rsi,r14
  402d6f:	call   402410 <strcpy@plt>
  402d74:	mov    rax,QWORD PTR [rbx+0x10]
  402d78:	mov    r14,QWORD PTR [rbx+0x18]
  402d7c:	movsx  edx,BYTE PTR [rax]
  402d7f:	lea    eax,[rdx-0x52]
  402d82:	cmp    eax,0x2
  402d85:	jb     402e1e <rb_strcasecmp@plt+0x8fe>
  402d8b:	xor    ebx,ebx
  402d8d:	cmp    edx,0x34
  402d90:	je     402da0 <rb_strcasecmp@plt+0x880>
  402d92:	cmp    edx,0x36
  402d95:	jne    402e40 <rb_strcasecmp@plt+0x920>
  402d9b:	mov    ebx,0x8
  402da0:	mov    edi,0x1
  402da5:	mov    esi,0xb0
  402daa:	call   402440 <calloc@plt>
  402daf:	test   rax,rax
  402db2:	je     402e3b <rb_strcasecmp@plt+0x91b>
  402db8:	xor    ecx,ecx
  402dba:	test   ebx,ebx
  402dbc:	setne  cl
  402dbf:	lea    ecx,[rcx+rcx*1+0x34]
  402dc3:	mov    esi,0x1
  402dc8:	mov    edx,0x1c
  402dcd:	cmove  edx,esi
  402dd0:	mov    DWORD PTR [rax+0x10],ecx
  402dd3:	lea    rcx,[rip+0x11106]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402dda:	mov    rsi,QWORD PTR [rcx]
  402ddd:	lea    rdi,[rsi+0x1]
  402de1:	mov    QWORD PTR [rcx],rdi
  402de4:	mov    QWORD PTR [rax+0x98],rsi
  402deb:	lea    rcx,[rip+0x8e]        # 402e80 <rb_strcasecmp@plt+0x960>
  402df2:	mov    QWORD PTR [rax+0xa0],rcx
  402df9:	mov    QWORD PTR [rax+0xa8],r15
  402e00:	mov    QWORD PTR [rax],rax
  402e03:	lea    rcx,[rip+0xfffffffffffffc86]        # 402a90 <rb_strcasecmp@plt+0x570>
  402e0a:	mov    QWORD PTR [rax+0x8],rcx
  402e0e:	mov    rdi,r14
  402e11:	mov    rsi,rax
  402e14:	pop    rbx
  402e15:	pop    r14
  402e17:	pop    r15
  402e19:	jmp    4043b0 <rb_strcasecmp@plt+0x1e90>
  402e1e:	lea    rsi,[rip+0x5b]        # 402e80 <rb_strcasecmp@plt+0x960>
  402e25:	mov    rdi,r14
  402e28:	mov    rdx,r15
  402e2b:	call   402bc0 <rb_strcasecmp@plt+0x6a0>
  402e30:	test   rax,rax
  402e33:	je     402e5d <rb_strcasecmp@plt+0x93d>
  402e35:	pop    rbx
  402e36:	pop    r14
  402e38:	pop    r15
  402e3a:	ret    
  402e3b:	call   402380 <rb_outofmemory@plt>
  402e40:	lea    rsi,[rip+0x734a]        # 40a191 <rb_strcasecmp@plt+0x7c71>
  402e47:	mov    edi,0x43
  402e4c:	xor    eax,eax
  402e4e:	call   403120 <rb_strcasecmp@plt+0xc00>
  402e53:	mov    edi,0x2
  402e58:	call   4020e0 <exit@plt>
  402e5d:	lea    rsi,[rip+0x7477]        # 40a2db <rb_strcasecmp@plt+0x7dbb>
  402e64:	mov    edi,0x43
  402e69:	xor    eax,eax
  402e6b:	call   403120 <rb_strcasecmp@plt+0xc00>
  402e70:	mov    edi,0x2
  402e75:	call   4020e0 <exit@plt>
  402e7a:	nop    WORD PTR [rax+rax*1+0x0]
  402e80:	push   rbx
  402e81:	test   edx,edx
  402e83:	je     402ed3 <rb_strcasecmp@plt+0x9b3>
  402e85:	mov    rbx,rcx
  402e88:	test   rcx,rcx
  402e8b:	je     402ed3 <rb_strcasecmp@plt+0x9b3>
  402e8d:	mov    ecx,edx
  402e8f:	mov    r8,rdi
  402e92:	lea    rax,[rip+0xcfd7]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  402e99:	mov    rdi,QWORD PTR [rax]
  402e9c:	test   r8,r8
  402e9f:	je     402eb9 <rb_strcasecmp@plt+0x999>
  402ea1:	test   sil,sil
  402ea4:	je     402eb9 <rb_strcasecmp@plt+0x999>
  402ea6:	lea    rsi,[rip+0x7465]        # 40a312 <rb_strcasecmp@plt+0x7df2>
  402ead:	mov    rdx,rbx
  402eb0:	xor    eax,eax
  402eb2:	call   402450 <rb_helper_write@plt>
  402eb7:	jmp    402eca <rb_strcasecmp@plt+0x9aa>
  402eb9:	lea    rsi,[rip+0x7446]        # 40a306 <rb_strcasecmp@plt+0x7de6>
  402ec0:	mov    rdx,rbx
  402ec3:	xor    eax,eax
  402ec5:	call   402450 <rb_helper_write@plt>
  402eca:	mov    rdi,rbx
  402ecd:	pop    rbx
  402ece:	jmp    4021f0 <free@plt>
  402ed3:	lea    rsi,[rip+0x7401]        # 40a2db <rb_strcasecmp@plt+0x7dbb>
  402eda:	mov    edi,0x43
  402edf:	xor    eax,eax
  402ee1:	call   403120 <rb_strcasecmp@plt+0xc00>
  402ee6:	mov    edi,0x2
  402eeb:	call   4020e0 <exit@plt>
  402ef0:	push   rbp
  402ef1:	push   r15
  402ef3:	push   r14
  402ef5:	push   r13
  402ef7:	push   r12
  402ef9:	push   rbx
  402efa:	sub    rsp,0x278
  402f01:	mov    ebx,esi
  402f03:	mov    r14d,edi
  402f06:	lea    rax,[rip+0x11057]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  402f0d:	cmp    DWORD PTR [rax],0x0
  402f10:	je     40301a <rb_strcasecmp@plt+0xafa>
  402f16:	jle    402fbb <rb_strcasecmp@plt+0xa9b>
  402f1c:	mov    DWORD PTR [rsp+0x8],ebx
  402f20:	mov    DWORD PTR [rsp+0xc],r14d
  402f25:	lea    rbx,[rip+0x11334]        # 414260 <rb_strcasecmp@plt+0x11d40>
  402f2c:	lea    r13,[rsp+0x10]
  402f31:	lea    r12,[rip+0x72d5]        # 40a20d <rb_strcasecmp@plt+0x7ced>
  402f38:	xor    r14d,r14d
  402f3b:	xor    eax,eax
  402f3d:	nop    DWORD PTR [rax]
  402f40:	mov    r15,rax
  402f43:	mov    rdi,rbx
  402f46:	mov    rsi,r13
  402f49:	mov    edx,0x35
  402f4e:	call   4023f0 <rb_inet_ntop_sock@plt>
  402f53:	cmp    BYTE PTR [rsp+0x10],0x0
  402f58:	je     402fe6 <rb_strcasecmp@plt+0xac6>
  402f5e:	mov    rdi,r13
  402f61:	call   402200 <strlen@plt>
  402f66:	mov    rbp,rax
  402f69:	lea    rdi,[rsp+r15*1]
  402f6d:	add    rdi,0x50
  402f71:	mov    esi,0x21c
  402f76:	sub    rsi,r15
  402f79:	mov    rdx,r12
  402f7c:	mov    rcx,r13
  402f7f:	xor    eax,eax
  402f81:	call   402080 <snprintf@plt>
  402f86:	lea    rax,[r15+rbp*1]
  402f8a:	add    rax,0x1
  402f8e:	inc    r14
  402f91:	lea    rcx,[rip+0x10fcc]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  402f98:	movsxd rcx,DWORD PTR [rcx]
  402f9b:	sub    rbx,0xffffffffffffff80
  402f9f:	cmp    r14,rcx
  402fa2:	jl     402f40 <rb_strcasecmp@plt+0xa20>
  402fa4:	test   rax,rax
  402fa7:	mov    r14d,DWORD PTR [rsp+0xc]
  402fac:	mov    ebx,DWORD PTR [rsp+0x8]
  402fb0:	je     402fbb <rb_strcasecmp@plt+0xa9b>
  402fb2:	add    r15,rbp
  402fb5:	mov    BYTE PTR [rsp+r15*1+0x50],0x0
  402fbb:	movsx  esi,bl
  402fbe:	lea    rdx,[rip+0x804f]        # 40b014 <rb_strcasecmp@plt+0x8af4>
  402fc5:	lea    rcx,[rsp+0x50]
  402fca:	mov    edi,r14d
  402fcd:	xor    eax,eax
  402fcf:	call   4031f0 <rb_strcasecmp@plt+0xcd0>
  402fd4:	add    rsp,0x278
  402fdb:	pop    rbx
  402fdc:	pop    r12
  402fde:	pop    r13
  402fe0:	pop    r14
  402fe2:	pop    r15
  402fe4:	pop    rbp
  402fe5:	ret    
  402fe6:	lea    rsi,[rip+0x71f9]        # 40a1e6 <rb_strcasecmp@plt+0x7cc6>
  402fed:	mov    edi,0x43
  402ff2:	xor    eax,eax
  402ff4:	call   403120 <rb_strcasecmp@plt+0xc00>
  402ff9:	movsx  esi,BYTE PTR [rsp+0x8]
  402ffe:	lea    rdx,[rip+0x71f6]        # 40a1fb <rb_strcasecmp@plt+0x7cdb>
  403005:	mov    edi,DWORD PTR [rsp+0xc]
  403009:	xor    eax,eax
  40300b:	call   4032c0 <rb_strcasecmp@plt+0xda0>
  403010:	mov    edi,0x2
  403015:	call   4020e0 <exit@plt>
  40301a:	lea    rsi,[rip+0x71a1]        # 40a1c2 <rb_strcasecmp@plt+0x7ca2>
  403021:	mov    edi,0x43
  403026:	xor    eax,eax
  403028:	call   403120 <rb_strcasecmp@plt+0xc00>
  40302d:	movsx  esi,bl
  403030:	lea    rdx,[rip+0x71a1]        # 40a1d8 <rb_strcasecmp@plt+0x7cb8>
  403037:	mov    edi,r14d
  40303a:	jmp    403009 <rb_strcasecmp@plt+0xae9>
  40303c:	nop    DWORD PTR [rax+0x0]
  403040:	jmp    4042f0 <rb_strcasecmp@plt+0x1dd0>
  403045:	nop    DWORD PTR [rax]
  403048:	nop    DWORD PTR [rax+rax*1+0x0]
  403050:	push   rbp
  403051:	push   rbx
  403052:	sub    rsp,0x2d8
  403059:	mov    rbx,rdx
  40305c:	mov    rdx,rsi
  40305f:	mov    ebp,edi
  403061:	test   al,al
  403063:	je     4030a4 <rb_strcasecmp@plt+0xb84>
  403065:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40306b:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403071:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403077:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  403080:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403089:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403092:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40309b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4030a4:	mov    QWORD PTR [rsp+0x30],rbx
  4030a9:	mov    QWORD PTR [rsp+0x38],rcx
  4030ae:	mov    QWORD PTR [rsp+0x40],r8
  4030b3:	mov    QWORD PTR [rsp+0x48],r9
  4030b8:	lea    rax,[rsp+0x20]
  4030bd:	mov    QWORD PTR [rsp+0x10],rax
  4030c2:	lea    rax,[rsp+0x2f0]
  4030ca:	mov    QWORD PTR [rsp+0x8],rax
  4030cf:	movabs rax,0x3000000010
  4030d9:	mov    QWORD PTR [rsp],rax
  4030dd:	lea    rbx,[rsp+0xd0]
  4030e5:	mov    rcx,rsp
  4030e8:	mov    esi,0x200
  4030ed:	mov    rdi,rbx
  4030f0:	call   402350 <vsnprintf@plt>
  4030f5:	lea    rax,[rip+0xcd74]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4030fc:	mov    rdi,QWORD PTR [rax]
  4030ff:	lea    rsi,[rip+0x7219]        # 40a31f <rb_strcasecmp@plt+0x7dff>
  403106:	mov    edx,ebp
  403108:	mov    rcx,rbx
  40310b:	xor    eax,eax
  40310d:	call   402450 <rb_helper_write@plt>
  403112:	add    rsp,0x2d8
  403119:	pop    rbx
  40311a:	pop    rbp
  40311b:	ret    
  40311c:	nop    DWORD PTR [rax+0x0]
  403120:	push   rbp
  403121:	push   rbx
  403122:	sub    rsp,0x2d8
  403129:	mov    rbx,rdx
  40312c:	mov    rdx,rsi
  40312f:	mov    ebp,edi
  403131:	test   al,al
  403133:	je     403174 <rb_strcasecmp@plt+0xc54>
  403135:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40313b:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403141:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403147:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  403150:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403159:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403162:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40316b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  403174:	mov    QWORD PTR [rsp+0x30],rbx
  403179:	mov    QWORD PTR [rsp+0x38],rcx
  40317e:	mov    QWORD PTR [rsp+0x40],r8
  403183:	mov    QWORD PTR [rsp+0x48],r9
  403188:	lea    rax,[rsp+0x20]
  40318d:	mov    QWORD PTR [rsp+0x10],rax
  403192:	lea    rax,[rsp+0x2f0]
  40319a:	mov    QWORD PTR [rsp+0x8],rax
  40319f:	movabs rax,0x3000000010
  4031a9:	mov    QWORD PTR [rsp],rax
  4031ad:	lea    rbx,[rsp+0xd0]
  4031b5:	mov    rcx,rsp
  4031b8:	mov    esi,0x200
  4031bd:	mov    rdi,rbx
  4031c0:	call   402350 <vsnprintf@plt>
  4031c5:	lea    rax,[rip+0xcca4]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4031cc:	mov    rdi,QWORD PTR [rax]
  4031cf:	lea    rsi,[rip+0x7152]        # 40a328 <rb_strcasecmp@plt+0x7e08>
  4031d6:	mov    edx,ebp
  4031d8:	mov    rcx,rbx
  4031db:	xor    eax,eax
  4031dd:	call   402450 <rb_helper_write@plt>
  4031e2:	add    rsp,0x2d8
  4031e9:	pop    rbx
  4031ea:	pop    rbp
  4031eb:	ret    
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	push   rbp
  4031f1:	push   r14
  4031f3:	push   rbx
  4031f4:	sub    rsp,0x2d0
  4031fb:	mov    r14d,esi
  4031fe:	mov    ebp,edi
  403200:	test   al,al
  403202:	je     403243 <rb_strcasecmp@plt+0xd23>
  403204:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40320a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403210:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403216:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40321f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403228:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403231:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40323a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  403243:	mov    QWORD PTR [rsp+0x38],rcx
  403248:	mov    QWORD PTR [rsp+0x40],r8
  40324d:	mov    QWORD PTR [rsp+0x48],r9
  403252:	lea    rax,[rsp+0x20]
  403257:	mov    QWORD PTR [rsp+0x10],rax
  40325c:	lea    rax,[rsp+0x2f0]
  403264:	mov    QWORD PTR [rsp+0x8],rax
  403269:	movabs rax,0x3000000018
  403273:	mov    QWORD PTR [rsp],rax
  403277:	lea    rbx,[rsp+0xd0]
  40327f:	mov    rcx,rsp
  403282:	mov    esi,0x200
  403287:	mov    rdi,rbx
  40328a:	call   402350 <vsnprintf@plt>
  40328f:	lea    rax,[rip+0xcbda]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403296:	mov    rdi,QWORD PTR [rax]
  403299:	lea    rsi,[rip+0x7091]        # 40a331 <rb_strcasecmp@plt+0x7e11>
  4032a0:	mov    edx,ebp
  4032a2:	mov    ecx,r14d
  4032a5:	mov    r8,rbx
  4032a8:	xor    eax,eax
  4032aa:	call   402450 <rb_helper_write@plt>
  4032af:	add    rsp,0x2d0
  4032b6:	pop    rbx
  4032b7:	pop    r14
  4032b9:	pop    rbp
  4032ba:	ret    
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	push   rbp
  4032c1:	push   r14
  4032c3:	push   rbx
  4032c4:	sub    rsp,0x2d0
  4032cb:	mov    r14d,esi
  4032ce:	mov    ebp,edi
  4032d0:	test   al,al
  4032d2:	je     403313 <rb_strcasecmp@plt+0xdf3>
  4032d4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4032da:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4032e0:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4032e6:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4032ef:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4032f8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403301:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40330a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  403313:	mov    QWORD PTR [rsp+0x38],rcx
  403318:	mov    QWORD PTR [rsp+0x40],r8
  40331d:	mov    QWORD PTR [rsp+0x48],r9
  403322:	lea    rax,[rsp+0x20]
  403327:	mov    QWORD PTR [rsp+0x10],rax
  40332c:	lea    rax,[rsp+0x2f0]
  403334:	mov    QWORD PTR [rsp+0x8],rax
  403339:	movabs rax,0x3000000018
  403343:	mov    QWORD PTR [rsp],rax
  403347:	lea    rbx,[rsp+0xd0]
  40334f:	mov    rcx,rsp
  403352:	mov    esi,0x200
  403357:	mov    rdi,rbx
  40335a:	call   402350 <vsnprintf@plt>
  40335f:	lea    rax,[rip+0xcb0a]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403366:	mov    rdi,QWORD PTR [rax]
  403369:	lea    rsi,[rip+0x6fcc]        # 40a33c <rb_strcasecmp@plt+0x7e1c>
  403370:	mov    edx,ebp
  403372:	mov    ecx,r14d
  403375:	mov    r8,rbx
  403378:	xor    eax,eax
  40337a:	call   402450 <rb_helper_write@plt>
  40337f:	add    rsp,0x2d0
  403386:	pop    rbx
  403387:	pop    r14
  403389:	pop    rbp
  40338a:	ret    
  40338b:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	mov    ecx,esi
  403392:	mov    edx,edi
  403394:	lea    rax,[rip+0xcad5]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  40339b:	mov    rdi,QWORD PTR [rax]
  40339e:	lea    rsi,[rip+0x6fa2]        # 40a347 <rb_strcasecmp@plt+0x7e27>
  4033a5:	xor    eax,eax
  4033a7:	jmp    402450 <rb_helper_write@plt>
  4033ac:	nop    DWORD PTR [rax+0x0]
  4033b0:	push   rax
  4033b1:	lea    rdi,[rip+0x6fa8]        # 40a360 <rb_strcasecmp@plt+0x7e40>
  4033b8:	lea    rsi,[rip+0x61]        # 403420 <rb_strcasecmp@plt+0xf00>
  4033bf:	call   402420 <rb_dictionary_create@plt>
  4033c4:	lea    rcx,[rip+0x10d5d]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4033cb:	mov    QWORD PTR [rcx],rax
  4033ce:	lea    rdi,[rip+0x6fa0]        # 40a375 <rb_strcasecmp@plt+0x7e55>
  4033d5:	lea    rsi,[rip+0x54]        # 403430 <rb_strcasecmp@plt+0xf10>
  4033dc:	mov    ecx,0x1
  4033e1:	xor    edx,edx
  4033e3:	call   402050 <rb_event_addish@plt>
  4033e8:	mov    QWORD PTR [rip+0x10af9],rax        # 413ee8 <rb_strcasecmp@plt+0x119c8>
  4033ef:	lea    rdi,[rip+0xc722]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  4033f6:	call   403570 <rb_strcasecmp@plt+0x1050>
  4033fb:	lea    rdi,[rip+0xc9de]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  403402:	call   403570 <rb_strcasecmp@plt+0x1050>
  403407:	lea    rdi,[rip+0xc892]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  40340e:	call   403570 <rb_strcasecmp@plt+0x1050>
  403413:	lea    rdi,[rip+0xc7ce]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  40341a:	pop    rax
  40341b:	jmp    403570 <rb_strcasecmp@plt+0x1050>
  403420:	mov    rax,rsi
  403423:	sub    eax,edi
  403425:	ret    
  403426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403430:	push   rbp
  403431:	push   r15
  403433:	push   r14
  403435:	push   r13
  403437:	push   r12
  403439:	push   rbx
  40343a:	sub    rsp,0x18
  40343e:	call   402280 <rb_current_time@plt>
  403443:	mov    r15,rax
  403446:	lea    r12,[rip+0x10cdb]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40344d:	mov    rdi,QWORD PTR [r12]
  403451:	lea    rbx,[rsp+0x8]
  403456:	mov    rsi,rbx
  403459:	call   402240 <rb_dictionary_foreach_start@plt>
  40345e:	mov    rdi,QWORD PTR [r12]
  403462:	mov    rsi,rbx
  403465:	call   402140 <rb_dictionary_foreach_cur@plt>
  40346a:	test   rax,rax
  40346d:	je     40355d <rb_strcasecmp@plt+0x103d>
  403473:	mov    rbx,rax
  403476:	lea    r13,[rip+0x10cb3]        # 414130 <rb_strcasecmp@plt+0x11c10>
  40347d:	lea    r14,[rsp+0x8]
  403482:	jmp    4034b4 <rb_strcasecmp@plt+0xf94>
  403484:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40348e:	xchg   ax,ax
  403490:	mov    rdi,QWORD PTR [r12]
  403494:	mov    rsi,r14
  403497:	call   4021d0 <rb_dictionary_foreach_next@plt>
  40349c:	mov    rdi,QWORD PTR [r12]
  4034a0:	mov    rsi,r14
  4034a3:	call   402140 <rb_dictionary_foreach_cur@plt>
  4034a8:	mov    rbx,rax
  4034ab:	test   rax,rax
  4034ae:	je     40355d <rb_strcasecmp@plt+0x103d>
  4034b4:	mov    eax,DWORD PTR [rbx+0x1cc]
  4034ba:	inc    eax
  4034bc:	mov    DWORD PTR [rbx+0x1cc],eax
  4034c2:	mov    rbp,QWORD PTR [r13+0x0]
  4034c6:	test   rbp,rbp
  4034c9:	jne    4034d9 <rb_strcasecmp@plt+0xfb9>
  4034cb:	jmp    403526 <rb_strcasecmp@plt+0x1006>
  4034cd:	nop    DWORD PTR [rax]
  4034d0:	mov    rbp,QWORD PTR [rbp+0x10]
  4034d4:	test   rbp,rbp
  4034d7:	je     403520 <rb_strcasecmp@plt+0x1000>
  4034d9:	mov    rax,QWORD PTR [rbp+0x0]
  4034dd:	mov    ecx,DWORD PTR [rax+0x18]
  4034e0:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4034e7:	shl    rcx,0x5
  4034eb:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  4034f0:	jne    4034d0 <rb_strcasecmp@plt+0xfb0>
  4034f2:	mov    rcx,QWORD PTR [rdx+rcx*1+0x8]
  4034f7:	cmp    rcx,r15
  4034fa:	jge    4034d0 <rb_strcasecmp@plt+0xfb0>
  4034fc:	test   rcx,rcx
  4034ff:	jle    4034d0 <rb_strcasecmp@plt+0xfb0>
  403501:	mov    rax,QWORD PTR [rax+0x50]
  403505:	test   rax,rax
  403508:	je     4034d0 <rb_strcasecmp@plt+0xfb0>
  40350a:	mov    rdi,rbx
  40350d:	call   rax
  40350f:	jmp    4034d0 <rb_strcasecmp@plt+0xfb0>
  403511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40351b:	nop    DWORD PTR [rax+rax*1+0x0]
  403520:	mov    eax,DWORD PTR [rbx+0x1cc]
  403526:	dec    eax
  403528:	mov    DWORD PTR [rbx+0x1cc],eax
  40352e:	jne    403490 <rb_strcasecmp@plt+0xf70>
  403534:	mov    rdi,QWORD PTR [r12]
  403538:	mov    esi,DWORD PTR [rbx]
  40353a:	call   402290 <rb_dictionary_delete@plt>
  40353f:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403546:	test   rdi,rdi
  403549:	je     403550 <rb_strcasecmp@plt+0x1030>
  40354b:	call   4021f0 <free@plt>
  403550:	mov    rdi,rbx
  403553:	call   4021f0 <free@plt>
  403558:	jmp    403490 <rb_strcasecmp@plt+0xf70>
  40355d:	add    rsp,0x18
  403561:	pop    rbx
  403562:	pop    r12
  403564:	pop    r13
  403566:	pop    r14
  403568:	pop    r15
  40356a:	pop    rbp
  40356b:	ret    
  40356c:	nop    DWORD PTR [rax+0x0]
  403570:	push   r15
  403572:	push   r14
  403574:	push   rbx
  403575:	mov    r14,rdi
  403578:	cmp    QWORD PTR [rip+0x10980],0x0        # 413f00 <rb_strcasecmp@plt+0x119e0>
  403580:	je     4035b2 <rb_strcasecmp@plt+0x1092>
  403582:	mov    rdi,QWORD PTR [rip+0x10967]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403589:	mov    eax,DWORD PTR [rdi]
  40358b:	mov    DWORD PTR [r14+0x18],eax
  40358f:	test   rdi,rdi
  403592:	je     4036bf <rb_strcasecmp@plt+0x119f>
  403598:	mov    rdx,QWORD PTR [rdi+0x8]
  40359c:	mov    rcx,QWORD PTR [rdi+0x10]
  4035a0:	lea    rax,[rdi+0x8]
  4035a4:	test   rcx,rcx
  4035a7:	je     4035de <rb_strcasecmp@plt+0x10be>
  4035a9:	mov    QWORD PTR [rcx+0x8],rdx
  4035ad:	mov    rdx,QWORD PTR [rax]
  4035b0:	jmp    4035e5 <rb_strcasecmp@plt+0x10c5>
  4035b2:	mov    eax,DWORD PTR [rip+0x10950]        # 413f08 <rb_strcasecmp@plt+0x119e8>
  4035b8:	cmp    eax,0x20
  4035bb:	je     4035c6 <rb_strcasecmp@plt+0x10a6>
  4035bd:	cmp    eax,0xffffffff
  4035c0:	jne    4036a7 <rb_strcasecmp@plt+0x1187>
  4035c6:	lea    rsi,[rip+0x6e0a]        # 40a3d7 <rb_strcasecmp@plt+0x7eb7>
  4035cd:	mov    edi,0x57
  4035d2:	xor    eax,eax
  4035d4:	pop    rbx
  4035d5:	pop    r14
  4035d7:	pop    r15
  4035d9:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  4035de:	mov    QWORD PTR [rip+0x10913],rdx        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  4035e5:	test   rdx,rdx
  4035e8:	lea    rdx,[rdx+0x10]
  4035ec:	lea    rsi,[rip+0x108fd]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  4035f3:	cmove  rdx,rsi
  4035f7:	cmove  rdi,rcx
  4035fb:	mov    QWORD PTR [rdx],rcx
  4035fe:	vxorps xmm0,xmm0,xmm0
  403602:	vmovups XMMWORD PTR [rax],xmm0
  403606:	dec    QWORD PTR [rip+0x108f3]        # 413f00 <rb_strcasecmp@plt+0x119e0>
  40360d:	call   4022c0 <rb_free_rb_dlink_node@plt>
  403612:	mov    rbx,QWORD PTR [r14+0x70]
  403616:	test   rbx,rbx
  403619:	je     403648 <rb_strcasecmp@plt+0x1128>
  40361b:	mov    rsi,QWORD PTR [rbx]
  40361e:	test   rsi,rsi
  403621:	je     403648 <rb_strcasecmp@plt+0x1128>
  403623:	lea    r15,[rip+0x10af6]        # 414120 <rb_strcasecmp@plt+0x11c00>
  40362a:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	mov    rdi,QWORD PTR [r15]
  403633:	mov    rdx,rbx
  403636:	call   4023a0 <rb_dictionary_add@plt>
  40363b:	mov    rsi,QWORD PTR [rbx+0x18]
  40363f:	add    rbx,0x18
  403643:	test   rsi,rsi
  403646:	jne    403630 <rb_strcasecmp@plt+0x1110>
  403648:	movzx  eax,BYTE PTR [r14+0x60]
  40364d:	test   rax,rax
  403650:	je     403661 <rb_strcasecmp@plt+0x1141>
  403652:	mov    rcx,QWORD PTR [r14+0x68]
  403656:	lea    rdx,[rip+0xb443]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  40365d:	mov    QWORD PTR [rdx+rax*8],rcx
  403661:	mov    rax,QWORD PTR [r14+0x30]
  403665:	test   rax,rax
  403668:	je     40366c <rb_strcasecmp@plt+0x114c>
  40366a:	call   rax
  40366c:	mov    QWORD PTR [r14],r14
  40366f:	mov    QWORD PTR [r14+0x8],0x0
  403677:	lea    rax,[rip+0x10ab2]        # 414130 <rb_strcasecmp@plt+0x11c10>
  40367e:	mov    rcx,QWORD PTR [rax]
  403681:	mov    QWORD PTR [r14+0x10],rcx
  403685:	test   rcx,rcx
  403688:	je     403693 <rb_strcasecmp@plt+0x1173>
  40368a:	add    rcx,0x8
  40368e:	mov    QWORD PTR [rcx],r14
  403691:	jmp    40369a <rb_strcasecmp@plt+0x117a>
  403693:	cmp    QWORD PTR [rax+0x8],0x0
  403698:	je     4036b9 <rb_strcasecmp@plt+0x1199>
  40369a:	mov    QWORD PTR [rax],r14
  40369d:	inc    QWORD PTR [rax+0x10]
  4036a1:	pop    rbx
  4036a2:	pop    r14
  4036a4:	pop    r15
  4036a6:	ret    
  4036a7:	lea    ecx,[rax+0x1]
  4036aa:	mov    DWORD PTR [rip+0x10858],ecx        # 413f08 <rb_strcasecmp@plt+0x119e8>
  4036b0:	mov    DWORD PTR [r14+0x18],eax
  4036b4:	jmp    403612 <rb_strcasecmp@plt+0x10f2>
  4036b9:	lea    rcx,[rax+0x8]
  4036bd:	jmp    40368e <rb_strcasecmp@plt+0x116e>
  4036bf:	lea    rdi,[rip+0x6e37]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  4036c6:	lea    rsi,[rip+0x6e3a]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  4036cd:	lea    rcx,[rip+0x6e4f]        # 40a523 <rb_strcasecmp@plt+0x8003>
  4036d4:	mov    edx,0xeb
  4036d9:	call   4020f0 <__assert_fail@plt>
  4036de:	xchg   ax,ax
  4036e0:	push   r15
  4036e2:	push   r14
  4036e4:	push   r13
  4036e6:	push   r12
  4036e8:	push   rbx
  4036e9:	sub    rsp,0x10
  4036ed:	lea    r13,[rip+0x10a34]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4036f4:	mov    rdi,QWORD PTR [r13+0x0]
  4036f8:	mov    rbx,rsp
  4036fb:	mov    rsi,rbx
  4036fe:	call   402240 <rb_dictionary_foreach_start@plt>
  403703:	mov    rdi,QWORD PTR [r13+0x0]
  403707:	mov    rsi,rbx
  40370a:	call   402140 <rb_dictionary_foreach_cur@plt>
  40370f:	test   rax,rax
  403712:	je     403799 <rb_strcasecmp@plt+0x1279>
  403718:	mov    rbx,rax
  40371b:	lea    r14,[rip+0x6c6a]        # 40a38c <rb_strcasecmp@plt+0x7e6c>
  403722:	lea    r15,[rip+0x6c6b]        # 40a394 <rb_strcasecmp@plt+0x7e74>
  403729:	mov    r12,rsp
  40372c:	jmp    403750 <rb_strcasecmp@plt+0x1230>
  40372e:	xchg   ax,ax
  403730:	mov    rdi,QWORD PTR [r13+0x0]
  403734:	mov    rsi,r12
  403737:	call   4021d0 <rb_dictionary_foreach_next@plt>
  40373c:	mov    rdi,QWORD PTR [r13+0x0]
  403740:	mov    rsi,r12
  403743:	call   402140 <rb_dictionary_foreach_cur@plt>
  403748:	mov    rbx,rax
  40374b:	test   rax,rax
  40374e:	je     403799 <rb_strcasecmp@plt+0x1279>
  403750:	inc    DWORD PTR [rbx+0x1cc]
  403756:	mov    rdi,rbx
  403759:	mov    esi,0xffffffff
  40375e:	mov    rdx,r14
  403761:	mov    rcx,r15
  403764:	xor    eax,eax
  403766:	call   403830 <rb_strcasecmp@plt+0x1310>
  40376b:	dec    DWORD PTR [rbx+0x1cc]
  403771:	jne    403730 <rb_strcasecmp@plt+0x1210>
  403773:	mov    rdi,QWORD PTR [r13+0x0]
  403777:	mov    esi,DWORD PTR [rbx]
  403779:	call   402290 <rb_dictionary_delete@plt>
  40377e:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403785:	test   rdi,rdi
  403788:	je     40378f <rb_strcasecmp@plt+0x126f>
  40378a:	call   4021f0 <free@plt>
  40378f:	mov    rdi,rbx
  403792:	call   4021f0 <free@plt>
  403797:	jmp    403730 <rb_strcasecmp@plt+0x1210>
  403799:	lea    r14,[rip+0x10990]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4037a0:	mov    rbx,QWORD PTR [r14]
  4037a3:	test   rbx,rbx
  4037a6:	jne    4037d6 <rb_strcasecmp@plt+0x12b6>
  4037a8:	jmp    403802 <rb_strcasecmp@plt+0x12e2>
  4037aa:	nop    WORD PTR [rax+rax*1+0x0]
  4037b0:	mov    QWORD PTR [r14+0x8],rcx
  4037b4:	test   rcx,rcx
  4037b7:	lea    rcx,[rcx+0x10]
  4037bb:	cmove  rcx,r14
  4037bf:	mov    QWORD PTR [rcx],rax
  4037c2:	vxorps xmm0,xmm0,xmm0
  4037c6:	vmovups XMMWORD PTR [rbx],xmm0
  4037ca:	dec    QWORD PTR [r14+0x10]
  4037ce:	mov    rbx,r15
  4037d1:	test   r15,r15
  4037d4:	je     403802 <rb_strcasecmp@plt+0x12e2>
  4037d6:	mov    rax,QWORD PTR [rbx]
  4037d9:	mov    r15,QWORD PTR [rbx+0x10]
  4037dd:	mov    rax,QWORD PTR [rax+0x38]
  4037e1:	test   rax,rax
  4037e4:	je     4037e8 <rb_strcasecmp@plt+0x12c8>
  4037e6:	call   rax
  4037e8:	mov    rcx,QWORD PTR [rbx+0x8]
  4037ec:	mov    rax,QWORD PTR [rbx+0x10]
  4037f0:	add    rbx,0x8
  4037f4:	test   rax,rax
  4037f7:	je     4037b0 <rb_strcasecmp@plt+0x1290>
  4037f9:	mov    QWORD PTR [rax+0x8],rcx
  4037fd:	mov    rcx,QWORD PTR [rbx]
  403800:	jmp    4037b4 <rb_strcasecmp@plt+0x1294>
  403802:	mov    rdi,QWORD PTR [r13+0x0]
  403806:	xor    esi,esi
  403808:	xor    edx,edx
  40380a:	call   402310 <rb_dictionary_destroy@plt>
  40380f:	mov    rdi,QWORD PTR [rip+0x106d2]        # 413ee8 <rb_strcasecmp@plt+0x119c8>
  403816:	call   4020a0 <rb_event_delete@plt>
  40381b:	add    rsp,0x10
  40381f:	pop    rbx
  403820:	pop    r12
  403822:	pop    r13
  403824:	pop    r14
  403826:	pop    r15
  403828:	ret    
  403829:	nop    DWORD PTR [rax+0x0]
  403830:	push   rbp
  403831:	push   r15
  403833:	push   r14
  403835:	push   r12
  403837:	push   rbx
  403838:	sub    rsp,0x2d0
  40383f:	mov    r15,rdx
  403842:	mov    ebp,esi
  403844:	mov    rbx,rdi
  403847:	test   al,al
  403849:	je     40388a <rb_strcasecmp@plt+0x136a>
  40384b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  403851:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403857:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40385d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  403866:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40386f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403878:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  403881:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40388a:	mov    QWORD PTR [rsp+0x40],r8
  40388f:	mov    QWORD PTR [rsp+0x48],r9
  403894:	lea    rax,[rsp+0x20]
  403899:	mov    QWORD PTR [rsp+0x10],rax
  40389e:	lea    rax,[rsp+0x300]
  4038a6:	mov    QWORD PTR [rsp+0x8],rax
  4038ab:	movabs rax,0x3000000020
  4038b5:	mov    QWORD PTR [rsp],rax
  4038b9:	lea    r14,[rsp+0xd0]
  4038c1:	mov    rax,rsp
  4038c4:	mov    esi,0x200
  4038c9:	mov    rdi,r14
  4038cc:	mov    rdx,rcx
  4038cf:	mov    rcx,rax
  4038d2:	call   402350 <vsnprintf@plt>
  4038d7:	lea    rax,[rip+0xc592]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4038de:	mov    rdi,QWORD PTR [rax]
  4038e1:	mov    edx,DWORD PTR [rbx]
  4038e3:	cmp    ebp,0xffffffff
  4038e6:	je     403957 <rb_strcasecmp@plt+0x1437>
  4038e8:	mov    rax,QWORD PTR [rbx+0x1d0]
  4038ef:	mov    r12d,ebp
  4038f2:	shl    r12,0x5
  4038f6:	mov    rax,QWORD PTR [rax+r12*1]
  4038fa:	movsx  ecx,BYTE PTR [rax+0x28]
  4038fe:	lea    r8,[rbx+0x1b8]
  403905:	lea    r9,[rbx+0x178]
  40390c:	test   r15,r15
  40390f:	lea    rbp,[rip+0x69fa]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  403916:	cmovne rbp,r15
  40391a:	lea    rsi,[rip+0x6ae4]        # 40a405 <rb_strcasecmp@plt+0x7ee5>
  403921:	mov    eax,0x0
  403926:	push   r14
  403928:	push   rbp
  403929:	call   402450 <rb_helper_write@plt>
  40392e:	add    rsp,0x10
  403932:	mov    rax,QWORD PTR [rbx+0x1d0]
  403939:	mov    DWORD PTR [rax+r12*1+0x18],0x2
  403942:	dec    DWORD PTR [rbx+0x1c8]
  403948:	cmp    BYTE PTR [rbx+0x1c4],0x0
  40394f:	jne    4039f2 <rb_strcasecmp@plt+0x14d2>
  403955:	jmp    403999 <rb_strcasecmp@plt+0x1479>
  403957:	lea    r8,[rbx+0x1b8]
  40395e:	lea    r9,[rbx+0x178]
  403965:	test   r15,r15
  403968:	lea    rbp,[rip+0x69a1]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  40396f:	cmovne rbp,r15
  403973:	lea    rsi,[rip+0x6a8b]        # 40a405 <rb_strcasecmp@plt+0x7ee5>
  40397a:	mov    ecx,0x2a
  40397f:	mov    eax,0x0
  403984:	push   r14
  403986:	push   rbp
  403987:	call   402450 <rb_helper_write@plt>
  40398c:	add    rsp,0x10
  403990:	cmp    BYTE PTR [rbx+0x1c4],0x0
  403997:	jne    4039f2 <rb_strcasecmp@plt+0x14d2>
  403999:	mov    BYTE PTR [rbx+0x1c4],0x1
  4039a0:	cmp    DWORD PTR [rbx+0x1c8],0x0
  4039a7:	je     4039f2 <rb_strcasecmp@plt+0x14d2>
  4039a9:	lea    rax,[rip+0x10780]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4039b0:	mov    rbp,QWORD PTR [rax]
  4039b3:	test   rbp,rbp
  4039b6:	jne    4039c9 <rb_strcasecmp@plt+0x14a9>
  4039b8:	jmp    4039f2 <rb_strcasecmp@plt+0x14d2>
  4039ba:	nop    WORD PTR [rax+rax*1+0x0]
  4039c0:	mov    rbp,QWORD PTR [rbp+0x10]
  4039c4:	test   rbp,rbp
  4039c7:	je     4039f2 <rb_strcasecmp@plt+0x14d2>
  4039c9:	mov    rcx,QWORD PTR [rbp+0x0]
  4039cd:	mov    rax,QWORD PTR [rcx+0x48]
  4039d1:	test   rax,rax
  4039d4:	je     4039c0 <rb_strcasecmp@plt+0x14a0>
  4039d6:	mov    ecx,DWORD PTR [rcx+0x18]
  4039d9:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4039e0:	shl    rcx,0x5
  4039e4:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  4039e9:	jne    4039c0 <rb_strcasecmp@plt+0x14a0>
  4039eb:	mov    rdi,rbx
  4039ee:	call   rax
  4039f0:	jmp    4039c0 <rb_strcasecmp@plt+0x14a0>
  4039f2:	add    rsp,0x2d0
  4039f9:	pop    rbx
  4039fa:	pop    r12
  4039fc:	pop    r14
  4039fe:	pop    r15
  403a00:	pop    rbp
  403a01:	ret    
  403a02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a0c:	nop    DWORD PTR [rax+0x0]
  403a10:	push   r15
  403a12:	push   r14
  403a14:	push   rbx
  403a15:	mov    r14,rdi
  403a18:	mov    rbx,QWORD PTR [rdi+0x70]
  403a1c:	test   rbx,rbx
  403a1f:	je     403a54 <rb_strcasecmp@plt+0x1534>
  403a21:	mov    rsi,QWORD PTR [rbx]
  403a24:	test   rsi,rsi
  403a27:	je     403a54 <rb_strcasecmp@plt+0x1534>
  403a29:	add    rbx,0x18
  403a2d:	lea    r15,[rip+0x106ec]        # 414120 <rb_strcasecmp@plt+0x11c00>
  403a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a3e:	xchg   ax,ax
  403a40:	mov    rdi,QWORD PTR [r15]
  403a43:	call   402290 <rb_dictionary_delete@plt>
  403a48:	mov    rsi,QWORD PTR [rbx]
  403a4b:	add    rbx,0x18
  403a4f:	test   rsi,rsi
  403a52:	jne    403a40 <rb_strcasecmp@plt+0x1520>
  403a54:	movzx  eax,BYTE PTR [r14+0x60]
  403a59:	test   rax,rax
  403a5c:	je     403a6d <rb_strcasecmp@plt+0x154d>
  403a5e:	lea    rcx,[rip+0xb03b]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  403a65:	mov    QWORD PTR [rcx+rax*8],0x0
  403a6d:	mov    rax,QWORD PTR [r14+0x38]
  403a71:	test   rax,rax
  403a74:	je     403a78 <rb_strcasecmp@plt+0x1558>
  403a76:	call   rax
  403a78:	mov    rdx,QWORD PTR [r14+0x8]
  403a7c:	mov    rcx,QWORD PTR [r14+0x10]
  403a80:	lea    rax,[r14+0x8]
  403a84:	test   rcx,rcx
  403a87:	je     403a92 <rb_strcasecmp@plt+0x1572>
  403a89:	mov    QWORD PTR [rcx+0x8],rdx
  403a8d:	mov    rdx,QWORD PTR [rax]
  403a90:	jmp    403a9d <rb_strcasecmp@plt+0x157d>
  403a92:	lea    rsi,[rip+0x10697]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403a99:	mov    QWORD PTR [rsi+0x8],rdx
  403a9d:	test   rdx,rdx
  403aa0:	lea    rdx,[rdx+0x10]
  403aa4:	lea    rsi,[rip+0x10685]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403aab:	cmove  rdx,rsi
  403aaf:	mov    QWORD PTR [rdx],rcx
  403ab2:	vxorps xmm0,xmm0,xmm0
  403ab6:	vmovups XMMWORD PTR [rax],xmm0
  403aba:	dec    QWORD PTR [rsi+0x10]
  403abe:	mov    ebx,DWORD PTR [r14+0x18]
  403ac2:	call   4024b0 <rb_make_rb_dlink_node@plt>
  403ac7:	test   rbx,rbx
  403aca:	je     403b1c <rb_strcasecmp@plt+0x15fc>
  403acc:	test   rax,rax
  403acf:	je     403b3b <rb_strcasecmp@plt+0x161b>
  403ad1:	mov    QWORD PTR [rax],rbx
  403ad4:	mov    QWORD PTR [rax+0x8],0x0
  403adc:	mov    rcx,QWORD PTR [rip+0x1040d]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403ae3:	mov    QWORD PTR [rax+0x10],rcx
  403ae7:	test   rcx,rcx
  403aea:	je     403af5 <rb_strcasecmp@plt+0x15d5>
  403aec:	add    rcx,0x8
  403af0:	mov    QWORD PTR [rcx],rax
  403af3:	jmp    403aff <rb_strcasecmp@plt+0x15df>
  403af5:	cmp    QWORD PTR [rip+0x103fb],0x0        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  403afd:	je     403b13 <rb_strcasecmp@plt+0x15f3>
  403aff:	mov    QWORD PTR [rip+0x103ea],rax        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403b06:	inc    QWORD PTR [rip+0x103f3]        # 413f00 <rb_strcasecmp@plt+0x119e0>
  403b0d:	pop    rbx
  403b0e:	pop    r14
  403b10:	pop    r15
  403b12:	ret    
  403b13:	lea    rcx,[rip+0x103de]        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  403b1a:	jmp    403af0 <rb_strcasecmp@plt+0x15d0>
  403b1c:	lea    rdi,[rip+0x6a36]        # 40a559 <rb_strcasecmp@plt+0x8039>
  403b23:	lea    rsi,[rip+0x69dd]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  403b2a:	lea    rcx,[rip+0x6a35]        # 40a566 <rb_strcasecmp@plt+0x8046>
  403b31:	mov    edx,0x8f
  403b36:	call   4020f0 <__assert_fail@plt>
  403b3b:	lea    rdi,[rip+0x69bb]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  403b42:	lea    rsi,[rip+0x69be]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  403b49:	lea    rcx,[rip+0x6a16]        # 40a566 <rb_strcasecmp@plt+0x8046>
  403b50:	mov    edx,0x90
  403b55:	call   4020f0 <__assert_fail@plt>
  403b5a:	nop    WORD PTR [rax+rax*1+0x0]
  403b60:	push   rbx
  403b61:	mov    rbx,rdi
  403b64:	lea    rax,[rip+0x105bd]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403b6b:	mov    rdi,QWORD PTR [rax]
  403b6e:	mov    esi,DWORD PTR [rbx]
  403b70:	call   402290 <rb_dictionary_delete@plt>
  403b75:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403b7c:	test   rdi,rdi
  403b7f:	je     403b86 <rb_strcasecmp@plt+0x1666>
  403b81:	call   4021f0 <free@plt>
  403b86:	mov    rdi,rbx
  403b89:	pop    rbx
  403b8a:	jmp    4021f0 <free@plt>
  403b8f:	nop
  403b90:	push   r14
  403b92:	push   rbx
  403b93:	push   rax
  403b94:	cmp    BYTE PTR [rdi+0x1c4],0x0
  403b9b:	jne    403c01 <rb_strcasecmp@plt+0x16e1>
  403b9d:	mov    r14,rdi
  403ba0:	mov    BYTE PTR [rdi+0x1c4],0x1
  403ba7:	cmp    DWORD PTR [rdi+0x1c8],0x0
  403bae:	je     403c01 <rb_strcasecmp@plt+0x16e1>
  403bb0:	lea    rax,[rip+0x10579]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403bb7:	mov    rbx,QWORD PTR [rax]
  403bba:	test   rbx,rbx
  403bbd:	jne    403bd9 <rb_strcasecmp@plt+0x16b9>
  403bbf:	jmp    403c01 <rb_strcasecmp@plt+0x16e1>
  403bc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403bd0:	mov    rbx,QWORD PTR [rbx+0x10]
  403bd4:	test   rbx,rbx
  403bd7:	je     403c01 <rb_strcasecmp@plt+0x16e1>
  403bd9:	mov    rcx,QWORD PTR [rbx]
  403bdc:	mov    rax,QWORD PTR [rcx+0x48]
  403be0:	test   rax,rax
  403be3:	je     403bd0 <rb_strcasecmp@plt+0x16b0>
  403be5:	mov    ecx,DWORD PTR [rcx+0x18]
  403be8:	mov    rdx,QWORD PTR [r14+0x1d0]
  403bef:	shl    rcx,0x5
  403bf3:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403bf8:	jne    403bd0 <rb_strcasecmp@plt+0x16b0>
  403bfa:	mov    rdi,r14
  403bfd:	call   rax
  403bff:	jmp    403bd0 <rb_strcasecmp@plt+0x16b0>
  403c01:	add    rsp,0x8
  403c05:	pop    rbx
  403c06:	pop    r14
  403c08:	ret    
  403c09:	nop    DWORD PTR [rax+0x0]
  403c10:	push   rbp
  403c11:	push   r14
  403c13:	push   rbx
  403c14:	mov    r14d,esi
  403c17:	mov    rbx,rdi
  403c1a:	mov    rax,QWORD PTR [rdi+0x1d0]
  403c21:	mov    ecx,esi
  403c23:	shl    rcx,0x5
  403c27:	mov    DWORD PTR [rax+rcx*1+0x18],0x2
  403c2f:	dec    DWORD PTR [rdi+0x1c8]
  403c35:	jne    403c40 <rb_strcasecmp@plt+0x1720>
  403c37:	cmp    BYTE PTR [rbx+0x1c3],0x0
  403c3e:	je     403c99 <rb_strcasecmp@plt+0x1779>
  403c40:	lea    rax,[rip+0x104e9]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403c47:	mov    rbp,QWORD PTR [rax]
  403c4a:	test   rbp,rbp
  403c4d:	jne    403c6d <rb_strcasecmp@plt+0x174d>
  403c4f:	jmp    403d22 <rb_strcasecmp@plt+0x1802>
  403c54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c5e:	xchg   ax,ax
  403c60:	mov    rbp,QWORD PTR [rbp+0x10]
  403c64:	test   rbp,rbp
  403c67:	je     403d22 <rb_strcasecmp@plt+0x1802>
  403c6d:	mov    rcx,QWORD PTR [rbp+0x0]
  403c71:	mov    rax,QWORD PTR [rcx+0x58]
  403c75:	test   rax,rax
  403c78:	je     403c60 <rb_strcasecmp@plt+0x1740>
  403c7a:	mov    ecx,DWORD PTR [rcx+0x18]
  403c7d:	mov    rdx,QWORD PTR [rbx+0x1d0]
  403c84:	shl    rcx,0x5
  403c88:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403c8d:	jne    403c60 <rb_strcasecmp@plt+0x1740>
  403c8f:	mov    rdi,rbx
  403c92:	mov    esi,r14d
  403c95:	call   rax
  403c97:	jmp    403c60 <rb_strcasecmp@plt+0x1740>
  403c99:	lea    rax,[rip+0xc1d0]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403ca0:	mov    rdi,QWORD PTR [rax]
  403ca3:	mov    edx,DWORD PTR [rbx]
  403ca5:	lea    rcx,[rbx+0x1b8]
  403cac:	lea    r8,[rbx+0x178]
  403cb3:	lea    rsi,[rip+0x6760]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  403cba:	xor    eax,eax
  403cbc:	call   402450 <rb_helper_write@plt>
  403cc1:	cmp    BYTE PTR [rbx+0x1c4],0x0
  403cc8:	jne    403d22 <rb_strcasecmp@plt+0x1802>
  403cca:	mov    BYTE PTR [rbx+0x1c4],0x1
  403cd1:	cmp    DWORD PTR [rbx+0x1c8],0x0
  403cd8:	je     403d22 <rb_strcasecmp@plt+0x1802>
  403cda:	lea    rax,[rip+0x1044f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403ce1:	mov    rbp,QWORD PTR [rax]
  403ce4:	test   rbp,rbp
  403ce7:	jne    403cf9 <rb_strcasecmp@plt+0x17d9>
  403ce9:	jmp    403d22 <rb_strcasecmp@plt+0x1802>
  403ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  403cf0:	mov    rbp,QWORD PTR [rbp+0x10]
  403cf4:	test   rbp,rbp
  403cf7:	je     403d22 <rb_strcasecmp@plt+0x1802>
  403cf9:	mov    rcx,QWORD PTR [rbp+0x0]
  403cfd:	mov    rax,QWORD PTR [rcx+0x48]
  403d01:	test   rax,rax
  403d04:	je     403cf0 <rb_strcasecmp@plt+0x17d0>
  403d06:	mov    ecx,DWORD PTR [rcx+0x18]
  403d09:	mov    rdx,QWORD PTR [rbx+0x1d0]
  403d10:	shl    rcx,0x5
  403d14:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403d19:	jne    403cf0 <rb_strcasecmp@plt+0x17d0>
  403d1b:	mov    rdi,rbx
  403d1e:	call   rax
  403d20:	jmp    403cf0 <rb_strcasecmp@plt+0x17d0>
  403d22:	pop    rbx
  403d23:	pop    r14
  403d25:	pop    rbp
  403d26:	ret    
  403d27:	nop    WORD PTR [rax+rax*1+0x0]
  403d30:	push   r14
  403d32:	push   rbx
  403d33:	push   rax
  403d34:	mov    r14,rdi
  403d37:	lea    rax,[rip+0xc132]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403d3e:	mov    rdi,QWORD PTR [rax]
  403d41:	mov    edx,DWORD PTR [r14]
  403d44:	lea    rcx,[r14+0x1b8]
  403d4b:	lea    r8,[r14+0x178]
  403d52:	lea    rsi,[rip+0x66c1]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  403d59:	xor    eax,eax
  403d5b:	call   402450 <rb_helper_write@plt>
  403d60:	cmp    BYTE PTR [r14+0x1c4],0x0
  403d68:	jne    403dc1 <rb_strcasecmp@plt+0x18a1>
  403d6a:	mov    BYTE PTR [r14+0x1c4],0x1
  403d72:	cmp    DWORD PTR [r14+0x1c8],0x0
  403d7a:	je     403dc1 <rb_strcasecmp@plt+0x18a1>
  403d7c:	lea    rax,[rip+0x103ad]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403d83:	mov    rbx,QWORD PTR [rax]
  403d86:	test   rbx,rbx
  403d89:	jne    403d99 <rb_strcasecmp@plt+0x1879>
  403d8b:	jmp    403dc1 <rb_strcasecmp@plt+0x18a1>
  403d8d:	nop    DWORD PTR [rax]
  403d90:	mov    rbx,QWORD PTR [rbx+0x10]
  403d94:	test   rbx,rbx
  403d97:	je     403dc1 <rb_strcasecmp@plt+0x18a1>
  403d99:	mov    rcx,QWORD PTR [rbx]
  403d9c:	mov    rax,QWORD PTR [rcx+0x48]
  403da0:	test   rax,rax
  403da3:	je     403d90 <rb_strcasecmp@plt+0x1870>
  403da5:	mov    ecx,DWORD PTR [rcx+0x18]
  403da8:	mov    rdx,QWORD PTR [r14+0x1d0]
  403daf:	shl    rcx,0x5
  403db3:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403db8:	jne    403d90 <rb_strcasecmp@plt+0x1870>
  403dba:	mov    rdi,r14
  403dbd:	call   rax
  403dbf:	jmp    403d90 <rb_strcasecmp@plt+0x1870>
  403dc1:	add    rsp,0x8
  403dc5:	pop    rbx
  403dc6:	pop    r14
  403dc8:	ret    
  403dc9:	nop    DWORD PTR [rax+0x0]
  403dd0:	push   rbp
  403dd1:	push   r15
  403dd3:	push   r14
  403dd5:	push   r13
  403dd7:	push   r12
  403dd9:	push   rbx
  403dda:	sub    rsp,0x18
  403dde:	mov    edx,edi
  403de0:	cmp    edi,0x5
  403de3:	jle    4040bb <rb_strcasecmp@plt+0x1b9b>
  403de9:	mov    rbp,QWORD PTR [rsi+0x8]
  403ded:	mov    r12,QWORD PTR [rsi+0x10]
  403df1:	mov    rax,QWORD PTR [rsi+0x18]
  403df5:	mov    QWORD PTR [rsp+0x10],rax
  403dfa:	mov    r14,QWORD PTR [rsi+0x20]
  403dfe:	mov    rbx,QWORD PTR [rsi+0x28]
  403e02:	cmp    edx,0x6
  403e05:	jne    403e10 <rb_strcasecmp@plt+0x18f0>
  403e07:	lea    r15,[rip+0x67cf]        # 40a5dd <rb_strcasecmp@plt+0x80bd>
  403e0e:	jmp    403e14 <rb_strcasecmp@plt+0x18f4>
  403e10:	mov    r15,QWORD PTR [rsi+0x30]
  403e14:	mov    rdi,rbp
  403e17:	xor    esi,esi
  403e19:	mov    edx,0x10
  403e1e:	call   402490 <strtoull@plt>
  403e23:	mov    r13,rax
  403e26:	dec    rax
  403e29:	mov    ecx,0xfffffffe
  403e2e:	cmp    rax,rcx
  403e31:	ja     40407a <rb_strcasecmp@plt+0x1b5a>
  403e37:	mov    QWORD PTR [rsp+0x8],rbx
  403e3c:	mov    edi,0x1
  403e41:	mov    esi,0x1d8
  403e46:	call   402440 <calloc@plt>
  403e4b:	test   rax,rax
  403e4e:	je     4040d8 <rb_strcasecmp@plt+0x1bb8>
  403e54:	mov    rbx,rax
  403e57:	mov    DWORD PTR [rax+0x1cc],0x1
  403e61:	mov    DWORD PTR [rax],r13d
  403e64:	lea    rax,[rip+0x102bd]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403e6b:	mov    rdi,QWORD PTR [rax]
  403e6e:	mov    esi,r13d
  403e71:	call   402400 <rb_dictionary_find@plt>
  403e76:	test   rax,rax
  403e79:	jne    4040dd <rb_strcasecmp@plt+0x1bbd>
  403e7f:	lea    r13,[rip+0x102a2]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403e86:	mov    rdi,QWORD PTR [r13+0x0]
  403e8a:	mov    esi,DWORD PTR [rbx]
  403e8c:	mov    rdx,rbx
  403e8f:	call   4023a0 <rb_dictionary_add@plt>
  403e94:	mov    rdi,r15
  403e97:	xor    esi,esi
  403e99:	mov    edx,0x10
  403e9e:	call   402490 <strtoull@plt>
  403ea3:	mov    DWORD PTR [rbx+0x4],eax
  403ea6:	lea    rdi,[rbx+0x8]
  403eaa:	mov    edx,0x36
  403eaf:	mov    rsi,r12
  403eb2:	call   4021c0 <rb_strlcpy@plt>
  403eb7:	mov    rdi,QWORD PTR [rsp+0x10]
  403ebc:	xor    esi,esi
  403ebe:	mov    edx,0xa
  403ec3:	call   4022f0 <strtol@plt>
  403ec8:	mov    WORD PTR [rbx+0x3e],ax
  403ecc:	lea    rsi,[rbx+0x40]
  403ed0:	mov    rdi,r12
  403ed3:	call   402260 <rb_inet_pton_sock@plt>
  403ed8:	movzx  eax,WORD PTR [rbx+0x3e]
  403edc:	movbe  WORD PTR [rbx+0x42],ax
  403ee2:	lea    rdi,[rbx+0xc0]
  403ee9:	mov    edx,0x36
  403eee:	mov    rsi,r14
  403ef1:	call   4021c0 <rb_strlcpy@plt>
  403ef6:	mov    rdi,QWORD PTR [rsp+0x8]
  403efb:	xor    esi,esi
  403efd:	mov    edx,0xa
  403f02:	call   4022f0 <strtol@plt>
  403f07:	mov    WORD PTR [rbx+0xf6],ax
  403f0e:	lea    rsi,[rbx+0xf8]
  403f15:	mov    rdi,r14
  403f18:	call   402260 <rb_inet_pton_sock@plt>
  403f1d:	movzx  eax,WORD PTR [rbx+0xf6]
  403f24:	movbe  WORD PTR [rbx+0xfa],ax
  403f2d:	lea    r14,[rbx+0x178]
  403f34:	lea    rbp,[rip+0x63d5]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  403f3b:	mov    edx,0x40
  403f40:	mov    rdi,r14
  403f43:	mov    rsi,rbp
  403f46:	call   4021c0 <rb_strlcpy@plt>
  403f4b:	mov    r15,rbx
  403f4e:	add    r15,0x1b8
  403f55:	mov    edx,0xb
  403f5a:	mov    rdi,r15
  403f5d:	mov    rsi,rbp
  403f60:	call   4021c0 <rb_strlcpy@plt>
  403f65:	mov    esi,DWORD PTR [rip+0xff9d]        # 413f08 <rb_strcasecmp@plt+0x119e8>
  403f6b:	shl    rsi,0x5
  403f6f:	mov    edi,0x1
  403f74:	call   402440 <calloc@plt>
  403f79:	test   rax,rax
  403f7c:	je     4040d8 <rb_strcasecmp@plt+0x1bb8>
  403f82:	mov    QWORD PTR [rbx+0x1d0],rax
  403f89:	mov    BYTE PTR [rbx+0x1c3],0x1
  403f90:	lea    r12,[rip+0x10199]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403f97:	mov    rbp,QWORD PTR [r12]
  403f9b:	test   rbp,rbp
  403f9e:	je     403fe6 <rb_strcasecmp@plt+0x1ac6>
  403fa0:	mov    rcx,QWORD PTR [rbp+0x0]
  403fa4:	mov    edx,DWORD PTR [rcx+0x18]
  403fa7:	shl    rdx,0x5
  403fab:	mov    QWORD PTR [rax+rdx*1],rcx
  403faf:	inc    DWORD PTR [rbx+0x1c8]
  403fb5:	mov    DWORD PTR [rax+rdx*1+0x18],0x1
  403fbd:	mov    rdi,rbx
  403fc0:	call   QWORD PTR [rcx+0x40]
  403fc3:	test   al,al
  403fc5:	je     404072 <rb_strcasecmp@plt+0x1b52>
  403fcb:	cmp    BYTE PTR [rbx+0x1c4],0x0
  403fd2:	jne    403fe6 <rb_strcasecmp@plt+0x1ac6>
  403fd4:	mov    rbp,QWORD PTR [rbp+0x10]
  403fd8:	test   rbp,rbp
  403fdb:	je     403fe6 <rb_strcasecmp@plt+0x1ac6>
  403fdd:	mov    rax,QWORD PTR [rbx+0x1d0]
  403fe4:	jmp    403fa0 <rb_strcasecmp@plt+0x1a80>
  403fe6:	mov    BYTE PTR [rbx+0x1c3],0x0
  403fed:	cmp    DWORD PTR [rbx+0x1c8],0x0
  403ff4:	jne    404072 <rb_strcasecmp@plt+0x1b52>
  403ffa:	lea    rax,[rip+0xbe6f]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  404001:	mov    rdi,QWORD PTR [rax]
  404004:	mov    edx,DWORD PTR [rbx]
  404006:	lea    rsi,[rip+0x640d]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  40400d:	mov    rcx,r15
  404010:	mov    r8,r14
  404013:	xor    eax,eax
  404015:	call   402450 <rb_helper_write@plt>
  40401a:	cmp    BYTE PTR [rbx+0x1c4],0x0
  404021:	jne    404072 <rb_strcasecmp@plt+0x1b52>
  404023:	mov    BYTE PTR [rbx+0x1c4],0x1
  40402a:	cmp    DWORD PTR [rbx+0x1c8],0x0
  404031:	je     404072 <rb_strcasecmp@plt+0x1b52>
  404033:	mov    rbp,QWORD PTR [r12]
  404037:	test   rbp,rbp
  40403a:	jne    404049 <rb_strcasecmp@plt+0x1b29>
  40403c:	jmp    404072 <rb_strcasecmp@plt+0x1b52>
  40403e:	xchg   ax,ax
  404040:	mov    rbp,QWORD PTR [rbp+0x10]
  404044:	test   rbp,rbp
  404047:	je     404072 <rb_strcasecmp@plt+0x1b52>
  404049:	mov    rcx,QWORD PTR [rbp+0x0]
  40404d:	mov    rax,QWORD PTR [rcx+0x48]
  404051:	test   rax,rax
  404054:	je     404040 <rb_strcasecmp@plt+0x1b20>
  404056:	mov    ecx,DWORD PTR [rcx+0x18]
  404059:	mov    rdx,QWORD PTR [rbx+0x1d0]
  404060:	shl    rcx,0x5
  404064:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  404069:	jne    404040 <rb_strcasecmp@plt+0x1b20>
  40406b:	mov    rdi,rbx
  40406e:	call   rax
  404070:	jmp    404040 <rb_strcasecmp@plt+0x1b20>
  404072:	dec    DWORD PTR [rbx+0x1cc]
  404078:	je     404089 <rb_strcasecmp@plt+0x1b69>
  40407a:	add    rsp,0x18
  40407e:	pop    rbx
  40407f:	pop    r12
  404081:	pop    r13
  404083:	pop    r14
  404085:	pop    r15
  404087:	pop    rbp
  404088:	ret    
  404089:	mov    rdi,QWORD PTR [r13+0x0]
  40408d:	mov    esi,DWORD PTR [rbx]
  40408f:	call   402290 <rb_dictionary_delete@plt>
  404094:	mov    rdi,QWORD PTR [rbx+0x1d0]
  40409b:	test   rdi,rdi
  40409e:	je     4040a5 <rb_strcasecmp@plt+0x1b85>
  4040a0:	call   4021f0 <free@plt>
  4040a5:	mov    rdi,rbx
  4040a8:	add    rsp,0x18
  4040ac:	pop    rbx
  4040ad:	pop    r12
  4040af:	pop    r13
  4040b1:	pop    r14
  4040b3:	pop    r15
  4040b5:	pop    rbp
  4040b6:	jmp    4021f0 <free@plt>
  4040bb:	lea    rsi,[rip+0x6363]        # 40a425 <rb_strcasecmp@plt+0x7f05>
  4040c2:	mov    edi,0x43
  4040c7:	xor    eax,eax
  4040c9:	call   403120 <rb_strcasecmp@plt+0xc00>
  4040ce:	mov    edi,0x3
  4040d3:	call   4020e0 <exit@plt>
  4040d8:	call   402380 <rb_outofmemory@plt>
  4040dd:	lea    rsi,[rip+0x64bd]        # 40a5a1 <rb_strcasecmp@plt+0x8081>
  4040e4:	mov    edi,0x43
  4040e9:	mov    rdx,rbp
  4040ec:	xor    eax,eax
  4040ee:	call   403120 <rb_strcasecmp@plt+0xc00>
  4040f3:	mov    edi,0x3
  4040f8:	call   4020e0 <exit@plt>
  4040fd:	nop    DWORD PTR [rax]
  404100:	push   r15
  404102:	push   r14
  404104:	push   rbx
  404105:	cmp    edi,0x1
  404108:	jle    404206 <rb_strcasecmp@plt+0x1ce6>
  40410e:	mov    rbx,rsi
  404111:	mov    rdi,QWORD PTR [rsi+0x8]
  404115:	xor    esi,esi
  404117:	mov    edx,0x10
  40411c:	call   402490 <strtoull@plt>
  404121:	lea    rcx,[rax-0x1]
  404125:	mov    edx,0xffffffff
  40412a:	cmp    rcx,rdx
  40412d:	jae    404225 <rb_strcasecmp@plt+0x1d05>
  404133:	lea    r14,[rip+0xffee]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40413a:	mov    rdi,QWORD PTR [r14]
  40413d:	mov    esi,eax
  40413f:	call   402370 <rb_dictionary_retrieve@plt>
  404144:	test   rax,rax
  404147:	je     404170 <rb_strcasecmp@plt+0x1c50>
  404149:	mov    r15,rax
  40414c:	mov    eax,DWORD PTR [rax+0x1cc]
  404152:	inc    eax
  404154:	mov    DWORD PTR [r15+0x1cc],eax
  40415b:	cmp    BYTE PTR [r15+0x1c4],0x0
  404163:	je     404176 <rb_strcasecmp@plt+0x1c56>
  404165:	dec    eax
  404167:	mov    DWORD PTR [r15+0x1cc],eax
  40416e:	je     4041d1 <rb_strcasecmp@plt+0x1cb1>
  404170:	pop    rbx
  404171:	pop    r14
  404173:	pop    r15
  404175:	ret    
  404176:	mov    BYTE PTR [r15+0x1c4],0x1
  40417e:	cmp    DWORD PTR [r15+0x1c8],0x0
  404186:	je     404165 <rb_strcasecmp@plt+0x1c45>
  404188:	lea    rcx,[rip+0xffa1]        # 414130 <rb_strcasecmp@plt+0x11c10>
  40418f:	mov    rbx,QWORD PTR [rcx]
  404192:	test   rbx,rbx
  404195:	jne    4041a9 <rb_strcasecmp@plt+0x1c89>
  404197:	jmp    404165 <rb_strcasecmp@plt+0x1c45>
  404199:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    rbx,QWORD PTR [rbx+0x10]
  4041a4:	test   rbx,rbx
  4041a7:	je     4041fa <rb_strcasecmp@plt+0x1cda>
  4041a9:	mov    rcx,QWORD PTR [rbx]
  4041ac:	mov    rax,QWORD PTR [rcx+0x48]
  4041b0:	test   rax,rax
  4041b3:	je     4041a0 <rb_strcasecmp@plt+0x1c80>
  4041b5:	mov    ecx,DWORD PTR [rcx+0x18]
  4041b8:	mov    rdx,QWORD PTR [r15+0x1d0]
  4041bf:	shl    rcx,0x5
  4041c3:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  4041c8:	jne    4041a0 <rb_strcasecmp@plt+0x1c80>
  4041ca:	mov    rdi,r15
  4041cd:	call   rax
  4041cf:	jmp    4041a0 <rb_strcasecmp@plt+0x1c80>
  4041d1:	mov    rdi,QWORD PTR [r14]
  4041d4:	mov    esi,DWORD PTR [r15]
  4041d7:	call   402290 <rb_dictionary_delete@plt>
  4041dc:	mov    rdi,QWORD PTR [r15+0x1d0]
  4041e3:	test   rdi,rdi
  4041e6:	je     4041ed <rb_strcasecmp@plt+0x1ccd>
  4041e8:	call   4021f0 <free@plt>
  4041ed:	mov    rdi,r15
  4041f0:	pop    rbx
  4041f1:	pop    r14
  4041f3:	pop    r15
  4041f5:	jmp    4021f0 <free@plt>
  4041fa:	mov    eax,DWORD PTR [r15+0x1cc]
  404201:	jmp    404165 <rb_strcasecmp@plt+0x1c45>
  404206:	mov    edx,edi
  404208:	lea    rsi,[rip+0x6260]        # 40a46f <rb_strcasecmp@plt+0x7f4f>
  40420f:	mov    edi,0x43
  404214:	xor    eax,eax
  404216:	call   403120 <rb_strcasecmp@plt+0xc00>
  40421b:	mov    edi,0x3
  404220:	call   4020e0 <exit@plt>
  404225:	mov    rdx,QWORD PTR [rbx+0x8]
  404229:	lea    rsi,[rip+0x6289]        # 40a4b9 <rb_strcasecmp@plt+0x7f99>
  404230:	mov    edi,0x43
  404235:	xor    eax,eax
  404237:	call   403120 <rb_strcasecmp@plt+0xc00>
  40423c:	mov    edi,0x3
  404241:	call   4020e0 <exit@plt>
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404250:	push   rax
  404251:	call   405340 <rb_strcasecmp@plt+0x2e20>
  404256:	lea    rax,[rip+0xfd07]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40425d:	mov    edx,DWORD PTR [rax]
  40425f:	test   edx,edx
  404261:	jle    404275 <rb_strcasecmp@plt+0x1d55>
  404263:	shl    rdx,0x2
  404267:	lea    rdi,[rip+0xfcb2]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  40426e:	xor    esi,esi
  404270:	call   402040 <memset@plt>
  404275:	cmp    QWORD PTR [rip+0xfc93],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  40427d:	jne    4042df <rb_strcasecmp@plt+0x1dbf>
  40427f:	lea    rax,[rip+0xffda]        # 414260 <rb_strcasecmp@plt+0x11d40>
  404286:	movzx  edi,WORD PTR [rax]
  404289:	lea    rcx,[rip+0x641c]        # 40a6ac <rb_strcasecmp@plt+0x818c>
  404290:	mov    esi,0x2
  404295:	xor    edx,edx
  404297:	call   402110 <rb_socket@plt>
  40429c:	mov    QWORD PTR [rip+0xfc6d],rax        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4042a3:	test   rax,rax
  4042a6:	je     4042df <rb_strcasecmp@plt+0x1dbf>
  4042a8:	lea    rdx,[rip+0x511]        # 4047c0 <rb_strcasecmp@plt+0x22a0>
  4042af:	mov    rdi,rax
  4042b2:	mov    esi,0x1
  4042b7:	xor    ecx,ecx
  4042b9:	call   4020b0 <rb_setselect@plt>
  4042be:	lea    rdi,[rip+0x63fb]        # 40a6c0 <rb_strcasecmp@plt+0x81a0>
  4042c5:	lea    rsi,[rip+0x534]        # 404800 <rb_strcasecmp@plt+0x22e0>
  4042cc:	mov    ecx,0x1
  4042d1:	xor    edx,edx
  4042d3:	call   402480 <rb_event_add@plt>
  4042d8:	mov    QWORD PTR [rip+0xfc39],rax        # 413f18 <rb_strcasecmp@plt+0x119f8>
  4042df:	pop    rax
  4042e0:	ret    
  4042e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f0:	push   rax
  4042f1:	mov    rdi,QWORD PTR [rip+0xfc18]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4042f8:	call   4022e0 <rb_close@plt>
  4042fd:	mov    QWORD PTR [rip+0xfc08],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404308:	mov    rdi,QWORD PTR [rip+0xfc09]        # 413f18 <rb_strcasecmp@plt+0x119f8>
  40430f:	call   4020a0 <rb_event_delete@plt>
  404314:	call   405340 <rb_strcasecmp@plt+0x2e20>
  404319:	lea    rax,[rip+0xfc44]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  404320:	mov    edx,DWORD PTR [rax]
  404322:	test   edx,edx
  404324:	jle    404338 <rb_strcasecmp@plt+0x1e18>
  404326:	shl    rdx,0x2
  40432a:	lea    rdi,[rip+0xfbef]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404331:	xor    esi,esi
  404333:	call   402040 <memset@plt>
  404338:	cmp    QWORD PTR [rip+0xfbd0],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404340:	jne    4043a2 <rb_strcasecmp@plt+0x1e82>
  404342:	lea    rax,[rip+0xff17]        # 414260 <rb_strcasecmp@plt+0x11d40>
  404349:	movzx  edi,WORD PTR [rax]
  40434c:	lea    rcx,[rip+0x6359]        # 40a6ac <rb_strcasecmp@plt+0x818c>
  404353:	mov    esi,0x2
  404358:	xor    edx,edx
  40435a:	call   402110 <rb_socket@plt>
  40435f:	mov    QWORD PTR [rip+0xfbaa],rax        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404366:	test   rax,rax
  404369:	je     4043a2 <rb_strcasecmp@plt+0x1e82>
  40436b:	lea    rdx,[rip+0x44e]        # 4047c0 <rb_strcasecmp@plt+0x22a0>
  404372:	mov    rdi,rax
  404375:	mov    esi,0x1
  40437a:	xor    ecx,ecx
  40437c:	call   4020b0 <rb_setselect@plt>
  404381:	lea    rdi,[rip+0x6338]        # 40a6c0 <rb_strcasecmp@plt+0x81a0>
  404388:	lea    rsi,[rip+0x471]        # 404800 <rb_strcasecmp@plt+0x22e0>
  40438f:	mov    ecx,0x1
  404394:	xor    edx,edx
  404396:	call   402480 <rb_event_add@plt>
  40439b:	mov    QWORD PTR [rip+0xfb76],rax        # 413f18 <rb_strcasecmp@plt+0x119f8>
  4043a2:	pop    rax
  4043a3:	ret    
  4043a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043ae:	xchg   ax,ax
  4043b0:	push   rbp
  4043b1:	push   r14
  4043b3:	push   rbx
  4043b4:	sub    rsp,0x100
  4043bb:	test   rdi,rdi
  4043be:	je     404455 <rb_strcasecmp@plt+0x1f35>
  4043c4:	mov    r14d,edx
  4043c7:	mov    rbx,rsi
  4043ca:	mov    rsi,rdi
  4043cd:	mov    rbp,rsp
  4043d0:	mov    edx,0x100
  4043d5:	mov    rdi,rbp
  4043d8:	call   4021c0 <rb_strlcpy@plt>
  4043dd:	mov    rdi,rbp
  4043e0:	mov    esi,0x2e
  4043e5:	call   402330 <strchr@plt>
  4043ea:	test   rax,rax
  4043ed:	jne    404439 <rb_strcasecmp@plt+0x1f19>
  4043ef:	lea    rax,[rip+0xfd6a]        # 414160 <rb_strcasecmp@plt+0x11c40>
  4043f6:	cmp    BYTE PTR [rax],0x0
  4043f9:	je     404439 <rb_strcasecmp@plt+0x1f19>
  4043fb:	mov    rdi,rsp
  4043fe:	call   402200 <strlen@plt>
  404403:	mov    rbp,rax
  404406:	lea    rdi,[rip+0xfd53]        # 414160 <rb_strcasecmp@plt+0x11c40>
  40440d:	call   402200 <strlen@plt>
  404412:	add    rax,rbp
  404415:	add    rax,0x2
  404419:	cmp    rax,0xfe
  40441f:	ja     404439 <rb_strcasecmp@plt+0x1f19>
  404421:	mov    BYTE PTR [rsp+rbp*1],0x2e
  404425:	lea    rdi,[rsp+rbp*1]
  404429:	add    rdi,0x1
  40442d:	lea    rsi,[rip+0xfd2c]        # 414160 <rb_strcasecmp@plt+0x11c40>
  404434:	call   402410 <strcpy@plt>
  404439:	mov    rsi,rsp
  40443c:	mov    rdi,rbx
  40443f:	xor    edx,edx
  404441:	mov    ecx,r14d
  404444:	call   404fe0 <rb_strcasecmp@plt+0x2ac0>
  404449:	add    rsp,0x100
  404450:	pop    rbx
  404451:	pop    r14
  404453:	pop    rbp
  404454:	ret    
  404455:	lea    rdi,[rip+0x6179]        # 40a5d5 <rb_strcasecmp@plt+0x80b5>
  40445c:	lea    rsi,[rip+0x617c]        # 40a5df <rb_strcasecmp@plt+0x80bf>
  404463:	lea    rcx,[rip+0x617b]        # 40a5e5 <rb_strcasecmp@plt+0x80c5>
  40446a:	mov    edx,0x19c
  40446f:	call   4020f0 <__assert_fail@plt>
  404474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40447e:	xchg   ax,ax
  404480:	push   r14
  404482:	push   rbx
  404483:	push   rax
  404484:	mov    r14,rdi
  404487:	mov    rdi,rsi
  40448a:	call   405060 <rb_strcasecmp@plt+0x2b40>
  40448f:	mov    rbx,rax
  404492:	vmovups ymm0,YMMWORD PTR [r14]
  404497:	vmovups ymm1,YMMWORD PTR [r14+0x20]
  40449d:	vmovups ymm2,YMMWORD PTR [r14+0x40]
  4044a3:	vmovups ymm3,YMMWORD PTR [r14+0x60]
  4044a9:	vmovups YMMWORD PTR [rax+0x148],ymm0
  4044b1:	vmovups YMMWORD PTR [rax+0x168],ymm1
  4044b9:	vmovups YMMWORD PTR [rax+0x188],ymm2
  4044c1:	vmovups YMMWORD PTR [rax+0x1a8],ymm3
  4044c9:	mov    edi,0x1
  4044ce:	mov    esi,0x100
  4044d3:	vzeroupper 
  4044d6:	call   402440 <calloc@plt>
  4044db:	test   rax,rax
  4044de:	je     404510 <rb_strcasecmp@plt+0x1ff0>
  4044e0:	mov    QWORD PTR [rbx+0x1c8],rax
  4044e7:	mov    rdi,rbx
  4044ea:	add    rdi,0x29
  4044ee:	mov    esi,0x100
  4044f3:	mov    rdx,r14
  4044f6:	xor    ecx,ecx
  4044f8:	call   404520 <rb_strcasecmp@plt+0x2000>
  4044fd:	mov    BYTE PTR [rbx+0x28],0xc
  404501:	mov    rdi,rbx
  404504:	add    rsp,0x8
  404508:	pop    rbx
  404509:	pop    r14
  40450b:	jmp    405150 <rb_strcasecmp@plt+0x2c30>
  404510:	call   402380 <rb_outofmemory@plt>
  404515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40451f:	nop
  404520:	push   rbp
  404521:	push   r15
  404523:	push   r14
  404525:	push   r13
  404527:	push   r12
  404529:	push   rbx
  40452a:	sub    rsp,0xb8
  404531:	movzx  eax,WORD PTR [rdx]
  404534:	cmp    ax,0xa
  404538:	je     404585 <rb_strcasecmp@plt+0x2065>
  40453a:	cmp    ax,0x2
  40453e:	jne    40479f <rb_strcasecmp@plt+0x227f>
  404544:	movzx  eax,BYTE PTR [rdx+0x7]
  404548:	movzx  r8d,BYTE PTR [rdx+0x6]
  40454d:	movzx  r9d,BYTE PTR [rdx+0x5]
  404552:	movzx  ebp,BYTE PTR [rdx+0x4]
  404556:	test   rcx,rcx
  404559:	lea    rbx,[rip+0x60d3]        # 40a633 <rb_strcasecmp@plt+0x8113>
  404560:	cmovne rbx,rcx
  404564:	lea    rdx,[rip+0x60b9]        # 40a624 <rb_strcasecmp@plt+0x8104>
  40456b:	mov    ecx,eax
  40456d:	mov    eax,0x0
  404572:	push   rbx
  404573:	push   rbp
  404574:	call   402080 <snprintf@plt>
  404579:	add    rsp,0xc8
  404580:	jmp    4047a6 <rb_strcasecmp@plt+0x2286>
  404585:	movzx  r8d,BYTE PTR [rdx+0x17]
  40458a:	mov    eax,r8d
  40458d:	and    eax,0xf
  404590:	shr    r8d,0x4
  404594:	movzx  ebp,BYTE PTR [rdx+0x16]
  404598:	mov    r9d,ebp
  40459b:	and    r9d,0xf
  40459f:	shr    ebp,0x4
  4045a2:	mov    QWORD PTR [rsp+0xb0],rbp
  4045aa:	movzx  ebx,BYTE PTR [rdx+0x15]
  4045ae:	mov    ebp,ebx
  4045b0:	and    ebp,0xf
  4045b3:	mov    QWORD PTR [rsp+0xa8],rbp
  4045bb:	shr    ebx,0x4
  4045be:	mov    QWORD PTR [rsp+0xa0],rbx
  4045c6:	movzx  ebx,BYTE PTR [rdx+0x14]
  4045ca:	mov    ebp,ebx
  4045cc:	and    ebp,0xf
  4045cf:	mov    QWORD PTR [rsp+0x98],rbp
  4045d7:	shr    ebx,0x4
  4045da:	mov    QWORD PTR [rsp+0x90],rbx
  4045e2:	movzx  ebx,BYTE PTR [rdx+0x13]
  4045e6:	mov    ebp,ebx
  4045e8:	and    ebp,0xf
  4045eb:	mov    QWORD PTR [rsp+0x88],rbp
  4045f3:	shr    ebx,0x4
  4045f6:	mov    QWORD PTR [rsp+0x80],rbx
  4045fe:	movzx  ebx,BYTE PTR [rdx+0x12]
  404602:	mov    ebp,ebx
  404604:	and    ebp,0xf
  404607:	mov    QWORD PTR [rsp+0x78],rbp
  40460c:	shr    ebx,0x4
  40460f:	mov    QWORD PTR [rsp+0x70],rbx
  404614:	movzx  ebx,BYTE PTR [rdx+0x11]
  404618:	mov    ebp,ebx
  40461a:	and    ebp,0xf
  40461d:	mov    QWORD PTR [rsp+0x68],rbp
  404622:	shr    ebx,0x4
  404625:	mov    QWORD PTR [rsp+0x60],rbx
  40462a:	movzx  ebx,BYTE PTR [rdx+0x10]
  40462e:	mov    ebp,ebx
  404630:	and    ebp,0xf
  404633:	mov    QWORD PTR [rsp+0x58],rbp
  404638:	shr    ebx,0x4
  40463b:	mov    QWORD PTR [rsp+0x50],rbx
  404640:	movzx  ebx,BYTE PTR [rdx+0xf]
  404644:	mov    ebp,ebx
  404646:	and    ebp,0xf
  404649:	mov    QWORD PTR [rsp+0x48],rbp
  40464e:	shr    ebx,0x4
  404651:	mov    QWORD PTR [rsp+0x40],rbx
  404656:	movzx  ebx,BYTE PTR [rdx+0xe]
  40465a:	mov    ebp,ebx
  40465c:	and    ebp,0xf
  40465f:	mov    QWORD PTR [rsp+0x38],rbp
  404664:	shr    ebx,0x4
  404667:	mov    QWORD PTR [rsp+0x30],rbx
  40466c:	movzx  ebx,BYTE PTR [rdx+0xd]
  404670:	mov    ebp,ebx
  404672:	and    ebp,0xf
  404675:	mov    QWORD PTR [rsp+0x28],rbp
  40467a:	shr    ebx,0x4
  40467d:	mov    QWORD PTR [rsp+0x20],rbx
  404682:	movzx  ebx,BYTE PTR [rdx+0xc]
  404686:	mov    ebp,ebx
  404688:	and    ebp,0xf
  40468b:	mov    QWORD PTR [rsp+0x18],rbp
  404690:	shr    ebx,0x4
  404693:	mov    QWORD PTR [rsp+0x10],rbx
  404698:	movzx  r13d,BYTE PTR [rdx+0xb]
  40469d:	mov    ebp,r13d
  4046a0:	and    ebp,0xf
  4046a3:	mov    QWORD PTR [rsp+0x8],rbp
  4046a8:	shr    r13d,0x4
  4046ac:	movzx  r15d,BYTE PTR [rdx+0xa]
  4046b1:	mov    ebp,r15d
  4046b4:	and    ebp,0xf
  4046b7:	shr    r15d,0x4
  4046bb:	movzx  ebx,BYTE PTR [rdx+0x9]
  4046bf:	mov    r12d,ebx
  4046c2:	and    r12d,0xf
  4046c6:	shr    ebx,0x4
  4046c9:	movzx  r10d,BYTE PTR [rdx+0x8]
  4046ce:	mov    r14d,r10d
  4046d1:	and    r14d,0xf
  4046d5:	shr    r10d,0x4
  4046d9:	test   rcx,rcx
  4046dc:	lea    r11,[rip+0x5fc0]        # 40a6a3 <rb_strcasecmp@plt+0x8183>
  4046e3:	cmovne r11,rcx
  4046e7:	lea    rdx,[rip+0x5f52]        # 40a640 <rb_strcasecmp@plt+0x8120>
  4046ee:	mov    ecx,eax
  4046f0:	mov    eax,0x0
  4046f5:	push   r11
  4046f7:	push   r10
  4046f9:	push   r14
  4046fb:	push   rbx
  4046fc:	push   r12
  4046fe:	push   r15
  404700:	push   rbp
  404701:	push   r13
  404703:	push   QWORD PTR [rsp+0x48]
  404707:	push   QWORD PTR [rsp+0x58]
  40470b:	push   QWORD PTR [rsp+0x68]
  40470f:	push   QWORD PTR [rsp+0x78]
  404713:	push   QWORD PTR [rsp+0x88]
  40471a:	push   QWORD PTR [rsp+0x98]
  404721:	push   QWORD PTR [rsp+0xa8]
  404728:	push   QWORD PTR [rsp+0xb8]
  40472f:	push   QWORD PTR [rsp+0xc8]
  404736:	push   QWORD PTR [rsp+0xd8]
  40473d:	push   QWORD PTR [rsp+0xe8]
  404744:	push   QWORD PTR [rsp+0xf8]
  40474b:	push   QWORD PTR [rsp+0x108]
  404752:	push   QWORD PTR [rsp+0x118]
  404759:	push   QWORD PTR [rsp+0x128]
  404760:	push   QWORD PTR [rsp+0x138]
  404767:	push   QWORD PTR [rsp+0x148]
  40476e:	push   QWORD PTR [rsp+0x158]
  404775:	push   QWORD PTR [rsp+0x168]
  40477c:	push   QWORD PTR [rsp+0x178]
  404783:	push   QWORD PTR [rsp+0x188]
  40478a:	push   QWORD PTR [rsp+0x198]
  404791:	call   402080 <snprintf@plt>
  404796:	add    rsp,0x1a8
  40479d:	jmp    4047a6 <rb_strcasecmp@plt+0x2286>
  40479f:	add    rsp,0xb8
  4047a6:	pop    rbx
  4047a7:	pop    r12
  4047a9:	pop    r13
  4047ab:	pop    r14
  4047ad:	pop    r15
  4047af:	pop    rbp
  4047b0:	ret    
  4047b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4047c0:	push   rbx
  4047c1:	mov    rbx,rdi
  4047c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047ce:	xchg   ax,ax
  4047d0:	mov    rdi,rbx
  4047d3:	call   404880 <rb_strcasecmp@plt+0x2360>
  4047d8:	test   eax,eax
  4047da:	jne    4047d0 <rb_strcasecmp@plt+0x22b0>
  4047dc:	lea    rdx,[rip+0xffffffffffffffdd]        # 4047c0 <rb_strcasecmp@plt+0x22a0>
  4047e3:	mov    rdi,rbx
  4047e6:	mov    esi,0x1
  4047eb:	xor    ecx,ecx
  4047ed:	pop    rbx
  4047ee:	jmp    4020b0 <rb_setselect@plt>
  4047f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047fd:	nop    DWORD PTR [rax]
  404800:	push   r15
  404802:	push   r14
  404804:	push   rbx
  404805:	call   402280 <rb_current_time@plt>
  40480a:	mov    rbx,QWORD PTR [rip+0xf737]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404811:	test   rbx,rbx
  404814:	je     404875 <rb_strcasecmp@plt+0x2355>
  404816:	mov    r14,rax
  404819:	lea    r15,[rip+0xf700]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404820:	jmp    404835 <rb_strcasecmp@plt+0x2315>
  404822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40482c:	nop    DWORD PTR [rax+0x0]
  404830:	test   rbx,rbx
  404833:	je     404875 <rb_strcasecmp@plt+0x2355>
  404835:	mov    rdi,QWORD PTR [rbx]
  404838:	mov    rbx,QWORD PTR [rbx+0x10]
  40483c:	mov    rax,QWORD PTR [rdi+0x138]
  404843:	mov    rcx,QWORD PTR [rdi+0x130]
  40484a:	add    rcx,rax
  40484d:	cmp    rcx,r14
  404850:	jg     404830 <rb_strcasecmp@plt+0x2310>
  404852:	movsxd rcx,DWORD PTR [rdi+0x140]
  404859:	inc    DWORD PTR [r15+rcx*4]
  40485d:	mov    QWORD PTR [rdi+0x130],r14
  404864:	add    rax,rax
  404867:	mov    QWORD PTR [rdi+0x138],rax
  40486e:	call   404f10 <rb_strcasecmp@plt+0x29f0>
  404873:	jmp    404830 <rb_strcasecmp@plt+0x2310>
  404875:	pop    rbx
  404876:	pop    r14
  404878:	pop    r15
  40487a:	ret    
  40487b:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	push   rbp
  404881:	push   r15
  404883:	push   r14
  404885:	push   r13
  404887:	push   r12
  404889:	push   rbx
  40488a:	sub    rsp,0x608
  404891:	mov    DWORD PTR [rsp+0xc],0x80
  404899:	call   4020d0 <rb_get_fd@plt>
  40489e:	lea    rsi,[rsp+0x90]
  4048a6:	xor    r15d,r15d
  4048a9:	lea    r8,[rsp+0x10]
  4048ae:	lea    r9,[rsp+0xc]
  4048b3:	mov    edx,0x40c
  4048b8:	mov    edi,eax
  4048ba:	xor    ecx,ecx
  4048bc:	call   402470 <recvfrom@plt>
  4048c1:	lea    ecx,[rax+0x1]
  4048c4:	cmp    ecx,0x2
  4048c7:	jb     404ee8 <rb_strcasecmp@plt+0x29c8>
  4048cd:	mov    r15d,0x1
  4048d3:	cmp    eax,0xd
  4048d6:	jl     404ee8 <rb_strcasecmp@plt+0x29c8>
  4048dc:	mov    esi,DWORD PTR [rsp+0x98]
  4048e3:	mov    rdx,QWORD PTR [rsp+0x90]
  4048eb:	mov    rcx,rdx
  4048ee:	shr    rcx,0x30
  4048f2:	rol    cx,0x8
  4048f6:	movzx  ecx,cx
  4048f9:	shl    rcx,0x30
  4048fd:	mov    edi,edx
  4048ff:	or     rdi,rcx
  404902:	mov    rcx,rdx
  404905:	shr    rcx,0x20
  404909:	mov    ebp,ecx
  40490b:	rol    bp,0x8
  40490f:	movzx  ebp,bp
  404912:	shl    rbp,0x20
  404916:	or     rbp,rdi
  404919:	mov    edi,esi
  40491b:	rol    di,0x8
  40491f:	shr    rsi,0x10
  404923:	rol    si,0x8
  404927:	shl    esi,0x10
  40492a:	movzx  edi,di
  40492d:	or     edi,esi
  40492f:	mov    DWORD PTR [rsp+0x98],edi
  404936:	mov    QWORD PTR [rsp+0x90],rbp
  40493e:	mov    rsi,QWORD PTR [rip+0xf603]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404945:	test   rsi,rsi
  404948:	je     404ee8 <rb_strcasecmp@plt+0x29c8>
  40494e:	movzx  edx,dx
  404951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40495b:	nop    DWORD PTR [rax+rax*1+0x0]
  404960:	mov    rbx,QWORD PTR [rsi]
  404963:	cmp    DWORD PTR [rbx+0x18],edx
  404966:	je     404976 <rb_strcasecmp@plt+0x2456>
  404968:	mov    rsi,QWORD PTR [rsi+0x10]
  40496c:	test   rsi,rsi
  40496f:	jne    404960 <rb_strcasecmp@plt+0x2440>
  404971:	jmp    404ee8 <rb_strcasecmp@plt+0x29c8>
  404976:	test   rbx,rbx
  404979:	je     404ee8 <rb_strcasecmp@plt+0x29c8>
  40497f:	lea    rdx,[rip+0xf5de]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  404986:	movsxd rdx,DWORD PTR [rdx]
  404989:	test   rdx,rdx
  40498c:	jle    404a41 <rb_strcasecmp@plt+0x2521>
  404992:	movzx  esi,WORD PTR [rsp+0x10]
  404997:	movzx  r10d,WORD PTR [rsp+0x12]
  40499d:	lea    rbp,[rip+0xf8bc]        # 414260 <rb_strcasecmp@plt+0x11d40>
  4049a4:	add    rbp,0x8
  4049a8:	mov    r8d,DWORD PTR [rsp+0x14]
  4049ad:	mov    r9,QWORD PTR [rip+0x9634]        # 40dfe8 <rb_strcasecmp@plt+0xbac8>
  4049b4:	jmp    4049c9 <rb_strcasecmp@plt+0x24a9>
  4049b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049c0:	sub    rbp,0xffffffffffffff80
  4049c4:	dec    rdx
  4049c7:	je     404a41 <rb_strcasecmp@plt+0x2521>
  4049c9:	movzx  edi,WORD PTR [rbp-0x8]
  4049cd:	cmp    di,0x2
  4049d1:	je     404a20 <rb_strcasecmp@plt+0x2500>
  4049d3:	cmp    di,0xa
  4049d7:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  4049d9:	cmp    si,0xa
  4049dd:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  4049df:	cmp    WORD PTR [rbp-0x6],r10w
  4049e4:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  4049e6:	vmovdqu xmm0,XMMWORD PTR [rbp+0x0]
  4049eb:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [rsp+0x18]
  4049f1:	vpmovmskb edi,xmm0
  4049f5:	mov    r13d,0x1
  4049fb:	cmp    edi,0xffff
  404a01:	je     404a44 <rb_strcasecmp@plt+0x2524>
  404a03:	vmovdqu xmm0,XMMWORD PTR [rbp+0x0]
  404a08:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [r9]
  404a0d:	vpmovmskb edi,xmm0
  404a11:	cmp    edi,0xffff
  404a17:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  404a19:	jmp    404a44 <rb_strcasecmp@plt+0x2524>
  404a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a20:	cmp    si,0x2
  404a24:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  404a26:	cmp    WORD PTR [rbp-0x6],r10w
  404a2b:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  404a2d:	mov    edi,DWORD PTR [rbp-0x4]
  404a30:	mov    r13d,0x1
  404a36:	test   edi,edi
  404a38:	je     404a44 <rb_strcasecmp@plt+0x2524>
  404a3a:	cmp    edi,r8d
  404a3d:	jne    4049c0 <rb_strcasecmp@plt+0x24a0>
  404a3f:	jmp    404a44 <rb_strcasecmp@plt+0x2524>
  404a41:	xor    r13d,r13d
  404a44:	cmp    r13d,DWORD PTR [rbx+0x140]
  404a4b:	je     404a5b <rb_strcasecmp@plt+0x253b>
  404a4d:	mov    edx,r13d
  404a50:	lea    rsi,[rip+0xf4c9]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404a57:	add    DWORD PTR [rsi+rdx*4],0x3
  404a5b:	movzx  ecx,cx
  404a5e:	cmp    ecx,0x100
  404a64:	jne    404ee8 <rb_strcasecmp@plt+0x29c8>
  404a6a:	cdqe   
  404a6c:	lea    rbp,[rsp+rax*1]
  404a70:	add    rbp,0x90
  404a77:	lea    r14,[rsp+0x9c]
  404a7f:	lea    rdi,[rsp+0x90]
  404a87:	lea    rcx,[rsp+0x4a0]
  404a8f:	mov    rsi,rbp
  404a92:	mov    rdx,r14
  404a95:	mov    r8d,0x100
  404a9b:	call   405610 <rb_strcasecmp@plt+0x30f0>
  404aa0:	test   eax,eax
  404aa2:	jle    404ee8 <rb_strcasecmp@plt+0x29c8>
  404aa8:	lea    rsi,[rbx+0x29]
  404aac:	lea    rdi,[rsp+0x4a0]
  404ab4:	call   402520 <rb_strcasecmp@plt>
  404ab9:	test   eax,eax
  404abb:	jne    404ee8 <rb_strcasecmp@plt+0x29c8>
  404ac1:	mov    rax,QWORD PTR [rsp+0x90]
  404ac9:	test   eax,0xf000000
  404ace:	jne    404b4e <rb_strcasecmp@plt+0x262e>
  404ad0:	movabs rcx,0xffff000000000000
  404ada:	and    rcx,rax
  404add:	je     404b4e <rb_strcasecmp@plt+0x262e>
  404adf:	movabs rcx,0xffff00000000
  404ae9:	test   rax,rcx
  404aec:	je     404b77 <rb_strcasecmp@plt+0x2657>
  404af2:	movabs r12,0xffff0000ffffffff
  404afc:	mov    rdi,r14
  404aff:	mov    rsi,rbp
  404b02:	call   405b40 <rb_strcasecmp@plt+0x3620>
  404b07:	test   eax,eax
  404b09:	js     404ddb <rb_strcasecmp@plt+0x28bb>
  404b0f:	cdqe   
  404b11:	add    r14,rax
  404b14:	add    r14,0x4
  404b18:	mov    ecx,DWORD PTR [rsp+0x98]
  404b1f:	mov    rax,QWORD PTR [rsp+0x90]
  404b27:	mov    rdx,rax
  404b2a:	shr    rdx,0x20
  404b2e:	dec    edx
  404b30:	movzx  edx,dx
  404b33:	mov    rsi,rdx
  404b36:	shl    rsi,0x20
  404b3a:	and    rax,r12
  404b3d:	or     rax,rsi
  404b40:	mov    QWORD PTR [rsp+0x90],rax
  404b48:	test   edx,edx
  404b4a:	jne    404afc <rb_strcasecmp@plt+0x25dc>
  404b4c:	jmp    404b7e <rb_strcasecmp@plt+0x265e>
  404b4e:	shr    eax,0x18
  404b51:	and    eax,0xf
  404b54:	lea    ecx,[rax-0x4]
  404b57:	cmp    ecx,0x2
  404b5a:	jb     404ddb <rb_strcasecmp@plt+0x28bb>
  404b60:	cmp    eax,0x3
  404b63:	je     404c75 <rb_strcasecmp@plt+0x2755>
  404b69:	cmp    eax,0x2
  404b6c:	je     404ddb <rb_strcasecmp@plt+0x28bb>
  404b72:	jmp    404c92 <rb_strcasecmp@plt+0x2772>
  404b77:	mov    ecx,DWORD PTR [rsp+0x98]
  404b7e:	cmp    r14,rbp
  404b81:	jae    404da1 <rb_strcasecmp@plt+0x2881>
  404b87:	mov    rsi,rax
  404b8a:	shr    rsi,0x30
  404b8e:	mov    edx,ecx
  404b90:	shl    edx,0x10
  404b93:	or     edx,esi
  404b95:	movzx  esi,dx
  404b98:	test   esi,esi
  404b9a:	je     404da1 <rb_strcasecmp@plt+0x2881>
  404ba0:	dec    edx
  404ba2:	shl    rdx,0x30
  404ba6:	mov    sil,0x30
  404ba9:	bzhi   rax,rax,rsi
  404bae:	or     rax,rdx
  404bb1:	mov    DWORD PTR [rsp+0x98],ecx
  404bb8:	mov    QWORD PTR [rsp+0x90],rax
  404bc0:	lea    rdi,[rsp+0x90]
  404bc8:	mov    rsi,rbp
  404bcb:	mov    rdx,r14
  404bce:	lea    rcx,[rsp+0x4a0]
  404bd6:	mov    r8d,0x163
  404bdc:	call   405610 <rb_strcasecmp@plt+0x30f0>
  404be1:	test   eax,eax
  404be3:	jle    404ddb <rb_strcasecmp@plt+0x28bb>
  404be9:	mov    BYTE PTR [rsp+0x59f],0x0
  404bf1:	cdqe   
  404bf3:	lea    rcx,[r14+rax*1]
  404bf7:	add    rcx,0xa
  404bfb:	cmp    rcx,rbp
  404bfe:	jae    404da1 <rb_strcasecmp@plt+0x2881>
  404c04:	add    r14,rax
  404c07:	mov    rdi,r14
  404c0a:	call   405bd0 <rb_strcasecmp@plt+0x36b0>
  404c0f:	mov    r12d,eax
  404c12:	lea    rdi,[r14+0x2]
  404c16:	call   405bd0 <rb_strcasecmp@plt+0x36b0>
  404c1b:	lea    rdi,[r14+0x4]
  404c1f:	call   405be0 <rb_strcasecmp@plt+0x36c0>
  404c24:	mov    QWORD PTR [rbx+0x20],rax
  404c28:	lea    rdi,[r14+0x8]
  404c2c:	call   405bd0 <rb_strcasecmp@plt+0x36b0>
  404c31:	add    r14,0xa
  404c35:	cmp    r12d,0x1c
  404c39:	je     404d5b <rb_strcasecmp@plt+0x283b>
  404c3f:	cmp    r12d,0xc
  404c43:	je     404d04 <rb_strcasecmp@plt+0x27e4>
  404c49:	cmp    r12d,0x1
  404c4d:	je     404d84 <rb_strcasecmp@plt+0x2864>
  404c53:	cdqe   
  404c55:	add    r14,rax
  404c58:	cmp    r14,rbp
  404c5b:	jae    404da1 <rb_strcasecmp@plt+0x2881>
  404c61:	mov    ecx,DWORD PTR [rsp+0x98]
  404c68:	mov    rax,QWORD PTR [rsp+0x90]
  404c70:	jmp    404b87 <rb_strcasecmp@plt+0x2667>
  404c75:	mov    eax,r13d
  404c78:	lea    rcx,[rip+0xf2a1]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404c7f:	mov    edx,DWORD PTR [rcx+rax*4]
  404c82:	mov    esi,edx
  404c84:	sar    esi,0x1f
  404c87:	shr    esi,0x1e
  404c8a:	add    esi,edx
  404c8c:	sar    esi,0x2
  404c8f:	mov    DWORD PTR [rcx+rax*4],esi
  404c92:	mov    rax,QWORD PTR [rbx+0x1d0]
  404c99:	mov    rdi,QWORD PTR [rax]
  404c9c:	xor    esi,esi
  404c9e:	call   QWORD PTR [rax+0x8]
  404ca1:	mov    rdx,QWORD PTR [rbx+0x8]
  404ca5:	mov    rcx,QWORD PTR [rbx+0x10]
  404ca9:	lea    rax,[rbx+0x8]
  404cad:	test   rcx,rcx
  404cb0:	je     404cbb <rb_strcasecmp@plt+0x279b>
  404cb2:	mov    QWORD PTR [rcx+0x8],rdx
  404cb6:	mov    rdx,QWORD PTR [rax]
  404cb9:	jmp    404cc2 <rb_strcasecmp@plt+0x27a2>
  404cbb:	mov    QWORD PTR [rip+0xf28e],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404cc2:	test   rdx,rdx
  404cc5:	lea    rdx,[rdx+0x10]
  404cc9:	lea    rsi,[rip+0xf278]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404cd0:	cmove  rdx,rsi
  404cd4:	mov    QWORD PTR [rdx],rcx
  404cd7:	vpxor  xmm0,xmm0,xmm0
  404cdb:	vmovdqu XMMWORD PTR [rax],xmm0
  404cdf:	dec    QWORD PTR [rip+0xf272]        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404ce6:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404ced:	test   rdi,rdi
  404cf0:	je     404cf7 <rb_strcasecmp@plt+0x27d7>
  404cf2:	call   4021f0 <free@plt>
  404cf7:	mov    rdi,rbx
  404cfa:	call   4021f0 <free@plt>
  404cff:	jmp    404ee8 <rb_strcasecmp@plt+0x29c8>
  404d04:	cmp    BYTE PTR [rbx+0x28],0xc
  404d08:	jne    404ddb <rb_strcasecmp@plt+0x28bb>
  404d0e:	lea    rdi,[rsp+0x90]
  404d16:	lea    rcx,[rsp+0x4a0]
  404d1e:	mov    rsi,rbp
  404d21:	mov    rdx,r14
  404d24:	mov    r8d,0x163
  404d2a:	call   405610 <rb_strcasecmp@plt+0x30f0>
  404d2f:	test   eax,eax
  404d31:	jle    404ddb <rb_strcasecmp@plt+0x28bb>
  404d37:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404d3e:	lea    rsi,[rsp+0x4a0]
  404d46:	mov    edx,0x100
  404d4b:	call   4021c0 <rb_strlcpy@plt>
  404d50:	cmp    BYTE PTR [rbx+0x28],0xc
  404d54:	je     404da7 <rb_strcasecmp@plt+0x2887>
  404d56:	jmp    404df5 <rb_strcasecmp@plt+0x28d5>
  404d5b:	cmp    eax,0x10
  404d5e:	jne    404ddb <rb_strcasecmp@plt+0x28bb>
  404d60:	cmp    BYTE PTR [rbx+0x28],0x1c
  404d64:	jne    404ddb <rb_strcasecmp@plt+0x28bb>
  404d66:	mov    WORD PTR [rbx+0x148],0xa
  404d6f:	vmovdqu xmm0,XMMWORD PTR [r14]
  404d74:	vmovdqu XMMWORD PTR [rbx+0x150],xmm0
  404d7c:	cmp    BYTE PTR [rbx+0x28],0xc
  404d80:	je     404da7 <rb_strcasecmp@plt+0x2887>
  404d82:	jmp    404df5 <rb_strcasecmp@plt+0x28d5>
  404d84:	cmp    eax,0x4
  404d87:	jne    404ddb <rb_strcasecmp@plt+0x28bb>
  404d89:	cmp    BYTE PTR [rbx+0x28],0x1
  404d8d:	jne    404ddb <rb_strcasecmp@plt+0x28bb>
  404d8f:	mov    WORD PTR [rbx+0x148],0x2
  404d98:	mov    eax,DWORD PTR [r14]
  404d9b:	mov    DWORD PTR [rbx+0x14c],eax
  404da1:	cmp    BYTE PTR [rbx+0x28],0xc
  404da5:	jne    404df5 <rb_strcasecmp@plt+0x28d5>
  404da7:	mov    rsi,QWORD PTR [rbx+0x1c8]
  404dae:	test   rsi,rsi
  404db1:	je     404ddb <rb_strcasecmp@plt+0x28bb>
  404db3:	cmp    WORD PTR [rbx+0x148],0xa
  404dbb:	mov    rdi,QWORD PTR [rbx+0x1d0]
  404dc2:	mov    eax,0x1c
  404dc7:	mov    ecx,0x1
  404dcc:	cmove  ecx,eax
  404dcf:	xor    edx,edx
  404dd1:	call   404fe0 <rb_strcasecmp@plt+0x2ac0>
  404dd6:	jmp    404e6d <rb_strcasecmp@plt+0x294d>
  404ddb:	mov    eax,r13d
  404dde:	lea    rcx,[rip+0xf13b]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404de5:	inc    DWORD PTR [rcx+rax*4]
  404de8:	mov    rdi,rbx
  404deb:	call   404f10 <rb_strcasecmp@plt+0x29f0>
  404df0:	jmp    404ee8 <rb_strcasecmp@plt+0x29c8>
  404df5:	mov    edi,0x1
  404dfa:	mov    esi,0x88
  404dff:	call   402440 <calloc@plt>
  404e04:	test   rax,rax
  404e07:	je     404efd <rb_strcasecmp@plt+0x29dd>
  404e0d:	mov    r14,rax
  404e10:	mov    rax,QWORD PTR [rbx+0x1c8]
  404e17:	mov    QWORD PTR [r14],rax
  404e1a:	vmovdqu ymm0,YMMWORD PTR [rbx+0x148]
  404e22:	vmovups ymm1,YMMWORD PTR [rbx+0x168]
  404e2a:	vmovups ymm2,YMMWORD PTR [rbx+0x188]
  404e32:	vmovups ymm3,YMMWORD PTR [rbx+0x1a8]
  404e3a:	vmovdqu YMMWORD PTR [r14+0x8],ymm0
  404e40:	vmovups YMMWORD PTR [r14+0x28],ymm1
  404e46:	vmovups YMMWORD PTR [r14+0x48],ymm2
  404e4c:	vmovups YMMWORD PTR [r14+0x68],ymm3
  404e52:	mov    rax,QWORD PTR [rbx+0x1d0]
  404e59:	mov    rdi,QWORD PTR [rax]
  404e5c:	mov    rsi,r14
  404e5f:	vzeroupper 
  404e62:	call   QWORD PTR [rax+0x8]
  404e65:	mov    rdi,r14
  404e68:	call   4021f0 <free@plt>
  404e6d:	mov    rdx,QWORD PTR [rbx+0x8]
  404e71:	mov    rcx,QWORD PTR [rbx+0x10]
  404e75:	lea    rax,[rbx+0x8]
  404e79:	test   rcx,rcx
  404e7c:	je     404e87 <rb_strcasecmp@plt+0x2967>
  404e7e:	mov    QWORD PTR [rcx+0x8],rdx
  404e82:	mov    rdx,QWORD PTR [rax]
  404e85:	jmp    404e8e <rb_strcasecmp@plt+0x296e>
  404e87:	mov    QWORD PTR [rip+0xf0c2],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404e8e:	test   rdx,rdx
  404e91:	lea    rdx,[rdx+0x10]
  404e95:	lea    rsi,[rip+0xf0ac]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404e9c:	cmove  rdx,rsi
  404ea0:	mov    QWORD PTR [rdx],rcx
  404ea3:	vpxor  xmm0,xmm0,xmm0
  404ea7:	vmovdqu XMMWORD PTR [rax],xmm0
  404eab:	dec    QWORD PTR [rip+0xf0a6]        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404eb2:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404eb9:	test   rdi,rdi
  404ebc:	je     404ec3 <rb_strcasecmp@plt+0x29a3>
  404ebe:	call   4021f0 <free@plt>
  404ec3:	mov    rdi,rbx
  404ec6:	call   4021f0 <free@plt>
  404ecb:	mov    eax,r13d
  404ece:	lea    rcx,[rip+0xf04b]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404ed5:	mov    edx,DWORD PTR [rcx+rax*4]
  404ed8:	mov    esi,edx
  404eda:	sar    esi,0x1f
  404edd:	shr    esi,0x1e
  404ee0:	add    esi,edx
  404ee2:	sar    esi,0x2
  404ee5:	mov    DWORD PTR [rcx+rax*4],esi
  404ee8:	mov    eax,r15d
  404eeb:	add    rsp,0x608
  404ef2:	pop    rbx
  404ef3:	pop    r12
  404ef5:	pop    r13
  404ef7:	pop    r14
  404ef9:	pop    r15
  404efb:	pop    rbp
  404efc:	ret    
  404efd:	call   402380 <rb_outofmemory@plt>
  404f02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f0c:	nop    DWORD PTR [rax+0x0]
  404f10:	push   rbx
  404f11:	mov    rbx,rdi
  404f14:	mov    al,BYTE PTR [rdi+0x129]
  404f1a:	dec    al
  404f1c:	mov    BYTE PTR [rdi+0x129],al
  404f22:	test   al,al
  404f24:	jle    404f5d <rb_strcasecmp@plt+0x2a3d>
  404f26:	movsx  ecx,BYTE PTR [rbx+0x28]
  404f2a:	cmp    ecx,0x1
  404f2d:	je     404f86 <rb_strcasecmp@plt+0x2a66>
  404f2f:	cmp    ecx,0x1c
  404f32:	je     404f86 <rb_strcasecmp@plt+0x2a66>
  404f34:	cmp    ecx,0xc
  404f37:	jne    404f95 <rb_strcasecmp@plt+0x2a75>
  404f39:	lea    rdx,[rbx+0x148]
  404f40:	lea    rdi,[rbx+0x29]
  404f44:	mov    esi,0x100
  404f49:	xor    ecx,ecx
  404f4b:	call   404520 <rb_strcasecmp@plt+0x2000>
  404f50:	mov    BYTE PTR [rbx+0x28],0xc
  404f54:	mov    rdi,rbx
  404f57:	pop    rbx
  404f58:	jmp    405150 <rb_strcasecmp@plt+0x2c30>
  404f5d:	mov    rax,QWORD PTR [rbx+0x1d0]
  404f64:	mov    rdi,QWORD PTR [rax]
  404f67:	xor    esi,esi
  404f69:	call   QWORD PTR [rax+0x8]
  404f6c:	mov    rdx,QWORD PTR [rbx+0x8]
  404f70:	mov    rcx,QWORD PTR [rbx+0x10]
  404f74:	lea    rax,[rbx+0x8]
  404f78:	test   rcx,rcx
  404f7b:	je     404f97 <rb_strcasecmp@plt+0x2a77>
  404f7d:	mov    QWORD PTR [rcx+0x8],rdx
  404f81:	mov    rdx,QWORD PTR [rax]
  404f84:	jmp    404f9e <rb_strcasecmp@plt+0x2a7e>
  404f86:	mov    rsi,QWORD PTR [rbx+0x1c8]
  404f8d:	xor    edi,edi
  404f8f:	mov    rdx,rbx
  404f92:	pop    rbx
  404f93:	jmp    404fe0 <rb_strcasecmp@plt+0x2ac0>
  404f95:	pop    rbx
  404f96:	ret    
  404f97:	mov    QWORD PTR [rip+0xefb2],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404f9e:	test   rdx,rdx
  404fa1:	lea    rdx,[rdx+0x10]
  404fa5:	lea    rsi,[rip+0xef9c]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404fac:	cmove  rdx,rsi
  404fb0:	mov    QWORD PTR [rdx],rcx
  404fb3:	vxorps xmm0,xmm0,xmm0
  404fb7:	vmovups XMMWORD PTR [rax],xmm0
  404fbb:	dec    QWORD PTR [rip+0xef96]        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404fc2:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404fc9:	test   rdi,rdi
  404fcc:	je     404fd3 <rb_strcasecmp@plt+0x2ab3>
  404fce:	call   4021f0 <free@plt>
  404fd3:	mov    rdi,rbx
  404fd6:	pop    rbx
  404fd7:	jmp    4021f0 <free@plt>
  404fdc:	nop    DWORD PTR [rax+0x0]
  404fe0:	push   rbp
  404fe1:	push   r15
  404fe3:	push   r14
  404fe5:	push   rbx
  404fe6:	push   rax
  404fe7:	mov    r14d,ecx
  404fea:	mov    rbx,rdx
  404fed:	mov    r15,rsi
  404ff0:	test   rdx,rdx
  404ff3:	jne    405028 <rb_strcasecmp@plt+0x2b08>
  404ff5:	call   405060 <rb_strcasecmp@plt+0x2b40>
  404ffa:	mov    rbx,rax
  404ffd:	mov    rdi,r15
  405000:	call   402200 <strlen@plt>
  405005:	lea    rdi,[rax+0x1]
  405009:	call   402180 <malloc@plt>
  40500e:	test   rax,rax
  405011:	je     40504f <rb_strcasecmp@plt+0x2b2f>
  405013:	mov    rbp,rax
  405016:	mov    rdi,rax
  405019:	mov    rsi,r15
  40501c:	call   402410 <strcpy@plt>
  405021:	mov    QWORD PTR [rbx+0x1c8],rbp
  405028:	lea    rdi,[rbx+0x29]
  40502c:	mov    edx,0x100
  405031:	mov    rsi,r15
  405034:	call   4021c0 <rb_strlcpy@plt>
  405039:	mov    BYTE PTR [rbx+0x28],r14b
  40503d:	mov    rdi,rbx
  405040:	add    rsp,0x8
  405044:	pop    rbx
  405045:	pop    r14
  405047:	pop    r15
  405049:	pop    rbp
  40504a:	jmp    405150 <rb_strcasecmp@plt+0x2c30>
  40504f:	call   402380 <rb_outofmemory@plt>
  405054:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40505e:	xchg   ax,ax
  405060:	push   r14
  405062:	push   rbx
  405063:	push   rax
  405064:	mov    r14,rdi
  405067:	mov    edi,0x1
  40506c:	mov    esi,0x1d8
  405071:	call   402440 <calloc@plt>
  405076:	test   rax,rax
  405079:	je     405141 <rb_strcasecmp@plt+0x2c21>
  40507f:	mov    rbx,rax
  405082:	call   402280 <rb_current_time@plt>
  405087:	mov    QWORD PTR [rbx+0x130],rax
  40508e:	mov    BYTE PTR [rbx+0x129],0x3
  405095:	mov    QWORD PTR [rbx+0x138],0x4
  4050a0:	mov    QWORD PTR [rbx+0x1d0],r14
  4050a7:	lea    r14,[rsp+0x6]
  4050ac:	mov    esi,0x2
  4050b1:	mov    rdi,r14
  4050b4:	call   4024a0 <rb_get_random@plt>
  4050b9:	movzx  ecx,WORD PTR [rsp+0x6]
  4050be:	mov    rax,QWORD PTR [rip+0xee83]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  4050c5:	mov    rdx,rax
  4050c8:	test   rax,rax
  4050cb:	je     4050f5 <rb_strcasecmp@plt+0x2bd5>
  4050cd:	nop    DWORD PTR [rax]
  4050d0:	mov    rsi,QWORD PTR [rdx]
  4050d3:	cmp    DWORD PTR [rsi+0x18],ecx
  4050d6:	je     4050f0 <rb_strcasecmp@plt+0x2bd0>
  4050d8:	mov    rdx,QWORD PTR [rdx+0x10]
  4050dc:	test   rdx,rdx
  4050df:	jne    4050d0 <rb_strcasecmp@plt+0x2bb0>
  4050e1:	jmp    4050f5 <rb_strcasecmp@plt+0x2bd5>
  4050e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ed:	nop    DWORD PTR [rax]
  4050f0:	test   rsi,rsi
  4050f3:	jne    4050ac <rb_strcasecmp@plt+0x2b8c>
  4050f5:	mov    DWORD PTR [rbx+0x18],ecx
  4050f8:	mov    QWORD PTR [rbx],rbx
  4050fb:	mov    QWORD PTR [rbx+0x8],0x0
  405103:	mov    QWORD PTR [rbx+0x10],rax
  405107:	test   rax,rax
  40510a:	je     405115 <rb_strcasecmp@plt+0x2bf5>
  40510c:	add    rax,0x8
  405110:	mov    QWORD PTR [rax],rbx
  405113:	jmp    40511f <rb_strcasecmp@plt+0x2bff>
  405115:	cmp    QWORD PTR [rip+0xee33],0x0        # 413f50 <rb_strcasecmp@plt+0x11a30>
  40511d:	je     405138 <rb_strcasecmp@plt+0x2c18>
  40511f:	mov    QWORD PTR [rip+0xee22],rbx        # 413f48 <rb_strcasecmp@plt+0x11a28>
  405126:	inc    QWORD PTR [rip+0xee2b]        # 413f58 <rb_strcasecmp@plt+0x11a38>
  40512d:	mov    rax,rbx
  405130:	add    rsp,0x8
  405134:	pop    rbx
  405135:	pop    r14
  405137:	ret    
  405138:	lea    rax,[rip+0xee11]        # 413f50 <rb_strcasecmp@plt+0x11a30>
  40513f:	jmp    405110 <rb_strcasecmp@plt+0x2bf0>
  405141:	call   402380 <rb_outofmemory@plt>
  405146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405150:	push   rbp
  405151:	push   r15
  405153:	push   r14
  405155:	push   r13
  405157:	push   r12
  405159:	push   rbx
  40515a:	sub    rsp,0x408
  405161:	mov    rbp,rdi
  405164:	mov    rbx,rsp
  405167:	mov    edx,0x400
  40516c:	mov    rdi,rbx
  40516f:	xor    esi,esi
  405171:	call   402040 <memset@plt>
  405176:	lea    rdi,[rbp+0x29]
  40517a:	movsx  edx,BYTE PTR [rbp+0x28]
  40517e:	mov    esi,0x1
  405183:	mov    rcx,rbx
  405186:	mov    r8d,0x400
  40518c:	call   405c30 <rb_strcasecmp@plt+0x3710>
  405191:	test   eax,eax
  405193:	jle    40531f <rb_strcasecmp@plt+0x2dff>
  405199:	movzx  ecx,WORD PTR [rbp+0x18]
  40519d:	mov    WORD PTR [rsp],cx
  4051a1:	mov    dl,BYTE PTR [rbp+0x12a]
  4051a7:	inc    dl
  4051a9:	mov    BYTE PTR [rbp+0x12a],dl
  4051af:	inc    DWORD PTR [rip+0xedab]        # 413f60 <rb_strcasecmp@plt+0x11a40>
  4051b5:	lea    rcx,[rip+0xeda8]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4051bc:	mov    ecx,DWORD PTR [rcx]
  4051be:	test   ecx,ecx
  4051c0:	jle    40531f <rb_strcasecmp@plt+0x2dff>
  4051c6:	mov    rbx,rbp
  4051c9:	movsx  r13d,dl
  4051cd:	dec    r13d
  4051d0:	movsxd r14,eax
  4051d3:	xor    r15d,r15d
  4051d6:	jmp    4051f3 <rb_strcasecmp@plt+0x2cd3>
  4051d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051e0:	cdq    
  4051e1:	idiv   esi
  4051e3:	test   edx,edx
  4051e5:	je     405230 <rb_strcasecmp@plt+0x2d10>
  4051e7:	inc    r15d
  4051ea:	cmp    r15d,ecx
  4051ed:	jge    405286 <rb_strcasecmp@plt+0x2d66>
  4051f3:	lea    eax,[r15+r13*1]
  4051f7:	cdq    
  4051f8:	idiv   ecx
  4051fa:	mov    ebp,edx
  4051fc:	movsxd r12,edx
  4051ff:	lea    rax,[rip+0xed1a]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  405206:	mov    edx,DWORD PTR [rax+r12*4]
  40520a:	test   edx,edx
  40520c:	je     405230 <rb_strcasecmp@plt+0x2d10>
  40520e:	mov    eax,DWORD PTR [rip+0xed4c]        # 413f60 <rb_strcasecmp@plt+0x11a40>
  405214:	dec    edx
  405216:	mov    esi,0xf3
  40521b:	cmp    edx,0x3
  40521e:	ja     4051e0 <rb_strcasecmp@plt+0x2cc0>
  405220:	movsxd rdx,edx
  405223:	lea    rsi,[rip+0x54aa]        # 40a6d4 <rb_strcasecmp@plt+0x81b4>
  40522a:	mov    esi,DWORD PTR [rsi+rdx*4]
  40522d:	jmp    4051e0 <rb_strcasecmp@plt+0x2cc0>
  40522f:	nop
  405230:	mov    rdi,QWORD PTR [rip+0xecd9]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  405237:	call   4020d0 <rb_get_fd@plt>
  40523c:	shl    r12,0x7
  405240:	lea    rcx,[rip+0xf019]        # 414260 <rb_strcasecmp@plt+0x11d40>
  405247:	lea    r8,[rcx+r12*1]
  40524b:	cmp    WORD PTR [rcx+r12*1],0x2
  405251:	mov    r9d,0x1c
  405257:	mov    ecx,0x10
  40525c:	cmove  r9d,ecx
  405260:	mov    edi,eax
  405262:	mov    rsi,rsp
  405265:	mov    rdx,r14
  405268:	xor    ecx,ecx
  40526a:	call   4024d0 <sendto@plt>
  40526f:	cmp    rax,r14
  405272:	je     40530f <rb_strcasecmp@plt+0x2def>
  405278:	lea    rax,[rip+0xece5]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40527f:	mov    ecx,DWORD PTR [rax]
  405281:	jmp    4051e7 <rb_strcasecmp@plt+0x2cc7>
  405286:	test   ecx,ecx
  405288:	jle    40531f <rb_strcasecmp@plt+0x2dff>
  40528e:	mov    r12,rbx
  405291:	xor    r15d,r15d
  405294:	jmp    4052a8 <rb_strcasecmp@plt+0x2d88>
  405296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052a0:	inc    r15d
  4052a3:	cmp    r15d,ecx
  4052a6:	jge    40531f <rb_strcasecmp@plt+0x2dff>
  4052a8:	lea    eax,[r15+r13*1]
  4052ac:	cdq    
  4052ad:	idiv   ecx
  4052af:	movsxd rbx,edx
  4052b2:	lea    rax,[rip+0xec67]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  4052b9:	cmp    DWORD PTR [rax+rbx*4],0x0
  4052bd:	je     4052a0 <rb_strcasecmp@plt+0x2d80>
  4052bf:	mov    ebp,edx
  4052c1:	mov    rdi,QWORD PTR [rip+0xec48]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4052c8:	call   4020d0 <rb_get_fd@plt>
  4052cd:	shl    rbx,0x7
  4052d1:	lea    rcx,[rip+0xef88]        # 414260 <rb_strcasecmp@plt+0x11d40>
  4052d8:	lea    r8,[rcx+rbx*1]
  4052dc:	cmp    WORD PTR [rcx+rbx*1],0x2
  4052e1:	mov    r9d,0x1c
  4052e7:	mov    ecx,0x10
  4052ec:	cmove  r9d,ecx
  4052f0:	mov    edi,eax
  4052f2:	mov    rsi,rsp
  4052f5:	mov    rdx,r14
  4052f8:	xor    ecx,ecx
  4052fa:	call   4024d0 <sendto@plt>
  4052ff:	cmp    rax,r14
  405302:	je     405312 <rb_strcasecmp@plt+0x2df2>
  405304:	lea    rax,[rip+0xec59]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40530b:	mov    ecx,DWORD PTR [rax]
  40530d:	jmp    4052a0 <rb_strcasecmp@plt+0x2d80>
  40530f:	mov    r12,rbx
  405312:	cmp    ebp,0xffffffff
  405315:	je     40531f <rb_strcasecmp@plt+0x2dff>
  405317:	mov    DWORD PTR [r12+0x140],ebp
  40531f:	add    rsp,0x408
  405326:	pop    rbx
  405327:	pop    r12
  405329:	pop    r13
  40532b:	pop    r14
  40532d:	pop    r15
  40532f:	pop    rbp
  405330:	ret    
  405331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40533b:	nop    DWORD PTR [rax+rax*1+0x0]
  405340:	push   rbp
  405341:	mov    rbp,rsp
  405344:	push   r15
  405346:	push   r14
  405348:	push   r13
  40534a:	push   r12
  40534c:	push   rbx
  40534d:	and    rsp,0xffffffffffffffe0
  405351:	sub    rsp,0x100
  405358:	lea    rbx,[rip+0xec05]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40535f:	mov    DWORD PTR [rbx],0x0
  405365:	lea    rdi,[rip+0x5382]        # 40a6ee <rb_strcasecmp@plt+0x81ce>
  40536c:	lea    rsi,[rip+0x5934]        # 40aca7 <rb_strcasecmp@plt+0x8787>
  405373:	call   402190 <fopen@plt>
  405378:	test   rax,rax
  40537b:	je     405574 <rb_strcasecmp@plt+0x3054>
  405381:	mov    r14,rax
  405384:	lea    rdi,[rsp+0x60]
  405389:	mov    esi,0x80
  40538e:	mov    rdx,rax
  405391:	call   402340 <fgets_unlocked@plt>
  405396:	test   rax,rax
  405399:	je     405565 <rb_strcasecmp@plt+0x3045>
  40539f:	call   402230 <__ctype_b_loc@plt>
  4053a4:	mov    rbx,rax
  4053a7:	lea    r12,[rsp+0x60]
  4053ac:	jmp    4053e9 <rb_strcasecmp@plt+0x2ec9>
  4053ae:	mov    edx,0x100
  4053b3:	lea    rdi,[rip+0xeda6]        # 414160 <rb_strcasecmp@plt+0x11c40>
  4053ba:	mov    rsi,r15
  4053bd:	call   4021c0 <rb_strlcpy@plt>
  4053c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053cc:	nop    DWORD PTR [rax+0x0]
  4053d0:	mov    rdi,r12
  4053d3:	mov    esi,0x80
  4053d8:	mov    rdx,r14
  4053db:	call   402340 <fgets_unlocked@plt>
  4053e0:	test   rax,rax
  4053e3:	je     405565 <rb_strcasecmp@plt+0x3045>
  4053e9:	mov    rdi,r12
  4053ec:	lea    rsi,[rip+0x5b2e]        # 40af21 <rb_strcasecmp@plt+0x8a01>
  4053f3:	call   402150 <strpbrk@plt>
  4053f8:	test   rax,rax
  4053fb:	je     405400 <rb_strcasecmp@plt+0x2ee0>
  4053fd:	mov    BYTE PTR [rax],0x0
  405400:	mov    rax,QWORD PTR [rbx]
  405403:	lea    r13,[rsp+0x5f]
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	movsx  rcx,BYTE PTR [r13+0x1]
  405415:	inc    r13
  405418:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40541d:	jne    405410 <rb_strcasecmp@plt+0x2ef0>
  40541f:	mov    r15,r13
  405422:	cmp    cl,0x3b
  405425:	ja     405440 <rb_strcasecmp@plt+0x2f20>
  405427:	movzx  ecx,cl
  40542a:	movabs rdx,0x800000800000001
  405434:	bt     rdx,rcx
  405438:	mov    r15,r13
  40543b:	jb     4053d0 <rb_strcasecmp@plt+0x2eb0>
  40543d:	nop    DWORD PTR [rax]
  405440:	movsx  rcx,BYTE PTR [r15+0x1]
  405445:	inc    r15
  405448:	test   rcx,rcx
  40544b:	je     40545c <rb_strcasecmp@plt+0x2f3c>
  40544d:	movzx  edx,WORD PTR [rax+rcx*2]
  405451:	and    edx,0x2000
  405457:	test   dx,dx
  40545a:	je     405440 <rb_strcasecmp@plt+0x2f20>
  40545c:	test   cl,cl
  40545e:	je     4053d0 <rb_strcasecmp@plt+0x2eb0>
  405464:	mov    BYTE PTR [r15],0x0
  405468:	mov    rax,QWORD PTR [rbx]
  40546b:	nop    DWORD PTR [rax+rax*1+0x0]
  405470:	movsx  rcx,BYTE PTR [r15+0x1]
  405475:	inc    r15
  405478:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40547d:	jne    405470 <rb_strcasecmp@plt+0x2f50>
  40547f:	mov    rdi,r15
  405482:	lea    rsi,[rip+0x5276]        # 40a6ff <rb_strcasecmp@plt+0x81df>
  405489:	call   402150 <strpbrk@plt>
  40548e:	test   rax,rax
  405491:	je     405496 <rb_strcasecmp@plt+0x2f76>
  405493:	mov    BYTE PTR [rax],0x0
  405496:	mov    rdi,r13
  405499:	lea    rsi,[rip+0x5262]        # 40a702 <rb_strcasecmp@plt+0x81e2>
  4054a0:	call   402520 <rb_strcasecmp@plt>
  4054a5:	test   eax,eax
  4054a7:	je     4053ae <rb_strcasecmp@plt+0x2e8e>
  4054ad:	mov    rdi,r13
  4054b0:	lea    rsi,[rip+0x5252]        # 40a709 <rb_strcasecmp@plt+0x81e9>
  4054b7:	call   402520 <rb_strcasecmp@plt>
  4054bc:	test   eax,eax
  4054be:	jne    4053d0 <rb_strcasecmp@plt+0x2eb0>
  4054c4:	lea    rax,[rip+0xea99]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4054cb:	cmp    DWORD PTR [rax],0x9
  4054ce:	jg     4053d0 <rb_strcasecmp@plt+0x2eb0>
  4054d4:	vxorps xmm0,xmm0,xmm0
  4054d8:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4054de:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  4054e4:	mov    DWORD PTR [rsp+0x28],0x2
  4054ec:	mov    DWORD PTR [rsp+0x20],0x5
  4054f4:	mov    rdi,r15
  4054f7:	lea    rsi,[rip+0x5204]        # 40a702 <rb_strcasecmp@plt+0x81e2>
  4054fe:	lea    rdx,[rsp+0x20]
  405503:	lea    rcx,[rsp+0x18]
  405508:	vzeroupper 
  40550b:	call   402100 <getaddrinfo@plt>
  405510:	test   eax,eax
  405512:	jne    4053d0 <rb_strcasecmp@plt+0x2eb0>
  405518:	mov    r15,QWORD PTR [rsp+0x18]
  40551d:	test   r15,r15
  405520:	je     4053d0 <rb_strcasecmp@plt+0x2eb0>
  405526:	lea    rax,[rip+0xea37]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40552d:	movsxd r13,DWORD PTR [rax]
  405530:	mov    rdi,r13
  405533:	shl    rdi,0x7
  405537:	add    rdi,QWORD PTR [rip+0x8a9a]        # 40dfd8 <rb_strcasecmp@plt+0xbab8>
  40553e:	mov    rsi,QWORD PTR [r15+0x18]
  405542:	mov    edx,DWORD PTR [r15+0x10]
  405546:	call   402510 <memcpy@plt>
  40554b:	lea    eax,[r13+0x1]
  40554f:	lea    rcx,[rip+0xea0e]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  405556:	mov    DWORD PTR [rcx],eax
  405558:	mov    rdi,r15
  40555b:	call   4021e0 <freeaddrinfo@plt>
  405560:	jmp    4053d0 <rb_strcasecmp@plt+0x2eb0>
  405565:	mov    rdi,r14
  405568:	call   402460 <fclose@plt>
  40556d:	lea    rbx,[rip+0xe9f0]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  405574:	cmp    DWORD PTR [rbx],0x0
  405577:	jne    4055f3 <rb_strcasecmp@plt+0x30d3>
  405579:	vxorps xmm0,xmm0,xmm0
  40557d:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  405583:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  405589:	mov    DWORD PTR [rsp+0x68],0x2
  405591:	mov    DWORD PTR [rsp+0x60],0x5
  405599:	lea    rdi,[rip+0x5144]        # 40a6e4 <rb_strcasecmp@plt+0x81c4>
  4055a0:	lea    rsi,[rip+0x515b]        # 40a702 <rb_strcasecmp@plt+0x81e2>
  4055a7:	lea    rdx,[rsp+0x60]
  4055ac:	lea    rcx,[rsp+0x20]
  4055b1:	vzeroupper 
  4055b4:	call   402100 <getaddrinfo@plt>
  4055b9:	test   eax,eax
  4055bb:	jne    4055f3 <rb_strcasecmp@plt+0x30d3>
  4055bd:	mov    r15,QWORD PTR [rsp+0x20]
  4055c2:	test   r15,r15
  4055c5:	je     4055f3 <rb_strcasecmp@plt+0x30d3>
  4055c7:	movsxd r14,DWORD PTR [rbx]
  4055ca:	mov    rdi,r14
  4055cd:	shl    rdi,0x7
  4055d1:	add    rdi,QWORD PTR [rip+0x8a00]        # 40dfd8 <rb_strcasecmp@plt+0xbab8>
  4055d8:	mov    rsi,QWORD PTR [r15+0x18]
  4055dc:	mov    edx,DWORD PTR [r15+0x10]
  4055e0:	call   402510 <memcpy@plt>
  4055e5:	lea    eax,[r14+0x1]
  4055e9:	mov    DWORD PTR [rbx],eax
  4055eb:	mov    rdi,r15
  4055ee:	call   4021e0 <freeaddrinfo@plt>
  4055f3:	xor    eax,eax
  4055f5:	lea    rsp,[rbp-0x28]
  4055f9:	pop    rbx
  4055fa:	pop    r12
  4055fc:	pop    r13
  4055fe:	pop    r14
  405600:	pop    r15
  405602:	pop    rbp
  405603:	ret    
  405604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40560e:	xchg   ax,ax
  405610:	push   rbp
  405611:	push   r15
  405613:	push   r14
  405615:	push   r13
  405617:	push   r12
  405619:	push   rbx
  40561a:	sub    rsp,0x138
  405621:	cmp    rdx,rdi
  405624:	jb     405aed <rb_strcasecmp@plt+0x35cd>
  40562a:	mov    r13,rsi
  40562d:	cmp    rdx,rsi
  405630:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405636:	movsxd r9,r8d
  405639:	mov    al,BYTE PTR [rdx]
  40563b:	test   al,al
  40563d:	je     40579c <rb_strcasecmp@plt+0x327c>
  405643:	mov    DWORD PTR [rsp+0x4],r8d
  405648:	mov    QWORD PTR [rsp+0x18],r9
  40564d:	mov    QWORD PTR [rsp+0x10],rcx
  405652:	lea    rbx,[rsp+0x30]
  405657:	mov    rcx,rdx
  40565a:	mov    QWORD PTR [rsp+0x8],rdx
  40565f:	lea    rsi,[rdx+0x1]
  405663:	mov    rcx,r13
  405666:	mov    QWORD PTR [rsp+0x28],rdi
  40566b:	sub    rcx,rdi
  40566e:	mov    QWORD PTR [rsp+0x20],rcx
  405673:	mov    DWORD PTR [rsp],0xffffffff
  40567a:	xor    r14d,r14d
  40567d:	xor    ebp,ebp
  40567f:	jmp    4056c8 <rb_strcasecmp@plt+0x31a8>
  405681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40568b:	nop    DWORD PTR [rax+rax*1+0x0]
  405690:	inc    rbp
  405693:	lea    r14d,[r14+rdx*1]
  405697:	add    r14d,0x1
  40569b:	lea    rdi,[rsp+rbp*1]
  40569f:	add    rdi,0x30
  4056a3:	mov    BYTE PTR [rbx],al
  4056a5:	call   402510 <memcpy@plt>
  4056aa:	mov    rbp,r15
  4056ad:	lea    rbx,[rsp+rbp*1]
  4056b1:	add    rbx,0x30
  4056b5:	movzx  eax,BYTE PTR [r12]
  4056ba:	mov    rsi,r12
  4056bd:	inc    rsi
  4056c0:	test   al,al
  4056c2:	je     4057ec <rb_strcasecmp@plt+0x32cc>
  4056c8:	mov    edx,eax
  4056ca:	and    dl,0xc0
  4056cd:	cmp    dl,0xc0
  4056d0:	je     405710 <rb_strcasecmp@plt+0x31f0>
  4056d2:	test   dl,dl
  4056d4:	je     405770 <rb_strcasecmp@plt+0x3250>
  4056da:	cmp    dl,0x40
  4056dd:	jne    405aed <rb_strcasecmp@plt+0x35cd>
  4056e3:	cmp    al,0x41
  4056e5:	jne    405aed <rb_strcasecmp@plt+0x35cd>
  4056eb:	movzx  edi,BYTE PTR [rsi]
  4056ee:	lea    edx,[rdi+0x7]
  4056f1:	shr    edx,0x3
  4056f4:	inc    edx
  4056f6:	test   edi,edi
  4056f8:	mov    ecx,0x21
  4056fd:	cmove  edx,ecx
  405700:	jmp    405773 <rb_strcasecmp@plt+0x3253>
  405702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40570c:	nop    DWORD PTR [rax+0x0]
  405710:	cmp    rsi,r13
  405713:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405719:	and    al,0x3f
  40571b:	movzx  ecx,al
  40571e:	shl    rcx,0x8
  405722:	movzx  r12d,BYTE PTR [rsi]
  405726:	or     r12,rcx
  405729:	add    r12,QWORD PTR [rsp+0x28]
  40572e:	cmp    r12,r13
  405731:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405737:	sub    esi,DWORD PTR [rsp+0x8]
  40573b:	inc    esi
  40573d:	mov    eax,DWORD PTR [rsp]
  405740:	test   eax,eax
  405742:	cmovns esi,eax
  405745:	add    r14d,0x2
  405749:	movsxd rcx,r14d
  40574c:	mov    eax,esi
  40574e:	mov    DWORD PTR [rsp],esi
  405751:	cmp    QWORD PTR [rsp+0x20],rcx
  405756:	jg     4056ad <rb_strcasecmp@plt+0x318d>
  40575c:	jmp    405aed <rb_strcasecmp@plt+0x35cd>
  405761:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40576b:	nop    DWORD PTR [rax+rax*1+0x0]
  405770:	movzx  edx,al
  405773:	mov    edx,edx
  405775:	lea    r15,[rdx+rbp*1]
  405779:	add    r15,0x1
  40577d:	cmp    r15,0xfe
  405784:	jg     405aed <rb_strcasecmp@plt+0x35cd>
  40578a:	lea    r12,[rsi+rdx*1]
  40578e:	cmp    r12,r13
  405791:	jb     405690 <rb_strcasecmp@plt+0x3170>
  405797:	jmp    405aed <rb_strcasecmp@plt+0x35cd>
  40579c:	mov    BYTE PTR [rsp+0x30],0x0
  4057a1:	add    r9,rcx
  4057a4:	mov    eax,0x1
  4057a9:	test   r8d,r8d
  4057ac:	jle    405aed <rb_strcasecmp@plt+0x35cd>
  4057b2:	lea    r10,[rcx+0x1]
  4057b6:	mov    BYTE PTR [rcx],0x2e
  4057b9:	cmp    r10,r9
  4057bc:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  4057c2:	mov    BYTE PTR [r10],0x0
  4057c6:	sub    r10d,ecx
  4057c9:	cmp    r10d,0xfffffffe
  4057cd:	je     405af8 <rb_strcasecmp@plt+0x35d8>
  4057d3:	test   eax,eax
  4057d5:	jle    405afd <rb_strcasecmp@plt+0x35dd>
  4057db:	cmp    BYTE PTR [rcx],0x2e
  4057de:	jne    405afd <rb_strcasecmp@plt+0x35dd>
  4057e4:	mov    BYTE PTR [rcx],0x0
  4057e7:	jmp    405afd <rb_strcasecmp@plt+0x35dd>
  4057ec:	mov    BYTE PTR [rbx],0x0
  4057ef:	mov    eax,DWORD PTR [rsp]
  4057f2:	test   eax,eax
  4057f4:	mov    rcx,QWORD PTR [rsp+0x10]
  4057f9:	jns    40580a <rb_strcasecmp@plt+0x32ea>
  4057fb:	sub    esi,DWORD PTR [rsp+0x8]
  4057ff:	mov    eax,esi
  405801:	cmp    esi,0xffffffff
  405804:	je     405af8 <rb_strcasecmp@plt+0x35d8>
  40580a:	mov    bl,BYTE PTR [rsp+0x30]
  40580e:	mov    r9,QWORD PTR [rsp+0x18]
  405813:	add    r9,rcx
  405816:	test   bl,bl
  405818:	je     405adf <rb_strcasecmp@plt+0x35bf>
  40581e:	mov    DWORD PTR [rsp],eax
  405821:	lea    r14,[rsp+0x30]
  405826:	lea    rsi,[rip+0x4ee7]        # 40a714 <rb_strcasecmp@plt+0x81f4>
  40582d:	movabs r11,0x4000000420010c5
  405837:	mov    r10,rcx
  40583a:	cmp    bl,0xc0
  40583d:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405843:	mov    edx,ebx
  405845:	mov    rdi,rcx
  405848:	cmp    r10,rcx
  40584b:	je     405863 <rb_strcasecmp@plt+0x3343>
  40584d:	cmp    r10,r9
  405850:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405856:	mov    BYTE PTR [r10],0x2e
  40585a:	inc    r10
  40585d:	mov    dl,BYTE PTR [r14]
  405860:	mov    rdi,r10
  405863:	lea    r15,[r14+0x1]
  405867:	mov    eax,edx
  405869:	and    al,0xc0
  40586b:	cmp    al,0x40
  40586d:	je     40587c <rb_strcasecmp@plt+0x335c>
  40586f:	cmp    al,0xc0
  405871:	je     405aed <rb_strcasecmp@plt+0x35cd>
  405877:	movzx  ebp,dl
  40587a:	jmp    40589b <rb_strcasecmp@plt+0x337b>
  40587c:	cmp    dl,0x41
  40587f:	jne    405aed <rb_strcasecmp@plt+0x35cd>
  405885:	movzx  eax,BYTE PTR [r15]
  405889:	lea    ebp,[rax+0x7]
  40588c:	shr    ebp,0x3
  40588f:	inc    ebp
  405891:	test   eax,eax
  405893:	mov    eax,0x21
  405898:	cmove  ebp,eax
  40589b:	mov    eax,ebp
  40589d:	add    rax,rdi
  4058a0:	cmp    rax,r9
  4058a3:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  4058a9:	mov    eax,ebx
  4058ab:	and    al,0xc0
  4058ad:	cmp    al,0x40
  4058af:	jne    405969 <rb_strcasecmp@plt+0x3449>
  4058b5:	cmp    bl,0x41
  4058b8:	jne    405b25 <rb_strcasecmp@plt+0x3605>
  4058be:	movzx  r13d,BYTE PTR [r15]
  4058c2:	test   r13d,r13d
  4058c5:	mov    eax,0x100
  4058ca:	cmove  r13d,eax
  4058ce:	lea    eax,[r13+0x3]
  4058d2:	shr    eax,0x2
  4058d5:	xor    ecx,ecx
  4058d7:	cmp    r13d,0x9
  4058db:	seta   cl
  4058de:	add    ecx,0x7
  4058e1:	cmp    r13d,0x63
  4058e5:	mov    edx,0x9
  4058ea:	cmova  ecx,edx
  4058ed:	add    ecx,eax
  4058ef:	add    rcx,rdi
  4058f2:	cmp    rcx,r9
  4058f5:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  4058fb:	mov    r12,r9
  4058fe:	mov    DWORD PTR [rdi],0x785b5c
  405904:	lea    rbx,[rdi+0x3]
  405908:	add    r14,0x2
  40590c:	cmp    r13d,0x8
  405910:	mov    QWORD PTR [rsp+0x8],rdi
  405915:	mov    ebp,r13d
  405918:	jb     40594d <rb_strcasecmp@plt+0x342d>
  40591a:	nop    WORD PTR [rax+rax*1+0x0]
  405920:	mov    r15,rbx
  405923:	movzx  edx,BYTE PTR [r14]
  405927:	mov    rdi,rbx
  40592a:	xor    eax,eax
  40592c:	call   402250 <sprintf@plt>
  405931:	lea    rsi,[rip+0x4ddc]        # 40a714 <rb_strcasecmp@plt+0x81f4>
  405938:	movsxd rbx,eax
  40593b:	add    rbx,r15
  40593e:	add    ebp,0xfffffff8
  405941:	inc    r14
  405944:	cmp    ebp,0x7
  405947:	jg     405920 <rb_strcasecmp@plt+0x3400>
  405949:	lea    r15,[r14-0x1]
  40594d:	cmp    ebp,0x5
  405950:	jl     405a4b <rb_strcasecmp@plt+0x352b>
  405956:	movsx  eax,BYTE PTR [r14]
  40595a:	mov    ecx,0xff
  40595f:	mov    edx,0x8
  405964:	jmp    405a6b <rb_strcasecmp@plt+0x354b>
  405969:	mov    r10,rdi
  40596c:	test   ebp,ebp
  40596e:	jle    405aca <rb_strcasecmp@plt+0x35aa>
  405974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40597e:	xchg   ax,ax
  405980:	movzx  edx,BYTE PTR [r15]
  405984:	lea    eax,[rdx-0x22]
  405987:	cmp    al,0x3a
  405989:	ja     4059b9 <rb_strcasecmp@plt+0x3499>
  40598b:	movzx  eax,al
  40598e:	bt     r11,rax
  405992:	jae    4059b9 <rb_strcasecmp@plt+0x3499>
  405994:	lea    rax,[r10+0x1]
  405998:	cmp    rax,r9
  40599b:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  4059a1:	mov    BYTE PTR [r10],0x5c
  4059a5:	mov    BYTE PTR [r10+0x1],dl
  4059a9:	add    r10,0x2
  4059ad:	inc    r15
  4059b0:	dec    ebp
  4059b2:	jg     405980 <rb_strcasecmp@plt+0x3460>
  4059b4:	jmp    405aca <rb_strcasecmp@plt+0x35aa>
  4059b9:	movzx  eax,dl
  4059bc:	lea    edi,[rax-0x21]
  4059bf:	cmp    edi,0x5e
  4059c2:	jb     405a37 <rb_strcasecmp@plt+0x3517>
  4059c4:	lea    rdi,[r10+0x3]
  4059c8:	cmp    rdi,r9
  4059cb:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  4059d1:	mov    BYTE PTR [r10],0x5c
  4059d5:	lea    edi,[rax+rax*4]
  4059d8:	lea    edi,[rax+rdi*8]
  4059db:	shr    edi,0xc
  4059de:	lea    rcx,[rip+0x4d4b]        # 40a730 <rb_strcasecmp@plt+0x8210>
  4059e5:	mov    r8,rcx
  4059e8:	movzx  ebx,BYTE PTR [rdi+rcx*1]
  4059ec:	mov    BYTE PTR [r10+0x1],bl
  4059f0:	imul   edi,edi,0x64
  4059f3:	mov    ebx,edx
  4059f5:	sub    bl,dil
  4059f8:	movzx  edi,bl
  4059fb:	imul   edi,edi,0xcd
  405a01:	shr    edi,0xb
  405a04:	movzx  ebx,BYTE PTR [rdi+rcx*1]
  405a08:	mov    BYTE PTR [r10+0x2],bl
  405a0c:	mov    rcx,QWORD PTR [rsp+0x10]
  405a11:	imul   eax,eax,0xcd
  405a17:	shr    eax,0xa
  405a1a:	and    eax,0xfffffffe
  405a1d:	lea    eax,[rax+rax*4]
  405a20:	sub    dl,al
  405a22:	movzx  edx,dl
  405a25:	movzx  edx,BYTE PTR [rdx+r8*1]
  405a2a:	mov    BYTE PTR [r10+0x3],dl
  405a2e:	add    r10,0x4
  405a32:	jmp    4059ad <rb_strcasecmp@plt+0x348d>
  405a37:	cmp    r10,r9
  405a3a:	jae    405aed <rb_strcasecmp@plt+0x35cd>
  405a40:	mov    BYTE PTR [r10],dl
  405a43:	inc    r10
  405a46:	jmp    4059ad <rb_strcasecmp@plt+0x348d>
  405a4b:	test   ebp,ebp
  405a4d:	jle    405ada <rb_strcasecmp@plt+0x35ba>
  405a53:	movzx  eax,BYTE PTR [r14]
  405a57:	shr    eax,0x4
  405a5a:	mov    ecx,0xf
  405a5f:	mov    edx,0x4
  405a64:	lea    rsi,[rip+0x4cae]        # 40a719 <rb_strcasecmp@plt+0x81f9>
  405a6b:	add    r15,0x2
  405a6f:	sub    edx,ebp
  405a71:	shlx   edx,ecx,edx
  405a76:	and    edx,eax
  405a78:	mov    rdi,rbx
  405a7b:	xor    eax,eax
  405a7d:	call   402250 <sprintf@plt>
  405a82:	cdqe   
  405a84:	add    rbx,rax
  405a87:	mov    rdi,rbx
  405a8a:	lea    rsi,[rip+0x4c8c]        # 40a71d <rb_strcasecmp@plt+0x81fd>
  405a91:	mov    edx,r13d
  405a94:	xor    eax,eax
  405a96:	call   402250 <sprintf@plt>
  405a9b:	cdqe   
  405a9d:	add    rax,rbx
  405aa0:	mov    r10,QWORD PTR [rsp+0x8]
  405aa5:	sub    rax,r10
  405aa8:	test   eax,eax
  405aaa:	mov    rcx,QWORD PTR [rsp+0x10]
  405aaf:	lea    rsi,[rip+0x4c5e]        # 40a714 <rb_strcasecmp@plt+0x81f4>
  405ab6:	js     405aed <rb_strcasecmp@plt+0x35cd>
  405ab8:	cdqe   
  405aba:	add    r10,rax
  405abd:	mov    r9,r12
  405ac0:	movabs r11,0x4000000420010c5
  405aca:	mov    bl,BYTE PTR [r15]
  405acd:	mov    r14,r15
  405ad0:	test   bl,bl
  405ad2:	jne    40583a <rb_strcasecmp@plt+0x331a>
  405ad8:	jmp    405b0f <rb_strcasecmp@plt+0x35ef>
  405ada:	mov    r15,r14
  405add:	jmp    405a87 <rb_strcasecmp@plt+0x3567>
  405adf:	mov    r8d,DWORD PTR [rsp+0x4]
  405ae4:	test   r8d,r8d
  405ae7:	jg     4057b2 <rb_strcasecmp@plt+0x3292>
  405aed:	call   402390 <__errno_location@plt>
  405af2:	mov    DWORD PTR [rax],0x5a
  405af8:	mov    eax,0xffffffff
  405afd:	add    rsp,0x138
  405b04:	pop    rbx
  405b05:	pop    r12
  405b07:	pop    r13
  405b09:	pop    r14
  405b0b:	pop    r15
  405b0d:	pop    rbp
  405b0e:	ret    
  405b0f:	cmp    r10,rcx
  405b12:	mov    eax,DWORD PTR [rsp]
  405b15:	mov    r8d,DWORD PTR [rsp+0x4]
  405b1a:	jne    4057b9 <rb_strcasecmp@plt+0x3299>
  405b20:	jmp    4057a9 <rb_strcasecmp@plt+0x3289>
  405b25:	call   402390 <__errno_location@plt>
  405b2a:	mov    DWORD PTR [rax],0x16
  405b30:	jmp    405af8 <rb_strcasecmp@plt+0x35d8>
  405b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b3c:	nop    DWORD PTR [rax+0x0]
  405b40:	push   rax
  405b41:	mov    rax,rdi
  405b44:	cmp    rdi,rsi
  405b47:	jae    405bac <rb_strcasecmp@plt+0x368c>
  405b49:	mov    r8d,0x21
  405b4f:	mov    r9,rdi
  405b52:	jmp    405b6b <rb_strcasecmp@plt+0x364b>
  405b54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b5e:	xchg   ax,ax
  405b60:	add    rax,rdx
  405b63:	mov    r9,rax
  405b66:	cmp    rax,rsi
  405b69:	jae    405bac <rb_strcasecmp@plt+0x368c>
  405b6b:	lea    rax,[r9+0x1]
  405b6f:	movzx  edx,BYTE PTR [r9]
  405b73:	test   rdx,rdx
  405b76:	je     405bac <rb_strcasecmp@plt+0x368c>
  405b78:	mov    ecx,edx
  405b7a:	and    cl,0xc0
  405b7d:	je     405b60 <rb_strcasecmp@plt+0x3640>
  405b7f:	cmp    cl,0x40
  405b82:	jne    405ba0 <rb_strcasecmp@plt+0x3680>
  405b84:	cmp    dl,0x41
  405b87:	jne    405bb1 <rb_strcasecmp@plt+0x3691>
  405b89:	movzx  ecx,BYTE PTR [rax]
  405b8c:	lea    rdx,[rcx+0x7]
  405b90:	shr    rdx,0x3
  405b94:	inc    rdx
  405b97:	test   rcx,rcx
  405b9a:	cmove  rdx,r8
  405b9e:	jmp    405b60 <rb_strcasecmp@plt+0x3640>
  405ba0:	cmp    cl,0xc0
  405ba3:	jne    405bb1 <rb_strcasecmp@plt+0x3691>
  405ba5:	add    r9,0x2
  405ba9:	mov    rax,r9
  405bac:	cmp    rax,rsi
  405baf:	jbe    405bc3 <rb_strcasecmp@plt+0x36a3>
  405bb1:	call   402390 <__errno_location@plt>
  405bb6:	mov    DWORD PTR [rax],0x5a
  405bbc:	mov    eax,0xffffffff
  405bc1:	pop    rcx
  405bc2:	ret    
  405bc3:	sub    eax,edi
  405bc5:	pop    rcx
  405bc6:	ret    
  405bc7:	nop    WORD PTR [rax+rax*1+0x0]
  405bd0:	movzx  ecx,BYTE PTR [rdi]
  405bd3:	shl    ecx,0x8
  405bd6:	movzx  eax,BYTE PTR [rdi+0x1]
  405bda:	or     eax,ecx
  405bdc:	ret    
  405bdd:	nop    DWORD PTR [rax]
  405be0:	movzx  eax,BYTE PTR [rdi]
  405be3:	shl    rax,0x18
  405be7:	movzx  ecx,BYTE PTR [rdi+0x1]
  405beb:	shl    rcx,0x10
  405bef:	or     rcx,rax
  405bf2:	movzx  edx,BYTE PTR [rdi+0x2]
  405bf6:	shl    rdx,0x8
  405bfa:	or     rdx,rcx
  405bfd:	movzx  eax,BYTE PTR [rdi+0x3]
  405c01:	or     rax,rdx
  405c04:	ret    
  405c05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c0f:	nop
  405c10:	movbe  WORD PTR [rsi],di
  405c15:	ret    
  405c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c20:	movbe  DWORD PTR [rsi],edi
  405c24:	ret    
  405c25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c2f:	nop
  405c30:	push   rbp
  405c31:	push   r15
  405c33:	push   r14
  405c35:	push   r13
  405c37:	push   r12
  405c39:	push   rbx
  405c3a:	sub    rsp,0x1f8
  405c41:	mov    eax,0xffffffff
  405c46:	test   rcx,rcx
  405c49:	je     4061b0 <rb_strcasecmp@plt+0x3c90>
  405c4f:	cmp    r8d,0xc
  405c53:	jl     4061b0 <rb_strcasecmp@plt+0x3c90>
  405c59:	mov    DWORD PTR [rcx+0x8],0x0
  405c60:	mov    QWORD PTR [rcx],0x10000
  405c67:	mov    QWORD PTR [rsp+0x150],rcx
  405c6f:	mov    QWORD PTR [rsp+0x158],0x0
  405c7b:	add    r8d,0xfffffff0
  405c7f:	js     4061b0 <rb_strcasecmp@plt+0x3c90>
  405c85:	mov    r13,rdi
  405c88:	mov    DWORD PTR [rsp+0x30],edx
  405c8c:	mov    DWORD PTR [rsp+0x34],esi
  405c90:	lea    rax,[rsp+0x51]
  405c95:	mov    QWORD PTR [rsp+0x8],rax
  405c9a:	mov    dl,BYTE PTR [rdi]
  405c9c:	test   dl,dl
  405c9e:	mov    QWORD PTR [rsp+0x38],rcx
  405ca3:	mov    DWORD PTR [rsp+0x20],r8d
  405ca8:	je     4060e5 <rb_strcasecmp@plt+0x3bc5>
  405cae:	lea    rcx,[rsp+0x50]
  405cb3:	lea    rbp,[rip+0x4a76]        # 40a730 <rb_strcasecmp@plt+0x8210>
  405cba:	mov    QWORD PTR [rsp+0x10],rcx
  405cbf:	mov    r12,r13
  405cc2:	xor    eax,eax
  405cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cce:	xchg   ax,ax
  405cd0:	lea    r13,[r12+0x1]
  405cd5:	movsx  ebx,dl
  405cd8:	test   eax,eax
  405cda:	je     405dc0 <rb_strcasecmp@plt+0x38a0>
  405ce0:	cmp    dl,0x5b
  405ce3:	je     405e0b <rb_strcasecmp@plt+0x38eb>
  405ce9:	mov    edx,0xb
  405cee:	mov    rdi,rbp
  405cf1:	mov    esi,ebx
  405cf3:	call   4020c0 <memchr@plt>
  405cf8:	test   rax,rax
  405cfb:	je     405dd3 <rb_strcasecmp@plt+0x38b3>
  405d01:	movsx  esi,BYTE PTR [r12+0x1]
  405d07:	mov    r14d,0x5a
  405d0d:	test   esi,esi
  405d0f:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405d15:	mov    r15,rax
  405d18:	mov    edx,0xb
  405d1d:	lea    rdi,[rip+0x4a0c]        # 40a730 <rb_strcasecmp@plt+0x8210>
  405d24:	call   4020c0 <memchr@plt>
  405d29:	test   rax,rax
  405d2c:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405d32:	movsx  esi,BYTE PTR [r12+0x2]
  405d38:	test   esi,esi
  405d3a:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405d40:	mov    rbp,rax
  405d43:	mov    edx,0xb
  405d48:	lea    r13,[rip+0x49e1]        # 40a730 <rb_strcasecmp@plt+0x8210>
  405d4f:	mov    rdi,r13
  405d52:	call   4020c0 <memchr@plt>
  405d57:	test   rax,rax
  405d5a:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405d60:	mov    rbx,rax
  405d63:	movsxd rax,r13d
  405d66:	sub    r15,rax
  405d69:	movabs rax,0x6400000000
  405d73:	imul   r15,rax
  405d77:	sub    rbp,r13
  405d7a:	lea    rax,[rbp*4+0x0]
  405d82:	add    rax,rbp
  405d85:	shl    rax,0x21
  405d89:	add    rax,r15
  405d8c:	shr    rax,0x20
  405d90:	sub    eax,r13d
  405d93:	add    ebx,eax
  405d95:	cmp    ebx,0xff
  405d9b:	jg     4061a3 <rb_strcasecmp@plt+0x3c83>
  405da1:	add    r12,0x3
  405da5:	mov    r13,r12
  405da8:	lea    rbp,[rip+0x4981]        # 40a730 <rb_strcasecmp@plt+0x8210>
  405daf:	jmp    405dd3 <rb_strcasecmp@plt+0x38b3>
  405db1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  405dc0:	mov    eax,0x1
  405dc5:	cmp    dl,0x5c
  405dc8:	je     405df6 <rb_strcasecmp@plt+0x38d6>
  405dca:	cmp    dl,0x2e
  405dcd:	je     405f76 <rb_strcasecmp@plt+0x3a56>
  405dd3:	mov    rax,QWORD PTR [rsp+0x8]
  405dd8:	lea    rcx,[rsp+0x14f]
  405de0:	cmp    rax,rcx
  405de3:	jae    40619d <rb_strcasecmp@plt+0x3c7d>
  405de9:	lea    rcx,[rax+0x1]
  405ded:	mov    QWORD PTR [rsp+0x8],rcx
  405df2:	mov    BYTE PTR [rax],bl
  405df4:	xor    eax,eax
  405df6:	movzx  edx,BYTE PTR [r13+0x0]
  405dfb:	mov    r12,r13
  405dfe:	test   dl,dl
  405e00:	jne    405cd0 <rb_strcasecmp@plt+0x37b0>
  405e06:	jmp    4060ec <rb_strcasecmp@plt+0x3bcc>
  405e0b:	mov    rdi,r13
  405e0e:	mov    esi,0x5d
  405e13:	call   402330 <strchr@plt>
  405e18:	test   rax,rax
  405e1b:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405e21:	mov    rbx,rax
  405e24:	lea    rcx,[rax+0x2]
  405e28:	mov    QWORD PTR [rsp+0x40],0x0
  405e31:	mov    rax,rcx
  405e34:	sub    rax,r13
  405e37:	cmp    rax,0x2
  405e3b:	jl     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405e41:	cmp    BYTE PTR [r12+0x1],0x78
  405e47:	jne    4061c2 <rb_strcasecmp@plt+0x3ca2>
  405e4d:	mov    QWORD PTR [rsp+0x18],rcx
  405e52:	lea    r13,[r12+0x2]
  405e57:	call   402230 <__ctype_b_loc@plt>
  405e5c:	mov    rcx,QWORD PTR [rax]
  405e5f:	movzx  esi,BYTE PTR [r13+0x0]
  405e64:	test   BYTE PTR [rcx+rsi*2+0x1],0x10
  405e69:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405e6f:	xor    r9d,r9d
  405e72:	lea    rcx,[rsp+0x14f]
  405e7a:	lea    r15,[rsp+0x10]
  405e7f:	cmp    rcx,r15
  405e82:	mov    r10,QWORD PTR [rsp+0x18]
  405e87:	jbe    405fdc <rb_strcasecmp@plt+0x3abc>
  405e8d:	mov    ebp,0x0
  405e92:	mov    ecx,0x0
  405e97:	cmp    r12,rbx
  405e9a:	jae    406030 <rb_strcasecmp@plt+0x3b10>
  405ea0:	add    r12,0x3
  405ea4:	xor    ebp,ebp
  405ea6:	mov    r13,r12
  405ea9:	xor    r14d,r14d
  405eac:	xor    r9d,r9d
  405eaf:	xor    edi,edi
  405eb1:	xor    r8d,r8d
  405eb4:	lea    r15,[rsp+0x10]
  405eb9:	movsx  ecx,sil
  405ebd:	cmp    ecx,0x2f
  405ec0:	je     405efc <rb_strcasecmp@plt+0x39dc>
  405ec2:	cmp    ecx,0x5d
  405ec5:	je     405fe2 <rb_strcasecmp@plt+0x3ac2>
  405ecb:	mov    rbx,QWORD PTR [rax]
  405ece:	movzx  edx,sil
  405ed2:	movzx  ebx,WORD PTR [rbx+rdx*2]
  405ed6:	test   r8d,r8d
  405ed9:	je     405f28 <rb_strcasecmp@plt+0x3a08>
  405edb:	test   ebx,0x800
  405ee1:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405ee7:	test   rdi,rdi
  405eea:	jne    405f02 <rb_strcasecmp@plt+0x39e2>
  405eec:	cmp    sil,0x30
  405ef0:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405ef6:	lea    rdi,[r13-0x1]
  405efa:	jmp    405f02 <rb_strcasecmp@plt+0x39e2>
  405efc:	mov    r8d,0x1
  405f02:	xor    ecx,ecx
  405f04:	cmp    r13,r10
  405f07:	jae    406030 <rb_strcasecmp@plt+0x3b10>
  405f0d:	lea    rdx,[rsp+0x14f]
  405f15:	cmp    r15,rdx
  405f18:	jae    406030 <rb_strcasecmp@plt+0x3b10>
  405f1e:	movzx  esi,BYTE PTR [r13+0x0]
  405f23:	inc    r13
  405f26:	jmp    405eb9 <rb_strcasecmp@plt+0x3999>
  405f28:	test   ebx,0x1000
  405f2e:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405f34:	add    ebp,0x4
  405f37:	cmp    ebp,0x100
  405f3d:	jg     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405f43:	mov    edx,r9d
  405f46:	shl    edx,0x4
  405f49:	movsxd rcx,ecx
  405f4c:	lea    rsi,[rip+0x47ed]        # 40a740 <rb_strcasecmp@plt+0x8220>
  405f53:	movsx  r9d,BYTE PTR [rcx+rsi*1]
  405f58:	add    r9d,edx
  405f5b:	add    r14d,0x4
  405f5f:	xor    r8d,r8d
  405f62:	cmp    r14d,0x8
  405f66:	jne    405f02 <rb_strcasecmp@plt+0x39e2>
  405f68:	mov    BYTE PTR [r15],r9b
  405f6b:	inc    r15
  405f6e:	xor    r8d,r8d
  405f71:	xor    r14d,r14d
  405f74:	jmp    405f02 <rb_strcasecmp@plt+0x39e2>
  405f76:	mov    rdx,QWORD PTR [rsp+0x10]
  405f7b:	mov    rax,rdx
  405f7e:	mov    ecx,0xffffffff
  405f83:	xor    rax,rcx
  405f86:	add    rax,QWORD PTR [rsp+0x8]
  405f8b:	mov    r14d,0x5a
  405f91:	test   al,0xc0
  405f93:	jne    4061a3 <rb_strcasecmp@plt+0x3c83>
  405f99:	lea    rcx,[rsp+0x14f]
  405fa1:	cmp    rcx,rdx
  405fa4:	jbe    4061a3 <rb_strcasecmp@plt+0x3c83>
  405faa:	mov    BYTE PTR [rdx],al
  405fac:	mov    cl,BYTE PTR [r13+0x0]
  405fb0:	test   cl,cl
  405fb2:	je     406486 <rb_strcasecmp@plt+0x3f66>
  405fb8:	test   eax,eax
  405fba:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405fc0:	cmp    cl,0x2e
  405fc3:	je     4061a3 <rb_strcasecmp@plt+0x3c83>
  405fc9:	mov    r15,QWORD PTR [rsp+0x8]
  405fce:	lea    rax,[r15+0x1]
  405fd2:	mov    QWORD PTR [rsp+0x8],rax
  405fd7:	jmp    4060ba <rb_strcasecmp@plt+0x3b9a>
  405fdc:	xor    ebp,ebp
  405fde:	xor    ecx,ecx
  405fe0:	jmp    406030 <rb_strcasecmp@plt+0x3b10>
  405fe2:	test   r8d,r8d
  405fe5:	je     4060d5 <rb_strcasecmp@plt+0x3bb5>
  405feb:	test   rdi,rdi
  405fee:	je     4061c2 <rb_strcasecmp@plt+0x3ca2>
  405ff4:	mov    ebx,r9d
  405ff7:	lea    rsi,[rsp+0x40]
  405ffc:	mov    edx,0xa
  406001:	call   4022f0 <strtol@plt>
  406006:	mov    rcx,rax
  406009:	mov    rax,QWORD PTR [rsp+0x40]
  40600e:	cmp    BYTE PTR [rax],0x5d
  406011:	jne    4061c2 <rb_strcasecmp@plt+0x3ca2>
  406017:	mov    r9d,ebx
  40601a:	mov    r10,QWORD PTR [rsp+0x18]
  40601f:	test   r14d,r14d
  406022:	je     406030 <rb_strcasecmp@plt+0x3b10>
  406024:	mov    eax,r9d
  406027:	shl    al,0x4
  40602a:	mov    BYTE PTR [r15],al
  40602d:	inc    r15
  406030:	mov    r14d,0x5a
  406036:	cmp    r13,r10
  406039:	jae    4061a3 <rb_strcasecmp@plt+0x3c83>
  40603f:	lea    rax,[rsp+0x14f]
  406047:	cmp    r15,rax
  40604a:	mov    rsi,QWORD PTR [rsp+0x10]
  40604f:	jae    4061a3 <rb_strcasecmp@plt+0x3c83>
  406055:	test   ecx,ecx
  406057:	jle    406087 <rb_strcasecmp@plt+0x3b67>
  406059:	lea    eax,[rcx+0x3]
  40605c:	and    eax,0xfffffffc
  40605f:	cmp    eax,ebp
  406061:	jne    4061c2 <rb_strcasecmp@plt+0x3ca2>
  406067:	mov    eax,ecx
  406069:	sub    eax,ebp
  40606b:	add    al,0x8
  40606d:	mov    edx,0xff
  406072:	shrx   eax,edx,eax
  406077:	mov    r14d,0x16
  40607d:	test   eax,r9d
  406080:	je     406089 <rb_strcasecmp@plt+0x3b69>
  406082:	jmp    4061a3 <rb_strcasecmp@plt+0x3c83>
  406087:	mov    ecx,ebp
  406089:	cmp    ecx,0x100
  40608f:	mov    BYTE PTR [rsi],0x41
  406092:	mov    eax,0x0
  406097:	cmove  ecx,eax
  40609a:	mov    rax,QWORD PTR [rsp+0x8]
  40609f:	mov    BYTE PTR [rax],cl
  4060a1:	lea    rax,[r15+0x1]
  4060a5:	mov    QWORD PTR [rsp+0x8],rax
  4060aa:	mov    cl,BYTE PTR [r13+0x0]
  4060ae:	cmp    cl,0x2e
  4060b1:	jne    406471 <rb_strcasecmp@plt+0x3f51>
  4060b7:	inc    r13
  4060ba:	mov    dl,BYTE PTR [r13+0x0]
  4060be:	mov    rcx,r15
  4060c1:	test   dl,dl
  4060c3:	lea    rbp,[rip+0x4666]        # 40a730 <rb_strcasecmp@plt+0x8210>
  4060ca:	jne    405cba <rb_strcasecmp@plt+0x379a>
  4060d0:	jmp    406469 <rb_strcasecmp@plt+0x3f49>
  4060d5:	xor    ecx,ecx
  4060d7:	test   r14d,r14d
  4060da:	jne    406024 <rb_strcasecmp@plt+0x3b04>
  4060e0:	jmp    406030 <rb_strcasecmp@plt+0x3b10>
  4060e5:	lea    rdx,[rsp+0x50]
  4060ea:	jmp    4060f6 <rb_strcasecmp@plt+0x3bd6>
  4060ec:	mov    rax,QWORD PTR [rsp+0x8]
  4060f1:	mov    rdx,QWORD PTR [rsp+0x10]
  4060f6:	mov    ecx,0xffffffff
  4060fb:	xor    ecx,edx
  4060fd:	add    eax,ecx
  4060ff:	mov    r14d,0x5a
  406105:	test   al,0xc0
  406107:	jne    4061a3 <rb_strcasecmp@plt+0x3c83>
  40610d:	mov    r15,rdx
  406110:	mov    r14d,0x5a
  406116:	lea    rcx,[rsp+0x14f]
  40611e:	cmp    r15,rcx
  406121:	jae    4061a3 <rb_strcasecmp@plt+0x3c83>
  406127:	mov    BYTE PTR [r15],al
  40612a:	test   eax,eax
  40612c:	je     40614c <rb_strcasecmp@plt+0x3c2c>
  40612e:	mov    rax,QWORD PTR [rsp+0x8]
  406133:	lea    rcx,[rsp+0x14f]
  40613b:	cmp    rax,rcx
  40613e:	jae    4061a3 <rb_strcasecmp@plt+0x3c83>
  406140:	lea    rcx,[rax+0x1]
  406144:	mov    QWORD PTR [rsp+0x8],rcx
  406149:	mov    BYTE PTR [rax],0x0
  40614c:	mov    rax,QWORD PTR [rsp+0x8]
  406151:	lea    rcx,[rsp+0x50]
  406156:	sub    rax,rcx
  406159:	cmp    rax,0x100
  40615f:	jge    4061a3 <rb_strcasecmp@plt+0x3c83>
  406161:	mov    rdi,QWORD PTR [rsp+0x38]
  406166:	lea    r12,[rdi+0xc]
  40616a:	movsxd rdx,DWORD PTR [rsp+0x20]
  40616f:	mov    r14,QWORD PTR [rsp+0x150]
  406177:	xor    eax,eax
  406179:	test   r14,r14
  40617c:	je     4061ca <rb_strcasecmp@plt+0x3caa>
  40617e:	lea    rbp,[rsp+0x150]
  406186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406190:	cmp    QWORD PTR [rbp+0x8],0x0
  406195:	lea    rbp,[rbp+0x8]
  406199:	jne    406190 <rb_strcasecmp@plt+0x3c70>
  40619b:	jmp    4061cc <rb_strcasecmp@plt+0x3cac>
  40619d:	mov    r14d,0x5a
  4061a3:	call   402390 <__errno_location@plt>
  4061a8:	mov    DWORD PTR [rax],r14d
  4061ab:	mov    eax,0xffffffff
  4061b0:	add    rsp,0x1f8
  4061b7:	pop    rbx
  4061b8:	pop    r12
  4061ba:	pop    r13
  4061bc:	pop    r14
  4061be:	pop    r15
  4061c0:	pop    rbp
  4061c1:	ret    
  4061c2:	mov    r14d,0x16
  4061c8:	jmp    4061a3 <rb_strcasecmp@plt+0x3c83>
  4061ca:	xor    ebp,ebp
  4061cc:	add    rdx,r12
  4061cf:	lea    rcx,[rsp+0x50]
  4061d4:	mov    r8d,0x21
  4061da:	movzx  esi,BYTE PTR [rcx]
  4061dd:	cmp    esi,0xc0
  4061e3:	jae    406449 <rb_strcasecmp@plt+0x3f29>
  4061e9:	mov    ebx,esi
  4061eb:	and    bl,0xc0
  4061ee:	cmp    bl,0x40
  4061f1:	je     4061ff <rb_strcasecmp@plt+0x3cdf>
  4061f3:	mov    edi,esi
  4061f5:	cmp    bl,0xc0
  4061f8:	jne    40621b <rb_strcasecmp@plt+0x3cfb>
  4061fa:	jmp    406459 <rb_strcasecmp@plt+0x3f39>
  4061ff:	cmp    sil,0x41
  406203:	jne    406459 <rb_strcasecmp@plt+0x3f39>
  406209:	movzx  ebx,BYTE PTR [rcx+0x1]
  40620d:	lea    edi,[rbx+0x7]
  406210:	shr    edi,0x3
  406213:	inc    edi
  406215:	test   ebx,ebx
  406217:	cmove  edi,r8d
  40621b:	lea    eax,[rdi+rax*1]
  40621e:	add    eax,0x1
  406221:	cmp    eax,0x100
  406226:	jge    406449 <rb_strcasecmp@plt+0x3f29>
  40622c:	inc    edi
  40622e:	mov    edi,edi
  406230:	add    rcx,rdi
  406233:	test   sil,sil
  406236:	jne    4061da <rb_strcasecmp@plt+0x3cba>
  406238:	mov    QWORD PTR [rsp+0x20],rdx
  40623d:	lea    r13,[rsp+0x50]
  406242:	mov    DWORD PTR [rsp+0x2c],0x1
  40624a:	mov    QWORD PTR [rsp+0x48],r12
  40624f:	mov    QWORD PTR [rsp+0x18],rbp
  406254:	mov    al,BYTE PTR [r13+0x0]
  406258:	test   r14,r14
  40625b:	je     4063c1 <rb_strcasecmp@plt+0x3ea1>
  406261:	test   al,al
  406263:	je     4063c1 <rb_strcasecmp@plt+0x3ea1>
  406269:	mov    BYTE PTR [rsp+0x10],al
  40626d:	mov    r15d,0x2
  406273:	lea    r8,[rsp+0x158]
  40627b:	cmp    r8,rbp
  40627e:	jae    40636f <rb_strcasecmp@plt+0x3e4f>
  406284:	mov    r10,QWORD PTR [r8]
  406287:	mov    r9b,BYTE PTR [r10]
  40628a:	lea    eax,[r9-0x1]
  40628e:	cmp    al,0x3e
  406290:	jbe    4062b8 <rb_strcasecmp@plt+0x3d98>
  406292:	add    r8,0x8
  406296:	cmp    r8,rbp
  406299:	jb     406284 <rb_strcasecmp@plt+0x3d64>
  40629b:	jmp    40636f <rb_strcasecmp@plt+0x3e4f>
  4062a0:	movzx  eax,r9b
  4062a4:	mov    r9b,BYTE PTR [rax+r10*1+0x1]
  4062a9:	add    r10,rax
  4062ac:	add    r10,0x1
  4062b0:	lea    eax,[r9-0x1]
  4062b4:	cmp    al,0x3f
  4062b6:	jae    406292 <rb_strcasecmp@plt+0x3d72>
  4062b8:	mov    r11,r10
  4062bb:	sub    r11,r14
  4062be:	cmp    r11,0x3fff
  4062c5:	jg     406292 <rb_strcasecmp@plt+0x3d72>
  4062c7:	mov    eax,r9d
  4062ca:	mov    rdi,r13
  4062cd:	mov    rdx,r10
  4062d0:	test   al,al
  4062d2:	je     4062a0 <rb_strcasecmp@plt+0x3d80>
  4062d4:	inc    rdx
  4062d7:	mov    ecx,eax
  4062d9:	and    cl,0xc0
  4062dc:	cmp    cl,0xc0
  4062df:	jne    4062ff <rb_strcasecmp@plt+0x3ddf>
  4062e1:	and    al,0x3f
  4062e3:	movzx  eax,al
  4062e6:	shl    rax,0x8
  4062ea:	movzx  ecx,BYTE PTR [rdx]
  4062ed:	or     rcx,rax
  4062f0:	lea    rdx,[r14+rcx*1]
  4062f4:	movzx  eax,BYTE PTR [r14+rcx*1]
  4062f9:	test   al,al
  4062fb:	jne    4062d4 <rb_strcasecmp@plt+0x3db4>
  4062fd:	jmp    4062a0 <rb_strcasecmp@plt+0x3d80>
  4062ff:	test   cl,cl
  406301:	jne    406369 <rb_strcasecmp@plt+0x3e49>
  406303:	cmp    al,BYTE PTR [rdi]
  406305:	jne    4062a0 <rb_strcasecmp@plt+0x3d80>
  406307:	mov    bl,BYTE PTR [rdi+0x1]
  40630a:	inc    rdi
  40630d:	movzx  ecx,al
  406310:	movzx  eax,bl
  406313:	lea    ebx,[rax-0x41]
  406316:	lea    esi,[rax+0x20]
  406319:	cmp    ebx,0x1a
  40631c:	cmovae esi,eax
  40631f:	movzx  eax,BYTE PTR [rdx]
  406322:	lea    ebx,[rax-0x41]
  406325:	lea    r15d,[rax+0x20]
  406329:	cmp    ebx,0x1a
  40632c:	cmovae r15d,eax
  406330:	cmp    esi,r15d
  406333:	mov    r15d,0x2
  406339:	jne    4062a0 <rb_strcasecmp@plt+0x3d80>
  40633f:	inc    rdx
  406342:	movzx  ebx,BYTE PTR [rdi+0x1]
  406346:	inc    rdi
  406349:	dec    ecx
  40634b:	jne    406310 <rb_strcasecmp@plt+0x3df0>
  40634d:	mov    al,BYTE PTR [rdx]
  40634f:	test   bl,bl
  406351:	jne    4062d0 <rb_strcasecmp@plt+0x3db0>
  406357:	test   al,al
  406359:	jne    4062a0 <rb_strcasecmp@plt+0x3d80>
  40635f:	test   r11d,r11d
  406362:	js     406377 <rb_strcasecmp@plt+0x3e57>
  406364:	jmp    4064ca <rb_strcasecmp@plt+0x3faa>
  406369:	mov    r15d,0x5a
  40636f:	call   402390 <__errno_location@plt>
  406374:	mov    DWORD PTR [rax],r15d
  406377:	lea    rax,[rsp+0x1e8]
  40637f:	cmp    QWORD PTR [rsp+0x18],rax
  406384:	jae    4063bd <rb_strcasecmp@plt+0x3e9d>
  406386:	mov    rax,r12
  406389:	sub    rax,r14
  40638c:	cmp    rax,0x3fff
  406392:	mov    eax,DWORD PTR [rsp+0x2c]
  406396:	jg     4063bd <rb_strcasecmp@plt+0x3e9d>
  406398:	test   eax,eax
  40639a:	je     4063bd <rb_strcasecmp@plt+0x3e9d>
  40639c:	mov    rax,QWORD PTR [rsp+0x18]
  4063a1:	mov    QWORD PTR [rax],r12
  4063a4:	mov    QWORD PTR [rax+0x8],0x0
  4063ac:	add    rax,0x8
  4063b0:	mov    QWORD PTR [rsp+0x18],rax
  4063b5:	mov    DWORD PTR [rsp+0x2c],0x0
  4063bd:	mov    al,BYTE PTR [rsp+0x10]
  4063c1:	cmp    al,0xbf
  4063c3:	ja     40643c <rb_strcasecmp@plt+0x3f1c>
  4063c5:	movzx  ecx,BYTE PTR [r13+0x0]
  4063ca:	mov    edx,ecx
  4063cc:	and    dl,0xc0
  4063cf:	mov    eax,0xffffffff
  4063d4:	cmp    dl,0xc0
  4063d7:	je     4063fe <rb_strcasecmp@plt+0x3ede>
  4063d9:	cmp    dl,0x40
  4063dc:	jne    4063fc <rb_strcasecmp@plt+0x3edc>
  4063de:	cmp    cl,0x41
  4063e1:	jne    4063fe <rb_strcasecmp@plt+0x3ede>
  4063e3:	movzx  ecx,BYTE PTR [r13+0x1]
  4063e8:	lea    eax,[rcx+0x7]
  4063eb:	shr    eax,0x3
  4063ee:	inc    eax
  4063f0:	test   ecx,ecx
  4063f2:	mov    ecx,0x21
  4063f7:	cmove  eax,ecx
  4063fa:	jmp    4063fe <rb_strcasecmp@plt+0x3ede>
  4063fc:	mov    eax,ecx
  4063fe:	movsxd rbx,eax
  406401:	lea    r15,[r12+rbx*1]
  406405:	add    r15,0x1
  406409:	cmp    r15,QWORD PTR [rsp+0x20]
  40640e:	jae    40643c <rb_strcasecmp@plt+0x3f1c>
  406410:	lea    rdx,[rbx+0x1]
  406414:	mov    rdi,r12
  406417:	mov    rsi,r13
  40641a:	call   402510 <memcpy@plt>
  40641f:	add    r13,rbx
  406422:	add    r13,0x1
  406426:	mov    r12,r15
  406429:	test   ebx,ebx
  40642b:	jne    406254 <rb_strcasecmp@plt+0x3d34>
  406431:	cmp    r15,QWORD PTR [rsp+0x20]
  406436:	jbe    4064f2 <rb_strcasecmp@plt+0x3fd2>
  40643c:	test   r14,r14
  40643f:	je     406449 <rb_strcasecmp@plt+0x3f29>
  406441:	mov    QWORD PTR [rbp+0x0],0x0
  406449:	call   402390 <__errno_location@plt>
  40644e:	mov    DWORD PTR [rax],0x5a
  406454:	jmp    4061ab <rb_strcasecmp@plt+0x3c8b>
  406459:	call   402390 <__errno_location@plt>
  40645e:	mov    DWORD PTR [rax],0x16
  406464:	jmp    4061ab <rb_strcasecmp@plt+0x3c8b>
  406469:	mov    rdx,r15
  40646c:	jmp    4060f6 <rb_strcasecmp@plt+0x3bd6>
  406471:	mov    r14d,0x16
  406477:	test   cl,cl
  406479:	jne    4061a3 <rb_strcasecmp@plt+0x3c83>
  40647f:	xor    eax,eax
  406481:	jmp    406110 <rb_strcasecmp@plt+0x3bf0>
  406486:	test   eax,eax
  406488:	je     4064ac <rb_strcasecmp@plt+0x3f8c>
  40648a:	mov    rax,QWORD PTR [rsp+0x8]
  40648f:	lea    rcx,[rsp+0x14f]
  406497:	cmp    rax,rcx
  40649a:	jae    4061a3 <rb_strcasecmp@plt+0x3c83>
  4064a0:	lea    rcx,[rax+0x1]
  4064a4:	mov    QWORD PTR [rsp+0x8],rcx
  4064a9:	mov    BYTE PTR [rax],0x0
  4064ac:	mov    rax,QWORD PTR [rsp+0x8]
  4064b1:	lea    rcx,[rsp+0x50]
  4064b6:	sub    rax,rcx
  4064b9:	cmp    rax,0xff
  4064bf:	jle    406161 <rb_strcasecmp@plt+0x3c41>
  4064c5:	jmp    4061a3 <rb_strcasecmp@plt+0x3c83>
  4064ca:	lea    rax,[r12+0x1]
  4064cf:	cmp    rax,QWORD PTR [rsp+0x20]
  4064d4:	jae    40643c <rb_strcasecmp@plt+0x3f1c>
  4064da:	mov    eax,r11d
  4064dd:	shr    eax,0x8
  4064e0:	or     al,0xc0
  4064e2:	mov    BYTE PTR [r12],al
  4064e6:	mov    BYTE PTR [r12+0x1],r11b
  4064eb:	add    r12,0x2
  4064ef:	mov    r15,r12
  4064f2:	mov    rdx,QWORD PTR [rsp+0x48]
  4064f7:	sub    r15,rdx
  4064fa:	test   r15d,r15d
  4064fd:	mov    eax,0xffffffff
  406502:	js     4061b0 <rb_strcasecmp@plt+0x3c90>
  406508:	movsxd rcx,r15d
  40650b:	lea    eax,[rcx+rdx*1]
  40650e:	mov    rdx,QWORD PTR [rsp+0x38]
  406513:	mov    ebx,DWORD PTR [rsp+0x30]
  406517:	mov    BYTE PTR [rdx+rcx*1+0xc],bh
  40651b:	mov    BYTE PTR [rdx+rcx*1+0xd],bl
  40651f:	mov    ebx,DWORD PTR [rsp+0x34]
  406523:	mov    BYTE PTR [rdx+rcx*1+0xe],bh
  406527:	mov    BYTE PTR [rdx+rcx*1+0xf],bl
  40652b:	mov    WORD PTR [rdx+0x4],0x100
  406531:	sub    eax,edx
  406533:	add    eax,0x4
  406536:	jmp    4061b0 <rb_strcasecmp@plt+0x3c90>
  40653b:	nop
  40653c:	nop    DWORD PTR [rax+0x0]
  406540:	push   rbp
  406541:	push   r15
  406543:	push   r14
  406545:	push   r13
  406547:	push   r12
  406549:	push   rbx
  40654a:	sub    rsp,0x38
  40654e:	mov    r14,rdx
  406551:	mov    rbx,QWORD PTR [rdx+0x10]
  406555:	mov    rdi,rbx
  406558:	call   402200 <strlen@plt>
  40655d:	lea    rdi,[rax+0x1]
  406561:	call   402180 <malloc@plt>
  406566:	test   rax,rax
  406569:	je     4068d4 <rb_strcasecmp@plt+0x43b4>
  40656f:	mov    rbp,rax
  406572:	mov    rdi,rax
  406575:	mov    rsi,rbx
  406578:	call   402410 <strcpy@plt>
  40657d:	cmp    BYTE PTR [rbp+0x0],0x2a
  406581:	mov    QWORD PTR [rsp+0x20],r14
  406586:	mov    QWORD PTR [rsp+0x18],rbp
  40658b:	je     4066e2 <rb_strcasecmp@plt+0x41c2>
  406591:	lea    rsi,[rip+0x42cc]        # 40a864 <rb_strcasecmp@plt+0x8344>
  406598:	lea    rdx,[rsp+0x30]
  40659d:	mov    rdi,rbp
  4065a0:	call   402130 <rb_strtok_r@plt>
  4065a5:	test   rax,rax
  4065a8:	je     4066e2 <rb_strcasecmp@plt+0x41c2>
  4065ae:	mov    rbx,rax
  4065b1:	xor    r12d,r12d
  4065b4:	xor    eax,eax
  4065b6:	mov    QWORD PTR [rsp],rax
  4065ba:	xor    eax,eax
  4065bc:	jmp    4065f9 <rb_strcasecmp@plt+0x40d9>
  4065be:	xchg   ax,ax
  4065c0:	mov    rax,QWORD PTR [rsp]
  4065c4:	test   rax,rax
  4065c7:	cmove  rax,rbp
  4065cb:	mov    QWORD PTR [rsp],rax
  4065cf:	mov    r12,QWORD PTR [rsp+0x10]
  4065d4:	inc    r12
  4065d7:	xor    edi,edi
  4065d9:	lea    rsi,[rip+0x4284]        # 40a864 <rb_strcasecmp@plt+0x8344>
  4065e0:	lea    rdx,[rsp+0x30]
  4065e5:	call   402130 <rb_strtok_r@plt>
  4065ea:	mov    rbx,rax
  4065ed:	mov    rax,rbp
  4065f0:	test   rbx,rbx
  4065f3:	je     4066ed <rb_strcasecmp@plt+0x41cd>
  4065f9:	mov    QWORD PTR [rsp+0x28],rax
  4065fe:	mov    QWORD PTR [rsp+0x10],r12
  406603:	mov    edi,0x1
  406608:	mov    esi,0x58
  40660d:	call   402440 <calloc@plt>
  406612:	test   rax,rax
  406615:	je     4068d4 <rb_strcasecmp@plt+0x43b4>
  40661b:	mov    QWORD PTR [rsp+0x8],rax
  406620:	mov    r13,rax
  406623:	mov    r12d,0x2
  406629:	xor    r15d,r15d
  40662c:	mov    rbp,rbx
  40662f:	jmp    406643 <rb_strcasecmp@plt+0x4123>
  406631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40663b:	nop    DWORD PTR [rax+rax*1+0x0]
  406640:	inc    rbp
  406643:	movsx  r14,BYTE PTR [rbp+0x0]
  406648:	cmp    r14,0x2e
  40664c:	je     406670 <rb_strcasecmp@plt+0x4150>
  40664e:	test   r14b,r14b
  406651:	je     406690 <rb_strcasecmp@plt+0x4170>
  406653:	call   402230 <__ctype_b_loc@plt>
  406658:	mov    rax,QWORD PTR [rax]
  40665b:	test   BYTE PTR [rax+r14*2+0x1],0x8
  406661:	jne    406640 <rb_strcasecmp@plt+0x4120>
  406663:	jmp    406897 <rb_strcasecmp@plt+0x4377>
  406668:	nop    DWORD PTR [rax+rax*1+0x0]
  406670:	cmp    r15d,0x3
  406674:	jge    4068b7 <rb_strcasecmp@plt+0x4397>
  40667a:	inc    r15d
  40667d:	mov    r12d,0x1
  406683:	jmp    406640 <rb_strcasecmp@plt+0x4120>
  406685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40668f:	nop
  406690:	dec    r15d
  406693:	cmp    r15d,0x2
  406697:	jb     4068d9 <rb_strcasecmp@plt+0x43b9>
  40669d:	mov    DWORD PTR [r13+0x0],r12d
  4066a1:	mov    rbp,QWORD PTR [rsp+0x8]
  4066a6:	lea    rdi,[rbp+0x4]
  4066aa:	mov    edx,0x35
  4066af:	mov    rsi,rbx
  4066b2:	call   4021c0 <rb_strlcpy@plt>
  4066b7:	add    rbp,0x40
  4066bb:	mov    QWORD PTR [r13+0x40],r13
  4066bf:	mov    QWORD PTR [r13+0x48],0x0
  4066c7:	mov    rax,QWORD PTR [rsp+0x28]
  4066cc:	mov    QWORD PTR [r13+0x50],rax
  4066d0:	test   rax,rax
  4066d3:	je     4065c0 <rb_strcasecmp@plt+0x40a0>
  4066d9:	mov    QWORD PTR [rax+0x8],rbp
  4066dd:	jmp    4065cf <rb_strcasecmp@plt+0x40af>
  4066e2:	xor    ebp,ebp
  4066e4:	xor    eax,eax
  4066e6:	mov    QWORD PTR [rsp],rax
  4066ea:	xor    r12d,r12d
  4066ed:	mov    QWORD PTR [rsp+0x8],rbp
  4066f2:	mov    rdi,QWORD PTR [rsp+0x18]
  4066f7:	call   4021f0 <free@plt>
  4066fc:	mov    rbx,QWORD PTR [rsp+0x20]
  406701:	mov    rdi,QWORD PTR [rbx+0x8]
  406705:	xor    esi,esi
  406707:	mov    edx,0xa
  40670c:	call   4022f0 <strtol@plt>
  406711:	mov    r14,rax
  406714:	and    r14b,0x3
  406718:	je     40684f <rb_strcasecmp@plt+0x432f>
  40671e:	mov    r15,QWORD PTR [rbx]
  406721:	test   r15,r15
  406724:	je     40684f <rb_strcasecmp@plt+0x432f>
  40672a:	mov    rax,QWORD PTR [rbx+0x18]
  40672e:	test   rax,rax
  406731:	je     40684f <rb_strcasecmp@plt+0x432f>
  406737:	mov    r13,rax
  40673a:	mov    rbx,QWORD PTR [rip+0xd827]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406741:	test   rbx,rbx
  406744:	je     40676b <rb_strcasecmp@plt+0x424b>
  406746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406750:	mov    rbp,QWORD PTR [rbx]
  406753:	mov    rdi,rbp
  406756:	mov    rsi,r15
  406759:	call   402120 <strcasecmp@plt>
  40675e:	test   eax,eax
  406760:	je     4067b8 <rb_strcasecmp@plt+0x4298>
  406762:	mov    rbx,QWORD PTR [rbx+0x10]
  406766:	test   rbx,rbx
  406769:	jne    406750 <rb_strcasecmp@plt+0x4230>
  40676b:	mov    edi,0x1
  406770:	mov    esi,0x338
  406775:	call   402440 <calloc@plt>
  40677a:	test   rax,rax
  40677d:	je     4068d4 <rb_strcasecmp@plt+0x43b4>
  406783:	mov    rbp,rax
  406786:	call   4024b0 <rb_make_rb_dlink_node@plt>
  40678b:	test   rax,rax
  40678e:	je     4068e2 <rb_strcasecmp@plt+0x43c2>
  406794:	mov    QWORD PTR [rax],rbp
  406797:	mov    QWORD PTR [rax+0x8],0x0
  40679f:	mov    rcx,QWORD PTR [rip+0xd7c2]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4067a6:	mov    QWORD PTR [rax+0x10],rcx
  4067aa:	test   rcx,rcx
  4067ad:	je     4067c6 <rb_strcasecmp@plt+0x42a6>
  4067af:	add    rcx,0x8
  4067b3:	mov    QWORD PTR [rcx],rax
  4067b6:	jmp    4067d4 <rb_strcasecmp@plt+0x42b4>
  4067b8:	test   rbp,rbp
  4067bb:	je     40676b <rb_strcasecmp@plt+0x424b>
  4067bd:	mov    BYTE PTR [rbp+0x320],0x0
  4067c4:	jmp    4067e2 <rb_strcasecmp@plt+0x42c2>
  4067c6:	cmp    QWORD PTR [rip+0xd7a2],0x0        # 413f70 <rb_strcasecmp@plt+0x11a50>
  4067ce:	je     40688b <rb_strcasecmp@plt+0x436b>
  4067d4:	mov    QWORD PTR [rip+0xd78d],rax        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4067db:	inc    QWORD PTR [rip+0xd796]        # 413f78 <rb_strcasecmp@plt+0x11a58>
  4067e2:	mov    edx,0x100
  4067e7:	mov    rdi,rbp
  4067ea:	mov    rsi,r15
  4067ed:	call   4021c0 <rb_strlcpy@plt>
  4067f2:	lea    rdi,[rbp+0x100]
  4067f9:	mov    edx,0x200
  4067fe:	mov    rsi,r13
  406801:	call   4021c0 <rb_strlcpy@plt>
  406806:	mov    BYTE PTR [rbp+0x300],r14b
  40680d:	mov    r13,QWORD PTR [rsp+0x8]
  406812:	test   r13,r13
  406815:	je     40683f <rb_strcasecmp@plt+0x431f>
  406817:	mov    rax,QWORD PTR [rbp+0x308]
  40681e:	test   rax,rax
  406821:	je     406858 <rb_strcasecmp@plt+0x4338>
  406823:	mov    rcx,QWORD PTR [rsp]
  406827:	mov    QWORD PTR [rcx+0x10],rax
  40682b:	mov    QWORD PTR [rax+0x8],rcx
  40682f:	mov    QWORD PTR [rbp+0x308],r13
  406836:	add    QWORD PTR [rbp+0x318],r12
  40683d:	jmp    406871 <rb_strcasecmp@plt+0x4351>
  40683f:	mov    QWORD PTR [rbp+0x330],0x0
  40684a:	test   rbp,rbp
  40684d:	jne    40687c <rb_strcasecmp@plt+0x435c>
  40684f:	lea    rsi,[rip+0x40d8]        # 40a92e <rb_strcasecmp@plt+0x840e>
  406856:	jmp    4068be <rb_strcasecmp@plt+0x439e>
  406858:	mov    QWORD PTR [rbp+0x308],r13
  40685f:	mov    rax,QWORD PTR [rsp]
  406863:	mov    QWORD PTR [rbp+0x310],rax
  40686a:	mov    QWORD PTR [rbp+0x318],r12
  406871:	mov    QWORD PTR [rbp+0x330],0x0
  40687c:	add    rsp,0x38
  406880:	pop    rbx
  406881:	pop    r12
  406883:	pop    r13
  406885:	pop    r14
  406887:	pop    r15
  406889:	pop    rbp
  40688a:	ret    
  40688b:	lea    rcx,[rip+0xd6de]        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406892:	jmp    4067b3 <rb_strcasecmp@plt+0x4293>
  406897:	lea    rsi,[rip+0x4002]        # 40a8a0 <rb_strcasecmp@plt+0x8380>
  40689e:	mov    edi,0x43
  4068a3:	mov    edx,r14d
  4068a6:	xor    eax,eax
  4068a8:	call   403120 <rb_strcasecmp@plt+0xc00>
  4068ad:	mov    edi,0x3
  4068b2:	call   4020e0 <exit@plt>
  4068b7:	lea    rsi,[rip+0x3fa8]        # 40a866 <rb_strcasecmp@plt+0x8346>
  4068be:	mov    edi,0x43
  4068c3:	xor    eax,eax
  4068c5:	call   403120 <rb_strcasecmp@plt+0xc00>
  4068ca:	mov    edi,0x3
  4068cf:	call   4020e0 <exit@plt>
  4068d4:	call   402380 <rb_outofmemory@plt>
  4068d9:	lea    rsi,[rip+0x4010]        # 40a8f0 <rb_strcasecmp@plt+0x83d0>
  4068e0:	jmp    4068be <rb_strcasecmp@plt+0x439e>
  4068e2:	lea    rdi,[rip+0x3c14]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  4068e9:	lea    rsi,[rip+0x3c17]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  4068f0:	lea    rcx,[rip+0x3c6f]        # 40a566 <rb_strcasecmp@plt+0x8046>
  4068f7:	mov    edx,0x90
  4068fc:	call   4020f0 <__assert_fail@plt>
  406901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40690b:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	push   r15
  406912:	push   r14
  406914:	push   r12
  406916:	push   rbx
  406917:	push   rax
  406918:	mov    r14,QWORD PTR [rdx]
  40691b:	mov    r15,QWORD PTR [rip+0xd646]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406922:	test   r15,r15
  406925:	je     406993 <rb_strcasecmp@plt+0x4473>
  406927:	mov    rbx,r15
  40692a:	nop    WORD PTR [rax+rax*1+0x0]
  406930:	mov    r12,QWORD PTR [rbx]
  406933:	mov    rdi,r12
  406936:	mov    rsi,r14
  406939:	call   402120 <strcasecmp@plt>
  40693e:	test   eax,eax
  406940:	je     40694d <rb_strcasecmp@plt+0x442d>
  406942:	mov    rbx,QWORD PTR [rbx+0x10]
  406946:	test   rbx,rbx
  406949:	jne    406930 <rb_strcasecmp@plt+0x4410>
  40694b:	jmp    406993 <rb_strcasecmp@plt+0x4473>
  40694d:	test   r12,r12
  406950:	je     406993 <rb_strcasecmp@plt+0x4473>
  406952:	cmp    DWORD PTR [r12+0x324],0x0
  40695b:	jle    40698c <rb_strcasecmp@plt+0x446c>
  40695d:	mov    BYTE PTR [r12+0x320],0x1
  406966:	add    rsp,0x8
  40696a:	pop    rbx
  40696b:	pop    r12
  40696d:	pop    r14
  40696f:	pop    r15
  406971:	ret    
  406972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40697c:	nop    DWORD PTR [rax+0x0]
  406980:	mov    rdi,r15
  406983:	mov    r15,QWORD PTR [r15+0x10]
  406987:	cmp    QWORD PTR [rdi],r12
  40698a:	je     4069b4 <rb_strcasecmp@plt+0x4494>
  40698c:	test   r15,r15
  40698f:	jne    406980 <rb_strcasecmp@plt+0x4460>
  406991:	jmp    4069fa <rb_strcasecmp@plt+0x44da>
  406993:	lea    rsi,[rip+0x3fc1]        # 40a95b <rb_strcasecmp@plt+0x843b>
  40699a:	mov    edi,0x57
  40699f:	mov    rdx,r14
  4069a2:	xor    eax,eax
  4069a4:	add    rsp,0x8
  4069a8:	pop    rbx
  4069a9:	pop    r12
  4069ab:	pop    r14
  4069ad:	pop    r15
  4069af:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  4069b4:	lea    rax,[rdi+0x8]
  4069b8:	mov    rcx,QWORD PTR [rdi+0x8]
  4069bc:	test   r15,r15
  4069bf:	je     4069ca <rb_strcasecmp@plt+0x44aa>
  4069c1:	mov    QWORD PTR [r15+0x8],rcx
  4069c5:	mov    rcx,QWORD PTR [rax]
  4069c8:	jmp    4069d1 <rb_strcasecmp@plt+0x44b1>
  4069ca:	mov    QWORD PTR [rip+0xd59f],rcx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  4069d1:	test   rcx,rcx
  4069d4:	lea    rcx,[rcx+0x10]
  4069d8:	lea    rdx,[rip+0xd589]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4069df:	cmove  rcx,rdx
  4069e3:	mov    QWORD PTR [rcx],r15
  4069e6:	vxorps xmm0,xmm0,xmm0
  4069ea:	vmovups XMMWORD PTR [rax],xmm0
  4069ee:	dec    QWORD PTR [rip+0xd583]        # 413f78 <rb_strcasecmp@plt+0x11a58>
  4069f5:	call   4022c0 <rb_free_rb_dlink_node@plt>
  4069fa:	mov    rdi,r12
  4069fd:	add    rsp,0x8
  406a01:	pop    rbx
  406a02:	pop    r12
  406a04:	pop    r14
  406a06:	pop    r15
  406a08:	jmp    4021f0 <free@plt>
  406a0d:	nop    DWORD PTR [rax]
  406a10:	push   r15
  406a12:	push   r14
  406a14:	push   rbx
  406a15:	mov    r14,QWORD PTR [rip+0xd54c]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406a1c:	test   r14,r14
  406a1f:	je     406ac1 <rb_strcasecmp@plt+0x45a1>
  406a25:	lea    r15,[rip+0xd53c]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406a2c:	jmp    406a40 <rb_strcasecmp@plt+0x4520>
  406a2e:	xchg   ax,ax
  406a30:	mov    BYTE PTR [rbx+0x320],0x1
  406a37:	test   r14,r14
  406a3a:	je     406ac1 <rb_strcasecmp@plt+0x45a1>
  406a40:	mov    rbx,QWORD PTR [r14]
  406a43:	mov    r14,QWORD PTR [r14+0x10]
  406a47:	cmp    DWORD PTR [rbx+0x324],0x0
  406a4e:	jg     406a30 <rb_strcasecmp@plt+0x4510>
  406a50:	mov    rax,QWORD PTR [rip+0xd511]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406a57:	nop    WORD PTR [rax+rax*1+0x0]
  406a60:	test   rax,rax
  406a63:	je     406ab0 <rb_strcasecmp@plt+0x4590>
  406a65:	mov    rdi,rax
  406a68:	mov    rax,QWORD PTR [rax+0x10]
  406a6c:	cmp    QWORD PTR [rdi],rbx
  406a6f:	jne    406a60 <rb_strcasecmp@plt+0x4540>
  406a71:	lea    rcx,[rdi+0x8]
  406a75:	mov    rdx,QWORD PTR [rdi+0x8]
  406a79:	test   rax,rax
  406a7c:	je     406a87 <rb_strcasecmp@plt+0x4567>
  406a7e:	mov    QWORD PTR [rax+0x8],rdx
  406a82:	mov    rdx,QWORD PTR [rcx]
  406a85:	jmp    406a8e <rb_strcasecmp@plt+0x456e>
  406a87:	mov    QWORD PTR [rip+0xd4e2],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406a8e:	test   rdx,rdx
  406a91:	lea    rdx,[rdx+0x10]
  406a95:	cmove  rdx,r15
  406a99:	mov    QWORD PTR [rdx],rax
  406a9c:	vxorps xmm0,xmm0,xmm0
  406aa0:	vmovups XMMWORD PTR [rcx],xmm0
  406aa4:	dec    QWORD PTR [rip+0xd4cd]        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406aab:	call   4022c0 <rb_free_rb_dlink_node@plt>
  406ab0:	mov    rdi,rbx
  406ab3:	call   4021f0 <free@plt>
  406ab8:	test   r14,r14
  406abb:	jne    406a40 <rb_strcasecmp@plt+0x4520>
  406ac1:	pop    rbx
  406ac2:	pop    r14
  406ac4:	pop    r15
  406ac6:	ret    
  406ac7:	nop    WORD PTR [rax+rax*1+0x0]
  406ad0:	push   rax
  406ad1:	mov    rdi,QWORD PTR [rdx]
  406ad4:	xor    esi,esi
  406ad6:	mov    edx,0xa
  406adb:	call   4022f0 <strtol@plt>
  406ae0:	test   eax,eax
  406ae2:	js     406aec <rb_strcasecmp@plt+0x45cc>
  406ae4:	mov    DWORD PTR [rip+0x90a6],eax        # 40fb90 <rb_strcasecmp@plt+0xd670>
  406aea:	pop    rax
  406aeb:	ret    
  406aec:	lea    rsi,[rip+0x3e94]        # 40a987 <rb_strcasecmp@plt+0x8467>
  406af3:	mov    edi,0x43
  406af8:	mov    edx,eax
  406afa:	xor    eax,eax
  406afc:	call   403120 <rb_strcasecmp@plt+0xc00>
  406b01:	mov    edi,0x3
  406b06:	call   4020e0 <exit@plt>
  406b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b10:	push   r15
  406b12:	push   r14
  406b14:	push   rbx
  406b15:	sub    rsp,0x10
  406b19:	lea    r15,[rip+0xd608]        # 414128 <rb_strcasecmp@plt+0x11c08>
  406b20:	mov    rdi,QWORD PTR [r15]
  406b23:	mov    rbx,rsp
  406b26:	mov    rsi,rbx
  406b29:	call   402240 <rb_dictionary_foreach_start@plt>
  406b2e:	mov    rdi,QWORD PTR [r15]
  406b31:	mov    rsi,rbx
  406b34:	call   402140 <rb_dictionary_foreach_cur@plt>
  406b39:	test   rax,rax
  406b3c:	je     406b76 <rb_strcasecmp@plt+0x4656>
  406b3e:	lea    r14,[rip+0x3f3e]        # 40aa83 <rb_strcasecmp@plt+0x8563>
  406b45:	mov    rbx,rsp
  406b48:	nop    DWORD PTR [rax+rax*1+0x0]
  406b50:	mov    rdi,rax
  406b53:	mov    rsi,r14
  406b56:	call   407400 <rb_strcasecmp@plt+0x4ee0>
  406b5b:	mov    rdi,QWORD PTR [r15]
  406b5e:	mov    rsi,rbx
  406b61:	call   4021d0 <rb_dictionary_foreach_next@plt>
  406b66:	mov    rdi,QWORD PTR [r15]
  406b69:	mov    rsi,rbx
  406b6c:	call   402140 <rb_dictionary_foreach_cur@plt>
  406b71:	test   rax,rax
  406b74:	jne    406b50 <rb_strcasecmp@plt+0x4630>
  406b76:	mov    r14,QWORD PTR [rip+0xd3eb]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406b7d:	test   r14,r14
  406b80:	je     406c21 <rb_strcasecmp@plt+0x4701>
  406b86:	lea    r15,[rip+0xd3db]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406b8d:	jmp    406ba0 <rb_strcasecmp@plt+0x4680>
  406b8f:	nop
  406b90:	mov    BYTE PTR [rbx+0x320],0x1
  406b97:	test   r14,r14
  406b9a:	je     406c21 <rb_strcasecmp@plt+0x4701>
  406ba0:	mov    rbx,QWORD PTR [r14]
  406ba3:	mov    r14,QWORD PTR [r14+0x10]
  406ba7:	cmp    DWORD PTR [rbx+0x324],0x0
  406bae:	jg     406b90 <rb_strcasecmp@plt+0x4670>
  406bb0:	mov    rax,QWORD PTR [rip+0xd3b1]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406bb7:	nop    WORD PTR [rax+rax*1+0x0]
  406bc0:	test   rax,rax
  406bc3:	je     406c10 <rb_strcasecmp@plt+0x46f0>
  406bc5:	mov    rdi,rax
  406bc8:	mov    rax,QWORD PTR [rax+0x10]
  406bcc:	cmp    QWORD PTR [rdi],rbx
  406bcf:	jne    406bc0 <rb_strcasecmp@plt+0x46a0>
  406bd1:	lea    rcx,[rdi+0x8]
  406bd5:	mov    rdx,QWORD PTR [rdi+0x8]
  406bd9:	test   rax,rax
  406bdc:	je     406be7 <rb_strcasecmp@plt+0x46c7>
  406bde:	mov    QWORD PTR [rax+0x8],rdx
  406be2:	mov    rdx,QWORD PTR [rcx]
  406be5:	jmp    406bee <rb_strcasecmp@plt+0x46ce>
  406be7:	mov    QWORD PTR [rip+0xd382],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406bee:	test   rdx,rdx
  406bf1:	lea    rdx,[rdx+0x10]
  406bf5:	cmove  rdx,r15
  406bf9:	mov    QWORD PTR [rdx],rax
  406bfc:	vxorps xmm0,xmm0,xmm0
  406c00:	vmovups XMMWORD PTR [rcx],xmm0
  406c04:	dec    QWORD PTR [rip+0xd36d]        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406c0b:	call   4022c0 <rb_free_rb_dlink_node@plt>
  406c10:	mov    rdi,rbx
  406c13:	call   4021f0 <free@plt>
  406c18:	test   r14,r14
  406c1b:	jne    406ba0 <rb_strcasecmp@plt+0x4680>
  406c21:	add    rsp,0x10
  406c25:	pop    rbx
  406c26:	pop    r14
  406c28:	pop    r15
  406c2a:	ret    
  406c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c30:	push   rbp
  406c31:	push   r15
  406c33:	push   r14
  406c35:	push   r13
  406c37:	push   r12
  406c39:	push   rbx
  406c3a:	push   rax
  406c3b:	mov    r14,rdi
  406c3e:	cmp    QWORD PTR [rip+0xd332],0x0        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406c46:	je     406cbe <rb_strcasecmp@plt+0x479e>
  406c48:	inc    DWORD PTR [r14+0x1cc]
  406c4f:	lea    rax,[rip+0x8ec2]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406c56:	mov    ebx,DWORD PTR [rax+0x18]
  406c59:	mov    edi,0x1
  406c5e:	mov    esi,0x20
  406c63:	call   402440 <calloc@plt>
  406c68:	test   rax,rax
  406c6b:	je     406d53 <rb_strcasecmp@plt+0x4833>
  406c71:	mov    r15,QWORD PTR [r14+0x1d0]
  406c78:	shl    rbx,0x5
  406c7c:	mov    QWORD PTR [r15+rbx*1+0x10],rax
  406c81:	lea    rax,[rip+0xd4a8]        # 414130 <rb_strcasecmp@plt+0x11c10>
  406c88:	mov    r13,QWORD PTR [rax]
  406c8b:	test   r13,r13
  406c8e:	je     406d27 <rb_strcasecmp@plt+0x4807>
  406c94:	lea    r12,[rip+0x3d11]        # 40a9ac <rb_strcasecmp@plt+0x848c>
  406c9b:	mov    rbx,r13
  406c9e:	xchg   ax,ax
  406ca0:	mov    rbp,QWORD PTR [rbx]
  406ca3:	mov    rdi,QWORD PTR [rbp+0x20]
  406ca7:	mov    rsi,r12
  406caa:	call   402120 <strcasecmp@plt>
  406caf:	test   eax,eax
  406cb1:	je     406cd2 <rb_strcasecmp@plt+0x47b2>
  406cb3:	mov    rbx,QWORD PTR [rbx+0x10]
  406cb7:	test   rbx,rbx
  406cba:	jne    406ca0 <rb_strcasecmp@plt+0x4780>
  406cbc:	jmp    406cf0 <rb_strcasecmp@plt+0x47d0>
  406cbe:	lea    rax,[rip+0x8e53]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406cc5:	mov    esi,DWORD PTR [rax+0x18]
  406cc8:	mov    rdi,r14
  406ccb:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  406cd0:	jmp    406d42 <rb_strcasecmp@plt+0x4822>
  406cd2:	test   rbp,rbp
  406cd5:	je     406cf0 <rb_strcasecmp@plt+0x47d0>
  406cd7:	mov    eax,DWORD PTR [rbp+0x18]
  406cda:	shl    rax,0x5
  406cde:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406ce4:	jne    406d42 <rb_strcasecmp@plt+0x4822>
  406ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cf0:	mov    rbx,QWORD PTR [r13+0x0]
  406cf4:	mov    rdi,QWORD PTR [rbx+0x20]
  406cf8:	lea    rsi,[rip+0x3e8d]        # 40ab8c <rb_strcasecmp@plt+0x866c>
  406cff:	call   402120 <strcasecmp@plt>
  406d04:	test   eax,eax
  406d06:	je     406d13 <rb_strcasecmp@plt+0x47f3>
  406d08:	mov    r13,QWORD PTR [r13+0x10]
  406d0c:	test   r13,r13
  406d0f:	jne    406cf0 <rb_strcasecmp@plt+0x47d0>
  406d11:	jmp    406d27 <rb_strcasecmp@plt+0x4807>
  406d13:	test   rbx,rbx
  406d16:	je     406d27 <rb_strcasecmp@plt+0x4807>
  406d18:	mov    eax,DWORD PTR [rbx+0x18]
  406d1b:	shl    rax,0x5
  406d1f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406d25:	jne    406d42 <rb_strcasecmp@plt+0x4822>
  406d27:	mov    rdi,r14
  406d2a:	call   406e90 <rb_strcasecmp@plt+0x4970>
  406d2f:	test   al,al
  406d31:	jne    406d42 <rb_strcasecmp@plt+0x4822>
  406d33:	lea    rsi,[rip+0x3d2e]        # 40aa68 <rb_strcasecmp@plt+0x8548>
  406d3a:	mov    rdi,r14
  406d3d:	call   407400 <rb_strcasecmp@plt+0x4ee0>
  406d42:	mov    al,0x1
  406d44:	add    rsp,0x8
  406d48:	pop    rbx
  406d49:	pop    r12
  406d4b:	pop    r13
  406d4d:	pop    r14
  406d4f:	pop    r15
  406d51:	pop    rbp
  406d52:	ret    
  406d53:	call   402380 <rb_outofmemory@plt>
  406d58:	nop    DWORD PTR [rax+rax*1+0x0]
  406d60:	lea    rsi,[rip+0x3d1c]        # 40aa83 <rb_strcasecmp@plt+0x8563>
  406d67:	jmp    407400 <rb_strcasecmp@plt+0x4ee0>
  406d6c:	nop    DWORD PTR [rax+0x0]
  406d70:	lea    rsi,[rip+0x3d26]        # 40aa9d <rb_strcasecmp@plt+0x857d>
  406d77:	jmp    407400 <rb_strcasecmp@plt+0x4ee0>
  406d7c:	nop    DWORD PTR [rax+0x0]
  406d80:	push   rbp
  406d81:	push   r15
  406d83:	push   r14
  406d85:	push   r13
  406d87:	push   r12
  406d89:	push   rbx
  406d8a:	push   rax
  406d8b:	lea    rax,[rip+0x8d86]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406d92:	mov    eax,DWORD PTR [rax+0x18]
  406d95:	mov    r15,QWORD PTR [rdi+0x1d0]
  406d9c:	shl    rax,0x5
  406da0:	mov    rax,QWORD PTR [r15+rax*1+0x10]
  406da5:	test   rax,rax
  406da8:	je     406e63 <rb_strcasecmp@plt+0x4943>
  406dae:	cmp    BYTE PTR [rax],0x0
  406db1:	jne    406e63 <rb_strcasecmp@plt+0x4943>
  406db7:	mov    r14,rdi
  406dba:	lea    rax,[rip+0xd36f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  406dc1:	mov    r13,QWORD PTR [rax]
  406dc4:	test   r13,r13
  406dc7:	je     406e57 <rb_strcasecmp@plt+0x4937>
  406dcd:	lea    r12,[rip+0x3bd8]        # 40a9ac <rb_strcasecmp@plt+0x848c>
  406dd4:	mov    rbx,r13
  406dd7:	nop    WORD PTR [rax+rax*1+0x0]
  406de0:	mov    rbp,QWORD PTR [rbx]
  406de3:	mov    rdi,QWORD PTR [rbp+0x20]
  406de7:	mov    rsi,r12
  406dea:	call   402120 <strcasecmp@plt>
  406def:	test   eax,eax
  406df1:	je     406dfe <rb_strcasecmp@plt+0x48de>
  406df3:	mov    rbx,QWORD PTR [rbx+0x10]
  406df7:	test   rbx,rbx
  406dfa:	jne    406de0 <rb_strcasecmp@plt+0x48c0>
  406dfc:	jmp    406e20 <rb_strcasecmp@plt+0x4900>
  406dfe:	test   rbp,rbp
  406e01:	je     406e20 <rb_strcasecmp@plt+0x4900>
  406e03:	mov    eax,DWORD PTR [rbp+0x18]
  406e06:	shl    rax,0x5
  406e0a:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406e10:	jne    406e63 <rb_strcasecmp@plt+0x4943>
  406e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e1c:	nop    DWORD PTR [rax+0x0]
  406e20:	mov    rbx,QWORD PTR [r13+0x0]
  406e24:	mov    rdi,QWORD PTR [rbx+0x20]
  406e28:	lea    rsi,[rip+0x3d5d]        # 40ab8c <rb_strcasecmp@plt+0x866c>
  406e2f:	call   402120 <strcasecmp@plt>
  406e34:	test   eax,eax
  406e36:	je     406e43 <rb_strcasecmp@plt+0x4923>
  406e38:	mov    r13,QWORD PTR [r13+0x10]
  406e3c:	test   r13,r13
  406e3f:	jne    406e20 <rb_strcasecmp@plt+0x4900>
  406e41:	jmp    406e57 <rb_strcasecmp@plt+0x4937>
  406e43:	test   rbx,rbx
  406e46:	je     406e57 <rb_strcasecmp@plt+0x4937>
  406e48:	mov    eax,DWORD PTR [rbx+0x18]
  406e4b:	shl    rax,0x5
  406e4f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406e55:	jne    406e63 <rb_strcasecmp@plt+0x4943>
  406e57:	mov    rdi,r14
  406e5a:	call   406e90 <rb_strcasecmp@plt+0x4970>
  406e5f:	test   al,al
  406e61:	je     406e72 <rb_strcasecmp@plt+0x4952>
  406e63:	add    rsp,0x8
  406e67:	pop    rbx
  406e68:	pop    r12
  406e6a:	pop    r13
  406e6c:	pop    r14
  406e6e:	pop    r15
  406e70:	pop    rbp
  406e71:	ret    
  406e72:	lea    rsi,[rip+0x3bef]        # 40aa68 <rb_strcasecmp@plt+0x8548>
  406e79:	mov    rdi,r14
  406e7c:	add    rsp,0x8
  406e80:	pop    rbx
  406e81:	pop    r12
  406e83:	pop    r13
  406e85:	pop    r14
  406e87:	pop    r15
  406e89:	pop    rbp
  406e8a:	jmp    407400 <rb_strcasecmp@plt+0x4ee0>
  406e8f:	nop
  406e90:	push   rbp
  406e91:	push   r15
  406e93:	push   r14
  406e95:	push   r13
  406e97:	push   r12
  406e99:	push   rbx
  406e9a:	sub    rsp,0x128
  406ea1:	mov    r13,rdi
  406ea4:	lea    rax,[rip+0x8c6d]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406eab:	mov    eax,DWORD PTR [rax+0x18]
  406eae:	mov    rcx,QWORD PTR [rdi+0x1d0]
  406eb5:	shl    rax,0x5
  406eb9:	mov    rcx,QWORD PTR [rcx+rax*1+0x10]
  406ebe:	movzx  eax,WORD PTR [rdi+0xf8]
  406ec5:	cmp    ax,0x2
  406ec9:	je     406edf <rb_strcasecmp@plt+0x49bf>
  406ecb:	cmp    ax,0xa
  406ecf:	jne    407085 <rb_strcasecmp@plt+0x4b65>
  406ed5:	mov    DWORD PTR [rsp+0x4],0x2
  406edd:	jmp    406ee7 <rb_strcasecmp@plt+0x49c7>
  406edf:	mov    DWORD PTR [rsp+0x4],0x1
  406ee7:	mov    QWORD PTR [rsp+0x10],rcx
  406eec:	mov    BYTE PTR [rcx],0x1
  406eef:	mov    edi,DWORD PTR [r13+0x0]
  406ef3:	lea    rsi,[rip+0x3ab7]        # 40a9b1 <rb_strcasecmp@plt+0x8491>
  406efa:	xor    eax,eax
  406efc:	call   403050 <rb_strcasecmp@plt+0xb30>
  406f01:	mov    r14,QWORD PTR [rip+0xd060]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406f08:	test   r14,r14
  406f0b:	je     40704c <rb_strcasecmp@plt+0x4b2c>
  406f11:	lea    rax,[r13+0xf8]
  406f18:	mov    QWORD PTR [rsp+0x18],rax
  406f1d:	mov    QWORD PTR [rsp+0x8],r13
  406f22:	jmp    406f3d <rb_strcasecmp@plt+0x4a1d>
  406f24:	mov    rdi,rbp
  406f27:	call   4021f0 <free@plt>
  406f2c:	nop    DWORD PTR [rax+0x0]
  406f30:	mov    r14,QWORD PTR [r14+0x10]
  406f34:	test   r14,r14
  406f37:	je     40704c <rb_strcasecmp@plt+0x4b2c>
  406f3d:	mov    rbx,QWORD PTR [r14]
  406f40:	cmp    BYTE PTR [rbx+0x320],0x0
  406f47:	jne    406f30 <rb_strcasecmp@plt+0x4a10>
  406f49:	movzx  eax,BYTE PTR [rbx+0x300]
  406f50:	test   DWORD PTR [rsp+0x4],eax
  406f54:	je     406f30 <rb_strcasecmp@plt+0x4a10>
  406f56:	mov    edi,0x1
  406f5b:	mov    esi,0x30
  406f60:	call   402440 <calloc@plt>
  406f65:	test   rax,rax
  406f68:	je     407099 <rb_strcasecmp@plt+0x4b79>
  406f6e:	mov    r12,rax
  406f71:	mov    rbp,rax
  406f74:	lea    rax,[rip+0x8b9d]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406f7b:	mov    eax,DWORD PTR [rax+0x18]
  406f7e:	mov    rcx,QWORD PTR [r13+0x1d0]
  406f85:	shl    rax,0x5
  406f89:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  406f8e:	mov    QWORD PTR [r12],rbx
  406f92:	mov    QWORD PTR [r12+0x8],r13
  406f97:	movzx  eax,WORD PTR [r13+0xf8]
  406f9f:	cmp    ax,0xa
  406fa3:	je     406fba <rb_strcasecmp@plt+0x4a9a>
  406fa5:	cmp    ax,0x2
  406fa9:	jne    406fc7 <rb_strcasecmp@plt+0x4aa7>
  406fab:	test   BYTE PTR [rbx+0x300],0x1
  406fb2:	je     406f24 <rb_strcasecmp@plt+0x4a04>
  406fb8:	jmp    406fc7 <rb_strcasecmp@plt+0x4aa7>
  406fba:	test   BYTE PTR [rbx+0x300],0x2
  406fc1:	je     406f24 <rb_strcasecmp@plt+0x4a04>
  406fc7:	mov    esi,0x100
  406fcc:	lea    r13,[rsp+0x20]
  406fd1:	mov    rdi,r13
  406fd4:	mov    rdx,QWORD PTR [rsp+0x18]
  406fd9:	mov    rcx,rbx
  406fdc:	call   404520 <rb_strcasecmp@plt+0x2000>
  406fe1:	mov    rdi,r13
  406fe4:	mov    esi,0x2
  406fe9:	lea    rdx,[rip+0xb0]        # 4070a0 <rb_strcasecmp@plt+0x4b80>
  406ff0:	mov    rcx,rbp
  406ff3:	call   4029e0 <rb_strcasecmp@plt+0x4c0>
  406ff8:	mov    QWORD PTR [rbp+0x10],rax
  406ffc:	add    r12,0x18
  407000:	mov    QWORD PTR [rbp+0x18],rbp
  407004:	mov    QWORD PTR [rbp+0x20],0x0
  40700c:	mov    rax,QWORD PTR [r15+0x8]
  407010:	mov    QWORD PTR [rbp+0x28],rax
  407014:	test   rax,rax
  407017:	je     407027 <rb_strcasecmp@plt+0x4b07>
  407019:	add    rax,0x8
  40701d:	mov    r13,QWORD PTR [rsp+0x8]
  407022:	mov    QWORD PTR [rax],r12
  407025:	jmp    407033 <rb_strcasecmp@plt+0x4b13>
  407027:	cmp    QWORD PTR [r15+0x10],0x0
  40702c:	mov    r13,QWORD PTR [rsp+0x8]
  407031:	je     407046 <rb_strcasecmp@plt+0x4b26>
  407033:	mov    QWORD PTR [r15+0x8],r12
  407037:	inc    QWORD PTR [r15+0x18]
  40703b:	inc    DWORD PTR [rbx+0x324]
  407041:	jmp    406f30 <rb_strcasecmp@plt+0x4a10>
  407046:	lea    rax,[r15+0x10]
  40704a:	jmp    407022 <rb_strcasecmp@plt+0x4b02>
  40704c:	mov    rax,QWORD PTR [rsp+0x10]
  407051:	cmp    QWORD PTR [rax+0x18],0x0
  407056:	je     407085 <rb_strcasecmp@plt+0x4b65>
  407058:	lea    rax,[rip+0x8ab9]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  40705f:	mov    ebx,DWORD PTR [rax+0x18]
  407062:	movsxd rbp,DWORD PTR [rip+0x8b27]        # 40fb90 <rb_strcasecmp@plt+0xd670>
  407069:	call   402280 <rb_current_time@plt>
  40706e:	add    rax,rbp
  407071:	mov    rcx,QWORD PTR [r13+0x1d0]
  407078:	shl    rbx,0x5
  40707c:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  407081:	mov    al,0x1
  407083:	jmp    407087 <rb_strcasecmp@plt+0x4b67>
  407085:	xor    eax,eax
  407087:	add    rsp,0x128
  40708e:	pop    rbx
  40708f:	pop    r12
  407091:	pop    r13
  407093:	pop    r14
  407095:	pop    r15
  407097:	pop    rbp
  407098:	ret    
  407099:	call   402380 <rb_outofmemory@plt>
  40709e:	xchg   ax,ax
  4070a0:	push   rbp
  4070a1:	push   r15
  4070a3:	push   r14
  4070a5:	push   r13
  4070a7:	push   r12
  4070a9:	push   rbx
  4070aa:	sub    rsp,0x18
  4070ae:	mov    rbx,rcx
  4070b1:	mov    rdx,QWORD PTR [rcx+0x8]
  4070b5:	lea    rax,[rip+0x8a5c]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  4070bc:	mov    ebp,DWORD PTR [rax+0x18]
  4070bf:	mov    rax,QWORD PTR [rdx+0x1d0]
  4070c6:	mov    rcx,rbp
  4070c9:	shl    rcx,0x5
  4070cd:	mov    r15,QWORD PTR [rax+rcx*1+0x10]
  4070d2:	test   r15,r15
  4070d5:	je     40729e <rb_strcasecmp@plt+0x4d7e>
  4070db:	mov    r13,rdi
  4070de:	mov    QWORD PTR [rsp+0x8],rdx
  4070e3:	mov    r12,QWORD PTR [rbx]
  4070e6:	test   rdi,rdi
  4070e9:	je     4071f1 <rb_strcasecmp@plt+0x4cd1>
  4070ef:	test   sil,sil
  4070f2:	je     4071f1 <rb_strcasecmp@plt+0x4cd1>
  4070f8:	cmp    QWORD PTR [r12+0x318],0x0
  407101:	je     407173 <rb_strcasecmp@plt+0x4c53>
  407103:	mov    rdi,r13
  407106:	mov    esi,0x2e
  40710b:	call   402270 <strrchr@plt>
  407110:	test   rax,rax
  407113:	je     4071b4 <rb_strcasecmp@plt+0x4c94>
  407119:	cmp    BYTE PTR [rax+0x1],0x0
  40711d:	je     4071b4 <rb_strcasecmp@plt+0x4c94>
  407123:	mov    QWORD PTR [rsp+0x10],rax
  407128:	mov    r14,QWORD PTR [r12+0x308]
  407130:	test   r14,r14
  407133:	je     4071f1 <rb_strcasecmp@plt+0x4cd1>
  407139:	inc    QWORD PTR [rsp+0x10]
  40713e:	xchg   ax,ax
  407140:	mov    rsi,QWORD PTR [r14]
  407143:	mov    ecx,DWORD PTR [rsi]
  407145:	mov    rdi,r13
  407148:	cmp    ecx,0x1
  40714b:	je     40715b <rb_strcasecmp@plt+0x4c3b>
  40714d:	mov    rdi,QWORD PTR [rsp+0x10]
  407152:	cmp    ecx,0x2
  407155:	jne    4072c3 <rb_strcasecmp@plt+0x4da3>
  40715b:	add    rsi,0x4
  40715f:	call   4023e0 <strcmp@plt>
  407164:	test   eax,eax
  407166:	je     407173 <rb_strcasecmp@plt+0x4c53>
  407168:	mov    r14,QWORD PTR [r14+0x10]
  40716c:	test   r14,r14
  40716f:	jne    407140 <rb_strcasecmp@plt+0x4c20>
  407171:	jmp    4071f1 <rb_strcasecmp@plt+0x4cd1>
  407173:	inc    DWORD PTR [r12+0x328]
  40717b:	lea    rcx,[r12+0x100]
  407183:	mov    rbx,QWORD PTR [rsp+0x8]
  407188:	mov    rdi,rbx
  40718b:	mov    esi,ebp
  40718d:	mov    rdx,r12
  407190:	xor    eax,eax
  407192:	call   403830 <rb_strcasecmp@plt+0x1310>
  407197:	lea    rsi,[rip+0x38e5]        # 40aa83 <rb_strcasecmp@plt+0x8563>
  40719e:	mov    rdi,rbx
  4071a1:	add    rsp,0x18
  4071a5:	pop    rbx
  4071a6:	pop    r12
  4071a8:	pop    r13
  4071aa:	pop    r14
  4071ac:	pop    r15
  4071ae:	pop    rbp
  4071af:	jmp    407400 <rb_strcasecmp@plt+0x4ee0>
  4071b4:	mov    ebp,0xe10
  4071b9:	add    rbp,QWORD PTR [r12+0x330]
  4071c1:	call   402280 <rb_current_time@plt>
  4071c6:	cmp    rbp,rax
  4071c9:	jge    4071f1 <rb_strcasecmp@plt+0x4cd1>
  4071cb:	lea    rsi,[rip+0x3857]        # 40aa29 <rb_strcasecmp@plt+0x8509>
  4071d2:	mov    edi,0x57
  4071d7:	mov    rdx,r12
  4071da:	mov    rcx,r13
  4071dd:	xor    eax,eax
  4071df:	call   403120 <rb_strcasecmp@plt+0xc00>
  4071e4:	call   402280 <rb_current_time@plt>
  4071e9:	mov    QWORD PTR [r12+0x330],rax
  4071f1:	mov    rdi,r12
  4071f4:	call   4072f0 <rb_strcasecmp@plt+0x4dd0>
  4071f9:	mov    rdi,QWORD PTR [rbx+0x10]
  4071fd:	call   402d30 <rb_strcasecmp@plt+0x810>
  407202:	lea    rax,[r15+0x8]
  407206:	mov    rsi,QWORD PTR [rbx+0x20]
  40720a:	mov    rdx,QWORD PTR [rbx+0x28]
  40720e:	lea    rcx,[rbx+0x20]
  407212:	test   rdx,rdx
  407215:	je     407220 <rb_strcasecmp@plt+0x4d00>
  407217:	mov    QWORD PTR [rdx+0x8],rsi
  40721b:	mov    rsi,QWORD PTR [rcx]
  40721e:	jmp    407224 <rb_strcasecmp@plt+0x4d04>
  407220:	mov    QWORD PTR [r15+0x10],rsi
  407224:	mov    rbp,QWORD PTR [rsp+0x8]
  407229:	lea    r14,[rip+0x88e8]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  407230:	test   rsi,rsi
  407233:	lea    rsi,[rsi+0x10]
  407237:	cmove  rsi,rax
  40723b:	mov    QWORD PTR [rsi],rdx
  40723e:	vxorps xmm0,xmm0,xmm0
  407242:	vmovups XMMWORD PTR [rcx],xmm0
  407246:	dec    QWORD PTR [r15+0x18]
  40724a:	mov    rdi,rbx
  40724d:	call   4021f0 <free@plt>
  407252:	cmp    QWORD PTR [r15+0x18],0x0
  407257:	jne    40729e <rb_strcasecmp@plt+0x4d7e>
  407259:	mov    edi,DWORD PTR [rbp+0x0]
  40725c:	lea    rsi,[rip+0x3772]        # 40a9d5 <rb_strcasecmp@plt+0x84b5>
  407263:	xor    eax,eax
  407265:	call   403050 <rb_strcasecmp@plt+0xb30>
  40726a:	mov    rdi,r15
  40726d:	call   4021f0 <free@plt>
  407272:	mov    esi,DWORD PTR [r14+0x18]
  407276:	mov    rax,QWORD PTR [rbp+0x1d0]
  40727d:	mov    rcx,rsi
  407280:	shl    rcx,0x5
  407284:	vxorps xmm0,xmm0,xmm0
  407288:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  40728e:	mov    rdi,rbp
  407291:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407296:	dec    DWORD PTR [rbp+0x1cc]
  40729c:	je     4072ad <rb_strcasecmp@plt+0x4d8d>
  40729e:	add    rsp,0x18
  4072a2:	pop    rbx
  4072a3:	pop    r12
  4072a5:	pop    r13
  4072a7:	pop    r14
  4072a9:	pop    r15
  4072ab:	pop    rbp
  4072ac:	ret    
  4072ad:	mov    rdi,rbp
  4072b0:	add    rsp,0x18
  4072b4:	pop    rbx
  4072b5:	pop    r12
  4072b7:	pop    r13
  4072b9:	pop    r14
  4072bb:	pop    r15
  4072bd:	pop    rbp
  4072be:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  4072c3:	lea    rsi,[rip+0x3730]        # 40a9fa <rb_strcasecmp@plt+0x84da>
  4072ca:	mov    edi,0x43
  4072cf:	mov    rdx,r12
  4072d2:	xor    eax,eax
  4072d4:	call   403120 <rb_strcasecmp@plt+0xc00>
  4072d9:	mov    edi,0x3
  4072de:	call   4020e0 <exit@plt>
  4072e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072ed:	nop    DWORD PTR [rax]
  4072f0:	push   r15
  4072f2:	push   r14
  4072f4:	push   rbx
  4072f5:	mov    eax,DWORD PTR [rdi+0x324]
  4072fb:	lea    ecx,[rax-0x1]
  4072fe:	mov    DWORD PTR [rdi+0x324],ecx
  407304:	cmp    eax,0x1
  407307:	jg     40737b <rb_strcasecmp@plt+0x4e5b>
  407309:	mov    r15,rdi
  40730c:	cmp    BYTE PTR [rdi+0x320],0x0
  407313:	je     40737b <rb_strcasecmp@plt+0x4e5b>
  407315:	mov    rdi,QWORD PTR [r15+0x308]
  40731c:	test   rdi,rdi
  40731f:	je     407381 <rb_strcasecmp@plt+0x4e61>
  407321:	lea    r14,[r15+0x308]
  407328:	jmp    407361 <rb_strcasecmp@plt+0x4e41>
  40732a:	nop    WORD PTR [rax+rax*1+0x0]
  407330:	mov    QWORD PTR [r15+0x310],rcx
  407337:	test   rcx,rcx
  40733a:	lea    rcx,[rcx+0x10]
  40733e:	cmove  rcx,r14
  407342:	mov    QWORD PTR [rcx],rbx
  407345:	vxorps xmm0,xmm0,xmm0
  407349:	vmovups XMMWORD PTR [rax],xmm0
  40734d:	dec    QWORD PTR [r15+0x318]
  407354:	call   4021f0 <free@plt>
  407359:	mov    rdi,rbx
  40735c:	test   rbx,rbx
  40735f:	je     407381 <rb_strcasecmp@plt+0x4e61>
  407361:	mov    rcx,QWORD PTR [rdi+0x8]
  407365:	mov    rbx,QWORD PTR [rdi+0x10]
  407369:	lea    rax,[rdi+0x8]
  40736d:	test   rbx,rbx
  407370:	je     407330 <rb_strcasecmp@plt+0x4e10>
  407372:	mov    QWORD PTR [rbx+0x8],rcx
  407376:	mov    rcx,QWORD PTR [rax]
  407379:	jmp    407337 <rb_strcasecmp@plt+0x4e17>
  40737b:	pop    rbx
  40737c:	pop    r14
  40737e:	pop    r15
  407380:	ret    
  407381:	mov    rax,QWORD PTR [rip+0xcbe0]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  407388:	nop    DWORD PTR [rax+rax*1+0x0]
  407390:	test   rax,rax
  407393:	je     4073e7 <rb_strcasecmp@plt+0x4ec7>
  407395:	mov    rdi,rax
  407398:	mov    rax,QWORD PTR [rax+0x10]
  40739c:	cmp    QWORD PTR [rdi],r15
  40739f:	jne    407390 <rb_strcasecmp@plt+0x4e70>
  4073a1:	lea    rcx,[rdi+0x8]
  4073a5:	mov    rdx,QWORD PTR [rdi+0x8]
  4073a9:	test   rax,rax
  4073ac:	je     4073b7 <rb_strcasecmp@plt+0x4e97>
  4073ae:	mov    QWORD PTR [rax+0x8],rdx
  4073b2:	mov    rdx,QWORD PTR [rcx]
  4073b5:	jmp    4073be <rb_strcasecmp@plt+0x4e9e>
  4073b7:	mov    QWORD PTR [rip+0xcbb2],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  4073be:	test   rdx,rdx
  4073c1:	lea    rdx,[rdx+0x10]
  4073c5:	lea    rsi,[rip+0xcb9c]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4073cc:	cmove  rdx,rsi
  4073d0:	mov    QWORD PTR [rdx],rax
  4073d3:	vxorps xmm0,xmm0,xmm0
  4073d7:	vmovups XMMWORD PTR [rcx],xmm0
  4073db:	dec    QWORD PTR [rip+0xcb96]        # 413f78 <rb_strcasecmp@plt+0x11a58>
  4073e2:	call   4022c0 <rb_free_rb_dlink_node@plt>
  4073e7:	mov    rdi,r15
  4073ea:	pop    rbx
  4073eb:	pop    r14
  4073ed:	pop    r15
  4073ef:	jmp    4021f0 <free@plt>
  4073f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073fe:	xchg   ax,ax
  407400:	push   rbp
  407401:	push   r15
  407403:	push   r14
  407405:	push   r13
  407407:	push   r12
  407409:	push   rbx
  40740a:	push   rax
  40740b:	lea    r12,[rip+0x8706]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  407412:	mov    eax,DWORD PTR [r12+0x18]
  407417:	mov    rcx,QWORD PTR [rdi+0x1d0]
  40741e:	shl    rax,0x5
  407422:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  407427:	test   r15,r15
  40742a:	je     4074f6 <rb_strcasecmp@plt+0x4fd6>
  407430:	mov    r14,rdi
  407433:	cmp    QWORD PTR [r15+0x18],0x0
  407438:	je     4074c0 <rb_strcasecmp@plt+0x4fa0>
  40743e:	lea    r13,[r15+0x8]
  407442:	mov    edi,DWORD PTR [r14]
  407445:	xor    eax,eax
  407447:	call   403050 <rb_strcasecmp@plt+0xb30>
  40744c:	mov    rbp,QWORD PTR [r13+0x0]
  407450:	test   rbp,rbp
  407453:	je     4074c0 <rb_strcasecmp@plt+0x4fa0>
  407455:	mov    rbx,QWORD PTR [rbp+0x0]
  407459:	mov    rbp,QWORD PTR [rbp+0x10]
  40745d:	mov    rdi,QWORD PTR [rbx+0x10]
  407461:	call   402d30 <rb_strcasecmp@plt+0x810>
  407466:	mov    rdi,QWORD PTR [rbx]
  407469:	call   4072f0 <rb_strcasecmp@plt+0x4dd0>
  40746e:	mov    rdx,QWORD PTR [rbx+0x20]
  407472:	mov    rax,QWORD PTR [rbx+0x28]
  407476:	lea    rcx,[rbx+0x20]
  40747a:	test   rax,rax
  40747d:	je     407490 <rb_strcasecmp@plt+0x4f70>
  40747f:	mov    QWORD PTR [rax+0x8],rdx
  407483:	mov    rdx,QWORD PTR [rcx]
  407486:	jmp    407494 <rb_strcasecmp@plt+0x4f74>
  407488:	nop    DWORD PTR [rax+rax*1+0x0]
  407490:	mov    QWORD PTR [r15+0x10],rdx
  407494:	test   rdx,rdx
  407497:	lea    rdx,[rdx+0x10]
  40749b:	cmove  rdx,r13
  40749f:	mov    QWORD PTR [rdx],rax
  4074a2:	vxorps xmm0,xmm0,xmm0
  4074a6:	vmovups XMMWORD PTR [rcx],xmm0
  4074aa:	dec    QWORD PTR [r15+0x18]
  4074ae:	test   rbx,rbx
  4074b1:	je     407450 <rb_strcasecmp@plt+0x4f30>
  4074b3:	mov    rdi,rbx
  4074b6:	call   4021f0 <free@plt>
  4074bb:	test   rbp,rbp
  4074be:	jne    407455 <rb_strcasecmp@plt+0x4f35>
  4074c0:	mov    rdi,r15
  4074c3:	call   4021f0 <free@plt>
  4074c8:	mov    esi,DWORD PTR [r12+0x18]
  4074cd:	mov    rax,QWORD PTR [r14+0x1d0]
  4074d4:	mov    rcx,rsi
  4074d7:	shl    rcx,0x5
  4074db:	vxorps xmm0,xmm0,xmm0
  4074df:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  4074e5:	mov    rdi,r14
  4074e8:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  4074ed:	dec    DWORD PTR [r14+0x1cc]
  4074f4:	je     407505 <rb_strcasecmp@plt+0x4fe5>
  4074f6:	add    rsp,0x8
  4074fa:	pop    rbx
  4074fb:	pop    r12
  4074fd:	pop    r13
  4074ff:	pop    r14
  407501:	pop    r15
  407503:	pop    rbp
  407504:	ret    
  407505:	mov    rdi,r14
  407508:	add    rsp,0x8
  40750c:	pop    rbx
  40750d:	pop    r12
  40750f:	pop    r13
  407511:	pop    r14
  407513:	pop    r15
  407515:	pop    rbp
  407516:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  40751b:	nop    DWORD PTR [rax+rax*1+0x0]
  407520:	push   rax
  407521:	mov    rdi,QWORD PTR [rdx]
  407524:	xor    esi,esi
  407526:	mov    edx,0xa
  40752b:	call   4022f0 <strtol@plt>
  407530:	test   eax,eax
  407532:	js     40753c <rb_strcasecmp@plt+0x501c>
  407534:	mov    DWORD PTR [rip+0x8726],eax        # 40fc60 <rb_strcasecmp@plt+0xd740>
  40753a:	pop    rax
  40753b:	ret    
  40753c:	lea    rsi,[rip+0x3592]        # 40aad5 <rb_strcasecmp@plt+0x85b5>
  407543:	mov    edi,0x43
  407548:	mov    edx,eax
  40754a:	xor    eax,eax
  40754c:	call   403120 <rb_strcasecmp@plt+0xc00>
  407551:	mov    edi,0x3
  407556:	call   4020e0 <exit@plt>
  40755b:	nop    DWORD PTR [rax+rax*1+0x0]
  407560:	mov    rax,QWORD PTR [rdx]
  407563:	cmp    BYTE PTR [rax],0x31
  407566:	sete   BYTE PTR [rip+0x86f7]        # 40fc64 <rb_strcasecmp@plt+0xd744>
  40756d:	ret    
  40756e:	xchg   ax,ax
  407570:	push   r15
  407572:	push   r14
  407574:	push   rbx
  407575:	sub    rsp,0x10
  407579:	lea    r14,[rip+0xcba8]        # 414128 <rb_strcasecmp@plt+0x11c08>
  407580:	mov    rdi,QWORD PTR [r14]
  407583:	mov    rbx,rsp
  407586:	mov    rsi,rbx
  407589:	call   402240 <rb_dictionary_foreach_start@plt>
  40758e:	mov    rdi,QWORD PTR [r14]
  407591:	mov    rsi,rbx
  407594:	call   402140 <rb_dictionary_foreach_cur@plt>
  407599:	test   rax,rax
  40759c:	je     4075f1 <rb_strcasecmp@plt+0x50d1>
  40759e:	lea    r15,[rip+0x8643]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4075a5:	mov    rbx,rsp
  4075a8:	jmp    4075cb <rb_strcasecmp@plt+0x50ab>
  4075aa:	nop    WORD PTR [rax+rax*1+0x0]
  4075b0:	mov    rdi,QWORD PTR [r14]
  4075b3:	mov    rsi,rbx
  4075b6:	call   4021d0 <rb_dictionary_foreach_next@plt>
  4075bb:	mov    rdi,QWORD PTR [r14]
  4075be:	mov    rsi,rbx
  4075c1:	call   402140 <rb_dictionary_foreach_cur@plt>
  4075c6:	test   rax,rax
  4075c9:	je     4075f1 <rb_strcasecmp@plt+0x50d1>
  4075cb:	mov    ecx,DWORD PTR [r15+0x18]
  4075cf:	mov    rdx,QWORD PTR [rax+0x1d0]
  4075d6:	shl    rcx,0x5
  4075da:	cmp    QWORD PTR [rdx+rcx*1+0x10],0x0
  4075e0:	je     4075b0 <rb_strcasecmp@plt+0x5090>
  4075e2:	mov    rdi,rax
  4075e5:	mov    esi,0x2
  4075ea:	call   407800 <rb_strcasecmp@plt+0x52e0>
  4075ef:	jmp    4075b0 <rb_strcasecmp@plt+0x5090>
  4075f1:	add    rsp,0x10
  4075f5:	pop    rbx
  4075f6:	pop    r14
  4075f8:	pop    r15
  4075fa:	ret    
  4075fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407600:	push   rbp
  407601:	push   r15
  407603:	push   r14
  407605:	push   r12
  407607:	push   rbx
  407608:	sub    rsp,0x100
  40760f:	mov    rbx,rdi
  407612:	mov    edi,0x1
  407617:	mov    esi,0x8
  40761c:	call   402440 <calloc@plt>
  407621:	test   rax,rax
  407624:	je     4077c6 <rb_strcasecmp@plt+0x52a6>
  40762a:	mov    r14,rax
  40762d:	cmp    BYTE PTR [rip+0x8630],0x0        # 40fc64 <rb_strcasecmp@plt+0xd744>
  407634:	je     407759 <rb_strcasecmp@plt+0x5239>
  40763a:	movzx  r15d,WORD PTR [rbx+0xf8]
  407642:	inc    DWORD PTR [rbx+0x1cc]
  407648:	mov    edi,DWORD PTR [rbx]
  40764a:	lea    rsi,[rip+0x34a9]        # 40aafa <rb_strcasecmp@plt+0x85da>
  407651:	xor    eax,eax
  407653:	call   403050 <rb_strcasecmp@plt+0xb30>
  407658:	lea    rax,[rip+0x8589]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  40765f:	mov    ebp,DWORD PTR [rax+0x18]
  407662:	mov    rax,QWORD PTR [rbx+0x1d0]
  407669:	shl    rbp,0x5
  40766d:	mov    QWORD PTR [rax+rbp*1+0x10],r14
  407672:	movsxd r12,DWORD PTR [rip+0x85e7]        # 40fc60 <rb_strcasecmp@plt+0xd740>
  407679:	call   402280 <rb_current_time@plt>
  40767e:	add    rax,r12
  407681:	mov    rcx,QWORD PTR [rbx+0x1d0]
  407688:	mov    QWORD PTR [rcx+rbp*1+0x8],rax
  40768d:	mov    edx,DWORD PTR [rbx+0x4]
  407690:	lea    rcx,[rip+0x34f5]        # 40ab8c <rb_strcasecmp@plt+0x866c>
  407697:	mov    edi,r15d
  40769a:	mov    esi,0x1
  40769f:	call   402110 <rb_socket@plt>
  4076a4:	mov    QWORD PTR [r14],rax
  4076a7:	test   rax,rax
  4076aa:	je     407785 <rb_strcasecmp@plt+0x5265>
  4076b0:	lea    rcx,[rbx+0xf8]
  4076b7:	vmovups ymm0,YMMWORD PTR [rbx+0x40]
  4076bc:	vmovups ymm1,YMMWORD PTR [rbx+0x60]
  4076c1:	vmovups ymm2,YMMWORD PTR [rbx+0x80]
  4076c9:	vmovups ymm3,YMMWORD PTR [rbx+0xa0]
  4076d1:	vmovups YMMWORD PTR [rsp+0xe0],ymm3
  4076da:	vmovups YMMWORD PTR [rsp+0xc0],ymm2
  4076e3:	vmovups YMMWORD PTR [rsp+0xa0],ymm1
  4076ec:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  4076f5:	vmovups ymm0,YMMWORD PTR [rcx]
  4076f9:	vmovups ymm1,YMMWORD PTR [rcx+0x20]
  4076fe:	vmovups ymm2,YMMWORD PTR [rcx+0x40]
  407703:	vmovups ymm3,YMMWORD PTR [rcx+0x60]
  407708:	vmovups YMMWORD PTR [rsp],ymm0
  40770d:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  407713:	vmovups YMMWORD PTR [rsp+0x40],ymm2
  407719:	vmovups YMMWORD PTR [rsp+0x60],ymm3
  40771f:	mov    WORD PTR [rsp+0x82],0x0
  407729:	mov    WORD PTR [rsp+0x2],0x7100
  407730:	mov    r9d,DWORD PTR [rip+0x8529]        # 40fc60 <rb_strcasecmp@plt+0xd740>
  407737:	lea    rcx,[rip+0x182]        # 4078c0 <rb_strcasecmp@plt+0x53a0>
  40773e:	mov    rsi,rsp
  407741:	lea    rdx,[rsp+0x80]
  407749:	mov    rdi,rax
  40774c:	mov    r8,rbx
  40774f:	vzeroupper 
  407752:	call   402090 <rb_connect_tcp@plt>
  407757:	jmp    4077b4 <rb_strcasecmp@plt+0x5294>
  407759:	mov    rdi,r14
  40775c:	call   4021f0 <free@plt>
  407761:	mov    edi,DWORD PTR [rbx]
  407763:	lea    rsi,[rip+0x3401]        # 40ab6b <rb_strcasecmp@plt+0x864b>
  40776a:	xor    eax,eax
  40776c:	call   403050 <rb_strcasecmp@plt+0xb30>
  407771:	lea    rax,[rip+0x8470]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407778:	mov    esi,DWORD PTR [rax+0x18]
  40777b:	mov    rdi,rbx
  40777e:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407783:	jmp    4077b4 <rb_strcasecmp@plt+0x5294>
  407785:	call   402390 <__errno_location@plt>
  40778a:	mov    edi,DWORD PTR [rax]
  40778c:	call   4022a0 <strerror@plt>
  407791:	lea    rsi,[rip+0x33fa]        # 40ab92 <rb_strcasecmp@plt+0x8672>
  407798:	mov    edi,0x44
  40779d:	mov    rdx,rax
  4077a0:	xor    eax,eax
  4077a2:	call   403120 <rb_strcasecmp@plt+0xc00>
  4077a7:	mov    rdi,rbx
  4077aa:	mov    esi,0x2
  4077af:	call   407800 <rb_strcasecmp@plt+0x52e0>
  4077b4:	mov    al,0x1
  4077b6:	add    rsp,0x100
  4077bd:	pop    rbx
  4077be:	pop    r12
  4077c0:	pop    r14
  4077c2:	pop    r15
  4077c4:	pop    rbp
  4077c5:	ret    
  4077c6:	call   402380 <rb_outofmemory@plt>
  4077cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4077d0:	lea    rax,[rip+0x8411]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4077d7:	mov    eax,DWORD PTR [rax+0x18]
  4077da:	mov    rcx,QWORD PTR [rdi+0x1d0]
  4077e1:	shl    rax,0x5
  4077e5:	cmp    QWORD PTR [rcx+rax*1+0x10],0x0
  4077eb:	je     4077f4 <rb_strcasecmp@plt+0x52d4>
  4077ed:	mov    esi,0x2
  4077f2:	jmp    407800 <rb_strcasecmp@plt+0x52e0>
  4077f4:	ret    
  4077f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077ff:	nop
  407800:	push   rbp
  407801:	push   r15
  407803:	push   r14
  407805:	push   rbx
  407806:	push   rax
  407807:	mov    r14d,esi
  40780a:	mov    rbx,rdi
  40780d:	lea    r15,[rip+0x83d4]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407814:	mov    eax,DWORD PTR [r15+0x18]
  407818:	mov    rcx,QWORD PTR [rdi+0x1d0]
  40781f:	shl    rax,0x5
  407823:	mov    rbp,QWORD PTR [rcx+rax*1+0x10]
  407828:	add    rdi,0x1b8
  40782f:	lea    rsi,[rip+0x2ada]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  407836:	mov    edx,0xb
  40783b:	call   4021c0 <rb_strlcpy@plt>
  407840:	mov    rdi,QWORD PTR [rbp+0x0]
  407844:	test   rdi,rdi
  407847:	je     40784e <rb_strcasecmp@plt+0x532e>
  407849:	call   4022e0 <rb_close@plt>
  40784e:	test   rbp,rbp
  407851:	je     40785b <rb_strcasecmp@plt+0x533b>
  407853:	mov    rdi,rbp
  407856:	call   4021f0 <free@plt>
  40785b:	mov    eax,DWORD PTR [r15+0x18]
  40785f:	mov    rcx,QWORD PTR [rbx+0x1d0]
  407866:	shl    rax,0x5
  40786a:	vxorps xmm0,xmm0,xmm0
  40786e:	vmovups XMMWORD PTR [rcx+rax*1+0x8],xmm0
  407874:	mov    edi,DWORD PTR [rbx]
  407876:	mov    eax,r14d
  407879:	lea    rcx,[rip+0x64f0]        # 40dd70 <rb_strcasecmp@plt+0xb850>
  407880:	mov    rsi,QWORD PTR [rcx+rax*8]
  407884:	xor    eax,eax
  407886:	call   403050 <rb_strcasecmp@plt+0xb30>
  40788b:	mov    esi,DWORD PTR [r15+0x18]
  40788f:	mov    rdi,rbx
  407892:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407897:	dec    DWORD PTR [rbx+0x1cc]
  40789d:	je     4078aa <rb_strcasecmp@plt+0x538a>
  40789f:	add    rsp,0x8
  4078a3:	pop    rbx
  4078a4:	pop    r14
  4078a6:	pop    r15
  4078a8:	pop    rbp
  4078a9:	ret    
  4078aa:	mov    rdi,rbx
  4078ad:	add    rsp,0x8
  4078b1:	pop    rbx
  4078b2:	pop    r14
  4078b4:	pop    r15
  4078b6:	pop    rbp
  4078b7:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  4078bc:	nop    DWORD PTR [rax+0x0]
  4078c0:	push   r15
  4078c2:	push   r14
  4078c4:	push   r12
  4078c6:	push   rbx
  4078c7:	sub    rsp,0x28
  4078cb:	mov    rbx,rdx
  4078ce:	test   esi,esi
  4078d0:	jne    407941 <rb_strcasecmp@plt+0x5421>
  4078d2:	mov    rax,QWORD PTR [rbx+0x1d0]
  4078d9:	lea    rcx,[rip+0x8308]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4078e0:	mov    ecx,DWORD PTR [rcx+0x18]
  4078e3:	shl    rcx,0x5
  4078e7:	mov    r12,QWORD PTR [rax+rcx*1+0x10]
  4078ec:	movzx  ecx,WORD PTR [rbx+0xf6]
  4078f3:	movzx  r8d,WORD PTR [rbx+0x3e]
  4078f8:	lea    rdx,[rip+0x32b5]        # 40abb4 <rb_strcasecmp@plt+0x8694>
  4078ff:	mov    r14,rsp
  407902:	mov    esi,0x20
  407907:	mov    rdi,r14
  40790a:	xor    eax,eax
  40790c:	call   402080 <snprintf@plt>
  407911:	mov    rdi,r14
  407914:	call   402200 <strlen@plt>
  407919:	mov    r15,rax
  40791c:	mov    rdi,QWORD PTR [r12]
  407920:	mov    rsi,r14
  407923:	mov    edx,r15d
  407926:	call   4021a0 <rb_write@plt>
  40792b:	movsxd rcx,r15d
  40792e:	cmp    rax,rcx
  407931:	jne    407941 <rb_strcasecmp@plt+0x5421>
  407933:	mov    rdi,QWORD PTR [r12]
  407937:	mov    rsi,rbx
  40793a:	call   407960 <rb_strcasecmp@plt+0x5440>
  40793f:	jmp    40794e <rb_strcasecmp@plt+0x542e>
  407941:	mov    rdi,rbx
  407944:	mov    esi,0x2
  407949:	call   407800 <rb_strcasecmp@plt+0x52e0>
  40794e:	add    rsp,0x28
  407952:	pop    rbx
  407953:	pop    r12
  407955:	pop    r14
  407957:	pop    r15
  407959:	ret    
  40795a:	nop    WORD PTR [rax+rax*1+0x0]
  407960:	push   rbp
  407961:	mov    rbp,rsp
  407964:	push   r15
  407966:	push   r14
  407968:	push   r13
  40796a:	push   r12
  40796c:	push   rbx
  40796d:	and    rsp,0xffffffffffffffe0
  407971:	sub    rsp,0xa0
  407978:	vxorps xmm0,xmm0,xmm0
  40797c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  407982:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  407988:	mov    r14,rsi
  40798b:	mov    rbx,rdi
  40798e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407994:	vmovaps YMMWORD PTR [rsp],ymm0
  407999:	mov    BYTE PTR [rsp+0x80],0x0
  4079a1:	mov    rsi,rsp
  4079a4:	mov    edx,0x80
  4079a9:	vzeroupper 
  4079ac:	call   402220 <rb_read@plt>
  4079b1:	test   rax,rax
  4079b4:	js     407a93 <rb_strcasecmp@plt+0x5573>
  4079ba:	je     407abc <rb_strcasecmp@plt+0x559c>
  4079c0:	mov    rdi,rsp
  4079c3:	mov    esi,0x3a
  4079c8:	call   402330 <strchr@plt>
  4079cd:	mov    r15d,0x3
  4079d3:	test   rax,rax
  4079d6:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  4079dc:	mov    rbx,rax
  4079df:	mov    BYTE PTR [rax],0x0
  4079e2:	inc    rbx
  4079e5:	mov    rdi,rbx
  4079e8:	mov    esi,0x3a
  4079ed:	call   402330 <strchr@plt>
  4079f2:	test   rax,rax
  4079f5:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  4079fb:	mov    r12,rax
  4079fe:	mov    BYTE PTR [rax],0x0
  407a01:	mov    rdi,rsp
  407a04:	mov    esi,0x2c
  407a09:	call   402330 <strchr@plt>
  407a0e:	test   rax,rax
  407a11:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  407a17:	mov    r13,rax
  407a1a:	mov    BYTE PTR [rax],0x0
  407a1d:	mov    rdi,rsp
  407a20:	xor    esi,esi
  407a22:	mov    edx,0xa
  407a27:	call   4022f0 <strtol@plt>
  407a2c:	test   eax,eax
  407a2e:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  407a34:	inc    r13
  407a37:	mov    rdi,r13
  407a3a:	xor    esi,esi
  407a3c:	mov    edx,0xa
  407a41:	call   4022f0 <strtol@plt>
  407a46:	test   eax,eax
  407a48:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  407a4e:	lea    rsi,[rip+0x3169]        # 40abbe <rb_strcasecmp@plt+0x869e>
  407a55:	mov    rdi,rbx
  407a58:	call   4022b0 <strstr@plt>
  407a5d:	test   rax,rax
  407a60:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  407a62:	inc    r12
  407a65:	mov    rdi,r12
  407a68:	mov    esi,0x3a
  407a6d:	call   402330 <strchr@plt>
  407a72:	test   rax,rax
  407a75:	je     407ac2 <rb_strcasecmp@plt+0x55a2>
  407a77:	mov    BYTE PTR [rax],0x0
  407a7a:	add    rax,0x2
  407a7e:	xchg   ax,ax
  407a80:	movzx  ebx,BYTE PTR [rax-0x1]
  407a84:	mov    ecx,ebx
  407a86:	or     cl,0x20
  407a89:	cmp    cl,0x7e
  407a8c:	jne    407adc <rb_strcasecmp@plt+0x55bc>
  407a8e:	inc    rax
  407a91:	jmp    407a80 <rb_strcasecmp@plt+0x5560>
  407a93:	call   402390 <__errno_location@plt>
  407a98:	mov    edi,DWORD PTR [rax]
  407a9a:	call   402060 <rb_ignore_errno@plt>
  407a9f:	test   eax,eax
  407aa1:	je     407abc <rb_strcasecmp@plt+0x559c>
  407aa3:	lea    rdx,[rip+0xfffffffffffffeb6]        # 407960 <rb_strcasecmp@plt+0x5440>
  407aaa:	mov    rdi,rbx
  407aad:	mov    esi,0x1
  407ab2:	mov    rcx,r14
  407ab5:	call   4020b0 <rb_setselect@plt>
  407aba:	jmp    407acd <rb_strcasecmp@plt+0x55ad>
  407abc:	mov    r15d,0x2
  407ac2:	mov    rdi,r14
  407ac5:	mov    esi,r15d
  407ac8:	call   407800 <rb_strcasecmp@plt+0x52e0>
  407acd:	lea    rsp,[rbp-0x28]
  407ad1:	pop    rbx
  407ad2:	pop    r12
  407ad4:	pop    r13
  407ad6:	pop    r14
  407ad8:	pop    r15
  407ada:	pop    rbp
  407adb:	ret    
  407adc:	lea    rcx,[r14+0x1b8]
  407ae3:	test   bl,bl
  407ae5:	je     407b33 <rb_strcasecmp@plt+0x5613>
  407ae7:	mov    edx,0xa
  407aec:	movabs rsi,0x1000000400000
  407af6:	movabs r8,0x40000000000009
  407b00:	lea    edi,[rbx-0xa]
  407b03:	cmp    dil,0x36
  407b07:	ja     407b19 <rb_strcasecmp@plt+0x55f9>
  407b09:	movzx  edi,dil
  407b0d:	bt     rsi,rdi
  407b11:	jb     407b25 <rb_strcasecmp@plt+0x5605>
  407b13:	bt     r8,rdi
  407b17:	jb     407b33 <rb_strcasecmp@plt+0x5613>
  407b19:	cmp    bl,0x5b
  407b1c:	je     407b25 <rb_strcasecmp@plt+0x5605>
  407b1e:	mov    BYTE PTR [rcx],bl
  407b20:	inc    rcx
  407b23:	dec    edx
  407b25:	movzx  ebx,BYTE PTR [rax]
  407b28:	test   bl,bl
  407b2a:	je     407b33 <rb_strcasecmp@plt+0x5613>
  407b2c:	inc    rax
  407b2f:	test   edx,edx
  407b31:	jne    407b00 <rb_strcasecmp@plt+0x55e0>
  407b33:	mov    BYTE PTR [rcx],0x0
  407b36:	lea    r15,[rip+0x80ab]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407b3d:	mov    eax,DWORD PTR [r15+0x18]
  407b41:	mov    rcx,QWORD PTR [r14+0x1d0]
  407b48:	shl    rax,0x5
  407b4c:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  407b51:	mov    rdi,QWORD PTR [rbx]
  407b54:	test   rdi,rdi
  407b57:	je     407b5e <rb_strcasecmp@plt+0x563e>
  407b59:	call   4022e0 <rb_close@plt>
  407b5e:	test   rbx,rbx
  407b61:	je     407b6b <rb_strcasecmp@plt+0x564b>
  407b63:	mov    rdi,rbx
  407b66:	call   4021f0 <free@plt>
  407b6b:	mov    eax,DWORD PTR [r15+0x18]
  407b6f:	mov    rcx,QWORD PTR [r14+0x1d0]
  407b76:	shl    rax,0x5
  407b7a:	vxorps xmm0,xmm0,xmm0
  407b7e:	vmovups XMMWORD PTR [rcx+rax*1+0x8],xmm0
  407b84:	mov    edi,DWORD PTR [r14]
  407b87:	lea    rsi,[rip+0x2f7f]        # 40ab0d <rb_strcasecmp@plt+0x85ed>
  407b8e:	xor    eax,eax
  407b90:	call   403050 <rb_strcasecmp@plt+0xb30>
  407b95:	mov    esi,DWORD PTR [r15+0x18]
  407b99:	mov    rdi,r14
  407b9c:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407ba1:	dec    DWORD PTR [r14+0x1cc]
  407ba8:	jne    407acd <rb_strcasecmp@plt+0x55ad>
  407bae:	mov    rdi,r14
  407bb1:	call   403b60 <rb_strcasecmp@plt+0x1640>
  407bb6:	jmp    407acd <rb_strcasecmp@plt+0x55ad>
  407bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407bc0:	push   rax
  407bc1:	mov    rdi,QWORD PTR [rdx]
  407bc4:	xor    esi,esi
  407bc6:	mov    edx,0xa
  407bcb:	call   4022f0 <strtol@plt>
  407bd0:	test   eax,eax
  407bd2:	js     407bdc <rb_strcasecmp@plt+0x56bc>
  407bd4:	mov    DWORD PTR [rip+0x813e],eax        # 40fd18 <rb_strcasecmp@plt+0xd7f8>
  407bda:	pop    rax
  407bdb:	ret    
  407bdc:	lea    rsi,[rip+0x2fef]        # 40abd2 <rb_strcasecmp@plt+0x86b2>
  407be3:	mov    edi,0x43
  407be8:	mov    edx,eax
  407bea:	xor    eax,eax
  407bec:	call   403120 <rb_strcasecmp@plt+0xc00>
  407bf1:	mov    edi,0x3
  407bf6:	call   4020e0 <exit@plt>
  407bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  407c00:	push   r15
  407c02:	push   r14
  407c04:	push   rbx
  407c05:	sub    rsp,0x10
  407c09:	lea    r14,[rip+0xc518]        # 414128 <rb_strcasecmp@plt+0x11c08>
  407c10:	mov    rdi,QWORD PTR [r14]
  407c13:	mov    rbx,rsp
  407c16:	mov    rsi,rbx
  407c19:	call   402240 <rb_dictionary_foreach_start@plt>
  407c1e:	mov    rdi,QWORD PTR [r14]
  407c21:	mov    rsi,rbx
  407c24:	call   402140 <rb_dictionary_foreach_cur@plt>
  407c29:	test   rax,rax
  407c2c:	je     407c81 <rb_strcasecmp@plt+0x5761>
  407c2e:	lea    r15,[rip+0x806b]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407c35:	mov    rbx,rsp
  407c38:	jmp    407c5b <rb_strcasecmp@plt+0x573b>
  407c3a:	nop    WORD PTR [rax+rax*1+0x0]
  407c40:	mov    rdi,QWORD PTR [r14]
  407c43:	mov    rsi,rbx
  407c46:	call   4021d0 <rb_dictionary_foreach_next@plt>
  407c4b:	mov    rdi,QWORD PTR [r14]
  407c4e:	mov    rsi,rbx
  407c51:	call   402140 <rb_dictionary_foreach_cur@plt>
  407c56:	test   rax,rax
  407c59:	je     407c81 <rb_strcasecmp@plt+0x5761>
  407c5b:	mov    ecx,DWORD PTR [r15+0x18]
  407c5f:	mov    rdx,QWORD PTR [rax+0x1d0]
  407c66:	shl    rcx,0x5
  407c6a:	cmp    QWORD PTR [rdx+rcx*1+0x10],0x0
  407c70:	je     407c40 <rb_strcasecmp@plt+0x5720>
  407c72:	mov    rdi,rax
  407c75:	mov    esi,0x1
  407c7a:	call   407d60 <rb_strcasecmp@plt+0x5840>
  407c7f:	jmp    407c40 <rb_strcasecmp@plt+0x5720>
  407c81:	add    rsp,0x10
  407c85:	pop    rbx
  407c86:	pop    r14
  407c88:	pop    r15
  407c8a:	ret    
  407c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c90:	push   r15
  407c92:	push   r14
  407c94:	push   r12
  407c96:	push   rbx
  407c97:	push   rax
  407c98:	mov    r15,rdi
  407c9b:	mov    edi,0x1
  407ca0:	mov    esi,0x8
  407ca5:	call   402440 <calloc@plt>
  407caa:	test   rax,rax
  407cad:	je     407d26 <rb_strcasecmp@plt+0x5806>
  407caf:	mov    r14,rax
  407cb2:	inc    DWORD PTR [r15+0x1cc]
  407cb9:	lea    rax,[rip+0x7fe0]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407cc0:	mov    ebx,DWORD PTR [rax+0x18]
  407cc3:	mov    rax,QWORD PTR [r15+0x1d0]
  407cca:	shl    rbx,0x5
  407cce:	mov    QWORD PTR [rax+rbx*1+0x10],r14
  407cd3:	movsxd r12,DWORD PTR [rip+0x803e]        # 40fd18 <rb_strcasecmp@plt+0xd7f8>
  407cda:	call   402280 <rb_current_time@plt>
  407cdf:	add    rax,r12
  407ce2:	mov    rcx,QWORD PTR [r15+0x1d0]
  407ce9:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  407cee:	lea    rdi,[r15+0xc0]
  407cf5:	lea    rsi,[rip+0x124]        # 407e20 <rb_strcasecmp@plt+0x5900>
  407cfc:	mov    rdx,r15
  407cff:	call   402bc0 <rb_strcasecmp@plt+0x6a0>
  407d04:	mov    QWORD PTR [r14],rax
  407d07:	mov    edi,DWORD PTR [r15]
  407d0a:	lea    rsi,[rip+0x2ee3]        # 40abf4 <rb_strcasecmp@plt+0x86d4>
  407d11:	xor    eax,eax
  407d13:	call   403050 <rb_strcasecmp@plt+0xb30>
  407d18:	mov    al,0x1
  407d1a:	add    rsp,0x8
  407d1e:	pop    rbx
  407d1f:	pop    r12
  407d21:	pop    r14
  407d23:	pop    r15
  407d25:	ret    
  407d26:	call   402380 <rb_outofmemory@plt>
  407d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d30:	lea    rax,[rip+0x7f69]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407d37:	mov    eax,DWORD PTR [rax+0x18]
  407d3a:	mov    rcx,QWORD PTR [rdi+0x1d0]
  407d41:	shl    rax,0x5
  407d45:	cmp    QWORD PTR [rcx+rax*1+0x10],0x0
  407d4b:	je     407d54 <rb_strcasecmp@plt+0x5834>
  407d4d:	mov    esi,0x1
  407d52:	jmp    407d60 <rb_strcasecmp@plt+0x5840>
  407d54:	ret    
  407d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d5f:	nop
  407d60:	push   rbp
  407d61:	push   r15
  407d63:	push   r14
  407d65:	push   rbx
  407d66:	push   rax
  407d67:	mov    ebp,esi
  407d69:	mov    rbx,rdi
  407d6c:	lea    r15,[rip+0x7f2d]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407d73:	mov    eax,DWORD PTR [r15+0x18]
  407d77:	mov    rcx,QWORD PTR [rdi+0x1d0]
  407d7e:	shl    rax,0x5
  407d82:	mov    r14,QWORD PTR [rcx+rax*1+0x10]
  407d87:	add    rdi,0x178
  407d8e:	lea    rsi,[rip+0x257b]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  407d95:	mov    edx,0x40
  407d9a:	call   4021c0 <rb_strlcpy@plt>
  407d9f:	mov    edi,DWORD PTR [rbx]
  407da1:	mov    eax,ebp
  407da3:	lea    rcx,[rip+0x5ff6]        # 40dda0 <rb_strcasecmp@plt+0xb880>
  407daa:	mov    rsi,QWORD PTR [rcx+rax*8]
  407dae:	xor    eax,eax
  407db0:	call   403050 <rb_strcasecmp@plt+0xb30>
  407db5:	mov    rdi,QWORD PTR [r14]
  407db8:	call   402d30 <rb_strcasecmp@plt+0x810>
  407dbd:	test   r14,r14
  407dc0:	je     407dca <rb_strcasecmp@plt+0x58aa>
  407dc2:	mov    rdi,r14
  407dc5:	call   4021f0 <free@plt>
  407dca:	mov    esi,DWORD PTR [r15+0x18]
  407dce:	mov    rax,QWORD PTR [rbx+0x1d0]
  407dd5:	mov    rcx,rsi
  407dd8:	shl    rcx,0x5
  407ddc:	vxorps xmm0,xmm0,xmm0
  407de0:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  407de6:	mov    rdi,rbx
  407de9:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407dee:	dec    DWORD PTR [rbx+0x1cc]
  407df4:	je     407e01 <rb_strcasecmp@plt+0x58e1>
  407df6:	add    rsp,0x8
  407dfa:	pop    rbx
  407dfb:	pop    r14
  407dfd:	pop    r15
  407dff:	pop    rbp
  407e00:	ret    
  407e01:	mov    rdi,rbx
  407e04:	add    rsp,0x8
  407e08:	pop    rbx
  407e09:	pop    r14
  407e0b:	pop    r15
  407e0d:	pop    rbp
  407e0e:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  407e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e1d:	nop    DWORD PTR [rax]
  407e20:	push   r15
  407e22:	push   r14
  407e24:	push   r12
  407e26:	push   rbx
  407e27:	push   rax
  407e28:	mov    r14,rcx
  407e2b:	test   rdi,rdi
  407e2e:	je     407e4d <rb_strcasecmp@plt+0x592d>
  407e30:	test   sil,sil
  407e33:	je     407e4d <rb_strcasecmp@plt+0x592d>
  407e35:	mov    rbx,rdi
  407e38:	call   402200 <strlen@plt>
  407e3d:	cmp    rax,0x40
  407e41:	jb     407e65 <rb_strcasecmp@plt+0x5945>
  407e43:	mov    rdi,r14
  407e46:	mov    esi,0x2
  407e4b:	jmp    407e55 <rb_strcasecmp@plt+0x5935>
  407e4d:	mov    rdi,r14
  407e50:	mov    esi,0x1
  407e55:	add    rsp,0x8
  407e59:	pop    rbx
  407e5a:	pop    r12
  407e5c:	pop    r14
  407e5e:	pop    r15
  407e60:	jmp    407d60 <rb_strcasecmp@plt+0x5840>
  407e65:	lea    r15,[r14+0x178]
  407e6c:	mov    edx,0x40
  407e71:	mov    rdi,r15
  407e74:	mov    rsi,rbx
  407e77:	call   4021c0 <rb_strlcpy@plt>
  407e7c:	lea    r12,[rip+0x7e1d]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407e83:	mov    eax,DWORD PTR [r12+0x18]
  407e88:	mov    rcx,QWORD PTR [r14+0x1d0]
  407e8f:	shl    rax,0x5
  407e93:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  407e98:	mov    edi,DWORD PTR [r14]
  407e9b:	lea    rsi,[rip+0x2dc6]        # 40ac68 <rb_strcasecmp@plt+0x8748>
  407ea2:	mov    rdx,r15
  407ea5:	xor    eax,eax
  407ea7:	call   403050 <rb_strcasecmp@plt+0xb30>
  407eac:	mov    rdi,QWORD PTR [rbx]
  407eaf:	call   402d30 <rb_strcasecmp@plt+0x810>
  407eb4:	test   rbx,rbx
  407eb7:	je     407ec1 <rb_strcasecmp@plt+0x59a1>
  407eb9:	mov    rdi,rbx
  407ebc:	call   4021f0 <free@plt>
  407ec1:	mov    esi,DWORD PTR [r12+0x18]
  407ec6:	mov    rax,QWORD PTR [r14+0x1d0]
  407ecd:	mov    rcx,rsi
  407ed0:	shl    rcx,0x5
  407ed4:	vxorps xmm0,xmm0,xmm0
  407ed8:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  407ede:	mov    rdi,r14
  407ee1:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  407ee6:	dec    DWORD PTR [r14+0x1cc]
  407eed:	je     407efb <rb_strcasecmp@plt+0x59db>
  407eef:	add    rsp,0x8
  407ef3:	pop    rbx
  407ef4:	pop    r12
  407ef6:	pop    r14
  407ef8:	pop    r15
  407efa:	ret    
  407efb:	mov    rdi,r14
  407efe:	add    rsp,0x8
  407f02:	pop    rbx
  407f03:	pop    r12
  407f05:	pop    r14
  407f07:	pop    r15
  407f09:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  407f0e:	xchg   ax,ax
  407f10:	push   rax
  407f11:	mov    rdi,QWORD PTR [rdx]
  407f14:	xor    esi,esi
  407f16:	mov    edx,0xa
  407f1b:	call   4022f0 <strtol@plt>
  407f20:	test   eax,eax
  407f22:	js     407f2c <rb_strcasecmp@plt+0x5a0c>
  407f24:	mov    DWORD PTR [rip+0x7f2e],eax        # 40fe58 <rb_strcasecmp@plt+0xd938>
  407f2a:	pop    rax
  407f2b:	ret    
  407f2c:	lea    rsi,[rip+0x2dbf]        # 40acf2 <rb_strcasecmp@plt+0x87d2>
  407f33:	mov    edi,0x43
  407f38:	mov    edx,eax
  407f3a:	xor    eax,eax
  407f3c:	pop    rcx
  407f3d:	jmp    403120 <rb_strcasecmp@plt+0xc00>
  407f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f4c:	nop    DWORD PTR [rax+0x0]
  407f50:	push   rbp
  407f51:	push   r14
  407f53:	push   rbx
  407f54:	sub    rsp,0x10
  407f58:	mov    rax,QWORD PTR [rdx]
  407f5b:	cmp    BYTE PTR [rax],0x31
  407f5e:	sete   r14b
  407f62:	jne    407fd1 <rb_strcasecmp@plt+0x5ab1>
  407f64:	cmp    BYTE PTR [rip+0xc015],0x0        # 413f80 <rb_strcasecmp@plt+0x11a60>
  407f6b:	je     407f92 <rb_strcasecmp@plt+0x5a72>
  407f6d:	movzx  eax,WORD PTR [rip+0xc042]        # 413fb6 <rb_strcasecmp@plt+0x11a96>
  407f74:	test   ax,ax
  407f77:	je     407f92 <rb_strcasecmp@plt+0x5a72>
  407f79:	cmp    QWORD PTR [rip+0xc0b7],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  407f81:	jne    407f92 <rb_strcasecmp@plt+0x5a72>
  407f83:	movzx  esi,ax
  407f86:	lea    rdi,[rip+0xbff3]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  407f8d:	call   408b00 <rb_strcasecmp@plt+0x65e0>
  407f92:	cmp    BYTE PTR [rip+0xc0a7],0x0        # 414040 <rb_strcasecmp@plt+0x11b20>
  407f99:	je     408075 <rb_strcasecmp@plt+0x5b55>
  407f9f:	movzx  eax,WORD PTR [rip+0xc0d0]        # 414076 <rb_strcasecmp@plt+0x11b56>
  407fa6:	test   ax,ax
  407fa9:	je     408075 <rb_strcasecmp@plt+0x5b55>
  407faf:	cmp    QWORD PTR [rip+0xc141],0x0        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  407fb7:	jne    408075 <rb_strcasecmp@plt+0x5b55>
  407fbd:	movzx  esi,ax
  407fc0:	lea    rdi,[rip+0xc079]        # 414040 <rb_strcasecmp@plt+0x11b20>
  407fc7:	call   408b00 <rb_strcasecmp@plt+0x65e0>
  407fcc:	jmp    408075 <rb_strcasecmp@plt+0x5b55>
  407fd1:	mov    rax,QWORD PTR [rip+0xc060]        # 414038 <rb_strcasecmp@plt+0x11b18>
  407fd8:	mov    rdi,QWORD PTR [rip+0xc119]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  407fdf:	mov    rcx,rax
  407fe2:	or     rcx,rdi
  407fe5:	je     408075 <rb_strcasecmp@plt+0x5b55>
  407feb:	test   rax,rax
  407fee:	je     407fff <rb_strcasecmp@plt+0x5adf>
  407ff0:	mov    rdi,rax
  407ff3:	call   4022e0 <rb_close@plt>
  407ff8:	mov    rdi,QWORD PTR [rip+0xc0f9]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  407fff:	test   rdi,rdi
  408002:	je     408009 <rb_strcasecmp@plt+0x5ae9>
  408004:	call   4022e0 <rb_close@plt>
  408009:	mov    QWORD PTR [rip+0xc0e4],0x0        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408014:	mov    QWORD PTR [rip+0xc019],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  40801f:	lea    rbp,[rip+0xc102]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408026:	mov    rdi,QWORD PTR [rbp+0x0]
  40802a:	mov    rbx,rsp
  40802d:	mov    rsi,rbx
  408030:	call   402240 <rb_dictionary_foreach_start@plt>
  408035:	mov    rdi,QWORD PTR [rbp+0x0]
  408039:	mov    rsi,rbx
  40803c:	call   402140 <rb_dictionary_foreach_cur@plt>
  408041:	test   rax,rax
  408044:	je     408075 <rb_strcasecmp@plt+0x5b55>
  408046:	mov    rbx,rsp
  408049:	nop    DWORD PTR [rax+0x0]
  408050:	mov    rdi,rax
  408053:	call   408940 <rb_strcasecmp@plt+0x6420>
  408058:	mov    rdi,QWORD PTR [rbp+0x0]
  40805c:	mov    rsi,rbx
  40805f:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408064:	mov    rdi,QWORD PTR [rbp+0x0]
  408068:	mov    rsi,rbx
  40806b:	call   402140 <rb_dictionary_foreach_cur@plt>
  408070:	test   rax,rax
  408073:	jne    408050 <rb_strcasecmp@plt+0x5b30>
  408075:	mov    BYTE PTR [rip+0xc084],r14b        # 414100 <rb_strcasecmp@plt+0x11be0>
  40807c:	add    rsp,0x10
  408080:	pop    rbx
  408081:	pop    r14
  408083:	pop    rbp
  408084:	ret    
  408085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40808f:	nop
  408090:	push   r14
  408092:	push   rbx
  408093:	push   rax
  408094:	mov    r14,QWORD PTR [rdx]
  408097:	mov    rbx,QWORD PTR [rdx+0x8]
  40809b:	mov    rdi,rbx
  40809e:	xor    esi,esi
  4080a0:	mov    edx,0xa
  4080a5:	call   4022f0 <strtol@plt>
  4080aa:	lea    ecx,[rax-0x1]
  4080ad:	cmp    ecx,0xffff
  4080b3:	jae    4080c7 <rb_strcasecmp@plt+0x5ba7>
  4080b5:	movzx  esi,ax
  4080b8:	mov    rdi,r14
  4080bb:	add    rsp,0x8
  4080bf:	pop    rbx
  4080c0:	pop    r14
  4080c2:	jmp    408b00 <rb_strcasecmp@plt+0x65e0>
  4080c7:	lea    rsi,[rip+0x2d3e]        # 40ae0c <rb_strcasecmp@plt+0x88ec>
  4080ce:	mov    edi,0x43
  4080d3:	mov    rdx,r14
  4080d6:	mov    rcx,rbx
  4080d9:	xor    eax,eax
  4080db:	call   403120 <rb_strcasecmp@plt+0xc00>
  4080e0:	mov    edi,0x3
  4080e5:	call   4020e0 <exit@plt>
  4080ea:	nop    WORD PTR [rax+rax*1+0x0]
  4080f0:	push   rax
  4080f1:	mov    rdi,QWORD PTR [rip+0xbf40]        # 414038 <rb_strcasecmp@plt+0x11b18>
  4080f8:	test   rdi,rdi
  4080fb:	je     408102 <rb_strcasecmp@plt+0x5be2>
  4080fd:	call   4022e0 <rb_close@plt>
  408102:	mov    rdi,QWORD PTR [rip+0xbfef]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408109:	test   rdi,rdi
  40810c:	je     408113 <rb_strcasecmp@plt+0x5bf3>
  40810e:	call   4022e0 <rb_close@plt>
  408113:	vxorps xmm0,xmm0,xmm0
  408117:	vmovups YMMWORD PTR [rip+0xbfc1],ymm0        # 4140e0 <rb_strcasecmp@plt+0x11bc0>
  40811f:	vmovups YMMWORD PTR [rip+0xbf99],ymm0        # 4140c0 <rb_strcasecmp@plt+0x11ba0>
  408127:	vmovups YMMWORD PTR [rip+0xbf71],ymm0        # 4140a0 <rb_strcasecmp@plt+0x11b80>
  40812f:	vmovups YMMWORD PTR [rip+0xbf49],ymm0        # 414080 <rb_strcasecmp@plt+0x11b60>
  408137:	vmovups YMMWORD PTR [rip+0xbf21],ymm0        # 414060 <rb_strcasecmp@plt+0x11b40>
  40813f:	vmovups YMMWORD PTR [rip+0xbef9],ymm0        # 414040 <rb_strcasecmp@plt+0x11b20>
  408147:	vmovups YMMWORD PTR [rip+0xbed1],ymm0        # 414020 <rb_strcasecmp@plt+0x11b00>
  40814f:	vmovups YMMWORD PTR [rip+0xbea9],ymm0        # 414000 <rb_strcasecmp@plt+0x11ae0>
  408157:	vmovups YMMWORD PTR [rip+0xbe81],ymm0        # 413fe0 <rb_strcasecmp@plt+0x11ac0>
  40815f:	vmovups YMMWORD PTR [rip+0xbe59],ymm0        # 413fc0 <rb_strcasecmp@plt+0x11aa0>
  408167:	vmovups YMMWORD PTR [rip+0xbe31],ymm0        # 413fa0 <rb_strcasecmp@plt+0x11a80>
  40816f:	vmovups YMMWORD PTR [rip+0xbe09],ymm0        # 413f80 <rb_strcasecmp@plt+0x11a60>
  408177:	pop    rax
  408178:	vzeroupper 
  40817b:	ret    
  40817c:	nop    DWORD PTR [rax+0x0]
  408180:	push   r15
  408182:	push   r14
  408184:	push   r13
  408186:	push   r12
  408188:	push   rbx
  408189:	mov    r14,rdx
  40818c:	mov    rdi,QWORD PTR [rdx+0x8]
  408190:	xor    esi,esi
  408192:	mov    edx,0xa
  408197:	call   4022f0 <strtol@plt>
  40819c:	mov    r12,rax
  40819f:	mov    edi,0x1
  4081a4:	mov    esi,0x38
  4081a9:	call   402440 <calloc@plt>
  4081ae:	test   rax,rax
  4081b1:	je     40839b <rb_strcasecmp@plt+0x5e7b>
  4081b7:	mov    r15,rax
  4081ba:	lea    eax,[r12-0x1]
  4081bf:	cmp    eax,0xffff
  4081c4:	jae    4083a0 <rb_strcasecmp@plt+0x5e80>
  4081ca:	mov    rbx,r15
  4081cd:	mov    WORD PTR [r15+0x14],r12w
  4081d2:	mov    r13,QWORD PTR [r14]
  4081d5:	lea    rsi,[rip+0x2d05]        # 40aee1 <rb_strcasecmp@plt+0x89c1>
  4081dc:	mov    rdi,r13
  4081df:	call   402120 <strcasecmp@plt>
  4081e4:	test   eax,eax
  4081e6:	je     408262 <rb_strcasecmp@plt+0x5d42>
  4081e8:	lea    rsi,[rip+0x2cf9]        # 40aee8 <rb_strcasecmp@plt+0x89c8>
  4081ef:	mov    rdi,r13
  4081f2:	call   402120 <strcasecmp@plt>
  4081f7:	test   eax,eax
  4081f9:	je     408290 <rb_strcasecmp@plt+0x5d70>
  4081ff:	lea    rsi,[rip+0x2ce9]        # 40aeef <rb_strcasecmp@plt+0x89cf>
  408206:	mov    rdi,r13
  408209:	call   402120 <strcasecmp@plt>
  40820e:	test   eax,eax
  408210:	je     4082be <rb_strcasecmp@plt+0x5d9e>
  408216:	lea    rsi,[rip+0x2cde]        # 40aefb <rb_strcasecmp@plt+0x89db>
  40821d:	mov    rdi,r13
  408220:	call   402120 <strcasecmp@plt>
  408225:	test   eax,eax
  408227:	jne    4083c4 <rb_strcasecmp@plt+0x5ea4>
  40822d:	mov    DWORD PTR [rbx+0x10],0x4
  408234:	movzx  ecx,r12w
  408238:	lea    rdx,[rip+0x2c37]        # 40ae76 <rb_strcasecmp@plt+0x8956>
  40823f:	mov    esi,0x10
  408244:	mov    rdi,rbx
  408247:	xor    eax,eax
  408249:	call   402080 <snprintf@plt>
  40824e:	lea    rax,[rip+0xf2b]        # 409180 <rb_strcasecmp@plt+0x6c60>
  408255:	mov    QWORD PTR [rbx+0x18],rax
  408259:	mov    BYTE PTR [rbx+0x16],0x1
  40825d:	jmp    4082ee <rb_strcasecmp@plt+0x5dce>
  408262:	mov    DWORD PTR [rbx+0x10],0x1
  408269:	movzx  ecx,r12w
  40826d:	lea    rdx,[rip+0x2bdc]        # 40ae50 <rb_strcasecmp@plt+0x8930>
  408274:	mov    esi,0x10
  408279:	mov    rdi,rbx
  40827c:	xor    eax,eax
  40827e:	call   402080 <snprintf@plt>
  408283:	mov    BYTE PTR [rbx+0x16],0x0
  408287:	lea    rax,[rip+0xdd2]        # 409060 <rb_strcasecmp@plt+0x6b40>
  40828e:	jmp    4082ea <rb_strcasecmp@plt+0x5dca>
  408290:	mov    DWORD PTR [rbx+0x10],0x2
  408297:	movzx  ecx,r12w
  40829b:	lea    rdx,[rip+0x2bb9]        # 40ae5b <rb_strcasecmp@plt+0x893b>
  4082a2:	mov    esi,0x10
  4082a7:	mov    rdi,rbx
  4082aa:	xor    eax,eax
  4082ac:	call   402080 <snprintf@plt>
  4082b1:	mov    BYTE PTR [rbx+0x16],0x0
  4082b5:	lea    rax,[rip+0xe14]        # 4090d0 <rb_strcasecmp@plt+0x6bb0>
  4082bc:	jmp    4082ea <rb_strcasecmp@plt+0x5dca>
  4082be:	mov    DWORD PTR [rbx+0x10],0x3
  4082c5:	movzx  ecx,r12w
  4082c9:	lea    rdx,[rip+0x2b96]        # 40ae66 <rb_strcasecmp@plt+0x8946>
  4082d0:	mov    esi,0x10
  4082d5:	mov    rdi,rbx
  4082d8:	xor    eax,eax
  4082da:	call   402080 <snprintf@plt>
  4082df:	mov    BYTE PTR [rbx+0x16],0x0
  4082e3:	lea    rax,[rip+0xe96]        # 409180 <rb_strcasecmp@plt+0x6c60>
  4082ea:	mov    QWORD PTR [rbx+0x18],rax
  4082ee:	mov    rax,QWORD PTR [rip+0xbe13]        # 414108 <rb_strcasecmp@plt+0x11be8>
  4082f5:	test   rax,rax
  4082f8:	je     40834e <rb_strcasecmp@plt+0x5e2e>
  4082fa:	mov    edx,DWORD PTR [rbx+0x10]
  4082fd:	movzx  ecx,WORD PTR [rbx+0x14]
  408301:	mov    rsi,rax
  408304:	jmp    408319 <rb_strcasecmp@plt+0x5df9>
  408306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408310:	mov    rsi,QWORD PTR [rsi+0x10]
  408314:	test   rsi,rsi
  408317:	je     40834e <rb_strcasecmp@plt+0x5e2e>
  408319:	mov    rdi,QWORD PTR [rsi]
  40831c:	cmp    DWORD PTR [rdi+0x10],edx
  40831f:	jne    408310 <rb_strcasecmp@plt+0x5df0>
  408321:	cmp    WORD PTR [rdi+0x14],cx
  408325:	jne    408310 <rb_strcasecmp@plt+0x5df0>
  408327:	mov    rdx,QWORD PTR [r14]
  40832a:	lea    rsi,[rip+0x2b84]        # 40aeb5 <rb_strcasecmp@plt+0x8995>
  408331:	mov    edi,0x43
  408336:	xor    eax,eax
  408338:	call   403120 <rb_strcasecmp@plt+0xc00>
  40833d:	mov    rdi,rbx
  408340:	pop    rbx
  408341:	pop    r12
  408343:	pop    r13
  408345:	pop    r14
  408347:	pop    r15
  408349:	jmp    4021f0 <free@plt>
  40834e:	add    r15,0x20
  408352:	mov    QWORD PTR [rbx+0x20],rbx
  408356:	mov    QWORD PTR [rbx+0x28],0x0
  40835e:	mov    QWORD PTR [rbx+0x30],rax
  408362:	test   rax,rax
  408365:	je     408370 <rb_strcasecmp@plt+0x5e50>
  408367:	add    rax,0x8
  40836b:	mov    QWORD PTR [rax],r15
  40836e:	jmp    40837a <rb_strcasecmp@plt+0x5e5a>
  408370:	cmp    QWORD PTR [rip+0xbd98],0x0        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408378:	je     408392 <rb_strcasecmp@plt+0x5e72>
  40837a:	mov    QWORD PTR [rip+0xbd87],r15        # 414108 <rb_strcasecmp@plt+0x11be8>
  408381:	inc    QWORD PTR [rip+0xbd90]        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408388:	pop    rbx
  408389:	pop    r12
  40838b:	pop    r13
  40838d:	pop    r14
  40838f:	pop    r15
  408391:	ret    
  408392:	lea    rax,[rip+0xbd77]        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408399:	jmp    40836b <rb_strcasecmp@plt+0x5e4b>
  40839b:	call   402380 <rb_outofmemory@plt>
  4083a0:	mov    rdx,QWORD PTR [r14]
  4083a3:	mov    rcx,QWORD PTR [r14+0x8]
  4083a7:	lea    rsi,[rip+0x2a7d]        # 40ae2b <rb_strcasecmp@plt+0x890b>
  4083ae:	mov    edi,0x43
  4083b3:	xor    eax,eax
  4083b5:	call   403120 <rb_strcasecmp@plt+0xc00>
  4083ba:	mov    edi,0x3
  4083bf:	call   4020e0 <exit@plt>
  4083c4:	movzx  ecx,r12w
  4083c8:	lea    rsi,[rip+0x2ab8]        # 40ae87 <rb_strcasecmp@plt+0x8967>
  4083cf:	mov    edi,0x43
  4083d4:	mov    rdx,r13
  4083d7:	xor    eax,eax
  4083d9:	call   403120 <rb_strcasecmp@plt+0xc00>
  4083de:	mov    edi,0x3
  4083e3:	call   4020e0 <exit@plt>
  4083e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4083f0:	push   rbp
  4083f1:	push   r15
  4083f3:	push   r14
  4083f5:	push   r13
  4083f7:	push   r12
  4083f9:	push   rbx
  4083fa:	sub    rsp,0x18
  4083fe:	mov    r14,rdx
  408401:	mov    rbx,QWORD PTR [rdx]
  408404:	lea    rsi,[rip+0x2ad6]        # 40aee1 <rb_strcasecmp@plt+0x89c1>
  40840b:	mov    rdi,rbx
  40840e:	call   402120 <strcasecmp@plt>
  408413:	test   eax,eax
  408415:	je     408459 <rb_strcasecmp@plt+0x5f39>
  408417:	lea    rsi,[rip+0x2aca]        # 40aee8 <rb_strcasecmp@plt+0x89c8>
  40841e:	mov    rdi,rbx
  408421:	call   402120 <strcasecmp@plt>
  408426:	test   eax,eax
  408428:	je     408460 <rb_strcasecmp@plt+0x5f40>
  40842a:	lea    rsi,[rip+0x2abe]        # 40aeef <rb_strcasecmp@plt+0x89cf>
  408431:	mov    rdi,rbx
  408434:	call   402120 <strcasecmp@plt>
  408439:	test   eax,eax
  40843b:	je     408467 <rb_strcasecmp@plt+0x5f47>
  40843d:	lea    rsi,[rip+0x2ab7]        # 40aefb <rb_strcasecmp@plt+0x89db>
  408444:	mov    rdi,rbx
  408447:	call   402120 <strcasecmp@plt>
  40844c:	xor    ebp,ebp
  40844e:	test   eax,eax
  408450:	sete   bpl
  408454:	shl    ebp,0x2
  408457:	jmp    40846c <rb_strcasecmp@plt+0x5f4c>
  408459:	mov    ebp,0x1
  40845e:	jmp    40846c <rb_strcasecmp@plt+0x5f4c>
  408460:	mov    ebp,0x2
  408465:	jmp    40846c <rb_strcasecmp@plt+0x5f4c>
  408467:	mov    ebp,0x3
  40846c:	mov    rdi,QWORD PTR [r14+0x8]
  408470:	xor    esi,esi
  408472:	mov    edx,0xa
  408477:	call   4022f0 <strtol@plt>
  40847c:	lea    ecx,[rax-0x1]
  40847f:	cmp    ecx,0xffff
  408485:	jae    408687 <rb_strcasecmp@plt+0x6167>
  40848b:	test   ebp,ebp
  40848d:	je     4086ab <rb_strcasecmp@plt+0x618b>
  408493:	mov    rcx,QWORD PTR [rip+0xbc6e]        # 414108 <rb_strcasecmp@plt+0x11be8>
  40849a:	test   rcx,rcx
  40849d:	jne    4084bd <rb_strcasecmp@plt+0x5f9d>
  40849f:	jmp    408665 <rb_strcasecmp@plt+0x6145>
  4084a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084ae:	xchg   ax,ax
  4084b0:	mov    rcx,QWORD PTR [rcx+0x10]
  4084b4:	test   rcx,rcx
  4084b7:	je     408665 <rb_strcasecmp@plt+0x6145>
  4084bd:	mov    rbx,QWORD PTR [rcx]
  4084c0:	cmp    DWORD PTR [rbx+0x10],ebp
  4084c3:	jne    4084b0 <rb_strcasecmp@plt+0x5f90>
  4084c5:	cmp    WORD PTR [rbx+0x14],ax
  4084c9:	jne    4084b0 <rb_strcasecmp@plt+0x5f90>
  4084cb:	lea    r12,[rip+0xbc56]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4084d2:	mov    rdi,QWORD PTR [r12]
  4084d6:	lea    r14,[rsp+0x8]
  4084db:	mov    rsi,r14
  4084de:	call   402240 <rb_dictionary_foreach_start@plt>
  4084e3:	mov    rdi,QWORD PTR [r12]
  4084e7:	mov    rsi,r14
  4084ea:	call   402140 <rb_dictionary_foreach_cur@plt>
  4084ef:	test   rax,rax
  4084f2:	je     4085f8 <rb_strcasecmp@plt+0x60d8>
  4084f8:	mov    r15,rax
  4084fb:	lea    r13,[rip+0x78de]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408502:	lea    r14,[rsp+0x8]
  408507:	jmp    408541 <rb_strcasecmp@plt+0x6021>
  408509:	nop    DWORD PTR [rax+0x0]
  408510:	dec    DWORD PTR [r15+0x1cc]
  408517:	je     4085b0 <rb_strcasecmp@plt+0x6090>
  40851d:	mov    rdi,QWORD PTR [r12]
  408521:	mov    rsi,r14
  408524:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408529:	mov    rdi,QWORD PTR [r12]
  40852d:	mov    rsi,r14
  408530:	call   402140 <rb_dictionary_foreach_cur@plt>
  408535:	mov    r15,rax
  408538:	test   rax,rax
  40853b:	je     4085f8 <rb_strcasecmp@plt+0x60d8>
  408541:	mov    eax,DWORD PTR [r13+0x18]
  408545:	mov    rcx,QWORD PTR [r15+0x1d0]
  40854c:	shl    rax,0x5
  408550:	mov    rbp,QWORD PTR [rcx+rax*1+0x10]
  408555:	test   rbp,rbp
  408558:	je     40851d <rb_strcasecmp@plt+0x5ffd>
  40855a:	inc    DWORD PTR [r15+0x1cc]
  408561:	mov    rax,QWORD PTR [rbp+0x0]
  408565:	test   rax,rax
  408568:	je     408510 <rb_strcasecmp@plt+0x5ff0>
  40856a:	movzx  ecx,WORD PTR [rbx+0x14]
  40856e:	jmp    408579 <rb_strcasecmp@plt+0x6059>
  408570:	mov    rax,QWORD PTR [rax+0x10]
  408574:	test   rax,rax
  408577:	je     408510 <rb_strcasecmp@plt+0x5ff0>
  408579:	mov    rdi,QWORD PTR [rax]
  40857c:	mov    rdx,QWORD PTR [rdi+0x10]
  408580:	cmp    WORD PTR [rdx+0x14],cx
  408584:	jne    408570 <rb_strcasecmp@plt+0x6050>
  408586:	mov    edx,DWORD PTR [rdx+0x10]
  408589:	cmp    edx,DWORD PTR [rbx+0x10]
  40858c:	jne    408570 <rb_strcasecmp@plt+0x6050>
  40858e:	mov    rdx,QWORD PTR [rdi+0x28]
  408592:	mov    rax,QWORD PTR [rdi+0x30]
  408596:	lea    rcx,[rdi+0x28]
  40859a:	test   rax,rax
  40859d:	je     4085bd <rb_strcasecmp@plt+0x609d>
  40859f:	mov    QWORD PTR [rax+0x8],rdx
  4085a3:	mov    rdx,QWORD PTR [rcx]
  4085a6:	jmp    4085c1 <rb_strcasecmp@plt+0x60a1>
  4085a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4085b0:	mov    rdi,r15
  4085b3:	call   403b60 <rb_strcasecmp@plt+0x1640>
  4085b8:	jmp    40851d <rb_strcasecmp@plt+0x5ffd>
  4085bd:	mov    QWORD PTR [rbp+0x8],rdx
  4085c1:	test   rdx,rdx
  4085c4:	lea    rdx,[rdx+0x10]
  4085c8:	cmove  rdx,rbp
  4085cc:	mov    QWORD PTR [rdx],rax
  4085cf:	vxorps xmm0,xmm0,xmm0
  4085d3:	vmovups XMMWORD PTR [rcx],xmm0
  4085d7:	dec    QWORD PTR [rbp+0x10]
  4085db:	call   4021f0 <free@plt>
  4085e0:	cmp    QWORD PTR [rbp+0x10],0x0
  4085e5:	jne    408510 <rb_strcasecmp@plt+0x5ff0>
  4085eb:	mov    rdi,r15
  4085ee:	call   408940 <rb_strcasecmp@plt+0x6420>
  4085f3:	jmp    408510 <rb_strcasecmp@plt+0x5ff0>
  4085f8:	mov    rdx,QWORD PTR [rbx+0x28]
  4085fc:	mov    rcx,QWORD PTR [rbx+0x30]
  408600:	lea    rax,[rbx+0x28]
  408604:	test   rcx,rcx
  408607:	je     408612 <rb_strcasecmp@plt+0x60f2>
  408609:	mov    QWORD PTR [rcx+0x8],rdx
  40860d:	mov    rdx,QWORD PTR [rax]
  408610:	jmp    408619 <rb_strcasecmp@plt+0x60f9>
  408612:	mov    QWORD PTR [rip+0xbaf7],rdx        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408619:	test   rdx,rdx
  40861c:	lea    rdx,[rdx+0x10]
  408620:	lea    rsi,[rip+0xbae1]        # 414108 <rb_strcasecmp@plt+0x11be8>
  408627:	cmove  rdx,rsi
  40862b:	mov    QWORD PTR [rdx],rcx
  40862e:	vxorps xmm0,xmm0,xmm0
  408632:	vmovups XMMWORD PTR [rax],xmm0
  408636:	dec    QWORD PTR [rip+0xbadb]        # 414118 <rb_strcasecmp@plt+0x11bf8>
  40863d:	mov    rdi,rbx
  408640:	call   4021f0 <free@plt>
  408645:	cmp    QWORD PTR [rip+0xbacb],0x0        # 414118 <rb_strcasecmp@plt+0x11bf8>
  40864d:	jne    408656 <rb_strcasecmp@plt+0x6136>
  40864f:	mov    BYTE PTR [rip+0xbaaa],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  408656:	add    rsp,0x18
  40865a:	pop    rbx
  40865b:	pop    r12
  40865d:	pop    r13
  40865f:	pop    r14
  408661:	pop    r15
  408663:	pop    rbp
  408664:	ret    
  408665:	mov    rdx,QWORD PTR [r14]
  408668:	lea    rsi,[rip+0x2928]        # 40af97 <rb_strcasecmp@plt+0x8a77>
  40866f:	mov    edi,0x43
  408674:	mov    ecx,eax
  408676:	xor    eax,eax
  408678:	call   403120 <rb_strcasecmp@plt+0xc00>
  40867d:	mov    edi,0x3
  408682:	call   4020e0 <exit@plt>
  408687:	mov    rdx,QWORD PTR [r14]
  40868a:	mov    rcx,QWORD PTR [r14+0x8]
  40868e:	lea    rsi,[rip+0x289c]        # 40af31 <rb_strcasecmp@plt+0x8a11>
  408695:	mov    edi,0x43
  40869a:	xor    eax,eax
  40869c:	call   403120 <rb_strcasecmp@plt+0xc00>
  4086a1:	mov    edi,0x3
  4086a6:	call   4020e0 <exit@plt>
  4086ab:	mov    rdx,QWORD PTR [r14]
  4086ae:	lea    rsi,[rip+0x28ab]        # 40af60 <rb_strcasecmp@plt+0x8a40>
  4086b5:	jmp    40866f <rb_strcasecmp@plt+0x614f>
  4086b7:	nop    WORD PTR [rax+rax*1+0x0]
  4086c0:	push   r15
  4086c2:	push   r14
  4086c4:	push   rbx
  4086c5:	sub    rsp,0x10
  4086c9:	mov    rbx,QWORD PTR [rip+0xba38]        # 414108 <rb_strcasecmp@plt+0x11be8>
  4086d0:	test   rbx,rbx
  4086d3:	je     408737 <rb_strcasecmp@plt+0x6217>
  4086d5:	lea    r14,[rip+0xba2c]        # 414108 <rb_strcasecmp@plt+0x11be8>
  4086dc:	jmp    40870c <rb_strcasecmp@plt+0x61ec>
  4086de:	xchg   ax,ax
  4086e0:	mov    QWORD PTR [rip+0xba29],rcx        # 414110 <rb_strcasecmp@plt+0x11bf0>
  4086e7:	test   rcx,rcx
  4086ea:	lea    rcx,[rcx+0x10]
  4086ee:	cmove  rcx,r14
  4086f2:	mov    QWORD PTR [rcx],rax
  4086f5:	vxorps xmm0,xmm0,xmm0
  4086f9:	vmovups XMMWORD PTR [rbx],xmm0
  4086fd:	dec    QWORD PTR [rip+0xba14]        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408704:	mov    rbx,r15
  408707:	test   r15,r15
  40870a:	je     408737 <rb_strcasecmp@plt+0x6217>
  40870c:	mov    rdi,QWORD PTR [rbx]
  40870f:	mov    r15,QWORD PTR [rbx+0x10]
  408713:	test   rdi,rdi
  408716:	je     40871d <rb_strcasecmp@plt+0x61fd>
  408718:	call   4021f0 <free@plt>
  40871d:	mov    rcx,QWORD PTR [rbx+0x8]
  408721:	mov    rax,QWORD PTR [rbx+0x10]
  408725:	add    rbx,0x8
  408729:	test   rax,rax
  40872c:	je     4086e0 <rb_strcasecmp@plt+0x61c0>
  40872e:	mov    QWORD PTR [rax+0x8],rcx
  408732:	mov    rcx,QWORD PTR [rbx]
  408735:	jmp    4086e7 <rb_strcasecmp@plt+0x61c7>
  408737:	lea    r14,[rip+0xb9ea]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40873e:	mov    rdi,QWORD PTR [r14]
  408741:	mov    rbx,rsp
  408744:	mov    rsi,rbx
  408747:	call   402240 <rb_dictionary_foreach_start@plt>
  40874c:	mov    rdi,QWORD PTR [r14]
  40874f:	mov    rsi,rbx
  408752:	call   402140 <rb_dictionary_foreach_cur@plt>
  408757:	test   rax,rax
  40875a:	je     408783 <rb_strcasecmp@plt+0x6263>
  40875c:	mov    rbx,rsp
  40875f:	nop
  408760:	mov    rdi,rax
  408763:	call   408940 <rb_strcasecmp@plt+0x6420>
  408768:	mov    rdi,QWORD PTR [r14]
  40876b:	mov    rsi,rbx
  40876e:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408773:	mov    rdi,QWORD PTR [r14]
  408776:	mov    rsi,rbx
  408779:	call   402140 <rb_dictionary_foreach_cur@plt>
  40877e:	test   rax,rax
  408781:	jne    408760 <rb_strcasecmp@plt+0x6240>
  408783:	mov    BYTE PTR [rip+0xb976],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  40878a:	add    rsp,0x10
  40878e:	pop    rbx
  40878f:	pop    r14
  408791:	pop    r15
  408793:	ret    
  408794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40879e:	xchg   ax,ax
  4087a0:	push   r14
  4087a2:	push   rbx
  4087a3:	sub    rsp,0x18
  4087a7:	lea    r14,[rip+0xb97a]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4087ae:	mov    rdi,QWORD PTR [r14]
  4087b1:	lea    rbx,[rsp+0x8]
  4087b6:	mov    rsi,rbx
  4087b9:	call   402240 <rb_dictionary_foreach_start@plt>
  4087be:	mov    rdi,QWORD PTR [r14]
  4087c1:	mov    rsi,rbx
  4087c4:	call   402140 <rb_dictionary_foreach_cur@plt>
  4087c9:	test   rax,rax
  4087cc:	je     408803 <rb_strcasecmp@plt+0x62e3>
  4087ce:	lea    rbx,[rsp+0x8]
  4087d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087dd:	nop    DWORD PTR [rax]
  4087e0:	mov    rdi,rax
  4087e3:	call   408940 <rb_strcasecmp@plt+0x6420>
  4087e8:	mov    rdi,QWORD PTR [r14]
  4087eb:	mov    rsi,rbx
  4087ee:	call   4021d0 <rb_dictionary_foreach_next@plt>
  4087f3:	mov    rdi,QWORD PTR [r14]
  4087f6:	mov    rsi,rbx
  4087f9:	call   402140 <rb_dictionary_foreach_cur@plt>
  4087fe:	test   rax,rax
  408801:	jne    4087e0 <rb_strcasecmp@plt+0x62c0>
  408803:	add    rsp,0x18
  408807:	pop    rbx
  408808:	pop    r14
  40880a:	ret    
  40880b:	nop    DWORD PTR [rax+rax*1+0x0]
  408810:	push   rbp
  408811:	push   r15
  408813:	push   r14
  408815:	push   r13
  408817:	push   r12
  408819:	push   rbx
  40881a:	push   rax
  40881b:	mov    r14,rdi
  40881e:	cmp    BYTE PTR [rip+0xb8db],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  408825:	je     4088ae <rb_strcasecmp@plt+0x638e>
  40882b:	cmp    QWORD PTR [rip+0xb8e5],0x0        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408833:	je     4088ae <rb_strcasecmp@plt+0x638e>
  408835:	inc    DWORD PTR [r14+0x1cc]
  40883c:	lea    rax,[rip+0x759d]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408843:	mov    ebx,DWORD PTR [rax+0x18]
  408846:	mov    edi,0x1
  40884b:	mov    esi,0x20
  408850:	call   402440 <calloc@plt>
  408855:	test   rax,rax
  408858:	je     408930 <rb_strcasecmp@plt+0x6410>
  40885e:	mov    r15,QWORD PTR [r14+0x1d0]
  408865:	shl    rbx,0x5
  408869:	mov    QWORD PTR [r15+rbx*1+0x10],rax
  40886e:	lea    rax,[rip+0xb8bb]        # 414130 <rb_strcasecmp@plt+0x11c10>
  408875:	mov    r13,QWORD PTR [rax]
  408878:	test   r13,r13
  40887b:	je     408917 <rb_strcasecmp@plt+0x63f7>
  408881:	lea    r12,[rip+0x2124]        # 40a9ac <rb_strcasecmp@plt+0x848c>
  408888:	mov    rbx,r13
  40888b:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	mov    rbp,QWORD PTR [rbx]
  408893:	mov    rdi,QWORD PTR [rbp+0x20]
  408897:	mov    rsi,r12
  40889a:	call   402120 <strcasecmp@plt>
  40889f:	test   eax,eax
  4088a1:	je     4088c2 <rb_strcasecmp@plt+0x63a2>
  4088a3:	mov    rbx,QWORD PTR [rbx+0x10]
  4088a7:	test   rbx,rbx
  4088aa:	jne    408890 <rb_strcasecmp@plt+0x6370>
  4088ac:	jmp    4088e0 <rb_strcasecmp@plt+0x63c0>
  4088ae:	lea    rax,[rip+0x752b]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  4088b5:	mov    esi,DWORD PTR [rax+0x18]
  4088b8:	mov    rdi,r14
  4088bb:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  4088c0:	jmp    40891f <rb_strcasecmp@plt+0x63ff>
  4088c2:	test   rbp,rbp
  4088c5:	je     4088e0 <rb_strcasecmp@plt+0x63c0>
  4088c7:	mov    eax,DWORD PTR [rbp+0x18]
  4088ca:	shl    rax,0x5
  4088ce:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  4088d4:	jne    40891f <rb_strcasecmp@plt+0x63ff>
  4088d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088e0:	mov    rbx,QWORD PTR [r13+0x0]
  4088e4:	mov    rdi,QWORD PTR [rbx+0x20]
  4088e8:	lea    rsi,[rip+0x229d]        # 40ab8c <rb_strcasecmp@plt+0x866c>
  4088ef:	call   402120 <strcasecmp@plt>
  4088f4:	test   eax,eax
  4088f6:	je     408903 <rb_strcasecmp@plt+0x63e3>
  4088f8:	mov    r13,QWORD PTR [r13+0x10]
  4088fc:	test   r13,r13
  4088ff:	jne    4088e0 <rb_strcasecmp@plt+0x63c0>
  408901:	jmp    408917 <rb_strcasecmp@plt+0x63f7>
  408903:	test   rbx,rbx
  408906:	je     408917 <rb_strcasecmp@plt+0x63f7>
  408908:	mov    eax,DWORD PTR [rbx+0x18]
  40890b:	shl    rax,0x5
  40890f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408915:	jne    40891f <rb_strcasecmp@plt+0x63ff>
  408917:	mov    rdi,r14
  40891a:	call   409220 <rb_strcasecmp@plt+0x6d00>
  40891f:	mov    al,0x1
  408921:	add    rsp,0x8
  408925:	pop    rbx
  408926:	pop    r12
  408928:	pop    r13
  40892a:	pop    r14
  40892c:	pop    r15
  40892e:	pop    rbp
  40892f:	ret    
  408930:	call   402380 <rb_outofmemory@plt>
  408935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40893f:	nop
  408940:	push   r15
  408942:	push   r14
  408944:	push   r13
  408946:	push   r12
  408948:	push   rbx
  408949:	lea    r12,[rip+0x7490]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408950:	mov    eax,DWORD PTR [r12+0x18]
  408955:	mov    rcx,QWORD PTR [rdi+0x1d0]
  40895c:	shl    rax,0x5
  408960:	mov    r14,QWORD PTR [rcx+rax*1+0x10]
  408965:	test   r14,r14
  408968:	je     4089de <rb_strcasecmp@plt+0x64be>
  40896a:	mov    r15,rdi
  40896d:	mov    edi,DWORD PTR [rdi]
  40896f:	lea    rsi,[rip+0x26a1]        # 40b017 <rb_strcasecmp@plt+0x8af7>
  408976:	xor    eax,eax
  408978:	call   403050 <rb_strcasecmp@plt+0xb30>
  40897d:	mov    r13,QWORD PTR [r14]
  408980:	test   r13,r13
  408983:	je     4089a8 <rb_strcasecmp@plt+0x6488>
  408985:	mov    rbx,QWORD PTR [r13+0x0]
  408989:	mov    r13,QWORD PTR [r13+0x10]
  40898d:	mov    rdi,QWORD PTR [rbx+0x8]
  408991:	call   4022e0 <rb_close@plt>
  408996:	test   rbx,rbx
  408999:	je     408980 <rb_strcasecmp@plt+0x6460>
  40899b:	mov    rdi,rbx
  40899e:	call   4021f0 <free@plt>
  4089a3:	test   r13,r13
  4089a6:	jne    408985 <rb_strcasecmp@plt+0x6465>
  4089a8:	mov    rdi,r14
  4089ab:	call   4021f0 <free@plt>
  4089b0:	mov    esi,DWORD PTR [r12+0x18]
  4089b5:	mov    rax,QWORD PTR [r15+0x1d0]
  4089bc:	mov    rcx,rsi
  4089bf:	shl    rcx,0x5
  4089c3:	vxorps xmm0,xmm0,xmm0
  4089c7:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  4089cd:	mov    rdi,r15
  4089d0:	call   403c10 <rb_strcasecmp@plt+0x16f0>
  4089d5:	dec    DWORD PTR [r15+0x1cc]
  4089dc:	je     4089e8 <rb_strcasecmp@plt+0x64c8>
  4089de:	pop    rbx
  4089df:	pop    r12
  4089e1:	pop    r13
  4089e3:	pop    r14
  4089e5:	pop    r15
  4089e7:	ret    
  4089e8:	mov    rdi,r15
  4089eb:	pop    rbx
  4089ec:	pop    r12
  4089ee:	pop    r13
  4089f0:	pop    r14
  4089f2:	pop    r15
  4089f4:	jmp    403b60 <rb_strcasecmp@plt+0x1640>
  4089f9:	nop    DWORD PTR [rax+0x0]
  408a00:	push   rbp
  408a01:	push   r15
  408a03:	push   r14
  408a05:	push   r13
  408a07:	push   r12
  408a09:	push   rbx
  408a0a:	push   rax
  408a0b:	lea    rax,[rip+0x73ce]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408a12:	mov    eax,DWORD PTR [rax+0x18]
  408a15:	mov    r15,QWORD PTR [rdi+0x1d0]
  408a1c:	shl    rax,0x5
  408a20:	mov    rax,QWORD PTR [r15+rax*1+0x10]
  408a25:	test   rax,rax
  408a28:	je     408a30 <rb_strcasecmp@plt+0x6510>
  408a2a:	cmp    BYTE PTR [rax+0x18],0x0
  408a2e:	je     408a3f <rb_strcasecmp@plt+0x651f>
  408a30:	add    rsp,0x8
  408a34:	pop    rbx
  408a35:	pop    r12
  408a37:	pop    r13
  408a39:	pop    r14
  408a3b:	pop    r15
  408a3d:	pop    rbp
  408a3e:	ret    
  408a3f:	mov    r14,rdi
  408a42:	lea    rax,[rip+0xb6e7]        # 414130 <rb_strcasecmp@plt+0x11c10>
  408a49:	mov    r13,QWORD PTR [rax]
  408a4c:	test   r13,r13
  408a4f:	je     408adb <rb_strcasecmp@plt+0x65bb>
  408a55:	lea    r12,[rip+0x1f50]        # 40a9ac <rb_strcasecmp@plt+0x848c>
  408a5c:	mov    rbx,r13
  408a5f:	nop
  408a60:	mov    rbp,QWORD PTR [rbx]
  408a63:	mov    rdi,QWORD PTR [rbp+0x20]
  408a67:	mov    rsi,r12
  408a6a:	call   402120 <strcasecmp@plt>
  408a6f:	test   eax,eax
  408a71:	je     408a7e <rb_strcasecmp@plt+0x655e>
  408a73:	mov    rbx,QWORD PTR [rbx+0x10]
  408a77:	test   rbx,rbx
  408a7a:	jne    408a60 <rb_strcasecmp@plt+0x6540>
  408a7c:	jmp    408aa0 <rb_strcasecmp@plt+0x6580>
  408a7e:	test   rbp,rbp
  408a81:	je     408aa0 <rb_strcasecmp@plt+0x6580>
  408a83:	mov    eax,DWORD PTR [rbp+0x18]
  408a86:	shl    rax,0x5
  408a8a:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408a90:	jne    408a30 <rb_strcasecmp@plt+0x6510>
  408a92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a9c:	nop    DWORD PTR [rax+0x0]
  408aa0:	mov    rbx,QWORD PTR [r13+0x0]
  408aa4:	mov    rdi,QWORD PTR [rbx+0x20]
  408aa8:	lea    rsi,[rip+0x20dd]        # 40ab8c <rb_strcasecmp@plt+0x866c>
  408aaf:	call   402120 <strcasecmp@plt>
  408ab4:	test   eax,eax
  408ab6:	je     408ac3 <rb_strcasecmp@plt+0x65a3>
  408ab8:	mov    r13,QWORD PTR [r13+0x10]
  408abc:	test   r13,r13
  408abf:	jne    408aa0 <rb_strcasecmp@plt+0x6580>
  408ac1:	jmp    408adb <rb_strcasecmp@plt+0x65bb>
  408ac3:	test   rbx,rbx
  408ac6:	je     408adb <rb_strcasecmp@plt+0x65bb>
  408ac8:	mov    eax,DWORD PTR [rbx+0x18]
  408acb:	shl    rax,0x5
  408acf:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408ad5:	jne    408a30 <rb_strcasecmp@plt+0x6510>
  408adb:	mov    rdi,r14
  408ade:	add    rsp,0x8
  408ae2:	pop    rbx
  408ae3:	pop    r12
  408ae5:	pop    r13
  408ae7:	pop    r14
  408ae9:	pop    r15
  408aeb:	pop    rbp
  408aec:	jmp    409220 <rb_strcasecmp@plt+0x6d00>
  408af1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408afb:	nop    DWORD PTR [rax+rax*1+0x0]
  408b00:	push   rbp
  408b01:	push   r15
  408b03:	push   r14
  408b05:	push   r12
  408b07:	push   rbx
  408b08:	sub    rsp,0xa0
  408b0f:	mov    r12d,esi
  408b12:	mov    r14,rdi
  408b15:	mov    DWORD PTR [rsp+0xc],0x1
  408b1d:	lea    rsi,[rsp+0x20]
  408b22:	call   402260 <rb_inet_pton_sock@plt>
  408b27:	test   eax,eax
  408b29:	je     408d77 <rb_strcasecmp@plt+0x6857>
  408b2f:	mov    eax,r12d
  408b32:	rol    ax,0x8
  408b36:	movbe  WORD PTR [rsp+0x22],r12w
  408b3e:	movzx  edi,WORD PTR [rsp+0x20]
  408b43:	cmp    edi,0xa
  408b46:	jne    408b98 <rb_strcasecmp@plt+0x6678>
  408b48:	mov    ecx,DWORD PTR [rsp+0x28]
  408b4c:	lea    r15,[rip+0xb4ed]        # 414040 <rb_strcasecmp@plt+0x11b20>
  408b53:	cmp    ecx,DWORD PTR [rip+0xb527]        # 414080 <rb_strcasecmp@plt+0x11b60>
  408b59:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b5b:	mov    ecx,DWORD PTR [rsp+0x2c]
  408b5f:	cmp    ecx,DWORD PTR [rip+0xb51f]        # 414084 <rb_strcasecmp@plt+0x11b64>
  408b65:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b67:	mov    ecx,DWORD PTR [rsp+0x30]
  408b6b:	cmp    ecx,DWORD PTR [rip+0xb517]        # 414088 <rb_strcasecmp@plt+0x11b68>
  408b71:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b73:	mov    ecx,DWORD PTR [rsp+0x34]
  408b77:	cmp    ecx,DWORD PTR [rip+0xb50f]        # 41408c <rb_strcasecmp@plt+0x11b6c>
  408b7d:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b7f:	cmp    ax,WORD PTR [rip+0xb4f4]        # 41407a <rb_strcasecmp@plt+0x11b5a>
  408b86:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b88:	cmp    QWORD PTR [rip+0xb568],0x0        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408b90:	jne    408c8a <rb_strcasecmp@plt+0x676a>
  408b96:	jmp    408bc2 <rb_strcasecmp@plt+0x66a2>
  408b98:	mov    ecx,DWORD PTR [rsp+0x24]
  408b9c:	lea    r15,[rip+0xb3dd]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  408ba3:	cmp    ecx,DWORD PTR [rip+0xb413]        # 413fbc <rb_strcasecmp@plt+0x11a9c>
  408ba9:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408bab:	cmp    ax,WORD PTR [rip+0xb408]        # 413fba <rb_strcasecmp@plt+0x11a9a>
  408bb2:	jne    408bc2 <rb_strcasecmp@plt+0x66a2>
  408bb4:	cmp    QWORD PTR [rip+0xb47c],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  408bbc:	jne    408c8a <rb_strcasecmp@plt+0x676a>
  408bc2:	lea    rcx,[rip+0x216a]        # 40ad33 <rb_strcasecmp@plt+0x8813>
  408bc9:	mov    esi,0x1
  408bce:	xor    edx,edx
  408bd0:	call   402110 <rb_socket@plt>
  408bd5:	test   rax,rax
  408bd8:	je     408d9b <rb_strcasecmp@plt+0x687b>
  408bde:	mov    rbx,rax
  408be1:	mov    rdi,rax
  408be4:	call   4020d0 <rb_get_fd@plt>
  408be9:	lea    rcx,[rsp+0xc]
  408bee:	mov    edi,eax
  408bf0:	mov    esi,0x1
  408bf5:	mov    edx,0x2
  408bfa:	mov    r8d,0x4
  408c00:	call   4021b0 <setsockopt@plt>
  408c05:	test   eax,eax
  408c07:	jne    408db0 <rb_strcasecmp@plt+0x6890>
  408c0d:	mov    rdi,rbx
  408c10:	call   4020d0 <rb_get_fd@plt>
  408c15:	cmp    WORD PTR [rsp+0x20],0x2
  408c1b:	mov    ecx,0x10
  408c20:	mov    edx,0x1c
  408c25:	cmove  edx,ecx
  408c28:	lea    rsi,[rsp+0x20]
  408c2d:	mov    edi,eax
  408c2f:	call   4024e0 <bind@plt>
  408c34:	test   eax,eax
  408c36:	je     408c4d <rb_strcasecmp@plt+0x672d>
  408c38:	call   402390 <__errno_location@plt>
  408c3d:	mov    edi,DWORD PTR [rax]
  408c3f:	call   4022a0 <strerror@plt>
  408c44:	lea    rsi,[rip+0x2140]        # 40ad8b <rb_strcasecmp@plt+0x886b>
  408c4b:	jmp    408c73 <rb_strcasecmp@plt+0x6753>
  408c4d:	mov    rdi,rbx
  408c50:	mov    esi,0x1000
  408c55:	xor    edx,edx
  408c57:	call   402500 <rb_listen@plt>
  408c5c:	test   eax,eax
  408c5e:	je     408c9a <rb_strcasecmp@plt+0x677a>
  408c60:	call   402390 <__errno_location@plt>
  408c65:	mov    edi,DWORD PTR [rax]
  408c67:	call   4022a0 <strerror@plt>
  408c6c:	lea    rsi,[rip+0x2137]        # 40adaa <rb_strcasecmp@plt+0x888a>
  408c73:	mov    edi,0x57
  408c78:	mov    rdx,rax
  408c7b:	xor    eax,eax
  408c7d:	call   403120 <rb_strcasecmp@plt+0xc00>
  408c82:	mov    rdi,rbx
  408c85:	call   4022e0 <rb_close@plt>
  408c8a:	add    rsp,0xa0
  408c91:	pop    rbx
  408c92:	pop    r12
  408c94:	pop    r14
  408c96:	pop    r15
  408c98:	pop    rbp
  408c99:	ret    
  408c9a:	mov    rdi,QWORD PTR [r15+0xb8]
  408ca1:	test   rdi,rdi
  408ca4:	je     408cab <rb_strcasecmp@plt+0x678b>
  408ca6:	call   4022e0 <rb_close@plt>
  408cab:	mov    QWORD PTR [r15+0xb8],rbx
  408cb2:	lea    rbp,[rip+0xb46f]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408cb9:	mov    rdi,QWORD PTR [rbp+0x0]
  408cbd:	lea    rbx,[rsp+0x10]
  408cc2:	mov    rsi,rbx
  408cc5:	call   402240 <rb_dictionary_foreach_start@plt>
  408cca:	mov    rdi,QWORD PTR [rbp+0x0]
  408cce:	mov    rsi,rbx
  408cd1:	call   402140 <rb_dictionary_foreach_cur@plt>
  408cd6:	test   rax,rax
  408cd9:	je     408d05 <rb_strcasecmp@plt+0x67e5>
  408cdb:	lea    rbx,[rsp+0x10]
  408ce0:	mov    rdi,rax
  408ce3:	call   408940 <rb_strcasecmp@plt+0x6420>
  408ce8:	mov    rdi,QWORD PTR [rbp+0x0]
  408cec:	mov    rsi,rbx
  408cef:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408cf4:	mov    rdi,QWORD PTR [rbp+0x0]
  408cf8:	mov    rsi,rbx
  408cfb:	call   402140 <rb_dictionary_foreach_cur@plt>
  408d00:	test   rax,rax
  408d03:	jne    408ce0 <rb_strcasecmp@plt+0x67c0>
  408d05:	mov    edx,0x35
  408d0a:	mov    rdi,r15
  408d0d:	mov    rsi,r14
  408d10:	call   4021c0 <rb_strlcpy@plt>
  408d15:	mov    WORD PTR [r15+0x36],r12w
  408d1a:	vmovups ymm0,YMMWORD PTR [rsp+0x20]
  408d20:	vmovups ymm1,YMMWORD PTR [rsp+0x40]
  408d26:	vmovups ymm2,YMMWORD PTR [rsp+0x60]
  408d2c:	vmovups ymm3,YMMWORD PTR [rsp+0x80]
  408d35:	vmovups YMMWORD PTR [r15+0x38],ymm0
  408d3b:	vmovups YMMWORD PTR [r15+0x58],ymm1
  408d41:	vmovups YMMWORD PTR [r15+0x78],ymm2
  408d47:	vmovups YMMWORD PTR [r15+0x98],ymm3
  408d50:	mov    BYTE PTR [rip+0xb3a9],0x1        # 414100 <rb_strcasecmp@plt+0x11be0>
  408d57:	mov    rdi,QWORD PTR [r15+0xb8]
  408d5e:	lea    rdx,[rip+0x7b]        # 408de0 <rb_strcasecmp@plt+0x68c0>
  408d65:	xor    esi,esi
  408d67:	mov    rcx,r15
  408d6a:	vzeroupper 
  408d6d:	call   402430 <rb_accept_tcp@plt>
  408d72:	jmp    408c8a <rb_strcasecmp@plt+0x676a>
  408d77:	movzx  ecx,r12w
  408d7b:	lea    rsi,[rip+0x1f91]        # 40ad13 <rb_strcasecmp@plt+0x87f3>
  408d82:	mov    edi,0x43
  408d87:	mov    rdx,r14
  408d8a:	xor    eax,eax
  408d8c:	call   403120 <rb_strcasecmp@plt+0xc00>
  408d91:	mov    edi,0x3
  408d96:	call   4020e0 <exit@plt>
  408d9b:	call   402390 <__errno_location@plt>
  408da0:	mov    edi,DWORD PTR [rax]
  408da2:	call   4022a0 <strerror@plt>
  408da7:	lea    rsi,[rip+0x1f99]        # 40ad47 <rb_strcasecmp@plt+0x8827>
  408dae:	jmp    408dc3 <rb_strcasecmp@plt+0x68a3>
  408db0:	call   402390 <__errno_location@plt>
  408db5:	mov    edi,DWORD PTR [rax]
  408db7:	call   4022a0 <strerror@plt>
  408dbc:	lea    rsi,[rip+0x1fa2]        # 40ad65 <rb_strcasecmp@plt+0x8845>
  408dc3:	mov    edi,0x43
  408dc8:	mov    rdx,rax
  408dcb:	xor    eax,eax
  408dcd:	call   403120 <rb_strcasecmp@plt+0xc00>
  408dd2:	mov    edi,0x3
  408dd7:	call   4020e0 <exit@plt>
  408ddc:	nop    DWORD PTR [rax+0x0]
  408de0:	push   r15
  408de2:	push   r14
  408de4:	push   rbx
  408de5:	sub    rsp,0xa0
  408dec:	mov    r14,rdi
  408def:	mov    DWORD PTR [rsp+0xc],0x80
  408df7:	test   esi,esi
  408df9:	jne    408ef9 <rb_strcasecmp@plt+0x69d9>
  408dff:	test   r8,r8
  408e02:	je     408ef9 <rb_strcasecmp@plt+0x69d9>
  408e08:	mov    rdi,r14
  408e0b:	call   4020d0 <rb_get_fd@plt>
  408e10:	lea    rsi,[rsp+0x20]
  408e15:	lea    rdx,[rsp+0xc]
  408e1a:	mov    edi,eax
  408e1c:	call   402300 <getsockname@plt>
  408e21:	test   eax,eax
  408e23:	jne    408ef9 <rb_strcasecmp@plt+0x69d9>
  408e29:	lea    r15,[rip+0xb2f8]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408e30:	mov    rdi,QWORD PTR [r15]
  408e33:	lea    rbx,[rsp+0x10]
  408e38:	mov    rsi,rbx
  408e3b:	call   402240 <rb_dictionary_foreach_start@plt>
  408e40:	mov    rdi,QWORD PTR [r15]
  408e43:	mov    rsi,rbx
  408e46:	call   402140 <rb_dictionary_foreach_cur@plt>
  408e4b:	test   rax,rax
  408e4e:	je     408ef9 <rb_strcasecmp@plt+0x69d9>
  408e54:	lea    rbx,[rsp+0x10]
  408e59:	jmp    408e7b <rb_strcasecmp@plt+0x695b>
  408e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e60:	mov    rdi,QWORD PTR [r15]
  408e63:	mov    rsi,rbx
  408e66:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408e6b:	mov    rdi,QWORD PTR [r15]
  408e6e:	mov    rsi,rbx
  408e71:	call   402140 <rb_dictionary_foreach_cur@plt>
  408e76:	test   rax,rax
  408e79:	je     408ef9 <rb_strcasecmp@plt+0x69d9>
  408e7b:	movzx  ecx,WORD PTR [rax+0xf8]
  408e82:	cmp    cx,WORD PTR [rsp+0x20]
  408e87:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408e89:	cmp    cx,0xa
  408e8d:	je     408eb0 <rb_strcasecmp@plt+0x6990>
  408e8f:	cmp    cx,0x2
  408e93:	jne    408f0e <rb_strcasecmp@plt+0x69ee>
  408e95:	mov    ecx,DWORD PTR [rsp+0x24]
  408e99:	cmp    ecx,DWORD PTR [rax+0xfc]
  408e9f:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408ea1:	jmp    408ee0 <rb_strcasecmp@plt+0x69c0>
  408ea3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ead:	nop    DWORD PTR [rax]
  408eb0:	mov    ecx,DWORD PTR [rsp+0x28]
  408eb4:	cmp    ecx,DWORD PTR [rax+0x100]
  408eba:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408ebc:	mov    ecx,DWORD PTR [rsp+0x2c]
  408ec0:	cmp    ecx,DWORD PTR [rax+0x104]
  408ec6:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408ec8:	mov    ecx,DWORD PTR [rsp+0x30]
  408ecc:	cmp    ecx,DWORD PTR [rax+0x108]
  408ed2:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408ed4:	mov    ecx,DWORD PTR [rsp+0x34]
  408ed8:	cmp    ecx,DWORD PTR [rax+0x10c]
  408ede:	jne    408e60 <rb_strcasecmp@plt+0x6940>
  408ee0:	lea    rdx,[rip+0x49]        # 408f30 <rb_strcasecmp@plt+0x6a10>
  408ee7:	mov    rdi,r14
  408eea:	mov    esi,0x1
  408eef:	mov    rcx,rax
  408ef2:	call   4020b0 <rb_setselect@plt>
  408ef7:	jmp    408f01 <rb_strcasecmp@plt+0x69e1>
  408ef9:	mov    rdi,r14
  408efc:	call   4022e0 <rb_close@plt>
  408f01:	add    rsp,0xa0
  408f08:	pop    rbx
  408f09:	pop    r14
  408f0b:	pop    r15
  408f0d:	ret    
  408f0e:	lea    rsi,[rip+0x1eb6]        # 40adcb <rb_strcasecmp@plt+0x88ab>
  408f15:	mov    edi,0x43
  408f1a:	xor    eax,eax
  408f1c:	call   403120 <rb_strcasecmp@plt+0xc00>
  408f21:	mov    edi,0x3
  408f26:	call   4020e0 <exit@plt>
  408f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f30:	push   rbp
  408f31:	push   r15
  408f33:	push   r14
  408f35:	push   r13
  408f37:	push   r12
  408f39:	push   rbx
  408f3a:	sub    rsp,0x88
  408f41:	mov    r14,rsi
  408f44:	mov    r12,rdi
  408f47:	lea    rax,[rip+0x6e92]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408f4e:	mov    eax,DWORD PTR [rax+0x18]
  408f51:	mov    rcx,QWORD PTR [rsi+0x1d0]
  408f58:	shl    rax,0x5
  408f5c:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  408f61:	mov    rsi,rsp
  408f64:	mov    edx,0x80
  408f69:	call   402220 <rb_read@plt>
  408f6e:	test   rax,rax
  408f71:	js     408fbc <rb_strcasecmp@plt+0x6a9c>
  408f73:	je     40903e <rb_strcasecmp@plt+0x6b1e>
  408f79:	mov    rbp,QWORD PTR [rip+0xb188]        # 414108 <rb_strcasecmp@plt+0x11be8>
  408f80:	test   rbp,rbp
  408f83:	je     40903e <rb_strcasecmp@plt+0x6b1e>
  408f89:	mov    r13,rsp
  408f8c:	nop    DWORD PTR [rax+0x0]
  408f90:	mov    rbx,QWORD PTR [rbp+0x0]
  408f94:	mov    rdi,rbx
  408f97:	call   402200 <strlen@plt>
  408f9c:	mov    rdi,rbx
  408f9f:	mov    rsi,r13
  408fa2:	mov    rdx,rax
  408fa5:	call   402170 <strncmp@plt>
  408faa:	test   eax,eax
  408fac:	je     408fe5 <rb_strcasecmp@plt+0x6ac5>
  408fae:	mov    rbp,QWORD PTR [rbp+0x10]
  408fb2:	test   rbp,rbp
  408fb5:	jne    408f90 <rb_strcasecmp@plt+0x6a70>
  408fb7:	jmp    40903e <rb_strcasecmp@plt+0x6b1e>
  408fbc:	call   402390 <__errno_location@plt>
  408fc1:	mov    edi,DWORD PTR [rax]
  408fc3:	call   402060 <rb_ignore_errno@plt>
  408fc8:	test   eax,eax
  408fca:	je     40903e <rb_strcasecmp@plt+0x6b1e>
  408fcc:	lea    rdx,[rip+0xffffffffffffff5d]        # 408f30 <rb_strcasecmp@plt+0x6a10>
  408fd3:	mov    rdi,r12
  408fd6:	mov    esi,0x1
  408fdb:	mov    rcx,r14
  408fde:	call   4020b0 <rb_setselect@plt>
  408fe3:	jmp    409046 <rb_strcasecmp@plt+0x6b26>
  408fe5:	mov    rbp,QWORD PTR [r15]
  408fe8:	test   rbp,rbp
  408feb:	je     409018 <rb_strcasecmp@plt+0x6af8>
  408fed:	nop    DWORD PTR [rax]
  408ff0:	mov    rbx,QWORD PTR [rbp+0x0]
  408ff4:	mov    rbp,QWORD PTR [rbp+0x10]
  408ff8:	mov    rdi,QWORD PTR [rbx+0x8]
  408ffc:	call   4022e0 <rb_close@plt>
  409001:	test   rbx,rbx
  409004:	je     40900e <rb_strcasecmp@plt+0x6aee>
  409006:	mov    rdi,rbx
  409009:	call   4021f0 <free@plt>
  40900e:	test   rbp,rbp
  409011:	jne    408ff0 <rb_strcasecmp@plt+0x6ad0>
  409013:	test   r15,r15
  409016:	je     409020 <rb_strcasecmp@plt+0x6b00>
  409018:	mov    rdi,r15
  40901b:	call   4021f0 <free@plt>
  409020:	lea    rax,[rip+0x6db9]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  409027:	mov    esi,DWORD PTR [rax+0x18]
  40902a:	lea    rcx,[rip+0x1dc7]        # 40adf8 <rb_strcasecmp@plt+0x88d8>
  409031:	mov    rdx,rsp
  409034:	mov    rdi,r14
  409037:	xor    eax,eax
  409039:	call   403830 <rb_strcasecmp@plt+0x1310>
  40903e:	mov    rdi,r12
  409041:	call   4022e0 <rb_close@plt>
  409046:	add    rsp,0x88
  40904d:	pop    rbx
  40904e:	pop    r12
  409050:	pop    r13
  409052:	pop    r14
  409054:	pop    r15
  409056:	pop    rbp
  409057:	ret    
  409058:	nop    DWORD PTR [rax+rax*1+0x0]
  409060:	push   r14
  409062:	push   rbx
  409063:	sub    rsp,0x18
  409067:	mov    rbx,rdi
  40906a:	mov    WORD PTR [rsp+0xe],0x104
  409071:	mov    rax,QWORD PTR [rdi+0x18]
  409075:	movzx  ecx,WORD PTR [rax+0x3a]
  409079:	mov    WORD PTR [rsp+0x10],cx
  40907e:	mov    eax,DWORD PTR [rax+0x3c]
  409081:	mov    DWORD PTR [rsp+0x12],eax
  409085:	mov    BYTE PTR [rsp+0x16],0x0
  40908a:	mov    rdi,QWORD PTR [rdi+0x8]
  40908e:	lea    rsi,[rsp+0xe]
  409093:	mov    edx,0x9
  409098:	call   4021a0 <rb_write@plt>
  40909d:	test   rax,rax
  4090a0:	js     4090c0 <rb_strcasecmp@plt+0x6ba0>
  4090a2:	mov    r14,QWORD PTR [rbx+0x8]
  4090a6:	mov    rbx,QWORD PTR [rbx+0x10]
  4090aa:	mov    rdi,rbx
  4090ad:	call   402200 <strlen@plt>
  4090b2:	lea    edx,[rax+0x1]
  4090b5:	mov    rdi,r14
  4090b8:	mov    rsi,rbx
  4090bb:	call   4021a0 <rb_write@plt>
  4090c0:	add    rsp,0x18
  4090c4:	pop    rbx
  4090c5:	pop    r14
  4090c7:	ret    
  4090c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4090d0:	push   r14
  4090d2:	push   rbx
  4090d3:	sub    rsp,0x28
  4090d7:	mov    rbx,rdi
  4090da:	mov    rax,QWORD PTR [rdi]
  4090dd:	mov    WORD PTR [rsp+0x4],0x1
  4090e4:	mov    DWORD PTR [rsp],0x5000105
  4090eb:	movzx  eax,WORD PTR [rax+0xf8]
  4090f2:	cmp    ax,0xa
  4090f6:	je     40911a <rb_strcasecmp@plt+0x6bfa>
  4090f8:	cmp    ax,0x2
  4090fc:	jne    40916f <rb_strcasecmp@plt+0x6c4f>
  4090fe:	mov    BYTE PTR [rsp+0x6],0x1
  409103:	mov    rax,QWORD PTR [rbx+0x18]
  409107:	mov    ecx,DWORD PTR [rax+0x3c]
  40910a:	mov    DWORD PTR [rsp+0x7],ecx
  40910e:	mov    edx,0xfffffff3
  409113:	mov    ecx,0xb
  409118:	jmp    409138 <rb_strcasecmp@plt+0x6c18>
  40911a:	mov    BYTE PTR [rsp+0x6],0x4
  40911f:	mov    rax,QWORD PTR [rbx+0x18]
  409123:	vmovups xmm0,XMMWORD PTR [rax+0x40]
  409128:	vmovups XMMWORD PTR [rsp+0x7],xmm0
  40912e:	mov    edx,0xffffffe7
  409133:	mov    ecx,0x17
  409138:	movzx  eax,WORD PTR [rax+0x3a]
  40913c:	mov    WORD PTR [rsp+rcx*1],ax
  409140:	mov    rdi,QWORD PTR [rbx+0x8]
  409144:	mov    rsi,rsp
  409147:	call   4021a0 <rb_write@plt>
  40914c:	test   rax,rax
  40914f:	jle    40916f <rb_strcasecmp@plt+0x6c4f>
  409151:	mov    r14,QWORD PTR [rbx+0x8]
  409155:	mov    rbx,QWORD PTR [rbx+0x10]
  409159:	mov    rdi,rbx
  40915c:	call   402200 <strlen@plt>
  409161:	lea    edx,[rax+0x1]
  409164:	mov    rdi,r14
  409167:	mov    rsi,rbx
  40916a:	call   4021a0 <rb_write@plt>
  40916f:	add    rsp,0x28
  409173:	pop    rbx
  409174:	pop    r14
  409176:	ret    
  409177:	nop    WORD PTR [rax+rax*1+0x0]
  409180:	push   r15
  409182:	push   r14
  409184:	push   rbx
  409185:	sub    rsp,0x80
  40918c:	mov    r15,rdi
  40918f:	mov    rcx,QWORD PTR [rdi+0x18]
  409193:	movzx  r8d,WORD PTR [rcx+0x36]
  409198:	lea    rdx,[rip+0x1d69]        # 40af08 <rb_strcasecmp@plt+0x89e8>
  40919f:	mov    r14,rsp
  4091a2:	mov    esi,0x80
  4091a7:	mov    rdi,r14
  4091aa:	xor    eax,eax
  4091ac:	call   402080 <snprintf@plt>
  4091b1:	mov    rbx,QWORD PTR [r15+0x8]
  4091b5:	mov    rdi,r14
  4091b8:	call   402200 <strlen@plt>
  4091bd:	mov    rdi,rbx
  4091c0:	mov    rsi,r14
  4091c3:	mov    edx,eax
  4091c5:	call   4021a0 <rb_write@plt>
  4091ca:	test   rax,rax
  4091cd:	jle    409207 <rb_strcasecmp@plt+0x6ce7>
  4091cf:	mov    r14,QWORD PTR [r15+0x8]
  4091d3:	mov    rbx,QWORD PTR [r15+0x10]
  4091d7:	mov    rdi,rbx
  4091da:	call   402200 <strlen@plt>
  4091df:	lea    edx,[rax+0x1]
  4091e2:	mov    rdi,r14
  4091e5:	mov    rsi,rbx
  4091e8:	call   4021a0 <rb_write@plt>
  4091ed:	test   rax,rax
  4091f0:	jle    409207 <rb_strcasecmp@plt+0x6ce7>
  4091f2:	mov    rdi,QWORD PTR [r15+0x8]
  4091f6:	lea    rsi,[rip+0x1d24]        # 40af21 <rb_strcasecmp@plt+0x8a01>
  4091fd:	mov    edx,0x2
  409202:	call   4021a0 <rb_write@plt>
  409207:	add    rsp,0x80
  40920e:	pop    rbx
  40920f:	pop    r14
  409211:	pop    r15
  409213:	ret    
  409214:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40921e:	xchg   ax,ax
  409220:	push   rbp
  409221:	push   r15
  409223:	push   r14
  409225:	push   r13
  409227:	push   r12
  409229:	push   rbx
  40922a:	sub    rsp,0x118
  409231:	mov    r12,rdi
  409234:	lea    rax,[rip+0x6ba5]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  40923b:	mov    ebx,DWORD PTR [rax+0x18]
  40923e:	mov    rax,QWORD PTR [rdi+0x1d0]
  409245:	shl    rbx,0x5
  409249:	mov    r14,QWORD PTR [rax+rbx*1+0x10]
  40924e:	movsxd rbp,DWORD PTR [rip+0x6c03]        # 40fe58 <rb_strcasecmp@plt+0xd938>
  409255:	call   402280 <rb_current_time@plt>
  40925a:	add    rax,rbp
  40925d:	mov    rcx,QWORD PTR [r12+0x1d0]
  409265:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  40926a:	mov    BYTE PTR [r14+0x18],0x1
  40926f:	mov    rbp,QWORD PTR [rip+0xae92]        # 414108 <rb_strcasecmp@plt+0x11be8>
  409276:	test   rbp,rbp
  409279:	je     4094d1 <rb_strcasecmp@plt+0x6fb1>
  40927f:	mov    r15,QWORD PTR [rbp+0x0]
  409283:	lea    rax,[rip+0x6b56]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  40928a:	mov    eax,DWORD PTR [rax+0x18]
  40928d:	shl    rax,0x5
  409291:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  409296:	mov    edi,0x1
  40929b:	mov    esi,0x38
  4092a0:	call   402440 <calloc@plt>
  4092a5:	test   rax,rax
  4092a8:	je     4094f5 <rb_strcasecmp@plt+0x6fd5>
  4092ae:	mov    r14,rax
  4092b1:	lea    r13,[r12+0xf8]
  4092b9:	mov    QWORD PTR [rsp],r12
  4092bd:	nop    DWORD PTR [rax]
  4092c0:	mov    DWORD PTR [rsp+0xc],0x1
  4092c8:	movzx  edi,WORD PTR [r13+0x0]
  4092cd:	lea    rax,[rip+0xacac]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  4092d4:	cmp    edi,0xa
  4092d7:	jne    4092eb <rb_strcasecmp@plt+0x6dcb>
  4092d9:	cmp    DWORD PTR [r15+0x10],0x1
  4092de:	lea    rax,[rip+0xad5b]        # 414040 <rb_strcasecmp@plt+0x11b20>
  4092e5:	je     409400 <rb_strcasecmp@plt+0x6ee0>
  4092eb:	cmp    QWORD PTR [rax+0xb8],0x0
  4092f3:	je     409400 <rb_strcasecmp@plt+0x6ee0>
  4092f9:	vmovups ymm0,YMMWORD PTR [r13+0x0]
  4092ff:	vmovups ymm1,YMMWORD PTR [r13+0x20]
  409305:	vmovups ymm2,YMMWORD PTR [r13+0x40]
  40930b:	vmovups ymm3,YMMWORD PTR [r13+0x60]
  409311:	vmovups YMMWORD PTR [rsp+0xf0],ymm3
  40931a:	vmovups YMMWORD PTR [rsp+0xd0],ymm2
  409323:	vmovups YMMWORD PTR [rsp+0xb0],ymm1
  40932c:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  409335:	vmovups ymm0,YMMWORD PTR [rax+0x38]
  40933a:	vmovups ymm1,YMMWORD PTR [rax+0x58]
  40933f:	vmovups ymm2,YMMWORD PTR [rax+0x78]
  409344:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  40934a:	vmovups YMMWORD PTR [rsp+0x30],ymm1
  409350:	vmovups YMMWORD PTR [rsp+0x50],ymm2
  409356:	vmovups ymm0,YMMWORD PTR [rax+0x98]
  40935e:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  409364:	mov    QWORD PTR [r14],r12
  409367:	mov    QWORD PTR [r14+0x10],r15
  40936b:	mov    QWORD PTR [r14+0x18],rax
  40936f:	mov    esi,0x1
  409374:	xor    edx,edx
  409376:	mov    rcx,r15
  409379:	vzeroupper 
  40937c:	call   402110 <rb_socket@plt>
  409381:	mov    QWORD PTR [r14+0x8],rax
  409385:	test   rax,rax
  409388:	je     40940a <rb_strcasecmp@plt+0x6eea>
  40938e:	mov    r12,rax
  409391:	mov    rdi,rax
  409394:	call   4020d0 <rb_get_fd@plt>
  409399:	mov    edi,eax
  40939b:	mov    esi,0x6
  4093a0:	mov    edx,0x1
  4093a5:	lea    rcx,[rsp+0xc]
  4093aa:	mov    r8d,0x4
  4093b0:	call   4021b0 <setsockopt@plt>
  4093b5:	mov    WORD PTR [rsp+0x12],0x0
  4093bc:	movzx  eax,WORD PTR [r15+0x14]
  4093c1:	movbe  WORD PTR [rsp+0x92],ax
  4093cb:	test   rbx,rbx
  4093ce:	je     4094fa <rb_strcasecmp@plt+0x6fda>
  4093d4:	lea    rax,[r14+0x20]
  4093d8:	mov    QWORD PTR [r14+0x20],r14
  4093dc:	mov    QWORD PTR [r14+0x28],0x0
  4093e4:	mov    rcx,QWORD PTR [rbx]
  4093e7:	mov    QWORD PTR [r14+0x30],rcx
  4093eb:	test   rcx,rcx
  4093ee:	je     409439 <rb_strcasecmp@plt+0x6f19>
  4093f0:	add    rcx,0x8
  4093f4:	mov    QWORD PTR [rcx],rax
  4093f7:	jmp    409444 <rb_strcasecmp@plt+0x6f24>
  4093f9:	nop    DWORD PTR [rax+0x0]
  409400:	mov    rdi,r14
  409403:	call   4021f0 <free@plt>
  409408:	jmp    409483 <rb_strcasecmp@plt+0x6f63>
  40940a:	call   402390 <__errno_location@plt>
  40940f:	mov    edi,DWORD PTR [rax]
  409411:	call   4022a0 <strerror@plt>
  409416:	mov    edi,0x57
  40941b:	lea    rsi,[rip+0x1bc5]        # 40afe7 <rb_strcasecmp@plt+0x8ac7>
  409422:	mov    rdx,r15
  409425:	mov    rcx,rax
  409428:	xor    eax,eax
  40942a:	call   403120 <rb_strcasecmp@plt+0xc00>
  40942f:	mov    rdi,r14
  409432:	call   4021f0 <free@plt>
  409437:	jmp    40947f <rb_strcasecmp@plt+0x6f5f>
  409439:	cmp    QWORD PTR [rbx+0x8],0x0
  40943e:	je     4094c8 <rb_strcasecmp@plt+0x6fa8>
  409444:	mov    QWORD PTR [rbx],rax
  409447:	inc    QWORD PTR [rbx+0x10]
  40944b:	cmp    BYTE PTR [r15+0x16],0x0
  409450:	mov    r9d,DWORD PTR [rip+0x6a01]        # 40fe58 <rb_strcasecmp@plt+0xd938>
  409457:	mov    rdi,r12
  40945a:	lea    rsi,[rsp+0x90]
  409462:	lea    rdx,[rsp+0x10]
  409467:	lea    rcx,[rip+0xb2]        # 409520 <rb_strcasecmp@plt+0x7000>
  40946e:	mov    r8,r14
  409471:	je     40947a <rb_strcasecmp@plt+0x6f5a>
  409473:	call   402070 <rb_connect_tcp_ssl@plt>
  409478:	jmp    40947f <rb_strcasecmp@plt+0x6f5f>
  40947a:	call   402090 <rb_connect_tcp@plt>
  40947f:	mov    r12,QWORD PTR [rsp]
  409483:	mov    rbp,QWORD PTR [rbp+0x10]
  409487:	test   rbp,rbp
  40948a:	je     4094d1 <rb_strcasecmp@plt+0x6fb1>
  40948c:	mov    rax,QWORD PTR [r12+0x1d0]
  409494:	mov    r15,QWORD PTR [rbp+0x0]
  409498:	lea    rcx,[rip+0x6941]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  40949f:	mov    ecx,DWORD PTR [rcx+0x18]
  4094a2:	shl    rcx,0x5
  4094a6:	mov    rbx,QWORD PTR [rax+rcx*1+0x10]
  4094ab:	mov    edi,0x1
  4094b0:	mov    esi,0x38
  4094b5:	call   402440 <calloc@plt>
  4094ba:	mov    r14,rax
  4094bd:	test   rax,rax
  4094c0:	jne    4092c0 <rb_strcasecmp@plt+0x6da0>
  4094c6:	jmp    4094f5 <rb_strcasecmp@plt+0x6fd5>
  4094c8:	lea    rcx,[rbx+0x8]
  4094cc:	jmp    4093f4 <rb_strcasecmp@plt+0x6ed4>
  4094d1:	mov    edi,DWORD PTR [r12]
  4094d5:	lea    rsi,[rip+0x1aea]        # 40afc6 <rb_strcasecmp@plt+0x8aa6>
  4094dc:	xor    eax,eax
  4094de:	call   403050 <rb_strcasecmp@plt+0xb30>
  4094e3:	add    rsp,0x118
  4094ea:	pop    rbx
  4094eb:	pop    r12
  4094ed:	pop    r13
  4094ef:	pop    r14
  4094f1:	pop    r15
  4094f3:	pop    rbp
  4094f4:	ret    
  4094f5:	call   402380 <rb_outofmemory@plt>
  4094fa:	lea    rdi,[rip+0x1a23]        # 40af24 <rb_strcasecmp@plt+0x8a04>
  409501:	lea    rsi,[rip+0xfff]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  409508:	lea    rcx,[rip+0x1057]        # 40a566 <rb_strcasecmp@plt+0x8046>
  40950f:	mov    edx,0x91
  409514:	call   4020f0 <__assert_fail@plt>
  409519:	nop    DWORD PTR [rax+0x0]
  409520:	push   r14
  409522:	push   rbx
  409523:	push   rax
  409524:	mov    rbx,rdx
  409527:	mov    rcx,QWORD PTR [rdx]
  40952a:	lea    rax,[rip+0x68af]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  409531:	mov    eax,DWORD PTR [rax+0x18]
  409534:	mov    rdx,QWORD PTR [rcx+0x1d0]
  40953b:	shl    rax,0x5
  40953f:	mov    r14,QWORD PTR [rdx+rax*1+0x10]
  409544:	test   esi,esi
  409546:	jne    40958a <rb_strcasecmp@plt+0x706a>
  409548:	cmp    BYTE PTR [rip+0xabb1],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  40954f:	je     40958a <rb_strcasecmp@plt+0x706a>
  409551:	mov    rax,QWORD PTR [rbx+0x10]
  409555:	movzx  ecx,WORD PTR [rcx+0xf8]
  40955c:	cmp    cx,0xa
  409560:	je     409574 <rb_strcasecmp@plt+0x7054>
  409562:	cmp    cx,0x2
  409566:	jne    40958a <rb_strcasecmp@plt+0x706a>
  409568:	cmp    QWORD PTR [rip+0xaac8],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  409570:	jne    409584 <rb_strcasecmp@plt+0x7064>
  409572:	jmp    40958a <rb_strcasecmp@plt+0x706a>
  409574:	cmp    BYTE PTR [rax+0x17],0x0
  409578:	je     40958a <rb_strcasecmp@plt+0x706a>
  40957a:	cmp    QWORD PTR [rip+0xab76],0x0        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  409582:	je     40958a <rb_strcasecmp@plt+0x706a>
  409584:	mov    rdi,rbx
  409587:	call   QWORD PTR [rax+0x18]
  40958a:	mov    rdi,QWORD PTR [rbx+0x8]
  40958e:	call   4022e0 <rb_close@plt>
  409593:	test   r14,r14
  409596:	je     4095df <rb_strcasecmp@plt+0x70bf>
  409598:	mov    rdx,QWORD PTR [rbx+0x28]
  40959c:	mov    rcx,QWORD PTR [rbx+0x30]
  4095a0:	lea    rax,[rbx+0x28]
  4095a4:	test   rcx,rcx
  4095a7:	je     4095b2 <rb_strcasecmp@plt+0x7092>
  4095a9:	mov    QWORD PTR [rcx+0x8],rdx
  4095ad:	mov    rdx,QWORD PTR [rax]
  4095b0:	jmp    4095b6 <rb_strcasecmp@plt+0x7096>
  4095b2:	mov    QWORD PTR [r14+0x8],rdx
  4095b6:	test   rdx,rdx
  4095b9:	lea    rdx,[rdx+0x10]
  4095bd:	cmove  rdx,r14
  4095c1:	mov    QWORD PTR [rdx],rcx
  4095c4:	vxorps xmm0,xmm0,xmm0
  4095c8:	vmovups XMMWORD PTR [rax],xmm0
  4095cc:	dec    QWORD PTR [r14+0x10]
  4095d0:	mov    rdi,rbx
  4095d3:	add    rsp,0x8
  4095d7:	pop    rbx
  4095d8:	pop    r14
  4095da:	jmp    4021f0 <free@plt>
  4095df:	lea    rdi,[rip+0x193e]        # 40af24 <rb_strcasecmp@plt+0x8a04>
  4095e6:	lea    rsi,[rip+0xf1a]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  4095ed:	lea    rcx,[rip+0xf2f]        # 40a523 <rb_strcasecmp@plt+0x8003>
  4095f4:	mov    edx,0xec
  4095f9:	call   4020f0 <__assert_fail@plt>
  4095fe:	xchg   ax,ax
  409600:	endbr64 
  409604:	push   r15
  409606:	lea    r15,[rip+0x4753]        # 40dd60 <rb_strcasecmp@plt+0xb840>
  40960d:	push   r14
  40960f:	mov    r14,rdx
  409612:	push   r13
  409614:	mov    r13,rsi
  409617:	push   r12
  409619:	mov    r12d,edi
  40961c:	push   rbp
  40961d:	lea    rbp,[rip+0x4744]        # 40dd68 <rb_strcasecmp@plt+0xb848>
  409624:	push   rbx
  409625:	sub    rbp,r15
  409628:	sub    rsp,0x8
  40962c:	call   402000 <rb_helper_loop@plt-0x30>
  409631:	sar    rbp,0x3
  409635:	je     409656 <rb_strcasecmp@plt+0x7136>
  409637:	xor    ebx,ebx
  409639:	nop    DWORD PTR [rax+0x0]
  409640:	mov    rdx,r14
  409643:	mov    rsi,r13
  409646:	mov    edi,r12d
  409649:	call   QWORD PTR [r15+rbx*8]
  40964d:	add    rbx,0x1
  409651:	cmp    rbp,rbx
  409654:	jne    409640 <rb_strcasecmp@plt+0x7120>
  409656:	add    rsp,0x8
  40965a:	pop    rbx
  40965b:	pop    rbp
  40965c:	pop    r12
  40965e:	pop    r13
  409660:	pop    r14
  409662:	pop    r15
  409664:	ret    
  409665:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409670:	endbr64 
  409674:	ret    

Disassembly of section .fini:

0000000000409678 <.fini>:
  409678:	endbr64 
  40967c:	sub    rsp,0x8
  409680:	add    rsp,0x8
  409684:	ret    
